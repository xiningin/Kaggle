{"cell_type":{"1b1b68ce":"code","c1ce346a":"code","e6f430d7":"code","5d818699":"code","b428a5f0":"code","5caf4623":"code","864f4810":"code","84eade89":"code","c2311434":"code","7aeae728":"code","16da158c":"code","bcb11db4":"code","6d301fe7":"code","915d32d5":"code","f41523ac":"code","94bf1a12":"code","4015079a":"code","0bffb318":"code","5c8c313a":"code","4b803e38":"markdown","1b5a06d4":"markdown","17b4a833":"markdown","01af3b0f":"markdown","bf77dec4":"markdown","e0f9c938":"markdown","ba4813a2":"markdown","a742d179":"markdown","1587c732":"markdown","cfb09ffc":"markdown","088aab96":"markdown","d110ddbb":"markdown","621b5c72":"markdown","f92ef8a5":"markdown","80e874ec":"markdown"},"source":{"1b1b68ce":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c1ce346a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime, timedelta\nfrom pandas import DataFrame\nimport missingno as msno\nfrom matplotlib.colors import ListedColormap\nimport altair as alt\n\n%matplotlib inline","e6f430d7":"df = pd.read_csv('\/kaggle\/input\/netflix-shows\/netflix_titles.csv')\ndf","5d818699":"#\u8996\u89ba\u5316\u8868\u793a\u7f3a\u5931\u503c\n#df.isnull().sum()\nmsno.bar(df)\n","b428a5f0":"#\u8cc7\u6599\u4e2dmovie\u548cTV\u7684\u6bd4\u4f8b\nType = df.groupby(by='type').show_id.count()\nType =pd.DataFrame(Type)\n#Type\ncolors = ['#ff4e50','#fcbe32']\nseparated = (.1,0)\nplt.figure(figsize=(12, 6))\nplt.title('Propotion of the Data')\nplt.pie(Type.show_id, labels = Type.index ,autopct='%1.1f%%', explode=separated,colors = colors)\nplt.show()","5caf4623":"Rating = df.groupby(by='rating').show_id.count()\nRating =pd.DataFrame(Rating)\nRating =Rating.reset_index()\nplt.figure(figsize=(12, 6))\nplt.title('Netflix Rating')\nplt.xlabel('Rating')\nplt.ylabel('Number of Issues')\nplt.bar(Rating.rating, Rating.show_id , color='#ff4e50')\nplt.xticks(rotation=90)\nplt.show()","864f4810":"#\u540c\u500b\u5c0e\u6f14\u62cd\u904e\u5e7e\u90e8\u96fb\u5f71\/\u96fb\u8996\u5287\u5728netflix\u4e0a\u67b6\na = df.groupby(by='director').show_id.count()\na= pd.DataFrame(a)\na.rename(columns={'show_id':'Count'}, inplace=True)\na = a.sort_values(by='Count',ascending=False)\na = a.reset_index()\n#plt.bar(a.index, a.show_id)\n#\u5728Netflix\u53ea\u6709\u4e0a\u67b6\u4e00\u90e8\u4f5c\u54c1\u7684\u67093312\u500b\u5c0e\u6f14\uff0c\u4f46\u4e5f\u67091\u500b\u5c0e\u6f14\u4e00\u500b\u4eba\u5c31\u5728Netflix\u4e0a\u67b6\u4e8618\u90e8\u4f5c\u54c1\nnetflix_director_count = a.groupby(by='Count').director.count()\nnetflix_director_count = pd.DataFrame(netflix_director_count)\nnetflix_director_count = netflix_director_count.reset_index()\nnetflix_director_count\n# plt.bar(netflix_director_count.Count, netflix_director_count.director)\n# plt.xlim((0, 18))\n# plt.xlabel(\"Number of Movies\/ TV in Netflix\",fontsize=13)\n# plt.ylabel(\"How many  Movies\/ TV\",fontsize=13)\n\n\n","84eade89":"a = df.groupby(by='director').show_id.count()\na= pd.DataFrame(a)\na.rename(columns={'show_id':'Count'}, inplace=True)\na = a.sort_values(by='Count',ascending=False)\na = a.reset_index()\nb = a.head(10)\nb\nplt.figure(figsize=(12, 6))\n\nplt.plot(b.director, b.Count)\nplt.title('Director with the most works')\nplt.xlabel('Director')\nplt.ylabel('Numbers of  works')\nplt.xticks(rotation=90)\nplt.show()","c2311434":"df[df['director']=='Ra\u00fal Campos, Jan Suter']","7aeae728":"df[df['director']=='Marcus Raboy']","16da158c":"plt.figure(figsize=(12, 6))\nsns.countplot(x='rating',data = df,hue='type',palette='YlOrBr')\nplt.xticks(rotation = 90)\nplt.show()","bcb11db4":"#top 15 countries (Use sunburst)\nimport plotly.express as px\ntop_country = df[\"country\"].value_counts()[:15]\ntop_country = pd.DataFrame(top_country)\ntop_country = top_country.reset_index()\nfig =px.sunburst(top_country,  path=['index'],values='country',color_continuous_scale='OrRd'\n                ,color='country')\nfig.show()","6d301fe7":"release_year = df.groupby(['release_year','type']).show_id.count()\nrelease_year = pd.DataFrame(release_year)\nrelease_year = release_year.reset_index()\nrelease_year[release_year.release_year<2000].show_id.sum()\n#2000\u5e74\u4ee5\u524d\u7684\u7247\u5171\u6709449\u90e8\uff0c\u6b64\u4efd\u8cc7\u6599\u5eab\u5171\u67097789\u90e8\u7247\nlatest = release_year[release_year.release_year>2000]\n# year = sns.load_dataset(\"latest\")\n\nplt.figure(figsize=(12, 6))\nsns.barplot(x='release_year',y='show_id',hue='type',data=latest, palette='YlOrBr')\nplt.title('Number of Netflix series released in recent years')","915d32d5":"#seperate the fata in column: date_added\ndf['add_month'] = df.date_added.str.split(' ').str.get(0)\ndf['add_year'] = df.date_added.str.split(',').str.get(1)\n\n#Use Heatmap to see when Movies\/TV Shows release over years\nmonth_order = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'][::-1]\n#unstack\uff1a\u5c07\u8cc7\u6599\u7684\u884c\u201c\u65cb\u8f49\u201d\u70ba\u5217\ndf5 = df.groupby('add_year')['add_month'].value_counts().unstack().fillna(0)[month_order].T\n#df5\nplt.figure(figsize=(12, 6))\nsns.heatmap(df5,linewidths = 0.05, cmap=\"OrRd\")\nplt.title('Movies\/ TV shows Added time')\n","f41523ac":"#colors = ''\nusa_recent5 =  df[df.release_year >= 2016]\ng = sns.catplot(\n    data=usa_recent5, kind=\"count\",\n    x=\"release_year\", hue=\"type\",\n    ci=\"sd\", palette='YlOrBr')\nax = plt.gca()\n# ylim max value to be set\ny_max = usa_recent5['type'].value_counts().max() \n# Iterate through the list of axes' patches\n#\u6578\u503c\n# for p in ax.patches:\n#     ax.text(p.get_x() + p.get_width()\/2., p.get_height(), '%d' % int(p.get_height()), \n#             fontsize=12, color='black', ha='center', va='bottom')\nplt.title('Last 5 years trends in Netflix by USA',size='15')\nplt.show()","94bf1a12":"#the data in column: listed_in included a lot of categories, so we need to forst clean the data, and make the right category.\ndf2 = df.drop('listed_in', axis=1).join(df['listed_in'].str.split(', ', expand=True).stack().reset_index(level=1, drop=True).rename('Category'))\nCategory_cut = df2.groupby(by = 'Category').show_id.count()\nCategory_cut = pd.DataFrame(Category_cut)\nCategory_cut.sort_values(by='show_id', ascending= False)\ndf2\n#df2 #\u5c07Category\u5404\u9805\u62c6\u958b\n# df2[\"Category\"].value_counts()[:10].plot(kind=\"barh\", color='#E53A40')\n# plt.title(\"Top 10 genres\")\n\n########\nimport squarify\ntop_genres = df2[\"Category\"].value_counts()[:10]\ntop_genres\n#plt.rc('font', size=10)\nplt.figure(figsize=(12, 6))\nsquarify.plot(sizes=top_genres.values, label=top_genres.index, linewidth=4,\n              color=sns.color_palette(\"RdGy\", n_colors=20) )\nplt.axis('off')\nplt.show()","4015079a":"df2[df2[\"type\"]==\"TV Show\"][\"Category\"].value_counts()[:10].plot(kind=\"barh\", color='#E53A40')\nplt.title(\"Top 10 TV Show genres\")","0bffb318":"df2[df2[\"type\"]==\"Movie\"][\"Category\"].value_counts()[:10].plot(kind=\"barh\", color='#E53A40')\nplt.title(\"Top 10 movie genres\")","5c8c313a":"tag = \"International Movies\" #Kids TV shows on Netflix\ndf[\"relevant\"] = df['listed_in'].fillna(\"\").apply(lambda x : 1 if tag.lower() in x.lower() else 0)\ncom = df[df[\"relevant\"] == 1]\ncom[[\"title\", \"country\",\"release_year\"]].head(10)","4b803e38":"# Curious about the genres in Netflix, \n# What are the movies\/ TV Shows released on Netflix?","1b5a06d4":"I use Tree Map to present the Genres on Netflix. we can find that \n**International Movies > Dramas > Comedies**\n \n \nThere is a small detail that needs special attention\uff1a\nWhen reading the final charts, **make sure that there are no repeated data**.\n\nWhen grouping and cleaning the data, i found that if we split data by ',' there will be two Drama\none with spaces in front of the word, the other don't have spaces, so python will view it as different data but we actually need to combine the data.","17b4a833":"\u2191 Most of the directors film 1 movie\/ TV show on Netflix.\nBut there is 1 director who film 18 shows on Netflix.\n","01af3b0f":"\u2191Marcus Raboy not only make movies, he is also a TV show director, most of them are stand-up comedy. ","bf77dec4":"\u2191 Most of the series on Netflix is suitable for adults, some content is not suitable for children younger than 17 years old","e0f9c938":"\u2191 There are totally 7787 data in the dataset. We can find that there are a lot of missimg values in director, and cast columns.","ba4813a2":"Introduction:\nNetflix was founded in 1997, the headquarter is in California, it is a subscription-based streaming audio and video platform that people can watch TV shows and movies. Netflix is now a very popular service in the world, the global subscriptions have exceeded 200 million people in 2020. \nThe reason why Netflix become so hot :\n1. High output rate: you won't be nervous or anxious if there is no movie\/TV show to watch, because there are a dozens of series on the platform from 1930s to 2021.\n2. Netflix Origin Series: most of the subscription-based platform are most afraid of consumers unsubscribing, however Netflix launch all kinds of original albums which has great quality, that people love it so much!\n3. Covid-19: Due to the epidemic, people loss the opportunity to go outside and have fun, so they change the entertainment to watch Netflix at home:) ","a742d179":"\u2191 Most of the series were released after 2015.\nThere's an interesting discovery: Before 2019, the number of movies released each year is much larger than that of TV series.","1587c732":"\u2191 After understanding most of the content of Netflix, if we want to find movies in a specific category, we can use the above methods.\nIt's a pity that we don't have the ranking or customer views number of the movies, or we might get the most popular series and find one that we are interested and enjoy it!","cfb09ffc":"# We found that there are 7787 movies\/ TV show in the dataset, and we are wondering that if the shows were filmed by the same director?","088aab96":"\u2191 The hottest genres are different between movies and TV shows!","d110ddbb":"![](https:\/\/i.pinimg.com\/564x\/38\/aa\/d5\/38aad51d8f9e7b4d58b37d2600aa9c52.jpg)\n","621b5c72":"Below is the visualization and analysis base on the Netflix database.  ","f92ef8a5":"# That's look at director Ra\u00fal Campos, Jan Suter's Portfolio ","80e874ec":"\u2191 We found that Ra\u00fal Campos, Jan Suter is a movie director, and all of his movies are produced in South America, they are all Standup Comedy."}}