{"cell_type":{"26473726":"code","492fe9dc":"code","771e467d":"code","649151d0":"code","b42ccc42":"code","20f97685":"code","0be48641":"code","bd93953d":"code","806eb296":"code","b130c245":"code","681aa836":"code","2985756d":"code","52e1437a":"code","8c4dbc33":"code","da52d8c1":"code","cfccd0bd":"code","24ac020e":"code","fe382ec7":"code","bec98504":"code","850ce7a0":"code","7b79a343":"code","6e46bef1":"code","d463ae8c":"code","3023b02e":"code","460c7d29":"code","5c961a49":"code","6ef4366e":"code","cabcb779":"code","e302bbbf":"code","97941df7":"code","639d0037":"code","fb6ce14d":"code","61118f49":"code","0b95fac5":"code","48a467cb":"code","4fca2efc":"code","2344fb8e":"code","137e77c5":"code","aa7d5f16":"code","4ccb5f0c":"code","c1242693":"code","27c5570a":"code","966e46d7":"code","cd6d664e":"code","3a3cc1e4":"code","cd24e0d6":"code","e1336064":"code","5408a02a":"code","ebed6f53":"code","f546d683":"code","ce195ada":"code","ca516ebb":"markdown","52c0d692":"markdown","adc40839":"markdown","1fc99109":"markdown","c6381b1e":"markdown","715cc809":"markdown","082df462":"markdown","b89b028e":"markdown","64258645":"markdown","bfe6a71b":"markdown","12f29f14":"markdown","f808f4a6":"markdown","ac67b4cb":"markdown","daefc793":"markdown","60894dd4":"markdown","5963a53d":"markdown","6876dfd7":"markdown","0d5f32e2":"markdown","01a6fdf0":"markdown","e758cd7b":"markdown","9d1476ad":"markdown"},"source":{"26473726":"# import all packages and set plots to be embedded inline\nimport pandas as pd\nimport numpy as np\nimport datetime as dt\nimport calendar\n\n# suppress warnings \nimport warnings\nwarnings.simplefilter(\"ignore\")","492fe9dc":"#Importing the rfm segmented dataset \nCTA_rfm=pd.read_csv('..\/input\/cta-wrangling\/CTA_rfm_allinfo.csv')","771e467d":"# checking the data first row\nCTA_rfm.head(1)","649151d0":"old_customers=CTA_rfm[['gender','past_3_years_bike_related_purchases','job_industry_category','wealth_segment','owns_car','tenure','Age','property_valuation','RFM_loyalty_level']]","b42ccc42":"old_customers.shape","20f97685":"# changing gender data columns using one hot coding into binary\ngender=old_customers[['gender']]\ngender=pd.get_dummies(gender,drop_first=True)\ngender.head()","0be48641":"# changing job_industry_category data columns using one hot coding into binary\n\njob_industry_category=old_customers[['job_industry_category']]\njob_industry_category=pd.get_dummies(job_industry_category,drop_first=True)\njob_industry_category.head()","bd93953d":"# changing owns_car data columns using one hot coding into binary\nowns_car=old_customers[['owns_car']]\nowns_car=pd.get_dummies(owns_car,drop_first=True)\nowns_car.head()","806eb296":"# changing wealth_segment data columns using Label  Encoder into binary\nfrom sklearn.preprocessing import LabelEncoder\nold_customers['wealth_segment']=LabelEncoder().fit_transform(old_customers['wealth_segment'])","b130c245":"old_customers1=old_customers[['past_3_years_bike_related_purchases','tenure','Age','property_valuation','wealth_segment']]","681aa836":"#Concatenating transformed categorical columns with the old_customers dataframe\nold_customers1=pd.concat([gender,job_industry_category,owns_car,old_customers1],axis=1)","2985756d":"old_customers1.shape","52e1437a":"# final result\nold_customers1.head(1)","8c4dbc33":"# Retrieving new customers dataset\nnew_customers=pd.read_excel('..\/input\/data-files\/New customer list.xlsx')","da52d8c1":"#checking data first rows\nnew_customers.head(1)","cfccd0bd":"# Making first row as header\nnew_customers.rename(columns=new_customers.iloc[0], inplace = True)\nnew_customers.drop([0], inplace = True)","24ac020e":"#checking results\nnew_customers.head(1)","fe382ec7":"#Dropping (nan) header columns from dataset as it doesnt exist in the riginal dataset\nnew_customers.columns = new_customers.columns.fillna('to_drop')\nnew_customers.drop('to_drop', axis = 1, inplace = True)","bec98504":"# Checking dataset info\nnew_customers.info()","850ce7a0":"# checking for duplicates in the dataset\nnew_customers.duplicated().sum()","7b79a343":"# Collecting the categorical columns into  list\ncat_col=[]\nfor x in new_customers.dtypes.index:\n    if new_customers.dtypes[x]=='object':\n        cat_col.append(x)\ncat_col","6e46bef1":"#checking for duplicated values in the categorical columns nd the accuracy of the values\nfor col in cat_col:\n    print(col)\n    print(new_customers[col].value_counts())\n    print()\n    print('*******')\n    print()","d463ae8c":"# How many missing points in each variable\ncount_missing_new_customers = new_customers.isnull().sum()\npercent_missing_new_customers = round(new_customers.isnull().sum()\/len(new_customers) * 100, 1)\nmissing_new_customers = pd.concat([count_missing_new_customers, percent_missing_new_customers], axis = 1)\nmissing_new_customers.columns = [\"Missing (count)\", \"Missing (%)\"]\nmissing_new_customers","3023b02e":"# we will fill in the job_title,job_industry_category column with the mode value which is the most repeated value in the column\nnew_customers['job_title'] = new_customers['job_title'].fillna(new_customers['job_title'].mode()[0])\nnew_customers['job_industry_category'] = new_customers['job_industry_category'].fillna(new_customers['job_industry_category'].mode()[0])","460c7d29":"# removing null values from dataset\nnew_customers['DOB'].dropna(inplace=True,axis=0)","5c961a49":"# removing null values from dataset\nnew_customers['last_name'].dropna(inplace=True,axis=0)","6ef4366e":"# dropping U from Gender\nnew_customers=new_customers[new_customers.gender!='U']","cabcb779":"#changing Date of birth column into date column to extract Age from it\nnew_customers['DOB']=pd.to_datetime(new_customers['DOB'])","e302bbbf":"# This function converts given date to age\ndef from_dob_to_age(born):\n    today = dt.date.today()\n    return today.year - born.year - ((today.month, today.day) < (born.month, born.day))","97941df7":"#creating a new Age column in the dataset\nnew_customers['Age']=new_customers['DOB'].apply(lambda x: from_dob_to_age(x))","639d0037":"#checking final results\nnew_customers.head(2)","fb6ce14d":"# changing categorical data columns into binary using one hot coding\n\ngender_new=new_customers[['gender']]\ngender_new=pd.get_dummies(gender_new,drop_first=True)\ngender_new.head()","61118f49":"# changing job_industry_category_new categorical column into binary using one hot coding\njob_industry_category_new=new_customers[['job_industry_category']]\njob_industry_category_new=pd.get_dummies(job_industry_category_new,drop_first=True)\njob_industry_category_new.head()","0b95fac5":"# changing owns_car_new categorical column into binary using one hot coding\nowns_car_new=new_customers[['owns_car']]\nowns_car_new=pd.get_dummies(owns_car_new,drop_first=True)\nowns_car_new.head()","48a467cb":"#Transforming using label_encoder\nfrom sklearn.preprocessing import LabelEncoder\nnew_customers['wealth_segment']=LabelEncoder().fit_transform(new_customers['wealth_segment'])","4fca2efc":"#creating a new dataframe with numerical values only\nnew_customers1=new_customers[['past_3_years_bike_related_purchases','tenure','Age','property_valuation','wealth_segment']]","2344fb8e":"#Concatenating transformed categorical columns with the new_customer numerical dataframe\nnew_customers1=pd.concat([gender_new,job_industry_category_new,owns_car_new,new_customers1],axis=1)","137e77c5":"old_customers1.shape","aa7d5f16":"old_customers1.info()","4ccb5f0c":"new_customers1.shape","c1242693":"new_customers1.info()","27c5570a":"# Split our old customers 1 dataset\nfrom sklearn.model_selection import train_test_split\ntrain_features, test_features, train_labels, test_labels = train_test_split(old_customers1,\n                                                                            old_customers['RFM_loyalty_level'],\n                                                                            test_size= 0.25, random_state=10,)","966e46d7":"# Decision tree\nfrom sklearn.tree import DecisionTreeClassifier\ntree = DecisionTreeClassifier(random_state=10)\ntree.fit(train_features, train_labels)\n\n# Predict the labels for the test data\npred_labels_tree = tree.predict(test_features)","cd6d664e":"# Create the classification report\nfrom sklearn.metrics import classification_report\nclass_rep_tree = classification_report(test_labels, pred_labels_tree)","3a3cc1e4":"#View the performance of the model\nprint(\"Decision Tree: \\n\", class_rep_tree)","cd24e0d6":"# Decision RandomForestClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nrs = RandomForestClassifier()\nrs.fit(train_features, train_labels)\n\n# Predict the labels for the test data\npred_labels_rs = rs.predict(test_features)","e1336064":"# Create the classification report\nclass_rep_rs = classification_report(test_labels, pred_labels_rs)","5408a02a":"#View the performance of the model\nprint(\"RandomForestClassifier: \\n\", class_rep_rs)","ebed6f53":"# predict the new segments using decision tree model\noutput_label = tree.predict(new_customers1)","f546d683":"#converting an array into a dataframe column\nnew_customers['RFM_segments_predicted']=output_label.tolist()","ce195ada":"#checking final results\nnew_customers[['first_name','last_name','gender','RFM_segments_predicted']]","ca516ebb":"We will drop the value (U) from gender because it is inconsistent with the column values ","52c0d692":"Now i will import the new customers dataset to adjust it for the machine learning model","adc40839":"No duplicates in the data","1fc99109":"Since the (gender,job_industry,own_car) columns are nominal columns then i will use one hot coding to transform them into binary values to use them in my ML model","c6381b1e":"Converting wealth_segment column into binary column using label encoder since it is an ordinal category column","715cc809":"The general information about the dataframe points out to several problems:\n    \n- changing Date of birth column into date colunm to extract Age from it\n- we have some null values in some column","082df462":"I will create a new dataframe with columns that i will use to train my classification model on to predict RFM_loyalty_level for a fresh dataset with similar features with 1000 new customer","b89b028e":"## Sprocket Central Pty Ltd Company Customers Recommendation Project Module #3:Data modeling","64258645":"# Model building","bfe6a71b":"### New customers dataset Features Engineering","12f29f14":"### Old customers dataset Features Engineering","f808f4a6":"Checking for consistences of values in categorical column","ac67b4cb":"I will create a new dataframe to use in my ML model consists of binary transformed columns and numerical columns","daefc793":"Now checking for the two transformed datasets","60894dd4":"**Sprocket Central Pty Ltd**, a medium size bikes & cycling accessories organisation which has a large dataset relating to its customers, but their team is unsure how to effectively analyse it to help optimise its marketing strategy. \n\nThe client provided us with 3 datasets:\n\n- Customer Demographic\n\n- Customer Addresses\n\n- Transactions data in the past 3 months\n\n### Objective of the report\n\nIn Phase #1 i have conducted a data cleaning process on each dataset and joined them together.\n\nIn Phase #2 we have conducted a Data Exploratory analysis , RFM Analysis and segmented the customers into four segments: (Platinum,Gold,Silver,Bronze)\n\nIn this Phase #3 The client has provided us with 1 extra datasets **New Customers Demographic** with 1000 records of new customers that hasn't purchased any prodcuts from us and wants recommendations on which customers to target with the marketing campaigns from the new dataset\n\nIn order to solve this task i will use a machine learning classification model and train it on my old customers dataset with the RFM segmentations we created and try to predict which from the new customers most likely to be which segmentation","5963a53d":"Now concatenating the predicted array on the new customers dataset as a dataframe column","6876dfd7":"### New customers dataset","0d5f32e2":"We will train the ML model on the old customers dataset and predict on the new customers dataset","01a6fdf0":"### About the Dataset","e758cd7b":"Now i will use the decision tree model to predict new segments on the new data","9d1476ad":"Converting wealth_segment column into binary column using label encoder since it is an ordinal category column"}}