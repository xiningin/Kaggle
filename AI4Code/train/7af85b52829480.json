{"cell_type":{"91edf8c8":"code","97b94dd2":"code","d6dac716":"code","564e6ba3":"code","6a2855e9":"code","d5cf2ed0":"code","6024a659":"code","39376564":"code","2e02b0a5":"code","ddeacfd2":"code","677f9e41":"code","d3300ae3":"code","2d9f865b":"code","e375fef2":"code","5d21dd6b":"code","e653dc38":"code","3cf5ace6":"code","5d736583":"code","08bb96d3":"code","f8120ac3":"code","0a091a04":"code","8fac3479":"code","c89fae29":"code","a3da057d":"code","40f16a58":"code","21f163d2":"code","375b8828":"code","bc9abffd":"code","f34925fe":"code","024532cd":"code","e49f4f0f":"markdown","311213ae":"markdown","a69ce074":"markdown","c34e1aa7":"markdown","de627ee9":"markdown","97e69696":"markdown","9954ba79":"markdown"},"source":{"91edf8c8":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport datetime\nimport random\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nfrom scipy import stats\nfrom bokeh.plotting import figure, show, output_notebook\nfrom bokeh.models import ColumnDataSource\nimport sklearn\nfrom sklearn.linear_model import LinearRegression\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","97b94dd2":"path = '..\/input\/us-gasoline-and-diesel-retail-prices-19952021\/PET_PRI_GND_DCUS_NUS_W.csv'\ndf = pd.read_csv(path, delimiter=',')\ndf.shape","d6dac716":"df.head(3)","564e6ba3":"df.tail(3)","6a2855e9":"filter = df['Date'] != '01\/25\/2021'\ndf_today = df.drop(df[filter].index, inplace=False)\ndf_today","d5cf2ed0":"df_diesel = df.drop(columns=['A1',\n       'A2',\n       'A3',\n       'R1',\n       'R2',\n       'R3',\n       'M1',\n       'M2',\n       'M3',\n       'P1',\n       'P2',\n       'P3'])\ndf_diesel.tail(3)","6024a659":"df_diesel.rename( columns={'D1':'Diesel'}, inplace=True )\ndf_diesel.tail(3)","39376564":"df_diesel.columns","2e02b0a5":"df_diesel[~df_diesel.Date.str.contains(\"1995\")]\ndf_diesel[~df_diesel.Date.str.contains(\"1996\")]\ndf_diesel[~df_diesel.Date.str.contains(\"1997\")]\ndf_diesel[~df_diesel.Date.str.contains(\"1998\")]\ndf_diesel[~df_diesel.Date.str.contains(\"1999\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2000\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2001\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2002\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2003\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2004\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2005\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2006\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2007\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2008\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2009\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2010\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2011\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2012\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2013\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2014\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2015\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2016\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2017\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2018\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2019\")]\ndf_diesel[~df_diesel.Date.str.contains(\"2020\")]\ndf_diesel.tail(3)","ddeacfd2":"df_diesel.dtypes","677f9e41":"df_diesel['Date']= pd.to_datetime(df_diesel['Date'])","d3300ae3":"df_diesel.dtypes","2d9f865b":"title = 'Weekly U.S. No 2 Diesel Retail Prices (Dollars per Gallon) 1995-2021'\nimport datetime\nimport random\nimport matplotlib.pyplot as plt\ncol1='Diesel'\ncol2='Date'\ny = df_diesel[col1]\nx = df_diesel[col2]\nplt.plot(x,y)\nplt.gca().set_title(title)\nplt.show()","e375fef2":"from bokeh.plotting import figure, show, output_notebook\nfrom bokeh.models import ColumnDataSource\nsource = ColumnDataSource(df_diesel)\nplot = figure(x_axis_type=\"datetime\")\nlegend_diesel = 'Weekly U.S. No 2 Diesel Retail Prices (Dollars per Gallon) 1995-2021'\nplot.line(x='Date', y='Diesel', line_width=1, source=source, color='red', legend_label=legend_diesel)\noutput_notebook() # show the output in jupyter notebook\nshow(plot)","5d21dd6b":"# format = '%Y-%m-%d'\n# substring = string[0:4]\ndf_diesel['Year'] = 0\ndf_diesel['Year'] = df_diesel['Date'].dt.strftime('%Y').astype(int)\ndf_diesel.drop(columns=['Date'])\ndf_diesel.head(3)","e653dc38":"df_year = df_diesel[[\"Year\", \"Diesel\"]].groupby(['Year'],as_index=False).mean()\ndf_year.tail(10)","3cf5ace6":"df_year.dtypes","5d736583":"# Variable transformation is a way to make the data work better in your model. Compare before and after.\ndf_year['Diesel'] = np.log(df_year['Diesel'])","08bb96d3":"from scipy import stats\nX = df_year['Year']\ny = df_year['Diesel']\nslope, intercept, r, p, std_err = stats.linregress(X, y) # scipy\ndef modelPrediction(x):\n  return slope * x + intercept\nlabel = 'Predict Weekly U.S. No 2 Diesel Retail Prices (Dollars per Gallon) 1995-2021'\nmodel = list(map(modelPrediction, X)) # scipy\nx_pred = 2022\ny_pred = modelPrediction(x_pred)\nprint(label)\nround(y_pred, 2)\nprint('${} USD'.format(y_pred))\ntitle='Diesel (2022) = ${}'.format(y_pred)\nplt.title(title)\nplt.scatter(X, y) # Scatter Plot\nplt.plot(X, model, color='red')\nplt.ylim(ymin=0) # starts at zero\nplt.legend(['Model Prediction using Linear Regression', 'Diesel Prices (1995-2021)'])\nplt.show()","f8120ac3":"import sklearn\nfrom sklearn.linear_model import LinearRegression\nprint('Diesel')\nx = df_year[['Year']].values\ny = df_year['Diesel'].values\nregr = sklearn.linear_model.LinearRegression()\nmodel = regr.fit(x,y) # SciKit-Learn\nscore = regr.score(x, y)\nscore = round(score*100,2)\ntitle = f\"Diesel Linear Regression Score = {score}\"\nplt.title(title)\nprint('score = {}'.format(score))\ncoef = regr.coef_\nprint('coef = {}'.format(coef)) # 1.0\nintercept = regr.intercept_\nprint('intercept = {}'.format(intercept)) # 3.0000...\ny_pred = model.predict(x)\nprint('SciKit-Learn')\nplt.scatter(x, y, color='gray') # sklearn\nplt.plot(x, y_pred, color='orange') # model\n# plt.ylim(0) # start at zero\nplt.show()","0a091a04":"title = 'Weekly U.S. Retail Gasoline Prices (01\/25\/2021)'\nimport seaborn as sns\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nplt.figure(figsize=(6,3))\nplt.title(title)\nsns.barplot(data=df_today)\nplt.show()","8fac3479":"title = 'Weekly U.S. Retail Gasoline Prices (01\/25\/2021)'\nfrom bokeh.io import show, output_notebook\nfrom bokeh.plotting import figure\noutput_notebook() # output_file(\"bars.html\")\nx =['A1',\n       'A2',\n       'A3',\n       'R1',\n       'R2',\n       'R3',\n       'M1',\n       'M2',\n       'M3',\n       'P1',\n       'P2',\n       'P3',\n       'D1']\np = figure(x_range=x, plot_height=250, title=title)\np.vbar(x=x, top=[df_today['A1'].values[0], \n     df_today['A2'].values[0], \n     df_today['A3'].values[0], \n     df_today['R1'].values[0], \n     df_today['R2'].values[0], \n     df_today['R3'].values[0], \n     df_today['M1'].values[0], \n     df_today['M2'].values[0], \n     df_today['M3'].values[0], \n     df_today['P1'].values[0], \n     df_today['P2'].values[0], \n     df_today['P3'].values[0], \n     df_today['D1'].values[0]], width=0.9)\np.xgrid.grid_line_color = None\np.y_range.start = 0\nshow(p)","c89fae29":"import matplotlib.pyplot as plt\nplt.rcdefaults()\nfig, ax = plt.subplots()\ny = ('All Grades All Formulations', \n     'All Grades Conventional', \n     'All Grades Reformulated',\n     'Regular All Formulations',\n     'Regular Conventional',\n     'Regular Reformulated',\n     'Midgrade All Formulations',\n     'Midgrade Conventional',\n     'Midgrade Reformulated',\n     'Premium All Formulations',\n     'Premium Conventional',\n     'Premium Reformulated',\n     'No 2 Diesel')\ny_pos = np.arange(len(y))\nx = (df_today['A1'].values[0], \n     df_today['A2'].values[0], \n     df_today['A3'].values[0], \n     df_today['R1'].values[0], \n     df_today['R2'].values[0], \n     df_today['R3'].values[0], \n     df_today['M1'].values[0], \n     df_today['M2'].values[0], \n     df_today['M3'].values[0], \n     df_today['P1'].values[0], \n     df_today['P2'].values[0], \n     df_today['P3'].values[0], \n     df_today['D1'].values[0])\nax.barh(y_pos, x, align='center')\nax.set_yticks(y_pos)\nax.set_yticklabels(y)\nax.invert_yaxis() # labels read top-to-bottom\nax.set_xlabel('01\/25\/2021')\nax.set_title('Weekly U.S. Retail Gasoline Prices (Dollars per Gallon)')\nfor i, v in enumerate(x):\n    ax.text(v + 1.25, i, str(v), color='black', va='center', fontweight='normal')\nplt.show()","a3da057d":"pip install bar-chart-race","40f16a58":"import bar_chart_race as bcr","21f163d2":"df = df.tail(100)","375b8828":"df.shape","bc9abffd":"df.reset_index(drop=True, inplace=True)\ndf = df.set_index('Date')\ndf.head(3)","f34925fe":"bcr.bar_chart_race(\n    df=df,\n    filename='output.mp4',\n    orientation='h',\n    sort='desc',\n    n_bars=6,\n    fixed_order=False,\n    fixed_max=True,\n    steps_per_period=10,\n    interpolate_period=False,\n    label_bars=True,\n    bar_size=.95,\n    period_label={'x': .99, 'y': .25, 'ha': 'right', 'va': 'center'},\n    period_fmt='%B %d, %Y',\n    period_summary_func=lambda v, r: {'x': .99, 'y': .18,\n                                      's': f'Total deaths: {v.nlargest(6).sum():,.0f}',\n                                      'ha': 'right', 'size': 8, 'family': 'Courier New'},\n    perpendicular_bar_func='median',\n    period_length=500,\n    figsize=(5, 3),\n    dpi=144,\n    cmap='dark12',\n    title='df_today',\n    title_size='',\n    bar_label_size=7,\n    tick_label_size=7,\n    shared_fontdict={'family' : 'Helvetica', 'color' : '.1'},\n    scale='linear',\n    writer=None,\n    fig=None,\n    bar_kwargs={'alpha': .7},\n    filter_column_colors=False)","024532cd":"bcr.bar_chart_race(df=df, filename=None)","e49f4f0f":"## Which year had the highest price on Diesel?\n\nThe diesel price fluctuates a lot over the years, and to understand: \n\nWhat causes peaks and valleys in the prices of gasoline and diesel? first we need to start with a data visualization.\n\nCreate a data visualization or time series chart on the Diesel prices.\n\nIs it possible to identify the year with the highest price on Diesel with your Data Visualization?\n","311213ae":"## bar-chart-race","a69ce074":">Source: U.S. Energy Information Administration (Jan 2021) [Data Set](https:\/\/www.kaggle.com\/mruanova\/us-gasoline-and-diesel-retail-prices-19952021\/settings)\n\nUse Linear Regression to predict the price of Diesel in 2022.\n\nHow does Regular gasoline compares with Midgrade or Premium?","c34e1aa7":"## Conclusion\n[Linear Regression](https:\/\/towardsdatascience.com\/a-summary-of-the-basic-machine-learning-models-e0a65627ecbe) tends to be the Machine Learning algorithm that all teachers explain first, most books start with, and most people end up learning to start their career with.\n\nIt is a very simple algorithm that takes a vector of features (the variables or characteristics of our data) as an input, and gives out a numeric, continuous output. \n\nAs its name and the previous explanation outline, it is a regression algorithm, and the main member and father of the family of linear algorithms where Generalised Linear Models (GLMs) come from.\n\nIt can be trained using a closed form solution, or, as it is normally done in the Machine Learning world, using an iterative optimisation algorithm like Gradient Descent.\n\nLinear Regression is a parametric machine learning model (with a fixed number of parameters that depend on the n\u00ba of features of our data and that trains quite quickly) that works well for data that is linearly correlated with our target variable (the continuous numeric feature that we want to later predict), that is very intuitive to learn, and easy to explain. \n\nIt is what we call an \u2018explainable AI model\u2019, as the predictions it makes are very easy to explain knowing the model weights.\n\nAn example of a Linear Regression model could be a model that predicts house prices taking into account the characteristics of each home like the surface area, location, number of rooms, or if it has an elevator or not.\n\nThe following figure shows how Linear Regression would predict the price of a certain house using only 1 feature: \n\nThe surface area in squared meters of the house. \n\nIn the case of more variables being included in our model, the X axis would reflect a weighted linear combination of these features.\n\nThe line from the previous figure would have been fit in the training process using an optimisation algorithm, like gradient descent, that iteratively changes the slope of the line until the best possible line for our task is obtained.","de627ee9":"## How does Regular gasoline compares with Midgrade or Premium?\n\nGasoline can be either regular or midgrade or premium. How do they compare in price?\n\nCreate a data visualization that compares regular, midgrade and premium prices.\n\nCan you use a new type of chart that you have never used before? how about a \"bar chart race\"?","97e69696":"## Linear Regression","9954ba79":"- A1 = Weekly U.S. All Grades All Formulations Retail Gasoline Prices  (Dollars per Gallon)\n- A2 = Weekly U.S. All Grades Conventional Retail Gasoline Prices  (Dollars per Gallon)\n- A3 = Weekly U.S. All Grades Reformulated Retail Gasoline Prices  (Dollars per Gallon)\n- R1 = Weekly U.S. Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\n- R2 = Weekly U.S. Regular Conventional Retail Gasoline Prices  (Dollars per Gallon)\n- R3 = Weekly U.S. Regular Reformulated Retail Gasoline Prices  (Dollars per Gallon)\n- M1 = Weekly U.S. Midgrade All Formulations Retail Gasoline Prices  (Dollars per Gallon)\n- M2 = Weekly U.S. Midgrade Conventional Retail Gasoline Prices  (Dollars per Gallon)\n- M3 = Weekly U.S. Midgrade Reformulated Retail Gasoline Prices  (Dollars per Gallon)\n- P1 = Weekly U.S. Premium All Formulations Retail Gasoline Prices  (Dollars per Gallon)\n- P2 = Weekly U.S. Premium Conventional Retail Gasoline Prices  (Dollars per Gallon)\n- P3 = Weekly U.S. Premium Reformulated Retail Gasoline Prices  (Dollars per Gallon)\n- D1 = Weekly U.S. No 2 Diesel Retail Prices  (Dollars per Gallon)"}}