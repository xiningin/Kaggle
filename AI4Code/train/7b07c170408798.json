{"cell_type":{"c6b3f5fa":"code","e8cd40d0":"code","43cbe6a0":"code","34f8d761":"code","354588d5":"code","9e9bc42c":"code","ece1e88b":"code","e8319b8f":"markdown","710e51ac":"markdown","02806088":"markdown"},"source":{"c6b3f5fa":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport glob\nimport cv2\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport math\nimport random\n\nfrom scipy import stats\n\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))","e8cd40d0":"train = pd.read_csv(\"\/kaggle\/input\/landmark-retrieval-2020\/train.csv\")\ntrain.head()","43cbe6a0":"landmark_id_list = train.landmark_id.unique()\nlen(train.landmark_id.unique())\nprint(landmark_id_list)","34f8d761":"path='..\/input\/landmark-retrieval-2020\/train\/'\n\ndef plot_landmarks(landmark_id, df, ncolumns=4, max_figs = 96):\n    landmark_df = df[df['landmark_id']==landmark_id]\n    nrows = int(math.ceil(len(landmark_df)\/ncolumns))\n    plt.rcParams[\"axes.grid\"] = False\n    f, ax = plt.subplots(ncols=ncolumns, nrows=nrows, figsize=(int(max_figs\/ncolumns), int(max_figs\/ncolumns)), squeeze=False)\n    f.set_size_inches(18, 6*nrows)\n    \n    pos = 0\n    count = 0\n    for i, row in landmark_df.iterrows():\n        image_id =  row['id']\n        img = cv2.imread(path+'\/'+image_id[0]+'\/'+image_id[1]+'\/'+image_id[2]+'\/'+image_id+'.jpg')\n        img = img[:,:,::-1]\n        \n        col = count%ncolumns\n        ax[pos,col].imshow(img)\n        if col == int(ncolumns - 1):\n            pos += 1\n        count += 1","354588d5":"plot_landmarks(landmark_id=183115, df=train)","9e9bc42c":"plot_landmarks(landmark_id=1, df=train)","ece1e88b":"random_id = landmark_id_list[random.randrange(len(train.landmark_id.unique()))]\nprint(random_id)\nplot_landmarks(landmark_id=random_id, df=train)","e8319b8f":"\n\nhttp:\/\/labs.eecs.tottori-u.ac.jp\/sd\/Member\/oyamada\/OpenCV\/html\/py_tutorials\/py_feature2d\/py_table_of_contents_feature2d\/py_table_of_contents_feature2d.html\n","710e51ac":"## type of landmark_id","02806088":"## axes\u306earray\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\n\nhttp:\/\/nekoyukimmm.hatenablog.com\/entry\/2015\/03\/31\/231019\n\nhttps:\/\/www.kaggle.com\/seriousran\/google-landmark-retrieval-2020-eda\n\n\n"}}