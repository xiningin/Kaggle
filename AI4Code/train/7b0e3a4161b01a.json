{"cell_type":{"47f878c6":"code","caab8e02":"code","d792221f":"code","4409fa4b":"code","f57d2011":"code","61fb3e53":"code","528e07b7":"code","ca4ff394":"code","46d12f0b":"code","88c113ce":"code","fcb4678c":"code","fefe4e41":"code","1b133eea":"code","82f327c4":"code","68135d5e":"markdown","f56c3fbe":"markdown","ca19618e":"markdown","43e69d94":"markdown","94a0d5d8":"markdown","78169f7d":"markdown","207ceebc":"markdown"},"source":{"47f878c6":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.model_selection import cross_val_score,cross_val_predict,cross_validate\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import precision_score, recall_score,accuracy_score\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import precision_recall_curve\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import roc_curve\n\nimport seaborn as sns \nsns.set_theme(style=\"darkgrid\")\n\n# from imblearn.over_sampling import SMOTE\n# from imblearn.over_sampling import RandomOverSampler\nfrom imblearn.over_sampling import ADASYN\nfrom lightgbm import LGBMClassifier","caab8e02":"def buildModel(model,x_train,x_val,y_train,y_val):\n    model.fit(x_train,y_train)\n    pred = model.predict(x_val)\n    \n    accuracy = accuracy_score(y_val,pred)\n    precision = precision_score(y_val,pred)\n    recall = recall_score(y_val,pred)\n    f1 = f1_score(y_val,pred)\n    roc_score = roc_auc_score(y_val,pred,average='macro')\n    print('accuracy : {0:.2f}, precision : {1:.2f}, recall : {2:.2f}'.format(accuracy,precision,recall))\n    print('f1-score : {0:.2f}, auc : {1:.2f}'.format(f1,roc_score,recall))","d792221f":"TARGET = \"Class\"\nSEED = 2021\nVAL_SET_SIZE = 0.25\n\nN_ESTIMATORS = 1000\nNUM_LEAVES = 64 ","4409fa4b":"df = pd.read_csv(\"..\/input\/creditcardfraud\/creditcard.csv\")\ndf.head()","f57d2011":"def getLabelCount(df,target):\n    return sorted([( labelValue,len(df.loc[df[target] == labelValue]) ) for labelValue in df[target].unique()])\n\nlabelCount = getLabelCount(df,TARGET)\nlabelCount","61fb3e53":"sns.countplot(y=TARGET, \n                   data=df,\n                   facecolor=(0, 0, 0, 0),\n                   linewidth=5,\n                   edgecolor=sns.color_palette(\"dark\", len(labelCount)))","528e07b7":"X = df.drop([TARGET],axis = 1)\ny = df[TARGET]","ca4ff394":"X_train, X_val, y_train, y_val = train_test_split(X,y,test_size=VAL_SET_SIZE,random_state=SEED)","46d12f0b":"lgb = LGBMClassifier(n_estimators=N_ESTIMATORS,num_leaves=NUM_LEAVES,n_jobs=-1,is_unbalance = False,boost_from_average=False)\nbuildModel(lgb,X_train,X_val,y_train,y_val)","88c113ce":"lgb = LGBMClassifier(n_estimators=N_ESTIMATORS,num_leaves=NUM_LEAVES,n_jobs=-1,is_unbalance = False,boost_from_average=True)\nbuildModel(lgb,X_train,X_val,y_train,y_val)","fcb4678c":"lgb = LGBMClassifier(n_estimators=N_ESTIMATORS,num_leaves=NUM_LEAVES,n_jobs=-1,is_unbalance = True,boost_from_average=False)\nbuildModel(lgb,X_train,X_val,y_train,y_val)","fefe4e41":"lgb = LGBMClassifier(n_estimators=N_ESTIMATORS,num_leaves=NUM_LEAVES,n_jobs=-1,is_unbalance = True,boost_from_average=True)\nbuildModel(lgb,X_train,X_val,y_train,y_val)","1b133eea":"strategy = {0:284315, 1:284315}\nX_train_over,y_train_over  = ADASYN(sampling_strategy=strategy).fit_resample(X_train,y_train)\nprint('before ADASYN : ', X_train.shape, y_train.shape)\nprint('after ADASYN: ', X_train_over.shape, y_train_over.shape)\nprint('after ADASYN values: \\n', pd.Series(y_train_over).value_counts())","82f327c4":"lgb = LGBMClassifier(n_estimators=N_ESTIMATORS,num_leaves=NUM_LEAVES,n_jobs=-1,boost_from_average=False)\nbuildModel(lgb,X_train_over,X_val,y_train_over,y_val)","68135d5e":"# split data","f56c3fbe":"# use oversampling data as training data  => to increase auc ","ca19618e":"# lgbm + is_unbalance = True\nWhen you set Is_unbalace: True, \nthe algorithm will try to Automatically balance the weight of the dominated label (with the pos\/neg fraction in train set).","43e69d94":"# lgbm + is_unbalance = False","94a0d5d8":"# check label count","78169f7d":"# label over sampling : ADASYN","207ceebc":"# load"}}