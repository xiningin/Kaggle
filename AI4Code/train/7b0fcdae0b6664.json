{"cell_type":{"17aea5f9":"code","cff2d56c":"code","043c462c":"code","aa45756b":"code","309ad8a1":"code","3646b69a":"code","aace4e75":"code","36320649":"code","17447b92":"code","c49036a3":"code","2a38fb2a":"code","9e1abd25":"code","d5b8d643":"code","fd14161e":"code","dac77796":"code","4e0bfa94":"code","56646731":"code","0ecf9f45":"markdown","26dbe74d":"markdown","fa6e8c1d":"markdown","971b5922":"markdown","d6a2aa1b":"markdown","d6be5a6a":"markdown","7ac17de9":"markdown"},"source":{"17aea5f9":"import numpy as np\nimport pandas as pd \n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier","cff2d56c":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","043c462c":"train_data.head()","aa45756b":"train_data.info()","309ad8a1":"train_data.describe()","3646b69a":"#since cabin and ticket do not effect the survival rate, these features are dropped. \nprint('Shape Befor drop: ', train.shape)\ntrain = train_data.drop(['Ticket', 'Cabin'], axis=1)\ntest = test_data.drop(['Ticket', 'Cabin'], axis=1)\nall_data = [train, test]\nprint('Shape After drop: ',train.shape)","aace4e75":"#Converting categorical data into numerical data\nfor dataset in all_data:\n    # Mapping Sex\n    dataset['Sex'] = dataset['Sex'].map( {'female': 0, 'male': 1} ).astype(int)\ntrain.head()","36320649":"#adjusting missing values\nguess_ages = np.zeros((2,3))\nfor dataset in all_data:\n    for i in range(0, 2):\n        for j in range(0, 3):\n            guess_data = dataset[(dataset['Sex'] == i) & \\\n                                  (dataset['Pclass'] == j+1)]['Age'].dropna()\n\n            # age_mean = guess_df.mean()\n            # age_std = guess_df.std()\n            # age_guess = rnd.uniform(age_mean - age_std, age_mean + age_std)\n\n            age_guess = guess_data.median()\n\n            # Convert random age float to nearest .5 age\n            guess_ages[i,j] = int( age_guess\/0.5 + 0.5 ) * 0.5\n            \n    for i in range(0, 2):\n        for j in range(0, 3):\n            dataset.loc[ (dataset.Age.isnull()) & (dataset.Sex == i) & (dataset.Pclass == j+1),\\\n                    'Age'] = guess_ages[i,j]\n\n    dataset['Age'] = dataset['Age'].astype(int)\n","17447b92":"#filling in the missing values and converting categorical data into numerical data\nfor dataset in all_data:\n    dataset['Embarked'] = dataset['Embarked'].fillna('S')\nprint (train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=False).mean())\n\nfor dataset in all_data:\n    dataset['Embarked'] = dataset['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)","c49036a3":"train.head()","2a38fb2a":"#dropping passenger ID and fare too\ntrain = train.drop(['Fare'], axis=1)\ntest = test.drop(['Fare'], axis=1)\ntrain = train.drop(['Name'], axis=1)\ntest = test.drop(['Name'], axis=1)\nall_data = [train,test]\ntrain.head()","9e1abd25":"test.head()","d5b8d643":"women = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\n\nprint(\"% of women who survived:\", rate_women)\n","fd14161e":"men = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"% of men who survived:\", rate_men)","dac77796":"X_train = train.drop(\"Survived\", axis=1)\nY_train = train[\"Survived\"]\nX_test  = test.drop(\"PassengerId\", axis=1).copy()","4e0bfa94":"model = RandomForestClassifier(n_estimators=100, max_depth=10,random_state=1)\nmodel.fit(X_train, Y_train)\npredictions = model.predict(X_test)\n\nmodel.score(X_train, Y_train)\nacc_random_forest = round(model.score(X_train, Y_train) * 100, 2)\nprint(round(acc_random_forest,2,), \"%\")","56646731":"output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","0ecf9f45":"4. From the previous step, it was seen that there is a mix of numerical and categorical data. There are missing values too. Next step is to clean the data. ","26dbe74d":"# Introduction\nThis is my first data science project. In this submission, I have taken help from the following source:\n[https:\/\/www.kaggle.com\/adamml\/titanic-to-beginner\/notebook](http:\/\/)","fa6e8c1d":"5. Now, the final step is to apply ML models. Random Forest Classifier is applied here.","971b5922":"1. The first step is to import packages that will be required.","d6a2aa1b":"6. The last step is to submit the file","d6be5a6a":"2. Next, data will be gathered. In this dataset, data from two files will be gathered.","7ac17de9":"3. Now, the data is assessed to look for types of data that is present."}}