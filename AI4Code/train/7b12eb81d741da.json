{"cell_type":{"9dbee101":"code","c6aeaa7a":"code","f7cc58e0":"code","f82cabf2":"code","786dfd4e":"code","28fcf458":"code","8f9809d8":"code","3cf8dd49":"code","f09ab7c3":"code","04165316":"code","67b5bf20":"code","2ad19844":"code","b304a68d":"code","62adee82":"code","aafe6f51":"code","6795b730":"code","f5298e31":"code","ecfd359f":"code","a648073d":"code","ae2c7ea1":"code","e81eba77":"markdown","036deff3":"markdown","27e608cf":"markdown","ce8d4e29":"markdown","95ef9dc9":"markdown","b852c88a":"markdown","26f67876":"markdown","61d88229":"markdown","e7a45bce":"markdown","7c4e6b8a":"markdown","33987054":"markdown","f4a05524":"markdown","cef22e96":"markdown","5826608f":"markdown","285447a1":"markdown","fcda565f":"markdown","7f7ab5fe":"markdown","2e601239":"markdown"},"source":{"9dbee101":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import normalize\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score","c6aeaa7a":"df=pd.read_csv('..\/input\/logistic-regression-heart-disease-prediction\/framingham_heart_disease.csv')","f7cc58e0":"df.head(50)","f82cabf2":"df[:].describe()","786dfd4e":"features_nan=[feature for feature in df.columns if df[feature].isnull().sum()>1]\nfor feature in features_nan:\n    print(\"{}: {}% missing values\".format(feature,np.round(df[feature].isnull().mean(),4)))","28fcf458":"series = pd.isnull(df['cigsPerDay'])\ndf[series]","8f9809d8":"data = df.drop(['education'], axis = 1)\ndata.head()","3cf8dd49":"mean_cigsPerDay = round(data[\"cigsPerDay\"].mean())\nmean_BPmeds = round(data[\"BPMeds\"].mean())\nmean_totChol = round(data[\"totChol\"].mean())\nmean_BMI = round(data[\"BMI\"].mean())\nmean_glucose = round(data[\"glucose\"].mean())\nmean_heartRate = round(data[\"heartRate\"].mean())","f09ab7c3":"data['cigsPerDay'].fillna(mean_cigsPerDay, inplace = True)\ndata['BPMeds'].fillna(mean_BPmeds, inplace = True)\ndata['totChol'].fillna(mean_totChol, inplace = True)\ndata['BMI'].fillna(mean_BMI, inplace = True)\ndata['glucose'].fillna(mean_glucose, inplace = True)\ndata['heartRate'].fillna(mean_heartRate, inplace = True)\n","04165316":"features_nan=[feature for feature in data.columns if data[feature].isnull().sum()>1]\nfor feature in features_nan:\n    print(\"{}: {}% missing values\".format(feature,np.round(data[feature].isnull().mean(),4)))","67b5bf20":"data[:].isnull().sum()","2ad19844":"data.groupby('TenYearCHD').mean()","b304a68d":"sns.pairplot(data[[\"age\",\"cigsPerDay\",\"totChol\",\"sysBP\",\"diaBP\",\"BMI\",\"heartRate\",\"glucose\"]])","62adee82":"cols_to_be_normalized = [\"age\",\"cigsPerDay\",\"totChol\",\"sysBP\",\"diaBP\",\"BMI\",\"heartRate\",\"glucose\"]\ncols_not_to_be_normalized = [\"male\",\"currentSmoker\",\"BPMeds\",\"prevalentStroke\",\"prevalentHyp\",\"diabetes\",\"TenYearCHD\"]\n\nnormalized = normalize(data[cols_to_be_normalized])\nboolean = data[cols_not_to_be_normalized]","aafe6f51":"df_normalized = pd.DataFrame(normalized,columns = cols_to_be_normalized)\ndf_boolean = pd.DataFrame(boolean,columns=cols_not_to_be_normalized)\n# df_final = pd.concat([df_normalized,df_boolean],axis = 1)\n# df_final = df_normalized.join(df_boolean)\ndf_final = df_normalized.merge(df_boolean,left_index=True, right_index=True)","6795b730":"X = df_final.drop(\"TenYearCHD\",axis = 1)\nY = df_final[\"TenYearCHD\"] \nX = np.array(X)\nY = np.array(Y)","f5298e31":" X_train,X_test,y_train,y_test = train_test_split(X,Y,random_state = 1,test_size = 0.2)","ecfd359f":"classifier = LogisticRegression(random_state = 0) \nclassifier.fit(X_train, y_train)","a648073d":"y_pred = classifier.predict(X_test)","ae2c7ea1":"print (\"Accuracy : \", accuracy_score(y_test, y_pred)) \nprint (classification_report(y_test, y_pred)) ","e81eba77":"### Importing Required Modules","036deff3":"### Prediction with trained model","27e608cf":"### Train Test Split","ce8d4e29":"## Thank you\nHope you find this notebook useful. Do support guys ","95ef9dc9":"### Statistical inferences","b852c88a":"### Initializing Logistic Regression Model","26f67876":"### Filling NAN values with their respective column mean values","61d88229":"### Normalization","e7a45bce":"# <center><font color = \"red\">Heart Attack Prediction<\/font><\/center>","7c4e6b8a":"### Some Key Takeaways\n1. Most of the Male has 10-year risk of developing coronary heart disease.\n2. Most of the people having mean of age group 54.25 have high risk for developing coronary heart disease\n3. Current Smoker have high high risk for developing coronary heart disease than non smokers\n4. CigsPerDay, BPMeds, prevalentStroke, prevalentHyp are directly proportional with developing the risk for CHR","33987054":"### Pictorial Analysis","f4a05524":"### As Education does not play a factor in Heart Attack, I have dropped that column\n","cef22e96":"## Hurray !! we made it.. All NAN values are fixed\n<img src = \"https:\/\/qph.fs.quoracdn.net\/main-qimg-52aaf39089c8b28eb87fcd8e59d5d24e\">","5826608f":"### The advantage of below table shown is that the 'currentSmoker' column has value of 1 for all 'cigsPerDay' null values. \n### This helps in conveying that all missing values of cigsPerDay would not be zero.\n","285447a1":"### Segregation of Dependent & Independent Variables","fcda565f":"### Analysing Missing Values","7f7ab5fe":"### Importing Data","2e601239":"### Evaluating trained models"}}