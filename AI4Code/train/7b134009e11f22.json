{"cell_type":{"44a37f02":"code","d48c25ad":"code","720b6433":"code","0ac564dd":"code","9bb0c442":"code","6f8fe77e":"code","7b4d6ddf":"code","894b56f4":"code","7ee0cacf":"code","44ee394b":"code","c20823f8":"code","c51d233c":"code","ae30944f":"code","aa64d095":"code","9a136b8f":"code","0144f263":"code","1215d979":"code","40a59f2b":"code","d2c186ea":"code","5c9f089b":"code","1cc38889":"code","ddeb02af":"code","0cfe9af0":"code","c86cb939":"code","198e2a42":"code","6b77ca59":"code","a075b83b":"code","be401e99":"code","eefafd86":"code","6a26aa32":"code","93c36233":"code","c771b105":"code","7bb1537c":"code","bb373afc":"code","7547df7e":"code","82f10e58":"code","0bdf51f9":"code","dc829b80":"code","f51e1557":"code","331216da":"code","b9b5f688":"code","441fbbbd":"code","aa2d3418":"markdown","5e8df3f5":"markdown","d524b9ee":"markdown","ea0221e0":"markdown","feb53f92":"markdown","314a2c9b":"markdown","60013e42":"markdown","441147c0":"markdown","92bc0e5f":"markdown","751fd0b5":"markdown","346fd8aa":"markdown","0d88de92":"markdown"},"source":{"44a37f02":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport warnings\nwarnings.filterwarnings('ignore') \n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d48c25ad":"# Read datas\nmedian_house_hold_in_come = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\npercentage_people_below_poverty_level = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\npercent_over_25_completed_highSchool = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\nkill = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PoliceKillingsUS.csv', encoding=\"windows-1252\")\nshare_race_city = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/ShareRaceByCity.csv', encoding=\"windows-1252\")","720b6433":"median_house_hold_in_come.head()","0ac564dd":"percentage_people_below_poverty_level.head(15)","9bb0c442":"median_house_hold_in_come.info()","6f8fe77e":"median_house_hold_in_come[\"Geographic Area\"].unique()\n","7b4d6ddf":"median_house_hold_in_come[\"City\"].unique()","894b56f4":"# Poverty rate of each state\npercentage_people_below_poverty_level.poverty_rate.replace(['-'],0.0,inplace = True)\npercentage_people_below_poverty_level.poverty_rate = percentage_people_below_poverty_level.poverty_rate.astype(float)\narea_list = list(percentage_people_below_poverty_level['Geographic Area'].unique())\narea_poverty_ratio = []\nfor i in area_list:\n    x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']==i]\n    area_poverty_rate = sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_poverty_ratio':area_poverty_ratio})\nnew_index = (data['area_poverty_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,15))\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['area_poverty_ratio'])\nplt.xticks(rotation= 45)\nplt.xlabel('States')\nplt.ylabel('Poverty Rate')\nplt.title('Poverty Rate Given States')","7ee0cacf":"kill.head()","44ee394b":"# Most common 15 Name\/Surname of killed people\nseparate = kill.name[kill.name != 'TK TK'].str.split() \na,b = zip(*separate)                    \nname_list = a+b                         \nname_count = Counter(name_list)         \nmost_common_names = name_count.most_common(17)  \nx,y = zip(*most_common_names)\nx,y = list(x),list(y)\n# Visualisation\nplt.figure(figsize=(15,15))\nax= sns.barplot(x=x, y=y,palette = sns.cubehelix_palette(len(x)))\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name or Surname of killed people')","c20823f8":"percent_over_25_completed_highSchool.head()","c51d233c":"percent_over_25_completed_highSchool.info()","ae30944f":"# High school graduation rate of the population that is older than 25 in states\npercent_over_25_completed_highSchool.percent_completed_hs.replace(['-'],0.0,inplace = True)\npercent_over_25_completed_highSchool.percent_completed_hs = percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\narea_list = list(percent_over_25_completed_highSchool['Geographic Area'].unique())\narea_highschool = []\nfor i in area_list:\n    x = percent_over_25_completed_highSchool[percent_over_25_completed_highSchool['Geographic Area']==i]\n    area_highschool_rate = sum(x.percent_completed_hs)\/len(x)\n    area_highschool.append(area_highschool_rate)\n# sorting\ndata = pd.DataFrame({'area_list': area_list,'area_highschool_ratio':area_highschool})\nnew_index = (data['area_highschool_ratio'].sort_values(ascending=True)).index.values\nsorted_data2 = data.reindex(new_index)\n# visualization\nplt.figure(figsize=(15,15))\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['area_highschool_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('States')\nplt.ylabel('High School Graduate Rate')\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\")","aa64d095":"share_race_city.head()","9a136b8f":"share_race_city.info()","0144f263":"# Percentage of state's population according to races that are black,white,native american, asian and hispanic\n# Siyah, beyaz, k\u0131z\u0131lderili, asya ve \u0130spanyol \u0131rklar\u0131na g\u00f6re devlet n\u00fcfusunun y\u00fczdesi\nshare_race_city.replace(['-'],0.0,inplace = True)\nshare_race_city.replace(['(X)'],0.0,inplace = True)\nshare_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] = share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)\narea_list = list(share_race_city['Geographic area'].unique())\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\nfor i in area_list:\n    x = share_race_city[share_race_city['Geographic area']==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black) \/ len(x))\n    share_native_american.append(sum(x.share_native_american) \/ len(x))\n    share_asian.append(sum(x.share_asian) \/ len(x))\n    share_hispanic.append(sum(x.share_hispanic) \/ len(x))\n\n# visualization\nf,ax = plt.subplots(figsize = (9,15))\nsns.barplot(x=share_white,y=area_list,color='green',alpha = 0.5,label='White' )\nsns.barplot(x=share_black,y=area_list,color='blue',alpha = 0.7,label='African American')\nsns.barplot(x=share_native_american,y=area_list,color='cyan',alpha = 0.6,label='Native American')\nsns.barplot(x=share_asian,y=area_list,color='yellow',alpha = 0.6,label='Asian')\nsns.barplot(x=share_hispanic,y=area_list,color='red',alpha = 0.6,label='Hispanic')\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races \")","1215d979":"# high school graduation rate vs Poverty rate of each state\nsorted_data['area_poverty_ratio'] = sorted_data['area_poverty_ratio']\/max( sorted_data['area_poverty_ratio'])\nsorted_data2['area_highschool_ratio'] = sorted_data2['area_highschool_ratio']\/max( sorted_data2['area_highschool_ratio'])\ndata = pd.concat([sorted_data,sorted_data2['area_highschool_ratio']],axis=1)\ndata.sort_values('area_poverty_ratio',inplace=True)\n\n# visualize\nf,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x='area_list',y='area_poverty_ratio',data=data,color='lime',alpha=0.8)\nsns.pointplot(x='area_list',y='area_highschool_ratio',data=data,color='red',alpha=0.8)\nplt.text(40,0.6,'high school graduate ratio',color='red',fontsize = 17,style = 'italic')\nplt.text(40,0.55,'poverty ratio',color='lime',fontsize = 18,style = 'italic')\nplt.xlabel('States',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('High School Graduate  VS  Poverty Rate',fontsize = 20,color='blue')\nplt.grid()","40a59f2b":"data.head()","d2c186ea":"#Joint kernel density\n#personr = if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n#\u0130f is is zero, there is no correlation between variables.\n\n#Joint distribution using kernel density \n\ng = sns.jointplot(data.area_poverty_ratio, data.area_highschool_ratio, kind = \"kde\", size = 7)\nplt.savefig('graph.png')\nplt.show()","5c9f089b":"#We can change parameters of joint plot\n# Different usage of parameters. You can try others in code.\n#kind = {\"scatter\" | \"reg\" | \"resid\" | \"kde\" | \"hex\"}\n\na = sns.jointplot(\"area_poverty_ratio\", \"area_highschool_ratio\", data=data, size=5, ratio=3, color=\"r\")","1cc38889":"kill.race.head(15)","ddeb02af":"kill.race.value_counts()","0cfe9af0":"#Race rates according in kill data\nkill.race.dropna(inplace=True)\nlabels = kill.race.value_counts().index\ncolors = ['red', 'blue', 'grey', 'yellow', 'green', 'brown']\nexplode = [0,0,0,0,0,0]\nsizes = kill.race.value_counts().values\n\n#visualisation\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Killed People According to Races', color='blue', fontsize=15)\n","c86cb939":"data.head()","198e2a42":"#Visualisation of high school graduation rate\/Poverty rate of state with different style of seaborn ccode\n#lmplot: show the result of a linear regression within each dataset\n\nsns.lmplot(x=\"area_poverty_ratio\", y=\"area_highschool_ratio\", data=data)\nplt.show()","6b77ca59":"data.head()","a075b83b":"#Visualisation of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n#cubehlix plot \n\nsns.kdeplot(data.area_poverty_ratio, data.area_highschool_ratio, shade=True, cut=3)\nplt.show()","be401e99":"data.head()","eefafd86":"#we can show distribution with both violins and points\n\na = sns.cubehelix_palette(2, rot=-.5,dark=.3)\nsns.violinplot(data=data, palette=a, inner=\"points\")\nplt.show()","6a26aa32":"data.corr()","93c36233":"#Correlation map\n#Visualisation of hig school graduaition rate vs Poverty rate of each state with different style of seaborn code\nf,ax = plt.subplots(figsize=(5, 5))\nsns.heatmap(data.corr(), annot=True, linewidths=0.5, linecolor =\"pink\", fmt='.1f', ax = ax)\nplt.show()","c771b105":"kill.head()","7bb1537c":"kill.manner_of_death.unique()","bb373afc":"#Manner of death(\u00f6l\u00fcm \u015fekli) : ate\u015f edilerek yada ate\u015f edilerek ve \u015fok tabancas\u0131yla\n#age = ya\u015f\n#gender = cinsiyet\n\nsns.boxplot(x=\"gender\", y=\"age\", hue=\"manner_of_death\", data=kill,palette=\"PRGn\")\nplt.show()","7547df7e":"data.head()","82f10e58":"sns.pairplot(data)\nplt.show()","0bdf51f9":"kill.race.value_counts()","dc829b80":"kill.head()","f51e1557":"#kill properties\n#Manner of death\n\nsns.countplot(kill.race)\nplt.title(\"race\", color = \"red\", fontsize=\"17\")","331216da":"#kill with weapon\n\narmed=kill.armed.value_counts()\n\nplt.figure(figsize=(10,8))\nsns.barplot(x=armed[:8].index,y=armed[:8].values)\nplt.ylabel('Number of Weapon')\nplt.xlabel('Weapon Types')\nplt.title('Kill weapon', color = 'blue', fontsize=15)","b9b5f688":"#age of killed people\nbelow25=['below25' if i <= 25 else 'above25' for i in kill.age]\ndf = pd.DataFrame({'age':below25})\nsns.countplot(x=df.age)\nplt.ylabel('Number of Killed People')\nplt.title('Age of Killed People', color = 'blue', fontsize=15)","441fbbbd":"#Most dangerous cities\ncity = kill.city.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=city[:15].index,y=city[:15].values)\nplt.xticks(rotation=45)\nplt.title('Most Dangerous Cities', color = 'blue', fontsize=18)","aa2d3418":"<a id = \"3\"><\/a><br>\n# Joint Plot","5e8df3f5":"<a id = \"1\"><\/a><br>\n# Bar Plot","d524b9ee":"<a id = \"4\"><\/a><br>\n# Pie Chart","ea0221e0":"<a id = \"10\"><\/a><br>\n# Pair Plot","feb53f92":"<a id = \"7\"><\/a><br>\n# Violin Plot","314a2c9b":"<a id = \"9\"><\/a><br>\n# Box Plot","60013e42":"<a id = \"2\"><\/a><br>\n# Point Plot","441147c0":"<a id = \"11\"><\/a><br>\n# Count Plot","92bc0e5f":"<a id = \"5\"><\/a><br>\n# Lm Plot","751fd0b5":"# Some Seaborn Plot Types Examples\n1. Read datas\n1. Poverty rate of each state\n1. Most common 15 Name or Surname of killed people\n1. High school graduation rate of the population that is older than 25 in states\n1. Percentage of state's population according to races that are black,white,native american, asian and hispanic\n1. High school graduation rate vs Poverty rate of each state\n1. Kill properties\n      * Manner of death\n      * Kill weapon\n      * Age of killed people\n      * Most dangerous cities\n\n Plot Contents:\n1. [Bar Plot](#1)\n1. [Point Plot](#2)\n1. [Joint Plot](#3)\n1. [Pie Chart](#4)\n1. [Lm Plot](#5)\n1. [Kde Plot](#6)\n1. [Violin Plot](#7)\n1. [Heatmap](#8)\n1. [Box Plot](#9)\n1. [Pair Plot](#10)\n1. [Count Plot](#11)","346fd8aa":"<a id = \"6\"><\/a><br>\n# Kde Plot","0d88de92":"<a id = \"8\"><\/a><br>\n# Heatmap"}}