{"cell_type":{"b0e8e247":"code","504d0c20":"code","5813af25":"code","a56e4d84":"code","cacd423d":"code","14028550":"code","adc19200":"code","44c61de9":"markdown","5e4ce6ef":"markdown","8ffc9c72":"markdown","63f82f35":"markdown","e34137d2":"markdown","0c76a6cc":"markdown","9a497fa9":"markdown","622627f2":"markdown"},"source":{"b0e8e247":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","504d0c20":"import pickle","5813af25":"objects = []\nwith (open(\"..\/input\/cord-preprocessed-dataset\/train.pkl\", \"rb\")) as openfile:\n    while True:\n        try:\n            objects.append(pickle.load(openfile))\n        except EOFError:\n            break\nprint(objects) ","a56e4d84":"def iterunpickle(f):\n    unpickler = pickle.Unpickler(f)\n    try:\n        while True:\n            yield unpickler.load()\n    except EOFError:\n        pass","cacd423d":"with open(r'..\/input\/cord-preprocessed-dataset\/test.pkl','rb') as pth:\n    for item in iterunpickle(pth):\n        print(item)","14028550":"with open('..\/input\/\/cord-preprocessed-dataset\/val.pkl', 'rb') as f:\n    dest_object_name = pickle.load(f)","adc19200":"print(dest_object_name)","44c61de9":"#After loading I have no clue what to make with a Pickle file.","5e4ce6ef":"#Snippet by Stack Overflow https:\/\/stackoverflow.com\/questions\/56554371\/view-data-structures-of-pkl-file","8ffc9c72":"![](https:\/\/pythontic.com\/python_pickle.png)pythontic.com","63f82f35":"#Opening test file","e34137d2":"<h1><span class=\"label label-default\" style=\"background-color:#CD5C5C;border-radius:100px 100px; font-weight: bold; font-family:Garamond; font-size:20px; color:white; padding:10px\">\"Pickling and \u201cUnpickling\"<\/span><\/h1><br>\n\n\"The pickle module implements binary protocols for serializing and de-serializing a Python object structure. \u201cPickling\u201d is the process whereby a Python object hierarchy is converted into a byte stream, and \u201cunpickling\u201d is the inverse operation, whereby a byte stream (from a binary file or bytes-like object) is converted back into an object hierarchy. Pickling (and unpickling) is alternatively known as \u201cserialization\u201d, \u201cmarshalling,\u201d 1 or \u201cflattening\u201d; however, to avoid confusion, the terms used here are \u201cpickling\u201d and \u201cunpickling.\"\n\nhttps:\/\/docs.python.org\/3\/library\/pickle.html","0c76a6cc":"#Snippet by Better Programming https:\/\/medium.com\/better-programming\/dont-fear-the-pickle-using-pickle-dump-and-pickle-load-5212f23dbbce","9a497fa9":"Loading a Pickle file","622627f2":"#Snippet by Stack Overflow https:\/\/stackoverflow.com\/questions\/35067957\/how-to-read-pickle-fileSnippet "}}