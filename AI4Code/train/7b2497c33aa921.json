{"cell_type":{"45c1b5e5":"code","65b2a8d8":"code","bdfa17f8":"code","e5dd6d19":"code","16927cdf":"code","ef86317d":"markdown"},"source":{"45c1b5e5":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.metrics import roc_auc_score","65b2a8d8":"train = pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/train.csv\")\ntest = pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/test.csv\")","bdfa17f8":"X = train.drop(['id', 'target'], axis=1).append(test.drop(['id'], axis=1))\ny = np.array([0] * len(train) + [1] * len(test))","e5dd6d19":"model = RandomForestClassifier()\ncv_preds = cross_val_predict(model, X, y, \n                             cv=StratifiedKFold(n_splits=10, shuffle=True, random_state=0), \n                             n_jobs=-1, method='predict_proba')","16927cdf":"print(roc_auc_score(y_true=y, y_score=cv_preds[:,1]))","ef86317d":"Let's try adversarial validation to check if the test distribution is different from the train one"}}