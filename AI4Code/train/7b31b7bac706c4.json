{"cell_type":{"9c098f69":"code","5475fcae":"code","ac032a2c":"code","161457bd":"code","98d18e89":"code","5eb64f47":"code","e67ae255":"code","1d41e704":"code","f34511a1":"code","8f4cfca8":"code","db71ce24":"code","cc45ee24":"code","eae5f479":"code","71d4f18c":"code","40a290da":"code","ddf3bc31":"code","521552f9":"code","7786c977":"code","a84047fd":"code","e0e97168":"code","512fabab":"code","9fa21577":"markdown","0468b8f7":"markdown","8ff5fce1":"markdown","762563e2":"markdown","10b622b5":"markdown","6c9c6ff0":"markdown","c0a7a69b":"markdown","0f104af9":"markdown","bff3c377":"markdown","3550fdd5":"markdown","e3ef99e1":"markdown","a55692fe":"markdown","91202406":"markdown","637b5964":"markdown","1b325e09":"markdown","c7698301":"markdown","1504038a":"markdown"},"source":{"9c098f69":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score,confusion_matrix\nimport matplotlib.pyplot as plt\nfrom keras.models import Sequential\nfrom keras.layers import Dense\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5475fcae":"train=pd.DataFrame(pd.read_csv('\/kaggle\/input\/mushroom-classification\/mushrooms.csv'))\ntrain.columns","ac032a2c":"train.columns=['class', 'cap_shape', 'cap_surface', 'cap_color', 'bruises', 'odor',\n       'gill_attachment', 'gill_spacing', 'gill_size', 'gill_color',\n       'stalk_shape', 'stalk_root', 'stalk_surface_above_ring',\n       'stalk_surface_below_ring', 'stalk_color_above_ring',\n       'stalk_color_below_ring', 'veil_type', 'veil_color', 'ring_number',\n       'ring_type', 'spore_print_color', 'population', 'habitat']","161457bd":"train.head(5)\ntrain.isna().sum()\n#train['stalk-root'].unique()\n","98d18e89":"train.dtypes","5eb64f47":"mapping=[{'e':1,'p':0},\n         {'b':0,'c':1,'x':2,'f':3, 'k':4,'s':5},\n         {'f':0,'g':1,'y':2,'s':3},\n         {'n':0,'b':1,'c':2,'g':3,'r':4,'p':5,'u':6,'e':7,'w':8,'y':9},\n         {'t':1,'f':0},\n         {'a':1,'l':2,'c':3,'y':4,'f':5,'m':6,'n':0,'p':7,'s':8},\n         {'a':0,'d':1, 'f':2, 'n':3},\n         {'c':0,'w':1,'d':2},\n         {'b':0,'n':1},\n         {'k':0,'n':1,'b':2,'h':3,'g':4,'r':5,'o':6,'p':7,'u':8,'e':9,'w':10,'y':11},\n         { 'e':0,'t':1},{'b':0,'c':1,'u':2,'e':3,'z':4,'r':5,'?':6},\n         {'f':0,'y':1,'k':2,'s':3},\n         {'f':0,'y':1,'k':2,'s':3},\n         {'n':0,'b':1,'c':2,'g':3,'o':4,'p':5,'e':5,'w':6,'y':7},\n         {'n':0,'b':1,'c':2,'g':3,'o':4,'p':5,'e':6,'w':7,'y':8},\n         {'p':0,'u':1},\n         {'n':0,'o':1,'w':2,'y':3},\n         {'n':0,'o':1,'t':2},\n         {'c':4,'e':1,'f':2,'l':3,'n':0,'p':5,'s':6,'z':7},\n         {'k':0,'n':1,'b':2,'h':3,'r':4,'o':5,'u':6,'w':7,'y':8},\n         {'a':0,'c':1,'n':2,'s':3,'v':4,'y':5},\n         {'g':0,'l':1,'m':2,'p':3,'u':4,'w':5,'d':6}]\nlen(mapping),len(train.columns)","e67ae255":"for i in range(len(train.columns)):\n    train[train.columns[i]]=train[train.columns[i]].map(mapping[i]).astype(int)\n","1d41e704":"train.shape","f34511a1":"x=train.iloc[:,1:]\ny=train.iloc[:,0]\nx_tr,x_ts,y_tr,y_ts=train_test_split(x,y,test_size=0.2)","8f4cfca8":"lr=LogisticRegression()\nlr.fit(x_tr,y_tr)\naccuracy_score(y_ts,lr.predict(x_ts)),confusion_matrix(y_ts,lr.predict(x_ts))","db71ce24":"kn=KNeighborsClassifier(n_neighbors=5,metric='minkowski',p=2)\nkn.fit(x_tr,y_tr)\naccuracy_score(y_ts,kn.predict(x_ts)),confusion_matrix(y_ts,kn.predict(x_ts))\n","cc45ee24":"svm=SVC(kernel='linear',random_state=0)\nsvm.fit(x_tr,y_tr)\nysvc_pred=svm.predict(x_ts)\naccuracy_score(y_ts,ysvc_pred),confusion_matrix(y_ts,ysvc_pred)\n","eae5f479":"kersvm=SVC(kernel='rbf',random_state=0)\nkersvm.fit(x_tr,y_tr)\nyksvm_pred=kersvm.predict(x_ts)\naccuracy_score(y_ts,yksvm_pred),confusion_matrix(y_ts,yksvm_pred)","71d4f18c":"gnb=GaussianNB()\ngnb.fit(x_tr,y_tr)\nygnb_pred=gnb.predict(x_ts)\naccuracy_score(y_ts,ygnb_pred),confusion_matrix(y_ts,ygnb_pred)","40a290da":"dct=DecisionTreeClassifier(random_state=0)\ndct.fit(x_tr,y_tr)\nydct_pred=dct.predict(x_ts)\naccuracy_score(y_ts,ydct_pred),confusion_matrix(y_ts,ydct_pred)","ddf3bc31":"rf=RandomForestClassifier(random_state=0,n_estimators=100)\nrf.fit(x_tr,y_tr)\nyrf_pred=rf.predict(x_ts)\naccuracy_score(y_ts,yrf_pred),confusion_matrix(y_ts,yrf_pred)\n","521552f9":"xgb=XGBClassifier()\nxgb.fit(x_tr,y_tr)\ny_xgb=xgb.predict(x_ts)\naccuracy_score(y_ts,y_xgb),confusion_matrix(y_ts,y_xgb)","7786c977":"x_tr.shape","a84047fd":"classifier=Sequential()\nclassifier.add(Dense(64,activation='relu',input_dim=22))\n#classifier.add(Dense(output_dim=1,init='uniform',activation='relu'))\nclassifier.add(Dense(1,activation='sigmoid'))\nclassifier.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])\nclassifier.fit(x_tr,y_tr,batch_size=10,epochs=100)","e0e97168":"y_pred=classifier.predict(x_ts)\ny_pred=y_pred>0.5","512fabab":"confusion_matrix(y_ts,y_pred)","9fa21577":"For the task submission , Using ANN","0468b8f7":"Predictions using Logistic regression","8ff5fce1":"Checking for missing values","762563e2":"Naive Bayes","10b622b5":"Random Forest","6c9c6ff0":"Renaming the columns ","c0a7a69b":"Separating depend varible from predictors and splitting the dataset","0f104af9":"Let's look at the data. ","bff3c377":"Predictions using KNN","3550fdd5":"Kernel SVM","e3ef99e1":"The unmaaping can be done in the same using dictonaries . This shows how simple encoding helps model predict give accurate results. If you found this helpful do upvote.  Thanks in advance !. ","a55692fe":"Importing the necessary libraries","91202406":"XGBoost","637b5964":"Let's map Categorical variables","1b325e09":"Decision Trees","c7698301":"Data types have changed from object to int","1504038a":"Linear SVM"}}