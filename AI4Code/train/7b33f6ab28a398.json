{"cell_type":{"0e8443b3":"code","337d353f":"code","e52cde8a":"code","d2934259":"code","5ae0e12b":"code","dfd560db":"code","ba0d54b7":"code","0ef2430e":"code","4249ada0":"code","2145747f":"code","50cccdfd":"code","6b241ac6":"code","b590b8d6":"code","9571a3f7":"markdown","d1876bcc":"markdown","2e64aa9a":"markdown","1bb065e1":"markdown","c1d3c801":"markdown","dff64d05":"markdown","445f6024":"markdown","87028767":"markdown","841122cc":"markdown"},"source":{"0e8443b3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","337d353f":"import pandas as pd","e52cde8a":"df = pd.read_csv(\"\/kaggle\/input\/breast_cancer.csv\")","d2934259":"df.head()","5ae0e12b":"X = df.iloc[:, 1:-1].values\ny = df[\"Class\"].values","dfd560db":"y","ba0d54b7":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)\n","0ef2430e":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression(random_state = 0)\nmodel.fit(X_train, y_train)","4249ada0":"y_predicted = model.predict(X_test)","2145747f":"model.score(X_test, y_predicted)","50cccdfd":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_predicted)\nprint(cm)","6b241ac6":"(84+47)\/(84+47+3+3)\n","b590b8d6":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator = model, X = X_train, y = y_train, cv = 10)\nprint(\"Accuracy {:.2f}%\".format(accuracies.mean() * 100))\nprint(\"Standard Deviation {:.2f}%\".format(accuracies.std() * 100))\n\n","9571a3f7":"Accuracy","d1876bcc":"Importing the libraries","2e64aa9a":"Making the confusion matrix","1bb065e1":"Computing the accuracy with K-Fold cross validation","c1d3c801":"Predicting test set result","dff64d05":"Creating X and y","445f6024":"Importing dataset","87028767":"Training the logistic regression model using train set","841122cc":"Splitting the dataset into training and testing"}}