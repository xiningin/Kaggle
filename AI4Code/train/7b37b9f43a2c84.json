{"cell_type":{"406894ed":"code","0588fe91":"code","c1459856":"code","99b793e7":"code","c7b883b6":"code","98995271":"code","e4a18c6e":"code","e7f5b482":"code","0fd598c0":"code","59f68363":"code","747f1f6d":"code","94f5102a":"code","f1f167c5":"code","9e5afc09":"code","9d0d74cf":"code","f0b4fc7b":"code","5f0c0167":"code","6d938314":"code","52eff8c5":"code","49f3a54b":"code","78d3295e":"code","d150572f":"code","980f2c65":"code","a368fd99":"code","31dd3e58":"code","3f474c87":"code","0d8371cf":"code","aa72b7d5":"code","12c68352":"code","ad60481b":"code","e959cc35":"code","8a8ab281":"code","93135cd9":"code","8281b104":"code","9962f491":"code","586ba8d8":"code","aae69003":"code","bad0d1fc":"code","4230c958":"code","9c781230":"code","1efa0708":"code","a3d45980":"code","409f676a":"code","b98ede63":"code","7ab2609d":"code","72291028":"code","269dbf76":"code","eaa281fa":"code","2bbdd8a4":"code","b17ffa62":"code","6a77e372":"code","ec4a2145":"code","a4a98633":"code","db2ea4bf":"code","bd2025ae":"code","d02cc139":"code","cb1be5dc":"code","77054aa2":"code","1d0fcbbd":"code","78fee045":"code","b5014d61":"code","fe18d8e6":"code","436e76da":"code","3290b5ab":"code","52c83ce8":"code","b4bfa2a9":"code","063c607f":"code","a36f3e27":"markdown","830bec17":"markdown","e7769691":"markdown"},"source":{"406894ed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0588fe91":"#Imported all libraries for dataset used\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as ob\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","c1459856":"data=pd.read_csv('\/kaggle\/input\/customer-personality-analysis\/marketing_campaign.csv',sep='\\t')\ndata.head()","99b793e7":"data.sample(5)","c7b883b6":"#Checking the all info of dataset\ndata.info()","98995271":"#Checking the shape of dataset\ndata.shape","e4a18c6e":"#Checking the describe\ndata.describe()","e7f5b482":"#Show all numerical columns\ndata.select_dtypes(include='number').columns","0fd598c0":"#Show all object columns\ndata.select_dtypes(include='object').columns","59f68363":"#Checking the how many unique columns in my dataset\nfor ind, name in enumerate(data.columns):\n    print(\"<======{}======>\".format(name))\n    print(data[name].nunique())\n    print()","747f1f6d":"#EDA (Explore data Analysis)\ndata.isnull().sum().sum()","94f5102a":"data['Income']=data['Income'].fillna(data['Income'].mean())","f1f167c5":"data.isnull().sum().sum()","9e5afc09":"plt.figure(figsize=(20,9))\nsns.heatmap(data.corr(),annot=True,fmt='0.1f')\nplt.show()","9d0d74cf":"data.drop('Z_CostContact',axis=1,inplace=True)\ndata.drop('Z_Revenue',axis=1,inplace=True)","f0b4fc7b":"plt.figure(figsize=(20,9))\nsns.heatmap(data.corr(),annot=True,fmt='0.1f')\nplt.show()","5f0c0167":"# Checking for correlation by unstacking data\n\ncorr = data.corr()\nc1 = corr.abs().unstack()\nc1.sort_values(ascending = False)[24:50:2]","6d938314":"data.head()","52eff8c5":"#Analysis one columns with all columns\ndata['Year_Birth'].value_counts().head()\n","49f3a54b":"data['Age']=2021-data['Year_Birth']","78d3295e":"data.head()","d150572f":"data['Age'].value_counts().head()","980f2c65":"data['Education'].value_counts()","a368fd99":"# Changing category into UG and PG only\n\ndata['Education'] = data['Education'].replace(['PhD','2n Cycle','Graduation', 'Master'],'PG')  \ndata['Education'] = data['Education'].replace(['Basic'], 'UG')","31dd3e58":"plt.figure(figsize=(20,6))\nsns.barplot(x=data['Education'],y=data['Age'])\ndata['Education'].value_counts()\/data.shape[0]*100","3f474c87":"data['Marital_Status'].value_counts()\/data.shape[0]*100\nsns.countplot(data['Marital_Status'])\nplt.xticks(rotation='vertical')\nplt.show()","0d8371cf":"data['Marital_Status'] = data['Marital_Status'].replace(['Married', 'Together'],'relationship')\ndata['Marital_Status'] = data['Marital_Status'].replace(['Divorced', 'Widow', 'Alone', 'YOLO', 'Absurd'],'Single')","aa72b7d5":"data['Marital_Status'].value_counts()","12c68352":"data['Marital_Status'].value_counts()","ad60481b":"sns.barplot(x=data['Marital_Status'],y=data['Age'])","e959cc35":"data['Kids'] = data['Kidhome'] + data['Teenhome']\ndata['Expenses'] = data['MntWines'] + data['MntFruits'] + data['MntMeatProducts'] + data['MntFishProducts'] + data['MntSweetProducts'] + data['MntGoldProds']\ndata['TotalAcceptedCmp'] = data['AcceptedCmp1'] + data['AcceptedCmp2'] + data['AcceptedCmp3'] + data['AcceptedCmp4'] + data['AcceptedCmp5'] + data['Response']\ndata['NumTotalPurchases'] = data['NumWebPurchases'] + data['NumCatalogPurchases'] + data['NumStorePurchases'] + data['NumDealsPurchases']","8a8ab281":"# Deleting some column to reduce dimension and complexity of model\n\ncol_del = [\"AcceptedCmp1\" , \"AcceptedCmp2\", \"AcceptedCmp3\" , \"AcceptedCmp4\",\"AcceptedCmp5\", \"Response\",\"NumWebVisitsMonth\", \"NumWebPurchases\",\"NumCatalogPurchases\",\"NumStorePurchases\",\"NumDealsPurchases\" , \"Kidhome\", \"Teenhome\",\"MntWines\", \"MntFruits\", \"MntMeatProducts\", \"MntFishProducts\", \"MntSweetProducts\", \"MntGoldProds\"]\ndata=data.drop(columns=col_del,axis=1)\ndata.head()","93135cd9":"#Date to convert into day,month and year\nimport datetime\ndata[['year','month','day']]=data['Dt_Customer'].astype(str).str.split(\"-\",expand=True).astype(int)","8281b104":"data.head()","9962f491":"data.drop(columns=['Year_Birth','Dt_Customer','Complain'],axis=1,inplace=True)","586ba8d8":"data.shape","aae69003":"data.head()","bad0d1fc":"data.drop(columns=['ID','Recency','day','year'],axis=1,inplace=True)","4230c958":"data.head()","9c781230":"fig = px.histogram (data, x = \"Expenses\",  facet_row = \"Marital_Status\",  template = 'plotly_dark')\nfig.show ()","1efa0708":"fig = px.histogram (data, x = \"Expenses\",  facet_row = \"Education\",  template = 'plotly_dark')\nfig.show ()","a3d45980":"fig = px.histogram (data, x = \"NumTotalPurchases\",  facet_row = \"Education\",  template = 'plotly_dark')\nfig.show ()","409f676a":"fig = px.histogram (data, x = \"Age\",  facet_row = \"Marital_Status\",  template = 'plotly_dark')\nfig.show ()","b98ede63":"fig = px.histogram (data, x = \"Income\",  facet_row = \"Marital_Status\",  template = 'plotly_dark')\nfig.show ()","7ab2609d":"fig = px.histogram (data, x = \"Income\",  facet_row = \"Marital_Status\",  template = 'plotly_dark')\nfig.show ()","72291028":"fig =  px.pie (data, names = \"Marital_Status\", hole = 0.4, template = \"plotly_dark\")\nfig.show ()","269dbf76":"fig =  px.pie (data, names = \"Education\", hole = 0.4, template = \"plotly_dark\")\nfig.show ()","eaa281fa":"data.describe()","2bbdd8a4":"sns.heatmap(data.corr(),annot=True)","b17ffa62":"d_type=dict(data.dtypes)\nfor name, type_ in d_type.items():\n    if str(type_) == 'object':\n        print(\"<========{}=========>\".format(name))\n        print(data[name].value_counts())","6a77e372":"#Apply the label encoder\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler","ec4a2145":"for name, type_ in d_type.items():\n    if str(type_) == 'object':\n        le =LabelEncoder()\n        data[name]=le.fit_transform(data[name])","a4a98633":"data.head()","db2ea4bf":"data['Income']=np.log(data['Income'])\nsns.distplot(np.log(data['Income']))","bd2025ae":"scaled_features = StandardScaler().fit_transform(data.values)\nscaled_features_df = pd.DataFrame(scaled_features, index=data.index, columns=data.columns)","d02cc139":"data.head()","cb1be5dc":"scaled_features_df.head()","77054aa2":"from sklearn.cluster import KMeans","1d0fcbbd":"wcss=[]\nfor i in range (1,11):\n kmeans=KMeans(n_clusters=i,init='k-means++',random_state=42)\n kmeans.fit(scaled_features_df)\n wcss.append(kmeans.inertia_)\nplt.figure(figsize=(16,8))\nplt.plot(range(1,11),wcss, 'bx-')\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","78fee045":"from sklearn.metrics import silhouette_score ","b5014d61":"silhouette_scores = []\nfor i in range(2,10):\n    m1=KMeans(n_clusters=i, random_state=42)\n    c = m1.fit_predict(scaled_features_df)\n    silhouette_scores.append(silhouette_score(scaled_features_df, m1.fit_predict(scaled_features_df))) \nplt.bar(range(2,10), silhouette_scores) \nplt.xlabel('Number of clusters', fontsize = 20) \nplt.ylabel('S(i)', fontsize = 20) \nplt.show()","fe18d8e6":"silhouette_scores","436e76da":"# Getting the maximum value of silhouette score and adding 2 in index because index starts from 2.\n\nsc=max(silhouette_scores)\nnumber_of_clusters=silhouette_scores.index(sc)+2\nprint(\"Number of Cluster Required is : \", number_of_clusters)","3290b5ab":"# Training a predicting using K-Means Algorithm.\n\nkmeans=KMeans(n_clusters=number_of_clusters, random_state=42).fit(scaled_features_df)\npred=kmeans.predict(scaled_features_df)\n\n\n# Appending those cluster value into main dataframe (without standard-scalar)\n\ndata['cluster'] = pred + 1","52c83ce8":"data.head()","b4bfa2a9":"scaled_features_df.head()","063c607f":"# Clusters interpretation \nsns.set(rc={'axes.facecolor':'black', 'figure.facecolor':'black', 'axes.grid' : False, 'font.family': 'Ubuntu'})\n\nfor i in data:\n    diag = sns.FacetGrid(data, col = \"cluster\", hue = \"cluster\", palette = \"Set1\")\n    diag.map(plt.hist, i, bins=6, ec=\"k\") \n    diag.set_xticklabels(rotation=25, color = 'white')\n    diag.set_yticklabels(color = 'white')\n    diag.set_xlabels(size=16, color = 'white')\n    diag.set_titles(size=16, color = '#f01132', fontweight=\"bold\")\n    diag.fig.set_figheight(6)","a36f3e27":"> As it is not very clear from the elbow method that which value of K to choose.","830bec17":"Based on above information we can divide customer into 3 parts:-\nHighly Active Customer :- These customers belong to cluster one.\nModerately Active Customer :- These customers belong to cluster two.\nLeast Active Customer :- These customers belong to cluster third.\nCharacteristics of Highly Active Customer\nIn terms of Education\nHighly Active Customer are from PG background\nIn terms of Marital_status\nNumber of people in relationship are approx. two times of single people\nIn terms of Income\nIncome of Highly active customer are little less as compare to Moderately active customer.\n","e7769691":"> Here we are using Silhouette score to measure the value of K"}}