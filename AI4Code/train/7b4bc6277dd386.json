{"cell_type":{"f5ed20c8":"code","5ba5a1d9":"code","02cbf594":"code","f96f6e52":"code","ca34ad8e":"code","620bcc50":"code","81fa9a69":"code","7d6b5f2b":"code","ca223717":"code","c955b22d":"code","02f51cf1":"code","09b287c0":"code","ef9bf22a":"code","f55e6e03":"code","38a1b80f":"code","36115973":"code","8a9d0973":"code","c9783173":"code","66e508a3":"code","daeb9809":"code","9f85d7db":"code","2f304fcc":"code","38c26a21":"code","9199d77f":"code","c76d5724":"code","e31bcad6":"code","97cecd02":"code","8daf71cd":"code","577daf34":"code","87bf8fee":"code","75a772b9":"code","116a6e57":"code","ceaf8cf1":"markdown","68515aed":"markdown","39ee45c6":"markdown","313357cd":"markdown","4f0ed7d0":"markdown","843fa26d":"markdown","c71c2cb6":"markdown","8cf30a29":"markdown","ece7299a":"markdown","74fb5f25":"markdown","0f7f5815":"markdown","c1e43412":"markdown","d48e8dfa":"markdown","b6373d08":"markdown","48b51ff3":"markdown","b020806f":"markdown","5ba01881":"markdown","cd51e0c9":"markdown","16813b6b":"markdown","208cca7b":"markdown","b6430d60":"markdown","ef88e402":"markdown","4310561b":"markdown","3253a00c":"markdown"},"source":{"f5ed20c8":"import os\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\n%matplotlib inline","5ba5a1d9":"TRAIN_FILEPATH = os.path.join('..', 'input', 'train.csv')\nTEST_FILEPATH = os.path.join('..', 'input', 'test.csv')\n\ndf_train = pd.read_csv(TRAIN_FILEPATH)\ndf_test = pd.read_csv(TEST_FILEPATH)\n\ndf_train.head()","02cbf594":"# Affichage du nombre de trajets en fonction du temps\ndf_train[\"trip_duration\"].hist(bins=100)","f96f6e52":"# Zoom sur les 7000 premi\u00e8res secondes\ndf_train.loc[df_train[\"trip_duration\"] < 7000, \"trip_duration\"].hist(bins=100)","ca34ad8e":"# Mise en exergue des outliers en utilisant le logarithme\ndf_train['trip_duration'].hist(bins=100, log=True);","620bcc50":"# Dur\u00e9e moyenne d'un trajet (15 - 16 minutes)\ndf_train['trip_duration'].mean() \/ 60","81fa9a69":"# On retrouve des trajets de moins d'une minute pouvant fausser le calcul de dur\u00e9e\ndf_train.loc[df_train['trip_duration'] < 300, 'trip_duration'].hist(bins=150)","7d6b5f2b":"# Suppression des trajets de moins de 2 minutes et trajets de plus d'1h30\ndf_train = df_train[df_train['trip_duration'] > 50] # Repr\u00e9sente 2% du dataset\ndf_train = df_train[df_train['trip_duration'] < 3500]","ca223717":"# Affichage du nombre de donn\u00e9es manquantes (is NaN)\ndf_train.isna().sum()","c955b22d":"# Affichage du nombre de donn\u00e9es nulles\ndf_train.isnull().sum()","02f51cf1":"# Suppression des lignes en double en filtrant par l'id\ndf_train_dupdropped = df_train.drop_duplicates(subset='id')\n\n# Regarde combien de lignes ont \u00e9t\u00e9s supprim\u00e9es\nlen(df_train) - len(df_train_dupdropped)","09b287c0":"# Gestion des donn\u00e9es cat\u00e9goriques\nCAT_COL = \"store_and_fwd_flag\"\ndf_train[CAT_COL] = df_train[CAT_COL].astype('category').cat.codes\ndf_test[CAT_COL] = df_test[CAT_COL].astype('category').cat.codes","ef9bf22a":"import math\nfrom geopy.distance import geodesic\n\ndef compute_distance(df):\n    pointA = (df[\"pickup_latitude\"], df[\"pickup_longitude\"])\n    pointB = (df[\"dropoff_latitude\"], df[\"dropoff_longitude\"])\n\n    return geodesic(pointA, pointB).miles","f55e6e03":"# Calcul des distances sur le dataset train\ndf_train[\"distance\"] = df_train.apply(compute_distance, axis=1)\ndf_train.head(20)","38a1b80f":"# Calcul des distances \u00e9galement sur le dataset test\ndf_test[\"distance\"] = df_test.apply(compute_distance, axis=1)\ndf_test.head(20)","36115973":"# Nombre de trajets \u00e0 faible distance\ndf_train[df_train['distance'] < 0.3]['distance'].hist(bins=100)","8a9d0973":"# Suppression des trajets \u00e0 faible distance\ndf_train = df_train[df_train['distance'] > 0.3]","c9783173":"# Calcul des vitesses moyennes des taxis\nspeed = df_train['distance'] \/ ( df_train['trip_duration'] \/ 3600 )\ndf_train['speed'] = speed\n\ndf_train.head(20)","66e508a3":"# Nombre de taxis roulant \u00e0 plus de 75mph\ndf_train[speed > 75].count()","daeb9809":"# Affichage de ces taxis\ndf_train[speed > 75].head(40)","9f85d7db":"# Suppression de ces taxis\ndf_train = df_train[speed < 75]","2f304fcc":"df_train[\"pickup_hour\"] = pd.to_datetime(df_train.pickup_datetime).dt.hour\ndf_train[\"pickup_day\"] = pd.to_datetime(df_train.pickup_datetime).dt.dayofweek\n\ndf_test[\"pickup_hour\"] = pd.to_datetime(df_test.pickup_datetime).dt.hour\ndf_test[\"pickup_day\"] = pd.to_datetime(df_test.pickup_datetime).dt.dayofweek\n\ndf_train.head()","38c26a21":"# Nombre de trajets par heure\ndf_train[\"pickup_hour\"].plot.hist(bins=24, title=\"Fr\u00e9quence des trajets par heure\")","9199d77f":"# Fr\u00e9quence des trajets par jour\ndf_train['pickup_day'].plot.hist(bins=7)","c76d5724":"df_train.isnull().sum()","e31bcad6":"df_test.isna().sum()","97cecd02":"FEATURES = [\"pickup_latitude\", \"pickup_longitude\", \"dropoff_latitude\", \"dropoff_longitude\", \"pickup_hour\", \"pickup_day\", \"distance\"]\nTARGET = 'trip_duration'","8daf71cd":"X_train = df_train[FEATURES]\nY_train = df_train[TARGET]\n\nX_test = df_test[FEATURES]\n\nX_train.shape, Y_train.shape","577daf34":"from sklearn.ensemble import RandomForestRegressor\n\nm1 = RandomForestRegressor(n_estimators=15)\nm1.fit(X_train, Y_train)","87bf8fee":"from sklearn.model_selection import cross_val_score\n\ncv_scores = cross_val_score(m1, X_train, Y_train, cv=5, scoring='neg_mean_squared_log_error')\ncv_scores","75a772b9":"predictions = m1.predict(X_test)\npredictions[:10]","116a6e57":"submission = pd.DataFrame({'id': df_test['id'], 'trip_duration': predictions})\nsubmission.to_csv('submission.csv', index=False)\n\nsubmission.head()","ceaf8cf1":"Il n'ya aucune donn\u00e9e manquante","68515aed":"## Model Selection","39ee45c6":"### Submission","313357cd":"Je v\u00e9rifie que le traitement n'a pas g\u00e9n\u00e9r\u00e9 de valeurs nulles","4f0ed7d0":"### Gestion des donn\u00e9es dupliqu\u00e9es","843fa26d":"## Prediction","c71c2cb6":"### Gestion des donn\u00e9es cat\u00e9goriques","8cf30a29":"### Features creation : Ajout d'une colonne distance","ece7299a":"### Gestion des donn\u00e9es manquantes","74fb5f25":"La variation en fonction du jour est cependant plus faible. Cependant on remarque une faible chute les Samedi (6) et dimanche (0)","0f7f5815":"Globalement, on constate que de nombreux trajets entre **300** et **800** secondes\n\nLes trajets les plus courants se font entre **5 minutes et 15 minutes**","c1e43412":"On remarque des pics aux alentours de 0.","d48e8dfa":"### Features creation : Ajout des colonnes pickup_hour et pickup_day\n\nCr\u00e9ation de la colonne \"pickup_hour\" et \"pickup_day\" car selon les jours et les heures (jours de travail, matin \u00e0 8h ou soir \u00e0 22h), le temps d'un trajet peut varier suivant le traffic routier","b6373d08":"### Suppression des taxis en exc\u00e8s de vitesse\n\nSur l'\u00e9tat de New York, la vitesse maximal est de 75mph sur les grands axes. La vitesse ne devraient donc pas \u00e9xc\u00e9der celle-ci.","48b51ff3":"### Gestion \/ Suppression des distances erron\u00e9es\n\nMaintenant que nous avons calcul\u00e9 les distances, nous pouvons mieux traiter les donn\u00e9es \u00e9rron\u00e9es","b020806f":"### Gestion des outliers","5ba01881":"Il semble y avoir moins de trajets tr\u00e8s t\u00f4t en matin\u00e9e","cd51e0c9":"## Validation","16813b6b":"## Features engineering","208cca7b":"## Data preprocessing","b6430d60":"Aucune donn\u00e9e nulle","ef88e402":"## Data loading\n","4310561b":"Cr\u00e9ation de la colonne \"distance\" qui contiendra la distance entre les coordonn\u00e9es g\u00e9ographique de d\u00e9part (pickup_latitude, pickup_longitude) et d'arriv\u00e9e (dropoff_latitude, dropoff_longitude)\n\nLa formule donn\u00e9e par Wikip\u00e9dia pour calculer la distance \u00e0 vol d'oiseau\n$$M = 60\\arccos \\,[\\sin(\\varphi_A)\\sin(\\varphi_B) + \\cos(\\varphi_A)\\cos(\\varphi_B) \\cos (\\lambda_B - \\lambda_A)]\\,$$","3253a00c":"### Features selection"}}