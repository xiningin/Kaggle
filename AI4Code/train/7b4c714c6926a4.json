{"cell_type":{"5e4adb96":"code","b22f48d4":"code","ad999a03":"code","f63ee238":"code","3a99fab7":"code","bb962042":"code","cf643f63":"code","e1ca421f":"code","306ce935":"code","5dca5318":"code","69ec1c92":"code","687c9705":"code","7c4ffade":"markdown","5150982e":"markdown","71b9fa78":"markdown","d5de8e49":"markdown","d8b711b3":"markdown","c26a4d50":"markdown","1fdc2acc":"markdown","e3045a7c":"markdown"},"source":{"5e4adb96":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport numpy as np \nimport pandas as pd \nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import ConfusionMatrixDisplay,confusion_matrix,recall_score,accuracy_score,f1_score\nfrom sklearn.model_selection import train_test_split,GridSearchCV,cross_val_score\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns","b22f48d4":"data = pd.read_csv('..\/input\/beginners-classification-dataset\/classification.csv')\ndata.head()","ad999a03":"data.info()","f63ee238":"data.describe()","3a99fab7":"data[\"success\"].value_counts(normalize=True)","bb962042":"px.box(data[\"age\"],color=data[\"success\"])","cf643f63":"px.histogram(data[\"age\"],color=data[\"success\"])","e1ca421f":"px.box(data[\"interest\"],color=data[\"success\"])","306ce935":"px.histogram(data[\"interest\"],color=data[\"success\"])","5dca5318":"y = data[[\"success\"]]\nx = data.drop(columns=[\"success\"])\nxtrain,xtest,ytrain,ytest = train_test_split(x,y,test_size=0.25,random_state=123)\nrf = RandomForestClassifier(random_state=123)\nrf.fit(xtrain,ytrain)\nrf_pre = rf.predict(xtest)\nconfusin = confusion_matrix(ytest,rf_pre,labels=rf.classes_)\nprint(\"recall_score\",recall_score(ytest,rf_pre))\nprint(\"accuracy_score:\",accuracy_score(ytest,rf_pre))\nprint(\"f1_score:\",f1_score(ytest,rf_pre))\nConfusionMatrixDisplay(confusion_matrix=confusin,display_labels=rf.classes_).plot()","69ec1c92":"cross_val_score(rf,xtrain,ytrain.values.ravel(),cv=10).mean()","687c9705":"params={\n    \"n_estimators\":[100,150]\n    ,\"criterion\":[\"gini\",\"entropy\"]    \n}\nrf_2 = RandomForestClassifier(random_state=123)\ngd = GridSearchCV(rf_2,param_grid=params,cv=10)\ngd.fit(xtrain,ytrain.values.ravel())\ngd.best_params_","7c4ffade":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:0px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:10px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> <h1>1.2.1 Use default value<\/h1> <\/center> \n<\/div>\n","5150982e":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:0px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:10px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> <h1>1.2 Random forest<\/h1> <\/center> \n<\/div>","71b9fa78":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:0px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:10px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> <h1>1. Simple view of data<\/h1> <\/center> \n<\/div>","d5de8e49":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:0px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:10px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> <h1>1.2.2 Random Forest Tuning<\/h1> <\/center> \n<\/div>\n","d8b711b3":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:0px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:10px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> <h1>1.1 Data visualization\ud83d\udc68<\/h1> <\/center> \n<\/div> ","c26a4d50":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:0px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:20px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> <h1>\ud83c\udf33 Random forest algorithm  \ud83c\udf33<\/h1> <\/center> \n<\/div>","1fdc2acc":"**It's very unpleasant. Due to the small number of features, the results of tuning seem to be the same.**","e3045a7c":"<div style=\"color:#505541;\n           display:fill;\n           border-radius:0px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#Fae3d9;\n           font-size:15px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<h4> What are its important parameters? \ud83d\ude04<\/h4>\n<hr>  \n<ul>\n  <li>n_estimators:int, default=100 <br>\nThe number of trees in the forest.  <\/li>\n  <li>criterion{\u201cgini\u201d, \u201centropy\u201d}, default=\u201dgini\u201d <\/li>\n  <li>max_depth:  int, default=None <br>The maximum depth of the tree. If None, then nodes are expanded until all leaves are pure or until all leaves contain less than min_samples_split samples.<\/li>\n  <li>min_samples_split: int or float, default=2<br>The minimum number of samples required to split an internal node <\/li>\n  <li>min_impurity_decrease:float, default=0.0 <br>A node will be split if this split induces a decrease of the impurity greater than or equal to this value.<\/li>\n  <li>oob_scorebool: default=False<br>Whether to use out-of-bag samples to estimate the generalization score. Only available if bootstrap=True.<\/li>\n  <li>random_state<br>Controls both the randomness of the bootstrapping of the samples used when building trees (if bootstrap=True)  <\/li>\n<\/ul>    \n<hr>  \nThe above are the main parameters of random forest, of course, there are other parameters that need to be used slowly in practice..\n<\/div>"}}