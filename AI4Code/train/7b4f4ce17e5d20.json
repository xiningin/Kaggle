{"cell_type":{"3d46d854":"code","6944bc44":"code","0d348930":"code","cf3f691a":"code","37fdfa6a":"code","c0803067":"code","bf492e6c":"code","c80b4b69":"code","d9705f37":"code","8458decd":"markdown","56d78739":"markdown","ad6cf538":"markdown","3004c7f9":"markdown","0a60f428":"markdown","b2262273":"markdown","0ec4d3a9":"markdown","a7890012":"markdown","682793ca":"markdown","e6772abd":"markdown","55a00828":"markdown","f688a6aa":"markdown","cda7c9a0":"markdown","e0bbd469":"markdown"},"source":{"3d46d854":"from google.cloud import bigquery\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"openaq\" dataset\ndataset_ref = client.dataset(\"openaq\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)\n\n# List all the tables in the \"openaq\" dataset\ntables = list(client.list_tables(dataset))\n\n# Print names of all tables in the dataset (there's only one!)\nfor table in tables:  \n    print(table.table_id)","6944bc44":"# Construct a reference to the \"global_air_quality\" table\ntable_ref = dataset_ref.table(\"global_air_quality\")\n\n# API request - fetch the table\ntable = client.get_table(table_ref)\n\n# Preview the first five lines of the \"global_air_quality\" table\nclient.list_rows(table, max_results=5).to_dataframe()","0d348930":"# Query to select all the items from the \"city\" column where the \"country\" column is 'US'\nquery = \"\"\"\n        SELECT city\n        FROM `bigquery-public-data.openaq.global_air_quality`\n        WHERE country = 'US'\n        \"\"\"","cf3f691a":"# Create a \"Client\" object\nclient = bigquery.Client()","37fdfa6a":"# Set up the query\nquery_job = client.query(query)","c0803067":"# API request - run the query, and return a pandas DataFrame\nus_cities = query_job.to_dataframe()","bf492e6c":"# What five cities have the most measurements?\nus_cities.city.value_counts().head()","c80b4b69":"query = \"\"\"\n        SELECT city, country\n        FROM `bigquery-public-data.openaq.global_air_quality`\n        WHERE country = 'US'\n        \"\"\"","d9705f37":"QUERY = \"\"\"\n        SELECT *\n        FROM `bigquery-public-data.openaq.global_air_quality`\n        WHERE country = 'US'\n        \"\"\"","8458decd":"You can select all columns with a `*` like this:","56d78739":"Everything looks good! So, let's put together a query. Say we want to select all the values from the `city` column that are in rows where the `country` column is `'US'` (for \"United States\").","ad6cf538":"Next, we run the query and convert the results to a pandas DataFrame.","3004c7f9":"# More queries\n\nIf you want multiple columns, you can select them with a column between the names:","0a60f428":"# Example: What are all the U.S. cities in the OpenAQ dataset?\n\nNow that you've got the basics down, let's work through an example with a real dataset. We'll use an [OpenAQ](https:\/\/openaq.org) dataset about air quality.\n\nFirst, we'll set up everything we need to run queries and take a quick peek at what tables are in our database.  (_Since you learned how to do this in the previous tutorial, we have hidden the code.  But if you'd like to take a peek, you need only click on the \"Code\" button below._)","b2262273":"The dataset contains only one table, called `global_air_quality`.  We'll fetch the table and take a peek at the first few rows to see what sort of data it contains.  (_Again, we have hidden the code.  To take a peek, click on the \"Code\" button below._)","0ec4d3a9":"**[SQL Micro-Course Home Page](https:\/\/www.kaggle.com\/learn\/SQL)**\n\n---\n","a7890012":"We begin by setting up the query with the [`query()`](https:\/\/google-cloud.readthedocs.io\/en\/latest\/bigquery\/generated\/google.cloud.bigquery.client.Client.query.html#google.cloud.bigquery.client.Client.query) method.  We run the method with the default parameters, but this method also allows us to specify more complicated settings that you can read about in [the documentation](https:\/\/google-cloud.readthedocs.io\/en\/latest\/bigquery\/generated\/google.cloud.bigquery.client.Client.query.html#google.cloud.bigquery.client.Client.query).  We'll revisit this later.","682793ca":"# Q&A: Notes on formatting\n\nThe formatting of the SQL query might be a bit uncomfortable at first, so you have any questions, please post them in the comments section at the bottom of this page.  We've addressed a couple of common questions below.\n\n### **Question: What's up with the triple quotation marks (\"\"\")?**\n\n_Answer_: These tell Python that everything inside them is a single string, even though we have line breaks in it. The line breaks aren't necessary, but they make it easier to read your query.\n\n### **Question: Do you need to capitalize SELECT and FROM?**\n\n_Answer_: No, SQL doesn't care about capitalization. However, it's customary to capitalize your SQL commands, and it makes your queries a bit easier to read.","e6772abd":"---\n**[SQL Micro-Course Home Page](https:\/\/www.kaggle.com\/learn\/SQL)**\n\n","55a00828":"Now we've got a pandas DataFrame called `us_cities`, which we can use like any other DataFrame.","f688a6aa":"# Your Turn\n\nWriting **SELECT** statements is the key to using SQL. So **[try your new skills](https:\/\/www.kaggle.com\/kernels\/fork\/681989)**!\n","cda7c9a0":"# Introduction\n\nNow that you know how to access and examine a dataset, you're ready to write your first SQL query!  As you'll soon see, SQL queries will help you sort through a massive dataset, to retrieve only the information that you need.  \n\nWe'll begin by using the keywords **SELECT**, **FROM**, and **WHERE** to get data from specific columns based on conditions you specify. \n\nFor clarity, we'll work with a small imaginary dataset `pet_records` which contains just one table, called `pets`. \n\n![](https:\/\/i.imgur.com\/fI5Pvvp.png)\n\n# SELECT ... FROM\n\nThe most basic SQL query selects a single column from a single table.  To do this, \n- specify the column you want after the word **SELECT**, and then \n- specify the table after the word **FROM**.  \n\nFor instance, to select the `Name` column (from the `pets` table in the `pet_records` database in the `bigquery-public-data` project), our query would appear as follows:  \n\n![](https:\/\/i.imgur.com\/c3GxYRt.png)\n\nNote that when writing an SQL query, the argument we pass to **FROM** is *not* in single or double quotation marks (' or \"). It is in backticks (\\`).\n\n# WHERE ...\n\nBigQuery datasets are large, so you'll usually want to return only the rows meeting specific conditions. You can do this using the **WHERE** clause.\n\nThe query below returns the entries from the `Name` column that are in rows where the `Animal` column has the text `'Cat'`. \n\n![](https:\/\/i.imgur.com\/HJOT8Kb.png)","e0bbd469":"Take the time now to ensure that this query lines up with what you learned above.  \n\n# Submitting the query to the dataset\n\nWe're ready to use this query to get information from the OpenAQ dataset.  As in the previous tutorial, the first step is to create a [`Client`](https:\/\/google-cloud.readthedocs.io\/en\/latest\/bigquery\/generated\/google.cloud.bigquery.client.Client.html#google.cloud.bigquery.client.Client) object."}}