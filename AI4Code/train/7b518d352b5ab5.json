{"cell_type":{"738e0210":"code","67cbd52c":"code","51690ceb":"code","7d738fe1":"code","e964c546":"code","bce6520f":"code","bd20d9ed":"markdown","db5b76d5":"markdown","4723b30a":"markdown","fef33531":"markdown","c43ba0cc":"markdown","02120add":"markdown"},"source":{"738e0210":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pylab as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","67cbd52c":"state = \"CA\"\nCAdf = pd.read_csv(\"..\/input\/ca-wx-df\/CAdf.csv\")\ndf_dict = {\"CA\":CAdf}\nstate_df = df_dict[state]\n\nstate_df.head()","51690ceb":"# dept_id\u6bce\u306b\u8ca9\u58f2\u91cf\u5e73\u5747\u5024\u306e\u4e0a\u4f4d10\u5546\u54c1\u3092\u628a\u63e1\n\ndept_id_list = [\"HOBBIES_1\", \"HOBBIES_2\", \"FOODS_1\", \"FOODS_2\", \"FOODS_3\", \"HOUSEHOLD_1\", \"HOUSEHOLD_2\"]\nfig = plt.figure(figsize=(17,8))\n\ndef RANKlist_make(DF, fig, i):\n    df = DF.loc[:, DF.columns.str.contains(dept_id_list[i])].mean().sort_values(ascending=False).head(10)\n    return df\n\nRANKlist = []\nfor i in range(len(dept_id_list)):\n    RANKlist.append(list(RANKlist_make(state_df, fig, i).index))\n    \nRANKlist","7d738fe1":"# \u65e5\u7a4d\u7b97\u964d\u6c34\u91cf10mm\u3092\u95be\u5024\u306b\u3057\u3066\u307f\u308b\np = 10\n\nfor j in range(7):\n    TITLE = [i.replace(\"_validation\", \"\") for i in RANKlist[j]]\n    PRCP0 = state_df[state_df[\"PRCP\"]<p][RANKlist[j]].mean()\n    PRCP1 = state_df[state_df[\"PRCP\"]>=p][RANKlist[j]].mean()\n\n    fig = plt.figure(figsize=(18,2))\n    ax = fig.add_subplot(111)\n\n    ax.bar(np.arange(len(TITLE)), PRCP0, width=0.3, color=\"dodgerblue\", alpha=0.4)\n    ax.bar(np.arange(len(TITLE))+0.3, PRCP1, width=0.3, color=\"dodgerblue\")\n\n    ax.set_xticks(np.arange(len(TITLE)))\n    ax.set_xticklabels(TITLE)\n\n    plt.show()   ","e964c546":"# \u6700\u9ad8\u6c17\u6e29\u306e\u5e73\u5747\u5024\nprint(state_df[\"MAX\"].mean())\n\n# \u6700\u9ad8\u6c17\u6e29\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\nstate_df[\"MAX\"].hist()","bce6520f":"# \u6700\u9ad8\u6c17\u6e29\u5e73\u5747\u5024=22\u2103\u3092\u95be\u5024\u306b\u3057\u3066\u307f\u308b\nt = 22\n\nfor j in range(7):\n    TITLE = [i.replace(\"_validation\", \"\") for i in RANKlist[j]]\n    Tmmn = state_df[state_df[\"MAX\"]<t][RANKlist[j]].mean()\n    Tijo = state_df[state_df[\"MAX\"]>=t][RANKlist[j]].mean()\n\n    fig = plt.figure(figsize=(18,2))\n    ax = fig.add_subplot(111)\n\n    ax.bar(np.arange(len(TITLE)), Tmmn, width=0.3, color=\"salmon\", alpha=0.4)\n    ax.bar(np.arange(len(TITLE))+0.3, Tijo, width=0.3, color=\"salmon\")\n\n    ax.set_xticks(np.arange(len(TITLE)))\n    ax.set_xticklabels(TITLE)\n\n    plt.show()   ","bd20d9ed":"dept_id = HOUSEHOLD_1\uff08\u4e0b\u304b\u3089\uff12\u6bb5\u76ee\u306e\u30b0\u30e9\u30d5\uff09\u306f \"HOUSEHOLD_2_371_CA_3_validationn\"\uff081\u756a\u5de6\uff09 \u4ee5\u5916\u306f\u6982\u306d\u6700\u9ad8\u6c17\u6e29\u226722\u2103\u306e\u65e5\u306e\u5e73\u5747\u8ca9\u58f2\u6570\u304c\u3001\u6700\u9ad8\u6c17\u6e29\uff1c22\u2103\u306e\u65e5\u306e\u5e73\u5747\u8ca9\u58f2\u6570\u3088\u308a\u591a\u3044\u3002  \n\u2192 \u7a7a\u8abf\u95a2\u9023HOUSEHOLD\u30ab\u30c6\u30b4\u30ea\uff1f \u6c17\u6e29\u306b\u5f71\u97ff\u53d7\u3051\u308b\u5546\u54c1\u3082\u3042\u308b","db5b76d5":"#### id\u6bce\u306b\u964d\u6c34\u6709\u7121\u3067\u89b3\u5bdf","4723b30a":"dept_id = HOBBIES_2\uff08\uff12\u6bb5\u76ee\u306e\u30b0\u30e9\u30d5\uff09\u306e \"HOBBIES_2_075_CA_3_validation\"\uff081\u756a\u5de6\uff09 \u3068 \"HOBBIES_2_059_CA_3_validation\"\uff08\u5de6\u304b\u30894\u756a\u76ee\uff09 \u306f\u964d\u6c34\u91cf\u226710mm\u306e\u65e5\u306e\u5e73\u5747\u8ca9\u58f2\u6570\u304c\u3001\u964d\u6c34\u91cf\uff1c10mm\u306e\u65e5\u306e\u5e73\u5747\u8ca9\u58f2\u6570\u3088\u308a\u9855\u8457\u306b\u591a\u3044\u3002  \n\u2192 \u96e8\u5177\u95a2\u9023\u30db\u30d3\u30fc\u5546\u54c1\uff1f \u30a4\u30f3\u30c9\u30a2\u30db\u30d3\u30fc\u5546\u54c1\uff1f \u96e8\u306b\u5f71\u97ff\u53d7\u3051\u308b\u5546\u54c1\u3082\u3042\u308b","fef33531":"#### id\u6bce\u306b\u6c17\u6e29\u3067\u89b3\u5bdf","c43ba0cc":"### California\u30c7\u30fc\u30bf\u3068\u6c17\u8c61\u30c7\u30fc\u30bf\u3092\u30de\u30fc\u30b8\u3057\u3066\u4f5c\u3063\u305f\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u8aad\u307f\u8fbc\u3093\u3067\u4ee5\u4e0b\u9032\u3081\u307e\u3059\u3002\n* \"wday\"\u30ab\u30e9\u30e0\u306b[\u524d\u56de\u6295\u7a3f](https:\/\/www.kaggle.com\/fumiyokato\/japanese-stateholidays\/edit\/run\/34284832)\u3067\u7d39\u4ecb\u3057\u305f\u5dde\u653f\u5e9c\u306e\u795d\u65e5=0\u3067\u53cd\u6620\u3057\u3066\u3044\u307e\u3059\u3002 \n* California\u3092\u4ee3\u8868\u3057\u3066LosAngeles\u306e\u6c17\u8c61\u89b3\u6e2c\u30c7\u30fc\u30bf\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059","02120add":"# \u6c17\u8c61\u30c7\u30fc\u30bf\u3068\u8ca9\u58f2\u6570\u30c7\u30fc\u30bf\u3092\u5408\u308f\u305b\u3066\u89b3\u5bdf\u3057\u3066\u307f\u307e\u3057\u305f\n\u30b3\u30c1\u30e9\u2193\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u65b9\u6cd5\u3067\u6c17\u8c61\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3001\u8ca9\u58f2\u6570\u30c7\u30fc\u30bf\u3068\u5408\u308f\u305b\u3066\u898b\u3066\u307f\u307e\u3059  \n[https:\/\/www.kaggle.com\/yoshikikato\/weather-observation-data-japanese](http:\/\/)"}}