{"cell_type":{"21c8e5e5":"code","08cb133a":"code","3bd6cf83":"code","4f5f2a9b":"code","1c77e79d":"code","128bd04c":"code","e24e73f1":"code","205174d9":"code","8d19b746":"code","7af5137b":"code","50ca7cd9":"code","d9c33bb8":"code","ef600c6b":"markdown","e2e552c0":"markdown","4a4d968f":"markdown","fd31a416":"markdown","db1f6217":"markdown","07671686":"markdown","e331d925":"markdown"},"source":{"21c8e5e5":"import pandas as pd\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow import keras\nimport matplotlib.pyplot as plt\n%matplotlib inline","08cb133a":"train_df=pd.read_csv(\"..\/input\/mnist-60000-hand-written-number-images\/mnist_train.csv\")\ntest_df=pd.read_csv(\"..\/input\/mnist-60000-hand-written-number-images\/mnist_test.csv\")","3bd6cf83":"train_df","4f5f2a9b":"test_df","1c77e79d":"train_df.info()","128bd04c":"test_df.info()","e24e73f1":"print(\"Train data =\",train_df.shape)\nprint(\"Test data  =\",test_df.shape)","205174d9":"x_train = train_df.drop(\"5\",axis=1).values\n\nx_train = x_train\/255             # we have to convert 2D array to 1D array for input layers (neuron)\ny_train = train_df[\"5\"].values\n\n\n\nx_test = test_df.drop(\"7\",axis=1).values\n\nx_test = x_test\/255              # we have to convert 2D array to 1D array for input layers (neuron)\ny_test = test_df[\"7\"].values","8d19b746":"x_train=x_train.reshape(-1,28*28)\nx_test=x_test.reshape(-1,28*28)\nprint(\"-------------------x_train------------------------------- \\n\",x_train)\nprint(\" \")\nprint(\"-------------------x_test------------------------------- \\n\",x_test)","7af5137b":"model =keras.Sequential([\n    keras.layers.Dense(128,input_shape=(784,),activation='sigmoid'),\n    keras.layers.Dense(10,activation='sigmoid')\n])\n\n\nmodel.compile(optimizer='adam',\n             loss = 'sparse_categorical_crossentropy',\n             metrics=['accuracy']\n             )\nmodel.fit(x_train,y_train,epochs=15)","50ca7cd9":"model.evaluate(x_test,y_test)","d9c33bb8":"y_pred = model.predict(x_test)\nprint( \"Predcited Label :\",np.argmax(y_pred[0] ),\"\\n______________________\")\nprint()\nprint(\" \")\nplt.imshow(x_test[0].reshape(28,28))","ef600c6b":"### 3) Data Propressing","e2e552c0":"### 1) Importing Required Libraries","4a4d968f":"# 4) Training","fd31a416":"# Evaluvation","db1f6217":"### 2) Read Dataset ","07671686":"# Predicition","e331d925":"\n# Image Classification - MNIST_Handwritten Number Prediction\n\n#### Steps:\n\n#### 1) Import Library\n\n#### 2) Load Dataset\n\n#### 3) Data Preprocessing -  we have to convert 2D array to 1D array for input layers (neuron)\n\n#### 4) Training,Predicition,Evaluvation\n"}}