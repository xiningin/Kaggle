{"cell_type":{"6ea03c98":"code","92ed3302":"code","1d282993":"code","cb167eba":"code","8acc4551":"code","7256281a":"code","16ab9473":"code","1364a082":"markdown"},"source":{"6ea03c98":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport math","92ed3302":"df = pd.read_csv(\"..\/input\/liverpool-ion-switching\/test.csv\")","1d282993":"n_groups = 40\ndf[\"group\"] = 0\nfor i in range(n_groups):\n    ids = np.arange(i*50000, (i+1)*50000)\n    df.loc[ids,\"group\"] = i","cb167eba":"for i in range(n_groups):\n    sub = df[df.group == i]\n    signals = sub.signal.values\n    imax, imin = math.floor(np.max(signals)), math.ceil(np.min(signals))\n    signals = (signals - np.min(signals))\/(np.max(signals) - np.min(signals) + 2)\n#     signals = (signals - np.min(signals))\/(np.max(signals) - np.min(signals))\n    signals = signals*(imax-imin)\n    df.loc[sub.index,\"open_channels\"] = np.array(signals,np.int)","8acc4551":"sample_df = pd.read_csv(\"..\/input\/liverpool-ion-switching\/sample_submission.csv\", dtype={'time':str})","7256281a":"sample_df.open_channels = np.array(df.open_channels, np.int)\nsample_df.to_csv(\"submission.csv\",index=False)","16ab9473":"!head submission.csv","1364a082":"Credit goes to @suicaokhoailang\n\nhttps:\/\/www.kaggle.com\/suicaokhoailang\/an-embarrassingly-simple-baseline-0-960-lb"}}