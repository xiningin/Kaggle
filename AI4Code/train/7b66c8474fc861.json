{"cell_type":{"0f5da12f":"code","16584e23":"code","ce5e6a02":"code","9dcade4f":"code","e74342be":"code","c654fd12":"code","0fccb46f":"code","8e34abe3":"code","51f48b8e":"code","4ec5c492":"code","0718664d":"code","c612221c":"code","04fccae0":"code","f6d7385f":"code","121054d4":"code","65728287":"code","89492c97":"code","b53b75fa":"code","f3fb8661":"code","fa61bef6":"code","445348b9":"code","74e42bb8":"code","51353b78":"code","f4045c79":"code","c5b5d42a":"code","268b652d":"code","87715970":"code","7eab4214":"code","d59cfff7":"markdown","7b96c928":"markdown","c85b097e":"markdown","8f70d1ea":"markdown","ccc3b69c":"markdown","cd20e3f8":"markdown","955431dd":"markdown","e37c6c21":"markdown","aad07ab0":"markdown","5aee74ab":"markdown","263e3242":"markdown","f70bcc64":"markdown"},"source":{"0f5da12f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\nimport seaborn as sns\n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","16584e23":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId = test_df[\"PassengerId\"]","ce5e6a02":"train_df.columns\n#test_df.columns\n","9dcade4f":"train_df.head()","e74342be":"train_df.info()","c654fd12":"def bar_plot(variable):\n    \"\"\"\n    input: variable ex: \"Age\"\n    output: bar plot and value count\n    \"\"\"\n    var= train_df[variable]\n    \n    varValue = var.value_counts()\n    \n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index,varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))","0fccb46f":"category = [\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\nfor c in category:\n    bar_plot(c)","8e34abe3":"category2 = [\"Cabin\",\"Name\",\"Ticket\"]\nfor i in category2:\n     print(\"{} \\n\".format(train_df[i].value_counts()))","51f48b8e":"def plot_hist(variable):\n    plt.figure(figsize=(9,3))\n    plt.hist(train_df[variable],bins = 80)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} dist with histogram\".format(variable))\n    plt.show()","4ec5c492":"# \"Fare\", \"Age\", \"PassengerId\" --> is numrical variables\nnumericVar = [\"Fare\",\"Age\"]\nfor n in numericVar:\n    plot_hist(n)","0718664d":"train_df[[\"Pclass\",\"Survived\"]]","c612221c":"train_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index = False).mean()\n","04fccae0":"# Pclass for Survived\ntrain_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index = False).mean().sort_values(by=\"Survived\",ascending=False)","f6d7385f":"# Sex for Survived\ntrain_df[[\"Sex\",\"Survived\"]].groupby([\"Sex\"], as_index = False).mean().sort_values(by=\"Survived\",ascending=False)","121054d4":"# SibSp for Survived\ntrain_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"], as_index = False).mean().sort_values(by=\"Survived\",ascending=False)","65728287":"# Parch for Survived\ntrain_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"], as_index = False).mean().sort_values(by=\"Survived\",ascending=False)","89492c97":"def det_outliers(df,features):\n    outliers_in = []\n    for c in features:\n        # First Q\n        Q1= np.percentile(df[c],25)\n        # Third Q\n        Q3= np.percentile(df[c],75)\n        # IQR\n        IQR = Q3-Q1\n        # Outlier_step\n        outlier_step = IQR*1.5\n        # Detect Outliers and indices\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index \n        # Store indices\n        outliers_in.extend(outlier_list_col)\n    outliers_in = Counter(outliers_in)    \n    mult_outliers= list(i for i,v in outliers_in.items() if v >2)\n    \n    return mult_outliers","b53b75fa":"train_df.loc[det_outliers(train_df,[\"Age\",\"SibSp\",\"Fare\",\"Parch\"])]","f3fb8661":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df,test_df],axis=0).reset_index(drop = True)","fa61bef6":"train_df.head(10)","445348b9":"train_df.columns[train_df.isnull().any()]","74e42bb8":"train_df.isnull().sum()","51353b78":"train_df[train_df[\"Embarked\"].isnull()]","f4045c79":"train_df.boxplot(column=\"Fare\",by=\"Embarked\")\n\n        ","c5b5d42a":"train_df[\"Embarked\"] = train_df[\"Embarked\"].fillna(\"C\")\n#train_df[train_df[\"Embarked\"].isnull()]\ntrain_df.isnull().sum()","268b652d":"train_df[train_df[\"Fare\"].isnull()]","87715970":"train_df[\"Fare\"] = train_df[\"Fare\"].fillna(np.mean(train_df[train_df[\"Pclass\"]==3][\"Fare\"]))\n","7eab4214":"train_df.isnull().sum()","d59cfff7":"<a id=\"6\"><\/a><br>\n## Basic Data Analysis\n \n * Survived \n   * Pclass\n   * Sex\n   * SibSp\n   * Parch","7b96c928":"<a id=\"3\"><\/a><br>\n## Unvariate Variable Analysis\n     * Categorical Variable: Survived, Sex, Pclass, Embarked, Cabin, Name, Ticket, SibSp and Parch\n     * Numerical Variable: Fare, Age and PassengerId","c85b097e":"float = Age and Fare<br>\nint = Pclass, SibSp, Parch, PassengerId, Survived<br>\nobject = Name, Sex, Cabin, Embarked","8f70d1ea":"<a id=\"10\"><\/a><br>\n### Fill Missing Value\n* Embarked\n* Fare","ccc3b69c":"<a id=\"7\"><\/a><br>\n## Outlier Detection","cd20e3f8":"<a id=\"8\"><\/a><br>\n## Missing Value\n\n* Find Missing Value\n* Fill Missing Value","955431dd":"<a id=\"5\"><\/a><br>\n### Numerical Variable\n","e37c6c21":"<a id=\"2\"><\/a><br>\n## Variable Description\n\n 1. PassengerId: id number of passengers\n 1. Survived: passenger survived = 1 or died = 0\n 1. Pclass: passenger classes 1,2 or 3\n 1. Name: name of passenger\n 1. Sex: gender of passenger\n 1. Age: age of passenger\n 1. SibSp: number of sibling\/spouse\n 1. Parch: number of parent\/children\n 1. Ticket: passengers ticket\n 1. Fare: amount of money ticket\n 1. Cabin: cabin category\n 1. Embarked: ports, S = Southampton, C = Chergourg, Q = Quenstown ","aad07ab0":"<a id='1'><\/a><br>\n## Load and Check Data","5aee74ab":"<a id=\"4\"><\/a><br>\n### Categorical Variable","263e3242":"<a id=\"9\"><\/a><br>\n### Find Missing Value","f70bcc64":"<font color = \"bright black\"> \n\n# Introduction\nRMS Titanic was a British passenger liner operated by the White Star Line that sank in the North Atlantic Ocean in the early morning hours of 15 April 1912, after striking an iceberg during her maiden voyage from Southampton to New York City. Of the estimated 2,224 passengers and crew aboard, more than 1,500 died, making the sinking one of modern history's deadliest peacetime commercial marine disasters.\n<font color = \"red\"> \n### Content:\n   \n  \n  1. [Load and Check Data](#1)\n  1. [Variable Description](#2)\n    \n     * [Unvariate Variable Analysis](#3)\n        \n        * [Categorical Variable](#4)\n        \n        * [Numerical Variable](#5)\n  \n  1. [Basic Data Analysis](#6)\n  1. [Outlier Detection](#7)  \n  1. [Missing Value](#8)  \n        \n        * [Find Missing Value](#9)\n    \n        * [Fill Missing Value](#10)"}}