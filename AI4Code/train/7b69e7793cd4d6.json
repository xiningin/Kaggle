{"cell_type":{"7d305554":"code","98cb57d3":"code","5a169f7e":"code","cd585fe3":"code","3208f8f5":"code","21313833":"code","8c75a2e3":"code","0cebf244":"code","df284331":"code","3df3f31b":"code","8d1f6548":"code","42ac325a":"code","b7a6f1c4":"code","dcf11451":"code","e5570318":"code","0693b645":"code","3ef87ba6":"code","91736488":"code","d929237c":"code","9c49f65e":"code","a3f135f1":"code","e719bfce":"code","3fa3f8db":"code","ee8ec4f7":"code","10159425":"code","48a34e22":"code","966bce9c":"code","676cf1d0":"code","5b140266":"code","435e0605":"code","07b0f623":"code","eed02f39":"code","6d18f942":"code","0c6f8485":"code","2382faef":"code","e2ccdfe2":"code","045e86d7":"code","40a3b2c9":"code","28801c1f":"code","aa1ebf86":"code","bba259ea":"code","3e710b54":"code","c1f3d890":"code","cf06028a":"code","fa124f78":"code","ca85aa99":"code","5655f2df":"code","16704682":"code","36ef495b":"code","33d711dd":"code","db58a604":"code","b970cbba":"code","63a45b58":"code","ba560088":"code","84599856":"markdown","f690dc67":"markdown","107102fb":"markdown","296b951b":"markdown","42185f04":"markdown","3195efdf":"markdown","6aa2d514":"markdown","b480c074":"markdown","d3ad955e":"markdown","24c13e4d":"markdown","5eefecdb":"markdown","da405287":"markdown","7129a08f":"markdown","2effa128":"markdown","b5d9e4ea":"markdown","71ed8b8d":"markdown","beffc5d9":"markdown","70e1bb2d":"markdown","269fcaa1":"markdown","a7091b2f":"markdown","cc9633bd":"markdown","cc2620be":"markdown","ddce3d37":"markdown","e159f066":"markdown","eb694353":"markdown","016c567d":"markdown"},"source":{"7d305554":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.express as px\nimport plotly.offline as py\nimport plotly.graph_objs as go\npy.init_notebook_mode(connected=True)\nimport folium\nfrom scipy.integrate import odeint\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","98cb57d3":"df1 = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/COVID19_line_list_data.csv')\ndf1.head(2)","5a169f7e":"df1 = df1[df1.columns[:-8]]\ndf1.drop('Unnamed: 3', axis=1, inplace=True)","cd585fe3":"df1.head(2)","3208f8f5":"df1['reporting date'] = pd.to_datetime(df1['reporting date'])\ndf1['exposure_start'] = pd.to_datetime(df1['exposure_start'])\ndf1['exposure_end'] = pd.to_datetime(df1['exposure_end'])\ndf1['hosp_visit_date'] = pd.to_datetime(df1['hosp_visit_date'])\ndf1['symptom_onset'] = pd.to_datetime(df1['symptom_onset'])","21313833":"df2 = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/COVID19_open_line_list.csv')\ndf2 = df2[df2.columns[:-12]]\ndf2.loc[df2['sex']=='male', 'sex'] = 'Male'\ndf2.loc[df2['sex']=='female', 'sex'] = 'Female'\ndf2.head(2)","8c75a2e3":"df3 = pd.read_csv(\"..\/input\/corona-virus-report\/covid_19_clean_complete.csv\")\ndf3.head()","0cebf244":"df_loc = pd.DataFrame(df1.groupby(['country'])['location'].nunique()).reset_index().sort_values(by='location', ascending=False).reset_index(drop=True)\ndf_loc.loc[df_loc.shape[0]]=['Total: '+str(df_loc['country'].nunique()), 'Total: '+str(df_loc['location'].sum())]\ndf_loc","df284331":"df1.head(2)","3df3f31b":"df1['sym_exp_diff'] = (df1['symptom_onset'] - df1['exposure_end']).dt.days\ndf1['hosp_sym_diff'] = (df1['hosp_visit_date'] - df1['symptom_onset']).dt.days","8d1f6548":"fig = px.pie(df1, values=[df1['gender'].value_counts()[0], df1['gender'].value_counts()[1]], names=['Male', 'Female'], title='Male v Female Affected Ratio')\nfig.show()","42ac325a":"fig = px.violin(df2[df2['sex']!='4000'].dropna(subset=['age', 'sex']), y=\"age\", x='sex', color=\"sex\",\n                hover_data=df2.columns, title='Age Ratio of people affected b\/w the two genders')\nfig.show()","b7a6f1c4":"# Credits: https:\/\/www.kaggle.com\/imdevskp\/covid-19-analysis-visualization-comparisons, Devakumar Kp\n\nm = folium.Map(location=[0, 0], tiles='cartodbpositron',\n               min_zoom=1, max_zoom=4, zoom_start=1)\n\ndf3_mapping = df3.dropna(subset=['Confirmed']).reset_index(drop=True)\n\nfor i in range(0, len(df3_mapping)):\n    folium.Circle(\n        location=[df3_mapping.iloc[i]['Lat'], df3_mapping.iloc[i]['Long']],\n        color='crimson', \n        tooltip =   '<li><bold>Country : '+str(df3_mapping.iloc[i]['Country\/Region'])+\n                    '<li><bold>Province : '+str(df3_mapping.iloc[i]['Province\/State'])+\n                    '<li><bold>Confirmed : '+str(df3_mapping.iloc[i]['Confirmed'])+\n                    '<li><bold>Deaths : '+str(df3_mapping.iloc[i]['Deaths'])+\n                    '<li><bold>Recovered : '+str(df3_mapping.iloc[i]['Recovered']),\n        radius=int(df3_mapping.iloc[i]['Confirmed'])**1.1).add_to(m)\nm","dcf11451":"ncov_df = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\n\nncov_df['ObservationDate'] = pd.to_datetime(ncov_df['ObservationDate']) \n\nncov_df[\"Country\"] = ncov_df[\"Country\/Region\"].replace(\n    {\n        \"Mainland China\": \"China\",\n        \"Hong Kong SAR\": \"Hong Kong\",\n        \"Taipei and environs\": \"Taiwan\",\n        \"Iran (Islamic Republic of)\": \"Iran\",\n        \"Republic of Korea\": \"South Korea\",\n        \"Republic of Ireland\": \"Ireland\",\n        \"Macao SAR\": \"Macau\",\n        \"Russian Federation\": \"Russia\",\n        \"Republic of Moldova\": \"Moldova\",\n        \"Taiwan*\": \"Taiwan\",\n        \"Cruise Ship\": \"Others\",\n        \"United Kingdom\": \"UK\",\n        \"Viet Nam\": \"Vietnam\",\n        \"Czechia\": \"Czech Republic\",\n        \"St. Martin\": \"Saint Martin\",\n        \"Cote d'Ivoire\": \"Ivory Coast\",\n        \"('St. Martin',)\": \"Saint Martin\",\n        \"Congo (Kinshasa)\": \"Congo\",\n    }\n)\nncov_df[\"Province\"] = ncov_df[\"Province\/State\"].fillna(\"-\").replace(\n    {\n        \"Cruise Ship\": \"Diamond Princess cruise ship\",\n        \"Diamond Princess\": \"Diamond Princess cruise ship\"\n    }\n)","e5570318":"ncov_df.head()","0693b645":"ncov_china = ncov_df[ncov_df['Country'] == 'China']\nncov_china = pd.DataFrame(ncov_china.groupby(['ObservationDate'])['Confirmed', 'Deaths', 'Recovered'].sum()).reset_index()\nfig1 = go.Figure()\nfig1.add_trace(go.Scatter(x=ncov_china['ObservationDate'], y=ncov_china['Confirmed'], name='Confirmed Cases'))\nfig1.add_trace(go.Scatter(x=ncov_china[21:23]['ObservationDate'], y=ncov_china[21:23]['Confirmed'], mode='markers', name='Inflection', marker=dict(color='Red',line=dict(width=5, color='Red'))))\nfig1.layout.update(title_text='COVID-19 Growth in China & Inflection',xaxis_showgrid=False, yaxis_showgrid=False, width=800,\n        height=500,font=dict(\n#         family=\"Courier New, monospace\",\n        size=12,\n        color=\"white\"\n    ))\nfig1.layout.plot_bgcolor = 'Black'\nfig1.layout.paper_bgcolor = 'Black'\nfig1.show()","3ef87ba6":"fig = px.box(df1.dropna(subset=['sym_exp_diff']), y=\"sym_exp_diff\", points='all', title='Days difference between symptom and exposure dates') # typically after how many days after the exposure do the symptoms come up\n# fig.layout.plot_bgcolor = '#6A7806'\n# fig.layout.paper_bgcolor = '#6A7806'\nfig.show()","91736488":"fig = px.box(df1.dropna(subset=['hosp_sym_diff']).reset_index(drop=True), y=\"hosp_sym_diff\", points='all', \\\n             title='Days difference between hospital visit and symptom dates') # typically after how many days after the exposure do the symptoms come up\nfig.show()","d929237c":"ncov_italy = ncov_df[ncov_df['Country'] == 'Italy']\nncov_us = ncov_df[ncov_df['Country'] == 'US']\nncov_spain = ncov_df[ncov_df['Country'] == 'Spain']\nncov_germany = ncov_df[ncov_df['Country'] == 'Germany']\nncov_iran = ncov_df[ncov_df['Country'] == 'Iran']\nncov_france = ncov_df[ncov_df['Country'] == 'France']\nncov_uk = ncov_df[ncov_df['Country'] == 'UK']\nncov_swiss = ncov_df[ncov_df['Country'] == 'Switzerland']\nncov_soukor = ncov_df[ncov_df['Country'] == 'South Korea']\n\nncov_italy = pd.DataFrame(ncov_italy.groupby(['ObservationDate'])['Confirmed', 'Deaths', 'Recovered'].sum()).reset_index()\nncov_us = pd.DataFrame(ncov_us.groupby(['ObservationDate'])['Confirmed', 'Deaths', 'Recovered'].sum()).reset_index()\nncov_spain = pd.DataFrame(ncov_spain.groupby(['ObservationDate'])['Confirmed', 'Deaths', 'Recovered'].sum()).reset_index()\nncov_germany = pd.DataFrame(ncov_germany.groupby(['ObservationDate'])['Confirmed', 'Deaths', 'Recovered'].sum()).reset_index()\nncov_iran = pd.DataFrame(ncov_iran.groupby(['ObservationDate'])['Confirmed', 'Deaths', 'Recovered'].sum()).reset_index()\nncov_france = pd.DataFrame(ncov_france.groupby(['ObservationDate'])['Confirmed', 'Deaths', 'Recovered'].sum()).reset_index()\nncov_uk = pd.DataFrame(ncov_uk.groupby(['ObservationDate'])['Confirmed', 'Deaths', 'Recovered'].sum()).reset_index()\nncov_swiss = pd.DataFrame(ncov_swiss.groupby(['ObservationDate'])['Confirmed', 'Deaths', 'Recovered'].sum()).reset_index()\nncov_soukor = pd.DataFrame(ncov_soukor.groupby(['ObservationDate'])['Confirmed', 'Deaths', 'Recovered'].sum()).reset_index()","9c49f65e":"ncov_all = pd.DataFrame(ncov_df.groupby(['Country', 'ObservationDate'])['Confirmed', 'Deaths', 'Recovered'].sum()).reset_index().drop_duplicates(subset=['Country'], keep='last')\nncov_all.reset_index(drop=True, inplace=True)\nncov_all = ncov_all.sort_values(by=['Confirmed'], ascending=False).reset_index(drop=True)\nncov_all = ncov_all.head(10)","a3f135f1":"fig = go.Figure(data=[\n    go.Bar(name='Confirmed',x=ncov_all['Country'].unique(), y=ncov_all['Confirmed']),\n    go.Bar(name='Deaths', x=ncov_all['Country'].unique(), y=ncov_all['Deaths']),\n    go.Bar(name='Recovered', x=ncov_all['Country'].unique(), y=ncov_all['Recovered'])\n])\n# Change the bar mode\nfig.layout.update(barmode='stack', title='Top 10 Country-wise Corona Cases & Consequences', yaxis_showgrid=False)\nfig.show()","e719bfce":"fig1 = go.Figure()\nfig1.add_trace(go.Scatter(x=ncov_italy['ObservationDate'], y=ncov_italy['Confirmed'], name='Italy'))\nfig1.add_trace(go.Scatter(x=ncov_us['ObservationDate'], y=ncov_us['Confirmed'], name='USA'))\nfig1.add_trace(go.Scatter(x=ncov_spain['ObservationDate'], y=ncov_spain['Confirmed'], name='Spain'))\nfig1.add_trace(go.Scatter(x=ncov_uk['ObservationDate'], y=ncov_uk['Confirmed'], name='UK'))\nfig1.add_trace(go.Scatter(x=ncov_germany['ObservationDate'], y=ncov_germany['Confirmed'], name='Germany'))\nfig1.add_trace(go.Scatter(x=ncov_iran['ObservationDate'], y=ncov_iran['Confirmed'], name='Iran'))\nfig1.add_trace(go.Scatter(x=ncov_france['ObservationDate'], y=ncov_france['Confirmed'], name='France'))\n\nfig1.layout.update(title_text='COVID-19 Growth in Rest of the World',xaxis_showgrid=False, yaxis_showgrid=False, width=800,\n        height=500,font=dict(\n        size=12,\n        color=\"white\"\n    ))\nfig1.layout.plot_bgcolor = 'Black'\nfig1.layout.paper_bgcolor = 'Black'\nfig1.show()","3fa3f8db":"ncov_all['CD_Ratio'] = ncov_all['Deaths']\/ncov_all['Confirmed']\nncov_all['CR_Ratio'] = ncov_all['Recovered']\/ncov_all['Confirmed']\nncov_all = ncov_all.round(2)\nncov_all.head()","ee8ec4f7":"ncov_all_cdr = ncov_all.sort_values(by=['CD_Ratio'], ascending=False).reset_index(drop=True)\nncov_all_crr = ncov_all.sort_values(by=['CR_Ratio'], ascending=False).reset_index(drop=True)\nfig = px.bar(ncov_all_cdr, x=\"Country\", y=\"CD_Ratio\", color='CD_Ratio', title='Country-wise Death:Confirmed Cases Ratio')\nfig.show()","10159425":"fig = px.bar(ncov_all_crr, x=\"Country\", y=\"CR_Ratio\", color='CR_Ratio', title='Country-wise Recovered:Confirmed Cases Ratio')\nfig.show()","48a34e22":"df2_china = df2[df2['country']=='China'].dropna(subset=['age']).reset_index(drop=True)\ndf2_italy = df2[df2['country']=='Italy'].dropna(subset=['age']).reset_index(drop=True)\ndf2_china.head(2)","966bce9c":"fig = go.Figure()\nfig.add_trace(go.Box(y=df2_china['age'], name='China'))\nfig.add_trace(go.Box(y=df2_italy['age'], name='Italy'))\nfig.update_layout(title='Age Comparison between Chinese and Italians')\n\nfig.show()","676cf1d0":"def clean(x):\n    if x == 'death' or x == 'died' or x == 'Death':\n        return 'death'\n    elif x == 'discharged' or x=='discharge':\n        return 'discharge'\n    elif x == 'recovered' or x=='stable':\n        return 'recovered'\n    else:\n        return np.nan\n    \ndef apply_int(x):\n    try:\n        y = int(x)\n        return y\n    except:\n        return np.nan\n\n    \ndf1_chinese = pd.DataFrame(df2_china[df2_china['outcome'].apply(clean)=='death']['age'].apply(apply_int)).assign(outcome='death')\ndf2_chinese = pd.DataFrame(df2_china[df2_china['outcome'].apply(clean)=='discharge']['age'].apply(apply_int)).assign(outcome='discharge')\ndf3_chinese = pd.DataFrame(df2_china[df2_china['outcome'].apply(clean)=='recovered']['age'].apply(apply_int)).assign(outcome='recovered')\n\nfig = go.Figure()\nfig.add_trace(go.Box(y=df1_chinese['age'], name=\"Deceased Patients\"))\nfig.add_trace(go.Box(y=df2_chinese['age'], name=\"Discharged Patients\"))\nfig.add_trace(go.Box(y=df3_chinese['age'], name=\"Recovered Patients\"))\nfig.update_layout(title_text='Chinese COVID-19 Patients Outcome Age-Wise')\nfig.show()","5b140266":"df_india= pd.read_csv('..\/input\/coronavirus-cases-in-india\/Covid cases in India.csv')\ndbd_India = pd.read_excel('..\/input\/coronavirus-cases-in-india\/per_day_cases.xlsx',sheet_name='India')\ndbd_tc_india = pd.read_excel('..\/input\/covid19-india-complete-data\/COVID19 India Complete Dataset April 2020.xlsx', sheet_name='Daily Cases Time-Series')","435e0605":"dbd_tc_india.head(2)","07b0f623":"dbd_India.head(2)","eed02f39":"db_india = pd.DataFrame(dbd_tc_india.groupby(['Date'])['Total Confirmed'].sum()).reset_index()\n\nfig1 = go.Figure()\nfig1.add_trace(go.Scatter(x=db_india['Date'], y=db_india['Total Confirmed']))\nfig1.layout.update(title_text='COVID-19 Growth in India',xaxis_showgrid=False, yaxis_showgrid=False, width=800,\n        height=500,font=dict(\n#         family=\"Courier New, monospace\",\n        size=12,\n        color=\"white\"\n    ))\nfig1.layout.plot_bgcolor = 'Black'\nfig1.layout.paper_bgcolor = 'Black'\nfig1.show()","6d18f942":"db_state_india = pd.read_excel('..\/input\/covid19-india-complete-data\/COVID19 India Complete Dataset April 2020.xlsx', sheet_name='State-Wise Data')\ndb_state_india = db_state_india[db_state_india['State']!='Total']\ndb_state_india.head(2)","0c6f8485":"fig = px.bar(db_state_india.sort_values('Confirmed', ascending=False).sort_values('Confirmed', ascending=True),\n             x=\"Confirmed\", y=\"State\", \n             title='Total Confirmed Cases', \n             text='Confirmed', \n             orientation='h', \n             width=800, height=800, range_x = [0, max(db_state_india['Confirmed'])])\nfig.update_traces(marker_color='#670404', opacity=0.8, textposition='inside')\n\nfig.update_layout(plot_bgcolor='#CDCCA7')\nfig.show()","2382faef":"dbd_testing_india = pd.read_excel('..\/input\/covid19-india-complete-data\/COVID19 India Complete Dataset April 2020.xlsx', sheet_name='ICMR Testing Count')\ndbd_testing_india['Update Time Stamp'] = pd.to_datetime(dbd_testing_india['Update Time Stamp'], format='%d\/%m\/%Y %I:%M: %p')\ndbd_testing_india.head(2)","e2ccdfe2":"df_hos_bed = dbd_testing_india.rename(columns={'Update Time Stamp':'DateTime', 'Total Individuals Tested':'TotalIndividualsTested', 'Total Positive Cases':\\\n                                              'TotalPositiveCases'}).copy()\ndf_hos_bed['DateTime'] = df_hos_bed['DateTime'].dt.date\ndf_hos_bed.head()","045e86d7":"df_hos_bed['totalnegative'] = df_hos_bed['TotalIndividualsTested'] - df_hos_bed['TotalPositiveCases']","40a3b2c9":"df_hos_bed_per_day = df_hos_bed.drop_duplicates(subset=['DateTime'], keep='last')\ndf_hos_bed_per_day['test_results_posratio'] = round(df_hos_bed_per_day['TotalPositiveCases']\/df_hos_bed_per_day['TotalIndividualsTested'], 3)\ndf_hos_bed_per_day.head()","28801c1f":"df_indi = pd.read_csv('..\/input\/covid19-in-india\/IndividualDetails.csv')\ndf_indi.head(2)","aa1ebf86":"df_indi.dropna(subset=['current_status', 'age'], inplace=True)\ndf_indi.reset_index(drop=True, inplace=True)","bba259ea":"df_indi['current_status'].unique(), df_indi.shape","3e710b54":"df1_indians = df_indi[df_indi['current_status'] == 'Deceased']\ndf2_indians = df_indi[df_indi['current_status'] == 'Hospitalized']\ndf3_indians = df_indi[df_indi['current_status'] == 'Recovered']\n\nfig = go.Figure()\nfig.add_trace(go.Box(y=df1_indians['age'], name=\"Deceased Patients\"))\nfig.add_trace(go.Box(y=df2_indians['age'], name=\"Hospitalized Patients\"))\nfig.add_trace(go.Box(y=df3_indians['age'], name=\"Recovered Patients\"))\nfig.update_layout(title_text='Indian COVID-19 Patients Outcome Age-Wise')\nfig.show()","c1f3d890":"pep_no_trav_his = df_indi[df_indi['notes'].str.contains('Travel') == False]\npep_with_trav_his = df_indi[df_indi['notes'].str.contains('Travel') == True]","cf06028a":"df_indi['id'].nunique(), pep_no_trav_his['id'].nunique()","fa124f78":"colors = ['#B5B200', '#1300B5']\nnegative = round(pep_no_trav_his['id'].nunique()\/df_indi['id'].nunique()*100, 2)\npositive = round(pep_with_trav_his['id'].nunique()\/df_indi['id'].nunique()*100, 2)\n                         \nfig = px.pie(pep_no_trav_his, values=[negative, positive], names=['Patients w\/o Travel History', 'Patients with Travel History'], \\\n             title='Patients with and without Travel History')\nfig.show()","ca85aa99":"from wordcloud import WordCloud, STOPWORDS\nstopwords = set(STOPWORDS)\n\ndef show_wordcloud(data, title = None):\n    wordcloud = WordCloud(\n        background_color='black',\n        stopwords=stopwords,\n        max_words=200,\n        max_font_size=40, \n        scale=3,\n        random_state=69 # chosen at random by flipping a coin; it was heads\n).generate(str(data))\n\n    fig = plt.figure(1, figsize=(15, 15))\n    plt.axis('off')\n    if title: \n        fig.suptitle(title, fontsize=20)\n        fig.subplots_adjust(top=2.3)\n\n    plt.imshow(wordcloud)\n    plt.show()\n\nshow_wordcloud(pep_no_trav_his['notes'].apply(lambda x: x.replace('travel', '')))","5655f2df":"colors = ['#269A06', '#AF0E06']\ndf_hos_bed_per_day_clean = df_hos_bed_per_day.dropna(subset=['TotalPositiveCases']).reset_index(drop=True)\ndf_hos_bed_per_day_clean['TotalIndividualsTested'].fillna(df_hos_bed_per_day_clean['Total Samples Tested']-900, inplace=True)\ndf_hos_bed_per_day_clean['totalnegative'] = df_hos_bed_per_day_clean['TotalIndividualsTested'] - df_hos_bed_per_day_clean['TotalPositiveCases']\nnegative = round(df_hos_bed_per_day_clean['totalnegative'].sum()\/df_hos_bed_per_day_clean['TotalIndividualsTested'].sum()*100, 2)\npositive = round(df_hos_bed_per_day_clean['TotalPositiveCases'].sum()\/df_hos_bed_per_day_clean['TotalIndividualsTested'].sum()*100, 2)\nfig = go.Figure(data=[go.Pie(labels=['People who tested Negative','People who tested Positive'],\n                             values= [negative,positive],hole =.5)])\n                          \n\nfig.update_traces(title_text='COVID19 Test Results', hoverinfo='label+percent', textinfo='value', textfont_size=15,\n                  marker=dict(colors=colors, line=dict(color='#FFFFFF', width=2)))\nfig.show()","16704682":"%%HTML\n<div class=\"infogram-embed\" data-id=\"02d885f1-2ce0-446c-99da-994236912e3a\" data-type=\"interactive\" data-title=\"Total COVID 19 Tests\"><\/div><script>!function(e,i,n,s){var t=\"InfogramEmbeds\",d=e.getElementsByTagName(\"script\")[0];if(window[t]&&window[t].initialized)window[t].process&&window[t].process();else if(!e.getElementById(n)){var o=e.createElement(\"script\");o.async=1,o.id=n,o.src=\"https:\/\/e.infogram.com\/js\/dist\/embed-loader-min.js\",d.parentNode.insertBefore(o,d)}}(document,0,\"infogram-async\");<\/script>","36ef495b":"df_hos_bed_per_day = df_hos_bed_per_day.dropna(subset=['TotalPositiveCases']).reset_index(drop=True)\ndf_hos_bed_per_day['TotalIndividualsTested'].fillna(df_hos_bed_per_day['Total Samples Tested']-900, inplace=True)\ndf_hos_bed_per_day['test_results_posratio'] = round(df_hos_bed_per_day['TotalPositiveCases']\/df_hos_bed_per_day['TotalIndividualsTested'], 3)\ndf_hos_bed_per_day.head(2)","33d711dd":"fig1 = go.Figure()\nfig1.add_trace(go.Scatter(x=df_hos_bed_per_day['DateTime'], y=df_hos_bed_per_day['test_results_posratio']*100, name='Confirmed Cases', \\\n                         marker=dict(color='#D32210')))\nfig1.layout.update(title_text='COVID-19 Positive Detection per Test Ratio in India w.r.t. Time',xaxis_showgrid=False, width=700, yaxis_title='% of Patients Tested +ve',\n        height=500,font=dict(\n#         family=\"Courier New, monospace\",\n        size=12,\n        color=\"white\"\n    ))\nfig1.layout.plot_bgcolor = '#097E99'\nfig1.layout.paper_bgcolor = '#097E99'\nfig1.show()","db58a604":"dbd_tc_india.rename(columns={'Daily Confirmed':'New Cases'}, inplace=True)\ndbd_tc_india.head(2)","b970cbba":"ss = []\nfor i in dbd_tc_india.index:\n    if(i!= min(dbd_tc_india.index)):\n        lm = dbd_tc_india.loc[i]['New Cases']\/dbd_tc_india.loc[i-1]['New Cases']\n    else:\n        lm = np.NaN\n    ss.append(lm)\n        \ndbd_tc_india['Growth_Rate'] = ss\ndbd_tc_india.head(2)","63a45b58":"fig1 = go.Figure()\nfig1.add_trace(go.Scatter(x=dbd_tc_india.iloc[35:(dbd_tc_india.shape[0]-1)]['Date'], y=dbd_tc_india.iloc[35:(dbd_tc_india.shape[0]-1)]['Growth_Rate'], name='Growth Factor', \\\n                         marker=dict(color='#008040')))\nfig1.layout.update(title_text='COVID-19 Growth Factor in India w.r.t. Time',xaxis_showgrid=False, yaxis_showgrid=False, width=700, yaxis_title='Growth Factor',\n        height=500,font=dict(\n#         family=\"Courier New, monospace\",\n        size=12,\n        color=\"white\"\n    ))\nfig1.layout.plot_bgcolor = '#4d3900'\nfig1.layout.paper_bgcolor = '#4d3900'\nfig1.show()","ba560088":"print('Mean Growth Factor in India = ', round(dbd_tc_india.iloc[35:]['Growth_Rate'].mean(), 2))","84599856":"#### - We see that none of the countries have approached the inflection point we discussed earlier in case of China yet.","f690dc67":"### - We note that signs occurred > = 0 days after their last exposure date for most than the majority of people. \n\n### Yet what did they do as the signs came up? Did they report to doctor on time? ","107102fb":"### Comparing the Death:Confirmed & Recovered:Confirmed Ratios","296b951b":"- Comparing both of them seems like the age of the affected females are higher than that of males","42185f04":"### How Corona Virus performed in Rest of the World","3195efdf":"### - We see that outcome trends are similar to China w.r.t. Age","6aa2d514":"## Lets analyse a bit of India's situation right now","b480c074":"### **Total countries and locations affected**","d3ad955e":"# # # From the above picture, I assume that the point of inflection is between the two red dots somewhere in the area. We note that as of around 1 March the linear curve starts going upwards. The growth factor for the next two days looks to be a steady ~1 #\n# # So why did the curve go up so rapidly in the first place? What has made\nthe development so rapid? \n","24c13e4d":"# ***First set of Growth Factor Hypothesis:***\n### ***i) It includes mainly public exposure***\n### ***ii) Secondly, to some extent, it also includes a person's delay in getting tested from the date of symptom***\n### ***iii} through unnoticed items such as your smartphones, etc. Smartphone may be a easily infected object ***\n\n#### The second theory could be very strongly associated with the first ","5eefecdb":"### COVID19 Test Results in Rest of the World","da405287":"### What might be the reasons that patients without travel history got infected?","7129a08f":"### In the graph above we see that the gray bars apply to people's real no. and the yellow bars correlate to the individuals who have been checked. That means the ones who weren't checked got contact with a lot of people around. ","2effa128":"### - **From the report, it appears like the other patients that have been affected are mostly the close with travel history and few other exceptions. **","b5d9e4ea":"#### Lets check the top 10 countries with maximum cases and respective deaths and recoveries","71ed8b8d":"### State-Wise No. of cases in India","beffc5d9":"![](https:\/\/internetmonk.com\/wp-content\/uploads\/Covid19ChinaExplained-2048x1150.png)\n\nSource: Tomas Pueyo analysis over chart from the Journal of the American Medical Association, based on raw case data from the Chinese Center for Disease Control and Prevention","70e1bb2d":"##### Plotting the locations on the map","269fcaa1":"### Some pressing questions:\n#### i) What did China do there is a really large recovery rate? \n#### ii) Why Iran, Italy, Spain and UK saw a very high Confirmed to dead ratio ","a7091b2f":"# ***COVID-19: Understanding the Growth Factor involved in the exponential growth of the Corona Virus & Inflection Point in the Curve of Growth***","cc9633bd":"- 1 out of 10 person dies in Italy which astonishingly high compared to say, China","cc2620be":"![](https:\/\/miro.medium.com\/max\/4800\/0*2Hb-dGkPAZU_vUtW)\n\nPhoto by Viktor Forgacs on Unsplash\n\n#### For all that's happening with the Coronavirus, deciding on a decision about what to do today can be incredibly hard.\n\n### Will it be a good\n### idea to wait for more details?\n### Will anything work out today?\n### The best way to avoid this is to reduce the growth factor in the number of instances correlated with an exponential increase. But what does that factor for growth consist of? ","ddce3d37":"### - They note that just a few days after the day of their symptoms there are so many patients returning to the hospital. Could this delay cause greater visibility and thereby extend it to more people? ","e159f066":"### COVID19 Test Results in India","eb694353":"### Analysing the Growth Factor in India","016c567d":"### According to the Western countries (Europe & USA), while we note even although the curve is in the direction of progressively increasing, the amount of cases have not risen significantly. As for those countries we see that the amount of cases in the multiples of 1000 have risen exponentially over a period of 2-3 weeks, while in India it is still below 1000 \n\n### Following are the possible reasons:\n\n#### - **Yes. The amount of tests carried out is smaller than in many nations, yet even with this the number of instances having a large number of 1000s like 50k or 60k is very ridiculous. **\n#### - **In India, maybe because of climatic conditions or any other reasons that we may miss out on, Community transmission has never been triggered? **\n#### - **No transfer to the community is yet happening**\n#### - **Were citizens here better immunized? **\n#### - **This Man**\n\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTclwehjdactJoKW_HSjcOufn4Ieci8sUlw12Ctf4PDQpKwVO_i&s)"}}