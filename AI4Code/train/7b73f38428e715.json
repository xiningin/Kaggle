{"cell_type":{"25957aca":"code","5d3beb24":"code","c1c7a841":"code","1ceaae0b":"code","659dfc95":"code","4ff0c2c3":"code","1b673244":"code","5e0e5db1":"code","2ae50e19":"code","08a75620":"code","f87a93bc":"code","cb10b9af":"code","55a65cfc":"code","8d560fc4":"code","1e61f536":"code","f08d3687":"code","1c6a694a":"code","e3fc5d91":"code","f7fc3e8b":"code","62a2f201":"code","9c78ca65":"code","62593425":"code","231c18d9":"code","f7bbcb12":"code","3586f878":"code","eecb68e8":"code","d400524a":"code","f53d276b":"code","5d4667be":"code","2491cec1":"code","8cb11c0a":"code","862886e8":"code","684ffe32":"code","2818927d":"code","e6b94b46":"code","1b6ce873":"code","f0988ec8":"code","f8f4df25":"code","ad4417a1":"code","3e01602b":"code","3c0439e2":"markdown","f0f3b7f2":"markdown","17aa63f5":"markdown","cbb7453f":"markdown","ae8acd51":"markdown","fc14ad0c":"markdown","7becafe2":"markdown","5c3057af":"markdown","7a2ac3ea":"markdown","fe0d60e5":"markdown","2613e160":"markdown","e349ef91":"markdown","e260d154":"markdown","01857406":"markdown","9e86218a":"markdown","d4b719a0":"markdown","175eb1de":"markdown","09a4beb6":"markdown","799db8ca":"markdown","66bf5753":"markdown","82d817ab":"markdown","fda63337":"markdown","469135db":"markdown","bf7e7a70":"markdown","a9247a5b":"markdown","f495bc2c":"markdown","bf9362df":"markdown","7a8f80e3":"markdown","350dba1d":"markdown","6cccc856":"markdown","d2819e46":"markdown","4e060903":"markdown","a3447d2d":"markdown","c331b411":"markdown"},"source":{"25957aca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport datetime as datetime\nimport seaborn as sns\nfrom pandas.plotting import autocorrelation_plot\nfrom statsmodels.tsa.stattools import adfuller\nfrom datetime import datetime\nimport plotly.graph_objects as go\nfrom wordcloud import WordCloud\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5d3beb24":"def add_value_labels(ax, spacing=5):\n    \"\"\"Add labels to the end of each bar in a bar chart.\n\n    Arguments:\n        ax (matplotlib.axes.Axes): The matplotlib object containing the axes\n            of the plot to annotate.\n        spacing (int): The distance between the labels and the bars.\n    \"\"\"\n\n    # For each bar: Place a label\n    for rect in ax.patches:\n        # Get X and Y placement of label from rect.\n        y_value = rect.get_height()\n        x_value = rect.get_x() + rect.get_width() \/ 2\n\n        # Number of points between bar and label. Change to your liking.\n        space = spacing\n        # Vertical alignment for positive values\n        va = 'bottom' \n\n        # If value of bar is negative: Place label below bar\n        if y_value < 0:\n            # Invert space to place label below\n            space *= -1\n            # Vertically align label at top\n            va = 'top'\n\n        # Use Y value as label and format number with two decimal place\n        label = \"{:.2f}\".format(y_value)\n\n        # Create annotation\n        ax.annotate(\n            label,                      # Use `label` as label\n            (x_value, y_value),         # Place label at end of the bar\n            xytext=(0, space),          # Vertically shift label by `space`\n            textcoords=\"offset points\", # Interpret `xytext` as offset in points\n            ha='center',                # Horizontally center label\n            va=va)                      # Vertically align label differently for\n                                        # positive and negative values.\n","c1c7a841":"def easy_bar_plot(data, variable, title = \"\", xlab = \"\", ylab = \"Proportion\", xtick_rotation = 0): \n    sns.set()\n    temp = data[variable].value_counts(dropna = False, normalize = True).to_frame()\n    plt.figure(figsize=(10, 6))\n    ax = temp[variable].plot(kind='bar',rot = xtick_rotation, color = 'mediumseagreen', edgecolor = 'black')\n    ax.set_title(title)\n    ax.set_xlabel(xlab)\n    ax.set_ylabel(ylab)\n    \n    add_value_labels(ax)","1ceaae0b":"#Creating a convenient function to plot empirical cumulative distribution plots for continuous\n#variables\ndef ecdf_plot(data, variable, x_lab, display_lines = True):\n    \n    from statsmodels.distributions.empirical_distribution import ECDF\n    \n    '''Plot empirical cumulative distribution function of a numerical variable\n    and plot mean (red) and median (green) lines\n    \n    Keyword Arguments: \n    data -- pandas Dataframe \n    variable -- column name (string) **must be a numerical input**\n    x_lab -- X axis label (string)\n    display_lines -- True or False \n    \n    '''\n    sns.set()\n    ecdf = ECDF(data[variable])\n    _= plt.plot(ecdf.x, ecdf.y, marker = \".\", linestyle = \"none\", alpha = 0.2)\n    _= plt.xlabel(x_lab)\n    _= plt.ylabel(\"Cumulative Density\")\n    if (display_lines == True):\n        _= plt.vlines(np.nanmean(data[variable]), ymax=1,ymin=0,colors='r')\n        _= plt.vlines(np.nanmedian(data[variable]), ymax = 1, ymin = 0, colors = 'g')","659dfc95":"full_police_data = pd.read_csv(\"\/kaggle\/input\/data-police-shootings\/fatal-police-shootings-data.csv\")","4ff0c2c3":"full_police_data.head()","1b673244":"#Getting all metadata of the dataset\nfull_police_data.info()","5e0e5db1":"#Plotting bar plot of manner_of_death\neasy_bar_plot(data= full_police_data, variable= 'manner_of_death', ylab= 'Proportion', title= 'Manner of Death')","2ae50e19":"#Getting each state's proportion of transactions \narmed_props = full_police_data[\"armed\"].value_counts().to_frame()\/full_police_data.shape[0]\nprint(armed_props)","08a75620":"wordcloud_armed = WordCloud(background_color='white', collocations= False).generate(' '.join(full_police_data.dropna()['armed']))\n\nplt.figure(figsize = (10,10), facecolor = None) \nplt.imshow(wordcloud_armed, interpolation='bilinear') \nplt.axis(\"off\") \nplt.tight_layout(pad = 0) \n\nplt.show() ","f87a93bc":"#Creating a list of armed levels that make up at least 1% of the entire dataset for visualization purposes\narmed_reason_highenough = armed_props.index[armed_props.armed > 0.01]\n\n#Creating the armed_binned variable that bins all other armed values below 1% of the total into \"other\"\nfull_police_data[\"armed_binned\"] = full_police_data['armed'].apply(lambda x : x if x in armed_reason_highenough \\\n                                                                   else x if pd.notnull(x) == False else 'other')","cb10b9af":"#Plotting barplot of armed_binned\neasy_bar_plot(data=full_police_data, variable= 'armed_binned', title= \"Armed Status\", xtick_rotation=45)","55a65cfc":"#Plotting empirical cumulative distribution function of age\necdf_plot(data= full_police_data, variable= 'age', x_lab= 'Age (years)')","8d560fc4":"#Plotting barplot of gender\neasy_bar_plot(data= full_police_data, variable= 'gender', title= 'Fatal Shootings by Gender', xlab=\"Gender\")","1e61f536":"#Plotting barplot of race\neasy_bar_plot(data=full_police_data, variable= 'race', xlab=\"Race\", title='Fatal Police Shootings by Race')","f08d3687":"#Plotting barplot of signs_of_mental_illness\neasy_bar_plot(data=full_police_data, variable= 'signs_of_mental_illness', xlab=\"Mental Illness Suspected\",\\\n              title = 'Fatal Police Shootings by Appearance of Mental Illness')","1c6a694a":"#Plotting barplot of threat_level\neasy_bar_plot(data=full_police_data, variable= 'threat_level', xlab=\"Perceived Threat\", \\\n              title= \"Fatal Police Shootings by Perceived Threat Level\")","e3fc5d91":"#Plotting barplot of flee\neasy_bar_plot(data=full_police_data, variable= 'flee', xlab=\"Flee Status\", \\\n              title= \"Fatal Police Shootings by Flee Status\")","f7fc3e8b":"#Plotting barplot of body_camera\neasy_bar_plot(data=full_police_data, variable= 'body_camera', xlab=\"Body Camera Present\", \\\n             title= \"Fatal Police Shootings by Body Camera Presence\")","62a2f201":"#Getting longitude and latitude data at the city level for visualizations\nlat_long_source = pd.read_csv('https:\/\/raw.githubusercontent.com\/kelvins\/US-Cities-Database\/master\/csv\/us_cities.csv')\nlat_long_source = lat_long_source.rename(columns={'STATE_CODE':'state', 'CITY':'city'})\nlat_long_source.head()","9c78ca65":"#Left joining full_police_data to lat_long_source on their common state and city columns\nmerged = pd.merge(left=full_police_data, right=lat_long_source, on=['state', 'city'], how='left')","62593425":"#Viewing merge results\nmerged.head()","231c18d9":"#Dropping duplicates introduced by multiple geographical coordinates from lat_lon_source dataset\nmerged = merged.drop_duplicates(subset=['city','name','date','id'])\n\n#Converting the date column to datetime, then creating a year and month column from that\nmerged['date'] = merged.date.apply(lambda x: datetime.strptime(x, '%Y-%m-%d'))\nmerged['year'], merged['month'] = merged['date'].dt.year, merged['date'].dt.month","f7bbcb12":"#Getting a dataset where each city (and it's shooting count) is the observation, not a fatal shooting incident\ncity_as_obs = merged.city.value_counts().to_frame()\ncity_as_obs.head()\ncity_as_obs = city_as_obs.reset_index()\ncity_as_obs.columns = ['city', 'count']\n\n#Left joining city_as_obs with merged, isolating the necessary columns, and displaying the result\ncity_as_obs_latlon = pd.merge(left=city_as_obs, right=merged, on=['city'], how='left')\ncity_as_obs_latlon = city_as_obs_latlon[['city', 'count', 'LATITUDE', 'LONGITUDE']]\ncity_as_obs_latlon = city_as_obs_latlon.drop_duplicates(subset=['city'])\ncity_as_obs_latlon.info()\ncity_as_obs_latlon.head()","3586f878":"#Plotting the count of fatal shooting onto a US map according to city\n#Size of bubble represents the number, the coloration represents rank order binning (ie purple is for the top 15 highest \n#fatal shooting count among the list of cities)\n\ncity_as_obs_latlon['text'] = city_as_obs_latlon['city'] + '<br>Fatal Shootings ' + city_as_obs_latlon['count'].astype(str)\nlimits = [(0,15),(16,30),(31,50),(51,100),(101,2470)]\ncolors = [\"royalblue\",\"crimson\",\"lightseagreen\",\"orange\",\"lightgrey\"]\ncities = []\nscale = 0.5\n\nfig = go.Figure()\n\nfor i in range(len(limits)):\n    lim = limits[i]\n    df_sub = city_as_obs_latlon[lim[0]:lim[1]]\n    fig.add_trace(go.Scattergeo(\n        locationmode = 'USA-states',\n        lon = df_sub['LONGITUDE'],\n        lat = df_sub['LATITUDE'],\n        text = df_sub['text'],\n        marker = dict(\n            size = df_sub['count']\/scale,\n            color = colors[i],\n            line_color='rgb(40,40,40)',\n            line_width=0.5,\n            sizemode = 'area'\n        ),\n        name = '{0} - {1}'.format(lim[0],lim[1])))\n\nfig.update_layout(\n        title_text = 'Total Fatal Police Shootings in the US from Jan 2015 to June 2020 <br>(Legend represents rank order, not number of police killings)',\n        showlegend = True,\n        geo = dict(\n            scope = 'usa',\n            landcolor = 'rgb(217, 217, 217)',\n        )\n    )\n\nfig.show()","eecb68e8":"#Creating unarmed dataset\nunarmed = merged.loc[merged['armed_binned'] == 'unarmed', :]","d400524a":"#Unarmed stacked proportion plot\nx = merged.loc[merged['armed_binned'] == \"unarmed\", :]['race'].value_counts(normalize = True)\nx_ = pd.DataFrame([x])\nx_.index = ['unarmed']\n\n_= x_.plot(kind = 'bar', stacked= True, rot = 0, \\\n                               title = 'Stacked Proportion Chart of Unarmed Victims by Race', figsize=(10,8))\nx_","f53d276b":"#Armed with gun stacked proportion plot\nx = merged.loc[merged['armed_binned'] == \"gun\", :]['race'].value_counts(normalize = True)\nx_ = pd.DataFrame([x])\nx_.index = ['Armed: Gun']\n\n_= x_.plot(kind = 'bar', stacked= True, rot = 0, \\\n                               title = 'Stacked Proportion Chart of Victims Armed With Guns by Race', figsize=(10,8))\nx_","5d4667be":"#threat_level by race stacked proportion plot\nblack = merged.loc[merged['race'] == 'B', :]['threat_level'].value_counts(normalize = True)\nwhite = merged.loc[merged['race'] == 'W', :]['threat_level'].value_counts(normalize = True)\nhispanic = merged.loc[merged['race'] == 'H', :]['threat_level'].value_counts(normalize = True)\nasian = merged.loc[merged['race'] == 'A', :]['threat_level'].value_counts(normalize = True)\nother = merged.loc[merged['race'] == 'O', :]['threat_level'].value_counts(normalize = True)\n\nx_y = pd.DataFrame([black, white, hispanic, asian, other])\nx_y.index = ['Black', 'White', 'Hispanic', 'Asian', 'Other']\n\n_= x_y.plot(kind = 'bar', stacked= True, rot = 0, \\\n                               title = 'Stacked Proportion Chart of Race by Threat Level', figsize=(10,8))\nx_y","2491cec1":"#Body Camera presence by race stacked proportion plot\nblack = merged.loc[merged['race'] == 'B', :]['signs_of_mental_illness'].value_counts(normalize = True)\nwhite = merged.loc[merged['race'] == 'W', :]['signs_of_mental_illness'].value_counts(normalize = True)\nhispanic = merged.loc[merged['race'] == 'H', :]['signs_of_mental_illness'].value_counts(normalize = True)\nasian = merged.loc[merged['race'] == 'A', :]['signs_of_mental_illness'].value_counts(normalize = True)\nother = merged.loc[merged['race'] == 'O', :]['signs_of_mental_illness'].value_counts(normalize = True)\n\nx_y = pd.DataFrame([black, white, hispanic, asian, other])\nx_y.index = ['Black', 'White', 'Hispanic', 'Asian', 'Other']\n\n_= x_y.plot(kind = 'bar', stacked= True, rot = 0, \\\n                               title = 'Stacked Proportion Chart of Race by Signs of Mental Illness', figsize=(10,8))\nx_y","8cb11c0a":"#Gender by race stacked proportion plot\nx = merged.loc[merged['gender'] == 'M', :]['race'].value_counts(normalize = True)\ny = merged.loc[merged['gender'] == 'F', :]['race'].value_counts(normalize = True)\nx_y = pd.DataFrame([x, y])\nx_y.index = ['Male', 'Female']\n\n_= x_y.plot(kind = 'bar', stacked= True, rot = 0, \\\n            title = 'Stacked Proportion Chart of Gender by Race', figsize=(10,8))\nx_y","862886e8":"#Body Camera presence by race stacked proportion plot\nblack = merged.loc[merged['race'] == 'B', :]['body_camera'].value_counts(normalize = True)\nwhite = merged.loc[merged['race'] == 'W', :]['body_camera'].value_counts(normalize = True)\nhispanic = merged.loc[merged['race'] == 'H', :]['body_camera'].value_counts(normalize = True)\nasian = merged.loc[merged['race'] == 'A', :]['body_camera'].value_counts(normalize = True)\nother = merged.loc[merged['race'] == 'O', :]['body_camera'].value_counts(normalize = True)\n\nx_y = pd.DataFrame([black, white, hispanic, asian, other])\nx_y.index = ['Black', 'White', 'Hispanic', 'Asian', 'Other']\n\n_= x_y.plot(kind = 'bar', stacked= True, rot = 0, \\\n                               title = 'Stacked Proportion Chart of Race by Body Camera Presence', figsize=(10,8))\nx_y","684ffe32":"#Body Camera Presence for unarmed victims by race stacked proportion plot\nblack = unarmed.loc[unarmed['race'] == 'B', :]['body_camera'].value_counts(normalize = True)\nwhite = unarmed.loc[unarmed['race'] == 'W', :]['body_camera'].value_counts(normalize = True)\nhispanic = unarmed.loc[unarmed['race'] == 'H', :]['body_camera'].value_counts(normalize = True)\nasian = unarmed.loc[unarmed['race'] == 'A', :]['body_camera'].value_counts(normalize = True)\nother = unarmed.loc[unarmed['race'] == 'O', :]['body_camera'].value_counts(normalize = True)\n\nx_y = pd.DataFrame([black, white, hispanic, asian, other])\nx_y.index = ['Black', 'White', 'Hispanic', 'Asian', 'Other']\n\n_= x_y.plot(kind = 'bar', stacked= True, rot = 0, \\\n                               title = 'Stacked Proportion Chart of Race by Body Camera Presence for Unarmed Victims', figsize=(10,8))\nx_y","2818927d":"#Flee status by race stacked proportion plot for unarmed victims\nblack = unarmed.loc[unarmed['race'] == 'B', :]['flee'].value_counts(normalize = True)\nwhite = unarmed.loc[unarmed['race'] == 'W', :]['flee'].value_counts(normalize = True)\nhispanic = unarmed.loc[unarmed['race'] == 'H', :]['flee'].value_counts(normalize = True)\nasian = unarmed.loc[unarmed['race'] == 'A', :]['flee'].value_counts(normalize = True)\nother = unarmed.loc[unarmed['race'] == 'O', :]['flee'].value_counts(normalize = True)\n\nx_y = pd.DataFrame([black, white, hispanic, asian, other])\nx_y.index = ['Black', 'White', 'Hispanic', 'Asian', 'Other']\n\n_= x_y.plot(kind = 'bar', stacked= True, rot = 0, \\\n                               title = 'Stacked Proportion Chart of Flee Status by Race for Unarmed Victims', figsize=(10,8))\nx_y","e6b94b46":"#Armed Status by race stacked proportion plot\nblack = merged.loc[merged['race'] == 'B', :]['armed_binned'].value_counts(normalize = True)\nwhite = merged.loc[merged['race'] == 'W', :]['armed_binned'].value_counts(normalize = True)\nhispanic = merged.loc[merged['race'] == 'H', :]['armed_binned'].value_counts(normalize = True)\nasian = merged.loc[merged['race'] == 'A', :]['armed_binned'].value_counts(normalize = True)\nother = merged.loc[merged['race'] == 'O', :]['armed_binned'].value_counts(normalize = True)\n\nx_y = pd.DataFrame([black, white, hispanic, asian, other])\nx_y.index = ['Black', 'White', 'Hispanic', 'Asian', 'Other']\n\n_= x_y.plot(kind = 'bar', stacked= True, rot = 0, \\\n                               title = 'Stacked Proportion Chart of Race by Armed Status', figsize=(10,8))\nx_y","1b6ce873":"#Creating additional count column, then isolating necessary columns into new dataframe\nmerged['count'] = 1 \ndate_count = merged[[\"date\" ,\"count\"]]","f0988ec8":"#Looking at date_count \ndate_count.head()","f8f4df25":"#Get aggregate killings for each of the 12 months in the year\ndate_count.groupby(date_count['date'].dt.strftime('%B'))['count'].sum().sort_values()","ad4417a1":"#Get time series of police shootings over month\/year\ncount_monthly = date_count.groupby(date_count['date'].dt.strftime('%B %Y'))['count'].sum().to_frame()\ncount_monthly.reset_index(inplace=True)\ncount_monthly['date'] =  pd.to_datetime(count_monthly['date'], format='%B %Y')\ncount_monthly.head()","3e01602b":"#Plot time series of aggregate monthly shootings over time\n_= count_monthly[['date','count']].plot('date', figsize=(15,8))\n_.set_xlabel(\"Year\");\n_.set_ylabel(\"Count\");","3c0439e2":"Based on this plot of **armed_binned**, the majority of fatal shootings involve a suspect armed with a gun. Additionally, 7% of fatal police shootings in this data involve someone who is unarmed. It is important to note that this variable on its own does not indicate conduct towards police with regards to a weapon.","f0f3b7f2":"### Multi-Variate Analysis\n\nIn this section, I'll be examining the relationship between variables in this dataset, most notably **race**, as that is the point of most interest for this dataset. From these relationships, I will try to get to the bottom of what this data is truly telling us about the relationships between fatal police shootings and racism.","17aa63f5":"This wordcloud gives a good idea into what **armed** contains. Heavy emphasis on guns, knives, unarmed, undetermined, weapon, and toy.","cbb7453f":"The plot below shows how **gender** breaks down across **race** with regards to fatal police shootings. Black fatal shooting victims make up a disproportionate amount of both genders. Based on the data, it is evident that white women make up the expected proportion of fatal shootings involving women (white women are ~60% of the US female population), while Hispanic women are underrepresented (17% pop. vs 12% shooting victims) in this group to a similar degree that black women (13% pop. vs 21% shooting victims) are overrepresented.  \n  \nAs for males, the story is very different. Unlike their female counterparts, white males are significantly underrepresented compared to their relative proportion of the male population (60% pop vs 50% shooting victims). Black males and Hispanic males are therefore overrepresented relative to all males, but the discrepancy in representation is similar between Hispanic males and females (18% vs 12%) and black males and females (27% vs 21%). ","ae8acd51":"Below is a plot of shootings broken down by **signs_of_mental_illness**. The majority of victims in this data did not appear to have signs of mental illness. These numbers may or may not reflect the true mental health status of these victims; they only reflect what the police officer(s) perceived. ","fc14ad0c":"The following shows how **flee** breaks down within **race** for unarmed victims. Unarmed black victims are more likely to have been fleeing by foot, while Asians and Hispanics had similarly high degrees of fleeing by car. While every racial demographic in this data had \"not fleeing\" as the highest proportion of **flee**, victims classed as \"other\" had the highest proportion of not fleeing, with white victims following behind.","7becafe2":"## Conclusion\nBased on the data provided, there is evidence that black people, unarmed or armed, in America are killed by police at disproportionately high rates relative to other races. With that being said, it is important to note that the data here might not be fully capturing what is going on with this issue due to incomplete or low quality reporting. Data collection improvements would result in a clearer truth. I have tried to maintain as objective and neutral a lens as possible when evaluating my takeaways from this analysis. Some conclusions I have drawn from this data:  \n* Black people are being killed by police at disproportionately high rates.    \n* There does not seem to be a trend up or down over time for fatal police shootings.  \n* Men make up the vast majority of fatal police shooting victims.  \n* The number of fatal shootings in a city seems to largely depend on its population.  \n* Body cameras rarely capture footage in these encounters.  \n* Most victims were not fleeing from police when they were fatally shot.  \n\n\nSome of my thoughts related to my conclusions from the data:\n* The absolute number of unarmed people killed in general is extremely small relative to the hundreds of millions of interactions between police and civilians on a yearly basis.  \n* There are no objective indicators or reporting of crime or threat posed to officer in this data. One suggestion is to make body camera footage mandatory, then have a neutral party review fatal shooting footage and make a determination on if the victim was truly endangering the officer's life.  \n* On that point, officer body camera footage is not as frequent as I thought it was prior to this analysis. Ideally, a body camera should be recording every interaction to ensure accountability of both the officer and the other party(s) involved   \n* Socioeconomic class may be a confounding factor. It could be informative to take a look at fatal police shootings broken down first by both race and socioeconomic status. How do white people of low socioeconomic status fare against black people of high socio-economic status?  \n* While this data does indicate that black people are killed at higher than expected rates, it does not provide enough additional evidence to confirm that police are consistently disproportionately targeting black people overall. To confirm that, additional data on traffic stops by race, warranted arrests vs unwarranted arrests, non-fatal police brutality, fatal police brutality not involving a firearm, a case by case report on the circumstances and potential crime of the person in question, among others, would be required to make such a broad claim.  \n* Regardless of your views around this issue, I think we can all agree that police should strive to minimize the use of lethal force in anyway possible.","5c3057af":"Below is a plot of **flee**. Most victims in this dataset were not fleeing when fatally shot by the police.","7a2ac3ea":"The plot below shows how **threat_level** is broken down across the victims in this data. Most suspects were considered an \"attack\" on the threat level scale. To me, this attribute is particularly subjective, as different officers may have different thresholds at which they deem someone an \"attack\" on this scale. However, I am not a law enforcement officer, so if I am wrong, please correct me!","fe0d60e5":"The output below shows the proportions of levels of the **armed** variable. What is interesting to note is that roughly 9.5% of fatal police shootings in this data involved someone who was unarmed (roughly 6.5%) or someone who's armed status was undetermined (roughly 3%). The bar plot below illustrates the relative frequencies of a modified version of **armed** (called **armed_binned** in the dataset). The **armed_binned** variable was created because the original **armed** variable has 93 distinct values to it, making it very hard to visualize.","2613e160":"The following plot shows how fatal police shooting victims armed with guns (roughly 56% of all fatal police shootings in the data) break down across **race**. Black victims make up a disproportionately high amount of those carrying a gun, while white victims make a disproportionately low amont of those carrying a gun, but the discrepancy in representation between black and white for \"armed with a gun\" is not as large as it is for unarmed victims shown in the previous graph. Keep in mind that this metric does not indicate the usage, presentation, or licensing of guns by victims, which is a factor that should be considered when determining if a police officer felt endangered.","e349ef91":"The plot below shows **body_camera**. Disturbingly, the vast majority of fatal police shootings occur without any body camera footage. ","e260d154":"The map below shows the geographical distribution of fatal police shootings by city. As expected, heavily population urban areas have the highest numbers of fatal police shootings. ","01857406":"### Data Read-in and Characteristics","9e86218a":"Shown below is the dataset that will be going into the map plot. It has **city**, **count** (number of fatal police shootings in the city), **LATITUDE**, and **LONGITUDE**. The latitude and longitude is necessary for geospatial mapping.","d4b719a0":"Below is a proportion plot of the \"unarmed\" category of fatal police shootings (roughly 7% of victims in this data) colorized by **race**. From this visual, we can conclude that unarmed black victims make a disproportionately high percentage of fatal police shootings involving an unarmed person, while unarmed white victims make a disproportionately low percentage. Hispanics are slightly overrepresented while Asians are slightly underrepresented. Also, this graph is basically the same as that of unarmed men by race, since the count of unarmed women fatally shot by police is extremely low. ","175eb1de":"## Exploratory Data Analysis","09a4beb6":"The output below shows the month of year and it's corresponding aggregate sum of fatal police shootings over the 5 year period of the data, in ascending order. Interestingly, fall months seem to have the lowest aggregate shooting numbers (September, November, October), followed by summer months (August, July, June) , then spring months (April, May) , then winter months (February, January, March). The exception to the general pattern is December.","799db8ca":"The following plot shows how **threat_level** breaks down across **race**. Black and white victims had nearly identical **threat_level** distributions. Asians and Hispanics had lower relative proportions of victims classed as the \"attack\" **threat_level**, while \"undetermined\" remained fairly constant across most racial groups (low in Asians). What \"other\" means is anyone's best guess for such a subjective metric. Additionally, with **threat_level** being such a subjective metric, it is not possible to infer from this data if the victim was genuinely threatening an officer's life (despite having no weapon), or if the police officer was not justified in using lethal force. ","66bf5753":"### Libraries","82d817ab":"The following barplot of **gender** suggests that men are overwhelmingly the victims in fatal police shootings. ","fda63337":"The plot below shows the breakdown of **armed_binned** by **race**. The distributions of different categories within **armed_binned** look fairly similar for white and black victims, with percentage carrying guns being nearly identical. Asian victims have a lower percentage of guns but a higher percentage of knives and \"other\".","469135db":"Shown below is a plot of the time series of police shootings on a monthly level of aggregation. Visually, there does not look to be any sort of trend here. Interestingly enough, May 2020 was the month with the highest number of fatal police shootings, then June 2020 follows with a precipitous drop in police killings, most likely owing to the increased backlash (and resulting reluctancy to do anything) faced by police officers after the murder of George Floyd. ","bf7e7a70":"### Geospatial EDA\nLooking at the geographical distribution of fatal police shootings.","a9247a5b":"The plot below shows the breakdown of **signs_of_mental_illness** by **race**. An interesting point of note: white and Asian victims had higher percentages of exhibiting signs of mental illness (true), while black and Hispanic victims had lower percentages of suspected mental illness. ","f495bc2c":"# Police Shootings: Is the Police Racist?\n\n2020 has been quite the year thus far, plagued with a variety of bad things (no pun intended). From Kobe Bryant's tragic passing to the COVID-19 pandemic, this year was already a dumpster fire in the making. But wait, there's more! Just when no one thought 2020 could get worse, George Floyd was murdered in cold blood by officers in the Minneapolis Police Department. Sparking national outrage, this event created the most volatile flashpoint in US politics today centered around the ideas of police brutality, systemic racism, and the role of government in elicting change. As pundits from the entire political spectrum offer their takes on what all is going on, the data lays in wait, holding the numbers that can inform the truth. In this notebook, I seek to cut through some of the buzz to see what's really going on using data to inform my conclusions. I do want to stress that this is a very delicate and nuanced issue, and that preconceived notions have to take a backseat when evaluating data and asking questions.  \n  \nThis notebook is structured as follows: \n* Setup and Data\n* Data Read-In and Characteristics\n* Exploratory Data Analysis:  \n1) Univariate Analysis  \n2) Geospatial EDA  \n3) Multi-Variate Analysis  \n* Conclusion\n","bf9362df":"### Univariate Analysis\n\nIn this section, I'll be examining single variables to extract some preliminary insights from this data. Most of this will be focused on gauging variable distribution. ","7a8f80e3":"## Setup and Data","350dba1d":"The empirical cumulative density function (ECDF) plot below shows how **age** is distributed in this dataset. The distribution is somewhat right skewed, as indicated by the fact that 60% of fatal shootings involve someone under the age of 40. The green line represents the median age, while the red line represents the mean age. The median age is a bit lower than the mean age, which reinforces the notion that **age** is slightly right skewed.","6cccc856":"Going further into the **body_cam** breakdowns, the following plot shows **body_cam** presence by **race** for unarmed victims. Here, Asians and Other have the highest proportions of fatal shootings with body camera footage, while Hispanics are at the lowest proportion by a decent margin.","d2819e46":"The following plot shows how **body_camera** presence breaks down by each race. Here, each x-value represents a racial indicator in the data, and the proportion between true and false for **body_camera**. Based on this visual, the demographic of victims with the lowest percentage of body camera presence is white people. However, this plot also tells us something else: no matter what demographic, the percentage of fatal police shootings that took place with police body camera footage is overwhelmingly low.","4e060903":"### Functions","a3447d2d":"Below you will see how the **race** breaks down across fatal shootings. Relative to their corresponding proportions of the US population, White and Asian people are underrepresented while Black and Hispanic people are overrepresented. Additionally, there is a decent portion (10%) of observations that do not have race reported, which could affect representation.","c331b411":"This barplot shows the frequency breakdown of the **manner_of_death** variable. Given that this is a dataset of fatal police shootings, it makes sense that everyone died of a gunshot.  ~5% were tasered while dying, but it is unclear if the tasering itself is considered an additional cause of death alongside the shooting, or if the taser was used prior to shots being fired and killing the person. "}}