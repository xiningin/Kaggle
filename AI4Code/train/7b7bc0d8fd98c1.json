{"cell_type":{"16bf7022":"code","a329160c":"code","467e8b92":"code","46ca9326":"code","3985ef1b":"code","3872303e":"code","9bc2ebea":"code","ac59d571":"code","41ca9045":"code","00e67861":"code","0fbc970d":"code","9c82f5c5":"markdown"},"source":{"16bf7022":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\n\nimport bokeh.io\nfrom bokeh.models import ColumnDataSource, Label\nfrom bokeh.plotting import figure, show\nfrom bokeh.models import Legend, LegendItem\nfrom bokeh.models import HoverTool\n\nimport umap\n\nfrom sklearn.cluster import DBSCAN\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\nfrom nltk.corpus import stopwords\nimport re\nfrom collections import Counter\n\nbokeh.io.output_notebook()\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a329160c":"w_tst = pd.read_csv('\/kaggle\/input\/wine-reviews\/\/winemag-data-130k-v2.csv', delimiter=',')\ndes_var = w_tst.loc[:, ['description', 'variety', 'country', 'title']]\nd_v = des_var.values.tolist()\nlist_des = list(zip(*d_v))[0]\nlist_var = list(zip(*d_v))[1]\nn_list_var = [x if type(x) == str else 'unknown' for x in list_var]\nlist_ctr = list(zip(*d_v))[2]\nn_list_ctr = [x if type(x) == str else 'Dreamland' for x in list_ctr]\ncount_ctr = Counter(n_list_ctr)\ncount_var = Counter(n_list_var)\nfrst_ctr = sorted(count_ctr, key=count_ctr.get, reverse=True)\nlist_title = list(zip(*d_v))[3]\nl_annee = []\nfor ttl in list_title:\n    if len(ttl) > 0:\n        only_nbr = re.split(\"[^0-9]\", ttl)\n        only_year = [int(x) for x in only_nbr if len(x) == 4 and 1950 < int(x) < 2017]  # more than 1 date\n        # if 2 date take the oldest one\n        #print(only_year)\n        if len(only_year) > 0:\n            if len(only_year) >= 2:\n                l_annee.append(max(only_year))\n            else:\n                l_annee.append(only_year[0])\n        else:\n            l_annee.append('na')\n    else:\n        l_annee.append('na')","467e8b92":"idx_all_ctr = []\nfor ctr in frst_ctr:\n    idx_ctr = [idx for idx, e in enumerate(n_list_ctr) if e == ctr]\n    idx_all_ctr.append(idx_ctr)","46ca9326":"list_des_clean = []\nen_stpwrd = set(stopwords.words(\"english\"))\nen_stpwrd.update(['wine'])\n\nfor txt in list_des:\n    let_only = re.sub(\"[^\u00e3\u00e2\u00e4\u00e9\u00e8\u00f1\u00f3\u00f4\u00fc\u00fa\u00fba-zA-Z]\", \" \", txt)\n    low_case = let_only.lower()\n    words = low_case.split()\n\n    noword_stp = [w for w in words if w not in en_stpwrd]\n    txt_cleaned = \" \".join(noword_stp)\n    list_des_clean.append(txt_cleaned)","3985ef1b":"vectorizer = TfidfVectorizer(min_df=4, max_features=None)\nvz = vectorizer.fit_transform(list_des_clean)\n\nclusterable_embedding = umap.UMAP(\n    n_neighbors=30,\n    min_dist=0.0,\n    n_components=2,\n    random_state=42,\n    ).fit_transform(vz)\n\nlabels = DBSCAN(\n                eps=0.26, \n                min_samples=35\n                ).fit_predict(clusterable_embedding)","3872303e":"xtx_us = []\nytx_us = []\ncolor_us = []\nhover_us = []\nxtx_fr = []\nytx_fr = []\ncolor_fr = []\nhover_fr = []\nxtx_it = []\nytx_it = []\ncolor_it = []\nhover_it = []\nxtx_sp = []\nytx_sp = []\ncolor_sp = []\nhover_sp = []\nxtx_pt = []\nytx_pt = []\ncolor_pt = []\nhover_pt = []\nxtx_ch = []\nytx_ch = []\ncolor_ch = []\nhover_ch = []\nxtx_arg = []\nytx_arg = []\ncolor_arg = []\nhover_arg = []\nxtx_atr = []\nytx_atr = []\ncolor_atr = []\nhover_atr = []\nxtx_atl = []\nytx_atl = []\ncolor_atl = []\nhover_atl = []\nxtx_ge = []\nytx_ge = []\ncolor_ge = []\nhover_ge = []\nxtx_nz = []\nytx_nz = []\ncolor_nz = []\nhover_nz = []\nxtx_sa = []\nytx_sa = []\ncolor_sa = []\nhover_sa = []\nxtx_is = []\nytx_is = []\ncolor_is = []\nhover_is = []\nxtx_gr = []\nytx_gr = []\ncolor_gr = []\nhover_gr = []\nxtx_ca = []\nytx_ca = []\ncolor_ca = []\nhover_ca = []\nxtx_hu = []\nytx_hu = []\ncolor_hu = []\nhover_hu = []\nxtx_bu = []\nytx_bu = []\ncolor_bu = []\nhover_bu = []\nxtx_ro = []\nytx_ro = []\ncolor_ro = []\nhover_ro = []\nxtx_ur = []\nytx_ur = []\ncolor_ur = []\nhover_ur = []\nxtx_tu = []\nytx_tu = []\ncolor_tu = []\nhover_tu = []\nxtx_sl = []\nytx_sl = []\ncolor_sl = []\nhover_sl = []\nxtx_geo = []\nytx_geo = []\ncolor_geo = []\nhover_geo = []\nxtx_en = []\nytx_en = []\ncolor_en = []\nhover_en = []\nxtx_cr = []\nytx_cr = []\ncolor_cr = []\nhover_cr = []\nxtx_me = []\nytx_me = []\ncolor_me = []\nhover_me = []\nxtx_mol = []\nytx_mol = []\ncolor_mol = []\nhover_mol = []\nxtx_br = []\nytx_br = []\ncolor_br = []\nhover_br = []\nxtx_le = []\nytx_le = []\ncolor_le = []\nhover_le = []\nxtx_mor = []\nytx_mor = []\ncolor_mor = []\nhover_mor = []\nxtx_pe = []\nytx_pe = []\ncolor_pe = []\nhover_pe = []\nxtx_uk = []\nytx_uk = []\ncolor_uk = []\nhover_uk = []\nxtx_se = []\nytx_se = []\ncolor_se = []\nhover_se = []\nxtx_cz = []\nytx_cz = []\ncolor_cz = []\nhover_cz = []\nxtx_ma = []\nytx_ma = []\ncolor_ma = []\nhover_ma = []\n\nxtx_n = []\nytx_n = []\nhover_noise = []","9bc2ebea":"i = 0\ncount_map = 0\n\nnorth = []\n# square_root = []\nfor xy in range(len(labels)):\n    if clusterable_embedding[xy, 1] > 8.0:\n        north.append(list_des_clean[i])\n        count_map += 1\n    var_ctr = n_list_var[i] + ';' + str(l_annee[i]) + ';' + n_list_ctr[i]\n    if i in idx_all_ctr[0]:\n        xtx_us.append(clusterable_embedding[xy, 0])\n        ytx_us.append(clusterable_embedding[xy, 1])\n        color_us.append('#3C3B6E')\n        hover_us.append(var_ctr)\n    elif i in idx_all_ctr[1]:\n        xtx_fr.append(clusterable_embedding[xy, 0])\n        ytx_fr.append(clusterable_embedding[xy, 1])\n        color_fr.append('#002395')\n        hover_fr.append(var_ctr)\n    elif i in idx_all_ctr[2]:\n        xtx_it.append(clusterable_embedding[xy, 0])\n        ytx_it.append(clusterable_embedding[xy, 1])\n        color_it.append('#009246')\n        hover_it.append(var_ctr)\n    elif i in idx_all_ctr[3]:\n        xtx_sp.append(clusterable_embedding[xy, 0])\n        ytx_sp.append(clusterable_embedding[xy, 1])\n        color_sp.append('#FFC400')\n        hover_sp.append(var_ctr)\n    elif i in idx_all_ctr[4]:\n        xtx_pt.append(clusterable_embedding[xy, 0])\n        ytx_pt.append(clusterable_embedding[xy, 1])\n        color_pt.append('#FFFF00')\n        hover_pt.append(var_ctr)\n    elif i in idx_all_ctr[5]:\n        xtx_ch.append(clusterable_embedding[xy, 0])\n        ytx_ch.append(clusterable_embedding[xy, 1])\n        color_ch.append('#0039A6')\n        hover_ch.append(var_ctr)\n    elif i in idx_all_ctr[6]:\n        xtx_arg.append(clusterable_embedding[xy, 0])\n        ytx_arg.append(clusterable_embedding[xy, 1])\n        color_arg.append('#75AADB')\n        hover_arg.append(var_ctr)\n    elif i in idx_all_ctr[7]:\n        xtx_atr.append(clusterable_embedding[xy, 0])\n        ytx_atr.append(clusterable_embedding[xy, 1])\n        color_atr.append('#ED2939')\n        hover_atr.append(var_ctr)\n    elif i in idx_all_ctr[8]:\n        xtx_atl.append(clusterable_embedding[xy, 0])\n        ytx_atl.append(clusterable_embedding[xy, 1])\n        color_atl.append('#012169')\n        hover_atl.append(var_ctr)\n    elif i in idx_all_ctr[9]:\n        xtx_ge.append(clusterable_embedding[xy, 0])\n        ytx_ge.append(clusterable_embedding[xy, 1])\n        color_ge.append('black')\n        hover_ge.append(var_ctr)\n    elif i in idx_all_ctr[10]:\n        xtx_nz.append(clusterable_embedding[xy, 0])\n        ytx_nz.append(clusterable_embedding[xy, 1])\n        color_nz.append('#00247d')\n        hover_nz.append(var_ctr)\n    elif i in idx_all_ctr[11]:\n        xtx_sa.append(clusterable_embedding[xy, 0])\n        ytx_sa.append(clusterable_embedding[xy, 1])\n        color_sa.append('#007749')\n        hover_sa.append(var_ctr)\n    elif i in idx_all_ctr[12]:\n        xtx_is.append(clusterable_embedding[xy, 0])\n        ytx_is.append(clusterable_embedding[xy, 1])\n        color_is.append('#0038B8')\n        hover_is.append(var_ctr)\n    elif i in idx_all_ctr[13]:\n        xtx_gr.append(clusterable_embedding[xy, 0])\n        ytx_gr.append(clusterable_embedding[xy, 1])\n        color_gr.append('#0D5EAF')\n        hover_gr.append(var_ctr)\n    elif i in idx_all_ctr[14]:\n        xtx_ca.append(clusterable_embedding[xy, 0])\n        ytx_ca.append(clusterable_embedding[xy, 1])\n        color_ca.append('#FF0000')\n        hover_ca.append(var_ctr)\n    elif i in idx_all_ctr[15]:\n        xtx_hu.append(clusterable_embedding[xy, 0])\n        ytx_hu.append(clusterable_embedding[xy, 1])\n        color_hu.append('#436F4D')\n        hover_hu.append(var_ctr)\n    elif i in idx_all_ctr[16]:\n        xtx_bu.append(clusterable_embedding[xy, 0])\n        ytx_bu.append(clusterable_embedding[xy, 1])\n        color_bu.append('#00966E')\n        hover_bu.append(var_ctr)\n    elif i in idx_all_ctr[17]:\n        xtx_ro.append(clusterable_embedding[xy, 0])\n        ytx_ro.append(clusterable_embedding[xy, 1])\n        color_ro.append('#FCD116')\n        hover_ro.append(var_ctr)\n    elif i in idx_all_ctr[18]:\n        xtx_ur.append(clusterable_embedding[xy, 0])\n        ytx_ur.append(clusterable_embedding[xy, 1])\n        color_ur.append('#7b3f00')\n        hover_ur.append(var_ctr)\n    elif i in idx_all_ctr[19]:\n        xtx_tu.append(clusterable_embedding[xy, 0])\n        ytx_tu.append(clusterable_embedding[xy, 1])\n        color_tu.append('#E30A17')\n        hover_tu.append(var_ctr)\n    elif i in idx_all_ctr[20]:\n        xtx_sl.append(clusterable_embedding[xy, 0])\n        ytx_sl.append(clusterable_embedding[xy, 1])\n        color_sl.append('#005DA4')\n        hover_sl.append(var_ctr)\n    elif i in idx_all_ctr[21]:\n        xtx_geo.append(clusterable_embedding[xy, 0])\n        ytx_geo.append(clusterable_embedding[xy, 1])\n        color_geo.append('#FF0000')\n        hover_geo.append(var_ctr)\n    elif i in idx_all_ctr[22]:\n        xtx_en.append(clusterable_embedding[xy, 0])\n        ytx_en.append(clusterable_embedding[xy, 1])\n        color_en.append('#FF0000')\n        hover_en.append(var_ctr)\n    elif i in idx_all_ctr[23]:\n        xtx_cr.append(clusterable_embedding[xy, 0])\n        ytx_cr.append(clusterable_embedding[xy, 1])\n        color_cr.append('#171796')\n        hover_cr.append(var_ctr)\n    elif i in idx_all_ctr[24]:\n        xtx_me.append(clusterable_embedding[xy, 0])\n        ytx_me.append(clusterable_embedding[xy, 1])\n        color_me.append('#006847')\n        hover_me.append(var_ctr)\n        # 25 is dreamland\n    elif i in idx_all_ctr[26]:\n        xtx_mol.append(clusterable_embedding[xy, 0])\n        ytx_mol.append(clusterable_embedding[xy, 1])\n        color_mol.append('#FFD200')\n        hover_mol.append(var_ctr)\n    elif i in idx_all_ctr[27]:\n        xtx_br.append(clusterable_embedding[xy, 0])\n        ytx_br.append(clusterable_embedding[xy, 1])\n        color_br.append('#FEDF00')\n        hover_br.append(var_ctr)\n    elif i in idx_all_ctr[28]:\n        xtx_le.append(clusterable_embedding[xy, 0])\n        ytx_le.append(clusterable_embedding[xy, 1])\n        color_le.append('#ED1C24')\n        hover_le.append(var_ctr)\n    elif i in idx_all_ctr[29]:\n        xtx_mor.append(clusterable_embedding[xy, 0])\n        ytx_mor.append(clusterable_embedding[xy, 1])\n        color_mor.append('#c1272d')\n        hover_mor.append(var_ctr)\n    elif i in idx_all_ctr[30]:\n        xtx_pe.append(clusterable_embedding[xy, 0])\n        ytx_pe.append(clusterable_embedding[xy, 1])\n        color_pe.append('#D91023')\n        hover_pe.append(var_ctr)\n    elif i in idx_all_ctr[31]:\n        xtx_uk.append(clusterable_embedding[xy, 0])\n        ytx_uk.append(clusterable_embedding[xy, 1])\n        color_uk.append('#FFD500')\n        hover_uk.append(var_ctr)\n    elif i in idx_all_ctr[32]:\n        xtx_se.append(clusterable_embedding[xy, 0])\n        ytx_se.append(clusterable_embedding[xy, 1])\n        color_se.append('#0C4076')\n        hover_se.append(var_ctr)\n    elif i in idx_all_ctr[33]:\n        xtx_cz.append(clusterable_embedding[xy, 0])\n        ytx_cz.append(clusterable_embedding[xy, 1])\n        color_cz.append('#D7141A')\n        hover_cz.append(var_ctr)\n    elif i in idx_all_ctr[34]:\n        xtx_ma.append(clusterable_embedding[xy, 0])\n        ytx_ma.append(clusterable_embedding[xy, 1])\n        color_ma.append('#ffe600')\n        hover_ma.append(var_ctr)\n    else:\n        xtx_n.append(clusterable_embedding[xy, 0])\n        ytx_n.append(clusterable_embedding[xy, 1])\n        hover_noise.append(var_ctr)\n    i += 1","ac59d571":"n_clusters_ = len(set(labels)) - (1 if -1 in labels else 0)\nn_noise_ = list(labels).count(-1)\nprint('Estimated number of clusters: %d' % n_clusters_)\nprint('Estimated number of noise points: %d' % n_noise_)","41ca9045":"source_us = ColumnDataSource(data=dict(xtx_us=xtx_us, ytx_us=ytx_us, hover_us=hover_us, color_us=color_us))\nsource_fr = ColumnDataSource(data=dict(xtx_fr=xtx_fr, ytx_fr=ytx_fr, hover_fr=hover_fr, color_fr=color_fr))\nsource_it = ColumnDataSource(data=dict(xtx_it=xtx_it, ytx_it=ytx_it, hover_it=hover_it, color_it=color_it))\nsource_sp = ColumnDataSource(data=dict(xtx_sp=xtx_sp, ytx_sp=ytx_sp, hover_sp=hover_sp, color_sp=color_sp))\nsource_pt = ColumnDataSource(data=dict(xtx_pt=xtx_pt, ytx_pt=ytx_pt, hover_pt=hover_pt, color_pt=color_pt))\nsource_ch = ColumnDataSource(data=dict(xtx_ch=xtx_ch, ytx_ch=ytx_ch, hover_ch=hover_ch, color_ch=color_ch))\nsource_arg = ColumnDataSource(data=dict(xtx_arg=xtx_arg, ytx_arg=ytx_arg, hover_arg=hover_arg, color_arg=color_arg))\nsource_atr = ColumnDataSource(\n    data=dict(xtx_atr=xtx_atr, ytx_atr=ytx_atr, hover_atr=hover_atr, color_atr=color_atr))\nsource_atl = ColumnDataSource(\n    data=dict(xtx_atl=xtx_atl, ytx_atl=ytx_atl, hover_atl=hover_atl, color_atl=color_atl))\nsource_ge = ColumnDataSource(\n    data=dict(xtx_ge=xtx_ge, ytx_ge=ytx_ge, hover_ge=hover_ge, color_ge=color_ge))\nsource_nz = ColumnDataSource(\n    data=dict(xtx_nz=xtx_nz, ytx_nz=ytx_nz, hover_nz=hover_nz, color_nz=color_nz))\nsource_sa = ColumnDataSource(\n    data=dict(xtx_sa=xtx_sa, ytx_sa=ytx_sa, hover_sa=hover_sa, color_sa=color_sa))\nsource_is = ColumnDataSource(\n    data=dict(xtx_is=xtx_is, ytx_is=ytx_is, hover_is=hover_is, color_is=color_is))\nsource_gr = ColumnDataSource(\n    data=dict(xtx_gr=xtx_gr, ytx_gr=ytx_gr, hover_gr=hover_gr, color_gr=color_gr))\nsource_ca = ColumnDataSource(\n    data=dict(xtx_ca=xtx_ca, ytx_ca=ytx_ca, hover_ca=hover_ca, color_ca=color_ca))\nsource_hu = ColumnDataSource(\n    data=dict(xtx_hu=xtx_hu, ytx_hu=ytx_hu, hover_hu=hover_hu, color_hu=color_hu))\nsource_bu = ColumnDataSource(\n    data=dict(xtx_bu=xtx_bu, ytx_bu=ytx_bu, hover_bu=hover_bu, color_bu=color_bu))\nsource_ro = ColumnDataSource(\n    data=dict(xtx_ro=xtx_ro, ytx_ro=ytx_ro, hover_ro=hover_ro, color_ro=color_ro))\nsource_ur = ColumnDataSource(\n    data=dict(xtx_ur=xtx_ur, ytx_ur=ytx_ur, hover_ur=hover_ur, color_ur=color_ur))\nsource_tu = ColumnDataSource(\n    data=dict(xtx_tu=xtx_tu, ytx_tu=ytx_tu, hover_tu=hover_tu, color_tu=color_tu))\nsource_sl = ColumnDataSource(\n    data=dict(xtx_sl=xtx_sl, ytx_sl=ytx_sl, hover_sl=hover_sl, color_sl=color_sl))\nsource_geo = ColumnDataSource(\n    data=dict(xtx_geo=xtx_geo, ytx_geo=ytx_geo, hover_geo=hover_geo, color_geo=color_geo))\nsource_en = ColumnDataSource(\n    data=dict(xtx_en=xtx_en, ytx_en=ytx_en, hover_en=hover_en, color_en=color_en))\nsource_cr = ColumnDataSource(\n    data=dict(xtx_cr=xtx_cr, ytx_cr=ytx_cr, hover_cr=hover_cr, color_cr=color_cr))\nsource_me = ColumnDataSource(\n    data=dict(xtx_me=xtx_me, ytx_me=ytx_me, hover_me=hover_me, color_me=color_me))\nsource_mol = ColumnDataSource(\n    data=dict(xtx_mol=xtx_mol, ytx_mol=ytx_mol, hover_mol=hover_mol, color_mol=color_mol))\nsource_br = ColumnDataSource(\n    data=dict(xtx_br=xtx_br, ytx_br=ytx_br, hover_br=hover_br, color_br=color_br))\nsource_le = ColumnDataSource(\n    data=dict(xtx_le=xtx_le, ytx_le=ytx_le, hover_le=hover_le, color_le=color_le))\nsource_mor = ColumnDataSource(\n    data=dict(xtx_mor=xtx_mor, ytx_mor=ytx_mor, hover_mor=hover_mor, color_mor=color_mor))\nsource_pe = ColumnDataSource(\n    data=dict(xtx_pe=xtx_pe, ytx_pe=ytx_pe, hover_pe=hover_pe, color_pe=color_pe))\nsource_uk = ColumnDataSource(\n    data=dict(xtx_uk=xtx_uk, ytx_uk=ytx_uk, hover_uk=hover_uk, color_uk=color_uk))\nsource_se = ColumnDataSource(\n    data=dict(xtx_se=xtx_se, ytx_se=ytx_se, hover_se=hover_se, color_se=color_se))\nsource_cz = ColumnDataSource(\n    data=dict(xtx_cz=xtx_cz, ytx_cz=ytx_cz, hover_cz=hover_cz, color_cz=color_cz))\nsource_ma = ColumnDataSource(\n    data=dict(xtx_ma=xtx_ma, ytx_ma=ytx_ma, hover_ma=hover_ma, color_ma=color_ma))\n\nsource_other = ColumnDataSource(data=dict(xtx_n=xtx_n, ytx_n=ytx_n, hover_noise=hover_noise))  # , color_ns=color_ns))\n","00e67861":"ptx = figure(plot_width=1200, plot_height=650,\n                 # title=\"UMAP, Dbscan and wine\",\n                 tools=\"pan,wheel_zoom,,box_zoom,reset\",\n                 active_scroll=\"wheel_zoom\",\n                 toolbar_location=\"above\"\n                 )\n\nptx.xaxis.visible = False\nptx.yaxis.visible = False\nptx.xgrid.grid_line_color = None\nptx.ygrid.grid_line_color = None\nsz_dt = 5\n\nwine_us = ptx.scatter('xtx_us', 'ytx_us', size=sz_dt, alpha=0.7, line_dash='solid', color='color_us',\n                     source=source_us)\nwine_fr = ptx.scatter('xtx_fr', 'ytx_fr', size=sz_dt, alpha=0.7, line_dash='solid', color='color_fr',\n                     line_color='#ffffff', source=source_fr)\nwine_it = ptx.scatter('xtx_it', 'ytx_it', size=sz_dt, alpha=0.7, line_dash='solid', color='color_it',\n                      source=source_it)\nwine_sp = ptx.scatter('xtx_sp', 'ytx_sp', size=sz_dt, alpha=0.7, line_dash='solid', color='color_sp',\n                      source=source_sp)\nwine_pt = ptx.scatter('xtx_pt', 'ytx_pt', size=sz_dt, alpha=0.7, line_dash='solid', color='color_pt',\n                      source=source_pt)\nwine_ch = ptx.scatter('xtx_ch', 'ytx_ch', size=sz_dt, alpha=0.7, line_dash='solid', color='color_ch',\n                      source=source_ch)\nwine_arg = ptx.scatter('xtx_arg', 'ytx_arg', size=sz_dt, alpha=0.7, line_dash='solid', color='color_arg',\n                      source=source_arg)\nwine_atr = ptx.scatter('xtx_atr', 'ytx_atr', size=sz_dt, alpha=0.7, line_dash='solid', color='color_atr',\n                       source=source_atr)\nwine_atl = ptx.scatter('xtx_atl', 'ytx_atl', size=sz_dt, alpha=0.7, line_dash='solid', color='color_atl',\n                       source=source_atl)\nwine_ge = ptx.scatter('xtx_ge', 'ytx_ge', size=sz_dt, alpha=0.7, line_dash='solid', color='color_ge',\n                       source=source_ge)\nwine_nz = ptx.scatter('xtx_nz', 'ytx_nz', size=sz_dt, alpha=0.7, line_dash='solid', color='color_nz',\n                      source=source_nz)\nwine_sa = ptx.scatter('xtx_sa', 'ytx_sa', size=sz_dt, alpha=0.7, line_dash='solid', color='color_sa',\n                      source=source_sa)\nwine_is = ptx.scatter('xtx_is', 'ytx_is', size=sz_dt, alpha=0.7, line_dash='solid', color='white',\n                      line_color='color_is', source=source_is)\nwine_gr = ptx.scatter('xtx_gr', 'ytx_gr', size=sz_dt, alpha=0.7, line_dash='dotted', color='white',\n                      line_color='color_gr', source=source_gr)\nwine_ca = ptx.scatter('xtx_ca', 'ytx_ca', size=sz_dt, alpha=0.7, line_dash='solid', color='white',\n                      line_color='color_ca', source=source_ca)\nwine_hu = ptx.scatter('xtx_hu', 'ytx_hu', size=sz_dt, alpha=0.7, line_dash='solid', color='color_hu',\n                       source=source_hu)\nwine_bu = ptx.scatter('xtx_bu', 'ytx_bu', size=sz_dt, alpha=0.7, line_dash='solid', color='color_bu',\n                      source=source_bu)\nwine_ro = ptx.scatter('xtx_ro', 'ytx_ro', size=sz_dt, alpha=0.7, line_dash='solid', color='color_ro',\n                      source=source_ro)\nwine_ur = ptx.scatter('xtx_ur', 'ytx_ur', size=sz_dt, alpha=0.7, line_dash='solid', color='color_ur',\n                      source=source_ur)\nwine_tu = ptx.scatter('xtx_tu', 'ytx_tu', size=sz_dt, alpha=0.7, line_dash='solid', color='color_tu',\n                      source=source_tu)\nwine_sl = ptx.scatter('xtx_sl', 'ytx_sl', size=sz_dt, alpha=0.7, line_dash='solid', color='color_sl',\n                      source=source_sl)\nwine_geo = ptx.scatter('xtx_geo', 'ytx_geo', size=sz_dt, alpha=0.7, line_dash='dotted', color='white',\n                      line_color='color_geo', source=source_geo)\nwine_en = ptx.scatter('xtx_en', 'ytx_en', size=sz_dt, alpha=0.7, line_dash='dashed', color='color_en',\n                       line_color='color_en', source=source_en)\nwine_cr = ptx.scatter('xtx_cr', 'ytx_cr', size=sz_dt, alpha=0.7, line_dash='dotted', color='color_cr',\n                      line_color='color_cr', source=source_cr)\nwine_me = ptx.scatter('xtx_me', 'ytx_me', size=sz_dt, alpha=0.7, line_dash='dotted', color='color_me',\n                      line_color='color_me', source=source_me)\nwine_mol = ptx.scatter('xtx_mol', 'ytx_mol', size=sz_dt, alpha=0.7, line_dash='dotted', color='color_mol',\n                      line_color='color_mol', source=source_mol)\nwine_br = ptx.scatter('xtx_br', 'ytx_br', size=sz_dt, alpha=0.7, line_dash='dotted', color='color_br',\n                      line_color='#009B3A', source=source_br)\n\n\nptx.add_tools(HoverTool(renderers=[wine_us], tooltips=[(\"Variety\", \"@hover_us\")]))\nptx.add_tools(HoverTool(renderers=[wine_fr], tooltips=[(\"Variety\", \"@hover_fr\")]))\nptx.add_tools(HoverTool(renderers=[wine_it], tooltips=[(\"Variety\", \"@hover_it\")]))\nptx.add_tools(HoverTool(renderers=[wine_sp], tooltips=[(\"Variety\", \"@hover_sp\")]))\nptx.add_tools(HoverTool(renderers=[wine_pt], tooltips=[(\"Variety\", \"@hover_pt\")]))\nptx.add_tools(HoverTool(renderers=[wine_ch], tooltips=[(\"Variety\", \"@hover_ch\")]))\nptx.add_tools(HoverTool(renderers=[wine_arg], tooltips=[(\"Variety\", \"@hover_arg\")]))\nptx.add_tools(HoverTool(renderers=[wine_atr], tooltips=[(\"Variety\", \"@hover_atr\")]))\nptx.add_tools(HoverTool(renderers=[wine_atl], tooltips=[(\"Variety\", \"@hover_atl\")]))\nptx.add_tools(HoverTool(renderers=[wine_ge], tooltips=[(\"Variety\", \"@hover_ge\")]))\nptx.add_tools(HoverTool(renderers=[wine_nz], tooltips=[(\"Variety\", \"@hover_nz\")]))\nptx.add_tools(HoverTool(renderers=[wine_sa], tooltips=[(\"Variety\", \"@hover_sa\")]))\nptx.add_tools(HoverTool(renderers=[wine_is], tooltips=[(\"Variety\", \"@hover_is\")]))\nptx.add_tools(HoverTool(renderers=[wine_gr], tooltips=[(\"Variety\", \"@hover_gr\")]))\nptx.add_tools(HoverTool(renderers=[wine_ca], tooltips=[(\"Variety\", \"@hover_ca\")]))\nptx.add_tools(HoverTool(renderers=[wine_hu], tooltips=[(\"Variety\", \"@hover_hu\")]))\nptx.add_tools(HoverTool(renderers=[wine_bu], tooltips=[(\"Variety\", \"@hover_bu\")]))\nptx.add_tools(HoverTool(renderers=[wine_ro], tooltips=[(\"Variety\", \"@hover_ro\")]))\nptx.add_tools(HoverTool(renderers=[wine_ur], tooltips=[(\"Variety\", \"@hover_ur\")]))\nptx.add_tools(HoverTool(renderers=[wine_tu], tooltips=[(\"Variety\", \"@hover_tu\")]))\nptx.add_tools(HoverTool(renderers=[wine_sl], tooltips=[(\"Variety\", \"@hover_sl\")]))\nptx.add_tools(HoverTool(renderers=[wine_geo], tooltips=[(\"Variety\", \"@hover_geo\")]))\nptx.add_tools(HoverTool(renderers=[wine_en], tooltips=[(\"Variety\", \"@hover_en\")]))\nptx.add_tools(HoverTool(renderers=[wine_cr], tooltips=[(\"Variety\", \"@hover_cr\")]))\nptx.add_tools(HoverTool(renderers=[wine_me], tooltips=[(\"Variety\", \"@hover_me\")]))\nptx.add_tools(HoverTool(renderers=[wine_mol], tooltips=[(\"Variety\", \"@hover_mol\")]))\nptx.add_tools(HoverTool(renderers=[wine_br], tooltips=[(\"Variety\", \"@hover_br\")]))","0fbc970d":"wine_br = ptx.scatter('xtx_br', 'ytx_br', size=sz_dt, alpha=0.7, line_dash='dotted', color='color_br',\n                              line_color='#009B3A', source=source_br, legend='Brazil')\nwine_le = ptx.scatter('xtx_le', 'ytx_le', size=sz_dt, alpha=0.7, line_dash='dashed', color='color_le',\n                      line_color='color_le', source=source_le, legend='lebanon')\nwine_mor = ptx.scatter('xtx_mor', 'ytx_mor', size=sz_dt, alpha=0.7, line_dash='solid', color='color_mor',\n                      line_color='#006233', source=source_mor, legend='Morocco')\nwine_pe = ptx.scatter('xtx_pe', 'ytx_pe', size=sz_dt, alpha=0.7, line_dash='solid', color='color_pe',\n                      line_color='color_pe', source=source_pe, legend='Peru')\nwine_uk = ptx.scatter('xtx_uk', 'ytx_uk', size=sz_dt, alpha=0.7, line_dash='solid', color='color_uk',\n                      line_color='#005BBB', source=source_uk, legend='Ukraine')\nwine_se = ptx.scatter('xtx_se', 'ytx_se', size=sz_dt, alpha=0.7, line_dash='solid', color='color_se',\n                      line_color='#C6363C', source=source_se, legend='Serbia')\nwine_cz = ptx.scatter('xtx_cz', 'ytx_cz', size=sz_dt, alpha=0.7, line_dash='solid', color='color_cz',\n                      line_color='#11457E', source=source_cz, legend='Czech Republic')\nwine_ma = ptx.scatter('xtx_ma', 'ytx_ma', size=sz_dt, alpha=0.7, line_dash='solid', color='color_ma',\n                      line_color='#005BBB', source=source_ma, legend='Macedonia')\n\ndata_noise = ptx.scatter('xtx_n', 'ytx_n', size=5, alpha=0.8, line_dash='solid', color='grey',\n                         source=source_other, legend='9 countries')  # 'color_ns'\n\nptx.add_tools(HoverTool(renderers=[wine_le], tooltips=[(\"Variety\", \"@hover_le\")]))\nptx.add_tools(HoverTool(renderers=[wine_mor], tooltips=[(\"Variety\", \"@hover_mor\")]))\nptx.add_tools(HoverTool(renderers=[wine_pe], tooltips=[(\"Variety\", \"@hover_pe\")]))\nptx.add_tools(HoverTool(renderers=[wine_uk], tooltips=[(\"Variety\", \"@hover_uk\")]))\nptx.add_tools(HoverTool(renderers=[wine_se], tooltips=[(\"Variety\", \"@hover_se\")]))\nptx.add_tools(HoverTool(renderers=[wine_cz], tooltips=[(\"Variety\", \"@hover_cz\")]))\nptx.add_tools(HoverTool(renderers=[wine_ma], tooltips=[(\"Variety\", \"@hover_ma\")]))\n\nptx.add_tools(HoverTool(renderers=[data_noise], tooltips=[(\"Variety\", \"@hover_noise\")]))\n\nptx.circle(x=0, y=0, radius=5, fill_color='white', line_color='black', alpha=0.0, line_width=1, line_alpha=0.2)\nptx.circle(x=0, y=0, radius=4, fill_color='white', line_color='black', alpha=0.0, line_width=1, line_alpha=0.2)\nptx.circle(x=0, y=0, radius=3, fill_color='white', line_color='black', alpha=0.0, line_width=1, line_alpha=0.2)\n\nptx.legend.click_policy = \"hide\"\nptx.legend.background_fill_alpha = 0.4\n\nlegend_r = Legend(items=[\n    LegendItem(label=frst_ctr[0], renderers=[wine_us], index=0),\n    LegendItem(label=frst_ctr[1], renderers=[wine_fr], index=1),\n    LegendItem(label=frst_ctr[2], renderers=[wine_it], index=2),\n    LegendItem(label=frst_ctr[3], renderers=[wine_sp], index=3),\n    LegendItem(label=frst_ctr[4], renderers=[wine_pt], index=4),\n    LegendItem(label=frst_ctr[5], renderers=[wine_ch], index=5),\n    LegendItem(label=frst_ctr[6], renderers=[wine_arg], index=6),\n    LegendItem(label=frst_ctr[7], renderers=[wine_atr], index=7),\n    LegendItem(label=frst_ctr[8], renderers=[wine_atl], index=8),\n    LegendItem(label=frst_ctr[9], renderers=[wine_ge], index=9),\n    LegendItem(label=frst_ctr[10], renderers=[wine_nz], index=10),\n    LegendItem(label=frst_ctr[11], renderers=[wine_sa], index=11),\n    LegendItem(label=frst_ctr[12], renderers=[wine_is], index=12),\n    LegendItem(label=frst_ctr[13], renderers=[wine_gr], index=13),\n    LegendItem(label=frst_ctr[14], renderers=[wine_ca], index=14),\n    LegendItem(label=frst_ctr[15], renderers=[wine_hu], index=15),\n    LegendItem(label=frst_ctr[16], renderers=[wine_bu], index=16),\n    LegendItem(label=frst_ctr[17], renderers=[wine_ro], index=17),\n    LegendItem(label=frst_ctr[18], renderers=[wine_ur], index=18),\n    LegendItem(label=frst_ctr[19], renderers=[wine_tu], index=19),\n    LegendItem(label=frst_ctr[20], renderers=[wine_sl], index=20),\n    LegendItem(label=frst_ctr[21], renderers=[wine_geo], index=21),\n    LegendItem(label=frst_ctr[22], renderers=[wine_en], index=22),\n    LegendItem(label=frst_ctr[23], renderers=[wine_cr], index=23),\n    LegendItem(label=frst_ctr[24], renderers=[wine_me], index=24),\n    LegendItem(label=frst_ctr[26], renderers=[wine_mol], index=26),\n    LegendItem(label=frst_ctr[27], renderers=[wine_br], index=27),\n], click_policy='hide')\n\nptx.add_layout(legend_r, 'right')\nshow(ptx)","9c82f5c5":"All the codes below serve the display and the interactions."}}