{"cell_type":{"76aa7062":"code","e9696901":"code","394e6fbd":"code","12a34d6a":"code","7694d3ba":"code","4a54fcaa":"code","76838c1d":"code","810fd62d":"code","5ad2dc42":"code","e07d2ac9":"code","7c57352e":"code","30de925b":"code","859f91d9":"code","2441e770":"code","fef9ab81":"code","1f73d2a4":"code","4b4a8689":"code","b5c2e5eb":"code","f128ed5e":"code","431c8628":"code","7014b931":"code","681d7323":"code","bc2dbd51":"code","7933cc53":"code","4a19ecdc":"code","685e552e":"code","7f3795be":"code","cf97aa55":"code","ce08828b":"code","08b89289":"markdown","10bd58b2":"markdown","47b9684b":"markdown","6ffd7731":"markdown","e5c4e2c6":"markdown","c981ebd8":"markdown","05e54ae2":"markdown","a8246565":"markdown","5ff1913b":"markdown","d3bbdb32":"markdown","0d96e063":"markdown","65e9b73d":"markdown","11ae64c3":"markdown"},"source":{"76aa7062":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nfrom datetime import datetime\nfrom matplotlib import dates\nimport seaborn as sns","e9696901":"data = pd.read_csv(\"..\/input\/retail-analysis-with-walmart-sales-data\/WALMART_SALES_DATA.csv\")\ndata.head()","394e6fbd":"sns.pairplot(data,\n             hue = 'Holiday_Flag')","12a34d6a":"data.shape","7694d3ba":"data.dtypes","4a54fcaa":"data.describe()","76838c1d":"data.isnull().values.any()","810fd62d":"data.info()","5ad2dc42":"data.max()","e07d2ac9":"data_groupby = data.groupby('Store')['Weekly_Sales'].sum()\nprint(\"Store Number {} has maximum Sales. Sum of Total Sales {}\".\nformat(data_groupby.idxmax\n(),data_groupby.max()))","7c57352e":"maxstd=pd.DataFrame(data.groupby('Store').agg({'Weekly_Sales':['std','mean']}))\nmaxstd = maxstd.reset_index()\nmaxstd['CoV'] =(maxstd[('Weekly_Sales','std')]\/maxstd[('Weekly_Sales','mean')])*100\nmaxstd.loc[maxstd[('Weekly_Sales','std')]==maxstd[('Weekly_Sales','std')].max()]","30de925b":"data_std = data.groupby('Store').agg({'Weekly_Sales':['mean','std']})\ndata_std.head()","859f91d9":"data_Q32012 = data[(pd.to_datetime(data['Date']) >= pd.to_datetime('07-01-2012')) & (pd.to_datetime(data['Date']) <= pd.to_datetime('09-30-2012'))]\ndata_growth = data_Q32012.groupby(['Store'])['Weekly_Sales'].sum()\nprint(\"Store Number {} has Good Quartely Growth in Q3'2012 {}\".format(data_growth.idxmax(),data_growth.max()))","2441e770":"walmart_data = data.groupby('Holiday_Flag')['Weekly_Sales'].mean()\nwalmart_data","fef9ab81":"data['Date'] =  pd.to_datetime(data['Date'])\ndata.info()","1f73d2a4":"data[\"Day\"]= pd.DatetimeIndex(data['Date']).day\ndata['Month'] = pd.DatetimeIndex(data['Date']).month\ndata['Year'] = pd.DatetimeIndex(data['Date']).year\ndata","4b4a8689":"def plot_line(df,holiday_dates,holiday_label):\n    fig, ax = plt.subplots(figsize = (15,5))  \n    ax.plot(df['Date'],df['Weekly_Sales'],label=holiday_label)\n    \n    for day in holiday_dates:\n        day = datetime.strptime(day, '%d-%m-%Y')\n        plt.axvline(x=day, linestyle='--', c='r')\n    \n\n    plt.title(holiday_label)\n    x_dates = df['Date'].dt.strftime('%Y-%m-%d').sort_values().unique()\n    xfmt = dates.DateFormatter('%d-%m-%y')\n    ax.xaxis.set_major_formatter(xfmt)\n    ax.xaxis.set_major_locator(dates.DayLocator(1))\n    plt.gcf().autofmt_xdate(rotation=90)\n    plt.show()\n\n\ntotal_sales = data.groupby('Date')['Weekly_Sales'].sum().reset_index()\nSuper_Bowl =['12-2-2010', '11-2-2011', '10-2-2012']\nLabour_Day =  ['10-9-2010', '9-9-2011', '7-9-2012']\nThanksgiving =  ['26-11-2010', '25-11-2011', '23-11-2012']\nChristmas = ['31-12-2010', '30-12-2011', '28-12-2012']\n    \nplot_line(total_sales,Super_Bowl,'Super Bowl')\nplot_line(total_sales,Labour_Day,'Labour Day')\nplot_line(total_sales,Thanksgiving,'Thanksgiving')\nplot_line(total_sales,Christmas,'Christmas')","b5c2e5eb":"data.loc[data.Date.isin(Super_Bowl)]","f128ed5e":"# Yearly Sales in holidays\nSuper_Bowl_df = pd.DataFrame(data.loc[data.Date.isin(Super_Bowl)].groupby('Year')['Weekly_Sales'].sum())\nThanksgiving_df = pd.DataFrame(data.loc[data.Date.isin(Thanksgiving)].groupby('Year')['Weekly_Sales'].sum())\nLabour_Day_df = pd.DataFrame(data.loc[data.Date.isin(Labour_Day)].groupby('Year')['Weekly_Sales'].sum())\nChristmas_df = pd.DataFrame(data.loc[data.Date.isin(Christmas)].groupby('Year')['Weekly_Sales'].sum())\n\nSuper_Bowl_df.plot(kind='bar',legend=False,title='Yearly Sales in Super Bowl holiday') \nThanksgiving_df.plot(kind='bar',legend=False,title='Yearly Sales in Thanksgiving holiday') \nLabour_Day_df.plot(kind='bar',legend=False,title='Yearly Sales in Labour Day holiday')\nChristmas_df.plot(kind='bar',legend=False,title='Yearly Sales in Christmas holiday')","431c8628":"# Monthly view of sales for each years\nplt.scatter(data[data.Year==2010][\"Month\"],data[data.Year==2010][\"Weekly_Sales\"])\nplt.xlabel(\"months\")\nplt.ylabel(\"Weekly Sales\")\nplt.title(\"Monthly view of sales in 2010\")\nplt.show()\n\nplt.scatter(data[data.Year==2011][\"Month\"],data[data.Year==2011][\"Weekly_Sales\"])\nplt.xlabel(\"months\")\nplt.ylabel(\"Weekly Sales\")\nplt.title(\"Monthly view of sales in 2011\")\nplt.show()\n\nplt.scatter(data[data.Year==2012][\"Month\"],data[data.Year==2012][\"Weekly_Sales\"])\nplt.xlabel(\"months\")\nplt.ylabel(\"Weekly Sales\")\nplt.title(\"Monthly view of sales in 2012\")\nplt.show()","7014b931":"# Monthly view of sales for all years\nplt.figure(figsize=(10,6))\nplt.bar(data[\"Month\"],data[\"Weekly_Sales\"])\nplt.xlabel(\"months\")\nplt.ylabel(\"Weekly Sales\")\nplt.title(\"Monthly view of sales\")","681d7323":"# Yearly view of sales\nplt.figure(figsize=(10,6))\ndata.groupby(\"Year\")[[\"Weekly_Sales\"]].sum().plot(kind='bar',legend=False)\nplt.xlabel(\"years\")\nplt.ylabel(\"Weekly Sales\")\nplt.title(\"Yearly view of sales\");","bc2dbd51":"# find outliers \nfig, axs = plt.subplots(4,figsize=(6,18))\nX = data[['Temperature','Fuel_Price','CPI','Unemployment']]\nfor i,column in enumerate(X):\n    sns.boxplot(data[column], ax=axs[i])","7933cc53":"# drop the outliers     \ndata_new = data[(data['Unemployment']<10) & (data['Unemployment']>4.5) & (data['Temperature']>10)]\ndata_new","4a19ecdc":"# check outliers \nfig, axs = plt.subplots(4,figsize=(6,18))\nX = data_new[['Temperature','Fuel_Price','CPI','Unemployment']]\nfor i,column in enumerate(X):\n    sns.boxplot(data_new[column], ax=axs[i])","685e552e":"# Import sklearn \nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.linear_model import LinearRegression","7f3795be":"# Select features and target \nX = data_new[['Store','Fuel_Price','CPI','Unemployment','Day','Month','Year']]\ny = data_new['Weekly_Sales']\n\n# Split data to train and test (0.80:0.20)\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2)","cf97aa55":"# Linear Regression model\nprint('Linear Regression:')\nprint()\nreg = LinearRegression()\nreg.fit(X_train, y_train)\ny_pred = reg.predict(X_test)\nprint('Accuracy:',reg.score(X_train, y_train)*100)\n\n\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))\n\n\nsns.scatterplot(y_pred, y_test);","ce08828b":"# Random Forest Regressor\nprint('Random Forest Regressor:')\nprint()\nrfr = RandomForestRegressor(n_estimators = 400,max_depth=15,n_jobs=5)        \nrfr.fit(X_train,y_train)\ny_pred=rfr.predict(X_test)\nprint('Accuracy:',rfr.score(X_test, y_test)*100)\n\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))\n\n\nsns.scatterplot(y_pred, y_test);","08b89289":"#### Solution 2: Store number 14 has the maximum deviation in sales tha i Standard Deviation. STD 317569.9494755081","10bd58b2":"# 4. Some holidays have a negative impact on sales. Find out holidays which have higher sales than the mean sales in non-holiday season for all stores together","47b9684b":"# Build prediction models to forecast demand (Modeling)","6ffd7731":"#### Solution 1: Store Number 20 has maximum Sales. Sum of Total Sales 301397792.46000004","e5c4e2c6":"#### Solution 3: Store number 4 has good quarterly growth in Q3'2012 with sales of 25652119.35","c981ebd8":"# 3. Which store\/s has good quarterly growth rate in Q3\u20192012?","05e54ae2":"## DESCRIPTION\n\nOne of the leading retail stores in the US, Walmart, would like to predict the sales and demand accurately. There are certain events and holidays which impact sales on each day. There are sales data available for 45 stores of Walmart. The business is facing a challenge due to unforeseen demands and runs out of stock some times, due to the inappropriate machine learning algorithm. An ideal ML algorithm will predict demand accurately and ingest factors like economic conditions including CPI, Unemployment Index, etc.\n\nWalmart runs several promotional markdown events throughout the year. These markdowns precede prominent holidays, the four largest of all, which are the Super Bowl, Labour Day, Thanksgiving, and Christmas. The weeks including these holidays are weighted five times higher in the evaluation than non-holiday weeks. Part of the challenge presented by this competition is modeling the effects of markdowns on these holiday weeks in the absence of complete\/ideal historical data. Historical sales data for 45 Walmart stores located in different regions are available.\n\n## Dataset Description\n\nThis is the historical data that covers sales from 2010-02-05 to 2012-11-01, in the file Walmart_Store_sales. Within this file you will find the following fields:\n\nStore - the store number\n\nDate - the week of sales\n\nWeekly_Sales -  sales for the given store\n\nHoliday_Flag - whether the week is a special holiday week 1 \u2013 Holiday week 0 \u2013 Non-holiday week\n\nTemperature - Temperature on the day of sale\n\nFuel_Price - Cost of fuel in the region\n\nCPI \u2013 Prevailing consumer price index\n\nUnemployment - Prevailing unemployment rate\n\n## Holiday Events\n\nSuper Bowl: 12-Feb-10, 11-Feb-11, 10-Feb-12, 8-Feb-13\nLabour Day: 10-Sep-10, 9-Sep-11, 7-Sep-12, 6-Sep-13\nThanksgiving: 26-Nov-10, 25-Nov-11, 23-Nov-12, 29-Nov-13\nChristmas: 31-Dec-10, 30-Dec-11, 28-Dec-12, 27-Dec-13\n\n## Analysis Tasks\n\n### Basic Statistics tasks\n\n1. Which store has maximum sales\n\n2. Which store has maximum standard deviation i.e., the sales vary a lot. Also, find out the coefficient of mean to standard deviation\n\n3. Which store\/s has good quarterly growth rate in Q3\u20192012\n\n4. Some holidays have a negative impact on sales. Find out holidays which have higher sales than the mean sales in non-holiday season for all stores together\n\n5. Provide a monthly and semester view of sales in units and give insights\n\n### Statistical Model\n\n1. For Store 1 \u2013 Build  prediction models to forecast demand\n\n2. Linear Regression \u2013 Utilize variables like date and restructure dates as 1 for 5 Feb 2010 (starting from the earliest date in order). Hypothesize if CPI, unemployment, and fuel price have any impact on sales.\n\n3. Change dates into days by creating new variable.\n\n4. Select the model which gives best accuracy.","a8246565":"# 2. Which store has maximum standard deviation i.e., the sales vary a lot. Also, find out the coefficient of mean to standard deviation?","5ff1913b":"#### Solution 4: The sales increased during thanksgiving. And the sales decreased during christmas.","d3bbdb32":"# 5. Provide a monthly and semester view of sales in units and give insights","0d96e063":"# 1. Which store has maximum sales?","65e9b73d":"# Build Model","11ae64c3":"#### Solution 5:\n#### Question 5 Monthly Sales Graph indicates that highest sum of sales is recorded in between jan-2011 to march-2011.\n#### Quarterly Sales Graph indicates that higest sum of sales is recorded in Q1 of 2011 and 2012.\n#### Semester Sales graph indicates that at beginning of 1st sem of 2010 and 1st sem of 2013 sales are lowest."}}