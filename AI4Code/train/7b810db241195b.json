{"cell_type":{"a1237fa6":"code","2a84a21d":"code","7e139869":"code","ab8a4e45":"code","94c332af":"code","586fbd52":"code","e77d02be":"code","8797436f":"code","f978a64c":"code","c5db1e6d":"code","6c710e2d":"code","1f0f10eb":"code","eed9417c":"code","8104d2d7":"code","2f183390":"code","3b585193":"code","bd5e6388":"code","079ab9c4":"code","a5990fcd":"code","678ff5ce":"code","4b1d1229":"code","18251c80":"code","1e819553":"code","d278984d":"code","a743f69c":"code","d23cc482":"code","28d67f89":"code","91444b6b":"code","1b7dca88":"code","18b91c5e":"code","b645b068":"code","0818513b":"code","f952b7ad":"code","61be859b":"code","3dfa4461":"code","e67a9c73":"code","d1e643d9":"code","7c635b01":"code","b77d0434":"markdown","20d2e71a":"markdown","bce1dbbf":"markdown","5c2b0c40":"markdown","ba5d44fb":"markdown","f2d4e6d2":"markdown"},"source":{"a1237fa6":"import pandas as pd\nimport numpy as np","2a84a21d":"data= pd.read_csv(\"..\/input\/mobile-price-classification\/train.csv\")","7e139869":"data.head()","ab8a4e45":"data.info()\ndata.count()","94c332af":"import matplotlib.pyplot as plt\nimport seaborn as sns","586fbd52":"data['price_range'].describe()\ncorrmat = data.corr()\nf, ax = plt.subplots(figsize=(12, 9))\nsns.heatmap(corrmat, vmax=.8, square=True);","e77d02be":"data.drop(columns= [\"three_g\",'four_g',\"m_dep\",\"n_cores\",\"sc_h\",\"pc\",\"wifi\",\"blue\"],axis=1, inplace=True)","8797436f":"print(\"No. of touch screen phones is %f\",sum(data['touch_screen']==1))\n","f978a64c":"data.drop(columns=['touch_screen','mobile_wt','clock_speed'],axis=1, inplace=True)","c5db1e6d":"data","6c710e2d":"y= data.iloc[:,-1]\nx= data.iloc[:,0:9]","1f0f10eb":"x","eed9417c":"import seaborn as sns\nx.boxplot(figsize=(14,8))","8104d2d7":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx = sc.fit_transform(x)","2f183390":"type(x)","3b585193":"y= y.to_numpy()\ntype(y)","bd5e6388":"y= y.reshape(-1,1)\nfrom sklearn.preprocessing import OneHotEncoder\nohot = OneHotEncoder()\ny = ohot.fit_transform(y)","079ab9c4":"y= y.toarray()\ny","a5990fcd":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.20, random_state=0)\n","678ff5ce":"import tensorflow as tf\nfrom tensorflow import keras\nfrom keras.layers import Flatten,Dense\nfrom keras.models import Sequential","4b1d1229":"model=Sequential()\nmodel.add(Dense(10, activation='relu', input_dim=9 ))\nmodel.add(Dense(8, activation='relu'))\nmodel.add(Dense(4, activation='softmax'))\nmodel.summary()","18251c80":"opt = keras.optimizers.Adam(learning_rate=0.01)\nmodel.compile(loss='categorical_crossentropy',optimizer=opt,metrics=['accuracy'])","1e819553":"history = model.fit(x_train,y_train,epochs=10,validation_data=(x_test,y_test), batch_size=32)","d278984d":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.xlabel('Epochs')\nplt.ylabel('Accuracy')\nplt.legend(['Train','Validation Set'],loc='upper left')\nplt.show()","a743f69c":"plt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.xlabel('Epochs')\nplt.ylabel('Loss')\nplt.legend(['Train','Validation Set'],loc='upper left')\nplt.show()","d23cc482":"y_pred = model.predict(x_test)\n\n#lets do the inverse one hot encoding\npred = []\nfor i in range(len(y_pred)):\n    pred.append(np.argmax(y_pred[i]))\n    \n# also inverse encoding for y_test labels\n\ntest = []\nfor i in range(len(y_test)):\n    test.append(np.argmax(y_test[i]))","28d67f89":"\nfrom sklearn.metrics import accuracy_score\nacc = accuracy_score(pred,test)\nprint(\"Accuracy of Your Model is = \" + str(acc*100))","91444b6b":"from tensorflow.keras.models import save_model, load_model\nfilepath = '.\/input\/saved_model'\nsave_model(model, filepath)","1b7dca88":"test = pd.read_csv(\"..\/input\/mobile-price-classification\/test.csv\")\ntest.drop(columns= [\"id\",\"three_g\",'four_g',\"m_dep\",\"n_cores\",\"sc_h\",\"pc\",\"wifi\",\"blue\",'touch_screen','mobile_wt','clock_speed'],axis=1, inplace=True)","18b91c5e":"test.head()","b645b068":"test.info()\ntest.isna().sum()","0818513b":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\ntest = sc.fit_transform(test)","f952b7ad":"type(test)","61be859b":"model= load_model(filepath, compile=True)","3dfa4461":"predictions = model.predict(test)\n","e67a9c73":"Price_range = []\nfor i in range(len(predictions)):\n    Price_range.append(np.argmax(predictions[i]))","d1e643d9":"Price_range\n","7c635b01":"my_sub = pd.DataFrame({'PriceRange':Price_range})\nmy_sub.to_csv('submission.csv', index=True)","b77d0434":"No null Values in test Set","20d2e71a":"We observe that both touch screen and not touch screen phones are present in the dataset, still it is not corelated to the price range. Hence we will remove it. Similarly, based on heatmap, we remove mobile weight and dock speed","bce1dbbf":"There's no missing value. So we can start with EDA specifically Feature Engineering","5c2b0c40":"****Detecting and Removing Outliers****","ba5d44fb":"There are Outliers in fc and px_height. So applying rescaling and normalization","f2d4e6d2":"From the heatmap, we observe that there are a three tuples that are corelated-\n1) 3G and 4G\n2) pc and fc \n3) px_width and px_height\n\nAs a user, the differentiating factor would be fc and 4G. Because if we have a good front camera it means that primary camera will also be better or atleast similar. If a phone is having 4G, it will definately have 3G. So, the differentiating factors would be 4G and fc. As far as pixcel is considered, we can select either of them"}}