{"cell_type":{"b73a0661":"code","e3e4f040":"code","7df855cc":"code","229b52a2":"code","0775adba":"code","b4269055":"code","6c117c71":"code","238d7d47":"code","00dec61b":"code","fb478496":"code","4d6c02d5":"code","5e406d3d":"code","2a6cf5c5":"code","6cedf992":"code","a386b580":"code","96bd8bf0":"code","b4d61d1b":"code","baf9a6ab":"code","a43877ed":"code","f0cae32f":"code","5c5b833f":"code","12d6b9f7":"code","71d61d39":"code","03112a26":"code","07a2c9dc":"code","bfe6fffc":"markdown","7b418961":"markdown","dc2840ba":"markdown","4a3c0b9f":"markdown","1ba7d0eb":"markdown","a138a08c":"markdown","2daac747":"markdown","3aadfef8":"markdown","bb9c71dc":"markdown","5f7362dd":"markdown"},"source":{"b73a0661":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib as plt\nimport seaborn as sns\n%matplotlib inline\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n","e3e4f040":"\ntitanic = pd.read_csv('..\/input\/titanic\/train.csv')\ntitanic.head()","7df855cc":"titanic.info()","229b52a2":"titanic.describe()","0775adba":"titanic.isna().sum()","b4269055":"titanic.drop([\"Cabin\"],inplace=True,axis=1)\ntitanic.drop([\"Ticket\"],inplace=True,axis=1)\ntitanic.drop([\"PassengerId\"],inplace=True,axis=1)\ntitanic.drop([\"Name\"],inplace=True,axis=1)\n\ntitanic.sample(3)","6c117c71":"titanic[\"Age\"].fillna(titanic[\"Age\"].median(),inplace=True)\ntitanic[\"Age\"].isna().sum()","238d7d47":"titanic.isna().sum()\ntitanic[\"Embarked\"].fillna(titanic[\"Embarked\"].mode(),inplace=True)\ntitanic[\"Embarked\"].isna().sum()","00dec61b":"sns.heatmap(titanic.corr(),annot=True)","fb478496":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=titanic)","4d6c02d5":"a =  len(titanic[titanic[\"Survived\"]==1])\nb =  len(titanic[\"Survived\"])\n\nsur = (a \/ b) * 100 \nprint(\"only \",sur,\"% of people survived\")","5e406d3d":"\nsns.countplot(titanic['Embarked'])\ntitanic['Embarked'].value_counts()","2a6cf5c5":"sns.set_style(\"whitegrid\")\nsns.countplot(x='Sex',data=titanic)","6cedf992":"sns.set_style(\"whitegrid\")\nsns.countplot(x='Survived',hue='Sex',data=titanic)","a386b580":"sns.set_style(\"whitegrid\")\nsns.barplot(y=\"Survived\",x=\"Pclass\",hue=\"Sex\",data=titanic)","96bd8bf0":"sns.factorplot('Pclass','Survived',hue='Sex',data=titanic)\n","b4d61d1b":"from sklearn.model_selection import train_test_split","baf9a6ab":"X = titanic[['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare',\n       'Embarked']]\nX = pd.get_dummies(X)\nX.drop([\"Sex_female\"],inplace=True,axis=1)\nX.drop([\"Embarked_C\"],inplace=True,axis=1)\nX.sample(3)","a43877ed":"y = titanic['Survived']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, shuffle=True)","f0cae32f":"X","5c5b833f":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)\n\n\n","12d6b9f7":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()\n\nlr.fit(X_train,y_train)\nprediction=lr.predict(X_test)","71d61d39":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier()\n\nrfc=RandomForestClassifier(n_estimators=50)\nrfc.fit(X_train,y_train)\nprediction_rfc  =  rfc.predict(X_test)","03112a26":"from sklearn.neighbors import KNeighborsClassifier #KNN\n\nknn=KNeighborsClassifier() \nknn.fit(X_train,y_train)\nprediction_knn=knn.predict(X_test)","07a2c9dc":"from sklearn import metrics\n\nprint('SCORE FOR LOGISTIC REGRESION MODEL :  ',metrics.accuracy_score(prediction,y_test))\n\nprint(\"__________________________________________________\")\nprint('SCORE FOR RANDOM FOREST MODEL :       ',metrics.accuracy_score(prediction_rfc,y_test))\n\n\nprint(\"__________________________________________________\")\nprint('SCORE FOR KNN MODEL :                 ',metrics.accuracy_score(prediction_knn,y_test))","bfe6fffc":"Data is looking fine now","7b418961":"# VISUALIZING NOW","dc2840ba":"# RANDOM FOREST MODEL","4a3c0b9f":"#### DATA CLEANING","1ba7d0eb":"# K NEAREST NEIGHBOUR","a138a08c":"# LOGISTIC REGRESSION","2daac747":"# MODEL EVALUATION","3aadfef8":"# AS WE CAN SEE ALL THE MODELS ACCUARY SCORE IS MORE THAN 75 \n# WHRE RANDOM FOREST HAS HIGHEST ACCUARCY SCORE OF 83.9\nso here random forest would be the suitable ","bb9c71dc":"# CONCULUSION\n1. > More female passengers survived than male passengers. 71% of the females survived compared to that of males (only 29% survived).\n\n2. > Survivors tend to be older that those who did not.\n\n3. > On average survivors paid higher fare than non-survivors. On average survivors paid 59units whereas non-surviours paid 32.6units******","5f7362dd":"# BUILING A PREDICTIVE MODEL"}}