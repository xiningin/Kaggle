{"cell_type":{"d7aac942":"code","1395cffa":"code","8f6d5b14":"code","f0736677":"code","f507218f":"code","57462a0c":"code","f2ce7af3":"code","d7eb7e0b":"code","60e183d4":"code","0ab46b2b":"code","178ade93":"code","ae36e021":"code","3ff51267":"code","fe18c92f":"code","abf2fd72":"code","d99878ac":"code","afdd029e":"code","8ccd9dfd":"code","041d2a82":"code","2e9fc46a":"code","a8b46731":"code","d7ac5960":"code","ae5898b7":"code","8880b8db":"code","503eab7e":"code","4dc3caa7":"code","23c1d81a":"code","0abe8b19":"code","1562eadb":"code","40c9059a":"code","fcd6b297":"markdown","e925ccd0":"markdown","71cc6241":"markdown","c41cb93b":"markdown","f2db7458":"markdown","2fac437a":"markdown","a100d5b5":"markdown","258b4543":"markdown","9b782716":"markdown","539bbe62":"markdown","b339a1c6":"markdown","aced2596":"markdown","7758fc6b":"markdown","17ab995e":"markdown","59bf438c":"markdown","89206f5a":"markdown","dcf08843":"markdown","11671daf":"markdown","8dd279d4":"markdown","cbb17d22":"markdown","59637057":"markdown","4418b281":"markdown"},"source":{"d7aac942":"# import all required libraries for reading, analysing and visualizing data\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","1395cffa":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8f6d5b14":"# read the data from the csv file\ndetails = pd.read_csv('\/kaggle\/input\/vehicle-dataset-from-cardekho\/Car details v3.csv')","f0736677":"details.head()","f507218f":"print('Dataset shape: ', details.shape)","57462a0c":"details.info()","f2ce7af3":"details.describe(include = 'all')","d7eb7e0b":"# check if any of the columns has null values\ndetails.isnull().sum()","60e183d4":"fig, (axis1,axis2) = plt.subplots(1, 2, figsize = (18,5))\nsns.countplot(x = 'fuel', data = details, ax = axis1)\nsns.barplot(x = 'fuel', y = 'selling_price', data = details, ax = axis2);","0ab46b2b":"fig, (axis1,axis2) = plt.subplots(1, 2, figsize = (18,5))\nsns.countplot(x = 'transmission', data = details, ax = axis1)\nsns.barplot(x = 'transmission', y = 'selling_price', data = details, ax = axis2);","178ade93":"fig, (axis1,axis2) = plt.subplots(1, 2, figsize = (18,5))\nsns.countplot(x = 'seller_type', data = details, ax = axis1)\nsns.barplot(x = 'seller_type', y = 'selling_price', data = details, ax = axis2);","ae36e021":"fig, (axis1,axis2) = plt.subplots(1, 2, figsize = (18,5))\nsns.countplot(x = 'year', data = details, ax = axis1)\nsns.lineplot(x = 'year', y = 'selling_price', data = details, ax = axis2);","3ff51267":"plt.figure(figsize = [8,5])\nsns.scatterplot(x = 'km_driven', y = 'selling_price', data = details);\nplt.title('Selling Price vs Km Driven in lakhs');","fe18c92f":"fig, (axis1,axis2) = plt.subplots(1, 2, figsize = (18,5))\nsns.countplot(x = 'owner', data = details, ax = axis1)\nsns.lineplot(x = 'owner', y = 'selling_price', data = details, ax = axis2);","abf2fd72":"fig, (axis1,axis2) = plt.subplots(1, 2, figsize = (18,5))\nsns.countplot(x = 'seats', data = details, ax = axis1)\nsns.lineplot(x = 'seats', y = 'selling_price', data = details, ax = axis2);","d99878ac":"# drop the rows having null values\ndetails = details[details['torque'].notna()]\n# drop the rows having 'Test Drive Car' as Owner type\ndetails = details[details.owner != 'Test Drive Car']","afdd029e":"# convert the values of 'fuel' column to numerical format\nz = lambda x: 0 if x == 'Diesel' else (1 if x == 'Petrol' else (2 if x == 'CNG' else 3))\ndetails['fuel'] = details['fuel'].apply(z)","8ccd9dfd":"# convert the values of 'seller_type' column to numerical format\nz = lambda x: 0 if x == 'Individual' else (1 if x == 'Dealer' else 2)\ndetails['seller_type'] = details['seller_type'].apply(z)","041d2a82":"# convert the values of 'transmission' column to numerical format\nz = lambda x: 0 if x == 'Manual' else 1\ndetails['transmission'] = details['transmission'].apply(z)","2e9fc46a":"# convert the values of 'owner' column to numerical format\nz = lambda x: 0 if x == 'First Owner' else (1 if x == 'Second Owner' else (2 if x == 'Third Owner' else 3))\ndetails['owner'] = details['owner'].apply(z)","a8b46731":"# convert the values of 'mileage' column to numerical format\nz = lambda x: float(str(x).split(' ')[0])\ndetails['mileage'] = details['mileage'].apply(z)","d7ac5960":"# convert the values of 'engine' column to numerical format\nz = lambda x: float(str(x).split(' ')[0])\ndetails['engine'] = details['engine'].apply(z)","ae5898b7":"# convert the values of 'max_power' column to numerical format\nz = lambda x: float(str(x).split(' ')[0])\ndetails['max_power'] = details['max_power'].apply(z)","8880b8db":"# drop the columns which are not needed\ndetails.drop(['name', 'torque'], axis = 1, inplace = True)","503eab7e":"# import the required modules\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor \nfrom sklearn.metrics import r2_score, mean_absolute_error","4dc3caa7":"# get the training and test data\n(Y, X) = (details['selling_price'].values, details.drop(['selling_price'], axis = 1))\nY = Y.reshape((X.shape[0], 1))\n\n(X_train, X_test, Y_train, Y_test) = train_test_split(X, Y, test_size = 0.3)\nprint(\"X_train shape:\" + str(X_train.shape))\nprint(\"Y_train shape:\" + str(Y_train.shape))\nprint(\"X_test shape:\" + str(X_test.shape))\nprint(\"Y_test shape:\" + str(Y_test.shape))","23c1d81a":"def plotPred(Y_pred):\n    x_points=np.linspace(0,7e6)\n    plt.figure(figsize=(12,5))\n    plt.plot(x_points, x_points, color='r')\n    plt.scatter(Y_test, Y_pred)\n    plt.xlabel('True Values')\n    plt.ylabel('Predicted Values')\n    plt.title('True Values Vs Predicted Values');","0abe8b19":"lireg = LinearRegression()\nlireg.fit(X_train, Y_train)\n\n# train and test scores\nlr_train_score = round(lireg.score(X_train, Y_train), 2)\nlr_test_score = round(lireg.score(X_test, Y_test), 2)\n# predicted output\nY_pred_lr = lireg.predict(X_test)\n\nprint('Linear Regression train score: ', lr_train_score)\nprint('Linear Regression test score: ', lr_test_score)\nprint('Mean absolute error: ', mean_absolute_error(Y_test, Y_pred_lr))\nprint('Coefficient of determination: ', r2_score(Y_test, Y_pred_lr))\n\n# plot predicted vs true values\nplotPred(Y_pred_lr)","1562eadb":"dtreg = DecisionTreeRegressor()\ndtreg.fit(X_train, Y_train)\n\n# train and test scores\ndt_train_score = round(dtreg.score(X_train, Y_train), 2)\ndt_test_score = round(dtreg.score(X_test, Y_test), 2)\n# predicted output\nY_pred_dt = dtreg.predict(X_test)\n\nprint('Decision Tree Regressor train score: ', dt_train_score)\nprint('Decision Tree Regressor test score: ', dt_test_score)\nprint('Mean absolute error: ', mean_absolute_error(Y_test, Y_pred_dt))\nprint('Coefficient of determination: ', r2_score(Y_test, Y_pred_dt))\n\n# plot predicted vs true values\nplotPred(Y_pred_dt)","40c9059a":"rfreg = RandomForestRegressor()\nrfreg.fit(X_train, Y_train)\n\n# train and test scores\nrf_train_score = round(rfreg.score(X_train, Y_train), 2)\nrf_test_score = round(rfreg.score(X_test, Y_test), 2)\n# predicted output\nY_pred_rf = rfreg.predict(X_test)\n\nprint('Decision Tree Regressor train score: ', rf_train_score)\nprint('Decision Tree Regressor test score: ', rf_test_score)\nprint('Mean absolute error: ', mean_absolute_error(Y_test, Y_pred_rf))\nprint('Coefficient of determination: ', r2_score(Y_test, Y_pred_rf))\n\n# plot predicted vs true values\nplotPred(Y_pred_rf)","fcd6b297":"## Preprocessing of Data","e925ccd0":"## Data Analysis","71cc6241":"### Using Random Forest Regressor","c41cb93b":"Thus from the above plots we can infer that most cars have Manual transmission and the price of cars having automatic transmission are way higher than of Manual type.","f2db7458":"## Data Visualization","2fac437a":"From the above plots we can see that most of the cars are sold by their first owners.","a100d5b5":"### Selling price vs Km Driven","258b4543":"Thus we can see that most of the cars of Diesel and Petrol type, and the selling price of Diesel cars are maximum follwed by Petrol, CNG and LPG.","9b782716":"### Selling price vs Transmission type","539bbe62":"### Selling price vs Fuel type","b339a1c6":"### Using Linear Regression","aced2596":"### Selling price vs Purchase year","7758fc6b":"## Machine Learning","17ab995e":"The above plot shows that the less driven cars are usually sold at higher prices.","59bf438c":"Thus most of the cars sold by Individual sellers but the Dealers charge the highest price for the cars.","89206f5a":"### Selling price vs Owner","dcf08843":"From the above plots we can see that most of the cars are 2-10 years old and the selling price decreases as the car become older and older.","11671daf":"### Selling price vs No of seats","8dd279d4":"### Using Decision Tree Regressor","cbb17d22":"### Selling price vs Seller type","59637057":"# Vehicle Price Prediction\nEstimate the selling price of cars based on the features of a car.","4418b281":"Thus we can see the most of the cars sold have 5 seats and their prices are usually between 6 to 7 lakhs."}}