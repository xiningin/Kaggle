{"cell_type":{"7b67d0cd":"code","526c1ea5":"code","a2895dd4":"code","a4d1d5e0":"code","650ae7a5":"code","108e9398":"code","a16ab5e4":"code","6c5e74c1":"code","cb8d4d36":"code","939e72b6":"code","23e905c6":"code","c33bb4d1":"code","274b6b5f":"code","fe95a84f":"code","a7a7c3b9":"code","a6308273":"code","62dfafa4":"code","e567be20":"code","f6010ea9":"code","36d12bfd":"code","7092e790":"code","c06653b3":"code","daccef46":"code","f3e8662b":"code","7588e177":"markdown","d51d57e6":"markdown"},"source":{"7b67d0cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","526c1ea5":"data = pd.read_csv(\"..\/input\/indianeedsoxygen-tweets\/IndiaWantsOxygen.csv\")","a2895dd4":"data.head()","a4d1d5e0":"data.columns","650ae7a5":"data.shape","108e9398":"len(data.user_name.unique())","a16ab5e4":"data = data[pd.notnull(data[\"user_name\"])]","6c5e74c1":"data.hashtags.unique","cb8d4d36":"from wordcloud import WordCloud, STOPWORDS\nimport matplotlib.pyplot as plt\nplt.figure(figsize= (20,20))\nwords= \"\".join(data[\"text\"])\nfinal = WordCloud(width = 2000, height = 800, background_color =\"white\").generate(words)\nplt.imshow(final)\nplt.axis(\"off\") \nplt.show()","939e72b6":"from wordcloud import WordCloud, STOPWORDS\nimport matplotlib.pyplot as plt\nplt.figure(figsize= (20,20))\nwords= \"\".join(data[\"hashtags\"])\nfinal = WordCloud(width = 2000, height = 800, background_color =\"white\").generate(words)\nplt.imshow(final)\nplt.axis(\"off\") \nplt.show()","23e905c6":"import plotly.graph_objects as go","c33bb4d1":"data.user_location.value_counts().head(30)","274b6b5f":"# fig = go.Figure(go.Bar(x = data.user_location.value_counts().head(30).index, y = data.user_location.value_counts().head(30).values))\n# fig.show()\n# fig = go.Figure(go.Bar(x = data.source.value_counts().head(10).index, y = data.source.value_counts().head(10).values))\n# fig.show()\n\nfig = go.Figure()\n\nfig.add_trace(\n    go.Scatter(\n        x = data.user_location.value_counts().head(30).index,\n        y = data.user_location.value_counts().head(30).values,\n        name = \"Line\"\n    ))\n\nfig.add_trace(\n    go.Bar(\n        x = data.user_location.value_counts().head(30).index,\n        y = data.user_location.value_counts().head(30).values,\n        name = \"Bar\"\n    ))\n\nfig.show()","fe95a84f":"data.user_verified.value_counts()","a7a7c3b9":"# fig = go.Figure(go.Pie(labels = data.user_verified.value_counts().head(30).index,values = data.user_verified.value_counts().head(30).values,pull = [0.2,0.2]))\n# fig.show()\nfig = go.Figure(go.Pie(labels = [\"Non Verified\",\"Verified\"],values = data.user_verified.value_counts().head(30).values,pull = [0.2,0.2]))\nfig.show()\n# labels = data.user_verified.value_counts().head(30).index \n# values = data.user_verified.value_counts().head(30).values\n\n# # pull is given as a fraction of the pie radius\n# fig = go.Figure(data=[go.Pie(labels=labels, values=values, pull=[0.2, 0.2])])\n# fig.show()","a6308273":"data.source.value_counts()","62dfafa4":"# fig = go.Figure(go.Bar(x = data.source.value_counts().head(10).index, y = data.source.value_counts().head(10).values))\n# fig.show()\n\nfig = go.Figure()\n\nfig.add_trace(\n    go.Scatter(\n        x = data.source.value_counts().head(10).index,\n        y = data.source.value_counts().head(10).values,\n        name = \"Line\"\n    ))\n\nfig.add_trace(\n    go.Bar(\n        x = data.source.value_counts().head(10).index,\n        y = data.source.value_counts().head(10).values,\n        name = \"Bar\"\n    ))\n\nfig.show()","e567be20":"data.date = data.date.apply(lambda x: x.split(\" \")[0])","f6010ea9":"data.date.value_counts().sort_index()","36d12bfd":"data.groupby(['date']).count().user_name.sort_index()","7092e790":"fig = go.Figure()\n\nfig.add_trace(\n    go.Scatter(\n        x = data.date.value_counts().sort_index().index,\n        y = data.date.value_counts().sort_index().values,\n        name = \"Line\"\n    ))\n\nfig.add_trace(\n    go.Bar(\n        x = data.date.value_counts().sort_index().index,\n        y = data.date.value_counts().sort_index().values,\n        name = \"Bar\"\n    ))\n\nfig.show()","c06653b3":"fig = go.Figure()\n\nfig.add_trace(\n    go.Scatter(\n        x = data.groupby(['date']).count().user_name.sort_index().index,\n        y = data.groupby(['date']).count().user_name.sort_index().values,\n        name = \"Line\"\n    ))\n\nfig.add_trace(\n    go.Bar(\n        x = data.groupby(['date']).count().user_name.sort_index().index,\n        y = data.groupby(['date']).count().user_name.sort_index().values,\n        name = \"Bar\"\n    ))\n\nfig.show()","daccef46":"data.head(30)","f3e8662b":"\nfig = go.Figure()\n\nfig.add_trace(\n    go.Scatter(\n        x = data.user_name.head(30).sort_values(),\n        y = data.user_followers.head(30),\n        name = \"User Followers\"\n    ))\n\nfig.add_trace(\n    go.Scatter(\n        x = data.user_name.head(30).sort_values(),\n        y = data.user_friends.head(30),\n        name = \"User Friends\"\n    ))\nfig.show()\n\nfig1 = go.Figure()\nfig1.add_trace(\n    go.Scatter(\n        x = data.user_name.head(30).sort_values(),\n        y = data.user_favourites.head(30),\n        name = \"User Favourites\"\n    ))\n\nfig1.show()","7588e177":"### *Please feel free to give your honest and valuable feedback*","d51d57e6":"## Please go through the entire notebook. Upvote if you find it awesome! ;)"}}