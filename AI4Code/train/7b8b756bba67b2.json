{"cell_type":{"57a4f3eb":"code","cc215e2f":"code","413a82f1":"code","86630926":"code","476fda19":"code","a41444a1":"code","8a0b38ed":"code","b30edb80":"code","9569bc02":"code","993ac293":"code","ddaf813a":"code","7f4e9a77":"code","83c16060":"code","7a8ef68e":"code","cfb26aca":"code","1515cffd":"code","2e3eb581":"code","d796103b":"code","a4badc7d":"code","a4560ae7":"code","36cc7055":"code","71b3234d":"code","e7b854e7":"code","e744b28c":"code","15409cec":"code","396fb24b":"code","7c333ff6":"code","963708da":"code","6d01abd5":"markdown","555236af":"markdown","ef5252b1":"markdown","6a2e447d":"markdown","8ef3deef":"markdown","4c9da54a":"markdown","c8b2f12e":"markdown","78fd6307":"markdown","51288b56":"markdown","2f65e579":"markdown","3cfaaac1":"markdown","02a12df6":"markdown","4184f64a":"markdown","60d83cc7":"markdown","8c7a2253":"markdown","693261b6":"markdown","b8043069":"markdown","95b31b1c":"markdown","6620ca54":"markdown"},"source":{"57a4f3eb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\nimport seaborn as sns\nfrom collections import Counter\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# plotly\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cc215e2f":"# students math course\nstudent_mat_data = pd.read_csv('\/kaggle\/input\/student-alcohol-consumption\/student-mat.csv')\n# students portuguese language\nstudent_por_data = pd.read_csv('\/kaggle\/input\/student-alcohol-consumption\/student-por.csv')","413a82f1":"student_mat_data.columns","86630926":"student_por_data.columns","476fda19":"student_mat_data.head()","a41444a1":"student_por_data.head()","8a0b38ed":"student_mat_data.describe()","b30edb80":"student_mat_data.info()","9569bc02":"def bar_plot(variable):\n    \"\"\"\n   input: variable ex : \"School\"\n   output: bar plot & value count\n    \n    \"\"\"\n    # get feature\n    var = student_mat_data[variable]\n    # count number of categorical variable(Value\/sample)\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize=(9,3))\n    plt.bar(varValue.index,varValue)\n    plt.xticks(varValue.index,varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}\/{}\".format(variable,varValue))","993ac293":"category1 = [\"address\",\"school\",\"sex\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"guardian\",\"schoolsup\",\n             \"famsup\",\"paid\",\"activities\",\"higher\",\"internet\",\"romantic\",\"famrel\",\"goout\",\"Dalc\",\"Walc\",\"famrel\",\"failures\",\n             \"health\",\"G1\",\"G2\",\"G3\",\"absences\",\"freetime\",\"studytime\",\"traveltime\"]\nfor c in category1:\n    bar_plot(c)","ddaf813a":"age_data = student_mat_data.age\nplt.figure(figsize=(9,3))\nplt.hist(age_data, bins = 50)\nplt.xlabel(\"Age\")\nplt.ylabel(\"Frequency\")\nplt.title( \"Age distribition with hist\")\nplt.show()","7f4e9a77":"# sex vs goout\nstudent_mat_data[[\"sex\",\"goout\"]].groupby([\"sex\"], as_index = False).mean().sort_values(by = \"goout\", ascending = False)","83c16060":"# age vs goout\nstudent_mat_data[[\"age\",\"goout\"]].groupby([\"age\"], as_index = False).mean().sort_values(by = \"goout\", ascending = False)","7a8ef68e":"# school vs failures\nstudent_mat_data[[\"school\",\"failures\"]].groupby([\"school\"], as_index = False).mean().sort_values(by = \"failures\",ascending = False)","cfb26aca":"# sex vs Dalc\nstudent_mat_data[[\"sex\",\"Dalc\"]].groupby([\"sex\"], as_index = False).mean().sort_values(by = \"Dalc\", ascending = False)","1515cffd":"# age vs Walc\nstudent_mat_data[[\"age\",\"Walc\"]].groupby([\"age\"], as_index = False).mean().sort_values(by = \"Walc\", ascending = False)","2e3eb581":"def detect_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        #IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indexes\n        outlier_list_col = df[(df[c]< Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        # store indices\n        outlier_indices.extend(outlier_list_col) \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers","d796103b":"student_mat_data.loc[detect_outliers(student_mat_data,[\"age\",\"Dalc\",\"Walc\",\"absences\"])]","a4badc7d":"student_mat_data.boxplot(column=\"Dalc\", by = \"Walc\")\nplt.show()","a4560ae7":"# correlation map\nf,ax = plt.subplots(figsize = (10,10))\nsns.heatmap(student_mat_data.corr(), annot = True, linewidths=.5, fmt = '.1f', ax=ax)","36cc7055":"# father's job\nfjob_list = student_mat_data['Fjob']\nlabels,values = zip(*Counter(fjob_list).items())\nlabels,values = list(labels),list(values)\n#Visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x = labels, y = values)\nplt.xticks(rotation = 45)\nplt.xlabel = ('Fathers'' jobs')\nplt.ylabel = ('Frequency')\nplt.title = ('father''s job')","71b3234d":"# mother's job\nmjob_list = student_mat_data['Mjob']\nlabels,values = zip(*Counter(mjob_list).items())\nlabels,values = list(labels), list(values)\n# visualization\nplt.figure(figsize = (15,10))\nax = sns.barplot(x= labels, y = values, palette = sns.cubehelix_palette(len(labels)))\nplt.xlabel = 'mother''s job'\nplt.ylabel = 'Frequency'\nplt.title = 'mother''s job'","e7b854e7":"# workday alcohol consumption vs weekend alcohol consumption\nage_list = list(student_mat_data.age.unique())\ndalc_ratio = []\nwalc_ratio = []\nfor i in age_list:\n    x = student_mat_data[student_mat_data.age == i]\n    dalc_rate = sum(x.Dalc) \/ len(x)\n    walc_rate = sum(x.Walc) \/ len(x)\n    dalc_ratio.append(dalc_rate)\n    walc_ratio.append(walc_rate)\n# sorting\ndata = pd.DataFrame({'age_list':age_list, 'dalc_ratio':dalc_ratio})\ndata1 = pd.DataFrame({'age_list':age_list,'walc_ratio':walc_ratio})\nnew_index = (data['dalc_ratio'].sort_values(ascending = False)).index.values\nnew_index1 =(data1['walc_ratio'].sort_values(ascending = False)).index.values\nsorted_data = data.reindex(new_index)\nsorted_data1 = data1.reindex(new_index1)\n\nsorted_data['dalc_ratio'] = sorted_data['dalc_ratio']\/ max(sorted_data['dalc_ratio'])\nsorted_data1['walc_ratio'] = sorted_data1['walc_ratio']\/ max(sorted_data1['walc_ratio'])\ndata = pd.concat([sorted_data,sorted_data1['walc_ratio']], axis = 1)\n\n#visualization\nf,ax = plt.subplots(figsize= (20,10))\nsns.pointplot(x = 'age_list', y = 'dalc_ratio', data= data, color = 'lime', alpha = 0.8)\nsns.pointplot(x = 'age_list', y = 'walc_ratio', data= data, color = 'red', alpha = 0.8)\nplt.text(7,0.6,'workday alcohol consumption ratio',color='red',fontsize = 17,style = 'italic')\nplt.text(7,0.55,'weekend alcohol consumption ratio',color='lime',fontsize = 18,style = 'italic')\nplt.xlabel = ('ages')\nplt.ylabel = ('Values')\nplt.title = 'workday alcohol consumption vs weekend alcohol consumption'\nplt.grid()","e744b28c":"# goout\n# sex\n# age\nsns.swarmplot(x = 'sex', y = 'age', hue = \"goout\", data= student_mat_data)\nplt.show()","15409cec":"df_mat = student_mat_data.iloc[:350,:]\npie1 = df_mat.age\nlabels = df_mat.age\nfig = {\n    \"data\":[\n        {      \n      \"values\": pie1,\n      \"labels\": labels,\n      \"domain\": {\"x\": [0, .5]},\n      \"name\": \"ages\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .3,\n      \"type\": \"pie\"   \n        },],\n     \"layout\": {\n        \"title\":\"students ages\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"ages of Students\",\n                \"x\": 0.20,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","396fb24b":"# prepare data frame\ndf_mat = student_mat_data.iloc[:395,:]\ndf_por = student_por_data.iloc[:395,:]\n# creating trace1\ntrace1 = go.Scatter(\n                        x = df_mat.age,\n                        y = df_mat.G1,\n                        mode = \"markers\",\n                        name = \"Math course\",\n                        marker = dict(color = 'rgba(255, 120, 255, 0.8)'),\n                        text = df_mat.age\n)\ntrace2 = go.Scatter(\n                        x = df_por.age,\n                        y = df_por.G1,\n                        mode = \"markers\",\n                        name = \"Portuguese language course\",\n                        marker = dict(color = 'rgba(15, 150, 6, 0.8)'),\n                        text = df_por.age\n            \n)\n\ndata = [trace1,trace2]\nlayout = dict(title = ' mat course and portuguese language course student workday alcohol consumption by age',\n                 xaxis = dict(title = 'age',ticklen = 5, zeroline = False),\n              yaxis = dict(title = 'workday alcohol consumption',ticklen = 5, zeroline = False)\n             )\nfig = dict(data = data , layout = layout)\niplot(fig)","7c333ff6":"trace1 = go.Histogram(\n            x = df_mat.G1,\n            opacity = 0.75,\n            name = \"G1\",\n            marker = dict(color = 'rgba(171, 50, 96, 0.6)'))\ntrace2 = go.Histogram(\n            x = df_mat.G2,\n            opacity = 0.75,\n            name = \"G2\",\n            marker = dict(color = 'rgba(50,250,10,0.6)'))\ntrace3 = go.Histogram(\n                x = df_mat.G3,\n                opacity = 0.75,\n                name = \"G3\",\n                marker = dict(color = 'rgba(50,40,255, 0.6)'))\ndata = [trace1,trace2,trace3]\nlayout = go.Layout(barmode = 'overlay',\n                   title = 'first period grade vs second period grade vs first period grade',\n                   xaxis = dict(title = 'G1 - G2 - G3'),\n                   yaxis = dict(title = 'count'),\n                  )\nfig = go.Figure(data = data , layout = layout)\niplot(fig)","963708da":"df_por = student_por_data.Mjob\nplt.subplots(figsize = (8,8))\nwordcloud = WordCloud(\n                        background_color = 'white',\n                        width = 512,\n                        height = 384).generate(\" \".join(df_por))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","6d01abd5":"<a id = \"1\"><\/a><br>\n# Load and Check Data","555236af":"<a id = \"2\"><\/a><br>\n\n# Variable Description\n1. School - Student's school(binary:'GP' or 'MS')\n1. sex - Student's sex\n1. age - Student's age\n1. address - Student's address\n1. famsize - family size (binary: 'LE3' - less or equal to 3 or 'GT3' - greater than 3)\n1. Pstatus - parent's cohabitation status (binary: 'T' - living together or 'A' - apart)\n1. Medu - mother's education (numeric: 0 - none, 1 - primary education (4th grade), 2 \u2013 5th to 9th grade, 3 \u2013 secondary education or 4 \u2013 higher education)\n1. Fedu - father's education (numeric: 0 - none, 1 - primary education (4th grade), 2 \u2013 5th to 9th grade, 3 \u2013 secondary education or 4 \u2013 higher education)\n1. Mjob - mother's job (nominal: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), 'at_home' or 'other') \n1. Fjob - father's job (nominal: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), 'at_home' or 'other') \n1. reason - reason to choose this school (nominal: close to 'home', school 'reputation', 'course' preference or 'other') \n1. guardian - student's guardian (nominal: 'mother', 'father' or 'other') \n1. traveltime - home to school travel time (numeric: 1 - 1 hour) \n1. studytime - weekly study time (numeric: 1 - 10 hours) \n1. failures - number of past class failures (numeric: n if 1<=n<3, else 4) \n1. schoolsup - extra educational support (binary: yes or no) \n1. famsup - family educational support (binary: yes or no) \n1. paid - extra paid classes within the course subject (Math or Portuguese) (binary: yes or no) \n1. activities - extra-curricular activities (binary: yes or no) \n1. nursery - attended nursery school (binary: yes or no) \n1. higher - wants to take higher education (binary: yes or no) \n1. internet - Internet access at home (binary: yes or no) \n1. romantic - with a romantic relationship (binary: yes or no) \n1. famrel - quality of family relationships (numeric: from 1 - very bad to 5 - excellent) \n1. freetime - free time after school (numeric: from 1 - very low to 5 - very high) \n1. goout - going out with friends (numeric: from 1 - very low to 5 - very high) \n1. Dalc - workday alcohol consumption (numeric: from 1 - very low to 5 - very high) \n1. Walc - weekend alcohol consumption (numeric: from 1 - very low to 5 - very high) \n1. health - current health status (numeric: from 1 - very bad to 5 - very good) \n1. absences - number of school absences (numeric: from 0 to 93) \n\nThese grades are related with the courses subject, Math or Portuguese:\n1.  G1 - first period grade (numeric: from 0 to 20)  \n1.  G2 - second period grade (numeric: from 0 to 20) \n1.  G3 - final grade (numeric: from 0 to 20, output target) ","ef5252b1":"## Scatter plot of math course students and portuguese students workday alcohol consume\n* pink dots is students taking the math course\n*  green dots is students taking the portuguese language course","6a2e447d":"## Word Cloud\n* Mothers jobs frequency with word cloud","8ef3deef":"<a id = \"5\"><\/a><br>\n## Numerical Variable","4c9da54a":"## Pie Chart of student age\n* this pie chart show us percentage of student ages","c8b2f12e":"<a id = \"7\"><\/a><br>\n## Outlier Detection","78fd6307":"<a id = \"7\"><\/a><br>\n## Data Visualization","51288b56":"## Analysis of swarm plot\n* with this  diagram we can say that male students are more frequency go out than female students\n","2f65e579":"<a id = \"3\"><\/a><br>\n## Univariate Variable Analysis\n* Categorical Variable: School,sex,famsize,Pstatus,Medu,Fedu,Mjob,Fjob,reason,guardian,schoolsup,famsup,\n    paid,activities,higher,internet,romantic,famrel,goout,Dalc,Walc,famrel,failures,health,G1,G2,G3,abcences,freetime,studytime,traveltime\n* Numerical Variable: age","3cfaaac1":"## Analysis of fathers' job barplot\n* this diagram show us frequency of father's job\n* Father's Most common job is other\n* second most common job is services(e.g. administrative or police)","02a12df6":"<a id = \"4\"><\/a><br>\n## Categorical Variable","4184f64a":"## Analysis of Correlation map\n* this table show us correlation of samples\n* if value is between -1 and 0 it means that samples has inverse proportion\n* if value is between 0 an 1 it means that samples has direct proportion","60d83cc7":"# Histogram of school grade \n* Pink bars are first period grade\n* Green bars are second period grade\n* blue bars are final grade","8c7a2253":"* int64(16): age,Medu,Fedu,traveltime,studytime,failures,famrel,freetime,goout,Dalc,Walc,health,absences,G1,G2,G3\n* object(17): school,sex,address,address,pstatus,Mjob,Fjob,reason,guardian,schoolsup,famsup,paid,activitie,nursery,higher,internet,romantic,freetime,","693261b6":"# Introduction\nThis datasets contains survey of students math and portuguese language courses in secondary school.\n<font color = 'blue' ><br>\n<br>Content:\n    \n1. [Load and Check Data](#1)   \n1. [Variable Description](#2)\n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variable](#4)\n        * [Numerical Variable](#5)\n1. [Basic Data Analysis](#6)\n1. [Outlier Detection](#7)\n1. [Data Visualization](#8)","b8043069":"<a id = \"6\"><\/a><br>\n## Basic Data Analysis\n* sex - goout\n* age - goout\n* school - failures\n* sex - Dalc\n* age - Walc","95b31b1c":"## Analysis of  morthers' job barplot \n* this diagram show us frequency of mothers' job\n* most common job is other\n* second most common job is services(e.g. administrative or police)\n* with this diagram we can say that the student who mother is teacher more than the student who father is teacher\n* also we can say that the student who mother is at home  more than the student who father is at home","6620ca54":"## Analysis of workday alcohol consumption vs weekend alcohol consumption by age point plot\n* With this  diagram we can understand between of samples proportion\n* with this  diagram we can see that workday alcohol consumption and weekend alcohol consumption has d\u0131rect proportion by age"}}