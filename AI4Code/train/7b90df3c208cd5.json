{"cell_type":{"b1b51b30":"code","57c5d923":"code","633cadf4":"code","49b72067":"code","c4b6a353":"code","ad7223e4":"code","dc456140":"code","61350862":"code","2c9a3c08":"code","9ca21ac6":"code","536dc180":"markdown","ace821c1":"markdown","45b4f66c":"markdown","189f742c":"markdown","ee817688":"markdown","147ef80c":"markdown","4b958f13":"markdown","929da01f":"markdown","6649d54b":"markdown","aee87f30":"markdown","a382bb82":"markdown","39c55298":"markdown","a2f863e8":"markdown","07a1c555":"markdown"},"source":{"b1b51b30":"import os\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set()","57c5d923":"data_dir = '..\/input\/commonlitreadabilityprize\/'\ntrain = pd.read_csv(data_dir + 'train.csv')\nprint(train.shape)\ntrain.head()","633cadf4":"print('% populated:')\ntrain.notnull().sum() \/ len(train)","49b72067":"col = 'target'\ndisplay(pd.DataFrame(train[col].describe()))\nsns.histplot(train[col])\nplt.show()","c4b6a353":"col = 'standard_error'\ndisplay(pd.DataFrame(train[col].describe()))\nsns.histplot(train[col], bins=30)\nplt.show()","ad7223e4":"print('correlation:')\ndisplay(train[['target', 'standard_error']].corr())\n\nplt.figure(figsize=(8, 6))\nsns.scatterplot(x=train['standard_error'], y=train['target'])\nplt.axhline(train['target'].mean(), color='tab:red')\nplt.text(0.03, \n         train['target'].mean() + 0.1, \n         'reading ease mean = {}'.format(round(train['target'].mean(), 2)),\n         weight='bold')\nplt.ylabel('reading ease')\nplt.show()","dc456140":"train['excerpt_length'] = train['excerpt'].apply(lambda x: len(x))\ncol = 'excerpt_length'\ndisplay(pd.DataFrame(train[col].describe()))\nsns.histplot(train[col])\nplt.show()","61350862":"print('correlation:')\ndisplay(train[['target', 'excerpt_length']].corr())\n\nplt.figure(figsize=(8, 6))\nsns.scatterplot(x=train['excerpt_length'], y=train['target'])\nsns.regplot(x=train['excerpt_length'], y=train['target'], scatter=False, ci=None, color='tab:blue')\nplt.ylabel('reading ease')\nplt.show()","2c9a3c08":"train['word_count'] = train['excerpt'].apply(lambda x: len(x.split()))\ncol = 'word_count'\ndisplay(pd.DataFrame(train[col].describe()))\nsns.histplot(train[col])\nplt.show()","9ca21ac6":"print('correlation:')\ndisplay(train[['target', 'word_count']].corr())\n\nplt.figure(figsize=(8, 6))\nsns.scatterplot(x=train['word_count'], y=train['target'])\nplt.ylabel('reading ease')\nplt.show()","536dc180":"*Reading Ease* average is around -1 and ranges from around -3.7 to 1.7.","ace821c1":"The negative correlation of *Reading Ease* with *Word Count* is quite small. I expected this to be higher than Excerpt Length but looks like this is not the case.","45b4f66c":"# Load Data","189f742c":"# Standard Error","ee817688":"Seems like the *Standard Error* generally increases as *Reading Ease* goes farther from its mean value.\n\nAccording to the Data tab, *Standard Error* is a \"measure of spread of scores among multiple raters for each excerpt.\" Looking at the above plot, we can say that the __scores from multiple raters are more consistent for excerpts with average *Reading Ease*__.","147ef80c":"# CommonLit - Simple SE and Excerpt Length EDA\n\nIn this notebook, we explore the distributions of the target (*Reading Ease*), *Standard Error*, *Excerpt Length* and *Word Count*. We also explore the relationship of the latter variables with the target.","4b958f13":"# Load Libraries","929da01f":"# Word Count","6649d54b":"# Target (Reading Ease)","aee87f30":"Excerpts may have ~670 to ~1340 characters (including spaces) and average at ~970 characters.","a382bb82":"# Explore Data","39c55298":"- __There is some negative correlation between *Reading Ease* and *Excerpt Length*__. Correlation Coefficient = -0.36. This makes sense as longer excerpts may be harder to read.","a2f863e8":"# Excerpt Length","07a1c555":"Excerpts may have ~130 to ~200 characters (separated by spaces) and average at ~170 characters."}}