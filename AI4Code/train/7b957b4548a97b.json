{"cell_type":{"ba48c6c8":"code","46c90974":"code","021807c6":"code","d6dda3b4":"code","4cead7b7":"code","5432876e":"code","5bbbb434":"code","d6d12eb0":"code","3942aa8f":"code","a1375207":"code","ec9db7de":"code","4308f04a":"code","12cba1aa":"code","31545bab":"code","9455fe08":"code","c0db3464":"code","302b52f8":"code","66203d59":"code","cf64c890":"code","d37b5def":"code","354892c1":"code","de279848":"code","6dfcaa8f":"code","24c65b3e":"code","e5b4cc52":"code","8355a105":"code","b87a50dc":"code","64dbb0cd":"code","8a86dedc":"markdown","673d51c8":"markdown","1932ccc0":"markdown","1f3f736d":"markdown","51b6b123":"markdown","d3c27429":"markdown","f8842381":"markdown","6f48e59c":"markdown","6df53a0c":"markdown","fd4e17f1":"markdown","03857299":"markdown","ba3b0f84":"markdown","c0847bdf":"markdown","e0284236":"markdown","2914a7bb":"markdown","052f4cde":"markdown"},"source":{"ba48c6c8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","46c90974":"import pandas as pd\ndf = pd.read_csv('\/kaggle\/input\/netflix-shows\/netflix_titles.csv')\ndf.head(10)","021807c6":"df.isnull().sum()","d6dda3b4":"df['type'].value_counts()","4cead7b7":"import plotly.express as px\ndf['count']= 1\nmovie_TVshow_counts = df.groupby('type')['count'].sum().reset_index()\nfig = px.bar(movie_TVshow_counts, x='type', y='count' ,color='type')\nfig.update_layout(title='Number of Movies and TV Shows on netflix')\n","5432876e":"#we need to filter the type.\n#calculate Movie\/TV show counts per year.\n\nmovie = df[df['type'] == 'Movie']\nTVshow = df[df['type'] == 'TV Show']","5bbbb434":"movie_date_add = movie.groupby(['type', 'date_added'])['count'].sum().reset_index()\nmovie_date_add['date_added'] = pd.to_datetime(movie_date_add['date_added'])\nmovie_date_add['year'] = movie_date_add['date_added'].dt.year\nmovie_date_add['month'] = movie_date_add['date_added'].dt.month\nmovie_year = movie_date_add.groupby(['type', 'year'])['count'].sum().reset_index()\nmovie_month = movie_date_add.groupby(['type', 'month'])['count'].sum().reset_index()","d6d12eb0":"TVshow_date_add = TVshow.groupby(['type', 'date_added'])['count'].sum().reset_index()\nTVshow_date_add['date_added'] = pd.to_datetime(TVshow_date_add['date_added'])\nTVshow_date_add['year'] = TVshow_date_add['date_added'].dt.year\nTVshow_date_add['month'] = TVshow_date_add['date_added'].dt.month\nTVshow_year = TVshow_date_add.groupby(['type', 'year'])['count'].sum().reset_index()\nTVshow_month = TVshow_date_add.groupby(['type', 'month'])['count'].sum().reset_index()","3942aa8f":"import plotly.graph_objects as go\n\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    x=movie_year['year'],\n    y=movie_year['count'],\n    name='movie',\n    marker_color='indianred'\n))\nfig.add_trace(go.Bar(\n    x=TVshow_year['year'],\n    y=TVshow_year['count'],\n    name='TV Show',\n    marker_color='lightsalmon'\n))\n\n# Here we modify the tickangle of the xaxis, resulting in rotated labels.\nfig.update_layout(title='Movies and TV Shows Over The Years', barmode='group', xaxis_tickangle=-45)\nfig.show()","a1375207":"fig = go.Figure()\n\n# Add traces\nfig.add_trace(go.Scatter(x=movie_year['year'], y=movie_year['count'],\n                    mode='lines+markers',\n                    name='movie',\n                    marker_color='indianred'))\nfig.add_trace(go.Scatter(x=TVshow_year['year'], y=TVshow_year['count'],\n                    mode='lines+markers',\n                    name='TVshow',\n                    marker_color='lightsalmon'))\n\nfig.update_layout(title='Movies and TV Shows Over The Years', barmode='group', xaxis_tickangle=-45)\nfig.show()","ec9db7de":"import plotly.graph_objects as go\n\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    x=movie_month['month'],\n    y=movie_month['count'],\n    name='movie',\n    marker_color='indianred'\n))\nfig.add_trace(go.Bar(\n    x=TVshow_month['month'],\n    y=TVshow_month['count'],\n    name='TV Show',\n    marker_color='lightsalmon'\n))\n\n# Here we modify the tickangle of the xaxis, resulting in rotated labels.\nfig.update_layout(title='Movies and TV Shows Each Month', barmode='group', xaxis_tickangle=-45)\nfig.show()","4308f04a":"fig = go.Figure()\n\n# Add traces\nfig.add_trace(go.Scatter(x=movie_month['month'], y=movie_month['count'],\n                    mode='lines+markers',\n                    name='movie',\n                    marker_color='indianred'))\nfig.add_trace(go.Scatter(x=TVshow_month['month'], y=TVshow_month['count'],\n                    mode='lines+markers',\n                    name='TVshow',\n                    marker_color='lightsalmon'))\n\nfig.update_layout(title='Movies and TV Shows Each Month', barmode='group', xaxis_tickangle=0)\nfig.show()","12cba1aa":"df.drop(['director'],axis = 1,inplace = True)\ndf.dropna(inplace=True)\nfrom collections import Counter\ncountry_data = df['country']\ncountry_count = pd.Series(dict(Counter(','.join(country_data).replace(' ,',',').replace(\n    ', ',',').split(',')))).sort_values(ascending=False)","31545bab":"county_count = country_count.rename_axis('country').reset_index(name='count')","9455fe08":"county_content_top20 = county_count.sort_values('count', ascending=False).head(20)\nfig = px.bar(county_content_top20, y='count', x='country', color=\"count\", text='count', title='Netflix Countent Country Top 20', height=700)\nfig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.show()","c0db3464":"#country to iso_code3\nimport pycountry\nimport numpy as np \ndef do_fuzzy_search(country):\n    try:\n        result = pycountry.countries.search_fuzzy(country)\n        return result[0].alpha_3\n    except:\n        return np.nan","302b52f8":"county_count[\"country\"] = county_count[\"country\"].replace('', np.nan)\ncounty_count[\"country\"] = county_count[\"country\"].replace('South Korea', 'Korea')\ncounty_count.dropna(inplace=True)","66203d59":"county_count['iso_code']= county_count[\"country\"].apply(lambda country: do_fuzzy_search(country))","cf64c890":"county_count[county_count['iso_code'].isnull()]['country'].value_counts()","d37b5def":"# We all have Soviet Union, West Germany, East Germany data, so we need to drop them.\ncounty_count.dropna(inplace=True)","354892c1":"county_count","de279848":"import plotly.graph_objects as go\n\nfig = go.Figure(data=go.Choropleth(\n    locations = county_count['iso_code'],\n    z = county_count['count'].astype(float),\n    text = county_count['country'],\n    colorscale = 'tealrose',\n    autocolorscale=False,\n    reversescale=True,\n    marker_line_color='darkgray',\n    marker_line_width=0.05,\n    colorbar_tickprefix = '',\n    colorbar_title = 'number of content',\n))\n\nfig.update_layout(\n    title_text='Number of Content In Each Country',\n    geo=dict(\n        showframe=False,\n        showcoastlines=False,\n        projection_type='equirectangular'\n    ),\n    annotations = [dict(\n        x=1,\n        y=1,\n        xref='paper',\n        yref='paper',\n        showarrow = False\n    )]\n)\n\nfig.show()","6dfcaa8f":"df = pd.read_csv('\/kaggle\/input\/netflix-shows\/netflix_titles.csv')\ndf['count']= 1\ndf.dropna(subset=['rating'], axis = 0, inplace = True)\ndf.isnull().sum()\ndf['classifications'] = df['rating'].apply(lambda x: 'little kids' if x == 'G'\n                                           else 'little kids' if x == 'TV-G'\n                                           else 'little kids' if x == 'TV-Y'\n                                           else 'kids' if x == 'PG'\n                                           else 'kids' if x == 'TV-Y7'\n                                           else 'kids' if x == 'TV-Y7-FV'\n                                           else 'kids' if x == 'TV-PG'\n                                           else '13+teenagers' if x == 'PG-13'\n                                           else '16+teenagers' if x == 'TV-14'\n                                           else 'adult') ","24c65b3e":"classification = df.groupby(['rating', 'classifications'])['count'].sum().reset_index()\nclassification","e5b4cc52":"fig = px.bar(classification, y='count', x='rating', color='classifications', text='count', title='Distribution of Netflix Content Rating', height=700,\n             category_orders={'rating': ['G', 'TV-G', 'TV-Y', 'TV-Y7-FV', 'TV-Y7', 'PG', 'TV-PG', 'PG-13', 'TV-14', 'NC-17', 'UR', 'NR', 'R', 'TV-MA'],\n                              'classifications':['adult', '16+teenagers', '13+teenagers', 'kids', 'little kids']})\n\nfig","8355a105":"type_classification = df.groupby(['type', 'rating', 'classifications'])['count'].sum().reset_index()\nmovie_type_classification = type_classification[type_classification['type'] == 'Movie']\ntvshow_type_classification = type_classification[type_classification['type'] == 'TV Show']","b87a50dc":"#Distribution of Netflix Movie Rating\nfigure = px.bar(movie_type_classification, x= 'rating', y='count', color='classifications', text='count', title='Distribution of Netflix Movie Rating', height=800,\n               category_orders={'rating': ['G', 'TV-G', 'TV-Y', 'TV-Y7-FV', 'TV-Y7', 'PG', 'TV-PG', 'PG-13', 'TV-14', 'NC-17', 'UR', 'NR', 'R', 'TV-MA'],\n                              'classifications':['adult', '16+teenagers', '13+teenagers', 'kids', 'little kids']})\nfigure.show()","64dbb0cd":"#Distribution of Netflix TV Show Rating\n\nfigure = px.bar(tvshow_type_classification, x= 'rating', y='count', color='classifications', text='count', title='Distribution of Netflix TV Shows Rating', height=800,\n               category_orders={'rating': ['G', 'TV-G', 'TV-Y', 'TV-Y7-FV', 'TV-Y7', 'PG', 'TV-PG', 'PG-13', 'TV-14', 'NC-17', 'UR', 'NR', 'R', 'TV-MA'],\n                              'classifications':['adult', '16+teenagers', '13+teenagers', 'kids', 'little kids']})\nfigure.show()","8a86dedc":"Netflix consists of two type show which are movies and tv shows.There are 5377 movies and 2410 TV Shows available on Netflix all across the world in 2019.","673d51c8":"Is it affected by the month or season ? ","1932ccc0":"# Exploratory Data Analysis","1f3f736d":"As you can see, growth rate of movies are better than tv shows from 2014 to 2019. Even though add 1497 movies in 2019 that was the most. you can understand that Netflix pay more attention to movies, But in 2019 to 2020 The number of tv shows increased by 41, from 656 to 697. from this data result, you can understand tv show could be more important from 2020.","51b6b123":"Check how many missing data do dataset have ? ","d3c27429":" **Show the Ratings**\n* G, TV-G, TV-Y are for little kids\n* PG, 'TV-Y7', 'TV-Y7-FV', TV-PG are for kids(above 7 years old)\n* PG-13 is for teenager(above 13 years old)\n* TV-14 is for teenager(above 16 years old)\n* NC-17, NR, R, TV-MA and UR is for adult","f8842381":"# Distinguish 2 types of movies and TV shows.","6f48e59c":"Netflix add a lot of Movies and TV shows In January, October, November and December. Maybe the most of holiday is among the October to January.There are Halloween, Thanksgiving Day, Christmas, New Year's Day, the Spring Festival all over the world. So users have a lot of time to watching Netflix among these months.that is kind of seasonal strategy.","6df53a0c":"* It can be found from the two pictures that Netflix does not provide a TV show for above 13-year-old teenagers.\n\n* Overall, The most of contents by Netflix which includes movies and tv shows are for adults and teenagers. Only a few contents are for kids.\n","fd4e17f1":"* In order to get more information, we need to distinguish the types and then compare them.","03857299":"# Classifications of Ratings","ba3b0f84":"Please give me an upvote if you like my notebook and share possible improvements in the comments.","c0847bdf":"* From the plot point of view, most of the content provided by Netflix is suitable for teenagers over the age of 16, even though there are up to 3620 contents for adults.","e0284236":"Right now, we separate the Movie and TV Show datasets. To see when did the movie or tv show add into the Netflix ?","2914a7bb":"# How many content available worldwide in each country?","052f4cde":"# Netflix Content Analysis\n![image.png](attachment:image.png)"}}