{"cell_type":{"ff0c4d49":"code","53115cef":"code","289e4654":"code","8c1fa257":"code","d2d74245":"code","2e041fbd":"code","f28a1090":"code","0eecbe91":"code","aaf015d4":"code","2e69a6d5":"code","655de3c2":"code","8ceae582":"code","885879ff":"code","41df13d6":"code","0eca750c":"code","a95c3ec3":"code","b964ce66":"code","86aeb22d":"code","0161b734":"code","51a3b468":"code","a6ee0aa8":"code","0b02a4f1":"code","4c6d98f5":"code","1cb83cda":"code","fb575de0":"code","89df2f45":"code","a9711eb9":"code","e1a714e5":"code","1a82d4c8":"code","e1e0080a":"code","4ffd85ac":"code","65983f41":"code","a7f9e61e":"code","e27ac260":"code","bda5072c":"code","8d4c80cb":"code","9e999b8e":"code","7ac5f50e":"code","465262f1":"code","46d8a9b7":"code","8196a27d":"code","4d0160e2":"code","eabaa55e":"code","37cafebb":"code","4ab9abc8":"code","e5e44560":"code","1471a8a5":"code","55f50772":"code","38ec81c2":"code","676f9891":"code","19408811":"code","dda8a42a":"code","44c8a9cd":"code","a91fb0fe":"code","63f51543":"code","263f8422":"code","f75dea71":"code","fece4d70":"code","c24ac768":"code","fd2f9cd4":"code","e3f1b130":"code","b02a9293":"code","9f8c3f1a":"code","7bba6dce":"code","23beec7b":"code","785a3a4e":"code","3cad831f":"code","c9d31fcb":"code","3ab3c8df":"code","183be07d":"code","7a141e32":"code","a16f3494":"code","8ca632e9":"code","b73d9636":"code","53474bea":"code","98e8c281":"code","afd461d4":"markdown","d5e4e304":"markdown","60e332ea":"markdown","f6fc2503":"markdown","69403cb8":"markdown","b9f68d32":"markdown","9d2663e9":"markdown","83c068b1":"markdown","7702d65a":"markdown","1e0a3a34":"markdown","35fb2f0e":"markdown","ada89147":"markdown","59f2ce08":"markdown","c63e8e68":"markdown","a1781518":"markdown","0763fc1f":"markdown","a68e1b1c":"markdown","60231f9c":"markdown","559d2ae0":"markdown","379e6687":"markdown","305c297b":"markdown","ad28b217":"markdown","b551b2f9":"markdown","bbdbb5a3":"markdown","a3eeac54":"markdown","936e9d8f":"markdown","26a8b829":"markdown","163d7d77":"markdown","f348b86e":"markdown","bae00b69":"markdown","109bde3c":"markdown","4b1839e6":"markdown","eb8495c3":"markdown","45dc536c":"markdown","11d1ff88":"markdown","f9debc11":"markdown","40bc61f4":"markdown","e22b777c":"markdown","511c9f45":"markdown","4cf05404":"markdown","0492410b":"markdown","0ab093bc":"markdown","f1e620e3":"markdown","e3a48026":"markdown","9897fd90":"markdown","9091ef36":"markdown","9e02e5b3":"markdown","ed631f92":"markdown","c48d1fe0":"markdown","475d73f1":"markdown","47eee238":"markdown","738c3baf":"markdown"},"source":{"ff0c4d49":"import gc\nimport os\nfrom pathlib import Path\nimport random\nimport sys\n\nfrom tqdm.notebook import tqdm\nimport numpy as np\nimport pandas as pd\nimport scipy as sp\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom IPython.core.display import display, HTML\n\n# --- plotly ---\nfrom plotly import tools, subplots\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport plotly.io as pio\npio.templates.default = \"plotly_dark\"\n\n# --- models ---\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import KFold\nimport lightgbm as lgb\nimport xgboost as xgb\nimport catboost as cb\n\n# --- setup ---\npd.set_option('max_columns', 50)","53115cef":"# Input data files are available in the \"..\/input\/\" directory.\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     filenames.sort()\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))","289e4654":"%%time\nimport requests\n\nfor filename in ['time_series_covid19_confirmed_global.csv',\n                 'time_series_covid19_deaths_global.csv',\n                 'time_series_covid19_recovered_global.csv',\n                 'time_series_covid19_confirmed_US.csv',\n                 'time_series_covid19_deaths_US.csv']:\n    print(f'Downloading {filename}')\n    url = f'https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/{filename}'\n    myfile = requests.get(url)\n    open(filename, 'wb').write(myfile.content)","8c1fa257":"from datetime import datetime\n\ndef _convert_date_str(df):\n    try:\n        df.columns = list(df.columns[:4]) + [datetime.strptime(d, \"%m\/%d\/%y\").date().strftime(\"%Y-%m-%d\") for d in df.columns[4:]]\n    except:\n        print('_convert_date_str failed with %y, try %Y')\n        df.columns = list(df.columns[:4]) + [datetime.strptime(d, \"%m\/%d\/%Y\").date().strftime(\"%Y-%m-%d\") for d in df.columns[4:]]\n\n\nconfirmed_global_df = pd.read_csv('time_series_covid19_confirmed_global.csv')\n_convert_date_str(confirmed_global_df)\n\ndeaths_global_df = pd.read_csv('time_series_covid19_deaths_global.csv')\n_convert_date_str(deaths_global_df)\n\nrecovered_global_df = pd.read_csv('time_series_covid19_recovered_global.csv')\n_convert_date_str(recovered_global_df)","d2d74245":"# Filter out problematic data points (The West Bank and Gaza had a negative value, cruise ships were associated with Canada, etc.)\nremoved_states = \"Recovered|Grand Princess|Diamond Princess\"\nremoved_countries = \"US|The West Bank and Gaza\"\n\nconfirmed_global_df.rename(columns={\"Province\/State\": \"Province_State\", \"Country\/Region\": \"Country_Region\"}, inplace=True)\ndeaths_global_df.rename(columns={\"Province\/State\": \"Province_State\", \"Country\/Region\": \"Country_Region\"}, inplace=True)\nrecovered_global_df.rename(columns={\"Province\/State\": \"Province_State\", \"Country\/Region\": \"Country_Region\"}, inplace=True)\n\nconfirmed_global_df = confirmed_global_df[~confirmed_global_df[\"Province_State\"].replace(np.nan, \"nan\").str.match(removed_states)]\ndeaths_global_df    = deaths_global_df[~deaths_global_df[\"Province_State\"].replace(np.nan, \"nan\").str.match(removed_states)]\nrecovered_global_df = recovered_global_df[~recovered_global_df[\"Province_State\"].replace(np.nan, \"nan\").str.match(removed_states)]\n\nconfirmed_global_df = confirmed_global_df[~confirmed_global_df[\"Country_Region\"].replace(np.nan, \"nan\").str.match(removed_countries)]\ndeaths_global_df    = deaths_global_df[~deaths_global_df[\"Country_Region\"].replace(np.nan, \"nan\").str.match(removed_countries)]\nrecovered_global_df = recovered_global_df[~recovered_global_df[\"Country_Region\"].replace(np.nan, \"nan\").str.match(removed_countries)]","2e041fbd":"confirmed_global_melt_df = confirmed_global_df.melt(\n    id_vars=['Country_Region', 'Province_State', 'Lat', 'Long'], value_vars=confirmed_global_df.columns[4:], var_name='Date', value_name='ConfirmedCases')\ndeaths_global_melt_df = deaths_global_df.melt(\n    id_vars=['Country_Region', 'Province_State', 'Lat', 'Long'], value_vars=confirmed_global_df.columns[4:], var_name='Date', value_name='Deaths')\nrecovered_global_melt_df = deaths_global_df.melt(\n    id_vars=['Country_Region', 'Province_State', 'Lat', 'Long'], value_vars=confirmed_global_df.columns[4:], var_name='Date', value_name='Recovered')","f28a1090":"train = confirmed_global_melt_df.merge(deaths_global_melt_df, on=['Country_Region', 'Province_State', 'Lat', 'Long', 'Date'])\ntrain = train.merge(recovered_global_melt_df, on=['Country_Region', 'Province_State', 'Lat', 'Long', 'Date'])","0eecbe91":"# --- US ---\nconfirmed_us_df = pd.read_csv('time_series_covid19_confirmed_US.csv')\ndeaths_us_df = pd.read_csv('time_series_covid19_deaths_US.csv')\n\nconfirmed_us_df.drop(['UID', 'iso2', 'iso3', 'code3', 'FIPS', 'Admin2', 'Combined_Key'], inplace=True, axis=1)\ndeaths_us_df.drop(['UID', 'iso2', 'iso3', 'code3', 'FIPS', 'Admin2', 'Combined_Key', 'Population'], inplace=True, axis=1)\n\nconfirmed_us_df.rename({'Long_': 'Long'}, axis=1, inplace=True)\ndeaths_us_df.rename({'Long_': 'Long'}, axis=1, inplace=True)\n\n_convert_date_str(confirmed_us_df)\n_convert_date_str(deaths_us_df)\n\n# clean\nconfirmed_us_df = confirmed_us_df[~confirmed_us_df.Province_State.str.match(\"Diamond Princess|Grand Princess|Recovered|Northern Mariana Islands|American Samoa\")]\ndeaths_us_df = deaths_us_df[~deaths_us_df.Province_State.str.match(\"Diamond Princess|Grand Princess|Recovered|Northern Mariana Islands|American Samoa\")]\n\n# --- Aggregate by province state ---\n#confirmed_us_df.groupby(['Country_Region', 'Province_State'])\nconfirmed_us_df = confirmed_us_df.groupby(['Country_Region', 'Province_State']).sum().reset_index()\ndeaths_us_df = deaths_us_df.groupby(['Country_Region', 'Province_State']).sum().reset_index()\n\n# remove lat, long.\nconfirmed_us_df.drop(['Lat', 'Long'], inplace=True, axis=1)\ndeaths_us_df.drop(['Lat', 'Long'], inplace=True, axis=1)\n\nconfirmed_us_melt_df = confirmed_us_df.melt(\n    id_vars=['Country_Region', 'Province_State'], value_vars=confirmed_us_df.columns[2:], var_name='Date', value_name='ConfirmedCases')\ndeaths_us_melt_df = deaths_us_df.melt(\n    id_vars=['Country_Region', 'Province_State'], value_vars=deaths_us_df.columns[2:], var_name='Date', value_name='Deaths')\n\ntrain_us = confirmed_us_melt_df.merge(deaths_us_melt_df, on=['Country_Region', 'Province_State', 'Date'])","aaf015d4":"train = pd.concat([train, train_us], axis=0, sort=False)\n\ntrain_us.rename({'Country_Region': 'country', 'Province_State': 'province', 'Date': 'date', 'ConfirmedCases': 'confirmed', 'Deaths': 'fatalities'}, axis=1, inplace=True)\ntrain_us['country_province'] = train_us['country'].fillna('') + '\/' + train_us['province'].fillna('')","2e69a6d5":"train","655de3c2":"%%time\ndatadir = Path('\/kaggle\/input\/covid19-global-forecasting-week-4')\n\n# Read in the data CSV files\n#train = pd.read_csv(datadir\/'train.csv')\n#test = pd.read_csv(datadir\/'test.csv')\n#submission = pd.read_csv(datadir\/'submission.csv')\n","8ceae582":"train","885879ff":"#test","41df13d6":"#submission","0eca750c":"train.rename({'Country_Region': 'country', 'Province_State': 'province', 'Id': 'id', 'Date': 'date', 'ConfirmedCases': 'confirmed', 'Deaths': 'fatalities', 'Recovered': 'recovered'}, axis=1, inplace=True)\ntrain['country_province'] = train['country'].fillna('') + '\/' + train['province'].fillna('')\n\n# test.rename({'Country_Region': 'country', 'Province_State': 'province', 'Id': 'id', 'Date': 'date', 'ConfirmedCases': 'confirmed', 'Fatalities': 'fatalities'}, axis=1, inplace=True)\n# test['country_province'] = test['country'].fillna('') + '\/' + test['province'].fillna('')","a95c3ec3":"ww_df = train.groupby('date')[['confirmed', 'fatalities']].sum().reset_index()\nww_df['new_case'] = ww_df['confirmed'] - ww_df['confirmed'].shift(1)\nww_df['growth_factor'] = ww_df['new_case'] \/ ww_df['new_case'].shift(1)\nww_df.tail()","b964ce66":"ww_melt_df = pd.melt(ww_df, id_vars=['date'], value_vars=['confirmed', 'fatalities', 'new_case'])\nww_melt_df","86aeb22d":"fig = px.line(ww_melt_df, x=\"date\", y=\"value\", color='variable', \n              title=\"\u5168\u7403\u78ba\u8a3a\/\u6b7b\u4ea1\u75c5\u4f8b\u6578\u8da8\u52e2\")\nfig.show()","0161b734":"fig = px.line(ww_melt_df, x=\"date\", y=\"value\", color='variable',\n              title=\"\u5168\u7403\u78ba\u8a3a\/\u6b7b\u4ea1\u75c5\u4f8b\u6578\u8da8\u52e2(\u65e5\u8a8c\u6a21\u5f0f)\",\n             log_y=True)\nfig.show()","51a3b468":"ww_df['mortality'] = ww_df['fatalities'] \/ ww_df['confirmed']\n\nfig = px.line(ww_df, x=\"date\", y=\"mortality\", \n              title=\"\u5168\u7403\u6b7b\u4ea1\u7387\u8da8\u52e2\")\nfig.show()","a6ee0aa8":"fig = px.line(ww_df, x=\"date\", y=\"growth_factor\", \n              title=\"\u5168\u7403\u6210\u9577\u56e0\u7d20\u8da8\u52e2\")\nfig.add_trace(go.Scatter(x=[ww_df['date'].min(), ww_df['date'].max()], y=[1., 1.], name='Growth factor=1.', line=dict(dash='dash', color=('rgb(255, 0, 0)'))))\nfig.update_yaxes(range=[0., 5.])\nfig.show()","0b02a4f1":"country_df = train.groupby(['date', 'country'])[['confirmed', 'fatalities']].sum().reset_index()\ncountry_df.tail()","4c6d98f5":"countries = country_df['country'].unique()\nprint(f'{len(countries)} countries are in dataset:\\n{countries}')","1cb83cda":"target_date = country_df['date'].max()\n\nprint('Date: ', target_date)\nfor i in [1, 100, 10000, 100000, 1000000, 10000000]:\n    n_countries = len(country_df.query('(date == @target_date) & confirmed > @i'))\n    print(f'{n_countries} countries have more than {i} confirmed cases')","fb575de0":"ax = sns.distplot(np.log10(country_df.query('date == \"2021-12-01\"')['confirmed'] + 1))\nax.set_title(\"2021\/12\/01 \u78ba\u8a3a\u75c5\u4f8b\u76f4\u65b9\u5716\")\nax.set_xlim([0, 8])\nax.set_xticks(np.arange(9))\n_ = ax.set_xticklabels(['0', '10', '100', '1k', '10k', '100k', '1m', '10m'])","89df2f45":"top_country_df = country_df.query('(date == @target_date) & (confirmed > 1000)').sort_values('confirmed', ascending=False)\ntop_country_melt_df = pd.melt(top_country_df, id_vars='country', value_vars=['confirmed', 'fatalities'])","a9711eb9":"fig = px.bar(top_country_melt_df.iloc[::-1],\n             x='value', y='country', color='variable', barmode='group',\n             title=f'\u78ba\u8a3a\u75c5\u4f8b \/ \u6b7b\u4ea1\u4eba\u6578 {target_date}', text='value', height=1500, orientation='h')\nfig.show()","e1a714e5":"top30_countries = top_country_df.sort_values('confirmed', ascending=False).iloc[:30]['country'].unique()\ntop30_countries_df = country_df[country_df['country'].isin(top30_countries)]\nfig = px.line(top30_countries_df,\n              x='date', y='confirmed', color='country',\n              title=f'\u81f3\u4eca TOP 30 \u570b\u5bb6\u7684\u78ba\u8a3a\u75c5\u4f8b\u6578 {target_date}')\nfig.show()","1a82d4c8":"top30_countries = top_country_df.sort_values('fatalities', ascending=False).iloc[:30]['country'].unique()\ntop30_countries_df = country_df[country_df['country'].isin(top30_countries)]\nfig = px.line(top30_countries_df,\n              x='date', y='fatalities', color='country',\n              title=f'\u81f3\u4eca TOP 30 \u570b\u5bb6\u7684\u6b7b\u4ea1\u75c5\u4f8b\u6578 {target_date}')\nfig.show()","e1e0080a":"top_country_df = country_df.query('(date == @target_date) & (confirmed > 100)')\ntop_country_df['mortality_rate'] = top_country_df['fatalities'] \/ top_country_df['confirmed']\ntop_country_df = top_country_df.sort_values('mortality_rate', ascending=False)","4ffd85ac":"fig = px.bar(top_country_df[:30].iloc[::-1],\n             x='mortality_rate', y='country',\n             title=f'\u9ad8\u6b7b\u4ea1\u7387 TOP 30 \u570b\u5bb6\uff1a {target_date}', text='mortality_rate', height=800, orientation='h')\nfig.show()","65983f41":"fig = px.bar(top_country_df[-30:],\n             x='mortality_rate', y='country',\n             title=f'\u4f4e\u6b7b\u4ea1\u7387 TOP 30 \u570b\u5bb6\uff1a {target_date}', text='mortality_rate', height=800, orientation='h')\nfig.show()","a7f9e61e":"all_country_df = country_df.query('date == @target_date')\nall_country_df['confirmed_log1p'] = np.log10(all_country_df['confirmed'] + 1)\nall_country_df['fatalities_log1p'] = np.log10(all_country_df['fatalities'] + 1)\nall_country_df['mortality_rate'] = all_country_df['fatalities'] \/ all_country_df['confirmed']","e27ac260":"fig = px.choropleth(all_country_df, locations=\"country\", \n                    locationmode='country names', color=\"confirmed_log1p\", \n                    hover_name=\"country\", hover_data=[\"confirmed\", 'fatalities', 'mortality_rate'],\n                    range_color=[all_country_df['confirmed_log1p'].min(), all_country_df['confirmed_log1p'].max()], \n                    color_continuous_scale=\"peach\", \n                    title='\u5b58\u5728\u78ba\u8a3a\u75c5\u4f8b\u7684\u570b\u5bb6')\n\n# I'd like to update colorbar to show raw values, but this does not work somehow...\n# Please let me know if you know how to do this!!\ntrace1 = list(fig.select_traces())[0]\ntrace1.colorbar = go.choropleth.ColorBar(\n    tickvals=[0, 1, 2, 3, 4, 5, 6, 7, 8],\n    ticktext=['1', '10', '100', '1000','10000', '100000', '1000000', '10000000', '100000000'])\nfig.show()","bda5072c":"\nfig = px.choropleth(all_country_df, locations=\"country\", \n                    locationmode='country names', color=\"fatalities_log1p\", \n                    hover_name=\"country\", range_color=[0, 6],\n                    hover_data=['confirmed', 'fatalities', 'mortality_rate'],\n                    color_continuous_scale=\"peach\", \n                    title='\u6b7b\u4ea1\u4eba\u6578\u9ad8\u7684\u570b\u5bb6')\nfig.show()","8d4c80cb":"fig = px.choropleth(all_country_df, locations=\"country\", \n                    locationmode='country names', color=\"mortality_rate\", \n                    hover_name=\"country\", range_color=[0, 0.10], \n                    color_continuous_scale=\"peach\", \n                    title='\u6b7b\u4ea1\u7387\u9ad8\u7684\u570b\u5bb6')\nfig.show()","9e999b8e":"n_countries = 20\nn_start_death = 10\nfatality_top_countires = top_country_df.sort_values('fatalities', ascending=False).iloc[:n_countries]['country'].values\ncountry_df['date'] = pd.to_datetime(country_df['date'])\n\n\ndf_list = []\nfor country in fatality_top_countires:\n    this_country_df = country_df.query('country == @country')\n    start_date = this_country_df.query('fatalities > @n_start_death')['date'].min()\n    this_country_df = this_country_df.query('date >= @start_date')\n    this_country_df['date_since'] = this_country_df['date'] - start_date\n    this_country_df['fatalities_log1p'] = np.log10(this_country_df['fatalities'] + 1)\n    this_country_df['fatalities_log1p'] -= this_country_df['fatalities_log1p'].values[0]\n    df_list.append(this_country_df)\n\ntmpdf = pd.concat(df_list)\ntmpdf['date_since_days'] = tmpdf['date_since'] \/ pd.Timedelta('1 days')","7ac5f50e":"fig = px.line(tmpdf,\n              x='date_since_days', y='fatalities_log1p', color='country',\n              title=f'\u81ea 10 \u4eba\u6b7b\u4ea1\u4ee5\u4f86\u6309\u570b\u5bb6\u5283\u5206\u7684\u6b7b\u4ea1\u4eba\u6578\uff0c\u622a\u81f3 {target_date}')\nfig.add_trace(go.Scatter(x=[0, 28], y=[0, 4], name='Double by 7 days', line=dict(dash='dash', color=('rgb(200, 200, 200)'))))\nfig.add_trace(go.Scatter(x=[0, 56], y=[0, 4], name='Double by 14 days', line=dict(dash='dash', color=('rgb(200, 200, 200)'))))\nfig.add_trace(go.Scatter(x=[0, 84], y=[0, 4], name='Double by 21 days', line=dict(dash='dash', color=('rgb(200, 200, 200)'))))\nfig.show()","465262f1":"country_df['prev_confirmed'] = country_df.groupby('country')['confirmed'].shift(1)\ncountry_df['new_case'] = country_df['confirmed'] - country_df['prev_confirmed']\ncountry_df['new_case'].fillna(0, inplace=True)\ntop30_country_df = country_df[country_df['country'].isin(top30_countries)]\n\nfig = px.line(top30_country_df,\n              x='date', y='new_case', color='country',\n              title=f'\u4f9d\u570b\u5bb6\/\u5730\u5340\u5283\u5206\u7684\u6bcf\u65e5\u65b0\u589e\u78ba\u8a3a\u75c5\u4f8b')\nfig.show()","46d8a9b7":"country_df['avg_new_case'] = country_df.groupby('country')['new_case'].rolling(7).mean().reset_index(0, drop=True)\ncountry_df['prev_new_case'] = country_df.groupby('country')['avg_new_case'].shift(1)\ncountry_df['growth_factor'] = country_df['avg_new_case'] \/ country_df['prev_new_case']\n\ncountry_df['growth_factor'].fillna(0, inplace=True)\ntop30_country_df = country_df[country_df['country'].isin(top30_countries)]\n\nfig = px.line(top30_country_df,\n              x='date', y='growth_factor', color='country',\n              title=f'\u6309\u570b\u5bb6\/\u5730\u5340\u5283\u5206\u7684\u6210\u9577\u56e0\u5b50')\nfig.add_trace(go.Scatter(x=[ww_df['date'].min(), ww_df['date'].max()], y=[1., 1.], name='Growth factor=1.', line=dict(dash='dash', color=('rgb(255, 0, 0)'))))\nfig.update_yaxes(range=[0., 5.])\nfig.show()","8196a27d":"country_df['date'] = country_df['date'].apply(str)\ncountry_df['confirmed_log1p'] = np.log1p(country_df['confirmed'])\ncountry_df['fatalities_log1p'] = np.log1p(country_df['fatalities'])\n\nfig = px.scatter_geo(country_df, locations=\"country\", locationmode='country names', \n                     color=\"confirmed\", size='confirmed', hover_name=\"country\", \n                     hover_data=['confirmed', 'fatalities'],\n                     range_color= [0, country_df['confirmed'].max()], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='COVID-19\uff1a\u78ba\u8a3a\u75c5\u4f8b\u8da8\u52e2', color_continuous_scale=\"portland\")\n# fig.update(layout_coloraxis_showscale=False)\nfig.show()","4d0160e2":"fig = px.scatter_geo(country_df, locations=\"country\", locationmode='country names', \n                     color=\"fatalities\", size='fatalities', hover_name=\"country\", \n                     hover_data=['confirmed', 'fatalities'],\n                     range_color= [0, country_df['fatalities'].max()], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='COVID-19\uff1a\u6b7b\u4ea1\u75c5\u4f8b\u8da8\u52e2', color_continuous_scale=\"portland\")\nfig.show()","eabaa55e":"country_df.loc[country_df['new_case'] < 0, 'new_case'] = 0.\nfig = px.scatter_geo(country_df, locations=\"country\", locationmode='country names', \n                     color=\"new_case\", size='new_case', hover_name=\"country\", \n                     hover_data=['confirmed', 'fatalities'],\n                     range_color= [0, country_df['new_case'].max()], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='COVID-19\uff1a\u6bcf\u65e5\u65b0\u589e\u75c5\u4f8b\u8da8\u52e2', color_continuous_scale=\"portland\")\nfig.show()","37cafebb":"for country in countries:\n    province = train.query('country == @country')['province'].unique()\n    if len(province) > 1:       \n        print(f'Country {country} has {len(province)} provinces: {province}')","4ab9abc8":"usa_state_code_df = pd.read_csv('\/kaggle\/input\/usa-state-code\/usa_states2.csv')","e5e44560":"train_us","1471a8a5":"# Prepare data frame only for US. \n\n#train_us = train.query('country == \"US\"')\ntrain_us['mortality_rate'] = train_us['fatalities'] \/ train_us['confirmed']\n\n# Convert province column to its 2-char code name,\nstate_name_to_code = dict(zip(usa_state_code_df['state_name'], usa_state_code_df['state_code']))\ntrain_us['province_code'] = train_us['province'].map(state_name_to_code)\n\n# Only show latest days.\ntrain_us_latest = train_us.query('date == @target_date')","55f50772":"fig = px.choropleth(train_us_latest, locations='province_code', locationmode=\"USA-states\",\n                    color='confirmed', scope=\"usa\", hover_data=['province', 'fatalities', 'mortality_rate'],\n                    title=f'\u7f8e\u570b\u78ba\u8a3a\u75c5\u4f8b {target_date}')\nfig.show()","38ec81c2":"train_us_latest.sort_values('confirmed', ascending=False)","676f9891":"fig = px.choropleth(train_us_latest, locations='province_code', locationmode=\"USA-states\",\n                    color='mortality_rate', scope=\"usa\", hover_data=['province', 'fatalities', 'mortality_rate'],\n                    title=f'\u7f8e\u570b\u6b7b\u4ea1\u75c5\u4f8b {target_date}')\nfig.show()","19408811":"train_us_march = train_us.query('date > \"2020-03-01\"')\nfig = px.line(train_us_march,\n              x='date', y='confirmed', color='province',\n              title=f'\u7f8e\u570b\u5404\u5dde\u78ba\u8a3a\u75c5\u4f8b\uff0c\u622a\u81f3 {target_date}')\nfig.show()","dda8a42a":"train_us_march['prev_confirmed'] = train_us_march.groupby('province')['confirmed'].shift(1)\ntrain_us_march['new_case'] = train_us_march['confirmed'] - train_us_march['prev_confirmed']\ntrain_us_march['new_case'].fillna(0, inplace=True)\n\nfig = px.line(train_us_march,\n              x='date', y='new_case', color='province',\n              title=f'\u7f8e\u570b\u5404\u5dde\u6bcf\u65e5\u65b0\u589e\u78ba\u8a3a\u75c5\u4f8b')\nfig.show()","44c8a9cd":"train_us_march['avg_new_case'] = train_us_march.groupby('province')['new_case'].rolling(7).mean().reset_index(0, drop=True)\ntrain_us_march['prev_new_case'] = train_us_march.groupby('province')['avg_new_case'].shift(1)\ntrain_us_march['growth_factor'] = train_us_march['avg_new_case'] \/ train_us_march['prev_new_case']\ntrain_us_march['growth_factor'].fillna(0, inplace=True)\nfig = px.line(train_us_march,\n              x='date', y='growth_factor', color='province',\n              title=f'\u7f8e\u570b\u5404\u5dde\u7684\u6210\u9577\u56e0\u5b50')\nfig.add_trace(go.Scatter(x=[train_us_march['date'].min(), train_us_march['date'].max()], y=[1., 1.],\n                         name='Growth factor=1.', line=dict(dash='dash', color=('rgb(255, 0, 0)'))))\nfig.update_yaxes(range=[0., 5.])\nfig.show()","a91fb0fe":"# Ref: https:\/\/www.kaggle.com\/abhinand05\/covid-19-digging-a-bit-deeper\neurope_country_list =list([\n    'Austria','Belgium','Bulgaria','Croatia','Cyprus','Czechia','Denmark','Estonia','Finland','France','Germany','Greece','Hungary','Ireland',\n    'Italy', 'Latvia','Luxembourg','Lithuania','Malta','Norway','Netherlands','Poland','Portugal','Romania','Slovakia','Slovenia',\n    'Spain', 'Sweden', 'United Kingdom', 'Iceland', 'Russia', 'Switzerland', 'Serbia', 'Ukraine', 'Belarus',\n    'Albania', 'Bosnia and Herzegovina', 'Kosovo', 'Moldova', 'Montenegro', 'North Macedonia'])\n\ncountry_df['date'] = pd.to_datetime(country_df['date'])\ntrain_europe = country_df[country_df['country'].isin(europe_country_list)]\n#train_europe['date_str'] = pd.to_datetime(train_europe['date'])\ntrain_europe_latest = train_europe.query('date == @target_date')","63f51543":"fig = px.choropleth(train_europe_latest, locations=\"country\", \n                    locationmode='country names', color=\"confirmed\", \n                    hover_name=\"country\", range_color=[1, train_europe_latest['confirmed'].max()], \n                    color_continuous_scale='portland', \n                    title=f'\u622a\u81f3\u76ee\u524d\uff0c\u78ba\u8a3a\u75c5\u4f8b\u7684\u6b50\u6d32\u570b\u5bb6 {target_date}', scope='europe', height=800)\nfig.show()","263f8422":"train_europe_march = train_europe.query('date >= \"2020-03-01\"')\nfig = px.line(train_europe_march,\n              x='date', y='confirmed', color='country',\n              title=f'\u6b50\u6d32\u5404\u570b\u78ba\u8a3a\u75c5\u4f8b\uff0c\u622a\u81f3 {target_date}')\nfig.show()","f75dea71":"fig = px.line(train_europe_march,\n              x='date', y='fatalities', color='country',\n              title=f'\u6b50\u6d32\u5404\u570b\u6b7b\u4ea1\u4eba\u6578\uff0c\u622a\u81f3 {target_date}')\nfig.show()","fece4d70":"train_europe_march['prev_confirmed'] = train_europe_march.groupby('country')['confirmed'].shift(1)\ntrain_europe_march['new_case'] = train_europe_march['confirmed'] - train_europe_march['prev_confirmed']\nfig = px.line(train_europe_march,\n              x='date', y='new_case', color='country',\n              title=f'\u6bcf\u65e5\u65b0\u589e\u6b50\u6d32\u5404\u570b\u78ba\u8a3a\u75c5\u4f8b')\nfig.show()","c24ac768":"train_europe_march['avg_new_case'] = train_europe_march.groupby('country')['new_case'].rolling(7).mean().reset_index(0, drop=True)\ntrain_europe_march['prev_new_case'] = train_europe_march.groupby('country')['avg_new_case'].shift(1)\ntrain_europe_march['growth_factor'] = train_europe_march['avg_new_case'] \/ train_europe_march['prev_new_case']\ntrain_europe_march['growth_factor'].fillna(0, inplace=True)\nfig = px.line(train_europe_march,\n              x='date', y='growth_factor', color='country',\n              title=f'\u6b50\u6d32\u570b\u5bb6\u7684\u6210\u9577\u56e0\u5b50')\nfig.add_trace(go.Scatter(x=[train_europe_march['date'].min(), train_europe_march['date'].max()], y=[1., 1.],\n                         name='Growth factor=1.', line=dict(dash='dash', color=('rgb(255, 0, 0)'))))\nfig.update_yaxes(range=[0., 5.])\nfig.show()","fd2f9cd4":"country_latest = country_df.query('date == @target_date')\n\nfig = px.choropleth(country_latest, locations=\"country\", \n                    locationmode='country names', color=\"confirmed\", \n                    hover_name=\"country\", range_color=[1, 300000], \n                    color_continuous_scale='portland', \n                    title=f'\u622a\u81f3\u76ee\u524d\u5df2\u78ba\u8a3a\u75c5\u4f8b\u7684\u4e9e\u6d32\u570b\u5bb6 {target_date}', scope='asia', height=800)\nfig.show()","e3f1b130":"top_asian_country_df = country_df[country_df['country'].isin([\n    'China', 'Indonesia', 'Iran', 'Japan', 'Korea, South', 'Malaysia', 'Philippines',\n    'India', 'Bangladesh', 'Pakistan', 'Saudi Arabia', 'Turkey'\n])]\n\nfig = px.line(top_asian_country_df,\n              x='date', y='new_case', color='country',\n              title=f'\u4e9e\u6d32\u6bcf\u65e5\u65b0\u78ba\u8a3a\u75c5\u4f8b')\nfig.show()","b02a9293":"top_asian_country_df['avg_new_case'] = top_asian_country_df.groupby('country')['new_case'].rolling(7).mean().reset_index(0, drop=True)\ntop_asian_country_df['prev_new_case'] = top_asian_country_df.groupby('country')['avg_new_case'].shift(1)\ntop_asian_country_df['growth_factor'] = top_asian_country_df['avg_new_case'] \/ top_asian_country_df['prev_new_case']\ntop_asian_country_df['growth_factor'].fillna(0, inplace=True)\nfig = px.line(top_asian_country_df,\n              x='date', y='growth_factor', color='country',\n              title=f'\u4e9e\u6d32\u570b\u5bb6\u6210\u9577\u7387')\nfig.add_trace(go.Scatter(x=[top_asian_country_df['date'].min(), top_asian_country_df['date'].max()], y=[1., 1.],\n                         name='Growth factor=1.', line=dict(dash='dash', color=('rgb(255, 0, 0)'))))\nfig.update_yaxes(range=[0., 5.])\nfig.show()","9f8c3f1a":"max_confirmed = country_df.groupby('country')['new_case'].max().reset_index()\ncountry_latest = pd.merge(country_latest, max_confirmed.rename({'new_case': 'max_new_case'}, axis=1))\ncountry_latest['new_case_peak_to_now_ratio'] = country_latest['new_case'] \/ country_latest['max_new_case']","7bba6dce":"recovering_country = country_latest.query('new_case_peak_to_now_ratio < 0.5')\nmajor_recovering_country = recovering_country.query('confirmed > 100')","23beec7b":"fig = px.bar(major_recovering_country.sort_values('new_case_peak_to_now_ratio', ascending=False),\n             x='new_case_peak_to_now_ratio', y='country',\n             title=f'\u6b7b\u4ea1\u7387\u4f4e\uff1a\u524d 30 \u500b\u570b\u5bb6{target_date}', text='new_case_peak_to_now_ratio', height=1000, orientation='h')\nfig.show()","785a3a4e":"fig = px.choropleth(country_latest, locations=\"country\", \n                    locationmode='country names', color=\"new_case_peak_to_now_ratio\", \n                    hover_name=\"country\", range_color=[0, 1], \n                    # color_continuous_scale=\"peach\", \n                    hover_data=['confirmed', 'fatalities', 'new_case', 'max_new_case'],\n                    title='new_case_peak_to_now_ratio \u570b\u5bb6')\nfig.show()","3cad831f":"china_df = train.query('country == \"China\"')\nchina_df['prev_confirmed'] = china_df.groupby('province')['confirmed'].shift(1)\nchina_df['new_case'] = china_df['confirmed'] - china_df['prev_confirmed']\nchina_df.loc[china_df['new_case'] < 0, 'new_case'] = 0.","c9d31fcb":"fig = px.line(china_df,\n              x='date', y='new_case', color='province',\n              title=f'\u6bcf\u65e5\u65b0\u589e\u4e2d\u570b\u5404\u7701\u78ba\u8a3a\u75c5\u4f8b')\nfig.show()","3ab3c8df":"china_df.query('(province == \"Hubei\") & (date > \"2020-03-10\")')[['country_province', 'date', 'confirmed', 'fatalities', 'recovered', 'new_case']]","183be07d":"def sigmoid(t, M, beta, alpha, offset=0):\n    alpha += offset\n    return M \/ (1 + np.exp(-beta * (t - alpha)))\n\ndef error(x, y, params):\n    M, beta, alpha = params\n    y_pred = sigmoid(x, M, beta, alpha)\n\n    # apply weight, latest number is more important than past.\n    weight = np.arange(len(y_pred)) ** 2\n    loss_mse = np.mean((y_pred - y) ** 2 * weight)\n    return loss_mse\n\ndef gen_random_color(min_value=0, max_value=256) -> str:\n    \"\"\"Generate random color for plotly\"\"\"\n    r, g, b = np.random.randint(min_value, max_value, 3)\n    return f'rgb({r},{g},{b})'","7a141e32":"def fit_sigmoid(exclude_days=0):\n    target_country_df_list = []\n    pred_df_list = []\n    for target_country in top30_countries:\n        print('target_country', target_country)\n        # --- Train ---\n        target_country_df = country_df.query('country == @target_country')\n\n        #train_start_date = target_country_df['date'].min()\n        train_start_date = target_country_df.query('confirmed > 1000')['date'].min()\n        train_end_date = pd.to_datetime(target_date) - pd.Timedelta(f'{exclude_days} days')\n        target_date_df = target_country_df.query('(date >= @train_start_date) & (date <= @train_end_date)')\n        if len(target_date_df) <= 7:\n            print('WARNING: the data is not enough, use 7 more days...')\n            train_start_date -= pd.Timedelta('7 days')\n            target_date_df = target_country_df.query('(date >= @train_start_date) & (date <= @train_end_date)')\n\n        confirmed = target_date_df['confirmed'].values\n        x = np.arange(len(confirmed))\n\n        lossfun = lambda params: error(x, confirmed, params)\n        res = sp.optimize.minimize(lossfun, x0=[np.max(confirmed) * 5, 0.04, 2 * len(confirmed) \/ 3.], method='nelder-mead')\n        M, beta, alpha = res.x\n        # sigmoid_models[key] = (M, beta, alpha)\n        # np.clip(sigmoid(list(range(len(data), len(data) + steps)), M, beta, alpha), 0, None).astype(int)\n\n        # --- Pred ---\n        pred_start_date = target_country_df['date'].min()\n        pred_end_date = pd.to_datetime('2022-03-31')\n        days = int((pred_end_date - pred_start_date) \/ pd.Timedelta('1 days'))\n        # print('pred start', pred_start_date, 'end', pred_end_date, 'days', days)\n\n        x = np.arange(days)\n        offset = (train_start_date - pred_start_date) \/ pd.Timedelta('1 days')\n        print('train_start_date', train_start_date, 'offset', offset, 'params', M, beta, alpha)\n        y_pred = sigmoid(x, M, beta, alpha, offset=offset)\n        # target_country_df['confirmed_pred'] = y_pred\n\n        all_dates = [pred_start_date + np.timedelta64(x, 'D') for x in range(days)]\n        pred_df = pd.DataFrame({\n            'date': all_dates,\n            'country': target_country,\n            'confirmed_pred': y_pred,\n        })\n\n        target_country_df_list.append(target_country_df)\n        pred_df_list.append(pred_df)\n    return target_country_df_list, pred_df_list","a16f3494":"def plot_sigmoid_fitting(target_country_df_list, pred_df_list, title=''):\n    n_countries = len(top30_countries)\n\n    # --- Plot ---\n    fig = go.Figure()\n\n    for i in range(n_countries):\n        target_country = top30_countries[i]\n        target_country_df = target_country_df_list[i]\n        pred_df = pred_df_list[i]\n        color = gen_random_color(min_value=20)\n        # Prediction\n        fig.add_trace(go.Scatter(\n            x=pred_df['date'], y=pred_df['confirmed_pred'],\n            name=f'{target_country}_pred',\n            line=dict(color=color, dash='dash')\n        ))\n\n        # Ground truth\n        fig.add_trace(go.Scatter(\n            x=target_country_df['date'], y=target_country_df['confirmed'],\n            mode='markers', name=f'{target_country}_actual',\n            line=dict(color=color),\n        ))\n    fig.update_layout(\n        title=title, xaxis_title='Date', yaxis_title='Confirmed cases')\n    fig.show()","8ca632e9":"target_country_df_list, pred_df_list = fit_sigmoid(exclude_days=0)","b73d9636":"plot_sigmoid_fitting(target_country_df_list, pred_df_list, title='\u4f7f\u7528\u6700\u65b0\u8cc7\u6599\u9032\u884c Sigmoid \u9810\u4f30\u6a21\u64ec')","53474bea":"target_country_df_list, pred_df_list = fit_sigmoid(exclude_days=7)","98e8c281":"plot_sigmoid_fitting(target_country_df_list, pred_df_list, title='Sigmoid \u9810\u8a08\u6a21\u64ec(\u6392\u9664\u8fd17\u65e5\u5167\u6848\u4f8b)')","afd461d4":"<a id=\"id_ww\"><\/a>\n# Worldwide trend","d5e4e304":"<a id=\"id_country\"><\/a>\n# Country-wise growth","60e332ea":"## \u76ee\u9304\n\n\n**[\u8cc7\u6599\u8f09\u5165](#id_load)**<br\/>\n**[\u4e16\u754c\u8da8\u52e2](#id_ww)**<br\/>\n**[\u4f9d\u570b\u5bb6\u6392\u5e8f](#id_country)**<br\/>\n**[\u4f9d\u7701\u4efd\u6392\u5e8f](#id_province)**<br\/>\n**[\u7f8e\u6d32](#id_province)**<br\/>\n**[\u6b50\u6d32](#id_europe)**<br\/>\n**[\u4e9e\u6d32](#id_asia)**<br\/>\n**[\u75ab\u60c5\u5fa9\u7526](#id_recover)**<br\/>\n**[\u4f55\u6642\u6536\u6582](#id_converge)**<br\/>\n**[\u9032\u968e\u7814\u7a76](#id_ref)**<br\/>","f6fc2503":"New cases trend: it looks like China is almost converged now.","69403cb8":"How's the relation between `fatalities` & `confirmed`? Let's see mortality rate in detail.<br\/>\n\nWe see that mortality rate is **increasing gradually to go over 7%** at the end of April in 2020 because Europe & US has more seriously infected by Coronavirus at that time, and mortality rate was high in these regions.<br\/>\nIt might be because when too many people get coronavirus, the country cannot provide enough medical treatment.\n\n**It seems mortality rate is start decreasing from May!!** Is it because enough medical care is started to reaching out to everyone or the number of inspection increased and many \"hidden\" confirmed cases are detected now?\n\nNow it seems mortality rate is converging **below 3%**.","b9f68d32":"Now let's see mortality rate by country","9d2663e9":"**UK's fatality number is growing and becomes top-1 on May 5th, followed by Italy, France and Spain.**","83c068b1":"When we see mortality rate on map, we see Europe (especaiily Italy) is high. Also we notice MiddleEast (Iran, Iraq) is high.\n\nWhen we see tropical area, I wonder why Phillipines and Indonesia are high while other countries (Malaysia, Thai, Vietnam, as well as Australia) are low.\n\nFor Asian region, Korea's mortality rate is lower than China or Japan, I guess this is due to the fact that number of inspection is quite many in Korea.\nPlease refer these blogs for detail:\n\n - [South Korea launches 'drive-thru' coronavirus testing facilities as demand soars](https:\/\/www.japantimes.co.jp\/news\/2020\/03\/01\/asia-pacific\/science-health-asia-pacific\/south-korea-drive-thru-coronavirus\/#.XoAmw4j7RPY)\n - [Coronavirus: Why Japan tested so few people](https:\/\/asia.nikkei.com\/Spotlight\/Coronavirus\/Coronavirus-Why-Japan-tested-so-few-people)","7702d65a":"**[April]**<br\/>\nIn Asia, China & Iran have many confirmed cases, followed by South Korea & Turkey. \n\n**[July]**<br\/>\n\nWhen I notice, coronavirus original place China has relatively few confirmed cases compared to the other seriously affected countries (it might be because China does not report all the confirmed cases).<br\/>\n**South Asia, including India, Bangladesh, Pakistan, Iran, Saudi Arabia, Turkey** was more affected now.","1e0a3a34":"The coronavirus hit Asia in early phase, how is the situation now?<br\/>\nChina & Korea is already in decreasing phase.<br\/>\n\nUnlike China or Korea, daily new confirmed cases were kept increasing on March or April, especially in Iran or Japan. But the number is started to decrease now on these country as well now.\n\nThe number increases exponentially in **India** as of July, need to be careful.","35fb2f0e":"Mortality rate map, seems mortality rate is slightly some of the countries in Africa.","ada89147":"Especially **Italy, Spain, German, France, UK** are in more serious situation.\n\nNumber of confirmed cases rapidly increasing in **Russia now (as of May 1)**, and **Russia** is in much dangerous situation as of July...","59f2ce08":"\u53ef\u4ee5\u78ba\u8a8d\u96c6\u4e2d\u7684\u7bc4\u570d\u662f\u54ea\u500b\u570b\u5bb6\uff1f\n\u5404\u570b\u78ba\u8a3a\u75c5\u4f8b\u5206\u4f48\u60c5\u6cc1\u5982\u4f55\uff1f","c63e8e68":"\u60a8\u53ef\u4ee5\u55ae\u64ca\u5de6\u5074\u7684\u6bcf\u500b\u5716\u4f8b\u4f86\u6253\u958b\/\u95dc\u9589\u7e6a\u5716\u5716\u4e2d\u7684\u6bcf\u689d\u7dda\u3002\n\n\u53ef\u4ee5\u770b\u5230\u7576\u6211\u5011\u770b\u5230\u5168\u7403\u7684\u78ba\u8a3a\u75c5\u4f8b\u6642\uff0c\u5b83\u770b\u8d77\u4f86\u5c31\u50cf\u6307\u6578\u589e\u9577\u66f2\u7dda\u3002 \u6578\u91cf\u6b63\u5728\u7a69\u6b65\u589e\u52a0\u3002\n\n<span style=\"color:red\"><b>\u78ba\u8a3a\u75c5\u4f8b\u9054\u5230 8300 \u842c\u4eba\uff0c\u5230 2020 \u5e74\u5e95\u5df2\u6709 180 \u842c\u4eba\u6b7b\u4ea1\u3002<\/b><\/span>","a1781518":"# \u5fa9\u7526","0763fc1f":"In terms of number of fatalities, Europe & US are serious situation now.<br\/>\nMany countries have more fatalities than China now, including US, Italy, Spain, France, UK, Iran Belgium, Germany, Brazil, Netherlands.\n\n**US's spread speed is the fastest, US's fatality cases become top1 on Apr 10th.**\n\nFrom June, the number increases rapidly in South America, **Brazil & Mexico**.","a68e1b1c":"**[Situation in July]**<br\/>\nThe mortality rate is high only around New York & New Jersey, this may be because first wave hit these areas and medical care was not enough in March.\n\nWhile the mortality rate is relatively low in California, Texas, Florida. These states provides proper medical care?","60231f9c":"Sudden increase at China on the days 85 may be because updated reporting in Wuhan:\n\n - [Coronavirus: China outbreak city Wuhan raises death toll by 50%](https:\/\/www.bbc.com\/news\/world-asia-china-52321529)","559d2ae0":"We can check the growth in log-scale too, in below figure.<br\/>","379e6687":"\u6211\u5011\u770b\u5230\u51a0\u72c0\u75c5\u6bd2\u73fe\u5728\u5728\u56b4\u91cd\u7684\u60c5\u6cc1\u4e0b\u8972\u64ca\u4e86\u6b50\u6d32\u548c\u7f8e\u570b\u3002 \u5b83\u662f\u5982\u4f55\u6536\u6582\u7684\uff1f\n\n\u6211\u5011\u53ef\u4ee5\u53c3\u8003\u5176\u4ed6\u78ba\u8a3a\u75c5\u4f8b\u5df2\u7d93\u5728\u6e1b\u5c11\u7684\u570b\u5bb6\u3002<br\/>\n\u5728\u9019\u88e1\uff0c\u6211\u5c07\u201cnew_case_peak_to_now_ratio\u201d\u5b9a\u7fa9\u70ba\u7576\u524d\u65b0\u75c5\u4f8b\u8207\u6bcf\u500b\u570b\u5bb6\/\u5730\u5340\u6700\u5927\u65b0\u75c5\u4f8b\u7684\u6bd4\u7387\u3002<br\/>\n\u5982\u679c\u73fe\u5728\u65b0\u589e\u78ba\u8a3a\u75c5\u4f8b\u6700\u5927\uff0c\u5247\u5176\u6bd4\u4f8b\u70ba1\u3002\n\u5c0d\u65bc\u5cf0\u503c\u5df2\u7d93\u7d50\u675f\u7684\u570b\u5bb6\uff0c\u5176\u6bd4\u7387\u9810\u8a08\u8f03\u4f4e\u3002","305c297b":"## Daily NEW confirmed cases trend\n\nHow about **DAILY new cases** trend?<br\/>\nWe find from below figure:\n - China has finished its peak at Feb 14, new confirmed cases are surpressed now.\n - Europe&US spread starts on mid of March, after China slows down.\n - After the lock down policy in Europe (Italy, Spain, Germany, France), the number of new cases are not so increasing rapidly at the end of March.\n - Current US new confirmed cases are the worst speed, recording worst speed at more than 30k people\/day at peak.\n   - <span style=\"color:red\"><b>After that we can see a weekly trend that the confirmed cases becomes small on Monday. I think this is because people don't (or cannot) get medical care on Sunday so its reporting number is low on Sunday or Monday<\/b><\/span>\n - India is the top around August, but now decreasing. U.S & Brazil's numbers are not decreasing.","ad28b217":"Let's check growth factor:\n\n> Growth factor is the factor by which a quantity multiplies itself over time. The formula used is every day's new cases \/ new cases on the previous day.\n\nWhen this number is more than 1. the number of confirmed cases will be increasing, and when it keeps below 1. the number of confirmed cases will decrease.\nSo it is important to check growth factor is kept below 1. or not.\n\nIn worldwide, growth factor is around 1. from May, it means that confirmed cases does not increase, but not decreasing so far...\n\nReference:\n - [Covid-19 Predictions, Growth Factor, and Calculus](https:\/\/www.kaggle.com\/dferhadi\/covid-19-predictions-growth-factor-and-calculus)\n - [Coronavirus Cases](https:\/\/www.worldometers.info\/coronavirus\/coronavirus-cases\/#cases-growth-factor)\n - [The one COVID-19 number to watch](https:\/\/www.abc.net.au\/news\/2020-04-10\/coronavirus-data-australia-growth-factor-covid-19\/12132478?nw=0)","b551b2f9":"<a id=\"id_converge\"><\/a>\n# \u900f\u904e sigmoid \u75ab\u60c5\u9810\u4f30\u6a21\u64ec\n\u6211\u60f3\u6bcf\u500b\u4eba\u90fd\u60f3\u77e5\u9053\u51a0\u72c0\u75c5\u6bd2\u4f55\u6642\u6536\u6582\uff0c\u4ee5 sigmoid \u65b9\u5f0f\u5be6\u4f5c\u3002<br\/>\n\n - [Sigmoid per country](https:\/\/www.kaggle.com\/group16\/sigmoid-per-country-no-leakage) by @group16\n - [COVID-19 growth rates per country](https:\/\/www.kaggle.com\/mikestubna\/covid-19-growth-rates-per-country) by @mikestubna\n \n\u770b\u8d77\u4f86 COVID-19\u4e0d\u6703\u5728\u4eca\u5e74\u6536\u6582\uff0c\u9810\u6e2c\u671f\u9650\u5ef6\u9577\u5230\u4eca\u5e74\u5e74\u5e95\u3002\n","bbdbb5a3":"**[Situation in April]**<br\/>\nWhen we see inside of the US, **only New York, and its neighbor New Jersey** dominated its spread and are in serious situation around April.<br\/>\nNew York confirmed cases is over 50k, while other states are less than about 5k confirmed cases around April.\n\n**[Situation in July]**<br\/>\nThe high speed coronavirus spread does not decrease in U.S.. Now it affected to many states, especially **California, Texas, Florida**.","a3eeac54":"When we check daily new cases in Europe, we notice:\n\n - **UK and Russia** daily growth are more than Italy now, These countries are potentially more dangerous now.\n - Italy new cases are not increasing since March 21, I guess due to lock-down policy is started working. That is not a bad news.\n - We can see **big second wave coming to Spain & France from August**.","936e9d8f":"\u6e56\u5317\u6b66\u6f22\u8fd1\u6cc1\uff1a\n\u6e56\u5317\u57282\u670814\u65e5\u5275\u4e0b\u65b0\u75c5\u4f8b\u9ad8\u5cf0\uff0c\u6700\u7d42\u57283\u670819\u65e5\u6c92\u6709\u767c\u73fe\u65b0\u75c5\u4f8b\u3002\n\u5230\u6c92\u6709\u65b0\u767c\u75c5\u4f8b\uff0c\u5f9e\u78ba\u8a3a\u75c5\u4f8b\u767c\u751f\u5f8c\u5927\u7d04\u9700\u89812\u500b\u6708\uff0c\u9054\u5230\u9ad8\u5cf0\u5f8c\u9700\u89811\u500b\u6708\u3002\n\u9019\u500b\u8a5e\u5c07\u6210\u70ba\u5176\u4ed6\u570b\u5bb6\u5fc5\u9808\u5c01\u9396\u57ce\u5e02\u591a\u9577\u6642\u9593\u7684\u53c3\u8003\u3002\n\n4\u670817\u65e5325\u7684\u7570\u5e38\u6578\u5b57\u53ef\u80fd\u662f\u7531\u65bc\u4e2d\u570b\u627f\u8a8d\u5831\u544a\u4eba\u6578\u8f03\u5c11\u7684\u6d88\u606f\uff0c\n\u56e0\u6b64\u5176\u6578\u5b57\u4e0d\u662f\u7576\u5929\u7684\u6b7b\u4ea1\u4eba\u6578\uff0c\u800c\u662f\u904e\u53bb\u672a\u5831\u544a\u7684\u6b7b\u4ea1\u4eba\u6578\u3002","26a8b829":"Now **US, India, and Brazil** has top-3 confirmed cases. We can see many countries in world-wide, meaning that coronavirus does spread all over the world.","163d7d77":"<a id=\"id_europe\"><\/a>\n# Europe","f348b86e":"How many country has precise province information?<br\/>\nIt seems it's 8 countries: Australia, Canada, China, Denmark, France, Netherlands, US, and UK.","bae00b69":"Let's see number of confirmed cases on map. Again we can see Europe, US, MiddleEast (Turkey, Iran) and Asia (China, Korea) are red.","109bde3c":"<a id=\"id_us\"><\/a>\n# \u653e\u773c\u7f8e\u6d32\n\u6b63\u5982\u6211\u5011\u6240\u770b\u5230\u7684\uff0c\u73fe\u5728\u7f8e\u570b\u7684\u50b3\u64ad\u901f\u5ea6\u6700\u5feb\uff0c\u4e5f\u5c31\u662f 3 \u6708\u5e95\u3002 \u8b93\u6211\u5011\u8a73\u7d30\u770b\u770b\u7f8e\u570b\u767c\u751f\u4e86\u4ec0\u9ebc\u3002","4b1839e6":"\u8b93\u6211\u5011\u770b\u770b\u4e00\u4e9b\u6b63\u5728\u5fa9\u7526\u7684\u570b\u5bb6\u3002\n\n## \u4e2d\u570b(China)\n\u7576\u6211\u5011\u67e5\u770b\u6bcf\u500b\u7701\u7684\u7d71\u8a08\u6578\u64da\u6642\uff0c\u6211\u5011\u53ef\u4ee5\u770b\u5230\u8d77\u6e90\u6e56\u5317\u7684\u78ba\u8a3a\u75c5\u4f8b\u6578\u91cf\u975e\u5e38\u591a\u3002\n\u8207\u6e56\u5317\u76f8\u6bd4\uff0c\u5176\u4ed6\u5dde\u5be6\u969b\u4e0a\u8a18\u9304\u7684\u78ba\u8a3a\u75c5\u4f8b\u5f88\u5c11\u3002","eb8495c3":"\u6211\u5011\u7528\u5730\u5716\u770b\u5427\u3002 \u9ec3\u8272\u570b\u5bb6\u6bd4\u4f8b\u9ad8\uff0c\u76ee\u524d\u6b63\u5728\u589e\u52a0\u570b\u5bb6\u3002 \u85cd\u8272\u548c\u7d2b\u8272\u570b\u5bb6\u7684\u6bd4\u4f8b\u5f88\u4f4e\uff0c\u5df2\u7d93\u5f9e\u9ad8\u5cf0\u671f\u6e1b\u5c11\u4e86\u570b\u5bb6\u3002","45dc536c":"The figure showing fatality growth since 10 deaths.\n - Ref: [COVID-19 Deaths Per Capita](https:\/\/covid19dashboards.com\/covid-compare-permillion\/)","11d1ff88":"Referenced: https:\/\/www.kaggle.com\/benhamner\/covid-19-forecasting-challenges-week-2-data-prep","f9debc11":"\u5f88\u96e3\u4e00\u6b21\u6027\u770b\u5b8c\u6240\u6709\u570b\u5bb6\u7684\u72c0\u6cc1\uff0c\u6240\u4ee5\u76f8\u95dc\u8cc7\u6599\u6392\u5e8f\u53d6 TOP 30\u3002","40bc61f4":"\u4f9d\u9810\u6e2c\u7d50\u679c\uff0c\u78ba\u8a3a\u75c5\u4f8b\u73fe\u5728\u6b63\u5728\u6e1b\u7de9\uff0c\u4e26\u4e14\u5e7e\u4e4e\u5728\u5927\u90e8\u5206\u5730\u5340\u8da8\u65bc\u4e00\u81f4\u3002","e22b777c":"<a id=\"id_load\"><\/a>\n# \u8f09\u5165\u8cc7\u6599\u4f86\u6e90\n\u5f9e\u7d04\u7ff0\u970d\u666e\u91d1\u65af\u5927\u5b78\u4e0b\u8f09\u6700\u65b0\u6578\u64da\uff1a<\/br>\nJohns Hopkins University github repository: [https:\/\/github.com\/CSSEGISandData\/COVID-19](https:\/\/github.com\/CSSEGISandData\/COVID-19)","511c9f45":"![](https:\/\/www.googleapis.com\/download\/storage\/v1\/b\/kaggle-user-content\/o\/inbox%2F518134%2F485aa04e87e4e45c91815101784c6d95%2Fcorona-4930541_1280.jpg?generation=1585438527494582&alt=media)\n\n\n# COVID-19: current situation in 2021 \n\n\u6838\u5fc3\u6587\u737b\uff1a<br\/>\n(1) [COVID-19: Digging a Bit Deeper](https:\/\/www.kaggle.com\/abhinand05\/covid-19-digging-a-bit-deeper) by @abhinand05 in week1<br\/>\n(2) [COVID-19: current situation on December](https:\/\/www.kaggle.com\/corochann\/covid-19-current-situation-on-december) which summarizes the situation in 2020.<br\/>\n\n#### Plotly \u5716\u5f62\u5316\u5957\u4ef6\n\n`plotly` \u8a72\u5957\u4ef6\u53ef\u4ee5\u505a\u76f8\u95dc\u5730\u5716\u4e92\u52d5\uff0c\u53ef\u4ee5\u55ae\u64ca\u5de6\u5074\u7684\u6bcf\u500b\u5716\u4f8b\u4f86\u6253\u958b\/\u95dc\u9589\u7e6a\u5716\u5716\u4e2d\u7684\u6bcf\u689d\u7dda\uff0c\u4f46\u5c31\u662f\u8f03\u82b1\u8cbb\u6642\u9593\u53ca\u8cc7\u6e90\u3002<br\/>\n\n\n### \u7248\u672c\u6b77\u7a0b\n\n\u6578\u64da\u6bcf\u5929\u66f4\u65b0\uff0c\u60a8\u53ef\u4ee5\u53c3\u8003\u6700\u65b0\u4fe1\u606f\u3002<br\/>\n\u4ee5\u4e0b\u662f\u5728\u6307\u5b9a\u65e5\u671f\u4e4b\u524d\u67e5\u770b\u7684\u7248\u672c\u6b77\u53f2\u8a18\u9304\u3002<br\/>\nLatest Version: 2021\/12\/17","4cf05404":"Mortality rate in New York seems not high, around 2% for now.","0492410b":"<a id=\"id_asia\"><\/a>\n# Asia","0ab093bc":"## Geographical animation: spready by date\n\nYou can see animation how confirmed cases spread over time, you can see trend moving to China -> Europe -> US.","f1e620e3":"**Daily growth**: All state is US got affected from middle of March, and now **growing exponentially**.\nIn New York, less than 1k people are confirmed on March 16, but more than 50k people are confirmed on March 30. **50 times explosion in 2 weeks!**\n\nNow in July, we need to be carefully watch the situation in **California, Texas, Florida**, the number is increasing exponentially in these states now.","e3a48026":"\u5831\u544a\u78ba\u8a3a\u75c5\u4f8b\u6975\u5c11\u7684\u570b\u5bb6\u6bd4\u4f8b\u70ba 0\u3002<br\/>\n\u6211\u9078\u64c7\u4e86\u78ba\u8a3a\u75c5\u4f8b\u8d85\u904e100\u500b\u7684\u570b\u5bb6\uff0c\u53ea\u770b\u6bd4\u4f8b\u4f4e\u7684\u4e3b\u8981\u570b\u5bb6\u3002\n\n\u6211\u5011\u53ef\u4ee5\u770b\u5230\uff1a\n\n  - \u4e2d\u6771\u570b\u5bb6\u3002\n  - \u5357\u975e\u570b\u5bb6\u3002\n  - \u4f86\u81ea\u4e9e\u6d32\u7684\u4e2d\u570b\u548c\u97d3\u570b\u3002","9897fd90":"Let's check these major country's growth by date.\n\nCoronavirus hit **China** at first but its trend is slowing down in March which is good news.<br\/>\n2nd wave comes to **Europe (Italy, Spain, Germany, France, UK)** at March.<br\/>\n3rd wave comes to **US, whose growth rate is much much faster than China, or even Europe**. Its main spread starts from middle of March and its speed is faster than Italy. Now US seems to be in the most serious situation in terms of both total number and spread speed.<br\/>\n\nFrom June, **Branzil & Russia** getting increased.<br\/>\nFrom July, **Peru, Chile in South America & India in South Asia** getting increased.\n\nCoronavirus spreads really the \"All\" over the world.\n\nYou can click country legend to show\/hide each country's line plot.\nIf you cannot see the line (due to plotly bug?) in the plot, you can also try clicking country legend. Line will appear.","9091ef36":"\u9810\u6e2c\u51fa\u4f86\u7684\u66f2\u7dda\u76f8\u8f03\u65bc\u4e16\u754c\u7684\u771f\u5be6\u60c5\u5883\u5176\u5be6\u662f\u4f4e\u4f30(underestimate)\u7684\uff0c\u4e8b\u60c5\u6bd4\u9810\u6e2c\u9084\u8981\u4f86\u7684\u7cdf\u2026\n","9e02e5b3":"Italy was the most serious situation, whose mortality rate is over 10% on 2020\/3\/28.<br\/>\nAs of June, we can see trend that mortality rate is high in Europe region.<br\/>\nWe can also find countries from all over the world when we see top mortality rate countries.<br\/>\nIran\/Iraq from Middle East, Phillipines & Indonesia from tropical areas.<br\/>\nSpain, Netherlands, France, and UK form Europe etc. It shows this coronavirus is really world wide pandemic.\n\nMortality rate decreased and settled to below 10% in most of the countries now in 2021.","ed631f92":"<a id=\"id_province\"><\/a>\n# Going into province","c48d1fe0":"You can see animation how confirmed cases spread over time, you can see trend moving to China -> Europe -> US. But Europe is worse than US for number of fatalities now.","475d73f1":"How about the countries whose mortality rate is low?\nMany Asian, Middle-East area is on the figure.\n\nBy investigating the difference between above & below countries, we might be able to figure out what is the cause which leads death.<br\/>\nBe careful that there may be a case that these country's mortality rate is low due to these country does not report\/measure fatality cases properly.","47eee238":"When we look into the Europe, its Northern & Eastern areas are relatively better situation compared to Eastern & Southern areas.","738c3baf":"<a id=\"id_ref\"><\/a>\n# \u9032\u968e\u53c3\u8003\n\u5e0c\u671b\u65e9\u65e5\u56de\u5fa9\u4e16\u754c\u548c\u5e73\uff1a)\nI hope the world get back peace & usual daily life as soon as possible.\n\n\u5176\u4ed6\u5927\u795e\u7684\u53c3\u8003\u5c08\u6848\uff1a\n - [COVID-19: Effect of temperature\/humidity](https:\/\/www.kaggle.com\/corochann\/covid-19-effect-of-temperature-humidity)\n - [COVID-19: Spread situation by prefecture in Japan](https:\/\/www.kaggle.com\/corochann\/covid-19-spread-situation-by-prefecture-in-japan)"}}