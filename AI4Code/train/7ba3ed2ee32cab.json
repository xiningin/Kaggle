{"cell_type":{"71b327da":"code","7b17814a":"code","f1ac889c":"code","8a2810be":"code","8e20f342":"code","628373e4":"code","36d8879f":"code","d48197f3":"code","8b65036b":"code","63f42106":"code","e26a3dce":"code","0210bc27":"code","ee1fbf88":"code","3cf07b54":"code","d97c1cfb":"code","ad47960e":"code","777a6106":"code","827b52be":"code","67051eff":"code","fbcf3172":"code","a8184376":"code","3984594c":"code","4da9f2e1":"code","12916a19":"code","92dc54ab":"code","08adbe06":"code","e926b24a":"code","df701a3c":"code","0e745641":"code","eb52703a":"code","187ffe12":"code","0c616229":"code","f7342271":"code","d45bb498":"code","6533e1a1":"code","847124ce":"code","74c608bf":"code","9e27ffe9":"code","003b5ab4":"code","aba4ea47":"code","89c69bae":"code","c78eae86":"code","aef8571f":"code","db414461":"code","1016e7e0":"code","e13abac8":"code","98c3e973":"code","6c229d53":"code","4fefd874":"code","02137778":"code","bbbd03b5":"code","25648921":"code","71daf209":"code","a3cdda60":"code","7f2c3ad4":"code","c61e1d7a":"code","41a9e882":"markdown","f4328de9":"markdown","77b3d228":"markdown","5d3989e7":"markdown","e778a9ae":"markdown","281387fb":"markdown","a6bd46c5":"markdown","38919fc1":"markdown","22741871":"markdown","0f8dbf60":"markdown","3884e036":"markdown","dbe2369d":"markdown","b855f4f9":"markdown","195ab304":"markdown","e49bd946":"markdown","0bb8e72a":"markdown","a27155ef":"markdown","9c57b73e":"markdown","d78ad1dd":"markdown","3409182d":"markdown","f4ae7e3a":"markdown","0421ffe1":"markdown","1cb28f90":"markdown","18f2b261":"markdown","02e852a5":"markdown","b22d96e0":"markdown","90c3eddc":"markdown","c5e7d74d":"markdown","33eb1226":"markdown","107cca91":"markdown","e31d10f9":"markdown","5ad8ea6e":"markdown"},"source":{"71b327da":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7b17814a":"## Import libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n## Allow plots show in jupyter notebook\n%matplotlib inline\n\n# Hide warnings from displaying in jupyter notebook\nimport warnings\nwarnings.filterwarnings('ignore')","f1ac889c":"os.listdir('..\/input\/hotel-booking-demand')","8a2810be":"## Read the csv file and read the file into a DataFrame: df\ndf = pd.read_csv('..\/input\/hotel-booking-demand\/hotel_bookings.csv')","8e20f342":"## Show the head of this data frame\ndf.head()","628373e4":"## Get the information of each column\ndf.info()","36d8879f":"## Find out which columns contain null value\ndf.isnull().sum()","d48197f3":"## Since only 4 rows miss data for children, we can just fill them with 0\ndf['children'].fillna(0, inplace=True)","8b65036b":"## Statstically overview of each column\ndf.describe()","63f42106":"## correlation overview between columns\ndf.corr()","e26a3dce":"#count the number of bookings from different types of hotels\ndf.hotel.value_counts().to_frame()","0210bc27":"## Use pivot table to find number of total booking and canceled booking by year and hotel type\npd.pivot_table(df,index=['hotel', 'arrival_date_year'], values='is_canceled', aggfunc=['count', 'sum'])","ee1fbf88":"## Reorder month for better Virtualization\nMonth = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']","3cf07b54":"## Use catplot to show bookings in a timeline\nc = sns.catplot(x='arrival_date_month', order=Month, col = 'arrival_date_year', kind='count', data=df)\nc.set_xticklabels(rotation=60)","d97c1cfb":"## Import libraries needed for choropleth maps\nimport plotly.graph_objs as go \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot","ad47960e":"## Count how many visitors from each country\ncountry_data = df['country'].value_counts()\ncountry_data","777a6106":"## we are going to use dict to cast the list into a dictionary\ndata = dict(\n        type = 'choropleth',\n        locations = country_data.index,\n        z = country_data\n      )","827b52be":"## Create a layout object\nlayout = dict(\n    title = 'Where are the Visitors Coming from',\n    geo = dict(\n        showframe = False,\n        projection = {'type':'mercator'}\n    )\n)","67051eff":"## Display of the World Visitors Choromap\nchoromap = go.Figure(data = [data],layout = layout)\niplot(choromap)","fbcf3172":"# Display the number of adults in both botels.\nplt.figure(figsize=(15, 8))\nsns.countplot(x='adults',hue='hotel', data=df, palette='pastel')\nplt.title(\"Number of adults in both hotels\",fontweight=\"bold\", size=20)","a8184376":"# Create a new dataframe to display hotel, adults, children, and babies only.\ndf2 = df[['hotel', 'adults', 'children', 'babies']]\ndf2['kids'] = df2['children'] + df2['babies']\ndf2","3984594c":"# Display the number of kids in both hotels.\nplt.figure(figsize=(15, 8))\nsns.countplot(x='kids',hue='hotel', data=df2, palette='coolwarm')\nplt.title(\"Number of kids in both hotels\",fontweight=\"bold\", size=20)\n\nplt.show()","4da9f2e1":"# Create a new dataframe to display hotel, adults, children, babies, stays in weekend and week days only.\ndf6=df[['hotel', 'adults', 'children', 'babies', 'stays_in_weekend_nights','stays_in_week_nights']]\ndf6['total_nights'] = df6['stays_in_weekend_nights'] + df6['stays_in_week_nights']\ndf6['total_people'] = df6['adults'] + df6['children'] + df6['babies']","12916a19":"# Display the ratio of group of parties among total people. \ndf6['total_people'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True)","92dc54ab":"# Display the number of nights people stay among total nights. \ndf6['total_nights'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True)","08adbe06":"# Display the relationship between total people vs total nights. \nsns.barplot(x='total_people',y='total_nights',data= df6)","e926b24a":"# calculated the canceled percentage\ntotal_canceled = df.is_canceled.value_counts()[1]\nprint(f' Booking is canceled: {total_canceled}')\ntotal_not_canceled = df.is_canceled.value_counts()[0]\nprint(f' Booking is not canceled: {total_not_canceled}')\ncancelation_rate = total_canceled \/ (total_canceled + total_not_canceled) *100\nprint(f' Cancelation rate is {cancelation_rate:.2f}%')","df701a3c":"## Retrieve customers that canceled their reservation\n## Save it to new dataframe canceled_table\ncanceled_table = df[df.is_canceled == 1]\n## Count canceled bookings for both hotels\ncanceled_table.hotel.value_counts()","0e745641":"# divide two df to get the cancellation percentage for both hotel types\n(canceled_table.hotel.value_counts()\/df.hotel.value_counts()).round(decimals = 4).mul(100).astype(str) + '%'","eb52703a":"# Cancellation by year\nplt.figure(figsize=(30, 8))\nplt.subplot(1, 2, 1)\nsns.barplot(data = df, x= 'arrival_date_year', y = 'is_canceled', hue = 'hotel')\nplt.title('cancellation percentage by year',fontweight=\"bold\", size=25)\nplt.xlabel('year',size=20)\nplt.ylabel('cancellation percentage',size=20)\n# Cancellation by month\nplt.subplot(1, 2, 2)\nMonth = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\nsns.barplot(data = df, x= 'arrival_date_month', y = 'is_canceled', order = Month, hue = 'hotel')\nplt.title('cancellation percentage by month',fontweight=\"bold\", size=25)\nplt.xlabel('month',size=20)\nplt.ylabel('cancellation percentage',size=20)","187ffe12":"## See total number of bookings for each lead_time \nlead_time_count = df.groupby('lead_time')['is_canceled'].count()\nlead_time_count","0c616229":"#distribution of lead time of the bookings\nplt.figure(figsize = (10,5))\nsns.distplot(df.lead_time.values, bins = 10)\nplt.title('Distrubution of lead time', fontsize = 20)","f7342271":"#total number of bookings canceled for each lead time\nlead_time_canceled_count = canceled_table.groupby('lead_time')['hotel'].count()\nlead_time_canceled_count","d45bb498":"# calculate cancellation_rate by divide two series\ncancellation_rate = lead_time_canceled_count \/ lead_time_count \ncancellation_rate.dropna(inplace = True)\ncancellation_rate","6533e1a1":"#save series to a data frame\ncancellation_rate.to_frame()","847124ce":"# regression plot of lead time and cancellation rate\nplt.figure(figsize = (10,8))\nsns.regplot(cancellation_rate.index, cancellation_rate.values)\nplt.title('Lead Time vs Cancellation Rate', fontsize = 20)\nplt.ylabel('cancellation_rate')","74c608bf":"#  Pearson's Correlation test of lead time and cancellation rate\nfrom scipy.stats import pearsonr\nstat, p = pearsonr(cancellation_rate.index, cancellation_rate.values)\nprint('stat=%.3f, p=%.3f' % (stat, p))\nif p > 0.05:\n    print('Probably independent')\nelse:\n    print('Probably dependent')","9e27ffe9":"#First of all, we could visualize Average Daily Rate (adr) for the entire data\nsns.boxplot(df['adr'])","003b5ab4":"## Get rid of the outlier\ndf = df[df['adr'] < 5000]\nsns.boxplot(df['adr'])","aba4ea47":"## Shows the mean of daily rate by hotel type\npd.pivot_table(df,index=['hotel'], values='adr')","89c69bae":"## Shows the distribution of this data by year and hotel type\nsns.boxplot(x=df['arrival_date_year'], y=df['adr'], hue='hotel', data=df)","c78eae86":"## Shows the distribution of this data by month\n## Month was the array reorder the month from Janunary to December\nplt.figure(figsize=(14, 8))\nsns.barplot(data=df, x='arrival_date_month', y='adr', order=Month, hue='hotel')","aef8571f":"## Find the average price booked by different resources\nplt.figure(figsize=(12, 6))\nsns.barplot(x='market_segment', y='adr', data=df)","db414461":"## Change the size of the plot\nplt.figure(figsize=(12, 8))\n\n## Reorder room type in alphabetical order\nletter_order = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'P']\n\n## Distribute the result\nsns.boxplot(x='reserved_room_type', y='adr', hue='hotel', order=letter_order, data=df)\nplt.title('Room Type vs Average Daily Rate')","1016e7e0":"#create a function that takes adr as argument and return x and y.\ndef ecdf(adr):\n    # Number of data points : n\n    n = len(adr)\n    #  x value  for the ECDF: x\n    x = np.sort(adr)\n    # y value for the ECDF: y\n    y = np.arange(1, n+1) \/ n\n    return x, y","e13abac8":"# apply defination ECDF, pass different hotel type to see the booking price\n# compute x, y for City Hotel and Resort hotel by using ECDF funtion\nplt.figure(figsize=(12, 8))\nx_city, y_city = ecdf(df[df['hotel'] =='City Hotel']['adr'])\nx_resort, y_resort = ecdf(df[df['hotel'] =='Resort Hotel']['adr'])\n# Plot all ECDFs on the same plot\nadr_percentage = plt.plot(x_city, y_city,marker = '.', linestyle = 'none')\nadr_percentage = plt.plot(x_resort, y_resort,marker = '.', linestyle = 'none')\n# Label the plot\nplt.legend(('City Hotel','Resort Hotel'), loc = 'lower right')\nadr_percentage = plt.xlabel('Booking price')\nadr_percentage = plt.ylabel('percentage')\n# Display the plot\nplt.show()","98c3e973":"## Select a sample\ndf2017 = df[df['arrival_date_year'] == 2017]\ncity = df2017[df2017['hotel'] == 'City Hotel']","6c229d53":"## Do the value count for different room types\ncity['reserved_room_type'].value_counts()","4fefd874":"## Extract the room type and price data\ndf_anova=city[['reserved_room_type', 'adr']]\n\n## Group the data by different rooms\ngrouped_anova=df_anova.groupby([\"reserved_room_type\"])","02137778":"## Import needed library\nfrom scipy import stats","bbbd03b5":"#The ANOVA test can be performed in Python using the f_oneway method #as the built-in function of the scipy package. \n#We pass in the price data of the two room types that we want to compare, and it calculates the ANOVA results.\nanova_result_1=stats.f_oneway(\n    grouped_anova.get_group(\"A\")[\"adr\"],\n    grouped_anova.get_group(\"D\")[\"adr\"])\n\nprint( \"ANOVA results: F=\",anova_result_1)","25648921":"#The ANOVA test can be performed in Python using the f_oneway method #as the built-in function of the scipy package. \n#We pass in the price data of the two room types that we want to compare, and it calculates the ANOVA results.\nanova_result_1=stats.f_oneway(\n    grouped_anova.get_group(\"A\")[\"adr\"],\n    grouped_anova.get_group(\"B\")[\"adr\"])\n\nprint( \"ANOVA results: F=\",anova_result_1)","71daf209":"test = df2017[df2017['arrival_date_month'] == 'June']\nsns.lmplot(data=test, x='lead_time', hue='hotel', y='adr', scatter_kws={'alpha':0.15, 's': 10})","a3cdda60":"## Import needed library\nfrom scipy import stats","7f2c3ad4":"## Select average daily rate of city hotel since it's less effected by summar season\ntest_city = df2017[df2017['hotel'] == 'City Hotel']\ntest_city_direct = test_city[test_city['market_segment'] == 'Direct']\ntest_city_direct","c61e1d7a":"pearson_coef, p_value = stats.pearsonr(test_city_direct['lead_time'], test_city_direct['adr'])\nprint(\"The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)","41a9e882":"<h5>Apply ECDF<\/h5>","f4328de9":"This data is from July 2015 to August 2017","77b3d228":"Since the datatype for column \"is_canceled\" is int64: 1 represents canceled booking and 0 for not canceled. <br>\nWe could use count function to get the total booking count, and adding one's in this column to get the sum of canceled bookings.","5d3989e7":"<h2 style=\"color:LightSlateGray\">Cleaning Data<\/h2>","e778a9ae":"<h5>Check price based on room types<\/h5>","281387fb":"In general, city hotel is more expensive than resort hotel","a6bd46c5":"I don't want to compare the price for room type C and P since the sample population is too small","38919fc1":"The prices between room type A and room type B are not significantly different, as the F-test score is less than 1 and p-value is larger than 0.05","22741871":"<h2 style=\"color:LightSlateGray\">General Analysis on Booking Count<\/h2>","0f8dbf60":"<h2 style=\"color:LightSlateGray\">What are some facts about the daily rates?<\/h2>","3884e036":"The price of resort hotel is more fluctuate than that of city hotel.<br>\nThe average daily rate for resort hotel is more expensive in summer season (July & August are peak months). <br>\nCity hotel's daily price is always between 75 and 125.","dbe2369d":"Based on the illustration of the World Visitors Choromap, while it demonstrates after analysis the number of bookings and their origin country. More visitors are from western europe, namely France,UK and Portugal being the highest.","b855f4f9":"### Conclusion\nThe x axis shows days of lead time; y aixs shows cancellation rate. We used regression plot of lead time and cancellation rate to reveal the relationship. Regression plot shows the effect of adding another variable to a model that already has one or more independent variables. It also referred to as added variable plots, adjusted variable plots, and individual coefficient plots. Overall, it suggests that visitors who book hotels in advance are more likely to cancel whereas the late minute bookings have a lower cancellation rate.","195ab304":"Since the price of resort hotel was seasonal, we test the price for city hotels based on room type.<br>\nThis boxplot showed the prices for room types A, B, and C are similar, so they shoube be standard room types.<br>\nAlphabetically, price gradually increased from room type D to G.","e49bd946":"### Conclusion\nAdults for party of 2 with no kids are the most frequent party size for both hotel bookings; especially, City hotel has about double of the bookings than Resort hotel. In addition, we counted the total number of people(including adults, children, and babies), and found out the party size of 2 has 68.7%, the highest percentage over the total number. Also, we counted the total stay in nights(including stay in week days and weekends), and found out that people stay in 2 nights over the total stay in nights is 23.2%, slightly exceed others; people stay in 3 nights has 22.7%, which is the second common stay in nights. ratios dropped dramatically after 4 stay in nights. We couldn't find much after comparing total people and total stay in nights; however, from the image shown above, we could roughly say that people who come with party of 12 people stay in 8 nights, has the maximum stay in nights over the total. Moreover, party sizes from 6 to 26 people, usually stay in more nights than other party sizes.  ","0bb8e72a":"The prices between room type <b>A and D<\/b> are significantly different since the F-score is very large. F equals 5110, and the p-value is small.","a27155ef":"This data only has two types of hotels, and there is more bookings in city hotel.","9c57b73e":"<h5>Which factors affect daily price?<\/h5>","d78ad1dd":"<h2 style=\"color:LightSlateGray\">Analysis of Lead Time and Cancellation Rate<\/h2>","3409182d":"<h2 style=\"color:LightSlateGray\">Visitors Count<\/h2>","f4ae7e3a":"<h2 style=\"color:LightSlateGray\">DataSet Glossary<\/h2>\n<p><b>hotel<\/b>: H1 = Resort Hotel or H2 = City Hotel\n\n<b>is_canceled<\/b>: Booking was canceled (1) or not (0)\n\n<b>lead_time<\/b>: Number of days that elapsed between the entering date of the booking into the PMS and the arrival date\n\n<b>arrival_date_year<\/b>: Year of arrival date\n\n<b>arrival_date_month<\/b>: Month of arrival date\n\n<b>arrival_date_week_number<\/b>: Week number of year for arrival date\n\n<b>arrival_date_day_of_month<\/b>: Day of arrival date\n\n<b>stays_in_weekend_nights<\/b>: Number of weekend nights (Saturday or Sunday) the guest stayed or booked to stay at the hotel\n\n<b>stays_in_week_nights<\/b>: Number of week nights (Monday to Friday) the guest stayed or booked to stay at the hotel\n\n<b>adults<\/b>: Number of adults\n\n<b>children<\/b>: Number of children\n\n<b>babies<\/b>: Number of babies\n\n<b>meal<\/b>: \n\u2022\tType of meal booked. Categories are presented in standard hospitality meal packages: Undefined\/SC \u2013 no meal package. \n\u2022\tBB \u2013 Bed and Breakfast. \n\u2022\tHB \u2013 Half board (breakfast and one other meal \u2013 usually dinner); \n\u2022\tFB \u2013 Full board (breakfast, lunch and dinner)\n\n<b>country<\/b>: Country of origin. Categories are represented in the ISO 3155\u20133:2013 format\n\n<b>market_segment<\/b>: Market segment designation. In categories, the term \u201cTA\u201d means \u201cTravel Agents\u201d and \u201cTO\u201d means \u201cTour Operators\u201d\n\n<b>distribution_channel<\/b>: Booking distribution channel. The term \u201cTA\u201d means \u201cTravel Agents\u201d and \u201cTO\u201d means \u201cTour Operators\u201d\n\n<b>is_repeated_guest<\/b>: Value indicating if the booking name was from a repeated guest (1) or not (0)\n\n<b>previous_cancellations<\/b>: Number of previous bookings that were cancelled by the customer prior to the current booking\n\n<b>previous_bookings_not_canceled<\/b>: Number of previous bookings not cancelled by the customer prior to the current booking\n\n<b>reserved_room_type<\/b>: Code of room type reserved. Code is presented instead of designation for anonymity reasons.\n\n<b>assigned_room_type<\/b>: Code for the type of room assigned to the booking. Sometimes the assigned room type differs from the reserved room type due to hotel operation reasons (e.g. overbooking) or by customer request. Code is presented instead of designation for anonymity reasons.\n\n<b>booking_changes<\/b>: Number of changes\/amendments made to the booking from the moment the booking was entered on the PMS until the moment of check-in or cancellation \n\n<b>deposit_type<\/b>: \nIndication on if the customer made a deposit to guarantee the booking. This variable can assume three categories: \n\u2022\tNo Deposit \u2013 no deposit was made; \n\u2022\tNon Refund \u2013 a deposit was made in the value of the total stay cost; \n\u2022\tRefundable \u2013 a deposit was made with a value under the total cost of stay.\n\n<b>agent<\/b>: ID of the travel agency that made the booking\n\n<b>company<\/b>: ID of the company\/entity that made the booking or responsible for paying the booking. ID is presented instead of designation for anonymity reasons\n\n<b>days_in_waiting_list<\/b>: Number of days the booking was in the waiting list before it was confirmed to the customer\n\n<b>customer_type<\/b>: Type of booking, assuming one of four categories: \n\u2022\tContract - when the booking has an allotment or other type of contract associated to it; \n\u2022\tGroup \u2013 when the booking is associated to a group; \n\u2022\tTransient \u2013 when the booking is not part of a group or contract, and is not associated to other transient booking; \n\u2022\tTransient-party \u2013 when the booking is transient, but is associated to at least other transient booking \n\n<b>adr<\/b>: Average Daily Rate as defined by dividing the sum of all lodging transactions by the total number of staying nights\n\n<b>required_car_parking_spaces<\/b>: Number of car parking spaces required by the customer\n\n<b>total_of_special_requests<\/b>: Number of special requests made by the customer (e.g. twin bed or high floor)\n\n<b>reservation_status<\/b>: Reservation last status, assuming one of three categories: \n\u2022\tCanceled \u2013 booking was canceled by the customer; \n\u2022\tCheck-Out \u2013 customer has checked in but already departed; \n\u2022\tNo-Show \u2013 customer did not check-in and did inform the hotel of the reason why\n\n<b>reservation_status_date<\/b>: Date at which the last status was set. This variable can be used in conjunction with the Reservation Status to understand when was the booking canceled or when did the customer checked-out of the hotel\n    <\/p>","0421ffe1":"<h3>Average Daily Rate Conclusion<\/h3>\n<p>The average daily rate for both hotels is 101.8, where city hotel average 105.23 and resort hotel 94.95. <br>\nThe price for <b>resort hotel<\/b> varies by season since over summar season, it's more expensive than other months.<br>\nThe price for <b>city hotel<\/b> varies by room type.<br>\nAlso, the resource of bookings would affect the daily rate, it's more expensive to book directly or by online tutor agent.<br>\n<b>No significant trend daily rate<\/b> by lead time.\n<\/p>","1cb28f90":"<h2 style=\"color:LightSlateGray\">Analyze data about cancellation<\/h2>","18f2b261":"<h5>City Hotel: Lead Time vs Price (use 2017 data)<\/h5>","02e852a5":"<b>There are four columns contain null value: children, country, agent, and company<\/b>","b22d96e0":"<h2 style=\"color:LightSlateGray\">Where are visitors from?<\/h2>","90c3eddc":"<p>Since the p-value is $>$ 0.1 and the linear relationship isn't extremely strong, the correlation between lead time and price is not significant.<\/p>","c5e7d74d":"There was an error (over 5000) needs to be removed. Let's remove that and try again.","33eb1226":"<h5>Let's compare different room types (use 2017 city hotel data)<\/h5>","107cca91":"<h5>Cancellation by year and month<\/h5>","e31d10f9":"If visitors book hotels directly or by Online Tutor Agency, the price tends to be higher than other resources.","5ad8ea6e":"70 % of the city hotel booking price is under 100 while 50 % of the resort hotel booking price is under 100."}}