{"cell_type":{"5c018702":"code","7f2de22f":"code","39218248":"code","095d768f":"code","2fc1c9d0":"code","6a2b6913":"code","855dd61e":"code","808bba15":"code","5facdc11":"code","25072f33":"code","0fb4f6a4":"code","09eb9869":"code","b2b19066":"code","1c0c495b":"code","369104c4":"code","4f25bb1b":"code","146579f7":"code","6578649a":"code","3beb3afe":"code","c05d49b6":"code","2e5bd6a7":"code","eff7b439":"code","d85c787c":"code","983cb683":"code","f8fe3c3b":"code","e2e57b81":"code","01312c8a":"code","78829356":"code","415c28a6":"code","d074cfad":"code","c3e53343":"code","940956b6":"code","7fc1fc56":"code","e9cd9616":"markdown","8b318c47":"markdown","26583aea":"markdown","944e6255":"markdown","73e90122":"markdown","9ca97182":"markdown","e3ebf7f9":"markdown","1fc690cc":"markdown"},"source":{"5c018702":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7f2de22f":"import plotly_express as plot\nimport seaborn as sn\nimport matplotlib.pyplot as plt","39218248":"sn.set_style(style=\"whitegrid\")","095d768f":"df=pd.read_csv('\/kaggle\/input\/social-network\/Social_Network_Ads.csv')","2fc1c9d0":"df.head()","6a2b6913":"df.Purchased.value_counts().plot.bar(color=\"red\")\n\nplt.show()","855dd61e":"plot.histogram(df.EstimatedSalary,color=df.Gender)","808bba15":"plt.subplots(1,1,figsize=(12,8))\nsn.regplot(df.EstimatedSalary,df.Age,color=\"c\")\n\nplt.show()","5facdc11":"plt.subplots(1,1,figsize=(12,10))\nsn.boxplot(df.Purchased,df.EstimatedSalary,hue=df.Gender)","25072f33":"lower=df.EstimatedSalary.quantile(0.001)\nupper=df.EstimatedSalary.quantile(0.90)","0fb4f6a4":"df_not_out=df[(df.EstimatedSalary> lower) & (df.EstimatedSalary < upper)]","09eb9869":"plt.subplots(1,1,figsize=(12,10))\nsn.boxplot(df_not_out.Purchased,df_not_out.EstimatedSalary,hue=df_not_out.Gender)","b2b19066":"\nplt.figure(figsize=(10,12))\nplt.scatter(df.Age,df.EstimatedSalary,c=df.Purchased)\n","1c0c495b":"df_not_out=pd.get_dummies(df_not_out)","369104c4":"plt.subplots(1,1,figsize=(12,10))\nsn.heatmap(df_not_out.corr(),annot=True)\n\nplt.show()","4f25bb1b":"data=df_not_out[[\"Age\",\"EstimatedSalary\",\"Gender_Female\",\"Gender_Male\"]]\ntarget=df_not_out.Purchased","146579f7":"from imblearn.over_sampling import SMOTE","6578649a":"data_balanced,target_balanced=SMOTE().fit_resample(data,target)","3beb3afe":"target_balanced.value_counts().plot.bar(color=\"c\")\nplt.title(\"Class balanced\")\nplt.show()","c05d49b6":"from sklearn.model_selection import train_test_split,cross_val_score\n\nfrom sklearn.preprocessing import StandardScaler","2e5bd6a7":"scala=StandardScaler()\n\ndata_scala=scala.fit_transform(data_balanced)","eff7b439":"X_train,X_test,Y_train,Y_test=train_test_split(data_scala,\n                                               target_balanced,\n                                               test_size=0.2,\n                                               random_state=0)","d85c787c":"from sklearn.linear_model import LogisticRegression","983cb683":"clf=LogisticRegression(solver=\"liblinear\",penalty=\"l1\",random_state=0)","f8fe3c3b":"clf.fit(X_train,Y_train)","e2e57b81":"clf.score(X_test,Y_test)","01312c8a":"clf.score(X_train,Y_train)","78829356":"cross_val_score(clf,X_test,Y_test,cv=5).mean()","415c28a6":"from sklearn import metrics","d074cfad":"print(metrics.classification_report(Y_test,clf.predict(X_test)))","c3e53343":"cm=metrics.confusion_matrix(Y_test,clf.predict(X_test))\n\nplt.subplots(1,1,figsize=(12,8))\nsn.heatmap(cm,annot=True,cmap=\"cool\")\nplt.show()","940956b6":"def main():\n    \n    plt.subplots(1,1,figsize=(12,8))\n    plt.title(\"True values\")\n    plt.scatter(X_test[:,0],X_test[:,1],c=Y_test)\n    \n    plt.show()\n    \n    plt.subplots(1,1,figsize=(12,8))\n    plt.title(\"Predict values\")\n    plt.scatter(X_test[:,0],X_test[:,1],c=clf.predict(X_test))\n    \n    plt.show()","7fc1fc56":"if __name__ ==\"__main__\":\n    \n    main()","e9cd9616":"\nthe model is linearly separable for which to use logistic regression.","8b318c47":"# **EDA**","26583aea":"We balance the classes","944e6255":"# **Metrics**","73e90122":"# **Preprocesing**","9ca97182":"\nWe can see that the classes are unbalanced, so we have to balance them so as not to affect our performance, since if we do not do it, the algorithm will give preference to the class that is in greater proportion.","e3ebf7f9":"# **Logsitic Regression.**","1fc690cc":"# **Feature enginiering**"}}