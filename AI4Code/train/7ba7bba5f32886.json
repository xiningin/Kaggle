{"cell_type":{"9e596795":"code","b72e1763":"code","dc231e46":"code","802cdad5":"code","3f3598c4":"code","af08b29e":"code","1017f00a":"code","9ee70c73":"code","bcefa11c":"code","2dc5ea9f":"code","c7ad24b7":"code","70f2dccf":"code","3142f984":"code","654cbe0f":"code","ad36007c":"code","8b4d492f":"code","b9ef0a26":"code","ac2fe4e1":"markdown","3b104471":"markdown","d269825a":"markdown","0a473a51":"markdown"},"source":{"9e596795":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n","b72e1763":"Data=pd.read_csv('..\/input\/consolidated.csv',header=None,names=[\"Company_share_code\",\"Date\",\"Opening_price\",\"Highest_price\",\"Lowest_price\",\"Close\",\"Volume_traded\",\"Openint\"])\n\n","dc231e46":"Data['Company_share_code']=Data['Company_share_code'].str.replace(\".us.txt\",'')","802cdad5":"Data=Data[Data['Company_share_code'].isin (['aapl','intc','msft','csco','bac'])]","3f3598c4":"Data=Data[Data['Company_share_code'].isin (['aapl','intc','msft','csco','bac'])]\nEnc=pd.get_dummies(Data['Company_share_code'])\nData=Data.drop(['Company_share_code'],axis=1)\nData=Data.join(Enc)","af08b29e":"Data.head(5)","1017f00a":"Data['Stock_Price']=(Data['Opening_price']+Data['Highest_price']+Data['Lowest_price']+Data['Close'])\/4","9ee70c73":"#Datepart function from fast ai to get features\ndef add_datepart(df, fldname, drop=True, time=False):\n    \"Helper function that adds columns relevant to a date.\"\n    fld = df[fldname]\n    fld_dtype = fld.dtype\n    if isinstance(fld_dtype, pd.core.dtypes.dtypes.DatetimeTZDtype):\n        fld_dtype = np.datetime64\n\n    if not np.issubdtype(fld_dtype, np.datetime64):\n        df[fldname] = fld = pd.to_datetime(fld, infer_datetime_format=True)\n    targ_pre = re.sub('[Dd]ate$', '', fldname)\n    attr = ['Year', 'Month', 'Week', 'Day', 'Dayofweek', 'Dayofyear',\n            'Is_month_end', 'Is_month_start', 'Is_quarter_end', 'Is_quarter_start', 'Is_year_end', 'Is_year_start']\n    if time: attr = attr + ['Hour', 'Minute', 'Second']\n    for n in attr: df[targ_pre + n] = getattr(fld.dt, n.lower())\n    df[targ_pre + 'Elapsed'] = fld.astype(np.int64) \/\/ 10 ** 9\n    if drop: df.drop(fldname, axis=1, inplace=True)","bcefa11c":"import re\nadd_datepart(Data,\"Date\",drop=False)","2dc5ea9f":"\n#Dropping columns\n# Data=Data.drop(['Highest_price','Lowest_price','Close','Opening_price','Volume_traded'],axis=1)\n# Data=Data.drop(['Openint'],axis=1)\n#Converting True\/False to 1...0 and dropping Elapsed and Date\nData=Data.drop(['Date','Elapsed','Highest_price','Lowest_price','Close','Opening_price','Volume_traded','Openint'],axis=1)\nData=Data*1","c7ad24b7":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression,LogisticRegression,perceptron\n\nLR=LinearRegression()\nLogR=LogisticRegression()\niv=Data.drop(['Stock_Price'],axis=1)\ndv=Data[['Stock_Price']]\niv_train,iv_test,dv_train,dv_test=train_test_split(iv,dv,test_size=0.25,random_state=0)","70f2dccf":"#Predicting dataset\nLR.fit(iv_train,dv_train)\ny_pred_LR=LR.predict(iv_test)\nprint('The accuracy of LR is',LR.score(iv_test,dv_test)*100)","3142f984":"#Predicting with Decision Tree\nfrom sklearn.metrics import r2_score\nfrom sklearn.tree import DecisionTreeRegressor\nDT=DecisionTreeRegressor(max_depth=3)\nDT.fit(iv_train,dv_train)\ny_pred_DT=DT.predict(iv_test)","654cbe0f":"print('The accuracy of DT is',r2_score(y_pred_DT,dv_test)*100)","ad36007c":"#Trend Analysis\n\n# %matplotlib inline\n# import seaborn as sns\n# # Data['Date']=pd.to_datetime(Data['Date'],format='%Y-%m-%d')\n# # Data.index=Data['Date']\n# plt.figure(figsize=(12,10))\n# sns.lineplot(Data['Date'],Data['Close'],hue='Company_share_code',data=Data)\n","8b4d492f":"Data.shape","b9ef0a26":"%matplotlib inline\nimport matplotlib.pyplot as plt\nData.hist(bins=50, figsize=(20,15))\nplt.savefig(\"attribute_histogram_plots\")\nplt.show()","ac2fe4e1":"Training and Test Datasets","3b104471":"Trend Analysis","d269825a":"Label Encoding","0a473a51":"Feature Engineering"}}