{"cell_type":{"01d22823":"code","bfe12ce7":"code","39bccf1d":"code","8c678e72":"code","74626027":"code","37ae878f":"code","a11777b7":"code","9e37334d":"code","78ec9e47":"code","7d20b73a":"code","f8d8a48e":"code","879bc9d5":"code","dbff3809":"markdown","ff215de7":"markdown","4625b053":"markdown","d3599cb3":"markdown","47e223cb":"markdown"},"source":{"01d22823":"import numpy as np\nimport pandas as pd\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\n# Models \nimport tensorflow as tf\nfrom tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Flatten, Dense, Dropout, Conv2D, MaxPooling2D\n\nimport os\n\nfolder_path = '..\/input\/animal-image-datasetdog-cat-and-panda\/animals\/animals\/'\nfor dirname, _, filenames in os.walk(folder_path):\n    print(dirname)","bfe12ce7":"print('Total cats images:', len(os.listdir(folder_path + 'cats')))\nprint('Total dogs images:', len(os.listdir(folder_path + 'dogs')))\nprint('Total pandas images:', len(os.listdir(folder_path + 'panda')))","39bccf1d":"from keras.preprocessing import image\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline","8c678e72":"fig = plt.figure(figsize=(10, 7))\n  \n# setting values to rows and column variables\nrows = 2\ncolumns = 2\n\n# reading images\nImage1 = image.load_img(folder_path + 'cats\/cats_00001.jpg')\nImage2 = image.load_img(folder_path + 'dogs\/dogs_00001.jpg')\nImage3 = image.load_img(folder_path + 'panda\/panda_00001.jpg')\nImage4 = image.load_img(folder_path + 'panda\/panda_00003.jpg')\n\nfig.add_subplot(rows, columns, 1)\nplt.imshow(Image1)\nplt.title(\"First\")\n\nfig.add_subplot(rows, columns, 2)\nplt.imshow(Image2)\nplt.title(\"Second\")\n\nfig.add_subplot(rows, columns, 3)\nplt.imshow(Image3)\nplt.title(\"Third\")\n\nfig.add_subplot(rows, columns, 4)\nplt.imshow(Image4)\nplt.title(\"Fourth\")","74626027":"train_datagen = ImageDataGenerator(\n                fill_mode = 'nearest',\n                validation_split=0.2\n)","37ae878f":"train_generator=train_datagen.flow_from_directory(\n    folder_path,\n    target_size=(108,108),\n    color_mode='rgb',\n    class_mode='categorical',\n    subset='training',\n)\nvalidation_generator=train_datagen.flow_from_directory(\n    folder_path,\n    target_size=(108,108),\n    color_mode='rgb',\n    class_mode='categorical',\n    subset='validation',\n)","a11777b7":"from keras.applications import ResNet50\nmodel = tf.keras.models.Sequential([\n    ResNet50(input_shape=(108,108,3), include_top=False),\n])\nfor layer in model.layers:\n  layer.trainable = False\n\nmodel.add(Conv2D(64, (3,3), activation='relu'))\nmodel.add(MaxPooling2D(2,2))\nmodel.add(Flatten())\nmodel.add(Dense(64, activation='relu'))\nmodel.add(Dropout(0.4))\nmodel.add(Dense(3, activation='softmax'))\n\nmodel.summary()","9e37334d":"model.compile(optimizer='Adam',\n              loss='categorical_crossentropy',\n              metrics=['accuracy'])","78ec9e47":"history = model.fit(train_generator,\n                    validation_data=validation_generator,\n                    epochs=25,\n                    verbose=1,\n                    )","7d20b73a":"import matplotlib.pyplot as plt\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Model accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Validation'], loc='lower right')\nplt.show()","f8d8a48e":"plt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('Model Loss')\nplt.ylabel('loss')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Validation'], loc='lower right')\nplt.show()","879bc9d5":"model.save('\/kaggle\/working\/model.h5')","dbff3809":"# Animal Classification \n### Transfer Learning using keras application","ff215de7":"#### Split data : 80% train, 20% validation","4625b053":"### Import Libraries","d3599cb3":"### Show some images","47e223cb":"Transfer learning is a machine learning method where a model developed for a task is reused as the starting point for a model on a second task\n\n<img src=\"https:\/\/learnopencv.com\/wp-content\/uploads\/2019\/05\/transfer-learning-1024x574.jpg\" alt=\"drawing\" width=\"500\"\/>\n\nIn this notebook the model use resnet 50 model and add some final layer which are going to be trained."}}