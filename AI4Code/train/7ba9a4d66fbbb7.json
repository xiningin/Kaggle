{"cell_type":{"7f59a7df":"code","e51fd59a":"code","aa5a0c7e":"code","1242850f":"code","169c0a02":"code","b1f74050":"code","b8d305d7":"code","7ecea3d4":"code","89302074":"code","a0b0b31f":"code","b3e3f102":"code","36275c24":"code","10926843":"code","5cffa710":"code","9b467325":"code","0169c1a7":"code","edb3aa69":"code","7dc3ece8":"code","67ade9cd":"code","520af47b":"code","ec2ece79":"code","54c08c82":"code","62fb47d1":"code","811bc3dc":"code","5a4bdf00":"code","839263f4":"code","4d1415ed":"code","cd603c81":"code","5627a27f":"code","2efe7341":"code","62765678":"code","f484d30a":"code","9ff15173":"code","9ee76771":"code","9e3b8407":"code","6f08fa07":"code","802c5d41":"code","986fbf6c":"code","d3e29587":"code","17b3ec0b":"code","5cdbeb72":"code","350da8ac":"code","3bccabab":"code","03272d55":"code","63ea5d7a":"code","d7fbc6fd":"code","4f2ba993":"code","72d49348":"code","8b5ffc73":"code","c5f3c0d5":"code","c10a7e0a":"code","3a9c07cd":"code","092de844":"code","b100614c":"code","c9573afe":"code","dc87ee7d":"code","c5ae06d3":"code","49f8ce97":"code","a0d20f8d":"code","d87cb156":"code","72bff82b":"code","cff264a2":"code","6470c60f":"code","f93a4fe1":"code","3361ce9a":"code","8ee96350":"code","267491a8":"markdown","6244f9d2":"markdown","f384af57":"markdown","533746e7":"markdown","b31b83a3":"markdown","530e713b":"markdown","ce1e65a2":"markdown","a6501c93":"markdown","91341ab5":"markdown"},"source":{"7f59a7df":"import numpy as np\nimport pandas as pd","e51fd59a":"df_train = pd.read_csv(\"..\/input\/train.csv\")\ndf_overview = pd.read_csv(\"..\/input\/game_overview.csv\")\ndf_test = pd.read_csv(\"..\/input\/test.csv\")","aa5a0c7e":"df_merged_train = pd.merge(df_train,df_overview,on=\"title\",how=\"left\")\ndf_merged_train[\"Origin\"] = \"Train\"\ndf_merged_test = pd.merge(df_test,df_overview,on = \"title\",how = \"left\")\ndf_merged_test[\"Origin\"] = \"Test\"","1242850f":"df_merged_train.developer.nunique()\n","169c0a02":"df_overview[\"overview\"][63]","b1f74050":"df_train_test = pd.concat([df_merged_train,df_merged_test],axis=0,sort = False)","b8d305d7":"df_train_test.head()","7ecea3d4":"import re ","89302074":"df_train_test.columns","a0b0b31f":"df_train_test['year'] = df_train_test['year'].fillna(df_train_test.groupby(['title'])['year'].transform('median'))\n","b3e3f102":"import nltk \nnltk.download('wordnet')","36275c24":"import string\nimport nltk\nnltk.download('stopwords')\n\nfrom nltk.corpus import stopwords\nstopword = stopwords.words(\"english\")\nfrom nltk.stem import WordNetLemmatizer\nlemmateizer = WordNetLemmatizer()","10926843":"df_train_test.reset_index(inplace=True)","5cffa710":"df_train_test.columns","9b467325":"df_train_test.drop(\"index\",inplace=True,axis = 1)","0169c1a7":"corpus = []\nfor x in range(0,df_train_test['overview'].count()):\n    remv_num = re.sub('[^A-Za-z]',' ',df_train_test['overview'][x])\n    remv_punct = \"\".join([word.lower() for word in remv_num if word not in string.punctuation])\n    tokens = re.split(\"\\W+\",remv_punct)\n    \n    noStop = [lemmateizer.lemmatize(word) for word in tokens if word not in stopword]\n    \n    noStop = \" \".join(noStop)\n    \n    corpus.append(noStop)","edb3aa69":"len(corpus)","7dc3ece8":"corpus1 = []\nfor x in range(0,df_train_test['user_review'].count()):\n    remv_num = re.sub('[^A-Za-z]',' ',df_train_test['user_review'][x])\n    remv_punct = \"\".join([word.lower() for word in remv_num if word not in string.punctuation])\n    tokens = re.split(\"\\W+\",remv_punct)\n    \n    noStop = [lemmateizer.lemmatize(word) for word in tokens if word not in stopword]\n    \n    noStop = \" \".join(noStop)\n    \n    corpus1.append(noStop)","67ade9cd":"len(corpus1)","520af47b":"corpus2 = []\nfor i in range(df_train_test.tags.count()):\n    rem_punct = [word for word in df_train_test.tags[i] if word not in string.punctuation]\n    cor = \"\".join([word.lower() for word in rem_punct])\n    corpus2.append(cor)","ec2ece79":"len(corpus2)","54c08c82":"corpus_dict = dict({\"overview\":corpus,\"user_review\":corpus1,\"tags\":corpus2})","62fb47d1":"df_corpus = pd.DataFrame(data=corpus_dict)","811bc3dc":"df_corpus.shape","5a4bdf00":"df_corpus['mix_corpus'] = df_corpus.tags\nfor i in range(0,df_corpus.overview.count()):\n    df_corpus['mix_corpus'][i] = ''.join(df_corpus['tags'][i]) +' '+ ''.join(df_corpus['user_review'][i])+' '+''.join(df_corpus['overview'][i])\n","839263f4":"df_corpus.tags[0]","4d1415ed":"df_corpus.overview[0]","cd603c81":"df_corpus.user_review[0]","5627a27f":"df_corpus.mix_corpus[1000]","2efe7341":"df_corpus[\"overview_word_count\"] = df_corpus['overview'].apply(lambda x : len(x.split(\" \")))\ndf_corpus[\"tags_word_count\"] = df_corpus['tags'].apply(lambda x : len(x.split(\" \")))\ndf_corpus[\"user_review_word_count\"] = df_corpus['user_review'].apply(lambda x : len(x.split(\" \")))","62765678":"df_corpus['year'] = df_train_test['year'].copy()\ndf_corpus['user_suggestion'] = df_train_test['user_suggestion'].copy()\ndf_corpus['publisher'] = df_train_test['publisher'].copy()\n","f484d30a":"final_corpus = df_corpus.mix_corpus","9ff15173":"from sklearn.feature_extraction.text import CountVectorizer,TfidfVectorizer\ncv=CountVectorizer(max_features=7000)\nX=cv.fit_transform(final_corpus).toarray()","9ee76771":"df_corpus[\"Origin\"]= df_train_test.Origin","9e3b8407":"X","6f08fa07":"Xfeatures = pd.concat([df_corpus['year'],df_corpus['user_suggestion'],df_corpus[\"publisher\"],df_corpus['overview_word_count'],df_corpus['Origin'],df_corpus['tags_word_count'],df_corpus['user_review_word_count'],pd.DataFrame(X)],axis =1)\n","802c5d41":"dummies = pd.get_dummies(df_corpus[\"publisher\"])","986fbf6c":"Xfeatures = pd.concat([Xfeatures,dummies],axis = 1)","d3e29587":"Xfeatures.shape","17b3ec0b":"Xfeatures.drop(\"publisher\",axis = 1,inplace = True)","5cdbeb72":"Xfeatures.shape","350da8ac":"Xfeatures_train = Xfeatures[Xfeatures.Origin == \"Train\"]\n","3bccabab":"Xfeatures_test = Xfeatures[Xfeatures.Origin == \"Test\"]","03272d55":"Xfeatures_train.shape,Xfeatures_test.shape","63ea5d7a":"Xfeatures_train.drop(\"Origin\",axis = 1,inplace = True)","d7fbc6fd":"Xfeatures_test.drop(\"Origin\",axis = 1,inplace = True)","4f2ba993":"Xfeatures_test.shape","72d49348":"Xfeatures_test.drop(\"user_suggestion\",axis = 1,inplace=True)","8b5ffc73":"X = Xfeatures_train.drop(\"user_suggestion\",axis = 1)\ny = Xfeatures_train.user_suggestion","c5f3c0d5":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 3)","c10a7e0a":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier(n_estimators=200,criterion='entropy',random_state=3)\nrfc.fit(X_train,y_train)","3a9c07cd":"y_pred = rfc.predict(X_test)","092de844":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test,y_pred)","b100614c":"cm","c9573afe":"from sklearn.metrics import classification_report\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import recall_score","dc87ee7d":"print(\"Train accuracy score:\",accuracy_score(y_train,rfc.predict(X_train)))\nprint(\"Train F1 score:\",f1_score(y_train,rfc.predict(X_train)))","c5ae06d3":"print(\"Test accuracy score:\",accuracy_score(y_test,y_pred))\nprint(\"Test F1 score:\",f1_score(y_test,y_pred))","49f8ce97":"test_pre = rfc.predict(Xfeatures_test)","a0d20f8d":"test_pre","d87cb156":"review_id = df_test.review_id","72bff82b":"review_id.shape","cff264a2":"d1 = dict({\"review_id\":review_id,\"user_suggestion\":test_pre})","6470c60f":"test_pred_df = pd.DataFrame(data=d1)","f93a4fe1":"test_pred_df.user_suggestion = test_pred_df.user_suggestion.astype('int')","3361ce9a":"test_pred_df.head()","8ee96350":"test_pred_df.to_csv(\"submission6.csv\",index = False)","267491a8":"rsearch_r.best_params_","6244f9d2":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier(n_estimators=100,criterion='entropy',random_state=3)\nrfc.fit(X_train,y_train)","f384af57":"import nltk\nnltk.download('wordnet')\n    ","533746e7":"rsearch_r = RandomizedSearchCV(rfc,param_distributions=params,n_iter=200,cv = 3,scoring='roc_auc',\\\n                             random_state=3,return_train_score=True,n_jobs= -1)\nrsearch_r.fit(X,y)","b31b83a3":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom scipy.stats import randint as sp_randint\nrfc = RandomForestClassifier(random_state=3)","530e713b":"rfc = RandomForestClassifier(**rsearch_r.best_params_,random_state=3)","ce1e65a2":"from sklearn.naive_bayes import GaussianNB\n\n#Create a Gaussian Classifier\nrfc = GaussianNB()\n\nrfc.fit(X_train,y_train)","a6501c93":"rfc.fit(X_train,y_train)","91341ab5":"params = {'n_estimators': sp_randint(50,200),\n          'max_features':sp_randint(1,24),\n         'max_depth':sp_randint(2,10),\n         'min_samples_split':sp_randint(2,20),\n         'min_samples_leaf':sp_randint(1,20),\n         'criterion':['gini','entropy']}"}}