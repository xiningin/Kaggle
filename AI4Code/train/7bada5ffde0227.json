{"cell_type":{"915e1fd9":"code","d1c8d48a":"code","5898d6a5":"code","da40aa36":"code","57893627":"code","1140fedc":"code","f77c8e3d":"code","2cb1f2ab":"code","77e6b9fa":"code","073b3f1c":"code","90501bd9":"code","a0845e6c":"code","b2b9375c":"code","679752b9":"code","7765a7d6":"code","9d744d50":"markdown"},"source":{"915e1fd9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport cv2\nimport plotly.express as px\nfrom wordcloud import WordCloud\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d1c8d48a":"df = pd.read_excel('\/kaggle\/input\/\/covidindiatravelhistory\/Patient_Travel_History_Files\/PatientMovementTrackingTemplate.xlsx')\ndf.head()","5898d6a5":"def nonan(x):\n    if type(x) == str:\n        return x.replace(\"\\n\", \"\")\n    else:\n        return \"\"\n\ntext = ' '.join([nonan(abstract) for abstract in df[\"Address\"]])\nwordcloud = WordCloud(max_font_size=None,colormap='Set3', background_color='black', collocations=False,\n                      width=1200, height=1000).generate(text)\nfig = px.imshow(wordcloud)\nfig.update_layout(title_text='Covid-19 Travelling History ')","da40aa36":"#codes from Endi Niu @niuddd\nimg = cv2.imread('\/kaggle\/input\/covidindiatravelhistory\/Patient_Travel_History_Files\/P35P36P37_Updated_Page_2_of_2.jpg')\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nfig = plt.figure(figsize=(8,8))\nplt.imshow(img)","57893627":"travel_file = '..\/input\/covidindiatravelhistory\/Patient_Travel_History_Files\/Kerala_UnknownPatientIDs.txt'\nwith open(travel_file) as f: # The with keyword automatically closes the file when you are done\n    print (f.read(1000))","1140fedc":"#codes from Endi Niu @niuddd\nimg = cv2.imread('\/kaggle\/input\/covidindiatravelhistory\/Patient_Travel_History_Files\/P42_EnteredDataInSpreadsheet.jpg')\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nfig = plt.figure(figsize=(8,8))\nplt.imshow(img)","f77c8e3d":"import numpy as np\nfrom matplotlib import pyplot as plt\n%matplotlib inline\ndef plotWordFrequency(input):\n    f = open(travel_file,'r')\n    words = [x for y in [l.split() for l in f.readlines()] for x in y]\n    data = sorted([(w, words.count(w)) for w in set(words)], key = lambda x:x[1], reverse=True)[:40] \n    most_words = [x[0] for x in data]\n    times_used = [int(x[1]) for x in data]\n    plt.figure(figsize=(20,10))\n    plt.bar(x=sorted(most_words), height=times_used, color = 'red', edgecolor = 'green',  width=.5)\n    plt.xticks(rotation=45, fontsize=18)\n    plt.yticks(rotation=0, fontsize=18)\n    plt.xlabel('Most Common Words:', fontsize=18)\n    plt.ylabel('Number of Occurences:', fontsize=18)\n    plt.title('Most Commonly Used Words: %s' % (travel_file), fontsize=24)\n    plt.show()","2cb1f2ab":"#codes from Endi Niu @niuddd\nimg = cv2.imread('\/kaggle\/input\/covidindiatravelhistory\/Patient_Travel_History_Files\/P51_EnteredDataInSpreadsheet.jpg')\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nfig = plt.figure(figsize=(8,8))\nplt.imshow(img)","77e6b9fa":"travel_file = '..\/input\/covidindiatravelhistory\/Patient_Travel_History_Files\/Kerala_UnknownPatientIDs.txt'\nplotWordFrequency(travel_file)","073b3f1c":"#codes from Endi Niu @niuddd\nimg = cv2.imread('\/kaggle\/input\/covidindiatravelhistory\/Patient_Travel_History_Files\/P42_EnteredDataInSpreadsheet.jpg')\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nfig = plt.figure(figsize=(8,8))\nplt.imshow(img)","90501bd9":"#codes from Endi Niu @niuddd\nimg = cv2.imread('\/kaggle\/input\/covidindiatravelhistory\/Patient_Travel_History_Files\/P156.jpg')\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nfig = plt.figure(figsize=(8,8))\nplt.imshow(img)","a0845e6c":"image = cv2.imread('\/kaggle\/input\/covidindiatravelhistory\/Patient_Travel_History_Files\/P109.jpg')\nimage = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n\nplt.figure(figsize=(20, 20))\nplt.subplot(1, 2, 1)\nplt.title(\"Original\")\nplt.imshow(image)\n\n# Create our shapening kernel, we don't normalize since the \n# the values in the matrix sum to 1\nkernel_sharpening = np.array([[-1,-1,-1], \n                              [-1,9,-1], \n                              [-1,-1,-1]])\n\n# applying different kernels to the input image\nsharpened = cv2.filter2D(image, -1, kernel_sharpening)\n\n\nplt.subplot(1, 2, 2)\nplt.title(\"Image Sharpening\")\nplt.imshow(sharpened)\n\nplt.show()","b2b9375c":"#codes from Endi Niu @niuddd\nimg = cv2.imread('\/kaggle\/input\/covidindiatravelhistory\/Patient_Travel_History_Files\/P118.jpeg')\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nfig = plt.figure(figsize=(8,8))\nplt.imshow(img)","679752b9":"# Load our new image\nimage = cv2.imread('\/kaggle\/input\/covidindiatravelhistory\/Patient_Travel_History_Files\/P175.jpeg', 0)\n\nplt.figure(figsize=(30, 30))\nplt.subplot(3, 2, 1)\nplt.title(\"Original\")\nplt.imshow(image)\n\n#Values below 127 goes to 0 (black, everything above goes to 255 (white)\nret,thresh1 = cv2.threshold(image, 127, 255, cv2.THRESH_BINARY)\nplt.subplot(3, 2, 2)\nplt.title(\"Threshold Binary\")\nplt.imshow(thresh1)\n\n# It's good practice to blur images as it removes noise\nimage = cv2.GaussianBlur(image, (3, 3), 0)\n\n# Using adaptiveThreshold\nthresh = cv2.adaptiveThreshold(image, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 3, 5) \n\nplt.subplot(3, 2, 3)\nplt.title(\"Adaptive Mean Thresholding\")\nplt.imshow(thresh)\n\n\n_, th2 = cv2.threshold(image, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)\n\nplt.subplot(3, 2, 4)\nplt.title(\"Otsu's Thresholding\")\nplt.imshow(th2)\n\n\nplt.subplot(3, 2, 5)\n# Otsu's thresholding after Gaussian filtering\nblur = cv2.GaussianBlur(image, (5,5), 0)\n_, th3 = cv2.threshold(blur, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)\nplt.title(\"Guassian Otsu's Thresholding\")\nplt.imshow(th3)\nplt.show()","7765a7d6":"#codes from Endi Niu @niuddd\nimg = cv2.imread('\/kaggle\/input\/covidindiatravelhistory\/Patient_Travel_History_Files\/P140.jpg')\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nfig = plt.figure(figsize=(8,8))\nplt.imshow(img)","9d744d50":"Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke"}}