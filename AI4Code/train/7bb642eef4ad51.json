{"cell_type":{"5a2d3662":"code","89249381":"code","0445f9d9":"code","f23711f5":"code","9726398e":"code","9fdb7967":"code","e3e692a5":"code","2446c35d":"code","1cd9d671":"code","6bc863dc":"code","c55d261a":"code","fabe84ca":"code","d4cd5cac":"code","a8f02c50":"code","2f4734ef":"code","d308b4ed":"code","d7671450":"code","fa70ad79":"code","e2a4b822":"code","8bbb88f1":"code","0a006687":"code","6cb37c6e":"code","5a8affd0":"code","e8e5e67f":"code","d050fc56":"code","01a12cca":"code","a1643e2a":"code","15d81783":"code","8933456b":"code","3c5b9b8f":"code","e666efa7":"code","9338cb62":"code","e1caacde":"code","5af29d07":"code","949ef55c":"code","d4ceef57":"code","f3422452":"code","8e855e03":"code","5b145215":"code","0a12163b":"code","3495f093":"code","7003ae3e":"code","12922da3":"code","f870df82":"code","3484684a":"code","5437b6b4":"code","fcd9d758":"code","c7bfea6c":"code","bd622c01":"code","0d0053ca":"markdown","a41e4fdc":"markdown","c0280b11":"markdown","acf82f22":"markdown","50bfccb0":"markdown","3e882db8":"markdown","d612da67":"markdown","ee055541":"markdown"},"source":{"5a2d3662":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","89249381":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","0445f9d9":"dataset = pd.read_csv('..\/input\/weatherAUS.csv')","f23711f5":"dataset.head()","9726398e":"dataset.isnull().sum()","9fdb7967":"dataset.shape","e3e692a5":"dataset.drop(labels = ['Date','Location','Evaporation','Sunshine','Cloud3pm','Cloud9am','RISK_MM'],axis = 1,inplace = True)","2446c35d":"dataset.head()","1cd9d671":"dataset['RainToday'].replace({'No':0,'Yes':1},inplace = True)\ndataset['RainTomorrow'].replace({'No':0,'Yes':1},inplace = True)\ndataset.shape","6bc863dc":"dataset.dropna(inplace = True)","c55d261a":"dataset.shape","fabe84ca":"categorical = ['WindGustDir','WindDir9am','WindDir3pm']","d4cd5cac":"dataset = pd.get_dummies(dataset,columns = categorical,drop_first=True)","a8f02c50":"dataset.head()","2f4734ef":"dataset.shape","d308b4ed":"from sklearn.preprocessing import StandardScaler","d7671450":"sc = StandardScaler()","fa70ad79":"x = dataset.drop(labels = ['RainTomorrow'],axis = 1)","e2a4b822":"x.shape","8bbb88f1":"y = dataset['RainTomorrow']","0a006687":"x = sc.fit_transform(x)","6cb37c6e":"x","5a8affd0":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2,random_state = 40)","e8e5e67f":"from sklearn.ensemble import RandomForestClassifier","d050fc56":"rc = RandomForestClassifier(n_estimators = 200,max_leaf_nodes = 1000)\nrc.fit(x_train,y_train)","01a12cca":"y_pred = rc.predict(x_test)","a1643e2a":"y_train_pred = rc.predict(x_train)","15d81783":"from sklearn.metrics import classification_report,confusion_matrix,accuracy_score","8933456b":"print(classification_report(y_train,y_train_pred))","3c5b9b8f":"confusion_matrix(y_train,y_train_pred)","e666efa7":"print(classification_report(y_test,y_pred))","9338cb62":"print(confusion_matrix(y_test,y_pred))","e1caacde":"print('Training accuracy ---->',accuracy_score(y_train,y_train_pred))\nprint('Testing accuracy  ---->',accuracy_score(y_test,y_pred))","5af29d07":"from sklearn.svm import SVC","949ef55c":"svc = SVC()","d4ceef57":"svc.fit(x_train,y_train)","f3422452":"y_pred = svc.predict(x_test)\ny_train_pred = svc.predict(x_train)","8e855e03":"print(classification_report(y_train,y_train_pred))","5b145215":"confusion_matrix(y_train,y_train_pred)","0a12163b":"print(classification_report(y_test,y_pred))","3495f093":"confusion_matrix(y_test,y_pred)","7003ae3e":"print('Training Accuracy ---->',accuracy_score(y_train,y_train_pred))\nprint('Testing Accuracy  ---->',accuracy_score(y_test,y_pred))","12922da3":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense","f870df82":"classifier = Sequential()","3484684a":"classifier.add(Dense(units = 30,kernel_initializer='uniform',activation = 'relu',input_dim = 58))\nclassifier.add(Dense(units = 30,kernel_initializer='uniform',activation = 'relu'))\nclassifier.add(Dense(units = 30,kernel_initializer='uniform',activation = 'relu'))\nclassifier.add(Dense(units = 1,activation='sigmoid',kernel_initializer='uniform'))","5437b6b4":"classifier.compile(optimizer = 'adam',loss = 'binary_crossentropy',metrics = ['accuracy'])","fcd9d758":"classifier.fit(x_train,y_train,epochs = 50,batch_size=10)","c7bfea6c":"y_pred = classifier.predict_classes(x_test)\ny_train_pred = classifier.predict_classes(x_train)","bd622c01":"print('Training Accuracy ---->',accuracy_score(y_train,y_train_pred))\nprint('Testing Accuracy  ---->',accuracy_score(y_test,y_pred))","0d0053ca":"### Contents\n\n**Analysis**\n\n**Preprocessing**\n\n**Creating Random Forest Classifier**\n\n**Evaluating Training and Testing set**\n\n**Creating Support Vector Classifier**\n\n**Evaluating Training and Testing set**","a41e4fdc":"## Support Vector Classification","c0280b11":"## Random Forest Classifier","acf82f22":"## Testing set evaluation","50bfccb0":"## Training Set Evaluation","3e882db8":"## Testing Set Evaluation","d612da67":"## ANN","ee055541":"## Training set evaluation"}}