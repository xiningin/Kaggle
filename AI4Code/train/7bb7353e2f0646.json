{"cell_type":{"a094f634":"code","3b4b1eb8":"code","98f46315":"code","adeb0603":"code","454342f2":"code","93c2cd5b":"code","dbefc183":"code","9167dcf7":"code","fe20b193":"code","fca4c03f":"code","1a3e4b4a":"code","7ab5f5e6":"code","2b53e6ca":"code","969eaa89":"code","1aa1cd30":"code","d7f608bb":"code","5157d29c":"code","5f738687":"code","6e8f9066":"code","4ef363c2":"code","c628b4e7":"code","3cafffc6":"code","083d6c57":"code","8267575a":"code","658da361":"code","f42ab73c":"code","0dc2b32c":"code","e0f66f91":"code","a8bd591b":"code","5e4c4c7a":"code","7b62c416":"code","39917c21":"markdown","bfb28da4":"markdown","5ad18271":"markdown","1de0c7fc":"markdown","724d4b95":"markdown","c199299f":"markdown","6c9ab6c6":"markdown","81b1ac49":"markdown","0723a04c":"markdown"},"source":{"a094f634":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import norm\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy import stats\nimport warnings\nwarnings.filterwarnings('ignore')","3b4b1eb8":"import numpy as np\nimport pandas as pd","98f46315":"train=pd.read_csv('..\/input\/titanic\/train.csv')\ntrain.tail()","adeb0603":"test=pd.read_csv('..\/input\/titanic\/test.csv')\ntest.isnull().sum()","454342f2":"train['Survived'].describe()","93c2cd5b":"sns.countplot(train['Survived'],data=train);","dbefc183":"sns.countplot(x='Pclass',hue='Survived',data=train);","9167dcf7":"sns.barplot(x='Pclass',y='Survived',hue='Sex',data=train);","fe20b193":"sns.countplot(x='Sex',hue='Survived',data=train);","fca4c03f":"sns.countplot(x='Embarked',hue='Survived',data=train);","1a3e4b4a":"sns.countplot(x='Embarked',hue='Pclass',data=train);","7ab5f5e6":"sns.countplot(x='Embarked',hue='Sex',data=train);","2b53e6ca":"sns.heatmap(train.isnull());","969eaa89":"train['Age'].isnull().sum()","1aa1cd30":"train['middle']=train['Name'].map(lambda x:x.split(',')[1].split('.')[0])\nsns.countplot(x='middle',data=train);","d7f608bb":"test['middle']=test['Name'].map(lambda x:x.split(',')[1].split('.')[0])\ntest['middle'].value_counts()","5157d29c":"train['middle'].value_counts()","5f738687":"train_Mr=train[train['middle'].str.contains('Mr')]\ntrain_Mrs=train[train['middle'].str.contains('Mrs')]\ntrain_Miss=train[train['middle'].str.contains('Miss')]\ntrain_Master=train[train['middle'].str.contains('Master')]\n\nprint('Mr {}'.format(train_Mr['Age'].dropna().mean()))\nprint('Mrs {}'.format(train_Mrs['Age'].dropna().mean()))\nprint('Miss {}'.format(train_Miss['Age'].dropna().mean()))\nprint('Master {}'.format(train_Master['Age'].dropna().mean()))\nprint('All {}'.format(train['Age'].dropna().mean()))","6e8f9066":"for i in range(len(train)):\n        \n    if pd.isnull(train['Age'][i]):\n        name=train['middle'][i]\n        if name=='Mr':\n            train['Age'][i]=33\n        elif name=='Mrs':\n            train['Age'][i]=36\n        elif name=='Miss':\n            train['Age'][i]=22\n        elif name=='Master':\n            train['Age'][i]=5\n        else:\n            train['Age'][i]=30\n\ntrain['Age'].isnull().sum()","4ef363c2":"for i in range(len(test)):\n    if pd.isnull(test['Age'][i]):\n        name=test['middle'][i]\n        if name=='Mr':\n            test['Age'][i]=33\n        elif name=='Mrs':\n            test['Age'][i]=36\n        elif name=='Miss':\n            test['Age'][i]=22\n        elif name=='Master':\n            test['Age'][i]=5\n        else:\n            test['Age'][i]=30\n\ntest['Age'].isnull().sum()","c628b4e7":"train['Family']=train['SibSp']+train['Parch']+1","3cafffc6":"test['Family'] = test['SibSp'] + test['Parch'] + 1","083d6c57":"sns.countplot(x='Family',hue='Survived',data=train);","8267575a":"train['Family']=pd.cut(train.Family, [0,1,4,7,11], labels=['Solo', 'Small', 'Big', 'Very big'])\ntest['Family']= pd.cut(test.Family, [0,1,4,7,11], labels=['Solo', 'Small', 'Big', 'Very big'])\ntrain.head()","658da361":"y=train['Survived']\nfeatures=['Pclass','Sex','Age','Fare','Embarked','Family']\nX=train[features]\nX.tail()","f42ab73c":"from sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.ensemble import RandomForestClassifier","0dc2b32c":"numerical_cols=['Age','Fare']\n\ncategorical_cols=['Pclass','Sex','Embarked','Family']\n\nnumerical_transformer = SimpleImputer(strategy='median')\n\ncategorical_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='most_frequent')),\n    ('onehot', OneHotEncoder())\n])\n\n\npreprocessor = ColumnTransformer(\n    transformers=[\n        ('num', numerical_transformer, numerical_cols),\n        ('cat', categorical_transformer, categorical_cols)\n    ])\n\nmodel = Pipeline(steps=[('preprocessor', preprocessor),\n                              ('model', RandomForestClassifier(random_state=0, \n                                                               n_estimators=600, max_depth=5))\n                             ])\nmodel.fit(X,y);","e0f66f91":"X_test=test[features]\nX.head()","a8bd591b":"preds=model.predict(X_test)","5e4c4c7a":"from sklearn.model_selection import cross_val_score\nscores=cross_val_score(model,X,y)\n#print(scores)\nprint('Average: {}'.format(np.mean(scores)))","7b62c416":"result = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': preds}) #saving our results\nresult.to_csv('submission.csv', index=False)","39917c21":"**Embarked**:\n1. S\u3067\u306f\u4e57\u5ba2\u305d\u306e\u3082\u306e\u304c\u591a\u304f\u307e\u305f\u3001Pclass\uff13\u304c\u591a\u3044\u279e\u751f\u304d\u6b8b\u308a\u304c\u5c11\u306a\u304b\u3063\u305f\uff1f\n2. C\u3067\u306fPclass\uff11\u3068\uff13\u304c\u540c\u7a0b\u5ea6\u306a\u306e\u3067\u751f\u304d\u6b8b\u308a\u306e\u6570\u304c\u591a\u304b\u3063\u305f\uff1f\n3. Q\u3067\u306f\uff13\u304c\u591a\u3044\u306b\u3082\u95a2\u308f\u3089\u305a\u751f\u304d\u6b8b\u308a\u304c\u591a\u304b\u3063\u305f","bfb28da4":"**Embarked&Sex**:Q\u306b\u5973\u6027\u304c\u591a\u304f\u751f\u304d\u6b8b\u308a\u304c\u591a\u3044\u3068\u8003\u3048\u305f\u304c\u305d\u3046\u3067\u306f\u306a\u304b\u3063\u305f\n\n\u3053\u306e\u30b0\u30e9\u30d5\u3068Embarked&Survived\u306e\u30b0\u30e9\u30d5\u304c\u4f3c\u3066\u3044\u308b","5ad18271":"\u5bb6\u65cf\uff1dSib(\u5144\u5f1f\/\u914d\u5076\u8005)+Parch(\u89aa\/\u5b50\u4f9b)+\u81ea\u5206","1de0c7fc":"\u5e74\u9f62\u306e\u6b20\u640d\u5024\u5272\u5408\u304c177\/860\u306a\u306e\u3067\u524a\u9664\u3067\u306f\u306a\u304f\u9055\u3046\u5024\u3092\u5165\u308c\u308b","724d4b95":"****Pclass****\uff1aPclass\u306e\u756a\u53f7\u304c\u82e5\u3044\u307b\u3046\u304c\u751f\u304d\u6b8b\u308a\u3084\u3059\u3044","c199299f":"**Sex**:\u5973\u6027\u306e\u307b\u3046\u304c\u751f\u304d\u6b8b\u308a\u3084\u3059\u3044","6c9ab6c6":"\u30af\u30ed\u30b9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u3059\u308b\n\uff03score=k\u500b\u306b\u5206\u5272\u3057k\u500b\u306e\u30e2\u30c7\u30eb\u3092\u8a18\u9332\nk\u500b\u306e\u30e2\u30c7\u30eb\u7cbe\u5ea6\u306e\u5e73\u5747\u3092\u7b97\u51fa","81b1ac49":"Mr,Mrs\u306a\u3069\u306f\u5e74\u9f62\u304c\u9ad8\u3044\u3068\u4e88\u6e2c\u3067\u304d\u308b\u306e\u3067\u305d\u3053\u304b\u3089\u5e74\u9f62\u88dc\u5b8c\u3092\u3059\u308b\n\n\u4e0a\u4f4d4\u3064\u304c\u591a\u3044\u306e\u3067\u305d\u306e\u5e73\u5747\u5024\u3092\u633f\u5165\u3059\u308b","0723a04c":"1. 1\u4eba\u306e\u5834\u5408\n2. 2~4\u4eba\u306e\u5834\u5408\n3. 5\u4eba\u4ee5\u4e0a\n\n\u4e0a\u8a18\u306e\u5bb6\u65cf\u4eba\u6570\u3067Survived\u304c\u5909\u5316\u3057\u3066\u3044\u308b"}}