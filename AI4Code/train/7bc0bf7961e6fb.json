{"cell_type":{"ca1c6e19":"code","153a5886":"code","94e7e33c":"code","a8033a61":"code","e0c3137d":"code","de5042ca":"code","a0e52714":"code","79eefe32":"code","33636284":"code","25534c7b":"code","bc906913":"code","2938998b":"markdown"},"source":{"ca1c6e19":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","153a5886":"!pip install scikit-allel","94e7e33c":"import allel # work with genetic data","a8033a61":"#Always Paul Mooney https:\/\/www.kaggle.com\/paultimothymooney\/starter-notebook-for-end-als-kaggle-challenge\/notebook \n\nprint('example_genomics_data:\\n')\nexample_vcf_file = \"\/kaggle\/input\/end-als\/end-als\/genomics-data\/AnswerALS_subset_annovar.hg38_anno_and_geno.no_intergenic.vcf\"\ndf = allel.vcf_to_dataframe(example_vcf_file)\ndf.to_csv('\/kaggle\/working\/vcf_converted_to_csv.csv')\ndf.head(10)","e0c3137d":"df.isnull().sum()","de5042ca":"df.shape","a0e52714":"df['CHROM']","79eefe32":"df['POS']","33636284":"df['QUAL']","25534c7b":"!pip install vcfstats","bc906913":"#Code by Puru Behl https:\/\/www.kaggle.com\/accountstatus\/mt-cars-data-analysis\n\nsns.displot(df['POS'])\nplt.axvline(df['POS'].values.mean(), color='red', linestyle='dashed', linewidth=1)\nplt.title('Variant position in the chromosome');","2938998b":"#That snippet take so long. I have No clue how long it takes to read that large vcf or if I'm doing something wrong."}}