{"cell_type":{"1ad42c35":"code","7c778df3":"code","ff56aea3":"code","23952cfe":"code","9dc16053":"code","c55c6e53":"code","d1dfad2e":"code","b7bb0253":"code","291d3d99":"code","04c90205":"code","cc661ba3":"code","5ed9ad62":"code","bbc8c1a1":"code","01d3a342":"code","ca309a30":"code","c5727cf0":"code","7fd25cb0":"code","ec4775a8":"code","8c9b955a":"code","9f65a549":"code","a744cf3d":"code","44f9032a":"code","8438540c":"code","f520d882":"code","f8dc6acd":"code","bcc481cb":"code","72600d3c":"code","309e544c":"code","ccca3d1d":"code","0dc2689a":"code","1fe2d116":"code","17d94d98":"code","e0cb7a74":"code","b4f71cb9":"code","84d2f4b2":"code","cdae1bdc":"code","38072dbc":"code","b638131e":"code","cfad450c":"code","b7d93aaf":"code","5490fc38":"code","9e41ba23":"code","4213947d":"code","289c3158":"code","30ff8f10":"code","2d9cfaca":"code","9a8c7711":"code","3480f42d":"code","f53a57ca":"code","33f59c39":"code","0807eb57":"code","47dd1727":"code","931f9e8e":"code","96a966a2":"code","22016624":"code","07c46a7d":"code","47360655":"code","145917e5":"code","adad20d0":"code","3762b50a":"code","263ac941":"code","0018a058":"code","a7da02cc":"code","fd616ce3":"code","567b8a9e":"code","41188a2f":"code","9a64e7f7":"code","fa05582a":"code","90b472bf":"code","22df7c3f":"code","bc619192":"code","a2f43580":"code","294bbfcd":"code","3553f293":"code","49c482ad":"code","588a829c":"code","bfe5366d":"code","1f5a0f19":"code","7d29533c":"code","95c07248":"code","723a2384":"code","477941da":"markdown","3ec29369":"markdown","31394986":"markdown","e74a2f5b":"markdown","1952994e":"markdown"},"source":{"1ad42c35":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\nimport cufflinks as cf\nimport plotly.offline\ncf.go_offline()\ncf.set_config_file(offline=False, world_readable=True)\n\nimport warnings\nwarnings.filterwarnings('ignore')","7c778df3":"df = pd.read_csv(\"..\/input\/ufo-sightings\/scrubbed.csv\",low_memory=False)","ff56aea3":"df.head(2)","23952cfe":"# comments column contains unmeaningfull words. \n# cleaning character caused unmeaningful words\n# Different encoding types were tried. Result negative\n","9dc16053":"df.comments = df.comments.str.replace(\"&#44\",\"\").str.replace(\"&amp\",\"\")","c55c6e53":"df.comments","d1dfad2e":"df.shape","b7bb0253":"df.info()","291d3d99":"df.isnull().sum()\n# number of Null ","04c90205":"def missing (df):\n    missing_number = df.isnull().sum().sort_values(ascending=False)\n    missing_percent = (df.isnull().sum()\/df.isnull().count()).sort_values(ascending=False)*100\n    missing_percent = round(missing_percent,2)\n    missing_values = pd.concat([missing_number, missing_percent], axis=1, keys=['Missing_Number', 'Missing_Percent'])\n    return missing_values","cc661ba3":"(df.isnull().sum()\/df.isnull().count()).sort_values(ascending=False)*100","5ed9ad62":"missing(df)","bbc8c1a1":"msno.bar(df);","01d3a342":"msno.matrix(df);","ca309a30":"msno.heatmap(df);","c5727cf0":"msno.dendrogram(df);","7fd25cb0":"df.drop_duplicates(inplace=True)\nprint(df.shape)","ec4775a8":"# let's checkthe data column by columns","8c9b955a":"df.shape","9f65a549":"column_list = df.columns.to_list()\ncolumn_list","a744cf3d":"df[['datetime']]","44f9032a":"df.datetime.sample(5)","8438540c":"# df.datetime = pd.to_datetime(df.datetime)\n# the code written above give error because of time format.\n# time format can not be 24:00 so time need to be edited","f520d882":"df.datetime = df.datetime.map(lambda x: \"00:00\" if \"24:00\" in x else x )\n# time format replaced from 24:00 to 00:00","f8dc6acd":"df.datetime = pd.to_datetime(df.datetime)","bcc481cb":"df.datetime.dtype","72600d3c":"# split date and time","309e544c":"df.datetime.dt.year.value_counts()\n# UFO sightings by year \n","ccca3d1d":"plt.figure(figsize=(12,6))\nplt.title(\"UFO sightings by year \")\nplt.xlabel(\"Years\")\nplt.ylabel(\"number of sighting\")\ndf.datetime.dt.year.value_counts().plot(kind = \"line\");\n\n\n","0dc2689a":"df.datetime.value_counts().iplot('line')","1fe2d116":"\nyears_data = df.datetime.dt.year.value_counts()\nyears_index = years_data.index  \nyears_values = years_data.values\nplt.figure(figsize=(15,8))\nplt.grid(color='r', linestyle='-', linewidth=2)\nplt.xticks(rotation = 60)\nplt.title('UFO Sightings since 1943', fontsize=18)\nplt.xlabel(\"Year\", fontsize=14)\nplt.ylabel(\"Number of reports\", fontsize=14)\nyears_plot = sns.barplot(x=years_index[:80],y=years_values[:80], palette = \"Blues_d\")\n\n","17d94d98":"plt.figure(figsize=(15,8))\nplt.title(\"Ufo Sighting by months of year\")\nax = sns.countplot(df.datetime.dt.month)\nax.set(xlabel='months', ylabel='number of sights')\n\nplt.annotate('numbers are cumulative and 1 = \"January\"', (0,0), (0, -20), xycoords='axes fraction', textcoords='offset points', va='top')\n\nfor p in ax.patches:\n    ax.annotate( str(p.get_height()),  (p.get_x(), p.get_height()+20));","e0cb7a74":"df.datetime.dt.month.iplot('bar')","b4f71cb9":"plt.figure(figsize=(15,8))\n\nax = sns.countplot(df.datetime.dt.day)\nplt.title(\"UFO Sighting by Day\")\nax.set(xlabel = \"day of month\", ylabel = \"sighting number\")\nfor p in ax.patches:\n    ax.annotate( str(p.get_height()),  (p.get_x(), p.get_height()+20));\n","84d2f4b2":"df[[\"country\",\"city\"]]","cdae1bdc":"print(\"Country: \",df.country.unique())\nprint(\"city: \", df.city.unique())","38072dbc":"df.country.value_counts(dropna=False)","b638131e":"# None values in country column\ndf[df.country.isnull()].head()","cfad450c":"df[df.city.isnull()]","b7d93aaf":"df.city.value_counts(dropna=False)","5490fc38":"# Countries with the most UFO sightings \n","9e41ba23":"plt.figure(figsize=(12,5))\nplt.title(\"Countries with the most UFO sightings\")\nax = df.country.value_counts(dropna=False).plot(kind = \"bar\")\nfor p in ax.patches:\n    ax.annotate( str(p.get_height()),  (p.get_x(), p.get_height()+20));","4213947d":"df.state.value_counts(dropna = False)","289c3158":"df['shape'].value_counts(dropna=False)","30ff8f10":"df[\"shape\"].isnull().sum()","2d9cfaca":"df[df['shape'].isnull()].sample(5)","9a8c7711":"df['shape'].unique()","3480f42d":"# Sighting UFO by shape","f53a57ca":"df['shape'].value_counts(dropna = False)","33f59c39":"plt.figure(figsize=(15,5))\nplt.xlabel('shape UFO Sighting')\nplt.ylabel('number of shapes')\nax = df['shape'].value_counts(dropna = False).plot(kind = 'bar')\nfor p in ax.patches:\n    ax.annotate( str(p.get_height()),  (p.get_x(), p.get_height()+20));\n","0807eb57":"column_list","47dd1727":"df.rename(columns={'duration (seconds)': 'duration_seconds'},inplace=True)","931f9e8e":"df.duration_seconds","96a966a2":"column_list","22016624":"df.rename(columns={'duration (hours\/min)':'duration_hours'},inplace=True)","07c46a7d":"df[['duration_seconds','duration_hours']]","47360655":"df.duration_hours.isnull().sum()","145917e5":"df.duration_seconds.isnull().sum()","adad20d0":"df[[\"duration_hours\",\"duration_seconds\"]].sample(5)","3762b50a":"# duration_hours and duration_seconds get familiar values.\n# Duration_seconds's values more effective to use for analysing\n# so duration_hours column can drop","263ac941":"df.drop(columns='duration_hours', axis=1,inplace=True)","0018a058":"df.columns","a7da02cc":"df.duration_seconds.dtype","fd616ce3":"# df.duration_seconds.astype('float')","567b8a9e":"df.duration_seconds","41188a2f":"df.duration_seconds.value_counts()","9a64e7f7":"df.sort_values(by = 'duration_seconds',ascending=True)","fa05582a":"# df.duration_seconds.astype('float')","90b472bf":"df[df.duration_seconds == '2`'].duration_seconds ","22df7c3f":"df[df.duration_seconds == '2`']","bc619192":"df.loc[27822,'duration_seconds'] = 2","a2f43580":"df.loc[27822,'duration_seconds']","294bbfcd":" # df.duration_seconds.astype(float)","3553f293":"df.duration_seconds = df.duration_seconds.str.strip('`')","49c482ad":"df.duration_seconds = df.duration_seconds.astype(float)","588a829c":"df.duration_seconds.nlargest(20)","bfe5366d":"liste = df.duration_seconds.nlargest(20).index.to_list()\nliste","1f5a0f19":"df.loc[liste]","7d29533c":"df.comments[38261]","95c07248":"df.drop(index=38261,axis=0,inplace=True)","723a2384":"df.columns","477941da":"# country & city","3ec29369":"# Shape","31394986":"# 'duration (hours\/min)'","e74a2f5b":"# datetime","1952994e":"# 'duration (seconds)'"}}