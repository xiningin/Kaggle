{"cell_type":{"00fb948b":"code","6ee7154c":"code","774588ee":"code","af2306ca":"code","7ade89a8":"code","eac6c898":"code","6817e280":"code","791427cb":"code","20a251d9":"code","aefd3d8f":"code","b4d386e3":"code","a40907f5":"code","b1508645":"code","b5adfef2":"code","ce339115":"code","b4ce1f02":"code","48d87fd8":"code","76b2af05":"code","82b43097":"code","33911393":"code","2f17d484":"code","11ac43a3":"code","ad8bfb7c":"code","6852912f":"markdown","6cec52cd":"markdown","73dd0e35":"markdown","d4490ff9":"markdown","011f0f76":"markdown","f5005810":"markdown","cf4a01dd":"markdown"},"source":{"00fb948b":"!pip install pycaret\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6ee7154c":"import matplotlib.pyplot as plt\nimport seaborn as sns \nfrom pandas_profiling import ProfileReport\nsns.set()","774588ee":"data=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndata.head()","af2306ca":"data=data.drop(columns=['Name','Ticket'],index=1)","7ade89a8":"profile = ProfileReport(data, title=\"Pandas Profiling Report\")","eac6c898":"profile","6817e280":"data.Age.fillna(data.Age.mean(),inplace=True)\ndata.Embarked.fillna('S',inplace=True)\nfrom pycaret.classification import *","791427cb":"data.isnull().sum()","20a251d9":"from pycaret.classification import*","aefd3d8f":"clf=setup(data,target='Survived',ignore_features=['PassengerId'],normalize=True,transformation = True,\n          ignore_low_variance = True,numeric_features=['SibSp'] ,categorical_features=['Sex','Embarked','Pclass'],\n          train_size=0.9)","b4d386e3":"compare_models()","a40907f5":"catboost = create_model('catboost')","b1508645":"gbc = create_model('gbc')","b5adfef2":"tuned_catboost=tune_model('catboost')","ce339115":"tuned_gbc=tune_model('gbc')","b4ce1f02":"plot_model(tuned_gbc,plot='confusion_matrix')","48d87fd8":"interpret_model(tuned_gbc)","76b2af05":"interpret_model(tuned_catboost)","82b43097":"final_model=finalize_model(tuned_catboost)","33911393":"test=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest.head()","2f17d484":"predictions=predict_model(final_model,data=test)","11ac43a3":"predictions.head()","ad8bfb7c":"predictions.to_csv('predictions.csv')","6852912f":"# Comparing various models","6cec52cd":"Variable Notes\npclass: A proxy for socio-economic status (SES)\n1st = Upper\n2nd = Middle\n3rd = Lower\n\nage: Age is fractional if less than 1. If the age is estimated, is it in the form of xx.5\n\nsibsp: The dataset defines family relations in this way...\nSibling = brother, sister, stepbrother, stepsister\nSpouse = husband, wife (mistresses and fianc\u00e9s were ignored)\n\nparch: The dataset defines family relations in this way...\nParent = mother, father\nChild = daughter, son, stepdaughter, stepson\nSome children travelled only with a nanny, therefore parch=0 for them.\n\n\nVariableDefinitionKey survival Survival 0 = No, 1 = Yes pclass Ticket class 1 = 1st, 2 = 2nd, 3 = 3rd sex Sex Age Age in years sibsp # of siblings \/ spouses aboard the Titanic parch # of parents \/ children aboard the Titanic ticket Ticket number fare Passenger fare cabin Cabin number embarked Port of Embarkation C = Cherbourg, Q = Queenstown, S = Southampton","73dd0e35":"# Evaluate Model","d4490ff9":"# Tuning model","011f0f76":"# CREATE MODEL\n","f5005810":"# Predicting Test Values\n","cf4a01dd":"# Installing pycaret lib"}}