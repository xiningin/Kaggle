{"cell_type":{"267ba11d":"code","3e1f9fdc":"code","b0c3ada7":"code","765d872a":"code","86682ca9":"code","8374b576":"code","23d161ff":"code","cf4ac450":"code","59f7c8ae":"code","608484a3":"code","aae323f2":"code","81dedf08":"code","255cb821":"code","a3a828c8":"code","0eb93681":"code","59ce040c":"code","1b1a52a5":"code","8eb5a78c":"code","891cec82":"code","0231adac":"code","a1636686":"code","bf72e293":"code","8d35d47a":"code","6743bc9b":"code","aa0d9c60":"code","37089b22":"code","a023cb69":"code","504fedbe":"code","70f0f56d":"code","2636b4ab":"code","8ef48294":"code","32c426fa":"code","4d232c2a":"code","53c5e28e":"code","c0d6825a":"code","70ac2b32":"code","c1ed4264":"code","6969c707":"code","fe7f2d14":"code","7940b1fb":"code","8551b278":"code","02fd2253":"code","3385be28":"code","f4cf0017":"code","0049699e":"code","102d9b74":"code","080847d4":"code","2728e682":"code","e5ab8bff":"code","2c863b08":"code","4b46eb13":"markdown","042f6d30":"markdown","0d9877dc":"markdown","0590377f":"markdown","68aee36d":"markdown","7a3d56cb":"markdown","40f97af2":"markdown","031dd60a":"markdown","2aedadc0":"markdown","0037b26a":"markdown","253fcb35":"markdown","834bd90d":"markdown","8fc4d47f":"markdown","3684d3a1":"markdown","6b301422":"markdown","37cd0203":"markdown","f7e83375":"markdown","8a81328e":"markdown","ab29489f":"markdown","3fe50894":"markdown","17c49585":"markdown","8ed39ccd":"markdown","c139eee2":"markdown","d33b9f54":"markdown","469673d6":"markdown","1aaf0cff":"markdown","e76c9746":"markdown","34c7c99d":"markdown","e27eb3cf":"markdown","45cb2d4a":"markdown","d1b92f30":"markdown","d414967c":"markdown","0582a80a":"markdown","206467fc":"markdown","795f9a2c":"markdown","d163b743":"markdown","f131821c":"markdown","e8cb162d":"markdown","5a4bdea7":"markdown"},"source":{"267ba11d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","3e1f9fdc":"df=pd.read_csv(\"..\/input\/youtube-new\/USvideos.csv\")\ndf.head()","b0c3ada7":"print(df.shape)","765d872a":"df.dtypes","86682ca9":"df['trending_date']=pd.to_datetime(pd.Series(df['trending_date'].apply(lambda x:'20'+x[0:2]+'.'+x[6:]+'.'+x[3:5])))\ndf['publish_time']=pd.to_datetime(pd.Series(df['publish_time'].apply(lambda x:x[:19])))\ndf","8374b576":"df.dtypes","23d161ff":"df.isnull().sum()","cf4ac450":"df['description']=df['description'].fillna(\"\")\ndf.isnull().sum()","59f7c8ae":"day=df['trending_date'].dt.strftime ('%Y')\nmy_dict=(day.value_counts()).to_dict()\ncount= pd.DataFrame(list(my_dict.items()),columns = ['Trending year','No. Of Videos']) \nfig=plt.figure(figsize=(10,5))\nplt.bar(count['Trending year'],count['No. Of Videos'],color=['yellow', 'pink', 'cyan'],width=0.5)\nplt.xlabel(\"Trending Year\")\nplt.ylabel(\"No. Of Videos\")\nplt.show()","608484a3":"day=df['publish_time'].dt.day_name()\nmy_dict=(day.value_counts()).to_dict()\ncount= pd.DataFrame(list(my_dict.items()),columns = ['Publishing Day','No. Of Videos']) \nfig=plt.figure(figsize=(10,5))\nplt.bar(count['Publishing Day'],count['No. Of Videos'],color=['yellow', 'pink', 'cyan'],width=0.5)\nplt.xlabel(\"Publishing Day\")\nplt.ylabel(\"No. Of Videos\")\nplt.show()","aae323f2":"hour=df.publish_time.apply(lambda x: x.strftime(\"%H\"))\nmy_dict=(hour.value_counts()).to_dict()\ncount= pd.DataFrame(list(my_dict.items()),columns = ['Publishing Hour','No. Of Videos']) \nfig=plt.figure(figsize=(10,5))\nplt.bar(count['Publishing Hour'],count['No. Of Videos'],color=['yellow', 'pink', 'cyan'],width=0.5)\nplt.xlabel(\"Publishing Hour\")\nplt.ylabel(\"No. Of Videos\")\nplt.show()","81dedf08":"df['trending days_difference']=df.apply(lambda row: (row.trending_date-row.publish_time).days, axis = 1) \ndf","255cb821":"df['trending days_difference'].replace({-1:0},inplace=True)","a3a828c8":"print(df['trending days_difference'].max())\nprint(df['trending days_difference'].min())","0eb93681":" pd.options.display.float_format = \"{:.2f}\".format\ndf.describe()","59ce040c":"numerical=['views','likes','dislikes','comment_count','trending days_difference']\ncolor=['cyan','pink','yellow','orange','blue']\nfig, ax = plt.subplots(3, 2, figsize=(20, 20))\nfor var,i,subplot in zip(numerical,color, ax.flatten()):\n    ax=df[var].hist(ax=subplot,ylabelsize=16,xlabelsize=16,color=i)\n    ax.set_xlabel(var,fontsize=20)\n    ax.set_ylabel(\"No Of Videos\",fontsize=20)\nfig.tight_layout()    ","1b1a52a5":"r=[10000000,100000,15000,30000,40]\nfig, ax = plt.subplots(3, 2, figsize=(20, 20))\nfor var,i,j,subplot in zip(numerical,r,color, ax.flatten()):\n    ax=df[df[var]<=i][var].hist(ax=subplot,ylabelsize=16,xlabelsize=16,color=j)\n    ax.set_xlabel(var,fontsize=20)\n    ax.set_ylabel(\"No Of Videos\",fontsize=20)\nfig.tight_layout()    ","8eb5a78c":"x=[2000000,40000,2000,5000,15]\nfor i,j in zip(numerical,x):\n    c=df[i].loc[df[i]<=j].count()\/df[i].count()*100\n    print(i,c)","891cec82":"plt.scatter(df['views'],df['likes'])\nplt.xlabel(\"Views\",size=15)\nplt.ylabel(\"Likes\",size=15)\nplt.show()","0231adac":"df['category_id'].value_counts()","a1636686":"df['category_name'] = np.nan\ndf.loc[(df[\"category_id\"] == 1),\"category_name\"] = 'Film and Animation'\ndf.loc[(df[\"category_id\"] == 2),\"category_name\"] = 'Cars and Vehicles'\ndf.loc[(df[\"category_id\"] == 10),\"category_name\"] = 'Music'\ndf.loc[(df[\"category_id\"] == 15),\"category_name\"] = 'Pets and Animals'\ndf.loc[(df[\"category_id\"] == 17),\"category_name\"] = 'Sport'\ndf.loc[(df[\"category_id\"] == 19),\"category_name\"] = 'Travel and Events'\ndf.loc[(df[\"category_id\"] == 20),\"category_name\"] = 'Gaming'\ndf.loc[(df[\"category_id\"] == 22),\"category_name\"] = 'People and Blogs'\ndf.loc[(df[\"category_id\"] == 23),\"category_name\"] = 'Comedy'\ndf.loc[(df[\"category_id\"] == 24),\"category_name\"] = 'Entertainment'\ndf.loc[(df[\"category_id\"] == 25),\"category_name\"] = 'News and Politics'\ndf.loc[(df[\"category_id\"] == 26),\"category_name\"] = 'How to and Style'\ndf.loc[(df[\"category_id\"] == 27),\"category_name\"] = 'Education'\ndf.loc[(df[\"category_id\"] == 28),\"category_name\"] = 'Science and Technology'\ndf.loc[(df[\"category_id\"] == 29),\"category_name\"] = 'Non Profits and Activism'\ndf.loc[(df[\"category_id\"] == 43),\"category_name\"] = 'Shows'","bf72e293":"my_dict=(df['category_name'].value_counts()).to_dict()\ncount= pd.DataFrame(list(my_dict.items()),columns = ['Category','No. Of Videos']) \nfig=plt.figure(figsize=(10,5))\nplt.bar(count['Category'],count['No. Of Videos'],color=['yellow', 'pink', 'cyan'],width=0.5)\nplt.xticks(rotation=90)\nplt.xlabel(\"Category\",size=15)\nplt.ylabel(\"No. Of Videos\",size=15)\nplt.show()","8d35d47a":"a=df.groupby('category_id')\nc=a['category_name','likes'].max()\nprint(c)\nfig=plt.figure(figsize=(10,5))\nplt.bar(c['category_name'],c['likes'],color=['yellow', 'pink', 'cyan'],width=0.5)\nplt.xticks(rotation=90)\nplt.xlabel(\"Category\",size=15)\nplt.ylabel(\"Maximum Likes\",size=15)\nplt.show()","6743bc9b":"df.describe(include=\"object\")","aa0d9c60":"grouped = df.groupby(\"video_id\")\ngroups = []\nwanted_groups = []\nfor key, item in grouped:\n    groups.append(grouped.get_group(key))\n\nfor g in groups:\n    if len(g['title'].unique()) != 1:\n        wanted_groups.append(g)\n\nwanted_groups[0]","37089b22":"def contains_capitalized_word(s):\n    for w in s.split():\n        if w.isupper():\n            return True\n    return False\ndf[\"contains_capitalized\"] = df[\"title\"].apply(contains_capitalized_word)\nvalue_counts = df[\"contains_capitalized\"].value_counts().to_dict()\nplt.pie([value_counts[False], value_counts[True]], labels=['No', 'Yes'], colors=['black', 'orange'],startangle=45)\nplt.title('Title Contains Capitalized Word?')\nplt.show()","a023cb69":"df[\"contains_capitalized\"].value_counts(normalize=True)*100","504fedbe":"df[\"title_length\"]= df[\"title\"].apply(lambda x: len(x))\nax=df['title_length'].hist(color=\"pink\")\nax.axvline(df['title_length'].mean(), color='k', linestyle='dashed', linewidth=1)\nmin_ylim, max_ylim = plt.ylim()\nax.text(df['title_length'].mean(), max_ylim, 'Mean: {:.2f}'.format(df['title_length'].mean()))\nplt.xlabel(\"Title Length\",fontsize=15)\nplt.ylabel(\"No Of Videos\",fontsize=15)\nplt.show()","70f0f56d":"fig = plt.figure(figsize =(10, 7))\nplt.boxplot(df.title_length)\nplt.xlabel(\"title length\")\nplt.show()","2636b4ab":"plt.scatter(df['title_length'],df['likes'],color=\"yellow\")\nplt.xlabel(\"Title Length\",size=15)\nplt.ylabel(\"likes\",size=15)\nplt.show()","8ef48294":"cdf = df.groupby(\"channel_title\").size().reset_index(name=\"video_count\").sort_values(\"video_count\", ascending=False).head(20)\ncdf_sorted= cdf.sort_values('video_count')\nfig=plt.figure(figsize=(12,6))\nplt.barh(cdf_sorted['channel_title'],cdf_sorted['video_count'],color=['yellow', 'pink', 'cyan'])\nplt.xlabel(\"No. Of Videos\",size=18)\nplt.ylabel(\"Channel\",size=18)\nplt.show()","32c426fa":"value_counts = df[\"video_error_or_removed\"].value_counts().to_dict()\nplt.pie([value_counts[False], value_counts[True]], labels=['No', 'Yes'], colors=['black', 'orange'])\nplt.title('Video Error or Removed?')\nplt.show()","4d232c2a":"df[\"video_error_or_removed\"].value_counts()","53c5e28e":"value_counts = df[\"comments_disabled\"].value_counts().to_dict()\nplt.pie([value_counts[False], value_counts[True]], labels=['No', 'Yes'], colors=['black', 'orange'])\nplt.title('comments disabled?')\nplt.show()","c0d6825a":"value_counts = df[\"ratings_disabled\"].value_counts().to_dict()\nplt.pie([value_counts[False], value_counts[True]], labels=['No', 'Yes'], colors=['black', 'orange'])\nplt.title('ratings disabled?')\nplt.show()","70ac2b32":"len(df[(df[\"comments_disabled\"] == True) & (df[\"ratings_disabled\"] == True)].index)","c1ed4264":"fig=plt.figure(figsize=(15,10))\ndf2 = df.groupby(['comments_disabled', 'category_name'])['category_name'].count().unstack('comments_disabled').fillna(0)\ndf2.plot(kind='bar', stacked=True)\n\nplt.show()","6969c707":"df","fe7f2d14":"c=df.channel_title.value_counts()\nc=c[c>50]\nc","7940b1fb":"titles=list(c.index)\ntitles","8551b278":"data=df[df['channel_title'].isin(titles)]\ndata=data.reset_index()\ndata.drop(['index','video_id','trending_date','title','category_id','tags','thumbnail_link','description','publish_time'],axis=1,inplace=True)\ndata","02fd2253":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nfor i in data.columns:\n    if i in ['channel_title','comments_disabled','ratings_disabled','video_error_or_removed','category_name',\n           'contains_capitalized']:\n        data[i] = le.fit_transform(data[i])\ndata","3385be28":"X=data.drop('likes',axis=1)\ny=data.likes","f4cf0017":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score,mean_absolute_error","0049699e":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2, random_state = 0)\nprint(\"X_train: \",X_train.shape)\nprint(\"X_test: \",X_test.shape)\nprint(\"y_train: \",y_train.shape)\nprint(\"y_test: \",y_test.shape)","102d9b74":"from sklearn.linear_model import LinearRegression","080847d4":"model=LinearRegression()\nmodel.fit(X_train,y_train)","2728e682":"y_pred=model.predict(X_test)","e5ab8bff":"y_pred","2c863b08":"print(\"Mean Absolute Error on Training Set: \",mean_absolute_error(y_train,model.predict(X_train)))\nprint(\"Mean Absolute Error on Testing Set: \",mean_absolute_error(y_test,y_pred))\nprint(\"R-Squared Score on Training Set: \",r2_score(y_train,model.predict(X_train)))\nprint(\"R-Squared Score on Testing Set: \",r2_score(y_test,y_pred))","4b46eb13":"We see that the Entertainment category contains the largest number of trending videos with around 10,000 videos, followed by Music category with around 6,200 videos, followed by How to & Style category with around 4,100 videos, and so on.","042f6d30":"<h4>Reading the dataset<\/h4>\nThen we read the dataset file which is in csv format and getting a feel of our dataset by displaying its first few rows","0d9877dc":"<h5>Which channels have the largest number of trending videos?<\/h5>","0590377f":"We can see that title-length distribution resembles a normal distribution, where most videos have title lengths between 30 and 60 character approximately.\n","68aee36d":"<h5>Now we can see which categories have the largest number of trending videos<\/h5>","7a3d56cb":"<h5> Now we can see which publishing hours have the largest number of trending videos<\/h5>","40f97af2":"We can see that 44% of trending video titles contain at least a capitalized word.","031dd60a":"<h5>Now we can see which days of the week had the largest numbers of trending videos<\/h5>","2aedadc0":"We converted the 'trending_date' and 'publish_time' columns to datetime","0037b26a":"<h4>Plotting Histograms<\/h4>","253fcb35":"We note from the table above that:<br>\nThe average number of views of a trending video is 2,360,784. <br>The median value for the number of views is 681,861, which means that half the trending videos have views that are less than that number, and the other half have views larger than that number.<br>\nThe average number of likes of a trending video is 74,266, while the average number of dislikes is 3,711. The\nAverage comment count is 8,446 while the median is 1,856<br>\nHow useful are the observations above? Let's examine more.","834bd90d":"We can see that the number of trending videos published on Sunday and Saturday are noticeably less than the number of trending videos published on other days of the week.","8fc4d47f":"we can infer that majority of the videos that trend have 2 million views or less, 400k or less likes,2000 or less dislikes, 5000 comments or less and 15 or less days were taken for a video to trend  ","3684d3a1":"Finding the null values and filling them.","6b301422":"There are 6351 unique video IDs, we expect to have 6351 unique video titles also, because we assume that each ID is linked to a corresponding title. One possible interpretation is that a trending video had some title when it appeared on the trending list, then it appeared again on another day but with a modified title. Similar explaination applies for description column as well. \n\nTo verify our interpretation for title column, let's take a look at an example where a trending video appeared more than once on the trending list but with different titles","37cd0203":"We can see that this video appeared on the list with two different titles.","f7e83375":"there is s strong linear relation between the no of views and the no of likes on a video. We see that views and likes are truly positively correlated: as one increases, the other increases too\u2014mostly.","8a81328e":"<h5>How many trending videos have their ratings disabled?<\/h5>","ab29489f":"<h4>Importing some packages<\/h4>\nFirst, we import some Python packages that will help us analyzing the data, especially pandas for data analysis and matplotlib for visualization","3fe50894":"Music and entertainment have the most likes","17c49585":"We can see that the period between 2PM and 7PM, peaking between 4PM and 5PM, had the largest number of trending videos. We notice also that the period between 12AM and 1PM has the smallest number of trending videos. But why is that? Is it because people publish a lot more videos between 2PM and 7PM? Is it because how YouTube algorithm chooses trending videos?","8ed39ccd":"we verified our above inference.\n77% of our data trended with less than 2 million views, 68% of the videos that trended have 400k or less likes, 75% of the data have 2000 or less dislikes and so on.","c139eee2":"we can see that some videos trended on the same day they were published and for some videos it took 4214 days to trend after being published.","d33b9f54":"<h5>Reading the json file<\/h5>","469673d6":"<h4>Dataset collection years<\/h4>\nLet's see in which years the dataset was collected","1aaf0cff":"We made a new column 'category_name' containing the coressponding name of the category of the video","e76c9746":"<h5>How many trending videos have an error?<\/h5>","34c7c99d":"For a closer look at the histograms we will limit our range.","e27eb3cf":"<h5>How many trending video titles contain capitalized word?<\/h5>","45cb2d4a":"<h4>Description of numerical columns<\/h4>\nNow, let's see some statistical information about the numerical columns of our dataset","d1b92f30":"<h5>Now we will see which category has the maximum likes<\/h5>","d414967c":"<h4>Description on non-numerical columns<\/h4>\nAfter we described numerical columns previously, we now describe non-numerical columns","0582a80a":"<h4>Data cleaning<\/h4>","206467fc":"<h5>How many trending videos have their comments disabled?<\/h5>\n","795f9a2c":"<h5>How many videos have both comments and ratings disabled?<\/h5>","d163b743":"we get r-squared score of 0.89 which is pretty good.","f131821c":"By looking at the scatter plot, we can say that there is no relationship between the title length and the number of likes.","e8cb162d":"Now let's draw a scatter plot between title length and number of likes to see the relationship between these two variables","5a4bdea7":"<h4>Video title lengths<\/h4>\nLet's add another column to our dataset to represent the length of each video title, then plot the histogram of title length to get an idea about the lengths of trending video titles"}}