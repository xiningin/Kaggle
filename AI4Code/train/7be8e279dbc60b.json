{"cell_type":{"7f87dda8":"code","0b4f8c0b":"code","566a4657":"code","8bb6a09c":"code","38a260d4":"code","23eda9cf":"code","75a9d2e0":"code","ae71d903":"code","3ff2edb6":"code","e93f9f1d":"code","a0a68d9f":"code","bc8fb50e":"code","9082f0de":"code","75208eb1":"code","cb36f164":"code","0d1da4c4":"code","6e9bd68d":"code","6614acff":"code","4855b930":"code","d522d1e3":"code","6e85f0af":"code","6f578e68":"code","907de839":"code","8f14f16b":"markdown","2c96f6ac":"markdown","73e80f2d":"markdown","6df0af1d":"markdown","ae3dff01":"markdown","24b3d4f6":"markdown","222bc8db":"markdown","24ed7c48":"markdown","21ce29d6":"markdown","d47ea8b8":"markdown","a7f957dc":"markdown"},"source":{"7f87dda8":"# Data Manipulation:\nimport pandas as pd\nimport matplotlib as mpl\nimport seaborn as sns \n\n\n\n# Visualization:\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\n# Data tratament :\nfrom sklearn.preprocessing import StandardScaler \nfrom collections import Counter\nfrom sklearn.model_selection import train_test_split\n\n# Models:\nfrom sklearn.linear_model import LogisticRegression,RidgeClassifier,SGDClassifier,PassiveAggressiveClassifier\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.svm import SVC,LinearSVC,NuSVC\nfrom sklearn.neighbors import KNeighborsClassifier,NearestCentroid\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier,AdaBoostClassifier,GradientBoostingClassifier\nfrom sklearn.naive_bayes import GaussianNB,BernoulliNB\nfrom sklearn.ensemble import VotingClassifier\n\n# Evolution:\nfrom sklearn.metrics import precision_score,accuracy_score\nfrom sklearn.model_selection import RandomizedSearchCV,GridSearchCV,RepeatedStratifiedKFold","0b4f8c0b":"data = pd.read_csv(\"..\/input\/lung-cancer\/survey lung cancer.csv\")\ndata.head()","566a4657":"data.info()","8bb6a09c":"data.describe()","38a260d4":"plt.style.use(\"seaborn\")\ndata.hist(figsize=(25,25), bins=15)","23eda9cf":"plt.figure(figsize=(9,9))\nsns.histplot(data[['AGE', 'LUNG_CANCER']], x = \"AGE\", hue=\"LUNG_CANCER\")\nplt.title(\"\")\nplt.show()","75a9d2e0":"plt.figure(figsize=(9,9))\nsns.histplot(data[['AGE', 'GENDER']], x = \"AGE\", hue=\"GENDER\")\nplt.title(\"\")\nplt.show()","ae71d903":"plt.style.use(\"seaborn\")\nplt.figure(figsize=(9,9))\nsns.histplot(data[['GENDER', 'LUNG_CANCER']], x = \"GENDER\", hue=\"LUNG_CANCER\")\nplt.title(\"\")\nplt.show()","3ff2edb6":"plt.style.use(\"seaborn\")\nplt.figure(figsize=(15,8))\nplt.title(\"Genders\", fontsize=20, y=1.02)\nsns.countplot(x = data.GENDER ,palette=\"crest\")\nplt.show()","e93f9f1d":"data[\"GENDER\"] = data[\"GENDER\"].map({\"F\": 0, \"M\": 1})\ndata['LUNG_CANCER']= data['LUNG_CANCER'].map({'NO':0, \"YES\":1})","a0a68d9f":"data.info()","bc8fb50e":"# X data \nX = data.drop(\"LUNG_CANCER\", axis = 1)","9082f0de":"# y data \ny = data[\"LUNG_CANCER\"]\ny.head()","75208eb1":"x_train, x_test, y_train, y_test = train_test_split (X, y , test_size = 0.2, random_state = 35)","cb36f164":"len(x_test), len(x_train)","0d1da4c4":"plt.figure(figsize=(20,8))\nplt.title(\"Data before Scaling\", fontsize = 20, y=1.0)\nsns.boxenplot(data=x_train)\nplt.show()","6e9bd68d":"# Scaling data:\nscaler = StandardScaler()\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.transform(x_test)","6614acff":"plt.figure(figsize=(20,8))\nplt.title(\"Data after Scaling\", fontsize = 20, y=1.0)\nsns.boxenplot(data=x_train)\nplt.show()","4855b930":"from warnings import filterwarnings\n","d522d1e3":"filterwarnings('ignore')","6e85f0af":"models = [(\"LR\", LogisticRegression(max_iter=1000)),\n          (\"SVC\", SVC()),\n          (\"KNC\", KNeighborsClassifier(n_neighbors=10)),\n          (\"DTC\", DecisionTreeClassifier()),\n          (\"GNB\", GaussianNB()),\n         (\"SGDC\", SGDClassifier()),\n         (\"Perc\", Perceptron()),\n          (\"NC\", NearestCentroid()),\n          (\"Ridge\", RidgeClassifier()),\n          (\"BNB\", BernoulliNB()),\n          (\"RF\", RandomForestClassifier()),\n          (\"ADA\", AdaBoostClassifier()),\n          (\"XGB\", GradientBoostingClassifier()),\n          (\"PAC\", PassiveAggressiveClassifier()) \n    \n]\n\nresults = []\nnames=[]\nfinalresults=[]\n\nfor name, model in models:\n    model.fit(x_train, y_train)\n    model_results = model.predict(x_test)\n    score= precision_score(y_test, model_results, average='macro')\n    results.append(score)\n    names.append(name)\n    finalresults.append((name,score))","6f578e68":"finalresults.sort(key=lambda k:k[1], reverse=True)\nfinalresults","907de839":"# Grid search and space:\nmodels_params= {\n    \"RF\":{'model':RandomForestClassifier(),\n         'params':{\n             'max_features': list(range(1,10)),\n             'n_estimators':[10,100,1000]\n         }}}\n\n# Evaluation:\n\ncv = RepeatedStratifiedKFold(n_splits=5,n_repeats=20)\n\n# Search:\nscores=[]\n\nfor model_name, params in models_params.items(): \n    rs = RandomizedSearchCV(params['model'], params['params'], cv=cv , n_iter=10)\n    rs.fit(x_train,y_train)\n    scores.append([model_name,dict(rs.best_params_),rs.best_score_])\ndata=pd.DataFrame(scores,columns=['Model','Parameters','Score'])\ndata","8f14f16b":"# <span style=\"color:#32936f;\"> <center>Data Visualization <\/span>","2c96f6ac":"# <span style=\"color:#32936f;\"> Hiperparameter Tuning <\/span>","73e80f2d":"# <span style=\"color:#32936f;\"> <center>Data Tratament <\/span>","6df0af1d":"# <html>\n<div  style=\"background-color:w; color:#636363;border:#63b365; border-width:5px;border-radius:10px 10px; border-style:solid;\">\n\n    \n<p><center><img src=\"https:\/\/drive.google.com\/thumbnail?id=1yPGYO8HkTanlqsIXozDIUvUVuvawAdG_\" width =\"6%\"  \/><font size=8> <b>Lung Cancer Prediction<\/b><\/font> <\/p>\n\n\n<\/div>","ae3dff01":"# <span style=\"color:#32936f;\"> Scaling the data <\/span>","24b3d4f6":"# <span style=\"color:#32936f;\"> <center>Importing Dataset <\/span>","222bc8db":"<div  style=\"background-color:w; color:#636363;border:indianred; border-width:2px; border-style:solid;\">\n\n   \n<p ><font size=4><b>Note:<\/font> <\/p>\n<p><font size = 4>\nThere isn't null values in dataset\n    The data \"GENDER\" and \"LUNG_CANCER\" are objects : transform to numerc values \n<\/p>\n<\/div>","24ed7c48":"# <span style=\"color:#32936f;\"> Spot Checking <\/span>","21ce29d6":"# <span style=\"color:#32936f;\"> <center>Libraries <\/span>","d47ea8b8":"<div  style=\"background-color:w; color:#636363;border:indianred; border-width:2px; border-style:solid;\">\n\n   \n<p ><font size=4><b>Note:<\/font> <\/p>\n<p><font size = 4>\nThere are some columns where the values are object, we need transform this values in numerical \n<\/p>\n<\/div>","a7f957dc":"# <span style=\"color:#32936f;\"> Splitting the data <\/span>"}}