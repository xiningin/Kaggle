{"cell_type":{"5719f959":"code","40b255a7":"code","0af30573":"code","e380a005":"code","d9ac6572":"code","0138698f":"code","64a4da4f":"code","33b4f4f7":"code","da363d43":"code","6a100a91":"code","1e52820c":"code","241fe0de":"code","2989574f":"code","039f15ec":"code","7c38776a":"code","065e589a":"code","e3023ec2":"code","84d3c2c4":"code","3df70904":"code","4aa585e1":"code","eb47df63":"code","5096756e":"code","32a3e6f7":"code","6cbb8e43":"code","b5c4393e":"code","0f3cd72c":"code","c55292e7":"code","d8fcba45":"code","e6066af0":"code","f78d7054":"code","732b0d57":"code","857586b1":"code","163135dc":"code","35cb362c":"code","7fbd5c19":"code","4e474404":"code","3f7951fc":"code","87a6e6e9":"markdown","e130d0a0":"markdown","2e0ea67b":"markdown","9c957646":"markdown","cefafb75":"markdown","c2c0520a":"markdown","de559b40":"markdown","c7ac8e78":"markdown","dd030d87":"markdown","26f3ce69":"markdown","ecc62cdf":"markdown","de5f7dc8":"markdown","017f3a17":"markdown","27024169":"markdown","7ed06cbd":"markdown","546348f3":"markdown","9147acd0":"markdown","6a834601":"markdown","7d064313":"markdown","d15a0374":"markdown","4ad33fb6":"markdown","00d7d95b":"markdown","c19aaff0":"markdown","2e32384e":"markdown","b19b964d":"markdown","79f1841a":"markdown","534cb851":"markdown"},"source":{"5719f959":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n\n%matplotlib inline","40b255a7":"# Importing Data set\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\ndata = pd.read_csv('\/kaggle\/input\/netflix-shows\/netflix_titles.csv')\ndataCopy = data\ndata.head(10)","0af30573":"#Checking columns names\nlist(data.columns)","e380a005":"data.info()","d9ac6572":"data.shape[0] # number of entries","0138698f":"sns.set(style='darkgrid')\nsns.countplot(x = 'type',data=data,palette='Set1')","64a4da4f":"plt.figure(figsize=(12,10))\nplt.title('Top 15 Countries on the basis of Content Creation')\nsns.countplot(data=data,y='country',order=data['country'].value_counts().index[0:15],palette='Accent')","33b4f4f7":"plt.figure(figsize=(12,10))\nsns.set(style='darkgrid')\nax = sns.countplot(y='release_year',data=data,order=data['release_year'].value_counts().index[0:15],palette='Set1')","da363d43":"movie = data[data['type']=='Movie']\n#movie.columns\nmovie.head(5)","6a100a91":"duration = []\nmovie = movie[movie['duration'].notna()]\nfor i in movie['duration']:\n    duration.append(int(i.strip('min')))","1e52820c":"plt.figure(1,figsize=(15,10))\nplt.title(\"Duration of Movies\")\nsns.distplot(duration)","241fe0de":"plt.figure(figsize=(15,8))\nplt.title('Directors with Most movies')\nsns.countplot(y='director',data=movie,order=movie['director'].value_counts().index[0:10],palette='Set3')","2989574f":"genrePerMovie=[]\ntotalMoveGenre = []\nsetGenre = set()\nset1 = set()\nfor i in movie['listed_in']:\n    if(type(i)==str):\n        g = i.split(',')\n        for genre in g:\n            setGenre.add(genre.strip())","039f15ec":"totalMovieGenre = list(setGenre)\n#len(totalMovieGenre)","7c38776a":"%%time\nstoreCountOfGenre = {}\ncurrentGenre = []\nfor actualGenre in totalMovieGenre:\n    count = 1\n    for i in movie['listed_in']:\n        currentGenre = []\n        if(type(i)==str):\n            s=i.split(',')\n            for j in s:\n                currentGenre.append(j.strip())\n            if(actualGenre in currentGenre):\n                if actualGenre not in storeCountOfGenre:\n                    storeCountOfGenre[actualGenre] = 1\n                else:\n                    storeCountOfGenre[actualGenre] +=1","065e589a":"import operator\nimport itertools\n\nsorted_Genre = dict(sorted(storeCountOfGenre.items(), key=operator.itemgetter(1),reverse=True))\nfinalSortedListOfGenre = dict(itertools.islice(sorted_Genre.items(),10))\n\nkeysGenre = list(finalSortedListOfGenre.keys())\nkeysGenre = keysGenre[1:]\nvaluesGenre = list(finalSortedListOfGenre.values())\nvaluesGenre = valuesGenre[1:]\n\n#[1:] is done because after all this calculations, 'Internal Movies' came up in the top as most movie had this Genre.\n#But 'International Movie' is not a genre. So a temporary solution is to remove 1st element from value and key list","e3023ec2":"import matplotlib.cm as cm\nfrom matplotlib.colors import Normalize\nfrom numpy.random import rand\ndataColorGenre = [2, 3, 5, 6, 8, 12, 7, 5,9,11,10,4]\nmy_cmap = cm.get_cmap('ocean')\nmy_norm = Normalize(vmin=0, vmax=8)\n\nplt.figure(figsize=(10,7))\nplt.bar(keysGenre, valuesGenre, color=my_cmap(my_norm(dataColorGenre)))\nplt.xticks(rotation=90)\nplt.show()","84d3c2c4":"castPerMovie=[]\ntotalCast = []\nset1 = set()\nfor i in movie['cast']:\n    if(type(i)==str):\n        s = i.split(',')\n        for j in s:\n            set1.add(j.strip())","3df70904":"# Run this to check if any cast has repeated ( CROSS VERIFY IF THE ABOVE CODE WORKS AS EXPECTED)\n#from collections import Counter\n#Counter(l)","4aa585e1":"totalCast = list(set1)\n#len(totalCast)","eb47df63":"%%time\nstoreCounts = {}\ncurrentCasts = []\nfor actualCast in totalCast:\n    count = 1\n    for i in movie['cast']:\n        currentCasts = []\n        if(type(i)==str):\n            s=i.split(',')\n            for j in s:\n                currentCasts.append(j.strip())\n            if(actualCast in currentCasts):\n                if actualCast not in storeCounts:\n                    storeCounts[actualCast] = 1\n                else:\n                    storeCounts[actualCast] +=1","5096756e":"sorted_d = dict(sorted(storeCounts.items(), key=operator.itemgetter(1),reverse=True))\nfinalSortedList = dict(itertools.islice(sorted_d.items(),20))\n\nkeys = finalSortedList.keys()\nvalues = finalSortedList.values()","32a3e6f7":"plt.figure(figsize=(10,5))\n\ndataColorDirector = [2, 3, 5, 6, 8, 12, 7, 5,9,11,10,4]\nmy_cmap = cm.get_cmap('rainbow')\nmy_norm = Normalize(vmin=0, vmax=8)\n\nplt.bar(keys,values,color=my_cmap(my_norm(dataColorDirector)))\nplt.xticks(rotation=90)","6cbb8e43":"data = dataCopy\nseries = data[data['type']=='TV Show']\nseries.head(5)","b5c4393e":"durationSeries = []\ntvshow = series[series['duration'].notna()]\nfor i in tvshow['duration']:\n    durationSeries.append(int(i.strip('Season')))\n\nplt.figure(figsize=(12,10))\nplt.title('Average no. of Seasons of TV Shows')\nsns.distplot(durationSeries)","0f3cd72c":"setCountry = set()\nfor country in series['country']:\n    if(type(country) == str):\n        s = country.split(',')\n        for singleCountry in s:\n            setCountry.add(singleCountry.strip())","c55292e7":"#setCountry\ntotalCountriesForSeries = list(setCountry)\n#len(totalCountriesForSeries)","d8fcba45":"%%time\ncurrentCountries = []\ncountCountryTvShows = dict()\nfor singleCountry in totalCountriesForSeries:\n    currentCountries = []\n    for country in series['country']:\n        if(type(country)==str):\n            s = country.split(',')\n            for j in s:\n                currentCountries.append(j.strip())\n            if(singleCountry in currentCountries):\n                if(singleCountry not in countCountryTvShows):\n                    countCountryTvShows[singleCountry] = 1\n                else:\n                    countCountryTvShows[singleCountry]+=1","e6066af0":"sorted_countCountriesTvShows = dict(sorted(countCountryTvShows.items(), key=operator.itemgetter(1),reverse=True))\nfinalSortedDictTvShows = dict(itertools.islice(sorted_countCountriesTvShows.items(),10))\n\nkeys = finalSortedDictTvShows.keys()\nvalues = finalSortedDictTvShows.values()","f78d7054":"#finalSortedDictTvShows\n\nplt.figure(figsize=(10,5))\n\ndataColorDirector = [1, 2, 3, 4, 5, 6, 7, 8,9,10,11,12]\nmy_cmap = cm.get_cmap('jet')\nmy_norm = Normalize(vmin=0, vmax=8)\n\nplt.bar(keys,values,color=my_cmap(my_norm(dataColorDirector)))\nplt.xticks(rotation=90)","732b0d57":"%%time\ncastPerShow=[]\ntotalCastTvShow = []\ntvShowset = set()\nfor i in series['cast']:\n    if(type(i)==str):\n        s = i.split(',')\n        for j in s:\n            tvShowset.add(j.strip())\n            \ntotalCastTvShow = list(tvShowset)\nlen(totalCastTvShow)","857586b1":"%%time\nstoreCountCastTvShow = {}\ncurrentCastsTvShow = []\nfor actualTvShowCast in totalCastTvShow:\n    for i in series['cast']:\n        currentCastsTvShow = []\n        if(type(i)==str):\n            s=i.split(',')\n            for j in s:\n                currentCastsTvShow.append(j.strip())\n            if(actualTvShowCast in currentCastsTvShow):\n                if actualTvShowCast not in storeCountCastTvShow:\n                    storeCountCastTvShow[actualTvShowCast] = 1\n                else:\n                    storeCountCastTvShow[actualTvShowCast] +=1\n                    \nsortedCastTvShow = dict(sorted(storeCountCastTvShow.items(), key=operator.itemgetter(1),reverse=True))\nfinalSortedListTvShowCast = dict(itertools.islice(sortedCastTvShow.items(),10))\n\nkeys = finalSortedListTvShowCast.keys()\nvalues = finalSortedListTvShowCast.values()","163135dc":"plt.figure(figsize=(10,5))\n\ndataColorDirector = [12, 11, 10, 9, 8, 7, 6, 5,4,3,2,1]\nmy_cmap = cm.get_cmap('flag')\nmy_norm = Normalize(vmin=0, vmax=8)\n\nplt.bar(keys,values,color=my_cmap(my_norm(dataColorDirector)))\nplt.title(\"Top 10 Casts with no. of Shows\")\nplt.xticks(rotation=90)","35cb362c":"genrePerShow=[]\ntotalGenreShow = []\nsetGenreShow = set()\nsetShowGenre = set()\nfor i in series['listed_in']:\n    if(type(i)==str):\n        g = i.split(',')\n        for genre in g:\n            setShowGenre.add(genre.strip())\n            \ntotalShowGenre = list(setShowGenre)\nlen(totalShowGenre)","7fbd5c19":"%%time\nstoreCountOfShowGenre = {}\ncurrentShowGenre = []\nfor actualShowGenre in totalShowGenre:\n    for i in series['listed_in']:\n        currentShowGenre = []\n        if(type(i)==str):\n            s=i.split(',')\n            for j in s:\n                currentShowGenre.append(j.strip())\n            if(actualShowGenre in currentShowGenre):\n                if actualShowGenre not in storeCountOfShowGenre:\n                    storeCountOfShowGenre[actualShowGenre] = 1\n                else:\n                    storeCountOfShowGenre[actualShowGenre] +=1","4e474404":"sortedShowGenre = dict(sorted(storeCountOfShowGenre.items(), key=operator.itemgetter(1),reverse=True))\nfinalSortedListOfShowGenre = dict(itertools.islice(sortedShowGenre.items(),11))\n\nkeysShowGenre = list(finalSortedListOfShowGenre.keys())\nkeysShowGenre = keysShowGenre[1:]\n\nvaluesShowGenre = list(finalSortedListOfShowGenre.values())\nvaluesShowGenre = valuesShowGenre[1:]\n\n#print(keysShowGenre,valuesShowGenre)\n#[1:] is done because after all this calculations, 'Internal Movies' came up in the top as most movie had this Genre.\n#But 'International Movie' is not a genre. So a temporary solution is to remove 1st element from value and key list","3f7951fc":"dataColorGenre = [2, 3, 5, 6, 8, 12, 7, 5,9,11,10,4]\nmy_cmap = cm.get_cmap('ocean')\nmy_norm = Normalize(vmin=0, vmax=8)\n\nplt.figure(figsize=(10,7))\nplt.bar(keysShowGenre, valuesShowGenre, color=my_cmap(my_norm(dataColorGenre)))\nplt.title(\"Top 10 Genre in TV Shows\")\nplt.xticks(rotation=90)\nplt.show()","87a6e6e9":"## Country with most no. of available TV Shows","e130d0a0":"## Importing Libraries and Data set","2e0ea67b":"Shows with genre TV Dramas are appx 600 followed by Comedies and Crime Tv Shows","9c957646":"Most number of Movies run for 90 minutes.","cefafb75":"## TV Series","c2c0520a":"## Genre with most number of TV Shows","de559b40":"US Produces most number of shows!","c7ac8e78":"Most of the TV Shows in Netflix have 1 Season","dd030d87":"<H2>What is the average duration of Movies in Netflix?<\/H2>","26f3ce69":"Dramas tops the list followed by Comedy Movies and then Documentries","ecc62cdf":"Raul Campos has directed Most Number of Movies","de5f7dc8":"Takahiro Sakurai has most number of shows in Netflix","017f3a17":"#  Number of Movies vs Number of Series","27024169":"In 2018 Most number of shows and movies were added!","7ed06cbd":"## Average No. of Seasons in TV Shows","546348f3":"# Which country creates most number of Shows\/Movies in Netflix?","9147acd0":"## Checking out data types and missing data","6a834601":"All these countries have 1600+ tv shows available in their Country","7d064313":"## Most movies from a Specific Genre","d15a0374":"Anupam Kher tops the list with most number of movies","4ad33fb6":"## Cast with Most number of TV Shows","00d7d95b":"We have some missing values in Director, Country, Cast and Date added. We will deal with it when we visualize it","c19aaff0":"<H1> MOVIES <\/H1>","2e32384e":"## Director with Most movies","b19b964d":"We see that Netflix has way more number of Movies than TV Shows","79f1841a":"## In which year highest number of Shows were added?","534cb851":"## Casts with most number of Movies in Netflix"}}