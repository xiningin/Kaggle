{"cell_type":{"b4979747":"code","af900b8b":"code","45cdd2d3":"code","ca5e514d":"code","3cde8b0c":"code","9d4ee0a8":"markdown"},"source":{"b4979747":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","af900b8b":"from sklearn.metrics import cohen_kappa_score\ndef quadratic_kappa(y_hat, y):\n    return torch.tensor(cohen_kappa_score(torch.argmax(y_hat,1), y, weights='quadratic'),device='cuda:0')","45cdd2d3":"from fastai.vision import *\nfrom shutil import copyfile\nnum_folds = 5\ndf = pd.read_csv('..\/input\/aptos2019-blindness-detection\/sample_submission.csv')\nbase_image_dir = os.path.join('..', 'input\/aptos2019-blindness-detection\/')\ntest_dir = os.path.join(base_image_dir,'test_images\/')\ndf['path'] = df['id_code'].map(lambda x: os.path.join(test_dir,'{}.png'.format(x)))\ndf = df.sample(frac=1).reset_index(drop=True) #shuffle dataframe\ndf.head(10)\n\nfor i in range(num_folds):\n    copyfile(\"..\/input\/aptos-4fold-models\/model\" + str(i)+\".pkl\",\"..\/model\" + str(i)+\".pkl\")\n        \ntest = ImageList.from_df(df,Path('.'),cols='path')\npredictions = torch.from_numpy(np.zeros((len(df))))\nfor i in range(num_folds):\n    learn = load_learner('..\/',file = 'model'+str(i)+'.pkl',test=test)\n    preds, _ = learn.get_preds(ds_type=DatasetType.Test)\n    predictions = predictions + preds.argmax(dim=-1).double()\n","ca5e514d":"predictions = torch.round(predictions\/num_folds)\nprint(predictions)","3cde8b0c":"df = df.drop(columns=['path'])\ndf.diagnosis = predictions.numpy().astype(int)\ndf.head(10)\ndf.to_csv('submission.csv',index=False)","9d4ee0a8":"\n** PLEASE UPVOTE BEFORE YOU FORK **\n\nThis is an inference kernel for training a 5-fold model for the APTOS 2019 competition. We see ~0.045 increase in LB score.\n\nNote: due to my mistake, I messed up the name of the dataset. It is actually 5 folds though the directory says 4 folds."}}