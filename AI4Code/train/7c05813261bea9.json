{"cell_type":{"20549af2":"code","d8e41fe2":"code","e0d38bf9":"code","981bef5a":"code","68d38e26":"code","31152c25":"code","448eb934":"code","4ce5e11e":"code","81ae9527":"code","edf8033b":"code","a66883a9":"code","11e709ef":"code","4b1fc57d":"code","5cf677cc":"markdown","1f15a170":"markdown","e0872147":"markdown","ca02a316":"markdown","82bc5ba2":"markdown","f86c79d3":"markdown","4d87335f":"markdown","fbab71e4":"markdown","7c3faeb5":"markdown","915418ef":"markdown","468414cc":"markdown"},"source":{"20549af2":"import tensorflow as  tf\nimport numpy as np\nfrom tensorflow import keras","d8e41fe2":"print(\"tensorflow verion :\",tf.__version__)","e0d38bf9":"print(\"Eager mode enabled :\",tf.executing_eagerly())","981bef5a":"print(\"GPU\", \"Available\" if tf.config.list_physical_devices('GPU') else \"Notavailable\")","68d38e26":"model = tf.keras.Sequential([keras.layers.Dense(units=1, input_shape=[1])])","31152c25":"model.compile(optimizer='sgd',loss='mean_squared_error')","448eb934":"X_train = np.array([2.50, 3.55, 4.50, 5.60, 6.99, 7.23, 8.45, -2.50, -3.55, -4.50, -5.60, -6.99, -7.23, -8.45,], dtype = float)\nY_train = np.array([14.50, 19.75, 24.50, 30.00, 36.95, 38.15, 44.25, -10.50, -15.75, -20.50, -26.00, -32.95, -34.15, -40.25], dtype = float)","4ce5e11e":"import matplotlib.pyplot as plt\nplt.scatter(X_train, Y_train, color = 'blue')\nplt.show()","81ae9527":"from statistics import mean\ndef prediction (x):\n  m = (mean(X_train)*mean(Y_train)-mean(X_train*Y_train))\/(mean(X_train)*mean(X_train)-mean(X_train*X_train))\n  b = mean(Y_train) - m*mean(X_train)\n  y = m *x +b\n  return y","edf8033b":"prediction(10)","a66883a9":"model.fit(X_train, Y_train, epochs=500)","11e709ef":"model.predict([10.00])","4b1fc57d":"model.get_weights()","5cf677cc":"Now, we predict using this pattern (without tensorflow)","1f15a170":"*Its not a problem of deep learning or tensor flow, its just for understanding. *\n\nFirst tensorflow, to ease we use tf np for numpy for neural network, we import keras a set of sequential layers","e0872147":"Providing data, where\u2019s relation Y_train = 5 * X_train + 2 (y = m * x + c)","ca02a316":"Enable executed eagerly, to execute any operation immediately and return value to python","82bc5ba2":"First, we find a pattern which is a linear equation(Y = 5 * X + 2). Using this pattern , we get 52.00 for 10 Secondly, Model predict 51.999916 for 10, which pattern it used? Lets see..\n\nModel use some internal variable, what\u2019s this","f86c79d3":"Next we will create the simplest possible neural network.\n\nIt has 1 layer, and that layer has 1 neuron, and the input shape with just 1 value and then Assembling the layers into a sequential model.","4d87335f":"Now, lets check what version of tensor we uesd","fbab71e4":"Now, we check GPU available or Notavailable","7c3faeb5":"lets see, Is there any pattern of Stateline\n\nYES,Stateline","915418ef":"Now, we conclude that model also use Y = 52.00*X + 1.999918(~ 2.00)","468414cc":"Now, we need to compile the model defining two function . 1) loss function 2) optimizer function\n\n1) Loss function: to calculate how far the actual value\n\n2) Optimizer function: to reduce loss , using neural network internal values"}}