{"cell_type":{"7e9df118":"code","fe4cfca0":"code","9e7544a6":"code","3af373d3":"markdown"},"source":{"7e9df118":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","fe4cfca0":"import sys\npackage_path = '\/kaggle\/input\/efficientnet100minimal\/'\nsys.path.append(package_path)","9e7544a6":"import efficientnet.keras as efn \nmodel = efn.EfficientNetB2(include_top=False, input_shape=(128,128,3), weights=None, pooling='avg')\n# now this would usually download the weights, but because this is offline we will import \n# the weights from another datasource\n# just be sure to add the matching b0 to b7 number, depending on which model you started above\nmodel.load_weights('..\/input\/efficientnetb0b7-keras-weights\/efficientnet-b2_weights_tf_dim_ordering_tf_kernels_autoaugment_notop.h5')","3af373d3":"# Tutorial\n\nBasically just wrapped the model from https:\/\/github.com\/qubvel\/efficientnet into a dataset:\n- https:\/\/www.kaggle.com\/guesejustin\/efficientnet100minimal\n\nHope you will enjoy!\n\nFor further questions shoot me a message or https:\/\/www.linkedin.com\/in\/justin-guese\/"}}