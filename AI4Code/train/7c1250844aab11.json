{"cell_type":{"4821f7c6":"code","20b733e8":"code","e8b33404":"code","9873135b":"code","80d16d89":"code","0e19a76e":"code","a081977f":"code","d6a9da03":"code","35137bb6":"code","b30381b3":"code","1b4277ee":"code","ca2e869e":"code","c4c46226":"code","6cdb39bd":"code","fd7e8956":"code","102016b9":"code","a8878bc9":"code","c00d458f":"code","09578c42":"code","b1fe4b20":"code","4dda80ae":"code","147bc9c5":"code","7b7cb0ad":"code","1f3749dc":"code","942182f3":"code","9ae22d0f":"markdown","89b6343c":"markdown","6d42df64":"markdown","dafdb73b":"markdown","5c079958":"markdown","6ccfc3fc":"markdown","c69390f1":"markdown","5cee642e":"markdown","683849f6":"markdown","3a15887e":"markdown","8cee4934":"markdown","c77e58f9":"markdown","74cf81fc":"markdown","0a59930e":"markdown","7942fcc5":"markdown","9d860131":"markdown","d17f733e":"markdown","870618da":"markdown","66820ae6":"markdown"},"source":{"4821f7c6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","20b733e8":"# import data\ndata =pd.read_csv(\"..\/input\/pokemon.csv\")\n# I took sample for examine data\ndata.sample(10)","e8b33404":"data.loc[63:63]","9873135b":"nan=data[data['name']==\"NaN\"]\nnan","80d16d89":"data=data.drop(['#'],axis=1) # drop column\n# editing index number\ndata.index=range(1,801,1)","0e19a76e":"data.tail()","a081977f":"# editing columns name\ndata.rename(columns={\"Name\":\"name\"},inplace=True)\ndata.rename(columns={\"Type 1\":\"type1\"},inplace=True)\ndata.rename(columns={\"Type 2\":\"type2\"},inplace=True)\ndata.rename(columns={\"HP\":\"hp\"},inplace=True)\ndata.rename(columns={\"Attack\":\"attack\"},inplace=True)\ndata.rename(columns={\"Defense\":\"defense\"},inplace=True)\ndata.rename(columns={\"Sp. Atk\":\"sp_atk\"},inplace=True)\ndata.rename(columns={\"Sp. Def\":\"sp_def\"},inplace=True)\ndata.rename(columns={\"Speed\":\"speed\"},inplace=True)\ndata.rename(columns={\"Generation\":\"generation\"},inplace=True)\ndata.rename(columns={\"Legendary\":\"legendary\"},inplace=True)","d6a9da03":"data.columns","35137bb6":"plt.figure(figsize=(8,6))\nsns.barplot(x= data.type1.value_counts().index, y= data.type1.value_counts().values)\nplt.xticks(rotation=45)\nplt.grid()\nplt.show()","b30381b3":"plt.figure(figsize=(6,6))\nsns.barplot(x= data.type2.value_counts().index, y= data.type2.value_counts().values)\nplt.xticks(rotation=45)\nplt.grid()\nplt.show()","1b4277ee":"sort_legendary=data[data['legendary']==True] # filtred by legendary\nplt.figure(figsize=(6,6))\nsns.barplot(x= sort_legendary.type1.value_counts().index, y= sort_legendary.type1.value_counts().values)\nplt.xticks(rotation=45)\nplt.grid()\nplt.show()\n\n","ca2e869e":"plt.figure(figsize=(6,6))\nsns.barplot(x= sort_legendary.type2.value_counts().index, y= sort_legendary.type2.value_counts().values)\nplt.xticks(rotation=45)\nplt.grid()\nplt.show()","c4c46226":"filtre1 = sort_legendary.type1 ==\"Psychic\"\nfiltre2=sort_legendary.type2==\"Flying\"\nsort_legendary[filtre1 & filtre2]","6cdb39bd":"filtre1 = sort_legendary.type1 ==\"Dragon\"\nfiltre2=sort_legendary.type2==\"Fire\"\nsort_legendary[filtre1 & filtre2]","fd7e8956":"non_legendary=data[data['legendary']==False]\nplt.figure(figsize=(6,6))\nsns.barplot(x= non_legendary.type1.value_counts().index, y= non_legendary.type1.value_counts().values)\nplt.xticks(rotation=45)\nplt.grid()\nplt.show()","102016b9":"plt.figure(figsize=(6,6))\nsns.barplot(x= non_legendary.type2.value_counts().index, y= non_legendary.type2.value_counts().values)\nplt.xticks(rotation=60)\nplt.grid()\nplt.show()","a8878bc9":"filtre1 = non_legendary.type1 == \"Water\"\nfiltre2 = non_legendary.type2 == \"Flying\"\nnon_legendary[filtre1 & filtre2]","c00d458f":"filtre1 = non_legendary.type1 == \"Dragon\"\nfiltre2 = non_legendary.type2 == \"Flying\"\nnon_legendary[filtre1 & filtre2]","09578c42":"non_legendary[filtre1]","b1fe4b20":"plt.figure(figsize=(6,6))\nsns.barplot(x= non_legendary.type1.value_counts().index, y= non_legendary.type1.value_counts().values, alpha=0.5)\nsns.barplot(x= sort_legendary.type1.value_counts().index, y= sort_legendary.type1.value_counts().values)\nplt.xticks(rotation=45)\nplt.grid()\nplt.show()","4dda80ae":"plt.figure(figsize=(6,6))\nsns.barplot(x= non_legendary.type2.value_counts().index, y= non_legendary.type2.value_counts().values, alpha=0.5)\nsns.barplot(x= sort_legendary.type2.value_counts().index, y= sort_legendary.type2.value_counts().values)\nplt.xticks(rotation=45)\nplt.grid()\nplt.show()","147bc9c5":"sort_legendary.plot(kind=\"scatter\",x=\"attack\",y=\"defense\")","7b7cb0ad":"sort_legendary.plot(kind=\"scatter\",x=\"hp\",y=\"defense\",color=\"green\")\nsort_legendary.plot(kind=\"scatter\",x=\"hp\",y=\"attack\",color=\"red\")","1f3749dc":"sort_legendary.plot(kind=\"scatter\", x=\"speed\", y=\"attack\")\nsort_legendary.plot(kind=\"scatter\", x=\"speed\", y=\"defense\")\nsort_legendary.plot(kind=\"scatter\", x=\"speed\", y=\"hp\")","942182f3":"data.plot(kind=\"scatter\", x=\"defense\", y=\"attack\", color=\"green\", grid=True)\n","9ae22d0f":"\nI saw that '#' column on the chart. But it is not beneficial for us. I can drop of that column from the chart. And then I'll edit columns name.","89b6343c":"The Flying is the most crowded group of type 2  for the legendary pokemons. Next, I'll examine Flying and Pyschic skill in the legendary pokemons.","6d42df64":"This data has 800 rows and 12 columns. And I am going to examine this data if pokemons legendary or not. First of all, I added numpy, pandas etc. and then I imported the data. ","dafdb73b":"I want to see pokemons named 'NaN' on the chart. But I couldnt find any of them. I will wait your comment about this topic. I think the data is wrong but it's not important for now.","5c079958":"That is enough. I'll see the defense-attack relation of all data.","6ccfc3fc":"There are outlier values in the graphic. But usually there are relation between two values.\n\n\nI tried to explain something with my weak English. I'm gonna improve that kernel as long as I study data analysis. Best regards...","c69390f1":"I think that is interesting. Flying group is the least crowded group by type1 but it is the most crowded group by type2. So, Pokemons are not prefer flying the first feature but they prefer flying as a second feature. Wisely, If I was a pokemon, I would have tought like that too.\n\nFor the next step, I'll examine legendary pokemon count of groups by type1. Let's see.\n","5cee642e":"Now, I want to see the differences of between legendary and non-legendary pokemons.","683849f6":"We can see that, there is no relation between attack and defense. Let's see HP and defense , HP and attack graphic.\n","3a15887e":"I edited columns name. For the next step,I want to sort the pokemons by their type and I will examine the population of types.\n\nIn the section below.I worked on type1.","8cee4934":"Interesting! We have a pokemon named 'NaN' on 62. rows. Is that pokemon's name ? Or is that a problem ?  ","c77e58f9":"No relation again.","74cf81fc":"The most crowded group is Water and the least crowded group is Flying by type1 feature.\n\nNext, I'll examine by type2.","0a59930e":"The most crowded group is Pycshic group.Second is Dragon group. Next, I'll examine legendary pokemons by type2. \n","7942fcc5":"\nThere is no relation again. Now, I will examine speed and attack, speed and HP, speed and defense.\nBu de\u011ferler aras\u0131nda da yine bir korelasyon g\u00f6r\u00fclmemektedir. \u015eimdi speed ile attack inceleyelim.","9d860131":"Those have same ratio by type1.","d17f733e":"The most used type1 skill is the physic and the most used type2 skill is flying and there is only one legendary pokemon that uses these two attiributes together.Lugia.\n\nLet's see non-legendary pokemons.","870618da":"Those have same ratio by type2.\n\nNext I want to see corelation of attack and defense value using by scater plot. ","66820ae6":"The most crowded group is Water in type1 and the most crowded group is Flying in type2. Next, I'll examine water for type1 and flying for type2 in the non-legendary pokemons.\n"}}