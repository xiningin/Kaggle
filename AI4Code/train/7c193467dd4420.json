{"cell_type":{"6f3880e6":"code","adc2a5ca":"code","451f26b4":"code","fd40e97c":"code","972422d6":"code","1f64c20f":"code","1fd17e94":"code","983da2a9":"code","380894fa":"code","c15c0528":"code","5d5418d5":"code","56bf7a46":"code","654b5d45":"code","b0b32297":"code","a673e553":"markdown","3ca8ab20":"markdown"},"source":{"6f3880e6":"import pandas as pd\nimport numpy as np\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import OneHotEncoder\n\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import RandomForestRegressor\n\nfrom sklearn.metrics import roc_auc_score\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","adc2a5ca":"# Reading the datasets \n\nX_train =pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/X_train.csv')\nX_test = pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/X_test.csv')\ny_train = pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/y_train.csv')","451f26b4":"# 2. EDA\nX_train","fd40e97c":"# 3. Getting value counts for Columns in the dataset \n\nprint('Train')    \nfor col in X_train.select_dtypes(include=object):\n    target = X_train[col]\n    print('--------------')\n    print(col)\n    print(target.value_counts())\n\nprint('\\n\\n\\nTest')    \nfor col in X_test.select_dtypes(include=object):\n    target = X_test[col]\n    print('--------------')\n    print(col)\n    print(target.value_counts())    ","972422d6":"# cleaning gender values\n########################\nX_train['Gender'] = X_train['Gender'].replace({' male' : 'Male', 'female' : 'Female'})  \nprint(X_train['Gender'].value_counts())\n\nX_test['Gender'] = X_test['Gender'].replace({' male' : 'Male', 'female' : 'Female'})\nprint(X_test['Gender'].value_counts())","1f64c20f":"# 4.  Looking for any NULL values \nprint(X_train.isnull().sum())     \nprint(X_test.isnull().sum())","1fd17e94":"# 5.  droping some columns from the dataset \n\nX_train = X_train.drop(['CustomerId', 'Surname'], axis=1)\n\nX_test_Id = X_test['CustomerId']\nX_test = X_test.drop(['CustomerId', 'Surname'], axis=1)\n\ny_train = y_train[['Exited']]","983da2a9":"# 6. Scaler - Scaling \n\nss = StandardScaler()\nX_train['Balance'] = ss.fit_transform(X_train[['Balance']])\nX_train['EstimatedSalary'] = ss.fit_transform(X_train[['EstimatedSalary']])\n\nX_test['Balance'] = ss.transform(X_test[['Balance']])\nX_test['EstimatedSalary'] = ss.transform(X_test[['EstimatedSalary']])","380894fa":"# 7. Encoder\n\nX_train = pd.get_dummies(X_train)\nX_test = pd.get_dummies(X_test)","c15c0528":"# 8. train_test_split\n\nX_train_model, X_train_val, y_train_model, y_train_val = train_test_split(X_train, y_train, test_size=0.3, random_state=42)","5d5418d5":"# 9. Random Forest Classifier \n\nrf = RandomForestClassifier(random_state=42)\nrf.fit(X_train_model, y_train_model)\npred_val = rf.predict_proba(X_train_val)[:,1]\nprint(roc_auc_score(y_train_val, pred_val))","56bf7a46":"#10. Fitting the model \nrf.fit(X_train, y_train)\npred_sub = rf.predict_proba(X_test)[:,1]","654b5d45":"submission = pd.DataFrame({'CustomerId' : X_test_Id, 'Exited' : pred_sub})\nsubmission.to_csv('00000000.csv', index=False)","b0b32297":"def check_test_label(submission):\n    testlabel = pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/test_label\/y_test.csv')\n    Truelabel = testlabel['Exited']\n    guessLabel = submission['Exited']\n    \n    print('Test AUC score : ',roc_auc_score(Truelabel,guessLabel))\n\ncheck_test_label(submission)","a673e553":"# Churn Model ","3ca8ab20":"Dataset looks good with 12 columns "}}