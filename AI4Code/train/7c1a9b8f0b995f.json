{"cell_type":{"cbb33f9e":"code","13161c14":"code","fa855025":"code","c6aeda75":"code","4419fb7a":"code","8d13f81e":"code","be87cf8b":"code","06802d5c":"code","51470710":"code","643610cb":"code","af5255cb":"code","2a9e7374":"code","aefd58ee":"code","f4cae09a":"code","85191e4c":"code","3f2b0ecc":"code","aebd90d1":"code","fa8294e9":"code","868267a7":"code","54ce20d8":"code","c9e3c53a":"code","52638edf":"code","3a1a5acd":"code","a1c0e2a8":"code","8236e5cc":"code","85d35e44":"code","02cc2808":"code","2742116c":"code","92c7f975":"code","3cb845f1":"markdown","e9330339":"markdown","6c4df070":"markdown","aa31673d":"markdown","814774e5":"markdown","cf725372":"markdown","1fff1539":"markdown","53ecbf2e":"markdown"},"source":{"cbb33f9e":"import numpy as np\nimport pandas as pd\n\ndata = pd.read_csv('\/kaggle\/input\/game-of-thrones-script-all-seasons\/Game_of_Thrones_Script.csv')\ndata.head()","13161c14":"data.tail()","fa855025":"data.shape","c6aeda75":"data.info()","4419fb7a":"data.loc[data.Name.isna()]","8d13f81e":"data.Name.loc[data.loc[data.Name.isna()].index] = 'Unknown'","be87cf8b":"data.loc[data.Name == 'Unknown']","06802d5c":"data.Name.nunique()","51470710":"data.Name.value_counts().head(25)","643610cb":"data.loc[data.Name.str.contains('myrcella')].Name.unique()","af5255cb":"data.Name.loc[data.loc[data.Name.str.contains('myrcella')].index] = 'myrcella lannister'\ndata.Name.loc[data.loc[data.Name == 'king joffrey'].index] = 'joffrey lannister'","2a9e7374":"data.drop(data.loc[(data.Sentence == 'EPISODE') | (data.Sentence == 'CREDITS')].index, axis = 0, inplace = True)","aefd58ee":"data['Name'] = data.Name.apply(lambda x: x.title())","f4cae09a":"pd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nsns.set_style('whitegrid')","85191e4c":"episodes_per_season = pd.Series(data.groupby('Season').Episode.apply(lambda x: x.nunique()), name = 'episodes_per_season')\nepisodes_per_season","3f2b0ecc":"plt.figure(figsize = (16,6))\nplot = sns.barplot(x = episodes_per_season.index, y = episodes_per_season.values, palette = 'winter_r')\nplot.set_title('Episodes per season')\nplot.set_xlabel('Seasons')\nplot.set_ylabel('Episodes')","aebd90d1":"phrases_per_season = pd.Series(data.groupby('Season').Sentence.apply(lambda x: x.count()), name = 'phrases_per_season')\nphrases_per_season","fa8294e9":"plt.figure(figsize = (16,6))\nplot = sns.barplot(x = phrases_per_season.index, y = phrases_per_season.values, palette = 'winter_r')\nplot.set_title('Phrases used per season')\nplot.set_xlabel('Seasons')\nplot.set_ylabel('Phrases used')","868267a7":"characters_per_season = pd.Series(data.groupby('Season').Name.apply(lambda x: x.nunique()), name = 'characters_per_season')\ncharacters_per_season","54ce20d8":"plt.figure(figsize = (16,6))\nplot = sns.barplot(x = characters_per_season.index, y = characters_per_season.values, palette = 'winter_r')\nplot.set_title('Talking characters per season')\nplot.set_xlabel('Seasons')\nplot.set_ylabel('Talking characters')","c9e3c53a":"most_talkative_chars = pd.Series(data.groupby('Season').Name.apply(lambda x: x.value_counts()[:10]))\n\nmost_talkative_chars = most_talkative_chars.reset_index().copy()\nmost_talkative_chars.rename(columns = {'level_1' : 'Name', 'Name' : 'Count'}, inplace = True)\nmost_talkative_chars.sample(5)","52638edf":"fig, axs = plt.subplots(4, 2, figsize = (16, 10))\n\nfig.suptitle('Top 10 most talkative characters per season', fontsize = 16)\n\nfor i in range(0, 4):\n    sns.barplot(y = most_talkative_chars.Name.loc[most_talkative_chars.Season == 'Season ' + str(i * 2 + 1)], \n                x = most_talkative_chars.Count, ax = axs[i, 0], palette = 'winter_r')\n    axs[i, 0].set_title('Season ' + str(i * 2 + 1))\n    axs[i, 0].set_ylabel('')\n    axs[i, 0].set_xlabel('Phrases spoken')\n    \n    sns.barplot(y = most_talkative_chars.Name.loc[most_talkative_chars.Season == 'Season ' + str(i * 2 + 2)], \n                x = most_talkative_chars.Count, ax = axs[i, 1], palette = 'winter_r')\n    axs[i, 1].set_title('Season ' + str(i * 2 + 2))\n    axs[i, 1].set_ylabel('')\n    axs[i, 1].set_xlabel('Phrases spoken')\nfig.tight_layout()","3a1a5acd":"data.loc[(data.Season == 'Season 8') & (data.Name == 'Soldier')].sample(5)","a1c0e2a8":"data.loc[(data.Season == 'Season 8') & (data.Name == 'Man')].sample(5)","8236e5cc":"most_used_phrases = pd.Series(data.groupby('Season').Sentence.apply(lambda x: x.str.lower().replace(r'[^\\w\\s]+', '', regex = True).value_counts()[:10]))\n\nmost_used_phrases = most_used_phrases.reset_index().copy()\nmost_used_phrases.rename(columns = {'level_1' : 'Phrase', 'Sentence' : 'Count'}, inplace = True)\nmost_used_phrases.sample(5)","85d35e44":"fig, axs = plt.subplots(4, 2, figsize = (16, 10))\n\nfig.suptitle('Top 10 most used phrases per season', fontsize = 16)\n\nfor i in range(0, 4):\n    sns.barplot(y = most_used_phrases.Phrase.loc[most_used_phrases.Season == 'Season ' + str(i * 2 + 1)], \n                x = most_used_phrases.Count, ax = axs[i, 0], palette = 'winter_r')\n    axs[i, 0].set_title('Season ' + str(i * 2 + 1))\n    axs[i, 0].set_ylabel('')\n    axs[i, 0].set_xlabel('Times spoken')\n    \n    sns.barplot(y = most_used_phrases.Phrase.loc[most_used_phrases.Season == 'Season ' + str(i * 2 + 2)], \n                x = most_used_phrases.Count, ax = axs[i, 1], palette = 'winter_r')\n    axs[i, 1].set_title('Season ' + str(i * 2 + 2))\n    axs[i, 1].set_ylabel('')\n    axs[i, 1].set_xlabel('Times spoken')\nfig.tight_layout()","02cc2808":"all_words = pd.Series(data.groupby('Season').Sentence.apply(lambda x: x.str.lower().replace(r'[^\\w\\s]+', '', regex = True).str.split().sum()))\nall_words = all_words.explode().copy()\n\nmost_used_words = pd.Series(all_words.groupby(all_words.index).apply(lambda x: x.value_counts()[:20]))\nmost_used_words = most_used_words.reset_index().copy()\nmost_used_words.rename(columns = {'level_1' : 'Word', 'Sentence' : 'Count'}, inplace = True)\nmost_used_words.sample(5)","2742116c":"fig, axs = plt.subplots(4, 2, figsize = (16, 16))\n\nfig.suptitle('Top 20 most used words per season', fontsize = 16)\n\nfor i in range(0, 4):\n    sns.barplot(y = most_used_words.Word.loc[most_used_words.Season == 'Season ' + str(i * 2 + 1)], \n                x = most_used_words.Count, ax = axs[i, 0], palette = 'winter_r')\n    axs[i, 0].set_title('Season ' + str(i * 2 + 1))\n    axs[i, 0].set_ylabel('')\n    axs[i, 0].set_xlabel('Times spoken')\n    \n    sns.barplot(y = most_used_words.Word.loc[most_used_words.Season == 'Season ' + str(i * 2 + 2)], \n                x = most_used_words.Count, ax = axs[i, 1], palette = 'winter_r')\n    axs[i, 1].set_title('Season ' + str(i * 2 + 2))\n    axs[i, 1].set_ylabel('')\n    axs[i, 1].set_xlabel('Times spoken')\nfig.tight_layout()","92c7f975":"import wordcloud\n\ncloud = wordcloud.WordCloud(max_words = 2000, width = 1600,height = 900).generate(' '.join(data.Sentence))\n\nplt.figure(figsize=(20,12))\nplt.imshow(cloud)\nplt.axis(\"off\")\nplt.savefig(\"WordCloudGoT.png\")","3cb845f1":"# Conclusion and WordCloud\n\nAs we can see, there are trends going on for the last two seasons:\n\n- Less episodes;\n\n- Less talking characters;\n\n- Less sentences said;\n\nAnd for the last visualization let's make a WordCloud just for the sake of aesthetics:","e9330339":"# Introduction\n\nHello,\n\nI was a big fan of the Game of Thrones tv series back in the day, and I really enjoyed watching this show (still am from time to time actually), but the finale... it haunts me... even almost two years later...\nOf course I'm joking, but still series finale was disappointing. Someone might say that it was kinda predictable, because the show ran out of books, that it was originally adapting to the screen and was drifting away from its original glory for a couple of seasons already.\n\nIn my opinion this meme sums it up perfectly:\n\n![meme](https:\/\/i.pinimg.com\/originals\/36\/25\/93\/362593f8636a712baac21c0120cdc87a.png)\n\nInteresting and intelligent dialogues were one of the main reasons why people enjoyed this show so much, but in the last seasons writing has changed for the worse.\n\nThat's why I decided to analyze Game of Thrones dialogues using [this incredible dataset](https:\/\/www.kaggle.com\/albenft\/game-of-thrones-script-all-seasons) I found on Kaggle.","6c4df070":"# Table of contents\n\n- Meeting data and doing a bit of preprocessing;\n\n- Visualizations:\n\n    - Number of episodes per season;\n\n    - Number of sentences said per season;\n\n    - Number of different talking characters per season;\n\n    - Top 10 most talkative characters per season;\n\n    - Top 10 most used phrases per season;\n\n    - Top 20 most used words per season;\n\n- Conclusion and WordCloud.","aa31673d":"I found out that there were two Myrcellas: 'myrcella baratheon' and just 'myrcella'. And decided to put them both together as 'myrcella lannister', because joffrey and tommen both have lannister surname in this dataset, so it seems it is no longer a secret :) ","814774e5":"I don't know why, but I found it funny that in every single season the most used phrase is 'no', except for the 8th season that has 'aye' instead :)","cf725372":"# Visualization","1fff1539":"If you look closely at Season 8 you can see that there are Man and Soldier in the characters list. Let's see how these observations look like!","53ecbf2e":"# Meeting data and doing a bit of preprocessing"}}