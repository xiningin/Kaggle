{"cell_type":{"21f2c9ad":"code","0eff25f9":"code","a287ccf5":"code","2257e30c":"code","6a97c911":"code","5232f73a":"code","e7605fdc":"code","9f9ffb56":"code","1ec32b75":"code","a83b826d":"code","1c6e87bb":"code","13fe1760":"code","d9205263":"code","f3be9822":"code","7bbd7a9e":"code","b9e4dec9":"code","8611ae28":"code","a2eb36fa":"code","a6a2b25d":"code","1fcbd611":"code","e21dc4e9":"code","2da202a0":"code","8c89802e":"code","eed59c27":"code","d1958ce4":"code","68d830b0":"code","910154b5":"code","2280ace8":"code","5fb3a0eb":"code","58c1e35c":"code","d0f42869":"code","fa4c475e":"code","746153bb":"code","3d2003fc":"code","e597bcf8":"code","86279cd6":"code","de38581f":"code","bd7d9ca1":"code","759bb697":"code","12b5369b":"code","a24c8c1f":"code","b2a1647f":"code","42053582":"code","8306b187":"code","ea662a07":"code","f841b0e6":"code","808bc153":"code","3c07cb6c":"code","6b5f08c4":"code","98f90646":"code","2e4a6857":"code","52e1d893":"code","d09419b6":"code","388da64d":"code","33ae9595":"code","dd3946e1":"code","409b131f":"code","aec43dbf":"code","37c8d08c":"code","a6e1249d":"code","defb88bd":"code","4467f047":"code","49a60ba5":"code","bd607ac7":"code","d22f4dd1":"code","6bad1e75":"code","43f6f2c9":"code","145ddc7a":"code","6381b164":"code","4e5fbb81":"code","6192542d":"code","18cccb67":"code","23006c40":"code","c430ab1c":"code","e87356a5":"code","7e3a22c8":"code","b0e63f8f":"code","5a8798a8":"code","f484f222":"code","d7dece8c":"code","8588ac8d":"code","22468e7b":"code","57cdc105":"code","8c1dc50f":"code","eb8336de":"code","a80b7f75":"code","1d3571ac":"code","b77862c2":"code","a5f55565":"code","34d12685":"code","eb6c15ac":"code","f9ff3e30":"code","e88d3763":"code","17c5899a":"code","1f66e186":"code","055562e9":"code","930bf482":"code","610f032a":"code","188087a9":"code","db2aee67":"code","0953e7a1":"code","fc6b1db2":"code","0375ee08":"code","dd683164":"code","a4d231d0":"code","76eaee4a":"code","81690bf5":"code","50159a82":"code","d924d33d":"code","917c12df":"markdown","c8182d7f":"markdown","0f62ff69":"markdown","f7d3542f":"markdown"},"source":{"21f2c9ad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0eff25f9":"import numpy as np \nimport pandas as pd \nimport seaborn as sns \nimport matplotlib.pyplot as plt ","a287ccf5":"data_delivery= pd.read_csv(\"..\/input\/data-delivery\/deliveries.csv\")\ndata_delivery.head(5)","2257e30c":"data_delivery.dtypes","6a97c911":"data_delivery.columns","5232f73a":"data_delivery.info()","e7605fdc":"data_delivery.describe()","9f9ffb56":"%matplotlib inline\ncorrelation_delivery= data_delivery.corr()\nsns.heatmap(correlation_delivery,annot=True)","1ec32b75":"data_delivery.median()","a83b826d":"#missing data through percentage list \nfor col in data_delivery.columns:\n    pct_missing = np.mean(data_delivery[col].isnull())\n    print('{} - {}%'.format(col, round(pct_missing*100)))","1c6e87bb":"cols_to_drop=['player_dismissed']\ndata_delivery_player_dismiss=data_delivery.drop(cols_to_drop,axis=1)","13fe1760":"cols_to_drop=['dismissal_kind']\ndata_delivery_dismissal_kind= data_delivery.drop(cols_to_drop,axis=1)","d9205263":"cols_to_drop=['fielder']\ndata_delivery_feilder=data_delivery.drop(cols_to_drop,axis=1)","f3be9822":"data_delivery.columns","7bbd7a9e":"data_delivery['match_id'].unique()","b9e4dec9":"data_delivery['match_id']=data_delivery['match_id'].fillna(data_delivery['match_id'].median())","8611ae28":"data_delivery['inning'].unique()","a2eb36fa":"data_delivery['inning']=data_delivery['inning'].fillna(data_delivery['inning'].median())","a6a2b25d":"data_delivery['batting_team'].unique()","1fcbd611":"data_delivery['batting_team']=data_delivery['batting_team'].fillna('None')","e21dc4e9":"data_delivery['bowling_team'].unique()","2da202a0":"data_delivery['bowling_team']=data_delivery['bowling_team'].fillna('None')","8c89802e":"data_delivery['over'].unique()","eed59c27":"data_delivery['over']=data_delivery['over'].fillna(data_delivery['over'].median())","d1958ce4":"data_delivery['ball'].unique()","68d830b0":"data_delivery['ball']=data_delivery['ball'].fillna(data_delivery['ball'].median())","910154b5":"data_delivery['batsman'].unique()","2280ace8":"data_delivery['batsman']=data_delivery['batsman'].fillna('None')","5fb3a0eb":"data_delivery['non_striker'].unique()","58c1e35c":"data_delivery['non_striker']=data_delivery['non_striker'].fillna('None')","d0f42869":"data_delivery['bowler'].unique()","fa4c475e":"data_delivery['bowler']=data_delivery['bowler'].fillna('None')","746153bb":"data_delivery['is_super_over'].unique()","3d2003fc":"data_delivery['is_super_over']=data_delivery['is_super_over'].fillna(data_delivery['is_super_over'].median())","e597bcf8":"data_delivery['wide_runs'].unique()","86279cd6":"data_delivery['wide_runs']=data_delivery['wide_runs'].fillna(data_delivery['wide_runs'].median())","de38581f":"data_delivery['bye_runs'].unique()","bd7d9ca1":"data_delivery['bye_runs']=data_delivery['bye_runs'].fillna(data_delivery['bye_runs'].median())","759bb697":"data_delivery['legbye_runs'].unique()","12b5369b":"data_delivery['legbye_runs']=data_delivery['legbye_runs'].fillna(data_delivery['legbye_runs'].median())","a24c8c1f":"data_delivery['noball_runs'].unique()","b2a1647f":"data_delivery['noball_runs']=data_delivery['noball_runs'].fillna(data_delivery['noball_runs'].median())","42053582":"data_delivery['penalty_runs'].unique()","8306b187":"data_delivery['penalty_runs']=data_delivery['penalty_runs'].fillna(data_delivery['penalty_runs'].median())","ea662a07":"data_delivery['batsman_runs'].unique()","f841b0e6":"data_delivery['batsman_runs']=data_delivery['batsman_runs'].fillna(data_delivery['batsman_runs'].median())","808bc153":"data_delivery['extra_runs'].unique()","3c07cb6c":"data_delivery['extra_runs']=data_delivery['extra_runs'].fillna(data_delivery['extra_runs'].median())","6b5f08c4":"data_delivery['total_runs'].unique()","98f90646":"data_delivery['total_runs']=data_delivery['total_runs'].fillna(data_delivery['total_runs'].median())","2e4a6857":"data_match=pd.read_csv('..\/input\/matches-data\/matches.csv')\ndata_match.head()","52e1d893":"data_match.info()","d09419b6":"data_match.describe()","388da64d":"data_match.dtypes","33ae9595":"data_match.columns","dd3946e1":"correlation_match=data_match.corr()\nsns.heatmap(correlation_match,annot=True)","409b131f":"#finding out the missing data from dataset through percentage list \nfor col in data_match.columns:\n    pct_missing= np.mean(data_match[col].isnull())\n    print('{} - {}%'.format(col, round(pct_missing*100)))","aec43dbf":"data_match['id'].unique()","37c8d08c":"data_match['id']=data_match['id'].fillna(data_match['id'].median())","a6e1249d":"data_match['season'].unique()","defb88bd":"data_match['season']=data_match['season'].fillna(data_match['season'].median())","4467f047":"data_match['city'].unique()","49a60ba5":"data_match['city']=data_match['city'].fillna('None')","bd607ac7":"data_match['date'].unique()","d22f4dd1":"data_match['date']=data_match['date'].fillna('None')","6bad1e75":"data_match['team1'].unique()","43f6f2c9":"data_match['team1']=data_match['team1'].fillna('None')","145ddc7a":"data_match['team2'].unique()","6381b164":"data_match['team2']=data_match['team2'].fillna('None')","4e5fbb81":"data_match['toss_winner'].unique()","6192542d":"data_match['toss_winner']=data_match['toss_winner'].fillna('None')","18cccb67":"data_match['toss_decision'].unique()","23006c40":"data_match['toss_decision']=data_match['toss_decision'].fillna('None')","c430ab1c":"data_match['result'].unique()","e87356a5":"data_match['result']=data_match['result'].fillna('None')","7e3a22c8":"data_match['dl_applied'].unique()","b0e63f8f":"data_match['dl_applied']=data_match['dl_applied'].fillna('None')","5a8798a8":"data_match['winner'].unique()","f484f222":"data_match['winner']=data_match['winner'].fillna('None')","d7dece8c":"data_match['win_by_runs'].unique()","8588ac8d":"data_match['win_by_runs']=data_match['win_by_runs'].fillna(data_match['win_by_runs'].median())","22468e7b":"data_match['win_by_wickets'].unique()","57cdc105":"data_match['win_by_wickets']=data_match['win_by_wickets'].fillna(data_match['win_by_wickets'].median())","8c1dc50f":"data_match['player_of_match'].unique()","eb8336de":"data_match['player_of_match']=data_match['player_of_match'].fillna('None')","a80b7f75":"data_match['venue'].unique()","1d3571ac":"data_match['venue']=data_match['venue'].fillna('None')","b77862c2":"data_match['umpire1'].unique()","a5f55565":"data_match['umpire1']=data_match['umpire1'].fillna('None')","34d12685":"data_match['umpire2'].unique()","eb6c15ac":"data_match['umpire2']=data_match['umpire2'].fillna('None')","f9ff3e30":"data_match['umpire3'].unique()","e88d3763":"data_match['umpire3']=data_match['umpire3'].fillna('None')","17c5899a":"data_delivery.head(5)","1f66e186":"%matplotlib inline\ndata_delivery.plot(kind='scatter',x='ball',y='total_runs')\nplt.title('balls and over scatter plot ')\nplt.show()","055562e9":"%matplotlib inline\ndata_delivery.plot(kind='scatter',x='extra_runs',y='batsman_runs')\nplt.title('Runs versus batsman runs ')\nplt.show()","930bf482":"%matplotlib inline\ndata_delivery.plot(kind='scatter',x='bye_runs',y='legbye_runs')\nplt.title('No ball runs vs penalty runs ')\nplt.show()","610f032a":"import matplotlib.pyplot as plt \nimport matplotlib as mpl \nimport pandas as pd \n%matplotlib notebook ","188087a9":"%matplotlib inline\ndata_delivery['ball'].plot(kind='hist',bins=50,figsize=(12,6),facecolor='grey',edgecolor='black')\n","db2aee67":"%matplotlib inline\ndata_delivery['batsman_runs'].plot(kind='hist',bins=50,figsize=(12,6),facecolor='grey',edgecolor='black')","0953e7a1":"%matplotlib inline\ndata_delivery['total_runs'].plot(kind='hist',figsize=(12,6),bins=50,facecolor='grey',edgecolor='black')","fc6b1db2":"%matplotlib inline\ndata_delivery.boxplot('over')","0375ee08":"%matplotlib inline\ndata_delivery.boxplot('ball')","dd683164":"data_match.head(5)","a4d231d0":"sns.pairplot(data_match,hue='toss_decision')","76eaee4a":"g=sns.pairplot(data_match,diag_kind='kde')\ng.map_lower(sns.kdeplot,levels=4,color='.2')","81690bf5":"plt.figure(figsize=(20,10))\nplt.title('comparision between team1 and team2')\nsns.scatterplot(data_match['team1'],data_match['team2'],hue=data_match['toss_winner'])","50159a82":"plt.figure(figsize=(25,15))\nsns.scatterplot(data_match['team1'],data_match['team2'],hue=data_match['result'])","d924d33d":"import matplotlib.pyplot as plt\nfig,axes=plt.subplots(2,2,figsize=(30,25))\nsns.boxplot(y=\"win_by_runs\",x=\"team1\",data=data_match,orient='v',ax=axes[0,0])\nsns.boxplot(y=\"win_by_wickets\",x=\"team1\",data=data_match,orient='v',ax=axes[0,1])\nsns.boxplot(y=\"win_by_runs\",x=\"team2\",data=data_match,orient='v',ax=axes[1,0])\nsns.boxplot(y=\"win_by_wickets\",x=\"team2\",data=data_match,orient='v',ax=axes[1,1])","917c12df":"# Data Visualization of Match Dataset ","c8182d7f":"since we know that these data sets have more missing data around 95% so we will simply drop these columns ","0f62ff69":"# Data Visualization of delivery dataset ","f7d3542f":"from the above percentage list it shows that player_dismissed, dismissal_kind, fielder have maximum missing values therefore we should leave these columns"}}