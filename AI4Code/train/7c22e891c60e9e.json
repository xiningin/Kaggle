{"cell_type":{"a57eabac":"code","87b74ef9":"code","0b7442b7":"code","69046861":"code","3e327938":"code","18931803":"code","412cd6f6":"code","ba58fa37":"code","e221d0d0":"code","8af277d5":"code","54c0851e":"code","a9eba7f9":"code","a8faded7":"code","3921d86f":"code","f5cf3692":"code","2dbbb0f8":"code","119208d4":"code","daa8c387":"code","c42f324a":"code","6bd473cd":"code","bea22479":"code","941e39de":"code","8e009088":"code","32952bd4":"code","2e13aa2d":"code","e31f8046":"code","87f2b8cc":"markdown","37008d3c":"markdown"},"source":{"a57eabac":"import tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import BatchNormalization, Dropout, Dense, Conv2D, MaxPooling2D, Flatten\nfrom tensorflow.keras.constraints import max_norm\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pickle","87b74ef9":"file = open('..\/input\/cifar10mazed\/x_train.pickle', 'rb')\nx_train = pickle.load(file)\nfile.close()\n\nfile = open('..\/input\/cifar10mazed\/x_test.pickle', 'rb')\nx_test = pickle.load(file)\nfile.close()\n\nfile = open('..\/input\/cifar10mazed\/y_train.pickle', 'rb')\ny_train = pickle.load(file)\nfile.close()\n\nfile = open('..\/input\/cifar10mazed\/y_test.pickle', 'rb')\ny_test = pickle.load(file)\nfile.close()","0b7442b7":"y_train = np.array(y_train)\ny_test = np.array(y_test)","69046861":"y_train.shape","3e327938":"y_test.shape","18931803":"x_test = np.array(x_test).reshape(-1, 32, 32, 3)\nx_train = np.array(x_train).reshape(-1, 32, 32, 3)","412cd6f6":"x_train.shape","ba58fa37":"x_test.shape","e221d0d0":"classes = ['Airplane', 'Automobile', 'Bird', 'Cat', 'Deer', 'Dog', 'Frog', 'Horse', 'Ship', 'Truck']","8af277d5":"def show_img(x, y, index):\n    plt.figure(figsize = (15,2))\n    plt.imshow(x[index])\n    plt.xlabel(classes[y[index]])","54c0851e":"show_img(x_train, y_train, 4)","a9eba7f9":"x_train = x_train\/255.0\nx_test = x_test\/255.0","a8faded7":"show_img(x_train, y_train, 0)","3921d86f":"cifar10_cnn = Sequential([\n    Conv2D(filters=32, kernel_size=(3, 3), activation='relu', input_shape=(32, 32, 3)),\n    Dropout(0.2),\n    BatchNormalization(),\n    \n    Conv2D(filters=64, kernel_size=(3, 3), activation='relu'),\n    MaxPooling2D((2, 2)),\n    Dropout(0.2),\n    BatchNormalization(),\n    \n    Conv2D(filters=64, kernel_size=(3, 3), activation='relu'),\n    MaxPooling2D((2, 2)),\n    Dropout(0.2),\n    BatchNormalization(),\n    \n    Conv2D(filters=128, kernel_size=(3, 3), activation='relu'),\n    MaxPooling2D((2, 2)),\n    Dropout(0.2),\n    BatchNormalization(),\n    \n    Flatten(),\n    Dropout(0.2),\n    \n    Dense(256, kernel_constraint=max_norm(3), activation='relu'),\n    Dropout(0.2),\n    BatchNormalization(),\n    \n    Dense(128, kernel_constraint=max_norm(3), activation='relu'),\n    Dropout(0.2),\n    BatchNormalization(),\n    \n    Dense(10, activation='softmax')\n])","f5cf3692":"cifar10_cnn.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])","2dbbb0f8":"cifar10_cnn.summary()","119208d4":"np.random.seed(21)\ncifar10_cnn.fit(x_train, y_train, epochs=25, batch_size=64)","daa8c387":"cifar10_cnn.evaluate(x_test, y_test)","c42f324a":"r = cifar10_cnn.predict(x_test)","6bd473cd":"for i in r[:10]:\n    print(classes[np.argmax(i)])","bea22479":"for i in range (10):\n    show_img(x_test, y_test, i)","941e39de":"type(r)","8e009088":"r.shape","32952bd4":"cifar10_cnn.save('cifar10_cnn.h5')","2e13aa2d":"model = tf.keras.models.load_model('.\/cifar10_cnn.h5')","e31f8046":"model.evaluate(x_test, y_test)","87f2b8cc":"## Importing Libraries","37008d3c":"## Loading Dataset"}}