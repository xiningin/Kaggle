{"cell_type":{"06451bb2":"code","5b6a4bdb":"code","e9fc87a1":"code","295979e6":"code","250c9dee":"code","e0e21f06":"code","39df0724":"code","a44fe6ff":"code","4d4a8924":"code","c6a4cd6c":"code","d539bcea":"code","08672fcc":"code","87b06ab3":"code","3311de32":"code","1682b3fc":"code","2fd2cb31":"code","15635336":"markdown","d566c1c8":"markdown","a8e19a59":"markdown","30774bf9":"markdown","4c23cac7":"markdown","9a0706ad":"markdown","b37607f7":"markdown","c40367ad":"markdown","5e569934":"markdown","0d696811":"markdown","d009f1f6":"markdown","0b5b31a6":"markdown","6e64fbf5":"markdown","30c63d12":"markdown","16b446fd":"markdown","7ccf7323":"markdown","6e3c10b6":"markdown","e14f7d5e":"markdown","86360409":"markdown","7a99e300":"markdown"},"source":{"06451bb2":"import numpy as np\nimport pandas as pd\nimport os\nimport seaborn as sb\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5b6a4bdb":"top250 = pd.read_csv(\"..\/input\/restaurant-business-rankings-2020\/Top250.csv\")\nft50 = pd.read_csv(\"..\/input\/restaurant-business-rankings-2020\/Future50.csv\")\ni100 = pd.read_csv(\"..\/input\/restaurant-business-rankings-2020\/Independence100.csv\")","e9fc87a1":"top250.head()","295979e6":"#!pip install pandas_profiling \nfrom pandas_profiling import ProfileReport\nprofile = ProfileReport(top250)\nprofile","250c9dee":"train = top250.copy()\npercent = ((train.isnull().sum()\/train.isnull().count()) * 100).sort_values(ascending=True)\npercent = percent[percent>0].reset_index()\npercent.columns = ['Variable', 'Percent']\n\nfig = px.bar(percent[['Variable', 'Percent']], y=\"Percent\", x=\"Variable\", color='Variable', log_y=False, template='ggplot2')\nfig.show()","e0e21f06":"train['YOY_Sales'] = train['YOY_Sales'].apply(lambda x:x.replace('%',''))\ntrain['YOY_Units'] = train['YOY_Units'].apply(lambda x:x.replace('%',''))\n\n\ntrain['YOY_Sales']= pd.to_numeric(train['YOY_Sales'])\ntrain['YOY_Units']= pd.to_numeric(train['YOY_Units'])","39df0724":"k = train.sort_values(by=['Sales'], ascending=False)\nk= k.head(15)\nfig=px.bar(k,x='Restaurant', y=\"Sales\", animation_group=\"Restaurant\", color=\"Restaurant\", hover_name=\"Restaurant\")\nfig.update_layout(title='Restaurant Sales - Top 15')","a44fe6ff":"grouped = train.groupby('Segment_Category').sum().reset_index()\ngrouped = grouped.sort_values('Sales', ascending=False).reset_index()\n\ngrouped.drop('index', axis=1, inplace=True)\ngrouped = grouped.head(15)\nfig = px.pie(grouped, values=\"Sales\", names=\"Segment_Category\",template=\"seaborn\")\n\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\")\nfig.show()","4d4a8924":"import plotly.figure_factory as ff\n\nx1 = train['YOY_Sales']\nx2 = train['YOY_Units']\n\nhist_data = [x1, x2]\ngroup_labels = ['YOY Sales', 'YOY Units']\n\nfig = ff.create_distplot(hist_data, group_labels, bin_size=.2)\nfig.show()","c6a4cd6c":"ms = train.sort_values(by=['Units'],ascending=False)\nms = ms.head(10)\nfig = px.funnel(ms, x='Units', y='Restaurant')\nfig.show()","d539bcea":"train['Mood'] = train['YOY_Sales'].apply(lambda x:'Positive' if x>0 else 'Negative')\n#train.head(10)\nimport plotly.express as px\nfig = px.scatter(train, x=\"Sales\", y=\"Units\", color=\"Mood\")\nfig.show()","08672fcc":"plt.figure(figsize=(40,40));\nfig = px.sunburst(train, path=['Mood', 'Segment_Category'])\nfig.show()","87b06ab3":"plt.figure(figsize=(40,40));\n\nfig = px.sunburst(train, path=['Mood', 'Restaurant'])\n\nfig.show()","3311de32":"ft50['YOY_Sales'] = ft50['YOY_Sales'].apply(lambda x:x.replace('%',''))\nft50['YOY_Units'] = ft50['YOY_Units'].apply(lambda x:x.replace('%',''))\nft50['YOY_Sales']= pd.to_numeric(ft50['YOY_Sales'])\nft50['YOY_Units']= pd.to_numeric(ft50['YOY_Units'])\n\n#ft50.head(10)\n\nft50['Mood'] = ft50['YOY_Sales'].apply(lambda x:'Positive' if x>0 else 'Negative')","1682b3fc":"plt.rcParams['figure.figsize'] = (20, 8)\nplt.style.use('fivethirtyeight')\n\nimport warnings\nimport seaborn as sns\nwarnings.filterwarnings('ignore')\n\nplt.subplot(1, 2, 1)\nsns.kdeplot(ft50[ft50['Franchising']=='Yes']['YOY_Sales'], color = 'green')\nplt.title('With Franchise')\n\n               \nplt.subplot(1, 2, 2)\nsns.kdeplot(ft50[ft50['Franchising']=='No']['YOY_Sales'], color = 'skyblue')\nplt.title('No Franchise')\n\nplt.suptitle('YoY Sales comparison with & without Franchise', fontsize = 20)\nplt.show()","2fd2cb31":"!pip install pywaffle\nfrom pywaffle import Waffle\ndf = ft50.iloc[:200,:].groupby('Franchising').size().reset_index(name='counts')\nn_categories = df.shape[0]\ncolors = [plt.cm.inferno_r(i\/float(n_categories)) for i in range(n_categories)]\n\nfig = plt.figure(\n    FigureClass=Waffle,\n    values = df['counts'],\n    labels = ['No','Yes'],\n    legend = {'loc': 'upper left'},\n    title = {'label': 'Franchising in Future 50 Restaurants', 'fontsize': 15},    \n    rows=5,\n    colors=['pink','green'],\n    figsize = (15, 15)\n)","15635336":"#### In a Sense, lets validate the above report and starting with Univariate Analysis, lets look at the missing values in the top 250 dataset","d566c1c8":"<h3 style=\"background-color:#C4A297; color:Brown\" >Overall, its Similar, but there indeed is a dip in sales when there's no franchise. <\/h3>","a8e19a59":"<h3 style=\"background-color:Orange; color:Black\" >The Restaurant with the most branches<\/h3>","30774bf9":"<a id='intro'> <\/a>\n\n<h1 style=\"text-align:center;color:blue;\">Top 250<\/h1>","4c23cac7":"<h3 style=\"background-color:Purple; color:yellow\" >It was not more than 40% <\/h3>","9a0706ad":"<h3 style=\"background-color:Yellow; color:Black\" >It was Quick Service & Burger Segment that had the most sales <\/h3>","b37607f7":"<h3 style=\"text-align:center;font-size:200%;color:Purple\">Progress on the Notebook<\/h3>\n<div class=\"progress\">\n  <div class=\"progress-bar\" role=\"progressbar\" style=\"width: 40%;\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\">40%<\/div>\n<\/div>","c40367ad":"#### The usual drill of fetching the data and looking at it before diving into EDA and more","5e569934":"<h3 style=\"background-color:#C4A297; color:White\" >Segments & Restaurant with +\/- YoY Sales<\/h3>","0d696811":"<h3 style=\"background-color:Brown; color:White\" > Yes, it seems to be the case<\/h3>","d009f1f6":"<h3 style=\"background-color:Purple; color:Yellow\" >YOY Distribution of Units & Sales<\/h3>","0b5b31a6":"<a id='uva'> <\/a>\n\n\n<h1 style=\"text-align:center;color:green;\">Univariate Analysis<\/h1>","6e64fbf5":"<a id='ft'> <\/a>\n\n\n<h1 style=\"text-align:center;color:Brown;\">Future 50<\/h1>","30c63d12":"### CONTENTS\n\n1. [Intro](#intro)\n\n2. [Univariate Analysis](#uva)\n\n3. [Bivariate Analysis](#bva)","16b446fd":"<h3 style=\"background-color:DodgerBlue; color:white\"> So Variables, Headquarters and Content have a lot of missing values and I guess it should be ok to proceed for now.<\/h3>\n\n<br\/>\n<br\/>\n        \n        \n<h3> <span class=\"label label-default\">Replacing, % to numeric<\/span><\/h3>","7ccf7323":"<h3 style=\"background-color:Yellow; color:Black\" >Which Segment topped in Sales ? <\/h3>","6e3c10b6":"<h3 style=\"background-color:Brown; color:White\" >Are Sales Correlated with total Units\/Branches?<\/h3>","e14f7d5e":"<h3 style=\"background-color:#C4A297; color:Brown\" >Does Franchise have anything to do with YoY Sales? <\/h3>","86360409":"<h3 style=\"background-color:Green; color:white\" >Which Restaurant topped in Sales ? <\/h3>","7a99e300":"<a id='bva'> <\/a>\n\n\n<h1 style=\"text-align:center;color:Blue;\">Bivariate Analysis<\/h1>"}}