{"cell_type":{"5301789a":"code","1a9517f7":"code","65fb6fa2":"code","0162792b":"code","ec1b8efa":"code","a81d2181":"markdown","33bced4c":"markdown","2bb71cf5":"markdown","00a980bd":"markdown","8cfc1b11":"markdown"},"source":{"5301789a":"% matplotlib inline\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","1a9517f7":"csv_files =[\n    '..\/input\/twosigmapubliclb\/two-sigma-using-news-to-pre-public-leaderboard\/two-sigma-financial-news-publicleaderboard.csv',\n    '..\/input\/lb20190215\/publicleaderboarddata20190215\/two-sigma-financial-news-publicleaderboard.csv',\n    '..\/input\/lb20190301\/publicleaderboarddata20190301\/two-sigma-financial-news-publicleaderboard.csv',\n    '..\/input\/lb20190313\/publicleaderboarddata20190313\/two-sigma-financial-news-publicleaderboard.csv',\n    '..\/input\/lb20190401\/publicleaderboarddata20190401\/two-sigma-financial-news-publicleaderboard.csv',\n    '..\/input\/lb20190418\/publicleaderboarddata20190418\/two-sigma-financial-news-publicleaderboard.csv'\n]\n\ndates = ['Public', '20190215', '20190301', '20190313', '20190401', '20190418']\n\ncsvs = []\nfor num, fn in enumerate(csv_files):\n    csvs += [pd.read_csv(fn)]\n    csvs[-1] = csvs[-1].groupby('TeamName').Score.max().reset_index()\n    csvs[-1]['stage'] = num\n    scores = csvs[-1].Score.unique()\n    scores_rank = np.argsort(np.argsort(scores))\n    csvs[-1]['score_rank'] = csvs[-1].Score.map(dict(zip(scores, scores_rank))) \ndf = pd.concat(csvs, ignore_index=True)\nteams = df.TeamName.unique()","65fb6fa2":"linthreshy = df[df.stage==df.stage.max()].Score.std()\n\nmedian = int(np.round(df[df.stage==df.stage.max()].Score.median()))\nprint('Median:', median)\nplt.figure(figsize=(24,12))\nfor team in teams:\n    team_scores = df[df.TeamName==team].sort_values('stage')[['Score', 'stage']].values\n    plt.plot(team_scores[:, 1], team_scores[:, 0]-median, alpha=0.2);\nplt.yscale('symlog', linthreshy=linthreshy)\nplt.yticks(np.arange(int(df.Score.min())-int(median), int(df.Score.max())-int(median)), np.arange(int(df.Score.min()), int(df.Score.max())))\nplt.xticks(np.arange(len(dates)), dates);\nplt.ylabel('Score');","0162792b":"\nplt.figure(figsize=(24,200))\nfor team in teams:\n    team_scores = df[df.TeamName==team].sort_values('stage')[['Score', 'stage']].values\n    plt.plot(team_scores[:, 1], team_scores[:, 0]-median, alpha=0.5);\n    for pos in team_scores:\n        plt.text(pos[1], pos[0]-median, f'{team.upper()} [{pos[0]:.4f}]')\nplt.yscale('symlog', linthreshy=linthreshy)\nplt.yticks(np.arange(int(df.Score.min())-int(median), int(df.Score.max())-int(median)), np.arange(int(df.Score.min()), int(df.Score.max())))\nplt.xticks(np.arange(len(dates)), dates);\nplt.ylabel('Score');","ec1b8efa":"plt.figure(figsize=(24,200))\nfor team in teams:\n    team_scores = df[df.TeamName==team].sort_values('stage')[['score_rank', 'stage', 'Score']].values\n    plt.plot(team_scores[:, 1], team_scores[:, 0]-350, alpha = 0.2);\n    for pos in team_scores:\n        plt.text(pos[1], pos[0]-350, f'{team.upper()} [{pos[2]:.4f}]')\nplt.yscale('symlog', linthreshy=350, basey=10)\nplt.yticks([-350, -250, -150, 50, 150, 250, 350, 650, 1150, 1650], np.array([0, 100, 200, 400, 500, 600, 700, 1000, 1500, 2000]))\nplt.xticks(np.arange(len(dates)), dates);\nplt.ylabel('Rank');","a81d2181":"In addition to https:\/\/www.kaggle.com\/nareyko\/two-sigma-predict-stock-movements-results this kernel shows just movements in pictures","33bced4c":"# Data preparation","2bb71cf5":"# Scores shuffle (symlog scale)","00a980bd":"# Rank shuffle with team names  (symlog scale)","8cfc1b11":"# Scores shuffle with team names (symlog scale)"}}