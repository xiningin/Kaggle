{"cell_type":{"a8ebed0e":"code","c3cee742":"code","1a4aa96d":"code","5014e43e":"code","037013e1":"code","2b02bce7":"code","2de86570":"code","cd9f9679":"code","c86ea000":"code","56bf085d":"code","413f032c":"code","10cd4355":"code","b8e6a3c7":"code","4187285b":"code","8757a1f8":"code","d1ca186f":"code","663ecc0a":"code","c482fa1f":"code","b53753a1":"code","70ee4c78":"code","b31dfe46":"code","e6c970a0":"code","f1e66bd3":"code","ff46b554":"code","061d9439":"code","726f18f3":"code","aaf83b01":"code","b2dbf362":"code","196df293":"code","53b83fa9":"code","c2a7aedc":"code","a3eda7e6":"code","24bd7a40":"code","968b7068":"code","3c6bf27d":"code","436eadc0":"code","a93b496a":"markdown","fc2619de":"markdown","8f27aa8c":"markdown","d2aec7f9":"markdown","f1f92327":"markdown","0d7b7477":"markdown","133af52f":"markdown","2c52c6b0":"markdown","4b029ee7":"markdown","ac3c07ee":"markdown","1a12a97b":"markdown","ab7a5f0e":"markdown","321c0c73":"markdown"},"source":{"a8ebed0e":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBw8PDw4NDw0QDg0NDw0NDQ4NDQ8NDw4OFREXFhYRFRUYHSggGBonHhUVITIiJSkrLjAuGCAzRDMvNygtLisBCgoKDg0OGBAQGy0mHyA2KzctMC4tLTc3MzQwNystKzcrLy4uKzctKysyLi0rLi0rLSstLy8yLi0rLTIwKysvK\/\/AABEIAQAAxQMBEQACEQEDEQH\/xAAbAAADAQEBAQEAAAAAAAAAAAAAAQIDBAUGB\/\/EAD8QAAICAQMCBAIIBAQDCQAAAAECAAMRBBIhBTETIkFRBnEUIzIzYYGywUNzkbFSYnKhB8LRFRZCU4KSk+Hx\/8QAGgEBAQEBAQEBAAAAAAAAAAAAAAIDAQQFBv\/EADQRAQABAgIGCQQDAAIDAAAAAAABAhEDIQQSMUFxkQUyUWGBocHR8BNCseEUIvEVokNSYv\/aAAwDAQACEQMRAD8A\/VYBAIBAIBAIBApG9IGmYCgOAQHAIDgEBwCA4BAcAgOAGBxQCAQCAQCAQCA4GqnMBwHAMQHAIDgEBwCA4BAeIDgPEBGBwwCAQCAQCAQHAeIFJxA2CwHiA9sAxANsAxAMQCAQHiA4BiA4DxADA8+AQCAQCA8QKCwKCwGFgVtgaV+0C8QHiAYgGIBiAYgLEBYgPEAgPEBwCAEQPOgEAgOAwIFgQKCwKAgUFgMLAYEDUCA8QDEAxAMQDEAxAWICxAMQCA8QHiAEQPMgEBwKAgWBAsCBQWBQECsQHiA8QKSBeIBiAYgGIBiAsQDEBYgGIBiAYgMCAEQPKgOBSiBoBAsCBYECgIDAgUBAeIDxAMQLEBwDEAgGIBiAsQDEAxAWIBiA8QAiB5MClEDRRAsCBYECwIFAQKAgPEB4gGIDxABAvEAxAMQCAYgLEAxAMQDEAxAMQAiB5AEDRRA0AgWBAsCAK3mK47KjZ+ZYf8v+87bK7l87NAJx1zN1Ghb10puQahxuWonzEYYj8yEcgdyFY+hlalU061snNaL2eINTe+lPU26iNHUwNtNTUUvplpLYrF2V8R3bK5CsvLYA459GrTFX04pvPn323eUstb+uvM2gk1OpbSP1OnqK6nw0subTJTUmkYJktSCV8VXwCNzN35K48sTTTFf06qbd+\/28vEiqZp16Zu91Oq6c2pR4yi6xBYlZ+0VKlgPbOATjvgE9hMPp1WvbJprReztkKEBiA4BAIBAJwE6FAIAeOTA5rtWBwoyfc9oHDY5Y5JzAaiBqogWogWBAsCBKfeP\/AKKv1WSvtjx9Ex1p8PVsBJU+N6rrNmrtZaXusq12nYJUFLGunQLZZtDEbm23nCjk8+xnsopvRGdrxPnP6YVVf2nLf6OH4z01yaFjpXW7pWoerVl189mjTd42+s9mpLbTz9gbu6kbNtEqp+tGvlVGXHdn3\/njt8+nxX\/HqiiL33MvgTQ6i\/SW02EJ0t7XttuOFs1ilQHpB7Cry4L+oyo9SK06uinF1qZvV+P2y6Npr\/jxFUaseju0utF2sW0I6K3UdHrKC4Ub9JboLdLW+AcruauxgDg4ZfxAxqp1aLd0xPGJiXsib1X74\/Fn3eJ4XoGIBAqAQCAoBAIBAze4Dtz\/AGgctjE9zAxYQMyIGiiBoogWBA0AgUIEIPrH\/wBFX6rJU9WPH0THWnw9W4ElT5j4i0BqZ9SCfo9t1GovdceLotTWq1rrEz9pNqqrp\/hyfVgfThV60au\/O3fHZ7T2sa4tn8jv93S+nq0ur0v0fCVa6y+i\/T1t9SbPBsvFwTsrfVsCRjO\/nOBjl5ronW3Wz5QrKmYtvF+kq1Ors094U6PSafTeHpidtL22GzcbE7OAqIFU5Ayxx2xyKppoiqnbMznyJiJqtOyHN0jQm++y4MfotWsuuaxgPE1uqrJqAGOEoqxsX1Y154Ay94lWrTEb7co28529345TETN31U8rUQCACA4BAIBAlngZOSYGRECCIGbCBmRA0UQNFEC1ECxAoCBKfeP\/AC6v1WSp6sePoiOtPCPVtJW8j4s6O2u0lmlV1RnalwbFLIdlivtYD0O3E20fFjCxIrmL2Y4+F9XDmi9rvmdN\/wAN1pv091Vta+BqabmPhAMa0KNtGMclgw9sET219I69E0zTth4cLo2cPEiv6kzbtR8Q\/wDD63U6vUalbNMVvdXAuqZnXCKu3POR5Y0fT6cLDiiadhpXR1WNiTXGJMdz6X4M6C3T9M1Dujl7nuxUpVEBVV2qD\/pz+Znk0rHjGr1oiz2aLgTg4cUTN+970870CAQCA4BARMCSYEGBJgQRAgwM2EDMiBawNBA0EChAsQM0+8f+XV+qyVPVjx9ER154R6t5K2Gt1ldCGyxsLkKB3ZmPZVHqTLow6q5tSzxMSnDp1qnmnqepD0lqK6677VqrpLs2pYHJaw48qhVBYjntjib\/AEcOaarTMzEbd37vseb6+LFVN6YiKptEb+PZFoz3vbJnle1ydL141CG1VKpuIrLY+sTAw49gczTFw5w51Z2ssHFjFp1ojLd397rJxyeAO8zasNBq1vrS5QwSzJTcMFkyQG+RGCPwIl4lE0VTTO5nhYkYlMVRsn55uiQ0KAQOdNYrXWUAEtUiPY3G1S+cL88DPyx7y5omKYqnezjEia5ojd6t5DRzajVqllNRBL3lwoXHCqpZnP8AlHA+bCXTRNVM1boZ1YkU1U075+cveGxkNEmBBgQ0CGgZmBSwNBA0EChAsQM0+8f+XV+qyVPVjx9ER154R6thJW8nV6Wz6UuoNR1CV1haEV0TwXJO98MQCSNoBz6Gemiun6Wpe0zt7+x5MTDq+t9SYvERl3Tv2+CE6hpt9ur+sZ6kauzK7l0yry6Bh5AcgE4JJ49MTs4WJaMPK0+fZ3+TkY2FerFzy293bHZxzn8Mes9WWzS7KyPH1D16XwQ6mxGcjcjY7MFJz7GXg4M04t52Rnfh+2ekaRFWDanbVaLXzz2+MRyejRdXWRp1cL9GrFt52jaEIbuc+Ukgt8gZhNNVX95jbs+eT0U1U0zqRPVi8+fLteP1vqLaqtNNSHqXU210WOwCsa3G8gDPGawzHOCAVGPNx6cDCjCqmurO0X9Pzl\/jyaTjTj0Rh0Za0xE8Jz\/Gee62Wbro68rPRRRQcWuEpZiAh0yZ3W4HIGFYLnGZnVo0xFVVc7NvHs9+xrTpcTVTRRTt2cI2zw7L7W7dcHi31CvK6cjfZuwqKF3WM3HAGQBjJJzxwTJjR51aar7fkfN3iudKjXqpt1ds+c3+ZzfslOu66lFdbHNlmo89NOBW+wgEAjnnkD3JOMRRo011TEZRG2XMXS6cOmJnOatkfP8AbtNZ1lULVqjGxRgkgeHW+zeQ5z6L5jjPGPUgHlGBMxednyMvx\/kqxNJimZpiM\/KN+fCM595i\/j9I6qulo32h7bbVOu1dg25QWfdqcn7RUABR2Cn0npxsGcWu1OURlHht\/wBeTAx4wcO9d5mf7VTx2eNt3c9huriuulrkZbra\/FamvzmteM5zjOCyr7kkAAzyxga1UxTOUb\/nPhteydJimmma4zmL2jd82d87Hi09SFduq1uoILlxotNVuUBQoDWKD2wG4ZvdD+AnqqwtamnCo4zP4\/XF46cfUrrxsTt1aY8589s93CH02ntLojlCjMiua2xuTIztP4+n5TwVRaZja+nRVrUxMxa+5ZkqQYENAgwMzApYGiwLECxAoQM0+8f+XV+qyVPVjx9ER154R6t5K3idR19Z3G1yunV2qWlMm7WWqdpQKOSmQRgd8HPl7+vDw6o6sZ9u6I9\/xx2eLGxqZ68\/12WjbVPt+d+W2aukWW6e5bNtL6m2u3wgNy1VJsCUkD\/LWAcf4jOzj004kTTnFMTF++b3nnKadHqrwqoqymqYm3ZEWtHKM21nSrN1NqtW9q3W33FwVUs9ZRSAM52jAAJGQO+ZEY1NqqZva0RHO\/n8hc6PVemqLTN5mfGLeWz1R\/3dDfSVsvexNSwc+UK4fYq7i3IYDblRgAZ7HAx3+VbV1YtNPz\/d883P4cTrxVVeKvaI8bWyi1o5Wm7patcmnBZUr0uqJfPnN15CGzP+LHic\/wCadpxpiiat8zHKN3DY5VgRVXFG6Iq5zlfjt5ro6E1Rqaq0b1qspex1BYbjX51A4yFqCgdgMd8ENyrSIriYqjff8+95+W7Tos0TTNE5xExfls8ItG71mj4dC6OzS7x4lzGy60hn8RzYGIbJBIIG3vnGZ2rSr4sV2yjZHzm5ToUU4E4cTnOcz253z\/BnpFyag6it62eylKXtuDF6yGYl1UDDZ3AYyANo7zn16Zw9SqJym9o+e7v8eunF16Zi8xa87tuyO\/jFmPUekJVRftax7NU6UM9jBmRb7lR8YAxndk\/IDsABeHjzVXTe0RTnyiZj57yjG0emjDqteZqtGf8A9TET84boi22q+HUdr33km4oyowGxMBVI4Hqqbc+gZsdzmKdKmIpi2z9\/6uvQqapqm+3du3R5xFu6L22y2TpQ8X6Xc7WWhR5FwKV2ligVcZONx7nknOAcYmcb+v06YtHn38\/0uNHjX+rXN57N2V7cr887bLed07pluzRahPCNgotZhduwl17La1ox9o5yMZHfvNsTGpvXRN7XjZ2Rlb5fgwwsCvVw66bXtO3tqtMz+suL3tNRsXBYuxO53bALt78dvl6ATx1Va0vdRTqwsyVpMCGgZmBmYFLA0WBoIFCBYgZJ94\/8ur9VkqerHj6Ijrzwj1byVvMr1+lz42za9la2LYaGV7qyVUbTjc3LIMd\/MOOZWtVbVvknUpvrWzdtOsRg55Tw\/vBYpQpxnJz6Y9e3f2MlTEdVq9rASEKK1Nis4Y4BUEe\/f24ziBjd1TLUpUGBexks30WMU2jlSARg8jntjnkQNl6rUQrAWEWYFR8J\/rcgkbOOeAT8gT25gI9XpwT9Ydqs1gFNhNaqzKSwxxyrcd+IBT1MM16+HZ9RYKwVRm35RGyOP8\/9BntAH6tUBn6zIFhZRTYWQVkbywxxjcPnnIzAY6rUc\/bDDwyENT73D52FRjnO1vlg5xATdVqx2sJAcuq02FkCnB3DH\/73GYEp1asm3KuFqZFVwjsLNwTbtwOSS4AA+cDp0+pWwNtyCjbHVlKsrYBwQfwIP5wNICMCDAhoEGBmYDWBosDQQKECxAyT7x\/5dX6rJU9WPH0RHXnhHq3kreW\/R8pp1FuG01K1K2zIZ1el1cjPbNIyueQ3cQOhNAWF4ucO2oXw2NaGsCvaQAASefMxzn1gY6fpRXBZ6yVaptyUsjMFJOCS5759MevvwG6aDFpt397Hs27fepUxnP8Alz+cDGzpWaNPTvG7S+HtZkJVitZrOVDA8hj2PBx37EKo6ZtFg3IPEp8EiuoooO+xi+CxyT4nPPcE+sDKzpDEOotQo71WFLKS6syVomGG4blIQHHvzk4xAel6Rs3Heg3JehWurw0XxNn2V3HAArHH4+naA9T0jftPiAMiUqm5CVym8EkBgSCLCMZHzga6Xp2wk5QE1shFdZRcly27lic8+\/P+0DBOkuq7VuUAfR3Umoki2pUUE+blSE+z35PMDr0mnZPEZ3Dva+9iqbFGFCgAEk9l9+5PyAbwEYEGBDQIMDMwGsDRYFiBYgUIGafeP\/Lq\/VZKnqx4+iI688I9W4kreZ03qQsterejlg11fh2127EBVSrFexyw\/qeTiBDau0U36wv5afpTLQFQIyVFwNzEbtx25yDgZxjjkJ6hqL9MFY3C0EM9malXHh4scIB6FFsGDk5K898htZrn8fYpHhLZRSeMnxGR7GH\/ALTV\/UwMdBrbQmlsts8RNTSHYeH5ks8IWeXb3XAbjBPbmB16vUnbTbW5Cm2pGVkxuDWBTkMMj1gceq6i6WsDYFK6jTUpQUAFlVhrU2Z7kgu3IOPLjGcwPbgEBQAwJMBQJMCTAhoGZgZmA1gaCBoIFCBYgZr94\/8ALq\/VZKnqx4+iI688I9WxGQQex4Mlbk0fTxWyt4llnh1mmoWeHiuslcgbVGfsLycnj5wD\/s1fOPEfwbDYbNP9WamL5L913AEknAPrAdHTwrBntsu2qyILihCK2M9lG48AZbJ788nIGl6ZXWlaBnbw38QM7AszYKjccc4GB+QgLQ9MWrw\/PZZ4NfhVeIVxWmAMAKACfKOTk\/jyYHTqKA4AbOFdLBjjlWDD\/cQMrtFvcM1thRWRxT5PD3qQVP2d3BAOM4yIHVAICgKAjARgSYEGBDQIMDMwBYGggaLAoQLEDNPvH\/l1fqslT1Y8fREdeeEercSVpS1WJCspKnDAMCVPsfaBbMACSQAASSTgAe8BwHAIBAkOMbsjbjOcjGPfMALgAHIAOACSMEk4H9ciA4EqwIBBBBAIIOQQexBgMwJgIwJMCTAzaBDQMzAFMDRTAtTAsQLBgQn3j\/y6v1WSp6sePoiOtPCPVpYCVYA4JBAPsccGSt5qo3h0oKba1r2LatZCNtFbABWVskBsdvcfjAwu0moap93iGxlavabRgodJjBAO3Pievv8AhAvWaa\/cVR7RVmzaQ72MrlK9p+2CQD4nBOOflgG5fz14tNxcmxi9m1aS7bGRVdc8BRhSCPX2Ia2pcaaVIfdz4jKX3jAO3ISxTz\/qP59wFdNS4OPFDsWrBsZmIVHwvlADFTk7uQBjbznMDJdPfsLE2eKGRVHiHaUNYDZXO08luTzApK7cHIt8bxKySbD4RqFyHAGcA7ODxnhvfkOajTXl6nsW3Yj1PtD2Ao5rtV+9jEgE1jvjvgd4GipqgioQ5xWljHfg7zWtbVcMCcHe\/BHOACIBRVeGQnxXAcBVLOg2FhlyfEJyMk4fdkKAMQPYMCTAkwIJgQYGbGBmTAFMDRTA0BgWDAoQIT7x\/wDRV+qyVPVjx9Ex1p8PVszgAsewBJ+QkqcdPUw1dtmw4qrFp2sr5BBO3I43+XkemRzzAnUdVFYfemGq3mxQ+7yKisWXjnhh3xz69shb62zy7agVa5qctZg4UsCcAccrx+EDNddlLbVr+7rJttwobcK94G3\/AMWAw9fX5wKt6sF+0mAxsWsl1AJS0VncT9kZYH14z68QNNDrWtdxt2oK62X3LGy1WwfVfq1IPsc+sDtgEAgKAoCMCCYEmBDGBBMDNjAzJgCmBopgaKYFgwLBgAUZLepCqfkCSP1GdvlZy2d1zjrBtEhqspGVSxGr+0zbVK4woJ4A9hxAG6dScgoTnduJssJcMACGOcsCFUYORgCBs2nQrtxgbt4wWUht27IIORyT\/WBB0NXPkwCpRlDMFZSMeZQcHg4yYEV9NrAbILFmdsszZXdZ4nl58nODxjlQfSB0V1Be2ewXJZmOASe5P4nmBcAgEBQETARMCTAhoGZMCGMDNjAzJgJTA0UwNAYFgwLBgWDAoQKEB5gOAQHAIBAUAzARMCSYCJgSTAkmBm0DNjAzYwMyYBApTA0UwLBgaAwLWBUCgYDzAeYBmA8wDMAzAWYCzAWYCzARMCSYEkwIJgZtAxaBMAgMQLBgWpgbKIFgwKBgPMB5gGYDzAMwDMAzAMwFmAiYCJgSTAkmBBMCSYEEwJgSVgTAIFKIGyDECwYFgwGDAYMB5gPMB5gGYBmAZgLMBZgImAiYEkwJJgQTAkmBMAgEDOBSrmBqFxAcBgwKBgMGA8wKzAMwHmAZgGYC3QDMBZgImBJMCSYEloEkwJzAMwDcIBugNK\/U9oGuIBAUAgGYD3QHugG8QDxB7wDxR7wF4494COpHvAk6pfeBDa1R6wMH6rUO9ij5sBKiiqdkSicSiNsxzcz9f04\/j1f\/ACKf3mkaPiz9s8pZTpeBG2unnDns+JtMP4y\/llv7CXGh48\/bLOekNGjbXDnf4s03pYT8kf8A6S46P0j\/ANfOGU9LaJH3eU+zns+MKB2FjfJB+5mkdG489nNnV0zo0bLz4e9mDfGVfpXZ+e0fvLjovE3zHmynpzA3U1eXuxf4yPpQT87AP2lx0VO+vy\/bKrp6ndR5\/qWLfGFnpSo+bk\/tLjoqnfV5M56eq3Uef6YP8Wag9lrHzDH95pHReFvmfL2ZVdOY26mnz90r8U6r3rH\/AKP\/ALlf8bgx280\/8zpM9nL9v0K3WovdgPmQJ8GImdj9TNURtly2dZoXvdWPnYo\/eXGDiTspnlLKrSMGnbXEeMMH+ItMP46fkwP9ppGi40\/bLOdO0aP\/ACRzYP8AFGmH8XPyRz+0uNBx5+3zj3ZT0nosff5T7MH+LdP6Fj8kP7y46Px53RzZz0vosb55Swf4vq9EsP5IP3lx0bi75jz9mU9NYG6KuUe7F\/i8elTfmyiVHRlW+qET05h7qJ5x+2LfF7+lI\/OzP\/LNI6LjfX5ftlPTk7sP\/t+mTfFl3oiD5lj\/ANJUdGUb6pZz03i7qI8\/0xb4n1J\/8sfJG\/cy46Nwe\/n+mc9M6R2U8p92TfEOqP8AEA+SL+4lxoGBG7zlnPS2lT90R4R+2Tda1J\/jt+QUf2EuNDwI+38s56R0qfvnlHsys6je3e+38rGH9pcaPhR9scmVWmaRVtrq5y47NTb2Nth+bsf3m0YWHGymOTCrSMadtc85Yk55PPzmkZMZmZzkoF1Vljgfv8vT5icmbKopmqbQ7NT0m2tdzDHbIO3K5GQGAJKkgqeQPtCZU49NU2h6K9Eroi8\/OPY4SMcHuODNnlmLFAIBAIBApZyVUqPygm1xmHBuiztz3Tli43RYuN0WLjdFi43RYuN0WLjdFi43RYuN0WLjdFi5NzBLOUkQPW+HLFFyg48xKA8DazKVVgT2wSP6\/nPNpMTNGT3aBVEYlp3+uUPpizKHdwQipl628VU2Pm01hTnGd7Jh1yeykAHHgym0R6cPS+U2jfD68zMXmdnjvzmN\/bMZxedkTa75Tp+pprezxUDhq9g21o+LOOVLHC8juATgnGO8+jiUV1RGrPm+Ng4uFRXVrxfLsjb3dnJ6d3WdGxJ+i4Yi3zmmlzuYLiwgnzEHccHv2zg8YU6PjR93Zvl6qtM0ar7M887Rz73IddpCbD9HK5dmQCtGDAo685Pk5ZTgZHlmn0sXL+3zLmy\/kaNeZ1N\/ZHfy23tGWTst6voNxZdF3IYZqpCja2VXYD2KswPPOFPyzjAx7Wmvzn5w+X2nS9EveMPyj8c7+HhLdX0e1a107LWA\/lNFNjZKBQwYt9rjuQffGeyMDGveas+M\/LeLk6Xo2rFMU5cI7OO3vtL5ye58lSzkqpM+sQ5O0Q4IBAIBAIBAIBAIBAIBARE6JgMGA9x4GThc7ee2e+PaLQ7rT2phwQCAQCAQKWclVL\/\/2Q==',width=400,height=400)","c3cee742":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.offline as py\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1a4aa96d":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAS0AAACnCAMAAABzYfrWAAABOFBMVEX\/\/\/8AAAAzMzMGcZFoaGg2NTfv7+\/7+\/tAQEFNTU319fX8\/Pzq6upYWFjc3NzZ2dnk5OTR0dEGdpfMzMzT09PGxsa9vb3m5ua2trZtbW1eXl6enZ28u7t+fX2ura0wMDCRkJAnJydjY2Oop6eNjIwfHx+bmpoYGBhHR0f\/5RUrKyslISJ2dXWQj4+GhIVSUlIQEBALAAMbGRwVExcDOEgFZIAASWXdxhIAb5YAZYgGaYYFWHEARVkAJzgBFhxbd4N9i5IAWXs1YXZVclsATIFlckkYW24AUnv21wD\/8AmmlhUAaJfs1BOBi07ZwhK0og\/HsxBDYW0APlmYmEBMbF6pozgqQDsAO2AAUXd7d1uxnACOgzeTgQAAABMYDgctJAAAJEOCdxUAQ25FV0FtbS0AN1gCHSUADhSEMoslAAAgAElEQVR4nO19DZviyJFmJoU+EZJASEgICYGEYEAlUdA10+6PsWf3zuOx+8az3luv12v7bm\/vxv\/\/H1xESlBQSELV3VU1vdPv002BEKnUm5GREZGRKUL24HXNsPwwDlIvcWajTFqK3GS13m5vbm5ogZubzXa7nk5anLhcSt3RrO0kXhoFsRvaY9PQ9KHCywCe55WhrmoDwzStse37IYOfwwaMx2MLYCIM0wD0jjEYDDRNRej6cKgoCo\/lCkKHPAgdQeYVXYWK5KVCmayKDyzmGLIZO+KejzUndduO50XXQIHLbtBmt1cA7xbu23XjOIgiJLY9ypbiakfrABwjdrv60x6Imx023XoC4BhaE2heaN9No1+vxGzmeFEc+tjQ6pCXqykagiTZFrwbUbqbRaE10PkPoBwh8ENoxQETDWhEHRqxkTB0OsIe8h14FFCQUB1lQ0PpMEBSTQtklbVayBoNWg0RMOTvsZFDaOExSK7RQ2ligpmXCQWixFs29KLIS2aZuLo5ZXG94qDfZN1uNwMx4KZ31E\/gFqkrfBhJ\/wXQkaG\/AomgNEIXOk2aph4gZUrGt01DVWTirkHIaO+56\/qJINz95NgK289dg0qEFNkaPPp1PPoYpz41fKgaT7VHv076sdkyKP\/elXlvfLJs2bR6tH802FA15enYGsQK\/nFtMraI6wQdonqJCUeUWFAiJ0YGgC07SYfs\/F7qBPk72U0St2PFaI8Icc93aBCDAhFcx2Na1\/Ac99GlbczYUh\/7Mnu2FHoNr0MaEmckdhMqGtQTqU2IRkPqeZQCmd42EeGdDicmNHGX+DUx6TZN58SiFqu0li43s5EF3ULyUygN+ogXc49+G9bTyhYYwvDiUgEkKETJpiAr4oYQlWLP4ukSZSvGdw5SgGLnAIUKfkTcjOBltkbGUA5F\/BhCcevk0W+B5GwNn062QEYMQqZOoZ06NCB4tzLRqYtfx6C7c701AkYmS3ynAHspLTyCGM4VcqKh3+lMAgUQOHHyFGrMhGo8JVvkxoF7BMa8HX5CMWI3rjMxguoMCraSG\/g2Yj8BuVoui5\/zwBRT8Iwti+5u0OMP4ffUGT76XTw5WzHFf9VsaSVsJWQp7gsaTUh3VPwIuqOBDqSG6t1fP75CMaDPPylbPDUnSNEZWz5+vmYaDd8hWxMO3+kgOh7de7ImVRmxjC0NpfSAG+ex7+LJ2SKjJQ5852xtZCQmIUds+YzCDDqeSkf732\/EG\/xjMUlqrQoW8c\/u0TW9AVV5GrZYVMTAK3bxQMI4YWz5jC2PtmeU6+y\/cVh3pVm6Y34ZjJ7wNXLi0gC\/l+lN1yDKjra9bAUFtSOOPrriQraewt4aYKh0bCtoK7De00MritgoILotoOZX4si6+8Zgr2oc2floyIdRzFTb3ogfBhEOiOPrKITq9+I0fPxRscfYenx76w53CvsYhZa\/DIGmH7M2D8NTsyWMmIl0hqZsKZObDwzvfgiQrafwqvegJ6PYHVTm0lyEQrfKR63Pw5Cz9fjxrT2sKuXSMNZtf7SavA+QLbmivT\/jPgzmdzXUsD97IFukmc74DGbLE\/q82uDTAXrVJPfRPuMiML5FMF70GQ2AkWaydZ+7Gp8IcBaDTOPnrsYnApwhI1zw3NX4RIBz1UQMnrsanwhytq6fuxqfCD73xIeAafn1Zy3fDOPP9tYDkNvy4+euxieCPGLzk8p2+wlDo0oxP\/6TBp8mUUnQVOaethrI1OA5EsceBm3U0eh5eHXPlvJEyZcYkzfpM04MNIPmEDJTieWAR8t76WBA4I2pA1uql+jEE4MOiR0LLCLT9qHtH2mQR51l\/XQTPffQZrIpEssjrkuoxq9tAnVOLWBLl2VKzK5COLPThcOR7MbEfKRZ6w41c5vrpw2Vi6cD0nV9VzI8llu4JSQysSfa0Y2sz8hQBLUiIYkCJe3Hmk4GtsLdI5X98QA9EUhYGpqmWClj66Zga+QTSdbbRM0IGS6RLeIMJo9VD2oR99EK\/2jQQI1PZTcCyRHoUF5Bl1M6a1OeAD0dKg9BxmC4SkLGlrZ9tFgwsBWUzrX\/pKCDUvd7JJayHtGdKLZJT0zGPSEl5jJ1eeJxhJ9l4JKwpKTHG7WArSh7rMIfBWBIcLUGYhw82rWBrXRU\/pVsGjJRe9pdS\/Gqrqt5TQdmoUktlUQXriFrvWKKWjDNwraLifqe83KJJNbOUbmPaHwBW1558ZEYxmN9HcbTgJDrEVbRTNtchLaMvovCYpROLXJpTHXbPsduMFy5buHBb4jpfWDV99aqrpCnmmwHjzopzUC0GYcqfpdZCnRWxkkvv8XC+lfBwYwasGUTHnWjUeTaGkNC1kD9e1TX57g1S\/vuONyoGJ0C\/2INPhaALafUlhNZj1ORs16brHmVpfQZjC0r\/0UahVkjtkI+RdmaMe+9I9oz+33ZwuUZ7M\/krh\/H9lOyNSvtErlbxtgCosJVnraUsxUyzwIFbqRfX2YrHEUi9hWRpTqCpIG19N5s5TXo5brWkrL4IWwZbqjIY9++y7nUxpY1ZnkgvO8WLRAOSEXCL7XJqLTaItPijC071aByLIOxkC1WmCGmXqo064nsnBlTL56TetGHspW3lwB21lJuzpaYGpbWkwwrw87RwYyGnu+N2HLp8XRsFHZaapIKgx1+0S0d02ymZFBvyZT3g0IyjEJvIZUKiwA8gC1jyj6xOn0gWzb7ca\/lOEvVbcpW5B4KGI3hP1MPxArwlS+KsH3G1ra8BGBLCkq\/cW+Stq\/TpAtS1uHSNqtf4a8O111vSWIxahNvfJktMVkzIfdp4gRETDw0uq33GxNztmR2TXWGr41lK1curAC4Dz\/0GVvjAF9zYSVLE7z3GrZ8sqyKbygw8gmFpaTcS+rjMTgnNMy5lg8\/xiKJ8iHZkEV7jWkIQiEFRth8TMzPYmwZCT8ix2zFzLIZtPWhyEd1bImf1JQPX1jFsg2uEDHhZdjU3pqwYZ6xFfjJsstNUL3nbI1ZI1gzkDihWrZufML9XJJGxkzRGimmreG7QrbyuWeWIKm08G01W7uQtH42E2TjtchZ2lYSPabBcrasvGvJo7WYEXvadUhgkoqA\/zYkk58NWx+MdYj\/ngEfYZ7J+uWvHn\/NzQkmLlk\/cSKlYPZk3dY\/cEnDMP7yFy9ffvMPT5ozCyr+8UKN5RjIloGb+HxIGdYv\/\/TNP\/63\/\/7rb\/\/x2y+fUMDAfNg0YcugH22OVhvomi6EPJpe+vvEWhQQq6tvf\/PdF98Bfvvy6pt\/eioBWwZoRFyG5F5L7M0gGC276fsFlMyBiiZtKOhkYAwHZNgTzAe3gfXLL68Av\/vqqy\/effXui\/\/xEj784okETGrI1tzQ0EaxFpQu5vAyf4+OxLuaMFA1EmgYe+3phqy6as8wjAfMlZsgVgy\/\/u77r37\/w\/fvvv9d\/vmbf3qCVftZdIktXkNHZWIaGyJLdN7KMacP9wBMQXNNIZR76DANBa8TDOSeovrkAQr\/D\/2cnJf\/\/N1vvvjNV+\/efffNVYFfPbQ66ShL\/Adx3E3rl2LoK1zhu\/S7YdgeUto6YEIvhePPoYKC14xcv4OQqWpPBwc0fEAnCgvJunr5P7\/7AvHdu9\/t2fryQTceU+qFfsDRhzj3owtszTH0oIccbXfbB8Eq6HrIWKqZJkqQomuyJSA9+1FRU4wHiNabPTVA17\/88MW73\/\/zbf9wKGhezoCuCtU7FGlzJ3\/m1bPlFUs9TZCwE7JardUDLkNAkApScppUwWakEd3Xm6vAMROtfr9\/9er2m2++\/eO\/\/umb29tXfTyAwtV4HtE9ToeMmt9H+wJbUHArSZaUbmg3E6ebzWaxx5w+YJJbU3oFWwM+JMt5bFp5B9RVpbmS\/xWy9frFj\/d3l\/zxxSv44k9NaU9P191HjadrneTSEjLZvw78gUyLSIWssG0icQNRo9u8L6rEL2rYU0Rv5rU3fhuva8hapOKWk83a1\/3yqk9vFvPpdLWaMKxW0\/liQ9\/0f\/HrpmZNdD9hrSs1\/GXiNFtw1y2LC3ceMNeiu3nLh3SaTxaoXZrwPdk0BNMdD9SGykv+1ZcrDpTmagqY4wvQ1uJab75sbKGG53Z20zWHXjO2\/PLZ\/6BhaExQh6bAmj6id\/NxPk2GpqoMBrKg9xrrDrl0p9fmI9uAjkbd7szx0utr3CDVdUO\/6dZz3qwJW\/KhtGISaVwsLm5yFdlUh0QY2\/JAIQGYaYpM9PznFg0EA2hSNO0BicJoH09BoFps81wUs\/mm+S4RAu22c8zu0G64wCIdNWFLPMiunaFVk+wLj5poLtf3fXeomyrv4t5uhqmbhSTFk\/21BbOprjeXI0T3APZRarrBrbR02udwSrJaSxA1Yetoeka4WeEObfuZYmHT4BoDXlUN2ZBNU5UImF26dZj9EPfCaSh2QyXtdcswaTge+vM9WRl7FbP8c7OVYVG3AVtH\/W1MKW7MM9t\/HjWoZWEiGJ2AorkF9B2UFF94BLrsCg31vEKzM65GYkO9JdOCrNkk75DOsuiYjTTXtURuLrHlHvk41j22zFnZL44gGIeMBZcb2JYBndp1Dseu8018ej216fjf7TrTe3xJ80lDvTXbK61lO7vpth1u2y5YazXRKYF0OQZxPOJ2cEzrHe0gcaHDC2YoFBpchp8qit4znOP9J\/LRzIjlhnOTPpiSmrPhpD1Vy9U0EJRmOf8DelBazmTLOe3dNtsL27TB7+PlRbYC2raro1DJhai+wdt67u4Wwj4+7TQxlXVN4+VDj1Zr+zafL7PpmLEjTRfzVdfLnfJZo6Tv1V60jtg66PkGmiAWL8VOO3S1AmtZ8sCGHJ4KkqCbfntVfwFBtRQmSyr1UV3xSW6G9AqWBToQVNUKwMog7kT0uCie1nRKcc+K0cudcsNkboveZFCzKBgLe0jYE1vbw2exAd8udykuH+RhGjRrgLTNZMksu8hrS\/MNGj6X9jobCDGTzOVCwOzLRCAZ01pSoeoTx9c0WVHlgdUmCWvg6k5xl9vvB6gOLBoXu5RV5iccgfpG7IDFMWOk3RHHjK9RAz0ftsiuni06PYk8oGs2Xyw2Ylwcv2hGG6qgaRpug8ubysAnlptNQYPsxxY1wrCEarpaRySFd1S5sc7RJjIuBe+OOwQTzMs3m1Mt6Ibtpk5hpxW2mxOF5uqYB0U1TNPQ7mnDcHJhPjGkrftYRePx2Bcn+8BNrQfPD1TfBuEZLKBTGr1Ixu1oqZ7Sgy81w1CGMhC0MCm6YFzVFaPW3fv0hiNke3MQqcu78ZyaSuxpBdqgN1ALvRrmIi30woSjrZkXXUdJd9t1j\/oOnFLP1j3RyglCb3ay\/1S3dJbv8boFsqW60G96pkxQEFVKteRmv+ErNDkbDvXBIO2xoHNnXlGafNzrTTTVvLu1lfGy7CdHKF\/PpKf7vtGhVngNRInR+GhQU+zu6nCD\/rp2Zt\/OzkXrPubVWpkfDEPDIKqmdSRcRwESgYfBZrNpcDhrH7N2Hdw4V7MXVR52cpKrzni6G0DlS0bEvOQ+V3R7fegaHuXmkSFjGhav5M\/EYUOH4u0Fwt\/WseWdBUzLAG5uVUjcNoQBistg308YW7p6cM\/zq7A\/ATRyaKlBpRrl6\/fozIK6b+NumWid1Ftlm4x2lFMgY0pXZE3hb2oyknwqXhYtEK75olVRAl8E3aVFcQDY0u4bb\/mWuCoKzrRugE3q\/YZaPd\/iFkHtrxFcDJ4dG2HwoUn8gTBeIPEGa+3fVLPFU3G1acDWhEoX5su0o4XuMk3v97QN5gLPoQ0ju2abObl8tvxuMWLNHnUz7mJHJblmM49KKXokohNMoX72TXVuYLbIynT8OTYTsezBC3dClB2FKhLDo9vsRNW5lOirHuZK14W5ytYjxSPaOtjgQWXAeExJ0K0peg8U8vjUJAIpyzvkMmU2SJVdZ1KpUUdstaY0K7G6DEsvmlM7HrtR9yiDk4aWKU2AbU2s9azLXBMwTY6LqRAfGO3qBO8OATbIkkr3mx4Y4y3wFoCtipxmMp9kjToigIrLM+FSwHTQcndkeSEKZsZ4nlnrqfmrKt14h1GFoewtSa9RRIbHu5DphCujfWsgW1n5pPOYStmmUUdstRbTjJ5tHaTKfu4h9pps42hkqTqoVi0wOl\/e42NAaZkOVqhCkmYBsCX+PoTGL\/nO8ZGt8rUYhLYkiU4uM1V0RfG88QaCa+ogNa3LwRCXJoZuaXpVrCOkr+uEQyf8GPv4ipZNoKPI0WYJDxbrBdyCK1m6cs3YKl\/nE9KsqdrCrrjMSkz6ni4IuqYuL6uMAN0nwzLl8nCNQm\/f1qRd\/Nuf\/\/233\/\/HX\/6i+X99ez7xrNGA6LTdHaWhdd\/xO4KgaKbtMpNOoVzrXIRiC9lyyldFcZLUaqi2gC0u484bX7VC31K9MzOpc+ZZCtiFVGUA1mxZZcS3\/QMLxdMjtUHxPEpdUX\/LMki++yIm9JaejX2cNHP9icPiDOBBt9PYH5v4wMLhcAglDQzTDqNkhF72rD2PB6E36lLxPBrr6chW6fpEA0RLWi2asrWZSNn9DYwFs6PqMJqYPlHv1InAHou4dyoOaGMXUDSj1Omx6dXrv43T2fJv5Y+N\/F95vs2fU6v74vX9XadZvHSeHQdnZqNTzO7CXt0NfnA2nNhq32vTLrMgSte+RhtJkqaN2VqsJGlz2ld0jXetjq6PQC+q+4YS+CMc82WwAVEuN+Xpm\/5b+tcXb758fXv7imWNnOJff\/Puq+\/fvfvL\/\/4rpf2\/39PQntiGux+VTIuVwclj0dJcFDnuRIPwEWMrLbPbxBay1cBJLNiaStLkxDiUB4YtGPhUgtgDR784yJ\/gWPHWhMlCetUHwvp3uUen6P\/hi+9\/+O0PP\/z5Zb9PX9\/eC0\/SGXIwu0TTnq1FfiYVAavuEV\/RkLEVlA2XdCk9pCeibN0bFQeGgn3Co8OI8E4ZWSd0HSbXrTPNBUzd0tsKqjCV6z\/ynvju\/1z1377of32iWRQmLM3Zmuah+wmHdImTVeKOmS8\/xFKBLbfE7OMpkCVNGmv5DYji8l5YMNdBNFBAsLhSso7p6hX6xhTCe3Rd037\/Da0m6+rb77\/I8wT\/8wpOBGaPlZ81aT+IrWKiI1uJOVauPUo6RFjhaAp+on9zzpaKSl7imlsQIpxe5niY4AqD7DraPZ11rrtowM6XQ+HUlu3Q11f9F19XdUNk64eCrT\/2r26h1749no9wpfaDeuI013CjeU7WBO\/JWsQr1ieBqnGJ3ddjbC0fYG8hWyUDGj5vBlMnFiCvpTicOWLL+vlQuGed+bR\/1f\/xRQ1b\/f\/84jtMnv\/zt\/CB3oJwHUlnOmJsNdbyixVT87MFI6vIJtFXueL1t\/mu6aVsiXTVjKwVO71MtjagvA0YTQZeBVuHvhhTXdP0M7LIDO6\/\/\/WbGrauXv7h\/\/7l9\/\/+RySrj5J47EEnM8ZB9wJLB7YoZcaGs2Fs3ZvBDqelO+Fp+e0vGqp58BNREkssS+aJcOj+lGitE+EakCEanWcxG+rQN1dfv64hCzh6+fL\/vczfff26\/\/o42sbYareyepIOmFGR5jKWy9apgxK2Sp+LoaCWn4+Mhl2RUulsTCzKwWbGrdnCUJBLCdtTbMwtVTXOEpwVSkwov56tI95+fPGWZkfeg8dki4pleUglyObiZIrn5rLFnVr0sVieR4iKCAzGZtHAKUUXvFWy19Iwb4kZcMYlI6+Mrn1XHCggWergfk9k8WOh1Zitr2883jxy4wPUWKJNm7HlcC1R3MDAMMpl614wAuONq+D8NrMViyo0GxU3lM6zbFPi9\/KFCpHgz7AT+zVGxAAVAm+Gwqmr6LP6zmr11jFbaJsOjqTcxjGxRaRlM7bQKuU2Tns5zdmanoxcERjysxJH0aZZa4lsNdDzUzqdbzKpLJgn7OUWboI3enGZcBWnmjhIAFUuf2JBuGxWLHrbkK0rLEU9YkuZttvLAEbWRsIlMZGihS2Pav5EcaGTGJWtIqbcqo2P42sgXJSbj2g2LV2LXChc0QLL1ZsOa9R8mN8iWKcnzZlvEOX\/tSFbt2x3t2MNCkLVGpOINtHzDmXqis7ETcGWeOLO4ZY\/flmgzWJ5ws5qc3FYXGwy6tFleZxYZDdrBPhq26Vqft9uxQz14NTNC9GLFWidLX\/cEd+gKBrHN2TNnWkPHLDNZeFylhsmUwuOcnu2pscGA+bBm6XZPCHefrCQLin6KUYCfUqDMrIK989mUWK\/lK293pqWZwTZOHa0nXUzNd\/\/0dn\/5oBllw5JGq2ki2zNaCiNUHHRvd8D748tLpwe06oXutgYQq5VXSt0eijvV4TeLVa2zphw1DLRKtiSK9JfUWPLVG6ouF5R1FvBiSLujEA8Y0ell\/uhH860qXgC7jg2sg0xU6xyhhhs+qxW008pl4FdWvX7\/HHJMCaCy6yLdZ6iXTW9BUOlvQLF3awjssC8eB70hqE1utAXnUlGUo843Cldx9E\/bNGaByhiLALoqoxzzakIVjxXlRQD6Oa5g7NltlTKyNpzVP4USsAoIpHHwjYN6KKUpqXziqjKskkdXaC0BDJy4bRK2eqg9Vj3uEkWXBBpeehmsmFfS9OajQ2tfeHllvy+Iw4r89B7lDgx5uU0Ea0ff5QckpZMaoNL0CFcq5ouZ4kcz0Gh8KtjtlbWcSEaqX3wqzRBOqR5mXjBQfaltKnLgjg8DriULL6IiSXVnVlq41q1Da0LQ+R4RW\/BrOJL8yWo3umQZSVdjghkCXn6tj85Eq3jKZjB3QPYy5EuGB+ZuKGLk8nF1QJskyz\/snbW3D8IV61oVa+vEhZYv+Ub+voCXRjXoXGLBmWlLCwidEgyr6BrsRTg+2HeZkeSdTJeWLkxV72Ay6Y5I8DXnNLNfIprAqcLXAlbcFURqrnDfJ\/1XKe1aife2dKiN6\/pq3qyXlAwTgWpnPd2TARBINYiO+cLeqFLOvBtkdRkt4pQIHc60rsYN+2VJcjsK0r3lEiZtADLiiELptyBq1olT7Ax9h21kqzw8uNB47fIRq3Soq\/6ryunxeMZsgUClFJx5hwz5mR0xudfxnm\/E6Y5V\/fnvT1UiOXWaQFxcmAl9wTzqVOXHtjKaFB\/o9EhObSCLJVezlW3aL\/\/toYuIOu2339TOd6A2CAh0BvlgMLgBIwhZiORekMULGRrVrRrW+RW2bkFOUrIhaQ6\/46W1uLuMM9iywWJlxad3J1xorv2Es03WaCtY8D5Bb2t0F35V\/23QdXvBcrnlABfcFOzYuK2iysbiy9Ayff2N+2UmQkSWhP1Dy\/IjQQmQ8dGX3e6J2t1KZkYF\/wfCJXvcwVkNVociFoLBKjU7Oq\/+hq6IcZrqrN5WiER9qzEGasJViEY3R2+88bLVZOEscGyaYw7RHvhEunp5PJBtC4mhcy41tF8e6do4AKYG9uErSl6iv1b+vezobF\/9Ya+yN\/VjO4hd0fLEakKlQ+i5VVsCrtHdlm25EK4ssWpcsEpRCZal7sRqHmxKjM1pJzaKG8vye0tEK+vX1\/dzVv3+69e0K+LDnpbcycCWFwFKycxCs4l+x566cHdTG9deIxIUAjXPTtjr9AuPztJw1pEdFWiClS2M0qNsXUHm\/YPkkTfvnnNzInb1y\/+Tt\/upa3\/pi65tJ0UtJzuhzum+8P+pYW8Do4hlx66Ml0BL9l87qae02b5KTMn8SLawsMNhjOfTWJrc5rdsxMGI7pBrhdN1mLKB3Or339NZze5lm6lrTtN1q\/dLEYv9HyHP7UPQbKL\/nlpWauHjVHLluZHEsYZppRb7XesYLtWTFZwOJvSZRKb1dYtIirKj9Hn3a82l40IPub1WzVKc+weaOm\/wYgmr7Ata316YOu2XgHOnNyqiqSOgplbCF2RIyk\/HF5MTY3Q869kq+PPdtvpilvRDaUT7j7Y9kkTbjJd77ioJsPWKcIL3FRLKPMCxCn+TeKiFzfbbsk80HIy9HUOCSX9F7VauoNpwCBaAp1ujzEFNxkOyzS+lFHvohlexZa9mxYUtYCyMqymh3e7bqVD0M5j2\/kGQkPLTZMkddm6\/cLhabjb0s0+fnqag5oeAoU10QErFXfT7QZVwozeu4sFjFMdMApX2+0srLMdWUi+iq37pdZjG1RdxGNWbYCcyDxugoMYKmDuCLjGEISm2Q5c472e\/3Fm2n4O27ZCuhetSh0\/2K1Zc1NuqI7Ob4u2DL7NDk+mmxo9bNWxZW3X592vAqvdqFK2MNostOk2m+92e\/Gfw\/\/dbsVRSSCTBqY8P7DdtDBNX9HVdD3dY7262R92QksrrYUubvNuAhplU1J7jBIwslbrXc34bKBDXa3l7fZuu15doAyqvhODSvEY+g7djCidlv8YFdh0kvg1OsOIZ\/PtfDqFcQWHxf7bxf0ycolbcNP1fLdywrJFG257CvcyxXHqvBa41dJ6vd1JkVW3NFVFI6p2TFTtaDbZbedruNLRoAhvoVnXICDLxK3ZVWWQgfJrbei8kuz1fIKM70blfOve7q69Fl9fYebb\/SI2P8LhF\/vDk+l2fV0mYrJm+oHXzsQpiHUu5vh3zkmjJHLtyxsPsbDp5YfcdTCXPIwjL3HaLOc38dLA9S1Dv5Czr5YMpRWYlEbZDHoyvmz+\/ubHkiI39MXbk8OrzYVb7wgyQ9PtbxjYU0wf8ZGAwnLbkK7JtvQhTOrutAev\/7Yu+\/VqsT0pbL16lP08820CHqPkAmZ7t66wPw73toKukVTEA+WYu6w6T0tb75aPtJkyWtOP\/bjJQegtQUvkmu\/IGwDVxzSf5Pm1+3wM7VTasZ+XaegDS5O8uO619WhPZkUjqD5i85HAo+YL0sSZjbpZ1h3hFhxBaJtqw1tTeriLQzbJtfP6CExbbznc02FcswrtYwDnqj+Bh3MeAfdxwC0eTQYD93O4\/4iTR8P6k2PrOYFslWYkfUYJUG+5FU8Y+VftkSoAAAKsSURBVIx7wGcK52Gbz7iMIdryScXDOT\/jHtg09eiRHob9Xw7M1BIfvlP8zxMsFr3+uTxa60MRYNp23QZan3GEFCO9TXfA\/tmDDYef2WqIBGdfP7PVEGyu+ub5tbwxZvv+6Arp2U\/lIj8cbLs06UOfSv7BSI2hQAT4owXGMI\/+hjJLC8L\/Atm\/hXfBM1YzwSm49Lk9HwEMPjmIlWtjwDKkErI0nPHYTzqJ7VpRwnsWtKl\/rYep2v1Yj0N7D7DU8meP2HRAuMeuD4KlwTvZ9eSIuMQjg9ginqlrJj4\/MyJRPA754BnryRzqupzmp4Hr2mpqdlJTC+Px2HV4j4Rj304EZ+xa6sA0E62XklQD9mbPWNcYp4n5yylYjw2ZJx2F4MynrBAe0xLgFaPGeeRY7nSEDhyE04RnHATcNb422DbtMwAhCwR+dn2aIWeLO9vz7zPKkPfE7rMbXA9FRxAuTMx3ZH6oaj3DGtu+H+bABKaxaebTRM3m9DtsK7mBYVq2H47Y0vG2k+dl3y2Kk+XTXBNBVoa6hlD1If+g5IGmELBacHtQL6iYG8fXUcryLkaZtBS5yXp7U76zG2CznU7Yw5C4Vmu13pyfcIM4P7xbcUupO5q1HSdhcPB6XbggXO\/s\/JsVW+mRVFej5MoMazFrJ150HccuazV8ceEWA7hFL59iXbLdJ7pOGrh5qyJsALZ1cSqc2ZXEyfas\/O2aE5dZd4QJKl4aRQG7EBZjjy2LzSQizJxbVlxwjf\/yR2WBCBlVEiTkUofS4uZNkhwt+wHa8IJBzCptQTGaOjzZt0\/Lr97r5fsW4haG0MbjIv8OqscuPcS1q4oCVzKsPOEGmh1avYXJTxN8dpq4ZC2FF0wj9pAvoCSZIR1HDXWDkgDnSjkX6TVWzLbY3d3fTvAnh\/8PfY9LI6mVpREAAAAASUVORK5CYII=',width=400,height=400)","5014e43e":"df = pd.read_excel('\/kaggle\/input\/covid19\/Kaggle_Sirio_Libanes_ICU_Prediction.xlsx')\ndf.head()","037013e1":"plt.style.use('dark_background')\nfrom category_encoders import OneHotEncoder\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler, MaxAbsScaler\n\ncols_selected = ['ICU']\nohe = OneHotEncoder(cols=cols_selected, use_cat_names=True)\ndf_t = ohe.fit_transform(df[cols_selected+['HEMATOCRITE_MAX']])\n\n#scaler = MaxAbsScaler()\nX = df_t.iloc[:,:-1]\ny = df_t.iloc[:, -1].fillna(df_t.iloc[:, -1].mean()) \/ df_t.iloc[:, -1].max()\n\nmdl = Ridge(alpha=0.1)\nmdl.fit(X,y)\n\npd.Series(mdl.coef_, index=X.columns).sort_values().head(10).plot.barh()","2b02bce7":"plt.style.use('dark_background')\nplt.rcParams['figure.figsize'] = (14,5)\nplt.subplot(1,2,1)\nsns.kdeplot(df['RESPIRATORY_RATE_DIFF_REL'][df.ICU == 1],shade = True,color = \"red\")\nplt.title('RESPIRATORY_RATE_DIFF_REL')\nplt.xlabel('RESPIRATORY_RATE_DIFF_REL Distribution ')\nplt.subplot(1,2,2)\nsns.kdeplot(df['HEMATOCRITE_MAX'][df.ICU == 0],shade = True,color = \"green\")\nplt.title('HEMATOCRITE_MAX result')\nplt.xlabel('HEMATOCRITE_MAX Distribution')","2de86570":"plt.style.use('dark_background')\ndf['ICU'].hist(figsize=(10,4), bins=20)","cd9f9679":"ax = df['ICU'].value_counts().plot.barh(figsize=(10, 4))\nax.set_title('ICU Distribution', size=18)\nax.set_ylabel('ICU', size=10)\nax.set_xlabel('Count', size=10)","c86ea000":"import matplotlib.ticker as ticker\nax = sns.distplot(df['ICU'])\nplt.xticks(rotation=45)\nax.xaxis.set_major_locator(ticker.MultipleLocator(2))\nfigsize=(10, 4)","56bf085d":"plt.style.use('dark_background')\nfrom scipy.stats import norm, skew #for some statistics\nimport seaborn as sb\nfrom scipy import stats #qqplot\n#Lets check the ditribution of the target variable (Placement?)\nfrom matplotlib import rcParams\n# figure size in inches\nrcParams['figure.figsize'] = 4,2\n\nsb.distplot(df['ICU'], fit=norm)\n\n#Get the QQ-plot\nfig = plt.figure()\nres = stats.probplot(df['ICU'], plot=plt)\nplt.show()","413f032c":"import plotly.express as px\n\n# Grouping it by job title and country\nplot_data = df.groupby(['HEMATOCRITE_MAX', 'LEUKOCYTES_MAX'], as_index=False).PLATELETS_MAX.sum()\n\nfig = px.bar(plot_data, x='HEMATOCRITE_MAX', y='PLATELETS_MAX', color='LEUKOCYTES_MAX', template='plotly_white')\nfig.show()","10cd4355":"import plotly.express as px\n\nplot_data = df.groupby(['BIC_VENOUS_MAX'], as_index=False).SAT02_VENOUS_MAX.sum()\n\nfig = px.line(plot_data, x='BIC_VENOUS_MAX', y='SAT02_VENOUS_MAX',  template='plotly_dark')\nfig.show()","b8e6a3c7":"import plotly.express as px\n\n# Grouping it by job title and country\nplot_data = df.groupby(['BE_ARTERIAL_MAX', 'P02_ARTERIAL_MAX'], as_index=False).PC02_ARTERIAL_MAX.sum()\n\nfig = px.line(plot_data, x='BE_ARTERIAL_MAX', y='PC02_ARTERIAL_MAX', color=('P02_ARTERIAL_MAX'), template='plotly_dark')\nfig.show()","4187285b":"cnt_srs = df['PC02_ARTERIAL_MAX'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'Purples',\n        reversescale = True,               \n    ),\n)\n\nlayout = dict(\n    title='Arterial Blood Gas analysis ',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"PC02_ARTERIAL_MAX\")","8757a1f8":"cnt_srs = df['HEMATOCRITE_MAX'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'Reds',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='Hematocrit ',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"HEMATOCRITE_MAX\")","d1ca186f":"col_search = 'AGE_PERCENTIL'\nsns.barplot(y=df[col_search].value_counts().index,x=df[col_search].value_counts())\nplt.show()\nprint(f'Unique values: {df[col_search].unique()}')","663ecc0a":"cnt_srs = df['GENDER'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'pubu',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='Gender',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"GENDER\")","c482fa1f":"cnt_srs = df['FFA_MAX'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'phase',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='Free Fatty Acids',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"FFA_MAX\")","b53753a1":"cnt_srs = df['ALBUMIN_MAX'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'tealrose',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='High albumin levels',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"ALBUMIN_MAX\")","70ee4c78":"plt.style.use('dark_background')\nfig=sns.lmplot(x=\"HEMATOCRITE_MAX\", y=\"PLATELETS_MIN\",data=df)","b31dfe46":"plt.style.use('dark_background')\ng = (sns.jointplot(\"HEMATOCRITE_MAX\", \"LEUKOCYTES_MAX\",data=df, color=\"r\").plot_joint(sns.kdeplot, zorder=0, n_levels=6))","e6c970a0":"plt.style.use('dark_background')\nsns.countplot(x=\"HEMATOCRITE_MAX\",data=df,palette=\"GnBu_d\",edgecolor=\"black\")\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)\n# changing the font size\nsns.set(font_scale=1)","f1e66bd3":"cat = []\nnum = []\nfor col in df.columns:\n    if df[col].dtype=='O':\n        cat.append(col)\n    else:\n        num.append(col)  \n        \n        \nnum ","ff46b554":"    plt.figure(figsize=(18,9))\n    sns.factorplot(x=col,y='HEMATOCRITE_MAX',data=df)\n    plt.tight_layout()\n    plt.show()","061d9439":"df1 = pd.read_csv('..\/input\/cusersmarildownloadstcellcsv\/TCell.csv', sep=';')\ndf1","726f18f3":"fig = go.Figure();\nfig.add_trace(go.Scatter(x = df1['age_at_enrollment'].head(10),y = df1['study_id'],\n                    mode='lines+markers',\n                    name='study_id'));\nfig.add_trace(go.Scatter(x = df1['age_at_enrollment'].head(10),y = df1['sex'],\n                    mode='lines+markers',\n                    name='sex'));\nfig.add_trace(go.Scatter(x = df1['age_at_enrollment'].head(10),y = df1['dm'],\n                    mode='lines+markers',\n                    name='dm'));\nfig.add_trace(go.Scatter(x = df1['age_at_enrollment'].head(10),y = df1['htn'],\n                    mode='lines+markers',\n                    name='htn'));\nfig.add_trace(go.Scatter(x = df1['age_at_enrollment'].head(10),y = df1['anemia'],\n                    mode='lines+markers',\n                    name='anemia'));\n\nfig.update_traces(mode='lines+markers', marker_line_width=2, marker_size=10);\n\nfig.update_layout(autosize=False, width=1000,height=700, legend_orientation=\"h\", template='plotly_dark');\n\nfig.show();","aaf83b01":"fig = px.treemap(df1, path=['study_id'], values='age_at_enrollment',\n                  color='age_at_enrollment', hover_data=['study_id'],\n                  color_continuous_scale='ylgn', template='plotly_dark')\nfig.show()","b2dbf362":"!pip install chart_studio","196df293":"pip install bubbly","53b83fa9":"from bubbly.bubbly import bubbleplot \nfrom plotly.offline import iplot\nimport chart_studio.plotly as py\n\nfigure = bubbleplot(dataset=df1, x_column='cd4', y_column='study_id', \n    bubble_column='age_at_enrollment',size_column='htn', color_column='age_at_enrollment',  \n    x_title=\"CD4 Lymphocyte\", y_title=\"Study ID\", title='CD4 Lymphocyte Study ID',\n     scale_bubble=3, height=650)\n\niplot(figure, config={'scrollzoom': True})","c2a7aedc":"ax = df1.plot(figsize=(15,8), title='CD4 Lymphocyte Study')\nax.set_xlabel('age_at_enrollment, sex, dm, htn')\nax.set_ylabel('study_id')","a3eda7e6":"df1.iloc[0]","24bd7a40":"df1.plot.scatter(x = 'study_id', y = 'cd4', c = 'htn', s = 190)","968b7068":"#plt.style.use('dark_background')\nfrom pandas.plotting import scatter_matrix\nscatter_matrix(df1, figsize= (8,8), diagonal='kde', color = 'b')\nplt.xticks(rotation=90)\nplt.yticks(rotation=90)\nplt.show()","3c6bf27d":"bboxtoanchor=(1.1, 1.05)\nplt.style.use('dark_background')\ndf1.plot.area(y=['study_id','age_at_enrollment','sex', 'dm', 'htn', 'anemia', 'chronic_heart_disease', 'tb', 'pcp', 'pneu', 'ART_use'],alpha=0.4,figsize=(12, 6));","436eadc0":"from IPython.display import IFrame\nIFrame('https:\/\/app.powerbi.com\/view?r=eyJrIjoiMjcxNDIyNjAtOGM0Yi00ZWJhLWJkNmEtNjFiOTI0MWVlYjNiIiwidCI6IjI1NmNiNTA1LTAzOWYtNGZiMi04NWE2LWEzZTgzMzI4NTU3OCIsImMiOjh9', width=800, height=500)","a93b496a":"pinterest.ca","fc2619de":"#CD4\n\nIn molecular biology, CD4 (cluster of differentiation 4) is a glycoprotein found on the surface of immune cells such as T helper cells, monocytes, macrophages, and dendritic cells. It was discovered in the late 1970s and was originally known as leu-3 and T4 (after the OKT4 monoclonal antibody that reacted with it) before being named CD4 in 1984. In humans, the CD4 protein is encoded by the CD4 gene.https:\/\/en.wikipedia.org\/wiki\/CD4","8f27aa8c":"#The CD4+\/CD8+ ratio\n\nThe CD4+\/CD8+ ratio is the ratio of T helper cells (with the surface marker CD4) to cytotoxic T cells (with the surface marker CD8). Both CD4+ and CD8+ T cells contain several subsets.\n\nThe CD4+\/CD8+ ratio in the peripheral blood of healthy adults and mice is about 2:1, and an altered ratio can indicate diseases relating to immunodeficiency or autoimmunity. An inverted CD4+\/CD8+ ratio (namely, less than 1\/1) indicates an impaired immune system.\n\nBoth effector helper T cells (Th1 and Th2) and regulatory T cells (Treg) cells have a CD4 surface marker, such that although total CD4+ T cells decrease with age, the relative percent of CD4+ T cells increases. The increase in Treg with age results in suppressed immune response to infection, vaccination, and cancer, without suppressing the chronic inflammation associated with aging https:\/\/en.wikipedia.org\/wiki\/CD4%2B\/CD8%2B_ratio","d2aec7f9":"Das War's Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke","f1f92327":"#Mechanism of thrombocytopenia in COVID-19 patients, by Panyang Xu, Qi Zhou, and Jiancheng Xu \n\nAnn Hematol. 2020; 99(6): 1205\u20131208. \nPublished online 2020 Apr 15. doi: 10.1007\/s00277-020-04019-0\n\nHematological changes are common in patients with COVID-19, which include reduced lymphocyte count and platelet count but normal white blood cell count. Prolonged activated partial thromboplastin time, 26 per cent had elevated D-dimer levels, and most patients had normal prothrombin time (PT) . Of seven patients in the University of Hong Kong-Shenzhen Hospital (Shenzhen, Guangdong province, China), two had thrombocytopenia, and two had elevated D-dimer levels . A study involving 1099 patients from 31 provinces\/direct-controlled municipalities in China showed that 82.1 per cent of patients had lymphopenia, 36.2 per cent had thrombocytopenia, and 33.7 per cent had leukopenia . These laboratory marker abnormalities were more significant in severe cases . In 13 patients from 3 hospitals in Beijing, 72.5 per cent developed thrombocytopenia . Statistics from 41 patients in a designated hospital in Wuhan showed that 5 per cent of patients had thrombocytopenia on admission . In most cases, the platelet count did not decrease to a level at which bleeding occurs. However, the mechanisms by which this coronavirus interferes with the hematopoietic system are unclear. In this paper, they summarized the hematological changes of thrombocytopenia in patients with COVID-19 and proposed possible mechanisms by which COVID-19 causes thrombocytopenia. https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC7156897\/","0d7b7477":"#Plotting Solidarity - Hospital S\u00edrio-Liban\u00eas\n\nA filantropia \u00e9 a raz\u00e3o de ser da Sociedade Beneficente de Senhoras Hospital S\u00edrio-Liban\u00eas h\u00e1 quase 100 anos. Nossa hist\u00f3ria nasceu do sentimento de solidariedade e \u00e9 nossa miss\u00e3o exerc\u00ea-la. Neste momento in\u00e9dito de crise mundial em fun\u00e7\u00e3o da pandemia da COVID-19, estamos nos mobilizando no esfor\u00e7o coletivo para minimizar o impacto deste cen\u00e1rio na vida das fam\u00edlias mais vulner\u00e1veis, dos profissionais de sa\u00fade e apoiar a sociedade em geral. Nesse sentido, deflagramos iniciativas pr\u00f3prias e em parceria com outras institui\u00e7\u00f5es para, em um esfor\u00e7o conjunto, podermos entregar o maior n\u00famero poss\u00edvel de solu\u00e7\u00f5es visando a supera\u00e7\u00e3o desta crise o mais r\u00e1pido poss\u00edvel. E voc\u00ea pode contribuir! Acesse hsl.org.br\/solidariedade-coronavirus, conhe\u00e7a as iniciativas e participe! #S\u00edrioLiban\u00eas #ConviverECompartilhar https:\/\/www.facebook.com\/HospitalSirioLibanes\/posts\/2752471194878543?comment_id=2755398761252453&reply_comment_id=2755563131236016","133af52f":"#Obesity and Free Fatty Acids (FFA), by Guenther Boden\n\nEndocrinol Metab Clin North Am. 2008 Sep; 37(3): 635\u2013ix. -doi: 10.1016\/j.ecl.2008.06.007\n\nObesity is closely associated with (peripheral as well as hepatic) insulin resistance and with a low grade state of inflammation characterized by elevation of proinflammatory cytokines in blood and tissues. Both, insulin and inflammation, contribute to the development of type 2 diabetes (T2DM), hypertension, atherogenic dyslipidemias and disorders of blood coagulation and fibrinolysis. All these disorders are independent risk factors for atherosclerotic vascular disease (ASVD) such as heart attacks, strokes and peripheral arterial disease.\n\nThe reason why obesity is associated with insulin resistance is not well understood. In this chapter, I will review evidence demonstrating that free fatty acids (FFA) cause both insulin resistance and inflammation in the major insulin target tissues (skeletal muscle, liver and endothelial cells) and thus are an important link between obesity, insulin resistance, inflammation and the development of T2DM, hypertension, dyslipidemia, disorders of coagulation and ASVD. https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC2596919\/","2c52c6b0":"![](https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC2596919\/bin\/nihms71140f1.jpg)\nRelationship between obesity, insulin resistance, inflammation and atherosclerotic vascular disease\nObesity causes insulin resistance and a state of low grade inflammation. Both contribute to the development of several disorders, including T2DM, hypertension, dyslipidemia and disorders of coagulation and fibrinolysis which are independent risk factors for the development of atherosclerotic vascular disease. T2DM: Type 2 diabetes mellitus, ASVD: atherosclerotic vascular disease.\n\nBy  Guenther Boden https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC2596919\/","4b029ee7":"#Albumin Levels\n\nYour liver makes albumin. Albumin carries substances such as hormones, medicines, and enzymes throughout your body. \nThe test can help diagnose, evaluate, and watch kidney and liver conditions. When your kidneys start to fail, albumin starts to leak into your urine. This causes a low albumin level in your blood.https:\/\/www.urmc.rochester.edu\/encyclopedia\/content.aspx?contenttypeid=167&contentid=albumin_blood \n\nThe typical value for serum albumin in blood is 3.4 to 5.4 grams per deciliter. Low albumin levels can indicate a number of health conditions, including: liver disease, inflammation.  High serum albumin levels could mean that you\u2019re dehydrated (could or not) or eat a diet rich in protein.\n\nThe liver\u2019s biosynthetic capacity or, in other words, a patient\u2019s liver functioning can be measured by drawing their serum albumin. Often, patients who are malnourished have hypoalbuminemia or low serum albumin levels https:\/\/www.ncbi.nlm.nih.gov\/books\/NBK459198\/\n\nHigher albumin levels may be caused by acute infections, burns, and stress from surgery or a heart attack. Higher than normal levels of albumin may indicate dehydration or severe diarrhea. If your albumin levels are not in the normal range, it doesn't necessarily mean you have a medical condition needing treatment. Certain drugs, including steroids, insulin, and hormones, can raise albumin levels.https:\/\/medlineplus.gov\/lab-tests\/albumin-blood-test\/","ac3c07ee":"![](https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC7156897\/bin\/277_2020_4019_Fig1_HTML.jpg)\nBy Panyang Xu,1 Qi Zhou,2 and Jiancheng Xu\n\nThe possible mechanisms of thrombocytopenia in COVID-19 patients. SARS-CoV-2, severe acute respiratory syndrome coronavirus 2; COVID-19, coronavirus disease 2019; MK, megakaryocyte;\u2191, means an increase in a substance; \u2193, means a decrease in a substance.\nhttps:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC7156897\/","1a12a97b":"#What is a blood gas test? ABG Test.\n\nA blood gas test measures the amount of oxygen and carbon dioxide in the blood. It may also be used to determine the pH of the blood, or how acidic it is. The test is commonly known as a blood gas analysis or arterial blood gas (ABG) test.\n\nYour red blood cells transport oxygen and carbon dioxide throughout your body. These are known as blood gases.\n\nAs blood passes through your lungs, oxygen flows into the blood while carbon dioxide flows out of the blood into the lungs. The blood gas test can determine how well your lungs are able to move oxygen into the blood and remove carbon dioxide from the blood.\n\nImbalances in the oxygen, carbon dioxide, and pH levels of your blood can indicate the presence of certain medical conditions. These may include: kidney failure, heart failure, uncontrolled diabetes\nhemorrhage,chemical poisoning, a drug overdose, shock.https:\/\/www.healthline.com\/health\/blood-gases","ab7a5f0e":"pinterest.ca","321c0c73":"#Chronic fatigue syndrome - CD4 T Lymphocytes\n\nOne of the country's greatest specialists in coronavirus, Eurico Arruda, professor of virology at the Faculty of Medicine of the University of S\u00e3o Paulo (USP) in Ribeir\u00e3o Preto, is concerned about the continuation of the advance of the pandemic in Brazil and says that cases of sequelae were expected.\n\nPeople won't come out unscathed. This virus kills CD4 T lymphocytes.\n\nIt refers to cells that act as conductors of the immune system and are also attacked by HIV. While the cause of AIDS causes a chronic disease, Sars-CoV-2 leads to an acute infection. Although temporary, it can be serious. It is the CD4 lymphocytes that organize the body's entire response to the coronavirus attack.\n\nIf you want to end the orchestra, shoot the conductor. That's what Sars-CoV-2 does. The person is recovering, it is not like AIDS, but it will take time.\n\nThe so-called chronic fatigue syndrome, which can affect people who have had viral infections, will be transient. However, it represents a disorder, capable of affect the most basic things in a person's life, daily habits, personal relationships and work. https:\/\/translate.google.com.br\/translate?hl=en&sl=pt&u=https:\/\/oglobo.globo.com\/sociedade\/pacientes-recuperados-do-novo-coronavirus-podem-desenvolver-quadro-de-sindrome-pos-covid-24515153&prev=search&pto=auecting"}}