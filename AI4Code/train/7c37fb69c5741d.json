{"cell_type":{"9a765035":"code","9b5aa096":"code","abd5bee1":"code","1a9cb0d5":"code","118640ec":"code","94e8b0e6":"code","2afffc82":"code","82ebb0f2":"code","c8a6cc28":"code","d736efc0":"code","495cbd5f":"code","5d7fca27":"code","587d458c":"code","69a308ab":"code","f55b8ed6":"code","9bf38768":"code","9621cf2c":"code","1d854e88":"code","ebe85760":"code","402f4508":"code","664d8c03":"code","a0a2d5c5":"markdown","ab557f02":"markdown","e09b4e78":"markdown","fb629876":"markdown","ee532796":"markdown","ce53088d":"markdown"},"source":{"9a765035":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9b5aa096":"df = pd.read_csv('..\/input\/iris-flower-dataset\/IRIS.csv')\ndf","abd5bee1":"y = df.species","1a9cb0d5":"df.columns","118640ec":"features = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width']\nX = df[features]\nX","94e8b0e6":"X = df.drop(columns=['species'])\nX","2afffc82":"df","82ebb0f2":"from sklearn.model_selection import train_test_split \ntrain_X, test_X, train_y, test_y = train_test_split(X, y)","c8a6cc28":"train_X","d736efc0":"train_y","495cbd5f":"test_X","5d7fca27":"test_X.shape","587d458c":"from sklearn.neighbors import NearestCentroid\nmodel = NearestCentroid()","69a308ab":"model.fit(train_X, train_y)","f55b8ed6":"preds = model.predict(test_X)","9bf38768":"preds[:5]","9621cf2c":"test_y[:5]","1d854e88":"from sklearn.metrics import accuracy_score \nprint(accuracy_score(y_true=test_y, y_pred=preds))","ebe85760":"df.columns","402f4508":"test_example = pd.DataFrame(data={\n    'sepal_length': [4.9],\n    'sepal_width': [1.4], \n    'petal_length': [5.3], \n    'petal_width': [1.1]\n})","664d8c03":"model.predict(test_example)","a0a2d5c5":"# prediction","ab557f02":"## y","e09b4e78":"# Define y, X, model","fb629876":"# train model ","ee532796":"## Model","ce53088d":"## X"}}