{"cell_type":{"f33b1179":"code","1074347e":"code","6bd383d1":"code","b4d6f362":"code","346628cb":"code","ce9b3ffe":"code","8a008b9c":"code","79ab5a5c":"code","63b855fe":"code","c2621b39":"code","3cbab0f7":"code","f7093e80":"code","80c215b7":"code","dcf33eb4":"code","4b8302cd":"code","042b6630":"code","a72d1a85":"code","95b1fb34":"code","28b34ab3":"code","1747e080":"code","c7ce7126":"code","445a6800":"code","5f8f0cae":"code","e851e2bd":"code","cac0d194":"code","5acd13e6":"code","02246563":"code","0a3c9cdf":"code","0f1131ed":"code","2be37dfb":"code","6d104bc1":"code","950d22a8":"code","76e86aa4":"code","da4f6e79":"code","cb1da46c":"markdown","8fce056b":"markdown","55fcaeba":"markdown","d1b5a1f5":"markdown","adb70346":"markdown","95e3ccf7":"markdown","1351c954":"markdown","ecc17a31":"markdown","a4f0e5c8":"markdown","6161347b":"markdown","2d038953":"markdown","c5071d1c":"markdown","90168461":"markdown","3f7f20f1":"markdown","6c5f8ec8":"markdown","06f55ea3":"markdown","ce6e8321":"markdown","4e88be0e":"markdown","c2016a58":"markdown","369f387c":"markdown","857a456c":"markdown","25152d0c":"markdown","a31b8d2d":"markdown","efc310e5":"markdown","19e2922d":"markdown","909e582b":"markdown","4effa659":"markdown","e1bfbe56":"markdown","c2bdd34d":"markdown","4bf19c7e":"markdown","0c26c2c1":"markdown","c0db5841":"markdown","19e28372":"markdown","d909cbb8":"markdown","a1ff42bd":"markdown","bedb6fce":"markdown","3d76af4b":"markdown","da33c23f":"markdown","ac287fa8":"markdown","8d002af1":"markdown","174b2d5b":"markdown","594b7c74":"markdown","10fe34c9":"markdown","a5909271":"markdown","2c8f483b":"markdown","15d273e5":"markdown"},"source":{"f33b1179":"# Analysis Tools\nimport numpy as np\nimport pandas as pd\nfrom scipy import stats\nfrom scipy.stats import norm\n\n# Plotting Tools\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\n# Extra Plotting Tools Required for Bar Chart Race\nimport matplotlib.ticker as ticker\nimport matplotlib.animation as animation\nfrom IPython.display import HTML\n\n# Plot Design Settings\nsns.set_style(\"darkgrid\", {\"axes.facecolor\": \"#eff2f5\", 'grid.color': '#c0ccd8', 'patch.edgecolor': '#B0B0B0', 'font.sans-serif': 'Verdana'})\nsns.set_palette('Blues_d')\n\nplt.rc('font', size=19)\nplt.rc('axes', titlesize=25)\nplt.rc('axes', labelsize=20)\nplt.rc('xtick', labelsize=17)\nplt.rc('ytick', labelsize=17)\nplt.rc('figure', titlesize=24)\n\n\n# Mute warnings\nimport warnings\nwarnings.filterwarnings('ignore')","1074347e":"data = pd.read_csv('..\/input\/daily-temperature-of-major-cities\/city_temperature.csv')\ndata.shape","6bd383d1":"data.head()","b4d6f362":"data.info()","346628cb":"data['AvgTemperature'].describe()","ce9b3ffe":"# Number of unique values in each variable\nfor var in data:\n    print(var, ': ', data[var].nunique())","8a008b9c":"for var in data:\n    print(var, ': ', data[var].isnull().sum())","79ab5a5c":"#data = data.drop(['State'], axis=1)","63b855fe":"print('Number of Duplicates: {}'.format(len(data[data.duplicated()])))","c2621b39":"data = data.drop_duplicates()","3cbab0f7":"data.groupby('Year')['AvgTemperature'].count()","f7093e80":"data = data[data['Year']>1994]\ndata = data[data['Year']<2020]","80c215b7":"print('Day Range Min to Max: \\n{}'.format(data['Day'].agg([min , max])))","dcf33eb4":"data = data[data['Day']>0]\nprint('1st Day: \\n{}'.format(data['Day'].agg([min]))) ","4b8302cd":"days_in_year = data.groupby(['Year', 'Country'])['Day'].transform('size')","042b6630":"print('Coldest and hottest temperatures: \\n{}'.format(data['AvgTemperature'].agg([min , max])))","a72d1a85":"data = data[data['AvgTemperature']>-98]\nprint('Coldest and hottest temperatures: \\n{}'.format(data['AvgTemperature'].agg([min]))) ","95b1fb34":"data['AvgTemperature'] = (data['AvgTemperature'] -32)*(5\/9)","28b34ab3":"data","1747e080":"plt.figure(figsize=(20,7))\nplt.title(\"Average Temperature of the World by year\")\nsns.lineplot(data=data, x='Year', y='AvgTemperature', lw=2)\nplt.show() ","c7ce7126":"before = np.round(data['AvgTemperature'][data['Year']==1995].mean(), decimals=2)\nafter = np.round(data['AvgTemperature'][data['Year']==2019].mean(), decimals=2)\npercent = np.round(after-before, decimals=2)\n\nprint(f'Average World Temperature in 1995 is {before}\\N{DEGREE SIGN}, and {after}\\N{DEGREE SIGN} in 2019,\\n and the temperature difference over this time period is {percent}\\N{DEGREE SIGN} celcius')","445a6800":"fig, axes = plt.subplots(2, 1, figsize=(20,10))\n\n# Hottest world temperature\nwarmest = data.groupby(['Year'])['AvgTemperature'].max().reset_index().sort_values(by='AvgTemperature',ascending=False)\nsns.lineplot(data=warmest, x='Year', y='AvgTemperature', lw=2, ax=axes[1]).set_title('Warmest Temperature of the World each year')\n\n# Coldest world temperature\ncoldest = data.groupby(['Year'])['AvgTemperature'].min().reset_index().sort_values(by='AvgTemperature',ascending=False)\nsns.lineplot(data=coldest, x='Year', y='AvgTemperature', lw=2, ax=axes[0]).set_title('Coldest Temperature of the World each year')\n\nplt.tight_layout(pad=0.4, w_pad=2, h_pad=2)\nplt.show()","5f8f0cae":"# Increase in warmest temperature\nwarmest = data.groupby(['Year'])['AvgTemperature'].max().reset_index().sort_values(by='AvgTemperature',ascending=False)\nbefore_w = np.round(warmest['AvgTemperature'][warmest['Year']==1995].mean(), decimals=2)\nafter_w = np.round(warmest['AvgTemperature'][warmest['Year']==2019].mean(), decimals=2)\npercent_w = np.round(after_w-before_w, decimals=2)\n\n# Increase in coldest temperature\ncoldest = data.groupby(['Year'])['AvgTemperature'].min().reset_index().sort_values(by='AvgTemperature',ascending=False)\nbefore_c = np.round(coldest['AvgTemperature'][coldest['Year']==1995].mean(), decimals=2)\nafter_c = np.round(coldest['AvgTemperature'][coldest['Year']==2019].mean(), decimals=2)\npercent_c = np.round(after_c-before_c, decimals=2)\n\n\nprint(f'Hottest World Temperature in 1995 was {before_w}\\N{DEGREE SIGN}, and {after_w}\\N{DEGREE SIGN} in 2019,\\n and the temperature difference over this time period is {percent_w}\\N{DEGREE SIGN} celcius \\n')\n\nprint(f'Coldest World Temperature in 1995 was {before_c}\\N{DEGREE SIGN}, and {after_c}\\N{DEGREE SIGN} in 2019,\\n and the temperature difference over this time period is {percent_c}\\N{DEGREE SIGN} celcius')","e851e2bd":"temp_data = data[['Region','AvgTemperature','Year']].groupby(['Region','Year']).mean()\n\nplt.figure(figsize=(14,7))\nplt.title(\"Average Temperature of each Region by year\")\nsns.lineplot(x='Year', y='AvgTemperature', hue='Region',\n units='Region',markers=True, dashes=False ,estimator=None, lw=1,data=temp_data)\nplt.legend(bbox_to_anchor=(1, 1), shadow=True, fontsize='small', title='Regions', title_fontsize = \"16\")\nplt.show()","cac0d194":"regions = data['Region'].unique()\n\nfor region in regions:\n    overall = np.round(data['AvgTemperature'][data['Region']==region].mean(), decimals=2)\n    \n    print(f'{region}\\'s Average Temperature Over the whole time period is {overall}\\N{DEGREE SIGN} celsius \\n')","5acd13e6":"regions = data['Region'].unique()\n\nfor region in regions:\n    before = np.round(data['AvgTemperature'][data['Region']==region][data['Year']==1995].mean(), decimals=2)\n    after = np.round(data['AvgTemperature'][data['Region']==region][data['Year']==2019].mean(), decimals=2)\n    percent = np.round(after-before, decimals=2)\n\n    print(f'{region}\\'s Average Temperature in 1995 was {before}\\N{DEGREE SIGN} and {after}\\N{DEGREE SIGN} in 2019,\\n and the temperature difference is {percent}\\N{DEGREE SIGN} celsius \\n')","02246563":"fig, ax = plt.subplots(4, 2, figsize = (20, 18))\n\n    \n# Grouping all Region Names\nregions = data['Region'].unique()\n    \n# Average Monthly Temp of each Region\nfor idx, (region, axes) in list(enumerate(zip(regions, ax.flatten()))):\n        \n    region_name = data[data['Region']==region]\n    temp_data = region_name.groupby(['Month'])['AvgTemperature'].mean().reset_index().sort_values(by='AvgTemperature',ascending=False)\n    sns.barplot(ax=axes,data=temp_data, x='Month', y='AvgTemperature', palette=\"Blues_d\").set_title(region)\n        \n### Removing empty figures\nelse:\n    [axes.set_visible(False) for axes in ax.flatten()[idx + 1:]]\n    \n    \nplt.tight_layout(pad=0.4, w_pad=2, h_pad=2)\nplt.show()","0a3c9cdf":"plt.figure(figsize = (12, 12))\nsns.relplot(data=data, x='Year', y='AvgTemperature', hue='Region', col='Month',kind='line', col_wrap=4, linewidth=1)\nplt.show()","0f1131ed":"temp_data = data[['Country', 'Year', 'AvgTemperature']].groupby(['Country','Year']).mean().reset_index()\n\npx.choropleth(data_frame=temp_data, locations=\"Country\", locationmode='country names', animation_frame=\"Year\",\n              color='AvgTemperature', color_continuous_scale=[\"blue\", \"green\", \"red\"],     #'Bluered',\n              title=\"Average Temperature of each country from 1995 to 2019\")","2be37dfb":"regions = data['Region'].unique()\n    \n# Create Stacked Bar Plot showing both the coldest and warmest each country has been in each region\nfor region in regions:\n    \n    # Finding The Min and Max of each Country in each Region\n    region_name = data[data['Region']==region]\n    coldest = region_name.groupby(['Country'])['AvgTemperature'].min().reset_index().sort_values(by='AvgTemperature',ascending=True)\n    warmest = region_name.groupby(['Country'])['AvgTemperature'].max().reset_index().sort_values(by='AvgTemperature',ascending=True)\n    \n    # Converting back to Dataframe\n    coldest_data = pd.DataFrame(coldest)\n    warmest_data = pd.DataFrame(warmest)\n    \n    # Plotting\n    fig, ax = plt.subplots(1, figsize=(16, 8))\n    plt.bar(warmest_data['Country'], warmest_data['AvgTemperature'], color='#DB4444', width=0.5)\n    plt.bar(coldest_data['Country'], coldest_data['AvgTemperature'], color='#337AE3', width=0.5)\n    \n    # remove spines\n    ax.spines['right'].set_visible(False)\n    ax.spines['left'].set_visible(False)\n    ax.spines['top'].set_visible(False)\n    ax.spines['bottom'].set_visible(False)\n\n    #grid\n    ax.set_axisbelow(True)\n    ax.yaxis.grid(color='gray', linestyle='dashed', alpha=0.7)\n\n    # title and legend\n    legend_label = ['Warmest', 'Coldest']\n    plt.legend(legend_label, ncol = 4, bbox_to_anchor=([1, 1.07, 0, 0]), frameon = False)\n    plt.xticks(rotation='70')\n    plt.title(f'Coldest and Hotest of each Country from {region}', loc='left', fontsize=17)\n    plt.show()","6d104bc1":"fig, ax = plt.subplots(4, 2, figsize = (21, 20))\n\n# Grouping all Region Names\nregions = data['Region'].unique()\n    \n    \n# Average Monthly Temp of each Region\nfor idx, (region, axes) in list(enumerate(zip(regions, ax.flatten()))):\n                \n    region_name = data[data['Region']==region]\n    warmest = region_name.groupby(['City'])['AvgTemperature'].max().reset_index().sort_values(by='AvgTemperature',ascending=False).head(15)\n    sns.barplot(ax=axes, data=warmest, x='AvgTemperature', y='City', palette=\"Reds_d\").set_title(region)\n        \n### Removing empty figures\nelse:\n    [axes.set_visible(False) for axes in ax.flatten()[idx + 1:]]\n    \n    \nplt.tight_layout(pad=0.4, w_pad=2, h_pad=2)\nplt.show()","950d22a8":"fig, ax = plt.subplots(4, 2, figsize = (21, 20))\n\n    \n# Grouping all Region Names\nregions = data['Region'].unique()\n    \n# Average Monthly Temp of each Region\nfor idx, (region, axes) in list(enumerate(zip(regions, ax.flatten()))):\n        \n    region_name = data[data['Region']==region]\n    coldest = region_name.groupby(['City'])['AvgTemperature'].min().reset_index().sort_values(by='AvgTemperature',ascending=False).tail(15)\n    sns.barplot(ax=axes, data=coldest, x='AvgTemperature', y='City', palette=\"Blues_d\").set_title(region)\n        \n### Removing empty figures\nelse:\n    [axes.set_visible(False) for axes in ax.flatten()[idx + 1:]]\n    \n    \nplt.tight_layout(pad=0.4, w_pad=2, h_pad=2)\nplt.show()","76e86aa4":"with plt.rc_context(rc = {'axes.labelsize': 13, 'xtick.labelsize': 12, 'ytick.labelsize': 12, 'axes.titlesize': 16}): \n    fig, ax = plt.subplots(2, 2, figsize = (18, 9))\n\n    ax_flat = ax.flatten()\n    \n    # Grouping all Region Names\n    regions = data['Region'].unique()\n    \n    \n    # 1st Graph - Top 10 Hottest Cities in the world\n    first_g = data.groupby(['City'])['AvgTemperature'].max().reset_index().sort_values(by='AvgTemperature',ascending=False).head(10)\n    sns.barplot(ax=ax_flat[0], data=first_g, x='AvgTemperature', y='City',\n                palette='Reds_d').set_title('Top 10 Hottest Cities in the World')\n\n    \n    # 2nd Graph - Top 10 Coldest Cities in the world\n    second_g = data.groupby(['City'])['AvgTemperature'].min().reset_index().sort_values(by='AvgTemperature',ascending=False).tail(10)\n    sns.barplot(ax=ax_flat[1], data=second_g, x='AvgTemperature', y='City',\n                palette='Blues_d').set_title('Top 10 Coldest Cities in the World')\n    \n    \n    # 3rd Graph - Coldest Temp of the Warmest City over the years\n    third_g = data[data['City']=='Kuwait']\n    third_g = third_g[['City', 'AvgTemperature', 'Year']].groupby(['Year']).max()\n    sns.lineplot(ax=ax_flat[2], data=third_g, x='Year', y='AvgTemperature', markers=True,\n                dashes=False,estimator=None, lw=3).set_title('Timeline of Kuwaits Warmest Temperature')\n    \n    \n    # 4th Graph - Coldest Temp of the Coldest City over the years\n    fourth_g = data[data['City']=='Fairbanks']\n    fourth_g = fourth_g[['City', 'AvgTemperature', 'Year']].groupby(['Year']).min()\n    sns.lineplot(ax=ax_flat[3], data=fourth_g, x='Year', y='AvgTemperature', markers=True,\n                    dashes=False ,estimator=None, lw=3).set_title('Timeline of Fairbanks Coldest Temperature')\n\n    \n    plt.tight_layout(pad=0.4, w_pad=2, h_pad=2)\n    plt.show()","da4f6e79":"# Increase in Kuwaits warmest temperature\nkuwait = data[data['City']=='Kuwait']\nkuwait = kuwait.groupby(['Year'])['AvgTemperature'].max().reset_index().sort_values(by='AvgTemperature',ascending=False)\nbefore_w = np.round(kuwait['AvgTemperature'][kuwait['Year']==1995].mean(), decimals=2)\nafter_w = np.round(kuwait['AvgTemperature'][kuwait['Year']==2019].mean(), decimals=2)\npercent_w = np.round(after_w-before_w, decimals=2)\n\n# Increase in Fairbanks coldest temperature\nfairbanks = data[data['City']=='Fairbanks']\nfairbanks = data.groupby(['Year'])['AvgTemperature'].min().reset_index().sort_values(by='AvgTemperature',ascending=False)\nbefore_c = np.round(fairbanks['AvgTemperature'][fairbanks['Year']==1995].mean(), decimals=2)\nafter_c = np.round(fairbanks['AvgTemperature'][fairbanks['Year']==2019].mean(), decimals=2)\npercent_c = np.round(after_c-before_c, decimals=2)\n\n\nprint(f'Kuwaits Hottest Temperature in 1995 was {before_w}\\N{DEGREE SIGN}, and {after_w}\\N{DEGREE SIGN} in 2019,\\n and the temperature difference over this time period is {percent_w}\\N{DEGREE SIGN} celcius \\n')\n\nprint(f'Fairbanks Coldest Temperature in 1995 was {before_c}\\N{DEGREE SIGN}, and {after_c}\\N{DEGREE SIGN} in 2019,\\n and the temperature difference over this time period is {percent_c}\\N{DEGREE SIGN} celcius')","cb1da46c":"From the analysis above it is clear that over the time period of 1995 to 2019, the temperature has risen around 1 degree celcius over the entire world. This may seem like nothing, but in the grand sceem of things this can have drasctic consequences on the world we live in, it affects both weather and climate, meaning in the short term the earth is only getting a little warmer which doesnt seem all that bad, but in the long run it will affect the climate we live in greatly. Ocean and air tempeartures are rising, which means more water evaporating into the atmosphere, which explains the larger and more powerful storms we've had in recent years. Wildlife have also been feeling the effects of this seemingly small temperature difference, for example Green Sea Turtles are going extince because of a shortage of males, which only hatch at temperatures of 27.8 degrees celsius or below. Another example is the Melting sea ice, melting away some of the worlds biggest fresh water reserves and destroying many animal species habitats in the process.","8fce056b":" <a id=\"3\"><\/a>\n## Analysis on Regions","55fcaeba":"-99 is probably just a place holder for missing 'AvgTemperature' values, im just going to remove these","d1b5a1f5":"**Features Unique Values**","adb70346":"**Converting from Fahrenheit to Celsius**","95e3ccf7":"**Increase\/Decrease in warmest and coldest temperature in both Kuwait and Fairbanks over entire time period**","1351c954":"**Missing Values**","ecc17a31":"**Average Temperature of the world by year**","a4f0e5c8":"**Look at final dataset**","6161347b":" <a id=\"1\"><\/a>\n## Taking a look and cleaning the data","2d038953":"Africa and Souty\/Central America & Carribean are both stay around a constant temperature throughout the year","c5071d1c":" <a id=\"5\"><\/a>\n## Analysis on Cities","90168461":"**Increase\/Decrease in Warmest and coldest temperature from 1995 to 2019**","3f7f20f1":"**Range of Days**","6c5f8ec8":"**Duplicates**","06f55ea3":"**Coldest and hotest each country has been in each region over the time period**","ce6e8321":"#### In this notebook i will be playing around with a bunch of plotting techniques for the most part. This dataset is a historcal record of the average temperatures thorought the years over a wide range of time specifications and areas across the Earth so there are plenty of things to analyse. One other thing to mention is that I am obviesly no climate change expert so take this analysis with a grain of salt. Anyway lets get started!","4e88be0e":"With all that cleaning lets take a look at the dataset now","c2016a58":"**Average Temperature Difference of the years 1995 and 2019**","369f387c":"**Average temperature each month for each region over the entire time period**","857a456c":"We know have 138,563 less rows than we started with, and 1 less column than we started with","25152d0c":"# I dont know about you but it feels like its getting hotter here, lets look into it","a31b8d2d":"Thats much more realistic","efc310e5":"Some of the years have less than 368 days, im just going to drop all of these","19e2922d":"Almost every country has had around a 1 degree temperature increase from 1995 compared to 2019","909e582b":"**Visualization of every countries average temperature each year**","4effa659":"**Number of 'AvgTemperature' values for each year**","e1bfbe56":"**Average Temperature of each Region by year**","c2bdd34d":"I assume the years 200 and 201 are typos for 2000 and 2001, also 2020 seems to have a lot fewer values than all the other years. Im just going to remove all 3 of these years from the datset","4bf19c7e":"'State' is the only feature with missing values, quite a few as well, almost half the dataset. Im still have 'Country' and 'City' so im just going to drop the 'State' column enitely ","0c26c2c1":"**Cities with the coldest temperatures throughout the time period for each region**","c0db5841":"### Table of Contents\n\n* [Cleaning Data](#1)\n* [Analysis on World](#2)\n* [Analysis on Regions](#3)\n* [Analysis Countrys](#4)\n* [Analysis on Cities](#5)\n* [Summary](#6)","19e28372":"**Average Temperature Difference over entire time period for each region**","d909cbb8":"**Temperature range of AvgTemperature**","a1ff42bd":"**Hottest\/Coldest Cities in the World**","bedb6fce":"**Targets main info**","3d76af4b":" <a id=\"4\"><\/a>\n## Analysis on Countries","da33c23f":"**Feature dtypes**","ac287fa8":"<a id=\"2\"><\/a>\n## Analysing","8d002af1":"**Dropping all incomplete years**","174b2d5b":"<a id=\"6\"><\/a>\n## Summary","594b7c74":"Looks like some days are 0, I assume this is a place holder, im just going to remove them","10fe34c9":"**Cities with the warmest temperatures throughout the time period for each region**","a5909271":"**Increase in Average World Temperature from 1995 to 2019**","2c8f483b":"**Average Temperature of each Month for every Region each Year**","15d273e5":"**Coldest and Wamest Temperature of the world by year**"}}