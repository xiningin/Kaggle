{"cell_type":{"1b5fe746":"code","2181f2e3":"code","969a30a2":"code","5e636f7f":"code","317abbb5":"code","a49b20bf":"code","352f60f9":"code","5dde2786":"code","131c6cca":"code","e6a18433":"code","ee55502b":"code","d6c540b9":"code","dff099e4":"code","0c566713":"code","e4f22d7a":"code","31851ee4":"code","af6882d5":"code","50a5bcc8":"code","ba03a6cc":"code","0bb7f68f":"code","d8d9fe53":"code","8412cb56":"code","c9c38d75":"code","6866efab":"code","45db25c6":"code","c0e7ae9a":"code","6badb033":"code","dad6a718":"code","16b0dd28":"code","da81e4e1":"code","e5f7a540":"code","93f23ae6":"code","bb24a825":"code","737fd5f0":"code","2c61a1dd":"code","463f8665":"code","84d500a0":"code","4d2ecdc1":"code","83f92cba":"code","ebb2655f":"code","ae09af4e":"code","ca4949ca":"code","1a5ab0b2":"code","d44bb840":"code","639c1953":"markdown","f8f330c8":"markdown","431fe719":"markdown","d0df6a50":"markdown","9bf68bbc":"markdown","bda08120":"markdown","f5aed23b":"markdown","de592783":"markdown","c776c7f1":"markdown","d64d2186":"markdown","08e88be0":"markdown","5f9eb902":"markdown","40df7d92":"markdown","ccf4d9c7":"markdown","31513e4a":"markdown","84744db8":"markdown","8d9c02d9":"markdown","86e2a5d2":"markdown","08393095":"markdown","ceb43b22":"markdown","cbd410b2":"markdown","d304f32d":"markdown","e6715f1c":"markdown","973ec357":"markdown","e3f7b965":"markdown","616ee55a":"markdown","b65db645":"markdown","2309fed4":"markdown","df4359db":"markdown","b93bc913":"markdown","7c43f635":"markdown","b00bd59e":"markdown","8bc205b7":"markdown","8cd2ae93":"markdown","20d3f470":"markdown","f717e6f0":"markdown","71a40044":"markdown","0dc49222":"markdown","23eda516":"markdown","25a572d5":"markdown","bd4c72c0":"markdown"},"source":{"1b5fe746":"import os\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')","2181f2e3":"file_train = os.path.join('..\/input', 'train.csv')\nfile_test = os.path.join('..\/input', 'test.csv')\n\ndf_train = pd.read_csv(file_train)\ndf_test = pd.read_csv(file_test)","969a30a2":"df_train.head()","5e636f7f":"df_train.describe()","317abbb5":"#pd.plotting.scatter_matrix(df_train, alpha=0.2, figsize=(50, 50))\n#plt.show()","a49b20bf":"plt.figure(figsize=(20,20))\nsns.heatmap(df_train.corr(), annot=True)\nplt.show()","352f60f9":"sns.distplot(df_train['price'], hist=True, kde=True)","5dde2786":"df_train['price'] = np.log1p(df_train['price'])","131c6cca":"df_train['year'] = df_train['date'].apply(lambda x : str(x[:4])).astype(int)\ndf_test['year'] = df_test['date'].apply(lambda x : str(x[:4])).astype(int)","e6a18433":"df_train['month'] = df_train['date'].apply(lambda x : str(x[4:6])).astype(int)\ndf_test['month'] = df_test['date'].apply(lambda x : str(x[4:6])).astype(int)","ee55502b":"df_train['age'] = 2015-df_train['yr_built']\ndf_test['age'] = 2015-df_test['yr_built']","d6c540b9":"df_train['renovated_flg'] = None\nfor index, row in df_train.iterrows():\n    if row['yr_renovated'] == 0:\n        df_train.at[index, 'renovated_flg'] = 0\n    else:\n        df_train.at[index, 'renovated_flg'] = 1","dff099e4":"df_test['renovated_flg'] = None\nfor index, row in df_test.iterrows():\n    if row['yr_renovated'] == 0:\n        df_test.at[index, 'renovated_flg'] = 0\n    else:\n        df_test.at[index, 'renovated_flg'] = 1","0c566713":"plt.figure(figsize=(20,20))\nsns.heatmap(df_train.corr(), annot=True)\nplt.show()","e4f22d7a":"f, ax = plt.subplots(figsize=(12, 6))\ndata = pd.concat([df_train['price'], df_train['bedrooms']], axis=1)\nsns.boxplot(x='bedrooms', y='price', data=data)","31851ee4":"df_train.loc[df_train['bedrooms']>=10]","af6882d5":"df_test.loc[df_test['bedrooms']>=10]","50a5bcc8":"df_train = df_train.drop(df_train[(df_train['bedrooms']>=10)].index)","ba03a6cc":"f, ax = plt.subplots(figsize=(12, 6))\ndata = pd.concat([df_train['price'], df_train['bathrooms']], axis=1)\nsns.boxplot(x='bathrooms', y='price', data=data)","0bb7f68f":"df_train = df_train.drop(df_train[(df_train['bathrooms']==6.25)].index)\ndf_train = df_train.drop(df_train[(df_train['bathrooms']==6.75)].index)\ndf_train = df_train.drop(df_train[(df_train['bathrooms']==7.5)].index)\ndf_train = df_train.drop(df_train[(df_train['bathrooms']==7.75)].index)","d8d9fe53":"df_train.loc[(df_train['bathrooms']==4.5) & (df_train['price']>15)]","8412cb56":"df_train = df_train.drop(df_train[(df_train['bathrooms']==4.5) & (df_train['price']>15)].index)","c9c38d75":"f, ax = plt.subplots(figsize=(12, 6))\ndata = pd.concat([df_train['price'], df_train['floors']], axis=1)\nsns.boxplot(x='floors', y='price', data=data)","6866efab":"f, ax = plt.subplots(figsize=(12, 6))\ndata = pd.concat([df_train['price'], df_train['waterfront']], axis=1)\nsns.boxplot(x='waterfront', y='price', data=data)","45db25c6":"f, ax = plt.subplots(figsize=(12, 6))\ndata = pd.concat([df_train['price'], df_train['view']], axis=1)\nsns.boxplot(x='view', y='price', data=data)","c0e7ae9a":"f, ax = plt.subplots(figsize=(12, 6))\ndata = pd.concat([df_train['price'], df_train['condition']], axis=1)\nsns.boxplot(x='condition', y='price', data=data)","6badb033":"f, ax = plt.subplots(figsize=(12, 6))\ndata = pd.concat([df_train['price'], df_train['grade']], axis=1)\nsns.boxplot(x='grade', y='price', data=data)","dad6a718":"df_train.loc[df_train['grade']<=3]","16b0dd28":"df_test.loc[df_test['grade']<=3]","da81e4e1":"df_train = df_train.drop(df_train[(df_train['grade']<=3)].index)","e5f7a540":"plt.figure(figsize=(20,20))\nsns.heatmap(df_train.corr().abs(), annot=True)\nplt.show()","93f23ae6":"pd.plotting.scatter_matrix(df_train[['bathrooms', 'sqft_living', 'grade', 'sqft_above', 'sqft_living15', 'price']],\n                           alpha=0.2,\n                          figsize=(20, 20))\nplt.show()","bb24a825":"data = pd.concat([df_train['price'], df_train['sqft_living'], df_train['bathrooms']], axis=1)\nax = sns.scatterplot(x=\"sqft_living\", y=\"price\", hue='bathrooms', data=data)","737fd5f0":"df_train.loc[(df_train['sqft_living']>13000) & (df_train['bathrooms']>7)]","2c61a1dd":"df_train = df_train.drop(df_train.loc[(df_train['sqft_living']>13000) & (df_train['bathrooms']>7)].index)","463f8665":"data_src = pd.concat([df_train['price'], df_train['grade'], df_train['waterfront'], df_train['condition']], axis=1)\nfor condition in sorted(data_src['condition'].unique()):\n    #print(condition)\n    plt.title(\"condition: {}\".format(condition))\n    data = data_src[data_src['condition'] == condition]\n    ax = sns.scatterplot(x=\"grade\", y=\"price\", hue='waterfront', data=data)\n    plt.show()","84d500a0":"data_src = pd.concat([df_train['price'], df_train['renovated_flg']], axis=1)\ndata = data_src.groupby(['renovated_flg']).mean()\ndata.plot.bar()","4d2ecdc1":"data_src = pd.concat([df_train['price'], df_train['view']], axis=1)\ndata = data_src.groupby(['view']).mean()\ndata.plot.bar()","83f92cba":"from sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import KFold\nkfold = KFold(n_splits=5)","ebb2655f":"X_train = df_train.loc[:, ~df_train.columns.isin(['id', 'price', 'date'])]\ny_train = df_train['price']\nX_test = df_test.loc[:, ~df_test.columns.isin(['id', 'date'])]","ae09af4e":"gbr = GradientBoostingRegressor()\nscores = cross_val_score(gbr, X_train.values, y_train, cv=kfold)\nrmse = np.sqrt(scores)\nprint(\"\uad50\ucc28 \uac80\uc99d \uc810\uc218: {}\".format(scores))","ca4949ca":"gbr.fit(X_train, y_train)\npred = gbr.predict(X_test)","1a5ab0b2":"df_submit =  pd.DataFrame(data={'id':df_test['id'],'price':np.expm1(pred)})","d44bb840":"df_submit.to_csv('submission.csv', index=False)\nprint(\"complete!\")","639c1953":"* grade\uac00 3\uc774\ud558\uc778 \ub370\uc774\ud130\ub294 test, train\uc5d0 \uac70\uc758 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c \uc81c\uac70","f8f330c8":"### 4. Waterfront","431fe719":"## \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ud655\uc778","d0df6a50":"### 3. Floors","9bf68bbc":"* bathroom\uc218\uac00 \uc99d\uac00\ud568\uc5d0 \ub530\ub77c \uac00\uaca9\uc774 \uc99d\uac00\ud568\uc744 \ud655\uc778 \ud560 \uc218 \uc788\uc74c\n* \ud558\uc9c0\ub9cc, bathroomt\uc218\uac00 6.25 6.75, 7.5, 7.75 \uc5d0\uc11c\ub294 \ub2e4\ub978 \ud328\ud134\uc744 \ubcf4\uc774\uace0 \uc788\uc5b4 \uc81c\uac70","bda08120":"### Mean(Price) Vs Renovated_Flg","f5aed23b":"* 0-9\uae4c\uc9c0\ub294 \uc99d\uac00\ud558\uc600\uc73c\ub098 bedroom\uc218\uc5d0 \ub530\ub77c \uac00\uaca9\uc774 \uc99d\uac00\ud558\uc600\uc73c\ub098 10\uc5d0\uc11c\ub294 \uc99d\uac00 \ud558\uc9c0 \uc54a\uc74c\n* train\uacfc test\ub370\uc774\ud130\uc5d0\uc11c bedroom\uc218\uac00 10\uc778 \uacbd\uc6b0\ub294 \uc801\uc73c\ub2c8 train \ub370\uc774\ud130\uc5d0\uc11c \uac12 \uc81c\uac70","de592783":"### 3. Age \ucd94\uac00: 2015 - yr_built ","c776c7f1":"# 2. \ub370\uc774\ud130 \uc0b4\ud3b4\ubcf4\uae30 ","d64d2186":"### Mean(Price) Vs View","08e88be0":"### 1. Bedrooms","5f9eb902":"## \uac00\uaca9\uc5d0 \ub300\ud574\uc11c \uc0b4\ud3b4\ubcf4\uae30","40df7d92":"## \uc0b0\uc810\ub3c4 \ud589\ub82c \ubcf4\uae30","ccf4d9c7":"# 1. \ub370\uc774\ud130 \uc77d\uc5b4\uc624\uae30","31513e4a":"### 5. View","84744db8":"### Bathrooms","8d9c02d9":"# 3. \ub370\uc774\ud130 \uc804\ucc98\ub9ac\n\ub9c1\ud06c(https:\/\/www.slideshare.net\/PawanShivhare1\/predicting-king-county-house-prices) \ucc38\uace0","86e2a5d2":"### 1. Year \ucd94\uac00: Date Column \uc5d0\uc11c \uac00\uc838\uc624\uae30","08393095":"### Price Vs Square Feet Living (sqft living), Colored by Number of Bathrooms","ceb43b22":"* \ud2b9\uc774\uc0ac\ud56d\uc774 \ubcf4\uc774\uc9c0 \uc54a\uc74c","cbd410b2":"* waterfront\uac00 1\uc778 \uacbd\uc6b0 \uac00\uaca9\uc774 \ub354 \ub192\uc544 \ubcf4\uc784","d304f32d":"## 4.2 \uc0b0\uc810\ub3c4 \ud655\uc778\n\n\uc0c1\uad00\uacc4\uc218\uac00 \ub192\uc740 \ub370\uc774\ud130\ub85c","e6715f1c":"## 4.1 \uc0c1\uad00\uacc4\uc218 \ud655\uc778","973ec357":"## \ub370\uc774\ud130\uac04\uc758 \uc0c1\uad00 \uacc4\uc218 \ud655\uc778","e3f7b965":"\uac00\uaca9\uc740 log","616ee55a":"## GradientBoostingRegressor \uc0ac\uc6a9\n\n\uc120\ud0dd \uc774\uc720\n* \uadf8\ub798\ub514\uc5b8\ud2b8 \ubd80\uc2a4\ud305 \ud68c\uadc0 \ud2b8\ub9ac\ub294 \uc5ec\ub7ec \uac1c\uc758 \ud2b8\ub9ac\ub97c \ubb36\uc5b4 \ubaa8\ub378\uc744 \ub9cc\ub4dc\ub294 \ubc29\ubc95\n* \ub79c\ub364 \ud3ec\ub808\uc2a4\ud2b8\ubcf4\ub2e4 \ub9e4\uac1c\ubcc0\uc218 \uc124\uc815\uc5d0 \uc870\uae08 \ub354 \ubbfc\uac10\ud558\uc9c0\ub9cc, \uc798 \uc870\uc815\ud558\uba74 \ub354 \ub192\uc740 \uc815\ud655\ub3c4\ub97c \ub0b8\ub2e4\uace0 \ud568\n* \ud5a5\ud6c4, \ub9e4\uac1c\ubcc0\uc218 \ucd5c\uc801\ud654\ub97c \ud1b5\ud574 \uc815\ud655\ub3c4\ub97c \ub192\uc784 \uc608\uc815","b65db645":"\ucc98\uc74c \ub370\uc774\ud130\ub97c \ubcf4\uba74 price\uc640 \uc5f0\uad00 \uc788\uc5b4 \ubcf4\uc774\ub294 \ud56d\ubaa9\uc740 sqft_living(0.7), grade(0.67), sqft_avobe(0.61) \uc815\ub3c4 \ubcf4\uc784","2309fed4":"### Grade","df4359db":"* bathroom 4.5\uc5d0\uc11c \uac00\uaca9\uc774 \ub192\uc544\ubcf4\uc774\ub294 \ub370\uc774\ud130 \uc81c\uac70","b93bc913":"# 4. \ub370\uc774\ud130 \uc2dc\uac01\ud654 \ubc0f \ud328\ud134 \ubd84\uc11d","7c43f635":"# 5. \ubaa8\ub378\ub9c1","b00bd59e":"* sqft_living \uac12\uc774 \ub192\uc744 \uc218\ub85d \uac00\uaca9\uc774 \uc99d\uac00\ud568\uc744 \ubcf4\uc784\n* sqft_living\uc774 \ub192\uc740\ub370 \uac00\uaca9\uc774 \ub0ae\uc740 \ub370\uc774\ud130 \ubcf4\uc784, \uc81c\uac70","8bc205b7":"## 3.1 \uc0c8\ub85c\uc6b4 \ub370\uc774\ud130 \ucd94\uac00","8cd2ae93":"* \ucd9c\ucc98: https:\/\/www.slideshare.net\/PawanShivhare1\/predicting-king-county-house-prices\n* Discussion\uc5d0 \uc62c\ub77c\uc628 \ub370\uc774\ud130 \ucd9c\ucc98\uc5d0 \uc788\ub294 \ub9c1\ud06c\uc758 \uc2ac\ub77c\uc774\ub4dc \uc790\ub8cc\ub97c \ubc14\ud0d5\uc73c\ub85c \uc2dc\uc791\ud558\uc600\uc2b5\ub2c8\ub2e4.\n* \uc774\ubc88\uc774 \uce90\uae00\uc758 \uccab\ubc88\uc9f8 \uacbd\uc9c4\ub300\ud68c\ub77c \ubaa8\ub974\ub294 \ubd80\ubd84\uc774 \ub9ce\uc558\uc9c0\ub9cc, \uacf5\uc720\ud574\uc8fc\uc2e0 \ucee4\ub110\uc774 \ub3c4\uc6c0\uc774 \ub418\uc5c8\uc2b5\ub2c8\ub2e4.","20d3f470":"### Condition","f717e6f0":"## 3.2 \uc544\uc6c3\ub77c\uc774\uc5b4 \uc81c\uac70\n\nBoxplot\uc744 \uc774\uc6a9\ud558\uc5ec \ub370\uc774\ud130\uc758 \ubd84\ud3ec\ub97c \ubcf4\uba74\uc11c \uc544\uc6c3\ub77c\uc774\uc5b4 \uc81c\uac70","71a40044":"### 4. Renovated_flg \ucd94\uac00: yr_renovated \uac12\uc774 \uc874\uc7ac\ud558\uba74 1, \uc544\ub2c8\uba74 0","0dc49222":"### Price Vs Grade, Colored by Waterfront for Different Values of Condition","23eda516":"# 0. \uc2dc\uc791\ud558\uba70","25a572d5":"### 2. Month \ucd94\uac00: Date Column \uc5d0\uc11c \uac00\uc838\uc624\uae30","bd4c72c0":"# 6. \uc81c\ucd9c"}}