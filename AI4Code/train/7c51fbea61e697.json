{"cell_type":{"73c3e6f8":"code","6ae473c0":"code","17f7475f":"code","a680ab1c":"code","11f82833":"code","20247be6":"code","a86bc8b9":"code","1b8cbb05":"code","39810e48":"code","d95fa1ab":"code","1a51d94f":"code","665c5147":"code","f633766a":"code","12b35d6d":"code","d20a8d46":"code","a509d01f":"code","02d84242":"code","9d1e7059":"code","a116c490":"code","5645ba06":"code","36bdb6a0":"code","540dcf43":"code","dcbaf45b":"code","3344fbae":"markdown"},"source":{"73c3e6f8":"from datetime import datetime\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport os\nimport random\nimport matplotlib\nimport matplotlib.pyplot as plt","6ae473c0":"import warnings\nwarnings.filterwarnings(\"ignore\")","17f7475f":"df_ratings=pd.read_csv('..\/input\/movielens-dataset\/ratings.csv')\ndf_ratings.head()","a680ab1c":"df_movies=pd.read_csv(\"..\/input\/movielens-dataset\/movies.csv\")\ndf_movies.head()","11f82833":"df_genres=df_movies['genres'].str.get_dummies(sep='|')\ndf_genres.head()","20247be6":"df_movies=pd.merge(df_movies, df_genres, left_index=True, right_index=True)\ndf_movies.head()","a86bc8b9":"df_movies.drop(['genres'], axis = 1,inplace=True) \ndf_movies.head()","1b8cbb05":"df_movies['year']=df_movies['title']\ndf_movies['title'] = [x[:-7] for x in df_movies['title']]\ndf_movies.head()","39810e48":"df_movies['year'] = [x[-5:-1] for x in df_movies['year']]\ndf_movies.head()","d95fa1ab":"movie_data = pd.merge(df_ratings, df_movies, on='movieId')\n\nmovie_data.head()","1a51d94f":"plt.figure(figsize = (12, 8))\nax = sns.countplot(x=\"rating\", data=movie_data)\nfor q in ax.patches:\n    ax.annotate(str(q.get_height()), (q.get_x() * 1.01 , q.get_height() * 1.01))\nax.set_yticklabels([num for num in ax.get_yticks()])\nplt.tick_params(labelsize = 15)\nplt.title(\"Count Ratings in movie data\", fontsize = 20)\nplt.xlabel(\"Ratings\", fontsize = 20)\nplt.ylabel(\"Number of Ratings\", fontsize = 20)\nplt.grid()","665c5147":"movie_data.groupby('title')['rating'].mean().head()","f633766a":"movie_data.groupby('title')['rating'].mean().sort_values(ascending=False).head()","12b35d6d":"movie_data.groupby('title')['rating'].count().sort_values(ascending=False).head()","d20a8d46":"ratings_mean_count = pd.DataFrame(movie_data.groupby('title')['rating'].mean())\nratings_mean_count.head()","a509d01f":"ratings_mean_count['rating_counts'] = pd.DataFrame(movie_data.groupby('title')['rating'].count())\nratings_mean_count.head()","02d84242":"plt.figure(figsize=(20,5))\nplt.rcParams['patch.force_edgecolor'] = True\nratings_mean_count['rating_counts'].hist(bins=50)\nplt.show()","9d1e7059":"plt.figure(figsize=(20,5))\nplt.rcParams['patch.force_edgecolor'] = True\nratings_mean_count['rating'].hist(bins=50)\nplt.show()","a116c490":"plt.rcParams['patch.force_edgecolor'] = True\nsns.jointplot(x='rating', y='rating_counts', data=ratings_mean_count, alpha=0.4,height=8)\nplt.show()","5645ba06":"user_movie_rating = movie_data.pivot_table(index='userId', columns='title', values='rating')\nuser_movie_rating.head()","36bdb6a0":"user_movie_rating.fillna(0,inplace=True)\nuser_movie_rating.head()","540dcf43":"def recommend(sample,min_rating_counts):\n    inputmovie_ratings = user_movie_rating[sample]\n    movies_like_input = user_movie_rating.corrwith(inputmovie_ratings)\n    corr_inputmovie = pd.DataFrame(movies_like_input, columns=['Correlation'])\n    corr_inputmovie.dropna(inplace=True)\n    corr_inputmovie.sort_values('Correlation', ascending=False)\n    corr_inputmovie = corr_inputmovie.join(ratings_mean_count['rating_counts'])\n    corr_inputmovie=corr_inputmovie[\n        corr_inputmovie['rating_counts']>min_rating_counts\n    ].sort_values('Correlation', ascending=False)\n    corr_inputmovie = corr_inputmovie.reset_index()\n    corr_inputmovie.index = corr_inputmovie.index + 1\n    return corr_inputmovie.head(10)\n    ","dcbaf45b":"import random\nmovie=random.choice(df_movies.title.unique())\nprint(\"Recommendation for movie :  {}\\n\".format(movie))\nsuggestion=recommend(movie,ratings_mean_count.rating_counts.median())\nif(len(suggestion)==0):\n    print(\"Not enough ratings to Recommend other Movies\")\nelse:\n    print(suggestion['title'])\n#user can filter how many rating coutings is needed to get result","3344fbae":"##### As per data available, 3 is median  for rating_counts column\nfor many random value ( movie), there can't be any recommendation as min number of reviews are not satisfied"}}