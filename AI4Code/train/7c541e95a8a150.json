{"cell_type":{"f901ba9b":"code","4e61e5f8":"code","83687c43":"code","be87b881":"code","927899e1":"code","ce28d442":"code","8c8c7f3b":"code","c85e6524":"code","3d51e3a4":"code","d984dd5c":"code","7913615a":"code","5722d2c7":"code","963e1914":"markdown","c828265d":"markdown","5172497a":"markdown","0d9b5896":"markdown","3f73dd5b":"markdown"},"source":{"f901ba9b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn import feature_extraction, linear_model, model_selection, preprocessing","4e61e5f8":"train_df = pd.read_csv(\"\/kaggle\/input\/nlp-getting-started\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/nlp-getting-started\/test.csv\")","83687c43":"#Create instance\ncount_vectorizer = feature_extraction.text.CountVectorizer()","be87b881":"#Fit Transform train data\ntrain_vectors = count_vectorizer.fit_transform(train_df[\"text\"])","927899e1":"#Only transform test data - so that train and test use the same vectors\ntest_vectors = count_vectorizer.transform(test_df[\"text\"])","ce28d442":"clf = linear_model.RidgeClassifier()","8c8c7f3b":"scores = model_selection.cross_val_score(clf, train_vectors, train_df[\"target\"], cv=3, scoring=\"f1\")\nscores.mean()","c85e6524":"clf.fit(train_vectors, train_df[\"target\"])","3d51e3a4":"#get sample file for creating submission file\nsample_submission = pd.read_csv(\"\/kaggle\/input\/nlp-getting-started\/sample_submission.csv\")","d984dd5c":"sample_submission[\"target\"] = clf.predict(test_vectors)","7913615a":"sample_submission.head()","5722d2c7":"#Got to the Output section of this Kernel -> click on Submit to Competition\nsample_submission.to_csv(\"submission.csv\", index=False)","963e1914":"# Import Libraries","c828265d":"# Submit","5172497a":"# Model","0d9b5896":"# Building Vectors","3f73dd5b":"# Predict"}}