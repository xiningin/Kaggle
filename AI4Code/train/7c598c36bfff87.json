{"cell_type":{"200c0265":"code","0dc06e73":"code","fa9e75e3":"code","6a7aae61":"code","808000be":"code","b19d62ef":"code","9177b27f":"code","d5e4a9b0":"code","215c3f38":"code","85beeebe":"code","be588cfc":"code","1f808e1d":"code","21e5ffb9":"code","18f0c5b1":"code","0d23ffcd":"code","05ec764d":"code","25833e54":"code","d3591d4f":"code","3a344455":"code","f1c6e0c4":"code","388a3ff1":"markdown","48f8f25a":"markdown","0f994064":"markdown","8609cce6":"markdown","297c7f48":"markdown","7e4c9cbe":"markdown","c7691bff":"markdown","db7d0b7f":"markdown","b02c7b19":"markdown","10610dae":"markdown","8e5a871b":"markdown","915661f7":"markdown"},"source":{"200c0265":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","0dc06e73":"iris = pd.read_csv('..\/input\/iris\/Iris.csv')","fa9e75e3":"iris.head()","6a7aae61":"sns.pairplot(iris, hue = 'Species')","808000be":"setosa = iris[iris['Species'] == 'setosa']\nsns.kdeplot(x = setosa['SepalLengthCm'],y =  setosa['SepalWidthCm'], cmap = \"plasma\", shade = True, shade_lowest=False)","b19d62ef":"from sklearn.model_selection import train_test_split","9177b27f":"X = iris.drop(['Species'], axis = 1)\ny = iris['Species']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 69)","d5e4a9b0":"from sklearn.svm import SVC","215c3f38":"model = SVC()","85beeebe":"model.fit(X_train, y_train)","be588cfc":"from sklearn.metrics import confusion_matrix, classification_report","1f808e1d":"preds = model.predict(X_test)","21e5ffb9":"print(confusion_matrix(y_test, preds))","18f0c5b1":"print(classification_report(y_test, preds))","0d23ffcd":"from sklearn.model_selection import GridSearchCV","05ec764d":"param_grid = {\n    'C' : [10 ** i for i in range(-10, 10)],\n    'gamma' : [10 ** i for i in range(-10, 10)]\n}","25833e54":"grid = GridSearchCV(SVC(), param_grid, refit = True, verbose = 3)\ngrid.fit(X_train, y_train)","d3591d4f":"print(grid.best_estimator_)\nprint(grid.best_params_)\nprint(grid.best_score_)","3a344455":"grid_pred = grid.predict(X_test)","f1c6e0c4":"print(confusion_matrix(y_test, grid_pred))\nprint(classification_report(y_test, grid_pred))","388a3ff1":"# Train a Model\n\nNow its time to train a Support Vector Machine Classifier. \n\n**Call the SVC() model from sklearn and fit the model to the training data.**","48f8f25a":"## Model Evaluation\n\n**Now get predictions from the model and create a confusion matrix and a classification report.**","0f994064":"** Create a GridSearchCV object and fit it to the training data.**","8609cce6":"Let's visualize the data and get you started!\n\n## Exploratory Data Analysis\n\nTime to put your data viz skills to the test! Try to recreate the following plots, make sure to import the libraries you'll need!\n\n**Import some libraries you think you'll need.**","297c7f48":"The iris dataset contains measurements for 150 iris flowers from three different species.\n\nThe three classes in the Iris dataset:\n\n    Iris-setosa (n=50)\n    Iris-versicolor (n=50)\n    Iris-virginica (n=50)\n\nThe four features of the Iris dataset:\n\n    sepal length in cm\n    sepal width in cm\n    petal length in cm\n    petal width in cm\n\n## Get the data\n\n**Use seaborn to get the iris data by using: iris = sns.load_dataset('iris') **","7e4c9cbe":"** Now take that grid model and create some predictions using the test set and create classification reports and confusion matrices for them. Were you able to improve?**","c7691bff":"Wow! You should have noticed that your model was pretty good! Let's see if we can tune the parameters to try to get even better (unlikely, and you probably would be satisfied with these results in real like because the data set is quite small, but I just want you to practice using GridSearch.","db7d0b7f":"**Create a dictionary called param_grid and fill out some parameters for C and gamma.**","b02c7b19":"** Create a pairplot of the data set. Which flower species seems to be the most separable?**","10610dae":"## Gridsearch Practice\n\n** Import GridsearchCV from SciKit Learn.**","8e5a871b":"# Train Test Split\n\n** Split your data into a training set and a testing set.**","915661f7":"**Create a kde plot of sepal_length versus sepal width for setosa species of flower.**"}}