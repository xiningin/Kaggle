{"cell_type":{"da0b1fc6":"code","bee536b4":"code","949e9a2a":"code","d6674f8f":"code","a5e29e1a":"code","15792846":"code","8813043a":"code","15701311":"code","f9873ad7":"code","2c54fe35":"code","26e0b4ad":"code","7c37e3c2":"code","249c608c":"code","5502b3d5":"code","52905261":"code","279aaa8f":"code","b2931c11":"code","c7531776":"code","f7e0f2ac":"markdown","51022eb6":"markdown","a89f8352":"markdown","00a3998e":"markdown","07f5682a":"markdown","d517e5d1":"markdown","2b927a4f":"markdown","3f030804":"markdown","7766e40f":"markdown","329fd640":"markdown","c9eca573":"markdown","414d0df8":"markdown","d752767b":"markdown","87e5e8ef":"markdown","d0469d63":"markdown","baf7cda0":"markdown","8bc4cf0b":"markdown","a5785570":"markdown"},"source":{"da0b1fc6":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport os\nfrom tqdm.autonotebook import tqdm\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nprint(\"Libraries imported\")        ","bee536b4":"#read .csv file into dataFrame\ndf=pd.read_csv('..\/input\/2021-olympics-medals-in-tokyo\/Tokyo Medals 2021.csv')","949e9a2a":"#show first five rows of the dataset\ndf.head()","d6674f8f":"df.shape","a5e29e1a":"df.dtypes","15792846":"df.isnull().sum()","8813043a":"fig, ax = plt.subplots(1, 1, figsize=(50,45), sharey=True)\nsns.barplot(y = 'Country',x='Total', data = df,\n               palette=\"rocket\")\nplt.xlabel('Total Medal',size=50)\nplt.ylabel('Country',size=50)\nplt.title('Total medals vs all Countries',size=50)\nplt.show()\n","15701311":"fig, ax = plt.subplots(1, 1, figsize=(14,8), sharey=True)\nsns.barplot(y = 'Country',x='Total', data = df[:10],\n               palette=\"rocket\")\nplt.xlabel('Total Medal',size=20)\nplt.ylabel('Country',size=20)\nplt.title('Total medals vs top 10 Countries',size=20)\nplt.show()\n","f9873ad7":"df_total = df.sort_values(by = ['Total'],ascending = False).reset_index()\n\nfig = px.choropleth(df_total, locations=\"Country\", locationmode=\"country names\",\n                    color = 'Total',\n                    color_continuous_scale=px.colors.diverging.Portland,\n                    hover_name = 'Country',\n                    animation_frame = 'Country',\n                    hover_data  = ['Rank By Total'],\n                   title=\"Countries With Tokyo Olympic Medals\" )\nfig.show()\n\n","2c54fe35":"top_countries=df.sort_values(by=\"Rank By Total\",ascending=True)[:11]\ntop_countries","26e0b4ad":"plt.figure(figsize=(9, 5))\nsplot=sns.barplot(y = 'Total',x='Country', data = df[:10],palette=\"rocket\")\nplt.xlabel('Total Medal',size=20)\nplt.ylabel('Country',size=20)\nplt.title('Total medals vs top 10 Countries',size=20)\nfor p in splot.patches:\n    splot.annotate(format(round(p.get_height()\/1), '.0f')+\"\", \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   size=15,\n                   xytext = (0, -12),color='cyan', \n                   textcoords = 'offset points')\nplt.xticks(rotation=90)\nplt.show()\n","7c37e3c2":"plt.figure(figsize=(9, 5))\nsplot=sns.barplot(y = 'Gold Medal',x='Country', data = df[:10],palette=\"rocket\")\nplt.xlabel('Gold Medal',size=20)\nplt.ylabel('Country',size=20)\nplt.title('Total medals vs top 10 Countries',size=20)\nfor p in splot.patches:\n    splot.annotate(format(round(p.get_height()\/1), '.0f')+\"\", \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   size=15,\n                   xytext = (0, -12),color='cyan', \n                   textcoords = 'offset points')\nplt.xticks(rotation=90)\nplt.show()\n","249c608c":"sns.pairplot(df, hue=\"Gold Medal\")","5502b3d5":"plt.figure(figsize=(9, 5))\nsplot=sns.barplot(y = 'Silver Medal',x='Country', data = df[:10],palette=\"rocket\")\nplt.xlabel('Silver Medal',size=20)\nplt.ylabel('Country',size=20)\nplt.title('Total medals vs top 10 Countries',size=20)\nfor p in splot.patches:\n    splot.annotate(format(round(p.get_height()\/1), '.0f')+\"\", \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   size=15,\n                   xytext = (0, -12),color='cyan', \n                   textcoords = 'offset points')\nplt.xticks(rotation=90)\nplt.show()\n","52905261":"sns.pairplot(df, hue=\"Silver Medal\")","279aaa8f":"plt.figure(figsize=(9, 5))\nsplot=sns.barplot(y = 'Bronze Medal',x='Country', data = df[:10],palette=\"rocket\")\nplt.xlabel('Bronze Medal',size=20)\nplt.ylabel('Country',size=20)\nplt.title('Total medals vs top 10 Countries',size=20)\nfor p in splot.patches:\n    splot.annotate(format(round(p.get_height()\/1), '.0f')+\"\", \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   size=15,\n                   xytext = (0, -12),color='cyan', \n                   textcoords = 'offset points')\nplt.xticks(rotation=90)\nplt.show()\n","b2931c11":"sns.pairplot(df, hue=\"Bronze Medal\")","c7531776":"df1 = df.sort_values(by = ['Total'],ascending = False).reset_index().head(10)\n\ngold = go.Bar(x = df1['Country'],\n             y = df1['Gold Medal'],\n             name = 'Gold',\n             marker = dict(color = 'blue'))\n\nsilver = go.Bar(x = df1['Country'],\n             y = df1['Silver Medal'],\n             name = 'Silver',\n             marker = dict(color = 'teal'))\n\nbronze = go.Bar(x = df1['Country'],\n             y = df1['Bronze Medal'],\n             name = 'Bronze',\n             marker = dict(color = 'cyan'))\n\ndata = [gold,silver,bronze]\nlayout = dict(title ='Top 10 Countries with the most Olympic Medals',\n              title_x = 0.5,\n              title_font = dict(size = 20, color = 'black'),\n              barmode = 'relative',\n              xaxis = dict(title = 'Country'),\n              yaxis = dict(title = 'Count'))\nfig = go.Figure(data = data, layout = layout)\nfig.show()","f7e0f2ac":"# Import libraries","51022eb6":"This notebook is a basic exploratory data analysis (EDA) of the 2020 Summer Olympics that took place in Japan, 23 Jul-8 Aug, 2021.\n\n**Used Dataset: [Tokyo 2020 Olympics Medals](https:\/\/www.kaggle.com\/berkayalan\/2021-olympics-medals-in-tokyo)**\n\n**If you like this project then please don't forget to upvote.**","a89f8352":"**Gold Medal vs. Countries**","00a3998e":"Let's check, if there is any null values in the dataframe.","07f5682a":"Now let's check the datatypes!","d517e5d1":"**Top 10 Countries with the most Olympic Medals**","2b927a4f":"The dataset has total 93 rows and 6 columns.","3f030804":"**Medal Distribution By Country**","7766e40f":"# Stay Tuned..","329fd640":"**Bronze Medal vs. Countries**","c9eca573":"# Basic Analysis","414d0df8":"**Total Medals vs Top 10 Countries**","d752767b":"Top 3 countries with total metals are **USA**, **China** and **Japan**.","87e5e8ef":"**Silver Medal vs. Countries**","d0469d63":"# Animated Map","baf7cda0":"Now let's just check the pairwise relationships in the dataset.","8bc4cf0b":"# Loading Dataset ","a5785570":"**Countries With Tokyo Olympic Medals**"}}