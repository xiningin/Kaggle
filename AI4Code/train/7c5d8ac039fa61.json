{"cell_type":{"944c4f04":"code","959717d2":"code","1574b168":"code","92dfd5c7":"code","0c8098c3":"code","348d43e9":"code","d8392e4f":"code","e96c5092":"code","e2b6a3c3":"code","341c581d":"code","da6170da":"code","10b8143a":"code","fe0b889b":"code","63bfa38a":"code","88f8302f":"code","ce95208e":"code","8dbcb1cd":"code","409c7f0d":"code","53ac05ab":"code","b858b86d":"code","6de8d04a":"code","bc748760":"code","7060a0ca":"code","a5b0c657":"code","acdad7f9":"code","398eb984":"code","c562627b":"code","5c0c877d":"code","91e5f680":"code","be2319cb":"code","2fe84121":"code","42d747de":"code","5de03f5a":"code","3a03ee8c":"code","9e9ab0f6":"code","4863bf68":"code","a0f5b9ee":"code","c76df509":"code","df400d08":"code","c9119321":"code","b0536632":"code","e00aca04":"code","822b1899":"code","7cedb5c4":"code","498f5dd2":"code","63ae9a6f":"code","4c26a374":"code","e61b9512":"code","ef211129":"code","ca1c94f1":"code","0f87df59":"code","f3b53a8d":"code","8d46cd79":"code","0298a796":"code","6f8952e6":"code","57e965ef":"code","fdfe58d8":"code","4bab5706":"code","796ef662":"code","bd5c6415":"code","920b095a":"code","b491f7f1":"code","d752d168":"markdown","c1f9bb92":"markdown","99503eea":"markdown","9917ff09":"markdown","c6e3e042":"markdown","c1117f43":"markdown","e63c248d":"markdown","47bfa3c2":"markdown","55f0a9a5":"markdown","2dea11c9":"markdown","73dd25e2":"markdown","53b73693":"markdown","2c6d5786":"markdown","2a4486a0":"markdown","2cfd85f4":"markdown","04452f3d":"markdown","b66fc023":"markdown","a90acfe7":"markdown","bab86baf":"markdown","59a022ce":"markdown"},"source":{"944c4f04":"# Setup\n# importing libraries\nimport pandas as pd\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom scipy import stats\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split","959717d2":"# Loading Dataset\ndf = pd.read_csv('..\/input\/used-cars-dataset\/usedcars_dataset.csv')\n#First 5 rows\npd.set_option('display.max_columns', None)\ndf.head()","1574b168":"#Checking Null values in Dataframe\ndf.isnull().sum()","92dfd5c7":"#Droping all Null values\ndf1 = df.dropna()\n#As all null values are droped\ndf1.isnull().sum()","0c8098c3":"df1.shape","348d43e9":"#Checking Data type of each column\ndf1.dtypes","d8392e4f":"#Converting datatypes to correct formet\ndf1[[\"normalized-losses\"]] = df1[[\"normalized-losses\"]].astype(\"int\")\ndf1[[\"price\"]] = df1[[\"price\"]].astype(\"float\")\ndf1.dtypes","e96c5092":"#Checking unique values \ndf1.nunique()","e2b6a3c3":"# 3.1 Analyzing Individual features","341c581d":"#Unique values in drive-wheels column\ndf1[\"drive-wheels\"].unique()","da6170da":"# Correlation between different variables\nsns.boxplot(x=\"drive-wheels\" , y=\"price\" , data=df1)","10b8143a":"#Correlation between two features (Engine-size and Price)\nsns.regplot(x=\"engine-size\",y=\"price\", data=df1)\nplt.ylim(0, )","fe0b889b":"df[[\"engine-size\", \"price\"]].corr()","63bfa38a":"#Correlation between two features (Highway-mpg and Price)\nsns.regplot(x=\"highway-mpg\",y=\"price\", data=df1)\nplt.ylim(0, )","88f8302f":"#Correlation between two features (Peak-rpm and Price)\nsns.regplot(x=\"peak-rpm\",y=\"price\", data=df1)\nplt.ylim(0, )","ce95208e":"# 3.2 Descriptive Statistical Analysis","8dbcb1cd":"df1.describe(include = \"all\")","409c7f0d":"df1.describe(include=['object'])","53ac05ab":"#Creating new dataframe\ndf_test = df1[['drive-wheels','body-style','price']]\n#Groupby function\ndf_grp = df_test.groupby(['drive-wheels','body-style'] , as_index=False).mean()\ndf_grp","b858b86d":"# Pivot() function\ndf_pivot = df_grp.pivot(index = 'drive-wheels', columns = 'body-style')\ndf_pivot","6de8d04a":"#Plotting multiple features over Price column\nfig, ax = plt.subplots()\nim = ax.pcolor(df_pivot, cmap='RdBu')\n\n#label names\nrow_labels = df_pivot.columns.levels[1]\ncol_labels = df_pivot.index\n\n#move ticks and labels to the center\nax.set_xticks(np.arange(df_pivot.shape[1]) + 0.5, minor=False)\nax.set_yticks(np.arange(df_pivot.shape[0]) + 0.5, minor=False)\n\n#insert labels\nax.set_xticklabels(row_labels, minor=False)\nax.set_yticklabels(col_labels, minor=False)\n\n#rotate label if too long\nplt.xticks(rotation=90)\n\nfig.colorbar(im)\nplt.show()","bc748760":"# Wheel-Base vs. Price\npearson_coef, p_value = stats.pearsonr(df1['wheel-base'], df1['price'])\nprint(\"The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)","7060a0ca":"# Horsepower vs. Price\npearson_coef, p_value = stats.pearsonr(df1['horsepower'], df1['price'])\nprint(\"The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P = \", p_value)","a5b0c657":"# Length vs. Price\npearson_coef, p_value = stats.pearsonr(df1['length'], df1['price'])\nprint(\"The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P = \", p_value)","acdad7f9":"# Width vs. Price\npearson_coef, p_value = stats.pearsonr(df1['width'], df1['price'])\nprint(\"The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P = \", p_value)","398eb984":"# Curb-Weight vs. Price\npearson_coef, p_value = stats.pearsonr(df1['curb-weight'], df1['price'])\nprint( \"The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P = \", p_value) ","c562627b":"# Engine-Size vs. Price\npearson_coef, p_value = stats.pearsonr(df1['engine-size'], df1['price'])\nprint( \"The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P = \", p_value) ","5c0c877d":"# Bore vs. Price\npearson_coef, p_value = stats.pearsonr(df1['bore'], df1['price'])\nprint( \"The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P = \", p_value)","91e5f680":"# City-mpg vs. Price\npearson_coef, p_value = stats.pearsonr(df1['city-mpg'], df1['price'])\nprint(\"The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P = \", p_value) ","be2319cb":"# Highway-mpg vs. Price\npearson_coef, p_value = stats.pearsonr(df1['highway-mpg'], df1['price'])\nprint(\"The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P = \", p_value)","2fe84121":"# 3.4 Analysis of Variance (ANOVA)","42d747de":"# grouping results\ndf_gptest = df1[['drive-wheels','body-style','price']]\ngrouped_test1 = df_gptest.groupby(['drive-wheels','body-style'],as_index=False).mean()\ngrouped_test1","5de03f5a":"grouped_test2=df_gptest[['drive-wheels', 'price']].groupby(['drive-wheels'])\ngrouped_test2.head(2)","3a03ee8c":"grouped_test2.get_group('4wd')['price']","9e9ab0f6":"f_val, p_val = stats.f_oneway(grouped_test2.get_group('fwd')['price'], grouped_test2.get_group('rwd')['price'], grouped_test2.get_group('4wd')['price'])  \n \nprint( \"ANOVA results: F=\", f_val, \", P =\", p_val)","4863bf68":"#fwd and rwd\nf_val, p_val = stats.f_oneway(grouped_test2.get_group('fwd')['price'], grouped_test2.get_group('rwd')['price'])  \n \nprint( \"ANOVA results: F=\", f_val, \", P =\", p_val )","a0f5b9ee":"#4wd and rwd\nf_val, p_val = stats.f_oneway(grouped_test2.get_group('4wd')['price'], grouped_test2.get_group('rwd')['price'])  \n   \nprint( \"ANOVA results: F=\", f_val, \", P =\", p_val)","c76df509":"#4wd and fwd\nf_val, p_val = stats.f_oneway(grouped_test2.get_group('4wd')['price'], grouped_test2.get_group('fwd')['price'])  \n \nprint(\"ANOVA results: F=\", f_val, \", P =\", p_val) ","df400d08":"# 3.5 Extracting Important Variables","c9119321":"# 4.1 Simple Linear Regression","b0536632":"#Creating the linear regression object\nlm = LinearRegression()\n\n#Creating a linear function with \"highway-mpg\" as the predictor variable and the \"price\" as the response variable.\nX = df1[['highway-mpg']]\nY = df1['price']\n\n#Fitting the linear model using highway-mpg\nlm.fit(X,Y)\n\nYhat=lm.predict(X)\nYhat[0:5] ","e00aca04":"# Value of the intercept(a)\nlm.intercept_","822b1899":"# Value of the slope(b)\nlm.coef_","7cedb5c4":"# Find the R^2\nprint('The R-square is: ', lm.score(X, Y))","498f5dd2":"mse = mean_squared_error(df1['price'], Yhat)\nprint('The mean square error of price and predicted value is: ', mse)","63ae9a6f":"width = 12\nheight = 10\nplt.figure(figsize=(width, height))\n\n\nax1 = sns.distplot(df1['price'], hist=False, color=\"r\", label=\"Actual Value\")\nsns.distplot(Yhat, hist=False, color=\"b\", label=\"Fitted Values\" , ax=ax1)\n\n\nplt.title('Actual vs Fitted Values for Price')\nplt.xlabel('Price (in dollars)')\nplt.ylabel('Proportion of Cars')\n\nplt.show()\nplt.close()","4c26a374":"# 4.2 Multiple Linear Regression","e61b9512":"Z = df1[['wheel-base','horsepower', 'curb-weight', 'engine-size', 'highway-mpg','length','width']]\n#Fit the linear model using the four above-mentioned variables\nlm.fit(Z, df1['price'])\n\n#Multiple Linear Regression\nY_hat = lm.predict(Z)\nY_hat[0:5]","ef211129":"# Value of the intercept(a)\nlm.intercept_","ca1c94f1":"# Values of the coefficients (b1, b2, b3, b4, b5, b6, b7)\nlm.coef_","0f87df59":"# Find the R^2\nprint('The R-square is: ', lm.score(Z, df1['price']))","f3b53a8d":"#Find mean square error\nY_predict_multifit = lm.predict(Z)\nprint('The mean square error of price and predicted value using multifit is: ', \\\n      mean_squared_error(df1['price'], Y_predict_multifit))","8d46cd79":"width = 12\nheight = 10\nplt.figure(figsize=(width, height))\n\nax1 = sns.distplot(df1['price'], hist=False, color=\"r\", label=\"Actual Value\")\nsns.distplot(Y_hat, hist=False, color=\"b\", label=\"Fitted Values\" , ax=ax1)\n\n\nplt.title('Actual vs Fitted Values for Price')\nplt.xlabel('Price (in dollars)')\nplt.ylabel('Proportion of Cars')\n\nplt.show()\nplt.close()","0298a796":"# 4.3 Polynomial Regression","6f8952e6":"#We will use the following function to plot the data:\n\ndef PlotPolly(model, independent_variable, dependent_variabble, Name):\n    x_new = np.linspace(15, 55, 100)\n    y_new = model(x_new)\n\n    plt.plot(independent_variable, dependent_variabble, '.', x_new, y_new, '-')\n    plt.title('Polynomial Fit with Matplotlib for Price ~ Length')\n    ax = plt.gca()\n    ax.set_facecolor((0.898, 0.898, 0.898))\n    fig = plt.gcf()\n    plt.xlabel(Name)\n    plt.ylabel('Price of Cars')\n\n    plt.show()\n    plt.close()","57e965ef":"x = df1['highway-mpg']\ny = df1['price']","fdfe58d8":"# Here we use a polynomial of the 3rd order (cubic) \nf = np.polyfit(x, y, 3)\np = np.poly1d(f)\nprint(p)","4bab5706":"PlotPolly(p, x, y, 'highway-mpg')","796ef662":"np.polyfit(x, y, 3)","bd5c6415":"r_squared = r2_score(y, p(x))\nprint('The R-square value is: ', r_squared)","920b095a":"mean_squared_error(df1['price'], p(x))","b491f7f1":"#If you like this notebook, Don't forget to upvote.","d752d168":"# 2. Data pre-processing","c1f9bb92":"## Conclusion:\n### Since the p-value is < 0.001, the correlation between width and price is statistically significant, and the linear relationship is quite strong (~0.843).","99503eea":"## Conclusion: Important Variables\n\n### We now have a better idea of what our data looks like and which variables are important to take into account when predicting the car price. We have narrowed it down to the following variables:\n\n## Continuous numerical variables:\n\n### Length\n\n### Width\n\n### Curb-weight\n\n### Engine-size\n\n### Horsepower\n\n### City-mpg\n\n### Highway-mpg\n\n### Wheel-base\n\n### Bore\n\n\n## Categorical variables:\n\n### Drive-wheels","9917ff09":"## Conclusion:\n### Since the p-value is  <  0.001, the correlation between engine-size and price is statistically significant, and the linear relationship is very strong (~0.841)","c6e3e042":"## Conclusion :\n### Since the p-value is < 0.001, the correlation between highway-mpg and price is statistically significant, and the coefficient of about -0.720 shows that the relationship is negative and moderately strong.","c1117f43":"## Conclusion:\n### Since the p-value is  <  0.001, the correlation between length and price is statistically significant, and the linear relationship is moderately strong (~0.760).","e63c248d":"## Conclusion:\n### Since the p-value is  <  0.001, the correlation between bore and price is statistically significant, but the linear relationship is only moderate (~0.533).","47bfa3c2":"## Conclusion;-\n### Since the p-value is less than 0.001, the correlation between wheel-base and price is statistically significant, although the linear relationship isn't extremely strong (~0.759).","55f0a9a5":"# 3.Exploratory data analysis","2dea11c9":"## Conclusion:\n### Since the p-value is  <  0.001, the correlation between city-mpg and price is statistically significant, and the coefficient of about -0.692 shows that the relationship is negative and moderately strong.","73dd25e2":"### Above graph shows that there is a negative linear relationship between price and highway-mpg.So,these two features have negative Correlation.","53b73693":"### Above  graph  shows  that  there  is  a  positive  Linear  relationship  between  engine  size  and  price .So , these  two  features  have  positive  Correlation .","2c6d5786":"# 4. Model Development","2a4486a0":"## Conclusion:\n### Since the p-value is  <  0.001, the correlation between curb-weight and price is statistically significant, and the linear relationship is quite strong (~0.893).","2cfd85f4":"## Conclusion;-\n### Since the p-value is less than 0.001, the correlation between wheel-base and price is statistically significant, although the linear relationship isn't extremely strong (~0.73).","04452f3d":"# 5.Determining most accurate Model\n\n### Let's take a look at the values for the different models.\n\n## **Simple Linear Regression:** \n\n### R-squared: 0.518\n### MSE: 1.65 x10^7\n\n## **Multiple Linear Regression:** \n\n### R-squared: 0.836\n### MSE: 5.6 x10^6\n\n## **Polynomial Fit:** \n\n### R-squared: 0.663\n### MSE: 1.15 x 10^7\n    \n### As Multiple Linear Regression model returns highest R-squared value with Lowest Mean Squared Error(MSE) , So we concluded that MLR model is the best model for predicting Car Prices.","b66fc023":"# **Table of Contents**\n\n## **1. Setup**\n## **2. Data pre-processing**\n## **3. Exploratory data analysis**\n#### 3.1 Analyzing Individual features \n#### 3.2 Descriptive Statistical Analysis\n#### 3.3 Correlation and Causation\n#### 3.4 Analysis of Variance (ANOVA)\n#### 3.5 Extracting Important Variables\n\n## **4. Model Development**\n#### 4.1 Simple Linear Regression\n#### 4.2 Multiple Linear Regression\n#### 4.3 Polynomial Regression\n## **5.Determining most accurate Model** ","a90acfe7":"## 3.3 Correlation and Causation","bab86baf":"### Above graph shows Very Weak correlation between peak-rpm and Price,Therefore we cannot use Peak-rpm to predict the values. ","59a022ce":"## Conclusion\n### If ANOVA returns a sizeable F-test score and a small p-value. then our price variable is strongly correlated with the variable we are analyzing. In above cases ANOVA looks much better ."}}