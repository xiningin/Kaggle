{"cell_type":{"f285cc70":"code","0082354c":"code","3b8dbbab":"code","423feacd":"code","3bce23f3":"code","ce7e3384":"code","ee0e9843":"code","b5a711ce":"code","2d3b226f":"markdown"},"source":{"f285cc70":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0082354c":"df = pd.read_csv('\/kaggle\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv')\ndf.head()","3b8dbbab":"df.info()","423feacd":"X = df.drop(['Serial No.', 'Chance of Admit '], axis=1)\ny = df['Chance of Admit ']","3bce23f3":"from sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=123)\n\nlr = LinearRegression().fit(X_train, y_train)\ny_pred = lr.predict(X_test)\nmse_train = mean_squared_error(y_train, lr.predict(X_train))\nmse_test = mean_squared_error(y_test, y_pred)\nprint(\"Training set's mean squared error:\", mse_train)\nprint(\"Test set's mean squared error:\", mse_test)","ce7e3384":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(X)\nprint(X.head())\nprint(X_scaled[:5])","ee0e9843":"X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.25, random_state=123)\n\nlr = LinearRegression().fit(X_train, y_train)\ny_pred = lr.predict(X_test)\nmse_train = mean_squared_error(y_train, lr.predict(X_train))\nmse_test = mean_squared_error(y_test, y_pred)\nprint(\"Training set's mean squared error:\", mse_train)\nprint(\"Test set's mean squared error:\", mse_test)\n","b5a711ce":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\ncorr = df.drop('Serial No.', axis=1).corr()\nsns.heatmap(corr, annot=True, cmap=plt.cm.Reds);","2d3b226f":"It is a regression practice using admission data.\n\n**Mohan S Acharya, Asfia Armaan, Aneeta S Antony : A Comparison of Regression Models for Prediction of Graduate Admissions, IEEE International Conference on Computational Intelligence in Data Science 2019**"}}