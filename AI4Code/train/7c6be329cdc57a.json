{"cell_type":{"5f918b84":"code","d8b482f5":"code","0d9139f5":"code","ca357439":"code","289c46d4":"code","6804353c":"code","8863688f":"code","520f8e1c":"code","4a905c0e":"code","1a4f96a1":"code","06576fa8":"code","9869185c":"code","437564cf":"code","a484d424":"code","25ed9684":"code","69947e90":"code","daae6241":"code","51aa930d":"code","d967e4d4":"code","caa40329":"code","be03c951":"code","2c921384":"code","ffbec7e6":"code","4c8ea9cf":"code","c9e2ccf0":"code","92b77a9d":"code","cb01a1e0":"code","fb560c8d":"code","1e4466f2":"code","b42a3ab4":"code","7ff5c5de":"code","2fcc2915":"code","aedf3be4":"code","dab74d7e":"code","45e63533":"code","089175ee":"code","231bc980":"code","666da8b7":"code","3b8d3c52":"code","6878196c":"code","241c03c1":"code","bd8994e7":"code","0306e9e7":"code","9b745690":"code","158cf0bb":"code","ab3b1e20":"code","4e28362f":"code","68a87ee5":"code","d68939ca":"code","dd1dba64":"code","6bf3c402":"code","7d5c8e38":"code","29791178":"code","1583743c":"code","757314ec":"code","c0edcd47":"code","4bf2eaf8":"code","6c92d785":"code","d0bcb564":"code","3ae2e8a2":"code","e5a80646":"code","a08807d5":"code","f628043c":"code","c374da87":"code","6d2df226":"code","117abd9c":"code","0ec67458":"code","cdca50d6":"code","313f1e33":"code","5dc5bd37":"code","73f7d441":"code","25d31b1b":"code","e067cc16":"code","bcc571fd":"code","fd94d09c":"code","7be71361":"code","5dbe8f0d":"code","292a2810":"code","7a61d5fb":"code","1fcdac46":"code","8e07924f":"code","b6195b81":"code","8f330549":"code","43e2bb00":"code","c16eeaed":"code","8cfe99f1":"code","c46d7276":"code","c398b029":"markdown","3f97dc09":"markdown","7deb680e":"markdown","e7af7ae4":"markdown","5a73fc0e":"markdown","2628c35d":"markdown","81373c79":"markdown","dd138128":"markdown","05edb773":"markdown","df92158c":"markdown","003c9a05":"markdown","3f09a23d":"markdown","b8ea1c21":"markdown","6b01a8d6":"markdown","0457a966":"markdown","7c8514b5":"markdown","62d864c2":"markdown","fbf31e98":"markdown","3ae1badb":"markdown","523af224":"markdown","dd1f8fff":"markdown","1c5ff886":"markdown","4c6d6e37":"markdown","d243cd27":"markdown","4ea49ceb":"markdown","a2d63109":"markdown","e336dcfb":"markdown","20dd94b9":"markdown","060eb936":"markdown","f3dc2c2d":"markdown","e58ad3d8":"markdown"},"source":{"5f918b84":"#Packages\n\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","d8b482f5":"#Dataset for train\ndf_train = pd.read_csv('..\/input\/tabular-playground-series-mar-2021\/train.csv')\n\n#Dataset for test\ndf_test = pd.read_csv('..\/input\/tabular-playground-series-mar-2021\/test.csv')\n\n#Datasetfor submission\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-mar-2021\/sample_submission.csv')","0d9139f5":"#Columns of train dataset\n\ndf_train.columns","ca357439":"#Columns of train dataset\n\ndf_test.columns","289c46d4":"#Dataset Shape - Train\n\ndf_train.shape","6804353c":"#Dataset Shape - Test\n\ndf_test.shape","8863688f":"#First 5 rows - Train\n\ndf_train.head()","520f8e1c":"#First 5 rows - Test\n\ndf_test.head()","4a905c0e":"#Info - Train\n\ndf_train.info()","1a4f96a1":"#Info - Test\n\ndf_test.info()","06576fa8":"#Categorical columna - Names\n\ncat_columns = ['cat'+str(i) for i in range (0,19)]\ncat_columns","9869185c":"#Continuos columna - Names\n\ncont_columns = ['cont'+str(i) for i in range(0,11)]\ncont_columns","437564cf":"#Describe (continuos variables) - Train\n\ndf_train.describe()","a484d424":"#Describe (continuos variables) - Train\n\ndf_test.describe()","25ed9684":"#Quantity per category and column - Train\n\ndf_train[cat_columns].apply(pd.Series.value_counts).fillna(0)","69947e90":"#Quantity per category and column - Test\n\ndf_test[cat_columns].apply(pd.Series.value_counts).fillna(0)","daae6241":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(10, 6))\n\nsns.countplot(x=\"cat0\",data=df_train,palette=\"Set1\",ax=ax[0]).set_title('Train')\nsns.countplot(x=\"cat0\",data=df_test,palette=\"Set1\",ax=ax[1]).set_title('Test')\nfig.tight_layout()\nfig.show()","51aa930d":"order_cat1 = df_train['cat1'].value_counts().index\norder_cat1","d967e4d4":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(18, 8))\n\nsns.countplot(x=\"cat1\",data=df_train,palette=\"Set2\",ax=ax[0],order=order_cat1).set_title('Train')\nsns.countplot(x=\"cat1\",data=df_test,palette=\"Set2\",ax=ax[1],order=order_cat1).set_title('Test')\nfig.tight_layout()\nfig.show()","caa40329":"order_cat2 = df_train['cat2'].value_counts().index\norder_cat2","be03c951":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(20, 8))\n\nsns.countplot(x=\"cat2\",data=df_train,palette=\"Set3\",ax=ax[0],order=order_cat2).set_title('Train')\nsns.countplot(x=\"cat2\",data=df_test,palette=\"Set3\",ax=ax[1],order=order_cat2).set_title('Test')\nfig.tight_layout()\nfig.show()","2c921384":"order_cat3 = df_train['cat3'].value_counts().index\norder_cat3","ffbec7e6":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(20, 8))\n\nsns.countplot(x=\"cat3\",data=df_train,palette=\"Set1\",ax=ax[0],order=order_cat3).set_title('Train')\nsns.countplot(x=\"cat3\",data=df_test,palette=\"Set1\",ax=ax[1],order=order_cat3).set_title('Test')\nfig.tight_layout()\nfig.show()","4c8ea9cf":"order_cat4 = df_train['cat4'].value_counts().index\norder_cat4","c9e2ccf0":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(20, 8))\n\nsns.countplot(x=\"cat4\",data=df_train,palette=\"Set2\",ax=ax[0],order=order_cat4).set_title('Train')\nsns.countplot(x=\"cat4\",data=df_test,palette=\"Set2\",ax=ax[1],order=order_cat4).set_title('Test')\nfig.tight_layout()\nfig.show()","92b77a9d":"order_cat5 = df_train['cat5'].value_counts().index\norder_cat5","cb01a1e0":"len(order_cat5)","fb560c8d":"#There are a lot of categories for this feature. I only will plot the firts 10th\n\norder_cat5[0:10]","1e4466f2":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(20, 8))\n\nsns.countplot(x=\"cat5\",data=df_train,palette=\"Set3\",ax=ax[0],order=order_cat5[0:10]).set_title('Train')\nsns.countplot(x=\"cat5\",data=df_test,palette=\"Set3\",ax=ax[1],order=order_cat5[0:10]).set_title('Test')\nfig.tight_layout()\nfig.show()","b42a3ab4":"order_cat6 = df_train['cat6'].value_counts().index\norder_cat6","7ff5c5de":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(20, 8))\n\nsns.countplot(x=\"cat6\",data=df_train,palette=\"Set1\",ax=ax[0],order=order_cat6).set_title('Train')\nsns.countplot(x=\"cat6\",data=df_test,palette=\"Set1\",ax=ax[1],order=order_cat6).set_title('Test')\nfig.tight_layout()\nfig.show()","2fcc2915":"order_cat7 = df_train['cat7'].value_counts().index\norder_cat7","aedf3be4":"len(order_cat7)","dab74d7e":"#There are a lot of categories for this feature. I only will plot the firts 10th\n\norder_cat7[0:10]","45e63533":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(20, 8))\n\nsns.countplot(x=\"cat7\",data=df_train,palette=\"Set2\",ax=ax[0],order=order_cat7[0:10]).set_title('Train')\nsns.countplot(x=\"cat7\",data=df_test,palette=\"Set2\",ax=ax[1],order=order_cat7[0:10]).set_title('Test')\nfig.tight_layout()\nfig.show()","089175ee":"order_cat8 = df_train['cat8'].value_counts().index\norder_cat8","231bc980":"len(order_cat8)","666da8b7":"#There are a lot of categories for this feature. I only will plot the firts 10th\n\norder_cat8[0:10]","3b8d3c52":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(20, 8))\n\nsns.countplot(x=\"cat8\",data=df_train,palette=\"Set3\",ax=ax[0],order=order_cat8[0:10]).set_title('Train')\nsns.countplot(x=\"cat8\",data=df_test,palette=\"Set3\",ax=ax[1],order=order_cat8[0:10]).set_title('Test')\nfig.tight_layout()\nfig.show()","6878196c":"order_cat9 = df_train['cat9'].value_counts().index\norder_cat9","241c03c1":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(20, 8))\n\nsns.countplot(x=\"cat9\",data=df_train,palette=\"Set1\",ax=ax[0],order=order_cat9).set_title('Train')\nsns.countplot(x=\"cat9\",data=df_test,palette=\"Set1\",ax=ax[1],order=order_cat9).set_title('Test')\nfig.tight_layout()\nfig.show()","bd8994e7":"order_cat10 = df_train['cat10'].value_counts().index\norder_cat10","0306e9e7":"len(order_cat10)","9b745690":"#There are a lot of categories for this feature. I only will plot the firts 10th\n\norder_cat10[0:15]","158cf0bb":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(20, 8))\n\nsns.countplot(x=\"cat10\",data=df_train,palette=\"Set2\",ax=ax[0],order=order_cat10[0:15]).set_title('Train')\nsns.countplot(x=\"cat10\",data=df_test,palette=\"Set2\",ax=ax[1],order=order_cat10[0:15]).set_title('Test')\nfig.tight_layout()\nfig.show()","ab3b1e20":"order_cat11 = df_train['cat11'].value_counts().index\norder_cat11","4e28362f":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(10, 6))\n\nsns.countplot(x=\"cat11\",data=df_train,palette=\"Set3\",ax=ax[0],order=order_cat11).set_title('Train')\nsns.countplot(x=\"cat11\",data=df_test,palette=\"Set3\",ax=ax[1],order=order_cat11).set_title('Test')\nfig.tight_layout()\nfig.show()","68a87ee5":"order_cat12 = df_train['cat12'].value_counts().index\norder_cat12","d68939ca":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(10, 6))\n\nsns.countplot(x=\"cat12\",data=df_train,palette=\"Set1\",ax=ax[0],order=order_cat12).set_title('Train')\nsns.countplot(x=\"cat12\",data=df_test,palette=\"Set1\",ax=ax[1],order=order_cat12).set_title('Test')\nfig.tight_layout()\nfig.show()","dd1dba64":"order_cat13 = df_train['cat13'].value_counts().index\norder_cat13","6bf3c402":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(10, 6))\n\nsns.countplot(x=\"cat13\",data=df_train,palette=\"Set2\",ax=ax[0],order=order_cat13).set_title('Train')\nsns.countplot(x=\"cat13\",data=df_test,palette=\"Set2\",ax=ax[1],order=order_cat13).set_title('Test')\nfig.tight_layout()\nfig.show()","7d5c8e38":"order_cat14 = df_train['cat14'].value_counts().index\norder_cat14","29791178":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(10, 6))\n\nsns.countplot(x=\"cat14\",data=df_train,palette=\"Set3\",ax=ax[0],order=order_cat14).set_title('Train')\nsns.countplot(x=\"cat14\",data=df_test,palette=\"Set3\",ax=ax[1],order=order_cat14).set_title('Test')\nfig.tight_layout()\nfig.show()","1583743c":"order_cat15 = df_train['cat15'].value_counts().index\norder_cat15","757314ec":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(10, 6))\n\nsns.countplot(x=\"cat15\",data=df_train,palette=\"Set1\",ax=ax[0],order=order_cat15).set_title('Train')\nsns.countplot(x=\"cat15\",data=df_test,palette=\"Set1\",ax=ax[1],order=order_cat15).set_title('Test')\nfig.tight_layout()\nfig.show()","c0edcd47":"order_cat16 = df_train['cat16'].value_counts().index\norder_cat16","4bf2eaf8":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(10, 6))\n\nsns.countplot(x=\"cat16\",data=df_train,palette=\"Set2\",ax=ax[0],order=order_cat16).set_title('Train')\nsns.countplot(x=\"cat16\",data=df_test,palette=\"Set2\",ax=ax[1],order=order_cat16).set_title('Test')\nfig.tight_layout()\nfig.show()","6c92d785":"order_cat17 = df_train['cat17'].value_counts().index\norder_cat17","d0bcb564":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(10, 6))\n\nsns.countplot(x=\"cat17\",data=df_train,palette=\"Set3\",ax=ax[0],order=order_cat17).set_title('Train')\nsns.countplot(x=\"cat17\",data=df_test,palette=\"Set3\",ax=ax[1],order=order_cat17).set_title('Test')\nfig.tight_layout()\nfig.show()","3ae2e8a2":"order_cat18 = df_train['cat18'].value_counts().index\norder_cat18","e5a80646":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(10, 6))\n\nsns.countplot(x=\"cat18\",data=df_train,palette=\"Set1\",ax=ax[0],order=order_cat18).set_title('Train')\nsns.countplot(x=\"cat18\",data=df_test,palette=\"Set1\",ax=ax[1],order=order_cat18).set_title('Test')\nfig.tight_layout()\nfig.show()","a08807d5":"def grafico_distribucion(columna,dataset):\n    \n    import random\n    \n    datos = dataset[columna]\n    \n    paleta = sns.color_palette()\n    color = random.choice(paleta)\n\n    sns.displot(datos, color=color)\n    \n    plt.show()","f628043c":"#Distribution for continuous variables - Train\n\nfor columna in cont_columns:\n    grafico_distribucion(columna,df_train)","c374da87":"#Distribution for continuous variables - Test\n\nfor columna in cont_columns:\n    grafico_distribucion(columna,df_test)","6d2df226":"from sklearn.preprocessing import OneHotEncoder","117abd9c":"OH_encoder = OneHotEncoder(sparse=False)","0ec67458":"#Categorical column encoding\n\n#OH_cols_train = pd.DataFrame(OH_encoder.fit_transform(df_train[cat_columns]))\n#OH_cols_test = pd.DataFrame(OH_encoder.transform(df_test[cat_columns]))","cdca50d6":"cat_columns_reduce = ['cat0','cat1','cat2','cat3','cat4','cat5','cat6','cat7','cat8','cat9','cat11','cat12','cat13','cat14','cat15','cat16','cat17','cat18']","313f1e33":"#Categorical column encoding\n\nOH_cols_train = pd.DataFrame(OH_encoder.fit_transform(df_train[cat_columns_reduce]))\nOH_cols_test = pd.DataFrame(OH_encoder.transform(df_test[cat_columns_reduce]))","5dc5bd37":"#Column name for categorical column - Train\n\nOH_cols_train.columns = OH_encoder.get_feature_names(['cat0', 'cat1', 'cat2', 'cat3', 'cat4', 'cat5', 'cat6', 'cat7','cat8','cat9','cat11','cat12','cat13','cat14','cat15','cat16','cat17','cat18'])","73f7d441":"#Column name for categorical column - Test\n\nOH_cols_test.columns = OH_encoder.get_feature_names(['cat0', 'cat1', 'cat2', 'cat3', 'cat4', 'cat5', 'cat6', 'cat7','cat8','cat9','cat11','cat12','cat13','cat14','cat15','cat16','cat17','cat18'])","25d31b1b":"OH_cols_train.head()","e067cc16":"OH_cols_test.head()","bcc571fd":"#Remove categorical columns without encoding and add new ones with encoding - Train\n\ndf_train_OH = df_train.drop(df_train[cat_columns],axis=1)\ndf_train_OH = pd.concat([df_train_OH,OH_cols_train],axis=1)\ndf_train_OH.head()","fd94d09c":"df_train_OH.columns","7be71361":"len(df_train_OH.columns)","5dbe8f0d":"#Remove categorical columns without encoding and add new ones with encoding - Test\n\ndf_test_OH = df_test.drop(df_test[cat_columns],axis=1)\ndf_test_OH = pd.concat([df_test_OH,OH_cols_test],axis=1)\ndf_test_OH.head()","292a2810":"df_test_OH.columns","7a61d5fb":"len(df_test_OH.columns)","1fcdac46":"#Target for training\n\ntarget = df_train['target']\ntarget.head()","8e07924f":"#Train dataset\n\ndf_train_OH = df_train_OH.drop(columns=['target'])\ndf_train_OH.head()","b6195b81":"len(df_train_OH.columns)","8f330549":"from lightgbm import LGBMRegressor","43e2bb00":"hyperparameters = {\"random_state\": 42,\n                   \"boosting_type\": \"gbdt\",\n                   \"objective\": \"binary\",\n                   \"metric\": \"auc\",\n                   \"colsample_bytree\": 0.25,\n                   \"learning_rate\": 0.01,\n                   \"max_depth\": 54,\n                   \"num_leaves\": 100,\n                   \"min_child_samples\": 275,\n                   \"n_estimators\": 2300,\n                   \"cat_smooth\": 40.0,\n                   \"max_bin\": 512,\n                   \"min_data_per_group\": 100,\n                   \"bagging_freq\": 1,\n                   \"bagging_fraction\": 0.80,\n                   \"cat_l2\": 12.0}","c16eeaed":"model = LGBMRegressor(**hyperparameters)","8cfe99f1":"model.fit(df_train_OH, target)","c46d7276":"sample_submission['target'] = model.predict(df_test_OH)\n\nsample_submission.to_csv('lightgbm.csv',index=False)","c398b029":"# 5. LightGBM Model\n","3f97dc09":"### cat12","7deb680e":"### cat6","e7af7ae4":"## 1.1 General","5a73fc0e":"### cat13","2628c35d":"### cat17","81373c79":"All of the feature columns, cat0 - cat18 are categorical, and the feature columns cont0 - cont10 are continuous.","dd138128":"### cat9","05edb773":"### cat10","df92158c":"## 1.2 Categorical Variables","003c9a05":"### cat7","3f09a23d":"### cat4","b8ea1c21":"### cat1","6b01a8d6":"# 2. Encoding for categorical variables","0457a966":"### cat2","7c8514b5":"### cat14","62d864c2":"### cat16","fbf31e98":"### cat0","3ae1badb":"### cat18","523af224":"# 6. Prediction and submit","dd1f8fff":"# 1. Exploratory Data Analysis (EDA)","1c5ff886":"### cat3","4c6d6e37":"As can be seen, there are no NaN in the columns","d243cd27":"### cat15","4ea49ceb":"### cat5","a2d63109":"### cat8","e336dcfb":"## 1.2 Continuous variables","20dd94b9":"As seen from the previous error that {'BU', 'BW', 'CA', 'DG', 'EJ', 'JM', 'KE', 'KM'} in cat10 column are present in test data but not present in training data\n\nIn principle I will not use this column for train and test","060eb936":"# 3. Datasets for Model training","f3dc2c2d":"# TPS - Mar 2021 - EDA + Models\n\n![](https:\/\/www.lifewire.com\/thmb\/WGo_EVL86KWQrv5Mr1BzwdTpG70=\/1135x851\/smart\/filters:no_upscale()\/med241050-56a9f68a3df78cf772abc65f.jpg)","e58ad3d8":"### cat11"}}