{"cell_type":{"b3c045b8":"code","b2e09ee4":"code","961ae91f":"code","89d4297b":"code","841e3fa7":"code","eba4ae55":"code","fbd57ce9":"code","ed22c6aa":"code","538cf08f":"code","b12c649c":"code","92e131d0":"code","1ee401de":"code","3a283027":"code","db2ccef7":"code","42e0bfb1":"markdown","2360d212":"markdown","21f756d4":"markdown","de106fdb":"markdown","4f779963":"markdown","aff3a31d":"markdown","a0bf81df":"markdown"},"source":{"b3c045b8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as graph\n\ndataset = pd.read_csv('..\/input\/insurance\/insurance.csv')\n\nprint (dataset)\n\nprint (dataset.shape, '\\n \\n')\n\ndataset.info()","b2e09ee4":"dataset.isnull().sum()","961ae91f":"for col in dataset.columns:\n    if (dataset[col].dtype == object):\n        print (col, ':', dataset[col].unique())","89d4297b":"from sklearn import preprocessing\n\ndef labelEncoder(dataset, col):\n    encoder = preprocessing.LabelEncoder()\n    encoder.fit(dataset[col])\n    return encoder.transform(dataset[col])","841e3fa7":"dataset['sex'] = labelEncoder(dataset, 'sex')\ndataset['smoker'] = labelEncoder(dataset, 'smoker')\ndataset['region'] = labelEncoder(dataset, 'region')","eba4ae55":"dataset.info()","fbd57ce9":"from sklearn.model_selection import train_test_split\n\nx = dataset.iloc[:, :-1]\ny = dataset.iloc[:, -1]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.30)","ed22c6aa":"x_train.shape, x_test.shape # 70 % 30 %","538cf08f":"from sklearn.linear_model import LinearRegression\n\nlinear_regression = LinearRegression()\nlinear_regression.fit(x_train, y_train)","b12c649c":"y_test_predicted = linear_regression.predict(x_test)","92e131d0":"from sklearn.metrics import r2_score\n\nscore = r2_score(y_test, y_test_predicted)\n\nprint ('\\n R2 Score : ', round(score * 100), ' %')","1ee401de":"dataset.head()","3a283027":"linear_regression.predict([[19, 0, 27.900, 0, 1, 3]])","db2ccef7":"fig = graph.figure(figsize=(7, 7))\n\naxis = fig.add_subplot(111)\n\n# Kaggle dark theme fix\naxis.tick_params(axis='x', colors='red', labelsize=15)\naxis.tick_params(axis='y', colors='red', labelsize=15)\n\ngraph.scatter([i for i in range(0, 20)], y_test[:20], color='blue')\ngraph.scatter([i for i in range(0, 20)], y_test_predicted[:20], color='red')\n\ngraph.legend(['Test Data', 'Predicted'])\n\nprint ('\\n R2 Score : ', round(score * 100), ' %')","42e0bfb1":"**Checking Unique Values**","2360d212":"# **Medical Cost Insurance Prediction**","21f756d4":"### Cross Validation","de106fdb":"### Train, Test Split and Model Creation","4f779963":"# Label Encoding for Categorical Variable","aff3a31d":"# **Pre Processing**","a0bf81df":"***Handling Missing Data***"}}