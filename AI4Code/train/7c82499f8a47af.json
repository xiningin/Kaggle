{"cell_type":{"6c3c4c03":"code","9bd17eec":"code","176507b6":"code","26c8aeea":"markdown","0f309e71":"markdown","9e4287bc":"markdown","47588360":"markdown"},"source":{"6c3c4c03":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# read in the csv file containing the data\nkernels = pd.read_csv('..\/input\/meta-kaggle\/Kernels.csv')\n\n# firstly let us remove our friend the Kaggle Kerneler, whose user Id is 2080166, from all the data:\nkernels = kernels[kernels.AuthorUserId != 2080166]\n\n# make a new column which is the ratio of views to votes for each notebook\nkernels['views_per_vote'] = kernels['TotalViews']\/kernels['TotalVotes']\n\n# Some notebooks have 0 votes, and division by 0 results in inf: change these to a nan\nkernels['views_per_vote'] = kernels['views_per_vote'].replace([np.inf, -np.inf], np.nan)\n# now drop all the nan rows\nkernels['views_per_vote'].dropna(inplace=True)\n\n# finally make a histogram plot of this new column, \n# we shall arbitrarily set the cut off at 200 views per vote\nplt.figure(figsize = (15,6))\nax = sns.distplot(kernels['views_per_vote'], \n             bins=200, \n             kde_kws={\"clip\":(0,200)}, \n             hist_kws={\"range\":(0,200)},\n             color='darkcyan', \n             axlabel=\"Number of views per vote\");\nvalues = np.array([rec.get_height() for rec in ax.patches])\nnorm = plt.Normalize(values.min(), values.max())\ncolors = plt.cm.jet(norm(values))\nfor rec, col in zip(ax.patches, colors):\n    rec.set_color(col)\nplt.show();","9bd17eec":"# first let us remove our friend the Kaggle Kerneler, whose user Id is 2080166, from the data:\n#kernels = kernels[kernels.AuthorUserId != 2080166]\n\n# convert the \"MadePublicDate\" column to a datetime\nkernels['MadePublicDate'] = kernels['MadePublicDate'].apply(pd.to_datetime)\n# make a 'days since' column for the number of days since going Public\ndate_today = pd.to_datetime('today')\nkernels['days_since'] = (date_today - kernels['MadePublicDate']).dt.days\n# now drop the kernels that are less than a 'month' (say 30 days) old\nkernels.drop(kernels.index[kernels['days_since'] <= 30], inplace = True)\n# now calculate the number of days that have passed between each vote for each kernel since going Public\nkernels['days_per_vote'] = kernels['days_since']\/kernels['TotalVotes']\n\n# now plot a histogram (arbitrarily set the cut off at 1 year)\nplt.figure(figsize = (15,6))\nax = sns.distplot(kernels['days_per_vote'], \n             bins=365,\n             kde_kws={\"clip\":(1,365)}, \n             hist_kws={\"range\":(1,365)},\n             color='darkcyan', \n             axlabel=\"Number of days per vote\");\nvalues = np.array([rec.get_height() for rec in ax.patches])\nnorm = plt.Normalize(values.min(), values.max())\ncolors = plt.cm.jet(norm(values))\nfor rec, col in zip(ax.patches, colors):\n    rec.set_color(col)\nplt.show();","176507b6":"total_number_of_kernels = kernels['days_per_vote'].shape[0]\nkernels_that_take_month_per_vote =  kernels.index[kernels['days_per_vote'] >= 30].shape[0]\npercentage = (100.0\/total_number_of_kernels)*kernels_that_take_month_per_vote\nprint(\"percentage =\",percentage)","26c8aeea":"From the histogram we can see that there are a number of very popular notebooks that get upvoted every few days (those to the left in red), but the vast majority do not. The distribution has a long tail, and here I have only plotted the data for up to one year(!)\n\nLet us calculate the percentage of notebooks get less than one vote a month:","0f309e71":"### Notebooks: Number of views per vote\nI thought it would be interesting to take a quick look at the distribution of the number views that a notebook receives for each upvote earned. We can see from the plot below that the modal class is around **40 views per vote**, in other words typically only around **2.5%** of the time does a viewer decide that a notebook is worthy their vote. \n\n#### Update (September 2020):\nI have re-ran this notebook using the latest data, and in the three months since the creation of this notebook there has been a slight change in voting habits. There is now a plateau of votes between **10-40 views per vote**. Still, in the most optimistic of cases only **10%** of the time does a viewer decide that a notebook is worthy their vote. (One can see the original plot [here](https:\/\/www.kaggle.com\/carlmcbrideellis\/notebooks-number-of-views-per-vote?scriptVersionId=34895828)).\n#### Update (December 2021)\nBasically things have not changed much...","9e4287bc":"#### Possible interpretations:\n\nClasses to the left of the peak could correspond to notebooks that have obtained votes with relatively few views. \nOne interpretation of this is that these may be notebooks that are particularly good or interesting, and gain votes quickly. \n\nClasses to the far right of the peak have a lot of views but have relatively few votes:\n* These could correspond to either notebooks that are perhaps somehow less interesting and have been on kaggle for quite some time, accumulating views but not votes. \n* They could also correspond to notebooks that have been the subject of effective marketing campaigns by the authors, resulting in many views, but in the end did not pick up the hoped-for votes.\n* Another interpretation is that they correspond to *\"platinum\"* notebooks, that went 'gold' along time ago; they  regularly receive  a lot of views, but people may no longer feel so much need to add their own vote.\n\n#### Conclusion: \nWe should really develop more of a habit of voting for the work of our fellow data scientists: we have seen that on average only 10% of the readers actually upvote the notebook they read, and I find it very hard to believe that 90% of the notebooks one reads on kaggle are not worth voting for!\n\n### Notebooks: Number of days per vote\nI also thought it would be interesting to see how often notebooks get votes by calculating the ratio of the number of days since a notebook was made public, divided by the total number of votes. (Note: I remove notebooks that are less than a month old from the calculation to improve the statistics).","47588360":"**Result: More than 90% of public notebooks get less than 1 vote per month.**\n\n### Related notebooks\n* [\"When will my notebook get its medal?\"](https:\/\/www.kaggle.com\/carlmcbrideellis\/when-will-my-notebook-get-its-medal)\n* [\"kaggle discussions: Busiest time of the day?\"](https:\/\/www.kaggle.com\/carlmcbrideellis\/kaggle-discussions-busiest-time-of-the-day)"}}