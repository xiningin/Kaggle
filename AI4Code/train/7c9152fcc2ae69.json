{"cell_type":{"d71f3615":"code","3ebad6bb":"code","bce7320d":"code","d0abda52":"code","8c511e33":"code","9b9cb830":"code","5d08a308":"code","74f35a50":"code","53c1cc65":"code","02f3de0c":"code","08474a7f":"code","0d6fdf39":"code","55b72ee7":"code","d6ba3a81":"code","8368bf81":"code","623a9d1f":"code","4e8c25af":"code","3f08bc6c":"code","44039ea3":"code","efe2a991":"code","05bfe23e":"code","404fc1fe":"code","68a0b2d7":"code","b1f18f7f":"code","cdf57777":"code","101443dd":"code","44db5f20":"code","6b3ba21f":"code","922e7800":"code","2386d81a":"code","6e511243":"code","a264c11d":"code","f2ac936c":"code","2abb879d":"code","a9cf9844":"code","dc4f70f5":"code","7718e03c":"code","db131206":"code","aac60d68":"code","830b5b4c":"code","83037cbb":"code","163ca254":"code","079a4453":"code","ed5581b5":"code","41b2b3b5":"code","c3b220a8":"code","31b20648":"code","a83f5205":"code","a83174d5":"code","ead0fe3a":"code","0872bdad":"markdown","70b4fd7c":"markdown","7719857b":"markdown","3bc2c851":"markdown","2930256b":"markdown","0c233a86":"markdown","49254f4b":"markdown","e21900b1":"markdown","c92b5f76":"markdown","1691c9f7":"markdown","4b48c6b8":"markdown","eb747db4":"markdown","a64a2c6a":"markdown","cabf1530":"markdown","95443b9b":"markdown","ebe91644":"markdown","8368e2aa":"markdown","431f24cf":"markdown","50f40123":"markdown","2e7179a5":"markdown","6cc43d3d":"markdown","9db85912":"markdown","4ee9dc52":"markdown","cc9b4cf9":"markdown","a5b5db96":"markdown","53eb2d63":"markdown","0d29669f":"markdown","fdb633f0":"markdown","1ca3f564":"markdown","a1b911b8":"markdown","b442988c":"markdown","f082cd6d":"markdown","d77a0561":"markdown"},"source":{"d71f3615":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split,GridSearchCV\nfrom sklearn.svm import SVC\nfrom sklearn import metrics\nimport warnings\nwarnings.filterwarnings(action='ignore')\n%matplotlib inline","3ebad6bb":"df = pd.read_csv('..\/input\/predicting-pulsar-starintermediate\/pulsar_data_train.csv')","bce7320d":"df","d0abda52":"df.describe()","8c511e33":"df.info()","9b9cb830":"df.isnull().sum()","5d08a308":"sns.heatmap(df.isnull(), cbar = False)","74f35a50":"df.dropna(thresh=7,inplace=True)\nsns.heatmap(df.isnull(), cbar = False)","53c1cc65":"df.info()","02f3de0c":"df.isnull().sum()","08474a7f":"from sklearn.impute import KNNImputer\nimputer = KNNImputer(n_neighbors=2)\ndata = pd.DataFrame(imputer.fit_transform(df))","0d6fdf39":"data.isnull().sum()","55b72ee7":"data","d6ba3a81":"df.columns","8368bf81":"data.rename(columns = {0:'Mean of the integrated profile',\n                       1:'Standard deviation of the integrated profile',\n                       2:'Excess kurtosis of the integrated profile',\n                       3:'Skewness of the integrated profile',\n                       4:'Mean of the DM-SNR curve',\n                       5:'Standard deviation of the DM-SNR curve',\n                       6:'Excess kurtosis of the DM-SNR curve',\n                       7:'Skewness of the DM-SNR curve',\n                       8:'target_class'}, inplace = True)\ndata","623a9d1f":"data.hist(bins=50 , figsize=(14,16))\nplt.show()","4e8c25af":"plt.figure(figsize=(15,10))\ndata.boxplot(vert=0)","3f08bc6c":"#Replace outliers in \"Skewness of the DM-SNR curve\" with 1000\ndata['Skewness of the DM-SNR curve'].where(data['Skewness of the DM-SNR curve'] <= 1000, 1000 ,inplace=True)\nsns.boxplot(data['Skewness of the DM-SNR curve'])","44039ea3":"from sklearn import preprocessing as per","efe2a991":"scaler = per.MinMaxScaler(feature_range = (0,1))\nrescaled_data = scaler.fit_transform(data.drop(columns='target_class'))\ndata1= pd.DataFrame(rescaled_data,index=data.index,columns=data.drop(columns='target_class').columns)\ndata1['target_class'] = data['target_class']\ndata = data1","05bfe23e":"data.head()","404fc1fe":"scaler = per.StandardScaler().fit(data.drop(columns='target_class'))\nstandardized_data = scaler.transform(data.drop(columns='target_class'))\ndata1 = pd.DataFrame(standardized_data,index=data.index,columns=data.drop(columns='target_class').columns)\ndata1['target_class'] = data['target_class']\ndata = data1","68a0b2d7":"data.head()","b1f18f7f":"data.hist(bins=50 , figsize=(14,16))\nplt.show()","cdf57777":"round(data['target_class'].value_counts()\/data.shape[0]*100,2).plot.pie(autopct='%1.2f%%',\n                                                                        shadow = True,\n                                                                        explode = [0.2, 0],\n                                                                        startangle = 45)","101443dd":"plt.figure(figsize=(10,10))\nsns.heatmap(data.corr() ,annot = True)","44db5f20":"data.columns","6b3ba21f":"data_corr = data.drop(['Mean of the integrated profile',\n                       'Standard deviation of the integrated profile',\n                       'Excess kurtosis of the DM-SNR curve',\n                       'Skewness of the DM-SNR curve'],axis=1)","922e7800":"plt.figure(figsize=(5,5))\nsns.heatmap(data_corr.corr() ,annot = True)","2386d81a":"data_0 = data_corr[data_corr['target_class'] == 0.0]\ndata_1 = data_corr[data_corr['target_class'] == 1.0]\n\nfrom sklearn.utils import resample\n\ndata_0 = resample(data_0 ,replace=False ,n_samples=1000 ,random_state=42)\ndata_1 = resample(data_1 ,replace=False ,n_samples=1000 ,random_state=42)\n\ndata = pd.concat([data_0,data_1])\ndata.reset_index(inplace=True)\ndata.drop('index',axis=1,inplace=True)\ndata","6e511243":"X = data.drop('target_class',axis=1)\nY = data['target_class']","a264c11d":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=1234)","f2ac936c":"Clf_svm = SVC(kernel='rbf',random_state=42)\nClf_svm.fit(X_train,Y_train)","2abb879d":"from sklearn.metrics import plot_confusion_matrix\nplot_confusion_matrix(Clf_svm,X_test,Y_test)","a9cf9844":"Clf_svm = SVC(kernel='linear',random_state=42)\nClf_svm.fit(X_train,Y_train)","dc4f70f5":"plot_confusion_matrix(Clf_svm,X_test,Y_test)","7718e03c":"C_grid = 0.02*np.arange(1,20)\ngamma_grid = 0.02*np.arange(1,50)\nprint(C_grid,gamma_grid)\nparameters = {'C': C_grid, 'gamma' : gamma_grid}\ngridCV = GridSearchCV(SVC(kernel='rbf'), parameters, n_jobs=-1)             \ngridCV.fit(X_train, Y_train)\nbest_C = gridCV.best_params_['C']\nbest_gamma = gridCV.best_params_['gamma']","db131206":"print(\"SVM best C : \" + str(best_C))\nprint(\"SVM best gamma : \" + str(best_gamma))","aac60d68":"SVM_best = SVC(kernel='rbf', C=best_C,gamma=best_gamma)\nSVM_best.fit(X_train, Y_train);\nY_pred = SVM_best.predict(X_test)","830b5b4c":"from sklearn.metrics import classification_report\nprint(classification_report(Y_test, Y_pred))","83037cbb":"# Initialize the range of threshoulds from zero to 100 with step size 0.01\n#0.01*100=1\ncutoff_grid = np.linspace(0.0,1.0,100)\nTPR = []                                                   # True Positive Rate.\nFPR = []                                                   # False Positive Rate.\ncutoff_grid","163ca254":"FPR, TPR, cutoffs = metrics.roc_curve(Y_test,Y_pred,pos_label=1)","079a4453":"plt.plot(FPR,TPR,c='red',linewidth=1.0)\nplt.xlabel('False Positive')\nplt.ylabel('True Positive')\nplt.title('ROC Curve')\nplt.show()","ed5581b5":"C_grid = 0.02*np.arange(1,20)\ngamma_grid = 0.02*np.arange(1,50)\nprint(C_grid,gamma_grid)\nparameters = {'C': C_grid, 'gamma' : gamma_grid}\ngridCV = GridSearchCV(SVC(kernel='linear'), parameters, n_jobs=-1)             \ngridCV.fit(X_train, Y_train)\nbest_C = gridCV.best_params_['C']\nbest_gamma = gridCV.best_params_['gamma']","41b2b3b5":"print(\"SVM best C : \" + str(best_C))\nprint(\"SVM best gamma : \" + str(best_gamma))","c3b220a8":"SVM_best = SVC(kernel='linear', C=best_C,gamma=best_gamma)\nSVM_best.fit(X_train, Y_train);\nY_pred = SVM_best.predict(X_test)","31b20648":"print(classification_report(Y_test, Y_pred))","a83f5205":"# Initialize the range of threshoulds from zero to 100 with step size 0.01\n#0.01*100=1\ncutoff_grid = np.linspace(0.0,1.0,100)\nTPR = []                                                   # True Positive Rate.\nFPR = []                                                   # False Positive Rate.\ncutoff_grid","a83174d5":"FPR, TPR, cutoffs = metrics.roc_curve(Y_test,Y_pred,pos_label=1)","ead0fe3a":"plt.plot(FPR,TPR,c='blue',linewidth=1.0)\nplt.xlabel('False Positive')\nplt.ylabel('True Positive')\nplt.title('ROC Curve')\nplt.show()","0872bdad":"# Cleaning Data","70b4fd7c":"### Pulsars. Neutron stars are detected from their electromagnetic radiation. Neutron stars are usually observed to pulse radio waves and other electromagnetic radiation, and neutron stars observed with pulses are called pulsars.","7719857b":"# Classification using SVM","3bc2c851":"# SVM hyperparameter optimization","2930256b":"# \u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640","0c233a86":"### seems like it's gone well","49254f4b":"## 2-Standardization","e21900b1":"# \u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640","c92b5f76":"# Exploring Data","1691c9f7":"## 1- Dealing with NaNs","4b48c6b8":"# \u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640","eb747db4":"## Use (Correlation = 0.4) as a threshold","a64a2c6a":"# Data preprocessing","cabf1530":"## Does SVM require normal distribution?\n### SVM doesn't assume normality. But it's still a regression that minimizes some symmetric loss function .","95443b9b":"## According to ratio between (0,1) \n### 1 is more important to be detected where it rarely happens\n### with default parameters linear kernel is better than RBF in this dataset","ebe91644":"# Feature selection","8368e2aa":"## Using Linear kernel","431f24cf":"![Typical-pulsar-detection-chain-The-pulsar-beams-sweep-across-the-radio-antenna-Radio.png](attachment:Typical-pulsar-detection-chain-The-pulsar-beams-sweep-across-the-radio-antenna-Radio.png)","50f40123":"## Downsampling","2e7179a5":"# importing required liberaries and read data","6cc43d3d":"## RBF kernel","9db85912":"## Linear kernel","4ee9dc52":"## 1-Rescaling","cc9b4cf9":"# Code","a5b5db96":"# *Pulsar Star*","53eb2d63":"### use a (sample size = 1000) from each target class [0,1]","0d29669f":"### ** Dropping rows that have 3 nulls","fdb633f0":"### Using KNNImputer to handel the missing values","1ca3f564":"### Pulsars are rotating neutron stars observed to have pulses of radiation at very regular intervals that typically range from milliseconds to seconds. Pulsars have very strong magnetic fields which funnel jets of particles out along the two magnetic poles. These accelerated particles produce very powerful beams of light.","a1b911b8":"## Using RBF kernel","b442988c":"## 2-Outliers","f082cd6d":"# \u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640","d77a0561":"# \u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640\u0640"}}