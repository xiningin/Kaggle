{"cell_type":{"4506703c":"code","0c92ad76":"code","abee5287":"code","bc9602a9":"code","57ce7f54":"code","5ed85f09":"code","96139d03":"code","adf30364":"code","3f663a8f":"code","4ff4da6b":"code","7aca55dd":"code","d9c21ac5":"code","054bf743":"code","f990ea8b":"code","efb9fcca":"code","2858bf54":"code","ff89f236":"code","e38e0231":"code","70dcf8b7":"code","02d2be20":"code","34a4b32d":"code","27abda8f":"code","47d68766":"code","36c3ed9b":"code","12989005":"code","b8a85f7b":"code","dd034455":"code","5d3fe493":"code","52ff2b7d":"code","035a3779":"code","c86c3c7e":"code","d19b4ec4":"code","610a83f9":"code","6ba544c6":"code","55c0005a":"code","0f70e4ca":"code","a78e6573":"code","2e589608":"code","5dd356cf":"code","a19d566d":"code","00236b42":"code","17952238":"code","377299e8":"code","9cb8c71e":"code","5821c1e8":"code","cb8bb089":"code","6dc46f7f":"code","48ca376b":"code","33ddf53a":"code","70c97d5d":"code","78240de6":"code","00a11a41":"code","d2ccd2cf":"code","9ce9eea3":"code","0e0e7a99":"code","c907c65e":"code","b941f4cc":"code","49606c52":"code","09bfb823":"code","82f003a8":"code","071bf506":"code","9bc764ed":"code","34f52cc5":"code","6a6ac3f0":"code","19833dd7":"code","c22ea274":"code","7ab7a7f2":"code","aed8c8cb":"code","b78210a2":"code","06fe634e":"code","89c7304c":"code","b4123af4":"code","59098494":"code","b25978d7":"code","30d7bff6":"code","263b1a57":"code","e93b9732":"code","8e40616b":"code","1cbf5004":"code","33811bff":"code","d00018ae":"code","5e36c883":"code","59ef9392":"code","197d1601":"code","7a1e483e":"code","08814a1a":"code","045689a6":"code","50b7e6b7":"code","f380c39c":"code","5c66f69f":"code","7c5e6c2d":"code","037e9de5":"code","dd2a7347":"code","d0fe42fc":"code","81881c14":"code","d2580bac":"markdown","f9b415cb":"markdown","0cf98134":"markdown","77152352":"markdown","51b667ce":"markdown","74fdb9ef":"markdown","6b9a6eaa":"markdown"},"source":{"4506703c":"from datetime import datetime, timedelta\nimport pandas as pd\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n\nimport chart_studio.plotly as py\nimport plotly.offline as pyoff\nimport plotly.graph_objs as go","0c92ad76":"pyoff.init_notebook_mode()","abee5287":"\ntx_data = pd.read_csv(\"..\/input\/online-retail-ii-uci\/online_retail_II.csv\")","bc9602a9":"tx_data = tx_data.rename(columns={\"Customer ID\": \"CustomerID\"})","57ce7f54":"##tx_data.head(10)","5ed85f09":"##tx_data.info()","96139d03":"##tx_data.shape","adf30364":"tx_data['InvoiceDate'] = pd.to_datetime(tx_data['InvoiceDate'])","3f663a8f":"##tx_data['InvoiceDate'].describe()","4ff4da6b":"tx_data['InvoiceYearMonth'] = tx_data['InvoiceDate'].map(lambda date: 100*date.year + date.month)","7aca55dd":"##tx_data.head(10)","d9c21ac5":"tx_data['Revenue'] = tx_data['Price'] * tx_data['Quantity']","054bf743":"##tx_data.groupby('InvoiceYearMonth')['Revenue'].sum()","f990ea8b":"tx_revenue = tx_data.groupby(['InvoiceYearMonth'])['Revenue'].sum().reset_index()","efb9fcca":"##tx_revenue","2858bf54":"plot_data = [\n    go.Scatter(\n        x=tx_revenue['InvoiceYearMonth'],\n        y=tx_revenue['Revenue'],\n    )\n]\n\nplot_layout = go.Layout(\n        xaxis={\"type\": \"category\"},\n        title='Montly Revenue'\n    )","ff89f236":"fig = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig)","e38e0231":"tx_revenue['MonthlyGrowth'] = tx_revenue['Revenue'].pct_change()","70dcf8b7":"##tx_revenue.head()","02d2be20":"plot_data = [\n    go.Scatter(\n        x=tx_revenue.query(\"InvoiceYearMonth < 201112\")['InvoiceYearMonth'],\n        y=tx_revenue.query(\"InvoiceYearMonth < 201112\")['MonthlyGrowth'],\n    )\n]\n\nplot_layout = go.Layout(\n        xaxis={\"type\": \"category\"},\n        title='Montly Growth Rate'\n    )\n\nfig = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig)","34a4b32d":"##tx_data.groupby('Country')['Revenue'].sum().sort_values(ascending=False).astype(int)","27abda8f":"tx_uk = tx_data.query(\"Country=='United Kingdom'\").reset_index(drop=True)","47d68766":"##tx_uk.head()","36c3ed9b":"tx_monthly_active = tx_uk.groupby('InvoiceYearMonth')['CustomerID'].nunique().reset_index()","12989005":"##tx_monthly_active","b8a85f7b":"plot_data = [\n    go.Bar(\n        x=tx_monthly_active['InvoiceYearMonth'],\n        y=tx_monthly_active['CustomerID'],\n    )\n]\n\nplot_layout = go.Layout(\n        xaxis={\"type\": \"category\"},\n        title='Monthly Active Customers'\n    )","dd034455":"fig = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig)","5d3fe493":"##tx_monthly_active['CustomerID'].mean()","52ff2b7d":"tx_monthly_sales = tx_uk.groupby('InvoiceYearMonth')['Quantity'].sum().reset_index()","035a3779":"##tx_monthly_sales","c86c3c7e":"plot_data = [\n    go.Bar(\n        x=tx_monthly_sales['InvoiceYearMonth'],\n        y=tx_monthly_sales['Quantity'],\n    )\n]\n\nplot_layout = go.Layout(\n        xaxis={\"type\": \"category\"},\n        title='Monthly Total # of Order'\n    )","d19b4ec4":"fig = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig)","610a83f9":"##tx_monthly_sales['Quantity'].mean()","6ba544c6":"tx_monthly_order_avg = tx_uk.groupby('InvoiceYearMonth')['Revenue'].mean().reset_index()","55c0005a":"##tx_monthly_order_avg","0f70e4ca":"plot_data = [\n    go.Bar(\n        x=tx_monthly_order_avg['InvoiceYearMonth'],\n        y=tx_monthly_order_avg['Revenue'],\n    )\n]\n\nplot_layout = go.Layout(\n        xaxis={\"type\": \"category\"},\n        title='Monthly Order Average'\n    )\nfig = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig)","a78e6573":"##tx_monthly_order_avg.Revenue.mean()","2e589608":"##tx_uk.info()","5dd356cf":"tx_min_purchase = tx_uk.groupby('CustomerID').InvoiceDate.min().reset_index()","a19d566d":"tx_min_purchase.columns = ['CustomerID','MinPurchaseDate']","00236b42":"tx_min_purchase['MinPurchaseYearMonth'] = tx_min_purchase['MinPurchaseDate'].map(lambda date: 100*date.year + date.month)\n\n","17952238":"##tx_min_purchase","377299e8":"tx_uk = pd.merge(tx_uk, tx_min_purchase, on='CustomerID')","9cb8c71e":"##tx_uk.head()","5821c1e8":"tx_uk['UserType'] = 'New'\ntx_uk.loc[tx_uk['InvoiceYearMonth']>tx_uk['MinPurchaseYearMonth'],'UserType'] = 'Existing'","cb8bb089":"tx_uk.UserType.value_counts()","6dc46f7f":"##tx_uk.head()","48ca376b":"tx_user_type_revenue = tx_uk.groupby(['InvoiceYearMonth','UserType'])['Revenue'].sum().reset_index()","33ddf53a":"##tx_user_type_revenue.query(\"InvoiceYearMonth != 201012 and InvoiceYearMonth != 201112\")","70c97d5d":"tx_user_type_revenue = tx_user_type_revenue.query(\"InvoiceYearMonth != 201012 and InvoiceYearMonth != 201112\")","78240de6":"plot_data = [\n    go.Scatter(\n        x=tx_user_type_revenue.query(\"UserType == 'Existing'\")['InvoiceYearMonth'],\n        y=tx_user_type_revenue.query(\"UserType == 'Existing'\")['Revenue'],\n        name = 'Existing'\n    ),\n    go.Scatter(\n        x=tx_user_type_revenue.query(\"UserType == 'New'\")['InvoiceYearMonth'],\n        y=tx_user_type_revenue.query(\"UserType == 'New'\")['Revenue'],\n        name = 'New'\n    )\n]\n\nplot_layout = go.Layout(\n        xaxis={\"type\": \"category\"},\n        title='New vs Existing'\n    )\nfig = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig)","00a11a41":"tx_user_ratio = tx_uk.query(\"UserType == 'New'\").groupby(['InvoiceYearMonth'])['CustomerID'].nunique()\/tx_uk.query(\"UserType == 'Existing'\").groupby(['InvoiceYearMonth'])['CustomerID'].nunique() \ntx_user_ratio = tx_user_ratio.reset_index()\ntx_user_ratio = tx_user_ratio.dropna()\n","d2ccd2cf":"##tx_uk.query(\"UserType == 'New'\").groupby(['InvoiceYearMonth'])['CustomerID'].nunique()","9ce9eea3":"##tx_uk.query(\"UserType == 'Existing'\").groupby(['InvoiceYearMonth'])['CustomerID'].nunique()","0e0e7a99":"plot_data = [\n    go.Bar(\n        x=tx_user_ratio.query(\"InvoiceYearMonth>201101 and InvoiceYearMonth<201112\")['InvoiceYearMonth'],\n        y=tx_user_ratio.query(\"InvoiceYearMonth>201101 and InvoiceYearMonth<201112\")['CustomerID'],\n    )\n]\n\nplot_layout = go.Layout(\n        xaxis={\"type\": \"category\"},\n        title='New Customer Ratio'\n    )\nfig = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig)","c907c65e":"##tx_min_purchase.head()","b941f4cc":"unq_month_year =  tx_min_purchase.MinPurchaseYearMonth.unique()","49606c52":"##unq_month_year","09bfb823":"def generate_signup_date(year_month):\n    signup_date = [el for el in unq_month_year if year_month >= el]\n    return np.random.choice(signup_date)","82f003a8":"tx_min_purchase['SignupYearMonth'] = tx_min_purchase.apply(lambda row: generate_signup_date(row['MinPurchaseYearMonth']),axis=1)\n\n\n","071bf506":"tx_min_purchase['InstallYearMonth'] = tx_min_purchase.apply(lambda row: generate_signup_date(row['SignupYearMonth']),axis=1)\n","9bc764ed":"##tx_min_purchase.head()","34f52cc5":"channels = ['organic','inorganic','referral']","6a6ac3f0":"tx_min_purchase['AcqChannel'] = tx_min_purchase.apply(lambda x: np.random.choice(channels),axis=1)\n","19833dd7":"tx_activation = tx_min_purchase[tx_min_purchase['MinPurchaseYearMonth'] == tx_min_purchase['SignupYearMonth']].groupby('SignupYearMonth').CustomerID.count()\/tx_min_purchase.groupby('SignupYearMonth').CustomerID.count()\ntx_activation = tx_activation.reset_index()\n","c22ea274":"plot_data = [\n    go.Bar(\n        x=tx_activation.query(\"SignupYearMonth>201101 and SignupYearMonth<201109\")['SignupYearMonth'],\n        y=tx_activation.query(\"SignupYearMonth>201101 and SignupYearMonth<201109\")['CustomerID'],\n    )\n]\n\nplot_layout = go.Layout(\n        xaxis={\"type\": \"category\"},\n        title='Monthly Activation Rate'\n    )\nfig = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig)","7ab7a7f2":"tx_activation_ch = tx_min_purchase[tx_min_purchase['MinPurchaseYearMonth'] == tx_min_purchase['SignupYearMonth']].groupby(['SignupYearMonth','AcqChannel']).CustomerID.count()\/tx_min_purchase.groupby(['SignupYearMonth','AcqChannel']).CustomerID.count()\ntx_activation_ch = tx_activation_ch.reset_index()\n","aed8c8cb":"plot_data = [\n    go.Scatter(\n        x=tx_activation_ch.query(\"SignupYearMonth>201001 and SignupYearMonth<201012 and AcqChannel == 'organic'\")['SignupYearMonth'],\n        y=tx_activation_ch.query(\"SignupYearMonth>201001 and SignupYearMonth<201012 and AcqChannel == 'organic'\")['CustomerID'],\n        name=\"organic\"\n    ),\n    go.Scatter(\n        x=tx_activation_ch.query(\"SignupYearMonth>201001 and SignupYearMonth<201012 and AcqChannel == 'inorganic'\")['SignupYearMonth'],\n        y=tx_activation_ch.query(\"SignupYearMonth>201001 and SignupYearMonth<201012 and AcqChannel == 'inorganic'\")['CustomerID'],\n        name=\"inorganic\"\n    ),\n    go.Scatter(\n        x=tx_activation_ch.query(\"SignupYearMonth>201001 and SignupYearMonth<201012 and AcqChannel == 'referral'\")['SignupYearMonth'],\n        y=tx_activation_ch.query(\"SignupYearMonth>201001 and SignupYearMonth<201012 and AcqChannel == 'referral'\")['CustomerID'],\n        name=\"referral\"\n    )\n    \n]\n\nplot_layout = go.Layout(\n        xaxis={\"type\": \"category\"},\n        title='Monthly Activation Rate - Channel Based'\n    )\nfig = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig)","b78210a2":"##tx_uk.head()","06fe634e":"df_monthly_active = tx_uk.groupby('InvoiceYearMonth')['CustomerID'].nunique().reset_index()","89c7304c":"tx_user_purchase = tx_uk.groupby(['CustomerID','InvoiceYearMonth'])['Revenue'].sum().astype(int).reset_index()","b4123af4":"##tx_user_purchase","59098494":"##tx_user_purchase.Revenue.sum()","b25978d7":"tx_retention = pd.crosstab(tx_user_purchase['CustomerID'], tx_user_purchase['InvoiceYearMonth']).reset_index()\n","30d7bff6":"##tx_retention.head()","263b1a57":"months = tx_retention.columns[2:]","e93b9732":"##months","8e40616b":"retention_array = []\nfor i in range(len(months)-1):\n    retention_data = {}\n    selected_month = months[i+1]\n    prev_month = months[i]\n    retention_data['InvoiceYearMonth'] = int(selected_month)\n    retention_data['TotalUserCount'] = tx_retention[selected_month].sum()\n    retention_data['RetainedUserCount'] = tx_retention[(tx_retention[selected_month]>0) & (tx_retention[prev_month]>0)][selected_month].sum()\n    retention_array.append(retention_data)\n    ","1cbf5004":"tx_retention = pd.DataFrame(retention_array)","33811bff":"tx_retention.head()","d00018ae":"tx_retention['RetentionRate'] = tx_retention['RetainedUserCount']\/tx_retention['TotalUserCount']","5e36c883":"##tx_retention","59ef9392":"plot_data = [\n    go.Scatter(\n        x=tx_retention.query(\"InvoiceYearMonth<201112\")['InvoiceYearMonth'],\n        y=tx_retention.query(\"InvoiceYearMonth<201112\")['RetentionRate'],\n        name=\"organic\"\n    )\n    \n]\n\nplot_layout = go.Layout(\n        xaxis={\"type\": \"category\"},\n        title='Monthly Retention Rate'\n    )\nfig = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig)","197d1601":"tx_retention['ChurnRate'] =  1- tx_retention['RetentionRate']","7a1e483e":"plot_data = [\n    go.Scatter(\n        x=tx_retention.query(\"InvoiceYearMonth<201112\")['InvoiceYearMonth'],\n        y=tx_retention.query(\"InvoiceYearMonth<201112\")['ChurnRate'],\n        name=\"organic\"\n    )\n    \n]\n\nplot_layout = go.Layout(\n        xaxis={\"type\": \"category\"},\n        title='Monthly Churn Rate'\n    )\nfig = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig)","08814a1a":"tx_retention = pd.crosstab(tx_user_purchase['CustomerID'], tx_user_purchase['InvoiceYearMonth']).reset_index()\n","045689a6":"##tx_retention.head()","50b7e6b7":"new_column_names = [ 'm_' + str(column) for column in tx_retention.columns]","f380c39c":"tx_retention.columns = new_column_names","5c66f69f":"##months","7c5e6c2d":"retention_array = []\nfor i in range(len(months)):\n    retention_data = {}\n    selected_month = months[i]\n    prev_months = months[:i]\n    next_months = months[i+1:]\n    for prev_month in prev_months:\n        retention_data[prev_month] = np.nan\n        \n    total_user_count =  retention_data['TotalUserCount'] = tx_retention['m_' + str(selected_month)].sum()\n    retention_data[selected_month] = 1 \n    \n    query = \"{} > 0\".format('m_' + str(selected_month))\n    \n\n    for next_month in next_months:\n        query = query + \" and {} > 0\".format(str('m_' + str(next_month)))\n        retention_data[next_month] = np.round(tx_retention.query(query)['m_' + str(next_month)].sum()\/total_user_count,2)\n    retention_array.append(retention_data)\n    \n    ","037e9de5":"tx_retention = pd.DataFrame(retention_array)","dd2a7347":"len(months)","d0fe42fc":"tx_retention.index = months","81881c14":"tx_retention","d2580bac":"#### As you see the revenue is growing during the year and declining in November, keep in mind that our data in not completed ","f9b415cb":"# New & Existing Users","0cf98134":"# Create Signup Data","77152352":"# Cohort Base Retention","51b667ce":"# Monthly Retention Rate","74fdb9ef":"# Churn Rate","6b9a6eaa":"# Activation Rate"}}