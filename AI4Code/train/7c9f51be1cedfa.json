{"cell_type":{"b26b226b":"code","cb3c048b":"code","a9dbf183":"code","bbb5cbbb":"code","3cd040a2":"code","b6fe45c2":"code","68a0b7dd":"code","2aacfbea":"code","dc6bedbf":"code","ae3252f0":"code","4021e0e8":"code","e7c9e09a":"code","0dd85df5":"code","6848fe55":"code","a67d4204":"code","a76997a3":"code","44ba6415":"code","9c668d73":"code","2a1da1a1":"code","d66b6a4e":"code","ba36726f":"code","8dec7a9b":"code","a0fccabe":"markdown","95550e8f":"markdown","9f72283b":"markdown","1ed90349":"markdown","8bfc756d":"markdown","e1b02a40":"markdown","ffff936e":"markdown","a31bb463":"markdown","b3285420":"markdown","25e7f11d":"markdown","35660d87":"markdown"},"source":{"b26b226b":"import os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as p\nimport PIL as pil\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.utils import to_categorical,normalize\nfrom sklearn.model_selection import train_test_split\nimport cv2\nfrom tqdm import tqdm\nfrom keras import regularizers\nimport seaborn as sns\n%matplotlib inline\nimport seaborn as sns\nfrom tensorflow.keras.layers import Flatten,Dense,Dropout,BatchNormalization,Conv2D,MaxPooling2D\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.metrics import Recall\nfrom tensorflow.keras.optimizers import RMSprop\nfrom tensorflow.keras.callbacks import EarlyStopping,ReduceLROnPlateau\nfrom sklearn.metrics import classification_report,confusion_matrix\n\n","cb3c048b":"base='\/kaggle\/input\/skin-cancer-mnist-ham10000'","a9dbf183":"metadata=pd.read_csv(os.path.join(base,'HAM10000_metadata.csv'))\nmetadata.info()","bbb5cbbb":"#To analyse basics of Dataset we study first 5 rows of HAAM10000 Dataset\nmetadata.head()","3cd040a2":"#Checking for NA\nmetadata.isna().isna().sum()","b6fe45c2":"metadata.describe(include='all')","68a0b7dd":"\n# We need to predict the cancer type, let's check the distribution of the values\ng = sns.catplot(x=\"dx\", kind=\"count\", palette='bright', data=metadata)\ng.fig.set_size_inches(16, 5)\n\ng.ax.set_title('Visualization of Output Classes', fontsize=20)\ng.set_xlabels('Classes of Skin Cancer', fontsize=14)\ng.set_ylabels('Frequency', fontsize=14)","2aacfbea":"#Skin Cancer is confirmed via Hispathology, let's check the breakdown for each type\ng = sns.catplot(x=\"dx\", kind=\"count\", hue=\"dx_type\", palette='bright', data=metadata)\ng.fig.set_size_inches(16, 5)\n\ng.ax.set_title('Skin Cancer by Histopathology', fontsize=20)\ng.set_xlabels('Skin Cancer Class', fontsize=14)\ng.set_ylabels('Frequency of Occurance', fontsize=14)\ng._legend.set_title('Histopathology Type')","dc6bedbf":"# Skin Cancer occurence body localization\ng = sns.catplot(x=\"dx\", kind=\"count\", hue=\"localization\", palette='bright', data=metadata)\ng.fig.set_size_inches(16, 9)\n\ng.ax.set_title('Skin Cancer Localization', fontsize=20)\ng.set_xlabels('Skin Cancer Class', fontsize=14)\ng.set_ylabels('Frequency of Occurance', fontsize=14)\ng._legend.set_title('Localization')","ae3252f0":"# Skin Cancer occurence by Age\ng = sns.catplot(x=\"dx\", kind=\"count\", hue=\"age\", palette='bright', data=metadata)\ng.fig.set_size_inches(16, 9)\n\ng.ax.set_title('Skin Cancer by Age', fontsize=20)\ng.set_xlabels('Skin Cancer Class', fontsize=14)\ng.set_ylabels('Number of Data Points', fontsize=14)\ng._legend.set_title('Age')","4021e0e8":"df=pd.read_csv(os.path.join(base,'hmnist_28_28_RGB.csv'))\nx=df.drop('label',axis=1)\ny=df['label']\nx=x.to_numpy()\nx=x\/255\ny=to_categorical(y)","e7c9e09a":"#Since there are 7 classes only, we can label them manually \nlabel={\n    ' Actinic keratoses':0,\n    'Basal cell carcinoma':1,\n    'Benign keratosis-like lesions':2,\n    'Dermatofibroma':3,\n    'Melanocytic nevi':4,\n    'Melanoma':6,\n    'Vascular lesions':5\n}","0dd85df5":"x=x.reshape(-1,28,28,3)\np.figure(figsize=(50,30))\nfor i in range(30):\n    p.subplot(10,3,i+1)\n    img=x[i]\n    p.imshow(img)","6848fe55":"trainx,trainy,testx,testy = train_test_split(x,y,test_size=0.02,random_state=42)","a67d4204":"data_generator=ImageDataGenerator(rotation_range=20, # rotate the image 20 degrees\n                               width_shift_range=0.10, # Shift the pic width by a max of 5%\n                               height_shift_range=0.10, # Shift the pic height by a max of 5%\n                               rescale=1\/255, # Rescale the image by normalzing it.\n                               shear_range=0.1, # Shear means cutting away part of the image (max 10%)\n                               zoom_range=0.1, # Zoom in by 10% max\n                               horizontal_flip=True,\n                               vertical_flip=True,\n                               fill_mode='nearest')","a76997a3":"data_generator.fit(trainx)","44ba6415":"input_shape=(28,28,3)\n\nmodel=Sequential()\n\n\nmodel.add(Conv2D(64,(2,2),input_shape=(28,28,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(BatchNormalization())\n\n\nmodel.add(Conv2D(512,(2,2),input_shape=(28,28,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n\n\n\nmodel.add(Dropout(0.3))\n\nmodel.add(Conv2D(1024,(2,2),input_shape=(28,28,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(BatchNormalization())\n\n\nmodel.add(Dropout(0.4))\n\nmodel.add(Conv2D(1024,(1,1),input_shape=(28,28,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(1, 1)))\n\n\n\nmodel.add(Dropout(0.4))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(256,activation='relu',kernel_regularizer=regularizers.l2(0.01)))\nmodel.add(Dropout(0.5))\n\n\nmodel.add(Dense(7,activation='softmax'))\n\nmodel.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy',Recall()])","9c668d73":"#Reviewing our CNN model\nmodel.summary()","2a1da1a1":"early=EarlyStopping(monitor='accuracy',patience=4,mode='auto')\nreduce_lr = ReduceLROnPlateau(monitor='accuracy', factor=0.5, patience=2, verbose=1,cooldown=0, mode='auto',min_delta=0.0001, min_lr=0)\n","d66b6a4e":"#Training our CNN\nmodel.fit(trainx,testx,epochs=50,batch_size=90,validation_data=(trainy, testy),callbacks=[early,reduce_lr])","ba36726f":"#Visualizing Training and Validation Accuracy\np.figure(figsize=(15,5))\nloss=pd.DataFrame(model.history.history)\nloss=loss[['accuracy','val_accuracy']]\nloss.plot()","8dec7a9b":"#Building a report \npredictions=model.predict_classes(trainy)\n\ncheck=[]\nfor i in range(len(testy)):\n  for j in range(7):\n    if(testy[i][j]==1):\n      check.append(j)\ncheck=np.asarray(check)\n\nprint(classification_report(check,predictions))","a0fccabe":"# Image Augmentation to expand Train data ","95550e8f":"# **Accessing Dataset**","9f72283b":"# **Images**","1ed90349":"Skin cancer seems to have more occurence in the back and lower extrimity of people, may indicate over-exposure to the sun in water activities\nThis is another great insight we get by Data Analysis","8bfc756d":"# **Data Visualization**","e1b02a40":"Another big insight we get here is regarding age group having Skin Cancers\n\nWe get to know that 'nv' is predominant in people of age around 45 years old","ffff936e":"# Spliting of Dataset ","a31bb463":"# Getting trainable from CSV file","b3285420":"There is a class imbalance here with 'nv' comprising more than 65% of the overall data, this will have an impact later during the classification but we need to overcome this\n","25e7f11d":"It seems that all of 'nv' are confirmed through follow-up, this behavior is not seen for other cancer class\n","35660d87":"# CNN Model"}}