{"cell_type":{"2ead0d4f":"code","afae5aca":"code","c6544b48":"code","b3dfd175":"code","56bf644e":"code","d6540819":"code","4dfcc358":"code","9fb98c72":"code","b027a968":"markdown","e086e100":"markdown","68c005b4":"markdown","a15e6b83":"markdown","3606cc4a":"markdown","ffcfe506":"markdown","7ec2a48e":"markdown","a73577b7":"markdown","6290170a":"markdown","cc3148e1":"markdown"},"source":{"2ead0d4f":"import numpy as np\nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","afae5aca":"train = pd.read_csv('\/kaggle\/input\/adirw2021\/train.csv')\n\ndisplay(train)","c6544b48":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nf,ax = plt.subplots(figsize=(10, 8))\nsns.heatmap(train.corr(), annot=True, linewidths=0.5, fmt='.2f',ax=ax)","b3dfd175":"print(train['TotalCharges'].dtypes)\n\nprint(pd.to_numeric(train['TotalCharges'], downcast=\"float\", errors='coerce').isnull().sum())","56bf644e":"numeric_columns = ['SeniorCitizen', 'tenure', 'MonthlyCharges']\nnumeric_data = train[numeric_columns]\n\nlabels = train['Churn']","d6540819":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(numeric_data, labels, test_size=0.33, random_state=42)","4dfcc358":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score\n\nrfc = RandomForestClassifier(n_estimators=200, max_depth=8, min_samples_split=2, min_samples_leaf=1, \n                             min_weight_fraction_leaf=0.0, random_state=20)\nrfc.fit(X_train, y_train)\nX_train_preds_rfc = rfc.predict(X_train)\nX_test_preds_rfc = rfc.predict(X_test)\n\nprint(roc_auc_score(y_train, X_train_preds_rfc))\nprint(roc_auc_score(y_test, X_test_preds_rfc))","9fb98c72":"test = pd.read_csv('\/kaggle\/input\/adirw2021\/test.csv')\nsample_submission = pd.read_csv('\/kaggle\/input\/adirw2021\/sample.csv')\n\nsample_submission[\"Churn\"] = rfc.predict(test[numeric_columns])\n\nsample_submission.to_csv('benchmark.csv', index=False)","b027a968":"#### Use trained model to predic samples from `test.csv` and save the results in new file","e086e100":"#### Import and dsiplay train data","68c005b4":"#### Get numeric data and labels","a15e6b83":"## Report\n\n### Data preprocessing\nI left only numerical columns so I'm able to feed the data to the learning algorithms.\n\n### Data investigation\nI found that MonthlyCharges is correlated with Churn, as expected.\n\n### Features engineering\nI didn't do any FE because I didn't have time.\n\n### Validation\nI split training data into 2 sets: train (67%) and eval (33%). It's ok because 33% is a lot of data to test on.\n\n### Modeling\nI used one model - RandomForest. I used the hyperparameters from classes. If we were using it during classes it is probably good.\n\n### Other\nI think my code is fine because each cell is doing one thing.\n\n### What I like\nMy model is fitting preaty fast, I don't have to wait long for the results.\n\n### What unique I think I've done\nI prepared the first benchmark and Kaggle competition.","3606cc4a":"#### Check input files","ffcfe506":"#### Make, train and test model","7ec2a48e":"## Code","a73577b7":"#### Plot simple correlation matrix on numerical data","6290170a":"#### Split data into train\/test sets","cc3148e1":"#### `TotalCharges` didn't show up, it means there might be some trash in this column (other than NaN, like empty strings)"}}