{"cell_type":{"a7d05494":"code","a3c5f472":"code","8ca2b445":"code","f27b5b08":"code","3a04a61c":"code","d3c9a18f":"code","71cd4e18":"code","a94c4c28":"code","7afe2706":"code","cd280b49":"code","209ae78c":"code","3bc24f5f":"code","bafddef5":"code","fad47969":"code","3fe66ad1":"code","3aa0fce3":"code","dff7086c":"code","51e2e7db":"code","68b31e33":"code","9af40341":"code","d9246171":"code","18ff50ff":"code","e88b0db6":"code","c1e7596e":"code","8fadbfb8":"code","dabecfae":"code","ef575ffd":"code","c8214333":"code","05b29882":"code","d9fc0408":"code","2896f487":"code","dab9f616":"code","1b64c9d6":"code","d4e58475":"code","f9ef14fc":"code","4b2d26a5":"code","2fcb8eff":"code","91ce4d7f":"code","2d8bfd0f":"code","8bd16740":"code","c66ec0b8":"code","627e3373":"code","3df1e284":"code","5592cb51":"code","80cb02a4":"code","4d74ff93":"code","8c80b167":"code","c9c9f1d7":"code","e873626f":"code","4658bce8":"code","9124f2f2":"code","ae8328fc":"code","613b6152":"code","56551dd2":"code","3585efd2":"code","77114c69":"code","25e7514a":"code","af09eb86":"code","92b4ed81":"code","d06b405f":"code","f291c5d6":"code","c74fdeb7":"code","d243e056":"code","8a177933":"code","4bf7c9d1":"code","6cf72121":"code","9578cd3f":"code","599a0abc":"code","68486dab":"code","4337a4c8":"code","3dbeebf7":"code","4b57ec03":"code","2196de1e":"code","d744de90":"code","5ef91b13":"code","61063910":"code","087caf30":"code","5f765d83":"code","e46ba982":"markdown","7be05f9e":"markdown","8c596eca":"markdown","19e0bdf5":"markdown","6f1d8f69":"markdown","a52d8ab1":"markdown","4d266bc5":"markdown","8e39cd30":"markdown","c58e4c7f":"markdown","e00da621":"markdown","84c49039":"markdown","9c86d599":"markdown","53a114d9":"markdown","4eb14fc3":"markdown","87d24150":"markdown","e24c0211":"markdown","af361aa7":"markdown","8b98667a":"markdown","738e9c56":"markdown","a215e8a1":"markdown","c8ff26c0":"markdown"},"source":{"a7d05494":"pip install pmdarima","a3c5f472":"from mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt\nimport numpy as np \nimport os \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nimport statsmodels.formula.api as smf\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nimport statsmodels.formula.api as smf\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom pmdarima.arima import auto_arima\nimport pmdarima as pm\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\nimport math\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor","8ca2b445":"golds=pd.read_csv('..\/input\/gold-forecasting\/GoldUP.csv')\n","f27b5b08":"golds","3a04a61c":"series = pd.DataFrame(data=golds['Gold_Price'], columns = ['Gold_Price'] ).dropna()\nseries.plot(figsize=(16,8));\nplt.ylabel('Time Series')\nplt.xlabel('Series')\ngolds.shape\n","d3c9a18f":"golds.shape","71cd4e18":"golds.info()","a94c4c28":"golds.describe()","7afe2706":"sns.distplot(golds['Gold_Price'], color = 'blue')\nprint('Skewness: %f', golds['Gold_Price'].skew())\nprint(\"Kurtosis: %f\" % golds['Gold_Price'].kurt())","cd280b49":"result = seasonal_decompose(series.values, model = 'additive', period = 30)\nresult.plot();\nplt.show()","209ae78c":"result2 = seasonal_decompose(series.values, model = 'multiplicative', period = 30)\nresult2.plot();\nplt.show()","3bc24f5f":"pd.plotting.autocorrelation_plot(series)","bafddef5":"features=[\"Crude_Oil\",\"Interest_Rate\",\"USD_INR\",\"Sensex\",\"CPI\",\"USD_Index\"]\nx = golds[features]\ny = golds.Gold_Price","fad47969":"x.head()","3fe66ad1":"y.head()","3aa0fce3":"fig,ax = plt.subplots()\nax.plot(golds.Date, golds.Gold_Price, color=\"red\")\nax.set_xlabel(\"Date\",fontsize=14)\nax.set_ylabel(\"Gold Price\",color=\"red\",fontsize=14)\nax2=ax.twinx()\nax2.plot(golds.Date, golds.Crude_Oil,color=\"blue\")\nax2.set_ylabel(\"Crude_Oil\",color=\"blue\",fontsize=14)","dff7086c":"fig,ax = plt.subplots()\nax.plot(golds.Date, golds.Gold_Price, color=\"red\")\nax.set_xlabel(\"Date\",fontsize=14)\nax.set_ylabel(\"Gold Price\",color=\"red\",fontsize=14)\nax2=ax.twinx()\nax2.plot(golds.Date, golds.Interest_Rate,color=\"blue\")\nax2.set_ylabel(\"Interest Rates\",color=\"blue\",fontsize=14)","51e2e7db":"fig,ax = plt.subplots()\nax.plot(golds.Date, golds.Gold_Price, color=\"red\")\nax.set_xlabel(\"Date\",fontsize=14)\nax.set_ylabel(\"Gold Price\",color=\"red\",fontsize=14)\nax2=ax.twinx()\nax2.plot(golds.Date, golds.USD_INR,color=\"blue\")\nax2.set_ylabel(\"Dollar to Rupee\",color=\"blue\",fontsize=14)","68b31e33":"plt.plot(golds.Gold_Price);\nplt.plot(golds.Sensex,color=\"red\")\n\nplt.ylabel(\" Gold Price & Sensex\")\nplt.xlabel(\"Series\")","9af40341":"fig,ax = plt.subplots()\nax.plot(golds.Date, golds.Gold_Price, color=\"red\")\nax.set_xlabel(\"Date\",fontsize=14)\nax.set_ylabel(\"Gold Price\",color=\"red\",fontsize=14)\nax2=ax.twinx()\nax2.plot(golds.Date, golds.CPI,color=\"blue\")\nax2.set_ylabel(\"CPI\",color=\"blue\",fontsize=14)","d9246171":"fig,ax = plt.subplots()\nax.plot(golds.Date, golds.Gold_Price, color=\"red\")\nax.set_xlabel(\"Date\",fontsize=14)\nax.set_ylabel(\"Gold Price\",color=\"red\",fontsize=14)\nax2=ax.twinx()\nax2.plot(golds.Date, golds.USD_Index,color=\"blue\")\nax2.set_ylabel(\"Dollar Index\",color=\"blue\",fontsize=14)","18ff50ff":"fig, axis = plt.subplots(1,6)\ngolds.plot(kind= 'scatter', x= 'Crude_Oil' , y= 'Gold_Price', ax=axis[0], figsize=(18,8));\ngolds.plot(kind= 'scatter', x= 'Interest_Rate', y= 'Gold_Price', ax=axis[1]);\ngolds.plot(kind= 'scatter', x= 'USD_INR', y= 'Gold_Price', ax=axis[2]);\ngolds.plot(kind= 'scatter', x= 'Sensex', y= 'Gold_Price', ax=axis[3]);\ngolds.plot(kind= 'scatter', x= 'CPI', y= 'Gold_Price', ax=axis[4]);\ngolds.plot(kind= 'scatter', x= 'USD_Index', y= 'Gold_Price', ax=axis[5]);","e88b0db6":"gldlr = LinearRegression()\ngldlr = gldlr.fit(x,y)","c1e7596e":"print('y intercepts: ', gldlr.intercept_)\nprint('Cofficients: ', gldlr.coef_)","8fadbfb8":"y_pred = gldlr.predict(x)\nprint('Predicted vales of Gold Price \\n', y_pred) ","dabecfae":"goldprice=golds['Gold_Price']","ef575ffd":"plt.plot(y_pred);\nplt.plot(goldprice,color=\"red\")\n\nplt.ylabel(\"Gold Price Original & Predict\")\nplt.xlabel(\"Series\")\n\n","c8214333":"\nmse = mean_squared_error(y,y_pred)\nprint ('MSE:', mse)\n    ","05b29882":"r_sq=gldlr.score(x,y)\nprint(\"Coefficient of Determination:\",r_sq)","d9fc0408":"goldModel = smf.ols(formula = \"Gold_Price~Crude_Oil+Interest_Rate+USD_INR+Sensex+CPI+USD_Index\" ,data = golds).fit()\ngoldModel.summary()","2896f487":"goldModel1 = smf.ols(formula = \"Gold_Price~Crude_Oil+USD_INR+Sensex+CPI+USD_Index\" ,data = golds).fit()\ngoldModel1.summary()","dab9f616":"goldModel2 = smf.ols(formula = \"Gold_Price~Crude_Oil+Interest_Rate+Sensex+CPI+USD_Index\" ,data = golds).fit()\ngoldModel2.summary()","1b64c9d6":"goldModel3 = smf.ols(formula = \"Gold_Price~Crude_Oil+Interest_Rate+USD_INR+CPI+USD_Index\" ,data = golds).fit()","d4e58475":"goldModel4 = smf.ols(formula = \"Gold_Price~Crude_Oil+Interest_Rate+USD_INR+Sensex+USD_Index\" ,data = golds).fit()","f9ef14fc":"goldModel5 = smf.ols(formula = \"Gold_Price~Crude_Oil+Interest_Rate+USD_INR+Sensex+CPI\" ,data = golds).fit()\ngoldModel5.summary()","4b2d26a5":"goldModel6 = smf.ols(formula = \"Gold_Price~Interest_Rate+USD_INR+Sensex+CPI+USD_Index\" ,data = golds).fit()","2fcb8eff":"goldModel7 = smf.ols(formula = \"Gold_Price~USD_INR+Sensex+CPI+USD_Index\" ,data = golds).fit()","91ce4d7f":"goldModel8 = smf.ols(formula = \"Gold_Price~Interest_Rate+Sensex+CPI+USD_Index\" ,data = golds).fit()","2d8bfd0f":"goldModel9 = smf.ols(formula = \"Gold_Price~Interest_Rate+USD_INR+CPI+USD_Index\" ,data = golds).fit()","8bd16740":"goldModel10 = smf.ols(formula = \"Gold_Price~Interest_Rate+USD_INR+Sensex+USD_Index\" ,data = golds).fit()","c66ec0b8":"goldModel11 = smf.ols(formula = \"Gold_Price~Interest_Rate+USD_INR+Sensex+CPI\" ,data = golds).fit()","627e3373":"goldModel12 = smf.ols(formula = \"Gold_Price~Crude_Oil+Sensex+CPI+USD_Index\" ,data = golds).fit()","3df1e284":"goldModel13 = smf.ols(formula = \"Gold_Price~Crude_Oil+USD_INR+CPI+USD_Index\" ,data = golds).fit()","5592cb51":"goldModel14 = smf.ols(formula = \"Gold_Price~Crude_Oil+USD_INR+Sensex+USD_Index\" ,data = golds).fit()","80cb02a4":"goldModel15 = smf.ols(formula = \"Gold_Price~Crude_Oil+USD_INR+Sensex+CPI\" ,data = golds).fit()","4d74ff93":"goldModel16 = smf.ols(formula = \"Gold_Price~Crude_Oil+Interest_Rate+CPI+USD_Index\" ,data = golds).fit()","8c80b167":"goldModel17 = smf.ols(formula = \"Gold_Price~Crude_Oil+Interest_Rate+Sensex+USD_Index\" ,data = golds).fit()","c9c9f1d7":"goldModel18 = smf.ols(formula = \"Gold_Price~Crude_Oil+Interest_Rate+Sensex+CPI\" ,data = golds).fit()","e873626f":"goldModel19 = smf.ols(formula = \"Gold_Price~Crude_Oil+Interest_Rate+USD_INR+USD_Index\" ,data = golds).fit()","4658bce8":"goldModel20 = smf.ols(formula = \"Gold_Price~Crude_Oil+Interest_Rate+USD_INR+CPI\" ,data = golds).fit()","9124f2f2":"goldModel21 = smf.ols(formula = \"Gold_Price~Crude_Oil+Interest_Rate+USD_INR+Sensex\" ,data = golds).fit()","ae8328fc":"goldModel22 = smf.ols(formula = \"Gold_Price~Sensex+CPI+USD_Index\" ,data = golds).fit()","613b6152":"goldModel23 = smf.ols(formula = \"Gold_Price~USD_INR+CPI+USD_Index\" ,data = golds).fit()","56551dd2":"goldModel24 = smf.ols(formula = \"Gold_Price~USD_INR+Sensex+USD_Index\" ,data = golds).fit()","3585efd2":"goldModel25 = smf.ols(formula = \"Gold_Price~USD_INR+Sensex+CPI\" ,data = golds).fit()","77114c69":"goldModel5.summary()","25e7514a":"sns.residplot(y_pred, y,color = 'yellow');\nplt.title ('Residual Plot of Gold Price with Estimated Gold Price');","af09eb86":"sns.residplot(golds[features].Crude_Oil, y,color = 'red');\nplt.title('Residue plot of Crude Oil with Gold Price');","92b4ed81":"sns.residplot(golds[features].Interest_Rate, y,color = 'green');\nplt.title('Residue plot of Interest Rate with Gold Price');","d06b405f":"sns.residplot(golds[features].USD_INR, y,color = 'blue');\nplt.title('Residue plot of USD_INR with Gold Price');","f291c5d6":"sns.residplot(golds[features].Sensex, y,color = 'black');\nplt.title('Residue plot of Sensex with Gold Price');","c74fdeb7":"sns.residplot(golds[features].CPI, y,color = 'purple');\nplt.title('Residue plot of CPI with Gold Price');","d243e056":"sns.residplot(golds[features].USD_Index, y,color = 'brown');\nplt.title('Residue plot of USD_Index with Gold Price');","8a177933":"vif = pd.DataFrame()\nvif[\"VIF Factor\"] = [variance_inflation_factor(x.values, i) for i in range(x.shape[1])]\nvif[\"features\"] = x.columns","4bf7c9d1":"vif.round(1)","6cf72121":"test = golds['Gold_Price'][200:]\ntrain = golds['Gold_Price'][:200]","9578cd3f":"train_log = np.log(train) \ntest_log = np.log(test)\nmoving_avg = train_log.rolling(24).mean() \nplt.plot(train_log) \nplt.plot(moving_avg, color = 'red') \nplt.show()","599a0abc":"model_9 = ARIMA(golds['Gold_Price'], order=(1,2,2))\nmodel_9_fit = model_9.fit(disp=0)\nprint(model_9_fit.summary())","68486dab":"residuals = pd.DataFrame(model_9_fit.resid)\nfig, ax = plt.subplots(1,2)\nresiduals.plot(title=\"Residuals\", ax=ax[0])\nresiduals.plot(kind='kde', title='Density', ax=ax[1])\nplt.show()","4337a4c8":"model_best = ARIMA(train, order=(1,2,2))  \nfitted = model_best.fit(disp=-1)  ","3dbeebf7":"fc, se, conf = fitted.forecast(39, alpha=0.05) ","4b57ec03":"fc_series = pd.Series(fc, index=test.index)\nlower_series = pd.Series(conf[:, 0], index=test.index)\nupper_series = pd.Series(conf[:, 1], index=test.index)","2196de1e":"plt.figure(figsize=(12,5), dpi=100)\nplt.plot(train, label='training')\nplt.plot(test, label='actual')\nplt.plot(fc_series, label='forecast')\nplt.fill_between(lower_series.index, lower_series, upper_series, \n                 color='k', alpha=.15)\nplt.title('Forecast vs Actuals')\nplt.legend(loc='upper left', fontsize=8)\nplt.show()","d744de90":"def forecast_accuracy(forecast, actual):\n    mape = np.mean(np.abs(forecast - actual)\/np.abs(actual))  # MAPE\n    me = np.mean(forecast - actual)             # ME\n    mse = np.mean((forecast-actual)**2)\n    mae = np.mean(np.abs(forecast - actual))    # MAE\n    mpe = np.mean((forecast - actual)\/actual)   # MPE\n    rmse = np.mean((forecast - actual)**2)**.5  # RMSE\n    corr = np.corrcoef(forecast, actual)[0,1]# corr\n            \n    return({'mape':mape, 'me':me, 'mse':mse,'mae': mae, \n            'mpe': mpe, 'rmse':rmse, \n            'corr':corr})\n\nforecast_accuracy(fc, test.values)","5ef91b13":"model = pm.auto_arima(golds.Gold_Price, start_p=1, start_q=1,\n                      test='adf',       # use adftest to find optimal 'd'\n                      max_p=3, max_q=3, # maximum p and q\n                      m=1,              # frequency of series\n                      d=None,           # let model determine 'd'\n                      seasonal=False,   # No Seasonality\n                      start_P=0, \n                      D=0, \n                      trace=True,\n                      error_action='ignore',  \n                      suppress_warnings=True, \n                      stepwise=True)\n\nprint(model.summary())","61063910":"n_periods = 10\nfc, confint = model.predict(n_periods=n_periods, return_conf_int=True)\nindex_of_fc = np.arange(len(golds.Gold_Price), len(golds.Gold_Price)+n_periods)","087caf30":"fc_series = pd.Series(fc, index=index_of_fc)\nlower_series = pd.Series(confint[:, 0], index=index_of_fc)\nupper_series = pd.Series(confint[:, 1], index=index_of_fc)","5f765d83":"plt.figure(figsize=(12,5), dpi=100)\nplt.plot(golds.Gold_Price)\nplt.plot(fc_series, color='Green')\nplt.fill_between(lower_series.index, \n                 lower_series, \n                 upper_series, \n                 color='k', alpha=.15)\n\nplt.title(\"Forecast for 10 months ahead\")\nplt.show()","e46ba982":"***ARIMA Model***","7be05f9e":"***Gold_Price Analysis***","8c596eca":"***Summary of Statistical Model***","19e0bdf5":"***Future Forecasts***","6f1d8f69":"***Additive Decomposition***","a52d8ab1":"### R squared shows that 96.2% variation in y can be explained by these variables.","4d266bc5":"***Residual Plots***","8e39cd30":"1. Red- Original Gold Prices \n1. Blue Predicted Gold Prices","c58e4c7f":"***Gold Price V\/S Dependent Variables***","e00da621":"***Scatter Plots***","84c49039":"### MAPE=8.8%, it implies that the Model is 91.8% accurate.","9c86d599":"***Skewness & Kurtosis of Gold Price***","53a114d9":"***Prediction(goodness of fit) of the forcast variable***","4eb14fc3":"***Best Reggression Model***","87d24150":"***Designing a Multiple Regression Model***","e24c0211":"***Error & Coefficient of Determination***","af361aa7":"Conclusion:\n\n1. Gold Model iteration 5 (GoldModel5) having the varibles -Crude Oil, Interest Rate,Sensex, USD-INR, CPI, best describe the regression model to predict the Forecast,\n\n2. The Model gives 91.2% accurate forecast with ARIMA","8b98667a":"***Reading Data***","738e9c56":"***Defining Dependent & Independent Variables***","a215e8a1":"***Auto Correlation***","c8ff26c0":"***Importing Libraries***"}}