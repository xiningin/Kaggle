{"cell_type":{"39cd3207":"code","5df63bf0":"code","d7b66f78":"code","2b2d1617":"code","8055b36a":"code","03110f25":"code","cb4cc712":"code","5a1129d7":"code","1fad6110":"code","90cda755":"code","809feade":"code","3d25c40c":"code","0c757ca3":"code","61ac1ac0":"code","db587fe2":"code","bffdec93":"code","8a923c5e":"code","baa34671":"code","5f7335df":"code","54008862":"code","54cb3126":"code","dadeb48c":"markdown"},"source":{"39cd3207":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5df63bf0":"# ID in test set (corresponds to a shop_id and item_id, predicted number of items sold\nsample_submission = pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/test.csv\")\n# items: item_name, item_id, item_category_id\nitems = pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/items.csv\") \n# item_categories: item_category_name, item_category_id\nitem_categories = pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/item_categories.csv\")\n# sales_train: date, date_block_num, shop_id, item_id, item_price, item_cnt_day**\nsales_train = pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/sales_train.csv\")\n# shops: shop_name, shop_id\nshops = pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/shops.csv\")","d7b66f78":"print(items.info())\nprint('Items : \\n\\t'+'\\n\\t'.join(list(items)))\nprint('ItemCatagories : \\n\\t'+'\\n\\t'.join(list(item_categories.columns.values)))\nprint('Shops : \\n\\t'+'\\n\\t'.join(shops.columns.tolist()))\nprint('SalesTrain : \\n\\t'+'\\n\\t'.join(sales_train.columns.tolist()))\n\nprint('Test : \\n\\t'+'\\n\\t'.join(list(test)))\nprint('OutPut : \\n\\t'+'\\n\\t'.join(list(sample_submission)))\n\nsales_train.info()","2b2d1617":"print(\"Items\")\nprint(items.head(2))\nprint(\"\\nItem Catagerios\")\nprint(item_categories.tail(2))\nprint(\"\\nShops\")\nprint(shops.sample(n=2))\nprint(\"\\nTraining Data Set\")\nprint(sales_train.sample(n=3,random_state=1))\nprint(\"\\nTest Data Set\")\nprint(test.sample(n=3,random_state=1))","8055b36a":"from datetime import datetime\nsales_train['year'] = pd.to_datetime(sales_train['date']).dt.strftime('%Y')\nsales_train['month'] = sales_train.date.apply(lambda x: datetime.strptime(x,'%d.%m.%Y').strftime('%m')) \n\nsales_train.head(2)","03110f25":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\n#grafik \u00e7\u0131kt\u0131lar\u0131n\u0131z\u0131n g\u00f6r\u00fcnmesini ve not defterinde saklanmas\u0131n\u0131 sa\u011flayacakt\u0131r.\n%matplotlib inline \n\ngrouped = pd.DataFrame(sales_train.groupby(['year','month'])['item_cnt_day'].sum().reset_index())\nsns.pointplot(x='month', y='item_cnt_day', hue='year', data=grouped)","cb4cc712":"#Price\ngrouped_price = pd.DataFrame(sales_train.groupby(['year','month'])['item_price'].mean().reset_index())\nsns.pointplot(x='month', y='item_price', hue='year', data=grouped_price)","5a1129d7":"ts=sales_train.groupby([\"date_block_num\"])[\"item_cnt_day\"].sum()\nts.astype('float')\nplt.figure(figsize=(16,8))\nplt.title('Total Sales of the whole time period')\nplt.xlabel('Time')\nplt.ylabel('Sales')\nplt.plot(ts);","1fad6110":"sns.jointplot(x=\"item_cnt_day\", y=\"item_price\", data=sales_train, height=8)\nplt.show()","90cda755":"sales_train.item_cnt_day.hist(bins=100)\nsales_train.item_cnt_day.describe()","809feade":"print('item_price 0lar\u0131 temizlemeden \u00f6nce veri k\u00fcmesi boyutu:', sales_train.shape)\nsales_train = sales_train.query('item_price > 0')\nprint('item_price 0lar\u0131 temizledikten sonra veri k\u00fcmesi boyutu:', sales_train.shape)","3d25c40c":"print('Filtreden \u00f6nceki veri k\u00fcmesi boyutu:', sales_train.shape)\n# Yaln\u0131zca test setinde bulunan shops.\nsales_train = sales_train[sales_train['shop_id'].isin(test['shop_id'].unique())]\n# Yaln\u0131zca test setinde bulunan items.\nsales_train = sales_train[sales_train['item_id'].isin(test['item_id'].unique())]\nprint('Filtreden sonraki veri k\u00fcmesi boyutu:', sales_train.shape)","0c757ca3":"print('Ayk\u0131r\u0131 de\u011ferleri kald\u0131rmadan \u00f6nce veri k\u00fcmesi boyutu:', sales_train.shape)\nsales_train = sales_train.query('item_cnt_day >= 0 and item_cnt_day <= 125 and item_price < 75000')\nprint('Ayk\u0131r\u0131 de\u011ferleri kald\u0131rd\u0131ktan sonra veri k\u00fcmesi boyutu:', sales_train.shape)","61ac1ac0":"#Grafik temizlendikten sonra\nsns.jointplot(x=\"item_cnt_day\", y=\"item_price\", data=sales_train, height=8)\nplt.show()\n\ncleaned = pd.DataFrame(sales_train.groupby(['year','month'])['item_cnt_day'].sum().reset_index())\nsns.pointplot(x='month', y='item_cnt_day', hue='year', data=cleaned)","db587fe2":"# Ayl\u0131k sat\u0131\u015f seviyesi toplam\u0131\nmonthly_sales=sales_train.groupby([\"date_block_num\",\"shop_id\",\"item_id\"])[\n    \"date_block_num\",\"date\",\"item_price\",\"item_cnt_day\"].agg({\"date_block_num\":'mean',\"date\":[\"min\",'max'],\"item_price\":\"mean\",\"item_cnt_day\":\"sum\"})\n\nmonthly_sales.head(5)","bffdec93":"sales_data_flat = monthly_sales.item_cnt_day.apply(list).reset_index()\n#Yaln\u0131zca ge\u00e7erli test verilerini saklay\u0131n\nsales_data_flat = pd.merge(test,sales_data_flat,on = ['item_id','shop_id'],how = 'left')\n#fill na with 0\nsales_data_flat.fillna(0,inplace = True)\nsales_data_flat.drop(['shop_id','item_id'],inplace = True, axis = 1)\nsales_data_flat.head(20)","8a923c5e":"# Pivot tablo olu\u015fturaca\u011f\u0131z.\n# Sat\u0131r = her shop+item kodu\n# S\u00fctunlar zaman a\u015f\u0131m\u0131 dizisi olacak\npivoted_sales = sales_data_flat.pivot_table(index='ID', columns='date_block_num',fill_value = 0,aggfunc='sum' )\npivoted_sales.head(20)","baa34671":"X_train = np.expand_dims(pivoted_sales.values[:,:-1],axis = 2)\ny_train = pivoted_sales.values[:,-1:]\nX_test = np.expand_dims(pivoted_sales.values[:,1:],axis = 2)\nprint(X_train.shape,y_train.shape,X_test.shape)","5f7335df":"from keras.models import Sequential\nfrom keras.layers import LSTM,Dense,Dropout\nfrom keras.models import load_model, Model\n\n# tan\u0131mlay\u0131c\u0131 sat\u0131\u015f modelimiz\nsales_model = Sequential()\nsales_model.add(LSTM(units = 64,input_shape = (33,1)))\nsales_model.add(Dropout(0.5))\nsales_model.add(Dense(1))\n\nsales_model.compile(loss = 'mse',optimizer = 'adam', metrics = ['mean_squared_error'])\nsales_model.summary()","54008862":"sales_model.fit(X_train,y_train,batch_size = 4096,epochs = 10)","54cb3126":"submission_output = sales_model.predict(X_test)\n# gerekli s\u00fctunlarla veri \u00e7er\u00e7evesi olu\u015fturma\nsample_submission = pd.DataFrame({'ID':test['ID'],'item_cnt_month':submission_output.ravel()})\n# dataframe'den csv dosyas\u0131 olu\u015fturma\nsample_submission.to_csv('submission.csv',index = False)\nsample_submission.head()","dadeb48c":"B\u00f6l\u00fcnm\u00fc\u015f e\u011fitim, do\u011frulama ve test veri k\u00fcmesi\n"}}