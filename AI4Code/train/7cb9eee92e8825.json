{"cell_type":{"752e29c7":"code","ed6de1c0":"code","a0796304":"code","8d237bf0":"code","3ce28984":"code","488830cc":"code","7f647054":"code","1b1e834b":"code","f9ea61f8":"code","a4911fbc":"code","e93fe6e7":"code","bdcb8183":"code","ce982e52":"code","7afd2fdf":"code","cab1df42":"code","e6cd06f8":"code","941384ec":"code","aaf04f7e":"code","ca266b20":"code","c8d9c7c2":"code","0de5e6ca":"code","9778fd9c":"code","635e5bbe":"code","32d8a8fb":"code","2df61bb9":"code","acea2554":"code","b563b9be":"code","b9feeec6":"code","967679b8":"code","5758c5d8":"code","723b9a78":"markdown","71bd2c51":"markdown","e83ae29b":"markdown","2ae5c013":"markdown","b78300b6":"markdown","5090df6c":"markdown","8b4656d4":"markdown"},"source":{"752e29c7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ed6de1c0":"#Importing Libraries to expose data insights\n\n#data analysis and wrangling\nimport pandas as pd\nimport numpy as np\nimport random as rnd\nimport math\n\n# visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nimport plotly.offline as py","a0796304":"Injury_Rec = pd.read_csv('..\/input\/nfl-playing-surface-analytics\/InjuryRecord.csv')\nPlayList = pd.read_csv('..\/input\/nfl-playing-surface-analytics\/PlayList.csv')","8d237bf0":"Injury_Rec.head()","3ce28984":"PlayList.head()","488830cc":"df = Injury_Rec.groupby('BodyPart').agg({'PlayerKey': ['count']})\ndf = df.sort_values(('PlayerKey', 'count'), ascending=True).sort_index()\ndata = go.Bar(x=df.index, y=df['PlayerKey']['count'].sort_values(),marker_color=\"mediumPurple\",name='counts')\n\nlayout = go.Layout(dict(title = \"Which Body Part got Injured frequently ?\",\n                        xaxis = dict(title = \"Injured BodyParts\",\n                                     #marker = list(color = \"rgb(195, 195, 195)\"),\n                                     color=\"Purple\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,),\n                        yaxis = dict(title = 'Counts',\n                                     color=\"Purple\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,)))\n\npy.iplot(dict(data=data, layout=layout))","7f647054":"Injury_Rec.groupby('Surface').count()['PlayerKey'].sort_values().plot(kind='barh', figsize=(15, 5), title='Surface on games are played',color='mediumPurple')\nplt.show()","1b1e834b":"Injury_Rec.groupby(['BodyPart','Surface']).count() \\\n.unstack('BodyPart')['PlayerKey'].T.sort_values('Natural')\\\n.T.sort_values('Ankle').plot(kind='bar', figsize=(15, 5), title='Body Parts Injured on respected surfaces')\n\nplt.show()","f9ea61f8":"Injury_Rec.groupby(['DM_M1','DM_M7','DM_M28','DM_M42']).count()['PlayerKey'].sort_values().plot(kind='bar', figsize=(15, 5), title='Players Recovery',color='mediumPurple')\nplt.show()","a4911fbc":"Injury_Rec.groupby(['DM_M1','DM_M7','DM_M28','DM_M42','BodyPart','Surface']).count() \\\n.unstack('BodyPart')['PlayerKey']\\\n.plot(kind='bar', figsize=(15, 5), title='Games missed by a player due to injury ')\n\nplt.show()","e93fe6e7":"# Thats all for InjuryRecord dataset\nPlayList.head()","bdcb8183":"df = PlayList[['PlayKey','PlayType']].drop_duplicates()\ndf = df.groupby('PlayType').agg({'PlayKey': ['count']})\ndf = df.sort_values(('PlayKey', 'count'), ascending=True).sort_index()\ndata = go.Bar(x=df.index, y=df['PlayKey']['count'],marker_color=\"cornflowerblue\",name='counts')\n\nlayout = go.Layout(dict(title = \"Most frequent player types\",\n                        xaxis = dict(title = \"Player Type\",\n                                     #marker = list(color = \"rgb(195, 195, 195)\"),\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,),\n                        yaxis = dict(title = 'Counts',\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,)))\n\npy.iplot(dict(data=data, layout=layout))","ce982e52":"#Lets merge both of them to get insights\ninj_detailed_merged = Injury_Rec.merge(PlayList)","7afd2fdf":"inj_detailed_merged.head()","cab1df42":"df = inj_detailed_merged.groupby('RosterPosition').agg({'PlayerKey': ['count']})\ndf = df.sort_values(('PlayerKey', 'count'), ascending=True).sort_index()\ndata = go.Bar(x=df.index, y=df['PlayerKey']['count'],marker_color=\"cornflowerblue\",name='counts')\n\nlayout = go.Layout(dict(title = \"Most frequent postions of the players\",\n                        xaxis = dict(title = \"Player Positions\",\n                                     #marker = list(color = \"rgb(195, 195, 195)\"),\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,),\n                        yaxis = dict(title = 'Counts',\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,)))\n\npy.iplot(dict(data=data, layout=layout))","e6cd06f8":"df = inj_detailed_merged.groupby('PlayType').agg({'PlayerKey': ['count']})\ndf = df.sort_values(('PlayerKey', 'count'), ascending=True).sort_index()\ndata = go.Bar(x=df.index, y=df['PlayerKey']['count'],marker_color=\"cornflowerblue\",name='counts')\n\nlayout = go.Layout(dict(title = \"Most frequent player types\",\n                        xaxis = dict(title = \"Player Positions\",\n                                     #marker = list(color = \"rgb(195, 195, 195)\"),\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,),\n                        yaxis = dict(title = 'Counts',\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,)))\n\npy.iplot(dict(data=data, layout=layout))","941384ec":"ds = inj_detailed_merged.groupby(['RosterPosition','BodyPart']).count() \\\n.unstack('BodyPart')['PlayerKey']\\\n.T.apply(lambda x: x \/ x.sum())\\\n.sort_values('BodyPart').T.sort_values('Ankle', ascending=False)","aaf04f7e":"data = go.Bar(x=ds['Ankle'], y=ds.index,marker_color=\"blue\",name='counts',orientation = 'h')\n\nlayout = go.Layout(dict(title = \"Most frequent player positions having Ankle Injury\",\n                        xaxis = dict(title = \"Count\",\n                                     #marker = list(color = \"rgb(195, 195, 195)\"),\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,),\n                        yaxis = dict(title = 'Player Postions',\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,)))\n\npy.iplot(dict(data=data, layout=layout))","ca266b20":"data = go.Bar(x=ds['Foot'], y=ds.index,marker_color=\"orange\",name='counts',orientation = 'h')\n\nlayout = go.Layout(dict(title = \"Most frequent player positions having Foot Injury\",\n                        xaxis = dict(title = 'Counts',\n                                     #marker = list(color = \"rgb(195, 195, 195)\"),\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,),\n                        yaxis = dict(title = \"Player Positions\",\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,)))\n\npy.iplot(dict(data=data, layout=layout))","c8d9c7c2":"data = go.Bar(x=ds['Knee'], y=ds.index,marker_color=\"green\",name='counts',orientation = 'h')\n\nlayout = go.Layout(dict(title = \"Most frequent player positions having Knee Injury\",\n                        xaxis = dict(title = 'Counts',\n                                     #marker = list(color = \"rgb(195, 195, 195)\"),\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,),\n                        yaxis = dict(title = \"Player Positions\",\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,)))\n\npy.iplot(dict(data=data, layout=layout))","0de5e6ca":"#Lets get a merged perspective of all of these factors\n\nds.plot(kind='barh', figsize=(15, 5), title='Most frequent body parts injuries in different positions',stacked=True)\n\nplt.show() ","9778fd9c":"# 'PlayType' & 'BodyPart'\n\ndf = inj_detailed_merged.groupby(['PlayType','BodyPart']).count() \\\n.unstack('BodyPart')['PlayerKey']\\\n.T.apply(lambda x: x \/ x.sum())\\\n.sort_values('BodyPart').T.sort_values('Ankle', ascending=False)\\","635e5bbe":"data = go.Bar(x=df['Ankle'], y=df.index,marker_color=\"blue\",name='counts',orientation = 'h')\n\nlayout = go.Layout(dict(title = \"Most frequent player types having Ankle Injury\",\n                        xaxis = dict(title = \"Count\",\n                                     #marker = list(color = \"rgb(195, 195, 195)\"),\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,),\n                        yaxis = dict(title = 'Player Postions',\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,)))\n\npy.iplot(dict(data=data, layout=layout))","32d8a8fb":"data = go.Bar(x=df['Foot'], y=df.index,marker_color=\"orange\",name='counts',orientation = 'h')\n\nlayout = go.Layout(dict(title = \"Most frequent player types having Foot Injury\",\n                        xaxis = dict(title = 'Counts',\n                                     #marker = list(color = \"rgb(195, 195, 195)\"),\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,),\n                        yaxis = dict(title = \"Player Positions\",\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,)))\n\npy.iplot(dict(data=data, layout=layout))","2df61bb9":"data = go.Bar(x=df['Knee'], y=df.index,marker_color=\"green\",name='counts',orientation = 'h')\n\nlayout = go.Layout(dict(title = \"Most frequent player types having Knee Injury\",\n                        xaxis = dict(title = 'Counts',\n                                     #marker = list(color = \"rgb(195, 195, 195)\"),\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,),\n                        yaxis = dict(title = \"Player Positions\",\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,)))\n\npy.iplot(dict(data=data, layout=layout))","acea2554":"#Lets get a merged perspective of all of these factors\n\ninj_detailed_merged.groupby(['PlayType','BodyPart']).count() \\\n.unstack('BodyPart')['PlayerKey']\\\n.T.apply(lambda x: x \/ x.sum())\\\n.sort_values('BodyPart').T.sort_values('Ankle', ascending=False)\\\n.plot(kind='barh', figsize=(15, 5), title='Frequency of different injuries on different playtypes',stacked=True)\n\nplt.show()","b563b9be":"# 'RosterPosition' & 'Surface'\n\ndf = inj_detailed_merged.groupby(['RosterPosition','Surface']).count() \\\n.unstack('Surface')['PlayerKey']\\\n.T.apply(lambda x: x \/ x.sum())\\\n.sort_values('Surface').T.sort_values('Natural', ascending=False)\n","b9feeec6":"data = go.Bar(x=df['Natural'], y=df.index,marker_color=\"blue\",name='counts',orientation = 'h')\n\nlayout = go.Layout(dict(title = \"Most frequent player positions in Natural Field Type\",\n                        xaxis = dict(title = \"Count\",\n                                     #marker = list(color = \"rgb(195, 195, 195)\"),\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,),\n                        yaxis = dict(title = 'Field Type',\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,)))\n\npy.iplot(dict(data=data, layout=layout))","967679b8":"data = go.Bar(x=df['Synthetic'], y=df.index,marker_color=\"orange\",name='counts',orientation = 'h')\n\nlayout = go.Layout(dict(title = \"Most frequent player positions in Synthetic Field Type\",\n                        xaxis = dict(title = 'Counts',\n                                     #marker = list(color = \"rgb(195, 195, 195)\"),\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,),\n                        yaxis = dict(title = \"Player Positions\",\n                                     color=\"Black\",\n                                     showgrid=True,\n                                     zeroline=True,\n                                     showline=True,)))\n\npy.iplot(dict(data=data, layout=layout))","5758c5d8":"#Lets get a merged perspective of all of these factors\ninj_detailed_merged.groupby(['RosterPosition','Surface']).count() \\\n.unstack('Surface')['PlayerKey']\\\n.T.apply(lambda x: x \/ x.sum())\\\n.sort_values('Surface').T.sort_values('Natural', ascending=False)\\\n.plot(kind='barh', figsize=(15, 5), title='Players on different positions on different surfaces',stacked=True)\n\nplt.show()","723b9a78":"### Lets gain some insights from data through beautiful visuals","71bd2c51":"## **Observations**\n\n- 57 matches were played in synthetic field while others on natural field.\n\n- Out of 105 injuries, Toes injury with 48 numbers have been the highest amongst them all.\n\n- Ankle and toes injuries in synthetic field increases drastically.\n\n- No heel injury in synthetic field recorded.\n\n- Knee injuries remains almost same on both the fields.\n\n- Foot injury got decreased in sythetic field.\n","e83ae29b":"## **Explaination Of Above Data:**\n\n\nRosterPosition: Player's roster position i.e. Running Back\n\nPlayerDay: Time line of players participation in games\n\nPlayer Game: Uniquely identifies the player's game\n\nStadium Type: open, close, outdoor, etc\n\nField type: Natural or synthetic\n\nTemperature: On field temperature at start of the game. Not provided in dome\/indoor stadiums.\n\nWeather: Weather conditions\n\nPlaytype: categorical description of play type.\n\nPlayerGamePlay: running count of plays a player has participated during the game\n\nPosition: Player position for eg. RB,QB,DE etc.\n\nPositionGroup: Player position group for the position held during the play. \n","2ae5c013":"### What are the main factors to cause injuries ??:","b78300b6":"## Observation & Conclusion:\n\n- No ankle injury to tightend positioned players, Highest recorded to cornerback positioned players.\n\n- No foot injuries to \"Running back\", \"Safety\" and \"line backer\" while highest ankle injuries to tight end positioned players.\n\n- \"Running back\", \"Safety\" and \"line backer\" have highest knee injuries recorded.\n\n- No ankle injuries to \"putNotReturned\", \"Kickoff\" and \"KickOff not returned\" type players while highest ankle injuries to \"punt return type\" player.\n\n- \"PutNotReturned\" type players have highest foot injuries.\n\n- Knee injuries have been recorded most to \"kick off\" and \"kick off return\" typed players.","5090df6c":"## ***NFL ANALYTICS***\n\nIn this challenge, We have to investigate the relationship between the playing surface and the injury and performance of National Football League (NFL) athletes and to examine factors that may contribute to lower extremity injuries.\n\n\nIn the NFL, 12 stadiums have fields with synthetic turf. Recent investigations of lower limb injuries among football athletes have indicated significantly higher injury rates on synthetic turf compared to natural turf for whatever reasons. \n\nIn this notebook I will only investigate the chances of injuries to be occured to any typed player at any given positon.\n\nSo, Lets start. ","8b4656d4":"## **Explaination Of Above Data:**\n\nBodypart: Injured Body Part (Knee, Ankle, Foot, etc.)\n\nSurface: Playing surface area at the time of injury.\n\nDM_M1: One hot encoding, indicates 1 or more days missed due to injury\n\nDM_M7: One hot encoding, indicates 7 or more days missed due to injury\n\nDM_M28: One hot encoding, indicates 28 or more days missed due to injury\n\nDM_M42: One hot encoding, indicates 42 or more days missed due to injury"}}