{"cell_type":{"b667caf4":"code","f2e35be0":"code","9341ffd8":"code","04a7be34":"code","89aa2977":"code","e8082130":"code","8d6baef3":"code","fac7fff4":"code","4cc646db":"code","0c7615a8":"markdown","f0037415":"markdown","d162bcfa":"markdown","a3e4f950":"markdown","ddf172c6":"markdown","a18eb52a":"markdown"},"source":{"b667caf4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n\n# ML Models\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f2e35be0":"# Importing the data and displaying some rows\ndata_train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ndata_test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\n\n# df aka dataframe, is the the dataset can be manipulated via the panda library.\ndisplay(data_train.head(25))","9341ffd8":"# Check typical statistic of the model such as its attributes, average, min, max and etc. \ndata_train.describe()","04a7be34":"\n# My first intuition is to find patterns in data that could be seen useful\n# I will use seasborn graphing api to see possible patterns in the dataset\nsns.barplot(x=\"Embarked\", y=\"Survived\", hue=\"Sex\", data=data_train);","89aa2977":"\nsns.pointplot(x=\"Pclass\", y=\"Survived\", hue=\"Sex\", data=data_train,\n              palette={\"male\": \"blue\", \"female\": \"red\"},\n              markers=[\"*\", \"o\"], linestyles=[\"-\", \"--\"]);\n\n","e8082130":"print(data_train.info())","8d6baef3":"women = data_train.loc[data_train.Sex == 'female'][\"Survived\"]\n\nrate = sum(women) \/ len(women)\nprint(\"Percentage of women who survived:\", 100 * rate)\n\n\nmen = data_train.loc[data_train.Sex == 'male'][\"Survived\"]\n\nrate = sum(men) \/ len(men)\nprint(\"Percentage of men who survived:\", 100 * rate)","fac7fff4":"g = sns.FacetGrid(data_train, col='Survived')\ng.map(plt.hist, 'Age', bins=20)","4cc646db":"# Importing the RandomForestClassifier from Scitkit learn\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Our Y value is the predictor column in the dataset. \n# In this case Survive, where 0 means death, and 1 means survived\n\ny = data_train[\"Survived\"]\n","0c7615a8":"Data Types:\n* 5 Integers\n* 2 Floats\n* 5 Objects","f0037415":"## Pattern Finding\nBased on the charts above, gender seems to be distinct charactersitic of wether a passenger survived.","d162bcfa":"# **Data Preperation**","a3e4f950":"## Modeling","ddf172c6":"## Data Cleaning\nIt seems that there various Nan values within \ncertain caloumns of the dataset.\n\nColumns that need corrections\n* Age\n* Cabin\n* Embarked\nThese feautres could be removed for our modeling,as these particular values \nare not well formated\n\n","a18eb52a":"## Visualizations"}}