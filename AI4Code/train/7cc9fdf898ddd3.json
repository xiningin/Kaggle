{"cell_type":{"f7ec4021":"code","a7bdf155":"code","7fc1ebe7":"code","a370ee8a":"code","08e31689":"code","2f3c16a9":"code","aff45a14":"code","3d346d78":"code","c82d160b":"code","79bd0265":"code","182bed39":"code","7577cd37":"code","df610cee":"code","2cabe778":"code","b6b503e7":"code","78dc0887":"code","d03da374":"code","f9ad81de":"code","ca461a86":"code","bdb2ae9b":"code","9a96bd7a":"code","d8ed1a6c":"code","544335e3":"code","537987a7":"code","a7442ac9":"markdown","ce3b4a2e":"markdown","92a4a1a5":"markdown","d7c9df16":"markdown","ce8d0e51":"markdown"},"source":{"f7ec4021":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nfrom fbprophet import Prophet\nfrom fbprophet.plot import plot_plotly\nimport plotly.offline as py\n\nimport numpy  as np\nimport matplotlib.pyplot as plt   \n\nimport pandas as pd\n\nimport seaborn as sns","a7bdf155":"mtl_df=pd.read_csv(\"..\/input\/montral-crimes\/interventionscitoyendo.csv\", encoding='ISO-8859-1')\nmtl_df","7fc1ebe7":"mtl_df.info()","a370ee8a":"plt.figure(figsize=(10,10))\nsns.heatmap(mtl_df.isnull(), cbar='Oranges', cmap='Oranges' )","08e31689":"mtl_df2=mtl_df.drop([\"PDQ\",\"X\",\"Y\",\"LONGITUDE\",\"LATITUDE\"], axis=1)\nmtl_df2","2f3c16a9":"mtl_df2.DATE=pd.to_datetime(mtl_df.DATE, format = \"%Y\/%m\/%d\")\nmtl_df2.DATE","aff45a14":"#lets convert our date column to index table\nmtl_df2.index=pd.DatetimeIndex(mtl_df.DATE)\nmtl_df2","3d346d78":"mtl_df2[\"CATEGORIE\"].value_counts()","c82d160b":"#lets now how many crime in each year. we can't do it without making date as index\nmtl_df3=mtl_df2.resample(\"Y\").size()\nmtl_df3","79bd0265":"plt.plot(mtl_df3)\nplt.title(\"crime per year\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"nb of crim\")","182bed39":"#as we see numbers of crimes going down over the years in Montreal City","7577cd37":"mtl_df4=mtl_df2.resample(\"m\").size()\nmtl_df4","df610cee":"plt.plot(mtl_df4)\nplt.title(\"crime per month\")\nplt.xlabel(\"months\")\nplt.ylabel(\"nb of crim\")","2cabe778":"#crims going up during summer time\nmtl_df5=mtl_df2.resample(\"Q\").size() #by quarter of year...every 3 months\nmtl_df5\n","b6b503e7":"plt.plot(mtl_df5)\nplt.title(\"crime per quarter\")\nplt.xlabel(\"quarter\")\nplt.ylabel(\"nb of crim\")","78dc0887":"mtl_prophet=mtl_df2.resample(\"m\").size().reset_index() #resample the data frame based on month, and add index and number of crime\nmtl_prophet","d03da374":"mtl_prophet.columns=[\"Date\",\"Crime count\"]\nmtl_prophet","f9ad81de":"#to apply facebooke prophet we have to rename our column DS and Y only","ca461a86":"mtl_prophet_df_final=mtl_prophet.rename(columns={\"Date\":\"ds\", \"Crime count\":\"y\"})\nmtl_prophet_df_final","bdb2ae9b":"Pr=Prophet(weekly_seasonality=True, daily_seasonality=True)\nPr.fit(mtl_prophet_df_final)","9a96bd7a":"future=Pr.make_future_dataframe(periods=365)\nforecast=Pr.predict(future)\nforecast","d8ed1a6c":"#lets visualize my crime rate\nfigure=Pr.plot(forecast,xlabel = \"ds\", ylabel = \"Crime Rate\")","544335e3":"fig2 = Pr.plot_components(forecast)","537987a7":"\npy.init_notebook_mode()\n\nfig6 = plot_plotly(Pr, forecast)  # This returns a plotly Figure\npy.iplot(fig6)","a7442ac9":"# Import Library","ce3b4a2e":"# Data Visualization","92a4a1a5":"# Data Cleaning","d7c9df16":"# Data Modeling","ce8d0e51":"# Load Data File"}}