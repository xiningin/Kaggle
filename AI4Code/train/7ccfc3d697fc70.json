{"cell_type":{"6b7aacaa":"code","bd361473":"code","79e00b79":"code","509d16d2":"code","d3eac715":"code","9a16657e":"code","aac7f090":"code","8677076c":"markdown","55609bb8":"markdown","45fc65dd":"markdown","08fff587":"markdown"},"source":{"6b7aacaa":"#@auother- Shweta\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\nplt.style.use('ggplot')","bd361473":"import numpy as np\n\nf = open(\"..\/input\/diabetes.csv\")\nf.readline()  # skip the header\ndata = np.loadtxt(f, delimiter = ',')\nX = data[:, :-1]\ny = data[:, -1]\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)","79e00b79":"from sklearn.neural_network import MLPClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.gaussian_process import GaussianProcessClassifier\nfrom sklearn.gaussian_process.kernels import RBF\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis\n\nnames = [\"Nearest Neighbors\", \"Linear SVM\", \"RBF SVM\", \"Gaussian Process\",\n         \"Decision Tree\", \"Random Forest\", \"Neural Net\", \"AdaBoost\",\n         \"Naive Bayes\", \"QDA\"\n        ]\n\nclassifiers = [\n    KNeighborsClassifier(),\n    SVC(kernel=\"linear\"),\n    SVC(kernel=\"rbf\"),\n    GaussianProcessClassifier(),\n    DecisionTreeClassifier(),\n    RandomForestClassifier(),\n    MLPClassifier(),\n    AdaBoostClassifier(),\n    GaussianNB(),\n    QuadraticDiscriminantAnalysis()\n]","509d16d2":"from sklearn.model_selection import cross_val_score\n\n# iterate over classifiers\nresults = {}\nfor name, clf in zip(names, classifiers):\n    scores = cross_val_score(clf, X_train, y_train, cv=5)\n    results[name] = scores","d3eac715":"for name, scores in results.items():\n    print(\"%20s | Accuracy: %0.2f%% (+\/- %0.2f%%)\" % (name, 100*scores.mean(), 100*scores.std() * 2))","9a16657e":"clf = SVC(kernel=\"linear\", C=0.1)\nclf.fit(X_train, y_train)\ny_eval = clf.predict(X_test)","aac7f090":"acc = sum(y_eval == y_test) \/ float(len(y_test))\nprint(\"Accuracy: %.2f%%\" % (100*acc))","8677076c":"**Pima Indians Diabetes Database\u00b6**\n\nPredict the onset of diabetes based on diagnostic measures. ","55609bb8":"First, let's load the data, and split it in four. It is the fold used the authors of the original paper.","45fc65dd":"Yeeeeee..... We did it :-)","08fff587":"all the classifiers, using 5-fold cross validation."}}