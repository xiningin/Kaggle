{"cell_type":{"a400b551":"code","8999377f":"code","4daa794e":"code","be74d913":"code","f97122aa":"code","cb1e9eeb":"code","41aafc71":"code","2b42da2d":"code","97f7528c":"code","e1ef0ae2":"code","7825ad28":"code","f5f5e559":"code","78fd2043":"code","8be9c046":"markdown","967e4d26":"markdown","2a9c0a68":"markdown","31b09448":"markdown","41f23eec":"markdown","48801f34":"markdown","14539184":"markdown","bb1aacee":"markdown"},"source":{"a400b551":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.pipeline import Pipeline\n\nfrom sklearn.decomposition import PCA\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier","8999377f":"df = sns.load_dataset('iris')\ndf.head()","4daa794e":"# Here i convert  the target feature into Numerical feature using LabelEncoder\nle = LabelEncoder()\ndf['species'] = le.fit_transform(df['species'])","be74d913":"X_train,X_test,y_train,y_test = train_test_split(df.drop('species', axis=1), df['species'],test_size=0.2,\n                                                random_state=42)","f97122aa":"## Pipeline Creation\n## 1.Data preprocessing by using Standard scalar and Label encoder\n## 2.Reduce Dimension using PCA\n## 3.Apply classifier","cb1e9eeb":"pipeline_lr = Pipeline([\n    ('scaler1', StandardScaler()),\n    ('pca1', PCA(n_components=3)),\n    ('lr_classifier',LogisticRegression(random_state=0))\n])","41aafc71":"pipeline_dt = Pipeline([\n    ('scaler2', StandardScaler()),\n    ('pca2', PCA(n_components=3)),\n    ('lr_classifier',DecisionTreeClassifier())\n])","2b42da2d":"pipeline_rf = Pipeline([\n    ('scaler3', StandardScaler()),\n    ('pca3', PCA(n_components=3)),\n    ('lr_classifier',RandomForestClassifier())\n])","97f7528c":"# Let's make the list of pipelines\npipelines = [pipeline_lr,pipeline_dt,pipeline_rf]","e1ef0ae2":"best_accuracy = 0.0\nbest_classifier = 0\nbest_pipeline = \"\"","7825ad28":"# dictionary of pipelines and classifier types for ease of reference\npipe_dict = {0:'Logistic Regression',1:'Decision Tree',2:'Random Forest'}","f5f5e559":"# fit the pipelines\nfor pipe in pipelines:\n    pipe.fit(X_train,y_train)","78fd2043":"# model accuracy\nfor i,model in enumerate(pipelines):\n    print('{} Test accuracy: {}'.format(pipe_dict[i],np.round(model.score(X_test,y_test)*100),1))","8be9c046":"***Why are ML pipelines important?***\n\nThe main objective of having a proper pipeline for any ML model is to exercise control over it. A well-organised pipeline makes the implementation more flexible. It is like having an exploded view of a computer where you can pick the faulty pieces and replace it- in our case, replacing a chunk of code.","967e4d26":"## About Dataset\nThe Iris Dataset contains four features (length and width of sepals and petals) of 50 samples of three species of Iris (Iris setosa, Iris virginica and Iris versicolor). ... The dataset is often used in data mining, classification and clustering examples and to test algorithms.","2a9c0a68":"## Load Dataset","31b09448":"## Introduction","41f23eec":"<img src='https:\/\/s3.amazonaws.com\/assets.datacamp.com\/blog_assets\/Machine+Learning+R\/iris-machinelearning.png' \/>","48801f34":"## Pipeline","14539184":"## Some Useful Libraries","bb1aacee":"***Benefits of a Machine Learning Pipeline***\n\n* Make continuous predictions.\n* Get up and running right away.\n* Accessible to every team.\n1. Data Preprocessing.\n2. Data Cleaning.\n3. Feature Engineering.\n4. Model Selection.\n5. Prediction Generation."}}