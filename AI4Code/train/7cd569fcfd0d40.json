{"cell_type":{"a59ef06e":"code","880ff55b":"code","f25370e9":"code","19bc96c6":"code","331c85d4":"code","483f7a0e":"code","0850d0fb":"code","1907fe42":"code","7ee19fe4":"code","ec6fd030":"code","b8441dfa":"code","8dda2de1":"code","039ed050":"code","2f83109a":"code","4563d0ac":"code","b709d767":"code","eff09962":"code","36c2fcde":"code","3c6308e3":"code","1f414a62":"markdown","a3c571af":"markdown","cdf40e14":"markdown","2055397b":"markdown","dcd169f7":"markdown","4c640a01":"markdown","8aa50fb4":"markdown","f6a52d68":"markdown","03fc0f92":"markdown","6cfac811":"markdown","1fe7aa33":"markdown"},"source":{"a59ef06e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\nfrom sklearn.cluster import KMeans\n%matplotlib inline\n%config Completer.use_jedi = False\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","880ff55b":"df = pd.read_csv('..\/input\/unsupervised-learning-on-country-data\/Country-data.csv')\ndf_dict = pd.read_csv('..\/input\/unsupervised-learning-on-country-data\/data-dictionary.csv')","f25370e9":"df.head()","19bc96c6":"pd.set_option('display.max_colwidth', None)\ndf_dict","331c85d4":"for columns in df.columns:\n    print(columns)\n    print(np.array(df[columns].head(10)))\n    print('Type: ',df[columns].dtypes)\n    print('Number of Null Values: ',df[columns].isnull().sum())\n    print()","483f7a0e":"plt.figure(figsize=(10,6))\nsns.heatmap(df.corr(),vmin=-1,vmax=1,center=0,cmap=sns.diverging_palette(240, 10, n=9),annot=True)","0850d0fb":"inertia = []\nfor k in range(1,10):\n    kcul = KMeans(n_clusters=k)\n    kmeans = kcul.fit(df[['exports','gdpp']])\n    inertia.append(kmeans.inertia_)\n    \nfig, ax = plt.subplots()\nax.plot(range(1,10),inertia, marker = '+',color = 'red' , ls = '--', markeredgecolor = 'blue', markersize = '10')","1907fe42":"kcul = KMeans(n_clusters=3)\nkmeans = kcul.fit(df[['exports','gdpp']])","7ee19fe4":"cluster = pd.DataFrame(df)\ncluster['Labels'] = kmeans.labels_\ncluster","ec6fd030":"Cluster_0 = cluster[cluster['Labels'] == 0]\nCluster_1 = cluster[cluster['Labels'] == 1]\nCluster_2 = cluster[cluster['Labels'] == 2]\nfig = plt.figure(figsize=(8,6))\nax = plt.subplot(1,1,1)\nax.scatter(Cluster_0['exports'],Cluster_0['gdpp'], label = 'Cluster 0', c='r')\nax.scatter(Cluster_1['exports'],Cluster_1['gdpp'], label = 'Cluster 1', c='b')\nax.scatter(Cluster_2['exports'],Cluster_2['gdpp'], label = 'Cluster 2', c='g')\nax.set_xlabel('Exports')\nax.set_ylabel('GDPP')\nax.legend()","b8441dfa":"inertia = []\nfor k in range(1,10):\n    kcul = KMeans(n_clusters=k)\n    kmeans = kcul.fit(Cluster_0[['health','income']])\n    inertia.append(kmeans.inertia_)\n    \nfig, ax = plt.subplots()\nax.plot(range(1,10),inertia, marker = '+',color = 'red' , ls = '--', markeredgecolor = 'blue', markersize = '10')","8dda2de1":"kcul = KMeans(n_clusters=3)\nkmeans = kcul.fit(Cluster_0[['health','income']])","039ed050":"Cluster_0.drop('Labels',axis = 1,inplace = True)\nCluster_0['Labels'] = kmeans.labels_\nCluster_0","2f83109a":"Cluster_0_0 = Cluster_0[Cluster_0['Labels'] == 0]\nCluster_0_1 = Cluster_0[Cluster_0['Labels'] == 1]\nCluster_0_2 = Cluster_0[Cluster_0['Labels'] == 2]\nfig = plt.figure(figsize=(8,6))\nax = plt.subplot(1,1,1)\nax.scatter(Cluster_0_0['health'],Cluster_0_0['income'], label = 'Cluster 0_0', c='r')\nax.scatter(Cluster_0_1['health'],Cluster_0_1['income'], label = 'Cluster 0_1', c='b')\nax.scatter(Cluster_0_2['health'],Cluster_0_2['income'], label = 'Cluster 0_2', c='g')\nax.set_xlabel('Health')\nax.set_ylabel('Income')\nax.legend()","4563d0ac":"inertia = []\nfor k in range(1,10):\n    kcul = KMeans(n_clusters=k)\n    kmeans = kcul.fit(Cluster_0_0[['child_mort','total_fer']])\n    inertia.append(kmeans.inertia_)\n    \nfig, ax = plt.subplots()\nax.plot(range(1,10),inertia, marker = '+',color = 'red' , ls = '--', markeredgecolor = 'blue', markersize = '10')","b709d767":"kcul = KMeans(n_clusters=3)\nkmeans = kcul.fit(Cluster_0_0[['child_mort','total_fer']])","eff09962":"Cluster_0_0.drop('Labels',axis = 1,inplace = True)\nCluster_0_0['Labels'] = kmeans.labels_\nCluster_0_0","36c2fcde":"Cluster_0_0_0 = Cluster_0_0[Cluster_0_0['Labels'] == 0]\nCluster_0_0_1 = Cluster_0_0[Cluster_0_0['Labels'] == 1]\nCluster_0_0_2 = Cluster_0_0[Cluster_0_0['Labels'] == 2]\nfig = plt.figure(figsize=(8,6))\nax = plt.subplot(1,1,1)\nax.scatter(Cluster_0_0_0['child_mort'],Cluster_0_0_0['total_fer'],c = 'r',label = 'Cluster 0_0_0')\nax.scatter(Cluster_0_0_1['child_mort'],Cluster_0_0_1['total_fer'],c = 'b',label = 'Cluster 0_0_1')\nax.scatter(Cluster_0_0_2['child_mort'],Cluster_0_0_2['total_fer'],c = 'g',label = 'Cluster 0_0_2')\nax.set_xlabel('Child Mort')\nax.set_ylabel('total fertility')\nax.legend()","3c6308e3":"Cluster_0_0_1.set_index('country').sort_values(by = 'life_expec')","1f414a62":"# Clustering on the basis of Health Conditions","a3c571af":"# EDA","cdf40e14":"## Child Mortality v Total Fertility","2055397b":"## Exports v GDPP","dcd169f7":"## Health v Income","4c640a01":"Since Cluster 0 is found to have lowest Exports and GDPP, It'll further be classified based on Health and Income","8aa50fb4":"# Clustering based on Economic Conditions","f6a52d68":"## The Data can be analysed by dividing into two categories:\n            Economic Conditions: [Exports, Imports, Inflation, Gdpp, Income, Health]\n            Health Conditions: [Child Mortality, Life Expec, Total fer]\n                \nEconomic Conditions:\n    1) Exports v GDPP\n    2) Health v Income\n\nHealth Conditions:\n    1) Child Mortality v Life Expectancy","03fc0f92":"Since Cluster_0_0 has lowest Income and Health spendings, it'll be further classified based on health factors","6cfac811":"# Data Input","1fe7aa33":"So the Cluster_0_0_1 gives the countries that are in dire neeed of aid. This can further be prioritzed by sorting on the basis of life expectancy and chosing the top 5 out of it: \n###### Haiti, Central African Republic, Sierra Leone, Guinea-Bissau, Cote d'Ivoire"}}