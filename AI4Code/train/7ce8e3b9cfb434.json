{"cell_type":{"5e2653d4":"code","c36edbfe":"code","24099293":"code","d4efc8ff":"code","821258c6":"code","4af368da":"code","af60aa9e":"code","2031a3dc":"code","8985ad01":"code","6c926002":"code","f5fca863":"code","8a11524b":"code","7c3ffbdf":"code","84888a96":"code","dc80ebbe":"code","aee8aa49":"code","45a5d50b":"code","c0e56676":"code","e8f08209":"code","76a30aad":"code","84ee8bb3":"code","d0616bbc":"code","5f68d6e6":"code","a1c78586":"code","5441ad4d":"code","1bfb5432":"markdown","e4510cd2":"markdown","156c1d59":"markdown","6ded78c0":"markdown","79fd9b85":"markdown","6b74a442":"markdown","b4f1d0f4":"markdown","7e888ab7":"markdown","573ee0f1":"markdown","94a7c62d":"markdown","ed53a6ee":"markdown","f790badb":"markdown","9ec2872d":"markdown"},"source":{"5e2653d4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c36edbfe":"df = pd.read_csv(\"\/kaggle\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 5.csv\")\ndf.sample(10)","24099293":"row,col=df.shape\nprint(f\"We have {row} Rows and {col} columns\")","d4efc8ff":"df.info()","821258c6":"df.describe()","4af368da":"df = df.rename(columns={'Order Number': 'order_number',\"Order Status\":\"order_status\", \"Book Name\":\"book_name\",\"Order Date & Time\":\"order_date\",\"City\":\"billing_city\", \"Payment Method\":\"payment_method\", \"Total items\":\"total_books\", \"Total weight (grams)\":\"grams\"})\ndf.head()","af60aa9e":"df.isnull().sum().sort_values(ascending = False)","2031a3dc":"df.dropna(inplace=True)\ndf.isnull().sum()","8985ad01":"df.order_status.value_counts()","6c926002":"plt.figure(figsize=(12,6))\nbar= df.order_status.value_counts().plot(kind=\"bar\")\nplt.xlabel(\"Order Status\")\nplt.ylabel(\"Total orders\")","f5fca863":"complete_df = df.loc[(df.order_status == 'Completed')]\ncomplete_df.payment_method.value_counts()","8a11524b":"plt.figure(figsize=(12,6))\nhistogram = complete_df.payment_method.hist()\nplt.xlabel(\"Payment Method\")\nplt.ylabel(\"Number of Completed Orders\")","7c3ffbdf":"df = df.assign(book_name=df.book_name.str.split(\"\/\")).explode(\"book_name\")\ndf.book_name.value_counts()[:5]","84888a96":"plt.figure(figsize=(14,5))\ntop_5_seller = df.book_name.explode().value_counts()[:5].plot.bar()\nplt.title(\"top_5_Selling_Books\")\nplt.xlabel(\"Books\")\nplt.ylabel(\"Number of Orders\")","dc80ebbe":"plt.figure(figsize=(14,5))\nleast_5_selleing_books = df.book_name.explode().value_counts()[-5:].plot.bar()\n\nplt.title(\"Least 5 Selling Books\")\nplt.xlabel(\"Books\")\nplt.ylabel(\"Numbers of Orders\")","aee8aa49":"total_sold = df.book_name.explode().value_counts().sum()\nprint(f\"Total Books Sold by Gufhtugu Publications are {total_sold}\")\n","45a5d50b":"df.billing_city.value_counts()[:10]","c0e56676":"plt.figure(figsize=(12,6))\ndamp = df.billing_city.value_counts()[:10].plot.bar()","e8f08209":"df['order_date']= pd.to_datetime(df['order_date'])\ndf['year'] = df['order_date'].apply(lambda x : x.year)\ndf['month'] = df['order_date'].apply(lambda x : x.month)\ndf['day'] = df['order_date'].apply(lambda x : x.day_name())\ndf['weekday'] = df['order_date'].apply(lambda x : x.weekday())\ndf_new=df[['order_number', 'order_status', 'book_name', 'order_date', 'billing_city', 'year', 'month', 'day','weekday']]\ndf.head()","76a30aad":"years= df.year.value_counts()\nyears","84ee8bb3":"plt.figure(figsize=(14,5))\nyears.plot(kind=\"bar\")\nplt.xlabel(\"years\")\nplt.ylabel(\"Number of Sales\")","d0616bbc":"daily_sales = df.day.value_counts()\ndaily_sales","5f68d6e6":"plt.figure(figsize=(14,6))\ndaily_sales.plot(kind=\"bar\")\nplt.xlabel(\"days\")\nplt.ylabel(\"Number of Sales\")","a1c78586":"Monthly_sale = df.month.value_counts()\nMonthly_sale","5441ad4d":"plt.figure(figsize=(14,6))\nMonthly_sale.plot(kind=\"bar\")\nplt.xlabel(\"Month\")\nplt.ylabel(\"Number of Sales\")","1bfb5432":"Find a correlation between date and time with order status\u00b6","e4510cd2":"Order Status Frequency","156c1d59":"Best Order City","6ded78c0":"> Payment Methods","79fd9b85":"Rename column names for better EDA","6b74a442":"Seprate the books in each order on \"\/\"","b4f1d0f4":"#    Gufhtugu Publication Analysis\n  What is best selling book and least selling book\n  Visualize order status frequency\n  Find a correlation between date and time with order status\n  Find a correlation between city and order status\n  Find any hidden patterns that are counter-intuitive for a layman\n  Can we predict number of orders, or book names in advance?\n  ","7e888ab7":"Least 5 Selling Books","573ee0f1":"Shape of dataset","94a7c62d":"Check Null values in dataset","ed53a6ee":"Total Sold BOOKS","f790badb":"Best 5 Selling Books","9ec2872d":"Drop NaN Values"}}