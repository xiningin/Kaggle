{"cell_type":{"3bb0e64a":"code","95cc495f":"code","3f4ed553":"code","b9c68f7b":"code","ffc48ea1":"code","1d4b5ac8":"code","466cdae4":"markdown","78a47baa":"markdown"},"source":{"3bb0e64a":"import os # access to filesystem\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport tqdm.notebook # progress bar for jupyter notebook\nimport matplotlib.pyplot as plt # plotting \nimport PIL # image processing \n\n%matplotlib inline\n\nIMG_MODE = 'RGB'\nIMG_SIDE = 128\n\n# Function to parse a folder and store filenames in a DataFrame\ndef parseFolder(folder, ext):\n    filelist = os.listdir(folder)\n    imgfiles = []\n    for i, file in tqdm.notebook.tqdm(enumerate(filelist), total=len(filelist)):\n        if file.endswith(ext):\n            imgfiles.append(os.path.join(folder, file))\n\n    # Calling DataFrame constructor on list \n    df = pd.DataFrame(data=imgfiles, columns=[\"filename\"])\n    return df\n\n# This function stack together WIDTH * HEIGHT images\ndef makePatchwork(files, width, height):\n    patchwork = PIL.Image.new(IMG_MODE, (IMG_SIDE * width, IMG_SIDE * height))\n    matrix = [[(files[y*height+x], x, y) for x in range(width)] for y in range(height)]\n    patches = [item for sublist in matrix for item in sublist]\n    for (f, x, y) in patches:\n        patchwork.paste(PIL.Image.open(f), (x * IMG_SIDE, y * IMG_SIDE))\n    return patchwork","95cc495f":"# this is where the data is available from the notebook\nDATASET_PATH = '\/kaggle\/input\/airbus-wind-turbines-patches'\n\n# folder for target images\ntrain_targets_folder = os.path.join(DATASET_PATH, \"train\", \"target\")\n\n# parsing folder for JPEG files\ntrain_targets = parseFolder(train_targets_folder, \".jpg\")\n\n# Set target (wind-turbines) for training\ntrain_targets['train'] = True\ntrain_targets['label'] = 1\n\nprint(\"Total number of train targets images (128x128px): {}\".format(len(train_targets.index)))\ntrain_targets.head(10)","3f4ed553":"# folder for background images\ntrain_background_folder = os.path.join(DATASET_PATH, \"train\", \"background\")\n\n# Parsing folder for JPEG files\ntrain_background = parseFolder(train_background_folder, \".jpg\")\n\n# Set background for training\ntrain_background['train'] = True\ntrain_background['label'] = 0\n\nprint(\"Total number of train background images (128x128px): {}\".format(len(train_background.index)))\ntrain_background.head(10)","b9c68f7b":"print(\"Average occurence of targets over background in train: {}%\".format(round(len(train_targets.index) * 100 \/ len(train_background.index))))","ffc48ea1":"# sample 100 target images from the train dataset\nsampled = train_targets.sample(100)\n\n# retrieve the corresponding filenames\nfiles = [ i for i in sampled['filename'] ]\n\n# make a patchwork\npatchwork = makePatchwork(files, 10, 10)\n\n# display it inline\nplt.figure(figsize=(20,20))\nplt.axis('off')\nplt.imshow(patchwork)\n\n# save the image\npatchwork.save('targets_sampled.jpg')  \n","1d4b5ac8":"# sample 100 background images from the train dataset\nsampled = train_background.sample(100)\n\n# retrieve the corresponding filenames\nfiles = [ i for i in sampled['filename'] ]\n\n# make a patchwork\npatchwork = makePatchwork(files, 10, 10)\n\n# display it inline\nplt.figure(figsize=(20,20))\nplt.axis('off')\nplt.imshow(patchwork)\n\n# save the image\npatchwork.save('background_sampled.jpg') ","466cdae4":"### Display some images","78a47baa":"### Explore the data\n\n> The dataset contains over 400,000 files using roughly 1GB of disk space in total. This data is split into categories: **target** for images containing wind-turbines and **background** for imagery without wind-turbines. Then the data is furthermore splitted into **train** and **val** folder, respectively for training of the model and validation of the trainin process.\n\nWhen you start using the notebook, it will start downloading the data in the `input` folder to the local machine."}}