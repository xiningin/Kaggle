{"cell_type":{"0f11f076":"code","34ff2565":"code","2c1c5243":"code","8289db66":"code","dc50a181":"code","fded185b":"code","2db13572":"code","adb0dfee":"code","5f522359":"code","308baf68":"code","a0e9e0ab":"code","813db89e":"code","38242f5d":"code","9924ab21":"code","914e4009":"code","6b96bfbe":"code","b8889014":"code","f0772694":"code","cd414179":"code","b29ee510":"code","d4fcbd91":"code","2896ebf1":"code","447d608f":"markdown","f3125985":"markdown","82a3ecc0":"markdown","b3d07b98":"markdown","dbc1906c":"markdown"},"source":{"0f11f076":"import pandas as pd\nimport os\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nfrom scipy import stats\nfrom scipy.stats import norm, skew","34ff2565":"insurance = pd.read_csv(\"..\/input\/insurance.csv\")\ninsurance.head(5)","2c1c5243":"insurance.shape","8289db66":"# Checking the data types of each variable\ninsurance.dtypes","dc50a181":"insurance.info()","fded185b":"cor = insurance.corr(method='pearson')\ncor","2db13572":"sns.heatmap(cor,square=True, vmin=-0.2, vmax=0.8,cmap=\"YlGnBu\",annot=True)","adb0dfee":"#Setting the plot size \nfig, axis=plt.subplots(figsize=(7,7))\n\n#We use kde = True to plot the gaussian kernel density estimate\nsns.distplot(insurance['charges'],bins=50, kde=True)","5f522359":"from scipy import stats\ng = sns.JointGrid(insurance['age'],insurance['charges'])\ng = g.plot(sns.regplot, sns.distplot)\ng = g.annotate(stats.pearsonr)","308baf68":"#Create a variable to hold the nams of the data types float64 and int64\nnum_cols=['int64','float64']\n#Filter out variables with numeric data types\nnumcols_only=insurance.select_dtypes(include=num_cols)\nnumcols_only","a0e9e0ab":"from sklearn.preprocessing import StandardScaler\nscaler=StandardScaler()\nnum_std=scaler.fit_transform(numcols_only)\n","813db89e":"numcols_only.head(5)","38242f5d":"#We exclude all numeric columns\ninsurance_catcol = insurance.select_dtypes(exclude=num_cols)\ninsurance_catcol.columns.values","9924ab21":"insurance_cat_dummies = pd.get_dummies(insurance_catcol, drop_first=True)\ninsurance_cat_dummies.head(3)","914e4009":"# Merging numerical variables and dummies generated for categorical variables\n\nmerged= pd.concat([numcols_only, insurance_cat_dummies], axis=1)\n\nmerged.head()","6b96bfbe":"merged.shape","b8889014":"from sklearn.model_selection import train_test_split\n\n#Create feature & response variables\nX= merged.drop('charges',axis=1)\nY= merged['charges']\n\n#Create train and test datasets\nX_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.20, random_state=1)","f0772694":"X.head(3)","cd414179":"print(X_train.shape)\nprint(Y_train.shape)\nprint(X_test.shape)\nprint(Y_test.shape)","b29ee510":"from sklearn.linear_model import SGDRegressor\nfrom sklearn import datasets, linear_model, metrics \n\nreg = linear_model.LinearRegression() \n#We fit our model with train data\nreg.fit(X_train, Y_train)\n\n#We use predict() to predict our values\nY_hat=reg.predict(X_test)\n\n#We can also check the coefficient of determination with r2_score()\n# from sklearn.Matrics\n\nfrom sklearn.metrics import r2_score\nprint(r2_score(Y_test,Y_hat))\n\n#Closer the value to 1 the better it is.","d4fcbd91":"from sklearn.metrics import mean_squared_error\nmse=mean_squared_error(Y_hat, Y_test)\nrmse=np.sqrt(mse)\nprint(rmse)","2896ebf1":"plt.figure(figsize=(8,8))\nplt.scatter(Y_test,Y_hat)\nplt.xlabel('Actual value of Charges')\nplt.ylabel('Predicted values of charges')\nplt.tight_layout()","447d608f":"**Age**: age of primary beneficiary\n\n<br>**Sex**: insurance contractor gender, female, male\n\n<br>**BMI**: Body mass index, providing an understanding of body, weights that are relatively high or low relative to height, objective index of body weight (kg \/ m ^ 2) using the ratio of height to weight, ideally 18.5 to 24.9\n\n<br>**Children**: Number of children covered by health insurance \/ Number of dependents\n\n<br>**Smoker**: Smoking\n\n<br>**Region**: the beneficiary's residential area in the US, northeast, southeast, southwest, northwest.\n\n<br>**Charges**: Individual medical costs billed by health insurance","f3125985":"# Data Description","82a3ecc0":"Now let us look at the dimensions of the dataset.","b3d07b98":"## Dummy encoding of categorical variables","dbc1906c":"Here we can see that there are no missing values in the dataset. As all the variables are non null."}}