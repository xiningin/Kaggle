{"cell_type":{"3899bda8":"code","210681e2":"code","a803e106":"code","dc2369d9":"code","6ff716e0":"code","2b33457d":"code","0730994d":"code","773fb21f":"code","e5fc68e5":"code","86bf130e":"code","ffbe2869":"markdown","3da81320":"markdown","083a1b82":"markdown","d05e2dc0":"markdown","cfc3dfa5":"markdown","8fcc1caf":"markdown","19ac9d4f":"markdown","8d6be9d0":"markdown","93207adb":"markdown"},"source":{"3899bda8":"#Data Analysis\nimport numpy as np \nimport pandas as pd \n\n#Data Visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom google.cloud import bigquery \n#Declare the Big Query Client\nbq = bigquery.Client()","210681e2":"tables_info_query = \"\"\"\nSELECT\n    *\nFROM\n    `bigquery-public-data.usa_names.__TABLES__`\n\"\"\"\n\ntable_info_result = bq.query(tables_info_query).to_dataframe()\n\nprint('The dataset size is ' + str(round(table_info_result['size_bytes'].sum() \/(2**30),3)) + ' GB with ' +  str(table_info_result['row_count'].sum()) + ' rows.')\nprint('Number of tables: '+ str(table_info_result['table_id'].count()) + '\\nTables name: ')\nprint(table_info_result['table_id'])","a803e106":"tables_info_query = \"\"\"\nSELECT \n    *\nFROM\n    `bigquery-public-data.usa_names.usa_1910_current`\nLIMIT 100\n\"\"\"\n\ntable_info_result = bq.query(tables_info_query).to_dataframe()\n\ntable_info_result.head()","dc2369d9":"name_by_year_query = \"\"\"\nSELECT \n    year,\n    name,\n    gender,\n    SUM(number) appearances\nFROM\n    `bigquery-public-data.usa_names.usa_1910_current`\nGROUP BY gender, year, name\n\"\"\"\n\nranking_name_by_year_query = \"\"\"\nSELECT\n    year,\n    name,\n    gender,\n    appearances,\n    RANK() OVER (PARTITION BY year, gender ORDER  BY appearances DESC) position\n\nFROM (\"\"\"+ name_by_year_query +\"\"\")\n\"\"\"\n\nmp_name_by_year_query = \"\"\"\nSELECT\n    year,\n    name,\n    gender,\n    appearances\nFROM (\"\"\"+ranking_name_by_year_query+\"\"\")\nWHERE position = 1\nORDER BY year DESC, gender\n\"\"\"\n\nmp_name_by_year_result = bq.query(mp_name_by_year_query).to_dataframe()\n\n#Most popular names of the last 5 years\nmp_name_by_year_result.head(10)","6ff716e0":"most_popular_name_query = \"\"\"\nSELECT \n    name,\n    gender,\n    SUM(number) appearances\nFROM\n    `bigquery-public-data.usa_names.usa_1910_current`\nGROUP BY gender, name\n\"\"\"\n\nranking_mp_name_query = \"\"\"\nSELECT\n    name,\n    gender,\n    appearances,\n    RANK() OVER (PARTITION BY gender ORDER  BY appearances DESC) position\nFROM (\"\"\"+ most_popular_name_query +\"\"\")\n\"\"\"\n\nthe_mp_name_query = \"\"\"\nSELECT\n    name,\n    gender,\n    appearances,\n    position\nFROM (\"\"\"+ranking_mp_name_query+\"\"\")\nWHERE position <= 3\nORDER BY gender, position\n\"\"\"\n\nthe_mp_name_result = bq.query(the_mp_name_query).to_dataframe()\n\n#Most popular names\nthe_mp_name_result.head(6)","2b33457d":"unique_rnk_name_query = \"\"\"\nSELECT\n    name,\n    gender,\n    appearances,\n    RANK() OVER (PARTITION BY gender ORDER  BY appearances) position\nFROM (\"\"\"+ most_popular_name_query +\"\"\")\n\"\"\"\n\nunique_name_query = \"\"\"\nSELECT\n    name,\n    gender,\n    appearances\nFROM (\"\"\"+ unique_rnk_name_query +\"\"\")\nWHERE position = 1\nORDER BY gender, name\n\"\"\"\n\nunique_name_result = bq.query(unique_name_query).to_dataframe()\n\n# Display the results\nfemale_name = \"\"\nmale_name = \"\"\nprint('Unique Name List:')\nprint('Gender: Female. \\nNumber of appearances: ' + str(unique_name_result[unique_name_result['gender'] == 'F'].iloc[0]['appearances']) + '\\nList:')\n\nfor i, name in enumerate(unique_name_result[unique_name_result['gender'] == 'F']['name']):\n    female_name =  female_name + \" \"+ name\nprint(female_name)\n    \nprint('\\nGender: Male. \\nNumber of appearances: '+ str(unique_name_result[unique_name_result['gender'] == 'M'].iloc[0]['appearances'])  + '\\nList:')\n\nfor i, name in enumerate(unique_name_result[unique_name_result['gender'] == 'M']['name']):\n    male_name =  male_name + \" \"+ name\nprint(male_name)","0730994d":"both_sex_name_query =\"\"\"\nSELECT\n    name\nFROM (\"\"\"+ most_popular_name_query +\"\"\")\nGROUP BY name\nHAVING COUNT(*) = 2\nORDER BY name\n\"\"\"\n\nboth_sex_name_result = bq.query(both_sex_name_query).to_dataframe()\n\nprint('Unisex names: \\nNumber of unisex names: ' + str(both_sex_name_result.shape[0]) + '\\nList of names: ')\n\nunisex_names = \"\"\n\nfor i, name in enumerate(both_sex_name_result['name']):\n    unisex_names = unisex_names + \" \" + name\nprint(unisex_names)","773fb21f":"limit = 5\nmin_appearances = 1000\n\nclean_unisex_subquery = \"\"\"\nSELECT\n    name,\n    appearances\nFROM (\"\"\"+ most_popular_name_query +\"\"\")\nWHERE name IN (\"\"\"+ both_sex_name_query + \"\"\") AND gender =\n\"\"\"\n\nclean_unisex_query = \"\"\"\nSELECT\n    FEMALES.name\nFROM (\"\"\"+ clean_unisex_subquery + \"\"\" 'F') FEMALES\nINNER JOIN (\"\"\"+ clean_unisex_subquery  + \"\"\" 'M') MALES ON FEMALES.name = MALES.name\nWHERE FEMALES.appearances\/MALES.appearances <= \"\"\"+ str(limit) +\"\"\" AND MALES.appearances\/FEMALES.appearances <= \"\"\" + str(limit) + \"\"\" \nAND FEMALES.appearances > \"\"\" + str(min_appearances) + \"\"\" AND MALES.appearances > \"\"\" + str(min_appearances) + \"\"\"\nORDER BY FEMALES.name\n\"\"\"\n\n\nclean_unisex_result = bq.query(clean_unisex_query).to_dataframe()\n\nprint('Unisex names: \\nNumber of unisex names: ' + str(clean_unisex_result.shape[0]) + '\\nPercentage of reduction: '+ str(round(((both_sex_name_result.shape[0]-clean_unisex_result.shape[0])\/both_sex_name_result.shape[0])*100 , 2)) + '% \\nList of names: ')\n\nunisex_clean_names = \"\"\n\nfor i, name in enumerate(clean_unisex_result['name']):\n    unisex_clean_names = unisex_clean_names + \" \" + name\nprint(unisex_clean_names)\n","e5fc68e5":"uknowns_query = most_popular_name_query + \"\"\"HAVING name = 'Unknown'\"\"\"\n\nuknowns_result = bq.query(uknowns_query).to_dataframe()\n\nprint('There are a total number of ' + str(uknowns_result['appearances'].sum()) + ' unknowns')\nprint('Females: ' + str(uknowns_result[uknowns_result['gender'] == 'F'].iloc[0]['appearances']) )\nprint('Males: '+ str(uknowns_result[uknowns_result['gender'] == 'M'].iloc[0]['appearances']))","86bf130e":"uknowns_by_year_query = \"\"\"\nSELECT \n    year,\n    SUM(number) appearances\nFROM\n    `bigquery-public-data.usa_names.usa_1910_current`\nGROUP BY  year, name\nHAVING name = 'Unknown'\nORDER BY year\n\"\"\"\n\nuknowns_by_year_result = bq.query(uknowns_by_year_query).to_dataframe()\n\nsns.set_style(\"darkgrid\")\nfig, ax = plt.subplots()\nsns.lineplot(x=\"year\", y=\"appearances\", \n             data=uknowns_by_year_result)\nplt.title('Unknown appearances by year')\nplt.show()","ffbe2869":"# USA Names - Data Visualization\nVisualization of the data present in the dataset *usa-names*.\n\nThe issues questions are answered:\n- Most popular names by year\n- Most popular names since 1910\n- Less popular names\n- Unisex names\n- Uknowns & uknowns by year\n\n\n### Import Libraries","3da81320":"### What are the most popular name of USA since 1910?","083a1b82":"This list has a lot of weird results. For example:\n- Emily, Giselle, Gladys, Sylvia ... (sounds weird for males)\n- Adam, Mario, Pablo, Tristan ... (sounds weird for females)\n\n**How to clean the results?** Using the proportion if the proportion is in the same magnitude the name could be use for male and females.","d05e2dc0":"Something peculiar found is that the name **Unknown**\n### How many uknowns are?\n","cfc3dfa5":"Is this a failure? Probably\nHas this improved year after year? Let's see this","8fcc1caf":"### List of Unique Names","19ac9d4f":"### What are the most popular name of USA each year?","8d6be9d0":"### What names are used for both sex?","93207adb":"## Data exploration\n\nName of tables, size of data, number of rows"}}