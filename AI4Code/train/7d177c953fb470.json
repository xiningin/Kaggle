{"cell_type":{"6e61433a":"code","8cf45b59":"code","0bded3c2":"code","3114205f":"code","cd8470de":"code","fbb9b70a":"code","997dc1df":"code","c714b555":"code","2feff019":"code","a5b3d58c":"code","cf4111b6":"code","3a8db555":"code","419604de":"code","0dd391dd":"code","6ab9ebf4":"code","c05941c5":"code","663935b5":"code","d4c07dad":"code","cee5a04d":"code","e5619c9a":"code","16f18fe9":"code","f84b166d":"code","7ff4b23a":"code","f2fe5856":"code","6878d4f7":"code","329f6679":"markdown","cfe9e45b":"markdown","a1d1431b":"markdown","b4a99c3e":"markdown","d189106d":"markdown","6ed048c2":"markdown","60574854":"markdown","39992036":"markdown","c41e3f7d":"markdown","0bc362ef":"markdown","0f6f1f87":"markdown","ffad7b62":"markdown","da10090f":"markdown","faf341b7":"markdown","12529da1":"markdown","78febe75":"markdown","7812a7a4":"markdown","b3d1cade":"markdown","d5c81148":"markdown","60549edc":"markdown","3ab2f296":"markdown","1617c358":"markdown","db643add":"markdown","009e1975":"markdown","0cfd8a7b":"markdown","c67195cf":"markdown","8de6adbb":"markdown","3ccc1b84":"markdown","b37edab8":"markdown","54c51bfc":"markdown","53c9ef9c":"markdown","7393d87c":"markdown","f4cedf0d":"markdown","f718a099":"markdown"},"source":{"6e61433a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport itertools\nimport matplotlib.ticker as ticker\nfrom statsmodels.graphics.api import qqplot\nimport statsmodels\nfrom statsmodels.tsa.statespace.sarimax import SARIMAX\nfrom statsmodels.tsa.stattools import adfuller\nimport folium\nfrom folium.plugins import HeatMap\nimport statsmodels as sm\nimport matplotlib.ticker as ticker\nimport statsmodels.api as sm\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nfrom statsmodels.tsa.arima_model import ARMA\nfrom statsmodels.tsa.statespace.sarimax import SARIMAX","8cf45b59":"def csv(data):\n\n    read_csv = pd.read_csv(data, encoding=\"latin-1\")\n\n    return ( read_csv )\n\ndef info (b):\n    infor = b.info()\n\n    null = b.isnull().sum().sort_values(ascending = False)\n\n    print (infor)\n\n    print (null)\n\ndef dropna (c):\n    new = c.dropna(how = \"any\")\n    return new\n\ndef wma (data , N):\n    weights = np.arange(1,N+1)\n    wma = data.rolling(N).apply(lambda element: np.dot(element, weights)\/weights.sum(), raw=True)\n    return wma","0bded3c2":"df = pd.read_csv('..\/input\/crimes-in-boston\/crime.csv', encoding='latin-1')\n\ndf.head()","3114205f":"df.info","cd8470de":"df = df.rename(columns = {\"INCIDENT_NUMBER\":\"NUMBER\",\"OFFENSE_CODE\":\"CODE\",\"OFFENSE_CODE_GROUP\":\"GROUP\"})\ndf.columns","fbb9b70a":"plt.figure(figsize=(8,8))\nsns.heatmap(df.isnull())\nplt.xlabel('Columns')\nplt.ylabel('Rows')\nplt.show()","997dc1df":"df = df.drop([\"SHOOTING\",\"NUMBER\",\"UCR_PART\"],axis = 1)\n\n","c714b555":"df = dropna(df)","2feff019":"plt.figure(figsize=(8,8))\nsns.heatmap(df.isnull())\nplt.xlabel('Columns')\nplt.ylabel('Rows')\nplt.show()","a5b3d58c":"df.index = pd.DatetimeIndex(df.OCCURRED_ON_DATE)\n\n\ndf[[\"DATE\",\"TIME\"]]=df['OCCURRED_ON_DATE'].str.split(\" \",expand=True) \n\n\ndfp = df.resample('D').size().reset_index()\n\ndfp.columns = ['date','count']\n\n\n\nd = dfp['date']\nc = dfp['count']\ndfp.head()\n\n","cf4111b6":"c_wma = wma(c,30)\n\nplt.figure(figsize = (15,12))\n\n\nplt.plot(d,c,lw=1)\n\n\nplt.plot(d,c_wma,lw=3)\n\n\nplt.title(\"Number of Crime  & 30-day weighted moving average\")\n\nplt.xlabel('Date')\n\nplt.ylabel('Number of Crime ')\n\nplt.legend(['Number of Crime','30-days WMA'])\n\n\nplt.show()","3a8db555":"\n\nres = sm.tsa.seasonal_decompose(c,freq=365,model=\"additive\")\n\ntrend = res.trend\nseasonal = res.seasonal\nresidual = res.resid\n\nfig,ax=plt.subplots(figsize = (17,12))\nax1 = fig.add_subplot(411)\n\nax1.plot(d,c, label='Original')\nax1.legend(loc='best')\n\nax2 = fig.add_subplot(412)\n\nax2.plot(d,trend, label='Trend')\nax2.legend(loc='best')\nax3 = fig.add_subplot(413)\n\nax3.plot(d,seasonal,label='Seasonality')\nax3.legend(loc='best')\n\nax4 = fig.add_subplot(414)\n\nax4.plot(d,residual, label='Residuals')\nax4.legend(loc='best')\nplt.tight_layout()\n","419604de":"train1 = dfp.copy()\ntrain1['count']=train1['count'].diff(1)\n\n\nplt.figure(figsize = (15,8))\n\n\n\n\nplt.plot( train1['date'],train1['count'],label='d=1')\nplt.legend(loc='best')\n\n\n\n\nplt.show()","0dd391dd":"\ntrain1 = train1.dropna()\n\n\nfig = plt.figure(figsize=(12,8))\n \nax1 = fig.add_subplot(211)\nfig = sm.graphics.tsa.plot_acf(train1['count'], lags=15,ax=ax1)\n\nfig.tight_layout()\n \nax2 = fig.add_subplot(212)\nfig = sm.graphics.tsa.plot_pacf(train1['count'], lags=15, ax=ax2)\n\nfig.tight_layout()\nplt.show()","6ab9ebf4":"\narma_mod = ARMA(dfp['count'],(4,1,2)).fit()\n\n\nsummary = (arma_mod.summary2(alpha=.05, float_format=\"%.8f\"))\nprint(summary)","c05941c5":"\n\nresid = arma_mod.resid\nfig = plt.figure(figsize=(12,8))\nax = fig.add_subplot(111)\nfig = qqplot(resid, line='q', ax=ax, fit=True)","663935b5":"arma_mod.forecast()[0]","d4c07dad":"df = df.loc[df['YEAR'].isin([2017,2018])]\ndf.head()","cee5a04d":"plt.figure(figsize = (7,5))\nsns.countplot(x = df.YEAR)\nplt.show()","e5619c9a":"plt.figure(figsize = (8,5))\nsns.countplot(x = df.DAY_OF_WEEK)\nplt.show()","16f18fe9":"plt.figure(figsize = (8,8))\nlabel = 'Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'\nsize_month = []\n\nfor i in range(12):\n    i+=1\n    size_month.append(len(df[df[\"MONTH\"]==i]))\n\nplt.pie(size_month, autopct = '%1.1f%%',labels = label,shadow = True)","f84b166d":"plt.figure(figsize = (10,5))\nsns.countplot(x = df.MONTH)\nplt.show()","7ff4b23a":"plt.figure(figsize = (12,5))\nsns.countplot(x = df.HOUR)\nplt.show()","f2fe5856":"\n# Create basic Folium crime map\ncrime_map = folium.Map(location=[42.36,-71.07], \n                      zoom_start = 11.5,min_zoom = 11.5)\n\n# Add data for heatmp \ndata_heatmap = df[df.YEAR == 2017]\ndata_heatmap = df[['Lat','Long']]\ndata_heatmap = [[row['Lat'],row['Long']] for index, row in data_heatmap.iterrows()]\nHeatMap(data_heatmap, radius=10).add_to(crime_map)\n\n# Plot!\ncrime_map","6878d4f7":"# Street Robber\ncrime_map = folium.Map(location=[42.32,-71.07], \n                      zoom_start = 11.5,min_zoom = 11.5)\n\n# Add data for heatmp \ndata_heatmap = df[df.YEAR == 2017]\ndata_heatmap = df[['Lat','Long']]\ndata_heatmap = df[df['CODE'] == 301]\n\ndata_heatmap = [[row['Lat'],row['Long']] for index, row in data_heatmap.iterrows()]\nHeatMap(data_heatmap, radius=10).add_to(crime_map)\n\n# Plot!\ncrime_map","329f6679":"## Applied the order of 4, 1, 2 for ARIMA Model","cfe9e45b":"# Section 3","a1d1431b":"### Preparing the time series data","b4a99c3e":"## Ploting decomposed time series plot","d189106d":"# Section 1","6ed048c2":"### Basic information about this data","60574854":"## Forecast the next value","39992036":"### So that, I take the ARIMA (4,1,2), and test it in my further process.","c41e3f7d":"## Drop the NA values","0bc362ef":"## Applied the Interpreting QQ Plot","0f6f1f87":"## Ploting the Weighted Moving Average chart","ffad7b62":"# Geographical Visualizations","da10090f":"## Check the NA values","faf341b7":"#### From the result, it means this model works well.","12529da1":"### After checking the NA, I found the dataset has been clean up, so I move to the next part.","78febe75":"### Number of crime occuarred in 2017","7812a7a4":"# United State House Pirce Index Analysis\n","b3d1cade":"## Applied first-order difference","d5c81148":"## Finding the orders of AR and MA","60549edc":"### Import libraries","3ab2f296":"### Number of Crime in weekdays","1617c358":"# Section 2","db643add":"### Import functions","009e1975":"### Number of crime in different months","0cfd8a7b":"# Prediction Analysis for Number of Crime","c67195cf":"### Number of Street Robbery occuarred in 2017","8de6adbb":"# Descriptive visualization","3ccc1b84":"# Data Preprocces","b37edab8":"## Check the NA value once more time","54c51bfc":"### Number of crime in different times of a day","53c9ef9c":"## Import dataset ","7393d87c":"#### In this Section, I used the ARIMA model to predict this time serise subdata","f4cedf0d":"#### Since the data of year of 2015 and 2018 are not complete, I choose the number of crime for year 2016, 2017\n","f718a099":"## Change the name of columns"}}