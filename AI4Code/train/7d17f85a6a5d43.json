{"cell_type":{"37c8cd1c":"code","844c40f1":"code","1d38d0cb":"code","1ebdcb90":"code","3c69aa09":"code","53d5100e":"code","7eb4c108":"code","8f005a5c":"code","e2ae7099":"code","dafb22b0":"code","aa116462":"code","3cae725e":"code","f2d7f4ae":"code","1ddbcc36":"code","51f98cf7":"code","185b7163":"code","42459f13":"code","fc65c5ca":"code","abddeb65":"code","bb83b29f":"code","578fc757":"code","cabb707d":"code","4f59cd62":"code","b55ad8af":"code","fb7ed5f2":"code","101314e4":"code","37fdb7bf":"code","3a5658af":"code","73225e89":"code","caf0fd9a":"code","6757551c":"code","351bef67":"code","2db9ef0c":"code","4d84035a":"code","7a03eee5":"code","414d77f6":"code","ed54de7f":"code","87357682":"code","c92360e6":"code","fede8d6a":"code","c4ce2d36":"code","1d5916f3":"code","421c4567":"code","06cf32df":"code","c7756b9d":"code","5eaf0b6c":"code","e524b4eb":"markdown","e516b560":"markdown","b774f394":"markdown"},"source":{"37c8cd1c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","844c40f1":"data= pd.read_csv(\"..\/input\/data.csv\")","1d38d0cb":"data.info()","1ebdcb90":"data.head()","3c69aa09":"data.columns","53d5100e":"#count and groupby the nationality column\nprint(data[\"Nationality\"].value_counts(dropna=False))","7eb4c108":"data_new= data.head()\ndata_new","8f005a5c":"melted=pd.melt(frame=data_new, id_vars=\"Name\", value_vars=[\"Overall\",\"Potential\"])\nmelted","e2ae7099":"#Reverse melting\nmelted.pivot(index=\"Name\", columns=\"variable\", values=\"value\")","dafb22b0":"data1=data.head()\ndata2=data.tail()\nconcat_data_row= pd.concat([data1,data2], axis=0, ignore_index=True) \n#by axis=0 add data frames one after other\n#ignore_index : create new index for rows\nconcat_data_row","aa116462":"data1=data[\"Name\"].head()\ndata2=data[\"Nationality\"].head()\nconcat_data_col= pd.concat([data1,data2], axis=1)\n#by axis=0 add data frames one after other\n#ignore_index : create new index for rows\nconcat_data_col","3cae725e":"data.dtypes","f2d7f4ae":"#Convert column type\ndata[\"Overall\"]= data[\"Overall\"].astype(\"float\", error_bad_lines=False)","1ddbcc36":"data.dtypes","51f98cf7":"#data frames from dictionary\ncountry=[\"Turkey\", \"Greece\", \"Russia\"]\npopulation=[\"70\",\"80\",\"100\"]\nlist_label=[\"country\",\"population\"]\nlist_col=[country,population]\nzipped=list(zip(list_label,list_col)) \ndata_dict=dict(zipped) #convert to dictionary\ndf=pd.DataFrame(data_dict)\ndf","185b7163":"#add new column = Brodcasting: Create new column and assign different value to entire column\ndf[\"capital\"]=[\"Ankara\",\"Athens\",\"Moscow\"]\ndf\n","42459f13":"df[\"income\"]=0 #Boradcasting entire column\ndf","fc65c5ca":"#plotting all data\ndata1=data.loc[:,[\"Strength\",\"LongShots\",\"Aggression\"]]\ndata1.plot()","abddeb65":"#divide into subplots\ndata1.head(100).plot(subplots=True)\nplt.show()","bb83b29f":"data1.head(100).plot(kind=\"scatter\", x=\"Strength\", y=\"Aggression\")\nplt.show()","578fc757":"data1.plot(kind=\"hist\", y=\"LongShots\",bins=50,range=(0,250),normed=True) #normed normalize etmek","cabb707d":"#histogram subplot with cumulative and non-cumulative\nfig,axes= plt.subplots(nrows=2,ncols=1)\ndata1.plot(kind=\"hist\", y=\"Strength\", bins=50, range=(0,250), normed=True, ax=axes[0])\ndata1.plot(kind=\"hist\", y=\"Strength\", bins=50, range=(0,250), normed=True, ax=axes[1], cumulative=True)\nplt.savefig(\"graph.png\")\nplt","4f59cd62":"#Pandas Time Series\ntime_list=[\"1992-03-08\", \"1992-04-12\"]\nprint(type(time_list[1])) #we want to convert string to daettime object\ndatetime_object=pd.to_datetime(time_list)\nprint(type(datetime_object))","b55ad8af":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\ndata2=data.head()\ndate_list=[\"1992-01-10\",\"1992-02-10\",\"1992-03-10\",\"1993-03-15\",\"1993-03-16\"]\ndatetime_object= pd.to_datetime(date_list)\ndata2[\"date\"]=datetime_object\n#Lets make date as index\ndata2=data2.set_index(\"date\")\ndata2\n","fb7ed5f2":"#Now we can select according to our date index\nprint(data2.loc[\"1993-03-16\"])\nprint(data2.loc[\"1993-03-10\":\"1993-03-16\"])","101314e4":"data.head()","37fdb7bf":"print(data.index.name)","3a5658af":"data.index.name=\"index_name\"\ndata.head()","73225e89":"data=data.drop([\"Unnamed: 0\"],axis=1)","caf0fd9a":"data.head()\ndata3= data.copy() #deep copy\ndata3.index=range(100,18307,1) #index start from 100. It's arbitrary value\ndata3.index.name=\"index_name\"\ndata3.head()","6757551c":"data4=data3.set_index(\"ID\")","351bef67":"x=data[data['Name'].str.contains(\"Ibrahim\")] #search a substring\nx","2db9ef0c":"data5=data.set_index([\"Club\",\"Nationality\"])\ndata5.head(100)","4d84035a":"s=(data.groupby(\"Nationality\").groups)\ngrouped = data.groupby('Nationality')\nprint(type(grouped))\n#for name,group in grouped:\n#    print(name)\n#    print(group)\ngrouped.get_group('Turkey') ","7a03eee5":"s","414d77f6":"#group by nationality and sort by potential\ngr=data.sort_values(['Potential'],ascending=False).groupby('Nationality').head(500)\ngr = gr.groupby('Nationality')\ngr.get_group('Turkey')","ed54de7f":"data.pivot(index='ID', columns=\"Nationality\", values=\"Potential\")","87357682":"data","c92360e6":"data.reset_index()","fede8d6a":"age_group=data.groupby(\"Club\")\nage_group.get_group(\"FC Barcelona\")","c4ce2d36":"data.reset_index()\n","1d5916f3":"data.reset_index()\nage_group=data.groupby(\"Club\")\nprint(age_group)\nage_group.get_group(\"FC Barcelona\").Age.mean()","421c4567":"data.info()","06cf32df":"data[data.Age>38]","c7756b9d":"data=data.reset_index()","5eaf0b6c":"#Important. put na as 2nd parameter to ignore Nan\ndata[data['Club'].str.contains(\"Galatasaray\",na=False)]","e524b4eb":"**In this tutorial I used FIFA dataset**","e516b560":"**Classify the players according to their nationality and count them.**","b774f394":"**Import FIFA dataset**"}}