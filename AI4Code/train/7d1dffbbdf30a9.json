{"cell_type":{"171f4a2a":"code","c6366fb9":"code","158771b7":"code","a508ec84":"code","61cd48e2":"code","6560fbe4":"code","97cc5a1b":"code","596d68c8":"code","e7e7d279":"code","9bbfcae6":"code","c31da05e":"code","4f74d043":"code","e51049fb":"code","43cf86cf":"code","b54e9a80":"code","11ff6c3c":"code","b4c3b5f6":"code","fbf85336":"code","61495238":"code","ab07e6e3":"markdown","466e9b16":"markdown","f465f8bb":"markdown","654c9288":"markdown","873cecee":"markdown","0c1a0055":"markdown"},"source":{"171f4a2a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c6366fb9":"!pip install pycaret","158771b7":"import pandas as pd\ntitanic_train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntitanic_train.head()","a508ec84":"titanic_test = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntitanic_test.head()","61cd48e2":"# Submission File\nsub = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","6560fbe4":"# Survived is a binary column hence imported classification module\nfrom pycaret.classification import* \n\nclf1 = setup(data = titanic_train, ignore_features = ['PassengerId', 'Name', 'Ticket'], target = 'Survived')","97cc5a1b":"# comparing all models\ncompare_models()","596d68c8":"# Tune the best performing model - LightGBM\ntuned_lightgbm = tune_model('lightgbm')","e7e7d279":"# Tune the best performing model - LightGBM\ntuned_lightgbm_auc = tune_model('lightgbm', optimize = 'AUC')","9bbfcae6":"# Tune the best performing model - XGBoost\ntune_xgb_titanic = tune_model('xgboost', n_iter = 100, )","c31da05e":"# evaluate_model(tune_xgb_titanic)\nevaluate_model(tuned_lightgbm_auc)","4f74d043":"# final_xgboost = finalize_model(tune_xgb_titanic)\nfinal_lgbm = finalize_model(tuned_lightgbm_auc)","e51049fb":"# print(final_xgboost)\nprint(final_lgbm)","43cf86cf":"titanic_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntitanic_test.head()","b54e9a80":"# predict on hold-out - \n# pred_holdout = predict_model(final_xgboost)\npred_holdout = predict_model(final_lgbm)","11ff6c3c":"# predict on TEST data\n# pred_test_data = predict_model(final_xgboost, data = titanic_test)\npred_test_data = predict_model(final_lgbm, data = titanic_test)","b4c3b5f6":"pred_test_data.head()","fbf85336":"!pwd","61495238":"sub['Survived'] = round(pred_test_data['Score']).astype(int)\nsub.to_csv('submission.csv',index=False)\nsub.head()","ab07e6e3":"# **Evaluate Model**","466e9b16":"## Submission File Preparation","f465f8bb":"\n# **Step 2: Initializing the setup**","654c9288":"# **Finalize Model**","873cecee":"# **Comparing all Models**","0c1a0055":"#  [](http:\/\/)**PREDICT ON TEST DATA**"}}