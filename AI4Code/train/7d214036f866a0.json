{"cell_type":{"9d1b8fe3":"code","43590f2b":"code","523d1a6c":"code","ab1397a6":"code","7432b433":"code","a14f9fb0":"code","4bd45c3d":"code","2d2be645":"code","c86b9143":"code","0118e42c":"code","01f95d68":"code","72dd00ac":"code","3098df86":"code","37c1554a":"code","ea8dfcd3":"code","5668aa8e":"code","0f538f44":"code","dab25207":"code","128075f8":"code","0247f35b":"code","b5051b97":"code","33ba7d5a":"code","7bfa8f37":"code","8137a735":"code","d66acb51":"code","cdecf692":"code","a691f99f":"code","78686d34":"code","c40197fe":"code","06d87bdc":"code","a5794d40":"code","5f259833":"code","3f8b5e7d":"code","86cf61ac":"code","362f42fc":"code","39dbbb0f":"code","269cc404":"code","55ba8da2":"code","89fe7937":"markdown","10a500cf":"markdown","8a9c8ecc":"markdown","9d5e178a":"markdown","00f398ad":"markdown","1448d6b6":"markdown","1c578289":"markdown","da1ecb88":"markdown","8c3e7d28":"markdown","a01f6284":"markdown","5dc6c116":"markdown","f7d4d1ae":"markdown","80d185fe":"markdown","d25c5a63":"markdown","6bcebe7f":"markdown","aff70f0e":"markdown","af641b6a":"markdown","a4671b4f":"markdown","ef78b77f":"markdown","6135b835":"markdown","6498db38":"markdown","15beb351":"markdown","4ff5d8ff":"markdown","10b3b999":"markdown","1cd5f9c6":"markdown","6aa13e89":"markdown","bef3a3f4":"markdown","bcbb810b":"markdown","4f2da112":"markdown","ec18d24a":"markdown","cdada717":"markdown","dd3647d9":"markdown"},"source":{"9d1b8fe3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom tqdm.auto import tqdm \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","43590f2b":"def plot_bid(bid):\n    fig, ax1 = plt.subplots(figsize = (6, 4)) # original (12, 8)\n\n    tmp = train.loc[train['breath_id'] == bid].reset_index(drop=True)\n    ax2 = ax1.twinx()\n\n    ax1.plot(tmp['time_step'], tmp['pressure'], 'm-', label='pressure')\n    ax1.plot(tmp['time_step'], tmp['u_in'], 'g-', label='u_in')\n    ax2.plot(tmp['time_step'], tmp['u_out'], 'b-', label='u_out')\n\n    ax1.set_xlabel('Timestep')\n    \n    R = tmp['R'][0]\n    C = tmp['C'][0]\n    ax1.set_title(f'breath_id:{bid}, R:{R}, C:{C}')\n\n    ax1.legend(loc=(1.1, 0.8))\n    ax2.legend(loc=(1.1, 0.7))\n    plt.show()","523d1a6c":"def plot_time_step(bid):\n    plt.figure()\n    tmp = train.loc[train['breath_id'] == bid].reset_index(drop=True)\n    R = tmp['R'][0]\n    C = tmp['C'][0]\n    plt.title(f'breath_id:{bid}, R:{R}, C:{C}')\n    plt.ylabel('Timestep')\n    plt.xlabel('Row No.')\n\n    plt.plot(train.loc[train['breath_id'] == bid]['time_step'].tolist())\n    plt.show()","ab1397a6":"oj = os.path.join","7432b433":"path = '..\/input\/ventilator-pressure-prediction'\ntrain = pd.read_csv(oj(path, 'train.csv'))\ntest  = pd.read_csv(oj(path, 'test.csv'))\nsub   = pd.read_csv(oj(path, 'sample_submission.csv'))","a14f9fb0":"%%time\ntrain['time_delta'] = train.groupby('breath_id')['time_step'].diff()","4bd45c3d":"train","2d2be645":"# number of unique\ntrain.nunique()","c86b9143":"bid_list = list(train['breath_id'].unique())","0118e42c":"print(len(bid_list))\nbid_list[:10]","01f95d68":"for bid in bid_list[:3]:\n    plot_bid(bid)","72dd00ac":"6036000 \/ 75450","3098df86":"plot_time_step(1)","37c1554a":"#first_one_list = []\n#last_one_list  = []\n#outlier_bid_list = []\n#for bid in tqdm(bid_list):\n#    tmpdf = train.loc[train['breath_id'] == bid]['time_step'].reset_index(drop=True)\n#    first_one_list.append(tmpdf[0])\n#    last_one_list.append(tmpdf[79])\n#    if tmpdf[79] > 2.8:\n#        outlier_bid_list.append(bid)","ea8dfcd3":"%%time\nfirst_df = train.loc[0::80,:]\nlast_df = train.loc[79::80,:]\n\nfirst_one_list = list(first_df['time_step'])\nlast_one_list = list(last_df['time_step'])","5668aa8e":"list(last_df[last_df['time_step']>2.8]['breath_id'])","0f538f44":"%%time\noutlier_bid_list = list(last_df[last_df['time_step']>2.8]['breath_id'])","dab25207":"plt.hist(first_one_list, bins=100)\nplt.show()","128075f8":"plt.hist(last_one_list, bins=100)\nplt.show()","0247f35b":"plt.hist(last_one_list, bins=100)\nplt.ylim(0,5)\nplt.show()","b5051b97":"outlier_bid_list","33ba7d5a":"for bid in outlier_bid_list:\n    plot_bid(bid)","7bfa8f37":"plot_time_step(44245)","8137a735":"#no_prop_list = []\n#for bid in tqdm(bid_list):\n#    fx = train.loc[train['breath_id'] == bid]['time_step'].reset_index(drop=True)\n#\n#    x_max = 79\n#    y_max = fx[x_max]\n#    a = (fx[x_max] - fx[0]) \/ x_max\n#    \n#    for i in range(80):\n#        d = fx[i] - a * i\n#        if np.abs(d) > 0.1: # not proportional\n#            no_prop_list.append(bid)\n#            break","d66acb51":"no_prop_list = list(train.loc[train['time_delta']>0.15]['breath_id'].unique())","cdecf692":"for bid in no_prop_list:\n    plot_time_step(bid)","a691f99f":"broken_one_list = [3178, 16315, 18117, 24127, 28942, 39045, 46324, 54129, 55244, 72104, 76037, 87776, 104001, 119689, 120878]\nbroken_two_list = [36175, 38415, 44245, 55851, 74766, 109693, 111439]","78686d34":"def plot_double_bid(bid, time_delta=False):\n    fig = plt.figure(figsize = (12, 4))\n    ax1 = fig.add_subplot(1, 2, 1)\n    ax2 = fig.add_subplot(1, 2, 2)\n    \n    tmp = train.loc[train['breath_id'] == bid].reset_index(drop=True)\n\n    ts = []\n    td = []\n    if time_delta:\n        outlier = tmp.loc[tmp['time_delta'] > 0.15]\n        rw = list(outlier['id'])\n        ts = list(outlier['time_step'])\n        td = list(outlier['time_delta'])\n        \n    \n    R = tmp['R'][0]\n    C = tmp['C'][0]\n    ax1.set_title(f'breath_id:{bid}, R:{R}, C:{C}')\n    ax1.set_ylabel('Timestep')\n    ax1.set_xlabel('Row No.')\n\n    ymax = 3.0\n    ax1.set_ylim(0, ymax)\n\n    if time_delta:\n        rows = []\n        for a in rw:\n            aa = a % 80 - 2\n            if aa < 0:\n                aa += 80\n            rows.append(aa)\n            aa = a % 80 - 1\n            if aa < 0:\n                aa += 80\n            rows.append(aa)\n        ax1.vlines(rows, 0, ymax, \"red\", linestyles='dashed', alpha=0.2)\n\n    \n    ax1.plot(train.loc[train['breath_id'] == bid]['time_step'].tolist())\n\n    ##############################\n    ax3 = ax2.twinx()\n\n    ax2.plot(tmp['time_step'], tmp['pressure'], 'm-', label='pressure')\n    ax2.plot(tmp['time_step'], tmp['u_in'], 'g-', label='u_in')\n    ax3.plot(tmp['time_step'], tmp['u_out'], 'b-', label='u_out')\n\n    ax2.set_xlabel('Timestep')\n    \n    R = tmp['R'][0]\n    C = tmp['C'][0]\n    ax2.set_title(f'breath_id:{bid}, R:{R}, C:{C}')\n\n    ymax = 100\n    ax2.set_ylim(0, ymax)\n    \n    if time_delta:\n        lines = []\n        for a, b in zip(ts, td):\n            lines.append(a-b)\n            lines.append(a)\n        ax2.vlines(lines, 0, ymax, \"red\", linestyles='dashed', alpha=0.2)\n    \n    ax2.legend(loc=(1.1, 0.8))\n    ax3.legend(loc=(1.1, 0.7))\n    \n    fig.tight_layout()\n    plt.show()\n","c40197fe":"for bid in broken_one_list:\n    plot_double_bid(bid, time_delta=True)","06d87bdc":"for bid in broken_two_list:\n    plot_double_bid(bid, time_delta=True)","a5794d40":"# u_out1_timing\n# generate empty df\n#df = pd.DataFrame(columns=['id', 'breath_id', 'R', 'C', 'time_step', 'u_in', 'u_out', 'pressure'])\n#for i in tqdm(bid_list):\n#    breath_one = train[train['breath_id']==i].reset_index(drop = True)\n#    tmp_df=breath_one[breath_one['u_out']==1].head(1)\n#    df = df.append(tmp_df)\n","5f259833":"%%time\n# u_out1_timing : spped up\ntrain['u_out_diff'] = train['u_out'].diff()\ntrain['u_out_diff'].fillna(0, inplace=True)\ntrain['u_out_diff'].replace(-1, 0, inplace=True)\ndf = train[train['u_out_diff']==1]","3f8b5e7d":"df","86cf61ac":"plt.hist(df['time_step'], bins=100)\nplt.show()","362f42fc":"plt.hist(df['time_step'], bins=100)\nplt.ylim(0,5)\nplt.show()","39dbbb0f":"df[(df['time_step']<0.95) | (df['time_step']>1.05)]","269cc404":"u_out1_outlier = list(df[(df['time_step']<0.96) | (df['time_step']>1.04)]['breath_id'])\nu_out1_outlier","55ba8da2":"for bid in u_out1_outlier:\n    plot_double_bid(bid, time_delta=True)","89fe7937":"# Add Features","10a500cf":"# Unique number in each column","8a9c8ecc":"The charts are similar except for breath_id: 16315.","9d5e178a":"44245 and 129878 are also outliers for time_step. All three have similar chart shapes.","00f398ad":"speed up version","1448d6b6":"# u_out1 outlier","1c578289":"It looks like a proportional straight line. I'll try to find out if everything is so.","da1ecb88":"All time_steps start at 0.","8c3e7d28":"The number of all time_steps will be 80.","a01f6284":"When expanded, there are two large chunks and seven outliers greater than 2.8. Let's take a look at that chart.","5dc6c116":"The shape of the chart after u_out becomes 1 is all the same. breath_id: 44245 has a slanted rise of u_out. Let's plot the time_step of 44245.","f7d4d1ae":"# EDA about u_out","80d185fe":"There is a chart that is broken in one place and a chart that is broken in two places. Separate them.","d25c5a63":"speed up, more!","6bcebe7f":"# ","aff70f0e":"u_out rises to 1.0 in around 1.0 seconds. Let's examine the distribution.","af641b6a":"breath_id is not a continuous number.","a4671b4f":"## EDA about time_step","ef78b77f":"### Start point","6135b835":"There seems to be a time_step that is not a proportional straight line. Let's find out.","6498db38":"The charts of 74766 and 109693 have different shapes. Only for 44245, when u_out rises, the time_step breaks overlap, and the rise of u_out is slanted.","15beb351":"# Let's plot the first three","4ff5d8ff":"There were 3 points.","10b3b999":"## The number of time_steps in each breath_id","1cd5f9c6":"# This EDA specializes in time_step and u_out. \n\nIf you find it useful, please upvote it. We plan to investigate other parameters in the future.\n\nChart Plot referred to [Ventilator Pressure Prediction: EDA, FE and models](https:\/\/www.kaggle.com\/artgor\/ventilator-pressure-prediction-eda-fe-and-models). Thank you very much.\n\nFollowing this, I made the u_in version: [EDA about u_in](https:\/\/www.kaggle.com\/marutama\/eda-about-u-in).\nPlease take a look here as well.\n\n**Note: The point where 'time_step' is strange is changed to a broken line. It was speeded up by calculating time_delta in advance. October 5th.**\n\nThe importance of the features introduced in the \"EDA about\" series below:\n- [EDA about: LSTM Feature Importance](https:\/\/www.kaggle.com\/marutama\/eda-about-lstm-feature-importance)\n\nAnd [finetune of Tensorflow Bi-LSTM EDA about](https:\/\/www.kaggle.com\/marutama\/finetune-of-tensorflow-bi-lstm-eda-about) is for Modeling.\n","6aa13e89":"speed up version","bef3a3f4":"It shows the time when time_step of this df rises to 1. Let's plot.","bcbb810b":"First, let's plot the time_step with breath_id = 1.","4f2da112":"Around 1.0 second, there are large chunks of each. However, there are likely to be outliers for 0.95 seconds or less and 1.05 seconds or more. Let's enlarge it.","ec18d24a":"### End point","cdada717":"There is one big lump in 2.5 seconds and four lumps around 2.7 seconds.\n\nLet's zoom in.","dd3647d9":"# EDA about time_step"}}