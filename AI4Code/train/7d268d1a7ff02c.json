{"cell_type":{"9dad84d7":"code","370dd860":"code","650d6e30":"code","7ff076d7":"code","0b5882fa":"code","a027219a":"code","7ca2ac35":"code","1da56f17":"code","2d02878f":"code","a417440d":"code","5fcf282a":"code","61815941":"code","0c51c300":"code","7ff86314":"code","3873e434":"code","e0ca64a9":"code","480a201a":"code","cb99fa6a":"markdown","6a55d20f":"markdown","9521bdcb":"markdown","e15ee2e1":"markdown","982a532d":"markdown","4697f2ec":"markdown"},"source":{"9dad84d7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","370dd860":"with open('..\/input\/hashcode-drone-delivery\/busy_day.in') as file:\n    data_list = file.read().splitlines()","650d6e30":"print('rows of grid,columns of grid,drones,turns, maxpay load in units(u):',data_list[0], \n      '\\n Different product types:',data_list[1],\n     '\\n product types weigh:',data_list[2],\n      '\\n warehouses:',data_list[3],\n      '\\n First warehouse location at first warehouse (row, column):',data_list[4],\n      '\\n Inventory of products:',data_list[5],\n      '\\n second warehouse location (row, column)  :',data_list[6],\n      '\\n Inventory of products at second ware house:',data_list[7],\n      '\\n Number of orders:',data_list[24],\n      '\\n First order to be delivery at:',data_list[25],\n      '\\n Number of items in order:',data_list[26],\n      '\\n Items of product types:',data_list[27]    )   ","7ff076d7":"# lets get all the 10 ware house co-ordinates\nware_house_locs = data_list[4:24:2]\nware_house_rows = [ware_house_r.split()[0] for ware_house_r in ware_house_locs]\nware_house_cols = [ware_house_c.split()[1] for ware_house_c in ware_house_locs]\n\nwarehouse_df = pd.DataFrame({'ware_house_row': ware_house_rows, 'ware_house_col': ware_house_cols}).astype(np.uint16)\nwarehouse_df","0b5882fa":"# Lets aggregate all the products available at their respoective ware houses\n\ncols=[f'ware_house_{i}' for i in range(len(warehouse_df))]\n\nproducts_df = pd.DataFrame([x.split() for x in data_list[5:24:2]]).T\n\nproducts_df.columns=cols","a027219a":"products_df","7ca2ac35":"# lets add weight of each product to product_df\n\nproducts_df['prod_weight']= data_list[2].split()","1da56f17":"products_df=products_df.astype('int')\nproducts_df","2d02878f":"# lets create a orders data frame\n\nmax_len_order=max([len(x.split()) for x in data_list[27:3775:3]])\n","a417440d":"cols_order=[f'prod_{i}' for i in range(max_len_order)]\n\norder_df = pd.DataFrame([x.split() for x in data_list[27:3775:3]]).fillna(0).astype('int')\n\norder_df.columns=cols_order\n\norder_df['order_items'] = data_list[26:3775:3]\n\norder_df['order_coor_x'] = [x.split()[0] for x in data_list[25:3775:3]]\norder_df['order_coor_y'] = [x.split()[1] for x in data_list[25:3775:3]]\n\norder_df=order_df.astype('int')\n\norder_df","5fcf282a":"order_df.dtypes","61815941":"# Distribution of orders\nimport seaborn as sns\nsns.scatterplot(data=order_df, x=\"order_coor_x\", y=\"order_coor_y\")#, hue=\"time\")","0c51c300":"#Distribution of the warehouses\nsns.scatterplot(data=warehouse_df, x=\"ware_house_row\", y=\"ware_house_col\")","7ff86314":"import matplotlib.pyplot as plt\n\nx = range(400)\ny = range(400,600)\nfig = plt.figure(figsize=(12,10))\nax1 = fig.add_subplot(111)\n\nax1.scatter(warehouse_df['ware_house_row'], warehouse_df['ware_house_col'], s=50, c='b', marker=\"o\", label='ware_house')\nax1.scatter(order_df['order_coor_x'], order_df['order_coor_y'], s=20, c='r', marker=\"x\", label='orders')\nplt.legend(loc='upper left');\nplt.show()","3873e434":"# Frequency of orders\nx= [len(x.split()) for x in data_list[27:3775:3]]\nx = pd.DataFrame(x, columns=[\"orders\"])\nax = sns.distplot(x)","e0ca64a9":"fig,ax = plt.subplots(1,1)\n\nax.hist(x.orders, [x for x in range(0,19)])\n\nplt.show()","480a201a":"sns.barplot(x=\"orders\", y=x.orders.value_counts(),data=x)","cb99fa6a":"The input file is a text file. From the file format mentioned in the pdf we can transform the data into 3 dataframes. \n* ware house dats\n* products data\n* Orders data","6a55d20f":"### Understanding the Data","9521bdcb":"# EDA","e15ee2e1":"# Will be updated. \n# Please upvote if you like this! ","982a532d":"### Let's understand how the orders are distributed around the warehouses","4697f2ec":"#   Problem Understanding\n\nThe Internet has profoundly changed the way we buy things, but the online shopping of today is likely not the end of that change\u037e after each purchase we still need to wait multiple days for physical goods to be carried to our doorstep. This is where drones come in \u00ad autonomous, electric vehicles delivering online purchases. Flying, so never stuck in traffic. As drone technology improves every year, there remains a major issue: how do we manage and coordinate all those drones?\n\n## Task\nGiven a hypothetical fleet of drones, a list of customer orders and availability of the individual products in warehouses, your task is to schedule the drone operations so that the orders are completed as soon as possible. You will need to handle the complications of multiple drones, customer orders, product types and weights, warehouses, and delivery destinations.\n"}}