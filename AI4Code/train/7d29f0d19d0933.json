{"cell_type":{"2ff9560d":"code","e673ac72":"code","c0480583":"code","d961dc29":"code","f3012c69":"code","db998794":"code","d0d7922f":"code","c9a063be":"code","9ca5bf10":"code","24392cfc":"code","3c574b34":"code","e0c5685c":"markdown","06186e42":"markdown","a511190f":"markdown","adf19a25":"markdown"},"source":{"2ff9560d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e673ac72":"meteor = pd.read_csv('..\/input\/meteorite-landings\/meteorite-landings.csv')\n\nmeteor = meteor[meteor.year != 2501]\nmeteor = meteor[meteor.year != 2101]","c0480583":"meteor","d961dc29":"from mpl_toolkits.basemap import Basemap\n# Extract the data we're interested in\nlat = meteor['reclat'].values\nlon = meteor['reclong'].values","f3012c69":"m = Basemap(projection='mill',llcrnrlat=-80,urcrnrlat=80, llcrnrlon=-180,urcrnrlon=180,lat_ts=20,resolution='c')\nfig = plt.figure(figsize=(12,10))\n\nx,y = m(lon,lat)\n\nplt.title(\"Locations of meteors (red)\")\nm.plot(x, y, \"o\", markersize = 5, color = 'red')\n\nm.drawcoastlines()\nm.drawcountries()\nm.fillcontinents(color='coral',lake_color='aqua')\nm.drawmapboundary()\nm.drawcountries()\nplt.show()","db998794":"from pandas import Series\ndef fig_p(data):\n    series=Series(data).value_counts().sort_index()\n    series.plot(kind='bar')","d0d7922f":"year = sorted(i for i in meteor['year'] if i >= 2000)\n\nplt.figure(figsize=(10,5))\nfig_p(year)\nplt.ylabel(\"Count\")\nplt.title(\"Number of meteors per year (>2000)\")","c9a063be":"import requests\nfrom bs4 import BeautifulSoup \nurlreq = requests.get('https:\/\/en.wikipedia.org\/wiki\/List_of_epidemics')\nif urlreq.status_code == 200:\n    print(\"Successful request\")\nelse:\n    print(urlreq.status_code)\nurl = urlreq.text\nsoup = BeautifulSoup(url, 'lxml')\n\nall_tables = soup.find_all('table')\nmy_table = soup.find('table', {'class':'wikitable sortable'})\n\nB1 = []\nB2 = []\nB3 = []\nB4 = []\nB5 = []\nB6 = []\n\nfor row2 in my_table.find_all('tr'):\n    cells2 = row2.find_all('td')\n    if len(cells2)== 6:\n        B1.append(cells2[0].find(text = True))\n        B2.append(cells2[1].find(text = True))\n        B3.append(cells2[2].find(text = True))\n        B4.append(cells2[3].find(text = True))\n        B5.append(cells2[4].find(text = True))\n        B6.append(cells2[5].find(text = True))\n\nzippedlist1 = list(zip(B1, B2, B3, B4, B5, B6))\nepidemic = pd.DataFrame(zippedlist1, columns=['Event', 'Date', 'Location','disease','Death toll','Ref'])\n","9ca5bf10":"epidemic","24392cfc":"year2 = []\n\nfor i in (epidemic['Date'].values.tolist()):\n    year2.append(i[0:4])\n\nyear2 = ([s.strip('\u2013') for s in year2])\nyear2 = ([s.strip('\\n') for s in year2])\nyear2 = list(map(int, year2))\n\nyear2 = sorted(i for i in year2 if i >= 2000 and i <=2013)\n\n\nplt.figure(figsize=(10,5))\nfig_p(year2)\nplt.ylabel(\"Count\")\nplt.title(\"Number of epidemics per year (>2000)\")","3c574b34":"series=Series(year).value_counts(normalize=True).sort_index()\nseries2=Series(year2).value_counts(normalize=True).sort_index()[0:14]\n\n\nx = np.array(list(range(2000, 2014, 1)))\n\nplt.figure(figsize=(10,5))\nplt.bar(x + 0.00, series, color = 'b', width = 0.25)\nplt.bar(x + 0.25, series2, color = 'g', width = 0.25)\nplt.legend(('meteors', 'epidemics'))\nplt.ylabel(\"Count\")\nplt.xlabel(\"Year\")\nplt.title(\"Normalized number of epidemics and meteors per year (>2000)\")\nplt.show()","e0c5685c":"**Introduction**\n\nI have been reading a lot of literature about the COVID 19 and I was intrigued about the source of it. By reviewing all kind of papers and books I got in to this one \"Viruses from Space and Related Matters\" by Chandra Wickramasinghe, Fred Hoyle, and John Watkins that caught my attention. So I started to look for some data and here are my findings. ","06186e42":"**Meteor data**","a511190f":"Epidemics data","adf19a25":"**Combination of the data sets**"}}