{"cell_type":{"c7b9b6e7":"code","a02deee5":"code","501b7dbf":"code","18b3a054":"code","b8fc63df":"code","d9d2c27a":"code","5b32b96b":"code","9c0db15b":"code","6ee84183":"code","a551a648":"code","b7637368":"code","653f69fc":"code","170322f1":"code","1ff2abf0":"code","e96d7b8d":"code","ebe74af2":"code","e05bdeed":"code","01f2d6be":"code","dc2569e8":"code","812bb5f8":"code","f8d9805f":"code","f23f5a8b":"code","3d3dfd87":"code","541cfded":"code","55a2dfe0":"code","372cd2e4":"code","42caabea":"code","6b31f26c":"code","c51465f3":"code","bcfff199":"code","5ea5f242":"code","828a06a2":"code","67f20421":"code","d17706a1":"code","b06c931c":"code","f9994f14":"code","4315e0d2":"code","f584d067":"code","e67071cc":"code","36e4dc3a":"code","596f006d":"code","8f8c14a6":"code","ef3f8e30":"code","c37d39ca":"code","29664b08":"code","135d2fd9":"code","0257f000":"code","ceeeea83":"code","dcd92463":"code","0cd5e05d":"code","a3798757":"code","d95c5ada":"code","71b56d3e":"code","8ccb329d":"code","dc8aa9ef":"code","516cccde":"code","7f23c136":"code","11bbf631":"code","47fb4f2a":"code","eb7a927c":"code","e6986a66":"code","1fcd9633":"code","932b2812":"code","32d8ae33":"code","633504eb":"code","dc9dfa79":"code","cd39a356":"code","336307cd":"code","8dad35b4":"code","eac81dce":"code","287e917e":"code","61ce199d":"markdown","96038e8f":"markdown","92e8a859":"markdown","f9ab96df":"markdown","932eada3":"markdown","1e8c8a96":"markdown","fa3365d4":"markdown","0a0ff1eb":"markdown","e843a7bc":"markdown","a25bae67":"markdown","a3e8ab7a":"markdown","1e1f595e":"markdown","46782b82":"markdown","fcac7cc4":"markdown","cbc9274f":"markdown","4b24a1e8":"markdown"},"source":{"c7b9b6e7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a02deee5":"##########################\n# Gerekli K\u00fct\u00fcphane ve Fonksiyonlar\n##########################\n!pip install lifetimes\n!pip install sqlalchemy\nfrom sqlalchemy import create_engine\nimport datetime as dt\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom lifetimes import BetaGeoFitter\nfrom lifetimes import GammaGammaFitter\nfrom lifetimes.plotting import plot_period_transactions\n\n!pip install mysql-connector-python\nimport mysql.connector","501b7dbf":"pd.set_option('display.max_columns', None)\npd.set_option('display.width', 500)\npd.set_option('display.float_format', lambda x: '%.4f' % x)\nfrom sklearn.preprocessing import MinMaxScaler","18b3a054":"# \u00fcst limitleri belirleme,\n# ayk\u0131r\u0131 de\u011ferlerin yukar\u0131dan %99 a\u015f\u0131\u011f\u0131dan %1  aras\u0131ndaki de\u011ferleri belirle. ayk\u0131r\u0131 de\u011ferlri buna ata\ndef outlier_thresholds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.01)\n    quartile3 = dataframe[variable].quantile(0.99)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit","b8fc63df":"def replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit","d9d2c27a":"!pip install openpyxl\ndf_ = pd.read_excel(\"\/kaggle\/input\/uci-online-retail-ii-data-set\/online_retail_II.xlsx\",\n                    sheet_name=\"Year 2010-2011\")\ndf = df_.copy()\ndf.shape","5b32b96b":"# credentials.\n# credentials.\ncreds = {'user': 'synan_dsmlbc_group_5_admin', #hangi kullanc\u0131 ile girece\u011fim, create etme, drop etme\n         'passwd': 'iamthedatascientist*****!', #\u015fifre\n         'host': 'db.github.rocks',\n         'port': 3306, # port kap\u0131 numaras\u0131e\n         'db': 'synan_dsmlbc_group_5'} #hang, veri taban\u0131nda","9c0db15b":" from sqlalchemy import create_engine\n\n# MySQL conection string.\nconnstr = 'mysql+mysqlconnector:\/\/{user}:{passwd}@{host}:{port}\/{db}'\n# conneticion nesnesi, giri\u015f bilgilerini bar\u0131nd\u0131r\u0131yor.\nconn = create_engine(connstr.format(**creds))\n\n# sunucuyu kapatma\n# conn.close()","6ee84183":"\n#databaseleri g\u00f6ster\npd.read_sql_query(\"show databases;\", conn)\n","a551a648":"# tablolar\u0131 g\u00f6ster\npd.read_sql_query(\"show tables\", conn)","b7637368":"#veri taban\u0131nda sorgu yapma\npd.read_sql_query(\"select * from online_retail_2010_2011 limit 10\", conn)","653f69fc":"# Python taraf\u0131ndan nas\u0131l ba\u011flanaca\u011f\u0131m.\nretail_mysql_df = pd.read_sql_query(\"select * from online_retail_2010_2011\", conn)\nretail_mysql_df.head()","170322f1":"type(retail_mysql_df)","1ff2abf0":"retail_mysql_df.shape","e96d7b8d":"retail_mysql_df.head()","ebe74af2":"retail_mysql_df.info()","e05bdeed":"#kopyas\u0131n\u0131 olu\u015fturup\ndf = retail_mysql_df.copy()","01f2d6be":"df.describe().T\n#ayk\u0131r\u0131 de\u011ferleri u\u00e7urmak gerekiyor.","dc2569e8":"#bo\u015f olan\u0131 sil\ndf.dropna(inplace=True)\ndf.sum()","812bb5f8":"#iadeler gelmesin.\ndf = df[~df[\"Invoice\"].str.contains(\"C\", na=False)]\ndf.count()","f8d9805f":"# mik\ndf = df[df[\"Quantity\"] > 0]","f23f5a8b":"# miktarlarda outl\u00fcer ile threahold ile bast\u0131r\nreplace_with_thresholds(df, \"Quantity\")","3d3dfd87":"# ayk\u0131r\u0131 de\u011ferleri bask\u0131la\nreplace_with_thresholds(df, \"Price\")","541cfded":"# son durumda nas\u0131l oldu?\ndf.describe().T","55a2dfe0":"# \ndf[\"TotalPrice\"] = df[\"Quantity\"] * df[\"Price\"]","372cd2e4":"#analiz g\u00fcn\u00fcnde\ntoday_date = dt.datetime(2011, 12, 11)","42caabea":"# her bir m\u00fc\u015fterinin faturas\u0131na gidipr\n#ikincisi lamda de\u011feri, m\u00fc\u015fterinin ya\u015f\u0131\n# frekans\u0131n 1den b\u00fcy\u00fck olmas\u0131 gerekiyor.\ncltv_df = df.groupby('Customer ID').agg({'InvoiceDate': [lambda date: (date.max() - date.min()).days,\n                                                         lambda date: (today_date - date.min()).days],\n                                         'Invoice': lambda num: num.nunique(),\n                                         'TotalPrice': lambda TotalPrice: TotalPrice.sum()})\ncltv_df.head()\n#index problemler","6b31f26c":"# hangi leveli sil, ilk say\u0131r\u0131 sil,\n# ilk leveldeki isimleri sildirk\ncltv_df.columns = cltv_df.columns.droplevel(0)\ncltv_df.head()","c51465f3":"# yenide\u011fi\u015fken adlar\u0131\ncltv_df.columns = ['recency', 'T', 'frequency', 'monetary']\ncltv_df.head()","bcfff199":"# form\u00fclde, ortalama kazan\u00e7 idi, RFM daki gibi toplam monetary de\u011fil. bu y\u00fczden b\u00f6l\u00fcuoyruz.\ncltv_df[\"monetary\"] = cltv_df[\"monetary\"] \/ cltv_df[\"frequency\"]\ncltv_df.head()","5ea5f242":"#\u00fccretsiz veridiklerimizi \u00e7\u0131kartal\u0131m\ncltv_df = cltv_df[cltv_df[\"monetary\"] > 0]\ncltv_df.head()","828a06a2":"# BGNBD i\u00e7in recency ve T'nin haftal\u0131k cinsten ifade edilmesi. Bu y\u00fczden 7ye b\u00f6l\u00fcyoruz\ncltv_df[\"recency\"] = cltv_df[\"recency\"] \/ 7\ncltv_df.head()","67f20421":"#Haftal\u0131k cinsten ifade edili\u015f\n#ya\u015f\u0131 da b\u00f6l\u00fc 7 yap\u0131yoruz.\ncltv_df[\"T\"] = cltv_df[\"T\"] \/ 7\ncltv_df.head()","d17706a1":"# frequency'nin 1'den b\u00fcy\u00fck olmas\u0131 gerekmektedir.\n# en az 1den fazl olunca m\u00fc\u015fteri diyebiliyoruz\ncltv_df = cltv_df[(cltv_df['frequency'] > 1)]\ncltv_df.head()","b06c931c":"\n# 2. BG-NBD Modelinin Kurulmas\u0131\n# a\u011f\u0131rl\u0131klara ceza uyguluyor. A\u015f\u0131r\u0131 \u00f6\u011frenmelerin \u00f6n\u00fcne ge\u00e7mek i\u00e7in ceza uygulan\u0131yor.\nbgf = BetaGeoFitter(penalizer_coef=0.001)\n# fit metofu ile fit ediliyor\nbgf.fit(cltv_df['frequency'],\n        cltv_df['recency'],\n        cltv_df['T'])\n# otomatik buluyor,","f9994f14":"# her bir m\u00fc\u015fterinin \u00f6zelinde kimler gelecek.\n#conditional_expected_number_of_purchases_up_to_time bunun yerine #predict kullanabilirsin\n# azalan \u015fekilde, kim al\u0131\u015fveri\u015f yapacak ben bunu biliyorum\nbgf.conditional_expected_number_of_purchases_up_to_time(1,\n                                                        cltv_df['frequency'],\n                                                        cltv_df['recency'],\n                                                        cltv_df['T']).sort_values(ascending=False).head(10)","4315e0d2":"# ayn\u0131 i\u015flem\nbgf.predict(1,\n            cltv_df['frequency'],\n            cltv_df['recency'],\n            cltv_df['T']).sort_values(ascending=False).head(10)","f584d067":"# bir haftal\u0131k tahmin diye veri setine ekleyelim.\ncltv_df[\"expected_purc_1_week\"] = bgf.predict(1,\n                                              cltv_df['frequency'],\n                                              cltv_df['recency'],\n                                              cltv_df['T'])\n\ncltv_df.head()","e67071cc":"# bir ay i\u00e7inde kimler gelebilir, 4 haftad\u0131r bu.\nbgf.predict(4,\n            cltv_df['frequency'],\n            cltv_df['recency'],\n            cltv_df['T']).sort_values(ascending=False).head(10)\n\n","36e4dc3a":"#bir ayda beklenen sat\u0131\u015f\ncltv_df[\"expected_purc_1_month\"] = bgf.predict(4,\n                                               cltv_df['frequency'],\n                                               cltv_df['recency'],\n                                               cltv_df['T'])\ncltv_df.head()","596f006d":"# ayl\u0131k sat\u0131\u015flara g\u00f6re s\u0131ralama\ncltv_df.sort_values(\"expected_purc_1_month\", ascending=False).head(20)\n\n# y\u00fcksek frekans y\u00fcksek, sat\u0131n alma yap\u0131yorsa de\u011ferli\n# 14646.0000\t50.4286\t50.7143\t74\t3596.8044\t1.2925\t5.1458 monetary y\u00fcksek,  az gelmi\u015f iyi getirmi\u015f","8f8c14a6":"# t\u00fcm \u015firket i\u00e7in beklenen sat\u0131n alma say\u0131s\u0131\n\nbgf.predict(4,\n            cltv_df['frequency'],\n            cltv_df['recency'],\n            cltv_df['T']).sum()","ef3f8e30":"bgf.predict(4 * 3,\n            cltv_df['frequency'],\n            cltv_df['recency'],\n            cltv_df['T']).sum()","c37d39ca":"# modelimiz turuncu, mavi ise ger\u00e7ek\n#hi\u00e7 bir \u015fey olmamas\u0131na g\u00f6re \u00e7ok iyi\n\nplot_period_transactions(bgf)\nplt.show()","29664b08":"# parametlerileri buldu\nggf = GammaGammaFitter(penalizer_coef=0.01)\nggf.fit(cltv_df['frequency'], cltv_df['monetary'])","135d2fd9":"# her bir m\u00fc\u015fteri i\u00e7in m\u00fc\u015fteri \u00f6zelliklerini girip g\u00f6nderiyorum\nggf.conditional_expected_average_profit(cltv_df['frequency'],\n                                        cltv_df['monetary']).head(10)\n","0257f000":"# m\u00fc\u015fterilerin beklenen ko\u015fullu karlar\u0131\nggf.conditional_expected_average_profit(cltv_df['frequency'],\n                                        cltv_df['monetary']).sort_values(ascending=False).head(10)","ceeeea83":"# yeni bir de\u011fi\u015fken ekleyelim\ncltv_df[\"expected_average_profit\"] = ggf.conditional_expected_average_profit(cltv_df['frequency'],\n                                                                             cltv_df['monetary'])\n#beklenen de\u011ferine g\u00f6re s\u0131ralma yapt\u0131m\ncltv_df.sort_values(\"expected_average_profit\", ascending=False).head(20)","dcd92463":"\n\ncltv = ggf.customer_lifetime_value(bgf,\n                                   cltv_df['frequency'],\n                                   cltv_df['recency'],\n                                   cltv_df['T'],\n                                   cltv_df['monetary'],\n                                   time=3,  # 3 ayl\u0131k\n                                   freq=\"W\",  # T'nin frekans bilgisi. g\u00fcnl\u00fck kasar, ayl\u0131k h\u0131zl\u0131 olabilir.\n                                   discount_rate=0.01) #\u00e7e\u015fitli indirim yap\u0131yors\u0131n\n\ncltv.head() # id ve bir \u015fey var.","0cd5e05d":"# indexleri silelim. de\u011fi\u015fken olsun\ncltv = cltv.reset_index()","a3798757":"cltv.sort_values(by=\"clv\", ascending=False).head(50)","d95c5ada":"#ana tablom yok\ncltv_final = cltv_df.merge(cltv, on=\"Customer ID\", how=\"left\")\ncltv_final.head()","71b56d3e":"# cltv ye g\u00f6re s\u0131ralama yap\ncltv_final.sort_values(by=\"clv\", ascending=False).head(10)\n# neden bu \n#receny ile T aras\u0131nda \u00e7ok fark yok. \n\n# kural tabanl\u0131 yakayama\u011f\u0131 ile potansiyel m\u00fc\u015fterileri yakalybiliyor.","8ccb329d":"# CLTV'nin Standartla\u015ft\u0131r\u0131lmas\u0131\nscaler = MinMaxScaler(feature_range=(0, 1))\nscaler.fit(cltv_final[[\"clv\"]])","dc8aa9ef":"cltv_final[\"scaled_clv\"] = scaler.transform(cltv_final[[\"clv\"]])","516cccde":"# S\u0131ralayal\u0131m:\ncltv_final.sort_values(by=\"scaled_clv\", ascending=False).head()","7f23c136":"##############################################################\n# 5. CLTV'ye G\u00f6re Segmentlerin Olu\u015fturulmas\u0131\n##############################################################\n\ncltv_final[\"segment\"] = pd.qcut(cltv_final[\"scaled_clv\"], 4, labels=[\"D\", \"C\", \"B\", \"A\"])\n\ncltv_final.head()\n\n\ncltv_final.groupby(\"segment\").agg(\n    {\"count\", \"mean\", \"sum\"})","11bbf631":"##############################################################\n# 6. \u00c7al\u0131\u015fman\u0131n Fonksiyonla\u015ft\u0131r\u0131lmas\u0131\n##############################################################\n\n\n\ndef create_cltv_p(dataframe, month=3):\n\n    # 1. Veri \u00d6n \u0130\u015fleme\n    dataframe.dropna(inplace=True)\n    dataframe = dataframe[~dataframe[\"Invoice\"].str.contains(\"C\", na=False)]\n    dataframe = dataframe[dataframe[\"Quantity\"] > 0]\n\n    replace_with_thresholds(dataframe, \"Quantity\")\n    replace_with_thresholds(dataframe, \"Price\")\n\n    dataframe[\"TotalPrice\"] = dataframe[\"Quantity\"] * dataframe[\"Price\"]\n    today_date = dt.datetime(2011, 12, 11)\n    cltv_df = dataframe.groupby('Customer ID').agg({'InvoiceDate': [lambda date: (date.max() - date.min()).days,\n                                                                    lambda date: (today_date - date.min()).days],\n                                                    'Invoice': lambda num: num.nunique(),\n                                                    'TotalPrice': lambda TotalPrice: TotalPrice.sum()})\n\n    cltv_df.columns = cltv_df.columns.droplevel(0)\n    cltv_df.columns = ['recency', 'T', 'frequency', 'monetary']\n    cltv_df[\"monetary\"] = cltv_df[\"monetary\"] \/ cltv_df[\"frequency\"]\n    cltv_df = cltv_df[cltv_df[\"monetary\"] > 0]\n    cltv_df[\"recency\"] = cltv_df[\"recency\"] \/ 7\n    cltv_df[\"T\"] = cltv_df[\"T\"] \/ 7\n    cltv_df = cltv_df[(cltv_df['frequency'] > 1)]\n\n    # 2. BG-NBD Modelinin Kurulmas\u0131\n    bgf = BetaGeoFitter(penalizer_coef=0.001)\n    bgf.fit(cltv_df['frequency'],\n            cltv_df['recency'],\n            cltv_df['T'])\n\n    cltv_df[\"expected_purc_1_week\"] = bgf.predict(1,\n                                                  cltv_df['frequency'],\n                                                  cltv_df['recency'],\n                                                  cltv_df['T'])\n\n    cltv_df[\"expected_purc_1_month\"] = bgf.predict(4,\n                                                   cltv_df['frequency'],\n                                                   cltv_df['recency'],\n                                                   cltv_df['T'])\n\n    # 3. GAMMA-GAMMA Modelinin Kurulmas\u0131\n    ggf = GammaGammaFitter(penalizer_coef=0.01)\n    ggf.fit(cltv_df['frequency'], cltv_df['monetary'])\n    cltv_df[\"expected_average_profit\"] = ggf.conditional_expected_average_profit(cltv_df['frequency'],\n                                                                                 cltv_df['monetary'])\n\n    # 4. BG-NBD ve GG modeli ile CLTV'nin hesaplanmas\u0131.\n    cltv = ggf.customer_lifetime_value(bgf,\n                                       cltv_df['frequency'],\n                                       cltv_df['recency'],\n                                       cltv_df['T'],\n                                       cltv_df['monetary'],\n                                       time=month,  # 3 ayl\u0131k\n                                       freq=\"W\",  # T'nin frekans bilgisi.\n                                       discount_rate=0.01)\n\n    cltv = cltv.reset_index()\n    cltv_final = cltv_df.merge(cltv, on=\"Customer ID\", how=\"left\")\n    scaler = MinMaxScaler(feature_range=(0, 1))\n    scaler.fit(cltv_final[[\"clv\"]])\n    cltv_final[\"scaled_clv\"] = scaler.transform(cltv_final[[\"clv\"]])\n\n    cltv_final[\"segment\"] = pd.qcut(cltv_final[\"scaled_clv\"], 4, labels=[\"D\", \"C\", \"B\", \"A\"])\n\n    return cltv_final\n\ndf = retail_mysql_df.copy()\ncltv_final2 = create_cltv_p(df)","47fb4f2a":"##############################################################\n# 7. Sonu\u00e7lar\u0131n Veri Taban\u0131na G\u00f6nderilmesi\n##############################################################\n\npd.read_sql_query(\"show databases;\", conn)","eb7a927c":"pd.read_sql_query(\"show tables\", conn)","e6986a66":"pd.read_sql_query(\"select * from online_retail_2010_2011 limit 10\", conn)","1fcd9633":"cltv_final.head()","932b2812":"# cltv_final = cltv_final.reset_index()\n\ncltv_final[\"Customer ID\"] = cltv_final[\"Customer ID\"].astype(int)","32d8ae33":"cltv_final.to_sql(name='cltv_prediction_mvk', con=conn, if_exists='replace', index=False)","633504eb":"##############################################################\n# BONUS: RFM'in Sonu\u00e7lar\u0131n\u0131n DB'ye G\u00f6nderilmesi\n##############################################################\n\ndef create_rfm(dataframe):\n\n    # VERIYI HAZIRLAMA\n    dataframe[\"TotalPrice\"] = dataframe[\"Quantity\"] * dataframe[\"Price\"]\n    dataframe.dropna(inplace=True)\n    dataframe = dataframe[~dataframe[\"Invoice\"].str.contains(\"C\", na=False)]\n\n    # RFM METRIKLERININ HESAPLANMASI\n    today_date = dt.datetime(2011, 12, 11)\n    rfm = dataframe.groupby('Customer ID').agg({'InvoiceDate': lambda date: (today_date - date.max()).days,\n                                                'Invoice': lambda num: num.nunique(),\n                                                \"TotalPrice\": lambda price: price.sum()})\n    rfm.columns = ['recency', 'frequency', \"monetary\"]\n    rfm = rfm[(rfm['monetary'] > 0)]\n\n    # RFM SKORLARININ HESAPLANMASI\n    rfm[\"recency_score\"] = pd.qcut(rfm['recency'], 5, labels=[5, 4, 3, 2, 1])\n    rfm[\"frequency_score\"] = pd.qcut(rfm[\"frequency\"].rank(method=\"first\"), 5, labels=[1, 2, 3, 4, 5])\n    rfm[\"monetary_score\"] = pd.qcut(rfm['monetary'], 5, labels=[1, 2, 3, 4, 5])\n\n    # cltv_df skorlar\u0131 kategorik de\u011fere d\u00f6n\u00fc\u015ft\u00fcr\u00fcl\u00fcp df'e eklendi\n    rfm[\"RFM_SCORE\"] = (rfm['recency_score'].astype(str) +\n                        rfm['frequency_score'].astype(str))\n\n\n    # SEGMENTLERIN ISIMLENDIRILMESI\n    seg_map = {\n        r'[1-2][1-2]': 'hibernating',\n        r'[1-2][3-4]': 'at_risk',\n        r'[1-2]5': 'cant_loose',\n        r'3[1-2]': 'about_to_sleep',\n        r'33': 'need_attention',\n        r'[3-4][4-5]': 'loyal_customers',\n        r'41': 'promising',\n        r'51': 'new_customers',\n        r'[4-5][2-3]': 'potential_loyalists',\n        r'5[4-5]': 'champions'\n    }\n\n    rfm['segment'] = rfm['RFM_SCORE'].replace(seg_map, regex=True)\n    rfm = rfm[[\"recency\", \"frequency\", \"monetary\", \"segment\"]]\n    return rfm","dc9dfa79":"rfm_df = retail_mysql_df.copy()","cd39a356":"rfm_final = create_rfm(rfm_df)","336307cd":"rfm_final.head()","8dad35b4":"rfm_final = rfm_final.reset_index()","eac81dce":"rfm_final[\"Customer ID\"] = rfm_final[\"Customer ID\"].astype(int)","287e917e":"rfm_final.to_sql(name='rfm_final_deneme_sezgin', con=conn, if_exists='replace', index=False)","61ce199d":"#########################\n## 1.1 Verinin Excel'den Okunmas\u0131\n#########################\n","96038e8f":"################################################################\n# 1 Ay i\u00e7inde t\u00fcm \u015eirketin Beklenen Sat\u0131\u015f Say\u0131s\u0131 Nedir?\n################################################################\n","92e8a859":"#########################\n## 1.2. Verinin Veri Taban\u0131ndan Okunmas\u0131\n#########################","f9ab96df":"##############################################################\n# 4. BG-NBD ve GG modeli ile CLTV'nin hesaplanmas\u0131.\n##############################################################\n\n1. b\u00fct\u00fcn kullan\u0131clar\u0131n bilgileri var.","932eada3":"![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/515208f0-8567-4437-938f-ea9ff3351271\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210609%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210609T123426Z&X-Amz-Expires=86400&X-Amz-Signature=38cda684a8ec7b378aebd318561c915b27321e633240097be2d6377010392474&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)","1e8c8a96":"##############################################################\n# 3. GAMMA-GAMMA Modelinin Kurulmas\u0131\n##############################################################","fa3365d4":"![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/63a56ab8-8298-4f84-b90c-fc54c0a0ef7d\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210609%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210609T123700Z&X-Amz-Expires=86400&X-Amz-Signature=85948725d73b8542efebc81c3f1e045a3705a3a50919ff7a6eb9db85f6598abc&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)","0a0ff1eb":"################################################################\n# 1 hafta i\u00e7inde en \u00e7ok sat\u0131n alma bekledi\u011fimiz 10 m\u00fc\u015fteri kimdir?\n################################################################\n\n1. bir hafta en \u00e7ok hangi m\u00fc\u015fteri al\u0131\u015fveri\u015f yapacak? ","e843a7bc":"################################################################\n# 3 Ayda T\u00fcm \u015eirketin Beklenen Sat\u0131\u015f Say\u0131s\u0131 Nedir?\n################################################################","a25bae67":"################################################################\n# Tahmin Sonu\u00e7lar\u0131n\u0131n De\u011ferlendirilmesi\n################################################################","a3e8ab7a":"##############################################################\n# 2. BG-NBD Modelinin Kurulmas\u0131\n##############################################################\n","1e1f595e":"##############################################################\n# 1. Verinin Haz\u0131rlanmas\u0131 (Data Preperation)\n##############################################################\n\n\n\n","46782b82":"#########################\n# Veri \u00d6n \u0130\u015fleme\n#########################","fcac7cc4":"#########################\n# Lifetime Veri Yap\u0131s\u0131n\u0131n Haz\u0131rlanmas\u0131\n#########################\n\n1. recency: Son sat\u0131n alma \u00fczerinden ge\u00e7en zaman. Haftal\u0131k. (cltv_df'de analiz g\u00fcn\u00fcne g\u00f6re, burada kullan\u0131c\u0131 \u00f6zelinde) (lambda date: (date.max() - date.min()).days)\n2. T: M\u00fc\u015fterinin ya\u015f\u0131. Haftal\u0131k. (analiz tarihinden ne kadar s\u00fcre \u00f6nce ilk sat\u0131n alma yap\u0131lm\u0131\u015f) (lambda date: (today_date - date.min()).days)\n3. frequency: tekrar eden toplam sat\u0131n alma say\u0131s\u0131 (frequency>1)\n4. monetary_value: sat\u0131n alma ba\u015f\u0131na ortalama kazan\u00e7\n\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/becb13f8-d819-42fa-b5c0-263c1edfd09d\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210609%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210609T123654Z&X-Amz-Expires=86400&X-Amz-Signature=8d715d2b407ffe6a449dab76a3886010cb0060325d42fa1a75b4e0e94160af9a&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)","cbc9274f":"################################################################\n# 1 ay i\u00e7inde en \u00e7ok sat\u0131n alma bekledi\u011fimiz 10 m\u00fc\u015fteri kimdir?\n################################################################\n1. haftal\u0131\u011f\u0131 ayl\u0131\u011fa \u00e7evirince 4 hafta diyoruz.\n","4b24a1e8":"##############################################################\n# BG-NBD ve Gamma-Gamma ile CLTV Prediction\n##############################################################\n\n 1. Verinin Haz\u0131rlanmas\u0131 (Data Preperation)\n 2. BG-NBD Modeli ile Expected Sales Forecasting\n 3. Gamma-Gamma Modeli ile Expected Average Profit\n 4. BG-NBD ve Gamma-Gamma Modeli ile CLTV'nin Hesaplanmas\u0131\n 5. CLTV'ye G\u00f6re Segmentlerin Olu\u015fturulmas\u0131\n 6. \u00c7al\u0131\u015fman\u0131n fonksiyonla\u015ft\u0131r\u0131lmas\u0131\n 7. Sonu\u00e7lar\u0131n Veri Taban\u0131na G\u00f6nderilmesi"}}