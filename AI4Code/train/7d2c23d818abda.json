{"cell_type":{"c006d509":"code","4b9b5dba":"code","a521b716":"markdown"},"source":{"c006d509":"def distance(s:str, t:str) -> int:\n    '''distance of from s to t'''\n    m = len(s)\n    n = len(t)\n    count = abs(n-m)\n    changes = []\n    k = min(m,n)\n    for i in range(k):\n        if s[i] != t[i]:\n            count += 1\n            changes.append((s[i], t[i]))\n        else:\n            changes.append(0)\n    if m < n:\n        extra = list(t[m:])\n    else:\n        extra = []\n        \n    return count, changes + extra","4b9b5dba":"distance('kitten','sitting')","a521b716":"Good morning! Here's your coding interview problem for today.\n\nThis problem was asked by Google.\n\nThe edit distance between two strings refers to the minimum number of character insertions, deletions, and substitutions required to change one string to the other. For example, the edit distance between \u201ckitten\u201d and \u201csitting\u201d is three: substitute the \u201ck\u201d for \u201cs\u201d, substitute the \u201ce\u201d for \u201ci\u201d, and append a \u201cg\u201d.\n\nGiven two strings, compute the edit distance between them.\n"}}