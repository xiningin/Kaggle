{"cell_type":{"8ce0c38d":"code","580c05c0":"code","bc31f294":"code","86f01abd":"code","8d356601":"code","6c268d6f":"code","f2df5209":"code","f9e801cc":"code","d0471885":"code","f78b4984":"code","7accbf6f":"code","a513954c":"code","e238ac0b":"code","f7886685":"code","ab794361":"code","5b48e9d4":"code","f5cf046c":"code","573bdbdc":"code","575d1114":"code","58099d25":"code","df587206":"code","bd8a036f":"code","ba74aba3":"code","ed7a06e2":"code","8f4d6fd5":"code","fbac18a4":"markdown","84254f28":"markdown","d61bcb4c":"markdown","4626aef0":"markdown","4e1d2c8f":"markdown","e7eff7cb":"markdown"},"source":{"8ce0c38d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","580c05c0":"fire_amazon = pd.read_csv('..\/input\/forest-fires-in-brazil\/amazon.csv', encoding='latin1')\nfire_amazon.head()","bc31f294":"fire_amazon.isnull().any() # There is not null","86f01abd":"fire_amazon.dtypes","8d356601":"fire_amazon.describe","6c268d6f":"with sns.axes_style('darkgrid'):\n  bars = sns.barplot(x='number',y='month',\n                     data=fire_amazon.sort_values('number',ascending=False))\n  bars.set_title('Bar plot')\nplt.show() ","f2df5209":"month_graph=fire_amazon['number'].groupby(fire_amazon['month']).sum().reset_index(name='number')","f9e801cc":"month_graph","d0471885":"with sns.axes_style('darkgrid'):\n  bars = sns.barplot(x='number',y='month',\n                     data=month_graph.sort_values('number',ascending=False))\n  bars.set_title('Bar plot')","f78b4984":"with sns.axes_style('darkgrid'):\n  bars = sns.barplot(x='number',y='state',\n                     data=fire_amazon.sort_values('number',ascending=False))\n  bars.set_title('Bar plot')\nplt.show()  ","7accbf6f":"state_graph=fire_amazon['number'].groupby(fire_amazon['state']).sum().reset_index(name='number')\nstate_graph","a513954c":"with sns.axes_style('darkgrid'):\n  bars = sns.barplot(x='number',y='state',\n                     data=state_graph.sort_values('number',ascending=False))\n  bars.set_title('Bar plot')\nplt.show() ","e238ac0b":"total_number=fire_amazon['number'].groupby(fire_amazon['year']).sum().reset_index(name='total_number')\ntotal_number","f7886685":"plt.figure(figsize=(10,4),facecolor='w')\nwith sns.axes_style('darkgrid'):\n  lines = sns.lineplot(x='year',y='total_number',data=total_number)\n  lines.set_title('Total Fire in Amazon')\n\nplt.xticks(ticks=\n           [1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017])  \nplt.show()","ab794361":"# Watch top 5 number of fire in every state\nfire_number_state=fire_amazon['number'].groupby(fire_amazon['state']).sum().reset_index()\nfire_number_state.sort_values(by='number',ascending=False).head()","5b48e9d4":"total_group_number=fire_amazon['number'].groupby([fire_amazon['year'],fire_amazon['state']]).sum().reset_index(name='total_number')\ntotal_group_number","f5cf046c":"# total fire of top 5 state\n\nplt.figure(figsize=(12,4),facecolor='w')\nwith sns.axes_style('darkgrid'):\n  for kk in ['Mato Grosso','Paraiba','Sao Paulo','Rio','Bahia']:\n    sns.lineplot(x='year',y='total_number',\n                 label=kk,\n                 data=total_group_number[total_group_number['state']==kk])\n  \nplt.xlabel(\"year\")      #x\ucd95 \uc774\ub984 \uc124\uc815\nplt.ylabel(\"total_fire\")  #y\ucd95 \uc774\ub984 \uc124\uc815\nplt.xticks(ticks=\n           [1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017])  \nplt.show()","573bdbdc":"fire_amazon.columns","575d1114":"fire_amazon.head()","58099d25":"new_dataframe=fire_amazon['number'].groupby([fire_amazon['month'],fire_amazon['state']]).sum().reset_index(name='number')\nnew_dataframe.head()","df587206":"new_dataframe['month']","bd8a036f":"new_dataframe['month']= new_dataframe['month'].map({'Janeiro':1,'Fevereiro':2,'Mar\u00e7o':3,'Abril':4,\n                                                    'Maio':5,'Junho':6,'Julho':7,'Agosto':8,\n                                                    'Setembro':9,'Outubro':10,'Novembro':11,'Dezembro':12})\n\nnew_dataframe","ba74aba3":"data_bargraph=new_dataframe['number'].groupby(new_dataframe['month']).max().reset_index()\ndata_bargraph","ed7a06e2":"# insert columns -> state name\n\ndata_bargraph['state'] = 'non'\nfor i in range(0,12):\n  #new_dataframe[new_dataframe['number']==data_bargraph['number'][i]]\n  kk=new_dataframe[new_dataframe['number']==data_bargraph['number'][i]]['state'].reset_index()\n  data_bargraph['state'][i]=kk['state'][0]\n\ndata_bargraph","8f4d6fd5":"#total highest fire number on each month of every years\nplt.figure(figsize=(10,4),facecolor='w')\nwith sns.axes_style('darkgrid'):\n  sns.barplot(x='month',\n              y='number',\n              hue='state',data=data_bargraph)\n\nplt.title('total fire on each month')\nplt.xlabel(\"month\")      #x\ucd95 \uc774\ub984 \uc124\uc815\nplt.ylabel(\"total_fire_number\")  #y\ucd95 \uc774\ub984 \uc124\uc815\nplt.show()","fbac18a4":"# Data Visualization","84254f28":"It is impossible to apply 'ascending=False'. \n\nSo, I applyed a 'groupby()' for making DataFrame to make a graph.","d61bcb4c":"## fir number of each month","4626aef0":"# Make a new dataframe for analysis\n- fire number has a difference on each state, but there is almost not difference on each month\n- So, I will make a graph which means the hightest state on each month.","4e1d2c8f":"## fire number of each state","e7eff7cb":"## Total fire in Amazon"}}