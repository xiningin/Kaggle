{"cell_type":{"85213ea6":"code","14461ce8":"code","b7ccd541":"code","0c7e7527":"code","11a1bc52":"code","8c20092a":"code","feb2184d":"code","18aac9fe":"code","03d1e892":"code","9a04d77b":"code","6f040f26":"code","37735eb1":"markdown","713d9fd2":"markdown","4d08b929":"markdown","2fd9ca23":"markdown","99279768":"markdown","7872af2c":"markdown","c8e7536a":"markdown"},"source":{"85213ea6":"import pandas as pd\nimport numpy as np\nimport glob\nimport cv2\nimport matplotlib.pyplot as plt\nimport PIL\nfrom PIL import Image, ImageDraw\nimport seaborn as sns\nimport random\nimport os\n#from tensorflow.keras.applications import EfficientNetB0\n#model = EfficientNetB0(weights='imagenet')\n\nplt.style.use('seaborn-darkgrid')","14461ce8":"df_train = pd.read_csv('..\/input\/landmark-recognition-2020\/train.csv')","b7ccd541":"#df_train.landmark_id.value_counts(normalize=True).plot(kind='bar')\nprint('Total number of class: {}'.format(df_train.landmark_id.nunique()))","0c7e7527":"#train and test directory\ntrain_dir = \"..\/input\/landmark-recognition-2020\/train\/*\/*\/*\/*.jpg\"\ntest_dir = \"..\/input\/landmark-recognition-2020\/test\/*\/*\/*\/*.jpg\"","11a1bc52":"df_train.landmark_id.value_counts(normalize=False)[:10].plot(kind='bar', title='Frequency of occurrence of top 10 Labels')","8c20092a":"train_list = glob.glob('..\/input\/landmark-recognition-2020\/train\/*\/*\/*\/*')\n\n#train_list","feb2184d":"#Random 12 images from train set\n\nrandom_path = random.sample(train_list, 12)\nplt.rcParams[\"axes.grid\"] = False\nf, axarr = plt.subplots(4, 3, figsize=(24, 22))\n\ncurr_row = 0\nfor i in range(12):\n    example = cv2.imread(random_path[i])\n    example = example[:,:,::-1]\n    \n    col = i%4\n    axarr[col, curr_row].imshow(example)\n    if col == 3:\n        curr_row += 1\n","18aac9fe":"least_landmarks = df_train.landmark_id.value_counts()[-10:].index.values\nleast_ids = df_train[df_train.landmark_id.isin(least_landmarks)].id.unique()","03d1e892":"least_ids","9a04d77b":"f, ax = plt.subplots(5,2, figsize=(18,22))\nfor i, image_id in enumerate(least_ids):\n    image_path = os.path.join('..\/input\/landmark-recognition-2020\/train', f'{image_id[0]}\/{image_id[1]}\/{image_id[2]}\/{image_id}.jpg')\n    image = cv2.imread(image_path)\n    image = image[:,:,::-1]\n\n    ax[i\/\/5, i%2].imshow(image) \n    #image.close()       \n    ax[i\/\/5, i%2].axis('off')\n\n    landmark_id = df_train[df_train.id==image_id.split('.')[0]].landmark_id.values[0]\n    ax[i\/\/5, i%2].set_title(f\"ID: {image_id.split('.')[0]}\\nLandmark_id: {landmark_id}\", fontsize=\"12\")\n\nplt.show() ","6f040f26":"images = cv2.imread(random_path[10])\nprint(images.shape)","37735eb1":"## 3a. Distribution of Label","713d9fd2":"## 1. Import `libraries`","4d08b929":"## 3b. Understand sample images","2fd9ca23":"## 2. Read train and test dataset","99279768":"## 3c. Understand least train samples","7872af2c":"## 3. Understand the most occurring landmark","c8e7536a":"* Maximum number of occurrence is for one landmark with only over 6k repetition\n* There are nearly 81k unique classes with sparse distribution\n* ~97% of landmarks have less than 100 samples"}}