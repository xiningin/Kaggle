{"cell_type":{"a16b83fc":"code","d57170ea":"code","dc236d23":"code","241c1f31":"code","d8d069ec":"code","4660be8c":"code","1fb37183":"code","2a38f616":"code","13c0ec57":"code","42234f75":"code","2e15a9f7":"code","e1518e3e":"code","bced960a":"code","58b72dfb":"code","eb4e1f0c":"code","40dd7268":"code","a9fcb5b9":"code","541d6f2b":"code","88d22a03":"code","0698df61":"code","50177de1":"code","3fb9a2a3":"code","379f079f":"code","7cc4b48c":"code","7ce4fe37":"code","5ffbc017":"code","c47e080b":"code","75934ea5":"code","7489121b":"markdown","5487c4f6":"markdown","78efec8d":"markdown","1944aa97":"markdown","9dbc4f05":"markdown","4a8c7fdb":"markdown","5c9ab059":"markdown","6d1ce1c1":"markdown","d1f0004f":"markdown","c4f483be":"markdown"},"source":{"a16b83fc":"import tensorflow as tf\nfrom tensorflow.keras import datasets,layers,models\nimport matplotlib.pyplot as plt\nimport numpy as np","d57170ea":"(X_train,y_train),(X_test,y_test)=datasets.cifar10.load_data()","dc236d23":"X_train.shape","241c1f31":"X_test.shape","d8d069ec":"y_train.shape","4660be8c":"y_train[:5]","1fb37183":"y_train = y_train.reshape(-1,)\ny_train[:5]","2a38f616":"y_test = y_test.reshape(-1,)","13c0ec57":"classes = [\"airplane\",\"automobile\",\"bird\",\"cat\",\"deer\",\"dog\",\"frog\",\"horse\",\"ship\",\"truck\"]","42234f75":"def plot_sample(X, y, index):\n    plt.figure(figsize = (15,2))\n    plt.imshow(X[index])\n    plt.xlabel(classes[y[index]])","2e15a9f7":"plot_sample(X_train, y_train, 0)","e1518e3e":"plot_sample(X_train, y_train, 1)","bced960a":"for i in range(10):\n  plot_sample(X_train, y_train, i)","58b72dfb":"X_train[0]","eb4e1f0c":"X_train=X_train\/255\nX_test=X_test\/255","40dd7268":"ann=models.Sequential([\n                      layers.Flatten(input_shape=(32,32,3)),\n                      layers.Dense(3000,activation='relu'),\n                      layers.Dense(1000,activation='relu'),\n                      layers.Dense(10,activation='softmax')\n])\n\nann.compile(optimizer='SGD',\n            loss='sparse_categorical_crossentropy',\n            metrics=['accuracy']\n            )\nann.fit(X_train,y_train,epochs=5)","a9fcb5b9":"from sklearn.metrics import confusion_matrix , classification_report\nimport numpy as np\ny_pred = ann.predict(X_test)\ny_pred_classes = [np.argmax(element) for element in y_pred]\n\nprint(\"Classification Report: \\n\", classification_report(y_test, y_pred_classes))","541d6f2b":"cnn=models.Sequential([\n                       #cnn\n                      layers.Conv2D(filters=32,kernel_size=(3,3),activation='relu',input_shape=(32,32,3)),\n                      layers.MaxPool2D((2,2)),\n                       \n                      layers.Conv2D(filters=64,kernel_size=(3,3),activation='relu',input_shape=(32,32,3)),\n                      layers.MaxPool2D((2,2)),\n\n\n                      layers.Flatten(),\n                      layers.Dense(64,activation='relu'),\n                      layers.Dense(10,activation='softmax')\n])","88d22a03":"cnn.compile(optimizer='adam',\n            loss='sparse_categorical_crossentropy',\n            metrics=['accuracy']\n            )\ncnn.fit(X_train,y_train,epochs=15)","0698df61":"cnn.evaluate(X_test,y_test)","50177de1":"y_pred = cnn.predict(X_test)\ny_pred[:5]","3fb9a2a3":"y_classes = [np.argmax(element) for element in y_pred]\ny_classes[:5]","379f079f":"y_test[:5]","7cc4b48c":"plot_sample(X_test, y_test,3)","7ce4fe37":"classes[y_classes[3]]","5ffbc017":"plot_sample(X_test, y_test,10)","c47e080b":"classes[y_classes[10]]","75934ea5":"from sklearn.metrics import confusion_matrix , classification_report\nimport numpy as np\ny_pred = cnn.predict(X_test)\ny_pred_classes = [np.argmax(element) for element in y_pred]\n\nprint(\"Classification Report: \\n\", classification_report(y_test, y_pred_classes))","7489121b":"**Normalizing the training data**","5487c4f6":"Normalize the images to a number from 0 to 1. Image has 3 channels (R,G,B) and each value in the channel can range from 0 to 255. Hence to normalize in 0-->1 range, we need to divide it by 255","78efec8d":"Let's plot some images to see what they are","1944aa97":"**Build simple artificial neural network for image classification**","9dbc4f05":"**You can see that at the end of 5 epochs, accuracy is at around 49%**","4a8c7fdb":"\n\n**CIFAR-10  is an established computer-vision dataset used for object recognition. It is a subset of the 80 million tiny images dataset and consists of 60,000 32x32 color images containing one of 10 object classes, with 6000 images per class. It was collected by Alex Krizhevsky, Vinod Nair, and Geoffrey Hinton**","5c9ab059":"\ny_train is a 2D array, for our classification having 1D array is good enough. so we will convert this to now 1D array","6d1ce1c1":"**Now let us build a convolutional neural network to train our images**","d1f0004f":"**Importing Libraries**","c4f483be":"**With CNN, at the end 5 epochs, accuracy was at around 70% which is a significant improvement over ANN. CNN's are best for image classification and gives superb accuracy. Also computation is much less compared to simple ANN as maxpooling reduces the image dimensions while still preserving the features**"}}