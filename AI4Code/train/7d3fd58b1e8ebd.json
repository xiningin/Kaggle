{"cell_type":{"a157a51f":"code","6d5aadad":"code","c2fc107f":"code","17bc262b":"code","3ffe366a":"code","79ddd8b9":"code","0a8abf35":"code","d83c68c7":"code","f53e2d1c":"code","ea19fe89":"code","908ebe91":"code","5e9aa669":"code","41ebdd8b":"code","ce2dcf64":"code","d8617ab6":"code","966eade7":"code","598f60da":"code","531e9743":"code","5d37ac68":"code","8ee500b9":"code","b27ec510":"code","5ad0bde8":"code","d694d94b":"code","cd480d46":"code","69dba34e":"markdown","f7c54df9":"markdown"},"source":{"a157a51f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6d5aadad":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Classificiation models\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom xgboost import XGBClassifier\n\n# Pre-processing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\n# Scoring and Ensembling\nfrom sklearn.ensemble import VotingClassifier\nfrom sklearn.model_selection import cross_val_score","c2fc107f":"train = pd.read_csv('..\/input\/airbnb-recruiting-new-user-bookings\/train_users_2.csv.zip')\ntest = pd.read_csv('..\/input\/airbnb-recruiting-new-user-bookings\/test_users.csv.zip')\nsessions = pd.read_csv('..\/input\/airbnb-recruiting-new-user-bookings\/sessions.csv.zip')","17bc262b":"train.head()","3ffe366a":"train.describe()","79ddd8b9":"sessions.describe()","0a8abf35":"train.info()","d83c68c7":"print(train.isnull().sum()) #the only three train columns missing data are date_first_booking, age, and first_affiliate_tracked\nprint('-' * 40)\nprint(test.isnull().sum()) #same columns are effected in test","f53e2d1c":"sns.pairplot(train);","ea19fe89":"# Investigate age column - looks like year could have been inputted instead of age\npd.set_option('display.max_rows', None) #make sure all rows are outputted\ntrain.groupby(['age']).count().sort_values(by = 'age', ascending = False)","908ebe91":"# Fix age data that looks like year. Credit to kanoki.org - https:\/\/kanoki.org\/2019\/07\/17\/pandas-how-to-replace-values-based-on-conditions\/\ntrain.loc[(train.age >= 1000),'age'] = 2014 - train.age\ntrain.groupby(['age']).count().sort_values(by = 'age', ascending = False)","5e9aa669":"# This represents value counts, not values\nsns.histplot(train['age'].value_counts());","41ebdd8b":"sns.histplot(train['age'].values);","ce2dcf64":"# Redo pairplot with new ages - looks better\nsns.pairplot(train);","d8617ab6":"# Credit to pythonpool.com - https:\/\/www.pythonpool.com\/matplotlib-figsize\/\nsns.displot(train['timestamp_first_active'], kde = False, height = 8, log_scale = (False, True));","966eade7":"sns.displot(data = train['gender'], log_scale = (False, True));","598f60da":"sns.displot(data = train['signup_method'], log_scale = (False, True));","531e9743":"sns.displot(data = train['signup_flow'], log_scale = (False, True));","5d37ac68":"sns.displot(data = train['language'], height = 8, log_scale = (False, True));","8ee500b9":"sns.displot(data = train['affiliate_channel'], height = 8, log_scale = (False, True));","b27ec510":"sns.displot(data = train['signup_app'], height = 8);","5ad0bde8":"sns.displot(data = train['first_device_type'], height = 16, log_scale = (False, True));","d694d94b":"sns.displot(data = train['signup_app'], height = 8, log_scale = (False, True));","cd480d46":"sns.displot(data = train['first_device_type'], height = 14, log_scale = (False, True));","69dba34e":"# EDA\nExplore the data for trends that will be helpful for understanding insights from the data","f7c54df9":"# Imports\nBring data into dataframes and look for general summary statistics"}}