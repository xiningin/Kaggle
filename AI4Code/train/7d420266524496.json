{"cell_type":{"c72b96f2":"code","818fefc7":"code","ec7d9c2c":"code","4e789f7a":"code","4d2f47c6":"code","c955329f":"code","8ba7be7f":"code","2ee644bb":"code","9c5c4503":"code","779cfc33":"code","377c0203":"code","5b2002a1":"code","6180c634":"code","40c51989":"code","3f1f5c87":"code","e2f64361":"code","a8b6ac9c":"code","3bb25e2d":"code","b23fca7a":"code","20b13446":"code","b49390de":"markdown","d68c7461":"markdown","0b809047":"markdown","e92f9817":"markdown","95ddcbe3":"markdown","6984815a":"markdown","3dd4997e":"markdown","5d9c2722":"markdown","4a3b10ba":"markdown","00e2b98c":"markdown"},"source":{"c72b96f2":"import numpy as np\nimport pandas as pd\nimport xgboost as xgb\n\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.metrics import log_loss\n\nimport optuna\nfrom optuna import Trial, visualization\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","818fefc7":"train = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/test.csv')\nsample = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/sample_submission.csv')","ec7d9c2c":"train.head()","4e789f7a":"feature_cols = [col for col in train.columns.tolist() if col not in ['id', 'target']]\ntarget_col = ['target']","4d2f47c6":"class_dict = {\n    'Class_1': 0,\n    'Class_2': 1,\n    'Class_3': 2,\n    'Class_4': 3,\n}","c955329f":"train['target'] = train['target'].map(class_dict)","8ba7be7f":"skf = StratifiedKFold(n_splits=5, random_state=42, shuffle=True)\n\nfor i, (trn, val) in enumerate(skf.split(train, train[target_col])):\n    train.loc[val, 'kfold'] = i\ntrain['kfold'] = train['kfold'].astype(int)","2ee644bb":"def fit_xgb(trial, xtr, ytr, xval, yval):\n    params = {\n        \"n_estimators\": trial.suggest_int(\"n_estimators\",200,2000,100),\n        \"subsample\": trial.suggest_discrete_uniform(\"subsample\",0.6,1,0.1),\n        \"colsample_bytree\": trial.suggest_discrete_uniform(\"colsample_bytree\",0.6,1,0.1),\n        \"eta\": trial.suggest_loguniform(\"eta\",1e-3,0.1),\n        \"reg_alpha\": trial.suggest_int(\"reg_alpha\",1,50),\n        \"reg_lambda\": trial.suggest_int(\"reg_lambda\",5,100),\n        \"max_depth\": trial.suggest_int(\"max_depth\",5,20),\n        \"min_child_weight\": trial.suggest_int(\"min_child_weight\",5,20),\n    }\n    \n    model = xgb.XGBClassifier(**params, tree_method='gpu_hist', random_state=42)\n    model.fit(xtr, ytr.reshape(-1,), eval_metric='mlogloss')\n    \n    y_val_pred = model.predict_proba(xval)\n    \n    log = {\n        \"train logloss\": log_loss(ytr, model.predict_proba(xtr)),\n        \"valid logloss\": log_loss(yval, y_val_pred)\n    }\n    \n    return model, log","9c5c4503":"def objective(trial):\n    loss = 0\n    for fold in range(5):\n        trn_idx = train['kfold'] != fold\n        val_idx = train['kfold'] == fold\n        trn = train.loc[trn_idx, :]\n        val = train.loc[val_idx, :]\n\n        xtr, ytr = trn[feature_cols].values, trn[target_col].values\n        xval, yval = val[feature_cols].values, val[target_col].values\n        \n        model, log = fit_xgb(trial, xtr, ytr, xval, yval)\n        loss += log['valid logloss']\/5\n        \n    return loss","779cfc33":"study = optuna.create_study(direction=\"minimize\", study_name='Xgboost optimization')\nstudy.optimize(objective, n_trials=20)","377c0203":"history = study.trials_dataframe()\nhistory.sort_values(by=\"value\", ascending=True)","5b2002a1":"study.best_params","6180c634":"visualization.plot_slice(study, target_name = 'Average Validation LogLoss')","40c51989":"visualization.plot_optimization_history(study, target_name = 'Average Validation LogLoss')","3f1f5c87":"visualization.plot_parallel_coordinate(study, target_name = 'Average Validation LogLoss')","e2f64361":"visualization.plot_param_importances(study, target_name = 'Average Validation LogLoss')","a8b6ac9c":"clf = xgb.XGBClassifier(**study.best_params, tree_method='gpu_hist', random_state=42)\nclf.fit(train[feature_cols], train[target_col], eval_metric='mlogloss')","3bb25e2d":"test_predictions = clf.predict_proba(test[feature_cols])","b23fca7a":"predictions_df = pd.DataFrame(test_predictions, columns = [\"Class_1\", \"Class_2\", \"Class_3\", \"Class_4\"])\npredictions_df['id'] = sample['id']","20b13446":"predictions_df.to_csv(\"submission.csv\", index = False)","b49390de":"![](https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/25225\/logos\/header.png?t=2021-01-27-17-34-26)","d68c7461":"<h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Objective Function<\/h1>","0b809047":"<h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Import Required Libraries \ud83d\udcda<\/h1>","e92f9817":"<h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Create Folds<\/h1>","95ddcbe3":"<h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Optimize \ud83d\udcc8<\/h1>","6984815a":"![Upvote!](https:\/\/img.shields.io\/badge\/Upvote-If%20you%20like%20my%20work-07b3c8?style=for-the-badge&logo=kaggle)","3dd4997e":"<h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Visualizations \ud83d\udcca<\/h1>","5d9c2722":"<h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Re-train on the Entire Data<\/h1>","4a3b10ba":"<h1 style = \"font-family: garamond; font-size: 40px; font-style: normal; letter-spcaing: 3px; background-color: #f6f5f5; color :#fe346e; border-radius: 100px 100px; text-align:center\">Read the Data \ud83d\udcd6<\/h1>","00e2b98c":"<br>\n<h1 style = \"font-size:60px; font-family:Garamond ; font-weight : normal; background-color: #f6f5f5 ; color : #fe346e; text-align: center; border-radius: 100px 100px;\">XGBoost + Optuna \ud83d\udd25<\/h1>\n<br>"}}