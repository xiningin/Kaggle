{"cell_type":{"992f9769":"code","5bd900b1":"code","0e61b298":"code","0dd11598":"code","4753d864":"code","6124fa9c":"code","5009923e":"code","9d41e729":"code","84c7e38c":"code","628bfbd0":"code","bf4c3042":"code","6074d131":"code","7b340012":"code","58094065":"code","c8a9728f":"code","09261ae9":"code","c49be6a8":"code","576b9a4b":"code","21716013":"code","581c87b5":"code","b5284e64":"code","8264f095":"code","ba23d195":"code","b4e2b2e1":"code","3f011782":"code","e66888e0":"code","1aa89f96":"code","2029502e":"code","670007c0":"code","9a42831c":"code","7a7f137c":"code","c858ba0b":"code","affb7c7f":"code","9676f85d":"code","5b877138":"code","9e902710":"code","85d4acea":"code","6eae1c07":"code","8d81cc2c":"code","6d58f974":"code","35101c60":"code","c4a4b119":"code","ad5e94fc":"code","876e1132":"code","de5dc135":"code","a54431ff":"code","9c56dc5a":"code","807df578":"code","6d15ff80":"code","9540540f":"markdown","49ccf077":"markdown","b7e41842":"markdown","0c162ee3":"markdown","58252855":"markdown","6e53bb53":"markdown","f52bf1d4":"markdown","60f570d3":"markdown","9c8bd71b":"markdown","ae987700":"markdown","d85177f6":"markdown","c29d0966":"markdown","584731a6":"markdown","2a92caa4":"markdown","b5a4c5f7":"markdown","b5c7d61f":"markdown","532b14ba":"markdown","0d38acff":"markdown","90081e92":"markdown","b6d00744":"markdown","f45a183c":"markdown"},"source":{"992f9769":"import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline","5bd900b1":"data = pd.read_csv(\"..\/input\/module2-dataset\/week2.csv\")","0e61b298":"data.head()","0dd11598":"data.drop('Date.1', axis = 1, inplace = True)","4753d864":"data['Date'] = pd.to_datetime(data['Date'])","6124fa9c":"data.set_index('Date', drop = False, inplace = True)","5009923e":"data.head()","9d41e729":"plt.figure(figsize = (20,8), clear = True, dpi = 100)\nsns.set(style = 'dark')\nplt.grid(color = 'darkBlue', alpha = 0.3)\nplt.ylim(1000,4000)\nsns.lineplot(x = 'Date', y = 'Close Price', data = data)\nplt.xlabel('Date', size = 17)\nplt.ylabel('Close Price', size = 17)\nplt.title('Close Price per Day', size = 20)\nplt.show()","84c7e38c":"# I case\ndata['Day_Perc_Change'].max()","628bfbd0":"# II case\ndata['Day_Perc_Change'].min()","bf4c3042":"day_the_ClosePrice_dropped = data['Day_Perc_Change'].idxmin()","6074d131":"day_the_ClosePrice_dropped","7b340012":"plt.figure(figsize = (15,6), dpi = 100)\nplt.grid(color = 'darkBlue', alpha = 0.3)\nplt.stem( data['Date'],data['Day_Perc_Change']*100, linefmt = 'C0-', markerfmt = 'C5o')\nplt.ylim(-60,10)\nplt.xlabel('Date')\nplt.ylabel('Day Per Change')\nplt.xlabel('Date', size = 15)\nplt.ylabel('Day Per Change Price (%)', size = 15)\nplt.title('Price Change per Day', size = 20)\nplt.show()","58094065":"max_old = data['Total Traded Quantity'].max()\nmin_old = data['Total Traded Quantity'].min()\ntota_traded_quantity_normalized = ((data['Total Traded Quantity'] - min_old)\/(max_old - min_old)) * (1 - 0) + 0","c8a9728f":"plt.figure(figsize = (15,6), dpi = 100)\nplt.grid(color = 'darkBlue', alpha = 0.3)\nplt.plot(tota_traded_quantity_normalized)\nplt.xlabel('Date')\nplt.ylabel('Day Per Change')\nplt.xlabel('Date', size = 15)\nplt.ylabel('Total Traded Quantity normalized', size = 15)\nplt.title('Normalized Total Traded Quantity Per Day', size = 20)\nplt.show()","09261ae9":"plt.figure(figsize = (15,6), dpi = 100)\nplt.grid(color = 'darkBlue', alpha = 0.3)\nplt.plot(tota_traded_quantity_normalized*100)\nplt.stem( data['Date'],data['Day_Perc_Change']*100, linefmt = 'C3--', markerfmt = ' ')\nplt.legend(['Total Traded Quantity (normalized)', '% Change in Price in per day'])\nplt.xlabel('Date', size = 15)\nplt.ylim(-100,103)\nplt.show()","c49be6a8":"total_traded_quantity_in_Trends = dict(data.groupby('Trend')['Total Traded Quantity'].sum())","576b9a4b":"total_traded_quantity_in_Trends.values()","21716013":"count_total_traded_quantity_in_Trends = data.groupby('Trend')['Symbol'].count()","581c87b5":"key = list(total_traded_quantity_in_Trends.keys())\nkey","b5284e64":"values = []\nfor i in range(len(key)):\n    \n    aux_data = data[data['Trend'] == key[i]]['Total Traded Quantity']\n    values.append([key[i], aux_data.mean(), aux_data.median()])\n    print(\"For key >>\", values[i])","8264f095":"total_traded_quantity_in_Trends.keys()","ba23d195":"colors = ['yellowgreen', 'lightblue', 'mistyrose', 'lightcoral', 'lightgrey', 'darkcyan', 'cornsilk']\n\nplt.figure(figsize = (16,8), dpi = 100)\n\ngrid = plt.GridSpec(2, 2, wspace=0.2, hspace=0.0)\n\nplt.subplot(grid[0:, 0])\nplt.subplot(1,2,1)\ncolors = ['yellowgreen', 'coral', 'hotpink', 'peachpuff', 'lightpink', 'gold','darkcyan']\npie_plot = plt.pie(total_traded_quantity_in_Trends.values(), labels = total_traded_quantity_in_Trends.keys(),\n                  autopct = '%1.1f%%', startangle=140, colors = colors)\n\nax1 = plt.subplot(grid[0,1])\nplt.grid(color = 'darkBlue', alpha = 0.3)\nplt.bar([val_key[0] for val_key in values], [val_mean[1] for val_mean in values], color = 'mediumslateblue')\nplt.xticks(rotation=45, size = 13)\nplt.legend(['mean'])\n\nax2 = plt.subplot(grid[1,1], sharex = ax1)\nplt.grid(color = 'darkBlue', alpha = 0.3)\nplt.bar([val_key[0] for val_key in values], [val_median[2] for val_median in values], color = 'hotpink')\nplt.legend(['median'])\n\nplt.xticks(rotation=45, size = 13)\n\nplt.show()","b4e2b2e1":"plt.figure(figsize = (15,6))\nsns.set(style = 'dark')\nplt.grid(True, color = 'darkBlue', alpha = 0.2)\nsns.kdeplot(data['Day_Perc_Change'], shade = True)\nplt.show()","3f011782":"data1 = pd.read_csv(\"..\/input\/datalarge-cap\/MARUTI.csv\")\ndata1 = data1[data1['Series'] == 'EQ'][['Close Price', 'Date']][1:]\ndata1.set_index('Date', drop = True, inplace = True)\n\ndata2 = pd.read_csv(\"..\/input\/datalarge-cap\/INFY.csv\")\ndata2 = data2[data2['Series'] == 'EQ'][['Close Price', 'Date']][1:]\ndata2.set_index('Date', drop = True, inplace = True)\n\ndata3 = pd.read_csv(\"..\/input\/datalarge-cap\/AXISBANK.csv\")\ndata3 = data3[data3['Series'] == 'EQ'][['Close Price', 'Date']][1:]\ndata3.set_index('Date', drop = True, inplace = True)\n\ndata4 = pd.read_csv(\"..\/input\/datalarge-cap\/TITAN.csv\")\ndata4 = data4[data4['Series'] == 'EQ'][['Close Price', 'Date']][1:]\ndata4.set_index('Date', drop = True, inplace = True)\n\ndata5 = pd.read_csv(\"..\/input\/datalarge-cap\/HDFCBANK.csv\")\ndata5 = data5[data5['Series'] == 'EQ'][['Close Price', 'Date']][1:]\ndata5.set_index('Date', drop = True, inplace = True)","e66888e0":"data_of_company = pd.DataFrame({'Maruti':data1['Close Price'],\n                                    'INFY': data2['Close Price'],\n                                    'AXISBANK':data3['Close Price'],\n                                    'Titan': data4['Close Price'],\n                                    'HDFCBANK': data5['Close Price']})","1aa89f96":"print(data_of_company.shape)\ndata_of_company.head()","2029502e":"data_per_change_company = pd.DataFrame({\n    'Maruti': data_of_company['Maruti'].pct_change(),\n    'INFY'  : data_of_company['INFY'].pct_change(),\n    'AXISBANK'  : data_of_company['AXISBANK'].pct_change(),\n    'Titan'  : data_of_company['Titan'].pct_change(),\n    'HDFCBANK'  : data_of_company['HDFCBANK'].pct_change(),\n})","670007c0":"data_per_change_company.head(3)","9a42831c":"data_per_change_company.dropna(inplace = True)\ndata_per_change_company.head(3)","7a7f137c":"g = sns.pairplot(data_per_change_company)\nplt.show()","c858ba0b":"rolling_average_7_day = data_per_change_company['Maruti'].rolling(7,axis = 0).mean()\nrolling_average_7_day.dropna(inplace = True)","affb7c7f":"std_deviation = rolling_average_7_day.std()","9676f85d":"std_deviation # it represent the variation in the data we are going to observe ","5b877138":"rolling_average_7_day.mean()","9e902710":"plt.figure(figsize = (15,6), dpi = 100)\nplt.grid(color = 'darkBlue', alpha = 0.3)\nsns.distplot(rolling_average_7_day, kde = False)\nplt.show()","85d4acea":"plt.figure(figsize = (15,6), dpi = 100)\nrolling_average_7_day.plot()\nplt.ylim(-0.050,0.050)\nplt.grid(color = 'darkBlue', alpha = 0.3)\nplt.show()","6eae1c07":"nifty50 = pd.read_csv(\"..\/input\/nifty50\/Nifty50.csv\")","8d81cc2c":"print(nifty50.shape)\nnifty50.head()","6d58f974":"nifty50.tail()","35101c60":"nifty_per_change = nifty50['Close'].pct_change()\nnifty_per_change.dropna(inplace = True)","c4a4b119":"nifty_rolling_average_7_day = nifty_per_change.rolling(7,axis = 0).mean()\nnifty_rolling_average_7_day.dropna(inplace = True)","ad5e94fc":"plt.figure(figsize = (15,6), dpi = 100)\nsns.set(style = 'white')\nrolling_average_7_day.plot(color = 'red')\nnifty_rolling_average_7_day.plot(color = 'darkBlue')\nplt.ylim(-0.02,0.1)\nplt.legend(['Maruti', 'nifty'])\nplt.grid(color = 'darkBlue', alpha = 0.3)\nplt.show()","876e1132":"moving_average_21 = data['Average Price'].rolling(21).mean()\nmoving_average_34 = data['Average Price'].rolling(34).mean()","de5dc135":"plt.figure(figsize = (15,6))\nplt.grid(True)\nmoving_average_21.plot( color = 'red', alpha = 0.5, label = 'Moving Average 21')\nmoving_average_34.plot( color = 'blue', alpha = 0.5, label = 'Moving Average 34')\ndata['Average Price'].plot(color = 'green', label = 'Average Price', linewidth = 1.5)\nplt.legend()\nplt.title('TCS Average Price')\nplt.show()","a54431ff":"new_data = pd.DataFrame({'14_day_Avg': data['Close Price'].rolling(14).mean(),\n                        '14_day_std':data['Close Price'].rolling(14).std(),\n                        'Close Price':data['Close Price']})","9c56dc5a":"new_data['Upper_Band'] = new_data['14_day_Avg'] + new_data['14_day_std']*2\nnew_data['Lower_Band'] = new_data['14_day_Avg'] - new_data['14_day_std']*2","807df578":"plt.figure(figsize = (15,6))\nnew_data['Close Price'].plot(color = 'black', linewidth = 2)\nnew_data['14_day_Avg'].plot(color = 'k', alpha = 0.4)\nnew_data['Upper_Band'].plot(color = 'darkBlue', alpha = 0.6)\nnew_data['Lower_Band'].plot(color = 'red', alpha = 0.6)\nplt.legend()\nplt.grid(True)\nplt.title('30 Day Bollinger Band for TCS')\nplt.ylabel('Price (USD)')\nplt.show();","6d15ff80":"new_data.to_csv('week3.csv')","9540540f":"# Query 10: (Bollinger Bands)\nTrade Calls - Using Bollinger Bands<br>\nPlot the bollinger bands for this stock - the duration of 14 days and 2 standard deviations away from the average \nThe bollinger bands comprise the following data points- \n\n*\tThe 14 day rolling mean of the closing price (we call it the average) \n*\tUpper band which is the rolling mean + 2 standard deviations away from the average. \n*\tLower band which is the rolling mean - 2 standard deviations away from the average. \n*\tAverage Daily stock price.<br>\nBollinger bands are extremely reliable , with a 95% accuracy at 2 standard deviations , and especially useful in sideways moving market. \nObserve the bands yourself , and analyse the accuracy of all the trade signals provided by the bollinger bands. \nSave to a new csv file. \n","49ccf077":"# Query2:(Plot Daily Change in Stock Price)\nA stem plot is a discrete series plot, ideal for plotting daywise data. It can be plotted using the plt.stem() function.","b7e41842":"# Query 4: (Pie Chart for Trends)\nWe had created a Trend column in module 1. We want to see how often each Trend type occurs. This can be seen as a pie chart, with each sector representing the percentage of days each trend occurs. Plot a pie chart for all the 'Trend' to know about relative frequency of each trend. You can use the groupby function with the trend column to group all days with the same trend into a single group before plotting the pie chart. From the grouped data, create a BAR plot of average & median values of the 'Total Traded Quantity' by Trend type. ","0c162ee3":"# Query6: ( Correlation between different stocks)\nWe next want to analyse how the behaviour of different stocks are correlated. The correlation is performed on the percentage change of the stock price instead of the stock price. \n\nLoad any 5 stocks of your choice into 5 dataframes. Retain only rows for which \u2018Series\u2019 column has value \u2018EQ\u2019. Create a single dataframe which contains the \u2018Closing Price\u2019 of each stock. This dataframe should hence have five columns. Rename each column to the name of the stock that is contained in the column. Create a new dataframe which is a percentage change of the values in the previous dataframe. Drop Nan\u2019s from this dataframe.","58252855":"Display a stem plot of the daily change in of the stock price in percentage. This column was calculated in module 1 and should be already available in week2.csv. Observe whenever there's a large change.","6e53bb53":"Now when both the data is in same range we can plot it on the graph.","f52bf1d4":"# Query 8: (Volatility for Nifty)\nCalculate the volatility for the Nifty index and compare the 2. This leads us to a useful indicator known as 'Beta' ","60f570d3":"# Query 1: (Data Analysis)\nLoad the week2.csv file into a dataframe. What is the type of the Date column? Make sure it is of type datetime64. Convert the Date column to the index of the dataframe.<br>\n\nPlot the closing price of each of the days for the entire time frame to get an idea of what the general outlook of the stock is.<br>\n\nLook out for drastic changes in this stock, you have the exact date when these took [](http:\/\/)place, try to fetch the news for this day of this stock<br>\n\nThis would be helpful if we are to train our model to take NLP inputs.\n\n","9c8bd71b":"Per_c change is in the range of -100 to 100","ae987700":"***Call! should be buy whenever the smaller moving average (21) crosses over longer moving average (34) AND the call should be sell whenever smaller moving average crosses under longer moving average.***","d85177f6":"The primary reason could be the statement made by British Parliamentary Committee terming TCS as as **\"masterclass in incompetence\".**","c29d0966":"# Query 3:(Plot Daily Volumes)","584731a6":"Here, we are seeing at the max and minimum percent change in 'Day_Perc_Change' because the value of this column was calculated on the daily change in close prices.\n\nA negative number shows that the price dropped from the previous day.\n\nA positive number shows that the price rised from the previous day.\n\nSince, it is fairly observable from the graph that a fall in 'Price' is observed between 2018-04 and 2018-07. So the percent change has to be negative i.e. in II case.","2a92caa4":"# Query 5: (Plot Daily Return)\nPlot the daily return (percentage) distribution as a histogram.\nHistogram analysis is one of the most fundamental methods of exploratory data analysis. In this case, it'd return a frequency plot of various values of percentage changes \n","b5a4c5f7":"It can be observed that most of the changes in price on daya to day are not more than 10% but due their is one data point going upton 50% in negative direction shows that the price of stock decreased by that margin on **2018-05-31** due to their news of \"*masterclass in incompetence*\" by the British Parliament Committee.","b5c7d61f":"**min max normalization of the data** in the range 0 to 100\n\n$$ v' = \\frac{v - min}{max - min} \\times (new_max - new_min) + new_min$$","532b14ba":"According to a report by the committee published on May25, *The modernisation of Disclosure and Barring Service (DBS) is currently over **four year late** and **&#163;229** million over its original budget, with no agreed date for completion.*","0d38acff":"# Module 2","90081e92":"# Query 9: ( Moving Average)\nPlot the 21 day and 34 day Moving average with the average price and decide a Call ! \nCall should be buy whenever the smaller moving average (21) crosses over longer moving average (34) AND the call should be sell whenever smaller moving average crosses under longer moving average. \nOne of the most widely used technical indicators.","b6d00744":"# Query 7:(Rolling Average)\nVolatility is the change in variance in the returns of a stock over a specific period of time.<br>\nYou have already calculated the percentage changes in several stock prices. Calculate the 7 day rolling average of the percentage change of any of the stock prices, then compute the standard deviation (which is the square root of the variance) and plot the values.<br>\n*Note: pandas provides a rolling() function for dataframes and a std() function also which you can use.*","f45a183c":"Plot the daily volumes as well and compare the percentage stem plot to it. Document your analysis of the relationship between volume and daily percentage change"}}