{"cell_type":{"33bb8519":"code","e0e0e60a":"code","5992ac85":"code","5d259b26":"code","a84cb60f":"code","6c5a84ff":"code","76e8f5d6":"code","1de26e47":"code","f1bd0b8f":"code","8b51cac7":"code","be2bcea3":"code","93f097e2":"code","16975aa7":"code","51c9e36f":"code","497355ea":"code","3a3ed75c":"code","3f27df71":"code","0f888bd6":"code","27f2884f":"code","cd1ffd43":"code","1ce5847e":"code","bcdbef3c":"code","925049e6":"code","14ec5a40":"code","5a11a782":"code","61216bbd":"code","cc75f44c":"code","e456b382":"markdown","6d2b271f":"markdown","60209b69":"markdown","cbf8d51a":"markdown","1ea1f6d3":"markdown","6da492a1":"markdown","c4eeb137":"markdown"},"source":{"33bb8519":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e0e0e60a":"data = pd.read_csv('\/kaggle\/input\/tv-shows-on-netflix-prime-video-hulu-and-disney\/tv_shows.csv')","5992ac85":"print(data['type'].value_counts().values[0])","5d259b26":"# We can remove the type column\ndata = data.iloc[:,1:-1]","a84cb60f":"data['ID'] = data.index","6c5a84ff":"data.head()","76e8f5d6":"total_platforms = data[['Netflix', 'Hulu', 'Prime Video', 'Disney+']].apply(pd.Series.value_counts).reset_index()\ntotal_platforms.columns = ['Present', 'Netflix', 'Hulu', 'Prime Video', 'Disney+']","1de26e47":"total_platforms","f1bd0b8f":"labels = ['Netflix', 'Hulu', 'Prime Video', 'Disney+']","8b51cac7":"plt.figure(figsize=(12,8))\np = plt.pie(total_platforms[total_platforms.Present == 1].iloc[:,1:], labels=labels, explode = (0.1, 0.1, 0.1, 0.1), \n            autopct='%1.0f%%', labeldistance=1.1, shadow=True)","be2bcea3":"for i in labels:\n    data['rating_'+i] = data['IMDb'] * data[i]","93f097e2":"imdb_platforms = data.replace(0, np.nan)","16975aa7":"imdb_platforms = imdb_platforms[['rating_Netflix', 'rating_Hulu', 'rating_Prime Video', 'rating_Disney+']].mean().reset_index()\nimdb_platforms.columns = ['ratings', 'mean']\nimdb_platforms.sort_values(by='mean', ascending=False)","51c9e36f":"plt.figure(figsize=(12,8))\nax = sns.barplot(x=\"ratings\", y=\"mean\", data=imdb_platforms)\nl = ax.set(ylim=(6.8, 7.3))","497355ea":"# Less TV Shows on Disney+ and the lowest rates","3a3ed75c":"fig, axes = plt.subplots(2, 2,figsize=(22,15))\n\nax1 = data[data.Netflix == 1].groupby('IMDb')['ID'].count().plot(xlim=(0, 10), ax=axes[0,0])\nax2 = data[data.Hulu == 1].groupby('IMDb')['ID'].count().plot(xlim=(0, 10),ax=axes[0,1])\nax3 = data[data['Prime Video'] == 1].groupby('IMDb')['ID'].count().plot(xlim=(0, 10),ax=axes[1,0])\nax4 = data[data['Disney+'] == 1].groupby('IMDb')['ID'].count().plot(xlim=(0, 10),ax=axes[1,1])\n\nax1.title.set_text(labels[0])\nax2.title.set_text(labels[1])\nax3.title.set_text(labels[2])\nax4.title.set_text(labels[3])\n\nplt.show()","3f27df71":"# Disney+ with a discontinuous curve","0f888bd6":"fig, axes = plt.subplots(2, 2,figsize=(22,15))\n\nax1 = data[data.Netflix == 1].groupby('Year')['ID'].count().plot(xlim=(data['Year'].min(), data['Year'].max()), ax=axes[0,0])\nax2 = data[data.Hulu == 1].groupby('Year')['ID'].count().plot(xlim=(data['Year'].min(), data['Year'].max()),ax=axes[0,1])\nax3 = data[data['Prime Video'] == 1].groupby('Year')['ID'].count().plot(xlim=(data['Year'].min(), data['Year'].max()),ax=axes[1,0])\nax4 = data[data['Disney+'] == 1].groupby('Year')['ID'].count().plot(xlim=(data['Year'].min(), data['Year'].max()),ax=axes[1,1])\n\nax1.title.set_text(labels[0])\nax2.title.set_text(labels[1])\nax3.title.set_text(labels[2])\nax4.title.set_text(labels[3])\n\nplt.show()","27f2884f":"# As expected, more tv shows from the 2000s","cd1ffd43":"data['Age'].value_counts()","1ce5847e":"fig = plt.figure(figsize=(35,15))\n\nage_netflix = data[data.Netflix == 1].groupby(['Age', 'Netflix']).count()['ID'].reset_index()[['Age', 'ID']]\nage_hulu = data[data.Hulu == 1].groupby(['Age', 'Hulu']).count()['ID'].reset_index()[['Age', 'ID']]\nage_prime = data[data['Prime Video'] == 1].groupby(['Age', 'Prime Video']).count()['ID'].reset_index()[['Age', 'ID']]\nage_disney = data[data['Disney+'] == 1].groupby(['Age', 'Disney+']).count()['ID'].reset_index()[['Age', 'ID']]\n\nax = plt.subplot2grid((2,4),(0,0))\np = plt.pie(age_netflix['ID'], labels=age_netflix.Age, explode = (0.05, 0.05, 0.05, 0.05, 0.05), autopct='%1.0f%%', labeldistance=1.1, shadow=True)\nplt.title('Netflix')\nax = plt.subplot2grid((2,4),(0,1))\np = plt.pie(age_hulu['ID'], labels=age_hulu.Age, explode = (0.05, 0.05, 0.05, 0.05), autopct='%1.0f%%', labeldistance=1.1, shadow=True)\nplt.title('Hulu')\nax = plt.subplot2grid((2,4),(1,0))\np = plt.pie(age_prime['ID'], labels=age_prime.Age, explode = (0.05, 0.05, 0.05, 0.05, 0.05), autopct='%1.0f%%', labeldistance=1.1, shadow=True)\nplt.title('Prime Video')\nax = plt.subplot2grid((2,4),(1,1))\np = plt.pie(age_disney['ID'], labels=age_disney.Age, explode = (0.05, 0.05, 0.05), autopct='%1.0f%%', labeldistance=1.1, shadow=True)\nplt.title('Disney+')\nplt.show()","bcdbef3c":"# Disney has a lot more accessible contents (98% of all or 7+)\n# The 3 others has ~60% of adult content (16+ and 18+)","925049e6":"plt.figure(figsize=(20,8))\ng = sns.countplot(data.IMDb)\nt = plt.xticks(rotation=90)","14ec5a40":"age = data.groupby('Age').count()['ID'].reset_index()\nage.columns = ['Age', 'count']","5a11a782":"age.sort_values(by='count', ascending=False)","61216bbd":"plt.figure(figsize=(12,8))\np = plt.pie(age['count'], labels=age.Age, explode = (0.05, 0.05, 0.05, 0.05, 0.05), autopct='%1.0f%%', labeldistance=1.1, shadow=True)","cc75f44c":"# 16+ is the most frequent age used for TV Shows","e456b382":"### Age repartition","6d2b271f":"### TV Shows year","60209b69":"### TV Shows Exploration","cbf8d51a":"### TV Shows Ages repartition on Platform","1ea1f6d3":"### TV Shows ratings","6da492a1":"### MTV Shows ratings","c4eeb137":"# Comparing Platforms"}}