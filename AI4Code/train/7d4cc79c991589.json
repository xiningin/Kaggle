{"cell_type":{"57eaec77":"code","de401974":"code","ca35f150":"code","41622b92":"code","e9a5a421":"code","7e697fac":"code","920b348f":"code","65817104":"code","e43d9203":"code","0654095b":"code","619c9b85":"code","73526eb7":"code","173773c9":"code","e2b0c422":"code","42e584e9":"code","eb16c257":"code","17386f8e":"code","79fcffb9":"code","88978460":"code","ded63ff4":"code","12ccab1d":"code","e64cdc81":"code","1d7eca97":"code","31447718":"code","90fcb2b8":"code","322db5c8":"code","a22bdaf2":"code","37b27632":"code","aec37d7d":"code","5b17f56c":"code","b6f85e12":"code","9a68eca8":"code","5209b909":"code","d166fcde":"code","76366db7":"code","f0160c7f":"code","d0f3b68b":"code","91024a96":"code","ad0fe19e":"code","7f7c698d":"code","22bd4170":"code","8b89aa6b":"code","d31e6ef4":"code","fa205dd3":"code","56a59bd3":"code","803aacc8":"code","ba94a8c4":"code","7a73e1be":"code","d603c733":"code","6a65dd23":"code","92a05853":"code","ef5f5f46":"code","faf3fa71":"code","fd172b10":"code","50bd198d":"code","517592d3":"code","c157bba8":"code","16bf8618":"code","ee2f5a0e":"code","acdc6515":"code","fb6dbcef":"code","7b098e5c":"code","6ea2bc06":"markdown","28fc5a0b":"markdown","530f39e7":"markdown","56814da5":"markdown","ae32030d":"markdown","c58f1edc":"markdown","6df4f28a":"markdown","981e1245":"markdown","6e94b3bb":"markdown","96b1f86b":"markdown","d6a311d6":"markdown","f0961b4c":"markdown","5f2c1486":"markdown","d8d58e77":"markdown","a562893a":"markdown","05468d82":"markdown","be1dbf39":"markdown","4d6d9bdd":"markdown","e0aff16c":"markdown","de561356":"markdown","5cde3c59":"markdown","a1cad457":"markdown","4d3a564c":"markdown","46e9e27d":"markdown","48f50cfa":"markdown","abbf5415":"markdown","42d0e358":"markdown","9957558c":"markdown","501f921a":"markdown","fc96b435":"markdown","ef5f0934":"markdown","2c3d3eb8":"markdown","3d369097":"markdown","81e16d44":"markdown","91c127ee":"markdown","ca2770cf":"markdown","db1cdee8":"markdown","56fa43c5":"markdown","840a7523":"markdown","d8d32819":"markdown","155423c2":"markdown","396da65a":"markdown","53a9ad0d":"markdown","956c5e5d":"markdown","2047ec87":"markdown","0977c3f3":"markdown","ec3a5be3":"markdown","65dab7db":"markdown","05e31c5a":"markdown","d91b797d":"markdown","705a1dde":"markdown","84d5064d":"markdown","f3aae884":"markdown","4b491182":"markdown","3eee6e84":"markdown","b0cf61e6":"markdown","f84f0157":"markdown","c49f3f24":"markdown","07fc127b":"markdown","de9032e5":"markdown","f2491106":"markdown","09104303":"markdown","b19aaf99":"markdown","b74f425f":"markdown","950e3300":"markdown","572d6d7f":"markdown","186d0dea":"markdown","e53b05fa":"markdown","7364de78":"markdown","21f834e2":"markdown","8b2a09fc":"markdown","6d7bc8f1":"markdown","8410f3f7":"markdown","626ea23f":"markdown","9de79bfd":"markdown","cebe1c2a":"markdown","324e8797":"markdown","d7728306":"markdown","12642146":"markdown","7adc773c":"markdown","ee6faf4f":"markdown","28f4d3f7":"markdown","7d3e03ac":"markdown","5f8b7dea":"markdown","4574051b":"markdown","e80adca0":"markdown","4bc65be6":"markdown","2ed2f16c":"markdown"},"source":{"57eaec77":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","de401974":"df_zomato=pd.read_csv('ZomatoRestaurantsIndia.csv')\ndf_zomato.head(3)","ca35f150":"print(df_zomato.shape)\ndf_zomato.dtypes","41622b92":"df_zomato.head()","e9a5a421":"#First drop all the duplicate rows\ndf=df_zomato.copy()  # Copy the original dataframe\n\ndf1=df_zomato.drop_duplicates()\n\nprint(df1.shape)\n\n#Columns currency , country_id have same value for all rows,they can be dropped.Column url does not give much information and locality_verbose is a repetitive column.\n\ndf1.drop(['url','currency','country_id','locality_verbose','opentable_support','address'],axis=1,inplace=True)\nprint(df1.shape)","7e697fac":"print(df1.dtypes)","920b348f":"df1[['res_id','delivery','takeaway']]=df1[['res_id','delivery','takeaway']].astype('object')\ndf1.dtypes","65817104":"dup_len=df1[df1.duplicated(['res_id'],keep=False)]\nprint(len(dup_len))\n\ndf1.drop_duplicates(subset='res_id',keep=False,inplace=True)\ndf1.shape","e43d9203":"name_count=df1['name'].value_counts()\nprint(len(name_count))\n\ndf1['name'].value_counts()[:10].plot(kind='bar')\nplt.title(\"Top restaurant chain in Country\",weight=\"bold\")\nplt.ylabel(\"Name\")\nplt.xlabel(\"Count\")\nplt.show()","0654095b":"estab_count=df1['establishment'].unique()\nprint(len(estab_count))\n\n#var=df1.groupby(['establishment']).count()\n#print(var.head(2))\n\nprint(\"Mode is \",df1['establishment'].mode())\nsns.countplot(df1['establishment'])\nplt.title(\"Count of Type of Restaurant\",weight='bold')\nplt.xticks(rotation=90)\n\nplt.show()","619c9b85":"city_count=df1['city'].unique()\nprint(\"No. of differen cities are \",len(city_count))\n\ncity_mode=df1['city'].mode()\nprint(\"Most no. of restaurants are in \",city_mode)\n\nprint(df1['city'].isnull().sum())\n\nfig,ax=plt.subplots(figsize=(18,6))\nsns.countplot(df1['city'],ax=ax)\nplt.xticks(rotation=90)\nplt.show()","73526eb7":"#Visualization\nfig,ax=plt.subplots(figsize=(14,18))\ndf1.city.value_counts().plot(kind='barh',ax=ax)\nplt.title(\"Restaurant count in city\",weight=\"bold\")\nplt.xlabel(\"Count\")\nplt.ylabel(\"City\")\nplt.show()\n\n#Showing Numbers\ndf1.groupby('city')['name'].count().sort_values()","173773c9":"print(\"Total diff. types of locality are:\",len(df['locality'].unique()),\"\\n\")\n\ndf1.groupby('city')['locality'].value_counts()[:10].plot(kind='pie')\nvar=df1.groupby('city')['locality'].value_counts()\nprint('Count of localities in diff. city:\\n',var)","e2b0c422":"print(df1['latitude'].dtype)\n#(df1['latitude']<8.4) \ninvalid_loc=(df1['latitude']<8.4) & (df1['latitude']>37.6)\n\ndf1['latitude']=df1['latitude'].replace(invalid_loc,np.nan)\n#Find length of such location\nprint(len(invalid_loc))\n\ndf1['latitude'].isnull().sum()","42e584e9":"print(df1['longitude'].dtype)\n \ninvalid_loc=(df1['longitude']<68.7) & (df1['longitude']>97.25)\n\ndf1['longitude']=df1['longitude'].replace(invalid_loc,np.nan)\n\nprint(len(invalid_loc))\ndf1['longitude'].isnull().sum()","eb16c257":"df1['cuisines'].count().sum()\n","17386f8e":"def cuisine_func(data):\n    features=[]\n    for i in data.cuisines:\n        for j in i.split(','):\n            j=j.strip()\n            features.append(j)\n    return(features)","79fcffb9":"data=df1[df1.cuisines.notnull()]\ndata.highlights=data.cuisines.apply(lambda x:x.lower().strip())\ncuisine=cuisine_func(data)\ncuisine=pd.Series(cuisine)\ncuisine.value_counts()[:10]","88978460":"print(df1['average_cost_for_two'].value_counts()[:10])\n#df1['average_cost_for_two'].isnull().sum()\nplt.figure(figsize = (12,8))\ndf1['average_cost_for_two'].value_counts()[:10].plot(kind = 'pie')\nplt.title('Avg cost in Restaurent for 2 people', weight = 'bold')\nplt.show()","ded63ff4":"print(df1['price_range'].value_counts())\n\nprint(df1['price_range'].isnull().values.any())\n\ndf1['price_range'].plot(kind='hist')\nplt.show()","12ccab1d":"plt.figure(figsize = (12,6))\nnames = df1['price_range'].value_counts().index\nvalues = df1['price_range'].value_counts().values\nexplode = (0.1, 0.1, 0.1, 0.1)  # explode 1st slice\n\ncolors = ['blue','red','green','yellow','blck','white']\nplt.title('Price Range Restaurants', weight = 'bold')\nplt.pie(values, explode=explode, labels=names, colors=colors,autopct='%1.1f%%', shadow=True)\nplt.axis('equal')\nplt.show()","e64cdc81":"df1['highlights'].value_counts()[:10]","1d7eca97":"def highlight_func(data):\n    features=[]\n    for i in data.highlights:\n        for j in i.split(','):\n            j=j.strip()\n            features.append(j)\n    return(features)","31447718":"data=df1[df1.highlights.notnull()]\ndata.highlights=data.highlights.apply(lambda x:x.lower().strip())\nfeatures=highlight_func(data)\nplt.figure(figsize=(12,6)) \npd.Series(features).value_counts()[:10].plot(kind='bar',color= 'c')\nplt.title('Highlights of restaurant',weight='bold')\nplt.xlabel('Highlights')\nplt.ylabel('Count')","90fcb2b8":"average_ratings=df1.groupby(['city'],as_index=False)\navg_agg=average_ratings['aggregate_rating'].agg(np.mean)\nprint(avg_agg.head())\nplt.figure(figsize=(25,10))\nplt.xlabel('City', fontsize=20)\nplt.ylabel('Average Ratings', fontsize=20)\nplt.title('Average Ratings on Cities', fontsize=30)\nplt.bar(avg_agg['city'], avg_agg['aggregate_rating'])\nplt.xticks(rotation=90)\nplt.show()","322db5c8":"df1['rating_text'].value_counts()","a22bdaf2":"vote_df=df1.groupby(['city'],as_index=False)['votes'].mean()\nprint(vote_df.head(10))\nvote_df.columns=['City','Mean Votes']\nvote10=(vote_df.sort_values(['Mean Votes'],ascending=False)).head(10)\nsns.set(rc={'figure.figsize':(11.7,8.27)})\nsns.barplot(x=\"City\",y=\"Mean Votes\",data=vote10)\nplt.xlabel('City')\nplt.ylabel('Mean Votes')\nplt.title('City vs Votes',weight='bold')\nplt.show()","37b27632":"print('National mean of photos',df1['photo_count'].mean())\nphoto_df=df1.groupby(['city'],as_index=False)['photo_count'].mean()\nphoto_df.columns=['City','Mean Photo Count']\nphoto10=(photo_df.sort_values(['Mean Photo Count'],ascending=False)).head(10)\nprint(photo10.head(10))\nsns.set(rc={'figure.figsize':(11.7,8.27)})\nsns.barplot(x=\"City\",y=\"Mean Photo Count\",data=photo10)\nplt.xlabel('City')\nplt.ylabel('Mean Photo Count')\nplt.title(\"Photo Count of Cities\",weight='bold')\nplt.show()\n","aec37d7d":"border=[0.1,0.2,0.0]\nfig,ax=plt.subplots()\n\ndf1['delivery'].value_counts().plot(kind='pie',explode=border,autopct=\"%1.1f%%\",ax=ax)\nplt.title(\"Delivery Count for Country Restaurant\",weight='bold')\nplt.show()\ndel_df=df1.groupby(['city'],as_index=False)['delivery'].count()\ndel_df.columns=['City','Delivery']\ndel10=(del_df.sort_values(['Delivery'],ascending=False)).head(10)\nsns.set(rc={'figure.figsize':(11.7,8.27)})\nsns.barplot(x=\"City\",y=\"Delivery\",data=del10)\nplt.xlabel('City')\nplt.ylabel('Delivery Count')\nplt.title(\"Delivery Count of Cities\",weight='bold')\nplt.show()\nprint(del_df.head(5))","5b17f56c":"print(df1.isnull().values.any())\ndf1.dropna(inplace=True)\nprint(df1.info())","b6f85e12":"df1.describe()","9a68eca8":"df1.corr()","5209b909":"#Detecting by IQR\nQ1=df1.quantile(0.25)\nQ3=df1.quantile(0.75)\nIQR=Q3-Q1\nprint(IQR)\n\n#sns.boxplot(x='city_id',y='name',data=df1)\n#plt.show()","d166fcde":"def splitDataFrameIntoSmaller(df1, chunkSize = 1019): \n    listOfDf = list()\n    numberChunks = len(df1) \/\/ chunkSize + 1\n    for i in range(numberChunks):\n        listOfDf.append(df1[i*chunkSize:(i+1)*chunkSize])\n    return listOfDf\n\n\ndf_list=splitDataFrameIntoSmaller(df1)\ndf_list[0].head()\ndf_list[0]['region']='north'\ndf_list[1]['region']='south'\ndf_list[2]['region']='west'\ndf_list[3]['region']='central'\ndf_list[4]['region']='east'\n\nregion_df=pd.DataFrame()\n\nregion_df=region_df.append(df_list)\nregion_df.head(5)\n","76366db7":"group_city=region_df.groupby(['region'],as_index=False)['city'].count()\ngroup_city.columns=['Region','City']\nprint(group_city)","f0160c7f":"df_exp=df1[df1['price_range']>3]\ndf_exp['city'].value_counts()[:10].plot(kind='barh')\nplt.xlabel(\"Count of restaurant\")\nplt.ylabel('City')\nplt.title('Cities with expensive restaurant')\nplt.show()","d0f3b68b":"region_df.groupby('region').describe()","91024a96":"def highlight_func(data):\n    features=[]\n    for i in data.highlights:\n        for j in i.split(','):\n            j=j.strip()\n            features.append(j)\n    return(features)","ad0fe19e":"feature=list()\ndata=df_list[0][df_list[0].highlights.notnull()]\ndata.highlights=data.highlights.apply(lambda x:x.lower().strip())\nf1=highlight_func(data)\nfeature.extend(set(f1))\n\ndata=df_list[1][df_list[1].highlights.notnull()]\ndata.highlights=data.highlights.apply(lambda x:x.lower().strip())\nf2=highlight_func(data)\nfeature.extend(set(f2))\n\ndata=df_list[2][df_list[2].highlights.notnull()]\ndata.highlights=data.highlights.apply(lambda x:x.lower().strip())\nf3=highlight_func(data)\nfeature.extend(set(f3))\n\ndata=df_list[3][df_list[3].highlights.notnull()]\ndata.highlights=data.highlights.apply(lambda x:x.lower().strip())\nf4=highlight_func(data)\nfeature.extend(set(f4))\n\ndata=df_list[4][df_list[4].highlights.notnull()]\ndata.highlights=data.highlights.apply(lambda x:x.lower().strip())\nf5=highlight_func(data)\nfeature.extend(set(f5))","7f7c698d":"north=list(set(f1)-(set(f2)-set(f3)-set(f4)-set(f5)))","22bd4170":"east=list(set(f5)-(set(f2)-set(f3)-set(f4)-set(f1)))","8b89aa6b":"south=list(set(f2)-(set(f5)-set(f3)-set(f4)-set(f1)))","d31e6ef4":"west=list(set(f3)-(set(f5)-set(f2)-set(f4)-set(f1)))","fa205dd3":"comm=list()\ncomm.extend(north)\ncomm.extend(south)\ncomm.extend(west)\ncomm.extend(east)\n\nc=pd.Series(comm)\nc.column=['High']\nc.value_counts()[:10].plot(kind='bar')\n\nplt.xlabel('Locality')\nplt.ylabel('Count of highlight')\nplt.title(\"Top 10 Highlights \",weight='bold')\n#plt.show()","56a59bd3":"def cuisine_func(data):\n    features=[]\n    for i in data.cuisines:\n        for j in i.split(','):\n            j=j.strip()\n            features.append(j)\n    return(features)","803aacc8":"feature=list()\ndata=df_list[0][df_list[0].cuisines.notnull()]\ndata.cuisines=data.cuisines.apply(lambda x:x.lower().strip())\nf1=cuisine_func(data)\nfeature.extend(set(f1))\n\ndata=df_list[1][df_list[1].cuisines.notnull()]\ndata.cuisines=data.cuisines.apply(lambda x:x.lower().strip())\nf2=cuisine_func(data)\nfeature.extend(set(f2))\n\ndata=df_list[2][df_list[2].cuisines.notnull()]\ndata.cuisines=data.cuisines.apply(lambda x:x.lower().strip())\nf3=cuisine_func(data)\nfeature.extend(set(f3))\n\ndata=df_list[3][df_list[3].cuisines.notnull()]\ndata.cuisines=data.cuisines.apply(lambda x:x.lower().strip())\nf4=cuisine_func(data)\nfeature.extend(set(f4))\n\ndata=df_list[4][df_list[4].cuisines.notnull()]\ndata.cuisines=data.cuisines.apply(lambda x:x.lower().strip())\nf5=cuisine_func(data)\nfeature.extend(set(f5))","ba94a8c4":"print(set(f1))","7a73e1be":"print(set(f5))","d603c733":"print(set(f2))","6a65dd23":"print(set(f3))","92a05853":"common_cuisine=list()\n\ncommon_cuisine.extend(f1)\ncommon_cuisine.extend(f2)\ncommon_cuisine.extend(f3)\ncommon_cuisine.extend(f5)\n\ncomm=pd.Series(common_cuisine)\ncomm.columns=['Cuisine']\ncomm.value_counts()[:10].plot(kind='bar')\n\nplt.xlabel('Cuisine')\nplt.ylabel('Number')\nplt.title('Top 10 cuisines across region',weight='bold')\n\n","ef5f5f46":"cuisine_count = []\n\nfor i in df_list[0].cuisines:\n    for t in i.split(','):\n        t = t.strip()\n        cuisine_count.append(t)\n\n\nplt.figure(figsize=(12,6))\npd.Series(cuisine_count).value_counts()[:10].plot(kind='bar',color= 'c')\nplt.title('Top 10 cuisines in North Area',weight='bold')\nplt.xlabel('Cuisine')\nplt.ylabel('Count')\nplt.show()","faf3fa71":"plt.figure(figsize = (12,6))\nsns.barplot(x='aggregate_rating',y='photo_count',data=df_list[0])\nplt.xlabel(\"Rating\")\nplt.ylabel(\"Photo Count\")\nplt.title(\"Rating Trend with Photo\",weight = 'bold')\nplt.show()","fd172b10":"plt.figure(figsize = (12,6))\nsns.barplot(x='aggregate_rating',y='votes',data=df_list[0])\nplt.xlabel(\"Rating\")\nplt.ylabel(\"Votes\")\nplt.title(\"Rating Trend with Votes\",weight = 'bold')\nplt.show()","50bd198d":"plt.figure(figsize = (12,6))\nsns.boxplot(x='aggregate_rating',y='votes',data=df_list[0])\nplt.xlabel(\"Rating\")\nplt.ylabel(\"Votes\")\nplt.title(\"Rating Trend with Votes\",weight = 'bold')\nplt.show()","517592d3":"new_df=region_df[region_df['city']=='Mumbai']","c157bba8":"expensive=new_df[new_df['average_cost_for_two']>5000]\n\n\nnew=new_df.groupby(['name'],as_index=False)['average_cost_for_two'].sum()\nnew.columns=['Name',\"Cost\"]\ncostly=(new.sort_values(['Cost'],ascending=False)).head(20)\nprint(costly.head())\n\nsns.barplot(y='Cost',x='Name',data=costly)\nplt.xlabel(\"Reataurant Name\")\nplt.ylabel(\"Avg.Cost\")\nplt.title(\"Costly Restaurant in Mumbai\",weight=\"bold\")\nplt.xticks(rotation=90)\nplt.show()","16bf8618":"cuisines= []\n\nfor i in new_df.cuisines:\n    for j in i.split(','):\n        j = j.strip()\n        cuisines.append(j)\n        \n        \nplt.figure(figsize=(12,6)) \npd.Series(cuisines).value_counts()[:20].plot(kind='bar',color= 'r')\nplt.title('Top 10 cuisines in Mumbai',weight='bold')\nplt.xlabel('cuisines type')\nplt.ylabel('No of restaurants')\nplt.show()","ee2f5a0e":"new_df['locality'].value_counts()\n\n# Checking Popularity of a locality by calculating average rating of all restaurants present in that locality.\npop_loc=new_df.groupby(['locality'],as_index=False)['aggregate_rating'].mean()\npop_loc.columns=['Locality','Rating']\nloc_df=(pop_loc.sort_values(['Rating'],ascending=False)).head(10)\n\nsns.barplot(x='Locality',y='Rating',data=loc_df)\nplt.xticks(rotation=90)\nplt.title(\"Popular Locality in Mumbai\")\nplt.show()","acdc6515":"plt.xlabel('Rating')\nplt.ylabel('Average Cost for two(In Indian Rupees)')\nplt.title('Rating vs Avg. Cost for Two')\nsns.pointplot(x='aggregate_rating',y='average_cost_for_two',data=new_df,ci=False)\nplt.show()","fb6dbcef":"plt.xlabel('Establishment')\nplt.ylabel('Photo Count')\nplt.title('Rating vs Avg. Cost for Two')\nsns.boxplot(x='establishment',y='photo_count',data=new_df)\nplt.xticks(rotation=90)\nplt.show()","7b098e5c":"west_df=region_df[region_df['region']=='west']\nwest_feature=highlight_func(west_df)\nwest_feature=pd.DataFrame(west_feature)\nwest_feature.columns=['Highlight']\nl=list(west_feature['Highlight'].unique())\nprint(\"There are \",len(l),\" unique facilities available\")","6ea2bc06":"**4. Check for relationship between 'aggregate_rating' and 'average_cost_for_two'**","28fc5a0b":"<a id='outliers'> <\/a>\n## 8. Detect outliers","530f39e7":"### 2b. Cuisines available in restaurants for different regions","56814da5":"**Let us find the count of restaurants in each city**","ae32030d":"Create a variable 'region' with four categories 'northern','eastern', 'southern', 'western' and 'central'. To do so, use the 'city' column, group all cities belonging to the same region. ","c58f1edc":"**9. Variable 'price_range'**","6df4f28a":"**Cuisines in the western region** ","981e1245":"**2.To find the top 20 cuisines of Mumbai**","6e94b3bb":"<b>Lets us explore the data some more now that we have extrapolated and removed the missing values <br>\nWe now conduct analysis to compare the regions.<\/b>","96b1f86b":"Let us check the summary statistics for numerical variables.","d6a311d6":"- check if the values are replace by NaN's","f0961b4c":"**8. Variable 'average_cost_for_two'**","5f2c1486":"**2. Do restaurants with more photo counts and votes have better rating?**","d8d58e77":"#### Change the incorrect data type","a562893a":"**1. Variable 'name'**","05468d82":"<a id='Understand_Data'><\/a>\n## 4. Understand  and Prepare the Data","be1dbf39":"### 2.  Comparing regions","4d6d9bdd":"<a id = 'correlation'> <\/a>\n## 7. Study correlation","e0aff16c":"**13. Variable 'votes'**","de561356":"<table align=\"left\">\n    <tr>\n        <td width=\"8%\">\n            <img src=\"todo.png\">\n        <\/td>\n        <td>\n            <div align=\"left\", style=\"font-size:120%\">\n                <font color=\"#21618C\">\n                    <b>Make necessary changes to :<br><br>\nSet the working directory              \n                    <\/b>\n                <\/font>\n            <\/div>\n        <\/td>\n    <\/tr>\n<\/table>","5cde3c59":"<table align=\"left\">\n    <tr>\n        <td width=\"8%\">\n            <img src=\"todo.png\">\n        <\/td>\n        <td>\n            <div align=\"left\", style=\"font-size:120%\">\n                <font color=\"#21618C\">\n                    <b> Analyze and prepare data:<br>\n                        1. Check dimensions of the dataframe <br>\n                        2. View the head of the data<br>\n                        3. Note the redundant variables and drop them <br>\n                        4. Check the data types. Refer to data definition to ensure your data types are correct. If data types are not as per business context, change the data types as per requirement <br>\n                        5. Check for duplicates<br>\n                        Note: It is an art to explore data and one will need more and more practice to gain expertise in this area\n                    <\/b>\n                <\/font>\n            <\/div>\n        <\/td>\n    <\/tr>\n<\/table>","a1cad457":"<table align=\"center\" width=100%>\n    <tr>\n        <td width=\"15%\">\n            <img src=\"edaicon.png\">\n        <\/td>\n        <td>\n            <div align=\"center\">\n                <font color=\"#21618C\" size=24px>\n                    <b>Exploratory Data Analysis\n                    <\/b>\n                <\/font>\n            <\/div>\n        <\/td>\n    <\/tr>\n<\/table>","4d3a564c":"**2. Variable 'establishment'**","46e9e27d":"###  3. The Northern Region","48f50cfa":"## Table of Contents\n\n1. **[Import Libraries](#import_lib)** \n2. **[Set Options](#set_options)** \n3. **[Read Data](#Read_Data)** \n4. **[Understand  and Prepare the Data](#Understand_Data)**\n5. **[Understand the variables](#Understanding_variables)**\n6. **[Check for Missing Values](#missing)**\n7. **[Study Correlation](#correlation)**\n8. **[Detect Outliers](#outliers)**\n9. **[Create a new variable 'region'](#region)**\n10. **[Some more analysis](#more)** \n","abbf5415":"<table align =\"left\">\n    <tr>\n        <td width=\"8%\">\n            <img src=\"todo.png\">\n        <\/td>\n        <td>\n            <div align=\"left\", style=\"font-size:120%\">\n                <font color=\"#21618C\">\n                    <b> Import the required libraries and functions\n                    <\/b>\n                <\/font>\n            <\/div>\n        <\/td>\n    <\/tr>\n<\/table>","42d0e358":"consider the city mumbai and get a better insights of restuarants in Mumbai.","9957558c":"**Now we shall consider only the northern region**","501f921a":"### 1. To find which cities have expensive restaurants \n\n-  plot the cities which have costliest restaurants. ","fc96b435":"\n\n- write a small function to know the number of times a facility has appeared in the 'Highlights'.","ef5f0934":"- select unique facilities available at restaurants in western region\n- sort facilities based on frequency\n","2c3d3eb8":"**1. Check dimensions of the dataframe in terms of rows and columns**","3d369097":"We shall now plot the graphs for top 10 highlights.","81e16d44":"- Now we find out which facility occurs most number of in the data.","91c127ee":"- To find the unique cusines we write a small user defined function.\n\n","ca2770cf":"**3. Variable 'city'**","db1cdee8":"**5. Multiple box plot for photo_counts based on establishment type.**\n\n","56fa43c5":"**3. To find the popular localities in Mumbai**","840a7523":"### 4. The Mumbai city","d8d32819":"- select unique cuisines available at restaurants in Mumbai\n\n\n- sort cuisines based on frequency\n","155423c2":"**Cuisines in the northern region**","396da65a":"**1. Expensive restaurants in Mumbai**\n\n-  Define the costliest restaurants whose average cost of two people exceeds Rs.5000 .\n-  Plot the restaurants which are costliest based on their average cost for two .\n\n\n","53a9ad0d":"**Cuisines in the eastern region**","956c5e5d":"- From variable 'latitude' and 'longitude', plot the location of restaurants.","2047ec87":"**11. Variable 'aggregate_rating'** \n\n","0977c3f3":"**4. Check the data types. Refer to data definition to ensure your data types are correct. If data types are not as per business context, change the data types as per requirement**\n","ec3a5be3":"<a id ='missing'><\/a>\n## 6. Check for missing values","65dab7db":"To cater our analysis we define the regions as nothern, eastern, western and southern.","05e31c5a":"**5. Variable 'longitude'**\n\nFrom the variable 'longitude', we know the longitudinal location of the restaurant\n\nThe Longitudinal extent of India is from 68\u00b07'E to 97\u00b025'E\n\nWe must check whether we have any points beyond this extent.","d91b797d":"<a id='more'> <\/a>\n## 10. Some more Analysis","705a1dde":"**Cuisines in the southern region**","84d5064d":"- Check if the values are replace by NaN's","f3aae884":"### 2a. Highlights available in restaurants for different regions","4b491182":"- We need to replace all these values with NaN's.","3eee6e84":"**3. Note the redundant variables and drop them**","b0cf61e6":"**Highlights of the northern region**","f84f0157":"**6. Study summary statistics**","c49f3f24":"**10. Variable 'highlights'**","07fc127b":"**Highlights of the western region**","de9032e5":"<a id='set_options'><\/a>\n## 2. Set Options","f2491106":"**4. Variable 'latitude'**\n\nFrom the variable 'latitude', we know the latitudinal location of the restaurant\n\nThe Latitudinal extent of India 8\u00ba4\u201bN to 37\u00ba6\u201b N. \n\nWe must check whether we have any points beyond this extent.","09104303":"- Plot a boxplots for the above table","b19aaf99":"### -------------------------*** Provide the inference's from the output of every code executed.***----------------------------","b74f425f":"<a id = 'Understanding_variables'> <\/a>\n## 5. Understand the variables","950e3300":"**6. Check for payments method offered in restaurants**","572d6d7f":"- We see all the values are replaced by NaN's","186d0dea":"#### Plot the barplot for different regions","e53b05fa":"## Data Definition\n\n**res_id**: The code given to a restaurant (Categorical) \n\n**name**: Name of the restaurant (Categorical)\n\n**establishment**: Represents the type of establishment (Categorical)\n\n**url**: The website of the restaurant (Categorical)\n\n**address**: The address of the restaurant (Categorical)\n\n**city**: City in which the restaurant located (Categorical)\n\n**city_id**: The code given to a city (Categorical)\n\n**locality**: Locality of the restaurant (Categorical)\n\n**latitude**: Latitude of the restaurant (Categorical)\n\n**longitude**: Longitude of the restaurant (Categorical)\n\n**zipcode**: Zipcode of the city in which the restaurant located (Categorical)\n\n**country_id**: Country code in which the restaurant located (Categorical)\n\n**locality_verbose**: Locality along with the city in which the restaurant located (Categorical)\n\n**cuisines**: The cuisines a restaurant serves (Categorical)\n\n**timings**: The working hours of a restaurant (Categorical)\n\n**average_cost_for_two**: The average amount expected for 2 people (Numerical)\n\n**price_range**: The categories for average cost (Categories - 1,2,3,4) (Categorical)\n\n**currency**: The currency in which a customer pays (Categorical)\n\n**highlights**: The facilities of the restaurant (Categorical)\n\n**aggregate_rating**: The overall rating a restaurant has got (Numerical) \n\n**rating_text**: Categorized ratings (Categorical)\n\n**votes**: Number of votes received by the restaurant from customers (Numerical)\n\n**photo_count**: The number of photos of a restaurant (Numerical)\n\n**opentable_support**: Restaurant reservation from Opentable (Categorical)\n\n**delivery**: The restaurant deliver an order or not (Categorical)\n\n**takeaway**: The restaurant allows  a 'takeaway' of an order or not (Categorical)","7364de78":"## Problem Statement\n\nThe zomato exploratory data analysis is for the foodies to find the best restaurants, value for money restaurants in their locality. It also helps to find their required cuisines in their locality.  ","21f834e2":"<a id='Read_Data'><\/a>\n## 3. Read Data","8b2a09fc":"**14. Variable 'photo_count'**","6d7bc8f1":"<a id='import_lib'><\/a>\n## 1. Import Libraries","8410f3f7":"- find out the frequency of each cuisine","626ea23f":"- Plot the barplot for top 10 cuisines served in the four regions","9de79bfd":"- visualize a exploded pie chart.","cebe1c2a":"**4. Variable 'locality'**","324e8797":"We first need to select the unique facilities available in each region and sort according to their frequencies.","d7728306":"**Highlights of the southern region**","12642146":"**6. Variable 'cuisines'**","7adc773c":"- We need to replace all these values with NaN's.","ee6faf4f":"<a id='region'> <\/a>\n## 9. Create a new variable 'region'\n","28f4d3f7":"**1. The top 10 cuisines served in Restaurants** ","7d3e03ac":"**Highlights of the eastern region**","5f8b7dea":"A well-prepared data proves beneficial for analysis as it limits errors and inaccuracies that can occur during analysis. The processed data is more accessible to users.<br> <br>\n                         Data understanding is the process of getting familiar with the data, to identify data type, to discover first insights into the data, or to detect interesting subsets to form hypotheses about hidden information. Whereas, data preparation is the process of cleaning and transforming raw data before analysis. It is an important step before processing and often involves reformatting data, making corrections to data. <br> <br>\n                        Data preparation is often a lengthy process, but it is essential as a prerequisite to put data in context to get insights and eliminate bias resulting from poor data quality.","4574051b":"**15. Variable 'delivery'**","e80adca0":"**5. Check for Duplicates**","4bc65be6":"**2. View the head of the data**","2ed2f16c":"Creating a New feature for better understanding of ratings\n"}}