{"cell_type":{"c76d38b0":"code","ebf6e401":"code","eeb682fd":"code","341a438a":"code","4097dc0b":"code","2d8b5e53":"code","74977ea5":"code","51a1c7ca":"code","c71edc95":"code","778b5fa0":"code","52fc9134":"code","1cbf78a2":"code","26f5f7f6":"code","528d4cdd":"code","b86e3f3b":"code","e2f3ec41":"code","e92f5fe3":"markdown"},"source":{"c76d38b0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport re\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        # print(os.path.join(dirname, filename))\n        pass\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ebf6e401":"# functions to parse columns\n\ndef parse_length(s):\n    # parse field \"length\" into \"length\" ,\"unit of measure\"\n    if pd.isnull(s):\n        return (np.nan, np.nan)\n    return (float(str(s)[:-1]), str(s)[-1:])\n\ndef parse_period(s):\n    # parse field \"period\" into \"period_name\" ,\"period start\", \"period end\"\n    try:\n        parsed_groups = re.match(r'([\\D]+)([\\d]+)(-?)([\\d]*)([\\D]+)', s).groups()\n    except: \n        return [s, np.nan, np.nan]\n    period = parsed_groups[0].strip()\n    period_start = parsed_groups[1]\n    period_end = parsed_groups[3] if parsed_groups[3] != '' else parsed_groups[1] \n    return [period, str(period_start), str(period_end)]\n\ndef parse_named(s):\n    # parse field \"named_by\" into \"named by\" ,\"year of naming\"\n    try:\n        parsed_groups = re.match(r'([^\\d\\(]+)(\\(?)(\\d+)', s).groups()\n    except: \n        return [s, np.nan]\n    named = parsed_groups[0].strip()\n    year = parsed_groups[2]\n    return [named, str(year)]","eeb682fd":"df = pd.read_csv('\/kaggle\/input\/jurassic-park-the-exhaustive-dinosaur-dataset\/data.csv')\nprint(df.shape)\ndf.set_index('name', inplace=True)\ndf.sample(3)","341a438a":"df.describe()","4097dc0b":"print(f'{df.type.nunique()}')\nprint(f'{df.type.isna().sum()}')\ndf.type.value_counts()","2d8b5e53":"# manually moved value from \"type\" to \"length\"\nprint(df.type.nunique())\ndf.type.value_counts()[:10]\ndf.loc[df.type=='1.0m', 'length'] = '1.0m'\ndf.loc[df.type=='1.0m','type'] = np.nan\ndf.loc[df.type.isna()]","74977ea5":"# parse column \"period\"\ndf['period_name'], df['period_start'], df['period_end']  = zip(*df['period'].apply(parse_period))\ndf[['period', 'period_name', 'period_start', 'period_end']].sample(3)","51a1c7ca":"df['named'], df['named_year'] = zip(*df['named_by'].apply(parse_named))\ndf[['named_by','named', 'named_year']].sample(3)","c71edc95":"# founded, that 5 field filled by species name\ndf.loc[df['named_year'].isnull()][['named_by','named', 'named_year','species']]","778b5fa0":"# and there is no more nan values for species\ndf.loc[df['species'].isnull()].named.count()","52fc9134":"# moved values from named_by to species\ndf['species'] = np.where(df['species'].isnull(), df['named'], df['species'])\ndf.loc[df['named_year'].isnull(), 'named_by'] = np.nan\ndf.loc[df['named_year'].isnull(), 'named'] = np.nan\ndf.loc[df['named_year'].isnull()][['named_by','named', 'named_year','species']]","1cbf78a2":"df['length_parsed'],df['measure'] = zip(*df['length'].apply(parse_length))\ndf[['length','length_parsed', 'measure']].sample(3)","26f5f7f6":"# check that there only one measure - meters\n# rename column and drop column 'measure'\nprint(df.measure.nunique())\ndf.rename(columns={'length_parsed':'length_meters'}, inplace=True)\ndf.drop(columns=['measure'], inplace=True)\ndf.sample(3)","528d4cdd":"df.columns","b86e3f3b":"# drop useless columns\ndf_clean = df[['diet', 'lived_in', 'type', 'taxonomy',\n       'species', 'period_name', 'period_start',\n       'period_end', 'named', 'named_year',\n       'length_meters']].copy()\nprint(df_clean.shape)\ndf_clean.sample(3)","e2f3ec41":"df_clean.to_csv('jurassic_park.csv', sep='|')","e92f5fe3":"Check, clean data for better usability\n1. Parsed columns \n* \"period\" into \"period_name\" ,\"period start\", \"period end\"  \n*  \"named_by\" into \"named by\" ,\"year of naming\"\n2. Moved some values from wrong columns\n* from \"type\" to \"length\" (1 value)\n* from \"named_by\" to \"species\" (5 values)\n3. replace column \"length\" (type str) with column \"length_meters\" (type float)"}}