{"cell_type":{"c0c90a87":"code","fadfd759":"code","e61adb42":"code","3379cbbf":"code","559e3a28":"code","1e2fc788":"code","663d077a":"code","cb6c5a36":"code","bc51608e":"code","4a4d7b9f":"code","6eef98a2":"code","1f7d7ac1":"code","e659a26f":"code","83b83b1e":"code","6aafc060":"code","df076990":"code","70aafb30":"code","a025b5b1":"code","f06c0fb5":"code","0edd6f89":"code","b6e1749e":"code","73e194b4":"code","c52aa89f":"code","70bfb62e":"code","2be0a74d":"code","4b4bfd76":"code","0cb552eb":"code","d0967891":"code","05910840":"code","6616090f":"code","d8c188e0":"code","f9e0f089":"code","81317728":"code","d228e40b":"markdown","7c37cd26":"markdown","addba2d7":"markdown","6499882f":"markdown","6bc5b723":"markdown"},"source":{"c0c90a87":"from sklearn import datasets\ndigits = datasets.load_digits()","fadfd759":"digits.images.shape\n","e61adb42":"import matplotlib.pyplot as plt\nfig, axes = plt.subplots(10, 10, figsize=(8, 8),subplot_kw={'xticks':[], 'yticks':[]},gridspec_kw=dict(hspace=0.1, wspace=0.1))\nfor i, ax in enumerate(axes.flat):\n    ax.imshow(digits.images[i], cmap='binary', interpolation='nearest')\n    ax.text(0.05, 0.05, str(digits.target[i]),transform=ax.transAxes, color='green')","3379cbbf":"X = digits.data\nX.shape\n","559e3a28":"y=digits.target\ny.shape","1e2fc788":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.2,random_state=0)\n","663d077a":"X_train.shape","cb6c5a36":"y_train.shape","bc51608e":"from sklearn.tree import DecisionTreeClassifier\nclf=DecisionTreeClassifier()\nclf.fit(X_train,y_train)","4a4d7b9f":"y_pred=clf.predict(X_test)\ny_pred","6eef98a2":"from sklearn.metrics import accuracy_score\nfrom sklearn import metrics","1f7d7ac1":"metrics.accuracy_score(y_test,y_pred)","e659a26f":"from sklearn.metrics import confusion_matrix\nmat = confusion_matrix(y_test, y_pred)\nmat","83b83b1e":"import numpy as np\nimport pandas as pd","6aafc060":"from sklearn.neighbors import KNeighborsClassifier","df076990":"knn=KNeighborsClassifier(n_neighbors=2,metric='euclidean',p=2)\nknn.fit(X_train,y_train)","70aafb30":"y_pred=knn.predict(X_test)\ny_pred","a025b5b1":"from sklearn.metrics import accuracy_score","f06c0fb5":"score=accuracy_score(y_test,y_pred)\nscore","0edd6f89":"from sklearn.metrics import confusion_matrix\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nmat = confusion_matrix(y_test, y_pred)\nplt.figure(figsize=(15,8))\nsns.heatmap(mat,annot=True,square=True,cmap='RdPu')\nplt.ylabel('Actual Label')\nplt.xlabel('Predicted Label')\ntitle='Accuracy Score: {0}'.format(score)\nplt.title(title,size=12)","b6e1749e":"#For selecting K value\nerror_rate = []\n\n# Will take some time\nfor i in range(1,40):\n    \n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    pred_i = knn.predict(X_test)\n    error_rate.append(np.mean(pred_i != y_test))","73e194b4":"import matplotlib.pyplot as plt\nplt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', marker='o',\n         markerfacecolor='red', markersize=10)\nplt.title('Error Rate vs. K Value by Elbow Method')\nplt.xlabel('K')\nplt.ylabel('Error Rate')","c52aa89f":"from sklearn.ensemble import RandomForestClassifier\n","70bfb62e":"rfc=RandomForestClassifier(n_estimators=250,random_state=100)\nrfc.fit(X_train,y_train)","2be0a74d":"y_pred=rfc.predict(X_test)\ny_pred","4b4bfd76":"metrics.accuracy_score(y_test,y_pred)","0cb552eb":"from sklearn.metrics import confusion_matrix\nmat = confusion_matrix(y_test, y_pred)\n","d0967891":"from sklearn.metrics import confusion_matrix\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nmat = confusion_matrix(y_test, y_pred)\nplt.figure(figsize=(15,8))\nsns.heatmap(mat,annot=True,square=True,cmap='RdPu')\nplt.ylabel('Actual Label')\nplt.xlabel('Predicted Label')\ntitle='Accuracy Score: {0}'.format(score)\nplt.title(title,size=12)","05910840":"from sklearn import svm\nfrom sklearn.svm import SVC","6616090f":"sc=SVC(C=100,gamma=0.001)\nsc.fit(X_train,y_train)\n","d8c188e0":"pred=sc.predict(X_test)\npred","f9e0f089":"Score=sc.score(X_test,y_test)","81317728":"mat_s = confusion_matrix(y_test, y_pred)\nplt.figure(figsize=(15,8))\nsns.heatmap(mat,annot=True,square=True,cmap='RdPu')\nplt.ylabel('Actual Label')\nplt.xlabel('Predicted Label')\ntitle='Accuracy Score: {0}'.format(Score)\nplt.title(title,size=12)","d228e40b":"# 4. Support vector machine Algorithm","7c37cd26":"# 2. KNN Algorithm","addba2d7":"# Recognizing Handwritten Digits with Scikit-Learn","6499882f":"# 1. Decision Tree Algorithm","6bc5b723":"# 3. Random Forest Algorithm"}}