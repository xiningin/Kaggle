{"cell_type":{"69de4ac0":"code","2362c8bc":"code","de617aa1":"code","2f08e5ac":"code","83e1ac1b":"code","c3183dc8":"code","4dfa9488":"markdown","19c79a53":"markdown","c889b3a6":"markdown","21114138":"markdown","2d320e4c":"markdown","bb5ab17f":"markdown"},"source":{"69de4ac0":"from numpy import hstack\nfrom numpy import vstack\nfrom numpy import mean\nfrom sklearn.datasets import make_classification\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.optimizers import SGD","2362c8bc":"X, y = make_classification(n_samples=1000, n_features=20, n_informative=15, n_redundant=5, random_state=1)\n\nn_features = X.shape[1]\nX_old, X_new, y_old, y_new = train_test_split(X, y, test_size=0.50, random_state=1)","de617aa1":"old_model = Sequential()\nold_model.add(Dense(20, kernel_initializer='he_normal', activation='relu', input_dim=n_features))\nold_model.add(Dense(10, kernel_initializer='he_normal', activation='relu'))\nold_model.add(Dense(1, activation='sigmoid'))\n\nopt = SGD(learning_rate=0.01, momentum=0.9)\nold_model.compile(optimizer=opt, loss='binary_crossentropy')\n\nold_model.fit(X_old, y_old, epochs=150, batch_size=32, verbose=0)","2f08e5ac":"new_model = Sequential()\nnew_model.add(Dense(20, kernel_initializer='he_normal', activation='relu', input_dim=n_features))\nnew_model.add(Dense(10, kernel_initializer='he_normal', activation='relu'))\nnew_model.add(Dense(1, activation='sigmoid'))","83e1ac1b":"opt = SGD(learning_rate=0.01, momentum=0.9)\nnew_model.compile(optimizer=opt, loss='binary_crossentropy')\n\nX_both, y_both = vstack((X_old, X_new)), hstack((y_old, y_new))\nnew_model.fit(X_both, y_both, epochs=150, batch_size=32, verbose=0)","c3183dc8":"yhat1 = old_model.predict(X_new)\nyhat2 = new_model.predict(X_new)\ncombined = hstack((yhat1, yhat2))\n\nyhat = mean(combined, axis=-1)\nprint(yhat[:5])","4dfa9488":"# Update Neural Network Models With More Data","19c79a53":"# Predictions","c889b3a6":"# Dataset","21114138":"# Old Model","2d320e4c":"# From old to new model","bb5ab17f":"# New Model"}}