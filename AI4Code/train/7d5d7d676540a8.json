{"cell_type":{"6d8f06b2":"code","9c54b69a":"code","a1e107dc":"code","ff03eb5c":"code","b9d0b23a":"markdown"},"source":{"6d8f06b2":"import numpy as np\nimport pandas as pd\nimport os","9c54b69a":"train = pd.read_csv('..\/input\/mlb-player-digital-engagement-forecasting\/train.csv')","a1e107dc":"def unnest_data(df, mode):\n    # Get names of all \"nested\" data frames in daily training set\n    daily_data_nested_df_names = df.drop('date', axis = 1).columns.values.tolist()\n\n    for df_name in daily_data_nested_df_names:\n        print(\"Processing \", df_name, \" ...\")\n        date_nested_table = df[['date', df_name]]\n\n        date_nested_table = (date_nested_table[\n          ~pd.isna(date_nested_table[df_name])\n          ].\n          reset_index(drop = True)\n          )\n\n        daily_dfs_collection = []\n\n        for date_index, date_row in date_nested_table.iterrows():\n            daily_df = pd.read_json(date_row[df_name])\n\n            daily_df['dailyDataDate'] = date_row['date']\n\n            daily_dfs_collection = daily_dfs_collection + [daily_df]\n\n        # Concatenate all daily dfs into single df for each row\n        unnested_table = (pd.concat(daily_dfs_collection,\n          ignore_index = True).\n          # Set and reset index to move 'dailyDataDate' to front of df\n          set_index('dailyDataDate').\n          reset_index()\n          )\n        \n        path = mode + '_' + df_name + '.csv'\n        unnested_table.to_csv(path, index=False)\n\n        # Clean up tables and collection of daily data frames for this df\n        del(date_nested_table, daily_dfs_collection, unnested_table)","ff03eb5c":"unnest_data(train, 'train')","b9d0b23a":"This is my preprocessing pipeline to create unnested and seperated train dataframes which I can build models off. This notebook has nothing original it it. All the relevant code is taken from the starter notebook: https:\/\/www.kaggle.com\/alokpattani\/mlb-player-digital-engagement-data-exploration\n\nThe only reason I am releasing this notebook is that other people can run the PyTorch Baseline I published without problems. You can check it out here: https:\/\/www.kaggle.com\/nicohrubec\/mlb-pytorch-dnn-loop-feature-engineering\/notebook"}}