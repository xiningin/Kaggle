{"cell_type":{"0c6593e4":"code","8a52ba7a":"code","fb765e58":"code","1b7bd399":"code","8e269718":"code","b25654cd":"code","de9979a2":"code","9849f2d3":"code","aca44f52":"code","50f9eb06":"code","3136f86b":"code","284077d4":"code","1166d53f":"code","b594f0da":"code","16158ba0":"code","55d4dcd1":"code","dfb26e93":"code","fc699787":"code","abe4182d":"code","e91e6c06":"code","c30360f1":"code","c358efd5":"code","e4268ac4":"code","4a3886a7":"code","2a81b48f":"code","9400c21e":"code","1e470c76":"code","41ba2b96":"code","3cb05708":"code","765bc2bc":"code","ef2351ae":"code","97baa243":"code","23aff93b":"code","7a62df67":"code","cd68d9d8":"code","180a93eb":"code","8a6ca800":"code","c339cc0f":"code","a6bf8380":"code","edf24537":"code","39e78fb5":"code","9f76c53f":"code","cd394531":"code","2975a1d9":"code","730f7add":"code","452d30f1":"code","d0f8e41e":"code","df0928ae":"code","d61cc4eb":"code","5f454c2e":"code","b822e037":"code","7b78675f":"code","213f80d1":"code","f98d3054":"code","8aeb95e7":"code","18f65e31":"code","8d1aa8dd":"code","bc4a58b1":"code","9c3764a6":"code","47950218":"code","fd415719":"code","28e4871b":"code","03213818":"code","5b52b21a":"code","cd726bf9":"code","5af8f09f":"code","01ac4814":"code","3645a1c0":"code","37e8f87b":"code","a116f01e":"code","8f7fc0d7":"code","8ca9d2cd":"code","46aafa05":"code","e5cf4289":"code","ccccf20a":"code","fe83ba50":"code","dcae746f":"code","c6f37128":"code","79a46aeb":"code","f691fb83":"code","db4c69bd":"code","95856218":"code","22cbc18e":"code","081f39d2":"code","6f912d2b":"code","d87b43b1":"code","8c7df69f":"code","c3f442bc":"code","5f04f581":"code","270373af":"code","c54a6168":"code","4d6a8c69":"code","e6b0fcc3":"code","64b9f62b":"code","d42a18ed":"code","b353788d":"code","f5ffabda":"code","a66a7240":"code","defc4379":"code","a38564be":"code","f9bf3e6f":"markdown","d9ccd60c":"markdown","87b083f5":"markdown","2e0f00bf":"markdown","376898db":"markdown","f7ae950c":"markdown","ad4bb29a":"markdown","e17a9848":"markdown","4aed1ab5":"markdown","881f994c":"markdown","427a040e":"markdown"},"source":{"0c6593e4":"from warnings import filterwarnings\nfilterwarnings(\"ignore\")\nimport pandas as pd\nimport numpy as np\nimport seaborn as sn\nimport matplotlib.pyplot as plt\nimport io\npd.set_option('display.max_columns',None)\n\n\n","8a52ba7a":"\n\ntrain = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntrain.head()","fb765e58":"for i in train.columns:\n    print(i, len(train[i].unique()))","1b7bd399":"train = train.drop(\"Id\",axis=1)","8e269718":"\ndef replacemissing(df):\n    Q = pd.DataFrame(df.isna().sum(),columns=['count_mv'])\n    R = Q[Q.count_mv > 0]\n    cat = []\n    con = []\n    for i in R.index:\n        if(df[i].dtypes == 'object'):\n            replacer = df[i].mode()[0]\n            df[i] = df[i].fillna(replacer)\n        else:\n            replacer = round(df[i].mean(),2)\n            df[i] = df[i].fillna(replacer)","b25654cd":"replacemissing(train)","de9979a2":"train.isna().sum()","9849f2d3":"train.columns","aca44f52":"Y = train[['SalePrice']]\nX = train.drop('SalePrice',axis=1)","50f9eb06":"cat = []\ncon = []\nfor i in X.columns:\n    if (X[i].dtypes=='object'):\n        cat.append(i)\n    else:\n        con.append(i)","3136f86b":"cat","284077d4":"con","1166d53f":"X.skew().sort_values()","b594f0da":"X.skew().sort_values() > 0.7\n","16158ba0":"cols_with_skew = [\"2ndFlrSF\",\"BsmtUnfSF\",\"GrLivArea\",\"1stFlrSF\",\"MSSubClass\",\"TotalBsmtSF\",\"WoodDeckSF\",\"BsmtFinSF1\",\"OpenPorchSF\",\"LotFrontage\",\"MasVnrArea\",\"EnclosedPorch\",\"BsmtHalfBath\",\"ScreenPorch\",\"BsmtFinSF2\",\"KitchenAbvGr\",\"LowQualFinSF\",\"3SsnPorch\",\"LotArea\",\"PoolArea\",\"MiscVal\"]","55d4dcd1":"cols_with_skew","dfb26e93":"conti = []\ncateg = []\nfor i in X[cols_with_skew]:\n    if(X[i].dtypes == \"object\"):\n        categ.append(i)\n    else:\n        conti.append(i)","fc699787":"conti","abe4182d":"categ","e91e6c06":"X","c30360f1":"sn.heatmap(X.corr())","c358efd5":"sn.heatmap(train.corr())","e4268ac4":"X.skew()","4a3886a7":"train.corr()['SalePrice'].sort_values()","2a81b48f":"train.corr()['SalePrice'].sort_values().index\n","9400c21e":"imp_cols = list(train.corr()[\"SalePrice\"].sort_values().index)[22:]\nimp_cols.remove(\"SalePrice\")","1e470c76":"sn.heatmap(X[imp_cols].corr())","41ba2b96":"X[imp_cols].corr()","3cb05708":"X1 = pd.get_dummies(X[cat])\nfrom sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nX2 = pd.DataFrame(ss.fit_transform(X[imp_cols]),columns=imp_cols)\nX = X2.join(X1)","765bc2bc":"X = X.drop(['GrLivArea', 'BsmtFinSF1', 'OverallQual', 'YearRemodAdd', 'MasVnrArea'],axis=1)","ef2351ae":"from statsmodels.api import add_constant,OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","97baa243":"model.pvalues.sort_values().index","23aff93b":"model.rsquared_adj","7a62df67":"#Q.sort_values(by= \"pvalues\")","cd68d9d8":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.95].index","180a93eb":"X = X.drop(['Condition1_RRNe', 'BldgType_TwnhsE', 'HouseStyle_1.5Unf',\n       'Exterior1st_AsphShn', 'PavedDrive_P'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","8a6ca800":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.9].index","c339cc0f":"X = X.drop(['Condition2_Artery', 'RoofStyle_Mansard', 'Exterior1st_AsbShng',\n       'Exterior1st_Plywood', 'Exterior1st_Stone', 'Exterior2nd_Other',\n       'Heating_Floor', 'Functional_Maj1'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","a6bf8380":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.9].index","edf24537":"X = X.drop(['Street_Grvl', 'LandContour_Bnk', 'Exterior2nd_BrkFace',\n       'Exterior2nd_MetalSd', 'Exterior2nd_Stucco', 'Heating_GasA',\n       'Heating_Grav'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","39e78fb5":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.9].index","9f76c53f":"X = X.drop(['Neighborhood_BrkSide', 'RoofStyle_Flat'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","cd394531":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.85].index","2975a1d9":"X = X.drop(['LandSlope_Gtl', 'Neighborhood_Blueste', 'Condition1_Feedr',\n       'Condition1_PosN', 'Condition1_RRNn', 'ExterQual_Fa', 'BsmtCond_Fa',\n       'SaleType_CWD'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","730f7add":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.8].index","452d30f1":"X = X.drop(['Neighborhood_SawyerW', 'Neighborhood_Somerst', 'Exterior1st_CBlock',\n       'Exterior1st_HdBoard', 'Exterior2nd_CBlock', 'ExterCond_Fa',\n       'BsmtCond_Po', 'BsmtFinType2_Rec', 'HeatingQC_Po', 'Electrical_FuseA',\n       'SaleType_ConLD', 'SaleType_ConLw'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","d0f8e41e":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.8].index","df0928ae":"X = X.drop(['BsmtFinType2_LwQ', 'Fence_GdPrv', 'MiscFeature_Shed'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","d61cc4eb":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.75].index","5f454c2e":"X = X.drop(['LandContour_Low', 'Condition1_PosA', 'Foundation_PConc',\n       'Foundation_Slab', 'BsmtFinType2_BLQ', 'HeatingQC_Fa', 'HeatingQC_TA',\n       'MiscFeature_Othr'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","b822e037":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.75].index","7b78675f":"X = X.drop(['BsmtExposure_Mn'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","213f80d1":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.7].index","f98d3054":"X = X.drop(['LandSlope_Sev', 'Neighborhood_BrDale', 'Condition2_RRAn',\n       'BsmtExposure_Av', 'Heating_OthW'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","8aeb95e7":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.65].index","18f65e31":"X = X.drop(['Utilities_NoSeWa', 'Exterior1st_Wd Sdng', 'MasVnrType_BrkCmn',\n       'Foundation_Wood', 'KitchenQual_Gd', 'FireplaceQu_Po'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","8d1aa8dd":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.65].index","bc4a58b1":"X = X.drop(['Alley_Grvl', 'Exterior1st_WdShing', 'FireplaceQu_Gd',\n       'FireplaceQu_TA'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","9c3764a6":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.6].index","47950218":"X = X.drop(['LotShape_Reg', 'Exterior1st_VinylSd', 'Foundation_BrkTil',\n       'Foundation_Stone', 'Electrical_SBrkr', 'Functional_Min2', 'Fence_GdWo',\n       'Fence_MnPrv', 'Fence_MnWw', 'SaleType_Oth'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","fd415719":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.6].index","28e4871b":"X = X.drop(['Electrical_FuseF', 'MiscFeature_TenC'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","03213818":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.6].index","5b52b21a":"X = X.drop(['Condition1_RRAn', 'ExterQual_Gd', 'CentralAir_N', 'GarageFinish_RFn'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","cd726bf9":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.55].index","5af8f09f":"X = X.drop(['Exterior1st_BrkComm', 'BsmtQual_Gd', 'BsmtFinType1_Rec',\n       'HeatingQC_Gd', 'Functional_Mod', 'SaleCondition_Abnorml'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","01ac4814":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.55].index","3645a1c0":"X = X.drop(['Exterior2nd_Brk Cmn', 'BsmtQual_Fa', 'BsmtFinType1_BLQ',\n       'Functional_Min1', 'GarageType_Basment'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","37e8f87b":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.55].index","a116f01e":"X = X.drop(['LotShape_IR1'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","8f7fc0d7":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.5].index","8ca9d2cd":"X = X.drop([ 'Exterior1st_ImStucc', 'Electrical_Mix', 'MiscFeature_Gar2',\n       'SaleType_Con'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","46aafa05":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.45].index","e5cf4289":"X = X.drop(['LotConfig_FR2', 'ExterQual_TA', 'BsmtFinType1_ALQ',\n       'Electrical_FuseP', 'FireplaceQu_Ex', 'SaleCondition_Family'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","ccccf20a":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.49].index","fe83ba50":"X = X.drop([ 'LotConfig_FR3'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","dcae746f":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.4].index","c6f37128":"X = X.drop(['Street_Pave', 'BldgType_2fmCon', 'KitchenQual_Fa',\n       'SaleCondition_Partial'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","79a46aeb":"Q = pd.DataFrame(model.pvalues,columns=['Pval'])\nM = []\nfor i in Q.Pval:\n    M.append(round(i,3))\n\nQ.Pval = M \nQ[Q.Pval > 0.39].index","f691fb83":"X = X.drop(['GarageYrBlt'],axis=1)\nfrom statsmodels.api import add_constant, OLS\nX1 = add_constant(X)\nols = OLS(Y,X1)\nmodel = ols.fit()\nmodel.summary()","db4c69bd":"X.columns","95856218":"from sklearn.model_selection import train_test_split, GridSearchCV\nxtrain,xtest,ytrain,ytest = train_test_split(X,Y,test_size = 0.2,random_state = 31)","22cbc18e":"x = 0\nfor i in range(0,30):\n    from sklearn.linear_model import Ridge\n    rr = Ridge(alpha=x)\n    model = rr.fit(xtrain,ytrain)\n    tr_pred = model.predict(xtrain)\n    ts_pred = model.predict(xtest)\n    from sklearn.metrics import mean_absolute_error\n    tr_err = round(mean_absolute_error(ytrain,tr_pred),2)\n    ts_err = round(mean_absolute_error(ytest,ts_pred),2)\n    print(\"===============\",x,\"=============\")\n    print(\"Training Error: \",tr_err)\n    print(\"Testing Error: \",ts_err)\n    if(tr_err < ts_err):\n        print(\"Overfitting\")\n    \n    x = x + 0.00005","081f39d2":"x = 1\nfor i in range(0,30):\n    from sklearn.linear_model import Lasso\n    rr = Lasso(alpha=x)\n    model = rr.fit(xtrain,ytrain)\n    tr_pred = model.predict(xtrain)\n    ts_pred = model.predict(xtest)\n    from sklearn.metrics import mean_absolute_error\n    tr_err = round(mean_absolute_error(ytrain,tr_pred),2)\n    ts_err = round(mean_absolute_error(ytest,ts_pred),2)\n    print(\"===============\",x,\"=============\")\n    print(\"Training Error: \",tr_err)\n    print(\"Testing Error: \",ts_err)\n    if(tr_err < ts_err):\n        print(\"Overfitting\")\n    \n    x = x + 0.05","6f912d2b":"test = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")","d87b43b1":"test","8c7df69f":"replacemissing(test)","c3f442bc":"cols_keep = list(xtrain.columns)","5f04f581":"cat = []\ncon = []\nfor i in test.columns:\n    if(test[i].dtypes == 'object'):\n        cat.append(i)\n    else:\n        con.append(i)","270373af":"X1 = pd.DataFrame(ss.fit_transform(test[con]),columns=con)","c54a6168":"X2 = pd.get_dummies(test[cat])","4d6a8c69":"X = X1.join(X2)","e6b0fcc3":"X[cols_keep]","64b9f62b":"cols_to_add = ['HouseStyle_2.5Fin', 'RoofMatl_Membran', 'Condition2_RRAe', 'PoolQC_Fa', 'GarageQual_Ex', 'Condition2_RRNn', 'RoofMatl_Roll', 'RoofMatl_ClyTile', 'RoofMatl_Metal']","d42a18ed":"cols_to_add\n","b353788d":"for i in cols_to_add:\n    X[i]=0","f5ffabda":"X","a66a7240":"final_preds= model.predict(X[cols_keep])","defc4379":"test['PredSalePrice'] = final_preds","a38564be":"test[['Id','PredSalePrice']].to_csv(\"New_Submit_File.csv\")","f9bf3e6f":"# Univariate","d9ccd60c":"# Divide the data in training and testing set","87b083f5":"# Those Cols are highly skew and which are in infinty\n# So We take range 0 To 1460 Where 0 is replaces to 0.001 \n# bcz get rid of infinity values\nfor i in cols_with_skew: \n    for j in range(0,1460,1): \n        if(X[[i]].iloc[j,0] == 0):   \n            X[[i]].iloc[j,0] = 0.001\n            X1 = X[cols_with_skew].apply(np.log) \n            X = X.drop(labels=cols_with_skew,axis=1) \n            X = X.join(X1)\n\n\n\n","2e0f00bf":"# Data Preprocession","376898db":"# Separate cat and con","f7ae950c":"# Fetch Data","ad4bb29a":"# OLS","e17a9848":"# Drop Unnecessary\n**First We Will Drop Unique Columns**","4aed1ab5":"# Bivariate","881f994c":"# Find and replace Missing Data","427a040e":"# Define X and Y"}}