{"cell_type":{"38b3e6b6":"code","0ac802fb":"code","282d6e63":"code","75851610":"code","06c82e00":"code","0877ad37":"code","5c3e2661":"code","eebed556":"code","8b89b0c3":"code","c722a2ea":"code","4f8fe8d7":"code","4f6c4512":"code","4b1102fc":"code","fb1f0beb":"code","550c755a":"code","7f7fc3d1":"code","7c859116":"code","ed1a9f86":"code","e3bd7f79":"code","bb10371e":"code","90b9a755":"code","ec1b9a00":"code","d63d10d2":"code","6026f754":"code","4d6c5382":"code","9f9005d5":"code","13c90834":"code","aeb998b2":"code","55e98c45":"code","d0b863da":"code","364a453a":"markdown","639984ad":"markdown","ad1208e3":"markdown","12beae58":"markdown","17d794ff":"markdown","408d7fe2":"markdown","7f5bcd08":"markdown","4eafe5e6":"markdown","685485a6":"markdown","44638b1b":"markdown","1f59e5dc":"markdown","eb617bb4":"markdown","53afdab5":"markdown","e204a1c7":"markdown","dc6f6312":"markdown","3d351139":"markdown","1b9a6329":"markdown","3485e5b8":"markdown","d313813a":"markdown","c0cdcffa":"markdown","d7d32553":"markdown"},"source":{"38b3e6b6":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport pdb\nimport pprint\n%matplotlib inline","0ac802fb":"df = pd.read_csv('..\/input\/tmdb-movies-dataset\/tmdb-movies.csv') \noriginal_data = df.copy()\ndf.head()","282d6e63":"df.info()","75851610":"df.describe()\n","06c82e00":"df.shape","0877ad37":"df.dtypes","5c3e2661":"df.nunique().to_frame().rename(columns={0:'Count'})","eebed556":"num_cols = ['popularity','budget','revenue','runtime','vote_count','vote_average','release_year','budget_adj','revenue_adj']\ntemp = df[num_cols]\nplt.figure();\nsns.pairplot(df);","8b89b0c3":"df.isnull().sum()","c722a2ea":"#deleting the unneeded columns\n\ndf.drop(['imdb_id','homepage','production_companies','overview','keywords','tagline','budget_adj'],axis =1,inplace =True)","4f8fe8d7":"df.head()","4f6c4512":"df.dropna(inplace=True)\ngenre_labels = set()\nfor s in df['genres'].str.split('|').values:genre_labels=genre_labels.union(set(s))\ngenre_labels","4b1102fc":"\"\"\"Seperating columns with several values, split by an '|', into as many columns as needed\"\"\"\n#the genre column has its data seperated by '|' character\n#lets create a new columns for visualization\n#first we need to know all type of genre, then count the number of each genre in our rows\n\ninit = {}\nfor i in range(len(df)):\n    row_genres = df['genres'].iloc[i].split('|')\n    for g in row_genres:\n        if g in init:\n            init[g]+=1\n        if g not in init:\n            init[g]=1\n            \n# #Create a new data frame\n\ngenre_df = pd.DataFrame(init.values()).T\ngenre_df.columns = init.keys()\ngenre_df = genre_df.T.rename(columns={0:'Genre Count'}).sort_values(by='Genre Count',ascending=False)\ngenre_df\n\n#Checking df_c if split was conducted as intended\ngenre_df","fb1f0beb":"df.release_date = pd.to_datetime(df['release_date'])","550c755a":"df.dtypes","7f7fc3d1":"df.duplicated().sum()","7c859116":"df.drop_duplicates(keep ='first', inplace=True)\nrows, col = df.shape","ed1a9f86":"df.duplicated().sum()","e3bd7f79":"def pie_plot(x, labels, title='',explode=None):\n    fig, ax = plt.subplots(figsize=(20,10))\n    ax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n    ax.set_title(title,fontsize=25)\n    ax.pie(labels=labels,\n            x=x,\n            shadow=True, startangle=18,\n            autopct='%1.1f%%',\n            explode=explode);","bb10371e":"def bar_plot(x, y, x_label='', y_label='', title=''):\n    #visualizing the results\n    plt.figure(figsize = (20,10)) #set a figure size\n    ax=sns.barplot(x =x , y = y)\n    # rotate xtick labels by 40 degrees\n    ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\",fontsize = 12)\n    plt.tight_layout()\n    #gives names to x-axis , y-axis & the title\n    plt.xlabel(x_label , fontsize = 20)\n    plt.ylabel(y_label , fontsize = 20)\n    plt.title(title,fontsize = 30)\n    plt.show()","90b9a755":"#defining the function\ndef calculate(column):\n    #for highest earned profit\n    high= df[column].idxmax()\n    high_details=pd.DataFrame(df.loc[high])\n    \n    #for lowest earned profit\n    low= df[column].idxmin()\n    low_details=pd.DataFrame(df.loc[low])\n    \n    #collectin data in one place\n    info=pd.concat([high_details, low_details], axis=1)\n    \n    return info","ec1b9a00":"bar_plot(y=genre_df['Genre Count'],x=genre_df.index, \n         x_label='Movie name', y_label='frequency', \n         title='Genre with highest frequency')","d63d10d2":"film_rate = df.sort_values(by='vote_average',ascending=False)[['original_title','vote_average']][:10]","6026f754":"bar_plot(y=film_rate['original_title'],x=film_rate['vote_average'], \n         x_label='Rate', y_label='Movie name', title='Most rated movies')","4d6c5382":"film_revenue = df.sort_values(by='revenue',ascending=False)[['original_title','revenue']][:10]","9f9005d5":"bar_plot(y=film_revenue['original_title'],x=film_revenue['revenue'], \n         x_label='Rate', y_label='Movie name', title='Highest revenue movies')","13c90834":"film_time = df.sort_values(by='runtime',ascending=False)[['original_title','runtime']][:10]","aeb998b2":"pie_plot(x=film_time['runtime'], labels=film_time['original_title'], \n         title='Film with longest period', explode=None)","55e98c45":"# we want to know the profits of movies for every year\n\nprofits_year = df.groupby('release_year')['revenue'].sum()\n\n#figure size(width, height)\nplt.figure(figsize=(12,6), dpi = 130)\n\n#on x-axis\nplt.xlabel('Release Year of Movies', fontsize = 12)\n#on y-axis\nplt.ylabel('revenue earned by Movies', fontsize = 12)\n#title of the line plot\nplt.title(' Total revenue earned by all movies Vs Year  release.')\n\n#plotting the graph\nplt.plot(profits_year)\n\n#displaying the line plot\nplt.show()","d0b863da":"from subprocess import call\ncall(['python', '-m', 'nbconvert', 'Investigate_a_Dataset.ipynb'])","364a453a":"<h3> Research Question 4 (What is the film with longest period?)<\/h3>\n<a id=\"Q4\"><\/a>","639984ad":"### 2- Seperating columns with several values.","ad1208e3":"\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>","12beae58":"<h3> Research Question 1 (what is the most genre that achieve highest revenue?)<\/h3>\n<a id=\"Q1\"><\/a>","17d794ff":"<li> to know most movies achieved highest revenue","408d7fe2":"<h3> Research Question 2  (What is the most rated movie?)<\/h3>\n<a id=\"Q2\"><\/a>","7f5bcd08":"<a id='conclusions'><\/a>\n## Conclusions\n\n> After trimmed, cleaned explore the dataset we find the following notes: \n\n>\u2022\tMost movies genre with highest revenue are at first \" Drama films \" then in the second place are \" comedian films' and least ones are War and historical films.\n\n>\u2022\twe see that the most rated film is \"the story of film an odyssey\" and at the second place is \" black mirror white Christmas\".\n\n>\u2022\twe should don\u2019t forget most important factor of the measure of the success of films is revenue. so after visualizing that we find the most film in history achieved revenue is \" Avatar \" and after it is \"star wars the force awakens\".\n\n>\u2022\tthe last point that we explored is the runtime of the films and we find that film like \"the story of film an odyssey\" and \"taken\" have most runtime ever.\n\n## Limitations\n>\u2022\tdata having so many missing values and tagline columns\n>\u2022  the data did not have normal distribution\n>\u2022  we not sure if the data provided to us is completel corect and up-to-date\n\n\n## Submitting your Project \n","4eafe5e6":" <li> we find that \"the story film\" have most runtime","685485a6":"<h3>Research Question 3  (What is the film with highest revenue?)<\/h3>\n<a id=\"Q3\"><\/a>","44638b1b":"<li> to now that which movies people prefer most","1f59e5dc":"### 4-Removing the duplicacy in the rows","eb617bb4":"<a id='wrangling'><\/a>\n## Data Wrangling\n\n> **Tip**: In this section of the report, you will load in the data, check for cleanliness, and then trim and clean your dataset for analysis. Make sure that you document your steps carefully and justify your cleaning decisions.\n\n### General Properties","53afdab5":"### <h3> Research Question 5 (movies count over years)<\/h3>\n<a id=\"Q5\"><\/a>","e204a1c7":"<h3> Data Cleaning ( a process in which we go through all of the data within a data and either remove or update information that is incomplete, incorrect, improperly formatted, duplicated, or irrelevants!)<\/h3><br>\n\n<li> we need to do the follwoing \n<ul>\n<li> drop unneeded columns.\n<li> Seperating columns with several values.\n<li>Changing release date column into date format.\n<li>Removing the duplicacy in the rows.","dc6f6312":"<a id='eda'><\/a>\n## Exploratory Data Analysis\n\n> **Tip**: Now that you've trimmed and cleaned your data, you're ready to move on to exploration. Compute statistics and create visualizations with the goal of addressing the research questions that you posed in the Introduction section. It is recommended that you be systematic with your approach. Look at one variable at a time, and then follow it up by looking at relationships between variables.","3d351139":"<b><li> Obsevations from the data set:<\/b>\n    <ul>\n<li> films geners have more than one for every film so should first Seperating them.\n<li> so many films not have home page link so we can drop this column","1b9a6329":"### 3-Changing release date column into date format","3485e5b8":"<li> to now that what filmmakers prefer to make films : we find Drama is the first one.\n","d313813a":"<a id='intro'><\/a>\n## Introduction\n\n> \nIMDB dataset having 50K movie reviews for natural language processing or Text analytics. This is a dataset for binary sentiment classification containing substantially more data than previous benchmark datasets. We provide a set of 25,000 highly polar movie reviews for training and 25,000 for testing\nwhich contains those columns:\n \n imdb_id \n popularity \n budget                  \n revenue                 \n original_title          \n cast                    \n homepage                \n director                \n tagline                 \n keywords                \n overview                \n runtime                 \n genres\n production_companies\n release_date            \n vote_count              \n vote_average            \n release_year            \n budget_adj              \n revenue_adj          \n\n> Question that we could ask to analyse this data set\n\n<li><a href=\"#Q1\">Question 1 (what is the most genre that achieve highest revenue?)<\/a>\n<li><a href=\"#Q2\">Question 2  (What is the most rated movie?)<\/a>\n<li><a href=\"#Q3\">Question 3 (What is the film with highest revenue?)<\/a>\n<li><a href=\"#Q4\">Question 4 : What is the film with longest period?)<\/a>\n<li><a href=\"#Q5\">Question 5 (What is the film with longest period?)<\/a>","c0cdcffa":" <li> some functions to use it for the visualization.\n","d7d32553":"## 1-Drop unneeded columns."}}