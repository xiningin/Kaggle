{"cell_type":{"4a31f78c":"code","b9bf1ef5":"code","14dd68a2":"code","80688300":"code","f2c31b1d":"code","9ece0426":"code","e73016f0":"code","fbcabbb0":"code","0399af74":"code","3b27163b":"code","ac140eec":"code","5ff7ec2d":"code","2a94b59c":"code","4a565f49":"code","984fdbff":"markdown","fe6ab3e8":"markdown","8b9cb610":"markdown","dddda174":"markdown"},"source":{"4a31f78c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b9bf1ef5":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.metrics import mean_squared_error, r2_score","14dd68a2":"df = pd.read_csv(\"..\/input\/bostonhoustingmlnd\/housing.csv\")","80688300":"df.head().T","f2c31b1d":"df.count()","9ece0426":"df.describe()","e73016f0":"corr = df.corr()","fbcabbb0":"X = df.drop(['MEDV'], axis=1)\ny = df.MEDV\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","0399af74":"from sklearn.linear_model import LinearRegression","3b27163b":"lm = LinearRegression()\nlm.fit(X_train, y_train)\ny_pred = lm.predict(X_test)","ac140eec":"plt.figure(figsize=(12,12))\nplt.scatter(y_test, y_pred)\nplt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()], color='red', linewidth=3)\nplt.xlabel(\"Prix\")\nplt.ylabel(\"Prediction de prix\")\nplt.title(\"Prix r\u00e9els vs pr\u00e9dictions\")","5ff7ec2d":"print(np.sqrt(mean_squared_error(y_test, y_pred)))","2a94b59c":"lm.score(X_test,y_test)","4a565f49":"import xgboost as XGB\nxgb  = XGB.XGBRegressor()\nxgb.fit(X_train, y_train)\ny_xgb = xgb.predict(X_test)\nprint(xgb.score(X_test,y_test))","984fdbff":"# Avec xgboost","fe6ab3e8":"# R\u00e9gression Lin\u00e9aire","8b9cb610":"Erreur moindre carr\u00e9","dddda174":"Score R2"}}