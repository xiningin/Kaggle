{"cell_type":{"900ec023":"code","4ca4e04e":"code","c3613d60":"code","758c80b5":"code","be08de92":"code","a8278c87":"code","81743c6a":"code","c01d857e":"code","b8c8ed7b":"code","b51da97e":"markdown","fb6b45de":"markdown"},"source":{"900ec023":"import numpy as np \nimport pandas as pd \nimport os\nimport nltk\nimport matplotlib.pyplot as plt\nimport seaborn as sns","4ca4e04e":"train_df = pd.read_csv(\"..\/input\/feedback-prize-2021\/train.csv\")\ntrain_df.head()","c3613d60":"train_df['discourse_type'] = train_df['discourse_type'].astype('category')\ntrain_df['discourse_type'] = train_df['discourse_type'].cat.rename_categories({'Concluding Statement':\"Concluding_Statement\"})\ntrain_df[\"discourse_type\"]","758c80b5":"# how many response per \nplt.figure(figsize=(20,5))\ntrain_df[\"id\"].value_counts().plot()","be08de92":"from IPython.display import display, HTML\nfrom pandas import DataFrame\n\nLead = \"#f2748d\"  # Red\nPosition = \"#8ffbff\"  # brown\nClaim = \"#eef51d\" # Yellow\nCounterclaim = \"#a5ff57\" #green\nRebuttal = \"#fa89f4\" #Pink\nEvidence = \"#96c9ff\" #blue\nConcluding_Statement = \"#c391ff\" #purple\n\n\ndef display_text(demo_id):\n    train_dir = \"..\/input\/feedback-prize-2021\/train\"\n    temp_id = demo_id + \".txt\"\n\n    with open(os.path.join(train_dir,temp_id)) as f:\n        data = f.read()\n\n\n    doc_df = train_df[train_df[\"id\"]==demo_id]    \n\n    new_data = str(data)\n\n    for i in range(len(doc_df)):\n        color = train_df[\"discourse_type\"].iloc[i]\n        selected_text = data[int(doc_df[\"discourse_start\"].iloc[i]):int(doc_df[\"discourse_end\"].iloc[i])]\n        highlighted = f'<span style=\"background-color: {globals()[color]}; font-weight: bold\">{selected_text}<\/span>'\n        new_data = new_data.replace(selected_text,highlighted)\n\n\n    return new_data\n    \nid_list = [\"71259B3EA87F\",\"149E8C278863\",\"7C9C2DF37B67\",\"A02E1D0BEACF\"]\ncolor_text = []\nfor i in id_list:\n    color_text.append(display_text(i))\n\n\n\n\n\ndef left_align(df: DataFrame):\n    left_aligned_df = df.style.set_properties(**{'text-align': 'left'})\n    left_aligned_df = left_aligned_df.set_table_styles(\n        [dict(selector='th', props=[('text-align', 'left')])]\n    )\n    return left_aligned_df\n\n\nclass color:\n    S = '\\033[1m' + '\\033[93m'\n    E = '\\033[0m'\n    PURPLE=\"\\033[95m\" # ok \n    CRED    = '\\33[51m' # ok red\n    CGREEN  = '\\33[32m' #ok\n    CYELLOW = '\\33[33m' # ok\n    CBLUE   = '\\33[34m' # ok\n    CVIOLET = '\\33[35m' #ok pink\n    CRED = '\\033[91m'\n    CBEIGE  = '\\33[36m'\n    CEND = '\\033[0m'  # ok for brown\n    CBLUE2   = '\\33[94m'\n    \n    \n\n\nmy_colors = [Claim, Concluding_Statement, Counterclaim, Evidence, Lead, Position, Rebuttal]\nprint(\"class names with color\")\nprint(color.CYELLOW+\"Claim \",end=\"\")\nprint(color.PURPLE+\" Concluding \",end=\"\")\nprint(color.CGREEN+\"Counter\",end=\"\")\nprint(color.CBLUE+\" Evidence \",end=\"\")\nprint(color.CRED+\"Lead\",end=\"\")\nprint(color.CBEIGE+\" Position \",end=\"\")\nprint(color.CVIOLET+\"Rebuttal\")\nprint(color.PURPLE+\"       Statement\",end=\"\")\nprint(color.CGREEN+\" claim\")\n\n\nsns.palplot(sns.color_palette(my_colors))\n\n","a8278c87":"data_dict = {\"id\": id_list,\"text\":color_text}\ncolor_df = pd.DataFrame(data_dict)\ndisplay(HTML(left_align(color_df.head()).to_html()))","81743c6a":"# Feedback Prize EDA with displacy","c01d857e":"np.unique(train_df[\"discourse_type\"])","b8c8ed7b":"from tqdm import tqdm\nimport re\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\nfrom wordcloud import WordCloud\n\n\ndef preprocess_text(df,lable):\n    text = \" \".join(title for title in df[df[\"discourse_type\"] == lable].discourse_text)\n    snow = nltk.stem.SnowballStemmer('english')\n    review = re.sub('[^a-zA-Z]', ' ',text)\n    review = review.lower()\n    review = review.split()\n\n    review = [snow.stem(word) for word in review if not word in stopwords.words('english')]\n    review = ' '.join(review)\n    \n    return review\n\n# 'Claim', 'Concluding_Statement', 'Counterclaim', 'Evidence',\n#        'Lead', 'Position', 'Rebuttal'], dtype=object\n\nplt.figure(figsize=(20,22))\nplt.subplot(3,3,1)\ntext1 = preprocess_text(train_df,\"Lead\")\nword_cloud2 = WordCloud(collocations = False, background_color = 'white').generate(text1)\nplt.imshow(word_cloud2,interpolation='bilinear')\nplt.axis('off')\n\nplt.figure(figsize=(20,22))\nplt.subplot(3,3,2)\ntext1 = preprocess_text(train_df,\"Claim\")\nword_cloud2 = WordCloud(collocations = False, background_color = 'white').generate(text1)\nplt.imshow(word_cloud2,interpolation='bilinear')\nplt.axis('off')\n\nplt.figure(figsize=(20,22))\nplt.subplot(3,3,3)\ntext1 = preprocess_text(train_df,\"Concluding_Statement\")\nword_cloud2 = WordCloud(collocations = False, background_color = 'white').generate(text1)\nplt.imshow(word_cloud2,interpolation='bilinear')\nplt.axis('off')\n\nplt.figure(figsize=(20,22))\nplt.subplot(3,3,4)\ntext1 = preprocess_text(train_df,\"Counterclaim\")\nword_cloud2 = WordCloud(collocations = False, background_color = 'white').generate(text1)\nplt.imshow(word_cloud2,interpolation='bilinear')\nplt.axis('off')\n\nplt.figure(figsize=(20,22))\nplt.subplot(3,3,5)\ntext1 = preprocess_text(train_df,\"Evidence\")\nword_cloud2 = WordCloud(collocations = False, background_color = 'white').generate(text1)\nplt.imshow(word_cloud2,interpolation='bilinear')\nplt.axis('off')\n\nplt.figure(figsize=(20,22))\nplt.subplot(3,3,6)\ntext1 = preprocess_text(train_df,\"Position\")\nword_cloud2 = WordCloud(collocations = False, background_color = 'white').generate(text1)\nplt.imshow(word_cloud2,interpolation='bilinear')\nplt.axis('off')\n\nplt.figure(figsize=(20,22))\nplt.subplot(3,3,7)\ntext1 = preprocess_text(train_df,\"Rebuttal\")\nword_cloud2 = WordCloud(collocations = False, background_color = 'white').generate(text1)\nplt.imshow(word_cloud2,interpolation='bilinear')\nplt.axis('off')\n\n\n","b51da97e":"1. id - ID code for essay response\n2. discourse_id - ID code for discourse element\n3. discourse_start - character position where discourse element begins in the essay response\n4. discourse_end - character position where discourse element ends in the essay response\n5. discourse_text - text of discourse element\n6. discourse_type - classification of discourse element\n7. discourse_type_num - enumerated class label of discourse element\n8. predictionstring - the word indices of the training sample, as required for predictions","fb6b45de":"# Feedback Prize - baseline\/EDA"}}