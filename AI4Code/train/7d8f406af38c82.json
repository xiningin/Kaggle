{"cell_type":{"49e8fcb4":"code","c237db3a":"code","f40c23d9":"code","74ec5bb4":"code","93110cb0":"code","25b27989":"code","5e704a6a":"code","b9040708":"code","c56c7018":"code","7358fffa":"code","38a220f1":"code","4af7e591":"code","c98a0400":"code","f46f90ae":"code","4137ab96":"markdown","92681827":"markdown","bf9ce317":"markdown","c6605d9e":"markdown","7ad8f18c":"markdown","4e5db3f7":"markdown","b52a1c72":"markdown","f640fac7":"markdown","0903bdad":"markdown","3e3a2f19":"markdown","9af08d38":"markdown","3c448f1b":"markdown","b46cc204":"markdown","b2b13d9d":"markdown","46c72d3f":"markdown","b53089fe":"markdown","c4d06fd9":"markdown"},"source":{"49e8fcb4":"pip install highlight_text","c237db3a":"import pandas as pd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt \nimport matplotlib.patheffects as path_effects\nimport matplotlib.patches as mpatches\nimport matplotlib.image as mpimg\nfrom matplotlib import rcParams\nfrom matplotlib.patches import Arc\nimport numpy as np\nfrom highlight_text import fig_text\nimport seaborn as sns\nimport requests\nfrom bs4 import BeautifulSoup\nimport json","f40c23d9":"# Entering the league's  link\nlink = \"https:\/\/understat.com\/league\/epl\"\nres = requests.get(link)\nsoup = BeautifulSoup(res.content,'lxml')\nscripts = soup.find_all('script')\n# Get the table \nstrings = scripts[2].string \n# Getting rid of unnecessary characters from json data\nind_start = strings.index(\"('\")+2 \nind_end = strings.index(\"')\") \njson_data = strings[ind_start:ind_end] \njson_data = json_data.encode('utf8').decode('unicode_escape')\ndata = json.loads(json_data)","74ec5bb4":"# Creating the dataframe\ndf =  pd.DataFrame(data['75']['history'])\n\n# Selecting the useful columns \ndf = df[['xG','scored','xGA','missed','npxG','npxGA','xpts','npxGD']]\n\n# Creating one new column\ndf['Match'] = np.arange(1,39)","93110cb0":"# Creating the rolling\/moving average columns\ndf['xgSMA'] = df['xG'].rolling(window=3).mean()\ndf['xgaSMA'] = df['xGA'].rolling(window=3).mean()\ndf['GSMA'] = df['scored'].rolling(window=3).mean()\ndf['GASMA'] = df['missed'].rolling(window=3).mean()","25b27989":"# Entering the league's  link\nlink = \"https:\/\/understat.com\/team\/Leicester\/2020\"\nres = requests.get(link)\nsoup = BeautifulSoup(res.content,'lxml')\nscripts = soup.find_all('script')\n# Get the table \nstrings = scripts[1].string \n# Getting rid of unnecessary characters from json data\nind_start = strings.index(\"('\")+2 \nind_end = strings.index(\"')\") \njson_data = strings[ind_start:ind_end] \njson_data = json_data.encode('utf8').decode('unicode_escape')\ndata = json.loads(json_data)","5e704a6a":"df1 = pd.DataFrame(data)\n# Home and Away fixtures\ndf_a = df1['a'].apply(pd.Series)\ndf_h = df1['h'].apply(pd.Series)\n# Append both together\ndf_lei = pd.DataFrame(df_h)\ndisplay(df_h,df_a)","b9040708":"df1['short_title_h'] = df_h['short_title']\ndf1['short_title_a'] = df_a['short_title']","c56c7018":"df1 = df1[['short_title_h','short_title_a']]\ndf1['final'] = df1['short_title_h']+df1['short_title_a']","7358fffa":"df1","38a220f1":"df1['final'] = df1['final'].str.replace(\"LEI\",\"\") # Eliminate the LEI name from the column\nteams_played = df1['final'].tolist() # And now create a list containing the teams","4af7e591":"display(teams_played)","c98a0400":"# plot style \nplt.style.use('fivethirtyeight')\nfig,ax = plt.subplots(figsize = (14,8))\n# plotting xG and xGA\nax.plot(df.Match,df.xgSMA,label='xG',color='cyan')\nax.plot(df.Match,df.xgaSMA,color='red',label='xGA')\n#plotting G and GA\nax.plot(df.Match,df.GSMA,label='G',color='cyan',linestyle='dashed',linewidth=1,alpha=0.8)\nax.plot(df.Match,df.GASMA,color='red',label='GA',linestyle='dashed',linewidth=1,alpha=0.4)\n# style \nax.tick_params(axis='x', colors='gray')\nax.tick_params(axis='y', colors='gray')\nplt.legend()\n\n# title\nfig_text(0.08,1.03, s=\"Leicester City 2021 season\\n\", fontsize = 25, fontweight = \"bold\")\nfig_text(0.08,0.97, s=\" <Expected Goals Scored (xG)> vs <Expected Goals conceded (xG)>\",highlight_textprops=[{\"color\":'cyan'}, {'color':\"red\"}], fontsize = 20, fontweight=\"light\")\n\n# text\nfig_text(0.5,0.01, s=\"Matches\\n\", fontsize = 20, fontweight = \"bold\", color = \"black\")\nfig_text(0.01,0.6, s=\"Rolling averages\\n\", fontsize = 20, fontweight = \"bold\", color = \"black\",rotation=90)","f46f90ae":"# plot style \nplt.style.use('fivethirtyeight')\nfig,ax = plt.subplots(figsize = (14,8))\n\n# plotting xG and xGA\nax.plot(df.Match,df.xgSMA,label='xG',color='cyan')\nax.plot(df.Match,df.xgaSMA,color='red',label='xGA')\n\n#plotting G and GA\nax.plot(df.Match,df.GSMA,label='G',color='cyan',linestyle='dashed',linewidth=1,alpha=0.8)\nax.plot(df.Match,df.GASMA,color='red',label='GA',linestyle='dashed',linewidth=1,alpha=0.4)\n\n# style \nax.tick_params(axis='x', colors='gray')\nax.tick_params(axis='y', colors='gray')\n\n# Team Names\nplt.xticks(df.Match,teams_played, rotation='vertical')\n\n# title\nfig_text(0.08,1.03, s=\"Leicester City 2021 season\\n\", fontsize = 25, fontweight = \"bold\")\nfig_text(0.08,0.97, s=\" <Expected Goals Scored (xG)> vs <Expected Goals conceded (xG)>\",highlight_textprops=[{\"color\":'cyan'}, {'color':\"red\"}], fontsize = 20, fontweight=\"light\")\n\n# text\nfig_text(0.5,0.01, s=\"Matches\\n\", fontsize = 20, fontweight = \"bold\", color = \"black\")\nfig_text(0.01,0.6, s=\"Rolling averages\\n\", fontsize = 20, fontweight = \"bold\", color = \"black\",rotation=90)\nplt.legend()","4137ab96":"<a id=\"7.\"><\/a>\n# References\nThese notebooks and articles were the main reference for this notebook: \n   1. https:\/\/aaronmoniz.com\/projects\/tableau-dashboard-rolling-xg-trends-of-premier-league-teams-17-18-20-21\/\n   \n   \n   2. https:\/\/theathletic.com\/2276869\/2020\/12\/21\/arteta-arsenal-xg-percentage\/ \n   \n   \n   3. https:\/\/www.r-bloggers.com\/2021\/07\/j-league-soccer-2021-mid-season-review\/ \n   \n   \n   4. https:\/\/github.com\/mckayjohns\/Viz-Templates\/blob\/master\/movingaverages.ipynb ","92681827":"<a id=\"1.\"><\/a>\n# Introduction\nIn this notebook we'll explore trends to determine the performance in the short and long term as we'll metrics such as xG, xGA goals scored and conceded. This plot is of utmost importance to the team as the xG Difference is one of the best indicators to the team's success. This notebook as usual was heavily inspired by this notebook by [McKay Johns](https:\/\/github.com\/mckayjohns\/Viz-Templates\/blob\/master\/movingaverages.ipynb) \n\nHere are some of the other notebooks created for the Understat Series :\n\n1. [Understat Series : Webscraping of Understat using the Beautiful Soup](https:\/\/www.kaggle.com\/josegabrielgonzalez\/understat-series-webscraping-using-beautiful-soup)\n2. [Understat Series : Understat package](https:\/\/www.kaggle.com\/josegabrielgonzalez\/understat-series-understat-package)\n\n3. [Understat Series : Webscraping using Selenium](https:\/\/www.kaggle.com\/josegabrielgonzalez\/understat-series-webscraping-using-selenium)\n\n4. [Understat Series : Webscraping using for loops](https:\/\/www.kaggle.com\/josegabrielgonzalez\/understat-series-webscraping-using-for-loops)\n\n5. [Understat Series : Probabilities and Random](https:\/\/www.kaggle.com\/josegabrielgonzalez\/understat-series-probabilities-and-random)\n\n6. [Understat Series : Diverging plots](https:\/\/www.kaggle.com\/josegabrielgonzalez\/understat-series-diverging-plots)\n\n7. [Understat Series : xG Rolling averages](https:\/\/www.kaggle.com\/josegabrielgonzalez\/understat-series-xg-rolling-averages)\n\n8. [Understat Series : xG Flow Chart](https:\/\/www.kaggle.com\/josegabrielgonzalez\/understat-series-xg-flow-chart)\n\n9. [Understat Series : Shotmaps](https:\/\/www.kaggle.com\/josegabrielgonzalez\/understat-series-shotmaps)\n\n10. [Understat Series : Heatmaps](https:\/\/www.kaggle.com\/josegabrielgonzalez\/understat-series-heatmaps)\n\n11. [Understat Series : Top 2 Goalscorers](https:\/\/www.kaggle.com\/josegabrielgonzalez\/understat-series-top-2-goalscorers)\n\n12. [Understat Series : Dashboards](https:\/\/www.kaggle.com\/josegabrielgonzalez\/understat-series-dashboards)","bf9ce317":"Et voila , now we have the 38 matches that Leicester played in the 2020\/2021 Season and can now proceed to plot the xG, xGA Rolling averages\n","c6605d9e":"Here we added the the names together in order to eliminate the LEI characters and have the name of the team Leicester City played against that weekend.","7ad8f18c":"Now we have a problem, the json data provided us with a home and away team names , meaning one week Licester was the home team and Arsenal the away team , but that's not what interests us right now, instead of the home and away teams we want to know the teams no matter home or away that played against Leicester City so for that we are going to add the home and away teams text data together and later eliminate it to get the actual teams that played against Leicester that same season.","4e5db3f7":"<a id=\"3.\"><\/a>\n# Scraping the data\nWe'll extract the data from Understat as usual and it\"ll be from the standings table data. \n\n**Remember it is possible to obtain both full table standings and the team performance over the 38 games and in this case we'll extract the data for each of the 38 games for Leicester City and the 2020\/2021 Season**","b52a1c72":"Creating the series of averages over a window of 3 . \n\nThe window is at your choice and as high as possible is better. ","f640fac7":"# Understat Series : xG Rolling averages\n\n\n**By Jose Gonzalez**\n![image.png](attachment:image.png)\n","0903bdad":"* [1. Introduction](#1.)\n    - [1.1. Notebook Content.](#1.1)\n* [2.Importing libraries.](#2.)\n* [3.Scraping xG data.](#3.)\n* [4. Scraping match fixtures data](#4.)\n* [5. Accommodate home and away fixtures](#5.)\n* [6. Rolling averages plot](#6.)\n   -  [6.1. xG Plot number of matches played](#6.1)\n   -  [6.2. xG plot teams played against](#6.2)\n* [7. References](#7.)","3e3a2f19":"<a id=\"4.\"><\/a>\n# Scraping the matches fixtures \nLet's proceed by scraping the fixtures in which Leicester participated in order to use it as axis for the xG plot","9af08d38":"<a id=\"5.\"><\/a>\n# Accommodate home and away fixtures","3c448f1b":"<a id=\"6.2\"><\/a>\n## xG plot with team names","b46cc204":"<a id=\"2.\"><\/a>\n# Importing libraries","b2b13d9d":"<a id=\"6.1\"><\/a>\n## xG plot with matches played","46c72d3f":"<a id=\"6.\"><\/a>\n# xG Plot rolling averages","b53089fe":"<a id=\"1.1\"><\/a>\n# Notebook content","c4d06fd9":"As we have now the json file, we'll select the key for the dictionary number 75 and history and select the columns required for the plot."}}