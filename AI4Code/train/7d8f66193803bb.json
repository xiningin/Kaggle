{"cell_type":{"ee6696fd":"code","e4f069b0":"code","defbfd2d":"code","ea90c897":"code","9eb617ac":"code","5113a3a9":"code","faf296f7":"code","d203bdbe":"code","dfd0bbf9":"code","36f56c97":"code","598f8af1":"code","c706da1b":"code","40be72aa":"code","23c9edae":"code","a856701d":"code","1bb4e572":"code","106650a4":"code","8f6bb342":"code","07fd5c6d":"code","7260ac7c":"code","3d7ca849":"code","fac0e5a4":"code","c5b579bc":"markdown","2395c07f":"markdown","3a1e6a9f":"markdown","9651e866":"markdown","9bf9a384":"markdown","1a9b5aa2":"markdown","f6ebba09":"markdown","248dadfa":"markdown","a6406fb9":"markdown","39afaf9f":"markdown","5dce738a":"markdown","20f79915":"markdown","b235cb99":"markdown","3bb71233":"markdown"},"source":{"ee6696fd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport datetime\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly as py\nfrom plotly import tools\nfrom plotly.offline import iplot\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e4f069b0":"data = pd.read_csv(\"..\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 5.csv\", sep=\",\", encoding=\"utf_8\")\ndata.head()","defbfd2d":"#exploring number of rows and columns in data\ndata.shape","ea90c897":"#Analyse all column names.\ndata.columns","9eb617ac":"#Rename column name in suitable formate.\ndata = data.rename(columns = {'Order Number' : 'Order_Number' , 'Order Status' : 'Order_Status' , 'Book Name' : 'Book_Name' , 'Order Date & Time' : 'Order_Date_Time' , 'City' : 'City_Order', 'Payment Method' : 'Payment_Method', 'Total items' : 'Total_Items', 'Total weight (grams)' : 'Total_weight(gm)'})","5113a3a9":"#Checking if column names are changed.\ndata.columns","faf296f7":"#Exploring Unique values under all column heads.\ndata.nunique()","d203bdbe":"#Getting information about data and data types.\ndata.info()","dfd0bbf9":"#Changing Data type of order date and time.\ndata[\"Order_Date_Time\"] = pd.to_datetime(data[\"Order_Date_Time\"])\ndata.info()","36f56c97":"#Describing some important statistics about data.\ndata.describe()","598f8af1":"#Looking for null values in data.\ndata.isnull().sum().sort_values(ascending = False)","c706da1b":"#Dropping and rechecking null values.\ndata.dropna(inplace = True)\ndata.isnull().sum()","40be72aa":"#Preprocess Billing_City\ndata['City_Order'] = data['City_Order'].str.lower()\ndata['City_Order'] = data['City_Order'].str.replace('\\d+', '')\ndata['City_Order'] = data['City_Order'].str.replace('pakistan', '')\ndata['City_Order'] = data['City_Order'].str.replace('city', '')\ndata['City_Order'] = data['City_Order'].str.replace('?', '')\ndata['City_Order'] = data['City_Order'].str.strip()\n#preprocess Book_Name\ndata['Book_Name'] = data['Book_Name'].str.replace(\"- \u0645\u0633\u062a\u062d\u0642\u06cc\u0646 \u0632\u06a9\u0648\u0627\u0629\", \"\")\ndata['Book_Name'] = data['Book_Name'].str.lower()\ndata['Book_Name'] = data['Book_Name'].str.replace(\"linux - an introduction  (release data - october 3, 2020)\", \"linux - an introduction\")\ndata['Book_Name'] = data['Book_Name'].str.replace(\"python programming- release date: august 14, 2020\", \"python programming\")\ndata['Book_Name'] = data['Book_Name'].str.replace(\"\u0688\u06cc\u0679\u0627 \u0633\u0627\u0626\u0646\u0633 \u06d4 \u0627\u06cc\u06a9 \u062a\u0639\u0627\u0631\u0641\", \"\u0688\u06cc\u0679\u0627 \u0633\u0627\u0626\u0646\u0633\")\ndata['Book_Name'] = data['Book_Name'].str.replace(\"(C++)\",\"(C++) ++\u0633\u06cc\/\u0633\u06cc\")\ndata['Book_Name'] = data['Book_Name'].str.replace(\"molo masali - \u0645\u0648\u0644\u0648 \u0645\u0635\u0644\u06cc\", \"molo masali\")\ndata['Book_Name'] = data['Book_Name'].str.replace(\"\u0645\u0634\u06cc\u0646 \u0644\", \"\u0645\u0634\u06cc\u0646 \u0644\u0631\u0646\u0646\u06af\")\ndata['Book_Name'] = data['Book_Name'].str.replace(\"\u0645\u0634\u06cc\u0646 \u0644\u0631\u0646\u0646\u06af\u0631\u0646\u0646\u06af\", \"\u0645\u0634\u06cc\u0646 \u0644\u0631\u0646\u0646\u06af\")\ndata['Book_Name'] = data['Book_Name'].str.replace(\"r ka taaruf \u0622\u0631 \u06a9\u0627 \u062a\u0639\u0627\u0631\u0641\", \"r ka taaruf\")\ndata['Book_Name'] = data['Book_Name'].str.strip()\ndf.sample(20)\ndf = df.assign(Order_Books_Name=df.Book_Name.str.split(\"\/\")).explode(\"Book_Name\")","23c9edae":"#Featuring date column\ndata['Dateofmonth'] = data['Order_Date_Time'].dt.day\ndata['Month'] = data['Order_Date_Time'].dt.month\ndata['Week'] = data['Order_Date_Time'].dt.week\ndata['Dayofweek'] = data['Order_Date_Time'].dt.dayofweek # 0 = monday.\ndata['Weekdayflg'] = (data['Dayofweek'] \/\/ 5 != 1).astype(float)\ndata['Month'] = data['Order_Date_Time'].dt.month\ndata['Quarter'] = data['Order_Date_Time'].dt.quarter\ndata['Dayofyear'] = data['Order_Date_Time'].dt.dayofyear\ndata.head()","a856701d":"plt.figure(figsize = (10,4))\nvisual = data.Order_Status.hist()\nplt.xticks(rotation = 90, horizontalalignment = \"center\")\nplt.title(\"Number of Orders vs. Order Status\")\nplt.xlabel(\"Order Status\")\nplt.ylabel(\"Number of Orders\")\nplt.show()","1bb4e572":"#replace entries with COD instead of many.\ndata['Payment_Method'].replace({'Cash on Delivery (COD)':'Cash on delivery'}, inplace=True)\ndata['Payment_Method'] = data['Payment_Method'].fillna('Cash on delivery')","106650a4":"#Finding number of orders in each payment method.\ndata.Payment_Method.value_counts()","8f6bb342":"plt.figure(figsize = (10,4))\ndata.Payment_Method.value_counts().plot(kind = 'bar')\nplt.xticks(rotation = 90, horizontalalignment = \"center\")\nplt.title(\"Number of Orders vs. Payment Methods\")\nplt.xlabel(\"Payment Method\")\nplt.ylabel(\"Number of Deliveries\")\nplt.show()","07fd5c6d":"data['Book_Name'].value_counts().head(10)","7260ac7c":"# Since the book names were separated by \" \/ \" that is why I used split method to get name of all the books separately\nbook_data = data.Book_Name.apply(lambda x: str(x).split('\/'))\n# Storing the list of lists book names in a list 'books' \nbooks = [item for sublist in book_data for item in sublist]\n# creating a new dataframe 'df' for ease in plotting the books sold\ndf = pd.DataFrame(data = books, columns = ['Books_Sold'])\n# Only storing the top 10 most selling books of all times and converting the result into a datafram\nbook_chart = df.Books_Sold.value_counts().nlargest(10).to_frame()\n# Printing the most sold book name and its number of times it was sold\nprint(book_chart.head(10))","3d7ca849":"# plotting 10 top selling books of all time\npx.bar(book_chart, y = book_chart.Books_Sold, x = book_chart.index, title = 'Top 10 Selling Books')","fac0e5a4":"data.City_Order.str.upper().value_counts()[:10].to_frame()\nvisual_City_Order = data.City_Order.value_counts()[:10].plot.bar()","c5b579bc":"# Read Data file using pandas","2395c07f":"# Exploratory Data Analysis","3a1e6a9f":"### Visualizing Number of Orders in comperison with Order Status","9651e866":"### Finding Top10 best seller books","9bf9a384":"### Dropoing null values in data","1a9b5aa2":"# Import required libraries","f6ebba09":"### Understanding Data","248dadfa":"### Data type of Order Date & time is not correct","a6406fb9":"## Please Upvote this notebook and comment about my work.","39afaf9f":"### Visualizing Number of Orders in comperison with Pyment Methods","5dce738a":"### Top 10 best selling Cities ","20f79915":"# Next Steps in progress..","b235cb99":"### Column names with spaces are not appropriate","3bb71233":"### Replacing multiple multiple entries of cod in one"}}