{"cell_type":{"6684551e":"code","4181b6aa":"code","acba1575":"code","9bfd9692":"code","c6bc7fa7":"code","4c82fc44":"code","170e0084":"code","71c15efd":"code","cecc52a3":"code","d08ef576":"code","78573ddd":"code","1bd6eebe":"code","018aa2ce":"code","5da34cd4":"code","4a64db2e":"code","37c0864e":"code","00390408":"code","1083e6b6":"code","ef7263d1":"code","48a74316":"code","bac67fd2":"code","e8a5fbf9":"code","6aa4624c":"code","f15c45e9":"code","fb64a143":"code","5060bb59":"code","82eef9b7":"code","44b88a41":"code","703835d1":"code","157d203a":"code","8e8ca22d":"code","e9beb550":"code","897e8ca8":"code","0f278d55":"code","c31f5a74":"markdown","6f494c09":"markdown","7c7936c1":"markdown","e5c4475a":"markdown","c30df517":"markdown","554e3c09":"markdown","a0459578":"markdown","f7b0b1c2":"markdown","f78c1992":"markdown","aa0ccb6d":"markdown","3a2c0bab":"markdown","5b8cdc64":"markdown","6e20a66a":"markdown","f69bab82":"markdown","f6c8bab1":"markdown","5fa9b5a9":"markdown","dbf0fa46":"markdown","d29fdfc4":"markdown","177d913a":"markdown"},"source":{"6684551e":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n% matplotlib inline\nimport seaborn as sns\nsns.set_style('darkgrid')\n\ndf=pd.read_csv('..\/input\/tmdb-movies.csv')","4181b6aa":"df.head(3)","acba1575":"df.info()","9bfd9692":"df.describe()","c6bc7fa7":"#dropping the columns that I will not use this analysis\ndf.drop(['id','imdb_id','cast','homepage','tagline','keywords','overview','runtime','production_companies','release_date','budget_adj','revenue_adj'], axis=1, inplace=True)","4c82fc44":"#checking if there are null values\ndf.isnull().sum().any()","170e0084":"#deleting null values\ndf.dropna(inplace=True)","71c15efd":"#checking if there are duplicate values\nprint(df.duplicated().sum())","cecc52a3":"#erasing duplicate values\ndf.drop_duplicates(inplace=True)","d08ef576":"#erasing rows with zero values\ndf = df[(df != 0).all(1)]","78573ddd":"#split the genres rows in mulple rows\ng = df['genres'].str.split('|').apply(pd.Series, 1).stack()","1bd6eebe":"g.index = g.index.droplevel(-1)","018aa2ce":"g.name = 'genres'","5da34cd4":"del df['genres']","4a64db2e":"df= df.join(g)\ndf","37c0864e":"df.head(2)","00390408":"df.hist(figsize=(15,15));","1083e6b6":"pd.plotting.scatter_matrix(df, figsize=(15,15));","ef7263d1":"df['genres'].value_counts().plot(kind='pie',figsize= (15,15));","48a74316":"df.plot(x='vote_average',y='popularity',kind='scatter',figsize=(18,10));","bac67fd2":"df['budget'].hist(figsize=(8,8));","e8a5fbf9":"df.groupby(['vote_average']).mean().revenue","6aa4624c":"#check unique values\ndf['genres'].unique()","f15c45e9":"# verify the revenue mean related with genres column\ndf.groupby('genres').mean().revenue","fb64a143":"gen_rev =df.groupby('genres').mean()['revenue']\n\nind = np.arange(len(gen_rev))  # the x locations for the groups\nwidth = 0.35  \n\nplt.subplots(figsize=(18,10))\ngen_bars =plt.bar(ind, gen_rev, width, color='g', alpha=.7)\nplt.ylabel('Revenue',size=14) # title and labels\nplt.xlabel('Genres',size=14)\nplt.title('Performance of Revenue by genres',size=18)\nlocations = ind + width \/ 2  # xtick locations\nlabels = ['Action', 'Adventure', 'Syfy', 'Thriller', 'Fantasy',\n       'Crime', 'Western', 'Drama', 'Family', 'Animation', 'Comedy',\n       'Mystery', 'Romance', 'War', 'History', 'Music', 'Horror',\n       'Document.', 'TV Movie', 'Foreign']  # xtick labels\nplt.xticks(locations, labels);","5060bb59":"df.groupby('genres').mean().vote_average","82eef9b7":"gen_vot =df.groupby('genres').mean()['vote_average']\n\nind = np.arange(len(gen_rev))  # the x locations for the groups\nwidth = 0.35  \n\nplt.subplots(figsize=(18,10))\ngen_bars =plt.bar(ind, gen_vot, width, color='orange', alpha=.7)\n#adv_bars =plt.bar(ind, adv, width, color='b', alpha=.7, label=\"Adventure\")\nplt.ylabel('Vote Average',size=14) # title and labels\nplt.xlabel('Genres',size=14)\nplt.title('Performance of Vote Average by genres',size=18)\nlocations = ind + width \/ 2  # xtick locations\nlabels = ['Action', 'Adventure', 'Syfy', 'Thriller', 'Fantasy',\n       'Crime', 'Western', 'Drama', 'Family', 'Animation', 'Comedy',\n       'Mystery', 'Romance', 'War', 'History', 'Music', 'Horror',\n       'Document.', 'TV Movie', 'Foreign']  # xtick labels\nplt.xticks(locations, labels);","44b88a41":"df.groupby(['genres']).mean().popularity","703835d1":"gen_pop =df.groupby('genres').mean()['popularity']\n\nind = np.arange(len(gen_pop))  # the x locations for the groups\nwidth = 0.35  \n\nplt.subplots(figsize=(18,10))\ngen_bars =plt.bar(ind, gen_pop, width, color='r', alpha=.7)\n#adv_bars =plt.bar(ind, adv, width, color='b', alpha=.7, label=\"Adventure\")\nplt.ylabel('Vote Average',size=14) # title and labels\nplt.xlabel('Genres',size=14)\nplt.title('Performance of Vote Average by genres',size=18)\nlocations = ind + width \/ 2  # xtick locations\nlabels = ['Action', 'Adventure', 'Syfy', 'Thriller', 'Fantasy',\n       'Crime', 'Western', 'Drama', 'Family', 'Animation', 'Comedy',\n       'Mystery', 'Romance', 'War', 'History', 'Music', 'Horror',\n       'Document.', 'TV Movie', 'Foreign']  # xtick labels\nplt.xticks(locations, labels)","157d203a":"df.groupby(['genres','release_year']).mean().popularity","8e8ca22d":"plt.subplots(figsize=(14,12))\nplt.title('Performance of popularity by genres')\nsns.pointplot(x='release_year', y='popularity', hue='genres', data=df);","e9beb550":"# Bin edges that will be used to \"cut\" the data into groups\nbin_edges= [1960,1965,1975,1985,1995, 2005,2015]\n\n# Labels for the six decades groups        \nbin_years= [1965,1975,1985,1995, 2005,2015]\n\n# Creates release_yearby10 column\ndf['release_yearby10']= pd.cut(df['release_year'],bin_edges,labels=bin_years) ","897e8ca8":"df # Check for successful creation of this column","0f278d55":"plt.subplots(figsize=(20,12))\nplt.title('Performance Of Popularity By Genres', fontsize = 30)\nax = sns.pointplot(x='release_yearby10', y='popularity', hue='genres', \n                   data=df);\nplt.legend(frameon=False, loc='upper center', ncol=5, fontsize=15)\nax.set_xlabel(\"Release Year By 10\", fontsize=25)\nax.set_ylabel(\"Popularity\", fontsize=25)\n\nplt.show()","c31f5a74":"I found null values in the director, cast, keywords and genres columns. Moreover, budget and revenue had many zero values. These dataset limitations affected my analysis because prior to cleaning, the dataset had 10,866 rows and, after cleaning, 3,853 rows. This means that I analyzed only 35% of the sample.\n\nIn conclusion, we have seen that there is a positive correlation between average votes and popularity, in other words, both variables move in tandem. Another point is that the genres Adventure and Family seemed to have the second biggest revenue behind the genre Syfy and to be the most popular over the years. However, regarding the average of votes, the Adventure and Family genres were twelfth and thirteenth, respectively.","6f494c09":"Action, Adventure, Syfy, Crime and Thriller seem to be  steady over the years. In 2015, the most popular genre was Adventure followed by Syfy. While in 1965, the most popular was Drama.","7c7936c1":"### Research Question 3 (What are the genres of movies associated with vote average?)","e5c4475a":"### Research Question 5  (Which genres are most popular from year to year?)","c30df517":"### Research Question 2 (Which genres are associated with movies that have high revenues?)","554e3c09":"The line chart above looks like a mess because the years of axis x are overlapping each other. To resolve this problem, I created a new column with an interval of 10 years.","a0459578":"The graph shows that the difference in voting mean between genres is small. The Crime, Comedy and TV Movie genres appeared a little bigger than the others.","f7b0b1c2":"<a id='conclusions'><\/a>\n## Conclusion","f78c1992":"# Project: Investigate a Dataset (TMDb movie data)\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>","aa0ccb6d":"The relationship between popularity and vote average output is a positive correlation.","3a2c0bab":"<a id='intro'><\/a>\n## Introduction\n\n\n\nIn this project, we will conduct data analysis in the movie database. Our goal is to investigate the performance of movies genres associated with popularity, vote average, revenues and release years. We will start by taking a look at our dataset and brainstorming what questions we could answer using it. Then we will use pandas and NumPy to answer the questions and create a report sharing the answers.\n\n\n### Data Set Overview   \nThis data set contains information about 10,000 movies collected from The Movie Database (TMDb), including user ratings and revenue.\nCertain columns, like \u2018cast\u2019 and \u2018genres\u2019, contain multiple values separated by pipe (|) characters.\nThere are some odd characters in the \u2018cast\u2019 column. Don\u2019t worry about cleaning them. You can leave them as is.\nThe final two columns ending with \u201c_adj\u201d show the budget and revenue of the associated movie in terms of 2010 dollars, accounting for inflation over time.\n","5b8cdc64":"<a id='eda'><\/a>\n## Exploratory Data Analysis\n\n### Research Question 1 (What is the relationship between vote average and popularity output?!)","6e20a66a":"Adventure and  Familiy seems to be that the most popular genres followed by the Music.","f69bab82":"### Research Question 4 (What are the most popular genres?)","f6c8bab1":"### What is the distribution type of the variable budget?","5fa9b5a9":"<a id='wrangling'><\/a>\n## Data Wrangling\n\n\n### General Properties","dbf0fa46":"The budget variable shows a right-skewed distribution.","d29fdfc4":"### Data Cleaning \n> **Null values**:  The director, cast, keywords and genres missing values columns\n\n> **0 values**: There are many zeros in the budget and revenue columns\n\n> **Cell duplicates**: 1\n\n> **Columns that will not be used in the analysis**: 12\n\n> **Multiple values separated by pipe (|) characters**: genres","177d913a":"Syfy looks to be that has the highest revenue genre followed by Adventure and Family."}}