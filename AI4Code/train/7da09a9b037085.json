{"cell_type":{"0cfb33f9":"code","bb7bce2c":"code","96ded331":"markdown"},"source":{"0cfb33f9":"import os\nimport collections\nimport ntpath\nimport pydicom\nimport pandas as pd\nfrom tqdm.notebook import tqdm\n\n\"\"\"\npandas_df_from_dicoms_folder:\nparams:\n    folder: directory with dicom files\nreturns:\n    pandas dataframe of the dicom files' data with filename as index\n\ndataset_to_dic and data_element_to_dic from:\nhttps:\/\/github.com\/pydicom\/contrib-pydicom\/blob\/master\/plotting-visualization\/dcm_qt_tree.py\n\"\"\"\n\ndef data_element_to_dic(data_element):\n    dic = collections.OrderedDict()\n    if data_element.VR == \"SQ\":\n        items = collections.OrderedDict()\n        dic[data_element.name] = items\n        i = 0\n        for dataset_item in data_element:\n            items['item ' + str(i)] = dataset_to_dic(dataset_item)\n            i += 1\n    elif data_element.name != 'Pixel Data':\n        dic[data_element.name] = data_element.value\n    return dic\n\n\ndef dataset_to_dic(dataset, index=None):\n    dic = {}\n    for data_element in dataset.file_meta:\n        dic.update(data_element_to_dic(data_element))\n    for data_element in dataset:\n        dic.update(data_element_to_dic(data_element))\n    if index is not None:\n        dic.update({'index': index})\n    return dic\n\n\ndef pandas_df_from_dicoms_folder(folder):\n    dcm_files = [os.path.join(folder, f.name) for f in os.scandir(folder)]\n    dcm_files = [x for x in dcm_files if x.endswith(('.dcm', '.dicom'))]\n    \n    pd_series_list = []\n    for f in tqdm(dcm_files):\n        dcm = pydicom.dcmread(f, stop_before_pixels=True)\n        dic = dataset_to_dic(dcm, index=ntpath.basename(f))\n        df = pd.Series(dic)\n        pd_series_list.append(df)\n\n    print('Done reading dicom data. Converting to dataframe...', end='')\n    df = pd.concat([pd.DataFrame(x).T for x in pd_series_list])\n    print('done.')\n    df.index = df['index']\n    df.index.name = None\n    df = df.drop(columns=['index'])\n    return df","bb7bce2c":"### Usage ###\ndicom_folder = '\/kaggle\/input\/vinbigdata-chest-xray-abnormalities-detection\/train\/'\ndf = pandas_df_from_dicoms_folder(dicom_folder)\ndf.index = df.index.str.replace('.dicom$', '', regex=True)\ndf","96ded331":"### Directory of DICOM Files to Pandas Dataframe \nThe below code will scan a folder for .dicom files and return you a Pandas Dataframe populated with the DICOM data."}}