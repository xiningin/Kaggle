{"cell_type":{"24e2f2a3":"code","8e450df4":"code","947711cf":"code","5d0ac54d":"code","394e353e":"code","28cfebce":"code","5bf6da0b":"code","3a0e9edd":"code","7ee89b85":"code","a5f6624e":"code","42f824c6":"code","10f0db46":"code","32287dc0":"code","6fcfb680":"code","ba7b84da":"code","a4f31528":"code","16e67c3f":"code","404983df":"code","5cf596d4":"code","99e655ac":"code","6f361f3e":"code","94564a9d":"code","1076f2a0":"code","d4bb116a":"code","2f8e415f":"code","c454d140":"code","f9e0de26":"code","6697f3bd":"code","68a0bf9e":"code","f9e80185":"code","43182f2e":"markdown","ad5ed55c":"markdown","e2232b4e":"markdown","9e0de127":"markdown","8ebd0bd7":"markdown","6f15d4c2":"markdown","d2b63710":"markdown","69baf556":"markdown","443bddea":"markdown","ef7d8ded":"markdown","7537934c":"markdown"},"source":{"24e2f2a3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport missingno as msno\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nfrom os.path import join\ninput_dir = \"..\/input\"\n\n# Any results you write to the current directory are saved as output.","8e450df4":"df_train = pd.read_csv(join(input_dir, 'train.csv'))\ndf_train_label = df_train['Survived']\ndel df_train['Survived']\ndf_test = pd.read_csv(join(input_dir, 'test.csv'))\ndf_test_label = pd.read_csv(join(input_dir, 'gender_submission.csv')).values[:,1]\n","947711cf":"df_train.head()","5d0ac54d":"df_test.head()","394e353e":"del df_train[\"Name\"]\ndel df_test[\"Name\"]","28cfebce":"df_train","5bf6da0b":"df_test.head()","3a0e9edd":"msno.matrix(df=df_train.iloc[:, :], figsize=(8, 8), color=(0.8, 0.5, 0.2))","7ee89b85":"df_train_Cabin = df_train[\"Cabin\"]\ndf_test_Cabin = df_test[\"Cabin\"]","a5f6624e":"del df_train[\"Cabin\"]\ndel df_test[\"Cabin\"]\ndel df_train['Ticket']\ndel df_test['Ticket']","42f824c6":"df_train.replace(np.NaN, np.nan, inplace=True)\ndf_test.replace(np.NaN, np.nan, inplace=True)","10f0db46":"df_train.head()","32287dc0":"df_train_dummy = pd.get_dummies(df_train)\ndf_test_dummy = pd.get_dummies(df_test)","6fcfb680":"df_train_dummy.head()","ba7b84da":"for c in df_train_dummy.columns : \n    df_train_dummy[c] = df_train_dummy[c].astype(np.float64)\n# df_train_dummy.replace(np.NaN, np.nan, inplace=True)\n# df_test_dummy.replace(np.NaN, np.nan, inplace=True)","a4f31528":"from fancyimpute import MICE\ntrain_mice = MICE(n_imputations=200, impute_type='pmm', verbose=False).complete(df_train_dummy.values)\ntest_mice = MICE(n_imputations=200, impute_type='pmm',  verbose=False).complete(df_test_dummy.values)\n","16e67c3f":"df_train_mice = pd.DataFrame(train_mice, columns = df_train_dummy.columns)\ndf_test_mice = pd.DataFrame(test_mice, columns = df_test_dummy.columns)","404983df":"msno.matrix(df=df_train_mice.iloc[:, :], figsize=(8, 8), color=(0.8, 0.5, 0.2))","5cf596d4":"msno.matrix(df=df_test_mice.iloc[:, :], figsize=(8, 8), color=(0.8, 0.5, 0.2))","99e655ac":"from sklearn.svm import SVC\nclf1 = SVC(kernel='linear')\nclf1.fit(df_train_mice, df_train_label)","6f361f3e":"test_result = clf1.score(df_test_mice,df_test_label)\ntest_result","94564a9d":"from sklearn.linear_model import LogisticRegression\nclf2 = LogisticRegression()\nclf2.fit(df_train_mice, df_train_label)","1076f2a0":"test_result = clf2.score(df_test_mice,df_test_label)\ntest_result","d4bb116a":"from sklearn.ensemble import RandomForestClassifier\nclf3 = RandomForestClassifier(max_depth = 5)\nclf3.fit(df_train_mice, df_train_label)","2f8e415f":"test_result = clf3.score(df_test_mice,df_test_label)\ntest_result","c454d140":"from sklearn.linear_model import RidgeClassifier\nclf4 = RidgeClassifier()\nclf4.fit(df_train_mice, df_train_label)","f9e0de26":"test_result = clf4.score(df_test_mice,df_test_label)\ntest_result","6697f3bd":"from sklearn.ensemble import VotingClassifier\n\neclf = VotingClassifier(estimators=[('svm', clf1),('lr',clf2),('RF', clf3),('Ridge',clf4)])\neclf.fit(df_train_mice, df_train_label)","68a0bf9e":"test_result = eclf.score(df_test_mice,df_test_label)\ntest_result","f9e80185":"submission = pd.DataFrame()\n\nsubmission['PassengerId'] = df_test_mice['PassengerId']\n\nsubmission['Survived'] = test_result\n\ngrouped_test = submission[['PassengerId', 'Survived']].groupby('PassengerId').sum().reset_index()\ngrouped_test.to_csv('submit.csv',index=False)","43182f2e":"### 2.Logistic Regression Classifier","ad5ed55c":"Just Watch Test Dataset","e2232b4e":"### 3. RandomForest Classifier","9e0de127":"### 4. RidgeClassifier","8ebd0bd7":"The 'name' feature does not seem to be related to 'survival'.\nSo delete it","6f15d4c2":"### 1. Support Vector Machine Classifier","d2b63710":"Check Null Values","69baf556":"'Ticket' feature just means 'Ticket Number', So meaningless feature.","443bddea":"Just Watch Train DataSet","ef7d8ded":"Let's Classify to use various Classifier!","7537934c":"Back up Cabin Columns and delete from dataset"}}