{"cell_type":{"ed7cf0a8":"code","d6bac159":"code","e28e2797":"code","4b67b192":"code","2b24bc6a":"markdown","a5a9755c":"markdown","4bc9b0e1":"markdown","009a619b":"markdown","80a317e1":"markdown"},"source":{"ed7cf0a8":"import pandas as pd\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\n\nnmr = pd.read_csv(\"..\/input\/who-worldhealth-statistics-2020-complete\/neonatalMortalityRate.csv\").drop(columns=['Dim1'])\ncontinents = pd.read_csv(\"..\/input\/country-mapping-iso-continent-region\/continents2.csv\")\nnmp = pd.read_csv(\"..\/input\/who-worldhealth-statistics-2020-complete\/nursingAndMidwife.csv\")","d6bac159":"def add_region(year, df):\n    regional_df = df[df['Period'] == year]\n    regional_df = regional_df.drop(columns=['Period', 'Indicator'])\n    regional_df.replace(r'(\\s.*\\]$)', '', regex=True, inplace=True)\n    regional_df['First Tooltip'] = regional_df['First Tooltip'].astype(float)\n\n    regional_df = regional_df.merge(continents[['name', 'region']], \n        left_on='Location', right_on='name').drop(columns=['name'])\n\n    regional_df.set_index(['region'], inplace=True)\n    regional_df.loc['Asia', 'mean'] = regional_df.loc['Asia', 'First Tooltip'].mean()\n    regional_df.loc['Europe', 'mean'] = regional_df.loc['Europe', 'First Tooltip'].mean()\n    regional_df.loc['Africa', 'mean'] = regional_df.loc['Africa', 'First Tooltip'].mean()\n    regional_df.loc['Americas', 'mean'] = regional_df.loc['Americas', 'First Tooltip'].mean()\n    regional_df.loc['Oceania', 'mean'] = regional_df.loc['Oceania', 'First Tooltip'].mean()\n    # print(regional_df.sort_values(['region']).tail())\n    data = regional_df.reset_index()\n\n    return data","e28e2797":"neonatal = add_region(2019, nmr).sort_values(['mean'], ascending=False)\nnurse = add_region(2018, nmp).sort_values(['mean'])\nnurse['nmean'] = nurse['mean']\nmerged_df = neonatal.merge(nurse[['region', 'nmean']], left_on='region', right_on='region')","4b67b192":"def plot_graph():\n\n    fig, ax = plt.subplots(4,1, figsize=(6.4,7))\n    ax1 = plt.subplot2grid((4,1), (0,0), rowspan=1, colspan=1)\n    ax2 = plt.subplot2grid((4,1), (1,0), rowspan=3, colspan=1, sharex=ax1)\n    # ax1.set_title('Neonatal mortality rate in 2019\\n(per 1000 live births)',fontsize=18)\n    ax1.bar(merged_df['region'], merged_df['mean'], width=0.7, color='#fc4f30')\n    ax2.bar(merged_df['region'], merged_df['nmean'], width=0.7, color='#008fd5')\n    ax2.invert_yaxis()\n    for p in ax1.patches:\n        width = p.get_width()\n        height = p.get_height()\n        x, y = p.get_xy() \n        ax1.annotate(round(height, 2), (x + width\/2, y+height+0.3), ha='center')\n    for p in ax2.patches:\n        width = p.get_width()\n        height = p.get_height()\n        x, y = p.get_xy() \n        ax2.annotate(round(height, 2), (x + width\/2, y+height-1.5), ha='center')\n    plt.setp(ax1.get_yticklabels(), visible=False)\n    plt.setp(ax1.get_xticklabels(), visible=False)\n    plt.setp(ax2.get_yticklabels(), visible=False)\n    ax1.grid(False)\n    ax2.grid(False)\n    ax1.text(1,24,'Neonatal mortality rate in 2019\\n                 (per 1000 live births)',\n     fontsize=14, color='#fc4f30', fontweight='bold')\n    ax2.text(-0.5,90,'Nursing and midwifery personnel\\nin 2018 (per 10,000 people)',\n     fontsize=14, color='#008fd5', fontweight='bold')\n    ax2.text(-0.5,95, 'Prepared by: twitter.com\\meet_hp\\nSource: kaggle.com\/utkarshxy\/who-world-health-statistics-2020-complete', fontsize=6)\n    ax2.xaxis.tick_top()\n    plt.show()\n    \nplot_graph()","2b24bc6a":"### Importing libraries and importing datasets","a5a9755c":"# Neonatal Mortality V\/s Nursing personnel\n   Here I am trying to find correlation between neonatal(Relating to newborn baby) mortality rate and nursing and midwifery personnel. Dataset is of countries hence to do regional analysis I mapped it with their region. Neonatal mortality rate is of 2019 and nursing personnel data is from 2018.","4bc9b0e1":"### Plotting the data","009a619b":"### Merging dataframes","80a317e1":"### Making a function that maps countries with their region"}}