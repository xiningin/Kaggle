{"cell_type":{"c4223e10":"code","a8eac785":"code","f0da927f":"code","e7b9c900":"code","b3f52d58":"code","72b3581f":"code","66cdfc60":"code","bffcfff4":"code","ef26f0ef":"code","d03c8cc8":"code","42dacae1":"code","c87df71f":"code","bb5d8602":"code","98be27a6":"code","1d3be094":"code","27dafa57":"code","48b999ba":"code","33e73927":"markdown","6d96d062":"markdown","94ff5555":"markdown","3b7ffb95":"markdown"},"source":{"c4223e10":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/tourism'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a8eac785":"df = pd.read_csv('..\/input\/tourism\/Tourism_In_India_Statistics_2018-Table_5.1.3(1).csv')\ndf","f0da927f":"df = df.drop(df.index[36])","e7b9c900":"df.at[15,'State\/UT']='Jammu & Kashmir'\ndf.at[16,'State\/UT']='Karnataka'\n\n","b3f52d58":"df.at[31,'State\/UT']='Telangana'","72b3581f":"import plotly.express as px","66cdfc60":"fig = px.bar(df, x='State\/UT', y='Domestic',title='Domestic Tourist',color_discrete_sequence=px.colors.sequential.Viridis)\nfig","bffcfff4":"fig = px.pie(df,values = 'Domestic',names = 'State\/UT',title ='Domestic tourist', color_discrete_sequence=px.colors.sequential.Viridis)\nfig.show()","ef26f0ef":"fig = px.bar(df, x='State\/UT', y='Foreign',title = 'International tourist',color_discrete_sequence=px.colors.sequential.Viridis)\nfig","d03c8cc8":"fig = px.pie(df,values = 'Foreign',names = 'State\/UT',title = 'International tourist',color_discrete_sequence=px.colors.sequential.Viridis)\nfig.show()","42dacae1":"df","c87df71f":"import json","bb5d8602":"\nfig = px.choropleth(df, \n                    geojson=\"https:\/\/gist.githubusercontent.com\/jbrobst\/56c13bbbf9d97d187fea01ca62ea5112\/raw\/e388c4cae20aa53cb5090210a42ebb9b765c0a36\/india_states.geojson\",\n                    locations = 'State\/UT',\n                    color = 'Domestic',\n                    featureidkey='properties.ST_NM',\n                    color_continuous_scale='Viridis',\n                    title = 'Domestic tourist'\n                   )\nfig.update_geos(fitbounds=\"locations\", visible=False)\nfig.show()","98be27a6":"fig = px.choropleth(df, \n                    geojson=\"https:\/\/gist.githubusercontent.com\/jbrobst\/56c13bbbf9d97d187fea01ca62ea5112\/raw\/e388c4cae20aa53cb5090210a42ebb9b765c0a36\/india_states.geojson\",\n                    locations = 'State\/UT',\n                    color = 'Foreign',\n                    featureidkey='properties.ST_NM',\n                    color_continuous_scale='Viridis',\n                    title = 'International tourist'\n                   )\nfig.update_geos(fitbounds=\"locations\", visible=False)\nfig.show()","1d3be094":"df.at[15,'State\/UT']='Jammu & Kashmir'\ndf","27dafa57":"df.at[16,'State\/UT']='Karnataka'\ndf","48b999ba":"df","33e73927":"changing the names of the states which were wrongly spelt","6d96d062":"dropping the row with total values","94ff5555":"domestic share of tourist","3b7ffb95":"International tourist"}}