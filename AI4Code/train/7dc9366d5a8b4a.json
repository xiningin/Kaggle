{"cell_type":{"c8dd5378":"code","4d2708c0":"code","b13483f4":"code","7e25f3d7":"code","7d54bfdc":"code","25cc3c3d":"code","f958826a":"code","6867c344":"code","6530b921":"code","acff7363":"code","e52d2c0f":"code","c5d60f0b":"code","2c0b2d7b":"code","be9b8262":"code","043d8b4a":"code","c2cfb79f":"code","db77c5ef":"code","9c7cf932":"code","332105e6":"code","a7e1c83a":"markdown","79f47e89":"markdown","8c2bfe03":"markdown","1579eaae":"markdown","594cbea7":"markdown","9b2c27bc":"markdown","f93f56d3":"markdown","e8d0d08a":"markdown","fbcae814":"markdown","f991a9fc":"markdown","5f40b2df":"markdown","df645bc9":"markdown"},"source":{"c8dd5378":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\n\nimport plotly.express as px\nimport cufflinks as cf\nfrom scipy import stats\n%matplotlib inline\n\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected = True)\ncf.go_offline()\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4d2708c0":"df_HHG = pd.read_csv(\"..\/input\/top-1000-highest-grossing-movies\/Highest Holywood Grossing Movies.csv\");","b13483f4":"df_HHG.head(5)","7e25f3d7":"df_HHG.info()","7d54bfdc":"df_HHG = df_HHG.drop(columns = [\"Unnamed: 0\",'Movie Info','Release Date'])","25cc3c3d":"df_HHG['Year'] = 0\nfor i in range(len(df_HHG['Title'])):\n    df_HHG['Year'][i] = df_HHG['Title'][i][-5:-1]","f958826a":"df_HHG.head(5)","6867c344":"dfg = df_HHG.groupby(by = ['Distributor','Year'] )['Title'].count().unstack().iplot(kind = 'bar',title = \"Number of films which are made by different distributors in different years\")","6530b921":"dfg = df_HHG.groupby(by = ['Distributor','Year'] )['World Sales (in $)'].sum().unstack().iplot(kind = 'bar',title = \"Amount of total sale based on different distributors and years\")","acff7363":"dfg = df_HHG.groupby(by = ['Distributor'] )['World Sales (in $)'].sum().iplot(kind = 'bar',color = \"blue\",title = 'Amount of total sale in different years')","e52d2c0f":"df_HHG['Genre_Action'] = ''\ndf_HHG['Genre_Adventure'] = ''\ndf_HHG['Genre_Sci-Fi'] = ''\ndf_HHG['Genre_Drama'] = ''\ndf_HHG['Genre_Fantasy'] = ''\ndf_HHG['Genre_Crime'] = ''\ndf_HHG['Genre_Comedy'] = ''\ndf_HHG['Genre_Romance'] = ''\ndf_HHG['Genre_Animation'] = ''\ndf_HHG['Genre_Thriller'] = ''\ndf_HHG['Genre_Musical'] = ''\ndf_HHG['Genre_Biography'] = ''\ndf_HHG['Genre_Horror'] = ''\ndf_HHG['Genre_Mystery'] = ''\ndf_HHG['Genre_Family'] = ''","c5d60f0b":"for i in range(len(df_HHG['Genre'])):\n    if df_HHG['Genre'][i].__contains__(\"Action\"):\n        df_HHG['Genre_Action'][i]=\"Action\"\n        \n    if df_HHG['Genre'][i].__contains__(\"Adventure\"):\n        df_HHG['Genre_Adventure'][i]=\"Adventure\"\n        \n    if df_HHG['Genre'][i].__contains__(\"Sci-Fi\"):\n        df_HHG['Genre_Sci-Fi'][i]=\"Sci-Fi\"\n        \n    if df_HHG['Genre'][i].__contains__(\"Drama\"):\n        df_HHG['Genre_Drama'][i]=\"Drama\"\n    \n    if df_HHG['Genre'][i].__contains__(\"Fantasy\"):\n        df_HHG['Genre_Fantasy'][i]=\"Fantasy\"\n    \n    if df_HHG['Genre'][i].__contains__(\"Crime\"):\n        df_HHG['Genre_Crime'][i]=\"Crime\"\n    \n    if df_HHG['Genre'][i].__contains__(\"Comedy\"):\n        df_HHG['Genre_Comedy'][i]=\"Comedy\"\n    \n    if df_HHG['Genre'][i].__contains__(\"Romance\"):\n        df_HHG['Genre_Romance'][i]=\"Romance\"\n    \n    if df_HHG['Genre'][i].__contains__(\"Animation\"):\n        df_HHG['Genre_Animation'][i]=\"Animation\"\n    \n    if df_HHG['Genre'][i].__contains__(\"Thriller\"):\n        df_HHG['Genre_Thriller'][i]=\"Thriller\"\n        \n    if df_HHG['Genre'][i].__contains__(\"Musical\"):\n        df_HHG['Genre_Musical'][i]=\"Musical\"\n        \n    if df_HHG['Genre'][i].__contains__(\"Biography\"):\n        df_HHG['Genre_Biography'][i]=\"Biography\"\n        \n    if df_HHG['Genre'][i].__contains__(\"Horror\"):\n        df_HHG['Genre_Horror'][i]=\"Horror\"\n        \n    if df_HHG['Genre'][i].__contains__(\"Mystery\"):\n        df_HHG['Genre_Mystery'][i]=\"Mystery\"\n        \n    if df_HHG['Genre'][i].__contains__(\"Family\"):\n        df_HHG['Genre_Family'][i]=\"Family\"","2c0b2d7b":"df_HHG1 = df_HHG.drop(columns = ['Genre'])","be9b8262":"df_hhg_melt = df_HHG1.melt(id_vars = ['Title','Distributor','Domestic Sales (in $)','International Sales (in $)','World Sales (in $)','Movie Runtime','License','Year'],value_name = \"Genre\")","043d8b4a":"for i in range(len(df_hhg_melt['Genre'])):\n    if df_hhg_melt['Genre'][i] == \"\":\n        df_hhg_melt = df_hhg_melt.drop(index = i, axis = 0)  ","c2cfb79f":"df_hhg_melt = df_hhg_melt.drop(columns = \"variable\")","db77c5ef":"df_hhg_melt.head(5)","9c7cf932":"df_hhg_melt.groupby(by = [\"Genre\"])['World Sales (in $)'].sum().reset_index()\npx.pie(df_hhg_melt\n       ,values = 'World Sales (in $)'\n       ,names = \"Genre\"\n       ,title = 'Percentage of Different Genre in Total Sales'\n       ,color_discrete_sequence = px.colors.sequential.RdBu\n       ,height = 600)","332105e6":"df_sale = df_hhg_melt.groupby(by = [\"Genre\"])['World Sales (in $)'].sum().reset_index()\ndf_count = df_hhg_melt.groupby(by = [\"Genre\"])['World Sales (in $)'].count().reset_index()\ndf_ave = (df_sale[\"World Sales (in $)\"] \/ df_count[\"World Sales (in $)\"]).reset_index()\ndf_ave['Genre'] = df_count[\"Genre\"]\npx.bar(df_ave\n      ,x =\"Genre\"\n       , y = \"World Sales (in $)\"\n       ,labels = {\"World Sales (in $)\":\"Average Sale For Each Genre\"}\n      , title = \"Average of sale for films which contain each genre\")","a7e1c83a":"**Calculating the Average of Total Sale for each genre by dividing the Total Sale to number of film which are made in that genre**","79f47e89":"**Visulizing number of films which are made by different distributors in different years**\n\n**Using \"iplot\", you are able to zoom to any parts of the chart you want!!!**\n\n**If you hold your cursor on bars, you can see the information!**","8c2bfe03":"**Now, we are going to use the \"Genre\" column to make some different columns and after that we will melt them**\n\n**Making 14 different columns for 14 different genres to understand which film contains which genre**","1579eaae":"**Illustrating amount of total sale in different years**","594cbea7":"**We can use melt function to make our dataframe more tidy**\n\nIt unpivot our table and reduce our column number","9b2c27bc":"**Illustrating amount of total sale based on different distributors and years**","f93f56d3":"**Three columns are usless, \"Movie Info\", \"Release Data\" and \"Unnamed: 0\"**","e8d0d08a":"**Using pie chart to illustrate the percentage of different genre in total sale**\n\n**By holding the cursor on each part you can see the amount of total sale**","fbcae814":"**The bar chart above illustrates although Adventure genre had the highest sale, Sci-Fi average sales are higher**","f991a9fc":"**Getting rid of empty cell in Genre column**","5f40b2df":"**The old Genre column is useless now so we drop it**","df645bc9":"**Because the \"Release Date\" had a lot of NaN, I used \"Title\" to make a new \"Year\" column**"}}