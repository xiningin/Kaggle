{"cell_type":{"34c0ea31":"code","1a65412f":"code","429422fa":"code","d238c08c":"code","78fd8436":"code","27f29352":"code","e8d9eaea":"code","a13de8ed":"code","8cafee69":"code","080fd087":"code","dc8b39ea":"code","9db28cda":"code","f67f2440":"code","6a8e874b":"code","672cc136":"code","7191b28f":"code","4b4d3b09":"code","79eb774d":"code","cdfd5dd7":"code","0a3b9eab":"code","1a7b34a6":"code","d3cf15b7":"markdown","d9a0f8f5":"markdown","fcf5e4cd":"markdown","8acacb1b":"markdown","e236f72a":"markdown","c0997ec6":"markdown","1e2f7550":"markdown","c09aacc3":"markdown","74978fbe":"markdown","3e68be6e":"markdown","a617d3af":"markdown"},"source":{"34c0ea31":"#The data sets are given by kaggle --> https:\/\/www.kaggle.com\/c\/digit-recognizer\/data\n\n#Load the data\n\nimport pandas as pd\nimport numpy as np\n\ntrain_data = pd.read_csv('..\/input\/digit-recognizer\/train.csv', dtype=np.int)","1a65412f":"train_data.head()","429422fa":"#checking missing data\ntrain_data.isnull().sum()","d238c08c":"#Split data\nX_train = train_data.drop(\"label\",axis = 1)\ny_train = train_data[\"label\"]","78fd8436":"X_train.head()","27f29352":"y_train.head()","e8d9eaea":"X_train.iloc[0,210:220]","a13de8ed":"X_train = X_train \/ 255","8cafee69":"X_train.iloc[0,210:220]","080fd087":"import matplotlib.pyplot as plt\n\nplt.imshow(np.array(X_train.iloc[3]).reshape(28,28), cmap = \"gray\")\nplt.title(str(y_train[3]))\nplt.show()","dc8b39ea":"test_data = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","9db28cda":"test_data.isnull().sum()","f67f2440":"test_data = test_data \/ 255","6a8e874b":"test_data.head()","672cc136":"from sklearn.neural_network import MLPClassifier\n\nmodel = MLPClassifier(solver=\"adam\", activation=\"relu\", hidden_layer_sizes=(64,64))","7191b28f":"model.fit(X_train, y_train)","4b4d3b09":"prediction = model.predict(test_data)","79eb774d":"for i in range(3):\n    plt.imshow(np.array(test_data.iloc[i]).reshape(28,28), cmap = \"gray\")\n    plt.title(str(prediction[i]))\n    plt.show()  ","cdfd5dd7":"ImageId = [i for i in range(1,28001)]\nsubmission = pd.DataFrame({\"ImageId\": ImageId,\"Label\": prediction})","0a3b9eab":"submission.head()","1a7b34a6":"submission.to_csv(\"submission.csv\", index=False)","d3cf15b7":"## Submission","d9a0f8f5":"\"identify digits from a dataset of tens of thousands of handwritten images\"","fcf5e4cd":"# References\n\n* https:\/\/www.kaggle.com\/c\/digit-recognizer\n* https:\/\/www.kaggle.com\/vzocca\/simple-mnist-python-code\n* https:\/\/www.kaggle.com\/kanncaa1\/pytorch-tutorial-for-deep-learning-lovers\n* https:\/\/www.youtube.com\/watch?v=pqNCD_5r0IU","8acacb1b":"## Model","e236f72a":"## Problem","c0997ec6":"This notebook got a score of 0.96053 in the competition Digit Recognizer.","1e2f7550":"## Visualize one image","c09aacc3":"## Data","74978fbe":"Because Machine Learning models work better with numbers between 0 and 1, I will normalize X_train.","3e68be6e":"## Visualize some predictions","a617d3af":"## Test data"}}