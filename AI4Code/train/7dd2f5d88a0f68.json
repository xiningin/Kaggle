{"cell_type":{"aab038bc":"code","4f002828":"code","ea208471":"code","f270366e":"code","cb336aaa":"code","b56f8b76":"code","00c889e5":"code","f87af97e":"code","355dcd64":"code","2098340b":"code","05d0126b":"code","4a71879d":"code","8e49c3cd":"code","2a4a4b96":"code","b9067f87":"code","6cb32bd9":"code","cd4a03bb":"code","8747dcf4":"markdown","87541356":"markdown","0d511ea6":"markdown","62d04c4d":"markdown","c395a602":"markdown","9c74b907":"markdown"},"source":{"aab038bc":"#import packages\nimport numpy as np\nimport pandas as pd \n#import matplotlib as mpl\nimport h2o\nfrom h2o.automl import H2OAutoML\nimport seaborn as sns\nimport matplotlib.pyplot as plt","4f002828":"h2o.init()","ea208471":"#import train test files\ntrain = h2o.import_file('..\/input\/tabular-playground-series-may-2021\/train.csv')\ntest = h2o.import_file('..\/input\/tabular-playground-series-may-2021\/test.csv')\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/sample_submission.csv')","f270366e":"print(train.shape)\nprint(test.shape)","cb336aaa":"#desscribe dataset\ntrain.describe()","b56f8b76":"x = train.columns\ny = \"target\"\nx.remove(y)\nx.remove(\"id\") #removing id  ","00c889e5":"for col in x:train[col].hist()\n\n    \n","f87af97e":"plt.figure(figsize=(15,15))\ncorr = train[:,0:10].cor().as_data_frame()\ncorr.index = train.columns[0:10]\nsns.heatmap(corr, annot = True, cmap='RdYlGn', vmin=-1, vmax=1)\nplt.title(\"Correlation Heatmap\", fontsize=16)\nplt.show()","355dcd64":"aml = H2OAutoML(max_runtime_secs=1500, seed=1)\naml.train(x=x, y=y, training_frame=train)","2098340b":"lb = aml.leaderboard\nlb.head()  \n\n","05d0126b":"preds = aml.predict(test)","4a71879d":"preds.as_data_frame().values","8e49c3cd":"# Get model ids for all models in the AutoML Leaderboard\nmodel_ids = list(aml.leaderboard['model_id'].as_data_frame().iloc[:,0])\n# Get the \"All Models\" Stacked Ensemble model\nse = h2o.get_model([mid for mid in model_ids if \"StackedEnsemble_AllModels\" in mid][0])\n# Get the Stacked Ensemble metalearner model\nmetalearner = h2o.get_model(se.metalearner()['name'])","2a4a4b96":"metalearner.coef_norm()","b9067f87":"#model \nmodel = aml.leader \nmodel.explain(train)","6cb32bd9":"\n\n## create submission\nsubmission = pd.concat([\n    pd.DataFrame({'id': test['id'].as_data_frame().id}),\n    preds.as_data_frame().drop('predict', axis=1)\n], axis=1)\n\nsubmission.head()\n\n","cd4a03bb":"submission.to_csv('submission.csv', index=False)","8747dcf4":"**AutoML: Automatic Machine Learning**","87541356":"** #feature distribution using hist **","0d511ea6":"#  AutoML H2o Code ","62d04c4d":"\n![image.png](attachment:05fcbb51-9ecc-4838-90bf-cf3fd22ca178.png)\n","c395a602":"Now let us also look at the correlation of the individual features. We can use the cor() function in H2OFrame for the same","9c74b907":"**Ensemble Exploration**"}}