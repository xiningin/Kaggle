{"cell_type":{"19833ddf":"code","ecccb7cb":"code","2f77a4a7":"code","80d0a413":"code","bf684916":"code","ff807d0e":"code","c4384b6a":"code","d8f9f9d2":"code","ba319346":"code","bc088b4f":"code","0b866833":"code","bc630329":"code","2ed002b0":"code","f7f9c0c0":"code","c448876f":"code","024571a0":"code","bbc4921c":"code","d4266ece":"code","bf7b08f3":"code","03a5a7c7":"code","adb31cdd":"code","1a4d4df6":"code","3461327a":"code","d1eae795":"code","d030b161":"code","1639d642":"code","b7e1798b":"markdown","64f58762":"markdown","d08660fe":"markdown","97bafdb2":"markdown","12cdd919":"markdown","a33d756d":"markdown"},"source":{"19833ddf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ecccb7cb":"gd=pd.read_csv(\"\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv\")","2f77a4a7":"gd.head()","80d0a413":"type(gd)","bf684916":"gd.describe()","ff807d0e":"gd.tail(10)","c4384b6a":"gd.shape              #summary statistics","d8f9f9d2":"gd.boxplot()","ba319346":"gd.hist()","bc088b4f":"gd.info()","0b866833":"gd.isnull()","bc630329":"#count the numbers of missing values in each cols\ngd.isnull().sum()","2ed002b0":"gd[gd.Rating>5]","f7f9c0c0":"gd.drop([10472],inplace=True)","c448876f":"gd[10470:10475]","024571a0":"gd.boxplot()","bbc4921c":"gd.hist()","d4266ece":"threshold=len(gd)*0.1\nthreshold","bf7b08f3":"gd.dropna(thresh=threshold,axis=1, inplace=True)","03a5a7c7":"print(gd.isnull().sum())","adb31cdd":"gd.shape","1a4d4df6":"#define a function impute median\ndef impute_median (series):\n    return series.fillna(series.median())","3461327a":"gd.Rating=gd['Rating'].transform(impute_median)","d1eae795":"#count the numbers of null values in each cols\ngd.isnull().sum()","d030b161":"#mode of categrical values\nprint(gd['Type'].mode())\nprint(gd['Current Ver'].mode())\nprint(gd['Android Ver'].mode())","1639d642":"#fill the missing categorical values with modes\ngd['Type'].fillna(str(gd['Type'].mode().values[0]),inplace=True)","b7e1798b":"**remove all cols empty 90%**","64f58762":"**check how many ratings are more than 5 outlairs**","d08660fe":"**data cleaning**","97bafdb2":"count the numbers of missing values in dataframes","12cdd919":"*fill the null values with approrpiate values using aggregate functions using mean midean mode*","a33d756d":"**data nputation and manupulation**"}}