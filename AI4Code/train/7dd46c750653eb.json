{"cell_type":{"190e2141":"code","c0f936d3":"code","c2192cb3":"code","19a54d10":"code","70f58dd3":"code","2fe28d83":"code","4e10a925":"code","cf4e580c":"code","2913115f":"code","c1b38be4":"code","9efc46e7":"code","553de4f2":"code","cb471a9b":"code","eb965c35":"code","0da536dc":"code","6d53a8f9":"code","d9aac365":"code","e299a8a8":"code","bad2ff13":"code","e74bc896":"code","49529d25":"markdown","adffee4d":"markdown","7fe391c4":"markdown","4ac96713":"markdown","32a666eb":"markdown","c3791373":"markdown","d3dfbd96":"markdown","cc64b284":"markdown","66060cad":"markdown","c01aef06":"markdown","f8dc2b12":"markdown","9130ec08":"markdown","ca0decb2":"markdown","acb0a77d":"markdown","bbb21660":"markdown","7e859222":"markdown","923484ec":"markdown","6bc2a141":"markdown","a887b4dd":"markdown","9babe5f1":"markdown","3850eec8":"markdown","24913f75":"markdown","ee92c457":"markdown","fbd176cf":"markdown","43301796":"markdown","fe7dc95f":"markdown","101f4a6d":"markdown","a56bb668":"markdown","01d3ffb3":"markdown","b6f20f25":"markdown"},"source":{"190e2141":"\n#importing Libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)    #THIS LINE IS MOST IMPORTANT AS THIS WILL DISPLAY PLOT ON \n#NOTEBOOK WHILE KERNEL IS RUNNING\nimport plotly.graph_objects as go\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","c0f936d3":"df = pd.read_csv('..\/input\/mortaliy-moscow-20102020\/moscow_stats.csv')\ndf.head()","c2192cb3":"df.info()","19a54d10":"dfpopy = df.copy()\ndfpopy = dfpopy.groupby(['Year'])['NumberOfBirthCertificatesForBoys', \n                                  'NumberOfBirthCertificatesForGirls','StateRegistrationOfBirth',\n                                  'StateRegistrationOfDeath',].sum().reset_index()\n\n\ndfpopy.style.background_gradient(cmap='Greens')","70f58dd3":"dfpopm = df.copy()\ndfpopm = dfpopm.groupby(['Month'])['NumberOfBirthCertificatesForBoys', \n                                   'NumberOfBirthCertificatesForGirls','StateRegistrationOfBirth',\n                                   'StateRegistrationOfDeath',].sum().reset_index()\ndfpopm.style.background_gradient(cmap='Greens')","2fe28d83":"\n\nfig = go.Figure(data=go.Heatmap(\n                   z= df['StateRegistrationOfBirth'],\n                   x=df['Month'],\n                   y= df['Year'],\n                   hoverongaps = False))\nfig.update_layout(\n    \n    title_text= '<b>Birth in Moscow<b>',title_x=0.5,\n    paper_bgcolor='aqua',\n    plot_bgcolor = \"aqua\",\n    yaxis = dict(\n        tickmode = 'array',\n        tickvals = [2010, 2011, 2012, 2013, 2014, \n                    2015, 2016, 2017 , 2018, 2019, 2020],\n        ticktext = ['2010', '2011', '2012', '2013', '2014', \n                    '2015', '2016', '2017' , '2018', '2019', '2020'],),\n     )\nfig.update_xaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.update_yaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.show()","4e10a925":"\n\nfig = go.Figure(data=go.Heatmap(\n                   z= df['StateRegistrationOfDeath'],\n                   x=df['Month'],\n                   y= df['Year'],\n                  \n                   hoverongaps = False))\nfig.update_layout(\n    title_text= '<b> Death in Moscow<b>',title_x=0.5,\n    paper_bgcolor='aqua',\n    plot_bgcolor = \"aqua\",\n    yaxis = dict(\n        tickmode = 'array',\n        tickvals = [2010, 2011, 2012, 2013, 2014, 2015, \n                    2016, 2017 , 2018, 2019, 2020],\n        ticktext = ['2010', '2011', '2012', '2013', '2014', \n                    '2015', '2016', '2017' , '2018', '2019', '2020'],),\n    \n    \n    )\nfig.update_xaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.update_yaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.show()","cf4e580c":"df2 = df.copy()\ndf2['BirthRate'] = df2['StateRegistrationOfBirth'] \/ df2['TotalPopulationThisYear'] * 1000\ndf2['DeathRate'] = df2['StateRegistrationOfDeath']\/df2['TotalPopulationThisYear'] * 1000\ndf2['BirthRateF'] = df2['NumberOfBirthCertificatesForBoys'] \/ df2['TotalPopulationThisYear'] * 1000\ndf2['BirthRateM'] = df2['NumberOfBirthCertificatesForGirls']\/df2['TotalPopulationThisYear'] * 1000","2913115f":"df3 = df2.groupby(['Year'])['BirthRate','DeathRate','BirthRateF','BirthRateM' ,].sum().reset_index()\ndf4 = df2.groupby(['Month'])['BirthRate','DeathRate','BirthRateF','BirthRateM' ,].sum().reset_index()\n\n","c1b38be4":"fig = go.Figure(data=[\n    go.Bar(name='Birth Rate Male', x= df3['Year'], y= df3['BirthRateF']),\n    go.Bar(name='Birth Rate Female', x= df3['Year'], y=df3['BirthRateM'])\n])\n# Change the bar mode\nfig.update_layout(barmode='group',\n                  \n                 xaxis = dict(\n        tickmode = 'array',\n        tickvals = [2010, 2011, 2012, 2013, 2014, 2015, \n                    2016, 2017 , 2018, 2019, 2020],\n        ticktext = ['2010', '2011', '2012', '2013', '2014', \n                    '2015', '2016', '2017' , '2018', '2019', '2020'],),\n        \n        paper_bgcolor='aqua',\n        plot_bgcolor = \"aqua\",\n        title_text= '<b>Birth Rate of Male & Female Year Wise<b>',title_x=0.5,)\nfig.update_xaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.update_yaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.show()","9efc46e7":"fig = go.Figure(data=[\n    go.Bar(name='Birth Rate Male', x= df4['Month'], y= df4['BirthRateF']),\n    go.Bar(name='Birth Rate Female', x= df4['Month'], y=df4['BirthRateM'])\n])\n# Change the bar mode\nfig.update_layout(barmode='group',\n                 xaxis={'categoryorder':'array', \n                        'categoryarray':['January','February',\n                                         'March','April', 'May', \n                                         'June', 'July', 'August', \n                                         'September', 'October', 'November', 'December',]},\n                 \n                 paper_bgcolor='aqua',\n                 plot_bgcolor = \"aqua\",\n                 title_text= '<b> Birth Rate of Male & Female Monthwise<b>',title_x=0.5,)\nfig.update_xaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.update_yaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.show()","553de4f2":"fig = go.Figure(data=[\n    go.Bar(name='Birth Rate', x= df3['Year'], y= df3['BirthRate']),\n    go.Bar(name='Death Rate', x= df3['Year'], y=df3['DeathRate'])\n])\n# Change the bar mode\nfig.update_layout(barmode='group',\n                 xaxis = dict(\n        tickmode = 'array',\n        tickvals = [2010, 2011, 2012, 2013, 2014, \n                    2015, 2016, 2017 , 2018, 2019, 2020],\n        ticktext = ['2010', '2011', '2012', '2013', \n                    '2014', '2015', '2016', '2017' , \n                    '2018', '2019', '2020'],),\n        paper_bgcolor='aqua',\n        plot_bgcolor = \"aqua\",\n        title_text= '<b> Birth Rate & Death Rate Yearwise<b>',title_x=0.5,)\n\nfig.update_xaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.update_yaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.show()","cb471a9b":"fig = go.Figure(data=[\n    go.Bar(name='Birth Rate', x= df4['Month'], y= df4['BirthRate']),\n    go.Bar(name='Death Rate', x= df4['Month'], y=df4['DeathRate'])\n])\n# Change the bar mode\nfig.update_layout(barmode='group',\n                  xaxis={'categoryorder':'array', \n                         'categoryarray':['January','February','March',\n                                          'April', 'May', 'June', 'July', \n                                          'August', 'September', 'October',\n                                          'November', 'December',]},\n                 paper_bgcolor='aqua',\n                 plot_bgcolor = \"aqua\",\n                 title_text= '<b>Birth Rate & Death Rate Month wise<b>',title_x=0.5,)\nfig.update_xaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.update_yaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.show()","eb965c35":"dfm = df.groupby(['Year'])['StateRegistrationOfMarriage'].sum().reset_index()\n#dfm = dfm.loc[dfm['Year'] != 2020]\nsns.set_context(\"talk\")\nplt.style.use(\"fivethirtyeight\")\nplt.figure(figsize = (14,10))\n\nax = sns.barplot(x = 'Year', y = 'StateRegistrationOfMarriage' , data = dfm, ci = None, palette = 'Accent', edgecolor='black')\nplt.title(\"Marriages in Moscow over the years\", pad = 20)\nplt.ylabel('Marriages')\nfor p in ax.patches:\n             ax.annotate(\"%.f\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                 ha='center', va='center', fontsize=15, color='black', xytext=(0, 8),\n                 textcoords='offset points')","0da536dc":"fig = go.Figure(data=go.Heatmap(\n                   z= df['StateRegistrationOfMarriage'],\n                   x=df['Month'],\n                   y= df['Year'],\n                   hoverongaps = False))\nfig.update_layout(\n    title_text= '<b> Marriages in  Moscow<b>',title_x=0.5,\n    yaxis = dict(\n        tickmode = 'array',\n        tickvals = [2010, 2011, 2012, 2013, 2014, \n                    2015, 2016, 2017 , 2018, 2019, 2020],\n        ticktext = ['2010', '2011', '2012', '2013', \n                    '2014', '2015', '2016', '2017' , \n                    '2018', '2019', '2020'],),\n    paper_bgcolor='aquamarine',\n    plot_bgcolor = \"aquamarine\",\n    \n    )\nfig.update_xaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.update_yaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.show()","6d53a8f9":"dfd = df.groupby(['Year'])['StateRegistrationOfDivorce'].sum().reset_index()\n#dfd = dfd.loc[dfd['Year'] != 2020]\nsns.set_context(\"talk\")\nplt.style.use(\"fivethirtyeight\")\nplt.figure(figsize = (14,10))\n\nax = sns.barplot(x = 'Year', y = 'StateRegistrationOfDivorce', data = dfd, ci=None, palette = 'Accent', edgecolor = 'black')\nplt.title(\"Divorces in Moscow over the years\", pad =20)\nplt.ylabel('Divorces')\nfor p in ax.patches:\n             ax.annotate(\"%.f\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                 ha='center', va='center', fontsize=15, color='black', xytext=(0, 8),\n                 textcoords='offset points')","d9aac365":"fig = go.Figure(data=go.Heatmap(\n                   z= df['StateRegistrationOfDivorce'],\n                   x=df['Month'],\n                   y= df['Year'],\n                   hoverongaps = False))\nfig.update_layout(\n    title_text= '<b> Divorces in Moscow<b>',title_x=0.5,\n    yaxis = dict(\n        tickmode = 'array',\n        tickvals = [2010, 2011, 2012, 2013, 2014, \n                    2015, 2016, 2017 , 2018, 2019, 2020],\n        ticktext = ['2010', '2011', '2012', '2013', \n                    '2014', '2015', '2016', '2017' , \n                    '2018', '2019', '2020'],),\n    paper_bgcolor='aquamarine',\n    plot_bgcolor = \"aquamarine\",\n    \n    )\nfig.update_xaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.update_yaxes(tickfont=dict(family='Rockwell', color='black', size=14))\nfig.show()","e299a8a8":"df6 = df.groupby(['Year'])['StateRegistrationOfAdoption'].sum().reset_index()\ndf6 = df6.loc[df6['Year'] != 2020]\nsns.set_context(\"talk\")\nplt.style.use(\"fivethirtyeight\")\nplt.figure(figsize = (14,10))\nax = sns.barplot(x = 'Year' , y = 'StateRegistrationOfAdoption', data = df6, ci = None, palette = 'dark')\nplt.title('Adoptions in Moscow over the years', pad =20)\nplt.ylabel('Adoptions')\n\nfor p in ax.patches:\n             ax.annotate(\"%.f\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                 ha='center', va='center', fontsize=15, color='black', xytext=(0, 8),\n                 textcoords='offset points')","bad2ff13":"df7 = df.groupby(['Year'])['StateRegistrationOfNameChange'].sum().reset_index()\ndf7 = df7.loc[df7['Year'] != 2020]\nsns.set_context(\"talk\")\nplt.style.use(\"fivethirtyeight\")\nplt.figure(figsize = (14,10))\nax = sns.barplot(x = 'Year' , y = 'StateRegistrationOfNameChange', data = df7, ci = None, palette = 'dark')\nplt.title('Name Changes in Moscow over the years', pad =20)\nplt.ylabel('Name Changes')\nfor p in ax.patches:\n             ax.annotate( \"%.f\" %p.get_height(), (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                 ha='center', va='center', fontsize=15, color='black', xytext=(0, 8),\n                 textcoords='offset points')\n\n","e74bc896":"df8 = df.groupby(['Year'])['StateRegistrationOfPaternityExamination'].sum().reset_index()\ndf8 = df8.loc[df8['Year'] != 2020]\nsns.set_context(\"talk\")\nplt.style.use(\"fivethirtyeight\")\nplt.figure(figsize = (14,10))\nax = sns.barplot(x = 'Year' , y = 'StateRegistrationOfPaternityExamination', data = df8, ci = None, palette = 'dark')\nplt.title('Paternity Examinations in Moscow over the years', pad = 20)\nplt.ylabel('No. of parenity examination')\nfor p in ax.patches:\n             ax.annotate( \"%.f\" %p.get_height(), (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                 ha='center', va='center', fontsize=15, color='black', xytext=(0, 8),\n                 textcoords='offset points')","49529d25":"**Name Change over the years**","adffee4d":"![irina-grotkjaer-dyPNRXLevJY-unsplash.jpg](attachment:irina-grotkjaer-dyPNRXLevJY-unsplash.jpg)","7fe391c4":"Thank you Vitaliy Malcev for providing this dataset. \n\n**Objectives**:\n* To find the seasonality of Birth and Death Rate in Moscow\n* To find seasonality of Marriages and Divorces in Moscow","4ac96713":"**Inference**\n* Over the years the number of Name Changes are gradually Increasing.","32a666eb":"**Inference**\n* 2019 had the highest number of Divorces (47995) and 2012 had the lowest number of Divorces (41928)","c3791373":"**Inference**\n\n* The Month of January has the most number of Death over the years\n\n* For the year 2010 , July and August has the highest number of Deaths","d3dfbd96":"# **Marriage and Divorce in Moscow**","cc64b284":"**Inference**\n\n* The Year 2016 has the most Total Number of Births \n\n* The Year 2010 has the most Number of Death","66060cad":"**Inference**\n\n* The month of July has the Most Number of Births\n\n* The month of January has the Most Number of Deaths\n","c01aef06":"# Conclusion\n\n* In Moscow 2016 has the most number of Births.\n\n* Month of July has the most of Number of Births.\n\n* In Moscow 2010 has the most number of Deaths.\n\n* Month of January has the most number of Deaths.\n\n* In Moscow most of the most couple marry in months of June to September.\n\n* In Moscow couple generally divorce in Month of March and December\n\n* In Moscow Adoptions are decreasing whereas Name changes are Increasing over the years. Further studies need to be done to find out the reason.","f8dc2b12":"Comparing Birth Rate of Male and Female Monthwise","9130ec08":"Comparing Death Rate and Birth Rate Month Wise","ca0decb2":"Comparing Birth Rate and Death Rate Yearwise","acb0a77d":"# **Birth Vs Death In Moscow**","bbb21660":"**Inference**\n\n* Over the years March has the most number of Divorces. after that December has the most number of Divorces","7e859222":"**Inference**\n\n* Comparatively Female birth rate was always less than Male Birth rate\n\n* Male Birth Rate was Highest in 2016 and was lowest in 2011.\n\n* Female Birth Rate was Highest in 2016 and was lowest in 2011.\n\n2016 seems to be good year for Moscow","923484ec":"**Marriages over the years**","6bc2a141":"**Inference**\n\n* Over the years the months from June to September has more number of marriages.\n\n* In 2013 and 2014 , August had the most number of marriages.","a887b4dd":"**Comparing Birth Rate and Death Rate**","9babe5f1":"**Inference**\n\n* Comparatively Female birth rate was less than Male Birth rate across the years\n\n* Male Birth rate was highest in month of July and was lowest in month of February\n\n* Female Birth rate was highest in month of July  and was lowest in month of May\n\n","3850eec8":"The given dataset has only 4 months data of 2020\n\n**Inference**\n\n* The months of July and August has most number of Births over the years.","24913f75":"**Divorces over the years**","ee92c457":"**Inference**\n\n* Over the years number of adoptions are gradually decreasing ","fbd176cf":"**Inference**\n\n* Except the month of January over the years death rate was always less than birth rate.\n\n* Birth rate is highest in month of July and lowest in month of February.\n\n* Death rate is highest in month of January   and lowest in month of June.","43301796":"**Comparing Birth Rate of Male and Female Yearwise**","fe7dc95f":"**Inference**\n\n* Birth rate seems to be always greater than Death rate over the years except for year 2010 & 2020\n\n* Birth rate was highest in 2016 and was lowest in 2011\n\n* Death rate was highest in 2010 and was lowest in 2010","101f4a6d":"**Adoptions over the Years**","a56bb668":"**Inference**\n\n* 2014 had the highest number of marriages (100483) whereas 2019 had the lowest number of marriages (83010)","01d3ffb3":"**The crude birth rate (CBR) is equal to the number of live births (b) in a year divided by the total midyear population (p), with the ratio multiplied by 1,000 to arrive at the number of births per 1,000 people.**","b6f20f25":"**Adoption and Name Change **"}}