{"cell_type":{"43ee956c":"code","ed660c2d":"code","f8f51096":"code","efc507b2":"code","f27245de":"code","f2bde4a6":"code","9b96d1bf":"code","7b1ebff9":"code","4a38896e":"code","e0648818":"code","a120137a":"code","7ee6afc0":"code","d2e23265":"code","bc358f56":"code","57250e96":"code","93daa6eb":"code","61ec42c6":"code","46d0d14d":"code","d0faef54":"code","315fa601":"code","188c635d":"code","126ebb2f":"code","864f89f3":"code","ec008db1":"code","e4ae24d6":"code","6ebf7b66":"code","2c6067d4":"code","772400e3":"code","34c88ae9":"code","f713f41d":"code","2d85a189":"code","c34cdb1c":"code","8bbba816":"code","29810378":"code","8cd10a67":"code","59395916":"code","6e2f972c":"markdown","71973cff":"markdown","76dfcc83":"markdown","d7471638":"markdown"},"source":{"43ee956c":"cd ..","ed660c2d":"cd input\/chest-xray-pneumonia\/chest_xray\/","f8f51096":"train_dir = \"train\/\"\nval_dir = \"test\/\"\ntest_dir = \"val\/\"","efc507b2":"import tensorflow as tf\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator","f27245de":"train_datagen = ImageDataGenerator(rescale = 1.0\/255.)\nval_datagen = ImageDataGenerator(rescale = 1.\/255.)","f2bde4a6":"train_generator = train_datagen.flow_from_directory(train_dir, target_size = (150,150), class_mode = \"binary\", batch_size=32)\nval_generator = val_datagen.flow_from_directory(val_dir, target_size=(150,150), class_mode = \"binary\", batch_size = 16)\ntest_generator = val_datagen.flow_from_directory(test_dir, target_size=(150,150))","9b96d1bf":"tf.keras.backend.clear_session()\nmodel = tf.keras.models.Sequential([\n    tf.keras.layers.Conv2D(256, (3,3),input_shape = (150,150,3), activation='relu', kernel_regularizer = tf.keras.regularizers.l2()),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Dropout(0.2),\n    \n    tf.keras.layers.Conv2D(128, (3,3),activation = \"relu\", kernel_regularizer = tf.keras.regularizers.l2()),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Dropout(0.2),\n    \n    tf.keras.layers.Conv2D(64,(3,3), activation = \"relu\"),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Dropout(0.2),\n\n    \n    tf.keras.layers.Conv2D(64,(3,3), activation = \"relu\"),\n    tf.keras.layers.MaxPooling2D(2,2),\n    tf.keras.layers.Dropout(0.2),\n\n    \n    tf.keras.layers.Conv2D(32,(3,3), activation = \"relu\"),\n    tf.keras.layers.MaxPooling2D(2,2),\n    \n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(128, activation = \"relu\"),\n    tf.keras.layers.Dropout(0.2),\n    tf.keras.layers.Dense(1, \"sigmoid\")\n])","7b1ebff9":"optimizer = tf.keras.optimizers.SGD(lr = 1e-4, momentum=0.99)","4a38896e":"model.compile(optimizer = optimizer, loss = \"binary_crossentropy\", metrics = ['acc'])","e0648818":"history = model.fit(train_generator, validation_data=val_generator, epochs = 10, verbose = 1)","a120137a":"history = model.fit(train_generator, validation_data=val_generator, epochs = 5, verbose = 1)","7ee6afc0":"plt.plot(history.history['acc'], label = \"training Accuracy\")\nplt.plot(history.history['val_acc'], label = \"Validation Accuracy\")\nplt.legend()","d2e23265":"plt.plot(history.history['loss'], label = \"Train loss\")\nplt.plot(history.history['val_loss'], label = \"Val loss\")\nplt.legend()","bc358f56":"optimizer1 = tf.keras.optimizers.SGD(learning_rate=1e-8, momentum=0.99)","57250e96":"model.compile(optimizer = optimizer1, loss = \"binary_crossentropy\", metrics = ['acc'])","93daa6eb":"lr_schedule = tf.keras.callbacks.LearningRateScheduler(lambda epochs: 1e-8 * 10**(epochs*0.6))","61ec42c6":"history = model.fit(train_generator, validation_data=val_generator, epochs = 10, callbacks=[lr_schedule], verbose = 1, steps_per_epoch=75)","46d0d14d":"x = 1e-8 * 10**(np.arange(10) * 0.6)  \ny = history.history['loss']\nplt.semilogx(x,y)","d0faef54":"optimizer2 = tf.keras.optimizers.RMSprop(learning_rate=1e-8, momentum=0.99)","315fa601":"model.compile(optimizer = optimizer1, loss = \"binary_crossentropy\", metrics = ['acc'])","188c635d":"history = model.fit(train_generator, validation_data=val_generator, epochs = 10, callbacks=[lr_schedule], verbose = 1, steps_per_epoch=50)","126ebb2f":"x = 1e-8 * 10**(np.arange(10) * 0.6)  \ny = history.history['loss']\nplt.semilogx(x,y)","864f89f3":"optimizer3 = tf.keras.optimizers.Adam(lr = 0.001)","ec008db1":"model.compile(optimizer = optimizer3, loss = \"binary_crossentropy\", metrics = ['acc'])","e4ae24d6":"history = model.fit(train_generator, validation_data=val_generator, epochs = 10, callbacks=[lr_schedule], verbose = 1, steps_per_epoch=50)","6ebf7b66":"x = 1e-8 * 10**(np.arange(10) * 0.6)  \ny = history.history['loss']\nplt.semilogx(x,y)","2c6067d4":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Conv2D , MaxPool2D , Flatten , Dropout","772400e3":"base_model = tf.keras.applications.VGG16(include_top = False, weights = 'imagenet', input_shape = (240,240,3))","34c88ae9":"base_model.trainable = False","f713f41d":"global_average_layer = tf.keras.layers.GlobalAveragePooling2D()","2d85a189":"pred_layer = tf.keras.layers.Dense(1, \"sigmoid\")","c34cdb1c":"model = tf.keras.Sequential([\n  base_model,\n  global_average_layer,\n  pred_layer\n])\n","8bbba816":"model.compile(optimizer = optimizer, loss = \"binary_crossentropy\", metrics = ['acc'])","29810378":"history2 = model.fit(train_generator, validation_data=val_generator, epochs = 10)","8cd10a67":"plt.plot(history2.history['acc'], label = \"training Accuracy\")\nplt.plot(history2.history['val_acc'], label = \"Validation Accuracy\")\nplt.legend()","59395916":"plt.plot(history.history['loss'], label = \"Train loss\")\nplt.plot(history.history['val_loss'], label = \"Val loss\")\nplt.legend()","6e2f972c":"## Adam ","71973cff":"## VGG16 ","76dfcc83":"## RMSprop ","d7471638":"## Tuning optimizer "}}