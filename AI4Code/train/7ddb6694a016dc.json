{"cell_type":{"faf5b592":"code","31d22955":"code","0348978c":"code","9d3b1dc4":"code","09ede973":"code","828c410d":"code","e8ee83f8":"code","50f20717":"code","356978e2":"code","a5f78d74":"code","1d568adb":"code","06bafa26":"code","0b452321":"code","da8d846b":"code","93ecff54":"code","0755b490":"code","5a85d7ac":"code","a834074f":"code","87344a90":"code","e5a6cff2":"code","b670bdcc":"code","813fd92d":"code","81cb329c":"code","a2e37730":"code","cde57a1a":"markdown","8c20018d":"markdown","bcfe9f5b":"markdown","df1f7752":"markdown","f4110ce9":"markdown","9641f277":"markdown","2981e6bf":"markdown","556aea08":"markdown","a448ea7c":"markdown","6d3f412b":"markdown","e51f4085":"markdown"},"source":{"faf5b592":"from datetime import datetime\nimport numpy as np\nfrom IPython.display import Image, display","31d22955":"%%bash\n\nJULIA_VERSION=\"1.4.2\"\nJULIA_PACKAGES=\"DataFrames Feather ShiftedArrays RollingFunctions CSV Pipe Plots\"\n\nJULIA_VER=`cut -d '.' -f -2 <<< \"$JULIA_VERSION\"`\nBASE_URL=\"https:\/\/julialang-s3.julialang.org\/bin\/linux\/x64\"\nURL=\"$BASE_URL\/$JULIA_VER\/julia-$JULIA_VERSION-linux-x86_64.tar.gz\"\nwget -nv $URL -O \/tmp\/julia.tar.gz\ntar -x -f \/tmp\/julia.tar.gz -C \/usr\/local --strip-components 1\nrm \/tmp\/julia.tar.gz\nfor PKG in `echo $JULIA_PACKAGES`; do\n    echo \"Installing Julia package $PKG...\"\n    julia -e 'using Pkg; pkg\"add '$PKG'\"'\ndone","0348978c":"%%time\n!pip install --quiet julia\nimport julia\nfrom julia.api import Julia\njulia.install()\njl = Julia(compiled_modules=False)  # cannot use precompiled packages with pyjulia on linux :-(\n%load_ext julia.magic","9d3b1dc4":"# we set the environment variable for number of threads\n\nimport os\nos.environ['JULIA_NUM_THREADS'] = \"4\"","09ede973":"%%bash\n\njulia -e 'using Pkg; pkg\"add PyPlot\"'\njulia -e 'using Pkg; pkg\"add Gadfly\"'\njulia -e 'using Pkg; pkg\"add Interact\"'\n","828c410d":"%%bash\n\njulia -e 'using Pkg; pkg\"add Cairo\"'\njulia -e 'using Pkg; pkg\"add Fontconfig\"'\njulia -e 'using Pkg; pkg\"add Distributions\"'\n","e8ee83f8":"%%bash\n\njulia -e 'using Pkg; pkg\"add StatsBase\"'\njulia -e 'using Pkg; pkg\"add StatsPlots\"'\njulia -e 'using Pkg; pkg\"add Images\"'\njulia -e 'using Pkg; pkg\"add ImageView\"'","50f20717":"%%writefile \"ilovejulia.jl\"\n\nENV[\"PYTHON\"]=\"\"\nENV[\"GKSwstype\"] = \"nul\"","356978e2":"%%julia\n\nusing CSV, DataFrames\n\ntrain = CSV.read(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")","a5f78d74":"%%julia\n\nsize(train)","1d568adb":"%%julia\n\nnames(train)[begin:10]","06bafa26":"%%julia\n\neltype.(eachcol(train))[begin:10]","0b452321":"%%julia\n\nusing StatsBase\ncount = countmap(eltype.(eachcol(train)))","da8d846b":"%%julia\n\ndescribe(train)","93ecff54":"%%julia\nusing Pkg\nPkg.build(\"PyCall\")\n\n#I refered following Site (In Japanese).\n#https:\/\/dora.bk.tsukuba.ac.jp\/~takeuchi\/?%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%2Fjulia%2F%E3%82%B0%E3%83%A9%E3%83%95%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9#e720f643","0755b490":"%%julia\n\nusing PyPlot","5a85d7ac":"%matplotlib inline","a834074f":"%%julia\nPyPlot.hist(train.MSSubClass, 5)","87344a90":"%%julia\nusing Plots\npyplot()\nPyPlot.plot(Plots.fakedata(10, 10))","e5a6cff2":"%%julia\n\n\ncount = countmap([c for c in train.MSZoning])\n\ncounst_values = [ value for value in values(count)]\ncounst_keys = [ key for key in keys(count)]\n\nPyPlot.pie(counst_values, labels=counst_keys)\n","b670bdcc":"%%julia\n\nPyPlot.scatter(train.MSSubClass, train.LotArea)","813fd92d":"%%julia\n\nusing StatsPlots, Distributions\npyplot()\n\nStatsPlots.marginalhist(train.MSSubClass, train.LotArea)","81cb329c":"%%julia\n\nusing Gadfly\nusing Cairo \nusing Fontconfig\n\np1 = Gadfly.plot(x=train.MSSubClass, y=train.LotArea)\nGadfly.draw(PNG(\"MSSubClass_vs_LotArea.png\", 8inch, 6inch), p1)","a2e37730":"from PIL import Image\nimport matplotlib.pyplot as plt\n\nfig = plt.figure(figsize=(20, 12))\nim = Image.open('..\/working\/MSSubClass_vs_LotArea.png')\nplt.imshow(im)","cde57a1a":"we have to set matplotlib inline after \"using PyPlot\" to plot.","8c20018d":"# Write some graphs with Plots\n\nWe can use matplotlib.pyplot by PyPlot. You can see interface in following Doc:\n\nhttps:\/\/matplotlib.org\/api\/pyplot_api.html#pyplot","bcfe9f5b":"How can we visualize <PyCall.jlwrap Plot{Plots.PyPlotBackend() n=1}>???\ud83d\ude30","df1f7752":"Inspired by the following notebooks, I tried to do eda by julia on kaggle notebook. \n\nhttps:\/\/www.kaggle.com\/marketneutral\/julia-live-on-kaggle\n\nYou can learn how setup for julia on kaggle kernel by the notebook.\n\nEspecially, in my notebook I tried how to get the plot to work for eda.\n\nI found that we can show our plots by using PyPlots, but still have trouble for other tools like Gadfly and StatsPlots.","f4110ce9":"maybe tthere is no data for line graph, I use fake data.","9641f277":"# EDA by Julia on a Kaggle notebook.","2981e6bf":"In order to count type, I used countmap of StatsBase. We can use this as collections.Counter of python.\n\nhttps:\/\/docs.julialang.org\/en\/v1\/base\/collections\/","556aea08":"### Save plots by Gadfly as png.\n\nI could save visualized data as png by Gadfly.\n\nWe can see it by python, but it is a little inconvenient if you want to you try to search for data as you want on kaggle notebook.\n\nIt is probabry okay if you just share your result of eda on your local environment.","a448ea7c":"# Try to do visualization with StatsPlots and Gadfly\n\nI fighted with them but I can't visualize data by them\ud83d\ude05\n\nPlease tell me the how to do if you know!","6d3f412b":"# Load csv and check data","e51f4085":"Just in case, I'll recite the magic.\n\n"}}