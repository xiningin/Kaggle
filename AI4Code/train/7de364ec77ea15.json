{"cell_type":{"41fce418":"code","3ef3c7a7":"code","9c7ec081":"code","84f305a6":"code","8aecd5d3":"code","b0c201bd":"code","0aef4e0c":"code","fb233d03":"code","5d84ed8a":"code","74a04e7e":"code","77294b6e":"code","bf275c04":"code","00f3122c":"code","b928f573":"code","fbba4ba5":"code","81252024":"code","d2ff63c4":"code","d4d39368":"markdown","aad33101":"markdown","fcaaed9e":"markdown","cf47b834":"markdown","47bbc8d9":"markdown"},"source":{"41fce418":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3ef3c7a7":"import pandas as pd \nimport numpy as np\nimport sklearn \nimport matplotlib.pyplot as mtp","9c7ec081":"data_set=pd.read_csv('..\/input\/beer-consumption-sao-paulo\/Consumo_cerveja.csv')","84f305a6":"df=pd.DataFrame(data_set)","8aecd5d3":"df.head()","b0c201bd":"df=df.rename(columns={'Data': 'Date','Temperatura Media (C)': 'Medium Temp','Temperatura Minima (C)':'Min Temp', 'Temperatura Maxima (C)':'Max Temp','Precipitacao (mm)': 'Precipitation(mm)','Final de Semana':'End of week','Consumo de cerveja (litros)':'Beer consumption (liters)'})\n\ndf.head()","0aef4e0c":"df.dropna(inplace=True)","fb233d03":"df.isnull().sum()","5d84ed8a":"df['Medium Temp'] = df['Medium Temp'].str.replace(',', '.').astype('float')\ndf['Min Temp'] = df['Min Temp'].str.replace(',', '.').astype('float')\ndf['Max Temp'] = df['Max Temp'].str.replace(',', '.').astype('float')\ndf['Precipitation(mm)'] = df['Precipitation(mm)'].str.replace(',', '.').astype('float')","74a04e7e":"df.head()","77294b6e":"df['Date'] = pd.to_datetime(df['Date'])","bf275c04":"x=df.iloc[:,-6:-1]\ny=df.iloc[:,6]\n","00f3122c":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test= train_test_split(x, y, test_size= 0.3, random_state=0)  ","b928f573":"from sklearn.linear_model import LinearRegression\nregressor=LinearRegression()\nregressor.fit(x_train,y_train)","fbba4ba5":"y_pred= regressor.predict(x_test) \ny_pred","81252024":"print('Train Score: ', regressor.score(x_train, y_train))  \nprint('Test Score: ', regressor.score(x_test, y_test))","d2ff63c4":"sns.scatterplot(y_test, y_pred)\nmtp.title('Test data vs Linear Regression Predictions')","d4d39368":"Predicting","aad33101":"Extracting and splitting the datset","fcaaed9e":"Data Visualization","cf47b834":"Cleaning the Data","47bbc8d9":"Fitting the dataset into Linear Regression Model"}}