{"cell_type":{"4b481c86":"code","dbfc165c":"code","b7dd25b6":"code","d4f1f1d1":"code","b1909cf7":"code","4b30bcc8":"code","4d287d17":"code","eb0fbc42":"code","a281a010":"code","9231f638":"code","0d5ecc06":"code","e403118a":"code","4e10b7f8":"code","0ae04f1e":"code","de0a8e34":"code","b6277485":"code","4be99cc9":"code","6a61ecbe":"code","2539798e":"code","aa730ce1":"code","fc0187db":"markdown","de38f7c1":"markdown","6e797b13":"markdown","3cb862f4":"markdown","bc0adcab":"markdown","93d73888":"markdown","be53f96f":"markdown","19a3bb97":"markdown","39517064":"markdown","e36ea85d":"markdown","dba4029a":"markdown","d50f9ab4":"markdown","33ea9840":"markdown"},"source":{"4b481c86":"import pandas as pd\nimport numpy as np\nimport pandas_profiling as pdp\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import precision_score\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","dbfc165c":"train = pd.read_csv('..\/input\/test-file\/tested.csv')","b7dd25b6":"train.head(3)","d4f1f1d1":"pdp.ProfileReport(train)","b1909cf7":"train_add = train.copy()\ntrain_add['Pclass_Sex'] =  train_add['Sex'] + [str(s) for s in train_add.Pclass]\n\nplt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass_Sex',y='Age',data=train_add,palette='winter')","4b30bcc8":"train_add.groupby('Pclass_Sex').agg({'Age':np.mean})","4d287d17":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    Sex = cols[2]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1 and Sex == 'male':\n            return 40.5\n\n        elif Pclass == 1 and Sex == 'female':\n            return 41.3\n\n        elif Pclass == 2 and Sex == 'male':\n            return 30.9\n        \n        elif Pclass == 2 and Sex == 'female':\n            return 24.4\n        \n        elif Pclass == 3 and Sex == 'male':\n            return 24.5\n\n        else:\n            return 23.1\n\n    else:\n        return Age","eb0fbc42":"train['Age'] = train[['Age','Pclass', 'Sex']].apply(impute_age,axis=1)","a281a010":"plt.figure(figsize=(15, 7))\nsns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='coolwarm')","9231f638":"train.drop('Cabin',axis=1,inplace=True);","0d5ecc06":"train.dropna(inplace=True);\ntrain.head(3)","e403118a":"del train_add","4e10b7f8":"train.info()","0ae04f1e":"sex = pd.get_dummies(train['Sex'],drop_first=True)\nembark = pd.get_dummies(train['Embarked'],drop_first=True)","de0a8e34":"train = pd.concat([train,sex,embark],axis=1)\ntrain.drop(['Sex','Embarked','Name','Ticket','PassengerId'],axis=1,inplace=True)","b6277485":"train.head(3)","4be99cc9":"X = train[['Age', 'male', 'Pclass', 'Fare', 'Q', 'S']];\nY = train[['Survived']]","6a61ecbe":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 0)","2539798e":"lr = LogisticRegression() \nlr.fit(X_train, Y_train) ","aa730ce1":"Y_pred = lr.predict(X_test)\nprint('precision = ', precision_score(y_true = Y_test, y_pred = Y_pred))","fc0187db":"Roughly 20 percent of the Age data is missing. The proportion of Age missing is likely small enough for reasonable replacement with some form of imputation. Looking at the Cabin column, it looks like we are just missing too much of that data to do something useful with at a basic level. We'll probably drop this later, or change it to another feature like \"Cabin Known: 1 or 0\"\n\nLet's continue on by visualizing some more of the data! Check out the video for full explanations over these plots, this code is just to serve as reference.","de38f7c1":"Now apply that function!","6e797b13":"## Train our model ","3cb862f4":"\n# Logistic Regression ( Titanic Dataset )\n\nWe will be working with the [Titanic Data Set from Kaggle](https:\/\/www.kaggle.com\/c\/titanic). This is a very famous data set and very often is a student's first step in machine learning! \n\nWe'll be trying to predict a classification- survival or deceased.\nLet's begin our understanding of implementing Logistic Regression in Python for classification.\n\nWe'll use a \"semi-cleaned\" version of the titanic data set, if you use the data set hosted directly on Kaggle, you may need to do some additional cleaning not shown in this lecture notebook.\n\n## Import Libraries\nLet's import some libraries to get started!","bc0adcab":"Great! Let's go ahead and drop the Cabin column and the row in Embarked that is NaN.","93d73888":"Great! Our data is ready for our model!\n\n# Building a Logistic Regression model\n\nLet's start by splitting our data into a training set and test set (there is another test.csv file that you can play around with in case you want to use all this data for training).\n\n## Train Test Split","be53f96f":"##### thanks for your support :)","19a3bb97":"___\n## Data Cleaning\nWe want to fill in missing age data instead of just dropping the missing age data rows. One way to do this is by filling in the mean age of all the passengers (imputation).\nHowever we can be smarter about this and check the average age by passenger class. For example:\n","39517064":"## The Data\n\nLet's start by reading in the titanic_train.csv file into a pandas dataframe.","e36ea85d":"# Exploratory Data Analysis\n\nLet's begin some exploratory data analysis!\n\n## Inspect Data with Pandas-Profiling\n\nWe can use ProfileReport to inspect all vars of data.","dba4029a":"## Converting Categorical Features \n\nWe'll need to convert categorical features to dummy variables using pandas! Otherwise our machine learning algorithm won't be able to directly take in those features as inputs.","d50f9ab4":"We can see the wealthier passengers in the higher classes tend to be older, which makes sense. We'll use these average age values to impute based on Pclass for Age.","33ea9840":"Now let's check that heat map again!"}}