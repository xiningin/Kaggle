{"cell_type":{"f0d185a3":"code","ac66789a":"code","371b2078":"code","111108a6":"code","50e31383":"code","57728ea2":"code","e4fb8cf7":"code","bdc32097":"code","3196770a":"code","faa1207b":"code","d1fa2f19":"code","f6a7fbca":"code","a07da331":"code","00ed4e0a":"code","2732b214":"code","844e351e":"code","15867538":"code","b221eac2":"code","ce1e2eb7":"code","3b34d8a5":"code","c2fc69f4":"code","603eeb66":"code","61a5c0b1":"code","21c34feb":"code","e4e7e048":"code","3cd38ac7":"code","12dad673":"code","d2b7beb4":"markdown","ed43863f":"markdown","a9d9cc6e":"markdown","1ae554ed":"markdown","d4bcbf0e":"markdown","7e758dbb":"markdown","962fc4dd":"markdown","e99a1dfe":"markdown","100ca3ac":"markdown","d760af8c":"markdown","de4d1eff":"markdown","374941a0":"markdown","dd692f08":"markdown","45982577":"markdown","2ce96a9a":"markdown","f00c5378":"markdown","6669e167":"markdown","185508ce":"markdown","62db0531":"markdown","27379e1f":"markdown","50ca5ad4":"markdown","a584320c":"markdown","d7096be7":"markdown","ea25b2a1":"markdown","ff7e7b2d":"markdown","3ea85b64":"markdown","435e7a77":"markdown","221d91ed":"markdown","bd979ab5":"markdown","f25def8b":"markdown","cb584a22":"markdown","424fb73f":"markdown","0d8161f0":"markdown","b97b765b":"markdown","0fd141d0":"markdown","b692b570":"markdown","43fed0bf":"markdown","856d9fc4":"markdown","22ac864f":"markdown","e0163899":"markdown","eb2b44f7":"markdown","17caa571":"markdown","195cab9f":"markdown","241e4388":"markdown","b3c0f922":"markdown","e7973123":"markdown","1dcc65d7":"markdown","d9108007":"markdown","35f4dfe6":"markdown","a180a844":"markdown","4e7470b4":"markdown"},"source":{"f0d185a3":"# import library\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport warnings\nwarnings.filterwarnings(action='ignore')\n\nimport plotly\nimport plotly.offline as py\nimport plotly.graph_objs as go\npy.init_notebook_mode(connected=True)\nimport plotly.express as px\nimport plotly.io as pio\npio.templates.default = \"plotly_white\"\n\npd.set_option('max_colwidth',500)","ac66789a":"# Load data\ndata = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\ndf = data.iloc[1:,]","371b2078":"# rename columns programming languages Time em seconds\ndf.rename({'Time from Start to Finish (seconds)':'Time',\n               'Q7_Part_1':'PYTHON', \n               'Q7_Part_2':'R',\n               'Q7_Part_3':'SQL',\n               'Q7_Part_4':'C',\n               'Q7_Part_5':'C++',\n               'Q7_Part_6':'JAVA',\n               'Q7_Part_7':'JAVASCRIPT',\n               'Q7_Part_8':'JULIA',\n               'Q7_Part_9':'SWIFT',\n               'Q7_Part_10':'BASH',\n               'Q7_Part_11':'MATLAB',\n               'Q7_Part_12':'NONE',\n               'Q7_OTHER'  :'OTHER'}, \n              axis = 1, inplace = True) ","111108a6":"print(df.shape)","50e31383":"df['Time'] = df.iloc[:,0].astype(int)\ndf['Time'].describe()","57728ea2":"(df[df['Time'] < 180].shape[0] \/ df.shape[0])*100","e4fb8cf7":"percents_country = np.round((df['Q3'].value_counts()\/ df['Q3'].count()*100), decimals=2).sort_index()              \ndataQ3 = df['Q3'].value_counts().sort_index()\n\nfig = px.treemap(df['Q3'].sort_values().reset_index(drop=True),\n                 path= ['Q3'],\n                 height=600,\n                 #labels = percents_country,\n                 title='Country',\n                 color_discrete_sequence = px.colors.qualitative.Dark2)\n#['label', 'text', 'value', 'current path', 'percent root', 'percent entry', 'percent parent']\n\nfig.data[0].textinfo = 'label+text+value'\n\nfig.update_traces(text = percents_country, opacity = 0.80, textfont_size=14,\n                 texttemplate=\"%{label}<br>%{value}<br>%{text:.2f}%\"\n                 )\n\nfig.show()","bdc32097":"def plotBar(x, y, title, xaxis, yaxis, orientation = 'v',text=True):\n    \n    #41e1b7 #f68ca5\n    if text:\n        data = go.Bar(\n                x=x, y=y,\n                text=y,\n                textposition='auto',\n                orientation = orientation, \n                opacity = 0.70\n            )\n    else:\n        data = go.Bar(\n                x=x, y=y,\n                textposition='auto',\n                orientation = orientation, \n                opacity = 0.60, \n                marker_color = '#41e1b7',\n            )\n    \n\n    layout = go.Layout(\n        title       = title,\n        yaxis       =  {'title': yaxis},\n        xaxis       =  {'title': xaxis},\n\n    \n        hoverlabel=dict(\n        bgcolor=\"#f5f5f5\",\n        font_size=14,\n    ),\n)  \n    fig = go.Figure(data = data, layout = layout, )\n    \n    \n    fig.show()","3196770a":"dataQ1 = df['Q1'].sort_index().value_counts()\nplotBar(x=dataQ1.index, y= dataQ1,title=\"Kagglers Age\",xaxis='Age',yaxis='Total Answers', orientation='v')","faa1207b":"# Plot total by Gender Male and Female\n\n# Filter Gender\ndfFilterGender = df.query('Q2 in [\"Man\",\"Woman\"]').reset_index(drop=True)\n\npercentual = np.round((dfFilterGender['Q2'].value_counts()[0] \/ dfFilterGender['Q2'].count()*100,\n                       dfFilterGender['Q2'].value_counts()[1] \/ dfFilterGender['Q2'].count()*100),\n                       decimals=2)\n\ndataQ2 = dfFilterGender['Q2'].value_counts().sort_index()\n\n\nfig = px.bar(x=dataQ2.index, y= dataQ2,title=\"Total by Gender Male x Female\",\n             orientation='v', text=percentual,\n             labels={'x':'Gender','y':'Total Answers'})\n\nfig.update_traces(texttemplate='%{text:.2f}%', marker_color = '#f68ca5', opacity = 0.65,\n        hoverlabel=dict(\n        bgcolor=\"#f5f5f5\",\n        font_size=14,\n    ),\n)\n\n                  \nfig.show()","d1fa2f19":"dataQ1 = df['Q1'].value_counts().sort_index()\nfilterGender = dfFilterGender.groupby('Q2')['Q1'].value_counts().unstack().sort_index()\nman = filterGender.loc['Man']\nwoman = filterGender.loc['Woman']\npman = np.round(man.values\/man.sum()*100,decimals=2)\npwoman = np.round(woman.values\/woman.sum()*100,decimals=2)\n\nfig = go.Figure(data=[\n    go.Bar(x=dataQ1.index, y=woman, name='Woman',text=pwoman, textposition=\"auto\"),\n    go.Bar(x=dataQ1.index, y = man, name='Man',text=pman, textposition=\"auto\")\n])\n\nfig.update_traces(marker_line_color='rgb(8,48,107)',\n                  texttemplate=\"%{value}<br>%{text:.2f}%\", \n                  marker_line_width=1, opacity=0.80)\n\nfig.update_layout(barmode='relative',\n                 title_text='Distribuition Gender by Age',\n                 hoverlabel=dict(\n                 bgcolor=\"#f5f5f5\",\n                 font_size=14,\n    ),\n)\n\nfig.show()","f6a7fbca":"dataQ4 = df['Q4'].sort_index().value_counts().sort_values(ascending = True)\npercentQ4 = round(dataQ4 \/ dataQ4.sum()*100, 2)\n\n\nfig = px.bar(x= percentQ4, y=dataQ4.index,title=\"Highest level of formal Education\",\n             orientation='h', text=percentQ4,\n             labels={'x':'Total Answers','y':'Degree'})\n\nfig.update_traces(texttemplate='%{text:.2f}%', marker_color = '#41e1b7', opacity = 0.60,\n        hoverlabel=dict(\n        bgcolor=\"#f5f5f5\",\n        font_size=14,\n    ),\n)\n\n            \nfig.show()","a07da331":"dataQ5 = df['Q5'].sort_index().value_counts()\nplotBar(x=dataQ5.index, y= dataQ5,title=\"Title most similar to current role\",xaxis='Role',yaxis='Total Answers', orientation='v')","00ed4e0a":"dfglobal = df.query('Q5 ==\"Data Scientist\" & Q3 !=\"United States of America\"')\ndataGlobalQ15 = dfglobal['Q6'].sort_index().value_counts(ascending=True)\npercentGlobalQ15 = round(dataGlobalQ15 \/ dataGlobalQ15.sum()*100, 2)\n\n\ndfUSA = df.query('Q5 ==\"Data Scientist\" & Q3 ==\"United States of America\"')\ndfQ15USA = dfUSA['Q6'].sort_index().value_counts(ascending=True)\npercentUSA = round(dfQ15USA \/ dfQ15USA.sum()*100, 2)\n\nfig = go.Figure(data=[\n    \n    go.Bar(name='USA',    y=dfQ15USA.index,      x=percentUSA,       text=percentUSA,       orientation='h', marker_color = '#8a2be2'),\n    go.Bar(name='Global', y=dataGlobalQ15.index,       x=percentGlobalQ15, text=percentGlobalQ15, orientation='h', marker_color = '#5b90b2')\n])\n\n\n\n\nfig.update_layout(barmode='group', title=\"Background of Data Dcientists - Global x USA\",\n                  height=800,\n                  xaxis=dict(\n                  title='Total Answers'))\n\n\nfig.update_traces(texttemplate='%{value:.2f}%', textposition='auto', opacity = 0.75,\n        hoverlabel=dict(\n        bgcolor=\"#f5f5f5\",\n        font_size=14,\n    ),\n)\n\nfig.show()","2732b214":"dataQ15 = df['Q15'].sort_index().value_counts()\nplotBar(x=dataQ15.index, y= dataQ15,title=\"Experience year whith Machine Learning\",xaxis='Methods',yaxis='Total Answers', orientation='v')","844e351e":"# Visualiza\u00e7\u00e3o Q5 com as Linguagens\ndf_melt = df.melt(id_vars='Q5', value_vars=df.iloc[:,7:18].T.index,var_name='Languages',value_name='Count')\ndata_melt = df_melt[~df_melt[\"Q5\"].isin(['Student','Currently not employed','Other'])]\ndata_meltTotal = data_melt.groupby(['Q5','Languages']).count().reset_index()\ndata_size = df.groupby([\"Q5\"]).size()\ndata_meltTotal[\"Total\"] = data_meltTotal[\"Q5\"].map(data_size)\ndata_meltTotal[\"Percent\"] = round(data_meltTotal[\"Count\"] \/ data_meltTotal[\"Total\"]*100,2)\n\n# Treemp Q5 x Languages\n\nfig = px.treemap(data_meltTotal,\n                 path= ['Q5','Languages'],\n                 height=700,\n                 values = 'Percent',\n                 #labels = percents_country,\n                 title='Country',\n                 color_discrete_sequence = px.colors.qualitative.Dark2)\n\nfig.update_traces(opacity = 0.80, textfont_size=12,\n                 texttemplate=\"%{label}<br><br>%{value:.2f}%\"\n                 )\n\nfig.show()","15867538":"dataQ8 = df['Q8'].sort_index().value_counts().sort_values(ascending = True)\npercentQ8 = round(dataQ8 \/ dataQ8.sum()*100, 2)\n\n\nfig = px.bar(x= percentQ8, y=dataQ8.index,title=\"Recommend Language for Aspiring\",\n             orientation='h', text=percentQ8,\n             labels={'x':'Total Answers','y':'Language'})\n\nfig.update_traces(texttemplate='%{text:.2f}%', marker_color = '#87ceeb', opacity = 0.60,\n        hoverlabel=dict(\n        bgcolor=\"#f5f5f5\",\n        font_size=14,\n    ),\n)\n\n            \nfig.show()","b221eac2":"df_IDE = data.iloc[1:,21:33]\n\nIDE_col = ['Jupyter','RStudio','Visual Studio','Visual Studio Code', 'PyCharm', 'Spyder','Notepad++','Sublime Text','Vim \/ Emacs',\n           'MATLAB','None','Other']\n\ndf_IDE.columns = IDE_col\ndf_IDE = df_IDE.count().sort_values(ascending = True)\nPercent_IDE = round(100 * df_IDE \/ df_IDE.sum(), 2)\n\nfig = px.bar(x= df_IDE, y=df_IDE.index,title=\"Most Used Environments (IDE's)\",\n             orientation='h',text= Percent_IDE,\n             labels={'x':'Total Answers','y':'IDEs'})\n\nfig.update_traces(texttemplate='%{text:.2f}%', marker_color = '#87ceeb', opacity = 0.60,\n        hoverlabel=dict(\n        bgcolor=\"#f5f5f5\",\n        font_size=14,\n    ),\n)\n\n            \nfig.show()","ce1e2eb7":"df_vis = data.iloc[1:,53:65]\n\nvis_col = ['Matplotlib','Seaborn','Plotly','Ggplot', 'Shiny', 'D3 js','Altair','Bokeh','Geoplotlib','Folium',\n           'None','Other']\n\ndf_vis.columns = vis_col\ndf_vis = df_vis.count().sort_values(ascending = True)\nPercentvis = round(100 * df_vis \/ df_vis.sum(), 2)\n\nfig = px.bar(x= df_vis, y=df_vis.index,title=\"Most Used Visualization Libraries\",\n             orientation='h',text= Percentvis,\n             labels={'x':'Total Answers','y':'Libraries'})\n\nfig.update_traces(texttemplate='%{text:.2f}%', marker_color = '#0047ab', opacity = 0.60,\n        hoverlabel=dict(\n        bgcolor=\"#f5f5f5\",\n        font_size=14,\n    ),\n)\n\n            \nfig.show()","3b34d8a5":"df_frame = data.iloc[1:,66:82]\n\nframe_col = ['Scikit-learn','TensorFlow','Keras','PyTorch', 'Fast.ai', 'MXNet','Xgboost','LightGBM','CatBoost','Prophet','H2O 3','Caret',\n           'Tidymodels','JAX','None','Other']\n\ndf_frame.columns = frame_col\ndf_frame = df_frame.count().sort_values(ascending = True)\nPercent_frame = round(100 * df_frame \/ df_frame.sum(), 2)\n\nfig = px.bar(y= df_frame, x=df_frame.index,title=\"Most Used Machine Learning Frameworks\",\n             orientation='v',text= Percent_frame,\n             labels={'y':'Total Answers','x':'Frameworks '})\n\nfig.update_traces(texttemplate='%{text:.2f}%', marker_color = '#87eba4', opacity = 0.60,\n        hoverlabel=dict(\n        bgcolor=\"#f5f5f5\",\n        font_size=14,\n    ),\n)\n\n            \nfig.show()","c2fc69f4":"dataQ17 = data.iloc[1:,82:94]\n\nML_col = ['Linear or Logistic Regression','Random Forests','Gradient Boosting','Bayesian Approaches', 'Evolutionary Approaches', \n          'Dense Neural Networks','CNN','Generative Adversarial Networks','RNN','Transformer Networks','None','Other']\n\ndataQ17.columns = ML_col\ndataQ17 = dataQ17.count().sort_values(ascending = True)\nPercent_ML = round(100 * dataQ17 \/ dataQ17.sum(), 2)\n\nfig = px.bar(y= dataQ17, x=dataQ17.index,title=\"Most Used Machine Learning Algorithms\",\n             orientation='v',text= Percent_ML, \n             labels={'y':'Total Answers','x':'Algorithms '})\n\nfig.update_traces(texttemplate='%{text:.2f}%', marker_color = '#6a5acd', opacity = 0.60,\n        hoverlabel=dict(\n        bgcolor=\"#f5f5f5\",\n        font_size=14,\n    ),\n)\n\n            \nfig.show()","603eeb66":"dataQ29 = data.iloc[1:,155:173]\n\nDB_col = ['MySQL','PostgresSQL','SQLite','Oracle Database', 'MongoDB', 'Snowflake','IBM Db2','Microsoft SQL Server','Microsoft Access',\n          'Microsoft Azure Data Lake Storage','Amazon Redshift','Amazon Athena','Amazon DynamoDB','Google Cloud BigQuery','Google Cloud SQL',\n          'Google Cloud Firestore','None','Other']\n\ndataQ29.columns = DB_col\ndataQ29 = dataQ29.count().sort_values(ascending = True)\nPercent_DB = round(100 * dataQ29 \/ dataQ29.sum(), 2)\n\nfig = px.bar(x= dataQ29, y=dataQ29.index,title=\"Most Used relational databases, data warehouses, data lakes,\",\n             orientation='h',text= Percent_DB,\n             height = 700,\n             labels={'y':'Total Answers','x':'DB '})\n\nfig.update_traces(texttemplate='%{text:.2f}%', marker_color = '#87eba4', opacity = 0.60,\n        hoverlabel=dict(\n        bgcolor=\"#f5f5f5\",\n        font_size=14,\n    ),\n)\n\n            \nfig.show()","61a5c0b1":"dataQ32 = data['Q32'].dropna()\ndataQ32 = dataQ32.iloc[1:,]\n\n#DB_col = ['MySQL','PostgresSQL','SQLite','Oracle Database', 'MongoDB', 'Snowflake','IBM Db2','Microsoft SQL Server','Microsoft Access',\n       #   'Microsoft Azure Data Lake Storage','Amazon Redshift','Amazon Athena','Amazon DynamoDB','Google Cloud BigQuery','Google Cloud SQL',\n       #   'Google Cloud Firestore','None','Other']\n\n#dataQ29.columns = DB_col\ndataQ32 = dataQ32.value_counts().sort_values(ascending = True)\n\nPercent_BI = round(100 * dataQ32 \/ dataQ32.sum(), 2)\n\nfig = px.bar(x= dataQ32, y=dataQ32.index,title=\"Most Used Business Intelligence Tools\",\n             orientation='h',text= Percent_BI,\n             height = 700,\n             labels={'y':'Total Answers','x':'BI '})\n\nfig.update_traces(texttemplate='%{text:.2f}%', marker_color = '#7ac1dc', opacity = 0.60,\n        hoverlabel=dict(\n        bgcolor=\"#f5f5f5\",\n        font_size=14,\n    ),\n)\n\n            \nfig.show()","21c34feb":"dataQ36 = data.iloc[1:,221:231]\n\nQ36_col = ['Plotly Dash','Streamlit','NBViewer','GitHub','Personal blog','Kaggle','Colab','Shiny',' I do not share my work publicly','Other']\n\ndataQ36.columns = Q36_col\ndataQ36 = dataQ36.count().sort_values(ascending = True)\nPercent_Q36 = round(100 * dataQ36 \/ dataQ36.sum(), 2)\n\nfig = px.bar(x= dataQ36, y=dataQ36.index,title=\"Publicly share or deploy Aplications\",\n             orientation='h',text= Percent_Q36,\n             height = 700,\n             labels={'y':'Total Answers','x':'Aplications '})\n\nfig.update_traces(texttemplate='%{text:.2f}%', marker_color = '#87eba4', opacity = 0.60,\n        hoverlabel=dict(\n        bgcolor=\"#f5f5f5\",\n        font_size=14,\n    ),\n)\n\n            \nfig.show()","e4e7e048":"dataQ37 = data.iloc[1:,231:243]\n\nQ37_col = ['Coursera','edX','Kaggle Learn Courses','DataCamp','Fast.ai','Udacity','Udemy',' LinkedIn Learning',\n           ' AWS\/Azure\/GCP',' university degree','None','Other']\n\ndataQ37.columns = Q37_col\ndataQ37 = dataQ37.count().sort_values(ascending = False)\nPercent_Q37 = round(100 * dataQ37 \/ dataQ37.sum(), 2)\n\nfig = px.funnel(x= dataQ37, y=dataQ37.index,title=\"Data Science Courses\",\n             text= Percent_Q37,\n             height = 700,\n             labels={'y':'Total Answers','x':'Courses '})\n\nfig.update_traces(texttemplate='%{text:.2f}%', opacity = 0.70,\n        hoverlabel=dict(\n        bgcolor=\"#f5f5f5\",\n        font_size=14,\n    ),\n)\n\n            \nfig.show()","3cd38ac7":"dfQ24 = df[df[\"Q2\"].isin([\"Man\",\"Woman\"])].loc[:, [\"Q2\", \"Q3\", \"Q5\", \"Q24\"]].dropna()\n\ndfQ24[\"Q24\"] = (dfQ24[\"Q24\"].apply(lambda x: x.replace(\",\", \"\")).apply(lambda x: x.replace(\"$\", \"\")))\n\ndfQ24[\"Q24\"] = dfQ24[\"Q24\"].apply(lambda x: 500000 if \">\" in x else 0.5 * (int(x.split(\"-\")[0]) + int(x.split(\"-\")[1])))\n\ndf_salary = dfQ24.groupby(by=[\"Q2\",\"Q5\"])[\"Q24\"].agg(['mean','size']).reset_index()\n\nfig = go.Figure()\n\nfig.add_trace(\n    go.Scatter(\n        x=df_salary.loc[df_salary['Q2']=='Man','mean'],\n        y=df_salary.loc[df_salary['Q2']=='Man','Q5'],\n        name=\"Man\",\n        mode=\"markers\",\n        marker=dict(\n            sizemode=\"area\",\n            size=df_salary.loc[df_salary['Q2']=='Man','size'],\n            color=\"#87ceeb\",\n        ),\n    )\n)\nfig.add_trace(\n    go.Scatter(\n        x=df_salary.loc[df_salary['Q2']=='Woman','mean'],\n        y=df_salary.loc[df_salary['Q2']=='Woman','Q5'],\n        name=\"Woman\",\n        mode=\"markers\",\n        marker=dict(\n            sizemode=\"area\",\n            size=df_salary.loc[df_salary['Q2']=='Woman','size'],\n            color=\"#f68ca5\",\n        ),\n    )\n)\n\n\nfig.update_traces(hovertemplate=\"%{y}<br>Salary:%{x:$,.0f}<br>Size:%{marker.size}\")\n\nfig.update_layout(title=\"Average Salary by Gender and Current Role\", height = 700,\n        xaxis=dict(\n        showgrid=True,\n        showline=True,\n        tickfont=dict(size=14),\n        showticklabels=True,\n        title=\" Average Annual Salary in USD\"),  \n        yaxis=dict(\n        tickfont=dict(size=14) \n                )\n        )\n\n\nfig.show()","12dad673":"dfQ24 = df[df[\"Q2\"].isin([\"Man\",\"Woman\"])].loc[:, [\"Q2\", \"Q3\", \"Q5\", \"Q24\"]].dropna()\n\ndfQ24[\"Q24\"] = (dfQ24[\"Q24\"].apply(lambda x: x.replace(\",\", \"\")).apply(lambda x: x.replace(\"$\", \"\")))\n\ndfQ24[\"Q24\"] = dfQ24[\"Q24\"].apply(lambda x: 500000 if \">\" in x else 0.5 * (int(x.split(\"-\")[0]) + int(x.split(\"-\")[1])))\n\ndf_salary_country = dfQ24.groupby(by=[\"Q2\",\"Q3\"])[\"Q24\"].agg(['mean','size']).reset_index()\ndf_salary_country.loc[df_salary_country['Q3']=='United Kingdom of Great Britain and Northern Ireland','Q3'] = 'UK'\n\n# ten largest countries that answered the Survey \ndf_salary_countryt_ten = df_salary_country.query('Q3 in [\"India\",\"United States of America\",\"Brazil\",\"Japan\", \"Russia\",\\\n                                                 \"UK\",\"Nigeria\",\"China\",\"Germany\",\"Turkey\"]')\n\n\nfig = go.Figure()\n\nfig.add_trace(\n    go.Scatter(\n        x=df_salary_countryt_ten.loc[df_salary_countryt_ten['Q2']=='Man','mean'],\n        y=df_salary_countryt_ten.loc[df_salary_countryt_ten['Q2']=='Man','Q3'],\n        name=\"Man\",\n        mode=\"markers\",\n        marker=dict(\n            sizemode=\"area\",\n            size=df_salary_countryt_ten.loc[df_salary_countryt_ten['Q2']=='Man','size'],\n            color=\"#87ceeb\",\n        ),\n    )\n)\nfig.add_trace(\n    go.Scatter(\n        x=df_salary_countryt_ten.loc[df_salary_countryt_ten['Q2']=='Woman','mean'],\n        y=df_salary_countryt_ten.loc[df_salary_countryt_ten['Q2']=='Woman','Q3'],\n        name=\"Woman\",\n        mode=\"markers\",\n        marker=dict(\n            sizemode=\"area\",\n            size=df_salary_countryt_ten.loc[df_salary_countryt_ten['Q2']=='Woman','size'],\n            color=\"#f68ca5\",\n        ),\n    )\n)\n\n\nfig.update_traces(hovertemplate=\"%{y}<br>Salary:%{x:$,.0f}<br>Size:%{marker.size}\")\n\nfig.update_layout(title=\"Top 10 Largest Countries has far more representation in Kaggle Community.<br>Average Salary by Country\/Gender\",\n        height = 700,\n        xaxis=dict(\n        showgrid=True,\n        showline=True,\n        tickfont=dict(size=14),\n        showticklabels=True,\n        title=\" Mean Annual Salary in USD\"),  \n        yaxis=dict(\n        tickfont=dict(size=14) \n                )\n        )\n\n\nfig.show()","d2b7beb4":"<h3><mark>Bussines Intelligence<\/mark> tools help the visualize data but only <mark>three<\/mark> in <mark>ten<\/mark> use it.\nHere we can see that most often is <mark>Tableau<\/mark>. Together <mark>Tableau<\/mark> and <mark>Bussines Intelligence<\/mark> represent almost <mark>70%<\/mark> of respondents' preference.<\/h3>","ed43863f":"<h2 style='background:#a4b9d2; border:50; color:black'>Q37 - On which platforms have you begun or completed data science courses?<h2>\n","a9d9cc6e":"<h3> Hello Everyone! I will show you a little interactive visualization using Library <mark>Plotly<\/mark> and <mark>PYTHON<\/mark>.<\/h3>\n\n<h3>The Survey was based on responses form <mark>20,036<\/mark> Kaggle members. The survey questions were multiple choice with the ability for respondents to select all options that appliied to them.<h3>\n\n[![KAGGLE](https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/23724\/logos\/header.png?t=2020-10-31-23-22-58)](http:\/\/)","1ae554ed":"<h2 style='background:#4974a5; border:50; color:white'>Let's go to the questions &#128512;<h2>\n","d4bcbf0e":"<h3>Here we have a good question and a somewhat surprising result. We have <mark>72%<\/mark> of kagglers using machine learning for <mark>less than 2 years<\/mark>.<\/h3>","7e758dbb":"<h3>Python dominate the Machine Learning frameworks. <mark>Scikit-learn<\/mark> is the top framework for respondents. <mark>TensorFlow<\/mark> and <mark>Keras<\/mark> notably used in combination for deep Learning toghther with <mark>Pythoch<\/mark>. Added to the survey this year <mark>R-based Tidymodels<\/mark>, reaching <mark>1,24%<\/mark>.<\/h3>","962fc4dd":"<h2 style='background:#a4b9d2; border:50; color:black'>Distribuition Gender by Age<h2>\n","e99a1dfe":"<h2 style='background:#a4b9d2; border:50; color:black'>Q32 - Which of the following business intelligence tools do you use most often?<h2>\n","100ca3ac":"<h3>The most libraries used for data visualization is <mark>Matplotlib<\/mark> and <mark>Seaborn<\/mark>. We can see that Plotly and Ggplot \nare with the same percentage, Plotly has grown a lot lately.<\/h3>","d760af8c":"<h3>The majority of the Kagglers are than <mark>75%<\/mark> the highest level of formal education or want attain in the next 2 years bening Master's degree and Bachelor's degree.<\/h3>","de4d1eff":"<h3>We can see that just over <mark>6%<\/mark> of Data Scientists have been programming for over 20 years and in the last year they have taken over <mark>10%<\/mark> programming.\nCompared to the US with the desktop, the US Data Scientist has significantly more programming experience <mark>over 5 years<\/mark>.<\/h3>","374941a0":"<h3>We can see that a heavy gender imbalace more than <mark>80%<\/mark> are Man. We had a <mark> 3% increase<\/mark>  compared to 2019<\/h3>","dd692f08":"<h2 style='background:#a4b9d2; border:50; color:black'>Q36 - Where do you publicly share or deploy your data analysis or machine learning applications?<h2>\n","45982577":"<h2 style='background:#4974a5; border:50; color:white'>Let's analyze the time spent by respondents to answer the survey &#9201;<h2>","2ce96a9a":"<h3>Here we group by function and which programming languages \u200b\u200bare used. The 3 most used languages \u200b\u200bare: <mark>PYTHON<\/mark>, <mark>R<\/mark> and <mark>SQL<\/mark>.<\/h3>","f00c5378":"<h2 style='background:#a4b9d2; border:50; color:black'>Q2 - What is your gender?<h2>\n\n\n\n<h3>He we consider for analysis only Male and Female.<\/h3>&#128104; &#128105;","6669e167":"<h1 style='background:#4974a5; border:50; color:white'><center>Kaggle 2020 Machine Learning And Data Science -  Survey Analysis interactive<center><h1>\n","185508ce":"<h2 style='background:#a4b9d2; border:50; color:black'>Q9 - Which of the following integrated development environments (IDE's) do you use on a regular basis?<h2>","62db0531":"### More than <mark> 70%<\/mark>  of Kagglers is under 35 years old.","27379e1f":"<h3>We can see that the <mark>highest average salary<\/mark> is in the <mark>USA<\/mark> followed by the <mark>UK<\/mark>. We can notice that the average salary per country also has a <mark>big difference<\/mark> in relation to <mark>gender<\/mark>, that is, the average salary of men is higher than that of women. the only country we see that there is <mark>no difference<\/mark> in <mark>average salary<\/mark> between men and women is in <mark>japan.<\/mark><\/h3>","50ca5ad4":"<h2 style='background:#a4b9d2; border:50; color:black'>Average Salary by Gender and Current Role<h2>\n","a584320c":"<h3>Data science and machine learning are changing rapidly. <mark>Corsera<\/mark>, <mark>kaggle Learn<\/mark>, <mark>Udemy<\/mark> are at the top of the <mark>most common<\/mark> courses in research. A curious fact is that in fourth place we have people with <mark>10.28%<\/mark> attending <mark>traditional higher education<\/mark>. The majority studying through online materials.<\/h3>","d7096be7":"<h3> The Databases most often are <mark>MYSQL<\/mark> (16.69%) followed by <mark>PostegresSQL<\/mark> (11,23%) and <mark>SQLServer<\/mark> (10.45%). Regarding databases <mark>NoSQL<\/mark> the first was <mark>MongoDB<\/mark> with (8.48%). About the <mark>Amazon DynamoDB<\/mark> with just over <mark>5%.<\/mark><\/h3>","ea25b2a1":"<h2 style='background:#a4b9d2; border:50; color:black'>Q17 - Which of the following ML algorithms do you use on a regular basis?<h2>\n","ff7e7b2d":"<h2 style='background:#a4b9d2; border:50; color:black'>Q29 - Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you use on a regular basis?<h2>\n","3ea85b64":"<h2 style='background:#a4b9d2; border:50; color:black'>Q4 - What is the highest level of formal education that you have attained or plan to attain within the next 2 years?<h2>\n","435e7a77":"<h3><mark>Linear<\/mark> or <mark>Logistic Regression<\/mark> were the most commonly used algorithms used among the respondents, followed by <mark>Random Forest<\/mark>. <mark>CNN<\/mark> and <mark>Gradient Boosting<\/mark> were the most popular approaches.<\/h3>","221d91ed":"<h3>Here is a curious fact. the <mark>second<\/mark> at the top of the table with <mark>22.17%<\/mark> of people who <mark>do not<\/mark> share their work publicly applications. The <mark>majority<\/mark> share or deploy your data analysis or Machine Learning applications on <mark>GitHub.<\/mark><\/h3>\n","bd979ab5":"<h3>We can see that the Minority of the Kagglers are women and are under 35 years old the majority.<\/h3>","f25def8b":"<h2 style='background:#a4b9d2; border:50; color:black'>Q16 - Which of the following machine learning frameworks do you use on a regular basis?<h2>\n","cb584a22":"<h3>The current job that has the <mark>highest average salary<\/mark> is <mark> product\/project manager<\/mark> and <mark> Data Scientist<\/mark>. We can also observe that there is a <mark>difference<\/mark> in the <mark>average salary<\/mark> of <mark>men<\/mark> for <mark>women<\/mark>, that is, with the same function, women receive much less than men.<\/h3>","424fb73f":"<h2 style='background:#a4b9d2; border:50; color:black'>Average Salary by Country\/Gender<h2>","0d8161f0":"<h2 style='background:#4974a5; border:50; color:white'>Load Data &#x1F4C1;<h2>\n","b97b765b":"<h2 style='background:#a4b9d2; border:50; color:black'>Q3 - In which country do you currently reside?<h2>\n\n<h3><mark>India<\/mark> and <mark>USA<\/mark> has far more representation in Kaggle Community. &#127757;\n\n<mark>India<\/mark> makes up <mark>29.20%<\/mark>, <mark>USA 11.16%<\/mark> of kaggle Data Scientist and <mark>Brazil<\/mark> is distant at under <mark>3,46%.<\/mark><\/h3>\n","0fd141d0":"<h1 style=\"color:#000074\">Did you Know???<\/h1>\n\n<h5 style=\"color:#0060c1\">\n\nDid you know that more than <mark>70%<\/mark> of kagglers are under <mark>35 years old<\/mark>?\n\nDo you believe that <mark>80%<\/mark> of respondents are male, that is, for every 10, only 2 are female?\n\nDo you believe that more than half of data scientists have <mark>less than three years<\/mark> of experience with machine learning and use it for <mark>less than 2 years?<\/mark>\n\nDid you know that the most used language is <mark>PYTHON<\/mark> and the most used <mark>IDE<\/mark> is Jupyter(Lab, Notebook)?\n\nDid you know that the <mark>Skicit-learn<\/mark> is the most popular machine learning tool?\n\n<mark>Tableau<\/mark> and <mark>PowerBI<\/mark> are the most popular business intelligence tools among respondents?\n\nJust about <mark>10,28%<\/mark> of respondents take traditional higher education courses the majority learn throug online materials. <mark>Coursera<\/mark>, <mark>kaggle Learn Courses<\/mark> and <mark>Udemy<\/mark> are the most common among respondents?\n\nThese and other answers you will see in the analysis below.<\/h5>\n\n**Thanks!!!.**","b692b570":"<h2 style='background:#a4b9d2; border:50; color:black'>Q1 - What is your age?<h2>\n","43fed0bf":"<h2 style='background:#a4b9d2; border:50; color:black'>Q15 - For how many years have you used machine learning methods?<h2>","856d9fc4":"#### Let's look at the shape of the data","22ac864f":"<h2 style='background:#a4b9d2; border:50; color:black'>Q14 - What data visualization libraries or tools do you use on a regular basis?<h2>","e0163899":"<h2 style='background:#a4b9d2; border:50; color:black'>Q5 - Select the title most similar to your current role (or most recent title if retired)<h2>\n","eb2b44f7":"<h3>The most current role are Student an Data Scientist that represent <mark>40.71%<\/mark>.<\/h3>\n","17caa571":"<h3>No surprises here, <mark>PYTHON<\/mark> is the most used and easiest language to learn.<\/h3>","195cab9f":"<h2 style='background:#4974a5; border:50; color:white'>Creating a function for plotting interactive charts &#128200;<h2>","241e4388":"<h3>\nThe minimum time is 20 seconds it's look like that only Age and Country name and Gender was filled in.\n<br> <br>\n    \nThe maximum  time is 19074.88 minutes = 317.91 hours = 13.2464 days. There is some strange here, 13 days to filled in survey is not normal.\n  \nThe average time is 152.6 Minutes = 2.5433 Hours. We don't use because is quite above than normal.  \n\nThe Median is 626 seconds = 10.43 minutes. That's ok!.<\/h3>","b3c0f922":"<h3>Lets see how many kagglers fill in the survey less than 3 minutes. We consider that normal time is the Median equal Ten minutes to filled in.<\/h3> \n","e7973123":"<h3>Jupyter (Lab, Notebook) and Visual Studio is most used by the data scientist.<\/h3>","1dcc65d7":"If you have any suggestions let me know in the comment!\n\nIf you find this Notebook useful please Show your appreciation with an **UPVOTE**\n\nThanks for reading!","d9108007":"<h2 style='background:#a4b9d2; border:50; color:black'>Q8 - What programming language would you recommend an aspiring data scientist to learn first?<h2>\n","35f4dfe6":"<h2 style='background:#a4b9d2; border:50; color:black'>Q6 - For how many years have you been writing code and\/or programming?<h2>","a180a844":"### We can say that more than 8.5% of kaggles did the research in 3 minutes. Probably the survey was not fully completed. The median time is around 10 minutes. ","4e7470b4":"<h2 style='background:#a4b9d2; border:50; color:black'>Q7\/12 - What programming languages do you use on a regular basis?<h2>"}}