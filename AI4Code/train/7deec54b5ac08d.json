{"cell_type":{"40063770":"code","c2661b38":"code","8b12c272":"code","47c95f65":"code","83449b4d":"code","10f4c993":"code","5e198c4b":"code","f40dfa7a":"code","0f94ccf2":"code","bcb1eeb7":"code","9b0d2979":"code","78afc92f":"code","a366919b":"code","3612c850":"code","3999d599":"code","4b14e3fb":"code","96b8bd13":"code","6e663c48":"code","a0da7729":"code","3986d15b":"code","1044aab9":"code","a6ac8b12":"code","10044479":"markdown","751f5011":"markdown","47da1eae":"markdown","55d98541":"markdown","3e0df2ff":"markdown","ce3ca17d":"markdown","071b0620":"markdown","43d2bd43":"markdown","85e0ad7c":"markdown","b6d90899":"markdown","653c1104":"markdown","e9721252":"markdown","3a302d22":"markdown","49749ca5":"markdown","56269225":"markdown","45075fed":"markdown","c2bc9814":"markdown","0fa45ed4":"markdown","89bbf7a9":"markdown","e7e5ac0b":"markdown","c2de2272":"markdown","6f9c2d73":"markdown","cdaa425c":"markdown","0ad6dfde":"markdown"},"source":{"40063770":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c2661b38":"import seaborn as sns\nimport matplotlib.pyplot as plt","8b12c272":"df = pd.read_csv('..\/input\/billboard-the-hot-100-songs\/charts.csv')\ndf.head()","47c95f65":"df.isnull().sum()","83449b4d":"df.shape","10f4c993":"df.info()","5e198c4b":"plt.figure(figsize=(8,8))\nsns.heatmap(df.isnull(),cbar=False,yticklabels=False)","f40dfa7a":"plt.figure(figsize=(8,8))\ndf['last-week'].fillna(0,inplace=True)\nsns.heatmap(df.isnull(),cbar=False,yticklabels=False)","0f94ccf2":"df['date'] = pd.to_datetime(df['date'])","bcb1eeb7":"most_1_app = pd.DataFrame(df[df['rank']==1]['artist'].value_counts())\nmost_1_app.head(15)","9b0d2979":"df[(df['artist']=='Taylor Swift') & (df['rank']==1)].value_counts().sum()","78afc92f":"df[df['artist']=='Taylor Swift'].value_counts().sum()","a366919b":"a = pd.DataFrame(df[(df['artist']=='Taylor Swift') & (df['rank']==1)]['song'].value_counts())\na","3612c850":"plt.figure(figsize=(8,8))\nsns.countplot(y=df[(df['artist']=='Taylor Swift') & (df['rank']==1)]['song'],data=df)","3999d599":"b = pd.DataFrame(df[(df['artist']=='Taylor Swift') & (df['rank']<6) & (df['rank']>0)]['song'].unique())\nb.rename( columns={0 :'Song Name'}, inplace=True )\nb","4b14e3fb":"plt.figure(figsize=(8,8))\nsns.countplot(y=df[(df['artist']=='Taylor Swift')& (df['rank']<6) & (df['rank']>0)]['song'],data=df)","96b8bd13":"plt.figure(figsize=(8,6))\nsns.set_theme()\nb_s = df[(df['song']=='Blank Space') & (df['artist']=='Taylor Swift')][['rank','date']]\nsns.lineplot(x='date',y='rank',data=b_s)","6e663c48":"plt.figure(figsize=(8,6))\nsns.set_theme()\nb_s = df[(df['song']=='Shake It Off') & (df['artist']=='Taylor Swift')][['rank','date']]\nsns.lineplot(x='date',y='rank',data=b_s)","a0da7729":"plt.figure(figsize=(12,6))\nsns.set_theme()\nb_s = df[(df['song']=='Look What You Made Me Do') & (df['artist']=='Taylor Swift')][['rank','date']]\nsns.lineplot(x='date',y='rank',data=b_s)","3986d15b":"plt.figure(figsize=(8,6))\nsns.set_theme()\nb_s = df[(df['song']=='We Are Never Ever Getting Back Together') & (df['artist']=='Taylor Swift')][['rank','date']]\nsns.lineplot(x='date',y='rank',data=b_s)","1044aab9":"plt.figure(figsize=(9,6))\nsns.set_theme()\nb_s = df[(df['song']=='Cardigan') & (df['artist']=='Taylor Swift')][['rank','date']]\nsns.lineplot(x='date',y='rank',data=b_s)","a6ac8b12":"plt.figure(figsize=(12,6))\nsns.set_theme()\nb_s = df[(df['song']=='Willow') & (df['artist']=='Taylor Swift')][['rank','date']]\nsns.lineplot(x='date',y='rank',data=b_s)","10044479":"## Performance Analysis of her Top 6 songs","751f5011":"## Songs having #1 at the charts","47da1eae":"# Data Analysis on Taylor Swift Songs","55d98541":"### Performance analysis of Willow","3e0df2ff":"## Frequency on Hot 100 chart","ce3ca17d":"### As a Swiftie, the rest of the Data Analysis is based on her songs","071b0620":"## Visualising the #1 Results","43d2bd43":"## Visualization of #5 songs","85e0ad7c":"### Performance analysis of Shake It Off","b6d90899":"### Thanks for viewing my notebook\n### Have a nice day\n### If you have suggestions for improvements, comment down below","653c1104":"## Finding the number of 1 appearances by Taylor Swift","e9721252":"## Top Songs peaking at #5 on the chart","3a302d22":"## Finding the Top 15 Artists with most number 1 appearances","49749ca5":"### **Checking if any null value exists**","56269225":"### Performance analysis of Cardigan","45075fed":"### Performance analysis of We Are Never Ever Getting Back Together","c2bc9814":"### Let's get started :)","0fa45ed4":"### The null values are hence removed","89bbf7a9":"### Converting datatype of Date","e7e5ac0b":"### As the null value shows that the song is a new entry we replace the null values with zero","c2de2272":"###  Performance analysis of Blank Space","6f9c2d73":"### Performance analysis of Look What You Made Me Do","cdaa425c":"# Using the relevant data and importing libraries","0ad6dfde":" ### Visualization of the null data"}}