{"cell_type":{"aa234f43":"code","a56885c3":"code","7e52267c":"code","582a0ef6":"code","db7197bf":"code","8f086f57":"code","38d0d246":"code","d52c13f0":"code","0cb13184":"code","eed1b9a6":"code","5c0d57a8":"code","4894293f":"code","9b29ae78":"code","2b8dd00d":"code","b4fb22a6":"code","b36e04b3":"code","ce421302":"code","e27f5c96":"code","3e07aee6":"code","423478c4":"code","504d73ab":"code","ed9b0ab2":"code","72ab5c06":"code","565ef019":"code","58885134":"code","f8229108":"code","33a838c5":"code","239e9d60":"code","006ff0e8":"code","a8d95563":"code","86c63832":"code","38e86f05":"code","e9e13a6d":"code","fc72a3ef":"code","891e9f43":"markdown","8b5eceb1":"markdown","1d78581b":"markdown","b723eef0":"markdown","ee87b6e6":"markdown","89510483":"markdown","32d4ccb4":"markdown","096386e8":"markdown","79410933":"markdown"},"source":{"aa234f43":"import os\nInputBaseDirectory  = '\/kaggle\/input'\nInputDataDirectory = os.path.join(InputBaseDirectory, 'jane-street-market-prediction')\n\nimport numpy as np\nimport pandas as pd\n\nimport collections","a56885c3":"columns = ['date', 'weight', 'resp']\nfor iFeature in range(130):\n    columns.append('feature_%d'%iFeature)\n    \ndsTrain = pd.read_csv(os.path.join(InputDataDirectory, 'train.csv'),\n                     usecols=columns,\n                     dtype={c:'float16' for c in columns})\n\ndateColumn = dsTrain.pop('date')\n#dsTrain = dsTrain.drop(columns='weight')","7e52267c":"statistics = dsTrain.describe()\nstatistics[statistics.columns[0:32]]","582a0ef6":"statistics[statistics.columns[32:64]]","db7197bf":"statistics[statistics.columns[64:96]]","8f086f57":"statistics[statistics.columns[96:128]]","38d0d246":"statistics[statistics.columns[128:160]]","d52c13f0":"dsTrain = dsTrain.drop(columns='weight')","0cb13184":"countByDate = dateColumn.value_counts()\ncountByDate","eed1b9a6":"for iDate in range(10):\n    print('iDate:', countByDate[iDate])","5c0d57a8":"columns_withNull = dsTrain.columns[dsTrain.isnull().any()]","4894293f":"columns_nullCount = dsTrain.isnull().sum().sort_values(ascending=True)\ncolumns_nullCount = columns_nullCount[columns_nullCount > 0]\nprint('dsTrain length:', len(dsTrain))\nprint(columns_nullCount[0:50])\nprint(columns_nullCount[50:100])\nprint(columns_nullCount[100:])","9b29ae78":"columns_lt500Nulls = [k for k,v in columns_nullCount.items() if v < 500]\ncolumns_lt500Nulls","2b8dd00d":"dsNull = dsTrain.isnull()\ndsNull = dsNull[columns_withNull][dsNull.any(axis=1)]\n\ndsNull['date']    = dateColumn\ndsNull['pattern'] = ''\nfor col in columns_withNull:\n    dsNull['pattern'] = dsNull['pattern'] + np.where(dsNull[col], 'N','.')","b4fb22a6":"headers_withNull  = 'f'*len(columns_withNull) + '\\n'\nheaders_withNull += ''.join([c[-3] if c[-3].isdigit() else '0' for c in columns_withNull]) + '\\n'\nheaders_withNull += ''.join([c[-2] if c[-2].isdigit() else '0' for c in columns_withNull]) + '\\n'\nheaders_withNull += ''.join([c[-1] for c in columns_withNull]) + '\\n'\nheaders_withNull += '-'*len(columns_withNull)","b36e04b3":"nullPattern = dsNull[['date','pattern']]\nnullPattern[nullPattern['date'] == 0.].value_counts()","ce421302":"nullPattern[nullPattern['date'] == 1.].value_counts()","e27f5c96":"nullPattern[nullPattern['date'] == 3.].value_counts()","3e07aee6":"nullPattern[nullPattern['date'] == 50.].value_counts()","423478c4":"nullPattern = dsNull['pattern'].copy()\nprint(len(dsTrain), 'dsTrain records')\nprint(len(nullPattern), 'dsNull records')\nprint()\nprint(headers_withNull)\nprint(nullPattern.value_counts()[0:32])\nprint('...')","504d73ab":"patterns = ['..NN........NN........NN..............N....N....N....N....N....N....N....N..............',\n            '..NN........NN........NN................................................................',\n            '......................................N....N....N....N....N....N....N....N..............']\n\nfor pattern in patterns:\n    matches = nullPattern.str.match(pattern)\n    print(pattern, np.count_nonzero(matches))\nprint()\n\n# remove pattern\nfor pattern in patterns:\n    matches = nullPattern.str.match(pattern)\n    \n    iChar = pattern.find('N')\n    while iChar >= 0:\n        nullPattern[matches] = nullPattern[matches].str[:iChar]+'.'+nullPattern[matches].str[iChar+1:]\n        iChar = pattern.find('N', iChar+1)\n\nprint('After removing patterns...')\nprint(len(dsTrain), 'dsTrain records')\nprint(len(nullPattern), 'dsNull records')\nprint()\nprint(headers_withNull)\nprint(nullPattern.value_counts()[0:32])\nprint('...')","ed9b0ab2":"print('Continuing on...')\n\npatterns = ['..................................N...........................................NN........',\n            '..............................................................................NN........',\n            '..................................N.....................................................']\n\nfor pattern in patterns:\n    matches = nullPattern.str.match(pattern)\n    print(pattern, np.count_nonzero(matches))\nprint()\n\n# remove pattern\nfor pattern in patterns:\n    matches = nullPattern.str.match(pattern)\n    \n    iChar = pattern.find('N')\n    while iChar >= 0:\n        nullPattern[matches] = nullPattern[matches].str[:iChar]+'.'+nullPattern[matches].str[iChar+1:]\n        iChar = pattern.find('N',iChar+1)\n\nprint('After removing patterns...')\nprint(len(dsTrain), 'dsTrain records')\nprint(len(nullPattern), 'dsNull records')\nprint()\nprint(headers_withNull)\nprint(nullPattern.value_counts()[0:32])\nprint('...')","72ab5c06":"nullPattern = dsNull['pattern'].copy()\n#masks = ['..NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN......NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN..NNNNNNNN']\nmasks  = ['......................................NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN..........']\n\nfor mask in masks:    \n    iChar = mask.find('.')\n    while iChar >= 0:\n        nullPattern = nullPattern.str[:iChar]+'.'+nullPattern.str[iChar+1:]\n        iChar = mask.find('.', iChar+1)\n\nprint(len(dsTrain), 'dsTrain records')\nprint(len(nullPattern), 'dsNull records')\nprint()\nprint(headers_withNull)\nprint(nullPattern.value_counts()[0:32])\nprint('...')","565ef019":"nullPattern = dsNull['pattern'].copy()\n#masks = ['..NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN......NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN..NNNNNNNN']\nmasks  = ['................................................................................NNNNNNNN']\n\nfor mask in masks:    \n    iChar = mask.find('.')\n    while iChar >= 0:\n        nullPattern = nullPattern.str[:iChar]+'.'+nullPattern.str[iChar+1:]\n        iChar = mask.find('.', iChar+1)\n\nprint(len(dsTrain), 'dsTrain records')\nprint(len(nullPattern), 'dsNull records')\nprint()\nprint(headers_withNull)\nprint(nullPattern.value_counts()[0:32])\nprint('...')","58885134":"nullPattern = dsNull['pattern'].copy()\n#masks = ['..NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN......NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN..NNNNNNNN']\nmasks  = ['..NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN........................................................']\n\nfor mask in masks:    \n    iChar = mask.find('.')\n    while iChar >= 0:\n        nullPattern = nullPattern.str[:iChar]+'.'+nullPattern.str[iChar+1:]\n        iChar = mask.find('.', iChar+1)\n\nprint(len(dsTrain), 'dsTrain records')\nprint(len(nullPattern), 'dsNull records')\nprint(nullPattern.value_counts()[0:32])\nprint('...')","f8229108":"nullColumn = 'feature_58'\nnullPattern = dsNull['pattern'].copy()\n\niColumn = columns_withNull.tolist().index(nullColumn)\npattern = '.'*iColumn + 'N' + '.'*(len(columns_withNull)-1-iColumn)\n\nmatches = nullPattern.str.match(pattern)\nnullPattern[~matches] = ''\n\nprint('checking null pattern for', nullColumn)\nprint(nullPattern.value_counts())","33a838c5":"nullColumn = 'feature_59'\nnullPattern = dsNull['pattern'].copy()\n\niColumn = columns_withNull.tolist().index(nullColumn)\npattern = '.'*iColumn + 'N' + '.'*(len(columns_withNull)-1-iColumn)\n\nmatches = nullPattern.str.match(pattern)\nnullPattern[~matches] = ''\n\nprint('checking null pattern for', nullColumn)\nprint(headers_withNull)\nprint(nullPattern.value_counts())","239e9d60":"nullColumn = 'feature_123'\nnullPattern = dsNull['pattern'].copy()\n\niColumn = columns_withNull.tolist().index(nullColumn)\npattern = '.'*iColumn + 'N' + '.'*(len(columns_withNull)-1-iColumn)\n\nmatches = nullPattern.str.match(pattern)\nnullPattern[~matches] = ''\n\nprint('checking null pattern for', nullColumn)\nprint(headers_withNull)\nprint(nullPattern.value_counts())","006ff0e8":"nullColumn = 'feature_4'\nnullPattern = dsNull['pattern'].copy()\n\niColumn = columns_withNull.tolist().index(nullColumn)\npattern = '.'*iColumn + 'N' + '.'*(len(columns_withNull)-1-iColumn)\n\nmatches = nullPattern.str.match(pattern)\nnullPattern[~matches] = ''\n\nprint('checking null pattern for', nullColumn)\nprint(headers_withNull)\nprint(nullPattern.value_counts())","a8d95563":"nullColumn = 'feature_56'\nnullPattern = dsNull['pattern'].copy()\n\niColumn = columns_withNull.tolist().index(nullColumn)\npattern = '.'*iColumn + 'N' + '.'*(len(columns_withNull)-1-iColumn)\n\nmatches = nullPattern.str.match(pattern)\nnullPattern[~matches] = ''\n\nprint('checking null pattern for', nullColumn)\nprint(headers_withNull)\nprint(nullPattern.value_counts())","86c63832":"nullColumn = 'feature_97'\nnullPattern = dsNull['pattern'].copy()\n\niColumn = columns_withNull.tolist().index(nullColumn)\npattern = '.'*iColumn + 'N' + '.'*(len(columns_withNull)-1-iColumn)\n\nmatches = nullPattern.str.match(pattern)\nnullPattern[~matches] = ''\n\nprint('checking null pattern for', nullColumn)\nprint(headers_withNull)\nprint(nullPattern.value_counts())","38e86f05":"nullColumn = 'feature_129'\nnullPattern = dsNull['pattern'].copy()\n\niColumn = columns_withNull.tolist().index(nullColumn)\npattern = '.'*iColumn + 'N' + '.'*(len(columns_withNull)-1-iColumn)\n\nmatches = nullPattern.str.match(pattern)\nnullPattern[~matches] = ''\n\nprint('checking null pattern for', nullColumn)\nprint(headers_withNull)\nprint(nullPattern.value_counts())","e9e13a6d":"nullColumn = 'feature_35'\nnullPattern = dsNull['pattern'].copy()\n\niColumn = columns_withNull.tolist().index(nullColumn)\npattern = '.'*iColumn + 'N' + '.'*(len(columns_withNull)-1-iColumn)\n\nmatches = nullPattern.str.match(pattern)\nnullPattern[~matches] = ''\n\nprint('checking null pattern for', nullColumn)\nprint(headers_withNull)\nprint(nullPattern.value_counts())","fc72a3ef":"columns_groupByNulls = []\n\ncolumns_groupByNullCount = collections.defaultdict(list)\nfor k,v in columns_nullCount.items():\n    columns_groupByNullCount[v].append(k)\nprint('columns_groupByNullCount Length:', len(columns_groupByNullCount))\n\nfor columns_sameNullCount in columns_groupByNullCount.values():\n    #print(columns_sameNullCount)\n    while len(columns_sameNullCount) > 0:\n        column_i = columns_sameNullCount.pop()\n        #print(' ', column_i)\n        \n        columns_sameNulls = [column_i]\n        for column_j in columns_sameNullCount:\n            #print('  ', column_j)\n            if dsNull[column_i].equals(dsNull[column_j]):\n                columns_sameNulls.append(column_j)\n                columns_sameNullCount.remove(column_j)\n        \n        columns_groupByNulls.append(columns_sameNulls)\n        #if len(columns_sameNulls) >= 2:\n        #    columns_groupByNulls.append(columns_sameNulls)\n\nprint('columns_groupByNulls Length:', len(columns_groupByNulls))","891e9f43":"# Columns with low Null count","8b5eceb1":"# Columns with null values","1d78581b":"# Null patterns between dates","b723eef0":"# Perhaps some rolling, look back calculations","ee87b6e6":"# May be Missing at Random","89510483":"# Null value patterns\nThere is a strong correlation between missing values from different columns.\n\nThey are likely to be different product or due to product specific features\n\nDifferent features seems to be calculated from same missing values","32d4ccb4":"# Grouping columns with same null pattern\nreduces the number of columns required for null analysis","096386e8":"# Record count by Date","79410933":"# Well Engineered Features for Machine Learning\nfeatures_1..129 have median very close to zero.\n\nThe features look quite balanced as well at 25% vs 75% and min vs max."}}