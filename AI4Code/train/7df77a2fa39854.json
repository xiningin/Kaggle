{"cell_type":{"d8d87208":"code","39868036":"code","ef6b6dbe":"code","7e849d31":"code","100ea058":"code","fd4d9028":"code","5d47416d":"code","4230bcd9":"code","9abbe880":"code","587e1a43":"code","d84f284d":"code","4ee0941e":"code","49f20a34":"code","b258e5b6":"code","239e3fa5":"code","d6ba0910":"code","5484bfca":"code","ab1ca39d":"code","de8472c7":"code","4e3b9266":"code","253fbcab":"code","73434d4a":"code","2126e884":"code","7e9188a9":"code","8369cd41":"code","35e300d0":"code","5ef2d7bb":"code","59e8809b":"code","eae89f7b":"code","1024f2b5":"code","e8615b3c":"code","aa329df2":"code","172814a4":"code","d3f4961f":"code","b06200ee":"code","b8eb20d5":"code","19f4e711":"code","1aa9abfc":"code","566dac7f":"markdown","9e604578":"markdown","769d185e":"markdown","addbe9fb":"markdown","4d75a526":"markdown","ab402ae2":"markdown","f777d234":"markdown","bc30536b":"markdown","8ec3dcbf":"markdown","9fb55158":"markdown","e388d176":"markdown","f32ffd36":"markdown","ca0d2d16":"markdown","3129eda0":"markdown","dd75b3a6":"markdown","62cf6270":"markdown","418f8feb":"markdown","8a9232e4":"markdown","4adbff89":"markdown","3f472cba":"markdown","a30e1881":"markdown","ceabf7e5":"markdown","fba5acd9":"markdown"},"source":{"d8d87208":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n\n","39868036":"churn_df=pd.read_csv(\"\/kaggle\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv\")","ef6b6dbe":"churn_df.head()","7e849d31":"churn_df.info()","100ea058":"churn_df[\"TotalCharges\"]=pd.to_numeric(churn_df[\"TotalCharges\"],errors=\"coerce\")\nchurn_df[\"TotalCharges\"].dtypes","fd4d9028":"churn_df.isnull().sum()","5d47416d":"print(\"Before dropna\", churn_df.shape)\nchurn_df.dropna(inplace=True)\nprint(\"After dropna\",churn_df.shape)","4230bcd9":"churn_df.drop(\"customerID\",axis=1,inplace=True)","9abbe880":"services_col=[\"PhoneService\",\"MultipleLines\",\"InternetService\",\"OnlineSecurity\",\"OnlineBackup\",\"DeviceProtection\",\"TechSupport\",\"StreamingTV\",\"StreamingMovies\",\"Churn\"]\n\naccount_col=[\"tenure\",\"Contract\",\"PaperlessBilling\",\"PaymentMethod\",\"MonthlyCharges\",\"TotalCharges\",\"Churn\"]\n\ndemographic_col=[\"gender\",\"SeniorCitizen\",\"Partner\",\"Dependents\",\"Churn\"] ","587e1a43":"services_df = churn_df[services_col]\naccount_df = churn_df[account_col]\ndemographic_df = churn_df[demographic_col]","d84f284d":"def countplot_ratio(x,data,hue=None,ax=None):\n    \n    ax=sns.countplot(x,data=data,hue=hue,ax=ax)\n    ax.set_xticklabels(ax.get_xticklabels(),rotation=10)\n    ax.set_title(x + \" Distributions\")\n    ax.legend(bbox_to_anchor=(1.01,1))\n    total = float(len(data))\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,height + 3,\n                '{:.2f}%'.format((height\/total)*100),fontsize=12, weight = 'bold',ha=\"center\") \n","4ee0941e":"countplot_ratio(\"Churn\",churn_df)","49f20a34":"fig, axes = plt.subplots(nrows = 3,ncols = 3,figsize = (32,22))\nfig.suptitle('Services Features Distributions by % Churn',fontsize=30)\nfor i, col in enumerate(services_col[0:-1]):    \n    if i < 3:\n        countplot_ratio(col,services_df,hue=\"Churn\",ax=axes[i,0])\n    elif i >=3 and i < 6:\n         countplot_ratio(col,services_df,hue=\"Churn\",ax=axes[i-3,1])\n    elif i >=6:\n        countplot_ratio(col,services_df,hue=\"Churn\",ax=axes[i-6,2])","b258e5b6":"churn_df[\"SumofIntServices\"]=(churn_df[[\"OnlineSecurity\",\"OnlineBackup\", \"DeviceProtection\",\n                                        \"TechSupport\",\"StreamingTV\", \"StreamingMovies\"]]=='Yes').sum(axis=1)\n\n\nchurn_df.loc[:,'fiber'] = np.where((churn_df['InternetService'] == 'Fiber optic'), 1,0)\n\n\nchurn_df.loc[:,'AnySup'] = np.where((churn_df['OnlineSecurity'] != 'No') |(churn_df['OnlineBackup'] != 'No') |\\\n                                    (churn_df['DeviceProtection'] != 'No')|(churn_df['TechSupport'] != 'No'),1,0)\n","239e3fa5":"fig, axes = plt.subplots(nrows = 2,ncols = 2,figsize = (12,10))\nfig.suptitle('Demographic Features Distributions by % Churn',fontsize=16)\nfor i, col in enumerate(demographic_col[0:-1]):    \n    if i < 2:\n        countplot_ratio(col,demographic_df,hue=\"Churn\",ax=axes[i,0])\n    elif i >=2:\n         countplot_ratio(col,demographic_df,hue=\"Churn\",ax=axes[i-2,1])","d6ba0910":"churn_df.loc[:,'AnyDeporPart'] = np.where((churn_df['Partner'] != 'No')|(churn_df['Dependents'] != 'No'),1,0)","5484bfca":"cat_col=list(account_df.select_dtypes(include=\"object\").columns)\ncat_col","ab1ca39d":"fig, axes = plt.subplots(nrows = 1,ncols = 3,figsize = (20,6))\nfig.suptitle('Account Categorical Features  Distributions by % Churn',fontsize=20)\nfor i, col in enumerate(cat_col[0:-1]):\n        countplot_ratio(col,account_df,hue=\"Churn\",ax=axes[i])","de8472c7":"churn_df.loc[:,'MonthtoMonth'] = np.where((churn_df['Contract'] == 'Month-to-month'), 1,0)\nchurn_df.loc[:,'ElectronicCheck'] = np.where((churn_df['PaymentMethod'] == 'Electronic check'), 1,0)","4e3b9266":"churn_df.describe()","253fbcab":"def kdeplot_churn(col,ax=None):\n\n    ax = sns.kdeplot(churn_df[col][(churn_df[\"Churn\"] == 'Yes') ],color=\"Red\",ax=ax)\n    ax = sns.kdeplot(churn_df[col][(churn_df[\"Churn\"] == 'No') ],color=\"Blue\",ax=ax)\n    ax.legend([\"Churn\",\"Not Churn\"],loc='upper right')\n    ax.set_ylabel('Density')\n    ax.set_xlabel(col)\n    ax.set_title(\"Distribution of \"+ col +\" by churn\")","73434d4a":"fig, axes = plt.subplots(nrows = 1,ncols = 3,figsize = (20,6))\nkdeplot_churn(\"tenure\",ax=axes[0])\nkdeplot_churn(\"MonthlyCharges\",ax=axes[1])\nkdeplot_churn(\"TotalCharges\",ax=axes[2])","2126e884":"fig, axes = plt.subplots(nrows = 1,ncols = 3,figsize = (20,6))\nax = sns.boxplot(x=\"Churn\",y=\"tenure\",data=churn_df,ax=axes[0])\nax = sns.boxplot(x=\"Churn\",y=\"MonthlyCharges\",data=churn_df,ax=axes[1])\nax = sns.boxplot(x=\"Churn\",y=\"TotalCharges\",data=churn_df,ax=axes[2])","7e9188a9":"churn_df[\"tenure_cat\"]=pd.qcut(churn_df[\"tenure\"],4)\nchurn_df[\"TotalCharges_cat\"]=pd.qcut(churn_df[\"TotalCharges\"],4)","8369cd41":"fig, axes = plt.subplots(nrows = 1,ncols = 2,figsize = (20,6))\ncountplot_ratio(\"tenure_cat\",churn_df,hue=\"Churn\",ax=axes[0])\ncountplot_ratio(\"TotalCharges_cat\",churn_df,hue=\"Churn\",ax=axes[1])","35e300d0":"churn_df.info()","5ef2d7bb":"churn_df['Churn'].replace(to_replace='Yes', value=1, inplace=True)\nchurn_df['Churn'].replace(to_replace='No',  value=0, inplace=True)","59e8809b":"churn_df2=churn_df.copy()\nchurn_df2.columns","eae89f7b":"churn_df2.drop(['Partner', 'Dependents', 'tenure','InternetService', 'OnlineSecurity',\n       'OnlineBackup', 'DeviceProtection', 'TechSupport', 'StreamingTV',\n       'StreamingMovies', 'Contract', 'PaymentMethod','TotalCharges'],axis=1,inplace=True)","1024f2b5":"churn_dummies = pd.get_dummies(churn_df2)\nchurn_dummies.head()","e8615b3c":"fig, ax = plt.subplots(figsize=(10,10))\nfig.suptitle('Correlation between Churn and features',fontsize=20)\nax=sns.heatmap(churn_dummies.corr()[[\"Churn\"]].sort_values(\"Churn\"),vmax=1, vmin=-1, cmap=\"YlGnBu\", annot=True, ax=ax);\nax.invert_yaxis()","aa329df2":"churn_corr=churn_dummies.corr()[[\"Churn\"]].sort_values(\"Churn\")\ncorr_drop=list(churn_corr[(churn_corr[\"Churn\"]< 0.05)& (churn_corr[\"Churn\"]>-0.05)].index)\nchurn_dummies.drop(corr_drop,axis=1,inplace=True)","172814a4":"churn_dummies.info()","d3f4961f":"from sklearn.ensemble import VotingClassifier, BaggingClassifier, AdaBoostClassifier, GradientBoostingClassifier\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\nfrom sklearn.linear_model import LogisticRegression, SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.svm import LinearSVC, SVC\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom xgboost import  XGBClassifier\nfrom sklearn.metrics import f1_score,accuracy_score\nfrom sklearn.model_selection import train_test_split","b06200ee":"X=churn_dummies.drop(\"Churn\",axis=1)\ny=churn_dummies[\"Churn\"]","b8eb20d5":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42,shuffle=True, stratify = y)","19f4e711":"print(\"No Churn\", round(y_train.value_counts()[0]\/len(y_train) * 100,2), \"% of the Train dataset\")\nprint(\"Churn\", round(y_train.value_counts()[1]\/len(y_train) * 100,2), \"% of the Train dataset\")\nprint(\"-------------------------------------------------------------------------------------------\")\nprint(\"No Churn\", round(y_test.value_counts()[0]\/len(y_test) * 100,2), \"% of Test the dataset\")\nprint(\"Churn\", round(y_test.value_counts()[1]\/len(y_test) * 100,2), \"% of the Test dataset\")","1aa9abfc":"dct = DecisionTreeClassifier(max_depth=10, random_state=42)\n\nsgd = SGDClassifier(random_state=42)\n\nlog = LogisticRegression(random_state=42)\n\nsvm_rbf = SVC(kernel=\"rbf\", random_state=42)\n\nsvm_lin = LinearSVC(loss=\"hinge\")\n\nvoting = VotingClassifier(estimators=[\n    (\"dct\", dct), (\"sgd\", sgd), (\"svm_rbf\", svm_rbf), (\"smv_lin\", svm_lin), (\"log\", log)\n], voting=\"hard\", n_jobs=-1)\n\nbag1 = BaggingClassifier(base_estimator=dct, n_estimators=50, max_samples=0.6, n_jobs=-1)\n\nbag2 = BaggingClassifier(base_estimator=log, n_estimators=50, max_samples=0.6, n_jobs=-1)\n\nrnd_frst = RandomForestClassifier(n_estimators=50, max_depth=10, max_features=0.7, random_state=42, n_jobs=-1)\n\nextra_tree = ExtraTreesClassifier(n_estimators=50, max_depth=10, max_features=0.7, random_state=42, n_jobs=-1)\n\nada_boost1 = AdaBoostClassifier(base_estimator=dct, n_estimators=50, algorithm=\"SAMME.R\", random_state=42)\n\nada_boost2 = AdaBoostClassifier(base_estimator=dct, n_estimators=50, algorithm=\"SAMME\", random_state=42)\n\nada_boost3 = AdaBoostClassifier(base_estimator=sgd, n_estimators=50, algorithm=\"SAMME\", random_state=42)\n\ngrad_boost = GradientBoostingClassifier(max_depth=10, random_state=42, n_iter_no_change=5)\n\nxgboost = XGBClassifier(max_depth=10, random_state=42, n_jobs=-1)\n\nclassifiers = [dct, sgd, log, svm_rbf, svm_lin, voting, bag1, bag2, \n               rnd_frst, extra_tree, ada_boost1, ada_boost2, ada_boost3,\n               grad_boost, xgboost]\n\nfor c in classifiers:\n  pip = Pipeline([\n        (\"scaler\", StandardScaler()),\n        (\"clf\", c)\n  ])\n\n  score_train = cross_val_score(pip, X_train, y_train, cv=5).mean()\n  pip.fit(X_train, y_train)\n  y_pred= pip.predict(X_test)\n  score_test=accuracy_score(y_test,y_pred)\n  print(\"Model:\", c.__class__.__name__,\"----->\",\"Train Score: \",score_train,\"----->\",\"Test Score: \",score_test)","566dac7f":"TotalCharges dtype looks like an object so we have to convert it to float","9e604578":"*Noteworthy Things*\n\n\n* Churn rate is significantly higher  than other internet Services for fiber optic.\n* Churn rate is high when the support services aren't used such as OnlineSecurity, TechSupport etc.\n* It looks like that using or not using some services have almost same effects on Churn such as MultipleLines,StreamingTV,StreamingMovies","769d185e":"# Services Features","addbe9fb":"# Demographic Features","4d75a526":"# Correlation with Heatmap","ab402ae2":"# Exploratory Data Analysis","f777d234":"I'll use kdeplot function at below for each numerical features","bc30536b":"# Customer Account Information Features","8ec3dcbf":"We won't use customerID  for prediction so we can drop this column","9fb55158":"# Feature Engineering for Demographic Features","e388d176":"# Preparations for Modeling","f32ffd36":"I'll use countplot function at below for each categorical features","ca0d2d16":"Drop some features which have less than 0.05 correlation and greater than -0.05 correlation.","3129eda0":"Split the data 3 main parts. They are related each others so i'll examine them together for EDA","dd75b3a6":"*Noteworthy Things*\n\n* Churn rate is %23.54 for who has Month-to-month contract\n* PaperlessBiling has a effect on Churn when Yes\n* Churn rate is %15.23 for who pay with Electronic check","62cf6270":"# Feature Engineering for Customer Account Features -2","418f8feb":"# Models for Prediction","8a9232e4":"# Feature Engineering for Customer Account Features -1","4adbff89":"# Feature Engineering for Services Features","3f472cba":"*Noteworthy Things*\n\n* Having  a tenure  less than about 10 months is effective on Churn\n* People who have monthly bills greater than 60 unit tend to Churn a lot more.","a30e1881":"There are 11 missing values for TotalCharges, missing value ratio is so small so we can remove them.","ceabf7e5":"*Noteworthy Things*\n\n* Churn rate is equal for males and females.\n* Young people are majority of the customers.\n* Churn rate is higher between No-Dependents and No-Partner","fba5acd9":"While No-Churn rate is %73.42, Churn rate is %26.58. There seems to be a slight imbalance in the data."}}