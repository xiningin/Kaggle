{"cell_type":{"36a585bf":"code","89fb306b":"code","41a112af":"code","c0b3f61b":"code","500bd213":"code","27cbf9a8":"code","05d82575":"code","a758d19d":"code","730cd75a":"code","959f7190":"code","c549999e":"code","86e3bed6":"code","e0508aa9":"code","71cc3e4a":"code","2bd7551a":"code","28d78402":"code","26ebb3ab":"code","67234ceb":"code","63af8086":"code","c6330914":"code","d116d64f":"code","6d73d9a9":"code","ce18090f":"code","5fa9970b":"code","3d7fd5b9":"code","cc560f68":"markdown","fd9dd18f":"markdown","176fbaf0":"markdown","293d464c":"markdown","f6c3254e":"markdown","edfd48ea":"markdown","22ed2512":"markdown","0e89e401":"markdown","07bf19f1":"markdown","fa85e66c":"markdown","b4c9c522":"markdown","468a8acf":"markdown","85ff9377":"markdown","d5dc41bb":"markdown","0a3b1345":"markdown","ac56b260":"markdown","3a1d7a84":"markdown"},"source":{"36a585bf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","89fb306b":"df = pd.read_csv('..\/input\/udemy-courses\/udemy_courses.csv')","41a112af":"df.head()","c0b3f61b":"df.info()","500bd213":"df.isnull().sum()","27cbf9a8":"df.describe()","05d82575":"df['published_timestamp'] =  pd.to_datetime(df['published_timestamp'])\ndf['month'] = df['published_timestamp'].dt.month_name()\n\n\nplt.figure(figsize = (18,8))\nsns.set_style(\"darkgrid\")\nax = sns.countplot(df['month'],palette = 'Wistia')\nax.set_xlabel('Month', fontsize = 20)\nax.set_ylabel('No. of Courses', fontsize = 20)\nax.set_title('Month With most Courses', fontsize = 30)\n\nplt.show()\n","a758d19d":"df_bf = df.loc[df['subject'] == \"Business Finance\"]\ndf_wd = df.loc[df['subject'] == \"Web Development\"]\ndf_gd = df.loc[df['subject'] == \"Graphic Design\"]\ndf_mi = df.loc[df['subject'] == \"Musical Instruments\"]","730cd75a":"bf_month = df_bf['month'].value_counts()\nwd_month = df_wd['month'].value_counts()\ngd_month = df_gd['month'].value_counts()\nmi_month = df_mi['month'].value_counts()","959f7190":"plt.rcParams['figure.figsize'] = (18, 8)\nsns.set_style('whitegrid')\nax = sns.lineplot(x = bf_month.index  , y = bf_month.values, linewidth=2.5,label = 'Business Finance')\nax1 = sns.lineplot(x = wd_month.index  , y = wd_month.values, linewidth=2.5,label = \"Web Development\")\nax2 = sns.lineplot(x = gd_month.index  , y = gd_month.values, linewidth=2.5,label = \"Graphic Design\")\nax3 = sns.lineplot(x = mi_month.index  , y = mi_month.values, linewidth=2.5,label = \"Musical Instruments\")\nax.set_xlabel('Month', fontsize =20)\nax.set_ylabel('No. of Courses',fontsize =20)\nax.set_title('Month with most number of Courses(subject wise) ', fontsize = 30)\nplt.show()","c549999e":"df['year'] = df['published_timestamp'].dt.year\n\n\nplt.figure(figsize = (18,8))\n# sns.set_style(\"darkgrid\")\nax = sns.countplot(df['year'],palette = 'bone')\nax.set_xlabel('Year', fontsize = 20)\nax.set_ylabel('No. of Courses', fontsize = 20)\nax.set_title('Year With most Courses', fontsize = 30)\n\nplt.show()","86e3bed6":"def removing_outlier(column, compare_column, dfname):\n\n    q1 = df[column].quantile(0.25)\n    q3 = df[column].quantile(0.75)\n    iqr = q3 - q1\n    lower_limit = q1 - 1.5*iqr\n    upper_limit = q3 + 1.5*iqr\n    \n    dfname = df[(df[column]>lower_limit)  & (df[column]<upper_limit)]\n    \n    plt.figure(figsize = (18,8))\n    ax = sns.boxplot(x = compare_column , y = column, data = dfname)\n    \n    ax.set_xlabel('Subject', fontsize = 20)\n    ax.set_ylabel('Counts of Reviews', fontsize = 20)\n    \n    return plt.show()","e0508aa9":"#Number Reviews Subject Wise\n\nreviews_no_out = ''\nremoving_outlier('num_reviews','subject',reviews_no_out)","71cc3e4a":"#Number Subscribers Subject Wise\n\nsubs_no_out = ''\n\nremoving_outlier('num_subscribers','subject',subs_no_out)","2bd7551a":"#Number of lectures, Subject Wise\n\nlec_no_out = ''\n\nremoving_outlier('num_lectures','subject',lec_no_out)","28d78402":"subs_free = df.loc[(df['num_subscribers']) & (df['is_paid'] == False)]\nsubs_free.sort_values('num_subscribers',ascending = False).head()","26ebb3ab":"gk = df.groupby('subject')\ngk_sum = gk['num_subscribers'].sum()\nlabels = gk_sum.index\nsizes = gk_sum.values\ncolors = plt.cm.rainbow(np.linspace(0,5))\n\n# explode = (0.2,0.1, 0, 0,0,0,0,0,0,0,0,0)\nplt.rcParams['figure.figsize'] = (15,9)\n\nplt.pie(sizes, labels=labels,  autopct='%1.1f%%',shadow=True, startangle=90, colors = colors)\n\nplt.axis('equal')  \nplt.title(\"Level with most lectures\", fontsize =20)\nplt.show()","67234ceb":"def free_courses(subject):\n    df_free =  df.loc[(df['subject'] == subject) & (df['is_paid'] == False)]\n\n    df_free.drop(['is_paid','price','url','published_timestamp'], axis = 1,inplace = True)\n\n    return df_free.sort_values('num_subscribers',ascending = False).head()","63af8086":"free_courses('Business Finance')","c6330914":"free_courses('Graphic Design')","d116d64f":"free_courses('Musical Instruments')","6d73d9a9":"free_courses('Web Development')","ce18090f":"df['popularity'] = df['num_subscribers'] + df['num_reviews']\ndf.sort_values('popularity', ascending=False).head()","5fa9970b":"plt.figure(figsize = (18,8))\nax = sns.countplot(df['subject'], hue = df['level'],palette ='husl')\nax.set_xlabel('Subject', fontsize = 20)\nax.set_ylabel('Counts of Level', fontsize = 20)\n# ax.set_title('Year With most Courses', fontsize = 30)\n\nplt.show()","3d7fd5b9":"plt.style.use('dark_background')\nplt.figure(figsize = (18,8))\nax = sns.lineplot(x = df['subject'], y = df['content_duration'], color = 'gold')\nax.set_xlabel('Subject', fontsize = 20)\nax.set_ylabel('Counts of Level', fontsize = 20)\n\nplt.show()","cc560f68":"# Courses which are free and have more subcribers","fd9dd18f":"# in which year most courses gets uploaded\n","176fbaf0":"# difficulty level for subjects","293d464c":"Best Courses of Musical Instruments","f6c3254e":"Best Courses of Web Development","edfd48ea":"year with most number of upload","22ed2512":"# Subject Analysis","0e89e401":"# Content Duration of Subjects","07bf19f1":"# Subject wise, courses uploaded in which months","fa85e66c":"removing outliers by using IQR","b4c9c522":"Best Courses of Business Finance","468a8acf":"# in which month courses gets uploaded the most","85ff9377":"# Popular Courses","d5dc41bb":"how much courses are getting uploaded of a subject in a particulr month ","0a3b1345":"# which subject has most number of subscribers","ac56b260":"Best Courses of Graphic Design","3a1d7a84":"# Best Courses of Particular Subject"}}