{"cell_type":{"12768ec2":"code","88756a7a":"code","d2e78abb":"code","ffb8a0b3":"code","b33b8a08":"code","fca949b6":"code","0b592cd5":"code","e1437cb7":"code","4af6f93a":"code","a52f15f3":"code","ba98ec78":"code","97c59853":"code","c636667f":"code","27b422ff":"code","c979fe5f":"code","c52cbbb0":"code","2e373a57":"code","9b285a47":"code","9b7c0a4f":"code","f535107d":"code","760db296":"code","6b05cead":"code","f9e15cbb":"code","7e1d908d":"code","781c09db":"code","46a1d740":"code","9631c05c":"code","d4acb02f":"code","6aed58a9":"code","22f52c07":"code","f0b8b84f":"code","07637909":"code","1294eb4b":"code","15538e2b":"code","60d60958":"markdown","bbb6798a":"markdown","08ddf393":"markdown","acd7d546":"markdown","6459da13":"markdown","8d300417":"markdown"},"source":{"12768ec2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","88756a7a":"import matplotlib.pyplot as plt\nimport seaborn as sns","d2e78abb":"df = pd.read_csv('\/kaggle\/input\/house-price-prediction-challenge\/train.csv')\ndf.head()","ffb8a0b3":"df.dtypes","b33b8a08":"df","fca949b6":"df.dtypes","0b592cd5":"numerical_features = ['TARGET(PRICE_IN_LACS)','LATITUDE','LONGITUDE','SQUARE_FT','BHK_NO.']\ncategorical_features = ['UNDER_CONSTRUCTION','RERA','BHK_OR_RK','READY_TO_MOVE','RESALE']","e1437cb7":"from scipy import stats\nfor col in numerical_features:\n        print('The statstics for',col,'is: ')\n        print(df[col].describe())\n        print(\"Trim Mean is:\",stats.trim_mean(df[col],0.2))","4af6f93a":"plt.figure(figsize=(30,30))\ni = 1\nplt.rcParams['font.size'] = 16\nfor col in numerical_features:\n    plt.subplot(3,2,i)\n    i = i + 1\n    ax = sns.boxplot(df[col])\n    IQR = df[col].quantile(0.75) - df[col].quantile(0.25)\n    ax.set_xlim([df[col].quantile(0.25)-2*IQR,df[col].quantile(0.75)+2*IQR])","a52f15f3":"binned = pd.cut(df['TARGET(PRICE_IN_LACS)'],10)\nbinned.value_counts()","ba98ec78":"i = 1\nplt.figure(figsize=(30,30))\nfor col in numerical_features:\n    plt.subplot(3,2,i)\n    i = i + 1\n    ax = sns.distplot(df[col])\n    ax.set_xlabel(col)","97c59853":"i = 1\nplt.figure(figsize=(30,30))\nfor col in numerical_features:\n    plt.subplot(3,2,i)\n    i = i + 1\n    ax = (df[col]\/df[col].max()).plot.hist()\n    ax.set_xlabel(col)","c636667f":"df_numerical = df[numerical_features]\ndf_numerical.head()","27b422ff":"df_numerical.corr()","c979fe5f":"i = 1\nplt.figure(figsize=(30,30))\nfor col in numerical_features:\n    if(col!='TARGET(PRICE_IN_LACS)'):\n        plt.subplot(2,2,i)\n        i = i + 1\n        plt.scatter(df[col],df['TARGET(PRICE_IN_LACS)'])\n        plt.ylabel('TARGET(PRICE_IN_LACS)')\n        plt.ylim([0,1000])\n        plt.xlim([0,df[col].quantile(0.97)])\n        plt.xlabel(col)","c52cbbb0":"i = 1\nplt.figure(figsize=(30,30))\nfor col in numerical_features:\n    if(col!='TARGET(PRICE_IN_LACS)'):\n        plt.subplot(2,2,i)\n        i = i + 1\n        plt.hexbin(df[col],df['TARGET(PRICE_IN_LACS)'],gridsize = 300)\n        plt.ylabel('TARGET(PRICE_IN_LACS)')\n        plt.ylim([0,1000])\n        plt.xlim([0,df[col].quantile(0.97)])\n        plt.xlabel(col)","2e373a57":"df['LOG_TARGET'] = np.log(df['TARGET(PRICE_IN_LACS)'])\nsns.distplot(df['LOG_TARGET'])\nnumerical_features.append('LOG_TARGET')\ndf_numerical = df[numerical_features]","9b285a47":"df['LOG_SQUARE'] = np.log(df['SQUARE_FT'])\nsns.distplot(df['LOG_SQUARE'])\nnumerical_features.append('LOG_SQUARE')\ndf_numerical = df[numerical_features]","9b7c0a4f":"df['LOG_SQUARE'] = np.log(df['SQUARE_FT'])\nsns.distplot(df['LOG_SQUARE'])\nnumerical_features.append('LOG_SQUARE')\ndf_numerical = df[numerical_features]","f535107d":"df_numerical.corr()","760db296":"i = 1\nfor category in categorical_features:\n    for numeric in numerical_features:\n        ax = df.boxplot(by = category,column=numeric,figsize=(7,5))\n        IQR = (df[numeric].quantile(0.75)-df[numeric].quantile(0.25))\n        ax.set_ylim([df[numeric].quantile(0.25)-1.45*IQR,df[numeric].quantile(0.75)+1.45*IQR])\n        ","6b05cead":"for i in range(len(categorical_features)):\n    for j in range(i+1,len(categorical_features)):\n        print(pd.pivot_table(data = df,index=categorical_features[i],columns=categorical_features[j],aggfunc=lambda x: len(x),margins = True)['ADDRESS'])","f9e15cbb":"categorical_cols = ['UNDER_CONSTRUCTION','RERA','BHK_OR_RK','READY_TO_MOVE','RESALE']\ni = 1\nplt.rcParams['font.size'] = 16\nplt.figure(figsize = (30,30))\nfor col in categorical_cols:\n    table = df[col].value_counts()\n    plt.subplot(3,2,i)\n    i = i + 1\n    ax = table.plot.bar()\n    ax.set_xlabel(col)","7e1d908d":"df['BHK_OR_RK'].replace(['BHK','RK'],[0,1],inplace = True)","781c09db":"df.corr()","46a1d740":"#df2 = df[['LOG_TARGET','LOG_SQUARE','BHK_NO.']]\ndf2 = df.drop(columns=['ADDRESS','POSTED_BY','TARGET(PRICE_IN_LACS)','SQUARE_FT'])\ndf2.columns","9631c05c":"from sklearn.linear_model import LinearRegression\nx = np.array(df2.drop(columns = ['LOG_TARGET']))\ny = np.array(df2['LOG_TARGET'])\ny = y.reshape((y.shape[0],1))\nprint(x.shape,y.shape)","d4acb02f":"from sklearn.model_selection import train_test_split as tts\nfrom sklearn.preprocessing import PolynomialFeatures,StandardScaler\nss = StandardScaler()\nx1 = ss.fit_transform(x)\npr = PolynomialFeatures(degree=2)\nx2 = pr.fit_transform(x1)\nprint(x2.shape)\nx_train,x_test,y_train,y_test = tts(x2,y,test_size=0.2,random_state=10)\nlr = LinearRegression()\nlr.fit(x_train,y_train)\nprint(lr.score(x_train,y_train))\nprint(lr.score(x_test,y_test))","6aed58a9":"x_train1,x_test1,y_train1,y_test1 = tts(x1,y,test_size=0.2,random_state=10)\nfrom sklearn.ensemble import RandomForestRegressor\ndtr = RandomForestRegressor(max_depth=15)\ndtr.fit(x_train1,y_train1)\nprint(dtr.score(x_train1,y_train1))\nprint(dtr.score(x_test1,y_test1))","22f52c07":"df_test = pd.read_csv('\/kaggle\/input\/house-price-prediction-challenge\/test.csv')\ndf_test.columns","f0b8b84f":"df_test['BHK_OR_RK'].replace(['BHK','RK'],[0,1],inplace = True)\ndf_test['LOG_SQUARE'] = np.log(df_test['SQUARE_FT'])\ndf_test2 = df_test[['UNDER_CONSTRUCTION', 'RERA', 'BHK_NO.', 'BHK_OR_RK', 'READY_TO_MOVE','RESALE', 'LONGITUDE', 'LATITUDE', 'LOG_SQUARE']]\ndf_test2.columns","07637909":"x_submit = np.array(df_test2)\ny_submit = dtr.predict(x_submit)\nprint(y_submit.shape)","1294eb4b":"df_submit = pd.read_csv('\/kaggle\/input\/house-price-prediction-challenge\/sample_submission.csv')\ndf_submit.head()","15538e2b":"y_submit = np.exp(y_submit)\ndf_my_submit = pd.DataFrame(y_submit,columns=['TARGET(PRICE_IN_LACS)'])\ndf_my_submit.to_csv('Submission.csv')","60d60958":"For BHK_no. we see mean to be 2.3 and median to be 2, so we can raw conclusion that central tendency for the feature is 2. (discrete)\nIf we observe for square ft area, the value of mean is 1.980217e+04 and the value od median is 1.175057e+03. The value of trimmed mean is 1196.8651459922414. Therefore, we can deduce that the value of central tendency for the feature should be between 1175.057 and 1196.865 m^2. (continous)\nThe central tendency for longitude is around 21 and for latitude is 76-77. (Continous) We can expect outliers in both the features, as we observe very high max and very low minimas.\nFor the target price, we see there is a large dufference between the mean and median. And very less difference between trimmed mean and median. Therefore we could assume the central tendency of the taregt price to be between 62-65 lacs.\n","bbb6798a":"From the above data type description and by observing the head of the data frame, we can classify the given data as: <br>\n1.) Numerical Features:<br>\n     a.) BHK_NO.<br>\n     b.) SQUARE_FT<br>\n     c.) LONGITUDE<br>\n     d.) LATITUDE<br>\n     e.) TARGET(PRICE_IN_LACS)<br><br>\n2.) Categorical Features:<br>\n     a.) UNDER_CONSTRUCTION<br>\n     b.) RERA<br>\n     c.) BHK_OR_RK<br>\n     d.) READY_TO_MOVE<br>\n     e.) RESALE<br>","08ddf393":"1.) Contigency Table","acd7d546":"**Statistics for Categorical Variable**","6459da13":"2.) Bar Chart","8d300417":"**Statstics for Numerical Features:**"}}