{"cell_type":{"a854e268":"code","7e151277":"code","769dde38":"code","c5b6fa62":"code","20507203":"code","51bcb44a":"code","f93e5e16":"code","46566a74":"code","0ea5584c":"code","c443d91c":"code","b1178d16":"code","d4a9aa7f":"code","6f2be407":"code","e07f0c17":"code","17127085":"code","29f1b8bb":"code","f663f104":"code","b9c74c29":"code","566786cb":"code","77384bda":"code","6a48d60d":"code","fa8210d9":"code","aed68358":"code","1731ad02":"code","fa8bf9fd":"code","644760b7":"code","1d3b00c2":"code","a8f5c28e":"code","a5462d83":"code","7c9d2cbd":"code","f1b7f229":"code","ea1815d5":"code","6270107b":"code","69d7c407":"code","aeded1c4":"code","636a4218":"code","31d78920":"code","418342ed":"code","663fb8b0":"markdown"},"source":{"a854e268":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7e151277":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\npd.pandas.set_option('display.max_columns', None)\n\n\n","769dde38":"df = pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf","c5b6fa62":"df.shape","20507203":"df.isnull().sum()","51bcb44a":"#To plot pie chart\n\ncounts = df['Genre'].value_counts().sort_index()\nprint(counts)\n# Plot a pie chart\nplt.figure(figsize = (10,8))\nplt.pie(df['Genre'].value_counts(), labels = df['Genre'].value_counts().index, autopct=\"%.1f%%\")\n\nplt.show()\n","f93e5e16":"df.describe()","46566a74":"df[df['Price'] == df['Price'].max()] \n","0ea5584c":"df[df['Price'] == df['Price'].min()] \n","c443d91c":"df[df['Price'] == df['Price'].min()]['Name'].unique()\n","b1178d16":"df[df['Reviews'] == df['Reviews'].max()] \n","d4a9aa7f":"df[df['Reviews'] == df['Reviews'].min()] \n","6f2be407":"df[df['User Rating'] == df['User Rating'].max()] \n","e07f0c17":"df[df['User Rating'] == df['User Rating'].max()]['Name'].unique()\n","17127085":"df[df['User Rating'] == df['User Rating'].max()]['Name'].unique().shape\n","29f1b8bb":"df[df['User Rating'] == df['User Rating'].min()] \n","f663f104":"\nplt.figure(figsize = (10,7))\nchains = df['Author'].value_counts()[:13] #top 13\nsns.barplot(x = chains, y = chains.index)\nplt.title(\"Most popular Authors\")\nplt.xlabel(\"Count\")\n","b9c74c29":"#Top 20 categories in a col based on value_counts\n\nplt.figure(figsize = (10,7))\nchains = df['Name'].value_counts()[:20] #top 20\nsns.barplot(x = chains, y = chains.index)\nplt.title(\"Most popular Books\")\nplt.xlabel(\"Count\")\n","566786cb":"df[df['Author'] == 'Jeff Kinney']","77384bda":"df[df['Author'] == 'Jeff Kinney']['Name'].unique()","6a48d60d":"df[df['Name'] == 'Publication Manual of the American Psychological Association, 6th Edition']","fa8210d9":"# To plot the correlation chart\n\ncorrelations = df.corr()\nf,ax = plt.subplots(figsize=(10,10))\nsns.heatmap(correlations, annot = True)\n","aed68358":"\ndf.hist(figsize=(16,20),bins = 50)\n\n","1731ad02":"df_fiction = df[df['Genre'] == 'Fiction']\ndf_nonFiction = df[df['Genre'] == 'Non Fiction']","fa8bf9fd":"df_fiction.shape","644760b7":"df_nonFiction.shape","1d3b00c2":"df_fiction.describe()","a8f5c28e":"df_nonFiction.describe()","a5462d83":"\nplt.figure(figsize = (10,7))\nchains = df_fiction['Author'].value_counts()[:11] #top 11\nsns.barplot(x = chains, y = chains.index)\nplt.title(\"Most popular Authors (Fiction)\")\nplt.xlabel(\"Count\")\n","7c9d2cbd":"\nplt.figure(figsize = (10,7))\nchains = df_nonFiction['Author'].value_counts()[:9] #top 9\nsns.barplot(x = chains, y = chains.index)\nplt.title(\"Most popular Authors (Non Fiction)\")\nplt.xlabel(\"Count\")\n","f1b7f229":"df[df['Author'] == 'Gary Chapman']","ea1815d5":"df[df['Author'] == 'Gary Chapman']['Name'].unique()","6270107b":"\nplt.figure(figsize = (10,7))\nchains = df_fiction['Name'].value_counts()[:9] #top 9\nsns.barplot(x = chains, y = chains.index)\nplt.title(\"Most popular Books (Fiction)\")\nplt.xlabel(\"Count\")\n","69d7c407":"\nplt.figure(figsize = (10,7))\nchains = df_nonFiction['Name'].value_counts()[:13] #top 13\nsns.barplot(x = chains, y = chains.index)\nplt.title(\"Most popular Books (Non Fiction)\")\nplt.xlabel(\"Count\")\n","aeded1c4":"# To plot the correlation chart\n\ncorrelations = df_fiction.corr()\nf,ax = plt.subplots(figsize=(10,10))\nsns.heatmap(correlations, annot = True)\nplt.title('Fiction')","636a4218":"# To plot the correlation chart\n\ncorrelations = df_nonFiction.corr()\nf,ax = plt.subplots(figsize=(10,10))\nsns.heatmap(correlations, annot = True)\nplt.title('Non Fiction')","31d78920":"\ndf_fiction.hist(figsize=(16,20),bins = 50)\nplt.title('Fiction')\n","418342ed":"\ndf_nonFiction.hist(figsize=(16,20),bins = 50)\nplt.title('Non Fiction')\n","663fb8b0":"# Fiction vs Non Fiction"}}