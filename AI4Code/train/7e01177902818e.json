{"cell_type":{"7bea0bb2":"code","de43ab94":"code","ac8e7f60":"code","436de986":"code","f3a6b6d0":"code","81285370":"code","e1a009f1":"code","2de342ac":"code","11d2882a":"code","01eda551":"code","2344278f":"code","287dce62":"code","56559327":"code","5809e3ae":"markdown","0d35b0fd":"markdown"},"source":{"7bea0bb2":"import matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np\nimport pandas as pd\n%matplotlib inline","de43ab94":"plt.style.use('seaborn-whitegrid')","ac8e7f60":"dataset = pd.read_csv('..\/input\/births\/births.csv')","436de986":"quartiles = np.percentile(dataset['births'], [25, 50, 75])\nmu, sig = quartiles[1], 0.74 * (quartiles[2] - quartiles[0])\ndataset = dataset.query('(births > @mu - 5* @sig) & (births < @mu + 5 * @sig)')\ndataset['day'] = dataset['day'].astype(int)","f3a6b6d0":"dataset.index = pd.to_datetime(10000 * dataset.year + 100 * dataset.month + dataset.day, format = '%Y%m%d')","81285370":"dataset_by_date = dataset.pivot_table('births', [dataset.index.month, dataset.index.day])","e1a009f1":"dataset_by_date.index = [pd.datetime(2012, month, day) for(month, day) in dataset_by_date.index]","2de342ac":"fig, ax = plt.subplots(figsize = (12, 4))\ndataset_by_date.plot(ax = ax)","11d2882a":"fig, ax = plt.subplots(figsize = (10, 8))\ndataset_by_date.plot(ax = ax)\nstyle = dict(size = 10, color = 'gray')\nax.text('2012-1-1', 3950, \"New Year's Day\", **style)\nax.text('2012-7-4', 4250, \"Independance Day\", ha = \"center\", **style)\nax.text('2012-9-4', 4850, \"Labor Day\", ha = \"center\", **style)\nax.text('2012-10-31', 4600, \"Halloween\", ha = 'right', **style)\nax.text('2012-11-25', 4450, \"Thanksgiving\", ha = 'center', **style)\nax.text('2012-12-25', 3850, \"Christmas\", ha = 'right', **style)\n\nax.set(title = \"USA births by day of year (1969-1988)\", ylabel = \"average daily births\")\n\nax.xaxis.set_major_locator(mpl.dates.MonthLocator())\nax.xaxis.set_minor_locator(mpl.dates.MonthLocator(bymonthday = 15))\nax.xaxis.set_major_formatter(plt.NullFormatter())\nax.xaxis.set_minor_formatter(mpl.dates.DateFormatter('%h'))","01eda551":"fig, ax = plt.subplots(facecolor = \"lightgray\")\nax.axis = ([0, 10, 0, 10])\nax.text(1, 5, \". Data: (1, 5)\", transform = ax.transData)\nax.text(0.5, 0.1, \". Axes: (0.5, 0.1)\", transform = ax.transAxes)\nax.text(0.2, 0.2, \". Figure: (0.2, 0.2)\", transform = fig.transFigure)","2344278f":"%matplotlib inline\nfig, ax = plt.subplots()\nx = np.linspace(0, 20, 1000)\nax.plot(x, np.cos(x))\nax.axis('equal')\nax.annotate('local maximum', xy=(6.28, 1), xytext=(10, 4),\narrowprops=dict(facecolor='black', shrink=0.05))\nax.annotate('local minimum', xy=(5 * np.pi, -1), xytext=(2, -6),\narrowprops=dict(arrowstyle=\"->\",\nconnectionstyle=\"angle3,angleA=0,angleB=-90\"));","287dce62":"fig, ax = plt.subplots(figsize=(12, 8))\ndataset_by_date.plot(ax=ax)\n# Add labels to the plot\nax.annotate(\"New Year's Day\", xy=('2012-1-1', 4100), xycoords='data',\nxytext=(50, -30), textcoords='offset points',\narrowprops=dict(arrowstyle=\"->\",\nconnectionstyle=\"arc3,rad=-0.2\"))\nax.annotate(\"Independence Day\", xy=('2012-7-4', 4250), xycoords='data',\nbbox=dict(boxstyle=\"round\", fc=\"none\", ec=\"gray\"),xytext=(10, -40), textcoords='offset points', ha='center',arrowprops=dict(arrowstyle=\"->\"))\n\nax.annotate('Labor Day', xy=('2012-9-4', 4850), xycoords='data', ha='center',\n            xytext=(0, -20), textcoords='offset points')\nax.annotate('', xy=('2012-9-1', 4850), xytext=('2012-9-7', 4850),\n            xycoords='data', textcoords='data',\narrowprops={'arrowstyle': '|-|,widthA=0.2,widthB=0.2', })\nax.annotate('Halloween', xy=('2012-10-31', 4600), xycoords='data',\nxytext=(-80, -40), textcoords='offset points',\narrowprops=dict(arrowstyle=\"fancy\",\nfc=\"0.6\", ec=\"none\",\nconnectionstyle=\"angle3,angleA=0,angleB=-90\"))\nax.annotate('Thanksgiving', xy=('2012-11-25', 4500), xycoords='data',\n            xytext=(-120, -60), textcoords='offset points',\nbbox=dict(boxstyle=\"round4,pad=.5\", fc=\"0.9\"),\narrowprops=dict(arrowstyle=\"->\",\nconnectionstyle=\"angle,angleA=0,angleB=80,rad=20\"))\nax.annotate('Christmas', xy=('2012-12-25', 3850), xycoords='data',\n            xytext=(-30, 0), textcoords='offset points',\nsize=13, ha='right', va=\"center\",\nbbox=dict(boxstyle=\"round\", alpha=0.1),\narrowprops=dict(arrowstyle=\"wedge,tail_width=0.5\", alpha=0.1));\n# Label the axes\nax.set(title='USA births by day of year (1969-1988)',\nylabel='average daily births')\n# Format the x axis with centered month labels\nax.xaxis.set_major_locator(mpl.dates.MonthLocator())\nax.xaxis.set_minor_locator(mpl.dates.MonthLocator(bymonthday=15))\nax.xaxis.set_major_formatter(plt.NullFormatter())\nax.xaxis.set_minor_formatter(mpl.dates.DateFormatter('%h'));\nax.set_ylim(3600, 5400);","56559327":"import matplotlib.pyplot as plt\nfrom matplotlib.patches import Ellipse\nimport numpy as np\n\n\nfig = plt.figure(1, figsize=(8, 5))\nax = fig.add_subplot(111, autoscale_on=False, xlim=(-1, 5), ylim=(-4, 3))\n\nt = np.arange(0.0, 5.0, 0.01)\ns = np.cos(2*np.pi*t)\nline, = ax.plot(t, s, lw=3)\n\nax.annotate('straight',\n            xy=(0, 1), xycoords='data',\n            xytext=(-50, 30), textcoords='offset points',\n            arrowprops=dict(arrowstyle=\"->\"))\n\nax.annotate('arc3,\\nrad 0.2',\n            xy=(0.5, -1), xycoords='data',\n            xytext=(-80, -60), textcoords='offset points',\n            arrowprops=dict(arrowstyle=\"->\",\n                            connectionstyle=\"arc3,rad=.2\"))\n\nax.annotate('arc,\\nangle 50',\n            xy=(1., 1), xycoords='data',\n            xytext=(-90, 50), textcoords='offset points',\n            arrowprops=dict(arrowstyle=\"->\",\n                            connectionstyle=\"arc,angleA=0,armA=50,rad=10\"))\n\nax.annotate('arc,\\narms',\n            xy=(1.5, -1), xycoords='data',\n            xytext=(-80, -60), textcoords='offset points',\n            arrowprops=dict(arrowstyle=\"->\",\n                            connectionstyle=\"arc,angleA=0,armA=40,angleB=-90,armB=30,rad=7\"))\n\nax.annotate('angle,\\nangle 90',\n            xy=(2., 1), xycoords='data',\n            xytext=(-70, 30), textcoords='offset points',\n            arrowprops=dict(arrowstyle=\"->\",\n                            connectionstyle=\"angle,angleA=0,angleB=90,rad=10\"))\n\nax.annotate('angle3,\\nangle -90',\n            xy=(2.5, -1), xycoords='data',\n            xytext=(-80, -60), textcoords='offset points',\n            arrowprops=dict(arrowstyle=\"->\",\n                            connectionstyle=\"angle3,angleA=0,angleB=-90\"))\n\nax.annotate('angle,\\nround',\n            xy=(3., 1), xycoords='data',\n            xytext=(-60, 30), textcoords='offset points',\n            bbox=dict(boxstyle=\"round\", fc=\"0.8\"),\n            arrowprops=dict(arrowstyle=\"->\",\n                            connectionstyle=\"angle,angleA=0,angleB=90,rad=10\"))\n\nax.annotate('angle,\\nround4',\n            xy=(3.5, -1), xycoords='data',\n            xytext=(-70, -80), textcoords='offset points',\n            size=20,\n            bbox=dict(boxstyle=\"round4,pad=.5\", fc=\"0.8\"),\n            arrowprops=dict(arrowstyle=\"->\",\n                            connectionstyle=\"angle,angleA=0,angleB=-90,rad=10\"))\n\nax.annotate('angle,\\nshrink',\n            xy=(4., 1), xycoords='data',\n            xytext=(-60, 30), textcoords='offset points',\n            bbox=dict(boxstyle=\"round\", fc=\"0.8\"),\n            arrowprops=dict(arrowstyle=\"->\",\n                            shrinkA=0, shrinkB=10,\n                            connectionstyle=\"angle,angleA=0,angleB=90,rad=10\"))\n\n# You can pass an empty string to get only annotation arrows rendered\nann = ax.annotate('', xy=(4., 1.), xycoords='data',\n                  xytext=(4.5, -1), textcoords='data',\n                  arrowprops=dict(arrowstyle=\"<->\",\n                                  connectionstyle=\"bar\",\n                                  ec=\"k\",\n                                  shrinkA=5, shrinkB=5))\n\n\nfig = plt.figure(2)\nfig.clf()\nax = fig.add_subplot(111, autoscale_on=False, xlim=(-1, 5), ylim=(-5, 3))\n\nel = Ellipse((2, -1), 0.5, 0.5)\nax.add_patch(el)\n\nax.annotate('$->$',\n            xy=(2., -1), xycoords='data',\n            xytext=(-150, -140), textcoords='offset points',\n            bbox=dict(boxstyle=\"round\", fc=\"0.8\"),\n            arrowprops=dict(arrowstyle=\"->\",\n                            patchB=el,\n                            connectionstyle=\"angle,angleA=90,angleB=0,rad=10\"))\n\nax.annotate('arrow\\nfancy',\n            xy=(2., -1), xycoords='data',\n            xytext=(-100, 60), textcoords='offset points',\n            size=20,\n            # bbox=dict(boxstyle=\"round\", fc=\"0.8\"),\n            arrowprops=dict(arrowstyle=\"fancy\",\n                            fc=\"0.6\", ec=\"none\",\n                            patchB=el,\n                            connectionstyle=\"angle3,angleA=0,angleB=-90\"))\n\nax.annotate('arrow\\nsimple',\n            xy=(2., -1), xycoords='data',\n            xytext=(100, 60), textcoords='offset points',\n            size=20,\n            # bbox=dict(boxstyle=\"round\", fc=\"0.8\"),\n            arrowprops=dict(arrowstyle=\"simple\",\n                            fc=\"0.6\", ec=\"none\",\n                            patchB=el,\n                            connectionstyle=\"arc3,rad=0.3\"))\n\nax.annotate('wedge',\n            xy=(2., -1), xycoords='data',\n            xytext=(-100, -100), textcoords='offset points',\n            size=20,\n            # bbox=dict(boxstyle=\"round\", fc=\"0.8\"),\n            arrowprops=dict(arrowstyle=\"wedge,tail_width=0.7\",\n                            fc=\"0.6\", ec=\"none\",\n                            patchB=el,\n                            connectionstyle=\"arc3,rad=-0.3\"))\n\nann = ax.annotate('bubble,\\ncontours',\n                  xy=(2., -1), xycoords='data',\n                  xytext=(0, -70), textcoords='offset points',\n                  size=20,\n                  bbox=dict(boxstyle=\"round\",\n                            fc=(1.0, 0.7, 0.7),\n                            ec=(1., .5, .5)),\n                  arrowprops=dict(arrowstyle=\"wedge,tail_width=1.\",\n                                  fc=(1.0, 0.7, 0.7), ec=(1., .5, .5),\n                                  patchA=None,\n                                  patchB=el,\n                                  relpos=(0.2, 0.8),\n                                  connectionstyle=\"arc3,rad=-0.1\"))\n\nann = ax.annotate('bubble',\n                  xy=(2., -1), xycoords='data',\n                  xytext=(55, 0), textcoords='offset points',\n                  size=20, va=\"center\",\n                  bbox=dict(boxstyle=\"round\", fc=(1.0, 0.7, 0.7), ec=\"none\"),\n                  arrowprops=dict(arrowstyle=\"wedge,tail_width=1.\",\n                                  fc=(1.0, 0.7, 0.7), ec=\"none\",\n                                  patchA=None,\n                                  patchB=el,\n                                  relpos=(0.2, 0.5)))\n\nplt.show()","5809e3ae":"### Text Position","0d35b0fd":"### Dataset Loading"}}