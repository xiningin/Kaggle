{"cell_type":{"a666c9ac":"code","39a7adda":"code","22603b25":"code","dd9c4b38":"code","3f0b77f4":"code","800b0d6c":"code","e0057d5c":"code","8e71d818":"code","3cb4cf75":"code","62c9ef1d":"code","1a6e0ad8":"code","78cc1a2f":"code","877608e5":"code","edc38d6c":"code","0c5bb9fe":"code","774265fd":"code","96f3903f":"code","ad9419db":"code","f2f3255d":"code","88afe5cd":"code","c647742d":"code","5ed88ffa":"code","f6c14102":"code","9578ea79":"code","ceabc505":"code","d8150c6e":"code","f81c384a":"code","9b890642":"code","72e59d6e":"code","ca96970f":"code","e87e047e":"markdown","b668b925":"markdown","7168a290":"markdown","f3ebab84":"markdown","b59c5408":"markdown","b9460351":"markdown","63aec7f4":"markdown","55699248":"markdown","9fabb326":"markdown","d87bbc2c":"markdown","8494e0d2":"markdown","81dd737b":"markdown","4e4bc876":"markdown","52c7b1eb":"markdown","a433097c":"markdown","4de8d0c9":"markdown","6f90b8ca":"markdown","28149ac2":"markdown","46c71725":"markdown","1286f72b":"markdown","5f0804e3":"markdown","066cbd85":"markdown","cb1d4b4f":"markdown"},"source":{"a666c9ac":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D\nfrom keras.layers import MaxPooling2D\nfrom keras.layers import Flatten\nfrom keras.layers import Dense","39a7adda":"train = pd.read_csv(\"..\/input\/train.csv\")\ntest = pd.read_csv(\"..\/input\/test.csv\")","22603b25":"#exploring the data\ntrain.head()","dd9c4b38":"train.shape","3f0b77f4":"test.head()","800b0d6c":"test.shape","e0057d5c":"train_images=train.iloc[:,1:].values \n#.values is used to convert dataframe to numpy for better accesibility ","8e71d818":"train_labels=train.iloc[:,:1].values","3cb4cf75":"test_images=test.values","62c9ef1d":"np.max(train_images)","1a6e0ad8":"train_images=train_images\/255.\ntest_images=test_images\/255.","78cc1a2f":"test_images.shape","877608e5":"train_images.shape","edc38d6c":"train_images=train_images.reshape(train_images.shape[0],28,28)\ntrain_images.shape","0c5bb9fe":"test_images=test_images.reshape(test_images.shape[0],28,28)\ntest_images.shape","774265fd":"plt.figure(figsize=(10,10))\nplt.imshow(train_images[1])","96f3903f":"plt.figure(figsize=(10,10))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.imshow(train_images[i])\n    plt.xlabel(train_labels[i])\n    plt.xticks([])\n    plt.yticks([])","ad9419db":"train_images=train_images.reshape(train_images.shape[0],28,28,1)\ntest_images=test_images.reshape(test_images.shape[0],28,28,1)","f2f3255d":"classifier=Sequential()","88afe5cd":"classifier.add(Conv2D(32,(3,3), input_shape=(28, 28,1), activation='relu'))","c647742d":"classifier.add(MaxPooling2D(pool_size=(2,2)))","5ed88ffa":"classifier.add(Flatten())","f6c14102":"classifier.add(Dense(activation='relu',units=128))","9578ea79":"classifier.add(Dense(units=10,activation='softmax'))","ceabc505":"classifier.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])","d8150c6e":"from keras.preprocessing.image import ImageDataGenerator\ndatagen = ImageDataGenerator(rotation_range=8, width_shift_range=0.08, shear_range=0.3,\n                               height_shift_range=0.08, zoom_range=0.08)","f81c384a":"from sklearn.model_selection import train_test_split\nX = train_images\ny = train_labels\ntrain_images1, X_val, train_labels1, y_val = train_test_split(train_images, train_labels, test_size=0.10, random_state=42)\nbatches = datagen.flow(train_images, train_labels, batch_size=64)\nval_batches=datagen.flow(X_val, y_val, batch_size=64)","9b890642":"history=classifier.fit_generator(generator=batches, steps_per_epoch=batches.n, epochs=2, \n                    validation_data=val_batches, validation_steps=val_batches.n)","72e59d6e":"predictions = classifier.predict_classes(test_images)","ca96970f":"submissions=pd.DataFrame({\"ImageId\": list(range(1,len(predictions)+1)),\"Label\": predictions})\nsubmissions.to_csv('digit_submission3.csv', index=False, header=True)","e87e047e":"Feature detector: Filter, Kernel, or Feature Detector is a small matrix used for features detection.\n\nConvolutional layer compares the raw data against the feature detector and store the count of matched 1's in the feature map. This reduces the no of inputs.\n\n![image.png](attachment:image.png)\n\nAfter the the convolution, We apply rectified linear unit (ReLU) inorder to remove linearity or increase non linearity in our images","b668b925":"## 4. Scaling","7168a290":"### 6.6. Compile the CNN","f3ebab84":"### 5.2. Visualize the first 25 train images","b59c5408":"## 2. Load the train and test data","b9460351":"### 8. Submitting the predictions","63aec7f4":"1. ### 5.1. Visualize the train image","55699248":"### 6.2. Create Convolution layer","9fabb326":"### 6.4. Creating hidden layer","d87bbc2c":"## 1. Importing necessary libaries","8494e0d2":"# Digit recognization for everyone - 0.99","81dd737b":"### 6.5. Creating output layer","4e4bc876":"### 6.3. Create MaxPooling Layer","52c7b1eb":"Pooling layer is used to capture distinctive feature of an object even if the image is rotated, tiled, posing different pose, different lightining","a433097c":"Data Augmentation is technique of creating slightly different or new images of your input image. Data Augumentation avoids overfitting. Model performs well when we create more training images.\n\nThere are many ways to perform data augmentation,\n* Cropping\n* Rotating\n* Scaling\n* Translating\n* Flipping","4de8d0c9":"You can also increase the number of epochs for better predictions. But it also increases the execution time","6f90b8ca":"## 3. Splitting the dependent and independent variables","28149ac2":"## 5. Visualize the Data","46c71725":"## 6. CNN Deep learning model building","1286f72b":"Reshaping the train and test images","5f0804e3":"Before visualize the image data we have to change the dimensional data. because displaying the image data we need to have 3 dimension","066cbd85":"### 6.1. Initialize the CNN model","cb1d4b4f":"### 7. Data Augmentation"}}