{"cell_type":{"859b540a":"code","a7c80a3f":"code","80119975":"code","d16529fc":"code","bf19de1a":"code","421475a6":"code","f6865076":"code","0ab73c1f":"code","9beb2e72":"code","7e4e4a21":"code","f68d5686":"code","d0b9f7d4":"code","3ed2d491":"markdown","d4ec4d11":"markdown","4b9cdbb9":"markdown","bf7e7569":"markdown","12a9d153":"markdown","c21d66d3":"markdown","bedb511b":"markdown","f86e6003":"markdown"},"source":{"859b540a":"!pip install bar_chart_race\n!pip install fbprophet","a7c80a3f":"# Pacotes de an\u00e1lise de dados:\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport bar_chart_race as bcr\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Pacote de forecast Facebook Prophet:\nimport fbprophet\nfrom fbprophet.plot import plot_plotly, plot_components_plotly\nfrom sklearn.metrics import r2_score, mean_absolute_error\n\n# Pacote para desenvolvimento em Python:\nimport tqdm as tqdm\nimport warnings\nwarnings.simplefilter(\"ignore\")","80119975":"# Entrada de dados:\ndf=pd.read_csv(\"..\/input\/estimated-gasoline-sales\/Estimated_Gasoline_Sales__Beginning_1995.csv\")","d16529fc":"# Dados de datas:\ndf = df.assign(Month=12,Day=31)\ndf.Month = df.Month.astype(str)\ndf.Day = df.Day.astype(str)\ndf.Year = df.Year.astype(str)\ndf = df.assign(ds=(df[\"Year\"].map(str) + \" \" + df[\"Month\"].map(str) + \" \" + df[\"Day\"].map(str)),y= df[\"Estimated Sales, Thousands of Gallons\"])\ndf.ds = pd.to_datetime(df.ds,format='%Y-%m-%d')\n\n# Dados dos condados:\ndf = df[~df[\"County\"].str.contains('Total')]\ndf = df[df[\"County\"]!= \"New York State\"]\ndf = df[df[\"County\"]!= \"Alleghany\"] #Allegany ajustar o nome da cidade","bf19de1a":"pd.DataFrame(df[\"Estimated Sales, Thousands of Gallons\"].describe()).transpose().round(2)","421475a6":"sns.relplot(kind='line',x='Year',y='Estimated Sales, Thousands of Gallons',data=df,col='County',col_wrap=4,facet_kws={'sharey': False, 'sharex': True})\nplt.show()","f6865076":"base = df.pivot(index='Year', columns='County', values='Estimated Sales, Thousands of Gallons')\nbcr.bar_chart_race(df=base, \n                   n_bars=15, \n                   fixed_max=True,\n                   perpendicular_bar_func='mean',\n                   steps_per_period=8,\n                   cmap='antique',\n                   title='Estimated New York State Gasoline Sales',\n                   shared_fontdict={'family': 'Helvetica', 'weight': 'bold',\n                                    'color': 'rebeccapurple'})","0ab73c1f":"# Fun\u00e7\u00e3o de forecast - prophet - facebook:\ndef fun_train_model(df,cidade):\n    # Parametros da fun\u00e7\u00e3o:\n    cidades = df[cidade].unique()\n    data4 = []\n    \n    # Forecast com Prophet:\n    for i in cidades:\n        # Prepara\u00e7\u00e3o dos dados:\n        data = df[df.County == i].sort_values(by = \"ds\")\n        dataf = data[['ds','y']]\n\n        # Modelagem de series temporais:\n        m = fbprophet.Prophet(yearly_seasonality=True,weekly_seasonality=False,daily_seasonality=False,changepoint_prior_scale=1.5,seasonality_mode = 'additive')\n        m.add_seasonality(name='yearly',period=1,fourier_order=10)\n        m.fit(dataf)\n        \n        # Previs\u00e3o:\n        future = m.make_future_dataframe(periods=2,freq = \"Y\")\n        forecast = m.predict(future)\n        data2 = forecast[['ds','yhat','yhat_upper','yhat_lower']].round(2).head(len(dataf))\n        print(\"County:\" + i)\n        #plot_plotly(m, forecast).show()\n        \n        # Base de resultados:\n        data3 = data2.assign(y = dataf[\"y\"].tolist(),County = i)\n        \n        # M\u00e9tricas do treinamento:\n        print(\"M\u00e9tricas do treinamento:\")\n        print('r2: {}'.format(r2_score(y_true=data3['y'], y_pred=data3['yhat'].head(22)).round(2)))\n        print('mae: {}'.format(mean_absolute_error(y_true=data3['y'], y_pred=data3['yhat'].head(22)).round(2)))\n        print('rmse: {}'.format(np.sqrt(mean_absolute_error(y_true=data3['y'], y_pred=data3['yhat'].head(22)).round(2))),\"\\n\")            \n        \n        # Criando base de dados com os resultados:\n        data4.append(data3)\n        \n    # Cria\u00e7\u00e3o do dataframe com os resultados\n    data6 = pd.concat(data4,axis=0,ignore_index=True)\n    return data6","9beb2e72":"amostra = df[(df.County == \"Orange\") | (df.County == \"Genesee\")].sort_values(by = \"ds\")\namostra = amostra.reset_index(drop=True)","7e4e4a21":"base = fun_train_model(df,\"County\")","f68d5686":"base.head(2)","d0b9f7d4":"base.tail(2)","3ed2d491":"#### Entrada de dados:\n---","d4ec4d11":"### Previs\u00e3o de venda de gasolina em gal\u00f5es no estado de Nova York usando a api Prophet - Facebook:\n---\n#### Sites para referencia:\n---\n##### Bar chart race: https:\/\/www.dexplo.org\/bar_chart_race\/data_preparation\/\n##### Forecast Prophet: https:\/\/juanitorduz.github.io\/fb_prophet\/\n___\n\n#### Processos de an\u00e1lise:\n---\n##### 1 - Configura\u00e7\u00e3o do notebook. \n\n##### 2 - Entrada de dados.\n\n##### 3 - Transforma\u00e7\u00e3o de dados.\n\n##### 4 - Modelagem de series temporais no Prophet.\n\n##### 5 - Previs\u00e3o de vendas.\n\n##### 6 - An\u00e1lise gr\u00e1fica.\n---","4b9cdbb9":"#### Transforma\u00e7\u00e3o de dados:\n---","bf7e7569":"#### An\u00e1lise explor\u00e1toria de dados:\n---","12a9d153":"#### Configura\u00e7\u00e3o do notebook:\n---","c21d66d3":"#### Forecast - Prophet - Facebook:\n---","bedb511b":"#### Forecast pelas cidades:\n---","f86e6003":"#### Amostras de cidades:\n---"}}