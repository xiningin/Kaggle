{"cell_type":{"256bf2d8":"code","ace09eed":"code","ef625ba6":"code","56809faa":"code","4267b1ef":"code","418f38c6":"code","6a5b8db7":"code","64a1b0b6":"code","2b5aead9":"code","3e10eaa8":"code","97d2e85d":"code","17be679b":"code","a0fe4fdf":"code","0bee385a":"code","726e1941":"code","6bba42cf":"code","44345d26":"code","ebaf2f11":"code","236c4945":"code","099b1c07":"code","88cce1ce":"code","ca2e2fa1":"code","ff136ccf":"code","76715238":"code","4b7e0613":"code","66f9dff8":"code","ee779e22":"code","179949c1":"code","5c0f33f6":"code","9973ce93":"code","ca126bb3":"code","67735e6d":"code","e1a1bf79":"code","ec7e3cc7":"code","9e3c80e1":"code","87101944":"code","e68d7b70":"code","0822841d":"code","df38b6e8":"code","97c487fc":"code","7327de28":"code","04429c56":"code","bab04144":"code","052cc241":"code","03a13828":"code","5cbb2f9a":"code","7e9b5117":"code","4b569992":"code","ae42d369":"code","effba691":"markdown","166820e5":"markdown","79e4ec77":"markdown","af54f400":"markdown","2a93f771":"markdown","52af2e9b":"markdown","485505c5":"markdown","01203c48":"markdown","c9bff058":"markdown","4e0da2bd":"markdown","2a789e99":"markdown","933f23ee":"markdown","018ca00f":"markdown","9524f9ef":"markdown","d7d5d087":"markdown","fafaa878":"markdown","e6da9a37":"markdown","d549a350":"markdown","69575ac6":"markdown","061284f5":"markdown","b9164af1":"markdown","0243f2f3":"markdown","d498dd06":"markdown","50b4a7a6":"markdown","33c4b23e":"markdown","c5fa2f0f":"markdown","683ec178":"markdown","cda2a337":"markdown","e18a883a":"markdown","1cff4e4b":"markdown","694ed105":"markdown","efee6522":"markdown","d5754dc7":"markdown","ca03b13f":"markdown","10497201":"markdown","d78f5c81":"markdown","f375f051":"markdown","8380502b":"markdown","82386d41":"markdown","65ee2481":"markdown","f5d74450":"markdown","824382b7":"markdown","7ee0d699":"markdown","d776b2d7":"markdown","f990d764":"markdown","77f8174e":"markdown","64b8176d":"markdown","7cd795a8":"markdown","829391eb":"markdown","68b8e39b":"markdown"},"source":{"256bf2d8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ace09eed":"import pandas as pd\nimport numpy as np\nimport missingno as msno\nfrom collections import defaultdict\nimport re\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Rectangle, ConnectionPatch, Arc\nfrom matplotlib.font_manager import FontProperties\nfrom functools import reduce\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.offline import init_notebook_mode,iplot\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.preprocessing import StandardScaler\ninit_notebook_mode(connected=True)\npd.set_option('display.max_columns', None)\npd.options.mode.chained_assignment = None","ef625ba6":"players_df = pd.read_csv('\/kaggle\/input\/fifa-22-complete-player-dataset\/players_21.csv')\nplayers_df.head()","56809faa":"null_values_series = players_df.isnull().sum().where(lambda x : x > 0).dropna().astype('Int32')\nprint(null_values_series.to_string()) # to_string() removes the name and dtype from the output\nmsno.matrix(players_df[null_values_series.index.tolist()], figsize=(15, 8));","4267b1ef":"players_df.info()","418f38c6":"total_entries = 18944*110\n(players_df.isnull().sum().sum()\/total_entries)*100","6a5b8db7":"players_df.columns.values","64a1b0b6":"Del_columns = ['sofifa_id','dob','long_name','player_url','long_name',\n               'body_type','real_face','nation_position','club_loaned_from',\n               'nation_jersey_number','release_clause_eur','player_tags',\n               'ls', 'st', 'rs', 'lw', 'lf', 'cf', 'rf','rw', 'lam', 'cam'\n               , 'ram', 'lm', 'lcm', 'cm', 'rcm', 'rm', 'lwb','ldm', 'cdm',\n               'rdm', 'rwb', 'lb', 'lcb', 'cb', 'rcb', 'rb']","2b5aead9":"# Current number of columns\nlen(players_df.columns.values)","3e10eaa8":"# Dropping the unnecessary columns\nplayers_df.drop(columns=Del_columns,inplace=True)","97d2e85d":"# New number of columns\nlen(players_df.columns.values)","17be679b":"players_df = players_df[:100]","a0fe4fdf":"players_df.head()","0bee385a":"players_df.tail()","726e1941":"missing_data = players_df.isnull().sum()\nprint(missing_data[missing_data > 0])","6bba42cf":"missing_values_list = ['pace','shooting','passing','dribbling','defending']\nfor x in missing_values_list:\n        players_df[x].fillna(players_df[x].min(), inplace=True)","44345d26":"players_df['physic'].fillna(players_df['physic'].mean(), inplace=True)","ebaf2f11":"players_df['player_traits'] = players_df['player_traits'].fillna('No traits available')\nplayers_df.drop(columns='defending_marking_awareness',inplace=True)","236c4945":"missing_data = players_df.isnull().sum()\nprint(missing_data[missing_data > 0])","099b1c07":"players_df.fillna(10,inplace=True)","88cce1ce":"players_df.isnull().sum().sum() # no missing values left","ca2e2fa1":"top_players_df = players_df.sort_values(by = 'overall',ascending = False).head(10)\ntop_players_df.drop(players_df.columns.difference(['short_name','player_positions','overall']), 1, inplace=True)\ntop_players_df.head(5)","ff136ccf":"country_df = players_df.sort_values(by = 'overall',ascending = False).head(100)\ncountry_df.drop(country_df.columns.difference(['short_name','nationality_name']), 1, inplace=True)\nprint(country_df)","76715238":"country_df['nationality_name'].value_counts()","4b7e0613":"country_df['nationality_name'].value_counts()[0:10]","66f9dff8":"fig, ax1 = plt.subplots(figsize=(20,10))\n\ngraph = sns.countplot(ax=ax1, data=country_df, x='nationality_name', order=country_df['nationality_name'].value_counts().head(10).index, palette='YlOrRd_r' )\n\nax1.set(xlabel='Country',ylabel='Number of players',title='Number of Players per Country',)\ngraph.set_xticklabels(graph.get_xticklabels(),rotation=90)\n\nfor p in graph.patches:\n    height = p.get_height()\n    graph.text(p.get_x()+p.get_width()\/2.,height +0.1,height, ha=\"center\")\n    \nplt.show()","ee779e22":"value_df = players_df.sort_values(by = 'value_eur',ascending = False).head(10)\nvalue_df.drop(players_df.columns.difference(['short_name','overall','value_eur']), 1, inplace=True)\nvalue_df","179949c1":"plt.figure(figsize=(15,10))\nplt.bar(list(value_df['short_name'])[0:10],list(value_df['value_eur'])[0:10],color=\"b\")\nplt.show()","5c0f33f6":"wage_df = players_df.sort_values(by = 'wage_eur',ascending = False).head(10)\nwage_df.drop(players_df.columns.difference(['short_name','overall','wage_eur']), 1, inplace=True)\nwage_df","9973ce93":"plt.figure(figsize=(15,10))\nplt.bar(list(wage_df['short_name'])[0:10],list(wage_df['wage_eur'])[0:10],color=\"r\")\nplt.show()","ca126bb3":"teams_df = players_df.sort_values(by = 'overall',ascending = False).head(100)\nteams_df.drop(teams_df.columns.difference(['short_name','club_name']), 1, inplace=True)\nteams_df","67735e6d":"teams_df['club_name'].value_counts()","e1a1bf79":"teams_df['club_name'].value_counts()[0:10]","ec7e3cc7":"fig, ax1 = plt.subplots(figsize=(20,10))\n\ngraph = sns.countplot(ax=ax1, data=teams_df, x='club_name', order=teams_df['club_name'].value_counts().head(10).index, palette='YlOrRd_r' )\n\nax1.set(xlabel='Teams',ylabel='Number of players',title='Teams with Top Players',)\ngraph.set_xticklabels(graph.get_xticklabels(),rotation=90)\n\nfor p in graph.patches:\n    height = p.get_height()\n    graph.text(p.get_x()+p.get_width()\/2.,height +0.1,height, ha=\"center\")\n    \nplt.show()\n","9e3c80e1":"top_team_players_df = players_df[players_df.club_name.isin([\"FC Barcelona\", \"Liverpool\"])]\ntop_team_players_df.drop(top_team_players_df.columns.difference(['short_name','club_name','overall']), 1, inplace=True)\ntop_team_players_df","87101944":"barcelona_df = players_df[players_df.club_name.isin([\"FC Barcelona\"])]\nbarcelona_df.drop(barcelona_df.columns.difference(['short_name','club_name','overall']), 1, inplace=True)\nliverpool_df = players_df[players_df.club_name.isin([\"Liverpool\"])]\nliverpool_df.drop(liverpool_df.columns.difference(['short_name','club_name','overall']), 1, inplace=True)\nbarcelona_df\n","e68d7b70":"liverpool_df","0822841d":"barcelona_sum = barcelona_df[\"overall\"].sum()\nbarcelona_sum","df38b6e8":"liverpool_sum = barcelona_df[\"overall\"].sum()\nliverpool_sum","97c487fc":"messi_df = players_df[players_df.short_name.isin([\"L. Messi\"])]\nmessi_df.drop(messi_df.columns.difference(['short_name','overall', 'pace','shooting', 'passing', 'dribbling', 'defending', \n'physic','attacking_crossing', 'attacking_finishing','attacking_heading_accuracy', \n'attacking_short_passing','attacking_volleys', 'skill_dribbling', 'skill_curve',\n'skill_fk_accuracy', 'skill_long_passing', 'skill_ball_control',\n'movement_acceleration', 'movement_sprint_speed','movement_agility', \n'movement_reactions', 'movement_balance','power_shot_power', 'power_jumping', \n'power_stamina','power_strength', 'power_long_shots', 'mentality_aggression',\n'mentality_interceptions', 'mentality_positioning','mentality_vision', \n'mentality_penalties', 'mentality_composure','defending_marking_awareness', \n'defending_standing_tackle','defending_sliding_tackle']), 1, inplace=True)\nmessi_df","7327de28":"cr7_df = players_df[players_df.short_name.isin([\"Cristiano Ronaldo\"])]\ncr7_df.drop(cr7_df.columns.difference(['short_name','overall', 'pace','shooting', 'passing', 'dribbling', 'defending', \n'physic','attacking_crossing', 'attacking_finishing','attacking_heading_accuracy', \n'attacking_short_passing','attacking_volleys', 'skill_dribbling', 'skill_curve',\n'skill_fk_accuracy', 'skill_long_passing', 'skill_ball_control',\n'movement_acceleration', 'movement_sprint_speed','movement_agility', \n'movement_reactions', 'movement_balance','power_shot_power', 'power_jumping', \n'power_stamina','power_strength', 'power_long_shots', 'mentality_aggression',\n'mentality_interceptions', 'mentality_positioning','mentality_vision', \n'mentality_penalties', 'mentality_composure','defending_marking_awareness', \n'defending_standing_tackle','defending_sliding_tackle']), 1, inplace=True)\ncr7_df","04429c56":"import matplotlib.pyplot as plt\n\ny_axis = ['defending_standing_tackle','mentality_composure','defending_marking_awareness', 'mentality_penalties', 'mentality_positioning','mentality_vision', 'mentality_interceptions', 'mentality_aggression', 'power_long_shots', 'power_stamina','power_strength', 'power_jumping', 'movement_balance','power_shot_power', 'movement_reactions', 'movement_sprint_speed','movement_agility', 'movement_acceleration', 'skill_ball_control', 'skill_long_passing', 'skill_fk_accuracy', 'skill_curve', 'skill_dribbling', 'attacking_short_passing','attacking_volleys', 'attacking_finishing','attacking_heading_accuracy', 'physic','attacking_crossing', 'defending', 'dribbling', 'passing', 'shooting','pace', 'overall',]\nx_axis = ['92','89','93','81','89','35','77','84','95','90','82','86','88','81','76','77','92','87','91','87','95','71','94','95','84','78','93','63','29','95','82','84','95','32','24']\n\nplt.style.use('ggplot')\n\nplt.figure(figsize=(15,10))\nplt.barh(y_axis,x_axis,align='center', height=0.8, color=\"red\")\nplt.title('Cristiano Ronaldo Statistics')\nplt.ylabel('Skill')\nplt.xlabel('Rating (out of 100)')\nplt.show()","bab04144":"import matplotlib.pyplot as plt\n\ny_axis = ['defending_standing_tackle','mentality_composure','defending_marking_awareness', 'mentality_penalties', 'mentality_positioning','mentality_vision', 'mentality_interceptions', 'mentality_aggression', 'power_long_shots', 'power_stamina','power_strength', 'power_jumping', 'movement_balance','power_shot_power', 'movement_reactions', 'movement_sprint_speed','movement_agility', 'movement_acceleration', 'skill_ball_control', 'skill_long_passing', 'skill_fk_accuracy', 'skill_curve', 'skill_dribbling', 'attacking_short_passing','attacking_volleys', 'attacking_finishing','attacking_heading_accuracy', 'physic','attacking_crossing', 'defending', 'dribbling', 'passing', 'pace','shooting', 'overall',]\nx_axis = ['93','85','92','91','95','38','65','85','95','70','91','88','96','93','94','91','96','91','80','91','94','95','86','68','72','69','94','44','40','93','95','75','96','35','24']\n\nplt.style.use('ggplot')\n\nplt.figure(figsize=(15,10))\nplt.barh(y_axis,x_axis,align='center', height=0.8, color=\"blue\")\nplt.title('L. Messi Statistics')\nplt.ylabel('Skill')\nplt.xlabel('Rating (out of 100)')\nplt.show()","052cc241":"# Correlation matrix\ndef plotCorrelationMatrix(players_df, graphWidth):\n    filename = players_df.dataframeName\n    players_df = players_df.dropna('columns') # drop columns with NaN\n    players_df = players_df[[col for col in players_df if players_df[col].nunique() > 1]] # keep columns where there are more than 1 unique values\n    if players_df.shape[1] < 2:\n        print(f'No correlation plots shown: The number of non-NaN or constant columns ({players_df.shape[1]}) is less than 2')\n        return\n    corr = players_df.corr()\n    plt.figure(num=None, figsize=(graphWidth, graphWidth), dpi=80, facecolor='w', edgecolor='k')\n    corrMat = plt.matshow(corr, fignum = 1)\n    plt.xticks(range(len(corr.columns)), corr.columns, rotation=90)\n    plt.yticks(range(len(corr.columns)), corr.columns)\n    plt.gca().xaxis.tick_bottom()\n    plt.colorbar(corrMat)\n    plt.title(f'Correlation Matrix for {filename}', fontsize=15)\n    plt.show()","03a13828":"# Scatter and density plots\ndef plotScatterMatrix(players_df, plotSize, textSize):\n    players_df = players_df.select_dtypes(include =[np.number]) # keep only numerical columns\n    # Remove rows and columns that would lead to df being singular\n    players_df = players_df.dropna('columns')\n    players_df = players_df[[col for col in players_df if players_df[col].nunique() > 1]] # keep columns where there are more than 1 unique values\n    columnNames = list(players_df)\n    if len(columnNames) > 10: # reduce the number of columns for matrix inversion of kernel density plots\n        columnNames = columnNames[:10]\n    players_df = players_df[columnNames]\n    ax = pd.plotting.scatter_matrix(players_df, alpha=0.75, figsize=[plotSize, plotSize], diagonal='kde')\n    corrs = players_df.corr().values\n    for i, j in zip(*plt.np.triu_indices_from(ax, k = 1)):\n        ax[i, j].annotate('Corr. coef = %.3f' % corrs[i, j], (0.8, 0.2), xycoords='axes fraction', ha='center', va='center', size=textSize)\n    plt.suptitle('Scatter and Density Plot')\n    plt.show()","5cbb2f9a":"nRowsRead = 1000 # specify 'None' if want to read whole file\n# data.csv has 18207 rows in reality, but we are only loading\/previewing the first 1000 rows\ndf1 = pd.read_csv('\/kaggle\/input\/fifa-22-complete-player-dataset\/players_21.csv', delimiter=',', nrows = nRowsRead)\ndf1.dataframeName = 'players_21.csv'\nnRow, nCol = df1.shape\nprint(f'There are {nRow} rows and {nCol} columns')","7e9b5117":"df1.head()","4b569992":"plotCorrelationMatrix(df1, 11)","ae42d369":"plotScatterMatrix(df1, 20, 10)","effba691":"Around 7% of the data is missing","166820e5":"### Lets reduce the analysis to the Top 100 players of the game","79e4ec77":"### 9.2 Scatter and Density Plot","af54f400":"## 3. Top 10 Countries with respect to number of players","2a93f771":"#### L. Messi Attributes","52af2e9b":"The best team according to this data is Liverpool and the next best team is FC Barcelona","485505c5":"Similarly, lets find out the highest-earners among the list of players","01203c48":"#### Visualizing Ronaldo's and Messi's Attributes through a Bargraph","c9bff058":"## 2. Number of players from each country","4e0da2bd":"### First 5 players in the Top 100 list:","2a789e99":"<center><img\nsrc=\"https:\/\/sportsblogtipster.com\/wp-content\/uploads\/2019\/04\/Untitled-design-720x200.png\" style=\"width:100%;height:100%;\">\n<\/center>","933f23ee":"### 6.2 The Top 2 Clubs\n* Here we are going to analyse the players of the Top 2 clubs and which team has better players in terms of Overall ratings.\n* To do that, we are going to have to make a list of players that plays for FC Barcelona and Liverpool that exist in the Top 100 list.\n* Then, we are going to make two seprate tables, one with the Bar\u00e7a players and one with The Reds.\n* After making the lists, we are going to find the sum of the overall of players to figure out which team has better players.","018ca00f":"# Starting the Analysis","9524f9ef":"## 4. Value of Players","d7d5d087":"### Last 5 players in the Top 100 list:","fafaa878":"# Reading and Understanding the Data ","e6da9a37":"## 6. Analysing the Best Teams according to Player Overall","d549a350":"#### Top 10 Highest Valued Players","69575ac6":"Column Names:","061284f5":"#### Liverpool Players in the Top 10:","b9164af1":"## 1. Top 5 Players in the Game","0243f2f3":"#### Top 10 Highest Paid Players:","d498dd06":"* We can see that the sum of the overall of players of both clubs add upto 871.\n* But from the previous analysis we have also seen that the number of players from FC Barcelona in the Top 100 list is also one lesser that Liverpool.\n* From here we can conclude that with respect to Overall ratings, FC Barcelona has better players when compared to Liverpool.","50b4a7a6":"#### Top 10 Teams ","33c4b23e":"#### Barcelona Players in the Top 10:","c5fa2f0f":"### Converting missing values","683ec178":"#### Number of players per country:","cda2a337":"## 5. Highest Paid Player","e18a883a":"* We can see that K. Mbappe is the most valuable player who is worth \u20ac185500000. \n* Lets plot this data to visualize our understanding","1cff4e4b":"## 7. The GOAT Debate","694ed105":"# Conclusion\n\nThis conludes the analysis, thanks for taking your time and going through this notebook. I am very happy with the analysis and the outputs. This was a great learning opportunity and I believe that there are much more analysis that can be done with this data. I enjoyed this analysis and will definitely perform more football related analysis!","efee6522":"# Introduction:\n## Hey everyone! Welcome to my FIFA dataset analysis! \n\n## FIFA is one of the most popular soccer video games released by EA Sports. This dataset contains information of players present in the game.\n\n## I initiated this project by first importing the libraries, understanding the data and taking care of the missing values. \n\n## Then, I performed analysis through which I was able to draw insights about players, clubs etc.\n\nReferences:\n* https:\/\/www.kaggle.com\/mrisdal\/starter-fifa-19-complete-player-54855b15-c\n* https:\/\/www.kaggle.com\/ivanbay\/fifa21-top-100-players-analysis#4.-Goalkeepers-analysis\n* https:\/\/www.kaggle.com\/stefanoleone992\/fifa-22-players-lineup-visualization-and-more\n\n\n","d5754dc7":"As usual, L. Messi is the best player in the game \ud83d\ude1d","ca03b13f":"* From here we can assume that the highest paid player is L. Messi.\n* We can also see that there is a huge gap between the wages of the highest paid player and the rest of the players.\n* But from the looks of things, we can also say that the players aren't paid according to their \"Overall\" rating or \"Value\" of the players. If it were so, then Cristiano Ronaldo would've been the second highest paid player after L. Messi.\n","10497201":"Lets find the sum of the player's overall of FC Barcelona and Liverpool","d78f5c81":"#### Cristiano Ronaldo Attributes","f375f051":"# Thank You!!!","8380502b":"By looking at the plot above, we can also see that majority of the highest paid players play for Real Madrid. Lets see if this is true.","82386d41":"#### Remaining null values after replacing with real values:","65ee2481":"### 9.1 Correlation Matrix","f5d74450":"<center><img\nsrc=\"https:\/\/w0.peakpx.com\/wallpaper\/914\/93\/HD-wallpaper-mbappe-sport-futbol-psg-soccer-kylian-mbappe-fifa-22.jpg\" style=\"width:100%;height:100%;\">\n<\/center>","824382b7":"### 6.1 List of players and their teams","7ee0d699":"#### Sum of the overall rating of Bar\u00e7a players:","d776b2d7":"## 9. Correlation and Scatter Matrix","f990d764":"<center><img\nsrc=\"https:\/\/media.giphy.com\/media\/xUA7aT4k7JLXH71zG0\/giphy.gif\" style=\"width:100%;height:100%;\">\n<\/center>","77f8174e":"#### Sum of the overall rating of Liverpool players: ","64b8176d":"# Importing libraries","7cd795a8":"Lets find out the list of players from both teams","829391eb":"#### Player count per team (Top 100 players only)","68b8e39b":"#### Missing Vales:"}}