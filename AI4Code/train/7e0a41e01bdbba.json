{"cell_type":{"53b3ed7c":"code","6ade6196":"code","637c0c55":"code","34a80a0e":"code","78b411f7":"code","e89a1021":"code","8d0f17eb":"code","30a3d330":"code","94f316b6":"code","3ca96c06":"code","08ec671f":"code","2724d3c8":"code","04c94443":"code","8019ea32":"code","296707da":"code","ed211689":"code","853eed93":"code","487314d2":"code","e28e0e74":"code","440e5240":"code","37600cba":"code","9d9df9c9":"code","52492f15":"code","bed93776":"code","b39df76d":"code","ee8ff0c2":"code","89c55a2b":"code","c543b5d3":"code","f06597ee":"code","dbf520d7":"code","feaee572":"code","54410893":"code","1cc4b871":"code","74799169":"code","753af4f3":"code","6b256475":"code","5be99ede":"code","f324407f":"code","7d189303":"code","2f97639b":"code","92f07dd1":"code","1279d1c7":"code","bd1e5fd7":"code","1fcb2512":"code","6f641428":"markdown","c69e742c":"markdown","ad201536":"markdown","d012a241":"markdown","b54fee79":"markdown","8eb4ce77":"markdown","37250c45":"markdown","a9aad4f4":"markdown","243c4b4f":"markdown"},"source":{"53b3ed7c":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder","6ade6196":"df = pd.read_csv(\"..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")","637c0c55":"df.isnull().sum()","34a80a0e":"df = df.dropna()","78b411f7":"le = LabelEncoder()\n\ncolumnsToEncode = list(df.select_dtypes(include=['category','object']))\n\nfor feature in columnsToEncode:\n    df[feature] = le.fit_transform(df[feature])","e89a1021":"df.head()","8d0f17eb":"df = df.drop(['id'], axis=1)","30a3d330":"x_s = df.iloc[:,:-1]\ny_s = df.iloc[:,-1]","94f316b6":"X_train,X_test,y_train,y_test = train_test_split(x_s,y_s,test_size=0.2)","3ca96c06":"from sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nX_train = ss.fit_transform(X_train)\nX_test = ss.transform(X_test)","08ec671f":"from xgboost import XGBClassifier\n\nxgboost = XGBClassifier()\nxgboost.fit(X_train,y_train)","2724d3c8":"y_pred = xgboost.predict(X_test)","04c94443":"from sklearn.metrics import confusion_matrix\nprint(confusion_matrix(y_test,y_pred))","8019ea32":"from sklearn.ensemble import GradientBoostingClassifier\n\ngradientboost = GradientBoostingClassifier()\ngradientboost.fit(X_train,y_train)","296707da":"y_pred = gradientboost.predict(X_test)","ed211689":"print(confusion_matrix(y_test,y_pred))","853eed93":"from sklearn.decomposition import PCA\npca = PCA(n_components=1)\nx_train_pca = pca.fit_transform(X_train)\nx_test_pca = pca.transform(X_test)","487314d2":"xgboost = XGBClassifier()\nxgboost.fit(x_train_pca,y_train)","e28e0e74":"y_pred_pca = xgboost.predict(x_test_pca)\nprint(confusion_matrix(y_test,y_pred_pca))","440e5240":"gradientboost = GradientBoostingClassifier()\ngradientboost.fit(x_train_pca,y_train)","37600cba":"y_pred_pca = gradientboost.predict(x_test_pca)\nprint(confusion_matrix(y_test,y_pred_pca))","9d9df9c9":"import tensorflow as tf\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout","52492f15":"model = Sequential()\nmodel.add(Dense(32, activation='relu', input_shape=[10]))\nmodel.add(Dense(1, activation='sigmoid'))","bed93776":"model.summary()","b39df76d":"model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])","ee8ff0c2":"history = model.fit(X_train, y_train, validation_data=(X_test,y_test), epochs=100)","89c55a2b":"import matplotlib.pyplot as plt\n\nacc = history.history['accuracy']\nval_acc = history.history['val_accuracy']\nloss = history.history['loss']\nval_loss = history.history['val_loss']\n\nepochs = range(len(acc))\n\nplt.figure(figsize=(16,8))\nplt.subplot(1,2,1)\nplt.plot(epochs, acc, label='acc')\nplt.plot(epochs, val_acc, label='val_acc')\nplt.title('Accuracy')\n\nplt.subplot(1,2,2)\nplt.plot(epochs, loss, label='loss')\nplt.plot(epochs, val_loss, label='val_loss')\nplt.title('Loss')\n","c543b5d3":"y_pred = model.predict(X_test)","f06597ee":"y_pred = (y_pred > 0.5)","dbf520d7":"print(np.concatenate((y_pred.reshape(len(y_pred),1), np.array(y_test).reshape(len(y_test),1)),1))","feaee572":"from sklearn.metrics import confusion_matrix\n\nconfusion_matrix(y_pred, y_test)\n","54410893":"from imblearn.over_sampling import SMOTE","1cc4b871":"sm = SMOTE()\nX_over, y_over = sm.fit_resample(x_s,y_s)","74799169":"import seaborn as sns\n\nsns.countplot(x = y_over, data=df)","753af4f3":"X_train, X_test, y_train, y_test = train_test_split(X_over,y_over,test_size=0.2,random_state=42)","6b256475":"xgboost = XGBClassifier()\nxgboost.fit(X_train,y_train)","5be99ede":"y_pred = xgboost.predict(X_test)\nprint(confusion_matrix(y_test,y_pred))","f324407f":"from sklearn.metrics import accuracy_score,precision_score,recall_score,f1_score\nfrom sklearn.metrics import classification_report\n\naccuracy = accuracy_score(y_test, y_pred)\nprecision = precision_score(y_test,y_pred)\nrecall = recall_score(y_test,y_pred)\nf1 = f1_score(y_test,y_pred)\n\nprint(\"Accuracy: \",accuracy)\nprint(\"Precision: \",precision)\nprint(\"Recall: \",recall)\nprint(\"F1: \",f1)\n\nprint(classification_report(y_test,y_pred,target_names=['not 1','1']))","7d189303":"feature_importance = np.array(xgboost.feature_importances_)\nfeature_names = np.array(x_s.columns)\n\nfeat_imp = pd.DataFrame({'feature_names':feature_names,\n                         'feature_importance':feature_importance})","2f97639b":"plt.figure(figsize=(10,8))\nsns.barplot(x=feat_imp['feature_importance'],y=feat_imp['feature_names'])","92f07dd1":"from lightgbm import LGBMClassifier\n\nlgbm = LGBMClassifier()\nlgbm.fit(X_train,y_train)","1279d1c7":"y_pred = lgbm.predict(X_test)\nprint(confusion_matrix(y_test,y_pred))","bd1e5fd7":"accuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy: \",accuracy)","1fcb2512":"print(classification_report(y_test,y_pred,target_names=['not 1','1']))","6f641428":"# USE GradientBoosting\n","c69e742c":"## LightGBM\n","ad201536":"# Use PCA to combine all attributes into one single attribute.","d012a241":"### XGBoost PCA","b54fee79":"# Use XGBOOST\n","8eb4ce77":"# Tensorflow DNN","37250c45":"### From all results, they show errors due to imbalanced dataset. To solve this, let's try using SMOTE","a9aad4f4":"### GradientBoosting PCA","243c4b4f":"### USE XGBOOST with SMOTE"}}