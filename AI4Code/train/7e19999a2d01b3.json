{"cell_type":{"a2e032a4":"code","16bcb522":"code","0935b156":"code","2066c180":"code","539479aa":"code","c0d0a5cc":"code","3333c474":"code","3872d19e":"code","abca321d":"code","358c4a95":"code","f798343b":"code","6bc1766f":"code","b9fb9c7a":"code","f4837b6d":"code","d911a397":"code","eed8dcce":"markdown","bfe22a20":"markdown","469a4d47":"markdown","a6f515cb":"markdown"},"source":{"a2e032a4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport requests\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","16bcb522":"def chunker(seq, size):\n    for pos in range(0, len(seq), size):\n        yield seq.iloc[pos:pos + size] ","0935b156":"df = pd.read_csv('\/kaggle\/input\/craft-cans\/beers.csv', index_col=0)\ndf = df.rename(index=int)\ndf = df.dropna()","2066c180":"df = df.drop(['brewery_id', 'id'], axis=1)","539479aa":"chnk = chunker(df.reset_index(), 1000)","c0d0a5cc":"db_name = \"beers2021\"","3333c474":"for df_chnk in chnk:\n    partial_chunk = df_chnk.to_json(orient='records')\n    r = requests.post(url=f'https:\/\/mycelia.azure-api.net\/clone\/table\/setup\/data\/{db_name}',data=partial_chunk)\n    print(r.status_code)","3872d19e":"r = requests.post(url=f'https:\/\/mycelia.azure-api.net\/clone\/table\/setup\/unsupervised\/{db_name}')\nprint(r.status_code)","abca321d":"top_k = 10\nquery = 1439\ndf.loc[query]","358c4a95":"ans = requests.get(f'https:\/\/mycelia.azure-api.net\/clone\/similar\/id\/{db_name}?index={query}&top_k={top_k}')","f798343b":"ans","6bc1766f":"parsed_dict = ans.json()['similarity'][0]['results']\nsimilar_beers = pd.DataFrame.from_dict(parsed_dict, orient='columns').set_index('index')\nsimilar_beers = similar_beers.rename(index=int)","b9fb9c7a":"df_ans = similar_beers.merge(df, right_index=True, left_index=True).sort_values('distance')","f4837b6d":"df_ans","d911a397":"print(df_ans)","eed8dcce":"## Define Similarity Query Parameters\n\n### Query: Beer code (index) to query\n### top_k: Number of beer lookalikes to return","bfe22a20":"## Parse and print resuts","469a4d47":"# Read Dataset","a6f515cb":"## Run Similarity Search Query"}}