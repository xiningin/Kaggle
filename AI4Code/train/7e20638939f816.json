{"cell_type":{"39f96bfc":"code","213aab59":"code","d84e6836":"code","a461970e":"code","7c4a6aae":"code","4b757f75":"code","c147fa14":"code","3a71918f":"code","3dc4cda5":"code","5e12e8f3":"code","4a07ff82":"code","3d44f60b":"code","3ceae2a4":"code","e9942e59":"code","3d9827f1":"code","55c91e01":"code","3ab6eebb":"code","cd5ad76c":"code","fb65e144":"code","91e459b4":"code","d451b585":"code","17bcbd9f":"code","d425fb83":"code","ae6a9912":"code","a2ba0fef":"code","6e3bffb7":"code","cb64cf39":"code","1497abea":"code","8c7df7e1":"code","fd6962ea":"code","878bdeaf":"code","3779a411":"code","0ac02e15":"code","ce0ce47d":"code","2d0f7be6":"code","26c466e6":"code","87dcdf3f":"code","16c713e1":"code","3f1be5bd":"code","abdedd9a":"code","55a5d0fc":"code","390a5237":"code","d2c8758b":"code","91cfe463":"code","8b6d3d93":"markdown","7742e3c9":"markdown","2ea55634":"markdown","a2def5f9":"markdown","3905c6af":"markdown","e21a22d5":"markdown","98fdc684":"markdown","a95d932c":"markdown","099c9eef":"markdown","5cb9c413":"markdown","b16f7e8c":"markdown","b5118b0a":"markdown"},"source":{"39f96bfc":"!pip install git+https:\/\/github.com\/darecophoenixx\/wordroid.sblo.jp","213aab59":"%matplotlib inline\nfrom IPython.display import SVG\nfrom keras.utils.vis_utils import model_to_dot\n\nimport os.path\nimport sys\nimport re\nimport itertools\nimport csv\nimport datetime\nimport pickle\nimport random\nfrom collections import defaultdict, Counter\nimport gc\n\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import NullFormatter\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\nimport scipy\nimport gensim\nfrom sklearn.metrics import f1_score, classification_report, confusion_matrix, log_loss\nfrom sklearn.model_selection import train_test_split\nimport gensim\nfrom keras.preprocessing.sequence import skipgrams\nimport tensorflow as tf","d84e6836":"def hexbin(x, y, color, **kwargs):\n    cmap = sns.light_palette(color, as_cmap=True)\n    plt.hexbin(x, y, cmap=cmap, **kwargs)\ndef scatter(x, y, color, **kwargs):\n    plt.scatter(x, y, marker='.')","a461970e":"ls -la ..\/input","7c4a6aae":"dir_data_src = '..\/input\/anime-recommendations-database'\nos.listdir(dir_data_src)","4b757f75":"anime_csv = pd.read_csv(os.path.join(dir_data_src, 'anime.csv'))\nprint(anime_csv.shape)\nanime_csv.index = anime_csv.anime_id.values\nanime_csv.head()","c147fa14":"np.sort(anime_csv.anime_id.values)","3a71918f":"def Anime_title2id(titlename, csv=anime_csv):\n    try:\n        return csv.query('name==@titlename').anime_id.values[0]\n    except:\n        return 9999999\n\nAnime_title2id('Kimi no Na wa.'), Anime_title2id('Fullmetal Alchemist: Brotherhood'), Anime_title2id('Gintama\u00b0'), Anime_title2id('PL_ANIME')","3dc4cda5":"def Anime_id2title(anime_id, csv=anime_csv):\n    try:\n        return csv.query('anime_id==@anime_id').name.values[0]\n    except:\n        return '*****'\n\nAnime_id2title(32281), Anime_id2title(5114), Anime_id2title(28977), Anime_id2title(9999999)","5e12e8f3":"'''\nload rating.csv\n'''\nrating_csv = pd.read_csv(os.path.join(dir_data_src, 'rating.csv'))\nprint(rating_csv.shape)\nrating_csv.head()","4a07ff82":"'''\n`Yuri!!! on Ice` doesn't exist\n'''\nrating_csv.query('anime_id==\"32995\"')","3d44f60b":"np.unique(rating_csv.user_id.values), len(np.unique(rating_csv.user_id.values))","3ceae2a4":"np.unique(rating_csv.rating.values)","e9942e59":"rating_csv.rating.values != -1","3d9827f1":"rating_csv2 = rating_csv.loc[rating_csv.rating.values != -1]\nrating_csv2.shape\nrating_csv2.head(10)","55c91e01":"rating_csv2.groupby('anime_id').size().keys().values","3ab6eebb":"anime_csv.anime_id.values","cd5ad76c":"np.isin(anime_csv.anime_id.values, rating_csv2.groupby('anime_id').size().keys().values)","fb65e144":"'''\nanime_id no rated\n'''\nanime_csv.anime_id.values[~np.isin(anime_csv.anime_id.values, rating_csv2.groupby('anime_id').size().keys().values)]","91e459b4":"'''\nhow much\n'''\nanime_csv.anime_id.values[~np.isin(anime_csv.anime_id.values, rating_csv2.groupby('anime_id').size().keys().values)].shape","d451b585":"'''\nshow anime no rated\n'''\nanime_id_norated = anime_csv.anime_id.values[~np.isin(anime_csv.anime_id.values, rating_csv2.groupby('anime_id').size().keys().values)]\nprint(anime_csv.loc[anime_id_norated].shape)\nanime_csv.loc[anime_id_norated]","17bcbd9f":"rating_csv2.query('anime_id in @anime_id_norated')","d425fb83":"tmp = anime_csv.anime_id.values[np.isin(anime_csv.anime_id.values, rating_csv2.groupby('anime_id').size().keys().values)]\nanime_csv2 = anime_csv.loc[tmp].copy()\nprint(anime_csv2.shape)\nanime_csv2","ae6a9912":"from feature_eng import neg_smpl","a2ba0fef":"src_tfidf_anime = '..\/input\/create-tfidf-of-anime-side'\nos.listdir(src_tfidf_anime)","6e3bffb7":"corpus_csr = scipy.sparse.load_npz(os.path.join(src_tfidf_anime, 'corpus_csr.npz'))\ntfidf = gensim.models.TfidfModel.load(os.path.join(src_tfidf_anime, 'tfidf'))\ndic_user = gensim.corpora.Dictionary.load(os.path.join(src_tfidf_anime, 'dic_user'))\ndic_anime = gensim.corpora.Dictionary.load(os.path.join(src_tfidf_anime, 'dic_anime'))\n\ncorpus_csr, tfidf, dic_user, dic_anime","cb64cf39":"def Anime2id(title):\n    return dic_anime.token2id['anime_id-'+str(Anime_title2id(title))]\n\nAnime2id('Kimi no Na wa.')","1497abea":"mysim = neg_smpl.MySparseMatrixSimilarity(corpus_csr, num_features=max(dic_user.keys())+1, tfidf=tfidf)","8c7df7e1":"max(dic_user.keys())","fd6962ea":"[\n    ['user_id-1', 'user_id-1', 'user_id-2'],\n    ['user_id-100', 'user_id-1001', 'user_id-1002'],\n]","878bdeaf":"dic_user[1]","3779a411":"dic_user.doc2bow(['user_id-1', 'user_id-1', 'user_id-2'])","0ac02e15":"gensim.matutils.corpus2csc([dic_user.doc2bow(['user_id-1', 'user_id-1', 'user_id-2'])], num_terms=mysim.index.shape[1])","ce0ce47d":"gensim.matutils.corpus2csc([[(0,1),(1,2)], [(1000,1),(69600,2)]], num_terms=mysim.index.shape[1])","2d0f7be6":"'''\nKimi no Na wa.\n'''\nmysim.index[Anime2id('Kimi no Na wa.')]","26c466e6":"print(mysim.index.shape)\nvec = mysim.index[Anime2id('Kimi no Na wa.')]\ncorpus = gensim.matutils.scipy2sparse(vec)\ncorpus[:20]","87dcdf3f":"'''\nthis `corpus` is user rating of `Kimi no Na wa.`\n'''\nfor userid, rating in itertools.islice(corpus, 10):\n    print(dic_user[userid], rating)","16c713e1":"'''\ncalc similar anime to `corpus`\n'''\nprint('Kimi no Na wa. id =', Anime2id('Kimi no Na wa.'))\nmysim.num_best = 10\nres = mysim[corpus]\nres","3f1be5bd":"'''\n`res` is similar animes to `corpus`\n'''\nfor idx, wgt in res:\n    print(wgt, Anime_id2title(int(re.sub('anime_id-', '', dic_anime[idx]))))","abdedd9a":"'''\nget user rating\n'''\nvec = mysim.index[Anime2id('Mobile Suit Gundam')]\ncorpus = gensim.matutils.scipy2sparse(vec)\ncorpus[:15]","55a5d0fc":"%%time\n'''\ncalc similar anime to `corpus`\n'''\nmysim.num_best = 10\nres = mysim[corpus]\nres","390a5237":"'''\n`res` is similar animes to `corpus`\n'''\nfor idx, wgt in res:\n    print(wgt, Anime_id2title(int(re.sub('anime_id-', '', dic_anime[idx]))))","d2c8758b":"%%time\n'''\nmethod = 'WT_TFIDF'\n'''\nmysim.num_best = 10\nmysim.method = 'WT_TFIDF'\nres = mysim[corpus]\nres","91cfe463":"'''\n`res` is similar animes to `corpus`\n'''\nfor idx, wgt in res:\n    print(wgt, Anime_id2title(int(re.sub('anime_id-', '', dic_anime[idx]))))","8b6d3d93":"## load anime.csv","7742e3c9":"## create anime_csv2\ndelete anime no-rated","2ea55634":"## load rating.csv","a2def5f9":"# prepare data\n---","3905c6af":"# Load pre-processing data","e21a22d5":"# Mobile Suit Gundam","98fdc684":"# create MatrixSimilarity","a95d932c":"# this 'corpus' is user rating of 'Kimi no Na wa.'","099c9eef":"## create rating_csv2","5cb9c413":"## Anime no-rated","b16f7e8c":"# Kimi no Na wa.","b5118b0a":"## show anime no-rated"}}