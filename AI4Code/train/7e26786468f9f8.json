{"cell_type":{"961d69c0":"code","62bbaab7":"code","766589de":"code","27196ffc":"code","f4941cb3":"code","40c2bee0":"code","a6463b1a":"code","c70c1075":"code","8eeebde4":"code","959d33b9":"code","6836fb20":"code","135fc496":"markdown","347bdf27":"markdown","2573493c":"markdown","b4db8663":"markdown","761010cd":"markdown","63a10d23":"markdown","aab5cd91":"markdown","88249442":"markdown","10573851":"markdown","dd18a9f3":"markdown","2fe08af5":"markdown","8625551b":"markdown","11f61ebb":"markdown"},"source":{"961d69c0":"!pip install d2l > d2l_install.out\n%matplotlib inline\nimport torch\nfrom torch import nn\nfrom d2l import torch as d2l\n","62bbaab7":"n_train, n_test, num_inputs, batch_size = 20, 100, 200, 5\ntrue_w, true_b = torch.ones((num_inputs, 1)) * 0.01, 0.05\ntrain_data = d2l.synthetic_data(true_w, true_b, n_train)\ntrain_iter = d2l.load_array(train_data, batch_size)\ntest_data = d2l.synthetic_data(true_w, true_b, n_test)\ntest_iter = d2l.load_array(test_data, batch_size, is_train=False)","766589de":"def init_params():\n    w = torch.normal(0, 1, size=(num_inputs, 1), requires_grad=True)\n    b = torch.zeros(1, requires_grad=True)\n    return [w, b]","27196ffc":"def l2_penalty(w):\n    return torch.sum(w.pow(2)) \/ 2","f4941cb3":"def train(lambd):\n    w, b = init_params()\n    net, loss = lambda X: d2l.linreg(X, w, b), d2l.squared_loss\n    num_epochs, lr = 100, 0.003\n    animator = d2l.Animator(xlabel='epochs', ylabel='loss', yscale='log',\n                            xlim=[5, num_epochs], legend=['train', 'test'])\n    for epoch in range(num_epochs):\n        for X, y in train_iter:\n            with torch.enable_grad():\n                # \u589e\u52a0\u4e86L2\u8303\u6570\u60e9\u7f5a\u9879\uff0c\u5e7f\u64ad\u673a\u5236\u4f7fl2_penalty(w)\u6210\u4e3a\u4e00\u4e2a\u957f\u5ea6\u4e3a`batch_size`\u7684\u5411\u91cf\u3002\n                l = loss(net(X), y) + lambd * l2_penalty(w)\n            l.sum().backward()\n            d2l.sgd([w, b], lr, batch_size)\n        if (epoch + 1) % 5 == 0:\n            animator.add(epoch + 1, (d2l.evaluate_loss(net, train_iter, loss),\n                                     d2l.evaluate_loss(net, test_iter, loss)))\n    print('w\u7684L2\u8303\u6570\u662f\uff1a', torch.norm(w).item())","40c2bee0":"train(lambd=0)","a6463b1a":"train(lambd=3)","c70c1075":"def train_concise(wd):\n    net = nn.Sequential(nn.Linear(num_inputs, 1))\n    for param in net.parameters():\n        param.data.normal_()\n    loss = nn.MSELoss()\n    num_epochs, lr = 100, 0.003\n    # \u504f\u7f6e\u53c2\u6570\u6ca1\u6709\u8870\u51cf\u3002\n    trainer = torch.optim.SGD([{\n        \"params\": net[0].weight,\n        'weight_decay': wd}, {\n            \"params\": net[0].bias}], lr=lr)\n    animator = d2l.Animator(xlabel='epochs', ylabel='loss', yscale='log',\n                            xlim=[5, num_epochs], legend=['train', 'test'])\n    for epoch in range(num_epochs):\n        for X, y in train_iter:\n            with torch.enable_grad():\n                trainer.zero_grad()\n                l = loss(net(X), y)\n            l.backward()\n            trainer.step()\n        if (epoch + 1) % 5 == 0:\n            animator.add(epoch + 1, (d2l.evaluate_loss(net, train_iter, loss),\n                                     d2l.evaluate_loss(net, test_iter, loss)))\n    print('w\u7684L2\u8303\u6570\uff1a', net[0].weight.norm().item())","8eeebde4":"train_concise(0)","959d33b9":"train_concise(3)","6836fb20":"def new_train(wd):\n    net = nn.Sequential(nn.Linear(num_inputs, 1))\n    for param in net.parameters():\n        param.data.normal_()\n    loss = nn.MSELoss()\n    num_epochs, lr = 100, 0.003\n    # \u504f\u7f6e\u53c2\u6570\u6ca1\u6709\u8870\u51cf\u3002\n    trainer = torch.optim.SGD([{\n        \"params\": net[0].weight,\n        'weight_decay': wd}, {\n            \"params\": net[0].bias}], lr=lr)\n    animator = d2l.Animator(xlabel='epochs', ylabel='loss', yscale='log',\n                            xlim=[5, num_epochs], legend=['train', 'test'])\n    for epoch in range(num_epochs):\n        for X, y in train_iter:\n            with torch.enable_grad():\n                trainer.zero_grad()\n                l = loss(net(X), y)\n            l.backward()\n            trainer.step()\n        if (epoch + 1) % 5 == 0:\n            animator.add(epoch + 1, (d2l.evaluate_loss(net, train_iter, loss),\n                                     d2l.evaluate_loss(net, test_iter, loss)))\n\n    print('w\u7684L2\u8303\u6570\uff1a', net[0].weight.norm().item())\n    return net\n    \nnew_animator = d2l.Animator(xlabel='lambdas', ylabel='loss', yscale='log',\n                            xlim=[1, 10], legend=['train', 'test'])\nloss = nn.MSELoss()\nfor i in range(10):\n    net = new_train(i)\n    new_animator.add(i + 1, (d2l.evaluate_loss(net, train_iter, loss),\n                                     d2l.evaluate_loss(net, test_iter, loss)))","135fc496":"## \u7b80\u6d01\u5b9e\u73b0\n\n\u7531\u4e8e\u6743\u91cd\u8870\u51cf\u5728\u795e\u7ecf\u7f51\u7edc\u4f18\u5316\u4e2d\u5f88\u5e38\u7528\uff0c\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u4e3a\u4e86\u4fbf\u4e8e\u4f7f\u7528\u6743\u91cd\u8870\u51cf\uff0c\u4fbf\u5c06\u6743\u91cd\u8870\u51cf\u96c6\u6210\u5230\u4f18\u5316\u7b97\u6cd5\u4e2d\uff0c\u4ee5\u4fbf\u4e0e\u4efb\u4f55\u635f\u5931\u51fd\u6570\u7ed3\u5408\u4f7f\u7528\u3002\u6b64\u5916\uff0c\u8fd9\u79cd\u96c6\u6210\u8fd8\u6709\u8ba1\u7b97\u4e0a\u7684\u597d\u5904\uff0c\u5141\u8bb8\u5728\u4e0d\u589e\u52a0\u4efb\u4f55\u989d\u5916\u7684\u8ba1\u7b97\u5f00\u9500\u7684\u60c5\u51b5\u4e0b\u5411\u7b97\u6cd5\u4e2d\u6dfb\u52a0\u6743\u91cd\u8870\u51cf\u3002\u7531\u4e8e\u66f4\u65b0\u7684\u6743\u91cd\u8870\u51cf\u90e8\u5206\u4ec5\u4f9d\u8d56\u4e8e\u6bcf\u4e2a\u53c2\u6570\u7684\u5f53\u524d\u503c\uff0c\u56e0\u6b64\u4f18\u5316\u5668\u5fc5\u987b\u81f3\u5c11\u63a5\u89e6\u6bcf\u4e2a\u53c2\u6570\u4e00\u6b21\u3002\n","347bdf27":"### \u5b9a\u4e49\u8bad\u7ec3\u4ee3\u7801\u5b9e\u73b0\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u6a21\u578b\u62df\u5408\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u5e76\u5728\u6d4b\u8bd5\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bc4\u4f30\u3002\u4ece :numref:`chap_linear` \u4ee5\u6765\uff0c\u7ebf\u6027\u7f51\u7edc\u548c\u5e73\u65b9\u635f\u5931\u6ca1\u6709\u53d8\u5316\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7`d2l.linreg`\u548c`d2l.squared_loss`\u5bfc\u5165\u5b83\u4eec\u3002\u552f\u4e00\u7684\u53d8\u5316\u662f\u635f\u5931\u73b0\u5728\u5305\u62ec\u4e86\u60e9\u7f5a\u9879\u3002\n","2573493c":"\u8fd9\u4e9b\u56fe\u770b\u8d77\u6765\u548c\u6211\u4eec\u4ece\u96f6\u5f00\u59cb\u5b9e\u73b0\u6743\u91cd\u8870\u51cf\u65f6\u7684\u56fe\u76f8\u540c\u3002\u7136\u800c\uff0c\u5b83\u4eec\u8fd0\u884c\u5f97\u66f4\u5feb\uff0c\u66f4\u5bb9\u6613\u5b9e\u73b0\uff0c\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u95ee\u9898\uff0c\u8fd9\u4e00\u597d\u5904\u5c06\u53d8\u5f97\u66f4\u52a0\u660e\u663e\u3002\n","b4db8663":"## \u4ece\u96f6\u5f00\u59cb\u5b9e\u73b0\n\n\u5728\u4e0b\u9762\uff0c\u6211\u4eec\u5c06\u4ece\u5934\u5f00\u59cb\u5b9e\u73b0\u6743\u91cd\u8870\u51cf\uff0c\u53ea\u9700\u5c06$L_2$\u7684\u5e73\u65b9\u60e9\u7f5a\u6dfb\u52a0\u5230\u539f\u59cb\u76ee\u6807\u51fd\u6570\u4e2d\u3002\n\n### \u521d\u59cb\u5316\u6a21\u578b\u53c2\u6570\n\n\u9996\u5148\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6765\u968f\u673a\u521d\u59cb\u5316\u6211\u4eec\u7684\u6a21\u578b\u53c2\u6570\u3002\n","761010cd":"2. \u4e0d\u662f\u6700\u4f18\uff0c\u53ea\u662f\u5728\u9a8c\u8bc1\u96c6\u4e0a\u62df\u5408\u6700\u4f73\n\n3. $$\n\\begin{aligned}\n\\mathbf{w} & \\leftarrow \\left(1- \\eta\\lambda \\right) - \\frac{\\eta}{|\\mathcal{B}|} \\sum_{i \\in \\mathcal{B}} \\mathbf{x}^{(i)} \\left(\\mathbf{w}^\\top \\mathbf{x}^{(i)} + b - y^{(i)}\\right).\n\\end{aligned}\n$$\n\n5. dropout, batchnormlize","63a10d23":"### \u5b9a\u4e49$L_2$\u8303\u6570\u60e9\u7f5a\n\n\u5b9e\u73b0\u8fd9\u4e00\u60e9\u7f5a\u6700\u65b9\u4fbf\u7684\u65b9\u6cd5\u662f\u5bf9\u6240\u6709\u9879\u6c42\u5e73\u65b9\u540e\u5e76\u5c06\u5b83\u4eec\u6c42\u548c\u3002\n","aab5cd91":"\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5728\u5b9e\u4f8b\u5316\u4f18\u5316\u5668\u65f6\u76f4\u63a5\u901a\u8fc7`weight_decay`\u6307\u5b9aweight decay\u8d85\u53c2\u6570\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPyTorch\u540c\u65f6\u8870\u51cf\u6743\u91cd\u548c\u504f\u79fb\u3002\u8fd9\u91cc\u6211\u4eec\u53ea\u4e3a\u6743\u91cd\u8bbe\u7f6e\u4e86`weight_decay`\uff0c\u6240\u4ee5bias\u53c2\u6570$b$\u4e0d\u4f1a\u8870\u51cf\u3002\n","88249442":"\u9996\u5148\uff0c\u6211\u4eec\u50cf\u4ee5\u524d\u4e00\u6837\u751f\u6210\u4e00\u4e9b\u6570\u636e\uff0c\u751f\u6210\u516c\u5f0f\u5982\u4e0b\uff1a\n\n$$y = 0.05 + \\sum_{i = 1}^d 0.01 x_i + \\epsilon \\text{ where }\n\\epsilon \\sim \\mathcal{N}(0, 0.01^2).$$\n\n\u6211\u4eec\u9009\u62e9\u6807\u7b7e\u662f\u5173\u4e8e\u8f93\u5165\u7684\u7ebf\u6027\u51fd\u6570\u3002\u6807\u7b7e\u540c\u65f6\u88ab\u5747\u503c\u4e3a0\uff0c\u6807\u51c6\u5dee\u4e3a0.01\u9ad8\u65af\u566a\u58f0\u7834\u574f\u3002\u4e3a\u4e86\u4f7f\u8fc7\u62df\u5408\u7684\u6548\u679c\u66f4\u52a0\u660e\u663e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u95ee\u9898\u7684\u7ef4\u6570\u589e\u52a0\u5230$d = 200$\uff0c\u5e76\u4f7f\u7528\u4e00\u4e2a\u53ea\u5305\u542b20\u4e2a\u6837\u672c\u7684\u5c0f\u8bad\u7ec3\u96c6\u3002\n","10573851":"[Discussions](https:\/\/discuss.d2l.ai\/t\/1808)\n","dd18a9f3":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ea\u63a5\u89e6\u5230\u4e00\u4e2a\u7b80\u5355\u7ebf\u6027\u51fd\u6570\u7684\u6982\u5ff5\u3002\u6b64\u5916\uff0c\u7531\u4ec0\u4e48\u6784\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u975e\u7ebf\u6027\u51fd\u6570\u53ef\u80fd\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c[\u518d\u751f\u6838\u5e0c\u5c14\u4f2f\u7279\u7a7a\u95f4\uff08RKHS\uff09](https:\/\/en.wikipedia.org\/wiki\/Reproducing_kernel_Hilbert_space)\u5141\u8bb8\u5728\u975e\u7ebf\u6027\u73af\u5883\u4e2d\u5e94\u7528\u4e3a\u7ebf\u6027\u51fd\u6570\u5f15\u5165\u7684\u5de5\u5177\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u57fa\u4e8eRKHS\u7684\u7b97\u6cd5\u5f80\u5f80\u96be\u4ee5\u6269\u5c55\u5230\u5927\u578b\u3001\u9ad8\u7ef4\u7684\u6570\u636e\u3002\u5728\u8fd9\u672c\u4e66\u4e2d\uff0c\u6211\u4eec\u5c06\u9ed8\u8ba4\u4f7f\u7528\u7b80\u5355\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u5373\u5728\u6df1\u5c42\u7f51\u7edc\u7684\u6240\u6709\u5c42\u4e0a\u5e94\u7528\u6743\u91cd\u8870\u51cf\u3002\n\n## \u5c0f\u7ed3\n\n* \u6b63\u5219\u5316\u662f\u5904\u7406\u8fc7\u62df\u5408\u7684\u5e38\u7528\u65b9\u6cd5\u3002\u5728\u8bad\u7ec3\u96c6\u7684\u635f\u5931\u51fd\u6570\u4e2d\u52a0\u5165\u60e9\u7f5a\u9879\uff0c\u4ee5\u964d\u4f4e\u5b66\u4e60\u5230\u7684\u6a21\u578b\u7684\u590d\u6742\u5ea6\u3002\n* \u4fdd\u6301\u6a21\u578b\u7b80\u5355\u7684\u4e00\u4e2a\u7279\u522b\u7684\u9009\u62e9\u662f\u4f7f\u7528$L_2$\u60e9\u7f5a\u7684\u6743\u91cd\u8870\u51cf\u3002\u8fd9\u4f1a\u5bfc\u81f4\u5b66\u4e60\u7b97\u6cd5\u66f4\u65b0\u6b65\u9aa4\u4e2d\u7684\u6743\u91cd\u8870\u51cf\u3002\n* \u6743\u91cd\u8870\u51cf\u529f\u80fd\u5728\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u7684\u4f18\u5316\u5668\u4e2d\u63d0\u4f9b\u3002\n* \u5728\u540c\u4e00\u8bad\u7ec3\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c\u4e0d\u540c\u7684\u53c2\u6570\u96c6\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u66f4\u65b0\u884c\u4e3a\u3002\n\n## \u7ec3\u4e60\n\n1. \u5728\u672c\u8282\u7684\u4f30\u8ba1\u95ee\u9898\u4e2d\u4f7f\u7528$\\lambda$\u7684\u503c\u8fdb\u884c\u5b9e\u9a8c\u3002\u7ed8\u5236\u8bad\u7ec3\u548c\u6d4b\u8bd5\u51c6\u786e\u7387\u5173\u4e8e$\\lambda$\u7684\u51fd\u6570\u3002\u4f60\u89c2\u5bdf\u5230\u4e86\u4ec0\u4e48\uff1f\n1. \u4f7f\u7528\u9a8c\u8bc1\u96c6\u6765\u627e\u5230\u6700\u4f73\u503c$\\lambda$\u3002\u5b83\u771f\u7684\u662f\u6700\u4f18\u503c\u5417\uff1f\u8fd9\u6709\u5173\u7cfb\u5417\uff1f\n1. \u5982\u679c\u6211\u4eec\u4f7f\u7528$\\sum_i |w_i|$\u4f5c\u4e3a\u6211\u4eec\u9009\u62e9\u7684\u60e9\u7f5a\uff08$L_1$\u6b63\u5219\u5316\uff09\uff0c\u90a3\u4e48\u66f4\u65b0\u65b9\u7a0b\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\n1. \u6211\u4eec\u77e5\u9053$\\|\\mathbf{w}\\|^2 = \\mathbf{w}^\\top \\mathbf{w}$\u3002\u4f60\u80fd\u627e\u5230\u7c7b\u4f3c\u7684\u77e9\u9635\u65b9\u7a0b\u5417\uff08\u89c1 :numref:`subsec_lin-algebra-norms` \u4e2d\u7684\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u8303\u6570\uff09\uff1f\n1. \u56de\u987e\u8bad\u7ec3\u8bef\u5dee\u548c\u6cdb\u5316\u8bef\u5dee\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u9664\u4e86\u6743\u91cd\u8870\u51cf\u3001\u589e\u52a0\u8bad\u7ec3\u6570\u636e\u3001\u4f7f\u7528\u9002\u5f53\u590d\u6742\u5ea6\u7684\u6a21\u578b\u4e4b\u5916\uff0c\u4f60\u8fd8\u80fd\u60f3\u51fa\u5176\u4ed6\u4ec0\u4e48\u65b9\u6cd5\u6765\u5904\u7406\u8fc7\u62df\u5408\uff1f\n1. \u5728\u8d1d\u53f6\u65af\u7edf\u8ba1\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u5148\u9a8c\u548c\u4f3c\u7136\u7684\u4e58\u79ef\uff0c\u901a\u8fc7\u516c\u5f0f$P(w \\mid x) \\propto P(x \\mid w) P(w)$\u5f97\u5230\u540e\u9a8c\u3002\u5982\u4f55\u5f97\u5230\u5e26\u6b63\u5219\u5316\u7684$P(w)$\uff1f\n","2fe08af5":"### \u4e0d\u4f7f\u7528\u6b63\u5219\u5316\u8fdb\u884c\u8bad\u7ec3\n\n\u6211\u4eec\u73b0\u5728\u7528`lambd = 0`\u7981\u7528\u6743\u91cd\u8870\u51cf\u540e\u8fd0\u884c\u8fd9\u4e2a\u4ee3\u7801\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u8bad\u7ec3\u8bef\u5dee\u6709\u4e86\u51cf\u5c11\uff0c\u4f46\u6d4b\u8bd5\u8bef\u5dee\u6ca1\u6709\u51cf\u5c11\u3002\u8fd9\u610f\u5473\u7740\u51fa\u73b0\u4e86\u4e25\u91cd\u7684\u8fc7\u62df\u5408\u3002\u8fd9\u662f\u8fc7\u62df\u5408\u7684\u4e00\u4e2a\u5178\u578b\u4f8b\u5b50\u3002\n","8625551b":"# \u6743\u91cd\u8870\u51cf\n:label:`sec_weight_decay`\n\n\u6211\u4eec\u5df2\u7ecf\u63cf\u8ff0\u4e86\u8fc7\u62df\u5408\u7684\u95ee\u9898\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4ecb\u7ecd\u4e00\u4e9b\u6b63\u5219\u5316\u6a21\u578b\u7684\u6280\u672f\u3002\u6211\u4eec\u603b\u662f\u53ef\u4ee5\u901a\u8fc7\u53bb\u6536\u96c6\u66f4\u591a\u7684\u8bad\u7ec3\u6570\u636e\u6765\u7f13\u89e3\u8fc7\u62df\u5408\u3002\u4f46\u8fd9\u53ef\u80fd\u6210\u672c\u5f88\u9ad8\u800c\u4e14\u8017\u65f6.\u6216\u8005\u5b8c\u5168\u8d85\u51fa\u6211\u4eec\u7684\u63a7\u5236\uff0c\u5728\u77ed\u671f\u5185\u4e0d\u53ef\u80fd\u505a\u5230\u3002\u5047\u8bbe\u5df2\u7ecf\u62e5\u6709\u5c3d\u53ef\u80fd\u591a\u7684\u9ad8\u8d28\u91cf\u6570\u636e\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u6b63\u5219\u5316\u6280\u672f\u4e0a\u3002\n\n\u56de\u60f3\u4e00\u4e0b\uff0c\u5728\u591a\u9879\u5f0f\u56de\u5f52\u7684\u4f8b\u5b50\uff08 :numref:`sec_model_selection`\uff09\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u62df\u5408\u591a\u9879\u5f0f\u7684\u9636\u6570\u6765\u9650\u5236\u6a21\u578b\u7684\u5bb9\u91cf\u3002\u5b9e\u9645\u4e0a\uff0c\u9650\u5236\u7279\u5f81\u7684\u6570\u91cf\u662f\u7f13\u89e3\u8fc7\u62df\u5408\u7684\u4e00\u79cd\u5e38\u7528\u6280\u672f\u3002\u7136\u800c\uff0c\u7b80\u5355\u5730\u4e22\u5f03\u7279\u5f81\u5bf9\u4e8e\u8fd9\u9879\u5de5\u4f5c\u6765\u8bf4\u53ef\u80fd\u8fc7\u4e8e\u751f\u786c\u3002\u6211\u4eec\u7ee7\u7eed\u601d\u8003\u591a\u9879\u5f0f\u56de\u5f52\u7684\u4f8b\u5b50\uff0c\u8003\u8651\u9ad8\u7ef4\u8f93\u5165\u53ef\u80fd\u53d1\u751f\u7684\u60c5\u51b5\u3002\u591a\u9879\u5f0f\u5bf9\u591a\u53d8\u91cf\u6570\u636e\u7684\u81ea\u7136\u6269\u5c55\u79f0\u4e3a*\u5355\u9879\u5f0f*\uff08monomials\uff09\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u53d8\u91cf\u5e42\u7684\u4e58\u79ef\u3002\u5355\u9879\u5f0f\u7684\u9636\u6570\u662f\u5e42\u7684\u548c\u3002\u4f8b\u5982\uff0c$x_1^2 x_2$\u548c$x_3 x_5^2$\u90fd\u662f3\u6b21\u5355\u9879\u5f0f\u3002\n\n\u6ce8\u610f\uff0c\u968f\u7740\u9636\u6570$d$\u7684\u589e\u957f\uff0c\u5e26\u6709\u9636\u6570$d$\u7684\u9879\u6570\u8fc5\u901f\u589e\u52a0\u3002\u7ed9\u5b9a$k$\u4e2a\u53d8\u91cf\uff0c\u9636\u6570$d$\uff08\u5373$k$\u591a\u9009$d$\uff09\u7684\u4e2a\u6570\u4e3a${k - 1 + d} \\choose {k - 1}$\u3002\u5373\u4f7f\u662f\u9636\u6570\u4e0a\u7684\u5fae\u5c0f\u53d8\u5316\uff0c\u6bd4\u5982\u4ece$2$\u5230$3$\uff0c\u4e5f\u4f1a\u663e\u8457\u589e\u52a0\u6211\u4eec\u6a21\u578b\u7684\u590d\u6742\u6027\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u4e00\u4e2a\u66f4\u7ec6\u7c92\u5ea6\u7684\u5de5\u5177\u6765\u8c03\u6574\u51fd\u6570\u7684\u590d\u6742\u6027\u3002\n\n## \u8303\u6570\u4e0e\u6743\u91cd\u8870\u51cf\n\n\u5728\u4e4b\u524d\u7684\u7ae0\u8282\uff0c\u6211\u4eec\u5df2\u7ecf\u63cf\u8ff0\u4e86$L_2$\u8303\u6570\u548c$L_1$\u8303\u6570\uff0c\u5b83\u4eec\u662f$L_p$\u8303\u6570\u7684\u7279\u6b8a\u60c5\u51b5\u3002\n*\u6743\u91cd\u8870\u51cf*\uff08\u901a\u5e38\u79f0\u4e3a$L_2$\u6b63\u5219\u5316\uff09\uff0c\u53ef\u80fd\u662f\u6700\u5e7f\u6cdb\u4f7f\u7528\u7684\u5bf9\u53c2\u6570\u5316\u673a\u5668\u5b66\u4e60\u6a21\u578b\u8fdb\u884c\u6b63\u5219\u5316\u7684\u6280\u672f\u3002\u8fd9\u9879\u6280\u672f\u662f\u57fa\u4e8e\u4e00\u4e2a\u57fa\u672c\u76f4\u89c9\uff0c\u5373\u5728\u6240\u6709\u51fd\u6570$f$\u4e2d\uff0c\u51fd\u6570$f = 0$\uff08\u6240\u6709\u8f93\u5165\u90fd\u5f97\u5230\u503c$0$\uff09\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u662f\u6700\u7b80\u5355\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u4e0e\u96f6\u7684\u8ddd\u79bb\u6765\u8861\u91cf\u51fd\u6570\u7684\u590d\u6742\u5ea6\u3002\u4f46\u662f\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u7cbe\u786e\u5730\u6d4b\u91cf\u4e00\u4e2a\u51fd\u6570\u548c\u96f6\u4e4b\u95f4\u7684\u8ddd\u79bb\u5462\uff1f\u6ca1\u6709\u4e00\u4e2a\u6b63\u786e\u7684\u7b54\u6848\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6574\u4e2a\u6570\u5b66\u5206\u652f\uff0c\u5305\u62ec\u51fd\u6570\u5206\u6790\u548c\u5df4\u62ff\u8d6b\u7a7a\u95f4\u7406\u8bba\uff0c\u90fd\u5728\u81f4\u529b\u4e8e\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u7ebf\u6027\u51fd\u6570$f(\\mathbf{x}) = \\mathbf{w}^\\top \\mathbf{x}$\u4e2d\u7684\u6743\u91cd\u5411\u91cf\u7684\u67d0\u4e2a\u8303\u6570\u6765\u5ea6\u91cf\u5176\u590d\u6742\u6027\uff0c\u4f8b\u5982$\\| \\mathbf{w} \\|^2$\u3002\u8981\u4fdd\u8bc1\u6743\u91cd\u5411\u91cf\u6bd4\u8f83\u5c0f\uff0c\u6700\u5e38\u7528\u65b9\u6cd5\u662f\u5c06\u5176\u8303\u6570\u4f5c\u4e3a\u60e9\u7f5a\u9879\u52a0\u5230\u6700\u5c0f\u5316\u635f\u5931\u7684\u95ee\u9898\u4e2d\u3002\u5c06\u539f\u6765\u7684\u8bad\u7ec3\u76ee\u6807*\u6700\u5c0f\u5316\u8bad\u7ec3\u6807\u7b7e\u4e0a\u7684\u9884\u6d4b\u635f\u5931*\uff0c\u8c03\u6574\u4e3a*\u6700\u5c0f\u5316\u9884\u6d4b\u635f\u5931\u548c\u60e9\u7f5a\u9879\u4e4b\u548c*\u3002\n\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u7684\u6743\u91cd\u5411\u91cf\u589e\u957f\u7684\u592a\u5927\uff0c\u6211\u4eec\u7684\u5b66\u4e60\u7b97\u6cd5\u53ef\u80fd\u4f1a\u66f4\u96c6\u4e2d\u4e8e\u6700\u5c0f\u5316\u6743\u91cd\u8303\u6570$\\| \\mathbf{w} \\|^2$\u3002\u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b :numref:`sec_linear_regression` \u4e2d\u7684\u7ebf\u6027\u56de\u5f52\u4f8b\u5b50\u3002\u6211\u4eec\u7684\u635f\u5931\u7531\u4e0b\u5f0f\u7ed9\u51fa\uff1a\n\n$$L(\\mathbf{w}, b) = \\frac{1}{n}\\sum_{i=1}^n \\frac{1}{2}\\left(\\mathbf{w}^\\top \\mathbf{x}^{(i)} + b - y^{(i)}\\right)^2.$$\n\n\u56de\u60f3\u4e00\u4e0b\uff0c$\\mathbf{x}^{(i)}$\u662f\u6837\u672c$i$\u7684\u7279\u5f81\uff0c$y^{(i)}$\u662f\u6837\u672c$i$\u7684\u6807\u7b7e\u3002$(\\mathbf{w}, b)$\u662f\u6743\u91cd\u548c\u504f\u7f6e\u53c2\u6570\u3002\u4e3a\u4e86\u60e9\u7f5a\u6743\u91cd\u5411\u91cf\u7684\u5927\u5c0f\uff0c\u6211\u4eec\u5fc5\u987b\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5728\u635f\u5931\u51fd\u6570\u4e2d\u6dfb\u52a0$\\| \\mathbf{w} \\|^2$\uff0c\u4f46\u662f\u6a21\u578b\u5e94\u8be5\u5982\u4f55\u5e73\u8861\u8fd9\u4e2a\u65b0\u7684\u989d\u5916\u60e9\u7f5a\u7684\u635f\u5931\uff1f\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u901a\u8fc7*\u6b63\u5219\u5316\u5e38\u6570*$\\lambda$\u6765\u63cf\u8ff0\u8fd9\u79cd\u6743\u8861\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u8d1f\u8d85\u53c2\u6570\uff0c\u6211\u4eec\u4f7f\u7528\u9a8c\u8bc1\u6570\u636e\u62df\u5408\uff1a\n\n$$L(\\mathbf{w}, b) + \\frac{\\lambda}{2} \\|\\mathbf{w}\\|^2,$$\n\n\u5bf9\u4e8e$\\lambda = 0$\uff0c\u6211\u4eec\u6062\u590d\u4e86\u539f\u6765\u7684\u635f\u5931\u51fd\u6570\u3002\u5bf9\u4e8e$\\lambda > 0$\uff0c\u6211\u4eec\u9650\u5236$\\| \\mathbf{w} \\|$\u7684\u5927\u5c0f\u3002\u6211\u4eec\u4ecd\u7136\u9664\u4ee5$2$\uff1a\u5f53\u6211\u4eec\u53d6\u4e00\u4e2a\u4e8c\u6b21\u51fd\u6570\u7684\u5bfc\u6570\u65f6\uff0c$2$\u548c$1\/2$\u4f1a\u62b5\u6d88\uff0c\u4ee5\u786e\u4fdd\u66f4\u65b0\u8868\u8fbe\u5f0f\u770b\u8d77\u6765\u65e2\u6f02\u4eae\u53c8\u7b80\u5355\u3002\u806a\u660e\u7684\u8bfb\u8005\u53ef\u80fd\u4f1a\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f7f\u7528\u5e73\u65b9\u8303\u6570\u800c\u4e0d\u662f\u6807\u51c6\u8303\u6570\uff08\u5373\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\uff09\u3002\u6211\u4eec\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u4fbf\u4e8e\u8ba1\u7b97\u3002\u901a\u8fc7\u5e73\u65b9$L_2$\u8303\u6570\uff0c\u6211\u4eec\u53bb\u6389\u5e73\u65b9\u6839\uff0c\u7559\u4e0b\u6743\u91cd\u5411\u91cf\u6bcf\u4e2a\u5206\u91cf\u7684\u5e73\u65b9\u548c\u3002\u8fd9\u4f7f\u5f97\u60e9\u7f5a\u7684\u5bfc\u6570\u5f88\u5bb9\u6613\u8ba1\u7b97\uff1a\u5bfc\u6570\u7684\u548c\u7b49\u4e8e\u548c\u7684\u5bfc\u6570\u3002\n\n\u6b64\u5916\uff0c\u4f60\u53ef\u80fd\u4f1a\u95ee\u4e3a\u4ec0\u4e48\u6211\u4eec\u9996\u5148\u4f7f\u7528$L_2$\u8303\u6570\uff0c\u800c\u4e0d\u662f$L_1$\u8303\u6570\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e9b\u9009\u62e9\u5728\u6574\u4e2a\u7edf\u8ba1\u9886\u57df\u4e2d\u90fd\u662f\u6709\u6548\u7684\u548c\u53d7\u6b22\u8fce\u7684\u3002$L_2$\u6b63\u5219\u5316\u7ebf\u6027\u6a21\u578b\u6784\u6210\u7ecf\u5178\u7684*\u5cad\u56de\u5f52*\uff08ridge regression\uff09\u7b97\u6cd5\uff0c$L_1$\u6b63\u5219\u5316\u7ebf\u6027\u56de\u5f52\u662f\u7edf\u8ba1\u5b66\u4e2d\u7c7b\u4f3c\u7684\u57fa\u672c\u6a21\u578b\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a*\u5957\u7d22\u56de\u5f52*\uff08lasso regression\uff09\u3002\n\n\u4f7f\u7528$L_2$\u8303\u6570\u7684\u4e00\u4e2a\u539f\u56e0\u662f\u5b83\u5bf9\u6743\u91cd\u5411\u91cf\u7684\u5927\u5206\u91cf\u65bd\u52a0\u4e86\u5de8\u5927\u7684\u60e9\u7f5a\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u7684\u5b66\u4e60\u7b97\u6cd5\u504f\u5411\u4e8e\u5728\u5927\u91cf\u7279\u5f81\u4e0a\u5747\u5300\u5206\u5e03\u6743\u91cd\u7684\u6a21\u578b\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u53ef\u80fd\u4f7f\u5b83\u4eec\u5bf9\u5355\u4e2a\u53d8\u91cf\u4e2d\u7684\u89c2\u6d4b\u8bef\u5dee\u66f4\u4e3a\u9c81\u68d2\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c$L_1$\u60e9\u7f5a\u4f1a\u5bfc\u81f4\u6a21\u578b\u5c06\u5176\u4ed6\u6743\u91cd\u6e05\u9664\u4e3a\u96f6\u800c\u5c06\u6743\u91cd\u96c6\u4e2d\u5728\u4e00\u5c0f\u90e8\u5206\u7279\u5f81\u4e0a\u3002\u8fd9\u79f0\u4e3a*\u7279\u5f81\u9009\u62e9*\uff08feature selection\uff09\uff0c\u8fd9\u53ef\u80fd\u662f\u5176\u4ed6\u573a\u666f\u4e0b\u9700\u8981\u7684\u3002\n\n\u4f7f\u7528\u4e0e :eqref:`eq_linreg_batch_update` \u4e2d\u7684\u76f8\u540c\u7b26\u53f7\uff0c$L_2$\u6b63\u5219\u5316\u56de\u5f52\u7684\u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u66f4\u65b0\u5982\u4e0b\u5f0f\uff1a\n\n$$\n\\begin{aligned}\n\\mathbf{w} & \\leftarrow \\left(1- \\eta\\lambda \\right) \\mathbf{w} - \\frac{\\eta}{|\\mathcal{B}|} \\sum_{i \\in \\mathcal{B}} \\mathbf{x}^{(i)} \\left(\\mathbf{w}^\\top \\mathbf{x}^{(i)} + b - y^{(i)}\\right).\n\\end{aligned}\n$$\n\n\u6839\u636e\u4e4b\u524d\u7ae0\u8282\u6240\u8bb2\u7684\uff0c\u6211\u4eec\u6839\u636e\u4f30\u8ba1\u503c\u4e0e\u89c2\u6d4b\u503c\u4e4b\u95f4\u7684\u5dee\u5f02\u6765\u66f4\u65b0$\\mathbf{w}$\u3002\u7136\u800c\uff0c\u6211\u4eec\u540c\u65f6\u4e5f\u5728\u8bd5\u56fe\u5c06$\\mathbf{w}$\u7684\u5927\u5c0f\u7f29\u5c0f\u5230\u96f6\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fd9\u79cd\u65b9\u6cd5\u6709\u65f6\u88ab\u79f0\u4e3a*\u6743\u91cd\u8870\u51cf*\u3002\u6211\u4eec\u4ec5\u8003\u8651\u60e9\u7f5a\u9879\uff0c\u4f18\u5316\u7b97\u6cd5\u5728\u8bad\u7ec3\u7684\u6bcf\u4e00\u6b65*\u8870\u51cf*\u6743\u91cd\u3002\u4e0e\u7279\u5f81\u9009\u62e9\u76f8\u6bd4\uff0c\u6743\u91cd\u8870\u51cf\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u8fde\u7eed\u7684\u673a\u5236\u6765\u8c03\u6574\u51fd\u6570\u7684\u590d\u6742\u5ea6\u3002\u8f83\u5c0f\u7684$\\lambda$\u503c\u5bf9\u5e94\u8f83\u5c11\u7ea6\u675f\u7684$\\mathbf{w}$\uff0c\u800c\u8f83\u5927\u7684$\\lambda$\u503c\u5bf9$\\mathbf{w}$\u7684\u7ea6\u675f\u66f4\u5927\u3002\n\n\u662f\u5426\u5bf9\u76f8\u5e94\u7684\u504f\u7f6e$b^2$\u8fdb\u884c\u60e9\u7f5a\u5728\u4e0d\u540c\u7684\u5b9e\u73b0\u4e2d\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u4e0d\u540c\u5c42\u4e2d\u4e5f\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u901a\u5e38\uff0c\u6211\u4eec\u4e0d\u6b63\u5219\u5316\u7f51\u7edc\u8f93\u51fa\u5c42\u7684\u504f\u7f6e\u9879\u3002\n\n## \u9ad8\u7ef4\u7ebf\u6027\u56de\u5f52\n\n\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u6f14\u793a\u6743\u91cd\u8870\u51cf\u3002\n","11f61ebb":"### \u4f7f\u7528\u6743\u91cd\u8870\u51cf\n\n\u4e0b\u9762\uff0c\u6211\u4eec\u4f7f\u7528\u6743\u91cd\u8870\u51cf\u6765\u8fd0\u884c\u4ee3\u7801\u3002\u6ce8\u610f\uff0c\u5728\u8fd9\u91cc\u8bad\u7ec3\u8bef\u5dee\u589e\u5927\uff0c\u4f46\u6d4b\u8bd5\u8bef\u5dee\u51cf\u5c0f\u3002\u8fd9\u6b63\u662f\u6211\u4eec\u671f\u671b\u4ece\u6b63\u5219\u5316\u4e2d\u5f97\u5230\u7684\u6548\u679c\u3002\n"}}