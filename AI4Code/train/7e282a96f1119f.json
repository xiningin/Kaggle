{"cell_type":{"450ec7c7":"code","f54db475":"code","83f6ae69":"code","95105802":"code","03547737":"code","e9fa32ad":"code","c3f22b0c":"code","34d0caa2":"code","da848552":"code","29ec3ea5":"code","ac97f211":"code","37b8e94b":"code","e9fb73df":"code","db026611":"code","2930ab65":"code","8918a069":"code","8685731f":"code","f75a242f":"code","8234e6a1":"code","26b10484":"code","b5d04cad":"code","c0a45088":"code","05583c8a":"code","cc51ac5c":"code","f31ba4d1":"code","d3c7e0f5":"code","92b09179":"code","bbb9bb9e":"code","ebf3153f":"code","d320ca91":"code","9313ac85":"code","1b5c1783":"code","f377e582":"code","8ba716d4":"code","6a6924b4":"code","9ebbb1fe":"code","47315792":"code","5913dd99":"code","e0ff1d09":"markdown","d4209c38":"markdown","f024120b":"markdown","b9835ec9":"markdown","648b185f":"markdown","408d3267":"markdown","ba5a8798":"markdown","745b5535":"markdown","6d183689":"markdown"},"source":{"450ec7c7":"import pandas as pd\npd.set_option('display.max_columns', 10)\npd.set_option('display.max_rows', 10)\nimport requests\nimport numpy as np\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nimport folium\nfrom geopy.geocoders import Nominatim\nimport matplotlib.cm as cm\nimport matplotlib.colors as colors\nimport matplotlib.pyplot as plt; plt.rcdefaults()\nimport matplotlib.pyplot as plt","f54db475":"toronto_restu = pd.read_csv('..\/input\/torontorestaurants\/toronto_restu.csv')\ntoronto_restu","83f6ae69":"# Merging the categories for different resturants for each nieghborhood\ntoronto_grouped = toronto_restu.groupby(['Borough_Neighbourhood','Neighborhood_Latitude','Neighborhood_Longitude'])['Venue_Cat'].agg(lambda x: ','.join(x)).reset_index()\ntoronto_grouped","95105802":"# There are many dupplicated restaurants categories,So let us remove the ducplicated one's and count the number of unique categories for each nieghborhood \ntoronto_grouped['Venue_Cat'][0]","03547737":"# Removing the dupplicated categories from Venue_Cat column\ns_to_d = {}\nfor i,row in toronto_grouped.iterrows():\n    s_to_d[i] = list(toronto_grouped['Venue_Cat'][i].split(','))\n    s_to_d[i] = list(dict.fromkeys(s_to_d[i]))\n    \n    \ns_to_d[0]","e9fa32ad":"# Computing the number of unique Resturant types for each Nieghborhood\ntoronto_grouped['Variety'] = 'NaN'\nfor i, row in toronto_grouped.iterrows():\n    toronto_grouped.at[i,'Variety'] = len(s_to_d[i])\n\ntoronto_grouped","c3f22b0c":"niegh_df = toronto_restu.groupby(by=['Borough_Neighbourhood','Neighborhood_Latitude','Neighborhood_Longitude']).agg( {'Venue_Cat': lambda x: x.count()}).reset_index()\nniegh_df.rename(columns={'Venue_Cat': 'Venue_Count'}, inplace=True)\nniegh_df['Variety'] = toronto_grouped['Variety']\nniegh_df","34d0caa2":"# checking if variations in number of restaurants and thier categories are significant enough to build robust clustering model\nprint('Maximum Variety: ', niegh_df['Variety'].max(),'Minimum Variety: ',niegh_df['Variety'].min())\nprint('Maximum Veneu Count:', niegh_df['Venue_Count'].max(), 'Minimum Venue Count:', niegh_df['Venue_Count'].min())","da848552":"# (Optional) Saving the final dataframe as CSV file to use it later in building the clustering model\nniegh_df.to_csv(r'C:\\Users\\stum2013148992\\niegh_df.csv')","29ec3ea5":"# (Step1)Creatging list of urls which will be used to call Foursquare end points\n#url_list = []\n#for i, row in toronto_restu.iterrows():\n    #url_list.append([i,'https:\/\/api.foursquare.com\/v2\/venues\/{}?'.format(row.Venue_Id),'client_id={}&client_secret={}&v={}'.format(CLIENT_ID, CLIENT_SECRET, VERSION)])\n\n\n#url_list[0][2]","ac97f211":"#(Step2) Append url_list items to create full urls\n#urls = []\n#for i,item in enumerate(url_list):\n   # index = url_list[i][0]\n   # s1 = url_list[i][1]\n    #s2 = url_list[i][2]\n    #s3 = s1 + s2\n    #urls.append([index,s3])\n\n#urls[0][1]","37b8e94b":"# Step3\n#toronto_rating = toronto_restu.copy()\n#toronto_rating['Rating'] = np.nan\n#toronto_rating","e9fb73df":"# Step4\n#for i,item in enumerate(urls):\n    #try:\n        #result = requests.get(item[1]).json()\n       # toronto_rating.at[item[0], 'Rating'] = result['response'] # full path to rating needs to used\n    #except KeyError:\n        #continue\n\n#toronto_rating","db026611":"#Check the readiness if niegh_df dataframe\nniegh_df.isna().sum()","2930ab65":"x = niegh_df[['Venue_Count', 'Variety']]\nx","8918a069":"x_cluster = StandardScaler().fit_transform(x)\nx_cluster[0:10]","8685731f":"# Calculating the best optimal k by using Elbow method\nimport matplotlib.pyplot as plt\nSum_of_squared_distances = []\nK = range(1,15)\nfor k in K:\n    km = KMeans(n_clusters=k)\n    km = km.fit(x_cluster)\n    Sum_of_squared_distances.append(km.inertia_)\n    \nplt.plot(K, Sum_of_squared_distances, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Sum_of_squared_distances')\nplt.title('Elbow Method For Optimal k')\nplt.show()","f75a242f":"kclusters = 3\nk_means = KMeans(init = \"k-means++\", n_clusters = kclusters, n_init = 12)\nk_means.fit(x_cluster)\nlabels = k_means.labels_\nprint(labels)","8234e6a1":"# Adding label column to niegh_df DataFrame\nniegh_df['label'] = labels\nniegh_df.head()","26b10484":"# check if there is any empty cell\nniegh_df.isna().sum()","b5d04cad":"latitude = 43.6534817\nlongitude = -79.3839347\nprint('The geograpical coordinate of Toronto City are {}, {}.'.format(latitude, longitude))","c0a45088":"#Cluter0:\nniegh_df[niegh_df['label'] == 0]","05583c8a":"#Cluter1\nniegh_df[niegh_df['label'] == 1]","cc51ac5c":"#Cluter2\nniegh_df[niegh_df['label'] == 2]","f31ba4d1":"# Create new column to describe the cluster behaviour \nniegh_df.loc[niegh_df['label'] == 1, 'Cluster'] = 'Low density and Variety' # 1\nniegh_df.loc[niegh_df['label'] == 0, 'Cluster'] = 'Medium density and Variety' # 0\nniegh_df.loc[niegh_df['label'] == 2, 'Cluster'] = 'High density and Variety' # 2\n\n#Please note cluster labels changes everytime you run the code so make sure to examine the labels and their corresponding cluster at each time you run the code","d3c7e0f5":"# Visulaize the clusters\nniegh_df['Cluster'].hist()","92b09179":"# Clusters Vs Number Of Restaurants\nboxplot = niegh_df.boxplot(column=['Venue_Count'], by=['label'])","bbb9bb9e":"# Cluster VS Variety\nboxplot = niegh_df.boxplot(column=['Variety'], by=['label'])","ebf3153f":"# create map\nmap_clusters = folium.Map(location=[latitude, longitude], zoom_start=10)\n\n# set color scheme for the clusters\nx = np.arange(kclusters)\nys = [i + x + (i*x)**2 for i in range(kclusters)]\ncolors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\nrainbow = [colors.rgb2hex(i) for i in colors_array]\n\n# add markers to the map\nmarkers_colors = []\nfor lat, lon, poi, cluster,clusterNum in zip(niegh_df['Neighborhood_Latitude'], niegh_df['Neighborhood_Longitude'], niegh_df['Borough_Neighbourhood'],niegh_df['Cluster'], niegh_df['label']):\n    label = folium.Popup(str(poi) + ' Cluster ' + cluster, parse_html=True)\n    folium.CircleMarker(\n        [lat, lon],\n        radius=5,\n        popup=label,\n        color=rainbow[clusterNum-1],\n        fill=True,\n        fill_color=rainbow[clusterNum-1],\n        fill_opacity=0.7).add_to(map_clusters)\n       \n\n\nmap_clusters","d320ca91":"# Create dataframe for high cluster\nhigh_cluster = niegh_df[niegh_df['label'] == 0]\nhigh_cluster.head(2)","9313ac85":"# # Create dataframe for Medium cluster\nMedium_cluster = niegh_df[niegh_df['label'] == 1]\nMedium_cluster.head(2)","1b5c1783":"# # Create dataframe for Low cluster\nlow_cluster = niegh_df[niegh_df['label'] == 2]\nlow_cluster.head(2)","f377e582":"# Neighborhoods Vs Number Of Resaurants (Low Cluster)\nax = low_cluster.plot.bar(x='Borough_Neighbourhood', y='Venue_Count', figsize=(24,8))","8ba716d4":"# Neighborhoods Vs Number Of Variety (Low Cluster)\nax = low_cluster.plot.bar(x='Borough_Neighbourhood', y='Variety', figsize=(24,8))","6a6924b4":"#Neighborhoods Vs Number Of Resaurants (Medium Cluster)\nax = Medium_cluster.plot.bar(x='Borough_Neighbourhood', y='Venue_Count', figsize=(24,8))","9ebbb1fe":"# Neighborhoods Vs Number Of Variety (Medium Cluster)\nax = Medium_cluster.plot.bar(x='Borough_Neighbourhood', y='Variety', figsize=(24,8))","47315792":"#Neighborhoods Vs Number Of Resaurants (High Cluster)\nax = high_cluster.plot.bar(x='Borough_Neighbourhood', y='Venue_Count', figsize=(24,8))","5913dd99":"# # # Neighborhoods Vs Number Of Variety (High Cluster)\nax = high_cluster.plot.bar(x='Borough_Neighbourhood', y='Variety', figsize=(24,8))","e0ff1d09":"Visulaize the Clusters","d4209c38":"Use geopy library to get the latitude and longitude values of Toronto City","f024120b":"Steps to get the ratings for each venue, its applicable for those who have bussiness subscription with Foursquare and enough quota to runn high number of premium and regualr calls type","b9835ec9":"     Clustering the Tornoto Neighborhoods based on number restaurants and variety of cuisines \n\nIntrodcution:<br>\n1.1\tbackground:\nToronto city is multicultural city where people from different countries live and enjoy visiting different restaurants which provide different cuisines from their original home countries.\n\n1.2\tProblem:<br>\nThis diversity in cuisines makes knowing the number of restaurants and their variety of cuisines is so important for either investors who are looking to open new restaurant or for new immigrants who are looking to live in neighborhoods which have high number of restaurants and variety of cuisines.    \n\n1.3\tInterest:<br>\nThis report is an attempt to address the challenge which faces mainly two groups of people:\nGroup 1 The investors who plan to open new restaurant in one of Toronto city neighborhoods and don\u2019t know exactly which neighborhoods they can choose it considering how big and diversity Toronto city is.\nGroup 2 The immigrants who are looking to live in neighborhoods with adequate number of restaurants and variety of cuisines.\n\nGroup 3 In addition to these two groups this report may be sound interesting for people who are interested in such type of research from different fields like Data science filed, city planning ..etc.\n\n1.4\tProposed Solution:<br>\n\nToronto neighborhoods will be clustered based on number of restaurants and variety of cuisines by using Data science unsupervised model to provide clear insight about Toronto neighborhoods from perspective of their restaurants and cuisines. \n\n\n2.Data<br>\n2.1 Data Source:<br>\n1-Data from Foursquare system (https:\/\/foursquare.com\/ ) Foursquare free user account will be used to retrieve the available and relevant data from Foursquare system via using Foursquare API\u2019s.<br>\n2- List of Toronto boroughs and neighborhoods from Wikipediae (https:\/\/en.wikipedia.org\/wiki\/List_of_postal_codes_of_Canada:_M)\n\n\n\n2.2 Data Processing<br>\n1-Getting the Latitude and longtiude for each neighborhood by using pgecode library (refer to link below for more details):\nhttps:\/\/pypi.org\/project\/pgeocode\/\n2- Explore and adding the venues for each neighborhood by using foursquare end point:\nhttps:\/\/api.foursquare.com\/v2\/venues\/explore\n\n3-  Adding the category for each venue by using foursquare end point:\n https:\/\/api.foursquare.com\/v2\/venues\/explore\n3-Filtering the restaurants by using venue category filed.\n4- Preparing DataFrame with columns for Toronto neighborhoods, neighborhood latitude, neighborhoods longitude, Venue Id, Venue Category. \n5- Grouping the DataFrame records by using neighborhoods column to get the number of total restaurants for each neighborhood.\n5- Process the column of venue category to split the categories for restaurants for each neighborhood.\n6- Count the number of unique restaurant categories for each neighborhood.\n\n\n2.3 Data Cleaning <br>\n1- Removing the duplicated categories within each neighborhood, duplicated categories occurs when dataframe record is grouped so to avoid multi-counting for same restaurant category removing duplicated categories has been proceed.\n2- Continuous checking for dataframe to assure its freeness of null, unknown cells after manipulation its records.\n\n\n\n2.4 Features Selections <br>\nNumber of restaurants (Venue_Count) and the number of unique restaurants categories (Variety) will be selected as features to build the clustering model.\n\n2.5 Data Limitations <br>\ndataset used in this report is so restricted and don\u2019t represent the actual number of venues and their categories in Toronto neighborhoods Due to the limitation of free foursquare account which is used in this report as this user is eligible for 950 regular call type and 50 premium calls type per day and to retrieve up to 100 items when explore venue end point API\u2019s is used.\n\n3.Methodology <br>\n3.1 Exploratory Data Analysis<br>\nExplanatory analysis for Foursquare data has taken place at first step to understand which type of data can be retrieved adequately by using foursquare free account user type (please refer to 2.6 Data Limitation section to understand the limitation for this type of user) , accordingly decision has been taken to:\n1-\tUse the available data at Venue\/Explore end point because we can run up to 950 calls per day which will be sufficient to collect the relevant data.\n2-\tRemoving the rating data from data scope because of limitation of foursquare free account user which can get up to 50 rating per day which will not be sufficient.\n3-\tUsing number of restaurants and number of unique cuisines to segment the Toronto neighborhoods based on.\n \n\n3.2 Machine Learning<br>\nUnsupervised machine learning model has been used to cluster the neighborhoods.\n\nk-means cluster model has been selected in this study because it fulfills the requirements and Elbow method has been applied to select the optimal number of clusters (more details is available at notebook). \n\n","648b185f":"4. Results <br>\nToronto neighborhoods have been clustered into 3 clusters which are:\nA-\tNeighborhoods which have low number of restaurants and variety of cuisines like Downtown Toronto\/Harbourfront East, Union Station, Toronto Islands Cluster neighborhood.\nB-\tNeighborhoods which have medium number of restaurants and variety of cuisines like Scarborough\/Upper Rouge neighborhood\nA-\tNeighborhoods which have high number of restaurants and variety of cuisines like North York\/Willowdale, Newtonbrook neighborhood.\n\n5. Discussion <br>\n1- Its noticeable that as we move far from coast the number of restaurants and their variety increases, For example areas which are close to cost like downtown have low number of restaurants and variety whereas areas like  North York\/Willowdale have high number of restaurants and variety.\n2-As stated early these results are based on limited volume of dataset which been retrieved from foursquare system by using free account type hence some neighbor maybe not clustered correctly due to this limitation in dataset\n\n\n6. Recommendations <br>\n\n1-Its high recommended to reconduct this study by using full dataset associated with population for each neighborhood to cluster the neighborhoods properly.\n2-Breaking down this study at level of restaurant cuisine for example Chinese or Indian cuisines to shedlight on specific category of subgroups likewise for other types of venues categories.\n3-Involving other data like rating, tips\u2026etc which can help model to outline the differences between different restaurants and venues.\n","408d3267":"Examine the cluters","ba5a8798":"In the plot above the elbow is at k=3 indicating the optimal k for this dataset is 3","745b5535":"Crating final dataFrame which contains:<br>\n1-Number of unique categories of resturants (Column=Variety) <br>\n2-Resturants number (Column=Venue_Count)","6d183689":"Data Standarad "}}