{"cell_type":{"9e62155d":"code","016947d3":"code","ad1ece50":"code","0a3c263c":"code","0608a6c7":"code","ea2d3bba":"code","cb8f7492":"code","2fa33b7b":"code","9e16deac":"code","6273e90d":"code","6ec5da25":"code","e3dc21e4":"code","b83e9182":"code","828ab14c":"code","7d2c962d":"code","c061fb00":"code","c885ba57":"markdown","ad5e6550":"markdown","d7f29c3a":"markdown","0fa037b5":"markdown","179f353c":"markdown","fc87bd40":"markdown"},"source":{"9e62155d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom datetime import date as dt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","016947d3":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\n\n\nsns.reset_defaults()\nsns.set(\n    rc={'figure.figsize':(10,7)}, \n    style=\"white\" # nicer layout\n)\n\nwarnings.filterwarnings('ignore') #for ignoring the warning\ndf=pd.read_csv('..\/input\/customer-personality-analysis\/marketing_campaign.csv', delimiter='\\t')\n\n#check data type\ndf.info()\n","ad1ece50":"#check null value\ndf.isnull().sum()","0a3c263c":"#Check overall data\ndf.describe()","0608a6c7":"df['Marital_Status'].value_counts()\ndf['Education'].value_counts()","ea2d3bba":"#Create age, kids, and totalexpense column\ndf['Age']= dt.today().year-df.Year_Birth #calculate age\ndf['Kids']= df.Kidhome + df.Teenhome #calculate total kids\ndf['TotalExpense'] = df.MntWines + df.MntFruits + df.MntMeatProducts + df.MntFishProducts + df.MntSweetProducts + df.MntGoldProds #calculate total expense\n\n#check data with age>100 and drop the rows\nabove_100 = df[df['Age'] > 100]\nindex = df[(df['Age'] >= 100)].index\ndf.drop(index, inplace=True)\n\n#combine marital_status\ndf['Marital_Status']=df['Marital_Status'].replace(['Alone','Absurd','YOLO'],'Single')","cb8f7492":"cols =['Marital_Status', 'Education','Kids']\n\nfig, axs = plt.subplots(1, 3, figsize=(18, 9))#, sharey=True)\nfig.subplots_adjust(hspace = .5, wspace=.5)\naxs = axs.ravel()\n\nfor i in range(len(cols)):\n    series_inter = df[cols[i]].value_counts()\n    sns.barplot(ax=axs[i], x=series_inter.index, y=series_inter)\n    axs[i].set_title(cols[i])\n\n    \nfig.text(0.13, 0.95, 'Category data',\n         fontsize=18, fontweight='bold', fontfamily='garamond')   \nplt.show()","2fa33b7b":"#age\nplt.figure(figsize = (20,8))\nax=sns.countplot(x = 'Age', data = df)\nplt.xlabel('Age distribution')\nplt.xticks(rotation = 90)\nfor p in ax.patches:\n    ax.annotate(int(p.get_height()), (p.get_x()+0.25, p.get_height()+1), va = 'bottom', color = 'black')\nplt.show()","9e16deac":"#age\nplt.figure(figsize = (20,8))\nax=sns.countplot(x = 'Age', data = df)\nplt.xlabel('Age distribution')\nplt.xticks(rotation = 90)\nfor p in ax.patches:\n    ax.annotate(int(p.get_height()), (p.get_x()+0.25, p.get_height()+1), va = 'bottom', color = 'black')\nplt.show()","6273e90d":"sns.displot(df, x=\"TotalExpense\", hue=\"Kids\", multiple=\"stack\")\nplt.show()","6ec5da25":"fig=plt.figure()\nax = df.groupby('Kids', as_index=True).TotalExpense.sum().plot(kind='bar',color='grey')\nax.set_ylabel('TotalExpense')\nax.set_xlabel('Number of Kids')\nplt.xticks(rotation=50)\nplt.show()","e3dc21e4":"sns.lineplot(data=df, x=\"NumDealsPurchases\", y=\"TotalExpense\", hue=\"Kids\")\nplt.legend(bbox_to_anchor=(1.02, 1), loc='upper left', borderaxespad=0)\nplt.show()\n","b83e9182":"#create different age group\ndef age_buckets(x): \n    if x < 30: \n        return '18-29' \n    elif x < 40: return '30-39' \n    elif x < 50: return '40-49' \n    elif x < 60: return '50-59' \n    elif x < 70: return '60-69' \n    elif x >=70: return '70+' \n    else: return 'other'\n    ","828ab14c":"df['Age_group'] = df.Age.apply(age_buckets)\ndf['Age_group']\nsns.displot(df, x=\"Age_group\", hue=\"Kids\", multiple=\"stack\")\nplt.show()","7d2c962d":"df.groupby('Age_group', as_index=False).TotalExpense.sum()","c061fb00":"fig=plt.figure()\nax = df.groupby('Age_group', as_index=True).TotalExpense.sum().plot(kind='bar')\nax.set_ylabel('TotalExpense')\nplt.xticks(rotation=50)\nplt.show()","c885ba57":"***Dataset introduction***\n\nCustomer Personality Analysis is a detailed analysis of a company\u2019s ideal customers. It helps a business to better understand its customers and makes it easier for them to modify products according to the specific needs, behaviours and concerns of different types of customers.\n\nThe dataset have 28 columns with 2240 entries. Each column's definition is as follows:\n\nBasic information:\n* ID: Customer's unique identifier\n* Year_Birth: Customer's birth year\n* Education: Customer's education level\n* Marital_Status: Customer's marital status\n* Income: Customer's yearly household income\n* Kidhome: Number of children in customer's household\n* Teenhome: Number of teenagers in customer's household\n* Dt_Customer: Date of customer's enrollment with the company\n* Recency: Number of days since customer's last purchase\n* Complain: 1 if customer complained in the last 2 years, 0 otherwise\n\nProduct Items:\n* MntWines: Amount spent on wine in last 2 years\n* MntFruits: Amount spent on fruits in last 2 years\n* MntMeatProducts: Amount spent on meat in last 2 years\n* MntFishProducts: Amount spent on fish in last 2 years\n* MntSweetProducts: Amount spent on sweets in last 2 years\n* MntGoldProds: Amount spent on gold in last 2 years\n\nMarketing Campaign\n* NumDealsPurchases: Number of purchases made with a discount\n* AcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\n* AcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\n* AcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\n* AcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\n* AcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\n* Response: 1 if customer accepted the offer in the last campaign, 0 otherwise\n\nChannel:\n* NumWebPurchases: Number of purchases made through the company\u2019s web site\n* NumCatalogPurchases: Number of purchases made using a catalogue\n* NumStorePurchases: Number of purchases made directly in stores\n* NumWebVisitsMonth: Number of visits to company\u2019s web site in the last month","ad5e6550":"# Question 2: How do people with different age expent differently?","d7f29c3a":"# Data integrity check and data clean","0fa037b5":"# Import and explore dataset","179f353c":"#  Dataset information\n***Dataset introduction***\n\u200b\nCustomer Personality Analysis is a detailed analysis of a company\u2019s ideal customers. It helps a business to better understand its customers and makes it easier for them to modify products according to the specific needs, behaviours and concerns of different types of customers.\n\u200b\nThe dataset have 28 columns with 2240 entries. Each column's definition is as follows:\n\u200b\nBasic information:\n* ID: Customer's unique identifier\n* Year_Birth: Customer's birth year\n* Education: Customer's education level\n* Marital_Status: Customer's marital status\n* Income: Customer's yearly household income\n* Kidhome: Number of children in customer's household\n* Teenhome: Number of teenagers in customer's household\n* Dt_Customer: Date of customer's enrollment with the company\n* Recency: Number of days since customer's last purchase\n* Complain: 1 if customer complained in the last 2 years, 0 otherwise\n\u200b\nProduct Items:\n* MntWines: Amount spent on wine in last 2 years\n* MntFruits: Amount spent on fruits in last 2 years\n* MntMeatProducts: Amount spent on meat in last 2 years\n* MntFishProducts: Amount spent on fish in last 2 years\n* MntSweetProducts: Amount spent on sweets in last 2 years\n* MntGoldProds: Amount spent on gold in last 2 years\n\u200b\nMarketing Campaign\n* NumDealsPurchases: Number of purchases made with a discount\n* AcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\n* AcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\n* AcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\n* AcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\n* AcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\n* Response: 1 if customer accepted the offer in the last campaign, 0 otherwise\n\u200b\nChannel:\n* NumWebPurchases: Number of purchases made through the company\u2019s web site\n* NumCatalogPurchases: Number of purchases made using a catalogue\n* NumStorePurchases: Number of purchases made directly in stores\n* NumWebVisitsMonth: Number of visits to company\u2019s web site in the last month","fc87bd40":"# Question 1: How do people with different marital status and number of kids expent differently?"}}