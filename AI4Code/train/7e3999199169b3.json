{"cell_type":{"1b359932":"code","13a09360":"code","66879586":"code","7b404ecd":"code","9d1e5e4b":"code","3daa0628":"code","2788a923":"code","9510ed2b":"code","579b98a0":"code","3e033835":"code","e7904fe9":"code","70bb81b9":"code","912c34a8":"code","2fc7354f":"code","8d0005c2":"markdown","6fc5b9e9":"markdown","a573c350":"markdown","fd564876":"markdown","eae004e0":"markdown"},"source":{"1b359932":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom IPython.display import display\nimport random\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt","13a09360":"# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","66879586":"def load_data():\n    training_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\n    test_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\n    return training_data, test_data\n    ","7b404ecd":"training_data, test_data = load_data()\ndisplay(training_data.head())\ndisplay(test_data.head())","9d1e5e4b":"display(training_data.isnull().sum())\ndisplay(training_data.info())","3daa0628":"f, ax = plt.subplots(1,1,figsize=(10, 6))\nsns.countplot(training_data.Survived, ax=ax)\nax.set_title('Survived')\n#training_data[\"Survived\"].hist()","2788a923":"f, ax = plt.subplots(1,3,figsize=(15, 6))\nsns.countplot(training_data.Sex, ax=ax[0])\nsns.countplot(training_data.Sex, hue=training_data.Survived, ax=ax[1])\nax[1].set_title('Sex <-->Survived')\ntraining_data[['Sex', 'Survived']].groupby(['Sex']).mean().plot.bar(ax=ax[2])\nax[2].set_title('Survival rate')","9510ed2b":"f, ax = plt.subplots(1,3,figsize=(15, 6))\nsns.countplot(training_data.Pclass, ax=ax[0])\nsns.countplot(training_data.Pclass, hue=training_data.Survived, ax=ax[1])\nax[1].set_title('Pclass <-->Survived')\ntraining_data[['Pclass', 'Survived']].groupby(['Pclass']).mean().plot.bar(ax=ax[2])\nax[2].set_title('Survival rate')","579b98a0":"training_data[['Age']].describe()","3e033835":"f, ax = plt.subplots(1,3,figsize=(20, 6))\ntraining_data[['Age']].plot.hist(ax=ax[0],bins=20,edgecolor='black',color='blue')\n#training_data[['Age', 'Survived']].groupby(['Age']).mean().plot.hist(ax=ax[1],bins=20,edgecolor='black',color='red')\ntraining_data[training_data['Survived']==0].Age.plot.hist(ax=ax[1],bins=20,edgecolor='black',color='red')\nax[1].set_title('Survived= 0')\nax[1].set_xticks(list(range(0,85,5)))\ntraining_data[training_data['Survived']==1].Age.plot.hist(ax=ax[2],color='green',bins=20,edgecolor='black')\nax[2].set_title('Survived= 1')\nax[2].set_xticks(list(range(0,85,5)))","e7904fe9":"f, ax = plt.subplots(1,1,figsize=(10, 6))\nsns.countplot(training_data.Embarked, hue=training_data.Survived, ax=ax)\nax.set_title('Embarked <-->Survived')","70bb81b9":"def flip_coin_model(test_data):\n    data_size = len(test_data)\n    return [random.randint(0, 1) for i in range(0, data_size)]\n    ","912c34a8":"def submit_predictions(test_data, predictions):\n    output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\n    output.to_csv('submission.csv', index=False)\n    print(\"Your submission was successfully saved!\")","2fc7354f":"predictions = flip_coin_model(test_data)\nsubmit_predictions(test_data, predictions)","8d0005c2":"# **Embarked**","6fc5b9e9":"# **Age**","a573c350":"# **Sex**","fd564876":"# **Survived**","eae004e0":"# **Pclass**"}}