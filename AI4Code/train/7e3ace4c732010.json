{"cell_type":{"c4d4c3dc":"code","5c66de20":"code","bcae2e93":"code","6feb7840":"code","ea24c775":"code","9133bac0":"code","47a80f31":"code","1b41f906":"code","23e9bebb":"code","2f395cff":"code","b7d0ad4b":"code","51ecb3c4":"code","6217a5d9":"code","f610b2dc":"code","cb674fc6":"code","8e238efe":"code","5db661ff":"code","10ad1f55":"code","fd953e7a":"code","9c4a29ca":"code","c48b6efd":"code","544ffd0b":"code","bcdc8e15":"code","5ef7119c":"code","dc52657c":"markdown","e1ee3543":"markdown","bcabecbb":"markdown","be22e644":"markdown","018eeff0":"markdown","308ddb7e":"markdown","2d0e4d70":"markdown","41c0db9a":"markdown","73d54932":"markdown","97614a85":"markdown","41fe9c8e":"markdown","d6a33533":"markdown","3399ad62":"markdown","5457f315":"markdown","7a4fcd19":"markdown","2112e47c":"markdown","66bb1335":"markdown","38a6743d":"markdown","cdc05b4e":"markdown"},"source":{"c4d4c3dc":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\n\n# Use input to run in kaggle\n# DATA_PATH = \"..\/input\/\"\nDATA_PATH = \"..\/input\/\"\n\n\n\nprint(os.listdir(DATA_PATH))\n\n# Any results you write to the current directory are saved as output.","5c66de20":"# Bibliotecas de visualiza\u00e7\u00e3o\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n","bcae2e93":"train_df = pd.read_csv(DATA_PATH + \"train.csv\")\ntest_df = pd.read_csv(DATA_PATH + \"test.csv\")\nsample = pd.read_csv(DATA_PATH + \"sampleSubmission.csv\")","6feb7840":"train_df.head()","ea24c775":"test_df.head()","9133bac0":"train_df.isna().sum()","47a80f31":"test_df.isna().sum()","1b41f906":"train_df.drop(columns=\"Surname\", inplace=True)\ntest_df.drop(columns=\"Surname\", inplace=True)","23e9bebb":"# Vamos primeiro substituir o g\u00eanero pelo o que aparece mais frequentemente\nsns.countplot(train_df[\"Gender\"])\nplt.show()\nsns.countplot(train_df[\"Geography\"])\nplt.show()","2f395cff":"# Primeiro o pais\ntrain_df.fillna({\"Geography\": \"France\"}, inplace=True)\ntest_df.fillna({\"Geography\": \"France\"}, inplace=True)\n\n# Agora o g\u00eanero\ntrain_df.fillna({\"Gender\": \"Male\"}, inplace=True)\ntest_df.fillna({\"Gender\": \"Male\"}, inplace=True)\n\n# lembre de passar o par\u00e2metro INPLACE para ele modificar o dataframe inicial!","b7d0ad4b":"# Primeiro o pais\nmean = train_df[\"EstimatedSalary\"].mean()\ntrain_df.fillna({\"EstimatedSalary\": mean}, inplace=True)\ntest_df.fillna({\"EstimatedSalary\": mean}, inplace=True)\n","51ecb3c4":"for col in train_df.columns:\n    print(col, \"\\t\\t\", train_df[col].dtype)","6217a5d9":"from sklearn.preprocessing import LabelEncoder\n\nfor col in [\"Gender\", \"Geography\"]:\n    # Criar o encoder\n    encoder = LabelEncoder()\n    encoder.fit(train_df[col])\n    \n    # Substituir aquela coluna no treino e teste\n    train_df[col] = encoder.transform(train_df[col])\n    test_df[col] = encoder.transform(test_df[col])","f610b2dc":"train_df[[\"Gender\", \"Geography\"]].head()","cb674fc6":"from sklearn.model_selection import train_test_split\nx_train, x_val, y_train, y_val = train_test_split(train_df.drop(columns=\"Exited\"), train_df[\"Exited\"], test_size=0.3, random_state=42)","8e238efe":"x_train.head()","5db661ff":"from sklearn.neighbors import KNeighborsClassifier\n\n# Treinar\nmodel = KNeighborsClassifier(n_neighbors=5)\nmodel.fit(x_train, y_train)","10ad1f55":"from sklearn.metrics import roc_auc_score\n\n# Por padr\u00e3o o m\u00e9todo \"predict_proba\" nos retorna a probablidade tanto da classe 0 como da 1; \n# Estamos interesado s\u00f3 na da 1 (a da classe 0 \u00e9 o complemento disso para chegar em 1)\ny_preds_val = model.predict_proba(x_val)[:, 1]\nresult_val = roc_auc_score(y_val, y_preds_val)\n\nprint(f\"Resultado com K=5 sobre o conjunto de valida\u00e7\u00e3o\", result_val)","fd953e7a":"model = KNeighborsClassifier(n_neighbors=5)\nmodel.fit(train_df.drop(columns=[\"Exited\"]), train_df[\"Exited\"])","9c4a29ca":"y_preds_test = model.predict_proba(test_df)[:, 1]","c48b6efd":"test_df.shape","544ffd0b":"len(y_preds_test)","bcdc8e15":"# Use this to test on Kaggle\nsample[\"Exited\"] = y_preds_test","5ef7119c":"sample.to_csv(\"bad_knn.csv\", index=False)","dc52657c":"---\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n","e1ee3543":"---\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n","bcabecbb":"Logo homen \u00e9 o g\u00eanero mais comum, e Fran\u00e7a o pais mais comum. Vamos considerar que nulos em g\u00eaneros s\u00e3o homens ent\u00e3o, e nulos em Geography s\u00e3o a France","be22e644":"\nVamos converter as categorias Gender e Geography em n\u00fameros utilizando o [Label Encoding](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.preprocessing.LabelEncoder.html).\n\nN\u00f3s capturamos o encoding com base no treino e aplicamos ele sobre o nosso conjunto de teste. Como j\u00e1 aplicamos para o teste, n\u00e3o precisamos armazenar os encodings.","018eeff0":"# Testar o resultado sobre o conjunto de teste","308ddb7e":"---\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n","2d0e4d70":"# P\u00e9ssimo!\n\nEsse resultado foi p\u00e9ssimo! Lembrem-se que uma ROC pr\u00f3ximo de 0.5 significa um resultado aleat\u00f3rio, isto \u00e9, nosso modelo n\u00e3o aprendeu nada!\n\nConsegue descobrir porque e corrigir isso?\n\nDICA: K-NN falha quando?\n","41c0db9a":"# Source\n\nThis is a sample \"horrible\" K-NN for the DATA in class competition. It is not at all a good example of K-NN and we purposely make mistakes along the way;\n\nIt is up to you to try and realize what mistakes we made :)","73d54932":"---\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n","97614a85":"# Valida\u00e7\u00e3o\n\nVamos dividir nosso treino inicial em um treino e uma valida\u00e7\u00e3o.","41fe9c8e":"# Vari\u00e1vel \"in\u00fatil\": Surname\n\nVamos considerar que o sobrenome \u00e9 algo in\u00fatil para o modelo e remover essa coluna\n","d6a33533":"J\u00e1 o sal\u00e1rio, que tamb\u00e9m contem nulos, por ser um atributo num\u00e9rico, vamos susbstituir pela m\u00e9dia","3399ad62":"# Rapidamente submeter no Kaggle","5457f315":"# Categorias n\u00e3o num\u00e9ricas\n","7a4fcd19":"# Treinar K-NN com k=5","2112e47c":"# Exemplo K-NN\n\nEsse notebook mostra como rodar um K-NN simples para o nosso problema. N\u00e3o tem nenhum tipo de otimiza\u00e7\u00e3o e possui erros conceituais, mas serve para dar um gosto sobre como come\u00e7ar :)\n\n* * *\n\n","66bb1335":"# Ler e mostrar os dados","38a6743d":"# Nulos\n\nVamos lidar com nulos da maneira mais simples que h\u00e1 - substituir eles pela m\u00e9dia daquela coluna. \n\nDICA: Ser\u00e1 que a m\u00e9dia \u00e9 uma boa escolha para uma coluna num\u00e9rica? Porque sim\/n\u00e3o? \n\nE como fazemos se o atributo n\u00e3o for num\u00e9rico? ","cdc05b4e":"---\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n"}}