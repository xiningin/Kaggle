{"cell_type":{"ccbd2285":"code","f483560e":"code","faaf4180":"code","71ffacc7":"code","bd415d42":"code","01b91590":"code","b5a8477e":"code","ce7eea3a":"code","c91ce12f":"code","f6ff41ee":"code","e6de3585":"code","d6562cc4":"code","0cb31cfc":"code","b2ddfc26":"code","58226d2d":"code","285f2b68":"code","49ce81ac":"code","06431b44":"code","5cc77c79":"code","ffd804d8":"code","f8ba9e08":"code","b805ad5d":"code","4ae69fd8":"code","34ce0a92":"code","152110a4":"code","4c723c92":"code","e07f249f":"code","401ee9ed":"code","d6ff7150":"code","3b43314d":"code","cc9db142":"code","ddb4c374":"code","e078ac17":"code","170ff1e9":"code","8a5e0391":"markdown","5011037c":"markdown","58861097":"markdown","b59f2e7e":"markdown","0dd4890b":"markdown","2cdd6f5d":"markdown","a9112bf5":"markdown","0058e7ec":"markdown"},"source":{"ccbd2285":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib \nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nsns.set(color_codes = True)\n%matplotlib inline\n\nfrom sklearn.decomposition import PCA\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nfrom scipy.stats import norm,boxcox\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.preprocessing import LabelEncoder,MinMaxScaler , StandardScaler\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f483560e":"# Loading data\ndf = pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")\ndf.head()","faaf4180":"df.shape","71ffacc7":"df.describe()","bd415d42":"## finding if any null value\ndf.isnull().any()","01b91590":"df.info()","b5a8477e":"df.plot()","ce7eea3a":"# correlation gives us relation between individual factors, which factor contributing more\ncorrelation  = df.corr()\n\n\nplt.figure(figsize=(15,9))\nsns.heatmap(correlation,annot = True,cmap = 'coolwarm')","c91ce12f":"plt.scatter(df[\"quality\"],df[\"alcohol\"])","f6ff41ee":"sns.boxplot(x=\"quality\",y=\"alcohol\", data=df)","e6de3585":"x = np.unique(df[\"quality\"])\nx","d6562cc4":"def values(x):\n    if x <= 5:\n        x = 'low'\n    elif x >5 and x <7:\n        x = 'medium'\n    else:\n        x = 'high'\n    \n    return(x)\n        ","0cb31cfc":"df['level'] = df['quality'].apply(lambda x: values(x))","b2ddfc26":"df.head()","58226d2d":"#convert quality string into numerical variable and apply ordinal encoding method.\nlabel = LabelEncoder()\n\nquality_score  = label.fit_transform(df['level'])\n\nprint(quality_score)\nprint((label.classes_))","285f2b68":"\nplt.figure(figsize = (15,8))\nax = sns.barplot(x=\"level\", y=\"alcohol\", data=df)","49ce81ac":"##in high level alcohol quantiy is more","06431b44":"model = RandomForestClassifier() # used random forest classifier","5cc77c79":"df.hist(bins=10,figsize=(15,12))\nplt.show()","ffd804d8":"!pip install plotly\nimport plotly.express as px","f8ba9e08":"df.level.value_counts()","b805ad5d":"# Removing Quality and level column\nx = df.iloc[:,:-2]\nx.head()","4ae69fd8":"# converting data into one format\nstandard = StandardScaler()\n\nstd_x = standard.fit_transform(x)","34ce0a92":"x_train,x_test,y_train,y_test = train_test_split(std_x,quality_score,test_size = 0.20,random_state = 40)\n\n\nprint(\"Training data:{}\".format(x_train.shape))\nprint(\"Test data:{}\".format(x_test.shape))","152110a4":"results = []","4c723c92":"## 5. implimenting model","e07f249f":"model.fit(x_train,y_train)","401ee9ed":"prediction_x = model.predict(x_test)","d6ff7150":"accuracy = accuracy_score(prediction_x , y_test)\naccuracy","3b43314d":"confusion_matrix(prediction_x, y_test)","cc9db142":"#  Build Linear Regression Analysis Model\nlearner = LinearRegression(); #initializing linear regression model\n\nlearner.fit(x_train,y_train); #training the linear regression model\ny_predicted = learner.predict(x_test)\nscore=learner.score(x_test,y_test);#testing the linear regression model","ddb4c374":"print(score)\nprint(y_predicted)","e078ac17":"print(x_test)","170ff1e9":"# Check Accuracy of Model\ndf_new = pd.DataFrame({\"true_score\":y_test,\"predicted_score\":y_predicted})\ndf_new","8a5e0391":"**Random forest accuracy**","5011037c":"****from above correlation matrix we can see that for quality (alcohol,sulphates and citric acid ) contribute more********","58861097":"wine quality scaling","b59f2e7e":"## 3.Explore data","0dd4890b":"**2.load data**","2cdd6f5d":"****here we can see random forest gives better result then logistic regression ****","a9112bf5":"** 4. Split data** ","0058e7ec":"**1. Loading library**"}}