{"cell_type":{"adbbb130":"code","b36e10c4":"code","40ec0eac":"code","b9cc8c7d":"code","1246979b":"code","ac7e2e41":"code","14a24f03":"code","2206ab3f":"code","25f85583":"code","cc7bc4af":"code","4530b812":"code","027260fe":"code","c437dee0":"code","d4f048c8":"markdown","aa206977":"markdown","1dfa1240":"markdown","e3b808c1":"markdown","21851eff":"markdown","19f9c48f":"markdown","0cc2ccb6":"markdown","84212901":"markdown","a73611e4":"markdown","2ada2e9c":"markdown"},"source":{"adbbb130":"#Import data manipulation libraries\nimport pandas as pd\nimport numpy as np\n\n#Import the required Machine learning Libraries\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics\n\n#Import the visualization libraries\nimport seaborn as sns\nimport matplotlib.pyplot as plt","b36e10c4":"#Select the required columns in the dataset\ncol_names = ('Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction','Age')\n#Read the dataset\ndf = pd.read_csv('..\/input\/diabetes-data-set\/diabetes.csv')\n#Lets get the first 5 entries of the dataset\ndf.head()","40ec0eac":"df.shape\n#The dataset contains 768 entries with t 9 variables,  8 of the variables are independent features while 1 i the target variable(Outcome)","b9cc8c7d":"df.columns","1246979b":"feature_cols = ['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin',\n       'BMI', 'DiabetesPedigreeFunction', 'Age',]\n\nX = df[feature_cols] # features for the prediction\ny = df.Outcome # target variable","ac7e2e41":"X_train,X_test,y_train, y_test = train_test_split(X,y,test_size = 0.20, random_state =0)","14a24f03":"display(X_train.shape, y_train.shape, X_test.shape, y_test)","2206ab3f":"# Instantiate the model using the default parameters\nlr = LogisticRegression()\n\n#fit the model with the data\nlr.fit(X_train, y_train)","25f85583":"y_pred = lr.predict(X_test)","cc7bc4af":"y_pred","4530b812":"cnf_matrix = metrics.confusion_matrix(y_test, y_pred)\ncnf_matrix","027260fe":"cnf_matrix = pd.crosstab(y_test, y_pred,rownames=['Actual'], colnames=['Predicted'])\nsns.heatmap(cnf_matrix, annot=True)","c437dee0":"accuracyScore = metrics.accuracy_score(y_test,y_pred)\nprint('Accuracy score : ', accuracyScore)\nprint(\"Accuracy in Percentage : \", int(accuracyScore*100),'%')","d4f048c8":"### Train the model","aa206977":"### Split into test and train","1dfa1240":"### Predict with Test Dataset","e3b808c1":"This dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\n\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\n\nWe build a machine learning model to accurately predict whether or not the patients in the dataset have diabetes or not.\n\nPregnancies: Number of times pregnant\nGlucose: Plasma glucose concentration a 2 hours in an oral glucose tolerance test\nBloodPressure: Diastolic blood pressure (mm Hg)\nSkinThickness: Triceps skin fold thickness (mm)\nInsulin: 2-Hour serum insulin (mu U\/ml)\nBMI: Body mass index (weight in kg\/(height in m)^2)\nDiabetesPedigreeFunction: Diabetes pedigree function\nAge: Age (years)\nOutcome: Class variable (0 or 1) 268 of 768 are 1, the others are 0","21851eff":"### Accuracy Score","19f9c48f":"### About the Data Set","0cc2ccb6":"### Selecting Features","84212901":"Diagonal values represent accurate predictions, while non-diagonal predictions are not accurate.\n\nIn the output, 98 and 29 are actual predictions and 18 and 9 are innacurate predictions.\n\nTP = True Positives = 98\nTN = True Negatives = 37\nFP = False positives = 18\nFN = False negatives = 9\n","a73611e4":"### Model evaluation","2ada2e9c":"#### Confusion matrix"}}