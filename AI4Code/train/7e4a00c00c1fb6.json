{"cell_type":{"8ff309b6":"code","ce62ff9e":"code","5938e32f":"code","27ef8c53":"code","deb8618c":"code","f5eeba05":"code","bc89af96":"code","94ddf3b9":"code","52e8f095":"code","4dc41ca6":"code","b3c03de1":"code","d805c6da":"code","be13cff8":"code","5e0eb726":"code","20e82353":"code","7b188593":"code","ca7a4c3f":"code","3ec50b41":"code","4400b498":"markdown","fc9fef9b":"markdown","bc40e63b":"markdown","75752230":"markdown","0f97411b":"markdown","8741cc55":"markdown","a004e9f1":"markdown","6f24e89a":"markdown","b7e3135e":"markdown","82270a32":"markdown","019da593":"markdown","15f05905":"markdown","acdef501":"markdown","6f493aec":"markdown","da2abddb":"markdown","326d2732":"markdown","f8afed17":"markdown","7267bf77":"markdown","0184bbf0":"markdown","2d58d4cf":"markdown","b2a63c0e":"markdown","ec174061":"markdown"},"source":{"8ff309b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ce62ff9e":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","5938e32f":"books = pd.read_csv('\/kaggle\/input\/goodreadsbooks\/books.csv', error_bad_lines = False)","27ef8c53":"print(\"Dataset contains {} row and {} colums\".format(books.shape[0],books.shape[1]))","deb8618c":"books.head()\n\n","f5eeba05":"books.replace(to_replace = 'J.K. Rowling\/Mary GrandPr\u00e9', value= 'J.K Rowling',inplace = True)","bc89af96":"books.head()","94ddf3b9":"import seaborn as sns","52e8f095":"sns.set_context('poster')\nplt.figure(figsize = (20,15))\nbook = books['title'].value_counts()[:20]\nrating = books.average_rating[:20]\nsns.barplot(x=book, y = book.index, palette = 'deep')\nplt.title(\"Most occuring books\")\nplt.xlabel(\"number of occurances\")\nplt.ylabel(\"books\")\nplt.show()","4dc41ca6":"sns.set_context('paper')\nplt.figure(figsize =(15,10))\nax = books.groupby('language_code')['title'].count().plot.bar()\nplt.title('Language code')\nplt.xticks(fontsize = 15)","b3c03de1":"most_rated = books.sort_values('ratings_count', ascending = False).head(10).set_index('title')\nplt.figure(figsize=(15,10))\nsns.barplot(most_rated['ratings_count'], most_rated.index, palette = 'rocket')","d805c6da":"sns.set_context('talk')\nmost_books = books.groupby('authors')['title'].count().reset_index().sort_values('title', ascending=False).head(10).set_index('authors')\nplt.figure(figsize=(15,10))\nax = sns.barplot(most_books['title'], most_books.index, palette='icefire_r')\nax.set_title(\"Top 10 authors with most books\")\nax.set_xlabel(\"Total number of books\")","be13cff8":"high_rated_author = books[books['average_rating']>=4.3]\nhigh_rated_author = high_rated_author.groupby('authors')['title'].count().reset_index().sort_values('title', ascending = False).head(10).set_index('authors')\nplt.figure(figsize=(15,10))\nax = sns.barplot(high_rated_author['title'], high_rated_author.index, palette = 'Set2')\nax.set_xlabel(\"Number of books\")\nax.set_ylabel(\"Authors\")\n","5e0eb726":"def segregation(data):\n    values=[]\n    for val in data.average_rating:\n        if val>=0 and val<=1:\n            values.append(\"between 0 and 1\")\n        elif val>1 and val<=2:\n            values.append(\"between 1 and 2\")\n        elif val>2 and val<=3:\n            values.append(\"between 2 and 3\")\n        elif val>3 and val<=4:\n            values.append(\"between 3 and 4\")\n        elif val>4 and val<=5:\n            values.append(\"between 4 and 5\")\n        else:\n            values.append(\"NaN\")\n    print(len(values))\n    return values","20e82353":"books.average_rating.isnull().value_counts()","7b188593":"books.dropna(0, inplace=True)","ca7a4c3f":"plt.figure(figsize=(10,10))\nrating = books.average_rating.astype(float)\nsns.distplot(rating, bins =20)","3ec50b41":"books['Ratings_Dist'] = segregation(books)\nratings_pie = books['Ratings_Dist'].value_counts().reset_index()\nlabels = ratings_pie['index']\ncolors = ['lightblue','darkmagenta','coral','bisque', 'black']\npercent = 100.*ratings_pie['Ratings_Dist']\/ratings_pie['Ratings_Dist'].sum()\nfig, ax1 = plt.subplots()\nax1.pie(ratings_pie['Ratings_Dist'],colors = colors, \n        pctdistance=0.85, startangle=90, explode=(0.05, 0.05, 0.05, 0.05, 0.05))\n#Draw a circle now:\ncentre_circle = plt.Circle((0,0), 0.70, fc ='white')\nfig1 = plt.gcf()\nfig1.gca().add_artist(centre_circle)\n#Equal Aspect ratio ensures that pie is drawn as a circle\nplt.axis('equal')\nplt.tight_layout()\nlabels = ['{0} - {1:1.2f} %'.format(i,j) for i,j in zip(labels, percent)]\nplt.legend( labels, loc = 'best',bbox_to_anchor=(-0.1, 1.),)","4400b498":"<h3> We all know J.K. Rowling\/Mary GrandPr\u00e9 by her common name .ie, J.K Rowling so to nullify the possiblitiy of ambiguty we have changed the name present in the data set to her common name.<\/h3>","fc9fef9b":"<h3> Visualizing most occuring books using sns<\/h3>","bc40e63b":"<h3> A null value can effect the visualiztion so we must check them and remove them is any null value is present<\/h3> ","75752230":"<h3> From the bar graph above we can see that roughly more than 70% of the writer prefer english writing. Some prefer american english some spanish and so on.<p>\nWe have a ratings_count column in the data frame. Let's use it to see how well the books are rated and let's find the top rated books.<\/h3>  ","0f97411b":"  <h1> <i> <p style=\"text-align:center;\"> Goodreads data set Visualization <\/p><\/i><\/h1> \n","8741cc55":"<h3> Importing seaborn<\/h3>","a004e9f1":"<h3> From the above histoplot we can clearly see that the ratings between 3-4 is highest. So, we can conclude that readers love the books they are reading.<\/h3>","6f24e89a":"<h3> The above barplot shows that Stephen king and P.G Wodehouse have written the most books with plot showing nearly 40 books.<\/h3>","b7e3135e":"<h3> The above barplot shows that Stephen king and P.G Wodehouse have written the most books with plot showing nearly 40 books.<\/h3>","82270a32":"<h3>[note: The analysis was performed on april 2020. The data sets might be updated and one can get different output.]","019da593":"<h2> Here I have used different visualization techniques to data set provided by goodreads.<\/h2>\n<h3>What will you discover from this analysis?<h3>\n1.Most occuring books in the dataset.<br>\n2.Most prefered languages by the writer.<br>\n3.Most rated books.<br>\n4.Authors with most books.<br>\n5.Highly rated author.<br>\n6.Books ratings in histoplot.<br>\n7.Books ratings in pie.<br>\n\n","15f05905":"<img src=\"https:\/\/thepitcher.org\/wp-content\/uploads\/2016\/05\/marketing-books.jpg\">","acdef501":"<h3> Here we load the csv data set and ignore corrupted data. <\/h3>\n","6f493aec":"<h3> Checking the number of rows and columns present in dataset<\/h3>","da2abddb":"<h3> Now we plot histogram to see the rating distribution of books<\/h3>","326d2732":"<h3>We can see that the most occuring books are \"The lliad\", \"The Brothers Karamazov\" and \"The Odyssey\" and so on. <br>\nNow we will look at the language prefered by the writers. <\/h3> ","f8afed17":"<h3> Now let's use circle to visualize the data that supports the output provided by the histoplot.<\/h3>","7267bf77":"<h3>Now let's get started. In the first step we Import all the necessary library. You can also import any missing library when necessary so not need to worry about anything.","0184bbf0":"<h3> If any NaN value is present then it is dropped<\/h3>","2d58d4cf":"<h3> Now let's find out about the authors, espically the ones with the most books.<\/h3> ","b2a63c0e":"<h3> Now checking to see the rating distribution for the books<\/h3>","ec174061":"<h3> The above barplot shows the most voted books. Here are the few to give us better idea:<br>\n    1. Twilight with more than 4 million votes.<br>\n    2. The Hobbit or There and Back Again with more than 2 million votes.<br>\n    3. The Catcher in the Rye with more than 2 million votes.<br>\n    These are the top three books with most votes by the readers.<\/h3>\n    \n    "}}