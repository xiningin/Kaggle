{"cell_type":{"6a34a461":"code","74d7d399":"code","c20ddf5a":"code","93289fa5":"code","2076cbcf":"code","a9a52ba2":"code","3b65503f":"code","49a2f371":"code","2304e027":"code","d627d44d":"code","17feb501":"code","637a63f2":"code","b2dc4d49":"code","42e633db":"code","fa70c001":"code","75e749ed":"code","17000946":"code","8b2fbba1":"code","7ef5e076":"code","b0eb6d9c":"code","803a1a41":"code","136edbb9":"code","da253f66":"code","d14a8e30":"code","41cb2302":"code","64b8bc7c":"code","16598e9d":"code","d463c9b6":"code","6767db3c":"code","31f4a982":"code","3c54a008":"code","2d89882b":"code","5db26b94":"markdown","218fe32b":"markdown","176ad19c":"markdown","9fa97950":"markdown","c992ff6d":"markdown","c85bbdf8":"markdown","b736dc30":"markdown"},"source":{"6a34a461":"# Importing libraries\n# -------------------\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","74d7d399":"# Importing the dataset\n# ---------------------\ndataset = pd.read_csv('..\/input\/headbrain-linear-regression\/headbrain_dataset.csv')","c20ddf5a":"dataset.shape","93289fa5":"dataset.head()","2076cbcf":"dataset.tail()","a9a52ba2":"# Checking for null values\ndataset.isnull().sum()","3b65503f":"dataset['Age Range'].max()","49a2f371":"dataset['Age Range'].min()","2304e027":"sns.scatterplot(data=dataset, x=\"Head Size(cm^3)\", y=\"Brain Weight(grams)\")\nplt.show()","d627d44d":"sns.lmplot(x='Head Size(cm^3)', y='Brain Weight(grams)', hue='Gender', data=dataset)\nplt.show()","17feb501":"sns.lmplot(x='Head Size(cm^3)', y='Brain Weight(grams)', hue='Age Range', data=dataset)\nplt.show()","637a63f2":"sns.regplot(x=dataset['Head Size(cm^3)'], y=dataset['Brain Weight(grams)'])\nplt.show()","b2dc4d49":"dataset.describe()","42e633db":"dataset.info()","fa70c001":"X = dataset.iloc[:, 2].values    # predictor \ny = dataset.iloc[:, 3].values    # target","75e749ed":"# Plot the Input Data\n# -------------------\nplt.scatter(X, y, color='green', label='Data Points')\nplt.xlabel('Head Size in cm3')\nplt.ylabel('Brain Weight in grams')\nplt.legend()\nplt.show()","17000946":"from sklearn.linear_model import LinearRegression","8b2fbba1":"# Simple Linear Regression - using Scikit-Learn\n# ---------------------------------------------\n# Model definition\n# ----------------\nmodel = LinearRegression()   # Ordinary least squares (OLS) Linear Regression","7ef5e076":"X.shape","b0eb6d9c":"X = X.reshape((len(X), 1))  # We cannot use rank 1 matrices in sklearn so we reshape","803a1a41":"X.shape","136edbb9":"# Model fitting\n# -------------\nmodel.fit(X, y)   ","da253f66":"model.coef_","d14a8e30":"model.intercept_","41cb2302":"# X","64b8bc7c":"# Model prediction\n# ----------------\ny_pred = model.predict(X)","16598e9d":"# y_pred","d463c9b6":"# Visualising: Plotting Values and Regression Line\n# -------------------------------------------------\n# Ploting Values \nplt.scatter(X, y, color='green', label='Scatter Points')\n# Ploting Regression Line\nplt.plot(X, y_pred, color='blue', label='Regression Line')\n\nplt.title('Head Size vs Brain Weight')\nplt.xlabel('Head Size(cm^3)')\nplt.ylabel('Brain Weight(grams)')\nplt.legend()\nplt.show()","6767db3c":"model.score(X, y)  # Returns the coefficient of determination R^2 of the prediction","31f4a982":"from sklearn.metrics import r2_score","3c54a008":"# Model evaluation\n# ----------------\nr_squared_score = r2_score(y, y_pred)  # R^2 (coefficient of determination) regression score function","2d89882b":"print((r_squared_score * 100).round(2), \"%\")","5db26b94":"R\u2013squared value is the statistical measure to show how close the data are to the fitted regression line.","218fe32b":"## Happy Machine Learning :)","176ad19c":"Implementation using Python (NumPy, Pandas, Matplotlib, Seaborn & Scikit-Learn)","9fa97950":"#### Simple Linear Regression - SKLearn","c992ff6d":"R-squared score: 1 is perfect prediction.","c85bbdf8":"Link: https:\/\/scikit-learn.org\/stable\/modules\/linear_model.html#ordinary-least-squares","b736dc30":"### Machine Learning Algorithm - Regression"}}