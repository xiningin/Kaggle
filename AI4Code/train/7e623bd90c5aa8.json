{"cell_type":{"b18f6e26":"code","d51c776b":"code","849a7475":"code","7105b7bc":"code","f58bf22c":"code","d064aefd":"code","c4da624a":"code","6f05bf81":"code","71d63975":"code","d4fa4916":"markdown","7af7d216":"markdown","ea2fa844":"markdown","7e223451":"markdown","f0bf2ee1":"markdown"},"source":{"b18f6e26":"# Python Error Handling\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport os\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","d51c776b":"# Loading files\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","849a7475":"# Loading and sorting datasets\ntrain = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')\n# test['SalePrice'] = np.NaN\ntt_data = pd.concat([train, test],axis=0,sort=False)","7105b7bc":"# Transpose of training data statistics for easier viewability\nprint(\"Training data shape: \", train.shape)\ntrain.describe().T","f58bf22c":"print(\"Testing data shape: \", test.shape)\nprint(\"All data shape: \", tt_data.shape)\ntest.describe().T","d064aefd":"# Numerical features of dataset\nnum_data = [c for c in train.columns if train[c].dtype !='O']\ncat_data = [w for w in train.columns if train[w].dtype == 'O']\n\nprint(\"Numerical Feature count: \", len(num_data))\nnum_data","c4da624a":"print(\"Categorical Feature count: \", len(cat_data))\ncat_data","6f05bf81":"# Visualizing the quantity and position of null values in data\nnullCounter = tt_data.isna().sum().sort_values(ascending=False)\/len(tt_data)\n\nplt.figure(figsize=(16,10))\nplt.title('Missing data bar chart')\nplt.xticks(np.arange(len(nullCounter)), nullCounter.index, rotation='vertical')\nplt.ylabel('fraction of rows with null values')\nplt.bar(np.arange(len(nullCounter)), nullCounter)","71d63975":"tt_data.drop([\"PoolQC\",\"MiscFeature\",\"Alley\",\"Fence\"],axis=1,inplace=True)\n\nfor x in tt_data:\n    rs = tt_data[x].dropna().sample(tt_data[x].isnull().sum()) \n    rs.index = tt_data[tt_data[x].isnull()].index\n    tt_data.loc[tt_data[x].isnull(),x] = rs\n    \nnullValues = pd.DataFrame({'Null Values' : tt_data.isna().sum().sort_values(),\n                     'Percentage Null Values' : (tt_data.isna().sum().sort_values()) \/ (tt_data.shape[0]) * (100)})\n\nnullValues","d4fa4916":"# Data Wrangling","7af7d216":"# **House Price Regression Problem**\n\n# Contents\n1. [x] Importing & Merging Data\n2. [x] Data Wrangling\n3. [ ] Exploratory Data Analysis\n4. [ ] Preproccessing\n5. [ ] Model Selection & Training\n6. [ ] Optimization","ea2fa844":"## Missing Data\nThe features PoolQC, MiscFeature, and Alley all have > 80% of data as null as shown in the following bar chart. The next step would be to delete them from our feature matrix.","7e223451":"All null values in the data have been replaced with average random samples in the data -- providing the most statistically sound method to handle empty cells.\n\n# Exploratory Data Analysis","f0bf2ee1":"# Importing and Merging Data"}}