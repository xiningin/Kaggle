{"cell_type":{"778c2c8b":"code","050363b2":"code","4142b5da":"code","74ec25e8":"code","9c6ab102":"code","3d014500":"code","10647752":"code","0484facb":"code","c725cfc9":"code","56d0d8c5":"code","13432274":"code","cb11cd9c":"code","da154bac":"code","33264b1e":"code","3989f16e":"code","ec790ae6":"code","7d2f9208":"code","821fbdff":"code","0c95eb7c":"code","ee1120df":"code","e926acc3":"code","f120e4c9":"code","1d3f82d1":"code","3c7ed61b":"code","8040ca9c":"code","e47cd881":"code","8edee11e":"code","d59bc06f":"code","c63d3d8b":"code","6eabe047":"code","cb8c1ed4":"code","1d5b19ce":"code","0343556d":"code","c9c73405":"code","385c89b3":"code","08b26997":"code","d5a97596":"code","d4cca4e2":"code","37faf88c":"code","e289242b":"code","4a9d85aa":"code","4baf4ec5":"code","c72a71dd":"code","b0b3863a":"code","e28b5dcb":"code","6768a615":"code","4d1cbc8c":"code","dcd4d78f":"code","45d5ce37":"code","8c440640":"code","06952817":"code","b15b9651":"code","ab12e4b9":"code","d4b7c4c2":"code","657ef18a":"code","1294b905":"code","1708e06b":"code","9282fc19":"code","78888449":"code","06bcf92b":"code","23f201c9":"code","a34f24bc":"code","3fb65011":"code","3487f5b9":"code","8368ff67":"code","cd3210ad":"code","8b6596de":"code","17f9f0ca":"code","b599b3b9":"code","010df51f":"code","cfcd0bbc":"code","de15cb84":"code","37b96a03":"code","14d2005a":"code","cad6ed32":"code","e65a0165":"code","dcf7df94":"code","452351d6":"code","6870ba1a":"code","c7884c4f":"code","6f651a2e":"code","dab9a63d":"code","fd40f4fd":"code","c026f4e6":"code","ed3b47bf":"code","2818a6be":"code","7568ecc6":"code","a7692921":"code","dab82326":"code","007cfb91":"code","85cd57e7":"code","d44c06ba":"code","9c29cdaa":"code","0d2467d5":"code","d266753d":"code","dc68fadb":"code","f6ec15fe":"code","2034ed58":"code","87c9119a":"code","43cb6566":"code","a78b2183":"code","bf3b4eb7":"code","1f0ef3d1":"markdown","6814a4d7":"markdown","eceb5346":"markdown","82344f5a":"markdown","2ab0f238":"markdown","ed7b852b":"markdown","7da8ed7f":"markdown","7504e378":"markdown"},"source":{"778c2c8b":"import numpy as np\nimport pandas as pd \nimport seaborn as sns\nimport statsmodels.api as sm\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import scale, StandardScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\nfrom sklearn.metrics import confusion_matrix, accuracy_score, mean_squared_error, r2_score, roc_auc_score, roc_curve, classification_report\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom lightgbm import LGBMClassifier\nfrom sklearn.model_selection import KFold\n\n\nfrom sklearn.neighbors import LocalOutlierFactor\n\nimport warnings\nwarnings.simplefilter(action = \"ignore\") \n\n\npd.set_option('display.max_rows', None)\n\npd.set_option('display.max_columns', None)","050363b2":"diabetes= pd.read_csv(\"..\/input\/diabetes\/diabetes.csv\")\ndf=diabetes.copy()\ndf.head()","4142b5da":"### VERY IMPORTANT INFORMATION !!!!\n\n### There are zero values which are filled with NA based on this article:\n### https:\/\/www.sciencedirect.com\/science\/article\/pii\/S2352914816300016#bib65  --> [66]\n\n### In this article, there is an explanation :  \"In 2001, 376 of 786 observations in the PID dataset were shown to\n### lack experimental validity [65] because for some attributes, the value of zero was recorded in place of missing\n### experimental observations\"","74ec25e8":"df.info()   #768 observations","9c6ab102":"df.isnull().sum()  #No NA values","3d014500":"df.shape   # dataset dimension : 768-9 ","10647752":"df.groupby('Outcome').size()  # It isn't unbalanced","0484facb":"sns.countplot(diabetes['Outcome'],label=\"Count\");","c725cfc9":"#Table 1\nsns.pairplot(df);","56d0d8c5":"#Table 1 interpretations\n# If pregnancy is more than ..., outcome is 1\n# If Sk\u0131nThickness is more than..., outcome is 1\n# If DiabetesPedigreeFunction is more than ..., outcome is 1\n# If Age is more than ..., outcome is 1","13432274":"df.groupby(\"Outcome\")[\"Pregnancies\"].describe().T   # If pregnancy is more than 13, the outcome is 1","cb11cd9c":"df.groupby(\"Outcome\")[\"BloodPressure\"].describe().T   # If BloodPressure is more than 114, the outcome is 0","da154bac":"df.groupby(\"Outcome\")[\"SkinThickness\"].describe().T  # If Sk\u0131nThickness is more than 60, the outcome is 1","33264b1e":"df.groupby(\"Outcome\")[\"DiabetesPedigreeFunction\"].describe().T  # If DiabetesPedigreeFunction is more than 2.329, outcome is 1\n                                                                # # If DiabetesPedigreeFunction is less than 0.88, outcome is 0","3989f16e":"df.groupby(\"Outcome\")[\"Age\"].describe().T      # If Age is more than 70, outcome is 0","ec790ae6":"df.groupby(\"Outcome\")[\"BloodPressure\"].mean()","7d2f9208":"#These are not real skewness values because of additional zeros\n\ndf.skew(axis = 0) # Skewness (*** \"BloodPressure\", \"Insulin\", \"DiabetesPedigreeFunction\",\"Age\" ***)","821fbdff":"df.describe().T","0c95eb7c":"df.corr()","ee1120df":"sns.heatmap(df.corr(), xticklabels=df.columns, yticklabels=df.columns); ","e926acc3":"# ZEROS IN OBSERVATIONS\n\nprint(\"Pregnancies the value of zero-->\",df[df.loc[:,\"Pregnancies\"].isin([0])].shape[0])  #111 observations\nprint(\"Glucose the value of zero-->\", df[df.loc[:,\"Glucose\"].isin([0])].shape[0])  #5 observations\nprint(\"BloodPressure the value of zero-->\",df[df.loc[:,\"BloodPressure\"].isin([0])].shape[0])  #35 observations\nprint(\"SkinThickness the value of zero-->\",df[df.loc[:,\"SkinThickness\"].isin([0])].shape[0])  #227 observations\nprint(\"Insulin the value of zero-->\",df[df.loc[:,\"Insulin\"].isin([0])].shape[0])  #374 observations\nprint(\"BMI the value of zero-->\",df[df.loc[:,\"BMI\"].isin([0])].shape[0])  #11 observations\nprint(\"DiabetesPedigreeFunction the value of zero-->\",df[df.loc[:,\"DiabetesPedigreeFunction\"].isin([0])].shape[0])  # no 0 value\nprint(\"Age-->\",df[df.loc[:,\"Age\"].isin([0])].shape[0])  # no 0 value","f120e4c9":"# Pregnancies zero values make sense.","1d3f82d1":"# Glucose:\n# According to this article : https:\/\/www.journalagent.com\/scie\/pdfs\/KEAH_1_2_10_12.pdf, \"Plasma glucose concentration \n# after 2 h in an OGTT\" can't be zero. Therefore, these 0 values seems to be NA values.","3c7ed61b":"df[df[\"Glucose\"]==0]","8040ca9c":"# Replace Zero Values with NaN\n\ndf['Glucose'] = df['Glucose'].replace(0, np.nan)\n\ndf[df[\"Glucose\"]==0]","e47cd881":"# BloodPressure","8edee11e":"df[df[\"BloodPressure\"]==0].head(3)","d59bc06f":"df[\"BloodPressure\"] = df[\"BloodPressure\"].replace(0, np.nan)","c63d3d8b":"# SkinThickness","6eabe047":"df[\"SkinThickness\"] = df[\"SkinThickness\"].replace(0, np.nan)","cb8c1ed4":"#Insulin","1d5b19ce":"df[\"Insulin\"] = df[\"Insulin\"].replace(0, np.nan)","0343556d":"#BMI","c9c73405":"df[\"BMI\"] = df[\"BMI\"].replace(0, np.nan)","385c89b3":"### CONTROL  --> It is equal to the specified in that article. (376 missing value)","08b26997":"df[df.isnull().any(axis=1)].shape","d5a97596":"df1=df.copy()  ","d4cca4e2":"df1.isnull().any(axis=1).sum()","37faf88c":"df2=df1.dropna()\ndf2=df2.reset_index(drop=True)\nprint(df2.shape)\ndf2.head(2)","e289242b":"# Balance of the data isn't changed so much\n\nprint(\"original dataset\",diabetes.groupby('Outcome').size())\nprint(\"new df outcome\",df2.groupby('Outcome').size())","4a9d85aa":"#df3   (The \"Pregnancies\" values which are more than 9 are replaced by 9.)","4baf4ec5":"df3=df2.copy()\ndf3.shape","c72a71dd":"sns.boxplot(df2['Pregnancies'])","b0b3863a":"Q3= df2['Pregnancies'].quantile(0.75)\nQ1=df2['Pregnancies'].quantile(0.25)\nIQR=Q3-Q1\nupper=Q3+IQR\nprint(\"Q1-->\",Q1,\"Q3-->\",Q3,\"upper-->\",upper)","e28b5dcb":"df2['Pregnancies'].value_counts()","6768a615":"sns.countplot(df3['Pregnancies'],label=\"Count\");","4d1cbc8c":"df3[df3['Pregnancies']>10].shape","dcd4d78f":"16\/392   # %4 of the women has more than 10 times pregnant","45d5ce37":"df3.loc[df3['Pregnancies']>10, 'Pregnancies']=10\ndf3[df3['Pregnancies']>10].shape","8c440640":"df3.groupby(\"Outcome\")[\"Pregnancies\"].describe().T","06952817":"df4=df3.copy()","b15b9651":"df4.head()","ab12e4b9":"print(df4['Pregnancies'].skew())\nprint(df4['Glucose'].skew())\nprint(df4['BloodPressure'].skew())\nprint(df4['SkinThickness'].skew())\nprint(df4['Insulin'].skew())\nprint(df4['BMI'].skew())\nprint(df4['DiabetesPedigreeFunction'].skew())\nprint(df4['Age'].skew())\n","d4b7c4c2":"# The max value is 198. If \"Glucose\" values are equal to 200 or more, the outcome qill be 1.\n\n# According to Wikipedia;\n# Blood plasma glucose between 7.8 mmol\/L (140 mg\/dL) and 11.1 mmol\/L (200 mg\/dL) indicate \n# \"impaired glucose tolerance\", and levels at or above 11.1 mmol\/L at 2 hours confirm a \n# diagnosis of diabetes.\n# https:\/\/en.wikipedia.org\/wiki\/Glucose_tolerance_test#:~:text=Blood%20plasma%20glucose%20between%207.8,confirm%20a%20diagnosis%20of%20diabetes.","657ef18a":"df4[\"Glucose\"].describe().T ","1294b905":"sns.distplot(df4['Glucose'], hist=False);\nprint(df4['Glucose'].skew())","1708e06b":"df4[\"BloodPressure\"].describe().T","9282fc19":"df4.groupby(\"Outcome\")[\"BloodPressure\"].describe().T    #diastolic blood pressure: \n                                                        # The lowest pressure when your heart relaxes between beats.\n                                                        # http:\/\/www.bloodpressureuk.org\/BloodPressureandyou\/Thebasics\/Bloodpressurechart","78888449":"sns.distplot(df4['BloodPressure'], hist=False);\nprint(df4['BloodPressure'].skew())","06bcf92b":"# Outliers\nprint(df4[df4[\"BloodPressure\"]<40].shape)\nprint(df4[df4[\"BloodPressure\"]>100].shape)","23f201c9":"df4[df4[\"BloodPressure\"]<40]","a34f24bc":"df4[df4[\"BloodPressure\"]>100]","3fb65011":"df4.loc[df4['BloodPressure']<40, 'BloodPressure']=40\ndf4.loc[df4['BloodPressure']>100, 'BloodPressure']=100","3487f5b9":"#df5","8368ff67":"df5=df4.copy()\n","cd3210ad":"df5[\"SkinThickness\"].describe().T","8b6596de":"df5.groupby(\"Outcome\")[\"SkinThickness\"].describe().T","17f9f0ca":"sns.distplot(df5['SkinThickness'], hist=False);\nprint(df5['SkinThickness'].skew())","b599b3b9":"sns.boxplot(df5['SkinThickness'])","010df51f":"df5[\"Insulin\"].describe().T","cfcd0bbc":"df5.groupby(\"Outcome\")[\"Insulin\"].describe().T","de15cb84":"sns.distplot(df5['Insulin'], hist=False);\nprint(df5['Insulin'].skew())","37b96a03":"sns.distplot((df5['Insulin']), hist=False)","14d2005a":"df5['Insulin']=np.log(df5['Insulin'])","cad6ed32":"#df6","e65a0165":"df6=df5.copy()","dcf7df94":"df6[\"BMI\"].describe().T","452351d6":"df6.groupby(\"Outcome\")[\"BMI\"].describe().T","6870ba1a":"sns.distplot(df6['BMI'], hist=False);\nprint(df6['BMI'].skew())","c7884c4f":"df6[\"DiabetesPedigreeFunction\"].describe().T","6f651a2e":"df6.groupby(\"Outcome\")[\"DiabetesPedigreeFunction\"].describe().T","dab9a63d":"sns.distplot(df6['DiabetesPedigreeFunction'], hist=False);\nprint(df6['DiabetesPedigreeFunction'].skew())","fd40f4fd":"df6['DiabetesPedigreeFunction']=np.log(df6['DiabetesPedigreeFunction'])","c026f4e6":"#df7","ed3b47bf":"df7=df6.copy()","2818a6be":"df7.groupby(\"Outcome\")[\"Age\"].describe().T","7568ecc6":"sns.distplot(df7['Age'], hist=False);\nprint(df7['Age'].skew())","a7692921":"df7['Age']=np.log(df7['Age'])","dab82326":"#LOC","007cfb91":"df8=df7.copy()","85cd57e7":"clf=LocalOutlierFactor(n_neighbors=20, contamination=0.1)\nclf.fit_predict(df8)\ndf8_scores= clf.negative_outlier_factor_\nnp.sort(df8_scores)[0:10]","d44c06ba":"pd.DataFrame(np.sort(df8_scores)).plot(stacked=True,xlim=[0,20], style=\".-\");\n","9c29cdaa":"df8.loc[df8_scores< np.sort(df8_scores)[6]]","0d2467d5":"df8=df8.loc[df8_scores> np.sort(df8_scores)[6]]\ndf8.shape","d266753d":"#feature generation","dc68fadb":"df11=df8.copy()","f6ec15fe":"df11[\"Pregnancies\/Age\"]=df11[\"Pregnancies\"]\/df11[\"Age\"]\n\n\ndf11[\"Insulin\/Glucose\"]=df11[\"Insulin\"]\/df11[\"Glucose\"]\n\n","2034ed58":"#Regression","87c9119a":"y = df11[\"Outcome\"]\nX = df11.drop([\"Outcome\"], axis = 1)\nlog_model = LogisticRegression().fit(X,y)\ny_pred = log_model.predict(X)\nprint(accuracy_score(y, y_pred))\nprint(classification_report(y, y_pred))","43cb6566":"\ny = df11[\"Outcome\"]\nX = df11.drop([\"Outcome\"], axis = 1)\n\n\n\nmodels = []\nmodels.append(('LR', LogisticRegression()))\nmodels.append(('KNN', KNeighborsClassifier()))\nmodels.append(('CART', DecisionTreeClassifier()))\nmodels.append(('RF', RandomForestClassifier()))\nmodels.append(('SVM', SVC(gamma='auto')))\nmodels.append(('XGB', GradientBoostingClassifier()))\nmodels.append((\"LightGBM\", LGBMClassifier()))\n\n# evaluate each model in turn\nresults = []\nnames = []\n\n\n\nfor name, model in models:\n    \n        kfold = KFold(n_splits = 10, random_state = 123456)\n        cv_results = cross_val_score(model, X, y, cv = 10, scoring= \"accuracy\")\n        results.append(cv_results)\n        names.append(name)\n        msg = \"%s: %f (%f)\" % (name, cv_results.mean(), cv_results.std())\n        print(msg)\n        ","a78b2183":"# Feature Importance\n\n\n\nImportance = pd.DataFrame({'Importance':GradientBoostingClassifier().fit(X, y).feature_importances_*100}, \n                          index = X.columns)\n\n\nImportance.sort_values(by = 'Importance', \n                       axis = 0, \n                       ascending = True).plot(kind = 'barh', \n                                              color = 'r', figsize=(14,12))\n\nplt.xlabel('Variable Importance')\nplt.gca().legend_ = None","bf3b4eb7":"# References\n# https:\/\/www.sciencedirect.com\/topics\/medicine-and-dentistry\/diabetes-mellitus\n# https:\/\/www.sciencedirect.com\/science\/article\/pii\/S2352914816300016#bib65","1f0ef3d1":"# MODELING","6814a4d7":"# DATA PREPROCESSING","eceb5346":"* \u0130nternette yap\u0131lan ara\u015ft\u0131rmalar sonucunda( linkler belirtilmi\u015ftir), 376 adet 0 de\u011ferinin NA yerine girildi\u011fi tespit edilmi\u015ftir.\n* Hamilelik de\u011fi\u015fkeni d\u0131\u015f\u0131nda 0 olmas\u0131 mant\u0131ks\u0131z olan g\u00f6zlemlerin hepsine \u00f6nce NA de\u011ferleri atan\u0131p sonra drop edilmi\u015ftir.\n* Hamilelik de\u011fi\u015fkenine uygulanan boxplotta upper limit 9 \u00e7\u0131km\u0131\u015f olsa da, veri say\u0131s\u0131n\u0131n ciddi azald\u0131\u011f\u0131 de\u011fer olan 10 upper limit olarak kabul edilmi\u015f olup 10 dan fazla olan de\u011ferlerin yerine de 10 atanm\u0131\u015ft\u0131r.\n* Kan Bas\u0131nc\u0131nda normal hayatta m\u00fcmk\u00fcn olmad\u0131\u011f\u0131 tespit edilen de\u011ferler oldu\u011fu g\u00f6zlemlenmi\u015ftir. 40 tan az olan de\u011ferlere 40, 100 den fazla olan de\u011ferlere 100 atanm\u0131\u015ft\u0131r.\n* Insulin, DiabetesPedigreeFunction ve Age de\u011fi\u015fkenlerinde skewness oldu\u011fu g\u00f6zlemlenmi\u015f olup log transformasyonu yap\u0131lm\u0131\u015ft\u0131r.\n* LOC ile 6. skordan k\u00fc\u00e7\u00fck olan de\u011ferler outlier kabul edilerek at\u0131lm\u0131\u015ft\u0131r.\n* Normalization ile cross val score de\u011ferinde de\u011fi\u015fim yakalanamad\u0131\u011f\u0131 i\u00e7in yap\u0131lmamas\u0131 uygun bulunmu\u015ftur.\n* Feature Enginnering ile \"Pregnancies\/Age\" ve \"Insulin\/Glucose\" de\u011fi\u015fkenleri t\u00fcretilmi\u015ftir. De\u011fi\u015fken \u00f6nem s\u0131ras\u0131nda 6.- 7. s\u0131rada olduklar\u0131 ve skoru iyile\u015ftirdikleri g\u00f6zlemlenmi\u015ftir. Bu nedenle yeni de\u011fi\u015fken olarak eklenmeleri sa\u011flanm\u0131\u015ft\u0131r.\n* T\u00fcm bu i\u015flemlerin sonucunda t\u00fcm veri setinde 5 katl\u0131 \u00e7apraz do\u011frulama ile elde edilen en iyi cross val score 0.8 ile XGB \u00fczerinden olmu\u015ftur.\n* Hiperparametre optimizasyonu denenmi\u015f olup daha iyi sonu\u00e7 elde edilemedi\u011fi i\u00e7in, default parametreler nihai model hiperparametreleri olarak b\u0131rak\u0131lm\u0131\u015ft\u0131r.\n","82344f5a":"# DATA UNDERSTANDING","2ab0f238":"### The PID dataset consists of 768 samples of eight numerical attributes and is part of a larger dataset held by the National Institutes of Diabetes and Digestive and Kidney Diseases in the US. The values of these medical attributes come from Pima Indian women at least 21 years of age residing in or near Phoenix, AZ. The class variable takes the values \u201c0\u201d or \u201c1\u201d , indicating a negative and positive test for diabetes, respectively. In addition, theT2DM predominant in this population is said to have slow and gradual commencement. As a consequence, traditional diagnostic methods that are partially based on the plasma glucose test may be delayed by up to 10 years . The eight clinical features for this population are as follows:\n\n### 1.Number of times pregnant (NP).\n### 2.Plasma glucose concentration after 2 h in an OGTT.\n### 3.Diastolic blood pressure (mmHg) (DBP).\n### 4.Triceps skinfold thickness (mm) (TSFT).\n### 5.Two-hour serum insulin (\u03bcU\/mL) (2HSI).\n### 6.BMI.\n### 7.Diabetes pedigree function (DPF) ***\n### 8.Age (years) (AGE).\n\n\n\n*** A function which scores the likelihood of diabetes based on family history. It provided some data on diabetes mellitus history in relatives and the genetic relationship of those relatives to the patient.","ed7b852b":"# REPORTING","7da8ed7f":"# df2 (Data Frame which is dropped NA values)","7504e378":"# The original data set (df1)"}}