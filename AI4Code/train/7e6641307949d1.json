{"cell_type":{"b13c53f0":"code","f17e4d2a":"code","40eeeefd":"code","37fe17c3":"code","e25fb8af":"code","c83f44ca":"code","9a01993a":"code","572cb90b":"code","c44d1240":"code","2430e33d":"code","ef31262f":"code","f0779b9b":"code","66bbc47e":"code","7a21dc53":"markdown","ade7aede":"markdown","4586e223":"markdown"},"source":{"b13c53f0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f17e4d2a":"trainData = pd.read_csv('..\/input\/fashion-mnist_train.csv')\ntestData = pd.read_csv('..\/input\/fashion-mnist_test.csv')","40eeeefd":"xTrain = trainData.iloc[:, 1:].values\nyTrain = trainData.iloc[:, 0].values \nxTest = testData.iloc[:, 1:].values\nyTest = testData.iloc[:, 0].values","37fe17c3":"from keras.utils import np_utils","e25fb8af":"#Reshaping for CNN\nxTrain = xTrain.reshape((xTrain.shape[0], 28, 28, 1))\nxTest = xTest.reshape((xTest.shape[0], 28, 28, 1))\nyTrain = np_utils.to_categorical(yTrain)\nyTest = np_utils.to_categorical(yTest)","c83f44ca":"import matplotlib.pyplot as plt","9a01993a":"plt.imshow(xTrain[5].reshape(28, 28), cmap = 'gray')\nplt.show()","572cb90b":"from keras.models import Sequential\nfrom keras.layers import Input, Convolution2D, MaxPooling2D, Flatten, Dense, Dropout","c44d1240":"model = Sequential()\nmodel.add(Convolution2D(32, (3,3), activation = 'relu', input_shape = (28, 28, 1)))\nmodel.add(Convolution2D(64, (3,3), activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(MaxPooling2D(2,2))\nmodel.add(Convolution2D(32, (5,5), activation = 'relu'))\nmodel.add(Convolution2D(8, (5,5), activation = 'relu'))\nmodel.add(Flatten())\nmodel.add(Dense(10, activation = 'softmax'))\nmodel.summary()","2430e33d":"model.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy'])","ef31262f":"hist = model.fit(xTrain, yTrain, epochs = 75, shuffle = True, batch_size = 4096)","f0779b9b":"plt.figure(0)\nplt.style.use('seaborn')\nplt.plot(hist.history['loss'], 'blue')\nplt.plot(hist.history['acc'], 'green')\nplt.legend(loc='upper right')\nplt.show()","66bbc47e":"score = model.evaluate(xTest,yTest,verbose=0)\nprint('Test Loss : {:.4f}'.format(score[0]))\nprint('Test Accuracy : {:.4f}'.format(score[1]))","7a21dc53":"## CNN Model","ade7aede":"## Visualizing image data","4586e223":"## Loading Data"}}