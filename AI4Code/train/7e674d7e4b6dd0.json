{"cell_type":{"fc358456":"code","452d11a2":"code","8d480218":"code","7afefe9b":"code","21ed3df7":"code","ae3f9812":"code","7f09b552":"code","80e785ae":"markdown","32fe92a9":"markdown","48fa3ddd":"markdown","563dc2f0":"markdown"},"source":{"fc358456":"import numpy as np \nimport pandas as pd \nfrom shutil import copyfile\nimport xgboost as xgb","452d11a2":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \ncopyfile(src = \"..\/input\/158333a1\/a1_wrangle.py\", dst = \"..\/working\/a1_wrangle.py\")\nimport a1_wrangle as a1w","8d480218":" X_train, y_train, X_test, submission = a1w.quick_wrangle()","7afefe9b":"y_train.head()","21ed3df7":"X_train.head()","ae3f9812":"X_test.head()","7f09b552":"for n in range(100, 501, 200):\n    clf = xgb.XGBClassifier(n_estimators=n, n_jobs=4, max_depth=10, learning_rate=0.03, subsample=0.9, colsample_bytree=0.9, missing=-999)\n    clf.fit(X_train, y_train)\n    submission['isFraud'] = clf.predict_proba(X_test)[:, 1]\n    submission.to_csv('XGBoost' + str(n) + '.csv')","80e785ae":"### Data Wrangling ","32fe92a9":"### Fit and prediction","48fa3ddd":"**This notebook is a part of the project I did for the paper 1xx333**","563dc2f0":"Credits to the Experts:\n\n    inversion and Walter Reade's https:\/\/www.kaggle.com\/inversion\/ieee-simple-xgboost"}}