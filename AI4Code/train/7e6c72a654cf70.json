{"cell_type":{"376ae87d":"code","949fac7a":"code","ff76cf72":"code","18e2cff2":"code","8aa1c7d7":"markdown"},"source":{"376ae87d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\nfrom plotly.offline import iplot","949fac7a":"df = pd.read_csv('..\/input\/wikipedia-image-caption\/train-00004-of-00005.tsv', sep='\\t',nrows=10000)\ndf.head(3)","ff76cf72":"#Code by Niharika Pandit https:\/\/www.kaggle.com\/niharika41298\/netflix-vs-books-recommender-analysis-eda\n\n#Ascending order False\ntop_rated=df.sort_values('original_height', ascending=False)\ntop10=top_rated.head(10)\nf=['page_title','image_url']\ndispl=(top10[f])\ndispl.set_index('page_title', inplace=True)","18e2cff2":"#Code by Niharika Pandit https:\/\/www.kaggle.com\/niharika41298\/netflix-vs-books-recommender-analysis-eda\n\nfrom IPython.display import Image, HTML\n\ndef path_to_image_html(path):\n    '''\n     This function essentially convert the image url to \n     '<img src=\"'+ path + '\"\/>' format. And one can put any\n     formatting adjustments to control the height, aspect ratio, size etc.\n     within as in the below example. \n    '''\n\n    return '<img src=\"'+ path + '\"\"\/width=\"200\" height=\"40\" alt=\"Computer Hope\">'\n\nHTML(displ.to_html(escape=False ,formatters=dict(image_url=path_to_image_html),justify='center'))","8aa1c7d7":"#At least I could plot some images since I wasn't able to make it in the previous Wikimedia Urllib.\n\n#Be patient, even to render those images it requires some time. Recycling code, from Netflix to Wikipedia."}}