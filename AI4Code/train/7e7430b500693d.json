{"cell_type":{"dc67665a":"code","226dad8e":"code","1f398fbd":"code","6b5ff494":"code","7490abc3":"code","21fce0c2":"code","e1d1800a":"code","a570286f":"code","be389ff4":"code","f2923ca6":"code","a9ee2ff6":"code","83a585c0":"code","b8c15c90":"code","8eb44e04":"code","135e8594":"code","0e2be656":"code","57efff14":"code","031bd4f8":"code","70ef1ae0":"code","d2f3c822":"code","84692e0b":"code","c3211ac9":"code","a38e4044":"code","69cf1c45":"code","8d8837ec":"markdown","eb9e2740":"markdown","991009ac":"markdown","d95e22a1":"markdown","62bac543":"markdown","ae8dc692":"markdown","0edc8ec3":"markdown","72df727f":"markdown","2365e94e":"markdown","654d4abc":"markdown","a738b157":"markdown","e99fb517":"markdown","c22e7721":"markdown","a064f03a":"markdown","bf57692d":"markdown","ddb89e36":"markdown","d00628df":"markdown","8c2d800b":"markdown","0c728ace":"markdown"},"source":{"dc67665a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","226dad8e":"!pip install openpyxl","1f398fbd":"# First let's import libraries\nimport datetime as dt\nimport pandas as pd\nimport warnings\nwarnings.filterwarnings(\"ignore\")","6b5ff494":"# Reading 2010-2011 version of data\ndf_ = pd.read_excel('..\/input\/online-retail-ii-data-set-from-ml-repository\/online_retail_II.xlsx', sheet_name=\"Year 2010-2011\")","7490abc3":"df = df_.copy()","21fce0c2":"# Taking look at some descriptive statistics\ndf.describe().T\n# As we see there are negative numbers in 'Price' and 'Quantity' which is abnormal we have to get rid of it ","e1d1800a":"# Is there any missing value in the dataset?\ndf.isnull().values.any() # Since we get 'True' that means there is","a570286f":"# Let's see how many missing value does dataset have in its each column\ndf.isnull().sum()","be389ff4":"# Simply let's get rid of the rows that contain missing value\ndf.dropna(inplace=True)","f2923ca6":"# How many unique product do we have in the data?\ndf.loc[:, 'Description'].nunique() ","a9ee2ff6":"# How many of each product are there? \ndf.loc[:, 'Description'].value_counts()","83a585c0":"# Ranking the 5 most ordered products from most to least.\ndf.groupby('Description').agg({'Quantity': 'sum'}).sort_values('Quantity', ascending=False).head(5)","b8c15c90":"df = df[~df['Invoice'].str.contains('C', na=False)]","8eb44e04":"df.head()","135e8594":"# While investigating our data we noticed that we don't have the amount of money that has been spent on each bought product\n# Since we will need it we have to create it by ourselves\n# In order to create that missing column we just have to multiply 'Price' and 'Quantity'\ndf['TotalPrice'] = df['Quantity'] * df['Price']","0e2be656":"today_date = dt.datetime(2011, 12, 11) # We have to set today date in order to calculate Recency metric\nrfm = df.groupby('Customer ID').agg({'InvoiceDate': lambda date: (today_date - date.max()).days, # Recency calclation\n                                     'Invoice': lambda num: num.nunique(), # Frequency calculation\n                                     'TotalPrice': lambda TotalPrice: TotalPrice.sum()}) # Monetary calculation\nrfm.head()","57efff14":"# Let's change column names in order to make it more understandable\nrfm.columns = ['Recency', 'Frequency', 'Monetary']\nrfm.head()\n# Consequently we have calculated R, F and M metrics","031bd4f8":"# It is obvious that we can't have Monetary value equal to 0 so let's get rid of it\nrfm = rfm[rfm['Monetary'] > 0]","70ef1ae0":"# Converting Recency\n\n# qcut() function orders values with ascending order. For recency if the value is small that means customer bought something recently.\n# So we have to give our highest score to the group that have the lowest recency values\n# for that reason we labeled our groups in [5, 4, 3, 2,1] order\nrfm['recency_score'] = pd.qcut(rfm['Recency'], 5, [5, 4, 3, 2,1])\nrfm.head()","d2f3c822":"# Converting Frequency\n\n#It's contrary in frequnecy scenario. If the frequency of customer is high we have to give 5 score to him\/her. Therefore we have to give [1, 2, 3, 4, 5] order\nrfm['frequency_score'] = pd.qcut(rfm['Frequency'].rank(method='first'), 5, [1, 2, 3, 4, 5]) \nrfm.head()","84692e0b":"# Converting Monetary\n# Similar with frequency part [1, 2, 3, 4, 5] order.\nrfm['monetary_score'] = pd.qcut(rfm['Monetary'], 5, [1, 2, 3, 4, 5]) \nrfm.head()","c3211ac9":"# If we concatenate R and F scores we will simply get RFM score  \nrfm['RFM_SCORE'] = (rfm['recency_score'].astype('str') + rfm['frequency_score'].astype('str'))\nrfm.head()","a38e4044":"# For that part we will use regex\nseg_map = {\n    r'[1-2][1-2]': 'hibernating', # For instance means: If F is 1 or 2 and If R is 1 or 2 give hibernating \n    r'[1-2][3-4]': 'at_Risk',\n    r'[1-2]5': 'cant_loose',\n    r'3[1-2]': 'about_to_sleep',\n    r'33': 'need_attention',\n    r'[3-4][4-5]': 'loyal_customers',\n    r'41': 'promising',\n    r'51': 'new_customers',\n    r'[4-5][2-3]': 'potential_loyalists',\n    r'5[4-5]': 'champions'\n}\n\nrfm['segment'] = rfm['RFM_SCORE'].replace(seg_map, regex=True)\nrfm.head()","69cf1c45":"# If you want to send Customer ID's of for instance 'at_Risk' group segmented customers to your manager in excel format you can use this code\nnew_df = pd.DataFrame()\nnew_df['at_Risk_id'] = rfm[rfm['segment'] == 'at_Risk'].index\nnew_df.to_excel('new_excel.xlsx')","8d8837ec":" <a id = \"12\"><\/a>\n# 7. Segmenting customers using RFM score.","eb9e2740":" <a id = \"13\"><\/a>\n# Conclusion\n* We have finished our segmentation, let's see what do these group mean?\n![image.png](attachment:041ebea2-46b2-47db-828c-eede502db4b9.png)\n* For instance let's take 3 groups for analysing and mentioning what actions can a company take for these groups.\n    * **Can't loose them** : The RFM_SCORE of this group is '15' so these are our top purchasers considering all other customers but they haven't visited our site for a long time. It is necessary to take care of these customers and get them to re-shop in some way. They used to purchase frequently but haven\u2019t returned for a long time. We must not loose that gorup. Because their number transaction is really high, but unfortunately they are not active for a long time. We have to win them back, make them special offers and make them feel valuable. Also we can conduct a survey for that group for investigating why they are not present for a long time, it's abnormal because their frequency is the most among all customers.\n    * **new_customers** : The RFM_SCORE of this group is '51', so their Recency value is one of the best(5) when considering all other customers, and its Frequency value is 1, that is one of the least considering all customers. That's why we name this group new_customers. They just visited our site. We can offer them some special 'Welcome' offers.\n    * **need_attention** : The RFM_SCORE of this group is '33' - so this group needs to be taken care of, if special attention is given this group they can be in 'loyal_customer', 'potential_loyalist' or either 'champions' groups, otherwise they can be in 'at risk', 'about to sleep' or 'hibernating' gropus. This group is in the middle when all customers are considered in terms of both 'frequency' and 'recency' values. The action decisions we will take can move these group into more valuable groups.\n### You can analyse others by yourself in the same way\n### **I hope you enjoyed while reading this notebook, if you liked it please upvote** :)","991009ac":"#### **After a brief explanation of what is RFM let's move on to performing RFM to real-life data**","d95e22a1":" <a id = \"8\"><\/a>\n# 3. Data Preprocessing\n* From dataset story we have been informed that if there is 'C' in the 'Invoice' column's variable that means this transaction is canceled. So we have to remove these canceled transactions from the dataset.","62bac543":" <a id = \"11\"><\/a>\n# 6. Calculating RFM score.\n* As I mentioned in previous parts we will not consider M score while calculating RFM score.","ae8dc692":" <a id = \"6\"><\/a>\n# **Let's dive into coding part.**\n### 1. Loading the Dataset & Checking Variables","0edc8ec3":"##### **Actually we have finished our RFM segmentation, Let's know analyse what do these gorups mean?**","72df727f":" <a id = \"9\"><\/a>\n# 4. Getting R, F and M metrics\n* For this work we suppose F and M metrics are highly correlated, so if F is high M will be high as well. We will calculate the M metric and score for each customer just for showing how to calculate it but we will not use it while calculating the RFM score. We will calculate RFM without taking M. But if someone wants to include also M in his\/her work, they can. You will just need to change the structure of the code a little bit. The main concept will still remain the same. It depends on the company whether they want to include M in their study or not.","2365e94e":"It is better to get a habit of working copy of the data after reading it, especially when the data is large. We might need the first version of the data in further steps so by this way we will not deal with reading data again we will just run this cell for that. Reading large data again takes a quite long time.","654d4abc":" <a id = \"3\"><\/a>\n### **About the dataset :**\n* This Online Retail II data set contains all the transactions occurring for a UK-based and registered, non-store online retail between 01\/12\/2009 and 09\/12\/2011.The company mainly sells unique all-occasion gift-ware. Many customers of the company are wholesalers.\n <a id = \"4\"><\/a>\n### **Definiton of Variables :**\n1. **Invoice:** Invoice number, unique identifier variable for each transaction. Refund invoice numbers starts with \"C\"\n2. **StockCode:** Unique product code\n3. **Description:** Product name\n4. **Quantity:** The number of product in the invoice\n5. **InvoiceDate:** Date and time of the purchase\n6. **Price:** Unit price of a product (in terms of Sterlin)\n7. **CustomerID:** Unique customer identifier\n8. **Country:** Residential country of customers\n","a738b157":" <a id = \"5\"><\/a>\n### **Business goal**\n* We want to segement the Customers based on RFM so that the company can target its customers efficiently.","e99fb517":" <a id = \"2\"><\/a>\n#### **What inforamtion we can reveal after performing RFM Analysis?**\n* Who are your best customers?\n* Which customers have a chance to churn?\n* Who has the potential to become valuable customers?\n* Who are your loyal customers?\n* Who are your new customers?\n* Which customers is critical to retain?\n* Which group of customers is most likely to respond to your current campaign?\n* Which customers are lost? \n\nand more","c22e7721":" <a id = \"10\"><\/a>\n# 5. Converting R, F and M metrices to R, F and M scores\n* In order to calculate RFM scores we have to convert our R, F and M metrics to scores. For that, we just have to change these metrics into [1,2,3,4,5] values. ","a064f03a":"# **RFM Analysis**","bf57692d":"![image.png](attachment:91863358-35d1-4dc5-97fc-d96adc0d271b.png)","ddb89e36":"Content:\n    \n1. [What is RFM Analysis](#1) \n    \n* [What inforamtion we can reveal after performing RFM Analysis?](#2)\n    \n2. [About the dataset ](#3)\n    \n* [Definiton of Variables ](#4)\n* [Business goal ](#5)\n   \n3. [Coding Part](#6)\n* [1. Loading the Dataset & Checking Variables](#6)\n* [2. Answering some analytical questions about the data](#7)\n* [3. Data preprocessing](#8)\n* [4. Getting R, F and M metrics](#9)\n* [5. Converting R, F and M metrices to R, F and M scores](#10)\n* [6. Calculating RFM score](#11)\n* [7. Segmenting customers using RFM score.](#12)\n4. [Conclusion](#13)","d00628df":"<a id = \"10\"><\/a>","8c2d800b":" <a id = \"7\"><\/a>\n## **2. Answering some analytical questions about the data**","0c728ace":"<a id = \"1\"><\/a>\n# **What is RFM Analysis?**\nRFM analysis is a technique for categorizing customers based on their purchasing behavior. This segmentation method allows marketing teams to target customers with personalized marketing campaigns. Instead of analyzing the entire customer base as a whole, it's better to segment them into homogenous groups, understand the traits of each group, and engage them with relevant campaigns.\n\nRFM stands for **R**ecency, **F**requency, and **M**onetary value. That means we have to use these metrics in order to perform this method. So what are these values?\n* **Recency** : The freshness of customer activity. It's the time difference between the last purchase date of the customer and the date of analysis.\n* **Frequency** : The frequency of the customer transaction, means a total number of transactions.\n* **Monetary** : Sum of each purchase that has been made by each customer.  "}}