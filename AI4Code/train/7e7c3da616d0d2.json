{"cell_type":{"d6d3bea1":"code","252d7960":"code","15db9249":"code","6715675c":"code","0a4d2ea3":"code","5b6e7a68":"code","c27b0400":"code","d3c15a44":"code","249a0943":"code","3347cd53":"code","6dfe9a08":"code","ce578a9c":"code","dde2dda1":"code","def616e3":"code","b8b7d5c4":"code","712f07a6":"code","d19898f8":"code","cc4a35cd":"code","d2957e1e":"code","37f6cacd":"code","439964b7":"code","25abc225":"code","4a3fcb71":"code","2347c56e":"code","7fee772e":"code","be900a9e":"code","574f92bb":"code","73ca93f5":"code","b6e9e804":"code","3558f073":"code","0585df26":"code","48c840a3":"code","33fe4958":"code","4b153a77":"code","95838397":"code","d6a4b24a":"code","1e12fb39":"code","c5d3aa01":"code","441a05ca":"code","a7328b87":"code","04dc2f20":"markdown","72ddfbfc":"markdown","ee065b36":"markdown","ce129b48":"markdown","454628d1":"markdown"},"source":{"d6d3bea1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","252d7960":"data_train = pd.read_csv(\"..\/input\/tabular-playground-series-jul-2021\/train.csv\")\ndata_test = pd.read_csv(\"..\/input\/tabular-playground-series-jul-2021\/test.csv\")\ndata_submit = pd.read_csv(\"..\/input\/tabular-playground-series-jul-2021\/sample_submission.csv\")","15db9249":"data_train.head()","6715675c":"data_train.isnull().any()","0a4d2ea3":"data_train.info()","5b6e7a68":"data_train[\"deg_C\"]=data_train[\"deg_C\"].astype(float)","c27b0400":"import matplotlib.pyplot as plt\n\nfig = plt.figure(figsize =(5, 3))\n# Creating plot\nplt.boxplot(data_train[\"deg_C\"])\n# show plot\nplt.show()","d3c15a44":"fig = plt.figure(figsize =(5, 3))\n# Creating plot\nplt.boxplot(data_train[\"relative_humidity\"])\n# show plot\nplt.show()","249a0943":"fig = plt.figure(figsize =(5, 3))\n# Creating plot\nplt.boxplot(data_train[\"absolute_humidity\"])\n# show plot\nplt.show()","3347cd53":"fig = plt.figure(figsize =(5, 3))\n# Creating plot\nplt.boxplot(data_train[\"sensor_1\"])\n# show plot\nplt.show()","6dfe9a08":"fig = plt.figure(figsize =(5, 3))\n# Creating plot\nplt.boxplot(data_train[\"sensor_2\"])\n# show plot\nplt.show()","ce578a9c":"fig = plt.figure(figsize =(5, 3))\n# Creating plot\nplt.boxplot(data_train[\"sensor_3\"])\n# show plot\nplt.show()","dde2dda1":"fig = plt.figure(figsize =(5, 3))\n# Creating plot\nplt.boxplot(data_train[\"sensor_4\"])\n# show plot\nplt.show()","def616e3":"fig = plt.figure(figsize =(5, 3))\n# Creating plot\nplt.boxplot(data_train[\"sensor_5\"])\n# show plot\nplt.show()","b8b7d5c4":"import matplotlib.pyplot as plt\n\nfig = plt.figure(figsize =(5, 3))\n# Creating plot\nplt.boxplot(data_train[\"sensor_1\"])\n# show plot\nplt.show()","712f07a6":"x = data_train.iloc[:,1:9].values\ny=data_train.iloc[:,9:12].values","d19898f8":"x","cc4a35cd":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3,random_state=42)","d2957e1e":"from sklearn.linear_model import LinearRegression\nmultilinear = LinearRegression()\nmultilinear.fit(x_train,y_train)","37f6cacd":"y_pred=multilinear.predict(x_test)","439964b7":"y_pred","25abc225":"y_test","4a3fcb71":"from sklearn.metrics import r2_score\naccuracy = r2_score(y_test,y_pred)","2347c56e":"accuracy","7fee772e":"from sklearn.metrics import mean_squared_error\nmse=mean_squared_error(y_test,y_pred)\nrmse=np.sqrt(mse)\nprint(\"RMSE value: {:.2f}\".format(rmse))","be900a9e":"print(\"Train set score: {:.2f}\".format(multilinear.score(x_train,y_train)))","574f92bb":"print(\"Test set score: {:.2f}\".format(multilinear.score(x_test,y_test)))","73ca93f5":"x_test2=data_test.iloc[:,1:9].values\ny_test2=data_submit.iloc[:,1:4].values\n\ny_pred2=multilinear.predict(x_test2)","b6e9e804":"y_pred2","3558f073":"y_test2","0585df26":"accuracy2 = r2_score(y_test2,y_pred2)\naccuracy2","48c840a3":"date_time=data_test[\"date_time\"]","33fe4958":"date_time","4b153a77":"df2 = pd.DataFrame(y_pred2, columns = ['target_carbon_monoxide','target_benzene','target_nitrogen_oxides'])","95838397":"df = pd.DataFrame(date_time, columns = ['date_time'])","d6a4b24a":"df","1e12fb39":"df['target_carbon_monoxide']=df2['target_carbon_monoxide']\ndf['target_benzene']=df2['target_benzene']\ndf['target_nitrogen_oxides']=df2['target_nitrogen_oxides']","c5d3aa01":"df.to_csv(r'submission2.csv')","441a05ca":"df.info()","a7328b87":"data_submit.info()","04dc2f20":"## Separating the Data","72ddfbfc":"## Checking Outliers\n1. We first check the outliers using boxplot\n2. We then delete those outliers","ee065b36":"## Evaluation the Model\n\n<b>MRE<\/b>\n\nThe lower the MSE the better\nhttps:\/\/www.youtube.com\/watch?v=VRnFon3HYt8","ce129b48":"## Preparing the Submission and Export","454628d1":"# Tabular Playground Series - Jul 2021\n\nHello Kagglers!,\n\nThis is my first time analyzing a dataset in a playground competition,\nLove to be a part of Kaggle community!"}}