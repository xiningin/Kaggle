{"cell_type":{"3f8b19cd":"code","597a6d33":"code","75a252b5":"code","d2aa3555":"code","f39e798e":"code","fddb9a19":"code","1b095621":"code","ee32315d":"code","25acdfe3":"code","d023a02d":"code","fd32bd4e":"markdown","4a45a2b1":"markdown","d90d0dfa":"markdown","4e94cb9f":"markdown","01a83d7b":"markdown","c201d2c8":"markdown","f37754ae":"markdown","b6f24651":"markdown","8c72c9d8":"markdown","38ada204":"markdown","6b82ea82":"markdown","925e12b2":"markdown","dda99098":"markdown","63c1402e":"markdown"},"source":{"3f8b19cd":"mylist = [1, 2, 3, 4, 5, 6]\n\nfor line in mylist:\n    print(line)","597a6d33":"# Your notebook already knows about mylist. Sum its values by adding the code below this comment.\n\ntotal = 0\nfor x in mylist:\n    total = total + x\n    \nprint(total)","75a252b5":"s = \"This is a test string for HCDE 530\"\n# Add your code below\nwords = s.split()\nfor word in words:\n    print(word)","d2aa3555":"# Add your code here\n\nfor index, item in enumerate(mylist):\n    if item == 4:\n        mylist[index] = 'four'\n\nprint(mylist)","f39e798e":"# The code below allows you to access your Kaggle data files\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# create a file handle called fname to open and hold the contents of the data file\nfname = open('\/kaggle\/input\/test-data\/test.txt', 'r')\n\n# Add your code below\nfor line in fname:\n    line = line.rstrip()\n    print(line)\n\n# It's good practice to close your file when you are finished. This is in the next line.\nfname.close()","fddb9a19":"dogList = [\"Akita\",\"Alaskan Malamute\",\"Australian shepherd\",\"Basset hound\",\"Beagle\",\"Boston terrier\",\"Bulldog\",\"Chihuahua\",\"Cocker Spaniel\",\"Collie\",\"French Bulldog\",\"Golden Retriever\",\"Great Dane\",\"Poodle\",\"Russell Terrier\",\"Scottish Terrier\",\"Siberian Husky\",\"Skye terrier\",\"Smooth Fox terrier\",\"Terrier\",\"Whippet\"]\n\n# Add your code below\nfor index, item in enumerate(dogList):\n    sindex = item.lower().find('terrier')\n    print(sindex)","1b095621":"binList = [0,1,1,0,1,1,0]\n\n# Add your code below\nfor index, item in enumerate(binList):\n    if item == 1:\n        print('One')\n        ","ee32315d":"for index, dogname in enumerate(dogList):\n    start = dogname.lower().find('bulldog')\n    if start != -1:\n        print(dogname)\n        \n","25acdfe3":"numChars = 0\nnumLines = 0\nnumWords = 0\n\n# create a file handle called fname to open and hold the contents of the data file\n# make sure to upload your a2feed.txt file first\nfname = open('\/kaggle\/input\/test-data\/test.txt', 'r')\n\n# Add your code below to read each line in the file, count the number of characters, lines, and words\n# updating the numChars, numLines, and numWords variables.\nfor line in fname:\n    numChars = numChars + len(line)\n    numLines = numLines + 1\n    numWords = numWords + len(line.split())\n\n# output code below is provided for you; you should not edit this\nprint('%d characters'%numChars)\nprint('%d lines'%numLines)\nprint('%d words'%numWords)\n\n# It's good practice to close your file when you are finished. This is in the next line.\nfname.close()","d023a02d":"# Add your code below\nnumChars = 0\nnumLines = 0\nnumWords = 0\n\n\nfname = open('\/kaggle\/input\/sherlockdata\/sherlock.txt', 'r')\n\n\nfor line in fname:\n    numChars = numChars + len(line)\n    numLines = numLines + 1\n    numWords = numWords + len(line.split())\n\n\nprint('%d characters'%numChars)\nprint('%d lines'%numLines)\nprint('%d words'%numWords)\n\n\nfname.close()","fd32bd4e":"### Step 6: print out only items containing a certain string\n(See instructions below for parts 6a, 6b, 6c)","4a45a2b1":"Now, upload a new data file to Kaggle to work with: `sherlock.txt`. You can get this file on Canvas. Add the code you would need to do the same analysis on `sherlock.txt`. This time, I'm not starting you out with anything. Make sure to open and close the file properly!","d90d0dfa":"# A2: Python Basic Exercises (continued)\nThe Code Cell below has some Python code with instructions in comments. After each instruction, write the Python code necessary to perform the operations. You can check your work at any time by executing the code and reviewing the output.<br><br>When you have finished, submit this homework by sharing your CoLab notebook. Select the Share icon in the upper right of your screen. Make sure that Anyone at UW with the link can view. Select Get shareable link and copy this URL.\n\nTo submit, select Submit Assignment on Canvas and paste this link into the URL submission field.","4e94cb9f":"### **Part 1**","01a83d7b":"### **Part 2**\nYou have learned to think about data processing and how to perform basic string and list operations. In Part 2, you'll count the number of lines, characters, and words in data files files, excluding newline characters.\n\nWe will keep things simple and define a word as something that is delimited by any whitespace, so that the number of words on a line that is read from a file is simply the number of strings returned by `split()`.\n\nTo help you get started on this first programming assignment, here is a list of Python functions and methods that we've discussed (or will discuss) in class, or covered in supplement 2, that you will probably find useful:\n\n*   `open()`\n*   `split()`\n*   `len()`\n*   `print()`\n*   `rstrip()`","c201d2c8":"**6c** Now, iterate over `dogList`. Print out only the items that contain the string `Bulldog`. The case does not matter, you should match bulldog or Bulldog. Remember, so long as you run the code above, your Python notebook runtime will know about the variable `doglist` from Step 1\n(hint: You will need to use `if`. Also, `find()` may help.)","f37754ae":"### Step 4: replacing an element of a list\nReplace the element of `mylist` whose value is `4` with the value `four` and then print ` mylist` (you can do this with indexing if you like). Remember, so long as you run the code above, your Python notebook runtime will know about the variable `mylist` from Step 1.","b6f24651":"### Step 2: summing values of a list\nWrite code that adds up all the elements of `mylist` using a for loop, then prints out the sum. You do not need to declare `mylist` again because you created that list in the code cell above this one. So long as you run the code above, your Python notebook runtime will know about the variable from Step 1step of the for loop)\n\n(Note: this is the example I used to teach you the accumulation pattern in lecture. Try to reconstruct the code here without looking at that code.)","8c72c9d8":"**6a:** Iterate over `dogList`. \nIf the line contains \"terrier\" or \"Terrier\", print out the character number where the string \"Terrier\" or \"terrier\" starts. For example, \"Boston Terrier\" should result in: \n`7` However, if the line does not contain \"terrier\" or \"Terrier\", your code should print \"-1\" (hint: use `find()`)","38ada204":"### Step 5: print out a file, verbatim\nDownload the `test.txt` file from Canvas (see the Files area or this week's module). Read and print each line contained in `test.txt`.  Your program should output the text exactly as it is in `test.txt`.\n\nYou will need to upload your data file to your Kaggle account to do this. Make sure to watch my instruction video on Canvas if you don't recall how to do this. I have included the code below to allow you to access the files system on your Kaggle account.\n\n(Hint: you may need to use `rstrip()` to remove the newline character at the end of each line, to avoid getting an extra blank line between each real line.)","6b82ea82":"### Step 3: splitting strings\nWrite code that splits `s` into a list of separate words (where each word is defined to be any series of characters separated by a whitespace). Print out the list using a for loop (as in Step 1), one word per line.","925e12b2":"### Step 1: iterated operation over list\n\nAdd your own code to the code below, so that it iterates over each element of `mylist` using a `for` loop, printing each element on a new line.","dda99098":"First, try to make your program work first on `test.txt` which you used in Part 1. It has 22 characters, 3 lines, and 5 words. (Note: newline characters are included in this character count!) ","63c1402e":"**6b:** We are working with a new list called `binList = [0,1,1,0,1,1,0]`\n\nIterate over binList. If the current item equals 1 print \"One\". Otherwise, don't print anything."}}