{"cell_type":{"f2436d0d":"code","cb9c6555":"code","93de73a9":"code","3f5a91c9":"code","9e8271c5":"code","e9ddd392":"code","77e48197":"code","817f4f08":"code","9b562252":"code","3713731e":"code","f5548dde":"code","372f39d8":"code","88ba7128":"code","05a2707c":"markdown","471eb90d":"markdown","d86cc96d":"markdown","85b0d1ae":"markdown","7f809a7e":"markdown","66575469":"markdown","63fde92c":"markdown","afcfa8de":"markdown","9337b1cb":"markdown","f9bd1a2e":"markdown","fed28376":"markdown","14dd0363":"markdown","2c9f4ea7":"markdown","dc304776":"markdown"},"source":{"f2436d0d":"import pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import MinMaxScaler\nfrom tensorflow.keras.preprocessing.sequence import TimeseriesGenerator\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import LSTM, Dense\nfrom tensorflow.keras.callbacks import EarlyStopping","cb9c6555":"df = pd.read_csv(\"\/kaggle\/input\/retail-sales-forecasting\/mock_kaggle.csv\", index_col=\"data\")\ndf = df.rename(columns={'data' : 'Date', 'venda' : 'Sales', 'estoque' : 'Stock', 'preco' : 'Price'})","93de73a9":"df.head()","3f5a91c9":"df.info()","9e8271c5":"values = df.values\nscaler = MinMaxScaler()\nvalues = scaler.fit_transform(values)\n\ny_scaler = MinMaxScaler()\ny_scaler.fit(df[\"Sales\"].values.reshape(-1,1))\n\ndf = pd.DataFrame(values, columns=[\"Sales\", \"Stock\", \"Price\"])","e9ddd392":"df.head()","77e48197":"test_size = 30  # last month\ntrain = df.iloc[:-test_size, :]\ny_train = train[\"Sales\"].to_numpy()\nx_train = train.to_numpy()\n\ntest  = df.iloc[-test_size:]\ny_test = test[\"Sales\"].to_numpy()\nx_test = test.to_numpy()","817f4f08":"length = 1\ntrain_generator = TimeseriesGenerator(x_train, y_train, length=length, batch_size=1)\ntest_generator = TimeseriesGenerator(x_test, y_test, length=length, batch_size=1)","9b562252":"number_of_features = 3  # (price, stock, sales)\nnumber_of_targets = 1   # (sales)\n\nmodel = Sequential()\nmodel.add(LSTM(64, activation=\"relu\", input_shape=(length, number_of_features)))\nmodel.add(Dense(number_of_targets))\n\nmodel.compile(\n    optimizer=\"adam\",\n    loss=\"mse\"  # Because this is a regression problem\n)\n\n# To prevent the model from over fitting over the data \nearly_stopping = EarlyStopping(monitor=\"val_loss\")","3713731e":"model.fit(\n    train_generator,\n    epochs=20,\n    callbacks=[early_stopping],\n    validation_data=test_generator,\n    shuffle=False\n)","f5548dde":"predictions = model.predict(test_generator)","372f39d8":"y_test = y_scaler.inverse_transform(y_test.reshape(-1,1))\npredictions = y_scaler.inverse_transform(predictions.reshape(-1,1))","88ba7128":"import matplotlib.pyplot as plt\nplt.plot(predictions, label=\"prediction\")\nplt.plot(y_test, label=\"ground truth\")\nplt.legend()\nplt.show()","05a2707c":"#### Important Note\n\nA very important note before training. We need to prevent the \"fit\" function from shuffeling the data samples as the sequence and the order of the data is very important as we want to catch the changes and trends along the time.","471eb90d":"Now let's visualize the predicted Sales for the last month vs. the actual Sales values for that month","d86cc96d":"## Generate time series data","85b0d1ae":"# Split Training and Testing data","7f809a7e":"# Evaluation","66575469":"As shown in the dataset, there's a new sample every day for two years. so we will take the last month (30 days) as our test data and train over the rest of the data","63fde92c":"# Load Dataset","afcfa8de":"We need to generate time series data for the training. for example if we have three arrays <br>\nsales (target)    =  [10, 20, 30, 40, 50] <br>\nprice (feature_1) =  [1, 2, 3, 4, 5] <br>\nstock (feature_2) =  [100, 200, 300, 400, 500] <br>\n\nThe data sample should contain the [feature_1(t-1), feature_2(t-1), target(t-1)] and try to predict the target at time (t). <br>\n\n[1,100,10] ==> 20 <br>\n[2,200,20] ==> 30 <br>\n[3,300,30] ==> 40 <br>\n\nAnd so on","9337b1cb":"We will then use MinMaxScaler to scale the dataset to the range from 0 to 1. each feature will be scaled indiviually","f9bd1a2e":"# Build Model and Train","fed28376":"As the data coming from Brasil we need to translate the columns names:\n\nPortugese | English\n--- | ---\ndata | Date \nvenda | Sales \nestoque | Stock\npreco | price","14dd0363":"# Data preprocessing","2c9f4ea7":"Invert the scaled values of the **Sales** data to visualize the final output","dc304776":"# Imports"}}