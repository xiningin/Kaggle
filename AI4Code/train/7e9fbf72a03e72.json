{"cell_type":{"0296a875":"code","8e48ba27":"code","c74643de":"code","d4e3cf01":"code","5a6d75ae":"code","f42bccbd":"code","e24326e1":"code","27c47c62":"code","92aa3c10":"code","cbbd635e":"code","06e0a0bd":"code","0294d3d1":"code","57ff3d98":"code","94a57418":"code","5989727e":"code","be040b51":"code","fa48d26e":"code","5adf84e7":"code","1a97ce3c":"code","24404d3f":"code","ce2e7eff":"code","8f2d238e":"code","1552f99e":"code","ea1791a9":"code","9f8f990c":"code","f4fa732b":"code","db3f5472":"code","9bb8f1df":"code","a87f3bff":"code","6c588dc2":"code","b95a137d":"code","e4f58783":"code","d514d7d3":"code","59f4e424":"code","f88759f1":"code","9bda19d8":"code","5ae2b3f5":"code","7d281858":"code","4b761daf":"code","af713d42":"code","175267b7":"markdown","ea256b6d":"markdown","64609cd6":"markdown","bc695a02":"markdown","54607e6b":"markdown","1158d2b9":"markdown","47facd29":"markdown","bfed86d3":"markdown","29326702":"markdown","3bb47915":"markdown","b62b6fa9":"markdown","fafcdfbc":"markdown","8fca4cba":"markdown","f64583dc":"markdown","ff817484":"markdown","b841bb9c":"markdown","e9dc8a6c":"markdown","20a865e3":"markdown","91a1ad28":"markdown","cbb8eab2":"markdown","995ea1f2":"markdown","be8a1bd9":"markdown"},"source":{"0296a875":"# Importing Modules\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nsns.set()\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8e48ba27":"#Importing the loan.csv file\nloan = pd.read_csv(\"\/kaggle\/input\/lending-club-data\/loan.csv\", low_memory=False)","c74643de":"loan.head()","d4e3cf01":"loan.shape","5a6d75ae":"#Checking the percentage of missing values in each column\nround(100*(loan.isnull().sum()\/len(loan.index)), 2)","f42bccbd":"#Deleting columns with more than 50% missing values\nloan = loan.dropna(thresh=len(loan)*0.5, axis=1)","e24326e1":"loan.shape","27c47c62":"#Finding number of unique values in each vcolumn\nloan.nunique().sort_values().head(54)","92aa3c10":"#Deleting columns which doesnt help much with the analysis and with more unique value and no unique values\n\nloan = loan.drop(['desc','emp_title','member_id', 'id', 'url','delinq_amnt', 'acc_now_delinq', 'application_type','policy_code', 'pymnt_plan', 'initial_list_status', 'chargeoff_within_12_mths','tax_liens', 'collections_12_mths_ex_med','zip_code','emp_title','out_prncp','out_prncp_inv'], axis=1)","cbbd635e":"round(100*(loan.isnull().sum()\/len(loan.index)), 2)","06e0a0bd":"#Imputing te categorical missing with Mode metrics\n\nloan[\"emp_length\"] = loan[\"emp_length\"].fillna(loan[\"emp_length\"].mode()[0])\nloan[\"title\"] = loan[\"title\"].fillna(loan[\"title\"].mode()[0])\nloan[\"revol_util\"] = loan[\"revol_util\"].apply(lambda x: float(str(x).replace(\"%\",\"\")))\n\n#Imputing te numerical missing with Mean metrics\nloan[\"revol_util\"] = loan[\"revol_util\"].fillna(loan[\"revol_util\"].mean())\nloan[\"pub_rec_bankruptcies\"] = loan[\"pub_rec_bankruptcies\"].fillna(loan[\"pub_rec_bankruptcies\"].mean())\n\n#Filtering the null rows\nloan = loan[-loan[\"last_pymnt_d\"].isnull()]\nloan = loan[-loan[\"last_credit_pull_d\"].isnull()]\n\nround(100*(loan.isnull().sum()\/len(loan.index)), 2)","0294d3d1":"loan.shape","57ff3d98":"#Calculating the data loss\nround(100-round(100*len(loan.index)\/39717,2),2)","94a57418":"#Filtering the Current loan status as this doesnt give any inference when the loan is still in progress\nloan = loan[loan.loan_status != 'Current']","5989727e":"loan.info()","be040b51":"#Converting the Object Dtype to numeric by replacing the charecters in data\nloan[\"term\"] = loan[\"term\"].apply(lambda x: int(str(x).replace(\"months\",\"\")))\nloan[\"int_rate\"] = loan[\"int_rate\"].apply(lambda x: float(str(x).replace(\"%\",\"\")))\nloan[\"emp_length\"] = loan[\"emp_length\"].apply(lambda x: int((((str(x).replace(\"< 1 year\",\"0\")).replace(\"years\",\"\")).replace(\"year\",\"\")).replace(\"+\",\"\")))\nloan[\"revol_util\"] = loan[\"revol_util\"].apply(lambda x: float(str(x).replace(\"%\",\"\")))","fa48d26e":"#Converting the Object Dtype to Date Time\nloan.issue_d = pd.to_datetime(loan.issue_d, format='%b-%y')\nloan.earliest_cr_line = pd.to_datetime(loan.earliest_cr_line, format='%b-%y')\nloan.last_pymnt_d = pd.to_datetime(loan.last_pymnt_d, format='%b-%y')\nloan.last_credit_pull_d = pd.to_datetime(loan.last_credit_pull_d, format='%b-%y')","5adf84e7":"#Derived metrics from the Date column issue_d\n\n#issued date column\nloan['issued_year'] = loan.issue_d.dt.year\nloan['issued_month'] = loan.issue_d.dt.strftime('%b')\nloan['issued_weekday'] = loan.issue_d.dt.weekday\n\n#data type conversion of year and weekday\nloan['issued_weekday'] = loan['issued_weekday'].astype(object)\n\n#earliest_cr_line date column\nloan['earliest_cr_line_year'] = loan.earliest_cr_line.dt.year\nloan['earliest_cr_line_month'] = loan.earliest_cr_line.dt.strftime('%b')\n\n#data type conversion of year and weekday\nloan['earliest_cr_line_year'] = loan['earliest_cr_line_year'].astype(object)","1a97ce3c":"sns.boxplot( y=loan[\"loan_amnt\"] )\nplt.ylabel('Loan Amount')\nplt.show()","24404d3f":"loan[\"loan_status\"].value_counts(1).plot.pie(autopct='%1.1f%%')\nplt.ylabel(\"\")\nplt.xlabel('')\nplt.title(\"Loan Status Analysis\")\nplt.show()","ce2e7eff":"plt.figure(figsize=(14,4))\nplt.subplot(1,2,1)\nsns.countplot(x='emp_length', data=loan, order=loan['emp_length'].value_counts().index)\nplt.ylabel(\"Count of Grade\")\nplt.xlabel('Employee Working Experience')\nplt.title(\"Employee Working Analysis\")\n\nplt.subplot(1,2,2)\n\nsns.countplot(x='grade', data=loan, order=loan['grade'].value_counts().index)\nplt.ylabel(\"Count of Grade\")\nplt.xlabel(\"Grade\")\nplt.title(\"Grade Analysis\")\n\nplt.show()","8f2d238e":"plt.figure(figsize=(12,4))\nplt.subplot(1,2,1)\nsns.histplot(data=loan[\"dti\"])\nplt.subplot(1,2,2)\nsns.boxplot(data=loan[\"dti\"])\nplt.suptitle('Debt to Income Analysis')\nplt.show()","1552f99e":"#Analysis for the Year, Month and Weekday\nplt.figure(figsize=(20,12))\nplt.subplot(2,2,1)\nsns.barplot(x='index', y='issued_year', data=loan['issued_year'].value_counts(normalize=True).reset_index())\nplt.xlabel('issued year')\nplt.ylabel('Proportion')\nplt.title('Issued year Distribution')\n\n\nplt.subplot(2,2,2)\nsns.barplot(x='index', y='issued_month', data=loan['issued_month'].value_counts(normalize=True).reset_index())\nplt.xlabel('issued_month')\nplt.ylabel('Proportion')\nplt.title('Issued month Distribution')\n\n\nplt.subplot(2,2,3)\nsns.barplot(x='index', y='issued_weekday', data=loan['issued_weekday'].value_counts(normalize=True).reset_index())\nplt.xlabel('Issued weekday')\nplt.ylabel('Proportion')\nplt.title('Issued weekday Distribution')\n\nplt.show()","ea1791a9":"plt.figure(figsize=(14, 6))\nplt.subplot(1,2,1)\nsns.boxplot(x='loan_status', y='loan_amnt',data=loan)\nplt.ylabel(\"Loan Amount\")\nplt.xlabel(\"Loan Status\")\nplt.title(\"Loan Amount Vs Loan Status\")\n\nplt.subplot(1,2,2)\nsns.boxplot(x='loan_status', y='int_rate',data=loan)\nplt.ylabel(\"Interest Rate\")\nplt.xlabel(\"Loan Status\")\nplt.title(\"Interest Rate Vs Loan Status\")\n\nplt.show()","9f8f990c":"plt.figure(figsize=(14, 6))\nplt.subplot(1,2,1)\nsns.boxplot(x='loan_status', y='dti',data=loan)\nplt.ylabel(\"Dti\")\nplt.xlabel(\"Loan Status\")\nplt.title(\"Dti Vs Loan Status\")\n\nplt.subplot(1,2,2)\nsns.boxplot(x='loan_status', y='annual_inc',data=loan)\nplt.yscale('log')\nplt.ylabel(\"Annual Income\")\nplt.xlabel(\"Loan Status\")\nplt.title(\"Annual Income Vs Loan Status\")\n\nplt.show()","f4fa732b":"Loan_Temp = pd.pivot_table(data=loan, index=loan[\"verification_status\"], columns=loan[\"loan_status\"],values=\"loan_status\", aggfunc='count')\nLoan_Temp.plot(kind=\"bar\", stacked=\"True\", figsize=[8,6])\nplt.ylabel(\"Count of Loan Status\")\nplt.xlabel(\"Verification Status\")\nplt.title(\"Verification Status Vs Loan Status\")\nplt.show()","db3f5472":"Loan_Temp = pd.pivot_table(data=loan, index=loan[\"purpose\"], columns=loan[\"loan_status\"],values=\"loan_status\", aggfunc='count')\nLoan_Temp.plot(kind=\"bar\", stacked=\"True\", figsize=[8,6])\nplt.ylabel(\"Count of Loan Status\")\nplt.xlabel(\"Loan Purpose\")\nplt.title(\"Loan Purpose Vs Loan Status\")\nplt.show()","9bb8f1df":"Loan_Temp = pd.pivot_table(data=loan, index=loan[\"home_ownership\"], columns=loan[\"loan_status\"],values=\"loan_status\", aggfunc='count')\nLoan_Temp.plot(kind=\"bar\", stacked=\"True\", figsize=[5,6])\nplt.ylabel(\"Count of Loan Status\")\nplt.xlabel(\"Home OwnerShip\")\nplt.title(\"Home OwnerShip Vs Loan Status\") \nplt.show()","a87f3bff":"Loan_Temp = pd.pivot_table(data=loan, index=loan[\"grade\"], columns=loan[\"loan_status\"],values=\"loan_status\", aggfunc='count')\nLoan_Temp.plot(kind=\"bar\", stacked=\"True\", figsize=[8,6])\nplt.ylabel(\"Count of Loan Status\")\nplt.xlabel(\"Grade\")\nplt.title(\"Grade Vs Loan Status\") \nplt.show()","6c588dc2":"Loan_Temp = pd.pivot_table(data=loan, index=loan[\"sub_grade\"], columns=loan[\"loan_status\"],values=\"loan_status\", aggfunc='count')\nLoan_Temp.plot(kind=\"bar\", stacked=\"True\", figsize=[8,6])\nplt.ylabel(\"Count of Loan Status\")\nplt.xlabel(\"Sub Grade\")\nplt.title(\"Sub Grade Vs Loan Status\") \nplt.show()","b95a137d":"Loan_Temp = pd.pivot_table(data=loan, index=loan[\"addr_state\"], columns=loan[\"loan_status\"],values=\"loan_status\", aggfunc='count')\nLoan_Temp.plot(kind=\"bar\", stacked=\"True\", figsize=[15,8])\nplt.ylabel(\"Count of Loan Status\")\nplt.xlabel(\"Address State\")\nplt.title(\"Address State Vs Loan Status\") \nplt.show()","e4f58783":"plt.figure(figsize=(20,10))\nplt.subplot(121)\nsns.boxplot(x='home_ownership', y=loan.loan_amnt, data=loan, hue=\"loan_status\",  palette=\"Set3\")\nplt.ylabel(\"Loan Amount\")\nplt.xlabel(\"Home Ownership\")\nplt.title('Home Ownership vs Loan Amount')\n\nplt.subplot(122)\nplt.title('verification Status vs Loan Amount')\nplt.ylabel(\"Loan Amount\")\nplt.xlabel(\"verification Status\")\nverification_status_ord = loan.verification_status.unique()\nverification_status_ord.sort()\nsns.boxplot(x='verification_status', y=loan.loan_amnt, order = verification_status_ord, data=loan, hue=\"loan_status\",  palette=\"Set3\")\n\nplt.show()","d514d7d3":"plt.figure(figsize=(20,5))\nsns.boxplot(x='purpose', y=loan.loan_amnt, data=loan, hue=\"loan_status\",  palette=\"Set3\")\n#Rotating x values 90 for better visibility\nplt.xticks(rotation=90)\nplt.title('Purpose vs Loan Amount')\nplt.ylabel(\"Loan Amount\")\nplt.xlabel(\"Purpose\")\nplt.show()","59f4e424":"plt.figure(figsize=(20,5))\nsns.boxplot(x='emp_length', y=loan.loan_amnt, data=loan, hue=\"loan_status\",  palette=\"Set3\")\nplt.title('Employee Experience vs Loan Amount')\nplt.ylabel(\"Loan Amount\")\nplt.xlabel(\"Employee Experience\")\nplt.show()","f88759f1":"plt.figure(figsize=(20,5))\nloan['Income_group'] = pd.cut(loan['annual_inc'], bins=range(0, 1000000, 50000))\nsns.boxplot(x=loan['Income_group'], y=loan.loan_amnt, data=loan, hue=\"loan_status\",  palette=\"Set3\")\nplt.title('Annual Income vs Loan Amount')\nplt.ylabel(\"Loan Amount\")\nplt.xlabel(\"Annual Income\")\nplt.xticks(rotation=90)\nplt.show()","9bda19d8":"plt.figure(figsize=(20,15))\nsns.boxplot(x='home_ownership', y=loan.annual_inc, data=loan, hue=\"loan_status\",  palette=\"Set3\")\nplt.title('Annual Income vs Loan Amount')\nplt.ylabel(\"Loan Amount\")\nplt.xlabel(\"Annual Income\")\nplt.xticks(rotation=90)\nplt.yscale('log')\nplt.show()","5ae2b3f5":"# Correlation for all the numerical variables\nloan_correlation = loan.corr()\nsns.set(font_scale=1.1)\nsns.clustermap(loan_correlation,annot=True,figsize=(22, 18),cmap=\"BrBG\")\nplt.title(\"Correlation between Numerical Variables\") \nplt.show()","7d281858":"# Pairplot analysis for the variables 'loan_amnt', 'annual_inc', 'issued_year','int_rate','loan_status'\nloan_pair = loan[['loan_amnt', 'annual_inc', 'issued_year','int_rate','loan_status']].copy()\nloan_pair.head()\nloan_pair = loan_pair[-(loan_pair[\"loan_status\"] != \"Charged Off\")]\n# Take the log of below variables as they are heavily skewed\nloan_pair['loan_amnt'] = np.log10(loan_pair['loan_amnt'])\nloan_pair['annual_inc'] = np.log10(loan_pair['annual_inc'])\nloan_pair['int_rate'] = np.log10(loan_pair['int_rate'])\n\n# Create a pair plot colored by loan status with a density plot of the # diagonal and format the scatter plots.\nsns.pairplot(loan_pair, hue = 'loan_status', diag_kind = 'kde',\n             plot_kws = {'alpha': 0.6, 's': 70, 'edgecolor': 'k'},\n             height = 5)\nplt.show()","4b761daf":"#Correaltion of variables for all the customer behaviour numerical variables\n\nloan_Corr_Sub = loan[['delinq_2yrs', 'inq_last_6mths', 'open_acc','pub_rec','revol_bal','total_acc','total_pymnt','total_pymnt_inv','total_rec_prncp','total_rec_int','total_rec_late_fee','recoveries','collection_recovery_fee','last_pymnt_amnt']].copy()\nsns.set(font_scale=1.1)\nsns.clustermap(loan_Corr_Sub.corr(),annot=True,figsize=(22, 18),cmap=\"BrBG\")\nplt.title(\"Correlation between Numerical Variables\") \nplt.show()","af713d42":"#Correlation for only the Charged Off data set\n\nloan_Corr_Sub = loan[['delinq_2yrs', 'inq_last_6mths', 'open_acc','pub_rec','revol_bal','total_acc','total_pymnt','total_pymnt_inv','total_rec_prncp','total_rec_int','total_rec_late_fee','recoveries','collection_recovery_fee','last_pymnt_amnt','loan_status']].copy()\nloan_Corr_Sub = loan_Corr_Sub[-(loan_Corr_Sub[\"loan_status\"] != \"Charged Off\")]\nsns.set(font_scale=1.1)\nsns.clustermap(loan_Corr_Sub.corr(),annot=True,figsize=(22, 18),cmap=\"BrBG\")\nplt.title(\"Correlation between Numerical Variables\") \nplt.show()","175267b7":"Imputing the Missing values with relevant metrics","ea256b6d":"##### Inferences:\n##### Dti Vs Loan Status shows slight variation in the median range between fully paid and Charged Off\n##### Annual Income Vs Loan Status shows Slight variation explaining that the annual income for the Charge Off status is lower","64609cd6":"##### Inference: Most of the Loanes applied are people with 10+ Years of experience and the Loan Grades highly applied are B, A, C\n","bc695a02":"We have 54 Columns left","54607e6b":"##### Inference: Most of the loans taken are around 10,000","1158d2b9":"##### Inference: The DTI is < 30 for all the loans and the median lies between 10-15","47facd29":"##### Inference:\n##### The Purpose of Small Business applied for loan above 10,000 are likely to default\n##### The purpose of Credit Card, Debt Consolidation and home improvement also need to be verified","bfed86d3":"##### Inference: Loans from the regions of CA,NY and FL have more charge Off","29326702":"##### Inference: Higher Charge off ratio is ranging between the Annula income of 0-1000000\n##### lets go more in details with smaller groups the Income group 250000-300000 who are applying for a loan of above 20000 are likely to default\n##### The Income group 350000-400000 applying for a loan below 15000 are likely to default","3bb47915":"##### Inference: There is only a slight variation in the charge Off between Verified and Non verified profiles","b62b6fa9":"## Univariate Analysis","fafcdfbc":"Converting Dtypes of the columns for further analysis","8fca4cba":"##### Inference: More number of Charge Off profiles have taken loan under Debt Consolidation","f64583dc":"### Multivariate Analysis","ff817484":"##### Inference:\n##### Profiles with home ownership under Mortgage and applied for a loan more than 10,000 are more ikely to default\n","b841bb9c":"##### Inference: More loans are under the grades of B, C and D","e9dc8a6c":"\n##### Inferences:\n##### The Number of Loan applications increases every year.\n##### More loans are issues in the last three months of the year i.e Oct, Nov , Dec.\n##### More loans are issued on tuesday and wednessday than other week days.","20a865e3":"We lost 0.18% of the data in Data Cleaning, now we can proceed with further analysis","91a1ad28":"##### Inferences:\n##### Loan Amount Vs Loan Status shows slight variation in the median range between fully paid and Charged Off\n##### Interest Rate Vs Loan Status shows significant variation explaining that higher the interest rate higher the charge Off","cbb8eab2":"##### Inference: More number of Charge Off profiles have the Home Ownership under Mortgage or Rent","995ea1f2":"##### Inference: The Subgrade distribution is left skewed","be8a1bd9":"## Bivariate Analysis"}}