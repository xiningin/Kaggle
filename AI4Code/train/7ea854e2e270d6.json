{"cell_type":{"0a0abbbd":"code","95a5cd47":"code","f7fed9af":"code","1b75b217":"code","63f64c86":"code","4d87e07e":"code","0d02c888":"code","c1516c03":"code","18d68835":"code","ca63aa3e":"code","e22d9ff2":"code","ce02e68b":"code","46b47be4":"code","90a87524":"code","2f9b3b3c":"markdown"},"source":{"0a0abbbd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nfrom pandasql import sqldf\npysqldf = lambda q: sqldf(q, globals())\nimport numpy as np\nfrom matplotlib import pyplot as plt\nfrom matplotlib.animation import FuncAnimation\nimport matplotlib.animation as animation\nplt.style.use('seaborn-pastel')\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","95a5cd47":"akas = pd.read_csv(\"..\/input\/imdb-dataset\/title.akas.tsv\/title.akas.tsv\", sep = \"\\t\")\nakas.head()","f7fed9af":"akas.query(\"title == 'My Hero Academia'\")","1b75b217":"del akas","63f64c86":"ratings = pd.read_csv(\"..\/input\/imdb-dataset\/title.ratings.tsv\/title.ratings.tsv\", sep = \"\\t\")","4d87e07e":"episodes = pd.read_csv(\"..\/input\/imdbdata\/data.tsv\", sep = \"\\t\")","0d02c888":"data_filter = episodes.query(\"parentTconst == 'tt5626028'\")","c1516c03":"episodes.head()","18d68835":"ratings.head()","ca63aa3e":"q = \"\"\"select * from data_filter a\ninner join\nratings b\non a.tconst = b.tconst order by seasonNumber, episodeNumber\"\"\"\ndata_filter_1 = pysqldf(q)","e22d9ff2":"data_filter_1 = data_filter_1.drop(69, axis = 0)","ce02e68b":"data_filter_1['episode_number'] = data_filter_1.reset_index()['index']+1\n\ndata_filter_1['episode_number_1'] = 's0'+data_filter_1['seasonNumber']+'e0'+data_filter_1['episodeNumber']","46b47be4":"Writer = animation.writers['imagemagick']\nwriter = Writer(fps=20, metadata=dict(artist='u\/bloodlessAcranist'), bitrate=1800)","90a87524":"%matplotlib notebook\nfig = plt.figure(figsize=(10,6))\nax = plt.axes(xlim=(0, 70), ylim=(0, 10))\nline, = ax.plot([], [], lw=3, color = 'r')\n\n# fig = plt.figure(figsize=(10,6))\n# plt.xlim(0,70)\n# plt.ylim(np.min(data_filter_2)[0], np.max(data_filter_2)[0])\nplt.xlabel('episode', fontsize = 20)\nplt.ylabel('Average Ratings', fontsize = 20)\nplt.title('My Hero Academia Ratings', fontsize = 20)\n# x = data_filter_1.episode_number\n# y = data_filter_1.averageRating\n# line.set_data(x,y)\ndef animate(i):\n    data = data_filter_1.iloc[:int(i+1),:]\n    x = data.episode_number\n    y = data.averageRating\n    line.set_data(x, y)\n    return line,\nani = FuncAnimation(fig, animate, frames=69, repeat = True)\nani.save('MyHeroAcademiaRatings.gif', writer=writer)","2f9b3b3c":"tt5626028"}}