{"cell_type":{"90dc8548":"code","aa39490f":"code","b88e99c1":"code","4c3ebf8b":"code","7784c3c2":"code","f70969ec":"code","64c226fb":"code","bd7c69af":"code","6a2c0d02":"code","3db6a571":"code","62609689":"code","86e53366":"code","8fc70a0a":"code","79bbcf96":"code","42999a79":"code","9e896a17":"code","7eb35973":"code","3b339742":"code","4d4b9b49":"code","95dacffe":"code","0567efdd":"code","5c4692d6":"code","00e77133":"code","7dbf48ac":"code","22f38265":"code","eb043d28":"code","ef654879":"code","d9682280":"code","b8600ab5":"code","3d11d3d2":"code","567d61b3":"code","647e95c6":"code","cbfb929c":"code","027a8c94":"code","171cc026":"code","2180ddb2":"code","a90bc42f":"code","1ebb6c17":"code","39980092":"code","795b3606":"code","72e3f2f9":"code","544c63cd":"code","6ee0d681":"code","a31fb899":"code","5c3b2300":"code","98967e59":"code","0d57d58f":"code","f373f967":"code","d3f41f98":"code","2e858078":"code","59fb0909":"code","7bdc4d43":"code","faf81412":"code","3db04bcd":"code","e3c819be":"code","91694b77":"code","7636f017":"code","bda4b7ee":"code","9d44319d":"code","628707b6":"code","a119173b":"code","c290c1d9":"code","50155953":"code","6071df63":"code","ab90d664":"code","2bbeb855":"code","5521d1f3":"code","e1268ab3":"code","ae24998d":"code","aa8d75f6":"code","4375f3e1":"code","973e115e":"code","1c905b04":"markdown","75794166":"markdown","d5e4dc5c":"markdown","a07755af":"markdown"},"source":{"90dc8548":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aa39490f":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom scipy import stats\nfrom scipy.stats import norm,skew\nfrom statsmodels.graphics.gofplots import qqplot","b88e99c1":"data = pd.read_csv('\/kaggle\/input\/zomato-bangalore-restaurants\/zomato.csv')","4c3ebf8b":"data.head()","7784c3c2":"data.shape","f70969ec":"data.dtypes","64c226fb":"data.isnull().sum()","bd7c69af":"data.drop(['url','address','phone'],axis=1,inplace=True)","6a2c0d02":"data.describe(include='all')","3db6a571":"data[['rate','outof']] = data['rate'].str.split('\/',expand=True)","62609689":"data.head()","86e53366":"data.shape","8fc70a0a":"data.drop('outof',axis=1,inplace=True)","79bbcf96":"data.dtypes","42999a79":"data['rate'].unique()","9e896a17":"data.drop(data[data['rate'] == '-'].index,inplace=True)","7eb35973":"data.shape","3b339742":"data[data['rate'] == 'NEW']","4d4b9b49":"data[data['rate'] == 'NEW'].shape","95dacffe":"data['rate'] = data['rate'].replace('NEW',np.nan)","0567efdd":"data[data['votes'] == 0].shape","5c4692d6":"data['rate'].astype('float')","00e77133":"sns.distplot(data['rate'],fit=norm)","7dbf48ac":"#from sklearn.impute import KNNImputer","22f38265":"#imputer = KNNImputer(n_neighbors=3)","eb043d28":"data['location'].unique()","ef654879":"plt.figure(figsize=(20,20))\nsns.countplot(y='location',data=data,palette = \"Set1\",order=data['location'].value_counts().iloc[:50].index)","d9682280":"plt.figure(figsize=(20,20))\nsns.countplot(y='rest_type',data=data,palette = \"Set1\",order=data['rest_type'].value_counts().iloc[:30].index)","b8600ab5":"plt.figure(figsize=(20,20))\nsns.countplot(y='dish_liked',data=data,palette = \"Set1\",order=data['dish_liked'].value_counts().iloc[:50].index)","3d11d3d2":"plt.figure(figsize=(20,20))\nsns.countplot(y='cuisines',data=data,palette = \"Set1\",order=data['cuisines'].value_counts().iloc[:60].index)","567d61b3":"data.head()","647e95c6":"data['approx_cost(for two people)'].dtypes","cbfb929c":"data['approx_cost(for two people)']","027a8c94":"data.rename(columns={'approx_cost(for two people)': 'average_cost', 'listed_in(city)': 'locality','listed_in(type)': 'restaurant_type'}, inplace=True)","171cc026":"data['average_cost'].unique()","2180ddb2":"data['average_cost'] = data['average_cost'].astype(str).apply(lambda x: x.replace(',',''))\ndata['average_cost'] = data['average_cost'].astype('float')\nfig, ax = plt.subplots(figsize=[16,4])\nsns.distplot(data['average_cost'],ax=ax)\nax.set_title('average_cost')","a90bc42f":"data['online_order'] = data['online_order'].map({'Yes':1,'No':0})","1ebb6c17":"online_orders=pd.crosstab(data['rate'],data['online_order'])","39980092":"online_orders","795b3606":"plt.figure(figsize=(20,15))\nonline_orders.plot.bar(stacked=True)\nplt.legend(title='Online orders V\/S rating')","72e3f2f9":"book_table=pd.crosstab(data['rate'],data['book_table'])\nplt.figure(figsize=(20,15))\nbook_table.plot.bar(stacked=True)\nplt.legend(title='Book table V\/S rating')","544c63cd":"data['location']","6ee0d681":"data['rate'].dtypes","a31fb899":"data['rate'] = data['rate'].astype('float')","5c3b2300":"location = data.groupby(['location'])['rate'].mean().reset_index()\nlocation.head(50).sort_values('rate', ascending=False).style.background_gradient(cmap='Greens')","98967e59":"plt.figure(figsize=(15,20))\nsns.barplot(x='location',y='rate',data=location[:50])\nplt.xticks(rotation=90)","0d57d58f":"restrauent_type = data.groupby(['restaurant_type'])['rate'].mean().reset_index()\nrestrauent_type.head(50).sort_values('rate', ascending=False).style.background_gradient(cmap='Greens')","f373f967":"location_with_price = data.groupby(['location'])['average_cost'].mean().reset_index()\nlocation_with_price.head(50).sort_values('average_cost', ascending=False).style.background_gradient(cmap='Greens')","d3f41f98":"plt.figure(figsize=(15,20))\nsns.barplot(x='location',y='average_cost',data=location_with_price[:50])\nplt.xticks(rotation=90)","2e858078":"rest_type_with_price = data.groupby(['rest_type'])['average_cost'].mean().reset_index()\nrest_type_with_price.head(50).sort_values('average_cost', ascending=False).style.background_gradient(cmap='Greens')","59fb0909":"plt.figure(figsize=(15,20))\nsns.barplot(x='rest_type',y='average_cost',data=rest_type_with_price[:50])\nplt.xticks(rotation=90)","7bdc4d43":"data.head()","faf81412":"restrauent_type_with_price = data.groupby(['restaurant_type'])['average_cost'].mean().reset_index()\nrestrauent_type_with_price.head(50).sort_values('average_cost', ascending=False).style.background_gradient(cmap='Greens')","3db04bcd":"X= data.drop_duplicates(subset='name',keep='first')","e3c819be":"X.shape","91694b77":"type(X)","7636f017":"newdf=X[['name','average_cost','locality','rest_type','cuisines','rate','restaurant_type','online_order','book_table','dish_liked','cuisines']].groupby(['average_cost'], sort = True)\n#newdf=newdf.sort_values(by=['average_cost'])","bda4b7ee":"X= data.drop_duplicates(subset='name',keep='first')\n# dups_name = X1.pivot_table(index=['name'],aggfunc='size')\nnewdf=X[['name','average_cost','locality','rest_type','cuisines','restaurant_type','online_order','book_table','dish_liked','cuisines']].groupby(['average_cost'], sort = True)\nnewdf=newdf.filter(lambda x: x['average_cost'].mean() <= 1500)\nnewdf=newdf.sort_values(by='average_cost')\n\nnewdf_expensive=X[['name','average_cost','locality','rest_type','cuisines','restaurant_type','online_order','book_table','dish_liked','cuisines']].groupby(['average_cost'], sort = True)\nnewdf_expensive=newdf_expensive.filter(lambda x: x['average_cost'].mean() >= 3000)\nnewdf_expensive=newdf_expensive.sort_values(by='average_cost')","9d44319d":"newdf","628707b6":"newdf_rate=X[['name','rate']].groupby(['rate'], sort = True)\nnewdf_rate=newdf_rate.filter(lambda x: x['rate'].mean() >= 4.5)\nnewdf_rate=newdf_rate.sort_values(by=['rate'])\nX.rate.value_counts()\nX.rate.unique()\nX.nunique()","a119173b":"s1 = pd.merge(newdf,newdf_rate,how='inner',on=['name'])","c290c1d9":"s1.head(60)","50155953":"s2 = pd.merge(newdf_expensive,newdf_rate,how='inner',on=['name'])","6071df63":"s2","ab90d664":"newdf_voting = X[['name','average_cost','votes','locality','rest_type','cuisines','restaurant_type','online_order','book_table','dish_liked','cuisines']]","2bbeb855":"newdf_voting=X[['name','average_cost','votes','locality','rest_type','cuisines','restaurant_type','online_order','book_table','dish_liked','cuisines']].groupby(['votes'], sort = True)\n","5521d1f3":"newdf_voting=newdf_voting.filter(lambda x: x['votes'].mean() >= 200)","e1268ab3":"newdf_voting=newdf_voting.sort_values(by=['votes'])","ae24998d":"s3 = pd.merge(pd.merge(newdf_voting,newdf_rate,on='name'),newdf,on='name')","aa8d75f6":"s3.iloc[:,:12]","4375f3e1":"s4 = pd.merge(pd.merge(newdf_voting,newdf_rate,on='name'),newdf_expensive,on='name')","973e115e":"s4.iloc[:,:12]","1c905b04":"Cheapest restrauents with low cost and high rating are....","75794166":"expensive restrauents with high price and high rating are.....","d5e4dc5c":"Restrauent with high rating and high voting and expensive in terms of money","a07755af":"Restrauent with high rating and high voting and cheap in terms of money"}}