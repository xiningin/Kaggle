{"cell_type":{"8686ffbc":"code","5b28b773":"code","de940594":"code","e160e73c":"code","5d0a9299":"code","2f085254":"code","bdb72d70":"code","a1698595":"code","6e05ab2a":"code","9566f375":"code","56ed1bb1":"code","54bc42ff":"code","5987d376":"code","fd179233":"code","6270ba83":"code","dcbf86ac":"code","6ae71c5e":"code","854673fc":"code","d6dc84be":"code","f87f9b31":"markdown","f9422f3e":"markdown"},"source":{"8686ffbc":"\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# plotly\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","5b28b773":"df_2015=pd.read_csv('..\/input\/2015.csv')\ndf_2016=pd.read_csv('..\/input\/2016.csv')\ndf_2017=pd.read_csv('..\/input\/2017.csv')","de940594":"new0_df = ['country','region','happiness_rank','happiness_score','standard_error','economy','family','health','freedom','trust','genorasity','dystopia_residual']\ndf_2015.columns = new0_df\n\nnew1_df = ['country','region','happiness_rank','happiness_score','lower_confidence_interval','upper_confidence_interval','economy','family','health','freedom','trust','genorasity','dystopia_residual']\ndf_2016.columns = new1_df\n\nnew2_df = ['country','happiness_rank','happiness_score','whisker_high','whisker_low','economy','family','health','freedom','genorasity','trust','dystopia_residual']\ndf_2017.columns = new2_df","e160e73c":"df_2016.head(3)","5d0a9299":"df_2017.head(3)","2f085254":"df_2016.info()","bdb72d70":"\ndf = df_2016.iloc[:100,:]\n\ntrace1 = go.Scatter(\n                    x = df.happiness_rank,\n                    y = df.economy,\n                    mode = \"lines\",\n                    name = \"economy\",\n                    marker = dict(color = 'rgba(106, 11, 27, 0.8)'),\n                    text= df.country)\n# Creating trace2\ntrace2 = go.Scatter(\n                    x = df.happiness_rank,\n                    y = df.health,\n                    mode = \"lines+markers\",\n                    name = \"Health\",\n                    marker = dict(color = 'rgba(8, 206, 17, 0.8)'),\n                    text= df.country)\ntrace3 = go.Scatter(\n                    x = df.happiness_rank,\n                    y = df.freedom,\n                    mode = \"lines\",\n                    name = \"Freedom\",\n                    marker = dict(color = 'rgba(6, 11, 270, 0.8)'),\n                    text= df.country)\ndata = [trace1, trace2,trace3]\nlayout = dict(title = 'Freedom , Health and Economy vs World Ranking of the 100 Most Happy Countries',\n              xaxis= dict(title= 'World Rank',ticklen= 5,zeroline= False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","a1698595":"df2015 = df_2015.iloc[:100,:]\ndf2016 = df_2016.iloc[:100,:]\ndf2017 = df_2017.iloc[:100,:]\n\ntrace1 =go.Scatter(\n                    x = df2015.happiness_rank,\n                    y = df2015.freedom,\n                    mode = \"markers\",\n                    name = \"2015\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= df2015.country)\n\ntrace2 =go.Scatter(\n                    x = df2016.happiness_rank,\n                    y = df2016.freedom,\n                    mode = \"markers\",\n                    name = \"2016\",\n                    marker = dict(color = 'rgba(255, 128, 2, 0.8)'),\n                    text= df2015.country)\n\ntrace3 =go.Scatter(\n                    x = df2017.happiness_rank,\n                    y = df2017.freedom,\n                    mode = \"markers\",\n                    name = \"2017\",\n                    marker = dict(color = 'rgba(0, 255, 200, 0.8)'),\n                    text= df2016.country)\ndata = [trace1, trace2, trace3]\nlayout = dict(title = 'Freedom rates of the 100 most happy countries in 2015, 2016 and 2017',\n              xaxis= dict(title= 'Happiest Rank',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Freedom',ticklen= 5,zeroline= False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","6e05ab2a":"dat_2016 = df_2016.iloc[:3,:]\n\ntrace1 = go.Bar(\n                x = dat_2016.country,\n                y = df_2016.health,\n                name = \"Health\",\n                marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n                             line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = dat_2016.country)\n\ntrace2 = go.Bar(\n                x = dat_2016.country,\n                y = dat_2016.economy,\n                name = \"Economy\",\n                marker = dict(color = 'rgba(255, 255, 128, 0.5)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = dat_2016.country)\n\ntrace3 = go.Bar(\n                x = dat_2016.country,\n                y = dat_2016.freedom,\n                name = \"Freedom\",\n                marker = dict(color = 'rgba(25, 205, 102, 0.5)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = dat_2016.country)\n\ntrace4 = go.Bar(\n                x = dat_2016.country,\n                y = dat_2016.family,\n                name = \"Family\",\n                marker = dict(color = 'rgba(125, 5, 72, 0.5)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = dat_2016.country)\ndata = [trace1, trace2,trace3,trace4]\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","9566f375":"dat_2016 = df_2016.iloc[:3,:]\n\nx = dat_2016.country\n\ntrace1 = {\n  'x': x,\n  'y': dat_2016.health,\n  'name': 'Health',\n  'type': 'bar'\n};\ntrace2 = {\n  'x': x,\n  'y': dat_2016.freedom,\n  'name': 'Freedom',\n  'type': 'bar'\n};\ntrace3 = {\n  'x': x,\n  'y': dat_2016.economy,\n  'name': 'Economy',\n  'type': 'bar'\n};\ndata = [trace1, trace2,trace3];\nlayout = {\n  'xaxis': {'title': 'Top 3 Country'},\n  'barmode': 'relative',\n  'title': 'Health, freedom and economy ranking in the first 3 countries in 2016'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","56ed1bb1":"dat_2016 = df_2016.iloc[:7,:]\npie1 = dat_2016.freedom\nlabels = dat_2016.country\n\nfig = {\n  \"data\": [\n    {\n      \"values\": pie1,\n      \"labels\": labels,\n      \"domain\": {\"x\": [0, .8]},\n      \"name\": \"Number Of Freedom Rates\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .3,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"Country Number of freedom rates\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"Number of Freedom\",\n                \"x\": 0.20,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","54bc42ff":"dat_2016 = df_2016.iloc[:20,:]\ndata = [\n    {\n        'y': dat_2016.freedom,\n        'x': dat_2016.happiness_rank,\n        'mode': 'markers',\n        'marker': {\n            'color': dat_2016.health,\n            'size': dat_2016.happiness_score,\n            'showscale': True\n        },\n        \"text\" :  dat_2016.country    \n    }\n]\niplot(data)","5987d376":"dfk2015 = df_2015.iloc[:100,:]\ndfk2016 = df_2016.iloc[:100,:]\ndff2015 = dfk2015.freedom\ndff2016 = dfk2016.freedom\ntrace1 = go.Histogram(\n    x=dff2015,\n    opacity=0.75,\n    name = \"2015\",\n    marker=dict(color='rgba(171, 50, 36, 0.6)'),\n    text=dfk2015.country)\n    \ntrace2 = go.Histogram(\n    x=dff2016,\n    opacity=0.75,\n    name = \"2016\",\n    marker=dict(color='rgba(12, 50, 196, 0.6)'),\n    text=dfk2016.country)\n\ndata = [trace1, trace2]\n\nlayout = go.Layout(barmode='overlay',\n                  \n                   title=' Freedom ratio in 2011 and 2012',\n                   xaxis=dict(title='freedom-staff ratio'),\n                   yaxis=dict( title='Count'),\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","fd179233":"dfk2016 = df_2016.iloc[:100,:]\ndff2016 = dfk2016.region\n\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=512,\n                          height=384\n                         ).generate(\" \".join(dff2016))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","6270ba83":"trace0 = go.Box(\n    y=df_2016.economy,\n    name = 'contribution margin of economy in 2016',\n    marker = dict(\n        color = 'rgb(12, 12, 140)',\n    )\n)\ntrace1 = go.Box(\n    y=df_2016.health,\n    name = 'contribution margin of health in 2016',\n    marker = dict(\n        color = 'rgb(12, 128, 128)',\n    )\n)\n\ntrace2 = go.Box(\n    y=df_2016.freedom,\n    name = 'contribution margin of freedom in 2016',\n    marker = dict(\n        color = 'rgb(102, 120, 140)',\n    )\n)\n\ndata = [trace0, trace1, trace2]\niplot(data)","dcbf86ac":"\ndfk_2016 = df_2016.loc[:,[\"economy\",\"health\", \"happiness_rank\"]]\ndfk_2016[\"index\"] = np.arange(1,len(dfk_2016)+1)\n\nfig = ff.create_scatterplotmatrix(dfk_2016, diag='box', index='index',colormap='Portland',\n                                  colormap_type='cat', text=df_2016.country,\n                                  height=700, width=700)\niplot(fig)","6ae71c5e":"trace1 = go.Scatter(\n    x=df_2016.happiness_rank,\n    y=df_2016.freedom,\n    name = \"freedom\",\n    mode= \"lines+markers\",\n    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n    text=df_2016.country\n)\n\ntrace2 = go.Scatter(\n    x=df_2016.happiness_rank,\n    y=df_2016.trust,\n    xaxis='x2',\n    yaxis='y2',\n    name = \"trust\",\n    marker = dict(color = 'rgba(160, 112, 20, 0.8)'),\n    text=df_2016.country\n)\ndata = [trace1, trace2]\nlayout = go.Layout(\n    xaxis2=dict(\n        domain=[0.6, 0.95],\n        anchor='y2',        \n    ),\n    yaxis2=dict(\n        domain=[0.6, 0.95],\n        anchor='x2',\n    ),\n    title = 'Trust and freedom in world countries'\n\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","854673fc":"trace1 = go.Scatter3d(\n    x=df_2016.happiness_rank,\n    y=df_2016.economy,\n    z=df_2016.health,\n    text=df_2016.country,\n    mode='markers',\n    marker=dict(\n        size=10,\n        color='rgb(200,0,50)',                    \n    )\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=5,\n        r=5,\n        b=5,\n        t=5  \n    )\n    \n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","d6dc84be":"trace1 = go.Scatter(\n    x=df_2016.happiness_rank,\n    y=df_2016.freedom,\n    name = \"freedom\",\n    text=df_2016.country\n)\ntrace2 = go.Scatter(\n    x=df_2016.happiness_rank,\n    y=df_2016.trust,\n    xaxis='x2',\n    yaxis='y2',\n    name = \"trust\",\n    text=df_2016.country\n)\ntrace3 = go.Scatter(\n    x=df_2016.happiness_rank,\n    y=df_2016.health,\n    xaxis='x3',\n    yaxis='y3',\n    name = \"health\",\n    text=df_2016.country\n)\ntrace4 = go.Scatter(\n    x=df_2016.happiness_rank,\n    y=df_2016.economy,\n    xaxis='x4',\n    yaxis='y4',\n    name = \"economy\",\n    text=df_2016.country\n)\ndata = [trace1, trace2, trace3, trace4]\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0, 0.45]\n    ),\n    yaxis=dict(\n        domain=[0, 0.45]\n    ),\n    xaxis2=dict(\n        domain=[0.55, 1]\n    ),\n    xaxis3=dict(\n        domain=[0, 0.45],\n        anchor='y3'\n    ),\n    xaxis4=dict(\n        domain=[0.55, 1],\n        anchor='y4'\n    ),\n    yaxis2=dict(\n        domain=[0, 0.45],\n        anchor='x2'\n    ),\n    yaxis3=dict(\n        domain=[0.55, 1]\n    ),\n    yaxis4=dict(\n        domain=[0.55, 1],\n        anchor='x4'\n    ),\n    title = 'World Ranking of the countries with the highest score for health, trust, freedom and economy'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","f87f9b31":"**Please** contribute to my development by criticizing me.","f9422f3e":"**World Happiness Report With Plotly**\n\nData were interpreted by visualizing the values contributing to the world happiness ranking. I am trying to improve myself in this field and I am quite new in this field. Your suggestions and advice will make me very happy. I would like to thank **Kaan Can**, my trainer who helped me to learn this valuable information."}}