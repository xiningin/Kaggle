{"cell_type":{"6e450804":"code","c40306f5":"code","676285dc":"code","131891af":"code","a5309481":"code","57db4de6":"code","99a7b4ed":"code","8faeb89a":"code","8f2c5a56":"code","ecefba8c":"code","8ca1213d":"code","109a4315":"code","0420fd74":"code","66a07647":"code","f53404c1":"code","55753b4e":"code","b335e7be":"code","985bea23":"code","af87f394":"code","e3d10ee1":"code","c2f22c4a":"code","8e4a1d3b":"code","98a81c6e":"code","aeff4be3":"code","826e9bec":"code","0f0cff67":"code","c8de6ba4":"code","351387b6":"code","530c55ad":"code","5c528c0a":"code","982500c4":"code","b4ad82d7":"code","44b83ac8":"code","3fdfac49":"code","170a6ca2":"code","2abdc81f":"code","c6cf6635":"code","25f9ab40":"code","bd43deaa":"code","63072db2":"code","8a157c41":"code","5b5a9604":"code","1c276156":"code","ccc7300a":"code","3b17cb69":"code","cd8618ac":"code","eeabf4cf":"markdown","efa0cf05":"markdown","6f813e06":"markdown","4e960a68":"markdown","72dec8a8":"markdown","54b8c6e8":"markdown","f477fc9f":"markdown","fc6fef90":"markdown","c0360d75":"markdown","9d106661":"markdown","832caf57":"markdown"},"source":{"6e450804":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c40306f5":"!pip install python-googlegeocoder","676285dc":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom googlegeocoder import GoogleGeocoder\nfrom bokeh.plotting import figure, save\nimport plotly.graph_objects as go\nimport sklearn\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplt.style.use('ggplot')\npd.plotting.register_matplotlib_converters()","131891af":"train_df=pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-2\/train.csv')\ntest_df=pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-2\/test.csv')\nall_data=pd.concat([train_df,test_df],axis=0)\nall_data.reset_index(drop=True)","a5309481":"train_df.head()","57db4de6":"train_df.info()\n","99a7b4ed":"train_df['Country_Region'].nunique()","8faeb89a":"print(\"fill blanks and add region for counting\")\n\ntrain_df.drop('Province_State',axis=1,inplace=True)","8f2c5a56":"# Resetting Date column into Datetime object and making it an index of dataframe\ntrain_df['Date']=pd.to_datetime(train_df['Date'])\ntrain_df.set_index('Date',inplace=True)","ecefba8c":"pivot=pd.pivot_table(train_df,columns='Country_Region',index='Date',values='ConfirmedCases',aggfunc=np.sum)\npivot_fatality=pd.pivot_table(train_df,columns='Country_Region',index='Date',values='Fatalities',aggfunc=np.sum)\ncountry_list=[]\nvalue_list=[]\nfatality_list=[]\nfor country in list(pivot.columns):\n    country_list.append(country)\n    value_list.append(pivot[country].max())\n    fatality_list.append(pivot_fatality[country].max())\n    new_dict={'Country':country_list,'Confirmed':value_list,'Fatality':fatality_list}\ndf=pd.DataFrame.from_dict(new_dict)\ndf.set_index('Country',inplace=True)\n\nplt.figure(figsize=(12,8))\nplt.subplot(2,1,1)\ndf['Confirmed'].sort_values(ascending=False)[:10].plot(kind='bar',color='blue')\nplt.title('Top 10 Countries by Confirmed Cases')\nplt.subplot(2,1,2)\ndf['Fatality'].sort_values(ascending=False)[:10].plot(kind='bar',color='red')\nplt.title('Top 10 Countries with Fatalities due to Covid-19')\nplt.tight_layout()","8ca1213d":"top_confirmed=df.sort_values(by='Confirmed',ascending=False)[:10]","109a4315":"# Make List of Top 10 Countries and India and Netherlands- The Countries of interest.\nlist_countries=list(top_confirmed.index)\nlist_countries.append('India')\nlist_countries.append('Netherlands')","0420fd74":"times_series_cntr = train_df.groupby(['Date','Country_Region'])['ConfirmedCases'].sum()\\\n                    .reset_index().set_index('Date')\ndf_countries_tm = times_series_cntr[times_series_cntr['Country_Region'].isin(list_countries)]\n\n\nplt.figure(figsize=(16,12))\nax = sns.lineplot(x=df_countries_tm.index, y=\"ConfirmedCases\", hue=\"Country_Region\", data=df_countries_tm,palette='muted').set_title('Cumulative line')\nplt.legend(loc=2, prop={'size': 12})\nplt.title('Cumulative trend plot for Confirmed Cases')\nplt.xticks(rotation=90);","66a07647":"Confirm_pivot=pd.pivot_table(train_df,index='Date',columns='Country_Region',\n                             values='ConfirmedCases',aggfunc=np.sum)","f53404c1":"plt.figure(figsize=(16,8))\ncolors=['r','b','g','y','orange','purple','m','hotpink','violet','darkgreen','navy','brown']\nfor i,country in enumerate(list_countries):\n    Confirm=Confirm_pivot[Confirm_pivot[country]>0][country].diff().fillna(0)\n    Confirm=Confirm[Confirm>0]\n    Confirm.plot(color=colors[i],label=country,markersize=12,lw=5)    \n    plt.title('Number of Daily Cases',fontsize=15)\n    plt.legend(title='country')\nplt.tight_layout()","55753b4e":"plt.figure(figsize=(20,16))\ncolors=['r','b','g','y','orange','purple','m','hotpink','violet','darkgreen','navy','brown']\nfor i,country in enumerate(list_countries):\n    Confirm=Confirm_pivot[Confirm_pivot[country]>0][country].diff().fillna(0)\n    Confirm=Confirm[Confirm>0]\n    \n    plt.subplot(4,3,i+1)\n    Confirm.plot(color=colors[i],label=country,markersize=12,lw=5)    \n    plt.xticks()\n    plt.legend(title='Country')\n    plt.title('Number of Daily Cases in {}'.format(country.upper()))\nplt.tight_layout()","b335e7be":"for country in list_countries:\n    id_max=Confirm_pivot[country].diff().fillna(0).idxmax()\n    maxim=Confirm_pivot[country].diff().fillna(0).max()\n    print('Maximum New Cases registered for {0} was {1} on {2}'.format(country,maxim,id_max))","985bea23":"Fatal_pivot=pd.pivot_table(train_df,index='Date',columns='Country_Region',values='Fatalities',aggfunc=np.sum)","af87f394":"plt.figure(figsize=(16,8))\nfor i,country in enumerate(list_countries):\n    Fatal_diff=Fatal_pivot[(Fatal_pivot[country]>0)][country].diff().fillna(0)\n    Fatal_diff=Fatal_diff[Fatal_diff>0]\n    Fatal_diff.plot(color=colors[i],label=country,lw=5)\n    plt.title('Number of daily new Fatalities',fontsize=15)\n    plt.legend(title='country')\nplt.tight_layout()","e3d10ee1":"plt.figure(figsize=(20,16))\nfor i,country in enumerate(list_countries):\n    Fatal_diff=Fatal_pivot[(Fatal_pivot[country]>0)][country].diff().fillna(0)\n    Fatal_diff=Fatal_diff[Fatal_diff>0]\n    plt.subplot(3,4,i+1)\n    Fatal_diff.plot(color=colors[i],label=country.upper(),lw=5)\n    plt.xticks(rotation=60)\n    plt.title('Number of daily new Fatalities  in {}'.format(country.upper()))\n    plt.legend(title='Country')\nplt.tight_layout()\n","c2f22c4a":"# Understanding New cases confirmation variations on daily basis\nplt.figure(figsize=(20,16))\nfor i,country in enumerate(list_countries):\n    plt.subplot(4,3,i+1)\n    train_df[(train_df['Country_Region']==country)&(train_df['ConfirmedCases']!=0)].groupby('Date')['ConfirmedCases'].sum().diff().diff().plot(color=colors[i])\n    plt.ylabel('Difference in Daily reporting cases ')\n    plt.title('Variation of {}'.format(country),va='bottom')\nplt.suptitle('Variation in number of confirmed cases on daily basis',fontsize=24,va='baseline')","8e4a1d3b":"plt.figure(figsize=(16,8))\nplt.title('Confirmed Cases trend from first day of incidence')\nfor i,country in enumerate(list_countries):\n    confirm_group=train_df[(train_df['Country_Region']==country)&train_df['ConfirmedCases']!=0].groupby('Date').agg({'ConfirmedCases':['sum']})\n    confirm_value=[j for j in confirm_group.ConfirmedCases['sum'].values]\n    plot_value=confirm_value[0:60]\n    plt.plot(plot_value,color=colors[i],label=country,lw=2)\n    plt.legend(title='Countries')","98a81c6e":"plt.figure(figsize=(16,10))\nplt.title('Fatalities trend from first day of incidence')\nfor i,country in enumerate(list_countries):\n    fatal_group=train_df[(train_df['Country_Region']==country)&train_df['ConfirmedCases']!=0].groupby('Date').agg({'Fatalities':['sum']})\n    fatal_value=[j for j in fatal_group.Fatalities['sum'].values]\n    plot_value=fatal_value[0:60]\n    plt.plot(plot_value,color=colors[i],label=country,lw=2)\n    plt.legend(title='Countries')","aeff4be3":"plt.figure(figsize=(16,8))\nplt.subplot(1,2,1)\ntrain_df.groupby('Date')['ConfirmedCases'].sum().plot(color='blue')\nplt.ylabel('Number of Confirmed Cases')\nplt.title('Confirmed Cases worldwide trend')\n\nplt.subplot(1,2,2)\ntrain_df.groupby('Date')['Fatalities'].sum().plot(color='r')\nplt.ylabel('Number of Fatalities')\nplt.title(\"Fatalities worldwide trend\")\n\nplt.tight_layout()","826e9bec":"# Confirmed Cases and Fatalities without China's data\nplt.figure(figsize=(16,8))\nplt.subplot(1,2,1)\ntrain_df[(train_df['Country_Region']!='China')&(train_df['ConfirmedCases']!=0)].groupby('Date')['ConfirmedCases'].sum().plot(color='blue')\nplt.ylabel('Number of Confirmed Cases')\nplt.title('Confirmed Cases worldwide trend(without China)')\n\nplt.subplot(1,2,2)\ntrain_df[(train_df['Country_Region']!='China')&(train_df['Fatalities']!=0)].groupby('Date')['Fatalities'].sum().plot(color='red')\nplt.ylabel('Number of Fatalities')\nplt.title(\"Fatalities worldwide trend(without China)\")\nplt.tight_layout()\n","0f0cff67":"countries=train_df['Country_Region'].unique()","c8de6ba4":"country_list=[]\nconfirmation_list=[]\nlist_fatality=[]\nfor country in countries:\n    country_list.append(country)\n    confirm_country=train_df[train_df.Country_Region==country].groupby('Date')['ConfirmedCases'].sum().max()\n    confirmation_list.append(confirm_country)\n    fatal_country=train_df[train_df.Country_Region==country].groupby('Date')['Fatalities'].sum().max()\n    list_fatality.append(fatal_country)\nmax_dict={'Country':country_list,'ConfirmedCases':confirmation_list,'Fatalities':list_fatality}\nmap_df=pd.DataFrame.from_dict(max_dict)","351387b6":"map_df","530c55ad":"code_df=pd.read_csv('..\/input\/countrycodes\/country-codes.csv')","5c528c0a":"code_df=code_df[['ISO3166-1-Alpha-3','CLDR display name']]","982500c4":"map_df=map_df.merge(code_df,left_on='Country',right_on='CLDR display name')","b4ad82d7":"map_df.drop('CLDR display name',axis=1,inplace=True)","44b83ac8":"map_df.rename(columns={'ISO3166-1-Alpha-3':'Country Code'},inplace=True)","3fdfac49":"\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\ninit_notebook_mode(connected=True)\n\ndata=go.Choropleth(\n    locations=map_df['Country Code'], # Spatial coordinates\n    z = map_df['ConfirmedCases'], # Data to be color-coded,\n    colorscale = 'Reds',\n    text=map_df['Country'],\n    colorbar_title = \"Number of Confirmed Cases\",)\n\nfig=go.Figure(data)\n\nfig.update_layout(\n    title='Covid-19 Confirmed Cases',\n           geo=dict(showframe=False,\n                   projection={'type':'robinson'}))\n\n\niplot(fig)","170a6ca2":"test_df['Date']=pd.to_datetime(test_df['Date'])","2abdc81f":"test_df['Province_State']=test_df.drop('Province_State',axis=1)","c6cf6635":"train_df=train_df.reset_index()","25f9ab40":"from sklearn.preprocessing import LabelEncoder\nLE=LabelEncoder()\ntrain_df['Country_Region']=LE.fit_transform(train_df['Country_Region'])\ntest_df['Country_Region']=LE.transform(test_df['Country_Region'])\n\ntrain_df.loc[:, 'Date'] = train_df.Date.dt.strftime(\"%m%d\")\ntrain_df[\"Date\"]  = train_df[\"Date\"].astype(int)\n\ntest_df.loc[:, 'Date'] = test_df.Date.dt.strftime(\"%m%d\")\ntest_df[\"Date\"]  = test_df[\"Date\"].astype(int)","bd43deaa":"#Select feature column names and target variable we are going to use for training\nfeatures=['Date','Country_Region']\ntarget = 'ConfirmedCases'\n\n#This is input which our classifier will use as an input.\ntrain_df[features].head(10)","63072db2":"from sklearn.ensemble import RandomForestClassifier\n\n# We define the model\nrfcla = RandomForestClassifier(n_estimators=100, max_samples=0.8,\n                        random_state=1)\n# We train model\nrfcla.fit(train_df[features],train_df[target])","8a157c41":"#Make predictions using the features from the test data set\npredictions = rfcla.predict(test_df[features])\n\npredictions","5b5a9604":"target2='Fatalities'","1c276156":"# We define the model\nrfcla2 = RandomForestClassifier(n_estimators=100, max_samples=0.8,\n                        random_state=1)\n# We train model\nrfcla2.fit(train_df[features],train_df[target2])","ccc7300a":"#Make predictions using the features from the test data set\npredictions2 = rfcla2.predict(test_df[features])\n\nprint(predictions2[0:50])","3b17cb69":"#Create a  DataFrame\nsubmission = pd.DataFrame({'ForecastId':test_df['ForecastId'],'ConfirmedCases':predictions,'Fatalities':predictions2})\n                        \n\n#Visualize the first 10 rows\nsubmission.head(10)","cd8618ac":"#Convert DataFrame to a csv file that can be uploaded\n#This is saved in the same directory as your notebook\nfilename = 'submission.csv'\n\nsubmission.to_csv(filename,index=False)\n\nprint('Saved file: ' + filename)","eeabf4cf":"# Confirmed Cases","efa0cf05":"# Feature Transformation","6f813e06":"# Geographical Representation of Cases","4e960a68":"# Fatalities","72dec8a8":"*Observation*:\n\n1. China is the major sufferer and has been prime victime of Covid-19,and has first confirmed case in December. Since this dataset has data from 22 January onwards, number of confirmed cases by then reached was 533. *Italy on the other hand confirmed its first 2 cases on 31 January 2020- a month later than China and it took nearly 26 days from that day to reach incidence of 453 Confirmed Cases. Since, number of confirmed cases has increased by nearly 21% on day to day basis.\n\n2. On the other hand, USA has quite early confirmation of first report of CoronaVirus which was probably from a traveller from China to USA in early January. By 24th February, US had 36 cases and reached 400+ cases by 12 March. Since, then number of confirmed cases rose significantly in US. The number of confirmed cases in US is increasing by average of 50% every day.\n\n3. Netherlands has a very different trajectory. Netherland has its first confirmed case of 27 February 2020. This date is very very late as compared to earlier confirmation period from US and Italy. However, it took just 12 days for US to cross 500 confirmed cases. This is major loophole indication in Netherland surveillance system. Number of Confirmed cases in Netherlands is also increasing by average of 20%.\n\n4. India on the other hand, detected its forst case on 30 January 2020 which is quite close to first confirmed case detection in Italy. However, its 500th case confirmed on 24 March 2020. There might be various reasons for this which is unconfirmed but are probably:\n                         * Less number of tests\n                         * Poor surveillance and detection\n                         * Less number of arrival from infected persons\n                         * Better control mechanism\n                         \n5. Overall exponential curve is visible with or without china's data. China's new confirmed cases has been low which according to its state agencies and WHO is because of strict enforcement of social distancing. But, number of cases are increasing cumulatively around the globe exponentially.\n\n6. Though, there is a huge variation in Rate of increase in number of new cases reporting on daily basis. The stark contrast comes in term of China which reported highest number of new cases reporting i.e. 15079 on 13 February 2020 and suddenly new cases reporting decreased to 6415 on 14 February 2020. Since, the number of case increase was on average was 40%. Sudden decrease of new case reporting since then by 57% is a strange phenomenon. It might be because of floowing hypothesis according to my understanding:\n\n                         * Citywide lockdown imposed in Wuhan on 22 January started showing its impact                                    and China succeedeed in containing Virus. This has an assumption that   \n                            spread before from virus was not contious and China tracked every infected \n                            patient.\n                         * China has stopped reporting actual infected numbers. Real time tracking was \n                           curbed.\n\n7. Comparing graph of confirmed cases shows a similar picture with average of 20% increase in new patients daily, as compared to US which showed sudden increase.","54b8c6e8":"Out of 173 countries data, we have only 8 countries who has given Province wise data for Corona confirmed and fatalities. Hence, alot of this missing data would not be good for our dataset, and hence we will drop this column.","f477fc9f":"So, according to this dataset, we are analyzing 173 countries which are affected by Corona.","fc6fef90":"*Note*: My Analysis is limited to 12 Countries of interest for better understanding the spread while I will try to extend this to other countries and make Predictions of Confirmed Cases and Fatalities.","c0360d75":"# Submission","9d106661":"# Exploratory Data Analysis\nQs1. Which countries has high number of cases?\n\nQs2. How is confirmed cases increases by day?\n\nQs3. What is fatality rate of confirmed cases?\n\nQs4. How is cases increasing by day of 1st reported case?\n\nQs5. Understanding data of India and comparing it with the world?\n\nQs6. What is new rate of increase per case per day?","832caf57":"1. We can see that China has stabilized its new case reporting while all other countries are showing increase in trend.\n2. There is huge variance in dates from when there has been sudden increase in cases.\n3. In case of South Korea, their data indicates that , they realized and understood the pattern quite soon enough, and been able to cap increasing trend.\n4. India has very low number of confirmed reports till 22 March 2020.\n"}}