{"cell_type":{"5a3960a0":"code","e1bfb2a8":"code","8d63649f":"code","7f44f079":"code","0c7c80cb":"code","02c0a0af":"code","f68d173e":"code","710475c7":"code","fe84cf24":"code","d3ce5d25":"code","92ba0870":"code","091aff73":"code","01250525":"code","1b13fc38":"code","7596fc9a":"code","a1429019":"code","9b0149b6":"code","44d058b4":"code","7a9cca77":"code","a0af685e":"code","80aa24f3":"code","fc3e674d":"code","896cd90c":"code","3ab06bf7":"code","dae29a62":"code","0f9c83cb":"code","ce8ee57d":"code","e3878943":"code","ac569f4d":"code","07b3be20":"code","a92b9bea":"code","2dd1760e":"code","4bc9fd20":"code","e9c081be":"code","1d872303":"code","3730db78":"code","575e9338":"markdown","b3b083f7":"markdown","6da8910d":"markdown","21f47e1c":"markdown","74fa75fb":"markdown","c882efca":"markdown"},"source":{"5a3960a0":"!pip uninstall -y kaggle\n!pip install upgrade pip\n!pip install kaggle==1.5.6","e1bfb2a8":"!mkdir -p ~\/.kaggle\n!cp kaggle.json ~\/.kaggle\n!chmod 600 ~\/.kaggle\/kaggle.json","8d63649f":"import pandas as pd\nimport numpy as np","7f44f079":"data=pd.read_excel('\/content\/train.xlsx')\ndata","0c7c80cb":"data=np.array(data)\ndata=data[1:,]","02c0a0af":"data.shape","f68d173e":"scale=data[:,2]","710475c7":"lat=[]\nfor i in range(1019):\n  try:\n    lat.append(float(data[:,4][i][:5]))\n  except:\n    lat.append(float(0))","fe84cf24":"log=[]\nfor i in range(1019):\n  try:\n    log.append(float(data[:,5][i][:5]))\n  except:\n    log.append(float(0))","d3ce5d25":"import matplotlib.pyplot as plt\n\nplt.scatter(log,lat)\n\nplt.xlim([122,132])\nplt.ylim([32,43])\nplt.show()","92ba0870":"s=[]\nfor i in range(1019):\n  if(lat[i]>=34.5 and lat[i]<=40 and log[i]>=124.5 and log[i]<=130):\n    s.append(scale[i])","091aff73":"len(s)\ns=np.array(s)","01250525":"cnt=[]\nfor i in range(26):\n  cnt.append([(25+i),0])","1b13fc38":"\nfor i in range(26):\n  k=s>=(2.5+i*0.1)\n  cnt[i][1]=k.sum()","7596fc9a":"cnt","a1429019":"x=[]\ny=[]\nfor i in range(26):\n  x.append(2.5+0.1*i)\n  y.append(cnt[i][1])\nX=np.array(x)\nY=np.array(y)","9b0149b6":"X.shape","44d058b4":"Y.shape","7a9cca77":"import torch\nimport torch.nn.functional as F\nimport torch.optim as optim","a0af685e":"X=torch.FloatTensor(X)\nY=torch.FloatTensor(Y)","80aa24f3":"nb_epochs=3800\na=torch.ones(1,requires_grad=True)\nb=torch.ones(1,requires_grad=True)\noptimizer=optim.Adam([a,b],lr=0.001,betas=(0, 0))\nfor epoch in range(nb_epochs):\n  h=10**(a-b*X)\n  \n  \n  cost=torch.mean((h-Y)**2)\n\n  optimizer.zero_grad()\n  cost.backward()\n  optimizer.step()\n\n  if epoch%100==0:\n    print(epoch ,cost)","fc3e674d":"Y","896cd90c":"h","3ab06bf7":"print(a,b)","dae29a62":"ans=[]\nfor i in range(20):\n  ans.append([i,0])\nt=[2.0,2.1,2.2,2.3,2.4]\nt=np.array(t)\nt=torch.FloatTensor(t)\n\nans=10**(a-b*t)","0f9c83cb":"ans","ce8ee57d":"ar=[]\nfor i in range(5):\n  ar.append(int(ans[i]))\nar=np.array(ar)","e3878943":"ar","ac569f4d":"truth=pd.read_csv('\/content\/solution_final.csv')\ntruth","07b3be20":"sol=pd.DataFrame(ar)","a92b9bea":"sol=pd.DataFrame({\"id\":[0,1,2,3,4],\"expected\":ar})","2dd1760e":"sol","4bc9fd20":"sol.to_csv(\"baseline.csv\",header=True,index=False)","e9c081be":"!kaggle competitions submit -c sejongaiclasspredicteq -f baseline.csv -m \"Message\"","1d872303":"a","3730db78":"b","575e9338":"# \ub370\uc774\ud130 \uc704\ub3c4 \uacbd\ub3c4 \uc815\ubcf4 \ubd84\uc11d","b3b083f7":"# \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ub85c\ub4dc \ubc0f \uc81c\ucd9c\n","6da8910d":"# \ub370\uc774\ud130 \ud559\uc2b5 \uacfc\uc815","21f47e1c":"# x,y \uad6c\ucd95","74fa75fb":"# \ub370\uc774\ud130 \uc804\ucc98\ub9ac","c882efca":"# \ub370\uc774\ud130 \uc120\ubcc4"}}