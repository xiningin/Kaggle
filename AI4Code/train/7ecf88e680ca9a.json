{"cell_type":{"a9c8b6ed":"code","9aae7b94":"code","3bc295d4":"code","916b76d3":"code","984f9dbf":"code","428f3937":"code","068b5263":"code","125472fa":"code","3f899d0e":"code","6e5876ec":"code","745a93cc":"code","92bf9276":"code","010522d7":"code","80deed94":"code","5bdcd832":"code","f6893c2a":"code","7489630e":"code","3081ab5c":"code","3b89bde8":"code","e958af1d":"code","d2f7f359":"code","ea07e704":"code","2786547c":"code","58785783":"code","ea145a2b":"code","dbc9015a":"code","bcc7a807":"code","c783b293":"code","77705c00":"code","896f22de":"code","af2afc3a":"code","8a5d5cb4":"code","6029d560":"code","2a89442e":"code","f096e125":"code","cb80d490":"code","a2ea9f7b":"code","c8f02e53":"code","54d7b30b":"code","a1c56a33":"code","3fb8a12b":"code","ef4c3a19":"code","2b31b7a8":"code","edba9c90":"code","ecbfa598":"code","f8a2c759":"code","87e4923a":"code","675efc92":"code","9d54dd4b":"code","25dd7326":"code","85c1b8a8":"code","bc08621d":"code","70f01b4f":"code","1a3ba77b":"code","03c761ac":"code","63f660b2":"code","e59e46a0":"code","ef51a412":"code","2ddd4a0a":"code","3370d1a6":"code","5f4658cb":"code","039a87e6":"code","f253366a":"code","55bccf04":"code","7533cad6":"markdown","8a5e3d6b":"markdown","9880acad":"markdown","ee84f601":"markdown","5c29668e":"markdown","23d49f9b":"markdown","ccd3cc14":"markdown","719f3d27":"markdown","a19828ce":"markdown"},"source":{"a9c8b6ed":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n","9aae7b94":"house = pd.read_csv('..\/input\/californiya-housing\/Housing_californiya.csv')\nhouse.head(3)","3bc295d4":"house.info()","916b76d3":"house.describe()","984f9dbf":"house.shape","428f3937":"#Discover and visualize the data to gain insights\nhouse.hist(bins=50, figsize=(9,9))\n","068b5263":"house1=house.copy()","125472fa":"#Visualizing Geographical Data\n#We had geographical information (latitude and longitude) for a district. So lets plot all the districts\n#and visualize the data.\nhouse1.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\")","3f899d0e":"house1.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\", alpha=0.4,\n    s=house[\"population\"]\/100, label=\"population\", figsize=(10,7),\n    c=\"median_house_value\",colormap='plasma', colorbar=True,\n    sharex=False)\n#Housing prices are very much related to the location and to the population density find by this graph.","6e5876ec":"corr_matrix=house1.corr()\ncorr_matrix\n#Median house values tends to go up when the median income goes up. (0.68)-find.","745a93cc":"house1.plot(kind=\"scatter\", x=\"median_income\", y=\"median_house_value\",\n             alpha=0.1)\n#here line show that there are problem in data collection.","92bf9276":"house1[\"rooms_per_household\"] = house1[\"total_rooms\"]\/house1[\"households\"]\nhouse1[\"bedrooms_per_room\"] = house1[\"total_bedrooms\"]\/house1[\"total_rooms\"]\nhouse1[\"population_per_household\"]=house1[\"population\"]\/house1[\"households\"]","010522d7":"house1.shape","80deed94":"house1.corr()","5bdcd832":"housing_features = house1.drop('median_house_value', axis = 1)\nprint(housing_features.columns)\nhousing_features.head()","f6893c2a":"housing_target = house1['median_house_value']\nhousing_target.shape","7489630e":"x=housing_features\ny=housing_target","3081ab5c":"x.isnull().sum()","3b89bde8":"# housing1.dropna()                                                                 # method 1\n# housing1.drop(\"total_bedrooms\", axis = 1)                                         # method 2\n# housing1['total_bedrooms'].fillna(housing1['total_bedrooms'].median(), inplace = True)   # method 3\n# scikit learn provides a handy class to take care of missing values: SimpleImputer\nfrom sklearn.impute import SimpleImputer\nimputer = SimpleImputer(strategy=\"median\")","e958af1d":"housing_num = x.drop(\"ocean_proximity\", axis=1)\nhousing_num.columns","d2f7f359":"imputer.fit(housing_num)","ea07e704":"imputer.statistics_","2786547c":"transformed_values = imputer.transform(housing_num)\ntransformed_values","58785783":"housing_transformed = pd.DataFrame(transformed_values)\nhousing_transformed.head()","ea145a2b":"housing_transformed.columns = ['longitude', 'latitude', 'housing_median_age', 'total_rooms',\n       'total_bedrooms', 'population', 'households', 'median_income',\n       'rooms_per_household', 'bedrooms_per_room', 'population_per_household']\nhousing_transformed.head()","dbc9015a":"housing_transformed.isnull().sum()","bcc7a807":"from sklearn.preprocessing import OneHotEncoder\ncat_encoder = OneHotEncoder()","c783b293":"housing_cat = house[['ocean_proximity']]","77705c00":"dummy_values=cat_encoder.fit_transform(housing_cat)\ndummy_values","896f22de":"dummy_values.toarray()","af2afc3a":"cat_encoder.categories_","8a5d5cb4":"housing_cat = pd.DataFrame(dummy_values.toarray())\nhousing_cat.head()","6029d560":"housing_cat.columns = ['<1H OCEAN', 'INLAND', 'ISLAND', 'NEAR BAY', 'NEAR OCEAN']\nhousing_cat.head()","2a89442e":"from sklearn.preprocessing import StandardScaler\nstd_scaler = StandardScaler()","f096e125":"std_scaler.fit(housing_num)","cb80d490":"housing_num.describe()","a2ea9f7b":"scaled_values=std_scaler.transform(housing_num)","c8f02e53":"housing_scaled = pd.DataFrame(scaled_values)","54d7b30b":"housing_scaled.columns = ['longitude', 'latitude', 'housing_median_age', 'total_rooms',\n       'total_bedrooms', 'population', 'households', 'median_income',\n       'rooms_per_household', 'bedrooms_per_room', 'population_per_household']","a1c56a33":"housing_scaled.describe()","3fb8a12b":"from sklearn.pipeline import Pipeline\nnum_pipeline = Pipeline([\n('imputer', SimpleImputer(strategy=\"median\")),\n('std_scaler', StandardScaler()),\n])\nhousing_num_tr = num_pipeline.fit_transform(housing_num)","ef4c3a19":"housing_num_tr","2b31b7a8":"housing_pipeline = pd.DataFrame(housing_num_tr)","edba9c90":"housing_pipeline.columns = ['longitude', 'latitude', 'housing_median_age', 'total_rooms',\n       'total_bedrooms', 'population', 'households', 'median_income',\n       'rooms_per_household', 'bedrooms_per_room', 'population_per_household']","ecbfa598":"housing_pipeline.head()","f8a2c759":"from sklearn.compose import ColumnTransformer","87e4923a":"num_attribs = list(housing_num)\nprint(num_attribs)\ncat_attribs = [\"ocean_proximity\"]\nprint(cat_attribs)","675efc92":"housing_features.columns","9d54dd4b":"full_pipeline = ColumnTransformer([\n(\"num\", num_pipeline, num_attribs),\n(\"cat\", OneHotEncoder(), cat_attribs),\n])\nhousing_prepared = full_pipeline.fit_transform(housing_features)","25dd7326":"housing_prepared = pd.DataFrame(housing_prepared)\nhousing_prepared.shape","85c1b8a8":"housing_prepared.head()","bc08621d":"housing_prepared.columns = ['longitude', 'latitude', 'housing_median_age', 'total_rooms',\n       'total_bedrooms', 'population', 'households', 'median_income','rooms_per_household', 'bedrooms_per_room',\n       'population_per_household','<1H OCEAN', 'INLAND', 'ISLAND', 'NEAR BAY', 'NEAR OCEAN']","70f01b4f":"from sklearn.model_selection import train_test_split","1a3ba77b":"X_train, X_test, y_train,y_test = train_test_split(housing_prepared,house['median_house_value'], test_size=0.2, random_state=42)\nX_train.shape, X_test.shape,y_train.shape, y_test.shape","03c761ac":"from sklearn.linear_model import LinearRegression\nmodel_reg = LinearRegression()","63f660b2":"model_reg.fit(X_train, y_train)","e59e46a0":"model_reg.score(X_train, y_train)","ef51a412":"y_pred_train = model_reg.predict(X_train)\ny_pred_train","2ddd4a0a":"from sklearn.metrics import mean_squared_error","3370d1a6":"lin_rmse = np.sqrt(mean_squared_error(y_train, y_pred_train))\nlin_rmse","5f4658cb":"y_pred_test = model_reg.predict(X_test)","039a87e6":"SSE = np.sum((y_pred_test-y_test)**2)\nSSE","f253366a":"SST = np.sum((y_test-np.mean(y_train))**2)","55bccf04":"r_square= 1 - SSE\/SST\nr_square","7533cad6":"check with test data","8a5e3d6b":"4. Transformations Pipeline","9880acad":" ****Attributes Combinations****","ee84f601":"Select a model and train it","5c29668e":"2. Handling Text and Categorical attribute","23d49f9b":"Create a train_Test spliting","ccd3cc14":"ColumnTransformer : to apply all the transformation together on the housing dataset","719f3d27":"Prepare the data for Machine Learning algorithms\n1. Data Cleaning","a19828ce":"3. Feature Scaling"}}