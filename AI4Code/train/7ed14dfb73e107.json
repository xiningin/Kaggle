{"cell_type":{"eb842f92":"code","b66062dd":"code","41e79dc1":"code","6e344fbd":"code","56f6b3fb":"code","8101f86b":"code","93800e37":"code","10ec068f":"code","f026f00c":"code","e6fec850":"code","945cb2a3":"code","ccea0dd8":"code","f0c738f4":"code","1f6abcdc":"code","33a302bb":"code","bcd7a885":"code","2a09388a":"code","0d54875d":"code","0e38a384":"code","64c22982":"code","62d1d2ef":"code","101ff6e8":"code","e6f654eb":"code","250825ef":"markdown","c566a268":"markdown","c5a55a65":"markdown","9cb8008e":"markdown","1e71f4cb":"markdown","10ae43a0":"markdown","178597b2":"markdown","c068f234":"markdown","7d9c79f4":"markdown","66213ada":"markdown","c62b080e":"markdown","df80f170":"markdown","db336fcd":"markdown","ffa3c597":"markdown","826bef93":"markdown","6f1cc084":"markdown","6a4f31c4":"markdown","2dd8f013":"markdown"},"source":{"eb842f92":"import numpy as np\nimport pandas as pd \nimport geopandas as gpd \nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly.graph_objs as go\n\nimport folium\nfrom folium import Choropleth, Circle, Marker\nfrom folium import plugins","b66062dd":"l_month = pd.read_csv('\/kaggle\/input\/housing-in-london\/housing_in_london_monthly_variables.csv')\n#l_year = pd.read_csv('\/kaggle\/input\/housing-in-london\/housing_in_london_monthly_variables.csv')\nlat_long = pd.read_csv('\/kaggle\/input\/london-boroughs-latitude-and-longitude-data\/london_borough_coordinates.csv')\nlat_long.head()","41e79dc1":"l_month.shape","6e344fbd":"display('London Housing Data at month level')\ndisplay(l_month.head(5))","56f6b3fb":"l_month.area.unique()","8101f86b":"l_month.info()","93800e37":"l_month.describe()","10ec068f":"def compute_missing_values(df):\n    #total number of missing values\n    total_missing = df.isnull().sum().sort_values(ascending=False)\n    \n    #calculating the percentage of missing values\n    percentage_missing = (100 * df.isnull().sum() \/ len(df))\n    \n    #Missing values table - total, percentage\n    table_missing = pd.concat([total_missing, percentage_missing], axis = 1, \n                              keys = ['Missing values', 'Percentage of Missing Values'])\n    \n    #Filtering the columns with missing values\n    table_missing = table_missing[table_missing.iloc[:, 0] != 0]\n    \n    #Summary \n    print(\"Total number of columns:\" + str(df.shape[1]) + \"\\nColumns with missing values:\" +str(table_missing.shape[1]))\n    \n    return table_missing\n\nmissing_values = compute_missing_values(l_month)\nmissing_values.style.background_gradient(cmap='Reds')","f026f00c":"#Replacing the missing values with the mean of the column\nno_of_crimes_mean= l_month['no_of_crimes'].mean()\nl_month = l_month.fillna({'no_of_crimes' : no_of_crimes_mean})\n\n#Removing the missing values\nl_month = l_month[l_month['houses_sold'].notna()]\nl_month.isnull().sum()","e6fec850":"#Converting string to datetime\nl_month = l_month.set_index(pd.to_datetime(l_month['date']))","945cb2a3":"london = l_month[l_month['borough_flag'] == 1]\nlondon.head()","ccea0dd8":"london['approx_house_price'] = london['average_price'].mul(london['houses_sold'])","f0c738f4":"london.area.unique()","1f6abcdc":"london_mean = london.groupby('area').mean().reset_index()\nlondon_mean.head()","33a302bb":"london = london.set_index('area').join(lat_long.set_index('area'))\nlondon = london.reset_index()\nlondon.head()","bcd7a885":"other = l_month[l_month['borough_flag'] == 0]\nother.area.unique()","2a09388a":"areas_of_london = ['south east', 'inner london','north east', 'north west', 'london', 'south west']\nother = other.loc[~other.area.isin(areas_of_london)]\nother.area.unique()","0d54875d":"fig = px.line(london,x='date',y='average_price', color='area',title='Average Price in the Boroughs of London through time')\nfig.update_layout(xaxis_type=\"date\", yaxis_type=\"log\", xaxis_title='Year', yaxis_title='Price (\u00a3)')\nfig.show()","0e38a384":"fig = px.line(london,x='date',y='houses_sold',color='area',title='Number of Houses Sold')\nfig.update_layout(xaxis_type=\"date\", yaxis_type=\"log\", xaxis_title='Year', yaxis_title='Price (\u00a3)')\nfig.show()","64c22982":"trace1 = go.Bar(\n                x = london_mean.area,\n                y = london_mean.houses_sold*1000,\n                name = \"Number of houses sold * 1000\",\n                marker = dict(color = 'rgba(8, 103, 103, 0.8)',\n                             line=dict(color='rgb(0,0,0)',width=1)),\n                text = london_mean.area)\ntrace2 = go.Bar(\n                x = london_mean.area,\n                y = london_mean.average_price,\n                name = \"Average Price (\u00a3)\",\n                marker = dict(color = 'rgba(103, 8, 8, 0.7)',\n                             line=dict(color='rgb(0,0,0)',width=1)),\n                text = london_mean.area)\n\ndata = [trace1,trace2]\nlayout = go.Layout(barmode = \"group\", title=\"Average Price and Number of houses sold * 1000 per Borough\")\nfig = go.Figure(data = data, layout = layout)\nfig.update_xaxes(ticks=\"outside\", tickwidth=2,tickangle=45, ticklen=10,title_text=\"Boroughs of London\")\niplot(fig)","62d1d2ef":"#importing the map shape file from london-borough-and-ward-boundaries-up-to-2014\nl_map = gpd.read_file('\/kaggle\/input\/london-borough-and-ward-boundaries-up-to-2014\/London_Wards\/Boroughs\/London_Borough_Excluding_MHW.shp')\n\n#Filtering out the data we need\nl_map = l_map[['NAME', 'geometry']]\n\n#l_map['NAME']==london['area']\nl_map = l_map.rename(columns = {'NAME' : 'area'})\nl_map['area'] = l_map['area'].str.lower()\nl_map['area'] = l_map['area'].str.replace('&', 'and')\n\n#joining\nlondon_map = l_map.set_index('area').join(london.set_index('area'))\nlondon_map.head()","101ff6e8":"#visualing\nfig, axarr = plt.subplots(1, 2, figsize=(16, 12))\nlondon_map.plot(column='no_of_crimes', cmap='Reds', linewidth=0.5,  ax=axarr[0], edgecolor='gainsboro', legend=True, legend_kwds={'label': \"Number of crimes\", 'orientation' : \"horizontal\"})\nlondon_map.plot(column='average_price', cmap='Reds', linewidth=0.5, ax=axarr[1], edgecolor='gainsboro', legend=True, legend_kwds={'label': \"Average Price\", 'orientation' : \"horizontal\"})\nplt.show()","e6f654eb":"London = [51.506949, -0.122876]\nd_map = plugins.DualMap(location=London, tiles=None, zoom_start=10)\nfolium.TileLayer('openstreetmap').add_to(d_map)\nfolium.TileLayer('cartodbpositron').add_to(d_map)\nmap1 = folium.FeatureGroup(name='Crime Rate').add_to(d_map.m1)\nmap2 = folium.FeatureGroup(name='Average Price (\u00a3)').add_to(d_map.m2)\nfor lat, long, area, average_price in zip(london['lat'], london['long'], london['area'], london['average_price']):\n    folium.CircleMarker([lat,long], radius=10, icon=folium.Icon(color='darkred'),popup=('Borough:'+str(area).capitalize()+' ''Average Price:'+str(average_price)+''), fill_color='darkred', fill_opacity=0.7).add_to(map1)\n\nfor lat, long, area, no_of_crimes in zip(london['lat'], london['long'], london['area'], london['no_of_crimes']):\n    folium.CircleMarker([lat,long], radius=10, icon=folium.Icon(color='purple'),popup=('Borough:'+str(area).capitalize()+' ''Number of Crimes:'+str(no_of_crimes)+''), fill_color='purple', fill_opacity=0.7).add_to(map2)\n\nfolium.LayerControl(collapsed=False).add_to(d_map)\n\nd_map\n","250825ef":"Wandsworth, Bromley, Croydon, and Barnet seem like popular choices! Let's see how why that is the case","c566a268":"Filtering intial data by checking if the area is not a London Borough to obtain a subset. ","c5a55a65":"The data consists of 13549 rows and 7 columns","9cb8008e":"After handling the missing values:","1e71f4cb":"# Diving into the London Housing Trend\n* [Introduction](#introduction)\n* [Missing Values](#missing-values)\n* [Data Processing](#data-processing)\n* [Data Exploration](#data-exploration)","10ae43a0":"Although the crime rate is high Westminster, the house prices are high! In addition, from the earlier plot we can see that the number of houses sold tend to be relatively high when compared to the other Boroughs. ","178597b2":"Filtering intial data by checking if the area is a London Borough to obtain a subset.","c068f234":"<a id=\"data-processing\"><\/a>\n# Data Processing","7d9c79f4":"Out of the 13549 rows for the 7 columns:\n- 94 values are missing in the houses_sold column\n- 6,016 values are missing in the column no_of_crimes\n\nLook at [missing values](#missing-values) to get see how it is handled. ","66213ada":"* Wandsworth, the prices are comparitively low and The Royal Kensington and Chelsea is its neighbour. South Western Railway provides an easy access to Central London. \n* As part of the suburban growth of London in the 20th century, Bromley significantly increased in population and was incorporated as a municipal borough in 1903. Bromley has two National Rail Stations (Source: Wikipedia). There's a direct tube line - District line from Central London to Bromley. \n* Croydon, it is one of the largest commercial districts outside Central London, with an extensive shopping district and night-time economy (Source: Wikipedia).It is also a neighbour of Bromley. There is a Southern Railway from Croydon to King's Cross. \n* Barnet, there is a direct tube (Northern line) from London Bridge to High Barnet which makes the commute easier.\n\nFrom the information above, it is understandable why some boroughs are popular.","c62b080e":"<a id=\"data-exploration\"><\/a>\n# Data Exploration","df80f170":"Removing the areas in London from the dataframe as we already have a dataframe dedicated to Boroughs of London. ","db336fcd":"Added a column total house price by multiplying average_price by houses_sold","ffa3c597":"Kensington and Chelsea had the highest average price from 1995 to 2020, this borough is known for its royal status and hence it is natural that the cost of the houses were high. However, let's see where most houses were sold.","826bef93":"![image.png](attachment:image.png)","6f1cc084":"<a id=\"missing-values\"><\/a>\n# Missing values","6a4f31c4":"Looking at which parts of England are included in the data. As you can see, the data not only consists of areas that are a part of London but some additional areas as well. ","2dd8f013":"Looking at the first 5 rows of the data. The 7 columns are as follows:\n* dateTime - period the record refers to\n* area - Area the record describes\n* average_price - Mean house price\n* code - Code of the area\n* houses_sold - Number of houses sold\n* no_of_crimes - Number of crimes committed\n* borough_flag - Flag to indicate if the area is a borough of London"}}