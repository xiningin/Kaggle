{"cell_type":{"58c3adcc":"code","8a5ac16b":"code","ae487ac6":"code","01f36b66":"code","f19df361":"code","e21aaf20":"markdown"},"source":{"58c3adcc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8a5ac16b":"import markovify ","ae487ac6":"rwsb = pd.read_csv(\"\/kaggle\/input\/reddit-wallstreetsbets-posts\/reddit_wsb.csv\")\nrwsb = rwsb[rwsb.body.notnull()]\nrwsb = rwsb[rwsb.title.notnull()]\nrwsb.head()","01f36b66":"rb = markovify.Text(rwsb['body'])\nrt = markovify.NewlineText('\\n'.join(rwsb['title']))\nprint(\"Done!\")","f19df361":"for x in range(10):\n    print(rt.make_short_sentence(max_chars = 80))\n    for x in range(2):\n        print(rb.make_sentence())\n    print(rb.make_sentence()+ \"\\n\")","e21aaf20":"This notebook uses Markovify to generate new WallStreetBets posts, title and body. The title is the first line and the body are the next 3. There is a gap separating each post and this notebook generates 10 posts."}}