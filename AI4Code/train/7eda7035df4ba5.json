{"cell_type":{"73d8798d":"code","77a13233":"code","929e9e7e":"code","bb404523":"code","958e601d":"code","3e6be815":"code","8cc1c644":"code","e2ed5042":"code","e1339f9d":"code","b0e75018":"code","5e977677":"code","6c217921":"code","559cb426":"code","a0f47558":"code","95a37bc0":"code","19684242":"code","8bca5cb7":"markdown","4497d2a3":"markdown","578d58d7":"markdown","a1a1bd76":"markdown","73fdbe6f":"markdown","e935f9f4":"markdown","66062669":"markdown"},"source":{"73d8798d":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nimport plotly.graph_objects as go\nfrom fbprophet import Prophet\nimport pycountry\nimport plotly.express as px\nfrom collections import namedtuple","77a13233":"df = pd.read_csv('..\/input\/latest-covid19-india-statewise-data\/Latest Covid-19 India Status.csv')\ndf.head()","929e9e7e":"df.info()","bb404523":"fig = go.Figure()\nfig.add_trace(go.Bar(x=df['State\/UTs'],\n                y=df['Total Cases'],\n                name='Total Cases',\n                marker_color='blue'\n                ))\nfig.add_trace(go.Bar(x=df['State\/UTs'],\n                y=df['Deaths'],\n                name='Deaths',\n                marker_color='Red'\n                ))\nfig.add_trace(go.Bar(x=df['State\/UTs'],\n                y=df['Discharged'],\n                name='Discharged',\n                marker_color='Green'\n                ))\nfig.add_trace(go.Bar(x=df['State\/UTs'],\n                y=df['Active'],\n                name='Active',\n                marker_color='Yellow'\n                ))\n\nfig.update_layout(\n    title='India\\'s Corona Virus Cases - Total Cases, Deaths, Discharged (Bar Chart)',\n    xaxis_tickfont_size=14,\n        height = 800,\n    yaxis=dict(\n        title='Number of Cases',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    legend=dict(\n        y=0,\n        x=1.0,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    barmode='group',\n    bargap=0.15, # gap between bars of adjacent location coordinates.\n    bargroupgap=0.1 # gap between bars of the same location coordinate.\n)\nfig.show()","958e601d":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=df['State\/UTs'], \n                         y=df['Total Cases'],\n                         mode='lines+markers',\n                         name='Total Cases',\n                         line=dict(color='blue', width=2)\n                        ))\nfig.add_trace(go.Scatter(x=df['State\/UTs'], \n                         y=df['Deaths'],\n                         mode='lines+markers',\n                         name='Deaths',\n                         line=dict(color='Red', width=2)\n                        ))\nfig.add_trace(go.Scatter(x=df['State\/UTs'], \n                         y=df['Discharged'],\n                         mode='lines+markers',\n                         name='Discharged',\n                         line=dict(color='Green', width=2)\n                        ))\nfig.add_trace(go.Scatter(x=df['State\/UTs'], \n                         y=df['Active'],\n                         mode='lines+markers',\n                         name='Active',\n                         line=dict(color='Yellow', width=2)\n                        ))\nfig.update_layout(\n    title='India\\' Corona Virus Cases - Total Cases, Deaths, Discharged (Line Chart)',\n    xaxis_tickfont_size=14,\n        height = 800,\n    yaxis=dict(\n        title='Number of Cases',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    legend=dict(\n        x=0,\n        y=1.0,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    )\n)\nfig.show()","3e6be815":"net_updated = df[['State\/UTs', 'Total Cases', 'Active', 'Discharged', 'Deaths']]\nnet_updated['Mortaliy Rate'] = net_updated['Deaths']\/net_updated['Total Cases']\nnet_updated['Recovery Rate'] = net_updated['Discharged']\/net_updated['Total Cases']\nnet_updated = net_updated.fillna(0)\nnet_updated.style.background_gradient(cmap = 'Reds')","8cc1c644":"df.isnull().sum()","e2ed5042":"df.corr()['Total Cases'].sort_values()","e1339f9d":"f, ax = plt.subplots(figsize=(10, 8))\ncorr = df.corr()\nsns.heatmap(corr, mask=np.zeros_like(corr, dtype=np.bool), cmap=sns.diverging_palette(240,10,as_cmap=True),\n            square=True, ax=ax)","b0e75018":"sns.pairplot(df)","5e977677":"sns.relplot(x = 'Total Cases', y = 'Discharged', hue = 'State\/UTs', data = df)","6c217921":"import pandas_profiling\nreport = pandas_profiling.ProfileReport(df)\nfrom IPython.display import display\ndisplay(report)","559cb426":"from plotly.offline import iplot","a0f47558":"trace1 = go.Scatter3d(\n    x=df['Total Cases'],\n    y=df['State\/UTs'],\n    z=df['Active Ratio'],\n    mode='markers',\n    marker=dict(\n        size=10,\n        color='rgb(255,17,0)',                # set color to an array\/list of desired values      \n    )\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0  \n    )\n    \n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","95a37bc0":"fig = px.scatter_3d(df, x='Total Cases', y='State\/UTs', z='Active Ratio',\n                    color='Deaths')\nfig.show()","19684242":"fig = px.scatter_3d(df, x='Active Ratio', y='State\/UTs', z='Discharge Ratio',\n                    color='Death Ratio')\nfig.show()","8bca5cb7":"## Using panndas_profiling to create an overview of the about codes all in one place. (Interactive code)","4497d2a3":"# Do let me know what did you think of my first attempt and how can I improve on my work. I have just started learning Python for the past 3 months.","578d58d7":"## #D Plotting the data.","a1a1bd76":"### Finding a correlation in the data set.","73fdbe6f":"## Same 3D data but using a heat map for Deaths. with a 3D figure of Active Ratio, Total Cases and States. (Scroll on the map to use)","e935f9f4":"### Heat map to visualise the data.","66062669":"## "}}