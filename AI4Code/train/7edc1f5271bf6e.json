{"cell_type":{"cd5c9b2e":"code","67c91b0f":"code","69f38b74":"code","ef1c8efc":"code","423e239b":"code","184654d8":"code","aa5b013e":"code","c963c0ea":"code","dd180c9e":"code","075ccbc8":"code","e03663a7":"code","8783334a":"code","e5a7f2a9":"code","3234e1e4":"code","bba06bf3":"code","934aead0":"code","e9c6dc66":"code","555d3e56":"code","e4d848ba":"code","235b157e":"code","d4d10db1":"code","6642dda6":"code","f23e278e":"code","23933c45":"code","682655d6":"code","8d89f8d5":"code","574da52a":"code","bccf8e9f":"code","a68ccaf7":"markdown","cb6d0879":"markdown","e337b179":"markdown","481ad558":"markdown","aa6fd586":"markdown","b6db8243":"markdown","052f4d38":"markdown","8827a726":"markdown","e9b12332":"markdown","6313f1a5":"markdown","0edadcf7":"markdown","bf72851d":"markdown","c7d2afd8":"markdown","7757ad6c":"markdown","854a3d6f":"markdown","7e646e82":"markdown","ee752da5":"markdown","402adaa3":"markdown","d2e0fa98":"markdown","55546bb6":"markdown"},"source":{"cd5c9b2e":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')","67c91b0f":"data = pd.read_csv(\"\/kaggle\/input\/toyata-cars-dataset\/toyata.txt\", na_values = (\"??\", \"????\"), index_col = 0 )\ndata","69f38b74":"data.shape","ef1c8efc":"data.info()","423e239b":"data.isnull().sum()","184654d8":"print(data.Doors.unique())\nprint(\"Doors Feature Data type :\", data.Doors.dtype)","aa5b013e":"doors_map = {\"2\":2,\"3\":3,\"4\":4,\"5\":5, \"three\":3, \"four\":4,\"five\":5,}\ndata[\"Doors\"] = data[\"Doors\"].map(doors_map)","c963c0ea":"data['Age'] = data[\"Age\"].fillna(data.Age.mean())\ndata[\"KM\"] = data[\"KM\"].fillna(data.KM.mean())\ndata[\"HP\"] = data[\"HP\"].fillna(data.HP.mean())\ndata[\"MetColor\"] = data[\"MetColor\"].fillna(data.MetColor.mode()[0])\ndata[\"FuelType\"] = data[\"FuelType\"].fillna(data.FuelType.mode()[0])","dd180c9e":"data","075ccbc8":"sns.boxplot(data['KM'])\nplt.title(\"Box plot of KM\")\nplt.show()","e03663a7":"sns.boxplot(data['HP'])\nplt.title(\"Box plot of HP\")\nplt.show()","8783334a":"plt.scatter(data['KM'], data['Weight'])\nplt.title(\"Scatter plot KM vs Weight\")\nplt.show()","e5a7f2a9":"plt.scatter(data['KM'], data['Price'])\nplt.title(\"Scatter plot KM vs Price\")\nplt.show()","3234e1e4":"plt.hist(data[\"Price\"])\nplt.title(\"Histogram plot of Price\")\nplt.show()","bba06bf3":"plt.hist(data[\"KM\"])\nplt.title(\"Histogram plot of KM\")\nplt.show()","934aead0":"sns.distplot(data['KM'])\nplt.title(\"Distribution Plot of KM\")\nplt.show()","e9c6dc66":"sns.distplot(data['Age'])\nplt.title(\"Distribution Plot of Age\")\nplt.show()","555d3e56":"import statsmodels.api as sm\nsm.qqplot(data[\"Price\"], line = 's')\nplt.title(\"Normal Q-Q plot\")\nplt.show()","e4d848ba":"sns.boxplot(data[\"KM\"])\nplt.title(\"Box plot before Outlier removing\")\nplt.show()\n\ndef drop_outliers(data, KM):\n    iqr = 1.5 * (np.percentile(data['KM'], 75) - np.percentile(data[\"KM\"],25))\n    data.drop(data[data['KM'] > iqr + np.percentile(data['KM'], 75)]. index, inplace = True)\n    data.drop(data[data['KM'] < np.percentile(data['KM'], 25)- iqr ]. index, inplace = True)\n\ndrop_outliers(data, 'KM')\n\nsns.boxplot(data[\"KM\"])\nplt.title(\"Box plot After Outlier removing\")\nplt.show()\n","235b157e":"sns.boxplot(data[\"Age\"])\nplt.title(\"Box plot before Outlier removing\")\nplt.show()\n\ndef drop_outliers(data, Age):\n    iqr = 1.5 * (np.percentile(data['Age'], 75) - np.percentile(data[\"Age\"],25))\n    data.drop(data[data['Age'] > iqr + np.percentile(data['Age'], 75)]. index, inplace = True)\n    data.drop(data[data['Age'] < np.percentile(data['Age'], 25)- iqr ]. index, inplace = True)\n\ndrop_outliers(data, 'Age')\n\nsns.boxplot(data[\"Age\"])\nplt.title(\"Box plot After Outlier removing\")\nplt.show()\n","d4d10db1":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()","6642dda6":"plt.hist(data[\"KM\"])\nplt.title(\"Histogram plot before scaling\")\nplt.show()\n\ndata[\"KM\"] = scaler.fit_transform(data[\"KM\"].values.reshape(-1,1))\n\nplt.hist(data[\"KM\"])\nplt.title(\"Histogram Plot afrter Scaling\")\nplt.show()","f23e278e":"sns.distplot(data[\"Price\"])\nplt.title(\"Distribution plot before Log Transform\")\nplt.show()\n\ndata[\"Price\"] = np.log(data[\"Price\"])\n\nsns.distplot(data[\"Price\"])\nplt.title(\"Distribution Plot afrter Transform\")\nplt.show()","23933c45":"plt.hist(data[\"Age\"])\nplt.title(\"Histogram plot before Cube Root Normalization \")\nplt.show()\n\ndata['Age'] = (data['Age'] ** (1\/3))\n\nplt.hist(data[\"Age\"])\nplt.title(\"Histogram Plot afrter Cube Root Normalization\")\nplt.show()","682655d6":"import scipy\n\nsns.boxplot(data['Price'])\nplt.title(\"Box plot before Box - Transformation\")\nplt.show()\n\ndata['Price'], fitted_lambda = scipy.stats.boxcox(data['Price'],lmbda = None)\n\nsns.boxplot(data['Price'])\nplt.title(\"Box plot After Box - Transformation\")\nplt.show()","8d89f8d5":"sns. boxplot(data['CC'])\nplt.title(\"Box plot Before mean imputation\")\nplt.show()\n\nfor i in data['CC']:\n    q1 = data['CC'].quantile(0.25)\n    q3 = data['CC'].quantile(0.75)\n    iqr =q3 - q1\n    lower_tail = q1 - 1.5 * iqr\n    upper_tail = q3 + 1.5 * iqr\n    if i > upper_tail or i < lower_tail:\n        data['CC'] = data['CC'].replace(i, np.mean(data['CC']))\n    \nsns.boxplot(data['CC'])\nplt.title(\"Box plot after mean imputation\")\nplt.show()","574da52a":"sns. boxplot(data['HP'])\nplt.title(\"Box plot Before mean imputation\")\nplt.show()\n\nfor i in data['HP']:\n    q1 = data['HP'].quantile(0.25)\n    q3 = data['HP'].quantile(0.75)\n    iqr =q3 - q1\n    lower_tail = q1 - 1.5 * iqr\n    upper_tail = q3 + 1.5 * iqr\n    if i > upper_tail or i < lower_tail:\n        data['HP'] = data['HP'].replace(i, np.median(data['HP']))\n    \nsns.boxplot(data['HP'])\nplt.title(\"Box plot after mean imputation\")\nplt.show()","bccf8e9f":"sns. boxplot(data['Age'])\nplt.title(\"Box plot Before mean imputation\")\nplt.show()\n\nfor i in data['Age']:\n    q1 = data['Age'].quantile(0.25)\n    q3 = data['Age'].quantile(0.75)\n    iqr =q3 - q1\n    lower_tail = q1 - 1.5 * iqr\n    upper_tail = q3 + 1.5 * iqr\n    if i > upper_tail or i < lower_tail:\n        data['Age'] = data['Age'].replace(i, 0)\n    \nsns.boxplot(data['Age'])\nplt.title(\"Box plot after mean imputation\")\nplt.show()","a68ccaf7":"## i) Univariate method:\n\na) Box and whisker plot (box plot).\n\nb) Scatter plot.\n    \n## ii) Multivariate method:\n\na) Histogram.\n\nb) Distribution Plot.\n\nc) QQ plot.\n","cb6d0879":"# Detect Outliers:\n\na) Box and whisker plot (box plot).\n\nb) Scatter plot.\n\nc) Histogram.\n\nd) Distribution Plot.\n\ne) QQ plot.","e337b179":"### Univariate method:\n    \n#### a) Box plot and whisker plot(Box plot)","481ad558":"## 3) Zero","aa6fd586":"### 2) Log transformation.","b6db8243":"### c) Q-Q plot.","052f4d38":"## 2) Median","8827a726":"## 1) Mean","e9b12332":"### b) Scatter plot","6313f1a5":"# Imoprting required Libraries and Data Set","0edadcf7":"### 4) Box-transformation.","bf72851d":"Dataset Description:\n\nPrice     : Price of the Car(Dependent Varible)\nAge       : Age of the Car.\nKM        : Car runnig distance in KiloMeters.\nFueltype  : Which type fuel used in car like Petrol, CNG, Diesel.\nHP        : Horsepower of the car.\nMetcolor  : Color Type of the car.\nAutomatic : Car gear system automatic(0: Manullay, 1: Automatic).\nCC        : cubic centimetres, car engine size describe.\nDoors     : No.of Doors of the Car.\nWeight    : Weight of the car.","c7d2afd8":"# 2. Transforming values:\n\n1) Scaling.\n\n2) Log transformation.\n\n3) Cube Root Normalization.\n\n4) Box-transformation.","7757ad6c":"### b) Distribution Plot","854a3d6f":"### 3) Cube Root Normalization","7e646e82":"### 1) Scaling.","ee752da5":"# 3. Imputation:\n1) Mean.\n\n2) Median.\n\n3) Zero","402adaa3":"## Multivariate method:\n\n### a) Histogram","d2e0fa98":"# Handling Outliers:\n\n1. Deleting observations.\n\n2. Transforming values.\n\n3. Imputation.","55546bb6":"## 1.Deleting observations."}}