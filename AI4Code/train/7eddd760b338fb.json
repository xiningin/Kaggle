{"cell_type":{"8067849e":"code","3ccd7f2d":"code","bb1d5ad6":"code","98bbbd1c":"code","5239fa91":"code","997374f2":"code","5c753af5":"code","b0fb3692":"code","5dd37d3b":"code","950dff9c":"code","c32d26ac":"code","a508efca":"code","2514bf69":"code","330804cf":"code","942debf1":"markdown","d6bd2e47":"markdown","18a17ff0":"markdown","e5e19283":"markdown","f6b77d4c":"markdown","7510b428":"markdown","73aa853a":"markdown","762f2327":"markdown","0068ff9a":"markdown","a5a3ca96":"markdown","6bd36b0c":"markdown","e9503d22":"markdown"},"source":{"8067849e":"import os\nimport random\n\n%matplotlib inline\n\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n\nimport warnings\nwarnings.filterwarnings('ignore')","3ccd7f2d":"# Root directory\n\nroot = '\/kaggle\/input\/impressionist-classifier-data\/'","bb1d5ad6":"# Creates artist-specific directory names, and files storing the image names for each artist\n\nartist_lst = ['Cezanne', 'Degas', 'Gauguin', 'Hassam', 'Matisse', \n              'Monet', 'Pissarro', 'Renoir', 'Sargent', 'VanGogh']\n\nfor artist in artist_lst:\n    exec(f\"train_{artist}_dir = os.path.join(root, 'training\/training', '{artist}')\")\n    exec(f\"train_{artist}_filenames = os.listdir(train_{artist}_dir)\")\n    exec(f\"valid_{artist}_dir = os.path.join(root, 'validation\/validation', '{artist}')\")\n    exec(f\"valid_{artist}_filenames = os.listdir(valid_{artist}_dir)\")","98bbbd1c":"def plot_imgs(artist, nrows=4, ncols=4, num_imgs=8):\n    \"\"\"\n    Function to plot random sample images for each artist in a num_rows x num_cols grid\n    :param artist: Artist name\n    :type artist: str\n    :param nrows: Number of rows in grid\n    :type nrows: int\n    :param ncols: Number of columns\n    :type ncols: int\n    :param num_imgs: Number of sample images to plot\n    :type num_imgs: int\n    :return: None\n    \"\"\"\n    \n    pic_idx = 0\n    \n    fig = plt.gcf()\n    fig.set_size_inches(ncols * 6, nrows * 6)\n\n    pic_idx += num_imgs\n\n    train_dir = eval(f\"train_{artist}_dir\")\n    filenames = eval(f\"train_{artist}_filenames\")\n    filenames = random.sample(filenames, len(filenames))\n    \n    next_pix = [os.path.join(train_dir, fname) \n                    for fname in filenames[pic_idx-num_imgs: pic_idx]]\n\n\n    for i, img_path in enumerate(next_pix):\n        plt.suptitle(f\"{artist}\", fontsize=24)\n        sp = plt.subplot(nrows, ncols, i + 1)\n        sp.axis('Off') # Don't show axes (or gridlines)\n        img = mpimg.imread(img_path)\n        plt.imshow(img)","5239fa91":"plot_imgs(artist_lst[0])","997374f2":"plot_imgs(artist_lst[1])","5c753af5":"plot_imgs(artist_lst[2])","b0fb3692":"plot_imgs(artist_lst[3])","5dd37d3b":"plot_imgs(artist_lst[4])","950dff9c":"plot_imgs(artist_lst[5])","c32d26ac":"plot_imgs(artist_lst[6])","a508efca":"plot_imgs(artist_lst[7])","2514bf69":"plot_imgs(artist_lst[8])","330804cf":"plot_imgs(artist_lst[9])","942debf1":"### 9. John Singer-Sargent","d6bd2e47":"### 4. Childe Hassam","18a17ff0":"## Plot 8 sample images for each painter","e5e19283":"### 8. Pierre-Auguste Renoir","f6b77d4c":"### 10. Vincent van Gogh","7510b428":"### 5. Henri Matisse","73aa853a":"### 7. Camille Pissarro","762f2327":"### 1. Paul Cezanne","0068ff9a":"### 3. Paul Gauguin","a5a3ca96":"### 6. Claude Monet","6bd36b0c":"### 2. Edgar Degas","e9503d22":"### The aim of this project is to build a multi-class classifier for 10 Impressionist painters, namely:\n* Camille Pisarro\n* Childe Hassam\n* Claude Monet\n* Edgar Degas\n* Henri Matisse\n* John Singer-Sargent\n* Paul Cezanne\n* Paul Gauguin\n* Pierre-Auguste Renoir\n* Vincent van Gogh\n\n### This notebook plots sample images for each painter from the dataset we have previously created. "}}