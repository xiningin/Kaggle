{"cell_type":{"12906cfe":"code","5ab8a59a":"code","26f0b7e7":"code","e7c88cbb":"code","64f8475a":"code","fde265c3":"code","6eeefa0a":"code","9f4eed2e":"code","d6ed88de":"code","da763148":"code","0f8c09f0":"code","bd8e9e55":"code","c22a06f2":"code","c6119736":"code","9a0da9c6":"code","ef487d48":"code","117cb4e5":"code","82e560c4":"code","09fbfea6":"code","cf24f65d":"code","01a9b77e":"markdown","60415f14":"markdown","ccf62100":"markdown","d201d33f":"markdown","b124a867":"markdown","ff504792":"markdown","ff362114":"markdown"},"source":{"12906cfe":"import pandas as pd\nimport numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns","5ab8a59a":"df=pd.read_csv(\"..\/input\/vehicle-dataset-from-cardekho\/car data.csv\")\n","26f0b7e7":"df.columns=[x.lower() for x in df.columns]\ndf.corr()","e7c88cbb":"nomv=df.dropna(axis=0)\n#nomv[\"seller_type\"]=nomv[\"seller_type\"].map({\"Individual\":0,\"Dealer\":1})\n#nomv[\"fuel_type\"] =nomv['fuel_type'].map({\"Petrol\":1,\"Diesel\":0})\n#nomv[\"transmission\"]=nomv[\"transmission\"].map({\"Manual\":1,\"Automatic\":1})\nsns.distplot(nomv[\"selling_price\"])\nq=nomv[\"selling_price\"].quantile(0.999)\ndta1=nomv[nomv[\"selling_price\"]<q]\n","64f8475a":"q2=dta1[\"present_price\"].quantile(0.99)\nq3=dta1[\"present_price\"].quantile(0.1)\ndta2=dta1[dta1[\"present_price\"]<q2]\ndta3=dta2[dta2[\"present_price\"]>q3]\nsns.distplot(dta3[\"present_price\"])","fde265c3":"sns.distplot(df[\"kms_driven\"])","6eeefa0a":"q4=dta3[\"kms_driven\"].quantile(0.99)\ndta4=dta3[dta3[\"kms_driven\"]<q4]\nsns.distplot(dta4[\"kms_driven\"])\n","9f4eed2e":"cleaned=dta4\nx=cleaned.drop([\"selling_price\",\"car_name\",\"year\"],axis=1)\ny=cleaned[\"selling_price\"]\nxdummies=pd.get_dummies(x,drop_first=True)\nxdummies[\"year\"]=cleaned[\"year\"]\ncleaned[\"selling_price\"]=np.log(cleaned[\"selling_price\"])","d6ed88de":"fig,(ax1,ax2)=plt.subplots(nrows=1,ncols=2,figsize=(4,4))\nax1.scatter(cleaned[\"selling_price\"],cleaned[\"present_price\"],label=\"yo\")\nax1.legend()\nax2.scatter(cleaned[\"selling_price\"],cleaned[\"kms_driven\"])\nplt.show()","da763148":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split","0f8c09f0":"scaler=StandardScaler().fit(xdummies)\nind=scaler.fit(xdummies).transform(xdummies)\nxtrain,xtest,ytrain,ytest=train_test_split(ind,y,test_size=0.2,shuffle=False,random_state=42)","bd8e9e55":"from sklearn.linear_model import LinearRegression\nfrom sklearn.feature_selection import f_regression","c22a06f2":"reg=LinearRegression()\nmymodel=reg.fit(xtrain,ytrain)","c6119736":"coefficeints=mymodel.coef_\nintercept=mymodel.intercept_\nr_squared=mymodel.score(xtrain,ytrain)\np_values=f_regression(xtrain,ytrain)[1].round(3)\nadj_r2=1-(1-r_squared)*(173-1)\/172\nlst={\"coefficeints\":coefficeints,\"intercept\":intercept,\"r_squared\":r_squared,\"pvalues\":p_values,\"adjusted_values\":adj_r2}\nlst","9a0da9c6":"pred=mymodel.predict(xtrain)\nplt.scatter(pred,ytrain)","ef487d48":"pd.options.display.max_rows=900\nccc=pd.DataFrame({\"p\":pred,\"y\":ytrain,\"difference\":pred-ytrain})\nccc.describe(include=\"all\")","117cb4e5":"tpred=mymodel.predict(xtest)\nplt.scatter(ytest,tpred)","82e560c4":"final_submit=pd.DataFrame(pred,columns=[\"Predicted selling_price\"])","09fbfea6":"final_submit","cf24f65d":"final_submit.to_csv(\"Submission.csv\")","01a9b77e":"1. **Building linear regression**","60415f14":"1. Plotting (Testing selling_price vs predicted selling_price)","ccf62100":"1. plotting selling_price vs predicted","d201d33f":"1. HERE IS MY MODEL,HERE YOU CAN PREDICT selling_price by mymodel.predict(ENTER YOUR VALUES HERE)","b124a867":"1. Removing OUTLIERS","ff504792":"1. Statistics of my model","ff362114":"1. Homoscedasity"}}