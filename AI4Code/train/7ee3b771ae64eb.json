{"cell_type":{"46e86313":"code","06498268":"code","33a230cd":"code","4e46d60a":"code","c53348d7":"code","a14843fa":"code","4701aa4e":"code","e8f71079":"code","cd9223e8":"code","57d28fcf":"code","06a19201":"code","8d42178c":"code","51f4fee9":"code","6ad3880a":"code","1806b4c9":"code","a4ae42bd":"code","06ed73f3":"code","5830b86b":"code","8f38d55f":"code","64707b1b":"code","4e088e46":"code","daef2e60":"code","7580d194":"code","61c423d1":"code","d9d23256":"code","00d6ba5d":"code","372ccf9c":"code","9cf11b7a":"code","49d7a878":"code","3410ce26":"code","f1c4bbca":"code","2277884e":"code","aec1dd6c":"code","a9a228c0":"code","256bcbde":"markdown","e77a4aab":"markdown","062c9fe3":"markdown","0de4002e":"markdown","8b7d8997":"markdown","04ac4ba7":"markdown","8ff3b49f":"markdown","1c1e7f1c":"markdown","be99d0ed":"markdown","10780496":"markdown","8be84eca":"markdown","8472c380":"markdown","15d70dd5":"markdown","218811f4":"markdown","2c8992b9":"markdown","fe140d7c":"markdown"},"source":{"46e86313":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","06498268":"df= pd.read_csv('\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')","33a230cd":"df.head()","4e46d60a":"df= df.drop_duplicates(subset='Name')","c53348d7":"df.info()","a14843fa":"df.isna().sum()","4701aa4e":"df.describe()","e8f71079":"df.shape","cd9223e8":"popular_genre= df['Genre'].value_counts().reset_index()\npopular_genre= popular_genre.rename(columns={\"index\":\"Genre\", \"Genre\":\"Count\"})\npopular_genre","57d28fcf":"fig = px.pie(popular_genre, names='Genre', values='Count')\nfig.update_layout(title_text='Which Genre is more than the other?')\nfig.show()","06a19201":"best_author= df[['Name', 'Author']].groupby('Author')['Name'].count().sort_values(ascending=False).head(10).reset_index()\nbest_author","8d42178c":"fig = px.bar(best_author, x='Author', y='Name')\nfig.update_layout(title_text='Which author released more books?')\nfig.show()","51f4fee9":"best_year= df[['Name', 'Year', 'Author']].groupby(['Year','Author'])['Name'].count().sort_values(ascending=False).reset_index()\n\nbest_year = best_year.drop_duplicates(subset='Year')\n","6ad3880a":"fig = px.bar(best_year, x='Year', y='Name', color= 'Author')\nfig.update_layout(title_text='Most productive author for each year (2009-2019)')\nfig.show()","1806b4c9":"most_review_author= df[['Reviews', 'Author']].groupby('Author')['Reviews'].sum().sort_values(ascending=False).reset_index(drop=False).head(10)\nmost_review_author","a4ae42bd":"fig = px.bar(most_review_author, x='Author', y='Reviews')\nfig.update_layout(title_text='Which author received more reviews?')\nfig.show()","06ed73f3":"best_rating_author= df[['Author', 'User Rating']].groupby('Author')['User Rating'].mean().sort_values(ascending= False).reset_index(drop=False).head(10)\nbest_rating_author","5830b86b":"cheapest_author= df[['Author', 'Price']].groupby('Author')['Price'].mean().sort_values().reset_index(drop= False).head(10)\ncheapest_author","8f38d55f":"fig = px.bar(cheapest_author, x='Author', y='Price')\nfig.update_layout(title_text='Which author made cheaper books')\nfig.show()","64707b1b":"free_books= df[df['Price'] == 0.0]\nfree_books","4e088e46":"expensive_author= df[['Author', 'Price']].groupby('Author')['Price'].mean().sort_values(ascending=False).reset_index(drop=False).head(10)\nexpensive_author","daef2e60":"fig = px.bar(expensive_author, x='Author', y='Price')\nfig.update_layout(title_text='Which author made more expensive books')\nfig.show()","7580d194":"popular_genre= df[['Genre','Reviews']].groupby('Genre')['Reviews'].sum().reset_index(drop=False)\n\npopular_genre","61c423d1":"fig= px.pie(popular_genre, names= 'Genre', values='Reviews')\nfig.update_layout(title_text='Which Genre received more reviews?')\nfig.show()","d9d23256":"genre_rating= df[['Genre', 'User Rating']].groupby('Genre')['User Rating'].mean().reset_index(drop=False)\ngenre_rating","00d6ba5d":"fig= px.pie(genre_rating, names= 'Genre', values='User Rating')\nfig.update_layout(title_text='Which Genre better rating?')\nfig.show()","372ccf9c":"price_avg_year = df[['Price', 'Year', 'Genre']].groupby(['Genre', 'Year'])['Price'].mean().reset_index(drop=False)\nprice_avg_year","9cf11b7a":"fig= px.bar(price_avg_year, x='Year', y='Price',color='Genre', barmode='group')\nfig.update_layout(title_text='Average books price for each year')\nfig.show()","49d7a878":"rating_vs_price = df[['User Rating', 'Price']].groupby('User Rating')['Price'].mean().reset_index(drop=False)\nrating_vs_price","3410ce26":"fig=px.line(rating_vs_price, x= 'User Rating', y='Price')\nfig.update_layout(title_text='Does higher rating means higher price?')\nfig.show()","f1c4bbca":"most_reviewed_books= df[['Name', 'Reviews']].groupby('Name')['Reviews'].sum().sort_values(ascending=False).head(10).reset_index(drop=False)\nmost_reviewed_books","2277884e":"fig=px.bar(most_reviewed_books, x='Name', y='Reviews')\nfig.update_layout(title_text='Which books got more reviews?')\nfig.show()","aec1dd6c":"avg_rating_year= df[['User Rating', 'Year']].groupby('Year')['User Rating'].mean()\\\n.reset_index(drop=False)\navg_rating_year","a9a228c0":"fig= px.line(avg_rating_year, x='Year', y='User Rating')\nfig.update_layout(title_text='Average rating for each year?')\nfig.show()","256bcbde":"# 8. Which genre have better rating?","e77a4aab":"# 10. Does higher rating means higher price?","062c9fe3":"### More expensive","0de4002e":"# 1. How many non-fictional or fictional books?","8b7d8997":"# Drop some duplicates from the dataset","04ac4ba7":"# 12. Average books rating each year","8ff3b49f":"# 9. Price average for each year and genre","1c1e7f1c":"# 11. Which books got the most reviews","be99d0ed":"# 3. Most released books in 1 year by single author","10780496":"# 5. Which author has the best rating among them?","8be84eca":"# 6. Which Author make cheaper or more expensive books?","8472c380":"# 7. Which Genre got more reviews?","15d70dd5":"# 4. Which author have more reviews? ","218811f4":"### Cheaper","2c8992b9":"There are 310 non-fictional and 240 fictional books","fe140d7c":"# 2. Which author release more books?"}}