{"cell_type":{"2d6762bc":"code","89a89dd6":"code","fada26eb":"code","4df950a8":"code","91e363b0":"code","1c4e412a":"code","ef55dedf":"code","2e742068":"code","866f19f4":"code","40d87d80":"code","0c375f9a":"code","d38095cb":"code","7dd3e99f":"code","dad8ee83":"code","0320c786":"code","49825014":"code","b1dea1fa":"code","f29c0a2a":"code","7e9dddf3":"code","ef49eea9":"code","9a116833":"code","df7c58dd":"code","2626cb3a":"code","e437fdf0":"code","40e06f44":"code","1692e196":"code","c532d35e":"code","7332222e":"code","2cee10cd":"code","4e78c32b":"code","87283b0b":"code","56330dfb":"code","d1d2ed17":"code","ba91729f":"code","18209b24":"code","254c9ad4":"code","c129bafd":"code","a90e5c4f":"code","3939565c":"code","795288b5":"code","ce6ab3ae":"code","a89c6150":"code","47a4a7b7":"code","46bcf150":"code","9b1d3f9e":"code","e91d584f":"code","c5d88ed4":"code","01fd77f6":"code","2e4169a4":"code","bf38bd2f":"code","2c2a510c":"code","05b2b425":"code","6f3e325d":"code","a1964da3":"code","892e94d3":"code","75753124":"code","3212acee":"code","d6ce9b0e":"code","fe62fbf1":"code","8c6a3cd5":"code","30922988":"code","d76c1f9f":"code","61736237":"code","8a24fac8":"code","71f58d6f":"markdown","ab96f5fb":"markdown","4b7ebe38":"markdown","85f7701b":"markdown","03baaaad":"markdown","2a5c97f4":"markdown","42a47b97":"markdown","4b33b346":"markdown"},"source":{"2d6762bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","89a89dd6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\nfrom scipy.stats import norm\nfrom sklearn.ensemble import GradientBoostingRegressor\nimport copy\nimport warnings\nwarnings.filterwarnings('ignore')","fada26eb":"train_d=pd.read_csv(\"..\/input\/train.csv\")\ntest_d=pd.read_csv(\"..\/input\/test.csv\")\nsubm_d=pd.read_csv(\"..\/input\/sample_submission.csv\")","4df950a8":"print(\"Train data shape :\",train_d.shape)\nprint(\"Test data shape :\",test_d.shape)\nprint(\"Subm data shape :\",subm_d.shape)","91e363b0":"train_d.head()","1c4e412a":"SalePrice =train_d[\"SalePrice\"]\nId=test_d[\"Id\"]","ef55dedf":"#train_d.drop([\"SalePrice\"],axis=1,inplace=True)\n#print(train_d.shape)","2e742068":"#train_objs_num = len(train_d)\n#data = pd.concat(objs=[train_d, test_d], axis=0)\n#dataset = pd.get_dummies(dataset)\n#train = copy.copy(dataset[:train_objs_num])\n#test = copy.copy(dataset[train_objs_num:])","866f19f4":"train_d.columns","40d87d80":"train_d.describe()","0c375f9a":"train_d.info()","d38095cb":"mis_per=(train_d.isnull().sum()*100\/len(train_d)).sort_values(ascending=False)\nmis_per.head(15)","7dd3e99f":"mis_per[mis_per>20]","dad8ee83":"train_d.drop([\"PoolQC\",\"MiscFeature\",\"Alley\",\"Fence\",\"FireplaceQu\"],axis=1,inplace=True)","0320c786":"plt.figure(figsize=(30,22))\nsns.heatmap(train_d.corr())","49825014":"plt.scatter(train_d[\"TotalBsmtSF\"],train_d[\"SalePrice\"])","b1dea1fa":"plt.scatter(train_d[\"1stFlrSF\"],train_d[\"SalePrice\"])\ntrain_d.drop([\"1stFlrSF\"],axis=1,inplace=True)\ntest_d.drop([\"1stFlrSF\"],axis=1,inplace=True)","f29c0a2a":"plt.scatter(train_d[\"GarageCars\"],train_d[\"SalePrice\"])\ntrain_d.drop([\"GarageCars\"],axis=1,inplace=True)\ntest_d.drop([\"GarageCars\"],axis=1,inplace=True)","7e9dddf3":"plt.scatter(train_d[\"GarageArea\"],train_d[\"SalePrice\"])","ef49eea9":"plt.scatter(train_d[\"YearBuilt\"],train_d[\"SalePrice\"])","9a116833":"train_d.drop(train_d[train_d[\"SalePrice\"]>700000].index,inplace=True)","df7c58dd":"plt.scatter(train_d[\"LotArea\"],train_d[\"SalePrice\"])","2626cb3a":"train_d.drop(train_d[train_d[\"LotArea\"]>150000].index,inplace=True)","e437fdf0":"sns.countplot(train_d[\"Utilities\"])\n#Better dropping it ","40e06f44":"train_d = train_d.drop([\"Utilities\"], axis=1)\ntest_d = test_d.drop([\"PoolQC\",\"Fence\", \"MiscFeature\", \"Utilities\",\"Alley\",\"FireplaceQu\"], axis=1)","1692e196":"sns.distplot(train_d[\"SalePrice\"])","c532d35e":"sns.set()\ncols = ['SalePrice', 'OverallQual', 'GrLivArea','TotalBsmtSF', 'FullBath', 'YearBuilt']\nsns.pairplot(train_d[cols], size = 2.5)\nplt.show();","7332222e":"var = 'GrLivArea'\ndata = pd.concat([train_d['SalePrice'],train_d[var]], axis=1)\ndata.plot.scatter(x=var, y='SalePrice', ylim=(0,800000));","2cee10cd":"train_d.drop(train_d[train_d[\"GrLivArea\"]>4000].index,inplace=True)","4e78c32b":"var = 'GrLivArea'\ndata = pd.concat([train_d['SalePrice'],train_d[var]], axis=1)\ndata.plot.scatter(x=var, y='SalePrice', ylim=(0,800000));","87283b0b":"sns.distplot(train_d[\"GrLivArea\"])","56330dfb":"train_d[\"GrLivArea\"]=np.log(train_d[\"GrLivArea\"])\nsns.distplot(train_d[\"GrLivArea\"])","d1d2ed17":"sns.distplot(train_d[\"LotArea\"])\ntrain_d[\"LotArea\"]=np.log(train_d[\"LotArea\"])","ba91729f":"sns.distplot(train_d[\"LotArea\"])","18209b24":"print(train_d[\"SalePrice\"].skew())","254c9ad4":"\ntrain_d[\"SalePrice\"]=np.log(train_d[\"SalePrice\"])","c129bafd":"sns.distplot(train_d[\"SalePrice\"],fit=norm)","a90e5c4f":"col=train_d.loc[:, train_d.dtypes == np.float64].columns.tolist()\nprint(col)","3939565c":"for i in col:\n    print(train_d[i].skew())","795288b5":"train_d[\"MasVnrArea\"].isnull().sum()","ce6ab3ae":"train_d[\"MasVnrArea\"]=train_d[\"MasVnrArea\"].fillna(0)\ntrain_d[\"MasVnrType\"]=train_d[\"MasVnrType\"].fillna(\"None\")\n\ntest_d[\"MasVnrArea\"]=test_d[\"MasVnrArea\"].fillna(0)\ntest_d[\"MasVnrType\"]=test_d[\"MasVnrType\"].fillna(\"None\")","a89c6150":"train_d = train_d.fillna({\"BsmtQual\": \"None\"})\ntest_d = test_d.fillna({\"BsmtQual\": \"None\"})\ntrain_d = train_d.fillna({\"BsmtCond\": \"None\"})\ntest_d = test_d.fillna({\"BsmtCond\": \"None\"})\ntrain_d = train_d.fillna({\"BsmtExposure\": \"None\"})\ntest_d = test_d.fillna({\"BsmtExposure\": \"None\"})\ntrain_d = train_d.fillna({\"BsmtFinType1\": \"None\"})\ntest_d = test_d.fillna({\"BsmtFinType1\": \"None\"})\ntrain_d = train_d.fillna({\"BsmtFinSF1\": 0})\ntest_d = test_d.fillna({\"BsmtFinSF1\": 0})\ntrain_d = train_d.fillna({\"BsmtFinType2\": \"None\"})\ntest_d = test_d.fillna({\"BsmtFinType2\": \"None\"})\ntest_d = test_d.fillna({\"BsmtFinSF2\": 0})\ntest_d = test_d.fillna({\"BsmtUnfSF\": 0})\ntest_d = test_d.fillna({\"TotalBsmtSF\": 0})\ntest_d = test_d.fillna({\"BsmtFullBath\": 0})\ntest_d = test_d.fillna({\"BsmtHalfBath\": 0})","47a4a7b7":"# Garage\ntrain_d = train_d.fillna({\"GarageType\": \"None\"})\ntest_d = test_d.fillna({\"GarageType\": \"None\"})\ntrain_d = train_d.fillna({\"GarageYrBlt\": 0})\ntest_d = test_d.fillna({\"GarageYrBlt\": 0})\ntrain_d = train_d.fillna({\"GarageFinish\": \"None\"})\ntest_d = test_d.fillna({\"GarageFinish\": \"None\"})\ntest_d = test_d.fillna({\"GarageArea\": 0})\ntrain_d = train_d.fillna({\"GarageQual\": \"None\"})\ntest_d = test_d.fillna({\"GarageQual\": \"None\"})\ntrain_d = train_d.fillna({\"GarageCond\": \"None\"})\ntest_d = test_d.fillna({\"GarageCond\": \"None\"})","46bcf150":"test_d = test_d.fillna({\"MSZoning\": \"RL\"})\ntest_d = test_d.fillna({\"Exterior1st\": \"VinylSd\"})\ntest_d = test_d.fillna({\"Exterior2nd\": \"VinylSd\"})\ntrain_d = train_d.fillna({\"Electrical\": \"SBrkr\"})\ntest_d = test_d.fillna({\"KitchenQual\": \"TA\"})\ntest_d = test_d.fillna({\"Functional\": \"Typ\"})\ntest_d = test_d.fillna({\"SaleType\": \"WD\"})","9b1d3f9e":"train_d = train_d.fillna({\"LotFrontage\": 0})\ntest_d = test_d.fillna({\"LotFrontage\": 0})","e91d584f":"Price=train_d[\"SalePrice\"]","c5d88ed4":"train_d.drop([\"SalePrice\"],axis=1,inplace=True)\n#train_d[\"SalePrice\"]","01fd77f6":"train_d.drop([\"Id\"],axis=1,inplace=True)\ntest_d.drop([\"Id\"],axis=1,inplace=True)","2e4169a4":"train_d.head()","bf38bd2f":"from sklearn.preprocessing import StandardScaler","2c2a510c":"sc=StandardScaler()","05b2b425":"train_objs_num = len(train_d)\ndata = pd.concat(objs=[train_d, test_d], axis=0)\ndata = pd.get_dummies(data)\ntrain = copy.copy(data[:train_objs_num])\ntest = copy.copy(data[train_objs_num:])","6f3e325d":"train.head()","a1964da3":"train=sc.fit_transform(train)","892e94d3":"test=sc.fit_transform(test)","75753124":"from sklearn.decomposition import PCA","3212acee":"pc=PCA(n_components=2)\ntrain=pc.fit_transform(train)\ntest=pc.fit_transform(test)","d6ce9b0e":"GBoost = GradientBoostingRegressor(n_estimators=3000, learning_rate=0.05,\n                                   max_depth=4, max_features='sqrt',\n                                   min_samples_leaf=15, min_samples_split=10, \n                                   loss='huber', random_state =5)","fe62fbf1":"GBoost.fit(train,Price)","8c6a3cd5":"GBoost.score(train,Price)","30922988":"y_pred=GBoost.predict(test)\n","d76c1f9f":"y_pred=np.exp(y_pred)","61736237":"y_pred","8a24fac8":"my_submission = pd.DataFrame({\"Id\":Id,\"SalePrice\": y_pred})\nprint(my_submission)\n\nmy_submission.to_csv('submission12.csv', encoding='utf-8', index=False)","71f58d6f":"*Printing the dataset*","ab96f5fb":"**Importing suitable Libraries :**\n","4b7ebe38":"***Submitting the final dataset***","85f7701b":"**88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888**","03baaaad":"Importing the preprocessing library for the normalization of the data to a general scale","2a5c97f4":"        **Finding and Filling out the missing data**","42a47b97":"**from the above heaptmap we can see that GarageYrBlt and GarageArea along with TotalBSMTsf 1stBsesf   and Yearbuilt an garageyearbuilt are highly correlated with each other**","4b33b346":"****Importing and printing the shape of the  dataset :****"}}