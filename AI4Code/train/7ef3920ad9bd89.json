{"cell_type":{"cf6b402d":"code","df6d124e":"code","a00929c1":"code","b1e71004":"code","1c1ef572":"code","d84139d9":"code","0fc07d1d":"code","f95796ea":"code","a63b17a4":"code","a8d0a729":"code","ced9a359":"code","1662335e":"code","04b6f5f1":"code","a6dc8355":"markdown","9ccaa4b3":"markdown","f9f3d519":"markdown","b58011d7":"markdown","26605369":"markdown","f224a475":"markdown","7449f71d":"markdown","68d55bc4":"markdown","3f92ae3d":"markdown","d8a82c85":"markdown"},"source":{"cf6b402d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport plotly.express as px\nimport cufflinks as cf\ncf.go_offline()\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn import metrics","df6d124e":"# Data Reading\ntrain = pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-5\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-5\/test.csv\")\ntrain.head(3)","a00929c1":"# Data Cleaning\ntrain.drop(['County','Province_State'],axis=1,inplace=True)\ntest.drop(['County','Province_State'],axis=1,inplace=True)\n\n# Changing the Time Format\ntrain['Date']=pd.to_datetime(train['Date'])\ntrain['Month']=train['Date'].apply(lambda x :x.month)\ntrain['Day']=train['Date'].apply(lambda x :x.day)\ntrain.drop(['Date'],axis=1,inplace=True)\n\ntest['Date']=pd.to_datetime(test['Date'])\ntest['Month']=test['Date'].apply(lambda x :x.month)\ntest['Day']=test['Date'].apply(lambda x :x.day)\ntest.drop(['Date'],axis=1,inplace=True)\ntrain.head(3)","b1e71004":"# For Country\nle1=LabelEncoder()\nle1.fit(train['Country_Region'])\ntrain['Encoded_Country']=le1.transform(train['Country_Region'])\n\n# For Target\nle2=LabelEncoder()\nle2.fit(train['Target'])\ntrain['Encoded_Target']=le2.transform(train['Target'])\ntrain.head(3)","1c1ef572":"y=train['TargetValue']\nX=train[['Encoded_Country','Encoded_Target','Weight','Month','Day']]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","d84139d9":"rf=RandomForestRegressor()\nrf.fit (X_train,y_train)\npredictions=rf.predict(X_test)\n\nprint(\"MAE is \", metrics.mean_absolute_error(y_test,predictions))\nprint(\"MSE is \", metrics.mean_squared_error(y_test,predictions))\nprint(\"RMSE is \", np.sqrt(metrics.mean_squared_error(y_test,predictions)))","0fc07d1d":"plt.figure(figsize=(8,6))\nplt.plot(y_test,y_test,color='r')\nplt.scatter(y_test,predictions,color='b')\nplt.xlabel('Actual Target Value',fontsize=15)\nplt.ylabel('Predicted Target Value',fontsize=15)\nplt.title('Actual vs. Predicted Target Value',fontsize=20)\nplt.show()","f95796ea":"metrics.r2_score(y_test,predictions)","a63b17a4":"# Country\nle3=LabelEncoder()\nle3.fit(test['Country_Region'])\ntest['Encoded_Country']=le3.transform(test['Country_Region'])\n\n# Target\nle4=LabelEncoder()\nle4.fit(test['Target'])\n\ntest['Encoded_Target']=le4.transform(test['Target'])\ntest=test[['Encoded_Country','Encoded_Target','Weight','Month','Day']]","a8d0a729":"pred=rf.predict(test)","ced9a359":"test_1=pd.read_csv('..\/input\/covid19-global-forecasting-week-5\/test.csv')\noutput=pd.DataFrame({'Id':test_1['ForecastId'], 'TargetValue':pred})\n\na=output.groupby(['Id']).quantile(q=0.05).reset_index()\nb=output.groupby(['Id']).quantile(q=0.5).reset_index()\nc=output.groupby(['Id']).quantile(q=0.95).reset_index()\n\na.columns=['Id','q0.05']\nb.columns=['Id','q0.5']\nc.columns=['Id','q0.95']\na['q0.5']=b['q0.5']\na['q0.95']=c['q0.95']\nsub=pd.melt(a, id_vars=['Id'], value_vars=['q0.05','q0.5','q0.95'])\n\nsub['variable']=sub['variable'].apply(lambda x: x.replace('q',''))\nsub['var']=sub['variable'].apply(lambda x: str(x))\nsub['id']=sub['Id'].apply(lambda x: str(x))\nsub['ForecastId_Quantile']=sub['id']+'_'+sub['var']\nsub.drop(['Id','variable','var','id'],axis=1,inplace=True)\nsub.columns=['TargetValue','ForecastId_Quantile']\nsub=sub[['ForecastId_Quantile','TargetValue']]","1662335e":"sub.to_csv(\"submission.csv\",index=False)","04b6f5f1":"sub","a6dc8355":"### Importing Libraries","9ccaa4b3":"### Train test Split","f9f3d519":"### Regression with Random Forest Regressor","b58011d7":"## Preprocessing the Test Dataset","26605369":"### Label Encoding","f224a475":"### Prediction","7449f71d":"# PART.2 - Prediction with Random Forest Regressor","68d55bc4":"quantile(): Bu s\u0131kl\u0131k da\u011f\u0131l\u0131m\u0131n\u0131 e\u015fit gruplara b\u00f6len, her birinin toplam pop\u00fclasyonun ayn\u0131 b\u00f6l\u00fcm\u00fcn\u00fc i\u00e7eren bir varyasyon elde etmek istedim.<br>\n\n--------\nquantile(): In each of any set of values of a variate which divide a frequency distribution into equal groups, each containing the same fraction of the total population.","3f92ae3d":"### Label Encoding","d8a82c85":"### Submission"}}