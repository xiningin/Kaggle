{"cell_type":{"097b9ba9":"code","51ac0f61":"code","7161e559":"code","96e510ce":"code","63320bac":"code","73064388":"code","82223bec":"code","9c6d6684":"markdown"},"source":{"097b9ba9":"import os\nimport numpy\nimport pandas as pd\nimport wgs_ecef","51ac0f61":"!ls ..\/input\/","7161e559":"gsdc_position_shift = pd.read_csv('..\/input\/gsdc-position-shift\/submission.csv')\ngsdc_phones_mean_prediction = pd.read_csv('..\/input\/gsdc-phones-mean-prediction\/submission.csv')\ngoogle_smartphone_decimeter_challenge = pd.read_csv('..\/input\/device-eda-interpolate-by-removing-device-en-ja\/submission.csv')","96e510ce":"import numpy as np\n\nblend_weights_lat = {\n    \"gsdc-phones-mean-prediction\": (7.5 + 7.625) \/ 2 + 0.0625 + 0.0625\/2 - 0.0625\/4 + 0.0625\/8,\n    \"device-eda-interpolate-by-removing-device-en-ja\":  (2.25 + 2.5) \/ 2,\n    \"gsdc-position-shift\":  0.75 - 0.125,\n}\n\n\nblend_weights_long = {\n    \"gsdc-phones-mean-prediction\": (7.5 + 7.625) \/ 2 + 0.0625  + 0.0625\/2 - 0.0625\/4 + 0.0625\/8,\n    \"device-eda-interpolate-by-removing-device-en-ja\":(2.25 + 2.5) \/ 2,\n    \"gsdc-position-shift\": 0.75 - 0.125,\n}\n\nlat_norm = sum(blend_weights_lat.values())\nlong_norm = sum(blend_weights_long.values())\n\nblend = gsdc_phones_mean_prediction\n# blend['millisSinceGpsEpoch'] = (\n#     gsdc_position_shift['millisSinceGpsEpoch'] * blend_weights[\"gsdc-position-shift\"]\/norm +\n#     gsdc_phones_mean_prediction['millisSinceGpsEpoch'] * blend_weights[\"gsdc-phones-mean-prediction\"]\/norm +\n#     google_smartphone_decimeter_challenge['millisSinceGpsEpoch'] * blend_weights[\"device-eda-interpolate-by-removing-device-en-ja\"]\/norm\n# )\n\n\nblend['latDeg'] = (\n    gsdc_position_shift['latDeg'] **2 * blend_weights_lat[\"gsdc-position-shift\"]\/lat_norm +\n    gsdc_phones_mean_prediction['latDeg'] **2 * blend_weights_lat[\"gsdc-phones-mean-prediction\"]\/lat_norm +\n    google_smartphone_decimeter_challenge['latDeg']**2  * blend_weights_lat[\"device-eda-interpolate-by-removing-device-en-ja\"]\/lat_norm \n)**0.5\n\nblend['lngDeg'] = (\n    gsdc_position_shift['lngDeg'] * blend_weights_long[\"gsdc-position-shift\"]\/long_norm +\n    gsdc_phones_mean_prediction['lngDeg'] * blend_weights_long[\"gsdc-phones-mean-prediction\"]\/long_norm +\n    google_smartphone_decimeter_challenge['lngDeg'] * blend_weights_long[\"device-eda-interpolate-by-removing-device-en-ja\"]\/long_norm \n)\n\n","63320bac":"(4**2)**0.5","73064388":"blend['millisSinceGpsEpoch'] = blend['millisSinceGpsEpoch'].astype(np.int64)","82223bec":"blend.to_csv(\"submission.csv\", index=False)","9c6d6684":"# Average top public notebooks\n\nWeighted mean in cartesian coordinates at equal altitude.\n\n**All credit to the authors of those notebooks; please look at their work:**\n* [GSDC phones mean prediction](https:\/\/www.kaggle.com\/t88take\/gsdc-phones-mean-prediction)\n* [device EDA & Interpolate by removing device[en,ja]](https:\/\/www.kaggle.com\/columbia2131\/device-eda-interpolate-by-removing-device-en-ja)\n* [GSDC: Position shift](https:\/\/www.kaggle.com\/wrrosa\/gsdc-position-shift)"}}