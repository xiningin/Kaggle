{"cell_type":{"ed775234":"code","f9a85e88":"code","3923a86c":"code","d685095b":"code","5cd871cf":"code","e1e06bf6":"code","15e55ee0":"code","f3d761ee":"code","fc64186c":"code","49d9bb24":"code","15f105ba":"code","b81fa31b":"code","8b76fb6d":"code","e236a128":"code","ee3c2119":"code","282cdb67":"code","851f6fc6":"code","2dc3e9a5":"code","1f6bd7af":"code","9d452804":"code","ce5f75a7":"code","b033d330":"code","870a092b":"code","d1db654f":"code","f989aaaf":"code","0674b5c7":"code","d30e1ea3":"code","cd9d0a1f":"markdown","0d48778e":"markdown","868e1ecf":"markdown","8b8820c4":"markdown","21764cd2":"markdown","cdadaf99":"markdown","8b9a1bbf":"markdown","3c575823":"markdown","b1b5e2e2":"markdown","7ee03582":"markdown","93703ccb":"markdown","88438ed9":"markdown","82b01cdb":"markdown","c026f7ca":"markdown","3785c28f":"markdown"},"source":{"ed775234":"# For algorithm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\n\n# For preprocessing\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np","f9a85e88":"# Importing the dataset\ndata = pd.read_csv('\/kaggle\/input\/creditcardfraud\/creditcard.csv')","3923a86c":"# Print first five data\ndata.head()","d685095b":"# Print last five data\ndata.tail()","5cd871cf":"# Get the information of the data\ndata.info()","e1e06bf6":"# Checking the number of missing values in each column\ndata.isnull().sum()","15e55ee0":"# Check the distribution of legit and fraudulent transactions\ndata['Class'].value_counts()","f3d761ee":"# Separating data for analysis\nlegit = data[data.Class == 0]\nfraud = data[data.Class == 1]","fc64186c":"print(legit.shape)\nprint(fraud.shape)","49d9bb24":"# Statistical measurment for legit\nlegit.Amount.describe()","15f105ba":"# Statistical measurment for fraud\nfraud.Amount.describe()","b81fa31b":"# Comparing the values for both transactions\ndata.groupby('Class').mean()","8b76fb6d":"legit_sample = legit.sample(n=492)","e236a128":"df_new = pd.concat([legit_sample, fraud], axis=0)","ee3c2119":"df_new.head()","282cdb67":"df_new.tail()","851f6fc6":"df_new['Class'].value_counts()","2dc3e9a5":"df_new.groupby('Class').mean()","1f6bd7af":"X = df_new.drop(columns='Class', axis=1) # features\ny = df_new['Class'] # target","9d452804":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=2)","ce5f75a7":"print(X.shape, X_train.shape, X_test.shape)","b033d330":"model = LogisticRegression()","870a092b":"model.fit(X_train, y_train)","d1db654f":"# Accuracy on train data\nX_train_prediction = model.predict(X_train)\ndata_train_accuracy = accuracy_score(X_train_prediction, y_train)","f989aaaf":"print(\"Accuracy on training data:\", data_train_accuracy)","0674b5c7":"# Accuracy on test data\nX_test_prediction = model.predict(X_test)\ndata_test_accuracy = accuracy_score(X_test_prediction, y_test)","d30e1ea3":"print(\"Accuracy on test data:\", data_test_accuracy)","cd9d0a1f":"### Accuracy Score","0d48778e":"## Check the distribution of legit and fraudulent transactions","868e1ecf":"## Checking Common information of the datasets","8b8820c4":"## Importing modules and datasets","21764cd2":"## Splitting the data into features and targets","cdadaf99":"## Concatenating two dataframes","8b9a1bbf":"From the output the data is far from balanced, to make it balance we should do this\n\n* 0 --> Normal Transaction\n* 1 --> Fraudulent Transaction","3c575823":"## Statistical measurement from the data","b1b5e2e2":"## Under-Sampling\n\nBuild a sample dataset containing similar distributions of normal transactions and fraudulent transactions\n\nFraudulent transactions --> 492","7ee03582":"It's far more better right than before taking sample in legit value","93703ccb":"If accuracy on training data and on test data is far different, perhaps the model is underfitting or overfitting\n\nBut in the model that I build, the different is not too far","88438ed9":"## Model Training","82b01cdb":"### Logistic Regression","c026f7ca":"# Credit Card Fraud Detection\n\nTutorial: [Siddhardhan](https:\/\/www.youtube.com\/watch?v=NCgjcHLFNDg)","3785c28f":"## Model Evaluation"}}