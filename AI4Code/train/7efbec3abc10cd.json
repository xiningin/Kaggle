{"cell_type":{"828dea84":"code","3ff0c062":"code","7a5d0c46":"code","f955a7f9":"code","ebc7e4ef":"code","dd99c077":"code","14b52fcd":"code","27f9b18c":"code","720300d1":"code","6b6f8040":"code","24bf8383":"code","7355610a":"code","6e3b69d1":"code","d91df7b2":"code","c9ced2c0":"code","61836bbe":"code","b1138ab8":"code","0d102048":"code","6edafb61":"code","6e599e94":"code","9e659ef5":"code","468d8fee":"code","2fb2fd49":"code","2c6a1c30":"code","f495f88f":"code","8ab11824":"code","4844def1":"code","ad2367bc":"code","fee6763f":"code","68d7c2e3":"code","16621c98":"code","c20af73e":"code","f0286d15":"code","79dcddfd":"code","c3643dba":"code","b7376152":"code","0c58757a":"code","2bdffe3e":"code","b31ffb75":"code","05aa09f1":"code","1c49e2fb":"code","d547efb3":"code","bb0d9746":"code","8b76e444":"markdown","32b0ff29":"markdown","52af1430":"markdown","91f881bb":"markdown","b6855815":"markdown","53345721":"markdown","26b30e43":"markdown","02545f55":"markdown","78d2688a":"markdown","0b149607":"markdown","1f8e5196":"markdown","846fdedf":"markdown","0764f97b":"markdown","592c2b0d":"markdown","679ed5f5":"markdown","273676f3":"markdown","a34bbb32":"markdown","5b80d2d3":"markdown","0c06f862":"markdown","752021f3":"markdown"},"source":{"828dea84":"# Import Packages\nimport os\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.offline as py\nimport gc    \n\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n\n# list all files\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))# import packages","3ff0c062":"# Create function that counts the observations in each categorical bin using bars\ndef graph_objects(frame, hue=None):\n    \n    if hue is not None:\n        hue = hue\n        \n    df = frame.dtypes\n    df.index.name = 'columns'\n    df = pd.DataFrame(df, columns=['dtype'])\n    df = df.reset_index()\n    df = df[df['dtype'] == 'object']\n    list_objects = df['columns'].tolist()\n    \n    for obj in list_objects:\n        plt.figure(figsize=(11,5))\n        plot = sns.countplot(obj, data=frame, hue=hue)\n        plt.xticks(rotation=90)","7a5d0c46":"pos_cash = pd.read_csv('..\/input\/home-credit-default-risk\/POS_CASH_balance.csv')\npos_cash.drop(['SK_ID_PREV','SK_ID_CURR'], axis = 1, inplace=True)\nprint('POS_CASH Shape:', pos_cash.shape)\npos_cash.head(5)","f955a7f9":"# Sample of 5000 rows from the POS_CASH data to save time\npos_5K = pos_cash.sample(n=5000, random_state=1)\npos_5K = pos_5K.copy()\ndel pos_cash\ngc.collect()","ebc7e4ef":"# Find missing values in POS_CASH\ncount = pos_5K.isnull().sum().sort_values(ascending=False)\npercentage = ((pos_5K.isnull().sum()\/len(pos_5K)*100)).sort_values(ascending=False)\n\nmissing_pos = pd.concat([count, percentage], axis=1, keys=['Count','Percentage'])\nprint('Count and percentage of missing values for POS_CASH Dataset:')\nmissing_pos.head(8)","dd99c077":"#Countplot shows the counts of observations in each categorical columns in POS_CASH data\ngraph_objects(pos_5K)","14b52fcd":"#Show  Distribution of CNT_INSTALNENT in POS_CASH data\nplt.figure(figsize=(12,5))\nplt.title(\"Distribution of CNT_INSTALMENT\")\nax = sns.distplot(pos_5K.CNT_INSTALMENT.dropna())\nplt.show()","27f9b18c":"#Show Distribution of CNT_INSTALNENT_FURURE in POS_CASH data\nplt.figure(figsize=(12,5))\nplt.title(\"Distribution of CNT_INSTALMENT_FUTURE\")\nax = sns.distplot(pos_5K.CNT_INSTALMENT_FUTURE.dropna())\nplt.show()","720300d1":"#Visualizing the relationships between CNT_INSTALMENT and CNT_INSTALMENT_FUTRUE Vs. NAME_CONTRACT_STATUS\nplt.figure(figsize=(12,5))\nax= sns.pairplot(pos_5K, vars = ['CNT_INSTALMENT', 'CNT_INSTALMENT_FUTURE'], hue='NAME_CONTRACT_STATUS');\nplt.show()","6b6f8040":"# Correlation table\ncorrs = pos_5K.corr()\nplt.figure(figsize=(20,20))\nsns.heatmap(pos_5K.corr(), annot = True, cmap = \"BuPu\", alpha = 0.5, fmt = \".4f\", cbar = False)\nplt.show()\n\nannot = True   #gives you the numbers instead of just the colors.\ncmap = \"BuPu\"  #is a blue\/purple color scheme that I like to use\nalpha = 0.5    #tones down the intensity of the colors\nfmt = \".4f\"    #formats the numbers to four decimal places\ncbar = False   #turns off the scale bar on the right\n\ndel pos_5K\ngc.collect()","24bf8383":"bureau = pd.read_csv('..\/input\/home-credit-default-risk\/bureau.csv')\nbureau.drop(['SK_ID_BUREAU','SK_ID_CURR'], axis = 1, inplace=True)\nprint('Bureau Data Shape:', bureau.shape)\nbureau.head(5)","7355610a":"#Sample of 5000 rows from the bureau data to save time\nbureau_5K = bureau.sample(n=5000, random_state=1)\nbureau_5K = bureau_5K.copy()\ndel bureau\ngc.collect()","6e3b69d1":"# Find missing values in bureau\ncount = bureau_5K.isnull().sum().sort_values(ascending=False)\npercentage = ((bureau_5K.isnull().sum()\/len(bureau_5K)*100)).sort_values(ascending=False)\n\nmissing_bur = pd.concat([count, percentage], axis=1, keys=['Count','Percentage'])\nprint('Count and percentage of missing values for Bureau Dataset:')\nmissing_bur.head(17)","d91df7b2":"#Countplot shows the counts of observations in each categorical columns in bureau data\ngraph_objects(bureau_5K)","c9ced2c0":"#Visualizing the relationships between AMT_ANNUITY,AMT_CREDIT_SUM_LIMIT Vs. CREDIT_ACTIVE\nplt.figure(figsize=(12,5))\nax = sns.pairplot(bureau_5K, vars = ['AMT_ANNUITY','AMT_CREDIT_SUM_LIMIT'], hue='CREDIT_ACTIVE', size=2.5);\nplt.xlim((0,1000000))\nplt.show()","61836bbe":"#Visualizing the relationships between AMT_ANNUITY,AMT_CREDIT_SUM_LIMIT Vs. CREDIT_CURRENCY\nplt.figure(figsize=(12,5))\nax = sns.pairplot(bureau_5K, vars = ['AMT_ANNUITY','AMT_CREDIT_SUM_LIMIT'], hue='CREDIT_CURRENCY', size=2.5);\nplt.xlim((0,1000000))\nplt.show()","b1138ab8":"#Visualizing the relationships between AMT_ANNUITY,AMT_CREDIT_SUM_LIMIT Vs. CREDIT_TYPE\nplt.figure(figsize=(12,5))\nax = sns.pairplot(bureau_5K, vars = ['AMT_ANNUITY','AMT_CREDIT_SUM_LIMIT'], hue='CREDIT_TYPE', size=2.5);\nplt.xlim((0,1000000))\nplt.show()","0d102048":"# Correlation table\ncorrs = bureau_5K.corr()\nplt.figure(figsize=(20,20))\nsns.heatmap(bureau_5K.corr(), annot = True, cmap = \"BuPu\", alpha = 0.5, fmt = \".4f\", cbar = False)\nplt.show()\n\nannot = True   #gives you the numbers instead of just the colors.\ncmap = \"BuPu\"  #is a blue\/purple color scheme that I like to use\nalpha = 0.5    #tones down the intensity of the colors\nfmt = \".4f\"    #formats the numbers to four decimal places\ncbar = False   #turns off the scale bar on the right\n\ndel bureau_5K\ngc.collect()","6edafb61":"bur_balance= pd.read_csv('..\/input\/home-credit-default-risk\/bureau_balance.csv')\nbur_balance.drop(['SK_ID_BUREAU'], axis = 1, inplace=True)\nprint('Bureau Balance Data Shape:', bur_balance.shape)\nbur_balance.head(5)","6e599e94":"#Sample of 5000 rows from the bureau balance data to save time\nburbal_5K = bur_balance.sample(n=5000, random_state=1)\nburbal_5K = burbal_5K.copy()\ndel bur_balance\ngc.collect()","9e659ef5":"# Find missing values in bureau balance\ncount = burbal_5K.isnull().sum().sort_values(ascending=False)\npercentage = ((burbal_5K.isnull().sum()\/len(burbal_5K)*100)).sort_values(ascending=False)\n\nmissing_bal = pd.concat([count, percentage], axis=1, keys=['Count','Percentage'])\nprint('Count and percentage of missing values for Bureau Balance Dataset:')\nmissing_bal.head(3)","468d8fee":"#Countplot shows the counts of observations in each categorical columns in bureau balance data\ngraph_objects(burbal_5K)","2fb2fd49":"#Show MONTHS_BALANCE Distribution in bureau balance Data\nplt.figure(figsize=(12,5))\nplt.title(\"Distribution of MONTHS_BALANCE\")\nax = sns.distplot(burbal_5K.MONTHS_BALANCE.dropna())\nplt.show()","2c6a1c30":"#Visualizing the relationships between MONTHS_BALANCE Vs. STATUS\nplt.figure(figsize=(12,5))\nax = sns.pairplot(burbal_5K, vars = ['MONTHS_BALANCE'],hue='STATUS');\nplt.show()\n\ndel burbal_5K\ngc.collect()","f495f88f":"credit = pd.read_csv('..\/input\/home-credit-default-risk\/credit_card_balance.csv')\ncredit.drop(['SK_ID_PREV','SK_ID_CURR'], axis = 1, inplace=True)\nprint('Testing Credit Balance Shape:', credit.shape)\ncredit.head(5)","8ab11824":"#Sample of 5000 rows from the credit card balance data to save time\ncredit_5K = credit.sample(n=5000, random_state=1)\ncredit_5K = credit_5K.copy()\ndel credit\ngc.collect()","4844def1":"# Find missing values in credit card balance \ncount = credit_5K.isnull().sum().sort_values(ascending=False)\npercentage = ((credit_5K.isnull().sum()\/len(credit_5K)*100)).sort_values(ascending=False)\n\nmissing_cred = pd.concat([count, percentage], axis=1, keys=['Count','Percentage'])\nprint('Count and percentage of missing values for Credit Balance Dataset:')\nmissing_cred.head(23)","ad2367bc":"#Countplot shows the counts of observations in each categorical columns in credit balance data\ngraph_objects(credit_5K)","fee6763f":"#Visualizing the relationships between AMT_PAYMENT_CURRENT and AMT_DRAWINGS_ATM_CURRENT Vs. NAME_CONTRACT_STATUS\nplt.figure(figsize=(12,5))\nax = sns.pairplot(credit_5K, vars = ['AMT_PAYMENT_CURRENT','AMT_DRAWINGS_ATM_CURRENT'], hue='NAME_CONTRACT_STATUS');\nplt.show()","68d7c2e3":"# Correlation table\ncorrs = credit_5K.corr()\nplt.figure(figsize=(20,20))\nsns.heatmap(credit_5K.corr(), annot = True, cmap = \"BuPu\", alpha = 0.5, fmt = \".4f\", cbar = False)\nplt.show()\n\nannot = True   #gives you the numbers instead of just the colors.\ncmap = \"BuPu\"  #is a blue\/purple color scheme that I like to use\nalpha = 0.5    #tones down the intensity of the colors\nfmt = \".4f\"    #formats the numbers to four decimal places\ncbar = False   #turns off the scale bar on the right\n\ndel credit_5K\ngc.collect()","16621c98":"instal = pd.read_csv('..\/input\/home-credit-default-risk\/installments_payments.csv')\ninstal.drop(['SK_ID_PREV','SK_ID_CURR'], axis = 1, inplace=True)\nprint('Testing Installments Payments Shape:', instal.shape)\ninstal.head(5)","c20af73e":"#Sample of 5000 rows from the instalments payments data to save time\ninstal_5K = instal.sample(n=5000, random_state=1)\ninstal_5K = instal_5K.copy()\ndel instal\ngc.collect()","f0286d15":"# Find missing values in installments payments\ncount = instal_5K.isnull().sum().sort_values(ascending=False)\npercentage = ((instal_5K.isnull().sum()\/len(instal_5K)*100)).sort_values(ascending=False)\nmissing_inst = pd.concat([count, percentage], axis=1, keys=['Count','Percentage'])\nprint('Count and percentage of missing values for Instalment Payments Dataset:')\nmissing_inst.head()","79dcddfd":"#Show DAYS_ENTRY_PAYMENT Distribution in installements payments Data\nplt.figure(figsize=(12,5))\nplt.title(\"Distribution of DAYS_ENTRY_PAYMENT\")\nax = sns.distplot(instal_5K.DAYS_ENTRY_PAYMENT.dropna())\nplt.show()","c3643dba":"#Show AMT_PAYMENT Distribution in installements payments Data\nplt.figure(figsize=(12,5))\nplt.title(\"Distribution of AMT_PAYMENT\")\nax = sns.distplot(instal_5K.AMT_PAYMENT.dropna())\nplt.show()","b7376152":"# Correlation table\ncorrs = instal_5K.corr()\nplt.figure(figsize=(20,20))\nsns.heatmap(instal_5K.corr(), annot = True, cmap = \"BuPu\", alpha = 0.5, fmt = \".4f\", cbar = False)\nplt.show()\n\nannot = True   #gives you the numbers instead of just the colors.\ncmap = \"BuPu\"  #is a blue\/purple color scheme that I like to use\nalpha = 0.5    #tones down the intensity of the colors\nfmt = \".4f\"    #formats the numbers to four decimal places\ncbar = False   #turns off the scale bar on the right\n\ndel instal_5K\ngc.collect()","0c58757a":"prev_app= pd.read_csv('..\/input\/home-credit-default-risk\/previous_application.csv')\nprev_app.drop(['SK_ID_PREV','SK_ID_CURR'], axis = 1, inplace=True)\nprint('Testing Instalment Payments Shape:', prev_app.shape)\nprev_app.head(20)","2bdffe3e":"# Sample of 5000 rows from the previous application data to save time\nprev_5K = prev_app.sample(n=5000, random_state=1)\nprev_5K = prev_5K.copy()\ndel prev_app\ngc.collect()","b31ffb75":"# Find missing values in previous application\ncount = prev_5K.isnull().sum().sort_values(ascending=False)\npercentage = ((prev_5K.isnull().sum()\/len(prev_5K)*100)).sort_values(ascending=False)\nmissing_prev = pd.concat([count, percentage], axis=1, keys=['Count','Percentage'])\nprint('Count and percentage of missing values for Previous Applications Dataset:')\nmissing_prev.head(10)","05aa09f1":"#Countplot shows the counts of observations in each categorical columns in previous application data\ngraph_objects(prev_5K)","1c49e2fb":"#Visualizing the relationships between AMT_DOWN_PAYMENT, AMT_GOODS_PRICE, AMT_ANNUITY Vs. NAME_CASH_LOAN_PURPOSE\nplt.figure(figsize=(12,5))\nax = sns.pairplot(prev_5K, vars = ['AMT_DOWN_PAYMENT','AMT_GOODS_PRICE','AMT_ANNUITY'], hue='NAME_CASH_LOAN_PURPOSE');\nplt.xlim((0,1000000))\nplt.show()","d547efb3":"#Visualizing the relationships between AMT_DOWN_PAYMENT, AMT_GOODS_PRICE, AMT_ANNUITY Vs. NAME_CONTRACT_STATUS\nplt.figure(figsize=(12,5))\nax = sns.pairplot(prev_5K, vars = ['AMT_DOWN_PAYMENT','AMT_GOODS_PRICE','AMT_ANNUITY'], hue='NAME_CONTRACT_STATUS');\nplt.show()","bb0d9746":"# Correlation table\ncorrs = prev_5K.corr()\nplt.figure(figsize=(20,20))\nsns.heatmap(prev_5K.corr(), annot = True, cmap = \"BuPu\", alpha = 0.5, fmt = \".4f\", cbar = False)\nplt.show()\n\nannot = True   #gives you the numbers instead of just the colors.\ncmap = \"BuPu\"  #is a blue\/purple color scheme that I like to use\nalpha = 0.5    #tones down the intensity of the colors\nfmt = \".4f\"    #formats the numbers to four decimal places\ncbar = False   #turns off the scale bar on the right\n\ndel prev_5K\ngc.collect()","8b76e444":"* AMT_PAYMENT has close to 0 paymens.","32b0ff29":"* AMT_ANNUITY and AMT_CREDIT_SUM_LIMIT do not have signficate replationshp.\n* Accounting customers CREDIT_CURRENCY, currency 1 is much common than any other options. ","52af1430":"# Bureau EDA","91f881bb":"* AMT_ANNUITY and AMT_DOWN_PAYMENT are highly corrleated with a postive linear slope.\n* AMT_ANNUITY and AMT_GOODS_PRICE are highly corrleated with a postive linear slope.\n* AMT_GOODS_PRICE and AMT_DOWN_PAYMENT are highly corrleated with a postive linear slope.\n* Accounting customers NAME_CASH_LOAN_PURPOSE, XNA is much common than any other options. ","b6855815":"# POS_CASH EDA","53345721":"# Bureau Balance EDA","26b30e43":"* MONTHS_BALANCE and STATUS are highly correlated.","02545f55":"* DAYS_ENTRY_PAYMENTS is inconsistent since the data includes negative values. ","78d2688a":"* AMT_PAYMENT_CURRENT and AMT_DRAWINGS_ATM_CURRENT do not have signficate replationshp.\n* Accounting customers NAME_CONTRACT_STATUS, active is much common than any other options.","0b149607":"# Previous Appliations EDA","1f8e5196":"* AMT_ANNUITY and AMT_CREDIT_SUM_LIMIT do not have signficate replationshp.\n* Accounting to customers CREDIT_ACTIVE, active is much common than any other options. ","846fdedf":"# Credit Card Balance EDA","0764f97b":"* CNT_INSTALMENT and CNT_INSTALMENT_FUTURE are highly corrleated with a postive linear slope. \n* Accunting customers NEW_CONTRACT_STATUS, active is much common than any another options. ","592c2b0d":"* AMT_ANNUITY and AMT_CREDIT_SUM_LIMIT do not have signficate replationshp.\n* Accounting customers CREDIT_TYPE, credit card is much common than any  other options.","679ed5f5":"# Home Credit Default Risk - Team 3 (Kahsai, Nichols, Pellerito)","273676f3":"* Most of the CNT_INSTALMENT_FUTURE payments falls in the bracket of 0-20. ","a34bbb32":"* MONTHS_BALANCE is inconsistent since the data includes negative values.","5b80d2d3":"# Installments Payments EDA","0c06f862":"* Most of the CNT_INSTALMENT payments falls in the bracket of 0-10.","752021f3":"* AMT_ANNUITY and AMT_DOWN_PAYMENT are highly corrleated with a postive linear slope.\n* AMT_ANNUITY and AMT_GOODS_PRICE are highly corrleated with a postive linear slope.\n* AMT_GOODS_PRICE and AMT_DOWN_PAYMENT are highly corrleated with a postive linear slope.\n* Accounting customers NAME_CONTRACT_STATUS, approved is much common than any other options. "}}