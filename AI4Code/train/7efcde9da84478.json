{"cell_type":{"e323b384":"code","40072b21":"code","f8efa00d":"code","09d8cf3a":"code","1ad6233b":"code","235e197c":"code","a4cc14f9":"code","e7635c6b":"code","6a444537":"code","13dd0b9f":"code","2da297b8":"code","964d653e":"code","ad4b6371":"code","710cd02f":"code","05b34de1":"code","75b7d1f3":"code","f81d9d71":"code","9d3f973c":"code","54f0bcec":"code","eb2de86c":"code","fb11fcdd":"code","44f7b242":"code","c98c108b":"code","948bf7fe":"code","ca51fd76":"code","d99c36e9":"code","28b6d674":"code","02fde10a":"code","0179b19e":"code","c3f34dff":"markdown","7a594048":"markdown","9ad11d31":"markdown","eef1f5ff":"markdown","8af516fd":"markdown"},"source":{"e323b384":"#import library\nimport numpy as np\nimport math\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression, Ridge, Lasso\nfrom sklearn import metrics","40072b21":"df = pd.read_csv('..\/input\/steel-industry-energy-consumption\/Steel_industry_data.csv')","f8efa00d":"df.shape","09d8cf3a":"df.head()","1ad6233b":"df.columns","235e197c":"#rename attribute\ndf = df.rename(columns = {'Lagging_Current_Reactive.Power_kVarh' : 'Lagging_Current_Reactive_Power_kVarh', \n                          'CO2(tCO2)' : 'CO2'})","a4cc14f9":"df.describe()","e7635c6b":"df.info()","6a444537":"#correlation of each variable\ndf.corr()","13dd0b9f":"#visualize the correlation using pearson correlation\nplt.figure(figsize = (8,6))\nsns.heatmap(df.corr(), annot = True, cmap = 'YlGnBu')\nplt.title(\"Pearson Correlation\", fontsize = 15, color = 'b', pad = 12, loc = 'center')\nplt.show()","2da297b8":"#analyze the most energy consumption based on time\nmost_energy_consumption = pd.pivot_table(df, index = 'date', values = 'Usage_kWh', aggfunc = {'Usage_kWh' : np.max})\nmost_energy_consumption.head(10)","964d653e":"#visualize the most energy consumption on time\nchart = most_energy_consumption[:40].sort_values(by = 'Usage_kWh', ascending = False).plot(kind = 'line', color = 'tomato')\nchart.set_xticklabels(chart.get_xticklabels(), rotation = 45)\nplt.title('The Most Energy Consumption', fontsize = 15, color = 'b', loc = 'center', pad = 12)\nplt.xlabel('Date')\nplt.ylabel('Energy Consumption')\nplt.show()","ad4b6371":"#analyze the factor of energy consumption\nchart = df.boxplot(column = ['Usage_kWh', 'Lagging_Current_Reactive_Power_kVarh', 'Leading_Current_Reactive_Power_kVarh',\n                    'CO2', 'Lagging_Current_Power_Factor', 'Leading_Current_Power_Factor', 'NSM'])\nchart.set_xticklabels(chart.get_xticklabels(), rotation = 90)\nplt.title('The Factor of Energy Consumption in Steel Industry', fontsize = 15, color = 'r', pad = 12)\nplt.xlabel('Factors')\nplt.ylabel('Count')\nplt.show()","710cd02f":"#analyze of energy consumption and NSM based on load type, day of week and week status\npd.pivot_table(df, index = ['Load_Type', 'Day_of_week', 'WeekStatus'], values = ['NSM', 'Usage_kWh'], \n               aggfunc = {'NSM' : np.mean, 'Usage_kWh' : np.mean})","05b34de1":"#analyze of energy consumption and NSM based on load type, day of week and week status\npd.pivot_table(df, index = ['Load_Type', 'Day_of_week', 'WeekStatus'], values = ['NSM', 'Usage_kWh'], \n               aggfunc = {'NSM' : np.mean, 'Usage_kWh' : np.mean})","75b7d1f3":"#visualize energy consumption based on load type\nplt.rcParams['figure.figsize'] = (15,5)\nplt.subplot(1, 2, 1)\nchart = df.groupby('Load_Type')['Usage_kWh'].mean().sort_values(ascending = False).plot(kind = 'bar', color = 'orangered')\nchart.set_xticklabels(chart.get_xticklabels(), rotation = 0)\nplt.title('Energy Consumption based on Load Type', fontsize = 15, color = 'b', pad = 12)\nplt.xlabel('Load Type')\nplt.ylabel('Energy Consumption')\n\n#visualize number of second from midnight based on load type\nplt.subplot(1, 2, 2)\nchart = df.groupby('Load_Type')['NSM'].mean().sort_values(ascending = False).plot(kind = 'bar', color = 'gold')\nchart.set_xticklabels(chart.get_xticklabels(), rotation = 0)\nplt.title('Number of Second from Midnight based on Load Type', fontsize = 15, color = 'b', pad = 12)\nplt.xlabel('Load Type')\nplt.ylabel('Number of Second from Midnight')\nplt.show()","f81d9d71":"#visualize energy consumption based on week status and load type\nplt.rcParams['figure.figsize'] = (7,5)\nchart = df.groupby(['WeekStatus','Load_Type'])['Usage_kWh'].mean().unstack().plot(kind = 'bar')\nchart.set_xticklabels(chart.get_xticklabels(), rotation = 0)\nplt.title('Energy Consumption based on Week Status and Load Type', fontsize = 15, pad = 15, color = 'b')\nplt.xlabel('Week Status')\nplt.ylabel('Energy Consumption')\nplt.legend(bbox_to_anchor = (1.3, 1), borderaxespad = 0)\nplt.show()","9d3f973c":"#visualize energy consumption based on day of week and load type\nchart = df.groupby(['Day_of_week','Load_Type'])['Usage_kWh'].mean().unstack().plot(kind = 'bar')\nchart.set_xticklabels(chart.get_xticklabels(), rotation = 45)\nplt.title('Energy Consumption based on Day of Week and Load Type', fontsize = 15, pad = 15, color = 'b')\nplt.xlabel('Day of Week')\nplt.ylabel('Energy Consumption')\nplt.legend(bbox_to_anchor = (1.01, 1), borderaxespad = 0)\nplt.show()","54f0bcec":"#visualize number of second from midnight based on week status and load type\nchart = df.groupby(['WeekStatus','Load_Type'])['NSM'].mean().unstack().plot(kind = 'bar')\nchart.set_xticklabels(chart.get_xticklabels(), rotation = 0)\nplt.title('Number of Second from Midnight based on Week Status and Load Type', fontsize = 15, pad = 15, color = 'b')\nplt.xlabel('Week Status')\nplt.ylabel('Number of Second from Midnight')\nplt.legend(bbox_to_anchor = (1.3, 1), borderaxespad = 0)\nplt.show()","eb2de86c":"#visualize number of second from midnight based on day of week and load type\nchart = df.groupby(['Day_of_week','Load_Type'])['NSM'].mean().unstack().plot(kind = 'bar')\nchart.set_xticklabels(chart.get_xticklabels(), rotation = 45)\nplt.title('Number of Second from Midnight based on Day of Week and Load Type', fontsize = 15, pad = 15, color = 'b')\nplt.xlabel('Day of Week')\nplt.ylabel('Number of Second from Midnight')\nplt.legend(bbox_to_anchor = (1.01, 1), borderaxespad = 0)\nplt.show()","fb11fcdd":"#distribution of each variable\ndf.hist(figsize = (15,10))\nplt.show()","44f7b242":"#indexing date\ndf = df.set_index('date')\n\n#handling categorical data\ndf = pd.get_dummies(df, drop_first = True)\ndf.head()","c98c108b":"#split data\nX = df.drop('Usage_kWh', axis = 1)\ny = df['Usage_kWh']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 42)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","948bf7fe":"#Linear Regression Model\nlr = LinearRegression()\n%time lr.fit(X_train, y_train)\nlr.score(X_test, y_test)","ca51fd76":"#Ridge Regression Model\nridge = Ridge(alpha = 0.5)\n%time ridge.fit(X_train, y_train)\nridge.score(X_test, y_test)","d99c36e9":"#Lasso Regression Model\nlasso = Lasso(alpha = 0.5)\n%time lasso.fit(X_train, y_train)\nlasso.score(X_test, y_test)","28b6d674":"#prediction\ny_pred = lr.predict(X_test)\nprint(y_pred)","02fde10a":"#check MAE, MSE and MSE\nprint('Mean Absolute Error : ', metrics.mean_absolute_error(y_test, y_pred))\nprint('Mean Squared Error : ', metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error : ', math.sqrt(metrics.mean_squared_error(y_test, y_pred)))","0179b19e":"#visualize model\nx = y_test\ny = y_pred\n\nplt.title('Linear Regression Model', fontsize = 15, color = 'g', pad = 12)\nplt.plot(x, y, 'o', color = 'r')\n\nm, b = np.polyfit(x, y, 1)\nplt.plot(x, m * x + b, color = 'darkblue')\nplt.xlabel('Actual')\nplt.ylabel('Predicted')\nplt.show()","c3f34dff":"# Regression Model","7a594048":"Linear Regression is very suitable model to predict of energy consumption from Steel Industry because has good accuracy score on 98% ","9ad11d31":"# Energy Usage Prediction of Steel Industry ","eef1f5ff":"# Data Extraction","8af516fd":"# Exploratory Data Analysis (EDA)"}}