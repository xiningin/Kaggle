{"cell_type":{"ca680e05":"code","2d72ad19":"code","c4775a89":"code","a1dd3fd4":"code","c63b3638":"code","65db5e11":"code","6640684e":"markdown","6b0df2aa":"markdown","873aa221":"markdown","1578193a":"markdown","87edb3f4":"markdown","0445313a":"markdown"},"source":{"ca680e05":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2d72ad19":"import matplotlib.pyplot as plt\nimport numpy as np\n%matplotlib inline\n","c4775a89":"height = np.array([30,24,8,38])\nx = np.array(['A','B','AB','O'])\nfig = plt.figure(figsize=(10,7))\nax = fig.add_axes([0,0,1,1])\nbarc = ax.bar(x=x,height=height)\nax.set_xlabel('Types of blood groups',color='r')\nax.set_ylabel('abundance',color='r')\n","a1dd3fd4":"labels = 'A', 'B', 'AB', 'O'\nsizes = [30, 24, 8, 38]\nexplode = (0, 0.1, 0, 0)  # only \"explode\" the 2nd slice (i.e. 'Hogs')\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()\n","c63b3638":"x = [5, 7, 8, 7, 2, 17, 2, 9, 4, 11, 12, 9, 6]\ny = [99, 86, 87, 88, 111, 86, 103, 87, 94, 78, 77, 85, 86]\nfig, ax = plt.subplots()\nax.scatter(x=x,y=y,color='darkred')\nax.set_xlabel('Acceleration')\nax.set_ylabel('speed')\nax.set_title('scatter plot',color='r')","65db5e11":"import numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsigma , miu=10,170\ndist = np.random.normal(miu,sigma,300)\nprint(abs(miu-np.mean(dist)))\nfig,ax = plt.subplots()\nax.hist(dist,bins=25,color='pink')","6640684e":"## A-Bar plot","6b0df2aa":"## B-pie chart","873aa221":"## We want to draw bar and circle diagrams for 100 people with different blood groups","1578193a":"## 2-scatter plot","87edb3f4":"## 3-histogram","0445313a":"## Graph vs. Histogram\nWhat is a chart bar?\nBar charts are one of the main methods of graphical representation in statistics. These values \u200b\u200bare used to display specific amounts of qualitative data on a horizontal axis and relative frequencies (or frequency or percentage) on a vertical axis. A bar with its height \/ length corresponding to the relative frequency shows any specific value and the bars are positioned so that they do not touch each other. The bar chart with the above configuration is the most common and is known as a vertical bar chart or a bar chart. But it is also possible to change the axes. In this case, the bars are horizontal.\nWhat is a histogram?\nThe histogram is another important graphical representation of the data and can be considered as an improvement from the bar chart. In a histogram, quantitative data classes are displayed on the horizontal axis, and the frequency (or relative frequency or percentage) of the classes is displayed on the y-axis. The vertical bar usually shows the frequency (or relative frequency or percentage) of the class, which is equal to its height. Unlike regular bar charts, the bars are placed to touch each other.\nThe variable on the X-axis can be a single group or a grouping. To group a value, distinct observation values \u200b\u200bare used to label the bars, each of which is located below its own bar. For finite grouping or shear point grouping, the lower class range (or, equivalently, the lower class shear points) is used to label the bars. Class or middle marks below the bars can also be used.\nOne of the most important differences in the variable used in the X-axis is. In a histogram, the variable is a small variable and can be continuous or discrete. And can be used to display density information about the dataset. In this case, the distances used on the x-axis may be different, and on the y-axis, the frequency density is specified. If the axis distance is X 1, the histogram is equal to the relative frequency diagram.\nWhat is the difference between a Bar Graph and a Histogram?\nMost importantly, a histology is an evolution of the bar chart, but not the same as a bar chart. A histogram is a type of bar chart, but bar charts are definitely not histological charts.\nBar charts are used to plot batch or qualitative data, while histograms are used to plot quantitative data with a range of data grouped into buckets or intervals.\nBar charts are used to compare variables while display charts are used to show the distribution of variables.\nBar charts are spaced between two strips while histology has no spacing between bars. This is because the x-axis is discrete in batch bar graphs, whereas, in histograms, they are discrete or slightly continuous.\n\u2022 Histogram is used to show variable density at intervals. In this case, the area of \u200b\u200bthe bar indicates the frequency of the variable.\nRectangular Histogram: A visual representation of data using bars of different heights. These types of charts are similar to bar charts, but a rectangular chart divides numbers into different categories, from which you can decide which category to choose!"}}