{"cell_type":{"b3c83042":"code","bbf5f349":"code","846cfea3":"code","831243f9":"code","c163a758":"code","3697c834":"code","fb4953a2":"code","9051166a":"code","de708794":"code","813674b4":"code","8265952c":"code","a7945299":"code","c570e2db":"code","24f709bd":"code","50647b56":"code","92674a8c":"code","da9e8976":"code","a849932a":"code","5d6121a8":"code","bf4f9951":"code","e443d1e0":"code","2ffc97e5":"code","bb62b9cc":"code","23219e33":"code","7ea583f5":"code","403b3a75":"code","a4c1c752":"code","65f205e1":"code","be364db6":"code","a00b2e98":"code","12092afe":"code","23bbcf4d":"code","348a7026":"markdown","d70d79a9":"markdown","50f4b29a":"markdown","f37b34ba":"markdown","309ae63e":"markdown","efadf493":"markdown","e67c2034":"markdown","a06150a1":"markdown","d51cee77":"markdown"},"source":{"b3c83042":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bbf5f349":"df = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')","846cfea3":"print(df.shape)","831243f9":"print(df.info())","c163a758":"print(df.describe())","3697c834":"fig, ax = plt.subplots(figsize = (8, 6))\n\ndf['Age'].plot.hist(color = 'seagreen', rwidth = 0.8, edgecolor = 'black', linewidth = 1)\nplt.title('Age Distribution of Customers')\nplt.xlabel('Age')\nplt.ylabel('No. of customers')\nplt.show()","fb4953a2":"fig, ax = plt.subplots(figsize = (16, 5))\n\nsns.countplot(x = 'Age', data = df, palette = 'bone')\nplt.title('Age Distribution of Customers')\nplt.xlabel('Age')\nplt.ylabel('No. of customers')\nplt.show()","9051166a":"fig, ax = plt.subplots(figsize = (8, 6))\n\ndf['Annual Income (k$)'].plot.hist(color = 'seagreen', rwidth = 0.8, edgecolor = 'black', linewidth = 1)\nplt.title('Salary Distribution of Customers')\nplt.xlabel('Annual Salary')\nplt.ylabel('No. of customers')\nplt.show()","de708794":"fig, ax = plt.subplots(figsize = (16, 5))\n\nsns.countplot(x = 'Annual Income (k$)', data = df, palette = 'bone')\nplt.title('Salary Distribution of Customers')\nplt.xlabel('Salary')\nplt.ylabel('No. of customers')\nplt.show()","813674b4":"fig, ax = plt.subplots(figsize = (8, 6))\n\ndf['Spending Score (1-100)'].plot.hist(color = 'seagreen', rwidth = 0.8, edgecolor = 'black', linewidth = 1)\nplt.title('Spending Score Distribution of Customers')\nplt.xlabel('Spending Score')\nplt.ylabel('No. of customers')\nplt.show()","8265952c":"fig, ax = plt.subplots(figsize = (16, 5))\n\nsns.countplot(x = 'Spending Score (1-100)', data = df, palette = 'bone')\nplt.title('Spending Score Distribution of Customers')\nplt.xlabel('Spending Score')\nplt.ylabel('No. of customers')\nplt.show()","a7945299":"from sklearn.cluster import KMeans","c570e2db":"df.head()","24f709bd":"X = df.iloc[:, [3,4]].values","50647b56":"inertia = []\n\nfor i in range(1,15):\n    model = KMeans(n_clusters = i, init = 'k-means++', random_state = 0)\n    model.fit(X)\n    inertia.append(model.inertia_)","92674a8c":"fig, ax = plt.subplots(figsize = (8, 6))\nplt.plot(range(1,15), inertia)\nplt.title('Inertia')\nplt.xlabel('No. of Clusters')\nplt.ylabel('Inertia')\nplt.show()","da9e8976":"model = KMeans(n_clusters= 5, init='k-means++', random_state=0)\nY= model.fit_predict(X)","a849932a":"fig, ax = plt.subplots(figsize = (12, 8))\n\nplt.scatter(X[Y == 0, 0], X[Y == 0, 1], s = 70, c = 'red', label = 'Moderate Income - Moderate Expenses')\nplt.scatter(X[Y == 1, 0], X[Y == 1, 1], s = 70, c = 'blue', label = 'Less Income - High Expenses')\nplt.scatter(X[Y == 2, 0], X[Y == 2, 1], s = 70, c = 'green', label = 'High Income - High Expenses')\nplt.scatter(X[Y == 3, 0], X[Y == 3, 1], s = 70, c = 'grey', label = 'Less Income - Less Expenses')\nplt.scatter(X[Y == 4, 0], X[Y == 4, 1], s = 70, c = 'brown', label = 'High Income - Less Expenses')\nplt.scatter(model.cluster_centers_[:, 0], model.cluster_centers_[:, 1], s = 250, c = 'black', label = 'Cluster Centroids')\nplt.title('Clusters of customers')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","5d6121a8":"X1 = df.iloc[:, [2, 4]].values","bf4f9951":"inertia = []\n\nfor i in range(1, 15):\n    model = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300)\n    model.fit(X1)\n    inertia.append(model.inertia_)","e443d1e0":"fig, ax = plt.subplots(figsize = (8, 6))\nplt.plot(range(1,15), inertia)\nplt.title('Inertia')\nplt.xlabel('No. of Clusters')\nplt.ylabel('Inertia')\nplt.show()","2ffc97e5":"model = KMeans(n_clusters = 6, init = 'k-means++', max_iter = 300)\nY1 = model.fit_predict(X1)","bb62b9cc":"fig, ax = plt.subplots(figsize = (12, 8))\n\nplt.scatter(X1[Y1 == 0, 0], X1[Y1 == 0, 1], s = 70, c = 'red', label = 'Mid Age - Moderate Expenses')\nplt.scatter(X1[Y1 == 1, 0], X1[Y1 == 1, 1], s = 70, c = 'blue', label = 'Young Age - Less Expenses')\nplt.scatter(X1[Y1 == 2, 0], X1[Y1 == 2, 1], s = 70, c = 'green', label = 'Old Age - Less Expenses')\nplt.scatter(X1[Y1 == 3, 0], X1[Y1 == 3, 1], s = 70, c = 'grey', label = 'Mid Age - Less Expenses')\nplt.scatter(X1[Y1 == 4, 0], X1[Y1 == 4, 1], s = 70, c = 'brown', label = 'Old Age - High Expenses')\nplt.scatter(X1[Y1 == 5, 0], X1[Y1 == 5, 1], s = 70, c = 'yellow', label = 'Old Age - Moderate Expenses')\n\nplt.scatter(model.cluster_centers_[:, 0], model.cluster_centers_[:, 1], s = 250, c = 'black', label = 'Cluster Centroids')\nplt.title('Clusters of customers')\nplt.xlabel('Age')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","23219e33":"df.head(10)","7ea583f5":"from scipy.cluster.vq import whiten","403b3a75":"X2 = df.iloc[:, [2, 4]].values","a4c1c752":"scaled = whiten(X2)","65f205e1":"np.std(scaled)","be364db6":"inertia = []\n\nfor i in range(1, 15):\n    model = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300)\n    model.fit(X2)\n    inertia.append(model.inertia_)","a00b2e98":"fig, ax = plt.subplots(figsize = (8, 6))\nplt.plot(range(1,15), inertia)\nplt.title('Inertia')\nplt.xlabel('No. of Clusters')\nplt.ylabel('Inertia')\nplt.show()","12092afe":"model = KMeans(n_clusters = 6, init = 'k-means++', max_iter = 300)\nY2 = model.fit_predict(X2)","23bbcf4d":"fig, ax = plt.subplots(figsize = (12, 8))\n\nplt.scatter(X2[Y2 == 0, 0], X2[Y2 == 0, 1], s = 70, c = 'red', label = 'Old Age - Moderate Expenses')\nplt.scatter(X2[Y2 == 1, 0], X2[Y2 == 1, 1], s = 70, c = 'blue', label = 'Mid Age - Moderate Expenses')\nplt.scatter(X2[Y2 == 2, 0], X2[Y2 == 2, 1], s = 70, c = 'green', label = 'Less Age - Less Expenses')\nplt.scatter(X2[Y2 == 3, 0], X2[Y2 == 3, 1], s = 70, c = 'grey', label = 'Young Age - Less Expenses')\nplt.scatter(X2[Y2 == 4, 0], X2[Y2 == 4, 1], s = 70, c = 'brown', label = 'Old Age - High Expenses')\nplt.scatter(X2[Y2 == 5, 0], X2[Y2 == 5, 1], s = 70, c = 'yellow', label = 'Less Age - Moderate Expenses')\n\nplt.scatter(model.cluster_centers_[:, 0], model.cluster_centers_[:, 1], s = 250, c = 'black', label = 'Cluster Centroids')\nplt.title('Clusters of customers')\nplt.xlabel('Age')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","348a7026":"* 200 customers have visited the mall.\n* Average age of customers is 39.\n* Average income is USD60000\n* Average spending score is 50.","d70d79a9":"# Mall Customers Clustering","50f4b29a":"Most customers who have visited the mall are young.","f37b34ba":"## Model Building","309ae63e":"## Univariate Analysis","efadf493":"The features are scaled such that its standard deviation becomes one.","e67c2034":"## Importing Libraries and Dataset","a06150a1":"Most customers have spending scores between 40 - 60.","d51cee77":"## Brief Look at the Dataset"}}