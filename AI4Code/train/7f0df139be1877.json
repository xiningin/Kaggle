{"cell_type":{"2a2533f7":"code","38fe8669":"code","246f3736":"code","ccca64ba":"code","e973bd38":"code","2c32b0e3":"code","f21c472a":"markdown"},"source":{"2a2533f7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # visualization library\n\nfrom plotly.offline import init_notebook_mode, plot, iplot\nimport plotly as py\ninit_notebook_mode(connected=True) \nimport plotly.graph_objs as go # plotly graphical object\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport warnings            \nwarnings.filterwarnings(\"ignore\") \nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","38fe8669":"data = pd.read_csv(\"..\/input\/database.csv\")\ndata = data.drop([3378,7512,20650])\ndata[\"year\"]= [int(each.split(\"\/\")[2]) for each in data.iloc[:,0]]","246f3736":"data.head()","ccca64ba":"data.Type.unique()","e973bd38":"dataset = data.loc[:,[\"Date\",\"Latitude\",\"Longitude\",\"Type\",\"Depth\",\"Magnitude\",\"year\"]]\ndataset.head()\n","2c32b0e3":"years = [str(each) for each in list(data.year.unique())]  # str unique years\n# make list of types\ntypes = ['Earthquake', 'Nuclear Explosion', 'Explosion', 'Rock Burst']\ncustom_colors = {\n    'Earthquake': 'rgb(189, 2, 21)',\n    'Nuclear Explosion': 'rgb(52, 7, 250)',\n    'Explosion': 'rgb(99, 110, 250)',\n    'Rock Burst': 'rgb(0, 0, 0)'\n}\n# make figure\nfigure = {\n    'data': [],\n    'layout': {},\n    'frames': []\n}\n\nfigure['layout']['geo'] = dict(showframe=False, showland=True, showcoastlines=True, showcountries=True,\n               countrywidth=1, \n              landcolor = 'rgb(217, 217, 217)',\n              subunitwidth=1,\n              showlakes = True,\n              lakecolor = 'rgb(255, 255, 255)',\n              countrycolor=\"rgb(5, 5, 5)\")\nfigure['layout']['hovermode'] = 'closest'\nfigure['layout']['sliders'] = {\n    'args': [\n        'transition', {\n            'duration': 400,\n            'easing': 'cubic-in-out'\n        }\n    ],\n    'initialValue': '1965',\n    'plotlycommand': 'animate',\n    'values': years,\n    'visible': True\n}\nfigure['layout']['updatemenus'] = [\n    {\n        'buttons': [\n            {\n                'args': [None, {'frame': {'duration': 500, 'redraw': False},\n                         'fromcurrent': True, 'transition': {'duration': 300, 'easing': 'quadratic-in-out'}}],\n                'label': 'Play',\n                'method': 'animate'\n            },\n            {\n                'args': [[None], {'frame': {'duration': 0, 'redraw': False}, 'mode': 'immediate',\n                'transition': {'duration': 0}}],\n                'label': 'Pause',\n                'method': 'animate'\n            }\n        ],\n        'direction': 'left',\n        'pad': {'r': 10, 't': 87},\n        'showactive': False,\n        'type': 'buttons',\n        'x': 0.1,\n        'xanchor': 'right',\n        'y': 0,\n        'yanchor': 'top'\n    }\n]\n\nsliders_dict = {\n    'active': 0,\n    'yanchor': 'top',\n    'xanchor': 'left',\n    'currentvalue': {\n        'font': {'size': 20},\n        'prefix': 'Year:',\n        'visible': True,\n        'xanchor': 'right'\n    },\n    'transition': {'duration': 300, 'easing': 'cubic-in-out'},\n    'pad': {'b': 10, 't': 50},\n    'len': 0.9,\n    'x': 0.1,\n    'y': 0,\n    'steps': []\n}\n\n# make data\nyear = 1695\nfor ty in types:\n    dataset_by_year = dataset[dataset['year'] == year]\n    dataset_by_year_and_cont = dataset_by_year[dataset_by_year['Type'] == ty]\n    \n    data_dict = dict(\n    type='scattergeo',\n    lon = dataset['Longitude'],\n    lat = dataset['Latitude'],\n    hoverinfo = 'text',\n    text = ty,\n    mode = 'markers',\n    marker=dict(\n        sizemode = 'area',\n        sizeref = 1,\n        size= 10 ,\n        line = dict(width=1,color = \"white\"),\n        color = custom_colors[ty],\n        opacity = 0.7),\n)\n    figure['data'].append(data_dict)\n    \n# make frames\nfor year in years:\n    frame = {'data': [], 'name': str(year)}\n    for ty in types:\n        dataset_by_year = dataset[dataset['year'] == int(year)]\n        dataset_by_year_and_cont = dataset_by_year[dataset_by_year['Type'] == ty]\n\n        data_dict = dict(\n                type='scattergeo',\n                lon = dataset_by_year_and_cont['Longitude'],\n                lat = dataset_by_year_and_cont['Latitude'],\n                hoverinfo = 'text',\n                text = ty,\n                mode = 'markers',\n                marker=dict(\n                    sizemode = 'area',\n                    sizeref = 1,\n                    size= 10 ,\n                    line = dict(width=1,color = \"white\"),\n                    color = custom_colors[ty],\n                    opacity = 0.7),\n                name = ty\n            )\n        frame['data'].append(data_dict)\n\n    figure['frames'].append(frame)\n    slider_step = {'args': [\n        [year],\n        {'frame': {'duration': 300, 'redraw': False},\n         'mode': 'immediate',\n       'transition': {'duration': 300}}\n     ],\n     'label': year,\n     'method': 'animate'}\n    sliders_dict['steps'].append(slider_step)\n\n\nfigure[\"layout\"][\"autosize\"]= True\nfigure[\"layout\"][\"title\"] = \"Earthquake\"       \n\nfigure['layout']['sliders'] = [sliders_dict]\n\niplot(figure)","f21c472a":"# Introduction\n* An earthquake (also known as a quake , tremor or temblor ) is the shaking of the surface of the Earth, resulting from the sudden release of energy in the Earth 's lithosphere that creates seismic waves . (Wiki)\n* Animation with Plotly"}}