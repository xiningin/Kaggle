{"cell_type":{"ea02af38":"code","8f79b451":"code","9cbbea15":"code","0e247dd7":"code","0f563b37":"code","e8d2e4e1":"code","0cec3633":"code","f738bc40":"code","966d6cbd":"code","a28e1654":"code","37f0c035":"code","9d457ccd":"markdown","a52279ce":"markdown","0885726d":"markdown"},"source":{"ea02af38":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import LeaveOneOut\nfrom sklearn.model_selection import LeavePOut\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8f79b451":"train=pd.read_csv('..\/input\/dontoverfit\/train.csv')\ntest=pd.read_csv('..\/input\/dontoverfit\/test.csv')","9cbbea15":"train.head()","0e247dd7":"test.head()","0f563b37":"print(train.shape)\nprint(test.shape)\n","e8d2e4e1":"y=train['target']\n\ntrain.info()","0cec3633":"train= train.drop(['id','target'], axis=1).values\ntest=test.drop(['id'], axis=1).values","f738bc40":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\ntrain=scaler.fit_transform(train)\ntest=scaler.transform(test)","966d6cbd":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import GridSearchCV , train_test_split , cross_val_score\nloocv = LeaveOneOut()\nmodel_loocv = LogisticRegression(class_weight='balanced', C= 0.1, max_iter=10000).fit(train, y)\nresults_loocv = cross_val_score(model_loocv, train, y, cv=loocv)","a28e1654":"model_loocv.fit(train,y)\nfinal = model_loocv.predict_proba(test)\nfinal","37f0c035":"submit = pd.read_csv('..\/input\/dontoverfit\/sample_submission.csv')\nsubmit.columns\n\nsubmit['target'] = final[:,1]\nsubmit.to_csv('submit.csv', index = False)\nsubmit","9d457ccd":"# ImportData","a52279ce":"# Submission File","0885726d":"# Cross Validation"}}