{"cell_type":{"9ac312ed":"code","8472037b":"code","78edb8d4":"code","4815e844":"code","a883724c":"code","b3c35810":"code","68b3f8f2":"code","fd4b66c3":"code","15bf1e55":"code","8c6bd558":"code","1db242f3":"code","70fdf2e8":"code","cc5131d3":"code","12ec233b":"code","1a5e6457":"code","9eccf112":"code","1e96cf10":"code","d1ce1ac0":"code","aa7386dd":"code","a3918757":"code","2e7cec86":"code","f7715b8b":"code","bf43c260":"code","8f92132a":"code","e36bfaae":"code","9866902a":"code","ab56e1ae":"code","ee6dd765":"code","270374ea":"code","7f344d6a":"code","979c8775":"code","d2f948f5":"code","95bc13ab":"code","a6e3d9d9":"code","cce221e2":"code","d71b6f82":"code","4506fbfb":"code","3aee2a08":"code","e8ada45e":"code","a79413af":"code","782f92ea":"code","c8910c87":"code","99f60c0c":"code","7e3c0749":"code","bc2e9c86":"code","ae1753fd":"code","5fcd0034":"code","f3b5fe82":"code","f7cfdf9b":"code","395372c3":"code","55cf396c":"code","963993cf":"code","398ccca2":"code","9aff52e8":"markdown","dff360c6":"markdown","84d168b1":"markdown","978a8f7d":"markdown","de766d98":"markdown","3864a8fd":"markdown","eb48a0aa":"markdown","0654b172":"markdown","80a02ace":"markdown","344822c5":"markdown","abb1f174":"markdown","409a2359":"markdown","83f40688":"markdown","7566fcca":"markdown","ddce7542":"markdown","eb31ff2a":"markdown","7290050a":"markdown","4e06a4e4":"markdown","e35d3ae0":"markdown","33690592":"markdown","c42edfad":"markdown","0ededc63":"markdown","b52bf541":"markdown","de3fb6b0":"markdown","7d1122e6":"markdown","bf7f98cf":"markdown","52384219":"markdown","f79f086c":"markdown","3e45655d":"markdown","6e0b5d81":"markdown"},"source":{"9ac312ed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8472037b":"import os\nimport glob\nimport math \nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\nimport plotly.express as px\nfrom statsmodels.tsa.seasonal import seasonal_decompose\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","78edb8d4":"products_info = pd.read_csv('\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv')\ndistricts_info = pd.read_csv('\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv')","4815e844":"file_extension = '.csv'\nsource = '\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/'\n\nall_files = [i for i in glob.glob(f'{source}*{file_extension}')]","a883724c":"len(all_files)","b3c35810":"list_of_all_dfs = []\n\nfor file in tqdm(all_files):\n    df = pd.read_csv(file)\n    df['school_district'] = file.split('\/')[-1].split('.')[0]\n    list_of_all_dfs.append(df)","68b3f8f2":"engagement_data = pd.concat(list_of_all_dfs)","fd4b66c3":"products_info.head(3)","15bf1e55":"districts_info.head(3)","8c6bd558":"engagement_data.head(3)","1db242f3":"print('The shape of products_info is', products_info.shape)\nprint('The shape of districts_info is', districts_info.shape)\nprint('The shape of engagement_data is', engagement_data.shape)","70fdf2e8":"products_info.head()","cc5131d3":"products_info.shape","12ec233b":"products_info.isnull().any() #check for missing values","1a5e6457":"print(\"Number of missing values in the feature 'Provider\/Company Name': \", products_info['Provider\/Company Name'].isna().value_counts()[1])\nprint(\"Number of missing values in the feature 'Sector(s)': \", products_info['Sector(s)'].isna().value_counts()[1])\nprint(\"Number of missing values in the feature 'Primary Essential Function': \", products_info['Primary Essential Function'].isna().value_counts()[1])","9eccf112":"plt.figure(figsize=(19,5))\nplt.subplot(1, 3, 1)\nsns.barplot(x=products_info['Provider\/Company Name'].isna().value_counts().index, \n            y=products_info['Provider\/Company Name'].isna().value_counts())\nplt.ylabel('Count')\nplt.title('Count of missing values: Provider\/Company Name')\n\nplt.subplot(1, 3, 2)\nsns.barplot(x=products_info['Sector(s)'].isna().value_counts().index, \n            y=products_info['Sector(s)'].isna().value_counts())\nplt.ylabel('Count')\nplt.title('Count of missing values: Sector(s)')\n\nplt.subplot(1, 3, 3)\nsns.barplot(x=products_info['Primary Essential Function'].isna().value_counts().index, \n            y=products_info['Primary Essential Function'].isna().value_counts())\nplt.ylabel('Count')\nplt.title('Count of missing values: Primary Essential Function')\nplt.show()","1e96cf10":"#how many unique primary essential functions\nprimary_essential_function_count = pd.DataFrame(products_info['Primary Essential Function'].value_counts()).reset_index(level=0)\nprimary_essential_function_count.columns = ['Primary Essential Function', 'Count']\nprimary_essential_function_count.head()","d1ce1ac0":"plt.figure(figsize=(10,10))\nsns.barplot(x='Count', y='Primary Essential Function', data=primary_essential_function_count)\nplt.title('Count of unique primary essential functions in products_info')\nplt.show()","aa7386dd":"all_main_categories = []\nfor index, row in enumerate(list(primary_essential_function_count['Primary Essential Function'])):\n    row = row.split('-')\n    main_category = row[0].replace(\" \",\"\")\n    all_main_categories.append(main_category)\n    \ncount_of_main_categories = Counter(all_main_categories)","a3918757":"plt.figure(figsize=(19,5))\nsns.barplot(x=list(count_of_main_categories.keys()), y=list(count_of_main_categories.values()))\nplt.title('Count of the main category of primary essential function')\nplt.xlabel('Main Category')\nplt.ylabel('Count')\nplt.show()","2e7cec86":"#how many unique sectors\nsectors_count = pd.DataFrame(products_info['Sector(s)'].value_counts()).reset_index(level=0)\nsectors_count.columns = ['Sector(s)', 'Count']\nsectors_count.head()","f7715b8b":"plt.figure(figsize=(19,6))\nsns.barplot(x='Sector(s)', y='Count', data=sectors_count)\nplt.title('Count of unique sectors in products_info')\nplt.show()","bf43c260":"#in each sector what is the number of primary essential functions\nsns.catplot(x='Sector(s)', y='Primary Essential Function', data=products_info, height=15)\nplt.title(\"Catplot: Sector(s) vs Primary Essential Function\")\nplt.show()","8f92132a":"top_companies = dict(list(Counter(list(products_info['Provider\/Company Name'])).most_common())[0:10])","e36bfaae":"top_companies","9866902a":"plt.figure(figsize=(8,8))\nsns.barplot(x=list(top_companies.values()), y=list(top_companies.keys()))\nplt.title('Top 10 most common provider\/company names')\nplt.xlabel('Count')\nplt.ylabel('Provider\/Company Name')\nplt.show()","ab56e1ae":"districts_info","ee6dd765":"#fixing all the percentages\/ranges\nfor index, row in districts_info.iterrows():\n    try:\n        row = list(row['pct_black\/hispanic'])\n        row[-1] = ']'\n        row = \"\".join(row)\n        districts_info['pct_black\/hispanic'][index] = row\n    except TypeError:\n        pass\n    \nfor index, row in districts_info.iterrows():\n    try:\n        row = list(row['pct_free\/reduced'])\n        row[-1] = ']'\n        row = \"\".join(row)\n        districts_info['pct_free\/reduced'][index] = row\n    except TypeError:\n        pass\n    \nfor index, row in districts_info.iterrows():\n    try:\n        row = list(row['county_connections_ratio'])\n        row[-1] = ']'\n        row = \"\".join(row)\n        districts_info['county_connections_ratio'][index] = row\n    except TypeError:\n        pass\n    \nfor index, row in districts_info.iterrows():\n    try:\n        row = list(row['pp_total_raw'])\n        row[-1] = ']'\n        row = \"\".join(row)\n        districts_info['pp_total_raw'][index] = row\n    except TypeError:\n        pass","270374ea":"districts_info","7f344d6a":"districts_info.isna().any()","979c8775":"print(\"Number of missing values in the feature 'state': \", districts_info['state'].isna().value_counts()[1])\nprint(\"Number of missing values in the feature 'locale': \", districts_info['locale'].isna().value_counts()[1])\nprint(\"Number of missing values in the feature 'pct_black\/hispanic': \", districts_info['pct_black\/hispanic'].isna().value_counts()[1])\nprint(\"Number of missing values in the feature 'pct_free\/reduced': \", districts_info['pct_free\/reduced'].isna().value_counts()[1])\nprint(\"Number of missing values in the feature 'county_connections_ratio': \", districts_info['county_connections_ratio'].isna().value_counts()[1])\nprint(\"Number of missing values in the feature 'pp_total_raw': \", districts_info['pp_total_raw'].isna().value_counts()[1])","d2f948f5":"plt.figure(figsize=(19,10))\nplt.subplot(2, 3, 1)\nsns.barplot(x=districts_info['state'].isna().value_counts().index, \n            y=districts_info['state'].isna().value_counts())\nplt.ylabel('Count')\nplt.title('Count of missing values: state')\n\nplt.subplot(2, 3, 2)\nsns.barplot(x=districts_info['locale'].isna().value_counts().index, \n            y=districts_info['locale'].isna().value_counts())\nplt.ylabel('Count')\nplt.title('Count of missing values: locale')\n\nplt.subplot(2, 3, 3)\nsns.barplot(x=districts_info['pct_black\/hispanic'].isna().value_counts().index, \n            y=districts_info['pct_black\/hispanic'].isna().value_counts())\nplt.ylabel('Count')\nplt.title('Count of missing values: pct_black\/hispanic')\n\nplt.subplot(2, 3, 4)\nsns.barplot(x=districts_info['pct_free\/reduced'].isna().value_counts().index, \n            y=districts_info['pct_free\/reduced'].isna().value_counts())\nplt.ylabel('Count')\nplt.title('Count of missing values: pct_free\/reduced')\n\nplt.subplot(2, 3, 5)\nsns.barplot(x=districts_info['county_connections_ratio'].isna().value_counts().index, \n            y=districts_info['county_connections_ratio'].isna().value_counts())\nplt.ylabel('Count')\nplt.title('Count of missing values: county_connections_ratio')\n\nplt.subplot(2, 3, 6)\nsns.barplot(x=districts_info['pp_total_raw'].isna().value_counts().index, \n            y=districts_info['pp_total_raw'].isna().value_counts())\nplt.ylabel('Count')\nplt.title('Count of missing values: pp_total_raw')\n\nplt.show()","95bc13ab":"state_count = pd.DataFrame(districts_info['state'].value_counts()).reset_index(level=0)\nstate_count.columns = ['State', 'Count']\nstate_count.head()","a6e3d9d9":"state_count.shape","cce221e2":"plt.figure(figsize=(10,10))\nsns.barplot(x='Count', y='State', data=state_count)\nplt.title('Count of unique states')\nplt.show()","d71b6f82":"locale_count = pd.DataFrame(districts_info['locale'].value_counts()).reset_index(level=0)\nlocale_count.columns = ['Locale', 'Count']\nlocale_count.head()","4506fbfb":"plt.figure(figsize=(19,5))\nsns.barplot(x='Locale', y='Count', data=locale_count)\nplt.title('Count of unique locales')\nplt.show()","3aee2a08":"districts_info['pct_black\/hispanic'].value_counts()","e8ada45e":"pct_black_hispanic_count = pd.DataFrame(districts_info['pct_black\/hispanic'].value_counts()).reset_index(level=0)\npct_black_hispanic_count.columns = ['pct_black\/hispanic', 'count']\npct_black_hispanic_count.head()","a79413af":"plt.figure(figsize=(10,10))\nsns.barplot(x='count', y='pct_black\/hispanic', data=pct_black_hispanic_count)\nplt.title('Highest percentage range for pct_black\/hispanic')\nplt.show()","782f92ea":"districts_info['pct_free\/reduced'].value_counts()","c8910c87":"pct_free_reduced_count = pd.DataFrame(districts_info['pct_free\/reduced'].value_counts()).reset_index(level=0)\npct_free_reduced_count.columns = ['pct_free\/reduced', 'count']\npct_free_reduced_count.head()","99f60c0c":"plt.figure(figsize=(10,10))\nsns.barplot(x='count', y='pct_free\/reduced', data=pct_free_reduced_count)\nplt.title('Highest percentage range for pct_free\/reduced')\nplt.show()","7e3c0749":"engagement_data.head()","bc2e9c86":"len(engagement_data['lp_id'].unique())","ae1753fd":"len(products_info['LP ID'].unique())","5fcd0034":"engagement_data.iloc[np.argmax(engagement_data['engagement_index'])]","f3b5fe82":"districts_info[districts_info['district_id'] == 8815]","f7cfdf9b":"engagement_data.iloc[np.argmin(engagement_data['engagement_index'])]","395372c3":"districts_info[districts_info['district_id'] == 3864]","55cf396c":"engagement_data['time'] = pd.to_datetime(engagement_data['time']) #converting to timestamps","963993cf":"engagement_data.dtypes","398ccca2":"plt.figure(figsize=(19,5))\nplt.rcParams['agg.path.chunksize'] = 10000\nplt.plot(engagement_data['time'], engagement_data['engagement_index'])\nplt.title(\"Engagement Index in 2020\")\nplt.xlabel('time')\nplt.ylabel('engagement_index')\nplt.show()","9aff52e8":"We see that almost all the features have missing values. But the feature 'pp_total_raw' has the highest number of missing values compared to the rest with a count of 115 out of 233.","dff360c6":"# Analysis on engagement_data\n\nThe engagement data are aggregated at school district level, and each file in the folder `engagement_data` represents data from one school district. The 4-digit file name represents `district_id` which can be used to link to district information in `district_info.csv`. The `lp_id` can be used to link to product information in `product_info.csv`.\n\n| Name | Description |\n| :--- | :----------- |\n| time | date in \"YYYY-MM-DD\" |\n| lp_id | The unique identifier of the product |\n| pct_access | Percentage of students in the district have at least one page-load event of a given product and on a given day |\n| engagement_index | Total page-load events per one thousand students of a given product and on a given day |","84d168b1":"The most common providers\/company name is 'Google LLC'. The number of time it occurs is 30 which is so much more greater than the second most common provide 'Houghton Mifflin Harcourt' at only 6 occurances.","978a8f7d":"We see that there is an increase in the engagement_index from the month of March till July. These are the months were we saw the first wave of coronavirus all over the world. Most countries have imposed lockdown and all the people have been forced to stay home. If we look at this graph, keeping in mind the actual course of events, we can say that, since the people have been forced to stay home, the engagement_index of the students has increased. This is due to shifting of education to an online mode. \n\nAgain in the month of July and August, the engagement_index has drastically reduced. This maybe due to easing of lockdowns in different countries. Furthermore, we again see a spike in engagement_index from mid august and the index is consistent till the end of the year with occasional dips for a few days. These maybe be weekends.","de766d98":"# What is the relationship between sectors and primary essential function?","3864a8fd":"# Analysis on districts_info\n\nThe district file `districts_info.csv` includes information about the characteristics of school districts, including data from [NCES](https:\/\/nces.ed.gov\/) (2018-19), [FCC](https:\/\/www.fcc.gov\/) (Dec 2018), and [Edunomics Lab](https:\/\/edunomicslab.org\/). In this data set, we removed the identifiable information about the school districts. We also used an open source tool [ARX](https:\/\/arx.deidentifier.org\/) [(Prasser et al. 2020)](https:\/\/onlinelibrary.wiley.com\/doi\/full\/10.1002\/spe.2812) to transform several data fields and reduce the risks of re-identification. For data generalization purposes some data points are released with a range where the actual value falls under. Additionally, there are many missing data marked as 'NaN' indicating that the data was suppressed to maximize anonymization of the dataset. \n\n| Name | Description |\n| :--- | :----------- |\n| district_id | The unique identifier of the school district |\n| state | The state where the district resides in |\n| locale | NCES locale classification that categorizes U.S. territory into four types of areas: City, Suburban, Town, and Rural. See [Locale Boundaries User's Manual](https:\/\/eric.ed.gov\/?id=ED577162) for more information. |\n| pct_black\/hispanic | Percentage of students in the districts identified as Black or Hispanic based on 2018-19 NCES data |\n| pct_free\/reduced | Percentage of students in the districts eligible for free or reduced-price lunch based on 2018-19 NCES data |\n| county_connections_ratio | `ratio` (residential fixed high-speed connections over 200 kbps in at least one direction\/households) based on the county level data from FCC From 477 (December 2018 version). See [FCC data](https:\/\/www.fcc.gov\/form-477-county-data-internet-access-services) for more information. |\n| pp_total_raw | Per-pupil total expenditure (sum of local and federal expenditure) from Edunomics Lab's National Education Resource Database on Schools (NERD$) project. The expenditure data are school-by-school, and we use the median value to represent the expenditure of a given school district. |","eb48a0aa":"There are 5 unique sectors in the products_info dataset. Among them 'PreK-12' seems to have the highest count and the lowest is 'Corporate' and 'Higher Ed; Corporate'.","0654b172":"# What is the picture of engagement_index in 2020?","80a02ace":"We see that there are far more unique product ids in engagement_data compared to products_info","344822c5":"# What is the most common range\/percentage of Black or Hispanic students among all the states?","abb1f174":"### Check for missing values and how many?","409a2359":"# How many unique sectors are there in products_info?","83f40688":"# What are the unique state and locales in districts_info?","7566fcca":"# Which product has the highest page load event (engagement_index) in all districts?","ddce7542":"So in the column 'Provider\/Company Name', we have 1 missing value while the features 'Sector(s)' and 'Primary Essential Function' have 20 missing values. This number is quite low compared to the total number of data points in products_info. We will perform further analysis to decide on any method of imputation of missing values.","eb31ff2a":"We have missing values for 3 columns in the products_info dataframe and they are 'Provider\/Company Name', 'Sector(s)' and 'Primary Essential Function'. So the next question is how many missing values for each feature?","7290050a":"# How many unique primary essential functions are there with respect to the main category (i.e, LC, CM, SDO or a mix of these)?","4e06a4e4":"# Are there any missing values in products_info? And how many?","e35d3ae0":"# Overview\n\nThe COVID-19 Pandemic has disrupted learning for more than 56 million students in the United States. In the Spring of 2020, most states and local governments across the U.S. closed educational institutions to stop the spread of the virus. In response, schools and teachers have attempted to reach students remotely through distance learning tools and digital platforms. Until today, concerns of the exacaberting digital divide and long-term learning loss among America\u2019s most vulnerable learners continue to grow. \n\nWe are going to explore<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(1) the state of digital learning in 2020 and <br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(2) how the engagement of digital learning relates to factors such as district demographics, broadband access, and state\/national level policies and events.\n\nWe will try to answer some of the questions below which relate to our problem statement:\n\n    What is the picture of digital connectivity and engagement in 2020?\n    What is the effect of the COVID-19 pandemic on online and distance learning, and how might this also evolve in the future?\n    How does student engagement with different types of education technology change over the course of the pandemic?\n    How does student engagement with online learning platforms relate to different geography? Demographic context (e.g., race\/ethnicity, ESL, learning disability)? Learning context? Socioeconomic status?\n    Do certain state interventions, practices or policies (e.g., stimulus, reopening, eviction moratorium) correlate with the increase or decrease online engagement?\n","33690592":"# Analysis on products_info\n\nThe product file `products_info.csv` includes information about the characteristics of the top 372 products with most users in 2020. The categories listed in this file are part of LearnPlatform's product taxonomy. Data were labeled by our team. Some products may not have labels due to being duplicate, lack of accurate url or other reasons.\n\n| Name | Description |\n| :--- | :----------- |\n| LP ID| The unique identifier of the product |\n| URL | Web Link to the specific product |\n| Product Name | Name of the specific product |\n| Provider\/Company Name | Name of the product provider |\n| Sector(s) | Sector of education where the product is used |\n| Primary Essential Function | The basic function of the product. There are two layers of labels here. Products are first labeled as one of these three categories: LC = Learning & Curriculum, CM = Classroom Management, and SDO = School & District Operations. Each of these categories have multiple sub-categories with which the products were labeled |","c42edfad":"There are a lot of school districts with only 0 to 20% of blacks or hispanics. And very less number of school districts with more than 80% blacks or hispanics.","0ededc63":"We see that Connecticut and Utah are the most common states and Minnesota, Florida, Arizona and North Dakota are the least common states in districts_info. In total we have 23 states in the dataframe. \n\nWith respect to the locale, we see the Suburb is the most common locale while Town is the least common locale. In total we have 4 different locales.","b52bf541":"From the above catplot we clearly see that first three sectors have the most distribution of categories. We have seen earlier that there is only one datapoint each for 'Corporate' and 'Higher Ed; Corporate'. In the above plot we can see that the one data point each of both the aforementioned sectors is from the category 'SDO - Data Analytics & Reporting'.\n\nThere are some exlusive functions for each sector. For example, 'SDO - Other', 'CM - Virtual Classroom - Video Conferencing' and 'LC - Sites, Resources & Reference - Thesaurus & Dictionary' are exculsive to the sector 'PreK-12; Higher Ed; Corporate'.","de3fb6b0":"We see that most of the datapoints belong to LC and SDO main categories and a few points belong to CM but only 1 data points belongs to a mix of all categories.","7d1122e6":"# What is the most common range\/percentage of students in the districts eligible for free or reduced-price lunch?","bf7f98cf":"# How many unique primary essential functions along with sub-category?","52384219":"In products_info, we see that 'LC - Digital Learning Platforms' occurs the highest number of times with a total of 74 out of 372 datapoints. The categories 'CM - Teacher Resources - Grading & Attendance', 'SDO - Environmental, Health & Safety (EHS) Com', 'SDO - Admissions, Enrollment & Rostering' and 'LC - Study Tools - Tutoring' all occur only once and are the lowest compared to any other category in the dataset.","f79f086c":"The highest engagement_index is 213045.47 in the state of Illinois and the suburb locale. While the lowest engagement_index is 0.01 in the state of Utah and of the locale suburb.","3e45655d":"We see that most of the datapoints are between 0 to 60% if we combine the first three categories in the barplot. This mean atleast 60% of the students in districts eligible for free or reduced-price lunch.","6e0b5d81":"# What are the top provider\/company names?"}}