{"cell_type":{"d7d32952":"code","192145b3":"code","32546182":"code","84f65bcc":"code","cad8c9d4":"code","3425bf8a":"code","66916975":"code","2dea736d":"code","01b4e159":"code","d9ec51b2":"code","117a6fea":"code","3e0958f7":"code","3edf67ed":"code","dcbc2989":"markdown","e97fd8c9":"markdown","923e7679":"markdown","2701114d":"markdown","2049b1a4":"markdown","129b1e86":"markdown","6fd0acd3":"markdown","bee72a3b":"markdown","81c3a476":"markdown"},"source":{"d7d32952":"%matplotlib inline\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport seaborn as sns\nplt.rcParams[\"figure.figsize\"] = (12, 4)\nplt.rcParams[\"figure.dpi\"] = 125\nplt.rcParams[\"font.size\"] = 14\nplt.rcParams['font.family'] = ['sans-serif']\nplt.rcParams['font.sans-serif'] = ['DejaVu Sans']\nplt.style.use('ggplot')\nsns.set_style(\"whitegrid\", {'axes.grid': False})\nfrom itertools import cycle\nprop_cycle = plt.rcParams['axes.prop_cycle']\ncolors = prop_cycle.by_key()['color']","192145b3":"import pandas as pd\nimport plotly as py\nimport plotly_express as px","32546182":"melt_urls = ['https:\/\/nsidc.org\/api\/greenland\/melt_area\/{:04d}'.format(x) for x in range(1979, 2020)]\ndef read_melt_df(c_url):\n    c_melt = pd.read_json(c_url, typ=\"series\")\n    return pd.DataFrame({'date': c_melt.index, \n                         'MeltAreaSqKm': c_melt.values})\nall_melt_df = pd.concat([read_melt_df(c_url) for c_url in melt_urls]).reset_index(drop=True)\nall_melt_df.sample(3)","84f65bcc":"all_melt_df['Month'] = all_melt_df['date'].dt.month*1.0\nall_melt_df['MonthDecimal'] = all_melt_df['Month']*1.0+all_melt_df['date'].dt.day\/all_melt_df['date'].dt.daysinmonth\nall_melt_df['Month Name'] = all_melt_df['date'].dt.month_name()\nall_melt_df['Year'] = all_melt_df['date'].dt.year\nall_melt_df['YearDecimal'] = all_melt_df['Year']*1.0+all_melt_df['Month']\/12.0 # approximate\nall_melt_df.to_csv('melt_area.csv', index=False)\nall_melt_df.sample(5)","cad8c9d4":"all_melt_df.plot(x='YearDecimal', y='MeltAreaSqKm')","3425bf8a":"month_summary_df = all_melt_df.groupby(['Month', 'Year']).agg({'MeltAreaSqKm': 'mean'}).reset_index()\nsns.lineplot(x='Month', y='MeltAreaSqKm', hue='Year', data=month_summary_df)","66916975":"fig, ax1 = plt.subplots(1, 1)\nsns.lineplot(x='Month', y='MeltAreaSqKm', data=month_summary_df.query('Year<2019'), ax=ax1, ci=95)\ndf_2019 = all_melt_df.query('Year==2019')\nax1.plot(df_2019['MonthDecimal'], df_2019['MeltAreaSqKm'])\nax1.legend(['1979-2018', '2019'])","2dea736d":"fig, ax1 = plt.subplots(1, 1)\nsns.boxplot(x='Month', y='MeltAreaSqKm', data=month_summary_df.query('Year<2019'), ax=ax1)\ndf_2019 = all_melt_df.query('Year==2019')\nax1.plot(df_2019['MonthDecimal']-3, df_2019['MeltAreaSqKm'])\nax1.legend(['1979-2018', '2019'])","01b4e159":"all_melt_df['Month_Cat'] = (all_melt_df['MonthDecimal']*4).astype('int')\/4.0\nyear_month_pivot = all_melt_df.pivot_table(columns='Year', index='Month_Cat', values='MeltAreaSqKm')\nsns.heatmap(year_month_pivot, vmin=0, vmax=600000)","d9ec51b2":"px.line(all_melt_df, x='MonthDecimal', y='MeltAreaSqKm', color='Year')","117a6fea":"import numpy as np\n# who says you can't make pandas a bit tidier\nmonthly_95_melt_df = pd.concat([\n    all_melt_df.\\\n        query('Year<2019').\\\n        dropna().\\\n        groupby(['Month']).\\\n        agg({'MeltAreaSqKm': lambda x: np.percentile(x, 95)}).\\\n        reset_index().\\\n        rename(columns={'Month': 'MonthDecimal'}).\\\n        assign(Source = '95 Percentile of Melting (1979-2018)'),\n    all_melt_df.query('Year==2019')[['MonthDecimal', 'MeltAreaSqKm']].assign(Source='2019')\n]).reset_index(drop=True)\npx.line(monthly_95_melt_df, x='MonthDecimal', y='MeltAreaSqKm', color='Source')","3e0958f7":"# slightly more fine grained\nall_melt_df['Month_Cat'] = (all_melt_df['MonthDecimal']*8).astype('int')\/8.0\nmonthly_95_melt_df = pd.concat([\n    all_melt_df.\\\n        query('Year<2019').\\\n        dropna().\\\n        groupby(['Month_Cat']).\\\n        agg({'MeltAreaSqKm': lambda x: np.percentile(x, 95)}).\\\n        reset_index().\\\n        rename(columns={'Month_Cat': 'MonthDecimal'}).\\\n        assign(Source = '95 Percentile of Melting (1979-2018)'),\n    all_melt_df.query('Year==2019')[['MonthDecimal', 'MeltAreaSqKm']].assign(Source='2019')\n]).reset_index(drop=True)\npx.line(monthly_95_melt_df, x='MonthDecimal', y='MeltAreaSqKm', color='Source')","3edf67ed":"sns.catplot(x='Month', \n            y='MeltAreaSqKm', \n            hue='Year', \n            kind='swarm', \n            data=month_summary_df)","dcbc2989":"# All vs 2019\nWe can try and recreate the decile range by using the 90% confidence interval (that is similar enough, right?). We can then show 2019 on top of that to see how far away the curve lies from the normal behavior.","e97fd8c9":"## Monthly Summary","923e7679":"### Monthly Extreme Values\nHere we calculate the extreme values 99% for each month and compare it to 2019","2701114d":"# Greenland Surface Melt Extent\nThe [NSIDC has a very interesting melt-chart](https:\/\/nsidc.org\/greenland-today\/greenland-surface-melt-extent-interactive-chart\/) but unfortunately doesn't quite show all the steps taken to make it. So here we attempt to reproduce the chart from the raw data by pulling it all from their API.\n## Acknowledgements\n- Greenland Ice Sheet Today is produced at the National Snow and Ice Data Center by Ted Scambos, Julienne Stroeve, and Lora Koenig with support from NASA. NSIDC thanks Jason Box, Xavier Fettweis, and Thomas Mote for data and collaboration.","2049b1a4":"# Random Other Plots\nHere are some random other possibly interesting plots","129b1e86":"# Plots\nHere we put together a few plots to show the data and try to see some of the trends","6fd0acd3":"# Heatmap over the years","bee72a3b":"## Show all years","81c3a476":"# Load Data\nHere we pull down all the years"}}