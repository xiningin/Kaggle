{"cell_type":{"63df7e66":"code","ed292547":"code","96287ac1":"code","6d9c1548":"code","9eb50080":"code","fc785a34":"code","c93247dd":"code","bb0b1221":"code","1f09fc59":"code","99e682e3":"code","8d6938b0":"code","dd355f4b":"markdown"},"source":{"63df7e66":"! pip install openpyxl\n! pip install lifetimes","ed292547":"import datetime as dt\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom lifetimes import BetaGeoFitter\nfrom lifetimes import GammaGammaFitter\nfrom lifetimes.plotting import plot_period_transactions\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')","96287ac1":"df = pd.read_excel('\/kaggle\/input\/online-retail\/online_retail.xlsx', sheet_name=\"Year 2010-2011\", engine='openpyxl')","6d9c1548":"# Analysis for United Kingdom\n\ndf=df[df[\"Country\"]==\"United Kingdom\"]","9eb50080":"#########################\n# Pre Processing\n#########################\n\ndef outlier_thresholds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.01)\n    quartile3 = dataframe[variable].quantile(0.99)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit\n\n\ndef replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit\n\ndf.dropna(inplace=True)\ndf = df[~df[\"Invoice\"].str.contains(\"C\", na=False)]\ndf = df[df[\"Quantity\"] > 0]\n\nreplace_with_thresholds(df, \"Quantity\")\nreplace_with_thresholds(df, \"Price\")\ndf.describe().T\n\ndf[\"TotalPrice\"] = df[\"Quantity\"] * df[\"Price\"]\n\ntoday_date = dt.datetime(2011, 12, 11)\n\ndf.head()","fc785a34":"\n#########################\n# Preparing Dataset\n#########################\n\n# Recency: How recently a customer has made a purchase\n# Frequency: How often a customer makes a purchase\n# Monetary Value: How much money a customer spends on purchases\n\ncltv_df = df.groupby('Customer ID').agg({'InvoiceDate': [lambda date: (date.max() - date.min()).days,\n                                                         lambda date: (today_date - date.min()).days],\n                                        'Invoice': lambda num: num.nunique(),\n                                        'TotalPrice': lambda TotalPrice: TotalPrice.sum()})\n\ncltv_df.columns = cltv_df.columns.droplevel(0)\ncltv_df.columns = ['recency', 'T', 'frequency', 'monetary']\n\ncltv_df[\"monetary\"] = cltv_df[\"monetary\"] \/ cltv_df[\"frequency\"]\n\ncltv_df = cltv_df[cltv_df[\"monetary\"] > 0]\n\ncltv_df.head()","c93247dd":"# Recency and T value is converted to \"Weekly\" \ncltv_df[\"recency\"] = cltv_df[\"recency\"] \/ 7\ncltv_df[\"T\"] = cltv_df[\"T\"] \/ 7","bb0b1221":"# If there is lower 1 transaction value, then they are not selected: \ncltv_df = cltv_df[(cltv_df['frequency'] > 1)]","1f09fc59":"\nbgf = BetaGeoFitter(penalizer_coef=0.001)\n\nbgf.fit(cltv_df['frequency'],\n        cltv_df['recency'],\n        cltv_df['T'])\n\n# 1 haftal\u0131k beklenen transaction\ncltv_df[\"expected_purc_1_week\"] = bgf.predict(1,\n                                              cltv_df['frequency'],\n                                              cltv_df['recency'],\n                                              cltv_df['T'])","99e682e3":"# For one Monthly, Expcexted Purchase Transactions count\ncltv_df[\"expected_purc_1_month\"] = bgf.predict(4,\n                                               cltv_df['frequency'],\n                                               cltv_df['recency'],\n                                               cltv_df['T'])","8d6938b0":"cltv_df.head()","dd355f4b":"## BG-NBD ~ Expected Transaction Model\n\n**This model was proposed by Fader, Hardie and Lee and is called Beta Geometric \/ Negative Binomial distribution model (BG\/NBD). BG\/NBD model has the following properties: When a user is active, a number of his or her transactions in a time period of length t is described by Poisson distribution with transaction rate \u03bb**"}}