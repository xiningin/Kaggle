{"cell_type":{"b5657d29":"code","057276c2":"code","0c7c82cd":"code","d80e046a":"code","439a6cd5":"code","36379dde":"code","6d2facf4":"code","81c3c35f":"code","f32ef677":"code","9e78a176":"code","59bfcebd":"code","fb6f3989":"code","a3fcf6a0":"code","2e64a90a":"code","01f7879b":"code","89c0e0cc":"code","da67faaa":"code","0a5a7ac5":"code","b89eb96f":"code","fc9757d9":"code","2afb0c80":"code","a022570b":"code","537ba036":"code","0aa25509":"code","56d70ebf":"code","9af7ce11":"code","4a3ed23e":"code","90808077":"code","17332163":"code","3b9fadd5":"code","50bec318":"code","a77c07de":"code","b47a9da0":"code","75a216c4":"code","7319bad5":"code","d570e984":"code","a89d78ca":"code","cd120450":"markdown","fb22b04b":"markdown","fd8dd2d9":"markdown","57cff645":"markdown","c120ba10":"markdown","c7b54d83":"markdown","03c803df":"markdown"},"source":{"b5657d29":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","057276c2":"data1 = pd.read_csv(\"..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv\", parse_dates=True)\ndata2 = pd.read_csv(\"..\/input\/covid-world-vaccination-progress\/country_vaccinations_by_manufacturer.csv\", parse_dates=True)","0c7c82cd":"data1.head()","d80e046a":"data1.tail()","439a6cd5":"data1['date'] = pd.to_datetime(data1['date'])","36379dde":"data2.head()","6d2facf4":"data2['date'] = pd.to_datetime(data2['date'])","81c3c35f":"print(\"data 1\",data1.shape, \"data2\", data2.shape)","f32ef677":"data1.info()","9e78a176":"data1.isnull().sum()","59bfcebd":"data1_del_na = data1.dropna()","fb6f3989":"data1_del_na.info()\n# As we can see the amount of data become very small.(less than half of original data)","a3fcf6a0":"data1['total_vaccinations']=data1['total_vaccinations'].fillna(data1['total_vaccinations'].mean())\ndata1['people_vaccinated']=data1['people_vaccinated'].fillna(data1['people_vaccinated'].mean())\ndata1['daily_vaccinations_raw']=data1['daily_vaccinations_raw'].fillna(data1['daily_vaccinations_raw'].mean())\ndata1['daily_vaccinations']=data1['daily_vaccinations'].fillna(data1['daily_vaccinations'].mean())\ndata1['total_vaccinations_per_hundred']=data1['total_vaccinations_per_hundred'].fillna(data1['total_vaccinations_per_hundred'].mean())\ndata1['people_vaccinated_per_hundred']=data1['people_vaccinated_per_hundred'].fillna(data1['people_vaccinated_per_hundred'].mean())\ndata1['people_fully_vaccinated_per_hundred']=data1['people_fully_vaccinated_per_hundred'].fillna(data1['people_fully_vaccinated_per_hundred'].mean())\ndata1['daily_vaccinations_per_million']=data1['daily_vaccinations_per_million'].fillna(data1['daily_vaccinations_per_million'].mean())","2e64a90a":"data2.info()\n# Vaccine by manufaturer has no missing data","01f7879b":"data1.describe()","89c0e0cc":"data2.describe()","da67faaa":"plt.figure(figsize=(16,10))\nsns.lineplot(data=data1)","0a5a7ac5":"data_apply = data1.groupby(\"country\").apply(lambda df : df.loc[df.total_vaccinations.idxmax()])\ndata_apply\n# Countries with total vaccinations","b89eb96f":"data1['year'] = pd.DatetimeIndex(data1['date']).year\ndata1['month'] = pd.DatetimeIndex(data1['date']).month","fc9757d9":"data1['date'].value_counts().sort_values().plot.line()","2afb0c80":"data1['date'].value_counts().resample('M').sum().plot.line()\n# From the plot, near in march the vaccination was at peak","a022570b":"from pandas.plotting import lag_plot\nplt.figure(figsize =(10,10))\nlag_plot(data1['date'].tail(500))","537ba036":"x=data1.groupby(['country']).count()\nx=x.sort_values(by='vaccines',ascending=False)\nx=x.iloc[0:20].reset_index()\nx\n# #plot\nplt.figure(figsize=(8,4))\nax= sns.barplot(x.vaccines, x.country, alpha=0.8)\nplt.title(\"Country V\/s Vaccine \")\nplt.ylabel('Country', fontsize=12)\nplt.xlabel('Vaccine', fontsize=12)\nplt.show()","0aa25509":"# Vaccines with their value counts and country, min and max to they are vaccinated.\ndata1.groupby(\"vaccines\").country.agg([len,min,max])\n# This shows \"Moderna, Oxford\/AstraZeneca, Pfizer\/BioNTech\" is the maximum used vaccine ","56d70ebf":"# Vaccines with their value counts and number of min and max people vaccinated.\ndata1.groupby(\"vaccines\").people_vaccinated.agg([len,min,max])","9af7ce11":"ts=data1.groupby([\"date\"])[\"daily_vaccinations\"].sum()\nts.astype('float')\nplt.figure(figsize=(16,8))\nplt.title('Daily Vaccination')\nplt.xlabel('Date')\nplt.ylabel('Total Vaccinated')\nplt.plot(ts);","4a3ed23e":"sort_vaccine = data1.vaccines.value_counts().head(15)\nsort_vaccine.head(15)","90808077":"vaccine_gp = data1.groupby([\"vaccines\"])\nvac_gp_max = vaccine_gp.max()\nmax_vaccine = vac_gp_max.reset_index()\nmax_vaccine","17332163":"plt.figure(figsize=(10,10))\nsns.kdeplot(data=data1['total_vaccinations'], label='total vaccine')\nsns.kdeplot(data=data1['people_vaccinated'], label = 'vaccinated')\nsns.kdeplot(data=data1['people_fully_vaccinated'],label = 'fully vaccinated')\nplt.legend()","3b9fadd5":"plt.figure(figsize=(12,12))\nsns.barplot(y=\"vaccines\", x= \"people_vaccinated\", data = data1)\nplt.xlabel(\"People Vaccinated\",color = \"Red\", fontsize=20)\nplt.ylabel(\"Vaccines\",color = \"Red\", fontsize=20)\nplt.title(\" Vaccines V\/S People Vaccinated\",color = \"Red\", fontsize=20)\nplt.show()","50bec318":"plt.figure(figsize=(12,12))\nsns.barplot(x='total_vaccinations',y='vaccines',data=data1)\nplt.xlabel(\"Total Vaccination\",color = \"Red\", fontsize=20)\nplt.ylabel(\"Vaccines\",color = \"Red\", fontsize=20)\nplt.title(\" Vaccines V\/S Total Vaccination\",color = \"Red\", fontsize=20)\nplt.show()","a77c07de":"country_gp = data1.groupby(['country'])\ncountry_gp_max = country_gp.max('people_vaccinated')\nmax_country = country_gp_max.reset_index()\nmax_country","b47a9da0":"plt.figure(figsize=(35,35))\nsns.pairplot(data=data1)","75a216c4":"correlation = data1.corr()","7319bad5":"plt.figure(figsize=(15,10))\nsns.heatmap(correlation, annot=True)","d570e984":"plt.figure(figsize=(10,5))\nsns.regplot(x=\"total_vaccinations\",y=\"daily_vaccinations_per_million\", data=data1)","a89d78ca":"plt.figure(figsize=(20,20))\nsns.lmplot(x='total_vaccinations',y='people_vaccinated',data=data1)","cd120450":"### Some Visualization","fb22b04b":"### Importing the dataset","fd8dd2d9":"### Dealing With Null Values","57cff645":"2. By imputting the values using simple imputer","c120ba10":"1. By deleting the null values","c7b54d83":"### Loading Libraries","03c803df":"### Descriptive Statistics"}}