{"cell_type":{"329f050a":"code","19611715":"code","074a79e0":"code","f7055590":"code","2db8f10d":"code","e23b5c19":"code","27f20aef":"code","0bb9d146":"code","f0cde616":"code","d907e8c1":"code","80c9d7d9":"code","f4fbc863":"code","24762cb4":"code","0b1fbc8f":"code","5a579a92":"code","6f7ee3ed":"code","8528da89":"markdown","0412edec":"markdown","f0d3c785":"markdown","b97ae8de":"markdown","328f4554":"markdown","32526df0":"markdown","07e3fc1c":"markdown","45ac7cd2":"markdown","1f7ee031":"markdown","378fd718":"markdown"},"source":{"329f050a":"import numpy as np # \u6570\u7ec4\u5e38\u7528\u5e93\nimport pandas as pd # \u8bfb\u5165csv\u5e38\u7528\u5e93\nfrom sklearn.linear_model import LinearRegression # sk-learn\u5e93Linear Regression\u6a21\u578b\nfrom sklearn.model_selection import train_test_split # sk-learn\u5e93\u8bad\u7ec3\u4e0e\u6d4b\u8bd5\nfrom sklearn import metrics # \u751f\u6210\u5404\u9879\u6d4b\u8bd5\u6307\u6807\u5e93\nimport matplotlib.pyplot as plt # \u753b\u56fe\u5e38\u7528\u5e93\nimport math #\u6570\u5b66\u5e93","19611715":"data = pd.read_csv('..\/input\/kc_house_data.csv')\ndata.head()","074a79e0":"data.dtypes\ndata.columns\n\n## why the number '15' after sqft_living and sqft_lot ???","f7055590":"X = data[['bedrooms','bathrooms','sqft_living','floors']]\nY = data['price']","2db8f10d":"Xtrain, Xtest, ytrain, ytest = train_test_split(X, Y, test_size = 1\/3, random_state = 0)","e23b5c19":"Xtrain = np.asmatrix(Xtrain)\nXtest = np.asmatrix(Xtest)\nytrain = np.ravel(ytrain)\nytest = np.ravel(ytest)","27f20aef":"plt.scatter(X.sqft_living, Y)","0bb9d146":"X.sqft_living.hist()","f0cde616":"model = LinearRegression()\nmodel.fit(Xtrain, ytrain)\n\nmodel.coef_","d907e8c1":"pd.DataFrame(list(zip(X.columns, model.coef_)))","80c9d7d9":"model.intercept_","f4fbc863":"#\u4e00\u4e2a\u623f\u5b50\uff0c3\u4e2a\u5367\u5ba4\uff0c2\u4e2a\u536b\u751f\u95f4\uff0c2500sqft\uff0c2\u5c42\u697c\uff0c\u9884\u6d4b\u623f\u4ef7\nmodel.predict(np.array([[3, 2, 2500, 2]]))","24762cb4":"pred = model.predict(Xtrain)\n((pred-ytrain) ** 2).sum()\/len(ytrain)","0b1fbc8f":"(abs(pred-ytrain)\/ytrain).sum()\/len(ytrain)","5a579a92":"predtest = model.predict(Xtest)\n((predtest-ytest) ** 2).sum() \/ len(ytest)","6f7ee3ed":"(abs(predtest-ytest)\/ytest).sum() \/ len(ytest)","8528da89":"\u89c2\u5bdf\u751f\u6d3b\u9762\u79ef\u5206\u5e03","0412edec":"****\u4ece..\/input\/kc_house_data.csv\u6587\u4ef6\u4e2d\u8bfb\u5165\u6570\u636e","f0d3c785":"\u89c2\u5bdf\u623f\u4ef7\u548c\u751f\u6d3b\u9762\u79ef\u7684\u5173\u7cfb","b97ae8de":"# Linear Regression\u9884\u6d4b\u623f\u4ef7","328f4554":"\u83b7\u5f97\u81ea\u53d8\u91cfX\u548c\u56e0\u53d8\u91cfY","32526df0":"\u6d4b\u8bd5\u96c6\u5408\u4e0a\u7684MSE","07e3fc1c":"\u8bad\u7ec3\u96c6\u4e0a\u7684\u5747\u65b9\u5deeMSE","45ac7cd2":"\u83b7\u5f972:1\u7684\u8bad\u7ec3\uff1a\u6d4b\u8bd5\u6570\u636e\u6bd4\u4f8b","1f7ee031":"\u7528xtrain\u548cytrain\u8bad\u7ec3\u6a21\u578b","378fd718":"\u5e73\u5747\u76f8\u5bf9\u8bef\u5dee"}}