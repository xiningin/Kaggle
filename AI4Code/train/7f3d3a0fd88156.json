{"cell_type":{"42940162":"code","47df2941":"code","f4009c44":"code","1b820394":"code","29230ff6":"code","9978dd0f":"code","db8fb194":"code","819cbf76":"code","5524ec06":"code","dc4d1676":"code","1032e5b0":"code","b8c0ad55":"code","5b33966b":"code","8bf779e3":"code","e1095569":"code","0683fec9":"code","b0884d60":"code","12c8f82c":"code","d68c4c2a":"code","3b1509e3":"code","90378f68":"code","234e57f6":"code","8756a609":"code","92a0e94d":"code","c643cfca":"code","8db7c110":"code","1d9e25a3":"code","8b83db7d":"code","c25b9560":"code","90cd409d":"code","7be4aeb8":"code","04c8e833":"code","44bf5bd2":"code","6b7e0cda":"code","30612c37":"code","7e5824c7":"code","002a50fd":"code","757d92e8":"code","d1ac85f8":"code","6d857640":"code","9b64965f":"code","7c6936bc":"code","2724af36":"code","43795d0c":"code","e80c8779":"code","a0058748":"code","93bab5eb":"code","177b4e2e":"code","abc2666c":"code","110776be":"code","4faba72f":"code","86253d11":"code","54fb1105":"code","f91be5fe":"code","46d28b43":"code","4968d6a7":"code","869741de":"code","0dccde21":"code","ead6eb79":"code","8e1ff577":"code","60b636dc":"markdown","3d5a067c":"markdown","e936bd02":"markdown","afccda9c":"markdown","1ea9b329":"markdown","fd1465a9":"markdown","3a474160":"markdown","0533f820":"markdown","87948b67":"markdown","76dc84d1":"markdown","e0d6c7b6":"markdown","e7df17c1":"markdown","9f0075b4":"markdown","2bfe801a":"markdown","f50aa4d1":"markdown","c1f185f8":"markdown","f976b178":"markdown","f1e2d6ce":"markdown","e5c79d5c":"markdown","5afe8246":"markdown"},"source":{"42940162":"%matplotlib inline\nfrom matplotlib import pylab as plt\nimport matplotlib.dates as mdates\nplt.rcParams['figure.figsize'] = (15.0, 8.0)\nimport pandas as pd\nimport seaborn as sns\n\nfrom IPython.display import SVG\nfrom keras.utils.vis_utils import model_to_dot","47df2941":"#!pip install bokeh==0.9.3 -U","f4009c44":"from pandas.tseries.holiday import USFederalHolidayCalendar as calendar","1b820394":"import bokeh as bk","29230ff6":"bk.__version__","9978dd0f":"from bokeh.charts import output_file, show ,TimeSeries \nfrom bokeh.io import output_notebook\noutput_notebook()","db8fb194":"data = pd.read_csv(\"\/kaggle\/input\/D202.csv\")\ndata.head(2)","819cbf76":"data[\"DATE_TIME\"] = pd.to_datetime(data.DATE + \" \" + data[\"END TIME\"])","5524ec06":"data[\"DAY_TYPE\"] = data.DATE_TIME.apply(lambda x: 1 if x.dayofweek > 5 else 0  )","dc4d1676":"cal = calendar()\nholidays = cal.holidays(start = data.DATE_TIME.min(), end = data.DATE_TIME.max())\ndata[\"IS_HOLIDAY\"] = data.DATE_TIME.isin(holidays)","1032e5b0":"data.head(3)","b8c0ad55":"for obs in range(1,6):\n    data[\"T_\" + str(obs)] = data.USAGE.shift(obs)","5b33966b":"data.fillna(0.00,inplace=True)\ndata.head(10)","8bf779e3":"data.IS_HOLIDAY = data.IS_HOLIDAY.astype(\"int\")","e1095569":"data.head(2)","0683fec9":"clean_data = data[['DAY_TYPE', 'IS_HOLIDAY', 'T_1','T_2', 'T_3', 'T_4', 'T_5','USAGE']]","b0884d60":"clean_data.head(2)","12c8f82c":"data_tmp_dict = dict(Usage=data['USAGE'], Date=data['DATE_TIME'])","d68c4c2a":"p = TimeSeries(data_tmp_dict, index='Date', title=\"Usage\", ylabel='Usage in kWh')\n\nshow(p)","3b1509e3":"xmask = (data.DATE_TIME >= pd.to_datetime(\"12\/20\/2016\")) & \n(data.DATE_TIME <= pd.to_datetime(\"12\/27\/2016\"))","90378f68":"xmas_week = data.loc[xmask]","234e57f6":"xmas_dict = dict(Usage=xmas_week['USAGE'],Date=xmas_week['DATE_TIME'])\n#data_tmp_dict = dict(Usage=data['USAGE'], Date=data['DATE_TIME'])","8756a609":"xmas_show = TimeSeries(xmas_dict, index='Date', title=\"Usage Xmas Day\", ylabel='Usage in kWh')\n\nshow(xmas_show)","92a0e94d":"dmask = (data.DATE_TIME >= pd.to_datetime(\"01\/01\/2017\")) & (data.DATE_TIME < pd.to_datetime(\"01\/02\/2017\"))\nnyd = data.loc[dmask]","c643cfca":"nyd_dict = dict(Usage=nyd['USAGE'],Date=nyd['DATE_TIME'])","8db7c110":"nyd_show = TimeSeries(nyd_dict, index='Date', title=\"Usage New Years Day\", ylabel='Usage in kWh')\n\nshow(nyd_show)","1d9e25a3":"training_data = data[data.DATE_TIME < pd.to_datetime(\"08\/01\/2017\")]","8b83db7d":"val_mask = (data.DATE_TIME >= pd.to_datetime(\"08\/01\/2017\")) & (data.DATE_TIME < pd.to_datetime(\"09\/01\/2017\"))\nval_data = data.loc[val_mask]","c25b9560":"test_data = data[data.DATE_TIME >= pd.to_datetime(\"09\/01\/2017\")]","90cd409d":"training_data.tail(3)","7be4aeb8":"test_data.head(2)","04c8e833":"clean_train = training_data[['DAY_TYPE', 'IS_HOLIDAY', 'T_1','T_2', 'T_3', 'T_4', 'T_5','USAGE']]\nclean_test = test_data[['DAY_TYPE', 'IS_HOLIDAY', 'T_1','T_2', 'T_3', 'T_4', 'T_5','USAGE']]\nclean_val = val_data[['DAY_TYPE', 'IS_HOLIDAY', 'T_1','T_2', 'T_3', 'T_4', 'T_5','USAGE']]","44bf5bd2":"clean_train.head(2)","6b7e0cda":"clean_test.head(2)","30612c37":"clean_val.head(3)","7e5824c7":"from sklearn.preprocessing import StandardScaler,MinMaxScaler\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score,mean_squared_error","002a50fd":"X_train,y_train = clean_train.drop([\"USAGE\"],axis=1),clean_train.USAGE\nX_test,y_test = clean_test.drop([\"USAGE\"],axis=1),clean_test.USAGE\nX_val,y_val = clean_val.drop([\"USAGE\"],axis=1),clean_val.USAGE","757d92e8":"scaler = StandardScaler()\n#scaler = MinMaxScaler(feature_range=(-1, 1))\nrfr  = RandomForestRegressor(random_state=2017,verbose=2,n_jobs=5)","d1ac85f8":"X_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.fit_transform(X_test)\nX_valid_scaled = scaler.fit_transform(X_val)","6d857640":"rfr.fit(X_train_scaled,y_train)","9b64965f":"rfr.score(X_val,y_val)","7c6936bc":"rfr.score(X_test,y_test)","2724af36":"test_data[\"RF_PREDICTED\"] = rfr.predict(X_test_scaled)","43795d0c":"test_data.head(5)","e80c8779":"pred_show = TimeSeries(test_data,x=\"DATE_TIME\",y=[\"USAGE\",\"RF_PREDICTED\"],legend=True,plot_width=800, plot_height=350)\nshow(pred_show)","a0058748":"sep_30m = test_data[test_data.DATE_TIME >= pd.to_datetime(\"09\/30\/2017\")]\n\nsep_30rf = TimeSeries(sep_30m,x=\"DATE_TIME\",y=[\"USAGE\",\"RF_PREDICTED\"],legend=True,plot_width=900, plot_height=350)\nshow(sep_30rf)","93bab5eb":"from keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import LSTM","177b4e2e":"model_k = Sequential()\nmodel_k.add(LSTM(1, input_shape=(1,7)))\nmodel_k.add(Dense(1))\nmodel_k.compile(loss='mean_squared_error', optimizer='adam')","abc2666c":"SVG(model_to_dot(model_k).create(prog='dot', format='svg'))","110776be":"X_t_reshaped = X_train_scaled.reshape((X_train_scaled.shape[0], 1, X_train_scaled.shape[1]))","4faba72f":"X_val_resaped = X_valid_scaled.reshape((X_valid_scaled.shape[0], 1, X_valid_scaled.shape[1]))","86253d11":"history = model_k.fit(X_t_reshaped, y_train, validation_data=(X_val_resaped, y_val),\\\nepochs=10, batch_size=96, verbose=2)","54fb1105":"plt.plot(history.history['loss'], label='train')\nplt.plot(history.history['val_loss'], label='test')\nplt.legend()","f91be5fe":"X_te_reshaped = X_test_scaled.reshape((X_test_scaled.shape[0], 1, X_test_scaled.shape[1]))","46d28b43":"res = model_k.predict(X_te_reshaped)","4968d6a7":"test_data[\"DL_PRED\"] = res","869741de":"keras_show = TimeSeries(test_data,x=\"DATE_TIME\",y=[\"USAGE\",\"RF_PREDICTED\",\"DL_PRED\"],legend=True,plot_width=900, plot_height=350)\nshow(keras_show)","0dccde21":"sep_30m = test_data[test_data.DATE_TIME >= pd.to_datetime(\"09\/30\/2017\")]\n\nsep_30 = TimeSeries(sep_30m,x=\"DATE_TIME\",y=[\"USAGE\",\"RF_PREDICTED\",\"DL_PRED\"],legend=True,plot_width=900, plot_height=350)\nshow(sep_30)","ead6eb79":"from numpy import sqrt\nsqrt(mean_squared_error(test_data.USAGE,test_data.DL_PRED))","8e1ff577":"sqrt(mean_squared_error(test_data.USAGE,test_data.RF_PREDICTED))","60b636dc":"#### Finding Fedaral Holidays","3d5a067c":"### Let's Explore","e936bd02":"### Let's Model and Predict","afccda9c":"##### Fit the Model","1ea9b329":"#### LSTM Prediction on Test Data","fd1465a9":"#### Reshape the data to 3D","3a474160":"#### Prediction Single Day in Test Data","0533f820":"### LSTM Modelling","87948b67":"### Prediction with Random Forest Model in Test Data","76dc84d1":"### Train and Test Data","e0d6c7b6":"#### Previous Five Observations","e7df17c1":"#### LSTM Model","9f0075b4":"#### RMSE Value of Random Forest and LSTM","2bfe801a":"#### Creating Date and Time Filed","f50aa4d1":"### A Day ! New Year 2017","c1f185f8":"#### A Day on LSTM Predcted Result","f976b178":"#### Clean Data","f1e2d6ce":"### A Week ! Yes X'Mas Week","e5c79d5c":"### Data Preparation\nEleven months data from one bed one bath apartment unit in San Jose, CA region was picked for this experiment. The electricity consumption is recorded in 15 minutes interval by the energy supply company. The raw data contains information such as type, date, start time, end time, usage, units, cost and notes fields. The start time and end time is the measurement interval. In this data, the interval is 15 minutes. The usage in 15 minutes interval is provided in kWh unit, and the cost for the consumption is presented in the dollar. Before we deep dive into the data, some quick feature engineering steps are done to enrich the data with more features. ","5afe8246":"#### Working Day or Not"}}