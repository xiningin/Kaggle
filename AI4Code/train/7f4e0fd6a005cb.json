{"cell_type":{"8aac1ee8":"code","d0f1b8df":"code","e2aae424":"code","2ce0e0b4":"code","ed2574cc":"code","3a38cd7b":"code","a0bc6b90":"code","7d12ef60":"code","934a4487":"code","bfa2dc66":"code","eeaa0f71":"code","20409641":"code","38a297aa":"code","653e7a8c":"code","26b45ead":"code","9d1f8cbf":"code","f6494e2f":"code","cc248dac":"code","635000f7":"code","c1cb61d9":"code","655e718f":"code","108a75bb":"code","0c10a23e":"code","738b557b":"code","0254365a":"code","43377062":"code","49adf414":"code","73d7a0d5":"code","34ad812d":"code","1dba714b":"code","cd97c049":"code","488551c2":"code","a5907cc5":"code","473adb2d":"code","b25aa886":"code","b46badb4":"code","ac5dc531":"code","6c246d4a":"code","6be91f83":"code","92ddd285":"code","87656db2":"code","1c2c15bf":"code","3a604b62":"code","51637f9a":"code","acfe67e5":"code","54e40691":"code","3cd8bf10":"code","a29e716c":"code","96da7c4d":"code","625a0bd8":"code","263d26f7":"code","43204e2f":"code","b17214a1":"markdown","fad5940c":"markdown","47a6e398":"markdown","c69aa262":"markdown","b957921a":"markdown","fd909767":"markdown","a7a672c8":"markdown","6d2f631c":"markdown","eadb9ad2":"markdown","82c93f4c":"markdown","562b454e":"markdown","75e5076a":"markdown","ded9afa2":"markdown","43c3a45d":"markdown","7625c1cf":"markdown","27e2fc7d":"markdown","a3ffe3d7":"markdown"},"source":{"8aac1ee8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d0f1b8df":"import matplotlib.pyplot as plt \nimport seaborn as sns\nimport datetime as dt\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\ncolor = sns.color_palette()\nimport plotly.offline as py\nfrom plotly import tools\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go","e2aae424":"fifa=pd.read_csv('\/kaggle\/input\/fifa-20-complete-player-dataset\/players_20.csv')","2ce0e0b4":"fifa.head()","ed2574cc":"fifa.dob=pd.to_datetime(fifa.dob)","3a38cd7b":"fifa.potential","a0bc6b90":"fifa_potential=fifa[(fifa.potential>85 )& (fifa.overall<80)]","7d12ef60":"fifa_potential_ready=fifa_potential[(fifa_potential.overall<80)&(fifa_potential.overall>70)]","934a4487":"position=\"GK\"\nfifa_potential_ready_GK=fifa_potential_ready[fifa.player_positions.str.contains(position)]","bfa2dc66":"fifa_potential_ready_GK","eeaa0f71":"figure,ax=plt.subplots(1,2)\nfigure.set_size_inches(10,10)\nfigure=plt.gcf()\nsns.set(style='darkgrid')\nsns.barplot(fifa_potential_ready_GK.short_name,fifa_potential_ready_GK.overall,ax=ax[0])\nax[0].tick_params(axis=\"x\", rotation=70)\nsns.barplot(fifa_potential_ready_GK.short_name,fifa_potential_ready_GK.potential,ax=ax[1])\ncount=0\nfor i in fifa_potential_ready_GK.potential:\n    plt.text(count-0.15,i-4,str(i),size=15,color='black',rotation=90)\n    count+=1\nfigure.suptitle('Top potential GK in FIFA 20 ',fontsize=20)\nax[1].tick_params(axis=\"x\", rotation=70)","20409641":"def scatter_plot(cnt_srs, color):\n   trace = go.Scatter(\n       x=cnt_srs.index[::-1],\n       y=cnt_srs.values[::-1],\n       showlegend=False,\n       marker=dict(\n           color=color,\n       ),\n   )\n   return trace\ncnt_srs = fifa_potential_ready_GK.value_eur\ncnt_srs.index = fifa_potential_ready_GK.short_name\ntrace1 = scatter_plot(cnt_srs, 'red')\nsubtitles = [\" Potential GK player values(Euros)\"]\nfig = tools.make_subplots(rows=1, cols=1, vertical_spacing=0.08,\n                         subplot_titles=subtitles)\nfig.append_trace(trace1, 1, 1)\nfig['layout'].update(height=600, width=600, paper_bgcolor='rgb(233,233,233)')\npy.iplot(fig, filename='h2o-plots')","38a297aa":"position=\"LB\"\nposition1=\"LWB\"\nfifa_potential_LB=fifa_potential_ready[(fifa.player_positions.str.contains(position))|(fifa.player_positions.str.contains(position1))]","653e7a8c":"fifa_potential_LB","26b45ead":"figure,ax=plt.subplots(1,2)\nfigure.set_size_inches(10,10)\nfigure=plt.gcf()\nsns.set(style='darkgrid')\nsns.barplot(fifa_potential_LB.short_name,fifa_potential_LB.overall,ax=ax[0])\nsns.barplot(fifa_potential_LB.short_name,fifa_potential_LB.potential,ax=ax[1])\ncount=0\nfor i in fifa_potential_LB.potential:\n    plt.text(count-0.15,i-4,str(i),size=15,color='black',rotation=90)\n    count+=1\nfigure.suptitle('Top potential LB in FIFA 20 ',fontsize=20)\nax[0].tick_params(axis=\"x\", rotation=70)\nax[1].tick_params(axis=\"x\", rotation=70)","9d1f8cbf":"def scatter_plot(cnt_srs, color):\n   trace = go.Scatter(\n       x=cnt_srs.index[::-1],\n       y=cnt_srs.values[::-1],\n       showlegend=False,\n       marker=dict(\n           color=color,\n       ),\n   )\n   return trace\ncnt_srs = fifa_potential_LB.value_eur\ncnt_srs.index = fifa_potential_LB.short_name\ntrace1 = scatter_plot(cnt_srs, 'red')\nsubtitles = [\"Potential LB player values(Euros) \"]\nfig = tools.make_subplots(rows=1, cols=1, vertical_spacing=0.08,\n                         subplot_titles=subtitles)\nfig.append_trace(trace1, 1, 1)\nfig['layout'].update(height=600, width=600, paper_bgcolor='rgb(233,233,233)')\npy.iplot(fig, filename='h2o-plots')","f6494e2f":"position=\"RB\"\nposition1=\"RWB\"\nfifa_potential_RB=fifa_potential_ready[(fifa.player_positions.str.contains(position))|(fifa.player_positions.str.contains(position1))]","cc248dac":"fifa_potential_RB","635000f7":"figure,ax=plt.subplots(1,2)\nfigure.set_size_inches(10,10)\nfigure=plt.gcf()\nsns.set(style='darkgrid')\nsns.barplot(fifa_potential_RB.short_name,fifa_potential_RB.overall,ax=ax[0])\nsns.barplot(fifa_potential_RB.short_name,fifa_potential_RB.potential,ax=ax[1])\ncount=0\nfor i in fifa_potential_RB.potential:\n    plt.text(count-0.15,i-4,str(i),size=15,color='black',rotation=90)\n    count+=1\nfigure.suptitle('Top potential RB in FIFA 20 ',fontsize=20)\nax[0].tick_params(axis=\"x\", rotation=70)\nax[1].tick_params(axis=\"x\", rotation=70)","c1cb61d9":"def scatter_plot(cnt_srs, color):\n   trace = go.Scatter(\n       x=cnt_srs.index[::-1],\n       y=cnt_srs.values[::-1],\n       showlegend=False,\n       marker=dict(\n           color=color,\n       ),\n   )\n   return trace\ncnt_srs = fifa_potential_RB.value_eur\ncnt_srs.index = fifa_potential_RB.short_name\ntrace1 = scatter_plot(cnt_srs, 'red')\nsubtitles = [\"Potential RB player values(Euros)\"]\nfig = tools.make_subplots(rows=1, cols=1, vertical_spacing=0.08,\n                         subplot_titles=subtitles)\nfig.append_trace(trace1, 1, 1)\nfig['layout'].update(height=600, width=600, paper_bgcolor='rgb(233,233,233)')\npy.iplot(fig, filename='h2o-plots')","655e718f":"position=\"CB\"\nfifa_potential_cb=fifa_potential_ready[fifa.player_positions.str.contains(position)]","108a75bb":"fifa_potential_cb","0c10a23e":"figure,ax=plt.subplots(1,2)\nfigure.set_size_inches(15,8)\nfigure=plt.gcf()\nsns.set(style='darkgrid')\nsns.barplot(fifa_potential_cb.short_name,fifa_potential_cb.overall,ax=ax[0])\nsns.barplot(fifa_potential_cb.short_name,fifa_potential_cb.potential,ax=ax[1])\ncount=0\nfor i in fifa_potential_cb.potential:\n    plt.text(count-0.15,i-4,str(i),size=15,color='black',rotation=90)\n    count+=1\nfigure.suptitle('Top potential CB in FIFA 20 ',fontsize=20)\nax[0].tick_params(axis=\"x\", rotation=70)\nax[1].tick_params(axis=\"x\", rotation=70)","738b557b":"def scatter_plot(cnt_srs, color):\n   trace = go.Scatter(\n       x=cnt_srs.index[::-1],\n       y=cnt_srs.values[::-1],\n       showlegend=False,\n       marker=dict(\n           color=color,\n       ),\n   )\n   return trace\ncnt_srs = fifa_potential_cb.value_eur\ncnt_srs.index = fifa_potential_cb.short_name\ntrace1 = scatter_plot(cnt_srs, 'red')\nsubtitles = [\"Potential CB player values(Euros)\"]\nfig = tools.make_subplots(rows=1, cols=1, vertical_spacing=0.08,\n                         subplot_titles=subtitles)\nfig.append_trace(trace1, 1, 1)\nfig['layout'].update(height=600, width=600, paper_bgcolor='rgb(233,233,233)')\npy.iplot(fig, filename='h2o-plots')","0254365a":"position=\"CM\"\nfifa_potential_cm=fifa_potential_ready[fifa.player_positions.str.contains(position)]","43377062":"fifa_potential_cm","49adf414":"figure,ax=plt.subplots(1,2)\nfigure.set_size_inches(20,8)\nfigure=plt.gcf()\nsns.set(style='darkgrid')\nsns.barplot(fifa_potential_cm.short_name,fifa_potential_cm.overall,ax=ax[0])\nsns.barplot(fifa_potential_cm.short_name,fifa_potential_cm.potential,ax=ax[1])\ncount=0\nfor i in fifa_potential_cm.potential:\n    plt.text(count-0.15,i-4,str(i),size=11,color='black',rotation=90)\n    count+=1\nfigure.suptitle('Top potential CM in FIFA 20 ',fontsize=20)\nax[0].tick_params(axis=\"x\", rotation=90)\nax[1].tick_params(axis=\"x\", rotation=90)","73d7a0d5":"def scatter_plot(cnt_srs, color):\n   trace = go.Scatter(\n       x=cnt_srs.index[::-1],\n       y=cnt_srs.values[::-1],\n       showlegend=False,\n       marker=dict(\n           color=color,\n       ),\n   )\n   return trace\ncnt_srs = fifa_potential_cm.value_eur\ncnt_srs.index = fifa_potential_cm.short_name\ntrace1 = scatter_plot(cnt_srs, 'red')\nsubtitles = [\"Potential CM player values(Euros)\"]\nfig = tools.make_subplots(rows=1, cols=1, vertical_spacing=0.08,\n                         subplot_titles=subtitles)\nfig.append_trace(trace1, 1, 1)\nfig['layout'].update(height=600, width=600, paper_bgcolor='rgb(233,233,233)')\npy.iplot(fig, filename='h2o-plots')","34ad812d":"position=\"CAM\"\nfifa_potential_cam=fifa_potential_ready[fifa.player_positions.str.contains(position)]","1dba714b":"fifa_potential_cam","cd97c049":"figure,ax=plt.subplots(1,2)\nfigure.set_size_inches(18,8)\nfigure=plt.gcf()\nsns.set(style='darkgrid')\nsns.barplot(fifa_potential_cam.short_name,fifa_potential_cam.overall,ax=ax[0])\nsns.barplot(fifa_potential_cam.short_name,fifa_potential_cam.potential,ax=ax[1])\ncount=0\nfor i in fifa_potential_cam.potential:\n    plt.text(count-0.15,i-4,str(i),size=14,color='black',rotation=90)\n    count+=1\nfigure.suptitle('Top potential CAM in FIFA 20 ',fontsize=20)\nax[0].tick_params(axis=\"x\", rotation=90)\nax[1].tick_params(axis=\"x\", rotation=90)","488551c2":"def scatter_plot(cnt_srs, color):\n   trace = go.Scatter(\n       x=cnt_srs.index[::-1],\n       y=cnt_srs.values[::-1],\n       showlegend=False,\n       marker=dict(\n           color=color,\n       ),\n   )\n   return trace\ncnt_srs = fifa_potential_cam.value_eur\ncnt_srs.index = fifa_potential_cam.short_name\ntrace1 = scatter_plot(cnt_srs, 'red')\nsubtitles = [\"Potential CAM player values(Euros)\"]\nfig = tools.make_subplots(rows=1, cols=1, vertical_spacing=0.08,\n                         subplot_titles=subtitles)\nfig.append_trace(trace1, 1, 1)\nfig['layout'].update(height=600, width=600, paper_bgcolor='rgb(233,233,233)')\npy.iplot(fig, filename='h2o-plots')","a5907cc5":"position=\"CDM\"\nfifa_potential_cdm=fifa_potential_ready[fifa.player_positions.str.contains(position)]","473adb2d":"fifa_potential_cdm","b25aa886":"figure,ax=plt.subplots(1,2)\nfigure.set_size_inches(18,8)\nfigure=plt.gcf()\nplt.xticks(rotation=\"70\")\nsns.set(style='darkgrid')\nplt.xticks(rotation=\"70\")\nsns.barplot(fifa_potential_cdm.short_name,fifa_potential_cdm.overall,ax=ax[0])\nplt.xticks(rotation=\"70\")\nsns.barplot(fifa_potential_cdm.short_name,fifa_potential_cdm.potential,ax=ax[1])\ncount=0\nfor i in fifa_potential_cdm.potential:\n    plt.text(count-0.15,i-4,str(i),size=15,color='black',rotation=90)\n    count+=1\nfigure.suptitle('Top potential CDM in FIFA 20 ',fontsize=20)\nax[0].tick_params(axis=\"x\", rotation=70)\nax[1].tick_params(axis=\"x\", rotation=70)","b46badb4":"def scatter_plot(cnt_srs, color):\n   trace = go.Scatter(\n       x=cnt_srs.index[::-1],\n       y=cnt_srs.values[::-1],\n       showlegend=False,\n       marker=dict(\n           color=color,\n       ),\n   )\n   return trace\ncnt_srs = fifa_potential_cdm.value_eur\ncnt_srs.index = fifa_potential_cdm.short_name\ntrace1 = scatter_plot(cnt_srs, 'red')\nsubtitles = [\"Potential CDM player values(Euros)\"]\nfig = tools.make_subplots(rows=1, cols=1, vertical_spacing=0.08,\n                         subplot_titles=subtitles)\nfig.append_trace(trace1, 1, 1)\nfig['layout'].update(height=600, width=600, paper_bgcolor='rgb(233,233,233)')\npy.iplot(fig, filename='h2o-plots')","ac5dc531":"position=\"LW\"\nfifa_potential_lw=fifa_potential_ready[fifa.player_positions.str.contains(position)]","6c246d4a":"fifa_potential_lw","6be91f83":"figure,ax=plt.subplots(1,2)\nfigure.set_size_inches(18,8)\nfigure=plt.gcf()\nsns.set(style='darkgrid')\nsns.barplot(fifa_potential_lw.short_name,fifa_potential_lw.overall,ax=ax[0])\nsns.barplot(fifa_potential_lw.short_name,fifa_potential_lw.potential,ax=ax[1])\ncount=0\nfor i in fifa_potential_lw.potential:\n    plt.text(count-0.15,i-4,str(i),size=15,color='black',rotation=90)\n    count+=1\nfigure.suptitle('Top potential LW in FIFA 20 ',fontsize=20)\nax[0].tick_params(axis=\"x\", rotation=70)\nax[1].tick_params(axis=\"x\", rotation=70)","92ddd285":"def scatter_plot(cnt_srs, color):\n   trace = go.Scatter(\n       x=cnt_srs.index[::-1],\n       y=cnt_srs.values[::-1],\n       showlegend=False,\n       marker=dict(\n           color=color,\n       ),\n   )\n   return trace\ncnt_srs = fifa_potential_lw.value_eur\ncnt_srs.index = fifa_potential_lw.short_name\ntrace1 = scatter_plot(cnt_srs, 'red')\nsubtitles = [\"Potential LW player values(Euros)\"]\nfig = tools.make_subplots(rows=1, cols=1, vertical_spacing=0.08,\n                         subplot_titles=subtitles)\nfig.append_trace(trace1, 1, 1)\nfig['layout'].update(height=600, width=600, paper_bgcolor='rgb(233,233,233)')\npy.iplot(fig, filename='h2o-plots')","87656db2":"position=\"RW\"\nfifa_potential_rw=fifa_potential_ready[fifa.player_positions.str.contains(position)]","1c2c15bf":"fifa_potential_rw","3a604b62":"figure,ax=plt.subplots(1,2)\nfigure.set_size_inches(18,8)\nfigure=plt.gcf()\nsns.set(style='darkgrid')\nsns.barplot(fifa_potential_rw.short_name,fifa_potential_rw.overall,ax=ax[0])\nsns.barplot(fifa_potential_rw.short_name,fifa_potential_rw.potential,ax=ax[1])\ncount=0\nfor i in fifa_potential_rw.potential:\n    plt.text(count-0.15,i-4,str(i),size=15,color='black',rotation=90)\n    count+=1\nfigure.suptitle('Top potential RW in FIFA 20 ',fontsize=20)\nax[0].tick_params(axis=\"x\", rotation=70)\nax[1].tick_params(axis=\"x\", rotation=70)","51637f9a":"def scatter_plot(cnt_srs, color):\n   trace = go.Scatter(\n       x=cnt_srs.index[::-1],\n       y=cnt_srs.values[::-1],\n       showlegend=False,\n       marker=dict(\n           color=color,\n       ),\n   )\n   return trace\ncnt_srs = fifa_potential_rw.value_eur\ncnt_srs.index = fifa_potential_rw.short_name\ntrace1 = scatter_plot(cnt_srs, 'red')\nsubtitles = [\"Potential RW player values(Euros)\"]\nfig = tools.make_subplots(rows=1, cols=1, vertical_spacing=0.08,\n                         subplot_titles=subtitles)\nfig.append_trace(trace1, 1, 1)\nfig['layout'].update(height=600, width=600, paper_bgcolor='rgb(233,233,233)')\npy.iplot(fig, filename='h2o-plots')","acfe67e5":"position=\"ST\"\nfifa_potential_st=fifa_potential_ready[fifa.player_positions.str.contains(position)]","54e40691":"fifa_potential_st","3cd8bf10":"figure,ax=plt.subplots(1,2)\nfigure.set_size_inches(18,8)\nfigure=plt.gcf()\nsns.set(style='darkgrid')\nsns.barplot(fifa_potential_st.short_name,fifa_potential_st.overall,ax=ax[0])\nsns.barplot(fifa_potential_st.short_name,fifa_potential_st.potential,ax=ax[1])\ncount=0\nfor i in fifa_potential_st.potential:\n    plt.text(count-0.15,i-4,str(i),size=15,color='black',rotation=90)\n    count+=1\nfigure.suptitle('Top potential ST in FIFA 20 ',fontsize=20)\nax[0].tick_params(axis=\"x\", rotation=70)\nax[1].tick_params(axis=\"x\", rotation=70)","a29e716c":"def scatter_plot(cnt_srs, color):\n   trace = go.Scatter(\n       x=cnt_srs.index[::-1],\n       y=cnt_srs.values[::-1],\n       showlegend=False,\n       marker=dict(\n           color=color,\n       ),\n   )\n   return trace\ncnt_srs = fifa_potential_st.value_eur\ncnt_srs.index = fifa_potential_st.short_name\ntrace1 = scatter_plot(cnt_srs, 'red')\nsubtitles = [\"Potential ST player values(Euros)\"]\nfig = tools.make_subplots(rows=1, cols=1, vertical_spacing=0.08,\n                         subplot_titles=subtitles)\nfig.append_trace(trace1, 1, 1)\nfig['layout'].update(height=600, width=600, paper_bgcolor='rgb(233,233,233)')\npy.iplot(fig, filename='h2o-plots')","96da7c4d":"position=\"CF\"\nfifa_potential_cf=fifa_potential_ready[fifa.player_positions.str.contains(position)]","625a0bd8":"fifa_potential_cf","263d26f7":"figure,ax=plt.subplots(1,2)\nfigure.set_size_inches(18,8)\nfigure=plt.gcf()\nsns.set(style='darkgrid')\nsns.barplot(fifa_potential_cf.short_name,fifa_potential_cf.overall,ax=ax[0])\nsns.barplot(fifa_potential_cf.short_name,fifa_potential_cf.potential,ax=ax[1])\ncount=0\nfor i in fifa_potential_cf.potential:\n    plt.text(count-0.15,i-4,str(i),size=15,color='black',rotation=90)\n    count+=1\nfigure.suptitle('Top potential CF in FIFA 20 ',fontsize=20)\nax[0].tick_params(axis=\"x\", rotation=70)\nax[1].tick_params(axis=\"x\", rotation=70)","43204e2f":"def scatter_plot(cnt_srs, color):\n   trace = go.Scatter(\n       x=cnt_srs.index[::-1],\n       y=cnt_srs.values[::-1],\n       showlegend=False,\n       marker=dict(\n           color=color,\n       ),\n   )\n   return trace\ncnt_srs = fifa_potential_cf.value_eur\ncnt_srs.index = fifa_potential_cf.short_name\ntrace1 = scatter_plot(cnt_srs, 'red')\nsubtitles = [\"Potential CF player values(Euros)\"]\nfig = tools.make_subplots(rows=1, cols=1, vertical_spacing=0.08,\n                         subplot_titles=subtitles)\nfig.append_trace(trace1, 1, 1)\nfig['layout'].update(height=600, width=600, paper_bgcolor='rgb(233,233,233)')\npy.iplot(fig, filename='h2o-plots')","b17214a1":"**Top potential players in CDM position**","fad5940c":"**Potential GK**","47a6e398":"**Creating a dataframe with potential >85 and overall less than 80**","c69aa262":"**Top Potential RW in FIFA 20**","b957921a":"**TOP potential players in CM position**","fd909767":"**Top potential players in CAM position**","a7a672c8":"**TOP potential CB in FIFA 20**","6d2f631c":"**Top potential Players in ST position in FIFA 20**","eadb9ad2":"**Reading Data**","82c93f4c":"**Converting date of birth into datetime format**","562b454e":"**NOTE: Players can play in more than 1 poistion , hence they will appear in multiple charts.****","75e5076a":"**Top potential players in CF positon in FIFA 20**","ded9afa2":"**players with\npotential more than 85 and\noverall less than 80 but more than 70**","43c3a45d":"**TOP potential players in RB position**","7625c1cf":"**Top Potential LB players in FIFA 20**","27e2fc7d":"**Importing Libraries**","a3ffe3d7":"**Top Potential LW players in FIFA 20**"}}