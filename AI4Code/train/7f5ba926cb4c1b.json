{"cell_type":{"8ac920de":"code","350035b0":"code","82746204":"code","2fc92a6b":"code","6cdbf9ff":"code","0373c262":"code","f994e695":"code","ff30782f":"code","9b347dbc":"code","76eea6b6":"code","0108b5be":"code","1cc11a62":"code","88ae381d":"code","cb679265":"code","aa9ed73c":"code","8c4b276c":"code","02d72c5c":"code","d6770395":"code","3658e1f7":"code","b696d1a1":"code","592b9e58":"code","97fa7ea5":"code","8c822a87":"code","f8d24fee":"code","67f87cac":"code","bd3c46f0":"code","0181628e":"code","86a66a7d":"code","c183eec8":"code","3c1b26dd":"code","1a98df8b":"code","9653b769":"code","90af53a5":"code","54b9dc68":"code","001d7795":"code","87110787":"code","f2ad8d65":"code","00b4ea65":"code","8abe2c19":"code","be942df1":"code","cc518c90":"code","1d5dbbf1":"code","d846cf5f":"code","5f7ee5a2":"code","8016777d":"code","798bf32b":"code","5372c5d6":"code","b252c187":"code","c3c8e7e8":"markdown","e6216600":"markdown","92555e14":"markdown","22ab5aef":"markdown","9dace2e2":"markdown","e25db708":"markdown","4050c698":"markdown","e2fef0af":"markdown","88ea3ea3":"markdown","1228dae8":"markdown"},"source":{"8ac920de":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set(color_codes=True)\n%matplotlib inline                        \n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","350035b0":"print(np.__version__)\nprint(pd.__version__)\nprint(sns.__version__)\nimport sys\nprint(sys.version)","82746204":"df=pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')","2fc92a6b":"df.head()","6cdbf9ff":"df.tail()","0373c262":"col_name = ['sepal length', 'sepal width', 'petal length', 'petal width', 'class']","f994e695":"df.columns","ff30782f":"df.sample(5)","9b347dbc":"iris = sns.load_dataset('iris')\niris.head()","76eea6b6":"df.describe()","0108b5be":"iris.describe()","1cc11a62":"print(iris.info())","88ae381d":"print(iris.groupby('species').size())","cb679265":"df.cov()","aa9ed73c":"df.corr()","8c4b276c":"teju = df.cov()\nteju","02d72c5c":"#heatmap\nsns.heatmap(teju,annot=True,vmin=.2,vmax=3)","d6770395":"#print 2nd column of third and fourth row \ndf.iloc[2:4, 1:2]","3658e1f7":"#skewness\ndf.skew()","b696d1a1":"#Checking for Null Values\ndf.isnull().sum()","592b9e58":"df.notnull().sum()","97fa7ea5":"sns.relplot(data = df, x = \"SepalLengthCm\", y = \"SepalWidthCm\", color = 'purple')","8c822a87":"sns.jointplot(data = df, x = \"SepalLengthCm\", y = \"SepalWidthCm\")","f8d24fee":"sns.jointplot(data = df, x = \"PetalLengthCm\", y = \"PetalWidthCm\")","67f87cac":"#standard deviation\ndf.std()","bd3c46f0":"#Boxplot\ndf.plot.box(x='SepalWidthCm')\nplt.show()","0181628e":"sns.distplot(df.SepalWidthCm, color = 'red')","86a66a7d":"sns.pairplot(iris, hue='species', height=3, aspect=1);","c183eec8":"iris.hist(edgecolor='black', linewidth=1.2, figsize=(12,8));\nplt.show();","3c1b26dd":"plt.figure(figsize=(12,8));\nplt.subplot(2,2,1)\nsns.violinplot(x='species', y='sepal_length', data=iris)\nplt.subplot(2,2,2)\nsns.violinplot(x='species', y='sepal_width', data=iris)\nplt.subplot(2,2,3)\nsns.violinplot(x='species', y='petal_length', data=iris)\nplt.subplot(2,2,4)\nsns.violinplot(x='species', y='petal_width', data=iris);","1a98df8b":"pd.plotting.scatter_matrix(iris, figsize=(12,10))\nplt.show()","9653b769":"sns.pairplot(iris, hue=\"species\", diag_kind=\"kde\");","90af53a5":"generate_random = np.random.RandomState(0)\nx = 10 * generate_random.rand(100)","54b9dc68":"y = 3 * x + np.random.randn(100)","001d7795":"plt.figure(figsize = (10, 8))\nplt.scatter(x, y);","87110787":"from sklearn.linear_model import LinearRegression","f2ad8d65":"model = LinearRegression(fit_intercept=True)","00b4ea65":"model","8abe2c19":"X = x.reshape(-1, 1)\nX.shape","be942df1":"model.fit(X, y)","cc518c90":"model.coef_","1d5dbbf1":"model.intercept_","d846cf5f":"x_fit = np.linspace(-1, 11)","5f7ee5a2":"X_fit = x_fit.reshape(-1,1)","8016777d":"y_fit = model.predict(X_fit)","798bf32b":"plt.figure(figsize = (10, 8))\nplt.scatter(x, y)\nplt.plot(x_fit, y_fit);","5372c5d6":"sns.jointplot(x=df['SepalLengthCm'],y=df['SepalWidthCm'],kind='hex')","b252c187":"sns.set(rc={'figure.figsize':(25,10)})\nfig, axs = plt.subplots(ncols=4)\nsns.boxplot(x=df['SepalLengthCm'], data=df, ax=axs[0])\nsns.boxplot(x=df['SepalWidthCm'], data=df, ax=axs[1])\nsns.boxplot(x=df['PetalLengthCm'], data=df, ax=axs[2])\nsns.boxplot(x=df['PetalWidthCm'], data=df, ax=axs[3])","c3c8e7e8":"# Iris Data from Seaborn","e6216600":"# Step 2. Choose model hyperparameters\n","92555e14":"# Reading data ","22ab5aef":"# Step 5. Apply trained model to new data","9dace2e2":"# Step 4. Fit model to data","e25db708":"# Supervised Learning: Simple Linear Regression","4050c698":"# THANK YOU","e2fef0af":"# Step 3. Arrage data into features matrix and target array","88ea3ea3":"# Step 1. Choose a class of model","1228dae8":"# Data Visualisation"}}