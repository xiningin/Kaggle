{"cell_type":{"1af76ba3":"code","5a09c5cb":"code","5767af8a":"code","6f2147a2":"code","892d76e5":"code","dc9d5cc4":"code","0f07ea6d":"code","a812d032":"code","b4643a21":"code","d0dfa8fb":"code","613e87f5":"code","8bce17e9":"code","61d78b14":"code","18f7b7dd":"code","5577b144":"code","7b474d3e":"code","bc891226":"code","01f14a36":"code","e0c883ca":"code","482ca076":"code","6dbd69bb":"code","7b87ba5b":"code","72951231":"code","9024330d":"code","45913bdc":"code","408538c4":"code","50dbc13d":"code","a8e9c151":"code","3aaed54e":"code","76dc5b42":"code","6ac438e9":"code","c1ac24b4":"code","90fd56ff":"code","2edc7bf3":"code","1c311324":"code","0c697ae2":"code","3dc99695":"code","f216be68":"code","f1b3642c":"code","b0e9e4dd":"code","05162215":"code","f8f59e6b":"code","d257a672":"code","ceb1fe22":"code","df684a54":"code","c2f31a87":"code","3578856e":"code","f2211283":"code","2657d1c9":"code","d7d6b676":"code","07868a90":"code","d21299c0":"code","41763ee3":"code","4c13ae60":"code","647c9ac8":"code","b0f9a243":"code","344e6291":"code","af617de1":"code","cb1a8ede":"code","7233f03b":"code","73a5c3f8":"code","63c2884e":"code","018f7207":"code","9fba0885":"code","34a978b9":"code","e860040e":"code","7f28473e":"code","6f7ee8bb":"code","229fd155":"code","03452161":"code","b8a1de84":"code","debbbfed":"code","b4c8e8d2":"code","184795ba":"code","1847fe6b":"code","40bba8db":"code","ddda4ccc":"code","edffb79c":"code","10125d41":"code","7aa83a67":"code","427dcb80":"code","b44c6e1c":"code","3dfa8306":"code","25267cd1":"code","0aae6479":"code","3724b27e":"code","b453a80a":"code","b47934f8":"code","1a257715":"code","660d00d2":"code","cd75b63e":"code","c216107c":"code","5c1bcb5e":"code","445e0781":"code","2a58f850":"code","ef9d05f3":"code","fb6f4dad":"code","dabe9f83":"code","38967a10":"markdown","2d1d75ef":"markdown","5296a18a":"markdown","992df382":"markdown","3bee4aca":"markdown","49a4d95e":"markdown","045f9c8b":"markdown","61ea358f":"markdown","6dd653d1":"markdown","1b0c7d2b":"markdown","c423fddd":"markdown","ee449d74":"markdown"},"source":{"1af76ba3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use('seaborn')\nsns.set(font_scale=2.5)\n\nimport missingno as msno\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n%matplotlib inline","5a09c5cb":"# null data \ud655\uc778\n# EDA \uac01 \uceec\ub7fc\ub4e4\uc744 \ubd84\uc11d\ud558\uace0 \uc0c1\uad00\uad00\uacc4 \ubcf4\uae30\n# Feature engineering\n# modeling\ndf_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')","5767af8a":"df_train.head()","6f2147a2":"#\ud1b5\uacc4\uc801 \uc218\uce58\ndf_train.describe()","892d76e5":"df_test.describe()","dc9d5cc4":"for col in df_train.columns:\n    msg = 'column: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col, 100*(df_train[col].isnull().sum() \/ df_train[col].shape[0]))\n    print(msg)","0f07ea6d":"False + True","a812d032":"for col in df_test.columns:\n    msg = 'column: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col, 100*(df_test[col].isnull().sum() \/ df_test[col].shape[0]))\n    print(msg)","b4643a21":"msno.bar(df=df_train.iloc[:,:], figsize=(8.,8), color=(0.8,0.5,0.2))","d0dfa8fb":"#\uc5b4\ub290 \uc704\uce58\uc5d0 null \uc874\uc7ac\ud558\ub294\uc9c0 \uc54c\uc218 \uc788\uc74c\nmsno.matrix(df=df_test.iloc[:,:], figsize=(8.,8), color=(0.8,0.5,0.2))","613e87f5":"#target label distribution \ud655\uc778\n#balancd result\nf, ax = plt.subplots(1,2,figsize=(18,8)) #\ub3c4\ud654\uc9c0 \uc900\ube44\n\n#value_counts = \uac01 \ub808\uc774\ube14\uc758 \uac1c\uc218\ub97c \ubc18\ud658, series \ubc18\ud658\ndf_train['Survived'].value_counts().plot.pie(explode=[0,0.1], autopct='%1.1f%%', ax=ax[0], shadow=True)\nax[0].set_title(' Pie plot - Survived')\nax[0].set_ylabel('')\n#countplot\uc740 \uceec\ub7fc\uc744 \uc785\ub825\ubc1b\uc74c\nsns.countplot('Survived', data=df_train, ax=ax[1])\nax[1].set_title('Count plot - Survived')\nplt.show()","8bce17e9":"#EDA\n#insight \ucd9c\ub825\n\n#list\ub85c \ubb36\uc5b4\uc11c \uc9d1\uc5b4\ub123\uc74c\n#groupby  : pclass\ub85c \ubb36\uaca0\ub2e4\ndf_train[['Pclass','Survived']].groupby(['Pclass'], as_index=True).count()  #sum\uc774\ub791 \uacb0\uacfc\ub2e4\ub984","61d78b14":"pd.crosstab(df_train['Pclass'], df_train['Survived'], margins=True).style.background_gradient(cmap='cool') #margin\uc740 all\uc758 \uc5ec\ubd80","18f7b7dd":"#as_index=True\ub85c \ud574\uc918\uc57c plot \uc26c\uc6c0\n#pclass \ub192\uc744\uc218\ub85d \uc0dd\uc874\ub960 \ub192\uc74c\ndf_train[['Pclass','Survived']].groupby(['Pclass'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar()","5577b144":"y_position=1.02\nf, ax = plt.subplots(1,2,figsize=(18,8))\ndf_train['Pclass'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3'], ax=ax[0])\nax[0].set_title('Num of passengers by Pclass', y=y_position)\nax[0].set_ylabel('count')\n\n#hue\uc5d0 \uc5b4\ub5a4 \uce7c\ub7fc\uc744 \uc801\uc73c\uba74 \ud574\ub2f9 \uce7c\ub7fc\uc744 \uae30\uc900\uc73c\ub85c \ub370\uc774\ud130\ub97c \ub098\ub214\nsns.countplot('Pclass', hue='Survived',data=df_train, ax=ax[1])\nax[1].set_title('Pclass: Survived vs Dead', y=y_position)\nplt.show()","7b474d3e":"f, ax = plt.subplots(1,2,figsize=(18,8))\n#as_index = True -> \uc131\ubcc4\uc774 \uceec\ub7fc\uc73c\ub85c \uac10\ndf_train[['Sex', 'Survived']].groupby(['Sex'], as_index=True).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Sex')\nsns.countplot('Sex', hue='Survived', data=df_train, ax=ax[1])\nax[1].set_title('Sex: Survived vs Dead')\nplt.show()","bc891226":"df_train[['Sex', 'Survived']].groupby(['Sex'], as_index=False).mean()","01f14a36":"pd.crosstab(df_train['Sex'], df_train['Survived'], margins=True).style.background_gradient(cmap='summer_r')","e0c883ca":"#hue : \ud574\ub2f9 \uceec\ub7fc\uc744 \uae30\uc900\uc73c\ub85c \uc0c9\uae54\uc744 \ub098\ub214\n#class\uac00 \ub0ae\uc544\uc9c8\uc218\ud639 \uc0dd\uc874\ud655\ub960 \ub0ae\uc544\uc9d0, female \uc0dd\uc874\ud655\ub960 \ub192\uc74c\nsns.factorplot('Pclass', 'Survived', hue='Sex', data=df_train, size=6, aspect=1.5)","482ca076":"# \uadf8\ub798\ud504\uc5d0\uc11c \uc138\ub85c\uc904\uc740 error bar : \ub113\uc73c\uba74 \uc2e0\ub8b0\ub3c4\uac00 \ub0ae\ub2e4\nsns.factorplot(x='Sex', y='Survived', col='Pclass', data=df_train, saturation=5, size=9, aspect=1)","6dbd69bb":"print('\uc81c\uc77c \ub098\uc774 \ub9ce\uc740 \ud0d1\uc2b9\uac1d: {:.1f}'.format(df_train['Age'].max()))\n# print(f'\uc81c\uc77c \ub098\uc774 \ub9ce\uc740 \ud0d1\uc2b9\uac1d: {df_train['Age'].max()}')\nprint('\uc81c\uc77c \uc5b4\ub9b0 \ud0d1\uc2b9\uac1d:{:.1f}'.format(df_train['Age'].min()))\nprint('\ud0d1\uc2b9\uac1d \ud3c9\uade0 \ub098\uc774:{:.1f}'.format(df_train['Age'].mean()))","7b87ba5b":"# \ub9c9\ub300\uadf8\ub798\ud504\ub294 \ub370\uc774\ud130\uc758 \ubd84\ud3ec\uac00 \uc548\ubcf4\uc784 -> kdeplot\uc73c\ub85c \uac1c\uc120\n# \ud788\uc2a4\ud1a0\uadf8\ub7a8\uc744 \ubd80\ub4dc\ub7fd\uac8c \ub9cc\ub4e6\n\n# \ub098\uc774 \uc5b4\ub9ac\uba74 \uc0dd\uc874\ud655\ub960 \ub192\uc74c\nf, ax = plt.subplots(1,1,figsize=(9,5))\nsns.kdeplot(df_train[df_train['Survived'] == 1]['Age'], ax=ax)\nsns.kdeplot(df_train[df_train['Survived'] == 0]['Age'], ax=ax)\nplt.legend(['Survived == 1', 'Survived == 0'])\nplt.show()","72951231":"df_train[df_train['Survived'] == 1]['Age'].hist()","9024330d":"# f = plt.figure(figsize=(10,10))\n\n\n# f, ax = plt.subplots(1,1,figsize=(10,10))\n# ax.plot(b)\n\n\n# plt.figure(figsize=(3,3))\n# plt.plot()","45913bdc":"plt.figure(figsize=(8,6))\ndf_train['Age'][df_train['Pclass'] == 1].plot(kind='kde')\ndf_train['Age'][df_train['Pclass'] == 2].plot(kind='kde')\ndf_train['Age'][df_train['Pclass'] == 3].plot(kind='kde')\n\n# \uadf8\ub0e5 plt\uc77c \ub54c\ub294 plt.xlabel, plt.title\n# subplot \uc77c \ub54c\ub294 ax[0].set_title, ax[0].set_ylabel\nplt.xlabel('Age')\nplt.title('Age Distribution within classes')\nplt.legend(['1st class','2nd class','3rd class'])","408538c4":"# df_train['Pclass'] == 1   \uc5ec\uae30\uc11c \ubd88\ub9ac\uc548 \ubc30\uc5f4 \ubc18\ud658\ud568\ndf_train['Age'][df_train['Pclass'] == 1]","50dbc13d":"fig, ax = plt.subplots(1,1,figsize=(9,5))\nsns.kdeplot(df_train[(df_train['Survived'] == 0) & (df_train['Pclass'] == 1)]['Age'], ax=ax)\nsns.kdeplot(df_train[(df_train['Survived'] == 1) & (df_train['Pclass'] == 1)]['Age'], ax=ax)\nplt.legend(['survived == 0','survived == 1'])\nplt.show()","a8e9c151":"# kdeplot : hist\ub97c \uadfc\uc0ac\ud654 \uc2dc\ud0b4\n\nfig, ax = plt.subplots(1,1,figsize=(9,5))\nsns.kdeplot(df_train[(df_train['Survived'] == 0) & (df_train['Pclass'] == 2)]['Age'], ax=ax)\nsns.kdeplot(df_train[(df_train['Survived'] == 1) & (df_train['Pclass'] == 2)]['Age'], ax=ax)\nplt.legend(['survived == 0','survived == 1'])\nplt.show()","3aaed54e":"fig, ax = plt.subplots(1,1,figsize=(9,5))\nsns.kdeplot(df_train[(df_train['Survived'] == 0) & (df_train['Pclass'] == 3)]['Age'], ax=ax)\nsns.kdeplot(df_train[(df_train['Survived'] == 1) & (df_train['Pclass'] == 3)]['Age'], ax=ax)\nplt.legend(['survived == 0','survived == 1'])\nplt.show()","76dc5b42":"#\ub098\uc774 \uc5b4\ub9b4\uc218\ub85d \uc0dd\uc876\ud655\ub960 \ub192\uc74c\n\nchange_age_range_survival_ratio = []\n\nfor i in range(1,80):\n    change_age_range_survival_ratio.append(df_train[df_train['Age'] < i]['Survived'].sum() \/ len(df_train[df_train['Age'] < i]['Survived']))\n    \nplt.figure(figsize=(7,7))\nplt.plot(change_age_range_survival_ratio)\nplt.title('Survival rate change depending on range of Age')\nplt.ylabel('survival rate')\nplt.xlabel('range of age(0~x)')","6ac438e9":"df_train['Age'][df_train['Pclass'] == 1]","c1ac24b4":"df_train[df_train['Pclass'] == 1]['Age']","90fd56ff":"# pclass\uac00 1\uc77c \ub54c\uc758 age \ubd84\ud3ec\n\nf, ax = plt.subplots(1,2,figsize=(18,8))\nsns.violinplot('Pclass', 'Age', hue='Survived',data=df_train, scale='count', split=True,ax=ax[0])\nax[0].set_title('Pclass and Age vs Survived')\nax[0].set_yticks(range(0,110,10));\n\nsns.violinplot('Sex', 'Age', hue='Survived', data=df_train, scale='count',split=True, ax=ax[1])\nax[1].set_title('Sex and Age vs Survived')\nax[1].set_yticks(range(0,110,10));","2edc7bf3":"#sort_index\ub3c4 \uac00\ub2a5\n\nf, ax = plt.subplots(1,1,figsize=(7,7))\ndf_train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar(ax=ax)","1c311324":"f, ax = plt.subplots(2,2,figsize=(20,15))\nsns.countplot('Embarked', data=df_train, ax=ax[0,0])\nax[0,0].set_title('(1) No. Of Passengers Boared')\n\nsns.countplot('Embarked', hue='Sex', data=df_train, ax=ax[0,1])\nax[0,1].set_title('(2) Male-Female split for embarked')\n\nsns.countplot('Embarked',hue='Survived', data=df_train, ax=ax[1,0])\nax[1,0].set_title('(3) Embarked vs Survived')\n\nsns.countplot('Embarked', hue='Pclass', data=df_train, ax=ax[1,1])\nax[1,1].set_title('(4) Embarked vs Pclass')\n\n#\uc88c\uc6b0\uac04\uaca9 \uc0c1\ud558 \uac04\uaca9 \ub9de\ucdb0\uc90c\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nplt.show()","0c697ae2":"# series\ub07c\ub9ac\ub294 \uacf1\ud558\uace0 \ub098\ub204\uace0 \ub354\ud558\uae30 \uac00\ub2a5\ndf_train['FamilySize'] = df_train['SibSp'] + df_train['Parch'] + 1\ndf_test['FamilySize'] = df_test['SibSp'] + df_test['Parch'] + 1","3dc99695":"df_train['FamilySize'].max()","f216be68":"f, ax = plt.subplots(1,3,figsize=(40,10))\nsns.countplot('FamilySize', data=df_train, ax=ax[0])\nax[0].set_title('(1) No. Of Passenger Boarded', y=1.02)\n\nsns.countplot('FamilySize', hue='Survived', data=df_train, ax=ax[1])\nax[1].set_title('(2) Survived countplot depending on FamilySize', y=1.02)\n\ndf_train[['FamilySize','Survived']].groupby(['FamilySize'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar(ax=ax[2])\nax[2].set_title('(3) Survived rate depending on FamilySize', y=1.02)\nplt.subplots_adjust(wspace=0.2, hspace=0.5)","f1b3642c":"#distplot = series\ub97c \ubc1b\uc73c\uba74 \ud788\uc2a4\ud1a0\uadf8\ub7a8 \uadf8\ub824\uc90c\n# skewness : \uc65c\ub3c4 : \ud55c\ucabd\uc73c\ub85c \uce58\uc6b0\uccd0\uc838\uc788\ub294 \uacbd\ud5a5\uc744 \ub098\ud0c0\ub0b4\ub294 \ucc99\ub3c4 \/ \uc88c\uce21\uc73c\ub85c \uce58\uc6b0\uce58\uba74 \uc591\uc218 0\uc774\uba74 \uc815\uaddc\ubd84\ud3ec\n# \ub108\ubb34 \uce58\uc6b0\uce58\uba74 \ud559\uc2b5 \uc798\uc548\ub428\nfig, ax = plt.subplots(1,1,figsize=(8,8))\ng = sns.distplot(df_train['Fare'], color='b', label='Skewness: {:.2f}'.format(df_train['Fare'].skew()), ax=ax)\ng = g.legend(loc='best')","b0e9e4dd":"#\uc2dc\ub9ac\uc988\uc5d0 \ub3d9\uc77c\ud55c opeartion \uc9c4\ud589 - > map(lambda, dict) apply(\ud568\uc218)\ndf_train['Fare'] = df_train['Fare'].map(lambda i: np.log(i) if i>0 else 0)","05162215":"# df_test[df_test.Fare.isnull()].fillna()\ndf_test.loc[df_test['Fare'].isnull()] = df_train['Fare'].mean()","f8f59e6b":"#distplot = series\ub97c \ubc1b\uc73c\uba74 \ud788\uc2a4\ud1a0\uadf8\ub7a8 \uadf8\ub824\uc90c\n# skewness : \uc65c\ub3c4 : \ud55c\ucabd\uc73c\ub85c \uce58\uc6b0\uccd0\uc838\uc788\ub294 \uacbd\ud5a5\uc744 \ub098\ud0c0\ub0b4\ub294 \ucc99\ub3c4 \/ \uc88c\uce21\uc73c\ub85c \uce58\uc6b0\uce58\uba74 \uc591\uc218 0\uc774\uba74 \uc815\uaddc\ubd84\ud3ec\n# \ub108\ubb34 \uce58\uc6b0\uce58\uba74 \ud559\uc2b5 \uc798\uc548\ub428\n# skewness\ub97c \uc904\uc5ec\uc90c -> feature engineering \ubaa8\ub378 \uc131\ub2a5 \uc88b\uac8c\ud574\uc90c\nfig, ax = plt.subplots(1,1,figsize=(8,8))\ng = sns.distplot(df_train['Fare'], color='b', label='Skewness: {:.2f}'.format(df_train['Fare'].skew()), ax=ax)\ng = g.legend(loc='best')","d257a672":"df_train['Ticket'].value_counts()","ceb1fe22":"df_train['Age'].isnull().sum()","df684a54":"df_train.isnull().sum()","c2f31a87":"# regulear expression -> extract\n# df_train['Name'].str \ubaa8\ub450 string \ub428\ndf_train['Initial'] = df_train['Name'].str.extract('([A-Za-z]+)\\.')\ndf_test['Initial'] = df_test['Name'].str.extract('([A-Za-z]+)\\.')","3578856e":"pd.crosstab(df_train['Initial'], df_train['Sex']).T.style.background_gradient(cmap='summer_r')","f2211283":"df_train['Initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don', 'Dona'],\n                        ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr', 'Mr'],inplace=True)\n\ndf_test['Initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don', 'Dona'],\n                        ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr', 'Mr'],inplace=True)","2657d1c9":"df_train.groupby(['Initial']).mean()","d7d6b676":"df_train.groupby(['Initial'])['Survived'].mean().plot.bar()","07868a90":"df_all = pd.concat([df_train, df_test])","d21299c0":"#drop = True \uba74 \uc6d0\ub798 index \uc81c\uac70\ud574\uc90c\ndf_all.reset_index(drop=True)","41763ee3":"df_all.groupby(['Initial']).mean()","4c13ae60":"### \uc911\uc694!!!!!!!!!!\ndf_train[df_train['Survived']==1]","647c9ac8":"#\ud589 \uc804\uccb4\uc5d0 \uc22b\uc790\ub97c \ub2e4 \uc9d1\uc5b4\ub123\uc5b4\uc90c\ndf_train.loc[(df_train['Age'].isnull()) & (df_train['Initial'] == 'Mr'), 'Age'] = 33\ndf_train.loc[(df_train['Age'].isnull()) & (df_train['Initial'] == 'Mrs'), 'Age'] = 37\ndf_train.loc[(df_train['Age'].isnull()) & (df_train['Initial'] == 'Master'), 'Age'] = 5\ndf_train.loc[(df_train['Age'].isnull()) & (df_train['Initial'] == 'Miss'), 'Age'] = 22\ndf_train.loc[(df_train['Age'].isnull()) & (df_train['Initial'] == 'Other'), 'Age'] = 45\n\ndf_test.loc[(df_test['Age'].isnull()) & (df_test['Initial'] == 'Mr'), 'Age'] = 33\ndf_test.loc[(df_test['Age'].isnull()) & (df_test['Initial'] == 'Mrs'), 'Age'] = 37\ndf_test.loc[(df_test['Age'].isnull()) & (df_test['Initial'] == 'Master'), 'Age'] = 5\ndf_test.loc[(df_test['Age'].isnull()) & (df_test['Initial'] == 'Miss'), 'Age'] = 22\ndf_test.loc[(df_test['Age'].isnull()) & (df_test['Initial'] == 'Other'), 'Age'] = 45","b0f9a243":"df_train.loc[(df_train['Initial'] == 'Mr'), 'Age']","344e6291":"df_train[df_train['Embarked'].isnull()]","af617de1":"df_train['Embarked'].fillna('S', inplace=True)","cb1a8ede":"df_train['Embarked'].isnull().sum()","7233f03b":"df_train['Age_cat'] = 0\ndf_test['Age_cat'] = 0","73a5c3f8":"df_train.head()","63c2884e":"df_train.loc[(10 <= df_train['Age']) & (df_train['Age']<20), 'Age_cat'] = 1\ndf_train.loc[(20 <= df_train['Age']) & (df_train['Age']<30), 'Age_cat'] = 2\ndf_train.loc[(30 <= df_train['Age']) & (df_train['Age']<40), 'Age_cat'] = 3\ndf_train.loc[(40 <= df_train['Age']) & (df_train['Age']<50), 'Age_cat'] = 4\ndf_train.loc[(50 <= df_train['Age']) & (df_train['Age']<60), 'Age_cat'] = 5\ndf_train.loc[(60 <= df_train['Age']) & (df_train['Age']<70), 'Age_cat'] = 6\ndf_train.loc[(70 <= df_train['Age']), 'Age_cat'] = 7","018f7207":"df_test.loc[(10 <= df_test['Age']) & (df_test['Age']<20), 'Age_cat'] = 1\ndf_test.loc[(20 <= df_test['Age']) & (df_test['Age']<30), 'Age_cat'] = 2\ndf_test.loc[(30 <= df_test['Age']) & (df_test['Age']<40), 'Age_cat'] = 3\ndf_test.loc[(40 <= df_test['Age']) & (df_test['Age']<50), 'Age_cat'] = 4\ndf_test.loc[(50 <= df_test['Age']) & (df_test['Age']<60), 'Age_cat'] = 5\ndf_test.loc[(60 <= df_test['Age']) & (df_test['Age']<70), 'Age_cat'] = 6\ndf_test.loc[(70 <= df_test['Age']), 'Age_cat'] = 7","9fba0885":"df_train.head()","34a978b9":"# apply\n#apply \ub9ce\uc774 \uc4f0\uc790\ndef category_age(x):\n    if x<10:\n        return 0\n    elif x<20:\n        return 1\n    elif x<30:\n        return 2\n    elif x<40:\n        return 3\n    elif x<50:\n        return 4\n    elif x<60:\n        return 5\n    elif x<70:\n        return 6\n    else:\n        return 7\n    ","e860040e":"df_train['Age_cat_2'] = df_train['Age'].apply(category_age)\n","7f28473e":"#all \uc740 \ubaa8\ub4e0\uac8c true\uc77c\ub54c true \ubc18\ud658\n# any\ub294 \ud558\ub098\ub77c\ub3c4 true\uc774\uba74 true \ubc18\ud658\n(df_train['Age_cat'] == df_train['Age_cat_2']).all()","6f7ee8bb":"df_train.drop(['Age', 'Age_cat_2'], axis=1, inplace = True)\ndf_test.drop(['Age'], axis=1, inplace = True)","229fd155":"df_train.Initial.unique()","03452161":"df_train['Initial'] = df_train['Initial'].map({'Master':0, \"Miss\":1, 'Mr':2, 'Mrs':3, 'Other':4})\ndf_test['Initial'] = df_test['Initial'].map({'Master':0, \"Miss\":1, 'Mr':2, 'Mrs':3, 'Other':4})","b8a1de84":"# \ud2b9\uc815 feature\uc5d0 \uc5b4\ub5a4 \uac12\ub4e4\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ndf_train.Embarked.unique()  #numpy array return","debbbfed":"df_train.Initial.value_counts() # series \ubc18\ud658","b4c8e8d2":"df_train.Embarked = df_train['Embarked'].map({'C':0,'Q':1,'S':2})\ndf_test.Embarked = df_test['Embarked'].map({'C':0,'Q':1,'S':2})","184795ba":"df_train['Sex'].unique()","1847fe6b":"df_train['Sex'] = df_train['Sex'].map({'female':0, 'male':1})\ndf_test['Sex'] = df_test['Sex'].map({'female':0, 'male':1})","40bba8db":"#pearson correalation  -> \uc120\ud615 \uad00\uacc4\uc778\uc9c0 \uc54c\ub824\uc90c\n#1 \uc774\uba74 \uc591\uc758 \uc0c1\uad00\uad00\uacc4\n#0\uc774\uba74 \uc120\ud615\uad00\uacc4 \uc5c6\uc74c\nheatmap_data = df_train[['Survived', 'Pclass','Sex','Fare','Embarked','FamilySize','Initial','Age_cat']]","ddda4ccc":"colormap = plt.cm.viridis\nplt.figure(figsize=(14,12))\nplt.title('Pearson Correlation of Features',y=1.05, size=15)\n#linewidths : \uce78 \uc0ac\uc774\uc758 \uac04\uaca9\n#vmax = \uc606 \uc0c9\uae54\uc758 \ud06c\uae30\n# square\n#linecolor= linewidth \uc0c9\uae54\n# annot ==false\uba74 \uc22b\uc790 \uc548\ubcf4\uc784\n\n\n# \ub9cc\uc57d score\uac00 1\uc774\uba74 redundunt \uc0c1\ud669 \ubc1c\uc0dd -> \ud558\ub098\uc758 \uc815\ubcf4\ub97c \uc598\uae30\ud574\uc90c(\uc120\ud615\uad00\uacc4\ub77c\uc11c)\nsns.heatmap(heatmap_data.astype(float).corr(), linewidths=0.1, vmax=1.0,\n           square = True, cmap=colormap, linecolor='white', annot=True, annot_kws={'size':16})","edffb79c":"df_train = pd.get_dummies(df_train, columns=['Initial'], prefix='Initial')\ndf_test = pd.get_dummies(df_test, columns=['Initial'], prefix='Initial')","10125d41":"df_train = pd.get_dummies(df_train, columns=['Embarked'], prefix='Embarked')\ndf_test = pd.get_dummies(df_test, columns=['Embarked'], prefix='Embarked')","7aa83a67":"df_train.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin'],axis=1, inplace=True)\ndf_test.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin'],axis=1, inplace=True)","427dcb80":"df_train.head()","b44c6e1c":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split","3dfa8306":"df_test['Sex'].fillna(0, inplace=True)","25267cd1":"df_test[df_test['Sex'].isnull()]['Sex']","0aae6479":"X_train = df_train.drop('Survived', axis=1).values\ntarget_label = df_train['Survived'].values\nX_test = df_test.values","3724b27e":"X_tr, X_vid, y_tr, y_vid = train_test_split(X_train, target_label, test_size=.3, random_state=2018)","b453a80a":"model = RandomForestClassifier()\nmodel.fit(X_tr, y_tr)","b47934f8":"prediction = model.predict(X_vid)","1a257715":"print(f'\ucd1d {y_vid.shape[0]}\uba85 \uc911 {100 * metrics.accuracy_score(prediction, y_vid):.2f}% \uc815\ud655\ub3c4\ub85c \uc0dd\uc874\ub9de\ucda4')","660d00d2":"model.feature_importances_","cd75b63e":"feature_importance = model.feature_importances_\nSeries_feat_imp = pd.Series(feature_importance, index=df_test.columns)","c216107c":"plt.figure(figsize=(8,8))\nSeries_feat_imp.sort_values(ascending=True).plot.barh()\nplt.xlabel('Feature importance')\nplt.ylabel('Feature')","5c1bcb5e":"submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","445e0781":"submission.head()","2a58f850":"df_test[df_test.Sex.isnull()]['Sex'] = 0","ef9d05f3":"prediction = model.predict(X_test)","fb6f4dad":"submission['Survived'] = prediction","dabe9f83":"submission.to_csv('.\/my_first_submission.csv', index=False)","38967a10":"## Fare(continues), Cabin, Ticket ","2d1d75ef":"## Pclass Sex Age","5296a18a":"## 2.1 Pclass","992df382":"## Feature engineering ","3bee4aca":"##  FamilY - SibSp + Parch","49a4d95e":"## Embarked","045f9c8b":"## Embarked  \ud0d1\uc2b9\ud55c \uacf3","61ea358f":"## onehot encoding ","6dd653d1":"## 2.2 Sex","1b0c7d2b":"## Age","c423fddd":"## string to int ","ee449d74":"## 2.3 Both sex and Pclass\n\n### lady first, money brings survival"}}