{"cell_type":{"509ec384":"code","87e7f31e":"code","74b2f3db":"code","90133c96":"code","b9e2eb95":"code","08da29df":"code","e0041e73":"code","5a351f55":"code","e707a735":"code","92f18ae6":"code","674cd4f1":"code","83501a3d":"code","d87d100e":"code","902ed5c6":"code","476845cf":"code","6bf09e8c":"code","8ade5f46":"code","5a66b12b":"code","a6110b6c":"code","7823c342":"markdown","8e77ad60":"markdown","0ddf8df3":"markdown","ec1ede79":"markdown","f28ee74f":"markdown","84f6412a":"markdown","ea8f2b4f":"markdown"},"source":{"509ec384":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib\n%matplotlib inline\nplt.style.use('fivethirtyeight')","87e7f31e":"data = pd.read_csv(\"..\/input\/performance-prediction\/summary.csv\")\ndata.head()","74b2f3db":"data.shape","90133c96":"data.info()","b9e2eb95":"import missingno as msno\nmsno.matrix(data)","08da29df":"data[data.duplicated()].shape[0]","e0041e73":"data.drop_duplicates(inplace=True)\ndata.drop(['Name'],axis=1, inplace=True)","5a351f55":"f, ax= plt.subplots(1,2, figsize=(15,5))\ndata['Target'].value_counts().plot.pie(explode=[0,0.1], shadow=True,ax=ax[0],autopct=\"%1.1f%%\")\nsns.countplot(x=data['Target'], ax=ax[1]);","e707a735":"f, ax =plt.subplots(1,3,figsize=(15,5))\nsns.kdeplot(data['3PointAttempt'],hue=data['Target'],ax=ax[0],shade=True,)\nsns.kdeplot(data['3PointMade'],hue=data['Target'],ax=ax[1],shade=True)\nsns.kdeplot(data['3PointPercent'],hue=data['Target'],ax=ax[2],shade=True)\nplt.show()","92f18ae6":"f,ax= plt.subplots(1,2,figsize=(15,5))\nsns.kdeplot(data['MinutesPlayed'],hue=data['Target'],ax=ax[0],shade=True)\nsns.kdeplot(data['PointsPerGame'],hue=data['Target'],ax=ax[1],shade=True)\nplt.show()","674cd4f1":"#HeatMap\nplt.figure(figsize=(16,12))\nsns.heatmap(data.corr(), annot=True, square=True);","83501a3d":"#before make models, Process Missing data\nprint(data['3PointPercent'].mean())\ndata['3PointPercent'].fillna(19.32,inplace=True)","d87d100e":"from sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score, confusion_matrix, plot_confusion_matrix,plot_roc_curve","902ed5c6":"X = data.drop(['Target'],axis=1)\ny = data.Target\n\nX_train, X_test, y_train,y_test= train_test_split(X,y,test_size=.2, random_state=0)\n\nss=StandardScaler()\nX_train_scaled = ss.fit_transform(X_train)\nX_test_scaled= ss.fit_transform(X_test)","476845cf":"def Model(model):\n    model.fit(X_train_scaled,y_train)\n    score = model.score(X_test_scaled,y_test)\n    model_train_score= model.score(X_train_scaled,y_train)\n    model_test_score=model.score(X_test_scaled,y_test)\n    prediction = model.predict(X_test_scaled)\n    cm = confusion_matrix(y_test, prediction)\n    print(\"Testing Score\\n\", score)\n    plot_confusion_matrix(model,X_test_scaled,y_test,cmap='OrRd')\n    plot_roc_curve(model, X_test_scaled,y_test)","6bf09e8c":"#lr\nlr = LogisticRegression()\nModel(lr)","8ade5f46":"#rfc\nfrom sklearn.ensemble import RandomForestClassifier\nrfc= RandomForestClassifier()\nModel(rfc)","5a66b12b":"#https:\/\/www.kaggle.com\/gcdatkin\/basketball-performance-prediction\nfrom sklearn.decomposition import PCA\nfrom sklearn.cluster import KMeans\npca = PCA(n_components=2)\nX_reduced = pd.DataFrame(pca.fit_transform(X_train), index=X_train.index,\n                        columns=[\"PC1\",\"PC2\"])\n\nkmeans= KMeans(n_clusters=4)\nkmeans.fit(X_train)\nclusters= pd.Series(kmeans.labels_, name=\"cluster\",index=X_train.index)\ncentroids= pca.transform(kmeans.cluster_centers_)\n\nX_reduced= pd.concat([X_reduced,y_train,clusters],axis=1)\nX_reduced","a6110b6c":"plt.figure(figsize=(10, 10))\nplt.scatter(X_reduced['PC1'], X_reduced['PC2'], c=X_reduced['cluster'])\nplt.scatter(centroids[:, 0], centroids[:, 1], color='red', s=300)\nplt.xlabel(\"PC1\")\nplt.ylabel(\"PC2\")\nplt.title(\"k-means Clustering\")\nplt.show()","7823c342":"We need to handle NA","8e77ad60":"# DATA ANALYSIS & TREATMENT","0ddf8df3":"Veterans have more play time than amateurs and score more goals per game. But we should note that **this analysis is not very helpful.**<br>\n\n**Each position in basketball is different, and you may not know whether the positions are evenly distributed in the given data.**\nFor example, if there are 100 strikers and 80 of them are veterans, of course, the veterans have no choice but to score more. <br>\n\nSo we try to see how it is distributed using PCA and KMeans.","ec1ede79":"# Modeling","f28ee74f":"# LIBRARY","84f6412a":"**Observation**\n\nThose with more than 5 years of experience showed a significant difference in 3-point Attempts, Made, Percent","ea8f2b4f":"# VIZ+EDA"}}