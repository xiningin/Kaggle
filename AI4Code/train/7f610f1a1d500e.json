{"cell_type":{"a361c352":"code","766a98c5":"code","c72589e3":"code","feeb43c4":"code","9712c1ff":"code","5f838446":"code","5f2088f9":"code","f4a12493":"code","f7cdbbd2":"code","c417d8cf":"code","311602fb":"code","ebac86d5":"code","f58a3127":"code","852c3469":"code","bc36f411":"code","3c0bab76":"code","b76ee433":"code","d7fd61eb":"markdown","f091a922":"markdown","f8140df4":"markdown"},"source":{"a361c352":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","766a98c5":"df=pd.read_csv('\/kaggle\/input\/eeg-brainwave-dataset-feeling-emotions\/emotions.csv')\ndf.head()","c72589e3":"df.info()","feeb43c4":"import seaborn as sns\nsns.countplot(x='label', data=df)\n","9712c1ff":"df.isnull().sum()\n#no missing values","5f838446":"encode = ({'NEUTRAL': 0, 'POSITIVE': 1, 'NEGATIVE': 2} )\n#new dataset with replaced values\ndf_encoded = df.replace(encode)\n\nprint(df_encoded.head())\nprint(df_encoded['label'].value_counts())","5f2088f9":"df_encoded['label'].unique()","f4a12493":"df_encoded.head()","f7cdbbd2":"x=df_encoded.drop([\"label\"]  ,axis=1)\nx.shape","c417d8cf":"y = df_encoded.loc[:,'label'].values\ny.shape\n","311602fb":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(x)\nx = scaler.transform(x)\nfrom keras.utils import to_categorical\ny = to_categorical(y)\ny","ebac86d5":"y","f58a3127":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 4)","852c3469":"x_train = np.reshape(x_train, (x_train.shape[0],1,x.shape[1]))\nx_test = np.reshape(x_test, (x_test.shape[0],1,x.shape[1]))\n","bc36f411":"import tensorflow as tf\nfrom tensorflow.keras import Sequential\n\nfrom tensorflow.keras.layers import Dense, Dropout\nfrom tensorflow.keras.layers import Embedding\nfrom tensorflow.keras.layers import LSTM\ntf.keras.backend.clear_session()\n\nmodel = Sequential()\nmodel.add(LSTM(64, input_shape=(1,2548),activation=\"relu\",return_sequences=True))\nmodel.add(Dropout(0.2))\nmodel.add(LSTM(32,activation=\"sigmoid\"))\nmodel.add(Dropout(0.2))\n#model.add(LSTM(100,return_sequences=True))\n#model.add(Dropout(0.2))\n#model.add(LSTM(50))\n#model.add(Dropout(0.2))\nmodel.add(Dense(3, activation='sigmoid'))\nfrom keras.optimizers import SGD\nmodel.compile(loss = 'categorical_crossentropy', optimizer = \"adam\", metrics = ['accuracy'])\nmodel.summary()","3c0bab76":"history = model.fit(x_train, y_train, epochs = 100, validation_data= (x_test, y_test))\nscore, acc = model.evaluate(x_test, y_test)\n","b76ee433":"from sklearn.metrics import accuracy_score\npred = model.predict(x_test)\npredict_classes = np.argmax(pred,axis=1)\nexpected_classes = np.argmax(y_test,axis=1)\nprint(expected_classes.shape)\nprint(predict_classes.shape)\ncorrect = accuracy_score(expected_classes,predict_classes)\nprint(f\"Training Accuracy: {correct}\")","d7fd61eb":"This used used LSTM model to classify  electroencephalogram (EEG) brain signal and to predict the human emotions .The notebook classifies data into 3 classes negative,nuteral and positive.\n\nThe dataset used for this notebook is freely avialable in the following link[https:\/\/www.kaggle.com\/birdy654\/eeg-brainwave-dataset-feeling-emotion](http:\/\/www.kaggle.com\/birdy654\/eeg-brainwave-dataset-feeling-emotions)","f091a922":"##  load & read the dataset","f8140df4":"# EEG Classifictaion using LSTM"}}