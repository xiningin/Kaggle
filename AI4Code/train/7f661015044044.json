{"cell_type":{"f57d9fc5":"code","a1a1f564":"code","357c4d95":"code","a897acc6":"code","624995df":"code","d9e9b773":"code","80e92961":"code","f0b7a44a":"code","7dd6cf4d":"code","6619df89":"code","cd48dde3":"code","4426148a":"code","37a425de":"code","8cef5c96":"code","44d98296":"code","93d2a876":"code","5399e333":"code","65adeff1":"code","880850ad":"code","4c0346b3":"code","b171f8db":"code","1c18239f":"code","cddb3cbc":"code","c5d44bb6":"code","2a034d6a":"code","a106b408":"code","88face3e":"code","38c32831":"code","4d264429":"code","cda6b73a":"code","0c4004c0":"code","fff0bbde":"code","3fa04e47":"code","acaffde3":"code","c6fefc49":"code","62075fd0":"code","bc97eff1":"code","0a27cc3d":"code","fb4ee95a":"code","5ffa9572":"code","da0f023c":"code","65a2cf94":"code","1304881e":"markdown"},"source":{"f57d9fc5":"pip install google.colab","a1a1f564":"import cv2\nimport numpy as np\nimport time\nimport os\nimport matplotlib.pyplot as plt\nfrom google.colab.patches import cv2_imshow\n","357c4d95":"path = '..\/input\/modelo-yolo\/cfg\/yolov4.cfg' ","a897acc6":"labels_path = os.path.sep.join(['..\/input\/modelo-yolo\/cfg', 'coco.names'])   \nlabels_path","624995df":"LABELS = open(labels_path).read().strip().split('\\n')\nprint(LABELS)","d9e9b773":"len(LABELS)","80e92961":"weights_path = os.path.sep.join(['..\/input\/modelo-yolo', 'yolov4.weights'])\nconfig_path = os.path.sep.join(['..\/input\/modelo-yolo\/cfg', 'yolov4.cfg'])\nweights_path, config_path","f0b7a44a":"net = cv2.dnn.readNet(config_path, weights_path)","7dd6cf4d":"net","6619df89":"COLORS = np.random.randint(0, 255, size=(len(LABELS), 3), dtype='uint8')  \nprint(COLORS)","cd48dde3":"ln = net.getLayerNames()\nprint('Todas as camadas')\nprint(ln)\nprint('Total de camadas: ' + str(len(ln)))","4426148a":"print('Camadas de sa\u00edda')\nprint(net.getUnconnectedOutLayers())","37a425de":"ln = [ln[i - 1] for i in net.getUnconnectedOutLayers()]\nln  ","8cef5c96":"def mostrar(img):\n  fig = plt.gcf()\n  fig.set_size_inches(16,10)\n  plt.axis('off')\n  plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n  plt.show()","44d98296":"imagem = cv2.imread('..\/input\/yolo-opencv-images\/pictures\/140370219_2849441738716160_6749933501072316755_n.jpg')\nmostrar(imagem)","93d2a876":"type(imagem)","5399e333":"print(imagem)","65adeff1":"imagem_cp = imagem.copy()","880850ad":"imagem.shape","4c0346b3":"(H, W) = imagem.shape[:2]  \nprint('Altura: ' + str(H) + '\\nLargura: ' + str(W))","b171f8db":"inicio = time.time()\n\nblob = cv2.dnn.blobFromImage(imagem, 1 \/ 255.0, (416, 416), swapRB = True, crop = False)  \nnet.setInput(blob)                  \nlayer_outputs = net.forward(ln)\n\ntermino = time.time()\nprint('YOLO levou {:.2f} segundos'.format(termino - inicio))","1c18239f":"threshold = 0.5\nthreshold_NMS = 0.3   \ncaixas = []   \nconfiancas = []\nIDclasses = []   ","cddb3cbc":"len(layer_outputs)","c5d44bb6":"layer_outputs[0], len(layer_outputs[0])","2a034d6a":"layer_outputs[1]","a106b408":"layer_outputs[2], layer_outputs[2][0], len(layer_outputs[2][0])","88face3e":"print(LABELS)","38c32831":"LABELS[16]","4d264429":"np.argmax(np.array([0.10, 0.80, 0.10]))","cda6b73a":"teste = np.array([0.10, 0.80, 0.10])","0c4004c0":"teste[1]","fff0bbde":"for output in layer_outputs:\n  for detection in output:\n    scores = detection[5:]\n    classeID = np.argmax(scores)\n    confianca = scores[classeID]\n    if confianca > threshold:\n      print('scores: ' + str(scores))\n      print('classe mais prov\u00e1vel: ' + str(classeID))\n      print('confian\u00e7a: ' + str(confianca))\n\n      caixa = detection[0:4] * np.array([W, H, W, H])\n      (centerX, centerY, width, height) = caixa.astype('int')\n\n      x = int(centerX - (width \/ 2))\n      y = int(centerY - (height \/ 2))\n\n      caixas.append([x, y, int(width), int(height)])\n      confiancas.append(float(confianca))\n      IDclasses.append(classeID)","3fa04e47":"print(caixas), len(caixas)","acaffde3":"print(confiancas), len(confiancas)","c6fefc49":"print(IDclasses), len(IDclasses)","62075fd0":"objs = cv2.dnn.NMSBoxes(caixas, confiancas, threshold, threshold_NMS)","bc97eff1":"objs","0a27cc3d":"print(objs.flatten())","fb4ee95a":"confiancas[7], confiancas[15], confiancas[11]","5ffa9572":"confiancas[0]","da0f023c":"if len(objs) > 0:\n  for i in objs.flatten():\n    (x, y) = (caixas[i][0], caixas[i][1])\n    (w, h) = (caixas[i][2], caixas[i][3])\n\n    objeto = imagem_cp[y:y + h, x:x + w]\n    cv2_imshow(objeto)\n\n    cor = [int(c) for c in COLORS[IDclasses[i]]]\n\n    cv2.rectangle(imagem, (x, y), (x + w, y + h), cor, 2)\n    texto = \"{}: {:.4f}\".format(LABELS[IDclasses[i]], confiancas[i])\n    cv2.putText(imagem, texto, (x, y - 5), cv2.FONT_HERSHEY_SIMPLEX, 0.5, cor, 2)","65a2cf94":"mostrar(imagem)","1304881e":"# **If you find this notebook useful, support with an upvote** \ud83d\udc4d"}}