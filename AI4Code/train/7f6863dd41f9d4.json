{"cell_type":{"5785c9b4":"code","527c1ac2":"code","2d74a1ba":"code","8a46b464":"code","8aa00b7c":"code","a1b56f73":"code","28c7d0c3":"code","690dcba9":"code","86b2bc42":"code","e7e7533e":"code","436b4e11":"code","9fd11d1a":"code","f794b163":"code","7035097d":"code","bcd67e4f":"code","0d88d3a9":"code","2c2d0d23":"code","b2d30391":"code","b9fb45cb":"code","76c38f90":"code","99975b3b":"code","4948b3f9":"code","86f8f6dc":"code","10f1294e":"code","743f6601":"code","7b575ffa":"code","14395a24":"code","3c75d339":"code","5ec39059":"code","3964a31b":"code","f6e2ab20":"code","22a45f0d":"code","ccefba19":"code","648ba8aa":"code","d06eda3d":"code","db84e5a3":"code","05502419":"code","a38ab8f4":"code","6e717318":"markdown","cc3b2e0d":"markdown","e4277e84":"markdown","0c1be47f":"markdown","1806e80c":"markdown","5bb572cf":"markdown","179337f7":"markdown","ed1699cd":"markdown","1469862d":"markdown","aa216947":"markdown","fa5e3f59":"markdown","d4731049":"markdown","4b380b71":"markdown"},"source":{"5785c9b4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn import metrics\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","527c1ac2":"df = pd.read_csv('\/kaggle\/input\/cardiovascular-disease-dataset\/cardio_train.csv', sep=';')","2d74a1ba":"df.head()","8a46b464":"df.info()","8aa00b7c":"# Convertendo peso e altura em IMC\ndf['IMC'] = df['weight']\/((df['height']\/100)**2)\ndf['IMC'] = df['IMC'].round(1)\n# Convertendo a idade de datas para anos\ndf['age_year'] = df['age']\/365\ndf['age_year'] = df['age_year'].astype(int)","a1b56f73":"# Excluindo as colulas ano, altura, peso e id\ndf.drop(['age', 'height', 'weight', 'id'], axis=1, inplace=True)","28c7d0c3":"df.describe()","690dcba9":"# Reformulando o dataframe para o boxplot\ndf_melt = pd.melt(df,id_vars='cardio', value_vars=['age_year', 'ap_hi', 'ap_lo', 'IMC'],  var_name='colunas', value_name='valores', col_level=None)","86b2bc42":"# Verificando os outliers com boxplot\nplt.figure(figsize=(12,8))\nsns.boxplot(x='colunas', y='valores', hue='cardio', data=df_melt)","e7e7533e":"# Criando um dataframe para cardio igual a 0\ndf_c0 = df[df['cardio'] == 0]","436b4e11":"# Verificando o m\u00e1ximo e o m\u00ednimo dos quartis para identificar os outliers\nlista = ['ap_lo', 'ap_hi', 'IMC']\ndf_quartil = pd.DataFrame(index=['Q minimo', 'Q maximo'])\n\nfor e in lista:\n    Q1 = df_c0[e].quantile(0.25)\n    Q3 = df_c0[e].quantile(0.75)\n    IQR = Q3 - Q1\n    \n    minimo = Q1 - (1.5 * IQR)\n    maximo = Q3+ (1.5 * IQR)\n    \n    df_quartil[e]= [minimo, maximo]\n    \ndf_quartil","9fd11d1a":"# Excluindo as linhas que possuem os outliers\noutlier_c0 = df_c0[(df_c0['ap_lo']!=80)|(df_c0['ap_hi']>121.5)|(df_c0['ap_hi']<117.5)|(df_c0['IMC']>36.65)|(df_c0['IMC']<15.45)].index\ndf_c0.drop(outlier_c0, inplace=True)","f794b163":"df_c0.describe()","7035097d":"# Criando um dataframe para cardio igual a 1\ndf_c1 = df[df['cardio'] == 1]","bcd67e4f":"# Verificando o m\u00e1ximo e o m\u00ednimo dos quartis para identificar os outliers\nlista = ['ap_lo', 'ap_hi', 'IMC']\ndf_quartil = pd.DataFrame(index=['Q minimo', 'Q maximo'])\n\nfor e in lista:\n    Q1 = df_c1[e].quantile(0.25)\n    Q3 = df_c1[e].quantile(0.75)\n    IQR = Q3 - Q1\n    \n    minimo = Q1 - (1.5 * IQR)\n    maximo = Q3+ (1.5 * IQR)\n    \n    df_quartil[e]= [minimo, maximo]\n    \ndf_quartil","0d88d3a9":"# Excluindo as linhas que possuem os outliers\noutlier_c1 = df_c1[(df_c1['ap_lo']>105)|(df_c1['ap_lo']<65)|(df_c1['ap_hi']>170)|(df_c1['ap_hi']<90)|(df_c1['IMC']>39.65)|(df_c1['IMC']<14.45)].index\ndf_c1.drop(outlier_c1, inplace=True)","2c2d0d23":"df_c1.describe()","b2d30391":"# Concatenando os dados em um \u00fanico dataframe\ndf = pd.concat([df_c0, df_c1])","b9fb45cb":"df_melt_new = pd.melt(df,id_vars='cardio', value_vars=['age_year', 'ap_hi', 'ap_lo', 'IMC'],  var_name='colunas', value_name='valores', col_level=None)","76c38f90":"# Verificando se os outliers foram exclu\u00eddos utilizando boxplot\nplt.figure(figsize=(12,8))\nsns.boxplot(x='colunas', y='valores', hue='cardio', data=df_melt_new)","99975b3b":"# Verificando quantos elementos tem em cada coluna, se baseando na coluna Cardio\nsns.barplot(x='colunas', y='valores', hue='cardio',data=df_melt_new)","4948b3f9":"# Separando os dados entre features e target\nx = df.drop('cardio', axis=1)\ny = df['cardio']","86f8f6dc":"knn = KNeighborsClassifier()\nrf = RandomForestClassifier()\nstd = StandardScaler()\nminmax = MinMaxScaler()","10f1294e":"\n# Knn com standardScaler\npip_knn_std = Pipeline([\n    ('scaler', std),\n    ('clf', knn)\n])\n\n# Knn com MinMaxScaler\npip_knn_minmax = Pipeline([\n    ('scaler', minmax),\n    ('clf', knn)\n])\n\n# Random Forest com StandardScaler\npip_rf_std = Pipeline([\n    ('scaler', std),\n    ('clf', rf)\n])\n\n# Random Forest com MinMaxScaler\npip_rf_minmax = Pipeline([\n    ('scaler', minmax),\n    ('clf', rf)\n])","743f6601":"# Cria\u00e7\u00e3o da lista de par\u00e2metros\nlista = list(range(10, 151))\n# Aplicando as listas aos par\u00e2metros\nparam_knn = {'clf__n_neighbors':lista}\nparam_rf = {'clf__n_estimators': lista}","7b575ffa":"# Cria\u00e7\u00e3o dos modelos\nrs_knn_std = RandomizedSearchCV(pip_knn_std, param_knn, cv=5, verbose=1, random_state=42)\nrs_knn_minmax = RandomizedSearchCV(pip_knn_minmax, param_knn, cv=5, verbose=1, random_state=42)\nrs_rf_std = RandomizedSearchCV(pip_rf_std, param_rf, cv=5, verbose=1, random_state=42)\nrs_rf_minmax = RandomizedSearchCV(pip_rf_minmax, param_rf, cv=5, verbose=1, random_state=42)","14395a24":"# Treinamento \nrs_knn_std.fit(x, y)","3c75d339":"# Matriz de confus\u00e3o\nprint(pd.crosstab(y, rs_knn_std.predict(x), margins=True))","5ec39059":"# Relat\u00f3rio das m\u00e9tricas de classfica\u00e7\u00e3o\nprint(metrics.classification_report(y, rs_knn_std.predict(x)))","3964a31b":"# Treinamento\nrs_knn_minmax.fit(x, y)","f6e2ab20":"# Matriz de confus\u00e3o\nprint(pd.crosstab(y, rs_knn_minmax.predict(x), margins=True))","22a45f0d":"# Relat\u00f3rio das m\u00e9tricas de classfica\u00e7\u00e3o\nprint(metrics.classification_report(y, rs_knn_minmax.predict(x)))","ccefba19":"# Treinamento\nrs_rf_std.fit(x, y)","648ba8aa":"# Matriz de confus\u00e3o\nprint(pd.crosstab(y, rs_rf_std.predict(x), margins=True))","d06eda3d":"# Relat\u00f3rio das m\u00e9tricas de classifica\u00e7\u00e3o\nprint(metrics.classification_report(y, rs_rf_std.predict(x)))","db84e5a3":"# Treinamento\nrs_rf_minmax.fit(x, y)","05502419":"# Matriz de confus\u00e3o\nprint(pd.crosstab(y, rs_rf_minmax.predict(x), margins=True))","a38ab8f4":"# Relat\u00f3rio das m\u00e9tricas de classifica\u00e7\u00e3o\nprint(metrics.classification_report(y, rs_rf_minmax.predict(x)))","6e717318":"Com a descri\u00e7\u00e3o acima, pode-se verificar que as press\u00f5es alta e baixa (ap_hi e ap_lo), e o IMC est\u00e3o com valores fora do normal (outliers)","cc3b2e0d":"\u00c9 poss\u00edvel verificar que as colunas, que antes possuiam outliers, agora est\u00e3o com dados aceit\u00e1veis.","e4277e84":"### Cria\u00e7\u00e3o dos pipelines","0c1be47f":"### Separando os dados com base na coluna cardio","1806e80c":"### Random Forest com StandardScaler","5bb572cf":"Com o boxplot fica mais f\u00e1cil a visualiza\u00e7\u00e3o dos novos dados sem os outliers","179337f7":"### Knn com standardScaler","ed1699cd":"## Treinando os modelos e aplicando as m\u00e9tricas de avalia\u00e7\u00e3o","1469862d":"# Cria\u00e7\u00e3o do modelo de Machine Learning","aa216947":"### Knn com MinMaxScaler","fa5e3f59":"# Leitura e pr\u00e9-processamento dos dados","d4731049":"Os dois modelos feitos com Random forest possuem as maiores precis\u00f5es, com 93%, enquando as com KNN atingiu 84%.  \nAmbos levando em considera\u00e7\u00e3o a acur\u00e1cia do F1-score no relat\u00f3rio das m\u00e9tricas de classifica\u00e7\u00e3o","4b380b71":"### Random Forest com MinMaxScaler"}}