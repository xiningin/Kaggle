{"cell_type":{"ca9bae9b":"code","90da0682":"code","350b0b65":"code","b39da4c8":"code","dd4e0c2d":"code","2a02d4ba":"code","8051cc11":"code","5be3598f":"code","ad024707":"code","aa967a0d":"code","3c4b644a":"code","2cf66166":"code","cf279654":"code","ae101525":"code","4dfb638e":"code","104cccfa":"code","ffeccd9b":"code","a8aef913":"code","8fe8f440":"code","c4699847":"code","d3e2ef2c":"code","bfdd3f69":"code","1ebf70f7":"code","e1fab880":"code","ecee67a2":"code","cfc5eb65":"code","bbf6b242":"code","05869e42":"code","378e0caf":"markdown","81837b4f":"markdown","d0c012d0":"markdown","2b320b8f":"markdown","99a51a3a":"markdown","b4d498c4":"markdown","f39981a6":"markdown","8f843029":"markdown"},"source":{"ca9bae9b":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import svm\nfrom sklearn.metrics import accuracy_score","90da0682":"# loading the dataset to pandas DataFrame\nloan_dataset = pd.read_csv(r'..\/input\/loan-predication\/train_u6lujuX_CVtuZ9i (1).csv')","350b0b65":"loan_dataset.head() # printing the first 5 rows of the dataframe","b39da4c8":"loan_dataset.shape # number of rows and columns","dd4e0c2d":"loan_dataset.describe() # statistical measures","2a02d4ba":"loan_dataset.isnull().sum() # number of missing values in each column","8051cc11":"loan_dataset = loan_dataset.dropna() # dropping the missing values","5be3598f":"loan_dataset.isnull().sum() # number of missing values in each column","ad024707":"loan_dataset.replace({\"Loan_Status\":{'N':0,'Y':1}},inplace=True) # label encoding","aa967a0d":"loan_dataset.head() # printing the first 5 rows of the dataframe","3c4b644a":"loan_dataset['Dependents'].value_counts() # Dependent column values","2cf66166":"loan_dataset = loan_dataset.replace(to_replace='3+', value=3) # replacing the value of 3+ to 3","cf279654":"# dependent values\nloan_dataset['Dependents'].value_counts()","ae101525":"# education & Loan Status\nsns.countplot(x='Education',hue='Loan_Status',data=loan_dataset)","4dfb638e":"# marital status & Loan Status\nsns.countplot(x='Married',hue='Loan_Status',data=loan_dataset)","104cccfa":"# convert categorical columns to numerical values\nloan_dataset.replace({'Married':{'No':0,'Yes':1},'Gender':{'Male':1,'Female':0},'Self_Employed':{'No':0,'Yes':1},\n                      'Property_Area':{'Rural':0,'Semiurban':1,'Urban':2},'Education':{'Graduate':1,'Not Graduate':0}},inplace=True)","ffeccd9b":"loan_dataset.head()","a8aef913":"# separating the data and label\nX = loan_dataset.drop(columns=['Loan_ID','Loan_Status'],axis=1)\nY = loan_dataset['Loan_Status']","8fe8f440":"print(X)\nprint(Y)","c4699847":"X_train, X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.3,stratify=Y,random_state=42)","d3e2ef2c":"print(X.shape, X_train.shape, X_test.shape)","bfdd3f69":"classifier = svm.SVC(kernel='linear')","1ebf70f7":"#training the support Vector Macine model\nclassifier.fit(X_train,Y_train)","e1fab880":"# accuracy score on training data\nX_train_prediction = classifier.predict(X_train)\ntraining_data_accuray = accuracy_score(X_train_prediction,Y_train)","ecee67a2":"print('Accuracy on training data : ', training_data_accuray)","cfc5eb65":"# accuracy score on training data\nX_test_prediction = classifier.predict(X_test)\ntest_data_accuray = accuracy_score(X_test_prediction,Y_test)","bbf6b242":"print('Accuracy on test data : ', test_data_accuray)","05869e42":"input_data = (1,1,0,1,1,3000,0.0,66.0,360.0,1.0,2)\n\ninput_data_as_numpy_array = np.asarray(input_data) # changing the input_data to numpy array\n\ninput_data_reshaped = input_data_as_numpy_array.reshape(1,-1) # reshape the array \n\nprediction = classifier.predict(input_data_reshaped)\nprint(prediction)\n\nif (prediction[0] == 0):\n  print('The person is not eligible for loan')\nelse:\n  print('\\nThe person is eligible for loan')","378e0caf":"**Importing dependencies and libraries**","81837b4f":"**Making a predictive system**","d0c012d0":"Aim: To predict if a person is eligible for a loan or not, using the various features in the dataset","2b320b8f":"**EDA**\n\nLoan Status Dataset: https:\/\/www.kaggle.com\/ninzaami\/loan-predication","99a51a3a":"Train Test Split","b4d498c4":"**Training the model:**\n\nSupport Vector Machine Model","f39981a6":"**Model Evaluation**","8f843029":"Code written by Dhrumil Vadodaria!!\n\nConnect with me on LinkedIn for future discussions on ML: https:\/\/www.linkedin.com\/in\/dhrumil-v-814932128\/\n\nPlease provide citation if you use the code!"}}