{"cell_type":{"f9960a73":"code","d7d29fd7":"code","31c4296d":"code","f6f2effb":"code","84d56a05":"code","285cfb78":"code","c16bd651":"code","e9bb01dd":"code","a378c324":"code","7736e052":"markdown"},"source":{"f9960a73":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nimport lightgbm as lgb\nfrom sklearn.model_selection import KFold, StratifiedKFold\nfrom tqdm import tqdm\nfrom sklearn.preprocessing import LabelEncoder\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nimport plotly.express as px\ninit_notebook_mode()  ","d7d29fd7":"df = pd.read_csv('\/kaggle\/input\/golden-globe-awards\/golden_globe_awards.csv')\ndf","31c4296d":"winners = df[df['win']==True]\nwinners = winners.groupby(['film'])['win'].count().reset_index().sort_values('win', ascending=True)\nwinners = winners[winners['win']>=5]\nfig = px.bar(winners, x=\"win\", y=\"film\", orientation='h', title='Films with at least 5 awards')\nfig.show()","f6f2effb":"first_year_award = df[['category','year_award']].groupby('category').first().reset_index()\nlast_year_award = df[['category','year_award']].groupby('category').last().reset_index()\nfirst_year_award.columns = ['category', 'first_year']\nlast_year_award.columns = ['category', 'last_year']\ndates_df = pd.merge(first_year_award, last_year_award, on='category', how='inner')\ndates_df.head(20)\n","84d56a05":"fig = px.bar(dates_df[dates_df['last_year']==2020], x=\"first_year\", y=\"category\", orientation='h', title='Start year for awards that are present in 2020')\nfig.show()","285cfb78":"def pie_count(data, field=\"Nationality\", percent_limit=0.5, title=\"Number of nominees by \"):\n    \n    title += field\n    data[field] = data[field].fillna('NA')\n    data = data[field].value_counts().to_frame()\n\n    total = data[field].sum()\n    data['percentage'] = 100 * data[field]\/total    \n\n    percent_limit = percent_limit\n    otherdata = data[data['percentage'] < percent_limit] \n    others = otherdata['percentage'].sum()  \n    maindata = data[data['percentage'] >= percent_limit]\n\n    data = maindata\n    other_label = \"Others(<\" + str(percent_limit) + \"% each)\"           # Create new label\n    data.loc[other_label] = pd.Series({field:otherdata[field].sum()}) \n    \n    labels = data.index.tolist()   \n    datavals = data[field].tolist()\n    \n    trace=go.Pie(labels=labels,values=datavals)\n\n    layout = go.Layout(\n        title = title,\n        height=900,\n        width =1500\n        )\n    \n    fig = go.Figure(data=[trace], layout=layout)\n    iplot(fig)\n\npie_count(df, 'category')","c16bd651":"year_award = df['year_award'].value_counts().reset_index()\nyear_award.columns = ['year', 'award_count']\nfig = px.bar(year_award, x=\"year\", y=\"award_count\", orientation='v', title='Number of awards for every year')\nfig.show()","e9bb01dd":"nominees = df['nominee'].value_counts().reset_index().sort_values('nominee', ascending=True).tail(20)\nfig = px.bar(nominees, x=\"nominee\", y=\"index\", orientation='h', title='Top nominees during the history')\nfig.show()","a378c324":"win = df[df['win']==True]['nominee'].value_counts().reset_index().sort_values('nominee', ascending=True).tail(20)\nfig = px.bar(win, x=\"nominee\", y=\"index\", orientation='h', title='Top nominees winners during the history')\nfig.show()","7736e052":"Start and finish year for every award"}}