{"cell_type":{"415dfe3f":"code","8135d4cc":"code","11142e34":"code","d7ceae1e":"code","c34cc759":"code","341e6e71":"code","371aad53":"code","9e63b096":"code","bcdc6563":"code","60e6a754":"code","d7125eee":"code","4748edc4":"code","ed34fda8":"code","ea1cf1b7":"code","5a3fdb71":"code","782f1eb0":"code","23aa5a84":"code","8598503c":"code","a9666754":"markdown","db085a8f":"markdown","68db6298":"markdown","8e9b3990":"markdown","b2e8f63b":"markdown","881c0712":"markdown","27984fad":"markdown","16806789":"markdown","baa05334":"markdown","c126e61a":"markdown","bf6b770d":"markdown","1181a6f6":"markdown","1d8b7724":"markdown","e0637e23":"markdown","816cd9a3":"markdown","a109d643":"markdown","8497cd4f":"markdown"},"source":{"415dfe3f":"# os\nimport os\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# data viz\nfrom matplotlib import pyplot as plt\nplt.style.use('seaborn')\nimport seaborn as sns\n\n\n# metrics\nfrom sklearn import metrics\n\n# preprocessing\nfrom sklearn.model_selection import train_test_split, GridSearchCV\n\n# modelling\nimport xgboost as xgb","8135d4cc":"train = pd.read_csv('\/kaggle\/input\/health-insurance-cross-sell-prediction\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/health-insurance-cross-sell-prediction\/test.csv')\ntrain[:3]","11142e34":"x_cols = ['Gender', 'Age', 'Driving_License', 'Region_Code',\n       'Previously_Insured', 'Vehicle_Age', 'Vehicle_Damage', 'Annual_Premium',\n       'Policy_Sales_Channel', 'Vintage']\n\ncategoricals = ['Vehicle_Age','Vehicle_Damage','Gender']","d7ceae1e":"train.hist(figsize=(25,10));","c34cc759":"bins = np.arange(15,105,15)\nlabels = [f'{bins[x-1]}-{bins[x]}' for x in range(1,len(bins))]\npd.crosstab(train.Gender,pd.cut(train.Age,bins=bins,labels=labels)).plot.bar(rot=0);","341e6e71":"bins = np.arange(15,105,15)\nlabels = [f'{bins[x-1]}-{bins[x]}' for x in range(1,len(bins))]\npd.crosstab(train.Vehicle_Age,pd.cut(train.Age,bins=bins,labels=labels)).plot.bar(rot=0);","371aad53":"train_,test_ = train_test_split(train, test_size=0.33,random_state=42, stratify=train.Response)","9e63b096":"train_ = train_.copy()\ntest_ = test_.copy()\n\nencods = dict()\nfor x in categoricals:\n    unq = train_[x].unique()\n    encods[x] = dict(zip(unq,list(range(len(unq)+1))))\n    encods[f'rev_{x}'] = {v:k for k,v in encods[x].items()}\n    train_[x] = train_[x].replace(encods[x])\n    test_[x] = test_[x].replace(encods[x])","bcdc6563":"'train',train_.Response.value_counts() \/ len(train_), 'test', test_.Response.value_counts() \/ len(test_)","60e6a754":"from collections import Counter\ncounter = Counter(train_.Response)\n# estimate scale_pos_weight value\nestimate = counter[0] \/ counter[1]\nprint('Estimate: %.3f' % estimate)","d7125eee":"xgc = xgb.XGBClassifier(n_estimators=1000,scale_pos_weight=estimate)\nxgc.fit(train_[x_cols],train_.Response)","4748edc4":"test_['pred'] = xgc.predict(test_[x_cols])","ed34fda8":"print(metrics.classification_report(test_.Response,test_.pred))","ea1cf1b7":"sns.heatmap(metrics.confusion_matrix(test_.Response,test_.pred),annot=True,fmt='d');","5a3fdb71":"import shap","782f1eb0":"%%time\nex = shap.TreeExplainer(xgc)\nshap_values = ex.shap_values(test_[x_cols],test_.Response)","23aa5a84":"shap.summary_plot(shap_values,test_[x_cols])","8598503c":"shap.summary_plot(shap_values,test_[x_cols],plot_type='bar')","a9666754":"**Train Model**","db085a8f":"**Split data into train\/test**","68db6298":"**Confusion Matrix**","8e9b3990":"**Handling high imbalanced data**","b2e8f63b":"## Imports","881c0712":"**Feature Impact**","27984fad":"**Encoding categoricals**","16806789":"**Summary**","baa05334":"## Modelling","c126e61a":"**Number of insureds by age groups and gender**","bf6b770d":"## Data","1181a6f6":"# Health Insurance Cross Sell Prediction","1d8b7724":"**Distributions**","e0637e23":"**Results**","816cd9a3":"**Check proportions split**","a109d643":"**Number of insureds by age groups and vehicle age**","8497cd4f":"**Classification Report**"}}