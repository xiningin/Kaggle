{"cell_type":{"3fd3f874":"code","ee2a7ca8":"code","0a7a8eae":"code","dfc6238c":"code","78e1174b":"code","f06eecf5":"code","5e4bdc63":"code","1889ae23":"code","39da5b87":"code","9eaad7da":"code","e0c959a1":"code","17dc87ba":"code","24169798":"code","c9bcc885":"code","46696708":"code","b43b9e15":"code","80e399c6":"code","ba78f05f":"code","17d53f0c":"code","26c14dfd":"code","6dfa640b":"code","25af53cd":"code","617e8d1e":"code","e9ccbf4d":"code","32b4b218":"code","8f7d8eb4":"code","5e00575f":"code","9a1f5069":"code","b03eb89b":"code","a4beb188":"code","35952a07":"code","0c1fea24":"code","61998249":"code","d62dc656":"code","1ab7d20d":"code","71671d75":"markdown","3a5ee34b":"markdown","d749aacb":"markdown","ca374a22":"markdown","f627ac16":"markdown","b6df02af":"markdown","06c35fc9":"markdown","5fd480fc":"markdown","83679bcb":"markdown","b4cbc845":"markdown","cba91e00":"markdown","294cc1e1":"markdown","2511d5ea":"markdown","d0347113":"markdown","4cdf676e":"markdown","acf5466d":"markdown","dac06826":"markdown","aeb04e13":"markdown","e8139223":"markdown","72b199e1":"markdown","34cf3c9c":"markdown","34793e78":"markdown","376d8823":"markdown","901f6082":"markdown","49c86c9b":"markdown","a44141b7":"markdown","725712f0":"markdown","d66d6d41":"markdown","55943837":"markdown","a9d5f3a6":"markdown","28c06745":"markdown","0a654274":"markdown","adb86b1c":"markdown","b3f69a0c":"markdown","8855572c":"markdown","7167c5a6":"markdown","5aeab0e7":"markdown","04faac2e":"markdown","a595d3c4":"markdown","30ae55fa":"markdown","fade22aa":"markdown","a8902f9b":"markdown","eae492a4":"markdown","383bc07b":"markdown","293e38a1":"markdown","16030d55":"markdown"},"source":{"3fd3f874":"# bokeh imports\nfrom bokeh.io import output_notebook, show, reset_output\nimport bokeh\nfrom bokeh.plotting import figure\n\n# other imports\nimport numpy as np\n","ee2a7ca8":"import pandas as pd\n\n'''Engagement Data'''\n# importing os module \nimport os\n  \n# # Get the list of all files and directories in the root directory\n# path = \"..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\"\n# dir_list = os.listdir(path)\n\n#Creating empty list that will take in transformed files.Transformed files will have district names in all of them.\n#later this list will be used for concatenating dfs\nFiles=[]\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/'):\n    for filename in filenames:\n        path=os.path.join(dirname, filename)\n        file_=pd.read_csv(path)\n        file_['district_id']=filename.split('.')[0].strip()\n        Files.append(file_)\n#Loop to write district id in all files\n# for file in dir_list:\n#     file_=pd.read_csv(path)\n#     file_['district_id']=file.split('.')[0].strip()\n#     Files.append(file_)\n    \n#Concatenating all Dfs\ndf=pd.concat(Files,ignore_index=True)\n\n#Dropping nulls\ndf_1=df.loc[(df['pct_access'].isnull()==False)\n            &(df['engagement_index'].isnull()==False)\n            &(df['lp_id'].isnull()==False)\n           ]\n\n#Importing districts info\ndis=pd.read_csv(r\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")\ndf_1['district_id']=df_1['district_id'].astype(str).astype(int)\ndf_2=df_1.merge(dis,how='left',on='district_id')\n\n#Importing products info\nprod=pd.read_csv(r\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\")\nprod.rename(columns={'LP ID':'lp_id'},inplace=True)\ndf_3=df_2.merge(prod,how='left',on='lp_id')\n\n\n#Dropping nulls\ndf_4=df_3.loc[(df_3['state'].isnull()==False)]\ndf_4.rename(columns={'Sector(s)':'Sectors'},inplace=True)\ndf_4=df_4.loc[(df_4['pct_free\/reduced'].isnull()==False)&(df_4['Sectors'].isnull()==False)]\n\n#Changing datatype\ndf_5=df_4\ndf_5['time']=pd.to_datetime(df_5['time'])   \ndf_5.reset_index(drop=True)\n\n#Separating main and sub categories\nimport re\ndf_5['Primary Essential Function-Main Category']=df_5['Primary Essential Function'].apply(lambda x: x[:9].strip() if re.match('LC\/CM\/SDO',x) else x[:2].strip())\ndf_5['Primary Essential Function-Sub Category']=df_5['Primary Essential Function'].apply(lambda x: x[-len(x)+12:].strip() if re.match('LC\/CM\/SDO',x) else x[-len(x)+5:].strip())\n\n#Rearranging columns\ndf_6=df_5[['time', 'lp_id', 'pct_access', 'engagement_index', 'district_id',\n       'state', 'locale', 'pct_black\/hispanic', 'pct_free\/reduced',\n       'county_connections_ratio', 'pp_total_raw', 'Product Name',\n       'Provider\/Company Name', 'Sectors',\n       'Primary Essential Function-Main Category','Primary Essential Function-Sub Category']]\n\n# Cleaning pct_ columns\ndf_6['pct_black\/hispanic']=df_6['pct_black\/hispanic'].str.replace('[','')\ndf_6['pct_free\/reduced']=df_6['pct_free\/reduced'].str.replace('[','')\ndf_6['pp_total_raw']=df_6['pp_total_raw'].str.replace('[','')\n\n#hispanic\/black--getting mean value from mentioned percentage class\ndf_6['pct_black\/hispanic_lower']=df_6['pct_black\/hispanic'].apply(lambda x:x.split(',')[0])\ndf_6['pct_black\/hispanic_higher']=df_6['pct_black\/hispanic'].apply(lambda x:x.split(',')[1])\n\ndf_6['pct_black\/hispanic_lower']=df_6['pct_black\/hispanic_lower'].astype('float')\ndf_6['pct_black\/hispanic_higher']=df_6['pct_black\/hispanic_higher'].astype('float')\n\ndf_6['pct_black\/hispanic']=df_6[['pct_black\/hispanic_lower','pct_black\/hispanic_higher']].mean(axis=1)\n\ndf_6['pct_black\/hispanic']=df_6['pct_black\/hispanic']*100\n\n#expenses by company--getting mean value from mentioned percentage class\ndf_6['pp_total_raw']=df_6['pp_total_raw'].astype('str')\ndf_6['pp_total_raw_lower']=df_6['pp_total_raw'].apply(lambda x:x.split(',')[0])#.unique()\ndf_6['pp_total_raw_higher']=df_6['pp_total_raw'].apply(lambda x:x.split(',')[1] if x!='nan' else 'nan')\ndf_6['pp_total_raw_lower']=df_6['pp_total_raw_lower'].astype('float')\ndf_6['pp_total_raw_higher']=df_6['pp_total_raw_higher'].astype('float')\n\ndf_6['pp_total_raw']=df_6[['pp_total_raw_lower','pp_total_raw_higher']].mean(axis=1)\n\n#We will drop county_connections_ratio because it has one value only to describe internet connectivity by state and \n#also we'll ignore all the columns not required in analysis\n","0a7a8eae":"from bokeh.plotting import figure\nfrom bokeh.io import output_notebook, show\n#Converting data type\ndf_6.time=pd.to_datetime(df_6.time,infer_datetime_format = True, utc = True).astype('datetime64[ns]')\n\n#Adding month column\ndf_6['month']=pd.DatetimeIndex(df_6['time']).month\n\n#Group by month\nmonthly_df=df_6[['month','engagement_index','pct_access']].groupby(['month']).mean().reset_index()\n\nfrom bokeh.models import HoverTool\nfrom bokeh.models import LinearAxis, Range1d\n\n# line plot - multiple lines\noutput_notebook()\n\n# data\nx = monthly_df.month\ny1 = monthly_df.engagement_index\ny2 = monthly_df.pct_access\n\n# plot \nplot = figure(width=800,height=500)\nplot.line(x, y1, color='red',legend_label='Engagement Index')\nplot.circle(x, y1, color='red')\nplot.yaxis.axis_label = 'Engagement Index'\n\n#Adding second y axis\nplot.extra_y_ranges = {\"y2\": Range1d(start = 0.02, end = 3)}\nplot.add_layout(LinearAxis(y_range_name = \"y2\",axis_label='Digital Connectivity (Pct Access)'), 'right')\nplot.line(x, y2, color = \"blue\", y_range_name = \"y2\",legend_label = 'Digital Connectivity (Pct Access)')\nplot.circle(x, y2, color = \"blue\", y_range_name = \"y2\")\n\n#Adding labels\nplot.xaxis.axis_label = 'Months'\nplot.xaxis.ticker = list(range(1, 13))\n\n#Adding hover tool\nplot.add_tools(HoverTool(tooltips=[(\"Month\", \"$x\"),(\"Y Value\", \"@y\")]))\n\nplot.legend.location = \"top_center\"\nshow(plot)\n","dfc6238c":"df_6[['pct_access','engagement_index']].corr()","78e1174b":"pip install openpyxl","f06eecf5":"cases_df=pd.read_excel(\"..\/input\/covid-cases\/owid-covid-data.xlsx\",sheet_name='america')\ncases_df=cases_df[['date','new_cases']]","5e4bdc63":"from bokeh.plotting import figure\n#Adding month column\ncases_df['month']=pd.DatetimeIndex(cases_df['date']).month\n\n#Group by month\ncases_monthly_df=cases_df[['month','new_cases']].groupby(['month']).mean().reset_index()\n\n#Merging cases_monthly_df and monthly_df on 'month' column\nq2_df=monthly_df.merge(cases_monthly_df,how='left',on='month')\n\n# data for first plot\nx = q2_df.month\ny1 = q2_df.engagement_index\ny2 = q2_df.new_cases\n\n# plot \nplot = figure(width=800,height=500)\nplot.line(x, y1, color='red',legend_label='Engagement Index')\nplot.circle(x, y1, color='red')\nplot.yaxis.axis_label = 'Engagement Index'\nplot.y_range = Range1d(0, 400)\n\n#Adding second y axis\nplot.extra_y_ranges = {\"y2\": Range1d(start = 0, end = 300000)}\nplot.add_layout(LinearAxis(y_range_name = \"y2\",axis_label='Daily Cases'), 'right')\nplot.line(x, y2, color = \"blue\", y_range_name = \"y2\",legend_label = 'Daily Cases')\nplot.circle(x, y2, color = \"blue\", y_range_name = \"y2\")\n\n#Adding labels\nplot.xaxis.axis_label = 'Months'\nplot.xaxis.ticker = list(range(1, 13))\n\n#Adding hover tool\nplot.add_tools(HoverTool(tooltips=[(\"Month\", \"$x\"),(\"Y Value\", \"@y\")]))\n\nplot.legend.location = \"top_center\"\nshow(plot)","1889ae23":"q2_df[['engagement_index','pct_access','new_cases']].corr()","39da5b87":"ed_tech_df=df_6[['Primary Essential Function-Main Category','Primary Essential Function-Sub Category','engagement_index']].groupby(['Primary Essential Function-Main Category','Primary Essential Function-Sub Category']).mean().reset_index()\ned_tech_df1=ed_tech_df.loc[ed_tech_df['Primary Essential Function-Main Category']=='LC']","9eaad7da":"from bokeh.models import ColumnDataSource, ranges, LabelSet\n\n#Data\nx=ed_tech_df1['Primary Essential Function-Sub Category'].tolist()\ny=ed_tech_df1.engagement_index.astype('int').tolist()\nsource = ColumnDataSource(dict(x=x,y=y))\n\n#Creating figure\ngraph = figure(x_range=x,title = \"Student highly engage in Technical Skills Development\")\ngraph.vbar(x=x,top =y,width = 0.5)\n\n#Labelling\ngraph.xaxis.major_label_orientation = 'vertical'\ngraph.yaxis.axis_label = 'Engagement Index'\ngraph.y_range = Range1d(0, 1300)\nlabels = LabelSet(x='x', y='y', text='y', level='glyph',\n        x_offset=-13.5, y_offset=0,source=source\n                  , render_mode='canvas')\ngraph.add_layout(labels)\n\n#Plotting\nshow(graph)\n","e0c959a1":"# Products engaggement in Skill development courses, Content creation and Streaming Services\ntemp=df_6[['Primary Essential Function-Sub Category','Product Name','engagement_index']].loc[(df_6['Primary Essential Function-Sub Category']=='Sites, Resources & Reference - Streaming Services'\n                                                   )|(df_6['Primary Essential Function-Sub Category']=='Content Creation & Curation')|\n                                                  (df_6['Primary Essential Function-Sub Category']=='Online Course Providers & Technical Skills Development')]\ned_tech_df1=temp.groupby(['Product Name']).mean().reset_index()\ntemp1=temp[['Primary Essential Function-Sub Category','Product Name','engagement_index']].groupby(['Primary Essential Function-Sub Category','Product Name']).mean().reset_index()\ntemp2=temp1.loc[temp1['engagement_index'].isnull()==False].reset_index(drop=True)","17dc87ba":"import numpy as np\nfrom bokeh.plotting import figure\nfrom bokeh.io import curdoc, show\nfrom bokeh.models import ColumnDataSource, Grid, HBar, LinearAxis, Plot\n\n#First chart on Content Creation and Curation\nchart1=temp2.loc[temp2['Primary Essential Function-Sub Category']=='Content Creation & Curation'].sort_values(by='engagement_index',ascending=False).head(5).reset_index(drop=False)\ny =chart1['Product Name'].tolist()\nx = chart1.engagement_index.astype('int').tolist()\nsource=ColumnDataSource(dict(x=x,y=y))\n\n#Creating Figure\np = figure(plot_width=500, plot_height=300, y_range = y,toolbar_location=None)\np.hbar(y='y', right='x', source=source, height=0.5, line_color='white', color =\"#9ecae1\")\n#Labelling\np.xaxis.axis_label=\"Engagement Index\"\np.yaxis.axis_label=\"Content Creation Products\"\np.yaxis.major_label_orientation = 0\np.x_range = Range1d(0, 12500)\nlabels = LabelSet(x='x', y='y', text='x', level='glyph',\n        x_offset=0, y_offset=0,source=source\n                  , render_mode='canvas')\np.add_layout(labels)\n\n#Second chart on Technical Skills Development\nchart2=temp2.loc[temp2['Primary Essential Function-Sub Category']=='Online Course Providers & Technical Skills Development'].sort_values(by='engagement_index',ascending=False).head(5).reset_index(drop=False)\ny =chart2['Product Name'].tolist()\nx = chart2.engagement_index.astype('int').tolist()\nsource=ColumnDataSource(dict(x=x,y=y))\n\n#Creating Figure\nq = figure(plot_width=500, plot_height=300, y_range = y,toolbar_location=None)\nq.hbar(y='y', right='x', source=source, height=0.5, line_color='white', color =\"#9ecae1\")\n#Labelling\nq.xaxis.axis_label=\"Engagement Index\"\nq.yaxis.axis_label=\"Technical Skills Development Products\"\nq.yaxis.major_label_orientation = 0\nq.x_range = Range1d(0, 3500)\nlabels = LabelSet(x='x', y='y', text='x', level='glyph',\n        x_offset=5, y_offset=0,source=source\n                  , render_mode='canvas')\nq.add_layout(labels)\n\nfrom bokeh.layouts import row\n\n#Third chart on Streaming Services\nchart3=temp2.loc[temp2['Primary Essential Function-Sub Category']=='Sites, Resources & Reference - Streaming Services'].sort_values(by='engagement_index',ascending=False).head(5).reset_index(drop=False)\ny =chart3['Product Name'].tolist()\nx = chart3.engagement_index.astype('int').tolist()\nsource=ColumnDataSource(dict(x=x,y=y))\n\n#Creating Figure\nr = figure(plot_width=500, plot_height=300, y_range = y,toolbar_location=None)\nr.hbar(y='y', right='x', source=source, height=0.5, line_color='white', color =\"#9ecae1\")\n#Labelling\nr.xaxis.axis_label=\"Engagement Index\"\nr.yaxis.axis_label=\"Streaming Services Products\"\nr.yaxis.major_label_orientation = 0\nr.x_range = Range1d(0, 3800)\nlabels = LabelSet(x='x', y='y', text='x', level='glyph',\n        x_offset=0, y_offset=0,source=source\n                  , render_mode='canvas')\nr.add_layout(labels)\n\nshow(row(p,q,r))","24169798":"ed_tech_df=df_6[['Primary Essential Function-Main Category','Primary Essential Function-Sub Category','engagement_index']].groupby(['Primary Essential Function-Main Category','Primary Essential Function-Sub Category']).mean().reset_index()\ned_tech_df1=ed_tech_df.loc[ed_tech_df['Primary Essential Function-Main Category']=='CM']","c9bcc885":"from bokeh.models import ColumnDataSource, ranges, LabelSet\nfrom bokeh.plotting import figure\n#Data\nx=ed_tech_df1['Primary Essential Function-Sub Category'].tolist()\ny=ed_tech_df1.engagement_index.astype('int').tolist()\nsource = ColumnDataSource(dict(x=x,y=y))\n\n#Creating figure\ngraph = figure(x_range=x,title = \"Students highly engage in Classroom Interaction\")\ngraph.vbar(x=x,top =y,width = 0.5)\n\n#Labelling\ngraph.xaxis.major_label_orientation = 'vertical'\ngraph.yaxis.axis_label = 'Engagement Index'\ngraph.y_range = Range1d(0, 800)\nlabels = LabelSet(x='x', y='y', text='y', level='glyph',\n        x_offset=-13.5, y_offset=0,source=source\n                  , render_mode='canvas')\ngraph.add_layout(labels)\n\n#Plotting\nshow(graph)\n","46696708":"# Products engaggement in colaborative Learning sub categories\ntemp=df_6[['Primary Essential Function-Sub Category','Product Name','engagement_index']].loc[(df_6['Primary Essential Function-Sub Category']=='Classroom Engagement & Instruction - Assessment & Classroom Response'\n                                                   )|(df_6['Primary Essential Function-Sub Category']=='Virtual Classroom - Video Conferencing & Screen Sharing')]\ned_tech_df1=temp.groupby(['Product Name']).mean().reset_index()\ntemp1=temp[['Primary Essential Function-Sub Category','Product Name','engagement_index']].groupby(['Primary Essential Function-Sub Category','Product Name']).mean().reset_index()\ntemp2=temp1.loc[temp1['engagement_index'].isnull()==False].reset_index(drop=True)","b43b9e15":"import numpy as np\nfrom bokeh.plotting import figure\nfrom bokeh.io import curdoc, show\nfrom bokeh.models import ColumnDataSource, Grid, HBar, LinearAxis, Plot\n\n#First chart on Classroom Response\nchart1=temp2.loc[temp2['Primary Essential Function-Sub Category']=='Classroom Engagement & Instruction - Assessment & Classroom Response'].sort_values(by='engagement_index',ascending=False).head(5).reset_index(drop=False)\ny =chart1['Product Name'].tolist()\nx = chart1.engagement_index.astype('int').tolist()\nsource=ColumnDataSource(dict(x=x,y=y))\n\n#Creating Figure\np = figure(plot_width=500, plot_height=400, y_range = y,toolbar_location=None)\np.hbar(y='y', right='x', source=source, height=0.5, line_color='white', color =\"#9ecae1\")\n#Labelling\np.xaxis.axis_label=\"Engagement Index\"\np.yaxis.axis_label=\"Assessment & Classroom Response Products\"\np.yaxis.major_label_orientation = 0\np.x_range = Range1d(0, 1100)\nlabels = LabelSet(x='x', y='y', text='x', level='glyph',\n        x_offset=0, y_offset=0,source=source\n                  , render_mode='canvas')\np.add_layout(labels)\n\n#Second chart on Virtual Classrooms\nchart2=temp2.loc[temp2['Primary Essential Function-Sub Category']=='Virtual Classroom - Video Conferencing & Screen Sharing'].sort_values(by='engagement_index',ascending=False).head(5).reset_index(drop=False)\ny =chart2['Product Name'].tolist()\nx = chart2.engagement_index.astype('int').tolist()\nsource=ColumnDataSource(dict(x=x,y=y))\n\n#Creating Figure\nq = figure(plot_width=500, plot_height=400, y_range = y,toolbar_location=None)\nq.hbar(y='y', right='x', source=source, height=0.5, line_color='white', color =\"#9ecae1\")\n#Labelling\nq.xaxis.axis_label=\"Engagement Index\"\nq.yaxis.axis_label=\"Virtual Classroom - Video Conferencing & Screen Sharing\"\nq.yaxis.major_label_orientation = 0\nq.x_range = Range1d(0, 2500)\nlabels = LabelSet(x='x', y='y', text='x', level='glyph',\n        x_offset=5, y_offset=0,source=source\n                  , render_mode='canvas')\nq.add_layout(labels)\n\nshow(row(p,q))","80e399c6":"company_df=df_6[['Provider\/Company Name','engagement_index']].groupby('Provider\/Company Name').max().sort_values(by='engagement_index',ascending=False).head(10).reset_index()\n\n#data\ny =company_df['Provider\/Company Name'].tolist()\nx = company_df.engagement_index.astype('int').tolist()\nsource=ColumnDataSource(dict(x=x,y=y))\n\n#Creating Figure\np = figure(plot_width=500, plot_height=400, y_range = y,toolbar_location=None)\np.hbar(y='y', right='x', source=source, height=0.5, line_color='white', color =\"#9ecae1\")\n\n#Labelling\np.xaxis.axis_label=\"Engagement Index\"\np.yaxis.axis_label=\"Company Name\"\np.yaxis.major_label_orientation = 0\np.x_range = Range1d(0, 200000)\nlabels = LabelSet(x='x', y='y', text='x', level='glyph',\n        x_offset=0, y_offset=0,source=source\n                  , render_mode='canvas')\np.add_layout(labels)\nshow(p)","ba78f05f":"from matplotlib import figure\nfrom bokeh.plotting import figure\n\n#CHART 1 SHOWING STATEWISE ENGAGEMENT INDEX\nstate_df=df_6[['state','engagement_index']].groupby('state').mean().sort_values(by='engagement_index').reset_index()\nstate_df\n\n#data for engagement_index\ny =state_df['state'].tolist()\nx = state_df.engagement_index.astype('int').tolist()\nsource=ColumnDataSource(dict(x=x,y=y))\n\n#Creating Figure\np = figure(plot_width=500, plot_height=900, y_range = y,toolbar_location=None)\np.hbar(y='y', right='x', source=source, height=0.5, line_color='white', color =\"#FDE724\")\n\n#Labelling\np.xaxis.axis_label=\"Engagement Index\"\np.yaxis.axis_label=\"State\"\np.yaxis.major_label_orientation = 0\np.x_range = Range1d(0, 1000)\nlabels = LabelSet(x='x', y='y', text='x', level='glyph',\n        x_offset=0, y_offset=-10,source=source\n                  , render_mode='canvas')\np.add_layout(labels)\n\nshow(p)","17d53f0c":"from matplotlib import figure\nfrom bokeh.plotting import figure\n\n#CHART 1 Showing District wise pct access\ndis_df=df_6[['district_id','pct_access']].groupby('district_id').mean().sort_values(by='pct_access',ascending=False).reset_index().head(10)\ndis_df=dis_df.sort_values(by='pct_access')\n\n#data for pct_access\ny =dis_df['district_id'].astype('str').tolist()\nx = dis_df.pct_access.astype('int').tolist()\nsource=ColumnDataSource(dict(x=x,y=y))\n\n#Creating Figure\np = figure(plot_width=500, plot_height=700, y_range = y,toolbar_location=None)\np.hbar(y='y', right='x', source=source, height=0.5, line_color='white', color =\"#FDE724\")\n\n#Labelling\np.xaxis.axis_label=\"Pct Access\"\np.yaxis.axis_label=\"District\"\np.yaxis.major_label_orientation = 0\np.x_range = Range1d(0, 8)\nlabels = LabelSet(x='x', y='y', text='x', level='glyph',\n        x_offset=0, y_offset=-10,source=source\n                  , render_mode='canvas')\np.add_layout(labels)\n\nshow(p)","26c14dfd":"from matplotlib import pyplot as plt\nimport numpy as np\n\n#CHART 1 SHOWING STATEWISE ENGAGEMENT INDEX\ndef autopct_func(values):\n    def my_autopct(pct):\n        total = sum(values)\n        val = int(round(pct*total\/100.0))\n        return '{p:.2f}%  ({v:d})'.format(p=pct,v=val)\n    return my_autopct\n\nlocale_df=df_6[['locale','engagement_index']].groupby('locale').mean().sort_values(by='engagement_index').reset_index()\nlocale_df\n\nlocale_label = locale_df.locale.tolist()\nengagement_values = locale_df.engagement_index.tolist()\n\nfigure,ax1=plt.subplots(1,1)\nexplode=(0,0,0,0)\nax1.pie(engagement_values,explode=explode, radius=2\n        ,labels = locale_label,autopct=autopct_func(engagement_values),colors=['#7CDDDD','#FF2E7E','#FF7300','#FFEC00'])","6dfa640b":"def autopct_func(values):\n    #to get pct values\n    def autopct_func2(pct):\n        sum_ = sum(values)\n        value = int(round(pct*sum_\/100.0))\n        return '{p:.2f}%  ({v:d})'.format(p=pct,v=value)\n    return autopct_func2\n\n\n#CHART 1 - New York\nc=df_6[['state','locale','engagement_index']].reset_index(drop=True)\nc=c.groupby(['state','locale']).mean().reset_index()\nc=c.loc[c.state=='New York']\nc=c.dropna(axis=0)\n\n\nlocale_label = c.locale.tolist()\nengagement_values = c.engagement_index.tolist()\n\nfigure,(ax1,ax2,ax3)=plt.subplots(1, 3)\nexplode=(0,0,0)\nax1.axis('equal')\nax1.set_title('New York',loc='left')\nax1.pie(engagement_values,explode=explode, radius=2\n        ,labels = locale_label,autopct=autopct_func(engagement_values),colors=['#7CDDDD','#FFEC00','#FF7300'])\n\n#CHART 2 - North Dakota\nc=df_6[['state','locale','engagement_index']].reset_index(drop=True)\nc=c.groupby(['state','locale']).mean().reset_index()\nc=c.loc[c.state=='North Dakota']\nc=c.dropna(axis=0)\n\nax2.axis('equal')\nax2.set_title('North Dakota',loc='left')\nlocale_label = c.locale.tolist()\nengagement_values = c.engagement_index.tolist()\nax2.pie(engagement_values, radius=2\n        ,labels = locale_label,autopct=autopct_func(engagement_values),colors=['#FFEC00'])\n\n#CHART 3 - New Hampshire\nc=df_6[['state','locale','engagement_index']].reset_index(drop=True)\nc=c.groupby(['state','locale']).mean().reset_index()\nc=c.loc[c.state=='New Hampshire']\nc=c.dropna(axis=0)\n\nax3.axis('equal')\nax3.set_title('New Hampshire',loc='left')\nlocale_label = c.locale.tolist()\nengagement_values = c.engagement_index.tolist()\nax3.pie(engagement_values, radius=2\n        ,labels = locale_label,autopct=autopct_func(engagement_values),colors=['#FFEC00'])\n\n#Plot Adjustments\nplt.subplots_adjust(left=-0.5,\n                    bottom=0.1, \n                    right=2, \n                    top=0.5, \n                    wspace=0.4, \n                    hspace=0.4)\nplt.show()","25af53cd":"#CHART 1 - Florida\nc=df_6[['state','locale','engagement_index']].reset_index(drop=True)\nc=c.groupby(['state','locale']).mean().reset_index()\nc=c.loc[c.state=='Florida']\nc=c.dropna(axis=0)\n\nlocale_label = c.locale.tolist()\nengagement_values = c.engagement_index.tolist()\n\nfigure,(ax1,ax2,ax3)=plt.subplots(1, 3)\nax1.axis('equal')\nax1.set_title('Florida',loc='left')\nax1.pie(engagement_values, radius=2\n        ,labels = locale_label,autopct=autopct_func(engagement_values),colors=['#FF7300'])\n\n#CHART 2 - North Carolina\nc=df_6[['state','locale','engagement_index']].reset_index(drop=True)\nc=c.groupby(['state','locale']).mean().reset_index()\nc=c.loc[c.state=='North Carolina']\nc=c.dropna(axis=0)\n\nax2.axis('equal')\nax2.set_title('North Carolina',loc='left')\nlocale_label = c.locale.tolist()\nengagement_values = c.engagement_index.tolist()\nax2.pie(engagement_values, radius=2\n        ,labels = locale_label,autopct=autopct_func(engagement_values),colors=['#7CDDDD','#FFEC00','#FF7300'])\n\n#CHART 3 - Washington\nc=df_6[['state','locale','engagement_index']].reset_index(drop=True)\nc=c.groupby(['state','locale']).mean().reset_index()\nc=c.loc[c.state=='Washington']\nc=c.dropna(axis=0)\n\nax3.axis('equal')\nax3.set_title('Washington',loc='left')\nlocale_label = c.locale.tolist()\nengagement_values = c.engagement_index.tolist()\nax3.pie(engagement_values, radius=2\n        ,labels = locale_label,autopct=autopct_func(engagement_values),colors=['#7CDDDD','#FF7300'])\n\n#Plot Adjustments\nplt.subplots_adjust(left=-0.5,\n                    bottom=0.1, \n                    right=2, \n                    top=0.5, \n                    wspace=0.4, \n                    hspace=0.4)\nplt.show()","617e8d1e":"#Importing and preparing data of children living in poverty\npov_df=pd.read_excel(r\"..\/input\/poverty-stats\/percentage of children living in poverty.xlsx\",skiprows=3)\npov_df.columns = pov_df.columns.astype(str)\npov_df=pov_df[['region','2018']]\n\n#Merging with main df\ntemp=df_6[['state','pct_access']]\ntemp=temp.merge(pov_df,how='left',left_on='state',right_on='region')\ntemp=temp[['state','pct_access','2018']]\ntemp_1=temp.groupby('state').mean().reset_index().sort_values(by='pct_access',ascending=False)\ntemp_1.reset_index(drop=True)","e9ccbf4d":"temp_2=temp_1.loc[(temp_1['state']!='New York')&(temp_1['state']!='Utah')&(temp_1['state']!='Minnesota')&(temp_1['state']!='Washington')]\n# data \ny1 = temp_2['pct_access']\ny2 = temp_2['2018']\nplt.scatter(y1,y2)\n#setting axes labels\nplt.xlabel(\"Pct_Access\")\nplt.ylabel(\"Percentage of children living in poverty\")","32b4b218":"temp_2.corr()#after dropping 4 states","8f7d8eb4":"temp=df_6[['state','pct_black\/hispanic','pct_access']].groupby('state').mean().sort_values(by='pct_black\/hispanic',ascending=False).reset_index()\n\n#Filtering to see impact of higher percentage of social class presence\ntemp=temp.loc[temp['pct_black\/hispanic']>20]","5e00575f":"y=temp['pct_black\/hispanic']\nx1=temp['pct_access']\n\n#Creating figure\nfigure,ax1=plt.subplots(1, 1)\nax1.scatter(x1,y)\n#Setting axes labels\nax1.set_xlabel(\"Pct_Access\")\nax1.set_ylabel(\"Percentage of black\/hispanic kids\")\n\ntemp.corr()","9a1f5069":"#Checking correlation\ntemp=df_6[['district_id','pp_total_raw','pct_access','engagement_index']].loc[df_6['pp_total_raw'].isnull()==False]\ntemp_1=temp[['pp_total_raw','pct_access','engagement_index']].groupby('pp_total_raw').mean().sort_values(by='pp_total_raw').reset_index()\ntemp_1.corr()","b03eb89b":"temp_1","a4beb188":"temp.loc[(temp.pp_total_raw==5000.0)].groupby('district_id').mean()","35952a07":"v=df_6[['Product Name','district_id','pp_total_raw','pct_access','engagement_index']].loc[(df_6['pp_total_raw'].isnull()==False)&(temp.pp_total_raw==5000.0)&(df_6.district_id==6762)]\nu=v.groupby('Product Name').mean().reset_index().sort_values(by='pct_access',ascending=False)\nu.loc[u['pct_access'].isnull()==False]","0c1fea24":"temp_1.loc[temp_1['pp_total_raw']!=5000.0].corr()","61998249":"temp_1=temp_1.loc[temp_1['pp_total_raw']!=5000.0]","d62dc656":"from bokeh.plotting import figure\n\n#First chart on engaement_index and Expenditures\ny =temp_1['pp_total_raw'].astype('str').tolist()\nx = temp_1.engagement_index.astype('int').tolist()\nsource=ColumnDataSource(dict(x=x,y=y))\n\n#Creating Figure\np = figure(plot_width=500, plot_height=400, y_range = y,toolbar_location=None)\np.hbar(y='y', right='x', source=source, height=0.5, line_color='white', color =\"#9ecae1\")\n\n#Labelling\np.xaxis.axis_label=\"Engagement Index\"\np.yaxis.axis_label=\"Expenditures\"\np.yaxis.major_label_orientation = 0\np.x_range = Range1d(0, 1100)\nlabels = LabelSet(x='x', y='y', text='x', level='glyph',\n        x_offset=0, y_offset=0,source=source\n                  , render_mode='canvas')\np.add_layout(labels)\n\n#Second chart on pct_access and Expenditures\ny =temp_1['pp_total_raw'].astype('str').tolist()\nx = temp_1.pct_access.tolist()\nx = [ '%.2f' % elem for elem in x]\nsource=ColumnDataSource(dict(x=x,y=y))\n\n#Creating Figure\nq = figure(plot_width=500, plot_height=400, y_range = y,toolbar_location=None)\nq.hbar(y='y', right='x', source=source, height=0.5, line_color='white', color =\"#9ecae1\")\n\n#Labelling\nq.xaxis.axis_label=\"Pct Access\"\nq.yaxis.axis_label=\"Expenditures\"\nq.yaxis.major_label_orientation = 0\nq.x_range = Range1d(0, 4)\nlabels = LabelSet(x='x', y='y', text='x', level='glyph',\n        x_offset=5, y_offset=0,source=source\n                  , render_mode='canvas')\nq.add_layout(labels)\n\nshow(row(p,q))","1ab7d20d":"from IPython.display import Image\nImage(\"..\/input\/summary\/digital_learning.png\")","71671d75":"# 6. Socio Economic status Impact on Education","3a5ee34b":"Correlation increases after dropping 5000 expenditure case. So **if company is spending more on schools it is resulting in more engagement of students**","d749aacb":"**Observations:**\n<br> If we observe **for >20% black\/hispanic class, we see that as percentage of black\/hispanic class increases district level access to digital learning decreases.** This can point to serious race discrimination in education oppurtunities","ca374a22":"**Observations:**\n<br> **If we drop out 4 states - New York, Utah, Minnesota and Washington, we get negative correlation between Pct Access and Percentage children in poverty**. Pct Access talks about district level engagement and above graph shows that where the percentage of children living on poverty is high there engagement in learning is low.","f627ac16":"### 5d. Locale percentages in top 3 states","b6df02af":"**Observations**\n<br>1. **Google Docs is the most used product in Content Creation products.**Second highly engaged product is,Seesaw which\nis a student-driven digital portfolio that empowers students to independently document what they are learning at school.\n<br>2. There are two mostly used products for technical skill development - **EdOptions Academy and Canvas**.Canvas is a web-based learning management system, or LMS used by learning institutions, educators, and students to access and manage online course learning materials and communicate about skill development and learning achievement. \n<br>3. **Youtube** is highly used among streaming service products.","06c35fc9":"# 2. What is the effect of the COVID-19 pandemic on online and distance learning, and how might this also evolve in the future?","5fd480fc":"# Possible Next Steps","83679bcb":"**Observations**\n<br>1. There is a drop from june to august which can be explained by ***vacation period***\n<br>2. **Digital Connectivity** = There is a **slight dip in march** in pct_access which describes 'Percentage of students at ***district*** level having at least one page-load event of any product and on a day' when taken average. This dip can be explained by the fact that different states announced lockdown on differnt days in March causing some uncertainity in education sector.\n<br>3. **Engagement** = Engagement Index kept on increasing from jan to april because it is a metric measured per 1000 students meaning whoever were accessing the platform there engagement increased with the platform product as lockdown or school shutdowns and exams were happening.\n<br>4. Looking at the graph it looks like there is a correlation among these two metrics. Let's find out....","b4cbc845":"In this report, approach of analysis is to answer some questions regarding kids behaviour on digital learning that will give some additional insights on the data\n<br>**Contents of report:**\n<br>**1.What is the picture of digital connectivity and engagement in 2020\n<br>2.What is the effect of COVID-19 pandemic on online learning\n<br>3.How did students engage with different education Technologies\n<br>4.Companies having maximum engagement\n<br>5.Demographic analysis of pct_access and Engagement Index \n<br>6.Socio Economic Impact on Education\n<br>7.Financial Analysis\n<br>Summary\n<br>Possible Next Steps\n<br> Web Links of external data used in this notebook**","cba91e00":"# Data Cleaning","294cc1e1":"### 5e. Locale Percentages in bottom 3 states","2511d5ea":"Even if we ignore the vacation period there is no particular trend or correlation among the COVID cases rising and engagement index which makes sense as engagement index can be drastically affected only under two conditions which are schools opening or lockdown restricting kids to home. That increase is evident for January, February, March and April. Once the lockdown happened and students were at home, that resulted in high and constant engagement index when compared to kids going to school (again ignore the vacation period). Same reasoning can be given for Pct Access. Lets check their correlation once.","d0347113":"**Observations**\n<br> More expenditure results in student's engagement in digital learning. **Spending activities are working to get students to involve in digital learning.** ","4cdf676e":"## **If you found this notebook insightful then do not forget to upvote it. Thank you for reading till here.**","acf5466d":"Lets investigate further which product is performing exceptionally in district_id 6762","dac06826":"**Observations:**\n<br>**Students are highly engaged when they have to response in class or share screen while communicating**.Lets see what products have high engagement in these main categories.","aeb04e13":"#  3. How did student engage with different types of education technology ?","e8139223":"Google provides docs, drive and classroom services for free. So low expenditure districts are using it heavily thus resulting in high engagement and pct_access. So, we'll drop this 5000 expenditure bucket for our analysis","72b199e1":"# 7. Financial Analysis","34cf3c9c":"# 1.\tWhat is the picture of digital connectivity and engagement in 2020? ","34793e78":"**Observations:**\n<br> 1. **Google LLC provides services - Google Forms, YouTube, Meet** and they had high engagement as we saw in previous section\n<br> 2. **Instructure ltd is providing Canvas** which is highly used product for Technical Skill development\n<br> 3. Students use Zoom for online classroom interactions which are provided by **Zoom Video Communications**, Inc ","376d8823":"Something is weird about 5000 expenditure field. We'll have a look at all the districts with this level of expense to understand if its an outlier or not","901f6082":"There are two major types of education technology that students majorly interact with. Those are:\n<br>**1. Linear Learning** - This kind of learning refer to independent learning activities that students can complete modules at their own pace.\n<br>**2. Collaborative Learning** - This kind of learning involves social and human interaction where people get together in Teams to solve the problem. It gives more of a real classroom vibes where students and teachers are interacting.","49c86c9b":"Quite naturally, if more kids start accessing the platform it will result in high engagement with the products.","a44141b7":"**Observations:**\n<br> **New York, North Dakota and New Hampshire** are the highest performing states ","725712f0":"**Observations:**\n<br> **3692 district** students has the highest pct access to the products","d66d6d41":"COVID Cases - https:\/\/github.com\/owid\/covid-19-data\/tree\/master\/public\/data\/\n<br>Kids Percentage living in poverty - https:\/\/www.aecf.org\/resources\/2020-kids-count-data-book\/auxiliary-materials\n","55943837":"### 5c.Locale Trend on Engagement Index ","a9d5f3a6":"This analysis will be performed on the mean value of expenditure buckets provided in the dataset. Mean for thesee buckets were calculated in data cleaning section.Hypothesis is more the expenditure more will be the engagement with products and more will be tthe pct access.","28c06745":"***Fluctuations in COVID cases do not play any role in student's engagement or digital connectivity***","0a654274":"**Observations**\n<br>1. **Google Forms** is the most used product in Assessment and response products.\n<br>2.**Zoom and Meet** are the most preferred choice for Virtual Classrooms.","adb86b1c":"### 6b. Social class impact on education ","b3f69a0c":"### 6a. Percentage of childern living in poverty and pct_access","8855572c":"# 5.Demographic analysis of pct_access and Engagement Index ","7167c5a6":"**Observations:**\n<br>So it seems like **our dataset does not have values for locale of North Dakota and New Hampshire**. So nothing can be said about the analysis for sure","5aeab0e7":"<br> 1.This analysis include only external factor responsible for digital learning engagement of students but it does not include psychological factors that motivates students to engage with products. This can be incorporated by taking students' survey regarding their feedback on products.\n<br> 2.Robust time series model can be built when enough data is available to forecast engagement rating and this can help to optimise expenditure analysis for future.","04faac2e":"### 5.a State Level Engagement Index ","a595d3c4":"**Observations:**\n<br>**Rural engagement is highest** followed by **suburb and town kids at almost same level** and city kids are little behind. Could it be because city kids have more distractions or our dataset is missing locale among states?? Lets dig in...","30ae55fa":"### 4. Companies having maximum product engagement ","fade22aa":"#### 3.b Lets see which sub category under Collaborative Learning has highest engagement index and what all products fall in those categories","a8902f9b":" # Web Links of Data used in this Notebook","eae492a4":"**Observations:**\n<br> **Students are highly engaged in Technical Skills development courses.** Students are aso highly engage in Content Creation and Streaming services. Lets see what products have high engagement in these main categories.","383bc07b":"#### 3.a Lets see which sub category under Linear Learning has highest engagement index and what all products fall in those categories","293e38a1":"# Summary","16030d55":"### 5b. Districts having high pct_access "}}