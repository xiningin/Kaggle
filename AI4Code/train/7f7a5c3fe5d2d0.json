{"cell_type":{"85655b51":"code","a7c5f91a":"code","6c5db0a1":"markdown","47bfd533":"markdown","d18aac15":"markdown","fff5a2ed":"markdown","d422ba5b":"markdown","89410ac4":"markdown"},"source":{"85655b51":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.integrate import odeint\n\ndef f(c,t):\n    x = c[0]\n    y = c[1]\n    dxdt = 1 - (2.04 * x) + (0.02 * x * x * y)\n    dydt = (2 * x) - (0.02 * x * x * y)\n    return [dxdt, dydt]\n\n# integrate the equations\nt = np.linspace(0, 500, 500) # times to report solution\ny = odeint(f, [0,0], t) # integrate\n\n# plot results\nplt.figure(1)\nplt.plot(t,y[:,0],'b--')\nplt.plot(t,y[:,1],'r--')\nplt.xlabel('Time')\nplt.ylabel('Concentration')\nplt.legend(['X','Y'])\nplt.show()","a7c5f91a":"import random as r\nimport math\n\ndef init():\n    pass\n\ndef r1():\n    mol[\"X\"] += 1\n\ndef r2():\n    mol[\"X\"] -= 1\n    mol[\"Y\"] += 1\n\ndef r3():\n    mol[\"X\"] -= 2\n    mol[\"Y\"] -= 1\n    mol[\"X\"] += 3\n\ndef r4():\n    mol[\"X\"] -= 1\n    \ndef addChange(t):\n    countAtT.append([t, mol[\"X\"], mol[\"Y\"]])\n    \ndef getWeightsTotal():\n    w = [1, \n         2 * mol['X'], \n         0.02 * ((mol['X'] * mol['X']) * mol['Y']), \n         0.04 * mol['X']]\n    wT = sum(w)\n    return wT\n\ndef getWeights():\n    w = [1, \n         2 * mol['X'], \n         0.02 * ((mol['X'] * mol['X']) * mol['Y']), \n         0.04 * mol['X']]\n    wT = sum(w)\n    return [wi\/wT for wi in w]\n\nreactions = [r1, r2, r3, r4]\nmolecules = [\"X\", \"Y\"]\nmol = {z : 0 for z in molecules}\n\ncountAtT = []\nT = 500\nt = 0\ndt = 0\n\nnext_reaction = init\nwhile t < T:\n    dt = -math.log(r.uniform(0.0, 1.0)) \/ getWeightsTotal()\n    next_reaction()\n    next_reaction = r.choices(population = reactions, weights = getWeights(), k = 1)[0]\n    addChange(t)\n    t = t + dt\n    \nplt.plot([x[0] for x in countAtT], [x[1] for x in countAtT], 'b-')\nplt.plot([x[0] for x in countAtT], [x[2] for x in countAtT], 'r-')\nplt.ylabel('Molecules')\nplt.xlabel('Time')\nplt.legend(['X','Y'])\nplt.show()","6c5db0a1":"The graph looks fairly similar to the one before at the start where Y's concentration is rising up until X combines with it. It looks rather chaotic due to the use of randomness. However, it is still clear that after Y and X have combined, X stays at quite a higher concentration than Y. Since random is used, there are in some cases unusual spikes in the graph where Y's concentration is higher than that of X.","47bfd533":"# Author\n\nSigne Rebassoo, sr2u17, ID: 29554896, University of Southampton","d18aac15":"## Task 2\n**Use a package to solve the differential equation for 500 time units starting from X(0)=Y(0)=0.** ","fff5a2ed":"## Task 3\n**Write a Gillespie algorithm to simulate the same four chemical equations and plot the results for 500 time units (note that this is a lot of data to plot and you might want to save and plot the data only after X or Y have changed in number by at least 5.** ","d422ba5b":"As can be seen, Y's concentration is increasing until it combines with a high concentration of X, as a result of which Y's concentration drops drastically. X stabilises around concentration 25 and Y stabilises around 5. The graph shows that X is used to control Y.","89410ac4":"## Task 1\n**Write down the differential equation describing the system of chemical equations (assuming a volume of 1).**\n\n* \u2205 \u2192 X at a rate 1\n* X \u2192 Y at rate 2\n* 2 X + Y \u2192 3 X at rate 0.02\n* X \u2192 \u2205 at rate 0.04\n\nAnswer:\n\n$\\displaystyle \\frac{\\delta X}{\\delta t} = 1 - 2.04X + 0.02X^2Y$\n\n$\\displaystyle \\frac{\\delta Y}{\\delta t} = 2X - 0.02X^2Y$"}}