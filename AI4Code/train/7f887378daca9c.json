{"cell_type":{"234696c0":"code","cb1a4f86":"code","33d088fe":"code","cb3d9e2c":"code","1ede40a2":"code","ebd668f1":"code","c3a04922":"code","6c07f1e9":"code","872863fd":"code","679d7fd6":"code","45ea88f6":"code","9dd520a6":"code","c5181d23":"code","53e49eef":"code","a0ff1548":"code","e715a9e7":"code","47db9d6f":"code","d2e7b33f":"code","08368d70":"code","d4a61d88":"code","c62fd7eb":"code","143be046":"code","9fa98837":"code","355399ef":"code","4d2ee24f":"code","5baca971":"code","d731ea51":"code","2b983802":"code","a9a34120":"code","08115847":"code","8259ff9f":"code","4496e997":"markdown","02b86f94":"markdown","7bcabf7a":"markdown"},"source":{"234696c0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cb1a4f86":"# Import libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import ListedColormap","33d088fe":"# For Machine Learning\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nfrom sklearn.neighbors import KNeighborsClassifier, NeighborhoodComponentsAnalysis \nfrom sklearn.decomposition import PCA","cb3d9e2c":"# Warning library\nimport warnings\nwarnings.filterwarnings(\"ignore\")","1ede40a2":"# Load dataset\ndata = pd.read_csv(\"\/kaggle\/input\/heart-disease-health-indicators-dataset\/heart_disease_health_indicators_BRFSS2015.csv\")","ebd668f1":"# Return the first 5 rows\ndata.head()","c3a04922":"# Return a tuple representing the dimensionality of the DataFrame\ndata.shape","6c07f1e9":"# Print a concise summary of a DataFrame\ndata.info()","872863fd":"# Return the last 5 rows\ndata.tail()","679d7fd6":"# Return a random sample of items from an axis of object\ndata.sample()","45ea88f6":"# Return the dtypes in the DataFrame\ndata.dtypes","9dd520a6":"data.columns","c5181d23":"# Alter axes label\ndata = data.rename(columns = {\"HeartDiseaseorAttack\":\"target\"})","53e49eef":"# Show the counts of observations in each categorical bin using bars\nsns.countplot(data[\"target\"])\nprint(data.target.value_counts())","a0ff1548":"data[\"target\"] = [1 if i == 1.0 else 0 for i in data.target]","e715a9e7":"data.target.sample(10)","47db9d6f":"#Generate descriptive statistics\ndata.describe()","d2e7b33f":"# Correlation\ncorr_matrix = data.corr()\nplt.figure(figsize=(50,50))\nsns.clustermap(corr_matrix, annot = True, fmt = \".2f\")\nplt.title(\"Correlation Between Features\")\nplt.show()","08368d70":"threshold = 0.1\nfiltre = np.abs(corr_matrix[\"target\"]) > threshold\ncorr_features = corr_matrix.columns[filtre].tolist()\nsns.clustermap(data[corr_features].corr(), annot = True, fmt = \".2f\")\nplt.title(\"Correlation Between Features w Corr Threshold 0.5\")","d4a61d88":"# There some correlated features\n# box plot \ndata_melted = pd.melt(data, id_vars = \"target\",\n                      var_name = \"features\",\n                      value_name = \"value\")\n\nplt.figure(figsize=(15,10))\nsns.boxplot(x = \"features\", y = \"value\", hue = \"target\", data = data_melted)\nplt.xticks(rotation = 90)\nplt.show()\n","c62fd7eb":"# pair plot \nsns.pairplot(data[corr_features], diag_kind = \"kde\", markers = \"+\",hue = \"target\")\nplt.show()\n","143be046":"y = data.target\nx = data.drop([\"target\"],axis = 1)\ncolumns = x.columns.tolist()\ncolumns\n","9fa98837":"# Train test split\n\nX_train, X_test, Y_train, Y_test = train_test_split(x, y, test_size = 0.3, random_state = 42)","355399ef":"scaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","4d2ee24f":"X_train_df = pd.DataFrame(X_train, columns = columns)\nX_train_df_describe = X_train_df.describe()\nX_train_df[\"target\"] = Y_train","5baca971":"X_train_df","d731ea51":"# box plot \ndata_melted = pd.melt(X_train_df, id_vars = \"target\",\n                      var_name = \"features\",\n                      value_name = \"value\")\n\nplt.figure(figsize=(15,10))\nsns.boxplot(x = \"features\", y = \"value\", hue = \"target\", data = data_melted)\nplt.xticks(rotation = 90)\nplt.show()\n","2b983802":"# pair plot \nsns.pairplot(X_train_df[corr_features], diag_kind = \"kde\", markers = \"+\",hue = \"target\")\nplt.show()","a9a34120":"# Basic KNN Method\n\nknn = KNeighborsClassifier(n_neighbors = 2)\nknn.fit(X_train, Y_train)\ny_pred = knn.predict(X_test)\ncm = confusion_matrix(Y_test, y_pred)\nacc = accuracy_score(Y_test, y_pred)\nprint(\"CM: \",cm)\nprint(\"Basic KNN Acc: \",acc)","08115847":"# Random Forest Method\n\nfrom sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier()\nrf.fit(X_train, Y_train)\ny_pred = rf.predict(X_test)\ncm = confusion_matrix(Y_test, y_pred)\nacc = accuracy_score(Y_test, y_pred)\nprint(\"CM: \",cm)\nprint(\"Random Forest Classifier Acc: \",acc)","8259ff9f":"# XGBClassifier Method\n\nfrom xgboost import XGBClassifier\n\nxg = XGBClassifier()\nxg.fit(X_train, Y_train)\ny_pred = xg.predict(X_test)\ncm = confusion_matrix(Y_test, y_pred)\nacc = accuracy_score(Y_test, y_pred)\nprint(\"CM: \",cm)\nprint(\"XGBClassifier Acc: \",acc)","4496e997":"# EDA","02b86f94":"# Description\nContext\nHeart Disease is among the most prevalent chronic diseases in the United States, impacting millions of Americans each year and exerting a significant financial burden on the economy. In the United States alone, heart disease claims roughly 647,000 lives each year \u2014 making it the leading cause of death. The buildup of plaques inside larger coronary arteries, molecular changes associated with aging, chronic inflammation, high blood pressure, and diabetes are all causes of and risk factors for heart disease.\n\nWhile there are different types of coronary heart disease, the majority of individuals only learn they have the disease following symptoms such as chest pain, a heart attack, or sudden cardiac arrest. This fact highlights the importance of preventative measures and tests that can accurately predict heart disease in the population prior to negative outcomes like myocardial infarctions (heart attacks) taking place.\n\nThe Centers for Disease Control and Prevention has identified high blood pressure, high blood cholesterol, and smoking as three key risk factors for heart disease. Roughly half of Americans have at least one of these three risk factors. The National Heart, Lung, and Blood Institute highlights a wider array of factors such as Age, Environment and Occupation, Family History and Genetics, Lifestyle Habits, Other Medical Conditions, Race or Ethnicity, and Sex for clinicians to use in diagnosing coronary heart disease. Diagnosis tends to be driven by an initial survey of these common risk factors followed by bloodwork and other tests.\n\nContent\nThe Behavioral Risk Factor Surveillance System (BRFSS) is a health-related telephone survey that is collected annually by the CDC. Each year, the survey collects responses from over 400,000 Americans on health-related risk behaviors, chronic health conditions, and the use of preventative services. It has been conducted every year since 1984. For this project, I downloaded a csv of the dataset available on Kaggle for the year 2015. This original dataset contains responses from 441,455 individuals and has 330 features. These features are either questions directly asked of participants, or calculated variables based on individual participant responses.\n\nThis dataset contains 253,680 survey responses from cleaned BRFSS 2015 to be used primarily for the binary classification of heart disease. Not that there is strong class imbalance in this dataset. 229,787 respondents do not have\/have not had heart disease while 23,893 have had heart disease. The question to be explored is:\n\n1. To what extend can survey responses from the BRFSS be used for predicting heart disease risk?\nand\n\n2. Can a subset of questions from the BRFSS be used for preventative health screening for diseases like heart disease?\nAcknowledgements\nIt it important to reiterate that I did not create this dataset, it is just a cleaned and consolidated dataset created from the BRFSS 2015 dataset already on Kaggle. That dataset can be found here and the notebook I used for the data cleaning can be found here.\n\nInspiration\nLet's build some predictive models for for heart disease.","7bcabf7a":"# Heart Disease Health Indicators Dataset\n## 253,680 survey responses from cleaned BRFSS 2015 - binary classification"}}