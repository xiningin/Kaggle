{"cell_type":{"5a6466e9":"code","4c0f48af":"code","fa10c68c":"code","b584299f":"code","4556ca79":"code","00ccdfa8":"code","8f0d6b59":"code","993aff4b":"code","7d928282":"code","f76182a1":"code","14eac6fa":"code","46b9c893":"code","6b62b18f":"code","fdfc1f0b":"code","4be0ad4f":"code","fbdc28b2":"code","6f64da3a":"code","cac1ccc6":"code","d54d6a10":"code","15803009":"code","b34c9078":"code","11964ab8":"code","9601f3ca":"code","4e5aa1a7":"code","bb611b0f":"code","09864e6b":"code","6183fbaf":"code","c0fceecb":"code","3f02b402":"code","20c17e16":"code","985da7a0":"code","3f2a1308":"code","bae96424":"markdown"},"source":{"5a6466e9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","4c0f48af":"# first 3 segments\ntrain = pd.read_csv('..\/input\/train.csv', nrows=450000)\n","fa10c68c":"pd.options.display.precision\n","b584299f":"pd.options.display.precision = 18\n","4556ca79":"train.head(150000) #.info()\n","00ccdfa8":"import seaborn as sns\nsns.set()\n","8f0d6b59":"# 1st segment\nax = sns.lineplot(x=np.arange(150000), y=train['acoustic_data'][:150000])\n","993aff4b":"# 2nd segment\nax = sns.lineplot(x=np.arange(150000), y=train['acoustic_data'][150000:300000])\n","7d928282":"# 3rd segment\nax = sns.lineplot(x=np.arange(150000), y=train['acoustic_data'][300000:450000])\n","f76182a1":"train.dtypes #.value_counts()\n","14eac6fa":"train.nunique() #.sort_values()\n","46b9c893":"train.acoustic_data.value_counts()\n","6b62b18f":"pd.options.display.max_rows\n","fdfc1f0b":"pd.options.display.max_rows = 250\n","4be0ad4f":"train.acoustic_data.value_counts().sort_index(ascending=False)\n","fbdc28b2":"ax = sns.lineplot(train.acoustic_data.value_counts().index, train.acoustic_data.value_counts())\n","6f64da3a":"ax = sns.distplot(train.acoustic_data, bins=20, kde=False)\n","cac1ccc6":"train.duplicated().sum()\n","d54d6a10":"train.isna().sum() #.sort_values(ascending=False)\n","15803009":"train.eq(0).sum() #.sort_values(ascending=False)\n","b34c9078":"train.lt(0).sum() #.sort_values(ascending=False)\n","11964ab8":"train.min() #.sort_values(ascending=False)\n","9601f3ca":"train.max() #.sort_values(ascending=False)\n","4e5aa1a7":"del train\n","bb611b0f":"# all targets\nrows = 150000\ntarget = pd.read_csv('..\/input\/train.csv', usecols=[1]).iloc[rows-1::rows, 0]\n","09864e6b":"ax = sns.lineplot(x=np.arange(target.size), y=target)\n","6183fbaf":"target.diff().gt(0).sum()\n","c0fceecb":"target.mean()\n","3f02b402":"target.min()\n","20c17e16":"target.max()\n","985da7a0":"ax = sns.distplot(target, bins=20, kde=False)\n","3f2a1308":"ax = sns.boxplot(target)\n","bae96424":"**when** the earthquake will take place  \npredict the time remaining (**time_to_failure**) from real-time seismic data (**acoustic_data**)  \nevaluated using the **mean absolute error**  \nthe time between the **last** row of the segment (**seg_id**) and the next laboratory earthquake"}}