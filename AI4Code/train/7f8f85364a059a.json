{"cell_type":{"b70234ef":"code","848cf4de":"code","a5f4871b":"code","12a45c2e":"code","a86a0a89":"code","59da9f43":"code","9bfad94b":"code","7337088e":"code","528ddc5a":"code","db6d4b12":"code","b37ca9b5":"code","b616773b":"code","cea5f98d":"code","c03122b2":"code","94e41c37":"code","db621bfb":"code","a116f472":"code","0c5aa6cb":"markdown","e42baef0":"markdown","d1c26a00":"markdown","ec4b49fd":"markdown","9dbbcb4f":"markdown","3d6b845d":"markdown","d60ad806":"markdown","7f7339bf":"markdown","d6a8983f":"markdown","951aa86b":"markdown","f30ab610":"markdown","d1effa86":"markdown"},"source":{"b70234ef":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","848cf4de":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib as mpl\nmpl.rcParams['figure.figsize'] = (8,6)\nmpl.rcParams['axes.grid'] = False","a5f4871b":"df = pd.read_csv('\/kaggle\/input\/chess\/games.csv')","12a45c2e":"df.head(3)","a86a0a89":"df.describe()","59da9f43":"df.info()","9bfad94b":"sns.histplot(x='turns',data=df)","7337088e":"print(\"Mean :: \",df['turns'].mean())\nprint(\"Median :: \",df['turns'].median())","528ddc5a":"sns.countplot(x='victory_status',data=df,order=df['victory_status'].value_counts().index)","db6d4b12":"sns.countplot(x='winner',data=df,order=df['winner'].value_counts().index)","b37ca9b5":"sns.histplot(df['white_rating'], label='White Rating', color='skyblue', kde=True)\nsns.histplot(df['black_rating'], label='White Rating', color='red', kde=True)\nplt.legend()\nplt.show()","b616773b":"print(\"White Rating Mean\",df['white_rating'].mean())\nprint(\"White Rating Median\",df['white_rating'].median())\n\nprint(\"Balck Rating Mean\",df['black_rating'].mean())\nprint(\"Black Rating Median\",df['black_rating'].mean())","cea5f98d":"df['opening_name'].value_counts()","c03122b2":"df['opening_name'].head(20)","94e41c37":"df['opening_name'].map(lambda x : x.split(\"|\")[0].split(\":\")[0]).value_counts().head(10)","db621bfb":"df[df['opening_name']=='Sicilian Defense']['opening_ply'].value_counts()","a116f472":"df[((df['opening_name'] == 'Sicilian Defense') & (df['opening_ply'] == 5))].head(3)","0c5aa6cb":"### *Here 'White' is the winner, As we all know there is advantage in chess the white player moves the first chance, So may be there is some relation between the first move and the winner.*","e42baef0":"### *Here we can see we have some prety cominations of Opening moves, Lets see How many of them we have in total*","d1c26a00":"### Hence some example values are:\n\n****Van't Kruijs Opening****\n\n****Sicilian Defense: Bowdler Attack****\n\n****Queen's Gambit Accepted: Normal Variation |  Traditional System****\n\n****Pirc Defense: Classical Variation |  Quiet System |  Chigorin Line****","ec4b49fd":"### We Dont have any Null Values","9dbbcb4f":"### *Here We can see the top 3 Opening moves are*\n\n#### *Sicilian Defense*        \n#### *French Defense*          \n#### *Queen's Pawn Game*","3d6b845d":"#### *opening_ply is an interesting field because it states to how many moves the studied opening line holds. For example, note that in the follow 5-ply Sicilian Defense games, the opening sequence is always e4 c5 Nf3 d6 d4.*","d60ad806":"### *White Rating and Black Rating both are normally distributed*","7f7339bf":"### Opening\n\n#### *A chess opening or simply an opening refers to the initial moves of a chess game. The term can refer to the initial moves by either side, White or Black, but an opening by Black may also be known as a defense. There are dozens of different openings, and hundreds of variants. The Oxford Companion to Chess lists 1,327 named openings and variants. These vary widely in character from quiet positional play to wild tactical play. In addition to referring to specific move sequences, the opening is the first phase of a chess game, the other phases being the middlegame and the endgame.*","d6a8983f":"### *From the above histogram we can say that turns in the game is normally distributed, but left skewed and rom the above plot we can also say that the mean of the turns lies between 60 to 62*","951aa86b":"### *Here we can observe that the sum of 'resign' is much more greater than other categories, May be the reason is to start a game with the active player instead of waiting for another player*","f30ab610":"## Increment code\n\n### *This variable controls the timer that the game is played under. In timed chess games (most online chess games are timed, for obvious reasons) each player is afforded a time basis (10 minutes, 15 minutes, etc.) awarded at the beginning of the game and an increment (15 seconds etc.) awarded every time a turn starts. If the player runs the clock out, they lose the game.*\n\n### *This field is populated by strings in the form 15+2. The first number, 15, is the time basis in minutes; the second number, 2, is the increment in seconds.*","d1effa86":"#### *ply is a term from game theory. A single ply is an identifiable unit of play which shifts the game's decision tree. In chess, this is every single move, that is, every time a piece is moved and the turn is passed to another player.*\n\n#### *Algebraic notation is a format for describing a sequence of chess moves. In algebraic notation the board is divided into a grid, of ascending letters and numbers. Every piece besides the pawn gets a letter. So for example e4 c5 Nf3 means \"white pawn to e4, then black pawn to c5, then white knight to f3. And so on.*"}}