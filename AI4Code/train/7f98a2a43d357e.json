{"cell_type":{"1af392e2":"code","c7f8aa70":"code","0c6af83c":"code","4fdd0b66":"code","d8603940":"code","f70e589f":"code","fc814005":"code","67ceee70":"code","a194bdfa":"code","c277cbbb":"code","fe964dda":"markdown","9ad756eb":"markdown"},"source":{"1af392e2":"# if plotly is not working then install chart-studio\n!pip install chart-studio","c7f8aa70":"from chart_studio import plotly\nimport plotly.graph_objs as gobj\nimport pandas as pd\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\ninit_notebook_mode(connected=True)","0c6af83c":"countries_data=pd.read_csv(\"..\/input\/covid-vaccination-all-countries-data\/vaccinations.csv\")","4fdd0b66":"# show frist some rows\ncountries_data.head()","d8603940":"# total countries_data in (row, col)\ncountries_data.shape","f70e589f":"# count value location wise and put marge data set.\nmarge=countries_data.groupby(['location']).sum()","fc814005":"marge.head()","67ceee70":"#initializing the data variable\ndata = dict(\n            type = 'choropleth',\n            locations = marge.index,\n            locationmode = 'country names',\n            autocolorscale = False,\n            colorscale = 'edge',\n            text= countries_data['iso_code'].unique(),\n            z=marge.total_vaccinations,\n            marker = dict(line = dict(color = 'rgb(255,255,255)',width =0.50)),\n            colorbar = {'title':'Total Vaccinations','len':1,'lenmode':'fraction'})\n\n#initializing the layout variable\nlayout = dict(geo = dict(\n    showframe = False,\n    showcoastlines = False,\n    projection_type= 'equirectangular'),\n              title_text = 'Total Vaccinations per countries in the world',\n              title_font = dict(size = 18, family = 'Balto',color = 'DarkBlue'),\n              title_x = 0.5\n             )\n# Initializing the Figure object by passing data and layout as arguments.\ncol_map = gobj.Figure(data = [data],layout = layout)\n\n#plotting the map\niplot(col_map)","a194bdfa":"#initializing the data variable\ndata = dict(\n            type = 'choropleth',\n            locations = marge.index,\n            locationmode = 'country names',\n            autocolorscale = False,\n            colorscale = 'burgyl',\n            text= countries_data['iso_code'].unique(),\n            z=marge.total_vaccinations_per_hundred,\n            marker = dict(line = dict(color = 'rgb(255,255,255)',width =0.50)),\n            colorbar = {'title':'total_vaccinations_per_hundred','len':1,'lenmode':'fraction'})\n\n#initializing the layout variable\nlayout = dict(geo = dict(\n    showframe = False,\n    showcoastlines = False,\n    projection_type= 'equirectangular'),\n              title_text = 'Total Vaccinations per countries in the world(total_vaccinations_per_hundred)',\n              title_font = dict(size = 18, family = 'Balto',color = 'DarkBlue'),\n              title_x = 0.5\n             )\n# Initializing the Figure object by passing data and layout as arguments.\ncol_map = gobj.Figure(data = [data],layout = layout)\n\n#plotting the map\niplot(col_map)","c277cbbb":"#initializing the data variable\ndata = dict(\n            type = 'choropleth',\n            locations = marge.index,\n            locationmode = 'country names',\n            autocolorscale = False,\n            colorscale = 'haline',\n            text= countries_data['iso_code'].unique(),\n            z=marge.people_fully_vaccinated,\n            marker = dict(line = dict(color = 'rgb(255,255,255)',width =0.50)),\n            colorbar = {'title':'people_fully_vaccinated','len':1,'lenmode':'fraction'})\n\n#initializing the layout variable\nlayout = dict(geo = dict(\n    showframe = False,\n    showcoastlines = False,\n    projection_type= 'equirectangular'),\n              title_text = 'Total Vaccinations per countries in the world(people_fully_vaccinated)',\n              title_font = dict(size = 18, family = 'Balto',color = 'DarkBlue'),\n              title_x = 0.5\n             )\n# Initializing the Figure object by passing data and layout as arguments.\ncol_map = gobj.Figure(data = [data],layout = layout)\n\n#plotting the map\niplot(col_map)","fe964dda":"# load data","9ad756eb":"# Import related libraries"}}