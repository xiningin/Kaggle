{"cell_type":{"88b999ea":"code","1464c97e":"code","0c214b8d":"code","b8a6bfbd":"markdown","f8946f3b":"markdown","a4acb2a5":"markdown"},"source":{"88b999ea":"import pandas as pd\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly","1464c97e":"def create_animation(w,p):\n    d_f = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week'+ str(w) +'.csv')\n    dd=d_f[(d_f.playId==p)]\n    times = dd.time.unique()\n    time_slice = times[0:500:5]\n    df = dd[dd.time.isin(time_slice)]\n                     \n    colorsIdx = {'home': 'red', 'away': 'blue', 'football': 'orange'}\n    fig = px.scatter(df, x='x', y='y', color='team', text='jerseyNumber', animation_frame='time', \n                     color_discrete_map=colorsIdx,\n                     range_x=[-10, 110],range_y=[-10, 53.3],\n                     hover_data=['displayName', 'position', 's', 'a', 'dis', 'o', 'playDirection']\n                    )\n    fig.update_traces(marker_size=20)\n    \n    fig.update_layout(paper_bgcolor='#29a500', plot_bgcolor='#29a500', font_color='white',\n        width = 800,\n        height = 600,\n        title = \"\",\n        \n        xaxis = dict(\n        nticks = 10,\n        title = \"\",\n        visible=False\n        ),\n        \n        yaxis = dict(\n        scaleanchor = \"x\",\n        title = \"Temp\",\n        visible=False\n        ),\n        showlegend= True,\n  \n        annotations=[\n       dict(\n            x=-5,\n            y=12,\n            xref=\"x\",\n            yref=\"y\",\n            text=\"HOME ENDZONE\",\n            font=dict(size=16,color=\"#e9ece7\"),\n            align='center',\n            showarrow=False,\n            yanchor='bottom',\n            textangle=-90\n        ),\n        dict(\n            x=105,\n            y=10,\n            xref=\"x\",\n            yref=\"y\",\n            text=\"VISITOR ENDZONE\",\n            font=dict(size=16,color=\"#e9ece7\"),\n            align='center',\n            showarrow=False,\n            yanchor='bottom',\n            textangle=90\n        )]  \n        ,\n        legend=dict(\n        traceorder=\"normal\",\n        font=dict(family=\"sans-serif\",size=12),\n        title = \"\",\n        orientation=\"h\",\n        yanchor=\"bottom\",\n        y=1.00,\n        xanchor=\"center\",\n        x=0.5\n        ),\n    )\n    ####################################################\n        \n    fig.add_shape(type=\"rect\", x0=-10, x1=0,  y0=0, y1=53.3,line=dict(color=\"#c8ddc0\",width=3),fillcolor=\"#217b00\" ,layer=\"below\")\n    fig.add_shape(type=\"rect\", x0=100, x1=110, y0=0, y1=53.3,line=dict(color=\"#c8ddc0\",width=3),fillcolor=\"#217b00\" ,layer=\"below\")\n    for x in range(0, 100, 10):\n        fig.add_shape(type=\"rect\", x0=x,   x1=x+10, y0=0, y1=53.3,line=dict(color=\"#c8ddc0\",width=3),fillcolor=\"#29a500\" ,layer=\"below\")\n    for x in range(0, 100, 1):\n        fig.add_shape(type=\"line\",x0=x, y0=1, x1=x, y1=2,line=dict(color=\"#c8ddc0\",width=2),layer=\"below\")\n    for x in range(0, 100, 1):\n        fig.add_shape(type=\"line\",x0=x, y0=51.3, x1=x, y1=52.3,line=dict(color=\"#c8ddc0\",width=2),layer=\"below\")\n    \n    for x in range(0, 100, 1):\n        fig.add_shape(type=\"line\",x0=x, y0=20.0, x1=x, y1=21,line=dict(color=\"#c8ddc0\",width=2),layer=\"below\")\n    for x in range(0, 100, 1):\n        fig.add_shape(type=\"line\",x0=x, y0=32.3, x1=x, y1=33.3,line=dict(color=\"#c8ddc0\",width=2),layer=\"below\")\n    \n    \n    fig.add_trace(go.Scatter(\n    x=[2,10,20,30,40,50,60,70,80,90,98], y=[5,5,5,5,5,5,5,5,5,5,5],\n    text=[\"G\",\"1 0\",\"2 0\",\"3 0\",\"4 0\",\"5 0\",\"4 0\",\"3 0\",\"2 0\",\"1 0\",\"G\"],\n    mode=\"text\",\n    textfont=dict(size=20,family=\"Arail\"),\n    showlegend=False,\n    ))\n    \n    fig.add_trace(go.Scatter(\n    x=[2,10,20,30,40,50,60,70,80,90,98], y=[48.3,48.3,48.3,48.3,48.3,48.3,48.3,48.3,48.3,48.3,48.3],\n    text=[\"G\",\"1 0\",\"2 0\",\"3 0\",\"4 0\",\"5 0\",\"4 0\",\"3 0\",\"2 0\",\"1 0\",\"G\"],\n    mode=\"text\",\n    textfont=dict(size=20,family=\"Arail\"),\n    showlegend=False,\n    ))\n    \n    return fig","0c214b8d":" #from GameId=2018111900\nweekId=11\nplayId=5577 \n\nfig= create_animation(weekId,playId) \nfig.show()","b8a6bfbd":"# NFL Big Data Bowl 2021: Animating Players","f8946f3b":"### Please if this kernel is useful, <font color='red'>please upvote !!<\/font>","a4acb2a5":"![2020_SIMULATION_FEATURE.JPG.jpg](attachment:2020_SIMULATION_FEATURE.JPG.jpg)"}}