{"cell_type":{"ee78c19d":"code","7bbd0525":"code","9c913e59":"code","89cf81f0":"code","86db6499":"code","4894b3d6":"code","3f362452":"code","96af65b2":"code","a3ddfe8c":"code","5949b5fa":"code","0297f193":"code","231fbe6e":"code","ae38e1cb":"code","d00fb45c":"code","ce9c6bd5":"code","6e98c909":"code","cc595d36":"code","5fac5740":"code","144028da":"markdown","2c3527d7":"markdown","78fbed6e":"markdown","f02a0b8f":"markdown","0a645d31":"markdown","fcbb49f3":"markdown","927a240d":"markdown","2bae975d":"markdown","b0fd3664":"markdown","27bd4909":"markdown","9d92d7d1":"markdown","c0d46620":"markdown","7aba64c9":"markdown","0698f8ae":"markdown","481b8e4d":"markdown","5a2d1110":"markdown","b1e3c3f5":"markdown"},"source":{"ee78c19d":"%matplotlib inline\nimport matplotlib.pyplot as plt\n# import networkx as nx\n# import ndlib.models.epidemics as ep\nimport os\nimport pandas as pd\nimport numpy as np\nfrom scipy.integrate import odeint\nfrom scipy.optimize import fsolve\nfrom scipy.integrate import simps\nfrom numpy import trapz\nplt.style.use('ggplot')","7bbd0525":"## refer to table 1, Hubei\nr_0_theory = 6.2\nr_0_eff  = 3.28\n\n## T_i is the time between infection and quanrantine\nT_i_theory = 8\nalpha = r_0_theory \/ T_i_theory\n\n## \nbeta = alpha\/r_0_theory\nprint('alpha:', alpha, 'beta:', beta)\n","9c913e59":"# Q and P are from table 1\nQ= 0.47\nP = 0.66\ndef get_kapp(k):\n    kappa_0 = k[0]\n    kappa = k[1]\n    \n    F = np.empty((2))\n    F[0] = (kappa_0+ kappa)\/(beta+kappa_0 + kappa) - Q\n    F[1] = kappa_0\/(kappa+kappa_0) -P\n    \n    return F\n\n\nkappaGuess = np.array([1,1])\n(kappa_0, kappa) = fsolve(get_kapp,kappaGuess)\nprint('kappa_0: ',kappa_0, 'kappa: ',kappa)","89cf81f0":"# solve the system dy\/dt = f(y, t)\ndef f(y, t):\n    S = y[0]\n    I = y[1]\n    X = y[2]\n     # the model equations (see Munz et al. 2009)\n    f0 = -alpha* S* I - kappa_0* S\n    f1 = alpha* S* I - beta* I  - kappa_0* I - kappa*I \n    f2 = (kappa + kappa_0)* I \n    return [f0, f1, f2]","86db6499":"## import data\ntrain = pd.read_csv('..\/input\/covid19-global-forecasting-week-1\/train.csv')\ntrain['Date'] = pd.to_datetime(train.Date)","4894b3d6":"train[(train['Country\/Region'] == 'China')&(train['Province\/State']=='Hubei')].head(10)","3f362452":"hubei_df = train[(train['Country\/Region'] == 'China')&(train['Province\/State']=='Hubei')]","96af65b2":"dti = pd.date_range('2020-01-21', '2020-03-10', freq='D')\nlen(dti)","a3ddfe8c":"## according to the paper page 6\n# initial conditions\n# use the number of cases 444\nX0 = 444\/(57.1*10**6)\nI0 = 2.55*X0\nS0 = 1-I0-X0\n# initial death population\ny0 = [S0, I0, X0]     # initial condition vector\nt  = np.linspace(0, 50., 50)  # time grid\n#print(y0)\n# solve the DEs\nsoln = odeint(f, y0, t)\nS = soln[:, 0]\nI = soln[:, 1]\nX = soln[:, 2]","5949b5fa":"# plot results\nplt.figure(figsize=(15, 10))\nplt.title('Hubei Confirmed Cases vs Model')\n#plt.plot(t, S, label='Living')\nplt.plot(dti, I*57.1*10**6\/(4.44\/2.55), label='Infected (I)')\nplt.plot(dti, X*57.1*10**6\/(4.44\/2.55), label='Quanrantined (X)')\nplt.plot(hubei_df.Date, hubei_df.ConfirmedCases, 'o')\nplt.vlines(x=pd.datetime(2020,2,7), ymin=0, ymax=70000, linestyles='dashed', color='grey')\nplt.text(x=pd.datetime(2020,2,2), text='02\/07\/2020', y=30000,s=10)\nplt.xlabel('Days from outbreak')\nplt.ylabel('Population')\nplt.legend(loc=0)\nplt.xticks(rotation=90)\nplt.show()","0297f193":"len(pd.date_range('2020-01-21', '2020-02-07'))","231fbe6e":"total_number_infection = (I*57.1*10**6\/(4.44\/2.55))[:18]","ae38e1cb":"total_number_confirm = hubei_df.ConfirmedCases[:18]","d00fb45c":"under_report = total_number_infection - total_number_confirm","ce9c6bd5":"under_report_pcnt = under_report\/total_number_infection*100","6e98c909":"under_report.sum()\/total_number_infection.sum()","cc595d36":"plt.figure(figsize=(10,5))\nplt.title('Confirmed and Modeled Infection')\nplt.bar(hubei_df.Date[:18], total_number_infection, alpha=.8, color='grey', label='model_infection')\nplt.bar(hubei_df.Date[:18], total_number_confirm, alpha=.5, color='red', label='confirmed')\nplt.xticks(rotation=90)\nplt.legend()\nplt.show()","5fac5740":"plt.figure(figsize=(10,5))\nplt.title('% of under-reported cases with respect to the toatl number of modeled infection cases')\nplt.bar(hubei_df.Date[:18], under_report_pcnt)\nplt.xticks(rotation=90)\nplt.show()","144028da":"To initialize the equations, we followed the way of initialization in the paper. This includes finding the number of confirmed cases at the begining to use it to calculate $X(t_{0}), I(t_{0}) and S(t_{0})$","2c3527d7":"Now we can plot the result as below along with the overlaying of **confirmed cases from the dataset**. We also multiply the number of cases to the factor of population to match the real world data. ","78fbed6e":"Accoding to this calculation, from Jan 21 to Feb 7, there are about 23% cases were unreported.","f02a0b8f":"<a id='tag2'><\/a>\n## Ordinary Differential Equation","0a645d31":"## Let's not forget these are people, not just numbers...","fcbb49f3":"As demonstrated in the paper: *The model predicts the expected initial growth\nof case numbers in Hubei Province followed by an algebraic\ngrowth episode for \u2248 11 days until the saturation sets in, a consequence of the decay of unidentified infected individuals after a peak time around Feb. 7th (see Fig. 2A).*","927a240d":"The system of differential equations are as follows (see page 3 of the paper):\n\n$$\\partial_{t}S = -\\alpha SI - \\kappa_{0}S$$\n$$\\partial_{t}I = \\alpha SI - \\beta I -\\kappa_{0}I - \\kappa I$$\n$$\\partial_{t}X =(\\kappa + \\kappa_{0})I$$","2bae975d":"Apart from that, the author used **free R_0 and effective R_0**, to differentiate the efficiency of transmission under different environments ($R_{0}$ can change depending on the environment)","b0fd3664":"<a id='tag3'><\/a>\n## How many cases were unreported?","27bd4909":"Then here we use the equations above ","9d92d7d1":"After reading this [paper](https:\/\/arxiv.org\/pdf\/2002.07572.pdf) by *Benjamin F. Maier*, I wanted to see if I can replicate the results and validate with real data. Furthermore, I want to see how many cases were unreported. Please note that there are multiple reasons to explain the unreported cases, including:\n\n* Unable to identify\/ diagnose the patients given the untypical symptoms;\n* Unable to effectively sample the patients;\n* PCR (polymerease chain reaction) results were false negative;\n* Low test capacity, etc\n\nThis analysis is not intended to understand why there were unreported cases but rather to quantify how many cases were unidentified. I also cannot guarantee that I've understood the paper to 100%, so please let me know your thoughts!","c0d46620":"# Table of Contents\n\n#### [Reference Papar and Analysis](#tag1)\n\n#### [Ordinary Differential Equation](#tag2)\n\n#### [How Many were Unreported?](#tag3)\n\n#### More to come...","7aba64c9":"Here I copied the major equation from the original paper. Instead of SIR (susceptible, infectious, and recovered) model, the author used a **SIR-X** model, **X is the number of quarantined people**. To quantify the degree of public health measures to control the disease, there are several variables introduced:\n\n\n* $\\kappa_{0}$: containment rate, when it is zero, it corresponds to a scenario in which general population is unaffected by policies or does not commit behavior changes\n\n* $\\kappa$: isolation rate, which indicates the rate of infected being removed from the population, when it is zero, it corresponds to a scenario in which symptomatic infecteds are not isolated specifically.\n\n* $\\alpha$: infection rate\n\n* $\\beta$: recovery rate","0698f8ae":"<a id='tag1'><\/a>\n## Reference Paper and Analysis","481b8e4d":"Befor quanratine measures became effective, the early infected cases were unreported. We can calculate the difference between the infection curve and confirmed cases in the same time window.","5a2d1110":"Now we will use a system of equations to solve $\\kappa$ and $\\kappa_{0}$","b1e3c3f5":"Before we tried to use ODE to solve the system, we need to determine a few parameters. We first chose to model based on paramters listed on *Table 1* of the paper."}}