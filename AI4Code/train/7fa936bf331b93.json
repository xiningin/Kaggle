{"cell_type":{"5c05e260":"code","e9badba5":"code","59798fc6":"code","f02ed833":"code","10116ba8":"code","8191f543":"code","8986ce23":"code","b2b271ef":"code","0f1ccd71":"code","4481a905":"code","c29399fa":"code","c244251b":"code","939ac84e":"code","8f8d992b":"code","65b5fca4":"code","398539ac":"code","b43de327":"code","8f1c07aa":"code","589a557b":"code","da5ae282":"code","87558593":"code","92846d82":"code","0cd0af79":"markdown","36854a10":"markdown","ab140a07":"markdown","04cc5867":"markdown","ab5dce03":"markdown"},"source":{"5c05e260":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","e9badba5":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set_style(\"whitegrid\")","59798fc6":"random_state = 42\nnp.random.seed(random_state)\ndf_train = pd.read_csv('..\/input\/train.csv')\ndf_test = pd.read_csv('..\/input\/test.csv')\nsample_sub = pd.read_csv(\"..\/input\/sample_submission.csv\")","f02ed833":"df_train.shape, df_test.shape, sample_sub.shape","10116ba8":"display(df_train.head())\ndisplay(df_test.head())\ndisplay(sample_sub.head())","8191f543":"features = [col for col in df_train.columns if col not in [\"id\", \"target\"]]","8986ce23":"plt.figure(figsize=[16,9])\nsns.heatmap(df_train[features].corr())","b2b271ef":"plt.figure(figsize=[16,9])\nsns.heatmap(df_test[features].corr())","0f1ccd71":"sns.countplot(df_train[\"target\"])","4481a905":"plt.figure(figsize=[16,9])\ndf_train.boxplot()","c29399fa":"plt.figure(figsize=[16,9])\ndf_test.boxplot()","c244251b":"df_train.drop_duplicates().shape","939ac84e":"def plot_feature_scatter(df1, df2, features):\n    i = 0\n    plt.figure()\n    fig, ax = plt.subplots(4,4,figsize=(14,14))\n\n    for feature in features:\n        i += 1\n        plt.subplot(4,4,i)\n        plt.scatter(df1[feature], df2[feature], marker='+')\n        plt.xlabel(feature, fontsize=9)\n    plt.show();","8f8d992b":"c = 0\nfor j in range(16, len(features)+1, 16):\n    plot_feature_scatter(df_train.iloc[:len(df_test)], df_test, features[c:j])\n    c += 16","65b5fca4":"df_train[\"wheezy-copper-turtle-magic\"].min(), df_train[\"wheezy-copper-turtle-magic\"].max()","398539ac":"df_train[\"wheezy-copper-turtle-magic\"].nunique(), \\\ndf_test[\"wheezy-copper-turtle-magic\"].nunique()","b43de327":"plt.figure(figsize=[9,5])\nplt.subplot(1,2,1)\ndf_train.groupby(\"wheezy-copper-turtle-magic\").size().sort_values()[::-1].hist(bins=20)\nplt.title(\"train\")\n\nplt.subplot(1,2,2)\ndf_test.groupby(\"wheezy-copper-turtle-magic\").size().sort_values()[::-1].hist(bins=20)\nplt.title(\"test\")\n\nplt.show()","8f1c07aa":"def plot_feature_boxplot(df, features):\n    i = 0\n    plt.figure()\n    fig, ax = plt.subplots(4,4,figsize=(14,14))\n\n    for feature in features:\n        i += 1\n        plt.subplot(4,4,i)\n        sns.boxplot(df[feature])\n        plt.xlabel(feature, fontsize=9)\n    plt.show();","589a557b":"c = 0\nfor j in range(16, len(features)+1, 16):\n    plot_feature_boxplot(df_train, features[c:j])\n    c += 16","da5ae282":"def plot_feature_distplot(df, features):\n    i = 0\n    plt.figure()\n    fig, ax = plt.subplots(4,4,figsize=(14,14))\n\n    for feature in features:\n        i += 1\n        plt.subplot(4,4,i)\n        sns.distplot(df[feature])\n        plt.xlabel(feature, fontsize=9)\n    plt.show();","87558593":"c = 0\nfor j in range(16, len(features)+1, 16):\n    plot_feature_distplot(df_train, features[c:j])\n    c += 16","92846d82":"c = 0\nfor j in range(16, len(features)+1, 16):\n    plot_feature_distplot(df_test, features[c:j])\n    c += 16","0cd0af79":"# Boxplot","36854a10":"# Scatterplot","ab140a07":"# Distplot","04cc5867":"# \"wheezy-copper-turtle-magic\" feature have only 512 unique values","ab5dce03":"# Watch correlation"}}