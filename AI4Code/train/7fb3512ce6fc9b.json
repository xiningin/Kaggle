{"cell_type":{"8fbd0679":"code","024d8275":"code","02a01980":"code","ea958700":"code","ffb0211e":"code","c48272fe":"code","ac56f61d":"code","fd2a1ec8":"code","67d857da":"code","b64ad55a":"code","263b25a1":"code","b4df60a6":"code","f33b10a0":"code","55e418cb":"code","9f416160":"code","f934bb8d":"code","f0343f1a":"code","86472a04":"code","2c37c63e":"code","443d37ff":"code","c827fef1":"code","1130bd8b":"code","9d7446a3":"code","37a58ca5":"markdown","3a3024d9":"markdown","b1651e4f":"markdown","51c77f33":"markdown","eaae802c":"markdown"},"source":{"8fbd0679":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","024d8275":"from keras.models import Sequential\nfrom keras.layers import Conv2D,MaxPooling2D,Activation,Dropout,Dense,Flatten\nfrom keras.preprocessing.image import ImageDataGenerator,img_to_array,load_img,array_to_img\nimport matplotlib.pyplot as plt ","02a01980":"train_data = pd.read_csv('..\/input\/sign-language-mnist\/sign_mnist_train\/sign_mnist_train.csv')\ntest_data = pd.read_csv('..\/input\/sign-language-mnist\/sign_mnist_test\/sign_mnist_test.csv')","ea958700":"y_train = train_data['label']\nX_train = train_data.drop('label',axis=1)\nX_train.head()","ffb0211e":"y_test = test_data['label']\nX_test = test_data.drop('label',axis=1)\nX_test.head()","c48272fe":"X_train = np.array(X_train).reshape((27455,28,28,1))","ac56f61d":"X_test = np.array(X_test).reshape((7172,28,28,1))","fd2a1ec8":"plt.imshow(X_test[0])","67d857da":"y_test[0]","b64ad55a":"X_train.shape","263b25a1":"X_train[0].shape","b4df60a6":"numOfClass = len(pd.DataFrame(y_train)['label'].unique())\nnumOfClass","f33b10a0":"# CNN Model\n\nmodel = Sequential()\n\nmodel.add(Conv2D(32,(3,3),input_shape=X_train[0].shape))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D())\n\nmodel.add(Conv2D(32,(3,3)))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D())\n\nmodel.add(Conv2D(64,(3,3)))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D())\n\nmodel.add(Flatten())\nmodel.add(Dense(1024)) \nmodel.add(Activation('relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(25))\nmodel.add(Activation('softmax'))","55e418cb":"model.compile(loss='sparse_categorical_crossentropy',\n             optimizer='rmsprop',\n             metrics=['accuracy'])\nprint('ended')","9f416160":"batch_size =32\n\ntrain_datagen = ImageDataGenerator(rescale=1.\/255,\n                                  shear_range = 0.1,\n                                  zoom_range=0.3)\ntest_datagen = ImageDataGenerator(rescale=1.\/255)","f934bb8d":"train_generator = train_datagen.flow(X_train,y_train,\n                                     batch_size=batch_size)\ntest_generator = test_datagen.flow(X_test,y_test)","f0343f1a":"X_train = np.reshape(X_train, (X_train.shape[0],X_train.shape[1],X_train.shape[2],1))\nX_test = np.reshape(X_test, (X_test.shape[0],X_test.shape[1],X_test.shape[2],1))","86472a04":"y_test.shape","2c37c63e":"hist=model.fit_generator(train_generator,\n                   steps_per_epoch=27455\/\/batch_size,\n                   epochs=60,\n                   validation_data=test_generator)","443d37ff":"print(hist.history.keys())\nplt.plot(hist.history['loss'],label='Train Loss')\nplt.plot(hist.history['val_loss'],label='Validation Loss')\nplt.legend()\nplt.figure()\nplt.plot(hist.history['accuracy'],label='Train Accuracy')\nplt.plot(hist.history['val_accuracy'],label='Validation Accuracy')\nplt.legend()\nplt.show()","c827fef1":"plt.imshow(X_train[2])","1130bd8b":"y_train[2]","9d7446a3":"predict = model.predict(X_train[2].reshape((1,28,28,1)))\nprint(\"Model's Prediction is : \"+ str(np.argmax(predict.astype('int'))))","37a58ca5":"# 5. Model Evaluation","3a3024d9":"# 2. Loading Dataset","b1651e4f":"# 3.Building CNN Model","51c77f33":"# 1. Importing Libraries","eaae802c":"# 4. Training The Model"}}