{"cell_type":{"7264976a":"code","e03d4ecf":"code","db47f093":"code","d8d411f9":"code","850a77ac":"code","4ad008c4":"code","84632355":"code","3c300b26":"code","cba69099":"code","5294e11c":"code","25b1c741":"code","b8796c32":"code","1a5a439f":"code","63d98df1":"code","978f9f82":"code","d4f57ebc":"code","85271bd4":"code","e08ff1ec":"code","736c3ed2":"code","a9f90780":"code","69002778":"code","e7cdaec0":"code","8f4ae8bd":"code","2478c248":"code","a0ce9d19":"code","ec41460b":"code","6b5440bf":"markdown"},"source":{"7264976a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\nfrom sklearn.linear_model import Lasso","e03d4ecf":"df = pd.read_csv(\"..\/input\/into-the-future\/train.csv\")\ndf.head(10)","db47f093":"df.shape","d8d411f9":"df.isnull().sum()","850a77ac":"df.tail()","4ad008c4":"test = pd.read_csv(\"..\/input\/into-the-future\/test.csv\")\ntest.head()","84632355":"ids=test[\"id\"]\ntest = test.drop(\"id\", axis = 1)","3c300b26":"df = df.drop([\"id\"], axis = 1)","cba69099":"df.isnull().sum()","5294e11c":"cum_sec = []\nx = 0\nfor j in range(0,len(df[\"time\"])):\n    cum_sec.append(x)\n    x+= 10\n#cum_sec","25b1c741":"df[\"time\"] =  pd.to_datetime(df[\"time\"])\ndf['second'] = df['time'].dt.second\n#df['minute'] = df['time'].dt.minute\ndf.head()","b8796c32":"df[\"cumulative_second\"] = pd.Series(cum_sec)\ndf = df.drop([\"time\"], axis = 1)\ndf.head()","1a5a439f":"plt.plot(df[\"cumulative_second\"], df[\"feature_1\"])\nplt.show()","63d98df1":"plt.plot(df[\"cumulative_second\"], df[\"feature_2\"])\nplt.show()","978f9f82":"plt.plot(df[\"feature_1\"], df[\"feature_2\"])\nplt.show()","d4f57ebc":"Y = df[\"feature_2\"]\nX = df.drop(\"feature_2\", axis = 1)\nX.head()","85271bd4":"cum_sec = []\nx = 0\nfor j in range(0,len(test[\"time\"])):\n    cum_sec.append(x)\n    x+= 10","e08ff1ec":"test[\"time\"] =  pd.to_datetime(test[\"time\"])\ntest['second'] = test['time'].dt.second\n#test['minute'] = test['time'].dt.minute","736c3ed2":"test[\"cumulative_second\"] = pd.Series(cum_sec)\ntest = test.drop([\"time\"], axis = 1)\ntest.head()","a9f90780":"test.tail()","69002778":"X.isnull().sum()","e7cdaec0":"X.tail()","8f4ae8bd":"alpha = 0.1\nfrom sklearn.linear_model import Ridge\nridgereg = Ridge(alpha=alpha,normalize=True)\nridgereg.fit(X,Y)\ny_pred = ridgereg.predict(test)","2478c248":"len(y_pred)","a0ce9d19":"output=pd.DataFrame({\"id\": ids, \"feature_2\":y_pred})\noutput.head()","ec41460b":"output.to_csv(\"\/kaggle\/working\/solution.csv\", index=False)","6b5440bf":"\n\nIf you like this notebook, then do **Upvote** as it will keep me motivated in creating such kernels ahead. **Thanks!!**\n"}}