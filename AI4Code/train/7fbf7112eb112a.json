{"cell_type":{"e3fd354a":"code","5a5299ff":"code","f35eeb5f":"code","669b20a9":"code","8bd95696":"code","da51a69c":"code","6df37e92":"code","aa35ea3c":"code","1400ee67":"code","098e864e":"code","c5b84832":"code","1d0d53c6":"code","9d062a9d":"code","660a0b27":"code","5bf7a988":"code","43cbf364":"code","e7c68e57":"code","7d88e46f":"code","93dad82d":"code","df16a1d3":"code","fdd9dd08":"code","4f212bd6":"code","7bbe8410":"code","c8f4df97":"code","784eac82":"code","bbe36237":"code","06ae2049":"code","0e0672a9":"code","ae94dd74":"code","c1eabb32":"code","b174f375":"code","3ed62371":"code","1ebb1d94":"code","17eb3b58":"code","51f75d3b":"code","68ad4ad6":"code","1741438c":"code","3375774b":"code","ea6a65b1":"code","99a4a8ba":"code","17e595e2":"code","a9c746db":"code","42cb9463":"code","6632e7b5":"code","d10121a4":"code","ff6251c1":"code","2dd3099d":"code","a6ca1a32":"code","7364802e":"code","f9ed0a28":"code","ef54ca09":"code","9aba6fc8":"code","519aa133":"code","0b4fae4d":"code","3a1bd977":"code","8be178ed":"code","8e3b7217":"markdown","539b384e":"markdown","7672399c":"markdown","414139e8":"markdown","015ae175":"markdown","7ec9e64d":"markdown","36e49001":"markdown","6e4305a2":"markdown","ac905f6d":"markdown","fd3a9910":"markdown","bf80771f":"markdown","fa734143":"markdown","aeb8f28c":"markdown","62618713":"markdown","387e0cef":"markdown","49a064fa":"markdown","88d7ea1f":"markdown","13aff9b3":"markdown","035e3e05":"markdown","c7257994":"markdown","5778d2ec":"markdown","274c3749":"markdown"},"source":{"e3fd354a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5a5299ff":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","f35eeb5f":"df = pd.read_csv('\/kaggle\/input\/weight-height\/weight-height.csv')\ndf.head()","669b20a9":"df.shape","8bd95696":"df.dtypes","da51a69c":"df.count()","6df37e92":"df['Gender'].value_counts()","aa35ea3c":"df.isnull().sum()","1400ee67":"df.describe()","098e864e":"a = pd.DataFrame(df['Weight'])\nb = pd.DataFrame(df['Height'])","c5b84832":"import statsmodels.api as sms\nmodel = sms.OLS(b,a).fit()\nmodel.summary()","1d0d53c6":"sns.heatmap(df.corr(), annot=True, cmap='viridis')","9d062a9d":"sns.countplot(df.Gender)","660a0b27":"plt.figure(figsize=(7,6))\nsns.boxplot(x='Gender', y='Height', data=df)","5bf7a988":"plt.figure(figsize=(7,6))\nsns.boxplot(x='Gender', y='Weight', data=df)","43cbf364":"sns.pairplot(df, hue='Gender', size=4)","e7c68e57":"plt.figure(figsize=(5, 4))\nsns.distplot(df['Height']);\nplt.axvline(df['Height'].mean(),color='blue',linewidth=2)\n\nplt.figure(figsize=(5, 4))\nsns.distplot(df['Weight']);\nplt.axvline(df['Weight'].mean(),color='red',linewidth=2)","7d88e46f":"plt.figure(figsize=(7,6))\nmales['Height'].plot(kind='hist',bins=50, alpha=0.3,color='blue')\nfemales['Height'].plot(kind='hist',bins=50, alpha=0.3,color='red')\nplt.title('Height distribution')\nplt.legend(['Males','Females'])\nplt.xlabel('Height in')\nplt.axvline(males['Height'].mean(),color='blue',linewidth=2)\nplt.axvline(females['Height'].mean(),color='red',linewidth=2);","93dad82d":"plt.figure(figsize=(7,6))\ndf.Height.plot(kind=\"kde\", title='Univariate: Height KDE', color='c');","df16a1d3":"plt.figure(figsize=(7,6))\ndf.Weight.plot(kind=\"kde\", title='Univariate: Height KDE', color='c');","fdd9dd08":"sns.boxplot(df.Weight)","4f212bd6":"sns.boxplot(df.Height)","7bbe8410":"df.plot(figsize=(8,7), kind='scatter',x='Height',y='Weight');","c8f4df97":"males=df[df['Gender']=='Male']\nfemales=df[df['Gender']=='Female']\nfig,ax = plt.subplots()\nmales.plot(figsize=(9,8), kind='scatter', x='Height', y='Weight', ax=ax, color='blue',alpha=0.3, title='Male and Female Distribution')\nfemales.plot(figsize=(9,8), kind='scatter', x='Height', y='Weight', ax=ax, color='red', alpha=0.3, title='Male and Female Populations');","784eac82":"Q1 = df.Height.quantile(0.25)\nQ3 = df.Height.quantile(0.75)\nQ1, Q3","bbe36237":"IQR = Q3 - Q1\nIQR","06ae2049":"lower_limit = Q1 - 1.5*IQR\nupper_limit = Q3 + 1.5*IQR\nlower_limit, upper_limit","0e0672a9":"df[(df.Height<lower_limit)|(df.Height>upper_limit)]","ae94dd74":"df_no_outlier_height = df[(df.Height>lower_limit)&(df.Height<upper_limit)]\ndf_no_outlier_height","c1eabb32":"Q1 = df.Weight.quantile(0.25)\nQ3 = df.Weight.quantile(0.75)\nQ1, Q3","b174f375":"IQR = Q3 - Q1\nIQR","3ed62371":"lower_limit = Q1 - 1.5*IQR\nupper_limit = Q3 + 1.5*IQR\nlower_limit, upper_limit","1ebb1d94":"df[(df.Height<lower_limit)|(df.Height>upper_limit)]","17eb3b58":"df_no_outlier_Weight = df[(df.Height>lower_limit)&(df.Height<upper_limit)]\ndf_no_outlier_Weight","51f75d3b":"df[['Female','Male']] = pd.get_dummies(df['Gender'])\ndf.head()","68ad4ad6":"df.drop('Gender',axis=1,inplace=True)","1741438c":"df.head()","3375774b":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","ea6a65b1":"X = df.drop('Height',axis=1)\ny = df['Height']","99a4a8ba":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","17e595e2":"print(X_train.shape, X_test.shape, y_train.shape, y_test.shape)","a9c746db":"from sklearn.linear_model import LinearRegression\nLinReg = LinearRegression()\nLinReg.fit(X_train, y_train)","42cb9463":"y_pred = LinReg.predict(X_test)\ny_pred","6632e7b5":"y_test","d10121a4":"LinReg.score(X_test, y_test)","ff6251c1":"print(LinReg.coef_)\nprint(LinReg.intercept_)","2dd3099d":"from sklearn.metrics import r2_score,mean_squared_error\nr2_score(y_test,y_pred)","a6ca1a32":"np.sqrt(mean_squared_error(y_test,y_pred))","7364802e":"plt.figure(figsize=(7,6))\nsns.scatterplot(X_train.Weight, y_train)\nplt.plot(X_train.Weight, LinReg.predict(X_train), c='r')","f9ed0a28":"plt.figure(figsize=(7,6))\nsns.scatterplot(X_test.Weight, y_test,color='r')\nplt.plot(X_test.Weight,y_pred, c='b')","ef54ca09":"from sklearn.tree import DecisionTreeRegressor\nmodel = DecisionTreeRegressor()","9aba6fc8":"model.fit(X_train,y_train)","519aa133":"model.predict(X_test)","0b4fae4d":"model.score(X_test, y_test)","3a1bd977":"from sklearn.linear_model import LogisticRegression\nLog = LogisticRegression()","8be178ed":"Output = pd.DataFrame(X_test['Weight'], y_test)\nOutput","8e3b7217":"### Remove ouliers from Height column","539b384e":"<h3 style='color:purple'> 1. Detect outliers using IQR <\/h3>\n### Height","7672399c":"### c. Boxplot","414139e8":"### Linear Regression","015ae175":"<h2 style=\"color:blue\" align=\"left\"> 3. EDA(Exploratory Data Analysis) <\/h2>","7ec9e64d":"### Converting Categorical Variables to Numeric by using Pandas get_Dummies","36e49001":"- Observed from graph, compared to men womens are less height and weight.","6e4305a2":"### Remove ouliers from Height column","ac905f6d":"### Standard Scalar","fd3a9910":"### Weight","bf80771f":"<h2 style=\"color:green\" align=\"left\"> Outliers <\/h2>","fa734143":"### a. histogram","aeb8f28c":"### Train the model","62618713":"<h2 style=\"color:blue\" align=\"left\"> 2. Missing Values <\/h2>","387e0cef":"<h2 style=\"color:blue\" align=\"left\"> 1. Load Data <\/h2>","49a064fa":"- Here are the outliers","88d7ea1f":"<h2 style=\"color:green\" align=\"left\"> Univariate Analysis ---->  plotting only a single feature <\/h2>","13aff9b3":"### Decision Tree","035e3e05":"- From above graph observed, there is a linear relationship b\/n Height and Weight. As height increases weight also increases.","c7257994":"<h2 style=\"color:blue\" align=\"left\"> Data Preprocessing <\/h2>","5778d2ec":"\n<h2 style=\"color:green\" align=\"left\"> Bivariate Analysis ---->  plotting two variables <\/h2>\n\n###         a. Scatter plot","274c3749":"\n### b. kde plot (kernel distribution estimation)"}}