{"cell_type":{"3e094442":"code","93b352a6":"code","03403f10":"code","29e99b64":"code","97b8c81a":"code","e7329b9d":"code","96ab9573":"code","37837db1":"code","16c1f2ac":"code","99064613":"code","f06f84f6":"code","8f9a0528":"code","66e8a27d":"code","e3db7c52":"code","c556f940":"code","befb97db":"code","8bfcd27d":"code","9069b69e":"code","0476b43b":"code","be5181bd":"code","cc2ee7c5":"code","16f5eda1":"code","90323444":"code","4a52c27a":"code","02d0133b":"markdown","a7e5b7ac":"markdown","c1e17425":"markdown","11f7f661":"markdown","5c9694cd":"markdown","b682e016":"markdown","d31530b4":"markdown","d2e938a7":"markdown","8d540703":"markdown","8528ac8f":"markdown","ac64b1e0":"markdown","cb9e1a10":"markdown","c82966cc":"markdown","96497da6":"markdown","8170cd94":"markdown","6ddb59be":"markdown","e0a3e44d":"markdown","5d5510b0":"markdown","66797c2d":"markdown","17c19019":"markdown","ae0d5a13":"markdown","850018ff":"markdown","e8782a5a":"markdown"},"source":{"3e094442":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","93b352a6":"data = pd.read_csv(\"..\/input\/vehicle-dataset-from-cardekho\/car data.csv\")","03403f10":"data.head()","29e99b64":"data.isnull().sum()","97b8c81a":"data.describe","e7329b9d":"sns.relplot( y = 'Selling_Price', x = 'Kms_Driven',  data = data)","96ab9573":"sns.catplot(x='Owner', y ='Selling_Price', kind = 'violin',data= data)","37837db1":"sns.catplot(x='Transmission', y ='Selling_Price', kind = 'swarm',data= data)","16c1f2ac":"sns.catplot(x='Seller_Type', y ='Selling_Price', kind = 'swarm',data= data,hue = 'Fuel_Type')","99064613":"sns.catplot(x='Year', y ='Selling_Price', kind = 'swarm',data= data)","f06f84f6":"correlation = data.corr()","8f9a0528":"plt.subplots(figsize=(10,15))\nsns.heatmap(correlation, annot = True)","66e8a27d":"sns.jointplot(x = 'Present_Price', y ='Selling_Price', data=data, color = 'Green')","e3db7c52":"sns.pairplot(data = data)","c556f940":"dummy1 = pd.get_dummies(data.Fuel_Type)\ndummy2 = pd.get_dummies(data.Seller_Type)\ndummy3 = pd.get_dummies(data.Transmission)","befb97db":"merge = pd.concat([data,dummy1,dummy2,dummy3], axis = 'columns')","8bfcd27d":"final = merge.drop(['Car_Name','Fuel_Type','Seller_Type','Transmission','CNG','Individual','Automatic','Owner','Kms_Driven'], axis = 'columns')","9069b69e":"final\n","0476b43b":"X = final.drop(['Selling_Price'],axis = 'columns')","be5181bd":"y = final['Selling_Price']","cc2ee7c5":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20,random_state = 20)","16f5eda1":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()","90323444":"model.fit(X_train,y_train)","4a52c27a":"model.score(X_test,y_test)","02d0133b":"**The maximum car selling prices are between 2-10 lakhs for the cars owned by only 1 individual before. For the cars owned by 2 indiviudals, the price points are less and for the cars owned by 4 individuals is almost null. **","a7e5b7ac":"Graphically represents the numeric factors of all features amongst each other.","c1e17425":"**I have used Relplot which is taken from Seaborn. This analyzes the data in the form of scatter points.**","11f7f661":"This gives us a heatmap of the numeric features against each other. You can see from the plot that ->\n\n1. 'Selling_Price' and 'Year' has 0.24 correlation factor which means that as the cars that are recently bought fetches more selling price.\n2. 'Selling_Price' and 'Present_Price' has 0.88 correlation factor which is the highest among all factors and this is close to +1 which means that as the Present_Price increases, the 'Selling_Price' increases at almost the same sharp rate.\n3.  'Selling_Price' and 'kms_driven' have 0.029 correlation factor which is almost equal to 0 which shows the relationship between them can be dropped.\n4.  'Selling_Price' and 'Owner' have -.088 which is also almost equal to 0 which means there isn't much of a relationship between them.","5c9694cd":"This tells that whether any feature column has a 'Null Value'","b682e016":"**The accuracy is 0.92 for my model. If I change the random_state, the accuracy also changes. This is applicable for all models.**","d31530b4":"**The string values have to be changed to Numeric values to be included in the algorithm as string values cannot be regarded. This is achieved by creating dummy values for the features having String values.**","d2e938a7":"# Linear Regression\n","8d540703":"This shows a bar plot as well as scatter plot for both the values. The bar plot tells the maximum 'Selling_Price' is at what points and similarly for 'Present_Price'","8528ac8f":"The test size and train size is 20 to 80","ac64b1e0":"The new features are merged onto the original dataset","cb9e1a10":"**The petrol cars are the highest number, followed by Diesel cars and then comes CNG cars fetching the lowest selling price point**","c82966cc":"The dependence of numeric features on each other is determined by Correlation","96497da6":"# Data Assessment\n","8170cd94":"y denotes the 'Selling_Price'","6ddb59be":"# Importing Dataset\n","e0a3e44d":"# Creating Dummy Features","5d5510b0":"# Visualization of Data","66797c2d":"I have dropped the Fuel_type, Seller_Type and Transmission columns from the dataset. This is because I have created dummy variables for them.\nMoreover, I have also dropped one each type of value for the newly created dummy variables. This is because the value becomes redundant. This can be explained as, if the Diesel value is 0 and the petrol value is also 0, this automatically means that the feature for CNG is 1 for that row. Similarly,this is true for rest of the dummy features. ","17c19019":"X denotes all the features except \"Selling_Price\"","ae0d5a13":"**The number of manual cars are sold the most.**","850018ff":"I have implemented Linear Regression on the dataset. I have also explained the steps that I have taken and why I did it. Any suggestions would be helpful as this is only my third notebook.","e8782a5a":"This gives the total rows and columns along with the total indexes"}}