{"cell_type":{"84945fce":"code","72fc7e2d":"code","3dbd71d4":"code","993b35c8":"code","3ad05d2e":"code","a27fec91":"code","b5f899e0":"code","80dc6926":"code","9ad32634":"code","1bbc690d":"code","5d397cbf":"code","efe48693":"code","81f3d863":"code","eb56fc9f":"code","1859bc81":"code","c9837907":"code","f8af98b7":"code","88b0d84c":"code","6a4cf3ef":"code","8d6421e5":"code","c480bcd0":"code","fe3235bd":"markdown","271bb4e9":"markdown","b0952bc6":"markdown","c4994e03":"markdown","aec6fc76":"markdown","cc71d289":"markdown","37a73419":"markdown","5d04b97d":"markdown","8a252814":"markdown","29d09582":"markdown","db4bd368":"markdown"},"source":{"84945fce":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","72fc7e2d":"train_df=pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntest_df=pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\")\n","3dbd71d4":"train_df.columns","993b35c8":"train_df.describe()","3ad05d2e":"train_df.head(10)","a27fec91":"train_df.info()","b5f899e0":"def bar_plot(variable):\n    \"\"\"\n    input: variable ex: 'SaleCondition'\n    output: bar plot & value count\n    \n    \"\"\"\n    # get feature\n    var = train_df[variable]\n    # count number of categorical variable(value\/sample)\n    varValue= var.value_counts()\n\n    #visualize\n    plt.figure(figsize=(9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel('Frequency')\n    plt.title(variable)\n    plt.show()\n    print('{}:\\n {}'.format(variable, varValue))  ","80dc6926":"category1=[\"SaleCondition\", \"MiscFeature\", \"Fence\", \"PoolQC\", \"Street\", \"LotShape\"]\nfor c in category1:\n    bar_plot(c)","9ad32634":"category2=[\"LandContour\", \"SaleType\", \"Utilities\"]\nfor c in category2:\n    print(\"{} \\n\". format(train_df[c].value_counts))","1bbc690d":"def plot_hist(variable):\n    plt.figure(figsize = (9,3))\n    plt.hist(train_df[variable], bins = 50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()\n","5d397cbf":"numericVar = [\"Id\", \"LotFrontage\", \"LotArea\", \"MiscVal\", \"SalePrice\", \"YrSold\", \"MoSold\"]\nfor n in numericVar:\n    plot_hist(n)","efe48693":"# LotFrontage-SalePrice\ntrain_df[[\"LotFrontage\", \"SalePrice\"]].groupby([\"LotFrontage\"], as_index=False).mean().sort_values(by='SalePrice', ascending=False)","81f3d863":"# YrSold-SalePrice\ntrain_df[[\"YrSold\", \"SalePrice\"]].groupby([\"YrSold\"], as_index=False).mean().sort_values(by='SalePrice', ascending=False)","eb56fc9f":"# Fence-SalePrice\ntrain_df[[\"Fence\", \"SalePrice\"]].groupby([\"Fence\"], as_index=False).mean().sort_values(by='SalePrice', ascending=False)","1859bc81":"# MsSubClass-SalePrice\ntrain_df[[\"MSSubClass\", \"SalePrice\"]].groupby([\"MSSubClass\"], as_index=False).mean().sort_values(by='SalePrice', ascending=False)","c9837907":"def detect_outliers(df,features):\n    outlier_indices=[]\n    for c in features:\n        #1st quartile:\n        \n        Q1=np.percentile(df[c],25)\n        \n        #3rd quartile:\n        \n        Q3=np.percentile(df[c],75)\n        \n        #IQR:\n        \n        IQR=Q3 - Q1\n        \n        #Outlier step:\n        \n        outlier_step=IQR * 1.5\n        \n        #Detect outlier and their indices:\n        \n        outlier_list_col=df[(df[c]< Q1 - outlier_step) | (df[c]> Q3 + outlier_step) ].index\n                            \n        \n        #Store indices:\n        \n        outlier_indices.extend(outlier_list_col)\n        \n    outlier_indices=Counter(outlier_indices)\n    multiple_outliers=list(i for i , v in outlier_indices.items() if v > 2)\n    return multiple_outliers","f8af98b7":"train_df.loc[detect_outliers(train_df,[\"Id\", \"LotFrontage\", \"LotArea\", \"MiscVal\", \"SalePrice\", \"YrSold\", \"MoSold\"])]","88b0d84c":"train_df_len = len(train_df)\ntrain_df=pd.concat([train_df,test_df],axis=0).reset_index(drop=True)","6a4cf3ef":"train_df.head()","8d6421e5":"train_df.columns[train_df.isnull().any()]","c480bcd0":"train_df.columns.isnull().sum()","fe3235bd":"<a id='8'><\/a>\n## Missing Value\n* Find Missing Value\n* Fill Missing Value","271bb4e9":"<a id='3'><\/a>\n## Univariate Variable Analysis\n* Categorical Variable: SaleCondition, MiscFeature, Fence, PoolQC, MsZoning, Street, Alley, LotShape, LandContour, SaleType, Utilities\n* Numerical Variable: Id, MsSubClass, LotFrontage, LotArea, MiscVal, SalePrice, YrSold, MoSold","b0952bc6":"## Categorical Variable","c4994e03":"<a id='1'><\/a>\n## Look and Check Data","aec6fc76":"<a id='5'><\/a>\n## Numerical Variable\n","cc71d289":"<a id='6'><\/a>\n## Basic Data Analysis\n\n* LotFrontage - SalePrice\n* YrSold - SalePrice\n* Fence - SalePrice\n* MSSubClass - SalePrice","37a73419":"## Find Missing Value","5d04b97d":"* float->3\n* int->35\n* object->43","8a252814":"<a id='7'><\/a>\n## Outlier Detection","29d09582":"## Introduction\nHello, are you ready to learn the best house prices for your dream home? Let's start.\n1. [Look and Check Data](#1)\n2. [Variable Description](#2)\n3. [Univariate Variable Analysis](#3)\n    * [Categorical Variable](#4)\n    * [Numerical Variable](#5)\n4. [Basic Data Analysis](#6)\n5. [Outlier Detection](#7)\n6. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Fill Missing Value](#10\n    )","db4bd368":"<a id='2'><\/a>\n## Variable Description\n"}}