{"cell_type":{"043566cb":"code","86065494":"code","26f02bf5":"code","ffe37d87":"code","8a670c5f":"code","65031372":"code","33afcc0c":"code","8788ca56":"code","7c2a8f23":"code","0fc91b9b":"code","fda43b95":"code","236883d8":"code","283db768":"code","a8d0b454":"code","d6b4d3cf":"code","d982db79":"code","7d430cef":"code","facfc01f":"code","ec332f6f":"markdown","0a73938e":"markdown","20a31d6b":"markdown","98464de1":"markdown"},"source":{"043566cb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt  #\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","86065494":"#we use pandas for csv data \n#pandas include read_csv that is built in scope for pyhton\ndata=pd.read_csv('\/kaggle\/input\/creditcardfraud\/creditcard.csv')","26f02bf5":"# we can see data's infos :data.info()\ndata.info()\n# we can see data from creditcard.csv  :data.head()\ndata.head()#default we can see five rows\n#or \ndata.head(10)#we can see ten rows","ffe37d87":"#we can see data's relations\ndata.corr()\n#this csv has not got losts of corrolations","8a670c5f":"#corralation map\nf,ax=plt.subplots(figsize=(18,18))\nsns.heatmap(data.corr(),annot=True,linewidths=.5,fmt='.1f',ax=ax)\nplt.show()","65031372":"#we can see creditcard.csv's columns title\ndata.columns","33afcc0c":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata.Amount.plot(kind = 'line', color = 'r',label = 'Amount',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.V4.plot(color = 'r',label = 'V4',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper left')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","8788ca56":"# Scatter Plot \n# x = Amount, y = V4\ndata.plot(kind='scatter', x='Amount', y='V4',alpha = 0.5,color = 'red')\nplt.xlabel('Amount')              # label = name of label\nplt.ylabel('V4')\nplt.title('Amount V4 Scatter Plot')            # title = title of plot","7c2a8f23":"# Histogram\n# bins = number of bar in figure\ndata.V4.plot(kind = 'hist',bins = 30,figsize = (12,12))\nplt.show()","0fc91b9b":"dictionary={'Mercedes':'S400','BMW':'740i','Ferrari':'F30'}\nprint(dictionary.keys())\nprint(dictionary.values())","fda43b95":"dictionary['Mercedes']='S500'  #update existing entry\nprint(dictionary)\ndictionary['Opel']='Astra'    #add new entry\nprint(dictionary)\ndel(dictionary['BMW'])        #remobe entry with key 'BMW'\nprint(dictionary)\nprint('Opel' in dictionary)  # check entry\ndictionary.clear()           #clean dictionary\nprint(dictionary)","236883d8":"data=pd.read_csv('\/kaggle\/input\/creditcardfraud\/creditcard.csv')\ndata.head(10)","283db768":"data_series=data['Amount']  #series \nprint(type(data_series))\ndata_frime=data[['Amount']]\nprint(type(data_frime))","a8d0b454":"#Filtering Pandas data frame\namount=data['Amount']>20000\ndata[amount]","d6b4d3cf":"# 2 - Filtering pandas with logical_and\ndata[np.logical_and(data['Amount']>10000,data['V4']>10)]","d982db79":"#  '&' is operater that like 'np.logical_and'\ndata[(data['Amount']>10000) & (data['V4']>10)]","7d430cef":"#while \ni=0\nx=data[(data['Amount']>10000) & (data['V4']>10)]\nprint(len(x))\nwhile i< len(x):\n    print(x['Amount'])# why not run this code ?  ---print(x['Amount'][i])\n    i+=1","facfc01f":"#For\n\n# For pandas we can achieve index and value\nfor index,value in data[['Amount']][0:2].iterrows():\n    print(index,\" : \",value)\nprint()\n\nx=data[(data['Amount']>10000) & (data['V4']>10)]\nfor i in x.index:\n    print(x['Amount'][i])\nprint()    \n    \nlis ={1,2,3,4,5}\nfor i in lis:\n    print(i)\nprint()\n# Enumerate index and value of list \nfor index,value in enumerate(lis):\n    print(index ,\": \", value)\nprint()\n\ndictionary ={'Mercedes':'CLK','BMW':'740'}\nfor key,value in dictionary.items():\n    print (key,\": \", value)\nprint()\n","ec332f6f":"<a id=\"1\"><\/a> <br>\n### DICTIONARY\n* It has key and value\n* It is faster than list","0a73938e":"<a id=\"1\"><\/a> <br>\n### WH\u0130LE AND FOR LOOPS\n","20a31d6b":"<a id=\"1\"><\/a> <br>\n### MATPLOTLIB\n-->Matplot is python library that helps us plot data;\n* Line plot is better whern x axis is time\n* Scatter plot is better there is corrolation between two variables\n* Histogram plot is better when we need to see distribution of numerical data","98464de1":"<a id=\"1\"><\/a> <br>\n### PANDAS\n* It is a pyhton's library\n* We read CSV files.    CSV : comma seperated values"}}