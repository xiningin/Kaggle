{"cell_type":{"e9cfdb57":"code","3a435ec9":"code","1960e744":"code","994cc8ab":"code","f97dab24":"code","bf2cafac":"code","79cc752f":"code","5f640573":"code","15422707":"code","a9ee3e7e":"code","4d103a43":"markdown","77aa96b4":"markdown"},"source":{"e9cfdb57":"import sys\nimport numpy as np\nimport pandas as pd \nimport os\nprint(os.listdir(\"..\/input\"))","3a435ec9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1960e744":"# !pip install pycaret[full]\n# !pip install gdown \n# !gdown https:\/\/drive.google.com\/uc?id=1REq7s6UhsmFhC21gpiD0bCzzziCz41s5\n!pip install ..\/input\/pycaret\/pycaret-2.2.3-py3-none-any.whl","994cc8ab":"from pycaret.classification import *\nimport pickle\nkool_model = load_model('..\/input\/trainedmodel\/kool_0002')","f97dab24":"kool_model","bf2cafac":"df1=pd.read_csv('..\/input\/jane-street-market-prediction\/example_test.csv')\n\nresults = predict_model(kool_model,df1)\n\n","79cc752f":"results","5f640573":"import janestreet\nenv = janestreet.make_env() # initialize the environment\niter_test = env.iter_test() # an iterator which loops over the test set\n\nfor (test_df, sample_prediction_df) in iter_test:\n    sample_prediction_df.action = kool_model.predict(test_df) #make your 0\/1 prediction here\n    env.predict(sample_prediction_df) ","15422707":"sample_prediction_df = sample_prediction_df.rename_axis('ts_id').reset_index()\nsample_prediction_df.to_csv('submission.csv', index=False)","a9ee3e7e":"print(sample_prediction_df)","4d103a43":"This is what the model looks like. A blended model that was previously trained.","77aa96b4":"#### Setup pycaret and load model file as a pickle"}}