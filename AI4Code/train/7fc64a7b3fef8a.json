{"cell_type":{"bafd46ea":"code","0d7fbedf":"code","b45b8103":"code","f83af0e4":"code","888f89eb":"code","f7722ec7":"code","6ea545f9":"code","747ed540":"code","111b457d":"code","a5345f9e":"markdown","eeb674a0":"markdown","6de22c3a":"markdown","c34c6159":"markdown","4d2d0980":"markdown","a960a12d":"markdown","8c5dc644":"markdown"},"source":{"bafd46ea":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport glob\nglob.glob('..\/input\/prostate-cancer-grade-assessment\/*')","0d7fbedf":"!pip install -qq ..\/input\/efficientnet\/efficientnet-1.0.0-py3-none-any.whl","b45b8103":"import os\nimport cv2\nimport skimage.io\nimport numpy as np\nimport pandas as pd\n\nfrom keras.layers import *\nfrom keras.models import Model\nimport efficientnet.keras as efn\nfrom keras.applications.nasnet import  preprocess_input","f83af0e4":"I = Input((256,256,3))\nefnb3 = efn.EfficientNetB3(weights = None, include_top = False, input_tensor = I, pooling = 'avg', classes = None)\nfor layer in efnb3.layers:\n    layer.trainable = True\nx = Dropout(0.5)(efnb3.output)\nx = Dense(64, activation='relu')(x)\nx = Dense(6,activation='softmax')(x)\n\nmodel = Model(inputs = efnb3.input, outputs = x)\nmodel.load_weights('..\/input\/model-1\/model.h5')","888f89eb":"def get_image(img_name, data_dir='..\/input\/prostate-cancer-grade-assessment\/test_images'):\n    img_path = os.path.join(data_dir, f'{img_name}.tiff')\n    img = skimage.io.MultiImage(img_path)\n    img = cv2.resize(img[-1], (256,256))\n    img = preprocess_input(img)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    \n    return img","f7722ec7":"def TTA(img):\n    img1 = img\n    img2 = cv2.rotate(img, cv2.ROTATE_90_CLOCKWISE)\n    img3 = cv2.rotate(img, cv2.ROTATE_90_COUNTERCLOCKWISE)\n    img4 = cv2.rotate(img, cv2.ROTATE_180)\n    images = [img1, img2, img3, img4]\n    \n    return model.predict(np.array(images), batch_size=4)","6ea545f9":"def post_process(preds):\n    avg = np.sum(preds,axis = 0)\n    label = np.argmax(avg)\n    return label","747ed540":"from tqdm import tqdm","111b457d":"data_dir = '..\/input\/prostate-cancer-grade-assessment\/test_images'\nsample_submission = pd.read_csv('..\/input\/prostate-cancer-grade-assessment\/sample_submission.csv')\n# data_dir = '..\/input\/prostate-cancer-grade-assessment\/train_images'\n# sample_submission = pd.read_csv('..\/input\/prostate-cancer-grade-assessment\/train.csv').head(50)\n\ntest_images = sample_submission.image_id.values\nlabels = []\n\ntry:    \n    for image in tqdm(test_images):\n        img = get_image(image, data_dir)\n        preds = TTA(img)\n        label = post_process(preds)\n        labels.append(label)\n    sample_submission['isup_grade'] = labels\nexcept:\n    print('Test dir not found')\n    \nsample_submission['isup_grade'] = sample_submission['isup_grade'].astype(int)\nsample_submission.to_csv('submission.csv', index=False)\nsample_submission.head()","a5345f9e":"# Post-process TTA predictions","eeb674a0":"# Get image from image name","6de22c3a":"# TTA\n\nFunction to generate different images from given image and do predictions on them","c34c6159":"Thanks for reading. Please upvote if you found it helpful.","4d2d0980":"# Load model","a960a12d":"# Predicting on test images","8c5dc644":"Click [here](https:\/\/www.kaggle.com\/prateekagnihotri\/efficientnet-keras-train-qwk-loss-augmentation) for training kernel"}}