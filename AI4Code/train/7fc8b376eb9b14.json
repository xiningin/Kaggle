{"cell_type":{"d26b6d26":"code","3f303948":"code","495f3897":"code","cfb0cd84":"code","f698f089":"code","34171b7e":"code","6299aaa2":"code","a7631cf0":"code","e0db33a6":"code","f900f097":"code","cc056bd0":"code","f4b72feb":"code","d87a0a51":"code","f37e4a47":"code","2acc3b8b":"code","5e652aa8":"code","4674485b":"code","234d0291":"code","5b789e5d":"code","7542e633":"code","6bedec19":"code","27ad6360":"code","aa802658":"code","56f5158e":"code","e5740336":"code","bc0b2ee1":"code","8c5686ab":"code","3beaa297":"code","411fc0b9":"code","2ad14bc3":"code","6240333b":"code","4297fade":"code","e0413200":"code","e30ba52c":"code","c3d03197":"code","8c697ccd":"code","86f084cb":"code","120c1f27":"code","12ada718":"code","092d6618":"code","dce8b463":"code","c23174b2":"code","6764af4e":"code","23dc00ce":"code","3d12f404":"markdown","02bbf6d9":"markdown","5e0f495f":"markdown","75d07ada":"markdown","4b2939b9":"markdown","a5e6684b":"markdown","7443dea4":"markdown","e9078e30":"markdown","2f603f5f":"markdown","d3de716e":"markdown","720c9b0d":"markdown","08ccb11f":"markdown","d10f575c":"markdown","6bb57eea":"markdown","febfd129":"markdown","21c04e00":"markdown","def743a6":"markdown","f5496763":"markdown","51004291":"markdown","c5401a2f":"markdown","7e38d4c0":"markdown","8a23639f":"markdown","3847c3f8":"markdown","2bb11903":"markdown","805b8983":"markdown","04ef89e6":"markdown","7574c95b":"markdown","ce4a921a":"markdown","fbae69a9":"markdown","ae2c12a2":"markdown","6523590c":"markdown","714b57b0":"markdown","de04dadd":"markdown","5b3560e5":"markdown","37c82154":"markdown","f3ff2e8b":"markdown","693b0f6e":"markdown","dc1a3bcb":"markdown","a82f2f6b":"markdown","03ba7437":"markdown","729a217b":"markdown","250f420b":"markdown","a39764b2":"markdown","e77dac8c":"markdown"},"source":{"d26b6d26":"import pandas as pd\nimport os","3f303948":"dir='..\/input\/av-healthcare-analytics-ii\/healthcare'\nos.chdir(dir)","495f3897":"dictionary=pd.read_csv('train_data_dictionary.csv')\nprint(dictionary)","cfb0cd84":"import numpy as np\nimport matplotlib.pyplot as plt\nimport warnings \nimport seaborn as sns\nimport random\nwarnings.filterwarnings('ignore')\n%matplotlib inline\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Activation","f698f089":"data=pd.read_csv('train_data.csv')","34171b7e":"print(data.shape)","6299aaa2":"print(data.columns.tolist())","a7631cf0":"print(data.dtypes)\nprint(data.dtypes.value_counts())","e0db33a6":"print(data.describe(include='object').T)","f900f097":"data.Stay.value_counts()","cc056bd0":"print(data.isna().sum().sort_values(ascending=False))","f4b72feb":"data=data.dropna()","d87a0a51":"data=data.drop(['case_id'], axis=1) # This is unique so not useful\ncategorical_vars=['Hospital_code', 'City_Code_Hospital', 'Bed Grade', 'City_Code_Patient',\n                  'Hospital_type_code', 'Hospital_region_code', 'Department', 'Ward_Type', \n                  'Ward_Facility_Code', 'Type of Admission', 'Severity of Illness', 'Age',\n                  'Stay'] \ndata[categorical_vars] = data[categorical_vars].astype('category')","f37e4a47":"print(data.describe(include='category').T)","2acc3b8b":"     \ndata['patient_visits'] = data.groupby(['patientid'])['patientid'].transform('count')\ndata=data.drop(['patientid'], axis=1) ","5e652aa8":"cat_uniques = pd.DataFrame([[i, len(data[i].unique())] for i in data[categorical_vars].columns], columns=['Variable', 'Unique Values']).set_index('Variable')\nprint(cat_uniques)","4674485b":"hospital_codes = data['Hospital_code'].value_counts(normalize=True)\nprint(hospital_codes)\nminorities_hospitals =hospital_codes.where(hospital_codes<0.04).dropna().index.values\ndata['Hospital_code']=np.where(data['Hospital_code'].isin(minorities_hospitals), '0',  data['Hospital_code'])","234d0291":"city_code_patients = data['City_Code_Patient'].value_counts(normalize=True)\nprint(city_code_patients)\nminorities_ccp =city_code_patients.where(city_code_patients<0.04).dropna().index.values\ndata['City_Code_Patient']=np.where(data['City_Code_Patient'].isin(minorities_ccp), '0',  data['City_Code_Patient'])","5b789e5d":"cat_uniques = pd.DataFrame([[i, len(data[i].unique())] for i in data[categorical_vars].columns], columns=['Variable', 'Unique Values']).set_index('Variable')\nprint(cat_uniques)","7542e633":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\nlabel_vars=['Hospital_type_code', 'Hospital_region_code', 'Department', 'Ward_Type',\n            'Ward_Facility_Code', 'Type of Admission', 'Severity of Illness', 'Age', 'Stay']","6bedec19":"for col in label_vars:\n    data[col] = le.fit_transform(data[col])\n    \n# Reset index\ndata=data.reset_index(drop=True)\ny=data.Stay","27ad6360":"categorical_vars=['Hospital_code', 'City_Code_Hospital', 'Bed Grade', 'City_Code_Patient',\n                  'Hospital_type_code', 'Hospital_region_code', 'Department', 'Ward_Type', \n                  'Ward_Facility_Code', 'Type of Admission', 'Severity of Illness', 'Age'] \nX = pd.get_dummies(data, columns=categorical_vars).drop('Stay', axis=1)","aa802658":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nnumeric_cols=['Available Extra Rooms in Hospital', 'Visitors with Patient',\n              'Admission_Deposit', 'patient_visits']","56f5158e":"for col in data[numeric_cols].columns:\n    X[col] = scaler.fit_transform(X[[col]])","e5740336":"from sklearn.model_selection import StratifiedShuffleSplit","bc0b2ee1":"strat_shuff_split = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)\nX.columns = X.columns.str.replace(' ', '_')","8c5686ab":"train_idx, test_idx = next(strat_shuff_split.split(X, y))","3beaa297":"X_train = X.loc[train_idx, X.columns.values]\ny_train = data.loc[train_idx, 'Stay']","411fc0b9":"X_test = X.loc[test_idx, X.columns.values]\ny_test = data.loc[test_idx, 'Stay']","2ad14bc3":"print(y_train.value_counts(normalize=True).sort_index())","6240333b":"print(y_test.value_counts(normalize=True).sort_index())","4297fade":"del(data)","e0413200":"num_classes = 11\ny_train = keras.utils.to_categorical(y_train, num_classes)\ny_test = keras.utils.to_categorical(y_test, num_classes)","e30ba52c":"model_base = Sequential()\nmodel_base.add(Dense(96,input_dim = 78 ,activation = 'relu'))\nmodel_base.add(Dense(11,activation='sigmoid'))\nmodel_base.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","c3d03197":"model_base.summary()","8c697ccd":"model_base.fit(X_train, y_train, batch_size=5, epochs=10,\n              validation_data=(X_test, y_test),\n              shuffle=True)","86f084cb":"from sklearn.metrics import roc_auc_score","120c1f27":"y_pred_prob = model_base.predict(X_test)\ny_pred=model_base.predict_classes(X_test)","12ada718":"print('roc-auc is {:.3f}'.format(roc_auc_score(y_test,y_pred_prob)))","092d6618":"model_2 = Sequential()\nmodel_2.add(Dense(256,input_dim = 78 ,activation = 'relu'))\nmodel_2.add(Dense(128,activation = 'relu'))\nmodel_2.add(Dropout(0.5))\nmodel_2.add(Dense(64,activation = 'relu'))\nmodel_2.add(Dropout(0.2))\nmodel_2.add(Dense(32,activation = 'relu'))\nmodel_2.add(Dense(11,activation='sigmoid'))\nmodel_2.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","dce8b463":"model_2.summary()","c23174b2":"model_2.fit(X_train, y_train, batch_size=5, epochs=3, # Lets reduce epochs here, it didnt help last time.\n              validation_data=(X_test, y_test),\n              shuffle=True)","6764af4e":"y_pred_prob = model_2.predict(X_test)\ny_pred=model_2.predict_classes(X_test)","23dc00ce":"print('roc-auc is {:.3f}'.format(roc_auc_score(y_test,y_pred_prob)))","3d12f404":"We have a participant id column which will have many unique values but is not continuous. Multiple occurences of an id suggests multiple hospital trips<br>\nTo deal with this, lets convert it to n hospital trips.","02bbf6d9":"Do some cols have NA's?","5e0f495f":"What columns do we have?","75d07ada":"Calculate ROC AUC. ","4b2939b9":"# Baseline Keras Model<br>\nNow we will build a basic Keras model which will attempt","a5e6684b":"Fit the model","7443dea4":"Some values such as hospiral code and city patient code have too many unique values. Lets group the less frequent values","e9078e30":"# Labelling and Sorting<br>\nLets ensure we have all columns correctly labelled. I think we have some categorical vars registering as numeric.","2f603f5f":"Now for each patient instead of their id we have the number of hospital visits which is less unique<br>\nLets now check our unique values of categories","d3de716e":"# Data Splitting","720c9b0d":"Build model base","08ccb11f":"# Scaling","d10f575c":"Test","6bb57eea":"Is the outcome data balanced?","febfd129":"# Predicting COVID19 Hospital Stay Length","21c04e00":"Calculate ROC AUC. This is more informative than accuracy due to lack of balance in the outcome variable","def743a6":"Get Dummies","f5496763":"Lets train on only complete data since the missing data is only a small fraction.","51004291":"Fit the model","c5401a2f":"From here we can see that object values aren't too unique. This is good as it will make encoding simpler.","7e38d4c0":"The following project was completed by jaketuricchi as part of IBM's deep learning course. Below is an exert from Kaggle describing the data which can be found at: https:\/\/www.kaggle.com\/nehaprabhavalkar\/av-healthcare-analytics-ii","8a23639f":"Get the index values from the generator","3847c3f8":"Now we have a reasonable number of categories","2bb11903":"The model is achieving a high level of accuracy with only a very basic model arcitecture. Its worth noting that increasing the number of epochs does not add much to the loss or accuracy<br>\nscores but did however take considerably longer to compute. Further models may wish to reduce the epochs in favour of more complex model arcitecture.","805b8983":"# Encoding<br>\nBecause most features are categorical vars we must label and one hot encode before training a model.","04ef89e6":"# Next Steps<br>\n* Play with adding with width (more nodes) or depth (more layers) to the NN model. My computer is stuggling considerably on a basic model so I'll leave that out for now.<br>\n* Tune parameters (e.g. try a different optimizer, lr or batch size)<br>\n* Consider using a complex pre-designed model which is fit for this current problem. These often perform better than self-made models<br>\n* Conduct more feature engineering. Currently I only encoded and sorted variables, but adding interactions, or perhaps polynomial features to numeric vars could be useful.<br>\n* Calculate a more detailed scoring output for multiclassification (note that some metrics don't work here)<br>\n* See how the NN model compares to other ML algorithms.","7574c95b":"# Load data","ce4a921a":"# Data dictionary:","fbae69a9":"The proportion of classes in the train and test data are balanced.","ae2c12a2":"Recent Covid-19 Pandemic has raised alarms over one of the most overlooked area to focus: Healthcare Management. While healthcare management has various use cases for using data science, patient length of stay is one critical parameter to observe and predict if one wants to improve the efficiency of the healthcare management in a hospital.<br>\nThis parameter helps hospitals to identify patients of high LOS risk (patients who will stay longer) at the time of admission. Once identified, patients with high LOS risk can have their treatment plan optimized to miminize LOS and lower the chance of staff\/visitor infection. Also, prior knowledge of LOS can aid in logistics such as room and bed allocation planning.<br>\nSuppose you have been hired as Data Scientist of HealthMan \u00e2\u20ac\u201c a not for profit organization dedicated to manage the functioning of Hospitals in a professional and optimal manner.<br>\nThe task is to accurately predict the Length of Stay for each patient on case by case basis so that the Hospitals can use this information for optimal resource allocation and better functioning. ","6523590c":"Now lets use keras to get dummies for the y data","714b57b0":"Quickly describe the data.","de04dadd":"# Building a More Complex Keras Model","5b3560e5":"Ensure the train\/test split is equal","37c82154":"Recheck unique cats","f3ff2e8b":"# Import Packages","693b0f6e":"Encode labels","dc1a3bcb":"Improvement!","a82f2f6b":"The data is not balanced. We'll need to pay attention to the scoring metrics and stratifying splitting. I won't bother up\/down sampling for this current exercise.","03ba7437":"The length of stay is divided into 11 different classes ranging from 0-10 days to more than 100 days.","729a217b":"# Data Exploration<br>\nBecause this is a modelling task I skip visualisation but I must still explore the data enough to understand preprocessing needs.<br>\nWhats the shape of the data?","250f420b":"What type are the columns?","a39764b2":"Create the data sets","e77dac8c":"Great, we're working with complete data. Lets consider the distribution\/skew of features."}}