{"cell_type":{"34316a5d":"code","6d09ef42":"code","694cde3b":"code","775e1dde":"code","8291bd6b":"code","415a0c4e":"code","658bc567":"code","f53d5d05":"code","fa70c0c9":"code","30e626b1":"code","b874e4e1":"code","25a2783c":"code","05db2daf":"code","0a79efab":"code","55e4f22c":"code","6c909601":"code","6231cfd7":"code","59541acf":"code","207412d8":"code","2e9c7604":"code","00f0f897":"code","2b298127":"markdown","ec67d69b":"markdown","c20b1bdf":"markdown","1d9d895b":"markdown","48651875":"markdown","86d79b65":"markdown","83c1409e":"markdown","87e6a619":"markdown"},"source":{"34316a5d":"import numpy as np\nimport pandas as pd\nimport plotly.express as px\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.neural_network import MLPClassifier","6d09ef42":"data = pd.read_csv('..\/input\/top-personality-dataset\/2018-personality-data.csv')","694cde3b":"data","775e1dde":"data.info()","8291bd6b":"data.isna().sum()","415a0c4e":"data.columns","658bc567":"data = data.drop(['userid',\n                  ' movie_1', ' predicted_rating_1',\n                  ' movie_2', ' predicted_rating_2',\n                  ' movie_3', ' predicted_rating_3',\n                  ' movie_4', ' predicted_rating_4',\n                  ' movie_5', ' predicted_rating_5',\n                  ' movie_6', ' predicted_rating_6',\n                  ' movie_7', ' predicted_rating_7',\n                  ' movie_8', ' predicted_rating_8',\n                  ' movie_9', ' predicted_rating_9',\n                  ' movie_10', ' predicted_rating_10',\n                  ' movie_11', ' predicted_rating_11',\n                  ' movie_12', ' predicted_rating_12',\n                  ], axis=1)","f53d5d05":"data","fa70c0c9":"{column: list(data[column].unique()) for column in data.columns if data.dtypes[column] == 'object'}","30e626b1":"data[' assigned condition'].mode()","b874e4e1":"condition_ordering = [' low', ' medium', ' default', ' high']","25a2783c":"def ordinal_encode(df, column, ordering):\n    df = df.copy()\n    df[column] = df[column].apply(lambda x: ordering.index(x))\n    return df\n\ndef onehot_encode(df, column, prefix):\n    df = df.copy()\n    dummies = pd.get_dummies(df[column], prefix=prefix)\n    df = pd.concat([df, dummies], axis=1)\n    df = df.drop(column, axis=1)\n    return df","05db2daf":"data = ordinal_encode(data, ' assigned condition', condition_ordering)\ndata = onehot_encode(data, ' assigned metric', 'm')","0a79efab":"data","55e4f22c":"y = data[' enjoy_watching ']\nX = data.drop(' enjoy_watching ', axis=1)","6c909601":"scaler = StandardScaler()\n\nX = scaler.fit_transform(X)","6231cfd7":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=42)","59541acf":"log_model = LogisticRegression()\nsvm_model = SVC(C=1.0)\nann_model = MLPClassifier(hidden_layer_sizes=(16))\n\nlog_model.fit(X_train, y_train)\nsvm_model.fit(X_train, y_train)\nann_model.fit(X_train, y_train)\n\nlog_acc = log_model.score(X_test, y_test)\nsvm_acc = svm_model.score(X_test, y_test)\nann_acc = ann_model.score(X_test, y_test)","207412d8":"fig = px.bar(\n    x=['Logistic Regression', 'Support Vector Machine', 'Neural Network'],\n    y=[log_acc, svm_acc, ann_acc],\n    color=['Logistic Regression', 'Support Vector Machine', 'Neural Network'],\n    labels={'x': \"Model\", 'y': \"Accuracy\"},\n    title=\"Model Accuracy\"\n)\n\nfig.show()","2e9c7604":"1\/5","00f0f897":"print(\"Logistic Regression:\", log_acc)\nprint(\"Support Vector Machine:\", svm_acc)\nprint(\"Neural Network:\", ann_acc)","2b298127":"# Results","ec67d69b":"# Getting Started","c20b1bdf":"# Preprocessing","1d9d895b":"## Encoding","48651875":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/SFV-zQMuR0o","86d79b65":"# Task for Today  \n\n***\n\n## Movie Preference Prediction  \n\nGiven *data about someone's personality*, let's try to classify **how strongly he\/she will enjoy watching movies on a recommendation list**.  \n  \nWe will use logistic regression, support vector machine, and neural network models to make our predictions.","83c1409e":"## Splitting and Scaling","87e6a619":"# Training"}}