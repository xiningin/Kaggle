{"cell_type":{"743ce133":"code","5a389ed1":"code","faa4df40":"code","748578fd":"code","416cb25c":"code","7249ec3d":"code","6819df3a":"code","f6c6d616":"code","5e9c2c55":"code","661b310d":"code","4ddd4bd7":"code","189d73f4":"code","d5b008cc":"code","b66fa0d5":"code","a207a906":"code","d95417cd":"code","73e0b8a3":"code","06a7a86b":"code","74a6d92b":"code","94580ca2":"code","d8b9ef1c":"code","f0372db0":"code","a9d962b9":"code","ad747736":"code","e745a41f":"code","0b71452a":"code","1aaa51ee":"code","da68fb14":"code","80867871":"code","34fc0f4f":"code","4ac6a6a1":"code","cb9d26f6":"code","7c5bbf0c":"code","f9e3a8c3":"code","64ed5014":"code","842e13d2":"code","f41b1fd6":"code","1b59329d":"code","bab2c820":"code","c2d43f73":"code","5a3e2807":"code","cddfce16":"code","826d1349":"code","c18c6a3e":"code","c81cd03e":"code","b113907a":"code","327e50b0":"code","10b2e4e6":"code","4b81f0b8":"code","d44631da":"code","38b7ffc3":"code","5469f177":"code","c9d45669":"code","bf5d6a5a":"markdown","d01f4ef1":"markdown","aab24b58":"markdown","fbba1317":"markdown","ccacad3a":"markdown","5970dbbc":"markdown","b3e4f0ca":"markdown","23f8f7c3":"markdown","7f2feff1":"markdown","f8c3e6c5":"markdown","0768d62e":"markdown","ece6eda6":"markdown","65e5b248":"markdown","9fada00d":"markdown","e6be4710":"markdown","71231f0b":"markdown","d1e9cf55":"markdown"},"source":{"743ce133":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport warnings\nwarnings.filterwarnings('ignore') \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5a389ed1":"data=pd.read_csv(\"..\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")\nprint(plt.style.available) # look at available plot styles\nplt.style.use('ggplot')","faa4df40":"data.head()","748578fd":"data.describe()","416cb25c":"print(data.shape)","7249ec3d":"data[\"class\"].unique()","6819df3a":"data.info()","f6c6d616":"data.isnull().sum()","5e9c2c55":"f,ax=plt.subplots(figsize=(10,10))\nsns.heatmap(data.corr(),annot=True,linewidths=0.5,fmt=\".1f\")\nplt.show()","661b310d":"color_list = ['red' if i=='Abnormal' else 'green' for i in data.loc[:,'class']]\npd.plotting.scatter_matrix(data.loc[:, data.columns != 'class'],\n                                       c=color_list,\n                                       figsize= [15,15],\n                                       diagonal='hist',\n                                       alpha=0.5,\n                                       s = 200,\n                                       marker = '*',\n                                       edgecolor= \"black\")\nplt.show()","4ddd4bd7":"plt.scatter(data[\"pelvic_radius\"],data[\"lumbar_lordosis_angle\"],c=color_list,alpha=0.7)\nplt.xlabel(\"pelvic radius\")\nplt.ylabel(\"lumbar_lordosis_angle\")\nplt.show()","189d73f4":"sns.countplot(x=\"class\",data=data)\ndata.loc[:,\"class\"].value_counts()","d5b008cc":"data[\"class\"].unique()","b66fa0d5":"n=data[data[\"class\"] ==\"Abnormal\"]\nab=data[data[\"class\"] ==\"Normal\"]","a207a906":"n.describe()","d95417cd":"ab.describe()","73e0b8a3":"n[\"class\"]=[1 for i in n[\"class\"]]\nab[\"class\"]=[0 for i in ab[\"class\"]]","06a7a86b":"plt.scatter(n.lumbar_lordosis_angle,n.degree_spondylolisthesis,color=\"green\",label=\"normal\")\nplt.scatter(ab.lumbar_lordosis_angle,ab.degree_spondylolisthesis,color=\"red\",label=\"abnormal\")\nplt.xlabel(\"lumbar_lordosis_angle\")\nplt.ylabel(\"degree_spondylolisthesis\")\nplt.legend()","74a6d92b":"data[\"class\"] = [ 0 if i==\"Abnormal\" else 1 for i in data[\"class\"] ]","94580ca2":"data[\"class\"].unique()","d8b9ef1c":"y=data[\"class\"].values\nx_data=data.drop([\"class\"],axis=1)\nx= (x_data - np.min(x_data))\/(np.max(x_data)-np.min(x_data))","f0372db0":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=1,test_size=0.3)","a9d962b9":"train_accuracy=[]\ntest_accuracy=[]\nfrom sklearn.neighbors import KNeighborsClassifier\nfor i,k in enumerate(range(1,25)):\n    knn2=KNeighborsClassifier(n_neighbors=k)\n    knn2.fit(x_train,y_train)\n    test_accuracy.append(knn2.score(x_test,y_test))\n    train_accuracy.append(knn2.score(x_train,y_train))\nplt.figure(figsize=(10,8))\nplt.plot(range(1,25),test_accuracy,label=\"test accuracy\")\nplt.plot(range(1,25),train_accuracy,label=\"train accuracy\")\nplt.legend()\nplt.xlabel(\"k values\")\nplt.ylabel(\"accuarcy\")\nplt.xticks(range(1,25))\nplt.show()\nprint(\"best accuracy values : {},K: {}\".format(np.max(test_accuracy),1+test_accuracy.index(np.max(test_accuracy))))","ad747736":"y_pred=knn2.predict(x_test)\ny_true=y_test\nfrom sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_true,y_pred)\nf,ax=plt.subplots(figsize=(5,5))\nsns.heatmap(cm,annot=True,fmt=\".1f\",linewidths=0.5,ax=ax)","e745a41f":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression()\nlr=lr.fit(x_train,y_train)\nprint(\"test accuracy: {}\".format(lr.score(x_test,y_test)))","0b71452a":"y_pred=lr.predict(x_test)\ny_true=y_test\nfrom sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_true,y_pred)\nf,ax=plt.subplots(figsize=(5,5))\nsns.heatmap(cm,annot=True,fmt=\".1f\",linewidths=0.5,ax=ax)","1aaa51ee":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=42)\n","da68fb14":"from sklearn.svm import SVC\nsvm=SVC(random_state=1)\nsvm.fit(x_train,y_train)\nprint(\"accuracy score: {}\".format(svm.score(x_test,y_test)))","80867871":"y_pred=svm.predict(x_test)\ny_true=y_test\nfrom sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_true,y_pred)\nf,ax=plt.subplots(figsize=(5,5))\nsns.heatmap(cm,annot=True,fmt=\".1f\",linewidths=0.5,ax=ax)","34fc0f4f":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.svm import SVC\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nsteps = [('scalar', StandardScaler()),\n         ('SVM', SVC())]\npipeline = Pipeline(steps)\nparameters = {'SVM__C':[1, 10, 100],\n              'SVM__gamma':[0.1, 0.01]}\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2,random_state = 1)\ncv = GridSearchCV(pipeline,param_grid=parameters,cv=3)\ncv.fit(x_train,y_train)\n\ny_pred = cv.predict(x_test)\n\nprint(\"Accuracy: {}\".format(cv.score(x_test, y_test)))\nprint(\"Tuned Model Parameters: {}\".format(cv.best_params_))","4ac6a6a1":"y=data[\"class\"].values\nx_data=data.drop([\"class\"],axis=1)\nx= (x_data - np.min(x_data))\/(np.max(x_data)-np.min(x_data))","cb9d26f6":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state = 1)","7c5bbf0c":"from sklearn.naive_bayes import GaussianNB\nnb= GaussianNB()\nnb.fit(x_train,y_train)\nprint(\"print accuracy of Naive Bayes algo:\",nb.score(x_test,y_test))","f9e3a8c3":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.15,random_state=1)\n","64ed5014":"from sklearn.tree import DecisionTreeClassifier\ndt=DecisionTreeClassifier()\ndt.fit(x_train,y_train)\nprint(\"Test accuracy score: {}\".format(dt.score(x_test,y_test)))","842e13d2":"y_pred=dt.predict(x_test)\ny_true=y_test\nfrom sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_true,y_pred)\nf,ax=plt.subplots(figsize=(5,5))\nsns.heatmap(cm,annot=True,ax=ax,fmt=\".1f\",linewidths=0.5)","f41b1fd6":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.15,random_state=1)","1b59329d":"from sklearn.ensemble import RandomForestClassifier\nrf=RandomForestClassifier()\nrf.fit(x_train,y_train)\n\nprint(\"score: \",rf.score(x_test,y_test))","bab2c820":"y_pred=rf.predict(x_test)\ny_true=y_test\nfrom sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_true,y_pred)\nf,ax=plt.subplots(figsize=(5,5))\nsns.heatmap(cm,annot=True,ax=ax,fmt=\".1f\",linewidths=0.5)","c2d43f73":"result=pd.DataFrame({\"method\":[\"KNN\",\"Logistic_Regression\",\"SWM\",\"NB\",\"Decision_Tree_Classification\",\"Random_Forest_Clasification\"],\"score\":[0.8172043010752689,0.7419354838709677,0.8548387096774194,0.8172043010752689, 0.8085106382978723,0.8936170212765957]})","5a3e2807":"sns.barplot(data=result,x=\"score\",y=\"method\")","cddfce16":"data=pd.read_csv(\"..\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")\nplt.scatter(data[\"pelvic_radius\"],data[\"degree_spondylolisthesis\"])\nplt.xlabel(\"pelvic radius\")\nplt.ylabel(\"degree spondy lolisthesis\")\nplt.show()","826d1349":"data2=data.loc[:,[\"degree_spondylolisthesis\",\"pelvic_radius\"]]\nfrom sklearn.cluster import KMeans\nk_means=KMeans(n_clusters=2)\nk_means.fit(data2)\nlabels=k_means.predict(data2)\nplt.scatter(data[\"pelvic_radius\"],data[\"degree_spondylolisthesis\"],c=labels)\nplt.xlabel(\"pelvic radius\")\nplt.ylabel(\"degree spondylolisthesis\")\nplt.show()","c18c6a3e":"df=pd.DataFrame({\"labels\":labels,\"class\":data[\"class\"]})\nct=pd.crosstab(df[\"labels\"],df[\"class\"])\nprint(ct)","c81cd03e":"inertia_list=np.empty(8)\nfor i in range(1,8):\n    kmeans=KMeans(n_clusters=i)\n    kmeans.fit(data2)\n    inertia_list[i]=kmeans.inertia_\nplt.plot(range(0,8),inertia_list,\"-o\")\nplt.xlabel(\"Number of cluster\")\nplt.ylabel(\"Inertia\")\nplt.show()","b113907a":"data=pd.read_csv(\"..\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")\ndata3=data.drop(\"class\",axis=1)","327e50b0":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import make_pipeline\nscalar=StandardScaler()\nkmeans=KMeans(n_clusters=2)\npipe=make_pipeline(scalar,kmeans)\npipe.fit(data3)\nlabels=pipe.predict(data3)\ndf=pd.DataFrame({\"labels\":labels,\"class\":data[\"class\"]})\nct=pd.crosstab(df[\"labels\"],df[\"class\"])\nprint(ct)\n","10b2e4e6":"from scipy.cluster.hierarchy import linkage,dendrogram\nmerg=linkage(data3.iloc[200:220,:],method=\"single\")\ndendrogram(merg,leaf_rotation=90,leaf_font_size=6)\nplt.show()","4b81f0b8":"plt.scatter(data[\"pelvic_radius\"],data[\"degree_spondylolisthesis\"])\nplt.xlabel(\"pelvic radius\")\nplt.ylabel(\"degree spondylolisthesis\")\nplt.show()","d44631da":"from sklearn.manifold import TSNE\nmodel=TSNE(learning_rate=100)\ntransformed=model.fit_transform(data2)\nx=transformed[:,0]\ny=transformed[:,1]\ncolor_list=[ \"blue\" if i == \"Abnormal\" else \"green\" for i in data.loc[:,\"class\"]]\nplt.scatter(x,y,c=color_list)\nplt.xlabel(\"pelvic radius\")\nplt.ylabel(\"degree spondylolisthesis\")\nplt.show()","38b7ffc3":"from sklearn.decomposition import PCA\nmodel=PCA()\nmodel.fit(data3)\ntransformed=model.transform(data3)\nprint(\"Principle components\",model.components_)","5469f177":"scaler=StandardScaler()\npca=PCA()\npipeline=make_pipeline(scaler,pca)\npipeline.fit(data3)\n\nplt.bar(range(pca.n_components_),pca.explained_variance_)\nplt.xlabel(\"PCA Feature\")\nplt.ylabel(\"variance\")\nplt.show()\n","c9d45669":"pca=PCA(n_components=2)\npca.fit(data3)\ntransformed=pca.transform(data3)\nx=transformed[:,0]\ny=transformed[:,1]\nplt.scatter(x,y,c=color_list)\nplt.show()","bf5d6a5a":"###  SVM, pre-process and pipeline","d01f4ef1":"# VISUALIZATION DATA","aab24b58":"### 4- NAIVE BAYES CLASSIFICATION\n","fbba1317":"# RESULT","ccacad3a":"# SUPERVIDES LEARNING\n* 1-KNN\n* 2-LOGISTIC REGRESSION\n* 3-SVM(SUPPORT VECTOR MACHINE)\n* 4-NAIVE BAYES CLASSIFICATION\n* 5-DECISION TREE CLASSIFICATION\n* 6-RANDOM FOREST CLASSIFICATION","5970dbbc":"# UNSUPERVISED LEARNING \n* K_MEANS CLUSTERING\n* HIERARCHY\n* T - Distributed Stochastic Neighbor Embedding (T - SNE)\n* PRINCIPLE COMPONENT ANALYSIS (PCA)","b3e4f0ca":"### STANDARDIZATION","23f8f7c3":"### 1- K-NEAREST NEIGHBORS (KNN)","7f2feff1":"### 3- T - Distributed Stochastic Neighbor Embedding (T - SNE)\n","f8c3e6c5":"### 4-  PRINCIPLE COMPONENT ANALYSIS (PCA)","0768d62e":"### 2-HIERARCHY","ece6eda6":"## Let's normalize the data","65e5b248":"### 1-K_MEANS CLUSTERING","9fada00d":"### 5- DECICISION TREE CLASSIFICATION ","e6be4710":"### 3- SVM(SUPPORT VECTOR MACHINE)","71231f0b":"### 6- RANDOM FOREST CLASSIFICATION","d1e9cf55":"### 2- LOGISTIC REGRESSION"}}