{"cell_type":{"ff3ca5cf":"code","77e876d7":"code","00f93389":"code","e2c310ed":"code","c03e7773":"code","bd6e8988":"markdown","e452e24a":"markdown","b6423a6a":"markdown","05e8c0e9":"markdown"},"source":{"ff3ca5cf":"import os\nimport matplotlib.pyplot as plt\n\n#for loading and visualizing audio files\nimport librosa\nimport librosa.display\n\n#to play audio\nimport IPython.display as ipd\n\naudio_fpath = \"..\/input\/audio\/audio\/16000\/\"\naudio_clips = os.listdir(audio_fpath)\nprint(\"No. of .wav files in audio folder = \",len(audio_clips))","77e876d7":"x, sr = librosa.load(audio_fpath+audio_clips[2], sr=16000)\n\nprint(type(x), type(sr))\nprint(x.shape, sr)","00f93389":"plt.figure(figsize=(14, 5))\nlibrosa.display.waveplot(x, sr=sr)","e2c310ed":"X = librosa.stft(x)\nXdb = librosa.amplitude_to_db(abs(X))\nplt.figure(figsize=(14, 5))\nlibrosa.display.specshow(Xdb, sr=sr, x_axis='time', y_axis='hz')\nplt.colorbar()","c03e7773":"plt.figure(figsize=(14, 5))\nlibrosa.display.specshow(Xdb, sr=sr, x_axis='time', y_axis='log')\nplt.colorbar()","bd6e8988":"## Step-2: Load audio file and visualize its waveform (using librosa)","e452e24a":"## Step-1: Let's import all the required libraries","b6423a6a":"## Step-3: Convert the audio waveform to spectrogram","05e8c0e9":"## Step-4: Applying log transformation on the loaded audio signals"}}