{"cell_type":{"65f3f4d5":"code","d704f062":"code","b3effda2":"code","90193812":"code","adf04fce":"code","0c1bd9f1":"code","9d30b341":"code","b80873ed":"code","1b243cf0":"code","6561c359":"code","5a38873e":"code","9e312aa4":"code","06d7678d":"code","eb6f37bd":"code","6ddd8f62":"code","fb0e6740":"code","943a7f80":"code","a15f8bd2":"code","4eb0589f":"code","9f72a648":"code","3ba6068b":"code","7f90731a":"code","bcdff2e3":"code","8ee4bfbe":"code","4e94b32e":"code","58aed818":"code","4f05a869":"code","08f103bd":"code","de835ba6":"code","d00503f6":"code","011325d8":"code","d9b2ca1c":"code","b139d92e":"code","1771e43c":"code","4d0c9e46":"code","adcb08bc":"code","27256357":"code","1cbf6b6e":"code","362c4fe3":"code","47f45bca":"code","e28aa41e":"code","4327d0a3":"code","cfd45015":"code","9491388a":"code","abc848c3":"code","026cbe34":"code","aafb3441":"code","6542e2dc":"code","61a3c433":"code","3191e8c2":"code","32950855":"code","906dee30":"code","9f6f612d":"code","dcda59cf":"markdown","b2eb8d08":"markdown","ba2704d8":"markdown","3d7ae5e9":"markdown","48696c35":"markdown","3fdd939d":"markdown","dca459e4":"markdown","a7080a2d":"markdown","2bcd1305":"markdown","35fb52bd":"markdown","acbace36":"markdown","2e568c10":"markdown","1ba51552":"markdown","70a856ce":"markdown"},"source":{"65f3f4d5":"!pip3 install pandas","d704f062":"!pip install --upgrade pip\n!pip install jupyter","b3effda2":"!pip install pandas","90193812":"pip install matplotlib","adf04fce":"!pip3 install matplotlib\n!pip install --upgrade pip","0c1bd9f1":"pip install -U scikit-learn scipy matplotlib","9d30b341":"import numpy as np # library to handle data in a vectorized manner\n\nimport pandas as pd # library for data analsysis\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\n\nimport json # library to handle JSON files\n\n#!conda install -c conda-forge geopy --yes # uncomment this line if you haven't completed the Foursquare API lab\nfrom geopy.geocoders import Nominatim # convert an address into latitude and longitude values\n\nimport requests # library to handle requests\nfrom pandas.io.json import json_normalize # tranform JSON file into a pandas dataframe\n\n# Matplotlib and associated plotting modules\nimport matplotlib.cm as cm\nimport matplotlib.colors as colors\n\n# import k-means from clustering stage\nfrom sklearn.cluster import KMeans\n\n#!conda install -c conda-forge folium=0.5.0 --yes # uncomment this line if you haven't completed the Foursquare API lab\nimport folium # map rendering library\n\nprint('Libraries imported.')","b80873ed":"df = pd.read_csv(\"D:\\Coursera\\Capstone_project\\dubai-restaurant.csv\")\n","1b243cf0":"len(df)","6561c359":"df.shape","5a38873e":"df.head()","9e312aa4":"df.info()","06d7678d":"newdf = df[['name','address']]","eb6f37bd":"df[\"name\"].value_counts","6ddd8f62":"df[~df.name.str.contains(r'\\d')] # \\d removes the numbers 0-9\n","fb0e6740":"df = df[~df.name.str.contains(r'\\d')]","943a7f80":"newdf = df[['name','address','location','subCategory','lat','lng','reviews']]","a15f8bd2":"len(newdf) # Number of rows once the invalid values removed from the Restaurant Name","4eb0589f":"newdf.head()","9f72a648":"newdf6 =df1[df1['address'] == 'Bur Dubai']\nnewdf6.head()\n","3ba6068b":"plt.title (\"Most popular cuisines in Burdubai area\")\nplt.xlabel(\"Type of shop\")\nplt.ylabel(\"location\")\ngroups = newdf6.groupby(['subCategory','address']).size().nlargest(10)\ngroups.plot.bar()\nplt.show()","7f90731a":"newdf7 =df1[df1['address'] == 'Karama']\nnewdf7.head()\n","bcdff2e3":"plt.title (\"Most popular cuisines in Karama area\")\nplt.xlabel(\"Type of shop\")\nplt.ylabel(\"location\")\ngroups = newdf7.groupby(['subCategory','address']).size().nlargest(10)\ngroups.plot.bar()\nplt.show()","8ee4bfbe":"newdf1 = df1[['name','address','subCategory','reviews']]\nnewdf1.head()","4e94b32e":"newdf2 = newdf1['subCategory'] =='Korean Restaurant'\nnewdf3 = newdf1[newdf2]\nprint(newdf3)\nlen(newdf3)","58aed818":"import json\nimport requests\nimport itertools    \nurls = [ \n'http:\/\/tour-pedia.org\/api\/getReviewsByPlaceId?placeId=115230'\n,'http:\/\/tour-pedia.org\/api\/getReviewsByPlaceId?placeId=115911'\n,'http:\/\/tour-pedia.org\/api\/getReviewsByPlaceId?placeId=115921'\n,'http:\/\/tour-pedia.org\/api\/getReviewsByPlaceId?placeId=116047'\n,'http:\/\/tour-pedia.org\/api\/getReviewsByPlaceId?placeId=117054'\n,'http:\/\/tour-pedia.org\/api\/getReviewsByPlaceId?placeId=117911'\n,'http:\/\/tour-pedia.org\/api\/getReviewsByPlaceId?placeId=118509'\n,'http:\/\/tour-pedia.org\/api\/getReviewsByPlaceId?placeId=120572'\n,'http:\/\/tour-pedia.org\/api\/getReviewsByPlaceId?placeId=121105'\n,'http:\/\/tour-pedia.org\/api\/getReviewsByPlaceId?placeId=121448'\n,'http:\/\/tour-pedia.org\/api\/getReviewsByPlaceId?placeId=127322'\n]\n#print (len(urls))\nfor url in urls:\n    res = requests.get(url)\n    input_dict = res.json()\n    output_dict = [ search['text'] for search in input_dict ] \n    dump = output_dict\n    #d = dict(itertools.zip_longest(*[iter(dump)] * 2, fillvalue=\"\"))\n    #d = dump.count('Good')\n    #print(d)\n    print(\"The Reviews of the Korean Restaurant : \" + json.dumps(dump)) \n    print(url)\n            ","4f05a869":"newdf8 =df1[df1['subCategory'] == 'BBQ Joint']\nnewdf8.head(50)\n\n# Note : Data not sufficient to derive the Top selling restaurant\n","08f103bd":"len(newdf8)","de835ba6":"newdf5 =df1[df1['subCategory'] == 'Donut Shop']\nnewdf5.head()\n","d00503f6":"plt.title (\"Top selling Donut shops in Dubai\")\nplt.xlabel(\"Name of the shop\")\nplt.ylabel(\"Donut Shop\")\ngroups = newdf5.groupby(['name','subCategory']).size().nlargest(10)\ngroups.plot.bar()\nplt.show()","011325d8":"newdf4 =df1[df1['subCategory'] == 'Coffee Shop']\nnewdf4.head()\n","d9b2ca1c":"plt.title (\"Most Popular places for coffee shop\")\nplt.xlabel(\"Locations\")\nplt.ylabel(\"Coffee shops\")\ngroups = newdf4.groupby(['address','subCategory']).size().nlargest(10)\ngroups.plot.bar()\nplt.show()","b139d92e":"address = 'Dubai, UAE'\n\ngeolocator = Nominatim(user_agent=\"ny_explorer\")\nlocation = geolocator.geocode(address)\nlatitude = location.latitude\nlongitude = location.longitude\nprint('The geograpical coordinate of dubai City are {}, {}.'.format(latitude, longitude))","1771e43c":"# create map of dubai using latitude and longitude values\nmap_dubai = folium.Map(location=[latitude, longitude], zoom_start=10)\n\nX = newdf['lat']\nY = newdf['lng']\nZ = np.stack((X,Y), axis=1)\n\nkmeans = KMeans(n_clusters=5 ,random_state=0).fit(Z)\n\nclusters = kmeans.labels_colors =['red','green','blue','yellow','orange']\n\n\n# add markers to map\nfor lat, lng, location,name in zip(newdf['lat'], newdf['lng'], newdf['location'],newdf['name']):\n    label = '{}, {}'.format(name, location)\n    label = folium.Popup(label, parse_html=True)\n    folium.CircleMarker(\n        [float(lat),float(lng)],\n        radius=5,\n        tiles='Stamen Toner',\n        popup=label,\n        color='blue',\n        fill=True,\n        fill_color='#FFBA00',\n        fill_opacity=0.7).add_to(map_dubai)  \n    \nmap_dubai","4d0c9e46":"import matplotlib.pyplot as plt\nplt.figure(figsize=(9,5), dpi=100)\nplt.title (\"Locations which contains more Restaurants in Dubai\")\n\ng.plot.bar()\n\nplt.xlabel(\"Locations\")\nplt.ylabel(\"Restaurants\")\nplt.show()","adcb08bc":"mirdif_data = newdf[newdf['address'] == 'Mirdif City Center']\nmirdif_data.head()","27256357":"address = 'Mirdif City Center'\n\ngeolocator = Nominatim(user_agent=\"ny_explorer\")\nlocation = geolocator.geocode(address)\nlatitude = location.latitude\nlongitude = location.longitude\nprint('The geograpical coordinate of Mirdif are {}, {}.'.format(latitude, longitude))","1cbf6b6e":"mirdif_dubai = folium.Map(location=[25.21598125, 55.40746704313602], zoom_start=20)\n\nX = newdf['lat']\nY = newdf['lng']\nZ = np.stack((X,Y), axis=1)\n\nkmeans = KMeans(n_clusters=5 ,random_state=0).fit(Z)\n\nclusters = kmeans.labels_colors =['red','green','blue','yellow','orange']\n\n\n# add markers to map\nfor lat, lng, location,name in zip(newdf['lat'], newdf['lng'], newdf['location'],newdf['name']):\n    label = '{}, {}'.format(name, location)\n    label = folium.Popup(label, parse_html=True)\n    folium.CircleMarker(\n        [float(lat),float(lng)],\n        radius=5,\n        tiles='Stamen Toner',\n        popup=label,\n        color='blue',\n        fill=True,\n        fill_color='#FFBA00',\n        fill_opacity=0.7).add_to(mirdif_dubai)  \n    \nmirdif_dubai","362c4fe3":"df1 = pd.read_csv(\"D:\\Coursera\\Capstone_project\\dubai-restaurant.csv\")\ndf1.head()","47f45bca":"mirdif_data = newdf[newdf['address'] == 'Mirdif City Center']\nmirdif_data.head()","e28aa41e":"CLIENT_ID = 'SPNAJ0RKMSD3UXALBEXB0GAHGJNMFEV0J55E4EAHT4YHH4WP'\nCLIENT_SECRET = 'OUGHASTBIJTODM0H3F2BFTIF01KT314I5GOKS0TWORNOLCZQ' # your Foursquare Secret\nVERSION = '20180605' # Foursquare API version\n\nprint('Your credentails:')\nprint('CLIENT_ID: ' + CLIENT_ID)\nprint('CLIENT_SECRET:' + CLIENT_SECRET)","4327d0a3":"def getNearbyVenues(names, latitudes, longitudes, radius=500):\n    \n    venues_list=[]\n    for name, lat, lng in zip(names, latitudes, longitudes):\n        print(name)\n            \n        # create the API request URL\n        url = 'https:\/\/api.foursquare.com\/v2\/venues\/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}'.format(\n            CLIENT_ID, \n            CLIENT_SECRET, \n            VERSION, \n            lat, \n            lng, \n            radius, \n            )\n            \n        # make the GET request\n        results = requests.get(url).json()[\"response\"]['groups'][0]['items']\n        \n        # return only relevant information for each nearby venue\n        venues_list.append([(\n            name, \n            lat, \n            lng, \n            v['venue']['name'], \n            v['venue']['location']['lat'], \n            v['venue']['location']['lng'],  \n            v['venue']['categories'][0]['name']) for v in results])\n\n    nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n    nearby_venues.columns = ['Neighborhood', \n                  'Neighborhood Latitude', \n                  'Neighborhood Longitude', \n                  'Venue', \n                  'Venue Latitude', \n                  'Venue Longitude', \n                  'Venue Category']\n    \n    return(nearby_venues)\n                                                  ","cfd45015":"mirdif_venues = getNearbyVenues(names=mirdif_data['name'],\n                                   latitudes=mirdif_data['lat'],\n                                   longitudes=mirdif_data['lng']\n                                  )","9491388a":"print(mirdif_venues.shape)\nmirdif_venues.head()","abc848c3":"mirdif_venues.groupby('Venue').count()","026cbe34":"print('There are {} uniques categories.'.format(len(mirdif_venues['Venue Category'].unique())))","aafb3441":"mirdif_onehot = pd.get_dummies(mirdif_venues[['Venue Category']], prefix=\"\", prefix_sep=\"\")\n\n# add neighborhood column back to dataframe\nmirdif_onehot['Neighborhood'] = mirdif_venues['Neighborhood'] \n\n# move neighborhood column to the first column\nfixed_columns = [mirdif_onehot.columns[-1]] + list(mirdif_onehot.columns[:-1])\nmirdif_onehot = mirdif_onehot[fixed_columns]\n\nmirdif_onehot.head()","6542e2dc":"mirdif_onehot.shape","61a3c433":"mirdif_grouped = mirdif_onehot.groupby('Neighborhood').mean().reset_index()\nmirdif_grouped","3191e8c2":"mirdif_grouped.shape","32950855":"num_top_venues = 5\n\nfor hood in mirdif_grouped['Neighborhood']:\n    print(\"----\"+hood+\"----\")\n    temp = mirdif_grouped[mirdif_grouped['Neighborhood'] == hood].T.reset_index()\n    temp.columns = ['venue','freq']\n    temp = temp.iloc[1:]\n    temp['freq'] = temp['freq'].astype(float)\n    temp = temp.round({'freq': 2})\n    print(temp.sort_values('freq', ascending=False).reset_index(drop=True).head(num_top_venues))\n    print('\\n')","906dee30":"def return_most_common_venues(row, num_top_venues):\n    row_categories = row.iloc[1:]\n    row_categories_sorted = row_categories.sort_values(ascending=False)\n    \n    return row_categories_sorted.index.values[0:num_top_venues]","9f6f612d":"num_top_venues = 10\n\nindicators = ['st', 'nd', 'rd']\n\n# create columns according to number of top venues\ncolumns = ['Neighborhood']\nfor ind in np.arange(num_top_venues):\n    try:\n        columns.append('{}{} Most Common Venue'.format(ind+1, indicators[ind]))\n    except:\n        columns.append('{}th Most Common Venue'.format(ind+1))\n\n# create a new dataframe\nneighborhoods_venues_sorted = pd.DataFrame(columns=columns)\nneighborhoods_venues_sorted['Neighborhood'] = mirdif_grouped['Neighborhood']\n\nfor ind in np.arange(mirdif_grouped.shape[0]):\n    neighborhoods_venues_sorted.iloc[ind, 1:] = return_most_common_venues(mirdif_grouped.iloc[ind, :], num_top_venues)\n\nneighborhoods_venues_sorted.head()","dcda59cf":"<h2> 3.Top Selling BBQ restaurants in Dubai <h2>","b2eb8d08":"<h3> Map to view the restaurant clusters <h3>","ba2704d8":"<h1> 1. Introduction Section <h1>\n<h2> Discussion on the business problem <h2>\n<h2> Description of the Problem and Background<h2>\n    <h3>About :<h3>\n    <h4> \n        The Battle of Neighborhoods to solve the business problem about the Top cuisines and Specific category in the specific area or the area in which the people wish to visit in Dubai.\n        \nUnited Arab Emirates (UAE) state is located on the eastern coast of the Arabic Peninsular, in the southwest corner of the Arabian Gulf. Renowned, worldwide, as a booming centre of international trade and innovation, Dubai has fast become one of the world\u2019s most popular tourist destinations. Only in Dubai can one gaze upon, and travel up, the world\u2019s largest freestanding structure (the Burj Khalifa), shop in both exclusive designer malls and traditional trade souks and indulge in feasts inspired by the flavours of the world while staying in a 7-star hotel!\n\nDubai is the largest and most populous city in the UAE. There are approximately 2,780,000 residents from over 200 nationalities, plus countless tourists and traders on any given day! The state-of-the-art technology and infrastructure, tax-free living and a strategic location in the centre of the major trading continents, make Dubai the ideal to place to do business. The by-product of this is a dynamic prosperity\u2014the reason that Dubai is one of the leading luxury holiday destinations in the world! Extravagance abounds in this captivating city-state. There is a rich Arabic culture that underpins local life in the city, but all are welcome and encouraged to explore and enjoy Dubai to the absolute fullest! <h4>\n    \n    \n    \n<h2> Business Problem: <h2>\n\n<h4>To find out the best restaurants and different cuisines to enjoy varity of the food in the specific location\n    \n1.Most Popular cuisines in Burduabi Area Karama and\n\n2.Popular Korean restaurants\n    \n3.Top BBQ restaurants in Dubai\n    \n4.Best Donut restaurant \n    \n5.Popular Coffee Shops <h4>\n    \n<h2> Data <h2>\n    \n    \n Description of the data and its sources that will be used to solve the problem\n \n Description of the Data:\n \n Data is picked from the Kaggle dataset which includes the below details :\n \n\u2022\tAddress\n\n\u2022\tcategory\n\n\u2022\tid\n\n\u2022\tlat\n\n\u2022\tlng\n\n\u2022\tlocation\n\n\u2022\tname\n\n\u2022\toriginalId\n\n\u2022\tpolarity\n\n\u2022\tsubCategory\n\n\u2022\tdetails\n\n\u2022\treviews\n\n\n<h2> How the data will be used to solve the problem <h2>\n    \n\u2022\tUsing FourSquare API we will find all venues for each neighborhood.\n\n\u2022\tFilter out all venues that are nearby by locality.\n\n\u2022\tUsing aggregative rating for each resturant to find the best places.\n\n\u2022\tVisualize the Ranking of neighborhoods using folium library(python)\n\n","3d7ae5e9":"<h2> 2.Popular Korean restaurants <h2>","48696c35":"<h3> Based on the above plot Top most place is Mirdiff city Center and  simplify the above map and segment and cluster only the neighborhoods in Mirdif City Center. So let's slice the original dataframe and create a new dataframe of the new data. <h3>","3fdd939d":"<h2> 5.Popular Coffee Shops <h2>","dca459e4":"<h3> Exploring Dataset <h3>","a7080a2d":"<h2> 4. Best Donut shops <h2>","2bcd1305":"<h3 > Displaying Data Types <h3>","35fb52bd":"<h3>Top 10 locations which has more Restaurants to visit <h3>","acbace36":"<h3 >1.1 Read Data <h3>","2e568c10":"<h2> 1.Most Popular cuisines in Burduabi Area Karama area <h2>","1ba51552":"<h3 > Getting to Know Your Data <h3>","70a856ce":"<h3> Cleaning Data <h3>\n    \n<h3> Invalid Values <h3>\n<h4> Removing the Restaurant names which containts numbers <h4>"}}