{"cell_type":{"43aa93b6":"code","e15fbf1b":"code","4fceeefb":"code","90f222b0":"code","b9c9680a":"code","73cb7d46":"code","c5d6e04b":"code","e1ba00f3":"code","b1f48c42":"code","9e1d9937":"code","979430d4":"markdown","932679ae":"markdown","4648f7c1":"markdown","d0852304":"markdown","cdc55159":"markdown","32b2ec0c":"markdown","3f471d2e":"markdown","81874d49":"markdown","6b5fb0f9":"markdown","db7f164c":"markdown","61e8ec9e":"markdown"},"source":{"43aa93b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e15fbf1b":"import warnings\nwarnings.filterwarnings(\"ignore\")","4fceeefb":"dataf=pd.read_csv(\"..\/input\/github-logs\/git_log_excerpt.csv\")\ndataf","90f222b0":"#Reading the log file\ngit_log = pd.read_csv(\"..\/input\/github-logs\/git.log\",sep=\"#\",encoding='latin-1',header=None,names=['timestamp', 'author'])\ngit_log","b9c9680a":"# calculating number of commits\nnumber_of_commits=git_log[\"timestamp\"].count()\n# calculating number of authors\nnumber_of_authors=git_log[\"author\"].value_counts(dropna=True).count()\n# printing out the results\nprint(\"%s authors committed %s code changes.\" % (number_of_authors, number_of_commits))","73cb7d46":"# Identifying the top 10 authors\ntop_10_authors = git_log['author'].value_counts().head(10)\n\n# Listing contents of 'top_10_authors'\ntop_10_authors.head(10)","c5d6e04b":"# converting the timestamp column\ngit_log['timestamp'] = pd.to_datetime(git_log['timestamp'], unit=\"s\")\n\n# summarizing the converted timestamp column\ngit_log['timestamp'].describe()","e1ba00f3":"# determining the first real commit timestamp\nfirst_commit_timestamp = git_log['timestamp'].iloc[-1]\n\n# determining the last sensible commit timestamp\nlast_commit_timestamp = pd.to_datetime('today')\n\n# filtering out wrong timestamps\ncorrected_log=git_log[(git_log['timestamp']>=first_commit_timestamp) & (git_log['timestamp']<=last_commit_timestamp)]\n\n# summarizing the corrected timestamp column\ncorrected_log['timestamp'].describe()","b1f48c42":" #Counting the no. commits per year\ncommits_per_year = corrected_log.groupby(pd.Grouper(key='timestamp', freq='AS')).count()\n\n# Listing the first rows\ncommits_per_year.head()","9e1d9937":"# Setting up plotting in Jupyter notebooks\n%matplotlib inline\n\n# plot the data\ncommits_per_year.plot(kind='line',title='Commits per year',legend=False);","979430d4":"## Conclusion\n> We can observe that there is no decrease of development activity at sight!\n**It is very clear from the graph that the year with most commits to linux is 2016.**","932679ae":"![linux.png](attachment:linux.png)","4648f7c1":"## Introduction\nThe Linux kernel is the heart of some Linux distributions like Debian, Ubuntu or CentOS. Our dataset at hand contains the history of kernel development of almost 13 years (early 2005 - late 2017). Let's get some insights into the work of the development efforts by\n> 1. identifying the TOP 10 contributors and\n> 2. visualizing the commits over the years.","d0852304":"## Grouping commits per year\n> Let's see how the development activity has increased over time","cdc55159":"# **<center> <span style=\"color:crimson;font-family:Lucida Console;\"> EXPLORING THE EVOLUTION OF LINUX <\/span> <\/center>**","32b2ec0c":"## Treating wrong timestamps\n> Some contributors had their operating system's time incorrectly set when they committed to the repository. We'll clean up the timestamp column by dropping the rows with the incorrect timestamps.","3f471d2e":"## Wrangling the data\n> For our analysis, we want to visualize the contributions over time. For this, we use the information in the timestamp column to create a time series-based column.","81874d49":"## Reading the dataset","6b5fb0f9":"## Quick Overview\n> The dataset contains the information about every single code contribution (a \"commit\") to the Linux kernel over the last 13 years. We'll first take a look at the number of authors and their commits to the repository.","db7f164c":"## Visualizing the history of Linux\n> Let's plot out these counts to better see how the development effort on Linux has increased over the the last few years.","61e8ec9e":"## Finding the Top 10 Contributors\n> Let's take a look at the TOP 10 authors with the most commits."}}