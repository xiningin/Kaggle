{"cell_type":{"2b3e54b8":"code","b296aede":"code","8032678f":"code","afa03e46":"code","659a319e":"code","d2620a4e":"code","ab2e45ac":"code","a3395fde":"code","4878c035":"code","813b564d":"code","4e65cd86":"code","935ca553":"code","a7dfbe5c":"code","b1819a56":"code","53c63e3f":"code","5519773e":"code","7cb9bb6e":"code","5117f396":"code","826f6906":"code","b819b305":"code","33c84f12":"code","f3cdd998":"code","e99b5fbd":"code","0eb5988d":"code","45a5b64a":"code","b17b4210":"code","e8bcf418":"code","8db78cf6":"code","38eec74c":"code","93a9b79a":"code","007e66e7":"code","e75e6a5a":"code","d0ac1d63":"code","b562927d":"code","d46970bc":"code","e3285628":"markdown","8db50502":"markdown"},"source":{"2b3e54b8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b296aede":"## Defining common tools for IDA\n\n## Data Preview Tools\ndef clean_from_null_empty(df, col):\n    return df[col][~( (df[col].isnull()) | (df[col] == ''))]\n\ndef ida_util(df, details={}):\n    total_rows = df.shape[0]\n    ida_cols = []\n    for col in df:\n        cleaned_series = clean_from_null_empty(df, col)\n        total_null = cleaned_series.count()\n        col_detail = details.get(\"col\", {\n            \"type\": \"\",\n            \"description\": \"\",\n            \"actionable\": \"\"\n        })\n        ida_cols.append({\n            \"col\": col,\n            \"totalNull\": total_rows - total_null,\n            \"totalNotNull\": total_null,\n            \"totalRows\": total_rows,\n            \"totalUnique\": cleaned_series.unique().shape[0],\n            **col_detail\n        })\n    \n    df_ida = pd.DataFrame(ida_cols)\n    \n    return df_ida","8032678f":"# Read data scripts\nfiles = ['professionals.csv', 'groups.csv', 'comments.csv', 'school_memberships.csv', 'tags.csv', 'emails.csv', 'group_memberships.csv', 'answers.csv', 'students.csv', 'matches.csv', 'questions.csv', 'tag_users.csv', 'tag_questions.csv']\nfor file in files:\n    print(file.replace(\".csv\", \"\") + \" = \" + \"pd.read_csv(\\\"..\/input\/{}\\\")\".format(file))","afa03e46":"professionals = pd.read_csv(\"..\/input\/professionals.csv\")\ngroups = pd.read_csv(\"..\/input\/groups.csv\")\ncomments = pd.read_csv(\"..\/input\/comments.csv\")\nschool_memberships = pd.read_csv(\"..\/input\/school_memberships.csv\")\ntags = pd.read_csv(\"..\/input\/tags.csv\")\nemails = pd.read_csv(\"..\/input\/emails.csv\")\ngroup_memberships = pd.read_csv(\"..\/input\/group_memberships.csv\")\nanswers = pd.read_csv(\"..\/input\/answers.csv\")\nstudents = pd.read_csv(\"..\/input\/students.csv\")\nmatches = pd.read_csv(\"..\/input\/matches.csv\")\nquestions = pd.read_csv(\"..\/input\/questions.csv\")\ntag_users = pd.read_csv(\"..\/input\/tag_users.csv\")\ntag_questions = pd.read_csv(\"..\/input\/tag_questions.csv\")","659a319e":"questions.head()","d2620a4e":"questions.describe()","ab2e45ac":"answers.head()","a3395fde":"answers.describe()","4878c035":"group_memberships.head()","813b564d":"group_memberships.describe()","4e65cd86":"# professionals[\"professionals_location\"].notnull().sum()\n# define null: null or NaN\n# define a df: totalNull, totalNotNull, totalUniqueValuesExcludingNaN, type, description, actionable","935ca553":"# def clean_from_null_empty(df, col):\n#     return df[col][~( (df[col].isnull()) | (df[col] == ''))]\n\n# def ida_util(df, details={}):\n#     total_rows = df.shape[0]\n#     ida_cols = []\n#     for col in df:\n#         cleaned_series = clean_from_null_empty(df, col)\n#         total_null = cleaned_series.count()\n#         col_detail = details.get(\"col\", {\n#             \"type\": \"\",\n#             \"description\": \"\",\n#             \"actionable\": \"\"\n#         })\n#         ida_cols.append({\n#             \"col\": col,\n#             \"totalNull\": total_rows - total_null,\n#             \"totalNotNull\": total_null,\n#             \"totalRows\": total_rows,\n#             \"totalUnique\": cleaned_series.unique().shape[0],\n#             **col_detail\n#         })\n    \n#     df_ida = pd.DataFrame(ida_cols)\n    \n#     return df_ida","a7dfbe5c":"ida_util(professionals)","b1819a56":"df = pd.DataFrame({\n    \"a\": [np.NaN, \"\", 1]\n})\nseries = df[\"a\"]\nseries = series[~( (series.isnull()) | (series == ''))]\nseries","53c63e3f":"professionals[\"professionals_location\"].unique().shape","5519773e":"professionals.head()","7cb9bb6e":"professionals.describe()","5117f396":"groups.head()","826f6906":"groups.describe()","b819b305":"comments.head()","33c84f12":"comments.describe()","f3cdd998":"school_memberships.head()","e99b5fbd":"school_memberships.describe()","0eb5988d":"tags.head()","45a5b64a":"tags.describe()","b17b4210":"emails.head()","e8bcf418":"emails.describe()","8db78cf6":"students.head()","38eec74c":"students.describe()","93a9b79a":"matches.head()","007e66e7":"matches.describe()","e75e6a5a":"tag_users.head()","d0ac1d63":"tag_users.describe()","b562927d":"tag_questions.head()","d46970bc":"tag_questions.describe()","e3285628":"## ** 2. Previewing Data Content **","8db50502":"## **1. Data Reading**"}}