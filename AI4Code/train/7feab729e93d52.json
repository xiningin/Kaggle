{"cell_type":{"d558d1e5":"code","ef1744e1":"code","0603dbc9":"code","32f3f6b5":"code","4661fa6e":"code","9bba8467":"code","6e7c2a4a":"code","394ac20d":"code","e4277678":"code","37fc91fb":"code","073feed6":"code","4d486e7d":"code","b7d1a352":"code","c767f262":"code","8d18f094":"code","18933d06":"code","fa241342":"code","625d29ac":"code","e8b23e09":"code","7397d07c":"code","4ce7e68f":"code","50e06202":"code","aebb9c55":"code","e0e412fb":"code","4095c943":"code","07fa45cb":"code","29da0795":"code","1a390043":"code","efecaac7":"code","d736f762":"code","60cb57db":"code","7940ecf5":"code","75ebbbee":"code","eabb2383":"code","77e96299":"code","725f3a7e":"code","fbf5ba98":"code","8978f555":"code","9c77868d":"code","b8c04549":"code","6dadba65":"code","40a01c71":"code","57e02c30":"code","6c38aabf":"code","8bfe4686":"code","16b9efee":"code","134726c5":"code","2e65d861":"code","28b2ceee":"code","b272788d":"code","d53d16a4":"code","768ed806":"code","8597da41":"code","b927bfc5":"code","13665320":"code","cd4fc1d6":"code","544b3746":"code","ec2d2d19":"markdown","7ad9415e":"markdown","3471cf2a":"markdown","7d46a380":"markdown","46f0acf7":"markdown","e6bdb99a":"markdown","85eb8342":"markdown","02188848":"markdown","d838ad85":"markdown","e3b64f44":"markdown","1d8c3e6c":"markdown","9211185a":"markdown","2f388d8e":"markdown","7088ff38":"markdown","80cbc25e":"markdown","1f6cf9cd":"markdown","462f4088":"markdown","4f2d3eb8":"markdown","1a7caed8":"markdown","012f83a3":"markdown","c9aa675c":"markdown","19f9e0c4":"markdown","151e4957":"markdown","67ce0117":"markdown"},"source":{"d558d1e5":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ef1744e1":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0603dbc9":"# Local\n# df_train = pd.read_csv('Data\/iot_device_train.csv')\n# df_test = pd.read_csv('Data\/iot_device_test.csv')\n\n# Kaggle\ndf_train = pd.read_csv('\/kaggle\/input\/iot-device-identification\/iot_device_train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/iot-device-identification\/iot_device_test.csv')\ndf_train.head()","32f3f6b5":"df_test.head()","4661fa6e":"df_train","9bba8467":"df_test","6e7c2a4a":"plt.figure(figsize=(20,10))\nplt.title(\"Training set device categroy\")\nsns.countplot(data=df_train, x='device_category')","394ac20d":"plt.figure(figsize=(20,10))\nplt.title(\"Test set device categroy\")\nsns.countplot(data=df_test, x='device_category')","e4277678":"df = pd.concat([df_train,df_test],ignore_index=True)","37fc91fb":"df","073feed6":"plt.figure(figsize=(20,10))\nplt.title(\"Count of device categroy\")\nsns.countplot(data=df, x='device_category')","4d486e7d":"df.info()","b7d1a352":"df.describe().transpose()","c767f262":"to_remove = []\n\nfor col in df.columns:\n    if len(df[col].unique()) == 1:\n        to_remove.append(col)\n","8d18f094":"to_remove","18933d06":"df = df.drop(to_remove, axis=1)","fa241342":"df.describe()","625d29ac":"plt.figure(figsize=(20,20)),\nsns.heatmap(data=pd.get_dummies(df).corr());","e8b23e09":"df.columns","7397d07c":"X = df.drop('device_category', axis=1)\ny = df['device_category']","4ce7e68f":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","50e06202":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","aebb9c55":"scaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","e0e412fb":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier\nfrom xgboost import XGBClassifier, XGBRFClassifier\nfrom catboost import CatBoostClassifier\nfrom lightgbm import LGBMClassifier","4095c943":"def fit_and_score(models, X_train, X_test, y_train, y_test):\n    np.random.seed(42)\n    \n    model_scores = {}\n    \n    for name, model in models.items():\n        model.fit(X_train,y_train)\n        model_scores[name] = model.score(X_test,y_test)\n\n    model_scores = pd.DataFrame(model_scores, index=['Score']).transpose()\n    model_scores = model_scores.sort_values('Score')\n        \n    return model_scores","07fa45cb":"models = {'LogisticRegression': LogisticRegression(max_iter=10000),\n          'KNeighborsClassifier': KNeighborsClassifier(),\n          'SVC': SVC(),\n          'DecisionTreeClassifier': DecisionTreeClassifier(),\n          'RandomForestClassifier': RandomForestClassifier(),\n          'AdaBoostClassifier': AdaBoostClassifier(),\n          'GradientBoostingClassifier': GradientBoostingClassifier(),\n          'XGBClassifier': XGBClassifier(),\n          'XGBRFClassifier': XGBRFClassifier(),\n          'LGBMClassifier':LGBMClassifier()}","29da0795":"baseline_model_scores = fit_and_score(models, X_train, X_test, y_train, y_test)","1a390043":"baseline_model_scores","efecaac7":"plt.figure(figsize=(20,10))\nsns.barplot(data=baseline_model_scores.sort_values('Score').T)\nplt.title('Baseline Model Precision Score')\nplt.xticks(rotation=90);","d736f762":"from sklearn.model_selection import RandomizedSearchCV\nfrom warnings import filterwarnings","60cb57db":"filterwarnings('ignore')","7940ecf5":"def randomsearch_cv_scores(models, params, X_train, X_test, y_train, y_test):\n    np.random.seed(42)\n    \n    model_rs_scores = {}\n    model_rs_best_param = {}\n    \n    for name, model in models.items():\n        rs_model = RandomizedSearchCV(model,\n                                     param_distributions=params[name],\n                                      cv=5,\n                                     n_iter=20,n_jobs=1,\n                                     verbose=0)        \n        rs_model.fit(X_train,y_train)\n        model_rs_scores[name] = rs_model.score(X_test,y_test)\n        model_rs_best_param[name] = rs_model.best_params_\n        \n    return model_rs_scores, model_rs_best_param","75ebbbee":"models = {'GradientBoostingClassifier': GradientBoostingClassifier()}\nparams = {'GradientBoostingClassifier':{'loss':['deviance','exponential'],\n                                       'learning_rate': [0.001,0.01,0.1,0.5,1],\n                                        'n_estimators': [10,30,50,100,200,300],\n                                        'criterion': ['friedman_mse','mse'],\n                                        'min_samples_split':[2,0.1,0.5,0.9,1.0],\n                                        'min_samples_leaf': [1,2,0.1,0.5,0.9,1.0],\n                                        'max_depth': [2,3,5,10,20,50,100],\n                                        'max_features': ['auto','sqrt','log2'],\n                                        'ccp_alpha': [0.0,0.001, 0.01,0.1]\n                                       },\n         }","eabb2383":"model_rs_scores_1, model_rs_best_param_1 = randomsearch_cv_scores(models, params, X_train, X_test, y_train, y_test)","77e96299":"model_rs_scores_1","725f3a7e":"model_rs_best_param_1","fbf5ba98":"params = {'GradientBoostingClassifier':{'loss':['deviance','exponential'],\n                                       'learning_rate': [0.2,0.3,0.5,0.8],\n                                        'n_estimators': [80,90,100,120,140],\n                                        'criterion': ['friedman_mse',],\n                                        'min_samples_split':[2],\n                                        'min_samples_leaf': [0.05,0.1,0.2,0.3],\n                                        'max_depth': [4,5,6,7,8,9],\n                                        'max_features': ['sqrt'],\n                                        'ccp_alpha': [0.0,0.001, 0.005]\n                                       }\n         }","8978f555":"model_rs_scores_2, model_rs_best_param_2 = randomsearch_cv_scores(models, params, X_train, X_test, y_train, y_test)","9c77868d":"model_rs_scores_2","b8c04549":"model_rs_best_param_2","6dadba65":"params = {'GradientBoostingClassifier':{'loss':['deviance'],\n                                       'learning_rate': [0.6,0.7,0.8,0.9],\n                                        'n_estimators': [130,140,150],\n                                        'criterion': ['friedman_mse'],\n                                        'min_samples_split':[2,3,4,5],\n                                        'min_samples_leaf': [0.1,0.15],\n                                        'max_depth': [6,7],\n                                        'max_features': ['sqrt'],\n                                        'ccp_alpha': [0.0,0.001]\n                                       }\n         }","40a01c71":"model_rs_scores_3, model_rs_best_param_3 = randomsearch_cv_scores(models, params, X_train, X_test, y_train, y_test)","57e02c30":"model_rs_scores_3","6c38aabf":"model_rs_best_param_3","8bfe4686":"params = {'GradientBoostingClassifier':{'loss':['deviance'],\n                                       'learning_rate': [0.6,0.7,0.8,0.9],\n                                        'n_estimators': [125,130,135],\n                                        'criterion': ['friedman_mse'],\n                                        'min_samples_split':[5,6,7,8,9],\n                                        'min_samples_leaf': [0.1,0.0],\n                                        'max_depth': [7,8,10,50,100],\n                                        'max_features': ['sqrt'],\n                                        'ccp_alpha': [0.0,0.001]\n                                       }\n         }","16b9efee":"model_rs_scores_4, model_rs_best_param_4 = randomsearch_cv_scores(models, params, X_train, X_test, y_train, y_test)","134726c5":"model_rs_scores_4","2e65d861":"model_rs_scores_3","28b2ceee":"model_rs_best_param_4","b272788d":"from sklearn.metrics import classification_report, plot_confusion_matrix \nfrom sklearn.model_selection import cross_val_score","d53d16a4":"model = GradientBoostingClassifier(n_estimators=125,\n                                   min_samples_split=5,\n                                   min_samples_leaf=0.1, \n                                   max_features='sqrt',\n                                   max_depth = 50,\n                                   loss = 'deviance',\n                                   learning_rate = 0.7,\n                                   criterion='friedman_mse',\n                                   ccp_alpha = 0.0\n                                  )","768ed806":"model.fit(X_train,y_train)\ny_preds = model.predict(X_test)","8597da41":"print(classification_report(y_test,y_preds))","b927bfc5":"plot_confusion_matrix(model,X_test,y_test)","13665320":"def get_cv_score(model, X, y, cv=5):\n    \n    np.random.seed(42)\n    cv_accuracy = cross_val_score(model,X,y,cv=5,\n                         scoring='accuracy')\n    print(f'Cross Validaion accuracy Scores: {cv_accuracy}')\n    print(f'Cross Validation accuracy Mean Score: {cv_accuracy.mean()}')\n      \n    \n    cv_merics = pd.DataFrame({'Accuracy': cv_accuracy.mean()}, index=[0])\n    \n    return cv_merics\n","cd4fc1d6":"cv_merics = get_cv_score(model, X, y, cv=5)","544b3746":"cv_merics","ec2d2d19":"## RS Model 3 GradientBoostingClassifier","7ad9415e":"## Baseline Model Scores","3471cf2a":"## RS Model 1 GradientBoostingClassifier","7d46a380":"the test set data did not contain any water sensor for the labels. \ni will consiser to join the 2 dataset and do a train test split","46f0acf7":"# 1. Problem Definition\n\nHow we can use various python based Machine Learning Model and the given parameters to predict the classification of IOT device?","e6bdb99a":"We will bulid the model based on RS 4 as that provides the best results","85eb8342":"we will remove those columns with one unique value","02188848":"From the baseline modelling we have a top 2 model scores of:\n1. GradientBoostingClassifier \t0.859649\n    \nWe can try tuning the hyperparams to check if the model improves","d838ad85":"# 5. Modelling","e3b64f44":"# 6. Model Evaluation","1d8c3e6c":"## RS Model 2 GradientBoostingClassifier","9211185a":"with an CV accuracy of 0.85. Overall the model performs fairly well, however, the model is having difficulty in predicted the results for lights, socket, and water_sensor.","2f388d8e":"## Data Exporation","7088ff38":"## Random Search CV","80cbc25e":"## Standard Imports","1f6cf9cd":"## Reading the Datasets","462f4088":"## Evalution using cross-validation","4f2d3eb8":"Going to take the following approach:\n\n1. Problem definition\n2. Data\n3. Evaluation\n4. Features\n5. Modelling\n6. Model Evaluation","1a7caed8":"## RS Model 4 GradientBoostingClassifier","012f83a3":"## Model Imports","c9aa675c":"# 2. Data\n\nData from: https:\/\/www.kaggle.com\/fanbyprinciple\/iot-device-identification\n\n# Data source\n\nTaken from chapter 5 of Machine learning cookbook for cyber security.\n\nhttps:\/\/github.com\/PacktPublishing\/Machine-Learning-for-Cybersecurity-Cookbook\/tree\/master\/Chapter05\/IoT%20Device%20Type%20Identification%20Using%20Machine%20Learning","19f9e0c4":"# IOT device identification classification","151e4957":"# 4. Features\n\n## Features \/ inputs\n\n\n    \"\u2026\" - stands for multiple optional names that match the given pattern\n\n\n    \u2026ip, \u2026port\n\n    (4): IP and port of client \/ srver\n\n    packets_\u2026\n\n    (3): Number of packets sent by client \/ server \/ both\n\n    ack_\u2026\n\n    (3): Number of ACK packets sent by client \/ server \/ both\n\n    packetsAB_ratio\n\n    (1): Ratio between packets sent by client and sent by server\n\n    asn_\u2026\n\n    (2): Number of autonomous systems served as client, server\n\n    push_\u2026\n\n    (3): Number of packets with PSH flag sent by client \/ server \/ both\n\n    bytes_\u2026\n\n    (3): Number of bytes sent by client \/ server \/ both\n\n    reset_\u2026\n\n    (3): Number of packets with RST flag sent by client \/ server \/ both\n\n    bytesAB_ratio\n\n    (1): Ratio between number of bytes sent and number of bytes received\n\n    sslcountcertificates\n\n    (1): Number of SSL certificates\n\n    cap_date\n\n    (1): date of data capturing start\n\n    sslcountclient_\u2026\n\n    (6): Client: Number of supported SSL cipher algorithms \/ ciphersuites \/ compressions \/ eliptic curves \/ key exchange algorithms \/ MAC algorithms\n\n    country_\u2026\n\n    (2): Number of countries systems served as client \/ server\n\n    sslcountserver_\u2026\n\n    (6): Server: Number of supported SSL cipher algorithms \/ ciphersuites \/ compressions \/ eliptic curves \/ key exchange algorithms \/ MAC algorithms\n\n    daysTime\n\n    (1): When during the day communication was established\n\n    ssldomserver_ciphersuite\n\n    (1): Number of SSL versions\n\n    dns_alexaRank\n\n    (1): DNS response server Alexa rank\n\n    ssldomserver_compression\n\n    (5): Dominated SSL ciphersuite \/ eliptic curve \/ server name \/ server rank \/ version\n\n    dnscountaddresses\n\n    (4): Number of adresses \/ answer \/ authoritative \/ additional fields in DNS response\n\n    sslhandshakeduration_\u2026\n\n    (10): SSL handshake duration: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    dnscountcanon_names\n\n    (1): Number of canonical names in DNS response\n\n    sslratio\u2026\n\n    (7): Ratio between ssl sessions and: expired certificates \/ client cipher algorithms \/ ciphersuits \/ eliptic curves \/ client key exchange algorithms \/ client MAC algorithms \/ server names\n\n    dns_flag\n\n    (1): DNS response flags combinations\n\n    sslreqbytes_\u2026\n\n    (10): Number of request bytes: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    dnshostname\n\n    (1): DNS host name\n\n    sslrespbytes_\u2026\n\n    (10): Number of response bytes: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    dnsminttl\n\n    (1): DNS response minimal time-to-live\n\n    start\n\n    (1): session start (date-time)\n\n    dnsprebad_requests\n\n    (1): Number of preceding bad DNS responses\n\n    tcpanalysis\u2026\n\n    (6): TCP: Number of packets with Keep Alive packets \/ lost segments \/ packets received out of order \/ retransmitted packets \/ reused ports \/ duplicake ACKs\n\n    dns_time\n\n    (1): Time took to receive DNS response\n\n    ttlA\u2026\n\n    (10): TCP packet time-to-live sent by client: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    dsfield\u2026\n\n    (2): Differentiated Services (DS) field sent by client \/ server\n\n    ttl_\u2026\n\n    (10): TCP packet time-to-live: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    duration\n\n    (1): Session duration\n\n    ttlB\u2026\n\n    (10): TCP packet time-to-live sent by server: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    httpbytes\u2026\n\n    (10): Number of bytes sent by client over HTTP: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy.\n\n    urg_\u2026\n\n    (3): Packets with URG flag sent by client \/ server \/ both\n\n    httpcookiecount\n\n    (1): Total number of cookie values\n\n    weekDay\n\n    (1): day of week (Sunday, Monday, \u2026)\n\n    httpcookievalues_\u2026\n\n    (10): Number of cookie values: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    domain \/ subdomain \/ suffix\n\n    (3): Dminated host's URL: domain \/ subdomain \/ suffix\n\n    httpcount\u2026\n\n    (6): HTTP: Number of hosts \/ unique content types used in request \/ unique response codes \/ unique response content types \/ transactions \/ unique user agents\n\n    isadhttp\n\n    (1): subdomain of HTTP dominated host includes ad-related keywords\n\n    httpdom\u2026\n\n    (8): Dominated HTTP: browser \/ browser version \/ host \/ host Alexa rank \/ operating system \/ operating system version \/ request contetn type \/ response code \/ response contetn type \/\n\n    iscdnhttp\n\n    (1): subdomain of HTTP dominated host includes CDN-related keywords\n\n    httpdomis_bot\n\n    (1): Is most of HTTP connections created by known bot\n\n    iscloudhttp\n\n    (1): subdomain of HTTP dominated host includes cloud-related keywords\n\n    http_GET\n\n    (1): Number of HTTP requests submited with GET method\n\n    is_\u2026\n\n    (3): session protocol is DNS \/ HTTP \/ SSL\n\n    httphas\u2026\n\n    (4): Does HTTP request have a location \/ referrer \/ content type \/ user agent field\n\n    isghttp\n\n    (1): subdomain of HTTP dominated host includes g-related keywords\n\n    httphasrespcontenttype\n\n    (1): Does HTTP response have a content type field\n\n    isimghttp\n\n    (1): subdomain of HTTP dominated host includes image-related keywords\n\n    httpinterarrivel_\u2026\n\n    (10): HTTP request-response inter arrival time: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    ismhttp\n\n    (1): subdomain of HTTP dominated host includes mobile-related keywords\n\n    http_POST\n\n    (1): Number of HTTP requests submited with POST method\n\n    ismakersite_http\n\n    (1): subdomain of HTTP dominated host is of a maker's site\n\n    httpreqbytes_\u2026\n\n    (10): HTTP request bytes: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    ismediahttp\n\n    (1): subdomain of HTTP dominated host includes media-related keywords\n\n    httprespbytes_\u2026\n\n    (10): HTTP response bytes: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    isnumericurl_http\n\n    (1): subdomain of HTTP dominated host is numeric\n\n    httptime\u2026\n\n    (10): Time took to HTTP server to return response: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    isnumericurlwithport_http\n\n    (1): subdomain of HTTP dominated host is numeric plus port name\n\n    label\n\n    (1): malware label\n\n    istvhttp\n\n    (1): HTTP dominated host has TV-related keywords\n\n    labelSS\n\n    (1): malware label\n\n    Bissystem_port\n\n    (1): destination port is in the range of [1, 1023]\n\n    packetinterarrivelA\u2026\n\n    (10): Client packets inter arival time: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    Bisuser_port\n\n    (1): destination port is in the range of [1024, 49151]\n\n    packetinterarrivel_\u2026\n\n    (10): Packets inter arival time: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    Bisdynamicandorprivateport\n\n    (1): destination port is in the range of [49152, 65535]\n\n    packetinterarrivelB\u2026\n\n    (10): Server packets inter arival time: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    Bportis_\u2026\n\n    (10): Destination port is one of recent top 10 most frequent: 80, 23, etc.\n\n    packetsizeA_\u2026\n\n    (10): Client packets size: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    subdomainis\u2026\n\n    (10): subdomain of HTTP dominated host is one of recent top 10 most frequent\n\n    packetsize\u2026\n\n    (10): Packets size: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    domainis\u2026\n\n    (10): domain of HTTP dominated host is one of recent top 10 most frequent\n\n    packetsizeB_\u2026\n\n    (10): Server packets size: Minimum value, quartile 1, average, median (quartile 2), sum, quartile 3, maximum value, standard deviation, variance, entropy\n\n    suffixis\u2026\n\n    (4): suffix of HTTP dominated host is one of recent top 4most frequent: com, net, etc.4most\n    \n## Label \/ output    \n    device_category\n","67ce0117":"# 3. Evaluation\n\nas this is a classification problem, we will use the classification metics for evauluting the model"}}