{"cell_type":{"dea1ffc1":"code","a0ff7344":"code","4c99c6a6":"code","76f593d5":"code","2f84a280":"code","a2d58cd1":"code","e2d6eb5b":"code","1ba8d010":"code","48a05421":"code","8a0403e2":"markdown","79131bfa":"markdown","7144a4d2":"markdown","a12f6066":"markdown","aa885851":"markdown","665de1b8":"markdown","929baf02":"markdown","243febd6":"markdown","2c2745d1":"markdown"},"source":{"dea1ffc1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n\nimport numpy as np # linear algebra\nimport pandas as pd # data orginization tool used for data processing\/cleaning, CSV file I\/O (e.g. pd.read_csv)\n#Importining necceary sklearn libraries\nfrom sklearn.preprocessing import LabelEncoder \nfrom sklearn.tree import DecisionTreeClassifier as skTree\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.tree import export_graphviz\n#These Librares make it significantly easier to create graphs and other visual representations\nimport matplotlib.pyplot as plt\nfrom mlxtend.plotting import plot_decision_regions\nimport graphviz\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n#This code just downloads the dataset from kaggle and stores it as a pandas array \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nmushroom = pd.read_csv('\/kaggle\/input\/mushroom-classification\/mushrooms.csv')\nprint(mushroom)\n# Any results you write to the current directory are saved as output.","a0ff7344":"labelencoder = LabelEncoder()\nfor col in mushroom.columns:\n    mushroom[col] = labelencoder.fit_transform(mushroom[col])\nprint(mushroom)","4c99c6a6":"X = (mushroom.drop('class', axis = 1)).values\ny = (mushroom['class']).values\nprint(X)\nprint(\"----\")\nprint(y)","76f593d5":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.3, random_state = 1, stratify = y)\ntree = skTree(criterion = 'entropy', max_depth = 5, random_state = 3)\nmodel = tree.fit(X_train,y_train)","2f84a280":"dot_data = export_graphviz(tree, out_file=None, feature_names = (mushroom.drop('class', axis = 1)).columns)\ngraph = graphviz.Source(dot_data) \ngraph","a2d58cd1":"pd.crosstab(mushroom['class'],mushroom['gill-color'])","e2d6eb5b":"predict = model.predict(X_test)\n\npd.crosstab(predict,y_test)","1ba8d010":"#percent BAD WRONG\nprint(str(12\/(1251+40+12+1135)*100)+\"% Poisonous Incorrectly Predicted as Edible\")\n","48a05421":"predict = model.predict(X_train)\n\npd.crosstab(predict,y_train)\n","8a0403e2":"creates crosstab for model on test data\n\nRows are predictions in the test data and columns are truth. 1 is poisonous and 0 is edible.\n\nThe model predicts 40 edible mushrooms to be poisonous. And 12 poisonous mushrooms to be edible. By examining the tree above, you can come up with rules that are more accurate.","79131bfa":"creates X and y for sklearn splitting function","7144a4d2":"creates crosstab for model on training data","a12f6066":"The Below code imports neccecary libraries\n","aa885851":"Below, you can see that all mushrooms with a gill-color of \"0\" are poisonous (class \"1\") (the first split), so entropy is 1. This is the biggest number (so it has the biggest impact).","665de1b8":"turns the strings in our data to integers","929baf02":"prints tree","243febd6":"Using a Tree to Classify Whether Mushrooms Poisonous\nWritten by:\nEthan Bartlett","2c2745d1":"1. splits data into test and train\n2. creates a tree structure\n3. trains tree on training data"}}