{"cell_type":{"63814f18":"code","6272f4a9":"code","0f187655":"code","67de6ce5":"code","e5d0d34f":"code","47793ff7":"code","30515842":"code","bc8bb817":"code","2e3384cc":"code","7b4463bd":"code","10d6889b":"code","bfa2f0a1":"code","f9059f33":"markdown"},"source":{"63814f18":"import numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport os\nimport gpxpy\nimport gpxpy.gpx\nfrom pytz import timezone\nimport folium","6272f4a9":"activity=pd.read_csv('..\/input\/run-activites\/activities.csv')\nactivity[activity['Activity ID']==1199436564].T","0f187655":"dt_tz = timezone('Asia\/Tokyo')\ndt_fmt = '%Y-%m-%d %H:%M:%S'","67de6ce5":"gpx_file = open('..\/input\/run-activites\/activites\/activites\/activity_1199436564.gpx', 'r')\ngpx = gpxpy.parse(gpx_file)\ngpx","e5d0d34f":"DateTime = []\nLat      = []\nLng      = []\nAlt      = []\n\nfor track in gpx.tracks:\n    for segment in track.segments:\n        points = segment.points\n        N = len(points)\n        for i in range(N):\n            point = points[i]\n            datetime = point.time.astimezone(dt_tz).strftime(dt_fmt)\n            lat      = point.latitude\n            lng      = point.longitude\n            alt      = point.elevation\n            DateTime.append(datetime)\n            Lat.append(lat)\n            Lng.append(lng)\n            Alt.append(alt)","47793ff7":"data=pd.DataFrame(DateTime)\ndata[1]=Lat\ndata[2]=Lng\ndata[3]=Alt\ndata.columns=['DateTime','Latitude','Longitude','Altitude']\ndata","30515842":"data1=data\nfig=make_subplots(specs=[[{\"secondary_y\":False}]])\nfig.add_trace(go.Scatter(x=data1['DateTime'],y=data1['Altitude'],name='Altitude'),secondary_y=False,)\nfig.update_layout(autosize=False,width=700,height=500,title_text=\"Altitude\")\nfig.update_xaxes(title_text=\"DateTime\")\nfig.update_yaxes(title_text=\"m\",secondary_y=False)\nfig.show()","bc8bb817":"fig=make_subplots(specs=[[{\"secondary_y\":False}]])\nfig.add_trace(go.Scatter(x=data1['DateTime'],y=data1['Latitude'],name='Latitude'),secondary_y=False,)\nfig.update_layout(autosize=False,width=700,height=500,title_text=\"Latitude\")\nfig.update_xaxes(title_text=\"DateTime\")\nfig.update_yaxes(title_text=\"degree\",secondary_y=False)\nfig.show()","2e3384cc":"fig=make_subplots(specs=[[{\"secondary_y\":False}]])\nfig.add_trace(go.Scatter(x=data1['DateTime'],y=data1['Longitude'],name='Longitude'),secondary_y=False,)\nfig.update_layout(autosize=False,width=700,height=500,title_text=\"Longitude\")\nfig.update_xaxes(title_text=\"DateTime\")\nfig.update_yaxes(title_text=\"degree\",secondary_y=False)\nfig.show()","7b4463bd":"data2=data[['Latitude','Longitude']]\npoints=tuple(zip(data2['Latitude'],data2['Longitude'])) ","10d6889b":"def visualize_map2(df,zoom):\n    lat_map = 48.030233\n    lon_map = 7.867524\n    f = folium.Figure(width=800, height=400)\n    m = folium.Map([lat_map,lon_map],zoom_start=zoom).add_to(f)\n    folium.PolyLine(points, color=\"red\", weight=2.5, opacity=1).add_to(m)\n    return m","bfa2f0a1":"visualize_map2(data2,13)","f9059f33":"def visualize_map(df,zoom):\n    lat_map = 48.030233\n    lon_map = 7.867524\n    f = folium.Figure(width=800, height=400)\n    m = folium.Map([lat_map,lon_map],zoom_start=zoom).add_to(f)\n    for i in range(0,len(df)):\n        folium.Marker(location=[df['Latitude'][i],df['Longitude'][i]],icon=folium.Icon(icon_color='Red', icon='plus', prefix='fa')).add_to(m)                              \n    return m"}}