{"cell_type":{"cfc4522a":"code","c6bee102":"code","046f5ab3":"code","f380efc9":"code","3c135c64":"code","93943f45":"code","be54495a":"code","4df96961":"code","2a2b0ab7":"code","be815b82":"code","d75cc65c":"code","28562091":"code","c6eaab6f":"code","af8ef6e5":"code","f5f9eda1":"code","09c06212":"code","13e4c912":"code","fa57594f":"code","24b2a510":"code","ca0ef49d":"code","d9cb8821":"code","52a29dd9":"code","8525acfb":"code","27abb418":"code","402c9be4":"code","251bcd66":"code","d2aff282":"code","69b772db":"code","eb684217":"code","fbcdf58d":"code","05eede0f":"code","e7dab69a":"code","2fb37c9d":"code","e57a216d":"code","c77f923a":"code","14c134d2":"code","ce70f545":"code","ec867b64":"code","8b72180a":"code","08b43086":"code","171e2177":"code","ad9e3cee":"code","b916366a":"code","dab38acf":"code","26aa0885":"code","15e0f967":"code","66f64bca":"code","e33dacd4":"code","afa451d9":"code","74749b3e":"code","5352a1fc":"code","383ec7e2":"code","9bc2bda9":"code","9bc2a542":"code","51c5c837":"code","189264c4":"code","090988cb":"code","25db21b5":"code","618d2fd7":"code","011614d4":"code","ae5ef03a":"code","c9121232":"code","0d298e26":"code","f64fb196":"code","22137022":"code","e3569b4e":"code","9b07635b":"code","96d0e92a":"code","123978f8":"code","ba9aa5d4":"code","74d43cb9":"code","f9affaa9":"code","4bcb81c4":"code","791cfda7":"code","dc962471":"code","cb3ec810":"code","7ff89574":"code","a979a403":"code","98c12301":"code","48d9bd41":"code","661b67db":"code","83625f0f":"code","8505bc3c":"code","f4ea019c":"code","362b1e4a":"code","f22fa9c4":"code","b02faccd":"code","c1f652f7":"code","79b58ac4":"code","17a5daa4":"code","60806fde":"code","44485411":"code","7fbf3b97":"code","f12a3ed9":"code","e776f38a":"code","e96ba7c1":"code","bfdf2a51":"code","d04b493b":"code","04556145":"markdown","98a3888d":"markdown","98cf28b2":"markdown","7375cf3f":"markdown","44ca2560":"markdown","f0c631c1":"markdown","fbe70047":"markdown","e7875810":"markdown","b8292cb1":"markdown","5ab54a38":"markdown","a1e3e788":"markdown","22638f02":"markdown","dbe55ecb":"markdown","cee4200b":"markdown","05efedb1":"markdown","87c6a88a":"markdown","6687dde1":"markdown","8b165656":"markdown","63bb0e69":"markdown","421e1fec":"markdown","4be10672":"markdown","9bdb8284":"markdown","6e9e160a":"markdown","0defb85c":"markdown","05c1fd7d":"markdown","4dd3e9b5":"markdown","8f790982":"markdown","ae7d7899":"markdown","31835fad":"markdown"},"source":{"cfc4522a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c6bee102":"!pip install openpyxl","046f5ab3":"# import all libraries and dependencies for Exploratory Data Analysis\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom datetime import datetime,timedelta\n\n# import all libraries and dependencies for data visualization\npd.options.display.float_format='{:.4f}'.format\nplt.rcParams['figure.figsize']=[8,8]\npd.set_option('display.max_columns',None)\npd.set_option('display.max_colwidth', -1) \nsns.set(style='darkgrid')\nimport matplotlib.ticker as ticker\nimport matplotlib.ticker as plticker\n%matplotlib inline\n\n#import all libraries and dependencies for ML Models\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nfrom sklearn.base import TransformerMixin\nfrom sklearn.preprocessing import MinMaxScaler\nimport statsmodels.api as sm\nfrom sklearn.feature_selection import RFE\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom sklearn.metrics import confusion_matrix,accuracy_score\n\n#Import all Libraries For Checking Accuray\nfrom sklearn.metrics import r2_score\nfrom sklearn import metrics\n\n","f380efc9":"#File Path\npath = '..\/input\/car-price-prediction\/'\ndataframe = path + 'CarPrice_Assignment.csv'\ndata_dict = path+ 'Data Dictionary - carprices.xlsx'","3c135c64":"df=pd.read_csv(dataframe)\ndf.head()","93943f45":"#Reading the data dictionary file\n\ndf_struct=pd.read_excel(data_dict)\ndf_struct.head()\n","be54495a":"#Last 5 Values\ndf.tail()","4df96961":"# Types of variables\ndf.dtypes","2a2b0ab7":"#Size of the Data\ndf.size","be815b82":"#Shape of the data\ndf.shape","d75cc65c":"#Column Names\ndf.columns","28562091":"#Information about the data\ndf.info()","c6eaab6f":"#Description of the Data\ndf.describe()","af8ef6e5":"#Checking for Null Values\ndf.isnull().sum()","f5f9eda1":"# checking for duplicates\n\ndf.loc[df.duplicated()]","09c06212":"#Checking for duplicated values\ndf.duplicated().sum()","13e4c912":"#Dropping the car_ID \ndf=df.drop('car_ID',axis=1)","fa57594f":"# Calculating the Missing Values % contribution in Dataframe\n\ndf_null = df.isna().mean().round(2) * 100\n\ndf_null.sort_values(ascending=False).head(10)","24b2a510":"#Outlier Analysis of target variable\noutliers=['price']\nplt.rcParams['figure.figsize']=[8,8]\nsns.boxplot(data=df[outliers],orient=\"v\",palette='Set1',whis=1.5,saturation=1,width=0.7)\nplt.title('Outliers Distribution',fontsize=15,fontweight='bold')\nplt.ylabel(\"Price Range\",fontweight='bold')\nplt.xlabel(\"Continuous Variable\",fontweight='bold')\ndf.shape","ca0ef49d":"df_auto=df.copy()","d9cb8821":"df_CarName=df_auto['CarName'].str.split(' ',expand=True)","52a29dd9":"df['CarName']=df_CarName[0]","8525acfb":"df['CarName'].unique()","27abb418":"#Renaming the Car Company Names\ndf['CarName']=df['CarName'].replace({'maxda':'mazda','nissan':'Nissan','porcshce':'porsche','toyouta':'toyota','vokswagen':'volkswagen','vw':'volkswagen'})","402c9be4":"#Changing the datatype of Symboling as string as it categorical variable\ndf['symboling']=df['symboling'].astype(str)","251bcd66":"#Segregation of numerical and categorical variables\/Columns\ncat_col=df.select_dtypes(include=['object']).columns\nnum_col=df.select_dtypes(exclude=['object']).columns\ndf_cat=df[cat_col]\ndf_num=df[num_col]","d2aff282":"cat_col,num_col","69b772db":"df_cat.head()","eb684217":"df_num.head()","fbcdf58d":"df.head(10)","05eede0f":"# Checking for diffrent types of car in our DataFrame\nplt.rcParams['figure.figsize']=[15,8]\nax=df['CarName'].value_counts().plot(kind='bar',stacked=True,colormap='Set1')\nax.title.set_text('Car Brand')\nplt.xlabel('Car Brands',fontweight='bold')\nplt.ylabel('Count of Cars',fontweight='bold')","e7dab69a":"#Visualizing distributions of cars\nplt.figure(figsize=(8,8))\nplt.title('Car Price Distribution Plot')\nsns.distplot(df['price'])","2fb37c9d":"#Visualizing Numeric Variables\nplt.rcParams['figure.figsize']=[15,15]\nax=sns.pairplot(df_num)","e57a216d":"#Visualizing Categoric Variables\nca=['symboling', 'CarName', 'fueltype', 'aspiration', 'doornumber',\n        'carbody', 'drivewheel', 'enginelocation', 'enginetype',\n        'cylindernumber', 'fuelsystem']\nplt.figure(figsize=(20,15))\nplt.subplot(3,3,1)\nsns.boxplot(x='fueltype',y='price',data=df)\nplt.subplot(3,3,2)\nsns.boxplot(x='aspiration',y='price',data=df)\nplt.subplot(3,3,3)\nsns.boxplot(x='doornumber',y='price',data=df)\nplt.subplot(3,3,4)\nsns.boxplot(x='carbody',y='price',data=df)\nplt.subplot(3,3,5)\nsns.boxplot(x='enginelocation',y='price',data=df)\nplt.subplot(3,3,6)\nsns.boxplot(x='drivewheel',y='price',data=df)\nplt.subplot(3,3,7)\nsns.boxplot(x='enginetype',y='price',data=df)\nplt.subplot(3,3,8)\nsns.boxplot(x='cylindernumber',y='price',data=df)\nplt.subplot(3,3,9)\nsns.boxplot(x='fuelsystem',y='price',data=df)\nplt.show()","c77f923a":"plt.figure(figsize=(25,6))\n\nplt.subplot(1,3,1)\nplt1 = df['cylindernumber'].value_counts().plot(kind='bar')\nplt.title('Number Of Cylinders')\nplt1.set(xlabel='Number of cylinders',ylabel='Frequency of Number of Cylinders ')\n\nplt.subplot(1,3,2)\npt2=df['fueltype'].value_counts().plot(kind='bar')\nplt.title('Fuel Type')\npt2.set(xlabel='Fuel Type',ylabel='Frequency of Fuel type')\n\nplt.subplot(1,3,3)\npt3=df['carbody'].value_counts().plot(kind='bar')\nplt.title('Car Body')\npt3.set(xlabel='Car Body',ylabel='Frequency of Car Body')","14c134d2":"#Relationship between fuelsystem vs price with hue fueltype\nplt.figure(figsize=(10,6))\nsns.boxplot(x='fuelsystem',y='price',hue='fueltype',data=df)\nplt.show()","ce70f545":"#Relationship between carbody vs Price with hue enginelocation\nplt.figure(figsize=(10,6))\nsns.boxplot(x='carbody',y='price',hue='enginelocation',data=df)\nplt.show()","ec867b64":"#Relationship between cylindernumber vs price with hue fueltype\nplt.figure(figsize=(10,6))\nsns.boxplot(x='cylindernumber',y='price',hue='fueltype',data=df)\nplt.show()\n","8b72180a":"# Car Company Name Vs Average Price \nplt.figure(figsize=(20,6))\n\ndf_auto1=pd.DataFrame(df.groupby(['CarName'])['price'].mean().sort_values(ascending=False))\ndf_auto1.plot.bar()\nplt.title('Car Company Name vs Average Price')\nplt.show()","08b43086":"plt.figure(figsize=(20,6))\ndf_auto2 = pd.DataFrame(df.groupby(['carbody'])['price'].mean().sort_values(ascending = False))\n\ndf_auto2.plot.bar()\nplt.title('Car Company name Vs Average Price')\nplt.show()","171e2177":"df.head()","ad9e3cee":"#Binning Car Companies based on avg prices of each Car Company\ndf['price']=df['price'].astype('int')\ndf_temp=df.copy()\ntemp=df.groupby(['CarName'])['price'].mean()\ndf_temp=df_temp.merge(temp.reset_index(),how='left',on='CarName')\nbins=[0,10000,20000,40000]\nlabel=['Budget_Friendly','Medium_Range','TopNotch_Cars']\ndf['Cars_Category']=pd.cut(df_temp['price_y'],bins,right=False,labels=label)\ndf.head()","b916366a":"sig_col=['price','Cars_Category','enginetype','fueltype','aspiration','carbody','cylindernumber','drivewheel','wheelbase','curbweight','enginesize','boreratio','horsepower','citympg','highwaympg','carlength','carwidth']","dab38acf":"df_car=df[sig_col]","26aa0885":"sig_cat_col=['Cars_Category','enginetype','fueltype','aspiration','carbody','cylindernumber','drivewheel']","15e0f967":"dummy_variable=pd.get_dummies(df_car[sig_cat_col])\ndummy_variable.shape","66f64bca":"dummy=pd.get_dummies(df_car[sig_cat_col],drop_first=True)\ndummy.shape","e33dacd4":"df_car=pd.concat([df_car,dummy],axis=1)\ndf_car.shape","afa451d9":"#Dropping the orginal Columns\ndf_car.drop(sig_cat_col,axis=1,inplace=True)\ndf_car.shape","74749b3e":"df_car.head()","5352a1fc":"np.random.seed(42)\ndf_train,df_test=train_test_split(df_car,train_size=0.75,test_size=0.25,random_state=42)","383ec7e2":"df_train.head()","9bc2bda9":"scaler=preprocessing.StandardScaler()\nscaler_mms=preprocessing.MinMaxScaler()","9bc2a542":"sig_num_col=['boreratio','horsepower','citympg','highwaympg','wheelbase','carlength','carwidth','curbweight','enginesize','price']\n","51c5c837":"df_train_ss=df_train.copy()\ndf_train_mm=df_train.copy()","189264c4":"df_train_ss[sig_num_col]=scaler.fit_transform(df_train[sig_num_col])\n","090988cb":"df_train_ss.head()","25db21b5":"df_train_mm[sig_num_col]=scaler_mms.fit_transform(df_train[sig_num_col])","618d2fd7":"df_train_mm.head()","011614d4":"df_train.head()","ae5ef03a":"plt.figure(figsize=(20,20))\nsns.heatmap(df_train_ss.corr(),cmap=\"RdYlGn\")\nplt.show()","c9121232":"plt.figure(figsize=(20,20))\nsns.heatmap(df_train_mm.corr(),cmap=\"RdYlGn\")\nplt.show()","0d298e26":"col=['enginesize','curbweight','carwidth','highwaympg','citympg','horsepower','carlength','wheelbase','boreratio']","f64fb196":"df_car[col].head()","22137022":"#Scatter Plot of Independent variables vs Dependent Variables\nfig,axes = plt.subplots(3,3,figsize=(24,21))\nfor seg,c in enumerate(col):\n    x,y=seg\/\/3,seg%3\n    axe=sns.scatterplot(x=c,y='price',data=df_car,ax=axes[x,y])\n    plt.setp(axe.get_xticklabels(),rotation=45)\n\nplt.subplots_adjust(hspace=0.5)","e3569b4e":"y_train1=df_train_ss.pop('price')\nX_train1=df_train_ss\ny_train2=df_train_mm.pop('price')\nX_train2=df_train_mm\n","9b07635b":"X_train1\n","96d0e92a":"#Running RFE with the output of variable equal to 16 on Standard Scaler dataset\nlm1=LinearRegression()\nlm1.fit(X_train1,y_train1)\n","123978f8":"#Running RFE with the output of variable equal to 16 on MinMax Scaler dataset\nlm2=LinearRegression()\nlm2.fit(X_train2,y_train2)","ba9aa5d4":"y_train1,y_train2","74d43cb9":"y_train_ss_pred=lm1.predict(X_train1)","f9affaa9":"# Plot the histogram of the error terms\nfig = plt.figure()\nsns.distplot((y_train1 - y_train_ss_pred), bins = 20)\nfig.suptitle('Error Terms Analysis', fontsize = 20)                   \nplt.xlabel('Errors', fontsize = 18)","4bcb81c4":"y_train_mm_pred=lm2.predict(X_train2)","791cfda7":"#Prediction Using Standard Scaling\nr2_score(y_train1, y_train_ss_pred)","dc962471":"#Prediction Using MinMax Scaling\nr2_score(y_train2,y_train_mm_pred)","cb3ec810":"# Plot the histogram of the error terms\nfig = plt.figure()\nsns.distplot((y_train2 - y_train_mm_pred), bins = 20)\nfig.suptitle('Error Terms Analysis', fontsize = 20)                   \nplt.xlabel('Errors', fontsize = 18)","7ff89574":"df_test_ss=df_test.copy()\ndf_test_mm=df_test.copy()","a979a403":"df_test_ss[sig_num_col] = scaler.transform(df_test[sig_num_col])\ndf_test_ss.shape","98c12301":"df_test_mm[sig_num_col] = scaler_mms.transform(df_test[sig_num_col])\ndf_test_mm.shape","48d9bd41":"y_test_ss = df_test_ss.pop('price')\nX_test_ss = df_test_ss\ny_test_mm = df_test_mm.pop('price')\nX_test_mm = df_test_mm","661b67db":"#Predicting\ny_pred_ss=lm1.predict(X_test_ss)\ny_pred_mm=lm2.predict(X_test_mm)","83625f0f":"# Plotting y_test and y_pred to understand the spread.\nfig = plt.figure()\nplt.scatter(y_test_ss,y_pred_ss)\nfig.suptitle('y_test vs y_pred Using Standard Scaler (LR)', fontsize=20)   \nplt.xlabel('y_test ', fontsize=18)                       \nplt.ylabel('y_pred', fontsize=16)","8505bc3c":"# Plotting y_test and y_pred to understand the spread.\nfig = plt.figure()\nplt.scatter(y_test_mm,y_pred_mm)\nfig.suptitle('y_test vs y_pred Using Min Max Scaler (LR)', fontsize=20)   \nplt.xlabel('y_test ', fontsize=18)                       \nplt.ylabel('y_pred', fontsize=16)","f4ea019c":"#Standard Scaler\nprint(\"Prediction Using Standard Scaling\",r2_score(y_test_ss, y_pred_ss))\nprint('Mean Absolute Error  Using Standard Scaling:', metrics.mean_absolute_error(y_test_ss, y_pred_ss))\nprint('Mean Squared Error  Using Standard Scaling::', metrics.mean_squared_error(y_test_ss, y_pred_ss))\nprint('Root Mean Squared Error  Using Standard Scaling::', np.sqrt(metrics.mean_squared_error(y_test_ss, y_pred_ss)))","362b1e4a":"#Min Max Scaler\nprint(\"Prediction Using MinMax Scaling\",r2_score(y_test_mm,y_pred_mm))\nprint('Mean Absolute Error Using MinMax Scaling:', metrics.mean_absolute_error(y_test_mm, y_pred_mm))\nprint('Mean Squared Error Using MinMax Scaling:', metrics.mean_squared_error(y_test_mm, y_pred_mm))\nprint('Root Mean Squared Error Using MinMax Scaling:', np.sqrt(metrics.mean_squared_error(y_test_mm, y_pred_mm)))","f22fa9c4":"rf=RandomForestRegressor()","b02faccd":"#HyperParameters\n# Number of trees in Random Forest\nn_estimators=[int(x) for x in np.linspace(start=100,stop=1200,num=12)]\n#Number of features to consider at every split\nmax_features=['auto','sqrt']\n#Macimum number of levels intree\nmax_depth=[int(x) for x in np.linspace(5,30,num=6)]\n#Minimum  number of samples required to split a node\nmin_samples_split=[2,5,10,15,100]\n#Minimum  number of samples required at each leaf node\nmin_samples_leaf=[1,2,5,10]","c1f652f7":"#create the random grid\nrandom_grid={\n    'n_estimators':n_estimators,\n    'max_features':max_features,\n    'max_depth':max_depth,\n    'min_samples_split':min_samples_split,\n    'min_samples_leaf':min_samples_leaf\n}\nprint(random_grid)","79b58ac4":"rf_random=RandomizedSearchCV(estimator=rf,param_distributions=random_grid,scoring='neg_mean_squared_error',n_iter=10,cv=5,random_state=42,n_jobs=1)","17a5daa4":"rf_random1=RandomizedSearchCV(estimator=rf,param_distributions=random_grid,scoring='neg_mean_squared_error',n_iter=10,cv=5,random_state=42,n_jobs=1)","60806fde":"#Train  random Forest Regressor on Standard Scaler Dataset\nrf_random.fit(X_train1,y_train1)","44485411":"#Train  random Forest Regressor on MIN Max Scaler Dataset\nrf_random1.fit(X_train2,y_train2)","7fbf3b97":"y_pred_ss_rf=rf_random.predict(X_test_ss)","f12a3ed9":"y_pred_mm_rf=rf_random1.predict(X_test_mm)","e776f38a":"# Plotting y_test and y_pred to understand the spread.\nfig = plt.figure()\nplt.scatter(y_test_ss,y_pred_ss_rf)\nfig.suptitle('y_test vs y_pred Using Standard Scaler (RFR)', fontsize=20)   \nplt.xlabel('y_test ', fontsize=18)                       \nplt.ylabel('y_pred', fontsize=16)","e96ba7c1":"# Plotting y_test and y_pred to understand the spread.\nfig = plt.figure()\nplt.scatter(y_test_mm,y_pred_mm_rf)\nfig.suptitle('y_test vs y_pred Using Min Max Scaler (RFR)', fontsize=20)   \nplt.xlabel('y_test ', fontsize=18)                       \nplt.ylabel('y_pred', fontsize=16)","bfdf2a51":"#Standard Scaler\nprint(\"Prediction Using Standard Scaling\",r2_score(y_test_ss, y_pred_ss_rf))\nprint('Mean Absolute Error  Using Standard Scaling:', metrics.mean_absolute_error(y_test_ss, y_pred_ss_rf))\nprint('Mean Squared Error  Using Standard Scaling::', metrics.mean_squared_error(y_test_ss, y_pred_ss_rf))\nprint('Root Mean Squared Error  Using Standard Scaling::', np.sqrt(metrics.mean_squared_error(y_test_ss, y_pred_ss_rf)))","d04b493b":"#Min Max Scaler\nprint(\"Prediction Using MinMax Scaling\",r2_score(y_test_mm, y_pred_mm_rf))\nprint('Mean Absolute Error  Using MinMax Scaling:', metrics.mean_absolute_error(y_test_mm, y_pred_mm_rf))\nprint('Mean Squared Error  Using MinMax Scaling::', metrics.mean_squared_error(y_test_mm, y_pred_mm_rf))\nprint('Root Mean Squared Error  Using MinMax Scaling::', np.sqrt(metrics.mean_squared_error(y_test_mm, y_pred_mm_rf)))","04556145":"# Loading The Dataset","98a3888d":"# Evalutation Of Random Forest Model","98cf28b2":"# Categorical Variables","7375cf3f":"**The Price of Most cars is Less than 19000 the plot is Skewed**","44ca2560":"## Installing Dependencies","f0c631c1":"# Random Forest Regression","fbe70047":"# Understanding The Data","e7875810":"**Significant variables after Visualization**\n1. Cars_Category , Engine Type, Fuel Type\n2. Car Body , Aspiration , Cylinder Number\n3. Drivewheel , Curbweight , Car Length\n4. Car Length , Car width , Engine Size\n5. Boreratio , Horse Power , Wheel base\n6. citympg , highwaympg , symboling ","b8292cb1":"**Insights**\n1. Toyota Company has the most bought cars\n2. Mercury Company has the least bought car.","5ab54a38":"**Insights**\n1. The cars with fueltype as diesel are comparatively expensive than the cars with fueltype as gas.\n2. All the types of carbody is relatively cheaper as compared to convertible carbody.\n3. The cars with rear enginelocation are way expensive than cars with front enginelocation.\n4. The price of car is directly proportional to no. of cylinders in most cases.\n5. Enginetype ohcv comes into higher price range cars.\n6. DoorNumber isn't affecting the price much.\n7. HigherEnd cars seems to have rwd drivewheel","a1e3e788":"# Evaluation Of Linear Regresion Model","22638f02":"# Linear Regression","dbe55ecb":"# Training On the Dataset","cee4200b":"#### Predicting the model for Linear Regression","05efedb1":"**So performing Min Max Scaling gives good results**","87c6a88a":"**We can see when Min Max is applied on our dataset the error is less compared to Standard Scaler**","6687dde1":"**Insights**\n1. Jaguar,Buick and Porsche seems to have the highest average Price\n","8b165656":"# Splitting The Data Into Train and Test Set","63bb0e69":"# Data Visualization","421e1fec":"**Insights**\n1. carheight doesn't show any significant trend with price.\n2. carwidth , carlength, curbweight ,enginesize ,horsepowerseems to have a poitive correlation with price.\n3. citympg , highwaympg - seem to have a significant negative correlation with price.","4be10672":"#### Scaling Significant Numerical Values","9bdb8284":"### **Business Goal** :\n#### We are required to model the price of cars with the available independent variables. It will be used by the management to understand how exactly the prices vary with the independent variables. They can accordingly manipulate the design of the cars, the business strategy etc. to meet certain price levels. Further, the model will be a good way for management to understand the pricing dynamics of a new market.","6e9e160a":"**TYPO ERROR IN CAR NAME**\n1. maxda=mazda\n2. Nissan=nissan\n3. porsche=porcshce\n4. toyota=toyouta\n5. vokswagen=volkswagen=vw\n","0defb85c":"**Insights**\n1. hardtop and convertible seems to have the highest average price","05c1fd7d":"**Insights**\n1. The number of cylinders used in most cars is four.\n2. Number of Gas fueled cars are way more than diesel fueled cars.\n3. Sedan is the most prefered car type.","4dd3e9b5":"**Price Ranges above 36000 can be termed as outliers We can apply Standarization Scaling**","8f790982":"# Data Cleaning","ae7d7899":"### **Problem Statement:** \n#### A Chinese automobile company Geely Auto aspires to enter the US market by setting up their manufacturing unit there and producing cars locally to give competition to their US and European counterparts.\n\n#### They have contracted an automobile consulting company to understand the factors on which the pricing of cars depends. Specifically, they want to understand the factors affecting the pricing of cars in the American market, since those may be very different from the Chinese market. The company wants to know:\n\n#### Which variables are significant in predicting the price of a car\n#### How well those variables describe the price of a car","31835fad":"# Importing Libraries"}}