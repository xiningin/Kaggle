{"cell_type":{"a075f406":"code","e069d351":"code","a1954f8e":"code","0ea88dbe":"code","f5c43c36":"code","5fc752d8":"code","464d46a8":"code","cd59b2a2":"code","67b8577e":"code","f855b105":"code","094d3d47":"markdown","c3a60ca1":"markdown","00cc593c":"markdown"},"source":{"a075f406":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import cross_val_score\nimport xgboost as xgb\nimport lightgbm as lgb\nfrom catboost import CatBoostClassifier, Pool, cv\nimport warnings\nwarnings.filterwarnings(action=\"ignore\")\nimport shap\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import norm, skew\n\n\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom sklearn import svm\n\nprint(tf.__version__)","e069d351":"train=pd.read_csv(\"..\/input\/esunbank-creditcard-data\/train.csv\")\ntest=pd.read_csv(\"..\/input\/esunbank-creditcard-data\/test.csv\")\ncredit=pd.concat([train, test], sort=False)\nlen_train=train.shape[0]\n\ntrain_ID = train['txkey']\ntest_ID = test['txkey']\n\nprint(credit.dtypes.sort_values())\nprint(\"\\nThe train data size after dropping Id feature is : {} \".format(train.shape)) \nprint(\"The test data size after dropping Id feature is : {} \".format(test.shape))\ncredit.head()","a1954f8e":"correlation = train.corr()\ncorrelation['fraud_ind'].sort_values(ascending=False).head(15)","0ea88dbe":"credit.isnull().sum()[credit.isnull().sum()>0]","f5c43c36":"train.flbmk=train.flbmk.fillna(\"N\")\ntest.flbmk=test.flbmk.fillna(\"N\")\n\ntrain.flg_3dsmk=train.flg_3dsmk.fillna(\"N\")\ntest.flg_3dsmk=test.flg_3dsmk.fillna(\"N\")\n\ntrain.flg_3dsmk=train.fraud_ind.astype('int')\ntest.flg_3dsmk=train.fraud_ind.astype('int')\n\ntrain.insfg=train.fraud_ind.astype('int')\ntest.insfg=train.fraud_ind.astype('int')\n\ntrain.ecfg=train.fraud_ind.astype('int')\ntest.ecfg=train.fraud_ind.astype('int')\n\ntrain.ovrlt=train.fraud_ind.astype('int')\ntest.ovrlt=train.fraud_ind.astype('int')\n\ntrain.flbmk=train.fraud_ind.astype('int')\ntest.flbmk=train.fraud_ind.astype('int')\n\ntrain.fraud_ind=train.fraud_ind.astype('int')\n\nprint(\"After fillna\")\nprint(\"Training dataset null column\",train.isnull().sum()[train.isnull().sum()>0])\nprint(\"testing dataset null column\",test.isnull().sum()[test.isnull().sum()>0])","5fc752d8":"train_stats = train.describe()\ntrain_stats = train_stats.transpose()\n\n# Drop columns due to the whole values are same \nDrop_columns = train_stats['min'][train_stats['max'] == train_stats['min']].index\nprint(\"The Column which has all same value :\\n\",Drop_columns)","464d46a8":"xtrain=train.drop(\"fraud_ind\",axis=1)\nytrain=train['fraud_ind']\nxtest=test\n","cd59b2a2":"categorical_indices = np.where(xtrain.dtypes != np.float)[0]\n# credit.iloc[:,categorical_indices].describe()\n# credit=pd.concat([train, test], sort=False)","67b8577e":"modelXGB= xgb.XGBClassifier(n_estimators=5000,nthread=4,max_depth=200,random_state=1)\nscoresXGB=cross_val_score(modelXGB, xtrain, ytrain, scoring='accuracy', cv=5)\nprint(\"score : \",np.mean(scoresXGB))\nmodelXGB.fit(xtrain, ytrain)","f855b105":"xgb_predict = modelXGB.predict(xtest)\n# make predictions which we will submit. \noutput = pd.DataFrame({'txkey': test_ID,'fraud_ind': xgb_predict})\noutput.to_csv('submit_test.csv', index=False)","094d3d47":"## 3.Predict","c3a60ca1":"## 1. Preprocessing","00cc593c":"## 2.Trainging"}}