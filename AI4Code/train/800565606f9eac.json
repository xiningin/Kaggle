{"cell_type":{"6d7b6484":"code","b5f141e0":"code","d583adbe":"code","2f489a97":"code","71c7abb5":"code","6ebdf98d":"code","db9ae941":"code","47a455af":"code","ded5733f":"code","1be2ac9a":"code","4e94bbc2":"code","28ae25ab":"code","7cbf02bc":"code","b6268074":"code","255d7c33":"code","491498d0":"code","53cd864d":"code","2f4ee9ff":"code","09628e4b":"code","34dfdedb":"code","6a95c0ce":"code","daa31417":"code","ba87a6a8":"code","4b425898":"code","7a19195a":"code","f84c8939":"code","7140a5b6":"code","c51ea2bf":"code","6f174f30":"code","7e82ecc1":"code","7c751a01":"code","de3febb4":"code","5e135769":"code","4726bb26":"code","82afbc9b":"markdown","18b6cf65":"markdown","65cff76e":"markdown","d6857a25":"markdown","0fd22b14":"markdown","27f66f85":"markdown","b39cf5df":"markdown"},"source":{"6d7b6484":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","b5f141e0":"df19=pd.read_csv('..\/input\/flight-delay-prediction\/Jan_2019_ontime.csv')\ndf20=pd.read_csv('..\/input\/flight-delay-prediction\/Jan_2020_ontime.csv')","d583adbe":"df19.head()","2f489a97":"df20.head()","71c7abb5":"df19.drop('Unnamed: 21',axis=1,inplace=True)\ndf20.drop('Unnamed: 21',axis=1,inplace=True)","6ebdf98d":"df19['OP_CARRIER_AIRLINE_ID'].unique()","db9ae941":"df19['OP_CARRIER'].unique()","47a455af":"frames = [df19, df20]\n\ndf = pd.concat(frames)\n\ndf.reset_index(drop=True, inplace=True)","ded5733f":"df.head()","1be2ac9a":"df.isnull().sum()","4e94bbc2":"df19 = df19.fillna(method ='pad')\ndf20 = df20.fillna(method ='pad')","28ae25ab":"df19.isnull().sum()","7cbf02bc":"pl_1=df.groupby('DAY_OF_MONTH')['CANCELLED'].count()\nfig = go.Figure()\nfig.add_trace(go.Bar(x=pl_1.index,y=pl_1.values,name='Cancelled'))\nfig.add_trace(go.Scatter(x=pl_1.index, y=pl_1.values, line=dict(color='red'), name='Cancel trend'))\nfig.update_layout(\n    title=\"Cancelled flights vs day of month\",\n    xaxis_title=\"Day of month\",\n    yaxis_title=\"Cancel count\",\n)\nfig.show()","b6268074":"pl_2=df.groupby('OP_CARRIER')['CANCELLED'].count()\nfig = go.Figure()\nfig.add_trace(go.Bar(x=pl_1.index,y=pl_1.values,name='Cancelled'))\nfig.add_trace(go.Scatter(x=pl_1.index, y=pl_1.values, line=dict(color='red'), name='Cancel trend'))\nfig.update_layout(\n    title=\"Cancelled flights vs ID of flight\",\n    xaxis_title=\"Day of month\",\n    yaxis_title=\"Cancel count\",\n)\nfig.show()","255d7c33":"df1 = df19[['OP_CARRIER','ORIGIN','DEST','DAY_OF_MONTH','DEP_TIME','ARR_TIME','DISTANCE','CANCELLED']]\ndf1.head()","491498d0":"df1.dtypes","53cd864d":"from sklearn import preprocessing\nlabel_encoder=preprocessing.LabelEncoder()","2f4ee9ff":"pd.options.mode.chained_assignment = None\ndf1['OP_CARRIER']= label_encoder.fit_transform(df1['OP_CARRIER'])\ndf1['ORIGIN']= label_encoder.fit_transform(df1['ORIGIN'])\ndf1['DEST']= label_encoder.fit_transform(df1['DEST'])","09628e4b":"df1.dtypes","34dfdedb":"X=df1.drop('CANCELLED',axis=1)\ny=df1['CANCELLED']","6a95c0ce":"X.shape","daa31417":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score","ba87a6a8":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","4b425898":"from sklearn.tree import DecisionTreeClassifier\nalgo = DecisionTreeClassifier()\nalgo.fit(X_train, y_train)","7a19195a":"predict_test = algo.predict(X_test)","f84c8939":"accuracy_score(y_test,predict_test)","7140a5b6":"from sklearn.naive_bayes import GaussianNB\nGN_nb = GaussianNB()\nmodel = GN_nb.fit(X_train, y_train)","c51ea2bf":"y_pred = model.predict(X_test)","6f174f30":"accuracy_score(y_test,y_pred)","7e82ecc1":"from keras.models import Sequential\nfrom keras.layers import Dense","7c751a01":"model = Sequential([\n    Dense(32, activation='relu', input_shape=(7,)),\n    Dense(32, activation='relu'),\n    Dense(1, activation='sigmoid'),\n])","de3febb4":"model.compile(optimizer='sgd',\n              loss='binary_crossentropy',\n              metrics=['accuracy'])","5e135769":"hist = model.fit(X_train, y_train,\n          batch_size=32, epochs=100,\n          validation_data=(X_test, y_test))","4726bb26":"plt.plot(hist.history['loss'], label='Training loss')\nplt.plot(hist.history['val_loss'], color='red', label='Test loss')\nplt.xlabel('Epoch')\nplt.ylabel('Loss')\nplt.legend()\nplt.show()","82afbc9b":"Hey guys, I have made a simple neural network model using keras to predict the cancelled flights.Do upvote the kernel if you found it helpful!","18b6cf65":"Basic EDA to understand the pattern of cancelled flights.","65cff76e":"# Decision Tree","d6857a25":"Merge the two dataframes.","0fd22b14":"# Neural network model using Keras","27f66f85":"# Naive Bayes","b39cf5df":"Split the data into training and testing set."}}