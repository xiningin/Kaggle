{"cell_type":{"b9ae6eff":"code","ce76b451":"code","f8ab11da":"code","fa304d39":"code","7f497dfb":"code","b13bd06e":"code","1b77569d":"code","76bfc7e1":"code","f4fbed76":"code","d64288ea":"code","8cf969cc":"code","bd34f298":"code","20024092":"code","1f7fb005":"code","a93ad712":"code","5fffb747":"code","a645114c":"code","26ca46bb":"code","6db62aa2":"code","674dddb5":"code","f3eedd7c":"code","b74be88d":"code","5132b885":"code","e342db0c":"code","599c0026":"code","007d5db2":"code","34dcd6c9":"code","99ba5baa":"code","1396c191":"code","60a3294e":"code","039459ef":"code","ed488260":"code","df46a2df":"markdown","610f3832":"markdown","16a61d42":"markdown","55f470eb":"markdown","34b20366":"markdown","b21db0d9":"markdown","d24ddc58":"markdown","8f10f9b8":"markdown","cc6db882":"markdown","4e43b12e":"markdown","16f63662":"markdown","c9da581d":"markdown","ba0fd57f":"markdown","f302fead":"markdown","1d400048":"markdown","1ca2d042":"markdown","2b1961b8":"markdown","48e09bd2":"markdown","eeb0309a":"markdown","b14ee7c0":"markdown","3fab1f84":"markdown","451fe64e":"markdown","4e3734d3":"markdown","a81df0c0":"markdown","3e29a688":"markdown","a98d98c5":"markdown","0de700f2":"markdown","006e2012":"markdown","67a06a23":"markdown","7815f308":"markdown","2fc958f7":"markdown","0f33ba59":"markdown","59481b95":"markdown","5493ac2d":"markdown","5f5d3acf":"markdown"},"source":{"b9ae6eff":"import numpy as np\nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\n\nfrom scipy.stats import shapiro\nimport scipy.stats as stats\n\n#parameter settings\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nwarnings.simplefilter(action='ignore', category=FutureWarning)","ce76b451":"# import as dataframe\nraw_df = pd.read_csv(\"..\/input\/mobile-games-ab-testing\/cookie_cats.csv\")\n\n# preview\nraw_df.head(10)","f8ab11da":"# basic info\nraw_df.info()","fa304d39":"# plot quartile distribution plot for number of gamerounds\nplt.figure(figsize=(10,4))\n\nplt.title(\"Number of game rounds per user ID within first 7 days\")\nplt.ticklabel_format(style='plain') # shows userid as is\nsns.boxenplot(data=raw_df, x = 'sum_gamerounds')\nplt.xlabel(\"# of game rounds\");","7f497dfb":"# Based on the plot, check the few largest sum_gamerounds to identify the index\n# we may or may not spot more than 1 outliers\n\nraw_df.nlargest(10, 'sum_gamerounds')\n","b13bd06e":"# remove outlier row and assign to a new df\nclean_df = raw_df.drop(57702, axis = 0)\n\n# confirm that the outliers are removed\nclean_df.nlargest(10, 'sum_gamerounds')","1b77569d":"# Plot the graph for sum_gamerounds player after removing the outlier\nplt.figure(figsize=(10,4))\n\nplt.figure(figsize=(10,4))\n\nplt.title(\"Number of game rounds per user ID within first 7 days\")\nplt.ticklabel_format(style='plain') # shows userid as is\nsns.boxenplot(data=clean_df, x = 'sum_gamerounds')\nplt.xlabel(\"# of game rounds\");","76bfc7e1":"# Find number of customers with sum_gamerounds is equal to zero\ngamerounds_0 = (clean_df['sum_gamerounds'] == 0).sum()\n\n\nprint(f\"The number of players who did not play any round: {gamerounds_0}\")","f4fbed76":"# Group by sum_gamerounds and count the number of users for the first 500 gamerounds\n# exclude those with 0 gamerounds since they technically have not played the game yet\n\nfirst_500_usercount = clean_df.groupby(by='sum_gamerounds').count().iloc[1:501]\nfirst_500_usercount = first_500_usercount.drop(['retention_1', 'retention_7', 'version'], axis=1)\n\n# create a cumulative count of player, per number of game rounds played\nfirst_500_usercount['cumulative'] = np.cumsum(first_500_usercount['userid'])\nfirst_500_usercount['cumulative_percent'] = (first_500_usercount['cumulative'] \n                                             \/ len(clean_df) \n                                             * 100)\n","d64288ea":"first_500_usercount","8cf969cc":"# Plotting the trend on how much player count 'drops' with respect to # of rounds played,\n# which is directly related to level progress\n\nplt.figure(figsize = (10,5), dpi = 100)\n\nplt.title(\"Player count vs number of game rounds within first 7 days\")\nplt.ylabel(\"player count\")\nplt.xlabel(\"# of game rounds\")\nplt.ylim(0,6000)\nsns.lineplot(data=first_500_usercount, x = 'sum_gamerounds', y = 'userid');","bd34f298":"# Another visualisation to show cumulative player count\n\nfig = plt.figure(figsize = (10,6), dpi = 100)\n\nplt.title(\"Cumulative % player count vs number of game rounds within first 7 days\")\nplt.ylabel(\"% of total player\")\nplt.xlabel(\"# of game rounds\")\nplt.ylim(0,100)\nplt.xlim(0,500)\nsns.lineplot(data=first_500_usercount, x = 'sum_gamerounds', y = 'cumulative_percent')\n\n# # checking for player count percentile, for gamerounds = 30\n# plt.axvline(30, color = 'red', linestyle = '--')\n\n# add a zoomed-in graph around gamerounds = 30\nax2 = fig.add_axes([0.3, 0.2, 0.4, 0.4])\nsns.lineplot(data=first_500_usercount, x = 'sum_gamerounds', y = 'cumulative_percent', ax = ax2);\nax2.axvline(30, color = 'red', linestyle = '--')\nax2.axhline(first_500_usercount.loc[30]['cumulative_percent'], \n            color = 'red', linestyle = '--',\n            label = '30 gamerounds')\nax2.set_xlim(0,50)\nax2.set_xlabel('')\nax2.set_ylabel('')\nax2.set_title('Cumulative % player count at 30 game rounds')\n\n\nplt.legend();","20024092":"# Calculate the percentage of player retaned after 1 days\nretention_rate_1 = clean_df['retention_1'].sum() \/ len(clean_df) * 100 # in percent\nretention_rate_1 = np.round(retention_rate_1, 1)\n\n# Calculate the percentage of player retaned after 7 days\nretention_rate_7 = clean_df['retention_7'].sum() \/ len(clean_df) * 100 # in percent\nretention_rate_7 = np.round(retention_rate_7, 1)\n\nprint(f\"Retention rate after 1 day: {retention_rate_1}%\")\nprint(f\"Retention rate after 7 day: {retention_rate_7}%\")\n","1f7fb005":"# drop those below 30 rounds\nmore_than_30 = clean_df[clean_df['sum_gamerounds'] >=30]\n\nmore_than_30.sample(10)","a93ad712":"more_than_30.info()","5fffb747":"# we will split the data frame into the 2 version:\n# group_30 is the control \/ default group, and group_40 is the treatment group\ngroup_30 = more_than_30[more_than_30['version'] == 'gate_30'].copy()\ngroup_40 = more_than_30[more_than_30['version'] == 'gate_40'].copy()","a645114c":"group_30.head()","26ca46bb":"group_40.head()","6db62aa2":"#---------------------- Shapiro Test ----------------------\n# NULL Hypothesis H0: Distribution is normal\n# ALTERNATE Hypothesis H1: Distribution is not normal    \n\n#test for group_30\nstats.shapiro(group_30['sum_gamerounds'])\n\n#test for group_40\nstats.shapiro(group_40['sum_gamerounds'])","674dddb5":"# plotting Normal QQ plot, to visualise how close the data points are to normal distribution\n# fig,(ax1,ax2) = plt.subplots(nrows=1,ncols=2,figsize=(15,6))\n\nfig = plt.figure(figsize = (10,4), dpi = 100)\n\nax1 = plt.subplot(121)\nstats.probplot(group_30['sum_gamerounds'], plot=sns.mpl.pyplot)\nax1.set_title('Group 30 Normal QQ')\n\nax2 = plt.subplot(122)\nstats.probplot(group_40['sum_gamerounds'], plot=sns.mpl.pyplot)\nax2.set_title('Group 40 Normal QQ');","f3eedd7c":"#---------------------- Levene's Test ----------------------\n# NULL Hypothesis H0: Two groups have equal variances\n# ALTERNATE Hypothesis H1: Two groups do not have equal variances\n\n#perform levene's test and accept or reject the null hypothesis based on the results\nstats.levene(group_30['sum_gamerounds'], group_40['sum_gamerounds'], center='median')\n\n","b74be88d":"# Compute average game rounds played for two different groups using group by function\nmore_than_30.groupby('version').mean().drop(['userid', 'retention_1', 'retention_7'], axis = 1)\n","5132b885":"#------------------T-Test--------------\n# NULL Hypothesis H0: group_30_mean => group_40_mean\n# ALTERNATE Hypothesis H1: group_30_mean < group_40_mean\n\nt_score, p_value = stats.ttest_ind(group_30['sum_gamerounds'], group_40['sum_gamerounds'], alternative = 'less')\n\nprint(f't_score is {t_score}')\nprint(f'p_value is {p_value}')","e342db0c":"# create a function to perform bootstrapping\n\ndef bootstrap(ser, fraction, n_loop):\n    '''\n    takes in a series, take a fraction of sample, compute the sample mean,\n    loop n times, return a series of the n number of sample means\n    '''\n    \n    # set temp var\n    mean_ser = pd.Series(dtype='float')\n    mean_val = 0.0\n    \n    # do sampling for n_loop times\n    for n in range(n_loop):\n        # take a fraction as sample, set replace to True to ensure independent events, then append\n        mean_val = ser.sample(frac=fraction, replace=True).mean()\n        mean_ser = mean_ser.append(pd.Series(mean_val), ignore_index = True)\n    \n    return mean_ser * 100 # return as a percentage\n    ","599c0026":"# create function to plot the 2 groups in the same grid\n\ndef plot_grid(ser_a, ser_b, supertitle, title_a, title_b ):\n    '''\n    plot overlapping histplot for series a and b\n    including kde and mean of each series\n    '''\n    \n    # specify parameters\n    bins = 40\n    alpha = 0.2\n    a_color = 'blue'\n    b_color = 'red'\n    plt.figure(figsize=(9,5), dpi = 100)\n    \n    # plot the histograms and kde\n    sns.histplot(data = ser_a, kde=True, bins=bins, \n                 color = a_color, alpha = alpha, linewidth = 0.4, label = title_a)\n\n    \n    sns.histplot(data = ser_b, kde=True, bins=bins, \n                 color= b_color, alpha = alpha, linewidth = 0.4, label = title_b)\n    \n    # plotting the mean of each group\n    plt.axvline(ser_a.mean(),color=a_color, linewidth=2, linestyle = '--', label = 'mean of group 30')\n    plt.axvline(ser_b.mean(),color=b_color, linewidth=2, linestyle = '--', label = 'mean of group 40')\n    \n    \n    # other adjustments\n    plt.xlabel('retention rate (%)')\n    plt.ylabel('sample mean count')\n    plt.suptitle(supertitle,fontsize=16)\n    plt.tight_layout()\n    plt.legend()\n    ","007d5db2":"# set fraction and n_loop for boostrapping\nfraction = 0.5\nn_loop = 5000\n\n\n# create series for each group, and each retention rate (1 day & 7 days)\nbootstrap_30_r1 = bootstrap(group_30['retention_1'], fraction, n_loop)\nbootstrap_40_r1 = bootstrap(group_40['retention_1'], fraction, n_loop)\n\nbootstrap_30_r7 = bootstrap(group_30['retention_7'], fraction, n_loop)\nbootstrap_40_r7 = bootstrap(group_40['retention_7'], fraction, n_loop)","34dcd6c9":"# plot for 1 day retention\n\nplot_grid(bootstrap_30_r1, bootstrap_40_r1, 'Retention rate after 1 day', 'group_30','group_40')","99ba5baa":"# plot for 7 day retention\n\nplot_grid(bootstrap_30_r7, bootstrap_40_r7, 'Retention rate after 7 days', 'group_30','group_40')","1396c191":"# Compute the 1 day and 7 days retention rate for two different groups using group by function\nmore_than_30.groupby('version').mean().drop(['userid', 'sum_gamerounds'], axis = 1)\n","60a3294e":"# create a table summing the True for retention 1 and 7\nversion_sums = more_than_30.groupby('version').sum().drop('userid', axis = 1)\n\nversion_sums","039459ef":"#------------------Z-test (proportion)--------------\n# Retention after 1 Day\n\n# NULL Hypothesis H0: group_30_retention_rate = group_40_retention_rate\n# ALTERNATE Hypothesis H1: group_30_retention_rate != group_40_retention_rate\nfrom statsmodels.stats.proportion import proportions_ztest\n\nz_score, p_value = proportions_ztest(count=(version_sums['retention_1']['gate_30'], \n                                            version_sums['retention_1']['gate_40']),\n                                     nobs=(len(group_30), len(group_40)),\n                                     alternative='two-sided')\n\nprint(f'z score is: {z_score}')\nprint(f'p value is: {p_value}')","ed488260":"#------------------Z-test (proportion)--------------\n# Retention after 7 Days\n\n# NULL Hypothesis H0: group_30_retention_rate <= group_40_retention_rate\n# ALTERNATE Hypothesis H1: group_30_retention_rate > group_40_retention_rate\n\nz_score, p_value = proportions_ztest(count=(version_sums['retention_7']['gate_30'], \n                                            version_sums['retention_7']['gate_40']),\n                                     nobs=(len(group_30), len(group_40)),\n                                     alternative='larger')\n\nprint(f'z score is: {z_score}')\nprint(f'p value is: {p_value}')","df46a2df":"### 3.1. Finding and dealing with outliers\nLet's see how the number of game rounds for each player (player ID) are distributed, which allow us to spot any outliers that may exist in our data.","610f3832":"<a id='5.2'><\/a>\n### 5.2. Checking the difference in retention rate\nTo check the difference in proportion (retention rate) of the 2 groups, we would perform boostrapping method, which allow us to visualise how they may be distributed.\n\nFrom there, we can perform a proportion z-test to compute the statistical difference between the 2 groups.","16a61d42":"## 4. Initial data exploration","55f470eb":"## 3. Data preparation and cleaning","34b20366":"<a id='4.1'><\/a>\n### 4.1. How many players installed the game, but did not play any round?","b21db0d9":"# Analysing mobile games' AB test result using hypothesis testing and boostrapping","d24ddc58":"<img src= \"https:\/\/cdnb.artstation.com\/p\/assets\/images\/images\/013\/892\/253\/medium\/stefan-pruss-cats-workfile.jpg?1541540801\" style='width: 800px;'>","8f10f9b8":"<a id='4.3'><\/a>\n### 4.3. What's the difference in overall retention rate between 1 day vs 7 days?","cc6db882":"From here onwards, it would be a good idea to **drop player IDs that did not even reach level 30.**\nReason being is, player would only feel the impact of the gate when they encounter it; otherwise, whether they decide to churn \/ quit the game (before level 30 or 40) is likely to be unrelated to the gate system.\n\nIn this case, we will make the following assumption:\n* Game rounds are directly related to level progress; although some player may need to repeat certain rounds due to various reasons (failing at some levels, etc), this would still be a good estimate at lower level since they're still relatively easy.","4e43b12e":"## 0. Executive Summary\n\n**Brief background**\n\nCookie Cats is a popular mobile puzzle game, based on classic \"connect three\"-style puzzle game, where the player must connect tiles of the same color to clear the board and win the level.\n\nAfter progressing a certain number of levels, players will encounter gates that force them to wait a non-trivial amount of time (about 2 x 4hr) or make an in-app purchase to progress.\n\nAn A\/B test was conducted to investigate the impact of moving the first gate at level 40, vs level 30 as it was originally designed.\n\n\n**Objective**\n\nInvestigate the A\/B test result, to determine whether moving the gate from level 30 to 40 improves retention rate and number of game rounds.\n\n\n**Conclusion and recommendation**\n\nAlthough moving the gate to level 40 increases average game rounds per player, it shows a reduction in retention rate after 7 days (compared to gate at level 30). Thus, **gate should be kept at level 30 to maintain retention rate**.\n","16f63662":"After we clean the dataset from outliers, let's explore the data. We can approach this area by trying to ask basic business questions, such as:\n1. How many players installed the game, but did not play any rounds?\n2. How likely for a player to stay as they progress through the levels?\n3. What's the difference in overall retention rate between 1 day vs 7 days?","c9da581d":"## 2. Importing packages and setup","ba0fd57f":"We can see that group 40 seem to have more game rounds per player on average. Let's test how significant this difference is.","f302fead":"There seem also be a drop in retention rate from 44.5% to 18.6% within a span of 1 week. This may tie in with the exponential drop in player as the level progresses.","1d400048":"As we see from the table and the 2 graphs, it looks like retention rate after 1 day are almost indistinguishable for the group 30 and 40. However, we start to see a difference once we get to 7 day.\n\nLet's do a proportion z-test to check their statistical significance.","1ca2d042":"## 8. Reflection\n* This is my very first portfolio! This data and problem set are actually my class assignment in Singapore (not kaggle or datacamp)\n* As first portfolio, it does take a while to put things together. While it could've been easier to just copy paste my notebook here, I feel everyone else does put in a part to create a more coherent story. Thus, I do my best to do the same\n* Iterative process of data analysis; I was about 4-6 hours in when I realised that the gate concept is probably irrelevant when players don't even reach level 30. Thus, I had to rework half of my solution. But it was fun nonetheless!\n* If I have more time, I would probably try to explore different statistical methods, to perhaps increase the rigour of my solution. But at this point, I'm limited by my free time outside of class.","2b1961b8":"As we can see from the 2 tests, there seem to be no difference in retention rate for the 2 groups after just 1 day. This is likely because many people wouldn't have played 30 rounds just within 1 day.\n\nHowever, when we look at the 7 day retention, we can start to see that group 30 has a slight advantage (around 0.8%), which has a relatively high p-value of 0.055.\nThus, although the p-value is slightly higher than the standard confidence level (0.05), **this may still indicate that keeping the gate at level 40 actually causes lower retention rate after just 1 week**.","48e09bd2":"Since the number of rows are the same as the non-null values in each column, it implies there's no missing values in any columns","eeb0309a":"There are close to 4000 players who installed the games but did not play any rounds at all.\nWhile there may be some possible explanations to this, this only about 4% out of our dataset.\n\nWe should focus our efforts more on understanding the retention rate of the 96%, and why they do not stick around.\n","b14ee7c0":"As we can see, the Shapiro test has very small P-value (0.0), thus we reject its Null hypothesis, which means the **two samples are not normally distributed.**\nPlotting the Normal QQ plot also show the same conclusion.","3fab1f84":"There seem to be one user that has almost 50,000 game rounds just within a week.\nThis seem to be an obvious outlier because:\n1. Most other users are not even close to playing 5000 games in a week, and\n2. If we just consider conservatively spending 1 minute per game, it would take someone ~34 days to play 50,000 games - and that's if you play consistently for every waking minute. :)\n\nAs such, let's remove this data point","451fe64e":"The data contains a few variables, with explanations as follows\n\n|Variables | Variable description|\n| :--- | :--- |\n|User ID | a unique number that identifies each player|\n|version |whether the player was put in the control group A (gate_30 - a gate at level 30) or the test group B (gate_40 - a gate at level 40)|\n|sum_gamerounds |the number of game rounds played by the player during the first week after installation|\n|retention_1 |did the player come back and play 1 day after installing?|\n|retention_7 |did the player come back and play 7 days after installing?|","4e3734d3":"## 5. Evaluating control and test group","a81df0c0":"As we can see from the first graph, the player count drop rather exponentially (~ 1\/x relationship) as the level progresses (indicated by number of game rounds). Furthermore, looking at the cumulative graph, about **60% players did not continue past 30 rounds.**, and the player drops even further to about 80% at 100 rounds.\n\nWhile it's normal for any game to have a decreasing player count as the level progresses, it's probably not a good indication if the trend shows an exponential drop.\nThis implies that there's an **increasing discouragement to continue playing** as players progresses.\n\n\nSome potential causes may include:\n1. Levels are getting boring as they progress, perhaps due to lack of new variation or mechanics.\n2. If there are any additional mechanics \/ variation being introduced as level progresses, they do excite or incentivise the player effectively.\n3. Alternatively, level difficulty are increasing exponentially after a certain point in the game, to the point that the game becomes rather unplayable without any in-app purchase to boost winning chance. Interestingly, this point comes *from personal experience playing until level 90.* :p\n","3e29a688":"<a id='5.1'><\/a>\n### 5.1 Checking the difference in game rounds played\nWe will perform a few tests to understand the 2 samples' distribution of game rounds, so that we can decide which test to use to compare the sample mean","a98d98c5":"## 7. Recommendation\nBased on the A\/B test, **we should not move the gate to level 40**, as it tends to decrease retention rate.\n\nAverage game rounds may increase, but this is to be expected, as putting a gate at a latter level would simply allow players to play more games before they meet a gate, which in itself is a form of deterrence.","0de700f2":"## Table of content\n\n[0. Executive summary](#0.-Executive-summary)\n\n[1. Background information](#1.-Background-information)    \n    \n[2. Importing packages and setup](#2.-Importing-packages-and-setup)\n\n[3. Data preparation and cleaning](#data_prep)\n* [3.1. Finding and dealing with outliers](#3.1.-Finding-and-dealing-with-outliers)\n\n[4. Initial data exploration](#4.-Initial-data-exploration)\n* [4.1. How many players installed the game, but did not play any round?](#4.1)\n* [4.2. How likely for a player to stay as they progress through the levels?](#4.2)\n* [4.3. What's the difference in overall retention rate between 1 day vs 7 days?](#4.3)\n\n[5. Evaluating control and test group](#5.-Evaluating-control-and-test-group)\n* [5.1 Checking the difference in game rounds played](#5.1)\n* [5.2. Checking the difference in retention rate](#5.2)\n\n\n[6. Conclusion](#6.-Conclusion)\n\n[7. Recommendation](#7.-Recommendation)\n\n[8. Reflection](#8.-Reflection)","006e2012":"To compare 1 day retention, we can use two-sided test, since the mean value is so close together.\n\nTo compare 7 day, we can use one-sided test instead, since we can tell from the boostrapping that group 30 has higher retention rate.","67a06a23":"First, we will just compute the 2 sample means, and see if there's any difference.\n\nNext, we will use t-test to compute if the difference are statistically significant. We will use t-test because:\n1. We can assume that the variance of the 2 samples are the same, from Levene's test\n2. Even though the sample distribution are not normal, Central Limit Theorem states that the sample mean would be normally distributed, given the size of the sample (N ~15,000).","7815f308":"The P-value here is 0.06; even though it's technically higher than the standard significant level of 0.05, it's still a relatively small number, and can **hint that group 40 do indeed have higher game rounds on average than group 30**.\n\nHowever, **this result is to be expected**, as putting a gate at lower level (level 30) would just discourage some players earlier, and thus the lower average game rounds.","2fc958f7":"Since the P-value is high of 0.746 (> 0.05), we fail to reject the Null hypothesis, and thus conclude **there is no significant difference in variance between group_30 and 40.**","0f33ba59":"## 1. Background information\nThis project is based on mini project from Datacamp.\n\n**Cookie Cats** is a popular mobile puzzle game developed by Tactile Entertainment. It's a classic \"connect three\"-style puzzle game where the player must connect tiles of the same color to clear the board and win the level. It also features singing cats, which are well trained in harmonizing with each other.\n\nAfter progressing a certain number of levels, players will encounter gates that force them to wait a non-trivial amount of time (about 2 x 4hr) or make an in-app purchase to progress. In addition to driving in-app purchases, these gates serve the important purpose of giving players an enforced break from playing the game, hopefully resulting in that the player's enjoyment of the game being increased and prolonged.\n\nBut where should the gates be placed? Initially the first gate was placed at level 30, but an A\/B test was conducted to investigate if retention rate and engagement will improve if the gate is placed at level 40 instead .\n","59481b95":"The distribution looks more sensible now; although as we can see, there's still a fair bit of spread as reach the higher number of game rounds","5493ac2d":"## 6. Conclusion\n\nThe 2 main conclusions that we can draw from the A\/B tests are these:\n1. Average game rounds per player increase when we move the gate to level 40 by about 2% (~24 more out of 120)\n2. On the other hand, retention rate after 7 days seem to perform worse when the gate is at level 40 (~0.8%)","5f5d3acf":"<a id='4.2'><\/a>\n### 4.2. How likely for a player to stay as they progress through the levels?"}}