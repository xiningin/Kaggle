{"cell_type":{"b6a5c528":"code","00600715":"code","90545b91":"code","10d6a3c3":"code","fce41e7e":"code","a59ff242":"code","82f18c44":"code","ea4cfb90":"code","7ef6fc20":"code","6e090f27":"code","e05906f6":"code","2a8b2670":"code","97366b39":"code","aa406486":"code","330ec0a6":"code","5d6698c6":"code","68f71fce":"code","0f8104a5":"code","61d8d7b3":"markdown","4d60d94c":"markdown"},"source":{"b6a5c528":"#dataset diseasecotton dataset kaggle \n#credits goes to the dataset creator\n","00600715":"#50% of gpu usage when running on the system gpu can be done by usage of below code \n\n\n\n\nfrom tensorflow.compat.v1 import ConfigProto\nfrom tensorflow.compat.v1 import InteractiveSession\n\nconfig = ConfigProto()\nconfig.gpu_options.per_process_gpu_memory_fraction = 0.5\nconfig.gpu_options.allow_growth = True\nsession = InteractiveSession(config=config)\n\n\n\n","90545b91":"# import the libraries as shown below\n\nfrom tensorflow.keras.layers import Input, Lambda, Dense, Flatten\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.applications.resnet50 import ResNet50\n#from keras.applications.vgg16 import VGG16\nfrom tensorflow.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img\nfrom tensorflow.keras.models import Sequential\nimport numpy as np\nfrom glob import glob\n#import matplotlib.pyplot as plt","10d6a3c3":"# re-size all the images to this\nIMAGE_SIZE = [224, 224]\n\ntrain_path = '..\/input\/cotton-disease-dataset\/Cotton Disease\/train'\nvalid_path = '..\/input\/cotton-disease-dataset\/Cotton Disease\/val'\n","fce41e7e":"# Import resnet50 application library \n# Here we will be using imagenet weights\n\nresnet = ResNet50(input_shape=IMAGE_SIZE + [3], weights='imagenet', include_top=False)\n\n\n","a59ff242":"# don't train existing weights\nfor layer in resnet.layers:\n    layer.trainable = False","82f18c44":"  # useful for getting number of output classes\nfolders = glob('..\/input\/cotton-disease-dataset\/Cotton Disease\/train\/*')","ea4cfb90":"# our layers - you can add more if you want\nx = Flatten()(resnet.output)","7ef6fc20":"prediction = Dense(len(folders), activation='softmax')(x)\n\n# create a model object\nmodel = Model(inputs=resnet.input, outputs=prediction)","6e090f27":"\n# view the structure of the model\nmodel.summary()\n","e05906f6":"# tell the model what cost and optimization method to use\nmodel.compile(\n  loss='categorical_crossentropy',\n  optimizer='adam',\n  metrics=['accuracy']\n)\n","2a8b2670":"# Use the Image Data Generator to import the images from the dataset\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)\n\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)","97366b39":"# Make sure you provide the same target size as initialied for the image size\ntraining_set = train_datagen.flow_from_directory('..\/input\/cotton-disease-dataset\/Cotton Disease\/train',\n                                                 target_size = (224, 224),\n                                                 batch_size = 32,\n                                                 class_mode = 'categorical')","aa406486":"test_set = test_datagen.flow_from_directory('..\/input\/cotton-disease-dataset\/Cotton Disease\/test',\n                                            target_size = (224, 224),\n                                            batch_size = 32,\n                                            class_mode = 'categorical')","330ec0a6":"# fit the model\n# Run the cell. It will take some time to execute\n#increase the no of epochs to get a better accuracy\n\nr = model.fit_generator(\n  training_set,\n  validation_data=test_set,\n  epochs=5,\n  steps_per_epoch=len(training_set),\n  validation_steps=len(test_set)\n)","5d6698c6":"import matplotlib.pyplot as plt","68f71fce":"# plot the loss\nplt.plot(r.history['loss'], label='train loss')\nplt.plot(r.history['val_loss'], label='val loss')\nplt.legend()\nplt.show()\nplt.savefig('LossVal_loss')\n\n# plot the accuracy\nplt.plot(r.history['accuracy'], label='train acc')\nplt.plot(r.history['val_accuracy'], label='val acc')\nplt.legend()\nplt.show()\nplt.savefig('AccVal_acc')","0f8104a5":"# save it as a h5 file\n\n\nfrom tensorflow.keras.models import load_model\n\nmodel.save('model_resnet50.h5')","61d8d7b3":"Please download the dataset from the below url","4d60d94c":"## cotton plant disease detection using Resnet50"}}