{"cell_type":{"ef295fa1":"code","df544f6f":"code","d40f0038":"code","1a97c741":"code","46bc6c40":"code","e08a6fa7":"code","865a3422":"code","48792f17":"code","539ac1c1":"code","aac83231":"code","6ca467f8":"code","e03305aa":"code","65cea4d2":"code","bde0dff6":"code","3a53a2d8":"code","6913900f":"code","114b9ac1":"code","0ee8a3c7":"code","e2109575":"code","9967da41":"markdown","8d79bb69":"markdown","c2fedfba":"markdown"},"source":{"ef295fa1":"# 1. \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\nimport pandas as pd","df544f6f":"train = pd.read_csv('.\/train.csv')\ntest = pd.read_csv('.\/test.csv')","d40f0038":"submission = pd.read_csv('.\/sample_submission.csv')","1a97c741":"import pickle\nwith open( \"\ucd5c\uc885 \uc804\ucc98\ub9ac \uc644\ub8cc\", \"rb\" ) as file:\n    train = pickle.load(file)","46bc6c40":"import pickle\nwith open( \"\ucd5c\uc885 \uc804\ucc98\ub9ac \uc644\ub8cc_test\", \"rb\" ) as file:\n    test = pickle.load(file)","e08a6fa7":"train.columns","865a3422":"import seaborn as sns\nimport matplotlib.pyplot as plt","48792f17":"#sns.pairplot(train)","539ac1c1":"sns.histplot(train.price[train.price > 2000], kde= True)\nplt.show()\nsns.histplot(train.price[train.price < 2000], kde= True)\nplt.show()","aac83231":"sns.boxplot(train.price)","6ca467f8":"train.starbucks.describe()","e03305aa":"train[train.starbucks > 5][['population','starbucks']]","65cea4d2":"describe_df = pd.DataFrame(train.describe(include='all'))","bde0dff6":"describe_df.iloc[:,1:15]","3a53a2d8":"describe_df.iloc[:,15:]","6913900f":"# 2. \ubc94\uc8fc\ud615 \ub370\uc774\ud130 \ubcc0\ud658\nsido_dict = {'\uc11c\uc6b8': 0, '\uc778\ucc9c': 1, '\ub300\uc804': 2, '\uad11\uc8fc': 3, '\ub300\uad6c': 4, '\uc6b8\uc0b0': 5,\n             '\ubd80\uc0b0': 6, '\uc138\uc885': 7, '\uc81c\uc8fc': 8, '\uacbd\uae30': 9, '\uac15\uc6d0': 10, '\ucda9\ubd81': 11,\n             '\ucda9\ub0a8': 12, '\uacbd\ubd81': 13, '\uacbd\ub0a8': 14, '\uc804\ubd81': 15, '\uc804\ub0a8':16}\n\ntrain['sido'] = train['sido'].map(sido_dict)\ntest['sido'] = test['sido'].map(sido_dict)\n\n\n# 3. \ud30c\uc0dd\ubcc0\uc218 \uc0dd\uc131\n\n#  3-1. \ucd1d \ud559\uad50 \uc218\ntrain['schools'] = train['elemen_school'] + train['middle_school'] + train['high_school'] + train['special_school']\ntest['schools'] = test['elemen_school'] + test['middle_school'] + test['high_school'] + test['special_school']\n\n#  3-2. \uc2e0\uaddc\uc804\uc785\uc778\uad6c \ube44\uc728\ntrain['newcommer_ratio'] = train['newcommer_1yr']\/train['population']\ntest['newcommer_ratio'] = test['newcommer_1yr']\/test['population']\n\n# 3-3 \uba74\uc801\ub2f9 \uc778\uad6c\uc218 \ntrain['pop_ratio'] = train['population']\/train['gross_area']\ntest['pop_ratio'] = test['population']\/test['gross_area']\n\n# 3-4 \uba74\uc801\ub2f9 \uc2e0\uaddc\uc804\uc785\uc778\uad6c\ube44\uc728\ntrain['newcommer_ratio2'] = train['newcommer_ratio']\/ train['pop_ratio']\ntest['newcommer_ratio2'] = test['newcommer_ratio']\/ test['pop_ratio']\n\n# 3-4 \ubcf5\ud569 \ud30c\uc0dd\ubcc0\uc218 \uc0dd\uc131\ntrain['jojung_special_school'] = train['jojung']* train['special_school']\ntest['jojung_special_school'] = test['jojung']* test['special_school']\n\n# 3-5 \ub85c\uadf8\ubcc0\ud658\n#train['population2'] = np.log(train['population'])\n#test['population2'] = np.log(test['population'])\n\n# 4. \ubd88\ud544\uc694 \ubcc0\uc218 \uc81c\uac70\ny_train = train['price']\nX_train = train.drop(['id', 'address', 'price','sigungu','special_school','museum','industry','unsold','compet_rate_1yr'], axis=1)\nX_test = test.drop(['id', 'address', 'sigungu','special_school','museum','industry','unsold','compet_rate_1yr'], axis=1)\n#\n# special_school, museum,  industry, unsold, compet_rate_1yr \n\n# 5. \ubaa8\ub378 \uc0dd\uc131\nfrom sklearn.ensemble import RandomForestRegressor\nmodel = RandomForestRegressor(random_state=1) \n\nfrom catboost import CatBoostRegressor\nmodel2 = CatBoostRegressor(n_estimators = 300, loss_function = 'RMSE', eval_metric = 'MAPE')\n#model2 = CatBoostRegressor(n_estimators = 200, loss_function = 'MAE', eval_metric = 'MAPE', cat_features = cfi )\n\n\n\n# 6. \ubaa8\ub378\ud559\uc2b5\n#model.fit(X_train, y_train)\nmodel2.fit(X_train, y_train)\n","114b9ac1":"model2","0ee8a3c7":"model2.get_evals_result()","e2109575":"pred = model2.predict(X_test) # \uc608\uce21\uac12 \uc0dd\uc131\nsubmission['price'] = pred  # \uc608\uce21\uac12 \uc81c\ucd9c \ud30c\uc77c\uc5d0 \uc800\uc7a5\nsubmission.to_csv('my_submission.csv', index=False)   ","9967da41":"# 3. \ubaa8\ub378\uc124\uacc4 \ubc0f \uc608\uce21","8d79bb69":"\n# <span style=\"color:royalblue\"> [\uc81c 2\ud68c] \ubd80\ub3d9\uc0b0 \ub370\uc774\ud130 \ubd84\uc11d \uacbd\uc9c4\ub300\ud68c : \uc2dc\ub3c4\ubcc4 \ud3c9\ub2f9 \uc544\ud30c\ud2b8 \uac00\uaca9\uc608\uce21 <\/span>\n---","c2fedfba":"<div style=\"text-align: right\"> Final Edition : 2021.12.15<br>\n    copyright\u24d2 2021 All rights reserved by Data Lover Pablo <\/div>"}}