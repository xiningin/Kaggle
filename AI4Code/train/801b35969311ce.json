{"cell_type":{"0cb7a7a2":"code","68a9e598":"code","3fc59ebd":"code","38442794":"code","166fadc0":"code","1d611699":"code","e1faafec":"code","d55259be":"code","a007b263":"code","26e1876e":"code","dcb648a3":"code","902ebbb7":"code","0fe82c50":"code","72f9bfe8":"code","67bd9022":"code","25bcfb9a":"code","ecc7baab":"code","e1062fa1":"code","6a74d9a2":"code","06aedfa0":"code","2c6c9d34":"code","9adb1c66":"code","b12fd964":"code","88938dce":"code","9927e338":"code","70b1441a":"code","82037387":"code","39c084f2":"code","02c9f228":"code","e5aa012e":"code","b000926a":"code","aa6ea84f":"code","97d20bfc":"code","acc6737d":"code","afd14268":"code","491c3d36":"code","43dc5485":"code","a2135e47":"code","3d39d58b":"code","e29d0b61":"code","8bae8590":"code","aa43e5cb":"code","85dd25da":"code","c6cec3fa":"code","37accd42":"code","040487fa":"code","a164549e":"code","11c6463f":"code","8bf1615f":"code","38fcdcd1":"code","b1ae88ba":"code","3c93c979":"code","63bb187c":"code","ba5c5c28":"code","f99da68b":"code","d634f800":"code","d5e97252":"code","da52bf45":"code","ae6b39b5":"code","4746b5bc":"code","7d34a282":"code","17d29f80":"code","787a6afe":"code","aa7306e6":"code","b49d59b0":"code","236973be":"code","2a96c78b":"code","746afd61":"code","4b5b5444":"code","a9e7adf5":"code","e9dfa16e":"code","9cb62971":"code","13a84d7a":"code","7a8289b7":"code","c1dde5e2":"code","0044cc54":"code","47074d3d":"markdown","2ce754d4":"markdown","9d5ed770":"markdown","b6791787":"markdown","83e9762b":"markdown","63d7ba23":"markdown","53864233":"markdown","77f6b9a6":"markdown","784f7cc0":"markdown","358d37fb":"markdown","69461b61":"markdown","0549aa2f":"markdown","e2f759a7":"markdown","d452bb18":"markdown","1489871c":"markdown","3a30847b":"markdown","076e2bd0":"markdown","b68e94ee":"markdown","c33551aa":"markdown","c7c51dd3":"markdown","2df74575":"markdown","a02200c1":"markdown","4e4d9b05":"markdown","73bc43b3":"markdown","e1f450b3":"markdown","c53544fa":"markdown","a687b443":"markdown","8188c092":"markdown","f42be651":"markdown","cace2799":"markdown","38d57912":"markdown","0338821d":"markdown","9fb6ea0c":"markdown","53433d0d":"markdown"},"source":{"0cb7a7a2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns \nimport matplotlib.pyplot as plt \nfrom sklearn.model_selection import train_test_split, GridSearchCV, RandomizedSearchCV, cross_val_score\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom yellowbrick.model_selection import FeatureImportances, LearningCurve\nfrom sklearn.tree import DecisionTreeClassifier, plot_tree\nfrom yellowbrick.classifier import ClassPredictionError\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom yellowbrick.classifier import PrecisionRecallCurve, DiscriminationThreshold\nimport sklearn.metrics as metrics\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import roc_curve, confusion_matrix, ConfusionMatrixDisplay, plot_roc_curve\nfrom sklearn.model_selection import KFold\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","68a9e598":"train = pd.read_csv(\"\/kaggle\/input\/airline-passenger-satisfaction\/train.csv\", index_col=\"Unnamed: 0\")\ntest = pd.read_csv(\"\/kaggle\/input\/airline-passenger-satisfaction\/test.csv\", index_col=\"Unnamed: 0\")","3fc59ebd":"for col in train.columns:\n    if train[col].dtype == 'object':\n        print(f'Name der Spalte ist: {col} und die unique Werte sind: {train[col].unique()}')\n        print()","38442794":"fig, ax = plt.subplots()\nfig.set_size_inches(10, 8)\nsns.countplot(x = 'Type of Travel', data = train)\nax.set_xlabel('Type of Travel', fontsize=15)\nax.set_ylabel('Count', fontsize=15)\nax.set_title('Type of Travel Distribution', fontsize=15)\nax.tick_params(labelsize=15)\nsns.despine()","166fadc0":"plt.figure(figsize=(10,5), dpi=100)\nsns.scatterplot(data=train,x='Arrival Delay in Minutes',y='Departure Delay in Minutes',hue='satisfaction',palette='Paired', alpha=0.8)","1d611699":"train = pd.get_dummies(train)\ntest = pd.get_dummies(test\n                     )\ntest[\"Arrival Delay in Minutes\"] = test[\"Arrival Delay in Minutes\"].fillna(0.0).astype(int) \ntrain[\"Arrival Delay in Minutes\"] = train[\"Arrival Delay in Minutes\"].fillna(0.0).astype(int) \ntrain.info()","e1faafec":"plt.figure(figsize=(20, 15))\nheatmap = sns.heatmap(train.corr(), vmin=-1, vmax=1, cmap='BrBG',annot=True, xticklabels=True, yticklabels=True)\nheatmap.set_title('Correlation Heatmap', fontdict={'fontsize':8});\nplt.show()","d55259be":"train.head()","a007b263":"#scaler.fit(X_train)\n#X_train = scaler.transform(X_train)\n","26e1876e":"train.shape","dcb648a3":"test.shape","902ebbb7":"train.info()","0fe82c50":"#train.isnull().sum()","72f9bfe8":"#test.isnull().sum()\n","67bd9022":"#train.dropna(inplace=True)\n#test.dropna(inplace=True)\n#Haetten wir genutzt, wenn wir null werte hatten","25bcfb9a":"print('Min age: ', train['Age'].max())\nprint('Max age: ', train['Age'].min())","ecc7baab":"fig, (ax1, ax2) = plt.subplots(nrows = 1, ncols = 2, figsize = (13, 5))\nsns.boxplot(x = 'Age', data = train, orient = 'v', ax = ax1)\nax1.set_xlabel('People Age', fontsize=15)\nax1.set_ylabel('Age', fontsize=15)\nax1.set_title('Age Distribution', fontsize=15)\nax1.tick_params(labelsize=15)\n#Ein boxplot, welches die Verteilung des Alters zeigt\n\nsns.distplot(train['Age'], ax = ax2)\nsns.despine(ax = ax2)\nax2.set_xlabel('Age', fontsize=15)\nax2.set_ylabel('Occurence', fontsize=15)\nax2.set_title('Age und Ocucurence', fontsize=15)\nax2.tick_params(labelsize=15)\n#Alter und die H\u00e4ufigkeit des Alters\n\nplt.subplots_adjust(wspace=0.5)\nplt.tight_layout() ","e1062fa1":"sns.histplot(x='Flight Distance',hue=\"satisfaction_satisfied\",data=train,kde=True,palette=\"flare\")\n","6a74d9a2":"train = train.drop([\"Gender_Male\", \n                    \"Gate location\",\n                    \"Age\",\n                    \"Departure\/Arrival time convenient\", \n                    \"Departure Delay in Minutes\", \n                    \"Arrival Delay in Minutes\", \n                    \"id\", \n                    \"Gender_Female\",\n                    \"Customer Type_disloyal Customer\",\n                    \"Type of Travel_Personal Travel\", \n                    \"Class_Eco Plus\",\n                    \"satisfaction_neutral or dissatisfied\"] ,\n                    axis=1)","06aedfa0":"test = test.drop([\"Gender_Male\", \n                  \"Gate location\",\n                  \"Age\",\n                  \"Departure\/Arrival time convenient\", \n                  \"Departure Delay in Minutes\", \n                  \"Arrival Delay in Minutes\", \n                  \"id\", \n                  \"Gender_Female\",\n                  \"Customer Type_disloyal Customer\",\n                  \"Type of Travel_Personal Travel\", \n                  \"Class_Eco Plus\",\n                  \"satisfaction_neutral or dissatisfied\"],\n                    axis=1)","2c6c9d34":"X_train=train.drop('satisfaction_satisfied', axis=1)\ny_train=train['satisfaction_satisfied'].values\n","9adb1c66":"X_test=test.drop('satisfaction_satisfied', axis=1)\ny_test=test['satisfaction_satisfied'].values\n","b12fd964":"#scaler = StandardScaler() \n#X_train = scaler.fit_transform(X_train)\n#X_test = scaler.transform(X_test)","88938dce":"#class_names = list(str(np.unique(y_train)))\n#feature_names = list(X_train.columns)","9927e338":"#X_train, X_test, y_train, y_test=train_test_split(X, y, test_size=0.3, random_state=42)","70b1441a":"knn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train, y_train)","82037387":"y_pred_knn = knn.predict(X_test)","39c084f2":"print(\"Accuracy-Score ist\",metrics.accuracy_score(y_test, y_pred_knn))","02c9f228":"target_names = list(np.unique(y_train))","e5aa012e":"params_knn = {'n_neighbors':np.arange(2,15, 1),\n\n             }\n\nknn_cv = GridSearchCV(estimator= knn,\n                    param_grid=params_knn,\n                    scoring='recall',\n                    return_train_score=True,\n                    verbose=1,\n                    cv=5,\n                    n_jobs=-1)\nknn_cv.fit(X_train, y_train)\n#'weights': ['uniform', 'distance'], 'leaf_size': np.arange(10,20, 1)","b000926a":"knn_cv_knn_best_params = knn_cv.best_params_['n_neighbors']\n","aa6ea84f":"ypred_knn_cv = knn_cv.predict(X_test) ","97d20bfc":"best_clf_knn= knn_cv.best_estimator_\nprint('Klassifikationsgenauigkeit ist:',round(knn_cv.score(X_test, y_test),3))\nprint('Beste Anzahl Nachbarn:', knn_cv_knn_best_params)\n#print('Beste Anzahl weights:', knn_cv_knn_best_params['weights'])\n#print('Beste Anzahl leaf_size:', knn_cv_knn_best_params['leaf_size'])\n","acc6737d":"visualizer_knn = ClassPredictionError(knn_cv.best_estimator_, classes=target_names)\nvisualizer_knn.fit(X_train, y_train)\nvisualizer_knn.score(X_test, y_test)\nvisualizer_knn.show();","afd14268":"print(classification_report(y_test, y_pred_knn, digits=3))","491c3d36":"print(classification_report(y_test, ypred_knn_cv, digits=3))","43dc5485":"clf = DecisionTreeClassifier(max_depth= 3, random_state= 42)","a2135e47":"clf.fit(X_train, y_train)\ny_predict_clf = clf.predict(X_test)","3d39d58b":"clf.score(X_test, y_test)","e29d0b61":"class_names = list(str(np.unique(y_train)))\nfeature_names = list(X_train.columns)","8bae8590":"plt.figure(figsize=(15,10))\nplot_tree(clf, max_depth=2, filled=True, feature_names = feature_names, class_names= class_names)\nplt.show()","aa43e5cb":"max_depth = list(range(1, 21)) \nmax_depth.append(None) \n\nparams_tree = {\n            \"max_depth\": max_depth,\n            \"max_features\": range(2, (len(X_train.columns)+1)), \n            \"min_samples_leaf\": range(1, 10),\n            \"criterion\": [\"gini\", \"entropy\"]}\n\nclf_cv = RandomizedSearchCV(clf, params_tree, cv=5, n_jobs=-1) \nclf_cv.fit(X_train, y_train)","85dd25da":"df_cv_results = pd.DataFrame(clf_cv.cv_results_)","c6cec3fa":"df_cv_results.head()","37accd42":"best_clf = clf_cv.best_estimator_\nprint(best_clf)","040487fa":"clf_cv_best_params = clf_cv.best_params_\nprint('Score:',round(clf_cv.score(X_test, y_test),3))\nprint('Die besten Parameter f\u00fcr unsern Decision Tree sind:', clf_cv_best_params)","a164549e":"y_pred_tree = clf_cv.predict(X_test)","11c6463f":"visualizer = ClassPredictionError(clf_cv.best_estimator_, classes=target_names)\nvisualizer.fit(X_train, y_train)\nvisualizer.score(X_test, y_test)\nvisualizer.show();","8bf1615f":"print(classification_report(y_test, y_predict_clf, digits=3))","38fcdcd1":"print(classification_report(y_test, y_pred_tree, digits=3))","b1ae88ba":"#cm = confusion_matrix(y_test, y_pred_tree)\n#disp = metrics.ConfusionMatrixDisplay(cm, display_labels=clf.classes_)\n#disp.plot(cmap=\"Blues\")","3c93c979":"k_fold = KFold(n_splits=5, shuffle=True, random_state=0)","63bb187c":"rfc = RandomForestClassifier(max_features=8, n_estimators=20)\nrfc.fit(X_train, y_train)\ny_pred_rfc = rfc.predict(X_test)","ba5c5c28":"print(round(accuracy_score(y_test, y_pred_rfc),2)*100)","f99da68b":"rfccv= (cross_val_score(rfc, X_train, y_train, cv=k_fold, n_jobs=1, scoring = 'accuracy').mean())\nprint(rfccv)","d634f800":"fi = FeatureImportances(rfc, ylabel='Feautures', colormap= 'YlOrRd')\nfi.fit(X_train, y_train)\nfi.show()","d5e97252":"param_rfc = [{'n_estimators': [10, 25],\n              'max_features': [5, 10],\n              'max_depth': [10, 50, None], \n              'bootstrap': [True, False]}\n            ]\n\nrfc_cv = GridSearchCV(rfc, param_rfc, cv=k_fold, scoring='neg_mean_squared_error')\nrfc_cv.fit(X_train, y_train)","da52bf45":"ypred_rfc_cv = rfc_cv.predict(X_test)","ae6b39b5":"rfc_cv_best_params = rfc_cv.best_params_\nprint('Die besten Parameter f\u00fcr unsern Random Forest sind:', rfc_cv_best_params)","4746b5bc":"print(metrics.classification_report(y_test, y_pred_rfc, digits=3))","7d34a282":"print(classification_report(y_test, ypred_rfc_cv, digits=3))","17d29f80":"#scaler = StandardScaler() \n#scaler.fit(X_train)\n#X_train_clf_rf = scaler.transform(X_train)","787a6afe":"knn.score(X_test, y_test)","aa7306e6":"clf.score(X_test, y_test)","b49d59b0":"rfc.score(X_test, y_test)","236973be":"plot_roc_curve(knn_cv.best_estimator_, X_test, y_test);","2a96c78b":"plot_roc_curve(clf_cv.best_estimator_, X_test, y_test);","746afd61":"plot_roc_curve(rfc_cv.best_estimator_, X_test, y_test);","4b5b5444":"viz_dt = DiscriminationThreshold(rfc_cv.best_estimator_)\nviz_dt.fit(X_train, y_train)\nviz_dt.score(X_test, y_test)\nviz_dt.show();","a9e7adf5":"print(classification_report(y_test, y_pred_knn, digits=3))","e9dfa16e":"print(classification_report(y_test, y_pred_tree, digits=3))","9cb62971":"print(classification_report(y_test, y_pred_rfc, digits=3))","13a84d7a":"cm_knn = confusion_matrix(y_test, y_pred_knn)\ncmd = ConfusionMatrixDisplay(cm_knn, display_labels= target_names) \ncmd.plot(cmap=\"Blues\")","7a8289b7":"cm_tree = confusion_matrix(y_test, y_pred_tree)\ncmd = ConfusionMatrixDisplay(cm_tree, display_labels=target_names) \ncmd.plot(cmap=\"Blues\")","c1dde5e2":"cm_rfc = confusion_matrix(y_test, ypred_rfc_cv)\ncmd = ConfusionMatrixDisplay(cm_rfc, display_labels=target_names) \ncmd.plot(cmap=\"Blues\")","0044cc54":"viz_lc = LearningCurve(\n    knn_cv.best_estimator_, cv=k_fold, scoring='recall', n_jobs=-1\n)\nviz_lc.fit(X_train, y_train)\nviz_lc.show();","47074d3d":"# **DecisionTree Hyperparametertuning**","2ce754d4":"> ***Wir benutzten das ClassPredictionError, welche die Anzahl der Trainingsproben f\u00fcr jede Klasse im angepassten Klassifizierungsmodell in Form eines gestapelten Balkendiagramms darstellt. Jeder Balken ist unterteilt, um den Anteil der Vorhersagen (einschlie\u00dflich falsch negativer und falsch positiver Vorhersagen) anzuzeigen.***","9d5ed770":"## Quellen\n* matplotlib, **\"The histogram** (hist) function with multiple data sets\"\nhttps:\/\/matplotlib.org\/3.1.1\/gallery\/statistics\/histogram_multihist.html#sphx-glr-gallery-statisticshistogram-multihist-py [14.01.2022]\n* seaborn, \"**Countplot**\" https:\/\/seaborn.pydata.org\/generated\/seaborn.countplot.html [14.01.2022]\n* ScikitLearn, **\"sklearn.model_selection.GridSearchCV\"** https:\/\/scikitlearn.org\/stable\/modules\/generated\/sklearn.model_selection.GridSearchCV.html#sklearn.model_selection.GridSearchCV\n[16.01.2022]\n* ScikitLearn, **\"Learning Curve\"** https:\/\/www.scikityb.org\/en\/latest\/api\/model_selection\/learning_curve.html [12.01.2022]\n* ScikitLearn, **\"Validation Curve\"** https:\/\/www.scikityb.org\/en\/latest\/api\/model_selection\/validation_curve.html [09.01.2022]\n* ScikitLearn,**\"Confusion Matrix\"** https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.confusion_matrix.html [08.01.2022]\n* ScikitLearn, **\"sklearn.metrics.plot_roc_curve\"** https:\/\/scikitlearn.org\/stable\/modules\/generated\/sklearn.metrics.plot_roc_curve.html [11.01.2022]\n* ScikitLearn, \"**sklearn.metrics.confusion_matrix\"** https:\/\/scikitlearn.org\/stable\/modules\/generated\/sklearn.metrics.confusion_matrix.html [11.01.2022]\n* ScikitLearn, \"**sklearn.tree.DecisionTreeClassifier\"** https:\/\/scikitlearn.org\/stable\/modules\/generated\/sklearn.tree.DecisionTreeClassifier.html [12.01.2022]\n* ScikitLearn, **\"Class Predicition Error\"** https:\/\/www.scikityb.org\/en\/latest\/api\/classifier\/class_prediction_error.html [08.01.2022]\n* ScikitLearn, **\"Feature Importances\"** https:\/\/www.scikityb.org\/en\/latest\/api\/model_selection\/importances.html [14.01.2022]\n* ScikitLearn, **\"Class Prediction Error\"** https:\/\/www.scikit-yb.org\/en\/latest\/api\/classifier\/class_prediction_error.html [09.01.2022]\n* ScikitLearn, \"**sklearn.model_selection.cross_val_score\"** https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.cross_val_score.html [11.01.2022]\n* ScikitLearn, **\"Discrimination Threshold\"** \"https:\/\/www.scikit-yb.org\/en\/latest\/api\/classifier\/threshold.html [09.01.2022]\n* matplotlib, **\"subplot\"** https:\/\/matplotlib.org\/stable\/api\/_as_gen\/matplotlib.pyplot.subplot.html [08.01.2022]\n* ScikitLearn, **\"sklearn.model_selection.RandomizedSearchCV\"** https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.RandomizedSearchCV.html [09.01.2022]\n* ScikitLearn, **\"Tuning the hyper-parameters of an estimator\"** https:\/\/scikit-learn.org\/stable\/modules\/grid_search.html [09.01.2022]\n* ScikitLearn, **\"sklearn.model_selection.learning_curve\"** https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.learning_curve.html[08.01.2022]\n* ScikitLearn, **\"sklearn.model_selection.accuracy_score\"** https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.accuracy_score.html [12.01.2022]\n* ScikitLearn, **\"sklearn.model_selection.accuracy_score**\" https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.tree.plot_tree.html [12.01.2022]\n* ScikitLearn, **\"Precision-Recall\"** https:\/\/scikit-learn.org\/stable\/auto_examples\/model_selection\/plot_precision_recall.html [09.01.2022]\n* matplotlib, **\"Choosing Colormaps\"** https:\/\/matplotlib.org\/stable\/tutorials\/colors\/colormaps.html [08.01.2022]\n* ScikitLearn, **\"Standard Scalar\"** https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.preprocessing.StandardScaler.html\n* Okamura, **\"Scott GridSearchCV for Beginners\"**, Dec 29, 2020, https:\/\/towardsdatascience.com\/gridsearchcv-for-beginners-db48a90114ee","b6791787":"# **RandomForest**\n","83e9762b":"# **K-N\u00e4chste Nachbarn HyperparameterTuning**","63d7ba23":"**Umwandeln der kategorischen in numerische Werte**\n\n**Daten auf Null Werte \u00fcberpr\u00fcfen**","53864233":"# Vergleich","77f6b9a6":"# Datensatz laden","784f7cc0":"# ROC (Receiver operating characteristics)  ","358d37fb":"> ***L\u00f6schen unwichtiger und unn\u00f6tiger Daten, die zuvor durch unser heatmap deutlich geworden ist. Dadurch haben wir auch weniger Daten***","69461b61":"# Datenaufbereitung und- Verst\u00e4ndnis","0549aa2f":"**Wir benutzen daf\u00fcr das GridSearch**","e2f759a7":"# Learning Curve","d452bb18":"**Aus dem Trainingsdatensatz berechnete Lernkurve, die einen Eindruck davon vermittelt, wie gut das Modell lernt.**","1489871c":"# Threshold","3a30847b":"# **RandomForest Hyperparametertuning**\n","076e2bd0":"# Train-Test Split","b68e94ee":" # **K-N\u00e4chste Nachbarn** ","c33551aa":"**Kategorische Werte in nummerische Werte mit Dummys umwandeln**","c7c51dd3":"# Esra \u00d6zg\u00fcn\n* Data: https:\/\/www.kaggle.com\/teejmahal20\/airline-passenger-satisfaction\n\n* Dieser Datensatz enth\u00e4lt eine Studie \u00fcber die Zufriedenheit von Flugpassagieren, die Faktoren,\nwelche stark mit der Zufriedenheit (oder Unzufriedenheit) der Passagiere korrelieren. \n* Ziel dieses Notebooks ist die Zufriedenheit der Passagiere vorherzusagen.\n* Professor: Prof. Dr. Roland M\u00fcller\n* Abgabetermin: 03.02.2022","2df74575":"> **Da wir die Zufriedenheit der Kunden vorhersagen m\u00f6chten, l\u00f6schen wir (satisfaction_satisfied)**","a02200c1":"**Classification Report f\u00fcr unsern Klassifikator und HyperparameterTuning**","4e4d9b05":"**Die wichtigste Column in meinem Projekt stellt die Column 'satisfaction_satisfied' dar, da man hier erkennt ob der Kunde\nzufrieden war oder nicht.**","73bc43b3":"# Daten auf NULL werte \u00fcberpr\u00fcfen","e1f450b3":"**Classification Report f\u00fcr unsern Klassifikator und HyperparameterTuning**","c53544fa":"**Correlation heatmap, um zu sehen, welche Eigenschaften gut mit der Kundenzufriedenheit(satisfaction) korrelieren**","a687b443":"# **L\u00f6schen unwichtiger Daten**","8188c092":"# Datenverst\u00e4ndnis","f42be651":"ROC bei allen Methoden, die ich angewendet habe, um die zu bewerten.","cace2799":"> **Beim Alter ist von 7 bis 85 jedes Jahr vertreten.**","38d57912":"# **Decision Tree**","0338821d":"**Eine weitere Methode, die ich genutzt habe ist der Entscheidungsbaum(engl. Decision Tree) um einen Vergleich ziehen zu k\u00f6nnen, damit ich das bestm\u00f6glichste Modell f\u00fcr die Vorhersage von customer satisfied erstellen kann.**","9fb6ea0c":"# Modellevaluierung ","53433d0d":"**F\u00fcr das Decision Tree nutzen wir das RandomizedSearchCV**"}}