{"cell_type":{"29dab6bd":"code","83ad2020":"code","e4a1e2f9":"code","b7460d4d":"code","c4bb8d62":"code","9e8cf9df":"code","230bbd75":"code","ddc18d8d":"code","d82df2e5":"code","d26b34c4":"code","882d0e57":"code","dbf35498":"code","0210d2b7":"code","466cafd8":"code","ad5a0dcb":"code","b13285b6":"code","b9ac2b4d":"code","800bd506":"code","6db95c44":"code","29791788":"code","8e69c8c8":"code","e0c6d56a":"code","cdeb27a5":"code","87decccd":"code","e206b6ab":"code","186df198":"code","4631d26e":"code","dc5d133a":"code","b8a84f5b":"code","93fc40b1":"code","12cd3a3a":"code","044b4ab7":"code","d4e48fc4":"code","8d665a2b":"code","e73b3473":"code","9bcca978":"code","36164251":"code","651025d4":"code","348390de":"code","7f8087a5":"code","6fbd78d9":"code","37e22603":"code","610fc580":"code","7eb43212":"code","5b367eed":"code","204b0197":"code","a579bb57":"code","a8c295fb":"code","141dca9d":"code","9e57e828":"code","4858e1af":"code","59a1ba28":"code","ffe1ea4b":"code","943b174a":"code","a892dcb9":"code","4edd728f":"markdown","cf1b5839":"markdown","8c839cdd":"markdown","d05a2e9a":"markdown","2432c842":"markdown","1b840f72":"markdown","99f4696d":"markdown","4933082b":"markdown","bca3c165":"markdown","dc2b4d77":"markdown","9e3b4624":"markdown","1a6cb202":"markdown","d1717c8e":"markdown","419e9da6":"markdown","a25c9d64":"markdown","47a7c380":"markdown","c09018c2":"markdown","953e2c88":"markdown","3618fe5e":"markdown","9201695e":"markdown","7f52b665":"markdown","02dccf11":"markdown","acc0a9b6":"markdown","58c57886":"markdown","22495e2f":"markdown","2d8d463f":"markdown","679cf85e":"markdown","2c26aa1f":"markdown","c803912b":"markdown","be1719b6":"markdown","deaafbb5":"markdown","f48e032e":"markdown","436384d5":"markdown","fe186b14":"markdown","5ce17e02":"markdown","f8442ab0":"markdown","93d17c80":"markdown","be0314b3":"markdown","2d1039ae":"markdown","92397e10":"markdown","5cf368ca":"markdown","518ccfcc":"markdown","23d3583a":"markdown","e66a0bad":"markdown","2dd8f5a7":"markdown","fce5116f":"markdown","762fbfb7":"markdown","e0af05fa":"markdown","f42c6114":"markdown","6f63d4eb":"markdown","3184c8cd":"markdown"},"source":{"29dab6bd":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt  ","83ad2020":"#!pip install xlrd #install a library if it does not exist \nimport xlrd ","e4a1e2f9":"import requests \nimport urllib\nurl = \"https:\/\/www.iposcoop.com\/wp-content\/uploads\/2013\/11\/SCOOP-Rating-Performance.xls\"\n# in Kaggle settings, Internet option must be On for accessing this online data set  \nfile_name, headers = urllib.request.urlretrieve(url)\nprint (file_name)\nwb = xlrd.open_workbook(file_name)\nprint (wb)","b7460d4d":"ws = wb.sheet_by_index(0)\nfor i in range(40):\n    print(i, ws.row(i))","c4bb8d62":"ipo_list = []\nfor i in range(37,ws.nrows):\n    if isinstance(ws.row(i)[0].value, float):\n        ipo_list.append([x.value for x in ws.row(i)])\n    else:\n        print(i, ws.row(i))","9e8cf9df":"len(ipo_list)","230bbd75":"df = pd.DataFrame(ipo_list)\ndf.head(10)","ddc18d8d":"df.columns = ['Date', 'Company', 'Ticker', 'Managers', \\\n              'Offer Price', 'Opening Price', '1st Day Close',\\\n              '1st Day % Chg', '$ Chg Open', '$ Chg Close',\\\n              'Star Rating', 'Performed']\ndf.head(5)","d82df2e5":"def to_date(x):\n    return xlrd.xldate.xldate_as_datetime(x, wb.datemode)\ndf['Date'] = df['Date'].apply(to_date)\ndf.head(5)","d26b34c4":"df['Year'], df['Month'], df['Day'], df['Day of Week'] = \\\ndf['Date'].dt.year, df['Date'].dt.month, df['Date'].dt.day, df['Date'].dt.weekday\ndf.head(5)","882d0e57":"df[df['Offer Price'] < 5].index","dbf35498":"df.drop(df[df['Offer Price'] < 5].index, inplace=True)","0210d2b7":"df.reset_index(drop=True, inplace=True)","466cafd8":"df.dtypes\n#print(df.dtypes.to_latex())","ad5a0dcb":"df['1st Day % Chg'] = df['1st Day % Chg'].astype(float)","b13285b6":"df.dtypes","b9ac2b4d":"by_year_cnt = df.groupby('Year')[['Ticker']].count()\nfig, ax = plt.subplots(figsize=(16,8))\nby_year_cnt.plot(kind='bar', ax=ax, color='crimson')\nax.legend(['Ticker Count'])\nax.set_title('IPO Count by Year', fontdict={'size': 18}, y=1.02)","800bd506":"summary_by_year = df.groupby('Year')['1st Day % Chg'].describe()\nsummary_by_year","6db95c44":"fig, ax = plt.subplots(figsize=(16,8))\nsummary_by_year['mean'].plot(kind='bar', ax=ax)\nax.set_title('Mean First Day Percentage Change by Year', fontdict={'size': 18}, y=1.02)\n#fig.savefig('eda-ipochg.png')","29791788":"df['1st Day Open to Close % Chg'] = ((df['1st Day Close'] - df['Opening Price'])\/df['Opening Price'])\ndf.head(5)","8e69c8c8":"df['1st Day Open to Close % Chg'].describe()","e0c6d56a":"fig, ax = plt.subplots(figsize=(16,8))\ndf.groupby('Year')['1st Day Open to Close % Chg'].mean().plot(kind='bar', ax=ax)\nax.set_title('Mean First Day Open to Close % Change by Year', fontdict={'size': 18}, y=1.02)\nfig.savefig('eda-ipochg-public.pdf')","cdeb27a5":"mean_delta_by_year = df.groupby('Year')[['1st Day Open to Close % Chg']].mean()","87decccd":"mean_delta_by_year.sort_values(ascending=False, by='1st Day Open to Close % Chg')","e206b6ab":"df['1st Day Open to Close $ Chg'] = (df['1st Day Close'] - df['Opening Price'])\ndf[df['Year']==2000]['1st Day Open to Close $ Chg'].describe()","186df198":"fig, ax = plt.subplots(figsize=(16,8))\ndf[df['Year']==2000]['1st Day Open to Close % Chg'].plot(kind='hist', bins=25, ax=ax)\nfig.savefig(\"eda-distribution.png\")","4631d26e":"df[(df['Year']==2000)&(df['1st Day Open to Close % Chg']>=.2)]","dc5d133a":"df['Opening Gap % Chg'] = (df['Opening Price'] - df['Offer Price'])\/df['Offer Price']\ndf.head(5)","b8a84f5b":"df['Opening Gap $ Chg'] = (df['Opening Price'] - df['Offer Price'])\ndf.head(5)","93fc40b1":"def get_mgr_count(x):\n    return len(x.split('\/'))","12cd3a3a":"df['Mgr Count'] = df['Managers'].apply(get_mgr_count)\ndf.head(5)","044b4ab7":"df.groupby('Mgr Count')['1st Day Open to Close % Chg'].count().to_frame()","d4e48fc4":"df.groupby('Mgr Count')['1st Day Open to Close % Chg'].mean().to_frame().plot.barh()","8d665a2b":"df['Lead Mgr'] = df['Managers'].apply(lambda x: x.split('\/')[0])","e73b3473":"df['Lead Mgr'].unique()","9bcca978":"df.groupby('Lead Mgr').agg({'1st Day Open to Close % Chg': ['mean', len]})\\\n.sort_values(by=('1st Day Open to Close % Chg', 'len'))","36164251":"df['Lead Mgr'].unique()","651025d4":"y = df['1st Day Open to Close % Chg'].apply(lambda x: 1 if x > .025 else 0)\nprint(y[0:5])","348390de":"features = df[['Opening Gap % Chg','Month','Day of Week','Mgr Count','Lead Mgr','Offer Price', 'Star Rating']]\n#print(features.head(5).to_latex())","7f8087a5":"features.dtypes \n#rint(features.dtypes.to_latex())","6fbd78d9":"features['Month'] = features['Month'].astype('category')\nfeatures['Day of Week'] = features['Day of Week'].astype('category') \nfeatures.dtypes","37e22603":"X = pd.get_dummies(features)\nX","610fc580":"X_train = X[:-200]\ny_train = y[:-200]\nX_test = X[-200:]\ny_test = y[-200:]","7eb43212":"from sklearn.linear_model import LogisticRegression\n\nclf = LogisticRegression(max_iter=2000)\nclf.fit(X_train, y_train)","5b367eed":"y_pred = clf.predict(X_test) ","204b0197":"from sklearn.metrics import accuracy_score\nprint('Test Accuracy: %.3f' % accuracy_score(y_test, y_pred))","a579bb57":"from sklearn.metrics import plot_confusion_matrix\nfig, ax = plt.subplots(figsize=(3.5,3))\nplot_confusion_matrix(clf, X_test, y_test,normalize ='true', ax=ax)\n#fig.savefig(\"eda-confusion-map.pdf\",format='pdf', dpi=300)","a8c295fb":"df2 = pd.DataFrame({'y_true': y_test, 'y_pred': y_pred})","141dca9d":"df2['correct'] = df2.apply(lambda x: 1 if x['y_true'] == x['y_pred'] else 0, axis=1)","9e57e828":"df2.tail(5)\n#print(df2.tail(5).to_latex()) ","4858e1af":"results = pd.merge(df2, df[['1st Day Open to Close $ Chg']], left_index=True, right_index=True)\nresults.tail(5)\n#print(results.tail(5).to_latex()) ","59a1ba28":"results['1st Day Open to Close $ Chg'].mean()","ffe1ea4b":"results[results['y_pred']==1]['1st Day Open to Close $ Chg'].mean()","943b174a":"df3 = pd.DataFrame(zip(X_train.columns, np.transpose(clf.coef_.tolist()[0])), columns=['features', 'coefficient']) # create a dataframe\ndf3 = df3.sort_values('coefficient', ascending=0).reset_index(drop=True) # sort data frame according to 'coefficient' values\ndf3 = df3.append({'features':'intercept','coefficient' : clf.intercept_.tolist()[0]}, ignore_index=True) # append a new row\ndf3.head(10)","a892dcb9":"df3.tail(10)","4edd728f":"### Add New Feature: First-day return to the public in percentage\n* Only investors get the offering price \n* Suppose that public bought one share of IPO at the exact opening tick and sold them at the precise closing price\n* What is the return at the end of the day?\n* The `first-day return` to the general public is the difference between the opening price and the closing price.\n* Add  a column for the change between the opening price and theclosing price","cf1b5839":"### Summarize the performance of the the IPO in each year\n* Function `describe()`:   Generate descriptive statistics that summarize of the data\n* for example, in 2000\n    * count: 237 IPOs \n    * mean: the mean price of IPOs increase 35\\% in the first day\n    * min: the worst IPO with -26\\% price drop\n    * 50\\%: 50\\% IPOs with at least 16\\% price increase ","8c839cdd":"## Part 5 Model Evaluation\n* Evaluate the accuracy of this model on test dataset.\n* Better than flipping a coin","d05a2e9a":"## Part 2 Data understanding  \n### IPO Data\n* IPO Data comes from IPOScoop.com, which  provides a service of ratings upcoming IPOs. \n* The IPO data from 2000 to present is downloaded from the website https:\/\/www.iposcoop.com\/scoop-track-record-from-2000-to-present\/. \n* The data file `SCOOP-Rating-Performance.xls` is an  **Excel spreadsheet** \n* Read the data (spread sheet) find the spreadsheet consists of both summary and data","2432c842":"### Plot the first-day return\n* Plot the first-day return that the general public by years","1b840f72":"### Predict on test dataset","99f4696d":"# Case Study: Which IPO to Buy? \nSelect using Logistic Regression\n[COMP20121 Machine Learning for Data Analytics](https:\/\/sites.google.com\/site\/hejunhomepage\/Teaching\/machine-learning-for-data-analytics)\n\nAuthor: Jun He \n\n|<img src =\"https:\/\/news.tradimo.com\/wp-content\/uploads\/2020\/01\/GettyImages-1045262938-d6e77886128f4b05b3b4b4e3daef781a-1536x1024.jpg\" width =300>|\n|:--:|\n|[IPO](https:\/\/news.tradimo.com\/wp-content\/uploads\/2020\/01\/GettyImages-1045262938-d6e77886128f4b05b3b4b4e3daef781a.jpg)|","4933082b":"* Many names are replicated with different spellings and punctuation. We will not handle this issue in this project","bca3c165":"### Learning Objectives\n1. Develop  an ML project for selecting IPO based on the real-world data by CRISP-DM\n1. Read Excel spreadsheet and convert float date to the normal format\n1. Add useful new project-specific features    \n1. Evaluate the model performance using a project-specific measurement","dc2b4d77":"### Lecture materials  \n* The materials of this lecture is based on the book: Combs, A., & Roman, M. (2019). [Python Machine Learning Blueprints.](https:\/\/www.packtpub.com\/gb\/big-data-and-business-intelligence\/python-machine-learning-blueprints-second-edition) Packt Publishing Ltd. Second edition. \n* The code of this project is available at Github via searching the book name \"Python Machine Learning Blueprints\"","9e3b4624":"* Loaded the entire Excel workbook\n* `lrd.open_workbook` method: open a spreadsheet file for data extraction and return a `Book` objective.","1a6cb202":"* Describe the new feature","d1717c8e":"### Number of IPOs\n* Exploratory analysis by plotiing the number of IPOs since 2000\n* `by_year_cnt`: records the count of tickers via `groupby`\n* `dataframe.plot(kind=\u2019bar\u2019)` is a Pandas built-in plot method.\n","419e9da6":"* Add  additional date-related columns for the sake of analysis","a25c9d64":"### Expectancy beyond Accuracy\n* With investing, what is important is not the accuracy but the expectancy\n* If a person had a number of small losses, but a couple of huge wins, overall, the model could still be very profitable. \n* **Expectancy** is how much money, on average, you can expect to make or lose per dollar. \n* Let's examine whether this is our case","47a7c380":"### Create a new dataframe with actual, prediction and correctness\n* dataframe `pdf` records the actual output , prediction output () and correctness.\n* Use a `lambda` function to calculate the correctness\n","c09018c2":"### Add New Feature:  `First-day return` to the public in dollar\n* Add another column:  `1st Day Open to Close $ Chg` = 1st day close price - opening price\n* Add one column for  the actual dollar price change from open to close \n* Let's look at Year 2010 statistics ","953e2c88":"### Check data type\n* We check whether data types  are proper.    \n* For example, the column `1st Day %Chg` column represents the change  of IPO (numerical) on the first day but its data type is an object.  \n* Change its data type to a float\n* `astype function`: Cast a Pandas object to a specified dtype ","3618fe5e":"## Part 4 Model Building\n### Target: buy or not buy\n* Binary classification: buy or not buy an IPO?\n* Buy if investing in any IPO leads to a 2.5\\% or greater return on day\none\n* Traget variable `y`: 2.5\\% is a threshold which is worthy of our attention","9201695e":"* This return is much lower than the difference between the offeringprice and closing price","7f52b665":"### Calculate the first-day return (%)\n* calculate the first-day return that the general public by years\n* Sort them in the order from high to low `ascending=False`","02dccf11":"### Encoding: Check categorial data\n* Both `Month` and `Day of Week` are categorical, although they take numerical values such as 1,2,3\n* Both data type is `int`, and should be converted to categorical before encoding\n* `Star Rating` is categorical and its data type `object`. Here we make no change. But it might be converted to `int` if you handle its missing values first. ","acc0a9b6":"### Business goal of This project\n* For institution clients,  **their return**  is the difference between the  **offering price**  of shares and the first day's  **closing price** \n* For general public, their return is the difference between the   **opening price**  on the first day (typically higher than the  **offering price**  to institutional clients) and sales it at the end of the day.   \n* As public, we use ML to help decide \n    1. which IPOs are worth a closer look:  buy\n    1. which ones we may want to take a pass on: not buy\n* This is a binary classification problem\n\n* The price of some IPOs may rise over 100\\% on the first day of trading such as\n    * Seres Therapeutics up 185\\%, 06\/26\/15\n    * Audro Biotech up 147\\%, 4\/15\/15\n    * Shake Shack up 118\\%, 1\/30\/15","58c57886":"### Distribution of first day returns for IPOs in 2000\n*  Plot the distribution of return\n* `datafram.plot`: dataframe built-in method","22495e2f":"## Summary\n* Apply CRISP-DM to the real-world IPO data \n* Understanding business\n    * identify business purpose of this IPO project \n* Data understading and prepareion \n    * Read Excel spreadsheet through `xlrd` library\n    * Convert float dates into the normal date format \n    * EDA of the IPO market\n    * Data cleansing (drop penny IPO) \n    * Feature engineering (add new features) \n    * Dummy encoding of categorical features using `patsy` library\n* Model building\n    * Binary classification with logistic regression\n* Model evaluation:\n    * based on Expectancy rather than accuracy","2d8d463f":"### Merge  the dataframe of  actual, prediction and correctness with the first-day change\n* First the results data is joined with the first-day change data\n* `merge` function:  implement all standard database join operations between DataFrame or named Series objects\n* `left_index = True`:  use the index (row labels) from the left DataFrame or Series as its join key(s)","679cf85e":"* Check each unique lead manager\u2019 name\n* `unique()` function lists unique values in a dataframe column","2c26aa1f":"### Build a model\n* Create a logistic regression model\n* Fit it on training dataset","c803912b":"### Count `'Mgr Count'`  \n* Group `'1st Day Open to Close % Chg'` by `'Mgr Count'`\n* `to_frame()`: Convert Series to DataFrame.","be1719b6":"### Adding features to influence the performance of an IPO:  `'Mgr Count'` \n* Perhaps having more banks (managers) involved leads to better marketing of the issue?\n* Add one column called`'Mgr Count'`\n*  `apply` function:  Apply a function along an axis of the DataFrame, return Series or DataFrame","deaafbb5":"### Keep only related data\n* Skip over the summary data in the sheet     \n* Incorporate the data  only row by row  from line 37.\n* We are only interested in those rows in the sheet that start with a date. \n* If the first first column is in a float format, then the row is with a date. \n* Loop over each row in the spreadsheet, checking whether the first value is a float. If it is, then we add all the cells' values to the list `ipo_list`. \n* `isinstance` function: returns `True` if the specified object is of the specified type (`float` in the code), otherwise `False`","f48e032e":"### Part 3 Understand Features and Add New Features\n### Understand Features \n* What might impact the performance of an offering as it begins trading? \n    * Perhaps the performance of the market in general or the prestige of the underwriters could impact it? \n    * Perhaps the day of the week or the month that it trades is important?\n* Consideration and inclusion of these factors is as important as the data in building up a good model","436384d5":"### Drop unimportant data\n* We have no interest in penny stocks, or particularly low-priced stocks: `['Offer Price'] < 5`\n* Drop them and reset index of the Dataframe\n* `inplace=True` returns None, `inplace=False` returns a copy of the object with the operation performed ","fe186b14":"## Part 1 Business Understanding\n### What is IPO?\n* **Initial public offering (IPO)**  is the process that transfers a private company into a public one. \n* A company gets funding from public through purchasing its shares. \n* One or more investment banks help underwrite the offering \n* The banks make a guarantee to the company that they will purchase all of the shares being offered at the IPO price on the day of the IPO. \n* The underwriters do not intend to keep all of the shares themselves. So, the banks  takes a roadshow to attract interest from institutional clients \n* These clients put in a subscription for the shares, which indicates their interest in buying shares on the day of the IPO. \n* A non-binding contract, as the price of the offering is not finalized until the day of the IPO.  \n*  underwriter set the **offer price** based on the level of interest expressed ","5ce17e02":"### Confusion matrix\n* From the confusion matrix, we see that ML's strategy is\n    * TP (1, 1): low \n    * FN (1, 0):  high. Missing some buys  \n    * TN (0, 0): high. Avoid non-buys\n    * FP (0, 1): low \n    ","f8442ab0":"### IPO stratgegy\n* The returns are centered around zero, but some exceptional returns are on the right\n* Strategy: select   these exceptional IPOs for better returns \n* Show these exceptional IPOs: `'1st Day Open to Close % Chg']`>=20%","93d17c80":"### Handle date  \n* The date type in the spreadsheet is `float` which must be converted  to a proper date in the analysis. \n* Function `xlrd.xldate.xldate_as_datetime(xldate, datemode)`: convert an Excel date\/time number into a datetime.datetime object.\n* `dataframe[column].apply`: Apply a function along an axis of the DataFrame and return Result of applying func along the given axis of the DataFrame. ","be0314b3":"### What factors has the largest impact on buying? \n* Logistic regression offers predictor coefficients as the relative importance of the predictor variables\n    * For categorical features, a positive sign on a feature's coefficient means this feature increases the probability of a positive outcome versus the baseline. \n    * For continuous features, a positive sign means  that an increase in the value of a feature corresponds to an increase in the probability of a positive outcome. \n    * The size of the coefficient tells us the magnitude of the increase in probability. ","2d1039ae":"### Understand the relationship between `'1st Day Open to Close % Chg'` group by `'Mgr Count'`\n* Plot the mean of `'1st Day Open to Close % Chg'` group by `'Mgr Count'`\n* `DataFrame.style` method: for formatting and displaying DataFrames.","92397e10":"###  Read Excel Data \n* Pandas function `read_csv()` cannot be used to read Excel data.\n* Use   `xlrd`  library  to read Excel files into Python lists ","5cf368ca":"### Encoding\n* OneHot Encoder for All Categorical Data","518ccfcc":"### Features: Predictors\n* We take variables `Opening Gap \\% Chg, Month, Day of Week, Mgr Count, Lead Mgr, Offer Price, Star Rating` as predictors","23d3583a":"### Discover relationship between `Lead Mrg` and `'1st Day Open to Close % Chg'`","e66a0bad":"### Adding new feature: `'Lead Mgr'`\n* Perhaps the first underwriter (the lead) and the prestige of this bank is important to the first-day gains\n* Extract the lead from `Managers`\n    * [0] for the first, \"\/\" splits names in the spreadsheet \n    * lambda function: (lambda arguments : expression) the expression is executed and the result is returned","2dd8f5a7":"### Working on the DataFrame\n* We use dataframes in data analysis\n* Generate a DataFrame from the list\n* Add column names. Column names come from orinignal data.","fce5116f":"### Expectancy on buying all 200 test IPOs\n* If we buy all IPO on the test data, what is the expectancy?\n* Calculate the mean of  `1st Day Open to Close $ Chg` of the 200 IPOs in the test data  ","762fbfb7":"* In this project, we only need the spreadsheet by the first index\n* Function `sheet_by_index` return a Sheet by the assigned index.\n* Dsiplay first 40 rows","e0af05fa":"### Understand the change of the IPO on the first day\n* Plot the mean  change of the IPO on the first day\n","f42c6114":"### Training and test datasets\n* Use a basic train\/test split and simply train our model on all but thelast 200 IPOs and test on the last IPOs","6f63d4eb":"### Expectancy on buying IPOs recommended by ML\n* Only buy IPOs recommended by ML among 200 IPOs \n* Examine the mean gian on buying IPOs recommended by ML\n* The average gain is improved","3184c8cd":"### Adding new features:  `'Opening Gap % Chg' and 'Opening Gap $ Chg'` \n* One  informative measure is the opening gap, which is the difference between the offer price and the opening price of the issue\n* Add   columns called  `'Opening Gap % Chg'` and `'Opening Gap $ Chg'`"}}