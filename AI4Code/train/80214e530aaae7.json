{"cell_type":{"488687f2":"code","9860953c":"code","678adf9a":"code","71ebcabb":"code","cd15b1f2":"code","1a3c5072":"code","36627bcb":"code","e7f946b9":"code","92148a8c":"code","646a1546":"code","a35927ea":"code","a6013c49":"code","1367a204":"code","d33452f4":"code","a21aaa56":"markdown","97b5d8bb":"markdown","2f14e6de":"markdown","12755a36":"markdown","c0ab9365":"markdown","676c2c12":"markdown","c0915098":"markdown","f68080a7":"markdown","578a8f62":"markdown","6a2ca9a8":"markdown","d95cd491":"markdown","168904b6":"markdown","43067e73":"markdown","cace12b1":"markdown","8c6450ee":"markdown","af7370b4":"markdown","8de3aed9":"markdown","7a5d7106":"markdown","a774ba3a":"markdown","4484fcec":"markdown","c269d296":"markdown","13e56d90":"markdown","ef623e1e":"markdown","71de1c2c":"markdown"},"source":{"488687f2":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import OrdinalEncoder, MinMaxScaler, FunctionTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.compose import ColumnTransformer","9860953c":"df = pd.read_csv('..\/input\/ibm-hr-analytics-attrition-dataset\/WA_Fn-UseC_-HR-Employee-Attrition.csv')\ndf.head()","678adf9a":"df_copy = df.copy()\ntarget_map = {'Yes':1, 'No':0}\ny = df_copy['Attrition'].apply(lambda value: target_map[value]) # Encode target column\nX = df_copy.drop(['Attrition'], axis = 1) # Separate predictor variables from predicted value\n\n# Devide our dataframe into numerical dataframe and categorical dataframe\nnum_df = X.select_dtypes(exclude=object)  \ncat_df = X.select_dtypes(include=object)  ","71ebcabb":"df.isnull().values.any()","cd15b1f2":"df.dtypes","1a3c5072":"plt.figure(figsize=(20,20))\nfor i, col in enumerate(num_df.columns, 1):\n    plt.subplot(5, 6, i)\n    sns.violinplot(x = df[col])","36627bcb":"plt.figure(figsize=(20,20))\nfor i, col in enumerate(cat_df.columns, 1):\n    plt.subplot(3, 3, i)\n    sns.countplot(x = df[col])","e7f946b9":"plt.figure(figsize=(30,30))\nfor i, col in enumerate(num_df.columns, 1):\n    plt.subplot(5, 6, i)\n    sns.violinplot(x = df['Attrition'], y= df[col])\n","92148a8c":"plt.figure(figsize=(30,30))\nfor i, col in enumerate(cat_df.columns, 1):\n    plt.subplot(3, 3, i)\n    sns.barplot(x = df[col], y= y)","646a1546":"encoder = Pipeline(steps=[\n    ('encoder', OrdinalEncoder())])","a35927ea":"scaler_transformer = Pipeline(\n    steps=[\n        ('scaler', MinMaxScaler()),\n        ('transfomer', FunctionTransformer(np.log1p, validate=True))\n    ]\n)","a6013c49":"preprocessor = ColumnTransformer(\n    transformers=[\n        ('num', encoder, cat_df),\n        ('cat', scaler_transformer, num_df)\n    ]\n)","1367a204":"# drop unused columns\nX.drop(['EmployeeCount','Over18','StandardHours','EmployeeNumber'], axis = 1, inplace = True) \nnum_df = X.select_dtypes(exclude = object)\ncat_df = X.select_dtypes(include = object)","d33452f4":"sns.set(style=\"white\")\nmask = np.zeros_like(num_df.join(y).corr(), dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\nfig, ax = plt.subplots(figsize=(15,10))\ncmap = sns.diverging_palette(255, 10, as_cmap=True)\nsns.heatmap(num_df.join(y).corr().round(2), mask=mask, annot=True,\n            cmap=cmap , vmin=-1, vmax=1, ax=ax)","a21aaa56":"To join `encoder` and `scaler_transfomer` piplines `ColumnTransformer` object used","97b5d8bb":"### Statistical-based method","2f14e6de":"According to:\n* **Bureau of Labour Statistics** 4.9 million monthly separations (employee turnover) occurred between August and December in 2016.\n* **a research conducted by The Center for American Progress**, the median cost of turnover was 21% of an employee\u2019s annual salary.\n* **Society for Human Resource Management studies**, every time a business replaces a salaried\nemployee, it costs 6 to 9 months\u2019 salary on average. For a manager making \\$40,000 a year, that's\n\\$20,000 to \\$30,000 in recruiting and training\n\nThis notebook is structured as follows:\n   1. **Exploratory Data Analysis (EDA)**: It is an approach to analyze data sets and summarize their characteristics. This section outlines the differents statistical analyses performed.\n   2. **Data balacing**: In this section seviral tachniques performed to balance data. \n   3. **Data pre-processing**: is a common process in machine learning projects, it had used to handle datasets that contain missing entries, varying degrees of noise and substantial differences in scale per feature\n   4. **Feature selection**\n   4. **Applay suprvised ML algorithims**: differents classification algorithms applayed and compared.\n   5. **Models interpretability**: the permutation feature importance technique was used to measure how much a feature is important to predict employee attrition.","12755a36":"Fortunally, the are no missing values for this dataset !","c0ab9365":"## 1. Exploratory Data Analysis (EDA) \nFirstly, lets take a quik look into dataset.","676c2c12":"I'm still updating this notebook ...","c0915098":"![](http:\/\/)","f68080a7":"## Employee Attrition Prediction || Comparing different classification algorithms","578a8f62":"For correlation between categorical attributes and target attribute, the figure in the following can be generated. We can observe that all categorical attributes have values with different attrition rate, except gender columns, it seems less correlated to attrition. In addition, we can observe that employees who work overtime are more likely to exit.","6a2ca9a8":"We can clearly see that 'EmployeeCount' and 'StandardHours' have the same value within all dataset, so they should be taken into consideration when performing feature selection.\n\nFurthemore, We can observe that there is continue variables (like Age, HourlyRate and monthlyRate) and discreet variables(like Education and JobSatisfaction). Also, all variables have different data distributions, which the majors are Skewed Right Distributions with long-tail shape (like Years at Company and Years since last promotion) . This is a problem because statistical models like SVM, KNN and LR will considered the tail region as outliers. and we know that outliers adversely affect the model\u2019s performance. Actually, There are statistical models that are robust to outlier like a Tree-based models but it will limit the possibility to try other models. Therefore, a transformation to normal distribution should be performed when preprocessing data.","d95cd491":"We can see that we have 34 features(categorical and numerical) and a categorical target column 'Attrition' with tow value; 'Yes' if employyee exit or 'No' if stayed.\n\nHowever that was just an overview of dataset. Now, lets deeve more into EDA to determine the quality of features and their predictive power in contrast with target value or label. The exploration of the data is conducted from two different angles: descriptive and correlative. ","168904b6":"The code bellow cheecks data type for each columns.","43067e73":"The code bellow generate show underlying frequency distribution of each numerical variable.","cace12b1":"We can observe that 'Over18' columns have one unique value and should be excluded too from dataset.","8c6450ee":"## 2. Data pre-processing\nData preprocessing techniques performed within this project described as follow:\n1. Data Type Conversion\n2. Feature Scaling and Log transformation\n\nIn order to simplify those pre-processing tasks, piplines used according to its sevreral benifits:\n\n* **Convenience and encapsulation**: You only have to call fit and predict once on your data to fit a whole sequence of estimators.\n* **Joint parameter selection**: You can grid search over parameters of all estimators in the pipeline at once.\n* **Safety**: Pipelines help avoid leaking statistics from your test data into the trained model in cross-validation, by ensuring that the same samples are used to train the transformers and predictors.\n","af7370b4":"### Descriptive Analysis\nDescriptive analysis (or univariate analysis) provides an understanding of the characteristics of each attribute of the dataset. It also offers important evidence for feature selection in a later state. in this section we will cheeck:\n* If there are any missing values\n* Data type of each attribute\n* Data distribution for each attribute","8de3aed9":"### Feature Scaling and Log transformation\nFeature scaling is essential prepressing step when features has disparate scales. It may help some machine learning classifiers perform better, because significant scale gaps among features are generally not favored within the optimization stage of these algorithms. Standardization and normalization are two techniques to handle such a problem. Dataset's features has a disparate scale. For example, daily rate range between 100 to 1500, whereas job level range between 1 to 5. normalization performed to adjust range of features and reduce disparate feature scales in IBM HR dataset.\n\nThe log transformation can be used to make highly skewed distributions less skewed like in our case, in which most numerical features are right skewed. This can be valuable both for making patterns in the data more interpretable and for helping to meet the assumptions of inferential statistics.\n\nThe code bellow declare a pipline to apply normalization and log transformation.","7a5d7106":"So, there are two data types: object and int64. object columns contains non numerical data and should be encoded into numric format, we will talk about this later.","a774ba3a":"Now, lets see how distributions of categorical varibles looks like. ","4484fcec":"## 3. Feature selection\nThe feature selection techniques are often used to further improve the classifier\u2019s predictive capability by selecting the relevant features. Feature selection is primarily focused on removing non-informative or redundant predictors from the model. We will use the following techniques to perform feature selection:\n* Statistical-based method\n* Feature importance based method\n","c269d296":"### Data Type Conversion\nOne of the most important preprocessing procedures is convert categorical features to numerical format. Some algorithms such as logistic regression, K-nearest neighbor, SVM and neural networks are not able to work with non-numeric data.\n\nThe code bellow declare a pipline to apply ordinal encoder.","13e56d90":"The code below generate distribution of numerical variables in terms of attrition. Rapprochement observed between negative and positive classes with all variables, especially with 'PercentSalaryHike' and 'NumCompaniesWorked' variables.","ef623e1e":"The code bellow cheecks if there is any NaN value in dataset","71de1c2c":"### Correlation analysis\nCorrelation analysis (or bivariate analysis) examines the relationship between two attributes, and determines whether the two are correlated. it devided into tow sections:\n* Numerical columns versus target\n* Categorical verus target\n"}}