{"cell_type":{"601a862a":"code","db52f48c":"code","e1579efe":"code","938bdd4a":"code","a8287033":"code","8b569a39":"markdown","3316f042":"markdown","5104f7d5":"markdown"},"source":{"601a862a":"import numpy as np\nimport pandas as pd\nfrom scipy.io import loadmat\nimport matplotlib.pyplot as plt\nfrom sklearn.svm import LinearSVC\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom seaborn import heatmap\nfrom sklearn.decomposition import PCA","db52f48c":"data = pd.read_csv(\"..\/input\/raman-spectroscopy-for-detecting-covid19\/covid_and_healthy_spectra.csv\")\ndata.head()","e1579efe":"X, X_test, y, y_test = train_test_split(data.loc[:, \"400\":\"2112\"], data.loc[:, \"diagnostic\"], shuffle=True, random_state=7, test_size=0.2)\nsvc = LinearSVC(penalty=\"l2\", loss=\"squared_hinge\")\nsvc.fit(X, y)\nheatmap(confusion_matrix(svc.predict(X_test), y_test), annot=True, fmt=\"g\", yticklabels=[\"Healthy\", \"SARS-CoV-19\"] ,xticklabels=[\"Healthy\", \"SARS-CoV-19\"])\nplt.title(\"Confusion matrix for test-dataset\")\nplt.xlabel(\"Predicted\")\nplt.ylabel(\"Expected\")\nplt.figure()\nheatmap(confusion_matrix(svc.predict(X), y), annot=True, fmt=\"g\", yticklabels=[\"Healthy\", \"SARS-CoV-19\"] ,xticklabels=[\"Healthy\", \"SARS-CoV-19\"])\nplt.title(\"Confusion matrix for train-dataset\")\nplt.xlabel(\"Predicted\")\nplt.ylabel(\"Expected\")\nprint(f\"Classification report for test-dataset:\\n{classification_report(svc.predict(X_test), y_test)}\")\nprint(f\"Classification report for train-dataset:\\n{classification_report(svc.predict(X), y)}\")","938bdd4a":"pca = PCA()\npca.fit(X)\nprint(\"Explained variance > 0.95:\", (pca.explained_variance_ratio_.cumsum() > 0.95)[0:5], \"...\")\nplt.figure(figsize=(14,8))\nplt.plot(data.columns[:-1].astype(int), np.abs(pca.components_[0:5]).sum(axis=0))\nplt.show()","a8287033":"plt.figure(figsize=(16,8))\nplt.plot(data.columns[:-1].astype(int), data.iloc[:, :-1].std())\nplt.title(\"Weights of the first five components for PCA on the std. dev. of the whole dataset\")\nplt.xlabel(\"Raman shift ($cm^{-1}$)\")\nplt.ylabel(\"Intensity (Arbitrary units)\")\nweights = np.abs(pca.components_[0:5]).sum(axis=0) \/ np.abs(pca.components_[0:5]).sum(axis=0).max()\nax = plt.gca()\ncb = ax.pcolorfast((data.columns[:-1].astype(int).min(), data.columns[:-1].astype(int).max()), (data.iloc[0, :-1].min(),data.iloc[0, :-1].max()), (weights, weights), alpha=0.5, cmap=\"binary\")\nplt.colorbar(cb)\nplt.show()","8b569a39":"## PCA's explained variance to plot frequencies weights importance","3316f042":"# Read data","5104f7d5":"# Simple linear classifier (SVM)"}}