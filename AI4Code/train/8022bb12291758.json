{"cell_type":{"2c9c8313":"code","396afaa8":"code","48f31c35":"code","a7ca48d3":"code","362bc87b":"code","7189b5e6":"code","0bc7b7b0":"code","949adf55":"code","149ec3e3":"code","085850ae":"code","9b9bb1bb":"code","e5017628":"code","fe1b0ba5":"code","34910ecf":"code","dc2123cc":"code","83b5cf8b":"code","c0bb26b0":"code","5612167d":"code","d710f03b":"code","bfd9ecfa":"code","795de20b":"code","f1a7889d":"code","5e497f79":"code","283d61c7":"code","d7c5e617":"code","3308f2a1":"code","d69c1740":"code","fa6f1b88":"code","fe56a4fe":"code","921a228f":"code","3357438c":"code","a0602ddb":"code","1aa30de1":"code","95c8dc3c":"code","8fb36f98":"code","fb97121c":"code","f8aa04fe":"code","1e2e1f41":"code","a083006c":"code","15dec0b8":"code","a0e7d669":"code","318e90f3":"code","45e5fffe":"code","1bc3b230":"code","2d5c1f82":"code","2f9c2cbf":"code","b3cc0305":"code","46ccc840":"code","4e62206b":"code","a9901055":"code","333bf3bb":"code","488d0ad2":"code","c88829b5":"code","d23c1574":"code","a20fcec4":"code","c2fc7b50":"code","1ba139df":"code","d4dd8fce":"code","5a15b7ef":"code","32f6a673":"code","34372867":"code","d41e2fad":"code","5dc1c58d":"code","e5710fbc":"code","34c37ccc":"code","47a25b23":"code","03f3e798":"code","54222d6c":"code","790744f4":"markdown","89ce9cfd":"markdown","2bb89cb2":"markdown","a951cb84":"markdown","81341cde":"markdown"},"source":{"2c9c8313":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","396afaa8":"import seaborn as sns\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n%matplotlib inline","48f31c35":"!pip install xlrd","a7ca48d3":"!pip install openpyxl","362bc87b":"df_in_time = pd.read_csv('..\/input\/hr-analytics-case-study\/in_time.csv')\ndf_general_data = pd.read_csv('..\/input\/hr-analytics-case-study\/general_data.csv')\ndf_out_time = pd.read_csv('..\/input\/hr-analytics-case-study\/out_time.csv')\ndf_manager_survey_data = pd.read_csv('..\/input\/hr-analytics-case-study\/manager_survey_data.csv')\ndf_employee_survey_data = pd.read_csv('..\/input\/hr-analytics-case-study\/employee_survey_data.csv')\ndf_data_dictionary = pd.read_excel('..\/input\/data-dictionary\/data_dictionary2.xlsx')","7189b5e6":"df_out_time.rename(columns = {'Unnamed: 0':'EmployeeID'}, inplace = True)\ndf_in_time.rename(columns = {'Unnamed: 0':'EmployeeID'}, inplace = True)","0bc7b7b0":"df_out_time.columns","949adf55":"df_manager_survey_data.columns","149ec3e3":"df_employee_survey_data.columns","085850ae":"df_in_time.columns","9b9bb1bb":"df_general_data.columns","e5017628":"df_data_dictionary.columns","fe1b0ba5":"!pip install openpyxl","34910ecf":"df_general_data.head()","dc2123cc":"df_out_time.head()","83b5cf8b":"df_employee_survey_data.head()","c0bb26b0":"df_manager_survey_data.head()","5612167d":"df_data_dictionary.head()","d710f03b":"df_in_time.head()","bfd9ecfa":"df_data_dictionary.head()","795de20b":"df_in_time[df_in_time.columns[1:262]] = df_out_time[df_out_time.columns[1:262]].astype('datetime64[ns]').sub(df_in_time[df_in_time.columns[1:262]].astype('datetime64[ns]'))","f1a7889d":"df_in_time.head()","5e497f79":"df_in_time[df_in_time.columns[1:262]] = (df_in_time[df_in_time.columns[1:262]]\/np.timedelta64(1, 'h'))","283d61c7":"df_in_time = df_in_time.fillna(0.0)","d7c5e617":"df_in_time.head()","3308f2a1":"df_in_time['Average'] = df_in_time[df_in_time.columns[1:262]].sum(axis=1)\/263","d69c1740":"df_wrk_hrs = df_in_time[['EmployeeID','Average']]","fa6f1b88":"df_wrk_hrs.head()","fe56a4fe":"del df_in_time","921a228f":"employee_data = pd.merge(df_wrk_hrs,df_employee_survey_data,left_on='EmployeeID', right_on='EmployeeID')","3357438c":"employee_data.rename(columns = {'Average':'Emp_avg_wrkhrs'}, inplace = True)","a0602ddb":"employee_data = pd.merge(df_manager_survey_data,employee_data,left_on='EmployeeID', right_on='EmployeeID')\nemployee_data = pd.merge(df_general_data,employee_data,left_on='EmployeeID', right_on='EmployeeID')","1aa30de1":"employee_data.info()","95c8dc3c":"employee_data = employee_data.dropna()","8fb36f98":"employee_data.head()","fb97121c":"employee_data.Attrition.unique()","f8aa04fe":"employee_data.BusinessTravel.unique()","1e2e1f41":"employee_data.Department.unique()","a083006c":"employee_data.EducationField.unique()","15dec0b8":"employee_data.Gender.unique()","a0e7d669":"employee_data.MaritalStatus.unique()","318e90f3":"employee_data.Over18.unique()","45e5fffe":"employee_data.StandardHours.unique()","1bc3b230":"employee_data.EmployeeCount.unique()","2d5c1f82":"employee_data.JobSatisfaction.unique()","2f9c2cbf":"#we need to drop attribute (EmployeeCount,Over18,StandardHours) it's not useful\n\nemployee_data = employee_data.drop(['EmployeeCount'],axis=1)\nemployee_data = employee_data.drop(['Over18'],axis=1)\nemployee_data = employee_data.drop(['StandardHours'],axis=1)","b3cc0305":"employee_data.Attrition = employee_data.Attrition.map({'No': 1 , 'Yes' : 2})\nemployee_data.BusinessTravel = employee_data.BusinessTravel.map({'Travel_Rarely' : 1 , 'Travel_Frequently' : 2, 'Non-Travel' : 0})\nemployee_data.Department = employee_data.Department.map({'Sales' : 1 , 'Research & Development' : 2 ,'Human Resources': 3})\nemployee_data.EducationField = employee_data.EducationField.map({'Life Sciences': 1, 'Other': 2, 'Medical' : 3, 'Marketing' : 4 ,'Technical Degree': 5 , 'Human Resources' : 6 })\nemployee_data.Gender = employee_data.Gender.map({'Female' : 1 , 'Male' : 0})\nemployee_data.MaritalStatus = employee_data.MaritalStatus.map({'Married' : 2, 'Single': 1, 'Divorced':0})\nemployee_data.JobRole = employee_data.JobRole.map({'Healthcare Representative': 1, 'Research Scientist' : 1,\n       'Sales Executive' : 2, 'Human Resources': 3, 'Research Director': 4,\n       'Laboratory Technician': 4, 'Manufacturing Director': 4,\n       'Sales Representative': 5, 'Manager': 5})","46ccc840":"sns.violinplot(x='JobSatisfaction',y='Attrition', orient='h',data=employee_data)","4e62206b":"sns.violinplot(x='JobSatisfaction',y='JobInvolvement', orient='h',data=employee_data)","a9901055":"sns.violinplot(x='JobSatisfaction',y='PerformanceRating', orient='h',data=employee_data)","333bf3bb":"sns.displot(employee_data.Emp_avg_wrkhrs)\nfig = plt.figure()\nres = stats.probplot(employee_data.Emp_avg_wrkhrs , plot=plt)","488d0ad2":"sns.displot(employee_data.JobSatisfaction)","c88829b5":"employee_data.columns","d23c1574":"sns.displot(employee_data.JobInvolvement)","a20fcec4":"sns.displot(employee_data.EnvironmentSatisfaction)","c2fc7b50":"sns.displot(employee_data.JobSatisfaction)","1ba139df":"sns.displot(employee_data.WorkLifeBalance)","d4dd8fce":"employee_data.head()","5a15b7ef":"sns.displot(employee_data.BusinessTravel)","32f6a673":"sns.violinplot(y='BusinessTravel',x='JobSatisfaction', orient='h',data=employee_data)","34372867":"#correlation matrix\ncorrmat = employee_data.corr()\nf, ax = plt.subplots(figsize=(24, 18))\nsns.heatmap(corrmat, vmax=.8,cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10});","d41e2fad":"employee_data.shape","5dc1c58d":"#JobSatisfaction correlation matrix\n\n\nk = 7 #number of variables for heatmap\ncorrmat = employee_data.corr()\ncols = corrmat.nlargest(k, 'JobSatisfaction')['JobSatisfaction'].index\ncm = np.corrcoef(employee_data[cols].values.T)\ncm = np.nan_to_num(cm)\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=False, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","e5710fbc":"#PerformanceRating correlation matrix\nk = 7 #number of variables for heatmap\ncorrmat = employee_data.corr()\ncols = corrmat.nlargest(k, 'PerformanceRating')['PerformanceRating'].index\ncm = np.corrcoef(employee_data[cols].values.T)\ncm = np.nan_to_num(cm)\nsns.set(font_scale=1.25)\n#f, ax = plt.subplots(figsize=(12,9))\nhm = sns.heatmap(cm, cbar=False, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","34c37ccc":"#JobInvolvement correlation matrix\nk = 7 #number of variables for heatmap\ncorrmat = employee_data.corr()\ncols = corrmat.nlargest(k, 'JobInvolvement')['JobInvolvement'].index\ncm = np.corrcoef(employee_data[cols].values.T)\ncm = np.nan_to_num(cm)\nsns.set(font_scale=1.25)\n#f, ax = plt.subplots(figsize=(12,9))\nhm = sns.heatmap(cm, cbar=False, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","47a25b23":"\n#TrainingTimesLastYear correlation matrix\nk = 7 #number of variables for heatmap\ncorrmat = employee_data.corr()\ncols = corrmat.nlargest(k, 'TrainingTimesLastYear')['TrainingTimesLastYear'].index\ncm = np.corrcoef(employee_data[cols].values.T)\ncm = np.nan_to_num(cm)\nsns.set(font_scale=1.25)\n#f, ax = plt.subplots(figsize=(12,9))\nhm = sns.heatmap(cm, cbar=False, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","03f3e798":"\n#JobRole correlation matrix\nk = 7 #number of variables for heatmap\ncorrmat = employee_data.corr()\ncols = corrmat.nlargest(k, 'JobRole')['JobRole'].index\ncm = np.corrcoef(employee_data[cols].values.T)\ncm = np.nan_to_num(cm)\nsns.set(font_scale=1.25)\n#f, ax = plt.subplots(figsize=(12,9))\nhm = sns.heatmap(cm, cbar=False, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","54222d6c":"#employee_data.info()","790744f4":"# Can we use this data for other attributes ?\n* JobSatisfaction,PerformanceRating,TrainingTimesLastYear,JobRole show really low correlation with the other attributes .\n* Hence the these attributes cannot be determined using these data","89ce9cfd":"Job Satisfaction is not correlated to the following :\n\n'Age', 'Attrition', 'BusinessTravel', 'Department', 'DistanceFromHome',\n'Education', 'EducationField', 'EmployeeID', 'Gender', 'JobLevel',\n'JobRole', 'MaritalStatus', 'MonthlyIncome', 'NumCompaniesWorked',\n'PercentSalaryHike', 'StockOptionLevel', 'TotalWorkingYears',\n'TrainingTimesLastYear', 'YearsAtCompany', 'YearsSinceLastPromotion',\n'YearsWithCurrManager', 'JobInvolvement', 'PerformanceRating',\n'Emp_avg_wrkhrs', 'EnvironmentSatisfaction', 'JobSatisfaction',\n'WorkLifeBalance'","2bb89cb2":"# Conclusion drawn from Correlation Matrix :\n\n* **Age is proportional to the number of year worked in** : \n The older you are the the more you have been working.\n \n* **Percentage Salary hike is proportinal to performance rating** :\nThe people who have good rating get paid better.\n\n* **TotalNumberWorkingYears of is directly proportional to YearsAtCompany** :\n The older you are the the more you have been working.\n \n* **YearsAtCompany is directly proportional to YearsWithCurrManager** :\nThis means the employees never get reassigned \n\n* **YearsSinceLastPromotion is directly proportional to YearsWithCurrManager** :\nThis means the employees never get promoted maybe the manager is the reason and they don't let people get promoted.\n\n* **YearsAtCompany is directly proportional to YearsSinceLastPromotion** :\n The employee are not promoted based on experience and the number of years they have contributed .\n \n\n","a951cb84":"Both the In_time and out_timr dataframes will help in unravelling the most important factors , the number of work hours .","81341cde":"# Assumption applied  \n\n<h4> We will consider two attributes to be proportinal only when the correlation matrix values is >= 50."}}