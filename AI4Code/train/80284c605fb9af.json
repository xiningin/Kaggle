{"cell_type":{"7468d42b":"code","5112d355":"code","75cd0c01":"code","b9a49d62":"code","3de0bd7c":"code","84bdb0ab":"code","5bd4ce72":"code","6c4c3688":"code","38d95106":"code","7ae18d28":"code","3b1dd6af":"code","bb96cdfc":"markdown","e54a0697":"markdown","ccd763ed":"markdown","a43e5aad":"markdown","c117d9c1":"markdown","74d8f794":"markdown","5cd4167c":"markdown","e1506976":"markdown","2b65bb12":"markdown","608ece54":"markdown","fe30ce1a":"markdown","7a46db94":"markdown","4fb394a3":"markdown"},"source":{"7468d42b":"import pandas as pd\nfrom pandas.io.formats.style import Styler\nfrom IPython.display import HTML\nimport numpy as np\nimport seaborn as sns\nfrom datetime import datetime, date\nimport matplotlib.pyplot as plt\n%matplotlib inline \nsns.set(color_codes=True)\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\n\naq_auser = pd.read_csv(\"..\/input\/acea-water-prediction\/Aquifer_Auser.csv\")\naq_doganella = pd.read_csv(\"..\/input\/acea-water-prediction\/Aquifer_Doganella.csv\")\naq_luco = pd.read_csv(\"..\/input\/acea-water-prediction\/Aquifer_Luco.csv\")\naq_petrignano = pd.read_csv(\"..\/input\/acea-water-prediction\/Aquifer_Petrignano.csv\")\nlk_bilancino = pd.read_csv(\"..\/input\/acea-water-prediction\/Lake_Bilancino.csv\")\nrv_arno = pd.read_csv(\"..\/input\/acea-water-prediction\/River_Arno.csv\")\nws_amiata = pd.read_csv(\"..\/input\/acea-water-prediction\/Water_Spring_Amiata.csv\")\nws_lupa = pd.read_csv(\"..\/input\/acea-water-prediction\/Water_Spring_Lupa.csv\")\nws_madonna = pd.read_csv(\"..\/input\/acea-water-prediction\/Water_Spring_Madonna_di_Canneto.csv\")\n\nfiles = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        if '.csv' in filename:\n            files += list([filename])\n\ndatasets_df = pd.DataFrame(columns=['File_Name'], data=files)\ndatasets_df['Waterbody_type'] = datasets_df.File_Name.apply(lambda x: x.split('_')[0])\ndatasets_df['Rows'] = datasets_df.File_Name.apply(lambda x: pd.read_csv(f\"..\/input\/acea-water-prediction\/{x}\").shape[0])\ndatasets_df['Cols'] = datasets_df.File_Name.apply(lambda x: pd.read_csv(f\"..\/input\/acea-water-prediction\/{x}\").shape[1])\ndatasets_df = datasets_df.replace('Water', 'Water_Spring')\ndatasets_df = datasets_df.sort_values( by = ['Waterbody_type','Rows'],ascending = [True ,False]).reset_index(drop = True)\ndatasets_df.style.bar(subset=['Rows', 'Cols'], color='#118DFF')","5112d355":"def df_relinfo(df, target_var = []):\n    x = pd.DataFrame(df.isna().sum().apply(lambda x: x\/df.shape[0])).\\\n            reset_index().rename(columns={\"index\": \"Feature\", 0: \"%Na\"})\n    x['Na_qnt'] = df.isna().sum().tolist()\n    x['dType'] = df.dtypes.tolist()\n    x['Variable'] =  x.Feature.apply(lambda x: 'Target' if x in target_var else 'Predictor')\n    return x.sort_values(by = '%Na',ascending = False).\\\n            reset_index(drop = True).style.bar(subset = ['%Na'], color='#118DFF')#.\\\n#            style.applymap('font-weight: bold', subset=x.['Variable'])# if 'Target' == x['Variable'] else '') subset=pd.","75cd0c01":"auser_targets = ['Depth_to_Groundwater_LT2', 'Depth_to_Groundwater_SAL', 'Depth_to_Groundwater_CoS']\n    \ndf_relinfo(aq_auser,auser_targets)","b9a49d62":"doganella_targets = ['Depth_to_Groundwater_Pozzo_1',\n                     'Depth_to_Groundwater_Pozzo_2',\n                     'Depth_to_Groundwater_Pozzo_3',\n                     'Depth_to_Groundwater_Pozzo_4',\n                     'Depth_to_Groundwater_Pozzo_5',\n                     'Depth_to_Groundwater_Pozzo_6',\n                     'Depth_to_Groundwater_Pozzo_7',\n                     'Depth_to_Groundwater_Pozzo_8',\n                     'Depth_to_Groundwater_Pozzo_9']\n    \ndf_relinfo(aq_doganella,doganella_targets)","3de0bd7c":"luco_targets = ['Depth_to_Groundwater_Podere_Casetta']\n    \ndf_relinfo(aq_luco,luco_targets)","84bdb0ab":"petrignano_targets = ['Depth_to_Groundwater_P24', 'Depth_to_Groundwater_P25']\n    \ndf_relinfo(aq_petrignano,petrignano_targets)","5bd4ce72":"bilancino_targets = ['Lake_Level', 'Flow_Rate']\n\ndf_relinfo(lk_bilancino, bilancino_targets)","6c4c3688":"arno_targets = ['Hydrometry_Nave_di_Rosano']\ndf_relinfo(rv_arno, arno_targets)","38d95106":"amiata_targets = ['Flow_Rate_Bugnano', \n                  'Flow_Rate_Arbure', \n                  'Flow_Rate_Ermicciolo', \n                  'Flow_Rate_Galleria_Alta']\ndf_relinfo(ws_amiata, amiata_targets)","7ae18d28":"lupa_targets = ['Flow_Rate_Lupa']\ndf_relinfo(ws_lupa, lupa_targets)","3b1dd6af":"madonna_targets = ['Flow_Rate_Madonna_di_Canneto']\ndf_relinfo(ws_madonna, madonna_targets)","bb96cdfc":"### Water Spring Lupa","e54a0697":"## Relevant Variables info","ccd763ed":"### Aquifer Luco features","a43e5aad":"### Aquifer Petrignano features","c117d9c1":"### River Arno features","74d8f794":"### Water Spring Amiata features","5cd4167c":"# Introduction\n\nAs it is easy to imagine, a water supply company struggles with the need to forecast the water level in a waterbody (water spring, lake, river, or aquifer) to handle daily consumption. During fall and winter waterbodies are refilled, but during spring and summer they start to drain. To help preserve the health of these waterbodies it is important to predict the most efficient water availability, in terms of level and water flow for each day of the year.\n## Data\nThe reality is that each waterbody has such unique characteristics that their attributes are not linked to each other. This analytics competition uses datasets that are completely independent from each other. However, it is critical to understand total availability in order to preserve water across the country.\nEach dataset represents a different kind of waterbody. As each waterbody is different from the other, the related features are also different. So, if for instance we consider a water spring we notice that its features are different from those of a lake. These variances are expected based upon the unique behavior and characteristics of each waterbody. The Acea Group deals with four different type of waterbodies: water springs, lakes, rivers and aquifers.\n## Challenge\nCan you build a story to predict the amount of water in each unique waterbody? The challenge is to determine how features influence the water availability of each presented waterbody. To be more straightforward, gaining a better understanding of volumes, they will be able to ensure water availability for each time interval of the year.\nThe time interval is defined as day\/month depending on the available measures for each waterbody. Models should capture volumes for each waterbody(for instance, for a model working on a monthly interval a forecast over the month is expected).\nThe desired outcome is a notebook that can generate four mathematical models, one for each category of waterbody (acquifers, water springs, river, lake) that might be applicable to each single waterbody.\n\n![](https:\/\/www.googleapis.com\/download\/storage\/v1\/b\/kaggle-user-content\/o\/inbox%2F6195295%2Fcca952eecc1e49c54317daf97ca2cca7%2FAcea-Input.png?generation=1606932492951317&alt=media)\n\n\n","e1506976":"### Lake Bilancino features ","2b65bb12":"### Aquifer Doganella features","608ece54":"### Water Spring Madonna di Caneto","fe30ce1a":"# Exploratory Data Analysis\n\nThis competition uses nine different datasets, completely independent and not linked to each other. Each dataset can represent a different kind of waterbody. As each waterbody is different from the other, the related features as well are different from each other.\n\nLet\u2019s see how these nine datasets differ from each other.","7a46db94":"# Work on progress...","4fb394a3":"### Aquifer Auser features"}}