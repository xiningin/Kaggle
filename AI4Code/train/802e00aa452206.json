{"cell_type":{"d5b25b5f":"code","8ac80afc":"code","de59b011":"code","4160720b":"code","2b6e5fd7":"code","a269f5ff":"code","6a43db06":"code","2eb61af9":"code","5785947e":"code","19e9f8a4":"code","a64d2ada":"code","e4b28049":"code","98db5ec7":"code","54d18bd6":"code","406b0bd5":"code","0e504cab":"code","ad2d04e4":"code","c8288c49":"code","da1901a0":"code","e380015e":"code","c84d782b":"code","56d8e202":"markdown","2db489c1":"markdown","c9b6e834":"markdown","dfa657e1":"markdown","fbf3dbef":"markdown","02b36bed":"markdown","4866e68c":"markdown","ec300593":"markdown","70177fb8":"markdown","6f8e9992":"markdown"},"source":{"d5b25b5f":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\n%matplotlib inline\nfrom matplotlib import pyplot as plt\nfrom matplotlib import style\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier","8ac80afc":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","de59b011":"train.isnull().sum(axis=0)","4160720b":"sns.countplot(dataset['Embarked'])","2b6e5fd7":"sns.barplot('Pclass', 'Survived', data = train)","a269f5ff":"train = train.fillna({\"Embarked\": \"S\"})","6a43db06":"train = pd.get_dummies(train, columns = ['Sex'])\ntrain = pd.get_dummies(train, columns = ['Embarked'])\ntrain.head()","2eb61af9":"data = [train, test]\nfor dataset in data:\n    mean = train[\"Age\"].mean()\n    std = test[\"Age\"].std()\n    is_null = dataset[\"Age\"].isnull().sum()\n    rand_age = np.random.randint(mean - std, mean + std, size = is_null)\n    age_slice = dataset[\"Age\"].copy()\n    age_slice[np.isnan(age_slice)] = rand_age\n    dataset[\"Age\"] = age_slice\n    dataset[\"Age\"] = train[\"Age\"].astype(int)","5785947e":"train.drop('Cabin',axis = 1,inplace = True)","19e9f8a4":"train.drop('Ticket',axis = 1,inplace = True)","a64d2ada":"train.drop('Name',axis = 1,inplace = True)","e4b28049":"train.drop('PassengerId',axis = 1,inplace = True)","98db5ec7":"train_c = train[['Survived']]\ntrain_f = train.drop(['Survived'], axis = 1)\ntrain_f.head()","54d18bd6":"from sklearn.metrics import confusion_matrix, accuracy_score\nfrom sklearn.metrics import classification_report\nimport graphviz\nfrom sklearn.tree import DecisionTreeClassifier, export_graphviz","406b0bd5":"X_train, X_test, Y_train, Y_test = train_test_split(train_f, train_c, test_size = 0.20,random_state = 42)","0e504cab":"clf = DecisionTreeClassifier(criterion = 'entropy')\nclf.fit(X_train, Y_train)\nexport_graphviz(clf, out_file = 'Tree.dot')\n\npred = clf.predict(X_test)","ad2d04e4":"hit_rate = accuracy_score(Y_test, pred)\nerror_rate = 1 - hit_rate","c8288c49":"hit_rate * 100","da1901a0":"print(classification_report(Y_test,pred))","e380015e":"print(confusion_matrix(Y_test,pred))","c84d782b":"sub = pd.DataFrame({ \"PassengerId\": test['PassengerId'], \"Survived\": pred})\n\nsub.head()\n\nsub.to_csv('MySub.csv', index = False)","56d8e202":"We will make a One Hot Encoding because is avaliable for Sex and Embarked","2db489c1":"## **Import the libraries and load the datas**","c9b6e834":"## The Decision Tree Model","dfa657e1":"How we can see, the most commun is the Embarked S, it shows frequentely so we will fill the missing feactures with the S","fbf3dbef":"Let's look all the missing data we have","02b36bed":"And for Age: ","4866e68c":"Cabin we will drop out the column","ec300593":"Let's check the Embarked","70177fb8":"Let's divide in train and test for the training of the model","6f8e9992":"# **Missing Data**"}}