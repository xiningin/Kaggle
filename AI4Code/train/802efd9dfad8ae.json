{"cell_type":{"87501a72":"code","79cdd6cd":"code","9bbcecac":"code","f46727cd":"code","d1b78048":"code","cfc72075":"code","6a5c24cf":"code","6e33b03b":"code","1038f7a8":"code","806deb6c":"code","9139e39e":"code","9df524be":"code","bcff4266":"code","da39d30c":"code","ae86707f":"code","f7c809a5":"code","3bca6fd5":"code","7e6799d4":"code","29ea957d":"code","0803bae4":"code","164ae790":"code","47c796d0":"code","b271b66a":"code","de3c294b":"code","68d87f20":"code","84b34e1e":"code","9e379cf3":"code","6593f27f":"code","a07661d2":"code","487e8d71":"markdown","60ff2bb8":"markdown","20ac7d8b":"markdown","68391bd0":"markdown","fe52890b":"markdown","13567c34":"markdown","2065c202":"markdown","e9b16b65":"markdown","49d3e9a2":"markdown","fcc9ba5c":"markdown"},"source":{"87501a72":"# importing dependencies here\nimport pandas as pd\n\n# plotly\nfrom plotly import __version__\n\nprint(__version__)\nimport plotly.graph_objects as go\nfrom plotly.offline import init_notebook_mode, iplot\n","79cdd6cd":"# reading the penguins lter dataset\npenguins_df = pd.read_csv(\"..\/input\/palmer-archipelago-antarctica-penguin-data\/penguins_size.csv\")\n\n# checking top 5 rows\npenguins_df.head()","9bbcecac":"# checking the number of rows and columns\nprint(penguins_df.shape)","f46727cd":"# checking the column names\nprint(penguins_df.columns)","d1b78048":"# checking the dataset stats\npenguins_df.describe()","cfc72075":"# checking counts and data type for each column\npenguins_df.info()","6a5c24cf":"# checking for the presence of null values\npenguins_df.isnull().sum()","6e33b03b":"# Some of the columns have null values. Subsituting the null value with the most frequently occurring value of that column.\nfrom sklearn.impute import SimpleImputer\n\nimputer = SimpleImputer(strategy=\"most_frequent\")\npenguins_df.iloc[:, :] = imputer.fit_transform(penguins_df)","1038f7a8":"# ensuring that there are no more null values left\npenguins_df.isnull().sum()","806deb6c":"# checking for correlation between features\npenguins_df.corr()","9139e39e":"# since each of the 3 penguin species present in the dataset has a particulr color associated, adding a color column to the dataset to keep track of the color associated with a specie.\ncls = {\n    \"Adelie\": \"darkorange\",\n    \"Gentoo\": \"teal\",\n    \"Chinstrap\": \"mediumorchid\",\n}\n\npenguins_df[\"color\"] = penguins_df[\"species\"].apply(lambda x: cls[x])","9df524be":"# creating a dataframe for count of each penguin species present in the dataset\nspecies_df = (\n    pd.DataFrame(penguins_df.groupby([\"species\", \"color\"])[\"island\"].count())\n    .sort_values(\"island\", ascending=False)\n    .reset_index()\n    .rename(columns={\"island\": \"count\"})\n)\nspecies_df","bcff4266":"# checking island data\nisland_df = pd.DataFrame(\n    penguins_df.groupby([\"island\", \"species\"])[\"island\"].count()\n).rename(columns={\"island\": \"count\"})\n\nisland_df","da39d30c":"adelie_df = penguins_df[\n    penguins_df[\"species\"] == \"Adelie\"\n].reset_index(drop=True)\n\nadelie_df.head(2)","ae86707f":"adelie_count_df = (\n    pd.DataFrame(adelie_df.groupby([\"species\", \"color\"])['island'].count())\n#     .sort_values(\"species\", ascending=False)\n    .reset_index()\n    .rename(columns={\"island\": \"count\"})\n)\nadelie_count_df","f7c809a5":"gentoo_df = penguins_df[\n    penguins_df[\"species\"] == \"Gentoo\"\n].reset_index(drop=True)\n\ngentoo_df.head(2)","3bca6fd5":"gentoo_count_df = (\n    pd.DataFrame(gentoo_df.groupby([\"species\", \"color\"])[\"island\"].count())\n#     .sort_values(\"studyName\", ascending=False)\n    .reset_index()\n    .rename(columns={\"island\": \"count\"})\n)\ngentoo_count_df","7e6799d4":"chinstrap_df = penguins_df[\n    penguins_df[\"species\"] == \"Chinstrap\"\n].reset_index(drop=True)\n\nchinstrap_df.head(2)","29ea957d":"chinstrap_count_df = (\n    pd.DataFrame(chinstrap_df.groupby([\"species\", \"color\"])[\"island\"].count())\n#     .sort_values(\"studyName\", ascending=False)\n    .reset_index()\n    .rename(columns={\"island\": \"count\"})\n)\nchinstrap_count_df","0803bae4":"# Penguin Species Count\n\ntrace1 = go.Bar(\n    x=adelie_count_df[\"species\"],\n    y=adelie_count_df[\"count\"],\n    marker=dict(color=adelie_count_df[\"color\"], line_color=\"rgb(0,0,0)\"),\n    name=\"Adelie Penguin\",\n)\n\ntrace2 = go.Bar(\n    x=gentoo_count_df[\"species\"],\n    y=gentoo_count_df[\"count\"],\n    marker=dict(color=gentoo_count_df[\"color\"], line_color=\"rgb(0,0,0)\"),\n    name=\"Gentoo penguin\",\n)\n\ntrace3 = go.Bar(\n    x=chinstrap_count_df[\"species\"],\n    y=chinstrap_count_df[\"count\"],\n    marker=dict(color=chinstrap_count_df[\"color\"], line_color=\"rgb(0,0,0)\"),\n    name=\"Chinstrap penguin\",\n)\n\ndata = [trace1, trace2, trace3]\n\nlayout = dict(\n    title=\"<b>Penguin Species Count<\/b>\",\n    showlegend=True,\n    width=990,\n    xaxis=dict(showgrid=False, title=\"Species\"),\n    yaxis=dict(title=\"Count\"),\n    plot_bgcolor=\"rgba(0,0,0,0)\",\n    paper_bgcolor=\"rgba(0,0,0,0)\",\n)\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)","164ae790":"female_df = (\n    pd.DataFrame(\n        penguins_df[penguins_df[\"sex\"] == \"FEMALE\"][[\"species\", \"sex\", \"color\"]]\n        .groupby(\"species\")[\"sex\"]\n        .count()\n    )\n    .sort_values(\"sex\", ascending=False)\n    .reset_index()\n    .rename(columns={\"sex\": \"female\"})\n)\nfemale_df","47c796d0":"male_df = (\n    pd.DataFrame(\n        penguins_df[penguins_df[\"sex\"] == \"MALE\"][[\"species\", \"sex\"]]\n        .groupby(\"species\")[\"sex\"]\n        .count()\n    )\n    .sort_values(\"sex\", ascending=False)\n    .reset_index()\n    .rename(columns={\"sex\": \"male\"})\n)\nmale_df","b271b66a":"# penguins gender count based on species\n\ntrace1 = go.Bar(\n    x=female_df[\"species\"],\n    y=female_df[\"female\"],\n    text=\"Female\",\n    textposition=\"outside\",\n    marker=dict(color=species_df[\"color\"], line_color=\"rgb(0,0,0)\"),\n    name=\"Female\",\n)\n\ntrace2 = go.Bar(\n    x=male_df[\"species\"],\n    y=male_df[\"male\"],\n    text=\"Male\",\n    textposition=\"outside\",\n    marker=dict(color=species_df[\"color\"], line_color=\"rgb(0,0,0)\"),\n    name=\"Male\",\n)\n\ndata = [trace1, trace2]\n\n\nlayout = dict(\n    title=\"<b>Penguin Gender-Based Species Count<\/b>\",\n    showlegend=False,\n    plot_bgcolor=\"rgba(0,0,0,0)\",\n    paper_bgcolor=\"rgba(0,0,0,0)\",\n)\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)","de3c294b":"# Culmen Length (mm) vs. Body Mass (g)\n\ntrace1 = go.Scatter(\n    x=adelie_df[\"culmen_length_mm\"],\n    y=adelie_df[\"body_mass_g\"],\n    text=adelie_df[\"species\"],\n    mode=\"markers\",\n    marker=dict(size=10, symbol=\"circle\", line=dict(color=\"rgb(0,0,0)\", width=0.5)),\n    marker_color=adelie_df[\"color\"],\n    name=\"Adelie Penguin\",\n)\n\ntrace2 = go.Scatter(\n    x=gentoo_df[\"culmen_length_mm\"],\n    y=gentoo_df[\"body_mass_g\"],\n    text=gentoo_df[\"species\"],\n    mode=\"markers\",\n    marker=dict(size=10, symbol=\"square\", line=dict(color=\"rgb(0,0,0)\", width=0.5)),\n    marker_color=gentoo_df[\"color\"],\n    name=\"Gentoo penguin\",\n)\n\ntrace3 = go.Scatter(\n    x=chinstrap_df[\"culmen_length_mm\"],\n    y=chinstrap_df[\"body_mass_g\"],\n    text=chinstrap_df[\"species\"],\n    mode=\"markers\",\n    marker=dict(\n        size=12, symbol=\"triangle-up\", line=dict(color=\"rgb(0,0,0)\", width=0.5)\n    ),\n    marker_color=chinstrap_df[\"color\"],\n    name=\"Chinstrap penguin\",\n)\n\ndata = [trace1, trace2, trace3]\n\n\nlayout = dict(\n    title=\"<b>Culmen Length (mm) vs. Body Mass (g)<\/b>\",\n    showlegend=True,\n    xaxis=dict(title=\"Culmen Length (mm)\"),\n    yaxis=dict(title=\"Body Mass (g)\"),\n    plot_bgcolor=\"rgba(0,0,0,0)\",\n    paper_bgcolor=\"rgba(0,0,0,0)\",\n)\n\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)","68d87f20":"# Flipper Length (mm) vs. Body Mass (g)\n\ntrace1 = go.Scatter(\n    x=adelie_df[\"flipper_length_mm\"],\n    y=adelie_df[\"body_mass_g\"],\n    text=adelie_df[\"species\"],\n    mode=\"markers\",\n    marker=dict(size=9, symbol=\"circle\", line=dict(color=\"rgb(0,0,0)\", width=0.5)),\n    marker_color=adelie_df[\"color\"],\n    name=\"Adelie Penguin\",\n)\n\ntrace2 = go.Scatter(\n    x=gentoo_df[\"flipper_length_mm\"],\n    y=gentoo_df[\"body_mass_g\"],\n    text=gentoo_df[\"species\"],\n    mode=\"markers\",\n    marker=dict(size=9, symbol=\"square\", line=dict(color=\"rgb(0,0,0)\", width=0.5)),\n    marker_color=gentoo_df[\"color\"],\n    name=\"Gentoo penguin\",\n)\n\ntrace3 = go.Scatter(\n    x=chinstrap_df[\"flipper_length_mm\"],\n    y=chinstrap_df[\"body_mass_g\"],\n    text=chinstrap_df[\"species\"],\n    mode=\"markers\",\n    marker=dict(\n        size=11, symbol=\"triangle-up\", line=dict(color=\"rgb(0,0,0)\", width=0.5)\n    ),\n    marker_color=chinstrap_df[\"color\"],\n    name=\"Chinstrap penguin\",\n)\n\ndata = [trace1, trace2, trace3]\n\n\nlayout = dict(\n    title=\"<b>Flipper Length (mm) vs. Body Mass (g)<\/b>\",\n    showlegend=True,\n    xaxis=dict(title=\"Flipper Length (mm)\"),\n    yaxis=dict(title=\"Body Mass (g)\"),\n    plot_bgcolor=\"rgba(0,0,0,0)\",\n    paper_bgcolor=\"rgba(0,0,0,0)\",\n)\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)","84b34e1e":"# Culmen Depth (mm) vs. Body Mass (g)\n\ntrace1 = go.Scatter(\n    x=adelie_df[\"culmen_depth_mm\"],\n    y=adelie_df[\"body_mass_g\"],\n    text=adelie_df[\"species\"],\n    mode=\"markers\",\n    marker=dict(size=9, symbol=\"circle\", line=dict(color=\"rgb(0,0,0)\", width=0.5)),\n    marker_color=adelie_df[\"color\"],\n    name=\"Adelie Penguin\",\n)\n\ntrace2 = go.Scatter(\n    x=gentoo_df[\"culmen_depth_mm\"],\n    y=gentoo_df[\"body_mass_g\"],\n    text=gentoo_df[\"species\"],\n    mode=\"markers\",\n    marker=dict(size=9, symbol=\"square\", line=dict(color=\"rgb(0,0,0)\", width=0.5)),\n    marker_color=gentoo_df[\"color\"],\n    name=\"Gentoo penguin\",\n)\n\ntrace3 = go.Scatter(\n    x=chinstrap_df[\"culmen_depth_mm\"],\n    y=chinstrap_df[\"body_mass_g\"],\n    text=chinstrap_df[\"species\"],\n    mode=\"markers\",\n    marker=dict(\n        size=11, symbol=\"triangle-up\", line=dict(color=\"rgb(0,0,0)\", width=0.5)\n    ),\n    marker_color=chinstrap_df[\"color\"],\n    name=\"Chinstrap penguin\",\n)\n\ndata = [trace1, trace2, trace3]\n\n\nlayout = dict(\n    title=\"<b>Culmen Depth (mm) vs. Body Mass (g)<\/b>\",\n    showlegend=True,\n    xaxis=dict(title=\"Culmen Depth (mm)\"),\n    yaxis=dict(title=\"Body Mass (g)\"),\n    plot_bgcolor=\"rgba(0,0,0,0)\",\n    paper_bgcolor=\"rgba(0,0,0,0)\",\n)\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)","9e379cf3":"# Flipper Length Distributions\n\ntrace1 = go.Violin(\n    x=adelie_df[\"species\"],\n    y=adelie_df[\"flipper_length_mm\"],\n    box_visible=True,\n    meanline_visible=True,\n    points=\"all\",\n    line_color=\"darkorange\",\n    name=\"Adelie Penguin\",\n)\n\ntrace2 = go.Violin(\n    x=gentoo_df[\"species\"],\n    y=gentoo_df[\"flipper_length_mm\"],\n    box_visible=True,\n    meanline_visible=True,\n    line_color=\"teal\",\n    points=\"all\",\n    name=\"Gentoo penguin\",\n)\n\ntrace3 = go.Violin(\n    x=chinstrap_df[\"species\"],\n    y=chinstrap_df[\"flipper_length_mm\"],\n    points=\"all\",\n    box_visible=True,\n    meanline_visible=True,\n    line_color=\"mediumorchid\",\n    name=\"Chinstrap penguin\",\n)\n\ndata = [trace1, trace2, trace3]\n\n\nlayout = dict(\n    title=\"<b>Flipper Length (mm) Distribution for the 3 Species<\/b>\",\n    showlegend=True,\n    width=990,\n    xaxis=dict(title=\"Penguin Species\"),\n    yaxis=dict(title=\"Flipper Length (mm)\"),\n    plot_bgcolor=\"rgba(0,0,0,0)\",\n    paper_bgcolor=\"rgba(0,0,0,0)\",\n)\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)","6593f27f":"# Culmen Length Distributions\n\ntrace1 = go.Violin(\n    x=adelie_df[\"species\"],\n    y=adelie_df[\"culmen_length_mm\"],\n    box_visible=True,\n    meanline_visible=True,\n    points=\"all\",\n    line_color=\"darkorange\",\n    name=\"Adelie Penguin\",\n)\n\ntrace2 = go.Violin(\n    x=gentoo_df[\"species\"],\n    y=gentoo_df[\"culmen_length_mm\"],\n    box_visible=True,\n    meanline_visible=True,\n    line_color=\"teal\",\n    points=\"all\",\n    name=\"Gentoo penguin\",\n)\n\ntrace3 = go.Violin(\n    x=chinstrap_df[\"species\"],\n    y=chinstrap_df[\"culmen_length_mm\"],\n    points=\"all\",\n    box_visible=True,\n    meanline_visible=True,\n    line_color=\"mediumorchid\",\n    name=\"Chinstrap penguin\",\n)\n\ndata = [trace1, trace2, trace3]\n\n\nlayout = dict(\n    title=\"<b>Culmen Length (mm) Distribution for the 3 Species<\/b>\",\n    showlegend=True,\n    width=990,\n    xaxis=dict(title=\"Penguin Species\"),\n    yaxis=dict(title=\"Culmen Length (mm)\"),\n    plot_bgcolor=\"rgba(0,0,0,0)\",\n    paper_bgcolor=\"rgba(0,0,0,0)\",\n)\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)\n","a07661d2":"# Culmen Depth Distributions\n\ntrace1 = go.Violin(\n    x=adelie_df[\"species\"],\n    y=adelie_df[\"culmen_depth_mm\"],\n    box_visible=True,\n    meanline_visible=True,\n    points=\"all\",\n    line_color=\"darkorange\",\n    name=\"Adelie Penguin\",\n)\n\ntrace2 = go.Violin(\n    x=gentoo_df[\"species\"],\n    y=gentoo_df[\"culmen_depth_mm\"],\n    box_visible=True,\n    meanline_visible=True,\n    line_color=\"teal\",\n    points=\"all\",\n    name=\"Gentoo penguin\",\n)\n\ntrace3 = go.Violin(\n    x=chinstrap_df[\"species\"],\n    y=chinstrap_df[\"culmen_depth_mm\"],\n    points=\"all\",\n    box_visible=True,\n    meanline_visible=True,\n    line_color=\"mediumorchid\",\n    name=\"Chinstrap penguin\",\n)\n\ndata = [trace1, trace2, trace3]\n\n\nlayout = dict(\n    title=\"<b>Culmen Depth (mm) Distribution for the 3 Species<\/b>\",\n    showlegend=True,\n    width=990,\n    xaxis=dict(title=\"Penguin Species\", showgrid=True),\n    yaxis=dict(title=\"Culmen Depth (mm)\"),\n    plot_bgcolor=\"rgba(0,0,0,0)\",\n    paper_bgcolor=\"rgba(0,0,0,0)\",\n)\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)","487e8d71":"![image.png](attachment:image.png)\n\nArtwork Credit: @allison_horst https:\/\/github.com\/allisonhorst\/palmerpenguins","60ff2bb8":"## Correlation Plots","20ac7d8b":"### Gentoo penguin (Pygoscelis papua)","68391bd0":"# Preparing the Data for Plotly-Based Visualizations\n\nPlotly visualizations are easier to implement if we can aggregate the data needed for each visualization using Pandas Dataframes first.\nThis helps set Plotly Traces efficiently and quickly when creating Plotly Plots.\n\n## Creating individual dataframes for each species for easy visualization\n\n### Adelie Penguin (Pygoscelis adeliae)","fe52890b":"## Distributions","13567c34":"## PLOTLY VISUALIZATIONS\n\nNow when we have handled our data well by aggregating them into Dataframes keeping specific visualizations in mind, let\u2019s get started with building the Plotly plots on the Penguin Dataset!!","2065c202":"## Species Gender Count","e9b16b65":"### Chinstrap penguin (Pygoscelis antarctica)","49d3e9a2":"### Species Count","fcc9ba5c":"# Plotly for PalmerPenguins Dataset\n\nPalmerPenguins dataset has been recently introduced as an alternative to the Iris dataset that is commonly used for data exploration, visualization and classification modeling.\n\nThe PalmerPenguins data were collected and made available by Dr. Kristen Gorman and the Palmer Station, Antarctica LTER, a member of the Long Term Ecological Research Network.\n\nThe palmerpenguins package contains two datasets that can either be downloaded from the original GitHub link \u2014 https:\/\/github.com\/allisonhorst\/palmerpenguins, or can be accessed from Kaggle.\n\nBoth datasets contain data for 344 penguins. There are 3 different species of penguins in this dataset, collected from 3 islands in the Palmer Archipelago, Antarctica.\n\n## This notebook is particularly focussed on using rich and interactive Plotly visualizations for the Palmer Penguins Dataset. "}}