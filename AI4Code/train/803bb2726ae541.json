{"cell_type":{"eb08a2e8":"code","994f852f":"code","0264d0b2":"code","b0b3c598":"code","b28d46e6":"code","57a10217":"code","936e223f":"code","91fcbbbc":"code","9efe0376":"code","92178064":"code","74265037":"code","444dc091":"code","2c853f64":"code","c9b2850f":"code","a6df5bb6":"code","b2f4a6e6":"code","23392603":"code","eb0bd524":"code","356efc90":"code","6716a5d5":"code","dc49b623":"markdown","f247c1f0":"markdown","16eed898":"markdown","81a31bc0":"markdown","7318cf44":"markdown","6415df1c":"markdown","4f971da2":"markdown","de21e001":"markdown","050d7e6d":"markdown","a0bf3bd1":"markdown","a1be78c1":"markdown","95a2b894":"markdown","0a1b4066":"markdown","4dfe36ea":"markdown","fedb2d40":"markdown","95252d3a":"markdown","50d0c23b":"markdown","f6d375d6":"markdown"},"source":{"eb08a2e8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","994f852f":"udemy_data = pd.read_csv(\"\/kaggle\/input\/udemy-courses\/udemy_courses.csv\")\nudemy_data.head()","0264d0b2":"# Change into boolean form\nudemy_data.is_paid.replace(['FALSE', 'https:\/\/www.udemy.com\/learnguitartoworship\/'], 'False', inplace = True)\nudemy_data.is_paid.replace('TRUE', 'True', inplace = True)\nudemy_data.level.replace('52', 'All Levels', inplace = True)\nudemy_data = udemy_data.drop_duplicates().reset_index(drop=True)","b0b3c598":"udemy_data.info","b28d46e6":"# Drop the columns that are irrelevant\n\nudemy_data.drop(['course_id','url'], axis=1, inplace=True)","57a10217":"subscribers = udemy_data.groupby('is_paid')['num_subscribers'].agg('sum').to_frame()\nfig = px.pie(subscribers, values='num_subscribers', names= ['Paid', 'UnPaid'], title='Subscribers Correlation Chart')\nfig.show()\n","936e223f":"subjects = udemy_data.groupby('subject')['num_subscribers'].agg('sum').to_frame()\nnames = udemy_data['subject'].unique()\nfig = px.pie(subjects, values='num_subscribers', names= names , title='Subscribers and Subject Correlation Chart')\nfig.update_traces(rotation=90)\nfig.show()","91fcbbbc":"# Converting the number of lectures into a range\nbins = [0, 25, 50, 75, 100, 150, 200, 250, 300, 350, 400, 450, 500, np.inf]\nbin_names =  ['<25', '25h-50', '50h-75', '75h-100', '100h-150', '150h-200', '200h-250', '250h-300', '300h-350', '350h-400', '400h-450', '450h-500', '500+']\nudemy_data['lectures_range'] = pd.cut(udemy_data['num_lectures'], bins, labels=bin_names)","9efe0376":"# Using the lectures_range column to find the correlation to number of subscribers\nlectures = udemy_data.groupby('lectures_range')['num_subscribers'].agg('sum').to_frame()\nfig = px.pie(lectures, values='num_subscribers', names= bin_names , title='Subscribers and Number of Lectures Correlation Chart')\nfig.show()\n","92178064":"level = udemy_data.groupby('level')['num_subscribers'].agg('sum').to_frame()\nnames = udemy_data['level'].unique()\nfig = px.pie(level, values='num_subscribers', names= sorted(names) , title='Subscribers and Course Level Correlation Chart')\nfig.show()\n","74265037":"# Converting the number of lectures into a range\nbins = [0, 5, 10, 15, 20, np.inf]\nbin_names =  ['0-5h', '5-10h', '10-15h', '15-20h', '20h+']\nudemy_data['content_range'] = pd.cut(udemy_data['content_duration'], bins, labels=bin_names)","444dc091":"# Using the content_range column to find the correlation to number of subscribers\nlectures = udemy_data.groupby('content_range')['num_subscribers'].agg('sum').to_frame()\nfig = px.pie(lectures, values='num_subscribers', names= bin_names , title='Subscribers and Content duration Correlation Chart')\nfig.show()","2c853f64":"subjects = udemy_data.groupby('subject')['num_reviews'].sum().to_frame()\nnames = udemy_data['subject'].unique()\n\nfig = px.pie(subjects, values='num_reviews', names= names , title='Reviews for each subject')\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\")\nfig.show()","c9b2850f":"paid_courses = udemy_data.loc[udemy_data['is_paid'] == True, ['price', 'subject']]\nmost_paid = udemy_data.groupby('subject')['price'].sum().reset_index()\nnames = paid_courses['subject'].unique()\n\nfig = px.pie(most_paid, values='price', names= names , title='Most high paid Courses')\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\")\nfig.show()","a6df5bb6":"paid_courses = udemy_data.loc[udemy_data['is_paid'] == True, ['is_paid', 'subject']]\nmost_paid = udemy_data.groupby('subject')['is_paid'].count().reset_index()\nnames = paid_courses['subject'].unique()\n\nfig = px.pie(most_paid, values='is_paid', names= names , title='Most paid Courses')\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\")\nfig.show()","b2f4a6e6":"free_courses = udemy_data.loc[udemy_data['is_paid'] == False, ['is_paid', 'subject']]\nmost_free = free_courses.groupby('subject')['is_paid'].count().to_frame()\nnames = free_courses['subject'].unique()\n\nfig = px.pie(most_free, values='is_paid', names= names , title='Most free Courses')\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\")\nfig.show()","23392603":"courses = udemy_data.loc[:, ['course_title','num_reviews']]\nmost_reviews = courses.groupby('course_title')['num_reviews'].max().reset_index()\nmost_reviews_sort = most_reviews.sort_values(by = 'num_reviews', ascending = False)\nmost_reviews_sort = most_reviews_sort.head(10)\n\nfig = px.pie(most_reviews_sort, values='num_reviews', names= 'course_title' , title='Most Reviews for Course titles', template = 'seaborn')\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\")\nfig.show()","eb0bd524":"courses = udemy_data.loc[:, ['course_title','num_reviews']]\nleast_reviews = courses.groupby('course_title')['num_reviews'].max().reset_index()\nleast_reviews = least_reviews[least_reviews['num_reviews'] > 10]\nleast_reviews_sort = least_reviews.sort_values(by = 'num_reviews')\nleast_reviews_sort = least_reviews_sort.head(10)\n\nfig = px.pie(least_reviews_sort, values='num_reviews', names= 'course_title' , title='Least Reviews for Course titles', template = 'seaborn')\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\")\nfig.show()","356efc90":"courses = udemy_data.loc[:, ['course_title','num_subscribers']]\nmost_subs = courses.groupby('course_title')['num_subscribers'].max().reset_index()\nmost_subs_sort = most_subs.sort_values(by = 'num_subscribers', ascending = False)\nmost_subs_sort = most_subs_sort.head(10)\n\nfig = px.pie(most_subs_sort, values='num_subscribers', names= 'course_title' , title='Most subscribers for Course titles', template = 'seaborn')\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\")\nfig.show()","6716a5d5":"courses = udemy_data.loc[:, ['course_title','num_subscribers']]\nleast_subs = courses.groupby('course_title')['num_subscribers'].max().reset_index()\nleast_subs = least_subs[least_subs['num_subscribers'] > 10]\nleast_subs_sort = least_subs.sort_values(by = 'num_subscribers')\nleast_subs_sort = least_subs_sort.head(10)\n\nfig = px.pie(least_subs_sort, values='num_subscribers', names= 'course_title' , title='Least subscribers for Course titles', template = 'seaborn')\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\")\nfig.show()","dc49b623":"<a id=\"eda-zero\"><\/a>\n### Initial Cleaning","f247c1f0":"<a id=\"eda-one\"><\/a>\n### Data Information","16eed898":"<a id=\"eda-five\"><\/a>\n### Which Content duration range has most number of subscribers ----------> 0-5h","81a31bc0":"<a id=\"sec3-2b\"><\/a>\n### Which subject has most paid courses? ----------> Web Development","7318cf44":"<a id=\"eda-3b\"><\/a>\n### Which number of Lectures range has most Subscribers ----------> <25 Lectures","6415df1c":"<a id=\"sec3-2\"><\/a>\n### Which subject has most high paid courses? ----------> Web Development","4f971da2":"<a id=\"section-one\"><\/a>\n# Reading the Datasets","de21e001":"<a id=\"sec3-1\"><\/a>\n### Which subject has most number of reviews? ----------> Web Development","050d7e6d":"<a id=\"sec3-3\"><\/a>\n### Which subject has most free courses? ----------> Web Development","a0bf3bd1":"<a id=\"eda-three\"><\/a>\n### Which Subject have most number of Subscribers ----------> Web Development","a1be78c1":"<a id=\"eda-two\"><\/a>\n### Which type of Courses have most number of Subscribers ----------> UnPaid","95a2b894":"<a id=\"sec3-7\"><\/a>\n### Which course has least number of subscribers? ----------> Multiple Courses","0a1b4066":"<a id=\"section-two\"><\/a>\n# Exploratory Data Analysis\n1. [Initial Cleaning](#eda-zero)\n2. [Data Information](#eda-one)\n3. [Which type of Courses have most number of Subscribers](#eda-two)\n4. [Which Subject has most number of Subscribers](#eda-three)\n5. [Which number of Lectures range has most Subscribers](#eda-3b)\n6. [Which Course level has most number of Subscribers](#eda-four)\n7. [Which Content duration range has most number of subscribers](#eda-five)","4dfe36ea":"<a id=\"section-three\"><\/a>\n# Analysis of Subjects and Courses\n1. [Which subject has most number of reviews?](#sec3-1)\n2. [Which subject has most high paid courses?](#sec3-2)\n3. [Which subject has most paid courses?](#sec3-2b)\n4. [Which subject has most free courses?](#sec3-3)\n5. [Which course has most number of reviews?](#sec3-4)\n6. [Which course has least number of reviews?](#sec3-5)\n7. [Which course has most subscribers?](#sec3-6)\n8. [Which course has least subscribers?](#sec3-7)","fedb2d40":"<a id=\"sec3-6\"><\/a>\n### Which course has most number of subscribers? ----------> Learn HTML5 Programming From Scratch","95252d3a":"<a id=\"sec3-5\"><\/a>\n### Which course has least number of reviews? ----------> Multiple courses","50d0c23b":"<a id=\"eda-four\"><\/a>\n### Which Course level has most Subscribers ----------> All Levels","f6d375d6":"<a id=\"sec3-4\"><\/a>\n### Which course has most number of reviews? ----------> The Web Developer Bootcamp"}}