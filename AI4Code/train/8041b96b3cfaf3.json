{"cell_type":{"3286499c":"code","826d26fd":"code","ad0d848c":"code","48297f44":"code","641d53f8":"code","63046de1":"code","b8d2695b":"code","23ad68e8":"code","e1e8eef5":"code","b6421741":"code","1351cad0":"code","f0c4de20":"code","b0b03b3f":"code","1946942a":"code","f0836be1":"code","72d37f06":"code","5b4757f8":"code","730824d6":"code","212e2de4":"code","e2bcd96d":"markdown","5a33356b":"markdown","f8c4999d":"markdown","1bcbf9a9":"markdown","91fc42c2":"markdown","7146cf02":"markdown","ff58a614":"markdown","f5930efd":"markdown","0c9e7cda":"markdown"},"source":{"3286499c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","826d26fd":"import numpy as np\nimport pandas as pd\nad = pd.read_csv(\"\/kaggle\/input\/advertising\/Advertising.csv\", usecols=[1,2,3,4])\ndf = ad.copy()\ndf.head()","ad0d848c":"from sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict","48297f44":"X = df.drop(\"sales\", axis = 1)\ny = df[\"sales\"]\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state= 42)","641d53f8":"import statsmodels.api as sm\nlm = sm.OLS(y_train, X_train)\nmodel = lm.fit()\nmodel.summary()","63046de1":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, r2_score\nlm = LinearRegression()\nmodel = lm.fit(X_train, y_train)","b8d2695b":"print(\"intercept:\" + str(model.intercept_) ,\"coef:\" + str(model.coef_))","23ad68e8":"a = [[30], [10],[40]]\na = pd.DataFrame(a).T\nprint(\"%.2f\" % model.predict(a))","e1e8eef5":"rmse = np.sqrt(mean_squared_error(y_train, model.predict(X_train)))","b6421741":"rmse","1351cad0":"rmse = np.sqrt(mean_squared_error(y_test, model.predict(X_test)))","f0c4de20":"rmse","b0b03b3f":"X = df.drop('sales', axis=1)\ny = df[\"sales\"]\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=144)\nlm = LinearRegression() \nmodel = lm.fit(X_train, y_train)","1946942a":"np.sqrt(mean_squared_error(y_train, model.predict(X_train)))","f0836be1":"np.sqrt(mean_squared_error(y_test, model.predict(X_test)))","72d37f06":"model.score(X_train, y_train)","5b4757f8":"cross_val_score(model, X_train, y_train, cv = 10, scoring = \"r2\").mean()","730824d6":"np.sqrt(-cross_val_score(model, \n                X_train, \n                y_train, \n                cv = 10, \n                scoring = \"neg_mean_squared_error\")).mean()","212e2de4":"np.sqrt(-cross_val_score(model, \n                X_test, \n                y_test, \n                cv = 10, \n                scoring = \"neg_mean_squared_error\")).mean()","e2bcd96d":"Linear regression is a linear approach to modelling the relationship between a scalar response (or dependent variable) and one or more explanatory variables (or independent variables). The case of one explanatory variable is called simple linear regression. For more than one explanatory variable, the process is called multiple linear regression. This term is distinct from multivariate linear regression, where multiple correlated dependent variables are predicted, rather than a single scalar variable.","5a33356b":"### Model Tuning","f8c4999d":"When there are 30 units of TV spending, 10 units of radio spending, 40 units of newspaper spending, the estimated value of the sales becomes 6,32.","1bcbf9a9":"### Prediction","91fc42c2":"The value of R-squared increased because the number of variables increased and its explainability increased accordingly. By looking at the value of r squared, we can say that the variability of the sales variable can be explained by ninety-eight percent. (R-squared 0.982)","7146cf02":"Model equation : Sales = 2.97 + TV0.04 + radio0.18 + newspaper*0.002\n\n\nFor example, what is the estimated value of sales when there are 30 units of TV expenditure, 10 units of radio expenditure, 40 units of newspaper expenditure?","ff58a614":"## Multiple Linear Regression","f5930efd":"### Scikit-Learn Modelling","0c9e7cda":"### Modelling with Statsmodels"}}