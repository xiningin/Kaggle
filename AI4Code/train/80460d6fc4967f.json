{"cell_type":{"5c8f8683":"code","a8d4c67c":"code","94bb2ab8":"code","73ba93e8":"code","6be64948":"code","78c44504":"code","54c9e338":"code","8a309600":"code","c52d56f7":"markdown","52197f98":"markdown","fd221ca7":"markdown"},"source":{"5c8f8683":"import numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport seaborn as sns\nimport pandas as pd\nimport datetime\nimport os\n\nfpaths = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        fpaths.append(os.path.join(dirname, filename))\n        \nif len(fpaths) == 0:\n    print(\"No files found in path\")\nelif len(fpaths) == 1:\n    df = pd.read_csv(fpaths[0])\n    print(df.head(5))\nelse:\n    dfs = []\n    for fpath in fpaths:\n        df_i = pd.read_csv(fpath)\n        print(df_i.head(3))\n        dfs.append(df_i)\n","a8d4c67c":"# only have 1 dataframe (reading from 1 file only)\ndf.describe(include='all')","94bb2ab8":"print('Missing Values')\nprint('-------------------------')\nprint(df.isna().sum())\nprint('\\n')\nprint('Data types of each column in dataframe')\nprint('---------------------------------------')\nprint(df.dtypes)","73ba93e8":"# make the data column a datetime object\ndf.date = list(pd.to_datetime(df.date,format='%Y-%m-%d'))","6be64948":"# Sort the dates\ndates = np.unique(df.date.values)\ndates_sorted = np.sort(dates)\nprint(\"Dates\")\nprint(\"--------------------------------------------------------------------------\")\nprint(f\"start date: {dates_sorted[0]}\\t end date: {dates_sorted[-1]}\")\nprint('\\n')\n# look at variant names\nvariants = np.unique(df.variant.values)\nprint('variant names')\nprint(\"-------------------------------------------------------------------------\")\nprint(variants)","78c44504":"# check how often each variant has been sequenced\n\nnum_squences_by_variant_sorted = df.groupby('variant')['num_sequences'].sum().sort_values(ascending=False).index.values\nplt.close(1);plt.figure(1, figsize=(14,5))\nax1 = sns.barplot(x=\"variant\", y=\"num_sequences\", data=df, order=num_squences_by_variant_sorted, ci=None)\nax1.tick_params(axis='x', rotation=45)\nax1.set_title('Number of sequences done for each Variant', size=13)\nax1.set_xlabel('Variant', size= 12)\nax1.set_ylabel('Number of squences done', size= 12)\nplt.show()","54c9e338":"# Look at the 30 countries who sample the most ()\n\nnum_sequences_by_country_sorted = df.groupby('location')['num_sequences'].sum().sort_values(ascending=False)\nseq_by_ctry_top30 = num_sequences_by_country_sorted[:30]\ny_ticks = ticker.FuncFormatter(lambda y, pos: '{0:g}'.format(y\/10000))\n\nplt.close(2);plt.figure(2, figsize=(14,5))\nax2 = sns.barplot(x=seq_by_ctry_top30.index, y=seq_by_ctry_top30.values)\nax2.tick_params(axis='x', rotation=45, labelsize=10)\nax2.yaxis.set_major_formatter(y_ticks)\nax2.set_title('Number of sequences done by Country', size=13)\nax2.set_xlabel('Country', size= 12)\nax2.set_ylabel('Number of sequences in multiples of 10 000', size= 12)\nplt.show()","8a309600":"# aggregate data into pivot table for stack col chart\nvariant_number_by_loc = pd.DataFrame(df.groupby(['location', 'variant'])['num_sequences'].sum().sort_values(ascending=False))\n\n# Get list of top30 countries ordered by most number of sequences done\nax2_xlabels = ax2.get_xticklabels()\ntop30ctry_ordered = [ax2_xlabels[i].get_text() for i in range(len(ax2_xlabels))]\n\n# Only use top 10 most sequenced variants\nax1_xlabels = ax1.get_xticklabels()\nax1_xlabels_strings = [ax1_xlabels[i].get_text() for i in range(len(ax1_xlabels))]\ntop10variants = ax1_xlabels_strings[:10]\n\n# Filter pivot to keep top 30 countries by number of sequence done and top 10 most sequenced variants\nvariant_number_by_loc = variant_number_by_loc[variant_number_by_loc.index.get_level_values('location').isin(top30ctry_ordered)]\nvariant_number_by_loc = variant_number_by_loc[variant_number_by_loc.index.get_level_values('variant').isin(top10variants)].unstack()\n\n# Drop top level of column indices\nvariant_number_by_loc.columns = variant_number_by_loc.columns.droplevel()\n\n# Plot stacked bar chart\ny_ticks = ticker.FuncFormatter(lambda y, pos: '{0:g}'.format(y\/10000))\n\nplt.close(3);plt.figure(3)\nax3 = variant_number_by_loc.plot.bar(stacked=True, figsize=[14,7])\nax3.yaxis.set_major_formatter(y_ticks)\nax3.tick_params(axis='x', rotation=45, labelsize=10)\nax3.set_xlabel('Country', size= 12)\nax3.set_ylabel('Number of sequences in multiples of 10 000', size= 12)\nax3.set_title('Number of variant sequenced in each country', size=13)\nplt.show()","c52d56f7":"## Import Data ","52197f98":"### Check data and do any basic cleaning if necessary","fd221ca7":"## EDA\n- Check the which dates the data spans\n- get list of all the unique variants \n- Check which variants get sequenced the most\n- Check which contries sample the most\n- look at time series of various countries"}}