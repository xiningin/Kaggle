{"cell_type":{"c2cb917b":"code","f8cb96fb":"code","c56e2e9d":"code","6b8a4c46":"code","e4618a72":"code","e4005b6c":"code","f527ee81":"code","35283daf":"code","baac2cfe":"code","3a45aa25":"code","edf11004":"code","c7fe22be":"code","ba75a7cc":"code","0982208f":"code","54fac884":"code","c0175315":"markdown","ca8c368b":"markdown","f5cf22ea":"markdown","bd6ae6e4":"markdown","cf0695b9":"markdown","c6729f1b":"markdown","cb31ee1e":"markdown","2caba4f2":"markdown","7145492b":"markdown","7f2ca710":"markdown","a0880c2d":"markdown","06d0cc0c":"markdown","37a8c251":"markdown","679e67a6":"markdown","efc09295":"markdown","753ffe7a":"markdown","19e8ba8a":"markdown","f6b71614":"markdown","aa098dcd":"markdown"},"source":{"c2cb917b":"import math\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport folium\n","f8cb96fb":"df = pd.read_csv('..\/input\/california-housing-prices\/housing.csv')","c56e2e9d":"df.head(5)","6b8a4c46":"print('This data set has {} tuples and {} columns'.format(df.shape[0],df.shape[1]))","e4618a72":"pd.DataFrame(df.columns, columns=['Columnn names'])","e4005b6c":"df.info()","f527ee81":"df.isnull().sum()","35283daf":"(1-df.isnull().sum()\/df.isnull().count())*100","baac2cfe":"def plot_outliers(df,col):\n    \"\"\"  \n    The goal of this function is create boxplot of the continuos variables of the dataset recived as a parameter\n    \n    Args:\n        - df: pd.DataFrame.\n        - col: column that need to be ploted.\n        \n    Return: A boxplot made from data pased as parameter.\n    \n    \"\"\"\n    plt.title(col)\n    ax = sns.boxplot(data=df, x=col)\n    ax.set(xlabel='')\n    plt.show()\n    \ndef plot_hist(df,col):\n    \"\"\"  \n    The goal of this function is create histogram of the continuos variables of the dataset recived as a parameter\n    \n    Args:\n        - df: pd.DataFrame.\n        - col: column that need to be ploted.\n        \n    Return: A histogram made from data pased as parameter.\n    \n    \"\"\"\n    plt.hist(x=df[col],bins=40,color='#D11239')\n    plt.show();\n    ","3a45aa25":"for col in df.columns:\n    if df[col].dtype == 'float64':\n        plot_outliers(df,col)\n        plot_hist(df,col)","edf11004":"df.duplicated().sum()","c7fe22be":"features_inconsistences = ['housing_median_age','total_bedrooms', 'population',\n                           'households','median_income','median_house_value']\nfor feature in features_inconsistences:\n    if df[feature].min() <=0:\n        print('{} has values below 0.\\n'.format(feature))\n    else:\n        print('{} has no values below 0.\\n'.format(feature))","ba75a7cc":"desv_std = []\nfor col in df.select_dtypes([\"float64\"]).columns:\n    desv_std.append(\n        {\n            \"Feature\": col,\n            \"DesvStd\": df[col].std(),\n            \"Mean\": df[col].mean(),\n            \"Max\": int(df[col].max()),\n            \"Min\": df[col].min(),\n            \"Q_1\": df[col].quantile(0.25),\n            \"Q_3\": df[col].quantile(0.75),\n            \"Dif Max-Q_3\": int(\n                df[col].max() - df[col].quantile(0.75)\n            ),\n        }\n    )\n\ndf_desv_std = (\n    pd.DataFrame(desv_std)\n    .sort_values(by=\"DesvStd\", ascending=False)\n    .reset_index(drop=True)\n)\ndf_desv_std","0982208f":"import seaborn as sns\n\nf, ax = plt.subplots(figsize=(10, 8))\ncorr = df.corr()\nsns.heatmap(corr,\n            mask=np.zeros_like(corr, dtype=np.bool),\n            cmap=sns.diverging_palette(220, 10, as_cmap=True),\n            square=True,\n            ax=ax);","54fac884":"m = folium.Map(location=[20,0], tiles=\"OpenStreetMap\", zoom_start=2)\nfor i in range(len(df.head(1000))):\n    folium.Marker(\n      location=[df.iloc[i]['latitude'], df.iloc[i]['longitude']],\n   ).add_to(m)\n\nsw = df[['latitude', 'longitude']].min().values.tolist()\nne = df[['latitude', 'longitude']].max().values.tolist()\n\nm.fit_bounds([sw, ne]) \nm","c0175315":"#### Interactive Map\n\nThe aim of the next plot is to show the longitude and latitude in a map.\n\n**NOTE:** the plot has only the first 1000 rows as a example.","ca8c368b":"### Part 1: Data QA\nFirst 5 rows of the data set","f5cf22ea":"#### Inconsistences to be checked\n\n* housing_median_age >= 0\n* total_beedrooms >= 0\n* population >= 0\n* households >= 0\n* median_income >= 0\n* median_house_value >= 0","bd6ae6e4":"#### Obervations abaout Data QA\n\n* The data set is almost completed\n* There are a little outliers in severals features but the most extrange features is median_house_value with the most values near to 206.855, but there are lot of values close to 500k.\n* There are 0 tuples duplicates\n* There are 0 features with inconsistences\n* About the outliers, the aim at Data QA is to show values, if the model required, feature engineering will do in the columns with outliers","cf0695b9":"# EDA California housing prices\n\nThis dataset appeared in a 1997 paper titled Sparse Spatial Autoregressions by Pace, R. Kelley and Ronald Barry, published in the Statistics and Probability Letters journal. They built it using the 1990 California census data. It contains one row per census block group. A block group is the smallest geographical unit for which the U.S. Census Bureau publishes sample data (a block group typically has a population of 600 to 3,000 people). [*Source*](https:\/\/github.com\/ageron\/handson-ml\/tree\/master\/datasets\/housing)\n\nCalifornia is one of the 50 state which conforms USA. It's placed on the west coast. Sacramento is the capital of this state but Los Angeles is the most populated city.\n\nOther (very) important citty situated in California, is San Franciso. If you're here probably you know taht this citty is known as be closer to the Silicon Valley, place where the most valuated startups and companies was born. This is a \"problem\", beacause the ones who lives in SF has incredible incomes (almost 110k USD \/year).\n\nThe Objective of this notebook is to give an idea about basics stadistics and univariate and bivariate analysis about features provided. Also diving into data in oder to find some nulls, extreme and missing values.\n\n## **What you are going to fin in this notebook?**\n\n**Part 1: Data QA**\n* Generals about Data set. (shape, column names and info about data type)\n* Information about null values and missing data. \n* Information about outliers.\n* Inconsistences\n* Conclusions and strategies about Data QA.\n\n**Part 2: Reporting**\n* Finding any relations or trends considering multiple features.\n* Analize the most valuated house.\n* Plot an interactive map\n\nIf you like the notebook and think that it helped you, **PLEASE UPVOTE**. It will helps me to keep motivated :)","c6729f1b":"#### Load packages","cb31ee1e":"#### Load Data","2caba4f2":"Shape of data set","7145492b":"As you can see, only 1 feature has null values.\ntotal_bedrooms is 98.99% completed (it has 207 null values).","7f2ca710":"#### Heatmap\n\nThe corralation is a metric about how much related are two features. Correlation is a value between -1 and 1. Closer to 1 means very strong and positive (direct) relation (example: Mayor power on cars means to much use of fuel). On the other hand, closer to -1 mean a very strong and negative (inversely)relaation (example: Spend more hours at work, mean lees hours for sleep). At the end, if value is closer to 0, there is no relation between features.\n\nBelow you can see a plot called heatmap, which dives into corelation about the loaded dataset","a0880c2d":"##### Null values\nThe next two tables shows how completed is the dataset.","06d0cc0c":"#### Interpreting The Heatmap\n* total_rooms, total_debrooms has a strong related with population and households becaouse. It is expected, because more people, in general, means more places to live.\n\n* median_income is related with median_house_value. Also it is expected (the richer the population, the higher prices).","37a8c251":"##### Info about data type al non-null\nThe info below show how many null values has each attribute","679e67a6":"### Next Steps\n\nThe next notebook will include some feature engineering and a ML model.","efc09295":"##### Plot outliers","753ffe7a":"### Part 2: Reporting\n\nThe next block contains a loop which helps to find some stadistics about the continuos variables.","19e8ba8a":"- **median_house_value:** Has the highest standard deviation.\n","f6b71614":"##### Column names","aa098dcd":"#### Dulpicated values"}}