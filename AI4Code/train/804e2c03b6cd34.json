{"cell_type":{"3c616c62":"code","16ec3ede":"code","52109fdb":"code","55d72225":"code","877ccc80":"code","ab509104":"code","bcef4372":"code","9fa68781":"code","3b47198a":"code","47b00238":"code","73ff4433":"code","3bbcb18d":"code","d24f2e4a":"code","48be5d7d":"code","ab0a3d47":"code","3139504b":"code","4bf24f45":"code","8caabdcb":"code","4aab7aee":"code","2a09b121":"code","860abacf":"code","bb79e985":"code","c30d2f55":"code","4d668d72":"code","b9577cfd":"code","e5c0fd67":"code","1c398763":"code","ae7fd4fd":"code","21e23065":"code","33df156a":"code","e2ae7300":"code","f9e1179d":"code","02839e7c":"code","eb16329e":"code","5e88e41b":"code","6f228153":"code","9f755a4d":"code","e0c81a5b":"markdown","ea71b0e1":"markdown","1f87ca4b":"markdown","a9693238":"markdown","449df045":"markdown","0cd5c832":"markdown","a88ad10c":"markdown","d774ac40":"markdown"},"source":{"3c616c62":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom plotly.offline import iplot\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","16ec3ede":"df1 = pd.read_csv('..\/input\/covid19-vaccine-adverse-reactions-vaers-dataset\/Features.csv')\ndf1.head().style.set_properties(**{'background-color':'purple',\n                                     'color': 'white'})","52109fdb":"df = pd.read_csv('..\/input\/covid19-vaccine-adverse-reactions-vaers-dataset\/Covid1-19_VAERS_Jan_June_2021.csv')\ndf.head(2).style.set_properties(**{'background-color':'purple',\n                                     'color': 'white'})","55d72225":"df.isnull().sum()","877ccc80":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'green',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df[\"VAX_MANU\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Vaccine Manufacturer\")\nplt.show()","ab509104":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'yellow',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df[\"VAX_NAME\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Vaccine Name\")\nplt.show()","bcef4372":"##Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color = 'red',\n                      height =2000,\n                      width = 2000\n                     ).generate(str(df[\"ALLERGIES\"]))\nplt.rcParams['figure.figsize'] = (12,12)\nplt.axis(\"off\")\nplt.imshow(wordcloud)\nplt.title(\"Allergies\")\nplt.show()","9fa68781":"vaers = df[['VAERS_ID','SYMPTOMVERSION1','SYMPTOMVERSION2','SYMPTOMVERSION3','VAX_NAME','AGE_YRS', 'SEX', 'SYMPTOM_TEXT', 'DIED','ALLERGIES']]","3b47198a":"vaers.head()","47b00238":"#Code by Lucas Abrah\u00e3o https:\/\/www.kaggle.com\/lucasabrahao\/trabalho-manufatura-an-lise-de-dados-no-brasil\n\nvaers[\"SEX\"].value_counts().plot.bar(color=['blue', '#f5005a', '#7FFF00'], title='Participants Gender',);","73ff4433":"plt.figure(figsize=(20,10))\nplt.title('Histogram of Years of Age')\nsns.histplot(data=vaers, x='AGE_YRS', bins=22, kde=True);","3bbcb18d":"plt.figure(figsize=(20,10))\nplt.title('Heatmap')\nsns.heatmap(data=vaers.corr(), annot=True);","d24f2e4a":"# categorical features with missing values\ncategorical_nan = [feature for feature in vaers.columns if vaers[feature].isna().sum()>0 and vaers[feature].dtypes=='O']\nprint(categorical_nan)","48be5d7d":"# replacing missing values in categorical features\nfor feature in categorical_nan:\n    vaers[feature] = vaers[feature].fillna('None')","ab0a3d47":"vaers[categorical_nan].isna().sum()","3139504b":"# Lets handle numerical features with nan value\nnumerical_nan = [feature for feature in vaers.columns if vaers[feature].isna().sum()>1 and vaers[feature].dtypes!='O']\nnumerical_nan","4bf24f45":"vaers[numerical_nan].isna().sum()","8caabdcb":"## Replacing the numerical Missing Values\n\nfor feature in numerical_nan:\n    ## We will replace by using median since there are outliers\n    median_value=vaers[feature].median()\n    \n    vaers[feature].fillna(median_value,inplace=True)\n    \nvaers[numerical_nan].isnull().sum()","4aab7aee":"#Code by Bizen https:\/\/www.kaggle.com\/hiro5299834\/tps-apr-2021-deebtables\/notebook\n\nTARGET = 'ALLERGIES' #Target could Not be float otherwise will result in valueError: Unknown label type: 'continuous'. Even after the encoding.\n\nlabel_cols = ['VAX_NAME', 'SEX', 'DIED']\nnumerical_cols = ['VAERS_ID', 'SYMPTOMVERSION1', 'SYMPTOMVERSION2', 'SYMPTOMVERSION3', 'AGE_YRS']","2a09b121":"#Code by Bizen https:\/\/www.kaggle.com\/hiro5299834\/tps-apr-2021-deebtables\/notebook\n\nfrom sklearn.preprocessing import LabelEncoder\n\ndef label_encoder(c):\n    le = LabelEncoder()\n    return le.fit_transform(c)\n\nlabel_encoded_vaers = vaers[label_cols].apply(label_encoder)\nnumerical_vaers = vaers[numerical_cols]\ntarget_vaers = vaers[TARGET]\n\nvaers = pd.concat([label_encoded_vaers, numerical_vaers, target_vaers], axis=1)","860abacf":"vaers.head()","bb79e985":"X = vaers.drop('ALLERGIES', axis=1)\ny = vaers['ALLERGIES']","c30d2f55":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","4d668d72":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","b9577cfd":"scaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","e5c0fd67":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier\nfrom xgboost import XGBClassifier, XGBRFClassifier\nfrom catboost import CatBoostClassifier\nfrom lightgbm import LGBMClassifier","1c398763":"def fit_and_score(models, X_train, X_test, y_train, y_test):\n    np.random.seed(42)\n    \n    model_scores = {}\n    \n    for name, model in models.items():\n        model.fit(X_train,y_train)\n        model_scores[name] = model.score(X_test,y_test)\n\n    model_scores = pd.DataFrame(model_scores, index=['Score']).transpose()\n    model_scores = model_scores.sort_values('Score')\n        \n    return model_scores","ae7fd4fd":"models = {'LogisticRegression': LogisticRegression(max_iter=10000),\n          'KNeighborsClassifier': KNeighborsClassifier(),\n          'SVC': SVC(),\n          'DecisionTreeClassifier': DecisionTreeClassifier(),\n          'RandomForestClassifier': RandomForestClassifier(),\n          'AdaBoostClassifier': AdaBoostClassifier(),\n          'GradientBoostingClassifier': GradientBoostingClassifier(),\n          'XGBClassifier': XGBClassifier(objective='binary:logistic',eval_metric=['logloss']),\n          'XGBRFClassifier': XGBRFClassifier(objective='binary:logistic',eval_metric=['logloss']),\n          'LGBMClassifier':LGBMClassifier()}","21e23065":"#baseline_model_scores = fit_and_score(models, X_train, X_test, y_train, y_test)","33df156a":"#baseline_model_scores","e2ae7300":"#plt.figure(figsize=(20,10))\n#sns.barplot(data=baseline_model_scores.sort_values('Score').T)\n#plt.title('Baseline Model Precision Score')\n#plt.xticks(rotation=90);","f9e1179d":"!pip install emot","02839e7c":"import emot","eb16329e":"text = 'Injection site swelling \u2639\ufe0f, redness, warm \ud83d\udca5 to the \ud83d\ude37'\n\nans = emot.emoji(text)\n\nans","5e88e41b":"text1 = '\ud83d\ude37Approximately 30 min \ud83d\ude32post vaccination \u2639\ufe0fadministration patient demonstrated \ud83d\ude23 SOB and anxiousness.\ud83d\ude2b'\n\nans = emot.emoji(text1)\n\nans","6f228153":"text2 = 'Felt\u270a a little \ud83d\udc4c nauseous and a\ud83d\ude2c little headache\ud83d\udc40'\n\nans = emot.emoji(text2)\n\nans","9f755a4d":"text3 = ' Sore \ud83d\udcaaarm started \u270aseveral hours \ud83d\udc4clater approximately\ud83d\ude32 9 PM 12\/29\/2020 2.\u2639\ufe0f Chills started \ud83d\ude14'\n\nans = emot.emoji(text3)\n\nans","e0c81a5b":"#Model Imports","ea71b0e1":"#Dealing with Missing Values","1f87ca4b":"#Plan B","a9693238":"This are the follow models we can have a closer look at as it provides a better R2 score\n\nLogisticRegression: ?????\n\nKNeighborsClassifier ?????  \n\nSVC ????    ","449df045":"#Baseline model scores","0cd5c832":"#Code by Davegn  https:\/\/www.kaggle.com\/davegn\/breast-cancer-classification\/notebook","a88ad10c":"#Let's work with less features","d774ac40":"#After that line below my Notebook allocated too much memory. Alzheimer? Go to Plan B."}}