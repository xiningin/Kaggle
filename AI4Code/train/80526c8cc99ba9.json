{"cell_type":{"c6221c62":"code","1895b9dd":"code","fb8bcdb4":"code","cbcf493a":"code","2d579c01":"code","b235bd8c":"code","c9c1974b":"code","94c1e088":"code","441c63d4":"code","50e3d44d":"markdown","909d1fd7":"markdown","f05e84e6":"markdown","32b10993":"markdown"},"source":{"c6221c62":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\npd.set_option('display.max_columns', 100)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1895b9dd":"candidates = pd.read_csv('\/kaggle\/input\/campaign-contributions-19902016\/candidates.csv')\ncandidates.head()","fb8bcdb4":"df = candidates.groupby('party').agg({'raised_from_pacs': 'sum', 'raised_from_individuals': 'sum', 'raised_total': 'sum'})\ndf.plot(kind='bar')","cbcf493a":"# Just load the first X rows (this is useful at the start of the analysis)\nindiv_contribs_chunk_reader = pd.read_csv('\/kaggle\/input\/campaign-contributions-19902016\/individual_contributions.csv', iterator=True)\nindiv_contribs_chunk = indiv_contribs_chunk_reader.get_chunk(10000)\nindiv_contribs_chunk.head()","2d579c01":"# Load X rows 1 chunk at a time, run analysis 1 chunk at a time to combine the results into a final dataframe\nindiv_contribs_chunk_iter = pd.read_csv('\/kaggle\/input\/campaign-contributions-19902016\/individual_contributions.csv', chunksize=500000)\ntotal_amount = 0\nfor indiv_contribs_chunk in indiv_contribs_chunk_iter:\n    print(indiv_contribs_chunk.shape)\n    total_amount += np.sum(indiv_contribs_chunk['amount'])\ntotal_amount","b235bd8c":"pac_to_pacs = pd.read_csv('\/kaggle\/input\/campaign-contributions-19902016\/pac_to_pacs.csv')\npac_to_pacs.head()","c9c1974b":"pac_to_pacs_cycle_party = pac_to_pacs.groupby(['cycle', 'party']).agg({'amount': 'sum'}).reset_index().pivot_table(values='amount', columns='party', index='cycle')\npac_to_pacs_cycle_party[['D', 'R']].plot()","94c1e088":"pacs = pd.read_csv('\/kaggle\/input\/campaign-contributions-19902016\/pacs.csv')\npacs.head()","441c63d4":"pacs.groupby('cycle').agg({'amount': 'sum'}).plot()","50e3d44d":"#### Let's plot how the PAC contributions have aged for Republicans vs Democrats","909d1fd7":"#### Let's start with the candidates table. Let's load it & then find out raised contributions by party","f05e84e6":"#### Let's plot the evolution of PAC contributions over time","32b10993":"#### Individual contributions is a large table & loading it all in memory will fail.\n\nHere are 2 options to load & use this data :"}}