{"cell_type":{"c0d1ac56":"code","6f9cb851":"code","69cec2a5":"code","e5b0e364":"code","6ce44bec":"code","0c96c460":"code","f6ed6a35":"code","4a86b19f":"code","8509a4bc":"code","c8cb36a1":"code","edaad953":"code","824b3b91":"code","86c613f9":"code","5385d880":"code","d8ddcc4b":"code","385f4309":"code","f38811a0":"code","c3432b71":"code","50d187b0":"code","6d852370":"code","c6f2dc09":"code","a5b323f8":"code","6013764a":"code","cba3d637":"code","348b1fd9":"code","399295ec":"code","93b31664":"code","8976e877":"code","c51fe284":"code","3a397359":"code","257aa4cd":"code","f9158778":"code","45c20ae1":"code","7fe82de0":"code","39c0fa84":"code","2ecde60d":"code","7936cb91":"code","829fea0f":"code","13821036":"code","7b510f5a":"code","93336876":"code","91d3bc38":"code","acdd5489":"code","9eaea063":"code","2238a957":"code","01298bbc":"code","03fc9f2b":"code","f2f2d8be":"code","df14835d":"code","8e34ca83":"code","c7154cad":"code","298f5547":"code","bb585471":"code","0d0eaa33":"code","54cf8074":"code","09847685":"code","417a36e7":"markdown","0dd3d9d9":"markdown","0375a07f":"markdown","a895e462":"markdown","da2e86e8":"markdown","086a7812":"markdown"},"source":{"c0d1ac56":"##Libraries\nimport numpy as np \nimport pandas as pd ","6f9cb851":"#Geting the Table of Studies\n## a table of 18 columns and 63571 entries\nstudies=pd.read_csv('..\/input\/CORD-19-research-challenge\/metadata.csv') \nstudies.shape","69cec2a5":"####Cleaned the dataframe (TABLE) above for readability\nStudies1= studies[['title','publish_time','journal','url','abstract','doi','cord_uid']]\n#Make a copy to work with\nStudyAbs=Studies1.copy()","e5b0e364":"#separate each word in the column: abstract for browsing\nStudyAbs['words'] = StudyAbs.abstract.str.strip().str.split('[\\W_]+')","6ce44bec":"#separate words in the abstract column and create a new column\nAbstracts1 = StudyAbs[StudyAbs.words.str.len() > 0]\nAbstracts1.head(2)","0c96c460":"Abstracts1.shape\n##Abstracts account for 51012","f6ed6a35":"# saving the Abstracts Table (dataframe) \nAbstracts1.to_csv('All_Abstracts.csv') ","4a86b19f":"#looking through the abstracts for specific terms \n## \n##TABLE OF abstracts related to DIAGNOSTICS \nDiagnostics=Abstracts1[Abstracts1['abstract'].str.contains('diagnostics')]\nDiagnostics.shape\n## I identify here 651 entries among Abstracts related to DIAGNOSTICS","8509a4bc":"# saving the Table (dataframe): Study Abstracts related to DIAGNOSTICS\nDiagnostics.to_csv('Study_Abstracts_on_Diagnostics.csv') ","c8cb36a1":"from wordcloud import WordCloud, STOPWORDS \nimport matplotlib.pyplot as plt ","edaad953":"#to omit:\nsymbols1='!@#$%&*.,?\"-'\nignoreThese=['background', 'abstract',\n             'our','this','the',\n             'objective','since', 'name']\n\nfor char in symbols1:\n        words1=Diagnostics['words'].replace(char,' ')\n#lower case all words\nwords1=str(words1)\nwords1=words1.lower()\n\n#ignore words\nfor item in ignoreThese:\n        words1=words1.replace(item, ' ')       \n        ","824b3b91":"wordcloud = WordCloud(\n            width = 1000,\n            height = 1000,\n            background_color = 'black',\n            stopwords = STOPWORDS).generate(words1)\nfig = plt.figure(\n    figsize = (20, 10),\n    facecolor = 'k',\n    edgecolor = 'k')\nplt.imshow(wordcloud, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","86c613f9":"#Abtracts with the term corona\ncorona=Diagnostics[Diagnostics['abstract'].str.contains('corona')]\ncorona\n## Shows 126 abstracts related to diagnostics and corona","5385d880":"#to omit symbols and terms:\n## already defined symbols1='!@#$%&*.,?\"-'\n## already defined ignoreThese\n\nfor char in symbols1:\n        words2=corona['words'].replace(char,' ')\n#lower case all words\nwords2=str(words2)\nwords2=words2.lower()\n\n#ignore words\nfor item in ignoreThese:\n        words2=words2.replace(item, ' ') \n##CLOUD\nwordcloud2 = WordCloud(\n            width = 1000,\n            height = 1000,\n            background_color = 'black',\n            stopwords = STOPWORDS).generate(words2)\nfig = plt.figure(\n    figsize = (20, 10),\n    facecolor = 'k',\n    edgecolor = 'k')\nplt.imshow(wordcloud2, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","d8ddcc4b":"# saving the Table (dataframe): Study Abstracts related to DIAGNOSTICS\ncorona.to_csv('Study_Abstracts_on_Corona_Diagnostics.csv') ","385f4309":"##Search through Abstracts with the word CORONA for TOOLS\ntools=corona[corona['abstract'].str.contains('diagnostic tools')]\ntools\n##4 results","f38811a0":"# saving the Table (dataframe): \n#Four study Abstracts related to DIAGNOSTICS tools\ntools.to_csv('Study_Abstracts_on_corona_diagnostics_tools.csv') ","c3432b71":"testing=Diagnostics[Diagnostics['abstract'].str.contains('test')]\ntesting","50d187b0":"# saving the Table (dataframe): \n#Study Abstracts related to DIAGNOSTICS test\ntesting.to_csv('Study_Abstracts_on_Diagnostics_Test.csv')","6d852370":"#to omit:\n## already defined symbols1 above\n##update to words to ignore\nignoreThese2=['background', 'abstract','our','this', 'words'\n             'the','objective','since','summary',\n             'commentary']\n\nfor char in symbols1:\n        words3=testing['words'].replace(char,' ')\n#lower case all words\nwords3=str(words3)\nwords3=words3.lower()\n\n#ignore words\nfor item in ignoreThese2:\n        words3=words3.replace(item, ' ') \n##CLOUD\nwordcloud3 = WordCloud(\n            width = 1000,\n            height = 1000,\n            background_color = 'black',\n            stopwords = STOPWORDS).generate(words3)\nfig = plt.figure(\n    figsize = (20, 10),\n    facecolor = 'k',\n    edgecolor = 'k')\nplt.imshow(wordcloud3, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","c6f2dc09":"COVID=Diagnostics[Diagnostics['abstract'].str.contains('COVID')]\nCOVID.shape","a5b323f8":"COVID","6013764a":"# saving the Table (dataframe): \n#Study Abstracts related to DIAGNOSTICS and COVID\nCOVID.to_csv('Study_Abstracts_on_Diagnostics_and_COVID.csv')","cba3d637":"###\n##\nsample=Diagnostics[Diagnostics['abstract'].str.contains('sample')]\nsample.shape","348b1fd9":"FDA=Diagnostics[Diagnostics['abstract'].str.contains('FDA')]\nFDA\n#8 abstracts related to FDA and diagnostics","399295ec":"# saving the Table (dataframe): \n#Study Abstracts related to DIAGNOSTICS and FDA\nFDA.to_csv('Study_Abstracts_on_Diagnostics_and_FDA.csv')","93b31664":"#Diagnostics studies show..\nstudiesD=Diagnostics[Diagnostics['abstract'].str.contains('studies show')]\nstudiesD\n#3 abstracts","8976e877":"# saving the Table (dataframe): \n#Study Abstracts related to DIAGNOSTICS and evidence\nstudiesD.to_csv('Study_Abstracts_on_what_Diagnostics_studies_show.csv')","c51fe284":"evidence=Diagnostics[Diagnostics['abstract'].str.contains('evidence')]\nevidence.shape","3a397359":"# saving the Table (dataframe): \n#Study Abstracts related to DIAGNOSTICS and evidence\nevidence.to_csv('Study_Abstracts_on_Diagnostics_and_evidence.csv')","257aa4cd":"ViralTest=Diagnostics[Diagnostics['abstract'].str.contains('viral test')]\nViralTest\n#4 abstracts","f9158778":"# saving the Table (dataframe): \n#Study Abstracts related to DIAGNOSTICS and Viral Test\nViralTest.to_csv('Study_Abstracts_on_Diagnostics_and_ViralTest.csv')","45c20ae1":"RtPCR=Diagnostics[Diagnostics['abstract'].str.contains('RT-PCR')]\nRtPCR.shape","7fe82de0":"# saving the Table (dataframe): \n#Study Abstracts related to DIAGNOSTICS and RtPCR\nRtPCR.to_csv('Study_Abstracts_on_Diagnostics_and_RtPCR.csv')","39c0fa84":"##antibodies tests\nAntibodies=Diagnostics[Diagnostics['abstract'].str.contains('antibodies')]\nAntibodies.shape","2ecde60d":"# saving the Table (dataframe): \n#Study Abstracts related to DIAGNOSTICS and Antibodies\nAntibodies.to_csv('Study_Abstracts_on_Diagnostics_and_Antibodies.csv')","7936cb91":"Sero=Diagnostics[Diagnostics['abstract'].str.contains('serology')]\nSero.shape","829fea0f":"# saving the Table (dataframe): \n#Study Abstracts related to DIAGNOSTICS and Serology\nSero.to_csv('Study_Abstracts_on_Diagnostics_and_Serology.csv')","13821036":"##Assays\nassay=Diagnostics[Diagnostics['abstract'].str.contains('assay')]\nassay.shape","7b510f5a":"#to omit:\n## already defined symbols1 above\n##update words to ignore:\nignoreThese3=['background', 'abstract','our','this', 'words'\n             'the','objective','since','summary','name',\n              'commentary','study', 'object', 'dtypes',\n             'dtype']\n\nfor char in symbols1:\n        words4=assay['words'].replace(char,' ')\n#lower case all words\nwords4=str(words4)\nwords4=words4.lower()\n\n#ignore words\nfor item in ignoreThese3:\n        words4=words4.replace(item, ' ') \n##CLOUD\nwordcloud4 = WordCloud(\n            width = 1000,\n            height = 1000,\n            background_color = 'black',\n            stopwords = STOPWORDS).generate(words4)\nfig = plt.figure(\n    figsize = (20, 10),\n    facecolor = 'k',\n    edgecolor = 'k')\nplt.imshow(wordcloud4, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","93336876":"##Other diganostic tools:\n#Scans (ct scans)\n#Symptoms\n#X-rays\nscans=Diagnostics[Diagnostics['abstract'].str.contains('scan')]\nscans.shape","91d3bc38":"sympt=Diagnostics[Diagnostics['abstract'].str.contains('symptoms')]\nsympt.shape","acdd5489":"xrays=Diagnostics[Diagnostics['abstract'].str.contains('X-ray')]\nxrays.shape","9eaea063":"# saving the Table (dataframe): \n#Study Abstracts related to other DIAGNOSTIC tools\nOtherDiag= pd.concat([scans,sympt,xrays])\nOtherDiag.to_csv('Study_Abstracts_on_Diagnostics_other_tools.csv')","2238a957":"##Study abstracts related to development in diagnostics\nDev=Diagnostics[Diagnostics['abstract'].str.contains('development')]\nDev.shape","01298bbc":"#to omit:\n## already defined symbols1 above\n##update words to ignore:\nignoreThese4=['background', 'abstract','our','this', 'words',\n             'the','objective','since','summary','name',\n              'commentary','study', 'object', 'dtypes',\n             'dtype','many']\n\nfor char in symbols1:\n        words5=Dev['words'].replace(char,' ')\n#lower case all words\nwords5=str(words5)\nwords5=words5.lower()\n\n#ignore words\nfor item in ignoreThese4:\n        words5=words5.replace(item, ' ') \n##CLOUD\nwordcloud5 = WordCloud(\n            width = 1000,\n            height = 1000,\n            background_color = 'black',\n            stopwords = STOPWORDS).generate(words5)\nfig = plt.figure(\n    figsize = (20, 10),\n    facecolor = 'k',\n    edgecolor = 'k')\nplt.imshow(wordcloud5, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","03fc9f2b":"# saving the Table (dataframe): \n#Study abstracts related to development in diagnostics\nDev.to_csv('Study_abstracts_on_diagnosticsADVANCES_development.csv')","f2f2d8be":"Adv=Diagnostics[Diagnostics['abstract'].str.contains('advances')]\nAdv.shape","df14835d":"# saving the Table (dataframe): \n#Study abstracts related to advances in diagnostics\nAdv.to_csv('Study_abstracts_on_diagnosticsADVANCES.csv')","8e34ca83":"Discover=Diagnostics[Diagnostics['abstract'].str.contains('discover')]\nDiscover.shape","c7154cad":"# saving the Table (dataframe): \n#Study abstracts related to diagnostics advances: Discover\nDiscover.to_csv('Study_abstracts_on_diagnosticsADVANCES_discover.csv')","298f5547":"Future=Diagnostics[Diagnostics['abstract'].str.contains('future')]\nFuture.shape","bb585471":"# saving the Table (dataframe): \n#Study abstracts related to diagnostics Future\nFuture.to_csv('Study_abstracts_on_diagnostics_Future.csv')","0d0eaa33":"findings=Diagnostics[Diagnostics['abstract'].str.contains('findings')]\nfindings.shape","54cf8074":"# saving the Table (dataframe): \n#Study abstracts related to diagnostics advances: findings\nfindings.to_csv('Study_abstracts_on_diagnosticsADVANCES_findings.csv')","09847685":"#to omit:\n## already defined symbols1 above\n##update words to ignore:\nignoreThese5=['background', 'abstract','our','this', 'words',\n             'the','objective','since','summary','name',\n              'commentary','study', 'object', 'dtypes',\n             'dtype','many', 'goal','web']\n\nfor char in symbols1:\n        words6=Dev['words'].replace(char,' ')\n#lower case all words\nwords6=str(words6)\nwords6=words6.lower()\n\n#ignore words\nfor item in ignoreThese5:\n        words6=words6.replace(item, ' ') \n##CLOUD\nwordcloud6 = WordCloud(\n            width = 1000,\n            height = 1000,\n            background_color = 'black',\n            stopwords = STOPWORDS).generate(words6)\nfig = plt.figure(\n    figsize = (20, 10),\n    facecolor = 'k',\n    edgecolor = 'k')\nplt.imshow(wordcloud6, interpolation = 'bilinear')\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","417a36e7":"**Task**:   \n\nCreate summary tables of diagnostics studies related to COVID-19.      \nSpecifically, what the literature reports about:   \n\n    What do we know about diagnostics and coronavirus?\n    New advances in diagnosing SARS-COV-2\n\nBy: Myrna M Figueroa Lopez","0dd3d9d9":"#### Second, studies report on diagnostics of COVID19.","0375a07f":"#### First, the basics of diagnostics related to COVID19.    \n\nIn the US...    \n    '**Viral tests** tells if you currently have an **infection with SARS-CoV-2, the virus that causes COVID-19.** A positive test result means you have an infection(CDC).' **RT-PCR tests** are widely used and may show the prevalence disease in a population (Johns Hopkins Center for Health Security).    \n        \n   '**Antibody blood tests** check your blood by looking for antibodies, which show if you had a previous infection with the virus(CDC).' **Serology tests** help better quantify the number of cases of COVID-19 to including asymptomatic and misdaignosed cases (Johns Hopkins Center for Health Security).   \n   **Types of serology assays** include: Rapid diagnostic test (RDT),Enzyme-linked immunosorbent assay (ELISA), Neutralization assay, and Chemiluminescent immunoassay (Johns Hopkins Center for Health Security).      \n\nSources:\n1. CDC. \nhttps:\/\/www.cdc.gov\/coronavirus\/2019-ncov\/cases-updates\/testing-in-us.html?CDC_AA_refVal=https%3A%2F%2Fwww.cdc.gov%2Fcoronavirus%2F2019-ncov%2Ftesting-in-us.html\n2. Johns Hopkins Center for Health Security.   \nhttps:\/\/www.centerforhealthsecurity.org\/resources\/COVID-19\/serology\/Serology-based-tests-for-COVID-19.html   \n","a895e462":"#### Third, advances in COVID19 diagnostics.","da2e86e8":"### Tables","086a7812":"#### WordCloud to visualize common terms in Diagnostics Studies"}}