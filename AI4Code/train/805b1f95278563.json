{"cell_type":{"8f1c7e15":"code","e92ad137":"code","1aa8e886":"code","cec52770":"code","579bd6ea":"code","a318a756":"code","1f2b007d":"code","6133e22e":"code","37c741ec":"code","0ec782a4":"code","ac1f156a":"code","d620822e":"code","a75167d1":"code","76291e8a":"code","385d14f7":"code","cce0a32b":"code","c96d7d92":"code","e80abcd3":"code","77875137":"code","a63183c2":"code","cc748a3a":"code","37f7c5cd":"code","1b4cc80c":"code","7a4aa026":"code","044fea82":"code","f034c7e7":"code","d5f06ea1":"code","8255c76f":"code","90e1afb1":"code","41301827":"code","721a07de":"markdown","fba1aeba":"markdown","b99bf8a8":"markdown","195ce379":"markdown","969f8c95":"markdown","5f7d3622":"markdown","fb9246a1":"markdown","78a4dcf5":"markdown","aeaf058c":"markdown","df8ee516":"markdown","9232a5a5":"markdown","e4c423c9":"markdown","673d2101":"markdown","7c761480":"markdown","63311bb8":"markdown","5a3d20e9":"markdown","92a99539":"markdown","59464059":"markdown","5f660fce":"markdown","ad5de4e6":"markdown","f5f9dff4":"markdown","18ad9554":"markdown","f96f4ba1":"markdown","3902e229":"markdown","86283ae7":"markdown","e0f1ae7b":"markdown","95d74322":"markdown"},"source":{"8f1c7e15":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\nimport warnings \nwarnings.filterwarnings(\"ignore\")","e92ad137":"data = pd.read_csv(\"..\/input\/Chicago_Crimes_2012_to_2017.csv\",error_bad_lines=False,warn_bad_lines=False)","1aa8e886":"data.info()","cec52770":"data_samples = data.sample(n=200000,random_state = 42)","579bd6ea":"data_samples.index = np.arange(0,len(data_samples))","a318a756":"data_samples.isna().sum()","1f2b007d":"data_samples.dropna(axis=0,inplace=True)","6133e22e":"data_samples.drop([\"Unnamed: 0\",\"Case Number\",\"Block\",\"IUCR\",\"FBI Code\",\"X Coordinate\",\"Y Coordinate\"],axis=1,inplace=True)","37c741ec":"data_samples.head()","0ec782a4":"LocDescList = data_samples[\"Location Description\"].unique()\nLocDescList2 = data_samples[\"Location Description\"]\nLocDescRatio = []\n\ncounted = Counter(LocDescList2) \nmostcommon = counted.most_common(10)\nx,y = zip(*mostcommon)\nx,y = list(x),list(y)\n# %% \nplt.figure(figsize = (20,8))\nax = sns.barplot(x = x , y = y, palette = sns.cubehelix_palette(len(x)))\nplt.xticks(rotation= 15)\nplt.xlabel(\"Location Description\")\nplt.ylabel(\"Crimes\")\nplt.title(\"Most common 10 crime places \")\nplt.show()","ac1f156a":"PrimaryType = data_samples[\"Primary Type\"]\nPrimaryTypeCounted = Counter(PrimaryType)\nMostCommonPT = PrimaryTypeCounted.most_common(10)\nx,y = zip(*MostCommonPT)\nx,y  = list(x),list(y)\n\n# %% \n\nplt.figure(figsize=(15,8))\nax = sns.barplot(x=x, y=y,palette = \"deep\")\nplt.xticks(rotation= 15)\nplt.xlabel(\"Primary Type\")\nplt.ylabel(\"Crimes\")\nplt.show()\n","d620822e":"Arrest = data_samples[\"Arrest\"]\nCountedArrest = Counter(Arrest)\nMostCommonCA = CountedArrest.most_common()\nx,y = zip(*MostCommonCA)\nx,y = list(x),list(y)\nx[1] = \"Arrested\"\nx[0] = \"Not Arrested\"\n# %% \nplt.figure(figsize=(10,4))\nsns.barplot(x = x , y = y , palette = \"dark\")\nplt.xlabel(\"Arresting\")\nplt.ylabel(\"Frequency\")\nplt.show()","a75167d1":"Crimes = data.iloc[:, 3: ]\nCrimes.head()","76291e8a":"Crimes.index = Crimes.Date\nCrimes.drop(\"Date\",axis=1,inplace=True)\n\nCrimes.index = pd.to_datetime(Crimes.index)","385d14f7":"CrimeCounts = pd.DataFrame(Crimes.groupby(\"Primary Type\").size().sort_values(ascending=False).rename(\"counter\").reset_index())","cce0a32b":"CrimeCounts.head()","c96d7d92":"f, ax = plt.subplots(figsize=(6, 15))\n\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=\"counter\", y=\"Primary Type\", data=CrimeCounts.iloc[:10, :],\n            label=\"Total\", palette=\"Blues_d\")\n\nax.legend(ncol=2, loc=\"lower right\", frameon=True)\nax.set(ylabel=\"Type\",\n       xlabel=\"Crimes\")\nsns.despine(left=True, bottom=True)\n\nplt.show()","e80abcd3":"crimes2012 = Crimes.loc[\"2012\"]\ncrimes2013 = Crimes.loc[\"2013\"]\ncrimes2014 = Crimes.loc[\"2014\"]\ncrimes2015 = Crimes.loc[\"2015\"]\ncrimes2016 = Crimes.loc[\"2016\"]","77875137":"crimes2012 = pd.DataFrame(crimes2012)\ncrimes2013 = pd.DataFrame(crimes2013)\ncrimes2014 = pd.DataFrame(crimes2014)\ncrimes2015 = pd.DataFrame(crimes2015)\ncrimes2016 = pd.DataFrame(crimes2016)","a63183c2":"theft_2012 = pd.DataFrame(crimes2012[crimes2012['Primary Type'].isin(['THEFT','BATTERY', 'CRIMINAL DAMAGE', 'NARCOTICS', 'ASSAULT'])]['Primary Type'])\ntheft_2013 = pd.DataFrame(crimes2013[crimes2013['Primary Type'].isin(['THEFT','BATTERY', 'CRIMINAL DAMAGE', 'NARCOTICS', 'ASSAULT'])]['Primary Type'])\ntheft_2014 = pd.DataFrame(crimes2014[crimes2014['Primary Type'].isin(['THEFT','BATTERY', 'CRIMINAL DAMAGE', 'NARCOTICS', 'ASSAULT'])]['Primary Type'])\ntheft_2015 = pd.DataFrame(crimes2015[crimes2015['Primary Type'].isin(['THEFT','BATTERY', 'CRIMINAL DAMAGE', 'NARCOTICS', 'ASSAULT'])]['Primary Type'])\ntheft_2016 = pd.DataFrame(crimes2016[crimes2016['Primary Type'].isin(['THEFT','BATTERY', 'CRIMINAL DAMAGE', 'NARCOTICS', 'ASSAULT'])]['Primary Type'])","cc748a3a":"grouper2012 = theft_2012.groupby([pd.TimeGrouper('M'), 'Primary Type'])\ngrouper2013 = theft_2013.groupby([pd.TimeGrouper('M'), 'Primary Type'])\ngrouper2014 = theft_2014.groupby([pd.TimeGrouper('M'), 'Primary Type'])\ngrouper2015 = theft_2015.groupby([pd.TimeGrouper('M'), 'Primary Type'])\ngrouper2016 = theft_2016.groupby([pd.TimeGrouper('M'), 'Primary Type'])","37f7c5cd":"data_2012 = grouper2012['Primary Type'].count().unstack()\ndata_2013 = grouper2013['Primary Type'].count().unstack()\ndata_2014 = grouper2014['Primary Type'].count().unstack()\ndata_2015 = grouper2015['Primary Type'].count().unstack()\ndata_2016 = grouper2016['Primary Type'].count().unstack()","1b4cc80c":"DataAll = pd.DataFrame()\nDataAll=DataAll.append([data_2012,data_2013,data_2014,data_2015,data_2016])","7a4aa026":"DataAll.plot()\nplt.show()","044fea82":"Crimes2 = pd.DataFrame(Crimes[Crimes['Location Description'].isin(['APARTMENT','RESIDENCE', 'STREET', 'SIDEWALK','OTHER','ALLEY','RESTAURANT','GAS STATION'])])\nCrimes2.head()","f034c7e7":"plt.figure(figsize=(8,10))\nCrimes2.groupby([Crimes2['Location Description']]).size().sort_values(ascending=True).plot(kind='barh')\nplt.title('Number of crimes by Location')\nplt.ylabel('Crime Location')\nplt.xlabel('Number of crimes')\nplt.show()","d5f06ea1":"import folium\n\nMapOfChicago = folium.Map(location=[41.881832, -87.623177],\n                         zoom_start=11)","8255c76f":"Crimes = Crimes.dropna()\nCrimes = Crimes.drop(columns=['Block', 'IUCR','Domestic', 'Beat', 'District', 'Ward','X Coordinate', 'Y Coordinate','Updated On', 'FBI Code'], axis = 1)","90e1afb1":"Crimes = Crimes[Crimes[\"Primary Type\"] == \"THEFT\"]\nlocations = Crimes.groupby('Community Area').first()\nnew_locations = locations.loc[:, ['Latitude', 'Longitude', 'Location Description', 'Arrest']]","41301827":"for i in range(len(new_locations)):\n    lat = new_locations.iloc[i][0]\n    long = new_locations.iloc[i][1]\n    popup_text = \"\"\"Community Index : {}<br>\n                Arrest : {}<br>\n                Location Description : {}<br>\"\"\"\n    popup_text = popup_text.format(new_locations.index[i],\n                               new_locations.iloc[i][-1],\n                               new_locations.iloc[i][-2]\n                               )\n    folium.CircleMarker(location = [lat, long], popup= popup_text, fill = True).add_to(MapOfChicago)\nMapOfChicago","721a07de":"<p id='3'><h2><b>Visualization of Most Common 10 Crime Places<\/b><\/h2><\/p>","fba1aeba":"<p id='2'><h2><b>Analyzing the Data<\/b><\/h2><\/p>","b99bf8a8":"\"Unnamed\",\"Case Number\",\"Block\",\"IUCR\",\"FBI Code\",\"X Coordinate\" and \"Y Coordinate\" columns are not necessary.  \nSo we will drop these columns.","195ce379":"<p id='8'><h2><b>Number of Crimes by Location<\/b><\/h2><\/p>","969f8c95":"<p id='1'><h2><b>Content of the Dataset<\/b><\/h2><\/p>\n<b>ID<\/b> - Unique identifier for the record.\n\n<b>Case Number<\/b> - The Chicago Police Department RD Number (Records Division Number), which is unique to the incident.\n\n<b>Date<\/b> - Date when the incident occurred. this is sometimes a best estimate.\n\n<b>Block<\/b> - The partially redacted address where the incident occurred, placing it on the same block as the actual address.\n\n<b>IUCR<\/b> - The Illinois Unifrom Crime Reporting code. This is directly linked to the Primary Type and Description.\n\n<b>Primary Type<\/b> - The primary description of the IUCR code.\n\n<b>Description<\/b> - The secondary description of the IUCR code, a subcategory of the primary description.\n\n<b>Location Description<\/b> - Description of the location where the incident occurred.\n\n<b>Arrest<\/b> - Indicates whether an arrest was made.\n\n<b>Domestic<\/b> - Indicates whether the incident was domestic-related as defined by the Illinois Domestic Violence Act.\n\n<b>Beat<\/b> - Indicates the beat where the incident occurred. A beat is the smallest police geographic area \u2013 each beat has a dedicated police beat car. Three to five beats make up a police sector, and three sectors make up a police district. The Chicago Police Department has 22 police districts.\n\n<b>District<\/b> - Indicates the police district where the incident occurred.\n\n<b>Ward<\/b> - The ward (City Council district) where the incident occurred.\n\n<b>Community Area<\/b> - Indicates the community area where the incident occurred. Chicago has 77 community areas.\n\n<b>FBI Code<\/b> - Indicates the crime classification as outlined in the FBI's National Incident-Based Reporting System (NIBRS).\n\n<b>X Coordinate<\/b> - The x coordinate of the location where the incident occurred in State Plane Illinois East NAD 1983 projection. This location is shifted from the actual location for partial redaction but falls on the same block.\n\n<b>Y Coordinate<\/b> - The y coordinate of the location where the incident occurred in State Plane Illinois East NAD 1983 projection. This location is shifted from the actual location for partial redaction but falls on the same block.\n\n<b>Year<\/b> - Year the incident occurred.\n\n<b>Updated On<\/b> - Date and time the record was last updated.\n\n<b>Latitude<\/b> - The latitude of the location where the incident occurred. This location is shifted from the actual location for partial redaction but falls on the same block.\n\n<b>Longitude<\/b> - The longitude of the location where the incident occurred. This location is shifted from the actual location for partial redaction but falls on the same block.\n\n<b>Location<\/b> - The location where the incident occurred in a format that allows for creation of maps and other geographic operations on this data portal. This location is shifted from the actual location for partial redaction but falls on the same block.","5f7d3622":"Looking for Location Descriptions to detect where the most event happened.  \nVisualization of bar plot.  \nUsing of zip() method.","fb9246a1":"<p id='11'><h2><b>References<\/b><\/h2><\/p>\n\nhttps:\/\/www.kaggle.com\/djonafegnem\/chicago-crime-data-analysis\n\nhttps:\/\/www.kaggle.com\/fahd09\/eda-of-crime-in-chicago-2005-2016\n\nhttps:\/\/www.kaggle.com\/uds5501\/chicago-crime-mapping","78a4dcf5":"I have got help from another kernel to plotting this map.  \nFirst we import folium library to create map.  \nUsing of as below (if you want to create a map you want to create you can write google for ex. Location of Miami).","aeaf058c":"<p id='7'><h2><b>Plotting Primary Types Until 2012 to 2017<\/b><\/h2><\/p>","df8ee516":"Plotting top 10 crimes","9232a5a5":"> <h1><b>TABLE OF CONTENTS<\/b><\/h1>\n<ul>\n    <a href='#1'><li>Content of the Dataset<\/li><\/a>\n    <a href='#2'><li>Analyzing the Data<\/li><\/a>\n    <a href='#3'><li>Visualization of Most Common 10 Crime Places<\/li><\/a>\n    <a href='#4'><li>Visualization of Primary Types<\/li><\/a>\n    <a href='#5'><li>Visualization of Comparing Arrested or Not<\/li><\/a>\n    <a href='#6'><li>Visualization of Primary Types with Bar Plot<\/li><\/a>\n    <a href='#7'><li>Plotting Primary Types Until 2012 to 2017<\/li><\/a>\n    <a href='#8'><li>Number of Crimes by Location<\/li><\/a>\n    <a href='#9'><li>Mapping Theft Crime Locations<\/li><\/a>\n    <a href='#10'><li>Conclusion<\/li><\/a>\n    <a href='#11'><li>References<\/li><\/a>\n<\/ul>","e4c423c9":"<p id='4'><h2><b>Visualization of Primary Types<\/b><\/h2><\/p>","673d2101":"In this dataset we have 1.456.714 samples so it is hard for cpu to use all of the samples.  \nTherefore, we will use random 200.000 samples","7c761480":"First row we select only THEFT Primary Type.  \nWith groupby we sort unique values of the selected column.","63311bb8":"<p id='10'><h2><b>Conclusion<\/b><\/h2><\/p>\nIn this dataset we looked at Crimes in Chicago.\n\nWe have learned : \n* How we can plot a map with folium,\n* How to use groupby method and some plotting tools. \n\nIf you like, please upvote! ","5a3d20e9":"We select THEFT BATTERY ... in Primary Type, and we send those rows into theft_2012 ... ","92a99539":"Making DataFrame.","59464059":".isna() method is used to know how many NaN value we have and where the values are.","5f660fce":"We will plot Crimes month by month from 2012 to 2017","ad5de4e6":"First as always we import libraries.  \nReading csv file.  \nInformation about data.","f5f9dff4":"We look how many of them arrested and not arrested.","18ad9554":"<p id='6'><h2><b>Visualization of Primary Types with Bar Plot<\/b><\/h2><\/p>","f96f4ba1":"In this visualization we will see most common 10 primary types, associated with crimes.","3902e229":"<p id='5'><h2><b>Visualization of Comparing Arrested or Not<\/b><\/h2><\/p>","86283ae7":"* Sorting index with numpy.\n* Looking for summation of NaN values.\n* Cleaning the NaN values.","e0f1ae7b":"<p id='9'><h2><b>Mapping Theft Crime Locations<\/b><\/h2><\/p>","95d74322":"Dropping NaN values."}}