{"cell_type":{"875a9e3f":"code","a17d92d0":"code","0dc74bcc":"code","1aaed8c5":"code","7b8eacfb":"code","ea356f0b":"code","bafeb930":"code","403879b1":"code","aa52d7da":"code","8b0687ba":"code","76cc45cd":"code","868ba83a":"code","1d9bd695":"code","cb46e3bf":"code","3f9d7929":"code","b06e8863":"code","13f997d2":"code","8cd365c7":"code","c57c8b6d":"code","2ca6ff90":"code","f17a1826":"code","5576a72d":"code","c0f00499":"markdown"},"source":{"875a9e3f":"import pandas as pd\ndf=pd.read_csv('..\/input\/hotel-booking-demand\/hotel_bookings.csv')\ndf.head()","a17d92d0":"df.describe()","0dc74bcc":"#checking NA's in dataframe\ndf.isna().sum()","1aaed8c5":"df=df.drop(['company'],axis=1)\n\n","7b8eacfb":"for col in ['country','agent','children']:\n    df[col].fillna(df[col].mode()[0],inplace=True)","ea356f0b":"df.isna().sum()","bafeb930":"df.info()","403879b1":"from sklearn import preprocessing \ndff=df.apply(preprocessing.LabelEncoder().fit_transform)\ndff","aa52d7da":"from sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\nfrom sklearn.metrics import r2_score\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.ensemble import RandomForestRegressor \nfrom sklearn.ensemble import AdaBoostRegressor","8b0687ba":"X = dff.drop(['is_canceled'], axis = 1)\ny = dff['is_canceled']","76cc45cd":"dff['is_canceled'].unique()","868ba83a":"from sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","1d9bd695":"logreg = LogisticRegression(solver = 'lbfgs')\n# fit the model with data\nlogreg.fit(X_train,y_train)\ny_pred=logreg.predict(X_test)\n\nprint('Mean Absolute Error_logreg:', metrics.mean_absolute_error(y_test, y_pred).round(3))  \nprint('Mean Squared Error_logreg:', metrics.mean_squared_error(y_test, y_pred).round(3))  \nprint('Root Mean Squared Error_logreg:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)).round(3))\nprint('r2_score_logreg:', r2_score(y_test, y_pred).round(3))\n","cb46e3bf":"import matplotlib.pyplot as plt\ncon=confusion_matrix(y_test, y_pred)\nprint(con)\nacc=accuracy_score(y_test, y_pred)\nprint(acc)\n\nimport seaborn as sns\nax= plt.subplot()\nsns.heatmap(con, annot=True, ax = ax,fmt='g',cmap='gist_rainbow'); ","3f9d7929":"import pandas as pd  \nimport numpy as np  \nimport matplotlib.pyplot as plt  \nimport seaborn as seabornInstance \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\n%matplotlib inline\npre = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\npre\n","b06e8863":"import chart_studio.plotly as py\n#import chart_studio.graph_objs as go\nfrom plotly import graph_objs as go\nfrom plotly.offline import iplot, init_notebook_mode\n# Using plotly + cufflinks in offline mode\nimport cufflinks\ncufflinks.go_offline(connected=True)\ninit_notebook_mode(connected=True)","13f997d2":"df['country'].iplot(kind='hist', xTitle='month',\n                  yTitle='count', title='Arrivals in a year',colors='Blue')","8cd365c7":"df.groupby(['arrival_date_month','arrival_date_year'])['children', 'babies','adults'].sum().plot.bar(figsize=(15,5))\n","c57c8b6d":"plt.figure(figsize=(15,5))\nsns.lineplot(x= 'arrival_date_month', y = 'lead_time', data = df)","2ca6ff90":"df_ct=dff['customer_type'].unique()","f17a1826":"df['customer_type'].unique()","5576a72d":"explode = (0, 0.1, 0, 0)\n\nlabels = ['Transient', 'Contract', 'Transient-Party', 'Group']\ncolors = ['#ff9999','#66b3ff','#99ff99','#ffcc99']\nfig1, ax1 = plt.subplots()\nax1.pie(df_ct, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.tight_layout()\nplt.show()\n","c0f00499":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session"}}