{"cell_type":{"a7bb4a7f":"code","f7905916":"code","e7e1ebbc":"code","0a4d2e25":"code","e12aa690":"code","f3e99c02":"code","27faf4f0":"code","9067a00b":"code","a18a03b2":"code","bcfb6cdc":"code","adc2034a":"code","9b3d6c46":"code","2eb63d63":"code","78f7dcaa":"code","1a81fcd6":"code","be902ed6":"code","4b895a1b":"code","754ee4bc":"code","f1cde9fa":"code","0acd81c8":"code","801501b5":"code","d9dad7ed":"code","5fddbde4":"code","8968b54b":"code","6d5e4a7e":"code","70d2491b":"code","38c5ae88":"code","c768f2d3":"code","a05b1b8e":"markdown","994bf902":"markdown","6a92d257":"markdown","27b4a523":"markdown","d4dab048":"markdown","8ba5af70":"markdown","badbcd99":"markdown","7df1acb3":"markdown","80501817":"markdown","7bbd69e8":"markdown","2dd27dd9":"markdown","1ad8b29e":"markdown","914ebd2e":"markdown","355db12a":"markdown","236d744f":"markdown","0c6feb31":"markdown","ac482833":"markdown"},"source":{"a7bb4a7f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nfrom collections import Counter","f7905916":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e7e1ebbc":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\nIDtest = test[\"PassengerId\"]","0a4d2e25":"train_len = len(train)\ndataset =  pd.concat(objs=[train, test], axis=0).reset_index(drop=True)","e12aa690":"# Fill empty and NaNs values with NaN\ndataset = dataset.fillna(np.nan)\n\n# Check for Null values\ndataset.isnull().sum()\n","f3e99c02":"train.info()\ntrain.isnull().sum()","27faf4f0":"train.head()","9067a00b":"# Summarie and statistics\ntrain.describe()","a18a03b2":"g = sns.heatmap(train[[\"Survived\",\"SibSp\",\"Parch\",\"Age\",\"Fare\"]].corr(),annot=True, fmt = \".2f\", cmap = \"coolwarm\")","bcfb6cdc":"\ng = sns.factorplot(x=\"SibSp\",y=\"Survived\",data=train,kind=\"bar\", size = 6 , palette = \"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")","adc2034a":"\ng  = sns.factorplot(x=\"Parch\",y=\"Survived\",data=train,kind=\"bar\", size = 6 , \npalette = \"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")","9b3d6c46":"\ng = sns.FacetGrid(train, col='Survived')\ng = g.map(sns.distplot, \"Age\")","2eb63d63":"\ng = sns.kdeplot(train[\"Age\"][(train[\"Survived\"] == 0) & (train[\"Age\"].notnull())], color=\"Red\", shade = True)\ng = sns.kdeplot(train[\"Age\"][(train[\"Survived\"] == 1) & (train[\"Age\"].notnull())], ax =g, color=\"Blue\", shade= True)\ng.set_xlabel(\"Age\")\ng.set_ylabel(\"Frequency\")\ng = g.legend([\"Not Survived\",\"Survived\"])","78f7dcaa":"dataset[\"Fare\"].isnull().sum()","1a81fcd6":"\ndataset[\"Fare\"] = dataset[\"Fare\"].fillna(dataset[\"Fare\"].median())","be902ed6":"\ng = sns.distplot(dataset[\"Fare\"], color=\"m\", label=\"Skewness : %.2f\"%(dataset[\"Fare\"].skew()))\ng = g.legend(loc=\"best\")","4b895a1b":"\ndataset[\"Fare\"] = dataset[\"Fare\"].map(lambda i: np.log(i) if i > 0 else 0)","754ee4bc":"g = sns.distplot(dataset[\"Fare\"], color=\"b\", label=\"Skewness : %.2f\"%(dataset[\"Fare\"].skew()))\ng = g.legend(loc=\"best\")","f1cde9fa":"g = sns.barplot(x=\"Sex\",y=\"Survived\",data=train)\ng = g.set_ylabel(\"Survival Probability\")","0acd81c8":"train[[\"Sex\",\"Survived\"]].groupby('Sex').mean()","801501b5":"\ng = sns.factorplot(x=\"Pclass\",y=\"Survived\",data=train,kind=\"bar\", size = 6 , \npalette = \"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")","d9dad7ed":"\ng = sns.factorplot(x=\"Pclass\", y=\"Survived\", hue=\"Sex\", data=train,\n                   size=6, kind=\"bar\", palette=\"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")","5fddbde4":"dataset[\"Embarked\"].isnull().sum()","8968b54b":"\ndataset[\"Embarked\"] = dataset[\"Embarked\"].fillna(\"S\")","6d5e4a7e":" \ng = sns.factorplot(x=\"Embarked\", y=\"Survived\",  data=train,\n                   size=6, kind=\"bar\", palette=\"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")","70d2491b":" \ng = sns.factorplot(\"Pclass\", col=\"Embarked\",  data=train,\n                   size=6, kind=\"count\", palette=\"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"Count\")","38c5ae88":"\ndataset[\"Sex\"] = dataset[\"Sex\"].map({\"male\": 0, \"female\":1})","c768f2d3":"g = sns.heatmap(dataset[[\"Age\",\"Sex\",\"SibSp\",\"Parch\",\"Pclass\"]].corr(),cmap=\"BrBG\",annot=True)","a05b1b8e":"# Explore Pclass vs Survived","994bf902":"# Explore Embarked vs Survived","6a92d257":"# Explore Age vs Survived","27b4a523":"# Explore Fare distribution ","d4dab048":"# Data Visualization\n","8ba5af70":"Age and Cabin features have an important part of missing values.\n\nSurvived missing values correspond to the join testing dataset (Survived column doesn't exist in test set and has been replace by NaN values when concatenating the train and test set)","badbcd99":"# Explore Pclass vs Embarked","7df1acb3":"# Apply log to Fare to reduce skewness distribution","80501817":"# Explore Parch feature vs Survived","7bbd69e8":"Fill Fare missing values with the median value","2dd27dd9":"Categorical values","1ad8b29e":"# Explore Pclass vs Survived by Sex","914ebd2e":"# Explore SibSp feature vs Survived","355db12a":"The correlation map confirms the factorplots observations except for Parch. Age is not correlated with Sex, but is negatively correlated with Pclass, Parch and SibSp.","236d744f":"# Explore Age distibution ","0c6feb31":"#Fill Embarked nan values of dataset set with 'S' most frequent value","ac482833":"convert Sex into categorical value 0 for male and 1 for female"}}