{"cell_type":{"293fd7ad":"code","142364f3":"code","acb56139":"code","9fec7c1a":"code","6bf687f7":"code","dd5e90a0":"code","b10c01d4":"code","c77d8224":"code","89f98682":"code","f5576903":"code","6afbaef7":"code","9b3a7bd3":"code","d24943f9":"code","9fd7b330":"code","7f2c24b5":"code","b6f3ab37":"code","112d5779":"code","b8bf4ead":"code","7c67fc7b":"code","322cf112":"code","26c68c67":"code","fb450f20":"code","74a808b1":"code","4fa93e94":"code","b2a4fe8e":"code","1a399037":"code","a8ea04d9":"code","faec73d4":"code","66b86625":"code","b6a88250":"code","784ff848":"code","8bf2ca7c":"code","c2671df3":"code","1f9387fe":"code","45ae0cb2":"code","728be107":"code","d2d197d1":"code","239d2b08":"code","36a67d1b":"code","a51047ab":"code","651dfb49":"code","56ede04b":"code","abfec9d3":"code","c9bfeda4":"code","deafbbc6":"code","61855c30":"code","5aba0a6c":"markdown","ede28121":"markdown","5c0c862d":"markdown","4d3c0429":"markdown","7662989d":"markdown","8058e326":"markdown","f115c3b1":"markdown","68904a08":"markdown","c7e922d0":"markdown"},"source":{"293fd7ad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","142364f3":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","acb56139":"from fastai import *\nfrom fastai.vision import *\nimport torch","9fec7c1a":"path = Path('..\/input\/aptos2019-blindness-detection')\npath_train = path\/'train_images'\npath_test = path\/'test_images'\npath, path_train, path_test","6bf687f7":"labels = pd.read_csv(path\/'train.csv')\nlabels.head()","dd5e90a0":"img = open_image(path_train\/'000c1434d8d7.png')\nimg.show(figsize = (7,7))\nprint(img.shape)","b10c01d4":"# Distribution of the 5 diagnosis categories\nlabels['diagnosis'].value_counts().plot(kind = 'bar', title='Distribution of diagnosis categories')\nplt.show()","c77d8224":"# Apply data augmentation to the images\ntfms = get_transforms(\n    do_flip=True,\n    flip_vert=True,\n    max_warp=0.1,\n    max_rotate=360.,\n    max_zoom=1.1,\n    max_lighting=0.1,\n    p_lighting=0.5\n)","89f98682":"# Applying aptos19 normalization and standard deviation stats, from a pre-trained model found on a kaggle kernel\naptos19_stats = ([0.42, 0.22, 0.075], [0.27, 0.15, 0.081])","f5576903":"test_labels = pd.read_csv(path\/'sample_submission.csv')\ntest = ImageList.from_df(test_labels, path = path_test, suffix = '.png')","6afbaef7":"src = (ImageList.from_df(labels, path = path_train, suffix = '.png')\n       .split_by_rand_pct(seed = 42)\n       .label_from_df(cols = 'diagnosis')\n       .add_test(test))","9b3a7bd3":"data = (\n    src.transform(\n        tfms,\n        size = 512, \n        resize_method=ResizeMethod.SQUISH,\n        padding_mode='zeros'\n    )\n    .databunch(bs=8)\n    .normalize(aptos19_stats))","d24943f9":"data","9fd7b330":"data.show_batch(3, figsize = (7,7))","7f2c24b5":"print(data.classes)\nprint(len(data.train_ds))\nprint(len(data.valid_ds))\nprint(len(data.test_ds))","b6f3ab37":"!mkdir -p \/tmp\/.cache\/torch\/checkpoints\n!cp ..\/input\/resnet34\/resnet34.pth \/tmp\/.cache\/torch\/checkpoints\/resnet34-333f7ec4.pth\n!cp ..\/input\/resnet152\/resnet152.pth \/tmp\/.cache\/torch\/checkpoints\/resnet152-b121ed2d.pth","112d5779":"kappa = KappaScore()\nkappa.weights = \"quadratic\"","b8bf4ead":"learn = cnn_learner(\n    data, \n    models.resnet152, \n    metrics = [accuracy, kappa], \n    model_dir = Path('..\/kaggle\/working'),\n    path = Path(\".\")\n)","7c67fc7b":"learn.fit_one_cycle(3)","322cf112":"learn.save('resnet152-1')","26c68c67":"learn.load('resnet152-1');","fb450f20":"learn.unfreeze()","74a808b1":"learn.lr_find()\nlearn.recorder.plot()","4fa93e94":"learn.fit_one_cycle(3, slice(1e-6,1e-5))","b2a4fe8e":"learn.save('resnet152-2')","1a399037":"learn.load('resnet152-2');","a8ea04d9":"# learn.export()","faec73d4":"data = (\n    src.transform(\n        tfms,\n        size = 1024, \n        resize_method=ResizeMethod.SQUISH,\n        padding_mode='zeros'\n    )\n    .databunch(bs=4)\n    .normalize(aptos19_stats))","66b86625":"learn.data = data","b6a88250":"learn.freeze()","784ff848":"learn.lr_find()\nlearn.recorder.plot()","8bf2ca7c":"learn.fit_one_cycle(4, 2e-4)","c2671df3":"learn.save('resnet152-3')","1f9387fe":"learn.load('resnet152-3');","45ae0cb2":"learn.unfreeze()","728be107":"learn.lr_find()\nlearn.recorder.plot()","d2d197d1":"learn.fit_one_cycle(6, 2e-5)","239d2b08":"learn.save('resnet152-4')","36a67d1b":"learn.load('resnet152-4');","a51047ab":"learn.load('resnet152-4');","651dfb49":"preds, _ = learn.get_preds(ds_type=DatasetType.Test)","56ede04b":"submission = pd.read_csv(path\/'sample_submission.csv')\nsubmission.head()","abfec9d3":"preds = np.array(preds.argmax(1)).astype(int).tolist()\npreds[:5]","c9bfeda4":"submission['diagnosis'] = preds\nsubmission.head()","deafbbc6":"import warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)","61855c30":"submission.to_csv('submission.csv', index = False)","5aba0a6c":"The non-uniform distribution of data in our training set can be easily observed","ede28121":"### Setting up the Model","5c0c862d":"### Fast AI setup","4d3c0429":"### Get Predictions","7662989d":"### Double the size of images","8058e326":"### Creating a DataBunch","f115c3b1":"### Unfreeze and Learn some more","68904a08":"### First look at the Data","c7e922d0":"### Preparing Submission"}}