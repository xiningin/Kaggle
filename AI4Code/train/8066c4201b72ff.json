{"cell_type":{"bae0665f":"code","27ec7398":"code","47850d8f":"code","4c4ee938":"code","ad1c7f08":"code","6a529412":"code","d9472c61":"code","1f303bad":"code","7bf06833":"code","2e601914":"code","20ba58ec":"code","3154cc99":"code","560461f3":"code","b5ecee10":"code","171e113a":"code","a71fd17b":"code","64c3a80b":"code","1659ecac":"code","22cc5a1d":"code","84e8cf68":"code","cd197286":"code","27bac597":"code","3bf6f189":"code","02f56822":"code","ff4ea99e":"code","13c3c165":"code","8de48251":"code","d4f4d820":"code","81350241":"code","81d4d183":"code","31cf652a":"code","2aa07826":"code","7f1a0244":"code","eb24c171":"code","0f7e3e34":"markdown","fa19e664":"markdown","3bb7086c":"markdown","e1d06e4f":"markdown","97e062ff":"markdown","f346e544":"markdown","e6f043b8":"markdown","d841532a":"markdown","151311ca":"markdown","54d2ed07":"markdown","e1b218ba":"markdown","cb3ff347":"markdown","b8e287b7":"markdown","3e8511f6":"markdown","3ba8f363":"markdown","7804b6bb":"markdown","9243c4a5":"markdown","0e3d983c":"markdown","e4972485":"markdown"},"source":{"bae0665f":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud","27ec7398":"#Importing dataset\ndf = pd.read_csv(\"..\/input\/womens-ecommerce-clothing-reviews\/Womens Clothing E-Commerce Reviews.csv\", index_col=0)","47850d8f":"df.head(10)","4c4ee938":"pd.DataFrame.info(df)","ad1c7f08":"reviewsDf = df[[\"Rating\",\"Review Text\"]]","6a529412":"reviewsDf.head()","d9472c61":"pd.DataFrame.info(reviewsDf)","1f303bad":"reviewsDf = reviewsDf.dropna(subset=['Review Text'])","7bf06833":"reviewsDf.index = pd.Series(list(range(reviewsDf.shape[0])))","2e601914":"reviewsDf.head()","20ba58ec":"rev = reviewsDf['Review Text']\n\nplt.subplots(figsize=(15,4))\nwordcloud = WordCloud(background_color='white', width=900, height=300).generate(\" \".join(rev))\nplt.imshow(wordcloud)\nplt.title('Words from Reviews\\n',size=20)\nplt.axis('off')\nplt.show()","3154cc99":"#Removing stop words.\nfrom nltk.corpus import stopwords\nfrom nltk.tokenize import RegexpTokenizer\nimport nltk\nfrom nltk.corpus import wordnet\nfrom nltk.stem import WordNetLemmatizer\n!pip install nltk --upgrade\nnltk.download('wordnet')\n\nsw = set(stopwords.words('english'))\n\ndef preproc(data):\n    #converting all to lowercase\n    data = data.lower() \n    #Tokenize\n    words = RegexpTokenizer(r'[a-z]+').tokenize(data)\n    #Deleting stopwords\n    words = [w for w in words if not w in sw]\n    \n    #Lemmatizing\n    for pos in [wordnet.NOUN, wordnet.VERB, wordnet.ADJ, wordnet.ADV]:\n        words = [WordNetLemmatizer().lemmatize(x, pos) for x in words]\n    return \" \".join(words)","560461f3":"reviewsDf['New Text'] = reviewsDf['Review Text'].apply(preproc)","b5ecee10":"reviewsDf.head()","171e113a":"def polarity (row):\n  if row['Rating'] >= 4:\n    return 'Positive'\n  if row['Rating'] == 3:\n    return 'Neutral'\n  if row['Rating'] <= 2:\n    return 'Negative'\n\nreviewsDf['Class'] = reviewsDf.apply(lambda row: polarity(row), axis=1)","a71fd17b":"reviewsDf.head()","64c3a80b":"text, classe = reviewsDf[\"New Text\"], reviewsDf[\"Class\"]","1659ecac":"text","22cc5a1d":"classe","84e8cf68":"train_text = text[:16980]\ntest_text = text[16981:22640]\ntrain_classe = classe[:16980]\ntest_classe = classe[16981:22640]","cd197286":"#Feature extraction\n\nfrom sklearn.feature_extraction.text import CountVectorizer\ncount_vect = CountVectorizer(encoding='latin-1')\nX_train_counts = count_vect.fit_transform(train_text)\nX_train_counts.shape","27bac597":"count_vect.vocabulary_.get('dress')","3bf6f189":"from sklearn.feature_extraction.text import TfidfTransformer\ntfidf_transformer = TfidfTransformer(use_idf=True)\nX_train_tfidf = tfidf_transformer.fit_transform(X_train_counts)\nX_train_tfidf.shape","02f56822":"from sklearn.naive_bayes import MultinomialNB\nclf = MultinomialNB().fit(X_train_tfidf, train_classe)","ff4ea99e":"from sklearn.metrics import accuracy_score\nX_test_counts = count_vect.transform(test_text)\nX_test_tfidf = tfidf_transformer.transform(X_test_counts)\npredito = clf.predict(X_test_tfidf)\ngaussian_acc = accuracy_score(test_classe, predito)\nprint(gaussian_acc)","13c3c165":"from sklearn.ensemble import RandomForestClassifier\n\nran = RandomForestClassifier(n_estimators=50)\nran.fit(X_train_tfidf, train_classe)","8de48251":"#Accuracy score\nX_test_counts = count_vect.transform(test_text)\nX_test_tfidf = tfidf_transformer.transform(X_test_counts)\npredito = ran.predict(X_test_tfidf)\nran_acc = accuracy_score(test_classe, predito)\nprint(ran_acc)","d4f4d820":"from sklearn.svm import SVC\n\nsvm = SVC()\nsvm.fit(X_train_tfidf, train_classe)","81350241":"#Accuracy score\n\nX_test_counts = count_vect.transform(test_text)\nX_test_tfidf = tfidf_transformer.transform(X_test_counts)\npredito = svm.predict(X_test_tfidf)\nsvm_acc = accuracy_score(test_classe, predito)\nprint(svm_acc)","81d4d183":"from sklearn.neural_network import MLPClassifier\n\nnn = MLPClassifier()\nnn.fit(X_train_tfidf, train_classe)","31cf652a":"#Accuracy score\n\nX_test_counts = count_vect.transform(test_text)\nX_test_tfidf = tfidf_transformer.transform(X_test_counts)\npredito = nn.predict(X_test_tfidf)\nnn_acc = accuracy_score(test_classe, predito)\nprint(nn_acc)","2aa07826":"from sklearn.linear_model import LogisticRegression\n\nlr = LogisticRegression()\nlr.fit(X_train_tfidf, train_classe)","7f1a0244":"#Accuracy score\n\nX_test_counts = count_vect.transform(test_text)\nX_test_tfidf = tfidf_transformer.transform(X_test_counts)\npredito = lr.predict(X_test_tfidf)\nlr_acc = accuracy_score(test_classe, predito)\nprint(lr_acc)","eb24c171":"models = pd.DataFrame({\n    'Model': ['Support Vector Machines', 'Logistic Regression', \n              'Random Forest', 'Naive Bayes', 'Neural Network'],\n    'Score': [svm_acc, lr_acc, \n              ran_acc, gaussian_acc, nn_acc]})\nmodels.sort_values(by='Score', ascending=False)","0f7e3e34":"The dataset has 10 columns and 23486 rows. Some features has null values.","fa19e664":"**Preprocessing our data.**","3bb7086c":"We can see that \"top\", \"love\", \"dress\" and \"shirt\" is very used on the reviews.","e1d06e4f":"We will begin importing some libraries and then, show some dataset information.","97e062ff":"Support Vector Machine","f346e544":"Naive Bayes.","e6f043b8":"**Processing TD-IDF Matrix**","d841532a":"Logistic Regression.","151311ca":"**Creating the sentiment classifier.\n**\n\nWe will create a new column that will consider the ratings as follows:\n\nRating 4 or higher: Positive\nrating 3: Neutral\nRating 2 or less: Negative\n","54d2ed07":"Plotting the wordclouds.","e1b218ba":"The ranking bellow show us that Logistic Regression was the most accurate model and Support Vector Machines was the worse.","cb3ff347":"The updated dataset:","b8e287b7":"Now we will extract the features that we will explore.","3e8511f6":"Deleting rows with null values.","3ba8f363":"Random Forest.","7804b6bb":"Resetting index.","9243c4a5":"Neural network.","0e3d983c":"In this kernel, We will make sentiment analysis using the reviews text.","e4972485":"Creating train and test base."}}