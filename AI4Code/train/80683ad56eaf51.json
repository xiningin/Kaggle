{"cell_type":{"372e9001":"code","be4ebe68":"code","ab972519":"code","afe888a2":"code","31be34a0":"code","092cfbae":"code","2ab19a2a":"code","fc1d3c09":"code","bb345cac":"code","2f3d6a50":"code","41c07346":"code","2b9109f3":"code","d03d1406":"code","bce50817":"code","0febff93":"code","e030ceb2":"code","22a84547":"code","38666970":"code","dcc0d8a0":"code","eb3b8a64":"code","cf360a22":"code","dbb0a87f":"code","18eb4513":"code","b7aa9678":"code","3a55ef87":"code","1d234c8b":"code","a250d74a":"code","f0c52db1":"code","2c68780d":"code","0cf3285d":"code","9e2ac321":"code","09ec21dc":"code","5603818c":"code","a7f532c8":"code","fdbb2315":"code","b73ba63c":"code","53d41dde":"code","063f037d":"code","e0d74c69":"code","46a7e0fe":"code","d87b89ed":"code","73e4e946":"code","a2b633ee":"code","3e802fce":"code","d2da2d5f":"code","c831d169":"code","624377c3":"code","908b04b1":"code","a38e3e42":"code","51d7dca3":"code","7aa5ba2a":"code","40bfa817":"code","c1dad357":"markdown","d240b4c9":"markdown","10650c95":"markdown","745431b5":"markdown","398c6be5":"markdown","295bb975":"markdown","d9a8049c":"markdown"},"source":{"372e9001":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","be4ebe68":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","ab972519":"# pclass de\u011fi\u015fimi model sonras\u0131 yap (sonu\u00e7lar\u0131 kontrol et)\n#one hot encoder ile sex de\u011fi\u015fkenine bak","afe888a2":"# here we are loading train data \ndf_train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")","31be34a0":"df=df_train.copy()","092cfbae":"df.head(5)","2ab19a2a":"df.info()","fc1d3c09":"df.isnull().sum()","bb345cac":"#plt.figure(figsize=(10,8))\nsns.distplot(df.Age, color=\"blue\")","2f3d6a50":"# Age de\u011fi\u015fkeni normale yak\u0131n da\u011f\u0131l\u0131m g\u00f6sterdi\u011fi i\u00e7in eksik verileri mean ile dolduraca\u011f\u0131z.\ndf[\"Age\"].fillna(df[\"Age\"].mean(),inplace=True)","41c07346":"df.isnull().sum()","2b9109f3":"#Cabin'in doldurulmas\u0131na gerek yoktur. \u00c7\u00fcnk\u00fc anlaml\u0131 bir de\u011fi\u015fken de\u011fildir.\ndf.Cabin.value_counts()","d03d1406":"df[\"Embarked\"].mode()","bce50817":"df[\"Embarked\"].mode()[0]","0febff93":"#embarked de\u011fi\u015fkeni kategorik oldu\u011fu i\u00e7in mode ile dolduruldu. mode()[0] = \"S\"\ndf[\"Embarked\"].fillna(df[\"Embarked\"].mode()[0],inplace=True)","e030ceb2":"num_cols=df[[\"Age\",\"SibSp\",\"Fare\",\"Parch\"]]","22a84547":"import matplotlib.pyplot as plt\ncorr=num_cols.corr()\nplt.figure(figsize=(8, 8))\nsns.heatmap(corr, vmax=.8, linewidths=0.05,square=True,annot=True,linecolor=\"pink\")","38666970":"korelasyon=df[[\"Age\",\"SibSp\",\"Fare\",\"Parch\",\"Survived\"]]","dcc0d8a0":"import matplotlib.pyplot as plt\ncorr=korelasyon.corr()\nplt.figure(figsize=(8, 8))\nsns.heatmap(corr, vmax=.8, linewidths=0.05,square=True,annot=True,linecolor=\"pink\")","eb3b8a64":"cat_cols=df[[\"Survived\",\"Pclass\",\"Sex\",\"Embarked\"]]","cf360a22":"cat_cols.head(5)","dbb0a87f":"#kategorik de\u011fi\u015fkenlerin say\u0131salla\u015ft\u0131r\u0131lmas\u0131","18eb4513":"map_new = {\"male\":0, \"female\":1}\ncat_cols[\"Sex\"]= cat_cols[\"Sex\"].map(map_new)","b7aa9678":"cat_cols.head(5)","3a55ef87":"from sklearn import preprocessing \nlbe= preprocessing.LabelEncoder()\n\ncat_cols[\"Sex\"]= lbe.fit_transform(df[\"Sex\"])","1d234c8b":"cat_cols=pd.get_dummies(cat_cols, columns = [\"Embarked\"], prefix = [\"Embarked\"])","a250d74a":"cat_cols","f0c52db1":"#num_cols + cat_cols\n\ndf= pd.concat([num_cols,cat_cols],axis=1)","2c68780d":"df.info()","0cf3285d":"from sklearn.model_selection import train_test_split\n\ny=df[\"Survived\"] #target de\u011fi\u015fken \/ ba\u011f\u0131ml\u0131 de\u011fi\u015fken\n\nX=df.drop([\"Survived\"],axis=1)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=42)","9e2ac321":"print(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","09ec21dc":"y_test.dtypes","5603818c":"X_train.astype(float)\ny_train.astype(float)\nX_test.astype(float)\ny_test.astype(float)","a7f532c8":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score \nfrom sklearn.metrics import confusion_matrix as cm\n\nlr = LogisticRegression(solver='liblinear') #solve=liblinear kaggle i\u00e7in gerekli\nlr.fit(X_train, y_train)","fdbb2315":"# lr b= benim kurdu\u011fum model\npredictions = lr.predict(X_train)","b73ba63c":"#modelin ba\u015far\u0131 oran\u0131 (x-train ile y-train - g\u00f6rd\u00fc\u011f\u00fc veriler aras\u0131nda)","53d41dde":"predictions","063f037d":"from sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nconfusion_matrix(y_train, predictions)","e0d74c69":"#train skoru\nscore = accuracy_score(y_train, predictions)\nscore","46a7e0fe":"# test skoru (as\u0131l \u00f6nemli olan)\ny_pred = lr.predict(X_test)","d87b89ed":"confusion_matrix(y_pred, y_test)","73e4e946":"score = accuracy_score(y_pred, y_test)\nscore","a2b633ee":"cm1 = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm1, annot=True, fmt=\".0f\")\nplt.xlabel('Predicted Values')\nplt.ylabel('Actual Values')\nplt.title('Accuracy Score: {0}'.format(score), size = 15)\nplt.show()","3e802fce":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))","d2da2d5f":"test \u00fczerine yorum:\n# accuracy - genel ba\u015far\u0131 oran\u0131: %79","c831d169":"df1=df.copy()\ndf.Pclass.value_counts()","624377c3":"map_new = {3:1,1:3,2:2}\ndf1[\"Pclass\"]= df1[\"Pclass\"].map(map_new)\n","908b04b1":"from sklearn.model_selection import train_test_split\n\ny=df1[\"Survived\"] #target de\u011fi\u015fken \/ ba\u011f\u0131ml\u0131 de\u011fi\u015fken\n\nX=df1.drop([\"Survived\"],axis=1)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.2, random_state=42) \n                        ","a38e3e42":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score \nfrom sklearn.metrics import confusion_matrix as cm\n\nlr = LogisticRegression(solver='liblinear') #solve=liblinear kaggle i\u00e7in gerekli\nlr.fit(X_train, y_train)\n\n# lr b= benim kurdu\u011fum model\npredictions = lr.predict(X_train)\n\n#tahmin skoru\ntahmin_score = accuracy_score(y_train, predictions)\ntahmin_score\n\n#test skoru\ny_pred = lr.predict(X_test)\ntest_score = accuracy_score(y_test, y_pred)\ntest_score\n\n","51d7dca3":"from sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nconfusion_matrix(y_pred, y_test)","7aa5ba2a":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))","40bfa817":"#plt.figure(figsize=(10,8))\nsns.pairplot(df1, hue=\"Survived\")","c1dad357":"# VER\u0130 \u00f6N i\u015fLEME","d240b4c9":"# G\u00f6rselle\u015ftirme","10650c95":"* e\u011fer kategorik dep\u015fken nominal binary ise Label Encoder veya map (cinsiyet- medeni durum)\n* e\u011fer kategorik de\u011fi\u015fken nominal ama 2'den fazla s\u0131n\u0131f\u0131 varsa One Hot Encoder (Embarked)\n* e\u011fer kategorik de\u011fi\u015fken ordinal (s\u0131ral\u0131)(e\u011fitim durumu)- label encoder","745431b5":"# Eksik veri doldurma","398c6be5":"* Pclass de\u011ferlerinin de\u011fi\u015fimi ile model kurulumu (1:3, 2:2, 3:1)","295bb975":"Model \u00f6ncesi; eksik veri doldurma\n\nanlams\u0131z de\u011fi\u015fkenlerin \u00e7\u0131kar\u0131lmas\u0131\n\nvarsa ayk\u0131r\u0131 de\u011fer analizi\n\nkorelasyon\n\nModele konulacak de\u011fi\u015fkenlerin belirlenmesi\n\nKategorik de\u011fi\u015fkenlerin d\u00f6n\u00fc\u015f\u00fcm\u00fc","d9a8049c":"# test ve train olarak df'in ayr\u0131lmas\u0131"}}