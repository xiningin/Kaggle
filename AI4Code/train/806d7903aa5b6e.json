{"cell_type":{"65c54ea3":"code","3b5db0c3":"code","27a96614":"code","573df545":"code","73575696":"code","6ac3f2c2":"code","12c01607":"code","8ab4d268":"code","87544d34":"code","fa07eaa0":"code","53927946":"code","a74906fc":"code","0f5c732a":"code","645930f7":"code","0c5de489":"code","3c7cfa7e":"code","14ab0570":"code","a6b55912":"code","f800727b":"code","e1255cbf":"code","1f8ad582":"code","dede0d77":"code","89be1d91":"code","7050df9a":"code","695bd25a":"code","75f7ea69":"code","cecc3ba6":"code","4812bc12":"code","c76c73ac":"code","889afde1":"code","8e46c7be":"code","b2bc9eeb":"code","137fae09":"code","844f3676":"code","719cd54e":"code","537b93db":"code","20916568":"code","7b21a405":"code","9f4a00fc":"code","fe828196":"code","1e0f5dc2":"code","4ea0b7f0":"code","67744d42":"code","15f64d9f":"code","1e74f37b":"code","9b3550ba":"code","21e9590a":"code","1a195b20":"code","e2fe4828":"code","af65a0ab":"code","9f5b1c05":"code","7034198d":"code","652049c6":"code","9baa4696":"code","ee26362f":"code","92ef1fc4":"code","3302aa63":"code","00890e21":"code","11a0a10b":"code","525edbec":"code","8d73ca8b":"code","7026bbaa":"code","5a4cd957":"code","13de9958":"code","2b3865c8":"code","5b9ac9c1":"code","bdcd9801":"code","f5019940":"code","d9d61b59":"code","97772c2b":"code","a150a3bb":"code","757e40c9":"code","7b36e958":"code","04f69194":"code","33c6be02":"code","92c97f44":"code","10ebc776":"code","c6e1b4a9":"code","10dfd4ac":"code","31756ef9":"code","ec499a1c":"code","60cef580":"code","b55ef68e":"code","b9db47ff":"code","c2b291fe":"code","29f3d229":"code","ddbc0e9b":"code","2b296818":"code","0b10272b":"code","c3f460bd":"code","7e191543":"code","cac478b9":"code","cc0479b3":"code","ac899a24":"code","8ae89f68":"code","d89317d1":"code","22088875":"code","e68c10da":"code","7caa06af":"code","1955f765":"code","19a86331":"code","f5170325":"code","3e91acf9":"code","dc89d8e5":"code","84e1161a":"markdown","55147b92":"markdown","0641a91e":"markdown","14486bb3":"markdown","8877c6a3":"markdown","299a351d":"markdown","851a77eb":"markdown","03d4057e":"markdown","795a95e9":"markdown","c11b63d9":"markdown","b6dcd4a7":"markdown","214ac423":"markdown","626e53af":"markdown","0ed154ab":"markdown","f2cec472":"markdown","ca509ebe":"markdown","ed8f75a1":"markdown","66e34e5f":"markdown","62bec06e":"markdown","910b2e62":"markdown","d7a051b2":"markdown","0cc565e7":"markdown","a0e35ee0":"markdown","4db91583":"markdown","3e145c53":"markdown","13b3b03c":"markdown","42667156":"markdown","b4c53c2d":"markdown","12e4b706":"markdown","7bd03d7a":"markdown","1edcba4b":"markdown","68e88926":"markdown","c21dae9b":"markdown"},"source":{"65c54ea3":"#importing libraries for data preprocessing\nimport pandas as pd","3b5db0c3":"#loading datasets\n\ndf1=pd.read_csv(\"\/kaggle\/input\/world-happiness\/2015.csv\")\ndf2=pd.read_csv(\"\/\/kaggle\/input\/world-happiness\/2016.csv\")\ndf3=pd.read_csv(\"\/kaggle\/input\/world-happiness\/2017.csv\")\ndf4=pd.read_csv(\"\/kaggle\/input\/world-happiness\/2018.csv\")\ndf5=pd.read_csv(\"\/kaggle\/input\/world-happiness\/2019.csv\")","27a96614":"#chechking for columns\nprint(df1.columns,'\\n',df2.columns,'\\n',df3.columns,'\\n',df4.columns,'\\n',df5.columns)","573df545":"df1.head(5)","73575696":"df2.head(5)","6ac3f2c2":"# checking if the confidence interval is indeed mean +- st.error\n\n(7526-7460)\/1.96==(7592-7526)\/1.96","12c01607":"#it is so we can actually get the st.error from these 2 columns if needed\n\ndf3.head(5)","8ab4d268":"df4.head(5)","87544d34":"df5.head()","fa07eaa0":"df4['residual']=df4['Score'] - df4['GDP per capita']-df4['Social support'] - df4['Healthy life expectancy']- df4['Freedom to make life choices'] - df4['Generosity']-df4['Perceptions of corruption']-1.85","53927946":"df5['residual']=df5['Score'] - df5['GDP per capita']-df5['Social support'] - df5['Healthy life expectancy']- df5['Freedom to make life choices'] - df5['Generosity']-df5['Perceptions of corruption']-1.85","a74906fc":"df4.head()","0f5c732a":"df5.head()","645930f7":"df1['residual']=df1['Dystopia Residual']-1.85","0c5de489":"df2['residual']=df2['Dystopia Residual']-1.85","3c7cfa7e":"df3['residual']=df3['Dystopia.Residual']-1.85","14ab0570":"frames=[df1,df2,df3,df4,df5]\nfor frame in frames:\n    print(frame['residual'].mean())","a6b55912":"columns=['Country', 'Region','Happiness Score','Economy (GDP per Capita)', 'Family',\n       'Health (Life Expectancy)', 'Freedom', 'Trust (Government Corruption)','Generosity','residual']","f800727b":"new_columns_15=['country','region','happiness score','GDP_15','family\/social_support_15','life_expectancy_15','freedom_to_make_choices_15','perception_of_corruption_15','generosity_15','residual_15']","e1255cbf":"df1_new=df1.drop(['Happiness Rank','Standard Error','Dystopia Residual'],axis=1)","1f8ad582":"df1_new.rename(columns=dict(zip(columns,new_columns_15)),inplace=True)","dede0d77":"df1_new","89be1d91":"columns_2=['Country','Region', 'Happiness Score','Economy (GDP per Capita)', 'Family', 'Health (Life Expectancy)',\n       'Freedom', 'Trust (Government Corruption)', 'Generosity',\n       'residual']\ndf2_new=df2.drop(['Happiness Rank','Lower Confidence Interval', 'Upper Confidence Interval','Dystopia Residual'],axis=1)","7050df9a":"new_columns_16=['country','region','happiness score','GDP_16','family\/social_support_16','life_expectancy_16','freedom_to_make_choices_16','perception_of_corruption_16','generosity_16','residual_16']","695bd25a":"df2_new.rename(columns=dict(zip(columns_2,new_columns_16)),inplace=True)","75f7ea69":"df2_new.head(2)","cecc3ba6":"columns_3=['Country', 'Happiness.Score', 'Economy..GDP.per.Capita.', 'Family',\n       'Health..Life.Expectancy.', 'Freedom','Trust..Government.Corruption.',\n            'Generosity','residual']\ndf3_new=df3.drop([  'Happiness.Rank','Whisker.high','Whisker.low','Dystopia.Residual' ],axis=1)\nnew_columns_17=['country','happiness score','GDP_17','family\/social_support_17','life_expectancy_17','freedom_to_make_choices_17','perception_of_corruption_17','generosity_17','residual_17']\ndf3_new.rename(columns=dict(zip(columns_3,new_columns_17)),inplace=True)","4812bc12":"df3_new.head()","c76c73ac":"#makin order of columns the same\n#df3_new=df3_new[new_columns_17]","889afde1":"#df3_new.head(2)","8e46c7be":"#I will rename and drop columns for df4 and df5\ncolumns_4=['Country or region', 'Score', 'GDP per capita',\n       'Social support', 'Healthy life expectancy',\n       'Freedom to make life choices', 'Generosity',\n       'Perceptions of corruption','residual']\ndf4_new=df4.drop(['Overall rank'],axis=1)\nnew_columns_18=['country','happiness score','GDP_18','family\/social_support_18','life_expectancy_18','freedom_to_make_choices_18','perception_of_corruption_18','generosity_18','residual_18']\ndf4_new.rename(columns=dict(zip(columns_4,new_columns_18)),inplace=True)","b2bc9eeb":"df4_new.head()","137fae09":"columns_5=['Country or region', 'Score', 'GDP per capita',\n       'Social support', 'Healthy life expectancy',\n       'Freedom to make life choices', 'Generosity',\n       'Perceptions of corruption','residual']\ndf5_new=df5.drop([  'Overall rank' ],axis=1)\nnew_columns_19=['country','happiness score','GDP_19','family\/social_support_19','life_expectancy_19','freedom_to_make_choices_19','perception_of_corruption_19','generosity_19','residual_19']\ndf5_new.rename(columns=dict(zip(columns_5,new_columns_19)),inplace=True)\n\n","844f3676":"df5_new.head(2)","719cd54e":"print(df1_new.info(),'\\n',df2_new.info(),'\\\\n',df3_new.info(),\n      '\\\\n',df4_new.info(),'\\\\n',df5_new.info())","537b93db":"n=0\nfor country in df1_new['country'].unique() :\n    if country not in df3_new['country'].unique():\n        n+=1\n        print( country,False)\nprint(f'\\n{n} countries are not in df3_new')","20916568":"#now the wice versa\nn=0\nfor country in df3_new['country'].unique() :\n    if country not in df1_new['country'].unique():\n        n+=1\n        print( country,False)\nprint(f'\\n{n} countries are not in df1_new')","7b21a405":"#dropping countries that are in df3_new but not in the df1_new\nto_drop=['Oman','Suriname','Laos','Swaziland','Djibouti','Comoros','Somaliland region']\nfor name in to_drop:\n    df1_new.drop( df1_new[ df1_new['country'] == name ].index , inplace=True)","9f4a00fc":"len(df1_new)","fe828196":"#dropping countries that are in df1_new but not in the df3_new\nto_drop1=['Belize','Namibia','South Sudan','Somalia']\nfor name in to_drop1:\n    df3_new.drop( df3_new[ df3_new['country'] == name ].index , inplace=True)","1e0f5dc2":"len(df3_new)","4ea0b7f0":"df3_new=df3_new.replace(['Taiwan Province of China','Hong Kong S.A.R., China'],['Taiwan','Hong Kong'])","67744d42":"n=0\nfor country in df1_new['country'].unique() :\n    if country not in df2_new['country'].unique():\n        n+=1\n        print( country,False)\nprint(f'\\n{n} countries are not in df2_new')","15f64d9f":"n=0\nfor country in df2_new['country'].unique() :\n    if country not in df1_new['country'].unique():\n        n+=1\n        print( country,False)\nprint(f'\\n{n} countries are not in df1_new')","1e74f37b":"#dropping countries that are in df2_new but not in the df1_new (and therefore not in df3_new)\nto_drop2=['Mozambique','Lesotho','Central African Republic' ]\nfor name in to_drop2:\n    df1_new.drop( df1_new[ df1_new['country'] == name ].index , inplace=True)\n    df3_new.drop( df3_new[ df3_new['country'] == name ].index , inplace=True)","9b3550ba":"#dropping countries that are in df1_new but not in the df2_new \nto_drop3=['Puerto Rico', 'Suriname', 'Belize','Somalia', 'Laos','Namibia', 'Comoros', 'South Sudan','Somaliland Region']\nfor name in to_drop3:\n    df2_new.drop( df2_new[ df2_new['country'] == name ].index , inplace=True)","21e9590a":"print(len(df1_new),len(df2_new),len(df3_new))","1a195b20":"n=0\nfor country in df1_new['country'].unique() :\n    if country not in df4_new['country'].unique():\n        n+=1\n        print( country,False)\nprint(f'\\n{n} countries are not in df4_new')","e2fe4828":"n=0\nfor country in df4_new['country'].unique() :\n    if country not in df1_new['country'].unique():\n        n+=1\n        print( country,False)\nprint(f'\\n{n} countries are not in df1_new')","af65a0ab":"#renaming\ndf4_new=df4_new.replace(['Trinidad & Tobago','Northern Cyprus'],\n                  ['Trinidad and Tobago','North Cyprus'])","9f5b1c05":"#dropping countries that are in df4_new but not in the df1_new\nto_drop4=['Belize','Somalia','Laos', 'Namibia', 'South Sudan','Central African Republic',\n          'Mozambique','Lesotho']\nfor name in to_drop4:\n    df4_new.drop( df4_new[ df4_new['country'] == name ].index , inplace=True)","7034198d":"len(df4_new)","652049c6":"n=0\nfor country in df1_new['country'].unique() :\n    if country not in df5_new['country'].unique():\n        n+=1\n        print( country,False)\nprint(f'\\n{n} countries are not in df5_new')","9baa4696":"n=0\nfor country in df5_new['country'].unique() :\n    if country not in df1_new['country'].unique():\n        n+=1\n        print( country,False)\nprint(f'\\n{n} countries are not in df1_new')","ee26362f":"#renaming countries\ndf5_new=df5_new.replace(['Trinidad & Tobago','Northern Cyprus','North Macedonia'],\n                  ['Trinidad and Tobago','North Cyprus','Macedonia'])","92ef1fc4":"#dropping countries that are in df1_new but not in the df5_new\nto_drop5=['Laos','Somalia','Namibia','Gambia','Swaziland','Comoros', 'Central African Republic','South Sudan','Mozambique','Lesotho']\nfor name in to_drop5:\n    df5_new.drop( df5_new[ df5_new['country'] == name ].index , inplace=True)","3302aa63":"#droppiing countries that are in df5_nwe but not in the other datasets\nto_drop6=['Sudan','Angola']\ndata_frames=[df1_new,df2_new,df3_new,df4_new]\nfor name in to_drop6:\n    for frame in data_frames:\n        frame.drop( frame[ frame['country'] == name ].index , inplace=True)\n","00890e21":"print(len(df1_new),len(df2_new),len(df3_new),len(df4_new),len(df5_new))","11a0a10b":"df1_new=df1_new.sort_values('country')\ndf2_new=df2_new.sort_values('country')\ndf3_new=df3_new.sort_values('country')\ndf4_new=df4_new.sort_values('country')\ndf5_new=df5_new.sort_values('country')","525edbec":"df1_new['country'].unique()==df2_new['country'].unique()","8d73ca8b":"df1_new['country'].unique()==df3_new['country'].unique()","7026bbaa":"df1_new['country'].unique()==df4_new['country'].unique()","5a4cd957":"df1_new['country'].unique()==df5_new['country'].unique()","13de9958":"frames=[df1_new,df2_new,df3_new,df4_new,df5_new]\nfor frame in frames:\n    frame=frame.reset_index(drop=True,inplace=True)\n    ","2b3865c8":"df1_new.head(3)","5b9ac9c1":"df3_new['region']=df1_new['region']\nnew_col=['country','region','happiness score','GDP_17','family\/social_support_17','life_expectancy_17','freedom_to_make_choices_17','perception_of_corruption_17','generosity_17','residual_17']\ndf3_new=df3_new[new_col]","bdcd9801":"df3_new.head(2)","f5019940":"df4_new['region']=df1_new['region']\nnew_col=['country','region','happiness score','GDP_18','family\/social_support_18','life_expectancy_18','freedom_to_make_choices_18','perception_of_corruption_18','generosity_18','residual_18']\ndf4_new=df4_new[new_col]","d9d61b59":"df5_new['region']=df1_new['region']\nnew_col=['country','region','happiness score','GDP_19','family\/social_support_19','life_expectancy_19','freedom_to_make_choices_19','perception_of_corruption_19','generosity_19','residual_19']\ndf5_new=df5_new[new_col]","97772c2b":"df1_new.columns","a150a3bb":"import matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfig,ax=plt.subplots(5,2, sharex=True,sharey=True,figsize=(15,15))\nregions=df1_new['region'].unique();\nfor i, ax in enumerate(ax.flat):\n    ax.bar(x=['GDP_15',\n       'family\/social_support_15', 'life_expectancy_15',\n       'freedom_to_make_choices_15', 'perception_of_corruption_15',\n       'generosity_15', 'residual_15'], height=list(df1_new[df1_new['region']==regions[i]][['GDP_15',\n       'family\/social_support_15', 'life_expectancy_15',\n       'freedom_to_make_choices_15', 'perception_of_corruption_15',\n       'generosity_15', 'residual_15']].mean()),color='blue')\n      \n    ax.set_title(regions[i])\n    ax.set_xticklabels(['GDP_15',\n       'family\/social_support_15', 'life_expectancy_15',\n       'freedom_to_make_choices_15', 'perception_of_corruption_15',\n       'generosity_15', 'residual_15'])\n    ax.spines[['right','top']].set_color('white')\n    \nplt.xticks(rotation='vertical')\nplt.show()","757e40c9":"factors=['GDP_15',\n       'family\/social_support_15', 'life_expectancy_15',\n       'freedom_to_make_choices_15', 'perception_of_corruption_15',\n       'generosity_15', 'residual_15']","7b36e958":"for fact in factors:\n\n    print(f'The mean value of {fact} if {round(df1_new[fact].mean(),2)}\\n')","04f69194":"import seaborn as sns\n\nplt.figure(figsize=(10,10))\nsns.heatmap(data=df1_new[['happiness score','GDP_15',\n       'family\/social_support_15', 'life_expectancy_15',\n       'freedom_to_make_choices_15', 'perception_of_corruption_15',\n       'generosity_15', 'residual_15']].corr(),annot=True)","33c6be02":"l15=[]\nl16=[]\nl17=[]\nl18=[]\nl19=[]\nvalue_list=[l15,l16,l17,l18,l19]","92c97f44":"\nnew_col=['country','region','happiness score','GDP','family\/social_support','life_expectancy_','freedom_to_make_choices','perception_of_corruption','generosity','residual']\ndf1_comp=df1_new.rename(columns=dict(zip(df1_new.columns,new_col)),inplace=True)\ndf2_comp=df2_new.rename(columns=dict(zip(df2_new.columns,new_col)),inplace=True)\ndf3_comp=df3_new.rename(columns=dict(zip(df3_new.columns,new_col)),inplace=True)\ndf4_comp=df4_new.rename(columns=dict(zip(df4_new.columns,new_col)),inplace=True)\ndf5_comp=df5_new.rename(columns=dict(zip(df5_new.columns,new_col)),inplace=True)","10ebc776":"df1_new","c6e1b4a9":"factors_new=['GDP','family\/social_support','life_expectancy_','freedom_to_make_choices','perception_of_corruption','generosity','residual']\nframes=[df1_new,df2_new,df3_new,df4_new,df5_new]\nfor i,frame in enumerate(frames):\n    for fact in factors_new:\n        value_list[i].append(frame[fact].mean())","10dfd4ac":"import numpy as np\ndf_compare=pd.DataFrame(data=np.array(value_list),columns=[['GDP','family\/social_support','life_expectancy_','freedom_to_make_choices','perception_of_corruption','generosity','residual']],index=[2015,2016,2017,2018,2019])","31756ef9":"df_compare=df_compare.T.stack().reset_index().rename(columns={'level_0':'factor','level_1':'year',0:'value'})","ec499a1c":"df_compare.head()","60cef580":"plt.figure(figsize=(10,10))\n\n\nsns.lineplot(data=df_compare,x='year',y='value',hue='factor',palette='rainbow')\n\nplt.legend(bbox_to_anchor=(1,1))\nplt.title('Average values of the happiness score factors on the world level (2015-2019)',size=13)\nplt.xticks(ticks=[2015,2016,2017,2018,2019])\n\nax=plt.gca()\nax.spines[['right','top']].set_color('white')\nplt.show()","b55ef68e":"df1_new.region.unique()","b9db47ff":"regions=['Southern Asia', 'Central and Eastern Europe','Middle East and Northern Africa',\n         'Latin America and Caribbean','Australia and New Zealand', 'Western Europe','Sub-Saharan Africa', \n         'Southeastern Asia', 'North America','Eastern Asia']\nfor reg in regions:\n    l15=[]\n    l16=[]\n    l17=[]\n    l18=[]\n    l19=[]\n    value_list=[l15,l16,l17,l18,l19]\n    top_factors=['GDP','family\/social_support','life_expectancy_']\n    frames=[df1_new[df1_new['region']==reg],df2_new[df2_new['region']==reg],\n           df3_new[df3_new['region']==reg],df4_new[df4_new['region']==reg],\n            df5_new[df5_new['region']==reg]]\n\n    for i,frame in enumerate(frames):\n        for fact in top_factors:\n            value_list[i].append(frame[fact].mean())\n\n    df_compare=pd.DataFrame(data=np.array(value_list),columns=[['GDP','family\/social_support','life_expectancy_']],\n                            index=[2015,2016,2017,2018,2019])\n\n\n    df_compare=df_compare.T.stack().reset_index().rename(columns={'level_0':'factor','level_1':'year',0:'value'})\n\n    df_compare\n\n    plt.figure(figsize=(5,5))\n\n\n    sns.lineplot(data=df_compare,x='year',y='value',hue='factor',palette='rainbow')\n\n    plt.legend(bbox_to_anchor=(1,1))\n    plt.title(f'Average values of the happiness score top factors in {reg} (2015-2019)',size=10)\n    plt.xticks(ticks=[2015,2016,2017,2018,2019])\n\n    ax=plt.gca()\n    ax.spines[['right','top']].set_color('white')\n    plt.show()","c2b291fe":"for reg in regions:\n    happiness=[]\n    frames=[df1_new[df1_new['region']==reg],df2_new[df2_new['region']==reg],\n               df3_new[df3_new['region']==reg],df4_new[df4_new['region']==reg],\n                df5_new[df5_new['region']==reg]]\n\n    for frame in frames:\n            happiness.append(frame['happiness score'].mean())\n\n    df_compare=pd.DataFrame(data=np.array(happiness),columns=['happiness score'],\n                            index=[2015,2016,2017,2018,2019])\n\n\n    df_compare=df_compare.T.stack().reset_index().rename(columns={'level_0':'factor','level_1':'year',0:'value'})\n\n\n    plt.figure(figsize=(5,5))\n\n\n    sns.lineplot(data=df_compare,x='year',y='value')\n\n    plt.title(f'Average values of the happiness score {reg} (2015-2019)',size=10)\n    plt.xticks(ticks=[2015,2016,2017,2018,2019])\n\n    ax=plt.gca()\n    ax.spines[['right','top']].set_color('white')\n    plt.show()","29f3d229":"data=[df1_new[['country', 'region', 'happiness score', 'GDP', 'family\/social_support','life_expectancy_',\n                 'freedom_to_make_choices','perception_of_corruption', 'generosity', 'residual']],\n               df2_new[['country', 'region', 'happiness score', 'GDP', 'family\/social_support','life_expectancy_',\n                          'freedom_to_make_choices','perception_of_corruption', 'generosity', 'residual']],\n               df3_new[['country', 'region', 'happiness score', 'GDP', 'family\/social_support','life_expectancy_',\n                          'freedom_to_make_choices','perception_of_corruption', 'generosity', 'residual']],\n            df4_new[['country', 'region', 'happiness score', 'GDP', 'family\/social_support','life_expectancy_',\n                       'freedom_to_make_choices','perception_of_corruption', 'generosity', 'residual']],\n            df5_new[['country', 'region', 'happiness score', 'GDP', 'family\/social_support','life_expectancy_',\n                       'freedom_to_make_choices','perception_of_corruption', 'generosity', 'residual']]]\n                                          \nscores_year=pd.concat(data,axis=0)\n\nscores_year","ddbc0e9b":"#defining my X and y set\nX=scores_year[['GDP', 'family\/social_support','life_expectancy_']]\ny=scores_year['happiness score']","2b296818":"# splitting data and training linear model\nfrom sklearn.model_selection import train_test_split\nX=scores_year[['GDP', 'family\/social_support','life_expectancy_']]\ny=scores_year['happiness score']\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.33,random_state=101)\n\nfrom sklearn.linear_model import LinearRegression\n\nlin_mod=LinearRegression().fit(X_train,y_train)\ny_pred=lin_mod.predict(X_train)\n\nfrom sklearn.metrics import mean_squared_error,r2_score\n\nprint(f'Train data RMSE={np.sqrt(mean_squared_error(y_train,y_pred))}')\nprint(f'Train data r_squared={r2_score(y_train, y_pred)}')\n\ny_test_pred=lin_mod.predict(X_test)\n\nprint(f'Test data RMSE={np.sqrt(mean_squared_error(y_test,y_test_pred))}')\nprint(f'Test data r_squared={r2_score(y_test, y_test_pred)}')\n","0b10272b":"X=scores_year[['GDP', 'family\/social_support','life_expectancy_']]\ny=scores_year['happiness score']\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.33,random_state=101)\n\nfrom sklearn.linear_model import Lasso\nfrom sklearn.metrics import mean_squared_error\n\nmodel_lasso = Lasso(alpha=0.001)\nmodel_lasso.fit(X_train, y_train) \npred_train_lasso= model_lasso.predict(X_train)\nprint(f'Train data RMSE={np.sqrt(mean_squared_error(y_train,pred_train_lasso))}')\nprint(f'Train data r_squared={r2_score(y_train, pred_train_lasso)}')\n\npred_test_lasso= model_lasso.predict(X_test)\nprint(f'Test data RMSE={np.sqrt(mean_squared_error(y_test,pred_test_lasso))}')\nprint(f'Test data r_squared={r2_score(y_test, pred_test_lasso)}')","c3f460bd":"from sklearn.linear_model import Ridge\n\nrr = Ridge(alpha=0.001)\nrr.fit(X_train, y_train) \npred_train_rr= rr.predict(X_train)\nprint(f'Train data RMSE={np.sqrt(mean_squared_error(y_train,pred_train_rr))}')\nprint(f'Test data r_squared={r2_score(y_train, pred_train_rr)}')\n\npred_test_rr= rr.predict(X_test)\nprint(f'Test data RMSE={np.sqrt(mean_squared_error(y_test,pred_test_rr))}') \nprint(f'Test data r_squared={r2_score(y_test, pred_test_rr)}')","7e191543":"#using only GDP\nfrom sklearn.model_selection import train_test_split\nX=scores_year[['GDP']]\ny=scores_year['happiness score']\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.33,random_state=101)\n\nfrom sklearn.linear_model import LinearRegression\n\nlin_mod_g=LinearRegression().fit(X_train,y_train)\ny_pred=lin_mod_g.predict(X_test)\n\nprint('Root Mean Squared Error:', np.sqrt(mean_squared_error(y_test, y_pred)))","cac478b9":"r_squared_g=r2_score(y_test,y_pred)","cc0479b3":"#using only life expectancy\n\nfrom sklearn.model_selection import train_test_split\nX=scores_year[['life_expectancy_']]\ny=scores_year['happiness score']\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.33,random_state=101)\n\nfrom sklearn.linear_model import LinearRegression\n\nlin_mod_l=LinearRegression().fit(X_train,y_train)\ny_pred=lin_mod_l.predict(X_test)\n\nprint('Root Mean Squared Error:', np.sqrt(mean_squared_error(y_test, y_pred)))","ac899a24":"r_squared_l=r2_score(y_test,y_pred)","8ae89f68":"#using only familly support\n\nfrom sklearn.model_selection import train_test_split\nX=scores_year[['family\/social_support']]\ny=scores_year['happiness score']\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.33,random_state=101)\n\nfrom sklearn.linear_model import LinearRegression\n\nlin_mod_f=LinearRegression().fit(X_train,y_train)\ny_pred=lin_mod_f.predict(X_test)\n\n\nprint('Root Mean Squared Error:', np.sqrt(mean_squared_error(y_test, y_pred)))","d89317d1":"r_squared_f=r2_score(y_test,y_pred)","22088875":"print(f'model using only GDP has r^2 {r_squared_g}\\nmodel using only life expectancy has r^2 {r_squared_l}\\nmodel using only family support has r^2 {r_squared_f}')","e68c10da":"#defining my X and y set\nX=scores_year[scores_year['region']=='Sub-Saharan Africa'][['GDP', 'family\/social_support','life_expectancy_']]\ny=scores_year[scores_year['region']=='Sub-Saharan Africa']['happiness score']","7caa06af":"# splitting data and training linear model using 3 features\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.33,random_state=101)\n\n\n\nlin_mod=LinearRegression().fit(X_train,y_train)\ny_pred=lin_mod.predict(X_test)\n\n\nprint('Root Mean Squared Error:', np.sqrt(mean_squared_error(y_test, y_pred)))","1955f765":"from sklearn.metrics import r2_score\nr2_score(y_test,y_pred)","19a86331":"#using only GDP\nX=scores_year[scores_year['region']=='Sub-Saharan Africa'][['GDP']]\ny=scores_year[scores_year['region']=='Sub-Saharan Africa']['happiness score']\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.33,random_state=101)\n\n\nlin_mod_g=LinearRegression().fit(X_train,y_train)\ny_pred=lin_mod_g.predict(X_test)\n\nr_squared_g=r2_score(y_test,y_pred)","f5170325":"#using only family\nX=scores_year[scores_year['region']=='Sub-Saharan Africa'][['family\/social_support']]\ny=scores_year[scores_year['region']=='Sub-Saharan Africa']['happiness score']\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.33,random_state=101)\n\n\nlin_mod_f=LinearRegression().fit(X_train,y_train)\ny_pred=lin_mod_f.predict(X_test)\n\nr_squared_f=r2_score(y_test,y_pred)","3e91acf9":"#using only family\nX=scores_year[scores_year['region']=='Sub-Saharan Africa'][['life_expectancy_']]\ny=scores_year[scores_year['region']=='Sub-Saharan Africa']['happiness score']\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.33,random_state=101)\n\n\n\nlin_mod_l=LinearRegression().fit(X_train,y_train)\ny_pred=lin_mod_l.predict(X_test)\n\nr_squared_l=r2_score(y_test,y_pred)","dc89d8e5":"print(f'model using only GDP has r^2 {r_squared_g}\\nmodel using only life expectancy has r^2 {r_squared_l}\\nmodel using only family support has r^2 {r_squared_f}')","84e1161a":"# Data analysis","55147b92":"let's check on averages and see if they're indeed close to zero as they should be","0641a91e":"\n\nI will  firstly examine the year 2015. I intend to look at different regions. I will check which of the six factors contributes the most to the happines score (regions and continets) and discuss results a bit.","14486bb3":"I will try to apply the linear regreesion model on the Sub-Saharan region were the family support seemed to play an important role (looking back at the lineplots)","8877c6a3":"From above I can see that Iwill need to delete 3 more countries from df1_comp and df3_comp and 9 countries from df2_comp","299a351d":"Based on the linear model , GDP still gives the best predictions, which is a bit contradictory to the lineplots for Sub-Saharan Africa. But, I can see that the happines score feature gives better predictions than the life expectancy. \nBut all the values for r^2 are rather low so I do not think that the happiness score could be determined using the linear model and the familly suport feature solely.  ","851a77eb":"As we could see, the happiness score has the highest correaltion with the GDP. \n\nBut somethng else is interesting: the highest correlation overall is between GDP and life expectancy (positive indicating that rise in one is followed by the rise in the other variable, and vice versa).Pretty high is the correlation between GDP and family support too. \n\nWe could argue that the GDP is driving up the happiness, life expectancy and the family relationships in general. But lets' see how did those scores change over years. I will make a new dataframe with avearge values for factors over years","03d4057e":"From here we can indeed see that the model based on life expectancy only would give better results for predicting happiness score than the model with family support as the only feature. Still, the GDP feature seems to be the best predictor for the happiness score. ","795a95e9":"We can notice that the column family has been replaced with the Social support but the values are very similar. I believe that it is safe to assume that those columns represent the same thing as sometimes people consider very close friend the family and probably think of them as of family. So I will treat these 2 columns as they're representing the same thing.\n\nThere are   common columns amongst these 5 dataframes:\n-country or region,score,GDP,Family\/social support,life expectancy,freedom to make choices,generosity and perception of corruption and new residual.There is no region column in the last 3 dataframes and I think that it is an important coulumn my future analysis. I will add the region column after I clean my datasets. ","c11b63d9":"df4 and df5 are missing distopia residual. when I check through sample calculation it seems that we can find it by subtracting all other values from the Happiness score like in the example below fro Finland in df5 :\n\n7.769-1.340-1.587-0.986-0.596-0.153-0.393= 2.714\n\nThis seems to be a reasonable value when Icompare it with the dystopia residuals from the first 3 data frames. \n\nHowever since the actual residuals are \"reflecting the extent to which the six variables either over- or under-explain average 2014-2016 life evaluations \" I will amke residual column by subtracting 1.85 of dystopia ersidual or from the happiness score.\nI will therefor make a residual columns for all dataframes. ","b6dcd4a7":"I will now compare df1_comp with the rest of df and I hope that I will not have to delete many more  coumns from df1_comp","214ac423":"df3 doesn't have confidence interval but rather IQR , so  td.error can be dropped from further analysis","626e53af":"# Developing model ( on the world level)\n\n\nSince the happiness score is the sum of all the factors, it wouldn't be approrpiate to use all of them to predict the  happiness score. But I have identified the 3 most important factors. Let's see can we predict the happiness score using only GDP, Family support and Life expectancy. \n\nFor that purpose I will need merge my data for years.","0ed154ab":"12 countries have been lost in data cleaning. It is important to mention that those countries are still in the original dataframes and they will be displayed on geomaps. But for the sake of comparison between years it is appropriate to have same countries.  \nNow I will sort data by country to check once more if all dataframes have the same countries ","f2cec472":"So we need to rename 2 countries in df4_comp as Trinidad and Tobago and NOrth Cyprus have been used in df1, df2 and df3 . We also need to delete 8 countries from df4_comp","ca509ebe":"The extent to which GDP determines the happiness index on the world level is decreasing. On the other hand the effect of Family support is increasing. From the pervious analyzis I know that Australi, NA and Western Europe have the highest score. Sub-Saharan Africa has an increasing score over years and the Latin America ahs decreasing score over years. \n\nI will choose these continets to cehck the 3 most importan factors : GDP, Family support and Life expectancy.","ed8f75a1":"# Data preprocessing","66e34e5f":"I will repeat the same for df4_new and df5_new.","62bec06e":"So we can see that the variations in y score can be explained by this linear model in 67% of the cases. But there is something surprising. If we look into coefficients, the highes one is for GDP, followed by life expectancy. That means that rise in life expectancy will affect the happiness score more than rise in family support. \n\nWe can also try Lasso and Ridge regression","910b2e62":"So, we can now merge those dataframes if needed. But first let me reset the index","d7a051b2":"Now we have same columns. Let's check for null data and data types.","0cc565e7":"From here I can see that some countries have similar names. I will drop only those countries that are actusally different countries and I will rename ones that have simlar names.","a0e35ee0":"So all 3 models give relatively similar results.\n\nI can also see how the linear model predicts values using the individual features.","4db91583":"We can see that the family support became more important factor since 2016 when it has dropped across regions.From 2017 the importance of family support has increased by approx. 0.4 (or more0 accross regions (which is 40% or more of an increase).  At the same time the GDP became less importan factor. It has reached its maximum in 2017 and then it came down to approximately same level as it was in 2015. So, after 2016 and 2017 the family support becomes the most important factor in the happiness score. \n\nHowever, we still can see the decreae in the happiness index in some regions after 2017. The most drastic difference , bigger than 0.1 is in Latin America (constantly decreasing -- approx. 0.2 drop), Middel East and Northern Afica( decreasing after 2016 -apprx. 0.16 drop) and North America(constantly decreasing -approx 0.8 drop). It would be worth of looking further into details about the GDP and happiness index for these countries\n\nThe life exepctancy has surprisingly the same shape accross all regions. It had smaller drop i 2016\/2017 and then it strted to increase reching the highest values in 2019.","3e145c53":"Content\n\nThe happiness scores and rankings use data from the Gallup World Poll. The scores are based on answers to the main life evaluation question asked in the poll. This question, known as the Cantril ladder, asks respondents to think of a ladder with the best possible life for them being a 10 and the worst possible life being a 0 and to rate their own current lives on that scale. The scores are from nationally representative samples for the years 2013-2016 and use the Gallup weights to make the estimates representative. The columns following the happiness score estimate the extent to which each of six factors \u2013 economic production, social support, life expectancy, freedom, absence of corruption, and generosity \u2013 contribute to making life evaluations higher in each country than they are in Dystopia, a hypothetical country that has values equal to the world\u2019s lowest national averages for each of the six factors. They have no impact on the total score reported for each country, but they do explain why some countries rank higher than others.\n\n\nInspiration\n\nWhat countries or regions rank the highest in overall happiness and each of the six factors contributing to happiness? How did country ranks or scores change between the 2015 and 2016 as well as the 2016 and 2017 reports? Did any country experience a significant increase or decrease in happiness?\nWhat is Dystopia?\nDystopia is an imaginary country that has the world\u2019s least-happy people. The purpose in establishing Dystopia is to have a benchmark against which all countries can be favorably compared (no country performs more poorly than Dystopia) in terms of each of the six key variables, thus allowing each sub-bar to be of positive width. The lowest scores observed for the six key variables, therefore, characterize Dystopia. Since life would be very unpleasant in a country with the world\u2019s lowest incomes, lowest life expectancy, lowest generosity, most corruption, least freedom and least social support, it is referred to as \u201cDystopia,\u201d in contrast to Utopia.\n\n\nWhat are the residuals?\n\nThe residuals, or unexplained components, differ for each country, reflecting the extent to which the six variables either over- or under-explain average 2014-2016 life evaluations. These residuals have an average value of approximately zero over the whole set of countries. Figure 2.2 shows the average residual for each country when the equation in Table 2.1 is applied to average 2014- 2016 data for the six variables in that country. We combine these residuals with the estimate for life evaluations in Dystopia so that the combined bar will always have positive values. As can be seen in Figure 2.2, although some life evaluation residuals are quite large, occasionally exceeding one point on the scale from 0 to 10, they are always much smaller than the calculated value in Dystopia, where the average life is rated at 1.85 on the 0 to 10 scale.\n\n\nWhat do the columns succeeding the Happiness Score(like Family, Generosity, etc.) describe?\n\n\nThe following columns: GDP per Capita, Family, Life Expectancy, Freedom, Generosity, Trust Government Corruption describe the extent to which these factors contribute in evaluating the happiness in each country. The Dystopia Residual metric actually is the Dystopia Happiness Score(1.85) + the Residual value or the unexplained value for each country as stated in the previous answer.\n\n\nIf you add all these factors up, you get the happiness score so it might be un-reliable to model them to predict Happiness Scores.","13b3b03c":"I will now add region column to df3,df4 and df5. As the order of countries is the same I can simply assign the new column using the df1_new['region]. I will also change the order of columns.","42667156":"From above subplots we can see that the most important factors are GDP per Capita (Western Europe, North America,Middle East and North Africa,East Asia) and Family(Australi and NZ, Latin America and Caribbean,SouthernAsia,Central and Eastern Europe,Southern Asia and Sub-Saharan Africa). That is followed by Life Expectancy\n\nLet's chek their values","b4c53c2d":"# Conclusion\n\nIn the previous investigation I was able to visulize the extent to which different features contribute the happiness index throughout the years. \n\n3 features werre identified as the most important. \n\nI was also able to see the change in the average happiness index per region.\n\nSince the happiness score is the sum of all the features values it is misleading to use them all to model the happiness index. I decided to check how good the linear model using 3 features (alltogether and individually) can model the data. The r_squared values were somewhat good(67%)\n\nI have discovered that for the linear model the most importan feature was GDP. \n\n","12e4b706":"Values do indeed seem reasonable. ","7bd03d7a":"The r^2 for Sub-Saharan africa shows that only 37% of variations can be explained using variations in features. \nSo the model is not really good. I will run the model based on those 3 features separately. ","1edcba4b":"There are no null data and all numbers are floats. \n\nBut the df3_new has 155 countires and the df1_new has\n158 countries. The next step is to reduce the number of countries \nto the highest common number of countries for all datasets. I will start by comparing df3_new( because it has the smallest number of data )with the  df1_new( largest number of data.)","68e88926":"Looking at those values I can assume that the happinesss core will ahve tjhe highest correlation with GDP, life expecatncy and family support. \n\n","c21dae9b":"I will rename columns and drop columns that are not in common (except from region). I will save those dataframes as df1_new,df2_new... "}}