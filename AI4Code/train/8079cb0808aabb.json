{"cell_type":{"b020bdf1":"code","811b4612":"code","9fc85615":"code","82da6bc7":"code","4f48b811":"code","e44ca235":"code","a8c3feca":"code","a9e2d3b8":"code","ab8605c2":"code","e3d46a0c":"code","db304152":"code","5dd66f91":"code","9babc1c1":"code","7b69f6bb":"code","b22bc41b":"code","227b1e20":"code","26d035fa":"code","7b4b8223":"code","847bccc1":"code","c4fa1969":"code","19e651f0":"code","92cd0d99":"code","c9d66045":"code","6dc83c51":"code","43d3386c":"code","f11b3ded":"code","040bb241":"code","c9ed6c25":"code","277dbb90":"code","d992cc48":"code","c0be781d":"code","e0c3a0a3":"code","01c1727a":"code","b68d6242":"code","3eb1a413":"code","4c39000c":"code","110aed1e":"code","1f722999":"code","6c329114":"code","d05a8473":"code","4ac79db2":"code","9d411c97":"code","c6a8f332":"code","4b205f18":"code","0b5afc45":"code","5a53579d":"code","9d0b0570":"code","97363119":"code","2818a13b":"code","97cddb60":"code","ebdf6ddf":"code","2fafce14":"code","96505651":"code","3647a1a5":"code","85e3b9fb":"code","3cfb0d7b":"code","2e751f52":"markdown","a168ac09":"markdown","fa658a4e":"markdown","93db3a33":"markdown","afb045a4":"markdown","bc558fdf":"markdown","cf9c1482":"markdown","ea61b77a":"markdown","f8be13b8":"markdown","1dd81da1":"markdown","37d28570":"markdown","1096bb7a":"markdown","d8d78162":"markdown","8a35ec23":"markdown","9bd85623":"markdown","b27d0058":"markdown","0bc39508":"markdown","676a4bda":"markdown","3b24e8d1":"markdown","4f1e06eb":"markdown","96a29762":"markdown","6c78c0f1":"markdown","0cd0721c":"markdown","287c7cd4":"markdown","52c52f0f":"markdown","fb1198b6":"markdown","3b6378be":"markdown","192cd833":"markdown","ca426c7b":"markdown","97e075ff":"markdown","42303c57":"markdown","889eedf6":"markdown","fd5c087b":"markdown","5c17c1d7":"markdown","d6a289e5":"markdown","f227f1f4":"markdown","9df22840":"markdown","6ca64a1b":"markdown","8d86b05e":"markdown","004d8777":"markdown","b2a08763":"markdown","92fb1dc0":"markdown","458b7e8c":"markdown","90c0ef72":"markdown","61421fe8":"markdown","f076eb14":"markdown","35584c03":"markdown","17301286":"markdown","416179ad":"markdown","f219c4dc":"markdown","a7209c55":"markdown","73312689":"markdown","0596e2f1":"markdown","0200f150":"markdown","f3a191da":"markdown","54d7cbc6":"markdown","1a1be3b3":"markdown","74e98dfd":"markdown","a7491091":"markdown"},"source":{"b020bdf1":"import numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns","811b4612":"data = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')\ndata.head(10)","9fc85615":"print(\"Total Rows in a Data: \", data.shape[0])\nprint(\"Total Columns in a Data: \", data.shape[1])","82da6bc7":"print(\"\\t****************\")\nprint(\"\\tData Information:\")\nprint(\"\\t****************\\n\")\ndata.info()","4f48b811":"print(\"\\t****************\")\nprint(\"\\tData Describe:\")\nprint(\"\\t****************\\n\")\ndata.describe()","e44ca235":"print(\"Null Values in each column:\")\nprint(data.isna().any())","a8c3feca":"print(\"Unique Values in each column:\")\nprint(\"----------------------------\\n\")\ncols = list(data.columns)\nfor c in cols:\n    print(c.upper(), \":\", data[c].unique(), \"\\n\")","a9e2d3b8":"print(\"The most younger person in a data:\")\nprint(data.iloc[data.age.idxmin()])","ab8605c2":"print(\"The most older person in a data:\")\nprint(data.iloc[data.age.idxmax()])","e3d46a0c":"fig, ax = plt.subplots(figsize=(14, 8))\nsns.countplot(y=data.age)\n# sns.countplot(y=data['age'], order=data['age'].value_counts().index)\nplt.title(\"Age Count\")\nplt.xlabel(\"Count\")\nplt.ylabel(\"Age\")\nax.set(xticks=range(0, 21))\nplt.show()","db304152":"sns.boxplot(data.age)\nplt.show()","5dd66f91":"fig, ax = plt.subplots(figsize=(14, 5))\nax = plt.plot(data.groupby('age')['target'].mean())\nplt.xticks(range(min(data.age)-1, max(data.age)+1))\nplt.show()","9babc1c1":"data[data.age == 61]","7b69f6bb":"data[data.age > 70]","b22bc41b":"print(\"Number of Unique Values in Gender Column: \", data.sex.nunique(), \"\\n\")\nprint(\"Unique Values count are:\")\nprint(data.sex.value_counts())","227b1e20":"ax = sns.countplot(data.sex, palette='Set3')\nplt.xlabel(\"Sex\")\nplt.title(\"Gender Occuring in a Dataset\")\nplt.show()","26d035fa":"data.groupby('sex')['target'].value_counts()","7b4b8223":"fig, ax = plt.subplots(figsize=(8, 6))\nax = sns.countplot(x='sex', hue='target', data=data, palette='Set2')\nplt.xlabel(\"Gender (0=Female, 1=Male)\")\nplt.show()","847bccc1":"ax = sns.catplot(x='target', col='sex', data=data, kind='count')","c4fa1969":"print(\"Number of Unique Values in Chest Pain Type Column: \", data.cp.nunique(), \"\\n\")\nprint(\"Unique Values count are:\")\nprint(data.cp.value_counts())","19e651f0":"sns.countplot(data.cp)\nplt.title(\"Chest Pain Count\")\nplt.xlabel(\"Chest Pain Type\")\nplt.show()","92cd0d99":"data.groupby('cp')['target'].value_counts()","c9d66045":"ax = sns.countplot(x='cp', data=data, hue='target')\nplt.xlabel(\"Chest Pain Type (lowest to highest)\")\nplt.ylabel(\"Count\")\nplt.show()","6dc83c51":"print(\"Number of Unique Values in Fasting Blood Sugar Column: \", data.fbs.nunique(), \"\\n\")\nprint(\"Unique Values count are:\")\nprint(data.fbs.value_counts())","43d3386c":"data.groupby('fbs')['target'].value_counts()","f11b3ded":"sns.countplot(x='fbs', hue='target', data=data, palette='Set2')\nplt.xlabel(\"Fasting Blood Sugar (0=False, 1=True)\")\nplt.ylabel(\"Count\")\nplt.show()","040bb241":"print(\"Number of Unique Values in Resting Electrocardiographic Column: \", data.restecg.nunique(), \"\\n\")\nprint(\"Unique Values count are:\")\nprint(data.restecg.value_counts())","c9ed6c25":"data.groupby('restecg')['target'].value_counts()","277dbb90":"sns.countplot(x=data['restecg'])\nplt.xlabel(\"Resting Electrocardiographic Results\")\nplt.show()","d992cc48":"print(\"Number of Unique Values in Thalach Column: \", data.thalach.nunique(), \"\\n\")\nprint(\"Unique Values count are:\")\nprint(data.thalach.value_counts())","c0be781d":"sns.distplot(data.thalach)\nplt.xlabel(\"Heart Rate\")\nplt.show()","e0c3a0a3":"sns.scatterplot(x='age', y='thalach', data=data)\nplt.xlabel('Age')\nplt.ylabel('Heart Rate')\nplt.show()","01c1727a":"print(\"Number of Unique Values in Exercise Induced Angina Column: \", data.exang.nunique(), \"\\n\")\nprint(\"Unique Values count are:\")\nprint(data.exang.value_counts())","b68d6242":"data.groupby('exang')['target'].value_counts()","3eb1a413":"sns.countplot(y=data.exang)\nplt.xlabel(\"Count\")\nplt.ylabel(\"Exercised Induced Angina\")\nplt.show()","4c39000c":"ax = sns.countplot(x='exang', data=data, hue='target')\nplt.xlabel(\"Exercised Induced Angina (0=No, 1=Yes)\")\nplt.ylabel(\"Count\")\nplt.show()","110aed1e":"plt.title(\"The Slope of the Peak Exercise \")\nsns.countplot(x=data['slope'])\nplt.xlabel(\"Slope\")\nplt.ylabel(\"Count\")\nplt.show()","1f722999":"plt.title(\"The Slope of the Peak Exercise \")\nsns.countplot(x=data['slope'], hue=data['target'], data=data)\nplt.xlabel(\"Slope\")\nplt.ylabel(\"Count\")\nplt.show()","6c329114":"sns.countplot(x=data['ca'])\nplt.title(\"Number of Major Vessels\")\nplt.show()","d05a8473":"sns.countplot(x=data['thal'])\nplt.title(\"Blood Disorder called Thalassemia\")\nplt.show()","4ac79db2":"sns.countplot(x=data['target'])\nplt.title(\"Target Count\")\nplt.show()","9d411c97":"data.corr()['target'].sort_values(ascending=False)","c6a8f332":"fig, ax = plt.subplots(figsize=(15, 15))\nsns.heatmap(data.corr(), annot=True)\nplt.show()","4b205f18":"sns.pairplot(data[['cp', 'restecg', 'thalach', 'slope', 'target']])\nplt.show()","0b5afc45":"X1 = data.iloc[:, :-1]\ny1 = data.iloc[:, -1]\n\ndf = data[['cp', 'restecg', 'thalach', 'slope', 'target']]\nX2 = df.iloc[:, :-1]\ny2 = df.iloc[:, -1]\n\nprint(\"Columns in Data1: \", list(data.columns))\nprint(\"Data1 Shape: \", data.shape)\nprint(\"X1 Shape: \", X1.shape)\nprint(\"y1 Shape: \", y1.shape)\nprint()\n\nprint(\"Columns in Data2: \", list(df.columns))\nprint(\"Data2 Shape: \", df.shape)\nprint(\"X2 Shape: \", X2.shape)\nprint(\"y2 Shape: \", y2.shape)","5a53579d":"from sklearn.model_selection import train_test_split\ntrain_X1, test_X1, train_y1, test_y1 = train_test_split(X1, y1, test_size=0.2, random_state=42)\ntrain_X2, test_X2, train_y2, test_y2 = train_test_split(X2, y2, test_size=0.2, random_state=42)","9d0b0570":"from sklearn.tree import DecisionTreeClassifier\nDTC = DecisionTreeClassifier()\nDTC.fit(train_X1, train_y1)\npred_dtc1 = DTC.predict(test_X1)\nscore_dtc1 = round(DTC.score(test_X1, test_y1)*100, 2)\nprint(\"Accuracy of Data 1 with Decision Tree Classifier is: \", score_dtc1, \"%\")\nprint()\nDTC.fit(train_X2, train_y2)\npred_dtc2 = DTC.predict(test_X2)\nscore_dtc2 = round(DTC.score(test_X2, test_y2)*100, 2)\nprint(\"Accuracy of Data 2 with Decision Tree Classifier is: \", score_dtc2, \"%\")","97363119":"from sklearn.ensemble import RandomForestClassifier\nRFC = RandomForestClassifier() # n_estimators = 100\nRFC.fit(train_X1, train_y1)\npred_rfc1 = RFC.predict(test_X1)\nscore_rfc1 = round(RFC.score(test_X1, test_y1)*100, 2)\nprint(\"Accuracy of Data 1 with Random Forest Classifier is: \", score_rfc1, \"%\")\nprint()\nRFC.fit(train_X2, train_y2)\npred_rfc2 = RFC.predict(test_X2)\nscore_rfc2 = round(RFC.score(test_X2, test_y2)*100, 2)\nprint(\"Accuracy of Data 2 with Random Forest Classifier is: \", score_rfc2, \"%\")","2818a13b":"from sklearn.linear_model import LogisticRegression\nLR = LogisticRegression()\nLR.fit(train_X1, train_y1)\npred_lr1 = LR.predict(test_X1)\nscore_lr1 = round(LR.score(test_X1, test_y1)*100, 2)\nprint(\"Accuracy of Data 1 with Logistic Regression is: \", score_lr1, \"%\")\nprint()\nLR.fit(train_X2, train_y2)\npred_lr2 = LR.predict(test_X2)\nscore_lr2 = round(LR.score(test_X2, test_y2)*100, 2)\nprint(\"Accuracy of Data 2 with Logistic Regression is: \", score_lr2, \"%\")","97cddb60":"from sklearn.svm import SVC\nSC = SVC()\nSC.fit(train_X1, train_y1)\npred_sc1 = SC.predict(test_X1)\nscore_sc1 = round(SC.score(test_X1, test_y1)*100, 2)\nprint(\"Accuracy of Data 1 with Support Vector Classifier is: \", score_sc1, \"%\")\nprint()\nSC.fit(train_X2, train_y2)\npred_sc2 = SC.predict(test_X2)\nscore_sc2 = round(SC.score(test_X2, test_y2)*100, 2)\nprint(\"Accuracy of Data 2 with Support Vector Classifier is: \", score_sc2, \"%\")","ebdf6ddf":"from sklearn.linear_model import SGDClassifier\nSGD = SGDClassifier()\nSGD.fit(train_X1, train_y1)\npred_sgd1 = SGD.predict(test_X1)\nscore_sgd1 = round(SGD.score(test_X1, test_y1)*100, 2)\nprint(\"Accuracy of Data 1 with Stochastic Gradient Descent Classifier is: \", score_sgd1, \"%\")\nprint()\nSGD.fit(train_X2, train_y2)\npred_sgd2 = SGD.predict(test_X2)\nscore_sgd2 = round(SGD.score(test_X2, test_y2)*100, 2)\nprint(\"Accuracy of Data 2 with Stochastic Gradient Descent Classifier is: \", score_sgd2, \"%\")","2fafce14":"from sklearn.neighbors import KNeighborsClassifier\nKNN = KNeighborsClassifier(n_neighbors=10) # default n_neighbors = 5\nKNN.fit(train_X1, train_y1)\npred_knn1 = KNN.predict(test_X1)\nscore_knn1 = round(KNN.score(test_X1, test_y1)*100, 2)\nprint(\"Accuracy of Data 1 with K-Nearest Neighbor Classifier is: \", score_knn1, \"%\")\nprint()\nKNN.fit(train_X2, train_y2)\npred_knn2 = KNN.predict(test_X2)\nscore_knn2 = round(KNN.score(test_X2, test_y2)*100, 2)\nprint(\"Accuracy of Data 2 with K-Nearest Neighbor Classifier is: \", score_knn2, \"%\")","96505651":"from sklearn.ensemble import AdaBoostClassifier\nABC = AdaBoostClassifier() # n_estimators = 50 default\nABC.fit(train_X1, train_y1)\npred_abc1 = ABC.predict(test_X1)\nscore_abc1 = round(ABC.score(test_X1, test_y1)*100, 2)\nprint(\"Accuracy of Data 1 with AdaBoost Classifier is: \", score_abc1, \"%\")\nprint()\nABC.fit(train_X2, train_y2)\npred_abc2 = ABC.predict(test_X2)\nscore_abc2 = round(ABC.score(test_X2, test_y2)*100, 2)\nprint(\"Accuracy of Data 2 with AdaBoost Classifier is: \", score_abc2, \"%\")","3647a1a5":"model1 = pd.DataFrame(\n    {\n        'Models': [\n            'Decision Tree Classifier',\n            'Random Forest Classifier',\n            'Logistic Regression',\n            'Support Vector Machine',\n            'Stochastic Gradient Descent',\n            'K-Nearest Neighbors',\n            'AdaBoost Classifier'\n        ],\n        'Scores': [\n            score_dtc1,\n            score_rfc1,\n            score_lr1,\n            score_sc1,\n            score_sgd1,\n            score_knn1,\n            score_abc1\n        ],\n    }\n)\nmodel2 = pd.DataFrame(\n    {\n        'Models': [\n            'Decision Tree Classifier',\n            'Random Forest Classifier',\n            'Logistic Regression',\n            'Support Vector Machine',\n            'Stochastic Gradient Descent',\n            'K-Nearest Neighbors',\n            'AdaBoost Classifier'\n        ],\n        'Scores': [\n            score_dtc2,\n            score_rfc2,\n            score_lr2,\n            score_sc2,\n            score_sgd2,\n            score_knn2,\n            score_abc2\n        ],\n    }\n)","85e3b9fb":"print(\"Models who are Train on Data 1:\")\nmodel1","3cfb0d7b":"print(\"Models who are Train on Data 2:\")\nmodel2","2e751f52":"### Decision Tree Classifier","a168ac09":"### Logistic Regression","fa658a4e":"All the values in a dataset are numerical.","93db3a33":"Column: cp, thalach, slope are +ve correlated to a target while other columns are -ve correlated.","afb045a4":"[Open this link for further knowing of Exercise Induced Angina](https:\/\/www.mayoclinic.org\/diseases-conditions\/angina\/symptoms-causes\/syc-20369373)","bc558fdf":"Here 0 means no pain and 3 means extreme pain","cf9c1482":"This result shows us that 204 people have no Exercise Induced Angina and 99 people have it.","ea61b77a":"As we can see from the above plot, that Male has a higher rate of heart disease.","f8be13b8":"### Exploring Electrographic Column","1dd81da1":"There are more people who have a heart disease in this data.","37d28570":"In this plot, as we can see a Person who has a chest pain type 2 has mostly chances to have heart disease.","1096bb7a":"Now let visualize the above graph with respect to Target variable","d8d78162":"In this dataset mostly people are Males and some are Females","8a35ec23":"As we can see from the above plot, mostly people age are between 50-60","9bd85623":"### Exploring Further Columns","b27d0058":"Mostly people have no Chest Pain","0bc39508":"* age [29-77]\n* sex [1=male, 0=female]\n* chest pain type (4 values) [0, 1, 2, 3]\n* resting blood pressure\n* serum cholestoral in mg\/dl\n* fasting blood sugar > 120 mg\/dl [1=true, 0=false]\n* resting electrocardiographic results (values 0,1,2)\n* maximum heart rate achieved => thalach\n* exercise induced angina [1=yes, 0=no]\n* oldpeak = ST depression induced by exercise relative to rest\n* the slope of the peak exercise ST segment [0, 1, 2]\n* number of major vessels (0-3) colored by flourosopy [0, 1, 2, 3, 4]\n* thal: 3 = normal; 6 = fixed defect; 7 = reversable defect\n* target [1=Have Heart Disease, 0=Don't have Heart Disease]","676a4bda":"the most youngest person is a male and has a heart disease.","3b24e8d1":"### K-Nearest Neighbor Classifier","4f1e06eb":"### Exploring Age Column","96a29762":"### Exploring Gender Column","6c78c0f1":"The person who has a type 2 slope has a higher chance of having Heart Disease","0cd0721c":"### Train Test Split","287c7cd4":"## Data Correlation","52c52f0f":"### Splitting Data","fb1198b6":"In ca column there are 5 categories.","3b6378be":"As we can see 1 and 2 are the highest occuring slopes in a dataset","192cd833":"### Random Forest Classifier","ca426c7b":"In this result, Decision Tree, Random Forest, Logistic Regression, AdaBoost are the best choice for Data 1","97e075ff":"### Support Vector Machine","42303c57":"Thalach = maximum heart rate achieved","889eedf6":"### Exploring Thalach Column","fd5c087b":"Male has a high heart disease rate than female and they are occuring 93 times while female has 72 times occuring","5c17c1d7":"It is left skewed means negative skewed. [For Further Know](https:\/\/www.statisticshowto.datasciencecentral.com\/probability-and-statistics\/skewed-distribution\/)","d6a289e5":"As from the above chart people above 70 has highest chance of having a heart disease.","f227f1f4":"Thalach is a continous column so we have to draw distribute plot","9df22840":"## Import Libraries","6ca64a1b":"the most older person is a male and not has a heart disease.","8d86b05e":"### Exploring Chest Pain Column","004d8777":"There is no outlier in a dataset as we can see from the above plot. The average person age is between 50-60.","b2a08763":"Has from the above output there's no missing values in any column so we don't have to do data cleaning and data filling.","92fb1dc0":"### Exploring Slope Column","458b7e8c":"### Exploring Target Column","90c0ef72":"## Import Dataset","61421fe8":"## Exploratory Data Analysis","f076eb14":"Above graph is illustrating that person who don't have Induced Angina has Heart Disease.","35584c03":"### Exploring Blood Sugar Column","17301286":"## Prediction","416179ad":"### AdaBoost Classifier","f219c4dc":"A person who don't have a Blood Sugar has the highest chance of having Heart Disease.","a7209c55":"As we can see from the above output people who don't have Induced Angina have a higher chance of having Heart Disease.","73312689":"For prediction, i'm going to use \n* Decision Tree Classifier\n* Random Forest Classifier \n* Logistic Regression\n* Support Vector Machine \n* Stochastic Gradient Descent\n* K-Nearest Neighbor Classifier\n* Adaboost Classifier","0596e2f1":"People from the age between 29 to 32 and 70 to 76 has the highest chance of having a heart disease.","0200f150":"Person who has a Chest Pain Type 1 and 2 has the highest chance to have Heart Disease.","f3a191da":"In this result, Stochastic Gradient Descent, Logistic Regression are the best choice for Data 2","54d7cbc6":"### Exploring Exercise Induced Angina Column","1a1be3b3":"### Stochastic Gradient Descent","74e98dfd":"As we can see from the above plot Males are the most in a data","a7491091":"## RESULT:"}}