{"cell_type":{"7ddcaf62":"code","6a5581f0":"code","4ee9a004":"code","98e610f4":"code","04b9c905":"code","0f033e4f":"code","3d3195f6":"code","52d146ec":"code","b985a090":"code","5fbcc601":"code","dcad9ed4":"code","0505e18f":"code","13532762":"code","eadc7b2f":"code","077e302f":"code","f2dbceaa":"code","a9901201":"code","bfa98da0":"code","ccc1e42c":"code","8282f05c":"code","f1e83db2":"code","864bcad3":"code","81f44898":"code","73c3c16f":"code","9c5e1e1f":"code","1fb8ec33":"code","e631d69e":"code","fad96f63":"code","e32a024b":"code","fa6609d1":"code","de35169e":"code","800673f9":"code","7a489efb":"markdown","d8afd09c":"markdown","429ebf6e":"markdown","87dfe611":"markdown","d432389e":"markdown","8408e24e":"markdown","fb41c882":"markdown","4b1108ff":"markdown","e32596ed":"markdown","4cf2c90e":"markdown"},"source":{"7ddcaf62":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6a5581f0":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom sklearn.cluster import KMeans \nfrom sklearn.metrics import silhouette_score\nfrom sklearn.preprocessing import StandardScaler","4ee9a004":"df = pd.read_csv('..\/input\/spotify-dataset-19212020-160k-tracks\/data.csv')","98e610f4":"df.head()","04b9c905":"df.count()","0f033e4f":"dfnum = df.drop(['id','artists','key','explicit','mode','name','release_date','duration_ms'], axis = 1)\n","3d3195f6":"dfnumgraph = dfnum.sample(frac = 0.001)","52d146ec":"sns.boxplot(x = dfnumgraph.energy ,data = dfnumgraph)","b985a090":"sns.boxplot(x = dfnumgraph.instrumentalness ,data = dfnumgraph)","5fbcc601":"sns.boxplot(x = dfnumgraph.danceability ,data = dfnumgraph)","dcad9ed4":"sns.boxplot(x = dfnumgraph.loudness ,data = dfnumgraph)","0505e18f":"sns.boxplot(x = dfnumgraph.speechiness ,data = dfnumgraph)","13532762":"plt.hist(dfnum.year, bins=99)","eadc7b2f":"%matplotlib inline\nfrom matplotlib import pyplot\nimport plotly.express as px\nfig = px.scatter_matrix(dfnumgraph)\nfig.update_layout(\n    title='Spotify',\n    width=2000,\n    height=2000)\n\nfig.show()","077e302f":"corr = dfnum.corr()\nmask = np.triu(np.ones_like(corr, dtype=bool))\nf, ax = plt.subplots(figsize=(11, 9))\ncmap = sns.diverging_palette(230, 20, as_cmap=True)\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","f2dbceaa":"sns.jointplot(\"acousticness\", \"energy\", dfnumgraph, kind='kde')","a9901201":"sns.jointplot(\"energy\", \"instrumentalness\", dfnumgraph, kind='kde')","bfa98da0":"sns.jointplot(\"loudness\", \"acousticness\", dfnumgraph, kind='kde')","ccc1e42c":"sns.jointplot(\"danceability\", \"liveness\", dfnumgraph, kind='kde')","8282f05c":"scaler = StandardScaler()\nscaled_features = scaler.fit_transform(dfnum)\nkmeans_kwargs = {\"init\": \"random\",\n       \"n_init\": 10,\n      \"max_iter\": 300,\n      \"random_state\": 42,}\n   \n\nsse = [] \nfor k in range(1, 11):\n    kmeans = KMeans(n_clusters=k, **kmeans_kwargs)\n    kmeans.fit(scaled_features)\n    sse.append(kmeans.inertia_)","f1e83db2":"plt.style.use(\"fivethirtyeight\")\nplt.plot(range(1, 11), sse)\nplt.xticks(range(1, 11))\nplt.xlabel(\"Number of Clusters\")\nplt.ylabel(\"SSE\")\nplt.show()","864bcad3":"dfpetit = df.sample(frac = 0.05)\ndfnumpetit = dfpetit.drop(['id','artists','key','explicit','mode','name','release_date','duration_ms'], axis = 1)\n","81f44898":"L=list(dfpetit.name)","73c3c16f":"from scipy.cluster.hierarchy import dendrogram, linkage \nimport scipy.cluster.hierarchy as sch","9c5e1e1f":"Z = linkage(dfnumpetit,method='ward',metric='euclidean') \nplt.figure(figsize=(12,12))\nplt.title(\"CAH\") \ndendrogram(Z,labels=dfnumpetit.index,no_labels=True,color_threshold=1200)\nplt.show()","1fb8ec33":"groupes_cah = sch.fcluster(Z,t=1200,criterion='distance') \nprint(np.unique(groupes_cah).size, \"groupes constitu\u00e9s\")","e631d69e":"dfnumpetit['name'] = L\ndfnumpetit.head()","fad96f63":"idg = np.argsort(groupes_cah) \ngdf=dfnumpetit.iloc[idg]\ngdf['groupe']=groupes_cah[idg]\ngdf.groupby(['groupe'])\nprint(gdf)","e32a024b":"gdf.head()","fa6609d1":"print(gdf.loc[gdf['groupe']==3,:])\n","de35169e":"dfpetit.to_csv('dfpetit2.csv')","800673f9":"print(gdf.loc[gdf['name']== 'Home Tonight',:])","7a489efb":"(8)","d8afd09c":"(9)","429ebf6e":"On peut voir qu'il n'y a pas de valeurs manquantes dans les donn\u00e9es. ","87dfe611":"(10)","d432389e":"On cherche les variables les plus corr\u00e9l\u00e9s afin d'am\u00e9liorer l'efficacit\u00e9 du clustering.","8408e24e":"(7)","fb41c882":"(12)","4b1108ff":"(11)","e32596ed":"(13)","4cf2c90e":"(6)"}}