{"cell_type":{"bb995b9d":"code","12e49fbb":"code","84534d38":"code","89abaf8d":"code","d55d3a9a":"code","f8e23d05":"code","50148c02":"code","77bbc7fd":"code","32cffb3e":"code","ca2b175e":"code","d749c3e8":"code","42cc1cf4":"code","f10b48fd":"code","11b7511d":"code","e603ef82":"code","dee75d98":"code","8c587401":"code","b46f8e22":"code","c61ee528":"code","cad80644":"code","154252db":"code","ea0c8d19":"code","1fb253fb":"code","6bbb2d7a":"code","56148003":"code","9547848c":"code","6a4c3909":"code","be6046e1":"code","2c8516d0":"code","103eec83":"code","bec24677":"markdown","7894c42e":"markdown","d51d9231":"markdown","86c4ce70":"markdown","f5aebcec":"markdown","ce27d19a":"markdown","371e5fec":"markdown","de5ceaac":"markdown","7ae89898":"markdown","03b16e88":"markdown","eac1a842":"markdown","a0e45676":"markdown","bccaf603":"markdown","d1a01b0a":"markdown"},"source":{"bb995b9d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","12e49fbb":"#Data Processing\nimport pandas as pd\nimport numpy as np\n\n#Data Visulaisation\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px\n\nimport os","84534d38":"files = [filename for filename in os.listdir(r'..\/input\/uber-pickups-in-new-york-city') if filename.startswith(\"uber-\")]\nfiles","89abaf8d":"files.remove('uber-raw-data-janjune-15.csv')","d55d3a9a":"path=r'..\/input\/uber-pickups-in-new-york-city'\n\nData=pd.DataFrame()\n\nfor file in files:\n    df=pd.read_csv(path+\"\/\"+file,encoding='utf-8')\n    Data=pd.concat([df,Data])","f8e23d05":"Data.sample(frac=0.6)","50148c02":"Data.shape","77bbc7fd":"data=Data.copy()","32cffb3e":"data.dtypes","ca2b175e":"data['Date\/Time']=pd.to_datetime(data['Date\/Time'], format='%m\/%d\/%Y %H:%M:%S')","d749c3e8":"data.dtypes","42cc1cf4":"data['month']=data['Date\/Time'].dt.month\ndata['weekday']=data['Date\/Time'].dt.day_name()\ndata['day']=data['Date\/Time'].dt.day\ndata['hour']=data['Date\/Time'].dt.hour\ndata['minute']=data['Date\/Time'].dt.minute","f10b48fd":"data.head()","11b7511d":"data.dtypes","e603ef82":"Demand=(data.groupby(['Lat','Lon']).count()['Date\/Time']).reset_index()\nDemand.columns=['Latitude','Longitude','Number of Trips']","dee75d98":"import folium as fo\nfrom folium.plugins import HeatMap","8c587401":"base=fo.Map()","b46f8e22":"HeatMap(Demand,zoom=40,radius=10).add_to(base)\nbase","c61ee528":"weekday=pd.DataFrame(data[['day','month']].value_counts()).reset_index()\nweekday.columns=['Day','Month','Count']\nweekday['Day']=pd.Categorical(weekday['Day'],categories=[1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21 ,22 ,23 ,24 ,25 ,26 ,27 ,28 ,29 ,30 ,31],ordered=True)\nweekday['Month']=pd.Categorical(weekday['Month'],categories=[4,5,6,7,8,9],ordered=True)","cad80644":"fig1=px.bar(weekday,\n      x='Day',\n      y='Count',\n      color='Month',\n      template='seaborn',\n      labels={'Count':'Number of Trips','Day':'Day of the Month'},\n      width=1100,\n      height=500,\n      category_orders={\"Month\": [4,5,6,7,8,9]},\n      color_discrete_sequence=['#2C2C3E','#2E5467','#1E7F84','#33AC8D','#78D584','#D1FA74'],\n    text='Count')\nfig1.update_traces(texttemplate='%{text:.2s}', textposition='outside')\nfig1.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig1.update_layout(title_text='Uber trip by Months and Days', title_x=0.5)\nfig1.show()","154252db":"hour=pd.DataFrame(data['hour'].value_counts()).reset_index()\nhour.columns=['Hour','Count']\nhour=hour.sort_values(by='Hour')","ea0c8d19":"fig2=px.bar(hour,\n      x='Hour',\n      y='Count',\n      template='seaborn',\n      labels={'Count':'Number of trips taken'},\n      height=500,\n      width=1100,\n      text='Count'\n      )\n#fig2.update_traces(texttemplate='%{text:.1s}', textposition='outside')\n#fig2.update_layout(title_text='Uber Rides by hour',title_x=0.5)\nfig2.show()","1fb253fb":"plt.figure(figsize=(20,20))\nplt.style.use(\"seaborn\")\ncolors = ['#636EFA']\nfor i, month in enumerate(data['month'].unique()):\n    plt.subplot(3,2,i+1)\n    data[data['month']==month]['hour'].hist(color=colors)","6bbb2d7a":"trips_by_days=pd.DataFrame(data['day'].value_counts()).reset_index()\ntrips_by_days.columns=['Days','Number of Trips']\ntrips_by_days=trips_by_days.sort_values(by='Days')","56148003":"fig3=px.histogram(trips_by_days,\n            x='Days',\n            y='Number of Trips',\n            height=400,\n            width=1100,\n            nbins=31,\n            template='seaborn',\n            color_discrete_sequence=['#C78845'])\nfig3.update_layout(bargap=0.2)\nfig3.update_layout(title_text='Distribution of trips by days in a Month',title_x=0.5)\nfig3.show()","9547848c":"trips_by_loc=data[['Base','hour']].value_counts().reset_index()\ntrips_by_loc.columns=['Base','Hour','Number of Trips']\ntrips_by_loc","6a4c3909":"fig4=px.scatter(trips_by_loc,\n            x='Hour',\n            y='Number of Trips',\n            color='Base',\n            template='seaborn',\n            color_discrete_sequence=['#50F9F1','#6AE5A8','#96C96A','#B7AA47','#C78845'])\nfig4.update_layout(title_text='Trips by location and time of the day', title_x=0.5)\nfig4.show()","be6046e1":"hour_week=data.groupby(['weekday','hour']).count()['Date\/Time']\nhour_week\n#hour_week.columns=['WeekDay','Hour','Number of Trips']","2c8516d0":"pivot=hour_week.unstack()\npivot","103eec83":"plt.figure(figsize=(9,9))\nsns.set_theme(style='darkgrid')\nfig5=sns.heatmap(pivot,cmap='coolwarm')","bec24677":"# **Doing the Geospatial Analysis to understand the demand for Cabs**","7894c42e":"# **Listing down all the files that we need**","d51d9231":"**Which month and which day of that month, marks the highest demand for Uber trips?**","86c4ce70":"# **Data Pre-processing**","f5aebcec":"**Base Locations recording highest number of pick-ups**","ce27d19a":"Data.sample(frac=0.6)","371e5fec":"**Importing Libraries**","de5ceaac":"**Cross Analysis done between hours and Weekdays**","7ae89898":"**Distribution in trips shown by days in a month**","03b16e88":"# **Checking Data Attributes**","eac1a842":"# **Concatenating the Data**","a0e45676":"# **Removing the files that we do not require**","bccaf603":"**Which hour is the busiest in the day for Uber?**","d1a01b0a":"# **Looking at the Sample Data**"}}