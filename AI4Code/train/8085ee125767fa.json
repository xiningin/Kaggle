{"cell_type":{"6067d112":"code","47e92456":"code","441ecbb1":"code","a94181ba":"code","8c7ad6e4":"code","05f33a99":"code","110cf4e3":"code","a446db1a":"code","5a07325b":"code","7cc2d526":"code","8c130b83":"code","f3300378":"code","7d69ddc3":"code","b050f896":"code","3f8c7ac8":"code","add58ca1":"code","642216e8":"code","dbac1a50":"code","0a95c9eb":"code","b42c0664":"markdown"},"source":{"6067d112":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.","47e92456":"#Import Data\ndata=pd.read_csv(\"..\/input\/Iris.csv\")","441ecbb1":"data.info()","a94181ba":"\n#Find corelation between data types.\ndata.corr()","8c7ad6e4":"#Which type of datas can be found in my data?\ndata.columns","05f33a99":"#Write the first 10 row of data\ndata.head(10)","110cf4e3":"#Write theend of 10 row of data\ndata.tail(10)","a446db1a":"#correlation map\nf,ax = plt.subplots(figsize=(20, 20))\nsns.heatmap(data.corr(), annot=True, linewidths=.15, fmt= '.4f',ax=ax)\nplt.show()","5a07325b":"data = data.drop([\"Id\"],axis=1)#axis=1 t\u00fcm sutunu sil demek,axis=0 sat\u0131r sil.\n#dataFrame1.drop([\"yeni_feature\"],axis=1,inplace = True)","7cc2d526":"#correlation map(without ID)\nf,ax = plt.subplots(figsize=(20, 20))\nsns.heatmap(data.corr(), annot=True, linewidths=.15, fmt= '.4f',ax=ax)\nplt.show()","8c130b83":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata.SepalWidthCm.plot(kind = 'line', color = 'blue',label = 'SepalWidthCm',linewidth=2,alpha = 0.8,grid = True,linestyle = ':')\ndata.PetalLengthCm.plot(color = 'red',label = 'PetalLengthCm',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='lower left')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","f3300378":"# Scatter Plot \n# x = PetalLengthCm, y = PetalWidthCm\ndata.plot(kind='scatter', x='PetalLengthCm', y='PetalWidthCm',alpha = 0.9,color = 'green')\nplt.xlabel('PetalLengthCm')              # label = name of label\nplt.ylabel('PetalWidthCm')\nplt.title('PetalLengthCm PetalWidthCm Scatter Plot')    # title = title of plot\nplt.show()","7d69ddc3":"#Histogram Pilot\ndata.PetalLengthCm.plot(kind = 'hist',bins = 40,figsize = (12,12))\nplt.show()","b050f896":"# clf() = cleans it up again you can start a fresh\ndata.PetalLengthCm.plot(kind = 'hist',bins = 50)\nplt.clf()","3f8c7ac8":"#create dictionary and look its keys and values\ndictionary = {'ankara' : '06','istanbul' : '34','izmir' : '35'}\n#ankara=06\n#istanbul=34\n#izmir=35\n#erzurum=25\n\nprint(dictionary)\nprint(dictionary.keys())\nprint(dictionary.values())","add58ca1":"dictionary['ankara'] = \"0606\"    # update existing entry\nprint(dictionary)\ndictionary['istanbul'] = \"3434\"       # Add new entry\nprint(dictionary)\n#del dictionary['izmir']              # remove entry with key 'spain'\nprint(dictionary)\nprint('istanbul' in dictionary)        # check include or not\ndictionary['erzurum'] = \"25\"           #Add new key and value\nprint(dictionary)\ndictionary.clear()                   # remove all entries in dict\nprint(dictionary)","642216e8":"# 1 - Filtering Pandas data frame\nx = data['SepalLengthCm']>7.4   \ndata[x]","dbac1a50":"# This is also same with previous code line. Therefore we can also use 'or' for filtering.\ndata[(data['SepalLengthCm']>7.7) | (data['PetalWidthCm']>2.2)]","0a95c9eb":"# For pandas we can achieve index and value\nfor index,value in data[['SepalLengthCm']][0:5].iterrows():\n    print(index,\" : \",value)","b42c0664":"Hi,\nI think,I have done the first hW of the \"UDEMY-Data Science and Python Course\" successfully.\nPlease give me back support with your ideas.\nThanks for now."}}