{"cell_type":{"793938da":"code","13f7714c":"code","0916ff62":"code","b93493bf":"code","037657c0":"code","2db5ddef":"code","e20a09bc":"code","5c563210":"code","d1c3eebb":"code","a593b517":"code","71344f4c":"code","5bb9c619":"code","d171f9ab":"code","97212dee":"markdown","f787c37f":"markdown","387637e4":"markdown","89437988":"markdown","22e4c7ef":"markdown","b9d91ba5":"markdown","36094e08":"markdown","75671d43":"markdown","bfa9e83f":"markdown","5fb35201":"markdown","9fb9def5":"markdown","a9e032fd":"markdown"},"source":{"793938da":"import pandas as pd\nimport numpy as np\ndf= pd.read_csv(\"..\/input\/VehicleInformation.csv\",sep=\";\")\n#here 'sep' means seperator, it is ',' by default.\n# to learn more about it run pd.read_csv? on your notebook ","13f7714c":"df.head()\n#head() method,by default, gives us the first 5 rows of dataframe or series.\n#and also we have tail(), which gives the last 5 rows by default. we can write any negative or positive number in ().\n#try df.head(100000) or df.head(-50000)","0916ff62":"df.drop_duplicates(inplace=True)\nlen(df)","b93493bf":"df.info()","037657c0":"print(list(df[\"FUEL_TYPE\"].unique()))\nprint(np.min(df[\"MAX_SPEED\"]))\nprint(np.max(df[\"MAX_SPEED\"]))","2db5ddef":"df.drop([\"FUEL_TYPE\",\"MAX_SPEED\",\"BRAND_CODE\",\"VEHICLE_CODE\"],inplace=True,axis=1)  #axis=1 means columns. it is axis=0 by default, which is rows.","e20a09bc":"#lets check again our DataFrame\nprint(len(df))\ndf.head()","5c563210":"y=df[\"VEHICLE_CLASS\"]\nx=df.drop([\"VEHICLE_CLASS\"],axis=1)\n#Dont run the drop method first, you must either run these two together, or y=df[\"VEHICLE_CLASS\"] first. \n#Otherwise, you may lose \"VEHICLE_CLASS\" by dropping it.","d1c3eebb":"print(x.head())\nprint(\"\\n\")\nprint(y.head())","a593b517":"from sklearn.model_selection import train_test_split\nx_train,x_test =train_test_split(x,test_size=0.2,random_state=42)\ny_train,y_test=train_test_split(y,test_size=0.2,random_state=42)","71344f4c":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier(n_neighbors=len(y.unique()))\nknn.fit(x_train,y_train)","5bb9c619":"print(\"score with test_size=0.2 : \",knn.score(x_test,y_test))","d171f9ab":"from sklearn.neighbors import KNeighborsClassifier\nx_train_new,x_test_new =train_test_split(x,test_size=0.3,random_state=42)\ny_train_new,y_test_new=train_test_split(y,test_size=0.3,random_state=42)\nknn=KNeighborsClassifier(n_neighbors=len(y.unique()))\nknn.fit(x_train_new,y_train_new)\nprint(\"score with test_size=0.3 : \",knn.score(x_test_new,y_test_new))\n","97212dee":"Generally, test_size is chosen between 0.30, or 0.25. It depends on the data you have and your way to model.\nWe first use test_size=0.2, and check the accuracy.","f787c37f":"So, we may conclude that either model is not good or or classes are not enough to differentiate.\nBut in either way, this is how KNN Model is used.","387637e4":"Have a quick look at the dataset, via head(),info() or describe() methods.","89437988":"The dataset includes some technical information about vehicles. I collected from various sources from the internet. \nI can't guarantee its truth, but the dataset can be said useful.\n","22e4c7ef":"Let's start with reading dataset,","b9d91ba5":"We have duplicates, we must remove them.","36094e08":"As far as I know, random_state has almost no effect on the model. It simply does split data to the same sets for each run of train_test_split. If we don't specify random_state, each run of the model gives us different results.","75671d43":"If we use test_size=0.3, the accuracy gets lower.","bfa9e83f":"The VEHICLE_CLASS is our target feature. We want to find our whether other features are good enough to predict the class. \nWe have to create x and y for our model, and y will be the target variable which is VEHICLE_CLASS, and x will be the rest.","5fb35201":"inplace=True..it is the short way of writing df=df.drop_duplicates(). ","9fb9def5":"Now, split x and y sets as train and test sets. We use sklearn library for this aim.","a9e032fd":"All values of FUEL_TYPE is \"null\", and MAX_SPEED is 0, we can drop whole these columns. Also BRAND_CODE,VEHICLE_CODE are useless for our prediction model."}}