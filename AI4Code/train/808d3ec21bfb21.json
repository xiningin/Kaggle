{"cell_type":{"e02ff409":"code","53ff0318":"code","e97f49ef":"code","62d96040":"code","a9ad2f0c":"code","6327834b":"code","4bbc8194":"code","2009bce2":"code","69c4f8bf":"code","2f3481a7":"code","47dc999c":"code","7e008ada":"code","a4923179":"code","8fedaccb":"code","016b3f4f":"code","45676874":"code","ef324163":"code","ac79951d":"code","6ea89eb2":"code","284b8286":"code","fbd01f31":"code","366ad057":"code","40e95806":"code","002ba870":"code","5923ca69":"code","27e2a2e0":"code","0af183f0":"code","c4848a05":"markdown","f9b64464":"markdown","bc914b9f":"markdown","3dacf9f8":"markdown","43469a65":"markdown","594a4d37":"markdown","277619a1":"markdown","9a266ac8":"markdown","d4b9a45e":"markdown","71491d96":"markdown","673c3965":"markdown","8c96a311":"markdown","670329e2":"markdown","b335b745":"markdown","ebbf9a7a":"markdown"},"source":{"e02ff409":"import pandas as pd\nimport numpy as np\nfrom sklearn.ensemble import GradientBoostingRegressor","53ff0318":"train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntrain.head()","e97f49ef":"label = train['SalePrice'].values\ntrain = train.drop(['SalePrice','Id'],axis=1)\ntrain.head()","62d96040":"null_train_col = train.columns[train.isnull().sum()>0]\nprint(null_train_col)","a9ad2f0c":"for col in null_train_col:\n    print(col,train[col].isnull().sum(),train[col].dtype)","6327834b":"train['GarageYrBlt'] = train['GarageYrBlt'].fillna(0)\ntrain[\"LotFrontage\"] = train[\"LotFrontage\"].fillna(train[\"LotFrontage\"].mean())\ntrain['MasVnrArea'] = train['MasVnrArea'].fillna(0)","4bbc8194":"train['Electrical'] = train['Electrical'].fillna(train['Electrical'].mode()[0])","2009bce2":"for col in null_train_col:\n    train[col] = train[col].fillna(\"None\")","69c4f8bf":"train.isnull().sum().sum()==0","2f3481a7":"train['YrSold'] = train['YrSold'].astype(str)\ntrain['MoSold'] = train['MoSold'].astype(str)\ntrain['MSSubClass'] = train['MSSubClass'].astype(str)","47dc999c":"num_col = [col for col in train.columns if train[col].dtype!=object]\nobj_col = [col for col in train.columns if train[col].dtype==object]","7e008ada":"train_obj_new = pd.get_dummies(train[obj_col])\ntrain_obj_new.head(10)","a4923179":"feature = pd.concat([train[num_col],train_obj_new],axis=1)\nfeature.head(10)","8fedaccb":"gdb = GradientBoostingRegressor(n_estimators=331,learning_rate=0.1)","016b3f4f":"gdb.fit(feature,label)\nprint(gdb.score(feature,label))","45676874":"test = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\ntest.head(10)","ef324163":"test = test.drop(['Id'],axis=1)\ntest['YrSold'] = test['YrSold'].astype(str)\ntest['MoSold'] = test['MoSold'].astype(str)\ntest['MSSubClass'] = test['MSSubClass'].astype(str)","ac79951d":"null_test_col = test.columns[test.isnull().sum()>0]\nnull_test_col","6ea89eb2":"test['LotFrontage'] = test['LotFrontage'].fillna(train['LotFrontage'].mean())\ntest['MasVnrArea'] = test['MasVnrArea'].fillna(0)\ntest['GarageYrBlt'] = test['GarageYrBlt'].fillna(0)\nfor col in null_test_col:\n    if col in null_train_col:\n        test[col] = test[col].fillna(\"None\")\n    else:\n        test[col] = test[col].fillna(test[col].mode()[0])","284b8286":"test.isnull().sum().sum()==0","fbd01f31":"test_obj_new = pd.DataFrame(data=np.zeros((test.shape[0],train_obj_new.shape[1])),columns=train_obj_new.columns)\ntest_obj_new.head()","366ad057":"test_obj_prev = pd.get_dummies(test[obj_col])\nfor col in test_obj_prev:\n    test_obj_new[col] = test_obj_prev[col]\ntest_obj_new = test_obj_new.drop(['MSSubClass_150'],axis=1)\ntest_obj_new.head()","40e95806":"predict_feature = pd.concat([test[num_col],test_obj_new],axis=1)\npredict_feature.head()","002ba870":"y_pred = gdb.predict(predict_feature)","5923ca69":"submission = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')\nsubmission.head()","27e2a2e0":"submission['SalePrice'] = y_pred\nsubmission.head()","0af183f0":"submission.to_csv('submission.csv',index=False)","c4848a05":"A check if any missing value is still left.","f9b64464":"# **DATA PREPROCESSING**\nThis includes reading the csv files and dealing with missing values.","bc914b9f":"Findin out the numerical value columns and string value columns for one hot encoding on string ones.","3dacf9f8":"# **DATA PREPROCESSING FOR TEST DATA**","43469a65":"Now LotFrontage missing values can be treated as mean values and the missing values of GarageYrBuilt and MasVnrArea has null values since the houses may not have masonry veneer and garages , so gave both of them as 0 value.","594a4d37":"**One-Hot-Encoding**","277619a1":"# **Regression Comes Here**","9a266ac8":"Rest of features were strings like GarageCars etc. which has NaN due to no garages,pools etc. So fill those with \"None\".","d4b9a45e":"# MISSING VALUES","71491d96":"These categories had many similar values so treated them as categorical.","673c3965":"# **PREDICTION**","8c96a311":"# **IMPORTING LIBRARIES**","670329e2":"Finally merging both numerical and encoded columns into one.","b335b745":"Checking the columns where missing values are present.","ebbf9a7a":"Dropping 'Id' and 'SalePrice' columns since 'Id' won't affect features and 'SalePrice' is the target variable."}}