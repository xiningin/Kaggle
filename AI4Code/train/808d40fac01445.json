{"cell_type":{"a866d5eb":"code","8abd44d8":"code","bc2c1de6":"code","17841304":"code","0fa6455a":"code","d264f16a":"code","30fd49cd":"code","c88c4f66":"code","caf75ebd":"markdown","6429c5aa":"markdown","3be7c2a1":"markdown","6c2f5ca2":"markdown","0d49e068":"markdown","62670d44":"markdown","1d8b62e0":"markdown","b2034c19":"markdown"},"source":{"a866d5eb":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n","8abd44d8":"raw_data = pd.read_csv('..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\nraw_data.shape #Dimensions of Dataset\nraw_data.head()\n\nraw_data.isna().sum() # checking na values in each column for null value treatment\n\nfinal_data = raw_data[['name','host_id','host_name','neighbourhood_group','neighbourhood','latitude','longitude','room_type','price','availability_365','calculated_host_listings_count','number_of_reviews']] # selecting relevant columns\nvalues = {'name': 'unknown_name', 'host_name': 'unknown_host_name'} # list to fill dummy values at null data points\nfinal_data= final_data.fillna(value=values) # filling the null values with dummy names\nfinal_data.isna().sum() # no null values now\nfinal_data.shape\n\nfinal_data['price'].quantile([0,.1,.2,.3,.4,.5,.6,.7,.8,.9,.91,.92,.93,.94,.95,.96,.97,.98,.99,1])\n\n# box plot of unprocessed data\nfig = px.box(final_data,y = 'price', notched=True)\nfig.show()\n\nfig = px.histogram(final_data, x=\"price\",nbins = 100 )\nfig.update_layout(showlegend = False)\nfig.show()","bc2c1de6":"# checking quantiles for price distrbution to detect outliers\n\nQ1 = final_data['price'].quantile(.25)\nQ3 = final_data['price'].quantile(.75)\nIQR = Q3 - Q1\nlower_price_bound = Q1 - 1.5*IQR\nupper_price_bound = Q3 + 1.5*IQR\n\n\n# Capping the data between lower_price_bound(0) and upper_price_bound(334)\ndata_upper_bound_cutoff = final_data[final_data[final_data['price']>=lower_price_bound]['price']<=upper_price_bound]\ndata_upper_bound_cutoff.shape\n\n\n#45923 outlier upper bound\n\n\nfig = px.histogram(data_upper_bound_cutoff, x=\"price\",nbins = 20 )\nfig.update_layout(showlegend = False)\nfig.show()\n","17841304":"percentile_95 = final_data['price'].quantile(.95)\n\ndata_95_percentile_cutoff = final_data[final_data[final_data['price']>=lower_price_bound]['price']<=percentile_95]\ndata_95_percentile_cutoff.shape\n\n\n#46454 95 percentile  bound\n\n# Histogram\nfig = px.histogram(data_95_percentile_cutoff, x=\"price\",nbins = 20 )\nfig.update_layout(showlegend = False)\nfig.show()\n","0fa6455a":"#Finally deciding to go with outlier selection model.\n\nfinal_data = data_upper_bound_cutoff\nfinal_data.shape\n# 45923 rows\n\nfinal_data.head()\n\n\n# Room Type booking count analysis\n'''\nroom_type_data =final_data.pivot_table('price', ['room_type'], aggfunc='count').reset_index()\nfig = px.bar(room_type_data, x='room_type', y='price')\n\nfig.update_layout(\n    xaxis_title=\"Room Type\",\n    yaxis_title=\"Booking Count\"\n)\n\nfig.show()\n#Booking for shared room is the lowest\n'''\nroomdf = final_data.groupby('room_type').size()\/final_data['room_type'].count()*100\nlabels = roomdf.index\nvalues = roomdf.values\n\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.2)])\nfig.show()\n\n\nlocation_subset_data = final_data[['neighbourhood_group','neighbourhood']].drop_duplicates()\nlocation_subset_data = location_subset_data.pivot_table('neighbourhood',['neighbourhood_group'],aggfunc='count').reset_index()\nfig = px.bar(location_subset_data, x='neighbourhood_group', y='neighbourhood')\nfig.update_layout(\n    xaxis_title=\"Neighbourhood_group\",\n    yaxis_title=\"Neighbourhood count\"\n)\nfig.show()\n\n","d264f16a":"# Neighbour hood group analysis\n'''\nneighbourhood_group_subset_data = final_data[['neighbourhood_group','name']].drop_duplicates()\nneighbourhood_group_subset_data = neighbourhood_group_subset_data.pivot_table('name',['neighbourhood_group'],aggfunc='count').reset_index()\nfig = px.bar(neighbourhood_group_subset_data, x='neighbourhood_group', y='name')\nfig.update_layout(\n    xaxis_title=\"Neighbourhood_group\",\n    yaxis_title=\"airbnb location count\"\n)\nfig.show()\n\n\n\nneighbour_group_data =final_data.pivot_table('price', ['neighbourhood_group'], aggfunc='mean').reset_index()\nfig = px.bar(neighbour_group_data, x='neighbourhood_group', y='price')\nfig.show()\n# the avg price at manhatten is the highest\n'''\n\n\nfig = px.box(final_data,y = 'price',x = 'neighbourhood_group', notched=True)\nfig.show()\n\n\n\nneighbour_group_df1 =final_data.pivot_table(['name'] , ['neighbourhood_group'], aggfunc='count').reset_index()\nneighbour_group_df2 =final_data.pivot_table(['price'] , ['neighbourhood_group'], aggfunc='mean').reset_index()\nneighbour_group_df = pd.merge(neighbour_group_df1, neighbour_group_df2, on='neighbourhood_group')\nneighbour_group_df = neighbour_group_df.rename(columns={'neighbourhood_group':'neighbourhood_group','name':'airbnb_count','price':'price'})\nfig = px.bar(neighbour_group_df, x='neighbourhood_group', y='price',color = 'airbnb_count')\nfig.update_layout(showlegend = False,title = \"Neighbourhood_group vs (Average Price and count of Airbnb locations)\")\nfig.show()\n\n\n\n#options = ['Brooklyn','Manhatten'] \n#final_data_subset = final_data[final_data['neighbourhood_group'].isin(options)]\nneighbour_df1 =final_data.pivot_table(['name'] , ['neighbourhood'], aggfunc='count').reset_index()\nneighbour_df2 =final_data.pivot_table(['price'] , ['neighbourhood'], aggfunc='mean').reset_index()\nneighbour_df = pd.merge(neighbour_df1, neighbour_df2, on='neighbourhood')\nneighbour_df = neighbour_df.rename(columns={'neighbourhood':'neighbourhood','name':'airbnb_count','price':'price'})\n#neighbour_df = neighbour_df[neighbour_df['neighbourhood']=='Astoria']\nfig = px.scatter(neighbour_df, x=\"neighbourhood\", y=\"price\",color = 'airbnb_count',\n                 size='price')\nfig.update_layout(showlegend = False,title = \"Neighbourhood vs (Average Price and count of Airbnb locations)\")\nfig.show()\n#219 points\n\n\n\n\n\n\n\n","30fd49cd":"f,ax = plt.subplots(figsize=(28,20))\nax = sns.scatterplot(y=final_data['latitude'],x=final_data['longitude'],hue=final_data['neighbourhood_group'])\nplt.show()","c88c4f66":"lat_long_subset_data = final_data[final_data['neighbourhood_group']=='Manhattan'][['latitude','longitude','price']].drop_duplicates()\n#lat_long_subset_data = lat_long_subset_data.pivot_table('price',['latitude','longitude'],aggfunc='average').reset_index()\nfig = px.scatter(lat_long_subset_data, x=\"latitude\", y=\"longitude\",color = 'price')\nfig.update_layout(\n    xaxis_title=\"Latitude\",\n    yaxis_title=\"Longitude\",\n    title = 'Manhattan LatLong vs Price Plot'\n)\nfig.show()\n\nlat_long_subset_data = final_data[final_data['neighbourhood_group']=='Brooklyn'][['latitude','longitude','price']].drop_duplicates()\n#lat_long_subset_data = lat_long_subset_data.pivot_table('price',['latitude','longitude'],aggfunc='average').reset_index()\nfig = px.scatter(lat_long_subset_data, x=\"latitude\", y=\"longitude\",color = 'price')\nfig.update_layout(\n    xaxis_title=\"Latitude\",\n    yaxis_title=\"Longitude\",\n    title = 'Brooklyn LatLong vs Price Plot'\n)\nfig.show()\n\nlat_long_subset_data = final_data[final_data['neighbourhood_group']=='Bronx'][['latitude','longitude','price']].drop_duplicates()\n#lat_long_subset_data = lat_long_subset_data.pivot_table('price',['latitude','longitude'],aggfunc='average').reset_index()\nfig = px.scatter(lat_long_subset_data, x=\"latitude\", y=\"longitude\",color = 'price')\nfig.update_layout(\n    xaxis_title=\"Latitude\",\n    yaxis_title=\"Longitude\",\n    title = 'Bronx LatLong vs Price Plot'\n)\nfig.show()\n\nlat_long_subset_data = final_data[final_data['neighbourhood_group']=='Queens'][['latitude','longitude','price']].drop_duplicates()\n#lat_long_subset_data = lat_long_subset_data.pivot_table('price',['latitude','longitude'],aggfunc='average').reset_index()\nfig = px.scatter(lat_long_subset_data, x=\"latitude\", y=\"longitude\",color = 'price')\nfig.update_layout(\n    xaxis_title=\"Latitude\",\n    yaxis_title=\"Longitude\",\n    title = 'Queens LatLong vs Price Plot'\n)\nfig.show()\n\nlat_long_subset_data = final_data[final_data['neighbourhood_group']=='Staten Island'][['latitude','longitude','price']].drop_duplicates()\n#lat_long_subset_data = lat_long_subset_data.pivot_table('price',['latitude','longitude'],aggfunc='average').reset_index()\nfig = px.scatter(lat_long_subset_data, x=\"latitude\", y=\"longitude\",color = 'price')\nfig.update_layout(\n    xaxis_title=\"Latitude\",\n    yaxis_title=\"Longitude\",\n    title = 'Staten Island LatLong vs Price Plot'\n)\nfig.show()\n","caf75ebd":"Importing Important Libraries","6429c5aa":"Neighbourhood,Avg Price and Airbnb Location Analysis","3be7c2a1":"Box Plot and Histogram of Raw Data","6c2f5ca2":"Airbnb Geography vs Price Analysis","0d49e068":"Outlier Treatment","62670d44":"Basic Data Analysis Based on Room Type and Neighbourhood","1d8b62e0":"Airbnb Geography Analysis","b2034c19":"Cutting the Data off at 95 Percentile"}}