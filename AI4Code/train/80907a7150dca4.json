{"cell_type":{"0c9944db":"code","55139ba4":"code","3e615ca0":"code","211682ad":"code","21a5e245":"code","2081df06":"code","758517ab":"code","cd1b2bf3":"code","3daef62a":"code","3331f12f":"code","ca9c5493":"code","cbaa3942":"code","98785433":"code","00e6068c":"code","48299bc5":"code","7503c831":"code","eede1ab4":"code","db7cbedf":"code","89a98444":"code","c2bee97b":"code","af9f0faf":"code","f6bb3fa5":"code","7d208ed7":"code","39ed481b":"code","b3b74d7d":"code","2e2a497f":"code","72c2a265":"code","9773c5e3":"code","a408dac4":"code","a1a12bd9":"code","dcda287b":"code","512b482d":"code","443cdbe1":"code","3a10e562":"code","b4b03262":"code","ba5e12c7":"code","b87a573b":"code","d540224e":"code","7792c9e8":"code","ee14136a":"code","64d28052":"code","f6e56862":"code","e096739b":"code","48085e0e":"code","aa12cb75":"code","bcfc40fb":"code","534e0525":"code","52c6fcd9":"code","a371c996":"code","fdce9612":"code","178b7b77":"code","2f5bbbad":"code","31559b5e":"code","7b54d844":"code","b90131de":"code","d2d82b13":"code","bbe73ba6":"code","c4a19028":"code","2433fda9":"code","794d84d2":"code","da69d692":"code","d591fd14":"code","5155bd77":"code","a26e29b5":"code","63ee6d4e":"code","7326365b":"code","5299ff74":"code","5cd1b468":"code","773a5b9d":"code","0e21f23d":"code","0de389db":"code","f9257e50":"code","956def8d":"code","af067b33":"code","3e711edf":"code","837dc32b":"code","ccf94f49":"code","4d48a569":"code","8f3f1e1b":"code","d5c99b3e":"code","1f52c188":"code","b36f8ecb":"code","d77de185":"code","329df964":"code","c9a45d01":"code","fcbd677a":"code","237d48dd":"code","3786c94c":"code","b721c3cb":"code","b01a0b17":"code","e711fa06":"code","c90710d5":"code","fdc3434f":"code","1095cdfa":"code","a9873e1b":"code","0a4a7254":"code","7b2ddb63":"code","7351b86c":"code","2ee91371":"code","6557175f":"code","ba351762":"code","fff49223":"code","4adc6e97":"code","19ab44fa":"code","90dd527a":"code","c9af0202":"code","b488f0d8":"code","3b6df5a1":"code","56cefa82":"code","2c31d87b":"code","1abe8dfb":"markdown","4530a866":"markdown","34aeeb38":"markdown","d093970f":"markdown","73a68b2a":"markdown","6c87cdda":"markdown","fe3ecf46":"markdown","8d0d0adf":"markdown","9bbf0337":"markdown","a899c4fe":"markdown","c34c3264":"markdown","97122ac8":"markdown","6f5c4fc7":"markdown","47803c7f":"markdown","f7fc8353":"markdown","2ed4eb92":"markdown","07021b61":"markdown","900d3058":"markdown","6eb2c75e":"markdown","2d6432cf":"markdown","48040754":"markdown","0969d295":"markdown","af22fc5a":"markdown","ccb2685d":"markdown","89efdd6e":"markdown","82640480":"markdown","72dead46":"markdown","9956f5de":"markdown","9b9b5ce9":"markdown","6d29f155":"markdown","11561ee1":"markdown","a9ddf307":"markdown","b0550090":"markdown","a2b84be5":"markdown","a0f6e385":"markdown","ff73ecd4":"markdown","96629a02":"markdown","1a09fe36":"markdown","e6a5ed6a":"markdown"},"source":{"0c9944db":"#loading the required libraries(This is EDA so we just require 3 library)\n\nimport pandas as pd       #Pandas is used to analyze data\nimport numpy as np\nfrom matplotlib import pyplot as plt    ## Used for Visualization of data\nimport seaborn as sns     #Seaborn is a Python data visualization library based on matplotlib","55139ba4":"# loading dataset which is in csv format using pd.read_csv(filename_with_extension)\n\n\nfifa = pd.read_csv('..\/input\/fifa-data\/players_20.csv')","3e615ca0":"# Printing number of rows and column using shape\n\nfifa.shape","211682ad":"#Printing First 5 rows of the dataset using head()\n\nfifa.head()","21a5e245":"#Printing Last 5 rows of the dataset using tail(nomber of row we want by default it is 5)\n\nfifa.tail()","2081df06":"# Printing All the Column\/ Arttibute available in the fifa dataset\n\nfor col in fifa.columns: \n    print(col) ","758517ab":"# value_counts(): function is used to get a Series containing counts of unique values\n# Here we taking nationality column to get all the unquie values count\n\nfifa['nationality'].value_counts()","cd1b2bf3":"# Here we taking nationality column to get all the unquie values count but only first 10\n\n\nfifa['height_cm'].value_counts()[0:10]","3daef62a":"# Here we taking nationality column to get all the unquie values count but only first 5\n\nfifa['club'].value_counts()[0:5]","3331f12f":"# Checking if Nationality has any null value\n\nfifa['nationality'].isnull().sum()","ca9c5493":"# Looking at all the counts of Players\n\nfifa['nationality'].value_counts()","cbaa3942":"# Here is BarChart of Nationality of FirstTop 8 Country having most Players\n#(Since we have more than 162 Country we are not plotting all)\n\nplt.figure(figsize=(8,5))\nplt.bar(list(fifa['nationality'].value_counts()[:8].keys()),list(fifa['nationality'].value_counts()[:8]),color=\"g\")\nplt.title('Nationality  of FirstTop 8 Country having most Players')\nplt.xlabel('Country')\nplt.ylabel('Number of Players')\nplt.show()        ","98785433":"#print(\"The \", fifa['nationality'].min(),'has the least players')\n#print(\"The \", fifa['nationality'].max(),'has the most players')","00e6068c":"# Checking if short name and wage  has any null value\n\nprint(fifa['short_name'].isnull().sum())# checking for short_name\n\n\nprint(fifa['wage_eur'].isnull().sum())# CHecking for wage_eur","48299bc5":"# First of all creating new dataframe to store players shortname and its wage in euro \n\nplayer_salary = fifa[['short_name','wage_eur']]","7503c831":"# Printing new dataframe to verify\n\nplayer_salary.head()","eede1ab4":"# Here we are arranging players according to highest wage recevied \n\nplayer_salary=player_salary.sort_values(by=['wage_eur'],ascending=False)","db7cbedf":"player_salary.head()","89a98444":"#PLotting Bar graph of Top 5 PLayers having highest wages in euros\n\nplt.figure(figsize=(8,5))\nplt.bar(list(player_salary['short_name'])[0:5],list(player_salary['wage_eur'])[0:5],color=\"r\")\nplt.title('Top 5 PLayers having highest wages in euros')\nplt.xlabel('Players')\nplt.ylabel('Wages_in_Euro')\nplt.show()","c2bee97b":"# Printing Highest and Lowest wage\n\nprint(\"The Highest wage is: \", player_salary['wage_eur'].max())\nprint(\"The Lowest wage is: \", player_salary['wage_eur'].min())","af9f0faf":"# Creating Germany to store players nationality germany\n\nGermany=fifa[fifa['nationality']=='Germany']\nGermany.head()","f6bb3fa5":"# Sorting PLayers nationality German by height in decending order\n\nGermany.sort_values(by=['height_cm'],ascending=False).head()","7d208ed7":"# Sorting PLayers nationality German by weight in decending order\n\nGermany.sort_values(by=['weight_kg'],ascending=False).head()","39ed481b":"# Sorting PLayers nationality German by wage in decending order\n\nGermany.sort_values(by=['wage_eur'],ascending=False).head()","b3b74d7d":"# Printing Highest and Lowest weight\n\nprint(\"The Highest weight of player is: \", Germany['weight_kg'].max(),'kg')\nprint(\"The Lowest weight of player is: \", Germany['weight_kg'].min(),'kg')","2e2a497f":"# Histogram of Players weigth in kg whose Nationality is Germany \n\nGermany['weight_kg'].hist()\nplt.title('Weight of Players whose Nationality is Germany')\nplt.xlabel('Weight in Kg')\nplt.ylabel('No. of Players')\nplt.show()","72c2a265":"# Histogram of Players heigth in cm whose Nationality is Germany \n\nGermany['height_cm'].hist(figsize=(12,8),bins=20)\nplt.title('Players heigth in cm whose Nationality is Germany')\nplt.xlabel('Height in cm')\nplt.ylabel('No. of Players')\nplt.show()","9773c5e3":"# Printing Highest and Lowest height\n\nprint(\"The Highest height of player is: \", Germany['height_cm'].max(),'cm')\nprint(\"The Lowest height of player is: \", Germany['height_cm'].min(),'cm')","a408dac4":"# Printing Highest and Lowest wage\n\nprint(\"The Highest wage of player in euro is: \", Germany['wage_eur'].max(),'\u20ac')\nprint(\"The Lowest wage of player in euro is: \", Germany['wage_eur'].min(),'\u20ac')","a1a12bd9":"# CHecking for null values\n\nfifa['weight_kg'].isnull().sum()","dcda287b":"fifa['weight_kg'].value_counts()","512b482d":"# PLotting Histogram on Weight of Players \n\nfifa['weight_kg'].hist(figsize=(12,8),bins=20,color=\"y\")\nplt.title('Weight of PLayers')\nplt.xlabel('Weight in Kg')\nplt.ylabel('No. of Players')\nplt.show()","443cdbe1":"# Printing Highest and Lowest wage\n\nprint(\"The Highest weight of player is: \", fifa['weight_kg'].max())\nprint(\"The Lowest weight of player is: \", fifa['weight_kg'].min())","3a10e562":"# Printing Highest and Lowest wage with the name of that player\n\nprint(\"The weight of the heaviest player is {} kg in weight and his name is {}\".format(fifa['weight_kg'].max(),\n            list(fifa.loc[fifa['weight_kg'] == fifa['weight_kg'].max()]['short_name'])[0]))\n\nprint(\"The weight of the lightest player is {} kg in weight and his name is {}\".format(fifa['weight_kg'].min(),\n            list(fifa.loc[fifa['weight_kg'] == fifa['weight_kg'].min()]['short_name'])[0]))","b4b03262":"# Checking for null Values\n\nfifa['height_cm'].isnull().sum()","ba5e12c7":"# Value count of overall Height  of players\n\nfifa['height_cm'].value_counts()","b87a573b":"# PLotting Histogram on Weight of Players \n\nfifa['height_cm'].hist(figsize=(12,8),bins=20,color=\"b\")\nplt.title('Height of PLayers')\nplt.xlabel('Height in cm')\nplt.ylabel('No. of Players')\nplt.show()","d540224e":"# Printing Highest and Lowest height\n\nprint(\"The Highest height of player is: \", fifa['height_cm'].max(),'cm')\nprint(\"The Lowest height of player is: \", fifa['height_cm'].min(),'cm')","7792c9e8":"print(\"The height of the Tallest player is {} cm and his name is {}\".format(fifa['height_cm'].max(),\n            list(fifa.loc[fifa['height_cm'] == fifa['height_cm'].max()]['short_name'])[0]))\n\nprint(\"The weight of the Shortest player is {} cm and his name is {}\".format(fifa['height_cm'].min(),\n            list(fifa.loc[fifa['height_cm'] == fifa['height_cm'].min()]['short_name'])[0]))","ee14136a":"# Checking for null values\n\nfifa[['short_name','shooting']].isnull().sum()","64d28052":"# Creating player_shooting to store players name and their shooting score respectively\n\nplayer_shooting= fifa[['short_name','shooting']]","f6e56862":"# sorting players with highest shooting score\n\nplayer_shooting.sort_values(by=['shooting'],ascending=False)","e096739b":"# PLotting Histogram of Shooting Score of Players\n\nplayer_shooting.hist(figsize=(12,8),bins=20)\nplt.title(\"Shooting Scores of Players\")\nplt.xlabel('Shooting Score')\nplt.ylabel('Number of Players')\nplt.show()","48085e0e":"#Plotting Bar graph of Top 5 PLayers having highest wages in euros\n\nplt.figure(figsize=(8,5))\nplt.bar(list(player_shooting['short_name'])[0:5],list(player_shooting['shooting'])[0:5],color=\"r\")\nplt.title('Top 5 PLayers having highest Shooting Score')\nplt.xlabel('Players')\nplt.ylabel('Shooting Score')\nplt.show()","aa12cb75":"# Printing Highest and Lowest Shooting Score\n\nprint(\"The Highest Shooting Score of player is: \", fifa['shooting'].max())\nprint(\"The Lowest  Shooting Score of player is: \", fifa['shooting'].min())","bcfc40fb":"# Printing Highest and Lowest Shooting Score with their name\n\nprint(\"The Shooting Score of the Highest player is {} and his name is {}\".format(fifa['shooting'].max(),\n            list(fifa.loc[fifa['shooting'] == fifa['shooting'].max()]['short_name'])[0]))\n\nprint(\"The Shooting Score of the Lowest player is {}  and his name is {}\".format(fifa['shooting'].min(),\n            list(fifa.loc[fifa['shooting'] == fifa['shooting'].min()]['short_name'])[0]))","534e0525":"# Checking for null values\n\nfifa[['short_name','defending']].isnull().sum()","52c6fcd9":"# Creating player_defending to store players name and their defending score respectively\n\nplayer_defending= fifa[['short_name','defending']]","a371c996":"player_defending=player_defending.sort_values(by=['defending'],ascending=False)","fdce9612":"player_defending.head()","178b7b77":"#Plotting Bar graph of Top 5 PLayers having highest wages in euros\n\nplt.bar(list(player_defending['short_name'])[0:5],list(player_defending['defending'])[0:5],color=\"orange\")\nplt.title('Top 5 PLayers having highest Defending Score')\nplt.xlabel('Players')\nplt.ylabel('Defending Score')\nplt.show()","2f5bbbad":"# Histogram of Defending Score\n\nplayer_defending.hist(figsize=(12,8),bins=20)\nplt.title(\"Defending Scores of Players\")\nplt.xlabel('Defending Score')\nplt.ylabel('Number of Players')\nplt.show()","31559b5e":"# Creating Real_Madrid Club name and Lets explore more about this club\n\nreal_madrid=fifa[fifa['club']=='Real Madrid']","7b54d844":"real_madrid.sort_values(by=['wage_eur'],ascending=False).head()","b90131de":"real_madrid.sort_values(by=['shooting'],ascending=False).head()","d2d82b13":"# Histogram of Club Real Madrid players Nationality\n\nreal_madrid['nationality'].hist(figsize=(17,8))\nplt.title('Real Madrid players Nationality')\nplt.show()","bbe73ba6":"# Histogram of Club Real Madrid players Age\n\nreal_madrid['age'].hist()\nplt.title('Real Madrid players Age')\nplt.xlabel(\"Age\")\nplt.ylabel(\"No. of Players\")\nplt.show()","c4a19028":" print(\"The average of overall rating of players belonging to {} is {}\".format('Real Madrid', \n        round(np.mean(fifa.loc[fifa['club'] == 'Real Madrid']['overall']), 2)))","2433fda9":"# Creating Real_Madrid Club name and Lets explore more about this club\n\nfc_barcelona=fifa[fifa['club']=='FC Barcelona']","794d84d2":"fc_barcelona.sort_values(by=['wage_eur'],ascending=False).head()","da69d692":"fc_barcelona.sort_values(by=['shooting'],ascending=False).head()","d591fd14":"# Histogram of Club Real Madrid players Nationality\n\nfc_barcelona['nationality'].hist(figsize=(15,8))\nplt.title('FC Barcelona players Nationality')\nplt.show()","5155bd77":"# Histogram of Club Real Madrid players Weight in kg\n\nfc_barcelona['weight_kg'].hist()\nplt.title('FC Barcelona players Weight')\nplt.xlabel(\"Weight in kg\")\nplt.ylabel(\"No. of Players\")\nplt.show()","a26e29b5":"# Histogram of Club Real Madrid players Height in cm\n\nfc_barcelona['height_cm'].hist()\nplt.title('FC Barcelona players Height')\nplt.xlabel(\"Height in cm\")\nplt.ylabel(\"No. of Players\")\nplt.show()","63ee6d4e":" print(\"The average of overall rating of players belonging to {} is {}\".format('FC Barcelona', \n        round(np.mean(fifa.loc[fifa['club'] == 'FC Barcelona']['overall']), 2)))","7326365b":"fifa.sort_values(\"potential\", axis = 0, ascending = False)[['short_name', 'club', 'overall', 'potential', 'value_eur']].head(10)","5299ff74":"from scipy.stats import pearsonr\n# Calculating correlation coefficient of Overall Score and Potential of players\ncorr, _ = pearsonr(fifa['overall'], fifa['potential'])\ncorr1, _ = pearsonr(fifa['value_eur'], fifa['potential'])\nprint('Pearsons correlation for overall score and potential is %.3f' % corr)\nprint('Pearsons correlation for value_eur and potential is %.3f' % corr1)","5cd1b468":"# CHecking for null values\n\nfifa['preferred_foot'].isnull().sum()","773a5b9d":"fifa['preferred_foot'].value_counts()","0e21f23d":"from math import pi\nfoot = fifa['preferred_foot'].value_counts().index.to_list()\ncount = fifa['preferred_foot'].value_counts().values\ncount1 = count \/ sum(count) * 100\nangle = count \/ sum(count) * 2 * pi","0de389db":"# Here we are Plotting Pie Chart For Foot most preffered\/ used\n\nplt.pie(count1,labels=foot,colors=['purple','yellow'],shadow=True,explode=[0,0.1])\nplt.title('Pie Chart For Foot')\nplt.legend(title='Foot')\nplt.show()","f9257e50":"fifa['skill_moves'].isnull().sum()","956def8d":"fifa['skill_moves'].value_counts()","af067b33":"no_of_skills = fifa['skill_moves'].value_counts().index.to_list()\ncount = fifa['skill_moves'].value_counts().values\ncount1 = count \/ sum(count) * 100\nangle = count \/ sum(count) * 2 * pi","3e711edf":"# Here we are Plotting Pie Chart For Skill Move\n\nplt.pie(count1,colors=['purple','yellow','red','blue','green'],labels=no_of_skills,shadow=True,explode=[0,0.1,0.1,0.1,1])\nplt.title('Pie Chart For Skill Move')\nplt.legend(title='Skill Move')\nplt.show()","837dc32b":"# Printing Top 5 PLayers having SkillMove = 5\n\nfifa.loc[fifa['skill_moves'] == 5][['skill_moves','short_name']].head(5)","ccf94f49":"# Printing Top 5 PLayers having SkillMove = 4\n\nfifa.loc[fifa['skill_moves'] == 4][['skill_moves','short_name']].head(5)","4d48a569":"# Printing Top 5 PLayers having SkillMove = 3\n\nfifa.loc[fifa['skill_moves'] == 3][['skill_moves','short_name']].head(5)","8f3f1e1b":"# Printing Top 5 PLayers having SkillMove =2\n\nfifa.loc[fifa['skill_moves'] == 2][['skill_moves','short_name']].head(5)","d5c99b3e":"# Printing Top 5 PLayers having SkillMove = 1\n\nfifa.loc[fifa['skill_moves'] == 1][['skill_moves','short_name']].head(5)","1f52c188":"driblling_skill=fifa['skill_dribbling']","b36f8ecb":"# Histogram of Driblling Skill of ALl PLayers\n\ndriblling_skill.hist(figsize=(12,8),bins=20)\nplt.xlabel('Driblling skill score')\nplt.ylabel('No. of Players')\nplt.show()","d77de185":"# Printing Highest and Lowest Shooting Score with their name\n\nprint(\"The Driblling Score of the Highest player is {} and his name is {}\".format(fifa['skill_dribbling'].max(),\n            list(fifa.loc[fifa['skill_dribbling'] == fifa['skill_dribbling'].max()]['short_name'])[0]))\n\nprint(\"The Driblling Score of the Lowest player is {}  and his name is {}\".format(fifa['skill_dribbling'].min(),\n            list(fifa.loc[fifa['skill_dribbling'] == fifa['skill_dribbling'].min()]['short_name'])[0]))","329df964":"# Top 10 Players with Highest Driblling are\n\nfifa.sort_values(by=['skill_dribbling'],ascending=False)[['skill_dribbling','short_name']][0:10]","c9a45d01":"gk=fifa['goalkeeping_reflexes']","fcbd677a":"# Top 5 Players with Highest  goalkeeping_reflexes are\n\nfifa.sort_values(by=['goalkeeping_reflexes'],ascending=False)[['goalkeeping_reflexes','short_name']][0:5]","237d48dd":"# Top 10 Players with Highest  goalkeeping_reflexes are\n\nfifa.sort_values(by=['goalkeeping_reflexes'],ascending=False)[['goalkeeping_reflexes','short_name']][0:10]","3786c94c":"gk_d=fifa['goalkeeping_diving']","b721c3cb":"gk_d","b01a0b17":"# Top 5 Players with Highest  goalkeeping_diving are\n\nnew_gk_d=fifa.sort_values(by=['goalkeeping_diving'],ascending=False)[['goalkeeping_diving','short_name']][0:5]\n\nnew_gk_d","e711fa06":"# Top 10 Players with Highest  goalkeeping_diving are\n\nfifa.sort_values(by=['goalkeeping_diving'],ascending=False)[['goalkeeping_diving','short_name']][0:10]","c90710d5":"plt.pie(new_gk_d['goalkeeping_diving'],colors=['purple','yellow','red','blue','green'],labels=new_gk_d['short_name'],shadow=True,explode=[0.1,0.1,0.1,0.1,0.1])\nplt.title('Pie Chart For GoalKeeping Diving')\n\nplt.show()","fdc3434f":"m_v=fifa['mentality_vision']","1095cdfa":"m_v","a9873e1b":"# Top 5 Players with Highest  mentality_vision are\n\nnew_m_v=fifa.sort_values(by=['mentality_vision'],ascending=False)[['mentality_vision','short_name']][0:5]","0a4a7254":"new_m_v\n","7b2ddb63":"plt.pie(new_m_v['mentality_vision'],colors=['purple','yellow','red','blue','green'],labels=new_m_v['short_name'],shadow=True,explode=[0.1,0.1,0.1,0.1,0.1])\nplt.title('Pie Chart For GoalKeeping Diving')\nplt.show()","7351b86c":"p=fifa['passing']","2ee91371":"# Considering only Top 5 Players\n\nnew_p=fifa.sort_values(by=['passing'],ascending=False)[['passing','short_name']][0:5]","6557175f":"new_p","ba351762":"plt.pie(new_p['passing'],colors=['purple','yellow','red','blue','green'],labels=new_p['short_name'],shadow=True,explode=[0.1,0.1,0.1,0.1,0.1])\nplt.title('Pie Chart For Passing')\nplt.show()","fff49223":"msp=fifa['movement_sprint_speed']","4adc6e97":"# Considering only Top 5 Players\n\nmsp=fifa.sort_values(by=['movement_sprint_speed'],ascending=False)[['movement_sprint_speed','short_name']][0:5]","19ab44fa":"msp","90dd527a":"plt.pie(msp['movement_sprint_speed'],colors=['purple','yellow','red','blue','green'],labels=msp['short_name'],shadow=True,explode=[0.1,0.1,0.1,0.1,0.1])\nplt.title('Pie Chart For Passing')\nplt.show()","c9af0202":"ph=fifa['physic']","b488f0d8":"ph","3b6df5a1":"# Considering only Top 5 Players\n\nph=fifa.sort_values(by=['physic'],ascending=False)[['physic','short_name']][0:5]","56cefa82":"ph","2c31d87b":"plt.pie(ph['physic'],colors=['purple','yellow','red','blue','green'],labels=ph['short_name'],shadow=True,explode=[0.1,0.1,0.1,0.1,0.1])\nplt.title('Pie Chart For Passing')\nplt.show()","1abe8dfb":"- ## Height in cm of Players  ","4530a866":"- ## Name of PLayer and its Wage","34aeeb38":"- # Mentality Vision","d093970f":"- ## Skill Moves ","73a68b2a":"# <a name='ib'><\/a>\n# 3. Importing Library","6c87cdda":"# About Data\n\nThere are 104 attribute and it contains 15,458 players details\n\nWe dont have any tarhet variable since its a EDA project we just to explore the data and analyse as much as possible\n\nSo we dont apply any Machine Learning concept here..!\n\n\n","fe3ecf46":"- ###  Preferred Foot","8d0d0adf":"# [1. WorkFlow](#wf)\n\n# [2. What is EDA ?](#eda)\n\n# [3. Importing Library](#ib)\n\n# [4. Loading Dataset](#ld)\n\n# [5. EDA](#edaa)\n\n# [6. Conclusion](#c)\n<hr style=\"height: 5px\">","9bbf0337":"## Fifa Data --> Data Preprocessing --> EDA --> Conclusion","a899c4fe":"- # Club \n  - ## Real Madrid ","c34c3264":"##### Goal Keeping Diving ","97122ac8":"# Table of Content\n<hr style=\"height: 5px\">","6f5c4fc7":"- # Defending","47803c7f":"##### As we can see Defending has missing values as we are just doing EDA we keep it as it is. \n\n##### We can also fill missing value or just exclude them completly (optional)","f7fc8353":"- ## Driblling Skill ","2ed4eb92":"- ##   Nationality of PLayers","07021b61":"- ##   Goal Keeping \n    - #### Goal Keeping Reflexs","900d3058":"# 6. Conclusion","6eb2c75e":" <a name='wf'><\/a>\n # 1. Work Flow","2d6432cf":"<a name='eda'><\/a>\n# 2. What is EDA( Exploratory Data Analysis)?","48040754":"- # Passing ","0969d295":"### The main purpose of EDA is to help look at data before making any assumptions. It can help identify obvious errors, as well as better understand patterns within the data, detect outliers or anomalous events, find interesting relations among the variables\n\n### Exploratory Data Analysis refers to the critical process of performing initial investigations on data so as to discover patterns,to spot anomalies,to test hypothesis and to check assumptions with the help of summary statistics and graphical representations.\n\n### Final Conclusion on EDA on Fifa data:\n\n- #### Here we have done EDA on fifa Players data \n- #### As Data was preprocessed we didnt do preprocessing of data\n- #### We took various attribute such as weight, height and many more of the player and did EDA \n- #### As This dataset is huge and has 104 attribute here I have done EDA on some attribute only\n- #### Here I have only used Matplotlib only there many other library to use.\n- #### As Data is already preprocessed but it has some missing value(simply avoid it since we are just doing EDA)\n- #### Here I took club and compared their players respectively (You can take more Clubs)\n- #### We also displayed from where most players comed (nationality)\n- #### We also comapared PLayers Wages in Euro\n- #### We also compared GoalKeepers Skills\n- #### We also comapred Players Physic\n\n\n# Thats it for EDA \n\n\n# If you like my work do upvote \n\n\n# Try this and Explore....!","af22fc5a":"![1_7Hgohn5CjJXk_6rmNaV_OQ.png](attachment:1_7Hgohn5CjJXk_6rmNaV_OQ.png)","ccb2685d":"#### From this we can conclude that there are more right foot players as compared to left players in the whole dataset","89efdd6e":"# Exploratory Data Analysis refers to the critical process of performing initial investigations on data so as to discover patterns,to spot anomalies,to test hypothesis and to check assumptions with the help of summary statistics and graphical representations.\n\n# It is a good practice to understand the data first and try to gather as many insights from it. EDA is all about making sense of data in hand,before getting them dirty with it.\n\n# Exploratory Data Analysis (EDA) is an approach\/philosophy for data analysis that employs a variety of techniques (mostly graphical) to:\n\n####  1. Maximize insight into a data set;\n#### 2. Uncover underlying structure;\n#### 3. Extract important variables;\n#### 4. Detect outliers and anomalies;\n#### 5. Test underlying assumptions;\n#### 6. Develop parsimonious models; and\n#### 7. Determine optimal factor settings.\n\n# Here is how the whole process is carried out...","82640480":"- ## Shooting","72dead46":"- # Physic of Players","9956f5de":"- ##  Players from Germany","9b9b5ce9":"- ## Weight of Players in Kg\n","6d29f155":"![eda.png](attachment:eda.png)","11561ee1":"<a name='edaa'><\/a>\n\n# 5. EDA (Exploratory Data Analysis )","a9ddf307":" As we can see most of the players are in between 70 and 85 Kg of weight","b0550090":"<a name='ld'><\/a>\n#  4. Loading dataset","a2b84be5":"#### Here we can see  that all 5 player are having  defending score almost same","a0f6e385":"##### As we can see Shooting has missing values as we are just doing EDA we keep it as it is. \n\n##### We can also fill missing value or just exclude them completly (optional)\n","ff73ecd4":"- # Movement Sprint Speed","96629a02":"- # Top 10 Players having Highest potential ","1a09fe36":"  - ## FC Barcelona","e6a5ed6a":"# Now lets Visualize data  "}}