{"cell_type":{"f8f5d934":"code","2e19728f":"code","bcf84738":"code","24ec2d61":"code","2da8153e":"code","ef221119":"code","3da48ecd":"code","a1fed3db":"code","e9ff6f35":"code","c92edace":"code","88799833":"code","b79d4511":"code","7306a296":"code","6ac00774":"code","a701b8de":"code","33cfec91":"code","18719c12":"code","90c3d0b5":"code","c84d0d4e":"code","d66e3c76":"code","cf0fabfa":"code","a167756b":"code","b7ac7797":"code","a52e78a1":"code","5e5396a2":"code","098e2918":"code","6602d1b2":"code","d32f26b2":"code","ff8ca810":"code","64adce15":"code","cdf434df":"code","63a73abc":"code","1ea7e270":"code","8db57f05":"code","05e7f780":"code","ae08903b":"code","b0402979":"code","a0fe573b":"code","0cf65f50":"code","cd8eb7a6":"code","5b401819":"code","5548811c":"markdown","1a7d0ab5":"markdown","fb0bacfb":"markdown","cf511da4":"markdown","b3ddac31":"markdown","7e38055a":"markdown","7a9b2e4b":"markdown","55c19229":"markdown","43cbbbb6":"markdown","51c6ff62":"markdown","fd14c041":"markdown","4f65fae5":"markdown","8485251f":"markdown","3ecc3c80":"markdown","bfd8076a":"markdown","b462848f":"markdown","23261889":"markdown"},"source":{"f8f5d934":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","2e19728f":"ds = pd.read_csv('..\/input\/amexpert-codelab-2021\/train.csv')\nds.head()\ntrain_y = ds['credit_card_default']\nds.drop('credit_card_default',axis=1,inplace=True)","bcf84738":"sns.countplot(train_y)","24ec2d61":"ds.isnull().sum()\/ds.shape[0]","2da8153e":"numerical = [i for i in ds.columns if ds[i].dtypes != 'object']\nnumerical_ds = ds[numerical]\ncategorical = [i for i in ds.columns if i not in numerical]\ncategorical_ds = ds[categorical]\nnumerical_ds.info()","ef221119":"categorical_ds.info()","3da48ecd":"categorical_ds = categorical_ds[['gender','owns_car','owns_house','occupation_type']]\nfor i in categorical_ds.columns:\n    print(categorical_ds[i].value_counts())","a1fed3db":"plt.figure(figsize=(15,15))\n\nfor i in enumerate(categorical_ds.columns):\n    plt.subplot(4,1, i[0]+1)\n    sns.countplot(categorical_ds[i[1]])\n    ","e9ff6f35":"plt.figure(figsize=(15,15))\nsns.heatmap(numerical_ds.corr(), annot=True)","c92edace":"plt.figure(figsize=(15,15))\nfor i in enumerate(numerical_ds.columns):\n    plt.subplot(4,3,i[0]+1)\n    plt.hist(numerical_ds[i[1]],bins=50)\n    plt.xlabel(i[1])\n    ","88799833":"plt.figure(figsize=(15,15))\nfor i in enumerate(numerical_ds.columns):\n    plt.subplot(4,3,i[0]+1)\n    sns.boxplot(numerical_ds[i[1]])\n    plt.xlabel(i[1])\n    ","b79d4511":"for i in (numerical_ds[['no_of_children','total_family_members','migrant_worker','prev_defaults','default_in_last_6months']].columns):\n               print(numerical_ds[i].value_counts())","7306a296":"ds = pd.read_csv('..\/input\/amexpert-codelab-2021\/train.csv')\nds.head()","6ac00774":"\ntrain_y = ds['credit_card_default']\nds.drop(['credit_card_default','name','customer_id'],axis=1,inplace=True)\n","a701b8de":"def separation(ds):\n    numerical = [i for i in ds.columns if ds[i].dtypes != 'object']\n    numerical_ds = ds[numerical]\n    categorical = [i for i in ds.columns if i not in numerical]\n    categorical_ds = ds[categorical]\n    discrete_numeri = numerical_ds[['no_of_children','total_family_members','migrant_worker','prev_defaults','default_in_last_6months']]\n    numerical_ds.drop(['no_of_children','total_family_members','migrant_worker','prev_defaults','default_in_last_6months'],axis=1,inplace=True)\n    categorical_ds = pd.concat([categorical_ds,discrete_numeri],axis=1)\n    return numerical_ds,categorical_ds","33cfec91":"numerical_ds,categorical_ds = separation(ds)","18719c12":"categorical_ds","90c3d0b5":"def categorical(data):\n    for i in data.columns:\n        data[i]= data[i].fillna(data[i].mode()[0])\n    return data\n","c84d0d4e":"def numerical(data):\n    for i in data.columns:\n        data[i]= data[i].fillna(data[i].mean())\n    return data","d66e3c76":"categorical_ds = categorical(categorical_ds)\nnumerical_ds = numerical(numerical_ds)","cf0fabfa":"numerical_ds ","a167756b":"plt.figure(figsize=(15,15))\nsns.heatmap(numerical_ds.corr(),annot=True)","b7ac7797":"def correlate(dataset,threshold):\n    col_cor= set()\n    cor_mat = dataset.corr()\n    for i in range(len(dataset.columns)):\n        for j in range (i):\n            if cor_mat.iloc[i,j] < threshold:\n                col_cor.add(cor_mat.columns[i])\n    return col_cor","a52e78a1":"numerical_ds = numerical_ds[correlate(numerical_ds,0.90)]","5e5396a2":"out = []\nt = 3\ndef outliers(data):\n    mean = np.mean(data)\n    std = np.std(data)\n    for i in data:\n        z = (i-mean)\/std\n        if np.abs(z)>3:\n            data[numerical_ds[data == i].index[0]] = mean","098e2918":"for i in numerical_ds.columns:\n    outliers(numerical_ds[i])","6602d1b2":"len(out)","d32f26b2":"numerical_ds.describe()","ff8ca810":"from sklearn.preprocessing import LabelEncoder\ndef encode_and_final(data,data1):\n    encode = LabelEncoder()\n    data = data.apply(LabelEncoder().fit_transform)\n    data = pd.concat([data,data1],axis=1)\n    return data","64adce15":"final = encode_and_final(categorical_ds,numerical_ds)\nfinal = pd.concat([final,train_y],axis=1)\n\ntrain_y = final['credit_card_default']\nfinal.drop([\"credit_card_default\"],inplace=True,axis=1)","cdf434df":"from sklearn.preprocessing import MinMaxScaler\n\n\ndef scale(data):\n    scale = MinMaxScaler()\n    data = scale.fit_transform(data)\n    return data\nfinal = pd.DataFrame(scale(final),columns= final.columns)","63a73abc":"from imblearn.over_sampling import SMOTE\nsmote = SMOTE(k_neighbors=6)\nX_smote,Y_smote = smote.fit_resample(final,train_y)\nprint(len(X_smote),len(Y_smote))","1ea7e270":"test = pd.read_csv('..\/input\/amexpert-codelab-2021\/test.csv')\ntest.drop(['name','customer_id'],axis=1,inplace=True)\nnumerical_ds1,categorical_ds1 = separation(test)","8db57f05":"sns.countplot(test['occupation_type'])","05e7f780":"categorical_ds1 = categorical(categorical_ds1)\nnumerical_ds1 = numerical(numerical_ds1)\nnumerical_ds1 = numerical_ds1[correlate(numerical_ds1,0.90)]\ntest_X = encode_and_final(categorical_ds1,numerical_ds1)\ntest_X = pd.DataFrame(scale(test_X),columns= final.columns)","ae08903b":"from sklearn.ensemble import RandomForestClassifier\nmod = RandomForestClassifier(n_estimators=1000,max_depth=4)","b0402979":"mod.fit(X_smote,Y_smote)","a0fe573b":"pre = mod.predict(test_X)","0cf65f50":"sumbm = pd.read_csv('..\/input\/amexpert-codelab-2021\/sample_submission.csv')\ntest = pd.read_csv('..\/input\/amexpert-codelab-2021\/test.csv')","cd8eb7a6":"sumbm = pd.concat([test['customer_id'],pd.DataFrame(pre)],axis=1)\nsumbm.columns = ['customer_id','credit_card_default']","5b401819":"from sklearn.model_selection import cross_val_score,train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score,f1_score,confusion_matrix\nmodel  = RandomForestClassifier(random_state=42)\nX_tr,X_te,Y_tr,Y_te = train_test_split(X_smote,Y_smote,test_size=0.3,random_state=42)\nscore = model.fit(X_tr,Y_tr)\nac = accuracy_score(Y_te,score.predict(X_te))\ncm = confusion_matrix(Y_te,score.predict(X_te))\nsns.heatmap(cm,annot=True) ","5548811c":"customer_id and name is not required","1a7d0ab5":"### Feature Selcetion by pearson correlation ","fb0bacfb":"#### Finding the numerical and categorical features","cf511da4":"### Sampling for making data to balanced data","b3ddac31":"### Handling Missing Values with Mean and Mode","7e38055a":"### Exploratory Data Analysis","7a9b2e4b":"seperation of numerical and categorical features","55c19229":"##### we can see yearly_debt_payments is following normal distribution","43cbbbb6":"### Feature Scaling","51c6ff62":"since we can see nost of the null values are very minimal we can remove those null values","fd14c041":"### Model Selection, Modeling and Prediction","4f65fae5":"we can find correlation  between no_of_children and total_family_members, credit_limit and net_yearly_income","8485251f":"## Data Cleaning","3ecc3c80":"### Handling Outliers with mean value","bfd8076a":"### Transforming Train data","b462848f":"we can see most of the numerical columns act like categorical values ","23261889":"we can see the data is imbalaced so we must use sampling"}}