{"cell_type":{"266ae930":"code","7ed7ac15":"code","2166e163":"code","0f754d24":"code","735f043a":"code","070072f7":"code","a06006c5":"code","67edb142":"code","ed163992":"code","0870b38e":"code","e532a142":"code","97d8c923":"markdown","b84a06c2":"markdown","da5cc3c0":"markdown","50740304":"markdown","c9a87688":"markdown","2e63c4bc":"markdown","85289503":"markdown","eab85df5":"markdown","462f730c":"markdown","22c8f516":"markdown","ed01cc9f":"markdown","a4a569af":"markdown"},"source":{"266ae930":"import os\nimport pandas as pd\nimport numpy as np\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport contextily as ctx\nfrom mpl_toolkits.basemap import Basemap","7ed7ac15":"df1=pd.read_csv('..\/input\/fires-from-space-australia-and-new-zeland\/fire_nrt_M6_96619.csv')","2166e163":"df1.head()","0f754d24":"df1.dtypes","735f043a":"import matplotlib.image as mpimg\naus_img=mpimg.imread('\/kaggle\/input\/mappng\/map.png')","070072f7":"lat = df1['latitude'].values\nlon = df1['longitude'].values\nbrg = df1['brightness'].values\n\nfig = plt.figure(figsize = (10, 10))\nm = Basemap(projection = 'lcc', resolution='c', lat_0 =-27.6, lon_0 = 134.35,width=5E6, height=4E6)\nm.shadedrelief()\nm.drawcoastlines(color='gray')\nm.drawcountries(color='gray')\nm.drawstates(color='gray')\n\nm.scatter(lon, lat, c= brg,latlon=True,cmap='Reds', alpha=0.6)\nplt.colorbar(label=r'$Brightness$')\n","a06006c5":"df1_night=df1.loc[df1['daynight'].isin(['N'])]\ndf1_day=df1.loc[df1['daynight'].isin(['D'])]","67edb142":"lat_d = df1_day['latitude'].values\nlon_d = df1_day['longitude'].values\nbrg_d = df1_day['brightness'].values\n\nlat_n = df1_night['latitude'].values\nlon_n = df1_night['longitude'].values\nbrg_n = df1_night['brightness'].values\n\nfig = plt.figure(figsize = (10, 10))\nm = Basemap(projection = 'lcc', resolution='c', lat_0 =-27.6, lon_0 = 134.35,width=5E6, height=4E6)\nm.shadedrelief()\nm.drawcoastlines(color='gray')\nm.drawcountries(color='gray')\nm.drawstates(color='gray')\n\nm.scatter(lon_d, lat_d, c= brg_d, latlon=True,cmap='Reds', alpha=0.6)\nplt.colorbar(label='Daytime  Brightness')\n\nm.scatter(lon_n, lat_n, c= np.array(brg_n),latlon=True,cmap='Blues', alpha=0.6)\nplt.colorbar(label='Nighttime  Brightness')","ed163992":"df1_hot=df1[df1['brightness']>450]","0870b38e":"lat_hot=df1_hot['latitude'].values\nlon_hot=df1_hot['longitude'].values\nbrg_hot=c=df1_hot['brightness'].values\n\n\nfig = plt.figure(figsize = (10, 10))\nm = Basemap(projection = 'lcc', resolution='c', lat_0 =-27.6, lon_0 = 134.35,width=5E6, height=4E6)\nm.shadedrelief()\nm.drawcoastlines(color='gray')\nm.drawcountries(color='gray')\nm.drawstates(color='gray')\n\nm.scatter(lon_hot,lat_hot,c=brg_hot, latlon=True,cmap='Reds', alpha=0.6)\nplt.colorbar(label='Daytime  Brightness')\n","e532a142":"import matplotlib\nfrom matplotlib.animation import FuncAnimation\nfrom matplotlib import animation, rc\n\ntime=df1['acq_date'].values\n\n#Putting basemap as a frame\nfig = plt.figure(figsize=(10, 10))\n\nm = Basemap(projection = 'lcc', resolution='c', lat_0 =-27.6, lon_0 = 134.35,width=5E6, height=4E6)\nm.shadedrelief()\nm.drawcoastlines(color='gray')\nm.drawcountries(color='gray')\nm.drawstates(color='gray')\n\n#Getting unique data values as we have multiple rows assoicated with each date\nuniq_time=np.unique(time)\n\n#showing the start date\ndate_text = plt.text(-170, 80, uniq_time[0],fontsize=15)\n\n#very first data to show-brigtness data sets that were obatined on the first acquisition date\ndata=df1[df1['acq_date'].str.contains(uniq_time[0])]\ncmap = plt.get_cmap('Reds')\nxs, ys = data['longitude'].values, data['latitude'].values\nscat=m.scatter(xs,ys,c=data['brightness'].values,cmap=cmap, latlon=True, alpha=0.6)\nplt.colorbar(label='Fire Brightness')\n\n#We will get numbers starting from 0 to the size of the dataframe spaced by \"10\" as it will take very long to generate animation for all data points.\n#Basically we will look at the datasets with a 10-day interval.\nempty_index=[]\nfor i in range(1,len(uniq_time),10):\n    empty_index.append(i)    \n    \ndef update(i):\n    current_date = uniq_time[i]\n    data=df1[df1['acq_date'].str.contains(uniq_time[i])]\n    xs, ys = m(data['longitude'].values, data['latitude'].values)\n    X=np.c_[xs,ys]\n    scat.set_offsets(X)\n    date_text.set_text(current_date)\n    \nani = matplotlib.animation.FuncAnimation(fig, update, interval=50,frames=empty_index)\n\n#trying to diplay animation with HTML\nfrom IPython.display import HTML\nimport warnings\nwarnings.filterwarnings('ignore')\n\n#Exporting the animation to show up correctly on Kaggle kernel. However, this creates an additional unwanted figure at the bottom.\n#Let's ignore for this time\n\nimport io\nimport base64\n\nfilename = 'animation.gif'\n\nani.save('animation.gif', writer='imagemagick', fps=1)\n\nvideo = io.open(filename, 'r+b').read()\nencoded = base64.b64encode(video)\nHTML(data='''<img src=\"data:image\/gif;base64,{0}\" type=\"gif\" \/>'''.format(encoded.decode('ascii')))","97d8c923":"To map brightness values in the map, I first converted latitude, longitude and brightness datatypes to \"values\" to use them with \"Basemap\" toolkit.\nLat_0 and lon_0 arguments in the \"Basemap\" represent the OZMIDLAT and OZMIDLON values respectively for Austrailia.","b84a06c2":"From this, we can see that the South-east part of Austrailia (around Sydney) had experienced very intense fires.","da5cc3c0":"Before we jump into looking at the data as a function of 'data acquisition time\" , let's take a look at the \"high brightness\" data points to see which area had been affected with intense fires. I made \"450\" as a thresold for the brightness level to decide if the fire was intense or not.","50740304":"We\u2019re going to import the image sub-package of matplotlib, which handles matplotlib\u2019s image manipulations.\nI also uploaded the Austrailian map image file to this kernel.","c9a87688":"There is no clear trend in these fires but at least as we approached the new year (2020) the fires are mostly contained along the east coast of Austrailia.\nUnfortuantely the intensity of the fires do not seem to have been suppressed as time progresses.","2e63c4bc":"To get some time specific information, let's differentiate daytime and nighttime brightness data. To do that we apply \"isin\" function to the pandas dataframe.","85289503":"Hello!\n\nI am going to analyze this Autrailian fire dataset that was obtained by a satellite to visually see how the deadly fires have evlolved mainly using the matplotlib library.\nLet's first load the dataset.","eab85df5":"Then, the same mapping proceudre as above. The red and blue points on the map represent the daytime and nighttime brightness datasets, respectively.","462f730c":"This is a nice looking map with the brightness level represented as shown in the colorbar.\nHowever, this is the whole data set that has no time information (no time specific)","22c8f516":"Now, time to look at the data in a time domain. We will use \"matplotlib.animation\" for the animation. Becuase looking at each date will take failry long, I will only look at datasets with a 10 day interval.","ed01cc9f":"A quick peek at the dataset shows that the severity of the fires was represented as \"brightness\" and each point has latitude and longitude tagged with the times that the datasets were acquired. The 'hours' when the data points were acquired also can be differentiated by looking at the \"daynight\" column (D represent daytime and N represents nighttime). We are going to visually plot the brightness data on the 'actual' map of Austrailia.","a4a569af":"It is not easy to see with the two colors overlapped with each other, but we can see that there are points with either red or blue colors. "}}