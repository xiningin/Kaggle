{"cell_type":{"62a1516c":"code","6ece9274":"code","528fc42c":"code","f8d35137":"code","0c05dcd5":"code","07c83378":"code","94f578cb":"code","9c56a4ef":"code","30dc0f0e":"code","6f37bc1c":"code","296353b4":"code","9c3b2965":"code","6a182e66":"markdown","c1cd1271":"markdown","98efbad0":"markdown","ed570d5c":"markdown","3109bfbb":"markdown","f36645c8":"markdown","67d71180":"markdown","7dc73fc1":"markdown","79b1a93e":"markdown","e574ccb8":"markdown","c5039b13":"markdown","74a2f2f5":"markdown","c8adc0bc":"markdown","5ee3fbbb":"markdown","996d2bfe":"markdown"},"source":{"62a1516c":"import numpy as np \nimport pandas as pd\nimport os\nfrom pathlib import Path\nfrom sklearn.model_selection import train_test_split \nfrom keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow import keras\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPooling2D\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.losses import SparseCategoricalCrossentropy\nimport tensorflow as tf\n\n","6ece9274":"direc = Path('..\/input\/a-large-scale-fish-dataset\/Fish_Dataset\/Fish_Dataset')\nfilepaths = list(direc.glob(r'**\/*.png'))\nLabels = list(map(lambda x: os.path.split(os.path.split(x)[0])[1],filepaths))\n\n\n\nfilepaths = pd.Series(filepaths, name='FilePaths').astype(str)\nLabels = pd.Series(Labels, name='Labels').astype(str)\n\n\nimg_df = pd.merge(filepaths, Labels, right_index = True, left_index = True)\n\nimg_df = img_df[ img_df['Labels'].apply(lambda x: x[-2:]!='GT') ]\n\n#Resampling it\nimg_df=img_df.sample(frac = 1).reset_index(drop=True)\nimg_df.head()","528fc42c":"# Showing 9Images \nimport matplotlib.pyplot as plt\nf,a = plt.subplots(nrows=3, ncols=3,figsize=(13, 7),\n                        subplot_kw={'xticks': [], 'yticks': []})\n\nfor i, ax in enumerate(a.flat):\n    ax.imshow(plt.imread(img_df.FilePaths[i]))\n    ax.set_title(img_df.Labels[i])\n    \nplt.tight_layout()\nplt.show()\n","f8d35137":"print(f\" Count of Rows : {img_df.shape[0]} \\n Count of Columns : {img_df.shape[1]} \")","0c05dcd5":"img_df['Labels'].value_counts(ascending=True)","07c83378":"train_ratio = 0.75\nvalidation_ratio = 0.10\ntest_ratio = 0.15\n\n\nx_train, x_test = train_test_split(img_df, test_size=1 - train_ratio)\nx_val, x_test = train_test_split(x_test, test_size=test_ratio\/(test_ratio + validation_ratio)) \n\nprint(f'Shape of Training Data : ',x_train.shape)\nprint(f'Shape of Testing Data : ',x_test.shape)\nprint(f'Shape of Validation Data : ',x_val.shape)\nx_testt = x_test.copy()\n","94f578cb":"img_datagen = ImageDataGenerator(preprocessing_function=tf.keras.applications.mobilenet_v2.preprocess_input)\n\nimg_size=(224, 224)    \n\nx_train = img_datagen.flow_from_dataframe(dataframe = x_train, x_col='FilePaths', y_col='Labels', target_size=img_size, color_mode='rgb',class_mode='categorical',batch_size=32,seed=42)\nx_test = img_datagen.flow_from_dataframe(dataframe = x_test, x_col='FilePaths', y_col='Labels', target_size=img_size,color_mode='rgb',class_mode='categorical',batch_size=32,seed=42)\nx_val = img_datagen.flow_from_dataframe(dataframe = x_val, x_col='FilePaths', y_col='Labels', target_size=img_size, color_mode='rgb',class_mode='categorical',batch_size=32,seed=42)","9c56a4ef":"\n\nfc_model = tf.keras.models.Sequential([\n  tf.keras.layers.experimental.preprocessing.Rescaling(1.\/255),\n  tf.keras.layers.Flatten(input_shape=(113,)),\n  tf.keras.layers.Dense(128, activation='relu'),\n  tf.keras.layers.Dropout(0.2),\n    tf.keras.layers.Dense(128, activation='relu'),\n  tf.keras.layers.Dropout(0.2),\n  tf.keras.layers.Dense(9,activation=\"softmax\")\n])\n\nfc_model.compile(optimizer=\"adam\",\n             loss=\"categorical_crossentropy\",\n             metrics=[\"accuracy\"])","30dc0f0e":"Callback = tf.keras.callbacks.EarlyStopping(monitor='accuracy', patience=3)\nmo_fit = fc_model.fit(x_train,\n                validation_data = x_val,\n                epochs = 10, callbacks=Callback)\n","6f37bc1c":"print('Model summary :')\nprint()\nfc_model.summary()\n","296353b4":"test_accuracy = fc_model.evaluate(x_test)[1] * 100\nprint('Test accuracy is : ',test_accuracy, '%' )\n","9c3b2965":"accuracy = mo_fit.history['accuracy']\nloss = mo_fit.history['loss']\nvalidation_loss = mo_fit.history['val_loss']\nvalidation_accuracy = mo_fit.history['val_accuracy']\n\n\n\nplt.figure(figsize=(17, 7))\nplt.subplot(2, 2, 1)\nplt.plot(range(10), accuracy, label='Training Accuracy')\nplt.plot(range(10), validation_accuracy, label='Validation Accuracy')\nplt.legend(loc='upper left')\nplt.title('Accuracy : Training Vs Validation ')\n\n\n\nplt.subplot(2, 2, 2)\nplt.plot(range(10), loss, label='Training Loss')\nplt.plot(range(10), validation_loss, label='Validation Loss')\nplt.title('Loss : Training Vs Validation ')\nplt.legend(loc='upper right')\nplt.show()","6a182e66":"## 2. Loading The Data","c1cd1271":"> 1. Scaling input pixels to (-1,1).\n","98efbad0":"### 3.1 Augmenating The Data","ed570d5c":"<h1 style=\" text-align:center; color:Blue; font-size:40px; display: block;\"> <u><b><i>Fish Classification \ud83d\udc1f\ud83d\udc1f\ud83d\udc1f<\/i><\/b><\/u> <\/h1>\n<p style=\"text-align:center; \">\n<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/2\/23\/Georgia_Aquarium_-_Giant_Grouper_edit.jpg\" style='width: 400px;'>\n<\/p>\n\n","3109bfbb":"## 3. Splitting The Data","f36645c8":"## 3.2 Creating The Model","67d71180":"### 2.1 Displaying First 9 Images","7dc73fc1":"### 2.3 Types Of Fishes","79b1a93e":"## 1. Importing The Modules","e574ccb8":"<p><b>This dataset contains 9 different seafood types collected from a supermarket in Izmir, Turkey\nfor a university-industry collaboration project at Izmir University of Economics, and this work\nwas published in ASYU 2020.\nThe dataset includes gilt head bream, red sea bream, sea bass, red mullet, horse mackerel,\nblack sea sprat, striped red mullet, trout, shrimp image samples.<\/b><\/p>","c5039b13":"<h2 style=\" text-align:center; color:Blue; font-size:40px; display: block;\"> <u><b><i>Objective<\/i><\/b><\/u> <\/h2>\n<p><b> Efficient classification of images with Tf\/Keras.<\/b><\/p>","74a2f2f5":"## 3.3 Training The Model","c8adc0bc":"<h2 style=\" text-align:center; color:Blue; font-size:40px; display: block;\"> <u><b><i>About The Dataset<\/i><\/b><\/u> <\/h2>\n","5ee3fbbb":"## Still working on it. Please, do share your feedback.","996d2bfe":"### 2.2 Shape Of DataFrame"}}