{"cell_type":{"5c3c3fea":"code","866ad475":"code","9366c63c":"code","9981a98f":"code","402d169a":"code","4753b483":"code","e2a765e2":"code","8e4bb16a":"code","37dd25c0":"code","5fdce9f0":"markdown","3b5a9efc":"markdown","9b83eecf":"markdown","9b472c90":"markdown","17dc1e5b":"markdown","9080967d":"markdown","ad10a9b1":"markdown","48291cb3":"markdown","e2b6f7b1":"markdown","49fb44a2":"markdown"},"source":{"5c3c3fea":"import numpy as np\nimport pandas as pd\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom xgboost import XGBClassifier","866ad475":"TRAIN_PATH = \"..\/input\/fashionmnist\/fashion-mnist_train.csv\"\nTEST_PATH = \"..\/input\/fashionmnist\/fashion-mnist_test.csv\"\n\nTARGET =\"label\"\nTREE_METHOD = 'gpu_hist'","9366c63c":"train=pd.read_csv(TRAIN_PATH)\ntest=pd.read_csv(TEST_PATH)\ntrain.head()","9981a98f":"def getLabelCount(df,target):\n    return sorted([( labelValue,len(train.loc[df[target] == labelValue]) ) for labelValue in df[target].unique()])\n\nlabelCount = getLabelCount(train,TARGET)\nlabelCount","402d169a":"X = train.drop([TARGET],axis=1)\ny= train[TARGET]\n\nX_test =test.drop([TARGET],axis=1)\ny_test = test[TARGET] #this is target answer ","4753b483":"model = XGBClassifier(tree_method=TREE_METHOD) \nmodel.fit(X, y)","e2a765e2":"y_pred = model.predict(X_test)\ny_pred[:5]","8e4bb16a":"y_test[:5]","37dd25c0":"np.sum(y_pred == y_test)\/len(y_test)","5fdce9f0":"# split data ","3b5a9efc":"0.9081 => 90.8% accuracy","9b83eecf":"### y_test is target answer","9b472c90":"# predict target of test data ","17dc1e5b":"# load data","9080967d":"# evaluate model","ad10a9b1":"# check label count","48291cb3":"# train model","e2b6f7b1":"# import libraries","49fb44a2":"# global variables"}}