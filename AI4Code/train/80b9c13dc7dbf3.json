{"cell_type":{"d352dbbe":"code","2f3ebc6d":"code","a1d4b298":"code","0704c126":"code","3ce24455":"code","78f2f314":"code","0c70f1c6":"code","9fda35d7":"code","fb45a073":"code","39596601":"code","e6c4f467":"code","7bdc9658":"code","6825d300":"code","5c46ec44":"code","514760e1":"code","cb7f058f":"code","40600e42":"code","c52ba5e5":"code","55dbaabe":"code","386cd592":"code","a22f23f7":"code","0bf915a5":"code","c371db98":"code","148a3384":"code","753ec3f7":"code","98831bc9":"code","620a6728":"code","c7bc2495":"code","bf89af17":"code","51cd4205":"code","374ff722":"code","6311dfc8":"code","b85e6070":"code","7c14f424":"code","1c2e5a54":"code","3839596a":"code","3f49cd88":"code","c9750714":"code","ed0baf37":"code","86d1e928":"code","0ab35754":"code","1d39dc93":"code","7322dc7e":"code","dedeb612":"code","7a978246":"code","49734960":"code","12ab3d19":"code","e206f83b":"code","cf995ede":"markdown","3e4c21d6":"markdown","8caf4240":"markdown","a94a9507":"markdown","6e860a11":"markdown","ff7d3e63":"markdown","93dfd75b":"markdown","a5de99ad":"markdown","f78b4de6":"markdown","af416df4":"markdown","a24eac32":"markdown","37ba6c4f":"markdown","d8e744f2":"markdown","86f3fe14":"markdown","71e6d726":"markdown","dadd58cd":"markdown","efde3ba8":"markdown","3614c7e7":"markdown","12c73b22":"markdown","3afa915f":"markdown","23ea98f0":"markdown","e61dee0c":"markdown","95fe4fd5":"markdown","266463ae":"markdown"},"source":{"d352dbbe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2f3ebc6d":"df = pd.read_csv('\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv', index_col=0)\ndf.head()","a1d4b298":"df.info()","0704c126":"df.describe()","3ce24455":"df.hist()\nplt.show()","78f2f314":"df.salary.median()","0c70f1c6":"sns.displot(x='salary', data=df, kde=True)\nplt.show()","9fda35d7":"ranges = [0, 200000, 300000, 400000, 500000, 600000, 700000, 800000, np.inf]\nlabels = ['0-200k', '200k-300k', '300k-400k', '400k-500k', '500k-600k', '600k-700k', '700k-800k', '800k+']\n\nsalary_group = pd.cut(df.salary, bins=ranges, labels=labels)\nsalary_group.head()","fb45a073":"sns.countplot(salary_group)\nplt.xticks(rotation=45)\nplt.show()","39596601":"sns.displot(x='salary', data=df, kind='ecdf')\nplt.grid(True)\nplt.xticks(rotation=30)\nplt.ylabel('Percent')\nplt.show()","e6c4f467":"df['total_p'] = round((df['ssc_p'] + df['hsc_p'] + df['degree_p'] + df['mba_p']) \/ 4, 2)\ndf['total_p'].head()","7bdc9658":"placed = df[df['status']=='Placed']\nnot_placed = df[df['status']=='Not Placed']","6825d300":"sns.displot(x='ssc_p', data=df, kind='ecdf', hue='status')\nplt.xlabel('SSC Percentage')\nplt.grid(True)\nplt.show()\nprint('Median SSC marks of student who got placed is',placed['ssc_p'].median())\nprint(\"Median SSC marks of student who didn't got placed is\",not_placed['ssc_p'].median())","5c46ec44":"sns.displot(x='hsc_p', data=df, hue='status', kind='ecdf')\nplt.xlabel('HSC Percentage')\nplt.grid(True)\nplt.show()\nprint('Median HSC marks of student who got placed is',placed['hsc_p'].mean())\nprint(\"Median HSC marks of student who didn't got placed is\",not_placed['hsc_p'].mean())","514760e1":"sns.displot(x='degree_p', data=df, kind='ecdf', hue='status')\nplt.xlabel('Degree Percentage')\nplt.grid(True)\nplt.show()\nprint('Medaian degree marks of student who got placed is',placed['degree_p'].median())\nprint(\"Medaian degree marks of student who didn't got placed is\",not_placed['degree_p'].median())","cb7f058f":"sns.displot(x='mba_p', data=df, kind='ecdf', hue='status')\nplt.xlabel('Degree Percentage')\nplt.grid(True)\nplt.show()\nprint('Medaian MBA marks of student who got placed is',round(placed['mba_p'].median()),2)\nprint(\"Medaian MBA marks of student who didn't got placed is\",not_placed['mba_p'].median())","40600e42":"sns.displot(x='total_p', data=df, kind='ecdf', hue='status')\nplt.xlabel('Total Percentage')\nplt.grid(True)\nplt.show()\nprint('Medaian of total marks of student who got placed is',placed['total_p'].median())\nprint(\"Medaian of total marks of student who didn't got placed is\",not_placed['total_p'].median())","c52ba5e5":"sns.countplot(x='degree_t', data=df, hue='status')\nplt.xlabel('Degree Type')\nplt.show()","55dbaabe":"print((placed.degree_t.value_counts() \/ df.degree_t.value_counts()) * 100)","386cd592":"((placed.degree_t.value_counts() \/ df.degree_t.value_counts()) * 100).plot()\nplt.ylabel('Placement Percentage')\nplt.xlabel('Degree Type')\nplt.show()","a22f23f7":"sns.displot(x='salary', hue='degree_t', kind='kde', data=df)\nplt.xlabel('Degree Type')\nplt.show()","0bf915a5":"sns.displot(x='salary', hue='degree_t', kind='ecdf', data=df)\nplt.xlabel('Degree Type')\nplt.grid(True)\nplt.xticks(rotation=30)\nplt.show()","c371db98":"sns.countplot(x='specialisation', hue='status', data=df)\nplt.xlabel('Specialisation')\nplt.show()","148a3384":"print((placed.specialisation.value_counts() \/ df.specialisation.value_counts()) * 100)","753ec3f7":"sns.displot(x='salary', hue='specialisation', kind='kde', data=placed)\nplt.xlabel('Salary')\nplt.show()","98831bc9":"sns.displot(x='salary', hue='specialisation', kind='ecdf', data=placed)\nplt.xlabel('Salary')\nplt.xticks(rotation=35)\nplt.grid(True)\nplt.show()","620a6728":"sns.countplot(x='status', hue='workex', data=df)\nplt.show()","c7bc2495":"placed.workex.value_counts()","bf89af17":"df.workex.value_counts()","51cd4205":"print(round((placed.workex.value_counts() \/ df.workex.value_counts()) * 100, 2))","374ff722":"sns.displot(x='salary', hue='workex', data=df, kind='kde')\nplt.show()","6311dfc8":"sns.displot(x='salary', hue='workex', data=df, kind='ecdf')\nplt.xticks(rotation=30)\nplt.xlabel('Salaries')\nplt.grid(True)\nplt.show()","b85e6070":"print(placed[placed['workex']=='No']['salary'].sort_values(ascending=False)[:10])","7c14f424":"# let's create classification df for classification models\ndf = pd.read_csv('\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv', index_col=0)\n\nclass_df = df\n\npercentages = ['ssc_p', 'hsc_p', 'degree_p', 'etest_p', 'mba_p']","1c2e5a54":"for i in percentages:\n    sns.displot(class_df[i])\n    plt.show()","3839596a":"ranges = [0, 35, 50, 60, 70, 80, 90, np.inf]\nlabels = ['F', 'E', 'D', 'C', 'B', 'A', 'A+']\n\nfor i in percentages:\n    class_df[i] = pd.cut(class_df[i], bins=ranges, labels=labels)\n    class_df[i] = class_df[i].astype('object')\n    \nclass_df.head()","3f49cd88":"df.head()","c9750714":"class_df = class_df.drop('salary', axis=1)","ed0baf37":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\n\nle = LabelEncoder()\n\nfor i in class_df.columns:\n    if class_df[i].dtype == 'object':\n        class_df[i] = le.fit_transform(class_df[i])\n\nX = class_df.drop('status', axis=1)\ny = class_df.status\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","86d1e928":"from imblearn.over_sampling import SMOTE\n\nprint(\"Before OverSampling, counts of label '1': {}\".format(sum(y_train==1)))\nprint(\"Before OverSampling, counts of label '0': {} \\n\".format(sum(y_train==0)))\n\nsm = SMOTE(random_state=2)\nX_train_res, y_train_res = sm.fit_resample(X_train, y_train.ravel())\n\nprint('After OverSampling, the shape of train_X: {}'.format(X_train_res.shape))\nprint('After OverSampling, the shape of train_y: {} \\n'.format(y_train_res.shape))\n\nprint(\"After OverSampling, counts of label '1': {}\".format(sum(y_train_res==1)))\nprint(\"After OverSampling, counts of label '0': {}\".format(sum(y_train_res==0)))","0ab35754":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import BaggingClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report\n\ndt = DecisionTreeClassifier()\n\ntree_param = {'criterion':['gini','entropy'],'max_depth':[4,5,6,7,8,9,10,11,12,15,20,30,40,50,70,90,120,150],\\\n              'min_samples_leaf':[4,5,6,7,8,9,10,11,12,15,20,30,40,50,70,90,120,150]}\n\ngrid = GridSearchCV(dt, param_grid=tree_param, cv=5)\n\ngrid.fit(X_train_res, y_train_res)","1d39dc93":"dt = grid.best_estimator_\n\npipeline = make_pipeline(StandardScaler(), dt)\n\npipeline.fit(X_train_res, y_train_res)\n\ny_pred = pipeline.predict(X_test)\n\nprint(accuracy_score(y_pred, y_test))\nprint(classification_report(y_pred, y_test))","7322dc7e":"bc = BaggingClassifier(base_estimator=dt, n_estimators=50, random_state=1, oob_score=True)\n\nbc.fit(X_train_res, y_train_res)\n\n# Predict test set labels\ny_pred = bc.predict(X_test)\n\nprint(accuracy_score(y_pred, y_test))\nprint(classification_report(y_pred, y_test))","dedeb612":"from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier()\n\ntree_param = {'criterion':['gini','entropy'],'max_depth':[4,5,6,7,8,9,10,11,12,15,20,30,40,50,70,90,120,150],\\\n              'min_samples_leaf':[4,5,6,7,8,9,10,11,12,15,20,30,40,50,70,90,120,150]}\n\nrand = RandomizedSearchCV(rf, tree_param, cv=5)\nrand.fit(X_train_res, y_train_res)","7a978246":"rf = rand.best_estimator_\n\npipeline = make_pipeline(StandardScaler(), rf)\n\npipeline.fit(X_train_res, y_train_res)\n\ny_pred = pipeline.predict(X_test)\n\nprint(accuracy_score(y_pred, y_test))\nprint(classification_report(y_pred, y_test))","49734960":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.neighbors import KNeighborsClassifier\n\n# Define the classifiers\nclassifiers = [LogisticRegression(), LinearSVC(),\n               SVC(), KNeighborsClassifier()]\n\n# Fit the classifiers\nfor c in classifiers:\n    c.fit(X_train_res, y_train_res)\n    print(c.score(X_test, y_test))","12ab3d19":"# Train and validaton errors initialized as empty list\ntrain_errs = list()\nvalid_errs = list()\nC_values = [0.001, 0.01, 0.1, 1, 10, 100, 1000]\n\n# Loop over values of C_value\nfor C_value in C_values:\n    # Create LogisticRegression object and fit\n    lr = LogisticRegression(C=C_value)\n    lr.fit(X_train, y_train)\n    \n    # Evaluate error rates and append to lists\n    train_errs.append(lr.score(X_train_res, y_train_res) )\n    valid_errs.append(lr.score(X_test, y_test) )\n    \n# Plot results\nplt.semilogx(C_values, train_errs, C_values, valid_errs)\nplt.legend((\"train\", \"validation\"))\nplt.show()","e206f83b":"lr = LogisticRegression(C=1, penalty='l2')\n\nlr.fit(X_train_res, y_train_res)\n\nprint('Score:', lr.score(X_test, y_test))","cf995ede":"#### Ans: \n* Sci&Tech have high chances of getting package more than 400k i.e. 20%.\n* Comm&Mgmt have less than 10% chance of getting more than 400k. But the placemet of Comm&Mgmt is high.","3e4c21d6":"## Q. Does percentage have any affect on placements?","8caf4240":"## Random Forest Classifier","a94a9507":"##### Ok, so students with no work ecperience have high chances of not getting placed. But there is a chance one might not get placed even if you have work experence and one can get placed even if he don't have work experence, let's dig deep into it.","6e860a11":"#### Ans: \n* Mkt&Fin is a clear winner here, there student strenth is high, their placement is 25% higher than Mkt&HR and even the range of salary is high. \n* In Mkt&HR there are very few student got more than 300k.","ff7d3e63":"## Pre-Processing","93dfd75b":"## Conclusion:\n* Average salary lies between 200k to 300k. And ecdf shows that 80 percent of data lies below 300k.\n* The chances of getting salary higher than 300k is only 20 percent and getting more than 400k is less than 10 percent, and it depends on factors like degree type, over all percentage and work experience\n* Students with degress of Science & Tech have good placement and have more chances of getting high package compared to other degress type.\n* Commerce and Management also have good placement and the number of seats are high.\n* MBA in Finance have high placement percentage i.e. around 80% and they get high packages.\n* Work experience is really important for getting placed and getting high package, all the high packages are offered to students with work experience.\n* Students can get job without work experience but chances are low and packages are also low.\n* So, if student wants a good package he should have aggregate more than 65%, and if he\/she is doing a MBA then MBA in Finance is a great option and while studying he\/she should try to get work experience and that's really important.","a5de99ad":"##### As you can see, all high packages are offered to students who had some work experience and very few students got more than 300k who had no work experience","f78b4de6":"## Q. Does work experience matters for placement and salary? ","af416df4":"##### Ok, here we can see something different. MBA marks do't matter that much in placement which is a good sign, but to get a MBA from a good college you need to score well before.","a24eac32":"## Decision Tree Classifier","37ba6c4f":"## Q. What is average salary? And what are chances of getting higher salary?","d8e744f2":"## Q. Which degree have highest chances of placement and type of degree even matters?","86f3fe14":"## Basic EDA","71e6d726":"#### Ans: \n* Comm&Mgmt and Sci&Tech have same chances of placement, the only difference is the number of students. \n* Other degress have less chances of placement. So, degree does matters.","dadd58cd":"## Q. Does specialization have any impact on placement and salary?","efde3ba8":"#### Ans: \n* Clearly experience matters for getting placed and for getting high package. \n* Company can hire you without work experience but chances of that is 60% and you won't get a high package, only few students got package more than 400k rest of them are below 300k.\n* Students chances of getting placed increases by 25% if they have work experience and all high packages are being offered to students with work experience.","3614c7e7":"##### Ok, so Commerce and Managemnt have highest placement but it's because they have more students. We want to find which stream have highest chances of placement.","12c73b22":"##### Marketing and Finance have large number of students but still there placement is around 25% high than Marketing and HR. Let's see difference in salary","3afa915f":"#### Ans: \n* Average salary lies between 200k to 300k. And ecdf shows that 80 percent of data lies below 300k.\n* So the chances of getting salary higher than 300k is only 20 percent and getting more than 400k is less than 10 percent.","23ea98f0":"#### Ans: \n* Yes, percentages do affect placements. And the median of student who got placed is slightly higher than those who didnt got placed.\n* In the figure of total percentage we can see 80% of student who didn't got placed have percentage less than 65 percent, while there are only around 30% of students who got placed have percentage less than 65 percent. \n* Which means 70% of students got placed have greater than 65 percent.","e61dee0c":"## Q. Which Degree type get high packages?","95fe4fd5":"##### Company prefer students with work experience and chances of getting placed is 86% if student have work experience, company might take students without any work experience but there is 60% chances of that. So chances increase getting placed increase by 26% if student have any work experence.","266463ae":"## Logistic Regression"}}