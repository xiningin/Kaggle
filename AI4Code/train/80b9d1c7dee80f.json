{"cell_type":{"524e230a":"code","676f68b0":"code","540ac56e":"code","20bb5515":"code","47436a73":"code","8cb9c0e1":"code","900cd729":"code","25c0ec1f":"code","38369c9c":"code","0c2bd45e":"code","2baa4b96":"code","7568ec3b":"code","785e2ca6":"code","8b6b99ec":"code","95bd4831":"code","fd514422":"code","1f69245f":"code","3c90b153":"code","f45b8efc":"code","0de26842":"code","bef405bc":"code","6fd1d297":"code","e6a65294":"code","2a25b7d3":"code","52fdf66a":"markdown","36a1bdaf":"markdown","6601e3e1":"markdown","bcbe3319":"markdown","183fad51":"markdown","3432b89b":"markdown","89a3df32":"markdown","774a74e6":"markdown","af31fd4b":"markdown","8e57f88d":"markdown","d65ad0d1":"markdown","94da7fee":"markdown","b364a41d":"markdown","b255b116":"markdown","91132453":"markdown","34ea12a3":"markdown","59934be1":"markdown","ed93c788":"markdown"},"source":{"524e230a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","676f68b0":"pip install chart_studio","540ac56e":"import chart_studio.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\n\nfrom wordcloud import WordCloud\n\nimport matplotlib.pyplot as plt","20bb5515":"timesData = pd.read_csv('\/kaggle\/input\/world-university-rankings\/timesData.csv')","47436a73":"timesData.info()","8cb9c0e1":"timesData.head(10)","900cd729":"timesData[timesData['university_name']=='Harvard University']","25c0ec1f":"timesData[timesData['income']=='-']","38369c9c":"df = timesData[timesData['year']==2011]","0c2bd45e":"import plotly.graph_objs as go\n\n#Trace 1 \ntrace1 = go.Scatter(\n                    x = df.world_rank,\n                    y = df.citations,\n                    mode= 'lines',\n                    name = 'citations',\n                    marker = dict(color = 'rgba(16,112,2,0.8)'),\n                    text = df.university_name)\n\n#Trace 2 \ntrace2 = go.Scatter(\n                    x = df.world_rank,\n                    y = df.teaching,\n                    mode= 'lines+markers',\n                    name = 'teaching',\n                    marker = dict(color = 'rgba(80,20,80,0.8)'),\n                    text = df.university_name)\n\ndata = [trace1,trace2]\nlayout = dict(title = 'Citiation and Teaching vs World Rank top 200',\n             xaxis=dict(title='World Rank',ticklen=4,zeroline=False))\nfig=dict(data = data, layout = layout)\niplot(fig)","2baa4b96":"df2014 = timesData[timesData['year']==2014].iloc[:100,:]\ndf2015 = timesData[timesData['year']==2015].iloc[:100,:]\ndf2016 = timesData[timesData['year']==2016].iloc[:100,:]\n\n#Trace 1\ntrace1 = go.Scatter(x = df2014.world_rank,\n                   y=df2014.citations,\n                   mode = \"markers\",\n                   name = \"2014\",\n                   marker = dict(color='rgba(255,0,0,0.8)'),\n                   text=df2014.university_name)\n\n#Trace 2\ntrace2 = go.Scatter(x = df2015.world_rank,\n                   y=df2015.citations,\n                   mode = \"markers\",\n                   name = \"2015\",\n                   marker = dict(color='rgba(0,255,0,0.8)'),\n                   text=df2015.university_name)\n\n#Trace 3\ntrace3 = go.Scatter(x = df2016.world_rank,\n                   y=df2016.citations,\n                   mode = \"markers\",\n                   name = \"2016\",\n                   marker = dict(color='rgba(0,0,255,0.8)'),\n                   text=df2016.university_name)\n\ndata = [trace1,trace2,trace3]\nlayout= dict(title = 'Citation vs World Rank of Top 100 Universities with 2014,2015,2016',\n            xaxis=dict(title = 'World Rank',ticklen = 4, zeroline=False),\n            yaxis=dict(title = 'Citation',ticklen = 4, zeroline=False))\nfig = dict(data = data, layout = layout)\niplot(fig)","7568ec3b":"df2014 = timesData[timesData['year'] == 2014]. iloc[:3,:]\n\n#Trace 1\ntrace1 = go.Bar(\n                x = df2014.university_name,\n                y = df2014.citations,\n                name = \"citations\",\n                marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n                             line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df2014.country)\n#Trace 2\ntrace2 = go.Bar(\n                x = df2014.university_name,\n                y = df2014.teaching,\n                name = \"teaching\",\n                marker = dict(color = 'rgba(255, 255, 128, 0.5)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df2014.country)\ndata = [trace1, trace2]\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","785e2ca6":"x = df2014.university_name\n\ntrace1 = {\n  'x': x,\n  'y': df2014.citations,\n  'name': 'citation',\n  'type': 'bar'\n};\ntrace2 = {\n  'x': x,\n  'y': df2014.teaching,\n  'name': 'teaching',\n  'type': 'bar'\n};\ndata = [trace1, trace2];\nlayout = {\n  'xaxis': {'title': 'Top 3 universities'},\n  'barmode': 'relative',\n  'title': 'citations and teaching of top 3 universities in 2014'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","8b6b99ec":"df2016.head()","95bd4831":"#data preprocessing\ndf2016 = timesData[timesData['year']==2016].iloc[:7,:]\npie1=df2016.num_students\npie1_list = [float(each.replace(',','.'))for each in df2016.num_students] #from str(2,4) to str(2.4) to float(2.4) \nlabels = df2016.university_name","fd514422":"fig = { \"data\" : [{\n    \"values\" : pie1_list,\n    \"labels\" : labels,\n    \"domain\" : {\"x\" : [0, .5]},\n    \"name\" : \"Numberof Students Rate\",\n    \"hoverinfo\" : \"label+percent+name\",\n    \"hole\" : .2,\n    \"type\" : \"pie\"\n}\n],\n      \"layout\" : {\n          \"title\" : \"Universities Number of Students Rates\",\n          \"annotations\" : [{\n              \"font\" : {\"size\" : 20},\n              \"showarrow\" : False,\n              \"text\" : \"Number Of Students\",\n              \"x\" : 0.20,\n              \"y\" : 1\n          }]\n      }}\n\niplot(fig)","1f69245f":"df2016 = timesData[timesData.year == 2016].iloc[:20,:]\nnum_students_size  = [float(each.replace(',', '.')) for each in df2016.num_students]\ninternational_color = [float(each) for each in df2016.international]\ndata = [\n    {\n        'y': df2016.teaching,\n        'x': df2016.world_rank,\n        'mode': 'markers',\n        'marker': {\n            'color': international_color,\n            'size': num_students_size,\n            'showscale': True\n        },\n        \"text\" :  df2016.university_name    \n    }\n]\niplot(data)","3c90b153":"# preprocessing\nx2011 = timesData.student_staff_ratio[timesData.year == 2011]\nx2012 = timesData.student_staff_ratio[timesData.year == 2012]\n\n#Visualization\ntrace1 = go.Histogram(\n    x=x2011,\n    opacity=0.75,\n    name = \"2011\",\n    marker=dict(color='rgba(171, 50, 96, 0.6)'))\ntrace2 = go.Histogram(\n    x=x2012,\n    opacity=0.75,\n    name = \"2012\",\n    marker=dict(color='rgba(12, 50, 196, 0.6)'))\n\ndata = [trace1, trace2]\nlayout = go.Layout(barmode='overlay',\n                   title=' students-staff ratio in 2011 and 2012',\n                   xaxis=dict(title='students-staff ratio'),\n                   yaxis=dict( title='Count'),\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","f45b8efc":"# data prepararion\nx2011 = timesData.country[timesData.year == 2011]\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=512,\n                          height=384\n                         ).generate(\" \".join(x2011))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","0de26842":"# data preparation\nx2015 = timesData[timesData.year == 2015]\n\ntrace0 = go.Box(\n    y=x2015.total_score,\n    name = 'total score of universities in 2015',\n    marker = dict(\n        color = 'rgb(12, 12, 140)',\n    )\n)\ntrace1 = go.Box(\n    y=x2015.research,\n    name = 'research of universities in 2015',\n    marker = dict(\n        color = 'rgb(12, 128, 128)',\n    )\n)\ndata = [trace0, trace1]\niplot(data)","bef405bc":"#import ff\nimport plotly.figure_factory as ff\n#prepare data\ndataframe = timesData[timesData.year==2015]\ndata2015 = timesData.loc[:,['research','international','total_score']]\ndata2015['index'] = np.arange(1,len(data2015)+1)\n#Scatter Matrix\nfig = ff.create_scatterplotmatrix(data2015,diag='box',index='index',colormap='Portland',\n                                 colormap_type='cat',\n                                 height=700,width=700)\niplot(fig)","6fd1d297":"# Trace 1\ntrace1 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.teaching,\n    name = \"teaching\",\n    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n)\n# Trace 2\ntrace2 = go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.income,\n    xaxis='x2',\n    yaxis='y2',\n    name = \"income\",\n    marker = dict(color = 'rgba(160, 112, 20, 0.8)'),\n)\n\ndata = [trace1,trace2]\nlayout = go.Layout(xaxis2=dict(domain = [0.6,0.95],\n                               anchor = 'x2'),\n                  yaxis2=dict(domain = [0.6,0.95],\n                             anchor = 'y2'),\n                    title = 'INCOME AND TEACHING VS WORLD RANK OF UNIVERSITTIES')\n\nfig = go.Figure(data=data,layout=layout)\niplot(fig)","e6a65294":"#Trace 1\ntrace1 = go.Scatter3d(x=dataframe.world_rank,\n                     y=dataframe.research,\n                     z=dataframe.citations,\n                     mode='markers',\n                     marker=dict(size=10,\n                                color='rgb(255,0,0)'))\n\ndata = [trace1]\nlayout=go.Layout(margin=dict(l=0,\n                             r=0,\n                             b=0,\n                             t=0))\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","2a25b7d3":"#Trace 1\ntrace1 = go.Scatter(x=dataframe.world_rank,\n                   y=dataframe.research,\n                   name='research',\n                   )\n#Trace 2\ntrace2 = go.Scatter(x=dataframe.world_rank,\n                   y=dataframe.citations,\n                   name='citations',\n                   xaxis='x2',\n                   yaxis='y2'\n                   )\n#Trace 3\ntrace3 = go.Scatter(x=dataframe.world_rank,\n                   y=dataframe.income,\n                   name='income',\n                   xaxis='x3',\n                   yaxis='y3'\n                   )\n#Trace 4\ntrace4 = go.Scatter(x=dataframe.world_rank,\n                   y=dataframe.total_score,\n                   name='total_score',\n                   xaxis='x4',\n                   yaxis='y4'\n                   )\ndata=[trace1,trace2,trace3,trace4]\n\nlayout = go.Layout(xaxis=dict(domain =[0,0.45]),\n                   xaxis2=dict(domain=[0.55,1],anchor='y2'),\n                   xaxis3=dict(domain=[0,0.45], anchor='y3'),\n                   xaxis4=dict(domain=[0.55,1],anchor='y4'),\n                   yaxis=dict(domain =[0,0.45]),\n                   yaxis2=dict(domain=[0,0.45],anchor='x2'),\n                   yaxis3=dict(domain=[0.55,1],anchor='x3'),\n                   yaxis4=dict(domain=[0.55,1],anchor='x4'),\n                   title='Research, Citation, Income and Total Score VS World Rank of Universities')\n\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","52fdf66a":"# **INSET PLOT**","36a1bdaf":"Yan yana de\u011fil Altl\u0131Ustlu BAR CHART -dict ile yapt\u0131k bu sefer-","6601e3e1":"# **Word Cloud**","bcbe3319":"\u00d6nemli bir k\u0131s\u0131m de\u011fil - Sadece bi\u015feye bakt\u0131m -","183fad51":"#  **LINE CHART (PLOT)** \n","3432b89b":"#  **PIE CHART** ","89a3df32":"# **3D SCATTER PLOT**","774a74e6":"# **SCATTER CHART** ","af31fd4b":"**Not:** WordCloud asl\u0131nda plotly'a dahil de\u011fil extra bu ","8e57f88d":"# **MULT\u0130PLE SUBPLOTS**","d65ad0d1":"# **BOX PLOT**","94da7fee":"2014,2015 ve 2016 verilerinden ilk 100er tanesini alal\u0131m","b364a41d":"num_students degerleri float olmal\u0131yken string olarak girilmis ve ondal\u0131k ay\u0131rmak icin nokta yerine virg\u00fcl kullanilmis. \nOnlar duzeltiliyor.","b255b116":"2011 y\u0131l\u0131na ait verileri g\u00f6rselle\u015ftirece\u011fim o nedenle onlar\u0131 al\u0131yorum.","91132453":"# **HISTOGRAM**","34ea12a3":"# **SCATTER PLOT MATR\u0130X**","59934be1":"# **BAR CHART**","ed93c788":"# **BUBBLE CHART**"}}