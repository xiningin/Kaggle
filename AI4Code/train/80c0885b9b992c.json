{"cell_type":{"4d513d0c":"code","6de251f5":"code","de157f98":"code","9b7c8990":"code","915cfa8c":"code","eb913023":"code","7375f319":"code","87a4ddf2":"code","ab9d2589":"code","7bfecb61":"code","f8268cc8":"code","0ee2e5b7":"code","05f6fbfa":"code","d3934a69":"code","f7832315":"code","4e38ec59":"code","878156b0":"code","f88973da":"code","861cc853":"code","78758c59":"code","c36fc414":"code","e94fb232":"code","7f433543":"code","b4ceb2b2":"code","d06f5f2f":"code","7a43323b":"code","3f9c92b7":"code","9af7143c":"code","74b50b10":"code","3645a004":"code","8c813368":"code","c2eb9053":"code","0c422093":"code","4595c18d":"code","8ee58a2b":"code","be4a92e9":"code","470ac90d":"code","a0cb5323":"code","5b22e79f":"code","0e07e64c":"code","0bcb4231":"code","84430980":"code","0d8e7647":"code","27b40414":"code","6a500142":"code","bb109b3e":"code","fe76e231":"code","38dd98b3":"code","48c71460":"code","7fa0a207":"code","6917df94":"code","f680daf7":"code","a7c4bf05":"code","cdda5552":"code","5c69ab62":"code","129fb227":"code","32159197":"code","429dde39":"code","0a5ea16e":"code","5bed5631":"code","b417f606":"code","9f5339d0":"code","9d456d94":"code","eff183a1":"code","eb3f90da":"code","5dc693e4":"code","7e5a4ea9":"code","fb91e3d1":"code","f78caf0c":"code","e58a35b6":"code","c73cba4f":"code","d20af69a":"code","deabe6ac":"code","d6bfd58c":"code","2594fd61":"code","159061dc":"code","c10eab31":"code","9f8ab8dc":"code","71bd8b85":"code","b777576f":"code","9f54b483":"code","4da0971b":"code","6b9d0810":"code","a15e14a5":"code","01dfe8fa":"code","25a22e8d":"code","418cd63e":"code","d01d746e":"code","b4e65d41":"code","f427d9c9":"code","16e187b1":"code","5c42b5a2":"code","943d69bf":"code","6c0e802c":"code","058eccd5":"code","dc3e11cc":"code","100bf70f":"code","b58ce1d8":"markdown","5370be59":"markdown","1068a03d":"markdown","fc1313e8":"markdown","851b30aa":"markdown","417e1fb5":"markdown","d25f3910":"markdown"},"source":{"4d513d0c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","6de251f5":"#dataset read operation\n#read_csv function is required to read the data.\ndata=pd.read_csv('..\/input\/master.csv')","de157f98":"#show data first 5 rows\ndata.head()","9b7c8990":"#show data last 5 rows\ndata.tail()","915cfa8c":"#random rows in dataset\ndata.sample(5)","eb913023":"data.sample(frac=0.1)","7375f319":"#Describe function includes analysis of all our numerical data. For this, count, mean, std, min,% 25,% 50,% 75, max values are given.\ndata.describe()","87a4ddf2":"data.iloc[:,1:5].describe()","ab9d2589":"#The info function shows the data types and numerical values of the features in our data set.\ndata.info()","7bfecb61":"#We will now set the headings of the feature values in the data set.\ndata.columns","f8268cc8":"#so,change the names of the column. Because there may be problems for future analysis.\ndata=data.rename(columns={'country':'Country','year':'Year','sex':'Gender','age':'Age','suicides_no':'SuicidesNo','population':'Population','suicides\/100k pop':'Suicides100kPop','country-year':'CountryYear','HDI for year':'HDIForYear',' gdp_for_year ($) ':'GdpForYearMoney','gdp_per_capita ($)':'GdpPerCapitalMoney','generation':'Generation'})","0ee2e5b7":"data.columns","05f6fbfa":"#And, how many rows and columns are there for all data?\nprint('Data Shape :')\ndata.shape","d3934a69":"data.isnull().any()","f7832315":"data.isnull().values.any()","4e38ec59":"#Now,I will check null on all data and If data has null, I will sum of null data's. In this way, how many missing data is in the data.\ndata.isnull().sum()","878156b0":"#As you can see, most of the HDIForYear value is empty. That's why I want this value deleted.\ndata=data.drop(['HDIForYear','CountryYear'],axis=1)","f88973da":"#Now start analysis, min year and max year will find them\nmin_year=min(data.Year)\nmax_year=max(data.Year)\nprint('Min Year :',min_year)\nprint('Max Year :',max_year)\n\n#1985 min year,2016 max year.\n\ndata_country=data[(data['Year']==min_year)]\n\ncountry_1985=data[(data['Year']==min_year)].Country.unique()\ncountry_1985_male=[]\ncountry_1985_female=[]\n\nfor country in country_1985:\n    country_1985_male.append(len(data_country[(data_country['Country']==country)&(data_country['Gender']=='male')]))\n    country_1985_female.append(len(data_country[(data_country['Country']==country)&(data_country['Gender']=='female')])) \n    \n#We found the ratio of men and women who committed suicide in some countries in 1985 and we are now charting.\n\nplt.figure(figsize=(10,10))\nsns.barplot(y=country_1985,x=country_1985_male,color='red')\nsns.barplot(y=country_1985,x=country_1985_female,color='yellow')\nplt.ylabel('Countries')\nplt.xlabel('Count Male vs Female')\nplt.title('1985 Year Suicide Rate Gender')\nplt.show()\n\n#Very odd all the rates came on an equal level. So let's do max year.\n\ndata_country=data[(data['Year']==max_year)]\n\ncountry_2016=data[(data['Year']==max_year)].Country.unique()\ncountry_2016_male=[]\ncountry_2016_female=[]\n\nfor country in country_2016:\n    country_2016_male.append(len(data_country[(data_country['Country']==country)&(data_country['Gender']=='male')]))\n    country_2016_female.append(len(data_country[(data_country['Country']==country)&(data_country['Gender']=='female')])) \n    \n#We found the ratio of men and women who committed suicide in some countries in 1985 and we are now charting.\n\nplt.figure(figsize=(10,10))\nsns.barplot(y=country_2016,x=country_2016_male,color='red')\nsns.barplot(y=country_2016,x=country_2016_female,color='yellow')\nplt.ylabel('Countries')\nplt.xlabel('Count Male vs Female')\nplt.title('2016 Year Suicide Rate Gender')\nplt.show()","861cc853":"data_country=data[(data['Year']==min_year)]\n\ncountry_1985_population=[]\n\nfor country in country_1985:\n    country_1985_population.append(sum(data_country[(data_country['Country']==country)].Population))    \n\n#Now year 1985 find sum population every country\n\nplt.figure(figsize=(10,10))\nsns.barplot(y=country_1985,x=country_1985_population)\nplt.xlabel('Population Count')\nplt.ylabel('Countries')\nplt.title('1985 Year Sum Population for Suicide Rate')\nplt.show()\n\n#######################################################\n\ndata_country=data[(data['Year']==max_year)]\n\ncountry_2016_population=[]\n\nfor country in country_2016:\n    country_2016_population.append(sum(data_country[(data_country['Country']==country)].Population))    \n\n#Now year 1985 find sum population every country\n\nplt.figure(figsize=(10,10))\nsns.barplot(y=country_2016,x=country_2016_population)\nplt.xlabel('Population Count')\nplt.ylabel('Countries')\nplt.title('2016 Year Sum Population for Suicide Rate')\nplt.show()\n","78758c59":"suicideGender1985=data_country.groupby(['Country','Gender']).SuicidesNo.sum()","c36fc414":"suicideGender1985","e94fb232":"data_country=data[(data['Year']==min_year)]\n\ndata_age_5_14=[]\ndata_age_15_24=[]\ndata_age_25_34=[]\ndata_age_35_54=[]\ndata_age_55_74=[]\ndata_age_75=[]\n\nfor country in country_1985:\n        data_age_5_14.append(len(data_country[(data_country['Country']==country)&(data_country['Age']=='5-14 years')]))\n        data_age_15_24.append(len(data_country[(data_country['Country']==country)&(data_country['Age']=='15-24 years')]))\n        data_age_25_34.append(len(data_country[(data_country['Country']==country)&(data_country['Age']=='25-34 years')]))\n        data_age_35_54.append(len(data_country[(data_country['Country']==country)&(data_country['Age']=='35-54 years')]))\n        data_age_55_74.append(len(data_country[(data_country['Country']==country)&(data_country['Age']=='55-74 years')]))\n        data_age_75.append(len(data_country[(data_country['Country']==country)&(data_country['Age']=='75+ years')]))\n        \n\n#######################################################\n\ndata_country=data[(data['Year']==max_year)]\n\ndata_age_5_14=[]\ndata_age_15_24=[]\ndata_age_25_34=[]\ndata_age_35_54=[]\ndata_age_55_74=[]\ndata_age_75=[]\n\nfor country in country_2016:\n        data_age_5_14.append(len(data_country[(data_country['Country']==country)&(data_country['Age']=='5-14 years')]))\n        data_age_15_24.append(len(data_country[(data_country['Country']==country)&(data_country['Age']=='15-24 years')]))\n        data_age_25_34.append(len(data_country[(data_country['Country']==country)&(data_country['Age']=='25-34 years')]))\n        data_age_35_54.append(len(data_country[(data_country['Country']==country)&(data_country['Age']=='35-54 years')]))\n        data_age_55_74.append(len(data_country[(data_country['Country']==country)&(data_country['Age']=='55-74 years')]))\n        data_age_75.append(len(data_country[(data_country['Country']==country)&(data_country['Age']=='75+ years')]))\n        \n#there is an equal rate. We need to make the query process a little more complicated.","7f433543":"sns.countplot(data.Gender)\nplt.show()\n#there has been an even gender distribution.","b4ceb2b2":"data.head()","d06f5f2f":"data['GdpPerCapitalMoney'].unique()","7a43323b":"print(\"Max : \",max(data['GdpPerCapitalMoney'].unique()))\nprint('Min : ',min(data['GdpPerCapitalMoney'].unique()))","3f9c92b7":"sns.countplot(data[data['GdpPerCapitalMoney']==251].Gender)\nplt.title(\"GdpPerCapitalMoney Gender (Male-Female)\")\nplt.show()","9af7143c":"sns.countplot(data[data['GdpPerCapitalMoney']==126352].Gender)\nplt.title(\"GdpPerCapitalMoney Gender (Male-Female)\")\nplt.show()","74b50b10":"plt.figure(figsize=(10,5))\nsns.countplot(data.Gender,hue=data.Age)\nplt.title('Gender & Age')\nplt.show()\n#there has been an even gender & hue age distribution.","3645a004":"data.groupby('Age')['Gender'].count()","8c813368":"sns.barplot(x=data.groupby('Age')['Gender'].count().index,y=data.groupby('Age')['Gender'].count().values)\nplt.xticks(rotation=90)\nplt.show()","c2eb9053":"suicidesNo=[]\nfor country in data.Country.unique():\n    suicidesNo.append(sum(data[data['Country']==country].SuicidesNo))   ","0c422093":"suicidesNo=pd.DataFrame(suicidesNo,columns=['suicidesNo'])\ncountry=pd.DataFrame(data.Country.unique(),columns=['country'])\ndata_suicide_countr=pd.concat([suicidesNo,country],axis=1)\n#sns.barplot(x=data.Country.unique(),y=suicidesNo) \n#plt.show()","4595c18d":"data_suicide_countr=data_suicide_countr.sort_values(by='suicidesNo',ascending=False)","8ee58a2b":"sns.barplot(y=data_suicide_countr.country[:15],x=data_suicide_countr.suicidesNo[:15])\nplt.show()","be4a92e9":"grouop_data=data.groupby(['Age','Gender'])['SuicidesNo'].sum().unstack()\ngrouop_data=grouop_data.reset_index().melt(id_vars='Age')","470ac90d":"grouop_data_female=grouop_data.iloc[:6,:]\ngrouop_data_male=grouop_data.iloc[6:,:]","a0cb5323":"grouop_data_female","5b22e79f":"grouop_data_male","0e07e64c":"female_=[175437,208823,506233,16997,430036,221984]\nmale_=[633105,915089,1945908,35267,1228407,431134]\nplot_id = 0\nfor i,age in enumerate(['15-24 years','25-34 years','35-54 years','5-14 years','55-74 years','75+ years']):\n    plot_id += 1\n    plt.subplot(3,2,plot_id)\n    plt.title(age)\n    fig, ax = plt.gcf(), plt.gca()\n    sns.barplot(x=['female','male'],y=[female_[i],male_[i]],color='blue')\n    plt.tight_layout()\n    fig.set_size_inches(10, 15)\nplt.show()  ","0bcb4231":"sns.countplot(data.Generation)\nplt.title('Generation Counter')\nplt.xticks(rotation=45)\nplt.show()","84430980":"sns.countplot(data.Generation,hue=data.Gender)\nplt.title('Generation hue Gender Counter')\nplt.show()","0d8e7647":"data['Age'].unique()","27b40414":"index_population=[]\nfor age in data['Age'].unique():\n    index_population.append(sum(data[data['Age']==age].Population)\/len(data[data['Age']==age].Population))\n    \nplt.bar(['15-24 years','35-54 years','75+ years','25-34 years','55-74 years','5-14 years'],index_population,align='center',alpha=0.5)\nplt.xticks(rotation=90)\nplt.show()","6a500142":"index_population","bb109b3e":"plt.figure(figsize=(10,5))\nsns.set(style='whitegrid')\nsns.boxplot(data['Population'])\nplt.show()","fe76e231":"data.head()","38dd98b3":"sns.set(style='whitegrid')\nsns.boxplot(data['GdpPerCapitalMoney'])\nplt.show()","48c71460":"sns.set(style='whitegrid')\nsns.boxplot(data.Year)\nplt.show()","7fa0a207":"# Plot the crashes where alcohol was involved\nsns.set_color_codes(\"muted\")\nsns.barplot(x=\"Year\", y=\"SuicidesNo\", data=data,\n            label=\"Year Suicides\", color=\"b\")\nplt.xticks(rotation=90)\nplt.show()","6917df94":"\nplt.figure(figsize=(7,7))\ng = sns.FacetGrid(data, col=\"Generation\", hue=\"Year\",\n                  subplot_kws=dict(projection='polar'), height=5.5,\n                  sharex=False, sharey=False, despine=False)\n\nplt.show()","f680daf7":"# Plot sepal with as a function of sepal_length across days\ng = sns.lmplot(x=\"Year\", y=\"SuicidesNo\", hue=\"Generation\",\n               truncate=True, height=5, data=data)\n\n# Use more informative axis labels than are provided by default\ng.set_axis_labels(\"Year\", \"Suicides No\")\nplt.show()","a7c4bf05":"data.head()","cdda5552":"data.describe().plot(kind = \"Area\",fontsize=15, figsize = (20,10), table = True,colormap=\"rainbow\")\nplt.xlabel('Statistics',)\nplt.ylabel('Value')\nplt.title(\"General Statistics\")\nplt.show()","5c69ab62":"f,ax=plt.subplots(1,2,figsize=(18,8))\ndata['Generation'].value_counts().plot.pie(explode=[0.1,0.1,0.1,0.1,0.1,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True)\nax[0].set_title('Generations Count')\nax[0].set_ylabel('Count')\nsns.countplot('Generation',data=data,ax=ax[1])\nax[1].set_title('Generations Count')\nplt.show()","129fb227":"fig=sns.jointplot(y='Suicides100kPop',x='Year',data=data)\nplt.show()","32159197":"fig=sns.jointplot(y='SuicidesNo',x='Population',data=data)\nplt.show()","429dde39":"sns.jointplot(\"Year\", \"GdpPerCapitalMoney\", data=data, kind=\"reg\")\nplt.show()","0a5ea16e":"# Show the joint distribution using kernel density estimation\ng = sns.jointplot(data.Year,data.GdpPerCapitalMoney, kind=\"kde\", height=7, space=0)\nplt.show()","5bed5631":"fig=sns.jointplot(y='GdpPerCapitalMoney',x='SuicidesNo',kind='hex',data=data[data['Country']=='United States'])\nplt.show()","b417f606":"sns.jointplot(\"Suicides100kPop\", \"SuicidesNo\", data=data[data['Country']=='Russian Federation'], kind=\"kde\",space=0,color='g')\nplt.show()","9f5339d0":"import matplotlib.pyplot as plt\n%matplotlib inline\nsns.FacetGrid(data,hue='Year',size=5).map(plt.scatter,'GdpPerCapitalMoney','Population').add_legend()\nplt.show()","9d456d94":"sns.FacetGrid(data, hue=\"Generation\", size=6).map(sns.kdeplot, \"Population\").add_legend()\nplt.ioff() \nplt.show()","eff183a1":"sns.countplot(x=\"Generation\", hue=\"Gender\",\n                 data=data)\nplt.xticks(rotation=45)\nplt.show()","eb3f90da":"sns.stripplot(x=data['SuicidesNo'])\nplt.show()","5dc693e4":"sns.set(style=\"white\")\n# Plot miles per gallon against horsepower with other semantics\nsns.relplot(x=\"Generation\",y=\"SuicidesNo\",hue=\"Gender\",\n            sizes=(40, 400), alpha=.5, palette=\"muted\",\n            height=6, data=data)\nplt.show()","7e5a4ea9":"plt.figure(figsize=(10,7))\nsns.stripplot(x=\"Year\",y='Suicides100kPop',data=data)\nplt.xticks(rotation=45)\nplt.show()","fb91e3d1":"plt.figure(figsize=(10,10))\nsns.factorplot(x=\"SuicidesNo\", y=\"Gender\", kind='violin',data=data)\nplt.show()","f78caf0c":"plt.scatter(x=np.arange(1,27821),y=data['Suicides100kPop'].values.tolist())\nplt.show()","e58a35b6":"plt.scatter(x=np.arange(1,27821),y=data['SuicidesNo'].values.tolist())\nplt.show()","c73cba4f":"plt.scatter(x=np.arange(1,27821),y=data['Population'].values.tolist())\nplt.show()","d20af69a":"plt.scatter(x=np.arange(1,27821),y=data['GdpPerCapitalMoney'].values.tolist())\nplt.show()","deabe6ac":"sns.distplot(data['Suicides100kPop'])\nplt.show()","d6bfd58c":"sns.set_color_codes()\nsns.distplot(data['Country'].value_counts().values,color='r')\nplt.show()","2594fd61":"data[(data['Gender']=='male')].Age.value_counts().values","159061dc":"# Plot the responses for different events and regions\nsns.lineplot(x=\"SuicidesNo\", y=\"Suicides100kPop\",\n             hue=\"Gender\",data=data.sort_values(by='Suicides100kPop',ascending=False))\nplt.show()","c10eab31":"sns.pairplot(data,hue='Generation')\nplt.show()","9f8ab8dc":"sns.pairplot(data, hue=\"Gender\")\nplt.show()","71bd8b85":"# Plot the residuals after fitting a linear model\nsns.residplot('SuicidesNo','Suicides100kPop', data=data,lowess=True, color=\"g\")\nplt.show()","b777576f":"sns.distplot(data[(data['Gender']=='female')].Age.value_counts().values)\nplt.show()","9f54b483":"sns.violinplot(x=data['Generation'],y=data['Population'])\nplt.show()","4da0971b":"sns.heatmap(data.corr(),cmap='YlGnBu',annot=True)\nplt.show()","6b9d0810":"# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(data.corr(), vmax=.3, center=1,\n            square=True, linewidths=.5,annot=True)\nplt.show()","a15e14a5":"cmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(data.corr(), cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\nplt.show()","01dfe8fa":"sns.boxplot(x=data['Generation'],y=data['Population'])\nplt.xticks(rotation=90)","25a22e8d":"sns.boxenplot(x=\"Generation\", y=\"SuicidesNo\",\n              color=\"b\",\n              scale=\"linear\", data=data)\nplt.tight_layout()\nplt.show()","418cd63e":"data.head()","d01d746e":"max(data.SuicidesNo)","b4e65d41":"min(data.SuicidesNo)","f427d9c9":"data[data.SuicidesNo==max(data.SuicidesNo)]","16e187b1":"data[data['Country']=='Russian Federation'].hist()\nplt.tight_layout()\nplt.show()","5c42b5a2":"data[data.SuicidesNo==min(data.SuicidesNo)]","943d69bf":"data[data['Country']=='Albania'].hist()\nplt.tight_layout()\nplt.show()","6c0e802c":"# Show the results of a linear regression within each dataset\nsns.lmplot(x=\"Population\", y=\"GdpPerCapitalMoney\", data=data)\nplt.show()","058eccd5":"sns.set(style=\"whitegrid\")\n\n# Make an example dataset with y ~ x\nrs = np.random.RandomState(7)\nx = rs.normal(2, 1, 75)\ny = 2 + 1.5 * x + rs.normal(0, 2, 75)\n\n# Plot the residuals after fitting a linear model\nsns.residplot(x, y, lowess=True, color=\"g\")\nplt.show()","dc3e11cc":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\ndata.iloc[:,-1]=le.fit_transform(data.iloc[:,-1])","100bf70f":"data.head(2)","b58ce1d8":"<p>All data were analyzed. Graphical analysis was performed for all age rates for suicide rates.<\/p>","5370be59":"<p>While the suicide rate was widespread in more countries in 1985, this ratio has fallen considerably in 2016. Now let us examine the other features of these countries.<\/p>","1068a03d":"<p>It appears that after examining our data, we examined the total suicide rates and prepared a chart that handled the most from the least.<\/p>","fc1313e8":"<p>The values we found on the upper side give the total population we found in 1985 in 2016.<\/p>","851b30aa":"<p id='20'><h3><b>References<\/b><\/h3><\/p>\n<p>https:\/\/www.kaggle.com\/spscientist\/students-performance-in-exams<\/p>\n<p>https:\/\/seaborn.pydata.org\/<\/p>\n<p>https:\/\/www.kaggle.com\/kanncaa1\/seaborn-tutorial-for-beginners<\/p>\n<p>https:\/\/www.kaggle.com\/biphili\/seaborn-plot-to-visualize-iris-data<\/p>\n<p>https:\/\/www.kaggle.com\/kralmachine\/seaborn-tutorial-for-beginners<\/p>","417e1fb5":"<p id='21'><h3><b>Conclusion<\/b><\/h3><\/p>\n<p>As a result, we have explained the seaborn library in a very detailed way and created a wide variety of graphs. If you like it, I expect your support. If you like <b>UPVOTED<\/b> I would be very happy if you do. If you have any questions, I am ready to answer your questions. At the bottom there are the kernel values that I have already done.<\/p>\n<p>https:\/\/www.kaggle.com\/kralmachine\/data-visualization-of-suicide-rates<\/p>\n<p>https:\/\/www.kaggle.com\/kralmachine\/gradient-admission-eda-ml-0-92<\/p>\n<p>https:\/\/www.kaggle.com\/kralmachine\/football-results-from-1872-to-2018-datavisulation<\/p>\n<p>https:\/\/www.kaggle.com\/kralmachine\/pandas-tutorial-for-beginner<\/p>\n<p>https:\/\/www.kaggle.com\/kralmachine\/visual-analysis-of-world-happiness-in-2015<\/p>","d25f3910":"<h1>General Analysis of Suicide Rates<\/h1>\n\n<p>Our aim is to make general analysis of suicide rates and we will explain these rates in detail.<\/p>\n\n<p>\n\nDataset Feature List\n\n<ul>\n<li>country<\/li>\n<li>year<\/li>\n<li>sex<\/li>\n<li>age<\/li>\n<li>suicides_no<\/li>\n<li>population<\/li>\n<li>suicides\/100k pop<\/li>\n<li>country-year<\/li>\n<li>HDI for year<\/li>\n<li>gdp_for_year<\/li>\n<li>gdp_per_capita<\/li>\n<li>generation<\/li>\n\n<\/ul>\n\n<\/p>\n\n<p><a href='#20'>References<\/a><\/p>\n<p><a href='#21'>Conclusion<\/a><\/p>\n\n<p>Last Updated : <b>30.06.2019<\/b><\/p>\n<p><h2>if you like it, please upvoted<\/h2><\/p>"}}