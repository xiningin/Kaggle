{"cell_type":{"d6963514":"code","a214756b":"code","8d86bd7f":"code","2cb14bee":"code","5cc6fb05":"code","177f74dc":"code","47a843cc":"code","267a0298":"code","be5a68a0":"code","a5b917b1":"code","054bfb9a":"code","e0bb07cc":"code","1efcef4d":"code","85582149":"code","65e3b024":"code","9b7e235c":"code","2d0c4fa0":"code","29ea84f1":"code","570acadd":"code","5cc2bfa2":"code","460f9891":"code","11b681da":"code","df740646":"code","9a196044":"code","9238e8e7":"code","fcb816b2":"code","d3dcc700":"markdown","ca3e579b":"markdown","2f48584d":"markdown","1f1a606e":"markdown","1d2f631d":"markdown"},"source":{"d6963514":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras.optimizers import Adam\nimport numpy as np\nimport pandas as pd\nimport time\nimport glob\nimport random\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import imshow\nimport os\nimport cv2\nimport shutil","a214756b":"from numpy.random import seed\nseed(42)\nfrom tensorflow.random import set_seed\nset_seed(42)\n\nrandom.seed(42)\nos.environ['PYTHONHASHSEED'] = str(42)","8d86bd7f":"df = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/train.csv')","2cb14bee":"df.head()","5cc6fb05":"X_train = df.copy().drop(['target', 'id'], axis=1)\n\nY_train = df.target.copy()","177f74dc":"class_map = {'Class_1': 0,\n            'Class_2': 1,\n            'Class_3': 2,\n            'Class_4': 3,\n            'Class_5': 4,\n            'Class_6': 5,\n            'Class_7': 6,\n            'Class_8': 7,\n            'Class_9': 8}\nY_train = Y_train.map(class_map).astype('int')\nY_train = tf.keras.utils.to_categorical(Y_train)","47a843cc":"for column in X_train.columns:\n    X_train[column] = (X_train[column] -\n                           X_train[column].mean()) \/ X_train[column].std()  ","267a0298":"X_train","be5a68a0":"X_train, X_valid, Y_train, Y_valid = train_test_split(X_train, Y_train, random_state=0, train_size=0.95)","a5b917b1":"X_train = tf.expand_dims(X_train, -1)\nX_valid = tf.expand_dims(X_valid, -1)","054bfb9a":"\nmodel = tf.keras.Sequential([\n    tf.keras.layers.Conv1D(filters=75, kernel_size=3, strides=(2), activation='relu', input_shape=[75,1]),\n    tf.keras.layers.Conv1D(filters=24, kernel_size=2, strides=(2), activation='relu'),\n    tf.keras.layers.MaxPooling1D(pool_size=2),\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(100, activation='relu'),\n    tf.keras.layers.BatchNormalization(),\n    tf.keras.layers.Dropout(0.2),\n    tf.keras.layers.Dense(9, activation='softmax')\n])\n\nmodel.summary()\nmodel.compile(loss='categorical_crossentropy', optimizer=Adam(lr=0.001), metrics=['accuracy'])","e0bb07cc":"patience = 2\nstop_patience = 5\nfactor = 0.5\n\ncallbacks = [\n    tf.keras.callbacks.ModelCheckpoint(\"classify_model.h5\", save_best_only=True, verbose = 0),\n    tf.keras.callbacks.EarlyStopping(patience=stop_patience, monitor='val_loss', verbose=1, restore_best_weights=True),\n    tf.keras.callbacks.ReduceLROnPlateau(monitor='val_loss', factor=factor, patience=patience, verbose=1)\n]","1efcef4d":"epochs=100\nbatch_size=256","85582149":"history = model.fit(X_train, Y_train, validation_data=(X_valid, Y_valid), epochs=epochs, batch_size=batch_size, callbacks=callbacks)","65e3b024":"test_df = pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/test.csv')","9b7e235c":"for column in test_df.columns[1:]:\n    test_df[column] = (test_df[column] -\n                           test_df[column].mean()) \/ test_df[column].std()  ","2d0c4fa0":"test_df","29ea84f1":"X_test = test_df.copy().drop(['id'], axis=1)","570acadd":"X_test = tf.expand_dims(X_test, -1)","5cc2bfa2":"predictions = model.predict(X_test)\npredictions = pd.DataFrame(predictions, columns = ['Class_1', 'Class_2', 'Class_3', 'Class_4', 'Class_5', 'Class_6', 'Class_7', 'Class_8', 'Class_9'])\npredictions","460f9891":"id_column = []\nfor i in range(100000):\n    id_column.append(i + 200000)","11b681da":"id_column = pd.Series(id_column)","df740646":"predictions = pd.concat([id_column, predictions], axis=1)","9a196044":"predictions = predictions.rename(columns={0:'id'})","9238e8e7":"predictions","fcb816b2":"predictions.to_csv('predictions.csv', index=False)","d3dcc700":"# **Callbacks**","ca3e579b":"# **Data Preprocessing**","2f48584d":"# **Import Libraries and Set Seed**","1f1a606e":"# **Model Training**","1d2f631d":"# **Model Architecture**"}}