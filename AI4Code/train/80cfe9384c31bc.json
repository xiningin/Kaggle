{"cell_type":{"7d0f72f0":"code","411e3a61":"code","0beca5a5":"code","5f5f8c63":"code","fe63eb98":"code","7b5e3cc2":"code","43face7d":"code","f78a060e":"code","d76fe6a8":"code","c3bc84c7":"code","d05dbda1":"code","6b14e03c":"code","525578b5":"code","0dc58ca3":"code","84bb4528":"code","dfc239dd":"code","e609fef3":"code","d0b1f1df":"code","5b9fcd3c":"code","8aaee8f7":"code","8aebec43":"code","439c94b5":"code","07a824f0":"code","c410af7d":"code","447206cf":"code","9ade4519":"code","a4cdaff2":"code","02e87d1e":"code","ed5e9719":"code","89252c51":"markdown","e703dc7b":"markdown","708e1fa7":"markdown"},"source":{"7d0f72f0":"!conda install -c conda-forge tabula-py --yes","411e3a61":"import numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","0beca5a5":"import tabula\ndfs = tabula.read_pdf('https:\/\/gtimg.tokyo2020.org\/image\/upload\/production\/z1xhvc8knhlkftmeiwjo.pdf', lattice=True, pages ='all')\nfor i,df in enumerate(dfs):\n    print(i)\n    display(df)","5f5f8c63":"len(dfs)","fe63eb98":"dfs0=dfs[4]","7b5e3cc2":"dfs0.columns","43face7d":"plus1=16\ndfs[plus1].columns=dfs0.columns\ndfs[plus1]=dfs[plus1].drop(index=dfs[plus1].index[0])\ndfs[plus1]","f78a060e":"for i in range(5,15):\n    dfs0=pd.concat([dfs0,dfs[i]])\ndfs0=pd.concat([dfs0,dfs[plus1]])\ndf=dfs0    ","d76fe6a8":"df1=df.fillna('N').reset_index(drop=True)\ndf1","c3bc84c7":"df1.columns","d05dbda1":"df1=df1.reset_index(drop=True)\nprint(len(df1))","6b14e03c":"df1","525578b5":"drop_index1=df1[df1['No']=='N'].index.tolist()\ndrop_index2=df1[df1['Date of\\rannouncement']=='N'].index.tolist()\ndrop_index3=df1[df1['Category']=='N'].index.tolist()\ndrop_index=sorted(set(drop_index1+drop_index2+drop_index3))\ndrop_index","0dc58ca3":"df2=df1.drop(drop_index).reset_index(drop=True)\ndf2","84bb4528":"df2=df2.drop('No',axis=1)\ndf2","dfc239dd":"import datetime\nfrom datetime import date\ndate2=[]\nfor item in df2['Date of\\rannouncement']:\n    item2=item.split('-')\n    day=int(item2[0])\n    month=int(item2[1].replace('Jul','7').replace('Aug','8').replace('Sep','9'))\n    year=2000+int(item2[2])\n    date2+=[datetime.date(year,month,day)]\ndf2['Date2 of announcement']=date2\ndf2","e609fef3":"df2=df2.sort_values('Date2 of announcement').reset_index(drop=True)\ndf2[df2['Date2 of announcement']==df2.loc[df2.index.stop-1,'Date2 of announcement']]","d0b1f1df":"df2['number']=1","5b9fcd3c":"df2a=df2.groupby('Category',as_index=None).sum().sort_values('number',ascending=False)\ndf2a","8aaee8f7":"df2a['number'].tolist()","8aebec43":"value=df2a['number'].tolist()\nlabel=df2a['Category'].tolist()","439c94b5":"title = \"Positives by Category\"\nplt.figure(figsize=(6,6), dpi=80)\nplt.pie(value, labels=label,counterclock=False,startangle=0)\nplt.axis('equal')\nplt.title(title, fontsize=20)\nplt.show()","07a824f0":"df2b=df2.groupby('Harumi OV\/PV\\rResidents\/Non-residents',as_index=None).sum().sort_values('number',ascending=False)\ndf2b","c410af7d":"df2c=df2.groupby('Residents\/Non-residents\\rof Japan',as_index=None).sum().sort_values('number',ascending=False)\ndf2c","447206cf":"df2d=df2.groupby('Prefecture that reported\\rthe case',as_index=None).sum().sort_values('number',ascending=False)\ndf2d","9ade4519":"value2=df2d['number'].tolist()\nlabel2=df2d['Prefecture that reported\\rthe case'].tolist()","a4cdaff2":"title2 = \"Positives by Prefecture\"\nplt.figure(figsize=(6,6), dpi=80)\nplt.pie(value2, labels=label2,counterclock=False,startangle=0)\nplt.axis('equal')\nplt.title(title2, fontsize=20)\nplt.show()","02e87d1e":"df2e=df2.groupby('Date2 of announcement',as_index=None).sum()\ndf2e['accumulated']=0\nfor i in range(len(df2e)):\n    df2e.loc[i,'accumulated']=df2e.loc[0:i,'number'].sum()\ndf2e","ed5e9719":"fig = make_subplots(specs=[[{\"secondary_y\":True}]])\nfig.add_trace(go.Scatter(x=df2e['Date2 of announcement'],y=df2e['number'],name='daily value' ),secondary_y=False,)\nfig.add_trace(go.Scatter(x=df2e['Date2 of announcement'],y=df2e['accumulated'],name='accumulated value' ),secondary_y=True,)\nfig.update_layout(autosize=False,width=700,height=500,title_text=\"Positive Cases reported in Tokyo2020\")\nfig.update_xaxes(title_text=\"Date\")\nfig.update_yaxes(title_text=\"Daily Number\",secondary_y=False)\nfig.update_yaxes(title_text=\"Accumulated Number\",secondary_y=True)\nfig.show()","89252c51":"## The latest announcement","e703dc7b":"## Data Source\n","708e1fa7":"## Tokyo 2020 Paralympics related Covid19 Positive Cases\n* https:\/\/olympics.com\/tokyo-2020\/en\/notices\/covid-19-positive-case-list"}}