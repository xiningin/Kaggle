{"cell_type":{"884debcd":"code","2ad34d62":"code","a4851048":"code","9088e9fa":"code","6930449e":"code","85c04d4a":"code","69e74898":"code","c88448c2":"code","86957e16":"code","84ee09bd":"markdown","08ff57df":"markdown"},"source":{"884debcd":"#!pip install -U tensorflow","2ad34d62":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport time, gc\nimport tensorflow as tf\nfrom PIL import Image\nprint(tf.__version__)\n\nfrom sklearn.preprocessing import LabelBinarizer\n\nimport random\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n# Any results you write to the current directory are saved as output.","a4851048":"class_map_df = pd.read_csv('\/kaggle\/input\/bengaliai-cv19\/class_map.csv')\nclass_map_df_root = class_map_df[class_map_df.component_type=='grapheme_root']\nclass_map_df_vowel = class_map_df[class_map_df.component_type=='vowel_diacritic']\nclass_map_df_cons = class_map_df[class_map_df.component_type=='consonant_diacritic']\ngraphemeLB = LabelBinarizer()\nvowelLB = LabelBinarizer()\nconsonantLB = LabelBinarizer()\n\ngraphemeLB.fit(class_map_df_root.label)\nvowelLB.fit(class_map_df_vowel.label)\nconsonantLB.fit(class_map_df_cons.label)","9088e9fa":"print(len(vowelLB.classes_))\nprint(len(consonantLB.classes_))\nprint(len(graphemeLB.classes_))","6930449e":"BS=64\nmodel = tf.keras.models.load_model('\/kaggle\/input\/bengali-graphemes-multichannelcnn-using-tf2\/Bengali_model_fourDS.h5')\n\nrow_id=[]\ntarget=[]\nfor i in range(4):\n    print(\"[INFO] Now reading parquet file test images\")\n    test_df = pd.read_parquet('\/kaggle\/input\/bengaliai-cv19\/test_image_data_{}.parquet'.format(i)) \n    #test_df=test_df[0:100]\n    #print(test_df.head())\n    print(\"iteration:\"+str(i))\n\n    testX=np.array(test_df.iloc[:,1:]).reshape(-1,137,236,1)\n    testX=testX.astype('uint8')\n    \n    print(\"[INFO] creating test dataset from test images\")\n    print(testX.shape)\n    resized_image=[]\n    for k in range(len(testX)):\n        resized_img = tf.image.resize(testX[k],[96,96])\n        resized_img=np.array(resized_img)\/255.\n        resized_image.append(resized_img)\n        \n    test_set=tf.data.Dataset.from_tensor_slices(resized_image).batch(BS).prefetch(2)\n    del resized_image\n    gc.collect()\n    \n    print(\"[INFO] Now predicting probability on Test set\")\n    (graphemeProba, vowelProba, consonantProba) = model.predict(test_set)\n\n    del test_set\n    gc.collect()\n \n    print(\"[INFO] Now creating labels from predicted probabilities\")\n    \n    for j in range (len(graphemeProba)):\n        consonantIdx = consonantProba[j].argmax()\n        consonantLabel = consonantLB.classes_[consonantIdx]\n        row_id.append(test_df['image_id'][j]+\"_consonant_diacritic\")\n        target.append(consonantLabel)\n        graphemeIdx = graphemeProba[j].argmax()\n        graphemeLabel = graphemeLB.classes_[graphemeIdx]\n        row_id.append(test_df['image_id'][j]+\"_grapheme_root\")\n        target.append(graphemeLabel)\n        vowelIdx = vowelProba[j].argmax()\n        vowelLabel = vowelLB.classes_[vowelIdx]\n        row_id.append(test_df['image_id'][j]+\"_vowel_diacritic\")\n        target.append(vowelLabel)\n           \n    del test_df\n    gc.collect()","85c04d4a":"print(\"[INFO] Now creating Submission data\")\nsub_df = pd.DataFrame()\nsub_df[\"row_id\"]=row_id\nsub_df[\"target\"]=target","69e74898":"print(sub_df.head())\nprint(sub_df.tail())","c88448c2":"print(\"[INFO] Sample Submission data\")\nsample_sub_df = pd.read_csv('\/kaggle\/input\/bengaliai-cv19\/sample_submission.csv')\nprint(sample_sub_df.head())","86957e16":"print(\"[INFO] now writing submission csv\")\nsub_df.to_csv(\"submission.csv\",index=False)","84ee09bd":"## Create Label Binarizer for the three Classes","08ff57df":"## Load saved model, pre-process Test data and make predictions on Test Set"}}