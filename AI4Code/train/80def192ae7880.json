{"cell_type":{"9bd6e61e":"code","534eeaf2":"code","abe01a3b":"code","f76b7301":"code","98cd9d03":"code","c5c52cf6":"code","b1c77464":"code","be9278c1":"code","9fa2c6b7":"code","918d307b":"code","8310078f":"code","d616cc08":"code","87965b8b":"code","b6862fb2":"code","17ce49b5":"code","a30adc22":"code","4db3a152":"code","ba051e34":"code","fd351ae3":"code","66c5e0ef":"code","2e0e2130":"code","fcb46d80":"code","83d88f52":"code","461778de":"code","4e092a95":"code","72b375e8":"code","253b0bf8":"code","3a6af48e":"code","ce5b002a":"code","88a6b707":"code","93a67f33":"code","53db9624":"code","0d1f20ce":"markdown","0968a7ac":"markdown","6d897d05":"markdown","ef25feb1":"markdown","c9aecaf4":"markdown","e9d6c60c":"markdown","ffa25718":"markdown","9c9c5bcb":"markdown","5a88e7a1":"markdown","a5cc4e6e":"markdown","011592db":"markdown","8f634639":"markdown","75679303":"markdown","e7689027":"markdown","b7fb8d01":"markdown","ea3ae5f7":"markdown","e998a21a":"markdown","0f6b9c02":"markdown","3c90cd23":"markdown","1e086af8":"markdown","1bd8b881":"markdown","0654847c":"markdown","28dfa97a":"markdown"},"source":{"9bd6e61e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\n\nimport os\nos.listdir('..\/input')","534eeaf2":"years=[1,1000,1500,1600,1700,1750,1800,1850,1900,1950,1955,1960,1965,1970,1980,1985,1990,\n       1995,2000,2005,2010,2015]\npops=[200,400,458,580,682,791,1000,1262,1650,2525,2758,3018,3322,3682,\n      4061,4440,4853,5310,5735,6127,6520,7349]\nplt.plot(years,pops)\nplt.show","abe01a3b":"years=[1950,1955,1960,1965,1970,1980,1985,1990,1995,2000,2005,2010,2015]\npops=[2.5,2.7,3.0,3.3,3.6,4.0,4.4,4.8,5.3,5.7,6.1,6.5,7.3]\nplt.plot(years,pops,color=(255\/255,100\/255,100\/255))\nplt.ylabel(\"Population in Billions\")\nplt.xlabel(\"Population growth by year\")\nplt.title(\"Population Growth\")\nplt.show","f76b7301":"x = [1,6,3]\ny = [5,9,4]\n\nx2 = [1,2,3]\ny2 = [10,14,12]\n\nplt.plot(x, y, label='First Line')\nplt.plot(x2, y2, label='Second Line')\nplt.xlabel('Plot Number')\nplt.ylabel('Important var')\nplt.title('Interesting Graph Check it out')\nplt.legend()\nplt.show()","98cd9d03":"years=[1950,1955,1960,1965,1970,1980,1985,1990,1995,2000,2005,2010,2015]\npops=[2.5,2.7,3.0,3.3,3.6,4.0,4.4,4.8,5.3,5.7,6.1,6.5,7.3]\ndeath=[1.2,1.1,1.2,2.1,2.0,2.3,1.8,1.9,2.6,1.6,2.4,2.4,4.0]\nplt.plot(years,pops,'--',color=(255\/255,100\/255,100\/255))\nplt.plot(years,death,color=(.6,.6,1))\nplt.ylabel(\"Population in Billions\")\nplt.xlabel(\"Population growth by year\")\nplt.title(\"Population Growth\")\nplt.show","c5c52cf6":"years=[1950,1955,1960,1965,1970,1980,1985,1990,1995,2000,2005,2010,2015]\npops=[2.5,2.7,3.0,3.3,3.6,4.0,4.4,4.8,5.3,5.7,6.1,6.5,7.3]\ndeath=[1.2,1.1,1.2,2.1,2.0,2.3,1.8,1.9,2.6,1.6,2.4,2.4,4.0]\nlines=plt.plot(years,pops,years,death)\nplt.grid(True)\nplt.setp(lines,color=(1,.4,.5),marker='*')\nplt.show","b1c77464":"labels=['Python','C','C++','PHP','Java','Ruby']\nsizes=[33,52,12,17,42,48]\nseparated=(.1,0,0,0,0,0)\nplt.pie(sizes,labels=labels,autopct='%1.1f%%',explode=separated)\nplt.axis('equal')\nplt.show()","be9278c1":"raw_data={'names':['Nick','Sani','John','Rubi','Maya'],\n         'jan_ir':[123,124,125,126,128],\n         'feb_ir':[23,24,25,27,29],\n         'march_ir':[3,5,7,6,9]}\n\ndf=pd.DataFrame(raw_data,columns=['names','jan_ir','feb_ir','march_ir'])\ndf","9fa2c6b7":"raw_data={'names':['Nick','Sani','John','Rubi','Maya'],\n         'jan_ir':[123,124,125,126,128],\n         'feb_ir':[23,24,25,27,29],\n         'march_ir':[3,5,7,6,9]}\n\ndf=pd.DataFrame(raw_data,columns=['names','jan_ir','feb_ir','march_ir'])\ndf['total_ir']=df['jan_ir']+df['feb_ir']+df['march_ir']\ndf","918d307b":"color=[(1,.4,.4),(1,.6,1),(.5,.3,1),(.3,1,.5),(.7,.7,.2)]\nplt.pie(df['total_ir'],labels=df['names'],colors=color,autopct='%1.1f%%')\nplt.axis('equal')\nplt.show()","8310078f":"korea_scores=(554,536,538)\ncanada_scores=(518,523,525)\nchina_scores=(413,570,580)\nfranch_scores=(495,505,499)\nindex=np.arange(3)\nbar_width=.2\nk1=plt.bar(index,korea_scores,bar_width,alpha=.9,label=\"Korea\")\nc1=plt.bar(index+bar_width,canada_scores,bar_width,alpha=.9,label=\"Canada\")\nch1=plt.bar(index+bar_width*2,china_scores,bar_width,alpha=.9,label=\"China\")\nf1=plt.bar(index+bar_width*3,franch_scores,bar_width,alpha=.9,label=\"Franch\")\nplt.xticks(index+.6\/2,('Mathematics','Reading','Science'))\nplt.ylabel('Mean score in PISA in 2012')\nplt.xlabel('Subjects')\nplt.title('Test scores by Country')\nplt.grid(True)\nplt.legend()\nplt.show()","d616cc08":"plt.bar([1,3,5,7,9],[5,2,7,8,2], label=\"Example one\")\nplt.bar([2,4,6,8,10],[8,6,2,5,6], label=\"Example two\", color='g')\nplt.legend()\nplt.xlabel('bar number')\nplt.ylabel('bar height')\n\nplt.title('Epic Graph\\nAnother Line! Whoa')\n\nplt.show()","87965b8b":"population_ages = [22,55,62,45,21,22,34,42,42,4,99,102,110,120,121,122,130,111,115,112,80,75,65,54,44,43,42,48]\n\nbins = [0,10,20,30,40,50,60,70,80,90,100,110,120,130]\n\nplt.hist(population_ages, bins, histtype='bar', rwidth=0.8)\n\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Interesting Graph\\nCheck it out')\nplt.show()","b6862fb2":"x = [1,2,3,4,5,6,7,8]\ny = [5,2,4,2,1,4,5,2]\n\nplt.scatter(x,y, label='skitscat Raggedy', color='k', s=25, marker=\"o\")\n\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Interesting Graph\\nCheck it out')\nplt.legend()\nplt.show()","17ce49b5":"days = [1,2,3,4,5]\n\nsleeping = [7,8,6,11,7]\neating =   [2,3,4,3,2]\nworking =  [7,8,7,2,2]\nplaying =  [8,5,7,8,13]\nplt.stackplot(days, sleeping,eating,working,playing, colors=['m','c','r','k'])\n\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Interesting Graph\\nStack Plots')\nplt.show()","a30adc22":"days = [1,2,3,4,5]\n\nsleeping = [7,8,6,11,7]\neating =   [2,3,4,3,2]\nworking =  [7,8,7,2,2]\nplaying =  [8,5,7,8,13]\n\n\nplt.plot([],[],color='m', label='Sleeping', linewidth=5)\nplt.plot([],[],color='c', label='Eating', linewidth=5)\nplt.plot([],[],color='r', label='Working', linewidth=5)\nplt.plot([],[],color='k', label='Playing', linewidth=5)\n\nplt.stackplot(days, sleeping,eating,working,playing, colors=['m','c','r','k'])\n\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('Interesting Graph\\nCheck it out')\nplt.legend()\nplt.show()","4db3a152":"from mpl_toolkits.mplot3d import axes3d\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\n\nstyle.use('fivethirtyeight')\n\nfig = plt.figure()\nax1 = fig.add_subplot(111, projection='3d')\n\nx = [1,2,3,4,5,6,7,8,9,10]\ny = [5,6,7,8,2,5,6,3,7,2]\nz = [1,2,6,3,2,7,3,3,7,2]\n\nax1.plot(x,y,z)\n\nax1.set_xlabel('x axis')\nax1.set_ylabel('y axis')\nax1.set_zlabel('z axis')\n\nplt.show()","ba051e34":"from mpl_toolkits.mplot3d import axes3d\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\n\nstyle.use('ggplot')\n\nfig = plt.figure()\nax1 = fig.add_subplot(111, projection='3d')\n\nx = [1,2,3,4,5,6,7,8,9,10]\ny = [5,6,7,8,2,5,6,3,7,2]\nz = [1,2,6,3,2,7,3,3,7,2]\n\nx2 = [-1,-2,-3,-4,-5,-6,-7,-8,-9,-10]\ny2 = [-5,-6,-7,-8,-2,-5,-6,-3,-7,-2]\nz2 = [1,2,6,3,2,7,3,3,7,2]\n\nax1.scatter(x, y, z, c='g', marker='o')\nax1.scatter(x2, y2, z2, c ='r', marker='o')\n\nax1.set_xlabel('x axis')\nax1.set_ylabel('y axis')\nax1.set_zlabel('z axis')\n\nplt.show()","fd351ae3":"from mpl_toolkits.mplot3d import axes3d\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom matplotlib import style\nstyle.use('ggplot')\n\nfig = plt.figure()\nax1 = fig.add_subplot(111, projection='3d')\n\nx3 = [1,2,3,4,5,6,7,8,9,10]\ny3 = [5,6,7,8,2,5,6,3,7,2]\nz3 = np.zeros(10)\n\ndx = np.ones(10)\ndy = np.ones(10)\ndz = [1,2,3,4,5,6,7,8,9,10]\n\nax1.bar3d(x3, y3, z3, dx, dy, dz)\n\n\nax1.set_xlabel('x axis')\nax1.set_ylabel('y axis')\nax1.set_zlabel('z axis')\n\nplt.show()","66c5e0ef":"from mpl_toolkits.mplot3d import axes3d\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom matplotlib import style\nstyle.use('ggplot')\n\nfig = plt.figure()\nax1 = fig.add_subplot(111, projection='3d')\n\nx, y, z = axes3d.get_test_data()\n\nax1.plot_wireframe(x,y,z, rstride = 3, cstride = 3)\n\nax1.set_xlabel('x axis')\nax1.set_ylabel('y axis')\nax1.set_zlabel('z axis')\n\nplt.show()","2e0e2130":"img = mpimg.imread('..\/input\/unlabeled_images\/unlabeled_image_png_30319.png')\nprint(img)","fcb46d80":"plt.figure(figsize=(10,6))\nimgplot = plt.imshow(img)","83d88f52":"plt.figure(figsize=(10,6))\nlum_img = img[:, :, 0]\nplt.imshow(lum_img)","461778de":"plt.figure(figsize=(10,6))\nplt.imshow(lum_img, cmap=\"hot\")","4e092a95":"plt.figure(figsize=(10,6))\nimgplot = plt.imshow(lum_img)\nimgplot.set_cmap('nipy_spectral')","72b375e8":"plt.figure(figsize=(10,6))\nimgplot = plt.imshow(lum_img)\nplt.colorbar()","253b0bf8":"plt.figure(figsize=(10,6))\nplt.hist(lum_img.ravel(), bins=256, range=(0.0, 1.0), fc='k', ec='k')","3a6af48e":"plt.figure(figsize=(10,6))\nimgplot = plt.imshow(lum_img, clim=(0.0, 0.7))","ce5b002a":"fig = plt.figure(figsize=(10,6))\na = fig.add_subplot(1, 2, 1)\nimgplot = plt.imshow(lum_img)\na.set_title('Before')\nplt.colorbar(ticks=[0.1, 0.3, 0.5, 0.7], orientation='horizontal')\na = fig.add_subplot(1, 2, 2)\nimgplot = plt.imshow(lum_img)\nimgplot.set_clim(0.0, 0.7)\na.set_title('After')\nplt.colorbar(ticks=[0.1, 0.3, 0.5, 0.7], orientation='horizontal')","88a6b707":"from PIL import Image\n\nimg = Image.open('..\/input\/unlabeled_images\/unlabeled_image_png_51042.png')\nimg.thumbnail((64, 64), Image.ANTIALIAS)  # resizes image in-place\nimgplot = plt.imshow(img)","93a67f33":"imgplot = plt.imshow(img, interpolation=\"nearest\")\n","53db9624":"imgplot = plt.imshow(img, interpolation=\"bicubic\")","0d1f20ce":"###  Adding labels and custom line color","0968a7ac":"### Configuring the graph","6d897d05":"### Letting Pandas make data simpler","ef25feb1":"### 3D Bar Chart","c9aecaf4":"### Applying pseudocolor schemes to image plots\n\nPseudocolor is a useful tool for enhancing contrast and visualizing data more easily. This is especially useful when making presentations of data using projectors - their contrast is typically quite poor.\n\nPseudocolor is only relevant to single-channel, grayscale, luminosity images. We currently have an RGB image. Since R, G, and B are all similar, we can just pick one channel of our data:","e9d6c60c":"### Plotting numpy arrays as images","ffa25718":"### Scatter Plots","9c9c5bcb":"Now we cover histograms. Very much like a bar chart, histograms tend to show distribution by grouping segments together. Examples of this might be age groups, or scores on a test. Rather than showing every single age a group might be, maybe you just show people from 20-25, 25-30... and so on. ","5a88e7a1":"### Bar charts","a5cc4e6e":"### Multiple lines and line styling","011592db":"Specify the clim using the returned object","8f634639":"Change colormaps on existing plot objects using the set_cmap() method:","75679303":"### Examining a specific data range\nTo enhance the contrast in image, or expand the contrast in a particular region while sacrificing the detail in colors that don't vary much, or don't matter. A good tool to find interesting regions is the histogram. To create a histogram of image data, we use the `hist()` function.","e7689027":"### Bar Charts and Histograms\n let's cover a bar chart.","b7fb8d01":"### Stack Plots","ea3ae5f7":"### 3D graphs","e998a21a":"### Array Interpolation schemes\n\nInterpolation calculates what the color or value of a pixel \"should\" be, according to different mathematical schemes. One common place that this happens is when you resize an image. The number of pixels change, but you want the same information. Since pixels are discrete, there's missing space. Interpolation is how you fill that space. This is why your images sometimes come out looking pixelated when you blow them up. The effect is more pronounced when the difference between the original image and the expanded image is greater. Let's take our image and shrink it. We're effectively discarding pixels, only keeping a select few. Now when we plot it, that data gets blown up to the size on your screen. The old pixels aren't there anymore, and the computer has to draw in pixels to fill that space.","0f6b9c02":"### 3D Scatter Plot","3c90cd23":"### Legends, Titles, and Labels","1e086af8":"## Plotting Images\n### Importing image data into Numpy arrays\n","1bd8b881":"### Let's make pie (charts)","0654847c":"### Using Panda's data for pie charts","28dfa97a":"### Color scale\n\nIt's helpful to have an idea of what value a color represents. We can do that by adding color bars."}}