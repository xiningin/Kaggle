{"cell_type":{"ee1178a9":"code","c2e88a26":"code","58450544":"code","f468027e":"code","a209bb00":"code","d2edd466":"code","313a1d68":"code","1c589133":"code","ee4be31a":"code","abb4dae0":"code","f2a85349":"code","a46b4d18":"code","b08d02ce":"code","9fc91c7c":"code","1c589a12":"code","af34d9e9":"code","3fbd0598":"code","9c74aead":"code","7e27db13":"code","fcfe07b1":"code","aee1b603":"code","796bc93a":"code","53360578":"code","4a71e416":"code","e2ae45ea":"code","037823f9":"code","78ac2fa1":"code","4d513c58":"code","15d263b4":"code","59343a09":"code","fb663b64":"code","ff265d35":"code","9ccc70fc":"code","fe326580":"code","ea51cf1d":"code","a94f265b":"code","fa66198a":"code","845ab702":"markdown","7a043a8b":"markdown","7e268acb":"markdown","ddadc056":"markdown","bb773fda":"markdown","9b539d90":"markdown","eabaa7f0":"markdown","cef9130e":"markdown","70238b65":"markdown","c2c0b11d":"markdown"},"source":{"ee1178a9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c2e88a26":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","58450544":"! pip install fastai==1.0.61","f468027e":"from fastai.vision import *\nfrom fastai.metrics import error_rate","a209bb00":"bs = 64 # Set batch size","d2edd466":"path_img = Path('..\/input\/stanford-dogs-dataset\/images\/Images\/')\npath_img","313a1d68":"data = ImageDataBunch.from_folder(path_img, valid_pct=0.2, size=244, ds_tfms=get_transforms(), bs=bs).normalize(imagenet_stats)","1c589133":"data.show_batch(rows=3, figsize=(7,6))","ee4be31a":"print(data.classes)\nlen(data.classes), data.c","abb4dae0":"learn = cnn_learner(data, models.resnet34, metrics=error_rate)","f2a85349":"learn.model","a46b4d18":"learn.fit_one_cycle(4)","b08d02ce":"learn.path = Path('..\/output')","9fc91c7c":"learn.save('stage-1') # save model","1c589a12":"interp = ClassificationInterpretation.from_learner(learn)\n\nlosses,idxs = interp.top_losses()\n\nlen(data.valid_ds)==len(losses)==len(idxs)","af34d9e9":"interp.plot_top_losses(9, figsize=(15,11))","3fbd0598":"interp.plot_confusion_matrix(figsize=(12,12), dpi=60)","9c74aead":"interp.most_confused(min_val=2)","7e27db13":"\nlearn.load('stage-1')","fcfe07b1":"\nlearn.lr_find()","aee1b603":"\nlearn.recorder.plot()","796bc93a":"learn.unfreeze()\nlearn.fit_one_cycle(2, max_lr=slice(1e-6,1e-4))","53360578":"learn.load('stage-1')","4a71e416":"learn.export('\/kaggle\/working\/export.pkl') # export model","e2ae45ea":"data = ImageDataBunch.from_folder(path_img, valid_pct=0.2, size=299, ds_tfms=get_transforms(), bs=bs\/\/2).normalize(imagenet_stats)","037823f9":"data.show_batch(rows=3, figsize=(7,6))","78ac2fa1":"learn = cnn_learner(data, models.resnet50, metrics=error_rate)","4d513c58":"learn.model","15d263b4":"learn.path = Path('..\/output')","59343a09":"learn.lr_find()\nlearn.recorder.plot()","fb663b64":"learn.fit_one_cycle(8, max_lr=slice(1e-3))","ff265d35":"learn.save('stage-1-50')","9ccc70fc":"learn.export(Path('\/kaggle\/working\/export.pkl'))","fe326580":"learn.unfreeze()\nlearn.fit_one_cycle(3, max_lr=slice(1e-6,1e-4))","ea51cf1d":"learn.save('stage-1-50-unfreeze')","a94f265b":"learn.load('stage-1-50')","fa66198a":"interp = ClassificationInterpretation.from_learner(learn)\n\nlosses,idxs = interp.top_losses()\n\nlen(data.valid_ds)==len(losses)==len(idxs)\ninterp.most_confused(min_val=2)","845ab702":"# Setup cnn learner for transfer learning ","7a043a8b":"It seems that for both the resnet34 and resnet50 architecture, unfreezing the model and fitting for a few more cycles led to overfitting","7e268acb":"# Load Data","ddadc056":"# Repeat with resnet50\n","bb773fda":"Training with the resnet50 for 8 cycles led to the lowest error rate in this notebook","9b539d90":"# Train Model","eabaa7f0":"# Unfreeze and train some more ","cef9130e":"#  Analyze classification errors","70238b65":"This notebook follows the workflow presented in the fastai v3 course lesson one notebook for resnet transfer learning ","c2c0b11d":"# Import libraries"}}