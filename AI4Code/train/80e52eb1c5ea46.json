{"cell_type":{"df73d291":"code","5487f088":"code","9143c4b8":"code","21948d5b":"code","83c03574":"code","011b15ca":"code","6b21aa64":"code","c8d064dc":"code","d4352ddc":"code","58da4533":"code","4cdb5f0e":"code","ebaf72b6":"code","1e5b14e5":"code","e64dc0be":"code","bfce393b":"code","15b13def":"code","dca90647":"code","6574c0da":"code","465e5dc5":"code","3916506e":"code","29747341":"code","68729f60":"code","03d94908":"code","7147a98e":"code","a60fd311":"code","9899c3f6":"code","a4b96775":"code","1f787627":"code","dc18f8ba":"code","35fb526e":"code","6492328d":"code","e6801093":"code","27cc157e":"code","6d771b60":"code","452f7e89":"markdown","3dd47616":"markdown","fb91828d":"markdown","86c238ee":"markdown","d567a178":"markdown","97118fc7":"markdown","9da28690":"markdown","ec6955c5":"markdown","ebe12519":"markdown","256368c5":"markdown","ddab6e83":"markdown","bb27c760":"markdown","f1068f8f":"markdown","df060b8c":"markdown","cbf3844a":"markdown","902a7ecb":"markdown","12ba0ccd":"markdown","e197e65f":"markdown","2bb3987b":"markdown"},"source":{"df73d291":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5487f088":"train_df = pd.read_csv('\/kaggle\/input\/airline-passenger-satisfaction\/train.csv')\ntrain_df.head()","9143c4b8":"train_df.shape","21948d5b":"train_df.info()","83c03574":"train_df.isnull().sum()","011b15ca":"train_df['Arrival Delay in Minutes'].fillna((train_df['Arrival Delay in Minutes'].mean()), inplace=True)","6b21aa64":"train_df.isna().sum()","c8d064dc":"train_df['satisfaction'].value_counts().plot(kind='bar', rot=0, title='People are more neutral\/dissatisfied than satisfied with the airline')","d4352ddc":"customer_df = train_df.groupby(['satisfaction', 'Customer Type'])['satisfaction'].count().unstack('Customer Type')\ncustomer_df.plot(kind='bar',figsize = (10,5), rot=0, title='Loyal customers are more dissatisfied with the airline')","58da4533":"class_df = train_df.groupby(['satisfaction', 'Class'])['satisfaction'].count().unstack('Class')\nclass_df.plot(kind='bar',figsize = (10,5), rot=0, title='People travelling business class are most satisfied')","4cdb5f0e":"train_df['Class'].value_counts().plot(kind='bar', rot=0, title='People travel more via Eco rather than Eco Plus')","ebaf72b6":"train_df['Type of Travel'].value_counts().plot(kind='bar', rot=0)","1e5b14e5":"legroom_df = train_df.groupby(['satisfaction', 'Leg room service'])['satisfaction'].count().unstack('Leg room service')\nlegroom_df.plot(kind='bar',figsize = (10,5), rot=0, colormap='Blues', title='Leg room service needs to be improved')","e64dc0be":"clean_df = train_df.groupby(['satisfaction', 'Cleanliness'])['satisfaction'].count().unstack('Cleanliness')\nclean_df.plot(kind='bar',figsize = (10,5), rot=0, colormap='Blues', title='People are not finding the airplanes clean')","bfce393b":"train_df['Gender'].value_counts().plot(kind='bar', rot=0)","15b13def":"gender_df = train_df.groupby(['satisfaction', 'Gender'])['satisfaction'].count().unstack('Gender')\ngender_df.plot(kind='bar', rot=0)","dca90647":"train_df = train_df.drop(['Unnamed: 0', 'id'], axis=1)\ntrain_df.head()","6574c0da":"train_df['satisfaction'].replace({'satisfied': 1, 'neutral or dissatisfied': 0}, inplace=True)","465e5dc5":"train_df['Gender'].replace({'Male': 0, 'Female': 1}, inplace=True)","3916506e":"train_df['Type of Travel'].replace({'Personal Travel': 0, 'Business travel': 1}, inplace=True)","29747341":"train_df['Customer Type'].replace({'Loyal Customer': 0, 'disloyal Customer': 1}, inplace=True)","68729f60":"train_df['Class'].replace({'Eco Plus': 0, 'Business': 1, 'Eco': 2}, inplace=True)","03d94908":"from sklearn.linear_model import LogisticRegression\nfrom sklearn import preprocessing","7147a98e":"scaler = preprocessing.MinMaxScaler()\nscaler.fit(train_df)\ntrain_df = pd.DataFrame(scaler.transform(train_df), index = train_df.index, columns = train_df.columns)","a60fd311":"x_train = train_df.drop('satisfaction', axis = 1)\ny_train = train_df['satisfaction']","9899c3f6":"model = LogisticRegression(random_state = 24)\nmodel.fit(x_train, y_train)","a4b96775":"test_df = pd.read_csv('\/kaggle\/input\/airline-passenger-satisfaction\/test.csv')\ntest_df.head()","1f787627":"test_df['satisfaction'].replace({'satisfied': 1, 'neutral or dissatisfied': 0}, inplace=True)\ntest_df['Gender'].replace({'Male': 0, 'Female': 1}, inplace=True)\ntest_df['Type of Travel'].replace({'Personal Travel': 0, 'Business travel': 1}, inplace=True)\ntest_df['Customer Type'].replace({'Loyal Customer': 0, 'disloyal Customer': 1}, inplace=True)\ntest_df['Class'].replace({'Eco Plus': 0, 'Business': 1, 'Eco': 2}, inplace=True)","dc18f8ba":"test_df['Arrival Delay in Minutes'].fillna((test_df['Arrival Delay in Minutes'].mean()), inplace=True)\ntest_df = test_df.drop(['Unnamed: 0','id'], axis=1)","35fb526e":"scaler.fit(test_df)\ntest_df = pd.DataFrame(scaler.transform(test_df), index = test_df.index, columns = test_df.columns)","6492328d":"x_test = test_df.drop('satisfaction',axis=1)\ny_test = test_df['satisfaction']","e6801093":"y_pred = model.predict(x_test)","27cc157e":"from sklearn.metrics import accuracy_score","6d771b60":"score = accuracy_score(y_test,y_pred)\nscore","452f7e89":"**Converting categorical variables to numerical, replacing null values and removing columns that are not required**","3dd47616":"### Initializing DataFrame and taking a glance at the data ","fb91828d":"### Initializing test data","86c238ee":"**Separating the target value**","d567a178":"### Getting more details regarding data","97118fc7":"**Fitting the model on standardized data**","9da28690":"**Predicting value for test data**","ec6955c5":"### Converting categorical values into numerical","ebe12519":"**Checking for null values**","256368c5":"**Replacing null values with the mean of the column**","ddab6e83":"**Standardizing test data**","bb27c760":"**Separating the target value**","f1068f8f":"## In this notebook I predict whether passenger flying a particular airline are satisfied with its service or not","df060b8c":"#### Equality\nThe data is almost identical in case of gender. ","cbf3844a":"### Exploratory Data Analysis (EDA)","902a7ecb":"**Removing extra columns that are not required**","12ba0ccd":"## We get an accuracy of 87% !","e197e65f":"**Standardizing data**","2bb3987b":"**Finding accuracy of the model**"}}