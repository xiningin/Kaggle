{"cell_type":{"26039069":"code","e42be2e5":"code","2ab4b158":"code","83ebdda4":"code","92219542":"code","fe73872f":"code","f7c5cdb1":"code","eaa447cf":"code","7328552d":"code","2ed18173":"code","83c417f6":"code","44298792":"code","eda11db4":"code","3b3f6e67":"code","1f17e5ec":"code","61e209d7":"code","ef304f56":"code","67657b5e":"code","a23dc150":"code","7bd8f8ba":"code","af0b5d39":"code","1974d9e7":"code","827ced13":"code","56d468f7":"code","a9f4d6cf":"code","a3cfe471":"code","995325a4":"code","035802c8":"code","d73fc4c5":"code","4ef86096":"code","c6c624cc":"code","7554d592":"code","62eb0108":"code","da7ecbc3":"code","9bd0c33c":"code","6033d896":"code","7ea9f6e2":"code","c71c875b":"code","3b2d0871":"code","311fadab":"code","de78a58f":"code","4513b21f":"code","d45496eb":"code","f94085da":"code","9f919b8a":"code","694ca061":"code","81bbf2e0":"code","384f688d":"code","bcfa3f99":"code","df7bd272":"code","e9c5376f":"code","54831303":"code","6ad7947e":"code","85f6f0aa":"code","c20746fb":"code","ccff6434":"code","5e360447":"markdown","3e0f8d65":"markdown","d4250130":"markdown","cd2fc189":"markdown"},"source":{"26039069":"import numpy as np\nimport pandas as pd\nimport seaborn as sns","e42be2e5":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')\n","2ab4b158":"train.head()","83ebdda4":"train.isnull().sum()","92219542":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","fe73872f":"sns.set_style('whitegrid')\nsns.countplot(x = 'Survived',data = train)","f7c5cdb1":"train['Survived'].value_counts()","eaa447cf":"sns.countplot(x='Survived',hue = 'Sex' , data = train, palette ='RdBu_r' )","7328552d":"sns.countplot(x='Survived', hue = 'Pclass',data = train,palette ='rainbow' )","2ed18173":"sns.distplot(train['Age'].dropna(),kde=False,color = 'darkred',bins=400)","83c417f6":"sns.countplot(x = 'SibSp',data = train)","44298792":"train['Fare'].hist(color = 'green',bins = 40)","eda11db4":"sns.boxplot(x = 'Pclass',y ='Age',data = train)","3b3f6e67":"def impute_age(cols):\n    Age = cols[0]\n    PClass = cols[1]\n    \n    if pd.isnull(Age):\n        if PClass == 1:\n            return 37\n        elif PClass == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age\n        \n    \n    ","1f17e5ec":"train['Age'] = train[['Age','Pclass']].apply(impute_age,axis =1)\ntest['Age'] = test[['Age','Pclass']].apply(impute_age,axis =1)","61e209d7":"train['Age'].isnull().sum","ef304f56":"sns.heatmap(train.isnull(),yticklabels = False,cbar = 'False',cmap = 'viridis')","67657b5e":"test.head()","a23dc150":"train.drop('Cabin',axis=1,inplace=True)\n\n\n","7bd8f8ba":"train.head()","af0b5d39":"test.drop('Cabin',axis =1,inplace = True)","1974d9e7":"train.head()","827ced13":"sns.heatmap(train.isnull(),yticklabels = False,cbar = False,cmap = 'viridis')","56d468f7":"embark=pd.get_dummies(train['Embarked'],drop_first = True)","a9f4d6cf":"sex =pd.get_dummies(train['Sex'],drop_first = True)","a3cfe471":"train.head()","995325a4":"train.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace = True)","035802c8":"train.head()","d73fc4c5":"train = pd.concat([train,sex,embark],axis =1)","4ef86096":"train.head()","c6c624cc":"embark_test = pd.get_dummies(test['Embarked'],drop_first = True)","7554d592":"sex_test = pd.get_dummies(test['Sex'],drop_first = True)","62eb0108":"test.drop(['Sex','Name','Embarked','Ticket'],axis =1,inplace = True)","da7ecbc3":"test= pd.concat([test,sex_test,embark_test],axis =1)","9bd0c33c":"train.head()","6033d896":"test.head()","7ea9f6e2":"mean_fare = test['Fare'].mean()","c71c875b":"test.at[152,'Fare']=mean_fare","3b2d0871":"test.loc[152]","311fadab":"from sklearn.linear_model import LogisticRegression","de78a58f":"model = LogisticRegression()","4513b21f":"X = train.drop(\"Survived\",axis =1)\ny = train[\"Survived\"]","d45496eb":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=  0.3,random_state = 101)","f94085da":"model.fit(X_train, y_train)","9f919b8a":"X_test.head()","694ca061":"predictions = model.predict(X_test)","81bbf2e0":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,predictions))","384f688d":"from sklearn.metrics import confusion_matrix\nconfusion_matrix(y_test,predictions)","bcfa3f99":"from sklearn.ensemble import RandomForestClassifier\n","df7bd272":"RFC = RandomForestClassifier(n_estimators = 10, criterion = 'entropy',random_state =0)\nRFC.fit(X_train,y_train)","e9c5376f":"predictions_1 = RFC.predict(X_test)","54831303":"from sklearn.metrics import confusion_matrix,accuracy_score\nprint(accuracy_score(y_test,predictions_1))\nconfusion_matrix(y_test,predictions_1)\n","6ad7947e":"from sklearn.svm import SVC\nSV = SVC(kernel = 'linear',random_state =0)\nSV.fit(X_train,y_train)\n","85f6f0aa":"prediction_SV = SV.predict(X_test)\nprint(accuracy_score(prediction_SV,y_test))","c20746fb":"predictions = RFC.predict(test)","ccff6434":"submission = pd.DataFrame({'PassengerId':test['PassengerId'] ,'Survived': predictions},dtype = int)\nsubmission.to_csv(\"submission.csv\",index = False)\nsubmission.tail()","5e360447":"### Categorical  features","3e0f8d65":"## Importing Libraries","d4250130":"## Logistic Regression","cd2fc189":"## Data Cleaning "}}