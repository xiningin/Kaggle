{"cell_type":{"972172df":"code","708547ee":"code","0ea60224":"code","15c896f3":"code","b3534e9e":"code","56769ada":"code","ff43b5e6":"code","f2d450d2":"code","9a2c22ef":"code","9b7e94f5":"code","70e6e253":"code","5b85a26f":"code","c7445629":"code","d048d9c8":"code","d80e7e86":"code","f5598a86":"code","cf44e5bb":"code","2c4b7a70":"code","99168497":"code","c16e8709":"code","bb723802":"code","27bc9ce2":"code","ae98d81b":"markdown","d9df9bd2":"markdown","9592b9f0":"markdown","8065e65b":"markdown","1a89d073":"markdown","0726f8df":"markdown","723e807e":"markdown","1d5fb4dd":"markdown","e0af58ff":"markdown","81d442f8":"markdown","6b8b40f6":"markdown","4238182f":"markdown","abba3166":"markdown","52d1f2af":"markdown","73fc18f6":"markdown","37e0bf01":"markdown","3889e714":"markdown","7eaf60f4":"markdown","9ad1e536":"markdown","9f735dbd":"markdown","d0a70f67":"markdown","432f580f":"markdown","6f038aaf":"markdown","ff36b305":"markdown","411377d3":"markdown","d413968f":"markdown","ed130bc5":"markdown","6a89aba2":"markdown","3bc5895f":"markdown"},"source":{"972172df":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport tflearn.data_utils as du\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D\nfrom keras.optimizers import RMSprop\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom sklearn.metrics import confusion_matrix","708547ee":"train_data = pd.read_csv('..\/input\/csvTrainImages 13440x1024.csv', header = None)\ntrain_label = pd.read_csv('..\/input\/csvTrainLabel 13440x1.csv', header = None)\ntest_data = pd.read_csv('..\/input\/csvTestImages 3360x1024.csv', header = None)\ntest_label = pd.read_csv('..\/input\/csvTestLabel 3360x1.csv', header = None)\n","0ea60224":"train_data.info()","15c896f3":"train_data = train_data.iloc[:,:].values.astype('float32')\ntrain_label = train_label.iloc[:,:].values.astype('int32')-1\ntest_data = test_data.iloc[:,:].values.astype('float32')\ntest_label = test_label.iloc[:,:].values.astype('int32')-1","b3534e9e":"def row_calculator(number_of_images, number_of_columns):\n    if number_of_images % number_of_columns != 0:\n        return (number_of_images \/ number_of_columns)+1\n    else:\n        return (number_of_images \/ number_of_columns)","56769ada":"def display_image(x, img_size, number_of_images):\n    plt.figure(figsize = (8, 7))\n    if x.shape[0] > 0:\n        n_samples = x.shape[0]\n        x = x.reshape(n_samples, img_size, img_size)\n        number_of_rows = row_calculator(number_of_images, 4)\n        for i in range(number_of_images):\n            plt.subplot(number_of_rows, 4, i+1)\n            plt.imshow(x[i])","ff43b5e6":"display_image(train_data, 32, 16)","f2d450d2":"display_image(test_data, 32, 16)","9a2c22ef":"train_label = du.to_categorical(train_label,28)","9b7e94f5":"train_data = train_data\/255\ntest_data = test_data\/255","70e6e253":"train_data = train_data.reshape([-1, 32, 32, 1])\ntest_data = test_data.reshape([-1, 32, 32, 1])","5b85a26f":"train_data, mean1 = du.featurewise_zero_center(train_data)\ntest_data, mean2 = du.featurewise_zero_center(test_data)","c7445629":"recognizer = Sequential()\n\nrecognizer.add(Conv2D(filters = 32, kernel_size = (5,5),padding = 'Same', \n                 activation ='relu', input_shape = (32,32,1)))\nrecognizer.add(Conv2D(filters = 32, kernel_size = (5,5),padding = 'Same', \n                 activation ='relu'))\nrecognizer.add(MaxPool2D(pool_size=(2,2)))\nrecognizer.add(Dropout(0.25))\n\n\nrecognizer.add(Conv2D(filters = 64, kernel_size = (3,3),padding = 'Same', \n                 activation ='relu'))\nrecognizer.add(Conv2D(filters = 64, kernel_size = (3,3),padding = 'Same', \n                 activation ='relu'))\nrecognizer.add(MaxPool2D(pool_size=(2,2), strides=(2,2)))\nrecognizer.add(Dropout(0.25))\n\n\nrecognizer.add(Flatten())\nrecognizer.add(Dense(units = 256, input_dim = 1024, activation = 'relu'))\nrecognizer.add(Dense(units = 256, activation = \"relu\"))\nrecognizer.add(Dropout(0.5))\nrecognizer.add(Dense(28, activation = \"softmax\"))","d048d9c8":"recognizer.summary()","d80e7e86":"optimizer = RMSprop(lr=0.001, rho=0.9, epsilon=1e-08, decay=0.0)","f5598a86":"recognizer.compile(optimizer = optimizer , loss = \"categorical_crossentropy\", metrics=[\"accuracy\"])","cf44e5bb":"datagen = ImageDataGenerator(\n        featurewise_center=False, \n        samplewise_center=False,  \n        featurewise_std_normalization=False,\n        samplewise_std_normalization=False,\n        zca_whitening=False,\n        rotation_range=10,\n        zoom_range = 0.1,  \n        width_shift_range=0.1, \n        height_shift_range=0.1,\n        horizontal_flip=False,\n        vertical_flip=False)","2c4b7a70":"datagen.fit(train_data)","99168497":"recognizer.fit_generator(datagen.flow(train_data,train_label, batch_size=100),\n                             epochs = 30, verbose = 2, steps_per_epoch=train_data.shape[0] \/\/ 100)","c16e8709":"predictions = recognizer.predict(test_data)\npredictions = np.argmax(predictions,axis = 1)","bb723802":"cm = confusion_matrix(test_label, predictions)","27bc9ce2":"accuracy = sum(cm[i][i] for i in range(28)) \/ test_label.shape[0]\nprint(\"accuracy = \" + str(accuracy))","ae98d81b":"### Encoding categorical variables","d9df9bd2":"## The Dataset\nThe dataset used here is the [Arabic Handwritten Characters Dataset](https:\/\/www.kaggle.com\/mloey1\/ahcd1).\n\nThe trainIamges csv has 1024 columns and 13440 rows. Each column represents a pixel in an image and each row represents an individual grayscale image. The value of each pixel varies from 0 -255.","9592b9f0":"## Calculating the accuracy","8065e65b":"The optimizer used here is an RMSprop.  Click [here](https:\/\/engmrk.com\/rmsprop\/) to know more about RMSprop","1a89d073":"## Fitting the CNN to the training data","0726f8df":"#### What is an optimizer?\n>Optimization algorithms helps us to minimize (or maximize) an Objective function (another name for Error function) E(x) which is simply a mathematical function dependent on the Model\u2019s internal learnable parameters which are used in computing the target values(Y) from the set of predictors(X) used in the model. For example\u200a\u2014\u200awe call the Weights(W) and the Bias(b) values of the neural network as its internal learnable parameters which are used in computing the output values and are learned and updated in the direction of optimal solution i.e minimizing the Loss by the network\u2019s training process and also play a major role in the training process of the Neural Network Model .\n\n*(Source: [Towards Data Science](https:\/\/towardsdatascience.com\/types-of-optimization-algorithms-used-in-neural-networks-and-ways-to-optimize-gradient-95ae5d39529f)*)","723e807e":"## What is Convolution?\n>In mathematics (and, in particular, functional analysis) convolution is a mathematical operation on two functions (f and g) to produce a third function that expresses how the shape of one is modified by the other.\n\n(Source: [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Convolution))\n\nThis operaton is used in several areas such as probability, statistics, computer vision, natural language processing, image and signal processing, engineering, and differential equations. \n\nThis operation is mathematically represented as \n\n![Convolution](https:\/\/wikimedia.org\/api\/rest_v1\/media\/math\/render\/svg\/8a17177acd8ad1f6f3039843ffc2ff4c9dc5ce99)\n\n(Image Source: [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Convolution#Definition))\n\nCheckout [this](https:\/\/en.wikipedia.org\/wiki\/Convolution#Visual_explanation) article for a visual understanding of the Convolution operation","1d5fb4dd":"#### What is Max Pooling?\nPooling means combining a set of data. The process of combining data follows some rules.\n>By definition, max pool takes the maximum value of a defined grid.\n\n(*Source: [machinelearningonline.blog](https:\/\/machinelearningonline.blog\/2017\/06\/29\/max-pooling\/)*)\n\nMax pooling is used to reduce the dimensions. It can also avoid overfitting. Check out [this](https:\/\/machinelearningonline.blog\/2017\/06\/29\/max-pooling\/) blog for a better understanding on Max Pooling.\n\n#### What is Dropout?\n>Dropout is a regularization technique for reducing overfitting in neural networks by preventing complex co-adaptations on training data. It is a very efficient way of performing model averaging with neural networks. The term \"dropout\" refers to dropping out units (both hidden and visible) in a neural network.\n\n(*Source: [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Dropout_(neural_networks))*)\n\n#### What is Flatten?\nFlattening is done to convert the multidimensional data into a 1D feature vector to be used by the next layer which is the Dense Layer\n\n#### What is a Dense Layer?\nThe Dense layer is just a layer of Artificial Neural Network","e0af58ff":"### The training set","81d442f8":"Now, we begin with the code","6b8b40f6":"### Normalizarion\n#### What is Normalization?\nNormalization is done to bring the entire data into a well defined range, preferably between 0 and 1\n>In neural networks, it is good idea not just to normalize data but also to scale them. This is intended for faster approaching to global minima at error surface.\n\n*(Source: [Stack Overflow](https:\/\/stackoverflow.com\/questions\/4674623\/why-do-we-have-to-normalize-the-input-for-an-artificial-neural-network))*","4238182f":"## Building the CNN","abba3166":"## Generating a confusion matrix","52d1f2af":"## Loading the dataset","73fc18f6":"### What is `ImageDataGenerator`?\nImage data generator is used to generate batches of tensor image data with real time augmentation. This data is looped over in batches. \n\nBasically, It is used to load the images in batches.","37e0bf01":"### Seeing a CNN in action\nTo see the working of a CNN in real time, check out [this](http:\/\/scs.ryerson.ca\/~aharley\/vis\/conv\/flat.html) link. It shows the working of a CNN that is trained to recognize handwritten digits.","3889e714":"### A summary of the CNN","7eaf60f4":"### The test set","9ad1e536":"### Optimizer fot the CNN","9f735dbd":"## Making the predictions","d0a70f67":"Reshaping is done to make the data represent a 2D image","432f580f":"## Data preprocessing","6f038aaf":"#### What are Categorical Variables?\n>In statistics, a categorical variable is a variable that can take on one of a limited, and usually fixed number of possible values, assigning each individual or other unit of observation to a particular group or nominal category on the basis of some qualitative property.\n\n(*Source: [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Categorical_variable)*)\n\nIn simple terms, the value of a categorical variable represents a category or class.\n\n#### Why do we need to Encode Categorical Variables?\nThere is no meaning in performing operations on a number representing a category. So, categorical encoding needs to be done.\n\nCheck out [this](https:\/\/stats.stackexchange.com\/questions\/115049\/why-do-we-need-to-dummy-code-categorical-variables#115052) link on stackoverflow to understand with an example.","ff36b305":"## What are Artificial Neural Networks?\n>Artificial neural networks (ANN) or connectionist systems are computing systems vaguely inspired by the biological neural networks that constitute animal brains. Such systems \"learn\" to perform tasks by considering examples, generally without being programmed with any task-specific rules.\n\n(Source: [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Artificial_neural_network))\n\nAn ANN is a has a collection of smaller processing units called the artificial neurons which loosely resemble the biological neuron.\n\n**Biological Neural Circuit**\n![Biological Neural Network](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/1\/10\/Blausen_0657_MultipolarNeuron.png\/300px-Blausen_0657_MultipolarNeuron.png)\n\n(Image Source: [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Neural_circuit))\n\nA collection of interconnected circuits make a network\n\n**Artificial Neural Network**\n![Artificial Neural Network](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/4\/46\/Colored_neural_network.svg\/296px-Colored_neural_network.svg.png)\n\n(Image Source: [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Artificial_neural_network))","411377d3":"#### What is a Confusion matrix?\n>A confusion matrix is a technique for summarizing the performance of a classification algorithm. Classification accuracy alone can be misleading if you have an unequal number of observations in each class or if you have more than two classes in your dataset. Calculating a confusion matrix can give you a better idea of what your classification model is getting right and what types of errors it is making.\n\n[Source](https:\/\/machinelearningmastery.com\/confusion-matrix-machine-learning\/)","d413968f":"This kernel is aimed at giving a simple understanding of a Convolutional Neural Network (CNN). This will be achieved in the following order:\n* Understanding the Convolution operation\n* Understanding Neural Networks\n* Pre-Processing the data\n* Understanding the CNN used\n* Understanding Optimizers\n* Understanding `ImageDataGenerator`\n* Making the predictions and calculating the accuracy\n* Seeing a Neural Network in Action","ed130bc5":"# Understanding Convolutional Neural Network - Handwriting recognition of Arabic Alphabets","6a89aba2":"## Importing the necessary libraries","3bc5895f":"## Visualizing the dataset"}}