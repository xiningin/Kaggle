{"cell_type":{"ac26857a":"code","11ecfa6a":"code","27940dd9":"code","a542bb28":"code","6997d179":"code","a51c0323":"code","c79bbf34":"markdown","7d50ae69":"markdown","ed881a85":"markdown","2fbed369":"markdown"},"source":{"ac26857a":"import pandas as pd\nimport numpy as np","11ecfa6a":"from sklearn.impute import MissingIndicator","27940dd9":"features = [[4,2,1],\n            [24,12,6],\n            [8,-1, 2],\n            [28,14,7],\n            [32,16,-1],\n            [600,300,150],\n            [-1,-1,1]]","a542bb28":"'''\nInstanciate the missing indicator by telling it \nthat our missing values are represented by '-1'\n'''\nindicator = MissingIndicator(missing_values=-1)","6997d179":"mark_missing_values_only = indicator.fit_transform(features)\nmark_missing_values_only","a51c0323":"indicator.features_","c79bbf34":"We have a binary matrix where we can see that the missing values have been replaced with the value of **True**.  \nWe can also determine which features have missing values by using the **indicator.features_**.  ","7d50ae69":"# Missing Value Indicator   \nWe are going to see how to mark imputed values using a missing indicator transformer. This is very useful in order to indicate the presence or the absence of missing value in a data.  \nWhile using the Univariate or the Multivariate imputation, it is very important to have a trace of the places where those missing values existed earlier.  ","ed881a85":"Now we can see that that the first, second and the third features have missing values. ","2fbed369":"Let's take an example of features in order to understand the concept of MissingIndicator. In this case, we are going to represent the missing values by '-1', but we could also have np.nan. All the -1 can be considered to be missing values.   "}}