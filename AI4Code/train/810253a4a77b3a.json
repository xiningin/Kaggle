{"cell_type":{"8b077c86":"code","34949c14":"code","29aced1d":"code","94f79909":"code","e0e76d72":"code","cefab243":"code","61450aa9":"code","dba12a77":"code","20a572e3":"code","cc98622b":"code","90792bf1":"code","5493fa80":"code","e021dc21":"code","13697d1f":"code","68428ada":"code","44078f2b":"code","527fb3cb":"code","af209d80":"code","546a8b4b":"code","331f3232":"code","eadfa3ca":"code","6fcdaf03":"code","2ce08d43":"code","899bfb49":"code","1756e95f":"markdown","b5e4fd79":"markdown","7d5039b5":"markdown","6939f25a":"markdown","a1c110cd":"markdown","55de8598":"markdown","3a219d2a":"markdown","4077167d":"markdown","b34ee781":"markdown","f7c014ed":"markdown","c175ce63":"markdown","e06761a7":"markdown"},"source":{"8b077c86":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","34949c14":"# Aluna: L\u00eddia Medeiros de Lucena Sim\u00f5es\n# Turma: P\u00f3s-Gradua\u00e7\u00e3o em Ci\u00eancias de Dados - IESB - Asa Sul\n# Mat\u00e9ria: Data Mining e Machine Learning II","29aced1d":"EM = pd.read_csv('\/kaggle\/input\/hmeq-data\/hmeq.csv')\n\nEM.head(5)","94f79909":"print ('EM:' , EM.shape)","e0e76d72":"EM.info()","cefab243":"EM.sample(10).T","61450aa9":"EM.isnull().sum()","dba12a77":"EM.dropna(axis=0, how='any', inplace=True)\nEM.info()","20a572e3":"#Para melhorar a an\u00e1lise da minha base, vou criar uma vari\u00e1vel para demonstrar o n\u00famero de linhas de cr\u00e9dito recente (NINQ) menos o n\u00famero de linhas de cr\u00e9dito inadimplentes (DELINQ)\n\nEM['NINQ_DELINQ'] = EM['NINQ'] - EM['DELINQ']\nEM.info()","cc98622b":"#Importando as bibliotecas\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","90792bf1":"EM.hist(figsize=(20,10))","5493fa80":"ax = sns.countplot(y=x, data=EM).set_title('BAD')","e021dc21":"#Separando as colunas para usar no treino\n\nEM_feats = [c for c in EM.columns if c not in ['NINQ_DELINQ']]\nEM_feats = EM[EM_feats]","13697d1f":"plt.figure(figsize=(18,18))\nc = 1\nfor i in EM_feats.columns:\n    if c < len(EM_feats.columns):\n        plt.subplot(3,3,c)\n        sns.boxplot(x='NINQ_DELINQ' , y= i, data=EM)\n        c+=1\n    else:\n        sns.boxplot(x='NINQ_DELINQ' , y= i, data=EM)\nplt.tight_layout() ","68428ada":"#Visualizando o gr\u00e1fico da vari\u00e1vel criada - 'NINQ_DELINQ'\n    \nsns.set( rc = {'figure.figsize': (10, 10)})\nEM_feats = ['NINQ_DELINQ']\n\nfor col in EM_feats:\n    plt.figure()\n    sns.countplot(x=EM[col], data=EM, palette=\"Set3\")\n    plt.show()","44078f2b":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom xgboost import XGBClassifier\n\n%matplotlib inline\nimport seaborn as sns","527fb3cb":"train, test = train_test_split(EM, random_state=42)\n\ntrain.shape, test.shape","af209d80":"#Agora identificar a base de Treino com a vari\u00e1vel 'NINQ_DELINQ'\n\ntrain['NINQ_DELINQ'].value_counts(normalize=True)","546a8b4b":"#Agora identificar a base de Teste com a vari\u00e1vel 'NINQ_DELINQ'\n\ntest['NINQ_DELINQ'].value_counts(normalize=True)","331f3232":"# Instanciando o RandomForest Classifier\n\nRF = RandomForestClassifier(n_jobs=-1, oob_score=True, n_estimators=200, random_state=42)","eadfa3ca":"#Treinando o Modelo e Identificando a acur\u00e1cia do modelo\n\nRF.fit(train[EM_feats], train['NINQ_DELINQ'])\naccuracy_score(test['NINQ_DELINQ'], RF.predict(test[EM_feats]))","6fcdaf03":"#Fazendo as previs\u00f5es usando o Modelo com a vari\u00e1vel 'NINQ_DELINQ'\n\ntest['NINQ_DELINQ'] = RF.predict(test[EM_feats]).astype(int)","2ce08d43":"#Verificando os resultados das previs\u00f5es - TESTE\n\ntest['NINQ_DELINQ'].value_counts(normalize=True)","899bfb49":"#Verificando os resultados das previs\u00f5es - TREINO\n\ntrain['NINQ_DELINQ'].value_counts(normalize=True)","1756e95f":"# **Trabalho Final - DMML II\n# **\n\n\n**Introdu\u00e7\u00e3o\n\nO presente trabalho de conclus\u00e3o da disciplina Data Mining e Machine Learning II utilizou a base HMEQ_data que traz informa\u00e7\u00f5es acerca de Empr\u00e9stimo.\n\nA base traz 5.960 informa\u00e7\u00f5es referentes a opera\u00e7\u00f5es de cr\u00e9dito(empr\u00e9stimo), sendo composta por 13 colunas. A vari\u00e1vel de resposta - BAD - \u00e9 bin\u00e1ria e indica quando o cliente \u00e9 um mau pagador\/n\u00e3o pagou o empr\u00e9stimo (1) ou \u00e9 um bom pagador\/pagou o empr\u00e9stimo (0). \n\nA necessidade de se analisar esta base surge da identifica\u00e7\u00e3o de um alto \u00edndice de inadimpl\u00eancia junto \u00e0s institui\u00e7\u00f5es financeiras e a possibilidade de se criar um modelo para prever se um cliente ir\u00e1 honrar ou n\u00e3o a sua d\u00edvida\/empr\u00e9stimo. ","b5e4fd79":"**An\u00e1lise das vari\u00e1veis\n\nAgora, vou demonstrar em gr\u00e1ficos a frequ\u00eancia das vari\u00e1veis da base:","7d5039b5":"Primeiro, vou criar a base de Treino e de Teste","6939f25a":"As vari\u00e1veis constantes na base s\u00e3o:\n\nBAD: 1 = client defaulted on loan 0 = loan repaid\nLOAN: Amount of the loan request\nMORTDUE: Amount due on existing mortgage\nVALUE: Value of current property\nREASON: DebtCon = debt consolidation HomeImp = home improvement\nJOB: Six occupational categories\nYOJ: Years at present job\nDEROG: Number of major derogatory reports\nDELINQ: Number of delinquent credit lines\nCLAGE: Age of oldest trade line in months\nNINQ: Number of recent credit lines\nCLNO: Number of credit lines\nDEBTINC: Debt-to-income ratio\n","a1c110cd":"**Conclus\u00e3o\n\nAp\u00f3s a aplica\u00e7\u00e3o da base de teste e treino, cheguei a um N\u00edvel de Acur\u00e1cia de 99%.","55de8598":"Como j\u00e1 pode ser observado, v\u00e1rios dados na tabela est\u00e3o em branco\/nulos. Vou identificar quais valores s\u00e3o nulos e exclu\u00ed-los da base:","3a219d2a":"Especialmente em rela\u00e7\u00e3o \u00e0 vari\u00e1vel BAD, temos o seguinte gr\u00e1fico:","4077167d":"Inicialmente, vou criar o dataframe e cham\u00e1-lo de EM.","b34ee781":"Para dar continuidade, preciso saber as informa\u00e7\u00f5es que constam no arquivo e o seu tamanho:","f7c014ed":"A partir deste gr\u00e1fico, conseguimos concluir que a maioria dos clientes est\u00e3o cumprindo com as suas obriga\u00e7\u00f5es e pagando os empr\u00e9stimos, uma vez que o 0 significa adimpl\u00eancia e 1 inadimpl\u00eancia. ","c175ce63":"**An\u00e1lise com base no Modelo RandomForest\n\nPrimeiro, vou importar as bibliotecas:","e06761a7":"Outra forma de visualizar os dados:"}}