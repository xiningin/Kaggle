{"cell_type":{"ad89d3a6":"code","c342b37b":"code","ffba14c7":"code","ed761e4f":"code","02858808":"code","e03516b4":"code","5859a4bd":"code","abb52305":"code","01405dd3":"code","2a3015b9":"code","00dcb5aa":"code","eb75c6f1":"code","5c525aae":"code","7227e18b":"code","c5bba349":"code","f3a56ac5":"code","7f2fbe0e":"code","1d9bcc62":"code","b13690b1":"code","f40d802c":"code","e2b5b4fb":"code","8374298a":"code","f71aa160":"code","22bf7883":"code","f4b7e7f3":"code","8b1a5d71":"code","ea5cf782":"code","58e5a37a":"code","9bc21910":"code","02cd699a":"code","806241e8":"code","a0005acc":"code","a0d3a5d7":"code","b35d271e":"code","dfee29fd":"code","359096d4":"code","fbca4a00":"code","145d92b7":"markdown","2961c85b":"markdown","ab06e866":"markdown","cd7c70b2":"markdown","03614b0a":"markdown","f751bf1a":"markdown","36a4ff51":"markdown"},"source":{"ad89d3a6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c342b37b":"# Load the Data\n\ntrain = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\")","ffba14c7":"# About the Data\n\ntrain.head()","ed761e4f":"train.dtypes.sample(60)","02858808":"train.describe().T","e03516b4":"train.info()","5859a4bd":"train.shape","abb52305":"corr = train.corr()\ncorr.sort_values([\"SalePrice\"], ascending = False, inplace = True)\nprint(corr.SalePrice)","01405dd3":"features = [\"OverallQual\" , \"GrLivArea\",\"GarageCars\" ,\"GarageArea\",\"TotalBsmtSF\" ,\"1stFlrSF\" ,\"FullBath\"]\n\nX = train[features]\ny = train[\"SalePrice\"]","2a3015b9":"X.head()","00dcb5aa":"X.isnull().sum()","eb75c6f1":"y.isnull().sum()","5c525aae":"import seaborn as sns","7227e18b":"sns.barplot(x=\"GrLivArea\" , y=\"SalePrice\", data=train)","c5bba349":"sns.barplot(x=\"OverallQual\", y=\"SalePrice\", data=train)","f3a56ac5":"sns.distplot(train.SalePrice,kde=False)","7f2fbe0e":"sns.boxplot(x=\"OverallQual\",y=\"SalePrice\",data=train)\n              \n             ","1d9bcc62":"sns.catplot(x=\"OverallQual\", y = \"SalePrice\" , kind= \"violin\" ,data=train)","b13690b1":"sns.catplot(x=\"GrLivArea\", y = \"SalePrice\" , kind= \"violin\" ,data=train)","f40d802c":"sns.scatterplot( x = \"OverallQual\" , y = \"SalePrice\" , data = train)","e2b5b4fb":"sns.scatterplot( x = \"GrLivArea\" , y = \"SalePrice\" , data = train)","8374298a":"sns.lmplot(x = \"SalePrice\" , y = \"GrLivArea\" , hue = \"OverallQual\" , data = train)","f71aa160":"# test_train_split\n\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(X,y,test_size=0.33,random_state=0)","22bf7883":"# SVR\n\nfrom sklearn.svm import SVR\nsvr_reg = SVR(kernel = \"rbf\")\nsvr_reg.fit(x_train,y_train)","f4b7e7f3":"# svr prediction\npredicted_svr = svr_reg.predict(x_test)","8b1a5d71":"# MAE\nfrom sklearn.metrics import mean_absolute_error\n\n\nmean_absolute_error(y_test , predicted_svr)","ea5cf782":"# Root mean Square Error (R2)\n\nfrom sklearn.metrics import r2_score\n\nr2_score(y_test, svr_reg.predict(x_test)) ","58e5a37a":"# Random Forest\n\nfrom sklearn.ensemble import RandomForestRegressor\n\nrf_reg = RandomForestRegressor(n_estimators = 10, random_state = 0)\n\nrf_reg.fit(x_train,y_train)\n","9bc21910":"# RF prediction\n\npredicted_rf = rf_reg.predict(x_test)","02cd699a":"#MAE\nmean_absolute_error(y_test,predicted_rf)","806241e8":"#R2\nr2_score(y_test, rf_reg.predict(x_test)) \n","a0005acc":"#XGBOOST\n\nfrom xgboost import XGBRegressor\n\nxgb_regressor = XGBRegressor()\nxgb_regressor.fit(x_train, y_train)","a0d3a5d7":"#prediction\npredicted_xgb = xgb_regressor.predict(x_test)","b35d271e":"#mae\nmean_absolute_error(y_test,predicted_xgb)","dfee29fd":"#r2\nr2_score(y_test,predicted_xgb)\n","359096d4":"#SUBMISSION\n\ntest_X = test[features]\npredicted_xgb_test = xgb_regressor.predict(test_X)\n","fbca4a00":"output = pd.DataFrame({'Id': test.Id, 'SalePrice': predicted_xgb_test})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","145d92b7":"# Machine Learning Models","2961c85b":"# Data Visualization","ab06e866":"## Feature Selection","cd7c70b2":"# Work Flow of This Notebook","03614b0a":"### Correlation Matrix","f751bf1a":"1. Data Understanding \n\n2. Future Selection\n\n3. Missing Values\n\n4. Data Visualization \n\n   *Histogram   \n   \n   *Box Plot\n   \n   *Violin\n   \n   *ScatterPlot\n   \n   \n   \n5. Test-Train-Split\n\n6. Machine Learning Model\n\n   *SVR\n   \n   *Random Forest\n   \n   *XGBoost\n   \n7. Model Validations   \n\n ","36a4ff51":"## Missing Values"}}