{"cell_type":{"ebff5b5b":"code","f0c03c40":"code","67ed141b":"code","e21d622e":"code","1c169e9d":"code","4c65859f":"code","5f3965ee":"code","63acfe11":"code","f16863e7":"code","3305cc8e":"code","f5bc73c2":"code","9e29cbb0":"code","a072d8f8":"code","7e162e4c":"code","6e94b2cb":"code","5427e1d2":"code","7d2378b5":"code","a5725120":"code","7b125cc7":"code","8bd254d7":"code","1474c401":"code","e96cbc2f":"code","12d0c04e":"markdown","b0a16fee":"markdown","e059d55b":"markdown","50371148":"markdown","8287ea96":"markdown"},"source":{"ebff5b5b":"import pandas as pd\nimport numpy as np\nfrom collections import Counter\nfrom scipy.sparse import csr_matrix\nfrom tqdm.notebook import tqdm","f0c03c40":"\"\"\"\npd.__version__: 1.3.4\nnp.__version__: 1.19.2\nscipy.__version__: 1.5.2\ntqdm.__version__: 4.50.2\n\"\"\"","67ed141b":"PATH = \"\/kaggle\/input\/wb-item-recommendation\/\"","e21d622e":"data_train = pd.read_csv(PATH + \"train.csv\")\ndata_train.head()","1c169e9d":"data_test = pd.read_csv(PATH + \"test.csv\")\ndata_test.head()","4c65859f":"data_train.shape[0], data_test.shape[0]","5f3965ee":"submission = pd.read_csv(PATH + \"submission.csv\")\nsubmission.head()","63acfe11":"data_lst = []\ntarget_lst = []\n\nfor _, row in tqdm(data_train.iterrows(), total=data_train.shape[0]):\n    data_lst.append(list(row[\"Data\"].split()))\n    target_lst.append(list(row[\"Target\"].split()))\n    \ndata_train[\"Data\"] = data_lst\ndata_train[\"Target\"] = target_lst","f16863e7":"data_train.head()","3305cc8e":"intersect_df = data_train.explode(\"Data\").explode(\"Target\")\nintersect_df[\"Data\"] = intersect_df[\"Data\"].astype(int)\nintersect_df[\"Target\"] = intersect_df[\"Target\"].astype(int)\nintersect_df.head(10)","f5bc73c2":"intersect_df.shape[0]","9e29cbb0":"cnt_data = Counter(intersect_df[\"Data\"])\ncnt_target = Counter(intersect_df[\"Target\"])","a072d8f8":"cnt_data.most_common(10)","7e162e4c":"count_df = intersect_df.groupby([\"Data\", \"Target\"], as_index=False).count().rename(columns={'Id': 'count'})\ncount_df.tail(10)","6e94b2cb":"count_df.shape[0]","5427e1d2":"count_df.sort_values(by=[\"Data\", \"count\"], ascending=[True, False], inplace=True)","7d2378b5":"count_df[1560:1570]","a5725120":"most_pop_for_id = {}","7b125cc7":"rec_ids = list(map(lambda x: x[0], cnt_target.most_common(10)))\nbase_rec = \" \".join([str(id) for id in rec_ids])","8bd254d7":"def get_rec(product_ids_str):\n    products = [int(prod) for prod in product_ids_str.split()]\n    products_list = []\n    for product_id in products:\n        if product_id in cnt_data:\n            products_list.append([cnt_data[product_id], product_id])\n    products_list.sort(reverse=True, key=lambda x: x[0])\n    if not len(products_list):\n        return base_rec\n    most_pop_product = products_list[0][1]\n    if most_pop_product in most_pop_for_id:\n        recs_ids = most_pop_for_id[most_pop_product]\n    else:\n        recs_ids = count_df.loc[count_df[\"Data\"] == most_pop_product, \"Target\"].to_list()[:10]\n        most_pop_for_id[most_pop_product] = recs_ids\n    return \" \".join([str(prod) for prod in recs_ids]) if len(recs_ids) else base_rec","1474c401":"recs_lst = []\n\nfor _, row in tqdm(data_test.iterrows(), total=data_test.shape[0]):\n    recs_lst.append(get_rec(row[\"Data\"]))","e96cbc2f":"submission[\"Predicted\"] = recs_lst\nsubmission.to_csv(\"\/kaggle\/working\/baseline_2.csv\", index=False)","12d0c04e":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0432\u0441\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u044f \u0432\u0438\u0434\u0430<br>\n**\u0422\u043e\u0432\u0430\u0440 \u0438\u0437 Data** - **\u0422\u043e\u0432\u0430\u0440 \u0438\u0437 Target**","b0a16fee":"## Baseline #2: \u0421\u0430\u043c\u044b\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u0442\u043e\u0432\u0430\u0440\u044b \u0432 Target \u0434\u043b\u044f \u0441\u0430\u043c\u043e\u0433\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0442\u043e\u0432\u0430\u0440\u0430 \u0438\u0437 Data","e059d55b":"## \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445","50371148":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0439 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u043f\u0430\u0440<br>\n**\u0422\u043e\u0432\u0430\u0440 \u0438\u0437 Data** - **\u0422\u043e\u0432\u0430\u0440 \u0438\u0437 Target**","8287ea96":"## \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445"}}