{"cell_type":{"92acc5be":"code","f0ecaf05":"code","f3c20d50":"code","c9e8dc77":"code","fa21e133":"code","a2071024":"code","e9806e35":"code","f95c8b3d":"code","010e3b02":"code","ab8316e5":"code","ccc8e573":"code","35ccb777":"code","1245465e":"code","bd6376c0":"code","781219f6":"code","7dbfa121":"code","27753d4d":"code","78a305ee":"code","d8f0edfc":"code","0e5380fe":"markdown","9a1464f8":"markdown","2bfd8bbb":"markdown","7bc7a46f":"markdown","7be52328":"markdown","27b55c94":"markdown","afa9b60b":"markdown","6ddf3926":"markdown","d468648c":"markdown","28d98e33":"markdown","891ce2f6":"markdown","181b115b":"markdown","afece5c9":"markdown","dab52639":"markdown","c4e3152f":"markdown","7ecd54f2":"markdown","c76e7b5f":"markdown","688478fa":"markdown","a69e17cb":"markdown","4e5f2e05":"markdown","f202d39a":"markdown","fdd8edb1":"markdown","88e9a7f2":"markdown"},"source":{"92acc5be":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f0ecaf05":"import os\nimport sys\nimport numpy as np\nimport pandas as pd\nimport json\nimport plotly.express as px\nimport plotly.graph_objects as go","f3c20d50":"!wget 'https:\/\/www.kaggle.com\/c\/cassava-leaf-disease-classification\/leaderboard.json?includeBeforeUser=true&includeAfterUser=false' -O cassava_leaderboard.json","c9e8dc77":"with open(\"cassava_leaderboard.json\") as f:\n    cassava_jsn = json.load(f)","fa21e133":"cassava_jsn['submissions'][0]","a2071024":"for user in cassava_jsn['beforeUser']+cassava_jsn['afterUser']:\n    if user['medal'] == \"gold\":\n        print(user['score'])\n    else:\n        break","e9806e35":"teams = []\nscores = []\nfor user in cassava_jsn['beforeUser']+cassava_jsn['afterUser']:\n    if user['medal'] == \"gold\":\n        user['score'] = float(user['score'])\n        scores.append(user['score'])\n        teams.append(user['teamName'])\n    else:\n        break\n\nscore_df = pd.DataFrame({\"Team\":teams,\"Public Score\":scores})\nfig = px.bar(score_df.iloc[::-1], x='Public Score', y='Team',\n              color='Public Score',height=700, title='Gold Medal Zone(Cassava Leaf Disease Classification)',text='Public Score')\nfig.show()","f95c8b3d":"!wget 'https:\/\/www.kaggle.com\/c\/hubmap-kidney-segmentation\/leaderboard.json?includeBeforeUser=true&includeAfterUser=false' -O hubmap_leaderboard.json","010e3b02":"with open(\"hubmap_leaderboard.json\") as h:\n    hubmap_jsn = json.load(h)","ab8316e5":"hubmap_teams = []\nhubmap_scores = []\nfor user in hubmap_jsn['beforeUser']+hubmap_jsn['afterUser']:\n    if user['medal'] == \"gold\":\n        user['score'] = float(user['score'])\n        hubmap_scores.append(user['score'])\n        hubmap_teams.append(user['teamName'])\n    else:\n        break\n\nscore_df = pd.DataFrame({\"Team\":hubmap_teams,\"Public Score\":hubmap_scores})\nfig = px.bar(score_df.iloc[::-1], x='Public Score', y='Team',\n              color='Public Score',height=700, title='Gold Medal Zone (HuBMAP - Hacking the Kidney)',text='Public Score')\nfig.show()","ccc8e573":"!wget 'https:\/\/www.kaggle.com\/c\/rfcx-species-audio-detection\/leaderboard.json?includeBeforeUser=true&includeAfterUser=false' -O rfcx_leaderboard.json","35ccb777":"with open(\"rfcx_leaderboard.json\") as c:\n    rfcx_jsn = json.load(c)","1245465e":"rfcx_teams = []\nrfcx_scores = []\nfor user in rfcx_jsn['beforeUser']+rfcx_jsn['afterUser']:\n    if user['medal'] == \"gold\":\n        user['score'] = float(user['score'])\n        rfcx_scores.append(user['score'])\n        rfcx_teams.append(user['teamName'])\n    else:\n        break\n\nscore_df = pd.DataFrame({\"Team\":rfcx_teams,\"Public Score\":rfcx_scores})\nfig = px.bar(score_df.iloc[::-1], x='Public Score', y='Team',\n              color='Public Score',height=700, title='Gold Medal Zone (Rainforest Connection Species Audio Detection)',text='Public Score')\nfig.show()","bd6376c0":"!wget 'https:\/\/www.kaggle.com\/c\/jane-street-market-prediction\/leaderboard.json?includeBeforeUser=true&includeAfterUser=false' -O jane_leaderboard.json","781219f6":"with open(\"jane_leaderboard.json\") as j:\n    jane_jsn = json.load(j)","7dbfa121":"jane_teams = []\njane_scores = []\nfor user in jane_jsn['beforeUser']+jane_jsn['afterUser']:\n    if user['medal'] == \"gold\":\n        user['score'] = float(user['score'])\n        jane_scores.append(user['score'])\n        jane_teams.append(user['teamName'])\n    else:\n        break\n\nscore_df = pd.DataFrame({\"Team\":jane_teams,\"Public Score\":jane_scores})\nfig = px.bar(score_df.iloc[::-1], x='Public Score', y='Team',\n              color='Public Score',height=700, title='Gold Medal Zone (Jane Street Market Prediction)',text='Public Score')\nfig.show()","27753d4d":"!wget 'https:\/\/www.kaggle.com\/c\/lish-moa\/leaderboard.json?includeBeforeUser=true&includeAfterUser=false' -O moa_leaderboard.json","78a305ee":"with open(\"moa_leaderboard.json\") as m:\n    moa_jsn = json.load(m)","d8f0edfc":"moa_teams = []\nmoa_scores = []\nfor user in moa_jsn['beforeUser']+moa_jsn['afterUser']:\n    if user['medal'] == \"gold\":\n        user['score'] = float(user['score'])\n        moa_scores.append(user['score'])\n        moa_teams.append(user['teamName'])\n    else:\n        break\n\nscore_df = pd.DataFrame({\"Team\":moa_teams,\"Public Score\":moa_scores})\nfig = px.bar(score_df.iloc[::-1], x='Public Score', y='Team',\n              color='Public Score',height=700, title='Gold Medal Zone (Mechanisms of Action (MoA) Prediction)',text='Public Score')\nfig.show()","0e5380fe":"* In the code above, the scores of teams in the gold medal zone are output.\n* We can easily retrieve specific information by using a for loop.","9a1464f8":"# Get only specific information","2bfd8bbb":"* We can see easily that various information is lined up.\n* In addition to the rank and the score of each team, you can also confirm whether the team is in the medal zone and the number of submissions (entries), etc.","7bc7a46f":"## Thank you for reading to the end!\n## If you like, feel free to upvote!","7be52328":"### Then, let's load the JSON file!","27b55c94":"### We can easily do the same thing in other competitions!","afa9b60b":"# Library","6ddf3926":"* Since up to 5 members can belong to one team, so we can get information such as member's profile url and tiers.","d468648c":"# Application Example: Visualize the Leaderboard","28d98e33":"* Visualizing the information by using libraries makes it easier to understand the situation.","891ce2f6":"* The json file we just read contains various information about public leaderboard.\n* As an example, we would like to look at only the data of 1st team.","181b115b":"# What kind of information can we get from the data?","afece5c9":"* The graph above shows the names and scores of teams in the gold medal zone.\n* The data contained in \"user['score']\" is treated as a character string, so if you want to compare scores using a graph, you have to use float().","dab52639":"# Read JSON Files","c4e3152f":"* In competitions, we frequently check leaderboard and confirm our rank.\n* Information about leaderboard becomes more important in competitions that counts towards tiers.\n\n* In this notebook, the way to get information about public leaderboard will be introduced.\n* This way is very easy, so you can apply it to other competitions.\n\n### If you find useful or interesting, please feel free to upvote!\n","7ecd54f2":"* You can easily read json files by using json.load() method.\n* Firstly, we read a json file which contains the information on public leaderboard in [Cassava Leaf Disease Classification competition](https:\/\/www.kaggle.com\/c\/cassava-leaf-disease-classification).","c76e7b5f":"* The Json file that contains the public leaderboard data has the path as described below. \"https:\/\/www.kaggle.com\/c\/competition_name\/leaderboard.json?includeBeforeUser=true&includeAfterUser=false\"\n* In the \"competition_name\" part, put the name of a specific competition.\n* (e.g. Cassava Leaf Diasese Classification -> cassava-leaf-disease-classification)\n* (e.g. Tabular Playground Series - Jan 2021 -> tabular-playground-series-jan-2021)","688478fa":"<h1 style='background:#FFFFFF; border:0; color:black'><center>How to Analyze\n    Leaderboard Easily?<center><h1>","a69e17cb":"* So far, we've got information on active competitions, but can we do the same thing on completed competitions?\n* The answer is **Yes**!\n* As an example, we get information on Mechanisms of Action (MoA) Prediction (ended December 1st 2020).","4e5f2e05":"* How to retrieve only specific information (e.g. the score of each team)?\n* It is very easy to do that!","f202d39a":"* In this competition, private leaderboard was already announced, but only information on public can be obtained.","fdd8edb1":"* In this notebook, we get the information by reading a json format file, so we should import \"json\".\n* In addition to that, you should import some data visualization libraries if you want to visualize the leaderboard data.","88e9a7f2":"# Can we get information on competitions that have already ended?"}}