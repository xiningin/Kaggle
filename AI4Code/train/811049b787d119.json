{"cell_type":{"46974181":"code","99793bff":"code","acf28bd2":"code","bb076894":"code","0e98b3b7":"code","eac5cb02":"code","d7851764":"code","451caf17":"code","927196a5":"code","819622de":"code","c7515afd":"code","91117d4c":"code","084babba":"code","a6391448":"code","38a236d2":"code","fd8c0543":"code","43d06318":"code","87f7e0b9":"code","1fb4fa12":"code","ec94df07":"code","700e6cba":"code","4c9b4d6e":"code","9aae58dd":"markdown","72133683":"markdown","990bde4b":"markdown","05bfe40d":"markdown","68e3a98f":"markdown","89c4545e":"markdown","aa05a30d":"markdown","82b93c3f":"markdown","1a31cac3":"markdown","e73d348d":"markdown","d645b414":"markdown","80aa24f2":"markdown","4501ac73":"markdown","1556a5fa":"markdown","83db4e27":"markdown","e92d39b1":"markdown","1c08a4a1":"markdown","718255c0":"markdown","09da927c":"markdown","6759c75c":"markdown","41c67a39":"markdown"},"source":{"46974181":"from mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt # plotting\nimport numpy as np # linear algebra\nimport os # accessing directory structure\nimport pandas as pd\nfrom pandas_profiling import ProfileReport\n\nimport seaborn as sns\nimport missingno as msno\nfrom scipy import stats\nsns.set(color_codes=True)\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","99793bff":"df = pd.read_csv(\"\/kaggle\/input\/ipl-dataset-20082019\/matches.csv\", index_col=0)\ndf.head()","acf28bd2":"df.isnull().sum()","bb076894":"df.Season = df.Season.str.replace(r'IPL-', '').astype(int)\ndf.drop(columns=[\"umpire3\"], inplace = True)","0e98b3b7":"df.city = df.city.fillna(\"-\")\ndf.umpire1 = df.umpire1.fillna(\"-\")\ndf.umpire2 = df.umpire2.fillna(\"-\")\ndf = df.replace('Rising Pune Supergiants', 'Rising Pune Supergiant')\ndf = df.replace('Pune Warriors', 'Rising Pune Supergiant')\ndf = df.replace('Deccan Chargers', 'Sunrisers Hyderabad')\ndf = df.replace('Delhi Capitals', 'Delhi Daredevils')","eac5cb02":"is_NaN = df.isnull()\nrow_has_NaN = is_NaN.any(axis=1)\nrows_with_NaN = df[row_has_NaN]\nrows_with_NaN","d7851764":"df.dropna(inplace=True)\ndf.isnull().sum()","451caf17":"df.info()","927196a5":"df.describe([0.10,0.25,0.50,0.75,0.90,0.95,0.99]).T","819622de":"sns.pairplot(df)","c7515afd":"df.Season.value_counts().plot(kind=\"bar\")","91117d4c":"player_of_match = df[\"player_of_match\"].value_counts()[:10]\nplayer_of_match.plot(kind=\"barh\")\nprint(df[\"player_of_match\"].value_counts()[:10])","084babba":"match_winner = df[\"winner\"].value_counts()\nmatch_winner.plot(kind=\"barh\")\nprint(df[\"winner\"].value_counts())","a6391448":"df.loc[df.Season == 2019, \"winner\"].value_counts().plot(kind=\"barh\")","38a236d2":"df[\"toss_decision\"].value_counts().plot(kind=\"barh\")\ndf[\"toss_decision\"].value_counts()","fd8c0543":"df.loc[df.win_by_runs > 50, \"winner\"].value_counts().plot(kind=\"barh\")","43d06318":"df.loc[df.win_by_wickets > 5, \"winner\"].value_counts().plot(kind=\"barh\")","87f7e0b9":"df.loc[df.toss_winner == df.winner, \"winner\"].value_counts().plot(kind=\"barh\")\nprint(df.loc[df.toss_winner == df.winner, \"winner\"].value_counts())","1fb4fa12":"teams = df.team1.unique().tolist()\nteams.sort()\nfor team1 in teams:\n    for team2 in df.team2.unique().tolist():\n        df_ttw = df.loc[(df[\"team1\"] == team1) & (df[\"team2\"] == team2), \"winner\"]\n        if len(df_ttw) > 0:\n            print(df_ttw.value_counts())","ec94df07":"df.loc[(df[\"team1\"] == \"Chennai Super Kings\") & (df[\"team2\"] == \"Mumbai Indians\"), \"winner\"].value_counts().plot(kind=\"pie\")","700e6cba":"df = df[df['city'].notna()]\ncity = df.city.unique().tolist()\ncity.remove(\"-\")","4c9b4d6e":"#ec38974f44884f42bfa871dc36b8a090\n!pip install opencage\nfrom opencage.geocoder import OpenCageGeocode\nimport folium\nkey = \"ec38974f44884f42bfa871dc36b8a090\"  \ngeocoder = OpenCageGeocode(key)\nindia = geocoder.geocode(\"India\")\nlat = india[0]['geometry']['lat']\nlng = india[0]['geometry']['lng']\nmap = folium.Map(location=[lat, lng], zoom_start=2)\nfor query in city:\n    pop = query\n    if query == \"Kochi\":\n        query = \"Kochi India\"\n    results = geocoder.geocode(query)\n    lat = results[0]['geometry']['lat']\n    lng = results[0]['geometry']['lng']\n    folium.Marker((lat, lng), popup=pop).add_to(map)\nmap","9aae58dd":"# Visualization","72133683":"### Number of matches played in each year","990bde4b":"## Remove unwanted data\n#### In seasons column IPL- was prepended to year. Removing IPL- will convert Season column to use as year wise data.\n#### umpire3 column has lost of NaN data, so drop that column.","05bfe40d":"# Data Cleaning and Rearranging","68e3a98f":"#### We will start with histographic representation of all numeric data in the dataframe.","89c4545e":"### Pie chart to show, which team has highest percentage of wins.","aa05a30d":"# Conclusion\n### This might not be the best analysis, but it can start our IPL journey.","82b93c3f":"### After winning the toss, what decision is taken bat or field.","1a31cac3":"# If you like the analysis please **UPVOTE**.","e73d348d":"## Rearrange Data\n#### city, umpire1, umpire2 data will be replaced by \"-\" for easier processing.\n#### Many teams has changed their names over the years so we consider those as same team (depending on the city)","d645b414":"### Which team won most number of matches with the margin of more than 5 wickets.","80aa24f2":"### We are mapping city and venues in the map","4501ac73":"### Who won the most number of matches","1556a5fa":"### Which team won most number of matches with the margin of more than 50 runs","83db4e27":"### Most matches won in particular season","e92d39b1":"# **IPL EDA**\n### IPL is one of the famous cricketing league in the world. I tried to summurize my knowledge to extract information out of provided data.Please feel free to check\/edit and commemt if you have any doubts.\n### Topics\n* Data Cleaning and Rearranging\n* Data Visualization\n    * Histogram\n    * Bar chart\n    * Pie chart\n    * Map - folium","1c08a4a1":"### Top 10 Player of the match winners over the time","718255c0":"#### Remove records which does not have valid information. So we can remove data basrd on results (no result)","09da927c":"## Check Null values","6759c75c":"### Team to team record","41c67a39":"### Toss winner won the match? which team did the best?"}}