{"cell_type":{"9368a6a4":"code","63f1b9a4":"code","fd63e54d":"code","e3d5ac1b":"code","e0b28107":"code","72896760":"code","6fc7cb19":"code","085156a4":"code","895ee4dd":"code","f4d4bfab":"markdown","147a96be":"markdown","f2838e62":"markdown"},"source":{"9368a6a4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","63f1b9a4":"data = pd.read_csv('\/kaggle\/input\/russian-passenger-air-service-20072020\/russian_air_service_CARGO_AND_PARCELS.csv')\ndata_1 = pd.read_csv('\/kaggle\/input\/russian-passenger-air-service-20072020\/russian_passenger_air_service_2.csv')\nprint(data.head())\nprint(data_1.head())","fd63e54d":"#check for null values in theCARGO and PARCELS data\ndata.isna().sum()","e3d5ac1b":"#check for null values in the passenger data\ndata_1.isna().sum()","e0b28107":"#create a pivot table w\/yearly totals for CARGOO\/PARCELS data\npivoted_yearly_c = data.pivot_table(index = 'Year', values='Whole year')\nprint(pivoted_yearly_c.tail())\n\n#create a pivot table w\/yearly totals for PASSENGERS data\npivoted_yearly_p = data_1.pivot_table(index = 'Year', values='Whole year')\nprint(pivoted_yearly_p.tail())\n\n#visualise the yearly totals for both CARGO and PASSENGERS\nplt.plot(pivoted_yearly_c, color = 'magenta')\nplt.xlabel('Year')\nplt.ylabel('Totals')\nplt.title('CARGOS AND PARCELS YEARLY - RUSSIAN AIRLINES')\nplt.show()\n\nplt.plot(pivoted_yearly_p, color = 'magenta')\nplt.xlabel('Year')\nplt.ylabel('Totals')\nplt.title('PASSENGERS - RUSSIAN AIRLINES')\nplt.show()","72896760":"#checking for correlation between the CARGO and PASSENGERS\npivoted_yearly_c.rename(columns={'Year': 'Year', 'Whole year': 'Total Cargo'}, inplace=True)\npivoted_yearly_p.rename(columns={'Year': 'Year', 'Whole year': 'Total Passengers'}, inplace=True)\nprint(pivoted_yearly_c.head())\nprint(pivoted_yearly_p.head())\n\n#merge the tables\nnew_pivot = pd.merge(pivoted_yearly_p, pivoted_yearly_c, how='inner', on=None, left_on=pivoted_yearly_p.index, right_on=pivoted_yearly_c.index,\nleft_index=True, right_index=False, sort=True)\nnew_pivot = new_pivot.drop('key_0', axis = 1)\nprint(new_pivot.head())\n\n# Compute correlations\ncorr = new_pivot.corr()\n# Exclude duplicate correlations by masking upper right values\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\n# Set background color \/ chart style\nsns.set_style(style = 'white')\n# Set up  matplotlib figure\nf, ax = plt.subplots(figsize=(11, 9))\n# Add diverging colormap\ncmap = sns.diverging_palette(10, 250, as_cmap=True)\n# Draw correlation plot\nsns.heatmap(corr, mask=mask, cmap=cmap, \n        square=True,\n        linewidths=.5, cbar_kws={\"shrink\": .5})\n","6fc7cb19":"#creating a pivot table w\/monthly totals\npivot_monthly_c = data.pivot_table(index = 'Year', values = ['January', 'February', 'March', 'April', 'May',\n       'June', 'July', 'August', 'September', 'October', 'November', 'December'], aggfunc = sum)\npivot_monthly_c = pivot_monthly_c.drop(2020, axis = 0)  #drop 2020 records.\npivot_monthly_c.loc['Total'] = pivot_monthly_c.sum(axis = 0)    #add the Total index\npivot_monthly_c = pivot_monthly_c.reindex(columns = ['January', 'February', 'March', 'April', 'May',    #reindex the columns\n       'June', 'July', 'August', 'September', 'October', 'November', 'December'])\n\n\npivot_monthly_p = data_1.pivot_table(index = 'Year', values = ['January', 'February', 'March', 'April', 'May',\n       'June', 'July', 'August', 'September', 'October', 'November', 'December'], aggfunc = sum)\npivot_monthly_p = pivot_monthly_p.drop(2020, axis = 0)  #drop 2020 records.\npivot_monthly_p.loc['Total'] = pivot_monthly_p.sum(axis = 0)    #add the Total index\npivot_monthly_p = pivot_monthly_p.reindex(columns = ['January', 'February', 'March', 'April', 'May',   \n       'June', 'July', 'August', 'September', 'October', 'November', 'December'])        #reindex the columns\n \n\nprint(pivot_monthly_c.tail())\nprint(pivot_monthly_p.tail())","085156a4":"#acessing the totals row and plotting a bar chart\ndf = pivot_monthly_c.iloc[[13]] \n\nplt.figure(figsize=(14,6))\nsns.barplot(data = df)\nprint(df)","895ee4dd":"df1 = pivot_monthly_p.iloc[[13]]\nprint(df1)\nplt.figure(figsize=(14,6))\nsns.barplot(data = df1)","f4d4bfab":"From the barcharts, numbers along the months between the passengers and cargo are not highly correlated.","147a96be":"## CARGO AND PASSENGERS","f2838e62":"The line plot shows an almost similar trend in the cargo and passenger numbers with highest peak in 2018\/9 in both plots.\nNumber of passengers and cargo totals have a high correlation as per the heatmap."}}