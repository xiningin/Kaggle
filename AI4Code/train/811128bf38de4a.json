{"cell_type":{"1ff44ea2":"code","d4b0f640":"code","5c256e8f":"code","fc10643e":"code","f2923042":"code","e071ec9e":"code","be0b1f97":"code","5fd5bf73":"code","0773c266":"code","e4f2e31a":"code","39456faa":"code","fb9e402d":"code","196f93d6":"code","c0676b0a":"code","51f64e87":"code","2148e612":"code","2784c78a":"code","51d85579":"code","1caa0c11":"code","9b1e4d40":"code","b92cb470":"code","fd14ce88":"code","35ab7861":"code","75c68be6":"code","20d69e0b":"code","296bf152":"code","a9abacd0":"code","e8460e71":"code","c15a3d69":"code","c12b2ec1":"code","80629bff":"code","6ddd1557":"code","ca3d8552":"code","28835e1a":"code","02e49295":"code","94b6748a":"code","c5879ffd":"code","14ea7001":"code","a9d8ca5c":"code","0f08739f":"code","d1a036e5":"code","b9ada1be":"code","44188d3c":"code","be363e19":"code","11a4f284":"code","57894b43":"code","5347dd9c":"code","1544add4":"code","91fc07e7":"code","4b990785":"code","c4ddf489":"markdown","8472536e":"markdown","2c34f633":"markdown","1d07506a":"markdown","54a38082":"markdown","aae58cbf":"markdown","3a8fe91b":"markdown","15a8a015":"markdown","33847605":"markdown","8536cb0c":"markdown","05c076f1":"markdown","1afe93bd":"markdown","d15c3bae":"markdown","28fb5c00":"markdown","e7eab688":"markdown","b66b006f":"markdown","4188e51f":"markdown","f815729a":"markdown","97d8e65c":"markdown","28c7ed52":"markdown"},"source":{"1ff44ea2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d4b0f640":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler \nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score,confusion_matrix,classification_report\nfrom sklearn.neighbors import KNeighborsClassifier  \nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.linear_model import LinearRegression","5c256e8f":"women_volleyball = pd.read_csv('\/kaggle\/input\/women-volleyball-players\/clean_data.csv')\nwomen_volleyball.head()","fc10643e":"women_volleyball.info()","f2923042":"women_volleyball.describe()","e071ec9e":"women_volleyball.nunique()","be0b1f97":"women_volleyball['name'][0]==women_volleyball['name'][144]","5fd5bf73":"women_volleyball.drop_duplicates(subset=['name'],inplace=True)\nwomen_volleyball.info()","0773c266":"sns.pairplot(women_volleyball)","e4f2e31a":"df = women_volleyball.groupby('position_number').mean()\n\nplt.figure(figsize=(10,6))\n\n\ng=sns.barplot(data=df,x=df.index,y='height',edgecolor='black')\nax=g\n\nfor p in ax.patches:\n             ax.annotate(\"%.2f\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., p.get_height()\/1.2),\n                 ha='center', va='center', fontsize=11, color='black', xytext=(0, 20),\n                 textcoords='offset points')","39456faa":"plt.figure(figsize=(10,8))\nsns.set_theme()\nsns.scatterplot(data=women_volleyball,x='height',y='spike')","fb9e402d":"women_volleyball[women_volleyball['spike']==0]","196f93d6":"women_volleyball.drop(index=68,inplace=True)","c0676b0a":"women_volleyball[women_volleyball['spike']==0]","51f64e87":"women_volleyball.groupby('position_number').mean()","2148e612":"women_outside = women_volleyball[women_volleyball['position_number']==2]\nwomen_outside.describe()","2784c78a":"plt.figure(figsize=(10,6))\nsns.distplot(women_outside['spike'])\nplt.title('Outside Hitters: Position 2')","51d85579":"plt.figure(figsize=(10,6))\nsns.distplot(women_outside['block'])\nplt.title('Outside Hitters: Position 2')","1caa0c11":"sns.lmplot(data=women_outside,x='height',y='spike')\nplt.title('Outside Hitters: Position 2')","9b1e4d40":"sns.lmplot(data=women_outside,x='height',y='block')\nplt.title('Outside Hitters: Position 2')","b92cb470":"women_outside['spike'].corr(women_outside['height'],method='pearson')","fd14ce88":"women_outside['block'].corr(women_outside['height'],method='pearson')","35ab7861":"X=women_outside[['height','weight']]\ny=women_outside['spike']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)\nlm = LinearRegression()\nlm.fit(X_train,y_train)\ncoeffecients = pd.DataFrame(lm.coef_,X.columns)\ncoeffecients.columns = ['Coeffecient']\ncoeffecients","75c68be6":"predictions = lm.predict( X_test)\nplt.scatter(y_test,predictions)\nplt.xlabel('Y Test')\nplt.ylabel('Predicted Y')","20d69e0b":"sns.distplot((y_test-predictions),bins=10)\nplt.title('Residual Plot')","296bf152":"women_middle = women_volleyball[women_volleyball['position_number']==3]\nwomen_middle.describe()","a9abacd0":"plt.figure(figsize=(10,6))\nsns.distplot(women_middle['spike'])\nplt.title('Middle Blockers: Position 3')","e8460e71":"plt.figure(figsize=(10,6))\nsns.distplot(women_middle['block'])\nplt.title('Middle Blockers: Position 3')","c15a3d69":"plt.figure(figsize=(10,8))\nsns.lmplot(data=women_middle,x='height',y='spike')\nplt.title('Middle Blockers: Position 3')","c12b2ec1":"plt.figure(figsize=(10,8))\nsns.lmplot(data=women_middle,x='height',y='block')\nplt.title('Middle Blockers: Position 3')","80629bff":"women_opp = women_volleyball[women_volleyball['position_number']==4]\nwomen_opp.describe()","6ddd1557":"plt.figure(figsize=(10,6))\nsns.distplot(women_opp['spike'])\nplt.title('Opposite Hitters: Position 4')","ca3d8552":"plt.figure(figsize=(10,6))\nsns.distplot(women_opp['block'])\nplt.title('Opposite Hitters: Position 4')","28835e1a":"plt.figure(figsize=(10,8))\nsns.lmplot(data=women_opp,x='height',y='spike')\nplt.title('Opposite Hitters: Position 4')","02e49295":"plt.figure(figsize=(10,8))\nsns.lmplot(data=women_opp,x='height',y='block')\nplt.title('Opposite Hitters: Position 4')","94b6748a":"women_volleyball.groupby('position_number').mean()","c5879ffd":"X=women_volleyball['height']\ny=women_volleyball['position_number']\n\ndtree = DecisionTreeClassifier()\ndtree.fit(X_train,y_train)\npredictions = dtree.predict(X_test)","14ea7001":"X=women_volleyball[['height','spike','block']]\ny=women_volleyball['position_number']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)\nsvm = SVC()\nsvm.fit(X_train,y_train)\npredictions = svm.predict(X_test)","a9d8ca5c":"print(confusion_matrix(y_test,predictions))\nprint('\\n')\nprint(classification_report(y_test,predictions))\nprint('\\n')\nprint(accuracy_score(y_test,predictions))","0f08739f":"param_grid = {'C': [0.1,1, 10, 100], 'gamma': [1,0.1,0.01,0.001]} \ngrid = GridSearchCV(SVC(),param_grid,refit=True,verbose=2)\ngrid.fit(X_train,y_train)","d1a036e5":"grid_predictions = grid.predict(X_test)","b9ada1be":"print(confusion_matrix(y_test,predictions))\nprint('\\n')\nprint(classification_report(y_test,predictions))\nprint('\\n')\nprint(accuracy_score(y_test,predictions))","44188d3c":"X=women_volleyball[['height','spike','block']]\ny=women_volleyball['position_number']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)\nnb = MultinomialNB()\nnb.fit(X_train,y_train)\npredictions = nb.predict(X_test)","be363e19":"print(confusion_matrix(y_test,predictions))\nprint('\\n')\nprint(classification_report(y_test,predictions))\nprint('\\n')\nprint(accuracy_score(y_test,predictions))","11a4f284":"X=women_volleyball[['height','spike','block']]\ny=women_volleyball['position_number']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)\ndtree = DecisionTreeClassifier()\ndtree.fit(X_train,y_train)\npredictions = dtree.predict(X_test)","57894b43":"print(confusion_matrix(y_test,predictions))\nprint('\\n')\nprint(classification_report(y_test,predictions))\nprint('\\n')\nprint(accuracy_score(y_test,predictions))","5347dd9c":"X=women_volleyball[['height','spike','block']]\ny=women_volleyball['position_number']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)\nrfc = RandomForestClassifier(n_estimators=600)\nrfc.fit(X_train,y_train)\npredictions = rfc.predict(X_test)","1544add4":"print(confusion_matrix(y_test,predictions))\nprint('\\n')\nprint(classification_report(y_test,predictions))\nprint('\\n')\nprint(accuracy_score(y_test,predictions))","91fc07e7":"modeling_accuracy_scores = pd.DataFrame(index=['SVM','Naive-Bayes','Decision Tree','Random Forest'],columns=['accuracy scores'],data=[0.34,0.39,0.23,0.20])","4b990785":"modeling_accuracy_scores","c4ddf489":"Just starting out, but let me know any ideas for improvement!","8472536e":"Observations: \n\n1). The mean spike height and block height of the women setters (position 1) and outside hitters (position 2) are around 286cm and 274cm.\n\n2). The mean spike height and block height of the women middles (position 3) and opposites (position 4) are notably greaters, around 297cm and 285cm. \n\n3). Libero (position 6) is not expected to spike or block, so we expect considerably lower spike and block heights, if any. \n\n4). A last observation to make here is the mean spike height of outside hitters (286cm) is around the mean block height of middles and opposites (285cm). Middles and opposites often have to block outside hitter spikes, so this makes sense when put into perspective that the block heights can compete with the spike heights. ","2c34f633":"1). Most spike heights of outside hitters (position 2) float around 300 cm. Some outliers on the lower end lowers the mean, but the median spike height of outside hitters of 296cm is indicative of this distribution.\n\n2). Similarly, some lower values brings the mean block height of outside hitters down. ","1d07506a":"1). Similarly here, middle blockers have a tighter distribution for block height when compared to outside hitters.","54a38082":"1). The mean spike and block heights of middle blockers (position 3) more closely match the median, perhaps implying less of a spread in data. ","aae58cbf":"1). There is somewhat of a correlation between a player's height vs. their spike and block heights for outside hitters (position 2)","3a8fe91b":"1). Here we can observe position number 3 and 4 has a higher mean height than that of 1 and 2.  This is not surprising seeing that position 3 and 4 correspond to the middle blocker and opposite positions, respectively, and these positions are expected to provide strong blocking skills, of which height contributes well.\n\n2). Additionally, position number 6 has a much lower mean height than all other positions. This is also expected since position 6 is the libero position. High defensive skill and reception skills are expected from this position and a lower height contributes well here.","15a8a015":"# Middle Blockers (Position 3)","33847605":"There is not a lot of data for women volleyball players, but I will still explore some modeling predictions to see what happens.","8536cb0c":"# Opposite Hitters (Position 4)","05c076f1":"1). Notice that there are only 143 unique entries, despite there being 432 total counts.  Upon further inspection, each player's name occurs 3 times with identical feature values. I will drop the duplicates. ","1afe93bd":"# Outside Hitters (Position 2)","d15c3bae":"**Let's isolate the outside hitters first. This is known as position 2.**","28fb5c00":"1). Mean spike heights and block heights of opposites (position 4) are also relatively close to the medians, indicating a tighter distribution than outside hitters (position 2).\n\n2). This is a very small set of data.","e7eab688":"1). A less spread out distribution where the mean and median spike height are both around 300cm.","b66b006f":"1). Outside hitters are more disperse in spike heights and block heights than the other positions, with more outliers. Their heights also have a wider range, which may have contributes to their stronger trend.","4188e51f":"1). We notice here that there is one entry who has a 0 spike height. This is unexpected and is likely caused by her measurement never being recorded. We will drop this entry.","f815729a":"1). There are much weaker trends for middle blockers with spike\/block heights vs. heights. ","97d8e65c":"1). The mean is considerably lower than the median spike and block heights, indicating that there may be some outliers on the lower end.","28c7ed52":"Observations:\n\n1). A distribution plot of the residuals does not quite show us a normal distribution. I don't feel it would be accurate to drawn any conclusions from the data in that case. I believe a larger dataset would help this.\n\n2). A women volleyball player's has a pearson coefficient of 0.66 with the player's spike height and a pearson coefficient of 0.61 with the player's block height."}}