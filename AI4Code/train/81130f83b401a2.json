{"cell_type":{"8d9e8036":"code","4a24a601":"code","34437b64":"code","c6205991":"code","1e3bc651":"code","00a54da2":"markdown"},"source":{"8d9e8036":"import librosa\nimport librosa.display\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Rectangle\nimport numpy as np\nimport pandas as pd","4a24a601":"def txt2df(file):\n    \"Read txt file and returns labels dataframe\"\n    with open(file) as f:\n        labels = f.read()\n        labels = [l.split('\\t') for l in labels.split('\\n')][:-1]\n        labels = [l for o in labels for l in o]\n        labels = [l for l in labels]\n        labels = [l for l in labels if l != '\\\\']\n        labels = np.array(labels).reshape(-1, 5)\n        df = pd.DataFrame({'start': labels[:,0].astype(float), 'end': labels[:,1].astype(float), \n                           'fmin': labels[:,3].astype(float), 'fmax': labels[:,4].astype(float),\n                           'name': labels[:,2].astype(str)})\n    return df\n\ndef rectangle(df_row, frequency):\n    start, end, fmin, fmax = [df_row[o] for o in ['start', 'end','fmin', 'fmax']]\n    if fmin == -1: fmin = 0\n    if fmax == -1: fmax = frequency.max()\n    xy = (start, fmin)\n    width = end - start\n    height = fmax - fmin\n    return xy, width, height","34437b64":"# Spectrogram\ndata, sr = librosa.load('\/kaggle\/input\/sample.mp3')\nspectrogram = librosa.feature.melspectrogram(y=data, sr=sr)\nspectrogram = librosa.power_to_db(spectrogram)\n\n# Labels\nlabels = txt2df('\/kaggle\/input\/sample_labels.txt')","c6205991":"labels.head()","1e3bc651":"fig, ax = plt.subplots(figsize=(10,4), dpi=120)\nlibrosa.display.specshow(spectrogram, sr=sr, x_axis='time', y_axis='mel', ax=ax);\nfor i in range(len(labels)):\n    ax.add_patch(Rectangle(*rectangle(labels.iloc[i], ax.axis()[2:]), fc ='none', ec ='r', lw = 4))","00a54da2":"# Label Audio with Audacity\n\nThis is the code to read the labels produced as described in this Medium story: https:\/\/towardsdatascience.com\/how-to-label-audio-for-deep-learning-in-4-simple-steps-6a2c33b343e6"}}