{"cell_type":{"2760a201":"code","517969eb":"code","405b2132":"code","86d68350":"code","a8f310e0":"code","e3bfdc15":"code","a2199a3b":"code","31a1b81d":"code","61bd6443":"code","23cfafba":"code","6fffb031":"code","03475811":"code","27d6f147":"code","738b625c":"code","08ffa354":"code","478e7fa6":"code","d2278dc0":"code","59e36deb":"code","5c280156":"code","4f3e4aa9":"code","e8f9ba65":"code","56764ffd":"code","d22a04c4":"code","459ea469":"code","675bec2d":"code","29c9c5ce":"markdown","87762935":"markdown","871b2698":"markdown","268952c1":"markdown","5a18f817":"markdown","d426c7a0":"markdown","54a1119f":"markdown","43f0c7c5":"markdown","f7fe45ef":"markdown","e3dc394f":"markdown","7bc11f8a":"markdown","797bd8b5":"markdown"},"source":{"2760a201":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","517969eb":"df = pd.read_csv('\/kaggle\/input\/filpkart-onlineorders\/OnlineOrders_of_a_ecommerce_website.csv')\ndf.head()","405b2132":"# Using datetime\ndf['crawl_timestamp'] = pd.to_datetime(df['crawl_timestamp'])","86d68350":"# Sorting rows by date\ndf = df.reindex(df['crawl_timestamp'].sort_values().index)","a8f310e0":"# Starting from index 0\ndf.reset_index(drop=True, inplace=True)","e3bfdc15":"df['crawl_timestamp'][8082] - df['crawl_timestamp'][0]","a2199a3b":"df.shape","31a1b81d":"df['product_category_tree'][0]","61bd6443":"def clear(x):\n    \"\"\"Removes some characters\"\"\"\n    return x.replace('[\"', ' ').replace('\"]', ' ').split('>>')","23cfafba":"df['product_category_tree'] = df['product_category_tree'].apply(clear)","6fffb031":"# Done!\ndf['product_category_tree'][0]","03475811":"# Number of categories accessed\ndf['categories_clicked'] = df['product_category_tree'].apply(len)","27d6f147":"df.head(8)","738b625c":"df['categories_clicked'].mean()","08ffa354":"df['first_click'] = df['product_category_tree'].apply(lambda x: x[0])\ndf['last_click'] = df['product_category_tree'].apply(lambda x: x[-1])","478e7fa6":"df.head()","d2278dc0":"#Discount percentage\ndf['discount_pct'] = df['discounted_price']\/(df['retail_price']\/100)","59e36deb":"bym = df.groupby(by=df['crawl_timestamp'].dt.month_name())['retail_price'].mean().sort_values()\nsns.barplot(bym.index, bym.values, palette=sns.cubehelix_palette(len(bym.values)))\nplt.xticks(rotation=60)\nplt.title(\"Average gain in retail prices - per month\")\nplt.show()","5c280156":"df.groupby(by=df['crawl_timestamp'].dt.month_name())['retail_price'].mean().sort_index().plot(style='-o', color='green')","4f3e4aa9":"df.groupby(by=df['crawl_timestamp'].dt.hour)['retail_price'].mean().plot.bar(color='orange', label='retail_price')\ndf.groupby(by=df['crawl_timestamp'].dt.hour)['discounted_price'].mean().plot.bar(color='blue', label='discounted_price')\ndf.groupby(by=df['crawl_timestamp'].dt.hour)['retail_price'].mean().plot(color='red', label='')\n\nplt.legend()\nplt.title(\"Average gain in retail prices - per hour\")\nplt.show()\n#Decide for yourself","e8f9ba65":"df.groupby(by=df['crawl_timestamp'].dt.hour)['retail_price'].sum().plot.bar(color='orange', label='retail_price')\ndf.groupby(by=df['crawl_timestamp'].dt.hour)['discounted_price'].sum().plot.bar(color='blue')\ndf.groupby(by=df['crawl_timestamp'].dt.hour)['retail_price'].sum().plot(color='red', label='')\n\nplt.legend()\nplt.title(\"Total retail price gain - per hour\")\nplt.show()","56764ffd":"category = df['last_click'].value_counts().nlargest(10).sort_values()\nsns.barplot(category.values, category.index, palette=sns.cubehelix_palette(len(category.values)))\nplt.show()","d22a04c4":"product = df['product_name'].value_counts().nlargest(10).sort_values()\nsns.barplot(product.values, product.index, palette=sns.cubehelix_palette(len(category.values)))\nplt.xticks(rotation=45, ha='right')\nplt.show()","459ea469":"byday = df.groupby(by=df['crawl_timestamp'].dt.day_name())['retail_price'].mean().sort_values()\nsns.barplot(byday.index, byday.values, palette=sns.cubehelix_palette(len(byday.values)))\nplt.xticks(rotation=60)\nplt.title(\"Average gain in retail prices - per day weekly\")\nplt.show()","675bec2d":"fc = data=df['first_click'].value_counts().nlargest(10).sort_values()\n\nsns.barplot(fc.values, fc.index,\n            palette=sns.cubehelix_palette(len(fc.values)))\n\nplt.title('First category look')\nplt.show()","29c9c5ce":"# #2. What time should we display advertisements to maximize the likelihood of purchases?","87762935":"# Which day of the week has the most earnings?","871b2698":"# #1. What was the best month for sales? How much was earned that month?","268952c1":"# What does the customer look for?","5a18f817":"# #3. Which category sold most in that six month period?","d426c7a0":"## Questions:\n    1. What was the best month for sales? How much was earned that month?\n    2. What time should we display advertisements to maximize the likelihood of purchases?\n    3. Which category sold most in that six month period?\n    4. Top 10 products sold most in that six month period?","54a1119f":"# Data (Organization | cleaning | alteration ...)","43f0c7c5":"I intend to keep the \"clicks on the category\" in order within a list","f7fe45ef":"# Data Visualization ","e3dc394f":"# Exploratory Data Analysis (EDA)","7bc11f8a":"# MORE","797bd8b5":"# #4. Top 10 products sold most in that six month period?"}}