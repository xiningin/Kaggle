{"cell_type":{"520a1d3a":"code","73f32d14":"code","3f90f8fd":"code","457205ca":"code","a0661eb2":"code","9612be48":"code","aeeab273":"code","02964bb3":"code","263f77b2":"code","5380a797":"code","dd4ef579":"code","73cce548":"code","9b75f1e8":"code","a517c2f7":"code","3ebb39d4":"code","4929d82e":"code","058c6de4":"markdown","f47d60d7":"markdown","85cad237":"markdown","eff4b75f":"markdown","888fb349":"markdown","8c02373b":"markdown","8d782b7e":"markdown","21c2eef6":"markdown","4d915617":"markdown","bfb98b79":"markdown","8fbd7456":"markdown","350e1ad6":"markdown","1413f539":"markdown","6a114fcb":"markdown"},"source":{"520a1d3a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","73f32d14":"import numpy as np\nimport pandas as pd\nimport missingno as msno\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom matplotlib import pyplot as plt\n\nfrom sklearn.preprocessing import Normalizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.preprocessing import Normalizer\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.naive_bayes import BernoulliNB\nfrom sklearn.svm import SVC\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import accuracy_score, f1_score, confusion_matrix, classification_report\n%matplotlib inline","3f90f8fd":"df = pd.read_csv('..\/input\/personal-loan-modeling\/Bank_Personal_Loan_Modelling.csv', index_col='ID')\ndf.head()","457205ca":"rows, cols = df.shape\nprint(\"Rows:\", rows, \"\\nColumns:\", cols)","a0661eb2":"df.info()","9612be48":"df.describe()","aeeab273":"age_df = df.Age.value_counts().to_frame(name=\"Number in Age\")\n\nfig = px.bar(age_df, x=age_df.index, y='Number in Age', title=\"Number of people in each Age\")\nfig.update_layout(\n    xaxis_title=\"Age\",\n)\nfig.show()","02964bb3":"fig = px.bar(df, x='Age', y='Income', title='Income by Age', color='Income')\nfig.show()","263f77b2":"fig = px.bar(df, x='Age', y='Experience', title='Experience by Age', color='Experience')\nfig.show()","5380a797":"fig = px.bar(df.Education.value_counts().to_frame(), x=df.Education.value_counts().to_frame().index, y='Education', title='Education Count')\nfig.show()","dd4ef579":"fig = px.bar(df, x='Age', y='Mortgage', title='Mortgage Amount by Age', color='Mortgage')\nfig.show()","73cce548":"X = df.drop(['Personal Loan'], axis=1)\ny = df['Personal Loan']","9b75f1e8":"x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)","a517c2f7":"classifiers = {\n    #'Multinomial NB': MultinomialNB(), #Does not work for negative values\n    'Gaussian NB': GaussianNB(),\n    'Linear SVM': SVC(kernel='linear'),\n    'RBF SVM': SVC(kernel='rbf'),\n    'Sigmoid SVM': SVC(kernel='sigmoid'),\n    #FOR SVM USE HYPERPARAMETER TUNING TO BETTER UNDERSTAND WHAT TO TAKE\n    'MLP Classifier': MLPClassifier(),\n    'MLP Hidden Layer': MLPClassifier(hidden_layer_sizes=[100,100]),\n    'Ada Boost': AdaBoostClassifier(),\n    'Decision Tree': DecisionTreeClassifier(),\n    'Random Forest': RandomForestClassifier(),\n    'Gradient Boosting': GradientBoostingClassifier(),\n    'Logistic Regression': LogisticRegression()\n}","3ebb39d4":"acc_scores = dict()\n\nfor classifier in classifiers:\n    \n    clf = classifiers[classifier]\n    clf.fit(x_train, y_train)\n    y_pred = clf.predict(x_test)\n    acc_scores[classifier] = accuracy_score(y_pred, y_test)\n    print(classifier, acc_scores[classifier])","4929d82e":"model = GradientBoostingClassifier()\nmodel.fit(x_train, y_train)\n\ny_pred = model.predict(x_test)\nprint(\"Accuracy: %s%%\" % (100*accuracy_score(y_pred, y_test)))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"Classification Report for Random Forest Classifier\")\nprint(classification_report(y_test, y_pred))","058c6de4":"Yep thought so not so productive this","f47d60d7":"# Our Toolbox","85cad237":"Seems like there is no null values from here. Nice work on this data. No need to stress on null values","eff4b75f":"I'm a little interested to find out the income difference based on Age and Experience and Plotly is going to help me here","888fb349":"Gradient Boosting takes it with 98.64%","8c02373b":"# DataFrame Analysis","8d782b7e":"Hmm not much from from this. I just wanted to see how the Age is spread visually","21c2eef6":"Ok Let's get into our model for this notebook","4d915617":"# Classifier Training","bfb98b79":"# Exploratory Data Analysis","8fbd7456":"Millions of income differences here where the peak is at around age 43 <br>\n\nExperience might be straightforward here","350e1ad6":"## Best Classifier","1413f539":"And that is it for the prediction of the model. Maybe with a bit more preprocessing we can bring it even higher","6a114fcb":"Not that many very high mortgage amounts but some are pretty high in some age numbers. Interesting"}}