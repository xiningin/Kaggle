{"cell_type":{"3a38f6e2":"code","27245fc4":"code","45cbeb2d":"code","548cd29a":"code","4cdde5ad":"code","693e6d7b":"code","f1de6504":"code","abc5987d":"code","d95c751a":"code","58be60ed":"code","346be18c":"code","f32e2a15":"code","ca089fac":"code","242644b2":"code","b0332f06":"code","184bbc5f":"code","38b19ad7":"code","4e9115e7":"code","e12ce1f2":"code","24f4a02d":"code","258b7c11":"code","810e73fe":"code","75dfcf4d":"code","0a5af3d8":"code","2ff0f614":"code","217adf2d":"code","c1789ad2":"code","653bb6b7":"code","d0f8b1cf":"code","8063fa70":"code","9b03352b":"code","00a51ea0":"code","c21f5ffe":"code","3a173a03":"code","f2086f9b":"code","70f5535b":"code","36b7ed3d":"code","6ea43cb0":"code","5f9bfcd2":"code","e25b77d7":"code","4c36182a":"code","46a9d619":"code","bac4f895":"code","67fa180a":"code","33cd937d":"code","a5069d9d":"code","3a39dab3":"code","5ec8f81f":"code","4e496622":"code","cb77270e":"code","4d44e42d":"code","7531aa73":"code","f5da83d8":"code","8c18e4a3":"code","5556b173":"code","78ae0c8d":"code","017c0ea3":"code","55b0dd40":"code","089e624b":"code","40b6c987":"code","6a1506da":"code","fcf21bf0":"code","207eff61":"code","3d50ef6d":"code","21d1c9f6":"code","0518d228":"code","5c481d4a":"code","3fe72849":"code","5000a769":"code","2181fe50":"code","b771fc69":"code","bf591605":"code","e098613d":"code","00b4f2bd":"code","1fc2443b":"code","5a745e7d":"code","2dd76d06":"code","3cecc8f2":"code","ae970bec":"code","2f7e91a9":"code","4fd65888":"code","a9dcc57f":"code","35d96c87":"code","a965de1a":"code","1b6eb836":"code","46763810":"markdown","893dce46":"markdown","a5774042":"markdown"},"source":{"3a38f6e2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory0\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","27245fc4":"import matplotlib.pyplot as plt\nimport seaborn as sns","45cbeb2d":"df=pd.read_csv('\/kaggle\/input\/machine-learning-24-hrs-hackathon\/train_SJC.csv')","548cd29a":"df.head()","4cdde5ad":"df1=df.rename(columns={\"Unnamed: 0\":\"ClaimNumber\",\"Unnamed: 1\":\"DateTimeOfAccident\",\"Unnamed: 3\":\"Age\",\"Unnamed: 4\":\"Gender\",\"Unnamed: 5\":\"MaritalStatus\",\"Unnamed: 6\":\"DependentChildren\",\"Unnamed: 8\":\"WeeklyWages\",\"Unnamed: 9\":\"PartTimeFullTime\",\"Unnamed: 10\":\"HoursWorkedPerWeek\",\"Unnamed: 12\":\"ClaimDescription\",\"Unnamed: 13\":\"InitialIncurredCalimsCost\",\"Unnamed: 14\":'UltimateIncurredClaimCost'},inplace=False)","693e6d7b":"df1.head()","f1de6504":"data=df1.drop(df1.index[0])\ndata.head()","abc5987d":"data.info()","d95c751a":"data.shape","58be60ed":"data.describe()","346be18c":"data.isnull().sum()","f32e2a15":"data['MaritalStatus'].value_counts()","ca089fac":"data['MaritalStatus'].mode()","242644b2":"data=data.dropna()","b0332f06":"data.isnull().sum()","184bbc5f":"data['UltimateIncurredClaimCost']=data['UltimateIncurredClaimCost'].astype(np.float64)\nlog_UltimateIncurredClaimCost=np.log(data['UltimateIncurredClaimCost'])","38b19ad7":"sns.set_theme(style=\"darkgrid\")\nplt.figure(figsize = (10, 10))\nsns.boxplot(x = 'Gender', y = log_UltimateIncurredClaimCost,  data =data)","4e9115e7":"plt.figure(figsize=(12,8))\nsns.barplot(x='MaritalStatus',y='UltimateIncurredClaimCost',color='green',data=data)\nplt.show()","e12ce1f2":"plt.figure(figsize=(15,12))\nsns.barplot(x='Age',y='UltimateIncurredClaimCost',color='blue',data=data)\nplt.xticks(rotation=90)\nplt.show()","24f4a02d":"data.head()","258b7c11":"plt.figure(figsize=(12,10))\nsns.barplot(x='DaysWorkedPerWeek',y='UltimateIncurredClaimCost',data=data)\nplt.show()\n","810e73fe":"data['HoursWorkedPerWeek'].max()","75dfcf4d":"data['WeeklyWages']=data['WeeklyWages'].astype(np.float64)\ndata['WeeklyWages']=data['WeeklyWages'].astype(np.int64)","0a5af3d8":"plt.figure(figsize=(12,8))\nsns.scatterplot(x='WeeklyWages',y='UltimateIncurredClaimCost',hue=\"DependentChildren\",data=data)\nplt.show()","2ff0f614":"data['DateTimeOfAccident'].head()","217adf2d":"pd.set_option('display.max_columns',100)\ndf.head()","c1789ad2":"pd.set_option('display.max_columns',100)\ndf.head()","653bb6b7":"df.head()","d0f8b1cf":"import datetime as dt\ndata['DateTimeOfAccident']=pd.to_datetime(data['DateTimeOfAccident'],format=\"%Y-%m-%dT%H:%M:%S\")\ndata[\"yearofAccident\"] =data[\"DateTimeOfAccident\"].dt.year\ndata[\"dayofweekAccident\"] = data[\"DateTimeOfAccident\"].dt.weekday\ndata['monthOfAccident'] =data['DateTimeOfAccident'].dt.month","8063fa70":"data['DateReported']=pd.to_datetime(data['DateReported'],format=\"%Y-%m-%dT%H:%M:%S\")\ndata[\"yearofReported\"] =data[\"DateReported\"].dt.year\ndata[\"dayofweekReported\"] = data[\"DateReported\"].dt.weekday\ndata['monthOfReported'] =data['DateReported'].dt.month","9b03352b":"pd.set_option('display.max_columns',100)\ndf.head()","00a51ea0":"df.head()","c21f5ffe":"import datetime\nend_date = datetime.datetime(2010,1,1)\nstart_date = datetime.datetime(2009, 4, 1)\nnum_months = (end_date.year - start_date.year) * 12 + (end_date.month - start_date.month)\nnum_months","3a173a03":"data.tail()","f2086f9b":"data['DependentChildren'].value_counts()","70f5535b":"data['WeeklyWages'].value_counts()","36b7ed3d":"plt.figure(figsize=(8,5))\nsns.barplot(x='DependentChildren',y='UltimateIncurredClaimCost',color='black',data=data)\nplt.show()","6ea43cb0":"data['DependentsOther'].value_counts()","5f9bfcd2":"plt.figure(figsize=(8,5))\nsns.scatterplot(x='DependentsOther',y='UltimateIncurredClaimCost',data=data)\nplt.show()","e25b77d7":"data.columns","4c36182a":"data=data.drop(['DateTimeOfAccident','DateReported','ClaimNumber','ClaimDescription','yearofAccident', 'dayofweekAccident',\n       'monthOfAccident', 'yearofReported', 'dayofweekReported',\n       'monthOfReported'],axis=1)","46a9d619":"data.corr()","bac4f895":"fig, ax = plt.subplots(figsize=(12,15)) \nsns.heatmap(data.corr()*10,vmin=-1,vmax=10,linewidths=1,annot=True,annot_kws={\"size\": 10},fmt=\"g\",ax=ax,cmap=\"YlGnBu\",color=\"green\")","67fa180a":"from sklearn.preprocessing import LabelEncoder","33cd937d":"len = LabelEncoder()","a5069d9d":"data['Gender'].value_counts()","3a39dab3":"data['Gender'] = len.fit_transform(data['Gender'])\ndata['MaritalStatus'] = len.fit_transform(data['MaritalStatus'])                                     \ndata['PartTimeFullTime']=len.fit_transform(data['PartTimeFullTime']) ","5ec8f81f":"data.head()","4e496622":"data.columns","cb77270e":"feature_cols=['Age', 'Gender', 'MaritalStatus','DependentChildren','WeeklyWages', 'PartTimeFullTime','InitialIncurredCalimsCost']\nX=data[feature_cols]\ny=data['UltimateIncurredClaimCost']\nX.head()","4d44e42d":"print(X.shape)\nprint(y.shape)","7531aa73":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state =30)\n\nprint(x_train.shape)\nprint(x_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","f5da83d8":"X","8c18e4a3":"y","5556b173":"from sklearn.preprocessing import StandardScaler\n# creating a standard scaler\nsc = StandardScaler()\n# feeding independents sets into the standard scaler\nx_train = sc.fit_transform(x_train)\nx_test = sc.fit_transform(x_test)","78ae0c8d":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score\n# creating the model\nreg = LinearRegression()\n","017c0ea3":"reg.fit(x_train, y_train)\n","55b0dd40":"# predicting the test set results\ny_pred = reg.predict(x_test)\nr2 = r2_score(y_test, y_pred)\nprint(\"r2 score :\", r2)","089e624b":"y_pred","40b6c987":"from sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators = 10, random_state = 0)\nregressor.fit(x_train, y_train)\n\n# Predicting a new result\ny_pred = regressor.predict(x_test)\nregressor.score(x_train,y_train)","6a1506da":"best_model=regressor.fit(x_train, y_train)\nbest_model.feature_importances_","fcf21bf0":"test_df=pd.read_csv(\"\/kaggle\/input\/machine-learning-24-hrs-hackathon\/Test_SJC.csv\")\ntest_df.head()","207eff61":"test_df.shape","3d50ef6d":"test_df.isnull().sum()","21d1c9f6":"test_df.head()","0518d228":"test_df['Gender'].value_counts()","5c481d4a":"data['MaritalStatus'].mode()","3fe72849":"test_df['MaritalStatus'] = test_df['MaritalStatus'].fillna('S')","5000a769":"test_df['MaritalStatus'].value_counts()","2181fe50":"test_df.columns","b771fc69":"X","bf591605":"y_pred","e098613d":"test_df['WeeklyWages']=test_df['WeeklyWages'].astype(np.float64)\ntest_df['WeeklyWages']=test_df['WeeklyWages'].astype(np.int64)\n","00b4f2bd":"from sklearn.preprocessing import LabelEncoder","1fc2443b":"len = LabelEncoder()","5a745e7d":"test_df['Gender'] = len.fit_transform(test_df['Gender'])","2dd76d06":"test_df['MaritalStatus'] = len.fit_transform(test_df['MaritalStatus'])","3cecc8f2":"test_df['PartTimeFullTime']=len.fit_transform(test_df['PartTimeFullTime']) ","ae970bec":"x1=test_df['Age']\nx2=test_df['Gender']\nx3=test_df['MaritalStatus']\nx4=test_df['DependentChildren']\nx5=test_df['WeeklyWages']\nx6=test_df['PartTimeFullTime']\nx7=test_df['InitialIncurredCalimsCost']","2f7e91a9":"UltimateIncurredClaimCost=0.24*x1+0.04*x2+0.046*x3+0.02*x4+0.24*x5+0.03*x6+0.33*x7","4fd65888":"UltimateIncurredClaimCost","a9dcc57f":"UltimateIncurredClaimCost.mean()","35d96c87":"output=UltimateIncurredClaimCost","a965de1a":"csv = pd.read_csv('\/kaggle\/input\/machine-learning-24-hrs-hackathon\/sample_submission.csv')\ncsv[\"UltimateIncurredClaimCost\"]=output","1b6eb836":"\ncsv.to_csv(\"Sample Submission.csv\", index = False)","46763810":"# Test Dataset","893dce46":"# EDA","a5774042":"# missing values"}}