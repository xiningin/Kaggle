{"cell_type":{"9c1fa10b":"code","d74077c2":"code","a8ac7033":"code","a4995f9a":"code","63d0e687":"code","40429d0d":"code","af45cb29":"code","33521900":"code","24fd4241":"code","6b700ccc":"code","deee7a79":"code","966949a3":"code","73191ac0":"code","b3246467":"code","ceab4eaf":"code","636cd6b1":"code","92af2b35":"markdown","5cf34e3e":"markdown"},"source":{"9c1fa10b":"import os\nfrom scipy.fft import fft, rfft \nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","d74077c2":"base_dir = \"..\/input\/tabular-playground-series-jan-2022\"\ntrain = pd.read_csv(os.path.join(base_dir, \"train.csv\"))\ntest = pd.read_csv(os.path.join(base_dir, \"train.csv\"))","a8ac7033":"train","a4995f9a":"train.info()","63d0e687":"train.describe()","40429d0d":"print(f\"Data recorded from {min(train.date)} to {max(train.date)}\")","af45cb29":"print(\"Countries\")\ntrain.country.value_counts()","33521900":"print(\"Stores\")\ntrain.store.value_counts()","24fd4241":"print(\"Product\")\ntrain[\"product\"].value_counts()","6b700ccc":"print(f\"Data recorded from {min(train.num_sold)} to {max(train.num_sold)}\")","deee7a79":"train['num_sold'].plot()","966949a3":"\nfor c in train['country'].unique():\n    fig, axes = plt.subplots(3, 3, figsize=(21,15))\n    for i, p in enumerate(train['product'].unique()):\n        for j, s in enumerate(train['store'].unique()):\n            temp = train[(train['country'] == c) & (train['product'] == p) & (train['store'] == s)]\n            axes[i, j].plot(temp['num_sold'])\n            axes[i, j].title.set_text(f\"{c} {p} {s}\")\n        temp = train[(train['country'] == c) & (train['product'] == p)]\n        axes[i, 2].plot(temp['num_sold'])\n        axes[i, 2].title.set_text(f\"{c} {p} stores\")\n    plt.plot()","73191ac0":"temp = train[(train['country'] == 'Finland') & (train['product'] == 'Kaggle Mug') & (train['store'] == 'KaggleMart')]['num_sold']\ntemp.plot()\ntemp = temp.rolling(30).mean()\ntemp.plot()","b3246467":"#lets try to remove the general trend\ntemp = train[(train['country'] == 'Finland') & (train['product'] == 'Kaggle Mug') & (train['store'] == 'KaggleMart')]['num_sold']\ntemp = temp.to_numpy()\ndef gradient(p1, p2):\n    if (p2[0] - p1[0] == 0):\n        print(p1, p2)\n    return (p2[1] - p1[1])\/(p2[0] - p1[0])\ngradients = []\nfor i in range(365):\n    gradients.append(gradient((i, temp[i]), (i + 365*2, temp[i + 365*2])))\ngradient_mean = sum(gradients)\/len(gradients)\nc = 0 #temp.mean()\nx = np.linspace(0, 365*4, 365*4 + 1)\nprint(temp.shape, (gradient_mean*x + c).shape)\nplt.plot(temp - temp.mean())\nstraight_line = gradient_mean*x + c \nplt.plot(x, straight_line)\nplt.plot(x, temp - (gradient_mean*x + c))","ceab4eaf":"plt.plot(x, fft(temp - straight_line))","636cd6b1":"from scipy.fft import fft, fftfreq, fftshift\n\nimport matplotlib.pyplot as plt\n\nt = np.arange(0, 256, 1)\na = np.random.uniform(0, 1, 256)\nplt.plot(a + np.sin(0.5*t))\nplt.show()\nsp = fftshift(fft(a + np.sin(0.5*t)))\n\nfreq = fftshift(fftfreq(t.shape[-1]))\n\nplt.plot(freq, sp.real)\n\nplt.show()","92af2b35":"# **Graphs**","5cf34e3e":"## Exploratory Data Analysis"}}