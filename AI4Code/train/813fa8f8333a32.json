{"cell_type":{"7d9fd9bd":"code","ffb4c0c9":"code","7e181688":"code","13934875":"code","c441e952":"code","d48a8274":"code","cbe7df66":"code","9e536c50":"code","50c9cdc3":"code","0c970933":"code","1f755217":"code","5f1f379d":"code","9b5a04f3":"code","b014b5cd":"code","289b77b0":"code","a3381726":"code","3f267c40":"code","c348ca6a":"code","1cedc075":"code","32930cd7":"code","2f14d13e":"code","b1b983e0":"code","9436278c":"code","3a78f0af":"code","f54f48dd":"code","5666efda":"code","4732f444":"code","5d5887e9":"code","a2fe645b":"code","7cd7c28c":"markdown","cc3b297b":"markdown","b27ffce3":"markdown","22640fc6":"markdown","3023257e":"markdown","c9441ce9":"markdown"},"source":{"7d9fd9bd":"import numpy as np\nimport pandas as pd\n\nfrom fastai.utils import *\nfrom fastai.vision import *\nfrom fastai.callbacks import *\nfrom pathlib import Path\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nprint(os.listdir(\"..\/input\"))","ffb4c0c9":"!pip install -q efficientnet_pytorch","7e181688":"from efficientnet_pytorch import EfficientNet","13934875":"def seed_everything(seed=42):\n    random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    np.random.seed(seed)\n    torch.manual_seed(seed)\n    torch.cuda.manual_seed(seed)\n    torch.backends.cudnn.deterministic = True\nseed_everything()","c441e952":"print('Make sure cuda is installed:', torch.cuda.is_available())\nprint('Make sure cudnn is enabled:', torch.backends.cudnn.enabled)","d48a8274":"hack_path = Path('..\/input')","cbe7df66":"train_df = pd.read_csv(hack_path\/'train.csv')\ntest_df = pd.read_csv(hack_path\/'sample_submission.csv')","9e536c50":"def get_data(bs, size):\n    data = ImageDataBunch.from_df(df=train_df, path=hack_path\/'train', folder='train',\n                                  bs=bs, size=size, valid_pct=0.1, \n                                  resize_method=ResizeMethod.SQUISH, \n                                  ds_tfms=get_transforms(do_flip=True, flip_vert=True,\n                                                         max_lighting=0.2, max_zoom=1.1, \n                                                         max_warp=0.2, max_rotate=10))\n    test_data = ImageList.from_df(test_df, path=hack_path\/'test', folder='test')\n    data.add_test(test_data)\n    data.normalize(imagenet_stats)\n    return data","50c9cdc3":"data = get_data(bs=64, size=128)","0c970933":"data.show_batch(rows=3, figsize=(5,5))","1f755217":"model_name = 'efficientnet-b3'","5f1f379d":"def get_model(pretrained=True, **kwargs):\n    model = EfficientNet.from_pretrained(model_name)\n    model._fc = nn.Linear(model._fc.in_features, data.c)\n    return model","9b5a04f3":"learn = Learner(data, get_model(), \n                metrics=[AUROC(), FBeta(), accuracy],\n                callback_fns=[partial(SaveModelCallback)],\n                wd=0.1,\n                path = '.')","b014b5cd":"learn.lr_find()\nlearn.recorder.plot(suggestion=True)","289b77b0":"min_grad_lr = learn.recorder.min_grad_lr\nmin_grad_lr","a3381726":"learn.fit_one_cycle(10, slice(min_grad_lr))","3f267c40":"learn.recorder.plot_losses()","c348ca6a":"learn.recorder.plot_lr(show_moms=True)","1cedc075":"validation = learn.validate()\nprint(\"Final model validation loss: {0}\".format(validation[0]))","32930cd7":"learn.save('efficientnet-cactus', return_path=True)","2f14d13e":"interp = ClassificationInterpretation.from_learner(learn)\n\nlosses,idxs = interp.top_losses()\n\nlen(data.valid_ds)==len(losses)==len(idxs)","b1b983e0":"interp.plot_confusion_matrix(figsize=(3,3), dpi=80)","9436278c":"interp.most_confused(min_val=2)","3a78f0af":"probability, _ = learn.TTA(ds_type=DatasetType.Test)","f54f48dd":"probability.argmin(dim=1)[:10]","5666efda":"probability.numpy()[:, 0]","4732f444":"test_df.has_cactus = probability.numpy()[:, 0]","5d5887e9":"test_df.head()","a2fe645b":"test_df.to_csv('submission.csv', index=False)","7cd7c28c":"## Getting predictions","cc3b297b":"## Load train and test dataframes","b27ffce3":"## Efficientnet-B3 Model","22640fc6":"**fin**","3023257e":"### Aerial Cactus Identification","c9441ce9":"## Loading required libraries"}}