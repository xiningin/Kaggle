{"cell_type":{"85ea54ee":"code","ce9cdd2c":"code","572433b3":"code","ad45c2d3":"code","08b26922":"code","297987e4":"code","d8d627bf":"code","dc155bdf":"code","7056e56b":"code","14d9bc17":"markdown","006e0ce6":"markdown","e5787438":"markdown","b4e5ab53":"markdown","257bced4":"markdown","d74d665c":"markdown","01647d29":"markdown","2d738d56":"markdown","7eafe06f":"markdown","408e5dab":"markdown","6796955c":"markdown","1c5b5f05":"markdown","6e3e8967":"markdown"},"source":{"85ea54ee":"import numpy as np\nimport pandas as pd\ndf = pd.read_csv('..\/input\/iris-data\/Iris.csv')\ndf","ce9cdd2c":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndf.Species = le.fit_transform(df.Species)\ndf","572433b3":"df.describe()","ad45c2d3":"PetalLengthCm_0 = df[df['Species']==0]['PetalLengthCm']\nPetalLengthCm_1 = df[df['Species']==1]['PetalLengthCm']\nPetalLengthCm_2 = df[df['Species']==2]['PetalLengthCm']\n\nPetalWidthCm_0 = df[df['Species']==0]['PetalWidthCm']\nPetalWidthCm_1 = df[df['Species']==1]['PetalWidthCm']\nPetalWidthCm_2 = df[df['Species']==2]['PetalWidthCm']","08b26922":"import matplotlib.pyplot as plt\nplt.scatter(PetalLengthCm_0, PetalWidthCm_0, label='Iris-setosa')\nplt.scatter(PetalLengthCm_1, PetalWidthCm_1, label='Iris-versicolor')\nplt.scatter(PetalLengthCm_2, PetalWidthCm_2, label='Iris-virginica')\nplt.legend()\n\nplt.show()","297987e4":"x = df[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']]\ny = df['Species']\nprint(x, y)","d8d627bf":"from sklearn.svm import SVC\nmodel = SVC()\nmodel.fit(x, y)","dc155bdf":"model.predict(x)","7056e56b":"model.score(x, y)","14d9bc17":"From the above figure, we can see that the data is almost linearly separable. We know there is not perfect linearly separation between Iris-Versicolor and Iris-Virginica. So, we will not get 100% accuracy. But this is minor thing. Let's check how many amount of accuracy we will get?","006e0ce6":"I will store input data and output data in two different variables: x and y","e5787438":"I will import some requires libraries to read a dataset, and will read data and print it.","b4e5ab53":"In the above result, we can see that there is 150 count for all attributes. This says that there is not a null value in any attribute. We know null values always creates a problem. So, we should fill all null values with its mean values or most frequently used value. In this case there is no null value. So, I can go ahead.","257bced4":"<span style=\"color:red; font-weight:bold;\">Problem : <\/span> In this notebook, I will build a model which classify the species of Iris. In this problem I will use Iris dataset. This data is linearly separable data. So I will build a model by using linear support vector machine.","d74d665c":"<span style=\"color:green; font-weight:bold; font-size: 25px;\"> Conclusion: <\/span> I have buid a model using linear SVM on linearly separable data. I can conclude that if we use linear SVM on the linearly separable data, we will get more accuracy.\n<br><br><br><br><br><br><br><br>\n<center>Thank you<\/center>","01647d29":"Now, check our model is working or not? I will use predict() method on the SVC object with input data.","2d738d56":"<span style=\"color:red; font-weight:bold;\">Data Preprocessing : <\/span> Now it's turn to preprocess the data. I will convert \"Species\" attribute of non-numeric data into the numeric data. For that I will use LabelEncoder from sklearn library of python.","7eafe06f":"Yes, we got 97.33% of accuracy, which is much better.","408e5dab":"<p style=\"color:purple; font-weight:bold; text-align:center; font-size:50px;\">Classification on linearly separable data by using linear Support Vector Machine<\/p>","6796955c":"<span style=\"color:red; font-weight:bold;\">Training of model : <\/span> Let's buid and train the model. I will use linear SVM to buid and train the model. For that, I will use sklearn library of python. As we know, fit() method of SVC object will train the model.","1c5b5f05":"<span style=\"color:red; font-weight:bold;\">Data Vidualization : <\/span> Now, I will use matplotlib library to vidualize the data.","6e3e8967":"<span style=\"color:red; font-weight:bold;\">Accuracy\/Score of the model : <\/span> Let's check the score of the model. I will use score() method on SVC object with input and output data."}}