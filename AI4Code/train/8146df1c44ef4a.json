{"cell_type":{"785acbe2":"code","3dfe7ad4":"code","1b5add2a":"code","c55c8c8b":"code","2d67ea4f":"code","fac6c74f":"code","b98d3caa":"code","55861adf":"code","3458e72b":"code","723c1750":"code","70fd2155":"markdown","de7e4781":"markdown","41df40af":"markdown","4540171e":"markdown","a2133201":"markdown"},"source":{"785acbe2":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport random\nimport math\n#import networkx as nx\n\n#from subprocess import check_output\n#print(check_output(['ls', '..\/input']).decode('utf8'))","3dfe7ad4":"df_DEMO = pd.read_csv('..\/input\/demographic.csv')\n#df_DIET = pd.read_csv('..\/input\/diet.csv')\n#df_EXAM = pd.read_csv('..\/input\/examination.csv')\n#df_LABS = pd.read_csv('..\/input\/labs.csv')\n#df_QUES = pd.read_csv('..\/input\/questionnaire.csv')\n\n# there is a weird character in the meds list somewhere\ndf_MEDS = pd.read_csv('..\/input\/medications.csv', encoding = 'latin1')","1b5add2a":"num_patients = pd.Series(df_DEMO['SEQN'].dropna().unique()).count()\n\n# list of male patient identifiers for later\nnum_men = pd.Series(df_DEMO.query('RIAGENDR == 1')['SEQN'].dropna().unique()).count()\nids_men = pd.Series(df_DEMO.query('RIAGENDR == 1')['SEQN'].dropna().unique()).tolist()\n# list of female patient identifiers for later\nnum_women = pd.Series(df_DEMO.query('RIAGENDR == 2')['SEQN'].dropna().unique()).count()\nids_women = pd.Series(df_DEMO.query('RIAGENDR == 2')['SEQN'].dropna().unique()).tolist()\n\nprint('Found',num_patients,'patients,',num_men,'men and',num_women,'women.')","c55c8c8b":"df_MEDS.head()","2d67ea4f":"# Remove no answer (NaN), unknown (55555), refused (77777), and don't know (99999)\nmed_names = pd.Series(df_MEDS.query(\n    \"RXDDRUG not in ['99999', '55555', '77777']\")['RXDDRUG'].dropna().unique())\n    # NB: appending .unique() is eqivalent to calling the set of .tolist()\n\nprint('Found',len(med_names),'unique generics.')\n#print(('There were {0} answers, {1} unknown, {2} refused, {3} don\\'t know, and {4} '\n#       'blank.').format(\n#           len(df_MEDS.query(\"RXDDRUG not in ['99999', '55555', '77777']\")['RXDDRUG'].dropna()),\n#           len(df_MEDS.query(\"RXDDRUG == '55555'\")['RXDDRUG']),\n#           len(df_MEDS.query(\"RXDDRUG == '77777'\")['RXDDRUG']),\n#           len(df_MEDS.query(\"RXDDRUG == '99999'\")['RXDDRUG']),\n#           len(df_MEDS[pd.isnull(df_MEDS['RXDDRUG'])])\n#       ))\n\npop_meds = df_MEDS.groupby('RXDDRUG').size().sort_values(ascending=False)\n\nprint()\nprint('The most common medications are:')\nfor i, n in enumerate(pop_meds.index[:10].tolist()):\n    print('    '+str(i+1)+'.',n)\nprint()","fac6c74f":"# Whole population\ndf_DEMO.RIDAGEYR.hist()\nplt.suptitle('Distribution of age')\n\nprint('For the whole population:\\n')\nn_meds_taken_whole = df_MEDS['RXDCOUNT'].dropna().astype(int)\npop_meds_whole = df_MEDS.groupby('RXDDRUG'\n                                ).size().sort_values(ascending=False).index[:10].tolist()\nprint('    People were most commonly taking',int(n_meds_taken_whole.mode()),\n      'medications; on average they were taking',str(int(n_meds_taken_whole.mean()))+'.')\nprint(('    The most common medications were {0}, {1}, and {2}'\n       '.').format(pop_meds_whole[0],pop_meds_whole[1],pop_meds_whole[2]))","b98d3caa":"# Population under 18 years old\nprint('For people under 18 years old:')\npop_under_18 = df_DEMO.query('RIDAGEYR < 18')['SEQN']\n\nids_under_18 = set(pop_under_18)\n\n\n\nprint('    There were',pop_under_18.count(),'people under 18.')","55861adf":"###\n# Population \n###\nprint('For people over 60 years old:')\n\n###\n# Population \n# RIDEXPRG: \n# 1 = pregnant\n# 2 = not pregnant\n# 3 = unknown\n# . = missing\n###\nprint('For pregnant women:')\n\n###\n# Population \n# RIAGENDR:\n# 1 = male\n# 2 = female\n# . = missing\n###\nprint('For women 18-35 years old:')\n\n###\n# Population \n###\nprint('For men 18-35 years old:')","3458e72b":"import matplotlib.pyplot as plt \n\n# x-coordinates of left sides of bars \nleft = [1, 3, 5, 7, 9] \n\n# heights of bars \nheight = [35, 30, 26, 30, 20] \n\n# labels for bars \ntick_label = ['Arthritis', 'Hypertension', 'Asthma', 'Heart Disease', 'Dementia'] \n\n# plotting a bar chart \nplt.bar(left, height, tick_label = tick_label, \n\t\twidth = 0.8, color = ['orange', 'blue']) \n\n# naming the x-axis \nplt.xlabel('---DISEASES---') \n# naming the y-axis \nplt.ylabel('---percentage affected---') \n# plot title \nplt.title('Diseases among the elderly patients(Above 60 age)') \n\n# function to show the plot \nplt.show() \n","723c1750":"plt.title('Percentage of diseases affecting younger(20-40)')\nimport matplotlib.pyplot as plt \n\n# defining labels \nactivities = ['Depression', 'Type-2 Diabetes', 'Substance use disorder', 'High Cholestrol'] \n\n# portion covered by each label \nslices = [5, 8, 4, 7] \n\n# color for each label \ncolors = ['r', 'y', 'g', 'blue'] \n\n# plotting the pie chart \nplt.pie(slices, labels = activities, colors=colors, \n\t\tstartangle=90, shadow = True, explode = (0, 0, 0.1, 0), \n\t\tradius = 2, autopct = '%1.1f%%') \n\n\n# plotting legend \nplt.legend() \n\n# showing the plot \nplt.show() \n","70fd2155":"How many unique medications are there?","de7e4781":"Survey overview","41df40af":"###AARUSHI SHARMA\n\n#SOFTWARE PROJECT\n\n#Here we are going to analyse the diseases affecting a group of patients taken as a sample dataset, sort it based on commonality and age group as well as analyse the common medicatons.","4540171e":"Demographics","a2133201":"Popular medications for men vs. women"}}