{"cell_type":{"0cd1498c":"code","61726b14":"code","945aca84":"code","a98e1672":"code","d579149f":"code","5e113c9b":"code","cc121f16":"code","6779fd95":"code","818762fc":"code","90186644":"code","06339fd7":"code","21bf5886":"code","8537fe44":"code","cd82a181":"code","b95cd088":"code","d1070b63":"code","0047054e":"code","0702523f":"markdown","1fd55326":"markdown","451c5618":"markdown","16430e0e":"markdown"},"source":{"0cd1498c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n\n","61726b14":"from sklearn.preprocessing import normalize\nfrom sklearn.cluster import KMeans","945aca84":"df=pd.read_csv('..\/input\/spotify-dataset-19212020-160k-tracks\/data.csv')\ndf.head()","a98e1672":"df1=df.drop(['artists','id','name','year','release_date','duration_ms'],axis=1)","d579149f":"tab1 = normalize(df1, axis=0, norm='max')","5e113c9b":"kmeans1 = KMeans(\n    init=\"random\",\n    n_clusters=2,\n    n_init=10,\n    max_iter=300,\n    random_state=42\n)","cc121f16":"kmeans1.fit(tab1)\nkmeans1.inertia_","6779fd95":"dfpetit=pd.read_csv('..\/input\/dfpetit2\/dfpetit2.csv')","818762fc":"dfpetit","90186644":"dfpetit2=dfpetit.drop(['artists','id','name','year','release_date','duration_ms','Unnamed: 0'],axis=1)","06339fd7":"dfpetit2","21bf5886":"tab2 =normalize(dfpetit2, axis=0, norm='max')\ntab2","8537fe44":"kmeans2 = KMeans(\n    init=\"random\",\n    n_clusters=6,\n    n_init=10,\n    max_iter=300,\n    random_state=42\n)","cd82a181":"kmeans2.fit(tab2)\nkmeans2.inertia_","b95cd088":"liste_labels=list(kmeans2.labels_)","d1070b63":"dfpetit['label']=liste_labels","0047054e":"dfpetit.head()","0702523f":"J'importe les m\u00eames donn\u00e9es que pour le clustering hi\u00e9rarchique","1fd55326":"# Clustering en 2 clusters sur toutes les chansons","451c5618":"On se d\u00e9barasse des caract\u00e9ristiques qui ne sont pas num\u00e9riques mais aussi de celle qui ne sont pas pertinentes comme l'ann\u00e9e, la dur\u00e9e, id etc...","16430e0e":"## Clustering en 6 clusters sur une partie des chansons"}}