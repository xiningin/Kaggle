{"cell_type":{"82305537":"code","9d55e572":"code","e4afbc9b":"code","c1dd9cb7":"code","dd0f4074":"code","df429b8d":"code","6f96f8dc":"code","f0d46547":"code","8e10aa08":"code","9a3b9987":"code","846cd93d":"code","c6c7416f":"code","62256190":"code","52a9e630":"code","250407a8":"code","6ea5dc5a":"code","cd231ff9":"code","9d9aebe0":"markdown","dcd6b2f5":"markdown","d2dc47ff":"markdown","3c0e986c":"markdown","4bf3d673":"markdown","93a34ba5":"markdown","f779655e":"markdown","721d416e":"markdown","175628dc":"markdown","a94f011c":"markdown","f6f0ded0":"markdown","22dda249":"markdown","f6f7ffb8":"markdown","3ed3d1f7":"markdown","b49decfa":"markdown","0f473833":"markdown"},"source":{"82305537":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nimport plotly.express as px\nfrom PIL import Image\nfrom wordcloud import WordCloud\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n%matplotlib inline","9d55e572":"dataset = pd.read_csv('..\/input\/top50spotify2019\/top50.csv', encoding = \"ISO-8859-1\")\ndataset.head()","e4afbc9b":"dataset = dataset.drop(['Unnamed: 0'], axis = 1)","c1dd9cb7":"dataset.columns = ['Track_Name', 'Artist_Name', 'Genre', 'BPM', 'Energy', 'Danceability', 'dB', 'Liveness','Valence',\n                  'Length(s)', 'Acousticness','Speechiness','Popularity']","dd0f4074":"hist_data = [dataset['Danceability'], dataset['Popularity'], dataset['Acousticness']]\ngroup_labels = [ 'Danceability','Popularity','Acousticness']\n\nfig = ff.create_distplot(hist_data, group_labels, bin_size=[10, 10,1], colors = ['#F66095', '#2BCDC1', '#393E46'])\nfig.update_layout(title_text='Popularity, Danceability and Acousticness')\nfig.show()","df429b8d":"Artists = pd.DataFrame(dataset['Artist_Name'].value_counts()).reset_index()\nArtists.columns = ['Artist','Total songs']","6f96f8dc":"fig = px.bar(Artists, x = 'Artist', y = 'Total songs', color = 'Artist', title='Artist vs amount of top songs')        \nfig.show()","f0d46547":"Genre = pd.DataFrame(dataset['Genre'].value_counts()).reset_index()\nGenre.columns = ['Genre','Total songs']\nfig = px.bar(Genre, x = 'Genre', y = 'Total songs', color = 'Genre', title='Genre vs amount of top songs')        \nfig.show()","8e10aa08":"plt.figure(figsize=(12,8))\n\nsns.boxplot(x = \"Popularity\", y = \"Genre\", data=dataset, palette = 'Set1')\n\nplt.xlabel('Popularity', fontsize=16)\nplt.ylabel('Genre', fontsize=16)\nplt.yticks(rotation='0')\nplt.title(\"Genre vs popularity\", fontsize=20)\nplt.show()","9a3b9987":"x = dataset.columns[3:]\nheat = go.Heatmap(z =dataset.corr(),\n                  x = x,\n                  y = x,\n                  xgap=1, ygap=1,\n                  colorbar_thickness=20,\n                  colorbar_ticklen=3,\n                  hovertext = dataset.corr(),\n                  hoverinfo='text',colorscale=[[0.0, '#F5FFFA'], \n                         [0.2, '#ADD8E6'], \n                         [0.4, '#87CEEB'],\n                         [0.6, '#87CEFA'], \n                         [0.8, '#40E0D0'], \n                         [1.0, '#00CED1']]\n                   )\n\ntitle = 'Correlation Matrix'               \n\nlayout = go.Layout(title_text=title, title_x=0.5, \n                   width=600, height=600,\n                   xaxis_showgrid=False,\n                   yaxis_showgrid=False,\n                   yaxis_autorange='reversed')\n   \nfig=go.Figure(data=[heat], layout=layout)        \nfig.show() ","846cd93d":"fig = px.scatter(dataset, x = \"Speechiness\", y = \"BPM\", size='Popularity', color = \"Genre\", title = 'BPM vs. Speechiness')\nfig.show()","c6c7416f":"fig = px.scatter(dataset, x = \"Energy\", y = \"dB\", size='Popularity', color = \"Genre\", title = 'Energy vs. dB')\nfig.show()","62256190":"plt.figure(figsize=(12,8))\nsns.jointplot(x = dataset[\"Energy\"], y = dataset['Danceability'], height=10 ,kind=\"kde\", color='purple')\n\nplt.ylabel('Danceability', fontsize=12)\nplt.xlabel(\"Energy\", fontsize=12)\nplt.title(\"Energy Vs Danceability\", fontsize=15)\n\nplt.show()","52a9e630":"hist_data = [dataset['Energy'], dataset['Danceability']]\ngroup_labels = [ 'Energy','Danceability']\n\nfig = ff.create_distplot(hist_data, group_labels, bin_size=[10, 10], colors = ['#D4323E', '#3466D4'])\nfig.update_layout(title_text='Energy vs Danceability')\nfig.show()","250407a8":"plt.figure(figsize=(12,8))\nsns.jointplot(x = dataset[\"Speechiness\"], y = dataset['BPM'], height=10 ,kind=\"kde\", color='turquoise')\n\nplt.ylabel('BPM', fontsize=12)\nplt.xlabel(\"Speechiness\", fontsize=12)\nplt.title(\"Speechiness Vs BPM\", fontsize=15)\n\nplt.show()","6ea5dc5a":"hist_data = [dataset['Speechiness'], dataset['BPM']]\ngroup_labels = [ 'Speechiness','BPM']\n\nfig = ff.create_distplot(hist_data, group_labels, bin_size=[12, 12], colors = ['#2462ab', '#2ba323'])\nfig.update_layout(title_text='Speechiness vs BPM')\nfig.show()","cd231ff9":"plt.subplots(figsize=(12,8))\nwordcloud = WordCloud(\n                          background_color='White',max_words = 30,\n                           contour_color='black', contour_width=1, \n                          width=1500, margin=10,\n                          height=1080\n                         ).generate(\" \".join(dataset.Track_Name))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","9d9aebe0":"## Thanks for reaching the end! Upvote if you liked it!","dcd6b2f5":"## Let's analyze the correlation between the top 50 songs","d2dc47ff":"Now let's see what word is the most repeated in title column!","3c0e986c":"- There are a few top artists with 2 or more songs in the top 50.\n- There are mainly three top genres: Dance Pop, Pop and Latin.","4bf3d673":"## Speechines vs. dB","93a34ba5":"**Distribution of features**","f779655e":"Let's do some EDA and visualizations about the dataset:\n- It contains the top 50 most listened songs in the world by spotify, their Genre, Beats per minute, and more.\n","721d416e":"Top songs seem to be highly danceable and not acoustic!","175628dc":"## EDA and visualizations","a94f011c":"## Spotify 50 songs","f6f0ded0":"So we can see that there are no clear correlations with 'Popularity'. There is no recipe for a song to be among the top 50!\n\nCorrelations seen:\n- Speechiness and BPM\n- Energy and dB","22dda249":"## Energy vs. Danceability","f6f7ffb8":"**Getting to know the data**","3ed3d1f7":"**Top artists and top Genres**","b49decfa":"**Importing modules and packages**","0f473833":"**The set contains has:**\n- 3 categorical columns: 'Track Name', 'Artist Name' and 'Genre'.\n- 10 numerical columns: 'BPM', 'Energy', 'Danceability', 'Loudness (dB)', 'Liveness (live record)', 'Valence (Mood)', 'Lenght', 'Acousticness', 'Popularity'."}}