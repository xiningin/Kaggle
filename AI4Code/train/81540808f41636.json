{"cell_type":{"7758d37f":"code","460d79f9":"code","9af249a8":"code","fe88be28":"code","fc6f3d0f":"code","5c941f79":"code","5d0868dc":"code","ce8c6dc2":"code","22645a19":"code","b3fc80c0":"code","5a9d12d5":"code","b14666ed":"code","10510058":"code","2e91a171":"code","a6dbd4c0":"code","449a8a15":"code","cf4de887":"code","98640875":"code","ef753a85":"code","3c6209fe":"code","fd28f39c":"code","8b546047":"code","1cee760f":"code","d18683e7":"code","6d5d06bb":"markdown","4e0cb0fe":"markdown","5c4096af":"markdown","6702c5ed":"markdown","ae55b609":"markdown","1e08dc8b":"markdown"},"source":{"7758d37f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nimport cv2\nimport random\nfrom random import randint\nimport time\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","460d79f9":"import torch\nfrom torch.utils.data import Dataset, random_split, DataLoader\nimport torch.nn.functional as F\nimport torch.nn as nn\n\nfrom PIL import Image\nfrom scipy import ndimage\n\nimport torchvision\nimport torchvision.models as models\nimport torchvision.transforms as T\nfrom torchvision.utils import make_grid\nfrom torchvision.datasets.utils import download_url\nfrom torchvision.datasets import ImageFolder\n\nfrom tqdm.notebook import tqdm\n\nfrom sklearn.metrics import f1_score","9af249a8":"DATA_DIR = '..\/input\/identify-snake-breed-hackerearth\/dataset'\n\n\nTRAIN_DIR = DATA_DIR + '\/train'                           \n#TEST_DIR = DATA_DIR + '\/test'                             \n\n#TRAIN_CSV = DATA_DIR + '\/labels.csv'                     \n#TEST_CSV = DATA_DIR + '\/submission.csv'\n#TRAIN_DIR = DATA_DIR + '\/images'","fe88be28":"data_df = pd.read_csv('..\/input\/identify-snake-breed-hackerearth\/dataset\/train.csv', encoding='utf8')\ndata_df.head()","fc6f3d0f":"labels_names=data_df[\"breed\"].unique()\nlabels_sorted=labels_names.sort()\n\nlabels = dict(zip(range(len(labels_names)),labels_names))\nlabels ","5c941f79":"lbl=[]\nfor i in range(len(data_df[\"breed\"])):\n    temp=list(labels.values()).index(data_df.breed[i])\n    lbl.append(temp)\n\n    \ndata_df['image_id'] = lbl\n#data_df['lbl'] = data_df['lbl'].astype(str)\ndata_df.head()","5d0868dc":"num_images = len(data_df[\"image_id\"])\nprint('Number of images in Training file:', num_images)\nno_labels=len(labels_names)\nprint('Number of snakes breeds in Training file:', no_labels)","ce8c6dc2":"bar = data_df[\"breed\"].value_counts(ascending=True).plot.barh(figsize = (30,120))\nplt.title(\"Distribution of the Snake Breeds\", fontsize = 20)\nbar.tick_params(labelsize=16)\nplt.show()","22645a19":"data_df[\"breed\"].value_counts(ascending=False)","b3fc80c0":"#path_img=[]\n#for i in range(len(data_df[\"breed\"])):\n #   temp=TRAIN_DIR + \"\/\" + str(data_df.breed[i]) + \".jpg\"\n  #  path_img.append(temp)\n\n#data_df['path_img'] =path_img\n#data_df.head()","5a9d12d5":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","b14666ed":"from fastai.vision.all import *\nfrom fastai.imports import *\nfrom fastai.vision.data import *\nfrom fastai import *\nimport numpy as np\nimport fastai\nimport matplotlib.pyplot as plt","10510058":"path = Path(\"\/kaggle\/input\/identify-snake-breed-hackerearth\/dataset\/train\")\npath.ls()","2e91a171":"np.random.seed(42)\ndata = ImageDataLoaders.from_folder(path, train=\".\", valid_pct=0.2, item_tfms=RandomResizedCrop(512, min_scale=0.75),\n                                    bs=32,batch_tfms=[*aug_transforms(size=256, max_warp=0), Normalize.from_stats(*imagenet_stats)],num_workers=0)","a6dbd4c0":"data.show_batch(nrows=4, figsize=(7,8))","449a8a15":"data.show_batch(nrows=3, figsize=(7,8))","cf4de887":"data.show_batch(nrows=2, figsize=(7,8))","98640875":"data.show_batch(nrows=1, figsize=(7,8))","ef753a85":"#path = Path('\/kaggle\/input\/\/')\ndls = ImageDataLoaders.from_folder(path, train='train',\n                                   item_tfms=Resize(224),valid_pct=0.2,\n                                   bs=64,seed=0)\ndls.show_batch()","3c6209fe":"def _add1(x): return x+1\ndumb_tfm = RandTransform(enc=_add1, p=0.5)\nstart,d1,d2 = 2,False,False\nfor _ in range(40):\n    t = dumb_tfm(start, split_idx=0)\n    if dumb_tfm.do: test_eq(t, start+1); d1=True\n    else:           test_eq(t, start)  ; d2=True\nassert d1 and d2\ndumb_tfm","fd28f39c":"from PIL import Image\n\nimg = Image.open(\"..\/input\/identify-snake-breed-hackerearth\/dataset\/train\/0002023e6f.jpg\")\nimg","8b546047":"_,axs = subplots(1,2)\nshow_image(img, ctx=axs[0], title='original')\nshow_image(img.flip_lr(), ctx=axs[1], title='flipped');","1cee760f":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax,sz in zip(axs.flatten(), [300, 500, 700]):\n    show_image(img.crop_pad(sz), ctx=ax, title=f'Size {sz}');","d18683e7":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Mar\u00edlia Prata, @mpwolke Was here' )","6d5d06bb":"#We don't have submission\/labels\/path images ","4e0cb0fe":"#Codes from Kamal Das https:\/\/www.kaggle.com\/kmldas\/beginner-s-guide-image-augmentation-transforms","5c4096af":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcSWjxMNIJ4R9GKeADLyBVJYy4uq-_QjN_eF8A&usqp=CAU)mysnakepet.com","6702c5ed":"#To use numbers instead of names for labels. Lets add the numbers as labels to the dataframe","ae55b609":"#EDA","1e08dc8b":"#Add the path of each image to the file. We don't have path to add."}}