{"cell_type":{"63833006":"code","4d656290":"code","d5155868":"code","5fecb2e7":"code","b44c15bd":"code","76b3082f":"code","2c9144bd":"code","85260832":"code","00d5b58a":"markdown","9987320f":"markdown","4f322107":"markdown","9e13fbb7":"markdown"},"source":{"63833006":"#import packages\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nfrom plotly import tools, offline\n%matplotlib inline ","4d656290":"#Read in data\n#Only reading in 1 week to save time\/space\nNGS_df = pd.read_csv('..\/input\/NGS-2017-reg-wk1-6.csv')","d5155868":"def get_hang_time(ngs_df, start_event='punt', *stop_events):\n    punt_event = ngs_df.loc[ngs_df.Event==start_event] \\\n        .groupby(['Season_Year', 'GameKey','PlayID'], as_index = False)['Time'].min()\n    punt_event.rename(columns = {'Time':'punt_time'}, inplace=True)\n    punt_event['punt_time'] = pd.to_datetime(punt_event['punt_time'],\\\n                                             format='%Y-%m-%d %H:%M:%S.%f')\n    \n    receiving_event = ngs_df.loc[ngs_df.Event.isin(stop_events)] \\\n        .groupby(['Season_Year', 'GameKey','PlayID'], as_index = False)['Time'].min()\n    receiving_event.rename(columns = {'Time':'receiving_time'}, inplace=True)\n    receiving_event['receiving_time'] = pd.to_datetime(receiving_event['receiving_time'],\\\n                                             format='%Y-%m-%d %H:%M:%S.%f')\n    \n    punt_df = punt_event.merge(receiving_event, how='inner', on = ['Season_Year','GameKey','PlayID']) \\\n                .reset_index(drop=True)\n    \n    punt_df['hang_time'] = (punt_df['receiving_time'] - punt_df['punt_time']).dt.total_seconds()\n    \n    return punt_df","5fecb2e7":"punt_df = get_hang_time(NGS_df, 'punt', 'punt_received', 'fair_catch')","b44c15bd":"#Show histogram of the hang_time column\npunt_df.hang_time.hist();","76b3082f":"print('The average hang time of a punt is {} seconds' .format(round(punt_df['hang_time'].mean(), 1)))","2c9144bd":"print('The median hang time of a punt is {} seconds' .format(round(punt_df['hang_time'].median(), 1)))","85260832":"print(str(round(len(punt_df.loc[punt_df.hang_time < 5.5]) \/ len(punt_df) * 100, 1)) \\\n    + '% of hang times are less than 5 1\/2 seconds')","00d5b58a":"#### Creating a function to calculate the hang time","9987320f":"#### Call function only looking at plays that had the events with 'punt_received' or 'fair_catch'","4f322107":"#### Some general statistics for hang times","9e13fbb7":"### It will be useful to know how long it takes (in seconds) from the time the punter kicks the football to the time it is received."}}