{"cell_type":{"b8d0d2cc":"code","02119a5d":"code","01500f48":"code","c2a28349":"code","a728bad2":"code","8281fb1d":"code","991035af":"code","45850df6":"code","ff76dfde":"code","6f59da22":"code","0c11f202":"code","8c4b2d80":"code","b95d46af":"code","52bd7021":"code","105bb311":"code","7555433e":"code","97029185":"code","92c0b4e6":"code","a8c57012":"code","b76a9c03":"code","8c8fdd60":"code","abb21b39":"code","2d58a7b3":"code","c829e004":"code","3ff9c371":"code","79c48f30":"code","158c04d7":"markdown","c88c3b9e":"markdown","7596952d":"markdown","8a03c1c2":"markdown","11350622":"markdown","b4c2e0cb":"markdown","f6939ba0":"markdown","1a5e8145":"markdown","eded4fd4":"markdown","2d1b20da":"markdown","3faa5e1a":"markdown","3c743936":"markdown","5ae2ae7a":"markdown","51267c24":"markdown","469bc13a":"markdown","55fa6e50":"markdown","607ba3bb":"markdown","8745c5e2":"markdown","b3640c44":"markdown","49326ffa":"markdown","b126ea6b":"markdown","4b12dc72":"markdown"},"source":{"b8d0d2cc":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","02119a5d":"df = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')","01500f48":"df.head()","c2a28349":"df.shape","a728bad2":"df.info()","8281fb1d":"df.describe()","991035af":"def draw_histograms(df, variables, n_rows, n_cols):\n    fig=plt.figure(figsize=(12,10))\n    for i, var_name in enumerate(variables):\n        ax=fig.add_subplot(n_rows,n_cols,i+1)\n        plt.hist(df[var_name],edgecolor='black')\n        ax.set_title(var_name.upper())\n    fig.tight_layout()\n    plt.show()\n\ndraw_histograms(df, df.columns, 4, 3)","45850df6":"plt.figure(figsize=(5,5))\nsns.countplot(x='quality',data=df, color='blue')\nplt.xlabel('QUALITY')\nplt.ylabel('COUNT')\nplt.show()","ff76dfde":"plt.figure(figsize=(12,12))\n\nfor i,var_name in enumerate(list(df.columns)):\n    plt.subplot(4,3,i+1)\n    sns.kdeplot(data=df[var_name], shade=True)\n    plt.title(var_name.upper())\n    plt.xlabel(None)\n    plt.ylabel(None)\n    \nplt.tight_layout()","6f59da22":"df.skew()[:'alcohol'].plot(kind='bar')\nplt.show()","0c11f202":"plt.figure(figsize=(15,10))\n\nfor i,var_name in enumerate(list(df.columns)):\n    plt.subplot(4,3,i+1)\n    sns.boxplot(x=var_name, data=df)\n    plt.title(var_name.upper())\n    plt.xlabel(None)\n    plt.ylabel(None)\n    \nplt.tight_layout()\nplt.show()","8c4b2d80":"plt.figure(figsize=(12,12))\n\nfor i,var_name in enumerate(list(df.columns)):\n    plt.subplot(4,3,i+1)\n    sns.regplot(x=df[var_name], y=df['quality'])\n    plt.title(var_name.upper())\n    plt.xlabel(None)\n    plt.ylabel(None)\n    \nplt.tight_layout()","b95d46af":"df.corr()","52bd7021":"plt.figure(figsize=(12,8))\nsns.heatmap(data=df.corr(),annot=True,mask=np.triu(np.ones_like(df.corr())))\nplt.show()","105bb311":"plt.figure(figsize=(12,8))\ndf.corr()['quality'][0:-1].plot(kind='bar')\nplt.axhline(y=0,color='black')\nplt.yticks([-0.5,-0.4,-0.3,-0.2,-0.1,0,0.1,0.2,0.3,0.4,0.5])\nplt.show()","7555433e":"r_squared_list = list(df.corr()['quality'][:'alcohol']**2*100)\n\nfrom scipy import stats\npvalue_list=[]\nfor i in list(df.columns)[:-1]:\n    temp = stats.linregress(df[i],df['quality'])\n    pvalue_list.append(temp.pvalue)\n\nrp_df=pd.DataFrame(data={'R squared':r_squared_list,'p value':pvalue_list})\nrp_df.index = list(df.columns)[:-1]\nrp_df","97029185":"from sklearn.metrics import mean_absolute_error\n\ndef get_mae(actual,predicted):\n    return mean_absolute_error(actual,predicted)","92c0b4e6":"from sklearn.model_selection import train_test_split\n\ny = df['quality']\nX=df.drop('quality',axis=1)\n\nX_train,X_valid,y_train,y_valid = train_test_split(X,y,random_state=42)","a8c57012":"from sklearn.linear_model import LinearRegression\n\nmodel_1 = LinearRegression()\nmodel_1.fit(X_train,y_train)\nprint('MAE from Linear Regression is',get_mae(y_valid,model_1.predict(X_valid)))","b76a9c03":"from sklearn.ensemble import RandomForestRegressor\n\nmae_dict = {}\n\nfor i in list(range(100,1001,50)):\n    model_2 = RandomForestRegressor(n_estimators=i,random_state=42)\n    model_2.fit(X_train,y_train)\n    mae_dict[i] = get_mae(y_valid,model_2.predict(X_valid))\n    print('MAE for',i,'estimators is',mae_dict[i])\n\nprint()\nprint()\n\nfor trees,mae in mae_dict.items():\n    if mae == min(list(mae_dict.values())):\n        print('MAE is minumum for',trees,'trees and is',mae)","8c8fdd60":"temp = pd.DataFrame(list(mae_dict.values()))\ntemp.index = list(mae_dict.keys())\ntemp.plot(legend=None,figsize=(12,5))\nplt.show()","abb21b39":"temp.plot(legend=None,figsize=(12,5))\nplt.ylim(0,1)\nplt.show()","2d58a7b3":"from xgboost import XGBRegressor\n\nmae_dict = {}\n\nfor i in list(range(100,1651,50)):\n    model_3 = XGBRegressor(n_estimators=i,learning_rate=0.05)\n    model_3.fit(X_train, y_train)\n    mae_dict[i] = get_mae(y_valid,model_3.predict(X_valid))\n    print('MAE for',i,'estimators is',mae_dict[i])\n\nprint()\nprint()\n\nfor estms,mae in mae_dict.items():\n    if mae == min(list(mae_dict.values())):\n        print('MAE is minumum for',estms,'estimators and is',mae)","c829e004":"temp = pd.DataFrame(list(mae_dict.values()))\ntemp.index = list(mae_dict.keys())\ntemp.plot(legend=None,figsize=(12,5))\nplt.show()","3ff9c371":"temp.plot(legend=None,figsize=(12,5))\nplt.ylim(0,1)\nplt.show()","79c48f30":"from sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import cross_val_score\n\npipeline_1 = Pipeline(steps=[('model', RandomForestRegressor(n_estimators=250, random_state=42))])\n\npipeline_2 = Pipeline(steps=[('model', XGBRegressor(n_estimators=1500,learning_rate=0.05))])\n\nscores_1 = -1 * cross_val_score(pipeline_1, X, y,\n                              cv=5,\n                              scoring='neg_mean_absolute_error')\n\nscores_2 = -1 * cross_val_score(pipeline_2, X, y,\n                              cv=5,\n                              scoring='neg_mean_absolute_error')\n\nprint(\"Average MAE scores from Random Forest Regressor\", scores_1.mean())\nprint(\"Average MAE scores from XGB Regressor\", scores_2.mean())","158c04d7":"There are no null values and all columns are of the numerical type (float64). No categorical data to deal with!","c88c3b9e":"### Importing the datset and looking at basic information by summarizing it","7596952d":"Next splitting the dataframe in training and validation sets","8a03c1c2":"### This notebook uses the [Wine Quality Dataset](https:\/\/www.kaggle.com\/uciml\/red-wine-quality-cortez-et-al-2009) taken from the UCI Machine Learning Repository and may be found [here](https:\/\/archive.ics.uci.edu\/ml\/datasets\/wine+quality). Here, the aim is to see general relations among different properties which determine the rating of the quality of the wine.  ","11350622":"It is clear that the classes are imbalanced. There are way more number of quality ratings that are either 5 or 6 than there are any other values, even combined.","b4c2e0cb":"### Next, Random Forest Regressor","f6939ba0":"Once again seeing it on a 0 to 1 scale","1a5e8145":"Following are the properties in the dataset-\n\n1. **Fixed acidity** - Most acids involved with wine or fixed or nonvolatile (do not evaporate readily)\n\n2. **Volatile acidity** - The amount of acetic acid in wine, which at too high of levels can lead to an unpleasant, vinegar taste\n\n3. **Citric acid** - Found in small quantities, citric acid can add 'freshness' and flavor to wines\n\n4. **Residual sugar** - The amount of sugar remaining after fermentation stops, it's rare to find wines with less than 1 gram\/liter and wines with greater than 45 grams\/liter are considered sweet\n\n5. **Chlorides** - The amount of salt in the wine\n\n6. **Free sulfur dioxide** - The free form of SO2 exists in equilibrium between molecular SO2 (as a dissolved gas) and bisulfite ion; it prevents microbial growth and the oxidation of wine\n\n7. **Total sulfur dioxide** - Amount of free and bound forms of S02; in low concentrations, SO2 is mostly undetectable in wine, but at free SO2 concentrations over 50 ppm, SO2 becomes evident in the nose and taste of wine\n\n8. **Density** - The density of water is close to that of water depending on the percent alcohol and sugar content\n\n9. **pH** - Describes how acidic or basic a wine is on a scale from 0 (very acidic) to 14 (very basic); most wines are between 3-4 on the pH scale\n\n10. **Sulphates** - A wine additive which can contribute to sulfur dioxide gas (S02) levels, wich acts as an antimicrobial and antioxidant\n\n11. **Alcohol** - The percent alcohol content of the wine\n\nThe ouput variable is the quality, with a value between 0 and 10 ","eded4fd4":"### Third, extreme gradient boosting","2d1b20da":"2 features that stand out are **alcohol** with somewhat high positive correlation and **volatile acidity** with somewhat strong negative correlation. This can further be seen in the scatter plots with lines of regression.\n\n**Volatile acidity** having a relatively high negative correlation makes sense since too much of it causes an unpleasant taste, as is clear from the decription. Unpleasent taste means lower quality, hene the negative correlation.\n\nHigher **alcohol** content leads a wine to have a richer texture, hence the higher quality rating and the relatively high positive correlation.","3faa5e1a":"### Importing the required libraries","3c743936":"#### When evaluating models using the initially divided datasets, XGBRegressor does better but when using cross validation, Random Forest Regressor performs overall relatively better.","5ae2ae7a":"### That's all for now folks!","51267c24":"### Exploratory analysis through visualisations","469bc13a":"### First up, linear regression","55fa6e50":"### Since the dataset isn't very large, using cross validation is a better way to evaluate models\n### Using the number of estimators that gave the least mean absolute error earlier ","607ba3bb":"After 1500 estimators, the MAE does not improve anymore.\n\nAgain plotting the mean absolute errors","8745c5e2":"### Next, using regression models to predict the score given the quality rating given the other factors\n\nFirst defining a function to return mean absolute error between predictions and actual values to compare performace of different values.","b3640c44":"Plotting the mean absolute errors","49326ffa":"Residual sugar and chlorides are the most positively skewed set of values","b126ea6b":"These deviations are very small and a perfect example of how scale is important is drawing conclusions. Here is how the graph looks when the y axis is scaled for the values to be between 0 and 1","4b12dc72":"Only **15.253538%** of the variation in quality is explained by **volatile acidity** and only **22.673437%** of the variation in quality is explained by **alcohol**. They both have sufficiently low p-values to make them statistically significant."}}