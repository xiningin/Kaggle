{"cell_type":{"1e6cf29d":"code","cc4f62fd":"code","e5d14cac":"code","5ef0203d":"markdown","7c27880b":"markdown"},"source":{"1e6cf29d":"import numpy as np\nimport pandas as pd\nimport os\nwellbeing = pd.read_csv('\/kaggle\/input\/lifestyle-and-wellbeing-data\/Wellbeing_and_lifestyle_data.csv')\nwellbeing = wellbeing.drop('Timestamp', axis=1)\nwellbeing = wellbeing.drop([10005]) # This entry contained errors that needed to be corrected or erased\nage_dict = {'Less than 20' : 1, '21 to 35' : 2, '36 to 50' : 3, '51 or more' : 4}\nwellbeing['AGE'] = pd.Series([age_dict[x] for x in wellbeing.AGE], index=wellbeing.index)\ngender_dict = {'Female' : 1, 'Male' : 0}\nwellbeing['GENDER'] = pd.Series([gender_dict[x] for x in wellbeing.GENDER], index=wellbeing.index)\nwellbeing['DAILY_STRESS'] = wellbeing['DAILY_STRESS'].astype(int)\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\nX = wellbeing.drop(['DAILY_STRESS', 'ACHIEVEMENT'], axis=1)\ny = wellbeing[['DAILY_STRESS', 'ACHIEVEMENT']]\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 1, test_size=.2)\nmy_model = RandomForestRegressor(n_estimators=100).fit(train_X, train_y)\n_ = X.columns","cc4f62fd":"df_pred = {}\nprint('For each of the following enter an integer value representing your answer to the survey questions')\nfor col in _:\n    print('\\n',col, end='\\t')\n    df_pred[col] = [int(input())]\n\ndf = pd.DataFrame.from_dict(df_pred, orient='columns')","e5d14cac":"_ = my_model.predict(df)\nprint('Prediction of Daily Stress: ', float(_[:,0]), \"\\t\\tPrediction for Achievement: \", float(_[:,1]))","5ef0203d":"# Brief feature Descriptions\n* Fruit and Veggies: number of servings per day, enter 5 if 5 or more\n* Places Visited: 1 to 10\n* Core Circle: 1 to 10\n* Supporting Others: 1 to 10\n* Social Network: 1 to 10\n* Donations: 1 to 5\n* BMI Range: 1 = below 25, 2 = above 25\n* ToDo Completed: 1 to 10\n* Flow: 1 to 10\n* Daily Steps: 1 to 10 (Thousands)\n* Live Vision: 1 to 10\n* Sleep Hours: 1 to 10\n* Lost Vacation: 1 to 10\n* Daily Shouting: 1 to 10\n* Sufficient Income: 1 = insufficient, 2 = sufficient\n* Personal Awards: 1 to 10\n* Time For Passion: 1 to 10\n* Daily Meditation: 1 to 10\n* Age: 1 = 'Less than 20', 2 = '21 to 35', 3 = '36 to 50', 4 = '51 or more'\n* Gender: 0 is male, 1 is female","7c27880b":"# Stress and Achievement ML predictor\n\nThis notebook is intended for making predictions based on past survey responses using a random forest. To try out the model simply fork this notebook and hit run all, the input prompts will ask you the questions and feed your answers into the random forest for assessment. \n\nFor the full details and inspiration for this notebook see the full notebook: https:\/\/www.kaggle.com\/schorsi\/stress-and-achievement-ml-totw for details on each of the survey questions, the questions can be found here: http:\/\/www.authentic-happiness.com\/your-life-satisfaction-score"}}