{"cell_type":{"0120e7d2":"code","17f1a7b8":"code","2d433c33":"code","a28d825a":"code","65b8f174":"code","2c11819c":"code","c7737478":"code","7029c387":"code","adb5887f":"code","e530d593":"code","3bfe8df4":"code","acef3ea0":"code","613d5020":"markdown","3c21b30e":"markdown","212087c2":"markdown","850ab3c9":"markdown","b310f217":"markdown","3b1d319e":"markdown","448517d3":"markdown","657eb2a0":"markdown","f3cf34af":"markdown"},"source":{"0120e7d2":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# plotly\n# import plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n#Makre sure files are in right place\ndata_dc = pd.read_csv('..\/input\/DailyCustomers.csv')\ndata_sm = pd.read_csv('..\/input\/StoreMarketing.csv')\ndata_ov = pd.read_csv('..\/input\/StoreOverheads.csv')\ndata_sz = pd.read_csv('..\/input\/StoreSize.csv')\ndata_st = pd.read_csv('..\/input\/StoreStaff.csv')","17f1a7b8":"data_dc.info()\ndata_sm.info()\ndata_ov.info()\ndata_sz.info()\ndata_st.info()","2d433c33":"data_dc.head()","a28d825a":"# prepare data frame\ndf = data_dc.iloc[:100,:]\n\ndata = []\n\n# Creating trace\nfor col in data_dc.columns: \n    if(col != 'Date'):\n        exec('yax = df.'+col)\n        data.append(go.Scatter(x = df.Date, y = yax, mode = \"lines+markers\", name = col))\n\nlayout = dict(title = 'Top 100 Daily Customers Visit', xaxis= dict(title= 'Customer Visit',ticklen= 5,zeroline= False))\nfig = dict(data = data, layout = layout)\niplot(fig)","65b8f174":"fig = ff.create_distplot([data_dc.QSN],['QSN'],bin_size=5)\niplot(fig, filename='Basic Distplot for QSN')","2c11819c":"hist_data = []\ngroup_labels = []\nfor col in data_dc.columns:\n    if(col != 'Date'):\n        exec('zax = data_dc.'+col)\n        hist_data.append(zax)\n        group_labels.append(col)\n        \nfig = ff.create_distplot(hist_data, group_labels, bin_size=5)\niplot(fig, filename='Customer Frequency in different Company')","c7737478":"dv = data_dc.drop(columns=\"Date\")\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(background_color='white', width=512, height=384).generate(\" \".join(dv))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","7029c387":"# create trace\ndata_ov = data_ov.rename(columns={'Overheads (\u00a3)':'Overheads'})\ndata = []\ndata.append(go.Bar(x = data_ov.Id, y = data_ov.Overheads, name = \"Overheads\", text = 'Overhead Cost'))\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","adb5887f":"# create trace\ndata_sm = data_sm.rename(columns={'Marketing (\u00a3)':'Marketing'})\ndata = []\ndata.append(go.Bar(x = data_sm.Id, y = data_sm.Marketing, name = \"Marketing\", marker = dict(color = 'rgba(255, 105, 24, 1)'), text = 'Marketing Cost'))\nlayout = go.Layout(barmode = \"relative\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","e530d593":"# prepare data\ndataframe = data_dc\ndataa = dataframe.loc[:,[\"CFG\",\"MAJ\", \"SGA\"]]\ndataa[\"index\"] = np.arange(1,len(dataa)+1)\n# scatter matrix\nfig = ff.create_scatterplotmatrix(dataa, diag='box', index='index',colormap='Portland',\n                                  colormap_type='cat',\n                                  height=700, width=700)\niplot(fig)","3bfe8df4":"data_sz.sort_values(by=['Id'], inplace=True)\ndata_st.sort_values(by=['Id'], inplace=True)\nframes = [data_sz, data_st]\ndata_szst = pd.merge(data_sz,\n                 data_st[['Id', 'Staff']],\n                 on='Id')\ndata_szst = data_szst.rename(columns={'Size (msq)':'Size'})\ndata_szst.head()","acef3ea0":"data = []\n\n# Creating trace\ndata.append(go.Scatter(x = data_szst.Size, y = data_szst.Staff, mode = \"markers\", marker = dict(size = data_szst.Staff*2), text= data_szst.Id))\nlayout = dict(hovermode= 'closest', title = 'Sapce of store vs staff number for all companies',\n              xaxis= dict(title= 'Size per square Metter',ticklen= 5,zeroline= False, showgrid=False, showline=False),\n              yaxis= dict(title= 'No of Staff',ticklen= 5,zeroline= False, showgrid=False, showline=False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","613d5020":"Import Library and Modules, read csv files","3c21b30e":"Show headers of all data which are loaded.","212087c2":"Most adver effected company","850ab3c9":"Marge data into a single dataframe","b310f217":"Date wise customer analysis","3b1d319e":"Marketing Cost Analysis","448517d3":"Most customer rich comnpany","657eb2a0":"Hoverhead analysis","f3cf34af":"Differnece of CFG, MAJ and SGA"}}