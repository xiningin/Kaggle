{"cell_type":{"b3d73080":"code","32f95ce1":"code","6797a6a1":"code","3eb6fa4a":"code","8b2f501c":"code","2fef3037":"code","dfbf428c":"code","1ee4e710":"code","9df2b4a0":"markdown","6f489292":"markdown","8bd8bd70":"markdown","a33c1022":"markdown","2c865567":"markdown","2169091f":"markdown","d061accb":"markdown"},"source":{"b3d73080":"# Importing required libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# ML Models\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import SGDClassifier\n# ML Algorithms\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score","32f95ce1":"# Load input data\ntrain_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","6797a6a1":"# Initial EDA\nprint(train_data.head())\nprint(train_data.describe())\nprint(np.shape(train_data))\nprint(np.shape(test_data))\nprint(train_data.columns.values)\nprint(train_data['SibSp'].value_counts())\nprint(train_data.info())\nprint(test_data.info())\nprint(\"Training data null values:\\n\", train_data.isnull().sum())\nprint(\"Testing data null values:\\n\", test_data.isnull().sum())\n\n# Plot EDA\ntrain_data[\"FareSquare\"] = train_data[\"Fare\"] ** 2\ntrain_data[\"FareLog\"] = np.log(train_data[train_data[\"Fare\"] > 0][\"Fare\"])\nsns.heatmap(train_data.corr(), square = True, cmap=\"YlGnBu\")","3eb6fa4a":"# Cleaning data ... a little bit\ntrain_data = train_data.drop('Name', axis = 1)\ntrain_data = train_data.drop('Cabin', axis = 1)\ntrain_data = train_data.drop('Parch', axis = 1)\ntrain_data_dropnan = train_data.dropna()\ntest_data_dropnan = test_data.dropna()\ntrain_data.fillna(train_data['Age'].mean(), axis = 1, inplace = True)\ntest_data.fillna(train_data['Age'].mean(), axis = 1, inplace = True)","8b2f501c":"# Formatting data\ny = train_data['Survived']\ntargets = ['Pclass', 'Sex', 'Age', 'PassengerId']\nX = pd.get_dummies(train_data[targets])\nX_test = pd.get_dummies(train_data[targets])","2fef3037":"# Creating models\nmodelLRG = LinearRegression()\nmodelKNN = KNeighborsClassifier(n_neighbors = 10)\nmodelDTR = DecisionTreeClassifier()\nmodelSGD = SGDClassifier()\n\nmodelLRG.fit(X, y)\npredictLRG = modelLRG.predict(X_test)\n\nmodelKNN.fit(X, y)\npredictKNN = modelKNN.predict(X_test)\n\nmodelDTR.fit(X, y)\npredictDTR = modelDTR.predict(X_test)\n\nmodelSGD.fit(X, y)\npredictSGD = modelSGD.predict(X_test)","dfbf428c":"# Evaluating models\ncv1 = cross_val_score(modelLRG, X, y, cv=10)\ncv2 = cross_val_score(modelKNN, X, y, cv=10)\ncv3 = cross_val_score(modelDTR, X, y, cv=10)\ncv4 = cross_val_score(modelSGD, X, y, cv=10)\n\naccuracyLRG = cv1.mean()\naccuracyKNN = cv2.mean()\naccuracyDTR = cv3.mean()\naccuracySGD = cv4.mean()\n\nprint('LRG model score is ', accuracyLRG)\nprint('KNN model score is ', accuracyKNN)\nprint('DTR model score is ', accuracyDTR)\nprint('SGD model score is ', accuracySGD)","1ee4e710":"# Writing predictions to a separate CSV file\ntest_data = pd.get_dummies(test_data[targets])\n\nprediction = modelDTR.predict(test_data)\noutput = pd.DataFrame({'PassengerId': test_data['PassengerId'], 'Survived': prediction})\noutput.to_csv('submission.csv', index=False)\n\nprint(\"Submission generated.\")","9df2b4a0":"### Section : Exploratory Data Analysis (EDA)","6f489292":"### Section : Building the Models\n* As according to the assignment, I built and compared the 4 models we were limited to: Linear regression, KNN, Decision Tree, and SGD Classifier.","8bd8bd70":"### Section : Testing the Models","a33c1022":"### Section : Loading the Data","2c865567":"* From the EDA, we can note that Pclass seems to have the most significant correlation in terms of survival rate. Sex and Age also had some correlation. PassengerId is included as a feature to have somewhere to tie the prediction results to later. ","2169091f":"# CAP4611 Titanic HW0 Assignment\n## Author: Taniya Shaffer","d061accb":"### Section : Generating Submission Data with Best Model\n* Decision Tree had the best accuracy among the four."}}