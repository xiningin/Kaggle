{"cell_type":{"c0211800":"code","b16ec612":"code","05f289d2":"code","255f6a20":"code","78947379":"code","b2562830":"code","fc9f8465":"code","104c39cb":"code","2e48f712":"code","2c77337f":"code","031692de":"code","21062e0e":"code","bc8156b9":"code","5a2b9d7d":"code","a6de4572":"code","7d656a13":"code","d6c88bd0":"code","1b14513a":"code","48736d70":"code","85eba194":"code","cf86462d":"code","3ba8364d":"code","69f8a72a":"code","e8430332":"code","fb607aac":"code","d6814935":"code","f49119a6":"code","895a4eb7":"code","f0861c9e":"code","5dfec2f7":"code","2b7b7329":"code","6dff92e5":"code","898be60e":"markdown","e86228bb":"markdown","9f408777":"markdown","b1888777":"markdown","206d7d20":"markdown","59fe73d8":"markdown","a02b9a7d":"markdown","5cd73da8":"markdown","15676f0c":"markdown","c28687ee":"markdown","968d70a1":"markdown","bb28141a":"markdown","ffeb6047":"markdown","902d74ab":"markdown","a0deb6d9":"markdown","ab29fd08":"markdown","1ff07738":"markdown","5ef2f46d":"markdown","5b0d7236":"markdown","d00943cd":"markdown","ba175cc8":"markdown","2daac74d":"markdown"},"source":{"c0211800":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","b16ec612":"data = pd.read_csv('..\/input\/Iris.csv')","05f289d2":"data.head()","255f6a20":"del data['Id']","78947379":"data.head()","b2562830":"data.describe()","fc9f8465":"data.info()","104c39cb":"data.isnull().sum()","2e48f712":"replace_map = {'Species': {'Iris-setosa': 1, 'Iris-versicolor': 2, 'Iris-verginica': 3}}\nlabels = data['Species'].astype('category').cat.categories.tolist()\nreplace_map_comp = {'Species' : {k: v for k,v in zip(labels,list(range(1,len(labels)+1)))}}\ndata_new = data.copy()\n# Copy of original data, so that it must not get affected by modification\ndata_new.replace(replace_map_comp, inplace=True)","2c77337f":"print(replace_map_comp)\n# This is the encoding of categorical variable","031692de":"data_new.head()","21062e0e":"data_new.shape","bc8156b9":"plt.scatter(data_new['Species'],data_new['SepalLengthCm'])\nplt.xlabel('Species')\nplt.ylabel('SepalLengthCm')\nplt.title('Scatter Plot')\nplt.show","5a2b9d7d":"plt.scatter(data_new['Species'],data_new['SepalWidthCm'])\nplt.xlabel('Species')\nplt.ylabel('SepalWidthCm')\nplt.title('Scatter Plot')\nplt.show","a6de4572":"plt.scatter(data_new['Species'],data_new['PetalLengthCm'])\nplt.xlabel('Species')\nplt.ylabel('PetalLengthCm')\nplt.title('Scatter Plot')\nplt.show","7d656a13":"plt.scatter(data_new['Species'],data_new['PetalWidthCm'])\nplt.xlabel('Species')\nplt.ylabel('PetalWidthCm')\nplt.title('Scatter Plot')\nplt.show","d6c88bd0":"f,ax = plt.subplots(figsize=(8,8))\nsns.heatmap(data_new.corr(),annot=True,cmap='magma')\n# all variables are highly correlated to species, whether +ve or -ve.","1b14513a":"sns.pairplot(data_new, hue=\"Species\", size=3)\n# sns.pairplot(iris.drop(\"Id\", axis=1), hue=\"Species\", size=3, diag_kind=\"kde\")\n# Used for comparing two variables at a time\n# each will have a plot against others as well as itself","48736d70":"sns.FacetGrid(data, hue=\"Species\", size=6).map(sns.kdeplot, \"PetalLengthCm\").add_legend()","85eba194":"sns.FacetGrid(data, hue=\"Species\", size=6).map(sns.kdeplot, \"PetalWidthCm\").add_legend()","cf86462d":"sns.FacetGrid(data, hue=\"Species\", size=6).map(sns.kdeplot, \"SepalWidthCm\").add_legend()","3ba8364d":"sns.FacetGrid(data, hue=\"Species\", size=6).map(sns.kdeplot, \"SepalLengthCm\").add_legend()","69f8a72a":"X = data_new.iloc[:,:4].values\ny = data_new.iloc[:,-1].values\n# data into Input and Output features","e8430332":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,shuffle=True,random_state=100)\n# Splitting into Train and Test sets","fb607aac":"from sklearn.svm import SVC\nclassifier = SVC()\nclassifier.fit(X_train,y_train)","d6814935":"y_pred = classifier.predict(X_test)","f49119a6":"from sklearn.metrics import confusion_matrix,accuracy_score,classification_report\nprint('Confusion Matrix: ',confusion_matrix(y_test,y_pred))\nprint()\nprint('Accuracy Score: ',accuracy_score(y_test,y_pred))\nprint()\nprint(classification_report(y_test,y_pred))","895a4eb7":"from sklearn.utils import shuffle\nX,y = shuffle(X,y,random_state=0)","f0861c9e":"param_grid = [{'C': [0.1, 0.5, 1, 5, 10, 50, 100, 500, 1000], 'gamma': [1,0.1,0.01,0.001,0.0001], 'kernel': ['rbf']},\n              {'C': [0.1, 0.5, 1, 5, 10, 50, 100, 500, 1000], 'kernel': ['linear']}]\n# param_grid = {'C': [0.1, 0.5, 1, 5, 10, 50, 100, 500, 1000], 'gamma': ['auto'], 'kernel': ['rbf']}","5dfec2f7":"from sklearn.model_selection import GridSearchCV\ngrid=GridSearchCV(estimator=SVC(), param_grid=param_grid, scoring='accuracy',cv=10, verbose=1, refit=True,n_jobs=-1)\ngrid_search = grid.fit(X, y)","2b7b7329":"grid_search.best_params_","6dff92e5":"grid_search.best_score_","898be60e":"**<font size=\"3\">Heatmap--> Correlation between features<\/font>**","e86228bb":"**<font size=\"3\">Gridsearch CV<\/font>**","9f408777":"<font size=\"3\">Best parameter set<\/font>","b1888777":"<font size=\"3\">Importing Libraries<\/font>","206d7d20":"**<font size=\"3\">Pairplot<\/font>**","59fe73d8":"**<font size=\"2\">Replacing the Categorical Variable with numbers!<\/font>**","a02b9a7d":"**<font size=\"2\">Total number of Null Values<\/font>**","5cd73da8":"**<font size=\"3\">Facetgrid<\/font>**","15676f0c":"**<font size=\"3\">Machine Learning<\/font>**","c28687ee":"<font size=\"2\">Different parameters of SVM tested<\/font>","968d70a1":"**<font size=\"2\">New Data, modified one...<\/font>**","bb28141a":"**<font size=\"4\">Welcome to the EDA and Prediction world!<\/font>**","ffeb6047":"**<font size=\"3\">Evaluation of Model<\/font>**","902d74ab":"<font size=\"3\">Statistical Analysis of Data<\/font>","a0deb6d9":"<font size=\"3\">Reading Data<\/font>","ab29fd08":"**As there is no need for 'ID' column of the dataset, we will delete it!**","1ff07738":"**<font size=\"3\">Scatter Plots<\/font>**","5ef2f46d":"**<font size=\"3\">Support Vector Machines<\/font>**","5b0d7236":"<font size=\"2\">Shuffling of data<\/font>","d00943cd":"**<font size=\"5\">Completed! Thanks.<\/font>**","ba175cc8":"<font size=\"3\">Please upvote the Kernel if it helped you.<\/font>","2daac74d":"**<font size=\"2\">Shape(rows,columns)<\/font>**"}}