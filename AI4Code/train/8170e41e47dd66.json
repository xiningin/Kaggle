{"cell_type":{"ee86ba01":"code","9e159fd9":"code","f3650285":"code","1b212501":"code","4fa90d67":"code","41f296b2":"code","96fcbcaf":"code","5f89e54a":"code","bafbd4ea":"code","f904d9bd":"code","d74ec815":"code","10f52ca7":"code","186db020":"code","2eef3695":"code","f5ba6e82":"markdown","f0227f22":"markdown","0eafb2c6":"markdown"},"source":{"ee86ba01":"%cd \/content\/drive\/MyDrive\/2021_2_AI\/Term_Project","9e159fd9":"# \ub370\uc774\ud130 \ud504\ub808\uc784 \ud615\ud0dc\ub85c \ub370\uc774\ud130 \uc77d\uae30\nimport pandas as pd\npath = '\/content\/drive\/MyDrive\/2021_2_AI\/Term_Project\/water.csv'\ndata = pd.DataFrame(pd.read_csv(path, encoding='CP949'))\n\n# '\uc54c\ub8e8\ubbf8\ub284': '2019-0' -> '\uc774\ucc9c\uc2ed\uad6c\ub144-\uacf5'\ndata['\uc54c\ub8e8\ubbf8\ub284'] = data['\uc54c\ub8e8\ubbf8\ub284'].replace('2019-0', '\uc774\ucc9c\uc2ed\uad6c\ub144-\uacf5')\n\n\n## feature \uc81c\uac70\n# unique == 1\ndata.drop(['\ubca4\uc820','\uc5d0\ud2f8\ubca4\uc820'], axis=1, inplace=True)\n# \ucd5c\uc885\ud310\uc815\uacb0\uacfc\uc640 \uc9c1\uacb0\ndata.drop(['\uc18c\uc7ac\uc9c0\ub3c4\ub85c\uba85\uc8fc\uc18c','\ucd1d\ub300\uc7a5\uade0\uad70','\ub300\uc7a5\uade0','\ubd84\uc6d0\uc131\ub300\uc7a5\uade0\uad70'], axis=1, inplace=True)\n# \uc5c6\uc74c\/\uc801\ud569 -> \ubb34\uc758\ubbf8\ndata.drop(['\ub0c4\uc0c8','\ub9db'], axis=1, inplace=True)\n\n\n## '\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4','\uc9c8\uc0b0\uc131\uc9c8\uc18c' \uc2e4\uc218\ud654\ub97c \uc704\ud55c \uc804\ucc98\ub9ac\n\ndata['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4'] = data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4'].fillna(0.0)\n# data['\uc9c8\uc0b0\uc131\uc9c8\uc18c'].unique()\ndata['\uc9c8\uc0b0\uc131\uc9c8\uc18c'] = data['\uc9c8\uc0b0\uc131\uc9c8\uc18c'].replace('\ubc29\ubb38\uc811\uc218', 0.0)\ndata['\uc9c8\uc0b0\uc131\uc9c8\uc18c'] = data['\uc9c8\uc0b0\uc131\uc9c8\uc18c'].replace('\ud640\uc9dd\uc81c\uc6b4\uc601', 0.0)\ndata['\uc9c8\uc0b0\uc131\uc9c8\uc18c'] = data['\uc9c8\uc0b0\uc131\uc9c8\uc18c'].replace('20+3+1', 0.0)\ndata['\uc9c8\uc0b0\uc131\uc9c8\uc18c'] = data['\uc9c8\uc0b0\uc131\uc9c8\uc18c'].replace('36.663', 0.0)\ndata['\uc9c8\uc0b0\uc131\uc9c8\uc18c'] = data['\uc9c8\uc0b0\uc131\uc9c8\uc18c'].replace('36.662', 0.0)\n\n# '\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4','\uc9c8\uc0b0\uc131\uc9c8\uc18c','\uc794\ub958\uc5fc\uc18c' \uc804\ucc98\ub9ac\ndata['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4'] = data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4'].astype('float64')\ndata['\uc9c8\uc0b0\uc131\uc9c8\uc18c'] = data['\uc9c8\uc0b0\uc131\uc9c8\uc18c'].astype('float64')\ndata['\uc794\ub958\uc5fc\uc18c'] = data['\uc794\ub958\uc5fc\uc18c'].astype('float64')","f3650285":"## \uad6c\uac04 \ubcc4 \ubd84\ub9ac\n'''\n# \uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4: 25\/50\/\n# \uc9c8\uc0b0\uc131\uc9c8\uc18c: 1\/2\/\n# \uc794\ub958\uc5fc\uc18c: 0.5\/0.75\/\n'''\n\n## \uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4\ndata['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(<=25)'] = data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4']\ndata.loc[data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(<=25)']>25, '\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(<=25)'] = '-'\n\ndata['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>25)'] = data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4']\ndata.loc[data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>25)']<=25, '\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>25)'] = '-'\n\ndata['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>50)'] = data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4']\ndata.loc[data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>50)']<=50, '\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>50)'] = '-'\n\ndata['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(<=25)'] = data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(<=25)'].replace('-',0.001)\nfor idx, element in enumerate(data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(<=25)']):\n    if element==0.001: \n        data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(<=25)'][idx] = '-'\n    elif element==0.0:\n        data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(<=25)'][idx] = '?'\n\ndata['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>25)'] = data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>25)'].replace('-',0.001)\nfor idx, element in enumerate(data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>25)']):\n    if element==0.001: \n        data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>25)'][idx] = '-'\n    elif element>25 and element<=50:\n        data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>25)'][idx] = '?'\n\ndata['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>50)'] = data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>50)'].replace('-',0.001)\nfor idx, element in enumerate(data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>50)']):\n    if element==0.001:  \n        data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>50)'][idx] = '-'\n    elif element>50 and element<=75:\n        data['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4(>50)'][idx] = '?'\n\n# \uae30\uc874 '\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4' \uc81c\uac70\ndata.drop(['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4'], axis=1, inplace=True)","1b212501":"## \uc9c8\uc0b0\uc131\uc9c8\uc18c\ndata['\uc9c8\uc0b0\uc131\uc9c8\uc18c(<=1.0)'] = data['\uc9c8\uc0b0\uc131\uc9c8\uc18c']\ndata.loc[data['\uc9c8\uc0b0\uc131\uc9c8\uc18c(<=1.0)']>1.0, '\uc9c8\uc0b0\uc131\uc9c8\uc18c(<=1.0)'] = '-'\n\ndata['\uc9c8\uc0b0\uc131\uc9c8\uc18c(<=2.0)'] = data['\uc9c8\uc0b0\uc131\uc9c8\uc18c']\ndata.loc[data['\uc9c8\uc0b0\uc131\uc9c8\uc18c(<=2.0)']>2.0, '\uc9c8\uc0b0\uc131\uc9c8\uc18c(<=2.0)'] = '-'\n\ndata['\uc9c8\uc0b0\uc131\uc9c8\uc18c(>2.0)'] = data['\uc9c8\uc0b0\uc131\uc9c8\uc18c']\ndata.loc[data['\uc9c8\uc0b0\uc131\uc9c8\uc18c(>2.0)']<=2.0, '\uc9c8\uc0b0\uc131\uc9c8\uc18c(>2.0)'] = '-'\n\ndata['\uc9c8\uc0b0\uc131\uc9c8\uc18c(<=1.0)'] = data['\uc9c8\uc0b0\uc131\uc9c8\uc18c(<=1.0)'].replace('-',0.001)\nfor idx, element in enumerate(data['\uc9c8\uc0b0\uc131\uc9c8\uc18c(<=1.0)']):\n    if element==0.001: \n        data['\uc9c8\uc0b0\uc131\uc9c8\uc18c(<=1.0)'][idx] = '-'\n    elif element==0.0:\n        data['\uc9c8\uc0b0\uc131\uc9c8\uc18c(<=1.0)'][idx] = '?'\n\ndata['\uc9c8\uc0b0\uc131\uc9c8\uc18c(>2.0)'] = data['\uc9c8\uc0b0\uc131\uc9c8\uc18c(>2.0)'].replace('-',0.001)\nfor idx, element in enumerate(data['\uc9c8\uc0b0\uc131\uc9c8\uc18c(>2.0)']):\n    if element==0.001: \n        data['\uc9c8\uc0b0\uc131\uc9c8\uc18c(>2.0)'][idx] = '-'\n    elif element>2.0 and element<=3.0:\n        data['\uc9c8\uc0b0\uc131\uc9c8\uc18c(>2.0)'][idx] = '?'\n\n\n## \uc794\ub958\uc5fc\uc18c\ndata['\uc794\ub958\uc5fc\uc18c(<=0.5)'] = data['\uc794\ub958\uc5fc\uc18c']\ndata.loc[data['\uc794\ub958\uc5fc\uc18c(<=0.5)']>0.5, '\uc794\ub958\uc5fc\uc18c(<=0.5)'] = '-'\n\ndata['\uc794\ub958\uc5fc\uc18c(>0.5)'] = data['\uc794\ub958\uc5fc\uc18c']\ndata.loc[data['\uc794\ub958\uc5fc\uc18c(>0.5)']<=0.5, '\uc794\ub958\uc5fc\uc18c(>0.5)'] = '-'\n\ndata['\uc794\ub958\uc5fc\uc18c(>0.75)'] = data['\uc794\ub958\uc5fc\uc18c']\ndata.loc[data['\uc794\ub958\uc5fc\uc18c(>0.75)']<=0.75, '\uc794\ub958\uc5fc\uc18c(>0.75)'] = '-'\n\ndata['\uc794\ub958\uc5fc\uc18c(<=0.5)'] = data['\uc794\ub958\uc5fc\uc18c(<=0.5)'].replace('-',0.001)\nfor idx, element in enumerate(data['\uc794\ub958\uc5fc\uc18c(<=0.5)']):\n    if element==0.001: \n        data['\uc794\ub958\uc5fc\uc18c(<=0.5)'][idx] = '-'\n    elif element==0.0:\n        data['\uc794\ub958\uc5fc\uc18c(<=0.5)'][idx] = '?'\n\n# \uae30\uc874 '\uc9c8\uc0b0\uc131\uc9c8\uc18c','\uc794\ub958\uc5fc\uc18c' \uc81c\uac70\ndata.drop(['\uc9c8\uc0b0\uc131\uc9c8\uc18c','\uc794\ub958\uc5fc\uc18c'], axis=1, inplace=True)","4fa90d67":"# [\ucd5c\uc885\ud655\uc778]\nfor col in data.columns: \n    print('>>',col)\n    print(data[col].value_counts())","41f296b2":"# split into train, test\nfrom sklearn.model_selection import train_test_split\n\ndata['\ucd5c\uc885\ud310\uc815\uacb0\uacfc'] = data['\ucd5c\uc885\ud310\uc815\uacb0\uacfc'].fillna('0')\ntarget = data['\ucd5c\uc885\ud310\uc815\uacb0\uacfc']\ntrain_df, test_df, _, _ = train_test_split(data, target, test_size=0.5, shuffle=True, stratify=target, random_state=34)\n\n# remove row in test data\nfor element in test_df['\uc77c\ubc18\uc138\uade0'].unique():\n    if element.isnumeric() != True:\n        test_df = test_df[test_df['\uc77c\ubc18\uc138\uade0'] != element]\n\ntest_df = test_df[test_df['\uc54c\ub8e8\ubbf8\ub284'] != '\uc774\ucc9c\uc2ed\uad6c\ub144-\uacf5']\ntest_df = test_df[test_df['\uc2dc\uc548'] != '\uacbd\uc0c1\ubd81\ub3c4 \uc601']\n\n# \ud655\uc778\nprint(train_df.shape)\nprint(test_df.shape)\n\n# \uc778\ub371\uc2a4 \uc7ac\uc124\uc815\nid = [a for a in range(0,1082)]\ntrain_df.index = id\nid = [a for a in range(0,1027)]\ntest_df.index = id\n\n# \uc911\uac04\uace0\uc0ac 3\ubc88 \ubb38\uc81c\ud654\nimport random\nidx = train_df['\ucd5c\uc885\ud310\uc815\uacb0\uacfc'] == '\uc801\ud569'\n\nfor i, value in enumerate(idx):\n    if value==True: \n        train_df['\ucd5c\uc885\ud310\uc815\uacb0\uacfc'][i] = str(random.randint(1,5))\n\nprint(train_df['\ucd5c\uc885\ud310\uc815\uacb0\uacfc'].value_counts())","96fcbcaf":"%cd \/content\/drive\/MyDrive\/2021_2_AI\/Term_Project","5f89e54a":"# x_train_df\ntrain_df.to_csv('train.csv', mode='w', header=True, index=True, encoding='CP949')\n\n# y_test_df\ntest_df['\ucd5c\uc885\ud310\uc815\uacb0\uacfc'] = test_df['\ucd5c\uc885\ud310\uc815\uacb0\uacfc'].replace('\uc801\ud569', '1')\nid = [a for a in range(0,1027)]\nprediction = test_df['\ucd5c\uc885\ud310\uc815\uacb0\uacfc'].values.tolist()\ny_test_df = pd.DataFrame({'id':id,\n                           'prediction':prediction})\ny_test_df.to_csv('y_test.csv', mode='w', header=True, index=False, encoding='CP949')\n\n# x_train_df\ntest_df.drop(['\ucd5c\uc885\ud310\uc815\uacb0\uacfc'], axis=1, inplace=True)\ntest_df.to_csv('x_test.csv', mode='w', header=True, index=True, encoding='CP949')\n","bafbd4ea":"# \ubb34\uc758\ubbf8\ud55c feature\nuseless_list = ['1_1_1-\ud2b8\ub9ac\ud074\ub85c\ub85c\uc5d0\ud0c4','\uc218\uc740','\uc2dc\uc548','\ud06c\ub86c','\ud398\ub2c8\ud2b8\ub85c\ud2f0\uc628','\ud14c\ud2b8\ub77c\ud074\ub85c\ub85c\uc5d0\ud2f8\ub80c',\n               '\ud2b8\ub9ac\ud074\ub85c\ub85c\uc5d0\ud2f8\ub80c','\ub0a9','\uc140\ub808\ub284','\uce74\ub4dc\ubbb4', \n               '\ud398\ub180','\ub2e4\uc774\uc544\uc9c0\ub17c','\ud30c\ub77c\ud2f0\uc628','\uce74\ubc14\ub9b4','\uc0ac\uc5fc\ud654\ud0c4\uc18c']\n# \uc720\uc758\ubbf8\ud55c feature\ncritical_list = ['\uc9c8\uc0b0\uc131\uc9c8\uc18c','\uc794\ub958\uc5fc\uc18c','\ud669\uc0b0\uc774\uc628','\ucd1d\ud2b8\ub9ac\ud560\ub85c\uba54\ud0c4','\ud074\ub85c\ub85c\ud3ec\ub984','\ube0c\ub85c\ubaa8\ub514\ud074\ub85c\ub85c\uba54\ud0c4','\ud560\ub85c\uc544\uc138\ud2f1\uc5d0\uc2dc\ub4dc','\uacfc\ub9dd\uac04\uc0b0\uce7c\ub968\uc18c\ube44\ub7c9']\ncritical_list.append('\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4') # '\uc801\ud569'\uc5d0 \ud070 \uc601\ud5a5\n\n# data.drop(useless_list, axis=1, inplace=True) # 76..\n# data.drop(critical_list, axis=1, inplace=True) # 84 -> 76\n# data.drop(['\uc2ec\ubbf8\uc801\uc601\ud5a5\ubb3c\uc9c8\uacbd\ub3c4'], axis=1, inplace=True) # 97 -> 84 \/\/ \uc9c8\uc0b0\uc131\uc9c8\uc18c(->74) \/\/ \uc794\ub958\uc5fc\uc18c,\ud669\uc0b0\uc774\uc628(->80)","f904d9bd":"# critical features\nfor col in critical_list: \n    print('>>',col)\n    print(data[col].value_counts())","d74ec815":"col = '\uc794\ub958\uc5fc\uc18c'\n# print(data[col].value_counts())\n\nprint(col)\nweight1 = data[col].values\nweight2 = data[data['\ucd5c\uc885\ud310\uc815\uacb0\uacfc'] == 1][col].values\nplt.hist(weight1, alpha=0.3, label='0 + 1', bins=50)\nplt.hist(weight2, alpha=0.3, label='1', bins=50)\nplt.legend()\nplt.show()\nprint()","10f52ca7":"# \ud788\uc2a4\ud1a0\uadf8\ub7a8 \uadf8\ub824\uc11c \ud655\uc778(1)\nimport matplotlib.pyplot as plt\n\nfor col in critical_list:\n\n    print(col)\n    weight1 = data[col].values\n    weight2 = data[data['\ucd5c\uc885\ud310\uc815\uacb0\uacfc'] == 1][col].values\n    plt.hist(weight1, alpha=0.3, label='0 + 1')\n    plt.hist(weight2, alpha=0.3, label='1')\n    plt.legend()\n    plt.show()\n    print()","186db020":"# \ud788\uc2a4\ud1a0\uadf8\ub7a8 \uadf8\ub824\uc11c \ud655\uc778(2)\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nscaler = StandardScaler() \n\nfor col in critical_list:\n\n    weight1 = data[col].values\n    weight1_sc = scaler.fit_transform(weight1.reshape(-1,1))\n    weight2 = data[data['\ucd5c\uc885\ud310\uc815\uacb0\uacfc'] == 1][col].values\n    weight2_sc = scaler.transform(weight2.reshape(-1,1))\n    \n    plt.hist(weight1_sc, alpha=0.3, label='0 + 1')\n    plt.hist(weight2_sc, alpha=0.3, label='1')\n    plt.legend()\n    plt.show()\n    print()","2eef3695":"# float64 \ud0c0\uc785 \uc5f4 \uacb0\uce21\uce58 \ud655\uc778\nfor col in data.columns:\n    if data[col].isnull().sum() != 0:\n        print('>>', col)\n        print(data[col].value_counts())","f5ba6e82":"### [\ud655\uc778 \uc791\uc5c5]","f0227f22":"### \ub370\uc774\ud130 \uc0ac\uc804 \uac00\uacf5","0eafb2c6":"##### .csv \ud30c\uc77c \uc0dd\uc131"}}