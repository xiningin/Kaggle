{"cell_type":{"18022d57":"code","f850c3cf":"code","f67a3221":"code","62aaba12":"code","b2c556d0":"code","58f14fd0":"code","c3d24f2b":"code","eada4699":"code","41a366b0":"code","7ae2eab9":"code","e44fdad0":"code","dbf77b71":"code","65704531":"code","995b17cb":"code","2d41e402":"code","1c34c024":"code","81f0838f":"code","18d47708":"code","144a473b":"code","2979e8a6":"code","f3d4d930":"code","664b882f":"code","0bf288f9":"code","6238a4c1":"code","ff560c52":"code","89ee6ab7":"markdown","f6e57881":"markdown","8a9849f9":"markdown","493c1c79":"markdown","9c485c9f":"markdown","746869a2":"markdown","0b218bd1":"markdown"},"source":{"18022d57":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f850c3cf":"df = pd.read_csv(\"..\/input\/train.csv\")\nprint(df.head())","f67a3221":"y = df['Survived']\nX=df.drop(['Name','Ticket','Survived','PassengerId','Cabin'],axis=1)","62aaba12":"X=pd.get_dummies(X,columns=['Sex','Embarked'])","b2c556d0":"def age_div(x):\n    if x>=0 and x<=8:\n        return 'Infant'\n    elif x>8 and x<=18:\n        return 'Children'\n    elif x>18 and x<=50:\n        return 'Adult'\n    elif x>50:\n        return 'Old'\n    else:\n        return 'NoEntry'\nX['Age_new']=X['Age'].apply(age_div)","58f14fd0":"X=pd.get_dummies(X,columns=['Age_new'])","c3d24f2b":"X.drop(['Age'],axis=1,inplace=True)","eada4699":"X.info()","41a366b0":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30)","7ae2eab9":"from sklearn.linear_model import LogisticRegression","e44fdad0":"clf = LogisticRegression(solver='lbfgs',multi_class='multinomial',max_iter=250)","dbf77b71":"clf.fit(X_train,y_train)","65704531":"y_predict = clf.predict(X_test)","995b17cb":"from sklearn.metrics import accuracy_score","2d41e402":"acc = accuracy_score(y_test, y_predict)","1c34c024":"print(\"The accuracy is \",acc*100, \"%.\")","81f0838f":"df_test = pd.read_csv('..\/input\/test.csv')","18d47708":"X=df_test.drop(['Name','Ticket','PassengerId','Cabin'],axis=1)","144a473b":"def age_div(x):\n    if x>=0 and x<=8:\n        return 'Infant'\n    elif x>8 and x<=18:\n        return 'Children'\n    elif x>18 and x<=50:\n        return 'Adult'\n    elif x>50:\n        return 'Old'\n    else:\n        return 'NoEntry'\nX['Age_new']=X['Age'].apply(age_div)","2979e8a6":"X=pd.get_dummies(X,columns=['Sex','Embarked','Age_new'])","f3d4d930":"X.drop(['Age'],axis=1,inplace=True)","664b882f":"X.info()","0bf288f9":"X=X.fillna(method='ffill')","6238a4c1":"y_pred=clf.predict(X)","ff560c52":"serial = df_test['PassengerId']\ndata = {'PassengerId': df_test['PassengerId'], 'Survived': y_pred}\nsubmission = pd.DataFrame(data)\nsubmission.to_csv('Submission.csv', index=False)\n","89ee6ab7":"> ## Creating age categories","f6e57881":">> ## Train Test Split","8a9849f9":">> ## Predicting Test Set","493c1c79":"> ## Loading Data in python","9c485c9f":"> ## Getting dummy columns","746869a2":"> ## Logistic Regression","0b218bd1":"> ## Dropping unecessary columns"}}