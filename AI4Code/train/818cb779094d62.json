{"cell_type":{"057132fb":"code","754dd5b2":"code","fbee9f6f":"code","010d2a35":"code","f1e7c5ce":"code","3e27d250":"code","c7ee1304":"code","fdc72faf":"code","1289750d":"code","6eafb18e":"code","b4c3d76d":"code","1023b5d2":"code","2d7f1802":"code","1f4915bf":"code","49c7d548":"code","a1503138":"code","ae4b9d40":"code","bb1875e1":"code","bca49a34":"code","1ee972b4":"code","9f84b37a":"code","71c8ceac":"code","1a008c8a":"code","29ff37aa":"code","bd774023":"code","541161a9":"code","e506076b":"code","53c0dc71":"code","f419d226":"code","6c685286":"code","f9b3b7b8":"markdown","3e68d923":"markdown","d5e34f8e":"markdown","288b5c21":"markdown","ce768a10":"markdown"},"source":{"057132fb":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport math\n%matplotlib inline\nfrom IPython.display import display","754dd5b2":"pd.options.display.max_columns = None #To display all columns","fbee9f6f":"house_train = pd.read_csv(\"..\/input\/house-prices-data\/train.csv\")\nhouse_test = pd.read_csv(\"..\/input\/house-prices-data\/test.csv\")\ntest_ids = house_test[\"Id\"]","010d2a35":"house_train.head()","f1e7c5ce":"house_train.shape","3e27d250":"pd.options.display.max_rows = None","c7ee1304":"house_train.isnull().sum() #To view the number null in each column","fdc72faf":"house_train.info()","1289750d":"#I will create a data cleaning function\ndef house_clean(house_train):\n    house_train = house_train.drop(['Alley', 'FireplaceQu', 'PoolQC', 'Fence', 'MiscFeature'], axis=1)\n    \n    columns = ['LotFrontage','MasVnrArea', 'GarageYrBlt']\n    for col in columns:\n        house_train[col].fillna(house_train[col].mean(), inplace=True)\n        \n    other_columns = ['MasVnrType', 'BsmtQual', 'BsmtCond','BsmtExposure', 'BsmtFinType1','BsmtFinType2','Electrical','GarageType',\n                     'GarageFinish','GarageQual','GarageCond']\n    for i in other_columns:\n        house_train[i].fillna('U', inplace=True)\n    \n    \n    \n    return house_train\n\nhouse_train = house_clean(house_train)\nhouse_test = house_clean(house_test)","6eafb18e":"# To confirm that the missing values have been addressed\nhouse_train.isnull().sum()","b4c3d76d":"house_train.info()","1023b5d2":"house_test.isnull().sum() #To see if there are still missing values in the test dataset","2d7f1802":"house_test.info()","1f4915bf":"test_columns = ['BsmtFinSF1','BsmtFinSF2', 'BsmtUnfSF','TotalBsmtSF', 'BsmtFullBath', 'BsmtHalfBath', 'GarageCars', 'GarageArea']\nfor items in test_columns:\n    house_test[items].fillna(house_test[items].mean(), inplace=True)\n        \nother_test_columns = ['MSZoning', 'Utilities', 'Exterior1st','Exterior2nd', 'KitchenQual', 'Functional', 'SaleType']\nfor t in other_test_columns:\n    house_test[t].fillna('U', inplace=True)\n    \nhouse_test.info()\n","49c7d548":"house_test.isnull().sum()","a1503138":"\n\n#def encoder (house_train):\nfrom sklearn import preprocessing\nlab = preprocessing.LabelEncoder()\n    \ncol = [\"MSZoning\", \"Street\", \"LotShape\", \"LandContour\", \"Utilities\", \"LotConfig\", \"LandSlope\", \"Neighborhood\",\n            \"Condition1\", \"Condition2\", \"BldgType\", \"HouseStyle\", \"RoofStyle\", \"RoofMatl\", \"Exterior1st\", \"Exterior2nd\",\n            \"MasVnrType\", \"ExterQual\", \"ExterCond\", \"Foundation\", \"BsmtQual\", \"BsmtCond\", \"BsmtExposure\", \"BsmtFinType1\",\n            \"BsmtFinType2\", \"Heating\", \"HeatingQC\", \"CentralAir\", \"Electrical\", \"KitchenQual\", \"Functional\", \"GarageType\",\n            \"GarageFinish\", \"GarageQual\",\"GarageCond\", \"PavedDrive\", \"SaleType\", \"SaleCondition\"]\n    \nfor k in col:\n    house_train[k] = lab.fit_transform(house_train[k])\n    house_test[k] = lab.fit_transform(house_test[k])\n    print(lab.classes_)\n        \n#house_train = encoder(house_train)\n#house_test = encoder(house_test)\n","ae4b9d40":"house_train.head()","bb1875e1":"house_test.head()","bca49a34":"sd = np.corrcoef(house_test)","1ee972b4":"sd","9f84b37a":"corr = house_train.corr()\ncorr","71c8ceac":"plt.figure(figsize = (10, 8))\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n\nsns.heatmap(corr, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\n\nplt.show()","1a008c8a":"\nfrom sklearn.model_selection import train_test_split\n\ny=house_train[\"SalePrice\"]\nX=house_train.drop([\"SalePrice\"], axis=1)\n\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.3, random_state=2)\n","29ff37aa":"# Fitting Random Forest Regression to the dataset\n# i will import the regressor\nfrom sklearn.ensemble import RandomForestRegressor\n\n# create regressor object\nregressor = RandomForestRegressor(n_estimators = 300, random_state = 0)\n\n# fit the regressor with x and y data\nregressor.fit(X_train, y_train)\n","bd774023":"#Checking for the accuracy score based on the splitted trained dataset\npredictions = regressor.predict(X_val)\nfrom sklearn.metrics import r2_score\naccuracy_score = r2_score(y_val, predictions)*100\nprint(str(round(accuracy_score)) + '%')","541161a9":"y_predict = regressor.predict(house_test)","e506076b":"y_predict","53c0dc71":"#I will now convert the submission into a dataframe.\ndf = pd.DataFrame({\"Id\":test_ids.values,\n                      \"SalePrice\":y_predict})","f419d226":"df.to_csv(\"House_Price_Prediction.csv\", index = False)","6c685286":"df.head()","f9b3b7b8":"**after carefull inspection of the datasets, i will be performing the following data cleaning activities. I will be dropping \"Alley\", \"FireplaceQu\", \"PoolQC\", \"Fence\" and \"MiscFeature\" columns because of their very large missing values.  \nI will be replacing the missing values in the follwing columns with \"U\"(Unknown); MasVnrType, BsmtQual, BsmtCond, BsmtExposure, BsmtFinType1, BsmtFinType2, Electrical, GarageType, GarageFinish, GarageQual, GarageCond and i will be replacing the missing values in the follwing columns with the average of their overall values; MasVnrArea, GarageYrBlt**","3e68d923":"#### Data Cleaning\/Data Wrangling\/EDA","d5e34f8e":"### House Price Prediction Using Random Forest Algorithm.\n#### Presented By Edeh Emeka N. \n\n#### **The Challenge**\n**I will be predicting the sales price for each house. For each Id in the test set, I will predict the value of the SalePrice variable.**   \n\n","288b5c21":"**From the above result, it is evident that there are still some missing values in some of the test dataset columns. I will address this issue below**","ce768a10":"### Model and Prediction"}}