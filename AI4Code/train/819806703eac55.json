{"cell_type":{"b8ba5afb":"code","e239910a":"code","23582591":"code","9fb44acc":"code","aabad7ca":"code","ea9c42f8":"code","4156da83":"code","ba1436f6":"code","e4be4d4a":"code","a074cabd":"code","42f724a8":"code","fa042a00":"code","81fc4e7e":"code","15611cca":"code","f0449653":"code","d1f8256c":"code","05e40a58":"code","a29e2442":"code","4bf76c35":"code","642fef36":"code","dd07c69d":"markdown","20910e01":"markdown","ea05b165":"markdown","df19fd68":"markdown","c035a27e":"markdown","91f8481a":"markdown","f1a6a1fe":"markdown","d97b6ab0":"markdown","afe8a1bf":"markdown","932c91fd":"markdown","4350eecc":"markdown","7d83ce0f":"markdown"},"source":{"b8ba5afb":"from pathlib import Path\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport itertools\nfrom tqdm.notebook import tqdm","e239910a":"mpl.rcParams['figure.dpi'] = 1000","23582591":"%matplotlib inline","9fb44acc":"spacenet_path = Path('..\/input\/spacenet-7-multitemporal-urban-development')\nmetadata_path = Path('..\/input\/spacenet-7-metadata-extraction')\n\nsample_csv_path = metadata_path\/'output_csvs\/sample_geodataframe.gpkg'","aabad7ca":"gdf = gpd.read_file(sample_csv_path)","ea9c42f8":"gdf.head()","4156da83":"gdf_group = gdf.groupby(['filename','year','month'])","ba1436f6":"dfs = []\nfor i,(key,df) in enumerate(gdf_group):\n    dfs.append(gdf_group.get_group(key).reset_index(drop=True))","e4be4d4a":"len(dfs)","a074cabd":"df1 = dfs[0]\ndf1.head()","42f724a8":"df24 = dfs[23]\ndf24.head()","fa042a00":"f, ax = plt.subplots(1, figsize=(12, 12))\n\nfor geom in df1['geometry']:\n    ax.plot(*geom.exterior.xy)\nplt.show()","81fc4e7e":"def plot_gdf(gdf,show_plot=True):\n    f, ax = plt.subplots(1, figsize=(12, 12))\n\n    for geom in gdf['geometry']:\n        ax.plot(*geom.exterior.xy)\n    if show_plot:\n        plt.show()","15611cca":"def dataframe_difference(df1, df2, get_dates=False):\n    try:\n        df1.reset_index(inplace=True,drop=True)\n    except:\n        pass\n    try:\n        df2.reset_index(inplace=True,drop=True)\n    except:\n        pass\n    \n    date_info = [df['year'][0] +' '+ df['month'][0] for df in (df1,df2)]\n    \n    len_1 = len(df1)\n    len_2 = len(df2)\n    \n    len_diff = abs(len_2-len_1)\n    \n    if len_2 > len_1:\n        start_index = len_2-len_diff\n        diff_df = df2[start_index:].copy()\n        date_info = (date_info[0],date_info[1])\n    else:\n        start_index = len_1-len_diff\n        diff_df = df1[start_index:].copy()\n        date_info = (date_info[1],date_info[0])\n    if get_dates:\n        return diff_df,date_info\n    else:\n        return diff_df.reset_index(inplace=True,drop=True)","f0449653":"def get_all_difference_combinations(dfs,get_dates=False):\n    diff_dfs = []\n    combinations = itertools.combinations(dfs,2)\n    \n    for comb in combinations:\n        diff_dfs.append(dataframe_difference(*comb,get_dates=get_dates))\n                        \n    return diff_dfs","d1f8256c":"def plot_all_dfs(dfs,ncols=4,dates_exist=False):\n    n_dfs = len(dfs)\n    nrows = (n_dfs - 1) \/\/ ncols + 1\n    h = ncols*10\n    l = nrows*8.5\n    fig,axs = plt.subplots(nrows=nrows,ncols=ncols,figsize=(h,l))\n    for i,row in enumerate(axs):\n        for j,ax in enumerate(row):\n            df = dfs[i*nrows+j][0]\n            if dates_exist:\n                dates = dfs[i*nrows+j][1]\n                ax.set_title(f'difference between {dates[0]} and {dates[1]}')\n            for geom in df['geometry']:\n                ax.plot(*geom.exterior.xy)","05e40a58":"diff_dfs = get_all_difference_combinations(dfs,get_dates=True)","a29e2442":"diff_dfs[0][1]","4bf76c35":"plot_all_dfs(diff_dfs[0:16],dates_exist=True)","642fef36":"plot_all_dfs(diff_dfs[100:116],dates_exist=True)","dd07c69d":"## Import Libraries","20910e01":"Let's plot one of our dataframes and see what kind of output we get. In order to do that we loop through all of our shapes, and plot them on the same axes as shown below.","ea05b165":"Let's check out the length of our list below:","df19fd68":"One interesting thing to do is to get the differences in the labels between any given 2 months. The function below will allow us to get the difference between 2 of our geodataframes. <br>\n\nThe `get_dates` will make the function return a tupple consisting of the difference dataframe and the dates of of the 2 dataframes being compared `(difference_dataframe, (df1_date,df2_date))`\n\n**One thing to note that the function below will only work with the way our data is formatted and will not work for any generic set of geodataframes.**","c035a27e":"## Configure Paths to Data","91f8481a":"## Conclusion\n\nWe started out with with 24 dataframes, each labeling the building footprints for their corresponding satellite image. We managed to create a new set of labels that are based on the difference between the \n2 images, and stored them in their corresponding dataframes. In conclusion instead of having 24 output labels for 24 satellite images, now have 276 output labels by taking the combinations of 2 images and finding the difference between them.","f1a6a1fe":"Most of the data was collected monthly over a period of 2 years, therefore our list consisting of 24 DataFrames is consistent with our expectations. (24 months in 2 years)","d97b6ab0":"## Read & Explore CSV","afe8a1bf":"### Group Data by Filename, Year and Month","932c91fd":"### Extract Each Group to its own DataFrame","4350eecc":"We can further expand the function above and use it to augment our data, we can do this by retrieving all the possible difference combinations for our data. \n\nFor example: if I have a list of dataframes = `[df1,df2,df3,df4]` then the function would return the following list `[diff_df1_df2, diff_df1_df3, diff_df1_df4, diff_df2_df3, diff_df2_df4, diff_df3_df4]`","7d83ce0f":"Let's make a function so that we can automate the plotting of our geodataframes."}}