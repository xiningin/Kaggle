{"cell_type":{"47d6ee3c":"code","9b3620b0":"code","65cc9061":"code","81c42548":"code","b5925a84":"code","6c41aed8":"code","3a5c22e3":"code","a2f85799":"code","4aedd52c":"code","9a562dbb":"code","11d49ea0":"code","740f0d19":"code","44e97f78":"code","1bbf357a":"code","682a38b4":"code","decb0dcc":"code","fbd903bb":"code","457119ad":"code","dc68e571":"code","e3e7a2d4":"code","a1d396ed":"code","c868d1be":"code","0b98bdfb":"code","e4d5c780":"code","fea2258b":"code","76aed9db":"code","498af5a0":"code","9df07863":"markdown","bdbf2788":"markdown","e5d03e21":"markdown","c7524f95":"markdown","d4689d66":"markdown","4521eae0":"markdown","745dd474":"markdown","595f40ad":"markdown","cc7d28fc":"markdown","74b38d8f":"markdown","2188b137":"markdown","6740de09":"markdown","8cfb97fe":"markdown","0777c24e":"markdown","3823a7bf":"markdown","2543b3bf":"markdown","2708dd0f":"markdown","a173df4a":"markdown","871cd728":"markdown","a542e607":"markdown","767ce907":"markdown"},"source":{"47d6ee3c":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\n%matplotlib inline\nimport seaborn; seaborn.set()","9b3620b0":"PlayStore = pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore.csv\")\nprint(\"PlayStore shape is \",PlayStore.shape)","65cc9061":"PlayStore.head()\nPlayStore","81c42548":"missing_data = pd.concat([PlayStore.isnull().sum().sort_values(ascending=False),\n                          ((PlayStore.isnull().sum()\/10841)*100)], \n                         axis=1, keys=['Total', 'Percent'])\nmissing_data.head()","b5925a84":"PlayStore.dropna(inplace= True)\nPlayStore['Last Updated'] = pd.to_datetime(PlayStore['Last Updated'])","6c41aed8":"PlayStore['Installs'] = PlayStore['Installs'].apply(lambda x: x.replace('+', '') if '+' in str(x) else x)\nPlayStore['Installs'] = PlayStore['Installs'].apply(lambda x: x.replace(',', '') if ',' in str(x) else x)\nPlayStore['Installs'] = PlayStore['Installs'].apply(lambda x: int(x))\nprint(PlayStore.dtypes['Installs'])","3a5c22e3":"PlayStore['Price'] = PlayStore['Price'].apply(lambda x: str(x).replace('$', '') if '$' in str(x) else str(x))\nPlayStore['Price'] = PlayStore['Price'].apply(lambda x: float(x))\nprint(PlayStore.dtypes['Price'])","a2f85799":"PlayStore['Size'] = PlayStore['Size'].apply(lambda x: str(x).replace('M',' ') if 'M' in str(x) else x)\nPlayStore['Size'] = PlayStore['Size'].apply(lambda x: str(x).replace(',' , ' ') if ',' in str(x) else x)\nPlayStore['Size'] = PlayStore['Size'].apply(lambda x: str(x).replace('Varies with device' , 'NaN') \n                                            if 'Varies with device' in str(x) else x)\nPlayStore['Size'] = PlayStore['Size'].apply(lambda x: float(str(x).replace('k' , ' '))\/1000 if 'k' in str(x) else x)\nPlayStore['Size'] = PlayStore['Size'].apply(lambda x: float(x))\nprint(PlayStore.dtypes['Size'])","4aedd52c":"PlayStore['Reviews'] = PlayStore['Reviews'].apply(lambda x: int(x))","9a562dbb":"PlayStore.dropna(inplace= True)\nprint(\"After drop missing value the dataset's shape is:\",PlayStore.shape)","11d49ea0":"seaborn.pairplot(PlayStore,kind='reg',diag_kind = 'kde',palette='husl',hue='Type')","740f0d19":"\nsizes = PlayStore['Type'].value_counts(sort = True)\nlabels = PlayStore['Type'].value_counts(sort = True).index\ncolors = ['deeppink','mediumorchid']\nexplode = (0,0.2)\npie, ax = plt.subplots(figsize=[11,7])\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,\n        autopct='%1.2f%%',  startangle=180,textprops={'fontsize': 20})\nplt.axis='equal'\nplt.legend(loc = 'best')\nplt.title('Percent of Two types of App in Store',size = 20)","44e97f78":"PlayStore.describe().apply(lambda s: s.apply('{0:.5f}'.format))","1bbf357a":"x = PlayStore['Rating']\ny = PlayStore['Size']\nz = np.log(PlayStore['Installs'])\np = np.log(PlayStore['Reviews'])\nt = PlayStore['Type']\nprice = PlayStore['Price']\n\nLogScarlePD = pd.DataFrame(list(zip(x, p, y , z, t, price)), \n                        columns=['Rating','Reviews', 'Size', 'Installs', 'Type', 'Price'])\n","682a38b4":"plt.figure(figsize=(15,6))\nz = seaborn.boxplot(x=\"Installs\", y=\"Type\", data=LogScarlePD,orient='h')\nplt.title('Free VS Paid on Installation',size = 20)","decb0dcc":"plt.figure(figsize=(15,6))\nz = seaborn.boxplot(x=\"Rating\",y=\"Type\", data=LogScarlePD,orient='h')\nplt.title('Free VS Paid on Rating',size = 20)\nplt.ylabel(\"Type\",fontsize=16)\nplt.xlabel(\"Rating\",fontsize=16)\nplt.savefig(\"Free and Paid's Rating\")","fbd903bb":"LogScarlePD.loc[ LogScarlePD['Price'] == 0, 'PriceBand'] = '1 Free'\nLogScarlePD.loc[(LogScarlePD['Price'] > 0) & (LogScarlePD['Price'] <= 7.99), 'PriceBand'] = '2 Cheap'\nLogScarlePD.loc[(LogScarlePD['Price'] > 7.99) & (LogScarlePD['Price'] <= 15.99), 'PriceBand']   = '3 Normal'\nLogScarlePD.loc[(LogScarlePD['Price'] > 15.99) & (LogScarlePD['Price'] <= 29.99), 'PriceBand']   = '4 expensive'\nLogScarlePD.loc[(LogScarlePD['Price'] > 29.99), 'PriceBand']  = '5 Too Expensive'\n\nplt.figure(figsize=(15,6))\n\nz = seaborn.boxplot(x=\"PriceBand\", y=\"Rating\", data=LogScarlePD)\nplt.title('Rating VS PriceBand',size = 20)","457119ad":"Category_label = PlayStore['Category'].value_counts(sort = True)[:10]\nCategory_list = list(Category_label.index)\nprint(Category_list)\nFAMILY = pd.DataFrame(data = PlayStore[PlayStore['Category']=='FAMILY'])\nGAME = pd.DataFrame(data = PlayStore[PlayStore['Category']=='GAME'])\nTOOLS = pd.DataFrame(data = PlayStore[PlayStore['Category']=='TOOLS'])\nMEDICAL = pd.DataFrame(data = PlayStore[PlayStore['Category']=='MEDICAL'])\nLIFESTYLE = pd.DataFrame(data = PlayStore[PlayStore['Category']=='LIFESTYLE'])\nPERSONALIZATION = pd.DataFrame(data = PlayStore[PlayStore['Category']=='PERSONALIZATION'])\nFINANCE = pd.DataFrame(data = PlayStore[PlayStore['Category']=='FINANCE'])\nSPORTS = pd.DataFrame(data = PlayStore[PlayStore['Category']=='SPORTS'])\nBUSINESS = pd.DataFrame(data = PlayStore[PlayStore['Category']=='BUSINESS'])\nPHOTOGRAPHY = pd.DataFrame(data = PlayStore[PlayStore['Category']=='PHOTOGRAPHY'])\ntop10 = pd.concat([FAMILY,GAME,TOOLS,MEDICAL,LIFESTYLE,PERSONALIZATION,FINANCE,SPORTS,BUSINESS,PHOTOGRAPHY])\ng = seaborn.FacetGrid(top10,col='Category',hue='Type',col_wrap=2,height=4, aspect=3)\ng.map(seaborn.histplot, \"Rating\")\ng.add_legend()\ng.set(xticks=[0,0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0])","dc68e571":"plt.figure(figsize=(15,6))\nz = seaborn.boxplot(x=\"Size\", y=\"Type\", data=LogScarlePD,orient='h')\nplt.title('Free VS Paid on Apps\\' Size',size = 25)\nplt.ylabel(\"Type\",fontsize=16)\nplt.xlabel(\"Size\",fontsize=16)\nplt.savefig(\"Apps Size\")","e3e7a2d4":"review_df = pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore_user_reviews.csv\")","a1d396ed":"PlayStore_cp = PlayStore.copy()\nmerged_df = pd.merge(PlayStore_cp, review_df, on =\"App\", how = \"inner\")\nmerged_df = merged_df.dropna(subset=['Sentiment', 'Translated_Review'])","c868d1be":"fig, ax = plt.subplots(figsize=(17,13))\nax = seaborn.boxplot(x='Type', y='Sentiment_Polarity', data=merged_df)\ntitle = ax.set_title('Sentiment Polarity Distribution',fontsize =15)","0b98bdfb":"from wordcloud import WordCloud\nimport nltk\nnltk.download('stopwords')\nfrom nltk.corpus import stopwords\nfrom nltk.corpus import stopwords\n","e4d5c780":"wc = WordCloud(background_color=\"white\", max_words=200, colormap=\"viridis\")\nstop = stopwords.words('english')","fea2258b":"stop = stop + ['app', 'APP' ,'ap', 'App', 'apps', 'application', 'browser', 'website', 'websites', 'chrome', 'click', 'web', 'ip', 'address',\n            'files', 'android', 'browse', 'service', 'use', 'one', 'download', 'email', 'Launcher']\n\nmerged_df['Translated_Review'] = merged_df['Translated_Review'].apply(lambda x: \" \".join(x for x in str(x).split(' ') if x not in stop))\nmerged_df.Translated_Review = merged_df.Translated_Review.apply(lambda x: x if 'app' not in x.split(' ') else np.nan)\nmerged_df.dropna(subset=['Translated_Review'], inplace=True)","76aed9db":"free = merged_df.loc[merged_df.Type=='Free']['Translated_Review'].apply(lambda x: '' if x=='nan' else x)\nwc.generate(''.join(str(free)))\nplt.figure(figsize=(15, 15))\nplt.imshow(wc, interpolation='bilinear')\nplt.axis('off')\nplt.show()","498af5a0":"paid = merged_df.loc[merged_df.Type=='Paid']['Translated_Review'].apply(lambda x: '' if x=='nan' else x)\nwc.generate(''.join(str(paid)))\nplt.figure(figsize=(15, 15))\nplt.imshow(wc, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","9df07863":"## We can see that the number of Free App is more than Paid App\n## Now let take a look of Free App and Paid Apps' percentage\n ","bdbf2788":"# Data Cleaning\n - ## Convert 'Installs' to int data type\n - ## 'Price' contains '$' those string elements and we need convert it to float data type\n - ## Convert 'Size' to MB\n - ## Convert 'Reviews' to int data type","e5d03e21":"## Here we simply divide all the app to 5 boundaries, from Cheap to Expensive boundaries app gets better Rating than Free App **unless** it prices **too Expensive**\n## Paid apps have higher rating than Free apps, it may because users need to pay the fee and they would prefer a higher quality or best suited app to them. \n","c7524f95":"## But in fact, there contain some noise or garbage inside the dataset\n## So, we have to move to the next stage **Data Cleaning**","d4689d66":"## Now, we have drop out each row that has the above missing value","4521eae0":"## From the lowest,quartile 1, median and quartile 3,Paid Apps are slightly getting greater ratinag than Free Apps.\n## And see, what if we divide the price into 5 different price level, what would happen.\n - \\\\$0 : 'Free'\n - \\\\$0-\\\\$7.99 : 'Cheap'\n - \\\\$8-\\\\$15.99 : 'Normal'\n - \\\\$16-\\\\$29.99 : 'Expensive'\n - \\\\$29.99 : 'Too Expensive'\n \n ### Remark: The above 5 price levels, I just freely set up without any rigours references\n","745dd474":"## The quartile 1 of Free Apps is nearly equal to the quartile 3 of Paid Apps\n- ### Which means obviously Free App are installed more than Paid App","595f40ad":"## Obviously, Paid Apps have **less unsatisfied** than Free App from the user reviews","cc7d28fc":"# Load the dataset and take a first glance on it","74b38d8f":"### Last of all, I would like to thank you Lavanya Gupta, author of \"All that you need to know about the Android market\", it gives me a great insight about the dataset and how to deal with the data cleaning and the wordcloud. ","2188b137":"## Paid App are obviously less in the \"LIFESTYLE\",\"Finance\",\"Business\", \"Sports\" and \"Photography\" category\n## But they are more often on \"FAMILY\", \"GAME\", \"TOOLS\", \"MEDICAL\", \"PERSONALIZATION\"\n## It is surprisingly, on \"Personalization\" Category the number of Paid App get highest rating is more than Free App.","6740de09":"# First the number of Free App is **absolutely overwhelming** with Paid App \n## And ***why*** would it happen ?","8cfb97fe":"## In general the Apps' Size between Free App and Paid App are **no different**\n## Firms who make Paid App need to pay the same effort as Free App but result in lower installation  \n---\n# Here will use another CSV file \"googleplaystore_user_reviews.csv\"","0777c24e":"### Since the standard deviation of 'Reviews' and 'Installs' is large, we might need to do something\n### Otherwise, the graph will be squashed","3823a7bf":"# To conclude Why the nunber of Pree App is greater than the nunber of Paid App\n- **\"Price\"** does not have much correlation whith others therefore when \"Price\" increases **nothing** would also be increased.\n- In general the Apps' Size between Free App and Paid App are **not different**\n\n        1.Firms who make Paid App need to pay the same effort as Free App but result in lower installation  \n        2.The quartile 1 of installation of Free App is nearly equal to quartile 3 of installation of Paid App\n- Free App can place Ads inside their apps for **addictional Ads income** \n\n# So, Free App can **probably earn more profit** than Paid App by additional Ads while having greater installtion. And it is **incentive** for firms to make Free App rather than Paid App\n# However, there is another interesting finding about Paid App.\n\n- In Rating the average rating of Paid App and Free App, Paid App has perfromed slightly better than Free App\n- In Sentiment Polarity Distribution, many Free Apps are recorded in extremely low result but Paid App only has one outside the lowest. \n    1. And the median of Free App is behind Paid Apps \n-In WordCloud shows that Free Apps have **more negative words** such as Ads, excessive, hate, Bad, Kid, Boring, but Paid Apps seem not have negative words.\n    1. We can draw one possible situtation is that many firms produce boring free app to deceive users downloading the app, and watching Ads.\n    2. So, firms can earn a substantial amount of money into their pocket\n    \n# Therefore, Firms who makes Paid App are more likely to focus on a niche market targeting a small group of user on the whole Google Play App Store","2543b3bf":"# Import all libraries that we need: ","2708dd0f":"## We have dropped ~29% data compare to orignal dataset\n## And now the dataset shape is (7723, 13)","a173df4a":"## From Paid Apps, we have more positive words such as **better, Great, Thanks, good, proper, best, Love, wonderful...**\n---","871cd728":"---","a542e607":"## From Free Apps, we have more negative words such as **ads, excessive, hate, Bad, Kid, Boring**","767ce907":"# Baisc EDA"}}