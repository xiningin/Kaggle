{"cell_type":{"35d09398":"code","0aa6dad7":"code","dc5d131a":"code","99e0f48e":"code","b1c226c5":"code","20db8c08":"code","cd3cbc8d":"code","adecc6de":"code","a99ce993":"code","a1d70b48":"code","8677b57b":"code","59f6994f":"code","8c950e15":"code","b4961973":"code","61522341":"code","dfee8bc1":"code","026f13b8":"code","a027dcde":"code","2e80599c":"code","f69aac0a":"code","dc7244fe":"code","36dd3b10":"code","1f5b7ebd":"markdown","d165a8ad":"markdown","e483d9f0":"markdown","7b23bf0e":"markdown"},"source":{"35d09398":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0aa6dad7":"df_train = pd.read_csv('\/kaggle\/input\/1056lab-used-cars-price-prediction\/train.csv').drop('Id', axis=1)\ndf_test = pd.read_csv('\/kaggle\/input\/1056lab-used-cars-price-prediction\/test.csv').drop('Id', axis=1)","dc5d131a":"df_train_dummies = pd.get_dummies(df_train, columns=['Transmission'], drop_first=True)\ndf_test_dummies = pd.get_dummies(df_test, columns=['Transmission'], drop_first=True)\ndf_train_dummies = df_train_dummies.drop(columns=['Name'])\ndf_train_dummies = df_train_dummies.drop(columns=['New_Price'])\ndf_train_dummies = df_train_dummies.drop(columns=['Location'])\ndf_test_dummies = df_test_dummies.drop(columns=['Name'])\ndf_test_dummies = df_test_dummies.drop(columns=['New_Price'])\ndf_test_dummies = df_test_dummies.drop(columns=['Location'])\ndf_train_dummies['Fuel_Type'] = df_train_dummies['Fuel_Type'].map({'Diesel':1,'Petrol':2,'CNG':3,'LPG':4})\ndf_train_dummies['Owner_Type'] = df_train_dummies['Owner_Type'].map({'First':1,'Second':2,'Third':3,'Fourth & Above':4})\ndf_test_dummies['Fuel_Type'] = df_test_dummies['Fuel_Type'].map({'Diesel':1,'Petrol':2,'CNG':3,'LPG':4,'Electric':5})\ndf_test_dummies['Owner_Type'] = df_test_dummies['Owner_Type'].map({'First':1,'Second':2,'Third':3,'Fourth & Above':4})","99e0f48e":"df_train_dummies['Mileage'] = df_train_dummies['Mileage'].str.strip(' kmpl')\ndf_train_dummies['Mileage'] = df_train_dummies['Mileage'].str.strip(' km\/kg')\ndf_train_dummies['Engine'] = df_train_dummies['Engine'].str.strip(' CC')\ndf_train_dummies['Power'] = df_train_dummies['Power'].str.strip(' bhp')\ndf_test_dummies['Mileage'] = df_test_dummies['Mileage'].str.strip(' kmpl')\ndf_test_dummies['Mileage'] = df_test_dummies['Mileage'].str.strip(' km\/kg')\ndf_test_dummies['Engine'] = df_test_dummies['Engine'].str.strip(' CC')\ndf_test_dummies['Power'] = df_test_dummies['Power'].str.strip(' bhp')\ndf_train_dummies['Mileage'] = pd.to_numeric(df_train_dummies['Mileage'], errors='coerce')\ndf_test_dummies['Mileage'] = pd.to_numeric(df_test_dummies['Mileage'], errors='coerce')\ndf_train_dummies['Engine'] = pd.to_numeric(df_train_dummies['Engine'], errors='coerce')\ndf_train_dummies['Power'] = pd.to_numeric(df_train_dummies['Power'], errors='coerce')\ndf_train_dummies['Seats'] = pd.to_numeric(df_train_dummies['Seats'], errors='coerce')\ndf_test_dummies['Engine'] = pd.to_numeric(df_test_dummies['Engine'], errors='coerce')\ndf_test_dummies['Power'] = pd.to_numeric(df_test_dummies['Power'], errors='coerce')\ndf_test_dummies['Seats'] = pd.to_numeric(df_test_dummies['Seats'], errors='coerce')","b1c226c5":"from sklearn.impute import SimpleImputer\nimputer = SimpleImputer(missing_values=np.nan, strategy='median')","20db8c08":"train_Engine = df_train_dummies['Engine']\n'''pd.DataFrame(pd.Series(train_Engine.ravel()).describe()).transpose()'''\ndf_train_dummies['Engine'] = imputer.fit_transform(df_train_dummies['Engine'].values.reshape(-1, 1))","cd3cbc8d":"train_Power = df_train_dummies['Power']\n'''pd.DataFrame(pd.Series(train_Power.ravel()).describe()).transpose()'''\ndf_train_dummies['Power'] = imputer.fit_transform(df_train_dummies['Power'].values.reshape(-1, 1))","adecc6de":"test_Engine = df_test_dummies['Engine']\n'''pd.DataFrame(pd.Series(test_Engine.ravel()).describe()).transpose()'''\ndf_test_dummies['Engine'] = imputer.fit_transform(df_test_dummies['Engine'].values.reshape(-1, 1))","a99ce993":"test_Power = df_test_dummies['Power']\n'''pd.DataFrame(pd.Series(test_Power.ravel()).describe()).transpose()'''\ndf_test_dummies['Power'] = imputer.fit_transform(df_test_dummies['Power'].values.reshape(-1, 1))","a1d70b48":"test_Mileage = df_test_dummies['Mileage']\n'''pd.DataFrame(pd.Series(test_Mileage.ravel()).describe()).transpose()'''\ndf_test_dummies['Mileage'] = imputer.fit_transform(df_test_dummies['Mileage'].values.reshape(-1, 1))","8677b57b":"imputer = SimpleImputer(missing_values=np.nan, strategy='most_frequent')","59f6994f":"train_Seats = df_train_dummies['Seats']\n'''pd.DataFrame(pd.Series(train_Seats.ravel()).describe()).transpose()'''\ndf_train_dummies['Seats'] = imputer.fit_transform(df_train_dummies['Seats'].values.reshape(-1, 1))","8c950e15":"test_Seats = df_test_dummies['Seats']\n'''pd.DataFrame(pd.Series(test_Seats.ravel()).describe()).transpose()'''\ndf_test_dummies['Seats'] = imputer.fit_transform(df_test_dummies['Seats'].values.reshape(-1, 1))","b4961973":"X_train = df_train_dummies.drop(['Price'], axis=1).values\ny_train = df_train_dummies['Price'].values\nX_test = df_test_dummies.values","61522341":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import GridSearchCV\nreg = RandomForestRegressor(criterion='mse')\n'''params = {'max_depth':[11,12,13,14,15], 'n_estimators':[30,50]}\ngscv = GridSearchCV(reg, params, cv=5, scoring='neg_mean_squared_log_error')\ngscv.fit(X_train, y_train)'''","dfee8bc1":"'''gscv.best_params_'''","026f13b8":"reg =RandomForestRegressor(criterion='mse', max_depth=13, n_estimators=20)","a027dcde":"reg.fit(X_train, y_train)","2e80599c":"reg.score(X_train, y_train)","f69aac0a":"p = reg.predict(X_test)","dc7244fe":"p","36dd3b10":"df_submit = pd.read_csv('\/kaggle\/input\/1056lab-used-cars-price-prediction\/sampleSubmission.csv', index_col=0)\ndf_submit['Price'] = p\ndf_submit.to_csv('my_submission3.csv')","1f5b7ebd":"\u524d\u51e6\u7406","d165a8ad":"\u4e88\u6e2c","e483d9f0":"\u5b66\u7fd2","7b23bf0e":"\u8aad\u307f\u8fbc\u307f"}}