{"cell_type":{"27fd7415":"code","1d2360c1":"code","93849c72":"code","c18fba18":"code","6f9ac860":"code","89dd7a6a":"code","eda4094d":"code","430f1691":"code","5952b14f":"code","ed73a618":"code","3a0f89e6":"code","407e9cee":"code","9311e8c9":"code","12c9f4bc":"code","60526fe3":"code","51ff0190":"code","37bd6c22":"code","0fc2caf3":"code","28548921":"code","e544031b":"code","73a29a54":"code","116cd269":"code","16489189":"code","4c60b5dc":"code","60fcfe50":"code","603d4b03":"code","90d83471":"code","d71e251c":"code","8a97c6a7":"code","456c8825":"code","6d2dc32e":"code","ebb09a2e":"code","c13967ce":"markdown","dcf72fdf":"markdown","377047ee":"markdown","3e935902":"markdown"},"source":{"27fd7415":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1d2360c1":"from colorama import Fore, Style\n\nnRowsRead = 1000 # specify 'None' if want to read whole file\n# ham_lyrics.csv has 3634 rows in reality, but we are only loading\/previewing the first 1000 rows\ndf = pd.read_csv('..\/input\/hackathon\/task_2-BCG_strain_per_country-1Nov2020.csv', delimiter=',', nrows = nRowsRead)\ndf.dataframeName = 'task_2-BCG_strain_per_country-1Nov2020.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\nprint(Fore.MAGENTA + 'Data shape: ',Style.RESET_ALL,df.shape)\ndf.head()","93849c72":"aze = df[(df['country_name']=='Azerbaijan')].reset_index(drop=True)\naze.head()","c18fba18":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in aze.country_name)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","6f9ac860":"#Codes by Pooja Jain https:\/\/www.kaggle.com\/jainpooja\/av-guided-hackathon-predict-youtube-likes\/notebook\n\ntext_cols = ['BCG Atlas: BCG Strain', 'BCG Atlas: Timing of 1st BCG?', 'mandatory_bcg_strain_2015-2020']\n\nfrom wordcloud import WordCloud, STOPWORDS\n\nwc = WordCloud(stopwords = set(list(STOPWORDS) + ['|']), random_state = 42)\nfig, axes = plt.subplots(2, 2, figsize=(20, 12))\naxes = [ax for axes_row in axes for ax in axes_row]\n\nfor i, c in enumerate(text_cols):\n  op = wc.generate(str(df[c]))\n  _ = axes[i].imshow(op)\n  _ = axes[i].set_title(c.upper(), fontsize=24)\n  _ = axes[i].axis('off')\n\n_ = fig.delaxes(axes[3])","89dd7a6a":"df.isnull().sum()","eda4094d":"cols_to_drop=['Unnamed: 19','Unnamed: 20', 'Unnamed: 21', 'Unnamed: 22', 'Unnamed: 23', 'Unnamed: 24', 'Unnamed: 25']\ndf=df.drop(cols_to_drop,axis=1)\ndf.columns","430f1691":"# categorical features with missing values\ncategorical_nan = [feature for feature in df.columns if df[feature].isna().sum()>0 and df[feature].dtypes=='O']\nprint(categorical_nan)","5952b14f":"# replacing missing values in categorical features\nfor feature in categorical_nan:\n    df[feature] = df[feature].fillna('None')","ed73a618":"df[categorical_nan].isna().sum()","3a0f89e6":"#Code from Gabriel Preda\n#plt.style.use('dark_background')\ndef plot_count(feature, title, df, size=1):\n    f, ax = plt.subplots(1,1, figsize=(4*size,4))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:20], palette=('#42b3f5', '#42f554', '#f55442'))\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()","407e9cee":"plot_count(\"BCG Atlas: BCG Strain\", \"BCG Strain\", df,4)","9311e8c9":"plot_count(\"BCG Atlas: Which year was vaccination introduced?\", \"Year in which the vaccination was introduced\", df,4)","12c9f4bc":"plot_count(\"BCG Atlas: Timing of 1st BCG?\", \"Timing of 1st BCG\", df,4)","60526fe3":"plot_count(\"vaccination_timing_unified\", \"Vaccination Timing Unified\", df,3)","51ff0190":"plot_count(\"Year of changes to BCG schedule\", \"Year of changes to BCG schedule\", df,4)","37bd6c22":"plot_count(\"BCG Atlas: BCG Recommendation Type\", \"BCG Recommendation Type\", df,4)","0fc2caf3":"plot_count(\"BCG Atlas: Details of changes\", \"Details of changes\", df,4)","28548921":"plot_count(\"BCG Atlas: How long has this BCG vaccine strain been used?\", \"How long has this BCG vaccine strain been used? \", df,4)","e544031b":"plot_count(\"mandatory_bcg_strain_2015-2020\", \"Mandatory BCG Strain 2015-2020\", df,4)","73a29a54":"plot_count(\"mandatory_bcg_strain_1960-1970\", \"Mandatory BCG Strain 1960-1970\", df,4)","116cd269":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\n\nplt.figure(figsize=(20,15))\nsns.countplot(y=\"BCG Atlas: BCG Strain\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"RdGy\"))\nplt.title('BCG Strain 1Nov2020',\n         fontsize=15);","16489189":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\n\nplt.figure(figsize=(20,15))\nsns.countplot(y=\"BCG Atlas: Timing of 1st BCG?\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"RdGy\"))\nplt.title('Timing of 1st BCG',\n         fontsize=15);","4c60b5dc":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.RdBu(np.linspace(0,1,20))\ndf[\"BCG Atlas: BCG Strain\"].value_counts().sort_values(ascending=False).head(10).plot.pie(y=\"country_name\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"\")\nplt.axis(\"off\")\nplt.show()","60fcfe50":"import plotly.offline as pyo\nimport plotly.graph_objs as go\nlowerdf = df.groupby('BCG Atlas: Timing of 1st BCG?').size()\/df['country_name'].count()*100\nlabels = lowerdf.index\nvalues = lowerdf.values\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values,marker_colors = px.colors.sequential.speed, hole=.6)])\nfig.show()","603d4b03":"#Code from Nitin Datta https:\/\/www.kaggle.com\/nitindatta\/eda-with-r3-id\/comments\n\nfig,ax=plt.subplots(figsize=(18,6))\nsns.set_style('dark')\nplt.subplot(1, 2, 1)\ng1=sns.countplot(df['BCG Atlas: BCG Recommendation Type'],palette='rocket', hue = df['vaccination_timing_unified'],**{'hatch':'\/','linewidth':3})\ng1.set_title(\"BCG Recommendation Type\")\nplt.xticks(rotation=45)\n\nplt.subplot(1, 2, 2)\ng2=sns.countplot(aze['BCG Atlas: Timing of 1st BCG?'],palette='rocket',hue= aze['vaccination_timing_unified'],**{'hatch':'\/','linewidth':3})\ng2.set_title(\"Azerbaijan Timing of 1st BCG\")","90d83471":"# Count Plot\nplt.style.use(\"classic\")\nplt.figure(figsize=(8, 6))\nsns.countplot(df['vaccination_timing_unified'], palette='rainbow', **{'hatch':'\/','linewidth':3})\nplt.xlabel(\"vaccination_timing_unified\")\nplt.ylabel(\"Count\")\nplt.title(\"Vaccination Timing Unified\")\nplt.xticks(rotation=45, fontsize=8)\nplt.show()","d71e251c":"ls ..\/input\/hackathon\/task_1-google_search_txt_files_v2\/AZ\/","8a97c6a7":"Azerbaijan = '..\/input\/hackathon\/task_1-google_search_txt_files_v2\/AZ\/Azerbaijan-en-result-109-original.txt'","456c8825":"text = open(Azerbaijan, 'r',encoding='utf-8',\n                 errors='ignore').read()","6d2dc32e":"print(text[:2500])","ebb09a2e":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Thanks for your patience \u2013 please keep coming back to see the improvements, @mpwolke Was Here.' )","c13967ce":"#Handling Missing Values.","dcf72fdf":"Political support for the National Tuberculosis Programme (NTP) in Azerbaijan is suboptimal. Models of care, including treatment, early diagnosis and treatment of latent tuberculosis (TB) infection should be improved in line with international standards. The laboratory network also needs strengthening. \n\nThere is insufficient support for directly observed therapy (DOT) for susceptible TB at primary health care level. Azerbaijan is among the 27 high multidrug-resistant (MDR) TB burden countries in the world with the third highest MDR-TB rate worldwide.\nhttps:\/\/www.euro.who.int\/__data\/assets\/pdf_file\/0009\/168597\/Azerbaijan-country-work-summary_200612.pdf\n\nAzerbaijan remains a high MDR-TB burden country. There is a need to implement countrywide control and innovative measures to accelerate early diagnosis of drug resistance in individual patients, improve treatment adherence and strengthen routine surveillance of drug resistance.https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC4547507\/","377047ee":"![](https:\/\/i.pinimg.com\/originals\/9b\/d1\/38\/9bd1386937f99ad22f70d2184a7edd37.jpg)pinterest.com","3e935902":"#Drop columns with NaN."}}