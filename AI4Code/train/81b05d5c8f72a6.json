{"cell_type":{"a119c4ce":"code","c4ef2203":"code","36d701e1":"code","408f9c42":"code","f3968d5d":"code","f72037f3":"code","ef1f6e8a":"code","9d7d81c8":"code","c44282c6":"code","1b47ea02":"code","f688c2bd":"code","d6e96ac2":"code","9e142096":"code","4182e639":"code","85325063":"code","51abaea4":"code","13922872":"code","6a2f5084":"code","54813e68":"code","faecc68a":"code","7dcd618f":"code","fe91af54":"markdown","30ee0087":"markdown","71dec429":"markdown","c3783da0":"markdown","b5015b39":"markdown","0afd5b55":"markdown","5627a820":"markdown","0a6c0fd9":"markdown","eb949f08":"markdown","57e705e0":"markdown"},"source":{"a119c4ce":"import datetime as dt\ndt_string = dt.datetime.now().strftime(\"%d\/%m\/%Y\")\nprint(f\"Kernel last updated: {dt_string}\")","c4ef2203":"import pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport datetime as dt\nimport folium\nfrom folium.plugins import HeatMap, HeatMapWithTime\n%matplotlib inline","36d701e1":"print(os.listdir('\/kaggle\/input'))\nDATA_FOLDER = \"\/kaggle\/input\/coronavirus-2019ncov\"\n","408f9c42":"data_df = pd.read_csv(os.path.join(DATA_FOLDER, \"covid-19-all.csv\"))","f3968d5d":"print(f\"Rows: {data_df.shape[0]}, Columns: {data_df.shape[1]}\")","f72037f3":"data_df.head()","ef1f6e8a":"data_df.tail()","9d7d81c8":"for column in data_df.columns:\n    print(f\"{column}:{data_df[column].dtype}\")","c44282c6":"print(f\"Date - unique values: {data_df['Date'].nunique()} ({min(data_df['Date'])} - {max(data_df['Date'])})\")","1b47ea02":"data_df['Date'] = pd.to_datetime(data_df['Date'])","f688c2bd":"for column in data_df.columns:\n    print(f\"{column}:{data_df[column].dtype}\")","d6e96ac2":"print(f\"Date - unique values: {data_df['Date'].nunique()} ({min(data_df['Date'])} - {max(data_df['Date'])})\")","9e142096":"def missing_data(data):\n    total = data.isnull().sum()\n    percent = (data.isnull().sum()\/data.isnull().count()*100)\n    tt = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n    types = []\n    for col in data.columns:\n        dtype = str(data[col].dtype)\n        types.append(dtype)\n    tt['Types'] = types\n    return(np.transpose(tt))","4182e639":"missing_data(data_df)","85325063":"print(f\"Countries\/Regions:{data_df['Country\/Region'].nunique()}\")\nprint(f\"Province\/State:{data_df['Province\/State'].nunique()}\")","51abaea4":"def plot_time_variation(df, y='Confirmed', hue='Province\/State', size=1, is_log=False):\n    f, ax = plt.subplots(1,1, figsize=(4*size,3*size))\n    g = sns.lineplot(x=\"Date\", y=y, hue=hue, data=df)\n    plt.xticks(rotation=90)\n    plt.title(f'{y} cases grouped by {hue}')\n    if(is_log):\n        ax.set(yscale=\"log\")\n    ax.grid(color='black', linestyle='dotted', linewidth=0.75)\n    plt.show()  ","13922872":"data_cn = data_df.loc[data_df['Country\/Region']==\"China\"]","6a2f5084":"plot_time_variation(data_cn, size=4, is_log=True)","54813e68":"plot_time_variation(data_cn, y='Recovered', size=4, is_log=True)","faecc68a":"def plot_time_variation_all(df, title='Mainland China', size=1):\n    f, ax = plt.subplots(1,1, figsize=(4*size,2*size))\n    g = sns.lineplot(x=\"Date\", y='Confirmed', data=df, color='blue', label='Confirmed')\n    g = sns.lineplot(x=\"Date\", y='Recovered', data=df, color='green', label='Recovered')\n    g = sns.lineplot(x=\"Date\", y='Deaths', data=df, color = 'red', label = 'Deaths')\n    plt.xlabel('Date')\n    plt.ylabel(f'Total {title} cases')\n    plt.xticks(rotation=90)\n    plt.title(f'Total {title} cases')\n    ax.grid(color='black', linestyle='dotted', linewidth=0.75)\n    plt.show()  \n","7dcd618f":"data_cn = data_df.loc[data_df['Country\/Region']==\"China\"]\ndata_cn = data_cn.sort_values(by = ['Province\/State','Date'], ascending=False)\ndata_cn_agg = data_cn.groupby(['Date']).sum().reset_index()\nplot_time_variation_all(data_cn_agg, size=3)","fe91af54":"## Load the data\n\nThere are multiple files in the coronavirus data folder, we will take the last updated one.\nWe also include GeoJSON data for China and for World.","30ee0087":"# Preliminary data exploration","71dec429":"Let's look to the missing values.","c3783da0":"## Mainland China - overall\n\nLet's compare overall values for Mainland China (Confirmed, Recovered, Deaths).\n","b5015b39":"<h1>Tracking the spread of 2019 Coronavirus<\/h1>\n\n<img src=\"https:\/\/storage.googleapis.com\/kaggle-datasets-images\/544069\/992803\/500beb47c451ac68fae29a8eb95ae45c\/dataset-card.jpg\" width=400><\/img>\n\n# Introduction\n\nThe 2019-nCoV is a highly contagious coronavirus that originated from Wuhan (Hubei province), Mainland China. This new strain of virus has striked fear in many countries as cities are quarantined and hospitals are overcrowded.\n\nWe are using here a Kaggle Dataset [Coronavirus 2019-nCoV](https:\/\/www.kaggle.com\/gpreda\/coronavirus-2019ncov) updated daily, based on [John Hopkins data](https:\/\/github.com\/CSSEGISandData\/COVID-19\/). \n\nThe Kernel will be rerun frequently to reflect the daily evolution of the cited dataset.\n\nWe start by analyzing the data for Mainland China, where the pandemic originated. We show time evolutions and snapshots of Confirmed, Recovered cases as well as Deaths. Then we move to explore the evolution of the pandemics in the rest of the World.\n\n\nWe are also using comparison of log-curves for several countries of Confirmed and Deaths to monitor evolution in time at country level.\n\nHeatmaps are also used to display geographical distribution of Confirmed cases and Deaths.\n\n\nFor both Mainland China and the rest of the World we are also showing the snapshot and time evolution of mortality, calculated in two ways: as Deaths \/ Confirmed cases (most probably a underestimate) and as Deaths \/ Recovered cases (most probably an overestimate).","0afd5b55":"Let's check the spread of the 2019-nCoV in various Regions\/Countries and Provinces\/States.","5627a820":"# Analysis preparation\n\n## Load packages","0a6c0fd9":"## Glimpse the data\n\nWe check data shape, we look to few rows of the data, we check for missing data.","eb949f08":"## Mainland China - time evolution","57e705e0":"Now we will show again the confirmed cases, deaths and recovered cases, grouped by province\/state in Mainland China, as evolved in time."}}