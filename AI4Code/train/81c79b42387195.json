{"cell_type":{"7eb97084":"code","21df516a":"code","0d134dcb":"code","89960391":"code","4292478d":"code","25e366c9":"code","4b95fba5":"code","2099ad79":"code","e0426b9e":"code","dc0d752b":"code","34aeed41":"code","c5f04ae2":"code","5c6f9dca":"code","b8a13961":"code","4ab89037":"code","be98e233":"code","ecf5d3cf":"code","32ab89c2":"code","cddf7c7b":"code","89f88cca":"code","f1d28229":"code","d98b9e8e":"code","88d95dd9":"code","15d1373a":"code","17ee5399":"code","6d874a00":"code","bced9064":"code","480a1edf":"code","d7dbfd86":"code","7ae8df9c":"code","0ebd0157":"code","9c30e674":"code","fb1315b3":"markdown","4ba274af":"markdown","f849018e":"markdown","3e036974":"markdown","5519018b":"markdown","3c8d870c":"markdown","3d6a7220":"markdown","21c33003":"markdown","d89b7a23":"markdown","cfd7af8f":"markdown","e15698bc":"markdown","652bf2e4":"markdown","43b21125":"markdown","12c51406":"markdown"},"source":{"7eb97084":"import numpy as np \nimport pandas as pd \nimport os\nprint(os.listdir(\"..\/input\"))\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nmaster = pd.read_csv('..\/input\/master.csv')\n","21df516a":"master.take(np.random.permutation(len(master))[:10])","0d134dcb":"master.isnull().sum()","89960391":"for i in master.columns:\n    if master[i].dtypes == object and len(master[i].unique()) < 1000:\n        print(i)\n        print(master[i].unique())","4292478d":"# Check how many data are there for each year\nmaster.groupby('year').year.count()","25e366c9":"fig = plt.figure(figsize=(15,8))\nax = fig.add_subplot(1, 1, 1)\nax.plot(master.groupby(['year']).suicides_no.sum(),'ko--')\ntick = ax.set_xticks(range(1985,2018,2))\nax.set_title('Figure 1: The total count of suicides  from 1985 to 2016')\nax.set_xlabel('year')\nax.set_ylabel('suicide number')","4b95fba5":"# check the total number of country\nlen(master.country.unique())","2099ad79":"def count_country(group):\n    return len(group.country.unique())\ncountry_no = master.groupby('year').apply(count_country)\ncountry_no.name = 'number_of_country'\ncountry_no","e0426b9e":"# I want to know the occurances of each 101 countries from 1985 - 2016. \ndef count_year(group):\n    return len(group.year.unique())\ncountry_o = master.groupby('country').apply(count_year).sort_values(ascending = False)\ncountry_o.name = 'occurances of country'\ncountry_o","dc0d752b":"# Find the number of country that appear less that 20 times over the 32 years\ncountry_o[country_o < 20]\n# There were 24 countries appear less than 20 times over the 32 years. \n# About 25% of country are missing more than 10 yr of data.","34aeed41":"coun_year = master.groupby('country-year').population.sum()\nfull_country_year_list = []\nfor year in range(1985,2017):\n    for country in master.country.unique():\n        full_country_year_list.append(country + str(year))\n        \nfull_country_year_df = pd.DataFrame(coun_year.reindex(full_country_year_list))\n\nfull_country_year_df['year'] = [i[-4:] for i in full_country_year_df.index]\nfull_country_year_df['country'] = [i[:-4] for i in full_country_year_df.index]\n\ncountry_year_pivot = pd.pivot_table(full_country_year_df,values = 'population',columns = 'country',index='year',aggfunc = 'count')\n\ncountry_year_pivot","c5f04ae2":"fig,axes = plt.subplots(figsize=(25,8))\nsns.heatmap(country_year_pivot,ax=axes)","5c6f9dca":"yr_grouped = master.groupby('year')\nannual_pop = yr_grouped.population.sum()\nannual_suicides = yr_grouped.suicides_no.sum()\nannual_sui_rate = annual_suicides\/annual_pop*100000\ncountry_df = pd.concat([country_no,annual_suicides,annual_pop],axis = 1)\ncountry_df['annual_sui_rate'] = country_df.suicides_no\/country_df.population*100000\ncountry_df.head(10)","b8a13961":"sns.heatmap(country_df.corr(),annot = True)","4ab89037":"fig,axes = plt.subplots(1,3,figsize=(18,4))\naxes[0].scatter(annual_pop,country_no)\naxes[1].scatter(annual_suicides,country_no)\naxes[2].scatter(annual_sui_rate,country_no)\nplt.subplots_adjust(wspace=0.1, hspace=1)\naxes[0].set_title('Annual Population and Number of Country')\naxes[0].set_xlabel('Total annual population')\naxes[0].set_ylabel('Nummber of country')\naxes[1].set_title('Annual Count of Suicides and Number of Country')\naxes[1].set_xlabel('Total annual count of suicides')\naxes[2].set_title('Annual Suicide Rate and Number of Country')\naxes[2].set_xlabel('Annual suicide rate')","be98e233":"country_df[country_df.number_of_country == country_no.min()]","ecf5d3cf":"# I drop data from 2016\n# drop 'HDI for year' columns for too many na value\n# drop 'country-year' and 'suicides\/100k pop' columns for I don't use them\nnmaster = master[~ (master.year == 2016)].drop(['HDI for year','country-year','suicides\/100k pop'],axis = 1)\nnmaster.head(10)","32ab89c2":"ncountry_o = nmaster.groupby('country').apply(count_year).sort_values(ascending = False)\nncountry_o[country_o >= 30] \n# what's Sweden doing over there? With a value of 29? Whyyyyy???","cddf7c7b":"# List of region that I selected, their data were collected continuely from 1985 to 2015\nncountry_o[country_o >= 31].index","89f88cca":"pmaster = nmaster[nmaster.country.isin(ncountry_o[country_o >= 31].index)]\nfig,axes = plt.subplots(figsize = (15,8))\nto_sui = pmaster.groupby(['year']).suicides_no.sum()\nto_pop = pmaster.groupby(['year']).population.sum()\nsui_rate = to_sui\/(to_pop\/100000)\naxes.bar(range(1985,2016),to_pop)\naxes1 =axes.twinx()\naxes1.plot(range(1985,2016),sui_rate,'ko--')\naxes1.set_yticks(range(8,13,1))\naxes.set_title('Total population and suicide rate from 1985 to 2015')\naxes.set_xlabel('year')\naxes.set_ylabel('total populaiton')\naxes1.set_ylabel('suicides rate')","f1d28229":"fig,axes = plt.subplots(3,1,figsize = (13,10))\nto_pop.plot(kind='bar', ax=axes[0],title = 'population',color = 'silver')\nto_sui.plot(kind = 'bar',ax = axes[1],title='count of suicides',color='silver')\naxes[2].plot(sui_rate,'ko--')\naxes[2].set_title('suicide rate')\nplt.subplots_adjust(hspace=0.6)","d98b9e8e":"country_sui_no = pmaster.groupby(['country']).suicides_no.sum()\ncountry_sui_no_sort = country_sui_no.sort_values()\ncountry_pop = pmaster.groupby(['country']).population.sum()\ncountry_sui_rate = country_sui_no\/country_pop*100000\nfig,axes = plt.subplots(1,2,figsize = (13,5))\ncountry_sui_no_sort.plot(kind = 'barh',ax = axes[0],title = 'Total count of suicides for countries')\ncountry_sui_rate.sort_values().plot(kind = 'barh',ax = axes[1],title = 'Suicides rate for countries')","88d95dd9":"# find the 5 highest count of suicides\ntop_count = country_sui_no_sort.nlargest(5)\ntop_count","15d1373a":"# find the 5 highest suicides rate\ntop_rate = country_sui_rate.nlargest(5)\ntop_rate","17ee5399":"top_count[top_count.index.isin(top_rate.index)].index","6d874a00":"age_group = pd.pivot_table(pmaster,index=['year'],values='suicides_no',columns=['age'],aggfunc=np.sum)\nsui_age=age_group[['5-14 years','15-24 years', '25-34 years', '35-54 years','55-74 years', '75+ years']]\nsui_age.plot(kind = 'bar',figsize=(10,6),stacked=True,title='How each age groups contribute to the count of suicides')","bced9064":"fig,axes = plt.subplots(1,3,figsize = (16,5))\nsui_age.plot(ax=axes[0],title = 'count of suicides for different age groups')\npop_group = pd.pivot_table(pmaster,index=['year'],values='population',columns=['age'],aggfunc=np.sum)\npop_age = pop_group[['5-14 years','15-24 years', '25-34 years', '35-54 years','55-74 years', '75+ years']]\npop_age.plot(ax=axes[1],title = 'population for different age groups')\nrate_age = sui_age\/pop_age*100000\nrate_age.plot(ax=axes[2],title = 'suicide rate for different age groups')","480a1edf":"# prepare a nested donut chart for age and sex (part i)\ngroup1=pmaster.groupby(['age','sex'],as_index = False).suicides_no.sum()\ngroup1['percent']=round(group1.suicides_no\/group1.suicides_no.sum()*100,2)\ngroup1['sex and percent'] = group1.sex + ' ' + group1.percent.apply(str) +'%'\ngroup1","d7dbfd86":"# prepare a nested donut chart for age and sex (part ii)\ngroup2 = group_by_age=pmaster.groupby('age').suicides_no.sum()\ngroup2 = group2.to_frame()\ngroup2['percent'] = round(group2.suicides_no\/group2.suicides_no.sum()*100,2)\ngroup2['age and percent'] = group2.index + ' ' + group2.percent.apply(str) +'%'\ngroup2","7ae8df9c":"# draw the nested donut chart\nfig, ax = plt.subplots()\nax.axis('equal')\nwidth = 1\ncm = plt.get_cmap(\"tab20c\")\ncout = cm(np.arange(6)*4)\npie, _ = ax.pie(group2.suicides_no, radius=4, labels=group2['age and percent'], colors=cout)\nplt.setp( pie, width=width, edgecolor='white')\ncin = cm(np.array([1,2,5,6,9,10,13,14,17,18,21,22]))\npie2, _ = ax.pie(group1.suicides_no, radius=4-width, labels=group1['sex and percent'],labeldistance=0.8,colors=cin)\nplt.setp( pie2, width=width, edgecolor='white')\nax.set_title('Nested donut chart for age and sex')","0ebd0157":"sex_ratio = pd.pivot_table(pmaster,values = 'suicides_no',index = ['age'],columns = ['sex'],aggfunc=np.sum)\nsex_ratio['ratio'] = sex_ratio.male\/sex_ratio.female\nsex_ratio.take([3,0,1,2,4,5])","9c30e674":"ratio_chart = sex_ratio.take([3,0,1,2,4,5]).ratio.plot(kind = 'bar',color = 'silver',figsize = (8,4),title = 'Sex ratio of each age group on count of suicides')\nratio_chart.set(ylabel = 'Sex ratio') \nratio_chart.tick_params(axis='x', rotation=0)","fb1315b3":"Check the sex ratio of each age group and look into the gender difference on the count of suisides. \n\nThe sex ratio = Male \/ Female","4ba274af":"There is less data collected in 2016, which causes the sudden drop of the count of suicides in 2016. That makes me start to think how the data was collected each year. ","f849018e":"Select random rows from the data frame","3e036974":"In 2016, the data were collected from 16 countries while in other years, data were collected from over 48 countries.","5519018b":"when I look into the country list of each year, I find that:\n\n* Every year, differnt list of country contribute to the total population, total count of suicides, sex, age group\n* The number of countributed country has a strong positive correlation with the total annual population and total annual count of suicides\n* Make a line graph on year with the raw data may lead us to draw inaccurate conclusion.","3c8d870c":"Check the total number of contributed country of each year (1985 - 2016).","3d6a7220":"Japan and Republic of Korea are in both top 5 total count of suicides and top 5 suicides rate groups.","21c33003":"* The sex ratio of each age group are all larger than 1, so the count of suicides of male is always larger than the female. \n* The largest gender different belongs to 25-34 age group, the corresponding count of suicided for Male : Female = 3.5 : 1","d89b7a23":"**A. Data cleaning**\n","cfd7af8f":"The table above indicates if the data of a country is available in the given year. \n\n0 -> data of the country in the given year isn't available \n\n1 -> data of the country in the given year is available \n\nThe graph below visualises the completeness of the dataset. The black square indicates missing values for the corresponding country and year","e15698bc":"Reference: \n\nMcKinney, Wes. (2012) *Python for Data Analysis*\n\nhttps:\/\/stackoverflow.com\/questions\/44153457\/double-donut-chart-in-matplotlib\n\nhttps:\/\/matplotlib.org\/gallery\/pie_and_polar_charts\/nested_pie.html#sphx-glr-gallery-pie-and-polar-charts-nested-pie-py","652bf2e4":"The dot at the bottom left cornor belongs to year 2016","43b21125":"Check for categorical variables, print the categorical columns names and values","12c51406":"Now, I want to know if the number of contributed country is correlated with the number of yearly population, yearly suicide number and suicides rate"}}