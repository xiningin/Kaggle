{"cell_type":{"0b1c04d3":"code","9260f81f":"code","49c1f4f3":"code","ca8bda6c":"code","9b90cb74":"code","c1c7bb9a":"code","7c3797cf":"code","886f66f7":"code","8fca2bd3":"code","f6ebfdb4":"code","1187f9c4":"code","38117702":"code","5720662b":"code","3c5392eb":"code","bde93964":"code","6693c949":"code","c1943b0b":"code","f50b06af":"code","a1ad05e7":"code","82cbc739":"code","6789e9f4":"code","cd5bb9db":"code","9c9e72ff":"code","945a049f":"code","126d69ee":"code","c21ae2cc":"code","0df35c6d":"code","fc48b31a":"code","3f6d07e1":"code","d604c963":"code","e9b521d2":"code","07e463a0":"code","3871f42c":"code","1afced9e":"code","bfb494b2":"code","79fafc66":"code","8f6a7b35":"code","f2e9449f":"code","848b7d0c":"code","948403ae":"code","536cbbd4":"code","3dc365e0":"code","2f68afb8":"code","384ff46a":"code","337dd805":"code","9c61911c":"code","99cc5c8b":"code","eebf73b7":"code","a439a312":"code","dea19c6b":"code","34e541c7":"code","131abda9":"code","2fb287c4":"code","a06b0c5b":"code","01c2be97":"code","ab3fdde1":"code","0c231306":"code","39d1c70e":"code","d745e331":"code","d8ff6a3a":"code","2d21760f":"code","8d1dbb01":"code","572a45dc":"code","b69ffda4":"code","41f238f8":"code","f35af460":"code","1174fbad":"code","e19baf81":"code","b4670203":"code","4a4681f9":"code","64c8c05f":"code","9ee50315":"code","af04e225":"code","81c8dc68":"code","be91b85a":"code","6097bd01":"code","a591ca49":"code","be7922ed":"code","ccda43a7":"code","a95a62cb":"code","f8ff4199":"code","4d637339":"code","a2367875":"code","41ebd485":"code","0c7cd70d":"code","759754d3":"code","4e3f8e18":"code","1104d0e4":"code","670e5b46":"code","1f26c2ab":"code","9779e6d0":"code","0025c9bb":"code","0d19c538":"code","8565334b":"code","8cc4e8fc":"code","f9a8d82c":"code","99ac2bb7":"code","ab8c8c54":"code","55a96a90":"code","022af448":"code","7784fb7a":"code","47460415":"code","376e2c28":"code","1e15b03f":"code","53f182d1":"code","901d04ee":"code","c232ac21":"code","9f852483":"code","b2b7a430":"code","8a32e06a":"code","5c4c1b22":"code","1ae26888":"code","55ab88e7":"code","0a0f0ab9":"code","6464b973":"code","8983a195":"code","7d38402f":"markdown","681ffcc9":"markdown","78eec633":"markdown","c0167f15":"markdown","ced91651":"markdown","ea728484":"markdown","075744b3":"markdown","a08e29b3":"markdown","3206482c":"markdown","fb48fac8":"markdown","a4ab4431":"markdown","b1d8a7f0":"markdown","b30f2b3f":"markdown","84835a13":"markdown","d25260e4":"markdown"},"source":{"0b1c04d3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9260f81f":"import matplotlib.pyplot as plot","49c1f4f3":"data=pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')","ca8bda6c":"import matplotlib.pyplot as plt\nimport seaborn as sns ","9b90cb74":"data.info()","c1c7bb9a":"data.corr()","7c3797cf":"f,ax = plt.subplots(figsize=(8,3))\nsns.heatmap(data.corr(),annot=True,linewidths=.5,fmt=\" .1f\",ax=ax)\nplt.show()","886f66f7":"data.head(8) # ilk 8 ki\u015fi","8fca2bd3":"data.tail(8) # Son 8 ki\u015fi","f6ebfdb4":"data.columns","1187f9c4":"#data.columns=[ i.split()[0]+\"_\"+i.split()[1]\"_\"+i.split()[2]\"_\"+i.split()[3] if (len(i.split()))==4 i.split()[0]+\"_\"+i.split()[1]\"_\"+i.split()[2] if (len(i.split()))==3 i.split()[0] +\"_\"+ i.split()[1] if (len(i.split()))==2 else i for i in data.columns]\n\n    \n#data.columns=[i.split()[0]+\"_\"+i.split()[1]+\"_\"i.split()[1]+\"_\"i.split()[1]+\"_\"  if len(i.split())>1 else i for i in data.columns]\n\n#data.rename(index = {\"parental level of education\": \"parental_level_of_education\", \n                    # \"math score\":\"math_score\"}, \n                    #             inplace = True) \ndata.columns = ['gender', 'race\/ethnicity', 'parental_level_of_education', 'lunch', \n                'test_preparation_course', 'math_score', 'reading_score', 'writing_score'] \ndata.columns","38117702":"data.reading_score.plot(kind =\"line\",color=\"b\",label=\"reading_score\",linewidth=2,alpha=.8,grid=False,linestyle=\":\")\ndata.math_score.plot(color=\"y\",label=\"math_score\",linewidth=1,alpha=0.9, grid=False,linestyle=\":\")\nplt.legend(loc=\"upper left\")\nplt.xlabel(\"x axis\")\nplt.ylabel(\"y axis\")\nplt.title(\"Line Plot\")\n","5720662b":"# Scatter Plot\ndata.plot(kind=\"scatter\",x=\"writing_score\",y=\"math_score\",alpha=.8,color=\"r\")\nplt.xlabel(\"writing_score\")\nplt.ylabel(\"math_score\")\nplt.title(\"writing_score math_score Scatter Plot \")","3c5392eb":"data.math_score.plot(kind=\"hist\",bins=30, figsize=(8,8))","bde93964":"dict={\"Ahmet\": 50, \"Mehmet\": 85, \"Veli\": 75}\nprint(dict.keys())\nprint(dict.values())","6693c949":"dict[\"Ahmet\"]= 65 # update existing entry\nprint(dict)\ndict[\"Deniz\"]=95 # add new entry\nprint(dict)\ndel dict[\"Mehmet\"] # delete entry with Mehmet\nprint(dict)\nprint(\"Veli\" in dict)\nprint(dict)\ndict.clear()\nprint(dict)","c1943b0b":"data=pd.read_csv(\"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\")","f50b06af":"series=data[\"gender\"]\nprint(type(series))\ndf= data[[\"gender\"]]\nprint(type(df))","a1ad05e7":"#Comporations operations\nprint(5>6)  # bool True or False\nprint(5!=6)\nprint(True and False)\nprint( True or False)","82cbc739":"data.columns = ['gender', 'race\/ethnicity', 'parental_level_of_education', 'lunch', \n                'test_preparation_course', 'math_score', 'reading_score', 'writing_score'] \ndata.columns","6789e9f4":"x = data[\"math_score\"]>95 # 1  filtering vith pandas dataframe\ndata[x]","cd5bb9db":"# 2 filtering pandas logical_and\ndata[np.logical_and(data[\"math_score\"]>95,data[\"writing_score\"]>95)]\n","9c9e72ff":"data[(data[\"math_score\"]>95) & (data[\"writing_score\"]>95)]","945a049f":"i=0\nwhile i<=8:\n    print(\"i is: \",i)\n    i+=1\nprint(\" i is equal to 8\")","126d69ee":"lis2=[1,2,3,4,5,6,7,8,9,10]\nfor i in lis2:\n    print(\"i is: \",i)\nprint(\" \")\n\nfor index,value in enumerate(lis2):\n    print(index ,\" : \", value)\nprint(\" \")\ndict={\"Ahmet\": 50, \"Mehmet\": 85, \"Veli\": 75}\nfor key, value in dict.items():\n    print(key,\" : \", value)\nprint(\" \")\n\nfor index, value in data[[\"reading_score\"]][0:2].iterrows():\n    print(index,\" : \", value)","c21ae2cc":"print (\"***************2. Part of Homework is begining***************\")","0df35c6d":"r=\"reading_score\"\nw=\"writing_score\"\nm=\"mat_score\"\ndef ort (r,w,m):\n    z=(r+w+m)\/3\n    print(\"ortalama: \",z)\n    return ort\n\"\"\"\u00dc\u00e7 notun ortalamas\u0131\"\"\"\nprint(ort(75,80,85))\n\n","fc48b31a":"x=90\ndef f():\n    x= 85\n    return x\nprint(x)\nprint(f())","3f6d07e1":"x=90\ndef f():\n    y=x+5\n    return y\nprint(x)\nprint(f())\n","d604c963":"import builtins\ndir(builtins)","e9b521d2":"r=6\npi=3.14 \ndef vol(): \n     \n    def ar ():  \n    \n        def crf(): # circumference\n            c=2*pi*r\n            return c\n        print(\"\u00c7emberin \u00c7evresi: \",crf(),\"cm\")\n        return crf()\/r*2 # area of circle = \"pi*r*r\" or \"r*(2*pi*r)\/2\"\n    print(\"Dairenin Alan\u0131: \",ar(),\"cm2\")\n    return ar()*4\/3*r # volume of sphere = 4\/3*pi*r*r*r or 4\/3*(pi*r*r)*r\n\n\nprint(\"K\u00fcrenin Hacmi: \",vol(),\"cm3\")\n    \n","07e463a0":"def vol (r,pi=3.14):\n    return 4\/3*pi*r**3\nprint(vol(5)) # pi is default\nprint(vol(5,3)) # pi is given \"3\"\n    ","3871f42c":"def f(*args):\n    for i in args:\n        print(i)\nf(\".a)\")\nprint(\"\")\nf(\".a)\",\".b)\",\".c)\",\".d)\")","1afced9e":"def f(**kwargs):\n    for key, value in kwargs.items():\n        print(key,\" \",value)\nf(student=\"Deniz\", Note=95, Genre=\"Male\")","bfb494b2":"vol= lambda r: 4\/3*3.14*r**3\nprint(vol(5))                   # pi = 3.14\nvol2= lambda r,pi: 4\/3*pi*r**3\nprint(vol2(5,3))                # pi = 3","79fafc66":"number_list=[2,4,6,8]\na=map(lambda b: b+b**2,number_list)\nprint(list(a))","8f6a7b35":"list1=[2,4,6,8]\nlist2=[\"a\",\"b\",\"c\",\"d\"]\nz=zip(list1,list2)\nprint(z)\nz_list=list(z)\nprint(z_list)","f2e9449f":"u_zip = zip ( *z_list)\nu_list1,u_list2 = list(u_zip)\nprint(\"List1= \",u_list1)\nprint(\"List2= \",u_list2)\n","848b7d0c":"data.columns","948403ae":"data.columns=['gender', 'race\/ethnicity', 'parental level of education', 'lunch',\n       'test preparation course', 'math score', 'reading score',\n       'writing score']\ndata.columns # \u0131 have deleted \"_\" at the colums words again","536cbbd4":"# I will put the \"_\" for space in the columns words again\n\ndata.columns=[ i.split()[0]+\"_\"+i.split()[1]+\"_\"+i.split()[2]+\"_\"+i.split()[3] if (len(i.split()))==4 else i.split()[0]+\"_\"+i.split()[1]+\"_\"+i.split()[2] if (len(i.split()))==3 else i.split()[0] +\"_\"+ i.split()[1] if (len(i.split()))==2 else i for i in data.columns]\ndata.columns","3dc365e0":"thresoldmat=sum(data.math_score)\/len(data.math_score)\ndata[\"Mat_level\"] = [\"High\"if i>thresoldmat else \"Low\" for i in data.math_score]\ndata.loc[:10,[\"Mat_level\",\"math_score\"]]","2f68afb8":"print(\"***************  3. Part of Homework is begining***************\")","384ff46a":"data.head()","337dd805":"data.tail()","9c61911c":"data.columns","99cc5c8b":"data.shape","eebf73b7":"data.info()","a439a312":"print(data[\"race\/ethnicity\"].value_counts(dropna = False))","dea19c6b":"print(data[\"parental_level_of_education\"].value_counts(dropna = False))","34e541c7":"data.describe()","131abda9":"data.boxplot(column=\"math_score\", by=\"test_preparation_course\")","2fb287c4":"data_nev=data.head()\ndata_nev","a06b0c5b":"melted=pd.melt(frame=data_nev,id_vars=\"math_score\",value_vars=[\"race\/ethnicity\",\"lunch\",\"reading_score\"])\nmelted","01c2be97":"melted.pivot(index = \"math_score\"  , columns=\"variable\",values=\"value\")","ab3fdde1":"dt1=data.head()\ndt2=data.tail()\nconc_dts=pd.concat([dt1,dt2],axis=0,ignore_index=True)\n","0c231306":"dt1","39d1c70e":"dt2","d745e331":"conc_dts","d8ff6a3a":"dt1b=data[\"math_score\"].head(10)\ndt2b=data[\"Mat_level\"].head(10)\nconc_dtss=pd.concat([dt1b,dt2b],axis=1)\nconc_dtss","2d21760f":"data.dtypes","8d1dbb01":"data[\"gender\"]=data[\"gender\"].astype(\"category\")\ndata[\"math_score\"]=data[\"math_score\"].astype(\"float\")\ndata.dtypes","572a45dc":"data[\"math_score\"].head()\n","b69ffda4":"data[\"gender\"].head()","41f238f8":"data.info()","f35af460":"print(\"there is no missing data in my work so I can't do nothing\")","1174fbad":"import pandas as pd","e19baf81":"#clas=[\"8\/A\",\"8\/B\"]\n#population=[\"24\",\"26\"]\n#list_label=[\"clas\",\"population\"]\n#list_col=[clas,population]\n#zp=list(zip(list_label,list_col))\n#datadic=dict(zp)\n#df=pd.DataFrame(datadic)\n#df","b4670203":"data  = data.loc[:,[\"math_score\",\"reading_score\",\"writing_score\"]]\n\ndata.plot()","4a4681f9":"data.plot(subplots =True)\nplt.show()","64c8c05f":"data.plot(kind=\"scatter\",x=\"math_score\",y=\"writing_score\")","9ee50315":"data.plot(kind=\"hist\", y= \"writing_score\",bins=50, range=(0,250), normed= True )","af04e225":"fig,axes = plt.subplots(nrows=2,ncols=1)\ndata.plot(kind=\"hist\", y= \"writing_score\",bins=50, range=(0,250), normed= True, ax=axes[0])\ndata.plot(kind=\"hist\", y= \"writing_score\",bins=50, range=(0,250), normed= True, ax=axes[1], cumulative =True )\nplt.savefig('graph.png')\nplt","81c8dc68":"data.describe()","be91b85a":"time_list = [\"1995-09-19\",\"1991-04-21\"]\nprint(type(time_list))\ndatatime_object = pd.to_datetime(time_list)\nprint(type(datatime_object))\n","6097bd01":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\ndata2=data.head()\ndata_list=[\"1992-01-10\",\"1992-02-10\",\"1992-03-10\",\"1993-03-15\",\"1993-03-16\"]\ndatetime_object = pd.to_datetime(data_list)\ndata2[\"date\"]=datetime_object\n# data2=data2.set_index(\"date\")\ndata2","a591ca49":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\ndata2=data.head()\ndata_list=[\"1992-01-10\",\"1992-02-10\",\"1992-03-10\",\"1993-03-15\",\"1993-03-16\"]\ndatetime_object = pd.to_datetime(data_list)\ndata2[\"date\"]=datetime_object\ndata2=data2.set_index(\"date\") # For indexing\ndata2","be7922ed":"print(data2.loc[\"1993-03-15\"])\nprint(data2.loc[\"1992-02-15\":\"1993-03-15\"]) # Look the first Time","ccda43a7":"print(data2.loc[\"1993-03-15\"])\nprint(data2.loc[\"1992-02-10\":\"1993-03-15\"]) # Look the first Time and now","a95a62cb":"data2.resample(\"A\").mean()","f8ff4199":"data2.resample(\"M\").mean()","4d637339":"data2.resample(\"M\").first().interpolate(\"linear\")","a2367875":"data2.resample(\"M\").mean().interpolate(\"linear\")","41ebd485":"data = pd.read_csv(\"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\")\n#data = data.set_index(\"gender\")\ndata.tail(10)","0c7cd70d":"a = [i for i in range(1,1001)]\nprint(a)","759754d3":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\ndata3=data.head(1000)\ndata_list1=a\n#datetime_object1 = pd.to_datetime(data_list1)\ndata3[\"#\"]=data_list1\ndata3=data3.set_index(\"#\")\ndata3","4e3f8e18":"data[\"lunch\"][2]","1104d0e4":"data.lunch[2]","670e5b46":"data.loc[2,[\"lunch\"]]","1f26c2ab":"data[[\"lunch\",\"math score\"]]","9779e6d0":"print(type(data[\"math score\"])) # Seri\nprint(type(data[[\"math score\"]])) # data Frame","0025c9bb":"data.loc[1:10,\"gender\":\"math score\"]","0d19c538":"data.loc[10:1:-1,\"gender\":\"math score\"]","8565334b":"data.loc[1:10,\"math score\":]","8cc4e8fc":"boolean= data[\"math score\"]>98\ndata[boolean]","f9a8d82c":"first_filter =data[\"reading score\"]>99\nsecond_filter =data[\"math score\"]>98\ndata[first_filter&second_filter]","99ac2bb7":"data[data[\"math score\"]<20]","ab8c8c54":"data[\"reading score\"][data[\"math score\"]<20]","55a96a90":"def div (n):\n    return n\/2\ndata[\"math score\"].apply(div)","022af448":"data[\"math score\"].apply(lambda n : n\/2)","7784fb7a":"data[\"total_score\"]= data[\"math score\"]+data[\"reading score\"]+data[\"writing score\"]\ndata.head()","47460415":"print(data3.index.name)","376e2c28":"data3.index.name =\"index\"\ndata3.head()","1e15b03f":"data3.head()\ndata4 =data3.copy()\ndata4.index= range(100,1100,1)\ndata4.head()","53f182d1":"data.head()","901d04ee":"data5= data.set_index([\"gender\",\"race\/ethnicity\"])\ndata5.head(100)","c232ac21":"dic = {\"treatment\":[\"A\",\"A\",\"B\",\"B\"],\"gender\":[\"F\",\"M\",\"M\",\"F\"],\"response\":[\"15\",\"45\",\"20\",\"9\"],\"age\":[\"15\",\"4\",\"72\",\"65\"]}\ndf= pd.DataFrame(dic)\ndf","9f852483":"df.pivot(index=\"treatment\",columns =\"gender\",values=\"response\")","b2b7a430":"df1=df.set_index([\"treatment\",\"gender\"])\ndf1","8a32e06a":"df1.unstack(level=0)","5c4c1b22":"df2 =df1.swaplevel(0,1)\ndf2","1ae26888":"df","55ab88e7":"pd.melt(df,id_vars=\"treatment\",value_vars=[\"age\",\"response\"])","0a0f0ab9":"df","6464b973":"df.groupby(\"treatment\").mean()","8983a195":"df.info()","7d38402f":"### Index object and labeled data","681ffcc9":"**PANDAS FOUNDAT\u0130ON**","78eec633":"# NESTED FUNCTION","c0167f15":"### Statistical Data Analysis","ced91651":"### Indexing Pandas Time Series\n","ea728484":"### Stacking and unstacking dataframe","075744b3":"### Filtering Data Frames\n","a08e29b3":"### Categoricals and groupby","3206482c":"# LIST COMPREHENS\u0130ON\n","fb48fac8":"### Hierarchical index","a4ab4431":"### Pivoting data frames\n","b1d8a7f0":"### Melting Data Frames","b30f2b3f":"### Manipulating Data Frmes With Pandas","84835a13":"### Resampling pandas time series\n","d25260e4":"### Transforming data"}}