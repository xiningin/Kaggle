{"cell_type":{"3c124267":"code","90750531":"code","ab960776":"code","be17bdfd":"code","eaf99bd6":"code","f7d6fd0a":"code","9bdf4b1a":"code","c828377d":"code","675d2818":"code","ad1794fa":"markdown","16c7a57a":"markdown"},"source":{"3c124267":"import os\nimport glob\nimport cv2\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom scipy import stats\n\n\n\n%matplotlib inline\n%config InlineBackend.figure_format = 'retina'","90750531":"train_df = pd.read_csv('..\/input\/landmark-retrieval-2020\/train.csv')\ntrain_df.head()","ab960776":"plt.title('landmark_id distribution')\nsns.distplot(train_df['landmark_id'])","be17bdfd":"sns.set()\nplt.title('Training set: number of images per class(line plot)')\nlandmarks_fold = pd.DataFrame(train_df['landmark_id'].value_counts())\nlandmarks_fold.reset_index(inplace=True)\nlandmarks_fold.columns = ['landmark_id','count']\nax = landmarks_fold['count'].plot(logy=True, grid=True)\nlocs, labels = plt.xticks()\nplt.setp(labels, rotation=30)\nax.set(xlabel=\"Landmarks\", ylabel=\"Number of images\")","eaf99bd6":"sns.set()\nlandmarks_fold_sorted = pd.DataFrame(train_df['landmark_id'].value_counts())\nlandmarks_fold_sorted.reset_index(inplace=True)\nlandmarks_fold_sorted.columns = ['landmark_id','count']\nlandmarks_fold_sorted = landmarks_fold_sorted.sort_values('landmark_id')\nax = landmarks_fold_sorted.plot.scatter(\\\n     x='landmark_id',y='count',\n     title='Training set: number of images per class(statter plot)')\nlocs, labels = plt.xticks()\nplt.setp(labels, rotation=30)\nax.set(xlabel=\"Landmarks\", ylabel=\"Number of images\")","f7d6fd0a":"test_list = glob.glob('..\/input\/landmark-retrieval-2020\/test\/*\/*\/*\/*')\nindex_list = glob.glob('..\/input\/landmark-retrieval-2020\/index\/*\/*\/*\/*')\nprint( 'Query', len(test_list), ' test images in ', len(index_list), 'index images')","9bdf4b1a":"plt.rcParams[\"axes.grid\"] = False\nf, axarr = plt.subplots(4, 3, figsize=(24, 22))\n\ncurr_row = 0\nfor i in range(12):\n    example = cv2.imread(test_list[i])\n    example = example[:,:,::-1]\n    \n    col = i%4\n    axarr[col, curr_row].imshow(example)\n    if col == 3:\n        curr_row += 1\n            \n","c828377d":"plt.imshow(example)\nplt.show()","675d2818":"from zipfile import ZipFile\n\nwith ZipFile('submission.zip','w') as zip:           \n  zip.write('..\/input\/baseline-landmark-retrieval-model\/baseline_landmark_retrieval_model\/saved_model.pb', arcname='saved_model.pb') \n  zip.write('..\/input\/baseline-landmark-retrieval-model\/baseline_landmark_retrieval_model\/variables\/variables.data-00000-of-00001', arcname='variables\/variables.data-00000-of-00001') \n  zip.write('..\/input\/baseline-landmark-retrieval-model\/baseline_landmark_retrieval_model\/variables\/variables.index', arcname='variables\/variables.index') ","ad1794fa":"### ------------------The End-----------------------","16c7a57a":"# Google Landmark Retrieval 2020\n### Given an image, can you find all of the same landmarks in a dataset?"}}