{"cell_type":{"80e5756e":"code","cd3500d2":"code","773a3587":"code","61626bf3":"code","8bcf48cc":"code","12d14e5a":"code","08d4d8ae":"code","b12e8e5d":"code","b53b36cf":"code","ae46149a":"code","f11ada94":"code","df42a778":"code","af2acae1":"code","51127b68":"code","3549f8b7":"code","08460ff5":"code","887020f5":"code","12f5f9d5":"code","dc6c98ab":"code","76f50752":"code","fb3420c6":"code","4bd98a9f":"code","75414866":"code","6d3ae0d2":"code","a3176075":"code","4a1269dc":"code","9e515eaa":"code","14b20dd5":"code","0de67061":"code","04739149":"code","3b3e30f6":"code","928b104c":"code","daca5576":"code","8226bb35":"code","42b3a081":"code","6866c850":"code","2af99418":"code","83e4dac0":"code","68ef3ce1":"code","d5eb0543":"code","79e8b738":"code","00ed1d25":"code","bcae63ae":"code","7420a9ae":"code","b35218bf":"code","e9eea4f5":"code","17632502":"markdown","00df1e9b":"markdown","020f4905":"markdown","1d5909be":"markdown","eca67fa0":"markdown","067cefd9":"markdown","5c957be8":"markdown"},"source":{"80e5756e":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n!pip install openpyxl","cd3500d2":"data=pd.read_csv('..\/input\/mhdata\/data.csv')","773a3587":"data","61626bf3":"data.describe()","8bcf48cc":"data.info()","12d14e5a":"data.isnull().values.any()","08d4d8ae":"mhdata = data.iloc[:,1:]\nmhdata_norm = (data - data.mean()) \/ data.std()\nmhdata_norm","b12e8e5d":"sns.set(style=\"whitegrid\")\n\nsns.set(rc={'figure.figsize':(4,2)})\nsns.boxplot(x=data['Positive'])\nplt.show()\nsns.boxplot(x=data['Recovered'])\nplt.show()\nsns.boxplot(x=data['Deceased'])\nplt.show()","b53b36cf":"Q1=data.quantile(0.25)\nQ3=data.quantile(0.75)\nIQR=Q3-Q1\n\nprint(\"Q1\\n\",Q1)\nprint(\"Q3\\n\",Q3)\nprint(\"IQR\\n\",IQR)","ae46149a":"import matplotlib.pyplot as plt\n#date vs positive cases\nplt.scatter(data['Day'],data['Positive'])","f11ada94":"\nimport matplotlib.pyplot as plt\n#date vs recovered cases\nplt.scatter(data['Day'],data['Recovered'])","df42a778":"import matplotlib.pyplot as plt\n#date vs deceased cases\nplt.scatter(data['Day'],data['Deceased'])","af2acae1":"x = data['Day'].values.reshape(-1,1)\ny = data[['Positive']].values.reshape(-1,1)","51127b68":"x","3549f8b7":"y","08460ff5":"from sklearn.model_selection import train_test_split\ntrain_x,test_x,train_y,test_y=train_test_split(x,y,test_size=0.3)","887020f5":"train_x.shape,test_x.shape,train_y.shape,test_y.shape","12f5f9d5":"from sklearn.linear_model import LinearRegression\nc=LinearRegression()","dc6c98ab":"c.fit(train_x,train_y)","76f50752":"c.predict(test_x)","fb3420c6":"c.score(test_x,test_y)","4bd98a9f":"import statsmodels.api as s\ntest=data['Day']\ncase=data['Positive']\ntest1=s.add_constant(test)\nmodel=s.OLS(case,test1)\nresult=model.fit()\nprint(result.summary())","75414866":"reg=LinearRegression()\nreg.fit(x,y)","6d3ae0d2":"reg.intercept_,reg.coef_","a3176075":"x = data['Day'].values.reshape(-1,1)\ny = data[['Recovered']].values.reshape(-1,1)","4a1269dc":"x","9e515eaa":"y","14b20dd5":"from sklearn.model_selection import train_test_split\ntrain_x,test_x,train_y,test_y=train_test_split(x,y,test_size=0.3)","0de67061":"train_x.shape,test_x.shape,train_y.shape,test_y.shape","04739149":"from sklearn.linear_model import LinearRegression\nc=LinearRegression()","3b3e30f6":"c.fit(train_x,train_y)","928b104c":"c.predict(test_x)","daca5576":"import statsmodels.api as s\ntest=data['Day']\ncase=data['Recovered']\ntest1=s.add_constant(test)\nmodel=s.OLS(case,test1)\nresult=model.fit()\nprint(result.summary())","8226bb35":"reg=LinearRegression()\nreg.fit(x,y)","42b3a081":"reg.intercept_,reg.coef_","6866c850":"x = data['Day'].values.reshape(-1,1)\ny = data[['Deceased']].values.reshape(-1,1)","2af99418":"x","83e4dac0":"y","68ef3ce1":"from sklearn.model_selection import train_test_split\ntrain_x,test_x,train_y,test_y=train_test_split(x,y,test_size=0.3)","d5eb0543":"train_x.shape,test_x.shape,train_y.shape,test_y.shape","79e8b738":"from sklearn.linear_model import LinearRegression\nc=LinearRegression()","00ed1d25":"c.fit(train_x,train_y)","bcae63ae":"c.predict(test_x)","7420a9ae":"import statsmodels.api as s\ntest=data['Day']\ncase=data['Deceased']\ntest1=s.add_constant(test)\nmodel=s.OLS(case,test1)\nresult=model.fit()\nprint(result.summary())","b35218bf":"reg=LinearRegression()\nreg.fit(x,y)","e9eea4f5":"reg.intercept_,reg.coef_","17632502":"### Casualities Analysis","00df1e9b":"### Background\nPredictive analytics tools are powered by several different models and algorithms that can be applied to wide range of use cases. Determining what predictive modeling techniques are best for your project is key to getting the most out of a predictive analytics solution and leveraging data to make insightful decisions\n\n\n### Methodology\n\n* Acquire the dataset\n* Import all the crucial libraries\n* Import the dataset\n* Identifying\u00a0&\u00a0handling\u00a0\u00a0missing values\n* Encoding the categorical\u00a0data\n* Feature scaling\n* Splitting the data\n\n### Future Scope\nDeploying the same using Flask on Heroku or GitHub","020f4905":"### Recovered Analysis","1d5909be":"### Data Preprocessing","eca67fa0":"### Data Visualization","067cefd9":"### Training and Testing","5c957be8":"### Results of Linear Regression"}}