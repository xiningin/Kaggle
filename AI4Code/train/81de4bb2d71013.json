{"cell_type":{"52ab2820":"code","48ab8b99":"code","33f1d002":"code","168ddc2e":"code","9f1523a6":"code","adf4ba7b":"code","51cf8132":"code","5ae91836":"code","5eee82cf":"code","7cda5803":"code","54370cc9":"code","8e3cf141":"code","b93ecc29":"code","dbc20f87":"code","803e7857":"code","a00a2195":"code","0f6e785f":"code","18727551":"code","875735b9":"code","8ae129d8":"code","a7ff8282":"code","e9006d3e":"code","9b7d0f5f":"code","e7a5c4a0":"code","0004b63e":"code","170fc180":"code","c35b2868":"code","1ca5f0ac":"code","8f71d295":"code","441a9384":"code","022a28f7":"code","01cebf91":"markdown","e32e7207":"markdown","d54bbe52":"markdown","d7de95fa":"markdown","336ca6b1":"markdown","beb02a73":"markdown","96b81e4c":"markdown","f729c024":"markdown","4ce7c3cd":"markdown","2c7b2c38":"markdown","29c22286":"markdown","96c903d3":"markdown"},"source":{"52ab2820":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\n\nimport warnings\n\npd.set_option('display.max_columns', 100)\npd.set_option('display.max_rows', 100)","48ab8b99":"df = pd.read_csv(\"..\/input\/mobile-price-classification\/train.csv\")","33f1d002":"df.head()","168ddc2e":"df.info()","9f1523a6":"df.describe()","adf4ba7b":"x = df.columns.tolist()\n\nfig = go.Figure(go.Bar(x = x, y = df.count().tolist(), name='non-NaN'))\nfig.add_trace(go.Bar(x = x, y = df.isnull().sum(axis = 0).tolist(), name='NaN'))\n\nfig.update_layout(barmode='stack', title_text=\"NaN Value Check Bar Chart\", uniformtext=dict(mode=\"hide\", minsize=10), xaxis_title = \"Columns\", yaxis_title = \"Number of samples\")\n\nfig.show()","51cf8132":"fig = go.Figure(data=[go.Bar(\n            x = df[\"price_range\"].index, y = df['price_range'].value_counts(),\n            text = df['price_range'].value_counts(),\n            textposition = 'auto',\n        )])\n\nfig.update_layout(\n    autosize=False,\n    width=500,\n    height=500,\n    yaxis_title = \"Price range\",\n    xaxis_title = \"Number of samples\"\n)\n\nfig.show()","5ae91836":"corr = df.corr()\nfig = plt.figure()\nplt.figure(figsize=(12,8))\nr = sns.heatmap(corr)\nr.set_title(\"Correlation Heatmap\")","5eee82cf":"corr.sort_values(by=['price_range'], ascending = False)['price_range']","7cda5803":"fig = px.scatter(y = df.ram, x = df[\"price_range\"], title='Effect of ram on price')\n\nfig.update_layout(\n    autosize=False,\n    width=500,\n    height=500,\n    yaxis_title = \"Ram\",\n    xaxis_title = \"Price Range\"\n)\n\nfig.show()","54370cc9":"\nfig = make_subplots(rows=2, cols=1)\n\nfig.append_trace(\n    go.Scatter(\n        y = df[\"battery_power\"],\n        x = df[\"ram\"],\n        mode='markers',\n        marker=dict(\n            size=16,\n            color= df[\"price_range\"],\n            showscale=True\n        )\n    ), row=1, col=1)\n\nfig.append_trace(\n    go.Scatter(\n        y = df[\"talk_time\"],\n        x = df[\"ram\"],\n        mode='markers',\n        marker=dict(\n            size=16,\n            color= df[\"price_range\"],\n            showscale=True\n        )\n    ), row=2, col=1)\n\n\n\nfig.update_xaxes(title_text=\"Ram\", row=1, col=1)\nfig.update_yaxes(title_text=\"Battery power\", row=1, col=1)\n\nfig.update_xaxes(title_text=\"Ram\", row=2, col=1)\nfig.update_yaxes(title_text=\"Talk time\", row=2, col=1)\n\n\nfig.update_layout(title_text=\"Relationship of battery power and talk time with ram\",showlegend=False, height=900)\nfig.show()\n","8e3cf141":"fig = go.Figure()\nfig.add_trace(go.Histogram(x = df[\"fc\"], name='Front camera'))\nfig.add_trace(go.Histogram(x = df[\"pc\"], name='Primary camera'))\n\nfig.update_traces(opacity=0.65)\n\nfig.update_layout(\n    barmode='overlay',\n    title_text='Number of phones with camera megapixels of front and primary camera',\n    xaxis_title_text='Megapixel', \n    yaxis_title_text='Count')\nfig.show()","b93ecc29":"fig = px.box(df, x = \"three_g\", y = \"ram\", color=\"price_range\" , points = \"all\")\n\nfig.update_layout(\n    barmode='overlay',\n    title_text='Ram values according to 3G and price range',\n    xaxis_title_text='Megapixel', \n    yaxis_title_text='Count'\n)\n\nfig.show()","dbc20f87":"fig = px.box(df, x = \"four_g\", y = \"ram\", color=\"price_range\" , points = \"all\")\n\nfig.update_layout(\n    barmode='overlay',\n    title_text='Ram values according to 4G and price range',\n    xaxis_title_text='Megapixel', \n    yaxis_title_text='Count'\n)\n\n\n\nfig.show()","803e7857":"X = df.drop('price_range',axis=1)\nY = df['price_range']","a00a2195":"X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.33, random_state=101)","0f6e785f":"knn = KNeighborsClassifier(n_neighbors=10)\nknn.fit(X_train,y_train)","18727551":"knn.score(X_test,y_test)","875735b9":"neighbors = list(range(1,50,2))\ncv_scores = []\n\nfor K in neighbors:\n    knn = KNeighborsClassifier(n_neighbors = K)\n    scores = cross_val_score(knn,X_train,y_train,cv = 10,scoring =\n    \"accuracy\")\n    cv_scores.append(scores.mean())\n\n# Changing to mis classification error\nmse = [1-x for x in cv_scores]\n\n# Determing best k\noptimal_k = neighbors[mse.index(min(mse))]\nprint(\"The optimal no. of neighbors is {}\".format(optimal_k))","8ae129d8":"df_accuracy = pd.DataFrame({\"K\":[i for i in range(1,50,2)], \"Accuracy\":cv_scores})\nfig = px.bar(df_accuracy, x='K', y='Accuracy')\n\nfig.update_yaxes(range = [0.8,1])\nfig.show()","a7ff8282":"knn = KNeighborsClassifier(n_neighbors=45)\nknn.fit(X_train,y_train)","e9006d3e":"pred = knn.predict(X_test)","9b7d0f5f":"print(classification_report(y_test,pred))","e7a5c4a0":"print(confusion_matrix(y_test,pred))","0004b63e":"fig = px.imshow(confusion_matrix(y_test,pred), labels=dict(color=\"Count\"),)\nfig.update_layout(\n    autosize=False,\n    width=500,\n    height=500\n)\nfig.show()","170fc180":"df_test=pd.read_csv('..\/input\/mobile-price-classification\/test.csv')","c35b2868":"df_test.head()","1ca5f0ac":"df_test = df_test.drop('id',axis=1)","8f71d295":"df_test_pred = knn.predict(df_test)","441a9384":"df_test['price_range'] = df_test_pred","022a28f7":"df_test","01cebf91":"<a id=\"1\"><\/a>\n# Import libraries","e32e7207":"# **Mobile Price Data Analysis and Modelling**\n\n### In this kernel, I will try to find the factors that will affect the prices of phones using the mobile price dataset. At the end of the kernel, I will try to use K-Nearest Neighbors (KNN) for estimating the price ranges of the phones with other information. If you have any suggestions, advice or correction please don't hesitate to write them.\n\n    \n<center><img src=\"https:\/\/assets.newatlas.com\/dims4\/default\/91d6f6a\/2147483647\/strip\/true\/crop\/3000x2000+0+125\/resize\/1200x800!\/quality\/90\/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F81%2F53%2Fbb28f58a4b3fbf2210443d6157c7%2F01comparisonhero.jpg\"><\/center>","d54bbe52":"Here, you can see that the price range has highly positive correlation between ram. In addition to that, 3G and 4G, primary camera mega pixels and front camera mega pixels has positive correlation. Additionally, px_weight and px_height, sc_w and sc_h has high positive correlation.","d7de95fa":"# Table of contents:\n\n* [1. Import libraries](#1)\n* [2. Basic Data Analysis](#2)\n* [3. Exploratory Data Analysis and Visualization](#3)\n* [4. Modeling](#4)","336ca6b1":"<a id=\"2\"><\/a>\n# Basic Data Analysis\nIn this section we will do a quick look through the data.","beb02a73":"# Introduction\n\nBob has started his own mobile company. He wants to give tough fight to big companies like Apple,Samsung etc.\n\nHe does not know how to estimate price of mobiles his company creates. In this competitive mobile phone market you cannot simply assume things. To solve this problem he collects sales data of mobile phones of various companies.\n\nBob wants to find out some relation between features of a mobile phone(eg:- RAM,Internal Memory etc) and its selling price. But he is not so good at Machine Learning. So he needs your help to solve this problem.\n\nIn this problem we need to predict price range of mobile phones.","96b81e4c":"Here we are checking the existence of NaN values in our dataset. As you can see there is not any NaN value in the dataset.","f729c024":"**Thank You!** If you have any suggestion or advice or feedback, I will be very appreciated to hear them.","4ce7c3cd":"<a id=\"4\"><\/a>\n# Modelling","2c7b2c38":"Here I tried to find the optimal count of neighbors for KNN.","29c22286":"<a id=\"3\"><\/a>\n# Exploratory Data Analysis and Visualization","96c903d3":"From this data we can say that ram of the phone is the most significat factor in price range because it has high correlation."}}