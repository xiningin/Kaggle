{"cell_type":{"f811f049":"code","545be323":"code","11aae29b":"code","013174c0":"code","8358edba":"code","0fd7fd9c":"code","6bacfdc1":"code","3274e8f7":"code","2e1f9315":"markdown","c1de630a":"markdown","7d2bb8b4":"markdown","e500c1d4":"markdown","1017e479":"markdown","8b52495a":"markdown","e16ef324":"markdown","100cc0f8":"markdown","b89aa6b4":"markdown","b7030fd1":"markdown","928e5fec":"markdown","a798f007":"markdown","e0cd7cae":"markdown","bcfbfeda":"markdown","9987c8a1":"markdown","f3bb7bf4":"markdown","c89e1c02":"markdown","a006dd41":"markdown"},"source":{"f811f049":"!pip install pycaret\n!python -m spacy download en_core_web_sm\n!python -m textblob.download_corpora\nimport os\nimport pandas as pd\nimport pycaret\nfrom pycaret.nlp import *","545be323":"df_tweets = pd.read_csv(\"\/kaggle\/input\/clinton-trump-tweets\/tweets.csv\")\ndf_tweets.head()","11aae29b":"# filtering data for Hillary Clinton tweets\ndf_tweets_hc = df_tweets[df_tweets['handle'] == \"HillaryClinton\"].reset_index(drop=True)\nprint(df_tweets_hc.shape)\ndf_tweets_hc.head()","013174c0":"df = df_tweets_hc.sample(1000, random_state=493).reset_index(drop=True)\nprint(df.shape)\ndf.head()","8358edba":"# initialize the setup\nnlp = setup(data = df, target = 'text', session_id = 493, custom_stopwords = [ 'rt', 'https', 'http', 'co', 'amp'])\n","0fd7fd9c":"# create the model\nlda = create_model('lda', num_topics = 6, multi_core = True)","6bacfdc1":"# label the data using trained model\ndf_lda = assign_model(lda)\ndf_lda.head()","3274e8f7":"plot_model(lda, plot='topic_distribution')\nplot_model(lda, plot='topic_model')\nplot_model(lda, plot='wordcloud', topic_num = 'Topic 5')\nplot_model(lda, plot='frequency', topic_num = 'Topic 5')\nplot_model(lda, plot='bigram', topic_num = 'Topic 5')\nplot_model(lda, plot='trigram', topic_num = 'Topic 5')\nplot_model(lda, plot='distribution', topic_num = 'Topic 5')\nplot_model(lda, plot='sentiment', topic_num = 'Topic 5')","2e1f9315":"## Setting Up the Environment","c1de630a":"In the line below, notice that w param used 'lda' as the parameter. LDA stands for Latent Dirichlet Allocation. We could\u2019ve just as easily opted for other types of models.\n\n\nHere\u2019s the list of models that PyCaret currently supports:\n* \u2018lda\u2019: Latent Dirichlet Allocation\n* \u2018lsi\u2019: Latent Semantic Indexing\n* \u2018hdp\u2019: Hierarchical Dirichlet Process\n* \u2018rp\u2019: Random Projections\n* \u2018nmf\u2019: Non-Negative Matrix Factorization","7d2bb8b4":"## Assigning the Model","e500c1d4":"# What is Pycaret?","1017e479":"##  *In this notebook, I tried to explore the nlp module of pycaret library by running a topic model on Hillary Clinton's sample tweet*","8b52495a":"## Read data","e16ef324":"References: \n* https:\/\/pycaret.org\/\n* https:\/\/towardsdatascience.com\/topic-modeling-on-pycaret-2ce0c65ba3ff","100cc0f8":"PyCarets offers a variety of plots. The type of graph generated will depend on the plot parameter. Here is the list of currently available visualizations:","b89aa6b4":"## Filter data for hillary clinton tweets ","b7030fd1":"## Loading and installing relevant packages","928e5fec":"PyCaret is an open source, low-code machine learning library in Python that allows you to go from preparing your data to deploying your model within minutes in your choice of notebook environment.\n\nURL: https:\/\/pycaret.org\/","a798f007":"**Do remember to upvote if the notebook was helpful. It will motivate me in publishing more notebooks!! :-))**\n    \nCheers!!","e0cd7cae":"* \u2018frequency\u2019: Word Token Frequency (default)\n* \u2018distribution\u2019: Word Distribution Plot\n* \u2018bigram\u2019: Bigram Frequency Plot\n* \u2018trigram\u2019: Trigram Frequency Plot\n* \u2018sentiment\u2019: Sentiment Polarity Plot\n* \u2018pos\u2019: Part of Speech Frequency\n* \u2018tsne\u2019: t-SNE (3d) Dimension Plot\n* \u2018topic_model\u2019 : Topic Model (pyLDAvis)\n* \u2018topic_distribution\u2019 : Topic Infer Distribution\n* \u2018wordcloud\u2019: Word cloud\n* \u2018umap\u2019: UMAP Dimensionality Plot","bcfbfeda":"## Creating the Model","9987c8a1":"Thanks for amazing feedback on my last (which was my first) kaggle notebook.\n\nLink: https:\/\/www.kaggle.com\/snooptosh\/intro-oop-in-python ","f3bb7bf4":"*Using PyCaret library, we can easily experiment with Topic Models in a few lines of code. We covered the functions involved in each step and examined the parameters of those functions*","c89e1c02":"## Plotting the Model","a006dd41":"## Take 1000 sample rows"}}