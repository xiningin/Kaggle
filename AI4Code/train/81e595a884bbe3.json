{"cell_type":{"f61da1b0":"code","d7107127":"code","247434d6":"code","82180c38":"code","4a157998":"code","6bfd4f23":"code","979888e8":"code","a967fa31":"code","8a718adb":"code","c3254866":"code","2c0c9184":"code","48dcbe70":"code","77c9b2cc":"code","07102384":"markdown","f2ef23d1":"markdown"},"source":{"f61da1b0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d7107127":"df = pd.read_csv('..\/input\/open-medic-2017\/OPEN_MEDIC_2017.CSV',sep=';',encoding='latin-1')\ndf.head()","247434d6":"# checking dataset\n\nprint (\"Rows     : \" ,df.shape[0])\nprint (\"Columns  : \" ,df.shape[1])\nprint (\"\\nFeatures : \\n\" ,df.columns.tolist())\nprint (\"\\nMissing values :  \", df.isnull().sum().values.sum())\nprint (\"\\nUnique values :  \\n\",df.nunique())","82180c38":"plt.figure(figsize=(20,4))\nplt.subplot(131)\nsns.countplot(x= 'L_ATC4', data = df, palette=\"GnBu_d\",edgecolor=\"black\")\nplt.subplot(132)\nsns.countplot(x= 'L_ATC5', data = df, palette=\"flag\",edgecolor=\"black\")\nplt.subplot(133)\nsns.countplot(x= 'L_CIP13', data = df, palette=\"Greens_r\",edgecolor=\"black\")\nplt.show()","4a157998":"plt.figure(figsize=(20,4))\nplt.subplot(131)\nsns.countplot(x= 'ATC1', data = df, palette=\"GnBu_d\",edgecolor=\"black\")\nplt.subplot(132)\nsns.countplot(x= 'l_ATC1', data = df, palette=\"flag\",edgecolor=\"black\")\nplt.xticks(rotation=45)\nplt.subplot(133)\nsns.countplot(x= 'ATC2', data = df, palette=\"Greens_r\",edgecolor=\"black\")\nplt.xticks(rotation=45)\nplt.show()","6bfd4f23":"plt.figure(figsize=(16,10))\nsns.countplot(x=\"L_ATC2\",data=df,palette=\"flag\",edgecolor=\"black\")\nplt.title('Therapeutic Sub-Group Label', weight='bold')\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)\n# changing the font size\nsns.set(font_scale=1)","979888e8":"#Code from Gabriel Preda\n\ndef plot_count(feature, title, df, size=1):\n    f, ax = plt.subplots(1,1, figsize=(4*size,4))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:20], palette='Set3')\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()","a967fa31":"plot_count(\"L_ATC2\", \"Therapeutic Sub-Group Label\", df,4)","8a718adb":"plt.figure(figsize=(20, 12))\nplt.subplot(121)\nsns.boxplot(x = 'CIP13', y = 'L_ATC2', data = df)\nplt.subplot(122)\nsns.boxplot(x = 'CIP13', y = 'l_ATC1', data = df)\nplt.show()","c3254866":"# Distribution of different type of amount\nfig , ax = plt.subplots(1,3,figsize = (12,5))\n\nCIP13 = df.CIP13.values\nGEN_NUM= df.GEN_NUM.values\nAGE = df.AGE.values\n\nsns.distplot(CIP13 , ax = ax[0] , color = 'pink').set_title('Pharmaceutical Specialty Identification Code' , fontsize = 14)\nsns.distplot(GEN_NUM , ax = ax[1] , color = 'cyan').set_title('Generic Group' , fontsize = 14)\nsns.distplot(AGE , ax = ax[2] , color = 'purple').set_title('Age' , fontsize = 14)\n\n\nplt.show()","2c0c9184":"import plotly.express as px\nfig = px.line(df, x=\"ATC1\", y=\"l_ATC1\", color_discrete_sequence=['darksalmon'], \n              title=\"Anatomical Main Group ID & Label\")\nfig.show()","48dcbe70":"anticaries = df[(df['L_ATC4']=='MEDICAMENTS PROPHYLACTIQUES ANTICARIES')].reset_index(drop=True)\nanticaries.head()","77c9b2cc":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in anticaries.L_ATC4)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","07102384":"Das War's, Kagle Notebook Runner: Mar\u00edlia Prata  @mpwolke","f2ef23d1":"#How to read characteres en fran\u00e7ais.  Using encoding='latin-1'"}}