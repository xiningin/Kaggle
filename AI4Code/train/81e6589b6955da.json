{"cell_type":{"1d058fd1":"code","d1f78a56":"code","4d173dc3":"code","46ff8f2c":"code","234f9357":"code","f9e42865":"code","95f43f13":"code","f99e13c9":"code","ff004180":"code","a272e416":"code","61432c80":"code","26b6ee26":"code","b22f056c":"code","19395523":"code","e6f4352b":"code","f150d24d":"code","a1fa1885":"code","318a0d4e":"code","7cd4b5d9":"markdown","9dda9016":"markdown","814159a8":"markdown"},"source":{"1d058fd1":"%matplotlib inline\nimport matplotlib.pyplot as plt\nplt.rcParams['figure.figsize'] = [15, 7.5]\nimport numpy as np\nimport pandas as pd\nimport string\nfrom collections import Counter\nfrom Crypto.Cipher import *\nfrom cryptography import *\nimport hashlib, hmac, secrets, base64\nfrom sympy import primerange\nimport os\ntrain = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')","d1f78a56":"level_one = train[train['difficulty']==1].copy()\nlevel_one['ciphertext'] = level_one['ciphertext'].map(lambda x: str(x)[:300])\nhist = Counter(' '.join(level_one['ciphertext'].astype(str).values))\ncph = pd.DataFrame.from_dict(hist, orient='index').reset_index()\ncph.columns = ['ciph', 'ciph_freq']\ncph = cph.sort_values(by='ciph_freq', ascending=False).reset_index(drop=True)\ncph.plot(kind='bar')","4d173dc3":"# num chars in level 1 cipher\ncph['ciph_freq'].sum()","46ff8f2c":"from sklearn.datasets import fetch_20newsgroups\nnews = fetch_20newsgroups(subset='train')","234f9357":"news.keys()","f9e42865":"news['data'][0:5]","95f43f13":"plain = news['data'][:1420]","f99e13c9":"plain_char_sample = Counter(' '.join(plain))\npt = pd.DataFrame.from_dict(plain_char_sample, orient='index').reset_index()\npt.columns = ['char', 'freq']\npt = pt.sort_values(by='freq', ascending=False).reset_index(drop=True)\npt.plot(kind='bar')","ff004180":"# num plain chars in news sample, very rough now\npt['freq'].sum()","a272e416":"fq_comp=cph\nfq_comp['char']=pt['char']\nfq_comp['freq']=pt['freq']\nfq_comp.head(10)","61432c80":"fq_comp.plot(kind='bar')","26b6ee26":"more_plain = news['data'][:10000]","b22f056c":"more = Counter(' '.join(more_plain))\nmpt = pd.DataFrame.from_dict(more, orient='index').reset_index()\nmpt.columns = ['char', 'freq']\nmpt = mpt.sort_values(by='freq', ascending=False).reset_index(drop=True)","19395523":"mpt['freq'].sum()","e6f4352b":"fq_comp2=cph\nfq_comp2['char']=mpt['char']\nfq_comp2['freq']=mpt['freq']\nfq_comp2['ratio']=fq_comp2['freq']\/fq_comp2['ciph_freq']\nfq_comp2.head(10)","f150d24d":"fq_comp2['ratio'].plot(kind='bar')","a1fa1885":"fq_comp2[['ciph', 'char', 'ratio']].sort_values(by='ratio', ascending=False)","318a0d4e":"#chars by frequency from this limited sample\nfmap=pd.Series(fq_comp2.char.values, fq_comp2.ciph.values).to_dict()\nfmap","7cd4b5d9":"code borrowed from https:\/\/www.kaggle.com\/jazivxt\/enigma-layers-template , thanks!","9dda9016":"so far level one is consistent with a monoalphabetic substitution, probably combined with transposition. \nlooks like something weird is going on with the spaces... but we can check","814159a8":"this is mostly consistent with a simple substitution, something weird is going on with a few of the chars though, the highest and lowest ratios are way outside the rest, but level one and the sample plaintext are probably not totally comprable, still, clues."}}