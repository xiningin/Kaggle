{"cell_type":{"df0910ae":"code","b0272ec6":"code","8ad9bfae":"code","f8aa0215":"code","21dfbf19":"code","d397865e":"code","7d201c96":"code","84175fed":"markdown","7f9f36d6":"markdown","661c3000":"markdown"},"source":{"df0910ae":"from google.cloud import bigquery\n\n# Create client object to access database\nclient = bigquery.Client()\n\n# Specify dataset for high level overview of data\ndataset_ref = client.dataset(\"stackoverflow\", \"bigquery-public-data\")\ndataset = client.get_dataset(dataset_ref)\n\n# List all the tables\ntables = client.list_tables(dataset)\nfor table in tables:  \n    print(table.table_id)","b0272ec6":"table_ref = dataset_ref.table(\"posts_answers\")\ntable = client.get_table(table_ref)\n# See the first five rows of data\nclient.list_rows(table, max_results=5).to_dataframe()","8ad9bfae":"table_ref = dataset_ref.table(\"posts_questions\")\ntable = client.get_table(table_ref)\nclient.list_rows(table, max_results=5).to_dataframe()","f8aa0215":"bytes_per_gb = 2**30\njob_config = bigquery.QueryJobConfig(dry_run=True)\nresult = client.query(\n    (\n\"\"\"\nWITH bq_questions as (\nSELECT title, accepted_answer_id \nFROM `bigquery-public-data.stackoverflow.posts_questions` \nWHERE tags like '%bigquery%' and accepted_answer_id is not NULL\n)\nSELECT ans.* \nFROM bq_questions inner join `bigquery-public-data.stackoverflow.posts_answers` ans\nON ans.Id = bq_questions.accepted_answer_id\n\"\"\"\n    ),\n    job_config=job_config\n)\nprint(\"This query will process {} GB.\".format(result.total_bytes_processed \/\/ bytes_per_gb))","21dfbf19":"bytes_per_gb = 2**30\njob_config = bigquery.QueryJobConfig(maximum_bytes_billed=1)\nresult = client.query(\n    (\n\"\"\"\nWITH bq_questions as (\nSELECT title, accepted_answer_id \nFROM `bigquery-public-data.stackoverflow.posts_questions` \nWHERE tags like '%bigquery%' and accepted_answer_id is not NULL\n)\nSELECT ans.* \nFROM bq_questions inner join `bigquery-public-data.stackoverflow.posts_answers` ans\nON ans.Id = bq_questions.accepted_answer_id\n\"\"\"\n    ),\n    job_config=job_config\n)\nresult.to_dataframe()","d397865e":"query = \"\"\"\n        WITH bq_questions AS \n        (\n            SELECT title, accepted_answer_id \n            FROM `bigquery-public-data.stackoverflow.posts_questions` \n            WHERE tags like '%bigquery%' and accepted_answer_id is not NULL\n        )\n        SELECT ans.* \n        FROM bq_questions \n        INNER JOIN `bigquery-public-data.stackoverflow.posts_answers` ans\n            ON ans.Id = bq_questions.accepted_answer_id\n        \"\"\"\n\nresult = client.query(query).result().to_dataframe()","7d201c96":"result.head()","84175fed":"# Introduction\n\nThe last exercise in [Intro to SQL](https:\/\/www.kaggle.com\/learn\/sql) built the queries for an **Expert-Finder** website. This website could identify the StackOverflow users that answered questions on any technical topic.\n\nBut the StackOverflow data is very large. So, if your website serves 1000s of requests a day, you should optimize the queries to lower operating cost and keep your website snappy. In this exercise, you'll practice optimizing these types of queries to see how efficient you can make them.\n\n## Quick data overview\n\nAs a reminder, here are the tables in the publicly available Stack Overflow dataset.","7f9f36d6":"## Review structure of answers data\nYour primary focus is finding users who answered questions. For this, you will need to use the `posts_answers` table. Here is a preview of this data.","661c3000":"You may notice that the `tags` field is empty. Here's a quick overview of the `posts_questions` table, which can be joined to the `posts_answers` table, and which has useful `tags` data for most questions."}}