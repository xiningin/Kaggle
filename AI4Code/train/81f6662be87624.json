{"cell_type":{"799d63e6":"code","02fd07a3":"code","a78264aa":"code","4f6f0970":"code","6b3f4b16":"code","47188e7a":"code","c244ccc9":"code","fb0e8913":"code","20565047":"code","0d11a898":"code","0f2a019d":"code","9e628f2c":"code","fee03cff":"code","89be7c88":"code","b0f06351":"code","a8dc1364":"code","2084d7ed":"code","4038b8f8":"code","9ca6dc23":"code","b74529b0":"code","711507d7":"code","aa828d94":"code","ffd88d07":"code","61a7e6c1":"code","e9d547b2":"code","1ffb6977":"code","589bb8be":"code","830e655f":"code","27f24a43":"code","8e7e0762":"markdown","1ac2aea0":"markdown","d823cb5d":"markdown","b15a8273":"markdown","71e4efbb":"markdown","77a83fe4":"markdown","a5a70400":"markdown","aa5f9ca0":"markdown","e8e9bd02":"markdown"},"source":{"799d63e6":"\nimport numpy as np\nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","02fd07a3":"df = pd.read_csv(\"\/kaggle\/input\/tipping\/tips.csv\")","a78264aa":"df = pd.concat([df, pd.get_dummies(df[\"sex\"],prefix=\"sex\")], axis=1)\ndf = pd.concat([df, pd.get_dummies(df[\"day\"],prefix=\"day\")], axis=1)\ndf = pd.concat([df, pd.get_dummies(df[\"time\"],prefix=\"time\")], axis=1)\ndf = pd.concat([df, pd.get_dummies(df[\"smoker\"],prefix=\"smoker\")], axis=1)\ndf.head()","4f6f0970":"columns_to_scale = ['tip', 'size', 'total_bill']","6b3f4b16":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nscaled_columns = pd.DataFrame(scaler.fit_transform(df[columns_to_scale]),columns=columns_to_scale)\nscaled_columns.describe()","47188e7a":"df.drop([\"total_bill\", \"tip\", \"size\", \"smoker\", \"sex\",\"day\", \"time\"], axis = 1, inplace = True)\ndf = pd.concat([df, scaled_columns], axis = 1)","c244ccc9":"df.head()","fb0e8913":"df.drop([\"sex_Female\",\"time_Dinner\", \"smoker_No\"], axis=1, inplace=True)","20565047":"Y = df.tip\nX = df.loc[:,df.columns!=\"tip\"]","0d11a898":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.1)","0f2a019d":"from sklearn.svm import SVR\nsvregressor = SVR()\nsvregressor.fit(X_train, y_train)\npredsvr = svregressor.predict(X_test)","9e628f2c":"from sklearn.metrics import r2_score\nprint(r2_score(y_test, predsvr))","fee03cff":"from sklearn.metrics import mean_squared_error\nprint(mean_squared_error(y_test, predsvr))","89be7c88":"from sklearn.metrics import mean_absolute_error\nprint(mean_absolute_error(y_test, predsvr))","b0f06351":"from sklearn.model_selection import cross_val_score\ncross_val_score(svregressor, X, Y, cv=10).mean()","a8dc1364":"import sklearn\nfrom sklearn import metrics\nsklearn.metrics.SCORERS.keys()","2084d7ed":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import r2_score\nparam_grid = [ {\"C\":[0.0001, 0.01, 0.1, 1, 10], \"kernel\":[\"poly\", \"linear\", \"rbf\"], \"gamma\":[0.0001, 0.01, 0.1, 1, 10]}]\ngrid_search = GridSearchCV(svregressor, param_grid, cv=5)\ngrid_search.fit(X, Y)\ngrid_search.best_estimator_","4038b8f8":"grid_search.best_score_","9ca6dc23":"from sklearn.model_selection import RandomizedSearchCV\nfrom scipy.stats import uniform\ndistributions = dict(C = uniform(loc = 0, scale = 4), kernel=[\"poly\",\"rbf\",\"linear\"])\nrandom = RandomizedSearchCV(svregressor, distributions, random_state=0)\nsearch = random.fit(X, Y)\nsearch.best_params_","b74529b0":"df.head()","711507d7":"Y = df.sex_Male\nX = df.loc[:,df.columns!=\"sex_Male\"]","aa828d94":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.1, stratify = Y)","ffd88d07":"from sklearn.svm import SVC\nsvc = SVC()\nsvc.fit(X_train, y_train)\npredsvc = svc.predict(X_test)","61a7e6c1":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, predsvc))","e9d547b2":"from sklearn.model_selection import cross_val_score\ncross_val_score(svc, X, Y, cv=10).mean()","1ffb6977":"from sklearn.model_selection import StratifiedKFold\nskf = StratifiedKFold(n_splits=10)\nscores = cross_val_score(svc, X, Y, cv=skf)\nprint(\"skorlar:\\n{}\".format(scores))\nprint(\"skorlar\u0131n ortalamas\u0131:\\n{}\".format(scores.mean()))","589bb8be":"from sklearn.model_selection import GridSearchCV\nparam_grid = [ {\"C\":[0.0001, 0.01, 0.1, 1, 10], \"kernel\":[\"poly\", \"linear\", \"rbf\"], \"gamma\":[0.0001, 0.01, 0.1, 1, 10]}]\ngrid_search_c = GridSearchCV(svc, param_grid, cv = 5, scoring = \"accuracy\")\ngrid_search_c.fit(X, Y)\ngrid_search_c.best_estimator_","830e655f":"from sklearn.model_selection import RandomizedSearchCV\nfrom scipy.stats import uniform\ndistributions = dict(C = uniform(loc = 0, scale = 4), kernel=[\"poly\",\"rbf\",\"linear\"])\nrandom_c = RandomizedSearchCV(svc, distributions, random_state=0)\nsearch_c = random_c.fit(X, Y)\nsearch_c.best_params_","27f24a43":"search_c.best_score_","8e7e0762":"# # Random Search Cross Validation\nBurada 0'la d\u00f6rt aras\u0131 bir uniform distribution i\u00e7inde C de\u011ferlerini ar\u0131yoruz.\nuniform[loc, loc+scale]","1ac2aea0":"Stratified K Fold","d823cb5d":"# Tuning","b15a8273":"# S\u0131n\u0131fland\u0131rma","71e4efbb":"# **Model E\u011fitme**","77a83fe4":"# Regresyon i\u00e7in \u00d6ni\u015fleme","a5a70400":"Grid Search Cross Validation","aa5f9ca0":"## De\u011ferlendirme","e8e9bd02":"# Do\u011frulama "}}