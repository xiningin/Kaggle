{"cell_type":{"405e6d68":"code","16b82312":"code","6de40826":"code","e7302813":"code","5d8d10c5":"code","15101df7":"code","81966a0a":"code","1d841bbb":"code","b83b9d9d":"code","01aaac01":"code","d7ba591d":"code","53efbad6":"code","8ecb9ce8":"code","dc12a115":"code","bc260f7b":"code","2081d173":"code","4150562c":"code","a498c371":"code","d3987b3a":"code","efa57b12":"code","3cedf2ec":"code","6b3d36f3":"code","e85d1e8d":"code","b7662eb7":"code","6b482fa1":"code","228d3a4e":"code","266a6126":"code","73cb4598":"code","827425d8":"code","5ddf8472":"code","d43b7f13":"code","8a22615e":"code","d55d82d8":"code","07b9b650":"code","7c4b521a":"code","d0f97111":"code","8cb2dcb5":"code","408ead75":"markdown","e80d080b":"markdown","6f6a6d19":"markdown","2d137243":"markdown","37c31c0e":"markdown","cf16b383":"markdown","68ea3949":"markdown","48378389":"markdown","17e6f2c2":"markdown","0d5fe584":"markdown","e48d840a":"markdown","2e894479":"markdown","d520693f":"markdown","a6bae387":"markdown","5843ae66":"markdown","06602f59":"markdown","d97e14e1":"markdown","7aac7fe1":"markdown","8eb2caba":"markdown","46edf2fb":"markdown","da081adf":"markdown","1f9a7b43":"markdown","adcb8311":"markdown","60a281ef":"markdown"},"source":{"405e6d68":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\nfrom keras import models, layers\nfrom sklearn.model_selection import train_test_split\nfrom keras.utils import np_utils\n\nsns.set_theme(style=\"whitegrid\")\nsns.set_context('poster')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","16b82312":"df = pd.read_csv('\/kaggle\/input\/iris-flower-dataset\/IRIS.csv')","6de40826":"df.shape","e7302813":"df.head()","5d8d10c5":"df.describe()","15101df7":"df.info()","81966a0a":"df.isnull().sum()","1d841bbb":"sns.distplot(df.loc[:, 'sepal_length']);","b83b9d9d":"sns.distplot(df.loc[:, 'sepal_width']);","01aaac01":"sns.distplot(df.loc[:, 'petal_length']);","d7ba591d":"sns.distplot(df.loc[:, 'petal_width']);","53efbad6":"sns.boxplot(y='sepal_length', data=df);","8ecb9ce8":"sns.boxplot(y='sepal_width', data=df);","dc12a115":"sns.boxplot(y='petal_length', data=df);","bc260f7b":"sns.boxplot(y='petal_width', data=df);","2081d173":"ax = sns.boxplot(y='sepal_length', x='species', data=df, );\n\nax.set_xticklabels(ax.get_xticklabels(),rotation=25);","4150562c":"ax = sns.boxplot(y='sepal_width', x='species', data=df, );\n\nax.set_xticklabels(ax.get_xticklabels(),rotation=25);","a498c371":"ax = sns.boxplot(y='petal_length', x='species', data=df, );\n\nax.set_xticklabels(ax.get_xticklabels(),rotation=25);","d3987b3a":"ax = sns.boxplot(y='petal_width', x='species', data=df, );\n\nax.set_xticklabels(ax.get_xticklabels(),rotation=25);","efa57b12":"sns.set_context('talk')\nsns.pairplot(df);","3cedf2ec":"df.shape","6b3d36f3":"data = df.iloc[:, :-1]\ntargets = df.iloc[:, -1]","e85d1e8d":"data.head()","b7662eb7":"targets.head()","6b482fa1":"train_data, test_data, train_targets, test_targets = train_test_split(data, targets, test_size=0.2)","228d3a4e":"mean = train_data.mean()\nstd = train_data.std()\n\ntrain_data -= mean\ntrain_data \/= std\n\ntest_data -= mean\ntest_data \/= std","266a6126":"train_data.head()","73cb4598":"test_data.head()","827425d8":"train_targets = pd.get_dummies(train_targets)","5ddf8472":"test_targets = pd.get_dummies(test_targets)","d43b7f13":"train_targets.head()","8a22615e":"test_targets.head()","d55d82d8":"model = models.Sequential()\n\nmodel.add(layers.Dense(10, input_shape=(train_data.shape[1],), activation='relu'))\n\nmodel.add(layers.Dense(3, activation='softmax'))\n\nmodel.compile(optimizer='Adam', loss='categorical_crossentropy', metrics=['accuracy'])\n\nhistory = model.fit(train_data, train_targets, epochs=100, batch_size=16, validation_split=0.15)","07b9b650":"plt.figure(figsize=(10, 10))\nacc = history.history['accuracy']\nval_acc = history.history['val_accuracy']\nepochs = range(1, 101)\nplt.plot(epochs, acc, label='Accuracy', linewidth=5);\nplt.plot(epochs, val_acc, label='Validation Accuracy', linewidth=8);\nplt.legend();\nplt.xlabel('Epochs');\nplt.ylabel('Accuracy');\nplt.title('Train and Validation Accuracy');","7c4b521a":"model = models.Sequential()\n\nmodel.add(layers.Dense(10, input_shape=(train_data.shape[1],), activation='relu'))\n\nmodel.add(layers.Dense(3, activation='softmax'))\n\nmodel.compile(optimizer='Adam', loss='categorical_crossentropy', metrics=['accuracy'])\n\nhistory = model.fit(train_data, train_targets, epochs=40, batch_size=16, validation_split=0.15)","d0f97111":"eval_ = model.evaluate(test_data, test_targets)","8cb2dcb5":"print(f'Evaluation Accuracy is {((eval_[1])*100):.2f}%')","408ead75":"-> petal length and petal width seem to linearly related","e80d080b":"-> Multimodal distribution","6f6a6d19":"-> model starts overfitting after 40 epochs","2d137243":"![iris](https:\/\/images.unsplash.com\/photo-1611427396096-660d74e1c318?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=967&q=80)","37c31c0e":"# Multivariate Analysis","cf16b383":"-> no missing data","68ea3949":"All the features are numeric, prediction target is categorical","48378389":"                                                                                   \u2764\u2764\u2764","17e6f2c2":"# Handling Missing Data","0d5fe584":"-> Sepal length is distributed normally","e48d840a":"# Evaluation","2e894479":"# Univariate Analysis","d520693f":"# Exploratory Data Analysis","a6bae387":"## Splitting Data","5843ae66":"# Bivariate Analysis","06602f59":"-> normally distributed!","d97e14e1":"-> there are some outliers present in sepal width","7aac7fe1":"## Data Prep","8eb2caba":"# Neural Network Implementation","46edf2fb":"# Final Model","da081adf":"# Standardization","1f9a7b43":"# Building Model","adcb8311":"-> Multimodal distribution","60a281ef":"# Encoding Prediction Target"}}