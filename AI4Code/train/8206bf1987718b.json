{"cell_type":{"236ea120":"code","b2e78300":"code","efea6db7":"code","b9308573":"code","2af8d398":"code","f4d51bcb":"code","eece187d":"code","2fb6991a":"code","669d3760":"code","2ddb3ba4":"code","8955dd8a":"code","f1b98a8d":"code","06656f2b":"code","cfecb8e9":"code","56f36ba4":"code","e7ccc825":"code","faa4b449":"code","af9adbbd":"code","82a1c79a":"code","b520eacf":"code","c0f3236b":"code","4012bd29":"code","158bc992":"code","be88890f":"code","dd5f8b7f":"code","b0348035":"code","c95cb78c":"code","5afed5b4":"code","a90d4868":"code","f19854a0":"code","fc15a9e3":"code","12403e6e":"code","31cca800":"code","fbdf4291":"code","3cb71c12":"code","24d911ec":"code","0b9fc057":"code","25e954af":"code","a9616bd1":"code","ab35cb76":"code","cebe13fb":"code","786f70b4":"code","470134a1":"code","81095683":"code","710fb610":"code","bdcd93bd":"code","f92c7e72":"markdown","852c66c6":"markdown","2e9165b0":"markdown","58a31448":"markdown","b38bca0f":"markdown","05b2f78f":"markdown","846c03cd":"markdown","50be6c69":"markdown","e8dd71bf":"markdown","8c7cddf7":"markdown","ac44b6c2":"markdown","478321cc":"markdown","bea58f86":"markdown","a15c5c0a":"markdown","4d12b551":"markdown","e6865143":"markdown","a71d8e35":"markdown","1e9676bb":"markdown","10a6044a":"markdown","81e0c963":"markdown","1f0a5e2b":"markdown","3e857efb":"markdown"},"source":{"236ea120":"import pandas as pd\n\nx_train = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/Datamanim\/dataq\/main\/X_train.csv\", encoding = 'euc-kr')\ny_train = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/Datamanim\/dataq\/main\/y_train.csv\")\nx_test = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/Datamanim\/dataq\/main\/X_test.csv\", encoding = 'euc-kr')","b2e78300":"x_train.set_index(x_train['cust_id'], inplace=True) # \uc778\ub371\uc2a4\uc758 \uccab \uceec\ub7fc\uc744 \uc778\ub371\uc2a4\ub85c \uc0ac\uc6a9\ny_train.set_index(y_train['cust_id'], inplace=True)\nx_test.set_index(x_test['cust_id'], inplace=True)","efea6db7":"x_train","b9308573":"y_train","2af8d398":"x_test","f4d51bcb":"x_test.isnull().sum()","eece187d":"x_test['\ud658\ubd88\uae08\uc561'].describe()","2fb6991a":"x_train.isnull().sum()","669d3760":"x_train['\ud658\ubd88\uae08\uc561'].describe()","2ddb3ba4":"x_test['\ud658\ubd88\uae08\uc561'] = x_test['\ud658\ubd88\uae08\uc561'].fillna(0)\nx_train['\ud658\ubd88\uae08\uc561'] = x_train['\ud658\ubd88\uae08\uc561'].fillna(0)","8955dd8a":"x_test.isnull().sum()","f1b98a8d":"x_train.isnull().sum()","06656f2b":"x_test.dtypes","cfecb8e9":"x_train.dtypes","56f36ba4":"from sklearn.preprocessing import LabelEncoder","e7ccc825":"x_train.loc[:,['\uc8fc\uad6c\ub9e4\uc0c1\ud488', '\uc8fc\uad6c\ub9e4\uc9c0\uc810']] = x_train.loc[:,['\uc8fc\uad6c\ub9e4\uc0c1\ud488', '\uc8fc\uad6c\ub9e4\uc9c0\uc810']].apply(LabelEncoder().fit_transform)\nx_test.loc[:,['\uc8fc\uad6c\ub9e4\uc0c1\ud488', '\uc8fc\uad6c\ub9e4\uc9c0\uc810']] = x_test.loc[:,['\uc8fc\uad6c\ub9e4\uc0c1\ud488', '\uc8fc\uad6c\ub9e4\uc9c0\uc810']].apply(LabelEncoder().fit_transform)","faa4b449":"x_test.dtypes","af9adbbd":"features = ['\ucd1d\uad6c\ub9e4\uc561', '\ucd5c\ub300\uad6c\ub9e4\uc561', '\ud658\ubd88\uae08\uc561', '\uc8fc\uad6c\ub9e4\uc0c1\ud488', '\uc8fc\uad6c\ub9e4\uc9c0\uc810', '\ub0b4\uc810\uc77c\uc218', '\ub0b4\uc810\ub2f9\uad6c\ub9e4\uac74\uc218', '\uc8fc\ub9d0\ubc29\ubb38\ube44\uc728', '\uad6c\ub9e4\uc8fc\uae30']","82a1c79a":"X = x_train[features]","b520eacf":"X","c0f3236b":"Y = y_train['gender']","4012bd29":"Y","158bc992":"x_test[features] #x_test data\ub294 \ud559\uc2b5\uc5d0 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc74c","be88890f":"from sklearn.model_selection import train_test_split\n\n'''\nimport numpy as np\n    >>> from sklearn.model_selection import train_test_split\n    >>> X, y = np.arange(10).reshape((5, 2)), range(5)\n    >>> X\n    array([[0, 1],\n           [2, 3],\n           [4, 5],\n           [6, 7],\n           [8, 9]])\n    >>> list(y)\n    [0, 1, 2, 3, 4]\n    \n    >>> X_train, X_test, y_train, y_test = train_test_split(\n    ...     X, y, test_size=0.33, random_state=42)\n    ...\n    >>> X_train\n    array([[4, 5],\n           [0, 1],\n           [6, 7]])\n    >>> y_train\n    [2, 0, 3]\n    >>> X_test\n    array([[2, 3],\n           [8, 9]])\n    >>> y_test\n    [1, 4]\n    \n    >>> train_test_split(y, shuffle=False)\n    [[0, 1, 2], [3, 4]]\n    '''","dd5f8b7f":"import numpy as np\n\nx_train, x_valid, y_train, y_valid = train_test_split(X, Y, random_state=0)","b0348035":"x_train","c95cb78c":"x_valid","5afed5b4":"from sklearn.ensemble import RandomForestClassifier\n'''\nExamples\n |  --------\n |  >>> from sklearn.ensemble import RandomForestClassifier\n |  >>> from sklearn.datasets import make_classification\n |  >>> X, y = make_classification(n_samples=1000, n_features=4,\n |  ...                            n_informative=2, n_redundant=0,\n |  ...                            random_state=0, shuffle=False)\n |  >>> clf = RandomForestClassifier(max_depth=2, random_state=0)\n |  >>> clf.fit(X, y)\n |  RandomForestClassifier(...)\n |  >>> print(clf.predict([[0, 0, 0, 0]]))\n |  [1]\n '''","a90d4868":"x_train","f19854a0":"y_train","fc15a9e3":"case = RandomForestClassifier(max_depth=5, random_state=0)","12403e6e":"case = RandomForestClassifier(random_state = 0)","31cca800":"case.fit(x_train, y_train)","fbdf4291":"valid_pred = case.predict(x_valid)","3cb71c12":"x_valid","24d911ec":"valid_pred","0b9fc057":"x_valid","25e954af":"from sklearn.metrics import roc_auc_score\n# help(sklearn.metrics.roc_auc_score)\n# print(mean_absolute_error(y_valid, valid_pred))\nprint(roc_auc_score(y_valid, valid_pred))\n'''\n >>> import numpy as np\n    >>> from sklearn.metrics import roc_auc_score\n    >>> y_true = np.array([0, 0, 1, 1])\n    >>> y_scores = np.array([0.1, 0.4, 0.35, 0.8])\n    >>> roc_auc_score(y_true, y_scores)\n    0.75\n'''","a9616bd1":"test_pred = case.predict(x_test[features])","ab35cb76":"test_pred","cebe13fb":"# from sklearn.ensemble import RandomForestClassifier\na = case.predict_proba(x_test[features])","786f70b4":"a","470134a1":"manprob = a[:,1]","81095683":"output = pd.DataFrame({'cust_id' : x_test.cust_id,\n                      'gender': manprob})","710fb610":"output","bdcd93bd":"output.to_csv('output.csv', index=False)","f92c7e72":" x_train data\uc758 \uacb0\uce21\uac12 \ud655\uc778","852c66c6":"### \uce90\uae00 \ub178\ud2b8\ubd81 \"Upvote\"\ubc0f \ud314\ub85c\uc6b0 \ud074\ub9ad \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\n### Git \uc800\uc7a5\uc18c \"Star\"\ud074\ub9ad \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\n\n# \u203b\uc790\uaca9\uc99d \ucde8\ub4dd \uc774\ud6c4\uc5d0\ub3c4 \uafb8\uc900\ud788 \uacf5\ubd80\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.\u203b","2e9165b0":"x_test data\uc640 x_train data\uc758  \ud658\ubd88\uae08\uc561 \uceec\ub7fc\uc758 \uacb0\uce21\uac12\uc744 0\uc73c\ub85c \ubcc0\ud658","58a31448":"### \ub370\uc774\ud130 \uc804\ucc98\ub9ac \ubc0f EDA","b38bca0f":"### \uac80\uc99d \ubaa8\ub378 \ud3c9\uac00\uc9c0\ud45c \ud655\uc778 \ud6c4 \ubaa8\ub378 \uacb0\uc815 \ubc0f \ucd5c\uc885 test data \uc608\uce21","05b2f78f":"x_train data \uacb0\uce21\uac12 \uceec\ub7fc \uc815\ubcf4 \ud655\uc778","846c03cd":"### \ud559\uc2b5\uc14b\uacfc \uac80\uc99d\uc14b\uc744 \ubd84\ub9ac","50be6c69":"### \uc778\ub371\uc2a4 \ube7c\uace0 CSV\ub85c \uc800\uc7a5\ud574 \uc8fc\uae30","e8dd71bf":"# \uc791\uc5c5\ud615 \uc81c 2\uc720\ud615 \uc608\uc2dc\ubb38\uc81c","8c7cddf7":"x_train.dtypes","ac44b6c2":"object\ub370\uc774\ud130\ub294 \ubaa8\ub378\ud559\uc2b5\uc5d0 \uc0ac\uc6a9\ud558\ub824\uba74 \ubcc0\ud658\ud574 \uc8fc\uc5b4\uc57c\ud568.","478321cc":"### \ud3c9\uac00\uc9c0\ud45c \ud655\uc778","bea58f86":"### \ubaa8\ub378\ub9c1","a15c5c0a":"### \ubaa8\ub378 \uac80\uc99d","4d12b551":"\ub370\uc774\ud130 \ud0c0\uc785 \ubcc0\ud658\ub410\ub294\uc9c0 \ud655\uc778\ud574\ubcf8\ub2e4.","e6865143":"\ub370\uc774\ud130\uc758 \ub370\uc774\ud130 \ud0c0\uc785 \ud655\uc778","a71d8e35":"x_test data \uacb0\uce21\uac12 \uceec\ub7fc \uc815\ubcf4 \ud655\uc778","1e9676bb":"### \ub370\uc774\ud130 \ub85c\ub4dc","10a6044a":"x_test data \uacb0\uce21\uac12 \ud655\uc778","81e0c963":"### \u203b \ubcf8 \uc2dc\ud5d8\uac00\uc774\ub4dc\ub294, \ube45\ub370\uc774\ud130\ubd84\uc11d\uae30\uc0ac \uc2e4\uae30\uc2dc\ud5d8 \uc751\uc2dc\ub97c \uc900\ube44\ud558\uc2dc\ub294 \"\ucd08\ubcf4\uc790\"\ubd84\ub4e4\uc744 \uc704\ud574 \uace0\ub4dd\uc810\uc774 \uc544\ub2cc \"\ud3c9\uade0\uc810\uc218\" \ucde8\ub4dd\uc744 \ubaa9\ud45c\ub85c \uc81c\uc791\ud588\uc2b5\ub2c8\ub2e4.\n\n### 1. \ub370\uc774\ud130 \ub85c\ub4dc\n\ub9cc\uc57d, \ud55c\uae00\uc774 \uae68\uc9c0\uba74 encoding = \"euc-kr\"\n\ub370\uc774\ud130 \ud504\ub808\uc784\uc774 \uc798 \uc77d\uc5b4\uc84c\ub294\uc9c0 \ud655\uc778\ud55c\ub2e4.\n\n### 2. \ub370\uc774\ud130 \uc804\ucc98\ub9ac \ubc0f EDA\n\n\u203b\uc774\ub54c, \uc804\ucc98\ub9ac\ub294 train data\uc640 test data \ub3d9\uc2dc\uc5d0 \ucc98\ub9ac\ud574 \uc8fc\uc5b4\uc57c \ud55c\ub2e4.\u203b\n\n- isnull().sum()\uc744 \uc774\uc6a9\ud574\uc11c \uacb0\uce21\uac12\uc744 \ud655\uc778\ud558\uace0\n\uacb0\uce21\uac12\uc774 \uc874\uc7ac\ud558\uba74, \uacb0\uce21\uac12\uc774 \uc874\uc7ac\ud558\ub294 \uceec\ub7fc\uc744 \ud655\uc778\ud558\uace0, \ud574\ub2f9 \uceec\ub7fc\uc758 \uc815\ubcf4\ub97c .describe() \uba54\uc11c\ub4dc\ub85c \ud655\uc778\ud574\ubcf8\ub2e4.\n\n- \ub370\uc774\ud130 \ud0c0\uc785\uc744 \ud655\uc778\ud55c\ub2e4.\nsklearn\uc758 \ub300\ubd80\ubd84\uc758 \ubaa8\ub378\uc740 object \ud615 data\ub97c \uc785\ub825\uac12\uc73c\ub85c \ud5c8\ub77d\ud558\uc9c0 \uc54a\ub294\ub2e4. \ub530\ub77c\uc11c object dtypes\uc744 \uadf8\ub300\ub85c \uc0ac\uc6a9\ud558\uba74, error\uac00 \ubc1c\uc0dd\ud55c\ub2e4.\n\n- \ud615\ubcc0\ud658\uc744 \ud574\uc8fc\uc5b4\uc57c \ud55c\ub2e4.\n\ub300\ud45c\uc801\uc73c\ub85c\ub294 LabelEncoding\uacfc OnehotEncoding\uc774 \uc788\ub2e4. \uc6d0-\ud56b \uc778\ucf54\ub529\uc740 Pandas\uc758 get_dummies() \ud568\uc218\ub85c\ub3c4 \uad6c\ud604 \uac00\ub2a5)\n\uc6d0-\ud56b \uc778\ucf54\ub529\uc744 \ud560 \ub54c\uc5d0\ub294, \uceec\ub7fc\uc758 \uc720\uc77c\uac12\uc774 \ub108\ubb34 \ub9ce\uc9c0\ub294 \uc54a\uc740\uc9c0 \ud655\uc778\ud560 \ud544\uc694\uac00 \uc788\ub2e4. \uc720\uc77c\uac12\uc774 \ub108\ubb34 \ub9ce\uc73c\uba74 df\uac00 \ucee4\uc838\uc11c \uc131\ub2a5\uc774 \ub5a8\uc5b4\uc9d0. \n\n- \uacb0\uce21\uac12 \ucc98\ub9ac\ub97c \ud574\uc900\ub2e4.\n\uc55e\uc11c \uacb0\uce21\uac12\uc744 \ud655\uc778\ud588\uc744 \ub584, \uacb0\uce21\uac12\uc774 \uc874\uc7ac\ud558\ub294 \ud589\uc744 drop\ud558\uac70\ub098 0\uc73c\ub85c \ub300\uce58\ud558\uac70\ub098, \ud3c9\uade0\uac12\uc73c\ub85c \ub300\uce58\ud558\uac70\ub098 \ub4f1\ub4f1 \uac01 \uc0c1\ud669\uc5d0 \ub9de\uac8c \ud558\uba74 \ub41c\ub2e4\n\n### 3. EDA\nEDA\uacfc\uc815\uc740 Data Scientist\uc758 \uc5ed\ub7c9\uc5d0 \ub530\ub77c \ub2e4\ub974\uac8c \uc9c4\ud589\ub418\ubbc0\ub85c, \uc124\uba85\uc740 \uc0dd\ub7b5\ud558\uaca0\ub2e4.\nEDA\uacfc\uc815\uc744 \uac70\uce5c \ud6c4, \n\n- \ubaa8\ub378\ud559\uc2b5\uc5d0 \uc0ac\uc6a9\ud560 Fearture\ub97c \uc120\uc815\ud558\uace0 \ub9ac\uc2a4\ud2b8\ub97c \ub9cc\ub4e4\uc5b4\ub454\ub2e4.\n\n- \ubaa8\ub378\uac80\uc99d\uc744 \ud560 \uc218 \uc788\ub3c4\ub85d train_x\uc640 trian_y\ub97c train_test_split\uc744 \uc774\uc6a9\ud558\uc5ec train_x,y\uacfc valid_x,y\ub85c \ubd84\ud560 \ud574\uc900\ub2e4.\n\n### 4. \ubaa8\ub378\ub9c1 \ub2e8\uacc4\n\ubd84\ub958\ubb38\uc81c\uc778\uc9c0, \ud68c\uadc0\ubb38\uc81c\uc778\uc9c0 \ub4f1\ub4f1\uc744 \uace0\ub824\ud558\uc5ec \ubaa8\ub378\uc744 \uad6c\uc131\ud55c\ub2e4.(\ud30c\uc774\ud504\ub77c\uc778 \ub4f1\uc744 \ub2e4\uc591\ud558\uac8c \uc801\uc6a9)\n\n### 5.\ubaa8\ub378 \ud559\uc2b5 , \ubaa8\ub378 \ud3c9\uac00, Target \uc608\uce21 \ub2e8\uacc4\n\uad6c\uc131\ud55c \ubaa8\ub378\uc5d0 train data set\uc744 \uc801\ud569\uc2dc\ud0a8\ub2e4.\n\uc801\ud569\ub41c \ubaa8\ub378\uc744 valid set\uc744 \uc774\uc6a9\ud558\uc5ec \uac80\uc99d\ud55c\ub2e4. (\uc774\ub54c, \ud3c9\uac00\ucc99\ub3c4\ub294 \uac1c\uc778\uc774 \uc720\ub3d9\uc801\uc73c\ub85c \uc120\ud0dd)\n\n\uac80\uc99d\uc774 \uc644\ub8cc\ub41c \ubaa8\ub378\ub85c test_x data\uc5d0 \ub300\ud55c target\uc744 \uc608\uce21\ud55c\ub2e4.\n\n### 6. \uc81c\ucd9c\ud30c\uc77c\uc744 \uc0dd\uc131\n\n\n\n\u203b\ub370\uc774\ud130\ubd84\uc11d\uc740 \uc815\ud574\uc9c4 \ubc29\ubc95\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \uac1c\uc778 \uc5ed\ub7c9\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \n\n### \ud574\ub2f9 \ub178\ud2b8\ubd81 Upvote\uc640 \uae43 \uc800\uc7a5\uc18c \"Star\"\ud074\ub9ad \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\n\n","1f0a5e2b":"### \ubaa8\ub378\ud559\uc2b5\uc5d0 \uc0ac\uc6a9\ud560 \ud53c\uccd0 \uc9c0\uc815","3e857efb":"### \uc81c\ucd9c"}}