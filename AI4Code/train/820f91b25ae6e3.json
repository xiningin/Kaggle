{"cell_type":{"95ac944c":"code","9fb2fdd4":"code","e452e8b2":"code","cdae5297":"code","98ad735d":"code","fc95e9df":"code","515a9e01":"code","1db51ef0":"code","cfc2e428":"code","70732e6e":"code","e45a1eed":"code","9f2d44fa":"code","72374412":"code","efb63b64":"code","9a1a5161":"code","efadc299":"code","5d1405c2":"code","8eda5e29":"code","adfef4dd":"code","4f9766bf":"code","f3dbd905":"code","a1948d55":"code","1c4ab6b3":"code","f43a079f":"code","9e38d3ee":"code","323e58de":"code","4def495b":"code","da6649a1":"code","2a6ff2a3":"code","cdf6b067":"code","be568079":"code","31804cdf":"code","82e3cd59":"code","8bfd91f4":"code","1fa9937b":"code","b9c6b288":"markdown","e5d21170":"markdown","24bd3b6b":"markdown","f1e014ff":"markdown","1ade8305":"markdown","65ac3928":"markdown","59ce16f9":"markdown","752b1cf8":"markdown","7a1c587a":"markdown","f647fb12":"markdown","cf1e564c":"markdown"},"source":{"95ac944c":"# Importing related Python libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport csv\nimport warnings\nwarnings.filterwarnings(\"ignore\")","9fb2fdd4":"# Importing the training dataset\ndf = pd.read_csv('..\/input\/titanic\/train.csv')","e452e8b2":"df.head()","cdae5297":"df.shape","98ad735d":"df.dtypes","fc95e9df":"df = df.drop('Name', axis=1,)\ndf = df.drop('Ticket', axis=1,)\ndf = df.drop('Fare', axis=1,)\ndf = df.drop('Cabin', axis=1,)","515a9e01":"df['Family'] = df['SibSp'] + df['Parch'] + 1","1db51ef0":"df = df.drop('SibSp', axis=1,)\ndf = df.drop('Parch', axis=1,)","cfc2e428":"df.describe()","70732e6e":"# By describing data, we found out there few NAN's in Age\n# so replacing Age with median of the column\ndf[\"Age\"] = df[\"Age\"].fillna(df[\"Age\"].median())","e45a1eed":"df.describe()","9f2d44fa":"df['Embarked'].value_counts()","72374412":"#finding NAN's in Embarked column\ndf['Embarked'].isna().sum()","efb63b64":"#Replacing the NAN's with most frequently used one i.e mode(metric that gives us most frequently used value)\nprint(df[\"Embarked\"].mode())\ndf[\"Embarked\"] = df[\"Embarked\"].fillna(\"S\")","9a1a5161":"df['Embarked'].describe()","efadc299":"# Replacing the categorical value Embarked into numerical value\ndf[\"Embarked\"].unique()","5d1405c2":"df.Embarked.replace(['S', 'C', 'Q'], [1, 2, 3], inplace=True)","8eda5e29":"df.Sex.replace(['male', 'female'], [1,0], inplace=True)","adfef4dd":"df.head()","4f9766bf":"# importing libraries\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import NearestNeighbors\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import metrics\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import precision_recall_fscore_support\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import KFold\nfrom collections import Counter\nfrom sklearn.model_selection import cross_validate","f3dbd905":"X = np.array(df.filter(['Pclass','Sex','Embarked','Family','Age'], axis=1))","a1948d55":"y = np.array(df.filter(['Survived'], axis=1))","1c4ab6b3":"# simple cross validation\nX_1, X_test, y_1, y_test = train_test_split(X,y, test_size=0.3)\nX_tr, X_cv, y_tr, y_cv = train_test_split(X_1, y_1, test_size=0.3)","f43a079f":"final_scores = []\nfor i in range(1,30,2):\n    knn = KNeighborsClassifier(n_neighbors = i)\n    knn.fit(X_tr, y_tr)\n    pred = knn.predict(X_cv)\n    acc = accuracy_score(y_cv, pred, normalize=True) * float(100)\n    final_scores.append(acc)\n    print('\\n CV accuracy for k=%d is %d'%(i,acc))","9e38d3ee":"optimal_k = final_scores.index(max(final_scores))\nprint(optimal_k)","323e58de":"# getting accuracy if K=5 on the test data\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')\ndf_test = df_test.drop('Name', axis=1,)\ndf_test = df_test.drop('Ticket', axis=1,)\ndf_test = df_test.drop('Fare', axis=1,)\ndf_test = df_test.drop('Cabin', axis=1,)\ndf_test['Family'] = df_test['SibSp'] + df_test['Parch'] + 1\ndf_test = df_test.drop('SibSp', axis=1,)\ndf_test = df_test.drop('Parch', axis=1,)\ndf_test[\"Age\"] = df_test[\"Age\"].fillna(df[\"Age\"].median())","4def495b":"df_test1 = pd.read_csv('..\/input\/titanic\/test.csv')\ndf_test1","da6649a1":"print(df_test[\"Embarked\"].mode())\ndf_test[\"Embarked\"] = df_test[\"Embarked\"].fillna(\"S\")","2a6ff2a3":"df_test.Embarked.replace(['S', 'C', 'Q'], [1, 2, 3], inplace=True)\ndf_test.Sex.replace(['male', 'female'], [1,0], inplace=True)","cdf6b067":"X_test = np.array(df_test.filter(['Pclass','Sex','Embarked','Family','Age'], axis=1))\nknn = KNeighborsClassifier(n_neighbors = optimal_k)\nknn.fit(X_tr, y_tr)\npred = knn.predict(X_test)\nprint(pred)","be568079":"#creating file for submission\ndf_test['Survived'] = pd.Series(pred, index=df_test.index)","31804cdf":"df_test","82e3cd59":"final_df = df_test.filter(['PassengerId','Survived'], axis=1)","8bfd91f4":"final_df.shape","1fa9937b":"final_df.to_csv(\"pred_survival.csv\", encoding='utf-8')","b9c6b288":"So, we got to know that K=optimal_k is the best optimal k by using simple cross validation (varies bocz we are splitting the data in randomly)","e5d21170":"Dropping the unwanted columns. Name, Ticket, Fare, Cabin seems unwanted columns, so let's remove them.","24bd3b6b":"* Splitting the data into train and test data.          \n* Splitting the train data into train and validation data.","f1e014ff":"# ***About Titanic***","1ade8305":"# **Steps:**\n1. Getting familier with the data\n2. Cleaning the data\n3. Finding optimal K using cross validation (simple cross validation and KFold cross validation)\n4. Finding the accuracy of the knn classifier when we apply on test data \n","65ac3928":"# **1. Getting familier with the data**","59ce16f9":"Combining # siblings and # parents","752b1cf8":"# 2. Cleaning the data","7a1c587a":"RMS Titanic was a British passenger liner operated by the White Star Line that sank in the North Atlantic Ocean in the early morning hours of 15 April 1912, after striking an iceberg during her maiden voyage from Southampton to New York City. Of the estimated 2,224 passengers and crew aboard, more than 1,500 died, making the sinking one of modern history's deadliest peacetime commercial marine disasters.","f647fb12":"Getting the best k using simple cross validation.","cf1e564c":"# 3. Finding optimal K using cross validation (simple cross validation and KFold cross validation)"}}