{"cell_type":{"96b7bd9d":"code","01b686a1":"code","f171bf3d":"code","cfa14a49":"code","8f10f859":"code","00fb1d8a":"code","65cd1919":"code","6cbf854f":"code","50710ea9":"code","fea63825":"code","55478ae3":"code","c305c74d":"code","90414882":"code","eafc6c5b":"code","1eeccfdc":"code","e7483bde":"code","a5a25215":"code","d9d3461a":"code","98c2862b":"code","afccc783":"code","58fbef58":"code","3245c45e":"code","28fb33a7":"code","19b918f5":"markdown","3b466125":"markdown","b3ca5252":"markdown","ff87278a":"markdown","e680e249":"markdown","28f301e2":"markdown","e0dad73e":"markdown","1bd4875e":"markdown","816405fa":"markdown","ca3fc5f0":"markdown","e4bb5a40":"markdown","fd489b93":"markdown"},"source":{"96b7bd9d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","01b686a1":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf","f171bf3d":"df = pd.read_csv('..\/input\/FIFA 2018 Statistics.csv')","cfa14a49":"print ('There are',len(df.columns),'columns:')\nfor x in df.columns:\n    print(x,end=',')","8f10f859":"df.head()","00fb1d8a":"df.info()","65cd1919":"df.describe()","6cbf854f":"plt.figure(figsize=(10,5))\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","50710ea9":"sns.jointplot(x='Attempts',y='Goal Scored',data=df,kind='kde')","fea63825":"sns.distplot(df['Goal Scored'],kde=False,axlabel='Goals scored in a match')","55478ae3":"sns.jointplot(x='Ball Possession %',y='Goal Scored',data=df,kind='kde')","c305c74d":"plt.figure(figsize=(10,10))\nsns.countplot(y='Saves',data=df)\n","90414882":"sns.countplot(y='Goal Scored',data=df)","eafc6c5b":"plt.figure(figsize=(10,10))\nsns.countplot(y='Fouls Committed',data=df)","1eeccfdc":"df = pd.concat([df,pd.get_dummies(df['Round'])],axis=1)","e7483bde":"mom = pd.get_dummies(df['Man of the Match'],drop_first=True)\ndf = pd.concat([df,mom, pd.get_dummies(df['Round'])],axis=1)","a5a25215":"from sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report,confusion_matrix","d9d3461a":"X = df.drop(['Date','Team','Opponent','Round','PSO','Man of the Match','1st Goal','Own goals','Own goal Time'],axis=1)\ny = df['Man of the Match']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)","98c2862b":"lr = LogisticRegression()","afccc783":"lr.fit(X_train,y_train)","58fbef58":"predictions = lr.predict(X_test)","3245c45e":"print (classification_report(y_test,predictions))","28fb33a7":"print('Feature Coefficients of the Regression:- \\n', lr.coef_[0])","19b918f5":"**Data Exploration**","3b466125":"Using heatmap graphical representation of Seaborn Library to check whether there is a missing data.\nEventually, we found that 1st goal column misses many rows whereas Own Goal and Own Goal Time columns misses some of the data so to drop them in their visualization and prediction of Man of the Match column is fine.","b3ca5252":"Converting categorical variable** (**in this case **Round** and **Man of the Match categorical variables** **)**into dummy\/indicator variables and concating them in the DataFrame df.","ff87278a":"**No null data**","e680e249":"   Creating a Logistic Regression model beacause we are predicting Man of the Match column and its a categorical series.","28f301e2":"**Importing Libraries**","e0dad73e":"**Loading Data**","1bd4875e":"**Importing Libraries**","816405fa":"Fitting Training data set to the Logistic Regression model lr","ca3fc5f0":"Descriptive statistics , analysis of  both numeric and object series . \nProduces elucidating insights that condense the focal propensity, scattering and state of a dataset's distribution, excluding NaN values.\n","e4bb5a40":"Our trained model has made all the right predictions giving 100% accuracy.","fd489b93":"Creating predictions by passing Training dataset X_test to lr using predict() function."}}