{"cell_type":{"64b2993e":"code","69eb42ef":"code","f7ae0382":"code","f753c61e":"code","da656269":"code","b083f2f6":"code","835f179a":"code","e55d6c7c":"code","b5c95286":"code","744ec88f":"code","7bc2f964":"code","1608f609":"code","9c946384":"code","c9b25c4e":"code","2ff14573":"code","6cfb9651":"code","9a1843bb":"code","482999fd":"code","b7f62325":"code","88f5b70a":"code","0e2eb215":"code","bd91a264":"code","ba1b3182":"code","1063d097":"code","6c20140b":"code","a8f72c4c":"code","f2eeaf8d":"code","f1c54d69":"code","941da42e":"code","0c049376":"code","18481510":"code","0b10fea1":"code","119789cb":"code","086f6e49":"code","ba2e581d":"code","034629b0":"code","3bf8a6d8":"code","75beef5f":"code","7dee296a":"code","3dfd59ea":"code","24b2ee9e":"code","08ea1707":"code","7288cac5":"code","a88a35b3":"code","73e31212":"code","3782f365":"code","8d76af76":"code","93b58cb4":"code","65acf527":"code","749726d0":"code","bec5abeb":"code","a9677236":"code","436d1cf8":"code","d37683f1":"code","845ec1c6":"code","2d5bbe5d":"code","75d2a3b8":"code","f08db542":"code","7695096e":"code","8d5e9d5f":"code","c5536e51":"code","e3cdcbe2":"code","55be3251":"code","a7179a1d":"code","1b21c0ae":"code","0e06f278":"code","694677b3":"code","4ccb3f1d":"code","0c3d2579":"code","7a2f204b":"code","b867de50":"code","00e352d0":"code","494790fc":"code","5dc4d971":"code","28d3f615":"code","0d86ef4f":"markdown","188225c9":"markdown","07c02e2c":"markdown","f96b51f8":"markdown","81ef0318":"markdown","80192d3e":"markdown","b6d9eaf4":"markdown","0ff9122c":"markdown","5af4de64":"markdown","28a802a7":"markdown","1b0f0972":"markdown","b24e4a49":"markdown"},"source":{"64b2993e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\nimport seaborn as sns","69eb42ef":"train=pd.read_csv('..\/input\/titanic\/train.csv')\ntrain.head()","f7ae0382":"train.isnull().sum()","f753c61e":"test=pd.read_csv('..\/input\/titanic\/test.csv')\ntest.head()","da656269":"test.isnull().sum()","b083f2f6":"train.shape","835f179a":"test.shape","e55d6c7c":"df=pd.concat([train,test],axis=0,sort=False)\ndf.head()","b5c95286":"df = df[~np.isnan(df['Survived'])]","744ec88f":"df.shape","7bc2f964":"df.info()","1608f609":"df.describe()","9c946384":"df.isnull().sum()","c9b25c4e":"round((df.isnull().sum()\/len(df))*100,2)","2ff14573":"df=df.drop(['Cabin'],1)\ndf.head()","6cfb9651":"df['Survived'].value_counts()","9a1843bb":"\nsns.countplot('Survived',data=df)\nplt.show()","482999fd":"plt.figure(figsize = (10, 7))\n\nvalues=df['Survived'].value_counts()\nlabels=['Not Survived',\"Survived\"]\nplt.pie(values,labels=labels,autopct='%1.2f%%')\nplt.show()","b7f62325":"df['Pclass'].value_counts()","88f5b70a":"df.groupby(['Pclass','Survived'])[\"Survived\"].count()","0e2eb215":"sns.countplot('Pclass',hue='Survived',data=df)\nplt.show()","bd91a264":"plt.figure(figsize = (10, 7))\n\nvalues=df['Pclass'].value_counts()\nlabels=['third class',\"first class\",'second class']\nplt.pie(values,labels=labels,autopct='%1.2f%%')\nplt.show()","ba1b3182":"df.Name.value_counts()","1063d097":"len(df['Name'].unique())","6c20140b":"df.Sex.value_counts()","a8f72c4c":"plt.figure(figsize = (10, 7))\nsns.countplot('Sex',hue=\"Survived\",data=df)\nplt.show()","f2eeaf8d":"sns.barplot(x='Sex',y='Survived',hue='Pclass',data=df)","f1c54d69":"sns.catplot(x='Sex',y='Survived',data=df,kind='bar',col='Pclass')\nplt.show()","941da42e":"sns.distplot(df['Age'])","0c049376":"sns.boxplot(x='Sex',y='Age',data=df)","18481510":"sns.catplot(x='Sex',y='Age',data=df,kind='box',col='Pclass')\nplt.show()","0b10fea1":"plt.figure(figsize = (14, 6))\nplt.hist(\"Fare\" ,data= df, bins=50)\nplt.show()","119789cb":"df.SibSp.value_counts()","086f6e49":"plt.figure(figsize = (14, 6))\nsns.countplot(x='SibSp',hue='Survived',data = df)","ba2e581d":"plt.figure(figsize = (14, 6))\nsns.countplot(x='SibSp',hue='Sex',data = df)","034629b0":"plt.figure(figsize = (14, 6))\nsns.barplot(x='SibSp',y='Survived',hue='Sex',data = df)","3bf8a6d8":"df.Parch.value_counts()","75beef5f":"plt.figure(figsize = (14, 6))\nsns.countplot(x='Parch',hue='Survived',data = df)","7dee296a":"plt.figure(figsize = (14, 6))\nsns.barplot(x='Parch',y='Survived',hue='Sex',data = df)","3dfd59ea":"df.Ticket.value_counts()","24b2ee9e":"len(df.Ticket.unique())","08ea1707":"df.Embarked.value_counts()","7288cac5":"plt.figure(figsize = (14, 6))\nsns.countplot(x='Embarked',hue='Survived',data = df)","a88a35b3":"sns.catplot(x='Embarked',y='Survived',data=df,kind='bar',col='Sex')\nplt.show()","73e31212":"df.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)","3782f365":"df.head()","8d76af76":"df.isnull().sum()","93b58cb4":"df['Fare']=df['Fare'].replace(0,df[\"Fare\"].mean())\n","65acf527":"df['Age'].fillna(df['Age'].mean(),inplace=True)","749726d0":"df['Embarked'].fillna(df['Embarked'].mode()[0],inplace=True)","bec5abeb":"df.isna().sum()","a9677236":"df.head()","436d1cf8":"df['Sex']=df['Sex'].map({'male':1,'female':0})","d37683f1":"df['Embarked']=df['Embarked'].map({'S':0,'C':1,'Q':2})","845ec1c6":"df.head()","2d5bbe5d":"df['Age']=np.log(df['Age'])\ndf['Fare']=np.log(df['Fare'])\ndf.head()","75d2a3b8":"from sklearn.model_selection import train_test_split","f08db542":"X=df.drop(['Survived'],axis=1)\ny=df['Survived']","7695096e":"X.head()","8d5e9d5f":"y.head()","c5536e51":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, test_size=0.3, random_state=100)","e3cdcbe2":"X_train.head()","55be3251":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression()\nlr.fit(X_train,y_train)","a7179a1d":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report\n","1b21c0ae":"\n\nlr_acc = accuracy_score(y_test, lr.predict(X_test))\n\nlr_train=accuracy_score(y_train, lr.predict(X_train))\n\nprint(f\"train accuracy score of lr is{lr_train}\")\n\nprint(f\"test accuracy score of lr is{lr_acc}\")\n\nprint(confusion_matrix(y_test, lr.predict(X_test)))\n      \nprint(classification_report(y_test, lr.predict(X_test)))","0e06f278":"from sklearn.tree import DecisionTreeClassifier\ndtc=DecisionTreeClassifier()\ndtc.fit(X_train,y_train)","694677b3":"dtc_acc = accuracy_score(y_test, dtc.predict(X_test))\n\ndtc_train=accuracy_score(y_train,dtc.predict(X_train))\n\nprint(f\"train accuracy score of dtc is{dtc_train}\")\n\nprint(f\"test accuracy score of dtc is{dtc_acc}\")\n\nprint(confusion_matrix(y_test, dtc.predict(X_test)))\n      \nprint(classification_report(y_test, dtc.predict(X_test)))","4ccb3f1d":"#hypertuning in decision tree\nfrom sklearn.model_selection import GridSearchCV\ngrid_param = {'criterion':['gini','entropy'],\n              'max_depth':[3,5,7],\n              'splitter':['best','random'],\n              'min_samples_leaf':[2,4,6,8,9],\n              'min_samples_split':[2,4,6,8,9],\n              'max_features':['auto','sqrt','log2']\n             }\ngrid_search_dtc=GridSearchCV(dtc,grid_param,cv=5,n_jobs=-1,verbose=1)\ngrid_search_dtc.fit(X_train,y_train)","0c3d2579":"grid_search_dtc.best_params_","7a2f204b":"grid_search_dtc.best_score_","b867de50":"dtc=DecisionTreeClassifier(criterion='entropy',\n                         max_depth=5,\n                         max_features= 'auto',\n                         min_samples_leaf= 4,\n                         min_samples_split= 6,\n                         splitter= 'best')\ndtc.fit(X_train,y_train)","00e352d0":"dtc_acc = accuracy_score(y_test, dtc.predict(X_test))\n\ndtc_train=accuracy_score(y_train,dtc.predict(X_train))\n\nprint(f\"train accuracy score of dtc is{dtc_train}\")\n\nprint(f\"test accuracy score of dtc is{dtc_acc}\")\n\nprint(confusion_matrix(y_test, dtc.predict(X_test)))\n      \nprint(classification_report(y_test, dtc.predict(X_test)))","494790fc":"models=pd.DataFrame({'Model':['LogesticRegression','DecisionTreeClassifier'],\n                    'score':[lr_acc,dtc_acc]})\nmodels","5dc4d971":"predictions=lr.predict(X_test)","28d3f615":"pred=pd.DataFrame(predictions)\nsub_df=pd.read_csv(\"C:\/Users\/HOME\/Downloads\/titanic\/gender_submission.csv\")\nsub_df['Survived']=pred\nsub_df.to_csv('Submission.csv',index=False)","0d86ef4f":"# Embarked column","188225c9":"# pclass column","07c02e2c":"## checking missing values","f96b51f8":"#droping cabin column as the percentage of null values are more than 50%","81ef0318":"# name column","80192d3e":"# sex column","b6d9eaf4":"# survied","0ff9122c":"# age column","5af4de64":"# data preprocessing","28a802a7":"# SibSp column","1b0f0972":"# Parch","b24e4a49":"## fare column"}}