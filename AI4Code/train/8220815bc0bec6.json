{"cell_type":{"ecdd1163":"code","977d9d90":"code","a82104e8":"code","cfb42918":"code","000efbab":"code","3d43cbd3":"code","be220124":"code","16b14754":"code","2f39c5f1":"code","b5111af6":"code","5ef04738":"code","41f8fd2c":"code","7b54e155":"code","d0d1ec58":"code","ef17c412":"code","46d43a82":"code","6381ad35":"code","031b08fe":"code","c137c5b1":"code","546b1763":"code","d9877dcf":"code","5460bdde":"code","7c28fba7":"code","d05e2452":"code","12040661":"code","f548e335":"code","2968c366":"code","7ad4e62a":"code","f7f6be93":"markdown","c6ccb230":"markdown","9bb68444":"markdown","8d8e8b03":"markdown","5293e8b6":"markdown","44fac4aa":"markdown","7417976b":"markdown","8895b623":"markdown","f80994cb":"markdown","b8d5a5b7":"markdown","71854ed3":"markdown","54a469a2":"markdown","5c7f68f3":"markdown","444332bd":"markdown","c0806223":"markdown","6116d32f":"markdown"},"source":{"ecdd1163":"import pandas as pd\nimport numpy as np\nimport os\nimport re\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom plotly import tools\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nfrom plotly.subplots import make_subplots","977d9d90":"df = pd.read_csv(\"..\/input\/netflix-shows\/netflix_titles.csv\")\ndf[\"date_added\"] = pd.to_datetime(df['date_added'])\ndf['Month']=df['date_added'].dt.month\ndf['season'] = df.apply(lambda x : int(x['duration'].split(\" \")[0]) if \"Season\" in x['duration'] else \"\", axis = 1)\ndf['duration'] = df.apply(lambda x : int(x['duration'].split(\" \")[0]) if \"Season\" not in x['duration'] else \"\", axis = 1)\ndf['Country_type'] = df.apply(lambda x : \"India\" if 'India' == x['country'] else \"Rest Of the World\", axis=1)","a82104e8":"age_ratings = {\n    'TV-PG': '12-14+',\n    'TV-MA': '18+',\n    'TV-Y7-FV': ' 7+',\n    'TV-Y7': ' 7+',\n    'TV-14': '12-14+',\n    'R': '18+',\n    'TV-Y': ' 0+ (ALL)',\n    'NR': '18+',\n    'PG-13': '12-14+',\n    'TV-G': ' 0+ (ALL)',\n    'PG': '12-14+',\n    'G': ' 0+ (ALL)',\n    'UR': '18+',\n    'NC-17': '18+'\n}\ndf['age_ratings'] = df['rating'].replace(age_ratings)","cfb42918":"Ind_data = df[df.country=='India']\nWorld = df[df.country!='India']","000efbab":"Ind_data.head()","3d43cbd3":"all_countries = df.groupby(['country','type']).count()['show_id'].reset_index()\nall_countries.head()","be220124":"country_count = {}\nfor i in range(len(all_countries)):\n    l = all_countries['country'][i].split(', ')\n    for x in l:\n        x = re.sub('[^A-Za-z0-9 ]+', '', x)\n        if x not in country_count.keys():\n            country_count[x] = all_countries['show_id'][i]\n        else:\n            country_count[x] += all_countries['show_id'][i]\ncountry_df = pd.DataFrame(list(zip(country_count.keys(), country_count.values())), columns =['country', 'count']) \n\nd = country_df.sort_values(by=['count'], ascending=False).head(10)\n# .plot.bar(x='country',y='count',edgecolor='black')\nfig = px.bar(d, x='country',y='count')\nfig.update_traces(marker_color='#221F1F', marker_line_color='#E50914',\n                  marker_line_width=2, opacity=1)\nfig.update_layout(title='Content produced country wise')\nfig.show()\ntop_30 = country_df.sort_values(by=['count'], ascending=False)['country'].head(30)","16b14754":"sns.set_theme()\ntrace = go.Choropleth(\n            locations = list(country_count.keys()),\n            locationmode='country names',\n            z = list(country_count.values()),\n            text = country_df['country'],\n#             autocolorscale =True,\n            reversescale = False,\n            zauto = True,\n            colorscale = 'RdBu',\n            marker = dict(\n                line = dict(\n                    color = 'rgb(0,0,0)',\n                    width = 0.5)\n            ),\n            colorbar = dict(\n                title = 'Total Content',\n                tickprefix = '')\n        )\n\ndata = [trace]\nlayout = go.Layout(\n    title = 'Total content per country',\n    geo = dict(\n        showframe = True,\n        showlakes = False,\n        showcoastlines = True,\n#         projection = dict(\n#             type = 'natural earth'\n#         )\n    )\n)\n\nfig = go.Figure(data=data, layout=layout)\nfig.show()","2f39c5f1":"country_count_t = {'Movie':{},'TV Show':{}}\nfor i in range(len(all_countries)):\n    l = all_countries['country'][i].split(', ')\n    for x in l:\n        x = re.sub('[^A-Za-z0-9 ]+', '', x)\n        if x not in country_count_t[all_countries['type'][i]]:\n            country_count_t[all_countries['type'][i]][x] = all_countries['show_id'][i]\n        else:\n            country_count_t[all_countries['type'][i]][x] += all_countries['show_id'][i]\ncountry_df_t = pd.concat({k: pd.Series(v) for k, v in country_count_t.items()}).reset_index()\ncountry_df_t.columns = ['type','country','count']\n# country_df_t","b5111af6":"fig = px.treemap(country_df_t, path = ['type', 'country'], values = 'count',\n                title=\"Total content per country, grouped by type of content\")\nfig.show()","5ef04738":"fig = px.histogram(df, x='type',color='Country_type', barmode='group',color_discrete_map={'Rest Of the World':'#221F1F','India':'#E50914'})\nfig.update_layout(title='Content type distribution India vs World')\nfig.show()","41f8fd2c":"# i_l = Ind_data.groupby('type').size().tolist()\nw_l = df.groupby('type').size().tolist()\nmovie_tv_ratio = {}\nworld_d = (w_l[0])\/(w_l[0]+w_l[1])\nprint(\"World: \")\nprint(\"No. of Movie\/Total_content ratio = \",world_d)","7b54e155":"for x in country_df_t.sort_values(by=['count'], ascending=False)['country'].head(30):\n    data = country_df_t[country_df_t.country==x]\n#     print(x, data.type)\n    if 'Movie' in data.type.values:\n        m = int(data[data.type == 'Movie']['count'])\n    else:\n        m=0\n    if 'TV Show' in data.type.values:\n        tv = int(data[data.type == 'TV Show']['count'])\n    else:\n        tv=0\n#     print(x,m,tv)\n    movie_tv_ratio[x] = m\/(m+tv)\n\nprint(\"Top 30 countries No. of movie\/Total_content ratio\")\nmovie_tv_ratio","d0d1ec58":"# mt = sorted(movie_tv_ratio.items(), key=lambda x: x[1], reverse=True)\nmt_0 = {k:v for (k,v) in movie_tv_ratio.items() if v > 0.6905}\nmt_1 = {k:v for (k,v) in movie_tv_ratio.items() if v < 0.6905}\nmt_0 = sorted(mt_0.items(), key=lambda x: x[1], reverse=True)\nmt_1 = sorted(mt_1.items(), key=lambda x: x[1], reverse=True)\n\nf, ax = plt.subplots(figsize=(16,8))\ncolors = []\nfor value in mt_0:\n    if value[0] == 'India':\n        colors.append('firebrick')\n    else:\n        colors.append('grey')\nplt.bar([x[0] for x  in mt_0], [x[1] for x in mt_0], color =colors)\nplt.bar(['World'], [world_d], color ='black')\nplt.bar([x[0] for x  in mt_1], [x[1] for x in mt_1], color ='white')\nplt.xlabel(\"Countries\")\nplt.ylabel(\"Movie Percent among total content\")\nplt.title(\"Percentage of movie for each country\")\nplt.xticks(rotation = 90)\nplt.show()","ef17c412":"p_df = country_df_t.loc[country_df_t['country'].isin(top_30.values.tolist())] \nfig = px.bar(p_df, x=\"country\", y=\"count\", color=\"type\",\n            hover_data=['count'], barmode = 'stack')\n \nfig.show()","46d43a82":"wd_yr = World[World['release_year']>2009].groupby(['release_year','type']).count()['show_id'].reset_index()\nfig = px.area(wd_yr, x=\"release_year\", y=\"show_id\", color=\"type\",color_discrete_sequence=['rgb(0,0,0)','rgb(115,115,115)'])\nfig.update_layout(\n    title=\"World Movie and TV show count corresponding to year\",\n    yaxis_title=\"Total Content\",\n    xaxis_title=\"Year Wise\",\n    legend_title=\"Type of content\"\n)\nfig.show()","6381ad35":"ind_yr = Ind_data[Ind_data['release_year']>2009].groupby(['release_year','type']).count()['show_id'].reset_index()\nfig = px.area(ind_yr, x=\"release_year\", y=\"show_id\", color=\"type\",color_discrete_sequence=['rgb(103,0,13)','rgb(203,24,29)'])\nfig.update_layout(\n    title=\"India Movie and TV show count corresponding to year\",\n    yaxis_title=\"Total Content\",\n    xaxis_title=\"Year Wise\",\n    legend_title=\"Type of content\"\n)\nfig.show()","031b08fe":"ind_yr = df[(df['release_year']>2009) & (df['release_year']<2021)].groupby(['release_year','type','Country_type']).count()['show_id'].reset_index()\nfig = px.area(ind_yr, x=\"release_year\", y=\"show_id\", color=\"type\",\n              color_discrete_sequence=['rgb(203,24,29)','rgb(0,0,0)'],facet_col='Country_type')\nfig.update_layout(\n    title=\"Movie and TV show count corresponding to year\",\n    yaxis_title=\"Total Content\",\n    xaxis_title=\"Year Wise\",\n    legend_title=\"Type of content\"\n)\nfig.show()","c137c5b1":"idd = Ind_data.dropna(subset=['age_ratings'])\nidd = idd.groupby(['rating', 'age_ratings']).agg({'show_id': 'count'}).reset_index()\nidd.columns = ['rating', 'age_ratings', 'count']\nfig = px.bar(idd.sort_values('age_ratings'), x='rating',y='count', color='age_ratings',\n            color_discrete_sequence =['rgb(252,187,161)','rgb(251,106,74)','rgb(203,24,29)','rgb(103,0,13)'])\nfig.update_layout(title=\"India Ratings distribution\")\nfig.show()\nwd = World.dropna(subset=['age_ratings'])\nwd = wd.groupby(['rating', 'age_ratings']).agg({'show_id': 'count'}).reset_index()\nwd.columns = ['rating', 'age_ratings', 'count']\nfig = px.bar(wd.sort_values('age_ratings'), x='rating',y='count', color='age_ratings',\n            color_discrete_sequence =['rgb(255,255,255)','rgb(217,217,217)','rgb(115,115,115)','rgb(0,0,0)'])\nfig.update_layout(title=\"World Ratings distribution\")\nfig.show()","546b1763":"fig = px.pie(Ind_data, names='rating', title='India ratings distribution',color_discrete_sequence=px.colors.sequential.Reds)\nfig.show()\npx.pie(World, names='rating', title='World ratings distribution',color_discrete_sequence=px.colors.sequential.Greys)","d9877dcf":"fig = go.Figure()\nfig.add_trace(go.Bar(x=wd['age_ratings'],y=wd['count'],name='Rest of the world',marker_color='#221f1f'))\nfig.add_trace(go.Bar(x=idd['age_ratings'],y=idd['count'] ,name='India',marker_color='#e50914'))\nfig.update_layout(\n    barmode='group', xaxis_tickangle=-45,\n    title=\"Movies time distribution comparision\",\n    yaxis_title=\"Number of minutes\",\n    xaxis_title=\"Ratings\",\n)\n\nfig.show()","5460bdde":"wd_yr = Ind_data.groupby(['Month','type']).count()['show_id'].reset_index()\nfig = px.area(wd_yr, x=\"Month\", y=\"show_id\", color=\"type\",color_discrete_sequence=['rgb(103,0,13)','rgb(203,24,29)'])\nfig.update_layout(\n    title=\"India Movie and TV show count corresponding to month\",\n    xaxis_title=\"Total Content\",\n    yaxis_title=\"Month Wise\",\n    legend_title=\"Type of content\"\n)\nfig.show()","7c28fba7":"wd_yr = World.groupby(['Month','type']).count()['show_id'].reset_index()\nfig = px.area(wd_yr, x=\"Month\", y=\"show_id\", color=\"type\",color_discrete_sequence=['rgb(0,0,0)','rgb(115,115,115)'])\nfig.update_layout(\n    title=\"World Movie and TV show count corresponding to month\",\n    xaxis_title=\"Total Content\",\n    yaxis_title=\"Month Wise\",\n    legend_title=\"Type of content\"\n)\nfig.show()","d05e2452":"# World.season_count\nwd = World[World['type']==\"TV Show\"]['season'].value_counts()\nfig = px.bar(wd)\nfig.update_layout(\n    title=\"World Series season distribution\",\n    xaxis_title=\"Number of Seasons\",\n    yaxis_title=\"Count\",\n)\nfig.update_traces(marker_color='#221F1F', marker_line_color='#E50914',\n                  marker_line_width=2, opacity=1)\nfig.show()\n\n\nidd = Ind_data[Ind_data['type']==\"TV Show\"]['season'].value_counts()\nfig = px.bar(idd)\nfig.update_layout(\n    title=\"India Series season distribution\",\n    xaxis_title=\"Number of Seasons\",\n    yaxis_title=\"Count\",\n)\nfig.update_traces(marker_color='#E50914', marker_line_color='#221F1F',\n                  marker_line_width=2, opacity=1)\nfig.show()","12040661":"print(\"16 Seasons Series: \", World[World[\"season\"]==16]['title'].iloc[0])","f548e335":"wd = World[World['type']==\"Movie\"]['duration'].fillna(0.0).astype(float)\nidd = Ind_data[Ind_data['type']==\"Movie\"]['duration'].fillna(0.0).astype(float)\nfig = ff.create_distplot([wd, idd], ['World','India'], bin_size=0.65, curve_type='normal'\n                        ,colors =  ['#221F1F','#E50914'])\nfig.update_layout(\n    title=\"World Movies time distribution\",\n    xaxis_title=\"Number of minutes\",\n)\n# fig.update_traces(marker_color='#221F1F', marker_line_color='#E50914',\n#                   marker_line_width=0.1, opacity=1)\nfig.show()","2968c366":"fig = px.box(df, x=\"rating\", y=\"duration\",color='Country_type',color_discrete_map={'Rest Of the World':'#221F1F','India':'#E50914'})\nfig.update_layout(title=\"Movie duration with respect to ratings\")\nfig.show()","7ad4e62a":"wd = (World[World['type']==\"Movie\"].groupby('rating')['duration'].sum()\/World[World['type']==\"Movie\"].groupby('rating')['duration'].count()).reset_index()\nidd = (Ind_data[Ind_data['type']==\"Movie\"].groupby('rating')['duration'].sum()\/Ind_data[Ind_data['type']==\"Movie\"].groupby('rating')['duration'].count()).reset_index()\nfig = go.Figure()\nfig.add_trace(go.Bar(x=wd['rating'],y=wd['duration'],name='Rest of the world',marker_color='#221f1f'))\nfig.add_trace(go.Bar(x=idd['rating'],y=idd['duration'] ,name='India',marker_color='#e50914'))\nfig.update_layout(\n    barmode='group', xaxis_tickangle=-45,\n    title=\"Movies time distribution comparision\",\n    yaxis_title=\"Number of minutes\",\n    xaxis_title=\"Ratings\",\n)\n\nfig.show()","f7f6be93":"**Segregating content country wise**","c6ccb230":"**Capturing Indian Data**","9bb68444":"Indian movies duration is quite long compared to the rest of the world","8d8e8b03":"# **4. Month Analysis**","5293e8b6":"# **1. Country Wise Content Analysis**","44fac4aa":"# **2. Content type distribution analysis**","7417976b":"**As one can notice, India makes lot more movies compared to TV series\nWhile countries like Japan, South Korea, and Taiwan have comparatively more TV series, maybe due to large production of Anime**","8895b623":"**Importing Libraries**","f80994cb":"# If there are any suggesion for the notebook please comment, that would be helpful. Also please upvote if you liked it! Thank you.","b8d5a5b7":"**TV Show productions are increasing at a quicker rate as compared to Movies**","71854ed3":"# **3. Ratings comparison**","54a469a2":"**In India the content is dominated by PG-14 while for the rest of the world all types have a decent allocation (may point to lack of diverse content as compared to the rest of the world).**","5c7f68f3":"**Here we see a lot of up and downs in India content graph, this might be due to focus on releasing during festival time periods.** ","444332bd":"# **5. Content Length Analysis**","c0806223":"\n\n# Important Insights\n\n\n**1. India as expected through Bollywood dominates the content world with the 2nd highest content produced after USA.**\n\n**2. India makes a lot more movies compared to TV series, while countries like Japan, South Korea, and Taiwan have comparatively more TV series, maybe due to the large production of Anime.**\n\n**3. Overall the TV series creation is increasing at a faster rate as compared to the movie.**\n\n**4. In India the content is dominated by PG-14, while for the rest of the world all types have a decent allocation (may point to lack of diverse content in India as compared to the rest of the world).**\n\n**5. From the variance present in release months, we can guess that in India the focus seems to be releasing the content during the festival period.**\n\n**6. Indian movies duration is quite long compared to the rest of the world**","6116d32f":"# *Netflix: India\ud83c\uddee\ud83c\uddf3  vs The World\ud83c\udf0e*"}}