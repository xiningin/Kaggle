{"cell_type":{"1231d3b8":"code","35b7d457":"code","5d25dbbf":"code","fe73f5da":"code","bec89bca":"code","eaa67e53":"code","15fe8d4e":"code","9699dd8a":"code","c2914510":"code","c2be7633":"code","5fb79db8":"code","a28d439b":"code","9d72bf0d":"code","4186d96d":"code","1477c03f":"code","c708b999":"code","751b9667":"code","52642430":"markdown","65c3edd3":"markdown","d2de0265":"markdown","7847093f":"markdown","fe70a834":"markdown","26bbaa61":"markdown"},"source":{"1231d3b8":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","35b7d457":"from tensorflow.python.keras.applications import ResNet50\nfrom tensorflow.python.keras.models import Sequential\nfrom tensorflow.python.keras.layers import Dense, Flatten, GlobalAveragePooling2D, Activation, Flatten, Dropout, BatchNormalization\n\nimport h5py","5d25dbbf":"traindf=pd.read_csv('..\/input\/dog-breed-identification\/labels.csv')\ntestdf=pd.read_csv('..\/input\/dog-breed-identification\/sample_submission.csv')","fe73f5da":"\n\ntraindf.isnull().values.any() #check missing classes\n\n","bec89bca":"import matplotlib.pyplot as plt #check class imbalance\nplt.figure(figsize=(13, 6))\ntraindf['breed'].value_counts().plot(kind='bar')\nplt.show()","eaa67e53":"def class_percentages(labels):\n    class_map={}\n    for i in labels:\n        if str(i) not in class_map:\n            class_map[str(i)]=1\n        else:\n            class_map[str(i)]+=1\n    #     print(class_map)\n    return class_map\n\np=class_percentages(traindf.breed.values)\n# print(p)\n# for i in p.items():\n#     print(i)\n\nprint(\"Class with maximum images-\"+str(max(p, key=p.get))+\"  \"+str(p[max(p, key=p.get)]))\nprint(\"Class with maximum images-\"+str(min(p,key=p.get)) +\"  \"+str(p[min(p, key=p.get)]))\n\n","15fe8d4e":"traindf.head(10)","9699dd8a":"num_classes = 120\nresnet_weights_path = '..\/input\/resnet50\/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5'\n\nmy_new_model = Sequential()\nmy_new_model.add(ResNet50(include_top=False, pooling='avg', weights=resnet_weights_path))\nmy_new_model.add(Dense(512))\nmy_new_model.add(Activation('relu'))\nmy_new_model.add(Dropout(0.5))\nmy_new_model.add(Dense(num_classes, activation='softmax'))\n\n# Say not to train first layer (ResNet) model. It is already trained\nmy_new_model.layers[0].trainable = False\n\nmy_new_model.compile(optimizer='sgd', loss='categorical_crossentropy', metrics=['accuracy'])\n\n","c2914510":"from tensorflow.python.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.python.keras.preprocessing.image import ImageDataGenerator\n\nimage_size = 224\ndatagen = ImageDataGenerator(preprocessing_function=preprocess_input, \n                             rescale=1.\/255.,\n                             horizontal_flip=True,\n                             width_shift_range = 0.2,\n                             height_shift_range = 0.2,\n                             validation_split=0.2)","c2be7633":"train_generator=datagen.flow_from_dataframe(\n                        dataframe=traindf,\n                        directory=\"..\/input\/dog-breed-identification\/train\/\",\n                        x_col=\"id\",\n                        y_col=\"breed\",\n                        has_ext=False,\n                        subset=\"training\",\n                        batch_size=32,\n                        seed=50,\n                        shuffle=True,\n                        class_mode=\"categorical\",\n                        target_size=(image_size, image_size))","5fb79db8":"valid_generator=datagen.flow_from_dataframe(\n                        dataframe=traindf,\n                        directory=\"..\/input\/dog-breed-identification\/train\/\",\n                        x_col=\"id\",\n                        y_col=\"breed\",\n                        has_ext=False,\n                        subset=\"validation\",\n                        batch_size=1,\n                        seed=42,\n                        shuffle=True,\n                        class_mode=\"categorical\",\n                        target_size=(image_size, image_size))","a28d439b":"test_datagen=ImageDataGenerator(preprocessing_function=preprocess_input,rescale=1.\/255.)\n\ntest_generator=test_datagen.flow_from_dataframe(\n                            dataframe=testdf,\n                            directory=\"..\/input\/dog-breed-identification\/test\/\",\n                            x_col=\"id\",\n                            y_col=None,\n                            has_ext=False,\n                            batch_size=1,\n                            seed=42,\n                            shuffle=False,\n                            class_mode=None,\n                            target_size=(image_size, image_size))\n\n","9d72bf0d":"STEP_SIZE_TRAIN=train_generator.n\nSTEP_SIZE_VALID=valid_generator.n\n\nprint(STEP_SIZE_TRAIN)\nprint(STEP_SIZE_VALID)\n\nmy_new_model.fit_generator(generator=train_generator,\n                    steps_per_epoch=STEP_SIZE_TRAIN,\n                    validation_data=valid_generator,\n                    validation_steps=STEP_SIZE_VALID,\n                    epochs=3\n)","4186d96d":"\nmy_new_model.evaluate_generator(generator=valid_generator)\n","1477c03f":"test_generator.reset()\npred=my_new_model.predict_generator(test_generator,verbose=1)\n","c708b999":"labels = (train_generator.class_indices)\nlabels = list(labels.keys())\ndf = pd.DataFrame(data=pred,\n                 columns=labels)\n\ncolumns = list(df)\ncolumns.sort()\ndf = df.reindex(columns=columns)\n\nfilenames = testdf[\"id\"]\ndf[\"id\"]  = filenames\n\ncols = df.columns.tolist()\ncols = cols[-1:] + cols[:-1]\ndf = df[cols]\ndf.head(5)\n","751b9667":"df.to_csv(\"submission.csv\",index=False)","52642430":"\n## My Model using extracted features from ResNet Pretrained\n\n","65c3edd3":"**Hiten Garg**\n> **Deep Learning Project**","d2de0265":"\n## Saving Test Data Output to 'submission.csv'","7847093f":"## Test Data Preperation","fe70a834":"## Data Preperation","26bbaa61":"## Clearly , there is some amount of class imbalance ,\n## as biggest class contains almost double of smallest class"}}