{"cell_type":{"47fd7aa9":"code","63b0cacf":"code","c061d52c":"code","680f9c19":"code","da9bb52c":"code","1acfc053":"code","e0903bd9":"code","a6631e29":"code","d6de8706":"code","a09536ee":"code","2c2cb748":"code","8853e571":"code","fff85a54":"code","c1b74f8e":"code","d83ce8fb":"code","fea8eb8a":"code","3d44caa0":"code","8349ecf6":"code","07e4ed1b":"code","7feaada2":"code","2cbeb86e":"code","99ae6525":"code","4a6248bb":"code","13b1b720":"code","f7e85779":"code","c59359b5":"markdown","606fa4bf":"markdown","2d6c8b9e":"markdown","4fb39102":"markdown","aa52f622":"markdown","fb45a15e":"markdown","220953ff":"markdown","3a98a502":"markdown","e9c0fc19":"markdown","a9628b41":"markdown","5ac4d06c":"markdown","a12e693a":"markdown","a475a603":"markdown","a377153c":"markdown","c998f172":"markdown","56ef38f8":"markdown"},"source":{"47fd7aa9":"import pandas as pd\nimport tensorflow as tf\nimport numpy as np\nfrom sklearn import preprocessing\nimport matplotlib.pyplot as plt\nimport warnings \nwarnings.filterwarnings('ignore')","63b0cacf":"df=pd.read_csv('..\/input\/credit-bank-datacsv\/credit_bank_data.csv.csv')","c061d52c":"df.head()","680f9c19":"df.drop(columns=['user_id','address','email','education_level'],axis=1,inplace=True)","da9bb52c":"from datetime import datetime,date\ndays_in_year = 365.2425\ndf['age']=''\nfor i in range(len(df)):\n  birth_date = datetime.strptime(df['date_of_birth'][i], '%Y-%m-%d').date()\n  df['age'][i] = int((date.today() - birth_date).days \/ days_in_year)\ndf.drop('date_of_birth',axis=1,inplace=True)","1acfc053":"df['capital_net']=df['capital_gain']-df['capital_loss']","e0903bd9":"encode=['gender','workclass','marital_status','occupation','relationship','inquiry_purpose_code','institute_type','account_type','portfolio_type','asset_code','asset_class_cd']","a6631e29":"for i in encode:\n  data=(pd.get_dummies(df[i],dummy_na=True,prefix=i))\n  df=df.join(data)\ndf.drop(columns=encode,axis=1,inplace=True)","d6de8706":"from sklearn.model_selection import train_test_split\ncol=df.columns.tolist()\ncol.remove(\"approved\")\nx=df[col]\ny=df[\"approved\"]\ntrainx,testx,trainy,testy = train_test_split(x,y,test_size=0.2,random_state=2)","a09536ee":"trainx.reset_index(drop=True,inplace=True)\ntestx.reset_index(drop=True,inplace=True)\ntrainy.reset_index(drop=True,inplace=True)\ntesty.reset_index(drop=True,inplace=True)","2c2cb748":"from sklearn.preprocessing import MinMaxScaler\n \n# Fit your data on the scaler object\ncol=['capital_gain','capital_loss','hours_per_week','age']\nfor i in col:\n  scaler = MinMaxScaler()\n  trainx[col]=scaler.fit_transform(trainx[col])\n  testx[col]=scaler.transform(testx[col])\nscaler2 = MinMaxScaler()\ntrainx[['capital_net']]=scaler2.fit_transform(trainx[['capital_net']])\ntestx[['capital_net']]=scaler2.transform(testx[['capital_net']])","8853e571":"trainy.value_counts()","fff85a54":"from imblearn.combine import SMOTEENN \nsme = SMOTEENN(random_state=0)\ntrainx_over, trainy_over = sme.fit_resample(trainx, trainy)\nsmetest = SMOTEENN(random_state=0)\ntestx_over, testy_over = smetest.fit_resample(testx, testy)","c1b74f8e":"import collections\nprint(collections.Counter(trainy_over))\nprint(collections.Counter(testy_over))","d83ce8fb":"trainx = pd.DataFrame(trainx_over, columns=trainx.columns)\ntrainy=pd.DataFrame(trainy_over)\ntestx = pd.DataFrame(testx_over, columns=testx.columns)\ntesty = pd.DataFrame(testy_over)","fea8eb8a":"from sklearn.metrics import accuracy_score\n\ndef model(model):\n    model.fit(trainx,trainy)\n    modelpred=model.predict(testx)\n    return(accuracy_score(modelpred, testy)),modelpred","3d44caa0":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neural_network import MLPClassifier\nfrom xgboost import XGBClassifier\nimport lightgbm as lgb\nfrom sklearn.neighbors import KNeighborsClassifier\n\nknc = KNeighborsClassifier()\nlgbm = lgb.LGBMClassifier()\nxgb = XGBClassifier(random_state=0)\nmlp = MLPClassifier(hidden_layer_sizes=(10,4,))\nlogreg = LogisticRegression(max_iter=1000)\nrf = RandomForestClassifier()\n\nmodels=[knc,lgbm,xgb,mlp,logreg,rf]\nmodelpreds=[]\nfor i in models:\n  accuracy,modelpred=(model(i))\n  modelpreds.append(modelpred)\n  print(accuracy)","8349ecf6":"from sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import ConfusionMatrixDisplay\ndisp = ConfusionMatrixDisplay(confusion_matrix=confusion_matrix(testy, modelpreds[1]),display_labels=['False','True'])\ndisp.plot()","07e4ed1b":"from sklearn.metrics import classification_report\nprint(classification_report(testy, modelpreds[1]))","7feaada2":"from sklearn.metrics import roc_curve\nfpr, tpr, thresholds = roc_curve(testy, modelpreds[1])\nplt.plot(fpr,tpr)","2cbeb86e":"testx['capital_net']=scaler2.inverse_transform(testx[['capital_net']])","99ae6525":"testx['capital_net'].describe(percentiles=[0.90])","4a6248bb":"testx['credit_limit']=0 #default\nfor i in range(len(testx)):\n  if(testx['capital_net'][i]>=0 and modelpreds[1][i]==1):\n    testx['credit_limit'][i]=1000+testx['capital_net'][i]*7000\/99999\n  elif(testx['capital_net'][i]<0 and modelpreds[1][i]==1):\n    testx['credit_limit'][i]=1000","13b1b720":"testx['credit_limit'].describe()","f7e85779":"(testx['credit_limit']).hist()","c59359b5":"Scaling using minmaxscaler","606fa4bf":"Calculating net capital","2d6c8b9e":"\nCredit limit allocation\n","4fb39102":"We see that the max value of capital_net on the test set is 99999.So since we know that the credit limit is between 1000 and 8000.A rough formula to assign credit limit is -\n\nCredit limit=1000+(capital_net\/99999)*7000  if the capital_net is >=0 and the   LGBM model predicted TRUE\n\nCredit limit=1000 if the capital_net is <0 and the LGBM model predicted TRUE\n\nCredit limit=0 if the model predicted FALSE","aa52f622":"Plotting Results for LGBM","fb45a15e":"We see that LightGBM gives the best accuracy score","220953ff":"Checking for dataset imbalance","3a98a502":"Splitting into train\/test datasets","e9c0fc19":"Calculating age from dob","a9628b41":"Building model","5ac4d06c":"Reading data","a12e693a":"We see that the credit limit values have a max of 8000","a475a603":"We see that the dataset is imbalanced.Using SMOTEENN to handle imbalanced dataset","a377153c":"First get back the original capital_net values for the test set","c998f172":"Dropping fields that are not significant\n","56ef38f8":"One hot encoding"}}