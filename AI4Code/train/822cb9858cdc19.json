{"cell_type":{"284f1ac4":"code","84d0803d":"code","83a98ee3":"code","3a49c547":"code","1c2697c3":"code","7adb572e":"code","c9677a81":"code","d646df8e":"code","770ce385":"code","f5b1cb54":"code","5c5b5d9f":"code","e98b5339":"markdown","5a06610e":"markdown","6bb4786d":"markdown","4b6d4547":"markdown"},"source":{"284f1ac4":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","84d0803d":"import os\nimport gc\nfrom subprocess import check_output\nfrom PIL import Image\nfrom matplotlib import image\nfrom matplotlib import pyplot\nfrom fastai import *\nfrom fastai.vision import *","83a98ee3":"#check file directory structure\nprint(check_output([\"ls\", \"..\/input\/chest_xray\/chest_xray\/train\"]).decode(\"utf8\"))","3a49c547":"#return array of labels for a given set of images\ndef get_labels(label,size):\n    return np.array([label] * size)\n\n#creates and returns shuffled arrays \ndef shuffle_dataset(a, b):\n    assert len(a) == len(b)\n    p = np.random.permutation(len(a))\n    return a[p], b[p]","1c2697c3":"#specify paths to images\nPATH        = '..\/input\/chest_xray\/chest_xray'\n\n#training set images\nTRAIN_NORM  = PATH + '\/train\/NORMAL\/'\nTRAIN_PNEU  = PATH + '\/train\/PNEUMONIA\/'","7adb572e":"files_normal  = get_image_files(TRAIN_NORM)\nfiles_pneu    = get_image_files(TRAIN_PNEU)\n\n#merge both classes into single list\ndata_set = files_normal + files_pneu\n\n#create arrays of labels\ndata_labels = np.concatenate((get_labels('normal',len(files_normal)), get_labels('pneumonia', len(files_pneu))), axis=0)\n\n#return shuffled datasets\ndata_shuffled, data_labels = shuffle_dataset(np.array(data_set), data_labels)","c9677a81":"#partition data into training and validation sets\ndata = ImageDataBunch.from_lists(PATH+'\/train\/', data_shuffled, data_labels, ds_tfms=get_transforms(), size=264)\n\n#normalize pixel values\ndata.normalize(imagenet_stats)\n\n#view a small sample of the data\ndata.show_batch(rows=3, figsize=(12,10))","d646df8e":"#initialize convolutional neural net\nlearner = cnn_learner(data, models.resnet34, metrics=error_rate)\n\n#view the CNN model\nlearner.model","770ce385":"#fit the model\nlearner.fit_one_cycle(5)","f5b1cb54":"interp = ClassificationInterpretation.from_learner(learner)\n\n#show the images that were the furthest from correct\ninterp.plot_top_losses(9, figsize=(15,10))\n\n# plot true\/false positives\/negatives\ninterp.plot_confusion_matrix(figsize=(7,7), dpi=60)","5c5b5d9f":"# use for garbage collection, if needed\n# del data, interp, learner\n# gc.collect()","e98b5339":"### Training the Model:","5a06610e":"### Results and Interpretation:\n\nAfter 5 epochs, the model yielded a total accuracy rate of ~0.965^, a sensitivity of ~0.886^ and a specificity of ~0.991^. Given the nature of this classification task i.e., predicting whether an individual has an illness, increasing the sensitivity of the model is a priority for future versions of the model.\n\nThe plot of top losses below shows that the 11 images with the highest losses were all false negative cases i.e., the model identified a case of pneumonia as \"normal.\"\n\n^ NOTE: The metrics shown in the table above and the confusion matrix below may vary slightly from these numbers, as the accuracy of the model depends on the order of the training set, which is randomly determined. Future versions of the model may seek to find an optimal ordering of the training set.","6bb4786d":"### Overview:\nThis CNN model predicts whether a given X-Ray image corresponds to a case of pneumonia. The model utilizes transfer learning and was trained further on a set of 4173 X-Rays.\n\nThe Dataset: Chest X-ray images (anterior-posterior) were selected from retrospective cohorts of pediatric patients of one to five years old from Guangzhou Women and Children\u2019s Medical Center, Guangzhou. All chest X-ray imaging was performed as part of patients\u2019 routine clinical care.\n\nFor the analysis of chest x-ray images, all chest radiographs were initially screened for quality control by removing all low quality or unreadable scans. The diagnoses for the images were then graded by two expert physicians before being cleared for training the AI system. In order to account for any grading errors, the evaluation set was also checked by a third expert. (Credit to Paul Mooney for the description of the dataset: https:\/\/www.kaggle.com\/paultimothymooney\/chest-xray-pneumonia)\n\nData Source: https:\/\/data.mendeley.com\/datasets\/rscbjbr9sj\/2\n\nDisclaimer: This model was built for fun\/practice and is not meant to stand in for professional medical diagnoses or more sophisticated learning models. \n\n### Update History:\n*Version 0.1: First commit*  \n*Version 0.1.1: Added overview*\n\n### Setup:","4b6d4547":"### Dataset Preparation and Exploration:"}}