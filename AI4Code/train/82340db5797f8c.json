{"cell_type":{"ea071c74":"code","492f5eb0":"code","49260af6":"code","3161d560":"code","9760869c":"code","3019b84d":"code","ae8a1029":"code","14350efb":"code","0618a0c7":"code","58ee225a":"code","03396dbc":"code","1691e5b9":"code","c178bf40":"code","9a5abe67":"code","dff0eec5":"code","6c141a3f":"code","310cf18b":"code","5b4f137a":"code","0a1a3637":"code","7940857e":"code","4a33f88d":"code","f42a76b8":"code","dffa04f1":"code","f89b577e":"code","37e31aaa":"code","a66f5e45":"code","8951608c":"code","37ab0487":"code","8fc5fb41":"code","d7df07c9":"code","1244e08e":"markdown","e3807264":"markdown","2be4b9c0":"markdown","2ebc3824":"markdown","b295301d":"markdown","862dccd9":"markdown","efe9307c":"markdown","b612b978":"markdown","3051c88f":"markdown","d6604b19":"markdown","ddefc9c2":"markdown"},"source":{"ea071c74":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","492f5eb0":"pip install xlrd","49260af6":"pip install openpyxl","3161d560":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")","9760869c":"train = pd.read_excel(\"\/kaggle\/input\/predict-book-prices\/train.xlsx\")\ntrain.shape","3019b84d":"train.info()","ae8a1029":"df_train = train.copy()\n\ndrop_columns = [\"Title\", \"Author\", \"Synopsis\", \"Genre\"]\ndf_train = df_train.drop(drop_columns, axis =1)\ndf_train.shape","14350efb":"df_train.Edition.head()","0618a0c7":"edition_new = df_train.Edition.str.partition(',')\ndf_train[\"Edition_new\"] = edition_new[0]\ndf_train.head()","58ee225a":"df_train.Edition_new.value_counts()","03396dbc":"df_train[\"edition_new_index\"] = np.where((df_train[\"Edition_new\"] != \"Paperback\") & (df_train[\"Edition_new\"] != \"Hardcover\") & \n                                   (df_train[\"Edition_new\"] != \"Mass Market Paperback\") & (df_train[\"Edition_new\"] != \"Sheet music\") &\n                                         (df_train[\"Edition_new\"] != \"Flexibound\") & (df_train[\"Edition_new\"] != \"Cards\"), \"Others\", df_train[\"Edition_new\"])\n\ndf_train = df_train.drop([\"Edition\", \"Edition_new\"], axis = 1)\ndf_train.rename(columns = {'edition_new_index' : 'Edition'}, inplace = True)\n\ndf_train.head()","1691e5b9":"df_train.Edition.value_counts()","c178bf40":"df_train[\"Reviews\"] = df_train[\"Reviews\"].astype(str).str[:3]\ndf_train[\"Reviews\"] = df_train[\"Reviews\"].astype(float)\nratings = df_train[\"Ratings\"].astype(str).str.partition(' ')\ndf_train[\"ratings_new\"] = ratings[0]\ndf_train = df_train.drop(\"Ratings\", axis = 1)\ndf_train.rename(columns = {'ratings_new' : 'Ratings'}, inplace = True)\ndf_train.head()","9a5abe67":"df_train.Ratings.value_counts()","dff0eec5":"df_train[\"Ratings\"] = df_train[\"Ratings\"].str.replace(\",\", \"\")\ndf_train[\"Ratings\"] = df_train[\"Ratings\"].astype(int)\ndf_train.info()","6c141a3f":"sns.heatmap(df_train.corr(), annot = True, cmap = \"YlGnBu\")","310cf18b":"sns.pairplot(df_train)","5b4f137a":"sns.boxplot(df_train[\"Price\"])","0a1a3637":"test = pd.read_excel(\"\/kaggle\/input\/predict-book-prices\/test.xlsx\")\ntest.shape","7940857e":"df_test = test.copy()\ndf_test = df_test.drop(drop_columns, axis = 1)\ndf_test.head()","4a33f88d":"edition_new = df_test.Edition.str.partition(',')\ndf_test[\"Edition_new\"] = edition_new[0]\ndf_test.head()","f42a76b8":"df_test.Edition_new.value_counts()","dffa04f1":"df_test[\"edition_new_index\"] = np.where((df_test[\"Edition_new\"] != \"Paperback\") & (df_test[\"Edition_new\"] != \"Hardcover\") & \n                                   (df_test[\"Edition_new\"] != \"Mass Market Paperback\") & (df_test[\"Edition_new\"] != \"Sheet music\") &\n                                         (df_test[\"Edition_new\"] != \"Flexibound\") & (df_test[\"Edition_new\"] != \"Cards\"), \"Others\", df_test[\"Edition_new\"])\n\ndf_test = df_test.drop([\"Edition\", \"Edition_new\"], axis = 1)\ndf_test.rename(columns = {'edition_new_index' : 'Edition'}, inplace = True)\n\ndf_test[\"Reviews\"] = df_test[\"Reviews\"].astype(str).str[:3]\ndf_test[\"Reviews\"] = df_test[\"Reviews\"].astype(float)","f89b577e":"df_test.info()","37e31aaa":"ratings = df_test[\"Ratings\"].astype(str).str.partition(' ')\ndf_test[\"ratings_new\"] = ratings[0]\ndf_test = df_test.drop(\"Ratings\", axis = 1)\ndf_test.rename(columns = {'ratings_new' : 'Ratings'}, inplace = True)\ndf_test[\"Ratings\"] = df_test[\"Ratings\"].str.replace(\",\", \"\")\ndf_test[\"Ratings\"] = df_test[\"Ratings\"].astype(int)","a66f5e45":"df_test.info()","8951608c":"train.head()","37ab0487":"df_train.head()","8fc5fb41":"test.head()","d7df07c9":"df_test.head()","1244e08e":"**Before Cleaning**","e3807264":"**After Cleaning up of Raw Data the train and the test data can be seen as follows**","2be4b9c0":"We can see that the ratings are separated by commas, so we'll remove them in the next step","2ebc3824":"**After Cleaning**","b295301d":"**EDA on Train Dataset**","862dccd9":"**EDA on Test Dataset**","efe9307c":"**Before Cleaning**","b612b978":"The test dataset contains **4 independent variables (Reviews, BookCategory, Edition & Ratings)**. Out of the 4 independent variables **BookCategory** and **Edition** are **Categorical variables**. With these independent variables we have to determine the target variable **Price**","3051c88f":"The train dataset contains **4 independent variables (Reviews, BookCategory, Edition & Ratings)** and **1 target\/dependent variable (Price)**. Out of the 4 independent variables **BookCategory** and **Edition** are **Categorical variables**.","d6604b19":"**After Cleaning**","ddefc9c2":"**Importing the necessary libraries**"}}