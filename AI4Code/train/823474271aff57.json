{"cell_type":{"ca088257":"code","458e7ff3":"code","6bd60d8e":"code","705f4c69":"code","77f1dc14":"code","2b3e68bb":"code","ee24aef6":"code","f948b192":"code","ec33dfdd":"code","20c17c62":"code","ad350580":"code","60b89196":"code","fbbb32fe":"code","c6a4da8e":"code","3782ecb5":"markdown","60746d22":"markdown","8a6d3830":"markdown","580c78a1":"markdown","6e5e9616":"markdown","05775760":"markdown","deb1611c":"markdown","250e7a0c":"markdown"},"source":{"ca088257":"!pip install seaborn --upgrade\nimport seaborn as sns\nsns.set_context(\"talk\")\nsns.__version__","458e7ff3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6bd60d8e":"pal=sns.color_palette(sns.mpl_palette(\"Set3\", 10))\nsns.palplot(pal)\nfirst = pal[4]\nsecond = pal[3]\nthird = pal[5]\npal_new=[first,second,third]\nsns.palplot(pal_new)\n\nsns.set_theme(palette=pal_new)","705f4c69":"df = pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head()","77f1dc14":"df.info()\n#df.sort_values(by=['Reviews'],ascending=False)","2b3e68bb":"df.describe()","ee24aef6":"print(df['Genre'].value_counts())\ngenre_pivot = pd.pivot_table(data=df,index=['Year','Genre'],aggfunc={'Price':np.mean,'Reviews':np.mean, 'User Rating':np.mean})\ngenre_pivot = genre_pivot.reset_index()\ngenre_pivot","f948b192":"total_reviews_by_author = df.groupby(by=['Author','Genre','Name','Year'])['Reviews'].sum().reset_index().sort_values(by=['Reviews'],ascending=False).reset_index(drop=True)\ntotal_reviews_by_author.head(10)\n","ec33dfdd":"pd.set_option('display.max_rows', None)\nduplicate = df[df.duplicated(['Genre','Name', 'Author'],keep=False)]\nduplicate.sort_values(by=['Genre','Name', 'Author'],ascending=False)","20c17c62":"df_check_title = df['Name'].value_counts().reset_index()\ndf_check_title.columns = ['Name', 'Yearly Top 50 count']\ndf_check_title = df_check_title.merge(df[['Name','Genre']].drop_duplicates(), on='Name', how='left')\n\ng = sns.catplot(y='Name',x='Yearly Top 50 count', hue='Genre',\n                data=df_check_title.head(25),\n                kind='bar', height=6, aspect=2)\nplt.title('Occurances in top 50 from 2009-2019') \nplt.xlabel('Count')\nplt.ylabel('Title')\nplt.show()","ad350580":"g = sns.catplot(x='User Rating', hue='Genre', \n                data=df,\n                kind='count', height=6, aspect=2)\nplt.title('Count of Genre User Ratings') \nplt.show()","60b89196":"plt.figure(figsize=(14,6))\nplt.title(\"Average User Ratings by Year\") \ng = sns.pointplot(x=\"Year\", y=\"User Rating\",color=pal[5],\n                   data=df, dodge=True)\nplt.figure(figsize=(14,6))\nplt.title(\"Average Genre User Ratings by Year\") \ng = sns.pointplot(x=\"Year\", y=\"User Rating\", hue=\"Genre\",\n                   data=df, dodge=True)","fbbb32fe":"plt.figure(figsize=(14,6))\nplt.title(\"Average Price by Year\") \ng = sns.pointplot(x=\"Year\", y=\"Price\", color=pal[5],\n                   data=df, height=10,aspect=2.5, dodge=True)\n\nplt.figure(figsize=(14,6))\nplt.title(\"Average Genre Price by Year\") \ng = sns.pointplot(x=\"Year\", y=\"Price\", hue=\"Genre\",\n                   data=df, height=10,aspect=2.5, dodge=True)\n","c6a4da8e":"g = sns.jointplot(data=df, x=\"User Rating\", y=\"Price\", hue=\"Genre\", kind=\"kde\", height = 6)","3782ecb5":"# Number of Reviews","60746d22":"Upon further investigation(visually inspecting) we can determine that whenever a book is on the list more than once, the User Rating and Price can change, but the Review number does not","8a6d3830":"Non Fiction books seem to have a longer shelf life than Fiction; particularly self-help books  ","580c78a1":"### Duplicate Review count numbers!\nFrom the Review data below, we can see that there are duplicate review numbers.  ","6e5e9616":"Non Fiction occurs more often than Fiction","05775760":"# Conclusion\n-Both Fiction and Non Fiction have been decreasing in price over the years, while user rating has been on the increase.<br>\n-Fiction seems to be cheaper and have higher user ratings than Non Fiction, but Non Fiction lasts longer over the years.","deb1611c":"# User Ratings","250e7a0c":"# Prices"}}