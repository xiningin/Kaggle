{"cell_type":{"6769319b":"code","f630a8f8":"code","86bf965b":"code","4d088605":"code","1bf4cbbb":"code","96a1e247":"code","66fd0c25":"code","dcd69038":"code","c3c9bfe6":"code","a0bc91b0":"code","d93be97c":"code","427ab323":"code","974a8f9f":"markdown","8779f1dc":"markdown","98f13f3c":"markdown","ec2d878d":"markdown","f57a14ba":"markdown","42a1fb40":"markdown","66da19d0":"markdown","67c4d4d3":"markdown","9288a27b":"markdown","6475a6ed":"markdown","12ce1f42":"markdown","7c821ace":"markdown"},"source":{"6769319b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f630a8f8":"df=pd.read_csv('\/kaggle\/input\/predict-pizza-price\/Pizza-Price.csv')\ndf","86bf965b":"df.columns","4d088605":"final_df=pd.get_dummies(df)\nfinal_df.columns","1bf4cbbb":"final_df.drop(['Restaurant_T','Extra Cheeze_no','Extra Mushroom_no','Extra Spicy_no'],axis=1,inplace=True)\nfinal_df.columns","96a1e247":"X=final_df.drop('Price',axis=1)\nY=final_df['Price']\nX.head(),Y.head()","66fd0c25":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestRegressor\nrf=RandomForestRegressor()","dcd69038":"rf.fit(X,Y)\nrf.score(X,Y)","c3c9bfe6":"def get_pred_price(inch,restau,cheese,musroom,spicy):\n    hotel={'A':1,'B':2,'C':3,'D':4,'E':5,'F':6,'G':7,'H':8,'I':9,'J':10,'K':11,'L':12,'M':13,'N':14,'O':15,'P':16,'Q':17,'R':18,'S':19}\n    param=[inch,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,cheese,musroom,spicy]\n    if restau in hotel.keys():\n        param[hotel[restau]]=1\n    price=rf.predict([np.array(param)])\n    return price","a0bc91b0":"get_pred_price(12,'A',1,1,0)","d93be97c":"get_pred_price(14,'T',1,1,1)","427ab323":"get_pred_price(14,'R',1,0,1)","974a8f9f":"# Loading Data","8779f1dc":"> **Training And Checking The Accuracy of The Model**","98f13f3c":"> **Droping the Columns That will cause the Dummy Trap**","ec2d878d":"> **Pizza From Restaurant 'T', with Extra Cheese, Extra Mushroom and Extra Spice**","f57a14ba":"> **Making Function For Making Predictions**","42a1fb40":"> **Pizza From Restaurant 'R', with Extra Cheese And Extra Spice**","66da19d0":"# Doing Predictions","67c4d4d3":"# Model Making","9288a27b":"# Lets Do one hot encoding to Make All the Data Numerical","6475a6ed":"> **Diving Data into Dependent And Independent Variables**","12ce1f42":"> **Pizza From Restaurant 'A', with Extra Cheese And Extra Mushroom**","7c821ace":"***We Are Not Doing Any Train-Test Split As We Have only One Record Of Each Type Of Restaurant And We need That for Traning Our Model Precisely***"}}