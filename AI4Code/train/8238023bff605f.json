{"cell_type":{"363eed10":"code","51fdba44":"code","a73f268b":"code","4001a240":"code","2f0e9f51":"code","085fa85d":"code","2dddbb04":"code","d193cfb5":"code","d0464bc5":"code","81060eac":"code","1c23132b":"code","32f14af5":"code","068ac867":"code","6b66cbd7":"markdown","58ac593d":"markdown","8cdfe6a4":"markdown","c40dfb42":"markdown","ff12f8b7":"markdown","88a4485f":"markdown","3d71988f":"markdown","9655218b":"markdown","ff96ffac":"markdown"},"source":{"363eed10":"!pip install datefinder","51fdba44":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport re,glob\nimport datefinder\nprint(os.listdir(\"..\/input\"))\n","a73f268b":"job_path = \"..\/input\/cityofla\/CityofLA\/Job Bulletins\/\"\njob_files = os.listdir(job_path)\nprint(\"No of files in Job Bulletins Folder \",len(job_files))","4001a240":"from wand.image import Image as Img\npdf = '..\/input\/cityofla\/CityofLA\/Additional data\/PDFs\/2014\/April 2014\/040414\/PORT POLICE SERGEANT 3222.pdf'\nImg(filename=pdf, resolution=200)","2f0e9f51":"with open(job_path+job_files[0]) as file:\n    print(\"File name: \",file.name)\n    print(\"******************\")\n    print(file.read())","085fa85d":"requirment_tag = ['REQUIREMENTS\/MINIMUM QUALIFICATIONS', 'REQUIREMENTS\/ MINIMUM QUALIFICATIONS', 'REQUIREMENTS\/MINUMUM QUALIFICATIONS', \n             'REQUIREMENT\/MINIMUM QUALIFICATION', 'REQUIREMENT\/ MINIMUM QUALIFICATION', 'REQUIREMENTS', 'REQUIREMENT']\n","2dddbb04":"with open(job_path+job_files[0]) as file:\n    \n    text=file.read()\n    \n    for i in requirment_tag:\n        if i in text:\n            text = text.replace('\\n\\n','~')\n            text = text.replace(i,\"Requirment\")\n#             break\n            \n            \n    title          = text.split(\"Class Code:\")[0].strip()\n    \n    class_code     = text.split(\"Class Code:\")[1].split(\"Open Date\")[0].strip()\n    \n    open_date      = text.split(\"Open Date:\")[1].split(\"(\")[0].strip()\n    open_date      = re.search(\"([0-9]{2}\\-[0-9]{2}\\-[0-9]{2})\", open_date).group()\n    \n    annual_salary  = text.split(\"ANNUAL SALARY\")[1].split(\"NOTES\")[0].strip()\n    annual_salary  = re .split(r'\\r\\n|\\r|\\n', annual_salary, flags=re.M)[0].strip()\n    \n    find_requirment     = re.search(r'Requirment~(.*?)~', text, flags=re.S | re.M)\n    if find_requirment:\n        requirements   = find_requirment.group(1)\n    else:\n        requirements= \"\"\n    \n    where_to_apply     = text.split(\"WHERE TO APPLY\")[1].split(\"NOTE:\")[0].strip()\n    \n    application_deadine = \" \".join(text.split(\"APPLICATION DEADLINE\")[1].split(\"~\")[:2])\n    for i in datefinder.find_dates(application_deadine):\n        application_deadine = i\n    \n    duties = \" \".join(text.split(\"DUTIES\")[1].split(\"~\")[:2])\n    \n    \n    print(\"Title: \", title)\n    print(\"***********************************************************************\")\n    print(\"Class code: \", class_code)\n    print(\"***********************************************************************\")\n    print(\"Open date: \",open_date)\n    print(\"***********************************************************************\")\n    print(\"Annual salary: \",annual_salary)\n    print(\"***********************************************************************\")\n    print(\"Requirment: \", requirements)\n    print(\"***********************************************************************\")\n    print(\"Where to Apply: \", where_to_apply)\n    print(\"***********************************************************************\")\n    print(\"Application DeadLine: \", application_deadine)\n    print(\"***********************************************************************\")\n    print(\"Duties: \",duties)\n    print(\"***********************************************************************\")","d193cfb5":"data=[]\nfor i in job_files:\n    with open(job_path+i) as file:\n        filename=str(file.name).split(\"\/\")[-1]\n        try:\n            text=file.read()\n            for i in requirment_tag:\n                if i in text:\n                    text = text.replace('\\n\\n','~')\n                    text = text.replace(i,\"Requirment\")\n            title      = text.split(\"Class Code:\")[0].strip()\n            \n            class_code = text.split(\"Class Code:\")[1].split(\"Open Date\")[0].strip()\n            \n            open_date  = text.split(\"Open Date:\")[1].split(\"(\")[0].strip()\n            open_date  = re.search(\"([0-9]{2}\\-[0-9]{2}\\-[0-9]{2})\", open_date).group()\n            \n            annual_salary  = text.split(\"ANNUAL SALARY\")[1].split(\"NOTES\")[0].strip()\n            annual_salary  =  re .split(r'\\r\\n|\\r|\\n', annual_salary, flags=re.M)[0].strip()\n            \n            \n            find_requirment     = re.search(r'Requirment~(.*?)~', text, flags=re.S | re.M)\n            if find_requirment:\n                requirement   = find_requirment.group(1)\n            else:\n                requirement  = \"\"\n\n            where_to_apply  = text.split(\"WHERE TO APPLY\")[1].split(\"NOTE:\")[0].strip()\n            \n            application_deadine = \" \".join(text.split(\"APPLICATION DEADLINE\")[1].split(\"~\")[:5])\n            for i in datefinder.find_dates(application_deadine):\n                application_deadine = str(i)\n#                 print(application_deadine)\n            \n            duties = \" \".join(text.split(\"DUTIES\")[1].split(\"~\")[:2])\n            \n            data_list=[]\n            for i in [filename,title,class_code,open_date,annual_salary,requirement,where_to_apply,application_deadine,duties]:\n                data_list.append(i.replace(\"~\",\"\"))\n            data.append(data_list)\n            \n        except Exception as e:\n            print(filename)\n\n","d0464bc5":"df = pd.DataFrame(data)\ndf.columns = [\"File_name\", \"Title\", \"Class_code\",\"Open_date\",\"Annual_salary\",\"Requirment\",\"Where_to_Apply\",\n              \"Application_deadine\",\"Duties\"]\ndf.drop(['File_name'],inplace=True,axis=1)\ndf.head()","81060eac":"df.shape","1c23132b":"df.to_csv(\"job_bulletins.csv\")","32f14af5":"job_df = pd.read_csv(\"job_bulletins.csv\")\njob_df.drop(['Unnamed: 0'],inplace=True,axis=1)\njob_df.to_csv(\"job_bulletins.csv\")\njob_df.head()","068ac867":"job_df.columns","6b66cbd7":"## Thank you for reading it. Plz Let me know your thoughts on it. I will keep on update my work on it","58ac593d":"## Lets visualize a single file","8cdfe6a4":"# Job Bulletiens","c40dfb42":"#### Add all the possible requirment tags","ff12f8b7":"## dataframe into csv","88a4485f":"## Lets Print the single PDF File","3d71988f":"In this notebook I can able to get \n1. Title\n2. Class code\n3. Open data\n4. Annual salary\n5. Requirment \n6. Where to apply\n7. Dead Line (Date)\n8. Duties\n\n","9655218b":"## Convert list into dataframe","ff96ffac":"## Lets make a dataframe to store the open date and close code from all the file\n"}}