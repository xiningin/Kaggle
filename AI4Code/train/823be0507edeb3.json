{"cell_type":{"cf45972c":"code","5f3e0384":"code","38418535":"code","5a747317":"code","b5cb2ef5":"code","19e6074e":"code","640fb296":"code","638782be":"code","4b3f2f75":"code","3b9ec4d4":"markdown","04e620fc":"markdown","0a600bc2":"markdown","cafb4672":"markdown","9eed2be7":"markdown","e8a0b101":"markdown","73af930c":"markdown","a2a723be":"markdown","cb248153":"markdown","104ceb1c":"markdown"},"source":{"cf45972c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport random\nimport numpy as np\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5f3e0384":"df_train = pd.read_csv(\"\/kaggle\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv\")\nprint (df_train.shape)\ndf_train.head()","38418535":"sns.set(style=\"darkgrid\")\npd.DataFrame(df_train.isna().sum().sort_values(ascending=True), columns=['Missing Values']\n            ).plot(kind='barh', figsize=(8,6))\nplt.show()","5a747317":"sns.set(style=\"darkgrid\")\npd.DataFrame(df_train.drop(columns=['enrollee_id']).nunique().sort_values(ascending=True), \n             columns=['Unique Values']).plot(kind='barh', figsize=(8,6), logx=True)\nplt.show()","b5cb2ef5":"list_ = ['gender', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline',\n         'company_size', 'company_type', 'last_new_job']\nsns.set(style=\"darkgrid\")\nfig, ax = plt.subplots(4, 2, figsize=(20,30))\nfor i, ax in zip(range(8), ax.flat):\n    col = list_[i]\n    sns.countplot(x=col, hue='target', data=df_train, ax=ax)\nplt.show()","19e6074e":"plt.figure(figsize=(8,8))\nsns.heatmap(df_train.drop(columns=['enrollee_id']).corr(), annot=True, square=True)\nplt.show()","640fb296":"sns.set(style=\"darkgrid\")\nplt.figure(figsize=(8,6))\nsns.countplot(x='enrolled_university', hue='education_level', data=df_train)\nplt.show()","638782be":"### drop city column, since every unique city is associated with a unique development index\ndf_train.drop(columns=['city'], inplace=True)","4b3f2f75":"### converting 'company_size' to ordinal feature\ndict_mapping = {'<10':0, '10\/49':1, '50-99':2, '100-500':3, '500-999':4, '1000-4999':5, '5000-9999':6, '10000+':7}\ndf_train['company_size'].replace(dict_mapping, inplace=True)\n\nsns.set(style=\"darkgrid\")\nplt.figure(figsize=(12,8))\nsns.countplot(x='company_type', hue='company_size', data=df_train)\nplt.show()","3b9ec4d4":"## **Number of employees in different categories across both the type of target**","04e620fc":"## **Number of employees with different company size across company types**\n\n1. '<10' -> 0, \n1. '10\/49' -> 1, \n1. '50-99' -> 2, \n1. '100-500' -> 3, \n1. '500-999' -> 4, \n1. '1000-4999' -> 5, \n1. '5000-9999' -> 6, \n1. '10000+' -> 7","0a600bc2":"## **Missing values in each column**","cafb4672":"# **HR Analytics: Job Change of Data Scientist**","9eed2be7":"# **This work is in progress. Feel free to Upvote and give Feedback.**","e8a0b101":"## **Heatmap (correlation) among various numerical features**","73af930c":"## **Unique values in each column**","a2a723be":"## **Number of employees with different education level across enrolled university**","cb248153":"## **Load the training data**","104ceb1c":"# **EDA of Training Data**"}}