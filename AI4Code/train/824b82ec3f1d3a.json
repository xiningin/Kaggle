{"cell_type":{"da3c8736":"code","98478c7b":"code","a05a9a38":"code","44b1a0ad":"code","9353d223":"code","075b1419":"code","617fce9f":"code","84749baa":"code","94ebe495":"code","5c800f32":"code","9ca5035f":"code","2b3a3f98":"code","62bc1736":"code","e34334e6":"code","db18b76c":"markdown","7fef3ae8":"markdown","ef4680c4":"markdown"},"source":{"da3c8736":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/covid_19_india.csv'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","98478c7b":"\n#Importing Libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#First we will work on Main Dataset - Covid_19_data\n#we'll explore, analyise, visualize and predict for main dataset\n\n\n\n##df_india = df_covid19[df_covid19['Country\/Region']=='India']\n\ndf_india = pd.read_csv(\"..\/input\/covid19-in-india\/covid_19_india.csv\")\ndf_india.head()","a05a9a38":"df_india.info()","44b1a0ad":"#let's drop the column Sno and rename the columns \ndf_india.drop('Sno',axis=1,inplace=True)\ndf_india.rename(columns={'Cured': 'Recovered','State\/UnionTerritory':'State','ConfirmedIndianNational':'IndianNational','ConfirmedForeignNational':'Foreigners'},inplace=True)","9353d223":"df_india.info()","075b1419":"#let's see if we have some missing values\ndf_india.isna().sum()","617fce9f":"#Visualization of Deaths over the time\nplt.figure(figsize=(15,5))\nsns.barplot(x=df_india['Date'],y=df_india['Deaths'])\nplt.xticks(rotation=90)","84749baa":"#Visualization of Confirmed cases over the time\nplt.figure(figsize=(15,5))\nsns.barplot(x=df_india['Date'],y=df_india['Confirmed'])\nplt.xticks(rotation=90)","94ebe495":"#Visualization of Recovred cases over the time\nplt.figure(figsize=(15,5))\nsns.barplot(x=df_india['Date'],y=df_india['Recovered'])\nplt.xticks(rotation=90)","5c800f32":"#Joint Plot between Recovered and Death cases\nsns.jointplot(x='Recovered',y='Deaths',data=df_india)","9ca5035f":"#Joint Plot between Confirmed and Death cases\nsns.jointplot(x='Confirmed',y='Deaths',data=df_india)\n","2b3a3f98":"#State wise deaths Cases\nplt.figure(figsize=(15,5))\ndf_state = df_india.groupby(by=['State'],as_index=False)['Confirmed','Deaths','Recovered'].max().reset_index()\ndf_state.drop('index',axis=1,inplace=True)\nprint(df_state['Deaths'].sum())\nprint(df_state['Confirmed'].sum())\nprint(df_state['Recovered'].sum())\nsns.barplot(x=df_state['State'],y=df_state['Deaths'])\nplt.xticks(rotation=90)","62bc1736":"#State wise Confirmed Cases\nplt.figure(figsize=(15,5))\nsns.barplot(x=df_state['State'],y=df_state['Confirmed'])\nplt.xticks(rotation=90)","e34334e6":"#State wise recovered cases\nplt.figure(figsize=(15,5))\nsns.barplot(x=df_state['State'],y=df_state['Recovered'])\nplt.xticks(rotation=90)","db18b76c":"So we don't have any missing values,\nlet's jump to the visualization part","7fef3ae8":"So, we can see that most of the death cases are from Maharashtra, followed by Gujrat and Madhya Pradesh and other states","ef4680c4":"we can see that no of recovered cases are maximum from Kerala"}}