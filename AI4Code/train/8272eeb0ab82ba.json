{"cell_type":{"1e41bb11":"code","be1ffd79":"code","ee405ed1":"code","c550d6ac":"code","9aeda6bd":"code","8000e96a":"code","a96859b7":"code","641a6e9f":"code","55476564":"code","c8a211b8":"code","b05a9dd0":"code","cdccde62":"code","fc0e6aec":"code","f3cf0f2b":"code","dcdd0245":"code","6b03cac0":"code","fc9b156d":"code","ab2b7f1d":"code","ebb74090":"code","d7abcfdc":"code","77ee2681":"code","6f677861":"code","9c965a85":"code","259c22dd":"markdown","2af7b807":"markdown","6b92f8c2":"markdown","8bf757b5":"markdown","5c31bc96":"markdown"},"source":{"1e41bb11":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nprint(os.listdir(\"..\/input\"))","be1ffd79":"df = pd.read_csv('..\/input\/malicious-and-benign-websites\/dataset.csv')\ndf.head(10)","ee405ed1":"df.shape","c550d6ac":"df.dtypes","9aeda6bd":"print(df.isnull().sum())\ndf[pd.isnull(df).any(axis=1)]","8000e96a":"df = df.interpolate()\nprint(df.isnull().sum())","a96859b7":"#Charset\ndf['CHARSET'].unique()\ndf['CHARSET']=np.where(df['CHARSET'] =='iso-8859-1', 'ISO-8859-1', df['CHARSET'])\ndf['CHARSET']=np.where(df['CHARSET'] =='utf-8', 'UTF-8', df['CHARSET'])","641a6e9f":"#WHOIS_COUNTRY \ndf['WHOIS_COUNTRY'].unique()\ndf['WHOIS_COUNTRY']=np.where(df['WHOIS_COUNTRY'] =='United Kingdom', 'UK', df['WHOIS_COUNTRY'])\ndf['WHOIS_COUNTRY']=np.where(df['WHOIS_COUNTRY'] ==\"[u'GB'; u'UK']\", 'UK', df['WHOIS_COUNTRY'])\ndf['WHOIS_COUNTRY']=np.where(df['WHOIS_COUNTRY'] =='United Kingdom', 'UK', df['WHOIS_COUNTRY'])\ndf['WHOIS_COUNTRY']=np.where(df['WHOIS_COUNTRY'] =='us', 'US', df['WHOIS_COUNTRY'])\ndf['WHOIS_COUNTRY']=np.where(df['WHOIS_COUNTRY'] =='se', 'SE', df['WHOIS_COUNTRY'])\ndf['WHOIS_COUNTRY']=np.where(df['WHOIS_COUNTRY'] =='ru', 'RU', df['WHOIS_COUNTRY'])","55476564":"df.describe(include='all')","c8a211b8":"#How many URLs are malicious?\ndf['Type'].value_counts()","b05a9dd0":"df.groupby('Type').mean()","cdccde62":"df.groupby('Type').median()","fc0e6aec":"df.groupby(['CHARSET','Type']).count()","f3cf0f2b":"df.groupby(['WHOIS_COUNTRY','Type']).count()","dcdd0245":"correlation = df.corr()\nplt.figure(figsize = (20, 20))\nsns.set(font_scale = 2)\nsns.heatmap(correlation, annot = True, annot_kws = {'size': 15}, cmap = 'Blues')","6b03cac0":"#Type x URL Length\nplt.figure(figsize=(5, 5))\nsns.boxenplot(data = df, x=\"Type\", y=\"URL_LENGTH\",\n              color=\"b\", scale=\"linear\")","fc9b156d":"#Type x Number of Special Characters\nplt.figure(figsize=(5, 5))\nsns.boxenplot(data = df, x=\"Type\", y=\"NUMBER_SPECIAL_CHARACTERS\",\n              color=\"g\", scale=\"linear\")","ab2b7f1d":"#Type x Content Length\nplt.figure(figsize=(5, 5))\nsns.boxenplot(data = df, x=\"Type\", y=\"CONTENT_LENGTH\",\n              color=\"y\", scale=\"linear\")","ebb74090":"#Type x DNS Query Times\nplt.figure(figsize=(5, 5))\nsns.boxenplot(data = df, x=\"Type\", y=\"DNS_QUERY_TIMES\",\n              color=\"y\", scale=\"linear\")","d7abcfdc":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics\n\nX = df[['URL_LENGTH', 'NUMBER_SPECIAL_CHARACTERS','DNS_QUERY_TIMES']]\ny = df['Type']\n\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25,random_state=0)","77ee2681":"logistic_regression= LogisticRegression()\nlogistic_regression.fit(X_train,y_train)\ny_pred=logistic_regression.predict(X_test)\n\nprint (X_test) \nprint (y_pred)","6f677861":"print('Accuracy of logistic regression classifier on test set: {:.2f}'.format(logistic_regression.score(X_test, y_test)))","9c965a85":"from sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import roc_curve\n\nlogit_roc_auc = roc_auc_score(y_test, logistic_regression.predict(X_test))\nfpr, tpr, thresholds = roc_curve(y_test, logistic_regression.predict_proba(X_test)[:,1])\n\nplt.figure(figsize=(10, 6))\nplt.plot(fpr, tpr, label='Logistic Regression (area = %0.2f)' % logit_roc_auc)\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC')\nplt.legend(loc=\"lower right\")\nplt.savefig('Log_ROC')\nplt.show()","259c22dd":"**Logistic Regression**","2af7b807":"**Find important factors**","6b92f8c2":"**Discover the dataset**","8bf757b5":"Since AUC = 0.61, this model is predictable.","5c31bc96":"CONTENT_LENGTH has 812 NaN."}}