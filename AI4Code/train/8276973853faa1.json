{"cell_type":{"781efa41":"code","e3375b36":"code","3fefdc72":"code","10d3ab64":"code","686d17ca":"code","e6c792b1":"code","f5a0b6fb":"code","d9398734":"code","d110c8fc":"code","d3717203":"code","deeafd32":"code","e9dd6171":"code","dc7ae141":"code","a7f64293":"code","561ed87a":"code","c1ce02c3":"code","4805ac12":"code","26e141e7":"code","73fefd0d":"code","6fcf05ca":"code","8d6a9f81":"code","f8d7bfb0":"code","6960ae32":"code","df78ff41":"code","04ebfb76":"code","441f8fc6":"code","68035ce1":"code","9c57155d":"code","d4981e2f":"markdown","80465564":"markdown","2963e75c":"markdown","5b539f63":"markdown","300352e9":"markdown","fa49bdfd":"markdown","c64fbfca":"markdown","777ddb7e":"markdown","a896edb4":"markdown"},"source":{"781efa41":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e3375b36":"import matplotlib.pyplot as plt\nimport geopandas as gpd\nimport plotly.express as px\nimport seaborn as sns","3fefdc72":"fp = \"\/kaggle\/input\/india-2020-gisdata\/Igismap\/Indian_States.shp\"\nmap_df = gpd.read_file(fp)","10d3ab64":"map_df.keys()","686d17ca":"df = pd.read_csv(\"\/kaggle\/input\/foodvnv\/food.csv\")\n\ndf.style.highlight_max(color='Yellow').highlight_min(color='lightblue')\n","e6c792b1":"df.sort_values(by = 'States').style.bar(color='lightblue')","f5a0b6fb":"df.style.background_gradient(cmap='Blues')","d9398734":"df[['States','non-vegetarians','vegetarians']].groupby(['States']).median().sort_values('non-vegetarians', ascending = True).plot.bar(figsize=(20,9))","d110c8fc":"df[['States','vegetarians']].groupby(['States']).median().sort_values('vegetarians', ascending = True).plot.barh(figsize=(8,10))","d3717203":"df_nv = df.groupby('States')[['non-vegetarians']].mean().sort_values('non-vegetarians',ascending = False).reset_index()","deeafd32":"fig = px.bar(df_nv.head(5), x='States', y='non-vegetarians',\n             labels={'non-vegetarians':'NV index'},\n             color='non-vegetarians',\n             #orientation='h',\n             title=\"Top 5 Non-Vegetarians states\")\nfig.show()","e9dd6171":"df_v = df.groupby('States')[['non-vegetarians']].mean().sort_values('non-vegetarians').reset_index()","dc7ae141":"fig = px.bar(df_v.head(5), x='States', y='non-vegetarians',\n             labels={'non-vegetarians':'NV index'},\n             color='non-vegetarians',\n             #orientation='h',\n             title=\"Top 5 Vegetarians states\")\nfig.show()","a7f64293":"px.scatter(df[['States','non-vegetarians']],\n          x='States', y='non-vegetarians',\n          size='non-vegetarians', color='non-vegetarians',template=\"plotly_dark\")","561ed87a":"map_df.keys()","c1ce02c3":"#merge both dataframe with state index\nmerged = map_df.set_index('st_nm').join(df.set_index('States'))\nmerged.head()","4805ac12":"#Top 5 Non-Veg consumption States in India\n\nfig = px.bar(data_frame = df.nsmallest(25,\"non-vegetarians\").tail(5),\n             y=\"States\",\n             x=\"non-vegetarians\",\n             orientation='h',\n             color=\"States\",\n             text=\"non-vegetarians\",\n             color_discrete_sequence=px.colors.qualitative.D3,template=\"plotly_dark\")\n\nfig.update_traces(texttemplate='%{text:.2s}', \n                  textposition='inside', \n                  marker_line_color='rgb(255,255,255)', \n                  marker_line_width=2.5, \n                  opacity=0.7)\nfig.update_layout(width=800,\n                  yaxis=dict(autorange=\"reversed\"),\n                  title=\"Top 5 Non-Veg consumption States in India\")\nfig.show()","26e141e7":"#Top 5 Veg consumption States in India\n\nfig = px.bar(data_frame = df.nsmallest(25,\"vegetarians\").tail(),\n             y=\"States\",\n             x=\"vegetarians\",\n             orientation='h',\n             color=\"States\",\n             text=\"vegetarians\",\n             color_discrete_sequence=px.colors.qualitative.D3,template=\"plotly_dark\")\n\nfig.update_traces(texttemplate='%{text:.2s}', \n                  textposition='inside', \n                  marker_line_color='rgb(255,255,255)', \n                  marker_line_width=2.5, \n                  opacity=0.7)\nfig.update_layout(width=800,\n                  yaxis=dict(autorange=\"reversed\"),\n                  title=\"Top 5 Veg consumption States in India\")\nfig.show()","73fefd0d":"#df = merged[merged.isna().any(axis=1)]\n#df","6fcf05ca":"#create subplot for number of deaths in India\nfig2, axis2 = plt.subplots(1, figsize=(18,10))\naxis2.axis('off')\naxis2.set_title('Non-Veg Consumptions states', fontdict={'fontsize':'25','fontweight':'5'})\nmerged.plot(column='non-vegetarians',cmap='Reds',ax=axis2, legend=True)\n#YlOrRd viridis","8d6a9f81":"#create subplot for number of deaths in India\nfig2, axis2 = plt.subplots(1, figsize=(18,10))\naxis2.axis('off')\naxis2.set_title('Veg Consumptions states', fontdict={'fontsize':'25','fontweight':'5'})\nmerged.plot(column='vegetarians',cmap='Greens',ax=axis2, legend=True)\n#YlOrRd viridis","f8d7bfb0":"heat_map = df.corr()\nplt.figure(figsize=(12,10))\n\nax = sns.heatmap(heat_map, annot=True, cmap='viridis') #notation: \"annot\" not \"annote\"\nax","6960ae32":"df.keys()","df78ff41":"V = df[\"vegetarians\"].sum()\nNV = df[\"non-vegetarians\"].sum()\n\nTotal = V + NV\n\nprint(V)\nprint(NV)\nprint(Total)","04ebfb76":"vegetarians_percentage = (V\/Total)*100\nnon_vegetarians_percentage = (NV\/Total)*100\n\nprint(vegetarians_percentage)\nprint(non_vegetarians_percentage)","441f8fc6":"data = [['Vegetarians', 28.142857142857142], ['Non-Vegetarian', 71.85714285714286]] \n  \n# Create the pandas DataFrame \npie_df = pd.DataFrame(data, columns = ['Type', 'data']) \n\npie_df","68035ce1":"fig = px.pie(pie_df, values='data',\n             names='Type',color='Type',\n             color_discrete_map={'Non-Vegetarian':'brown','Vegetarians':'green'})\n\nfig.update_layout(title_text='Veg and Non-Veg Share in India')\n\nfig.show()","9c57155d":"import plotly.graph_objects as go\n\n# Pie chart\nlabels = ['Vegetarians', 'Non-Vegetarian']\nvalues = [28.142857142857142, 71.85714285714286]\n\n# pull is given as a fraction of the pie radius\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, pull=[0, 0.1])])\nfig.update_layout(title_text='Veg vs Non-Veg Share in India')\nfig.show()","d4981e2f":"> here \"Telangana\" and \"Rajasthan\" trying to tell us a story, let's get into viz part so that we can understand better","80465564":"# Let's take a look into Veg and Non-Veg data by stateswise","2963e75c":"> Rajasthan, Haryana ans Punjab are top 3 Veg consumption states","5b539f63":"# Top 5 Veg consumption States in India","300352e9":"# Top 5 Non-Veg consumption States in India","fa49bdfd":"# Veg consumption states ","c64fbfca":"> Heatmap view of the data","777ddb7e":"# Highlighting Max and Min Values in the table","a896edb4":"> Bar view of the data"}}