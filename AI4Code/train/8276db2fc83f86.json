{"cell_type":{"561a867c":"code","3ae59e88":"code","76ec9a64":"code","b8590281":"code","53a91e8b":"code","184aaab4":"code","24fc20b3":"code","77e7c6c7":"code","22c9d42c":"code","8abefba2":"code","7b287b69":"code","1c30210e":"code","760adedf":"code","7a3a6762":"code","92713011":"code","cdc05570":"code","cdeb61cc":"code","323316d1":"code","7d9c11f5":"code","ff29adaf":"code","8c1d8c96":"code","dfd19bab":"code","92b06e33":"code","aa2a6a86":"code","9b61b211":"code","5bd9af2e":"code","1d3ff103":"code","404039ce":"code","50bdfded":"code","a177d8b6":"code","6dc83b77":"code","970d0247":"code","fe2943e9":"code","275af6e9":"code","34888d89":"code","fea537c3":"code","da3b7d8a":"code","247ea96a":"code","80933246":"code","223a2e32":"code","c56517ca":"code","41f976d4":"code","f5f1935a":"code","7d6260ef":"code","01f32b48":"code","a729f37b":"code","f13a3280":"code","ed843d63":"code","7d840f44":"code","aa7f922f":"code","a311c1fb":"code","349d4a9b":"code","23182bcf":"markdown"},"source":{"561a867c":"#import the libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom matplotlib import style\nstyle.use(\"fivethirtyeight\")\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport folium\nimport webbrowser\nfrom folium.plugins import HeatMap","3ae59e88":"\n#load the house data\nhousedata=pd.read_csv(\"\/kaggle\/input\/housesalesprediction\/kc_house_data.csv\")\nhousedata.head()","76ec9a64":"housedata.describe().transpose()","b8590281":"housedata.isnull().sum()","53a91e8b":"sns.heatmap(housedata.isnull(),yticklabels=False,cbar=False,cmap=\"viridis\")\n#we dont have any null values","184aaab4":"housedata.corr()","24fc20b3":"sns.heatmap(housedata.corr(),cmap='rocket',cbar=True,yticklabels=True)","77e7c6c7":"housedata.corr()[\"price\"].sort_values()","22c9d42c":"plt.figure(figsize=(10,6))\nsns.scatterplot(x=\"price\",y=\"sqft_living\",data=housedata,color=\"g\",palette='viridis')","8abefba2":"fig=plt.figure(figsize=(12,5))\naxis=fig.add_subplot(121)\nsns.distplot(housedata['price'],color='g')\nplt.ylim(0,None)\nplt.xlim(0,2000000)\naxis.set_title('distribution of prices')\n\naxis=fig.add_subplot(122)\nsns.distplot(housedata['sqft_living'],color='b')\nplt.ylim(0,None)\nplt.xlim(0,6000)\naxis.set_title('distribution of sqft_living')","7b287b69":"plt.figure(figsize=(10,6))\nsns.jointplot(x='sqft_living',y='price',kind='hex',data=housedata)\nplt.ylim(0,3500000)\nplt.xlim(0,None)","1c30210e":"plt.figure(figsize=(10,6))\nsns.lmplot(x='sqft_living',y='price',palette='viridis',height=7,data=housedata)\nplt.title('sqft_living vs price')","760adedf":"plt.figure(figsize=(10,6))\nsns.countplot(housedata[\"bedrooms\"])","7a3a6762":"plt.figure(figsize=(10,6))\nsns.countplot(housedata[\"grade\"])","92713011":"plt.figure(figsize=(10,6))\nsns.boxplot(x='bedrooms',y='price',palette='viridis',data=housedata)\nplt.title(\"bedrooms vs price\")","cdc05570":"fig=plt.figure(figsize=(19,12.5))\nax=fig.add_subplot(2,2,1,projection='3d')\nax.scatter(housedata['floors'],housedata['bedrooms'],housedata['bathrooms'],c=\"blue\")\nax.set(xlabel='\\nFloors',ylabel='\\nBedrooms',zlabel='\\nBathrooms')\nax.set(ylim=[0,12])\n\nax=fig.add_subplot(2,2,2,projection='3d')\nax.scatter(housedata['price'],housedata['sqft_living'],housedata['bedrooms'],c=\"green\")\nax.set(xlabel='\\nprice',ylabel='\\nsqt_living',zlabel='\\nBedrooms')\nax.set(zlim=[0,12])\n\nax=fig.add_subplot(2,2,3,projection='3d')\nax.scatter(housedata['floors'],housedata['bedrooms'],housedata['sqft_living'],c=\"red\")\nax.set(xlabel='\\nFloors',ylabel='\\nBedrooms',zlabel='\\nsqft_living')\nax.set(ylim=[0,12])\n\nax=fig.add_subplot(2,2,4,projection='3d')\nax.scatter(housedata['grade'],housedata['price'],housedata['sqft_living'],c=\"violet\")\nax.set(xlabel='\\ngrade',ylabel='\\nprice',zlabel='\\nsqft_living')\nax.set(xlim=[2,12])","cdeb61cc":"plt.figure(figsize=(10,6))\nsns.scatterplot(x=\"price\",y=\"long\",data=housedata,color=\"r\")","323316d1":"plt.figure(figsize=(10,6))\nsns.scatterplot(x=\"price\",y=\"lat\",data=housedata)","7d9c11f5":"plt.figure(figsize=(10,6))\nsns.scatterplot(x=\"long\",y=\"lat\",data=housedata,hue=\"price\")","ff29adaf":"new_data=housedata.sort_values(\"price\",ascending=False).iloc[200:]\n#we are removing outliers","8c1d8c96":"plt.figure(figsize=(10,6))\nsns.scatterplot(x=\"long\",y=\"lat\",data=new_data,hue=\"price\",palette=\"RdYlGn\",alpha=0.2,edgecolor=None)","dfd19bab":"latitude=47.6\nlongitude=-122.3\ndup=housedata.copy()\ndef worldmap(location=[latitude,longitude],zoom=9):\n    map=folium.Map(location=location,control_state=True,zoom_start=zoom)\n    return map\nfmap=worldmap()\nfolium.TileLayer(\"cartodbpositron\").add_to(fmap)\nHeatMap(data=dup[[\"lat\",\"long\"]].groupby([\"lat\",\"long\"]).sum().reset_index().values.tolist(),\n       radius=8,max_zoom=13,name='Heat Map').add_to(fmap)\nfolium.LayerControl(collapsed=False).add_to(fmap)\nfmap","92b06e33":"plt.figure(figsize=(10,6))\nsns.boxplot(x=\"waterfront\",y=\"price\",data=housedata)","aa2a6a86":"housedata.drop(['id','zipcode'],axis=1,inplace=True)","9b61b211":"housedata[\"date\"].head()","5bd9af2e":"housedata[\"date\"]=pd.to_datetime(housedata[\"date\"])\nhousedata[\"date\"].head()","1d3ff103":"housedata[\"year\"]=housedata[\"date\"].apply(lambda date: date.year)\nhousedata[\"month\"]=housedata[\"date\"].apply(lambda date: date.month)","404039ce":"housedata.head()","50bdfded":"plt.figure(figsize=(10,6))\nsns.boxplot(x=\"month\",y=\"price\",data=housedata)","a177d8b6":"housedata.groupby(\"month\").mean()[\"price\"]","6dc83b77":"plt.figure(figsize=(10,6))\nhousedata.groupby(\"month\").mean()[\"price\"].plot()","970d0247":"plt.figure(figsize=(10,6))\nhousedata.groupby(\"year\").mean()[\"price\"].plot()","fe2943e9":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense","275af6e9":"x=housedata.drop([\"price\",\"date\"],axis=1).values\ny=housedata[\"price\"].values","34888d89":"x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=23)\n","fea537c3":"scalar=StandardScaler()\nx_train=scalar.fit_transform(x_train)\nx_test=scalar.transform(x_test)","da3b7d8a":"model=Sequential()","247ea96a":"def model_creating():\n    model=Sequential()\n    model.add(Dense(19,activation=\"relu\"))\n    model.add(Dense(19,activation=\"relu\"))\n    model.add(Dense(19,activation=\"relu\"))\n    model.add(Dense(19,activation=\"relu\"))\n    model.add(Dense(1))\n    model.compile(optimizer=\"adam\",loss=\"mse\")\n    return model","80933246":"model=model_creating()","223a2e32":"model.fit(x=x_train,y=y_train,\n          validation_data=(x_test,y_test),\n         batch_size=130,epochs=550,verbose=1)","c56517ca":"model.summary()","41f976d4":"from keras.utils.vis_utils import plot_model\nplot_model(model, to_file='model_plot.png', show_shapes=True, show_layer_names=True)","f5f1935a":"loss=pd.DataFrame(model.history.history)\nloss.head()","7d6260ef":"loss.plot()\n#if both lines are coincide then our model is not overfitting\n#if we get spikes in our plot then our model is overfitting","01f32b48":"y_pred=model.predict(x_test)","a729f37b":"from sklearn.metrics import mean_absolute_error,mean_squared_error,explained_variance_score","f13a3280":"error=pd.DataFrame([[mean_squared_error(y_test,y_pred),\n                     np.sqrt(mean_squared_error(y_test,y_pred)),\n                    mean_absolute_error(y_test,y_pred),\n                    explained_variance_score(y_test,y_pred)]],\n                   columns=[\"mean_squared_error\",\"mean_squared_root_error\",\n                                 \"mean_absolute_error\",\"explained_variance_score\"])\nerror","ed843d63":"print(error[\"mean_absolute_error\"],housedata.describe()[\"price\"][\"mean\"])","7d840f44":"sample_house=housedata.drop([\"price\",\"date\"],axis=1).iloc[0].values\nsample_house=sample_house.reshape(-1,19)","aa7f922f":"sample_house=scalar.transform(sample_house)","a311c1fb":"sample_predict=model.predict(sample_house)\nprint(sample_predict,housedata.iloc[0:1,1:2].values)","349d4a9b":"plt.figure(figsize=(10,6))\nplt.scatter(y_test,y_pred,color=\"blue\",marker=\"o\")\nplt.plot(y_pred,y_pred,marker='o',\n         color='green',markerfacecolor='red',\n         markersize=7,linestyle='dashed')","23182bcf":"\nRELU :- Stands for Rectified linear unit. It is the most widely used activation function. Chiefly implemented in hidden layers of Neural network.\n\nEquation :- A(x) = max(0,x). It gives an output x if x is positive and 0 otherwise."}}