{"cell_type":{"4f048d34":"code","b4e7311a":"code","f55e446d":"code","efa9716c":"code","d1192c05":"code","981c278f":"code","a5d242a3":"code","e38477d0":"code","3b318e52":"code","8bc4f084":"code","13b3f7e7":"code","a681ebf5":"code","6635134f":"code","00bd5a60":"code","60c469a3":"code","66562d8a":"code","6b7dadb0":"code","004fa463":"code","9780a1c2":"code","a2f71df7":"code","cd532a71":"code","e5b3402b":"code","0457a8b4":"code","c58af779":"code","3d888920":"markdown","5e3b0e2c":"markdown","c8621e9f":"markdown","c567582d":"markdown","3e91ffd3":"markdown","06b10185":"markdown","bde7a57c":"markdown","9903de81":"markdown","d70ad0e2":"markdown"},"source":{"4f048d34":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt","b4e7311a":"features = pd.read_csv('..\/input\/nbme-score-clinical-patient-notes\/features.csv')\nfeatures","f55e446d":"p_notes = pd.read_csv('..\/input\/nbme-score-clinical-patient-notes\/patient_notes.csv')\np_notes\n# pn_history - The text of the encounter as recorded by the test taker","efa9716c":"df = pd.read_csv('..\/input\/nbme-score-clinical-patient-notes\/train.csv')\ndf\n\n#pn_num - A unique identifier for each patient note.\n#case_num - A unique identifier for the clinical case a patient note represents.\n#pn_history - The text of the encounter as recorded by the test taker","d1192c05":"df.info()","981c278f":"df.id.nunique()","a5d242a3":"#pn_num - A unique identifier for each patient note.\nprint('Total Number of patients')\ndf.pn_num.nunique()","e38477d0":"df.describe(include='object')","3b318e52":"df.annotation","8bc4f084":"### Applying group by on p_notes and using aggregate function count\np_notes.groupby(\"case_num\").count()","13b3f7e7":"### Using group by on features\nfeatures.groupby(\"case_num\").count()","a681ebf5":"from wordcloud import WordCloud, STOPWORDS\nstopwords = STOPWORDS\nwc= WordCloud(background_color='Black',stopwords=stopwords, height=1080, width =1920)\n\nplt.figure(figsize=(22,30))\nplt.subplot(3,1,1)\nbody =df.annotation.dropna().to_string(index=False)\n### Generate word cloud\nwc.generate(body)\n## Visualize\nplt.imshow(wc, interpolation='bilinear')\nplt.axis(\"off\")\nplt.title(\"Looking Broadly at words of 'Annotation'\", fontsize=15)\nwc.to_file('body.png')\n\nplt.subplot(3,1,2)\nbody =p_notes.pn_history.dropna().to_string(index=False)\n### Generate word cloud\nwc.generate(body)\n## Visualize\nplt.imshow(wc, interpolation='bilinear')\nplt.axis(\"off\")\nplt.title(\"Looking Broadly at words of 'pn_history'\", fontsize=15)\nwc.to_file('pn_history.png');\n\nplt.subplot(3,1,3)\nbody =features.feature_text.dropna().to_string(index=False)\n### Generate word cloud\nwc.generate(body)\n## Visualize\nplt.imshow(wc, interpolation='bilinear')\nplt.axis(\"off\")\nplt.title(\"Looking Broadly at words of 'feature_text'\", fontsize=15)\nwc.to_file('feature_text.png');","6635134f":"plt.figure(figsize=(14,16))\nplt.subplot(3,1,1)\ndf.pn_num.hist(edgecolor='black', linewidth=1.3, bins=20, color='tab:orange')\nplt.grid(False)\nplt.title('Hist plot of pn_num', fontsize=20)\n\nplt.subplot(3,1,2)\n#sns.histplot(df.case_num)\ndf.case_num.hist(edgecolor='black', linewidth=1.3, bins=20, color='tab:purple')\nplt.grid(False)\nplt.title('Hist plot of case_num', fontsize=20)\n\nplt.subplot(3,1,3)\n#sns.histplot(df.feature_num)\ndf.feature_num.hist(edgecolor='black', linewidth=1.3, bins=20, color='tab:green')\nplt.grid(False)\nplt.title('Hist plot of feature_num', fontsize=20)\n\nplt.tight_layout();","00bd5a60":"### Case No with respect to  pn_number and Feature\n\n### ~~~~ Calculations ~~~~~###\npc= p_notes.groupby(\"case_num\").count()\nfc= features.groupby(\"case_num\").count()\n\n### ~~~~ Visualization ~~~~~###\n\nplt.figure(figsize=(18,6))\nplt.subplot(1,2,1)\nsns.barplot(x = fc.index,y = 'feature_num' , data=fc, palette ='hls' )\nplt.title('Distribution of Features for each case',fontsize=15)\n\nplt.subplot(1,2,2)\nsns.barplot(x = pc.index, y = 'pn_num' , data=pc, palette ='hls' )\nplt.title('Distribution of patient notes for each case',fontsize=15)\nplt.tight_layout();\n","60c469a3":"### annotation seems in odd format lets explore it in details \ndf.annotation[0]","66562d8a":"df.annotation.head(50)","6b7dadb0":"### Replacing '[',']' ,single quote from data frame\n# df['annotation'] = df['annotation'].replace({'[': '',']': ''}, regex=True)\ndf['annotation_new'] = df['annotation'].str.replace('[[,]]', '')","004fa463":"df_senti= df.drop('annotation',axis=1)\ndf_senti","9780a1c2":"### p_note contains age and gender of patient\np_notes.pn_history.sample(60)","a2f71df7":"p_notes.pn_history[10249]","cd532a71":"p_notes.pn_history[624]","e5b3402b":"features.feature_text.head(60)","0457a8b4":"features.feature_text[43]","c58af779":"features.feature_text[23]","3d888920":"# <p style=\"background-color:#73d1ff;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\ud83d\udcad WordCloud<\/p>\n### Since most of the data are object type lets plot wordcloud to get a quick Idea about the frequent words","5e3b0e2c":"# <p style=\"background-color:#73d1ff;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\ud83d\ude0a\ud83d\ude10\u2639\ufe0f Sentiment Analysis<\/p>","c8621e9f":"# <p style=\"background-color:#73d1ff;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\u2728 Data Visualization<\/p>","c567582d":"<div class=\"alert alert-block alert-info\" style=\"font-size:14px; font-family:verdana; line-height: 1.7em;\">\n    \ud83d\udccc &nbsp;<b><u>Observations:<\/u><\/b>\n \n* <i> There are total of ```3``` columns and `143` rows in ```Features``` data.<\/i>\n* <i> Patient Notes Data contain ```429``` observation with ```0```  missing values.<\/i>\n* <i> Number of patients per case are unequally distributed with `Case 5` and `Case 8` having maximum and `Case 7` having minimum.<\/i>\n* <i> Average length of `feature_text` column is `23.20`. <\/i>  \n***Patient Notes:**\n* <i> There are total of ```3``` columns and `42146` rows in ```Patient Notes``` data.<\/i>\n* <i> Patient Notes Data contain ```126438``` observation with ```0```  missing values.<\/i>\n* <i> Number of patients per case are unequally distributed with `Case 3` having maximum and `Case 1` having minimum.<\/i>\n* <i> Average length of `ph_history column` is `818.17`. <\/i>","3e91ffd3":"* There are no missing value in the dataset\n* case_num, pn_number and feature_num can stored as object as we don't need to perform any mathematical operation on it\n* location - Character spans indicating the location of each annotation within the note. Multiple spans may be needed to represent an annotation, in which case the spans are delimited by a semicolon\n* annotation - The text(s) within a patient note indicating a feature. A feature may be indicated multiple times within a single note.","06b10185":"## Analysis of Training file","bde7a57c":"# <p style=\"background-color:#73d1ff;font-family:newtimeroman;color:#000000;font-size:120%;text-align:center;border-radius:20px 80px;\">\ud83e\uddf9 Data Cleaning<\/p>","9903de81":"# NBME EDA\nWhen Performing EDA on NLP we should consider 3 things\n1. **Top Words** :: Find the most common words used in each feature\n2. **Vocabalary** :: Take a look at unique number of words used\n3. **Amount of profanity** :: Note the number of swear words used","d70ad0e2":"### How to remove \"[\", \"]\" , \"'\" and \"'\" from dataframe??"}}