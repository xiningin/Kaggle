{"cell_type":{"ea96a5da":"code","854a984a":"code","e92ebe85":"markdown"},"source":{"ea96a5da":"import numpy as np\nimport pandas as pd\nimport cv2\nimport os\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport json\n\ndf_train = pd.read_csv('..\/input\/ranzcr-clip-catheter-line-classification\/train.csv')\ndf_train.columns = ['UID','ETTA','ETTB','ETTN','NGTA','NGTB','NGTI','NGTN','CVCA','CVCB','CVCN','SGCP','PID']\ndf_annotations = pd.read_csv('..\/input\/ranzcr-clip-catheter-line-classification\/train_annotations.csv')\ndf_annotations.columns = ['UID','label','data']\n\ndef plot(r, annotations):\n    img = cv2.imread('..\/input\/ranzcr-clip-catheter-line-classification\/train\/' + r.UID + '.jpg')\n    fig = px.imshow(img, height=800)\n    if annotations.isnull().values.any() == False:\n        for i, ann in annotations.iterrows():\n            df = pd.DataFrame(json.loads(ann.data),columns=['x', 'y'])\n            fig.add_trace(go.Scatter(x=df.x, y=df.y, name=ann.label))\n    \n    title = 'Labels: '\n    for name, value in r.iteritems():\n        if len(name) == 4 and value == 1:\n            title += ' ' + name\n\n    fig.update_layout(title_text=title, xaxis_title=r.UID,) \n    fig.show()\n\ndef xray(query):\n    df = df_train.query(query).sample(1)\n    an = df.join(df_annotations.set_index('UID'),how='left',on='UID')\n    plot(df.iloc[0], an[['label','data']])","854a984a":"# examples:\n# xray('CVCA == 1') # -- view a random X-Ray with CVC abnormal\n# xray(\"UID == '1.2.826.0.1.3680043.8.498.59757398491099579448057921213132792160'\") # -- view a specific X-Ray by UID\n# xray('SGCP == 1') # -- view a random X-Ray with Swan Ganz catheter\n# xray('SGCP == 1 and CVCA == 1') # -- view a random X-Ray with Swan Ganz catheter and CVC abnormal\n\n\nxray(\"UID == '1.2.826.0.1.3680043.8.498.59757398491099579448057921213132792160'\")","e92ebe85":"# RANZCR - Simple X-Ray viewer\n\nYou can view any train image searching it by UID or view any random image based on criteria."}}