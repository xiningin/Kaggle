{"cell_type":{"b24ad35f":"code","ce6a2243":"code","4e7ba799":"code","1ef1e5f7":"code","8e092227":"code","3aa9760d":"code","b87330cc":"code","ee3b27b6":"code","18926891":"code","ba0255eb":"code","4db47677":"code","0a048cc2":"code","3c62b36d":"code","3bc9f1e4":"code","3498ff74":"code","6926938a":"code","0092a127":"code","3afc082c":"code","63b18aba":"code","647ba8d7":"code","516261af":"code","aaad2275":"code","6d1a026f":"code","58609775":"code","2dc42ed6":"code","202fcdaf":"code","55c31b65":"code","461816cf":"code","de1604b0":"markdown","8fb89460":"markdown","9e02b560":"markdown","609415a2":"markdown"},"source":{"b24ad35f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ce6a2243":"import numpy as np # linear algebra\nimport pandas as pd\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"darkgrid\")\n\n\nfrom sklearn.metrics import accuracy_score, confusion_matrix,r2_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score, KFold\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder,PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression","4e7ba799":"df = pd.read_csv('..\/input\/productivity-prediction-of-garment-employees\/garments_worker_productivity.csv')","1ef1e5f7":"df.sample(10)","8e092227":"df.shape","3aa9760d":"df.info()","b87330cc":"df.isnull().sum()","ee3b27b6":"df.describe(include=['O'])","18926891":"df.describe().T","ba0255eb":"df['date'] = pd.to_datetime(df['date'])","4db47677":"df['department'] = df['department'].apply(lambda x: 'finishing' if x == ('finishing ' or 'finishing' ) else 'sewing' )","0a048cc2":"df['wip'].fillna(int(df['wip'].mean()), inplace=True)","3c62b36d":"df.isnull().sum()","3bc9f1e4":"sns.pairplot(df)","3498ff74":"sns.displot(df['actual_productivity'])","6926938a":"df.actual_productivity.hist()","0092a127":"plt.figure(figsize=(5,5))\nsns.boxplot(data=df,y='actual_productivity')","3afc082c":"df.skew().sort_values(ascending=True)","63b18aba":"from scipy.stats.mstats import normaltest\nnormaltest(df.actual_productivity.values)","647ba8d7":"log_price = np.log(df.actual_productivity)\nlog_price.hist()","516261af":"normaltest(log_price)","aaad2275":"from scipy.stats import boxcox\nbc_price= boxcox(df.actual_productivity)\nboxcox_price = bc_price[0]\nlambd = bc_price[1]\nplt.hist(boxcox_price)  ","6d1a026f":"normaltest(boxcox_price)","58609775":"plt.figure(figsize=(12,8))\nsns.heatmap(df.corr(),annot=True)","2dc42ed6":"data=df.copy()","202fcdaf":"le = LabelEncoder()\ndata['department'] = le.fit_transform(data['department'])\n\n\nX=data[['targeted_productivity', 'team','smv','idle_men', 'no_of_style_change']]\ny=data['actual_productivity']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n\ns = StandardScaler()\nX_train_sm = s.fit_transform(X_train)\n\nmlr = LinearRegression()\nmlr.fit(X_train_sm, y_train)\nX_test_sm = s.transform(X_test)\ny_pred_sm = mlr.predict(X_test_sm)","55c31b65":"#Accuracy and MSE\nprint(f'R2 score is {r2_score(y_pred_sm,y_test)}')\nprint(\"Residual sum of squares (MSE): %.2f\" % np.mean((y_pred_sm - y_test) ** 2))","461816cf":"print(f'Co-efficients are {mlr.coef_}')\nprint(f'Intercept is {mlr.intercept_}')","de1604b0":"**No missing values now**","8fb89460":"# Data wrangling","9e02b560":"# Multiple linear Regression","609415a2":"# Attribute Information:\n1. date : Date in MM-DD-YYYY\n2. day : Day of the Week\n3. quarter : A portion of the month. A month was divided into four quarters\n4. department : Associated department with the instance\n5. teamno : Associated team number with the instance\n6. noofworkers : Number of workers in each team \n7. noofstylechange : Number of changes in the style of a particular product\n8. targetedproductivity : Targeted productivity set by the Authority for each team for each day.\n9. smv : Standard Minute Value, it is the allocated time for a task \n10. wip : Work in progress. Includes the number of unfinished items for products \n11. overtime : Represents the amount of overtime by each team in minutes\n12. incentive : Represents the amount of financial incentive (in BDT) that enables or motivates a particular course of action.\n13. idletime : The amount of time when the production was interrupted due to several reasons \n14. idlemen : The number of workers who were idle due to production interruption\n15. actual_productivity : The actual % of productivity that was delivered by the workers. It ranges from 0-1."}}