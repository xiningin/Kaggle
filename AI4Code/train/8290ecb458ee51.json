{"cell_type":{"44965e6e":"code","17d795ef":"code","cd0ba9e5":"code","034220f3":"code","759e2bf0":"code","b599c9e4":"code","6e521125":"code","c42d3b6c":"code","58e028cd":"code","f34689d2":"code","c13c045e":"code","f05be52b":"code","1a5b0496":"code","1f9942a1":"code","ba3192dc":"code","3e09ad4d":"code","07ff2bc0":"code","43aa12b5":"code","08679d91":"code","0016c343":"code","5eb75775":"code","88b8510e":"code","8fad7d9b":"code","eafd2999":"code","5e6057ce":"code","589b3b72":"code","58c5006a":"code","d513d738":"code","8a49dd12":"code","75787e80":"code","2945ee68":"code","55109638":"code","be34c187":"code","d54616ec":"code","6e6b8900":"markdown"},"source":{"44965e6e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly\nimport plotly.express as px\nimport plotly.graph_objs as go","17d795ef":"df = pd.read_csv('..\/input\/bike-sharing-demand\/train.csv')","cd0ba9e5":"df.head()","034220f3":"df.shape","759e2bf0":"df.describe()","b599c9e4":"df.dtypes","6e521125":"df.isnull().sum()","c42d3b6c":"df  = df.drop([\"datetime\"],axis=1)","58e028cd":"plt.figure(figsize=(10,6))\nsns.distplot(df['count'], color='r')\nplt.show()","f34689d2":"fig = px.histogram(\n    df, \n    \"temp\", \n    nbins=80, \n    width=800,\n    height=500\n)\n\nfig.show()","c13c045e":"fig = px.histogram(\n    df, \n    \"atemp\", \n    nbins=80, \n    width=800,\n    height=500\n)\n\nfig.show()","f05be52b":"fig = px.histogram(\n    df, \n    \"humidity\", \n    nbins=80, \n    width=800,\n    height=500\n)\n\nfig.show()","1a5b0496":"fig = px.histogram(\n    df, \n    \"windspeed\", \n    nbins=60, \n    width=800,\n    height=500\n)\n\nfig.show()","1f9942a1":"fig = px.histogram(\n    df, \n    \"casual\", \n    nbins=50, \n    width=800,\n    height=500\n)\n\nfig.show()","ba3192dc":"fig = px.histogram(\n    df, \n    \"registered\", \n    nbins=50, \n    width=800,\n    height=500\n)\n\nfig.show()","3e09ad4d":"fig = px.pie(df, names = \"season\", title = \"season\", color_discrete_sequence=px.colors.qualitative.Set1)\nfig.show()","07ff2bc0":"fig = px.pie(df, names = \"holiday\", title = \"holiday\", color_discrete_sequence=px.colors.qualitative.Set1)\nfig.show()","43aa12b5":"fig = px.pie(df, names = \"workingday\", title = \"workingday\", color_discrete_sequence=px.colors.qualitative.Set1)\nfig.show()","08679d91":"fig = px.pie(df, names = \"weather\", title = \"weather\", color_discrete_sequence=px.colors.qualitative.Set1)\nfig.show()","0016c343":"fig = px.scatter(df, x='temp' , y='count')\nfig.show()","5eb75775":"fig = px.scatter(df, x='atemp' , y='count')\nfig.show()","88b8510e":"fig = px.scatter(df, x='humidity' , y='count')\nfig.show()","8fad7d9b":"fig = px.scatter(df, x='windspeed' , y='count')\nfig.show()","eafd2999":"fig = px.scatter(df, x='casual' , y='count')\nfig.show()","5e6057ce":"fig = px.scatter(df, x='registered' , y='count')\nfig.show()","589b3b72":"sns.barplot('season','count',data=df,palette='hls')","58c5006a":"sns.barplot('holiday','count',data=df,palette='hls')","d513d738":"sns.barplot('workingday','count',data=df,palette='hls')","8a49dd12":"sns.barplot('weather','count',data=df,palette='hls')","75787e80":"df.corr\nf,ax = plt.subplots(figsize=(50,30))\nsns.heatmap(df.corr(), annot =True, linewidth =\".5\", fmt =\".2f\", cmap='cividis')\nplt.show()","2945ee68":"df=pd.get_dummies(df)\ndf.head()","55109638":"X = df.drop(columns=[\"count\"])\ny = df[\"count\"]","be34c187":"from sklearn.model_selection import train_test_split\n\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=44, shuffle =True)","d54616ec":"\n\nfrom sklearn.ensemble import GradientBoostingRegressor\n\n\n\nGBRModel = GradientBoostingRegressor(n_estimators=100,max_depth=2,learning_rate = 1.5 ,random_state=33)\nGBRModel.fit(X_train, y_train)\n\nprint('GBRModel Train Score is : ' , GBRModel.score(X_train, y_train))\nprint('GBRModel Test Score is : ' , GBRModel.score(X_test, y_test))\nprint('----------------------------------------------------')\n\n","6e6b8900":"# Bike Sharing\nOn this notebook, we will try to predict number of total rental using machine learning algorithms. Before this one, we will do feature engineering and exploratory data analysis for examine the data.\n\n* datetime - hourly date + timestamp  \n* season -  1 = spring, 2 = summer, 3 = fall, 4 = winter \n* holiday - whether the day is considered a holiday\n*  workingday - whether the day is neither a weekend nor holiday\n* weather - 1: Clear, Few clouds, Partly cloudy, Partly cloudy\n* 2: Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist\n* 3: Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds\n* 4: Heavy Rain + Ice Pallets + Thunderstorm + Mist, Snow + Fog \n*  temp - temperature in Celsius\n*  atemp - \"feels like\" temperature in Celsius\n*  humidity - relative humidity\n*  windspeed - wind speed\n*  casual - number of non-registered user rentals initiated\n*  registered - number of registered user rentals initiated\n*  count - number of total rentals"}}