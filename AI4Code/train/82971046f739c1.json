{"cell_type":{"638bfb1e":"code","8eb22bd8":"code","98c91acb":"code","c236b800":"code","5ac41881":"code","e95623c3":"code","f99d12bb":"code","146e957f":"code","0a02c240":"code","e0695381":"code","d4c21c4a":"code","7a98baf4":"code","7ae8a076":"code","271b9c30":"code","f44dc32c":"code","195960e7":"code","cbeb7132":"code","e1af0c13":"code","15204041":"code","a9ca4ed4":"code","76e03d9d":"code","6645a971":"code","1c7b7518":"code","1e8e80d8":"code","c7fdbd4b":"code","b6cce63a":"code","cfc99fb9":"code","90855203":"code","7f5756d3":"code","31c167df":"code","8586373c":"code","b0cbab99":"code","3bfacd23":"code","9baa3d42":"code","dd8bda39":"markdown"},"source":{"638bfb1e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom pathlib import Path\nfrom fastai import *\nfrom fastai.vision import *\nfrom fastai.callbacks import *\nimport torch","8eb22bd8":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","98c91acb":"data_folder = Path(\"..\/input\")\n#data_folder.joinpath('train').ls()","c236b800":"train_df = pd.read_csv(\"..\/input\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/sample_submission.csv\")","5ac41881":"train_df.head(), train_df.info()","e95623c3":"test_img = ImageList.from_df(test_df, path=data_folder\/'test', folder='test')\ntrfm = get_transforms(do_flip=True, flip_vert=True, max_rotate=10.0, max_zoom=1.2, max_lighting=0.2, max_warp=0.2, p_affine=0.75, p_lighting=0.75)\ntrain_il = ImageList.from_df(train_df, path=data_folder\/'train', folder='train')\ntrain_img = (train_il.split_by_rand_pct(0.01)\n            .label_from_df()\n            .add_test(test_img)\n            .transform(trfm, size=336)\n            .databunch(path='.', bs=32, device= torch.device('cuda:0'))\n            .normalize(imagenet_stats)\n           )","f99d12bb":"train_il","146e957f":"# train_img.show_batch(rows=3, figsize=(7,6))","0a02c240":"callbacks = [partial(EarlyStoppingCallback, monitor='accuracy', min_delta=0.01, patience=3)]","e0695381":"learn = cnn_learner(train_img, models.densenet161, metrics=[error_rate, accuracy], callback_fns=callbacks).mixup().to_fp16()","d4c21c4a":"learn.lr_find()\nlearn.recorder.plot(suggestion=True)","7a98baf4":"lr = 1e-02\nlearn.fit_one_cycle(3, slice(lr), callbacks=[SaveModelCallback(learn, every='improvement', monitor='quadratic_kappa', name='bestmodel')])","7ae8a076":"learn.unfreeze()\nlearn.lr_find()\nlearn.recorder.plot(suggestion=True)","271b9c30":"learn.fit_one_cycle(16, slice(1e-05, 1e-03), callbacks=[SaveModelCallback(learn, every='improvement', monitor='quadratic_kappa', name='bestmodel')])","f44dc32c":"#interp = ClassificationInterpretation.from_learner(learn)\n#interp.plot_top_losses(9, figsize=(7,6))","195960e7":"learn.to_fp32()","cbeb7132":"preds,_ = learn.TTA(ds_type=DatasetType.Test)","e1af0c13":"test_df.has_cactus = preds.numpy()[:, 0]","15204041":"test_df.to_csv('submission.csv', index=False)","a9ca4ed4":"test_df.head()","76e03d9d":"pseudo_df = test_df.copy()","6645a971":"pseudo_df.loc[pseudo_df['has_cactus'] > 0.99, 'has_cactus'] = 1\npseudo_df.loc[pseudo_df['has_cactus'] < 0.01, 'has_cactus'] = 0","1c7b7518":"pseudo_label_df = pseudo_df[pseudo_df['has_cactus'] > 0.99]\npseudo_label_df.append(pseudo_df[pseudo_df['has_cactus'] < 0.01])\npseudo_label_df.shape","1e8e80d8":"pseudo_label_df['has_cactus'] = pseudo_label_df['has_cactus'].astype(np.int64)","c7fdbd4b":"pseudo_label_df.head()","b6cce63a":"label_src = ImageList.from_df(pseudo_label_df, path = data_folder\/'test', folder='test', cols='id')","cfc99fb9":"label_src","90855203":"train_il.add(label_src)","7f5756d3":"train_img = (train_il.split_by_rand_pct(0.01)\n            .label_from_df()\n            .add_test(test_img)\n            .transform(trfm, size=336)\n            .databunch(path='.', bs=32, device= torch.device('cuda:0'))\n            .normalize(imagenet_stats)\n           )","31c167df":"learn = cnn_learner(train_img, models.densenet161, metrics=[error_rate, accuracy], callback_fns=callbacks).mixup().to_fp16()","8586373c":"lr = 1e-02\nlearn.fit_one_cycle(3, slice(lr), callbacks=[SaveModelCallback(learn, every='improvement', monitor='quadratic_kappa', name='bestmodel')])","b0cbab99":"learn.unfreeze()\nlearn.fit_one_cycle(16, slice(1e-05, 1e-03), callbacks=[SaveModelCallback(learn, every='improvement', monitor='quadratic_kappa', name='bestmodel')])","3bfacd23":"learn.to_fp32()","9baa3d42":"preds,_ = learn.TTA(ds_type=DatasetType.Test)\ntest_df.has_cactus = preds.numpy()[:, 0]\ntest_df.to_csv('submission.csv', index=False)","dd8bda39":"# Pseudo Label"}}