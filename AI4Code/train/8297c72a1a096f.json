{"cell_type":{"f7b762b3":"code","15eade3c":"code","688f9e20":"code","5ac51c60":"code","0844a23d":"code","48bd21aa":"code","090bc6f4":"code","bf538e7b":"code","a799eec0":"code","026a80de":"code","6bd57175":"code","0afcabc9":"code","f4ceda18":"code","c0a6ba4f":"markdown","a8a0ed10":"markdown","6e35a57e":"markdown","4ebd2b6b":"markdown","44623f8c":"markdown","fd13615f":"markdown","e2c80246":"markdown","40018deb":"markdown","9a4cfd4e":"markdown","039c117d":"markdown","13658b32":"markdown","110562d4":"markdown"},"source":{"f7b762b3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","15eade3c":"train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest  = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","688f9e20":"def print_details(dataframe, label=\"\"):\n    \"\"\"\n    Print some detail about a given DataFrame.\n    \"\"\"\n    \n    shape = dataframe.shape\n    names = ['rows', 'columns']\n    \n    print(f\"DataFrame '{label}':\")\n    \n    for value, name in zip(shape, names):\n        print(f\" > No. of {name.rjust(9)} : {value}\")\n        \n    print(f\" > No. of variables : {len(dataframe.columns)}\")","5ac51c60":"print_details(train, label=\"train\")","0844a23d":"print_details(test, label=\"test\")","48bd21aa":"target = 'SalePrice'","090bc6f4":"mean = train[target].mean()  # Compute the mean of the target variable","bf538e7b":"print(f\"Mean is {round(mean, 2)}\")","a799eec0":"test[target] = mean","026a80de":"test[target].head()","6bd57175":"sample_sub = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')","0afcabc9":"sample_sub.head()","f4ceda18":"to_keep = ['Id', target]  # Columns for submission\n\ntest[to_keep].to_csv('submission_baseline.csv', index=False)  # Write an output file","c0a6ba4f":"Logically there is one less variable in the *test* dataset than the *train* one.","a8a0ed10":" ## Predict","6e35a57e":"Let's do the same for the *test* dataset.","4ebd2b6b":"So let's get the mean of the 'target' variable from the *train* dataset.","44623f8c":"# Load the data\n\nLet's load the data using the *read_csv* function from the *pandas* package.","fd13615f":"Let's take a look at the *sample_submission.csv* in order to produce our *submission.csv* file.","e2c80246":"# Prepare submission","40018deb":"# Model","9a4cfd4e":"Let's assign the mean computed just before to the *test* dataset. ","039c117d":"Finished! ","13658b32":"## Prepare","110562d4":"# Score : 0.42577"}}