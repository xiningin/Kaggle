{"cell_type":{"2e9ab516":"code","c7d46062":"code","5bb4010a":"code","c209c449":"code","31c27de8":"code","7c9a9818":"code","ed6d23e0":"code","f49c7eac":"code","a28eeb1a":"code","0b1b5a22":"code","81928a0b":"code","0a43d04f":"code","81255114":"code","24d8d3ad":"markdown"},"source":{"2e9ab516":"import numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport matplotlib.patches as patches\nimport pylab as pl\nfrom PIL import Image\n\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import load_img, img_to_array\n#from tensorflow.keras.utils import to_categorical\n#from tensorflow.python.keras.preprocessing.image import ImageDataGenerator\n\n#from sklearn.metrics import classification_report, log_loss, accuracy_score\n#from sklearn.model_selection import train_test_split","c7d46062":"directory = '..\/input\/vinbig-xray-compressed-images-for-yolo-training\/vinbigdata-processed\/images\/train'\ndirectory2 = '..\/input\/vinbig-xray-compressed-images-for-yolo-training\/vinbigdata-processed\/images\/test'","5bb4010a":"train=pd.read_csv('..\/input\/vinbig-xray-compressed-images-for-yolo-training\/vinbigdata-processed\/train.csv')\ntrain[0:5]","c209c449":"print(train['image_id'].nunique())","31c27de8":"print(train['class_id'].unique())\nprint(train['class_id'].nunique())\nN=train['class_id'].unique()","7c9a9818":"print(train['class_name'].unique())\nprint(train['class_name'].nunique())\nName=train['class_name'].unique()","ed6d23e0":"normal_mapping=dict(zip(Name,N))\nreverse_mapping=dict(zip(N,Name))\n\ndef mapper(value):\n    return reverse_mapping[value]","f49c7eac":"test=pd.read_csv('..\/input\/vinbig-xray-compressed-images-for-yolo-training\/vinbigdata-processed\/test.csv')\ntest","a28eeb1a":"dataset=[]\ndatapath=[]\ndataid=[]\n\nfor im in os.listdir(directory):\n    path=os.path.join(directory,im)\n    image=load_img(path, grayscale=False, color_mode='rgb', target_size=(100,100))\n    image=img_to_array(image)\n    image=image\/255.0\n    idn=im[0:-4]\n    dataset.append([image])\n    datapath.append(path)\n    dataid.append(idn)\n","0b1b5a22":"testset=[]\ntestpath=[]\ntestid=[]\n\nfor im in os.listdir(directory2):\n    path=os.path.join(directory2,im)    \n    image=load_img(path, grayscale=False, color_mode='rgb', target_size=(100,100))\n    image=img_to_array(image)\n    image=image\/255.0\n    idn=im[0:-4]\n    testset.append([image])\n    testpath.append(path)\n    testid.append(idn)\n    ","81928a0b":"def draw_bbox2(num0):\n    \n    img0=datapath[num0]\n    id0=dataid[num0]\n    df=train[train['image_id']==id0]\n    im = Image.open(img0)\n    W,H = im.size\n    _ = plt.figure(figsize = (15,20))\n    _ = plt.axis('on')\n    _ = plt.imshow(mpimg.imread(img0))\n    ax = plt.gca()\n    ax.text(W*0.02,H*0.04,f'{id0}',fontsize=20,color='yellow')\n\n    #for i in range(len(df)):    # all\n    #for i in [0,3,4]:           # select some\n    for i in range(5):           # limited range\n        dfi=df[i:i+1]\n        name=dfi.iloc[0,1]\n        W0=dfi.iloc[0,8]\n        H0=dfi.iloc[0,9]\n        x0=dfi.iloc[0,4]\/W0\n        y0=dfi.iloc[0,5]\/H0\n        x1=dfi.iloc[0,6]\/W0\n        y1=dfi.iloc[0,7]\/H0\n        w0=x1-x0\n        h0=y1-y0\n        x=x0*W\n        y=y0*H\n        w=w0*W\n        h=h0*H\n        rect = patches.Rectangle((x,y),w,h,linewidth=2,edgecolor='yellow',fill = False)\n        ax.text(x,y-10,f'{name}',fontsize=12,color='yellow')\n        ax.add_patch(rect)\n        plt.show","0a43d04f":"num0=30      # select number(0-14999)\nimg0=datapath[num0]\nid0=dataid[num0]\ndf=train[train['image_id']==id0]\ndf","81255114":"draw_bbox2(30)","24d8d3ad":"# Yolo Data Viewing\n"}}