{"cell_type":{"c5bc0cf7":"code","6d7cd85e":"code","c289efd9":"code","24162f8d":"code","b1c574e1":"code","cead9ee3":"code","98b0c285":"code","2bf8a3ae":"code","ef60ca75":"code","20d79e0d":"code","2139fab0":"code","6fad078a":"code","febb3c76":"code","a0c02b9c":"code","c2b5ed75":"code","73124525":"code","7b7eccb3":"code","ec5efc26":"code","29ca2f22":"code","971b627b":"code","660c2985":"code","fbb3cfcc":"code","c148a6a9":"code","5864bca3":"code","b7f1a4c5":"code","d95bc46f":"code","86e3affb":"code","c1ffdd39":"code","3adb3700":"code","e22ab21b":"code","45ba1b4f":"markdown","4275a8c4":"markdown","8f18e874":"markdown","1d749048":"markdown"},"source":{"c5bc0cf7":"#import library\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport nltk\nnltk.download('stopwords')\nfrom textblob import TextBlob\nfrom wordcloud import WordCloud\nimport re\nimport string\nstring.punctuation\nimport matplotlib.pyplot as plt\nfrom nltk.stem.porter import PorterStemmer\nfrom nltk.stem import WordNetLemmatizer","6d7cd85e":"stock = pd.read_csv('..\/input\/faang-stock-news-sentiment-analysis\/FAANG_STOCK_NEWS.csv')","c289efd9":"stock.shape","24162f8d":"stock.head()","b1c574e1":"#drop unnamed: 0\nstock = stock.drop('Unnamed: 0', 1)\nstock.head()","cead9ee3":"stock.describe()","98b0c285":"stock.info()","2bf8a3ae":"#heatmap correlation\nplt.figure(figsize = (10,6))\nsns.heatmap(stock.corr(), annot = True, cmap = 'OrRd')\nplt.title(\"Pearson Correlation\")\nplt.show()","ef60ca75":"#selection data\nheadline = stock[['ticker', 'headline']]\nheadline.head()","20d79e0d":"#defining the function to remove punctuation\ndef remove_punctuation(text):\n    punctuationfree = \"\".join([i for i in text if i not in string.punctuation])\n    return punctuationfree\n\n#storing the puntuation free text\nheadline['clean_headline'] = headline['headline'].apply(lambda x:remove_punctuation(x))\nheadline.head()","2139fab0":"#setting lower case\nheadline['headline_lower'] = headline['clean_headline'].apply(lambda x: x.lower())\nheadline.head()","6fad078a":"#defining function for tokenization\ndef tokenization(text):\n    tokens = re.split('W+', text)\n    return tokens\n\n#applying function to the column\nheadline['headline_tokenied'] = headline['headline_lower'].apply(lambda x: tokenization(x))\nheadline.head()","febb3c76":"#stop words present in the library\nstopwords = nltk.corpus.stopwords.words('english')\nstopwords[0:10]","a0c02b9c":"#defining the function to remove stopwords from tokenized text\ndef remove_stopwords(text):\n    output= [i for i in text if i not in stopwords]\n    return output\n\n#applying the function\nheadline['no_stopwords']= headline['headline_tokenied'].apply(lambda x:remove_stopwords(x))\nheadline.head()","c2b5ed75":"#defining the object for stemming\nporter_stemmer = PorterStemmer()\n\n#defining a function for stemming\ndef stemming(text):\n    stem_text = [porter_stemmer.stem(word) for word in text]\n    return stem_text\n\nheadline['headline_stemmed'] = headline['no_stopwords'].apply(lambda x: stemming(x))\nheadline.head()","73124525":"#selection data\ndf = headline[['ticker', 'clean_headline']]\ndf.head()","7b7eccb3":"#create function to get subjectivity\ndef getSubjectivity(text):\n    return TextBlob(text).sentiment.subjectivity\n\n#create function to get polarity\ndef getPolarity(text):\n    return TextBlob(text).sentiment.polarity","ec5efc26":"#apply function to data \ndf['subjectivity'] = df['clean_headline'].apply(getSubjectivity)\ndf['polarity'] = df['clean_headline'].apply(getPolarity)\ndf.head()","29ca2f22":"#create function to get sentiment data\ndef getSentiment(score):\n    if score < 0:\n        return 'Negative'\n    elif score == 0:\n        return 'Neutral'\n    else:\n        return 'Positive'\n\n#apply function to data\ndf['sentiment'] = df['polarity'].apply(getSentiment)\ndf.head()","971b627b":"df['sentiment'].value_counts()","660c2985":"#get headline of sentiment neutral\nnl_headline = df[df.sentiment == 'Neutral']\nnl_headline = nl_headline['clean_headline']\nnl_headline.head()","fbb3cfcc":"#get headline of sentiment positive\np_headline = df[df.sentiment == 'Positive']\np_headline = p_headline['clean_headline']\np_headline.head()","c148a6a9":"#get headline of sentiment negative\nn_headline = df[df.sentiment == 'Negative']\nn_headline = n_headline['clean_headline']\nn_headline.head()","5864bca3":"# Define a function which can be applied to calculate the sentiment score \ndef score(x):\n    return TextBlob(x).sentiment  \n \ndf['score'] = df['clean_headline'].apply(score)\ndf.score.head()","b7f1a4c5":"neutral = \" \".join(df[df.sentiment == 'Neutral']['clean_headline'].values)\nw = WordCloud(width = 700, height = 400, random_state = 10, max_font_size = 100, background_color = 'white').generate(neutral)\n\nplt.figure(figsize = (10,6))\nplt.imshow(w, interpolation = \"bilinear\")\nplt.title(\"Wordcloud of Neutral Headline\")\nplt.axis('off')\nplt.show()","d95bc46f":"positive = \" \".join(df[df.sentiment == 'Positive']['clean_headline'].values)\nw = WordCloud(width = 700, height = 400, random_state = 10, max_font_size = 100, background_color = 'white').generate(positive)\n\nplt.figure(figsize = (10,6))\nplt.imshow(w, interpolation = \"bilinear\")\nplt.title(\"Wordcloud of Positive Headline\")\nplt.axis('off')\nplt.show()","86e3affb":"negative = \" \".join(df[df.sentiment == 'Negative']['clean_headline'].values)\nw = WordCloud(width = 700, height = 400, random_state = 10, max_font_size = 100, background_color = 'white').generate(negative)\n\nplt.figure(figsize = (10,6))\nplt.imshow(w, interpolation = \"bilinear\")\nplt.title(\"Wordcloud of Negative Headline\")\nplt.axis('off')\nplt.show()","c1ffdd39":"#visualize sentiment\ndf['sentiment'].value_counts()\n\nplt.figure(figsize = (10,6))\nplt.title(\"Sentiment Analysis of Stock News\")\nplt.xlabel(\"Sentiment\")\nplt.ylabel(\"Count\")\n\ndf['sentiment'].value_counts().plot(kind = 'bar')\nplt.show()","3adb3700":"#group ticker & sentiment\nticker_sentiment = df.groupby(['ticker', 'sentiment']).size().reset_index(name = 'Count')\nprint(ticker_sentiment)","e22ab21b":"#visualize ticker ~ sentiment\nplt.figure(figsize = (10,6))\nsns.barplot(x = 'ticker', y = 'Count', hue = 'sentiment', data = ticker_sentiment)\nplt.title(\"Ticker ~ Sentiment\")\nplt.show()","45ba1b4f":"# Sentiment Analysis of FAANG Stock news","4275a8c4":"## Sentiment Analysis","8f18e874":"## Text Processing","1d749048":"## Data Extraction"}}