{"cell_type":{"26b3d2aa":"code","f3560d0f":"code","3f2a7f1c":"code","3e74ac07":"code","47fd22af":"code","9d2ed7c6":"code","bc4e1d98":"code","49d7a46b":"code","3a8d9ea9":"code","1065a5ec":"code","2e420f87":"code","ba6106d7":"code","418ce00f":"code","acd4e9b5":"code","04515626":"code","0c4f152f":"code","5b87e791":"code","e208e278":"code","edaa4b25":"markdown"},"source":{"26b3d2aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f3560d0f":"train = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/test.csv\")\n\nprint(\"train shape\", train.shape)\nprint(\"test shape\", test.shape)","3f2a7f1c":"train.head()","3e74ac07":"test.head()","47fd22af":"# No columns have missing values\ntrain.isnull().sum()","9d2ed7c6":"train['label'].value_counts().sort_values(ascending=True)","bc4e1d98":"train.label.value_counts()","49d7a46b":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\n# from sklearn.cross_validation import cross_val_score\n\nfrom sklearn.metrics import accuracy_score\n\ny = train['label']\ndel train['label']\n\nX = train\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.20,\n                                                 random_state=2,)","3a8d9ea9":"X_train.head()","1065a5ec":"#train the RF classifier\nclf = RandomForestClassifier(n_estimators = 500, max_depth = 6)\nclf.fit(X_train,y_train)\n\n#     RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n#                 max_depth=6, max_features='auto', max_leaf_nodes=None,\n#                 min_impurity_split=1e-07, min_samples_leaf=1,\n#                 min_samples_split=2, min_weight_fraction_leaf=0.0,\n#                 n_estimators=500, n_jobs=1, oob_score=False, random_state=None,\n#                 verbose=0, warm_start=False)\n\nclf.predict(X_test)","2e420f87":"rfc_pred = clf.predict(X_test)","ba6106d7":"from sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nconfusion_matrix = confusion_matrix(y_test, rfc_pred)\nconfusion_matrix","418ce00f":"#make prediction and check model's accuracy\nprediction = clf.predict(X_test)\nacc =  accuracy_score(np.array(y_test),prediction)\nprint ('The accuracy of Random Forest is {}'.format(acc))","acd4e9b5":"classification_report = classification_report(y_test, rfc_pred)\nprint(classification_report)","04515626":"# os.remove(\"\/kaggle\/output\/kaggle\/working\/submission.csv\")\n\n# submissions=pd.DataFrame({\"ImageId\": list(range(1,len(rfc_pred)+1)),\n#                          \"Label\": rfc_pred})\n# submissions.to_csv(\"submission.csv\", index=False, header=True)","0c4f152f":"submissions.shape","5b87e791":"#make prediction and check model's accuracy\nprediction = clf.predict(test)\nprediction","e208e278":"submissions=pd.DataFrame({\"ImageId\": list(range(1,len(prediction)+1)),\n                         \"Label\": prediction})\nsubmissions.to_csv(\"submission.csv\", index=False, header=True)","edaa4b25":"\n# Building a RF Model\n"}}