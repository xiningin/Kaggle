{"cell_type":{"f1392e04":"code","7796a105":"code","655335db":"code","9b080173":"code","4fd3983e":"code","cf3f852b":"code","16d81895":"code","6ac67bc2":"code","80b3290b":"code","76367abd":"code","2d8d4517":"code","346885de":"code","8c4e8c1e":"code","15050624":"code","71f20860":"code","d2615986":"code","7fddf1e0":"code","6daf95d2":"code","ddd3f376":"code","241bc057":"code","14a1facc":"code","41aa6def":"code","91c716d1":"code","70c97173":"code","9b1ec4c9":"code","1e0eaec3":"code","143f25ce":"code","07d522e0":"code","cf4b6544":"code","a2157679":"code","3ad7ffc2":"code","98e634dc":"code","9d49feba":"code","9e7cf5fd":"code","3ac749eb":"code","28f0c400":"code","ebae8ba2":"code","047aa4fe":"code","7d2d903f":"code","eef796e4":"code","8ed7a050":"code","495e1dec":"code","986fac34":"code","3ab29aa1":"code","1f5c2f81":"code","bbee6c36":"code","b4079fa4":"code","d347a67a":"markdown","2821ecfe":"markdown","9efab37e":"markdown","ad7255b6":"markdown","acb442e8":"markdown","bb01bc8c":"markdown","76a65b6b":"markdown","43ca258a":"markdown","d8699c43":"markdown","33c81684":"markdown","46edeee7":"markdown","d271cd8d":"markdown","6806e8e8":"markdown","f02f36aa":"markdown","30d7dfd2":"markdown","6efe5b47":"markdown"},"source":{"f1392e04":"# This Python 3 environment comes with many helpful analytics libraries installedaaple\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7796a105":"training_set = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")","655335db":"submission_set = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\")","9b080173":"training_set.drop(columns=[\"Id\", \"Alley\", \"MiscFeature\", \"Fence\", \"PoolQC\", \"FireplaceQu\"], inplace=True)","4fd3983e":"submission_set.drop(columns=[\"Id\", \"Alley\", \"MiscFeature\", \"Fence\", \"PoolQC\", \"FireplaceQu\"], inplace=True)","cf3f852b":"training_set.fillna(method ='bfill', inplace=True)","16d81895":"submission_set.fillna(method ='bfill', inplace=True)","6ac67bc2":"submission_set.info()","80b3290b":"training_set.info()","76367abd":"training_set.reset_index(drop=True, inplace=True)\n\n","2d8d4517":"print(training_set.Street.unique())\nprint(training_set.SaleCondition.unique())\nprint(training_set.LotShape.unique())\nprint(training_set.Utilities.unique())\nprint(training_set.LandContour.unique())\nprint(training_set.LotConfig.unique())\nprint(training_set.LandSlope.unique())\nprint(training_set.Neighborhood.unique())\nprint(training_set.Condition1.unique())\nprint(training_set.Condition2.unique())\nprint(training_set.BldgType.unique())\nprint(training_set.HouseStyle.unique())\nprint(training_set.RoofStyle.unique())\nprint(training_set.RoofMatl.unique())\nprint(training_set.Exterior1st.unique())\nprint(training_set.Exterior2nd.unique())\nprint(training_set.MasVnrType.unique())\nprint(training_set.ExterQual.unique())\nprint(training_set.ExterCond.unique())\nprint(training_set.Foundation.unique())\nprint(training_set.BsmtQual.unique())\nprint(training_set.BsmtCond.unique())\nprint(training_set.BsmtExposure.unique())\nprint(training_set.BsmtFinType1.unique())\nprint(training_set.BsmtFinType2.unique())\nprint(training_set.Heating.unique())\nprint(training_set.HeatingQC.unique())\nprint(training_set.CentralAir.unique())\nprint(training_set.Electrical.unique())\nprint(training_set.PavedDrive.unique())\nprint(training_set.KitchenQual.unique())\nprint(training_set.Functional.unique())\nprint(training_set.GarageType.unique())\nprint(training_set.GarageFinish.unique())\nprint(training_set.GarageQual.unique())\nprint(training_set.GarageCond.unique())\nprint(training_set.SaleType.unique())\nprint(training_set.MSZoning.unique())\n","346885de":"from sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split","8c4e8c1e":"le = LabelEncoder()\nLabel = le.fit_transform(training_set[\"Street\"])\nLabel1 = le.fit_transform(training_set[\"SaleCondition\"])\nLabel2 = le.fit_transform(training_set[\"LotShape\"])\nLabel3 = le.fit_transform(training_set[\"LandContour\"])\nLabel4 = le.fit_transform(training_set[\"LotConfig\"])\nLabel5 = le.fit_transform(training_set[\"LandSlope\"])\nLabel6 = le.fit_transform(training_set[\"Neighborhood\"])\nLabel7 = le.fit_transform(training_set[\"Condition1\"])\nLabel8 = le.fit_transform(training_set[\"Condition2\"])\nLabel9 = le.fit_transform(training_set[\"BldgType\"])\nLabel10 = le.fit_transform(training_set[\"HouseStyle\"])\nLabel11 = le.fit_transform(training_set[\"RoofStyle\"])\nLabel12 = le.fit_transform(training_set[\"RoofMatl\"])\nLabel13 = le.fit_transform(training_set[\"ExterQual\"])\nLabel14 = le.fit_transform(training_set[\"Foundation\"])\nLabel15 = le.fit_transform(training_set[\"Heating\"])\nLabel16 = le.fit_transform(training_set[\"HeatingQC\"])\nLabel17 = le.fit_transform(training_set[\"CentralAir\"])\nLabel18 = le.fit_transform(training_set[\"PavedDrive\"])\nLabel19 = le.fit_transform(training_set[\"ExterCond\"])\nLabel20 = le.fit_transform(training_set[\"BsmtQual\"])\nLabel21 = le.fit_transform(training_set[\"Exterior1st\"])\nLabel22 = le.fit_transform(training_set[\"Exterior2nd\"])\nLabel23 = le.fit_transform(training_set[\"BsmtCond\"])\nLabel24 = le.fit_transform(training_set[\"BsmtExposure\"])\nLabel25 = le.fit_transform(training_set[\"BsmtFinType1\"])\nLabel26 = le.fit_transform(training_set[\"BsmtFinType2\"])\nLabel27 = le.fit_transform(training_set[\"Electrical\"])\nLabel28 = le.fit_transform(training_set[\"KitchenQual\"])\nLabel29 = le.fit_transform(training_set[\"Functional\"])\nLabel30 = le.fit_transform(training_set[\"GarageType\"])\nLabel31 = le.fit_transform(training_set[\"GarageQual\"])\nLabel32 = le.fit_transform(training_set[\"GarageCond\"])\nLabel33 = le.fit_transform(training_set[\"GarageFinish\"])\nLabel34 = le.fit_transform(training_set[\"SaleType\"])\nLabel35 = le.fit_transform(training_set[\"Utilities\"])\nLabel36 = le.fit_transform(training_set[\"MasVnrType\"])\nLabel37 = le.fit_transform(training_set[\"MSZoning\"])\n\n","15050624":"training_set.drop(columns=[\"Street\", \"SaleCondition\", \"LotShape\", \"LandContour\", \"LotConfig\", \"LandSlope\", \"Neighborhood\", \"Condition1\", \"Condition2\", \"BldgType\", \"HouseStyle\", \"RoofStyle\", \"RoofMatl\", \"ExterQual\", \"ExterCond\", \"Foundation\", \"Heating\", \"HeatingQC\", \"CentralAir\", \"PavedDrive\", \"BsmtQual\", \"Exterior1st\", \"Exterior2nd\", \"BsmtCond\", \"BsmtExposure\", \"BsmtFinType1\", \"BsmtFinType2\", \"Electrical\", \"KitchenQual\", \"Functional\", \"GarageType\", \"GarageQual\", \"GarageCond\", \"GarageFinish\", \"SaleType\", \"Utilities\", \"MasVnrType\", \"MSZoning\"], inplace=True)","71f20860":"training_set[\"Street\"] = Label\ntraining_set[\"SaleCondition\"] = Label1\ntraining_set[\"LotShape\"] = Label2\ntraining_set[\"LandContour\"]= Label3\ntraining_set[\"LotConfig\"]= Label4\ntraining_set[\"LandSlope\"]= Label5\ntraining_set[\"Neighborhood\"]= Label6\ntraining_set[\"Condition1\"]= Label7\ntraining_set[\"Condition2\"]= Label8\ntraining_set[\"BldgType\"]= Label9\ntraining_set[\"HouseStyle\"]= Label10\ntraining_set[\"RoofStyle\"]= Label11\ntraining_set[\"RoofMatl\"]= Label12\ntraining_set[\"ExterQual\"]= Label13\ntraining_set[\"Foundation\"]= Label14\ntraining_set[\"Heating\"]= Label15\ntraining_set[\"HeatingQC\"]= Label16\ntraining_set[\"CentralAir\"]= Label17\ntraining_set[\"PavedDrive\"]= Label18\ntraining_set[\"ExterCond\"]= Label19\ntraining_set[\"BsmtQual\"]= Label20\ntraining_set[\"Exterior1st\"]=Label21\ntraining_set[\"Exterior2nd\"]=Label22\ntraining_set[\"BsmtCond\"]=Label23\ntraining_set[\"BsmtExposure\"]=Label24\ntraining_set[\"BsmtFinType1\"]=Label25\ntraining_set[\"BsmtFinType2\"]=Label26\ntraining_set[\"Electrical\"]=Label27\ntraining_set[\"KitchenQual\"]=Label28\ntraining_set[\"Functional\"]=Label29\ntraining_set[\"GarageType\"]=Label30\ntraining_set[\"GarageQual\"]=Label31\ntraining_set[\"GarageCond\"]=Label32\ntraining_set[\"GarageFinish\"]=Label33\ntraining_set[\"SaleType\"]=Label34\ntraining_set[\"Utilities\"]=Label35\ntraining_set[\"MasVnrType\"]=Label36\ntraining_set[\"MSZoning\"]=Label37\n","d2615986":"Label = le.fit_transform(submission_set[\"Street\"])\nLabel1 = le.fit_transform(submission_set[\"SaleCondition\"])\nLabel2 = le.fit_transform(submission_set[\"LotShape\"])\nLabel3 = le.fit_transform(submission_set[\"LandContour\"])\nLabel4 = le.fit_transform(submission_set[\"LotConfig\"])\nLabel5 = le.fit_transform(submission_set[\"LandSlope\"])\nLabel6 = le.fit_transform(submission_set[\"Neighborhood\"])\nLabel7 = le.fit_transform(submission_set[\"Condition1\"])\nLabel8 = le.fit_transform(submission_set[\"Condition2\"])\nLabel9 = le.fit_transform(submission_set[\"BldgType\"])\nLabel10 = le.fit_transform(submission_set[\"HouseStyle\"])\nLabel11 = le.fit_transform(submission_set[\"RoofStyle\"])\nLabel12 = le.fit_transform(submission_set[\"RoofMatl\"])\nLabel13 = le.fit_transform(submission_set[\"ExterQual\"])\nLabel14 = le.fit_transform(submission_set[\"Foundation\"])\nLabel15 = le.fit_transform(submission_set[\"Heating\"])\nLabel16 = le.fit_transform(submission_set[\"HeatingQC\"])\nLabel17 = le.fit_transform(submission_set[\"CentralAir\"])\nLabel18 = le.fit_transform(submission_set[\"PavedDrive\"])\nLabel19 = le.fit_transform(submission_set[\"ExterCond\"])\nLabel20 = le.fit_transform(submission_set[\"BsmtQual\"])\nLabel21 = le.fit_transform(submission_set[\"Exterior1st\"])\nLabel22 = le.fit_transform(submission_set[\"Exterior2nd\"])\nLabel23 = le.fit_transform(submission_set[\"BsmtCond\"])\nLabel24 = le.fit_transform(submission_set[\"BsmtExposure\"])\nLabel25 = le.fit_transform(submission_set[\"BsmtFinType1\"])\nLabel26 = le.fit_transform(submission_set[\"BsmtFinType2\"])\nLabel27 = le.fit_transform(submission_set[\"Electrical\"])\nLabel28 = le.fit_transform(submission_set[\"KitchenQual\"])\nLabel29 = le.fit_transform(submission_set[\"Functional\"])\nLabel30 = le.fit_transform(submission_set[\"GarageType\"])\nLabel31 = le.fit_transform(submission_set[\"GarageQual\"])\nLabel32 = le.fit_transform(submission_set[\"GarageCond\"])\nLabel33 = le.fit_transform(submission_set[\"GarageFinish\"])\nLabel34 = le.fit_transform(submission_set[\"SaleType\"])\nLabel35 = le.fit_transform(submission_set[\"Utilities\"])\nLabel36 = le.fit_transform(submission_set[\"MasVnrType\"])\nLabel37 = le.fit_transform(submission_set[\"MSZoning\"])","7fddf1e0":"submission_set.drop(columns=[\"Street\", \"SaleCondition\", \"LotShape\", \"LandContour\", \"LotConfig\", \"LandSlope\", \"Neighborhood\", \"Condition1\", \"Condition2\", \"BldgType\", \"HouseStyle\", \"RoofStyle\", \"RoofMatl\", \"ExterQual\", \"ExterCond\", \"Foundation\", \"Heating\", \"HeatingQC\", \"CentralAir\", \"PavedDrive\", \"BsmtQual\", \"Exterior1st\", \"Exterior2nd\", \"BsmtCond\", \"BsmtExposure\", \"BsmtFinType1\", \"BsmtFinType2\", \"Electrical\", \"KitchenQual\", \"Functional\", \"GarageType\", \"GarageQual\", \"GarageCond\", \"GarageFinish\", \"SaleType\", \"Utilities\", \"MasVnrType\", \"MSZoning\"], inplace=True)","6daf95d2":"submission_set[\"Street\"] = Label\nsubmission_set[\"SaleCondition\"] = Label1\nsubmission_set[\"LotShape\"] = Label2\nsubmission_set[\"LandContour\"]= Label3\nsubmission_set[\"LotConfig\"]= Label4\nsubmission_set[\"LandSlope\"]= Label5\nsubmission_set[\"Neighborhood\"]= Label6\nsubmission_set[\"Condition1\"]= Label7\nsubmission_set[\"Condition2\"]= Label8\nsubmission_set[\"BldgType\"]= Label9\nsubmission_set[\"HouseStyle\"]= Label10\nsubmission_set[\"RoofStyle\"]= Label11\nsubmission_set[\"RoofMatl\"]= Label12\nsubmission_set[\"ExterQual\"]= Label13\nsubmission_set[\"Foundation\"]= Label14\nsubmission_set[\"Heating\"]= Label15\nsubmission_set[\"HeatingQC\"]= Label16\nsubmission_set[\"CentralAir\"]= Label17\nsubmission_set[\"PavedDrive\"]= Label18\nsubmission_set[\"ExterCond\"]= Label19\nsubmission_set[\"BsmtQual\"]= Label20\nsubmission_set[\"Exterior1st\"]=Label21\nsubmission_set[\"Exterior2nd\"]=Label22\nsubmission_set[\"BsmtCond\"]=Label23\nsubmission_set[\"BsmtExposure\"]=Label24\nsubmission_set[\"BsmtFinType1\"]=Label25\nsubmission_set[\"BsmtFinType2\"]=Label26\nsubmission_set[\"Electrical\"]=Label27\nsubmission_set[\"KitchenQual\"]=Label28\nsubmission_set[\"Functional\"]=Label29\nsubmission_set[\"GarageType\"]=Label30\nsubmission_set[\"GarageQual\"]=Label31\nsubmission_set[\"GarageCond\"]=Label32\nsubmission_set[\"GarageFinish\"]=Label33\nsubmission_set[\"SaleType\"]=Label34\nsubmission_set[\"Utilities\"]=Label35\nsubmission_set[\"MasVnrType\"]=Label36\nsubmission_set[\"MSZoning\"]=Label37","ddd3f376":"label = training_set[\"SalePrice\"]","241bc057":"train =training_set.drop(columns=\"SalePrice\")","14a1facc":"from sklearn.preprocessing import StandardScaler","41aa6def":"scalar = StandardScaler()\nscalar.fit(train)\n","91c716d1":"scaled_data = scalar.transform(train)\n\n","70c97173":"scaled_data","9b1ec4c9":"from sklearn.decomposition import PCA","1e0eaec3":"pca = PCA(n_components=5)\npca.fit(scaled_data)\n\n\nprint(scaled_data.shape)\n","143f25ce":"x_pca = pca.transform(scaled_data)\n","07d522e0":"x_pca.shape","cf4b6544":"scalar = StandardScaler()\nscalar.fit(submission_set)\nscaled_data1 = scalar.transform(submission_set)\n\n\n","a2157679":"pca = PCA(n_components=5)\npca.fit(scaled_data1)\n\n\nprint(scaled_data1.shape)\nx_pca1 = pca.transform(scaled_data1)","3ad7ffc2":"x_pca1.shape","98e634dc":"data = pd.DataFrame(x_pca)\nsubmit = pd.DataFrame(x_pca1)\n\n","9d49feba":"x_train, x_test, y_train, y_test = train_test_split(data, label , test_size=0.2)","9e7cf5fd":"from sklearn.linear_model import LinearRegression","3ac749eb":"model = LinearRegression()","28f0c400":"model.fit(x_train, y_train)","ebae8ba2":"model.score(x_test, y_test)","047aa4fe":"import xgboost as xgb","7d2d903f":"model = xgb.XGBRegressor(objective=\"reg:squarederror\", random_state=42, learning_rate=0.1)","eef796e4":"x_train","8ed7a050":"model.fit(x_train, y_train)","495e1dec":"model.score(x_test, y_test)","986fac34":"submit.info()","3ab29aa1":"predictions = model.predict(submit)","1f5c2f81":"submission_set = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\")","bbee6c36":"submission = pd.DataFrame()\nsubmission['Id'] = submission_set.Id","b4079fa4":"submission['SalePrice'] = predictions\nsubmission.head()\nsubmission.to_csv('submission1.csv', index=False)","d347a67a":"Importing libraries for label encoding and splitting.","2821ecfe":"It will be beneficial for them who want to take part in the Kaggle Competitions.","9efab37e":"Dividing Dataframe into train and labels.","ad7255b6":"# **The codes are simple and easy to understand. Written for starters in machine learning.**\n","acb442e8":"# Submission Part","bb01bc8c":"Training Part","76a65b6b":"importing libraries","43ca258a":"Dropping old categorical column and replacing with new numerical column for training_set.","d8699c43":"Applying label encoding for training_set.","33c81684":"Extracting unique features from object datatypes for training_set.","46edeee7":"Reading csv file and converting into pandas dataframe and saving into training_set and submission_set.","d271cd8d":"Splitting dataset into train and test sets.","6806e8e8":"aaaaa","f02f36aa":"Label Encoding for submission_set.","30d7dfd2":"Importing Library for model fitting","6efe5b47":"Dropping old categorical column and replacing with new numerical column for submission_set."}}