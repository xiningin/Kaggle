{"cell_type":{"933e8c2a":"code","ffe209c0":"code","33b0f6bf":"code","6b32dd99":"code","d4d01a58":"code","ee8f60ce":"code","97a542fd":"code","2a8e2c5a":"code","9d55ada5":"code","21f3c831":"code","5e2c2dd4":"code","bf06a241":"code","64a70862":"code","15aa33c1":"code","c2b1b860":"code","b632f35f":"code","977b6246":"code","2a49009e":"code","d350a150":"code","953826c1":"code","ec164da4":"code","ae7ac51e":"code","08efd8f4":"code","fbe352d4":"code","75aef405":"code","5e208ac8":"code","ac9de79e":"code","c12f8605":"code","b0fe8b75":"code","25693196":"code","d9ab3acf":"code","51c94fea":"code","01f2b708":"code","1498d80d":"code","fc1ac057":"code","28b59827":"code","c85f487a":"code","746d92ef":"code","0834cdb5":"code","a3f18af8":"code","460248d3":"code","24b79913":"code","5398488c":"code","124657b3":"code","3756f330":"code","8f4b29eb":"markdown","a0482425":"markdown","9f52abd9":"markdown","3a6fc19b":"markdown","97cb0c61":"markdown","887840c7":"markdown","9858dbeb":"markdown","a9c06604":"markdown","62476ea6":"markdown","0b72ef47":"markdown","de64958e":"markdown"},"source":{"933e8c2a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport glob\nimport shutil\nimport os\nimport gc\nimport pathlib\nprint(os.listdir(\"..\/input\/\"))\n%reload_ext autoreload\n%autoreload 2\n%matplotlib inline\n# Any results you write to the current directory are saved as output.","ffe209c0":"from fastai.imports import *\nfrom fastai.transforms import *\nfrom fastai.conv_learner import *\nfrom fastai.model import *\nfrom fastai.dataset import *\nfrom fastai.sgdr import *\nfrom fastai.plots import *","33b0f6bf":"torch.cuda.is_available()","6b32dd99":"torch.backends.cudnn.enabled","d4d01a58":"dog_indexes = []\ncat_indexes = []\ncount = 0\ncat_count = 1\ndog_count = 1","ee8f60ce":"for name in os.listdir('..\/input\/dogs-vs-cats-redux-kernels-edition\/train\/'):\n    if 'cat' in name:\n        cat_indexes.append(name.split('.')[1])\n    if 'dog' in name:\n        dog_indexes.append(name.split('.')[1])","97a542fd":"print ('Dog!\\n',len(dog_indexes), '\\nCat!\\n', len(cat_indexes))","2a8e2c5a":"cat_val_list = random.sample(cat_indexes, 2000)\ndog_val_list = random.sample(dog_indexes, 2000)","9d55ada5":"os.makedirs('..\/working\/dogcats\/valid\/cats\/')\nos.makedirs('..\/working\/dogcats\/valid\/dogs\/')\nos.makedirs('..\/working\/dogcats\/train\/cats\/')\nos.makedirs('..\/working\/dogcats\/train\/dogs\/')\nos.makedirs('..\/working\/dogcats\/test\/')","21f3c831":"train_dir = \"..\/input\/dogs-vs-cats-redux-kernels-edition\/train\/\"\ntest_dir = \"..\/input\/dogs-vs-cats-redux-kernels-edition\/test\/\"\ncat_train_dir = \"..\/working\/dogcats\/train\/cats\/\"\ncat_valid_dir = \"..\/working\/dogcats\/valid\/cats\/\"\ndog_train_dir = \"..\/working\/dogcats\/train\/dogs\/\"\ndog_valid_dir = \"..\/working\/dogcats\/valid\/dogs\/\"\ndogcats_test = \"..\/working\/dogcats\/test\/\"","5e2c2dd4":"PATH = \"..\/working\/dogcats\/\"\nsz=224","bf06a241":"for jpgfile in iglob(os.path.join(train_dir, \"cat*.jpg\")):\n    if jpgfile.split('.')[3] in cat_val_list:\n        shutil.copy(jpgfile, cat_valid_dir)\n    else:\n        shutil.copy(jpgfile, cat_train_dir)\n\nfor jpgfile in iglob(os.path.join(train_dir, \"dog*.jpg\")):\n    if jpgfile.split('.')[3] in dog_val_list:\n        shutil.copy(jpgfile, dog_valid_dir)\n    else:\n        shutil.copy(jpgfile, dog_train_dir)\n        ","64a70862":"for jpgfile in iglob(os.path.join(test_dir, \"*.jpg\")):\n    shutil.copy(jpgfile, dogcats_test)","15aa33c1":"cache_dir = os.path.expanduser(os.path.join('~', '.torch'))\nif not os.path.exists(cache_dir):\n    os.makedirs(cache_dir)\nmodels_dir = os.path.join(cache_dir, 'models')\nif not os.path.exists(models_dir):\n    os.makedirs(models_dir)","c2b1b860":"!cp ..\/input\/resnet34\/resnet34.pth \/tmp\/.torch\/models\/resnet34-333f7ec4.pth","b632f35f":"gc.collect()","977b6246":"tfms = tfms_from_model(resnet34, sz, aug_tfms=transforms_side_on, max_zoom=1.1)","2a49009e":"arch=resnet34","d350a150":"data = ImageClassifierData.from_paths(PATH, tfms=tfms, test_name='test')\nlearn = ConvLearner.pretrained(arch, data, precompute=True)","953826c1":"learn.fit(1e-2, 1)","ec164da4":"learn.precompute=False","ae7ac51e":"learn.fit(1e-2, 3, cycle_len=1)","08efd8f4":"learn.sched.plot_lr()","fbe352d4":"gc.collect()","75aef405":"learn.unfreeze()","5e208ac8":"lr=np.array([1e-4,1e-3,1e-2])","ac9de79e":"learn.fit(lr, 3, cycle_len=1, cycle_mult=2)","c12f8605":"learn.sched.plot_lr()","b0fe8b75":"gc.collect()","25693196":"log_preds,y = learn.TTA()\nprobs = np.mean(np.exp(log_preds),0)","d9ab3acf":"accuracy_np(probs, y)","51c94fea":"preds = np.argmax(probs, axis=1)\nprobs = probs[:,1]","01f2b708":"temp = learn.predict(is_test=True)","1498d80d":"temp.shape","fc1ac057":"pred_test = np.argmax(temp, axis=1)","28b59827":"pred_test[:20]","c85f487a":"probs = np.exp(temp[:,1])","746d92ef":"probs[:10]","0834cdb5":"os.listdir(f'{PATH}test')[:4]","a3f18af8":"submission = pd.DataFrame({'id':os.listdir(f'{PATH}test'), 'label':probs})","460248d3":"! rm -rf ..\/working\/dogcats\/","24b79913":"submission['id'] = submission['id'].map(lambda x: x.split('.')[0])","5398488c":"submission['id'] = submission['id'].astype(int)","124657b3":"submission = submission.sort_values('id')","3756f330":"submission.to_csv('..\/working\/output.csv', index=False)","8f4b29eb":"**Prediction on Test Data**","a0482425":"# Updated\n\n**Now using all 25000 images of the dataset since Kaggle increased available disk space to 5.2 GB. Thank you Kaggle!**\n\n# Previous Version (Score: 0.07092)\n\n**I have used only 16000 of the available 25000 images of the training data due to kaggle kernel limitations of Disk space. Please make the necessary changes in the code if you want to train on the complete dataset.**\n\n**I realize this is not a well explained kernel, but I primarily wrote this to verify if it was possible to come up with an end-to-end solution using fastai inside kaggle kernels**","9f52abd9":"**Transfer Learning**","3a6fc19b":"**Folders to store the images in format that will allow to run fastai algorithms**","97cb0c61":"for name in os.listdir('..\/input\/dogs-vs-cats-redux-kernels-edition\/train\/'):\n    if 'cat' in name and cat_count <= 8000:\n        cat_indexes.append(name.split('.')[1])\n        cat_count += 1\n    if 'dog' in name and dog_count <= 8000:\n        dog_indexes.append(name.split('.')[1])\n        dog_count += 1\n    if dog_count > 8000 and cat_count > 8000:\n        break","887840c7":"**Indexes for Validation**","9858dbeb":"**Data Augmentation**","a9c06604":"**Creation of submission CSV**","62476ea6":"**Randomly sampling indexes to add images to Validation set. Make changes to validation set if required.**","0b72ef47":"**Begin Training**","de64958e":"**Moving Images of each class.**"}}