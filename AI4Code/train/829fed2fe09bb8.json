{"cell_type":{"50e32e1a":"code","351bbe30":"code","409950e3":"code","c5e77a0f":"code","5cd3fb00":"code","d1d7be21":"code","5bd97abe":"code","212bf56d":"code","dc11772b":"code","d220def6":"markdown"},"source":{"50e32e1a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","351bbe30":"#Code by https:\/\/www.kaggle.com\/mpwolke\/gravel-wood-labels-images\n\nimport torch\nimport torchvision\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom PIL import Image, ImageDraw\nimport xml.etree.ElementTree as ET\n\nimages_dir = '\/kaggle\/input\/indian-license-plates-with-labels\/images\/'\nannotations_dir = '\/kaggle\/input\/indian-license-plates-with-labels\/labels\/'","409950e3":"#As it has zeros before the number of the sample id, write it with ticks.\n\nsample_id = '00000006'\n\nsample_image_path = f'\/kaggle\/input\/indian-license-plates-with-labels\/images\/{sample_id}.jpg'\nsample_annot_path = f'\/kaggle\/input\/indian-license-plates-with-labels\/labels\/{sample_id}.txt'","c5e77a0f":"sample_image = Image.open(sample_image_path)\nsample_image","5cd3fb00":"with open(sample_annot_path) as annot_file:\n    print(''.join(annot_file.readlines()))","d1d7be21":"model = torchvision.models.detection.fasterrcnn_resnet50_fpn(\n    pretrained=True, progress=True, num_classes=91, pretrained_backbone=True)\n\nmodel","5bd97abe":"model.eval()\n\nnp_sample_image = np.array(sample_image.convert(\"RGB\"))\n\ntransformed_img = torchvision.transforms.transforms.ToTensor()(\n        torchvision.transforms.ToPILImage()(np_sample_image))\n\nresult = model([transformed_img])\n\nresult","212bf56d":"COCO_INSTANCE_CATEGORY_NAMES = [\n     'license plate','caterpillar','__background__', 'vehicle', 'person', 'bicycle', 'car', 'motorcycle', 'airplane', 'bus',\n    'train', 'truck', 'boat', 'traffic light', 'fire hydrant', 'N\/A', 'stop sign',\n    'parking meter', 'bench', 'bird', 'cat', 'dog', 'horse', 'sheep', 'cow',\n    'elephant', 'bear', 'zebra', 'giraffe', 'N\/A', 'backpack', 'umbrella', 'N\/A', 'N\/A',\n    'handbag', 'tie', 'suitcase', 'frisbee', 'skis', 'snowboard', 'sports ball',\n    'kite', 'baseball bat', 'baseball glove', 'skateboard', 'surfboard', 'tennis racket',\n    'bottle', 'N\/A', 'wine glass', 'cup', 'fork', 'knife', 'spoon', 'bowl',\n    'banana', 'apple', 'sandwich', 'orange', 'broccoli', 'carrot', 'hot dog', 'pizza',\n    'donut', 'cake', 'chair', 'couch', 'potted plant', 'bed', 'N\/A', 'dining table',\n    'N\/A', 'N\/A', 'toilet', 'N\/A', 'tv', 'laptop', 'mouse', 'remote', 'keyboard', 'cell phone',\n    'microwave', 'oven', 'toaster', 'sink', 'refrigerator', 'N\/A', 'book',\n    'clock', 'vase', 'scissors', 'teddy bear', 'hair drier', 'toothbrush']","dc11772b":"plate_id = 1\nplate_boxes = [x.detach().numpy().tolist() for i, x in enumerate(result[0]['boxes']) if result[0]['labels'][i] == plate_id]\nplate_boxes","d220def6":"#Coco doesn't have License Plate. So, no box for now."}}