{"cell_type":{"89a93e14":"code","4c938b67":"code","de4fdf0f":"code","47100fac":"code","8427bb74":"code","b337817a":"code","75675b94":"code","ed00ec3f":"code","e72ce376":"markdown","4f14a0ad":"markdown"},"source":{"89a93e14":"from matplotlib import pyplot as plt\n%matplotlib notebook\n# Median Developer Salaries by Age\ndev_x = [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]","4c938b67":"dev_y = [38496, 42000, 46752, 49320, 53200,\n         56000, 62316, 64928, 67317, 68748, 73752]","de4fdf0f":"# Median Python Developer Salaries by Age\nfrom matplotlib import pyplot as plt\n%matplotlib notebook\npy_dev_x = [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]\npy_dev_y = [45372, 48876, 53850, 57287, 63016,\n            65998, 70003, 70000, 71496, 75370, 83640]\nplt.plot(py_dev_x,py_dev_y)\nplt.show()\nplt.savefig(\"plot1.png\")","47100fac":"from matplotlib import pyplot as plt\n%matplotlib notebook\n# Median Developer Salaries by Age\nage_x = [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]\nall_dev = [38496, 42000, 46752, 49320, 53200,\n         56000, 62316, 64928, 67317, 68748, 73752]\nplt.plot(age_x,all_dev,\"r--\",label=\"all_dev\")\n# Median Python Developer Salaries by Age\npy_dev = [45372, 48876, 53850, 57287, 63016,\n            65998, 70003, 70000, 71496, 75370, 83640]\n\nplt.plot(age_x,py_dev, label=\"py_dev\")\n\nplt.legend()\nplt.show()\nplt.savefig(\"plot2.png\")","8427bb74":"from matplotlib import pyplot as plt\n%matplotlib notebook\n# Median Developer Salaries by Age\nage_x = [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]\nall_dev = [38496, 42000, 46752, 49320, 53200,\n         56000, 62316, 64928, 67317, 68748, 73752]\nplt.plot(age_x,all_dev,color=\"K\",linestyle=\"--\",marker=\".\",label=\"all_dev\")\n# Median Python Developer Salaries by Age\npy_dev = [45372, 48876, 53850, 57287, 63016,\n            65998, 70003, 70000, 71496, 75370, 83640]\n\nplt.plot(age_x,py_dev,marker=\"o\",linewidth='3', label=\"py_dev\")\nplt.xlabel('Ages')\nplt.ylabel('Median Salary (USD)')\nplt.title('Median Salary (USD) by Age')\nplt.legend()\nplt.tight_layout()\nplt.grid()\nplt.show()\nplt.savefig(\"plot3.png\")","b337817a":"# Ages 18 to 55\nfrom matplotlib import pyplot as plt\n%matplotlib notebook\nplt.style.use(\"fivethirtyeight\")\nages_x = [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n          36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55]\npy_dev_y = [20046, 17100, 20000, 24744, 30500, 37732, 41247, 45372, 48876, 53850, 57287, 63016, 65998, 70003, 70000, 71496, 75370, 83640, 84666,\n            84392, 78254, 85000, 87038, 91991, 100000, 94796, 97962, 93302, 99240, 102736, 112285, 100771, 104708, 108423, 101407, 112542, 122870, 120000]\nplt.plot(ages_x,py_dev_y, label=\"py_dev_y\")\n\njs_dev_y = [16446, 16791, 18942, 21780, 25704, 29000, 34372, 37810, 43515, 46823, 49293, 53437, 56373, 62375, 66674, 68745, 68746, 74583, 79000,\n            78508, 79996, 80403, 83820, 88833, 91660, 87892, 96243, 90000, 99313, 91660, 102264, 100000, 100000, 91660, 99240, 108000, 105000, 104000]\nplt.plot(ages_x,js_dev_y, label=\"js_dev_y\")\n\ndev_y = [17784, 16500, 18012, 20628, 25206, 30252, 34368, 38496, 42000, 46752, 49320, 53200, 56000, 62316, 64928, 67317, 68748, 73752, 77232,\n         78000, 78508, 79536, 82488, 88935, 90000, 90056, 95000, 90000, 91633, 91660, 98150, 98964, 100000, 98988, 100000, 108923, 105000, 103117]\nplt.plot(ages_x,dev_y, label=\"dev_y\")\n\nplt.xlabel(\"Age\")\nplt.ylabel(\"Salary in USD\")\nplt.title(\"Median Salary (USD) by Age\")\nplt.show()\nplt.savefig(\"plot4.png\")","75675b94":"Style=['bmh', 'classic', 'dark_background', 'fast', 'fivethirtyeight', 'ggplot', 'grayscale', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark-palette', 'seaborn-dark', 'seaborn-darkgrid', 'seaborn-deep', 'seaborn-muted', 'seaborn-notebook', 'seaborn-paper', 'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks', 'seaborn-white', 'seaborn-whitegrid', 'seaborn', 'Solarize_Light2', 'tableau-colorblind10', '_classic_test']\nprint(Style)","ed00ec3f":"from matplotlib import pyplot as plt\n\nplt.xkcd()\n\nages_x = [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n          36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55]\n\npy_dev_y = [20046, 17100, 20000, 24744, 30500, 37732, 41247, 45372, 48876, 53850, 57287, 63016, 65998, 70003, 70000, 71496, 75370, 83640, 84666,\n            84392, 78254, 85000, 87038, 91991, 100000, 94796, 97962, 93302, 99240, 102736, 112285, 100771, 104708, 108423, 101407, 112542, 122870, 120000]\nplt.plot(ages_x, py_dev_y, label='Python')\n\njs_dev_y = [16446, 16791, 18942, 21780, 25704, 29000, 34372, 37810, 43515, 46823, 49293, 53437, 56373, 62375, 66674, 68745, 68746, 74583, 79000,\n            78508, 79996, 80403, 83820, 88833, 91660, 87892, 96243, 90000, 99313, 91660, 102264, 100000, 100000, 91660, 99240, 108000, 105000, 104000]\nplt.plot(ages_x, js_dev_y, label='JavaScript')\n\ndev_y = [17784, 16500, 18012, 20628, 25206, 30252, 34368, 38496, 42000, 46752, 49320, 53200, 56000, 62316, 64928, 67317, 68748, 73752, 77232,\n         78000, 78508, 79536, 82488, 88935, 90000, 90056, 95000, 90000, 91633, 91660, 98150, 98964, 100000, 98988, 100000, 108923, 105000, 103117]\nplt.plot(ages_x, dev_y, color='#444444', linestyle='--', label='All Devs')\n\nplt.xlabel('Ages')\nplt.ylabel('Median Salary (USD)')\nplt.title('Median Salary (USD) by Age')\n\nplt.legend()\n\nplt.tight_layout()\n\nplt.savefig('plot.png')\n\nplt.show()","e72ce376":"<p>we will be learning how to get started with Matplotlib. Matplotlib is a plotting library with a \nlot of functionality for visualizing our data in an easy to digest format. We will learn how to make simple line plots, customize our graphs, and the basics of working with Matplotlib<\/p>","4f14a0ad":"# Creating and Customizing Our First Plots"}}