{"cell_type":{"ad802535":"code","9b0102d3":"code","d6f05ce2":"code","ff7037be":"code","974d91ee":"code","35014588":"code","f8b2c5ff":"code","89a51560":"code","d11d61c0":"code","c22370f7":"code","88572a3f":"code","d31dc75f":"code","886331f3":"code","2f66c066":"code","4c7738bc":"code","4d856410":"code","61bf4d10":"code","23d3e4b3":"code","1573a567":"code","f57d3da3":"code","f5db2fbf":"code","34fb945f":"code","ac03938f":"code","5e43b47a":"code","923b30f8":"code","1f86b1bc":"code","5ddaa364":"code","a47fd9a1":"code","2d03116d":"code","f7870eec":"code","978772b8":"code","324ddf1e":"code","cb22f565":"code","10775aaf":"code","3bedb7cd":"code","e3d4bad2":"code","b71c8628":"code","b9e8bb39":"code","76919fa8":"markdown","f0e189f9":"markdown","e03f852b":"markdown","376c519d":"markdown","2501a82a":"markdown","6c0a18ab":"markdown","fecbd8a4":"markdown","66ee0760":"markdown","4a69f988":"markdown","619100a9":"markdown","3338afa3":"markdown","0bfc4b17":"markdown","52604408":"markdown","69fe233b":"markdown","4a0b7c39":"markdown","2ab5b351":"markdown","361a260e":"markdown","69261350":"markdown","7b3a909a":"markdown","cb778f3b":"markdown","512fb2c8":"markdown","8776914d":"markdown","55b1ea7c":"markdown","65f09e51":"markdown","d72fe20c":"markdown","c3672192":"markdown","7e3859a4":"markdown"},"source":{"ad802535":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport nltk\nimport string\nfrom nltk.tokenize import word_tokenize\nfrom nltk.corpus import stopwords\nfrom nltk import FreqDist\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n!pip install chart_studio\nimport chart_studio.plotly as py \nimport plotly.graph_objs as go\nimport plotly.express as px\n\nfrom plotly.offline import iplot, init_notebook_mode\n\n\nfrom wordcloud import WordCloud \n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9b0102d3":"hotel_data = pd.read_csv('\/kaggle\/input\/trip-advisor-hotel-reviews\/tripadvisor_hotel_reviews.csv')\n\nhotel_data.head(10)","d6f05ce2":"hotel_data.info()\n","ff7037be":"\n#plt.figure(figsize=(12,12))\n#sns.set(style=\"white\") \n#sns.set(style=\"whitegrid\", color_codes=True)\n#sns.displot(hotel_data,x='Rating', hue=\"Rating\")\n#plt.show()\nfig =  px.histogram(hotel_data, x=\"Rating\", color=\"Rating\",\n                   title=\"Hotel Rating Count\")\nfig.show()","974d91ee":"hotel_data['Rating'].value_counts().sort_index()\n","35014588":"! spacy download en \n! python3 -m spacy download en_core_web_sm\n\nimport spacy\n","f8b2c5ff":"nlp = spacy.load('en_core_web_sm')\ndef text_process(sentence):\n    return str(\" \".join([word.lemma_ for word in nlp(sentence) if not word.is_stop and not word.is_punct and not word.like_num]))\n    \n","89a51560":"reviews = hotel_data['Review'].apply(text_process)\nprint(reviews)","d11d61c0":"doc = [str(x) for x in reviews]\n#print(doc)","c22370f7":"df_review = pd.DataFrame(doc,columns=[\"Reviews\"])\ndf_review.head()","88572a3f":"\ndef wordCloud_generator(data, title=None):\n    wordcloud = WordCloud(width = 1000, height = 1000,\n                          background_color ='black',\n                          min_font_size = 10\n                         ).generate(\" \".join(data.values))\n    # plot the WordCloud image                        \n    plt.figure(figsize = (8, 8), facecolor = None) \n    plt.imshow(wordcloud, interpolation='bilinear') \n    plt.axis(\"off\") \n    plt.tight_layout(pad = 0) \n    plt.title(title,fontsize=30)\n    plt.show() ","d31dc75f":"wordCloud_generator(df_review['Reviews'],'Most common words')\n","886331f3":"\n# function to plot most frequent terms\ndef freq_words(x, terms = 30):\n  all_words = ' '.join([text for text in x])\n  all_words = all_words.split()\n\n  fdist = FreqDist(all_words)\n  words_df = pd.DataFrame({'word':list(fdist.keys()), 'count':list(fdist.values())})\n\n  # selecting top 20 most frequent words\n  d = words_df.nlargest(columns=\"count\", n = terms) \n  #plt.figure(figsize=(40,12))\n  #ax = sns.barplot(data=d, x= \"word\", y = \"count\")\n  #ax.set(ylabel = 'Count')\n  #plt.show()\n  fig =  px.histogram(d, x=\"word\",y=\"count\",\n                   title=\"30 Most Frequent Words\",\n                   color_discrete_sequence=['indianred'])\n  fig.show()","2f66c066":"freq_words(df_review['Reviews'])\n","4c7738bc":"ratings_ = [int(x) for x in hotel_data['Rating']]\n","4d856410":"df_ratings = pd.DataFrame(ratings_,columns=['Ratings'])\ndf_ratings.head()","61bf4d10":"joined_data = df_review.join(df_ratings)\njoined_data.head()","23d3e4b3":"df_high_ratings = joined_data[joined_data.Ratings >= 3]\ndf_high_ratings.head()","1573a567":"wordCloud_generator(df_high_ratings['Reviews'],'Most common words for high ratings hotel')\n","f57d3da3":"freq_words(df_high_ratings['Reviews'])\n","f5db2fbf":"df_low_ratings = joined_data[joined_data.Ratings < 3]\ndf_low_ratings.head()","34fb945f":"wordCloud_generator(df_low_ratings['Reviews'],'Most common words for low ratings hotel')\n","ac03938f":"freq_words(df_low_ratings['Reviews'])\n","5e43b47a":"! pip install -U textblob \n","923b30f8":"from textblob import TextBlob\njoined_data['polarity']=joined_data['Reviews'].apply(lambda x: TextBlob(x).polarity)\njoined_data['subjective']=joined_data['Reviews'].apply(lambda x: TextBlob(x).subjectivity)\njoined_data.head(10)","1f86b1bc":"from sklearn.feature_extraction.text import CountVectorizer\nfrom nltk.corpus import stopwords\n\ndef ngram_generation(data):\n    stoplist = stopwords.words('english') + ['hotel']\n    c_vec = CountVectorizer(stop_words=stoplist, ngram_range=(2,3))\n    # matrix of ngrams\n    ngrams = c_vec.fit_transform(data)\n    # count frequency of ngrams\n    count_values = ngrams.toarray().sum(axis=0)\n    # list of ngrams\n    vocab = c_vec.vocabulary_\n    df_ngram = pd.DataFrame(sorted([(count_values[i],k) for k,i in vocab.items()], reverse=True)\n            ).rename(columns={0: 'frequency', 1:'bigram\/trigram'})\n    return df_ngram","5ddaa364":"high_ratings = ngram_generation(df_high_ratings['Reviews'])","a47fd9a1":"high_ratings.head(10)","2d03116d":"def ngram_frequency(data):\n    d = data.nlargest(columns=\"frequency\", n =20) \n    #plt.figure(figsize=(40,12))\n    #ax = sns.barplot(data=d, x= \"bigram\/trigram\", y = \"frequency\")\n    #ax.set(ylabel = 'Count')\n    #plt.show()\n    fig =  px.histogram(d, x=\"bigram\/trigram\",y=\"frequency\",\n                   title=\"Bigram\/Trigram Frequency Plot\",\n                   color_discrete_sequence=['olive'])\n    fig.show()","f7870eec":"ngram_frequency(high_ratings)","978772b8":"df_rating_5 = joined_data[joined_data.Ratings == 5]\ndf_rating_5.head()","324ddf1e":"ratings_5 = ngram_generation(df_rating_5['Reviews'])","cb22f565":"ratings_5.head(20)","10775aaf":"ngram_frequency(ratings_5)","3bedb7cd":"df_rating_1 =  joined_data[joined_data.Ratings == 1]\ndf_rating_1.head(10)","e3d4bad2":"low_ratings =  ngram_generation(df_rating_1['Reviews'])","b71c8628":"low_ratings.head(20)","b9e8bb39":"ngram_frequency(low_ratings)","76919fa8":"<h2 style=\"text-align:center;color:green;font-family:Monospace;\">Issues with 1 star rating hotels. <\/h2>","f0e189f9":"<h2 style=\"text-align:center;color:green;font-family:Monospace;\">Rating Distribution<\/h2>","e03f852b":"<p style=\"color:red;font-family:Monospace;\">Getting all the reviews having hotel rating greater than 2.<\/p>\n","376c519d":" <h2 style=\"text-align:center;color:green;font-family:Monospace;\">Generate Frequency Distribution Graph for tokens appearing in Reviews<\/h2>","2501a82a":"<p style=\"color:red;font-family:Monospace;\">Getting all the reviews having hotel rating less than 3.<\/p>\n","6c0a18ab":" <h2 style=\"text-align:center;color:green;font-family:Monospace;\">Top 30 Most Frequent Words Appearing in Reviews<\/h2>","fecbd8a4":" <h2 style=\"text-align:center;color:green;font-family:Monospace;\">Generate WordCloud<\/h2>","66ee0760":"<p style=\"color:red;font-family:Monospace;\">Let\u2019s look at the overall sentiment analysis.For this we will install the textblob library.<\/p>","4a69f988":"<p style=\"color:red;font-family:Monospace;\">In the above text_process function we are removing stopwords,punctuations ,numbers and also performing Lemmatization.<\/p>\n","619100a9":" <h2 style=\"text-align:center;color:green;font-family:Monospace;\">Frequency Distribution of Low Rating Hotels. <\/h2>","3338afa3":"<h2 style=\"text-align:center;color:green;font-family:Monospace;\">Sentiment Analysis. <\/h2>","0bfc4b17":" <h2 style=\"text-align:center;color:green;font-family:Monospace;\">Data Loading<\/h2>","52604408":" <h2 style=\"text-align:center;color:green;font-family:Monospace;\">WordCloud of high rating hotels.<\/h2>","69fe233b":" <h2 style=\"text-align:center;color:green;font-family:Monospace;\">Data Processing<\/h2>","4a0b7c39":"<h2 style=\"text-align:center;color:green;font-family:Monospace;\">What's good in high rating hotels. <\/h2>","2ab5b351":"<h2 style=\"text-align:center;color:green;font-family:Monospace;\">WordCloud of low rating hotels.<\/h2>","361a260e":"<p style=\"color:red;font-family:Monospace;\">Here we will use spacy for processing and analyzing data in NLP.<\/p>","69261350":"<h2 style=\"text-align:center;color:green;font-family:Monospace;\">Key Features of 5 star rating hotels. <\/h2>","7b3a909a":"<p style=\"color:red;font-family:Monospace;\">We will use spacy nlp function to tokenizes the text to produce document object.<\/p>","cb778f3b":"<p style=\"color:red;font-family:Monospace;\">We then can calculate the sentiment through the polarity function. polarity ranges from -1 to 1, with -1 being negative and 1 being positive. The TextBlob can also use the subjectivity function to calculate subjectivity, which ranges from 0 to 1, with 0 being objective and 1 being subjective.<\/p>","512fb2c8":"<img src= \"https:\/\/play-lh.googleusercontent.com\/NVEbUI63X1NWrCtIL1nAzn_GMMfR5R8phrcQm5oSvwdE8jwJai0LF6ydboU15Hdo6A\" width=\"1000\" height=\"50\"><\/img>","8776914d":"<h2 style=\"text-align:center;color:green;font-family:Monospace;\">Explore Hotel aspects and Topic Modeling on Reviews.\n\n<\/h2>","55b1ea7c":"<h2 style=\"text-align:center;color:green;font-family:Monospace;\">Hotel Reviews WordCloud <\/h2>","65f09e51":"<p style=\"color:red;font-family:Monospace;\">From above bigram\/trigram analysis we can conclude that key facilities available in 5 star rating hotels are :\n<ol style=\"color:red;font-family:Monospace;\"> <li>Friendly and Helpful Staff.<\/li>\n    <li> Clean and Large Rooms.<\/li>\n    <li> Minute Walks <\/li>\n    <li> Great Location.<\/li>\n\n\n<\/ol><\/p>\n","d72fe20c":"<p style=\"color:red;font-family:Monospace;\">From Above Distribution we can find out that count of high rating hotels are more as compared to low rating hotels.<\/p>","c3672192":"> <h2 style=\"text-align:center;color:green;font-family:Monospace;\">Frequency Distribution of High Rating Hotels. <\/h2>","7e3859a4":"<p style=\"color:red;font-family:Monospace;\">From above bigram\/trigram analysis we can conclude that issues with  1 star rating hotels are :\n<ol style=\"color:red;font-family:Monospace;\"> <li>Issues Related with air conditioners.<\/li>\n    <li> Credit Card Payments .<\/li>\n    <li> Small Rooms <\/li>\n<\/ol><\/p>\n"}}