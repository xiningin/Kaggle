{"cell_type":{"cd7f0835":"code","15d41023":"code","c49b27eb":"code","7d24d589":"code","c9078b31":"code","e59bae18":"code","8a70f864":"code","4083283f":"code","c07933da":"code","514cfc93":"code","bdd3d896":"code","c95555e7":"code","c736a3f0":"code","c5d9c1b3":"code","66c84153":"code","ca6e7536":"code","3729b776":"markdown","5c4906ba":"markdown","78c41e7a":"markdown","c0c5090d":"markdown","956a2fc1":"markdown","c1ef9ecf":"markdown","fc0e944b":"markdown","620de2c4":"markdown","655db2c2":"markdown","5ad69d85":"markdown","f15dcb12":"markdown","02f846ec":"markdown","f1674cef":"markdown","73458d8c":"markdown","94841ff3":"markdown","82ccdee3":"markdown","8a9731a9":"markdown","d4045cb4":"markdown","ed99c8d9":"markdown"},"source":{"cd7f0835":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime, timedelta\nfrom pandas.tseries.offsets import MonthEnd\nimport warnings\nwarnings.filterwarnings('ignore')","15d41023":"df = pd.read_csv('..\/input\/bri-data-hackathon-cr-optimization\/train.csv', index_col=[0], parse_dates=[0])","c49b27eb":"# missing dates\nstart = df.index[0]\nend = df.index[-1]\nll = pd.date_range(start, end).tolist()\nmissing = [(i,j) for i,j in enumerate(ll) if j not in df.index]\nmissing","7d24d589":"# data imputation\nfor d in missing:\n    # get middle value between 2 data\n    tmp = (df.iloc[d[0]] + df.iloc[d[0]-1]) \/ 2\n    # give timestamp for the index\n    tmp.name = d[1]\n    # append new data into the dataframe\n    df = df.append(tmp)\ndf.sort_index(inplace=True)","c9078b31":"start = df.index[0] + timedelta(1)\nend = df.index[-1] + timedelta(1)\ndf.index = pd.date_range(start, end)","e59bae18":"start, end","8a70f864":"df['day_of_week'] = df.index.dayofweek\ndays = ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su']\nddays = {k:v for k,v in zip(range(7),days)}\ndf['day_of_week'] = df['day_of_week'].map(ddays)","4083283f":"tmp = df.groupby('day_of_week').mean()\nfig, ax = plt.subplots(1, 2, figsize=(12,3))\nfor i, col in enumerate(['cash_in_kantor', 'cash_out_kantor']):\n    x = tmp.index\n    y = tmp[col]\n    sns.barplot(x, y, order=days, ax=ax[i])\n    ax[i].set_title(col)","c07933da":"# weekend\ndf['dayType'] = np.where((df['day_of_week']=='Sa') | (df['day_of_week']=='Su'), 'weekend', 'weekday')\n\n# holidays\n# https:\/\/dishub.kukarkab.go.id\/pages\/libur-nasional-dan-cuti-bersama-tahun-2019\n# https:\/\/dishub.kukarkab.go.id\/pages\/libur-nasional-dan-cuti-bersama-tahun-2020\nholidays = [datetime(2019,8,11), datetime(2019,8,17), datetime(2019,9,1), datetime(2019,11,9),\n            datetime(2019,12,24), datetime(2019,12,25),\n            datetime(2020,1,1), datetime(2020,1,25), datetime(2020,3,22), datetime(2020,3,25), \n            datetime(2020,4,10), datetime(2020,5,1), datetime(2020,5,7), datetime(2020,5,21), \n            datetime(2020,5,22), datetime(2020,5,24), datetime(2020,5,25), datetime(2020,5,26), \n            datetime(2020,5,27), datetime(2020,6,1), datetime(2020,7,31), datetime(2020,8,17), \n            datetime(2020,8,20), datetime(2020,10,29)]\n\nfor day in holidays:\n    df.loc[day, 'dayType'] = 'holiday'","514cfc93":"def monthly_plot(df, col, deriv=None):\n    y = df[[col, 'dayType']]\n    if deriv == 1:\n        y[col] = y[col].diff()\n    elif deriv == 2:\n        y[col] = y[col].diff().diff()\n\n    year_month = [(2019, i) for i in range(8,13)] + [(2020, i) for i in range(1, 10)]\n    size = len(year_month)\n\n    fig, ax = plt.subplots(size, 1, figsize=(18,2*size))\n    for i, (year, month) in enumerate(year_month):\n        start = datetime(year, month, 1)\n        end = start + MonthEnd(1)\n        ym = y.loc[start:end]\n\n        for day, c, s in zip(['weekday', 'weekend', 'holiday'], ['blue', 'orange', 'red'], [50, 140, 200]):\n            d = ym[ym['dayType']==day]\n            sns.scatterplot(d.index.day, d[col], color=c, s=s, ax=ax[i])\n        ax[i].plot(ym.index.day, ym[col])\n        ax[i].grid()\n        ax[i].set_xticks(range(1,len(ym)+1))\n        ax[i].set_title(f'{year}-{month}')\n\n    plt.tight_layout()","bdd3d896":"monthly_plot(df, 'kas_kantor', deriv=None)","c95555e7":"monthly_plot(df, 'kas_kantor', deriv=1)","c736a3f0":"monthly_plot(df, 'kas_kantor', deriv=2)","c5d9c1b3":"monthly_plot(df, 'kas_echannel', deriv=None)","66c84153":"monthly_plot(df, 'kas_echannel', deriv=1)","ca6e7536":"monthly_plot(df, 'kas_echannel', deriv=2)","3729b776":"# Monthly Series","5c4906ba":"Notes:\n<ul>\n    <li style='color:blue'>blue dots: weekdays<\/li>\n    <li style='color:orange'>orange dots: weekends<\/li>\n    <li style='color:red'>red dots: national holidays<\/li>\n<\/ul>","78c41e7a":"## <p style='color:blue'> missing_dates <\/p>","c0c5090d":"Date shifting is required by assuming that cashflow should be much lower on weekends compared to that on weekdays. https:\/\/www.kaggle.com\/c\/bri-data-hackathon-cr-optimization\/discussion\/207107","956a2fc1":"## <p style='color:blue'> Day Type <\/p>","c1ef9ecf":"# Description","fc0e944b":"# Load Data","620de2c4":"# Data Preprocessing","655db2c2":"## <p style='color:blue'> Date Shifting <\/p>","5ad69d85":"# <p style='color:blue'> $\\frac{d^2}{dt^2}\\text{cash} = \\frac{d}{dt}\\text{cashflow}$ <\/p>","f15dcb12":"## <p style='color:blue'> Day of Week <\/p>","02f846ec":"# <p style='color:green'> kas_kantor <\/p>","f1674cef":"# <p style='color:blue'> $\\frac{d}{dt}\\text{cash} = \\text{cashflow}$ <\/p>","73458d8c":"# <p style='color:blue'> $\\frac{d}{dt}\\text{cash} = \\text{cashflow}$ <\/p>","94841ff3":"Let's define cashflow as:\n\n\\begin{equation}\n\\text{cashflow} = \\text{cash}_{in} + \\text{cash}_{out}, \\quad \\quad \\text{where} \\quad \\text{cash}_{out} < 0. \\\\\n\\end{equation}\n\nUsing approximation:\n\\begin{equation}\n\\frac{dy}{dt} \\approx \\frac{\\Delta y}{\\Delta t} = y_{t} - y_{t-1} , \\quad \\quad \\text{where} \\quad \\Delta t = 1 \\ \\text{day}, \\\\\n\\end{equation}\n\nthe formula of kas_kantor & kas_echannel shown [here](https:\/\/www.kaggle.com\/c\/bri-data-hackathon-cr-optimization\/overview) can be written as:\n\n\\begin{equation}\n\\frac{d}{dt}(\\text{cash}) = \\text{cashflow}\n\\end{equation}\n\nThus, cashflow can be described as the change of cash (kas) over time. While the 2nd derivative of cash (kas) leads to the change of cashflow over time.\n\n\\begin{equation}\n\\frac{d^2}{dt^2}(\\text{cash}) = \\frac{d}{dt}(\\text{cashflow})\n\\end{equation}","82ccdee3":"## <p style='color:blue'> Cash Series <\/p>","8a9731a9":"# <p style='color:blue'> $\\frac{d^2}{dt^2}\\text{cash} = \\frac{d}{dt}\\text{cashflow}$ <\/p>","d4045cb4":"# <p style='color:blue'> Cash Series <\/p>","ed99c8d9":"# <p style='color:green'> kas_echannel <\/p>"}}