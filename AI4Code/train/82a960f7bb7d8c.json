{"cell_type":{"fa5cc5dc":"code","3107fb7e":"code","c92bbf2f":"code","a0d24784":"code","efeac689":"code","d0236927":"code","0d5a0d07":"code","942cb584":"code","b472f63b":"code","b980c93a":"code","17f6dcc2":"code","6f2416e8":"code","c6256aaf":"code","852ea9fe":"code","71beeccf":"code","7c89d52a":"code","88765595":"code","f728d494":"markdown","ecfa3fbf":"markdown","4bca6900":"markdown","49e14684":"markdown","1f19ec7d":"markdown","70d847c7":"markdown","9469728f":"markdown","4c3f3991":"markdown","59b5602c":"markdown","8b4e1a1f":"markdown","b0d94e90":"markdown","5e61e88a":"markdown","7b942656":"markdown","2fb35661":"markdown","84ea6d4c":"markdown","772a5661":"markdown","efa66c39":"markdown","0a5966c6":"markdown","cbc1388b":"markdown","fe6e56da":"markdown","efd36267":"markdown","ee5cf9fc":"markdown","ef33ec31":"markdown","1c7383db":"markdown","60299512":"markdown","52782a42":"markdown"},"source":{"fa5cc5dc":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport numpy as np\nimport pandas as pd\nfrom tqdm.notebook import tqdm\n\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Input\nfrom keras.utils import to_categorical\n\ntqdm.pandas()\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split","3107fb7e":"train_path = '..\/input\/digit-recognizer\/train.csv'\ntrain_data = pd.read_csv(train_path)\ntrain_data = train_data.fillna(train_data.mean())","c92bbf2f":"train_data.head(10)","a0d24784":"y = to_categorical(train_data[\"label\"].values)\nX = train_data[train_data.columns[1:]].values\/255","efeac689":"train_X, val_X, train_y, val_y = train_test_split(X, y)","d0236927":"model = Sequential()\nmodel.add(Dense(units=20, activation='relu'))\nmodel.add(Dense(units=15, activation='relu'))\nmodel.add(Dense(units=10, activation='softmax'))\nmodel.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['acc'])","0d5a0d07":"model.build(input_shape=(None, 784))\nmodel.summary()","942cb584":"model.fit(x=train_X, y=train_y, validation_data=(val_X, val_y), epochs=10)","b472f63b":"test_path = '..\/input\/digit-recognizer\/test.csv'\ntest_data = pd.read_csv(test_path)\ntest_data = test_data.fillna(test_data.mean())","b980c93a":"test_data.head(10)","17f6dcc2":"X_test = test_data[test_data.columns].values\/255","6f2416e8":"predictions = model.predict(X_test)\npredictions = np.argmax(predictions, axis=1)","c6256aaf":"path = '..\/input\/digit-recognizer\/sample_submission.csv'\nsubmission = pd.read_csv(path)","852ea9fe":"submission.head(10)","71beeccf":"submission[\"Label\"] = np.int32(predictions)","7c89d52a":"submission.head(10)","88765595":"submission.to_csv('submission.csv', index=False)","f728d494":"A look at sample_submission.csv -","ecfa3fbf":"A look at some of the train data -","4bca6900":"Splitting the training data into training data and validation data -","49e14684":"### Defining the features and prediction target - ","1f19ec7d":"I made this kernel for Kaggle's Digit Recognition competition. In this kernel, given images of handwritten digits, I tried to identify which digit it is.","70d847c7":"Importing the necessary libraries -","9469728f":"<img src=\"https:\/\/i.imgur.com\/f7DwDnV.jpg\" width=\"500px\">","4c3f3991":"Defining a new variable to hold the features, converting the dataframe into a numpy array and bringing all the features to a range between 0 and 1 by dividing all the values of a feature by its biggest value (255) -","59b5602c":"### Fitting the model","8b4e1a1f":"Providing the input size to the model -","b0d94e90":"Converting the CSV file into a pandas dataframe -","5e61e88a":"Converting the dataframe into a csv file without the index column -","7b942656":"Since sample_submission.csv is of the format in which our submission is supposed to be made, I'm first importing it and converting it into a pandas dataframe -","2fb35661":"### Identifying the digit","84ea6d4c":"Replacing the 'Label' column in the dataframe with the values we got -","772a5661":"* Preliminary steps\n    * Importing the necessary libraries\n    * Converting the CSV file into a pandas dataframe\n* Defining the features and prediction target\n* Creating the model\n* Fitting the model\n* Dealing with the test data\n* Identifying the digit\n* Ending Note","efa66c39":"### Creating the model","0a5966c6":"Converting the CSV file holding the test data into a pandas dataframe -","cbc1388b":"Through this project, I learnt about a few more activation functions like softmax. I really enjoyed it, and look forward to learning more in the future. This being only my second ml model, I really appreciate feedback to help me improve both the accuracy and efficiency of my model :)","fe6e56da":"# Contents","efd36267":"A final look at the dataframe with our predictions -","ee5cf9fc":"## Ending Note","ef33ec31":"A look at the test data - ","1c7383db":"### Dealing with the test data","60299512":"# Introduction","52782a42":"Defining the features and prediction target, converting the dataframe into a numpy array and bringing all the features to a range between 0 and 1 by dividing all the values of a feature by its biggest value (255) - "}}