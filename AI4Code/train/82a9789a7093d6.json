{"cell_type":{"09d8b707":"code","2b1afbb1":"code","79212473":"code","de0f8222":"code","883bc59f":"code","003ca771":"code","6fdd7859":"code","ebcddc79":"code","691df3cf":"markdown","df7d415b":"markdown","b1189cb3":"markdown","2d2b8f03":"markdown","07aafa65":"markdown","8ed506f0":"markdown","0dbfd66a":"markdown","7a126ce9":"markdown","f30abafc":"markdown","b88a95d8":"markdown","85af8f8a":"markdown","7fd3d5f8":"markdown"},"source":{"09d8b707":"import pandas as pd\nfrom learntools.advanced_pandas.grouping_and_sorting import *\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option(\"display.max_rows\", 5)","2b1afbb1":"check_q1(pd.DataFrame())","79212473":"# Your code here\ncommon_wine_reviewers = reviews.groupby('taster_twitter_handle').taster_twitter_handle.count()\nprint(common_wine_reviewers)","de0f8222":"# Your code here\nbest_wine = reviews.groupby('price').price.min()\nprint(best_wine)\n","883bc59f":"# Your code here\nwine_price_extremes = reviews.groupby(['variety']).price.agg([min, max])\nprint(wine_price_extremes)\n","003ca771":"# Your code here\nreviewer_mean_ratings = reviews.groupby('taster_name').points.mean()\nprint(reviewer_mean_ratings)\n","6fdd7859":"# Your code here\nwine_price_range = reviews.groupby(['variety']).price.agg([min, max])\nprint(wine_price_range)","ebcddc79":"# Your code here\ncountry_variety_pairs = reviews.groupby(['country', 'variety']).description.agg([len])\ncountry_variety_pairs.sort_index()\n","691df3cf":"If you get stuck, **use the `answer_qN` function to see the code with the correct answer.**\n\nFor the first set of questions, running the `check_qN` on the correct answer returns `True`.\nFor the second set of questions, using this function to check a correct answer will present an informative graph!","df7d415b":"**Exercise 5**: What are the most expensive wine varieties? Create a `DataFrame` whose index is wine varieties and whose values are columns with the `min` and the `max` price of wines of this variety. Sort in descending order based on `min` first, `max` second.","b1189cb3":"# Introduction\nMaps allow us to transform data in a `DataFrame` or `Series` one value at a time for an entire column. However, often we want to group our data, and then do something specific to the group the data is in. We do this with the `groupby` operation.\n\nIn these exercises we'll apply groupwise analysis to our dataset.\n\n# Relevant Resources\n- [**Grouping Reference and Examples**](https:\/\/www.kaggle.com\/residentmario\/grouping-and-sorting-reference).  \n- [Pandas cheat sheet](https:\/\/github.com\/pandas-dev\/pandas\/blob\/master\/doc\/cheatsheet\/Pandas_Cheat_Sheet.pdf)","2d2b8f03":"The rest of the exercises are visual.\n\n**Exercise 4**: Are there significant differences in the average scores assigned by the various reviewers? Create a `Series` whose index is reviewers and whose values is the average review score given out by that reviewer. Hint: you will need the `taster_name` and `points` columns.","07aafa65":"**Exercise 1**: Who are the most common wine reviewers in the dataset? Create a `Series` whose index is the `taster_twitter_handle` category from the dataset, and whose values count how many reviews each person wrote.","8ed506f0":"**Exercise 6**: What combination of countries and varieties are most common? Create a `Series` whose index is a `MultiIndex`of `{country, variety}` pairs. For example, a pinot noir produced in the US should map to `{\"US\", \"Pinot Noir\"}`. Sort the values in the `Series` in descending order based on wine count.\n\nHint: first run `reviews['n'] = 0`. Then `groupby` the dataset and run something on the column `n`. You won't need `reset_index`.","0dbfd66a":"**Exercise 3**: What are the minimum and maximum prices for each `variety` of wine? Create a `DataFrame` whose index is the `variety` category from the dataset and whose values are the `min` and `max` values thereof.","7a126ce9":"# Checking Your Answers\n\n**Check your answers in each exercise using the  `check_qN` function** (replacing `N` with the number of the exercise). For example here's how you would check an incorrect answer to exercise 1:","f30abafc":"# Keep Going\n\nMove on to [**Data types and missing data workbook**](https:\/\/www.kaggle.com\/kernels\/fork\/598826).\n\n___\nThis is part of the [*Learn Pandas*](https:\/\/www.kaggle.com\/learn\/pandas) series.","b88a95d8":"**Exercise 2**: What is the best wine I can buy for a given amount of money? Create a `Series` whose index is wine prices and whose values is the maximum number of points a wine costing that much was given in a review. Sort the valeus by price, ascending (so that `4.0` dollars is at the top and `3300.0` dollars is at the bottom).","85af8f8a":"# Set Up\nRun the code cell below to load the data before running the exercises.","7fd3d5f8":"# Exercises"}}