{"cell_type":{"2e345346":"code","525d63eb":"code","ae21a07f":"code","51856178":"code","cc4065ee":"code","76c203df":"code","c2a100ca":"code","b872e0c3":"code","5349124e":"code","ea3d8d35":"code","df6b6331":"code","130a8339":"code","ddc15d29":"code","e68f518f":"code","41a7d405":"code","c179aa15":"code","d7c7a2f8":"code","a713abe4":"code","ec745118":"markdown"},"source":{"2e345346":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\nfrom sklearn.datasets import load_breast_cancer\nfrom sklearn.metrics import confusion_matrix, plot_confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split, cross_val_score","525d63eb":"bc = load_breast_cancer()\nbc.feature_names","ae21a07f":"bc.target_names","51856178":"y = pd.get_dummies(pd.Categorical.from_codes(bc.target, bc.target_names), drop_first=True)\ny['benign'].unique()","cc4065ee":"X = pd.DataFrame(bc.data, columns=bc.feature_names)\nX = X[['mean area', 'mean compactness']]\n# y = pd.Categorical.from_codes(bc.target, bc.target_names)\ny = pd.get_dummies(y, drop_first=True)","76c203df":"X.head()","c2a100ca":"y.head()","b872e0c3":"Xtreino, Xteste, ytreino, yteste = train_test_split(X, y, random_state=1)","5349124e":"knn = KNeighborsClassifier(n_neighbors=10, metric='euclidean')\nknn.fit(Xtreino, ytreino)","ea3d8d35":"sns.scatterplot(x='mean area',\n               y='mean compactness',\n               hue='benign',\n               data=Xteste.join(yteste, how='outer'))","df6b6331":"previsao = knn.predict(Xteste)\nprevisao","130a8339":"plt.scatter(Xteste['mean area'],\n           Xteste['mean compactness'],\n           c=previsao,\n           cmap='coolwarm',\n           alpha=0.7)","ddc15d29":"plot_confusion_matrix(knn, Xteste, yteste)\nplt.title('Matriz de Confus\u00e3o')\nplt.show()","e68f518f":"confusion_matrix(yteste, previsao)","41a7d405":"sns.heatmap(confusion_matrix(yteste, previsao), \n            annot=True, cmap='coolwarm')","c179aa15":"print(f'Precis\u00e3o do modelo: {accuracy_score(yteste, previsao):0.2f}%')","d7c7a2f8":"# verificando se h\u00e1 overfitting e underfitting\nprint(f'Score do treino: {knn.score(Xtreino, ytreino):0.2f}%')\nprint(f'Score do teste: {knn.score(Xteste, yteste):0.2f}%')","a713abe4":"scores = cross_val_score(knn, Xtreino, np.array(ytreino).ravel(), scoring='accuracy')\nprint(f'Cross-validation:{scores.mean():0.2f}')","ec745118":"# **KNN** \n\u00c9 usado em situa\u00e7\u00f5es quando n\u00e3o h\u00e1 um n\u00famero f\u00edxo de par\u00e2metros, como padr\u00e3o de reconhecimento e data mining"}}