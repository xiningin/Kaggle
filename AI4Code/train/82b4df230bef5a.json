{"cell_type":{"ca62b1c3":"code","c0a1c332":"code","328af905":"code","441e5b44":"code","474d67f9":"code","eabe4ec3":"code","ec9fd042":"code","a1ca7ac4":"code","5db777f9":"code","2e1fd172":"code","7624443a":"code","5db26402":"code","39aa0118":"code","3fc2e026":"code","4556565c":"markdown","9a694dff":"markdown","0a6a0e91":"markdown","000404cd":"markdown","5a307ed6":"markdown","a8bb0482":"markdown","0fa08ffd":"markdown"},"source":{"ca62b1c3":"import datetime\nimport calendar\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.gridspec as gridspec\nplt.style.use('classic')\nsns.set()","c0a1c332":"df = pd.read_csv('..\/input\/the-bread-basket\/bread basket.csv')","328af905":"print(df.shape)\ndf.head()","441e5b44":"df.isnull().sum().to_frame('missing_values')","474d67f9":"print('A Total of {} different types of Item is sold in The Bread Basket'.format(len(df['Item'].unique())))","eabe4ec3":"print('From the provided data, A Total of {} Transaction is made by The Bread Basket'.format(df['Transaction'].nunique()))","ec9fd042":"day = []\n\nfor dt in df.date_time:\n    calc_day = datetime.datetime.strptime(dt.split(' ')[0], '%d-%m-%Y').weekday()\n    day.append(calendar.day_name[calc_day])\n    \ndf['date'] = pd.to_datetime(df['date_time']).dt.date\ndf['time'] = pd.to_datetime(df['date_time']).dt.time\ndf['day'] = day\ndf['month'] = pd.to_datetime(df['date_time']).dt.month\ndf['hour'] = pd.to_datetime(df['date_time']).dt.hour\ndf['month'] = df['month'].replace((1,2,3,4,5,6,7,8,9,10,11,12),  ('January','February','March','April','May','June','July','August',\n                                          'September','October','November','December'))\n\n\ndf.drop(['date_time'], axis=1, inplace=True)\n\ndf.rename(columns={'weekday_weekend': 'day_type'}, inplace=True)\n\ndf.head()\n\n","a1ca7ac4":"plt.figure(figsize=(14, 5))\nsns.barplot(x=df.Item.value_counts().head(25).index, y=df.Item.value_counts().head(25))\nplt.xticks(rotation=45)\nplt.ylabel('Counts')\nplt.title('Top 25 Items Sold in The Bread Basket', fontsize=15, color='pink')","5db777f9":"monthly_trans = df.groupby('month')['Transaction'].count().reset_index()\nday_based_trans = df.groupby('day')['Transaction'].count().reset_index()\nhourly_transaction = df.groupby('hour')['Transaction'].count().reset_index()\n\nmonthly_trans['order'] = [4, 8, 12, 2, 1, 7, 6, 3, 5, 11, 10, 9]\nmonthly_trans.sort_values('order', inplace=True)\n\nday_based_trans['order'] = [5, 1, 6, 7, 4, 2, 3]\nday_based_trans.sort_values('order', inplace=True)\n\nfig = plt.figure(figsize=(12, 17), constrained_layout=True)\nspec = gridspec.GridSpec(nrows=3, ncols=1, figure=fig)\nax1 = fig.add_subplot(spec[0, 0])\nax2 = fig.add_subplot(spec[1, 0])\nax3 = fig.add_subplot(spec[2, 0])\n\nsns.barplot(x='month', y='Transaction', data=monthly_trans, ax=ax1)\nax1.set_ylabel('No. of Transactions')\nax1.set_title('Transaction made in each month', fontsize=20, color='orange')\n\nsns.barplot(x='day', y='Transaction', data=day_based_trans, ax=ax2)\nax2.set_ylabel('No. of Transactions on each day')\nax2.set_title('Transactions made in weekdays', fontsize=20, color='purple')\n\nsns.barplot(x='Transaction', y='hour', data=hourly_transaction,orient='h', ax=ax3)\nax3.set_xlabel('No. of Transaction made each Hour')\nax3.set_title('Transaction made each hour', fontsize=20, color='green')\nplt.show()","2e1fd172":"fig = plt.figure(figsize=(8, 5), constrained_layout=True)\nspec = gridspec.GridSpec(ncols=2, nrows=2,figure=fig)\nax1 = fig.add_subplot(spec[0, 0])\nax2 = fig.add_subplot(spec[0, 1])\n\nsns.countplot(df['day_type'], ax=ax1)\nax1.set_title('weekend vs weekdays sales', color='steelblue')\n\nsns.countplot(df['period_day'], ax=ax2)\nax2.set_title('sales in different period of the day', color='steelblue')\nax2.set_xlabel('period of the day')","7624443a":"df.sample(3)","5db26402":"daily_trans = df.groupby('date')['Transaction'].count()\ndaily_trans.plot(kind='line', figsize=(14, 4), color='steelblue')\nplt.title(' Daily Transaction', color='red', fontsize=20)","39aa0118":"fig = plt.figure(figsize=(14, 8), constrained_layout=True)\nspec = gridspec.GridSpec(nrows=2, ncols=2, figure=fig)\nax1, ax2 = fig.add_subplot(spec[0, 0]), fig.add_subplot(spec[0, 1])\nax3, ax4 = fig.add_subplot(spec[1, 0]), fig.add_subplot(spec[1, 1])\nax = [ax1, ax2, ax3, ax4]\nperiod = df.period_day.unique().tolist()\n\nfor i, j in zip(period, ax):\n    da = df[df.period_day==str(i)]\n    sns.barplot(y=da.Item.value_counts().head(15).index, x=da.Item.value_counts().head(15), orient='h', ax=j)\n    j.set_title('Top 15 Items People like to order in {}'.format(str(i)), color='#f7a643', fontsize=18)\n    j.set_xlabel('Count')\nax4.set_title('Items which people like to order in night', color='#f7a643', fontsize=18)\nplt.show()","3fc2e026":"spring = df[(df.month=='March') | (df.month=='April') | (df.month=='May')]\nsummer = df[(df.month=='June') | (df.month=='July') | (df.month=='August')]\nautumn = df[(df.month=='September') | (df.month=='October') | (df.month=='November')]\nwinter = df[(df.month=='December') | (df.month=='January') | (df.month=='February')]\n\nfig = plt.figure(figsize=(14, 8), constrained_layout=True)\nspec = gridspec.GridSpec(nrows=2, ncols=2, figure=fig)\nax3, ax4 = fig.add_subplot(spec[1, 0]), fig.add_subplot(spec[1, 1])\nax1, ax2 = fig.add_subplot(spec[0, 0], sharex=ax3), fig.add_subplot(spec[0, 1], sharex=ax4)\n\nax = [ax1, ax2, ax3, ax4]\nseason = [spring, summer, autumn, winter]\ns = ['spring', 'summer', 'autumn', 'winter']\nfor i, j , k in zip(season, ax, s):\n    cond = (i.Item!='Coffee')&(i.Item!='Bread')&(i.Item!='Tea')\n    i = i[cond]\n    sns.barplot(y=i.Item.value_counts().head(15).index,\n                x=i.Item.value_counts().head(15),orient='h', ax=j)\n    j.set_title('Items people like during {} season'.format(k), color='#f7a643', fontsize=18)\n\nax1.set_xlabel('')\nax2.set_xlabel('')\n\nplt.show()","4556565c":"## Loading The Data","9a694dff":"## EDA","0a6a0e91":"## As Coffee, Bread and Tea are running Peak in all conditions let's see what people like other than this in different Seasons","000404cd":"## Feature Engg","5a307ed6":"![image.png](attachment:image.png)","a8bb0482":"# The Bread Basket EDA","0fa08ffd":"## Importing The Libraries"}}