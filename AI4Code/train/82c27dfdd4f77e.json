{"cell_type":{"9d20228c":"code","c11e5f22":"code","a220fdc1":"code","a7004912":"code","15640d45":"code","e9c160ac":"code","74e0e50c":"code","791ef3ac":"code","d80fa3f7":"code","8f43fb2c":"code","4fb8df0d":"code","7c96a2ef":"code","70372dbd":"code","03ff859d":"code","2b954922":"code","88481755":"code","6845955a":"code","07f117cc":"code","e2564ec9":"code","d712026c":"code","bcd90b69":"code","9d36d0ac":"code","3bb1ed9c":"code","9170bf05":"code","2e1dbcf9":"code","1d59ccba":"code","6fc1cee3":"code","625299b7":"code","332563c5":"code","546ead16":"code","def88371":"code","c4e1d03d":"code","18f559ae":"code","4a657b43":"code","da8f0a21":"code","759a79a5":"code","4abc1914":"markdown","23a5e665":"markdown","abd16611":"markdown","ca70eb56":"markdown","126f24c8":"markdown","4814a302":"markdown","133a86ea":"markdown","d0e9e317":"markdown","ca908038":"markdown","392318bc":"markdown","7548ce2a":"markdown","d200157d":"markdown","09f4e0d6":"markdown","0ef81929":"markdown","ea304ef6":"markdown","09c1d1c9":"markdown","4edb02ab":"markdown","4f0d87d4":"markdown","e914fe9f":"markdown","73eb6e1b":"markdown","e3dfe156":"markdown","3bc05506":"markdown","1c39c8cc":"markdown","5e5c5c37":"markdown","8fb129b4":"markdown","41311ec4":"markdown","63a721b5":"markdown","b19bab21":"markdown","ba3f639d":"markdown","e9ea2f1e":"markdown","74981a37":"markdown"},"source":{"9d20228c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c11e5f22":"df = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndf.head()","a220fdc1":"df.info()","a7004912":"df.describe()","15640d45":"#show columns\nfor i,col in enumerate(df.columns):\n    print(i+1,\". column is \",col)","e9c160ac":"df[\"race\/ethnicity\"].nunique()","74e0e50c":"df[\"race\/ethnicity\"].value_counts()","791ef3ac":"sns.countplot(y=\"race\/ethnicity\",data=df,palette=\"magma\")","d80fa3f7":"plt.figure(figsize=(10,4))\nsns.barplot(x=df['race\/ethnicity'].value_counts().index,y=df['race\/ethnicity'].\n               value_counts().values,palette=\"Blues_d\",hue=['group A','group B','group C','group D','group E'])","8f43fb2c":"math=df[\"math score\"]\nreading=df[\"reading score\"]\nwriting=df[\"writing score\"]\nscore_list=[math,reading,writing]","4fb8df0d":"for i in score_list:\n    print(np.mean(i))","7c96a2ef":"f, axes = plt.subplots(1, 3, figsize=(18,5), sharex=True)\nfor i in range(len(score_list)):\n    sns.distplot(score_list[i],hist=False,color=\"magenta\",ax=axes[i])\n\nplt.setp(axes, yticks=[])\nplt.tight_layout()\nplt.show()","70372dbd":"sns.kdeplot(df['math score'],bw=.15)\nplt.xlabel('Math Score')\nplt.ylabel('Frequency')\nplt.title('Math Score Show Kde Plot')\nplt.show()","03ff859d":"sns.violinplot(df['math score'])","2b954922":"for i in range(len(score_list)):\n    sns.distplot(score_list[i],hist=False,kde_kws = {'shade':True, 'linewidth': 3.5},label=i)\nplt.ylabel(\"frequency\")\nplt.xlabel(\"Scores\")\n    ","88481755":"group=df.groupby([\"gender\",\"race\/ethnicity\"])[\"math score\",\"reading score\",\"writing score\"].mean()\ngroup","6845955a":"plt.figure(figsize=(10,4))\nsns.boxplot(x=\"race\/ethnicity\",y=\"math score\",hue=\"gender\",data=df,color=\"cyan\")\nplt.title(\"Male vs Female math score mean Groupwise\")","07f117cc":"plt.figure(figsize=(10,4))\nsns.boxplot(x=\"race\/ethnicity\",y=\"reading score\",hue=\"gender\",data=df,color=\"red\")\nplt.title(\"Male vs Female reading score mean Groupwise\")","e2564ec9":"plt.figure(figsize=(10,4))\nsns.boxplot(hue=\"race\/ethnicity\",y=\"math score\",x=\"gender\",data=df)\nplt.title(\"Male vs Female math score mean Groupwise\")","d712026c":"sns.violinplot(x=df['race\/ethnicity'],y=df['math score'])\nplt.show()","bcd90b69":"sns.violinplot(x=df[\"race\/ethnicity\"],y=df[\"math score\"],hue=df[\"gender\"],split=True,palette=\"Set2\")","9d36d0ac":"sns.factorplot(x=\"race\/ethnicity\", y=\"math score\", hue=\"gender\",col='lunch',data=df)","3bb1ed9c":"sns.catplot(x=\"race\/ethnicity\", y=\"math score\", hue=\"gender\",col='lunch',data=df)","9170bf05":"list1=[\"group A\",\"group B\",\"group C\",\"group D\",\"group E\"]\nlist2=[\"math score\",\"reading score\",\"writing score\"]\nf, axes = plt.subplots(1, 3, figsize=(18,5), sharex=True)\nfor j in range(len(list2)):\n    for i in list1:\n        df_=df[df[\"race\/ethnicity\"]==i]\n        sns.distplot(df_[list2[j]],hist=False,kde_kws = {'shade': False, 'linewidth': 1.5},label=i,ax=axes[j])\n\nplt.setp(axes, yticks=[])\nplt.tight_layout()\nplt.show()","2e1dbcf9":"#now gender wise distribution\nlist3=[\"male\",\"female\"]\nlist2=[\"math score\",\"reading score\",\"writing score\"]\nf, axes = plt.subplots(1, 3, figsize=(18,5), sharex=True)\nfor j in range(len(list2)):\n    for i in list3:\n        df_=df[df[\"gender\"]==i]\n        sns.distplot(df_[list2[j]],hist=False,kde_kws = {'shade': True, 'linewidth': 3},label=i,ax=axes[j])\n        \nplt.setp(axes, yticks=[])\nplt.tight_layout()\nplt.show()","1d59ccba":"#now finding relation between parental education and scores\n\ndf[\"parental level of education\"].value_counts()","6fc1cee3":"list4=[\"some college\",\"associate's degree\",\"high school\",\"some high school\",\"bachelor's degree\",\"master's degree\"]\nplt.figure(figsize=(18,5))\nfor i in list4:\n    df_p=df[df[\"parental level of education\"]==i]\n    sns.distplot(df_p[\"math score\"],hist=False,kde_kws = {'shade': True, 'linewidth': 1.5},label=i)","625299b7":"list4=[\"some college\",\"associate's degree\",\"high school\",\"some high school\",\"bachelor's degree\",\"master's degree\"]\nlist2=[\"math score\",\"reading score\",\"writing score\"]\nf, axes = plt.subplots(1, 3, figsize=(18,5), sharex=True)\nfor j in range(len(list2)):\n    for i in list4:\n        df_p=df[df[\"parental level of education\"]==i]\n        sns.distplot(df_p[list2[j]],hist=False,kde_kws = {'shade': True, 'linewidth': 1.5},label=i,ax=axes[j])\n        \nplt.setp(axes, yticks=[])\nplt.tight_layout()\nplt.show()","332563c5":"sns.pairplot(df,hue=\"gender\",palette=\"husl\")","546ead16":"sns.lmplot(x='math score',y='writing score',hue='gender',data=df,markers=['+','o'])\nplt.xlabel('Math Score')\nplt.ylabel('Writing Score')\nplt.title('Math Score vs Writing Score')\nplt.show()","def88371":"sns.kdeplot(df['reading score'],df['writing score'],cmap='Blues',shade=True,shade_lowest=False)","c4e1d03d":"sns.kdeplot(df['reading score'],df['math score'],cmap='twilight',shade=True,shade_lowest=False)","18f559ae":"plt.figure(figsize=(18,5))\nsns.stripplot(x=\"math score\",y=\"reading score\",alpha=0.5,data=df,jitter=0.2)","4a657b43":"plt.figure(figsize=(6,6))\nsns.stripplot(x=\"gender\",y=\"writing score\",alpha=0.5,data=df,jitter=0.3)","da8f0a21":"plt.figure(figsize=(10,5))\nsns.set(style=\"whitegrid\")\nsns.swarmplot(x=\"race\/ethnicity\",y=\"writing score\",data=df,palette=\"Set2\")","759a79a5":"plt.figure(figsize=(10,5))\nsns.set(style=\"whitegrid\")\nsns.swarmplot(x=\"race\/ethnicity\",y=\"math score\",data=df,palette=\"Set2\")","4abc1914":"\ud83d\ude1b","23a5e665":" Now we use groupby for grouping our data","abd16611":"Now find groupwise distribution using subplot","ca70eb56":"Boxplot:","126f24c8":"As per tradition we will do **.info()**  and **.describe()** method to know some more details about our datasets.It will help us to explore our data set in a meaningful way.","4814a302":"From this method you can find out about mean,median,standard deviation,max,min,1st quertile,2nd quertile etc other than non categorical data","133a86ea":"IN seaborn using displot one can find distribution of any data","d0e9e317":"This plot is my favourite KDE plot is most versetile plot in sns. If you go to the documentation of this plot then you can find that\n\nHere basically dark blue space emphasises that who ever scores near 80 in reading he or she also scores same marks in writing.So it is\nbasically denoting how much denser is that area.\n","ca908038":"COUNTPLOT:\nseaborn.countplot(x=None, y=None, hue=None, data=None, order=None, hue_order=None, orient=None, color=None, palette=None, saturation=0.75, dodge=True, ax=None, **kwargs)\n\nPARAMETERS:\n\n**x, y, hue:** names of variables in data or vector data, optional\nInputs for plotting long-form data. See examples for interpretation.\n\n**data:** DataFrame, array, or list of arrays, optional\nDataset for plotting. If x and y are absent, this is interpreted as wide-form. Otherwise it is expected to be long-form.\n\n**order, hue_order:** lists of strings, optional\nOrder to plot the categorical levels in, otherwise the levels are inferred from the data objects.\n\n\nI opt for a horizontal plot if you want vertical then put ***x=\"race\/ethnicity\"***","392318bc":"Hello I am RIK Banerjee I will try to do an analysis on this dataset.","7548ce2a":"From the below plot it is easier for us to find in math only boys get higher marks than girl otherwise females having higher numbers","d200157d":"USING violinplot:","09f4e0d6":"**Now we will try to find out Inter Relation between different scores**","0ef81929":"Using loop lets display those for that that we will use numpy lib and mean method\n\n1.math\n2.reading\n3.writing","ea304ef6":"This is Factorplot we can add columns to it, here we take on lunch","09c1d1c9":"Doing the same for Reading and Math score","4edb02ab":"We store unique values of parental level of education in a list and then we plot different distribution plot","4f0d87d4":"THIS IS STRIPPLOT:\n(x=None, y=None, hue=None, data=None, order=None, hue_order=None, jitter=True, dodge=False, orient=None, color=None, palette=None, size=5, edgecolor='gray', linewidth=0, ax=None, **kwargs)\n\nDraw a scatterplot where one variable is categorical.\n\nA strip plot can be drawn on its own, but it is also a good complement to a box or violin plot in cases where you want to show all observations along with some representation of the underlying distribution.\n\n**Input data can be passed in a variety of formats, including:**\n\n* Vectors of data represented as lists, numpy arrays, or pandas Series objects passed directly to the x, y, and\/or hue parameters.\n\n* A \u201clong-form\u201d DataFrame, in which case the x, y, and hue variables will determine how the data are plotted.\n\n* A \u201cwide-form\u201d DataFrame, such that each numeric column will be plotted.\n\n* An array or list of vectors.\n\nFor more visit:\n[https:\/\/seaborn.pydata.org\/generated\/seaborn.stripplot.html](http:\/\/)\n","e914fe9f":"According to gender every group having how much mean in every subject we can easily find using **groupby**","73eb6e1b":"Seaborn is a Python data visualization library based on matplotlib. It provides a high-level\ninterface for drawing attractive and informative statistical graphics. For a brief introduction to the ideas behind\nthe library, you can read the introductory notes. Visit the installation page to see how you can download the\npackage. You can browse the example gallery to see what you can do with seaborn, and then check out the tutorial\nand API reference to find out how. To see the code or report a bug, please visit the github repository. General \nsupport issues are most at home on stackoverflow, where there is a seaborn tag.\n\n**I will use both seaborn and matplotlib and compare the original stats with visualizations.\nWith this you will have the knowledge how to analyze a data set with different visualization techniques.\nIn this tutorial mostly I will discuss about how to find central tendency of any data.I will use various distribution plots to explore the field.**\n**So if you are interested in data science and awesome lib of python then jump with me, I will explain every steps with proper documentation.\nLets begin.........**","e3dfe156":"Lets visualize","3bc05506":"From .info() method you can found different col names(it is not the only method) as well as if your dataset have any null value or not","1c39c8cc":"I think you understand how a boxplot works, it basically gives us mean of a data and we can break the plot using **hue parameter**","5e5c5c37":"Here our data set is based on students performance grouped by different parameters","8fb129b4":"Now we will calculate mean of different scores obtained by all students","41311ec4":"Now using subplot","63a721b5":"Now the above statistics we will visualize through different plots","b19bab21":"Now we will try to visualize above data in  various way","ba3f639d":"This code will create pandas.core.series for different scores","e9ea2f1e":"We will explore some columns on how much unique values they have","74981a37":"Using KDE plot:\n\n(data, data2=None, shade=False, vertical=False, kernel='gau', bw='scott', gridsize=100, cut=3, clip=None, legend=True, cumulative=False, shade_lowest=True, cbar=False, cbar_ax=None, cbar_kws=None, ax=None, **kwargs)\nFit and plot a univariate or bivariate kernel density estimate.\n\nFOR MORE INFORMATION VISIT:\n\nhttps:\/\/seaborn.pydata.org\/generated\/seaborn.kdeplot.html"}}