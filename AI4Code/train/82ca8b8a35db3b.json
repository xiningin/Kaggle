{"cell_type":{"fc7fe65d":"code","ab675e82":"code","d0500994":"code","3c60cdbd":"code","bc5fc2c1":"code","8bec7434":"code","309c2bdd":"code","e94e6f5a":"code","217e83f7":"code","28fa46e9":"code","5de6efed":"code","767e8ce9":"code","94fba52c":"code","d46c0056":"code","df24e8d7":"code","7365906d":"code","f1f2e123":"code","a76da008":"markdown","de280215":"markdown","698d9f75":"markdown","6afbb80f":"markdown","dcbf2a20":"markdown","2c4ce39c":"markdown","2712a934":"markdown","ed4d87d9":"markdown","efc72b3d":"markdown","b48f6b8a":"markdown"},"source":{"fc7fe65d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ab675e82":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport folium","d0500994":"df = pd.read_csv(\"..\/input\/asian-restaurants\/asia.csv\")","3c60cdbd":"df.head()","bc5fc2c1":"df.info()","8bec7434":"df.isnull().sum()","309c2bdd":"df['price'].value_counts().plot(kind = 'barh', color = ['LightCoral','LightSeaGreen','MediumPurple'])\nplt.xlabel('Count')\nplt.ylabel(\"Price\")","e94e6f5a":"dfp = df.sort_values(by = ['price'],ascending = False).reset_index().head(20)\nplt.figure(figsize = [10,7])\nsns.barplot(data = dfp, y = 'restaurant', x = 'price', palette = 'gist_earth')","217e83f7":"dfgre = df.sort_values(by = ['gReviews'],ascending = False).reset_index().head(20)\nfig = px.bar(dfgre, x = 'restaurant', y ='gReviews', color = 'gReviews', \n             color_continuous_scale = 'rdbu',\n             labels = {'gReviews':'Number of Google reviews',\"restaurant\":\"Restaurant\"}\n            )\n\nfig.update_xaxes(tickangle=45, tickfont=dict(color='DarkBlue'))\n\nfig.update_layout(title = 'Top 20 restaurants with higher Google Reviews', \n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'Darkblue'))\nfig.show()","28fa46e9":"dfgra = df.sort_values(by = ['gRating'],ascending = False).reset_index().head(20)\nfig = px.scatter(dfgra, color = 'restaurant', y = 'gRating',  x ='gReviews',\n                 color_discrete_sequence = px.colors.sequential.Rainbow,\n                 labels = {'gRating':'Overall Google rating','gReviews':'Number of Google reviews','restaurant':'Restaurant'}\n)\n\nfig.update_traces(marker = dict(size = 25,\n                                line = dict(color = 'rgb(0, 0, 0)',width = 1.5)),\n                  mode = 'markers')\nfig.update_layout(title = 'Top 20 restaurants with higher Google Rating and Reviews',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'Darkblue')\n                 \n                 )\nfig.show()","5de6efed":"dfyre = df.sort_values(by = ['yReviews'],ascending = False).reset_index().head(20)\n\nfig = px.bar(dfyre, x = 'restaurant', y ='yReviews', color = 'yReviews',\n             color_continuous_scale = 'ylgnbu',\n             labels = {'yReviews':'Number of Yelp reviews','restaurant':'Restaurant'}\n            )\n\nfig.update_xaxes(tickangle=45, tickfont=dict(color='DarkBlue'))\n\nfig.update_layout(title = 'Top 20 restaurants with higher Yelp Reviews',\n                  title_x = 0.5,\n                  title_font = dict(size = 16 , color = 'Darkblue')\n                 \n                 )\n\nfig.show()","767e8ce9":"dfgra = df.sort_values(by = ['yRating'],ascending = False).reset_index().head(20)\nfig = px.scatter(dfgra, color = 'restaurant', y = 'yRating',  x ='yReviews',\n                 color_discrete_sequence = px.colors.sequential.Rainbow,\n                 labels = {'yRating':' Overall Yelp rating','yReviews':'Number of Yelp reviews','restaurant':'Restaurant'}\n)\n\nfig.update_traces(marker = dict(size = 25,\n                                line = dict(color = 'rgb(0, 0, 0)',width = 1.5)),\n                  mode = 'markers')\nfig.update_layout(title = 'Top 20 restaurants with higher Overall Yelp Rating and Reviews',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'Darkblue')\n                 \n                 )\nfig.show()","94fba52c":"dfyre = df.sort_values(by = ['ddReviews'],ascending = False).reset_index().head(20)\n\nfig = px.bar(dfyre, x = 'restaurant', y ='ddReviews', color = 'ddReviews',\n             color_continuous_scale = 'ylgn',\n             labels = {'ddReviews':'Number of DoorDash reviews','restaurant':'Restaurant'}\n            )\n\nfig.update_xaxes(tickangle=45, tickfont=dict(color='Darkgreen'))\n\nfig.update_layout(title = 'Top 20 restaurants with higher DoorDash Reviews',\n                  title_x = 0.5,\n                  title_font = dict(size = 16 , color = 'Darkgreen')\n                 \n                 )\n\nfig.show()","d46c0056":"dfgra = df.sort_values(by = ['ddRating'],ascending = False).reset_index().head(20)\nfig = px.scatter(dfgra, color = 'restaurant', y = 'ddRating',  x ='ddReviews',\n                 color_discrete_sequence = px.colors.sequential.Rainbow,\n                 labels = {'ddRating':' Overall DoorDash rating','ddReviews':'Number of DoorDash reviews','restaurant':'Restaurant'}\n)\n\nfig.update_traces(marker = dict(size = 25,\n                                line = dict(color = 'rgb(0, 0, 0)',width = 1.5)),\n                  mode = 'markers')\nfig.update_layout(title = 'Top 20 restaurants with higher Overall DoorDash Rating and Reviews',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'Darkblue')\n                 \n                 )\nfig.show()","df24e8d7":"df['town'].value_counts().sort_values(ascending = False).head().plot(kind = 'barh', color = ['DarkSalmon','PaleVioletRed','DarkKhaki','SlateBlue','LightSeaGreen'])\nplt.title(\"The distribution of restaurants(Town)\", fontsize = 12, color = 'Darkblue')","7365906d":"dfhp = df[(df['price'] ==3)|(df['price'] ==2)]\n\ndfhpt = dfhp['town'].value_counts().sort_values(ascending = False).reset_index().head()\n\ndfhpt = dfhpt.rename(columns = {'index':'name'})\ndfhpt = dfhpt.rename(columns = {'town':'count'})\n\nfig = px.pie(dfhpt, values = 'count',names = 'name',\n             color_discrete_sequence = px.colors.sequential.Rainbow)\n\nfig.update_traces(textposition='inside',textinfo='percent+label')\n\nfig.update_layout(title = 'Top 5 towns with higher prices restaurants',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'Darkblue')\n                 \n                 )\nfig.show()","f1f2e123":"halatitude = 42.9296909\nhalongitude = -71.4374064\n\nasiares = folium.map.FeatureGroup()\n\nfor lat, lng, in zip(df.latitude, df.longitude):\n    asiares.add_child(\n        folium.CircleMarker(\n            [lat, lng],\n            radius=7, \n            color='Gainsboro',\n            fill=True,\n            fill_color='Teal',\n            fill_opacity=0.7\n        )\n    )\n\nres_map = folium.Map(location=[halatitude, halongitude], zoom_start=10)\nres_map.add_child(asiares)","a76da008":"**<font color = Darkred size = 4 >Show first five row of data<\/font>**","de280215":"**<font color = Darkred size = 5 >Thank you for reading!<\/font>**","698d9f75":"**Please consider upvoting & checking out more of my work if you found this interesting & valuable! Thanks so much!**","6afbb80f":"**<font color = Darkred size = 4 >Information about data<\/font>**","dcbf2a20":"**<font color = Darkred size = 4 >Load data<\/font>**","2c4ce39c":"**<font color = Darkred size = 4 >Check the null values<\/font>**","2712a934":"**<font color = Darkred size = 4 >Data Analysis<\/font>**","ed4d87d9":"**<font color = Darkred size = 4 >Import related libraries<\/font>**","efc72b3d":"[Link to My Kaggle](http:\/\/www.kaggle.com\/carriech)","b48f6b8a":"**<font color = Darkred size = 4 >Map<\/font>**"}}