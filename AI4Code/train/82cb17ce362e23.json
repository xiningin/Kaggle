{"cell_type":{"41283148":"code","c1bdcc1e":"code","efc5a323":"code","68f2c451":"code","cd58929a":"code","5d3352ec":"code","268e3c3a":"code","89238635":"code","b2581aa0":"code","f832fd8b":"code","db4ddf56":"code","558c0283":"code","41b63260":"code","1a7aedb2":"code","3324dd79":"code","8a78960d":"code","12e792ae":"code","dfd57fda":"code","0fd9f24e":"code","862e1339":"code","f1039b04":"code","4bdf5673":"code","63846227":"code","e89cc4ce":"code","b444d870":"code","4fa9ee9c":"code","e11e5b91":"code","d458be4a":"code","b053f206":"code","d4ad7c05":"code","20af3ae5":"code","e3a96e94":"code","7da7ca77":"code","1ac07b70":"code","5b85ffea":"code","21ec0199":"code","a646fd2e":"code","1c8903a7":"code","7e424a5a":"code","67a60517":"code","7aac0e84":"code","c2e56ed5":"code","0899e057":"code","8736baf4":"code","30079995":"code","420e2a21":"code","61719020":"code","046fc3ad":"code","f58cc752":"code","a393bcb2":"markdown","cbf228c9":"markdown","8c7058d8":"markdown","6bcd1926":"markdown","a579355d":"markdown","41aaefb0":"markdown","4f64f8fe":"markdown","53696e4d":"markdown","1dd2f315":"markdown","ddc6e006":"markdown","b5ad3bee":"markdown","13ebde28":"markdown","47202990":"markdown","a2b2b9a4":"markdown","e4175107":"markdown","31e091bf":"markdown","65821368":"markdown","7fb774f8":"markdown","a5e14a8b":"markdown","5e72c5fa":"markdown","adccc85a":"markdown","49d92042":"markdown","e7f2dd35":"markdown","48f1216b":"markdown","fa093d0d":"markdown","5988833c":"markdown","9e54180f":"markdown","5b863906":"markdown","d5bc0f9f":"markdown","39463dc4":"markdown","663ad65f":"markdown","e73cfcb3":"markdown","23f53436":"markdown","857c6972":"markdown","3494aad8":"markdown","c0faaf40":"markdown","d4c0e35f":"markdown","60a35518":"markdown","58e9f728":"markdown","994c8ffc":"markdown","c00a2bff":"markdown","0fb36a0c":"markdown","6dd133e6":"markdown","3f675832":"markdown","ea366a28":"markdown","acdd244d":"markdown","bfd2a896":"markdown","cb00afa3":"markdown","346935ba":"markdown","2d705fc4":"markdown","22ea7107":"markdown","93439422":"markdown"},"source":{"41283148":"import numpy as np \nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report","c1bdcc1e":"df=pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')\ndf","efc5a323":"df.info()","68f2c451":"df.describe()","cd58929a":"fig, axes = plt.subplots(nrows=2, ncols=2, figsize=(12, 10))\ndf.plot(kind=\"hist\", y=\"age\", bins=70, color=\"b\", ax=axes[0][0])\ndf.plot(kind=\"hist\", y=\"bmi\", bins=100, color=\"r\", ax=axes[0][1])\ndf.plot(kind=\"hist\", y=\"heart_disease\", bins=6, color=\"g\", ax=axes[1][0])\ndf.plot(kind=\"hist\", y=\"avg_glucose_level\", bins=100, color=\"orange\", ax=axes[1][1])\nplt.show()","5d3352ec":"print (\"Rows     : \" , df.shape[0])\nprint (\"Columns  : \" , df.shape[1])\nprint (\"\\nFeatures : \\n\" , df.columns.tolist())\nprint (\"\\nMissing values :  \", df.isnull().sum().values.sum())\nprint (\"\\nUnique values :  \\n\",df.nunique())","268e3c3a":"\nlabels =df['stroke'].value_counts(sort = True).index\nsizes = df['stroke'].value_counts(sort = True)\n\ncolors = [\"lightblue\",\"red\"]\nexplode = (0.05,0) \n \nplt.figure(figsize=(7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=90,)\n\nplt.title('Customer Churn Breakdown')\nplt.show()","89238635":"plt.figure(figsize=(10,5))\nsns.countplot(data=df,x='gender');","b2581aa0":"fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(15, 5))\ndf.plot(kind='scatter', x='age', y='avg_glucose_level', alpha=0.5, color='green', ax=axes[0], title=\"Age vs. avg_glucose_level\")\ndf.plot(kind='scatter', x='bmi', y='avg_glucose_level', alpha=0.5, color='red', ax=axes[1], title=\"bmi vs. avg_glucose_level\")\nplt.show()","f832fd8b":"sns.set(style=\"ticks\");\npal = [\"#FA5858\", \"#58D3F7\"]\n\nsns.pairplot(df, hue=\"stroke\", palette=pal);\nplt.title(\"stroke\");","db4ddf56":"plt.figure(figsize=(15,7))\nsns.heatmap(df.corr(),annot=True);","558c0283":"plt.figure(figsize=(10,7))\nsns.boxplot(data=df,x=df[\"bmi\"],color='green');","41b63260":"bmi_outliers=df.loc[df['bmi']>50]\nbmi_outliers['bmi'].shape","1a7aedb2":"df['bmi']>50","3324dd79":"bmi_outliers\n","8a78960d":"bmi_outliers['stroke']","12e792ae":"# mean with outliers \nprint(bmi_outliers['stroke'].value_counts())","dfd57fda":"df[\"bmi\"] = df[\"bmi\"].apply(lambda x: 50 if x>50 else x)\ndf[\"bmi\"] = df[\"bmi\"].fillna(28.4)","0fd9f24e":"df[\"bmi\"]","862e1339":"print (\"\\nMissing values :  \", df.isnull().sum().values.sum())","f1039b04":"cat_df = df[['gender','Residence_type','smoking_status','stroke']]\nsummary = pd.concat([pd.crosstab(cat_df[x], cat_df.stroke) for x in cat_df.columns[:-1]], keys=cat_df.columns[:-1])\nsummary","4bdf5673":"cat_df","63846227":"plt.figure(figsize=(10,5))\nstrok=df.loc[df['stroke']==1]\nsns.countplot(data=strok,x='ever_married',palette='inferno');","e89cc4ce":"plt.figure(figsize=(10,5))\nsns.countplot(data=strok,x='work_type',palette='cool');","b444d870":"plt.figure(figsize=(10,5))\nsns.countplot(data=strok,x='smoking_status',palette='autumn');","4fa9ee9c":"plt.figure(figsize=(10,5))\nsns.countplot(data=strok,x='Residence_type',palette='Greens');","e11e5b91":"plt.figure(figsize=(10,5))\nsns.countplot(data=strok,x='heart_disease',palette='Reds');","d458be4a":"plt.figure(figsize=(10,5))\nsns.countplot(data=strok,x='hypertension',palette='Pastel2');","b053f206":"df[\"Residence_type\"] = df[\"Residence_type\"].apply(lambda x: 1 if x==\"Urban\" else 0)\ndf[\"ever_married\"] = df[\"ever_married\"].apply(lambda x: 1 if x==\"Yes\" else 0)\ndf[\"gender\"] = df[\"gender\"].apply(lambda x: 1 if x==\"Male\" else 0)\n\n \ndf = pd.get_dummies(data=df, columns=['smoking_status'])\ndf = pd.get_dummies(data=df, columns=['work_type'])\n","d4ad7c05":"df","20af3ae5":"std=StandardScaler()\ncolumns = ['avg_glucose_level','bmi','age']\nscaled = std.fit_transform(df[['avg_glucose_level','bmi','age']])\nscaled = pd.DataFrame(scaled,columns=columns)\ndf=df.drop(columns=columns,axis=1)","e3a96e94":"df=df.merge(scaled, left_index=True, right_index=True, how = \"left\")\ndf","7da7ca77":"df=df.drop(columns='id',axis=1)","1ac07b70":"df[df.isnull().any(axis=1)]","5b85ffea":"X = df.drop(['stroke'], axis=1).values \ny = df['stroke'].values","21ec0199":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","a646fd2e":"#create adaboost classification obj\nab_clf = AdaBoostClassifier(base_estimator=DecisionTreeClassifier(), n_estimators=100, \n                            learning_rate=0.5, random_state=100)\n\n#training via adaboost classficiation model\nab_clf.fit(X_train, y_train)\nprint(\"training....\\n\")\n\n#make prediction using the test set\nab_pred_stroke= ab_clf.predict(X_train)\nprint('prediction: \\n', ab_pred_stroke)\n\nprint('\\nparms: \\n', ab_clf.get_params)\n\n#score\nab_clf_score = ab_clf.score(X_test, y_test)\nprint(\"\\nmean accuracy: %.2f\" % ab_clf.score(X_test, y_test))\n\n\n","1c8903a7":"\nxgboost = GradientBoostingClassifier(random_state=0)\nxgboost.fit(X_train, y_train)\n#== \n#Score \n#== \nxgboost_score = xgboost.score(X_train, y_train)\nxgboost_test = xgboost.score(X_test, y_test)\n#== \n#testing model \n#== \ny_pred = xgboost.predict(X_test)\n#== \n#evaluation\n#== \ncm = confusion_matrix(y_test,y_pred)\nprint('Training Score',xgboost_score)\nprint('Testing Score \\n',xgboost_test)\n\n#=== \n#Confusion Matrix \nplt.figure(figsize=(14,5))\n\nconf_matrix = pd.DataFrame(data=cm,columns=['Predicted:0','Predicted:1'],index=['Actual:0','Actual:1'])\nsns.heatmap(conf_matrix, annot=True,fmt='d',cmap=\"Greens\");\nprint(accuracy_score(y_test,y_pred))","7e424a5a":"\nsvc = SVC(random_state=0)\nsvc.fit(X_train, y_train)\n#== \n#Score \n#== \nsvc_score = svc.score(X_train, y_train)\nsvc_test = svc.score(X_test, y_test)\n#== \n#testing model \n#== \ny_pred = svc.predict(X_test)\n#== \n#evaluation\n#== \ncm = confusion_matrix(y_test,y_pred)\nprint('Training Score',svc_score)\nprint('Testing Score \\n',svc_test)\nprint(cm)","67a60517":"forest = RandomForestClassifier(n_estimators = 100)\n#== \nforest.fit(X_train, y_train)\n#== \n#Score \n#== \nforest_score = forest.score(X_train, y_train)\nforest_test = forest.score(X_test, y_test)\n#== \n#testing model \n#== \ny_pred = forest.predict(X_test)\n#== \n#evaluation\n#== \ncm = confusion_matrix(y_test,y_pred)\nprint('Training Score',forest_score)\nprint('Testing Score \\n',forest_test)\nprint(cm)","7aac0e84":"model = LogisticRegression()\nmodel.fit(X_train, y_train)\n\nscore = model.score(X_test, y_test)\nprint('Testing Score \\n',score)\nlogistic_score = model.score(X_train, y_train)\nlogistic_test = model.score(X_test, y_test)\n#== \ny_pred= model.predict(X_test)\nprint(classification_report(y_test, y_pred))\n#== \ncm = confusion_matrix(y_test,y_pred)\nprint(cm)","c2e56ed5":"coef = model.coef_[0]\ncoef = [abs(number) for number in coef]\nprint(coef)","0899e057":"cols = list(df.columns)\ncols.index('stroke')\n#== \n#Delete target label \n#== \ndel cols[5]\ncols","8736baf4":"sorted_index = sorted(range(len(coef)), key = lambda k: coef[k], reverse = True)\nfor idx in sorted_index:\n    print(cols[idx])","30079995":"X = df.drop(['stroke','gender','bmi','Residence_type','work_type_Never_worked','smoking_status_Unknown'], axis=1).values \n#X = df.drop(['stroke','bmi'], axis=1).values \ny = df['stroke'].values\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)\n","420e2a21":"# mlp = MLPClassifier(hidden_layer_sizes=(1000,300, 300, 300), solver='adam', shuffle=False, tol = 0.0001)\nmlp=MLPClassifier(hidden_layer_sizes=(300,300,300), max_iter=1000, alpha=0.00001,\n                     solver='adam', verbose=10,  random_state=21)\nmlp.fit(X_train, y_train)\nmlp_pred= mlp.predict(X_test)\n\nmlp_score = mlp.score(X_train, y_train)\nmlp_test = mlp.score(X_test, y_test)\n\n\ny_pred =mlp.predict(X_test)\n#== \n#evaluation\n#== \ncm = confusion_matrix(y_test,y_pred)\nprint('Training Score',mlp_score)\nprint('Testing Score \\n',mlp_test)\nprint(cm)","61719020":"plt.figure(figsize=(14,5))\ncm = confusion_matrix(y_test,y_pred)\nconf_matrix = pd.DataFrame(data=cm,columns=['Predicted:0','Predicted:1'],index=['Actual:0','Actual:1'])\nsns.heatmap(conf_matrix, annot=True,fmt='d',cmap=\"Reds\");","046fc3ad":"TN=cm[0,0]\nTP=cm[1,1]\nFN=cm[1,0]\nFP=cm[0,1]\nsensitivity=TP\/float(TP+FN)\nspecificity=TN\/float(TN+FP)","f58cc752":"print('The acuuracy of the model = TP+TN\/(TP+TN+FP+FN) =       ',(TP+TN)\/float(TP+TN+FP+FN),'\\n',\n\n'The Missclassification = 1-Accuracy =                  ',1-((TP+TN)\/float(TP+TN+FP+FN)),'\\n',\n\n'Sensitivity or True Positive Rate = TP\/(TP+FN) =       ',TP\/float(TP+FN),'\\n',\n\n'Specificity or True Negative Rate = TN\/(TN+FP) =       ',TN\/float(TN+FP),'\\n')","a393bcb2":"* There is about 1000 diffrence between Female and Male in the data ","cbf228c9":"<h1 style=\"color:white;background-color:black;font-family:Georgia;font-size:350%;text-align:center\">BMI<\/h1>\n\n\n* Body mass index is a value derived from the mass and height of a person\n\n\n\n![](https:\/\/i.postimg.cc\/kgd3LTBT\/ae4498b42e31d75d05e764105a9e981a.jpg)\n","8c7058d8":"* There is no correlation between stroke and BMI ","6bcd1926":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Gender<\/h1>\n","a579355d":"- From the above statistics it is clear that the model is **more highly specific than sensitive**. The negative cases are predicted more accurately than the positives.","41aaefb0":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Scaling The variance in Features<\/h1>","4f64f8fe":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Target & Features <\/h1>","53696e4d":"* Private work exposes you to more stroke","1dd2f315":"* Avg glucose level is high with old people \n* BMI >40 have low avg glucose","ddc6e006":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">SVM <\/h1>","b5ad3bee":"* Being a smoker or a formerly smoker increases your risk of having a stroke","13ebde28":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">adaboost classification <\/h1>","47202990":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Stroke\/Smoking Status<\/h1>","a2b2b9a4":"* We have good distribution for age \n* I think we have outliers in bmi \n* Avg glucose distribution is reasonable because the normal avg of blood in sugar is less than 140 , that may be not good this feature will not be helpful to know if diabetes have correlation between diabetes and strokes","e4175107":"* Only 5% percent of people have Stroke ! \n","31e091bf":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Stroke or not in Categorical Features<\/h1>","65821368":"\n<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Correlation with avg glucose level<\/h1>\n\n* Visualize some features which maybe have correlation with avg glucose level\n\n","7fb774f8":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:center\">Data Visualization<\/h1>\n","a5e14a8b":"* we have many outliers but before we fix this we must study BMI first ","5e72c5fa":"<h1 style=\"background-color:skyblue;font-family:Georgia;font-size:350%;text-align:center\">Sensitivity & Specificity<\/h1>","adccc85a":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Stroke\/Heart Disease<\/h1>","49d92042":"* more than 25% of strok cases They had hypertension","e7f2dd35":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Logistic Regression<\/h1>","48f1216b":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Random Forest Classifier<\/h1>","fa093d0d":"<h1 style=\"background-color:skyblue;font-family:Georgia;font-size:350%;text-align:center\">Data preprocessing<\/h1>","5988833c":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Encoding Categorical Features<\/h1>","9e54180f":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">XGboost <\/h1>","5b863906":"<h1 style=\"background-color:skyblue;font-family:Georgia;font-size:350%;text-align:center\">Read & Explore<\/h1>\n","d5bc0f9f":"* Residence Type has nothing to do with stroke, We cannot take it as a standard\n","39463dc4":"<h1 style=\"font-family:Arial;font-size:175%;text-align:center\">That was expected, wasn't it \ud83d\udc40<\/h1> \n\n![](https:\/\/media.giphy.com\/media\/AIGA5rzzs4ygo\/giphy.gif)","663ad65f":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">MLP NN Classifier<\/h1>","e73cfcb3":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:center\">Variance features Distribution<\/h1>\n","23f53436":"* Most people who have had a stroke do not have any heart disease, but that does not prevent it being an influential factor ","857c6972":"<h1 style=\"background-color:skyblue;font-family:Georgia;font-size:350%;text-align:center\">Classification Models<\/h1>","3494aad8":"<h1 style=\"background-color:skyblue;font-family:Georgia;font-size:350%;text-align:center\">Notes<\/h1>\n\n* Avg glucose level is high with old people \n* BMI >40 have low avg glucose\n* Being unmarried reduces your risk of a stroke\n* Being a smoker or a formerly smoker increases your risk of having a stroke\n* more than 25% of strok cases They had hypertension","c0faaf40":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Splitting <\/h1>","d4c0e35f":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Feature Importance using Logistic Regression<\/h1>","60a35518":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:center\">Data Summary ( Check for missing values ) \n<\/h1>\n","58e9f728":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Stroke Pie Chart<\/h1>\n","994c8ffc":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Drop ID feature and check for nulls<\/h1>","c00a2bff":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Double Check for missing values<\/h1>","0fb36a0c":"* Although BMI is considered an indicator for recognizing strokes, there are a large number of values \u200b\u200bin the normal range and not a high rate that indicates a stroke.","6dd133e6":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Heatmap Correlation<\/h1>","3f675832":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Stroke\/Ever Married<\/h1>","ea366a28":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">BMI Boxplot<\/h1>","acdd244d":"![](https:\/\/i.makeagif.com\/media\/11-12-2015\/kxoOxr.gif)","bfd2a896":"![](https:\/\/i.postimg.cc\/7L8qgPqB\/main-qimg-4e6846605de48c4b372265b47e32ac15.jpg)\n","cb00afa3":"<h1 style=\"background-color:skyblue;font-family:Georgia;font-size:350%;text-align:center\">Import<\/h1>\n","346935ba":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Stroke Or not Pair Grid<\/h1>","2d705fc4":"<h1 style=\"background-color:skyblue;font-family:Georgia;font-size:350%;text-align:center\">Introduction<\/h1>\n<h1 style=\"font-family:Georgia;font-size:175%;text-align:center\">Through this data we will try to know more about strokes and Make a model to try to predict strokes<\/h1>\n<h1 style=\"font-family:Georgia;font-size:150%;text-align:left\">first what is a stroke?<\/h1>\n\n*  Stroke is a medical emergency. A stroke occurs when blood flow to a part of your brain is interrupted or reduced, preventing brain tissue from getting oxygen and nutrients. Brain cells begin to die within minutes \n\n<h1 style=\"font-family:Georgia;font-size:150%;text-align:left\">Risk factors for having a stroke include:<\/h1>\n\n* Age: People aged 55 years and over\n\n* Hypertension: if the systolic pressure is 140 mm Hg or more, or the diastolic pressure is 90 mm Hg or more\n\n* Hypercholesterolemia: If the cholesterol level in the blood is 200 milligrams per deciliter\n\n* Smoking\n\n* Diabetes\n\n* Obesity: if the body mass index (BMI) is 30 or more\n\n","22ea7107":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Residence Type<\/h1>","93439422":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Stroke\/Work Type<\/h1>"}}