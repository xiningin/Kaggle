{"cell_type":{"533e1c0e":"code","17abd709":"code","77b5177d":"code","41ccd021":"code","ea1ebd6b":"code","7557754d":"code","c86d4430":"code","50cea460":"code","f78a5a61":"code","2d873111":"code","00be49e3":"code","b4a65fb3":"code","48045551":"code","6168704d":"code","8cc60ad7":"code","2f21a3f5":"code","d6cb247a":"code","af87e2be":"code","4543091d":"code","704ed991":"code","daae251d":"code","cec8a26e":"code","85863ccd":"code","5afcc7ca":"code","80d2c8aa":"code","6f21054f":"code","2b622f4f":"code","d397609f":"code","2a7acb0c":"code","068d25e4":"code","21c066fd":"code","64c845db":"code","57af7ee3":"code","442aa240":"code","cfb5b43a":"code","de7482af":"code","6ec649ec":"code","858e6ed3":"code","d5c8825d":"code","abd9245e":"code","d11f82d5":"code","d75f4988":"code","7f71252a":"code","fa7ea8f1":"code","264a3442":"markdown","a2c969f1":"markdown"},"source":{"533e1c0e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly\nimport plotly.express as px\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","17abd709":"DATA_PATH = '\/kaggle\/input\/mushroom-classification\/'","77b5177d":"file_path = os.path.join(DATA_PATH,'mushrooms.csv')","41ccd021":"pd.set_option('display.max_columns',30)","ea1ebd6b":"df = pd.read_csv(file_path)","7557754d":"print(f'shape of csv file: {df.shape}')","c86d4430":"df.head()","50cea460":"df.columns = ['target', 'cap-shape', 'cap-surface', 'cap-color', 'bruises', 'odor',\n       'gill-attachment', 'gill-spacing', 'gill-size', 'gill-color',\n       'stalk-shape', 'stalk-root', 'stalk-surface-above-ring',\n       'stalk-surface-below-ring', 'stalk-color-above-ring',\n       'stalk-color-below-ring', 'veil-type', 'veil-color', 'ring-number',\n       'ring-type', 'spore-print-color', 'population', 'habitat']","f78a5a61":"for i in df.columns:\n    print(f'{i} -> {df[i].unique()}')","2d873111":"for i in df.columns:\n    if df[i].dtype == 'object':\n        df[i] = pd.factorize(df[i])[0]","00be49e3":"df.groupby(['cap-shape'])['target'].value_counts()","b4a65fb3":"pd.crosstab(df['cap-shape'],df['target'])","48045551":"fig = px.violin(df,\n          x = df['cap-shape'],\n          y=df['target'])\nfig.show()","6168704d":"fig = px.violin(df,\n          x = df['cap-surface'],\n          y=df['target'])\nfig.show()","8cc60ad7":"from sklearn.feature_selection import VarianceThreshold\nfrom sklearn.feature_selection import SelectKBest,chi2\nfrom sklearn.feature_selection import mutual_info_classif","2f21a3f5":"y = df.target","d6cb247a":"df.drop('target',axis =1,inplace=True)","af87e2be":"x = df","4543091d":"vrt = VarianceThreshold(threshold=0.01)\nvrt.fit(x,y)","704ed991":"sum(vrt.get_support())","daae251d":"X = vrt.transform(df)","cec8a26e":"chi2_selector = SelectKBest(chi2, k=11)\nX_kbest = chi2_selector.fit_transform(X, y)","85863ccd":"X_kbest.shape","5afcc7ca":"mut_feat = mutual_info_classif(X_kbest,y)","80d2c8aa":"mut_feat","6f21054f":"from sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression","2b622f4f":"X_train,X_test,y_train,y_test = train_test_split(X_kbest,y,test_size=0.15,random_state=1)","d397609f":"lr = LogisticRegression(max_iter=200)\nlr.fit(X_train,y_train)","2a7acb0c":"lr.score(X_train,y_train)","068d25e4":"cross_val_score(lr,X_train,y_train,cv=5)","21c066fd":"lr.score(X_test,y_test)","64c845db":"from sklearn.ensemble import RandomForestClassifier","57af7ee3":"rf = RandomForestClassifier(max_features=9,max_depth=5,n_estimators=10)","442aa240":"rf.fit(X_train,y_train)","cfb5b43a":"rf.score(X_train,y_train)","de7482af":"cross_val_score(rf,X_train,y_train,cv=5)","6ec649ec":"rf.feature_importances_","858e6ed3":"rf.score(X_test,y_test)","d5c8825d":"from sklearn.metrics import classification_report,roc_auc_score,roc_curve,auc","abd9245e":"y_pred = rf.predict(X_test)","d11f82d5":"print(classification_report(y_test,y_pred))","d75f4988":"roc_auc_score(y_test,y_pred)","7f71252a":"fpr, tpr, thresholds = roc_curve(y_test, y_pred)","fa7ea8f1":"plt.plot(fpr,tpr)\nplt.xlabel('fpr')\nplt.ylabel('tpr')\nplt.title(f'tpr vs fpr plot with auc: {roc_auc_score(y_test,y_pred)}')\nplt.show()","264a3442":"# Exploratory Data Analysis","a2c969f1":"#### Feature selection"}}