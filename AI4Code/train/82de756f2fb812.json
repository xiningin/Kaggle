{"cell_type":{"36de3f32":"code","6804334e":"code","e5027350":"code","a3714440":"code","9f148730":"code","76dc6cbe":"code","cd74b47c":"code","040cd8c2":"code","39eb4c05":"code","3971c3d3":"code","33b282a6":"code","ce3eff31":"code","4d197cfd":"code","25b47b61":"code","2bad8201":"code","ce1934bd":"code","6bfb54e9":"code","0cf2ee77":"code","4557afcb":"code","baa3427c":"code","aedc409e":"code","c27c3235":"code","cf3d8088":"code","4b37b9ee":"code","e647ecee":"code","a413e4e2":"code","04266e4e":"code","1f2ca189":"code","784589c2":"code","feae6d7b":"code","3d65a081":"code","70bfb993":"code","4bade93f":"code","74388cd2":"code","78501798":"code","23e425c0":"code","a8cba13e":"code","cf68a190":"code","62fb179d":"code","cef0192b":"code","d20ec644":"code","f64594dd":"code","a1c49957":"code","7a43aa8a":"code","c953377a":"code","c1833e15":"code","4c5a3544":"code","fbc4bcdf":"code","b2b391f6":"code","045cfa01":"code","d721b458":"code","0db6605a":"code","0a8b29a5":"code","085a48fb":"code","b7b3db47":"code","25a6838a":"code","05f7e275":"code","96dfbfb9":"code","1bc4c16e":"code","b25bbed4":"code","0a718406":"code","0fa98e62":"code","ebb100c1":"code","5d7f9bcd":"code","6d5e2479":"code","10fd04d9":"code","9f8b8180":"code","93d7509d":"code","ff4e5d03":"markdown","d546e886":"markdown","b226f0ac":"markdown","1f8dab80":"markdown","bc013cea":"markdown","307b908d":"markdown","fe42b515":"markdown","fe16362f":"markdown","29b8b03c":"markdown","8b9ba40f":"markdown","22082456":"markdown","55fc3984":"markdown","7e534261":"markdown","42063c9c":"markdown","31aa557c":"markdown","a7194312":"markdown","26cac593":"markdown","e83851cc":"markdown","73bb33f3":"markdown","6a508499":"markdown","9a25677b":"markdown","518eedcd":"markdown","bdd40952":"markdown","3ddbd889":"markdown","5b588158":"markdown","0ecc589e":"markdown","90c82b9d":"markdown","90a385ae":"markdown","ff3867a6":"markdown","9620308e":"markdown","39337de9":"markdown","cb89c47b":"markdown","ff407106":"markdown","7c662dbc":"markdown","3986569e":"markdown","4625130b":"markdown","aab15708":"markdown","bf2b74e6":"markdown","37a1caeb":"markdown","40fa7349":"markdown","08f0d06e":"markdown","4d24eb94":"markdown","4eae9b9a":"markdown","4b7b199c":"markdown","51270350":"markdown","48a0acc7":"markdown","f906b922":"markdown","3a8d4fb1":"markdown","906adfe0":"markdown","0cf9e3bd":"markdown","74938719":"markdown"},"source":{"36de3f32":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nprint(os.listdir(\"..\/input\"))","6804334e":"train = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')\nmerchants = pd.read_csv('..\/input\/merchants.csv')\nnew_merchant_t = pd.read_csv('..\/input\/new_merchant_transactions.csv')\nhis_trans = pd.read_csv('..\/input\/historical_transactions.csv')","e5027350":"print(train.shape)\nprint(test.shape)\nprint(merchants.shape)\nprint(new_merchant_t.shape)\nprint(his_trans.shape)","a3714440":"train.dtypes","9f148730":"train['first_active_month'] = pd.to_datetime(train['first_active_month']).apply(lambda x: x.strftime('%Y-%m'))","76dc6cbe":"print(new_merchant_t.dtypes)\nprint(his_trans.dtypes)","cd74b47c":"new_merchant_t['city_id'] = new_merchant_t['city_id'].astype(object)\nnew_merchant_t['merchant_category_id'] = new_merchant_t['merchant_category_id'].astype(object)\nnew_merchant_t['category_2'] = new_merchant_t['category_2'].astype(object)\nnew_merchant_t['state_id'] = new_merchant_t['state_id'].astype(object)\nnew_merchant_t['subsector_id'] = new_merchant_t['subsector_id'].astype(object)\nnew_merchant_t['purchase_date'] = pd.to_datetime(new_merchant_t['purchase_date'])\n\nhis_trans['city_id'] = his_trans['city_id'].astype(object)\nhis_trans['merchant_category_id'] = his_trans['merchant_category_id'].astype(object)\nhis_trans['category_2'] = his_trans['category_2'].astype(object)\nhis_trans['state_id'] = his_trans['state_id'].astype(object)\nhis_trans['subsector_id'] = his_trans['subsector_id'].astype(object)\nhis_trans['purchase_date'] = pd.to_datetime(his_trans['purchase_date'])","040cd8c2":"print(merchants.dtypes)","39eb4c05":"merchants['merchant_group_id'] = merchants['merchant_group_id'].astype(object)\nmerchants['merchant_category_id'] = merchants['merchant_category_id'].astype(object)\nmerchants['subsector_id'] = merchants['subsector_id'].astype(object)\nmerchants['city_id'] = merchants['city_id'].astype(object)\nmerchants['state_id'] = merchants['state_id'].astype(object)\nmerchants['category_2'] = merchants['category_2'].astype(object)","3971c3d3":"train.head(10)","33b282a6":"train['target'].describe()","ce3eff31":"f, ax = plt.subplots(figsize=(8, 6))\nfig = sns.boxplot(train.target)","4d197cfd":"f, ax = plt.subplots(figsize=(10, 8))\nsns.distplot(train['target'])","25b47b61":"# calculate the correlation matrix\ncorr = train.corr()\n\n# plot the heatmap\nsns.heatmap(corr, \n        xticklabels=corr.columns,\n        yticklabels=corr.columns, annot=True)","2bad8201":"col_list = train.columns.tolist()\ncol_list = col_list[2:]\nf = pd.melt(train, value_vars=col_list)\ng = sns.FacetGrid(f, col=\"variable\",  col_wrap=2, sharex=False, sharey=False)\ng = g.map(sns.distplot, \"value\")","ce1934bd":"col_list = test.columns.tolist()\ncol_list = col_list[2:]\nf = pd.melt(test, value_vars=col_list)\ng = sns.FacetGrid(f, col=\"variable\",  col_wrap=2, sharex=False, sharey=False)\ng = g.map(sns.distplot, \"value\")","6bfb54e9":"his_trans.head()","0cf2ee77":"his_trans.describe()","4557afcb":"new_merchant_t.describe()","baa3427c":"fig, ax = plt.subplots(1, 4, figsize = (16, 6));\nhis_trans['authorized_flag'].value_counts().sort_index().plot(kind='bar', ax=ax[0], color='teal', title='authorized_flag');\nhis_trans['category_1'].value_counts().sort_index().plot(kind='bar', ax=ax[1], color='brown', title='category_1');\nhis_trans['category_2'].value_counts().sort_index().plot(kind='bar', ax=ax[2], color='gold', title='category_2');\nhis_trans['category_3'].value_counts().sort_index().plot(kind='bar', ax=ax[3], color='purple', title='category_3');\nplt.suptitle('Counts of categiories historical transaction');\nfig, ax = plt.subplots(1, 4, figsize = (16, 6));\nnew_merchant_t['authorized_flag'].value_counts().sort_index().plot(kind='bar', ax=ax[0], color='teal', title='authorized_flag');\nnew_merchant_t['category_1'].value_counts().sort_index().plot(kind='bar', ax=ax[1], color='brown', title='category_1');\nnew_merchant_t['category_2'].value_counts().sort_index().plot(kind='bar', ax=ax[2], color='gold', title='category_2');\nnew_merchant_t['category_3'].value_counts().sort_index().plot(kind='bar', ax=ax[3], color='purple', title='category_3');\nplt.suptitle('Counts of categiories new merchant transaction');","aedc409e":"his_trans[his_trans['authorized_flag']=='N'].head(10)","c27c3235":"fig, ax = plt.subplots(1, 2, figsize = (16, 6));\nhis_trans['installments'].value_counts().sort_index().plot(kind='bar', ax=ax[0], color='teal', title='installments');\nhis_trans['month_lag'].value_counts().sort_index().plot(kind='bar', ax=ax[1], color='brown', title='month_lag');\nplt.suptitle('Counts of categiories historical transaction');\n\nfig, ax = plt.subplots(1, 2, figsize = (16, 6));\nnew_merchant_t['installments'].value_counts().sort_index().plot(kind='bar', ax=ax[0], color='teal', title='installments');\nnew_merchant_t['month_lag'].value_counts().sort_index().plot(kind='bar', ax=ax[1], color='brown', title='month_lag');\nplt.suptitle('Counts of categiories new merchant transaction');","cf3d8088":"his_trans[his_trans['installments']==999].head()","4b37b9ee":"his_trans[(his_trans['installments']==999) & (his_trans.authorized_flag=='Y')]","e647ecee":"his_trans[his_trans['installments']==-1].head()","a413e4e2":"his_trans[his_trans['city_id']==-1]","04266e4e":"his_trans[(his_trans['city_id']==-1)&(his_trans['state_id']!=-1)]","1f2ca189":"print(len(his_trans[(his_trans['city_id']!=-1)&(his_trans['state_id']==-1)]))\nhis_trans[(his_trans['city_id']!=-1)&(his_trans['state_id']==-1)].head()","784589c2":"merchants.isnull().sum()","feae6d7b":"merchants[merchants.avg_sales_lag3.isnull()==True]","3d65a081":"new_merchant_t.isnull().sum()","70bfb993":"his_trans.isnull().sum()","4bade93f":"train = train[train.target>-30]","74388cd2":"# purchase_amount size per card_id (\uad6c\ub9e4\uac74\uc218)\nc_his = his_trans.groupby(\"card_id\")\nc_his = c_his[\"purchase_amount\"].size().reset_index()\nc_his.columns = [\"card_id\",\"purchase_amount_size\"]\ntrain = pd.merge(train, c_his, on=\"card_id\", how=\"left\")","78501798":"data = pd.concat([train['target'], train['purchase_amount_size']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nplt.scatter(x='purchase_amount_size', y=\"target\", data=data)\nplt.xlabel(\"purchase_amount_size\")\nplt.ylabel(\"target\")\nplt.show","23e425c0":"# purchase_amount mean per card_id\nc_his = his_trans.groupby(\"card_id\")\nc_his = c_his[\"purchase_amount\"].mean().reset_index()\nc_his.columns = [\"card_id\",\"purchase_amount_mean\"]\ntrain = pd.merge(train, c_his, on=\"card_id\", how=\"left\")","a8cba13e":"data = pd.concat([train['target'], train['purchase_amount_mean']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nplt.scatter(x='purchase_amount_mean', y=\"target\", data=data)\nplt.xlabel(\"purchase_amount_mean\")\nplt.ylabel(\"target\")\nplt.show","cf68a190":"train[train['purchase_amount_mean']>400000]","62fb179d":"his_trans[his_trans['purchase_amount']>400000]","cef0192b":"# if remove that point,\ndata = data[data.purchase_amount_mean < 400000]\nf, ax = plt.subplots(figsize=(8, 6))\nplt.scatter(x='purchase_amount_mean', y=\"target\", data=data)\nplt.xlabel(\"purchase_amount_mean\")\nplt.ylabel(\"target\")\nplt.show","d20ec644":"c_his = his_trans.groupby(\"card_id\")\nc_his = c_his[\"installments\"].mean().reset_index()\nc_his.columns = [\"card_id\",\"installments_mean\"]\ntrain = pd.merge(train, c_his, on=\"card_id\", how=\"left\")","f64594dd":"data = pd.concat([train['target'], train['installments_mean']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nplt.scatter(x='installments_mean', y=\"target\", data=data)\nplt.xlabel(\"installments_mean\")\nplt.ylabel(\"target\")\nplt.show","a1c49957":"c_his = his_trans.groupby(\"card_id\")\nc_his = c_his[\"month_lag\"].max().reset_index()\nc_his.columns = [\"card_id\",\"month_lag_recent\"]\ntrain = pd.merge(train, c_his, on=\"card_id\", how=\"left\")","7a43aa8a":"data = pd.concat([train['target'], train['month_lag_recent']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nplt.scatter(x='month_lag_recent', y=\"target\", data=data)\nplt.xlabel(\"month_lag_recent\")\nplt.ylabel(\"target\")\nplt.show","c953377a":"his_trans['purchase_date_month'] = his_trans['purchase_date'].apply(lambda x: x.strftime('%Y-%m'))","c1833e15":"c_his = his_trans.groupby(\"card_id\")\nc_his = c_his[\"purchase_date_month\"].max().reset_index()\nc_his.columns = [\"card_id\",\"purchase_date_month_recent\"]\ntrain = pd.merge(train, c_his, on=\"card_id\", how=\"left\")","4c5a3544":"train['purchase_period'] = pd.to_datetime(train['purchase_date_month_recent'])-pd.to_datetime(train['first_active_month'])","fbc4bcdf":"for i in range(len(train)):\n    train.purchase_period[i] = train.purchase_period[i].days\/\/30","b2b391f6":"# calculate the correlation matrix\ncorr = train.corr()\n\n# plot the heatmap\nsns.heatmap(corr, \n        xticklabels=corr.columns,\n        yticklabels=corr.columns, annot=True)","045cfa01":"new_merchant_t.head()","d721b458":"# purchase_amount size per card_id (\uad6c\ub9e4\uac74\uc218)\nc_his = new_merchant_t.groupby(\"card_id\")\nc_his = c_his[\"purchase_amount\"].size().reset_index()\nc_his.columns = [\"card_id\",\"purchase_amount_size_new\"]\ntrain = pd.merge(train, c_his, on=\"card_id\", how=\"left\")","0db6605a":"data = pd.concat([train['target'], train['purchase_amount_size_new']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nplt.scatter(x='purchase_amount_size_new', y=\"target\", data=data)\nplt.xlabel(\"purchase_amount_size_new\")\nplt.ylabel(\"target\")\nplt.show","0a8b29a5":"# purchase_amount mean per card_id\nc_his = new_merchant_t.groupby(\"card_id\")\nc_his = c_his[\"purchase_amount\"].mean().reset_index()\nc_his.columns = [\"card_id\",\"purchase_amount_mean_new\"]\ntrain = pd.merge(train, c_his, on=\"card_id\", how=\"left\")","085a48fb":"data = pd.concat([train['target'], train['purchase_amount_mean_new']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nplt.scatter(x='purchase_amount_mean_new', y=\"target\", data=data)\nplt.xlabel(\"purchase_amount_mean_new\")\nplt.ylabel(\"target\")\nplt.show","b7b3db47":"c_his = new_merchant_t.groupby(\"card_id\")\nc_his = c_his[\"installments\"].mean().reset_index()\nc_his.columns = [\"card_id\",\"installments_mean_new\"]\ntrain = pd.merge(train, c_his, on=\"card_id\", how=\"left\")","25a6838a":"data = pd.concat([train['target'], train['installments_mean_new']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nplt.scatter(x='installments_mean_new', y=\"target\", data=data)\nplt.xlabel(\"installments_mean_new\")\nplt.ylabel(\"target\")\nplt.show","05f7e275":"train[train.installments_mean_new>30]","96dfbfb9":"new_merchant_t[new_merchant_t.installments==999]","1bc4c16e":"# if remove that point,\ndata = data[data.installments_mean_new<30]\nf, ax = plt.subplots(figsize=(8, 6))\nplt.scatter(x='installments_mean_new', y=\"target\", data=data)\nplt.xlabel(\"installments_mean_new\")\nplt.ylabel(\"target\")\nplt.show","b25bbed4":"c_his = new_merchant_t.groupby(\"card_id\")\nc_his = c_his[\"month_lag\"].max().reset_index()\nc_his.columns = [\"card_id\",\"month_lag_recent_new\"]\ntrain = pd.merge(train, c_his, on=\"card_id\", how=\"left\")","0a718406":"data = pd.concat([train['target'], train['month_lag_recent_new']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\nplt.scatter(x='month_lag_recent_new', y=\"target\", data=data)\nplt.xlabel(\"month_lag_recent_new\")\nplt.ylabel(\"target\")\nplt.show","0fa98e62":"new_merchant_t['purchase_date_month'] = new_merchant_t['purchase_date'].apply(lambda x: x.strftime('%Y-%m'))","ebb100c1":"c_his = new_merchant_t.groupby(\"card_id\")\nc_his = c_his[\"purchase_date_month\"].max().reset_index()\nc_his.columns = [\"card_id\",\"purchase_date_month_recent_new\"]\ntrain = pd.merge(train, c_his, on=\"card_id\", how=\"left\")","5d7f9bcd":"train['purchase_period_new'] = pd.to_datetime(train['purchase_date_month_recent_new'])-pd.to_datetime(train['first_active_month'])","6d5e2479":"train.head()","10fd04d9":"# Fill null by most frequent data\n#df_trans['category_2'].fillna(1.0,inplace=True)\n#df_trans['category_3'].fillna('A',inplace=True)\n#df_trans['merchant_id'].fillna('M_ID_00a6ca8a8a',inplace=True)","9f8b8180":"train.isnull().sum()","93d7509d":"train.dtypes","ff4e5d03":"(purchase_amount\uac00 \uc74c\uc218\uc778\uac74 \ubb34\uc2a8 \uc758\ubbf8..?? -> \ubb54\uac00 \ucc98\ub9ac\ub41c \uac12\uc774\ub77c\uc11c)","d546e886":"**Data**","b226f0ac":"first_active\uc5d0\uc11c \ucd5c\uadfc \uad6c\ub9e4\uae4c\uc9c0 \uae30\uac04\uc744 \uc0b4\ud3b4\ubcf4\uba74,","1f8dab80":"\uc0b4\uc9dd \ub3d9\ub5a8\uc5b4\uc9c4 \uac12\uc774 \uc874\uc7ac...","bc013cea":"\ucc38\uace0\n* https:\/\/www.kaggle.com\/kailex\/r-eda-for-elo-ensemble-learning\n* https:\/\/www.kaggle.com\/artgor\/elo-eda-and-models","307b908d":"some transactions -> Y authorized_flag","fe42b515":"installments\uc5d0 -1,999-> outlier? missing value? -> How can handle this? -> 999( if this means over 12 installments...maybe....I can change 999->(ex)13  )","fe16362f":"**train + historical**","29b8b03c":"But the opposite does not. There are som cases city_id is not -1, state_id is -1.","8b9ba40f":"\ud63c\uc790 \ud280\ub294 \uc774\uc720\uac00 his_trans\uc758 describe\ub97c \ubcf4\uc558\uc744\ub54c max\uac12\uc774 \uc5c4\uccad \ucef8\ub358 \uac83 \ub54c\ubb38\uc73c\ub85c \ucd94\uc815\ub418\uc5b4 \ud655\uc778 -> \uc774 purchase amount\uac00 \uc774\uc0c1\uce58\uc778\uac00...?","22082456":"first_active\uc5d0\uc11c \ucd5c\uadfc \uad6c\ub9e4\uae4c\uc9c0 \uae30\uac04\uc744 \uc0b4\ud3b4\ubcf4\uba74,","55fc3984":"**train + new_merchant_transactions**","7e534261":"\ubcc0\uc218 \ub2e4 \ub9cc\ub4e0 \ud6c4 next week\ub294 predict model \ub9cc\ub4e4\uc5b4\uc11c \ube44\uad50\ud574\ubcf4\uae30! ","42063c9c":"**1. train**","31aa557c":"\uac70\ub798 \ub370\uc774\ud130\uc758 \uc77c\ubd80 \uce74\ud14c\uace0\ub9ac \ubcc0\uc218\ub97c \uc0b4\ud3b4\ubcf4\uc558\ub2e4. historical data\uc640 new merchant data\uac00 \uc720\uc0ac\ud55c \ud328\ud134\uc744 \ubcf4\uc774\ub294 \uac83\uc744 \ud655\uc778. \ub2e8, authorized_flag \ubcc0\uc218\ub9cc \ub2e4\ub984. new merchant data\uc5d0\uc11c\ub294 N\uc774 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc74c. category_1\uc740 historical data\uc5d0\uc11c Y\uac12\uc774 \uc870\uae08 \ub354 \ub9ce\uace0, category_3\uc5d0\uc11c B\uac00 historical data\uc5d0\uc11c \uc870\uae08 \ub354 \uc801\uc740 \ube44\uc911.","a7194312":"\uadfc\ub370 \uad81\uae08\ud55c\uac8c..\uace0\uac1d\ub9de\ucda4\ud615 \uac00\uac8c \ucd94\ucc9c\uac19\uc740\uac74\ub370...\ubb54\uac00 \uc9c0\uae08 \ud55c\uac74 \uadf8\ub0e5 \uace0\uac1d\ubcc4\ub85c\ub9cc \ubcf8\uac70\uac19\uc740\ub370...\ud760....?\n\ubcc0\uc218 \ub354 \uc0dd\uc131\ud574\ubcf4\uae30 -> \ud3c9\uade0 \uad6c\ub9e4\uac04\uaca9, \uce74\ub4dc\ubcc4 \uac00\uc7a5 \ube48\ub3c4\uc218 \ub192\uc740 city, state, merchant_id \ub4f1\ub4f1\uc758 id\ubcc0\uc218 \ud65c\uc6a9..?\uc5ec\uae30\uc11c \ub098\uc628 merchant_id\ub97c \uae30\uc900\uc73c\ub85c merchant data \uc774\uc6a9...?\ud760...(merchant data \uc5b4\ub5bb\uac8c \ud65c\uc6a9\ud558\uba74 \uc88b\uc744\uae4c\uc694..)\n","26cac593":"**Data Preprocess**","e83851cc":"-1 in id type variable (city_id, merchant_category_id, state_id, subsector_id)","73bb33f3":"\ucd5c\uadfc\uc5d0 \uad6c\ub9e4\ud55c \uacbd\uc6b0\uac00 \ub9ce\uc74c","6a508499":"historical_transactions.csv , new_merchant_period.csv\n* card_id :\tCard identifier\n* month_lag :\tmonth lag to reference date\n* purchase_date :\tPurchase date\n* authorized_flag :\tY' if approved, 'N' if denied\n* category_3 :\tanonymized category\n* installments :\tnumber of installments of purchase\n* category_1 :\tanonymized category\n* merchant_category_id :\tMerchant category identifier (anonymized )\n* subsector_id :\tMerchant category group identifier (anonymized )\n* merchant_id :\tMerchant identifier (anonymized)\n* purchase_amount :\tNormalized purchase amount\n* city_id :\tCity identifier (anonymized )\n* state_id :\tState identifier (anonymized )\n* category_2 :\tanonymized category\n","9a25677b":"1. purchase_amount (Normalized purchase amount)","518eedcd":"1. purchase_amount (Normalized purchase amount)","bdd40952":"3. month_lag(month lag to reference date)","3ddbd889":"installments_mean (include -1, 999installments) -> How can handle this...? hange 999 -> 13.....or,,,,,,,,remove....?,,,,,,,,or other.....?","5b588158":"purchase_amount_mean\uacfc target\uc758 relation\uc744 \uc0b4\ud3b4\ubd24\uc744\ub54c, historical\uc5d0\uc11c\ub294 \uac70\uc758 flat\ud55c \ud615\ud0dc\uc5d0 \uac00\uae4c\uc6e0\ub294\ub370 new\uc5d0\uc11c\ub294 \uc870\uae08 \ub354 \uc815\uaddc\ubd84\ud3ec\ucc98\ub7fc \uc0dd\uae34 \ubaa8\uc591.","0ecc589e":"If city_id is -1, state_id is -1, too.","90c82b9d":"\ub9e8 \uc624\ub978\ucabd\uc5d0 \uc788\ub294 \uc810 \ud655\uc778","90a385ae":"train.csv\n* card_id :\tUnique card identifier\n* first_active_month :\t'YYYY-MM', month of first purchase\n* feature_1 :\tAnonymized card categorical feature\n* feature_2 :\tAnonymized card categorical feature\n* feature_3 :\tAnonymized card categorical feature\n* target :\tLoyalty numerical score calculated 2 months after historical and evaluation period\n","ff3867a6":"**2. transaction data - historical, new**","9620308e":"\ud3c9\uade0\uc774 0\ubcf4\ub2e4 \uc791\uace0, \ub2e4\ub978 \uac12\ub4e4\uc5d0 \ube44\ud574 \uadf9\ub2e8\uc801\uc778 \uac12\uc744 \uac16\ub294 \uc77c\ubd80 \uac12\ub4e4\uc774 \uc874\uc7ac","39337de9":"\uac01\uac01\uc758 feature\uc5d0 \ub300\ud574 train, test\uc774 \ube44\uc2b7\ud55c \ubd84\ud3ec","cb89c47b":"\ud560\ubd80....\uc800\ub807\uac8c \ub9ce\uc774\ub3c4 \uac00\ub2a5\ud55c\uac74....\uac00\uc694....? -> 999\uc758 \uc601\ud5a5...999\ub97c \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud574\uc8fc\uba74 \uc88b\uc744\uae4c\uc694..? \ub9cc\uc57d 12\uac1c\uc6d4 \uc774\uc0c1\uc774 999\ub85c \ub418\ub294\uac70\ub77c\uba74, 999\ub97c 13\uc73c\ub85c \ub300\uccb4...? \uc81c\uac70? \ub2e4\ub978 \uac12\uc73c\ub85c?","ff407106":"\uadf8\ub798\ud504\uac00 \uc870\uae08 \uc2e0\uae30...? \ud37c\uc838\uc788\uae30\ub3c4 \ud558\uace0, \uc904\uc11c\uc788\uae30\ub3c4 \ud558\uace0..?","7c662dbc":"The average is less than zero. Some values are extreme( relative to others ). ","3986569e":"3. month_lag(month lag to reference date)","4625130b":"merchant.csv\n* merchant_id :\tUnique merchant identifier\n* merchant_group_id :\tMerchant group (anonymized )\n* merchant_category_id :\tUnique identifier for merchant category (anonymized )\n* subsector_id :\tMerchant category group (anonymized )\n* numerical_1 :\tanonymized measure\n* numerical_2 :\tanonymized measure\n* category_1 :\tanonymized category\n* most_recent_sales_range :\tRange of revenue (monetary units) in last active month --> A > B > C > D > E\n* most_recent_purchases_range :\tRange of quantity of transactions in last active month --> A > B > C > D > E\n* avg_sales_lag3 :\tMonthly average of revenue in last 3 months divided by revenue in last active month\n* avg_purchases_lag3 :\tMonthly average of transactions in last 3 months divided by transactions in last active month\n* active_months_lag3 :\tQuantity of active months within last 3 months\n* avg_sales_lag6 :\tMonthly average of revenue in last 6 months divided by revenue in last active month\n* avg_purchases_lag6 :\tMonthly average of transactions in last 6 months divided by transactions in last active month\n* active_months_lag6 :\tQuantity of active months within last 6 months\n* avg_sales_lag12 :\tMonthly average of revenue in last 12 months divided by revenue in last active month\n* avg_purchases_lag12 :\tMonthly average of transactions in last 12 months divided by transactions in last active month\n* active_months_lag12 :\tQuantity of active months within last 12 months\n* category_4 :\tanonymized category\n* city_id :\tCity identifier (anonymized )\n* state_id :\tState identifier (anonymized )\n* category_2 :\tanonymized category","aab15708":"\ub370\uc774\ud130\ub97c \uc0b4\ud3b4\ubcf4\uba74, target\uc740 0 \uadfc\ucc98\uc5d0 \ubaa8\uc5ec\uc788\ub2e4. -30\ubcf4\ub2e4 \uc791\uc740 \ub370\uc774\ud130\ub294 \uc774\uc0c1\uce58\uac00 \uc544\ub2d0\uae4c \uc0dd\uac01\ud588\ub2e4.","bf2b74e6":"new_merchant_trasaction data\uc5d0 999 installments\uc778 \uacbd\uc6b0\uac00 2\uac00\uc9c0 \uc874\uc7ac.","37a1caeb":"\ud560\ubd80 \uac1c\uc6d4\ub85c \uc774\ud574","40fa7349":"\ud639\uc2dc installments\uac00 999\uc5ec\uc11c?","08f0d06e":"Predicting a loyalty score for each card_id represented in test.csv and sample_submission.csv. -> 'target'","4d24eb94":"\uba3c\uc800, train data\uc5d0\uc11c target\uc774 -30\ubcf4\ub2e4 \uc791\uc558\ub358 \uac83\ub4e4 \uc81c\uac70","4eae9b9a":"most frequent value in card_id (citiy_id, state_id,merchant_id, merchant_category_id, category1, category2, category3,subsector_id)","4b7b199c":"2. installments(number of installments of purchase)","51270350":"(installments 999?? -> outlier..??)","48a0acc7":"-1 in id type variables -> missing value? outlier? -> how............?","f906b922":"train\uc5d0 \uac70\ub798 \ub370\uc774\ud130\ub97c \ucd94\uac00\ud574\uc11c correlation\uc744 \ub2e4\uc2dc \ud655\uc778. \uc5ec\uc804\ud788.....\u314e....","3a8d4fb1":"\uacb0\uce21\uce58 \ud655\uc778","906adfe0":"2. installments(number of installments of purchase)","0cf9e3bd":"avg_sales_lag\uc758 \uacb0\uce21\uce58\ub294 \ubaa8\ub450 \ub3d9\uc77c\ud55c \ub370\uc774\ud130\uc5d0\uc11c \ubc1c\uc0dd.","74938719":"\uad6c\ub9e4\uae08\uc561\uc73c\ub85c \uc774\ud574\ud588\ub294\ub370 \uad6c\ub9e4\uc218\uc778\uac00..?"}}