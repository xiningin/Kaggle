{"cell_type":{"19f1d56d":"code","2698b5db":"code","f8388eca":"code","e4ffee5e":"code","2754098a":"code","e8f73ee6":"code","3676152a":"code","a040021b":"code","8a013f42":"code","5d50b6a2":"code","d9eab236":"code","f6818d39":"code","e43ddd37":"code","0b65209e":"code","596cc06a":"code","ca0617c2":"code","fe228b2e":"code","e39e0edb":"code","af5a8f86":"code","71d1f116":"code","824c2745":"code","e2d801f3":"code","25b60994":"markdown","bb0ee3a7":"markdown","3e81fc86":"markdown","04979038":"markdown","626ae3eb":"markdown","92759830":"markdown","c1c3d089":"markdown","f2c07668":"markdown","ee2c7a04":"markdown","a079bb0e":"markdown","b8e9c41f":"markdown","47c03bf4":"markdown","73b14366":"markdown","9b532a19":"markdown","84c6f316":"markdown","43e2ce7b":"markdown","8b181aa7":"markdown","a182a122":"markdown","21c960f9":"markdown","85f4417c":"markdown"},"source":{"19f1d56d":"pip install pycountry_convert","2698b5db":"pip install pywaffle","f8388eca":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom math import pi\nfrom scipy.interpolate import interp1d\n\nimport pycountry_convert as pc # Get continent from country name\n\nimport warnings # Supress warnings\nwarnings.filterwarnings(\"ignore\")\n\n### Visualizations ###\n# matplotlib\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Rectangle, Ellipse\nfrom matplotlib.colors import LinearSegmentedColormap\nfrom matplotlib.lines import Line2D\nplt.rcParams.update({'font.size': 14})\n\n# seaborn\nimport seaborn as sns\n\n# plotly\nimport plotly.graph_objects as go\nimport plotly.express as px\n\n# pywaffle\nfrom pywaffle import Waffle\n\n# Load 2021 Kaggle survey\nresponses = pd.read_csv(\"..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\", low_memory = False)\n\n# Remove first row\nresponses = responses[1:].reset_index(drop=True)\n\n# Set Color Palettes for the notebook\nmain_color = \"#87bec7\"\ncontrast_color = \"#516A71\"\ncontrast_color2 = \"#9BA9AC\"\nhighlight_color = \"#E79972\"\nhighlight_color2 = \"#FDCC75\"\n\ncustom_palette = [\"#516A71\",\"#5FA8B4\",\"#9BA9AC\",\"#E79972\",\"#FDCC75\"]\n\ncustom_cmap = LinearSegmentedColormap.from_list(\"\", [main_color,  contrast_color])\nplt.cm.register_cmap(\"custom_cmap\", custom_cmap)\n\ndef get_custom_palette(n_colors):\n    return sns.color_palette(\"custom_cmap\", n_colors=n_colors)","e4ffee5e":"def get_category(row):\n    for c in row:\n        if c == c:\n            return c\n            break\n    return 'None'\n\ndef concat_answers(new_col_name, cols):\n    responses[new_col_name] = responses[cols].apply(get_category, axis=1)\n\n    responses[new_col_name] = np.where((responses[cols].notna().sum(axis=1) > 1), \n                                       'Multiple', \n                                       responses[new_col_name])\n    return responses   \n\nresponses = concat_answers('Hosted Notebook Products', \n                           responses.columns[responses.columns.str.startswith('Q10') \n                                             & (responses.columns != 'Q10_Part_16')])\nresponses = concat_answers('Cloud Computing Platform', \n                           responses.columns[responses.columns.str.startswith('Q27') \n                                             & (responses.columns != 'Q27_A_Part_11')])\n\nresponses = concat_answers('Specialized Hardware', \n                           responses.columns[responses.columns.str.startswith('Q12') \n                                             & (responses.columns != 'Q12_Part_5')])\n\nresponses = concat_answers('Cloud Computing Products', \n                           responses.columns[responses.columns.str.startswith('Q29') \n                                             & (responses.columns != 'Q29_A_Part_4')])\n\nresponses = concat_answers('Data Storage Products', \n                           responses.columns[responses.columns.str.startswith('Q30') \n                                             & (responses.columns != 'Q30_A_Part_7')])","2754098a":"cloud_cols = ['Q27_A_Part_1', 'Q27_A_Part_2', 'Q27_A_Part_3', 'Q27_A_Part_4', 'Q27_A_Part_5', 'Q27_A_Part_6', 'Q27_A_Part_7', 'Q27_A_Part_8', 'Q27_A_Part_9', 'Q27_A_Part_10', 'Q27_A_Part_11', 'Q27_A_OTHER', \n              'Q29_A_Part_1', 'Q29_A_Part_2', 'Q29_A_Part_3', 'Q29_A_Part_4', 'Q29_A_OTHER',\n             'Q27_B_Part_1', 'Q27_B_Part_2', 'Q27_B_Part_3', 'Q27_B_Part_4', 'Q27_B_Part_5', 'Q27_B_Part_6', 'Q27_B_Part_7', 'Q27_B_Part_8', 'Q27_B_Part_9', 'Q27_B_Part_10', 'Q27_B_Part_11', 'Q27_B_OTHER', \n             'Q30_A_Part_1', 'Q30_A_Part_2', 'Q30_A_Part_3', 'Q30_A_Part_4', 'Q30_A_Part_5', 'Q30_A_Part_6', 'Q30_A_Part_7', 'Q30_A_OTHER',]\n\ncloud_df = responses[cloud_cols].notna()\ncloud_df.columns = ['Platform: Amazon Web Services (AWS)', 'Platform: Microsoft Azure', 'Platform: Google Cloud Platform (GCP)', 'Platform: IBM Cloud \/ Red Hat', 'Platform: Oracle Cloud', 'Platform: SAP Cloud', 'Platform: Salesforce Cloud', 'Platform: VMware Cloud', 'Platform: Alibaba Cloud', 'Platform: Tencent Cloud', 'Platform: None', 'Platform: Other', \n                    'Products: Amazon Elastic Compute Cloud (EC2)', 'Products: Microsoft Azure Virtual Machines', 'Products: Google Cloud Compute Engine', 'Products: None', 'Products: Other',\n                    'Platform 2y: Amazon Web Services (AWS)', 'Platform 2y: Microsoft Azure', 'Platform 2y: Google Cloud Platform (GCP)', 'Platform 2y: IBM Cloud \/ Red Hat', 'Platform 2y: Oracle Cloud', 'Platform 2y: SAP Cloud', 'Platform 2y: Salesforce Cloud', 'Platform 2y: VMware Cloud', 'Platform 2y: Alibaba Cloud', 'Platform 2y: Tencent Cloud', 'Platform 2y: None', 'Platform 2y: Other', \n                   'Data Storage Products: Microsoft Azure Data Lake Storage ', 'Data Storage Products: Microsoft Azure Disk Storage ', 'Data Storage Products: Amazon Simple Storage Service (S3)', 'Data Storage Products: Amazon Elastic File System (EFS)', 'Data Storage Products: Google Cloud Storage (GCS)', 'Data Storage Products: Google Cloud Filestore ', 'Data Storage Products: None', 'Data Storage Products: Other',]\n\ncloud_df['num_platforms'] = cloud_df[cloud_df.columns[cloud_df.columns.str.startswith('Platform: ') & ~cloud_df.columns.str.contains('Platform: None')]].sum(axis=1)#.value_counts().to_frame().reset_index(drop=False)\n\ncloud_df = pd.concat([cloud_df, pd.get_dummies(responses[['Q28']], prefix='Experience')], axis=1)\n\n#cloud_df['Age']  = responses['Q1']\n#cloud_df['Gender']  = responses['Q2']\ncloud_df['Country']  = responses['Q3']\n\ncountry_dict = {'Iran, Islamic Republic of...' : 'Iran', \n                'Other' : 'Kazakhstan',  # Dummy, will be replaced in later step\n                'I do not wish to disclose my location' : 'Kazakhstan', # Dummy, will be replaced in later step\n               'Hong Kong (S.A.R.)' : 'Hong Kong'}\ncloud_df['Country_code'] = cloud_df['Country'].replace(country_dict).apply(lambda x: pc.country_name_to_country_alpha2(x, cn_name_format=\"default\"))\ncloud_df['Continent'] = cloud_df['Country_code'].apply(lambda x: pc.country_alpha2_to_continent_code(x))\ncloud_df['Continent']= np.where(((cloud_df.Country == 'Other') | (cloud_df.Country == 'I do not wish to disclose my location')), np.nan, cloud_df['Continent'])\n\n\n#cloud_df['Education']  = responses['Q4']\ncloud_df['Role']  = responses['Q5']\ncloud_df['Computing Platform']  = responses['Q11']\ncloud_df['Industry']  = responses['Q20']\ncloud_df['Company Size']  = responses['Q21']\n\ncloud_df['Activity_Analyze'] = responses['Q24_Part_1'].notna()\ncloud_df['Activity_Infrastructure'] = responses['Q24_Part_2'].notna()\ncloud_df['Activity_Prototypes'] = responses['Q24_Part_3'].notna()\ncloud_df['Activity_ML_services'] = responses['Q24_Part_4'].notna()\ncloud_df['Activity_Experiments'] = responses['Q24_Part_5'].notna()\ncloud_df['Activity_Research'] = responses['Q24_Part_6'].notna()\n\nsalary_dict = {'$0-999' : 500,\n               '1,000-1,999' : 1500,\n               '2,000-2,999' : 2500,\n               '3,000-3,999' : 3500, \n               '4,000-4,999' : 4500, \n               '5,000-7,499' : 6250,\n               '7,500-9,999' : 8750,\n               '10,000-14,999' : 12500,\n               '15,000-19,999' : 17500,\n               '20,000-24,999' : 22500,\n               '25,000-29,999' : 27500,\n               '30,000-39,999' : 35000,\n               '40,000-49,999' : 45000,\n               '50,000-59,999' : 55000,\n               '60,000-69,999' : 65000, \n               '70,000-79,999' : 75000,\n               '80,000-89,999' : 85000,\n               '90,000-99,999' : 95000,\n               '100,000-124,999' : 112500, \n               '125,000-149,999' : 137500,\n               '150,000-199,999' : 175000,\n               '200,000-249,999' : 225000,\n               '250,000-299,999' : 275000,\n               '300,000-499,999' : 400000,\n               '$500,000-999,999' : 750000, \n               '>$1,000,000' : 1000000,\n       }\ncloud_df['Salary']  = responses['Q25'].replace(salary_dict)\ncloud_df['Experience']  = responses['Q28']\n\ncloud_df['Cloud-certification programs (direct from AWS, Azure, GCP, or similar)']  = responses['Q40_Part_9'].notna()\n\ncloud_df['Hosted Notebook Products'] = responses['Hosted Notebook Products']\ncloud_df['Cloud Computing Platform'] = responses['Cloud Computing Platform']\ncloud_df['Specialized Hardware'] = responses['Specialized Hardware']\ncloud_df['Cloud Computing Products'] = responses['Cloud Computing Products']\ncloud_df['Data Storage Products'] = responses['Data Storage Products']\n\ncloud_students_df = cloud_df[(cloud_df.Role == 'Student')].copy()\n\ncloud_df = cloud_df[(cloud_df.Role != 'Currently not employed') & (cloud_df.Role != 'Student')]\n\n\n# Code edited from https:\/\/www.kaggle.com\/kayvanshah\/insights-into-kaggle-survey-2021\nfig = go.Figure()\n\nfig.add_trace(\n    go.Indicator(\n        mode = \"number\",\n        value = cloud_df.shape[0],\n        title = {\"text\": f\"Number of Professionals on Kaggle <br> out of {responses.shape[0]:,} Respondents\"},\n        domain = {'x': [0, 0.5], 'y': [0, 1]},\n    )\n)\n\nfig.update_layout(font_color = main_color, \n                  height=250)\n\nfig.show()\n\n#del responses","e8f73ee6":"# Load survey data from 2018\nmultiple_choice_responses_2018 = pd.read_csv(\"..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv\", low_memory = False)\nmultiple_choice_responses_2018 = multiple_choice_responses_2018[1:].reset_index(drop=True)\n\n# Load survey data from 2019\nmultiple_choice_responses_2019 = pd.read_csv(\"..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv\", low_memory = False)\nmultiple_choice_responses_2019 = multiple_choice_responses_2019[1:].reset_index(drop=True)\n\n# Load survey data from 2020\nmultiple_choice_responses_2020 = pd.read_csv(\"..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv\", low_memory = False)\nmultiple_choice_responses_2020 = multiple_choice_responses_2020[1:].reset_index(drop=True)\n\n\ncols_2018 = ['Q15_Part_1', 'Q15_Part_2', 'Q15_Part_3', 'Q15_Part_4', 'Q15_Part_5', 'Q15_Part_7'] # 'Q15_Part_6': None\nmultiple_choice_responses_2018['cloud_usage'] = multiple_choice_responses_2018[cols_2018].any(axis=1)\n\ncols_2019 = ['Q29_Part_1', 'Q29_Part_2', 'Q29_Part_3', 'Q29_Part_4', 'Q29_Part_5', 'Q29_Part_6', 'Q29_Part_7',\n            'Q29_Part_8', 'Q29_Part_9', 'Q29_Part_10', 'Q29_Part_12'] # 'Q29_Part_11': None\nmultiple_choice_responses_2019['cloud_usage'] = multiple_choice_responses_2019[cols_2019].any(axis=1)\n\ncols_2020 = ['Q26_A_Part_1', 'Q26_A_Part_2', 'Q26_A_Part_3', 'Q26_A_Part_4', 'Q26_A_Part_5', 'Q26_A_Part_6', 'Q26_A_Part_7',\n            'Q26_A_Part_8', 'Q26_A_Part_9', 'Q26_A_Part_10', 'Q26_A_OTHER'] # 'Q26_A_Part_11': None\nmultiple_choice_responses_2020['cloud_usage'] = multiple_choice_responses_2020[cols_2020].any(axis=1)\n\ncloud_df['cloud_usage'] = cloud_df[cloud_df.columns[cloud_df.columns.str.startswith('Platform: ') & ~cloud_df.columns.str.contains('Platform: None')]].any(axis=1)\n\n# Visualize\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(8, 6))\n\nwidth = 0.5 \nlabels = [2018, 2019, 2020, 2021]\nx = np.arange(len(labels))\n\ny = [multiple_choice_responses_2018[(multiple_choice_responses_2018.Q6 != 'Student') & (multiple_choice_responses_2018.Q6 != 'Not employed')]['cloud_usage'].value_counts(normalize=True).loc[True]*100, \n     multiple_choice_responses_2019[(multiple_choice_responses_2019.Q5 != 'Student') & (multiple_choice_responses_2019.Q5 != 'Not employed')]['cloud_usage'].value_counts(normalize=True).loc[True]*100, \n     multiple_choice_responses_2020[(multiple_choice_responses_2020.Q5 != 'Student') & (multiple_choice_responses_2020.Q5 != 'Not employed')]['cloud_usage'].value_counts(normalize=True).loc[True]*100, \n     cloud_df['cloud_usage'].value_counts(normalize=True).loc[True]*100]\n\nrects = ax.bar(x, y, width, color=[main_color, main_color, main_color, highlight_color2])\n\nax.set_xlabel(\"\")\nax.set_ylim([0, 60])\nax.set_xlim([-0.5, 3.5])\n\nax.set_ylabel(\"Percentage [%]\")\nax.set_xticks(x)   \nax.set_xticklabels(labels)\nax.add_patch(Rectangle((-0.5, 0), 1, 100, fill=True, alpha=0.2, color='grey', lw=0))\n\nz = np.polyfit(x[1:], y[1:], 2)\np = np.poly1d(z)\nx_new = np.linspace(1, 3, 500)\nf = interp1d(x[1:], p(x[1:]), kind='quadratic')\ny_smooth=f(x_new)\nax.plot (x_new,y_smooth, \"--\", color=highlight_color, linewidth=3)\n\nplt.suptitle('Percentage of Kagglers with Regular Usage of Cloud Computing Platforms by Year')\nplt.tight_layout()\nplt.show()\n\n# del multiple_choice_responses_2018, multiple_choice_responses_2019, multiple_choice_responses_2020","3676152a":"temp = cloud_df[cloud_df.columns[cloud_df.columns.str.startswith('Platform: ') & ~cloud_df.columns.str.contains('Platform: None')]].sum(axis=0).to_frame().T\n\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(12, 6))\nsns.barplot(data=temp[['Platform: Amazon Web Services (AWS)',\n       'Platform: Google Cloud Platform (GCP)', 'Platform: Microsoft Azure',\n       'Platform: IBM Cloud \/ Red Hat', 'Platform: Oracle Cloud',\n       'Platform: VMware Cloud', 'Platform: SAP Cloud',\n       'Platform: Salesforce Cloud', 'Platform: Alibaba Cloud',\n       'Platform: Tencent Cloud', 'Platform: Other']], color=main_color)\nfor tick in ax.get_xticklabels():\n    tick.set_rotation(90)\n\nlabels = [item.get_text().replace('Platform: ', '') for item in ax.get_xticklabels()]\nax.set_xticklabels(labels)\n\nax.set_title('Popularity of Cloud Computing Platforms')\nplt.show()","a040021b":"temp = cloud_df.groupby('Country')[cloud_df.columns[cloud_df.columns.str.startswith('Platform: ') & ~cloud_df.columns.str.contains('Platform: None')]].sum()\n\ntemp['all'] = temp.sum(axis=1)\n\nfor c in temp.columns:\n    temp[c] = temp[c] \/ temp['all'] * 100\n    \ntemp = temp.drop('all', axis=1)\n\ntemp = temp.T\n   \nrows = []\n\nfor c in temp.columns:\n    abc = temp[c].sort_values(ascending=False)\n    rows.append([c, abc.index[0]])\n\ndf = pd.DataFrame(rows, columns=[\"Country\", \"Most Popular Cloud Platform\"])\n\nfig = px.choropleth(locations=df['Country'], \n                    locationmode=\"country names\",\n                    color=df[\"Most Popular Cloud Platform\"] ,\n                    color_discrete_map={'Platform: Google Cloud Platform (GCP)' : main_color,\n                                        'Platform: Amazon Web Services (AWS)': contrast_color,\n                                        'Platform: Microsoft Azure': contrast_color2,\n                                        'Platform: Alibaba Cloud': highlight_color2}\n                   )\n\nfig.update_layout(\n    width=750,\n    legend=dict(\n        orientation=\"h\",\n        yanchor=\"bottom\",\n        y=0.9,\n        xanchor=\"right\",\n        x=1, \n        title='',\n    ),\n    title={\n        'text': \"Most Popular Cloud Computing Platform by Country\",\n        'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'\n    }\n)\n\nfig.show()","8a013f42":"temp['Row'] = temp[temp.columns[temp.columns != 'China']].mean(axis=1)\ntemp = temp[['Row', 'China']].T\n\ntemp = temp[['Platform: Amazon Web Services (AWS)', 'Platform: Microsoft Azure',\n       'Platform: Google Cloud Platform (GCP)', 'Platform: Alibaba Cloud',\n       'Platform: Tencent Cloud']]\ncategories = list([c.replace('Platform: ', '').replace(' ', '\\n') for c in temp.columns])\n\nangles = [n \/ float(len(categories)) * 2 * pi for n in range(len(categories))]\nangles += angles[:1]\n\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(7, 7),\n                       subplot_kw=dict(polar=True))\n\nplt.xticks(angles[:-1], categories)\nplt.ylim(0, 40)\n\nvalues = temp.iloc[0].values.flatten().tolist()\nvalues += values[:1]\nax.plot(angles, values, main_color, linewidth=3, linestyle='solid', label='Rest of World')\nax.fill(angles, values, main_color, alpha=0.6)\n\nvalues = temp.iloc[1].values.flatten().tolist()\nvalues += values[:1] \nax.plot(angles, values, highlight_color2, linewidth=3, linestyle='solid', label='China')\nax.fill(angles, values, highlight_color2, alpha=0.2)\n\nax.set_title('Comparison of Popularity of Cloud Computing Platforms [%]\\n between China and the Rest of the World')\nplt.legend(loc='lower left')\nplt.show()","5d50b6a2":"temp = cloud_df.groupby('Continent')[['cloud_usage']].sum()\ntemp['amount'] = cloud_df.Continent.value_counts()\n\nfor c in temp.columns:\n    temp[c]  =temp[c]\/temp['amount']*100\n\ntemp = temp.drop(['amount'], axis=1)\ntemp = temp.sort_values(by='cloud_usage', ascending=False)\n\ng = sns.catplot(data=temp.T, kind=\"bar\", color=main_color)\ng.set_axis_labels(\"\", \"Percentage [%]\").set(ylim=(0, 60))\nplt.title('Cloud Usage by Continent')\nplt.show()\n","d9eab236":"cols =  ['Platform: Amazon Web Services (AWS)', 'Platform: Microsoft Azure',\n        'Platform: Google Cloud Platform (GCP)',\n        'Platform: IBM Cloud \/ Red Hat', 'Platform: Oracle Cloud',\n        'Platform: SAP Cloud', 'Platform: Salesforce Cloud',\n        'Platform: VMware Cloud', 'Platform: Alibaba Cloud',\n        'Platform: Tencent Cloud', 'Platform: Other']\n\ntemp = cloud_df.groupby('Continent')[cols].sum()\ntemp['amount'] = cloud_df.Continent.value_counts()\n\nfor c in temp.columns:\n    temp[c]  =temp[c]\/temp['amount']*100\n\ntemp = temp.drop(['amount'], axis=1)\ntemp = temp.T\n\n\ncustom_colors = [\n    [main_color, main_color, main_color,main_color, main_color, main_color,main_color, main_color, main_color,main_color, main_color],\n    [main_color, main_color, main_color,main_color, main_color, main_color,main_color, main_color, highlight_color2, highlight_color2, main_color],\n    [main_color, main_color, main_color,main_color, main_color, main_color,main_color, main_color, main_color,main_color, highlight_color2],\n    [main_color, main_color, main_color,main_color, main_color, main_color,main_color, main_color, main_color,main_color, main_color],\n    [main_color, main_color, main_color,highlight_color2, highlight_color2, main_color,main_color, highlight_color2, main_color,main_color, main_color],\n    [main_color, main_color, main_color,main_color, main_color, main_color,main_color, main_color, main_color,main_color, main_color],\n]\n\nf, ax = plt.subplots(nrows=2, ncols=3, figsize=(12, 12))\n\nwidth = 0.6 \nlabels = [c.replace('Platform: ', '') for c in temp.index.values]\nx = np.arange(len(labels))\ni=0\nj=0\nfor n, col in enumerate(['NA', 'AS', 'EU', 'SA', 'AF', 'OC']):    \n    j = n % 3\n\n    y = temp[col].values\n    rects = ax[i, j].bar(x, y, width, color=custom_colors[n])\n\n    ax[i, j].set_xlabel(\"\")\n    ax[i, j].set_ylim([0, 32])\n    ax[i, j].set_ylabel(\"Popularity [%]\")\n    ax[i, j].set_xticks(x)\n    ax[i, j].set_title(f'{col} (n={len(cloud_df[cloud_df.Continent == col])})')    \n    ax[i, j].set_xticklabels(labels, rotation=90)\n    if j == 2:\n        i = i+1\nplt.suptitle('Popularity of Cloud Computing Platforms by Continent')\nplt.tight_layout()\nplt.show()","f6818d39":"cloud_df['Cloud Computing Platform_num'] = cloud_df['Cloud Computing Platform'].replace({\n   ' Amazon Web Services (AWS) ' :0, \n    ' Google Cloud Platform (GCP) ':1, \n    \n    ' Microsoft Azure ' : 2,\n    'Multiple' : 3, \n    'None' :-1, \n    ' Oracle Cloud ' : -1, \n    ' IBM Cloud \/ Red Hat ' : -1,\n    'Other' :-1, \n    ' Alibaba Cloud ' : -1,\n    ' Tencent Cloud ' : -1, \n    ' VMware Cloud ' : -1, \n    ' SAP Cloud ' :  -1,\n    ' Salesforce Cloud ': -1 \n})\n\nfig = px.parallel_categories(\n    cloud_df[((cloud_df['Platform: Amazon Web Services (AWS)']) |\n                                       (cloud_df['Platform: Microsoft Azure']) |\n                                       (cloud_df['Platform: Google Cloud Platform (GCP)'])) &\n                                      (cloud_df.num_platforms == 1)],\n    dimensions=[\n        'Cloud Computing Platform',\n        'Data Storage Products',\n        'Specialized Hardware',\n        'Cloud Computing Products'\n    ],\n                            color='Cloud Computing Platform_num', \n    color_continuous_scale= px.colors.sequential.Teal,\n)\n\nfig.show()\n","e43ddd37":"f, ax = plt.subplots(nrows=1, ncols=3, figsize=(16, 8))\n\n# Amazon\ntemp = (cloud_df[(cloud_df['Platform: Amazon Web Services (AWS)'] == True)][['Products: Amazon Elastic Compute Cloud (EC2)',                                                                              'Data Storage Products: Amazon Simple Storage Service (S3)',\n                                                                             'Data Storage Products: Amazon Elastic File System (EFS)']].sum(axis=0)\/len(cloud_df[(cloud_df['Platform: Amazon Web Services (AWS)'] == True)])*100).to_frame()\ntemp.columns = ['Percentage [%]']\ntemp.reset_index(drop=False, inplace=True)\nsns.barplot(x=\"index\", y='Percentage [%]', data=temp, ax=ax[0], palette=[main_color, contrast_color, contrast_color])\nax[0].set_title('Amazon Web Services (AWS)')\n\n# Google\ntemp = (cloud_df[(cloud_df['Platform: Google Cloud Platform (GCP)'] == True)][['Products: Google Cloud Compute Engine', 'Data Storage Products: Google Cloud Storage (GCS)', 'Data Storage Products: Google Cloud Filestore ']].sum(axis=0)\/len(cloud_df[(cloud_df['Platform: Google Cloud Platform (GCP)'] == True)])*100).to_frame()\ntemp.columns = ['Percentage [%]']\ntemp.reset_index(drop=False, inplace=True)\nsns.barplot(x=\"index\", y='Percentage [%]', data=temp, ax=ax[1], palette=[main_color, contrast_color, contrast_color])\nax[1].set_title('Google Cloud Platform (GCP)')\n\n# Microsoft\ntemp = (cloud_df[(cloud_df['Platform: Microsoft Azure'] == True)][['Products: Microsoft Azure Virtual Machines', 'Data Storage Products: Microsoft Azure Data Lake Storage ',\n                                                                             'Data Storage Products: Microsoft Azure Disk Storage ']].sum(axis=0)\/len(cloud_df[(cloud_df['Platform: Microsoft Azure'] == True)])*100).to_frame()\ntemp.columns = ['Percentage [%]']\ntemp.reset_index(drop=False, inplace=True)\nsns.barplot(x=\"index\", y='Percentage [%]', data=temp, ax=ax[2], palette=[main_color, contrast_color, contrast_color])\nax[2].set_title('Microsoft Azure')\n\ncustom_lines = [Line2D([0], [0], color=main_color, lw=8),\n                Line2D([0], [0], color=contrast_color, lw=8)]\n\nfor i in range(3):\n    ax[i].set_ylim([0, 100])\n    ax[i].set_xlabel('')\n    for tick in ax[i].get_xticklabels():\n        tick.set_rotation(90)\n    ax[i].legend(custom_lines, ['Cloud Products', 'Data Storage Products'])\n    \n    labels = [item.get_text().replace('Data Storage Products: ', '').replace('Products: ', '') for item in ax[i].get_xticklabels()]\n    ax[i].set_xticklabels(labels)\n\nplt.tight_layout()\nplt.show()","0b65209e":"\"\"\"\ntemp = cloud_df[(cloud_df['Platform: Amazon Web Services (AWS)'] == True) | \n                  (cloud_df['Platform: Microsoft Azure'] == True) |\n                  (cloud_df['Platform: Google Cloud Platform (GCP)'] == True)]\ntemp['color'] = main_color\ntemp['Platform'] = temp[platform_cols].idxmax(1).replace({'Platform: Google Cloud Platform (GCP)' : 'Google Cloud Platform (GCP)',\n                                                          'Platform: Microsoft Azure' : 'Microsoft Azure', \n                                                          'Platform: Amazon Web Services (AWS)' : 'Amazon Web Services (AWS)'})\ntemp['Best Developer Experience'] = temp[experience_cols].idxmax(1).replace({'Experience_ Amazon Web Services (AWS) ' : 'Amazon Web Services (AWS)',\n                                                                             'Experience_ Google Cloud Platform (GCP) ' : 'Google Cloud Platform (GCP)',\n                                                                             'Experience_ Microsoft Azure ' : 'Microsoft Azure',\n                                                                             'Experience_They all had a similarly enjoyable developer experience' : 'Similarly enjoyable developer experience',\n                                                                             'Experience_None were satisfactory' : 'None were satisfactory'})\n\n# Edited from https:\/\/www.kaggle.com\/lynnxy\/a-deep-dive-into-the-kaggle-survey-from-2017-2021\nfig = px.parallel_categories(temp[['Platform', 'Best Developer Experience']], \n                             color_continuous_scale =  [main_color])\n\nfig.update_layout(\n    hovermode = 'x',\n    title = \"Best Developer Experience\",\n    font = dict(size = 14, color = 'black'),\n    titlefont = dict(size =16),\n    width=700,\n    margin=dict(\n        l=150,\n        r=250,\n        b=100,\n        t=100,\n        pad=4\n    ),)\n\nfig.show()\n\"\"\"","596cc06a":"temp = cloud_df.groupby('Company Size').cloud_usage.value_counts().to_frame()\ntemp.columns = ['users']\ntemp = temp.reset_index(drop=False)\ntemp = temp.pivot(index='Company Size', columns = 'cloud_usage').users\ntemp['all'] = temp.sum(axis=1)\n\nfor c in temp.columns:\n    temp[c] = temp[c]\/ temp['all'] * 100\n\ntemp = temp.drop('all', axis=1)\ntemp.columns = ['Not Using Cloud', 'Using Cloud']\n\ntemp = temp .reindex(['0-49 employees', '50-249 employees', '250-999 employees', '1000-9,999 employees', '10,000 or more employees', ])\nlabels = temp.index\nusing = temp['Using Cloud']\nnot_using = temp['Not Using Cloud']\nwidth = 0.5       # the width of the bars: can also be len(x) sequence\n\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(6, 6))\n\nax.bar(labels, using, width, label='Using Cloud', color=highlight_color2)\nax.bar(labels, not_using, width, bottom=using,label='Not Using Cloud', color=main_color)\n\nfor tick in ax.get_xticklabels():\n    tick.set_rotation(90)\n\nax.set_ylabel('Percentage [%]')\nax.legend()\nax.set_title('Usage of Cloud Computing by Company Size')\n\n\nx = np.arange(len(using))\ny = using\n#ax.scatter(x, using, marker='x', color=highlight_color2, s=10)\n\nz = np.polyfit(x, y, 1)\np = np.poly1d(z)\nax.plot(x,p(x),\"--\", color=highlight_color, linewidth=3)\n\nplt.show()","ca0617c2":"f, ax = plt.subplots(nrows=1, ncols=1, figsize=(12, 6))\nsns.countplot(data=cloud_df, x='Industry', palette=[contrast_color, main_color], hue='cloud_usage')\nfor tick in ax.get_xticklabels():\n    tick.set_rotation(90)\nplt.show()","fe228b2e":"temp = cloud_df[cloud_df.Industry.isin(['Computers\/Technology', 'Academics\/Education', 'Accounting\/Finance'])].groupby('Industry')[['Platform: Amazon Web Services (AWS)', 'Platform: Microsoft Azure', 'Platform: Google Cloud Platform (GCP)']].sum()\ntemp['all'] = temp.sum(axis=1)\n\nfor c in temp.columns:\n    temp[c] = temp[c] \/ temp['all']\n    \ntemp.drop('all', axis=1)\ntemp = temp.reset_index(drop=False)\n\nlabels = temp['Industry'].values\ny1 = temp['Platform: Amazon Web Services (AWS)'].values\ny2 = temp['Platform: Microsoft Azure'].values\ny3 = temp['Platform: Google Cloud Platform (GCP)'].values\n\nwidth = 0.2  \n\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(12, 6))\n\nx = np.arange(len(labels))\n\nrects1 = ax.bar(x -width, y1, width, label='AWS', color=main_color)\nrects2 = ax.bar(x, y2, width, label='Azure', color=contrast_color)\nrects2 = ax.bar(x + width, y3, width, label='GCP', color=contrast_color2)\n\nplt.xlabel(\"Industry\")\nplt.ylabel(\"Percentage [%]\")\nplt.title(\"Popularity of Top 3 Cloud Computing Platforms by Industry\")\n\nax.set_xticks(x)\nax.set_xticklabels(labels, rotation=90)\nplt.legend()\nplt.show()","e39e0edb":"temp_students = cloud_students_df[cloud_students_df.columns[cloud_students_df.columns.str.startswith('Platform 2y: ') & ~cloud_students_df.columns.str.contains('Platform 2y: None')]].sum(axis=0).to_frame().T\ntemp = cloud_df[cloud_df.columns[cloud_df.columns.str.startswith('Platform: ') & ~cloud_df.columns.str.contains('Platform: None')]].sum(axis=0).to_frame().T\n\n# create data\nlabels = temp.columns.values\ny1 = temp.values[0]\ny2 = temp_students.values[0]\n\nwidth = 0.2  # the width of the bars\n\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(12, 6))\n\nx = np.arange(len(labels))  # the label locations\n\nrects1 = ax.bar(x -width, y1, width, label='Professionals', color=[main_color, 'lightgrey', main_color, main_color, main_color, 'lightgrey', 'lightgrey', 'lightgrey', 'lightgrey', 'lightgrey', 'lightgrey'])\nrects2 = ax.bar(x, y2, width, label='Students', color=[highlight_color2, 'grey', highlight_color2, highlight_color2, highlight_color2, 'grey', 'grey', 'grey', 'grey', 'grey', 'grey'])\n\n\n\nplt.title(\"Comparison of Popularity of Cloud Computing Platforms between Students and Professionals\")\nplt.xlabel(\"Cloud Computing Platforms\")\nplt.ylabel(\"Count\")\nax.set_xticks(x)\nlabels = [item.replace('Platform: ', '') for item in labels]\nax.set_xticklabels(labels, rotation=90)\nplt.legend()\nplt.show()","af5a8f86":"most_common_roles = ['Data Scientist', 'Software Engineer', 'Data Analyst', 'Research Scientist', 'Machine Learning Engineer']\n\n\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(16, 7))\n# Prepare temporary dataframe for visualization\ntemp = cloud_df[cloud_df.Role.isin(most_common_roles)].groupby('Role').cloud_usage.value_counts(normalize=True).to_frame() * 100\ntemp.columns = ['percentage']\ntemp = temp.reset_index(drop=False)\ntemp = temp.pivot(index='Role', columns = 'cloud_usage')['percentage']\ntemp = temp.sort_values(by=True, ascending=True)\ntemp.insert(0, '', 100 - temp[0])\n\n# Plot\ntemp.plot.barh(stacked=True, color=['white', main_color, highlight_color2], edgecolor='none', legend=True, ax=ax)\nax.legend(['Cloud Usage', 'No', 'Yes'], loc='upper right')\nax.axvline(100, linestyle='--', color='black', alpha=.5)\nax.set_zorder(-100)\n\nax.set_xlim(0, 200)\nax.set_xticklabels(['100', '75', '50','25', '0','25', '50', '75','100'])\nax.set_xlabel('Percentage [%]')\nax.set_ylabel('')\n\nax.set_title(\"Cloud Usage by Role\")\nplt.tight_layout()\nplt.show()","71d1f116":"temp = cloud_df[cloud_df.Role.isin(most_common_roles)].groupby(['Country', 'Role', 'cloud_usage']).Salary.mean().to_frame().reset_index()\n\ntemp2 = temp.groupby(['Role', 'cloud_usage']).Salary.median().to_frame().reset_index(drop=False)\ntemp2 = temp2.pivot(index='Role', columns='cloud_usage').Salary\ntemp2['diff'] = temp2[False] - temp2[True]\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(16, 6))\nsns.boxplot(data=temp, x='Role', y='Salary', hue='cloud_usage', \n            fliersize=0, \n            palette=[main_color, highlight_color2],\n               order=temp2.sort_values(by='diff').index)\nax.set_ylim([0, 150000])\nax.set_ylabel('Salary [$]')\n\n    \nplt.legend(loc='upper left')\nplt.title('Salary Comparison According to Cloud Usage')\nplt.show()","824c2745":"fig = plt.figure(\n    FigureClass=Waffle, \n    rows=10, \n    values=list(cloud_df[cloud_df.cloud_usage == True]['Cloud-certification programs (direct from AWS, Azure, GCP, or similar)'].value_counts(normalize=True)*100),\n    labels=['No', 'Yes'],\n    figsize=(5, 5),\n    colors=(main_color, highlight_color2),\n    legend={'loc': 'upper left'},\n    title={'label': 'Regular Cloud Computing Platform Users \\nwith Cloud Certification'}\n)","e2d801f3":"# TO DO: Decide whether to use this later\nfig = plt.figure(\n    FigureClass=Waffle, \n    rows=10, \n    values=list(cloud_df.cloud_usage.value_counts(normalize=True)*100),\n    labels=['No', 'Yes'],\n    figsize=(5, 5),\n    colors=(main_color, highlight_color2),\n    legend={'loc': 'upper left'},\n    title={'label': 'Regular Usage of Cloud Computing Platforms \\namong all Professionals on Kaggle'}\n)\n\n\n## Cloud Usage by Country\n\ntemp = cloud_df.groupby('Country')['cloud_usage'].mean().to_frame().reset_index(drop=False)\nfig = px.choropleth(locations=temp['Country'], \n                    locationmode=\"country names\",\n                    color=temp[\"cloud_usage\"],\n                    color_continuous_scale = 'blues'\n                   )\n\nfig.update_layout(\n    width=700,\n    height=500,\nlegend=dict(\n    orientation=\"h\",\n    yanchor=\"bottom\",\n    y=1,\n    xanchor=\"right\",\n    x=1\n)\n)\nfig.show()\n\n# ## What type of computing platform do you use most often for your data science projects?\n# * Most professional Kagglers use a laptop or desktop as their main computing platform\n# * Only 11% of professional Kagglers use cloud computing platforms as their main computing platform for data science projects\n\n\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(12, 6))\nsns.countplot(cloud_df['Computing Platform'], order = cloud_df['Computing Platform'].value_counts().index)\nfor tick in ax.get_xticklabels():\n    tick.set_rotation(90)\nplt.show()\n\n#temp = cloud_df.groupby('Country')['cloud_usage'].mean().sort_values(ascending=False).to_frame().reset_index(drop=False)\n\n#f, ax = plt.subplots(nrows=1, ncols=1, figsize=(24, 6))\n#sns.barplot(data=temp, x='Country', y='cloud_usage', color='dodgerblue')\n#for tick in ax.get_xticklabels():\n#    tick.set_rotation(90)\n#plt.show()\n\n\n# ## Number of Cloud Computing Platforms a Kaggler uses on a Regular Basis\n# * Most professional Kagglers use only one cloud computing platform\n\ntemp = cloud_df[cloud_df.columns[cloud_df.columns.str.startswith('Platform: ') & ~cloud_df.columns.str.contains('Platform: cloud_df')]].sum(axis=1).value_counts().to_frame().reset_index(drop=False)\ntemp.columns = ['number_used_cc_products', 'num_users']\ntemp = temp.sort_values(by = 'number_used_cc_products')\ntemp = temp[1:]\n\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(14, 6))\nsns.barplot(data=temp, x='number_used_cc_products', y='num_users', palette = 'Blues')\nplt.show()\n\n\n## Cloud Platforms with the best developer experience?\n\n#* Kagglers seem to be satisfied with the cloud platform they are most regularly using\n#* Kagglers using multiple cloud platforms seem to find them comparable in developer experience\n\n#> Question 28 (which specific product) was only asked to respondents that selected more than one choice for Question 27-A (which of the following products).\n\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(10, 10))\n\ncorrmat = cloud_df[cloud_df.num_platforms > 1][cloud_df.columns[cloud_df.columns.str.startswith('Platform: ') | cloud_df.columns.str.startswith('Experience_')]].corr()\n\nplatform_cols =  ['Platform: Amazon Web Services (AWS)', \n                  'Platform: Microsoft Azure',\n                  'Platform: Google Cloud Platform (GCP)',\n                  'Platform: IBM Cloud \/ Red Hat', \n                  'Platform: Oracle Cloud',\n                  'Platform: SAP Cloud', \n                  'Platform: Salesforce Cloud',\n                  'Platform: VMware Cloud', \n                  'Platform: Alibaba Cloud',\n                  'Platform: Tencent Cloud', \n                  'Platform: Other']\n\nexperience_cols = [ 'Experience_ Amazon Web Services (AWS) ',\n                    'Experience_ Microsoft Azure ',\n                    'Experience_ Google Cloud Platform (GCP) ',\n                    'Experience_ IBM Cloud \/ Red Hat ', \n                    'Experience_ Oracle Cloud ', \n                    'Experience_ SAP Cloud ',\n                    'Experience_ Salesforce Cloud ',\n                    'Experience_ VMware Cloud ', \n                    'Experience_ Alibaba Cloud ',\n                    'Experience_ Tencent Cloud ',\n                    'Experience_Other',\n                    'Experience_They all had a similarly enjoyable developer experience',\n                    'Experience_None were satisfactory',]\n\ncorrmat = corrmat[platform_cols].T\ncorrmat = corrmat[experience_cols]\n                  \nsns.heatmap(corrmat, annot=True, cmap='Blues', vmin=0, vmax=0.5, linewidths=1, fmt='.1f')\n\n#ax.add_patch(Rectangle((0, 12), 3, 3, fill=False, alpha=1, color='k', lw=5))\n\nplt.show()\n\n# ## Correlation between Regularly Used Cloud Platform and Cloud Product\n# * As expected, there is a high correlation between the used cloud platform and the used cloud products\n# > Question 29-A (which specific AWS\/Azure\/GCP products) was only asked to respondents that selected the relevant answer choices for Question 27-A (which of the following companies).\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(12, 12))\n\ncorrmat = cloud_df[cloud_df.columns[cloud_df.columns.str.startswith('Platform:') | cloud_df.columns.str.startswith('Products:')]].corr()\n\nsns.heatmap(corrmat, annot=True, cmap='Blues', vmin=0, vmax=1,\n           mask=np.triu(corrmat), linewidths=1, fmt='.1f')\n\nax.add_patch(Rectangle((0, 12), 3, 3, fill=False, alpha=1, color='k', lw=5))\n\nplt.show()\n\n\n\n\n#####\nselected_continents = ['AS', 'NA', 'EU',]# 'SA', 'AF']\nselected_industries = ['Computers\/Technology', \n                       'Academics\/Education',\n                       'Accounting\/Finance',\n                       'Manufacturing\/Fabrication', \n                       'Medical\/Pharmaceutical',\n                       'Online Service\/Internet-based Services',\n                       'Government\/Public Service',\n                       #'Retail\/Sales', \n                       #'Energy\/Mining',\n                       #'Insurance\/Risk Assessment'\n                      ]\n\ntemp = cloud_df[cloud_df.Continent.isin(selected_continents) & cloud_df.Industry.isin(selected_industries)].groupby(['Industry', 'Continent']).agg(Sum=('cloud_usage','sum'), Count= ('cloud_usage','count'))\n\ntemp['Sum'] = temp['Sum'] \/ temp['Count'] * 100\ntemp = temp.reset_index(drop=False)\ntemp = temp.pivot(index='Industry', columns = 'Continent')['Sum']\n#temp = temp.sort_values(by='NA', ascending=False)\ntemp = temp.reindex(index = selected_industries)\n\n\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(8, 6))\n\nsns.heatmap(temp, cmap=custom_cmap, annot=True, linewidths=1, fmt='.0f')#, vmin=0, vmax=100)\n\nplt.show()\n\n#####\nf, ax = plt.subplots(nrows=1, ncols=1, figsize=(8, 6))\n\nplatform_cols =  ['Platform: Alibaba Cloud',\n                  'Platform: Tencent Cloud']\n\nexperience_cols = [ 'Experience_ Alibaba Cloud ',\n                    'Experience_ Tencent Cloud ',\n                    'Experience_They all had a similarly enjoyable developer experience',\n                    'Experience_None were satisfactory',]\n\ntemp = cloud_df[(cloud_df['Platform: Alibaba Cloud'] == True) & \n                  (cloud_df['Platform: Tencent Cloud'] == True)][experience_cols]\n\n\ntemp = temp.sum(axis=0).to_frame().reset_index()\n\nsns.barplot(data=temp, y=0,x='index', color=main_color)\nax.set_title('Developer Experience among Kagglers \\nthat use Alibaba Cloud and Tencent Cloud on a regular basis')\n","25b60994":"# Who Uses Cloud Computing?\n\n> **Organizations of every type, size, and industry are using the cloud for a wide variety of use cases**, such as data backup, disaster recovery, email, virtual desktops, software development and testing, big data analytics, and customer-facing web applications. For example, healthcare companies are using the cloud to develop more personalized treatments for patients. Financial services companies are using the cloud to power real-time fraud detection and prevention. And video game makers are using the cloud to deliver online games to millions of players around the world. - [What is cloud computing?](https:\/\/aws.amazon.com\/what-is-cloud-computing\/?nc1=h_ls)\n\n\n* The regular usage of cloud computing platforms slightly increases with the company size","bb0ee3a7":"# Job\n\nAccording to a study by Morgan Philips Group [6] in December 2019, the demand for data scientist with cloud platform skills is rising.\n> AWS showed up in around 20% of listings with the keyword \u2018Data Scientist\u2019, while Azure appeared in around 10%. - Morgan Philips Group [6] \n\n\nOn average Kagglers that use cloud computing platforms on a regular basis have a **salary that is 1.7 times** the amount of Kagglers not using cloud platforms on a regular basis in their country. That is quite the impressive amount!\n\nMachine Learning Engineers using cloud computing platforms on a regular basis have a median annual salary that is more than $21,000 higher than those who don't. \n\nFor Data Scientists the difference is more than $18,000.","3e81fc86":"In fact, if we have a closer look at the popularity of cloud computing platforms in China compared to the rest of the world, we can see that **Alibaba Cloud and Tencent Cloud are more popular than AWS, Microsoft Azure and GCP in China**.","04979038":"## Cloud Usage by Industry\n* The industries with the highest cloud computing platform among Kagglers are 'Computers\/Technology', 'Academics\/Education', 'Accounting\/Finance'\n* The industry 'Computers\/Technology' is the only industry where more Kagglers use cloud computing platforms than not","626ae3eb":"# Comparison of the Big Three\n\n|  | AWS | Azure | GCP |\n| --- | --- | --- | --- |\n| **On Market since** [4] | 2004 | 2010 | 2008 |\n| **Cloud Computing Products** | Amazon Elastic Compute Cloud (EC2) | Microsoft Azure Virtual Machines | Google Cloud Compute Engine |\n| **Data Storage Products** | Amazon Simple Storage Services (S3) | Microsoft Azure Data Lake Storage | Google Cloud Storage (GCS) |\n| | Amazon Elastic File System (EFS) | Microsoft Azure Disk Storage | Google Cloud Filestore |\n\n","92759830":"# Cloud As An Example of the Internet's Fragmentation\n\nIn October 2020, The Economist [5] wrote the following paragraph in an article, which we will disect in the following section:\n> \"The cloud has been seen as an example of the internet\u2019s fragmentation. **Alibaba's and Tencent's cloud arms dominate in China** and are making some inroads elsewhere in Asia. **Europe is so anxious about American firms** that it has launched a state-backed rival, called Gaia-x. Businesses in **poor countries may struggle for access to the cloud**, slowing their development.\" - The Economist [5]","c1c3d089":"## Popularity by Industry\n* AWS is most popular in the industries Computers\/Technology and Accounting\/Finance\n* GCP is most popular in academia","f2c07668":"> For questions about cloud computing products, students [...] were given an alternate set of questions that asked them **\"what products they would like to become familiar with\" instead of asking them \"which products they use most often\"**. [...] \n\n* In contrast to the industry where AWS is ahead of GCP in popularity, both cloud computing platforms seem to be similarly popular among students. Might this be related to the fact that GCP is the most popular cloud computing platform in academia?\n* In contrast to the industry, students are also more interested in other platforms than the big three AWS, GCP and Azure: IBM Cloud \/ Red Hat and Oracle Cloud.\n","ee2c7a04":"* Only 11.8 % of Kagglers using Cloud Computing Platforms on a regular basis have begun or completed cloud-certification programs.","a079bb0e":"According to the Cambridge Dictionary [1] \"having your head in the clouds\" means to not know the facts of a situation.\nLet's get our heads out of the clouds by learning some facts about the current situation of cloud computing with the help of the 2021 Kaggle survey data.\n\n**Key Findings:**\n- Around **41 % of professionals on Kaggle** use cloud computing platforms on a regular basis\n- Globally, the **three most popular cloud computing platforms are AWS, GCP, and Azure**\n- **Alibaba Cloud and Tencent Cloud dominate the Chinese market**\n- The cloud usage is comparatively **low in Europe and Africa**\n- On average across all countries, Kagglers using cloud platforms on a regular basis **earn 1.7 times** more than those who don't\n- Aside from the big three, **students** are also interested in becoming familiar with **IBM Cloud \/ Red Hat and Oracle Cloud**\n\n![peiheng-yang-9ULdyKGdqZo-unsplash(1).jpg](attachment:7ebfa392-9d49-44f6-9c00-e90538f4e019.jpg)\n\nPhoto by <a href=\"https:\/\/unsplash.com\/@yeahatnet?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Peiheng Yang<\/a> on <a href=\"https:\/\/unsplash.com\/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash<\/a>","b8e9c41f":"For the next section, we will look at the five most common roles Kagglers have: 'Data Scientist', 'Software Engineer', 'Data Analyst', 'Research Scientist', and 'Machine Learning Engineer'.\n\nThe 'Data Scientist' role is the only role with more Kagglers using cloud computing products on a regular basis (52%) than those who don't (48%).","47c03bf4":"## Developer Experience\nIf we have a look at Kagglers using all three AWS, Azure and GCP on a regular basis, AWS and GCP seem to deliver better developer experience than Azure.\nSimilarly Alibaba Cloud seems to offer a better developer experience than Tencent Cloud although a lot of Kagglers seem to enjoy the both similarly.","73b14366":"# References\n\n[1] Cambridge Dictionary. (2021). [Have Your Head in the Clouds](https:\/\/dictionary.cambridge.org\/de\/worterbuch\/englisch\/have-your-head-in-the-clouds).\n\n[2] Penzel, D., Kryvinska, N., Strauss, C., & Gregu\u0161, M. (2015). The Future of Cloud Computing: A SWOT Analysis and Predictions of Development. 2015 3rd International Conference on Future Internet of Things and Cloud, 391-397.\n\n[3] Ghaffari, K., Delgosha, M. S., & Abdolvand, N. (2014). Towards cloud computing: a SWOT analysis on its adoption in SMEs. arXiv preprint arXiv:1405.1932.\n\n[4] Hlova, M. (2020, August 6). [Comparing the Big 3: AWS vs Azure vs GCP](https:\/\/www.n-ix.com\/comparing-big-3-aws-azure-gcp\/)\n\n[5] The Economist (2020, October 22). [Is tech getting more competitive?](https:\/\/www.economist.com\/leaders\/2020\/10\/22\/is-tech-getting-more-competitive)\n\n[6] Morgan Philips Group (2020, May 14). [Cloud computing and the top skills needed by data scientists](https:\/\/www.morganphilips.com\/en\/insights\/cloud-computing-and-the-top-skills-needed-by-data-scientists)\n\n[7] Aggarwal, G. (2021, January 15). [How The Pandemic Has Accelerated Cloud Adoption](https:\/\/www.forbes.com\/sites\/forbestechcouncil\/2021\/01\/15\/how-the-pandemic-has-accelerated-cloud-adoption\/?sh=5e57dbd96621)","9b532a19":"At a first glance, you can see that there are **three cloud computing platforms, which dominate the global market**: [Amazon Web Services (AWS)](https:\/\/aws.amazon.com\/de\/), [Google Cloud Platform](https:\/\/cloud.google.com\/gcp\/), and [Microsoft Azure](https:\/\/azure.microsoft.com\/en-us\/). \nAmong these \"big three\", **AWS is the most popular** among professionals on Kaggle.","84c6f316":"# Data Overview\n\nFor the following analysis, **we will mainly consider \"professionals\", meaning that we exclude students and currently unemployed**. The reason for this is that we want to evaluate the current cloud computing landscape in the industry. Also, Kaggle has used an alternatve set of questions for students regarding cloud computing, which we can later use to evaluate future trends:\n\n> For questions about cloud computing products, students and respondents that have never spent money in the cloud were given an alternate set of questions that asked them \"what products they would like to become familiar with\" instead of asking them \"which products they use most often\". [...] - see [kaggle_survey_2021_methodology.pdf](https:\/\/www.kaggle.com\/c\/kaggle-survey-2021\/data)\n\nThis reduces the amount of considered respondents from about 25,973 to 17,183.","43e2ce7b":"But if we have a look at the most popular cloud platform by country, we can see that **Alibaba Cloud is the most popular cloud computing platform in China** in contrast to the rest of the world.","8b181aa7":"While North America is the leading continent in regards to cloud usage, the **usage of cloud computing platforms is comparatively low in Europe and Africa**. ","a182a122":"# Introduction\n\nThe COVID-19 pandemic has necessitated online education and remote work for many children and adults globally. \nThis has accelerated the adoption of cloud computing in many organizations. [7]\nEven in the 2021 Kaggle Survey data, we can see an **accelerated increase** in the usage of cloud computing platforms in comparison to the previous years 2019 and 2020.\nAmong the 17,183 professionals of the 2021 survey respondents, roughly **41 % use cloud computing platforms on a regular basis**.\n\nThe **drop from the 2018 survey data is assumed to be caused by the rephrasing of the question** from \"Which of the following cloud computing services have you used at work or school in the last 5 years?\" in 2018 to \"Which of the following cloud computing platforms do you use on a regular basis?\" starting from 2019. \nTherefore, we can assume that the percentage of Kagglers having some experience with cloud computing platforms is higher than those who use them on a regular basis.","21c960f9":"# Data Science Workflow in the Cloud\n\n* Expand computing power\n* Easier deployment of data solutions\n* Data Storage","85f4417c":"Cloud computing is on-demand access to computing resources (such as data storage, computing power, databases, and more) provided by a third party organization via the Internet (\"the cloud\") instead of owning and maintaining physical data centers and servers.\n\nThe three most common models of cloud services are IaaS (Infrastructure-as-a-Service), PaaS (Platform-as-a-Service), and SaaS (Software-as-a-Service). Each type of cloud computing provides different levels of control as shown as below:\n\n![Screenshot 2021-10-27 at 23.20.29.png](attachment:6c6f42f0-fc98-40c6-8d0a-368a0702bf7f.png)\nImage Source: [Cloud Computing](https:\/\/www.ibm.com\/cloud\/learn\/cloud-computing)\n\nSince you only pay for consumed computing resources instead of maintaining your own IT infrastructure, this can lead to **cost savings**. Cloud computing also provides **elasticity**, which means that you can scale the needed computng resources up or down quickly. Furthermore cloud computing improves **agility**, which means that organizations have access to a broad range of technologies that enable them to start using enterprise applications in minutes.\n\n\n\nA SWOT Analysis on Cloud Computing by [2]\n\n| Strengths | Weaknesses | Opportunities | Risks |\n| --- | --- | --- | --- |\n| **Decreased Costs** | Trust Issues | Disruptive Technology | Competition |\n| **Scalability and Flexibility** | **Loss in Control** | Green IT | **Standards** |\n| Reduction Potential in Administration | **Lock-in Effect (Migration)** | Complexity | **Regulation** |\n| Effective Use | Reliability | Virtualization | **Security** |\n| Location Independence | Internet Connection Required [3] | New Markets | Maturity |\n|  |  | No upfront investments [3] | |"}}