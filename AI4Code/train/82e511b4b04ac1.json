{"cell_type":{"694cc3f0":"code","335fae98":"code","e1307354":"code","f8c83233":"code","0de9e8ab":"code","1f123e27":"code","aa2c5fdb":"code","cd12ca5e":"code","2469ab78":"markdown","f7788e36":"markdown","b4ab9028":"markdown","b4bd3330":"markdown","72b835ae":"markdown","27b1e8f7":"markdown","53cf776c":"markdown","8d633e38":"markdown"},"source":{"694cc3f0":"from keras.layers import Dense, Flatten, Conv2D, MaxPooling2D, Dropout\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.models import Sequential\nfrom sklearn.model_selection import train_test_split\nimport numpy as np\nimport pandas as pd\nimport os\n\nimport warnings\nwarnings.filterwarnings('ignore')","335fae98":"BASE_DIR = '..\/input\/a-large-scale-fish-dataset\/Fish_Dataset\/Fish_Dataset'\nclasses = [i for i in os.listdir(BASE_DIR)]\nclasses.remove('license.txt')\nclasses.remove('README.txt')\nclasses.remove('Segmentation_example_script.m')\n\nprint(classes)","e1307354":"image_shape = (590 , 445, 3)\nimage_paths = []\nimage_classes = np.array([[clas]*1000 for clas in classes]).reshape(-1)\n\nfor clas in classes:\n    image_paths.extend([os.path.join(BASE_DIR, clas,clas, i) for i in os.listdir(os.path.join(BASE_DIR, clas,clas))])\n    \ndata = pd.DataFrame({'path':image_paths, 'class':image_classes})\nprint(data.head())","f8c83233":"def data_gen(data):\n    X, Y  = train_test_split(data, stratify = data['class'], test_size=0.2)\n\n    train_datagen = ImageDataGenerator(rescale=1.0\/255, validation_split=0.1)\n    test_datagen = ImageDataGenerator(rescale=1.0\/255)\n\n    train_generator = train_datagen.flow_from_dataframe(X, x_col='path', y_col='class',\n                                                    target_size = image_shape[:-1], color_mode = 'rgb',\n                                                    class_mode = 'categorical', batch_size = 32, shuffle = True,\n                                                    subset = 'training')\n    val_generator = train_datagen.flow_from_dataframe(X, x_col = 'path', y_col = 'class',\n                                                    target_size = image_shape[:-1], color_mode = 'rgb',\n                                                    class_mode = 'categorical', batch_size = 32, shuffle = True,\n                                                    subset = 'validation')\n    test_generator = test_datagen.flow_from_dataframe(Y, x_col = 'path', y_col = 'class',\n                                                    target_size = image_shape[:-1], color_mode = 'rgb',\n                                                    class_mode = 'categorical')\n    return train_generator, val_generator, test_generator\n\n\ntrain_gen, val_gen, test_gen = data_gen(data)","0de9e8ab":"model = Sequential([\n    Conv2D(filters = 16, kernel_size = (3,3), activation='relu', padding='same', input_shape = image_shape),\n    MaxPooling2D(((2,2))),\n    \n    Conv2D(filters = 32, kernel_size = (3,3), activation='relu', padding='same'),\n    MaxPooling2D(((2,2))),\n    \n    Conv2D(filters = 64, kernel_size = (3,3), activation='relu', padding='same'),\n    MaxPooling2D((2,2)),\n    \n    Conv2D(filters = 64, kernel_size = (3,3), activation='relu', padding='same'),\n    MaxPooling2D((2,2)),\n   \n    Flatten(),\n    Dropout(0.3),\n    Dense(256, activation = 'relu'),\n    Dense(9, activation = 'softmax')\n])\n\nprint(model.summary())","1f123e27":"model.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy'])","aa2c5fdb":"history = model.fit(train_gen, validation_data = val_gen, epochs=25)","cd12ca5e":"model.evaluate(test_gen)","2469ab78":"# Load Packages\n\nLet's load the required packages.","f7788e36":"# Model Training and Results\nWe compile the model.","b4ab9028":"We read the files contained in \"Fish_Dataset\" to determine the classes. But there are also files outside of the class. We remove unnecessary files from the list.","b4bd3330":"We use Pandas DataFrame where we can store what each photo's paths and classes are.\n\nImportant Point  \u27a4  If you don't use '.reshape (-1)' you will get an error stating that the DataFrame could not be created.","72b835ae":"# Modelling\n\nWe use layers in Keras to create the model. A sequential model will allow us to make accurate predictions for this data.","27b1e8f7":"# Preprocessing\n\nWe divide the data into 3 parts: train, validation and test. We define a function for this. This function divides the data into two parts, X and Y. Then, the data in X is used to obtain *validation data* and *train data*. As a result, we find 6480 train images, 720 validation images, 1800 test images.","53cf776c":"We train our model using 25 epochs.","8d633e38":"**Data Summary**\n\nHello everyone, we will classify 9 different types of fish (*gilded head bream, red bream, sea bass, red mullet, horse mackerel, Black Sea sprat, striped red mullet, trout, shrimp*) in this kernel.\n* The total number of photos of each class is 1000. These photos are (590 x 445) pixels.\n* All classes are located in the \"Fish_Dataset\" folder."}}