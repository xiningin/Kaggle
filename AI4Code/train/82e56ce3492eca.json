{"cell_type":{"410899a1":"code","e975a617":"code","418caf7f":"code","a44e5b53":"code","97bfcaec":"markdown"},"source":{"410899a1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e975a617":"# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Apr 30 17:05:19 2020\n\n@author: Siddharth\n\"\"\"\n##############################################          subtask1     ##############################\nfrom textwrap import wrap\ncols=['sequence']\ndf1  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/LC528232.txt',names=cols)\ndf1['new'] = df1['sequence'].str.cat(sep='')\nl1=df1[\"new\"][0]\np1=wrap(l1, 1)\n#-----------------------------virus2---------------------------\ndf2  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/LC528233.txt',names=cols)\ndf2['new'] = df2['sequence'].str.cat(sep='')\nl2=df2[\"new\"][0]\np2=wrap(l2, 1)\n##############################end of virus 2###################\n\n#-----------------------------virus3---------------------------\ndf3  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/LC529905.txt',names=cols)\ndf3['new'] = df3['sequence'].str.cat(sep='')\nl3=df3[\"new\"][0]\np3=wrap(l3, 1)\n##############################end of virus 3###################\n\n#-----------------------------virus4---------------------------\ndf4  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/LC534418.txt',names=cols)\ndf4['new'] = df4['sequence'].str.cat(sep='')\nl4=df4[\"new\"][0]\np4=wrap(l4, 1)\n#print('p4',len(p4))\n##############################end of virus 4###################\n\n#-----------------------------virus5---------------------------\ndf5  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/LC534419.txt',names=cols)\ndf5['new'] = df5['sequence'].str.cat(sep='')\nl5=df5[\"new\"][0]\np5=wrap(l5, 1)\n#print('p5',len(p5))\n##############################end of virus 5###################\n\n\n\n#-----------------------------virus6---------------------------\ndf6  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/LR757995.txt',names=cols)\ndf6['new'] = df6['sequence'].str.cat(sep='')\nl6=df6[\"new\"][0]\np6=wrap(l6, 1)\n#print('p6',len(p6))\n##############################end of virus 6###################\n\n#-----------------------------virus7---------------------------\ndf7  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/LR757996.txt',names=cols)\ndf7['new'] = df7['sequence'].str.cat(sep='')\nl7=df7[\"new\"][0]\np7=wrap(l7, 1)\n#print('p7',len(p7))\n##############################end of virus 7###################\n\n#-----------------------------virus8---------------------------\ndf8  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/LR757998.txt',names=cols)\ndf8['new'] = df8['sequence'].str.cat(sep='')\nl8=df8[\"new\"][0]\np8=wrap(l8, 1)\n#print('p8',len(p8))\n##############################end of virus 8###################\n\n\n\n#-----------------------------virus9---------------------------\ndf9  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/MN908947.txt',names=cols)\ndf9['new'] = df9['sequence'].str.cat(sep='')\nl9=df9[\"new\"][0]\np9=wrap(l9, 1)\n#print('p9',len(p9))\n##############################end of virus9###################\n\n#-----------------------------virus10---------------------------\ndf10  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/MN938384.txt',names=cols)\ndf10['new'] = df10['sequence'].str.cat(sep='')\nl10=df10[\"new\"][0]\np10=wrap(l10, 1)\n#print('p10',len(p10))\n##############################end of virus 10###################\n\n#-----------------------------virus11---------------------------\ndf11  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/MN975262.txt',names=cols)\ndf11['new'] = df11['sequence'].str.cat(sep='')\nl11=df11[\"new\"][0]\np11=wrap(l11, 1)\n#print('p11',len(p11))\n##############################end of virus 13###################\n\n#-----------------------------virus12---------------------------\ndf12  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/MN985325.txt',names=cols)\ndf12['new'] = df12['sequence'].str.cat(sep='')\nl12=df12[\"new\"][0]\np12=wrap(l12, 1)\n#print('p12',len(p12))\n##############################end of virus 12###################\n\n#-----------------------------virus13---------------------------\ndf13  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/MN988668.txt',names=cols)\ndf13['new'] = df13['sequence'].str.cat(sep='')\nl13=df13[\"new\"][0]\np13=wrap(l13, 1)\n#print('p13',len(p13))\n##############################end of virus 13###################\n\n#-----------------------------virus14---------------------------\ndf14  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/MN988669.txt',names=cols)\ndf14['new'] = df14['sequence'].str.cat(sep='')\nl14=df14[\"new\"][0]\np14=wrap(l14, 1)\n#print('p14',len(p14))\n##############################end of virus 16###################\n\n#-----------------------------virus15---------------------------\ndf15  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/MN988713.txt',names=cols)\ndf15['new'] = df15['sequence'].str.cat(sep='')\nl15=df15[\"new\"][0]\np15=wrap(l15, 1)\n#print('p15',len(p15))\n##############################end of virus 15###################\n\n#-----------------------------virus16---------------------------\ndf16  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/MN994467.txt',names=cols)\ndf16['new'] = df16['sequence'].str.cat(sep='')\nl16=df16[\"new\"][0]\np16=wrap(l16, 1)\n#print('p16',len(p16))\n##############################end of virus 16###################\n\n#-----------------------------virus17---------------------------\ndf17  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/MN994468.txt',names=cols)\ndf17['new'] = df17['sequence'].str.cat(sep='')\nl17=df17[\"new\"][0]\np17=wrap(l17, 1)\n#print('p17',len(p17))\n##############################end of virus 17###################\n\n#-----------------------------virus18---------------------------\ndf18  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/MN996527.txt',names=cols)\ndf18['new'] = df18['sequence'].str.cat(sep='')\nl18=df18[\"new\"][0]\np18=wrap(l18, 1)\n#print('p18',len(p18))\n##############################end of virus 18###################\n\n#-----------------------------virus19---------------------------\ndf19  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/MN996529.txt',names=cols)\ndf19['new'] = df19['sequence'].str.cat(sep='')\nl19=df19[\"new\"][0]\np19=wrap(l19, 1)\n#print('p19',len(p19))\n##############################end of virus 21###################\n\n#-----------------------------virus20---------------------------\ndf20  = pd.read_csv('\/kaggle\/input\/covid19-genomes\/MN996530.txt',names=cols)\ndf20['new'] = df20['sequence'].str.cat(sep='')\nl20=df20[\"new\"][0]\np20=wrap(l20,1)\n#print('p20',len(p20))\n##############################end of virus 20###################\n\n\n\n\n\n#-----------------------------data frame-----------------------\ndf11 = pd.DataFrame({'seq_virus1':pd.Series(p1),'seq_virus2':pd.Series(p2),\n                      'seq_virus3':pd.Series(p3),'seq_virus4':pd.Series(p4),\n                      'seq_virus5':pd.Series(p5),'seq_virus6':pd.Series(p6),\n                      'seq_virus7':pd.Series(p7),'seq_virus8':pd.Series(p8),\n                      'seq_virus9':pd.Series(p9),'seq_virus10':pd.Series(p10),\n                      'seq_virus11':pd.Series(p11),'seq_virus12':pd.Series(p12),\n                     'seq_virus13':pd.Series(p13),'seq_virus14':pd.Series(p14),\n                     'seq_virus15':pd.Series(p15),'seq_virus16':pd.Series(p16),\n                     'seq_virus17':pd.Series(p17),'seq_virus18':pd.Series(p18),\n                     'seq_virus19':pd.Series(p19),'seq_virus20':pd.Series(p20)})\n\nprint(df11)","418caf7f":"############################################################   subtask2    #####################################\n\nd1 =df11['seq_virus1'].unique().tolist()\nd2 =df11['seq_virus2'].unique().tolist()\nd3 =df11['seq_virus3'].unique().tolist()\nd4 =df11['seq_virus4'].unique().tolist()\nd5 =df11['seq_virus5'].unique().tolist()\nd6 =df11['seq_virus6'].unique().tolist()\nd7 =df11['seq_virus7'].unique().tolist()\nd8 =df11['seq_virus8'].unique().tolist()\nd9 =df11['seq_virus9'].unique().tolist()\nd10=df11['seq_virus10'].unique().tolist()\nd11=df11['seq_virus11'].unique().tolist()\nd12=df11['seq_virus12'].unique().tolist()\nd13=df11['seq_virus13'].unique().tolist()\nd14=df11['seq_virus14'].unique().tolist()\nd15=df11['seq_virus15'].unique().tolist()\nd16=df11['seq_virus16'].unique().tolist()\nd17=df11['seq_virus17'].unique().tolist()\nd18=df11['seq_virus18'].unique().tolist()\nd19=df11['seq_virus19'].unique().tolist()\nd20=df11['seq_virus20'].unique().tolist()\n\na=d1+d2+d3+d4+d5+d6+d7+d8+d9+d10+d11+d12+d13+d14+d15+d16+d17+d18+d19+d20\ndef unique(list1): \n  \n    # intilize a null list \n    unique_list = [] \n    u=[]  \n    # traverse for all elements \n    for x in list1: \n        # check if exists in unique_list or not \n        if x not in unique_list: \n            unique_list.append(x) \n    # print list \n    for x in unique_list: \n        u.append(x)\n        #print (x)\n        #print(u)\nunique(a)\n\nx=['T','G','C','A','W','Y','S','7']\nx=sorted(x)\ns=list(range(2,10))\ndf11=df11.fillna(1)\ndf11=df11.replace(x,s)\n\nprint(df11)","a44e5b53":"############################################################# subtask3 #############################################\nimport matplotlib.pyplot as plt\na=df11['seq_virus1']-df11['seq_virus2']\nb=df11['seq_virus1']-df11['seq_virus3']\nc=df11['seq_virus1']-df11['seq_virus4']\nd=df11['seq_virus1']-df11['seq_virus5']\ne=df11['seq_virus1']-df11['seq_virus6']\nf=df11['seq_virus1']-df11['seq_virus7']\ng=df11['seq_virus1']-df11['seq_virus8']\nh=df11['seq_virus1']-df11['seq_virus9']\ni=df11['seq_virus1']-df11['seq_virus10']\nj=df11['seq_virus1']-df11['seq_virus11']\nk=df11['seq_virus1']-df11['seq_virus12']\nl=df11['seq_virus1']-df11['seq_virus13']\nm=df11['seq_virus1']-df11['seq_virus14']\nn=df11['seq_virus1']-df11['seq_virus15']\no=df11['seq_virus1']-df11['seq_virus16']\np=df11['seq_virus1']-df11['seq_virus17']\nq=df11['seq_virus1']-df11['seq_virus18']\nr=df11['seq_virus1']-df11['seq_virus19']\ns=df11['seq_virus1']-df11['seq_virus20']\n\nframe = {'values_a': a,'values_b': b,'values_c': c,'values_d': d,'values_e': e,'values_f': f,\n         'values_g': g,'values_h': h,'values_i': i,'values_j': j,'values_k': k,'values_l': l,\n         'values_m': m,'values_n': n,'values_o': o,'values_p': p,'values_q': q,\n         'values_r': r,'values_s': s} \ndf3 = pd.DataFrame(frame) \ndf3['final']=(df3['values_a']+df3['values_b']+df3['values_c']+df3['values_d']+df3['values_e']+df3['values_f']+\n             df3['values_g']+df3['values_h']+df3['values_i']+df3['values_j']+df3['values_k']+df3['values_l']+\n             df3['values_m']+df3['values_n']+df3['values_o']+df3['values_p']+df3['values_q']+df3['values_r']+\n             df3['values_s'])\n\n\ndf3['final1']=df3['final']\ndf3[\"final\"]= df3[\"final\"].replace(0, 19000)\ndf3['final12']=df3['final']-df3['final1']\ndf3[\"final12\"]= df3[\"final12\"].replace(19000, 10)\nplt.plot(df3['final12'])","97bfcaec":"In this approach i would like to comapre the genes of the corona virus that first appeared(in the given file) with the genes of the newest corona virus(in the file).after the comparison i would like to show in which region of the genes mutation has occured.\nthe reason why we need to identify the regions where mutation has not occoured is for the development of the vaccine against this virus.\n\nProgramming Language: We will foccus on Python.\n\nDisclaimer: The programmer is still learning python language.\n\nSUBTASKS:\n\nSubtask 1:break the genome into one letter(T C G A) and store it in one column of the data frame.(do it for all 20 virus            file).      \nSubtask 2: we will replace letter(T C G A) with number 1 to 4.                                                            \nSubtask 3: compare all genes of 20 virus and highlight those regions where mutaion has not taken, and then plot it using \n           matlpotlib.In the plot value of 10 represent that gene that has remained same(mutation has not occurred) in              20 virus and 0 represent that gene that has changed(mutation has occurred)."}}