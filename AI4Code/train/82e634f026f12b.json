{"cell_type":{"1cf9b5d0":"code","e4c89802":"code","e16be197":"code","fad198e5":"code","3701c93d":"code","20d78c2e":"code","dfbe6080":"code","c269ffd3":"code","3eacd82e":"code","2b3180fb":"code","715ff4d8":"code","d597546d":"code","15e99ab6":"code","c16297b4":"code","afa8a661":"code","ea91e823":"code","7ac1278e":"code","fd82cd61":"code","64f91967":"code","f0cf0086":"code","202fd1b2":"code","1d4d4f5e":"code","e22cf125":"code","b6fde921":"code","eefe265a":"code","560f8908":"code","cdffd5c3":"code","89788a79":"code","1c981cba":"code","87c1ef99":"code","b34eec37":"code","67abea19":"code","ed9114ff":"code","ea9f7086":"code","bbd17298":"code","88767068":"code","613bf097":"code","bc747894":"code","a53e949a":"code","f5499166":"code","ee525c76":"code","0fba89e7":"code","e9ddc271":"code","a54edbcb":"code","0b27ead7":"code","6a42de15":"code","0b8b2a79":"code","0a0b0619":"code","da3b769f":"code","93fc21b5":"code","2d9c143f":"code","01a496ae":"code","7c3c644f":"code","29fb80f9":"code","6c89ffc8":"code","57a251eb":"code","d865bf3c":"code","737b6643":"code","b4412085":"code","b0a1191d":"code","6a94684c":"code","c0a5b336":"code","a362a844":"code","c40a64f8":"code","823e8ce8":"code","9ed958c4":"code","9efa0df6":"code","abb84827":"code","17dbb4e6":"code","7eebb4ec":"code","12f041ae":"code","a70c59af":"code","2d12ae15":"code","8f439c23":"code","5f503ea2":"code","b34faf8b":"code","fc0579c1":"markdown","ff0e5156":"markdown","84f0326a":"markdown","3ccf5a00":"markdown","a2ddd1d1":"markdown","15b275d8":"markdown","2c29490b":"markdown","eddfb815":"markdown","0dacd4b0":"markdown","881f9ae5":"markdown","889f21d9":"markdown","3913d123":"markdown","5e37a991":"markdown","4853f443":"markdown","d9a5dea6":"markdown","4c020607":"markdown","1eadd13a":"markdown","f3ef782f":"markdown","cae2b81b":"markdown","fa69de95":"markdown","48aa6590":"markdown","3c9191ef":"markdown","e8d6aabe":"markdown","d27be2cf":"markdown","07a39814":"markdown","93229827":"markdown","4bf967d2":"markdown","c6e72880":"markdown","e3856e36":"markdown","543d2e1f":"markdown","c46e6735":"markdown","9a20553b":"markdown","3be0fdcf":"markdown","37235208":"markdown","e2813802":"markdown","837197e2":"markdown","79e6660e":"markdown","6bb3832d":"markdown","6e8d3f18":"markdown","3ffa90a1":"markdown","a247cf07":"markdown","8f8757f0":"markdown","01dc922f":"markdown","ac6704d9":"markdown","6d9a783e":"markdown"},"source":{"1cf9b5d0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib as plt\n%matplotlib inline\n\nfrom plotly.subplots import make_subplots\nimport plotly.express as px\nfrom plotly.offline import iplot,init_notebook_mode\nimport plotly.graph_objects as go\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e4c89802":"df = pd.read_csv(\"\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")\ndf.shape","e16be197":"#df.isnull().sum()\ndf.head(14)","fad198e5":"df.describe().transpose()","3701c93d":"df.info()","20d78c2e":" # Finding columns with NULL VALUES\ndf.isnull().sum()","dfbe6080":"# lets look at BMI in relation to Male\ndf_male = df[df['gender']==\"Male\"]\npx.scatter(data_frame=df_male,x=df_male['bmi'], y=df_male['age'],color='stroke',title='BMI_Male_Age')","c269ffd3":"# lets look at BMI in relation to Female\ndf_female = df[df['gender']==\"Female\"]\npx.scatter(data_frame=df_female,x=df_female['bmi'], y=df_female['age'],color='stroke',title='BMI_Female_Age')","3eacd82e":"print (\"Mean for Male Group:\",df_male['bmi'].mean())\nprint (\"Mean for Female Group:\",df_female['bmi'].mean())","2b3180fb":"#lets replace the Null values with the mean of the BMI based on each gender\ndf[\"bmi\"] = df[\"bmi\"].fillna(df.groupby(\"gender\")[\"bmi\"].transform(\"mean\"))","715ff4d8":"# index 1 had a BMI of Null previously and it has been successfully been replaced with the mean\ndf[\"bmi\"][1]","d597546d":"# check if there is any null values available\ndf.isnull().sum()","15e99ab6":"df[['gender','id','stroke']].groupby('gender').count().reset_index()","c16297b4":"px.histogram(data_frame=df,x=df['gender'],title='Gender')","afa8a661":"df[df['gender'] == 'Other']","ea91e823":"#remove the gender which is stated as 'other'\ndf = df.drop(3116)","7ac1278e":"# Checking if the row with gender=\"other\" has been removed\ndf[df['gender'] == 'Other']","fd82cd61":"# data available after removing 'other' gender\ndf.info()","64f91967":"df = df.drop('id',axis=1)","f0cf0086":"# checking if ID has been dropped\ndf.info()","202fd1b2":"# shifting the stroke column to to the first \n# https:\/\/www.geeksforgeeks.org\/how-to-move-a-column-to-first-position-in-pandas-dataframe\/\nfirst_column = df.pop('stroke')\ndf.insert(0, 'stroke', first_column)\ndf.head(5)","1d4d4f5e":"# correlation only goes with all the continous numeric variables\n# non numeric columns are ignored\ndf.corr()","e22cf125":"fig_heat = px.imshow(df.corr())\nfig_heat.update_xaxes(side=\"top\")","b6fde921":"px.histogram(df,color='stroke', x='gender')","eefe265a":"px.scatter(data_frame=df,x=df['bmi'],title='BMI')","560f8908":"#the spread of gender with BMI\npx.histogram(df,x='bmi', color='gender', title = 'BMI and gender')","cdffd5c3":"px.histogram(data_frame=df,x='bmi',color='stroke',title='BMI and Stroke',nbins=20)","89788a79":"px.histogram(df,x=df.age,title='Age',nbins=20)","1c981cba":"px.histogram(y='stroke',x='age',data_frame=df,nbins=20, title='Age relation with Stroke')","87c1ef99":"#comparing age,stroke and smoking status\npx.histogram(y='stroke',x='age',data_frame=df, color='smoking_status', nbins=20,\n             title='Smoking status with relation with Age and Stroke')","b34eec37":"px.histogram(x='smoking_status',data_frame=df,title=\"Smoking Status\")","67abea19":"sns.set_style('dark')\nsns.catplot(x=\"gender\", hue=\"smoking_status\", col=\"stroke\",\n                data=df, kind=\"count\",\n                height=7, aspect=.9);\n","ed9114ff":"# No. of people who are unknown and have stroke\nUnknown_stroke_1 = sum(df[(df['smoking_status']=='Unknown') & (df['stroke'] == 1)]['stroke'])\nUnknown_stroke_0 = (df[(df['smoking_status']=='Unknown') & (df['stroke'] == 0)]['stroke']).count()\nprint(\"Unknown Smoking status and have stroke:\",Unknown_stroke_1)\nprint(\"Unknown Smoking status and does not have stroke:\",Unknown_stroke_0)","ea9f7086":"px.histogram(df,x='smoking_status',color='stroke',title=\" Stroke relation with Smoking Status\")","bbd17298":"px.histogram(df,x=df['ever_married'],title=\"Ever Married\")","88767068":"px.histogram(df,x=df['ever_married'],color='stroke',title=\"Stroke among married and unmarried\")","613bf097":"px.histogram(df,y='stroke',x='age',color='ever_married',nbins=20,title=\"Stroke along with marriage status and age\")","bc747894":"df['work_type'].unique()","a53e949a":"px.pie(df, names='work_type',title='Work Type',color_discrete_sequence=px.colors.sequential.RdBu)","f5499166":"px.histogram(df,y='stroke',x='work_type',title=\"Stroke among Work Type\")","ee525c76":"fig = make_subplots(rows=1, cols=2, specs=[[{\"type\": \"pie\"}, {\"type\": \"pie\"}]])\n\n#Percentage of People with and without Stroke among the Hypertension Group\nfig.add_trace(go.Pie(labels=df.stroke,values=df.hypertension,name=\"Stroke Among HTN\"), \n     row=1, col=1)\n\n#Percentage of People with and without Hypertension among the Stroke Group\nfig.add_trace(go.Pie(labels=df.hypertension,values=df.stroke,name=\"HTN Among Stroke\"),\n     row=1, col=2)\n\nfig.update_traces(hoverinfo=\"percent+name\")\n\nfig.update_layout(title_text=\"Relation between Stroke and Hypertension\")\n\niplot(fig)","0fba89e7":"# sub dataframes\ndf_NOhyper_STROKE = df[(df[\"hypertension\"]==0) & (df['stroke']==1)]\ndf_hyper_STROKE = df[(df[\"hypertension\"]==1) & (df['stroke']==1)]","e9ddc271":"df_1 = df_NOhyper_STROKE\ndf_2 = df_hyper_STROKE\n\nfig = go.Figure()\nfig.add_trace(go.Histogram(x=df_1.gender,\n                    name = \"No H w\/ stroke\"))\nfig.add_trace(go.Histogram(x=df_2.gender,\n                     name = \"H w\/ stroke\"))\n\nfig.update_layout(title_text=\"Hypertension correlation with stroke\")\n\nfig.show()","a54edbcb":"px.pie(df,names=df[\"heart_disease\"],title=\"Number of Heart Disease Patients\",color=df[\"heart_disease\"],\n      color_discrete_map={1:'royalblue',0:'darkblue'})","0b27ead7":"px.pie(df,names=df[\"heart_disease\"],values=df[\"stroke\"],title=\"Stroke patients with and without Heart Disease\",color_discrete_sequence=px.colors.sequential.RdBu)","6a42de15":"# Gender difference with heart disease and stroke \ndf_3 = df[(df[\"heart_disease\"]==0) & (df['stroke']==1)]\ndf_4 = df[(df[\"heart_disease\"]==1) & (df['stroke']==1)]\n\ntrace0=go.Histogram(x=df_3.gender,\n                    name = \"Stroke w\/o Heart Disease\")\ntrace1=go.Histogram(x=df_4.gender,\n                     name = \"Stroke w\/ Heart Disease\")\ndata=[trace0,trace1]\nlayout={\"title\":\"Gender comparison among Stroke patients with and without Heart Disease\",\n       \"xaxis\":{\"title\":\"Gender\"}}\niplot({\"data\":data,\"layout\":layout})","0b8b2a79":"data=[go.Bar(x=df[\"Residence_type\"],y=df[\"Residence_type\"].value_counts(),text=df[\"Residence_type\"].value_counts(),\n            textposition='auto',marker=dict(color=[\"rgba(255,110,110,1)\",\"rgba(0,0,110,1)\"],))]\nlayout={\"title\":\"Residence Type\"}\niplot({\"data\":data,\"layout\":layout})","0a0b0619":"(df[df[\"stroke\"]==1][\"Residence_type\"]).value_counts()","da3b769f":"# Gender difference with heart disease \ndf_5 = df[(df[\"Residence_type\"]==\"Urban\") & (df['stroke']==1)]\ndf_6 = df[(df[\"Residence_type\"]==\"Rural\") & (df['stroke']==1)]\n\ntrace0=go.Histogram(x=df_5.gender,\n                    name = \"Urban\")\ntrace1=go.Histogram(x=df_6.gender,\n                     name = \"Rural\")\ndata=[trace0,trace1]\nlayout={\"title\":\"Residence Type with Stroke\",\n       \"xaxis\":{\"title\":\"Gender\"}}\niplot({\"data\":data,\"layout\":layout})","93fc21b5":"from plotly.subplots import make_subplots\n\ntrace2=go.Histogram(x=df[\"avg_glucose_level\"],nbinsx=12,name=\"Avg Glucose Level Spread\")\ntrace0=go.Histogram(x=(df[df[\"stroke\"]==1][\"avg_glucose_level\"]),nbinsx=12,name=\" W\/ Stroke\")\ntrace1=go.Histogram(x=(df[df[\"stroke\"]==0][\"avg_glucose_level\"]),nbinsx=12,name=\" W\/O Stroke\")\n\nfig= make_subplots(rows=2, cols=2,\n                   specs = [[{\"colspan\":2},None],[{},{}]],\n                   subplot_titles=(\"Avg Glucose\",\"w\/ Stroke\",\"w\/o Stroke\"))\n\nfig.append_trace(trace2,1,1)\nfig.append_trace(trace0,2,1)\nfig.append_trace(trace1,2,2)\n\nfig.layout.update(title=\"Avg Glucose Level with and without stroke\")\n\niplot(fig)","2d9c143f":"df[\"Residence_type\"] = df[\"Residence_type\"].apply(lambda x: 1 if x==\"Urban\" else 0)\ndf[\"ever_married\"] = df[\"ever_married\"].apply(lambda x: 1 if x==\"Yes\" else 0)\ndf[\"gender\"] =df[\"gender\"].apply(lambda x: 1 if x==\"Male\" else 0)","01a496ae":"# using dummies to convert categorical values with different labels to numerical indicators\ndf = pd.get_dummies(data=df, columns=[\"work_type\",\"smoking_status\"])","7c3c644f":"df.head()","29fb80f9":"from sklearn.model_selection import train_test_split","6c89ffc8":"y=df[\"stroke\"]\ndf.drop(columns=[\"stroke\"],inplace=True)\nX=df","57a251eb":"df.head()","d865bf3c":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=101)","737b6643":"from sklearn.preprocessing import StandardScaler","b4412085":"scaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","b0a1191d":"from sklearn.tree import DecisionTreeClassifier","6a94684c":"dtree = DecisionTreeClassifier()\ndtree.fit(X_train,y_train)\n\n# Prediction and Evaluation of Decision Tree\n\npredictions = dtree.predict(X_test)\ndtree_score = dtree.score(X_train, y_train) \ndtree_test = dtree.score(X_test, y_test)","c0a5b336":"from sklearn.metrics import classification_report,confusion_matrix\nfrom sklearn.metrics import plot_confusion_matrix # draw a confusion matrix\n\nprint(\"Training score:\",dtree_score)\nprint(\"Testing score:\",dtree_test)\n\n# Classification report\nprint(classification_report(y_test,predictions))\n\nprint(\"\\n\")\n# confusion matix\nplot_confusion_matrix(dtree,\n                     X_test,\n                     y_test,\n                     display_labels=[\"Has Stroke\",\"Does not have Stroke\"])\n\nprint(\"\\n\")\n# Confursion matrix\n#print(confusion_matrix(y_test,predictions))","a362a844":"from sklearn.ensemble import RandomForestClassifier","c40a64f8":"rfc = RandomForestClassifier(n_estimators=100)\nrfc.fit(X_train,y_train)","823e8ce8":"# Prediction and Evaluation\n\nrfc_score = rfc.score(X_train, y_train) \nrfc_test = rfc.score(X_test, y_test)\npredictions = rfc.predict(X_test)","9ed958c4":"print(\"Training score:\",rfc_score)\nprint(\"Testing score:\",rfc_test)\nprint(\"\\n\")\n# Classification report\nprint(classification_report(y_test,predictions))\nprint(\"\\n\")\n# confusion matix\nplot_confusion_matrix(rfc,\n                     X_test,\n                     y_test,\n                     display_labels=[\"Has Stroke\",\"Does not have Stroke\"])\nprint(\"\\n\")\n# Confursion matrix\n#print(confusion_matrix(y_test,predictions))","9efa0df6":"from sklearn.ensemble import GradientBoostingClassifier","abb84827":"GBC=GradientBoostingClassifier(learning_rate= 0.1,n_estimators= 100)\nGBC.fit(X_train,y_train)","17dbb4e6":"# Prediction and Evaluation\n\nGBC_score = GBC.score(X_train, y_train) \nGBC_test = GBC.score(X_test, y_test)\npredictions = GBC.predict(X_test)","7eebb4ec":"print(\"Training score:\",GBC_score)\nprint(\"Testing score:\",GBC_test)\nprint(\"\\n\")\n# Classification report\nprint(classification_report(y_test,predictions))\nprint(\"\\n\")\n# confusion matix\nplot_confusion_matrix(GBC,\n                     X_test,\n                     y_test,\n                     display_labels=[\"Has Stroke\",\"Does not have Stroke\"])\n# Confursion matrix\n#print(confusion_matrix(y_test,predictions))\n#print(\"\\n\")\n","12f041ae":"from xgboost import XGBClassifier","a70c59af":"XGB=XGBClassifier(learning_rate=0.1,n_estimators=100)\nXGB.fit(X_train,y_train)","2d12ae15":"# Prediction and Evaluation\n\nXGB_score = XGB.score(X_train, y_train) \nXGB_test = XGB.score(X_test, y_test)\npredictions = XGB.predict(X_test)","8f439c23":"print(\"Training score:\",XGB_score)\nprint(\"Testing score:\",XGB_test)\nprint(\"\\n\")\n# Classification report\nprint(classification_report(y_test,predictions))\nprint(\"\\n\")\nplot_confusion_matrix(XGB,\n                     X_test,\n                     y_test,\n                     display_labels=[\"Has Stroke\",\"Does not have Stroke\"])\n# Confursion matrix\n#print(confusion_matrix(y_test,predictions))\n#print(\"\\n\")","5f503ea2":"print(\"DecisionTree Accuracy:\",round(dtree_test*100,2))\nprint(\"RandomForest Classifier Accuracy:\",round(rfc_test*100,2))\nprint(\"GradientBoosting Classifier Accuracy:\",round(GBC_test*100,2))\nprint(\"XGBoost Classifier Accuracy:\",round(XGB_test*100,2))","b34faf8b":"x=[\"DecisionTree\",\"RandomForest\",\"GradientBoosting\",\"XGBoost\"]\ny=[round(dtree_test*100,2),round(rfc_test*100,2),round(GBC_test*100,2),round(XGB_test*100,2)]\ntrace=go.Bar(x=x,y=y,text=y,\n            textposition='auto')\nlayout={\"title\": \"Model Accuracy\",\n       \"xaxis\":{\"title\":\"Model Name\"},\n       \"yaxis\":{\"title\":\"Accuracy\"}}\nfig=go.Figure(data=[trace],layout=layout)\niplot(fig)","fc0579c1":"<h3> 2. Gender <\/h3>","ff0e5156":"# Residental type","84f0326a":"**Observation:**\n\n<br> The dataset consist of more females than Male, the dataset is skewed.\n<br> There is an Other Category.Since there is only 1 row with a Gender column as 'other', will remove that row.","3ccf5a00":"**In Conclusion**\n\nRandomForest seem to have a higher accuracy as compared to other ML models.\n","a2ddd1d1":"**Observation**\n\n<b> Plot: Ever Married <\/b>\n\nThe dataset consists of mostly participants who are married\n\n<b> Plot: Stroke among married and unmarried <\/b>\n\nAs the overall data consist of 65% of people who are married as compared to 35% those who are not married <br>\n-> It seems that people who are married are high likely to get stroke LOL\n\n<b> Plot: Stroke along with marriage status and age  <\/b>\n\nThere is an upward trend for people who are married and have a stroke\n","15b275d8":"**Observation**\n\n<b> Plot: Smoking Status <\/b> \n\nFor each category for smoking_status: <br> \n  1. never smoked = 1892 <br>\n  2. formerly smoked = 884 <br>\n  3. unknown = 1544 <br>\n* Unknown Smoking status and have stroke: 47\n* Unknown Smoking status and does not have stroke: 1497\n  4. smokes = 789 <br>\n \n<b> Plot: Stroke relation with Smoking Status <\/b> \n\n<b>Formerly smoked:<\/b>\n3.699% of formerly smoked has stroke -> 1.37% of overall data<br>\n<b>Never smoked: <\/b>\n4.756% of those who never smoked has stroke -> 1.76% of overall data <br>\n<b>Smokes:<\/b>\n5.323 % of those who smoke has stroke -> 0.82% of overall data <br>\n<b>Unknown:<\/b>\n3.044% of unknown status has stroke -> 0.91% of overall data<br>\n\nThe dataset consists of mostly people who have never smoked. Amongst those who have never smoked, 1.76% of the participants have had a stroke. Hence, the number of participants who have never smoked make up the highest number of stroke patients. As this is contrary to what we know about the effects of smoking, more data is needed to examine the relation between stroke and smoking.","2c29490b":"# Cleaning Our Data","eddfb815":"# Visualizing the data","0dacd4b0":"<h2>Gradient Boost Classifier<\/h2>","881f9ae5":"# Hypertension","889f21d9":"***Pie charts*** \n\n<b>Left:<\/b> Percentage of People with and without Stroke among the Hypertension Group<br>\n<b>Right:<\/b> Percentage of People with and without Hypertension among the Stroke Group","3913d123":"# Work type","5e37a991":"<h1> Data Preprocessing <\/h1>","4853f443":"<h3>Looking into correlation<\/h3>","d9a5dea6":"# Avg Glucose level","4c020607":"<h1>Training the model<\/h1>","1eadd13a":"<b>Observation:<\/b><br>\n\n<b>Left: People with and without Stroke among the Hypertension Group<\/b>\n-  The percentage of those who **do not have stroke and have hypertension** is **more** than those who **have both stroke and hypertension**.\n\n<b>Right: People with and without Hypertension among the Stroke Group <\/b>\n- The percentage of people who **do not have hypertension and have stroke** is **more** than those who **have both hypertension and stroke**.\n","f3ef782f":"# Ever married","cae2b81b":"<h2>Random Forest Model <\/h2>","fa69de95":"<h3>Encoding the all the categorical columns<\/h3>","48aa6590":"**Observation**<br>\n\nThere are 5 unique categories in work type.\n\n% against the overall dataset of 5109 data points<br>\n<b>Private<\/b> -> 2.91 % got stroke <br>\n<b>Self employed<\/b> -> 1.27% got stroke <br>\n<b>Govt_job<\/b> -> 0.64% got stroke <br>\n<b>Children<\/b> -> 0.039% got stroke<br>\n<b>Never worked<\/b> -> 0% got stroke\n\nAmong the work types, the highest number of people with stroke work in the private sector. ","3c9191ef":" <h3> Gender <\/h3>","e8d6aabe":"**Observation**\n\n<b>Plot -> Avg Glucose Level with and without stroke <\/b>\n\n* Avg Glucose level with high number of stroke patients in the healthy range<br>\n  * 60-79.9 has 55 people with stroke <br>\n  * 80-99.9 has 49 people with stroke <br>\n* In the w\/ stroke histogram there are participants with stroke who have high glucose level between 160-250.\n\nIn conclusion, a participant has a stroke even if they have a healthy avg glucose level. However, participants with high glucose levels certainly have stroke.","d27be2cf":"**Observation**\n\n<b>Plot -> Age relation with Stroke<\/b>\n- There is a gradually upward trend of number of people with stroke from the ages of 40 to 80\n    \nKey focus on the age group with high number of people with stroke <br>\n55 - 59 -> 31 <br>\n70 - 74 -> 32 <br>\n75 - 79 -> 62 <br>\n80 - 84 -> 40 <br>\n\n<b>Plot -> Smoking status with relation with Age and Stroke <\/b><br>\n\nThere is an upward trend of stroke amongst people who smoked formerly and also for those who never smoked. However, as seen, people who never smoked tend to have stroke at a later age of 75 to 79 as compared to those who formerly smoked that tend to get stroke at an early age between the age ranges of 55 - 59 and 65 - 69.\n\n","07a39814":"<h3> Train Test Split <\/h3>","93229827":"<h3> 3. Id <\/h3>\n\nID is unique number used for each person in the dataset, however it is irrelevant as it does not bring value to our visualization. Hence, going to drop ID column","4bf967d2":"<h3>Observation<\/h3>\n\nOnly bmi has null values.\nNext step we have to handle the NULL values","c6e72880":"<h2> BMI <\/h2>","e3856e36":"<h2> Final Conclusion<\/h2>\n\n**Looking into the correlation** ->\nAge has a higher correlation with Stroke.\nHowever, the correlation is small.\n\n**Gender** ->\nThe dataset consist of more female than male.\nThus, why the number of females with and without stroke is higher than male.\n\n**BMI** ->\nThe particpants in the dataset with Stroke have a BMI in the range of 25-35\n \n**Age** ->\nAs seen above there are participants from the age range of 0.08 to 82.\nThere is a upward trend of stroke amongst those who smoked formely and also amongst those who have never smoked. However, as seen, people who never smoked tend to have stroke at a later age and those who formerly smoked has a stroke at the age of 55\n\n**Smoking** ->\nParticpants who formerly smoked and currently smoke have a high chance of getting stroke.\n\n**Ever_married** ->\nAs the overall data consist of 65% of people who are married as compared to 35% those who are not married. It seems that people who are married are high likely to get stroke LOL\n\n**Worktype** ->\nAmong the work types, the number of people with stroke among the particpants working in the private sector percentage is the highest.\n\n**Hypertension** ->\nThe number of Female participants who have HTN with stroke and dont have HTN with stroke is higher than male participants.\n\n**Heart disease** ->\nThe number of people with stroke and heart disease is less than the number of people with stroke and without heart disease. Among the genders, Male partcipants have a higher number of particpants with stroke and heart disease.\n\n**Residence Type** ->\nThe number of female participants with stroke who live in either residence types are higher than male participants.\n\n**Avg Glucose level** ->\nThe number of participants with stroke have a high glucose level between 160-250.\n\n<h2>In Summary<\/h2>\n- The dataset consist of more female participants than male participants. Hence an imbalanced dataset. It would be better if we have an equal sample of participants for each of the gender category <br>\n- Age,BMI,Avg Glucose level seem to have a correlation with stroke. However. more data is needed to confirm this <br>\n- Surprisingly a high number of participants who have stroke are married LOL <br>\n- Hypertension and Heart disease have no correlation with stroke as the number of participants with neither of the diseases have stroke as compared to participants with either of the diseases  <br>\n- Participants who work at the private sector have the highest number of stroke participants. However, if we have an equal sample for each work type category. This would help us conclude if working at the private sector can play a part in having a stroke <br>\n- Residence type is not a good feature to be used for finding if stroke is correlated <br>","543d2e1f":"What is BMI?\nBody mass index (BMI) is a value derived from the mass (weight) and height of a person\nBMI is an screening method for weight category\u2014underweight, healthy weight, overweight, and obesity\n\nFor most adults, an ideal BMI is in the 18.5 to 24.9 range:\n- Below 18.5\t ->  Underweight\n- 18.5 \u2013 24.9\t ->  Normal or Healthy Weight\n- 25.0 \u2013 29.9\t ->  Overweight\n- 30.0 and Above -> Obese\n\n","c46e6735":"**Observation**\n\n<b> Plot: BMI and gender <\/b><\/br>\n\nMost Males and Females fall in the BMI range of 28-29\n\n<b> Plot: BMI and Stroke <\/b><\/br>\n\nAmong these BMI ranges there are a higher count of people with stroke \n-  BMI of 25 - 29.9 -> 75\n-  BMI of 30 to 34.9 -> 56\n\nIn conclusion, The particpants in the dataset with Stroke have a BMI in the range of 25-35","9a20553b":"<h2> 1. BMI <\/h2>","3be0fdcf":"**Observation**\n\n<b>Plot -> Number of Heart Disease patients <\/b>\n\nThe number of heart disease participants makes up to 5.4% of the overall dataset.\n\n<b>Plot -> Stroke patients with and without Heart Disease <\/b> \n\nThe number of people with stroke and heart disease is less than the number of people with stroke and without heart disease.    \n  \n<b>Plot -> Gender comparison among Stroke patients with and without Heart Disease<\/b>\n\nMale participants have a higher number of participants with stroke and heart disease as compared to Female participants.\nHowever, Female participants have a higher number of participants with stroke and without heart disease as compared to Male participants.","37235208":"# Age","e2813802":"# Heart disease","837197e2":"<h2>Decision Tree Model <\/h2>","79e6660e":"**Observation**\n\nWith just the categorical numerical columns, Age has a higher correlation with Stroke.\nHowever, the correlation is small.","6bb3832d":"<h1>Introduction<\/h1>\n\n<h2>A stroke occurs when the blood supply to part of your brain is interrupted or reduced, preventing brain tissue from getting oxygen and nutrients. Stroke is one of the leading causes of death globally. <\/h2>\n\n![image.png](attachment:97c426b7-bcd6-449b-a063-64132e08f393.png) <br>\n\n<h3>We will take a look into the dataset to understand what are the possible causes of stroke and if there are any parameters that correlate to stroke. We will also predict whether a patient is likely to get a stroke based on the input parameters. <\/h3>\n\n<h3>Lets Begin!<\/h3>","6e8d3f18":"**Observation**\n\n<b>Plot -> Residence Type <\/b>\n\nThere are two residence types, Urban and Rural.\nThe number of Rural and Urban participants are equal.\n\n\n<b>Plot -> Residence Type with Stroke<\/b>\n\nThe number of female participants with stroke who live in either residence type are higher than male participants.\n","3ffa90a1":"A blood sugar level less than 140 mg\/dL (7.8 mmol\/L) is normal.<br> A reading of more than 200 mg\/dL (11.1 mmol\/L) after two hours indicates diabetes.<br> A reading between 140 and 199 mg\/dL (7.8 mmol\/L and 11.0 mmol\/L) indicates prediabetes","a247cf07":"<h3>Scaling<\/h3>","8f8757f0":"**Observation**\n\nThe dataset consist of more female participants than male participants.","01dc922f":"<h2>XGBoost Classifier<\/h2>","ac6704d9":"# Smoking","6d9a783e":"**Observation**\n\n<b>Plot: Hypertension correlation with stroke <\/b>\n\nThe number of female participants who have HTN and stroke and do not have HTN and stroke is higher than male participants.\n\nIn conclusion, Hypertension does not correlate with stroke as the number of people who have had a stroke and do not have hypertension is significantly higher than those who have had a stroke and hypertension."}}