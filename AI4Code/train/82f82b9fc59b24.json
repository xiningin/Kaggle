{"cell_type":{"29d26b21":"code","61afce93":"code","664bc145":"code","1cef4f56":"code","51dcd79c":"code","a5a3d216":"code","ecb0a597":"code","1bb3375e":"code","96bdd066":"code","6f939ccc":"code","1b734272":"code","247a0f6c":"code","b4d917b2":"code","e181a42e":"code","aa4c65c4":"code","56311a1c":"markdown","e3b06245":"markdown","3d3a21d5":"markdown","c65c045b":"markdown","c1d92f24":"markdown","eb4a5098":"markdown","00d1b430":"markdown","e45e4fdc":"markdown","9307bd10":"markdown","1687d952":"markdown","1c657270":"markdown"},"source":{"29d26b21":"import numpy as np #library used for working with arrays.\nimport matplotlib.pyplot as plt #data visualization and graphical plotting library.\nimport pandas as pd #library written for the Python programming language for data manipulation.","61afce93":"dataset = pd.read_csv('..\/input\/predict-test-scores-of-students\/test_scores.csv')\ndataset.head() #returns top 5 rows from dataset.","664bc145":"count_row = dataset.shape[0]  # Gives number of rows\nprint(count_row)","1cef4f56":"dataset.drop(['school', 'classroom', 'student_id'], axis = 1, inplace = True)\ndataset.head()","51dcd79c":"#checking nan values\nprint(dataset.isnull().sum().sum())","a5a3d216":"num_lst = []\ncat_lst = []\n\nfrom pandas.api.types import is_string_dtype, is_numeric_dtype\n\nfor column in dataset:\n    plt.figure(column, figsize = (5,5))\n    plt.title(column)\n    if is_numeric_dtype(dataset[column]):\n        dataset[column].plot(kind = 'hist')\n        num_lst.append(column)\n    elif is_string_dtype(dataset[column]):\n        dataset[column].value_counts().plot(kind = 'bar')\n        cat_lst.append(column)\n        \nprint(num_lst)\nprint(cat_lst)","ecb0a597":"x = dataset.iloc[:,0:7].values #returns all columns except last one\ny = dataset.iloc[:, -1].values #returns the last one column","1bb3375e":"from sklearn import preprocessing\nlbl_X = preprocessing.LabelEncoder()\nx[:,0] = lbl_X.fit_transform(x[:,0])\nx[:,1] = lbl_X.fit_transform(x[:,1])\nx[:, 2] = lbl_X.fit_transform(x[:, 2])\nx[:, 4] = lbl_X.fit_transform(x[:, 4])\nx[:,5] = lbl_X.fit_transform(x[:,5])\n\nprint(x[:5,:10])","96bdd066":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\n\nct = ColumnTransformer([('one_hot_encoder', OneHotEncoder(categories='auto'),[0])],remainder = 'passthrough')\nx = np.array(ct.fit_transform(x), dtype = float)\n\nx = x[:, 1:]\nprint(x[:5,:10])","6f939ccc":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 5)","1b734272":"from sklearn.preprocessing import StandardScaler\nsc_x = StandardScaler()\nsc_y = StandardScaler()\ny_train = y_train.reshape(len(y_train), 1) #reshaping to array\ny_test = y_test.reshape(len(y_test), 1) #reshaping to array\nx_train, x_test = sc_x.fit_transform(x_train), sc_x.transform(x_test)\ny_train, y_test = sc_y.fit_transform(y_train), sc_y.transform(y_test)","247a0f6c":"print(x_train[:5,:10])","b4d917b2":"print(x_train[:5,:10])","e181a42e":"from sklearn.svm import SVR\n#Training the SVR model on the Training set.\nregressor = SVR(gamma = 0.1).fit(x_train, np.ravel(y_train,order='C')) #ravel - change multi-dimensional array into a contiguous flattened array.","aa4c65c4":"from sklearn.metrics import r2_score, explained_variance_score\n\ny_pred = regressor.predict(x_test)\nprint(r2_score(y_test, y_pred)) #Coefficient of determination - regression score function. Best possible score is 1.0\nprint (explained_variance_score(y_test, y_pred), y_pred.std()) #Explained variance regression score function. Best possible score is 1.0","56311a1c":"**Using of SVR.**","e3b06245":"**Check the number of rows.**","3d3a21d5":"**Converting categorical variables to numeric.**","c65c045b":"**Visualization of how our features are distributed.**","c1d92f24":"**Hi Everyone! Thank you for your time in my work. In this notebook we are going to predict Test Scores of students using of Support Vector Regression.**","eb4a5098":"**Predicting the Test set results.**","00d1b430":"**Import libraries.**","e45e4fdc":"**Drop unnecessary columns.**","9307bd10":"**Import the dataset.** I am using next dataset https:\/\/www.kaggle.com\/kwadwoofosu\/predict-test-scores-of-students. It contains information about a test written by some students. It include features such as: School setting, School type, gender, pretetest scores among other.","1687d952":"**Variable scaling.**","1c657270":"**Splitting the dataset into the training set and test set.**"}}