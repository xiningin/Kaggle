{"cell_type":{"73c3c3d6":"code","2b288c22":"code","50ed4868":"code","86266414":"code","100f7c5e":"code","69d733d6":"code","0df845ea":"code","dfcb1b59":"code","9337a4bf":"code","59acfeaa":"code","a043bf09":"code","8f159f6f":"code","e937ee8a":"code","722253b1":"markdown","6e713e71":"markdown","9eb843e3":"markdown","07cf0a35":"markdown","3dce063e":"markdown","aeeea838":"markdown","39a665f2":"markdown","bb483e90":"markdown","bc77b2a7":"markdown","84a4a946":"markdown","c98275f9":"markdown","469895e8":"markdown","ffe310d1":"markdown"},"source":{"73c3c3d6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\ndf = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')\ndf.head()","2b288c22":"#Set id column to be index\ndf.set_index('Id' , inplace = True)\ndf.head()","50ed4868":"print(df.info()) #information on data types,memory usage , null or non-null values","86266414":"print(df.describe()) #descirptive statstics","100f7c5e":"df['Species'].value_counts()","69d733d6":"sns.pairplot(df , hue = 'Species')","0df845ea":"#determin bin size based on the values of the dataset\nbins_sepal_len = np.arange(df['SepalLengthCm'].min()-0.5 , df['SepalLengthCm'].max()+0.5 , 0.5)\nbins_sepal_wid = np.arange(df['SepalWidthCm'].min()-0.5 , df['SepalWidthCm'].max()+0.5 , 0.5)\nbins_petal_len = np.arange(df['PetalLengthCm'].min()-0.5 , df['PetalLengthCm'].max()+0.5 , 0.5)\nbins_petal_wid = np.arange(df['PetalWidthCm'].min()-0.5 , df['PetalWidthCm'].max()+0.5 , 0.5)\n\nplt.figure(figsize = (15,15))\n\nplt.subplot(221)\nplt.hist(data = df, x = 'SepalLengthCm' , bins = bins_sepal_len)\nplt.title('Sepal Length')\n\nplt.subplot(222)\nplt.hist(data = df, x = 'SepalWidthCm' , bins = bins_sepal_wid)\nplt.title('Sepal Width')\n\nplt.subplot(223)\nplt.hist(data = df, x = 'PetalLengthCm' , bins = bins_petal_len)\nplt.title('Petal Length')\n\nplt.subplot(224)\nplt.hist(data = df, x = 'PetalWidthCm' , bins = bins_petal_wid)\nplt.title('Petal Width')","dfcb1b59":"#Separ data according to there species\ndf1 = df[df.Species=='Iris-setosa']\ndf2 = df[df.Species=='Iris-versicolor']\ndf3 = df[df.Species=='Iris-virginica']","9337a4bf":"\n\nplt.figure(figsize = (15,15))\n\nplt.hist(df1.SepalLengthCm,bins=30)\nplt.hist(df2.SepalLengthCm,bins=30)\nplt.hist(df3.SepalLengthCm,bins=30)\nplt.legend(['Setosa','Versicolor','Virginica'])\nplt.title('Sepal Length')\n\nplt.subplot(221)\nsns.distplot(df1['SepalLengthCm'] , kde = False , bins = 30)\nsns.distplot(df2['SepalLengthCm'] , kde = False , bins = 30)\nsns.distplot(df3['SepalLengthCm'] , kde = False , bins = 30)\nplt.title('Sepal Length')\n\nplt.subplot(222)\nsns.distplot(df1['SepalWidthCm'] , kde = False, bins = 30)\nsns.distplot(df2['SepalWidthCm'] , kde = False, bins = 30)\nsns.distplot(df3['SepalWidthCm'] , kde = False, bins = 30)\nplt.title('Sepal Width')\n\nplt.subplot(223)\nsns.distplot(df1['PetalLengthCm'] , kde = False ,bins = 30)\nsns.distplot(df2['PetalLengthCm'] , kde = False ,bins = 30)\nsns.distplot(df3['PetalLengthCm'] , kde = False ,bins = 30)\nplt.title('Petal Length')\n\nplt.subplot(224)\nsns.distplot(df1['PetalWidthCm'] , kde = False , bins = 30)\nsns.distplot(df2['PetalWidthCm'] , kde = False , bins = 30)\nsns.distplot(df3['PetalWidthCm'] , kde = False , bins = 30)\nplt.title('Petal Width')","59acfeaa":"sns.heatmap(df.corr() , annot=True)","a043bf09":"#drop the results column\nresults = df['Species']\ndf = df.drop(columns = ['Species'])\n","8f159f6f":"from sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\n\n\nX_train , X_test , y_train , y_test = train_test_split(df, results, test_size = 0.25, random_state = 0)","e937ee8a":"model = DecisionTreeClassifier()\nmodel.fit(X_train, y_train)\ny_predict = model.predict(X_test)\nscore = accuracy_score(y_test , y_predict)\n\nprint(score)","722253b1":"Here we see that the **Species** column has 3 unique values. Also the dataset has equal number of flowers for every species","6e713e71":"# Calssification","9eb843e3":"**Notice that:**\n\n* In all of the data (5 columns and 150 entries) there aren't any null values.\n* There doesn't seem to be any outliers. ( from descriptive statstics std).\n\nThe data do not require any cleaning.\n\nNext let's explore our target variable.","07cf0a35":"A simple Dicision Tree Classifier.","3dce063e":"From the pairplot above we notice that Petal features has better speration than that of Sepal Features.\n\n**Note** that we can distinguish the Setosa points using the petals feature. There is a kernal that has used this specific feature to build a simple model specific to distinguish this species.\n\nCheck it here\n https:\/\/www.kaggle.com\/viswanathanc\/beginner-visualization-using-matplotlib\/comments#Notebook-Description","aeeea838":"> # Importing modules and loading data","39a665f2":"Another way to find correlation between features is heatmap","bb483e90":"We can see the dataset is made of 4 independent features, all of which are continues, and they are:\n1. Sepal Length\n2. Sepal Width\n3. Petal Length\n4. Petal Width\nand 1 dependent categorical variable **Species**.\n\nAlso that the Id column is not set correctly.","bc77b2a7":"Not much info here to be honest. Let's try again with indivdual species distribution.\n\n**Note** I am doing the next code in seaborn just to practice. You can get the exact same results (and exact code length) with matplot.","84a4a946":"**Note** the default value for **df.corr()** is **pearson** for pearson correlation which is used to indicate how strongly 2 variables are linearly related. You can choose other correlation methods.\n\nCheck out the documentation:\nhttps:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.corr.html","c98275f9":"# Data Descritpion","469895e8":"**One Final Note**\nI have considered re-scaling the features, however it did not seem necessry since all features are close in range and they use the same metric (cm). Also a simple classifier scored over **0.97 accuracy** without any changes in its feature.","ffe310d1":"# Data Visualization"}}