{"cell_type":{"4864e9ff":"code","5d4853dd":"code","99f37111":"code","bab6196c":"code","253cc7a9":"code","a123a035":"code","9b8d465b":"code","5659cb3d":"code","b5c9036b":"code","af374c43":"markdown","2176d7f0":"markdown","b37f07e0":"markdown","fecd5afb":"markdown","b78b5a45":"markdown"},"source":{"4864e9ff":"import pandas as pd\n\n#Read the CSV File into a dataframe \n#I have used 'r' before the File path to avoid UniCode error caused by escape character '\\'\nh_df = pd.read_csv('..\/input\/unesco-world-heritage-sites\/whc-sites-2019.csv')\n\n#Print the top few rows of the df\nh_df.head()","5d4853dd":"#Selecting the first 20 countries with the most World Heritage Sites\n\n#h_df['states_name_en'] will give the values in states_name_en only\n\n#h_df['states_name_en'].value_counts()\n#The value_counts() function is used to get a Series containing counts of unique values.\n#The resulting object will be in descending order so that the first element is the most frequently-occurring element. \n#Excludes NA values by default.\n\n#h_df['states_name_en'].value_counts()[:10] - Implies first 10 values. \n\nh_df['states_name_en'].value_counts()[:10]","99f37111":"import matplotlib.pyplot as plt\n\n#To set the size of the output visual\nplt.figure(figsize=(15,5))\n\n# Taking the already available value 'h_df['states_name_en'].value_counts()[:10]' and plotting using it\n#kind=bar indicates that the visual is going to be a bar chart\n#edgecolor='black' indicates that the edges of the bars will be black in color\n#alpha=0.1 indicates how dark or light the bar colour should be, Values to be within 0.0-1.0\nh_df['states_name_en'].value_counts()[:10].plot(kind='bar',edgecolor='black', alpha=0.8)\n\n#A lot of times when dealing with iterators, we also get a need to keep a count of iterations. \n#Python eases the programmers\u2019 task by providing a built-in function enumerate() for this task.  \n#plt.text() is to show the individual values on top of the respective bars, converting value to string\nfor index, value in enumerate(h_df['states_name_en'].value_counts()[:10]):\n    plt.text(index, value, str(value))\n    \n#Setting x label, y Label and Title along with setting their font size\nplt.xlabel(\"Countries\", fontsize=14)\nplt.ylabel(\"Count of sites\", fontsize=14)\nplt.title(\"World Heritage Sites by Country\", fontsize=15)\n\n#To display the plot \nplt.show()","bab6196c":"h_df['region_en'].value_counts()","253cc7a9":"region_ser = h_df['region_en'].value_counts()\n\n#To initialise the pie-chart figure\nfig = plt.figure()\n\n#Use the series name 'region_ser' to plot the pie-chart  \nregion_ser.plot.pie(label=\"\", title=\"Percentage of World Heritage Sites according to Region\",autopct='%1.2f%%');\nplt.show()\n","a123a035":"h_df['category'].value_counts()","9b8d465b":"fig = plt.figure()\nax = fig.add_axes([0,0,1,1])\n\nser = h_df['category'].value_counts()\n\nser.plot.pie(label=\"\", title=\"Percentage of World Heritage Sites according to Category\",autopct='%1.2f%%');\nplt.show()","5659cb3d":"h_df['danger'].value_counts()","b5c9036b":"fig = plt.figure()\nax = fig.add_axes([0,0,1,1])\n\nser = h_df['danger'].value_counts()\n\nser.plot.pie(label=\"\", title=\"Endangered World Heritage Sites\",autopct='%1.2f%%');\nplt.show()","af374c43":"###### Endangered World Heritage Sites","2176d7f0":"###### World Heritage Sites according to Regions","b37f07e0":"###### Percentage of World Heritage Sites according to Category","fecd5afb":"###### Top 10 Countries with most World Heritage Sites","b78b5a45":"###### LOAD DATA"}}