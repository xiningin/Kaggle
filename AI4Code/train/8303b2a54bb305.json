{"cell_type":{"0e5b7d4f":"code","0247da1d":"code","efd792c4":"code","3bd8b1e9":"code","de296a60":"code","011d2ce5":"code","0594b0e4":"code","23196188":"code","9acb3c15":"code","5053b874":"markdown","546c743b":"markdown","df536013":"markdown"},"source":{"0e5b7d4f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0247da1d":"import folium\nimport json","efd792c4":"# center of seoul\ncenter = [37.541, 126.986]\n# make a map\nmap = folium.Map(location=center, zoom_start=12)\nmap","3bd8b1e9":"# get geodata of district in Seoul\nsmfile = open('..\/input\/fixed-enforcement-camera-of-seoul-south-korea\/seoul-map.json', 'r', encoding='utf-8').read()\ndistrictLocData = json.loads(smfile)\nfolium.GeoJson(districtLocData, name='json_data').add_to(map)","de296a60":"# check map\n# there are 25 districts which is called 'gu'.\nmap","011d2ce5":"# get location data\ndf_camera = pd.read_csv('..\/input\/fixed-enforcement-camera-of-seoul-south-korea\/fixed_cctv_for_parking_enforcement.csv', encoding='utf-8')\ndf_camera.head()","0594b0e4":"# there are too many cameras so I use data of \"Gangnam-gu\" only.\ndf_cam_gangnam = df_camera[df_camera['district'] == 'Gangnam-gu']","23196188":"# mark location on map\nfor i in range(0, len(df_cam_gangnam)):\n  folium.Marker(\n    location = [df_cam_gangnam.iloc[i]['latitude'], df_cam_gangnam.iloc[i]['longitude']],\n    icon=folium.Icon(color=\"red\")\n  ).add_to(map)","9acb3c15":"# check map\nmap","5053b874":"## Mark area of district on map","546c743b":"## Get location data of cameras and mark on map","df536013":"## Preparing a map of Seoul"}}