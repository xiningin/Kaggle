{"cell_type":{"df755b63":"code","fbd1e2fd":"code","92199535":"code","7324845c":"code","46ed3da9":"code","6b848ca5":"code","e3c2fbad":"code","36f1e6d2":"code","0b2eb865":"code","cf743177":"code","473669f0":"markdown","baec214b":"markdown","3fcbc121":"markdown","47930d7b":"markdown","f84c311f":"markdown","dae15e2d":"markdown","b8e82a08":"markdown","77c68ae4":"markdown","8ded63ad":"markdown","d890b92c":"markdown"},"source":{"df755b63":"import numpy as np\nimport pandas as pd\nimport pickle\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport json\nimport re \nimport time\nfrom pandas.io.json import json_normalize","fbd1e2fd":"match_df = pd.read_pickle('..\/input\/league-of-legendslol-ranked-games-2020-ver1\/match_data_version1.pickle')\nwinner_df =  pd.read_pickle('..\/input\/league-of-legendslol-ranked-games-2020-ver1\/match_winner_data_version1.pickle')\nloser_df = pd.read_pickle('..\/input\/league-of-legendslol-ranked-games-2020-ver1\/match_loser_data_version1.pickle')","92199535":"match_df.info()","7324845c":"winner_df.info()","46ed3da9":"loser_df.info()","6b848ca5":"len(match_df['participants'].iloc[0])","e3c2fbad":"'''\n120 columns\nteamid : 100 (team data)\nchampionId : 7 (champion data)\n'''\njson_normalize(match_df['participants'].iloc[0][0])","36f1e6d2":"match_df['participants'].iloc[0][0]['stats']","0b2eb865":"winner_df.columns","cf743177":"loser_df.columns","473669f0":"# Match_df introduction","baec214b":"### Each columns explain\n\n    - participantId : ingame summoner id (1-10)\n    - teamId : each team id\n    - championId : pick championid\n    - spell(1,2)Id : pick spellid(1,2)\n    - highestAchievedSeasonTier : highest tier(iron ~ challenger)\n    - stat : statistic\n        - win : T(win) \/ F(lose)\n        - item(0~6) : What items you have\n        - kills : kill count\n        - deaths : death count\n        - assists : assists count\n            - (+ kda)\n        - largestKillingSpree : Max continuous kills\n        - largestMultiKill : Max multikills\n        - killingSprees : continuous kills(Kill without dying)\n        - longestTimeSpentLiving : ??\n        - doubleKills(triple ~ unrealkill) : kill log count\n        - totalDamageDealt : total damage dealt\n        - magicDamageDealt : magicDamageDealt\n        - physicalDamageDealt : physicalDamageDealt\n        - trueDamageDealt : trueDamageDealt (true damage : Ignore Defense Magic Resistance)\n        - largestCriticalStrike : critical dealt\n        - totalDamageDealtToChampions : totalDamageDealtToChampions\n        - magicDamageDealtToChampions : magicDamageDealtToChampions\n        - physicalDamageDealtToChampions : physicalDamageDealtToChampions\n        - trueDamageDealtToChampions : trueDamageDealtToChampions\n        - totalHeal : totalHeal\n        - totalUnitsHealed : ??\n        - damageSelfMitigated : Damage reduced by shield\n        - damageDealtToObjectives : Damage dealt to objects\n        - damageDealtToTurrets : Damage dealt to tower\n        - visionScore : Vision score\n        - timeCCingOthers : cc time taken\n        - totalDamageTaken : totalDamageTaken\n        - magicalDamageTaken : magicalDamageTaken\n        - physicalDamageTaken : physicalDamageTaken\n        - trueDamageTaken : trueDamageTaken\n        - goldEarned : Gold amount acquired\n        - goldSpent : Gold amount used\n        - turretKills : turretKills count\n        - inhibitorKills : inhibitorKills count\n        - totalMinionsKilled : totalMinionsKilled count\n        - neutralMinionsKilled : neutralMinionsKilled count\n        - neutralMinionsKilledTeamJungle : neutralMinionsKilledTeamJungle count\n        - neutralMinionsKilledEnemyJungle : neutralMinionsKilledEnemyJungle count\n        - totalTimeCrowdControlDealt : totalTimeCrowdControlDealt time\n        - champLevel : champion level\n        - visionWardsBoughtInGame : ??\n        - sightWardsBoughtInGame : ??\n        - wardsPlaced : Ward Installation Count\n        - wardsKilled : Ward Remove Count\n        - firstBloodKill : First kill count\n        - firstBloodAssist : First kill assists count\n        - firstTowerKill : First tower kill count\n        - firstTowerAssist : First tower kill assists count\n        - firstInhibitorKill : First inhibitor kill count\n        - firstInhibitorAssist : First inhibitor kill count\n        - combatPlayerScore : ??\n        - objectivePlayerScore : ??\n        - totalPlayerScore : ??\n        - totalScoreRank : ??\n        - playerScore(0~9) : ??\n        - perk(1~5) : ??\n        - perk(1~5)Var(1~3) : ??\n        - perkPrimaryStyle : ??\n        - perkSubStyle : ??\n        - statperk(0~2) : ??\n    - role : team role\n    - lane : location\n","3fcbc121":"- match_df have 14 columns\n- match_df have 108829 rows\n    108829 games\n- participants data is very important columns\n    - because of this column has so many information","47930d7b":"**I didn't write all the column descriptions, but I hope this helps**","f84c311f":"- ingame data\n- Statistic values \u200b\u200bshown after the game ends\n","dae15e2d":"- if you local jupyter notebook\n    - pip install pickle\n    - pip install pandas","b8e82a08":"- 1 participants row has 10 data\n- 10 data = 10 users (summoners)","77c68ae4":"### Each columns explain\n    - teamId : team id(100,200)\n    - win : T(win) \/ F(lose)\n    - firstBlood : First kill or not\n    - firstTower : First tower kill or not\n    - firstTower : First tower kill or not\n    - firstTower : First inhibitor kill or not\n    - firstTower : First baron kill or not\n    - firstTower : First dragon kill or not\n    - firstTower : First riftherald kill or not\n    - towerKills : tower kill count\n    - inhibitorKills : inhibitor kill count\n    - baronKills : baron kill count\n    - dragonKills : dragon kill count\n    - vilemawKills : other mode\n    - riftHeraldKills : riftherald kill count\n    - dominionVictoryScore : victory score\n    - bans : ban champion(json)\n    - gameId : gameId(foreign key)\n    ","8ded63ad":"# winner, loser data explain\n\n- This data has 14 columns\n- If you want to connect with match data, you can connect gameId with key value.\n    \n    1. winner_df : pd.merge(match_df,winner_df,on='gameId',how='left')  \n    \n    2. loser_df : pd.merge(match_df,loser_df,on='gameId',how='left')","d890b92c":"# Data parsing"}}