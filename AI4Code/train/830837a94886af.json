{"cell_type":{"dbb2a341":"code","6b44fc3b":"code","80ee7df3":"code","347630b3":"code","e95c846c":"code","618db91d":"code","a3f6b6de":"code","ee12bbab":"code","42582b70":"code","0dc23c85":"code","f57224b8":"code","61160dae":"code","2a4269eb":"code","752dd161":"code","2142aad7":"code","b5dded79":"code","1e5e91e8":"code","aa9aba5e":"code","69dd2d7c":"code","e853d802":"code","0d0d11a3":"code","94f29772":"markdown","e74ecf9c":"markdown","6cc15e6a":"markdown","0cc52905":"markdown","8e59d753":"markdown","8c038386":"markdown","6455be5d":"markdown","88f22f54":"markdown","7fd38625":"markdown","31e027f8":"markdown","086c92c8":"markdown","33187496":"markdown","2b22766f":"markdown","329054d3":"markdown","1c9e6872":"markdown","2a176b6c":"markdown","7af9aa00":"markdown","9e518ea9":"markdown","d97e45f4":"markdown","443dca92":"markdown","8527d2ce":"markdown","8c32fccf":"markdown","82532ee8":"markdown","35f207c9":"markdown","ca38cfb6":"markdown","d739043a":"markdown","2e1aaaae":"markdown","01295d8d":"markdown"},"source":{"dbb2a341":"import numpy as np\nimport pandas as pd\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, iplot\n\nfrom mlxtend.preprocessing import TransactionEncoder\nfrom mlxtend.frequent_patterns import apriori, association_rules\nimport networkx as nx","6b44fc3b":"bakeryDF=pd.read_csv(\"..\/input\/bakery\/Bakery.csv\")\nbakeryDF.head()","80ee7df3":"print(\"Database dimension :\", bakeryDF.shape)\nprint(\"Database size      :\", bakeryDF.size)","347630b3":"bakeryDF.info()","e95c846c":"bakeryDF['TransactionNo'].nunique()","618db91d":"bakeryDF.describe(include=object)","a3f6b6de":"itemFrequency = bakeryDF['Items'].value_counts().sort_values(ascending=False)\nitemFrequency.head(10)","ee12bbab":"fig = px.bar(itemFrequency.head(20), title='20 Most Frequent Items', color=itemFrequency.head(20), color_continuous_scale=px.colors.sequential.Mint)\nfig.update_layout(margin=dict(t=50, b=0, l=0, r=0), titlefont=dict(size=20), xaxis_tickangle=-45, plot_bgcolor='white', coloraxis_showscale=False)\nfig.update_yaxes(showticklabels=False, title=' ')\nfig.update_xaxes(title=' ')\nfig.update_traces(texttemplate='%{y}', textposition='outside', hovertemplate = '<b>%{x}<\/b><br>No. of Transactions: %{y}')\nfig.show()","42582b70":"peakHours = bakeryDF.groupby('Daypart')['Items'].count().sort_values(ascending=False)\npeakHours","0dc23c85":"fig = go.Figure(data=[go.Pie(labels=['Afternoon','Morning','Evening','Night'],\n                values=peakHours, title=\"Peak Selling Hours\",titlefont=dict(size=20), textinfo='label+percent', marker=dict(colors=px.colors.sequential.Mint), hole=.5)])\nfig.update_layout(margin=dict(t=40, b=40, l=0, r=0), font=dict(size=13), showlegend=False)\nfig.show()","f57224b8":"dateTime=pd.to_datetime(bakeryDF['DateTime'])\nbakeryDF['Day']=dateTime.dt.day_name()\nbakeryDF['Month']=dateTime.dt.month_name()\nbakeryDF['Year']=dateTime.dt.year\nbakeryDF.head(5)","61160dae":"mpd = bakeryDF.groupby('Day')['Items'].count().sort_values(ascending=False)\nmpd","2a4269eb":"fig = px.bar(mpd, title='Most Productive Day', color=mpd, color_continuous_scale=px.colors.sequential.Mint)\nfig.update_layout(margin=dict(t=50, b=0, l=0, r=0), titlefont=dict(size=20), xaxis_tickangle=0, plot_bgcolor='white', coloraxis_showscale=False)\nfig.update_yaxes(showticklabels=False, title=' ')\nfig.update_xaxes(title=' ')\nfig.update_traces(texttemplate='%{y}', textposition='outside', hovertemplate = '<b>%{x}<\/b><br>No. of Transactions: %{y}')\nfig.show()","752dd161":"mpm = bakeryDF.groupby('Month')['Items'].count().sort_values(ascending=False)\nmpm","2142aad7":"fig = px.bar(mpm, title='Most Productive Month', color=mpm, color_continuous_scale=px.colors.sequential.Mint)\nfig.update_layout(margin=dict(t=50, b=0, l=0, r=0), titlefont=dict(size=20), xaxis_tickangle=0, plot_bgcolor='white', coloraxis_showscale=False)\nfig.update_yaxes(showticklabels=False, title=' ')\nfig.update_xaxes(title=' ')\nfig.update_traces(texttemplate='%{y}', textposition='outside', hovertemplate = '<b>%{x}<\/b><br>No. of Transactions: %{y}')\nfig.show()","b5dded79":"transactions=[]\nfor item in bakeryDF['TransactionNo'].unique():\n    lst=list(set(bakeryDF[bakeryDF['TransactionNo']==item]['Items']))\n    transactions.append(lst)\n\ntransactions[0:10]","1e5e91e8":"te = TransactionEncoder()\nencodedData = te.fit(transactions).transform(transactions)\ndata = pd.DataFrame(encodedData, columns=te.columns_)\ndata.head()","aa9aba5e":"frequentItems= apriori(data, use_colnames=True, min_support=0.02)\nfrequentItems.head()","69dd2d7c":"rules = association_rules(frequentItems, metric=\"lift\", min_threshold=1)\nrules.antecedents = rules.antecedents.apply(lambda x: next(iter(x)))\nrules.consequents = rules.consequents.apply(lambda x: next(iter(x)))\nrules.head()","e853d802":"network_A = list(rules[\"antecedents\"].unique())\nnetwork_B = list(rules[\"consequents\"].unique())\nnode_list = list(set(network_A + network_B))\nG = nx.Graph()\nfor i in node_list:\n    G.add_node(i)\nfor i,j in rules.iterrows():\n    G.add_edges_from([(j[\"antecedents\"], j[\"consequents\"])])\npos = nx.spring_layout(G, k=0.5, dim=2, iterations=400)\nfor n, p in pos.items():\n    G.nodes[n]['pos'] = p\n\nedge_trace = go.Scatter(x=[], y=[], line=dict(width=0.5, color='#888'), hoverinfo='none', mode='lines')\n\nfor edge in G.edges():\n    x0, y0 = G.nodes[edge[0]]['pos']\n    x1, y1 = G.nodes[edge[1]]['pos']\n    edge_trace['x'] += tuple([x0, x1, None])\n    edge_trace['y'] += tuple([y0, y1, None])\n\nnode_trace = go.Scatter(x=[], y=[], text=[], mode='markers', hoverinfo='text',\n    marker=dict(showscale=True, colorscale='Burg', reversescale=True, color=[], size=15,\n    colorbar=dict(thickness=10, title='Node Connections', xanchor='left', titleside='right')))\n\nfor node in G.nodes():\n    x, y = G.nodes[node]['pos']\n    node_trace['x'] += tuple([x])\n    node_trace['y'] += tuple([y])\n\nfor node, adjacencies in enumerate(G.adjacency()):\n    node_trace['marker']['color']+=tuple([len(adjacencies[1])])\n    node_info = str(adjacencies[0]) +'<br>No of Connections: {}'.format(str(len(adjacencies[1])))\n    node_trace['text']+=tuple([node_info])\n\nfig = go.Figure(data=[edge_trace, node_trace], \n    layout=go.Layout(title='Item Connections Network', titlefont=dict(size=20),\n    plot_bgcolor='white', showlegend=False, margin=dict(b=0,l=0,r=0,t=50),\n    xaxis=dict(showgrid=False, zeroline=False, showticklabels=False),\n    yaxis=dict(showgrid=False, zeroline=False, showticklabels=False)))\n\niplot(fig)","0d0d11a3":"index_names = rules[rules['consequents'] == 'Coffee'].index\nrefinedRules = rules.drop(index_names).sort_values('lift', ascending=False)\nrefinedRules.drop(['leverage','conviction'], axis=1, inplace=True)\nrefinedRules = refinedRules.reset_index()\nrefinedRules","94f29772":"<div style=\"color:white;\n            display:fill;\n            border-radius:5px;\n            background-color:#E8F6EF;  \n            font-size:100%;\n            theme:cosmo;\n            letter-spacing:0.5px\">\n<h3 style=\"padding-left: 20px; padding-top: 20px; color:#4a4a4a; font-family:Arial;\"><b>EDA Summary:<\/b><\/h3>\n<p style=\"padding-left: 20px; padding-bottom: 20px; color:#4a4a4a; font-size:110%;\"> \n<b>Coffee<\/b> is the best-selling product by far, followed by <b>bread<\/b> and <b>tea<\/b>. The bakery seems to be making most of its sales in the afternoon everyday with over <b>56%<\/b> of the sales. Sales fall sharply after that. However the bakery makes a decent amount of sales in the morning as well. For obvious reasons, the sales are high as expected during the weekends. However the sales seem to be quite uniform rest of the days. The bakery seems to be heavily occupied and makes most of its business from November to March.\n<\/p>\n<\/div>","e74ecf9c":"<h1 style=\"text-align:center; font-size:250%; font-family:Arial;\"><b>The Bread Basket<\/b><\/h1> ","6cc15e6a":"<div style=\"color:white;\n            display:fill;\n            border-radius:5px;\n            background-color:#E8F6EF;  \n            font-size:100%;\n            theme:cosmo;\n            letter-spacing:0.5px\">\n<h3 style=\"padding-left: 20px; padding-top: 20px; color:#4a4a4a; font-family:Arial;\"><b>Variables<\/b>\n<\/h3>\n<ul style=\"padding-left: 40px; padding-bottom: 20px; color:#4a4a4a; font-size:110%;\">\n    <li><code>TransactionNo<\/code> : <b>9465<\/b> distinct values<\/li>\n    <li><code><b>Items<\/b><\/code> has a high cardinality: <b>94<\/b> distinct values<\/li>\n    <li><code><b>DateTime<\/b><\/code> has a high cardinality: <b>9182<\/b> distinct values<\/li>\n    <li><code><b>Daypart<\/b><\/code> has <b>4<\/b> distinct values<\/li>\n    <li><code><b>DayType<\/b><\/code> has <b>2<\/b> distinct values<\/li>\n<\/ul>\n<\/div>","0cc52905":"<p style=\"color:#4a4a4a; font-size:110%;\">The bakery seems to be heavily occupied and makes most of its business from November to March.<\/p>","8e59d753":"<p style=\"color:#4a4a4a; font-size:110%;\">For obvious reasons, the sales are high as expected during the weekends. However the sales seem to be quite uniform rest of the days.<\/p>","8c038386":"- <h4 style=\"text-align:left; font-family:Arial;\"><b>list of all the transactions<\/b><\/h4>","6455be5d":"<p style=\"color:#4a4a4a; font-size:110%;\">Need to extract months and days from the dataset for further analysis.<\/p>","88f22f54":"<h3 style=\"text-align:left; font-family:Arial;\"><b>4.2 Association Rules Generation<\/b><\/h3>\n\n- <h4 style=\"text-align:left; font-family:Arial;\"><b>frequent items<\/b><\/h4>","7fd38625":"<h2 style=\"text-align:left; font-family:Arial;\"><b>Summary:<\/b><\/h2> ","31e027f8":"<div style=\"color:white;\n            display:fill;\n            border-radius:5px;\n            background-color:#EEF7FA;  \n            font-size:100%;\n            theme:cosmo;\n            letter-spacing:0.5px\">\n<h3 style=\"padding-left: 20px; padding-top: 20px; color:#4a4a4a; font-family:Arial;\"><b>Insights<\/b>\n<\/h3>\n<ul style=\"padding-left: 40px; padding-bottom: 20px; color:#4a4a4a; font-size:110%;\">\n<li>Coffee is the bestseller of this bakery and it shows association with <b>8<\/b> other items.<\/li>\n<li>Over <b>11%<\/b> coffee lovers also buy cake along with while almost <b>10%<\/b> of them buy pastry along with it.<\/li>\n<li>Over <b>16%<\/b> of tea consumers also buy cakes and over <b>22%<\/b> cake lovers also buy tea.<\/li>\n<li>Among the pastry lovers, over <b>33%<\/b> of them also buy bread, while nearly <b>9%<\/b> of those who buy pastry also buy bread.<\/li>\n<\/ul>\n<\/div>","086c92c8":"<h2 style=\"text-align:left; font-family:Arial;\"><b>5. Refining Rules<\/b><\/h2> ","33187496":"<div style=\"color:white;\n            display:fill;\n            border-radius:5px;\n            background-color:#E8F6EF;  \n            font-size:100%;\n            theme: cosmo;\n            letter-spacing:0.5px\">\n<h3 style=\"padding-left: 20px; padding-top: 20px; color:#4a4a4a; font-family:Arial;\"><b>Overview<\/b>\n<\/h3>\n<p style=\"padding-left: 20px; padding-right: 20px; color:#4a4a4a; font-size:110%;\">\nThe dataset provides transaction details of all items purchased between 2016 and 2017 from the bakery online. The dataset has <b>20507<\/b> entries over <b>9000<\/b> transactions, and 4 columns.\n<\/p>\n<ul style=\"padding-left: 40px; padding-bottom: 20px; color:#4a4a4a; font-size:110%;\">\n    <li>Number of variables: 1<\/li>\n    <li>Numeric variables: 1<\/li>\n    <li>Categorical variables: 4<\/li>\n    <li>Number of observations: 20507<\/li>\n    <li>Total number of transactions: 9465<\/li>\n    <li>Missing cells : 0<\/li>\n<\/ul>\n<\/div>","2b22766f":"<p style=\"color:#4a4a4a; font-size:110%;\">Coffee is the best-selling product by far, followed by bread and tea.<\/p>","329054d3":"<h2 style=\"text-align:left; font-family:Arial;\"><b>2. Loading and Reading Dataset<\/b><\/h2> ","1c9e6872":"<p style=\"color:#4a4a4a; font-size:110%;\">The bakery seems to be making most of its sales in the afternoon everyday with over 56% of the sales. Sales fall sharply after that. However the bakery makes a decent amount of sales in the morning as well.<\/p>","2a176b6c":"<h2 style=\"text-align:left; font-family:Arial;\"><b>3. Data Exploration and Visualization<\/b><\/h2> ","7af9aa00":"<h2 style=\"text-align:left; font-family:Arial;\"><b>4. Association Rules Generation<\/b><\/h2> ","9e518ea9":"<h3 style=\"text-align:left; font-family:Arial;\"><b>3.1 Let's look into the frequent items and the best sellers<\/b><\/h3> ","d97e45f4":"- <h4 style=\"text-align:left; font-family:Arial;\"><b>one hot encoding<\/b><\/h4>","443dca92":"<h3 style=\"text-align:left; font-family:Arial;\"><b>3.3 Further let's look into the monthly and weekly sales<\/b><\/h3> ","8527d2ce":"<h3 style=\"text-align:left; font-family:Arial;\"><b>4.3 Rules Visualization<\/b><\/h3> ","8c32fccf":"<h3 style=\"text-align:left; font-family:Arial;\"><b>3.2 Let's look into the peak hours of sales<\/b><\/h3> ","82532ee8":"<h2 style=\"text-align:left; font-family:Arial;\"><b>1. Importing Necessary Dependencies<\/b><\/h2> ","35f207c9":"- <h4 style=\"text-align:left; font-family:Arial;\"><b>association rules<\/b><\/h4>","ca38cfb6":"<div style=\"color:white;\n            display:fill;\n            border-radius:5px;\n            background-color:#F9ECEC;  \n            font-size:100%;\n            theme:cosmo;\n            letter-spacing:0.5px\">\n<h3 style=\"padding-left: 20px; padding-top: 20px; color:#4a4a4a; font-family:Arial;\"><b>Business Strategy<\/b>\n<\/h3>\n<p style=\"padding-left: 20px; color:#4a4a4a; font-size:110%;\">\nThere are a couple of strategies that the bakery can adopt if is yet to use, to increase its sales considering the associations we have seen between coffee and its 8 partners.\n<\/p>\n<ul style=\"padding-left: 40px; padding-bottom: 20px; color:#4a4a4a; font-size:110%;\">\n<li>Promotional discounts on these items can entice customers to buy coffee or the other way round.<\/li>\n<li>Arranging placements of these items close to coffee ordering counter can be a good strategy to tempt customers into buying them.<\/li>\n<\/ul>\n<\/div>","d739043a":"<h3 style=\"text-align:left; font-family:Arial;\"><b>4.1 Data Preparation for Association Rule Mining<\/b><\/h3>\n<p style=\"color:#4a4a4a; font-size:110%;\">Apriori algorithm requires a dataframe with all the transactions one hot encoded for all the items.<\/p>","2e1aaaae":"<p style=\"color:#4a4a4a; font-size:110%;\">The confidence for a very frequent consequent is always high even if there is a very weak association. So this doesn't give a clearer picture. Here, coffee is by far the most frequent item and the best seller. It can therefore be recommended anyway with every other item. So, we can drop the rules recommending coffee to get a clearer picture of the real unknown rules generated from the data.<\/p>","01295d8d":"<h2 style=\"text-align:left; font-family:Arial;\"><b>Data Summary:<\/b><\/h2>"}}