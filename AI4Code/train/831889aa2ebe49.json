{"cell_type":{"01589d0d":"code","db6ef3aa":"code","2d3f9ddf":"code","23c50006":"code","1972768b":"code","8a97ae71":"code","acc65b12":"code","1e3144ed":"code","0fbcdec6":"code","101610a4":"code","a1ac2205":"code","de93c0fb":"code","48ce2404":"code","3cec45c1":"code","569800a6":"code","2635a407":"code","f96343c2":"code","6e913168":"code","b19276db":"code","7af731a4":"code","2c451ead":"code","dbc14652":"code","bc1f7cae":"code","22024b77":"code","1f10a097":"code","e1691537":"code","8c35551d":"code","3993fddf":"code","260ec222":"code","b7102f23":"code","7795de3a":"code","3ebe7c74":"code","efb22ab9":"code","93546d56":"code","7b579c26":"code","eb9bb75d":"code","fb1a047b":"code","2eb80d7c":"code","98bb461b":"code","65dca582":"markdown","e7b9c5a3":"markdown","d592ecc4":"markdown","845685b3":"markdown","dea27d84":"markdown","128da49b":"markdown","64037505":"markdown","ead2bca7":"markdown"},"source":{"01589d0d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nprint(os.listdir(\"..\/input\"))","db6ef3aa":"import matplotlib.pyplot as plt\nimport seaborn as sns","2d3f9ddf":"df = pd.read_csv('..\/input\/BreadBasket_DMS.csv')\ndf.head()","23c50006":"df.Item.value_counts()","1972768b":"df.isnull().any()","8a97ae71":"print(\"unique items :\" ,df.Item.nunique())","acc65b12":"df.Item.unique()","1e3144ed":"df.loc[(df['Item']==\"NONE\")].head() ","0fbcdec6":"len(df.loc[(df['Item']==\"NONE\")])","101610a4":"df.drop(df[df['Item']=='NONE'].index, inplace=True)","a1ac2205":"df.info()","de93c0fb":"df.shape","48ce2404":"df[\"date\"] = pd.to_datetime(df['Date'])\ndf[\"dayname\"] = df[\"date\"].dt.day_name()\ndf.drop(\"date\", axis=1, inplace = True)\ndf.head()","3cec45c1":"df[\"year\"],df[\"month\"],df[\"day\"]=df[\"Date\"].str.split('-').str\ndf[\"hour\"],df[\"minute\"],df[\"second\"]=df[\"Time\"].str.split(\":\").str\ndf.drop(\"Date\", axis=1, inplace = True)\ndf.drop(\"Time\", axis=1, inplace = True)\ndf.head()","569800a6":"df.info()","2635a407":"#season\ndf[\"month\"]=df[\"month\"].astype(int)\ndf.loc[(df['month']==12),'season']=\"winter\"\ndf.loc[(df['month']>=1)&(df['month']<=3),'season']=\"winter\"\ndf.loc[(df['month']>3)&(df['month']<=6),'season']=\"spring\"\ndf.loc[(df['month']>6)&(df['month']<=9),'season']=\"summer\"\ndf.loc[(df['month']>9)&(df['month']<=11),'season']=\"fall\"\n\ndf.head()","f96343c2":"plt.figure(figsize=(20,50))\ndf['Item'].value_counts().sort_values().plot.barh(title='Top Item Sales',grid=True)","6e913168":"plt.figure(figsize=(20,10))\nsns.countplot(x='dayname',data=df).set_title('Pattern of Transcation Trend Throughout The Week',fontsize=25)","b19276db":"plt.figure(figsize=(15,5))\nsns.countplot(x='season',data=df).set_title('Pattern of Transation Trend During Different Season\\'s',fontsize=25)","7af731a4":"df['season'].unique()","2c451ead":"plt.figure(figsize=(15,5))\nsns.countplot(x='month',data=df).set_title('Transation Trend During Month',fontsize=25)","dbc14652":"plt.figure(figsize=(15,5))\nsns.countplot(x='year',data=df).set_title('Transation Trend During Year',fontsize=25)","bc1f7cae":"plt.figure(figsize=(15,5))\nsns.countplot(df[\"day\"].astype(int)).set_title('pattern of transcation for each day')\nplt.show()","22024b77":"plt.figure(figsize=(15,5))\nsns.countplot(df[\"hour\"].astype(int)).set_title('pattern of transcation for each hour')\nplt.show()","1f10a097":"plt.figure(figsize=(15,5))\nsns.barplot(df[\"hour\"].astype(int), df[\"Transaction\"].value_counts()).set_title('transcation per hour')\nplt.show()","e1691537":"plt.figure(figsize=(15,5))\nsns.barplot(df[\"year\"].astype(int), df[\"Transaction\"].value_counts()).set_title(\"Transcation through year\")\nplt.show()","8c35551d":"plt.figure(figsize=(15,5))\nsns.barplot(df[\"season\"], df[\"Transaction\"].value_counts()).set_title('Transcation through season')\nplt.show()","3993fddf":"plt.figure(figsize=(15,5))\nsns.barplot(df[\"dayname\"], df[\"Transaction\"].value_counts()).set_title('Transcations per day')\nplt.show()","260ec222":"plt.figure(figsize=(15,5))\nsns.countplot(df[\"Transaction\"].value_counts())\nplt.show()\n","b7102f23":"from mlxtend.frequent_patterns import apriori\nfrom mlxtend.frequent_patterns import association_rules","7795de3a":"# Convert the units to 1 hot encoded values\ndef encode_units(x):\n    if x <= 0:\n        return 0\n    if x >= 1:\n        return 1    ","3ebe7c74":"encoding = df.groupby(['Transaction','Item'])['Item'].count().unstack().reset_index().fillna(0).set_index('Transaction').astype(int)\nencoding.head()","efb22ab9":"encoding.tail()","93546d56":"encoding = encoding.applymap(encode_units)","7b579c26":"frequent_itemsets = apriori(encoding, min_support=0.01, use_colnames=True)","eb9bb75d":"frequent_itemsets.head(21)","fb1a047b":"# Create the rules\nrules = association_rules(frequent_itemsets, metric=\"lift\", min_threshold=1)\nrules","2eb80d7c":"output = rules.sort_values(by=['confidence'], ascending=False)\noutput","98bb461b":"rules[ (rules['lift'] >= 1) &\n       (rules['confidence'] >= 0.5) ]","65dca582":"## VISUALIZATION","e7b9c5a3":"## Conclusion:\nwe can see that  above toast and coffee are top most commonly bought together. This makes sense since people who purchase toast would like to have coffee with it\n* which has Confidence of 70.44%\n* Lift of 1.47 tells us that coffee is 1.47 times more likely to be bought by the customers who buy toast.\n","d592ecc4":"### Import modelling libraries","845685b3":"We required only to see the rules where confidence is greater than or equal to 50% so:\n\n### Lift\n*  lift = 1 implies no relationship between A and B. \n   (ie: A and B occur together only by chance)\n*  lift > 1 implies that there is a positive relationship between A and B.\n   (ie:  A and B occur together more often than random)\n* lift < 1 implies that there is a negative relationship between A and B.\n   (ie:  A and B occur together less often than random)\n\n ","dea27d84":"### Item top sales","128da49b":"### From the above plot we can conclude that as below \n*   Top 5 purchased Items are \n    1. Coffee\n    2. Bread\n    3. Tea\n    4. cake\n    5. pastry\n    \n    \n *  Least 5 purchased Items are :\n     1. Polenta\n     2. Bacon\n     3. Olum& Polenta\n     4. Adjustments\n     5. Raw Bars ","64037505":"## Feature Engineering","ead2bca7":"## Modelling"}}