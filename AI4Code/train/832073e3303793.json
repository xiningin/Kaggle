{"cell_type":{"031c213b":"code","4300c5f2":"code","50c4364f":"code","181b2ab1":"code","8c49cc39":"code","eb48bded":"code","0ccf7edb":"code","abb21357":"code","4fbe3f57":"code","eb99f2bb":"code","458b2645":"code","585ee166":"code","4d150d28":"code","76ab4d73":"code","de7e87b7":"code","a7bdadba":"code","d3db3622":"code","42798a8a":"code","ae4aa671":"code","c26bd9e3":"code","726e1195":"code","591ad75b":"code","837a1260":"code","982fa08a":"code","c6f0556d":"code","0b986271":"code","c3ad6efa":"code","83b11ccf":"code","80278d00":"code","f4488117":"code","0a6be2e6":"code","7b64c84c":"code","4abe8341":"code","d2687183":"code","a623c484":"code","dd4d5609":"code","ec015ddb":"code","d379ae6f":"code","9c2786b7":"code","ed84181c":"code","40abdef5":"code","cd4f8cfe":"code","9dd113a1":"code","fd9a9d91":"code","ae466acf":"code","7e2fcbf7":"code","fe0c8dd1":"code","cf6cc0c1":"code","c8ebbe52":"code","ff1cc616":"code","b473e884":"code","e2366bf9":"code","f12de628":"code","8b2fa7eb":"code","98737362":"code","3937406e":"code","bb0b5e62":"code","db785a6e":"code","6cf0022e":"code","2e07fb46":"code","bf539a75":"code","18e8d8eb":"markdown","fda59165":"markdown","542f0dfa":"markdown","f039af52":"markdown","b1d108cc":"markdown","f68418b9":"markdown","d84bb312":"markdown","61848b78":"markdown","6682ea1b":"markdown","76ee025c":"markdown","ae8ee7b3":"markdown","75ff296a":"markdown","750624ca":"markdown","670d215c":"markdown","968a1716":"markdown","32e3fea8":"markdown","d0c67ef7":"markdown"},"source":{"031c213b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4300c5f2":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom pandas import plotting\n\n#plotly \nimport plotly.offline as py\nimport plotly.graph_objects as go\nfrom plotly.offline import init_notebook_mode, iplot\nfrom plotly import tools\ninit_notebook_mode(connected=True)\nimport plotly.figure_factory as ff\nimport plotly.express as px","50c4364f":"plt.style.use('seaborn-darkgrid')\n\norange_black = ['#AB63FA', '#df861d', '#00CC96', '#aa3d01',\n                '#a30e15', '#800000', '#636EFA']\n\nplt.rcParams['figure.figsize'] = (10,5) \nplt.rcParams['figure.facecolor'] = '#FFFACD' \nplt.rcParams['axes.facecolor'] = 'FFFFE0' \nplt.rcParams['axes.grid'] = True \nplt.rcParams['grid.color'] = orange_black[3]\nplt.rcParams['grid.linestyle'] = '--'","181b2ab1":"df=pd.read_csv('..\/input\/personal-loan-data\/Personal Loan Data.xlsx - Sheet1.csv')\ndf.head()","8c49cc39":"df.info()","eb48bded":"df.isnull().sum()\n","0ccf7edb":"df.columns","abb21357":"columns=['Age', 'Experience', 'Income', 'Family', 'CCAvg', 'Education',\n       'Mortgage', 'Personal Loan', 'Securities Account', 'CD Account',\n       'Online', 'CreditCard']","4fbe3f57":"for i in columns:\n    a=df[i].value_counts()\n    print(i)\n    print(a)\n    print(\"---------^^^-------------\")\n    ","eb99f2bb":"col = \"Age\"\ngrouped = df[col].value_counts().reset_index()\ngrouped = grouped.rename(columns = {col : \"count\", \"index\" : col})\n\n## plot\ntrace = go.Pie(labels=grouped[col], values=grouped['count'], pull=[0.05, 0], marker=dict(colors=[\"#6ad49b\", \"#a678de\"]))\nlayout = go.Layout(title=\"\", height=600, legend=dict(x=0.1, y=1.1))\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","458b2645":"for i in columns:\n    col = i\n    grouped = df[col].value_counts().reset_index()\n    grouped = grouped.rename(columns = {col : \"count\", \"index\" : col})\n\n    ## plot\n    trace = go.Pie(labels=grouped[col], values=grouped['count'], pull=[0.05, 0], marker=dict(colors=[\"#6ad49b\", \"#a678de\"]))\n    layout = go.Layout(title=i, height=600, legend=dict(x=0.1, y=1.1))\n    fig = go.Figure(data = [trace], layout = layout)\n    iplot(fig)","585ee166":"column1=[ 'Family', 'Education',\n        'Personal Loan', 'Securities Account', 'CD Account',\n       'Online', 'CreditCard']","4d150d28":"for i in column1:\n    col = i\n    grouped = df[col].value_counts().reset_index()\n    grouped = grouped.rename(columns = {col : \"count\", \"index\" : col})\n\n    ## plot\n    trace = go.Pie(labels=grouped[col], values=grouped['count'], pull=[0.05, 0], marker=dict(colors=[\"#AB63FA\", \"#00CC96\"]))\n    layout = go.Layout(title=i+ \" counts\", height=600, legend=dict(x=0.1, y=1.1))\n    fig = go.Figure(data = [trace], layout = layout)\n    iplot(fig)","76ab4d73":"column2=['Age', 'Experience', 'Income',  'CCAvg', \n       'Mortgage']","de7e87b7":"for i in column2:\n    col = i\n\n    vc1 = df[col].value_counts().reset_index()\n    vc1 = vc1.rename(columns = {col : \"count\", \"index\" : col})\n    vc1['percent'] = vc1['count'].apply(lambda x : 100*x\/sum(vc1['count']))\n    vc1 = vc1.sort_values(col)\n\n    trace1 = go.Bar(x=vc1[col], y=vc1[\"count\"], name=\"TV Shows\", marker=dict(color=\"#a678de\"))\n    data = trace1\n    layout = go.Layout(title=i+\"'s' bar Chart\", legend=dict(x=0.1, y=1.1, orientation=\"h\"))\n    fig = go.Figure(data, layout=layout)\n    fig.show()","a7bdadba":"for i in column2:\n    col=i\n    sns.histplot(data=df, x=col, kde=True)\n    plt.title(i+\" Distribution Plot\")\n    plt.show()\n","d3db3622":"for i in column2:\n    col=i\n    sns.kdeplot(data=df, x=col, fill=True)\n    plt.title(i+\" Distribution Plot\")\n    plt.show()\n","42798a8a":"df.head()","ae4aa671":"df['Education'].value_counts()","c26bd9e3":"education=[1,2,3]","726e1195":"fig=px.sunburst(df, path=['Education'],values='Age')\n               \nfig.update_layout(\n    margin = dict(t=15, l=15, r=15, b=15))\nfig.show()","591ad75b":"for i in column2:\n    col=i\n    sns.kdeplot(data=df, x=col, fill=True)\n    plt.title(i+\" Distribution Plot\")\n    plt.show()\n","837a1260":"for i in education:\n    x=df[df['Education']==i]\n    a=x['Age'].value_counts()\n    #a.plot(kind=\"barh\", figsize=(10,10))\n    plt.figure(figsize=(15,10))\n    sns.histplot(x=i, y=a, legend=True)\n    plt.xlabel(i)\n    plt.show()","982fa08a":"x.columns","c6f0556d":"fig=px.histogram(x, color=\"Age\" , x=\"Family\")\n#fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\n#fig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.update_layout(template=\"plotly_dark\")\nfig.show()","0b986271":"fig=px.histogram(df, color=\"Education\" , x=\"Age\")\n#fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\n#fig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.update_layout(template=\"plotly_dark\")\nfig.show()","c3ad6efa":"df.head()","83b11ccf":"df.shape","80278d00":"df['Mortgage'].value_counts()","f4488117":"5000-3462","0a6be2e6":"x=df[df['Education']==1]\na=x['Mortgage'].value_counts()\nprint(a)\nlen(a)","7b64c84c":"x=df[df['Education']==2]\na=x['Mortgage'].value_counts()\nprint(a)\nlen(a)","4abe8341":"x=df[df['Education']==3]\na=x['Mortgage'].value_counts()\nprint(a)\nlen(a)","d2687183":"col={1}","a623c484":"for i in education:\n    x=df[df['Education']==i]\n    a=x['Mortgage'].value_counts()\n    print(i)\n    print(a)\n    len(a)\n    print(\"---------\")\n    ","dd4d5609":"fig=px.histogram(df, x=\"Education\" , color=\"Mortgage\")\n#fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\n#fig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.update_layout(template=\"plotly_dark\")\nfig.show()","ec015ddb":"df.head()","d379ae6f":"df['Personal Loan'].value_counts()","9c2786b7":"df['CreditCard'].value_counts()","ed84181c":"df['Securities Account'].value_counts()","40abdef5":"for i in education:\n    x=df[df['Education']==i]\n    a=x['Personal Loan'].value_counts()\n    print(i)\n    print(a)\n    print(\"---------\")    ","cd4f8cfe":"for i in education:\n    x=df[df['Education']==i]\n    a=x['CreditCard'].value_counts()\n    print(i)\n    print(a)\n    print(\"---------\")    ","9dd113a1":"for i in education:\n    x=df[df['Education']==i]\n    a=x['Securities Account'].value_counts()\n    print(i)\n    print(a)\n    print(\"---------\")    ","fd9a9d91":"for i in education:\n    x=df[df['Education']==i]\n    a=x['Online'].value_counts()\n    print(i)\n    print(a)\n    print(\"---------\")    ","ae466acf":"for i in education:\n    x=df[df['Education']==i]\n    a=x['CD Account'].value_counts()\n    print(i)\n    print(a)\n    print(\"---------\")    ","7e2fcbf7":"df['Family'].value_counts()","fe0c8dd1":"family=[1,2,3,4]","cf6cc0c1":"for i in family:\n    x=df[df['Family']==i]\n    a=x['Personal Loan'].value_counts()\n    print(i)\n    print(a)\n    print(\"---------\")    ","c8ebbe52":"for i in family:\n    x=df[df['Family']==i]\n    a=x['CreditCard'].value_counts()\n    print(i)\n    print(a)\n    print(\"---------\")    ","ff1cc616":"for i in family:\n    x=df[df['Family']==i]\n    a=x['Securities Account'].value_counts()\n    print(i)\n    print(a)\n    print(\"---------\")    ","b473e884":"for i in family:\n    x=df[df['Family']==i]\n    a=x['Online'].value_counts()\n    print(i)\n    print(a)\n    print(\"---------\")    ","e2366bf9":"for i in family:\n    x=df[df['Family']==i]\n    a=x['CD Account'].value_counts()\n    print(i)\n    print(a)\n    print(\"---------\")    ","f12de628":"df.head()","8b2fa7eb":"df['CD Account'].value_counts()","98737362":"sns.kdeplot(df['Age'], fill=True)","3937406e":"df['Age'].describe()","bb0b5e62":"d=df['Age'].value_counts()","db785a6e":"age=pd.read_csv('..\/input\/age-dis\/Age DIstribution - Sheet1.csv')\nage.head()","6cf0022e":"sns.lineplot(x=age['Age'], y=age['% value contribution'])","2e07fb46":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=age['Age'], y=age['% value contribution'], name=\"% Age \", line=dict(color='firebrick', width=4,dash='dash')))\nfig.update_layout(title='% Age distribution',\n                   xaxis_title='Districts',\n                   yaxis_title='Probability of Fality')\n\nfig.show()","bf539a75":"age['% value contribution'].plot()","18e8d8eb":"# Contigency Table for Family vs Credit Card","fda59165":"# Contigency Table for Family vs Online","542f0dfa":"# Contigency Table","f039af52":"# Checking the missing values","b1d108cc":"# Contigency Table for Eduation vs Securities Account","f68418b9":"# Contigency Table for Eduation vs Credit Card","d84bb312":"# Contigency Table for Eduation vs Personal Loan","61848b78":"# Value Counts of different columns","6682ea1b":"# Distribution of the other features","76ee025c":"# Visualizing the categorical features : Where the numeber of the classes of the dataset is limitted","ae8ee7b3":"# Dataset Visualization- Visualizing the different features of the dataset\n","75ff296a":"# Contigency Table for Eduation vs CD Account","750624ca":"# Contigency Table for Family vs Personal Loan","670d215c":"# Contigency Table for Family vs CD Account","968a1716":"# COnclusion:\n* Number of Sudent who have not taken the loan are 3462\n* Number of Sudent who have taken the loan are 1538","32e3fea8":"# Contigency Table for Family vs Securities Account","d0c67ef7":"# Contigency Table for Eduation vs Online"}}