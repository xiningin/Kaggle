{"cell_type":{"a32ff805":"code","104264ee":"code","0875108b":"code","8cdbd83e":"code","ca6a2457":"code","85a94558":"code","ccb6fa3a":"code","53297e82":"code","d11cd3c5":"code","5466fba7":"code","e0502a16":"code","6bf87ec5":"code","f32094ba":"code","e3fdf0f5":"code","fa635036":"code","c9f0d7c5":"code","aa42860c":"code","785ea078":"code","5dcd353a":"code","530b195e":"code","522754c1":"code","fead6d4a":"code","3c159aca":"code","314853dd":"code","df192a17":"code","2d25622c":"code","3a9b98ba":"code","e485abce":"code","e0356c4b":"code","1717a29a":"markdown","30bdf980":"markdown","4b96db69":"markdown","da8312c5":"markdown","efdd3ecc":"markdown","0508c44d":"markdown","0463756d":"markdown","b5c3513a":"markdown","5020e429":"markdown","b535bd39":"markdown","23b70332":"markdown","896890e2":"markdown","daf0a8e3":"markdown","608b6dd8":"markdown","d6a7601b":"markdown","c74d0cb2":"markdown","99000cb1":"markdown","8cdcdd43":"markdown","04648eee":"markdown"},"source":{"a32ff805":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","104264ee":"df = pd.read_csv(\"..\/input\/tmdb-movie-metadata\/tmdb_5000_movies.csv\")\n","0875108b":"df.info()\ndf.head()","8cdbd83e":"dropped_df = df.drop([\"homepage\", \"keywords\", \"overview\", \"production_companies\", \"production_countries\", \"original_language\", \"status\", \"spoken_languages\", \"tagline\", \"release_date\", \"original_title\"], axis=1)\ndropped_df.head()","ca6a2457":"# I wanted to look at the relationship between popularity and movie genres,\n# but I had to give it up as 4 different movie genres were entered for a single movie in the dataset.\n\n#dropped_df[\"genres\"].describe()\n\n#d_genres = dropped_df.loc[:,\"genres\"]\n#print(d_genres)\n#print(\" \")\n#data_dict = d_genres.to_dict()\n#print(data_dict)\n\n# That's why I am gonna extract \"genres\" too.\n","85a94558":"dropped_df2 = dropped_df.drop([\"genres\"], axis= 1)\ndropped_df2.head(10)","ccb6fa3a":"dropped_df2.corr()","53297e82":"#Let's visualize the correlation\n#correlation map\nf,ax = plt.subplots(figsize = (10,10))\nsns.heatmap(dropped_df2.corr(), annot = True, linewidths= .2, fmt= \".2f\",ax=ax )\nplt.show()","d11cd3c5":"dropped_df2.plot(kind=\"scatter\",x=\"popularity\",y=\"revenue\",alpha=.5,color=\"b\",grid=True,figsize=(13,13))\nplt.xlabel(\"popularity\")\nplt.ylabel(\"revenue\")\nplt.title(\"popularity vs. revenue\")\nplt.show()","5466fba7":"dropped_df2.plot(kind=\"scatter\",y=\"popularity\",x=\"vote_count\",alpha=.5,color=\"g\",grid=True,figsize=(13,13))\nplt.ylabel(\"popularity\")\nplt.xlabel(\"vote_count\")\nplt.title(\"popularity vs. vote_count\")\nplt.show()","e0502a16":"dropped_df.plot(kind=\"scatter\",y=\"revenue\",x=\"vote_count\",alpha=.5,color=\"r\",grid=True,figsize=(13,13))\nplt.ylabel(\"revenue\")\nplt.xlabel(\"vote_count\")\nplt.title(\"revenue vs. vote_count\")\nplt.show()","6bf87ec5":"dropped_df2.popularity.plot(kind=\"line\",color=\"r\", label=\"popularity\",lw=1,ls=\":\",alpha=.9, grid=True,figsize=(12,12))\nplt.xlabel(\"index\")\nplt.ylabel(\"popularity\")\nplt.legend(loc=\"upper right\")\nplt.title(\"Popularity\")\nplt.show()","f32094ba":"pop= dropped_df2.sort_values('popularity', ascending=False)\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(12,4))\n\nplt.barh(pop['title'].head(10),pop['popularity'].head(10),color='orange')\nplt.gca()\nplt.xlabel(\"Popularity\")\nplt.title(\"Popular Movies\")","e3fdf0f5":"dropped_df2.vote_average.plot(kind= \"hist\", color='crimson', bins=100, grid=True, figsize= (12,12))\nplt.xlabel('vote_avarage')\nplt.title('Vote avarage histogram')\nplt.show()","fa635036":"dropped_df2.runtime.plot(kind= \"hist\", color='purple', bins=100, grid=True, figsize= (12,12))\nplt.xlabel('runtime')\nplt.title('Runtime histogram')\nplt.show()","c9f0d7c5":"#Top 10 most popular films\npop.head(6)","aa42860c":"#title and vote_avarage\ndictionary = {'Minions':'6.4', 'Interstellar':'8.1', 'Deadpool':'7.4', 'Guardians of the Galaxy':'7.9', 'Mad Max:Fury Road':'7.2', 'Jurassic World':'6.5'}\ndictionary","785ea078":"pop.tail(3)","5dcd353a":"dictionary_tail = {'Penitentiary':'4.9','Alien Zone':'4.0','America Is Still the Place':'0.0'}\ndictionary.update(dictionary_tail)\ndictionary","530b195e":"print(dictionary.keys())\nprint(dictionary.values())\ndictionary ['America Is Still the Place'] = \"2.0\" #update existing entry\ndictionary","522754c1":"print('Big Hero 6'in dictionary ) #check include or not","fead6d4a":"#comparisson operators\np=dropped_df2[\"popularity\"] > 200 #The popularity of only the 11 most popular films is greater than 200\ndropped_df2[p]","3c159aca":"x=pop[\"vote_average\"] > 7.5 #The avarage vote of most popular films is greater than 7.0\npop[x]","314853dd":"len(pop[x]) #The average rating of 271 of 4803 films is more than 7.5","df192a17":"pop[np.logical_and(pop['vote_average']>7.5, pop['budget']>150000000 )]","2d25622c":"liste = [724,481,203,187,167]\nfor index, value in enumerate(liste):\n    print(index,':', value)\n","3a9b98ba":"dict2 = {'Interstellar':'724','Guardians of the Galaxy':'481','Big Hero 6':'203','The Dark Night':'187','Inception':'167'}\nfor key, value in dict2.items():\n    print(key,':', value)","e485abce":"for index,value in pop[['title']][0:1].iterrows():\n    print(index,\" : \",value)\nfor index,value in pop[['vote_average']][0:1].iterrows():\n    print(index,\" : \",value)\nfor index,value in pop[['popularity']][0:1].iterrows():\n    print(index,\" : \",value)","e0356c4b":"#title and vote_avarage\ndef f(**kwargs):\n    for key, value in kwargs.items():               \n        print(key, \" \", value)\nf( Minions = 6.4, Interstellar = 8.1, Deadpool = 7.4, GuardiansoftheGalaxy = 7.9, MadMaxFuryRoad = 7.2, JurassicWorld = 6.5)","1717a29a":"It looks a bit messy. Let's extract the features that we will not use.","30bdf980":"*  We think there might be a relationship btw vote_count and popularity. Lets look the scatter plot to understand the correlation btw them.","4b96db69":"There seems to be a relationship between some features.\nLet's draw graphics for the features that we think may be related.","da8312c5":"## 1. INTRODUCTION","efdd3ecc":"### SCATTER PLOT\n* We think there might be a relationship btw revenue and popularity. Lets look the scatter plot to understand the correlation btw them.","0508c44d":"The runtime of the films around 100 minutes.","0463756d":"### **HISTOGRAM **","b5c3513a":"Let's look at the correlation between features.","5020e429":" Let's create a dictionary for the 6 most popular movies.","b535bd39":"The dataset contains the following features:-\n\n    movie_id - A unique identifier for each movie.\n    cast - The name of lead and supporting actors.\n    crew - The name of Director, Editor, Composer, Writer etc.\n    budget - The budget in which the movie was made.\n    genre - The genre of the movie, Action, Comedy ,Thriller etc.\n    homepage - A link to the homepage of the movie.\n    id - This is infact the movie_id as in the first dataset.\n    keywords - The keywords or tags related to the movie.\n    original_language - The language in which the movie was made.\n    original_title - The title of the movie before translation or adaptation.\n    overview - A brief description of the movie.\n    popularity - A numeric quantity specifying the movie popularity.\n    production_companies - The production house of the movie.\n    production_countries - The country in which it was produced.\n    release_date - The date on which it was released.\n    revenue - The worldwide revenue generated by the movie.\n    runtime - The running time of the movie in minutes.\n    status - \"Released\" or \"Rumored\".\n    tagline - Movie's tagline.\n    title - Title of the movie.\n    vote_average - average ratings the movie recieved.\n    vote_count - the count of votes recieved.\n","23b70332":"\nNow, let's take the vote_average of more than 7.5 and the budget of more than 150000000 among the most popular movies:","896890e2":"* We think there might be a relationship btw revenue and vote_count. Lets look the scatter plot to understand the correlation btw them.","daf0a8e3":"The average vote of the movies in the dataset is 6-7 as seen in histogram graph.","608b6dd8":"It can be said from the tables that there is a rough proportion between them.","d6a7601b":" # **EXAMINATION OF TMDB 5000 MOVIE DATASET**\n\n* This notebook was written to examine the dataset called TMDB 5000 Movie.\n> This study has been prepared as homework for udemy course.\n* The main purpose is to understand the basics of data science and exercise.","c74d0cb2":"**Horizontal Bar Plot**\n>  We want to find movies that are very popular and they can be obtained by sorting the dataset by the popularity column.","99000cb1":"### LINE PLOT","8cdcdd43":"### DICTIONARY","04648eee":"Let's add 3 least popular movies to the dictionary."}}