{"cell_type":{"2a42fa07":"code","8e41dccd":"code","fba9a9c5":"code","c9524138":"code","6aa32297":"code","3a439fe8":"code","1adf44aa":"code","2d68e672":"code","72365bb7":"code","5ebbf08a":"code","31ef930c":"code","ec5d06f2":"code","d8aa58be":"code","d4669002":"code","8ead0ce7":"code","59235bc7":"code","484c7162":"code","2aeed318":"code","d8950fee":"code","740b118f":"code","d984de52":"code","18c697ee":"code","c3bb7c79":"code","4e24c4b2":"code","491c7fa3":"code","ef3d4ace":"code","e60b4415":"code","b811f556":"code","bc4f7347":"code","1aa9ca56":"code","49d16bdd":"code","d26f4be1":"code","888d8491":"code","f9e66ce9":"code","f696ce9c":"code","71966f64":"code","8a04e907":"code","d9a3f952":"code","5655e004":"code","373f3e76":"code","420151a7":"code","fc1592f9":"code","2ff6c36a":"code","67c78091":"code","aecf1e5c":"code","f0f2ccaf":"markdown","3e4eb92d":"markdown","f3666b0c":"markdown","5e6f9d6a":"markdown","1d2c92e2":"markdown","009c3185":"markdown","8734b80c":"markdown","c7f2a20a":"markdown","bbd642ff":"markdown","a7e1266c":"markdown","89d06594":"markdown","f9576d0b":"markdown","b3ef906c":"markdown","e1f57de1":"markdown","5c92b97d":"markdown"},"source":{"2a42fa07":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8e41dccd":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","fba9a9c5":"#df = pd.read_csv(\"kaggle_survey_2021_responses.csv\")","c9524138":"df = pd.read_csv(\"\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\")","6aa32297":"df.head()","3a439fe8":"df_questions = pd.DataFrame(df.loc[0])","1adf44aa":"pd.set_option('display.max_colwidth', None)\ndf_questions.T","2d68e672":"# This is give us the questions with radio button only\ndf_questions[~df_questions.index.str.contains(\"_\")]","72365bb7":"# These are the questions with Checkboxes\ndf_questions[df_questions.index.str.contains(\"_\")]","5ebbf08a":"df = df.drop(df.index[0])","31ef930c":"df.head()","ec5d06f2":"df.info()","d8aa58be":"df['Time from Start to Finish (seconds)'] = pd.to_numeric(df['Time from Start to Finish (seconds)'])","d4669002":"df['Time from Start to Finish (seconds)']","8ead0ce7":"df['Time from Start to Finish (seconds)'].plot(kind='hist', logy='sym')","59235bc7":"df['Time from Start to Finish (seconds)'].plot(kind='kde', logx='sym', rot=45)","484c7162":"df['Q1']","2aeed318":"data = df.groupby(\"Q1\").size().sort_values()","d8950fee":"data","740b118f":"data.plot.pie(autopct=\"%.1f%%\", figsize=(13, 13))","d984de52":"df['Q2'].value_counts()","18c697ee":"plt.xticks(rotation=45)\nsns.histplot(x='Q2', data=df)","c3bb7c79":"df['Q3']","4e24c4b2":"df['Q3'].value_counts()","491c7fa3":"data = df.groupby(\"Q3\").size().sort_values(ascending=True)","ef3d4ace":"data.plot(kind='barh', figsize=(5,20), logx=True)","e60b4415":"df['Q4']","b811f556":"data = df.groupby(\"Q4\").size().sort_values(ascending=False)\ndata","bc4f7347":"data.plot.pie(autopct=\"%.1f%%\", figsize=(10, 10))","1aa9ca56":"df['Q5']","49d16bdd":"df['Q5'].value_counts()","d26f4be1":"data = df['Q5'].value_counts()","888d8491":"data","f9e66ce9":"data.plot(kind='barh')","f696ce9c":"df['Q6']","71966f64":"df['Q6'].value_counts()","8a04e907":"data = df['Q6'].value_counts()","d9a3f952":"data.plot(kind='pie')","5655e004":"df['Q8']","373f3e76":"data = df['Q8'].value_counts()\ndata","420151a7":"data.plot(kind='bar')","fc1592f9":"data.plot(kind='bar', logy=True)","2ff6c36a":"sns.catplot(data=df, \n            x='Q1', hue='Q2',\n            kind='count',\n            log=True, \n            height=5, aspect=3, \n            order = df['Q1'].value_counts().index)","67c78091":"sns.catplot(data=df, x='Q8', kind='count', hue='Q5', height=5, aspect=3, )","aecf1e5c":"sns.catplot(data=df, x='Q8', kind='count', hue='Q5', height=5, aspect=3, log=True, order = df['Q8'].value_counts().index)","f0f2ccaf":"## Programming Experience & Job Description","3e4eb92d":"# Univaraite Analysis","f3666b0c":"## Q6: Programming Experience","5e6f9d6a":"## Age & Gender","1d2c92e2":"## Introduction\nA simple detailed analysis with no fancy charts. Each and every chart is easy to read and it will convey and the right message with visual comfort.\n\nThis notebook covers both univariate analysis as well as multivatiate analysis.","009c3185":"## Q1: Age\n\nHere we can see which group of Age took the survey the most.","8734b80c":"# Import Libraries","c7f2a20a":"# Let's answer some compund questions","bbd642ff":"## Q2: Gender","a7e1266c":"## Q8: Recommend programming langugage for an aspiring data scientist to learn first?","89d06594":"# Load data","f9576d0b":"## Q4: Education","b3ef906c":"## Q0: How much time was spend on the survery\n\n - If the time is too less we can assume that the form was filled in hurry and the responses might be random.\n - If the duration is too high we can we say someone was working on other things and filling the form.","e1f57de1":"## Q3: Country","5c92b97d":"## Q5: Title \/ Job Description"}}