{"cell_type":{"c68675d3":"code","44fc9858":"code","1167e6fd":"code","a322e60a":"code","6ec1f97f":"code","f2a28dfd":"code","db3bc31b":"code","b813b8d6":"code","bc414371":"code","23dba6b3":"code","5904282d":"code","3389ae80":"code","f8fe6137":"code","b65fe8fb":"code","7543e788":"code","7c97a2cc":"code","e4b7fd3f":"code","89f15012":"code","bb1c71e8":"code","13c2a3c3":"code","7359e4b0":"code","da8eb6b4":"code","38a8b0c4":"code","42d56ff7":"code","694e7bc5":"code","f40d729b":"code","32c09e76":"code","259c65e4":"code","deabc2bd":"code","6406d473":"code","6db1abf8":"code","ca4ab036":"code","a78cab7b":"code","9c754c2c":"code","6bd2c6f3":"code","8be0cd5e":"code","a957a534":"code","10a41dff":"code","68aeee62":"code","b57af263":"code","e1160aef":"code","15ee3369":"code","6adf60e8":"code","6e1c3345":"code","d12a2994":"code","5087cbb8":"code","124c019e":"code","44d236ac":"code","1fb0bb29":"code","7ff517ae":"code","7e65127a":"code","b915969a":"code","169b6770":"code","ea3b841c":"code","da3dea7e":"code","02d1b606":"code","83e4dfbd":"code","e881ad93":"code","4f28e71c":"code","fe804bcc":"code","3772e55a":"code","5e34c771":"code","4eb97843":"code","fc7f3f0f":"code","7c53cc8b":"code","701fc356":"code","3926109b":"code","b6e02333":"code","0bfdcaf5":"code","50cae001":"code","d5bcbb4e":"code","7a28fa78":"code","2427113a":"code","2bf20222":"code","1d113a94":"code","2eecb251":"code","ad89fecf":"code","a4f5db2b":"code","9d41d46c":"code","3a4999ac":"code","4e280c0d":"code","2de854a2":"code","1527fec1":"code","6b289008":"code","492de728":"code","f5ef5224":"code","1d292e79":"code","5cac32a0":"code","467f4bd9":"code","218159e4":"code","719674e4":"code","07248885":"code","2618910f":"code","bbf6d0f0":"code","e0211899":"code","fccb42b2":"code","1d2f7ad3":"code","ce22f8f8":"code","15f8e4ec":"code","681a2d52":"code","52a0262b":"code","70c8eab0":"code","8cadb895":"code","076c609c":"code","1e8d2899":"code","d66d7170":"code","e50dbc76":"code","751b82e4":"code","0eca945c":"code","7f7f3e5c":"code","26fa50fc":"code","5d785b03":"code","496a1897":"code","ff415b29":"code","f0a2ee32":"code","79e4b8a2":"code","8e4006b4":"code","f763ffc1":"code","d00d8875":"code","fab31ea1":"code","97423571":"code","23e7a94a":"code","b80d1a86":"code","4d3505cb":"code","9908f78b":"code","8091e370":"code","bd9d1a55":"code","db5b49ad":"code","50b797e5":"code","911ba9c2":"code","39cf649d":"code","2c7a26b9":"code","ec0445ac":"code","37cffb86":"code","da3ed22a":"code","aa333330":"code","d26848e0":"code","75b83465":"code","231a52ad":"code","30eaa847":"code","053963bf":"markdown","d971cb3e":"markdown","f8e78c7f":"markdown","f31ec0ac":"markdown","57369655":"markdown","620bdf16":"markdown","e40431a0":"markdown","907992c1":"markdown","9d95c6e3":"markdown","04c092b3":"markdown","58647348":"markdown","c037eca5":"markdown","9f331c29":"markdown","aad15129":"markdown","43613ca2":"markdown","5edea084":"markdown","14696740":"markdown","c6a61541":"markdown","4aae7e35":"markdown","f4208f6d":"markdown","93673abd":"markdown","016ddb8e":"markdown","e6b132ef":"markdown","a2bf7952":"markdown","9882d75c":"markdown","df831fe4":"markdown","2f42a541":"markdown","e81eebc5":"markdown","ffadafcb":"markdown","390b9abd":"markdown","847532ea":"markdown","d91fb775":"markdown","c563cfce":"markdown","0463781c":"markdown","7c2a4754":"markdown","b4acad0b":"markdown","d97d6a03":"markdown","79b7c076":"markdown","992852b1":"markdown","e8d23c0e":"markdown","9a035d68":"markdown","b2744ef1":"markdown","0f30a9e4":"markdown","05b721f5":"markdown","5001bc1f":"markdown","8bf94519":"markdown","faee830e":"markdown","c10bb34e":"markdown","8a4f5a5d":"markdown","84408ecf":"markdown","392d4d87":"markdown","d49ee4c5":"markdown","a879be20":"markdown","734a7fbb":"markdown","55245699":"markdown","765aed77":"markdown","e9a9dc16":"markdown","cb1764d6":"markdown","cd785aa0":"markdown","b50938b3":"markdown","41bbbefb":"markdown","c57d6121":"markdown","3d47207d":"markdown","73210e08":"markdown","985aa6af":"markdown","46bb979e":"markdown","45fdbc35":"markdown","207558af":"markdown","87e5eb8b":"markdown","81d6e923":"markdown","5e16ede1":"markdown","f989e956":"markdown","3e6e6861":"markdown","1d65bf38":"markdown","57146f27":"markdown","f5b2d3da":"markdown","5904f1cc":"markdown","9f263149":"markdown","ef01c8a6":"markdown","1d2cf708":"markdown","d55f1fa4":"markdown","bf6895ba":"markdown","60f0e0e4":"markdown","aac6209d":"markdown","8c78328a":"markdown","077909d0":"markdown","f31c51e4":"markdown","45e5ea1e":"markdown","b1cead35":"markdown","bd207cd9":"markdown","301c9415":"markdown","547678fa":"markdown","7bf72d2f":"markdown","523a4cd1":"markdown","a1c48845":"markdown"},"source":{"c68675d3":"import numpy as np\nimport pandas as pd\n\n# Plotting modules\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nimport scipy as sp\nimport warnings\nimport datetime\nwarnings.filterwarnings('ignore')\n%matplotlib inline","44fc9858":"# We will load dataset by calling read_csv(), which is present in pandas library and ...\n#...assignining it to a relavent variable name, supermar_sales_predict.\n\n# The read_csv() from below loads the dataset.\n\nsupermar_sales_predict = pd.read_csv(\"\/kaggle\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv\")","1167e6fd":"# Displaying the given dataset. \n\n# The print() from below will disply the dataset.\n\nprint(\"\\nThe given dataset is\\n\")\nsupermar_sales_predict","a322e60a":"#Observations: As we can see from the above output, there exists 1000 row and 17 columns in the dataset.","6ec1f97f":"# Let us go ahead with calling head(). \n\n# Here, the head() from below will by default give the first five rows information.\n\nsupermar_sales_predict.head()","f2a28dfd":"# Before moving any further, let us explore all the columns that are present in the dataset:\n# 1. Invoice ID: The summary of items purchased along with prices.\n# 2. Branch: Branch name corrosponding to the city.\n# 3. City: City name, in which the supermarket is located.\n# 4. Customer type: Type of the customer, whether normal and member customer.  A member customer is the one who holds\n#    certain previliges.\n# 5. Gender of the customers.\n# 6. Product line: It is the category of the product, which the customer is interested in.\n# 7. Unit price: Price of the single item.\n# 8. Quantity: It represents the number of the items purchased by the customer.\n# 9. Tax 5%: It represents the 5% tax amount levied on the total amount.\n# 10. Total: It is the column which represents the total amount obtained after summing the total purchansed amount and tax.\n# 11. Date: Date of purchase.    \n# 12. Time: Time of purchase.\n# 13. Payment: It is the mode of payment.  This can be Ewallet, Cash, and Creit card.\n# 14. cogs: It refers to the amount obtained after multiplying the Unit price of the item with the Quantity.  \n# 15. gross margin percentage:  It refers to the percentage of the margin of income on cog i.e. [(Total-cog)\/cog]*100\n# 16. gross income: It refers to the margin of income (Total - cog), which is nothing but Tax 5%..\n# 17. Rating: The rating given by the customer for the service rendered.","db3bc31b":"# Let us see how describe() will act on this dataset\n\n# The describe() will return mainly, mean, min, max, std of all the numerical columns.\n# This does not show any results related to categorical columns.\n\n# The describe() from below will be operated on the given dataset.\n\nsupermar_sales_predict.describe()","b813b8d6":"# Observations:\n\n# We have a minimum price of any item out of the total available products is as low as 10.08 (units not given)...\n# ...with the maximum price out of all the products being 99.96.\n# As many as maximum of 10 units are purchased by any paritcular customer with minimum entry of the quantity...\n# ...being 1.\n# Maximum gross income gained out of the all purchases is 49.65 while minimum being 0.50 out of all the purchases.\n# Out of 1000 entries, maxium rating is 10 while the minimum is 4.","bc414371":"# Let us apply the info() to the dataset to see how the columns look like.\n\n# info() typically returns the information of the columns like, name of the columns, count of non-null values...\n# ...in each column, the data type of each column, and number of columns present in the dataset with index.\n\n# info() from below will be operated on the dataset.\n\nsupermar_sales_predict.info()","23dba6b3":"# Observations:\n\n# The dataset has 17 columns with the index ranging from 0 to 16.\n# There are no null-values in any of the columns.\n# There are three different data types, namely object, float64, and int64.","5904282d":"# Let us observe the shape function with the help of \"shape.\"\n\n# shape typically returns the number of rows and columns present in the dataset.\n\n# shape from below will be operated on the given dataset.\n\nsupermar_sales_predict.shape","3389ae80":"# Observations:\n    \n# The dataset has total of 1000 rows and 17 columns in it.\n# Also, there were 1000 purchases during this 89 days' period.","f8fe6137":"# Let us observe the size of the dataset with the help of size.\n\n# The size tyically gives the total number of elements present in the entire dataset.\n\n# size will be operated on the dataset as below.\n\nsupermar_sales_predict.size","b65fe8fb":"# Observations:\n\n# As can be seen from the above, we have a total of 17000 entries (1000 * 17).","7543e788":"# Let us observe the data types of all the columns with the help of dtypes\n\n# When operated on the given data set, dtypes will typically return the data types of the columns present in it.\n\n# The given dataset will be operated on dtypes as below.\n\nsupermar_sales_predict.dtypes","7c97a2cc":"# Observations: \n    \n# From the above, we can observe that:\n# Invoice ID, Branch, City, Customer type, Gender, Product line, Date, Time, Payment are of data type...\n# ...'object'.  \n# Quantity is of int data type.\n# Unit price, Tax 5%, Total, cogs, gross margin percentage, gross income are all of float data types...\n# ...and are of continuous data.","e4b7fd3f":"# Checking the column information with the help of columns\n\n# columns, when operated on the dataset, typically retuns us all the columns present in the dataset.\n\n# columns will be operated on the dataset as below.\n\nsupermar_sales_predict.columns","89f15012":"# Observations:\n    \n# The following columns are displayed with the help of columns:  'Invoice ID', 'Branch', 'City', Customer type'...\n# ...'Gender', 'Product line', 'Unit price', 'Quantity', 'Tax 5%', 'Total', 'Date', 'Time', 'Payment', 'cogs',...\n# ...'gross margin percentage', 'gross income', 'Rating.'","bb1c71e8":"# Finding the null values in the dataset with the help of isnull()\n\n# isnull(), when operated on dataset, typically returns True when there are null values present,...\n# ...otherwise, returns False.\n\n# The given dataset will be operated by the isnull() as below.\n\nsupermar_sales_predict.isnull()","13c2a3c3":"# Observations:\n\n# TBVS 1 (To Be Verified Statement 1): From the above, we found that no null-values are present.","7359e4b0":"# Now, we will validate the above statement, TBVS 1, by checking the sum of the null values present, if any.\n\n# Here, isnull(), when operated on dataset, along with sum(), will typically returns the...\n# ...the sum of null values in each columns, if present.\n\nnull_val_each_column = supermar_sales_predict.isnull().sum()\nnull_val_each_column","da8eb6b4":"# Observations:\n\n# From the above, we can conclude that no null values are present in any of the columns.","38a8b0c4":"# Let us find out the sum of all the null values, if any.\n\n# The sum(), when operated on the null_val_each_column, will return total null values in the entire dataset,if they exist.\n\nprint(\"\\nTotal null values present =\",null_val_each_column.sum(),\"\\n\")","42d56ff7":"# Let us validate further by calling isnull() with any()\n\n# When operated on the dataset, isnull().any() will return either False or True bassed on...\n# ...the existence of null values.\n\nsupermar_sales_predict.isnull().any()","694e7bc5":"# Observastions:\n\n# isnull.any() has returned all \"False,\" so there are no null values present in the dataset.","f40d729b":"# From all the observations as above, TBVS 1 has been validated.","32c09e76":"# Let us plot the histogram for the whole dataset with the help of hist().\n\n# hist(figsize = (20,14)) will plot the histogram of all the columns related to numerical data with the size...\n# ...specified within it, with the length as 20 and height as 14.\n\nsupermar_sales_predict.hist(figsize = (20,14), color = 'b', histtype = \"step\", linewidth = 2.0, rwidth = 2.0)\nplt.show();","259c65e4":"# Observations: From the above histogram, it can be observed that the frequency distribution for Tax 5%, Total, cogs...\n# ...and gross income is similar.","deabc2bd":"# Let us find correlation of columns\n\n# corr() computes pairwise correlation of columns, excluding NA\/null values.\n# It typically gives the Pearson correlation between the columns.\n\nsupermar_sales_predict.corr()","6406d473":"# Observations: As shown above, we cannot see any correlation values for gross margin...\n# ...percentage (it needs to be figured out why it has been the case, can anybody help me please in this regard?)","6db1abf8":"#  Let us evaluate the above table a bit further.  Because corr() takes Pearson correlation as one of he parameters,\n#...(you can check it out this space, https:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.DataFrame.corr.html), \n# ...let us find out Pearson correlation of all the columns and then compare them with the above table values.","ca4ab036":"# Let us compute Pearson correlation of all the numerical columns \n# Calculating Pearson's correlation with the help of pearsonr()\n\nfrom scipy.stats import pearsonr\n\nprint(\"\\n======== Pearsons Correlatoin ========\\n\")\nfor i in supermar_sales_predict.corr().columns:\n    for j in supermar_sales_predict.corr().columns:\n        print(f'{i} Vs {j}')\n        corr, _ = pearsonr(supermar_sales_predict[i], supermar_sales_predict[j])\n        print('%.6f' % corr)       \n        ","a78cab7b":"# Observations: All the Pearson coefficent values obtained from the table have been verified when operated...\n# ...individually with the pearsonr().","9c754c2c":"# Observing the correlation between Total and Tax 5%\n\n# Applying hue as gender to draw more insights from the graph.\n\nfig = plt.figure(figsize = (8,5))\nsns.set_theme()\nsns.scatterplot(data = supermar_sales_predict, x= 'Total', y= 'Tax 5%', hue = 'Gender')\nplt.ylabel(\"Tax 5%\", color = 'g')\nplt.xlabel(\"Total\", color ='g')\nplt.title(\"Total Vs Tax 5%\", color = 'g');","6bd2c6f3":"#  Plotting the scatter plot between Rating and Unit price\n\nfig = plt.figure(figsize = (8,5))\nplt.scatter(supermar_sales_predict.Rating, supermar_sales_predict[\"Unit price\"])\nplt.ylabel(\"Ratings\", color = 'g')\nplt.xlabel(\"Unit price\", color ='g')\nplt.title(\"Ratings Vs Unit price\", color = 'g');\n","8be0cd5e":"# Plotting scatterplot between Quanity and Gross income\n# Applying hue as gender to have more insights from the plot\n\nfig = plt.figure(figsize = (10,6))\nsns.set_theme()\nsns.scatterplot(data=supermar_sales_predict, x= \"Quantity\", y = \"gross income\", hue = \"Gender\");\nplt.title(\"Quantity Vs Gross Income\", color = 'g');","a957a534":"# heatmap() from below will help us to understand the intersectoin betweeen the two plotted series.\n# annot = True will allow us to visualize the Pearson correlation coefficient values corresponding to each columns.\n\nplt.figure(figsize = (13,10))\nsns.heatmap(supermar_sales_predict.corr(), annot = True, linewidth = 2);","10a41dff":"# Finding info with the help of info()\nsupermar_sales_predict.info()","68aeee62":"# Plotting boxplot for the above-said numerical columns.  Here, as subplot() parameterized with (3,2,1) in it, we will have\n# three rows, two columns, totalling to six plots.\n\n# The boxplot() from seaborn plotting module will plot the box plots by showing means (through 'showmeans' argument) \n# and markers as '+'.\n\n\nsns.set_theme()\nplt.figure(figsize=(18,15))\nplt.subplot(3,2,1)\nsns.boxplot(x='Unit price',data=supermar_sales_predict, color ='g', linewidth = 1.0, showmeans = True, meanprops={\"marker\": \"+\",\n                       \"markeredgecolor\": \"red\",\n                       \"markersize\": \"15\"})\nplt.subplot(3,2,2)\nsns.boxplot(x='Quantity',data=supermar_sales_predict, color = 'g', linewidth = 1.0, showmeans = True, meanprops={\"marker\": \"+\",\n                       \"markeredgecolor\": \"red\",\n                       \"markersize\": \"15\"})\nplt.subplot(3,2,3)\nsns.boxplot(x='Total',data=supermar_sales_predict, color = 'g', linewidth = 1.0, showmeans = True, meanprops={\"marker\": \"+\",\n                       \"markeredgecolor\": \"red\",\n                       \"markersize\": \"15\"})\nplt.subplot(3,2,4)\nsns.boxplot(x='cogs',data=supermar_sales_predict, color = 'g', linewidth = 1.0, meanprops={\"marker\": \"+\",\n                       \"markeredgecolor\": \"red\",\n                       \"markersize\": \"15\"}, showmeans = True)\nplt.subplot(3,2,5)\nsns.boxplot(x='Rating',data=supermar_sales_predict, color = 'g', linewidth = 1.0, meanprops={\"marker\": \"+\",\n                       \"markeredgecolor\": \"red\",\n                       \"markersize\": \"15\"}, showmeans = True)\nplt.subplot(3,2,6)\nsns.boxplot(x='gross income',data=supermar_sales_predict, color = 'g', linewidth = 1.0, meanprops={\"marker\": \"+\",\n                       \"markeredgecolor\": \"red\",\n                       \"markersize\": \"15\"}, showmeans = True);\n            ","b57af263":"# pairplot() from below will plot the pair wise scatterplot of all the eight numerical columns present in the \n# current dataset.\n\nsns.pairplot(data=supermar_sales_predict);","e1160aef":"# regplot() from below will plot the regression modle between \"Unit price\" and \"gross income.\"\n\nfig = plt.figure(figsize = (10,6))\nplt.title(\"Regplot of Unit price Vs gross income\", color = 'r')\nplt.xlabel(\"Unit price\", color ='r')\nplt.ylabel(\"gross income\", color = 'r')\nsns.set_theme()\nsns.regplot(x='Unit price', y= 'gross income', data=supermar_sales_predict);","15ee3369":"# scatterplot() from below will plot the plot between Total and gross income with the hue as 'Gender.'\n\nfig = plt.figure(figsize = (12,6))\nplt.title(\"Scatterplot of Total Vs Gross Income\", color = 'r')\nplt.xlabel(\"Total\", color ='r')\nplt.ylabel(\"Gross Income\", color = 'r')\nsns.scatterplot(y='gross income', x= 'Total', data=supermar_sales_predict, hue = 'Gender');","6adf60e8":"#  Let us group the Total with max and then reset the index.\n\n# Below, groupby() will help group the Total and then reset_index() will reset the index after grouping.\n\nsupermar_sales_predict.groupby('Total').max().reset_index()","6e1c3345":"#  Let us group the Total with gross income and then find the max.\n\n# Below, groupby() will help group the Total and gross income and then find the max values out of it.\n\nsupermar_sales_predict.groupby('Total')['gross income'].max()","d12a2994":"print(\"\\nTotal\\t     Gross Income\\n\")\nfor i in range(990):\n    for j in range(990):\n        if i==j:\n            print(supermar_sales_predict.groupby('Total')['gross income'].max().index[i], \" === \", supermar_sales_predict.groupby('Total')['gross income'].max().values[i])","5087cbb8":"# Let us plot jointplot() for the the two variables Total and Rating\n# The below jointplot() by default takes \"kind\" as scatterplot\n\nsns.jointplot(x='Total', y= 'Rating', data=supermar_sales_predict, color = 'r', height = 8, ratio = 2, hue = 'Gender');","124c019e":"# Let us plot jointplot() for the the two variables Total and Rating\n# The below jointplot() by default takes \"kind\" as scatterplot\n\nsns.jointplot(x='Tax 5%', y= 'gross income', data=supermar_sales_predict, kind = 'hist', color = 'r', height = 7, ratio = 2, hue = 'Gender');","44d236ac":"# Let us plot the catplot(), which is present in seaborn library, for the categorical variable, Gender.\n\n# The catplot() from below will plot for female and male section and it will give us count for each.\n# We will use kind as \"count\" here.\n\nsns.set_theme()\nsns.catplot(x='Gender', data=supermar_sales_predict, kind='count', height = 7);","1fb0bb29":"# The value_counts() from below, when operated on Gender column, will give the sum of total of each\n# male and female customers.\n\nsupermar_sales_predict.Gender.value_counts()","7ff517ae":"# The catplot() from below with the kind as count will give the total count of each Branch.\n# We will use kind as \"count\" here.\n\nsns.catplot(x='Branch', data=supermar_sales_predict, kind='count', height = 7);","7e65127a":"# The value_counts() from below, when operated on Branch column, will give the sum of each branches out of 1000.\n\nsupermar_sales_predict.Branch.value_counts()","b915969a":"# The catplot() from below will plot for \"Product line\" categories and it will give us count for each.\n# We will use kind as \"count\" here.\n\n# To make appear Product line categories clearer, we will apply \"Product line\" on Y-axis.\n\nsns.catplot(y='Product line', data=supermar_sales_predict, kind='count', height = 7, aspect = 1.5);","169b6770":"# The value_counts() from below, when operated on Product line, will give the sum of each purchases for\n# each category present in Product line.\n\nsupermar_sales_predict[\"Product line\"].value_counts()","ea3b841c":"# The catplot() from below will plot for Payment categories and it will give us count\n# for each category present in the Payment categorical variable.\n# We will use kind as \"count\" here.\n\nsns.set_theme()\nsns.catplot(x='Payment', data=supermar_sales_predict, kind='count', height =7)\nplt.show();","da3dea7e":"# The value_counts() from below, when operated on Payment, will give the sum of each payment modes.\n\nsupermar_sales_predict[\"Payment\"].value_counts()","02d1b606":"# The catplot() from below takes Date column on Y-axis and average of total amount of each day purchases on X-axis.\n\n# height = 17 given for a good visibility purpose.\n# ci = None given for not wanting to see confidence intervals\n\nsns.catplot(x='Total', y='Date',\n            data=supermar_sales_predict,\n            kind='bar', ci = None, height = 17);","83e4dfbd":"# Observations 1: \n#     TBVS 5 : From the above graph, after careful observation, out of 1000 puchases during this\n#     89 days' period, Monday and Tuesday record less less than average total amount (323 from below).    ","e881ad93":"# Let us validate the above statemnet.","4f28e71c":"# Finding out mean of the Total numerical column\n\n# mean(), when operated on Total, will give us average sales per day\n\nmean_total_dates_pur = supermar_sales_predict.Total.mean()\nmean_total_dates_pur","fe804bcc":"# Finding out the mean of total of each day purchases.\n\n# groupby() from below group the Date and Total columns and find the mean of total for each date.\n\nmean_each_day_pur = supermar_sales_predict.groupby(\"Date\")[ \"Total\"].mean()\nmean_each_day_pur","3772e55a":"# Let us retrieve the keys from the above.\n\n# keys(), when operated on mean_each_day_pur will give the key values\n\nmean_each_day_pur.keys()","5e34c771":"# Let us retrieve the values from the above.\n\n# values, when operated on mean_each_day_pur, will give the values of the keys.\n\nmean_each_day_pur.values","4eb97843":"# Printing all the dates durich which more than average of Total (322.96) recorded.\n\n# The below for loop will display all the dates durich which more than average of...\n# ...Total (322.96) recorded.\n\nprint(\"\\nThe following dates belong to the average total being greater than average of...\")\nprint(\"...total purchases (322.96) for all the days.\\n\")\n\nj = 0\nfor i in supermar_sales_predict.groupby(\"Date\")[ \"Total\"].mean():\n    if i>mean_total_dates_pur:\n        print(supermar_sales_predict.groupby(\"Date\")[ \"Total\"].mean().index[j])\n    j = j+1","fc7f3f0f":"# Observations 2: After careful observations from the above, the dates belonging to Mondays and Tuesdays...\n# ...recorded less less-than-average of total amount when compared to the remaining days.","7c53cc8b":"# So, observations 1 and observations 2 have been validated.","701fc356":"# Appropriate remedies: Initiating offers and\/or discounts during these lean sales days will help boost...\n# ..the purchases on Mondays and Tuesdays as well.","3926109b":"# catplot() with variant as \"box\" is useful for observting the distribution of the data.\n# Unlike normal box plot, here we will have box plot drawn between the categorical and numerical variables","b6e02333":"# Plotting catplot() with the kind as \"box\"\n# In this variant, we will have combination of numerical variable and categorical variables.\n# catplot() with kind as \"box\" will depict the destribution of numerical variable corrosponding...\n# ...to the categrocial columns.\n\n# The catplot() from below takes Total on X-axis and Gender on Y-axis\n# orient as \"h\" is given for wanting to see the destribution horizontally.\n# hue as Payment given to further categorize the distribution.\n\nsns.set_theme()\nsns.catplot(y='Gender', x='Total', data=supermar_sales_predict,\n            kind='box', height = 8, hue = \"Payment\", orient = \"h\",\n            showmeans = True, linewidth = 1.0, meanprops={\"marker\": \"+\",\n            \"markeredgecolor\": \"red\", \"markersize\": \"15\"});","0bfdcaf5":"# Observations: \n#     For males, there exists outliers for Total amount with the payment mode of Ewallent and Credit cards.\n#     For females, there exists outliers for Total amount with the payment mode of cash only.","50cae001":"# About lmplot():\n#     1. Plot data and regression model fits across a FacetGrid.\n#     2. This function combines regplot() and FacetGrid. It is intended as a convenient interface to fit...\n#        ...regression models across conditional subsets of a dataset.    ","d5bcbb4e":"# Let us plot lmplot() for the data\n\n# lmplot() from below plot the data and regression model between \n# Parameters hue as 'Gender' and x_bin as 3 given\n\nsns.lmplot(x='Unit price', y= 'gross income', data= supermar_sales_predict,\n           hue = 'Gender', height = 6);","7a28fa78":"# Observations: \n#     From the above graph, we can observe the following,\n#     1. For males and females two line of best fits were plotted (i.e. regrression modles fro x and y variables).\n#     2. There exists a positive correlation between Unit price and gross income.","2427113a":"# About kdeplot(): It is also known as density plot. A kernel density estimate (KDE) plot is a method...\n#                 ...for visualizing the distribution of observations in a dataset, analagous to a...\n#                 ...histogram. KDE represents the data using a continuous probability density curve in...\n#                 ...one or more dimensions.    ","2bf20222":"# Plotting the kdeplot() for univariate with Total variable.\n\n# The kdeplot() from below will plot the kdegrah for univariate variable, Total\n# It will be plotted with the hue as Gender.\n\nplt.figure(figsize = (15,6))\nplt.title(\"KDE Plot for Total\", color = 'b')\nplt.xlabel('Total', color = 'b')\nplt.ylabel('Density', color = 'b')\nsns.set_theme()\nsns.kdeplot(x='Total',data=supermar_sales_predict, shade = True, \n            color = 'r',  bw_adjust=.1, hue = 'Gender');","1d113a94":"# Observations:\n#     1. The y-axis represents prorbable density of the Kernel Density Estimator.\n#     2. The pink color density reprents Total paid by the male cutomers.\n#     3. The blue color density reprents Total paid by the female cutomers.\n#     2. TBVS 6 : Visually, while from 0 to 300 (approx), there seems to be the more Total paid by the male...\n#        ...customers, from 300 to 1100, there seems to be the more Total paid by the female ones with a few...\n#        ...exceptions in the middle.  As a whole, female customers have an edge visually.","2eecb251":"# Let us validate the above statement 6.","ad89fecf":"# Grouping the Gender and Total variables and then finding out the sum of the Total for each gender.\n\n# groupby() from below, when operated with aggregate function sum, for the variables Gender and Total...\n# ...will give the sume of the Total purchased by each gender out of 1000 purchases.\n\nsupermar_sales_predict.groupby('Gender')['Total'].sum()","a4f5db2b":"# As we can see the result from the above, the as much as 12799 Total is totaled more by the female customers \n# than that of male ones.\n# So, the statment #6 has been validated.","9d41d46c":"# Now that we came to know Total totalled by the famale customers is more, though number of male and female...\n# ...customers are almost same, let us explore a bit further about what product line did makde the difference...\n# ...in Total between these two.\n\n# The following groupby function will group the Gender and Product line and then give the total of Total...\n# ...of each gender.\n\nsupermar_sales_predict.groupby(['Gender', 'Product line'])['Total'].sum()","3a4999ac":"# From the above, it is observed that, while female are more tending to buy Food and beverage, male are favoring to...\n# ...buy health and beuty products (though diffences are there in other product line sectoins, the observations are...\n# ...made considering the fact that the abovesaid two sections are observed with major differnce in purchases).","4e280c0d":"# Note: Gross income is nothing but the variable derived from Total, one can see that the plot is absolutely identical\n# ... to the above plot","2de854a2":"# Let us plot the kdeplot() for univariate variable.\n\n# The following statement will plot kdeplot() for the univariate variable, gross income\n# The following graph is plotted with the help of matplotlib and seaborn functions.\n# hue as Gender will differentiate between the female and male\n\nplt.figure(figsize = (15,6))\nplt.title(\"KDE Plot for gross income\", color = 'b')\nplt.xlabel('Gross Income', color = 'b')\nplt.ylabel('Density', color = 'b')\nsns.set_theme()\nsns.kdeplot(x='gross income',data=supermar_sales_predict, shade = True, \n            color = 'r',  bw_adjust=.1, hue = 'Gender');","1527fec1":"# Observations: \n#     1. The y-axis represents density of the prorbable density of the Kernel Density Estimator.\n#     2. The pink color density reprents gross income fetched from the male cutomers.\n#     3. The blue color density reprents gross income fetched from the female cutomers.\n#     2. TBVS 7 : Visually, while from 0 to 15 (approx), there seems to be the more gross income fetched by the male...\n#        ...customers, from 15 to 50, there seems to be the more gross income fethced by the female ones with a few...\n#        ...exceptions in the middle.  As a whole, female customers have an edge visually.","6b289008":"# Let us validate the above statement 7.","492de728":"# Grouping the Gender and gross income variables and then finding out the sum of the gross income each gender.\n\n# groupby() from below, when operated with aggregate function sum, for the variables Gender and gross income...\n# ...will give the sume of the gross income of each gender for total 1000 purchases.\n\nsupermar_sales_predict.groupby('Gender')['gross income'].sum()","f5ef5224":"# As we can see the result from the above, the as much as 609 gross income is fethed more from the female customers \n# than that of male ones.\n# So, the statment #7 has been validated.","1d292e79":"# Now that we came to know gross income fetched from famale customers is more, though number of male and female...\n# ...customers are almost same, let us explore a bit further about what product line did makde the difference...\n# ...in gross income between these two.\n\n# The following groupby function will group the Gender and Product line and then give the total of gross income...\n# ...of each gender.\n\nsupermar_sales_predict.groupby(['Gender', 'Product line'])['gross income'].sum()","5cac32a0":"# From the above, it is observed that, while female are more tending to buy Food and beverage, male are favoring to...\n# ...buy health and beuty products (though diffences are there in other product line sectoins, the observations are...\n# ...made considering the fact that the abovesaid two sections are observed with major differnce in purchases).","467f4bd9":"# # Let us plot the kdeplot() for bivariate variables.\n\n# # The following statement will plot kdeplot() for the bivariate variables, gross income and Total\n# # The following graph is plotted with the help of matplotlib and seaborn functions.\n\nplt.figure(figsize = (10,5))\nsns.set_theme()\nplt.title(\"KDE Plot for gross income\", color = 'b')\nplt.xlabel('Gross Income', color = 'b')\nplt.ylabel('Density', color = 'b')\nsns.set_theme()\nsns.kdeplot(data=supermar_sales_predict, x='Total', y='Rating', hue = 'Gender', fill = True);","218159e4":"# Observations: TBVS 8: From the above plot, we can come to know that there exists a darks spot from the ratings...\n#...between 6 and 8 (more precisely between high 5s and low 8s).  This occupies more percentage.\n# Let us find out how much percentage it covers.","719674e4":"# Finding the vlaue counts by groping it both gender and ratings\n\nsupermar_sales_predict.groupby('Gender')[\"Rating\"].value_counts()","07248885":"# Obtaining the index from the above\n# The index from below give the values in a list related to ratings\n\nx = supermar_sales_predict.Rating.value_counts().index","2618910f":"# Obtaining the values from the above\n# The values from below give the values in a list related to ratings\n\ny = supermar_sales_predict.Rating.value_counts().values","bbf6d0f0":"# Couting the ratings between 6 and 8 given by both gender\n\n#The below \"for\" loop with sum will give the total value counts of the ratings bewtween 6 and 8.\n        \ncount =0\nsum = 0\nfor i in x:\n    if (i>=6) & (i <=8):\n        sum = sum + y[count]\n    count +=1\nprint(sum)","e0211899":"# So, from the above, as much as 40& of the ratings were between 6 and 8.\n# So, TBVS8 has been verified.","fccb42b2":"# Before we plot the lineplot(), let us make a copy of the above dataframe\n\n# The copy fn from below with the deep = True will make a copy of the dataframe\n\ncopy_supermar_sales_predict = supermar_sales_predict.copy(deep = True)","1d2f7ad3":"# printing the copied dataset\n\nprint(\"\\n The copied dataset is\\n\")\ncopy_supermar_sales_predict","ce22f8f8":"# Let us extract the date, month, and year out of date variable\n\n# The following DateTimeIndex fn, when operated with year, month, day, will extract the...\n#...year, month, and day respectively. \n# Alos, it will create three columns for year,month, and day respectively\n\nsupermar_sales_predict['year'] = pd.DatetimeIndex(supermar_sales_predict['Date']).year\nsupermar_sales_predict['month'] = pd.DatetimeIndex(supermar_sales_predict['Date']).month\nsupermar_sales_predict['day'] = pd.DatetimeIndex(supermar_sales_predict['Date']).day","15f8e4ec":"supermar_sales_predict","681a2d52":"# Let us plot the lineplot() for the month of January\n\nplt.figure(figsize=(15,7))\nplt.title(\"Days_Jan Vs Total Purchased\", color = 'g')\nplt.xlabel(\"Days_Jan\", color = 'g')\nplt.ylabel(\"Total Purchased\", color = 'g')\njan_total = supermar_sales_predict.query(\"month == 1\")\nsns.lineplot(data=jan_total, x=\"day\", y=\"Total\", hue = 'Gender');","52a0262b":"# Observations: TBVS9: While the blue line indicates the female customers, red line indicates the male ones....\n#             ..The dark blue line in the middle refers to the average total purchases made by the female...\n#             ...customers on any given day.\n#             ...The dark red line in the middle refers to the average total purchases made by the male ones...\n#             ... on any gien day.   \n        \n","70c8eab0":"# Let us observe more precisely how the averages look line from the data for the month of January\n\n# The groupby() from below, when operated on mean(), will give the average total for the month January...\n# ..made by each day, for the both female and male customers.\n\nprint(\"\\nThe recorrds of avergae of Total made by customers from Jan 1 till Jan 30th are:\\n\")\nprint(supermar_sales_predict.groupby([\"month\", \"day\", \"Gender\"])[\"Total\"].mean().head(60))\nprint(\"\\nThe avergae of Total made by customers on Jan 31st is:\\n\")\nsupermar_sales_predict.groupby([\"month\", \"day\", \"Gender\"])[\"Total\"].mean().iloc[60:62]","8cadb895":"# Combining from the above plot and the average data from the above, for the month of January, \n# we can observe the following:\n# Maximum average of total done by female is on 20th (560.390 )and the minimum...\n# average of total done by female is on 22nd (173.924).\n# Maximum average of total done by male is on 12th (657.736) and the minimum...\n# average of total done by male is on 4th (110.698).\n","076c609c":"# Let us plot the lineplot() for the month of February\n\nplt.figure(figsize=(15,7))\nsns.set_theme()\nplt.title(\"Days_Feb Vs Total Purchased\", color = 'g')\nplt.xlabel(\"Days_Feb\", color = 'g')\nplt.ylabel(\"Total Purchased\", color = 'g')\njan_total = supermar_sales_predict.query(\"month == 2\")\nsns.lineplot(data=jan_total, x=\"day\", y=\"Total\", hue = 'Gender');","1e8d2899":"# Observations: TBVS10: While the blue line indicates the female customers, red line indicates the male ones....\n#             ..The dark blue line in the middle refers to the average total purchases made by the female...\n#             ...customers on any given day.\n#             ...The dark red line in the middle refers to the average total purchases made by the male ones...\n#             ... on any gien day.   \n        \n","d66d7170":"# Let us observe more precisely how the averages look line from the data for the month of February.\n\n# The groupby() from below, when operated on mean(), will give the average total for the month February...\n# ..made by each day, for the both female and male customers.\n\nprint(\"\\nThe average of Total made by the customers for the month of February is\\n\")\nsupermar_sales_predict.groupby([\"month\", \"day\", \"Gender\"])[\"Total\"].mean().iloc[62:118]","e50dbc76":"# Observations: Combining the results from both the above plot and the average data obtained from the above,...\n#...for the month of January, we can observe the following:\n# Maximum average of total done by male is on 11th (574.058)and the minimum...\n# average of total done by male is on 13th (100.786).\n# Maximum average of total done by female is on 13th (561.479) and the minimum...\n# average of total done by female is on 4th (126.375).\n","751b82e4":"# Let us plot the lineplot() for the month of January\n\nplt.figure(figsize=(15,7))\nplt.title(\"Days_Mar Vs Total Purchased\", color = 'g')\nplt.xlabel(\"Days_Mar\", color = 'g')\nplt.ylabel(\"Total Purchased\", color = 'g')\njan_total = supermar_sales_predict.query(\"month == 3\")\nsns.lineplot(data=jan_total, x=\"day\", y=\"Total\", hue = 'Gender');","0eca945c":"# Observations: TBVS10: While the blue line indicates the female customers, red line indicates the male ones....\n#             ..The dark blue line in the middle refers to the average total purchases made by the female...\n#             ...customers on any given day.\n#             ...The dark red line in the middle refers to the average total purchases made by the male ones...\n#             ... on any gien day.   \n        \n","7f7f3e5c":"# Let us observe more precisely how the averages look line from the data for the month of March\n\n# The groupby() from below, when operated on mean(), will give the average total for the month March...\n# ..made by each day, for the both female and male customers.\n\nprint(\"\\nThe records of avergae of Total made by customers from March 1 till March 30th are:\\n\")\nprint(supermar_sales_predict.groupby([\"month\", \"day\", \"Gender\"])[\"Total\"].mean().iloc[118:180])  ","26fa50fc":"# Combining the results from both the above plot and the average avg data obtained from the above, ...\n#...for the month of March, we can observe the following:\n# Maximum average of total done by female is on 9th (577.99)and the minimum...\n# average of total done by female is on 7th (111.64).\n# Maximum average of total done by male is on 17th (588.57) and the minimum...\n# average of total done by male is on 8th (119.64).\n","5d785b03":"# Objective 8:  Can you see any trend in gross income","496a1897":"# Let us plot the lineplot() for the month of January\n\n# The lineplot from below will plot the time series for the gross income for the month of January \n\nplt.figure(figsize=(15,7))\nsns.set_theme()\nplt.title(\"Days_Jan Vs Gross Income\", color = 'g')\nplt.xlabel(\"Days_Jan\", color = 'g')\nplt.ylabel(\"Gross Income\", color = 'g')\njan_gross_income = supermar_sales_predict.query(\"month == 1\")\nsns.lineplot(data=jan_gross_income, x=\"day\", y=\"gross income\", hue = 'Gender');","ff415b29":"# Observations: TBVS9: While the blue line indicates the female customers, red line indicates the male ones....\n#             ..The dark blue line in the middle refers to the average gross income incurred from the female...\n#             ...customers on any given day.\n#             ...The dark red line in the middle refers to the average gross income incurred from the male ones...\n#             ... on any gien day.   \n        \n","f0a2ee32":"# Let us observe more precisely how the averages look line from the data for the month of January\n\n# The groupby() from below, when operated on mean(), will give the average gross income for the month January...\n# ..made by each day, for the both female and male customers.\n\nprint(\"\\nThe records of avergae of gross income fethced frm customers from Jan 1 till Jan 30th are:\\n\")\nprint(supermar_sales_predict.groupby([\"month\", \"day\", \"Gender\"])[\"gross income\"].mean().head(60))\nprint(\"\\nThe avergae of gross income fethced frm the customers on Jan 31st is:\\n\")\nsupermar_sales_predict.groupby([\"month\", \"day\", \"Gender\"])[\"gross income\"].mean().iloc[60:62]","79e4b8a2":"# Combining from the above plot and the average data from the above, for the month of January, \n# We can observe the following:\n# Maximum average of gross income fethced from female is on 20th 26.68() and the minimum...\n# ...average of gross income fetched from female is on 22nd (8.28).\n# Maximum average of gross income fetched from male customers is on 12th (31.32) and the minimum...\n# ...average of gross income fetched from male is on 4th (5.27).\n","8e4006b4":"# Let us plot the lineplot() for the month of February\n\n# The lineplot from below will plot the time series for the gross income for the month of Febuary \n\nplt.figure(figsize=(15,7))\nsns.set_theme()\nplt.title(\"Days_February Vs Gross Income\", color = 'g')\nplt.xlabel(\"Days_Feb\", color = 'g')\nplt.ylabel(\"Gross Income\", color = 'g')\nfeb_gross_income = supermar_sales_predict.query(\"month == 2\")\nsns.lineplot(data=feb_gross_income, x=\"day\", y=\"gross income\", hue = 'Gender');","f763ffc1":"# Observations: TBVS9: While the blue line indicates the female customers, red line indicates the male ones....\n#             ..The dark blue line in the middle refers to the average gross income incurred from the female...\n#             ...customers on any given day.\n#             ...The dark red line in the middle refers to the average gross income incurred from the male ones...\n#             ... on any gien day.   \n        \n","d00d8875":"# Let us observe more precisely how the averages look line from the data for the month of February.\n\n# The groupby() from below, when operated on mean(), will give the average gross income for the month February...\n# ..made by each day, for the both female and male customers.\n\nprint(\"\\nThe records of avergae of gross income fethced frm customers from Feb 1 till Febg 28th are:\\n\")\nprint(supermar_sales_predict.groupby([\"month\", \"day\", \"Gender\"])[\"gross income\"].mean().iloc[62:118])","fab31ea1":"# Combining from the above plot and the average data from the above, for the month of February, \n# We can observe the following:\n# Maximum average of gross income fethced from female is on 28th (27.64) and the minimum...\n# ...average of gross income fetched from female is on 12nd (16.10).\n# Maximum average of gross income fetched from male customers is on 11th (27.33) and the minimum...\n# ...average of gross income fetched from male is on 12th (4.79).\n","97423571":"# Let us plot the lineplot() for the month of March.\n\n# The lineplot from below will plot the time series for the gross income for the month of March \n\nplt.figure(figsize=(15,7))\nsns.set_theme()\nplt.title(\"Days_March Vs Gross Income\", color = 'g')\nplt.xlabel(\"Days_Mar\", color = 'g')\nplt.ylabel(\"Gross Income\", color = 'g')\nmar_gross_income = supermar_sales_predict.query(\"month == 3\")\nsns.lineplot(data=mar_gross_income, x=\"day\", y=\"gross income\", hue = 'Gender');","23e7a94a":"# Observations: TBVS9: While the blue line indicates the female customers, red line indicates the male ones....\n#             ..The dark blue line in the middle refers to the average gross income incurred from the female...\n#             ...customers on any given day.\n#             ...The dark red line in the middle refers to the average gross income incurred from the male ones...\n#             ... on any gien day.   \n        \n","b80d1a86":"# Let us observe more precisely how the averages look line from the data for the month of March.\n\n# The groupby() from below, when operated on mean(), will give the average gross income for the month March...\n# ..made by each day, for the both female and male customers.\n\nprint(\"\\nThe records of avergae of gross income fethced frm customers from March 1st till March 30th are:\\n\")\nprint(supermar_sales_predict.groupby([\"month\", \"day\", \"Gender\"])[\"gross income\"].mean().iloc[119:178])","4d3505cb":"# Combining from the above plot and the average data from the above, for the month of March, \n# We can observe the following:\n# Maximum average of gross income fethced from female is on 9th (27.42) and the minimum...\n# ...average of gross income fetched from female is on 7th (5.31).\n# Maximum average of gross income fetched from male customers is on 17th (28.02) and the minimum...\n# ...average of gross income fetched from male is on 7th (8.75).\n","9908f78b":"####A barplot (or barchart) is one of the most common types of graphic. It shows the relationship between a numeric and a categoric variable. Each entity of the categoric variable is represented as a bar. The size of the bar represents its numeric value.\n","8091e370":"## Objective 1 what is your supermarket more popular with?","bd9d1a55":"#Let us plot the graph betweeen Gender and Total\n\nsns.set_theme()\nplt.figure(figsize=(6,5))\nsns.barplot(y=\"Gender\", x=\"Total\", data=supermar_sales_predict, ci=None, orient = \"horizontal\")\nplt.title(\"Rating vs Unit Price\",fontsize=15)\nplt.xlabel(\"Rating\")\nplt.ylabel(\"Unit Price\")\nplt.show()\n\n","db5b49ad":"# Observations: TBVS11: From the above plot, the female customers are more popular with buying pattern.","50b797e5":"# Let us validate the above statement and more precisely calculate how much variance is there...\n# ...between female and male ones.\n\n# The groupby fn from below, when grouped between Gender and Total, when operated with mean(),...\n#...will give the average Total sales between males and females.\n\nprint(\"The average Total sales between the Female and Male customers are as under:\")\ncopy_supermar_sales_predict.groupby(\"Gender\")[\"Total\"].mean()","911ba9c2":"#From the above information female customers are popular with buying pattern and thus TBVS11 has been validated.","39cf649d":"supermar_sales_predict.groupby('Gender')['gross income'].mean()","2c7a26b9":"# About pie chart: A pie chart (or a circle chart) is a circular statistical graphic, which is divided...\n# ...into slices to illustrate numerical proportion.","ec0445ac":"# Objective3: What can you say about the aggregate sales across the brnaches?","37cffb86":"# Let us plot the pie plot across the branches.\n\n# The pie plot frm below will plot the pie plot across the brnaches for the Sum of Total for each branch.\n# The data from below will yield the Sum of Total sales across the branches while label...\n#... will give the sum of Total across the branches.\n\nplt.title(\"Pie Chart for Spread of the Data\", color ='g')\nlabel = supermar_sales_predict.groupby(\"Branch\")[\"Total\"].sum().index\ndata = supermar_sales_predict.groupby(\"Branch\")[\"Total\"].sum().values\nplt.pie(x=data, labels = label, shadow = True, autopct = '%.2f', startangle = 90,\nrotatelabels = True, colors = ['g', 'y', 'c'])\nplt.show()","da3ed22a":"# Observations: TBVS12:  AS we can see from the above, Sum of sales wise, both A and B branches performed equally.  However,\n# branch C performed better than these two. Sales aggregate wise, branch C performed better than A and B.","aa333330":"# Objective #6: which is the most profitable branch?","d26848e0":"# Let us plot the pie plot across the branches.\n\n# The pie plot frm below will plot the pie plot across the brnaches for the gross income for each branch.\n# The data from below will yield the sum of gross income across the branches while label...\n#... will give the sum of Total across the branches.\n\nplt.title(\"Pie Chart for Gross Income\", color ='g')\nlabel = supermar_sales_predict.groupby(\"Branch\")[\"gross income\"].sum().index\ndata = supermar_sales_predict.groupby(\"Branch\")[\"gross income\"].sum().values\nplt.pie(x=data, labels = label, shadow = True, autopct = '%.2f', startangle = 90,\nrotatelabels = True, colors = ['g', 'y', 'c'])\nplt.show()","75b83465":"# Observations: TBVS13:  AS we can see from the above, gross income wise, both A and B branches performed equally.  \n# However, branch C performed better than these two. Gross income wise, branch C performed better than A and B and \n# hence C is the most profitable branch.","231a52ad":"# Let us plot the pie plot across the branches.\n\n# The pie plot frm below will plot the pie plot across the brnaches for the gross income for each branch.\n# The data from below will yield the sum of gross income across the branches while label...\n#... will give the sum of Total across the branches.\n\nplt.title(\"Pie Chart for Gross Income\", color ='g')\nlabel = supermar_sales_predict.groupby(\"Gender\")[\"gross income\"].sum().index\ndata = supermar_sales_predict.groupby(\"Gender\")[\"gross income\"].sum().values\nplt.pie(x=data, labels = label, shadow = True, autopct = '%.2f', startangle = 90,\nrotatelabels = True, colors = ['g', 'y', 'c'])\nplt.show()","30eaa847":"# Let us plot the pie plot across the branches.\n\n# The pie plot frm below will plot the pie plot across the brnaches for the gross income for each branch.\n# The data from below will yield the sum of gross income across the branches while label...\n#... will give the sum of Total across the branches.\n\nplt.title(\"Pie Chart for Gross Income\", color ='g')\nlabel = supermar_sales_predict.groupby(\"Product line\")[\"gross income\"].sum().index\ndata = supermar_sales_predict.groupby(\"Product line\")[\"gross income\"].sum().values\nplt.pie(x=data, labels = label, shadow = True, autopct = '%.2f', startangle = 90,\nrotatelabels = True)\nplt.show()","053963bf":"## Observations from heatmap()","d971cb3e":"**pairplot():** A pairplot plots a pairwise relationships in a dataset. It is also called scatterplot matrix.","f8e78c7f":"### kind as \"box\" variant","f31ec0ac":"## Observations from head()","57369655":"**Query:** Plot the pairplot of all the eight numerical columns present in the current dataset.\n","620bdf16":"##### corr() computes pairwise correlation of columns, excluding NA\/null values. ","e40431a0":"# Exploratory Data Analysis","907992c1":"# Supermarket Sales Prediction\n\n#### The dataset is the historical sales of supermarket company, which has recorded in three different branches for a period of 89 days.","9d95c6e3":"**Observations:** The thick line plotted from the graph as showen above refers to the line of best fit. It can also be observed that there exists positive correlation between the 'Unit price' and 'gross income' columns.   \n","04c092b3":"**jointplot():** It draws a plot of two variables with bivariate and univariate graphs.","58647348":"**scatterplot():** It is plotted to show the relationship between two numerical variables. It is the plot to observe how the \ntwo numerical variables related i.e. positively correlated, negatively correlated, or no correlation between them.","c037eca5":"## Observations from catplot()","9f331c29":"**Now let us find out how the columns are correlated with each other i.e. we will find out whether they are positively\ncorrelated, negatively correlated and whether they have no relation between them by plotting a scatterplot**","aad15129":"### kdeplot() to be plotted for bivariate variable.","43613ca2":"## Observations from isnull()","5edea084":"### scatterplot() variant","14696740":"**regplot():** It is used for visualizing regression model.","c6a61541":"## Observations form shape","4aae7e35":"# Observations from describe()","f4208f6d":"*Let us validate the above observations.*","93673abd":"## Further, the following needs to be worked out.","016ddb8e":"Let us validate the above observations and to faciliate this, we will find the value_counts()","e6b132ef":"As we can be seen from the above output, while Fashion accessoreis and Health and beauty stood first and last in terms of customer purchases at 178 and 152 respectively, all the other four categories stood in betweeen.  Hence, the above observations have been validated","a2bf7952":"## Obserations from regplot()","9882d75c":"**Observations:**\n* It is clearly observed that Ewallet has slight edge when compared to the remaining two payment modes.\n* Customers have shown less interst in making the payment with the credit card.","df831fe4":"Let us plot the catplot(), which is present in seaborn library, for the categorical variable, \"Produt line.\"","2f42a541":"## Observations from info()","e81eebc5":"**Query:** Plot catplot() for \"Payment\" for drawing more insights?","ffadafcb":"## Loading Dataset\n","390b9abd":"## Observations from kdeplot()","847532ea":"**Observations:** From the above pairplot(), it is observed that:\n> We have upper triangle and lower triangle, which are intersected right from Unit price (top left) to all the way to the Rating (bottom right) diagonally.\nThe graphs that are plotted between gross margin percentage and all the other columns refer to null values.\nThe blocks with single straight inclined line (just as the plot with Total Vs gross income) refer to perfect correlation between those columns against which they are plotted. \nThe blocks with dots scattered all over (just as the plot with Total Vs Ratings) refer to no correlation between those columns against which they are plotted. \nThe blocks with multiple, straight, vertical lines (just as Quantiy Vs Rating) refer to no correlation between those columns against which they are plotted.\nRemaining all the boxes represent the existance of some positive correlation between the columns against which they are plotted.      ","d91fb775":"## Observations from columns","c563cfce":"**Observations:**\n      From the above graph, we can clear see:\n\n1.     The middle graph is a bivariate graph (involving or depending on two variables).\n1.     The top and right side graphs are univariate graphs (involing or depending on one variable).\n1.     While the bivariate graph is plotted with the scatter plot in the middle, univariate graphs are plotted with histogram.\n1.     The above is plotted with kind as scatter for bivariate graph.\n1.     We have histogram in the margins.  \n1.     As the graph suggests, clearly there is no correlation between the Total and Rating.\n1.     Also, for the Total ranging from 0 to 250, we have more number of male customers.\n1.     For the ratings given raning from 5 (approx) to 7 (approx), we have more number of male customers.","0463781c":"## Emploration of all the columns in the dataset","7c2a4754":"Let us validate the above observations and to faciliate this, we will find the value_counts()","b4acad0b":"## Observations from histogram","d97d6a03":"**Observations**: From the above heatmap(), it is observed that:\n        \nThe emply pale cement blocks represent the null values (plotted from gross margin percentage vs gross margin percentage and \ngross margin percentage vs other columns)\nThe columns with pale pink blocks are consistent with the perfect correlation.\nThe black boxes plotted with the intersection of columns upon which they are plotted refer to no correlation \nbetween those columns.\nRemaining all the columns with dark red and pale red blocks represent the existance of some positive correlation \nbetween the columns against which they are plotted.\n    ","79b7c076":"### kind as \"bar\" variant","992852b1":"## Observations from pairplot()","e8d23c0e":"**Query:** Try plotting scatterplot to find the correlation betweeen Quantity and gross income.","9a035d68":"**These objectices should be achieved.**\nWhat was the supermarket more popular with (either males or females).\nHow does the customer ratings look like and its skewness.\nWhat is the aggregate sales across the branches.\nWhat was the most popular payment used by customers.\nFind out if the gross income affects the customer ratings.\nWhich was the most profitable branch.\nObserve the relation between gender and gross income.\nInvestigate time trend in gross income during the entire 89-day period.\nWhich product line helped generate the most income.\nInvestigate the spending pattern of both males and females i.e. in which category they spent more.\nHow many products were bought by customers.\nWhich day of the week had maximum sales.\nWhich hour of the day is busiest.\nWhat product should the supermarket focus on.\nwhich city should be chose for expansion and what product should be focused on.","b2744ef1":"## Observations from lmplot()","0f30a9e4":"**Observations:** The scatter plot from the above makes us to understand that corr() value (0.71) computed from corr() \nmatrix above between Quantity and gross income holds true. There exists positive correlation between Quantity and\ngross income.","05b721f5":"From the above table, if we carefully observe the two columns namely, Total and gross income, as the Total increases, gross income also increases. With that being said, the above observations have been validated.","5001bc1f":"**heatmap():** Heat maps are visualizations that use a two-dimensional arrangement of colored boxes, where the row corresponds\nto one data dimension and the column to another. Heat maps use position and color hue to encode values.","8bf94519":"## Observations from size","faee830e":"### kind as \"count\" variant","c10bb34e":"** Histogram: A histogram is basically used to represent data provided in a form of some groups.It is accurate method \n for the graphical representation of numerical data distribution.It is a type of bar plot where X-axis represents the\n bin ranges while Y-axis gives information about frequency (count).**","8a4f5a5d":"Before moving further let us call info() again to see what the numerical columns are to plot the boxplot.","84408ecf":"**Summary\/Impressions\/Consolidated Observations**","392d4d87":"**Query:** Plot the jointplot() with the histogram variant","d49ee4c5":"## Observations from scatterplot()","a879be20":"## Observations from dtypes","734a7fbb":"**Observations:** The scatter plot from the above makes us to understand that corr() value (1.000000) computed from corr() \nmatrix above between Total and Tax 5% holds true. Tax 5% and Total are postively perfectly correlated with each other.","55245699":"## Observations from boxplot()","765aed77":"## Observations from jointplot()","e9a9dc16":"**Query:** Plot a catplot() for the 89-day period between Total and Date columns?","cb1764d6":"**Observations:** As we can see from the above graph, one can see a slight white line for the male category, which represents the deficit. So, female customers are more than male ones \nwho made purchases out of these 1000 purchases","cd785aa0":"From the above output, it can be concluded that while Ewallet was the most desirable choise for making the payments, creadit card option was the least desirable option that the customers did choose.  \n\nHence, the above observations from the plot have been validated.","b50938b3":"# PLEASE NOTE THAT \"MY VERSION\" OF THIS NOTEBOOK IS STILL BEING WORKED ON.  THERE EXISTS SOME CORRECTIONS IN \"MY VERSION\" AND I AM ALREADY WORKING ON IT. ","41bbbefb":"Let us observe the results with two columns, Total and gross income","c57d6121":"**Query:** Plot the catplot() with the kind as count?","3d47207d":"**Observations:** The scatterplot plotted between the Total and Gross income refer to perfecct postive correlation between them i.e. as the Total increases, Gross income also increases.","73210e08":"**Query:** Plot the regression model between Unit price and gorss income using regplot()","985aa6af":"## Observations from pichart()","46bb979e":"**Query:** Find out the correlation between Total and Tax 5%.","45fdbc35":"As can be seen from the output above, female customers are more than male ones, and hence the above observations are validated.","207558af":"## Observations from barplot()\n\n","87e5eb8b":"**Observations:**\n* It is clearly observed that Fashion accessories were purchased more than all other remaining categories out of these 1000 purchases.  \n* Health and beauty stood last in terms of customer purchases while reamaining four categories stood between Fashion accesories and Health and beauty.","81d6e923":"### histogram() variant","5e16ede1":"In this variant, we will have combination of numerical variable and categorical variables.  catplot() with kind as \"bar\" accepts average values for numerical variable.\n\n","f989e956":"**Observations:**  It is clearly observed that brnach A had more purchases made than remaining two during this 89-day period.         ","3e6e6861":"**Query:** Plot catplot() for \"Product line?\"","1d65bf38":"Let us plot the catplot(), which is present in seaborn library, for the categorical variable, \"Payment.\"","57146f27":"## Observations from corr()","f5b2d3da":"**Query:** Find out the relation between Rating and Unit price.","5904f1cc":"**Observations:** From the above info, we can draw the boxplt for the following numerical columns: Unit price, Quantity, \nTotal, Tax 5%, cogs, Ratings, gross income, gross margin percentage. Now, let us draw the boxplot for these.","9f263149":"**Observations:**\n* The middle bivariate graph is histogram.\n* The margin graphs are univariate or 1D profiles are the histograms.\n* We have males who have paid more tax for a range of tax being paid from 0 to 13.33.\n* Also, we have males from whom supermarket has gained maximum gross income with the gross income ranging 0 to 13.33","ef01c8a6":"**Observations:** From the above output, as the Total increases, gross income also increases.  Hence, the observations from the scatterplot() have been validated.","1d2cf708":"**Query:** Plot the jointplot() for the numerical variables, Total and Rating ","d55f1fa4":"**About lineplot(): It draws a line plot with possibility of several semantic groupings.**","bf6895ba":"Let us validate the above observations and we will do so with the help of value_counts().","60f0e0e4":"**Observations:** The scatter plot from the above makes us to understand that corr() value (-0.0088) computed from corr() \nmatrix above between Unit price and Ratings holds true. There exists absolutely no correlation between Unit price and Ratings.","aac6209d":"**boxplot():** Boxplot can be drawn with numerical data.  It is useful for observing the symmetry of the distribution and \nit can be drawn with two or more than two subplots at a single stretch to observe the difference between or amongst the \nnumerical variables.  It is also useful for examining the skewenss.","8c78328a":"**Query:** Plot the scatterplot() between Total and Gross income and draw the insights from the graph so plotted?","077909d0":"## Importing all the necessary libraries.","f31c51e4":"Because each branch name is given to the corrosponding city, it is sufficient to draw the insights from either\nBrnach variable or from the City variable. In this case, we will catplot() for Branch variable.","45e5ea1e":"Let us validate the above observations and to faciliate this, we will find the value_counts()","b1cead35":"## Observations from lineplot() ","bd207cd9":"From the above value_counts(), we can simply say that in Branch A there recorded more purchases than the other two and hence the above observations have been validated.","301c9415":"Let us print the above in a more meaningful way...","547678fa":"**Date column should be parsed**","7bf72d2f":"# Paused here.","523a4cd1":"**Observations**:\n> From the above plot, we will have outliers for Total, cogs, gross income colums and these columns are \nskewed as well.  Also, these three columns' plots look similar amongst each other (it might be because they do have a \nperfect positive correlation ( with Pearson correlation value as 1) amongst them - can be observed from the above heatmap).","a1c48845":"**Query:** Plot catplot() for Branch variable"}}