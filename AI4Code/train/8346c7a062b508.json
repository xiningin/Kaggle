{"cell_type":{"29fe7426":"code","19202fd6":"code","1f7465a8":"code","0dd0e968":"code","f686cea9":"code","f76e09ff":"code","236d66d8":"code","e417ea97":"code","45d33576":"code","fc1849fc":"code","cad05bca":"code","1b2bac1c":"code","0513ab70":"code","9e677fed":"code","fb7fa67a":"code","06ccc79f":"code","ea08c66e":"code","b7f40044":"code","05713476":"code","04aa927b":"code","af824944":"code","70ccb621":"code","64668dd3":"code","f56db08e":"code","13a998ef":"code","91098d19":"code","8a70aa81":"code","80fa0076":"code","ae808f91":"code","48b45f38":"code","89947feb":"code","639600f4":"code","92c9f36b":"code","733bfec2":"code","4d2cd34e":"code","23e75beb":"code","cb0f312a":"code","d20e5992":"code","78018873":"code","5331ba63":"code","fe74cd7c":"markdown","865ed01b":"markdown","2b9c006a":"markdown","bf440328":"markdown","d3d274e8":"markdown"},"source":{"29fe7426":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","19202fd6":"import matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split as tts\nfrom sklearn.metrics import mean_absolute_error as mae\nimport seaborn as sns","1f7465a8":"data = pd.read_csv('..\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv') ","0dd0e968":"data.head()","f686cea9":"data.describe()","f76e09ff":"data.shape","236d66d8":"data.isnull().sum()","e417ea97":"data.columns","45d33576":"data['gender'] = data['gender'].replace('M', 0)\ndata['gender'] = data['gender'].replace('F', 1)","fc1849fc":"data.head()","cad05bca":"data['ssc_b'] = data['ssc_b'].replace([\"Others\"], 0) \ndata['ssc_b'] = data['ssc_b'].replace([\"Central\"], 1)","1b2bac1c":"data.head()","0513ab70":"data['hsc_b'] = data['hsc_b'].replace([\"Others\"], 0) \ndata['hsc_b'] = data['hsc_b'].replace([\"Central\"], 1)","9e677fed":"data.head()","fb7fa67a":"data['hsc_s'] = data['hsc_s'].replace([\"Commerce\"], 0)\ndata['hsc_s'] = data['hsc_s'].replace([\"Science\"], 1) \ndata['hsc_s'] = data['hsc_s'].replace([\"Arts\"], 2) ","06ccc79f":"data.head()","ea08c66e":"data['degree_t'] = data['degree_t'].replace([\"Sci&Tech\"], 1) \ndata['degree_t'] = data['degree_t'].replace([\"Comm&Mgmt\"], 0) \ndata['degree_t'] = data['degree_t'].replace([\"Others\"], 2)","b7f40044":"data.head()","05713476":"data['specialisation'] = data['specialisation'].replace([\"Mkt&HR\"], 1) \ndata['specialisation'] = data['specialisation'].replace([\"Mkt&Fin\"], 0) ","04aa927b":"data['workex'] = data['workex'].replace([\"Yes\"], 1) \ndata['workex'] = data['workex'].replace([\"No\"], 0)","af824944":"data['status'] = data['status'].replace([\"Placed\"], 1)\ndata['status'] = data['status'].replace([\"Not Placed\"], 0)","70ccb621":"data","64668dd3":"def impute_salary(cols):\n    sal = cols[0]\n    status = cols[1]\n    \n    if pd .isnull(sal):\n        \n        if status == 0:\n            return 0.0\n    else:\n        return sal","f56db08e":"data['salary'] = data[['salary', 'status']].apply(impute_salary, axis=1)","13a998ef":"data.isnull().sum()","91098d19":"sns.heatmap(data.isnull(), yticklabels=False, cbar=False, cmap='viridis')","8a70aa81":"y = data[['status', 'salary']]","80fa0076":"feature_list = ['gender', 'ssc_p', 'ssc_b', 'hsc_p', 'hsc_b', 'hsc_s', 'degree_p', 'degree_t', 'workex']","ae808f91":"X = data[feature_list]","48b45f38":"# Divide Data using validation and training data\ntrain_X, val_X, train_y, val_y = tts(X, y, random_state=1)","89947feb":"from sklearn.tree import DecisionTreeRegressor as dtr","639600f4":"model1 = dtr()","92c9f36b":"model1.fit(train_X, train_y)","733bfec2":"predict1 = model1.predict(val_X)","4d2cd34e":"print(mae(val_y, predict1))","23e75beb":"from sklearn.ensemble import RandomForestRegressor as rfr","cb0f312a":"model2 = rfr()","d20e5992":"model2.fit(train_X, train_y)","78018873":"predict2 = model2.predict(val_X)","5331ba63":"print(mae(val_y, predict2))","fe74cd7c":"# We can also see null values with graphs","865ed01b":"# Now use Random Forest Regressor","2b9c006a":"# For Practice Purpose Only","bf440328":"# First use Decision Tree Regressor","d3d274e8":"Specify the Model and Fit it"}}