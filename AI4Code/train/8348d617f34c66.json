{"cell_type":{"a5063e4e":"code","9ceda4de":"code","b6782de4":"code","242fffd6":"code","b135581d":"code","74dbceb8":"code","119b4a5d":"markdown"},"source":{"a5063e4e":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport gc\nfrom tqdm import tqdm\nimport matplotlib.pyplot as plt\nfrom scipy.stats import pearsonr as pc\nfrom sklearn.model_selection import StratifiedKFold\nfrom catboost import CatBoostRegressor","9ceda4de":"df=pd.read_parquet(\"..\/input\/ubiquant-parquet\/train_low_mem.parquet\")","b6782de4":"models = []\nn_splits=5\nfeatures = [f for f in df.columns if f not in ['time_id', 'row_id', 'target']]\ntarget = 'target'\nkfold = StratifiedKFold(n_splits=n_splits, shuffle=True, random_state=42)","242fffd6":"def run(train):\n    scores=[]\n    for fold,(train_id,valid_id) in enumerate(kfold.split(train[features],train['investment_id'])):\n        x_train,y_train=train.iloc[train_id][features],train.iloc[train_id][target]\n        x_valid,y_valid=train.iloc[valid_id][features],train.iloc[valid_id][target]\n\n        model=CatBoostRegressor(n_estimators=2000,max_depth=3,task_type='GPU')\n        model.fit(x_train,y_train,eval_set=[(x_valid,y_valid)],verbose=20,early_stopping_rounds=100)\n        models.append(model)\n        y_pred=model.predict(x_valid)\n        score=pc(y_pred,y_valid)\n        scores.append(score)\n        print(f\"Fold{fold}:{score}\")\n        #del model,y_pred,score\n        gc.collect()\n    print(np.mean(scores))","b135581d":"run(df[-150000:])","74dbceb8":"import ubiquant\nenv = ubiquant.make_env()  \niter_test = env.iter_test()\nfor (test_df, sample_prediction_df) in iter_test:\n    test_df = test_df[features]\n    pred = np.zeros(len(test_df))\n    \n    for i in range(len(models)):\n        pred += models[i].predict(test_df)\n    \n    pred \/= len(models)\n    sample_prediction_df['target'] = pred\n    env.predict(sample_prediction_df)","119b4a5d":"## Model"}}