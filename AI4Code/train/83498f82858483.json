{"cell_type":{"fdda06cd":"code","6e59ee3e":"code","30616b7d":"code","70f3cd80":"code","381c0731":"code","90190928":"code","b02af7f9":"code","336af638":"code","ea1acea9":"code","b4c0dd51":"code","1ed75aaa":"code","0fafcafd":"code","bc2eee44":"code","4ab55cc6":"code","8f6d70b0":"code","7017e13c":"code","286544b5":"code","c4df1b7f":"code","9bc43454":"code","7ab648ef":"code","76fe35a4":"markdown"},"source":{"fdda06cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6e59ee3e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport gc\nimport json\nimport math\nimport cv2\nimport PIL\nfrom PIL import Image\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import KFold\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.linear_model import LogisticRegression, Ridge\nfrom sklearn.preprocessing import OneHotEncoder\nfrom tqdm import tqdm\nfrom sklearn.decomposition import PCA\nimport os\nimport imagesize\nimport seaborn as sns\n%matplotlib inline\n\n","30616b7d":"data = pd.read_csv(\"..\/input\/world-university-rankings\/cwurData.csv\")\n","70f3cd80":"data.head()","381c0731":"plt.figure(figsize=(12, 5))\nplt.hist(data['publications'].values, bins=200)\nplt.title('publication w.r.t count')\nplt.xlabel('publication')\nplt.ylabel('Count')\nplt.show()","90190928":"data.plot.scatter('patents','year')","b02af7f9":"sns.countplot(data.publications)","336af638":"data.plot.scatter('publications','year')","ea1acea9":"plt.figure(figsize=(12, 18))\nsns.barplot(y=data['country'], x=data['alumni_employment'], palette=\"deep\")","b4c0dd51":"plt.figure(figsize=(12, 18))\nsns.barplot(y=data['country'], x=data['publications'], palette=\"deep\")","1ed75aaa":"X = data[[ 'quality_of_faculty', 'publications', 'patents']]\ny= data['quality_of_education']\n\nX = X.drop(data[data['country'] =='USA'].index)\ny = y.drop(data[data['country'] =='USA'].index)","0fafcafd":"X.head()","bc2eee44":"y.head()","4ab55cc6":"X.shape,y.shape","8f6d70b0":"from sklearn.model_selection import train_test_split","7017e13c":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score","286544b5":"X_train,X_validation,Y_train,Y_validation=train_test_split(X,y,test_size=0.2,random_state=0)","c4df1b7f":"X_train.shape, X_test.shape, y_train.shape, y_test.shape","9bc43454":"sc=StandardScaler()\nX_train_std=sc.fit_transform(X_train)\nX_validation_std=sc.transform(X_validation)","7ab648ef":"lr=LogisticRegression()\nlr.fit(X_train_std,Y_train)\ny_validation_pred=lr.predict(X_validation_std)\nprint(accuracy_score(y_validation_pred,Y_validation))","76fe35a4":"#  **DATA VISUALIZATION**"}}