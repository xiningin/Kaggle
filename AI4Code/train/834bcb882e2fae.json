{"cell_type":{"62718c77":"code","fbc0e22c":"code","c210eee9":"code","b291c5fe":"code","395fff5a":"code","4a2f29d5":"code","78428d97":"code","6cad4810":"code","9352466f":"markdown","f98ab37f":"markdown","7e2725cd":"markdown","a033cf22":"markdown"},"source":{"62718c77":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom tqdm import tqdm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fbc0e22c":"!pip install tflearn","c210eee9":"#Code by Himanshu Dadhich https:\/\/www.kaggle.com\/himanshu01dadhich\/sample-for-chatbot\n\nimport nltk\nfrom nltk.stem.lancaster import LancasterStemmer\nstemmer = LancasterStemmer()\n\nimport numpy\nimport tflearn\nimport tensorflow\nimport random\nimport pickle\nimport tensorflow as tf\n\nimport json\nwith open('\/kaggle\/input\/star-wars-chat-bot\/starwarsintents.json') as file:\n    data = json.load(file)","b291c5fe":"#Code by Himanshu Dadhich https:\/\/www.kaggle.com\/himanshu01dadhich\/sample-for-chatbot\n\ntry:\n    with open(\"data.pickle\", \"rb\") as f:\n        words, labels, training, output = pickle.load(f)\nexcept:\n    words = []\n    labels = []\n    docs_x = []\n    docs_y = []\n\n    for intent in data[\"intents\"]:\n        for pattern in intent[\"patterns\"]:\n            wrds = nltk.word_tokenize(pattern)\n            words.extend(wrds)\n            docs_x.append(wrds)\n            docs_y.append(intent[\"tag\"])\n\n        if intent[\"tag\"] not in labels:\n            labels.append(intent[\"tag\"])\n\n    words = [stemmer.stem(w.lower()) for w in words if w != \"?\"]\n    words = sorted(list(set(words)))\n\n    labels = sorted(labels)\n\n    training = []\n    output = []\n\n    out_empty = [0 for _ in range(len(labels))]\n\n    for x, doc in enumerate(docs_x):\n        bag = []\n\n        wrds = [stemmer.stem(w.lower()) for w in doc]\n\n        for w in words:\n            if w in wrds:\n                bag.append(1)\n            else:\n                bag.append(0)\n\n        output_row = out_empty[:]\n        output_row[labels.index(docs_y[x])] = 1\n\n        training.append(bag)\n        output.append(output_row)\n\n\n    training = numpy.array(training)\n    output = numpy.array(output)\n\n    with open(\"data.pickle\", \"wb\") as f:\n        pickle.dump((words, labels, training, output), f)","395fff5a":" !pip install tensorflow==1.15","4a2f29d5":"#Code by Himanshu Dadhich https:\/\/www.kaggle.com\/himanshu01dadhich\/sample-for-chatbot\n\ntf.compat.v1.reset_default_graph()\n\n#tf.reset_default_graph()#It doesn't work. Change to the line above compatible with TF version 1\n\nnet = tflearn.input_data(shape=[None, len(training[0])])\nnet = tflearn.fully_connected(net, 8)\nnet = tflearn.fully_connected(net, 8)\nnet = tflearn.fully_connected(net, len(output[0]), activation=\"softmax\")\nnet = tflearn.regression(net)\n\nmodel = tflearn.DNN(net)\n\ntry:\n    model.load(\"model.tflearn\")\nexcept:\n    model = tflearn.DNN(net)\n    model.fit(training, output, n_epoch=1000, batch_size=8, show_metric=True)\n    model.save(\"model.tflearn\")","78428d97":"#Code by Himanshu Dadhich https:\/\/www.kaggle.com\/himanshu01dadhich\/sample-for-chatbot\n\ndef bag_of_words(s, words):\n    bag = [0 for _ in range(len(words))]\n\n    s_words = nltk.word_tokenize(s)\n    s_words = [stemmer.stem(word.lower()) for word in s_words]\n\n    for se in s_words:\n        for i, w in enumerate(words):\n            if w == se:\n                bag[i] = 1\n            \n    return numpy.array(bag)","6cad4810":"#Code by Himanshu Dadhich https:\/\/www.kaggle.com\/himanshu01dadhich\/sample-for-chatbot\n\ndef chat():\n    print(\"Start talking with the bot (type quit to stop)!\")\n    while True:\n        inp = input(\"You: \")\n        if inp.lower() == \"quit\":\n            break\n\n        results = model.predict([bag_of_words(inp, words)])\n        results_index = numpy.argmax(results)\n        tag = labels[results_index]\n\n        for tg in data[\"intents\"]:\n            if tg['tag'] == tag:\n                responses = tg['responses']\n\n        print(random.choice(responses))\n\nchat()","9352466f":"![](https:\/\/image.slidesharecdn.com\/chatbot-170409201319\/95\/chatbotlar-ve-yapay-zeka-chatbots-and-artificial-intelligence-5-638.jpg?cb=1491768846)pt.slideshare.net","f98ab37f":"#Talking with the bot:\n\n#You:  Great, kid, don't get cocky.\n\nWell, hope see you soon!\n\nYou:  Indeed!\n\nGlad to help!","7e2725cd":"#Instead of tf.reset_default_graph() Method use tf.compat.v1.reset_default_graph()\ntf.compat.v1.reset_default_graph()","a033cf22":"![](https:\/\/pbs.twimg.com\/media\/BuobFiVIQAAGXxD?format=jpg&name=900x900)twitter.com"}}