{"cell_type":{"27d17a19":"code","0bd9d77b":"code","c2d1f1db":"code","1fce4725":"code","5d2e629d":"code","220d9d11":"code","75f9db13":"code","62fa52c6":"code","0f9ba71c":"code","ba368c44":"code","139bc1d4":"code","7c9a6cf4":"code","a1ca5625":"markdown"},"source":{"27d17a19":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0bd9d77b":"####################################\n# Bespoke Chatbot NLP Workshop 2019-07-22\n# Bespoke speaker Christine Gerpheide\n# Organized by Toronto Machine Learning Summit (TMLS)\n# Hosted by WeCloudData\n####################################\n\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.metrics import precision_recall_fscore_support","c2d1f1db":"# Questions and answers\n\nanswers = {\n    'when_is_check_in' : 'Check in is at 3pm! :)',\n    'where_is_the_front_desk' : 'The front desk is located on the 2nd floor.',\n}","1fce4725":"# Training dataset\n\ntraining_phrases = {\n    'when_is_check_in' : ' '.join([\n        'when is check-in',\n        'When can I check in?',\n        'whens checkin'\n    ]),\n    'where_is_the_front_desk' : ' '.join([\n        'Where is the front desk?',\n        'what is the location of the front desk?'\n    ])\n}","5d2e629d":"# Train\n\ntraining_documents = list(training_phrases.values())\nlabels = list(training_phrases.keys())\n\nvectorizer = CountVectorizer() # stop_words\nX = vectorizer.fit_transform(training_documents)\n\nclassifier = MultinomialNB()\nclassifier.fit(X, labels)","220d9d11":"# Predict\n\ndef predict(raw_queries):\n    queries = vectorizer.transform(raw_queries)\n    return classifier.predict(queries)\n\nraw_queries = [\"where location\",\n               \"when is\",\n               \"where is check in location\"]\n\npredicted = predict(raw_queries)","75f9db13":"# Evaluate\n\nexpected = [\"where_is_the_front_desk\",\n            \"when_is_check_in\",\n            \"where_is_the_front_desk\"]\n\nevaluation = precision_recall_fscore_support(expected, predicted, average='micro')\n\nmetrics = {}\n(metrics['p'], metrics['r'], metrics['f1'], _) = evaluation\n\nprint(\"Evaluation metrics: \", metrics)","62fa52c6":"# Run\n\nuser_query = 'where is my hotel please?'\n\npredicted = predict([user_query])\n\nprint(\"Predicted intent: \", predicted[0])","0f9ba71c":"# Testing some more\n\nprint(\"Predicted intent: \", predict([\"Where is the front desk man ???\"]))\nprint(\"Predicted intent: \", predict([\"Hi, what is the check in time again?\"]))\nprint(\"Predicted intent: \", predict([\"Can I check in now? :)\"]))","ba368c44":"# Implement simple Chatbot\n\ndef chat_bot(request):\n    print(\"Request:  \", request)\n    print(\"Response: \", answers[predict([request])[0]])","139bc1d4":"chat_bot(\"I am lost, where is the front desk again?\")","7c9a6cf4":"chat_bot(\"When was check in again :)\")","a1ca5625":"# Bespoke - Chatbot NLP Workshop\n### Speaker was [Bespoke](https:\/\/www.be-spoke.io\/index.html)'s CTO [Christine Gerpheide](https:\/\/www.linkedin.com\/in\/christinegerpheide\/)\n\nOrganized by [Toronto Machine Learning Summit](https:\/\/torontomachinelearning.com\/) (TMLS)\n\nHosted by [WeCloudData](https:\/\/weclouddata.com\/)\n\nThis notebook contains the code provided by the speaker during the workshop.\n\nThe goal of the workshop was to making a very simple chatbot from scratch. It uses Natural Language Processing (NLP) from the Python library called SKLearn. The chatbot is designed to correctly respond to user requests based on the questions and answers we program into it.\n\nFeel free to try it for yourself!"}}