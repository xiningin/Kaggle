{"cell_type":{"82fbb4ba":"code","7e001738":"code","23a88579":"code","30956929":"code","0c37b081":"code","6f59647d":"code","d074f862":"code","81855ed1":"code","f8ae11ff":"code","ce0289f6":"markdown","2d5e82d0":"markdown","d36c142b":"markdown"},"source":{"82fbb4ba":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.cluster import KMeans\n\nimport plotly as py\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt ","7e001738":"zoo = pd.read_csv(r'\/kaggle\/input\/zoo-animal-classification\/zoo.csv')","23a88579":"zoo.describe()","30956929":"vals = zoo.drop(['animal_name'],axis=1).values\ninertia = []\nfor n in range(1 , 11):\n    clust = KMeans(n_clusters = n)\n    clust.fit(vals)\n    inertia.append(clust.inertia_)","0c37b081":"plt.figure(1 , figsize = (15 ,6))\nplt.plot(np.arange(1 , 11) , inertia , 'o')\nplt.plot(np.arange(1 , 11) , inertia , '-' , alpha = 0.5)\nplt.xlabel('Number of Clusters') , plt.ylabel('Inertia')\nplt.show()","6f59647d":"zoo_cluster = KMeans(n_clusters = 3)# ,init='k-means++', n_init = 10 ,max_iter=300, tol=0.0001,  random_state= 111  , algorithm='elkan')\nzoo_cluster.fit(vals)\nlabs = zoo_cluster.labels_\ncentroids = zoo_cluster.cluster_centers_","d074f862":"zoo['label'] =  labs\ntrace = go.Scatter3d(\n    x= zoo['predator'],\n    y= zoo['class_type'],\n    z= zoo['legs'],\n    mode='markers',\n     marker=dict(\n        color = zoo['label'], \n        size= 5,\n        line=dict(\n            color= zoo['label'],\n            width= 12\n        ),\n        opacity=0.8\n     )\n)\ndata = [trace]\nlayout = go.Layout(\n    title= 'Clusters',\n    scene = dict(\n            xaxis = dict(title  = 'predator'),\n            yaxis = dict(title  = 'class'),\n            zaxis = dict(title  = 'legs')\n        )\n)\nfig = go.Figure(data=data, layout=layout)\npy.offline.iplot(fig)","81855ed1":"df = zoo.drop(['animal_name'], axis=1)\n\nzoo_cluster2 = KMeans(n_clusters=5)\nzoo_cluster2.fit(df.values)\ncentroids2 = zoo_cluster2.cluster_centers_\nlabs = zoo_cluster2.labels_\n\ndf['cluster'] = labs\nzoo['cluster'] = labs","f8ae11ff":"for i, cent in enumerate(centroids2):\n    dist = np.sqrt(np.square(centroids2[i] - df[df['cluster'] == i].drop(['cluster'], axis=1).values).sum(axis=1))\n    ind = np.argmax(dist)\n    print(zoo[zoo['cluster'] == i].reset_index().iloc[ind].animal_name, ' has a distance: ', dist.max())","ce0289f6":"## Determining the number of clusters (I chose 3)","2d5e82d0":"## Visualizing Clusters","d36c142b":"# Finding Weird Animals"}}