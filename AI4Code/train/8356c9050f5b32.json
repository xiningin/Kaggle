{"cell_type":{"2d19be49":"code","bff9e480":"code","5e0b5c49":"code","45bdbd9e":"code","89d0ec4d":"code","5e5ae8b6":"code","f8afdf65":"code","37a68c2c":"code","c2a92991":"code","5edb98d5":"code","4e16177f":"code","68792ebb":"code","81643cf2":"code","3ba9c94d":"code","5532d019":"code","50b9329f":"code","060cca7e":"code","5cb620d2":"code","840c28bc":"code","7e384d56":"code","2ae5553f":"code","f0e292c1":"code","460500a9":"code","8ad5a29d":"code","f692fac4":"code","b91accb5":"code","06875372":"code","4243562a":"code","6db4690e":"code","f7e23045":"code","6b694d54":"code","6e9cfe65":"code","c65b6604":"code","f238c522":"code","e3733ac8":"code","d9056787":"code","0728691f":"markdown","862de8f8":"markdown","48276de4":"markdown","3aa5cbf3":"markdown","ba3314a8":"markdown","4b9b4fc4":"markdown","4a07ee54":"markdown","c7c25139":"markdown"},"source":{"2d19be49":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplt.rcParams[\"figure.figsize\"] =(12,10)\nplt.rcParams[\"font.family\"]=\"serif\"\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","bff9e480":"data =pd.read_csv(\"..\/input\/health-care-project-eda-model-validation\/health care diabetes.csv\")\ndata.head()","5e0b5c49":"data.info()","45bdbd9e":"data.shape","89d0ec4d":"data.isnull().sum()","5e5ae8b6":"data.describe().transpose()","f8afdf65":"data.columns","37a68c2c":"Positive =data[data['Outcome']==1]\nPositive.head()","c2a92991":"Positive.shape","5edb98d5":"data.columns","4e16177f":"data[\"Glucose\"]=data[\"Glucose\"].replace(0,data[\"Glucose\"].mean())","68792ebb":"plt.figure(figsize=(12,8),dpi=80)\nplt.hist(data[\"Glucose\"])\nplt.xlabel(\"Glucose\")\nplt.ylabel(\"Count\")\nsns.set_style(style=\"darkgrid\")\nprint(\"Mean of the Glucose is\",data[\"Glucose\"].mean())\nprint(\"Datatype of the Glucose is\",data[\"Glucose\"].dtypes)","81643cf2":"data[\"BloodPressure\"]=data[\"BloodPressure\"].replace(0,data[\"BloodPressure\"].mean())","3ba9c94d":"plt.figure(figsize=(12,6),dpi=100)\nplt.xlabel(\"BloodPressure\")\nplt.hist(data[\"BloodPressure\"])\nsns.set_style(style=\"darkgrid\")\nprint(\"Mean of BloodPressure is:-\",data[\"BloodPressure\"].mean())\nprint(\"Datatype of BloodPressure is :-\",data[\"BloodPressure\"].dtypes)","5532d019":"data[\"BMI\"] =data[\"BMI\"].replace(0,data[\"BMI\"].mean())","50b9329f":"data['Insulin']=data['Insulin'].replace(0,data['Insulin'].mean())","060cca7e":"plt.figure(figsize=(12,10),dpi=80)\nplt.title(\"Checking missing values with heatmap\")\nsns.heatmap(data.isnull(),cmap=\"magma\",yticklabels=False)","5cb620d2":"plt.figure(figsize=(12,8),dpi=60)\nplt.title(\"Count of Outcome\")\nplt.xlabel(\"Outcome\")\nplt.ylabel(\"Count\")\nsns.countplot(data[\"Outcome\"])\nsns.set_style(style=\"darkgrid\")\nprint(\"Count of class:\\n\",data[\"Outcome\"].value_counts())","840c28bc":"sns.pairplot(data)\nplt.title(\"Scatter  plot between variables \")","7e384d56":"data.corr()","2ae5553f":"plt.figure(figsize=(12,8),dpi=90)\nplt.title(\"Correlation  between the variables\")\nsns.heatmap(data.corr(),cmap=\"viridis\")","f0e292c1":"data.head()","460500a9":"X=data.drop([\"Outcome\"],axis=1).values\ny=data[\"Outcome\"].values","8ad5a29d":"print(X ,y)","f692fac4":"A =data.iloc[:,:-1].values\nB=data.iloc[:,-1].values","b91accb5":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)","06875372":"print(X_train.shape,X_test.shape,y_train.shape,y_test.shape)","4243562a":"from sklearn.preprocessing import StandardScaler\nfrom sklearn import preprocessing","6db4690e":"scale =StandardScaler()","f7e23045":"std_X_train=scale.fit_transform(X_train)\nstd_X_test=scale.fit_transform(X_test)","6b694d54":"data_norm=X","6e9cfe65":"data_normalized =preprocessing.normalize(X)","c65b6604":"x_train_norm,x_test_norm,y_train_norm,y_test_norm =train_test_split(data_normalized,y,test_size=0.2,random_state=0)","f238c522":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score,classification_report,roc_curve,auc","e3733ac8":"KNN =KNeighborsClassifier(n_neighbors=25)\nKNN.fit(std_X_train,y_train)\nknnn_predict=KNN.predict(std_X_test)\naccuracy_score(knnn_predict,y_test)","d9056787":"print(\"model validation ===>\\n\")\nprint(\"Accuracy Score\",accuracy_score(knnn_predict,y_test))\nprint(\"Classification Report\",classification_report(knnn_predict,y_test))\nprint(\"ROC Curve\")\nknn_pred=KNN.predict_proba(std_X_test)\nknn_pred1=knn_pred[:,1]\nfpr,tpr,thres=roc_curve(y_test,knn_pred1)\nauc_roc=auc(fpr,tpr)\nplt.figure(figsize=(16,8),dpi=60)\nsns.set_style(style=\"darkgrid\")\nplt.title(\"ROC Curve\")\nplt.xlabel(\"False Positive Rate\")\nplt.ylabel(\"True Positive Rate\")\nplt.plot(fpr,tpr,'b',label=\"AUC Score =%0.2f\"%auc_roc)\nplt.plot(fpr,fpr,\"r--\",color=\"red\")","0728691f":"# Scatter Plot","862de8f8":"# Checking for the missing values","48276de4":"# This is a classification model with data in numerical hence Logistic regression can be used to model this data,Along with these we can also use Randon Forest  ,Decision tree ,SVM(Support vector meachine) to calucate the acuracy of the model and we will find out which of these models provide better accuracy score ","3aa5cbf3":"# So with the above visualisation it clearly shows that the class is balanced hence we can directly use this data for training and testing purpose.Forthis kind of data we have to use ROC Curve in order to avoid TYPE 2 ERROR","ba3314a8":"# Data Preprocessing ","4b9b4fc4":"# From the above scatter plots we can clearly see that there is no strong multicollinarity between the variables but there is a small correlation between BMI and Skinthickness ,Pregnancy and age","4a07ee54":"# K-Nearest Neibours (KNN) Using Standard Scaling","c7c25139":"# CountPlot"}}