{"cell_type":{"08d6bc75":"code","06cebd95":"code","4970b96a":"code","45b1f05e":"code","d373b036":"code","28b78f4a":"code","2608b25e":"code","0e95f7a9":"code","a5a91ca3":"code","eaa4d542":"code","41b84998":"code","f2c5840f":"code","b2b4c69c":"code","1a4cf334":"code","ba4e0fca":"code","b7d664a1":"code","ca052f91":"code","145b5300":"code","0cbe7fbf":"code","2d50137a":"code","8ac24b01":"code","9f92f894":"code","669f517c":"code","519a577a":"code","73c3530b":"code","1af02fca":"code","98dbef6d":"code","fe28c241":"code","06ab031c":"code","6d73169d":"code","4d88d770":"code","51239a1b":"code","56ddf102":"code","9819603e":"code","8f78d4b2":"code","244ec500":"markdown","8d439906":"markdown","4213894e":"markdown","93c6654a":"markdown","f30778e5":"markdown","dceae06f":"markdown","78170d94":"markdown","3a7254e3":"markdown","3751445a":"markdown","55e5799e":"markdown","6ff75c27":"markdown","6f83f8b1":"markdown","87fc6b38":"markdown","709d43e8":"markdown","743fd1e2":"markdown","5b340beb":"markdown","47722cb8":"markdown","6d551651":"markdown","d163b044":"markdown","175ff452":"markdown","e667af1b":"markdown","5523361e":"markdown","933f65cc":"markdown","629fe3f5":"markdown","9fae13e2":"markdown","da9359d0":"markdown","242105e2":"markdown","b35efe04":"markdown","c19b0128":"markdown","0f25ecad":"markdown"},"source":{"08d6bc75":"from IPython.display import HTML\nfrom IPython.display import Image\nImage(url= \"https:\/\/www.worldatlas.com\/r\/w728-h425-c728x425\/upload\/0f\/59\/b2\/untitled-design-275.jpg\")","06cebd95":"from IPython.core.display import HTML\nHTML('''<script>\ncode_show=true; \nfunction code_toggle() {\n if (code_show){\n $('div.input').hide();\n } else {\n $('div.input').show();\n }\n code_show = !code_show\n} \n$( document ).ready(code_toggle);\n<\/script>\nThe raw code for this IPython notebook is by default hidden for easier reading.\nTo toggle on\/off the raw code, click <a href=\"javascript:code_toggle()\">here<\/a>.''')","4970b96a":"# importing libraries\n%matplotlib inline \nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nfrom scipy import stats\nimport seaborn as sns\nimport re\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import mean_squared_log_error\nfrom sklearn.metrics import r2_score","45b1f05e":"# read csv file\ndf=pd.read_csv('..\/input\/countries of the world.csv', decimal = ',')","d373b036":"# View first 5 rows(default) to see the general distribution of data\ndf.head()","28b78f4a":"# run basic statistical analysis on the given data to find any abnormal values\ndf.describe()","2608b25e":"print(\"Are there Null Values in the dataset? \")\ndf.isnull().values.any()","0e95f7a9":"# finding the missing or null values in the data\ntotal = df.isnull().sum()[df.isnull().sum() != 0].sort_values(ascending = False)\npercent = pd.Series(round(total\/len(df)*100,2))\npd.concat([total, percent], axis=1, keys=['Total Missing', 'Percent'])","a5a91ca3":"# sorting and plotting Countries based on GDP\ntop_gdp_countries = df.sort_values('GDP ($ per capita)',ascending=False)\nfig, ax = plt.subplots(figsize=(16,6))\nsns.barplot(x='Country', y='GDP ($ per capita)', data=top_gdp_countries.head(33), palette='Set1')\nax.set_xlabel(ax.get_xlabel(), labelpad=15)\nax.set_ylabel(ax.get_ylabel(), labelpad=30)\nax.xaxis.label.set_fontsize(16)\nax.yaxis.label.set_fontsize(16)\nax.set_title('GDP of the top 33 countries sorted in a descending order.')\nplt.xticks(rotation=90)\nplt.show()","eaa4d542":"fig, ax = plt.subplots(figsize=(16,6))\nsns.barplot(x='Country', y='GDP ($ per capita)', data=top_gdp_countries.tail(33), palette='Set1')\nax.set_xlabel(ax.get_xlabel(), labelpad=15)\nax.set_ylabel(ax.get_ylabel(), labelpad=30)\nax.xaxis.label.set_fontsize(16)\nax.yaxis.label.set_fontsize(16)\nax.set_title('GDP of the bottom 33 countries sorted in a descending order.')\nplt.xticks(rotation=90)\nplt.show()","41b84998":"df.groupby('Region')[['GDP ($ per capita)', 'Literacy (%)', 'Agriculture']].median()","f2c5840f":"for col in df.columns.values:\n    if df[col].isnull().sum() == 0:\n        continue\n    if col == 'Climate':\n        guess_values = df.groupby('Region')['Climate'].apply(lambda x: x.mode().max())\n    else:\n        guess_values = df.groupby('Region')[col].median()\n    for region in df['Region'].unique():\n        df[col].loc[(df[col].isnull())&(df['Region']==region)] = guess_values[region]","b2b4c69c":"print(\"Are there Null Values in the dataset? \")\ndf.isnull().values.any()","1a4cf334":"print(df.isnull().sum())","ba4e0fca":"df.corr()","b7d664a1":"plt.figure(figsize=(16,12))\nax=plt.axes()\nsns.heatmap(data=df.iloc[:,2:].corr(),annot=True,fmt='.2f',cmap='coolwarm',ax=ax)\nax.set_title('Heatmap of all the Correlated values')\nplt.show()","ca052f91":"# choose attributes which shows relation\nx = df[['GDP ($ per capita)','Literacy (%)','Phones (per 1000)','Service','Infant mortality (per 1000 births)','Birthrate','Agriculture']]","145b5300":"# show corr of the same\nplt.figure(figsize=(9,7))\nax=plt.axes()\nsns.heatmap(x.corr(), annot=True, cmap='coolwarm',ax=ax)\nax.set_title('Heatmap of all the highly Correlated values')\nplt.show()","0cbe7fbf":"fig, axes = plt.subplots(nrows=3, ncols=3, figsize=(25,16))\nplt.subplots_adjust(hspace=0.4)\n\ncorr_to_gdp = pd.Series()\nfor col in df.columns.values[2:]:\n    if ((col!='GDP ($ per capita)')&(col!='Climate')&(col!='Coastline (coast\/area ratio)')&(col!='Pop. Density (per sq. mi.)')):\n        corr_to_gdp[col] = df['GDP ($ per capita)'].corr(df[col])\nabs_corr_to_gdp = corr_to_gdp.abs().sort_values(ascending=False)\ncorr_to_gdp = corr_to_gdp.loc[abs_corr_to_gdp.index]\n\nfor i in range(3):\n    for j in range(3):\n        sns.regplot(x=corr_to_gdp.index.values[i*3+j], y='GDP ($ per capita)', data=df,\n                   ax=axes[i,j], fit_reg=False, marker='.')\n        title = 'correlation='+str(corr_to_gdp[i*3+j])\n        axes[i,j].set_title(title)\naxes[1,2].set_xlim(0,102)\nfig.suptitle('Scatter Plot GDP against the factors',fontsize=30)\nplt.show()","2d50137a":"x = df[['GDP ($ per capita)','Phones (per 1000)','Service', 'Region']]\npp=sns.pairplot(x, hue=\"Region\", diag_kind=\"hist\", aspect=1.55, markers=\"o\")\npp.fig.suptitle('Scatter Plot of GDP, Phones per Thousand and Service',y=1.05)","8ac24b01":"fig, axes = plt.subplots(nrows=2, ncols=2, figsize=(23,20))\nplt.subplots_adjust(hspace=0.4)\n\nz = pd.Series()\nfor col in df.columns.values[2:]:\n    if ((col!='Deathrate')&(col!='Net migration')&(col!='Industry')&(col!='Agriculture')&(col!='Birthrate')&(col!='Area (sq. mi.)')&(col!='Population')&(col!='Other (%)')&(col!='Crops (%)')&(col!='Arable (%)')&(col!='Infant mortality (per 1000 births)')&(col!='Climate')&(col!='Coastline (coast\/area ratio)') &(col!='Pop. Density (per sq. mi.)')):\n    # if ((col=='GDP ($ per capita)')&(col=='Literacy (%)')&(col=='Service')&(col=='Phones (per 1000)')):\n        colums=np.array(df[col])\n        z[col]=colums\nfor i in range(2):\n    for j in range(2):\n        \n        x=z[i*2+j]\n        y=z.index[i*2+j]\n        sns.distplot(x,axlabel=y,ax=axes[i,j])\n        \nfig.suptitle('Distplot of Positively Correlated Factors with GDP per Capita',fontsize=30)        \nplt.show()","9f92f894":"fig, axes = plt.subplots(nrows=2, ncols=2, figsize=(23,20))\nplt.subplots_adjust(hspace=0.2)\n\nz = pd.Series()\nfor col in df.columns.values[2:]:\n     if ((col!='Service')&(col!='Deathrate')&(col!='Net migration')&(col!='Industry')&(col!='Literacy (%)')&(col!='Area (sq. mi.)')&(col!='Population')&(col!='Other (%)')&(col!='Crops (%)')&(col!='Arable (%)')&(col!='Phones (per 1000)')&(col!='Climate')&(col!='Coastline (coast\/area ratio)') &(col!='Pop. Density (per sq. mi.)')):\n            \n        colums=np.array(df[col])\n        z[col]=colums\n        \nfor i in range(2):\n    for j in range(2):\n        \n        x=z[i*2+j]\n        y=z.index[i*2+j]\n        sns.distplot(x,axlabel=y,ax=axes[i,j])\n      \nfig.suptitle('Distplot of Negatively Correlated Factors with GDP per capita',fontsize=30)                \nplt.show()","669f517c":"fig, axes = plt.subplots(nrows=2, ncols=3, figsize=(23,20))\nplt.subplots_adjust(hspace=0.2)\n\nz = pd.Series()\nfor col in df.columns.values[2:]:\n     if ((col!='Deathrate')&(col!='Net migration')&(col!='Industry')&(col!='GDP ($ per capita)')&(col!='Area (sq. mi.)')&(col!='Population')&(col!='Other (%)')&(col!='Crops (%)')&(col!='Arable (%)')&(col!='Climate')&(col!='Coastline (coast\/area ratio)') &(col!='Pop. Density (per sq. mi.)')):\n            \n        colums=np.array(df[col])\n        z[col]=colums\n\nfor i in range(2):\n    for j in range(3):\n        x=z[i*3+j]\n        y=z.index[i*3+j]\n        \n        sns.boxplot(x,ax=axes[i,j])\n        title=str(y)\n        axes[i,j].set_title(title)\n        \nfig.suptitle('Boxplot of Correlated Factors with GDP per Capita',fontsize=30)                      \nplt.show()","519a577a":"df.head()","73c3530b":"LE = LabelEncoder()\ndf['Regional_label'] = LE.fit_transform(df['Region'])\ndf1 = df[['Region','Regional_label']]\ndf1.head(5)","1af02fca":"train, test = train_test_split(df, test_size=0.3, shuffle=True)\ntraining_features = ['Population', 'Area (sq. mi.)',\n       'Pop. Density (per sq. mi.)', 'Coastline (coast\/area ratio)',\n       'Net migration', 'Infant mortality (per 1000 births)',\n       'Literacy (%)', 'Phones (per 1000)',\n       'Arable (%)', 'Crops (%)', 'Other (%)', 'Birthrate',\n       'Deathrate', 'Agriculture', 'Industry', 'Service', 'Regional_label','Service']\ntarget = 'GDP ($ per capita)'\ntrain_X = train[training_features]\ntrain_Y = train[target]\ntest_X = test[training_features]\ntest_Y = test[target]","98dbef6d":"model = LinearRegression()\nmodel.fit(train_X, train_Y)\ntrain_pred_Y = model.predict(train_X)\ntest_pred_Y = model.predict(test_X)\ntrain_pred_Y = pd.Series(train_pred_Y.clip(0, train_pred_Y.max()), index=train_Y.index)\ntest_pred_Y = pd.Series(test_pred_Y.clip(0, test_pred_Y.max()), index=test_Y.index)\n\nrmse_train = np.sqrt(mean_squared_error(train_pred_Y, train_Y))\nmsle_train = mean_squared_log_error(train_pred_Y, train_Y)\nrmse_test = np.sqrt(mean_squared_error(test_pred_Y, test_Y))\nmsle_test = mean_squared_log_error(test_pred_Y, test_Y)\n\nprint('Root Mean Squared Error for Training Data is:', '%.2f' %rmse_train,'\\t\\tMean Squared Log Error for Training Data is:', '%.2f' %msle_train)\nprint('Root Mean Squared Error for Test Data is:', '%.2f' %rmse_test,'\\t\\tMean Squared Log Error for Test Data is:', '%.2f' %msle_test)\n","fe28c241":"train, test = train_test_split(df, test_size=0.3, shuffle=True)\ntraining_features = ['Phones (per 1000)']\ntarget = 'GDP ($ per capita)'\ntrain_X = train[training_features]\ntrain_Y = train[target]\ntest_X = test[training_features]\ntest_Y = test[target]","06ab031c":"model = LinearRegression()\nmodel.fit(train_X, train_Y)\ntrain_pred_Y = model.predict(train_X)\ntest_pred_Y = model.predict(test_X)\ntrain_pred_Y = pd.Series(train_pred_Y.clip(0, train_pred_Y.max()), index=train_Y.index)\ntest_pred_Y = pd.Series(test_pred_Y.clip(0, test_pred_Y.max()), index=test_Y.index)\n\nrmse_train = np.sqrt(mean_squared_error(train_pred_Y, train_Y))\nmsle_train = mean_squared_log_error(train_pred_Y, train_Y)\nrmse_test = np.sqrt(mean_squared_error(test_pred_Y, test_Y))\nmsle_test = mean_squared_log_error(test_pred_Y, test_Y)\n\nprint('Root Mean Squared Error for Training Data is:', '%.2f' %rmse_train,'\\t\\tMean Squared Log Error for Training Data is:', '%.2f' %msle_train)\nprint('Root Mean Squared Error for Test Data is:', '%.2f' %rmse_test,'\\t\\tMean Squared Log Error for Test Data is:', '%.2f' %msle_test)\n\nplt.scatter(test_X, test_Y,  color='red')\nplt.plot(test_X, test_pred_Y, color='blue', linewidth=1)\nplt.title('Linear Regression of Phones per Thousand with GDP')\nplt.xlabel('Phones per Thousand')\nplt.ylabel('GDP per Capita')\nplt.xticks()\nplt.yticks()\n\nplt.show()","6d73169d":"df['Total_GDP ($)'] = df['GDP ($ per capita)'] * df['Population']\n#plt.figure(figsize=(16,6))\ntop_gdp_countries = df.sort_values('Total_GDP ($)',ascending=False).head(10)\nother = pd.DataFrame({'Country':['Other'], 'Total_GDP ($)':[df['Total_GDP ($)'].sum() - top_gdp_countries['Total_GDP ($)'].sum()]})\ngdps = pd.concat([top_gdp_countries[['Country','Total_GDP ($)']],other],ignore_index=True)\n\nfig, axes = plt.subplots(nrows=1, ncols=2, figsize=(20,7), gridspec_kw = {'width_ratios':[2,1]})\nsns.barplot(x='Country', y='Total_GDP ($)', data=gdps, ax=axes[0], palette='Set3')\naxes[0].set_xlabel('Country', labelpad=30, fontsize=16)\naxes[0].set_ylabel('Total_GDP', labelpad=30, fontsize=16)\n\ncolors = sns.color_palette(\"Set3\", gdps.shape[0]).as_hex()\naxes[1].pie(gdps['Total_GDP ($)'], labels=gdps['Country'], colors=colors, autopct='%1.1f%%', shadow=True)\naxes[1].axis('equal')\nplt.show()","4d88d770":"Rank1 = df[['Country','Total_GDP ($)']].sort_values('Total_GDP ($)', ascending=False).reset_index()\nRank2 = df[['Country','GDP ($ per capita)']].sort_values('GDP ($ per capita)', ascending=False).reset_index()\nRank1 = pd.Series(Rank1.index.values+1, index=Rank1.Country)\nRank2 = pd.Series(Rank2.index.values+1, index=Rank2.Country)\nRank_change = (Rank2-Rank1).sort_values(ascending=False)\nprint('rank of total GDP - rank of GDP per capita:')\nRank_change.loc[top_gdp_countries.Country]","51239a1b":"df.corr()","56ddf102":"plt.figure(figsize=(16,12))\nax=plt.axes()\nsns.heatmap(data=df.iloc[:,2:].corr(),annot=True,fmt='.2f',cmap='coolwarm',ax=ax)\nax.set_title('Heatmap of all the Correlated values')\nplt.show()","9819603e":"# choose attributes which shows relation\nx = df[['Total_GDP ($)','Population','Area (sq. mi.)','GDP ($ per capita)','Literacy (%)','Phones (per 1000)','Service','Infant mortality (per 1000 births)','Birthrate','Agriculture']]","8f78d4b2":"# show corr of the same\nplt.figure(figsize=(9,7))\nax=plt.axes()\nsns.heatmap(x.corr(), annot=True, cmap='coolwarm',ax=ax)\nax.set_title('Heatmap of all the highly Correlated values')\nplt.show()","244ec500":"# <p style=\"text-align: center;\">Conclusion<p>\n    \n1. Given Dataset is rightly skewed and hence therefore it's measure of central tendency is median.\n2. GDP per capita is highly correlated with phones, services ,literacy rate(positively correlated) and infant mortality rate, agriculture ,birthrate (negatively correlated).\n3. On being grouped region wise, GDP per capita is positively correlated with phones and services. As in the region where people tend to buy more phones those regions tend to have more GDP per capita and as for services , more the services more is the GDP per capita.\n4. For highly correlated factors , the density distribution is mostly skewed. \n5. Climate has no effect on GDP per capita.\n6. For multiple linear regression, we conclude that RMSE(test)=-- and MSLE(test)=--,so RMSE value is low in the range (55000) is a good measure and hence tells us that model is a good predictor as in we can make theoritical claims and ##(lower value of MSE shows that whether our model is a good estimator. (As in test data fits well with line of regression or not).\n7. For single linear regression (phones per 1000 vs GDP per capita), we see that both RMSE and MSE values are good measure. Phones per 1000 is a good factor that can predict GDP per capita values.\n8. According to total GDP countries like India and China which have low GDP per capita (Rank 146 and Rank 118 respectively) jump to positions 4 and 2 respectively. This shows that although their total GDP is high, but their GDP per capita is low.\n9. Countries with high total GDP is quite different from countries with high GDP per capita.\n10. Total GDP is highly correlated with Area and Population.\n11. Factors which were highly correlated with GDP per capita has almost no effect on total GDP except for Phones per 1000 , which has correlation of 0.23","8d439906":"### Replacing missing values in the dataset\n[Reference Link 2](#2)\n\nFrom the graphs plotted above, we can see that the GDP per capita is distributed in a skewed manner i.e. it starts with a high value and then exponentially drops to a low value. Since the distribution is skewed, it is advisable to replace the missing values with the central tendancy of median. We do not use mean or mode because mean is influenced by outliers while mode can have multiple values and mode is generally used for categorical data.\n\nA region is an area of land that includes a number of places which have something in common. It is generally seen, that countries in the same region have the same climate, and thus agricultural patterns are similar. Other socio-cultural attributes such as literacy, industry etc are also found to be similar in a region.\n\nThus we are grouping our data by the region and calculating the median of the values of each attributes. Now these median values can be used to replace the missing values in our data set. Below I have shown the median values of GDP, Literacy % and Agriculture grouped by region.(I have randomly selected Literacy and Agriculture to show the grouping by region)\n\nPS- Since climate is a categorical data, we are using mode instead of mean for climate.","4213894e":"### Label Encoder\nFrom the above dataset we can see that the Region has a value that is not numeric, so it is not possible to run Linear Regression Analysis on this data. So we use Label Encoder to transform this data of Region to a Region Label. This label will assign a numeric value to all the Region Entries.","93c6654a":"### Dataset Overview\nHere we are looking at the top 5 rows of the dataset to view, what type of dataset it is. We also look at the columns which show the various attributes in the dataset.","f30778e5":"# <p style=\"text-align: center;\">ABSTRACT<\/p>\n[Reference Link 1](#1)\n\nCountries of the World is a dataset by Fernando Lasso, which has a list of various factors which affect the GDP per capita of the countries. In this Notebook, I have shown the factors which highly affect the GDP per capita and some factors which more or less do not affect the GDP per capita. I have also discussed about the GDP which is GDP per capita multiplied by the total population of the country. Linear Regression and Correlation are the Exploratory Data Analysis methods used to find the factors affecting the GDP. A few factors that affect the GDP of a Country are Phones owned by people per Thousand, Birthrate of a country and Literacy rate of the country etc.\n","dceae06f":"### Heatmap of Highly correlated values of Total GDP and GDP per Capita","78170d94":"# <p style=\"text-align: center;\">Citation<p>\n1. https:\/\/github.com\/nikbearbrown\/INFO_6105\/blob\/master\/Assignments\/Countries_of_the_World_EDA_Assignment_1.ipynb - GitHub Account of Professor \n   <a id=\"1\"><\/a>\n2. https:\/\/www.kaggle.com\/stieranka\/predicting-gdp-world-countries - Kaggle Kernel on the same dataset\n   <a id=\"2\"><\/a>\n3. https:\/\/www.youtube.com\/watch?v=E5RjzSK0fvY&t=394s - Youtube video of Linear Regression\n   <a id=\"3\"><\/a>","3a7254e3":"### Finding the location of Null values\n[Reference Link 2](#2)\n\nNow that we know that there are missing(null) values in the dataset, we need to find the columns which have missing values and then find the percentage of how much data is missing in those columns to get a better picture.","3751445a":"### Correlation of Total GDP with all the factors","55e5799e":"# <p style=\"text-align: center;\">Linear Regression(Data Training and Modeling)<p>\n[Reference Link 3](#3)\n    \nLinear regression attempts to model the relationship between two variables by fitting a linear equation to observed data. One variable is considered to be an explanatory variable (Factors), and the other is considered to be a dependent variable (GDP). Linear regression looks at various data points and plots a trend line. Linear regression can create a predictive model on apparently random data, showing trends in data. Linear regression looks at various data points and plots a trend line. Linear regression can create a predictive model on apparently random data, showing trends in data. \n#### RMSE\nRoot Mean Square Error (RMSE) is the standard deviation of the residuals (prediction errors). Residuals are a measure of how far from the regression line data points are; RMSE is a measure of how spread out these residuals are. In other words, it tells you how concentrated the data is around the line of best fit. Root mean square error is commonly used in forecasting and regression analysis to verify experimental results.\n\n#### MSLE\nThe mean squared error tells you how close a regression line is to a set of points. It does this by taking the distances from the points to the regression line (these distances are the \u201cerrors\u201d) and squaring them. The squaring is necessary to remove any negative signs. It also gives more weight to larger differences. It\u2019s called the mean squared error as you\u2019re finding the average of a set of errors. MSLE stands for Mean Squared Log Error.","6ff75c27":"### Heatmap Representation of the same","6f83f8b1":"### Scatterplot\n[Reference Link 1](#1)\n\nScatterplot is a graph of plotted points that show the relationship between two sets of data. It helps us find the linear relationship between dependant and independant variable (x vs y),which is (Factors vs GDP per capita) in this case. It basically shows how strongly two variables have linear relationship. \n\nSince we have some factors which are inversely correlated with GDP per capita , we are going to take the absolute value of correlation coefficient and plot it.","87fc6b38":"### Ranking of Countries according to the total GDP vs GDP per Capita\n\nAs we can see that countries like India and China which have low GDP per Capita because of their high population, jump up when it comes to calculating Total GDP.","709d43e8":"### Checking for empty fields\n[Reference Link 2](#2)\n\nNext we will check if there are any missing or Null values in the dataset.","743fd1e2":"# <p style=\"text-align: center;\">Total GDP<p>\n    \nGDP, which stands for Gross Domestic Product, is a measure describing the value of a country's economy. GDP takes into account all of the goods produced and services made available in a country over a specific period of time. Often, GDP is obtained quarterly and annually. GDP is a number that will ultimately indicate the overall economic health of the country.\n\n","5b340beb":"### Statistical Analysis\nHere we are running basic Statistical analysis on the given data to find any abnormal values in the dataset","47722cb8":"### Distplot\n#### Positively Correlated Factors\n[Reference Link 1](#1)\n\nThe following figure gives a plot for density of positively correlated factors (where r>0). And it is a univariate distribution","6d551651":"### Heatmap\nBelow is a Heatmap, which is a visualization of the correlation","d163b044":"# <p style=\"text-align: center;\">Contribution<p>\nAs this was a learning assignment, the majority of the code has been taken from the GitHub account of the professor Nik Brown.\n    \n- Code by self : 25%\n- Code from external Sources : 75%","175ff452":"# <p style=\"text-align: center;\">EDA FOR COUNTRIES OF THE WORLD<\/p>\n","e667af1b":"### Boxplot\n[Reference Link 1](#1)\n\nIt is often used in explanatory data analysis in order to show the shape of the distribution, its central value, and its variability. The following figure gives us the boxplot for the first three factors that are highly positively and negatively correlated.","5523361e":"# <p style=\"text-align: center;\">License<p>\nCopyright (c) 2019 Rushabh Nisher\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","933f65cc":"### Multiple Linear Regression \nMultiple linear regression (MLR) is a statistical technique that uses several explanatory variables to predict the outcome of a response variable. The goal of multiple linear regression (MLR) is to model the relationship between the explanatory and response variables.","629fe3f5":"### How to find the missing values in the dataset?\n[Reference Link 2](#2)\n\nNow that we know that there are missing values in the dataset, we need a remedy to this. We could either ignore the missing values if the number of missing values is low, but in some cases like climate and literacy there are many missing values (about 10%) of the data,this could significantly affect the graph. So before we run our analysis, we need to figure out a way to replace these null values. Below we are plotting our dependant variable (GDP per capita) to find out its distribution. Based on this distribution, we will be able to decide how to replace our missing values.","9fae13e2":"### Heatmap for Higly Correlated Values\nAs we can see from the Upper Heatmap, attributes such as Literacy, Phones per thousand and Service are highly positively correlated with GDP per capita whereas Infant Mortality Rate, Birthrate and Agriculture are highly negatively correlated with GDP per capita.\nThis means that if GDP per Capita would increase then likely Phones per thousand will also increase and vice versa.\nAnd, if GDP per Capita would increase then likely the infant Mortality rate would go down and vice versa.","da9359d0":"#### Negatively Correlated Factors\nThe following figure gives a plot for density of negatively correlated factors (where r<0). And it is a univariate distribution","242105e2":"### Pairplot\n\n[Reference Link 1](#1)\n\nWhile there are an almost overwhelming number of methods to use in EDA, one of the most effective starting tools is the pairs plot (also called a scatterplot matrix). A pairs plot allows us to see both distribution of single variables and relationships between two variables(Here GDP, Phones per thousand and Region). Pair plots are a great method to identify trends for follow-up analysis.\n\nThe histogram on the diagonal allows us to see the distribution of a single variable while the scatter plots on the upper and lower triangles show the relationship (or lack thereof) between two variables.","b35efe04":"# <p style=\"text-align: center;\"> Correlation<p>\n[Reference Link 1](#1)\n    \nIn the first step of our EDA we are finding out the correlation among the various attributes of the dataset. Correlation value gives us the measure of linear relationship amongst two numerical quantities. The range of correlation is between -1 and 1.\n\nWhen two variables have a positive correlation, it means the variables move in the same direction. This means that as one variable increases, so does the other one. In a negative correlation, the variables move in inverse, or opposite, directions. In other words, as one variable increases, the other variable decreases. When the correlation value is 0, no correlation exists between the attributes\n\nIn this case, it will give us the attributes which are most related to GDP per capita. And thus these attributes will help us analyze the factors which affect the GDP per capita in a country","c19b0128":"### Simple Linear Regression\n\nSimple Linear Regression Analysis The simplest form of a regression analysis uses on dependent variable and one independent variable. In this simple model, a straight line approximates the relationship between the dependent variable and the independent variable.","0f25ecad":"### No missing values\nAs we can see, that the missing values in the dataset are now gone, we can actually begin with our Exploratory data analysis. EDA is the process of figuring out what the data can tell us and we use EDA to find patterns, relationships, or anomalies to inform our subsequent analysis."}}