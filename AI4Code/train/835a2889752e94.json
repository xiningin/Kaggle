{"cell_type":{"52e849cc":"code","4a9b1fff":"code","d841f90c":"code","300e5f90":"code","8b43c5d6":"code","9271ae5c":"code","571b48d5":"code","ac217abf":"code","83efa6ba":"code","2029eb7d":"code","691bbdf8":"code","e72c2213":"code","1a822613":"code","fd4a276e":"code","4e47dec8":"markdown"},"source":{"52e849cc":"import pandas as pd\nimport numpy as np\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import OneHotEncoder\n\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import RandomForestRegressor\n\nfrom sklearn.metrics import roc_auc_score\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","4a9b1fff":"# 1. \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\n\nX_train =pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/X_train.csv')\nX_test = pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/X_test.csv')\ny_train = pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/y_train.csv')","d841f90c":"# 2. EDA\nX_train","300e5f90":"# 3. noise \ub370\uc774\ud130 \uc81c\uac70\n\nprint('Train')    \nfor col in X_train.select_dtypes(include=object):\n    target = X_train[col]\n    print('--------------')\n    print(col)\n    print(target.value_counts())\n\nprint('\\n\\n\\nTest')    \nfor col in X_test.select_dtypes(include=object):\n    target = X_test[col]\n    print('--------------')\n    print(col)\n    print(target.value_counts())    ","8b43c5d6":"X_train['Gender'] = X_train['Gender'].replace({' male' : 'Male', 'female' : 'Female'})\nprint(X_train['Gender'].value_counts())\n\nX_test['Gender'] = X_test['Gender'].replace({' male' : 'Male', 'female' : 'Female'})\nprint(X_test['Gender'].value_counts())","9271ae5c":"# 4. \uacb0\uce21\uac12 \ud655\uc778\n\nprint(X_train.isnull().sum())\nprint(X_test.isnull().sum())","571b48d5":"# 5. \ud544\uc694 \uc5c6\ub294 \uceec\ub7fc drop\n\nX_train = X_train.drop(['CustomerId', 'Surname'], axis=1)\n\nX_test_Id = X_test['CustomerId']\nX_test = X_test.drop(['CustomerId', 'Surname'], axis=1)\n\ny_train = y_train[['Exited']]","ac217abf":"# 6. \uc218\uce58\ud615 \ubcc0\uc218 Scaler \uc801\uc6a9\n\nss = StandardScaler()\nX_train['Balance'] = ss.fit_transform(X_train[['Balance']])\nX_train['EstimatedSalary'] = ss.fit_transform(X_train[['EstimatedSalary']])\n\nX_test['Balance'] = ss.fit_transform(X_test[['Balance']])\nX_test['EstimatedSalary'] = ss.transform(X_test[['EstimatedSalary']])","83efa6ba":"# 7. \ubc94\uc8fc\ud615 \ubcc0\uc218 Encoder \uc801\uc6a9\n\nX_train = pd.get_dummies(X_train)\nX_test = pd.get_dummies(X_test)","2029eb7d":"# 8. train_test_split \uc9c4\ud589\n\nX_train_model, X_train_val, y_train_model, y_train_val = train_test_split(X_train, y_train, test_size=0.3, random_state=42)","691bbdf8":"# 9. \uac80\uc99d\uc6a9 \ubaa8\ub378 \uc0dd\uc131 \ubc0f \uc608\uce21 \ud6c4 \uc810\uc218 \uce21\uc815\n\nrf = RandomForestClassifier(random_state=42)\nrf.fit(X_train_model, y_train_model)\npred_val = rf.predict_proba(X_train_val)[:,1]\nprint(roc_auc_score(y_train_val, pred_val))","e72c2213":"#10. \uc81c\ucd9c\uc6a9 \ubaa8\ub378 \uc0dd\uc131 \ubc0f \uc608\uce21\uac12 \uc0dd\uc131\nrf.fit(X_train, y_train)\npred_sub = rf.predict_proba(X_test)[:,1]","1a822613":"submission = pd.DataFrame({'CustomerId' : X_test_Id, 'Exited' : pred_sub})\nsubmission.to_csv('00000000.csv', index=False)","fd4a276e":"def check_test_label(submission):\n    testlabel = pd.read_csv('\/kaggle\/input\/churn-model-data-set-competition-form\/test_label\/y_test.csv')\n    Truelabel = testlabel['Exited']\n    guessLabel = submission['Exited']\n    \n    print('Test AUC score : ',roc_auc_score(Truelabel,guessLabel))\n\ncheck_test_label(submission)","4e47dec8":"\ub370\uc774\ud130\ubd84\uc11d \ub178\ubca0\uc774\uc2a4 \ubb38\uacfc \ucd9c\uc2e0 \uc9c1\uc7a5\uc778\uc758 \uc218\uc900 \ub0ae\uc740 \ucf54\ub4dc\uc785\ub2c8\ub2e4.\n\n\uc2dc\ud5d8\uc7a5\uac00\uc11c csv \ud30c\uc77c \uc81c\ucd9c\ub9cc\uc774\ub77c\ub3c4 \uc81c\ub300\ub85c \ud558\uace0 \uc624\uae38 \ubc14\ub77c\ub294 \uc0ac\ub78c\uc758 \ucf54\ub4dc\uc774\ub2c8,\n\n\uadf8\ub0e5 \uc774\ub807\uac8c \uac04\ub2e8\ud558\uac8c \ucf54\ub529\ud558\ub294 \uc0ac\ub78c\ub3c4 \uc788\uad6c\ub098 \uc815\ub3c4\ub85c\ub9cc \ubd10\uc8fc\uc2dc\uba74 \uac10\uc0ac\ud558\uaca0\uc2b5\ub2c8\ub2e4 :)"}}