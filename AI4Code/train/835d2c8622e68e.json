{"cell_type":{"e7a17d67":"code","0583d339":"code","395dc6fc":"code","5e872fbb":"code","e92f78ca":"code","17da3e7b":"code","726b26df":"code","a82103ff":"code","17a7ab47":"code","186a13bb":"code","853d39dc":"code","29ce985a":"code","a4c851c2":"code","68ce963c":"code","80dedca9":"code","a77624c0":"code","3db2aea3":"code","d053c9f6":"code","b237da10":"code","9c2f7c90":"code","715a11ab":"code","dddfacd5":"code","dfb3769d":"code","65d596cc":"code","f680d053":"code","d86e9bed":"markdown","502ab525":"markdown","3389f1d7":"markdown","2927517d":"markdown"},"source":{"e7a17d67":"import os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nimport math\nimport seaborn as sns\nsns.set(style=\"white\")\nplt.style.use(\"ggplot\")\n%matplotlib inline\n\nimport time\nt0 = time.time()\n","0583d339":"os.listdir(\"..\/input\/\")","395dc6fc":"os.listdir(\"..\/input\/\")\nloc = \"..\/input\/\"","5e872fbb":"df_orig = pd.read_csv(loc+\"WA_Fn-UseC_-Telco-Customer-Churn.csv\")\ndf = df_orig.copy()","e92f78ca":"pd.Series(df_orig.columns)","17da3e7b":"df_orig.head()","726b26df":"print(\"Customer ID is the primary key\") if df.customerID.shape[0]==df.customerID.nunique() else print(\"Oops\")","a82103ff":"# Changing Total Charges to Numeric Datatype\ndf['TotalCharges'] = pd.to_numeric(df[\"TotalCharges\"], errors='coerce')\n\n# There are still eleven values that are null\nprint(df.isna().sum())","17a7ab47":"# Decoding all columns to numeric datatype\nlb = LabelEncoder()\nfor column in df.select_dtypes(object).columns:\n    df[column] = lb.fit_transform(df[column])","186a13bb":"# Histograms\ncolumns_to_view = df[['PaperlessBilling','tenure','TotalCharges','MonthlyCharges']].columns\ndf[columns_to_view].hist(figsize = (10,10));","853d39dc":"# Histograms\nfor column in df_orig.select_dtypes(object).columns.drop(['Churn','customerID']):\n    df_orig.groupby(column).count()['customerID'].plot.pie(figsize = (5,5))\n    print('Distribution Pie Chart of ',column)\n    plt.show()","29ce985a":"# This plot shows that if there is a partner, then the number of dependents increase drastically\ndf.groupby('Partner').sum()['Dependents'].plot(kind = 'bar')\nplt.ylabel(\"Number of Dependents\")\nplt.show()","a4c851c2":"# Those who do not have internet service only have DSL internet connection\ndf_orig.groupby(['PhoneService','InternetService'])['InternetService'].count().unstack().plot(kind = 'bar')\nplt.show()","68ce963c":"# Correlation Matrix\ncorr = df.corr()\n\nsns.set(style=\"white\")\n\n# Generate a mask for the upper triangle\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(11, 9))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5});\n","80dedca9":"# No Phone Service has a very low churn\ndf_orig.groupby('MultipleLines')['Churn'].count().plot(kind = 'bar')","a77624c0":"# Citizens paying through Electronic Check have a good churn\ndf_orig.groupby('PaymentMethod')['Churn'].count().plot(kind = 'bar')","3db2aea3":"# People who pay more tend to stay with the company\ndf_orig.groupby('Churn')['MonthlyCharges'].mean().plot(kind = 'bar')\n# Senior Citizens have a very low churn\n","d053c9f6":"print(\"time since start = \",time.time()-t0)","b237da10":"# ANOVA test to analyze diversity of feature\nfrom scipy import stats","9c2f7c90":"df_orig.select_dtypes(object).columns.drop('customerID')","715a11ab":"# Calculating the impact of each variable on Churn by ANOVA tests\n\nresults = list()\nfor col_name in df_orig.select_dtypes(object).columns.drop(['customerID','TotalCharges','Churn']):\n    all_grps = list()\n    for grp in df.groupby(col_name)['Churn']:\n        all_grps.append(grp[1].tolist())\n    f_val, p_val = stats.f_oneway(*all_grps)\n    results.append([col_name,f_val,p_val])\nresults = pd.DataFrame(results,columns = ['col_name','f_val','p_val'])\nprint(results)","dddfacd5":"# Plotting Results of P Values\nresults[['col_name','p_val']].sort_values('p_val', ascending = False).plot(kind = 'bar', x = 'col_name')\nplt.title(\"P Value of Grouped Variables\")\nplt.legend()\nplt.show()\n\n# Plotting Results of F Values\nresults[['col_name','f_val']].sort_values('f_val', ascending = False).plot(kind = 'bar', x = 'col_name')\nplt.title(\"F Value of Grouped Variables\")\nplt.legend()\nplt.show()\n# I think that the gender has little impact on Churn alone, we need to dive deeper into gender and drop itself after creating new features\n# I think that the PhoneService has little impact on Churn alone, we need to dive deeper into gender and drop itself after creating new features\n# From the greater F values,we can conclude that Contract has highest correlation with the churn","dfb3769d":"# Defining KPIs\ndf['family'] = df.Partner | df.Dependents","65d596cc":"results","f680d053":"# Analyzing the F value of recently added KPI\nall_grps = list()\nfor grp in df.groupby('family')['Churn']:\n    all_grps.append(grp[1].tolist())\nf_val, p_val = stats.f_oneway(*all_grps)\nprint('f_val=',f_val,' p_val=',p_val)\n\n# F value is not greater than individual F value\n# I am not sure how to interpret the usefulness of this stat","d86e9bed":"# Descriptive Statistics","502ab525":"# Data Cleaning","3389f1d7":"# Inferential Statistics","2927517d":"Finding Correlation Matrix to assist us in choosing the columns"}}