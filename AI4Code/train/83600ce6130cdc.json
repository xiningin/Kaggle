{"cell_type":{"87917ca8":"code","c5152810":"code","fb8663fe":"code","3fe8e9a0":"code","a249cadc":"code","79060257":"code","648cc83c":"code","453e3891":"code","bfb4eb6b":"code","46c7739c":"code","1cb26c43":"code","ba21cb22":"code","0194f116":"code","c1af3d84":"code","6cb4a478":"code","ca201299":"code","3230deba":"code","9e07ce00":"code","8b06f06c":"markdown","94ce23dc":"markdown","6374b3f5":"markdown","c1bb26bf":"markdown","b84d0c22":"markdown","bfc6b3d7":"markdown","ac32fb1a":"markdown","b6682d30":"markdown","4207faa1":"markdown","47bc4cbb":"markdown","6444bcad":"markdown"},"source":{"87917ca8":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sn","c5152810":"ESR = pd.read_csv('..\/input\/Epileptic Seizure Recognition.csv')\nESR.head()","fb8663fe":"ESR.head()","3fe8e9a0":"ESR.head()","a249cadc":"cols = ESR.columns\ntgt = ESR.y\ntgt.unique()\ntgt[tgt>1]=0\nax = sn.countplot(tgt,label=\"Count\")\nnon_seizure, seizure = tgt.value_counts()\nprint('The number of trials for the non-seizure class is:', non_seizure)\nprint('The number of trials for the seizure class is:', seizure)\n","79060257":"ESR.isnull().sum()","648cc83c":"ESR.info()","453e3891":"ESR.describe()","bfb4eb6b":"X = ESR.iloc[:,1:179].values\nX.shape","46c7739c":"plt.subplot(511)\nplt.plot(X[1,:])\nplt.title('Classes')\nplt.ylabel('uV')\nplt.subplot(512)\nplt.plot(X[7,:])\nplt.subplot(513)\nplt.plot(X[12,:])\nplt.subplot(514)\nplt.plot(X[0,:])\nplt.subplot(515)\nplt.plot(X[2,:])\nplt.xlabel('Samples')","1cb26c43":"y = ESR.iloc[:,179].values\ny","ba21cb22":"y[y>1]=0\ny","0194f116":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(X)\nx = scaler.transform(X)\nfrom keras.utils import to_categorical\ny = to_categorical(y)\ny","c1af3d84":"from sklearn.model_selection import train_test_split, cross_val_score\nx_train, x_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)","6cb4a478":"x_train = np.reshape(x_train, (x_train.shape[0],1,X.shape[1]))\nx_test = np.reshape(x_test, (x_test.shape[0],1,X.shape[1]))","ca201299":"import tensorflow as tf\nfrom tensorflow.keras import Sequential\n\nfrom tensorflow.keras.layers import Dense, Dropout\nfrom tensorflow.keras.layers import Embedding\nfrom tensorflow.keras.layers import LSTM\ntf.keras.backend.clear_session()\n\nmodel = Sequential()\nmodel.add(LSTM(64, input_shape=(1,178),activation=\"relu\",return_sequences=True))\nmodel.add(Dropout(0.2))\nmodel.add(LSTM(32,activation=\"sigmoid\"))\nmodel.add(Dropout(0.5))\n#model.add(LSTM(100,return_sequences=True))\n#model.add(Dropout(0.2))\n#model.add(LSTM(50))\n#model.add(Dropout(0.2))\nmodel.add(Dense(2, activation='sigmoid'))\nfrom keras.optimizers import SGD\nmodel.compile(loss = 'categorical_crossentropy', optimizer = \"adam\", metrics = ['accuracy'])\nmodel.summary()","3230deba":"history = model.fit(x_train, y_train, epochs = 100, validation_data= (x_test, y_test))\nscore, acc = model.evaluate(x_test, y_test)\n","9e07ce00":"from sklearn.metrics import accuracy_score\npred = model.predict(x_test)\npredict_classes = np.argmax(pred,axis=1)\nexpected_classes = np.argmax(y_test,axis=1)\nprint(expected_classes.shape)\nprint(predict_classes.shape)\ncorrect = accuracy_score(expected_classes,predict_classes)\nprint(f\"Training Accuracy: {correct}\")","8b06f06c":"# &#128205; 1. Checking Missing Data[](http:\/\/)","94ce23dc":"# &#128295; Building Machine Learning Models","6374b3f5":"# Load the Dataset","c1bb26bf":"As we can see, there are 178 EEG features and 5 possible classes. The main goal of the dataset it's to be able to correctly identify epileptic seizures from EEG data, so a binary classification between classes of label 1 and the rest (2,3,4,5). In order to train our model, let's define our independent variables (X) and our dependent variable (y).","b84d0c22":"# Read and Show Dataset\n* The original dataset from the reference consists of 5 different folders, each with 100 files, with each file representing a single subject\/person. Each file is a recording of brain activity for 23.6 seconds.\n\n* The corresponding time-series is sampled into 4097 data points. Each data point is the value of the EEG recording at a different point in time. So we have total 500 individuals with each has 4097 data points for 23.5 seconds.\n\n* We divided and shuffled every 4097 data points into 23 chunks, each chunk contains 178 data points for 1 second, and each data point is the value of the EEG recording at a different point in time.\n\n* So now we have 23 x 500 = 11500 pieces of information(row), each information contains 178 data points for 1 second(column), the last column represents the label y {1,2,3,4,5}.\n\n* The response variable is y in column 179, the Explanatory variables X1, X2, ..., X178","bfc6b3d7":"##  Splitting the Dataset into the Training set and Test set\n","ac32fb1a":"**Link to the dataset:**:[https:\/\/www.kaggle.com\/harunshimanto\/epileptic-seizure-recognition](https:\/\/www.kaggle.com\/harunshimanto\/epileptic-seizure-recognition)","b6682d30":"## Feature Scaling","4207faa1":"# &#128205; Data Pre-processing\n\n## What is Data Pre-pocessing?\nData preprocessing is a data mining technique that involves transforming raw data into an understandable format. Real-world data is often incomplete, inconsistent, and\/or lacking in certain behaviors or trends, and is likely to contain many errors. Data preprocessing is a proven method of resolving such issues. Data preprocessing prepares raw data for further processing.\n> ","47bc4cbb":"# Importing the libraries","6444bcad":"To make this a binary problem, let's turn the non-seizure classes 0 while maintaining the seizure as 1."}}