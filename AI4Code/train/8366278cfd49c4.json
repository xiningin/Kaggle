{"cell_type":{"a9e52792":"code","c67901eb":"code","1fe774f7":"code","aacb2477":"code","73a3ac58":"code","4dab4749":"code","c539f16e":"code","facd9d01":"code","5470f8b9":"code","d0cbd2f2":"code","7e5c7576":"code","81709fa9":"code","fd70d47a":"code","497d7b47":"markdown","7f3b2fff":"markdown","8b72dafc":"markdown","f0ca5ecf":"markdown","ec302433":"markdown","d9fe4686":"markdown","9b4af0c9":"markdown"},"source":{"a9e52792":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c67901eb":"# read csv file\ndf = pd.read_csv('\/kaggle\/input\/heart-disease-uci\/heart.csv')\n# show top 5 files\ndf.head()","1fe774f7":"# show colums's name of dataframe\ndf.columns","aacb2477":"# this method shows colums type int, float or boolean etc. \ndf.info()","73a3ac58":"# Correlation map \n# 2 \u00f6zellik aras\u0131ndaki ili\u015fliyi g\u00f6sterir \ndf.corr().head()","4dab4749":"f,ax = plt.subplots(figsize=(14,14))\nsns.heatmap(df.corr(), annot=True, linewidths=.5, fmt='.1f', ax=ax)","c539f16e":"# grafi\u011fin boyutunu ayarlama\nplt.figure(figsize=(10,6))\n\n# Grafikte g\u00f6r\u00fclecek datalar\ndf.trestbps.plot(kind= 'line', color='purple', label='Trestbps', alpha=.5, linestyle='-')\ndf.chol.plot(kind='line', color='b', label='Chol', linestyle=':')\n\nplt.legend(loc='upper right')\nplt.xlabel('x axis') #ki\u015fi say\u0131s\u0131n\u0131 g\u00f6steriyor diye d\u00fc\u015f\u00fcn\u00fcyorum\nplt.ylabel('y axis')\nplt.title('Trestbps - Chol Line Plot')\nplt.show()","facd9d01":"f = plt.figure(figsize=(12,6))\n\n#grafik koordinatlar\u0131n\u0131 belirleme\nax1 = f.add_axes([0.1, 0.1, 0.9, 0.9])\nax2 = f.add_axes([0.6, 0.68,0.3,0.3])\n\n#verileri grafi\u011fe ekleme\nax1.plot(df.chol, color='pink')\nax2.plot(df.age, color='purple')\n\n# X ekseni ba\u015f\u0131klar\nax1.set_xlabel('Chol')\nax2.set_xlabel('# of person')\n\n# y ekseni ba\u015fl\u0131klar\nax1.set_ylabel('Chol')\nax2.set_ylabel('Age')","5470f8b9":"df.plot(kind='scatter', x='trestbps', y='thalach', color='orange', alpha='0.4')\nplt.xlabel('trestbps')\nplt.ylabel('thalach')\nplt.title('trestbps - thalach')","d0cbd2f2":"df.age.plot(kind='hist', color='orange', bins=35, figsize=(7,5), grid=True)\nplt.show()\n\n# bu grafikte ki\u015filerin en \u00e7ok 58-59 ya\u015flar\u0131nda olduklar\u0131 verisine var\u0131labilinir.","7e5c7576":"dataframe = df['age']>60\ndf[dataframe].head()","81709fa9":"# Ya\u015f\u0131 40'dan k\u00fc\u00e7\u00fck, trestbps'i 120 olan ki\u015filer\ndataframe = df[ (df['age']<40) & (df['trestbps']==120) ]\ndataframe","fd70d47a":"# dictionary'de for loop\ndataframe = df['age']\ncount1=0\ncount2=0\ncount3=0\ncount4=0\n\nfor key, value in dataframe.items():\n    if value<30:\n        count1+=1\n    elif value>=30 and value<40:\n        count2+=1\n    elif value>=40 and value<50:\n        count3+=1\n    else:\n        count4+=1\n        \nprint(count1,' ki\u015fi 30dan k\u00fc\u00e7\u00fckt\u00fcr')\nprint('')\nprint(count2,' ki\u015fi 30 ile 40 ya\u015f aras\u0131ndad\u0131r')\nprint('')\nprint(count3,' ki\u015fi 40 ile 50 ya\u015f aras\u0131ndad\u0131r')\nprint('')\nprint(count3,' ki\u015finin ya\u015f\u0131 50den b\u00fcy\u00fckt\u00fcr')","497d7b47":"> Histogram Plot\n\nDistribution i\u00e7in kullan\u0131l\u0131r","7f3b2fff":"## Matplotlib","8b72dafc":"### Introduction\n\nThis data set was created to calculate the probability of the patient having a heart condition. Patients are graded by numbering 0-4. (No 0, 4 high). \n\n*Bu veri seti hastan\u0131n kalp rahats\u0131zl\u0131\u011f\u0131 olma ihtimalini hesaplamak i\u00e7in olu\u015fturulmu\u015ftur. 0-4 aras\u0131 numaraland\u0131rma ile hastalar derecelendirilir. (0 yok, 4 y\u00fcksek) *\n\n**Attributes**\n> sex (1 = male; 0 = female)\n\n\n","f0ca5ecf":"> Scatter Plot\n\n2 \u00f6zellik aras\u0131ndaki correlation\u0131 g\u00f6rmek i\u00e7in kullan\u0131l\u0131r","ec302433":"### Subplot","d9fe4686":"> 1. Line Plot","9b4af0c9":"*Bu tabloya g\u00f6re;*\n\nPozitif correlationlar(high to low) \/ Artt\u0131k\u00e7a artan do\u011fru orant\u0131\n1. Age - Target (0.4)\n2. Age - Trestbps (0.3)\n3. Age - Ca (0.3)\n\nNegatif Correlationlar (h to l) \/ Artt\u0131k\u00e7a azalan ters orant\u0131\n1. Oldpeak - Slope ( -0.6)\n2. Age - Thalach ( -0.4)\n3. Cp - Exang ( - 0.4)\n4. Thalach - Exang ( - 0.4)\n5. Exang - Target ( -0.4)\n6. Oldpeak - Target ( -0.4)\n7. Ca - Target ( -0.4)\n"}}