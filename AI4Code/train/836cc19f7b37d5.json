{"cell_type":{"6cf1d70a":"code","f4593971":"code","0797dfe2":"code","c69509c7":"code","a0a0780b":"code","55c47fb9":"code","02d63251":"code","69613eb7":"code","eda8f831":"code","d8338e2a":"code","702ca944":"code","e3848533":"code","f5aab915":"code","29da54a2":"code","c46eaba5":"code","196ec297":"code","da123ab6":"code","cb7e2ac1":"code","e674b551":"code","b4e002eb":"markdown","d235ee2b":"markdown","24fd4b07":"markdown","05864286":"markdown","1d91da89":"markdown","629f9b60":"markdown","4e520032":"markdown","53670c6c":"markdown","55f9a54c":"markdown","e95e1344":"markdown","b51c5eac":"markdown","8d28a364":"markdown","5c8f3673":"markdown","1111960a":"markdown"},"source":{"6cf1d70a":"pip install pandas-alive","f4593971":"pip install bar_chart_race","0797dfe2":"import numpy as np\nimport pandas as pd\nimport pandas_alive\n\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\nimport seaborn as sns\nimport plotly.express as px\n%matplotlib notebook\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c69509c7":"df = pd.read_csv(\"..\/input\/countries-life-expectancy\/Life expectancy.csv\")","a0a0780b":"import pandas_profiling\nreport = pandas_profiling.ProfileReport(df)\nfrom IPython.display import display\ndisplay(report)","55c47fb9":"df = pd.read_csv(\"..\/input\/countries-life-expectancy\/Life expectancy.csv\")\ndf.head()","02d63251":"fig = px.bar(df, x=\"Entity\", y=\"Life expectancy\", color=\"Entity\",\n  animation_frame=\"Year\", animation_group=\"Entity\", range_y=[0,210])\nfig.show()","69613eb7":"fig = px.bar(df, x=\"Entity\", y=\"Life expectancy\", color=\"Entity\",\n  animation_frame=\"Year\", animation_group=\"Entity\")\nfig.show()","eda8f831":"dfw = pd.read_csv(\"..\/input\/countries-life-expectancy\/Life expectancy.csv\",index_col=0,parse_dates=[0],thousands=',')\n\ndfw.fillna(0).plot_animated(period_fmt=\"%Y\",title='Countries Life Expectancy 1800-2017')","d8338e2a":"px.scatter(df, x=\"Year\", y=\"Life expectancy\", animation_frame=\"Year\", animation_group=\"Entity\",\n           size=\"Life expectancy\", color=\"Entity\", hover_name=\"Entity\",\n           log_x=True, size_max=55, range_x=[1800,2017], range_y=[1,110])","702ca944":"df = pd.read_csv('..\/input\/countries-life-expectancy\/Life expectancy.csv',parse_dates=['Year'])\n\n# Only years from 1800 onwards\ndf = df[df['Year'].astype(int) >= 1800]\n\n# Convert Year column to datetime\ndf['Year'] = pd.to_datetime(df['Year'])\n\ndisplay(df)","e3848533":"# Pivot data to turn from `long` to `wide` format\npivoted_df = df.pivot(index='Year',columns='Entity',values='Life expectancy').fillna(0)\n\ndisplay(pivoted_df.head(5))","f5aab915":"pivoted_df.plot_animated(filename='population-over-time-bar-chart-race.gif',n_visible=10,period_fmt=\"%Y\",title='Top 10 Life Expectancy Countries 1800-2016',fixed_max=True)","29da54a2":"pivoted_df.plot_animated(filename='example-pie-chart.gif',kind=\"pie\",rotatelabels=True,period_label={'x':0,'y':0})","c46eaba5":"total_df = pivoted_df.sum(axis=1)\n\ndisplay(total_df)","196ec297":"pivoted_df.diff().fillna(0).plot_animated(filename='different-countries-line-chart.gif',kind='line',period_label={'x':0.25,'y':0.9})","da123ab6":"total_df.plot_animated(kind='line',filename=\"total-population-over-time-line.gif\",period_fmt=\"%Y\",title=\"Total Population Over Time\")","cb7e2ac1":"import matplotlib.pyplot as plt\n\nwith plt.xkcd():\n    animated_line_chart = total_df.plot_animated(filename='xkcd-line-plot.gif',kind='line',period_label=False,title=\"Total Population Over Time\")","e674b551":"bar_chart_race = pivoted_df.plot_animated(n_visible=10,period_fmt=\"%Y\",title='Top 10 Populous Countries 1800-2016')\nanimated_line_chart = total_df.plot_animated(kind='line',period_label=False,title=\"Total Population Over Time\")\n\npandas_alive.animate_multiple_plots('population-combined-charts.gif',[bar_chart_race,animated_line_chart])","b4e002eb":"**Pie Chart**","d235ee2b":"2 different ways to do a bar graph","24fd4b07":"![image.png](attachment:844f1af6-5579-4cbd-85fb-d657d88b308b.png)\n\nAnimation is very fun and very cool to do to analyzing for your data!","05864286":"# If you like this notebook, please give an Upvote! Don't forget to check out my other notebooks too!\n\n* [ConnectX Baseline](https:\/\/www.kaggle.com\/brendan45774\/connectx-baseline)\n* [Countries Life Expectancy Animation](https:\/\/www.kaggle.com\/brendan45774\/countries-life-expectancy-animation)\n* [Data Visuals - Matplotlib](http:\/\/www.kaggle.com\/brendan45774\/data-visuals-matplotlib)\n* [Digit Recognizer Solution](http:\/\/www.kaggle.com\/brendan45774\/digit-recognizer-solution)\n* [Dictionary and Pandas Cheat sheet](https:\/\/www.kaggle.com\/brendan45774\/dictionary-and-pandas-cheat-sheet)\n* [EDA Tutorial Hollywood Movies](https:\/\/www.kaggle.com\/brendan45774\/eda-tutorial-hollywood-movies)\n* [Getting started with Matplotlib](http:\/\/www.kaggle.com\/brendan45774\/getting-started-with-matplotlib)\n* [Guide to Matplotlib Image](https:\/\/www.kaggle.com\/brendan45774\/guide-to-matplotlib-image)\n* [HOG features - Histogram of Oriented Gradients](https:\/\/www.kaggle.com\/brendan45774\/hog-features-histogram-of-oriented-gradients)\n* [How to get the lowest score](https:\/\/www.kaggle.com\/brendan45774\/how-to-get-the-lowest-score)\n* [House predict solution](http:\/\/www.kaggle.com\/brendan45774\/house-predict-solution)\n* [K-Means Clustering (Image Compression)](https:\/\/www.kaggle.com\/brendan45774\/k-means-clustering-image-compression)\n* [Kuzushiji-MNIST Panda](http:\/\/www.kaggle.com\/brendan45774\/kuzushiji-mnist-panda)\n* [Plotly Coronavirus (Covid-19)](https:\/\/www.kaggle.com\/brendan45774\/plotly-coronavirus-covid-19)\n* [Titanic Top Solution](http:\/\/www.kaggle.com\/brendan45774\/titanic-top-solution)\n* [Titanic Data Solution](http:\/\/www.kaggle.com\/brendan45774\/titanic-data-solution)\n* [Word Cloud - Analyzing Names](https:\/\/www.kaggle.com\/brendan45774\/word-cloud-analyzing-names)","1d91da89":"# Bar Graph Race","629f9b60":"# Installing Environment","4e520032":"Thank you [Naman Manchanda](https:\/\/www.kaggle.com\/namanmanchanda) for helping me. Be sure to check out some of his notebooks! Don't forget to check out [Countries Life Expectancy](https:\/\/www.kaggle.com\/brendan45774\/countries-life-expectancy) df and give it an upvote!","53670c6c":"**Animated Line Chart!**","55f9a54c":"**Combined Animation Chart!**","e95e1344":"# Importing Libraries","b51c5eac":"# Creating Animated Plots with Pandas_Alive (Look at the output part to see the charts!)","8d28a364":"# Scatter Plot Timeline","5c8f3673":"* n_visible - Change the number of visible bars on the plot\n* period_fmt - Change the way the date is represented on the plot (eg, '%d\/%m\/%Y')\n* title - Set a title for the plot\n* fixed_max - Set the x-axis to be fixed from the lowest - biggest number","1111960a":"**Bar Race Chart!**"}}