{"cell_type":{"bf57cbc4":"code","081d4c24":"code","71832a60":"code","66202b99":"code","ae8c50c6":"code","4789a2a2":"code","fbf96c30":"code","429df796":"code","ee00a532":"code","9c63ea48":"code","e1193751":"code","4b79a0ec":"code","0fe159ae":"code","c185def8":"code","54195e5a":"code","3b28ea74":"code","f1eb2ff5":"code","346991a8":"code","01a125e2":"code","06023b85":"code","4a4d9b62":"code","6ef8f1e8":"code","f34e6b97":"code","5dc42899":"code","db8034c4":"code","3bc70436":"code","b44805c8":"markdown","74f60146":"markdown","c0f8eb1f":"markdown","7db42a36":"markdown","291959d9":"markdown","2c71bd9c":"markdown","0ae4fa39":"markdown","b58c5b2d":"markdown","0aa07b62":"markdown","ae1746bd":"markdown","2dafe8cb":"markdown","2728e1c8":"markdown","1d0e7447":"markdown"},"source":{"bf57cbc4":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","081d4c24":"data=pd.read_csv('..\/input\/digit-recognizer\/train.csv')","71832a60":"data.head()","66202b99":"two=data.iloc[2,1:]\ntwo.shape","ae8c50c6":"two = two.values.reshape(28, 28)\nplt.imshow(two, cmap='gray')","4789a2a2":"data.shape","fbf96c30":"data.info()","429df796":"data.describe()","ee00a532":"data.isnull().sum()","9c63ea48":"data['label'].sort_values().unique()","e1193751":"data['label'].value_counts()","4b79a0ec":"sns.countplot(data['label'])","0fe159ae":"X=data.drop(columns=['label'])\ny=data['label']","c185def8":"from sklearn.model_selection import train_test_split","54195e5a":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.33,random_state=0)","3b28ea74":"from sklearn.linear_model import SGDClassifier","f1eb2ff5":"sgd=SGDClassifier(max_iter=100,eta0=0.1,tol=0.001,penalty='None')","346991a8":"model=sgd.fit(X_train,y_train)","01a125e2":"pred=model.predict(X_test)","06023b85":"from sklearn.metrics import classification_report,confusion_matrix","4a4d9b62":"print(confusion_matrix(y_test,pred))\nprint(classification_report(y_test,pred))","6ef8f1e8":"from sklearn import svm","f34e6b97":"svm=svm.SVC()","5dc42899":"model_1=svm.fit(X_train,y_train)","db8034c4":"pred_1=model_1.predict(X_test)","3bc70436":"print(classification_report(y_test,pred_1))","b44805c8":"**Using SVM**","74f60146":"Let us visualize and see the digit ....","c0f8eb1f":"Let us try to gather some information about the data....","7db42a36":"We could see that our model has performed well with 88% accuracy....","291959d9":"We could see that our data has 0-9 unique digits.","2c71bd9c":"**MNIST Digit Classification**\n\n","0ae4fa39":"Let us start training our model!!!","b58c5b2d":"The dataset consists of MNIST handwritten digits from which we have to predict them correctly....\n\nIn this we are going to use SGD and SVM to predict the datasets and anlayse \nwhich model performs well..","0aa07b62":"We could see that our model has predicted better than SGD with the accuracy of 97%..","ae1746bd":"<a href=\"https:\/\/colab.research.google.com\/github\/Suchitra-V31\/Machine-learning-projects\/blob\/main\/MNIST_Digit_Classification.ipynb\" target=\"_parent\"><img src=\"https:\/\/colab.research.google.com\/assets\/colab-badge.svg\" alt=\"Open In Colab\"\/><\/a>","2dafe8cb":"**Using SGD**","2728e1c8":"Split the data into dependent and independent features.","1d0e7447":"Let us also try using Support Vector Machine."}}