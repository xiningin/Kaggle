{"cell_type":{"e64caa03":"code","7230d7d3":"code","bdf4b7dd":"code","57183fbf":"code","18504f5f":"code","35174cba":"code","c38f82f8":"code","9d7cdfb0":"markdown"},"source":{"e64caa03":"import glob\nimport matplotlib.pyplot as plt\nimport rasterio\nimport numpy as np\nfrom PIL import Image, ImageDraw\nimport json","7230d7d3":"for i in glob.glob('\/kaggle\/input\/hubmap-kidney-segmentation\/train\/*.tiff'):\n    print(i)","bdf4b7dd":"identity = rasterio.Affine(1, 0, 0, 0, 1, 0)\npath = '\/kaggle\/input\/hubmap-kidney-segmentation\/train\/'\nfilename = '095bf7a1f'\nimage = rasterio.open(path + filename + '.tiff', transform = identity)\nwith open(path + filename + '.json') as file:\n    label = json.load(file) ","57183fbf":"def get_image(img, offset):\n    \n    i = offset[1] * IMG_SIZE\n    j = offset[0] * IMG_SIZE\n    image = img.read([1,2,3], window=((i, i + IMG_SIZE),(j, j + IMG_SIZE)))\n    \n    return np.moveaxis(image, 0, -1)\n\ndef transform(x):\n    \n    x[0] -= offset[0] * IMG_SIZE\n    x[1] -= offset[1] * IMG_SIZE\n    \n    return tuple(x)\n\ndef get_label(polygon):\n    \n    geom = polygon['geometry']['coordinates'][0]\n    tup_arr = list(map(lambda x: transform(x), geom))\n    \n    return tup_arr\n\ndef get_overlay(image, label):\n    \n    img_copy = image.copy()\n    draw = ImageDraw.Draw(img_copy)\n    draw.polygon(label, fill = \"wheat\")\n    img_overlay = Image.blend(image, img_copy, 0.5)\n    \n    return img_overlay","18504f5f":"POLY_NUM = 15\nIMG_SIZE = 1024","35174cba":"geometry = label[POLY_NUM]['geometry']['coordinates'][0]\noffset = np.array(geometry).min(axis=0) \/\/ IMG_SIZE\nimage_slice = get_image(image, offset)\narr = get_label(label[POLY_NUM])\npil_img = Image.fromarray(image_slice)\nimg_with_label = get_overlay(pil_img, arr)","c38f82f8":"plt.figure(figsize=(20, 20))\n\nplt.subplot(121)\nplt.imshow(pil_img)\nplt.title('Original Image')\n\nplt.subplot(122)\nplt.imshow(img_with_label)\nplt.title('Image with segmentation');","9d7cdfb0":"Kaggle TPU [usage guide](https:\/\/www.kaggle.com\/docs\/tpu)"}}