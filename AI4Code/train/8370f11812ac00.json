{"cell_type":{"0f3e9454":"code","451ae006":"code","7e024d59":"code","2a2f3949":"code","a4da5b9e":"code","a96c5dd9":"code","1fa209a3":"code","2ee5dd69":"code","6c2a8c88":"code","b716089b":"code","69173bae":"code","c7fe94c3":"code","65f529ba":"code","b4ec4095":"code","40dcefaa":"code","47484f0e":"code","d8b8d616":"code","05a0ec18":"code","16431d06":"markdown","f9fd7e5c":"markdown","ea2f45c7":"markdown"},"source":{"0f3e9454":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport json","451ae006":"def preprocess3(name):\n    f = open(name, 'r')\n    data = json.load(f)\n    keys_1mult, keys_1user = 'multiplierData', 'userData'\n    multk = list(data[keys_1mult].keys())\n\n    arrmin = []\n    arrmax = []\n\n    for i in range(len(multk)):\n        arrmin.append(data[keys_1mult][multk[i]]['min'])\n        arrmax.append(data[keys_1mult][multk[i]]['max'])\n        \n    dataframe = pd.DataFrame({'date':name[-15:-5],'address_multiplier':multk,'min':arrmin ,'max':arrmax })\n    \n    \n    keys_2user = list(data[keys_1user].keys())\n    \n    \n    arr_mult=[]\n    arr_param=[]\n    arr_boost=[]\n    for i in range(len(keys_2user)):\n        arr_boost.append(data[keys_1user][keys_2user[i]]['boost'])\n        arr_mult.append(list(data[keys_1user][keys_2user[i]]['multipliers'])[0])\n        arr_param.append(list(data[keys_1user][keys_2user[i]]['multipliers'].values())[0])\n        \n    dataframe_full = pd.DataFrame({'address':keys_2user,'address_multiplier': arr_mult,'mult_param': arr_param ,'boost':arr_boost, 'date': name[-15:-5]})\n    \n\n    return dataframe, dataframe_full","7e024d59":"file_names = ['\/kaggle\/input\/badgerboosts\/boosts\/boosts-1623653650.json','\/kaggle\/input\/badgerboosts\/boosts\/boosts-1625444891.json',\n              '\/kaggle\/input\/badgerboosts\/boosts\/boosts-1621368282.json','\/kaggle\/input\/badgerboosts\/boosts\/boosts-1622862327.json',\n              '\/kaggle\/input\/badgerboosts\/boosts\/boosts-1624637488.json','\/kaggle\/input\/badgerboosts\/boosts\/boosts-1622306979.json'\n             ]","2a2f3949":"df_small, df = preprocess3(file_names[0])","a4da5b9e":"df","a96c5dd9":"df_small","1fa209a3":"for i in range(1, len(file_names)):\n    df2_small,df2 = preprocess3(file_names[i])\n    df = pd.concat((df, df2))\n    df_small = pd.concat((df_small, df2_small))","2ee5dd69":"def preprocess(name):\n    f = open(name, 'r')\n    data = json.load(f)\n    keys_1mult, keys_1user = 'multiplierData', 'userData'\n    multk = list(data[keys_1mult].keys())\n\n    arrmin = []\n    arrmax = []\n    #print(data[keys_1mult][multk[0]].keys())\n    for i in range(len(multk)):\n        arrmin.append(data[keys_1mult][multk[i]]['min'])\n        arrmax.append(data[keys_1mult][multk[i]]['max'])\n\n    dataframe = pd.DataFrame({'date':name[-15:-5],'address_multiplier':multk,'min':arrmin ,'max':arrmax})\n\n\n    keys_2user = list(data[keys_1user].keys())\n\n\n    arr_boost= []\n    arr_natbal= []\n    arr_nonatbal= []\n    arr_stake= []\n    arr_mult= []\n    \n    for i in range(len(keys_2user)):\n        arr_boost.append(data[keys_1user][keys_2user[i]]['boost'])\n        arr_natbal.append(data[keys_1user][keys_2user[i]]['nativeBalance'])\n        arr_nonatbal.append(data[keys_1user][keys_2user[i]]['nonNativeBalance'])\n        arr_stake.append(data[keys_1user][keys_2user[i]]['stakeRatio'])\n        if list(data[keys_1user][keys_2user[0]]['multipliers']):\n            arr_mult.append(list(data[keys_1user][keys_2user[0]]['multipliers'])[0])\n        else:\n            arr_mult.append(np.nan)\n\n    dataframe_full = pd.DataFrame({'date':name[-15:-5],'address':keys_2user,'address_multiplier': arr_mult,'stake': arr_stake ,'boost':arr_boost, 'nativeBalance': arr_natbal,'nonnatBal':arr_nonatbal})\n\n    return dataframe, dataframe_full","6c2a8c88":"import os\narray = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        array.append(os.path.join(dirname, filename))","b716089b":"len(filename)","69173bae":"len(array)","c7fe94c3":"arr=[]\nfor i in (array):\n    if i not in (file_names):\n        arr.append(i)","65f529ba":"len(array)","b4ec4095":"len(arr)","40dcefaa":"df2_small, df2 = preprocess(arr[0])","47484f0e":"for i in range(1, len(arr)):\n    df3_small, df3 = preprocess(arr[i])\n    df2_small = pd.concat((df2_small, df3_small))\n    df2 = pd.concat((df2, df3))","d8b8d616":"dataframe = pd.concat([df,df2]).sort_values('date')\ndataframe.date = pd.to_datetime(dataframe.date, unit='s', origin='unix')\ndataframe_small = pd.concat([df_small,df2_small]).sort_values('date')\ndataframe_small.date = pd.to_datetime(dataframe_small.date, unit='s', origin='unix')","05a0ec18":"dataframe.to_csv('larger_dataframe.csv',index=False)\ndataframe_small.to_csv('dataframe.csv',index=False)","16431d06":"------------","f9fd7e5c":"________\n","ea2f45c7":"________"}}