{"cell_type":{"a732a740":"code","7313d730":"code","617d350b":"code","1f210ba3":"code","ae0a9cad":"code","04fa5c7e":"code","b3efe264":"code","f1f3e977":"code","c562d54d":"code","17552288":"code","1332ab71":"code","cce45e7b":"code","43a9a402":"code","c4690ce8":"code","d94be4ff":"code","91902ef2":"code","4b550c0d":"code","cf125e86":"code","b4359825":"code","f1744f77":"code","a80fb4b6":"code","f9f98592":"code","7ac2b122":"code","3f976046":"code","f78b17fe":"code","d8ef9bb4":"code","05af67b3":"code","6b08894d":"markdown","9b6c7892":"markdown","e94b25c6":"markdown","71dbe70a":"markdown","9fc3ce58":"markdown","007cd32e":"markdown","964c510a":"markdown","f963c396":"markdown","46919895":"markdown","5ac2f482":"markdown","6af586f9":"markdown","a804ccc0":"markdown","1214d271":"markdown","146d4dfe":"markdown","97c89cda":"markdown","da7329fb":"markdown","ae1f551c":"markdown","6b7d20bc":"markdown","3bed4c49":"markdown","ca7f4517":"markdown","480a86ff":"markdown","241267f0":"markdown","8a8df4e8":"markdown","f3484484":"markdown","8aea601e":"markdown"},"source":{"a732a740":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns #for data visualization\nimport matplotlib.pyplot as plt  #for data visualization\n\nimport warnings            \nwarnings.filterwarnings(\"ignore\") \n\nfrom pandas.tools.plotting import parallel_coordinates\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","7313d730":"#load data from csv file\ndata_2015=pd.read_csv('..\/input\/2015.csv')\ndata_2016=pd.read_csv('..\/input\/2016.csv')\ndata_2017=pd.read_csv('..\/input\/2017.csv')\n#columns name change\ndata_2015.columns=[each.split()[0] if(len(each.split())>2) else each.replace(\" \",\"_\") for each in data_2015.columns]\ndata_2016.columns=[each.split()[0] if(len(each.split())>2) else each.replace(\" \",\"_\") for each in data_2016.columns]\ndata_2017.columns=[each.replace(\".\",\" \") for each in data_2017.columns]\ndata_2017.columns=[each.split()[0] if(len(each.split())>2) else each.replace(\" \",\"_\") for each in data_2017.columns]\n\n","617d350b":"data_2015.head()","1f210ba3":"#getting an overview of our data\ndata_2015.info()","ae0a9cad":"print(\"Are There Missing Data? :\",data_2015.isnull().any().any())\nprint(data_2015.isnull().sum())","04fa5c7e":"#data_2015[\"Happiness_Score\"].value_counts()","b3efe264":"#we found out how many hospital country in our data\nprint(\"\\n\\nRegion in Dataset:\\n\")\nprint(\"There are {} different values\\n\".format(len(data_2015.Region.unique())))\nprint(data_2015.Region.unique())","f1f3e977":"region_lists=list(data_2015['Region'].unique())\nregion_happiness_ratio=[]\nfor each in region_lists:\n    region=data_2015[data_2015['Region']==each]\n    region_happiness_rate=sum(region.Happiness_Score)\/len(region)\n    region_happiness_ratio.append(region_happiness_rate)\n    \ndata=pd.DataFrame({'region':region_lists,'region_happiness_ratio':region_happiness_ratio})\nnew_index=(data['region_happiness_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\nsorted_data","c562d54d":"#Visualization\n#Create a new figure and make the size (12,10)\nplt.figure(figsize=(12,10))\nsns.barplot(x=sorted_data['region'], y=sorted_data['region_happiness_ratio'],palette=sns.cubehelix_palette(len(sorted_data['region'])))\n# Place the region names at a 90-degree angle.\nplt.xticks(rotation= 90)\nplt.xlabel('Region')\nplt.ylabel('Region Happiness Ratio')\nplt.title('Happiness rate for regions')\nplt.show()","17552288":"#meaningless data control\n#data_2015[\"Economy\"].value_counts()","1332ab71":"region_lists=list(data_2015['Region'].unique())\nregion_economy_ratio=[]\nfor each in region_lists:\n    region=data_2015[data_2015['Region']==each]\n    region_economy_rate=sum(region.Economy)\/len(region)\n    region_economy_ratio.append(region_economy_rate)\n    \ndata_economy=pd.DataFrame({'region':region_lists,'region_economy_ratio':region_economy_ratio})\nnew_index_economy=(data_economy['region_economy_ratio'].sort_values(ascending=True)).index.values\nsorted_data_economy = data_economy.reindex(new_index_economy)\nsorted_data_economy.head()","cce45e7b":"#Visualization\n#Create a new figure and make the size (12,10)\nf,ax1 = plt.subplots(figsize =(12,10))\nsns.barplot(x=sorted_data_economy['region'], y=sorted_data_economy['region_economy_ratio'],palette=\"rocket\", ax=ax1)\n# Place the region names at a 90-degree angle.\nplt.xticks(rotation= 90)\nplt.xlabel('Region')\nplt.ylabel('Region Economy Ratio')\nplt.title('Economy rate for regions')\nplt.show()","43a9a402":"#Horizontal bar plot\nregion_lists=list(data_2015['Region'].unique())\nshare_economy=[]\nshare_family=[]\nshare_health=[]\nshare_freedom=[]\nshare_trust=[]\nfor each in region_lists:\n    region=data_2015[data_2015['Region']==each]\n    share_economy.append(sum(region.Economy)\/len(region))\n    share_family.append(sum(region.Family)\/len(region))\n    share_health.append(sum(region.Health)\/len(region))\n    share_freedom.append(sum(region.Freedom)\/len(region))\n    share_trust.append(sum(region.Trust)\/len(region))\n#Visualization\nf,ax = plt.subplots(figsize = (9,5))\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=share_economy,y=region_lists,color='g',label=\"Economy\")\nsns.barplot(x=share_family,y=region_lists,color='b',label=\"Family\")\nsns.barplot(x=share_health,y=region_lists,color='c',label=\"Health\")\nsns.barplot(x=share_freedom,y=region_lists,color='y',label=\"Freedom\")\nsns.barplot(x=share_trust,y=region_lists,color='r',label=\"Trust\")\nax.legend(loc=\"lower right\",frameon = True)\nax.set(xlabel='Percentage of Region', ylabel='Region',title = \"Factors affecting happiness score\")\nplt.show()","c4690ce8":"sorted_data['region_happiness_ratio']=sorted_data['region_happiness_ratio']\/max(sorted_data['region_happiness_ratio'])\nsorted_data_economy['region_economy_ratio']=sorted_data_economy['region_economy_ratio']\/max(sorted_data_economy['region_economy_ratio'])\n\ndata=pd.concat([sorted_data,sorted_data_economy['region_economy_ratio']],axis=1)\ndata.sort_values('region_happiness_ratio',inplace=True)\n\n#Visualization\nf,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x='region',y='region_happiness_ratio',data=data,color='lime',alpha=0.8)\nsns.pointplot(x='region',y='region_economy_ratio',data=data,color='red',alpha=0.8)\nplt.text(7.55,0.6,'happiness score ratio',color='red',fontsize = 17,style = 'italic')\nplt.text(7.55,0.55,'economy ratio',color='lime',fontsize = 18,style = 'italic')\nplt.xticks(rotation=45)\nplt.xlabel('Region',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('Happiness Score  VS  Economy Rate',fontsize = 20,color='blue')\nplt.grid()\nplt.show()","d94be4ff":"dataframe=pd.pivot_table(data_2015, index = 'Region', values=[\"Happiness_Score\",\"Family\"])\n#to normalize\ndataframe[\"Happiness_Score\"]=dataframe[\"Happiness_Score\"]\/max(dataframe[\"Happiness_Score\"])\ndataframe[\"Family\"]=dataframe[\"Family\"]\/max(dataframe[\"Family\"])\nsns.jointplot(dataframe.Family,dataframe.Happiness_Score,kind=\"kde\",height=7,space=0)\nplt.savefig('graph.png')\nplt.show()","91902ef2":"#Linear regression with marginal distributions\ng = sns.jointplot(\"Family\", \"Happiness_Score\", data=dataframe,height=5,kind=\"reg\",ratio=3, color=\"r\")","4b550c0d":"#broadcasting\ndata_2015['Year']=2015\ndata_2016['Year']=2016\ndata_2017['Year']=2017\n#concating\ndata_concat=pd.concat([data_2015,data_2016,data_2017],axis=0,sort = False)\n\ndf=pd.pivot_table(data_concat, index = 'Year', values=\"Happiness_Score\")\ndf","cf125e86":"#pie chart\ndf.dropna(inplace = True)\nlabels =df.index\ncolors = ['cyan','lime','pink']\nexplode = [0,0,0]\nsizes = df.values\n\n# visual\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Percentage of year score by region',color = 'purple',fontsize = 15)\nplt.show()","b4359825":"dataframe2=pd.pivot_table(data_2015, index = 'Region', values=[\"Happiness_Score\",\"Trust\"])\n#to normalize\ndataframe2[\"Happiness_Score\"]=dataframe2[\"Happiness_Score\"]\/max(dataframe2[\"Happiness_Score\"])\ndataframe2[\"Trust\"]=dataframe2[\"Trust\"]\/max(dataframe2[\"Trust\"])\nsns.lmplot(\"Trust\",\"Happiness_Score\",data=dataframe2)\nplt.show()","f1744f77":"dataframe3=pd.pivot_table(data_concat, index = 'Year', values=[\"Happiness_Score\",\"Freedom\"])\n#to normalize\ndataframe3[\"Happiness_Score\"]=dataframe3[\"Happiness_Score\"]\/max(dataframe3[\"Happiness_Score\"])\ndataframe3[\"Freedom\"]=dataframe3[\"Freedom\"]\/max(dataframe3[\"Freedom\"])\nsns.kdeplot(dataframe3.Freedom,dataframe3.Happiness_Score,shade=False,cut=5)\nplt.show()","a80fb4b6":"pal=sns.cubehelix_palette(2,rot=.5,dark=.3)\nsns.violinplot(data=dataframe2, palette=pal, inner=\"points\")\nplt.show()","f9f98592":"f,ax=plt.subplots(figsize=(8,8))\nsns.heatmap(data_concat.corr(),annot=True,linewidth=.5,fmt='.1f',ax=ax)\nplt.show()","7ac2b122":"f,ax = plt.subplots(figsize =(20,10))\nsns.boxplot(x=\"Year\" , y=\"Happiness_Score\", hue=\"Region\",data=data_concat,palette=\"PRGn\",ax=ax)\nplt.show()","3f976046":"f,ax = plt.subplots(figsize =(20,10))\nsns.swarmplot(x=\"Year\" , y=\"Happiness_Score\", hue=\"Region\",data=data_concat,ax=ax)\nplt.show()","f78b17fe":"#Pair Plot\nsns.pairplot(data)\nplt.show()","d8ef9bb4":"f,ax = plt.subplots(figsize =(10,10))\nsns.countplot(data_concat.Region,ax=ax)\nplt.xticks(rotation= 45)\nplt.show()","05af67b3":"dataframe=data_concat.loc[:,[\"Year\",\"Happiness_Score\",\"Economy\",\"Family\",\"Health\"]]\n# Make the plot\nplt.figure(figsize=(15,10))\nparallel_coordinates(dataframe, 'Year', colormap=plt.get_cmap(\"Set1\"))\nplt.title(\" visualization according to year features (2016, 2017, 2018)\")\nplt.xlabel(\"Features of data set\")\nplt.savefig('graph.png')\nplt.show()","6b08894d":"<a id=6><\/a>\n**<h1>Lm Plot<\/h1>**\n* We used Lm Plot to see the results of a linear regression in data set.","9b6c7892":"* We look at the type of happiness score and do not need to change the type because it is a float type. \n* Also there is no missing data in our data. Let's check if there is missing data","e94b25c6":"<a id=12><\/a>\n**<h1>Pair Plot<\/h1>**\n* We can interpret the relationship between the happiness score rate and the economy visually with the pair plot.\n      As the happiness score increases, we can say that the economy is increasing or it is also possible to say the opposite.","71dbe70a":"There is no missing data in our dataset, but it can be meaningless data. Let's see if there's meaningless data for happiness score.\n* We have not seen meaningless data for happiness score. It is good thing for us.","9fc3ce58":"* We find that there is a positive correlation between family and happiness score.","007cd32e":"<a id=2><\/a>\n**<h1>Bar Plot<\/h1>**\nWhat are the happiest regions of the world in 2015?\n* We have interpreted the answer of the question by visualizing it.","964c510a":"* What is the ratio of the factors affecting the Happiness Score according to the regions?","f963c396":"* The values displayed in the Happiness Score column are the annual average for all countries.","46919895":"<a id=4><\/a>\n**<h1>Joint Plot<\/h1>**\n* Visualization of the percentage of happiness according to regions and the rate of family affecting it.\n* With the joint plot we can see the correlation between the two features.","5ac2f482":"<a id=14><\/a>\n**<h1>Rare Visualization<\/h1>**\n* **Parallel Plot**\n Parallel plot allow to compare the feature of several individual observations on a set of numerical variables.","6af586f9":"<a id=10><\/a>\n**<h1>Box Plot<\/h1>**\n* We can see the percentage of happiness score according to years by box plot.","a804ccc0":"<a id=9><\/a>\n**<h1>Heatmap<\/h1>**\n* We can visualize the correlation between HeatMap and the features in our dataset.","1214d271":"According to the region, what is the effect of the economy on the happiness score?\n* I have interpreted the question","146d4dfe":"<a id=5><\/a>\n**<h1>Pie Chart<\/h1>**\n* According to the year we can visually see the percentage of happiness score.","97c89cda":"<a id=7><\/a>\n**<h1>Kde Plot<\/h1>**\n* visualization with the score of happiness according to years and the value of freedom affecting it.","da7329fb":"* As the perception of corruption decreases, we can say that happiness score also increases.","ae1f551c":"<a id=2><\/a>\n**<h1>Point Plot<\/h1>**\n* The rate of happiness score and the rate of economy affecting happiness score","6b7d20bc":"* The year 2017 seems to be empty because in our 2017 year, the regions are numbered instead of region names.","3bed4c49":"<a id=8><\/a>\n**<h1>Violin Plot<\/h1>**\n* The violin plot does not look at the correlation between the two features. It looks at the distribution of the values within the features.","ca7f4517":"<a id=11><\/a>\n**<h1>Swarm Plot<\/h1>**\n* We can see the rate of happiness according to years by swarm plot.","480a86ff":"* Parallel plots tell us that it is not logical to use these properties for classification.","241267f0":"<a id=1><\/a>\n**<h1>Explanation of Features<\/h1>**\n* **Country** : Name of the country.\n* **Region** : Region the country belongs to.\n* **Happiness Rank** : Rank of the country based on the Happiness Score.\n* **Happiness Score** : A metric measured in 2015 by asking the sampled people the question: \"How would you rate your happiness on a scale of 0 to 10 where 10 is the happiest.\"\n* **Economy** : real GDP per capita\n* **Family** : social support\n* **Health**  healthy life expectancy\n* **Freedom** : freedom to make life choices\n* **Trust** : perceptions of corruption\n* **Generosity** : perceptions of generosity\n* **Dystopia** : each country is compared against a hypothetical nation that represents the lowest national averages for each key variable and is, along with residual error, used as a regression benchmark","8a8df4e8":"* We found unique region names in our dataset and we calculated the happiness rate according to the regions and created a dataframe in descending order.","f3484484":"<a id=13><\/a>\n**<h1>Count Plot<\/h1>**\n* We found the country numbers that the regions contain.","8aea601e":"**<h1>INTRODUCTION<\/h1>**\nI visualized the World Happiness Report data on this kernel with seaborn.\n* Peek at the Data\n[<br>Explanation of Features<\/br>](#1)\n* happiness rate of each region\n  * [Bar Plot](#2)\n  * [Point Plot](#3)\n  * [Joint Plot](#4)\n  * [Pie Chart](#5)\n  * [Lm Plot](#6)\n  * [Kde Plot](#7)\n  * [Violin Plot](#8)\n  * [Heatmap](#9)\n  * [Box Plot](#10)\n  * [Swarm Plot](#11)\n  * [Pair Plot](#12)\n  * [Count Plot](#13)  \n* [Rare Visualization Tool](#14)\n  * Parallel Plot"}}