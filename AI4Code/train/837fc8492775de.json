{"cell_type":{"fdd8f0b4":"code","e9102e4c":"code","4d386f31":"code","e655baeb":"code","3c1c85cf":"code","8b570a9f":"code","8eaf3575":"code","158c3a4e":"code","5323b20d":"code","f0e445df":"code","abe6340f":"code","ce884380":"code","00ae9d5e":"code","be8db26f":"code","0e48d470":"code","887cfdad":"code","ac863755":"code","0ed228d0":"code","4ee13a95":"code","7185b66d":"code","882fc0c4":"code","6b00d3a4":"code","234d4de3":"code","035b9a49":"code","227e9dcd":"code","4bbf2e0f":"code","8deff8ca":"code","6b00c137":"code","42c578e6":"code","82626a58":"code","a9852b3b":"code","56eeab5b":"code","7f80a0f7":"code","5e2361ba":"code","eedd625d":"code","e9747837":"code","655e8c05":"code","b4f0d4e1":"code","2fca2fdc":"code","259981c5":"code","95a862ab":"code","8a063173":"code","e611af87":"code","1a8f9880":"code","356d2a3c":"code","42596fdd":"code","40a6ce86":"code","556ac909":"code","f14bf948":"code","d4bb5772":"code","74fb2790":"code","56fa7631":"code","aef7d46e":"code","f4a1fbaf":"code","125d6ddd":"code","c645be13":"code","634826c2":"code","159a448f":"code","54a0a203":"code","636384bb":"code","532e1214":"code","6e86be62":"code","dd1229b3":"markdown","ef1fd549":"markdown","071ff505":"markdown","894f3bdf":"markdown","de979fde":"markdown","c48f4b3c":"markdown","8799bc87":"markdown","d780ea9a":"markdown","17d52ee2":"markdown","89ec3487":"markdown","14a77cdd":"markdown"},"source":{"fdd8f0b4":"import numpy as np \nimport pandas as pd \n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n\n        \nimport matplotlib.pyplot as plt\nimport matplotlib as pl\nimport seaborn as sns \n\n\nimport sklearn\n\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.svm import SVC\n\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\n\nfrom sklearn.metrics import confusion_matrix, classification_report\n\nfrom sklearn.ensemble import RandomForestClassifier\n\nfrom sklearn.tree import DecisionTreeClassifier","e9102e4c":"dataset = pd.read_csv('\/kaggle\/input\/social-network-ads\/Social_Network_Ads.csv')","4d386f31":"type(dataset)","e655baeb":"dataset.shape","3c1c85cf":"dataset.head()","8b570a9f":"dataset.tail()","8eaf3575":"dataset.info()","158c3a4e":"dataset.describe()","5323b20d":"dataset.isnull().sum()","f0e445df":"dataset[101:106]","abe6340f":"sns.countplot(x='Purchased', data=dataset)\nplt.show()","ce884380":"sns.countplot(x='Purchased', hue='Gender', data=dataset)\nplt.show()","00ae9d5e":"sns.catplot(x='Purchased',  hue='Gender', y='Age', data=dataset)\nplt.show()","be8db26f":"sns.stripplot(x=\"Purchased\", y=\"Age\", hue=\"Gender\",data=dataset )\nplt.show()","0e48d470":"sns.swarmplot(x=\"Purchased\", y=\"Age\", hue=\"Gender\",data=dataset )\nplt.show()","887cfdad":"sns.boxplot(x='Purchased', hue='Gender', y='Age', data=dataset)\nplt.show()","ac863755":"sns.violinplot(x=\"Purchased\", y=\"Age\", hue=\"Gender\",data=dataset )\nplt.show()","0ed228d0":"sns.pointplot(x=\"Purchased\", y=\"Age\",hue='Gender', data=dataset)\nplt.show()","4ee13a95":"sns.barplot(x=\"Purchased\", y=\"Age\",hue='Gender', data=dataset)\nplt.show()","7185b66d":"sns.countplot(y= 'Age', hue= 'Gender', data=dataset)\nplt.show()","882fc0c4":"dataset.drop(columns=['User ID'], axis=1, inplace=True)","6b00d3a4":"# Converting Gender into Dummy Data\ngender = pd.get_dummies(dataset['Gender'], drop_first=True)\n\n\n# Adding dummy data to data set and removing Gender column\ndatset = pd.concat([gender, dataset], axis=1)\ndataset.drop(columns=['Gender'], axis=1, inplace=True)","234d4de3":"X = dataset.iloc[:, :-1].values    #Features\ny = dataset.iloc[:, -1].values     #Targets","035b9a49":"# from sklearn.preprocessing import StandardScaler","227e9dcd":"st = StandardScaler()","4bbf2e0f":"X = st.fit_transform(X)","8deff8ca":"X","6b00c137":"# from sklearn.model_selection import train_test_split","42c578e6":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","82626a58":"# from sklearn.svm import SVC","a9852b3b":"# Using Polynomial Kernel\n\npoly_model = SVC(kernel='poly', degree=3)","56eeab5b":"poly_model.fit(X_train, y_train)","7f80a0f7":"poly_model.score(X_train, y_train)","5e2361ba":"poly_model.score(X_test, y_test)","eedd625d":"poly_model.predict(st.transform([[19,19000]]))","e9747837":"y_pred_poly = poly_model.predict(X_test)","655e8c05":"# from sklearn.metrics import confusion_matrix, classification_report","b4f0d4e1":"cf_matrix = confusion_matrix(y_test, y_pred_poly)\nsns.heatmap(cf_matrix, annot=True)\nplt.show()","2fca2fdc":"print(classification_report(y_test, y_pred_poly))","259981c5":"# Using RBF Kernel","95a862ab":"rbf_model = SVC(kernel='rbf').fit(X_train, y_train)","8a063173":"# Score on test data\n\nrbf_model.score(X_test, y_test)","e611af87":"# Score on training data\n\nrbf_model.score(X_train, y_train)","1a8f9880":"rbf_model.predict(st.transform([[26,43000]]))","356d2a3c":"y_pred_rbf = rbf_model.predict(X_test)","42596fdd":"sns.heatmap(confusion_matrix(y_test, y_pred_rbf), annot=True)\nplt.show()","40a6ce86":"print(classification_report(y_test, y_pred_rbf))","556ac909":"# from sklearn.ensemble import RandomForestClassifier","f14bf948":"rf_clf = RandomForestClassifier(max_depth=4)","d4bb5772":"rf_clf.fit(X_train, y_train)","74fb2790":"rf_clf.score(X_test, y_test)","56fa7631":"rf_clf.score(X_train, y_train)","aef7d46e":"y_pred_rf = rf_clf.predict(X_test)","f4a1fbaf":"sns.heatmap(confusion_matrix(y_test, y_pred_rf), annot=True)\nplt.show()","125d6ddd":"print(classification_report(y_test, y_pred_rf))","c645be13":"# from sklearn.tree import DecisionTreeClassifier","634826c2":"dt_clf = DecisionTreeClassifier(max_depth=3).fit(X_train, y_train)","159a448f":"dt_clf.score(X_test, y_test)","54a0a203":"dt_clf.score(X_train, y_train)","636384bb":"y_pred_dt = dt_clf.predict(X_test)","532e1214":"sns.heatmap(confusion_matrix(y_test, y_pred_dt), annot=True)\nplt.show()","6e86be62":"print(classification_report(y_test, y_pred_dt))","dd1229b3":"#### 1- import Liberaries ","ef1fd549":"# SVM Classification","071ff505":"#### 7- Feature Scaling","894f3bdf":"#### 3- EDA","de979fde":"### Random Forest Classifier","c48f4b3c":"#### 6-  Extracting Feature","8799bc87":"#### 2- import Dataset","d780ea9a":"#### 4- Visualization ","17d52ee2":"#### 5- Data Preprocessing","89ec3487":"#### 8- Splitting data into training and testing","14a77cdd":"### Decision Tree Classifiers"}}