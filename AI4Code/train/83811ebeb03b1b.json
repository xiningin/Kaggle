{"cell_type":{"c07eac30":"code","7c99c052":"code","05459b40":"code","8429f207":"code","0d57b9f7":"code","3e926790":"code","9535741b":"code","6f45ea92":"code","892cf70d":"code","91a796ec":"code","a3159853":"code","36a7ebcc":"code","a6eb139c":"code","97f9360f":"code","f2cb9d47":"code","62b50de4":"code","e41320da":"code","cb199395":"code","df05be3e":"code","3e5619fb":"code","d8240ea9":"code","2d3e795d":"code","894463f6":"code","9ba9293e":"code","f487c694":"code","c6559252":"code","4bfb1616":"code","47b57838":"code","ffdcd32e":"markdown"},"source":{"c07eac30":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7c99c052":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport plotly.express as px\nimport datetime as dt\nimport plotly.express as px\n","05459b40":"plant1_gen=pd.read_csv('\/kaggle\/input\/solar-power-generation-data\/Plant_1_Generation_Data.csv')\nplant2_gen=pd.read_csv('\/kaggle\/input\/solar-power-generation-data\/Plant_2_Generation_Data.csv')\nplant1_sen=pd.read_csv('\/kaggle\/input\/solar-power-generation-data\/Plant_1_Weather_Sensor_Data.csv')\nplant2_sen=pd.read_csv('\/kaggle\/input\/solar-power-generation-data\/Plant_2_Weather_Sensor_Data.csv')","8429f207":"print(f\"Features Columns of plant1_gen : \",plant1_gen.columns)\nprint(\"********************************************************************************\")\nprint(f\"Features Columns of plant2_gen : \",plant2_gen.columns)\nprint(\"*******************************************************************************\")\nprint(f\"Features Columns of plant1_sen : \",plant1_sen.columns)\nprint(\"********************************************************************************\")\nprint(f\"Features Columns of plant2_sen : \",plant2_sen.columns)","0d57b9f7":"print(f\"Features Columns of plant1_gen (count) : \",plant1_gen.count())\nprint(\"********************************************************************************\")\nprint(f\"Features Columns of plant2_gen (count): \",plant2_gen.count())\nprint(\"*******************************************************************************\")\nprint(f\"Features Columns of plant1_sen (count): \",plant1_sen.count())\nprint(\"********************************************************************************\")\nprint(f\"Features Columns of plant2_sen (count): \",plant2_sen.count())\n\n","3e926790":"print(f\"Features stats of plant1_gen (stats): \")\nprint(plant1_gen.describe())\nprint(\"********************************************************************************\")\nprint(f\"Features stats of plant2_gen (stats): \")\nprint(plant2_gen.describe())\nprint(\"*******************************************************************************\")\nprint(f\"Features stats of plant1_sen (stats): \")\nprint(plant1_sen.describe())\nprint(\"********************************************************************************\")\nprint(f\"Features stats of plant2_sen (stats): \")\nprint(plant2_sen.describe())\n\n","9535741b":"plant1_gen.head()","6f45ea92":"plant2_gen.head()","892cf70d":"plant1_sen.head()","91a796ec":"plant2_sen.head()","a3159853":"ave=(sum(plant2_gen['TOTAL_YIELD'])+sum(plant1_gen['TOTAL_YIELD']))\/len(plant2_gen['TOTAL_YIELD']+plant2_gen['TOTAL_YIELD'])\nave","36a7ebcc":"print(\"the Mean value of daily yield in Plant 1 is : {0:.2f}\".format(plant1_gen['TOTAL_YIELD'].mean()))\nprint(\"the Mean value of daily yield in Plant 2 is : {0:.2f}\".format(plant2_gen['TOTAL_YIELD'].mean()))\nprint(\"********************************************************************************\")\nprint(\"the Mean value of daily yield in both Plant is : {0:.2f}\".format(ave))\n","a6eb139c":"sum(plant2_sen['IRRADIATION'])","97f9360f":"print(\" the total irradiation per day in Plant 1 is : {0:.2f}\".format(plant1_sen['IRRADIATION'].sum()))\nprint(\" the total irradiation per day in Plant 2 is : {0:.2f}\".format(plant2_sen['IRRADIATION'].sum()))\nprint(\"********************************************************************************\")\nprint(\" the total irradiation per day in both Plant is : {0:.2f}\".format(plant2_sen['IRRADIATION'].sum()+plant1_sen['IRRADIATION'].sum()))","f2cb9d47":"print(\" the Max Ambient Temperature in Plant 1 is : {0:.2f}\".format(plant1_sen['AMBIENT_TEMPERATURE'].max()))\nprint(\" the Max Ambient Temperature in Plant 2 is : {0:.2f}\".format(plant2_sen['AMBIENT_TEMPERATURE'].max()))\nprint(\"********************************************************************************\")\nprint(\" the Max Module Temperature in Plant 1 is : {0:.2f}\".format(plant1_sen['MODULE_TEMPERATURE'].max()))\nprint(\" the Max Module Temperature in Plant 2 is : {0:.2f}\".format(plant2_sen['MODULE_TEMPERATURE'].max()))","62b50de4":"print(\" There are total Inverter SOURCE_KEY in Plant 1 is {}   \".format(len(plant1_gen['SOURCE_KEY'].unique())))\nprint(\" There are total Inverter SOURCE_KEY in Plant 2 is {}  \".format(len(plant2_gen['SOURCE_KEY'].unique())))","e41320da":"print(\" There are total Inverter in Plant 1 is {}   \".format(plant1_gen['SOURCE_KEY'].count()))\nprint(\" There are total Inverter in Plant 2 is {}   \".format(plant2_gen['SOURCE_KEY'].count()))","cb199395":"plant1_gen.head()","df05be3e":"plant2_gen.head()","3e5619fb":"plant1_gen['AC\/DC_Ratio']=plant1_gen['DC_POWER']\/plant1_gen['AC_POWER']\nplant2_gen['AC\/DC_Ratio']=plant2_gen['DC_POWER']\/plant2_gen['AC_POWER']","d8240ea9":"print(f\" Maximum amount of DC_POWER generated in Plant 1 is \",plant1_gen['DC_POWER'].max())\nprint(\" Maximum amount of DC_POWER generated in Plant 2 is {0:.2f}\".format(plant2_gen['DC_POWER'].max()))\nprint(\"********************************************************************************\")\nprint(f\" Maximum amount of AC_POWER generated in Plant 1 is \",plant1_gen['AC_POWER'].max())\nprint(f\" Maximum amount of AC_POWER generated in Plant 2 is \",plant2_gen['AC_POWER'].max())\nprint(\"********************************************************************************\")\nprint(\" Maximum amount of DC\/AC Power generated in Plant 1 is {0:.2f}\".format(plant1_gen['AC\/DC_Ratio'].max()))\nprint(\" Maximum amount of DC\/AC Power generated in Plant 2 is {0:.2f}\".format(plant2_gen['AC\/DC_Ratio'].max()))","2d3e795d":"plant1_gen['AC\/DC_Ratio'].min()","894463f6":"print(f\" Minimum amount of DC_POWER generated in Plant 1 is \",plant1_gen['DC_POWER'].min())\nprint(\" Minimum amount of DC_POWER generated in Plant 2 is {0:.2f}\".format(plant2_gen['DC_POWER'].min()))\nprint(\"********************************************************************************\")\nprint(f\" Minimum amount of AC_POWER generated in Plant 1 is \",plant1_gen['AC_POWER'].min())\nprint(f\" Minimum amount of AC_POWER generated in Plant 2 is \",plant2_gen['AC_POWER'].min())\nprint(\"********************************************************************************\")\nprint(\" Minimum amount of DC\/AC Power generated in Plant 1 is {0:.2f}\".format(plant1_gen['AC\/DC_Ratio'].min()))\nprint(\" Minimum amount of DC\/AC Power generated in Plant 2 is {0:.2f}\".format(plant2_gen['AC\/DC_Ratio'].min()))\nprint(\"********************************************************************************\")\n\nprint(\"                                                   \")\n\nprint(\"Minimum amount of AC\/DC_Ratio generated from SOURCE_KEY  in Plant 1 is \")\nprint(plant1_gen[['AC\/DC_Ratio','SOURCE_KEY']].min())\nprint(\"********************************************************************************\")\nprint(\"Minimum amount of AC\/DC_Ratio generated from SOURCE_KEY  in Plant 2 is \")\nprint(plant2_gen[['AC\/DC_Ratio','SOURCE_KEY']].min())","9ba9293e":"print(\"Maximum amount of DC_POWER generated from SOURCE_KEY  in Plant 1 is \")\nprint(plant1_gen[['DC_POWER','SOURCE_KEY']].max())\nprint(\"********************************************************************************\")\nprint(\"Maximum amount of DC_POWER generated from SOURCE_KEY  in Plant 2 is \")\nprint(plant2_gen[['DC_POWER','SOURCE_KEY']].max())\nprint(\"********************************************************************************\")\nprint(\"Maximum amount of AC_POWER generated from SOURCE_KEY  in Plant 1 is \")\nprint(plant1_gen[['AC_POWER','SOURCE_KEY']].max())\nprint(\"********************************************************************************\")\nprint(\"Maximum amount of AC_POWER generated from SOURCE_KEY  in Plant 2 is \")\nprint(plant2_gen[['AC_POWER','SOURCE_KEY']].max())\nprint(\"********************************************************************************\")\n\nprint(\"                                                   \")\n\nprint(\"Maximum amount of AC\/DC_Ratio generated from SOURCE_KEY  in Plant 1 is \")\nprint(plant1_gen[['AC\/DC_Ratio','SOURCE_KEY']].max())\nprint(\"********************************************************************************\")\nprint(\"Maximum amount of AC\/DC_Ratio generated from SOURCE_KEY  in Plant 2 is \")\nprint(plant2_gen[['AC\/DC_Ratio','SOURCE_KEY']].max())","f487c694":"plant1_gen.head()","c6559252":"print(\"Top 10 inverters based on the Maximum AC_POWER they produce in Plant 1\")\nprint(\"         \")\nprint(plant1_gen[['AC_POWER','SOURCE_KEY']].nlargest(10,'AC_POWER',keep='first'))\nprint(\"         \")\nprint(\"********************************************************************************\")\n\nprint(\"Top 10 inverters based on the Maximum DC_POWER they produce in Plant 1\")\nprint(\"         \")\nprint(plant1_gen[['DC_POWER','SOURCE_KEY']].nlargest(10,'DC_POWER',keep='first'))\nprint(\"         \")\nprint(\"********************************************************************************\")\n\nprint(\"Top 10 inverters based on the Maximum  DC\/AC power they produce in Plant 1\")\nprint(\"         \")\nprint(plant1_gen[['AC\/DC_Ratio','SOURCE_KEY']].nlargest(10,'AC\/DC_Ratio',keep='first'))","4bfb1616":"print(\"Top 10 inverters based on the Maximum AC_POWER they produce in Plant 2\")\nprint(\"         \")\nprint(plant2_gen[['AC_POWER','SOURCE_KEY']].nlargest(10,'AC_POWER',keep='first'))\nprint(\"         \")\nprint(\"********************************************************************************\")\n\nprint(\"Top 10 inverters based on the Maximum DC_POWER they produce in Plant 2\")\nprint(\"         \")\nprint(plant2_gen[['DC_POWER','SOURCE_KEY']].nlargest(10,'DC_POWER',keep='first'))\nprint(\"         \")\nprint(\"********************************************************************************\")\n\nprint(\"Top 10 inverters based on the Maximum  DC\/AC power they produce in Plant 2\")\nprint(\"         \")\nprint(plant2_gen[['AC\/DC_Ratio','SOURCE_KEY']].nlargest(10,'AC\/DC_Ratio',keep='first'))","47b57838":"print(plant1_gen.info())\nprint('')\nprint(plant2_gen.info())","ffdcd32e":"###  Is there any missing data?"}}