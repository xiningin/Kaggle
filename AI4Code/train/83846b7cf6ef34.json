{"cell_type":{"1bba2f1e":"code","9dbffe8d":"code","801bdd74":"code","f0ca5072":"code","b6350803":"code","3bc0f86e":"code","5a97fc8c":"code","7e9bff35":"code","a860ac7f":"code","6ec4a213":"code","795665de":"code","9417f3a6":"code","43c453c5":"code","a1ee49c6":"code","80ef9d7f":"code","6ad43564":"code","6e37efd8":"code","88a2f18a":"code","04ed72f9":"code","3e07476d":"code","a7ff5b23":"code","02a07fd5":"code","4d505d47":"code","d2b36f7e":"code","99e282e0":"code","8c5bbd93":"code","60f62945":"code","80de1d19":"code","902be770":"code","6648597c":"code","fde5ba6b":"markdown","ac6b7280":"markdown"},"source":{"1bba2f1e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9dbffe8d":"import pandas as pd\nimport numpy as np\nfrom pathlib import Path\n#from sklearn. import ","801bdd74":"PATH=Path('..\/input\/')","f0ca5072":"raw_tr=pd.read_csv(PATH\/'train.csv')\nraw_te=pd.read_csv(PATH\/'test.csv')","b6350803":"import seaborn as sns\nfrom matplotlib import pyplot as plt","3bc0f86e":"corrmat=raw_tr.corr()","5a97fc8c":"fig,ax=plt.subplots(figsize=(16,12))\nsns.heatmap(corrmat,ax=ax)","7e9bff35":"print(f'Unique elements in SoilType7: {raw_tr.Soil_Type7.unique()} | Expected 2')\nprint(f'Unique elements in SoilType15: {raw_tr.Soil_Type15.unique()} | Expected 2')","a860ac7f":"drop=['Soil_Type7','Soil_Type15']\nraw_tr.drop(drop,axis=1,inplace=True)\nraw_te.drop(drop,axis=1,inplace=True)","6ec4a213":"n=12\ncols=corrmat.nlargest(n,'Cover_Type')['Cover_Type'].index\ncm = np.corrcoef(raw_tr[cols].values.T)\nsns.set(font_scale=1.25)\nfig,ax=plt.subplots(figsize=(16,9))\nsns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values,ax=ax)\n#plt.show()","795665de":"{c:raw_tr[c].dtype.name for c in raw_tr.columns}","9417f3a6":"raw_tr.columns","43c453c5":"em_cols1=['Hillshade_9am', 'Hillshade_Noon',\n       'Hillshade_3pm']\nem_cols2=['Wilderness_Area1', 'Wilderness_Area2', 'Wilderness_Area3',\n       'Wilderness_Area4', 'Soil_Type1', 'Soil_Type2', 'Soil_Type3',\n       'Soil_Type4', 'Soil_Type5', 'Soil_Type6', 'Soil_Type8', 'Soil_Type9',\n       'Soil_Type10', 'Soil_Type11', 'Soil_Type12', 'Soil_Type13',\n       'Soil_Type14', 'Soil_Type16', 'Soil_Type17', 'Soil_Type18',\n       'Soil_Type19', 'Soil_Type20', 'Soil_Type21', 'Soil_Type22',\n       'Soil_Type23', 'Soil_Type24', 'Soil_Type25', 'Soil_Type26',\n       'Soil_Type27', 'Soil_Type28', 'Soil_Type29', 'Soil_Type30',\n       'Soil_Type31', 'Soil_Type32', 'Soil_Type33', 'Soil_Type34',\n       'Soil_Type35', 'Soil_Type36', 'Soil_Type37', 'Soil_Type38',\n       'Soil_Type39', 'Soil_Type40']\ncont_col=['Elevation', 'Aspect', 'Slope',\n       'Horizontal_Distance_To_Hydrology', 'Vertical_Distance_To_Hydrology',\n       'Horizontal_Distance_To_Roadways','Horizontal_Distance_To_Fire_Points']","a1ee49c6":"#{c:(len(raw_tr[c].unique())) for c in em_cols}","80ef9d7f":"from pandas.api.types import CategoricalDtype\ndef to_cat(col_list):\n    for c in col_list:\n        if c in ['Hillshade_9am', 'Hillshade_Noon','Hillshade_3pm']:\n            cat=CategoricalDtype(categories=[i for i in range(256)])\n        else :\n            cat=CategoricalDtype(categories=[i for i in range(2)])\n        raw_tr[c]=raw_tr[c].astype(cat).cat.as_ordered()\n        raw_te[c]=raw_te[c].astype(cat).cat.as_ordered()\n        raw_tr[c]=raw_tr[c].cat.codes\n        raw_te[c]=raw_te[c].cat.codes","6ad43564":"#from sklearn.model_selection import train_test_split\nto_cat(em_cols1)\nto_cat(em_cols2)","6e37efd8":"cont_map={}\nfor c in cont_col:\n    cont_map[c]=raw_tr[c].mean(),raw_tr[c].std()+1e-2","88a2f18a":"def apply_norm(df,mapping):\n    for k,v in mapping.items():\n        df[k]=(df[k]-v[0])\/v[1]\n    #return df","04ed72f9":"apply_norm(raw_tr,cont_map)","3e07476d":"apply_norm(raw_te,cont_map)","a7ff5b23":"from xgboost import XGBClassifier\nfrom sklearn.model_selection import cross_val_score","02a07fd5":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score","4d505d47":"xtrain,xval,ytrain,yval=train_test_split(raw_tr.drop(['Id','Cover_Type'],axis=1),raw_tr.Cover_Type,test_size=.2)","d2b36f7e":"xgb=XGBClassifier(n_estimators=1000,max_depth=25)","99e282e0":"xgb.fit(xtrain,ytrain)\ny_pred=xgb.predict(xval)\n","8c5bbd93":"print(accuracy_score(yval,y_pred))\nscore=cross_val_score(xgb,xtrain,ytrain,n_jobs=-1,cv=5)\nprint(np.mean(score))","60f62945":"yt=xgb.predict(raw_te.drop('Id',axis=1))","80de1d19":"len(yt)","902be770":"sub=pd.DataFrame({'Id':raw_te.Id,'Cover_Type':yt},columns=['Id','Cover_Type'])","6648597c":"sub.to_csv('submission_simple_XGB_1.csv',index=False)","fde5ba6b":"Soil Type 7 and 15 have may be constant ","ac6b7280":"We can drop these columnts as these are constant for all training data "}}