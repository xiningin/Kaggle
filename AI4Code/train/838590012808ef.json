{"cell_type":{"e52dc2aa":"code","9523eb60":"code","a2eeeae3":"code","92294f88":"code","f948ed46":"code","ab44ed5c":"code","268e1206":"code","fd6a3f9f":"code","65a40fcb":"code","abad3529":"code","9c246898":"code","3990cb08":"code","ab55a9b2":"code","d8fde9c1":"code","a01b82b8":"code","2f5a18c6":"code","6ece399f":"code","752f9bf4":"code","b84cb1cc":"code","ff7307d0":"code","20487648":"code","7ead9dc0":"code","7aa2384a":"code","512d6c5c":"code","9c4aa2d5":"code","e221c7e3":"code","b8a39d19":"code","2ef58911":"code","2520f4f5":"code","53c04314":"code","ff53ebbb":"markdown","b4c3150b":"markdown","70890c4a":"markdown","b6208795":"markdown","ca927374":"markdown"},"source":{"e52dc2aa":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9523eb60":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot  as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split","a2eeeae3":"train = pd.read_csv('\/kaggle\/input\/mobile-price-classification\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/mobile-price-classification\/test.csv')","92294f88":"train.head()","f948ed46":"test.head()","ab44ed5c":"train.info()","268e1206":"train.isnull().sum()","fd6a3f9f":"train.describe()","65a40fcb":"doplic = train.duplicated()\ndoplic.head()","abad3529":"sum(doplic)","9c246898":"numeric_data = train.drop(['blue','dual_sim','four_g','three_g','touch_screen','wifi','price_range'],axis=1) #axis=1 column wise\nnumeric_data.head()","3990cb08":"categorical_data = train[['blue','dual_sim','four_g','three_g','touch_screen','wifi','price_range']]\ncategorical_data.head()","ab55a9b2":"for col in numeric_data.columns:\n    plt.subplots()\n    sns.boxplot(numeric_data[col],orient='v')","d8fde9c1":"scaler = StandardScaler()\nscaler_array = scaler.fit_transform(numeric_data)","a01b82b8":"scaled_data = pd.DataFrame(scaler_array,columns=numeric_data.columns)\nscaled_data.head()","2f5a18c6":"scaled_data.describe()","6ece399f":"plt.subplots(figsize=(10,8))\nbp = sns.boxplot(data = scaled_data )\nbp.set_xticklabels(bp.get_xticklabels(),rotation=90)","752f9bf4":"Q1 = scaled_data.quantile(0.25)\nQ3 = scaled_data.quantile(0.75)\n\nIQR = Q3 - Q1\nprint(IQR)","b84cb1cc":"outlier_removed_data = scaled_data[~((scaled_data < (Q1 - 1.5 * IQR)) | (scaled_data > (Q3 + 1.5 * IQR))).any(axis=1)]\noutlier_removed_data.shape","ff7307d0":"plt.subplots(figsize=(10,8))\nbp = sns.boxplot(data = outlier_removed_data )\nbp.set_xticklabels(bp.get_xticklabels(),rotation=90)","20487648":"scaled_data = scaled_data.reset_index()\ncategorical_data =  categorical_data.reset_index()","7ead9dc0":"\nfinal_df = pd.concat([scaled_data,categorical_data],axis=1)\nfinal_df = final_df.drop(['index'],axis=1)\nfinal_df.head()","7aa2384a":"final_df.info()","512d6c5c":"X = final_df.drop('price_range',axis=1)\nY = final_df['price_range']\nX.head()","9c4aa2d5":"X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.20,random_state=101)","e221c7e3":"X_train.shape, X_test.shape","b8a39d19":"from sklearn.linear_model import LogisticRegression","2ef58911":"logistic_regression = LogisticRegression(solver='lbfgs',multi_class='multinomial',max_iter=10000)","2520f4f5":"logistic_regression.fit(X_train,Y_train)","53c04314":"logistic_regression.score(X_test,Y_test)","ff53ebbb":"Check any duplicate in dataset","b4c3150b":"Categorical columns: blue(Bluetooth), dual_sim, four_g,three_g, touch_screen, wifi,price_range\n\nLet's seprate the numerical and categorical data","70890c4a":"**Model Training**","b6208795":"Let's calculate the z-score for the data ","ca927374":"Reading the data from excel"}}