{"cell_type":{"20c36f72":"code","4d01435a":"code","6941f4be":"code","b3928968":"code","56a33e70":"code","0ebc8db0":"code","d4968e86":"code","f307d03b":"code","319f8f8e":"code","26c97d71":"code","bab10e59":"code","6d06a46c":"code","c69c6338":"code","dfd4e584":"code","e7610a76":"code","8bf602df":"code","60702dcd":"code","6f41cb3f":"code","d6c025b3":"code","35c322ea":"code","8a545aa3":"code","9bf65201":"code","f474cb0a":"code","5cc5957b":"code","20e75185":"code","7f3269f9":"code","caefc650":"code","5091c034":"code","bfcb38bd":"code","d4fefa78":"code","7f8f67cf":"code","1806027d":"code","31bf279c":"code","28646f56":"code","f2129027":"code","a6345283":"code","aadaca57":"code","5d3bf59a":"code","7fedaf9b":"code","caaeeeef":"code","b65e7d09":"code","5d264fa1":"code","2426df97":"code","d8ea73d2":"code","1ada3701":"code","506aa9eb":"code","516b6744":"code","3474b047":"markdown","f5c76e4d":"markdown","d1db56ee":"markdown","8b8dd4df":"markdown","7a2bc833":"markdown","885b8607":"markdown","f2ae41b3":"markdown","f950222e":"markdown","a9dcb9f1":"markdown","3710b6a5":"markdown","8243e534":"markdown","e7f699d9":"markdown","fc6453e2":"markdown","3f4c575a":"markdown","96c3bf36":"markdown","00040c37":"markdown","07f93a99":"markdown","6e0945b4":"markdown","30328526":"markdown","1d8b0091":"markdown","e40b1ba7":"markdown","a4b89f91":"markdown","2f3de565":"markdown","543d8b39":"markdown","8f972257":"markdown","816799e4":"markdown","5b36a18d":"markdown","98f18d91":"markdown","db328637":"markdown","46c39e32":"markdown","e43d82f6":"markdown","08982617":"markdown","af476948":"markdown","1c1a9b3d":"markdown","db30ad24":"markdown","2c279a8a":"markdown","625abae3":"markdown","c845b52a":"markdown","23425985":"markdown","af881496":"markdown","2fd0bab5":"markdown","4f85bf6f":"markdown","9f810129":"markdown"},"source":{"20c36f72":"# Analysis and Mathematical  Libraries\nimport numpy as np\n\nimport pandas as pd\n\n# Visualizations Libraries\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns\n\n# DateTime Libraries\nimport time, datetime\n\n# Escape Warnings\n\nimport warnings\nwarnings.filterwarnings('ignore')","4d01435a":"# Read the data of UBER \n# Here file is CSV i.e Comma Seperated Values\n#df is a variable\n#encoding = 'latin1'Fixing encoding errors in Pandas\n#In fact, Pandas assumes that text is in UTF-8 format, because it is so common.\n#In this case, as the filename suggests, the bytes for the text are in Latin 1 encoding.\n#We can tell Pandas about this with the encoding= option: \n\ndf = pd.read_csv(\"..\/input\/uberdrives\/My Uber Drives - 2016.csv\",encoding='latin1')\ndf.head(3)","6941f4be":"df.columns = df.columns.str.replace(\"*\",\"\")","b3928968":"df.tail(1)","56a33e70":"df.info()","0ebc8db0":"df.shape","d4968e86":"print(\"There are {} rows and {} columns are present in the Data Set\".format(df.shape[0],df.shape[1]))","f307d03b":"df.describe()","319f8f8e":"df.isnull().sum()","26c97d71":"#visualizing the null values for each attribute\nplt.figure(figsize=(10,5)) \nsns.heatmap(df.isnull(),cmap='magma',yticklabels=False,cbar=False)\nplt.show()","bab10e59":"#visualizing the null values for each attribute\n\n\nimport missingno as msno\n\nmsno.bar(df)\nplt.show()","6d06a46c":"null_columns=df.columns[df.isnull().any()]\ndf[null_columns].isnull().sum()","c69c6338":"df.drop(index = 1155, axis = 0, inplace = True)","dfd4e584":"df.isnull().sum()","e7610a76":"df[\"PURPOSE\"].isnull().sum()\/len(df)","8bf602df":"# filling a null values using fillna() \n#ffill means forwadrd fill   (  non-null values forward)\ndf[\"PURPOSE\"].fillna(method='ffill', inplace = True) ","60702dcd":"df.isnull().sum()\n","6f41cb3f":"df['START_DATE']= pd.to_datetime(df['START_DATE'],errors='coerce')\ndf['END_DATE']= pd.to_datetime(df['END_DATE'],errors='coerce')\ndf.info();\n\n\n# Now time object type changes to datetime","d6c025b3":"import missingno as msno\nmsno.bar(df)\nplt.show()","35c322ea":"df.columns","8a545aa3":"df['START_DATE']= pd.to_datetime(df['START_DATE'],errors='coerce')\ndf['END_DATE']= pd.to_datetime(df['END_DATE'],errors='coerce')\ndf.info();\n\n\n# Now time object type changes to datetime","9bf65201":"\nCategory =pd.crosstab(index=df['CATEGORY'],columns='Count of travels as per category')\n\nCategory.plot(kind='bar',color='r',alpha=0.7)\nplt.legend()\nCategory\n","f474cb0a":"Start_point = df.START.value_counts()\nStart_point\nprint(Start_point[Start_point > 10])\n\n\nStart_point[Start_point > 10].plot(kind = \"pie\", shadow=True, startangle=190)\nplt.tight_layout()\nplt.show()\n","5cc5957b":"Start_point = df.START.value_counts()\nStart_point\nStart_point[Start_point <=  10]","20e75185":"Stop_point = df.STOP.value_counts()\nStop_point\nStop_point[Stop_point >=  10]","7f3269f9":"Stop_point = df.STOP.value_counts()\nStop_point\nStop_point[Stop_point <=  10]","caefc650":"Miles = df.MILES.value_counts()\nMiles\nprint(Miles[Miles> 10])\n\n\nMiles[Miles> 10].plot(kind = \"bar\")\nplt.tight_layout()\nplt.show()\n","5091c034":"Miles =pd.crosstab(index=df[\"MILES\"]>10,columns='Count of Miles')\n\nMiles.plot(kind='bar',color='r',alpha=0.7)\nplt.legend()\nMiles\n","bfcb38bd":"print(df.PURPOSE.value_counts())","d4fefa78":"plt.figure(figsize=(15,6))\nsns.countplot(df['PURPOSE'], order=df['PURPOSE'].value_counts().index, palette='viridis')\nplt.show()","7f8f67cf":"# For future Analysis\n\n\n# Lets calculate the duration, as there might be some relation of it to PURPOSE of Cab ride.\ndf['MINUTES'] = df.END_DATE - df.START_DATE\ndf.head(3)","1806027d":"# As Duration is in datetime format, we need to convert it to float type in order to use it for analysis.\ndf['MINUTES'] = df['MINUTES'].dt.total_seconds() \/60\ndf.head()","31bf279c":"pd.DataFrame({'MEAN': df.groupby(['PURPOSE'])['MILES'].mean().round(1), \n              'MIN' : df.groupby(['PURPOSE'])['MILES'].min(), \n              'MAX' : df.groupby([\"PURPOSE\"])['MILES'].max()}).reset_index()","28646f56":"plt.figure(figsize=(16,7))\nplt.subplot(1,2,1)\nsns.boxplot(data=df, x=df.PURPOSE, y=df.MILES)\nplt.xticks(rotation=45)\nplt.subplot(1,2,2)\nsns.boxplot(data=df, x=df.PURPOSE, y=df.MINUTES)\nplt.xticks(rotation=45);","f2129027":"plt.figure(figsize=(16,7))\nplt.subplot(1,2,1)\nsns.boxplot(data=df, x=df.PURPOSE, y=df.MILES,showfliers=False)\nplt.xticks(rotation=45)\nplt.subplot(1,2,2)\nsns.boxplot(data=df, x=df.PURPOSE, y=df.MINUTES,showfliers=False)\nplt.xticks(rotation=45);","a6345283":"# For this purpose, we need to make a function\nplt.figure(figsize=(8,5))\ndef round(x):\n    if x['START'] == x['STOP']:\n        return 'YES'\n    else:\n        return 'NO'\n    \ndf['ROUND_TRIP'] = df.apply(round, axis=1)\n\nsns.countplot(df['ROUND_TRIP'], order=df['ROUND_TRIP'].value_counts().index, palette='rocket_r')\nplt.show()","aadaca57":"df['MONTH'] = pd.DatetimeIndex(df['START_DATE']).month","5d3bf59a":"dic = {1:'Jan', 2: 'Feb', 3: 'Mar', 4: 'April', 5: 'May', 6: 'June', 7: 'July', 8: 'Aug', 9: 'Sep',\n      10: 'Oct', 11: 'Nov', 12: 'Dec' }\n\ndf['MONTH'] = df['MONTH'].map(dic)\n\n\n\n# MAP FUNCTION : Its a build in function\n#       1. This function is used to apply a function to all the elements of a sequence(list,tuple.strings) \n","7fedaf9b":"plt.figure(figsize=(12,7))\nsns.countplot(df['MONTH'], order=df['MONTH'].value_counts().index, palette='deep')\nplt.axhline(df['MONTH'].value_counts().mean(),linestyle='--', color = 'darkred', label='Mean Trips across Months')\nplt.legend()\nplt.show()","caaeeeef":"plt.figure(figsize=(12,7))\na=sns.countplot(df['ROUND_TRIP'],hue=df['MONTH'])\nplt.legend(bbox_to_anchor=(1.05, 0.95), loc=2)\nplt.show()","b65e7d09":"plt.figure(figsize=(16,7))\nplt.subplot(1,2,1)\nsns.boxplot(data=df, x=df.PURPOSE, y=df.MILES, showfliers = False)\nplt.xticks(rotation = 45)\nplt.subplot(1,2,2)\nsns.boxplot(data=df, x=df.PURPOSE, y=df.MINUTES, showfliers = False)\nplt.xticks(rotation = 45);","5d264fa1":"#Plots of MILES with respect to MINUTES\nplt.figure(figsize = (14,5))\nplt.subplot(1,2,1)\nsns.lineplot(data=df, x=df.MINUTES, y=df.MILES)\nplt.grid(True, linestyle = \"--\")\nplt.subplot(1,2,2)\nsns.scatterplot(data=df, x=df.MINUTES, y=df.MILES)\nplt.grid(True, linestyle = \"--\")","2426df97":"# cab rides took more time for less distance.\n\nplt.figure(figsize = (16,5))\n\nplt.subplot(1,2,1)\nn, bins, patches = plt.hist(df.MINUTES)\nplt.xticks(bins.round())\nplt.grid(True, linestyle = \"dotted\")\nplt.title(\"Count of Cab ride MINUTES\")\n\nplt.subplot(1,2,2)\nn, bins, patches = plt.hist(df.MILES)\nplt.xticks(bins.round())\nplt.grid(True, linestyle = \"dotted\")\nplt.title(\"Count of Cab ride MILES\");","d8ea73d2":"plt.figure(figsize = (9,5))\nsns.countplot(data=df,x=\"PURPOSE\", hue = 'CATEGORY', dodge = False)\nplt.xticks(rotation = 45);","1ada3701":"plt.figure(figsize = (15,4))\npd.Series(df['START']).value_counts()[:25].plot(kind=\"bar\")\nplt.title(\"Cab Rides START Location frequency\")\nplt.xticks(rotation = 45);","506aa9eb":"plt.figure(figsize=(15,4))\npd.Series(df['STOP']).value_counts()[:25].plot(kind = \"bar\")\nplt.title(\"Cab Rides STOP Location frequency\")\nplt.xticks(rotation = 45);","516b6744":"g = sns.factorplot(x=\"PURPOSE\", y=\"MILES\", hue=\"CATEGORY\", data=df,\n                   size=15, kind=\"bar\", palette=\"muted\")\n#from the graph is clearly seen that the main contributors for miles are:\n#in Business category: meetings and customer; private: commute and charity \ng.fig.suptitle('Miles was earned per category and purpose', fontsize= 25)\ng.fig.set_size_inches(15, 5)\ng.set_xlabels('PURPOSE', fontsize= 20)\ng.set_ylabels('MILES', fontsize= 20)","3474b047":"### Dataset Description: \n > **The dataset contains Start Date, End Date, Start Location, End Location, Miles Driven and Purpose of drive (Business, Personal, Meals, Errands, Meetings, Customer Support etc.)**","f5c76e4d":"- **head()**Understand your data using the head() function to look at the first few rows.\n- **shape()**Review the dimensions of your data with the shape property.\n- **info()**To know the information aboutvthe data\n- **Dtyes** Look at the data types for each attribute with the dtypes property.\n- **describe**Review the distribution of your data with the describe() function.\n- **Correlation** Calculate pairwise correlation between your variables using the corr() function.","d1db56ee":"**Grouping Purpose by Miles to see if we can get any pattern.**","8b8dd4df":"**Here we can see that 43% of null values present in the dataset in PURPOSE COLUMN.**","7a2bc833":"**Round Trip against Months**","885b8607":"### Which are the places have HIGHEST START points","f2ae41b3":"### Distribution of Cab rides based on Category\n","f950222e":"### Exploratory data analysis (EDA)","a9dcb9f1":"#### Start Date and End Date \nSince the Date and Time  of the start_date and end_date are of data type object we are converting it to datetime","3710b6a5":"**Only Numerical and float data can be describe. Here we can see the mean, median , mode, standard deviation**","8243e534":"**There are very less number of ROUND Trips.** so(yes is low numb i.e round trip)","e7f699d9":"## Frequency of Cab Rides STOP","fc6453e2":"**we see that our conventional logic, that distance is proportional to time, is challenged as some cab rides took more time for less distance.**","3f4c575a":"### Where do customers most frequently take cabs?\n**Frequency of Cab Rides START**","96c3bf36":"**When are cab rides more popular (frequently used)?**","00040c37":"### Purpose of most cab rides","07f93a99":"**Checking how many are the ROUND TRIPS i.e. start and stop points are same**","6e0945b4":"**Grouping Purpose by Miles to see if we can get any pattern.**","30328526":"### Which are the places are having LOWEST START point","1d8b0091":"**Above Purpose column has 502 null values its a categorial**","e40b1ba7":"###  How does the PURPOSE of Cab ride vary with time and distance?","a4b89f91":"**The above plot makes clear distinction on the Purpose of Business rides and Personal rides.\nThis may give insight to cab aggregators to decide which sector to introduce new cabs in.**","2f3de565":"### How many miles was earned per category and purpose ?","543d8b39":"### Which are the places are having LOWEST STOP point","8f972257":"###  BOX Plot for better Visualization\nBOX plot of MILES and MINUTES split by PURPOSE","816799e4":"# Conclusion\n\n> - Most of the cab rides are within a distance of 31 miles taking about 34 minutes.\n> - Business Cab rides are not only more in volume, but also in distance travelled.\n> - Main uses of cab rides are Meal\/Entertainment, Customer visit, Meeting, Errand\/Supplies.\n> - Cab traffic is mostly concentrated in 5 cities or localities.\n> - Ac seasonal pattern of cab ride volume exists, which is highest on December.","5b36a18d":"#### Content\n- **Geography:** USA, Sri Lanka and Pakistan\n\n- **Time period:** January - December 2016\n\n- **Unit of analysis:** Drives\n\n- **Total Drives:** 1,155\n\n- **Total Miles:** 12,204\n","98f18d91":"#### Is the distance proportional to the duration?","db328637":"### Entering Month Name and evaluating Frequency of Trip in each Month","46c39e32":"**Now you can see there is no missing values visually**","e43d82f6":"\n\n**Above are start_pont are low number of starting points**","08982617":"**Above information says Miles is float tye and rest of columns are objective**","af476948":"### Which are the places are having HIGHEST STOP point","1c1a9b3d":"**Boxplots of MILES and MINUTES based on PURPOSE without outliers**","db30ad24":"**Here we can see that, Columns having special characters  we must remove special characters like '*'.**\n","2c279a8a":"> **Above are the lowest stop points**\n","625abae3":"#### Import Libraries","c845b52a":"**Note**\n\n> The places where Cary , Unknown Loccation, Morrisville , Whitebridge and next to Islamabad are highest stop points.\n> Highest stop points are not same as Highest end points , there is a bit difference","23425985":"**Greater than 10 miles**","af881496":"### MILES MOST","2fd0bab5":"**Above pie chart can understand that, Cary, Unknown Location Morrisville ,Whitebridge are highest satrting point**","4f85bf6f":"\n### Lets calculate the duration, as there might be some relation of it to PURPOSE of Cab ride.","9f810129":"## Analysis and Visualization"}}