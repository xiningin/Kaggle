{"cell_type":{"d164a0e3":"code","d3e615da":"code","de58bb11":"code","e36c5506":"code","2550163d":"code","1e8dd0c9":"code","0d76663d":"code","2c2a7b6e":"code","791a275b":"code","836115ee":"code","65bbd051":"code","543166aa":"code","2e6bed6e":"code","1c6d3ea2":"code","4e87ab09":"code","00e7e41d":"code","47f57f6d":"code","dd066d59":"code","0fdc1f10":"code","62dc2889":"code","8e49c24e":"code","84036e32":"markdown","67a668e9":"markdown","17f4c83b":"markdown"},"source":{"d164a0e3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d3e615da":"df = pd.read_csv('..\/input\/iris-flower-dataset\/IRIS.csv')\ndf","de58bb11":"y = df.species","e36c5506":"df.columns","2550163d":"features = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width']\nX = df[features]\nX","1e8dd0c9":"X = df.drop(columns=['species'])\nX","0d76663d":"df","2c2a7b6e":"from sklearn.model_selection import train_test_split \ntrain_X, test_X, train_y, test_y = train_test_split(X, y)","791a275b":"train_X","836115ee":"train_y","65bbd051":"test_X","543166aa":"test_X.shape","2e6bed6e":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier()","1c6d3ea2":"model.fit(train_X, train_y)","4e87ab09":"preds = model.predict(test_X)","00e7e41d":"preds[:5]","47f57f6d":"test_y[:5]","dd066d59":"from sklearn.metrics import accuracy_score \nprint(accuracy_score(y_true=test_y, y_pred=preds))","0fdc1f10":"df.columns","62dc2889":"test_example = pd.DataFrame(data={\n    'sepal_length': [4.9],\n    'sepal_width': [1.4], \n    'petal_length': [5.3], \n    'petal_width': [1.1]\n})","8e49c24e":"model.predict(test_example)","84036e32":"# define y, X, model","67a668e9":"# prediction","17f4c83b":"# train model "}}