{"cell_type":{"efbcd0fc":"code","7b58e1b9":"code","5bed3e1a":"code","466e40d7":"code","29b67575":"code","117b624e":"code","e9431048":"code","1249a7e4":"code","f480adbd":"code","52c19b24":"code","4a5fa1af":"code","d3e46659":"code","392d4152":"code","d07b7db7":"code","ae2e7f15":"code","3a54a20e":"code","24bac795":"code","e3a9af34":"code","3e6c0a16":"code","d0e32dc5":"code","3695f5ca":"code","023b95da":"code","7af3369f":"code","464faa21":"code","5e3f48d3":"code","ea5ccbb7":"code","4151a393":"code","c003dc94":"code","da5195c4":"code","beecb478":"code","40d0f039":"code","b2a63ce4":"code","8ed2834c":"code","69b4695a":"code","4f136b3a":"code","bd80c9da":"code","1bca9ca5":"markdown","0ef03f01":"markdown","02fc7409":"markdown"},"source":{"efbcd0fc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7b58e1b9":"df=pd.read_csv('..\/input\/cardiogoodfitness\/CardioGoodFitness.csv')\ndf.head()","5bed3e1a":"df.describe(include='all')","466e40d7":"df.info()","29b67575":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","117b624e":"df.hist(figsize=(20,30))","e9431048":"sns.boxplot(df.Age, orient='h') ","1249a7e4":"sns.boxplot(x=\"Gender\", y=\"Age\", data=df, orient='v')","f480adbd":"pd.crosstab(df['Product'],df['Gender'] )","52c19b24":"sns.countplot(x=\"Product\", hue=\"Gender\", data=df)","4a5fa1af":"pd.pivot_table(df, index=['Product', 'Gender'],\n                     columns=[ 'MaritalStatus'], aggfunc=len)","d3e46659":"pd.pivot_table(df,'Income', index=['Product', 'Gender'],\n                     columns=[ 'MaritalStatus'])","392d4152":"pd.pivot_table(df,'Miles', index=['Product', 'Gender'],\n                     columns=[ 'MaritalStatus'])","d07b7db7":"sns.pairplot(df)","ae2e7f15":"print(df['Age'].mean())\nprint(df['Age'].std())\nprint(df['Age'].mode())\nprint(df['Age'].median())","3a54a20e":"df.hist(by='Gender',column = 'Age')","24bac795":"df.hist(by='Gender',column = 'Income')","e3a9af34":"df.hist(by='Gender',column = 'Miles')","3e6c0a16":"df.hist(by='Product',column = 'Miles', figsize=(10,20))","d0e32dc5":"df.hist(by='Product',column = 'Miles', figsize=(10,20))","3695f5ca":"corr = df.corr()\ncorr","023b95da":"sns.heatmap(corr, annot=True)","7af3369f":"sns.lmplot(x='Age', y = 'Fitness', data = df, col= \"Product\", aspect = 0.6, height = 5, hue = \"Gender\", palette=\"PuBuGn_r\")","464faa21":"q1, q3= np.percentile(df.Miles, [25,75])","5e3f48d3":"iqr = q3 - q1","ea5ccbb7":"lower_bound = q1 -(1.5 * iqr) \nupper_bound = q3 +(1.5 * iqr)","4151a393":"print(lower_bound)\nprint(upper_bound)","c003dc94":"sorted(df.Miles)","da5195c4":"df.Miles[df.Miles >= upper_bound]","beecb478":"sns.boxplot(data=df.Miles)","40d0f039":"sns.boxplot(data=df)","b2a63ce4":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.svm import LinearSVC\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt","8ed2834c":"X= df[['Fitness','Usage']]\ny = df['Miles']","69b4695a":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","4f136b3a":"lr = LinearRegression()\nlr.fit(X_train,y_train)","bd80c9da":"print(lr.coef_)\nprint(lr.intercept_)","1bca9ca5":"Outlier detection","0ef03f01":"There is high correlation between miles and fitness,miles and usage.","02fc7409":"so the equation obtained will be Miles = -59.33 + 28.88*Fitness + 19.65*Usage"}}