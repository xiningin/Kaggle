{"cell_type":{"9a3936c4":"code","30d72600":"code","6028e979":"code","f840de06":"code","5c8a0865":"code","8f1ed425":"code","e87b8456":"code","f7688b8e":"code","dfa90041":"code","5db0b6c7":"code","5c83a629":"code","caa5a123":"code","de0e848f":"code","30352fd8":"code","cb847518":"code","bf85666d":"code","eea0cf53":"code","e81e60b3":"code","4bf289ce":"code","f8aada41":"code","553dd1c4":"code","bacdb31e":"code","bf07b48c":"markdown","f1c36e49":"markdown","590bbaeb":"markdown","e9222aac":"markdown"},"source":{"9a3936c4":"# import the required libraries \nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","30d72600":"# read the data \ndf = pd.read_csv(\"..\/input\/heart-disease-uci\/heart.csv\")","6028e979":"# display top 5 rows\ndf.head()","f840de06":"# main info \ndf.info()","5c8a0865":"# summary statistics\ndf.describe()","8f1ed425":"# binary classification?\ndf['target'].unique()","e87b8456":"plt.figure(figsize = (7, 3), dpi = 100)\nsns.countplot(data=df, x='target')\nplt.title(\"Count of each class in the target variable\")\nplt.show()","f7688b8e":"# scatter and kde plots\nsns.pairplot(df[['age','trestbps', 'chol','thalach','oldpeak','target']], hue='target')\nplt.show()","dfa90041":"# correlation heatmap\nplt.figure(figsize=(14,10))\nsns.heatmap(df.corr(),cmap='viridis',annot=True, vmin = -1, vmax = 1, fmt=\".2\")\nplt.show()","5db0b6c7":"# Separate the features from the labels into 2 objects, X and y\nX = df.drop('target',axis=1)\ny = df['target']","5c83a629":"# Perform a train test split on the data, with the test size of 10% and a random_state of 101\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=101)","caa5a123":"#Creating a StandardScaler object to normalize the X train and test set feature data\nscaler = StandardScaler()\n\nscaled_X_train = scaler.fit_transform(X_train)\nscaled_X_test = scaler.transform(X_test)","de0e848f":"#Logistic Regression Model\nfrom sklearn.linear_model import LogisticRegressionCV\n\nlog_model = LogisticRegressionCV()\nlog_model.fit(scaled_X_train,y_train)","30352fd8":"# report back the C parameter \nlog_model.C_","cb847518":"# report back all the best parameters \nlog_model.get_params()","bf85666d":"# Creating a visualization of the coefficients by using a barplot of their values\ncoefs = pd.Series(index=X.columns,data=log_model.coef_[0])\ncoefs = coefs.sort_values()\n\nplt.figure(figsize=(10,5), dpi = 100)\nsns.barplot(x=coefs.index,y=coefs.values)\nplt.title('Visualization of the model coefficients')\nplt.show()","eea0cf53":"#import evaluation metrics \nfrom sklearn.metrics import confusion_matrix,classification_report,plot_confusion_matrix","e81e60b3":"#predictions\ny_pred = log_model.predict(scaled_X_test)\n\n#confusion matrix\nconfusion_matrix(y_test,y_pred)","4bf289ce":"#plot confusion matrix\nplot_confusion_matrix(log_model,scaled_X_test,y_test);","f8aada41":"#classification report\nprint(classification_report(y_test,y_pred))","553dd1c4":"#Performance Curves \nfrom sklearn.metrics import plot_precision_recall_curve,plot_roc_curve\n\nplot_precision_recall_curve(log_model,scaled_X_test,y_test);","bacdb31e":"plot_roc_curve(log_model,scaled_X_test,y_test);","bf07b48c":"### Exploratory Data Analysis and Visualization","f1c36e49":"### Building the model ","590bbaeb":"### Data\n\nThis database contains 14 physical attributes based on physical testing of a patient. Blood samples are taken and the patient also conducts a brief exercise test. The \"goal\" field refers to the presence of heart disease in the patient. It is integer (0 for no presence, 1 for presence). In general, to confirm 100% if a patient has heart disease can be quite an invasive process, so if we can create a model that accurately predicts the likelihood of heart disease, we can help avoid expensive and invasive procedures.\n\n**Content**\n\nAttribute Information:\n\n* age\n* sex\n* chest pain type (4 values)\n* resting blood pressure\n* serum cholestoral in mg\/dl\n* fasting blood sugar > 120 mg\/dl\n* resting electrocardiographic results (values 0,1,2)\n* maximum heart rate achieved\n* exercise induced angina\n* oldpeak = ST depression induced by exercise relative to rest\n* the slope of the peak exercise ST segment\n* number of major vessels (0-3) colored by flourosopy\n* thal: 3 = normal; 6 = fixed defect; 7 = reversable defect\n* target:0 for no presence of heart disease, 1 for presence of heart disease\n\nOriginal Source: https:\/\/archive.ics.uci.edu\/ml\/datasets\/Heart+Disease","e9222aac":"### Model Performance Evaluation"}}