{"cell_type":{"8e56fba0":"code","f8d003e2":"code","68f77595":"code","6f6448a0":"code","b2978298":"code","75f11059":"code","a8d40f2f":"code","8e283a83":"code","99817ae2":"code","c33dbcdb":"code","788db610":"code","30968176":"code","aacd4684":"code","052a4ab4":"code","df1176ed":"code","d1647993":"code","a0287f0c":"code","ee35367b":"code","db188920":"markdown","e35d41cd":"markdown","3b54e80a":"markdown","cbb1cd2a":"markdown","320d98ec":"markdown","e7a418f0":"markdown","8cb090d7":"markdown","3b7c602a":"markdown","86664137":"markdown","e0f4bd80":"markdown","6b6ff323":"markdown","549d225c":"markdown","22f523ff":"markdown","7f0a3412":"markdown","975aaf53":"markdown","7797cc47":"markdown","f952bff9":"markdown","bc05068d":"markdown","4980508e":"markdown","864edcb8":"markdown","4af9217c":"markdown","26bb80ae":"markdown","3b31b06c":"markdown","bf64ab29":"markdown","84ce5cd7":"markdown","b8499693":"markdown","d630eba2":"markdown","0ef172e8":"markdown"},"source":{"8e56fba0":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport sqlite3\n\n%matplotlib inline","f8d003e2":"conn = sqlite3.connect('..\/input\/south-africa-cricket-data-from-2000-to-2020\/sa_cricket.db')\ncursor = conn.cursor()","68f77595":"query = '''select\n            strftime(\"%Y\", m.match_date) as Year, \n            strftime(\"%m\", m.match_date) as Month,\n            m.match_date as Date,\n            o.opp_name as Opposition,\n            g.ground_name as Ground,\n            g.country as Host,\n            m.result as Result,\n            m.toss as Toss\n            from mat as m join\n            opposition as o join\n            ground as g\n            where m.opposition=o.opp_id and m.ground=g.ground_id;\n        '''\ndf = pd.read_sql_query(query, conn)\ndf.head()","6f6448a0":"def winner(result):\n    '''\n    Input game result e.g 'India led the 5-match series 1-0'\n    Return Winner e.g 'India'\n    '''\n    if result == '':\n        # This are non-tour games such as world cup and series\n        winner = 'No result'\n    else:\n        if 'led' in result:\n            winner = result.split(' led ')[0]\n        elif 'won' in result:\n            winner = result.split(' won ')[0]\n        elif 'advanced' in result:\n            winner = result.split(' advanced')[0]\n        # There would be a need to handle cases like:\n        # 3-match series level 1-1\n        # 3-match series drawn 1-1\n        elif 'level' in result:\n            winner = 'Unknown-level'\n        elif 'drawn' in result:\n            winner = 'Unknown-draw'\n        else:\n            winner = 'Unknown'\n    return winner\n    '''\n    The options from above are:\n        [Country]\n        No result\n        Unknown*\n    I believe it would better to somehow find winners among Unknown*s\n    '''    ","b2978298":"def point(result):\n    '''\n    To make things simpler so that outcome of winner is either:\n        1 for Win\n        0 for Unknown or No result\n        -1 for Losses\n    '''\n    w = winner(result)\n    if ('Unknown' in w) or w=='No result':\n        return 0\n    elif w=='South Africa':\n        return 1\n    else:\n        return -1","75f11059":"'''\nGet tosser and their choice from toss e.g 'South Africa , elected to bat first'\n'''\ndef tosser(t):\n    t_split = t.split(' , elected to ')\n    tosser = t_split[0]\n    return tosser\n\ndef toss(t):\n    # Return 1 if South Africa tossed\n    toss = tosser(t)\n    if toss=='South Africa':\n        return 1\n    else:\n        return 0\n\ndef choice(t):\n    t_split = t.split(' , elected to ')\n    choice = t_split[1]\n    return choice","a8d40f2f":"df['Point'] = df['Result'].apply(point)\ndf['Tossed'] = df['Toss'].apply(toss)\ndf['Toss Choice'] = df['Toss'].apply(choice)\n\n# Drop Result and Toss after getting what's needed\ndf.drop(['Result', 'Toss'], axis=1, inplace=True)\ndf.head()","8e283a83":"# Number of matches played each month since 2000\nmatch_by_month = df.groupby(by='Month').count()['Point']   #\/20 to get the average\nmatch_by_month.plot(kind='bar', figsize=(14,6))\nplt.title('Matches played in 2000s')\nplt.ylabel('Matches')\nplt.xlabel('Month')\nplt.xticks(rotation=0)\nplt.show()","99817ae2":"# Number of matches played each month since 2000\n\n'''\n# This commented section does the same thing as win_by_month.\n# Kept for reference purpose\nmatch_by_month = df[['Month', 'Point']].groupby(by=['Month','Point'], as_index=False)\nmatch_by_month.size().unstack(fill_value=0)\n'''\n\nwin_by_month = df.pivot_table(index='Month', columns='Point', aggfunc='size', fill_value=0)\nwin_by_month.rename(columns={0: 'Unknown', -1: 'Lost', 1: 'Won'}, inplace=True)\n","c33dbcdb":"# Total games that leads to either a win or loss\nwin_by_month['Total Games'] = win_by_month['Lost'] + win_by_month['Won']\n\n# Percent of Total games won\nwin_by_month['Percent Won'] = (win_by_month['Won'] * 100) \/ win_by_month['Total Games']\n\n# Absolute total of games played including '-' result\nwin_by_month['Absolute Total'] = win_by_month['Total Games'] + win_by_month['Unknown']\n\n# Drop column name\nwin_by_month.columns.name=''\n\nwin_by_month","788db610":"win_by_month['Percent Won'].plot(kind='bar', figsize=(14,6))\nplt.xticks(rotation=0)\nplt.ylabel('Victory (%)')\nplt.title('Percentage of games won')\nplt.show()","30968176":"win_by_month.corr()['Percent Won']","aacd4684":"win_by_year = df.pivot_table(index='Year', columns='Point', aggfunc='size', fill_value=0)\nwin_by_year.rename(columns={0: 'Unknown', -1: 'Lost', 1: 'Won'}, inplace=True)","052a4ab4":"# Total games that leads to either a win or loss\nwin_by_year['Total Games'] = win_by_year['Lost'] + win_by_year['Won']\n\n# Percent of Total games won\nwin_by_year['Percent Won'] = (win_by_year['Won'] * 100) \/ win_by_year['Total Games']\n\n# Absolute total of games played including '-' result\nwin_by_year['Absolute Total'] = win_by_year['Total Games'] + win_by_year['Unknown']\n\n# Drop column name\nwin_by_year.columns.name=''\n\nwin_by_year","df1176ed":"plt.figure(figsize=(14,6))\nplt.plot(win_by_year.index, win_by_year['Percent Won'], '--bo')\nplt.xticks(rotation=0)\nplt.ylabel('Victory')\nplt.xlabel('Year')\nplt.title('Percentage of games won')\nplt.show()","d1647993":"win_by_tosser = df.pivot_table(index='Tossed', columns='Point', aggfunc='size', fill_value=0)\nwin_by_tosser.rename(columns={0: 'Unknown', -1: 'Lost', 1: 'Won'}, index={0: 'Opposition', 1: 'South Africa'}, inplace=True)\n\n# Percent of games won\nwin_by_tosser['Percent'] = (win_by_tosser['Won'] * 100) \/ (win_by_tosser['Won'] + win_by_tosser['Lost'])\n\n# Drop column name\nwin_by_tosser.columns.name=''\nwin_by_tosser.head()","a0287f0c":"# Choice is a little more complicated. The choice is for the tosser (not 'South Africa')\nwin_by_toss = df.pivot_table(index=['Tossed', 'Toss Choice'], columns='Point', aggfunc='size', fill_value=0)\nwin_by_toss.rename(columns={0: 'Unknown', -1: 'Lost', 1: 'Won'}, index={0: 'Opposition', 1: 'South Africa'}, inplace=True)\n\n# Percent of games won\nwin_by_toss['Percent'] = (win_by_toss['Won'] * 100) \/ (win_by_toss['Won'] + win_by_toss['Lost'])\n\nwin_by_toss.head()","ee35367b":"cursor.close()\nconn.close()","db188920":"<hr>","e35d41cd":"<br><hr><br>","3b54e80a":"### Which months do players perform best?<a id='month'><\/a>","cbb1cd2a":"#### There's no strong correlation between Percent and anything else except Losses","320d98ec":"#### The first three months are most busy and followed immediately with the least busy months.\nThe last month is understandable (christmas and holiday period)","e7a418f0":"## Close database connection<a id='close-db'><\/a>","8cb090d7":"## Contents\n\n<ul>\n    <li><a href='#imp-mod'>Import modules<\/a><\/li>\n    <li><a href='#conn-db'>Connect to database<\/a><\/li>\n    <li><a href='#preprocess'>Preprocessing<\/a><\/li>\n    <li><a href='#analysis'>Match analysis<\/a><\/li>\n    <ul>\n        <li><a href='#period'>Which periods of the year are most busy?<\/a><\/li>\n        <li><a href='#month'>Which months do players perform best?<\/a><\/li>\n        <li><a href='#corr'>What is the correlation between number of matches played and ability to win?<\/a><\/li>\n        <li><a href='#year'>How prosperous has South Africa been over the years in the 21st century?<\/a><\/li>\n        <li><a href='#toss'>Should South Africa toss, field or bat first?<\/a><\/li>\n    <\/ul>\n    <li><a href='#close-db'>Close database connection<\/a><\/li>\n<\/ul>","3b7c602a":"God! I repeated this so much. Almost done before noticed\n\n`win_by_\\*.rename(columns={0: 'Unknown', -1: 'Lost', 1: 'Won'}, inplace=True)`\n\nNext time, decide before you return. Just kidding, even right now I'm still confused on whether to return int or str for toss. ","86664137":"### What is the correlation between number of matches played and ability to win?<a id='corr'><\/a>","e0f4bd80":"### Should South Africa field or bat first?<a id='toss'><\/a>\n\n#### Should they even pray to have the toss?","6b6ff323":"<hr>","549d225c":"## Import modules<a id='imp-mod'><\/a>","22f523ff":"## Match analysis<a id='analysis'><\/a>","7f0a3412":"<br><hr><br>","975aaf53":"### How prosperous has South Africa been over the years in the 21st century?<a id='year'><\/a>","7797cc47":"#### The Best Months are June and December. The most with least games.\n\nAlso note that the best month is followed immediately by worst month, August.\nWhy? There's just a little increase in the number of games played","f952bff9":"<hr>","bc05068d":"#### There ain't much difference if South Africa has the toss and from the analysis below, fielding or batting first does not drastically change their chance of winning","4980508e":"## Preprocessing<a id='preprocess'><\/a>","864edcb8":"## Connect to database<a id='conn-db'><\/a>","4af9217c":"<hr>","26bb80ae":"<br><hr><br>","3b31b06c":"Holy shit!\nWhat the heck happened in 2001-2004 and 2011?\n\n2020 is still fresh but they are starting strong. 2020 has the least total games, 4.\n\n2003 and 2011 have the least total games after 2020. Maybe some results have been misplaced as unknown. \nThe drastic change might partly be caused by me.\n","bf64ab29":"<br><hr><br>","84ce5cd7":"# EXPLORATORY ANALYSIS OF VICTORY IN THE 21ST CENTURY","b8499693":"<hr>","d630eba2":"### Which periods of the year are most busy?<a id='period'><\/a>","0ef172e8":"<hr>"}}