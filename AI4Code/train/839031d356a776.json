{"cell_type":{"52c710d6":"code","ee78c7ee":"code","5341ed71":"code","b211d0be":"code","4bc62206":"code","77694e18":"code","2616b97d":"code","6a502aa9":"code","051fc042":"code","e5dc2af2":"code","0c336001":"code","5bfc84f5":"code","56581001":"code","cb71f998":"code","7681a15b":"code","7a3cea35":"code","fbd1f4e3":"code","9cd31223":"code","9c252460":"code","a7313949":"markdown","abc5e16a":"markdown"},"source":{"52c710d6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\ndf=pd.read_csv(\"..\/input\/existing-buildings-energy-water-efficiency-ebewe-program.csv\")","ee78c7ee":"df.head()","5341ed71":"df.count()","b211d0be":"df=df.drop(['BUILDING ADDRESS'],axis=1)","4bc62206":"df_RN = df.rename(columns={'BUILDING ID': 'BuildingId','POSTAL CODE':'PostalCode',\n                        'ENTITY RESPONSIBLE FOR BENCHMARK':'EntityResponseForBenchmark',\n                        'COMPLIANCE STATUS':'CompilanceStatus',\n                        'PROPERTY TYPE':'PropertyType','ENERGY STAR SCORE':'EnergyStarScore',\n                        'SITE ENERGY USE INTENSITY (EUI) (kBtu\/ft\u00b2)':'SiEUI',\n                        'SOURCE ENERGY USE INTENSITY (EUI) (kBtu\/ft\u00b2)':'SoEUI',\n                        'WEATHER NORMALIZED SITE ENERGY USE INTENSITY (EUI) (kBtu\/ft\u00b2)':'WNSiEUI',\n                        'WEATHER NORMALIZED SOURCE ENERGY USE INTENSITY (EUI) (kBtu\/ft\u00b2)':'WNSoEUI',\n                        'CARBON DIOXIDE EMISSIONS (Metric Ton CO2e)':'CDE',\n                        'INDOOR WATER USE (kgal)':'IWU',\n                        'INDOOR WATER INT (gal\/ft\u00b2)':'IWI',\n                        'OUTDOOR WATER USE (kgal)':'OWU',\n                        'TOTAL WATER USE (kgal)':'TWU',\n                        'GROSS BUILDING FLOOR AREA (ft\u00b2)':'GBFA',\n                        'PROGRAM YEAR': 'PROGRAM_YEAR'})","77694e18":"df_RN.head()","2616b97d":"df_RN_clear=df_RN.dropna(how='any')","6a502aa9":"df_RN_clear.head()","051fc042":"df_RN_clear.count()","e5dc2af2":"df_RN_clear = df_RN_clear.drop(df_RN_clear[df_RN_clear.EnergyStarScore=='Not Available'].index)\ndf_RN_clear = df_RN_clear.drop(df_RN_clear[df_RN_clear.SiEUI=='Not Available'].index)\ndf_RN_clear = df_RN_clear.drop(df_RN_clear[df_RN_clear.SoEUI=='Not Available'].index)\ndf_RN_clear = df_RN_clear.drop(df_RN_clear[df_RN_clear.WNSiEUI=='Not Available'].index)\ndf_RN_clear = df_RN_clear.drop(df_RN_clear[df_RN_clear.WNSoEUI=='Not Available'].index)\ndf_RN_clear = df_RN_clear.drop(df_RN_clear[df_RN_clear.CDE=='Not Available'].index)\ndf_RN_clear = df_RN_clear.drop(df_RN_clear[df_RN_clear.IWU=='Not Available'].index)\n#df_RN_clear = df_RN_clear.drop(df_RN_clear[df_RN_clear.IWI=='Not Available'].index)\ndf_RN_clear.head()","0c336001":"print(df_RN_clear.EntityResponseForBenchmark.unique().shape)\nprint(df_RN_clear.CompilanceStatus.unique().shape)\nprint(df_RN_clear.PropertyType.unique().shape)","5bfc84f5":"df_RN_clear['BuildingId']=df_RN_clear['BuildingId'].astype(str) \ndf_RN_clear['BuildingId']= df_RN_clear['BuildingId'].str.extract('(\\d+)', expand=False)\ndf_RN_clear['BuildingId']=df_RN_clear.BuildingId.astype(int) \ndf_RN_clear['PROGRAM_YEAR']=df_RN_clear.PROGRAM_YEAR.astype(int)\ndf_RN_clear['GBFA']=df_RN_clear['GBFA'].astype(str) \ndf_RN_clear['GBFA']= df_RN_clear['GBFA'].str.extract('(\\d+)', expand=False)\ndf_RN_clear['GBFA']=df_RN_clear['GBFA'].astype(int) \ndf_RN_clear['TWU']=df_RN_clear['TWU'].astype(str) \ndf_RN_clear['TWU']= df_RN_clear['TWU'].str.extract('(\\d+)', expand=False)\ndf_RN_clear['TWU']=df_RN_clear['TWU'].astype(float) \n#df_RN_clear['TWU']=df_RN_clear.TWU.astype(int) \n#df_RN_clear['EnergyStarScore']=df_RN_clear['EnergyStarScore'].astype(str) \n#df_RN_clear['EnergyStarScore']= df_RN_clear['EnergyStarScore'].str.extract('(\\d+)', expand=False)\ndf_RN_clear['EnergyStarScore']=df_RN_clear['EnergyStarScore'].astype(float) \n#df_RN_clear['EnergyStarScore']=df_RN_clear['EnergyStarScore'].astype(int) \n#df_RN_clear['SiEUI']=df_RN_clear.TWU.astype(str) \n#df_RN_clear['SiEUI']= df_RN_clear['SiEUI'].str.extract('(\\d+)', expand=False)\ndf_RN_clear['SiEUI']=df_RN_clear['SiEUI'].astype(float) \n#df_RN_clear['SiEUI']=df_RN_clear['SiEUI'].astype(int) \n#df_RN_clear['SoEUI']=df_RN_clear.TWU.astype(str) \n#df_RN_clear['SoEUI']= df_RN_clear['SoEUI'].str.extract('(\\d+)', expand=False)\ndf_RN_clear['SoEUI']=df_RN_clear['SoEUI'].astype(float) \n#df_RN_clear['SoEUI']=df_RN_clear['SoEUI'].astype(int) \n#df_RN_clear['WNSiEUI']=df_RN_clear.TWU.astype(str) \n#df_RN_clear['WNSiEUI']= df_RN_clear['WNSiEUI'].str.extract('(\\d+)', expand=False)\ndf_RN_clear['WNSiEUI']=df_RN_clear['WNSiEUI'].astype(float)\n#df_RN_clear['WNSiEUI']=df_RN_clear['WNSiEUI'].astype(int)\n#df_RN_clear['WNSoEUI']=df_RN_clear.TWU.astype(str) \n#df_RN_clear['WNSoEUI']= df_RN_clear['WNSoEUI'].str.extract('(\\d+)', expand=False)\ndf_RN_clear['WNSoEUI']=df_RN_clear['WNSoEUI'].astype(float) \n#df_RN_clear['WNSoEUI']=df_RN_clear['WNSoEUI'].astype(int) \n#df_RN_clear['CDE']=df_RN_clear.TWU.astype(str) \n#df_RN_clear['CDE']= df_RN_clear['CDE'].str.extract('(\\d+)', expand=False)\ndf_RN_clear['CDE']=df_RN_clear['CDE'].astype(float) \n#df_RN_clear['CDE']=df_RN_clear['CDE'].astype(int) \n#df_RN_clear['IWU']=df_RN_clear.TWU.astype(str) \n#df_RN_clear['IWU']= df_RN_clear['IWU'].str.extract('(\\d+)', expand=False)\ndf_RN_clear['IWU']=df_RN_clear['IWU'].astype(float) \n#df_RN_clear['IWU']=df_RN_clear['IWU'].astype(int) \ndf_RN_clear['OWU']=df_RN_clear['OWU'].astype(str) \ndf_RN_clear['OWU']= df_RN_clear['OWU'].str.extract('(\\d+)', expand=False)\ndf_RN_clear['OWU']=df_RN_clear['OWU'].astype(float) \n#df_RN_clear['OWU']=df_RN_clear['OWU'].astype(int) \n#df_RN_clear['IWI']=df_RN_clear.TWU.astype(str) \n#df_RN_clear['IWI']= df_RN_clear['IWI'].str.extract('(\\d+)', expand=False)\ndf_RN_clear['IWI']=df_RN_clear['IWI'].astype(float) \n#df_RN_clear['IWI']=df_RN_clear['IWI'].astype(int) ","56581001":"print(np.isfinite(df_RN_clear['SiEUI']).size)\nprint(np.isfinite(df_RN_clear['SoEUI']).size)\nprint(np.isfinite(df_RN_clear['GBFA']).size)\nprint(np.isfinite(df_RN_clear['BuildingId']).size)","cb71f998":"df_RN_clear.dtypes","7681a15b":"df_RN_clear= pd.get_dummies(df_RN_clear, prefix='CS_', columns=['CompilanceStatus'])\ndf_RN_clear= pd.get_dummies(df_RN_clear, prefix='PT_', columns=['PropertyType'])\ndf_RN_clear=df_RN_clear.drop(['EntityResponseForBenchmark'],axis=1)","7a3cea35":"df_RN_clear.head()","fbd1f4e3":"import seaborn as sns\nimport matplotlib.pyplot as pl\n\nf, ax = pl.subplots(figsize=(10, 10))\ncorr = df_RN_clear.corr()\nsns.heatmap(corr, mask=np.zeros_like(corr, dtype=np.bool), cmap=sns.diverging_palette(220, 10, as_cmap=True),\n            square=True, ax=ax)","9cd31223":"df_1=df_RN_clear[['EnergyStarScore','SiEUI','SoEUI','WNSiEUI','WNSoEUI','CDE','IWU','IWI','TWU','PT__Hospital (General Medical & Surgical), Parking','PT__Hotel']].copy()\nf, ax = pl.subplots(figsize=(10, 10))\ncorr = df_1.corr()\nsns.heatmap(corr, mask=np.zeros_like(corr, dtype=np.bool), cmap=sns.diverging_palette(220, 10, as_cmap=True),\n            square=True, ax=ax)","9c252460":"from sklearn.preprocessing import StandardScaler\nX=df_RN_clear.loc[:,['SiEUI','SoEUI','WNSiEUI','WNSoEUI','CDE','IWU','TWU']].values\nY=df_RN_clear.loc[:,'PT__Hospital (General Medical & Surgical), Parking'].values\n\nimport statsmodels.formula.api as sm\n\n#reg=sm.OLS(endog=Y,exog=X).fit()\n#reg.summary()\n","a7313949":"Althought corelation between marked parameters is almost 1, values ar diffrent. The possible explanation is, the it is the same value but differently calculated","abc5e16a":"There is string correlation between:\n1. Energy Star Score\n1. All of parameter that were shorted- energy, emission, water\n1. PT__Hospital (General Medical & Surgical), Parking- this values is between :PT__Hospital (General Medical & Surgical), Medical Office, Parking and PT_Hotel\n1. So one may conclude- the better building is the higher energu and watter consumption \n1. The highest consumption is in PT__Hospital (General Medical & Surgical), Parking"}}