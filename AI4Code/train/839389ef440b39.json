{"cell_type":{"13c9c5ff":"code","25d17f3d":"code","ff07ecaa":"code","36eab122":"code","2874d5ba":"code","5e5409ad":"code","27ca0566":"code","f57817a2":"markdown"},"source":{"13c9c5ff":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n# Seaborn style\nsns.set(rc={'figure.figsize':(30,12)})\nsns.set_style(\"darkgrid\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","25d17f3d":"# Review current working directory\nprint(f'WD = {os.getcwd()}')","ff07ecaa":"# Bring in the training dataset\ndf = pd.read_csv('\/kaggle\/input\/daily-climate-time-series-data\/DailyDelhiClimateTrain.csv', parse_dates=['date']).set_index('date')\ndf.head()","36eab122":"# Visualise the data with a slider\nfig = px.line(df, x=df.index, y='humidity', title='Humidity with slider')\nfig.update_xaxes(rangeslider_visible=True)\nfig.show()","2874d5ba":"# Test for stationarity\nfrom statsmodels.tsa.stattools import adfuller, kpss\n\n# ADF Test\nresult = adfuller(df['humidity'], autolag='AIC')\nprint(f'ADF Statistic: {result[0]}')\nprint(f'p-value: {result[1]}')\n\nif result[1] > 0.05:\n    print('Series is not Stationary')\nelse:\n    print('Series is Stationary')\n\n\n# KPSS Test\nstats, p, lags, critical_values = kpss(df['humidity'], 'ct')\nprint(f'KPSS Test Statistics: {stats}')\nprint(f'p-value: {p}')\n\nif p<0.05:\n      print('Series is not Stationary')\nelse:\n      print('Series is Stationary')","5e5409ad":"# Autocorrelation testing\nfrom statsmodels.tsa.stattools import acf, pacf\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n\n# Calculate ACF and PACF upto 50 lags\nacf_50 = acf(df['humidity'], nlags=50)\npacf_50 = pacf(df['humidity'], nlags=50)\n\n# Draw Plot\nfig, axes = plt.subplots(1,2,figsize=(16,3), dpi= 100)\nplot_acf(acf_50, lags=50, ax=axes[0])\nplot_pacf(pacf_50, lags=24, ax=axes[1])","27ca0566":"# Decomposition of the time series\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom dateutil.parser import parse\n# Additive Decomposition\nresult_add = seasonal_decompose(df['humidity'], model='additive', extrapolate_trend='freq')\n# Plot\nresult_add.plot().suptitle('Additive Decompose', fontsize=22);","f57817a2":"# Time Series Data Analysis\n***\nReviewing the Delhi Climate datasets\n\nhttps:\/\/www.kaggle.com\/sumanthvrao\/daily-climate-time-series-data"}}