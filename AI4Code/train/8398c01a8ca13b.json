{"cell_type":{"6a12d3d4":"code","3e753f3c":"code","ced7bfd0":"code","b384282b":"code","788d4fac":"code","9775ba5b":"code","08e88c11":"code","e3a45e95":"code","0ee68e3d":"code","e9b74e14":"code","04a48284":"code","415e170a":"code","8657b52b":"code","eef980ae":"code","be2669c5":"code","0df5ccbd":"code","a2368cde":"code","01c3f57c":"code","41615ea4":"markdown","8989f7bf":"markdown","79c734fa":"markdown","3086096a":"markdown","84dd53d6":"markdown"},"source":{"6a12d3d4":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline","3e753f3c":"df=pd.read_csv('..\/input\/mushroom-classification\/mushrooms.csv')","ced7bfd0":"df.head()","b384282b":"df.isnull().sum()","788d4fac":"from sklearn.preprocessing import LabelEncoder\nEncoder=LabelEncoder()","9775ba5b":"for col in df.columns:\n    df[col]=Encoder.fit_transform(df[col])","08e88c11":"df.head()","e3a45e95":"df.dtypes","0ee68e3d":"plt.hist(df['class'])","e9b74e14":"X=df.iloc[:,1:23]\ny=df[['class']]","04a48284":"X.head()","415e170a":"y.head()","8657b52b":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","eef980ae":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","be2669c5":"X_train[0]","0df5ccbd":"from sklearn.ensemble import RandomForestClassifier\nRF=RandomForestClassifier()\nRF.fit(X_train,y_train)","a2368cde":"from sklearn.metrics import accuracy_score,confusion_matrix\npred=RF.predict(X_test)\n\nprint(accuracy_score(pred,y_test))\nprint(confusion_matrix(pred,y_test))","01c3f57c":"pred","41615ea4":"# Splitting the data into, Train and Test!","8989f7bf":"# Let's see wheather we have any Null values present.","79c734fa":"# Now, Using StandardScaler, we'll scale our data, which will help us gain much better Accuracy!","3086096a":"# Now Let's use LabelEncoder, to convert our categorical Values, in Numeric Labels, using a Simple \"For\" Loop!","84dd53d6":"# Let's see how many values, does each class has!"}}