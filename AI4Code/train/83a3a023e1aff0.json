{"cell_type":{"175c59fb":"code","51faae50":"code","099e55a3":"code","49441ce4":"code","51558646":"code","67983ffb":"code","9002d7f2":"code","6a86aa1c":"code","24b31662":"code","087d89be":"code","bdc1ff60":"code","bf87921c":"code","778c5dcc":"code","a226de0a":"code","2696bd96":"code","ef9673ed":"code","b8207cc0":"code","ed40de86":"code","004a5742":"code","df64b275":"code","ed50df46":"code","ad676489":"code","90bfc076":"code","3fe2a817":"code","99ff9445":"code","00b5d8fb":"code","70963809":"code","447124a9":"code","4aa2bd62":"code","40f4c452":"code","57c020b2":"code","a144535d":"code","1ef77215":"code","5b15310c":"code","2dc48d00":"code","4920b7ee":"code","fd707629":"code","9e1193ea":"code","4e7f5d6c":"code","1467e361":"code","2cef573c":"code","7c5794cf":"code","64270268":"code","2149205c":"code","6a9a377b":"code","8e97f7cc":"code","6bcefbbd":"code","54f28917":"code","a0d589c9":"code","f245357a":"code","345045de":"code","ef3ff07f":"code","214aa0a9":"code","82b9f4ca":"code","794a2ea1":"code","8feff427":"code","8410d5e5":"code","f9d58d93":"code","ae83b1bb":"code","b2ec3e36":"code","1f2973fe":"code","b4e9f0a6":"code","410f126b":"code","519d11c6":"code","13325202":"code","2be96462":"code","c1c30a5f":"code","6780132b":"code","caffae5a":"code","96ba175e":"code","7010e9d3":"code","05d51eb6":"markdown","8c822c8d":"markdown","c8003d70":"markdown","d52d008b":"markdown","c6724dff":"markdown","8d79b2bc":"markdown","6b40d720":"markdown","2736673e":"markdown","9bbf299d":"markdown","fdc58fb6":"markdown","f0040df6":"markdown","bcd89a3c":"markdown","50365be0":"markdown","075f7b17":"markdown","86e2ada0":"markdown","f7817702":"markdown","68fad99c":"markdown","36d57f70":"markdown","859e22fa":"markdown","664f438e":"markdown","e55dac35":"markdown","f1e2ffc2":"markdown","f55dbdb1":"markdown","26eb6199":"markdown","3327fd4b":"markdown","30aa64f5":"markdown","25fcacab":"markdown","bf2b05d8":"markdown","325005a5":"markdown","b4104b7a":"markdown","ffe93475":"markdown","a4ce9548":"markdown","ad3fb8af":"markdown","64b54370":"markdown","2f85edfc":"markdown","8f0e5296":"markdown"},"source":{"175c59fb":"import numpy as np\nimport pandas as pd","51faae50":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set_style('whitegrid')\n\n%matplotlib inline","099e55a3":"import plotly.graph_objs as go\nimport plotly.offline as iplot\nimport plotly.express as px","49441ce4":"import warnings\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","51558646":"df = pd.read_csv(\"..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv\")","67983ffb":"df.head()","9002d7f2":"df.info()","6a86aa1c":"df.shape","24b31662":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')\n\nplt.show()","087d89be":"df.describe()","bdc1ff60":"df.columns","bf87921c":"sns.pairplot(df)\n\nplt.show()","778c5dcc":"df['Genre'].unique()","a226de0a":"print(df['Genre'].value_counts())\nprint('\\n')\n\npx.pie(data_frame=df,names =df['Genre'].value_counts().index, values= df['Genre'].value_counts(),hole = 0.41,\n      title = 'Quantity per Genre')","2696bd96":"print('Number of unique books : ',df['Name'].nunique())\nprint('Number of unique authors : ', df['Author'].nunique())","ef9673ed":"user_rating = df.groupby('Year')['User Rating'].agg(['min','max','mean']).reset_index()","b8207cc0":"user_rating","ed40de86":"user_rating.columns = ['year','min_rating','max_rating','mean_rating']","004a5742":"px.line(data_frame=user_rating,x = 'year',y = ['min_rating','max_rating','mean_rating'],\n       title = 'Min_Max_Average User Rating per Year')","df64b275":"price = df.groupby('Year')['Price'].agg(['min','max','mean']).reset_index()","ed50df46":"price","ad676489":"price.columns = ['year','min_price','max_price','mean_price']","90bfc076":"px.line(data_frame=price,x = 'year',y = ['min_price','max_price','mean_price'],\n       title= 'Min_Max_Average Price per Year')","3fe2a817":"plt.figure(figsize = (13,7))\n\nsns.boxplot(x = 'Year', y = 'Price', data = df, hue = 'Genre')\n\nplt.title('Price Distibution of Books by Genre per Year',fontsize = 19)\nplt.xlabel('Year',fontsize = 13)\nplt.ylabel('Price',fontsize = 13)\n\nplt.show()","99ff9445":"reviews = df.groupby('Year')['Reviews'].agg(['min','max','mean']).reset_index()","00b5d8fb":"reviews.columns = ['year','min_reviews','max_reviews','mean_reviews']\nreviews","70963809":"px.line(data_frame=reviews,x = 'year',y = ['min_reviews','max_reviews','mean_reviews'],\n       title = 'Min_Max_Average Reviews per Year')","447124a9":"author = df.groupby('Author')['User Rating'].agg(['min','max','mean']).reset_index()","4aa2bd62":"author.head()","40f4c452":"author.shape","57c020b2":"author2 = df.groupby('Author')['Name'].count().reset_index().sort_values(by = 'Name',ascending = False)","a144535d":"author2.columns = ['Author','No of Books']","1ef77215":"author2.head()","5b15310c":"author2.shape","2dc48d00":"df.groupby('Year')['Genre'].value_counts()","4920b7ee":"plt.figure(figsize=(11,7))\n\nsns.countplot(x = 'Year' , data = df,hue = 'Genre')\nplt.title('Number of Books by Genre per Year',fontsize = 19)\nplt.xlabel('Year',fontsize = 13)\nplt.ylabel('Number of Books',fontsize = 13)\n\nplt.show()","fd707629":"cat_col = [col for col in df.columns if df[col].dtype == 'object']","9e1193ea":"print('Categorical columns: \\n',cat_col)","4e7f5d6c":"num_col = [col for col in df.columns if df[col].dtype != 'object']","1467e361":"print('Numerical columns: \\n',num_col)","2cef573c":"from sklearn.preprocessing import LabelEncoder","7c5794cf":"encoder = LabelEncoder()","64270268":"df['Author'] = encoder.fit_transform(df['Author'])","2149205c":"df['Genre'] = encoder.fit_transform(df['Genre'])","6a9a377b":"df.head()","8e97f7cc":"def plot(df,col):\n    fig,(ax1,ax2) = plt.subplots(2,1)\n    sns.distplot(df[col],ax = ax1)\n    sns.boxplot(df[col],ax = ax2)","6bcefbbd":"plot(df,'Price')","54f28917":"df['Price'] = np.where(df['Price']>40, df['Price'].median(),df['Price'])","a0d589c9":"plot(df,'Price')","f245357a":"plot(df,'Reviews')","345045de":"df['Reviews'] = np.where(df['Reviews'] >40000,df['Reviews'].median(),df['Reviews'] )","ef3ff07f":"plot(df,'Reviews')","214aa0a9":"sns.heatmap(df.corr(), annot= True, linewidths=1,linecolor='white')\n\nplt.show()","82b9f4ca":"# Independent Variable\nX = df.drop(['User Rating','Name'], axis = 1)","794a2ea1":"# Dependent Variable\ny = df['User Rating']","8feff427":"from sklearn.model_selection import train_test_split","8410d5e5":" X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=101)","f9d58d93":"from sklearn.linear_model import LinearRegression","ae83b1bb":"lm = LinearRegression()","b2ec3e36":"lm.fit(X_train,y_train)","1f2973fe":"predictions = lm.predict(X_test)","b4e9f0a6":"# Comparing actual Vs predicted\nact_pred = pd.DataFrame({'actual':y_test,'predicted':predictions})\nact_pred.head()","410f126b":"sns.lmplot(data = act_pred,x = 'actual',y = 'predicted')\n\nplt.show()","519d11c6":"sns.distplot(y_test-predictions,bins=50)\n\nplt.show()","13325202":"print(lm.intercept_)","2be96462":"print('Coefficient: \\n',lm.coef_)","c1c30a5f":"coeff_df = pd.DataFrame(lm.coef_,X.columns,columns=['Coefficient'])\ncoeff_df","6780132b":"from sklearn import metrics","caffae5a":"print('MAE:', metrics.mean_absolute_error(y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))\nprint('r2 score:',metrics.r2_score(y_test,predictions))","96ba175e":"print('Training Score: \\n',lm.score(X_train,y_train))","7010e9d3":"print('Testing Score: \\n',lm.score(X_test,y_test))","05d51eb6":"- Above plot shows the Price distibution of books by genre per year...!!!","8c822c8d":"- There are 550 rows and 7 columns in DataFrame...!!!","c8003d70":"### Training a Linear Regression Model\n#### Training and Testing Data\n#### Selecting Dependent and Independent Variables \n","d52d008b":"- There are two genre of books:\n- 1- Fiction  \n- 2- Non Fiction","c6724dff":"#### Year wise minimum, maximum and mean 'Reviews' of books","8d79b2bc":"### Checking of data and Data Cleaning... ","6b40d720":"### Importing data...","2736673e":"#### Authors and their book count","9bbf299d":"- From above plot we can observe the minimum,maximum and average 'Price' trend year wise...!!!","fdc58fb6":"#### Numer of books per 'Genre' per 'Year'","f0040df6":"## EDA and User Rating Prediction of Amazon's Bestselling Books\n\n- Analyse the data and retrieve some meaningful insights and Predict user rating of a book.\n- Data obtained from Kaggle : https:\/\/www.kaggle.com\/sootersaalu\/amazon-top-50-bestselling-books-2009-2019 \n- Python(Jupyter Notebook) is used for analysis.","bcd89a3c":"- There are some outliers in Price of books\n- Data points that are greater than 40 are outliers\n- We will replace those points with median else they may affect our ML model","50365be0":"#### Author and their minimum, maximum and mean 'User Rating'","075f7b17":"#### Summary of DataFrame","86e2ada0":"#### Residual Plot","f7817702":"- No null value is in DataFrame","68fad99c":"- Our data is almost ready...!!!","36d57f70":"#### Books genre and their quantities","859e22fa":"#### Model evaluation...","664f438e":"- From above plot we can observe the minimum,maximum and average 'User Rating' year wise...!!!","e55dac35":"- There are some outliers in Reviews of books\n- Data points that are greater than 40000 are outliers\n- We will replace those points with median else they may affect our ML model","f1e2ffc2":"- There are less outliers than previous so that's totally okay.","f55dbdb1":"#### Checking for outlires...","26eb6199":"- Minimum, Maximum and Average number of Reviews per year shown by above plot...!!!","3327fd4b":"#### Train Test Split\n- Split the data into training and testing set","30aa64f5":"### Importing relavent libraries...","25fcacab":"- There are less outliers than previous so that's totally okay.","bf2b05d8":"#### Checking for null value...","325005a5":"#### Converting Categorical Features...\n- We'll need to convert categorical features by 'LabelEncoding' Otherwise our machine learning algorithm won't be able to directly take in those features as inputs...!!!","b4104b7a":"#### Checking of categorical and numerical columns...","ffe93475":"#### Prediction from our Model","a4ce9548":"#### Year wise minimum, maximum and mean 'Price' of books","ad3fb8af":"#### Year wise minimum, maximum and mean 'User Rating' of books","64b54370":"#### Handling outliers...","2f85edfc":"#### Creating and Training model","8f0e5296":"### Exploratory Data Analysis"}}