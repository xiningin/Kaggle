{"cell_type":{"a59771e6":"code","f34de68d":"code","f38cad12":"code","a51a0ffc":"code","cf459fb7":"code","5af9c50a":"code","3d683f01":"code","f21d3dbf":"code","5f40af85":"code","52687e21":"code","d870455d":"code","038baa4a":"code","1a29b47b":"code","2c7d2557":"code","378cb021":"code","5c295b3f":"code","8b2223f7":"code","0149c27d":"code","f609487c":"markdown","9f560ca5":"markdown","880b5cac":"markdown","97bd0762":"markdown","813680dc":"markdown","fd19fccd":"markdown"},"source":{"a59771e6":"# 1.1\nprint(1+3*7)","f34de68d":"#1.2\nprint(5+12\/4)","f38cad12":"#1.3\nprint(5+12\/\/4)","a51a0ffc":"#1.4\na = 5\nprint(5*a)","cf459fb7":"#1.5\na = '5' \nprint(5*a)","5af9c50a":"#1.6\nprint(2>1)","3d683f01":"#1.7\na = 2>1\nb = 3>1\nprint(a)\nprint(a+b)","f21d3dbf":"#1.8\na = 'Hello '\nb = 'World'\nprint(a+b)\nprint(b+a)","5f40af85":"#1.9\nlist1 = [1,2,3,'a','b']\nprint(list1[1]+list1[2])\nprint(list1[3]+list1[4])","52687e21":"#1.10\nlist1[3] = 77\nprint(list1)","d870455d":"#2.1\nlist2 = [0,1,2,3,4,5,6,7,8]\nsublist1 = list2[2:5]\nprint(sublist1)","038baa4a":"#2.2\nnewlist1 = list2[5:9]+list2[0:5]\nprint(newlist1)","1a29b47b":"#2.3\nnewlist2 = list2[5:]+list2[:5]\nprint(newlist2)","2c7d2557":"#2.4\nword = 'hello'\nletter1 = word[0]\nletter2 = word[0].upper()\nprint(letter1)\nprint(letter2)","378cb021":"#2.5\nbadname = 'brian'\ngoodname = badname[0].upper()+badname[1:]\nprint(goodname)","5c295b3f":"#3.1\na = 3.1\nprint(A)","8b2223f7":"#3.2\na = 3.1\nprint a","0149c27d":"#3.3\nlist3 = ['a','b','c','d','e','f']\nprint(list3[6])","f609487c":"2. The next set of fragments use a method called *slicing* to create parts of lists or strings. The syntax `mylist[a:b]` pulls out the part of `mylist` starting at index `a` and ending at index `b-1` (this means you get `b-a` items)","9f560ca5":"This exercise set contains a number of questions. Comments and answers where needed are provided at the end.\n\nIn code sections a hashtag is used for a a *comment*. This is a line of text that is used for explanation. It is not code and is ignored by Python","880b5cac":"3. The next set of code fragments all contain errors. Try to spot the error then run the code to see if you are correct.","97bd0762":"# Larn Yersel Python\n## Exercise 1","813680dc":"1) Read through the next code blocks. Try to predict what the output will be and then run the code.","fd19fccd":"Comments on individual parts\n\n1. \n   1. Integer operations give an integer answer\n   2. Division leads to a float anwer\n   3. \/\/ gives the integer part so leads to an integer answer\n   4. No comment\n   5. In this case multiplying by 5 concatenates 5 copies of the string.\n   6. Logical tests are evaluated to True or False\n   7. True=1 and False=0 in arithmetic\n   8. Did you spot that the second one would look like a single word because of the missing space?\n   9. Python uses + to mean different things depending on the type of variable.\n   10. You can change items in a list.\n2. \n   1. This is just a demonstration of the method\n   2. You can combine your new sublists. This one rearranges the original\n   3. This demonstrates that you can leave out a value to indicate that you want to go to the end or start at the beginning.\n   4. There are many different string functions. `.upper()` converts to upper case. You can find find more with an internet search for Python String Functions\n   5. There is a string function that converts the first letter to uppercase, but you don't need lots of functions. Ingenuity trumps obscure functions every time.\n\n"}}