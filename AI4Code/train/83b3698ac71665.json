{"cell_type":{"1cf77f6b":"code","249e83b5":"code","b9c1a46c":"code","9af89027":"code","231e230b":"code","01e54ad1":"code","84f99db4":"code","be1b37d4":"code","85109f81":"code","818f6f6b":"code","0f853596":"code","fb521029":"code","641d22e4":"code","3d968da6":"code","e43e640e":"code","8839d4e2":"code","d05d18b4":"code","8f6fa337":"code","4c29138f":"code","d2af2024":"code","dc84f806":"code","74ae3258":"code","ad02f204":"code","3501e3cf":"code","d0b6f769":"code","d2f80a3d":"code","8c4c84ab":"code","a031e24a":"code","6f7c28f6":"code","aa4b6d22":"code","216dbe52":"code","a0825276":"code","01f91191":"code","0c457864":"code","269364b1":"code","b1b95a37":"code","d48708c2":"code","aa717959":"code","9101be5e":"code","f20bb03e":"code","f0df9e92":"code","eb2099fb":"code","f4e2fcdb":"code","32eb6611":"code","1c066973":"code","84dfa472":"code","8e14639e":"code","a34d75fd":"code","51a9fd5a":"code","1ada8d92":"code","2d47bd87":"code","4c46326b":"markdown","c1632a6b":"markdown","01466784":"markdown","3f5d52bf":"markdown","e3183906":"markdown","12d0e541":"markdown","e40cad93":"markdown","6cc95a6f":"markdown","5e75752a":"markdown","5caaf61b":"markdown","39466679":"markdown","6775e0a9":"markdown","fa4332f2":"markdown","eabc3610":"markdown","92c92778":"markdown","ab812fb2":"markdown","20fbd94c":"markdown","606bc36f":"markdown","401c2e44":"markdown","15c57cce":"markdown","17f1b433":"markdown"},"source":{"1cf77f6b":"import numpy as np # library to handle data in a vectorized manner\n\nimport pandas as pd # library for data analsysis\npd.set_option(\"display.max_columns\", None)\npd.set_option(\"display.max_rows\", None)\n\nimport json # library to handle JSON files\n\n\n\n\nimport requests # library to handle requests\nfrom bs4 import BeautifulSoup # library to parse HTML and XML documents\n\nfrom pandas.io.json import json_normalize # tranform JSON file into a pandas dataframe\n\n# Matplotlib and associated plotting modules\nimport matplotlib.cm as cm\nimport matplotlib.colors as colors\n\n# import k-means from clustering stage\nfrom sklearn.cluster import KMeans\n\nimport matplotlib.pyplot as plt\n\nimport folium # map rendering library\n\nprint(\"Libraries imported.\")","249e83b5":"data=requests.get('https:\/\/en.wikipedia.org\/wiki\/List_of_neighbourhoods_in_Mumbai').text","b9c1a46c":"soup=BeautifulSoup(data,'html.parser')","9af89027":"area=[]\nloc=[]\nlat=[]\nlon=[]","231e230b":"for row in soup.find('table').find_all('tr'):\n    cells=row.find_all('td')\n    if (len(cells)>0):\n        area.append(cells[0].text)\n        loc.append(cells[1].text)\n        lat.append(cells[2].text)\n        lon.append(cells[3].text)","01e54ad1":"area_mumbai=[]\nfor areas in area:\n    area_mumbai.append(areas.replace('\\n',''))","84f99db4":"area_mumbai[0:5]","be1b37d4":"loc_mumbai=[]\nfor locations in loc:\n    loc_mumbai.append(locations.replace('\\n',''))","85109f81":"loc_mumbai[0:5]","818f6f6b":"lat_mumbai=[]\nfor lats in lat:\n    lat_mumbai.append(lats.replace('\\n',''))\nlon_mumbai=[]\nfor lons in lon:\n    lon_mumbai.append(lons.replace('\\n',''))","0f853596":"lat_mumbai[0:5]","fb521029":"lon_mumbai[0:5]","641d22e4":"df_mumbai=pd.DataFrame(columns=['Area','Location','Latitude','Longitude'])\ndf_mumbai['Area']=area_mumbai\ndf_mumbai['Location']=loc_mumbai\ndf_mumbai['Latitude']=lat_mumbai\ndf_mumbai['Longitude']=lon_mumbai\ndf_mumbai","3d968da6":"df_mumbai['Longitude'][82]=72.8479\ndf_mumbai","e43e640e":"df_mumbai.to_csv('Mumbai neighborhood coordinates.csv')","8839d4e2":"latitude=19.07 \nlongitude=72.87\n\nmap_mumbai = folium.Map(location=[latitude, longitude], zoom_start=11)\n\nfor lat,lon,areas,location in zip(df_mumbai['Latitude'],df_mumbai['Longitude'],df_mumbai['Area'],df_mumbai['Location']):\n                                        \n                                        label='{} {}'.format(areas,location)\n                                        label=folium.Popup(label)\n                                        \n                                        folium.CircleMarker(\n                                            [lat,lon], radius=5,popup=label,color='orange',fill=True,fill_color='black',fill_opacity=0.6).add_to(map_mumbai)\n                                   ","d05d18b4":"map_mumbai","8f6fa337":"CLIENT_ID='Your client ID'\nCLIENT_SECRET='Your client secret'\nVERSION = '20180605'","4c29138f":"venues = []\n\nradius = 1000\nLIMIT = 100\n\n\nfor lat, lon, loc,areas in zip(df_mumbai['Latitude'], df_mumbai['Longitude'], df_mumbai['Location'], df_mumbai['Area']):\n    url = \"https:\/\/api.foursquare.com\/v2\/venues\/explore?client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}\".format(\n        CLIENT_ID,\n        CLIENT_SECRET,\n        VERSION,\n        lat,\n        lon,\n        radius, \n        LIMIT)\n    \n    results = requests.get(url).json()[\"response\"]['groups'][0]['items']\n    \n    for venue in results:\n        venues.append((\n            areas, \n            loc,\n            lat, \n            lon, \n            venue['venue']['name'], \n            venue['venue']['location']['lat'], \n            venue['venue']['location']['lng'],  \n            venue['venue']['categories'][0]['name']))","d2af2024":"venues_df=pd.DataFrame(venues)\nvenues_df.rename(columns={0:'Area',1:'Location',2:'Area latitude',3:'Area longitude',4:'Venue name',5:'Venue latitude',6:'Venue longitude',7:'Venue category'},inplace=True)\nvenues_df.head()","dc84f806":"venues_df['Venue category'].unique()","74ae3258":"len(venues_df['Venue category'].unique())","ad02f204":"categories_onehot=pd.get_dummies(venues_df['Venue category'])","3501e3cf":"mumbai_category_df=pd.DataFrame(venues_df['Area'],columns=['Area'])","d0b6f769":"mumbai_category_df=mumbai_category_df.merge(categories_onehot,on=mumbai_category_df.index)","d2f80a3d":"mumbai_category_df.head()","8c4c84ab":"mumbai_category_grouped=mumbai_category_df.groupby(['Area']).mean().reset_index()","a031e24a":"mumbai_category_grouped.drop('key_0',axis=1,inplace=True)","6f7c28f6":"mumbai_category_grouped.head()","aa4b6d22":"bar_list=['Sports Bar','Gastropub','Bar','Beer Bar',\n          'Beer Garden','Club House',\n          'Lounge','Cocktail Bar','Hotel Bar',\n          'Bistro','Brewery','Wine Bar','Nightclub']","216dbe52":"bar_category_df=pd.DataFrame(columns=[mumbai_category_grouped.columns])\nbar_category_df=mumbai_category_grouped[mumbai_category_grouped['Pub']>0]","a0825276":"for i in range(0,len(bar_list)):\n    bar_category_df=bar_category_df.append(mumbai_category_grouped[mumbai_category_grouped['{}'.format(bar_list[i])]>0])","01f91191":"bar_category_df.reset_index(drop=True,inplace=True)","0c457864":"bar_category_df.head()","269364b1":"wcss=[]\nfor i in range(1,15):\n    kmeans=KMeans(n_clusters=i,max_iter=300)\n    kmeans.fit(bar_category_df.iloc[:,1:])\n    wcss.append(kmeans.inertia_)\n    \nplt.plot(range(1,15),wcss)\nplt.ylabel('WCSS')\nplt.xlabel('K clusters')\nplt.xticks(np.arange(1,15))\nplt.axvline(5,color='red')\n","b1b95a37":"k=5\nkmeans=KMeans(n_clusters=k)\nkmeans.fit(bar_category_df.iloc[:,1:])","d48708c2":"labels=kmeans.labels_\ncluster_df=pd.DataFrame(columns=['Area','Label'])\ncluster_df['Area']=bar_category_df.iloc[:,0]\n","aa717959":"cluster_df['Label']=labels\ncluster_df.head()","9101be5e":"cluster_df=cluster_df.merge(df_mumbai,on='Area')","f20bb03e":"cluster_df","f0df9e92":"map_clusters = folium.Map(location=[latitude, longitude], zoom_start=11)\n\n# set color scheme for the clusters\nx = np.arange(k)\nys = [i+x+(i*x)**4 for i in range(k)]\ncolors_array = cm.rainbow(np.linspace(0,1, len(ys)))\nrainbow = [colors.rgb2hex(i) for i in colors_array]\n\n# add markers to the map\nmarkers_colors = []\nfor lat, lon, area,loc,cluster in zip(cluster_df['Latitude'], cluster_df['Longitude'], cluster_df['Area'], cluster_df['Location'],cluster_df['Label']):\n    label = folium.Popup('{} ({}) - Cluster {}'.format(area,loc,cluster+1), parse_html=True)\n    folium.CircleMarker(\n        [lat, lon],\n        radius=6,\n        popup=label,\n        color=rainbow[cluster-2],\n        fill=True,\n        fill_color=rainbow[cluster-2],\n        fill_opacity=0.8).add_to(map_clusters)\n       \nmap_clusters","eb2099fb":"cluster_df[cluster_df['Label']==0]","f4e2fcdb":"cluster_df[cluster_df['Label']==1]","32eb6611":"cluster_df[cluster_df['Label']==2]","1c066973":"cluster_df[cluster_df['Label']==3]","84dfa472":"cluster_df[cluster_df['Label']==4]","8e14639e":"sizes=[]\n\nfor labels in np.arange(0,5):\n    sizes.append(cluster_df[cluster_df['Label']==labels].shape[0])","a34d75fd":"sizes_df=pd.DataFrame(columns=['Label name','Label size'])","51a9fd5a":"sizes_df['Label name']=np.arange(1,6)\nsizes_df['Label size']=sizes","1ada8d92":"sizes_df.index=sizes_df['Label name']","2d47bd87":"sizes_df.drop('Label name', axis=1,inplace=True)\nsizes_df","4c46326b":"From the above elbow figure, it can't be completely determined as to what should be the optimum clusters. At k=5, the slope of WCSS reduces. Moreover, k=5 gives decent results in our analysis. Hence, we choose k=5 for further study.","c1632a6b":"# 4. Using Foursquare API to search for top 20 places within a radius of 500m","01466784":"# 3. Using Folium to visualise the areas on map of Mumbai","3f5d52bf":"# 5. Data analysis","e3183906":"let us explore the various clustered areas as follows","12d0e541":"## Cluster 3","e40cad93":"# 6. Segregate the venue categories of interest","6cc95a6f":"From the above cluster sizes and markers on the folium map, it is clear that are to avoid cluster 5 which is at Vasai region.\n\nClusters 3 and 4 have high number of nightclub,bar,gastropubs in the vicinity. Hence, setting up shop here would require considerable capital.\n\nClusters 1 and 2 seem to be ideal for setting up a nightclub with low competition and much more room for improvement.\n\n\nFor a detailed analysis and methodology that was used, kindly visit this article below:\n\n[In depth analysis](https:\/\/www.linkedin.com\/pulse\/optimising-property-location-mumbai-arindam-baruah\/)\n\n\nPlease take a look at my GitHub profile if you find this interesting. Always love some great inputs from fellow Kagglers ! \n\n[My GitHub profile](https:\/\/github.com)","5e75752a":"# Cluster 4","5caaf61b":"Let us take a look at the various data from the table stored in the four lists.","39466679":"## Cluster 1","6775e0a9":"# 1. Import relevant libraries","fa4332f2":"Since we are primarily interested to set up a bar, we can segregate the above dataframe into venue categories such as bars, pubs, sports bars,cocktail bar,beer bar, beer garden.","eabc3610":"# 2. Webscrapping using BeautifulSoup","92c92778":"We see that row number 82 has an incorrect longitude. We google it and correct the longitude value.","ab812fb2":"# Cluster 5","20fbd94c":"## Cluster 2","606bc36f":"Let us check the number of unique venue categories.","401c2e44":"Let us transform all the webscrapped data into a more readable dataframe as shown below:","15c57cce":"# 5. Using KMeans clustering","17f1b433":"# 6. Projecting the various clusters on a folium map"}}