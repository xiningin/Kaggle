{"cell_type":{"2cc659cc":"code","c6f6fa9e":"code","2055920f":"code","03f9f484":"code","85e80087":"code","c29f0c5e":"code","81383082":"code","46d8021a":"code","ddb210dd":"code","a52da74a":"code","70c04fac":"code","dd9de697":"code","620aec56":"code","80142d2a":"code","783359b4":"code","79dd559d":"code","93c55f76":"code","c41e4368":"code","87f335db":"code","920a37b7":"code","d29b5f6c":"code","cf89ef76":"code","1c86fc21":"code","0aa559d4":"code","94c6b6b3":"code","94323e78":"code","b842d95b":"code","8a7c2b7b":"code","0b92f7c7":"code","717ddfa7":"code","424b18c7":"code","a0e06233":"code","b3139427":"code","3145da1e":"code","afb65c61":"code","1de29f0b":"code","8795c5c5":"code","6ca24294":"code","8dba266e":"code","fd4ac63a":"markdown","5149924d":"markdown","a8029271":"markdown","d63095e7":"markdown","17c305e6":"markdown","b1b16879":"markdown","fa61b40b":"markdown","01dd5e7b":"markdown"},"source":{"2cc659cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c6f6fa9e":"data=pd.read_csv(\"..\/input\/stackindex\/MLTollsStackOverflow.csv\")","2055920f":"data.head()","03f9f484":"data.tail()","85e80087":"data.shape","c29f0c5e":"data.describe()","81383082":"data.info()","46d8021a":"data.isnull().sum()","ddb210dd":"import plotly.express as px\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nfrom pandas.plotting import autocorrelation_plot\nfrom pandas.plotting import lag_plot","a52da74a":"def interactive_plot(df, title):\n    fig = px.line(title = title)\n    for i in df.columns[1:]:\n        fig.add_scatter(x = df['month'], y = df[i], name = i)\n    fig.show()","70c04fac":"interactive_plot(data,'Stackoverflow Questions Count over years')","dd9de697":"def normalize(df):\n    x = df.copy()\n    for i in x.columns[1:]:\n        x[i] = x[i]\/x[i][0]\n    return x","620aec56":"interactive_plot(normalize(data),'Stackoverflow Questions Count over years')","80142d2a":"import seaborn as sns\ncorrelation = data.corr()\nplt.figure(figsize = (12 , 12))\nsns.heatmap(correlation)","783359b4":"\nf = plt.figure(figsize=(40,20))\nax = plt.gca()\ndata.hist(ax=ax,figsize=(40,20))\nplt.show()","79dd559d":"tria=data.copy()","93c55f76":"tria.drop('Tableau',axis=1,inplace=True)","c41e4368":"for i in tria.index:\n    tria.loc[i,'year']=tria['month'].str.split('-')[i][0]\n    tria.loc[i,'months']=tria['month'].str.split('-')[i][1]","87f335db":"tria['year']=tria['year'].astype(int)\n","920a37b7":"tria.drop('months',axis=1,inplace=True)\ntria.drop('month',axis=1,inplace=True)","d29b5f6c":"lag_plot(tria)\nplt.show()","cf89ef76":" tria.plot.hexbin(x='year', y='python', gridsize=20)","1c86fc21":"tria.boxplot(figsize=(15,6),by='year',column='python')","0aa559d4":"data_topics =  data.drop(columns=[\"month\"])\nprint(data_topics.head())","94c6b6b3":"total= data_topics.sum(axis = 0)\ntop_tech = total.sort_values(ascending = False)[0:11]\n","94323e78":"top_tech","b842d95b":"top_tech_dataframe=pd.DataFrame(top_tech,columns=['Sum'])\ntop_tech_dataframe.style.background_gradient(cmap='PuBu', low=0, high=0, axis=0, subset=None)","8a7c2b7b":"fig = px.pie(top_tech_dataframe,values=top_tech_dataframe['Sum'],names=top_tech_dataframe.index,title='Top Tech')\nfig.show()","0b92f7c7":"autocorrelation_plot(top_tech_dataframe)","717ddfa7":"fig = px.sunburst(data, path=['month'],values='python-3.x',color ='python-3.x')\nfig.show()","424b18c7":"data.index","a0e06233":"for i in data.index:\n    data.loc[i,'year']=data['month'].str.split('-')[i][0]\n    data.loc[i,'months']=data['month'].str.split('-')[i][1]\n    ","b3139427":"a = ['r', 'python']\nfig = px.scatter_3d(data, x='year', y='months', z='numpy', color='year')\nfig.show()","3145da1e":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    x=data['year'],\n    y=data['python'],\n    name='Python',\n    marker_color='indianred'\n))\nfig.add_trace(go.Bar(\n    x=data['year'],\n    y=data['r'],\n    name='r',\n    marker_color='lightsalmon'\n))\nfig.add_trace(go.Bar(\n    x=data['year'],\n    y=data['pandas'],\n    name='pandas',\n    marker_color='green'\n))\n\n# Here we modify the tickangle of the xaxis, resulting in rotated labels.\nfig.update_layout(barmode='group', xaxis_tickangle=-45,title_text=\"Count of Questions from the topics over years\",xaxis_title=\"Years\",\n    yaxis_title=\"Count\")\nfig.show()","afb65c61":"fig = go.Figure(go.Bar(x=data['year'], y=data['python'], name='python'))\nfig.add_trace(go.Bar(x=data['year'], y=data['machine-learning'], name='machine-learning'))\nfig.add_trace(go.Bar(x=data['year'], y=data['r'], name='r'))\n\nfig.update_layout(barmode='stack',xaxis_tickangle=-45,title_text=\"Count of Questions from the topics over years\",xaxis_title=\"Years\",\n    yaxis_title=\"Count\")\nfig.show()","1de29f0b":"from statsmodels.tsa.stattools import adfuller\ndef test_stationary(timeseries):\n    #determine rolling statistics\n    rolmean=timeseries.rolling(12).mean()\n    rolstd=timeseries.rolling(12).std()\n    orig=plt.plot(timeseries,color='blue',label='Original')\n    mean=plt.plot(rolmean,color='red',label='mean')\n    std=plt.plot(rolstd,color='black',label='rolling std')\n    plt.legend(loc='best')\n    plt.title('Rolling mean and standard deviation')\n    plt.show(block=False)\n    print(\"Result of Dickey Fuler Test:\")\n    dftest=adfuller(timeseries,autolag='AIC')\n    dfoutput=pd.Series(dftest[0:4],index=['Test Statistics','n_lags','p-value','nobs'])\n    \n    for key,value in dftest[4].items():\n        \n        dfoutput['Critical Values(%s)'%key]=value\n    print (dfoutput)","8795c5c5":"ts=data['python']","6ca24294":"plt.plot(ts)","8dba266e":"test_stationary(ts)","fd4ac63a":"Null Hypothesis-Timeseries is non stationary\nAlternate Hypothesis-Timeseries is stationary","5149924d":"Consist of various columns containing names of libraries and the rows having the count of questions in StackOverflow for each month from 2009 to 2019","a8029271":"Current observation shows strong positive correlation with previous observations.","d63095e7":"<img src=\"https:\/\/csshint.com\/wp-content\/uploads\/2019\/05\/Animated-Logo-examples-2.gif\">","17c305e6":"**If You liked it,Please Upvote!!**","b1b16879":"test statistic>critical values so we accept the null hypothesis i.e Timeseries is non-stationary","fa61b40b":"It is clearly evident that there is an overall increasing trend in the data along with some seasonal variations. However, it might not always be possible to make such visual inferences (we\u2019ll see such cases later). ","01dd5e7b":"<img src=\"https:\/\/i.pinimg.com\/originals\/7c\/3b\/63\/7c3b63598dc8b65b93a9532d4228947b.gif\">"}}