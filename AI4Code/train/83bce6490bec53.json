{"cell_type":{"69e0d44e":"code","5d294184":"code","35689d85":"code","e4d2dbb5":"code","484cf3c5":"code","2105a406":"code","d1e7bad4":"code","6574eb6d":"code","372b1179":"code","5581cfea":"code","e7548fef":"code","5b2bacd1":"code","2fda5b2f":"code","d417bca7":"code","c1937842":"code","fed0f7a9":"code","1a8152b5":"code","05ee457d":"code","454ea545":"code","ee2bec4c":"code","1c753003":"code","30e450f9":"code","3e038b4d":"code","1fdf136d":"markdown","cda6c09c":"markdown","752db92f":"markdown","d233e0e6":"markdown","a8ccb223":"markdown","aafc3e60":"markdown","88e4045f":"markdown","20cf8a53":"markdown","e5907fd5":"markdown","05665824":"markdown","3387495e":"markdown","49c135b9":"markdown","4a68cb34":"markdown","6c9725bf":"markdown","8e397a7b":"markdown","84b7b68e":"markdown","5974209b":"markdown","c1b1b836":"markdown","bb712a79":"markdown","5caa43c6":"markdown","3ac394d2":"markdown","ca06d24b":"markdown","1fd71643":"markdown","ebf2100d":"markdown","4436ca51":"markdown","c3aa18fc":"markdown","5a5cac21":"markdown","896ff2b5":"markdown","2d1ee742":"markdown","f9f3f110":"markdown","6a39344e":"markdown","53951d5b":"markdown","82f8784c":"markdown","9f8f0fd5":"markdown","68d5b5f7":"markdown","23af9d40":"markdown","49795f8a":"markdown","e3dee974":"markdown","ea1b01f6":"markdown","b60fab2c":"markdown","3d432779":"markdown","b3757630":"markdown","26dc09a7":"markdown","925b2d1f":"markdown"},"source":{"69e0d44e":" s = '0123456789' \ns[2:5]\n   ","5d294184":"s[-3:-1]","35689d85":"s[1:8]","e4d2dbb5":"s[:4]","484cf3c5":"s[7:]","2105a406":"forecast='It will be a sunny day today'\nprint(forecast.count('day'))\nprint(forecast.find('sunny'))\nprint(forecast.replace('sunny', 'cloudy'))","d1e7bad4":"last='smith'\nfirst='john'\nmiddle='paul'\nprint(last, first, middle, sep='\\t')","6574eb6d":"first='john'\nlast='doe'\nstreet='main street'\nnumber='123'\ncity='anycity'\nstate='AS'\nzipcode='09876'\nfstring = '{} {}\\n{} {}\\n{}, {} {}'\nprint(fstring.format(first,last,number,street,city,state,zipcode))","372b1179":"def roster(students):\n    'prints average grade for a roster of students'\n    print('Last First Class Average Grade')\n    for student in students:\n        print('{:10}{:10}{:10}{:8.2f}'.format(student[0],\n                student[1], student[2], student[3]))","5581cfea":"import time\nt=time.localtime(1500000000)\nprint(time.strftime('%A, %B %d %Y', t))\nprint(time.strftime('%I:%M %p %Z Central Daylight Time on %m\/%d\/%Y',t))\nprint(time.strftime('I will meet you on %a %B %d at %I:%M %p.', t))","e7548fef":"def stringCount(filename, target):\n    'returns the number of occurrences of target in file filename'\n    infile = open(filename)\n    content = infile.read()\n    infile.close()\n    return content.count(target)","5b2bacd1":"def words(filename):\n    'returns the list of words in file filename'\n    infile = open(filename, 'r')\n    content = infile.read()\n    infile.close()\n    table = str.maketrans('!,.:;?', 6*' ')\n    content=content.translate(table)\n    content=content.lower()\n    return content.split()","2fda5b2f":"def myGrep(filename,target):\n    'returns the list of words in file filename'\n    infile = open(filename)\n    for line in infile:\n        if target in line:\n            print(line, end='')\n    ","d417bca7":"s = 'abcdefghijklmnopqrstuvwxyz'\ns[1:4]\ns[:3]\ns[3:-3]\ns[-4:-1]\ns[-4:]","c1937842":"log='128.0.0.1 - - [12\/feb\/2011:10:31:08 -0600]\"GET \/docs\/test.txt HTTP\/1.0\"'\nprint(log)\nlog=log.split( )\nprint(log)\naddress=log[0]\nprint(address)\nprint(log[3])","fed0f7a9":"s1 = '10 20 30 40 50 60'\ns1.split() \ns2 = '10,20,30,40,50,60'\ns2.split(sep=',')\ns3 = '10&20&30&40&50&60'\ns3.split(sep='&')\ns4 = '10 - 20 - 30 - 40 - 50 - 60'\ns4.split(sep='-')","1a8152b5":"first = 'Marlena'\nlast = 'Sigel'\nmiddle = 'Mae'\n(last+',' + first +' ' + middle)  \n(last+',' + first +' ' + middle[0] + '.')\n(first+' ' + middle[0] + '.' + last)\n(first[0] + '.' +  middle[0] + '.' + last)\n(last + ',' + first[0] +'.')","05ee457d":"sender = 'tim@abc.com'\nrecipient = 'tom@xyz.org'\nsubject = 'Hello!'\nprint('From:{} \\nTo: {} \\nSubject: {}'.format(sender,recipient,subject))","454ea545":"import math\npi=math.pi\ne=math.e\na='pi = {:0.1f}, e = {:1.1f}'.format(pi,e)\nprint(a)\nb='pi = {:0.2f}, e={:1.2f}'.format(pi,e)\nprint(b)\nc='pi = {0:e}, e = {1:e}'.format(pi,e)\nprint(c)\nd='pi = {:0.5f}, e = {:1.5f}'.format(pi,e)\nprint(d)","ee2bec4c":"def month(n):\n    a = \"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\".split()\n    return a[n - 1]","1c753003":"def stats(in_file):\n    char_count = 0\n    word_count = 0\n    line_count = 0\n    with open(in_file) as read_file:\n        for line in read_file:\n            line_count += 1\n            char_count += len(line)\n            word_count += len(line.split(' '))\n    print (\"line count: {0}\\nword count: {1}\\ncharacter count: {2}\".format(line_count, word_count, char_count))","30e450f9":"def duplicate(fname):\n    'returns true if there are duplicates in the file, false otherwise'\n    fn = open(fname, 'r')\n    llst = fn.readlines()\n    fn.close()","3e038b4d":"def censor(readfile,writefile,mode='r+'):\n    infile = open(readfile,mode)\n    outfile = open(writefile,mode)\n    new_list=[]\n    for line in infile:\n        mylist = line.split()\n        for word in mylist:\n            if string_count(word):\n                word =\"XXXX \"\n            else:\n                pass \n            new_list.append(word)   \n    for word in new_list:\n        outfile.write(\"{} \\n\".format(word)) \n    infile.close()\n    outfile.close()\n\ndef string_count(mystring):\n    if len(mystring)==4:\n        return True\n    else:\n        return False","1fdf136d":"def even(n)\n    for i in range(2, n+1):\n        if i%2 == 0 or i%3 == 0:\n            print(i, end=', ')\n","cda6c09c":"def link(filename):\n    infile=open(filename)\n    content=infile.read()\n    infile.close()\n    return content.count('<\/a>')\nlink('Python.html')","752db92f":"s = '''It was the best of times, it was the worst of times; it\nwas the age of wisdom, it was the age of foolishness; it was the\nepoch of belief, it was the epoch of incredulity; it was ...'''\n(a)table=str.maketrans('.,;',3*' ')\nnewS=s.translate(table)\nprint(newS)\n(b)newS=newS.replace('        ','')\nprint(newS)\nprint('')\n(c)newS=newS.lower()\nprint(newS)\nprint('')\n(d)print(newS.count('it was'))\nprint('')\n(e) print(newS.replace('was','is'))\nprint('')\n(f) lists= newS.split(' ')\nprint(lists)","d233e0e6":"4.11\nExplain what causes the syntax error in each statement just listed. Then write a correct\nversion of each Python statement.","a8ccb223":"4.17 \nTranslate each part into a Python statement using appropriate string methods:\n(a) Assign to variable message the string 'The secret of this message is that\nit is secret.'\n(b) Assign to variable length the length of string message, using operator len().\n(c) Assign to variable count the number of times the substring 'secret' appears in\nstring message, using string method count().\n(d) Assign to variable censored a copy of string message with every occurrence of\nsubstring 'secret' replaced by 'xxxxxx', using string method replace().","aafc3e60":"### ","88e4045f":"4.24\nImplement function cheer() that takes as input a team name (as a string) and prints\na cheer as shown:\n>>> cheer('Huskies')\nHow do you spell winner?\nI know, I know!\nH U S K I E S !\nAnd that's how you spell winner!\nGo Huskies!","20cf8a53":"4.31\nImplement function duplicate() that takes as input the name (a string) of a file in the\ncurrent directory and returns True if the file contains duplicate words and False otherwise.\n\n>>> duplicate('Duplicates.txt')\nTrue\n>>> duplicate('noDuplicates.txt')\nFalse","e5907fd5":"4.14 \nTranslate each part into a Python statement:\n(a) Assign to variable log the next string, which happens to be a fragment of a log of a\nrequest for a text file from a web server:\n128.0.0.1 - - [12\/Feb\/2011:10:31:08 -0600] \"GET \/docs\/test.txt HTTP\/1.0\"\n(b) Assign to variable address the substring of log that ends before the first blank space\nin log, using the string method split() and the indexing operator.\n(c) Assign to variable date the splice of string log containing the date (12\/Feb ...\n-6000), using the indexing operator on string log.","05665824":"4.3\nWrite a statement that prints the values of variables last, first, and middle in one line,\nseparated by a horizontal tab character. (The Python escape sequence for the horizontal tab\ncharacter is \\t.) If the variables are assigned like this:\n>>> last = 'Smith'\n>>> first = 'John'\n>>> middle = 'Paul'\nthe output should be:\nSmith John Paul","3387495e":"def vowelCount(string):\n    a=string.count('a')\n    e=string.count('e')\n    i=string.count('i')\n    o=string.count('o')\n    u=string.count('u')\n    print('a,e,i,o,and u appear, respectively, {}, {}, {}, {}, {} times.' format(a,e,i,o,u))\nstring=input(\"Enter a sentence: \")\nprint(vowelCount(string))","49c135b9":"def average(numbers):\n    return sum(numbers)\/len(numbers)\nsentence = input(\"Please enter a sentence: \")\nwords = sentence.split()\nlengths = [len(word) for word in words]\nprint('Average length:', average(lengths))\n\n","4a68cb34":"4.4\nWrite function even() that takes a positive integer n as input and prints on the screen all\nnumbers between, and including, 2 and n divisible by 2 or by 3, using this output format:\n>>> even(17)\n2, 3, 4, 6, 8, 9, 10, 12, 14, 15, 16,","6c9725bf":"def crypto(filename):\n    infile=open(filename,'r')\n    content=infile.read()\n    content=content.replace('secret','xxxxxx')\nprint(crypto('copy.txt'))    ","8e397a7b":"s = 'abcdefghijklmnopqrstuvwxyz'\n(a)s[1:3]\n(b)s[:14]\n(c)s[-12:]\n(d)s[1:-1]\n","84b7b68e":"def cheer(team):\n    print(\"How do you spell winner? \\nI know, I know! \\n{}! \\nAnd that's how you spell winner! \\nGo {}!\\n\".format((' '.join(string.upper())).string))\nprint(cheer('Huskies'))          ","5974209b":"4.19\nWrite Python statements that print the next formatted outputs using the already assigned\nvariables first, middle, and last:\n>>> first = 'Marlena'\n>>> last = 'Sigel'\n>>> middle = 'Mae'\n(a) Sigel, Marlena Mae\n(b) Sigel, Marlena M.\n(c) Marlena M. Sigel\n(d) M. M. Sigel\n(e) Sigel, M.","c1b1b836":"4.13\nLet string s be defined as:\ns = 'abcdefghijklmnopqrstuvwxyz'\nWrite Python Boolean expressions that correspond to these propositions:\n(a) The slice consisting of the second and third character of s is 'bc'.\n(b) The slice consisting of the first 14 characters of s is 'abcdefghijklmn'.\n(c) The slice of s excluding the first 14 characters is 'opqrstuvwxyz'.\n(d) The slice of s excluding the first and last characters is 'bcdefghijklmnopqrstuvw'.","bb712a79":"4.10\nImplement function myGrep() that takes as input two strings, a file name and a target string,\nand prints every line of the file that contains the target string as a substring.\n>>> myGrep('example.txt', 'line')\nThe 3 lines in this file end with the new line character.\nThere is a blank line above this line.","5caa43c6":"4.20 \nGiven string values for the sender, recipient, and subject of an email, write a string\nformat expression that uses variables sender, recipient, and subject and that prints as\nshown here:\n>>> sender = 'tim@abc.com'\n>>> recipient = 'tom@xyz.org'\n>>> subject = 'Hello!'\n>>> print(???) # fill in\nFrom: tim@abc.com\nTo: tom@xyz.org\nSubject: Hello!","3ac394d2":"Practice Problem\n4.1\nStart by executing the assignment:\ns = '0123456789'\nNow write expressions using string s and the indexing operator that evaluate to:\n(a) '234'\n(b) '78'\n(c) '1234567'\n(d) '0123'\n(e) '789'","ca06d24b":"4.12\nStart by running, in the interactive shell, this assignment statement:\n>>> s = 'abcdefghijklmnopqrstuvwxyz'\nNow write expressions using string s and the indexing operator that evaluate to 'bcd',\n'abc', 'defghijklmnopqrstuvwx', 'wxy', and 'wxyz'.","1fd71643":"4.25\nWrite function vowelCount() that takes a string as input and counts and prints the\nnumber of occurrences of vowels in the string.\n>>> vowelCount('Le Tour de France')\na, e, i, o, and u appear, respectively, 1, 3, 0, 1, 1 times.","ebf2100d":"(a)message='The secret of this message is that it is secret.'\n(b)string don't have the property len().\n(c)count=message.count('secret')\n(d)r=message.replace('secret','xxxxxx')\nstring don't have the property to grt the copy.\n","4436ca51":"first=('Enter first word: ')\nsecond=('Enter second word: ')\nthird=('Enter third word: ')\nword=[first,second,third]\nprint(word)\nk=word.sort()\nprint(k)\nif (k==word):\n    print('True')\n\nelse :\n    print(\"false\")","c3aa18fc":"4.32 \nThe function censor() takes the name of a file (a string) as input. The function should\nopen the file, read it, and then write it into file censored.txt with this modification: Every\noccurrence of a four-letter word in the file should be replaced with string 'xxxx'.\n>>> censor('example.txt')\nNote that this function produces no output, but it does create file censored.txt in the\ncurrent folder.","5a5cac21":"(a) The left parenthesis and the right bracket do not match.\n(3+4) or [3+4]\n(b) The colon is missing.\nif x == 5:\n(c) print() is a function and thus must be called with parentheses and with arguments.\nprint('hello')\n(d) The objects in a list are separated by commas.\nlst=[4,5,6]\n(e) The statement(s) in the body of a for loop must be indented.\nfor i in range(3):\n    print(i)","896ff2b5":"4.16 \nImplement a program that requests three words (strings) from the user. Your program\nshould print Boolean value True if the words were entered in dictionary order; otherwise\nnothing is printed.\n>>>\nEnter first word: bass\nEnter second word: salmon\nEnter third word: whitefish\nTrue","2d1ee742":"4.15\nFor each of the below string values of s, write the expression involving s and the string\nmethods split() that evaluates to list:\n['10', '20', '30', '40', '50', '60']\n(a) s = '10 20 30 40 50 60'\n(b) s = '10,20,30,40,50,60'\n(c) s = '10&20&30&40&50&60'\n(d) s = '10 - 20 - 30 - 40 - 50 - 60'","f9f3f110":"4.23\nWrite a function average() that takes no input but requests that the user enter a\nsentence. Your function should return the average length of a word in the sentence.\n>>> average()\nEnter a sentence: A sample sentence\n5.0","6a39344e":"4.6\nImplement function roster() that takes a list containing student information and prints\nout a roster, as shown below. The student information, consisting of the student\u2019s last name,\nfirst name, class, and average course grade, will be stored in that order in a list. Therefore,\nthe input list is a list of lists. Make sure the roster printed out has 10 slots for every string\nvalue and 8 for the grade, including 2 slots for the decimal part.\n>>> students = []\n>>> students.append(['DeMoines', 'Jim', 'Sophomore', 3.45])\n>>> students.append(['Pierre', 'Sophie', 'Sophomore', 4.0])\n>>> students.append(['Columbus', 'Maria', 'Senior', 2.5])\n>>> students.append(['Phoenix', 'River', 'Junior', 2.45])\n>>> students.append(['Olympis', 'Edgar', 'Junior', 3.99])\n>>> roster(students)\nLast First Class Average Grade\nDeMoines Jim Sophomore 3.45\nPierre Sophie Sophomore 4.00\nColumbus Maria Senior 2.50\nPhoenix River Junior 2.45\nOlympia Edgar Junior 3.99\n\nlast First Class Average Grade\nDeMoines Jim Sophomore 3.45\nPierre Sophie Sophomore 4.00\nColumbus Maria Senior 2.50\nPhoenix River Junior 2.45\nOlympia Edgar Junior 3.99","53951d5b":"4.7\nStart by setting t to be the local time 1; 500; 000; 000 seconds from the start of January 1,\n1970 UTC:\n>>> import time\n\n>>> t = time.localtime(1500000000)\n\nConstruct the next strings by using the string time format function strftime():\n(a) 'Thursday, July 13 2017'\n(b) '09:40 PM Central Daylight Time on 07\/13\/2017'\n(c) 'I will meet you on Thu July 13 at 09:40 PM.'","82f8784c":"4.27\nWrite a function fcopy() that takes as input two file names (as strings) and copies\nthe content of the first file into the second.\n>>> fcopy('example.txt','output.txt')\n>>> open('output.txt').read()\n'The 3 lines in this file end with the new line character.\\n\\n\nThere is a blank line above this line.\\n'","9f8f0fd5":"4.8\nWrite function stringCount() that takes two string inputs\u2014a file name and a target string\u2014\nand returns the number of occurrences of the target string in the file.\n>>> stringCount('example.txt', 'line')\n4","68d5b5f7":"4.29\nWrite a function stats() that takes one input argument: the name of a text file. The\nfunction should print, on the screen, the number of lines, words, and characters in the file;\nyour function should open the file only once.\n>>> stats('example.txt') \nline count: 3\nword count: 20\ncharacter count: 98\n","23af9d40":"4.26\nThe cryptography function crypto() takes as input a string (i.e., the name of a file in\nthe current directory). The function should print the file on the screen with this modification:\nEvery occurrence of string 'secret' in the file should be replaced with string 'xxxxxx'.\nFile: crypto.txt >>> crypto('crypto.txt')\nI will tell you my xxxxxx. But first, I have to explain\nwhy it is a xxxxxx.\nAnd that is all I will tell you about my xxxxxx.","49795f8a":"def fcopy(original, copy):\n    'creates a copy of file original named copy'\n    infile = open(original)\n    content = infile.read()\n    print(content)","e3dee974":"4.22\nWrite a function month() that takes a number between 1 and 12 as input and returns\nthe three-character abbreviation of the corresponding month. Do this without using an if\nstatement, just string operations. Hint: Use a string to store the abbreviations in order.\n>>> month(1)\n'Jan'\n>>> month(11)\n'Nov'","ea1b01f6":"4.18 \nSuppose variable s has been assigned in this way:\ns = '''It was the best of times, it was the worst of times; it\nwas the age of wisdom, it was the age of foolishness; it was the\nepoch of belief, it was the epoch of incredulity; it was ...'''\n(The beginning of A Tale of Two Cities by Charles Dickens.) Then do the following, in order:\n(a) Write a sequence of statements that produce a copy of s, named newS, in which characters\n., ,, ;, and \\n have been replaced by blank spaces.\n(b) Remove leading and trailing blank spaces in newS (and name the new string newS).\n(c) Make all the characters in newS lowercase (and name the new string newS).\n(d) Compute the number of occurrences in newS of string 'it was'.\n(e) Change every occurrence of was to is (and name the new string newS).\n(f) Split newS into a list of words and name the list listS.","b60fab2c":"4.2\nAssuming that variable forecast has been assigned string\n'It will be a sunny day today'\nwrite Python statements corresponding to these assignments:\n(a) To variable count, the number of occurrences of string 'day' in string forecast.\n(b) To variable weather, the index where substring 'sunny' starts.\n(c) To variable change, a copy of forecast in which every occurrence of substring\n'sunny' is replaced by 'cloudy'.","3d432779":"4.9\nWrite function words() that takes one input argument\u2014a file name\u2014and returns the list\nof actual words (without punctuation symbols !,.:;?) in the file.\n>>> words('example.txt')\n['The', '3', 'lines', 'in', 'this', 'file', 'end', 'with',\n'the', 'new', 'line', 'character', 'There', 'is', 'a',\n'blank', 'line', 'above', 'this', 'line']","b3757630":"4.21 \nWrite Python statements that print the values of pi and the Euler constant e in the\nshown formats:\n(a) pi = 3.1, e = 2.7\n(b) pi = 3.14, e = 2.72\n(c) pi = 3.141593e+00, e = 2.718282e+00\n(d) pi = 3.14159, e = 2.71828","26dc09a7":"4.28 \nImplement function links() that takes as input the name of an HTML file (as a\nstring) and returns the number of hyperlinks in that file. To do this you will assume that\neach hyperlink appears in an anchor tag. You also need to know that every anchor tag ends\nwith the substring <\/a>.\nTest your code on HTML file twolinks.html or any HTML file downloaded from the\nweb into the folder where your program is.\n>>> links('twolinks.html')\n2","925b2d1f":"4.5\nAssume variables first, last, street, number, city, state, zipcode have already\nbeen assigned. Write a print statement that creates a mailing label:\nJohn Doe\n123 Main Street\nAnyCity, AS 09876\nassuming that:\n>>> first = 'John'\n>>> last = 'Doe'\n>>> street = 'Main Street'\n>>> number = 123\n>>> city = 'AnyCity'\n>>> state = 'AS'\n>>> zipcode = '09876'"}}