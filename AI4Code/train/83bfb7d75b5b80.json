{"cell_type":{"afede5e6":"code","147e2253":"code","414fc4e6":"code","8799b512":"code","b617c849":"code","ff1c88c9":"code","9624e949":"code","f445e614":"code","44f54952":"code","63c98fd7":"code","fa095ea2":"code","177560b8":"code","98e410ed":"code","32de606d":"code","77bc35ec":"code","1a8ec169":"code","076ed6b9":"code","a358bc80":"markdown","f0a4a908":"markdown","aa51d5c1":"markdown","d9f59ef4":"markdown","c05419f9":"markdown"},"source":{"afede5e6":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n%matplotlib inline\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.rc('figure', figsize = (15, 10))\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","147e2253":"# Reading the dataset file\ndf = pd.read_csv(\"..\/input\/master.csv\")","414fc4e6":"# Displaying the first 5 rows of the DataFrame\ndf.head()","8799b512":"# Data type in each column\ndf.dtypes","b617c849":"# Summary of information in all columns\ndf.describe().round(2)","ff1c88c9":"# Number of rows and columns in the DataFrame\nprint('Number of rows:', df.shape[0])\nprint('Number of columns:', df.shape[1])","9624e949":"# Verify the country that the highest GDP per Capita\ndf[df['gdp_per_capita ($)'] == 126352.000000]","f445e614":"print(\"Luxembourg has the highest GDP per capita\")","44f54952":"df_luxembourg = df.query(\"country == 'Luxembourg'\")","63c98fd7":"df_luxembourg.head(10)","fa095ea2":"year_sum_luxembourg = df_luxembourg.groupby('year').sum()['suicides_no'].sort_values(ascending=False).reset_index()\nfigure = sns.barplot(x = 'year', y = 'suicides_no', data = year_sum_luxembourg, palette=\"BuGn_r\", order=year_sum_luxembourg['year'])\nfigure.set_title('Number of suicides per year in Luxembourg', {'fontsize': 22})\nfigure.set_xlabel('Year', {'fontsize': 18})\nfigure.set_ylabel('Total', {'fontsize': 18})\nplt.rcParams[\"xtick.labelsize\"] = 10\nplt.xticks(rotation= 90)","177560b8":"new_df = pd.DataFrame(df.groupby('country').sum()['suicides_no'].sort_values(ascending=False).reset_index())\nanalysing_total = new_df.head(10)","98e410ed":"figure = sns.barplot(x = 'country', y = 'suicides_no', data = analysing_total, palette=\"GnBu_d\")\nfigure.set_title('Total of the suicides between 1985-2016', {'fontsize': 22})\nfigure.set_xlabel('Country', {'fontsize': 18})\nfigure.set_ylabel('Total', {'fontsize': 18})\nplt.rcParams[\"xtick.labelsize\"] = 3\nplt.xticks(rotation= 90)","32de606d":"countries_oceania = ['New Zealand', 'Australia']\ndf_ne = df[df['country'].isin(countries_oceania)]\nax = df_ne.groupby(['country', 'year'])['suicides\/100k pop'].sum().unstack('country').plot(figsize=(10, 10))\nax.set_title('Suicides in Oceania', fontsize=20)\nax.legend(fontsize=15)\nax.set_xlabel('Year', fontsize=20)\nax.set_ylabel('Suicides Number', fontsize=20)\nax","77bc35ec":"countries_oceania = ['New Zealand', 'Australia']\nfor country in countries_oceania:\n    grouped = df[df['country'] == country].groupby(['year', 'age'])['suicides\/100k pop'].sum().unstack('age')\n    grouped.plot(figsize=(10, 10),\n               title='Suicides per 100k population by age in ' + country,\n               legend=True)","1a8ec169":"new_zealand_analysis = df[df['country'] == 'New Zealand'].groupby(['year', 'age'])['suicides\/100k pop'].sum().unstack('age')","076ed6b9":"new_zealand_analysis.plot(figsize=(10, 10),\n               title='Suicides per 100k population by age in New Zealand',\n               legend=True)","a358bc80":"<h2>Number of suicides per year in Luxembourg<\/h2>","f0a4a908":"<h2>Analysing of suicies in New Zealand and Australia (1985 - 2016)<\/h2>","aa51d5c1":"<h2>Analysing the total of suicides per country (1985 - 2016)<\/h2>","d9f59ef4":"<h2>Analysing the country with the highest GDP per capita - Luxembourg<\/h2>","c05419f9":" <h2>Suicides per 100k population<\/h2>"}}