{"cell_type":{"2977c8f4":"code","e194aebf":"code","44d8b850":"code","10b62f0a":"code","33363be1":"code","3c620c71":"code","4931c6a7":"code","ec82394e":"code","25ec63ab":"code","460d7887":"code","129285a9":"code","448c4b98":"code","1772853b":"code","ccbf58fc":"code","2e29d782":"code","f4fb74f2":"code","c2247ffd":"code","55c65b30":"code","1bb733e7":"code","c94430be":"code","79a2b8d0":"code","641487ae":"code","0e15e476":"code","31a766f7":"code","7f06d044":"code","40d825e2":"code","bffb271e":"code","5dc8d7fb":"code","980a5300":"code","76818fc1":"code","e1681d7d":"code","0a965774":"code","c9d92639":"code","04d122e5":"code","1b21fb7b":"markdown","bd033379":"markdown","65d86d98":"markdown","703f7661":"markdown","5dc7d907":"markdown","46e4542b":"markdown","d566eae3":"markdown","388ae321":"markdown","3289703e":"markdown","45a8ebd7":"markdown","2982481a":"markdown","8181b91b":"markdown","3961bd0a":"markdown"},"source":{"2977c8f4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n# Matplot Lib\nimport matplotlib.pyplot as plt\n        \nimport seaborn as sns\n# Sklearn Libraries\nfrom sklearn.model_selection import train_test_split\n\n# Any results you write to the current directory are saved as output.","e194aebf":"ecoli_df = pd.read_csv(\"\/kaggle\/input\/ecoli-uci-dataset\/ecoli.csv\")\n\necoli_df.head()","44d8b850":"del ecoli_df['SEQUENCE_NAME']\necoli_df.head()","10b62f0a":"ecoli_df.shape","33363be1":"ecoli_df.describe()","3c620c71":"ecoli_df.dtypes","4931c6a7":"print(ecoli_df['SITE'].unique())\nprint(len(ecoli_df['SITE'].unique()))","ec82394e":"print(ecoli_df.groupby(['SITE']).agg(['count']))","25ec63ab":"groups = ecoli_df.groupby(['SITE'])\n# Plot\nfig, ax = plt.subplots()\nax.margins(0.05)\nfor name, group in groups:\n    ax.plot(group.MCG, group.GVH, marker='o', linestyle='', label=name)\nax.legend(numpoints=1, loc='upper left')\n\nplt.show()","460d7887":"sns.scatterplot(x=ecoli_df.MCG, y=ecoli_df.GVH, hue=ecoli_df.SITE, style = ecoli_df.SITE)","129285a9":"sns.pairplot(ecoli_df)","448c4b98":"X = ecoli_df.iloc[:,0:6]\nprint(X.head())\ny = ecoli_df.iloc[:,7]\nprint(y.head())","1772853b":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=123)\nprint(\"Size of X:\", X.shape)\nprint(\"Size of y:\", y.shape)\nprint(\"Size of X_train:\", X_train.shape)\nprint(\"Size of y_train:\", y_train.shape)\nprint(\"Size of X_test:\", X_test.shape)\nprint(\"Size of y_test:\", y_test.shape)\n","ccbf58fc":"# Threshold for removing correlated variables\nthreshold = 0.9\n\n# Absolute value correlation matrix\ncorr_matrix = X_train.corr().abs()\ncorr_matrix.head()","2e29d782":"# Upper triangle of correlations\nupper = corr_matrix.where(np.triu(np.ones(corr_matrix.shape), k=1).astype(np.bool))\nupper.head()","f4fb74f2":"# Select columns with correlations above threshold\nto_drop = [column for column in upper.columns if any(upper[column] > threshold)]\n\nprint('There are %d columns to remove.' % (len(to_drop)))","c2247ffd":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score, classification_report","55c65b30":"rt_clf = RandomForestClassifier(criterion='gini', random_state=123)\nrt_clf.fit(X_train, y_train)","1bb733e7":"rt_clf.feature_importances_","c94430be":"y_pred = rt_clf.predict(X_test)","79a2b8d0":"print(\"Accuracy : {}%\".format(accuracy_score(y_test, y_pred)*100))\nprint(\"Classification Report: \\n\",classification_report(y_test, y_pred))","641487ae":"rt_clf = RandomForestClassifier(criterion=\"entropy\", random_state=123)\nrt_clf.fit(X_train, y_train)","0e15e476":"rt_clf.feature_importances_","31a766f7":"y_pred = rt_clf.predict(X_test)","7f06d044":"print(\"Accuracy : {}%\".format(accuracy_score(y_test, y_pred)*100))\nprint(\"Classification Report: \\n\",classification_report(y_test, y_pred))","40d825e2":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score, classification_report","bffb271e":"df_clf = DecisionTreeClassifier(criterion='gini', random_state=123)\ndf_clf.fit(X_train, y_train)","5dc8d7fb":"df_clf.feature_importances_","980a5300":"y_pred = df_clf.predict(X_test)","76818fc1":"print(\"Accuracy : {}%\".format(accuracy_score(y_test, y_pred)*100))\nprint(\"Classification Report: \\n\",classification_report(y_test, y_pred))","e1681d7d":"df_clf = DecisionTreeClassifier(criterion='entropy', random_state=123)\ndf_clf.fit(X_train, y_train)","0a965774":"df_clf.feature_importances_","c9d92639":"y_pred = df_clf.predict(X_test)","04d122e5":"print(\"Accuracy : {}%\".format(accuracy_score(y_test, y_pred)*100))\nprint(\"Classification Report: \\n\",classification_report(y_test, y_pred))","1b21fb7b":"## Plots for understanding","bd033379":"### Decision Tree with Entropy","65d86d98":"### Random Forest with Gini","703f7661":"## Random Forest ","5dc7d907":"No features to be dropped","46e4542b":"Size of dataset","d566eae3":"## Primary Feature Selection\nChecking for correlated features and threshold is set to 0.9.","388ae321":"## Counting no of unique classes","3289703e":"### Random Forest with Entropy","45a8ebd7":"## Decision Tree","2982481a":"## Extracting features and labels\nSelecting 'SITE' for labels and rest for features ","8181b91b":"### Decision Tree with Gini","3961bd0a":"## Train Test Split"}}