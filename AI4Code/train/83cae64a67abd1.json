{"cell_type":{"3b991234":"code","dbf13d73":"code","dc9f33dc":"code","3faf0561":"code","448f42ef":"code","76499a04":"code","3a516cba":"code","77c1d148":"code","886f6d9f":"code","36e68a46":"code","b6ce4230":"code","1b0354c8":"code","f8b0314c":"code","af3fe240":"code","312baa2d":"code","b2ed9ba7":"code","fd46f843":"code","4418b6b4":"code","9031fabb":"code","991e24d9":"code","2d5ec81d":"code","ad7f9ff9":"code","c7b5a048":"code","604bce53":"code","68cd9977":"code","bed529f5":"code","9b801fe9":"code","6ce9bfaf":"code","54cf18bc":"code","8175e145":"code","f6b49441":"code","780a4560":"code","31cc7f6d":"code","878323a1":"code","f188d556":"code","0f91286f":"code","bc2cfd64":"code","9191fe62":"code","8d882f5b":"code","450b0406":"code","318c116e":"code","a0ea3105":"code","862e513d":"code","f0548c49":"code","194236fc":"code","fbafddff":"code","6e008284":"code","b674356c":"code","ec7ee0c7":"code","25c506e1":"code","3d96ac0d":"code","aabc8025":"code","66d5e916":"code","68213b7f":"code","1cb8dc85":"code","05eb8d24":"code","b48897dd":"code","c2155a54":"code","cc9394e9":"code","b03cf3d6":"code","4baf930e":"code","aa66cbe8":"code","9139b489":"code","3512df3c":"code","9743a8bf":"code","13eee4a8":"code","098a1ce4":"code","3a699b97":"code","0869b165":"code","5add9de1":"code","b77c10cb":"code","406db1e8":"code","df39a5a4":"code","a2b49929":"code","5953b890":"code","4170d253":"code","2c2f3c63":"code","005104a1":"code","b15a2dea":"code","7d5b61f7":"code","eeb8503b":"code","125a1109":"code","010ba906":"code","afeaadeb":"code","b1a205eb":"code","0833abc6":"code","4d99d632":"code","c811386f":"code","a5860acc":"code","0a871f96":"code","ac7cdc37":"code","dda61b00":"code","8cf331d7":"code","e12ef536":"code","e4d9f252":"code","ef678d9a":"code","183af6c3":"code","83f7a918":"code","13e93b18":"code","ef6314ea":"code","5930b7e3":"code","cf9b958c":"code","d4b8d144":"code","bd766333":"code","071784e3":"code","43f87614":"code","fbea61b6":"code","26491ce4":"code","1c3b2824":"code","1cafc5ac":"code","82149952":"code","c0366bc5":"code","3f34f073":"code","8772344c":"code","08955a05":"code","dd54c0f0":"code","a84e3c3d":"code","9060d070":"code","9ffda306":"code","0e2c94f9":"code","086d7951":"markdown","601ed388":"markdown","c3b07054":"markdown","9ab95d47":"markdown","30c3ef50":"markdown","fa8eca67":"markdown","edb2ce25":"markdown","fbd44ed8":"markdown","70377233":"markdown","72cab165":"markdown","7c7d4839":"markdown","db244d4c":"markdown","f4dfb790":"markdown","f4a97847":"markdown","ddc874d0":"markdown","975cc8ab":"markdown","ecb33235":"markdown","e8b39ee1":"markdown","51d3a5d4":"markdown","81295b62":"markdown","ac18ba3e":"markdown","f35900a0":"markdown","f84b922c":"markdown","82a44f07":"markdown","7f8f18ba":"markdown","44125578":"markdown","b72fd0da":"markdown","a93d79fe":"markdown","d1b31870":"markdown","1e826af4":"markdown","583b9ea4":"markdown","7c627b05":"markdown","0745e988":"markdown","6f83b00b":"markdown","087a2341":"markdown","6d0d8b20":"markdown","21e5eaab":"markdown","7cfb93e8":"markdown","7792bd1f":"markdown","ece5ee36":"markdown","6330844d":"markdown","46e351b8":"markdown","e3fd728e":"markdown","567d63ab":"markdown","c6972400":"markdown","eda25241":"markdown","6bc0d600":"markdown","0a7142b6":"markdown","e6685967":"markdown","04809dea":"markdown","f2616df4":"markdown","c3a19b16":"markdown","a2c51328":"markdown","0d4daffa":"markdown","1be80a4d":"markdown","4c662b25":"markdown","999dd923":"markdown","814fa199":"markdown","4964d471":"markdown","0b326ad2":"markdown","646f719a":"markdown","067795a4":"markdown","299d272c":"markdown","14b7f5ea":"markdown","9bcd7323":"markdown","0f07ceea":"markdown","bb52480b":"markdown","0cd00bdc":"markdown","f3d5da78":"markdown","8cdbb1c5":"markdown","10c38142":"markdown","72dee603":"markdown","15b263bc":"markdown","0bcbe062":"markdown","ce95a0be":"markdown","af7e8b96":"markdown","85ef496d":"markdown","7959b1f6":"markdown","d622eace":"markdown","a2f9091c":"markdown","b176c6d1":"markdown","94489518":"markdown","ad21bdbd":"markdown","b025684a":"markdown","4087ea2b":"markdown","7ed357a4":"markdown","30a77def":"markdown","aa55aa77":"markdown","fa8542fe":"markdown","d4c1ca67":"markdown","414c58c1":"markdown","c989a374":"markdown","652b3b29":"markdown","480ac8b1":"markdown","087cd958":"markdown","7b2ca9a2":"markdown","1882e0e7":"markdown","49a8f9de":"markdown","7e1ca5c5":"markdown","a2d82704":"markdown","055b8a99":"markdown"},"source":{"3b991234":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\npd.options.display.max_columns = None","dbf13d73":"desc = pd.read_csv('..\/input\/bank-loans-dataset\/columns_description.csv', encoding='latin')","dc9f33dc":"desc.head()","3faf0561":"df_app=pd.read_csv('..\/input\/bank-loans-dataset\/application_data.csv')\ndf_app.head(5)","448f42ef":"df_app.info(verbose = True) ","76499a04":"df_app.shape","3a516cba":"df_app['TARGET'].value_counts().plot(kind='barh', figsize=(8, 6))\nplt.xlabel(\"Count\", labelpad=14)\nplt.ylabel(\"Target Variable\", labelpad=14)\nplt.title(\"Count of TARGET Variable per category\", y=1.02);","77c1d148":"100*df_app['TARGET'].value_counts()\/len(df_app['TARGET'])","886f6d9f":"emptycol=df_app.isnull().sum()\nemptycol=emptycol[emptycol.values>(0.3*len(emptycol))]","36e68a46":"emptycol_df = pd.DataFrame(emptycol)\nemptycol_df = emptycol_df.reset_index()\nemptycol_df = emptycol_df.rename(columns={\"index\": \"Row\", \"0\": \"count\"})","b6ce4230":"desc_appl_data = desc.loc[desc.Table =='application_data']","1b0354c8":"analyse_emptycol_df = pd.merge(left=emptycol_df,right=desc_appl_data,how='inner',on='Row')\nanalyse_emptycol_df[['Row', 'Description']]","f8b0314c":"missing = pd.DataFrame((df_app.isnull().sum())*100\/df_app.shape[0]).reset_index()\nplt.figure(figsize=(16,5))\nax = sns.pointplot('index',0,data=missing)\nplt.xticks(rotation =90,fontsize =7)\nplt.title(\"Percentage of Missing values\")\nplt.ylabel(\"PERCENTAGE\")\nplt.show()","af3fe240":"emptycol = list(emptycol[emptycol.values>=0.3].index)","312baa2d":"emptycol.remove('AMT_GOODS_PRICE')\nemptycol.remove('OWN_CAR_AGE')\nemptycol.remove('OCCUPATION_TYPE')","b2ed9ba7":"len(emptycol)","fd46f843":"df_app.drop(labels=emptycol,axis=1,inplace=True)\nprint(len(emptycol))","4418b6b4":"df_app.isnull().sum()\/len(df_app)*100","9031fabb":"values=df_app['AMT_ANNUITY'].median()\n\ndf_app.loc[df_app['AMT_ANNUITY'].isnull(),'AMT_ANNUITY']=values","991e24d9":"df_app.isnull().sum()","2d5ec81d":"emptyrow=df_app.isnull().sum(axis=1)\nemptyrow=list(emptyrow[emptyrow.values>=0.3*len(df_app)].index)\ndf_app.drop(labels=emptyrow,axis=0,inplace=True)\nprint(len(emptyrow))","ad7f9ff9":"unwanted=['FLAG_MOBIL', 'FLAG_EMP_PHONE', 'FLAG_WORK_PHONE', 'FLAG_CONT_MOBILE',\n       'FLAG_PHONE', 'FLAG_EMAIL','REGION_RATING_CLIENT','REGION_RATING_CLIENT_W_CITY','FLAG_EMAIL','CNT_FAM_MEMBERS', 'REGION_RATING_CLIENT',\n       'REGION_RATING_CLIENT_W_CITY','DAYS_LAST_PHONE_CHANGE', 'FLAG_DOCUMENT_2', 'FLAG_DOCUMENT_3','FLAG_DOCUMENT_4', 'FLAG_DOCUMENT_5', 'FLAG_DOCUMENT_6',\n       'FLAG_DOCUMENT_7', 'FLAG_DOCUMENT_8', 'FLAG_DOCUMENT_9','FLAG_DOCUMENT_10', 'FLAG_DOCUMENT_11', 'FLAG_DOCUMENT_12',\n       'FLAG_DOCUMENT_13', 'FLAG_DOCUMENT_14', 'FLAG_DOCUMENT_15','FLAG_DOCUMENT_16', 'FLAG_DOCUMENT_17', 'FLAG_DOCUMENT_18',\n       'FLAG_DOCUMENT_19', 'FLAG_DOCUMENT_20', 'FLAG_DOCUMENT_21']\n\ndf_app.drop(labels=unwanted,axis=1,inplace=True)","c7b5a048":"df_app[df_app['CODE_GENDER']=='XNA'].shape","604bce53":"df_app[df_app['ORGANIZATION_TYPE']=='XNA'].shape","68cd9977":"df_app['CODE_GENDER'].value_counts()","bed529f5":"df_app.loc[df_app['CODE_GENDER']=='XNA','CODE_GENDER']='F'\ndf_app['CODE_GENDER'].value_counts()","9b801fe9":"df_app['ORGANIZATION_TYPE'].describe()","6ce9bfaf":"df_app=df_app.drop(df_app.loc[df_app['ORGANIZATION_TYPE']=='XNA'].index)\ndf_app[df_app['ORGANIZATION_TYPE']=='XNA'].shape","54cf18bc":"color=['blue','orange','green', 'red', 'violet', 'pink']\n\ndf_app.CODE_GENDER.value_counts(normalize=True).plot.bar(color=color)\nplt.show()\ndf_app.NAME_FAMILY_STATUS.value_counts(normalize=True).plot.bar(color=color)\nplt.show()\ndf_app.NAME_INCOME_TYPE.value_counts(normalize=True).plot.bar(color=color)\nplt.show()\ndf_app.OCCUPATION_TYPE.value_counts(normalize=True).plot.bar(color=color)\nplt.show()","8175e145":"def plot_features(feature,label_rotation=False,horizontal_layout=True):\n    temp = df_app[feature].value_counts()\n    df1 = pd.DataFrame({feature: temp.index,'absolute values': temp.values})\n    \n    t1_percentage = df_app[[feature, 'TARGET']].groupby([feature],as_index=False).mean()\n    t1_percentage.sort_values(by='TARGET', ascending=False, inplace=True)\n    \n    if(horizontal_layout):\n        fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12,6))\n    else:\n        fig, (ax1, ax2) = plt.subplots(nrows=2, figsize=(12,14))\n    s = sns.barplot(ax=ax1, x = feature, y=\"absolute values\",data=df1)\n    if(label_rotation):\n        s.set_xticklabels(s.get_xticklabels(),rotation=90)\n    \n    s = sns.barplot(ax=ax2, x = feature, y='TARGET', order=t1_percentage[feature], data=t1_percentage)\n    if(label_rotation):\n        s.set_xticklabels(s.get_xticklabels(),rotation=90)\n    plt.ylabel('% of applications where loans were NOT repayed', fontsize=10)\n    plt.tick_params(axis='both', which='major', labelsize=10)\n    plt.subplots_adjust(wspace = .6)\n\n    plt.show();","f6b49441":"categorical= df_app.select_dtypes(include=object).columns\ncategorical","780a4560":"plot_features('NAME_FAMILY_STATUS',True, True)","31cc7f6d":"df_app['NAME_INCOME_TYPE'].value_counts()","878323a1":"plot_features('NAME_INCOME_TYPE',False,False)","f188d556":"plot_features('OCCUPATION_TYPE',True, False)","0f91286f":"plot_features('NAME_EDUCATION_TYPE',True,True)","bc2cfd64":"plot_features('ORGANIZATION_TYPE',True, False)","9191fe62":"plot_features('NAME_HOUSING_TYPE',True)","8d882f5b":"plot_features('WEEKDAY_APPR_PROCESS_START', True)","450b0406":"plot_features('REG_REGION_NOT_LIVE_REGION')\nplot_features('REG_REGION_NOT_WORK_REGION')","318c116e":"plot_features('REG_CITY_NOT_LIVE_CITY')\nplot_features('REG_CITY_NOT_WORK_CITY')","a0ea3105":"for feature in categorical[:4]:\n    plot_features(feature)","862e513d":"numeric_columns=['TARGET','CNT_CHILDREN','AMT_INCOME_TOTAL','AMT_CREDIT','AMT_ANNUITY','REGION_POPULATION_RELATIVE','DAYS_BIRTH',\n                'DAYS_EMPLOYED','DAYS_REGISTRATION','DAYS_ID_PUBLISH','HOUR_APPR_PROCESS_START','LIVE_REGION_NOT_WORK_REGION', 'REG_CITY_NOT_LIVE_CITY',\n       'REG_CITY_NOT_WORK_CITY', 'LIVE_CITY_NOT_WORK_CITY']\n\ndf_app[numeric_columns]=df_app[numeric_columns].apply(pd.to_numeric)\ndf_app.head(5)\n","f0548c49":"bins = [0,25000,50000,75000,100000,125000,150000,175000,200000,225000,250000,275000,300000,325000,350000,375000,400000,425000,450000,475000,500000,10000000000]\nslot = ['0-25000', '25000-50000','50000-75000','75000,100000','100000-125000', '125000-150000', '150000-175000','175000-200000',\n       '200000-225000','225000-250000','250000-275000','275000-300000','300000-325000','325000-350000','350000-375000',\n       '375000-400000','400000-425000','425000-450000','450000-475000','475000-500000','500000 and above']\n\ndf_app['AMT_INCOME_RANGE']=pd.cut(df_app['AMT_INCOME_TOTAL'],bins,labels=slot)\ndf_app.head(20)","194236fc":"target0_df_app=df_app.loc[df_app[\"TARGET\"]==0]\ntarget1_df_app=df_app.loc[df_app[\"TARGET\"]==1]","fbafddff":"target0_df_app.shape, target1_df_app.shape","6e008284":"df_app['TARGET'].value_counts().plot(kind='barh', figsize=(8, 6))\nplt.xlabel(\"Count\", labelpad=14)\nplt.ylabel(\"Target Variable\", labelpad=14)\nplt.title(\"Count of TARGET Variable per category\", y=1.02);","b674356c":"def uniplot(df,col,title,hue =None):\n    \n    sns.set_style('whitegrid')\n    sns.set_context('talk')\n    plt.rcParams[\"axes.labelsize\"] = 20\n    plt.rcParams['axes.titlesize'] = 22\n    plt.rcParams['axes.titlepad'] = 30\n    \n    \n    temp = pd.Series(data = hue)\n    fig, ax = plt.subplots()\n    width = len(df[col].unique()) + 7 + 4*len(temp.unique())\n    fig.set_size_inches(width , 8)\n    plt.xticks(rotation=45)\n    plt.yscale('log')\n    plt.title(title)\n    ax = sns.countplot(data = df, x= col, order=df[col].value_counts().index,hue = hue,palette='bright') \n        \n    plt.show()","ec7ee0c7":"uniplot(target0_df_app,col='OCCUPATION_TYPE',title='Distribution of Occupation Type - For Target: 0',hue='CODE_GENDER')","25c506e1":"uniplot(target1_df_app,col='OCCUPATION_TYPE',title='Distribution of Occupation Type - For Target: 1',hue='CODE_GENDER')","3d96ac0d":"res = pd.pivot_table(data=df_app, index='OCCUPATION_TYPE', columns='CODE_GENDER', values='TARGET')\nsns.heatmap(res, annot=False, cmap=\"RdYlGn\")","aabc8025":"uniplot(target0_df_app,col='FLAG_OWN_CAR',title='Distribution of Car Owner Flag - For Target: 0',hue='CODE_GENDER')","66d5e916":"uniplot(target1_df_app,col='FLAG_OWN_CAR',title='Distribution of Car Owner Flag - For Target: 1',hue='CODE_GENDER')","68213b7f":"res = pd.pivot_table(data=df_app, index='FLAG_OWN_CAR', columns='CODE_GENDER', values='TARGET')\nsns.heatmap(res, annot=False, cmap=\"RdYlGn\")","1cb8dc85":"uniplot(target0_df_app,col='NAME_CONTRACT_TYPE',title='Distribution of name of contract type',hue='CODE_GENDER')","05eb8d24":"uniplot(target1_df_app,col='NAME_CONTRACT_TYPE',title='Distribution of name of contract type - Target 1',hue='CODE_GENDER')","b48897dd":"res = pd.pivot_table(data=df_app, index='NAME_CONTRACT_TYPE', columns='CODE_GENDER', values='TARGET')\nsns.heatmap(res, annot=False, cmap=\"RdYlGn\")","c2155a54":"uniplot(target0_df_app,col='AMT_INCOME_RANGE',title='Distribution of Amount income range - Target: 0',hue='CODE_GENDER')","cc9394e9":"uniplot(target1_df_app,col='AMT_INCOME_RANGE',title='Distribution of Amount income range - Target: 1',hue='CODE_GENDER')","b03cf3d6":"res = pd.pivot_table(data=df_app, index='AMT_INCOME_RANGE', columns='CODE_GENDER', values='TARGET')\nsns.heatmap(res, annot=False, cmap=\"RdYlGn\")","4baf930e":"uniplot(target0_df_app,col='NAME_INCOME_TYPE',title='Distribution of Name of Income type - Target: 0',hue='CODE_GENDER')","aa66cbe8":"uniplot(target1_df_app,col='NAME_INCOME_TYPE',title='Distribution of Name of Income type - Target: 1',hue='CODE_GENDER')","9139b489":"res = pd.pivot_table(data=df_app, index='NAME_INCOME_TYPE', columns='CODE_GENDER', values='TARGET')\nsns.heatmap(res, annot=False, cmap=\"RdYlGn\")","3512df3c":"sns.set_style('whitegrid')\nsns.set_context('talk')\nplt.figure(figsize=(15,30))\nplt.rcParams[\"axes.labelsize\"] = 20\nplt.rcParams['axes.titlesize'] = 22\nplt.rcParams['axes.titlepad'] = 30\n\nplt.title(\"Distribution of Organization type for target - 0\")\n\nplt.xticks(rotation=90)\nplt.xscale('log')\n\nsns.countplot(data=target0_df_app,y='ORGANIZATION_TYPE',order=target0_df_app['ORGANIZATION_TYPE'].value_counts().index,palette='bright')\n\nplt.show()","9743a8bf":"sns.set_style('whitegrid')\nsns.set_context('talk')\nplt.figure(figsize=(15,30))\nplt.rcParams[\"axes.labelsize\"] = 20\nplt.rcParams['axes.titlesize'] = 22\nplt.rcParams['axes.titlepad'] = 30\n\nplt.title(\"Distribution of Organization type for target - 1\")\n\nplt.xticks(rotation=90)\nplt.xscale('log')\n\nsns.countplot(data=target0_df_app,y='ORGANIZATION_TYPE',order=target0_df_app['ORGANIZATION_TYPE'].value_counts().index,palette='bright')\n\nplt.show()","13eee4a8":"numer= df_app.describe()\nnumerical= numer.columns\nnumer","098a1ce4":"numer.columns","3a699b97":"(df_app['DAYS_BIRTH'] \/ -365).describe()","0869b165":"plt.figure(figsize = (12, 10))\n\nsns.kdeplot(df_app.loc[df_app['TARGET'] == 1, 'DAYS_BIRTH'] \/ -365, label = 'Loan repayed(0)')\nsns.kdeplot(df_app.loc[df_app['TARGET'] == 0, 'DAYS_BIRTH'] \/ -365, label = 'Loan not repayed(1)')\nplt.xlabel('Age in years'); \nplt.ylabel('Density'); \nplt.title('Age Distribution');","5add9de1":"df_app['DAYS_BIRTH'] = abs(df_app['DAYS_BIRTH'])\ndf_app['DAYS_BIRTH'].corr(df_app['TARGET'])","b77c10cb":"age_data = df_app[['TARGET', 'DAYS_BIRTH']]\nage_data['YEARS_BIRTH'] = age_data['DAYS_BIRTH'] \/ 365\nage_data['AGE_RANGE'] = pd.cut(age_data['YEARS_BIRTH'], bins = np.linspace(20, 70, num = 11))\n\nage_data = age_data.groupby('AGE_RANGE').mean()\nage_data","406db1e8":"plt.bar(age_data.index.astype(str), 100 * age_data['TARGET'])\n\nplt.xticks(rotation = 90); plt.xlabel('Age Range'); plt.ylabel('% of Loans not repayed')\nplt.title('Age analysis');","df39a5a4":"def plot_numerical(feature):\n    plt.figure(figsize=(10,6))\n    plt.title(\"%s Distribution\" % feature)\n    sns.distplot(df_app[feature].dropna(), kde=True)\n    plt.show()   ","a2b49929":"plot_features('CNT_CHILDREN')","5953b890":"df_app_again = pd.read_csv('..\/input\/bank-loans-dataset\/application_data.csv')","4170d253":"df_app['CNT_FAM_MEMBERS'] = df_app_again['CNT_FAM_MEMBERS']\ndf_app['EXT_SOURCE_1'] = df_app_again['EXT_SOURCE_1']\ndf_app['EXT_SOURCE_2'] = df_app_again['EXT_SOURCE_2']\ndf_app['EXT_SOURCE_3'] = df_app_again['EXT_SOURCE_3']\ndf_app['FLAG_EMP_PHONE'] = df_app_again['FLAG_EMP_PHONE']","2c2f3c63":"plot_features('CNT_FAM_MEMBERS',True)","005104a1":"plot_numerical('AMT_INCOME_TOTAL')","b15a2dea":"plot_numerical('AMT_CREDIT')","7d5b61f7":"plot_numerical('AMT_ANNUITY')","eeb8503b":"plot_numerical('AMT_GOODS_PRICE')","125a1109":"plot_numerical('DAYS_REGISTRATION')","010ba906":"plot_numerical('DAYS_ID_PUBLISH')","afeaadeb":"def plot_comparisons(features):\n\n    t_1 = df_app.loc[df_app['TARGET'] == 1]\n    t_0 = df_app.loc[df_app['TARGET'] == 0]\n    i=0\n    for feature in features:\n        plt.figure(figsize=(12,6))\n        i += 1\n        sns.kdeplot(t_0[feature], bw=0.5,label=\"Loans repayed\")\n        sns.kdeplot(t_1[feature], bw=0.5,label=\"Loans not repayed\")\n        plt.ylabel('Density')\n        plt.xlabel(feature)\n        _, labels = plt.xticks()\n        plt.tick_params(axis='both', which='major', labelsize=12)\n    plt.show();","b1a205eb":"feat = ['AMT_CREDIT','AMT_ANNUITY','AMT_GOODS_PRICE','DAYS_EMPLOYED', 'DAYS_REGISTRATION','DAYS_ID_PUBLISH']\nplot_comparisons(feat)","0833abc6":"app_data_enc = pd.get_dummies(df_app, drop_first=True)","4d99d632":"app_data_enc","c811386f":"correlations = df_app.corr()['TARGET'].sort_values()\nprint('Top 10 Positive Correlations:\\n', correlations.tail(10))\nprint('\\nTop 10 Negative Correlations:\\n', correlations.head(10))","a5860acc":"df_app['DAYS_BIRTH']\next_sc = df_app[['TARGET', 'EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3', 'DAYS_BIRTH']]\next_sc_corrs = ext_sc.corr()\n\nplt.figure(figsize = (8, 6))\nsns.heatmap(ext_sc_corrs, vmin = -0.2, annot = True)\nplt.title('Correlation for External Sources and Age');","0a871f96":"plt.figure(figsize = (10, 12))\n\nexternals= ['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3']\nfor i, source in enumerate(externals):\n    plt.subplot(3, 1, i + 1)\n    sns.kdeplot(df_app.loc[df_app['TARGET'] == 0, source], label = 'target == 0')\n    sns.kdeplot(df_app.loc[df_app['TARGET'] == 1, source], label = 'target == 1')\n    plt.title('Distribution of %s by Target Value' % source)\n    plt.xlabel('%s' % source); plt.ylabel('Density');\n    \nplt.tight_layout(h_pad = 2.5)","ac7cdc37":"plot_features('FLAG_EMP_PHONE')","dda61b00":"prev_data= pd.read_csv('..\/input\/bank-loans-dataset\/previous_application.csv')\nprev_data","8cf331d7":"len(set(prev_data['SK_ID_CURR']))\n#many applicants have applied for multiple loans in the past","e12ef536":"x = prev_data.groupby('SK_ID_CURR')['SK_ID_PREV'].count().reset_index()\nplt.figure(figsize=(12,6))\nax = sns.distplot(x[\"SK_ID_PREV\"])\nplt.axvline(x[\"SK_ID_PREV\"].mean(),linestyle=\"dashed\",color=\"r\",label=\"average\")\nplt.axvline(x[\"SK_ID_PREV\"].max(),linestyle=\"dashed\",color=\"g\",label=\"maximum\")\nplt.legend(loc=\"best\")\nplt.title(\"Current loan applications which had applied previously too\")\nplt.show()","e4d9f252":"sns.countplot(data=prev_data, x='NAME_CONTRACT_STATUS')","ef678d9a":"100*prev_data['NAME_CONTRACT_STATUS'].value_counts()\/len(prev_data['NAME_CONTRACT_STATUS'])","183af6c3":"relation= pd.crosstab(prev_data['NAME_CONTRACT_TYPE'],prev_data['NAME_CONTRACT_STATUS'])\nax = relation.plot(kind=\"barh\",figsize=(10,6),stacked=True)\nplt.xticks(rotation=0)\nplt.xlabel(\"count\")\nplt.title(\"Count of application status by contract type\")\nplt.show()","83f7a918":"relation = pd.crosstab(prev_data[\"HOUR_APPR_PROCESS_START\"],prev_data[\"NAME_CONTRACT_STATUS\"]).stack().reset_index()\nplt.figure(figsize=(14,8))\nax = sns.pointplot(relation[\"HOUR_APPR_PROCESS_START\"],relation[0],hue=relation[\"NAME_CONTRACT_STATUS\"],scale=1)\nax.set_ylabel(\"count\")\nax.set_title(\"Contract status by hour of the day\")\nplt.grid(True,alpha=.2)","13e93b18":"purpose = pd.crosstab(prev_data[\"NAME_CASH_LOAN_PURPOSE\"],prev_data[\"NAME_CONTRACT_STATUS\"])\ntotal= purpose[\"Approved\"]+purpose[\"Canceled\"]+purpose[\"Refused\"]+purpose[\"Unused offer\"]\npurpose[\"% approved\"] = purpose[\"Approved\"]*100\/total\npurpose[\"% cancelled\"] = purpose[\"Canceled\"]*100\/total\npurpose[\"% refused\"] = purpose[\"Refused\"]*100\/total\npurpose[\"% unused\"] = purpose[\"Unused offer\"]*100\/total\npurpose= purpose[['% approved', '% cancelled', '% refused', '% unused']]\npurpose = purpose.stack().reset_index()\n\npurpose","ef6314ea":"status = purpose[\"NAME_CONTRACT_STATUS\"].unique().tolist()\nlength = len(status)\nimport itertools\nfig = plt.figure(figsize=(14,18))\nfor stat,l in itertools.zip_longest(status,range(length)):\n    plt.subplot(2,2,l+1)\n    data = purpose[purpose[\"NAME_CONTRACT_STATUS\"] == stat]\n    ax = sns.barplot(0,\"NAME_CASH_LOAN_PURPOSE\",data=data.sort_values(by=0,ascending=False))\n    plt.ylabel(\"\")\n    plt.xlabel(\"percentage\")\n    plt.title(stat+\" by cash loan purpose\")\n    plt.subplots_adjust(wspace = .7)","5930b7e3":"def plot_trend(feature, title):\n    feat = prev_data[feature].value_counts().reset_index()\n    ax = sns.barplot(feature,\"index\",data=feat, palette='deep')\n    percentage_feat= np.around((feat[feature].values*100\/(feat[feature].sum())))\n    for i,j in enumerate(percentage_feat):\n        ax.text(.8,i,j,weight=\"bold\")\n    plt.xlabel('percentage')\n    plt.tick_params(axis='x', which='both', bottom=False,labelbottom=False)\n    plt.ylabel(feature)\n    plt.title(title)\n","cf9b958c":"plot_trend('CODE_REJECT_REASON', 'Reasons for rejecting applications')","d4b8d144":"plot_trend('NAME_PAYMENT_TYPE', 'Payment methods by clients')","bd766333":"channel = pd.crosstab(prev_data[\"CHANNEL_TYPE\"],prev_data[\"NAME_CONTRACT_STATUS\"])\ntotal= channel['Approved']+channel['Refused']+channel['Canceled']\nchannel[\"% approval\"] = channel[\"Approved\"]*100\/total\nchannel[\"% refused\"]  = channel[\"Refused\"]*100\/total\nchannel[\"% cancelled\"] = channel[\"Canceled\"]*100\/total\nchannel = channel[[\"% approval\",\"% refused\",\"% cancelled\"]]\n\nax = channel.plot(kind=\"barh\",stacked=True,figsize=(10,8))\nax.set_xlabel(\"percentage\")\nax.set_title(\"approval,cancel and refusal rates by channel types\")\nplt.show()","071784e3":"emptycol1=prev_data.isnull().sum()\nemptycol1=emptycol1[emptycol1.values>(0.3*len(emptycol1))]\nlen(emptycol1)\n","43f87614":"prev_data","fbea61b6":"prev_data.shape","26491ce4":"prev_data=prev_data.drop(prev_data[prev_data['NAME_CASH_LOAN_PURPOSE']=='XNA'].index)\nprev_data=prev_data.drop(prev_data[prev_data['NAME_CASH_LOAN_PURPOSE']=='XNA'].index)\nprev_data=prev_data.drop(prev_data[prev_data['NAME_CASH_LOAN_PURPOSE']=='XAP'].index)\n\nprev_data.shape","1c3b2824":"new_df=pd.merge(left=df_app,right=prev_data,how='inner',on='SK_ID_CURR',suffixes='_x')","1cafc5ac":"\n\nnew_df1 = new_df.rename({'NAME_CONTRACT_TYPE_' : 'NAME_CONTRACT_TYPE','AMT_CREDIT_':'AMT_CREDIT','AMT_ANNUITY_':'AMT_ANNUITY',\n                         'WEEKDAY_APPR_PROCESS_START_' : 'WEEKDAY_APPR_PROCESS_START',\n                         'HOUR_APPR_PROCESS_START_':'HOUR_APPR_PROCESS_START','NAME_CONTRACT_TYPEx':'NAME_CONTRACT_TYPE_PREV',\n                         'AMT_CREDITx':'AMT_CREDIT_PREV','AMT_ANNUITYx':'AMT_ANNUITY_PREV',\n                         'WEEKDAY_APPR_PROCESS_STARTx':'WEEKDAY_APPR_PROCESS_START_PREV',\n                         'HOUR_APPR_PROCESS_STARTx':'HOUR_APPR_PROCESS_START_PREV'}, axis=1)\n\n","82149952":"\n\nnew_df1.drop(['SK_ID_CURR','WEEKDAY_APPR_PROCESS_START', 'HOUR_APPR_PROCESS_START','REG_REGION_NOT_LIVE_REGION', \n              'REG_REGION_NOT_WORK_REGION','LIVE_REGION_NOT_WORK_REGION', 'REG_CITY_NOT_LIVE_CITY',\n              'REG_CITY_NOT_WORK_CITY', 'LIVE_CITY_NOT_WORK_CITY','WEEKDAY_APPR_PROCESS_START_PREV',\n              'HOUR_APPR_PROCESS_START_PREV', 'FLAG_LAST_APPL_PER_CONTRACT','NFLAG_LAST_APPL_IN_DAY'],axis=1,inplace=True)","c0366bc5":"sns.set_style('whitegrid')\nsns.set_context('talk')\n\nplt.figure(figsize=(15,30))\nplt.rcParams[\"axes.labelsize\"] = 20\nplt.rcParams['axes.titlesize'] = 22\nplt.rcParams['axes.titlepad'] = 30\nplt.xticks(rotation=90)\nplt.xscale('log')\nplt.title('Distribution of contract status with purposes')\nax = sns.countplot(data = new_df1, y= 'NAME_CASH_LOAN_PURPOSE', \n                   order=new_df1['NAME_CASH_LOAN_PURPOSE'].value_counts().index,hue = 'NAME_CONTRACT_STATUS',palette='bright') ","3f34f073":"sns.set_style('whitegrid')\nsns.set_context('talk')\n\nplt.figure(figsize=(15,30))\nplt.rcParams[\"axes.labelsize\"] = 20\nplt.rcParams['axes.titlesize'] = 22\nplt.rcParams['axes.titlepad'] = 30\nplt.xticks(rotation=90)\nplt.xscale('log')\nplt.title('Distribution of purposes with target ')\nax = sns.countplot(data = new_df1, y= 'NAME_CASH_LOAN_PURPOSE', \n                   order=new_df1['NAME_CASH_LOAN_PURPOSE'].value_counts().index,hue = 'TARGET',palette='bright') ","8772344c":"plt.figure(figsize=(16,12))\nplt.xticks(rotation=90)\nplt.yscale('log')\nsns.boxplot(data =new_df1, x='NAME_CASH_LOAN_PURPOSE',hue='NAME_INCOME_TYPE',y='AMT_CREDIT_PREV',orient='v')\nplt.title('Prev Credit amount vs Loan Purpose')\nplt.show()","08955a05":"plt.figure(figsize=(16,12))\nplt.xticks(rotation=90)\nsns.barplot(data =new_df1, y='AMT_CREDIT_PREV',hue='TARGET',x='NAME_HOUSING_TYPE')\nplt.title('Prev Credit amount vs Housing type')\nplt.show()","dd54c0f0":"new_df1_target0=new_df1.loc[new_df1[\"TARGET\"]==0]\nnew_df1_target1=new_df1.loc[new_df1[\"TARGET\"]==1]","a84e3c3d":"uniplot(new_df1_target1,col='OCCUPATION_TYPE',title='Distribution of Occupation Type',hue='CODE_GENDER')","9060d070":"uniplot(new_df1_target1,col='FLAG_OWN_CAR',title='Distribution of Occupation Type',hue='CODE_GENDER')","9ffda306":"uniplot(new_df1_target1,col='AMT_INCOME_RANGE',title='Distribution of Income Range',hue='CODE_GENDER')","0e2c94f9":"uniplot(new_df1_target1,col='NAME_INCOME_TYPE',title='Distribution of Income Type',hue='CODE_GENDER')","086d7951":"##### Distribution of contract status","601ed388":"###### Columns having null values","c3b07054":"###### Creating bins for income amount","9ab95d47":"Points to be concluded from the above Gender vs Name Income Type Analysis against Target variable:\n\n1. For income type \u2018working\u2019, \u2019commercial associate\u2019, and \u2018State Servant\u2019 the number of credits are higher than other i.e.   \u2018Maternity leave.\n2. For this Females are having more number of credits than male.\n4. For target value 1: There is no income type for \u2018student\u2019 , \u2019pensioner\u2019 and \u2018Businessman\u2019 which means they don\u2019t do any late payments.\n\n#### Good insight: Females are having marginally higher default rate as compared to males, and most defaulters are working professionals, commercial associates, state servants etc. People with income type: Student, Pensioner, Businessman are not late payers.\n","30c3ef50":"## Correlations","fa8eca67":"######  Plotting for Organization type in logarithmic scale\n","edb2ce25":"###### Removing the column values of 'XNA' and 'XAP'","fbd44ed8":"* Weekdays are more common days for loan application but it doesn't give any insight for defaulters.","70377233":"* Most clients are not accompanied by anyone when they apply for loan. There is no significant difference in default rates visible.","72cab165":"###### So, 'AMT_ANNUITY' columns is having very few null values rows. Hence let's try to impute the missing values","7c7d4839":"* Around 81% of rejected applications the reason is XAP(NA value) so the reason may not be applicable.\n* Next significant reason is HC.","db244d4c":"###### Casting all variable into numeric in the dataset","f4dfb790":"###### Calculating Imbalance percentage\nSince the majority is target0 and minority is target1","f4a97847":"###### Now, all columns have been with zero null values\n\nRemoving rows having null values greater than or equal to 30%","ddc874d0":"* Many people who provide their work phone are defaulting more than those who don't","975cc8ab":"Points to be concluded from the above graph.\n\n1. Clients which have applied for credits are from most of the organization type \u2018Business entity Type 3\u2019 , \u2018Self employed\u2019,\n   \u2018Other\u2019 , \u2018Medicine\u2019 and \u2018Government\u2019.\n2. Less clients are from Industry type 8,type 6, type 10, religion and  trade type 5, type 4.\n","ecb33235":"## Percentage of applications accepted,cancelled,refused and unused for different loan purposes","e8b39ee1":"#### From the above we can conclude some points-\n\n* Here for Housing type, office apartment is having higher credit of target 0 and co-op apartment is having higher credit of target 1. So, we can conclude that bank should avoid giving loans to the housing type of co-op apartment as they are having difficulties in payment. Bank can focus mostly on housing type with parents or House\\apartment or municipal apartment for successful payments.\n","51d3a5d4":"## External Sources","81295b62":"###### Checking the columns having less null percentage","ac18ba3e":"# Previous application","f35900a0":"* Channel types like Stone, regional and country-wide have maximum approval rates.\n* Channel of corporate sales and cash loans have maximum refusal rate.\n* Credit-cash offices and Contact centres have maximum cancellation rates.","f84b922c":"Points to be concluded from the above Gender vs Income Range Analysis against Target variable:\n\nFor target: 0\n\n1. Female counts are higher than male.\n2. Income range from 100000 to 200000 is having more number of credits.\n3. This graph show that females are more than male in having credits for that range.\n4. Very less count for income range 400000 and above.\n\nFor target: 1\n\n1. Male counts are higher than female.\n2. Income range from 100000 to 200000 is having more number of credits.\n3. This graph show that males are more than female in having credits for that range.\n4. Very less count for income range 400000 and above.\n\n#### Good insight: Male: Female ratio is almost 1:2, but looking at the heatmap, overally we can conclude that Male candidates with less income range are the most defaulters, the default rate keeps decreasing as the income range increases.","82a44f07":"## Some segmented analysis","7f8f18ba":"* We see the same people are risky here at city level like we saw in the regional level.\n* As city level has a significant difference in defaulter rates, we don't have to consider regional level as a determining factor.","44125578":"**Performing univariate analysis**","b72fd0da":"##### There are some columns where the value is mentioned as 'XNA' which means 'Not Available'. So we have to find the number of rows and columns and implement suitable techniques on them to fill those missing values or to delete them.\n\nlet's find these categorical columns having these 'XNA' values\n    \nFor Gender column","a93d79fe":"###### Concise Summary of the dataframe, as we have too many columns, we are using the verbose = True mode.","d1b31870":"###### We will remove unwanted columns from this dataset","1e826af4":"## Missing Data\n\n* Many columns have a lot of missing data (30-70%), some have few missing data (13-19%) and many columns also have no missing data at all.\n* For features with less missing values- can use regression to predict the missing values or fill with the mean of the values present, depending on the feature.\n* For features with very high number of missing values- it is better to drop those columns as they give very less insight on analysis.\n* As there's no thumb rule on what criteria do we delete the columns with high number of missing values, we do a small analysis below and take some decisions.\n\n***Check the columns having more than 30% null values (NaNs). \nCombining the columns having more than 30% null values along with Description for a better understanding.***","583b9ea4":"###### Plotting for Organization type","7c627b05":"Now, Creating bins for continous variable categories column 'AMT_INCOME_TOTAL' and 'AMT_CREDIT'","0745e988":"* Most clients are married. Civil marraiges and single people have higher chances of defaulting than others.","6f83b00b":"* The working class applies the most for loans, and have a very low default rate, hence they are reliable.\n* clients who are unemployed or on maternity leave have very high defaults rates even though they are a minority compared to other income types.\n* commercial associates, state servants and pensioners are fairly more reliable.","087a2341":"###### Describing the Gender column to check the number of females and males","6d0d8b20":"###### Box plotting for Credit amount prev vs Housing type in logarithmic scale\n","21e5eaab":"###### Since, Female is having the majority and only 4 rows are having NA values, we can update those columns with Gender 'F' as there will be no impact on the dataset.\n\nUpdating the column 'CODE_GENDER' with \"F\" for the dataset\n\n","7cfb93e8":"## Reasons for rejections.\nNAME_PAYMENT_TYPE - Payment method that client chose to pay for the previous application.","7792bd1f":"Points to be concluded from above plot:\n\n1. Most rejection of loans came from purpose 'repairs' & 'urgent needs'\n2. For education & medicine purposes we have almost equal number of approves and rejection\n3. Paying other loans and buying a new car is having significant higher rejection than approvals","ece5ee36":"* Organizations  with highest percent of loans defaulters are Transport: type 3 (16%), Industry: type 13 (13.5%), Industry: type 8 (12.5%) and Restaurant (less than 12%).\n* Business Entity type 3 Trade: type 4, Industry: type 12 organizations are most reliable.       ","6330844d":"###### Renaming the column names after merging","46e351b8":"## Current clients having previous loan applications\nSK_ID_PREV: ID of previous credit in Home credit related to loan in our sample. (One loan in our sample can have 0,1,2 or more previous loan applications in Home Credit, previous application could, but not necessarily have to lead to credit).<br>\nSK_ID_CURR: ID of loan in our sample.","e3fd728e":"###### Shape of the dataset\n","567d63ab":"###### So, there are 4 rows from Gender column and 55374 rows from Organization type column ","c6972400":"* When clients change their registration closer to application date, they are more likely to default.\n* Clients who change their identity documents closer to loan application are less reliable than those who change it well in advance.","eda25241":"Few points we can conclude from abpve plot:\n\n1. Loan purposes with 'Repairs' are facing more difficulites in payment on time.\n2. There are few places where loan payment is significant higher than facing difficulties.\n    They are 'Buying a garage', 'Business developemt', 'Buying land','Buying a new car' and 'Education'\nHence we can focus on these purposes for which the client is having for minimal payment difficulties.","6bc0d600":"## Application status by application type","0a7142b6":"* Purposes like XAP, purchase of electronics, everey day expenses and education have maximum loan acceptance.\n* Payment of other loans, refusal to name goal (can be suspicious) , buying new home or car have most refusals.\n* 40% of XNA(Not available) purpose loans are cancelled, followed by buying a garage\/home\/car.\n* % unused is too low to get any insight.","e6685967":"From the above we can conclude some points-\n\n1. The credit amount of Loan purposes like 'Buying a home','Buying a land','Buying a new car' and'Building a house' is higher.\n2. Income type of state servants have a significant amount of credit applied\n3. Money for third person or a Hobby is having less credits applied for.","04809dea":"Since this column is having an outlier which is very large it will be inappropriate to fill those missing values with mean, \nHence Median comes to rescue for this and we will fill those missing banks with median value\n\nFilling missing values with median","f2616df4":"## Contract status by hour of the day\nHOUR_APPR_PROCESS_START - Approximately at what day hour did the client apply for the previous application.","c3a19b16":"### In one of my earlier steps, I had removed CNT_FAM_MEMBERS thinking it to be useless, re-adding it back to our dataframe for an analysis.\n\n### Various other numerical columns with high null values were also added back and analysed in the numerical analysis part, but few columns provided good insights, hence adding these columns to the dataframe again so that we can show the analysis in the numerical section.","a2c51328":"* EXT_SOURCE_1 shows a similar distribution to the age of the client, which validates the positive correlation\n* EXT_SOURCE_3 displays greatest difference between the values of the target so it can be a determining factor.","0d4daffa":"* 'REG_REGION_NOT_LIVE_REGION'= Flag if client's permanent address does not match contact address (1=different, 0=same, at region level)\n* 'REG_REGION_NOT_WORK_REGION'= Flag if client's permanent address does not match work address (1=different, 0=same, at region level)\n* Clients who's permanent addresses do not match contact and work address are rare and more likely to default, hence less reliable","1be80a4d":"###### Merging applications data along with the previous applications data for better insights","4c662b25":"## Client payment methods","999dd923":"## Categorical Analysis","814fa199":"###### Checking the columns description file for information","4964d471":"###### Removing unwanted columns for analysis ","0b326ad2":"* This graph is consistent with our analysis above. Young people have 12% default rate while the oldest have only ~4%.\n* Maybe young clients can be given extra guidance for financial planning to help reduce this default rate.","646f719a":"**Derived Metrics**","067795a4":"* Data is highly imbalanced, ratio = 92:8<br>\n* Most of the loans were paid back on time (target 0)<br>\n* So we analyse the data with other features while taking the target values separately to get some insights.","299d272c":"###### So, for column 'ORGANIZATION_TYPE', we have total count of 307511 rows of which 55374 rows are having 'XNA' values. Which means 18% of the column is having this values.\nHence if we drop the rows of total 55374, will not have any major impact on our dataset.\n\n Hence, dropping the rows of total 55374 have 'XNA' values in the organization type column","14b7f5ea":"Points to be concluded from the above Gender vs Income Range Analysis against Target variable:\n\n1. For contract type \u2018cash loans\u2019 is having higher number of credits than \u2018Revolving loans\u2019 contract type.\n2. For this also Female is leading for applying credits.\n\n#### Good insight: As per the heatmap, Male candidates with cash loans are the one's with highest default rate as compared to other 3 sub categories, but analyzing alongwith the bar plot, it's clear that both males\/females having cash loans have almost equal ratio in defaulting, but looking at the revolving loans, even though the numbers are less, but the females who have taken revolving loans are the highest defaulters as compared to their male counter parts.","9bcd7323":"* Maximum approvals around 11 AM.\n* Maximum refused and cancelled contracts start application at 10 AM.","0f07ceea":"Points to be concluded from the above Gender vs Own Car Flag variable against Target variable:\n\n* As per the heatmap, Male candidates without car are the one's with highest default rate as compared to other 3 sub categories.\n* But as per the bar plot, overall people without cars are most defaulters, if we further dig in, females without car are the most defaulters as compared to the males without cars.\n\n#### Good insight 1: Overall people without cars are most defaulters, if we further dig in, females without car are the most defaulters as compared to the males without cars.","bb52480b":"* Most student loans are for their secondary education or higher education.\n* Lower secondary education loans are most risky for the company followed by secondary\/secondary special.","0cd00bdc":"1. Banks should focus more on contract type \u2018Student\u2019 ,\u2019Pensioner\u2019 and \u2018Businessman\u2019 with housing \u2018type other\n     than \u2018Co-op apartment\u2019 for successful payments.\n\n2. Banks should focus less on income type \u2018Working\u2019 as they are having most number of unsuccessful payments.\n\n3. Also with loan purpose \u2018Repair\u2019 is having higher number of unsuccessful payments on time.\n\n4. Get as much as clients from housing type \u2018With parents\u2019 as they are having least number of unsuccessful payments.\n\n5. Labourers, Sales Staff, Drivers, seems to be the most defaulters as we concluded earlier, further digging into the female candidates, most of the waiters, private service staff, realty agents, HR staff, IT Staff, Secretaries are the defaulters as compared to their counterparts.\n\n6. Female applicants without car are the most defaulters.\n\n7. Looking at the current and the previous data, Working, Commercial associates & State servants are mostly prone for being defaulters.\n\n8. Most defaulters are in the low income range.\n","f3d5da78":"* There is no useful insight from distribution of income and other feature values.\n* Segmented analysis can be tried to get better understanding.","8cdbb1c5":"* Consumer loan applications are most approved loans and cash loans are most cancelled and refused loans.\n* Consumer loans also rarely cancel, they are the most reliable type.","10c38142":"* Low skilled labourers, waiters, drivers, especially people with less income range are the most likely to be loan defaulters than highly paid staffs and accountants (which is understandable).\n* Better the occupation, lesser the chance of defaulting.","72dee603":"**Performing bivariate analysis**\n###### Box plotting for Credit amount in logarithmic scale","15b263bc":"* As clients get older, they tend to repay their loans on time more often.\n* Younger clients are less reliable than older clients. \n* Even though the correlation (-0.065) is less significant, it does affect the target.","0bcbe062":"### Family Features","ce95a0be":"Points to be concluded from the above Gender vs Occupation Type Analysis against Target variable:\n\n* Female with Occupation type: Accountants, Private Service Staff, Cooking staff, HR staff, and etc professions are the most defaulters as compared to their counterpart males.\n* Male low skill labourers have also high default rate\n\n#### Good insight 1: Female under occupation: Accountants, Private Service Staff, Secretaries, Realty Agents, HR Staff etc are the most defaulted sub categories against their male counter parts.\n#### Good insight 2: Male under occupation: Low Skilled Labourers, Drivers etc are the most defaulted sub categories against their female counter parts.","af7e8b96":"* Most applications were approved, and very few were unused in the past.","85ef496d":"* By just analysing single variables, we won't find much insights related to the defaulters, as here we will just have an idea which category of people are present in abundance, other than that, most of the insights are gathered in analysis of multiple features\/variables with target variable.","7959b1f6":"###### Dividing the dataset into two dataset of  target=1(client with payment difficulties) and target=0(all other) ","d622eace":"###### Distribution of contract status in logarithmic scale","a2f9091c":"Points to be concluded from the above graph.\n\n1. Clients which have applied for credits are from most of the organization type \u2018Business entity Type 3\u2019 , \u2018Self employed\u2019 , \u2018Other\u2019 , \u2018Medicine\u2019 and \u2018Government\u2019.\n2. Less clients are from Industry type 8,type 6, type 10, religion and  trade type 5, type 4.\n3. Same as type 0 in distribution of organization type.\n","b176c6d1":"###### Import the libraries","94489518":"#####  Refining the description data for Table == 'application_data'","ad21bdbd":"## Initial intuition from the data having null values greater than 30% \n\n* Total columns having more than 30% of null values: 64\n\n* As there's no such thumb rule to drop the variables having more than 30% null values, as scenarios might vary from case to case, and the amount of information we think the variable has. For example, most of the columns are Normalized information, and the description is bit unclear, hence I will remove all the Normalized information columns.\n\n* However, I will try to keep these columns: AMT_GOODS_PRICE, OWN_CAR_AGE, OCCUPATION_TYPE and analyse further, as these columns seems to carry some important information and two of them are connected with people who have taken Consumer loans, people having their own car flag as Y, and the occupation type might have an impact on the analysis, hence, once proper analysis has been done, we can think of deleting or keeping these variables\n\n* In the later stage, we can also analyse the other 61 columns that we are deleting if they carry any important information or not.","b025684a":"* 62% of chose to pay through cash by bank for previous applications.","4087ea2b":"* External sources have highest correlation value with the target.\n* These features represent a \"normalized score from external data source\".","7ed357a4":"* Majority applicants have house\/apartment type of housing with around 8% default rate.\n* People living in rented appartments or with parents are very rare but also the most risky.","30a77def":"* Current loan ids have 4 to 5 loan applications previously on average\n* Maximum is above 75 (outlier-can be removed).","aa55aa77":"* We bin age into ranges of 5 years and examine trend for each target.","fa8542fe":"### Others","d4c1ca67":"# Exploratory Data Analysis","414c58c1":"###### Reading the Application Data","c989a374":"## Approval, cancelled and refusal rates by channel types\nCHANNEL_TYPE - Through which channel we acquired the client on the previous application.","652b3b29":"## Contract status","480ac8b1":"###### For Organization column","087cd958":"# CONCLUSION","7b2ca9a2":"###### Describing the organization type column","1882e0e7":"## Amount features","49a8f9de":"* All three external sources have negative correlations with the target, indicating that as the value of the EXT_SOURCE increases, the client is more likely to repay the loan. \n* DAYS_BIRTH is positively correlated with EXT_SOURCE_1 indicating that maybe this external source takes into account the client's age.","7e1ca5c5":"* Most of the cash loans are not repayed as compared to Revolving loans.\n* Males have a higher chance of defaulting compared to women, even though number of female applicants is alomst twice as more. So females are more reliable than men.\n* Clients who own a car are less likely to not repay the loan, which might indicate that Clients with car have a better reliability on loan payments, might be because of multiple reasons (Be it their income range, or some other driving factors)\n* Applicants who own real estate are more than double of the ones who don't own real estate. But both categories have around 8% chance of not repaying the loan. So this column doesn't really give us any good insights.","a2d82704":"* Most clients have no or very few children and are likely to repay loan on time.\n* Clients with very high number of children are risky.","055b8a99":"* Nuclear families are in majority and more reliable.\n* Clients in a joint family of 8-13 members are most likely to default."}}