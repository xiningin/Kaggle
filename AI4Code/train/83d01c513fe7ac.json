{"cell_type":{"d16890e7":"code","dad1d6da":"code","3cba9e44":"code","9dbd2e89":"code","54713d04":"code","818838ae":"code","da2b620c":"code","045a3250":"code","6cbd2a72":"code","88d1c3ad":"code","fe034ea5":"code","7181e3a7":"markdown","091863bb":"markdown","332de237":"markdown","5fc2b38c":"markdown","8bc6a8c4":"markdown","abe301a7":"markdown","d84ef46b":"markdown","b7f3744e":"markdown","febd4d4c":"markdown","1e761189":"markdown","f2ab0af6":"markdown","4f4e1e9b":"markdown","d5ca76de":"markdown","7c810e7e":"markdown","acb87d3e":"markdown","aa6ba55c":"markdown","ca0143ac":"markdown"},"source":{"d16890e7":"# Calling libraries\nimport math\nimport pandas as pd \nimport datetime as dt\n\n# Data Visualization Tools\nimport seaborn as sns\nfrom matplotlib import pyplot\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.offline as offline\noffline.init_notebook_mode()\nfrom plotly import tools\nimport plotly.tools as tls","dad1d6da":"#Given Data (CONSTANTS)\n\nZillow_CC = 6174\nUS_CC     = 38000\nLeads = 4.00\nMedian_SP = 350000\nMarketing_Cost_Ratio = 0.01\nProfit_Margin = 0.05\nPrice_pLead = 40\nFlat_Price = 400\n\nLeads_Growth_2018_MOM = 0.05\nLeads_Growth_2019_MOM = 0.04\nLeads_Growth_2020_MOM = 0.01\n\n\nZ_CC_Growth_2018_MOM = 0.06\nZ_CC_Growth_2019_MOM = 0.04\nZ_CC_Growth_2020_MOM = 0.02","3cba9e44":"lead = []\n\nfor y in range (2018, 2021):\n    if y == 2018: \n        for m in range (1,13):\n            Leads = Leads*((1 + Leads_Growth_2018_MOM)**1)\n            Leads = float(round(Leads,2))\n            lead.append(Leads);\n    if y == 2019:  \n        for m in range (1,13):\n            Leads = Leads*((1 + Leads_Growth_2019_MOM)**1)\n            Leads = float(round(Leads,2))\n            lead.append(Leads);\n    if y == 2020:  \n        for m in range (1,13):\n            Leads = Leads*((1 + Leads_Growth_2020_MOM)**1)\n            Leads = float(round(Leads,2))\n            lead.append(Leads);\n       \nprint((lead))","9dbd2e89":"Z_CC = []\n\nfor y in range (2018, 2021):\n    if y == 2018: \n        for m in range (1,13):\n            Zillow_CC = Zillow_CC*((1 + Z_CC_Growth_2018_MOM)**1)\n            Zillow_CC = float(round(Zillow_CC,2))\n            Z_CC.append(Zillow_CC);\n    if y == 2019:  \n        for m in range (1,13):\n            Zillow_CC = Zillow_CC*((1 + Z_CC_Growth_2019_MOM)**1)\n            Zillow_CC = float(round(Zillow_CC,2))\n            Z_CC.append(Zillow_CC);\n    if y == 2020:  \n        for m in range (1,13):\n            Zillow_CC = Zillow_CC*((1 + Z_CC_Growth_2020_MOM)**1)\n            Zillow_CC = float(round(Zillow_CC,2))\n            Z_CC.append(Zillow_CC);\n       \nprint((Z_CC))","54713d04":"Price_Flat = 6147\nflat = []\n\nfor y in range (2018, 2021):\n    if y == 2018: \n        for m in range (1,13):\n            Price_Flat = Price_Flat*((1 + (Z_CC_Growth_2018_MOM*0.9))**1)\n            Price_Flat = float(round(Price_Flat,2))\n            flat.append(Price_Flat);\n    if y == 2019:  \n        for m in range (1,13):\n            Price_Flat = Price_Flat*((1 + (Z_CC_Growth_2019_MOM*0.9))**1)\n            Price_Flat = float(round(Price_Flat,2))\n            flat.append(Price_Flat);\n    if y == 2020:  \n        for m in range (1,13):\n            Price_Flat = Price_Flat*((1 + (Z_CC_Growth_2020_MOM*0.9))**1)\n            Price_Flat = float(round(Price_Flat,2))\n            flat.append(Price_Flat);\n       \nprint((flat))","818838ae":"# Creating the Data Frame from the Above Lists\n\ndf = pd.DataFrame(list(zip(lead, Z_CC, flat)), \n               columns =['Avg_Leads', 'Zillow_Communites_Leads', 'Zillow_Communities_Flat'])\n\n# Calculating the revenues\ndf['Leads_Revenue'] = df['Avg_Leads'] * df['Zillow_Communites_Leads'] * Price_pLead\ndf['Flat_Revenue'] =   Flat_Price * df['Zillow_Communities_Flat'] \n\n# Generating a DataTime Index\ndf['Date'] = pd.date_range(start='Jan-2018', periods=36, freq='M')\ndf['Year'] = df['Date'].dt.year\ndf['Month'] = df['Date'].dt.month\ndf = df.set_index(pd.DatetimeIndex(df['Date']))\n# df = df.drop(columns=['Date'])\n\nprint(df)","da2b620c":"list(df.columns.values)","045a3250":"trace03 = go.Bar(\n    x = df.index.to_pydatetime(),\n    y = df.Zillow_Communites_Leads,\n    name='Leads_Revenue',\n    \n    marker=dict(\n        color='black', \n        line=dict(\n            color='rgb(8,48,107)',\n            width=1.5),\n        ),\n    opacity=0.5\n)\n\ntrace04 = go.Bar(\n    x = df.index.to_pydatetime(),\n    y = df.Zillow_Communities_Flat,\n    name='Flat_Revenue',\n    \n    marker=dict(\n        color='Blue', \n        line=dict(\n            color='rgb(8,48,107)',\n            width=1.5),\n        ),\n    opacity=1\n)\n\n\nlayout = go.Layout(\n    title='Total Communities Per Month'\n)\n\ndata = [trace03, trace04]\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename=\"Monthly_Count_Communities\")","6cbd2a72":"trace01 = go.Bar(\n    x = df.index.to_pydatetime(),\n    y = df.Leads_Revenue,\n    name='Leads_Revenue',\n    \n    marker=dict(\n        color='orange', \n        line=dict(\n            color='rgb(8,48,107)',\n            width=1.5),\n        ),\n    opacity=0.15\n)\n\ntrace02 = go.Bar(\n    x = df.index.to_pydatetime(),\n    y = df.Flat_Revenue,\n    name='Flat_Revenue',\n    \n    marker=dict(\n        color='Blue', \n        line=dict(\n            color='rgb(8,48,107)',\n            width=1.5),\n        ),\n    opacity=0.15\n)\n\ntrace11 = go.Scatter(\n    x = df.index.to_pydatetime(),\n    y = df.Leads_Revenue,\n    mode = 'lines+markers',\n    name = 'Leads_Revenue',\n    marker=dict(\n        color='Red', \n        line=dict(\n            color='rgb(8,48,107)',\n            width=1.5),\n        ),\n    opacity=1.0\n)\n\ntrace12 = go.Scatter(\n    x = df.index.to_pydatetime(),\n    y = df.Flat_Revenue,\n    mode = 'lines+markers',\n    name = 'Flat_Revenue',\n    marker=dict(\n        color='Purple', \n        line=dict(\n            color='rgb(8,48,107)',\n            width=1.5),\n        ),\n    opacity=1.0\n)\n\n\nlayout = go.Layout(\n    title='Revenue Per Month'\n)\n\ndata = [trace01, trace02, trace11, trace12]\n# data = [trace11, trace12]\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename=\"Revenue_Plot\")","88d1c3ad":"#Calculating Per home profit\n\nMedian_Sale_Price = 350000\nAverage_Sale_Price = 400000 # [Reference: 1 (above)]\nMarketing_Expense_Ratio = 0.01\nProfit_Margin_Ratio = 0.05\n\nAverage_Cost_Price = Average_Sale_Price \/ ( 1 + Marketing_Expense_Ratio  +  Profit_Margin_Ratio  ) \nAverage_Profit = (Profit_Margin_Ratio * Average_Cost_Price)\nAverage_Marketing_Expense = (Marketing_Expense_Ratio * Average_Cost_Price )\n\nprint('Average Cost Price: USD',  Average_Cost_Price, 'per home') \nprint('Average Profit: USD', Average_Profit, 'per home')\nprint('Average Marketing Expense: USD', Average_Marketing_Expense , 'per home')","fe034ea5":"import matplotlib.pyplot as plt\n# Data to plot\nlabels = 'Cost_Price', 'Profit' , 'Marketing_Expense'\ndata = [Average_Cost_Price, Average_Profit, Average_Marketing_Expense]\ncolors = [ 'yellowgreen', 'lightcoral','darkturquoise']\nexplode = (0.25, 0.25, 0)  # explode 1st slice\n \n# Plot\nplt.pie(data, explode=explode,  labels=labels, colors=colors,\n        autopct= ('%1.1f%%'), shadow=True, startangle=150)\nplt.axis('equal')\nplt.show()","7181e3a7":"**FUTURE Imporvements**\n\n1. Train the historical data for average housing prices and apple regression Models for Prediction into the future.\n\n2. Seasonal trends can be further added and the revenue optimization can be designed.\n\n**Useful Resources **\n\n1. Housing Price data from census.gov \n2. Housing Demographic Data from census.gov to reach user specific recommendation system\n3. Geographic Housing dataset to target geographical housing demand ","091863bb":"<Font color = red>Code for : Zillow Community Growth - Flat Pricing Option<\/font>\n\nTo get the list for monthly growth for next 36 months, a simple monthly **Compounded Growth Rate** has been applied to design the calculation algorithm. \n\n**A = p(1+r)^n**","332de237":"<Font Color = Green> Here we can see that Communites by end of Dec 2020 from two different Methods are: <\/Font> \n<br> \n    1. Leads_Pricing Method: **25225**\n    2. Flat_Pricing Method: **21975**","5fc2b38c":"**Per Unit Home Selling Price Breakdown**","8bc6a8c4":"**Owners Profit Breakdown Calculation per unit home**","abe301a7":"<Font color = red>Generating the final Data Frame from the above lists:<\/font>\n","d84ef46b":"<Font color = red>Code for : Monthly Growth for Leads <\/font>","b7f3744e":"**Key Highlights:**\n\nLong Term Revenue (is preferred over) >> Short Term Revenue\nBetter Consume Exp (is equivalent to) ==> More Number of Listings\n\n**Assumptions:**\n\n1. Pricing Per Lead and Flat Rate Per Community is Constant over 3 years at USD 40 and USD 400 respectively.\n2. Median Selling Price per home are constant throughout the 36 months period at USD 350000\n3. The average(Mean) Selling Price per home is ~15% above the Median Value. Hence, for this case it is USD 400000 [1]\n\n**Additional Resources:**\n\nhttps:\/\/www.census.gov\/construction\/nrs\/pdf\/uspricemon.pdf","febd4d4c":"**DISCUSSION:**\n\nHowever, this would be a baseline model for my Pricing Strategy. There are few important factors that needs to be accomodated in the calculation of this pricing optimization equation: \n\n<Font Color = Blue> 1. **Change of Unit price per leads **over the years\/months (Based on customer demand)<\/font> <br>\n<Font Color = Blue> 2. Accounting **the conversion factor** from Enquiry to Conversion of purchase( Likelihood \/ Excepected Conversion Probability Factor) <\/font> <br>\n<Font Color = Blue> 3. Accounting the Zillow's revenue share from the average marketing Expense per home from Owner (Currently which is USD 3800 for our baseline model) <\/font> <br>\n<Font Color = Blue> 4. **Taking into the geographical location data into account** for designing the revenue structure. <\/font><br>","1e761189":"Note:\n1. This notebook has been created as a part of Interview process for Zillow. \n2. Any queries can be directly sent to soumyajit.paul03@gmail.com\n3. This work shall not be reproduced without the prior Permission of the Author.\n\n**ANALYSIS of DIFFERENT PRICING STRATEGY FOR REVENUE GROWTH**","f2ab0af6":"**User Interactive PLOT : Comparison of Communities Growth Through two Different Pricing**\n\n","4f4e1e9b":"<font color = red>*Defining Given Constants to the Problem:*<\/font>","d5ca76de":"**User Interactive PLOT: Revenue Earned Per Month ( Jan 2018 - Dec 2020) through Two Pricing Structure**","7c810e7e":"<Font color = red>Code for : Zillow Community Growth - Leads Pricing Option<\/font>","acb87d3e":"To get the list for monthly growth for next 36 months, a simple monthly **Compounded Growth Rate** has been applied to design the calculation algorithm. \n\n**A = p(1+r)^n**","aa6ba55c":"<font color= Green>** We can see that the Leads Revenue Strategy is more profitable as well as sustainable for growth over the years.** <\/Font> <BR>\n    \n\nHowever, \n<Br>\n--> For short term Flat Revenue Pricing is better because the numebr of Committes are not high. \n<br>\n\n--> Once the number of committies and the average Leads increases down the month (Look from July 2019). The profitability icreases for Leads Revenue format","ca0143ac":"To get the list for monthly growth for next 36 months, a simple monthly Compounded Growth Rate has been applied to design the calculation algorithm. \n\n**A = p(1+r)^n**"}}