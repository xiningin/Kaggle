{"cell_type":{"73e690cf":"code","268fe92e":"code","f772966f":"code","e155f80e":"code","66b20fac":"code","7c719fc3":"code","cdf1840b":"code","6f47f360":"code","c0434782":"code","83059477":"code","7dec3cf4":"code","96fa603b":"code","f23c82cb":"code","4820a171":"markdown","438f1071":"markdown","c93c0967":"markdown","cb9665ec":"markdown","35ba04a9":"markdown","fe46b6cb":"markdown","170bf2bd":"markdown","c35fdb49":"markdown"},"source":{"73e690cf":"import glob\nfrom nltk import tokenize, download\nimport numpy as np\nimport random\nimport pandas as pd\n\nfrom typing import List","268fe92e":"download('punkt')","f772966f":"def split_text(filepath: str, min_char: int = 5) -> List[str]:\n    \n    text = str()\n    with open(filepath, \"r\", encoding=\"utf8\") as file:\n        text = file.read().replace('\\n', '. ')\n        text = text.replace('.\u201d', '\u201d.').replace('.\"', '\".').replace('?\u201d', '\u201d?').replace('!\u201d', '\u201d!')\n        text = text.replace('--', ' ').replace('. . .', '').replace('_', '')\n        # ...\n    \n    sentences = tokenize.sent_tokenize(text)    \n    sentences = [sentence for sentence in sentences if len(sentence) >= min_char]\n\n    return list(sentences)","e155f80e":"chekhov = []\nfor path in glob.glob('..\/input\/russian-literature\/prose\/Chekhov\/*.txt'):\n    chekhov += split_text(path)\n    \ndostoevsky = []\nfor path in glob.glob('..\/input\/russian-literature\/prose\/Dostoevsky\/*.txt'):\n    dostoevsky += split_text(path)\n\ntolstoy = []\nfor path in glob.glob('..\/input\/russian-literature\/prose\/Tolstoy\/*.txt'):\n    tolstoy += split_text(path)\n\ngogol = []\nfor path in glob.glob('..\/input\/russian-literature\/prose\/Gogol\/*.txt'):\n    gogol += split_text(path)\n    \ngorky = []\nfor path in glob.glob('..\/input\/russian-literature\/prose\/Gorky\/*.txt'):\n    gorky += split_text(path)\n    \nturgenev = []\nfor path in glob.glob('..\/input\/russian-literature\/prose\/Gorky\/*.txt'):\n    turgenev += split_text(path)","66b20fac":"chekhov[:10]","7c719fc3":"text_dict = { 'Chekhov': chekhov, 'Dostoevsky': dostoevsky, 'Tolstoy': tolstoy, 'Gogol': gogol, \n             'Gorky': gorky, 'Turgenev': turgenev }\n\nfor key in text_dict.keys():\n    print(key, ':', len(text_dict[key]), ' sentences')","cdf1840b":"np.random.seed(1)\n\nmax_len = 10_000\n\nnames = [chekhov, dostoevsky, tolstoy, gogol, gorky, turgenev]\n\ncombined = []\nfor name in names:\n    name = np.random.choice(name, max_len, replace=False)\n    combined += list(name)\n\nprint('Length of combo and internally shuffled list:', len(combined))","6f47f360":"labels = ['Chekhov'] * max_len + ['Dostoevsky'] * max_len + ['Tolstoy'] * max_len + ['Gogol'] * max_len\\\n            + ['Gorky'] * max_len + ['Turgenev'] * max_len\n\nprint('Length of the labeled list:', len(labels))","c0434782":"len(combined) == len(labels)","83059477":"random.seed(3)\n\nzipped = list(zip(combined, labels))\nrandom.shuffle(zipped)\ncombined, labels = zip(*zipped)","7dec3cf4":"out_data = pd.DataFrame()\nout_data['text'] = combined\nout_data['author'] = labels","96fa603b":"print(out_data.head())\nprint(out_data.tail())","f23c82cb":"out_data.to_csv('author_data.csv', index=False)","4820a171":"All sentences from 11516 to 77817. Let's choose about 10_000 sents for dataset.","438f1071":"## Create a labeled list","c93c0967":"## Randomly shuffle the data","cb9665ec":"To improve the operation of the offer tokenizer, some character combinations are replaced","35ba04a9":"Control length of data and labels:","fe46b6cb":"## Exporting the resulting dataset","170bf2bd":"## Combine mixed sentences","c35fdb49":"# Creating sentence-author dataset "}}