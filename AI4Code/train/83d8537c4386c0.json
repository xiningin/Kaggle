{"cell_type":{"969de3cf":"code","d8a18f0f":"code","7b7a5082":"code","4c32ea3c":"code","855fe766":"code","8e8b42f4":"code","b251702e":"code","35ee96a1":"code","6b15f864":"code","1f26b405":"code","507a7c23":"code","8f1a243d":"code","fd362e9c":"code","c6e6c960":"code","9a261bb6":"code","05aa2a5a":"code","ae12079e":"code","5f3185ff":"code","89d173bd":"code","42112554":"code","2c8a5ca6":"code","8a947625":"code","725fc849":"code","e4e9b0b5":"code","5b9af9cb":"code","3fe5093f":"code","168ffdf2":"code","c5c5d064":"code","32ca5e65":"code","6c644bd5":"code","1d168fa4":"code","c5b4b2de":"markdown","2e4c93ee":"markdown","c0d74213":"markdown","7abd5d71":"markdown","22cb59b3":"markdown","acf65aef":"markdown","9b27d126":"markdown","42859bb8":"markdown","b5d84a85":"markdown","e8541e18":"markdown","16b7cba4":"markdown","aaa4f835":"markdown","c63cbe09":"markdown","dccb8a5e":"markdown","5cb1f7a3":"markdown","50518169":"markdown"},"source":{"969de3cf":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","d8a18f0f":"train=pd.read_csv('..\/input\/train.csv')","7b7a5082":"train.head()","4c32ea3c":"train.isnull().sum()","855fe766":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train,palette='bright')","8e8b42f4":"train.Survived.value_counts()","b251702e":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Pclass',data=train,palette='bright')","35ee96a1":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Sex',data=train,palette='bright')","6b15f864":"sns.distplot(train['Age'].dropna(),kde=False,color='darkred',bins=30)","1f26b405":"train['Age'].hist(bins=30,color='darkred',alpha=0.7)","507a7c23":"sns.countplot(x='SibSp',data=train)","8f1a243d":"train['Fare'].hist(color='green',bins=40,figsize=(8,4))","fd362e9c":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass',y='Age',data=train,palette='winter')","c6e6c960":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age","9a261bb6":"train['Age'] = train[['Age','Pclass']].apply(impute_age,axis=1)","05aa2a5a":"train.isnull().sum()","ae12079e":"train.drop('Cabin',axis=1,inplace=True)\ntrain.head()","5f3185ff":"train.dropna(inplace=True)","89d173bd":"train.isnull().sum()","42112554":"train.info()","2c8a5ca6":"sex = pd.get_dummies(train['Sex'],drop_first=True)\nembark = pd.get_dummies(train['Embarked'],drop_first=True)","8a947625":"train.drop(['Sex','Embarked','Ticket','Name'],axis=1,inplace=True)","725fc849":"train = pd.concat([train,sex,embark],axis=1)","e4e9b0b5":"train.head()","5b9af9cb":"from sklearn.model_selection import train_test_split","3fe5093f":"X_train, X_test, y_train, y_test = train_test_split(train.drop('Survived',axis=1),train['Survived'], test_size=0.30,random_state=101)","168ffdf2":"from sklearn.linear_model import LogisticRegression","c5c5d064":"logmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)","32ca5e65":"predictions = logmodel.predict(X_test)","6c644bd5":"from sklearn.metrics import classification_report","1d168fa4":"print(classification_report(y_test,predictions))","c5b4b2de":"Now apply that function!","2e4c93ee":"## Evaluation ","c0d74213":"Let's drop the Cabin column and the Embarked Row with NaN value","7abd5d71":"Let's import some libraries ","22cb59b3":"The missing data mostly came from Age, Cabin, Embarked Column. Now let us continue to explore the data by visualization","acf65aef":"Import the Data","9b27d126":"## Building a Logistic Regression model ","42859bb8":"## Exploratory Data Analysis ","b5d84a85":"# Logistic Regression to Predict  Titanic Passanger Survival","e8541e18":"now lets check the missing value again","16b7cba4":"Let's check the missing data","aaa4f835":"### Train Test Split ","c63cbe09":"## Converting Categorical Features ","dccb8a5e":"We can see the wealthier passengers in the higher classes tend to be older, which makes sense. We'll use these average age values to impute based on Pclass for Age.\n","5cb1f7a3":"### Train and Predicting ","50518169":"## Data Cleaning"}}