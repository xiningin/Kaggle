{"cell_type":{"20e6e10b":"code","4950880c":"code","f2fcf26c":"code","68bbc666":"code","5c912415":"code","9fda2898":"code","250351c7":"code","fc288e4f":"code","8ad2b82a":"code","82de659c":"code","6585d957":"code","195e76e4":"code","6b2e8390":"code","ec97a3e4":"code","f77e806b":"code","3049c18c":"code","7160c675":"code","4c127379":"code","8d1edc05":"code","7a130a01":"code","a8daa391":"code","53ef30c8":"code","fbfcf021":"code","2e0fa73f":"code","5088ff45":"code","ecabe526":"code","debdf8cf":"code","1e02f768":"code","6707d013":"code","bd4e1aa8":"code","ff02b3c5":"code","da765748":"code","119fdab3":"code","de939748":"code","e34a5ac1":"code","6d0dc0dd":"code","699e590c":"code","8efd0ac0":"code","a54c8aa2":"code","a401b032":"code","0ca04b65":"code","60848be7":"code","085375f6":"code","927adac2":"code","98797f1d":"code","e958226d":"code","d3a7a9e0":"code","05568e16":"code","f51056b4":"code","ac39bd34":"code","abb91311":"code","5c63958c":"markdown","f45b7a92":"markdown","b9731d35":"markdown","194e4280":"markdown","bee72f21":"markdown","c5389d18":"markdown","262f27ab":"markdown","83317ca3":"markdown","d74f61b6":"markdown","ba8a81ac":"markdown","4b8dab8e":"markdown","cb0fbf43":"markdown","0eb995f2":"markdown","9841d59f":"markdown","41448ace":"markdown","6a2d179b":"markdown","8e599edb":"markdown","fccd29a1":"markdown","69e9ab74":"markdown","ca77acda":"markdown","5b991b96":"markdown","0bbec70f":"markdown","25410994":"markdown","3ab54b67":"markdown","85bf67e1":"markdown","7fd011af":"markdown","6ec5dc69":"markdown","e8ec921d":"markdown","8f156ca8":"markdown","bc043109":"markdown","8e4660a6":"markdown","d49b78aa":"markdown","8818bc20":"markdown","c5e9856e":"markdown","82721056":"markdown","12b4ea84":"markdown","633be9dc":"markdown"},"source":{"20e6e10b":"# The World Happiness Report","4950880c":"import pandas as pd\nimport numpy as nm\nimport seaborn as sns\n\n#For data visualaization\nimport matplotlib.pyplot as plt \nimport seaborn as sns\nsns.set_style(\"whitegrid\")\n\n# \u0130gnore code warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n#plotly\nimport plotly.express as px \nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\nplt.style.use(\"seaborn-notebook\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f2fcf26c":"#Since there are two files \n#The first file conmtains data of 2021 \n#The second file contains data of before 2021\n#We need both beacuse we are tho compare thse two files for specific qustions\n\ndata_2021 = pd.read_csv(\"\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv\")\ndata_before_2021 = pd.read_csv(\"\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report.csv\")  ","68bbc666":"data_before_2021.head().style.background_gradient()","5c912415":"data_2021.head().style.background_gradient()","9fda2898":"def above_zero(val):\n    color = 'green' if val > 0 else 'red'\n    return 'color: %s' % color\ndata_before_2021.describe().style.applymap(above_zero)","250351c7":"def above_zero(val):\n    color = 'green' if val > 0 else 'red'\n    return 'color: %s' % color\ndata_before_2021.describe().style.applymap(above_zero)","fc288e4f":"data_before_2021.info() # Info about data before 2021","8ad2b82a":"data_2021.info()","82de659c":"data_2021[\"Country name\"].unique()","6585d957":"sns.countplot(data_2021[\"Regional indicator\"])\nplt.xticks(rotation = 75)\nplt.show()","195e76e4":"list_features = [\"Social support\", \"Freedom to make life choices\", \"Generosity\", \"Perceptions of corruption\"]\nsns.boxplot(data = data_2021.loc[:, list_features], orient = \"h\", palette = \"Set3\")\nplt.show()","6b2e8390":"list_features = [\"Healthy life expectancy\"]\nsns.boxplot(data = data_2021.loc[:, list_features], orient = \"h\", palette = \"Set2\")\nplt.show()","ec97a3e4":"# distribution of feature set 2\nlist_features = [\"Ladder score\", \"Logged GDP per capita\"]\nsns.boxplot(data = data_2021.loc[:, list_features], orient = \"h\", palette = \"Set1\")\nplt.show()","f77e806b":"print(\"Unhappiest Countries Score\",data_2021[\"Ladder score\"].min())\nprint(\"Happinest Countries Score\",data_2021[\"Ladder score\"].max())\nprint(\"Overage Happienes Score\",data_2021[\"Ladder score\"].mean())","3049c18c":"overage_countries_score = data_2021[\"Ladder score\"].mean()\ndata_2021_happinest = data_2021[data_2021.loc[:,\"Ladder score\"]>overage_countries_score][:5]\nsns.barplot(x=\"Ladder score\",y=\"Country name\",data=data_2021_happinest,palette=\"rocket\")\nsns.cubehelix_palette(start=.5, rot=-.75, as_cmap=True)\nplt.title(\"Happinest Countries\")\nplt.xlabel(\"Happiness Score\")\nplt.ylabel(\"Country\")\nplt.show()","7160c675":"overage_countries_score = data_2021[\"Ladder score\"].mean()\ndata_2021_happinest = data_2021[data_2021.loc[:,\"Ladder score\"]<overage_countries_score].sort_values(by=\"Ladder score\",ascending=True)[:5][::-1]\nsns.barplot(x=\"Ladder score\",y=\"Country name\",data=data_2021_happinest,palette=\"mako\")\nsns.cubehelix_palette(start=.5, rot=-.75, as_cmap=True)\nplt.title(\"Unhappinest Countries\")\nplt.xlabel(\"Happiness Score\")\nplt.ylabel(\"Country\")\nplt.show()","4c127379":"plt.figure(figsize = (15,8))\nsns.kdeplot(data_2021[\"Ladder score\"], hue = data_2021[\"Regional indicator\"], fill = True, linewidth = 2)\nplt.axvline(data_2021[\"Ladder score\"].mean(), c = \"black\")\nplt.title(\"Ladder Score Distribution by Regional Indicator\")\nplt.show()","8d1edc05":"j=1\nfor i in data_2021[\"Regional indicator\"].sort_values(ascending=False).unique()[:3]:\n    print(str(j)+\".region=\"+i)\n    j = j + 1 ","7a130a01":"j=1\nfor i in data_2021[\"Regional indicator\"].sort_values(ascending=True).unique()[:3][::-1]:\n    print(str(j)+\".region=\"+i)\n    j = j + 1 ","a8daa391":"compared_countries_before_2021 = data_before_2021.select_dtypes(include = [\"float64\", \"int64\"])\nsns.pairplot(compared_countries_before_2021);","53ef30c8":"compared_countries_2021 = data_2021.select_dtypes(include = [\"float64\", \"int64\"])\nsns.pairplot(compared_countries_2021);","fbfcf021":"data_before_2021.groupby(\"year\")[[\"Country name\",\"Life Ladder\"]].max()","2e0fa73f":"data_before_2021.groupby(\"year\")[[\"Country name\",\"Life Ladder\"]].min()","5088ff45":"fig = px.choropleth(data_before_2021.sort_values(\"year\"),\n                    locations = \"Country name\",\n                    color = \"Life Ladder\",\n                    locationmode = \"country names\",\n                    animation_frame = \"year\")\nfig.update_layout(title = \"Life Ladder Comparison by Countries\")\nfig.show()\n","ecabe526":"fig = px.choropleth(data_before_2021.sort_values(\"year\"),\n                   locations = \"Country name\",\n                   color = \"Generosity\",\n                   locationmode = \"country names\",\n                   animation_frame = \"year\")\nfig.update_layout(title = \"Generosity Comparison by Countries\")\nfig.show()\n","debdf8cf":"df2021_g = data_2021[(data_2021.loc[:, \"Generosity\"] > 0.4) | (data_2021.loc[:, \"Generosity\"] < -0.2)]\nsns.barplot(x = \"Generosity\", y = \"Country name\", data = df2021_g, palette = \"coolwarm\")\nplt.title(\"Most Generous and Most Ungenerous Countries in 2021\")\nplt.show()","1e02f768":"print(data_2021.loc[:, \"Generosity\"].mean()) # Average Country score\nprint(data_2021.loc[:, \"Generosity\"].max()) # Most Country score\nprint(data_2021.loc[:, \"Generosity\"].min())","6707d013":"data_2021[data_2021.loc[:, \"Generosity\"]>0.5][\"Country name\"].max()","bd4e1aa8":"data_2021[data_2021.loc[:, \"Generosity\"]<0.5][\"Country name\"].min()","ff02b3c5":"sns.swarmplot(x=\"Regional indicator\",y=\"Generosity\",data=data_2021)\nplt.xticks(rotation = 75)\nplt.title(\"The Generous distribution in 2021 according to Regional Indicator\")\nplt.show()\n","da765748":"data_2021[[\"Regional indicator\",\"Generosity\"]].sort_values(by=\"Generosity\",ascending=False)[:10]","119fdab3":"data_2021[[\"Regional indicator\",\"Generosity\"]].sort_values(by=\"Generosity\",ascending=True)","de939748":"# Here we need another file to work on\npop = pd.read_csv(\"\/kaggle\/input\/world-population-19602018\/population_total_long.csv\")","e34a5ac1":"# Split up prior to 2021 and 2021 data \ncountry_continent = dict()\nfor i in range(len(data_2021)):\n     country_continent[data_2021[\"Country name\"][i]] = data_2021[\"Regional indicator\"][i]\nall_countries = data_before_2021[\"Country name\"].value_counts().reset_index()[\"index\"].to_list()\nall_countries_2021 = data_2021[\"Country name\"].value_counts().reset_index()[\"index\"].to_list()\nall_countries_not_2021 = [i for i in all_countries if i not in all_countries_2021]","6d0dc0dd":"# 15 Country add to data \nregion = []\nfor i in range(len(data_before_2021)):\n    if data_before_2021['Country name'][i] == 'Angola':\n        region.append(\"Sub-Saharan Africa\")\n    elif data_before_2021['Country name'][i] == 'Belize':\n        region.append(\"Latin America and Caribbean\")\n    elif data_before_2021['Country name'][i] == 'Congo (Kinshasa)':\n        region.append(\"Sub-Saharan Africa\")\n    elif data_before_2021['Country name'][i] == 'Syria':\n        region.append(\"Middle East and North Africa\")\n    elif data_before_2021['Country name'][i] == 'Trinidad and Tobago':\n        region.append(\"Latin America and Caribbean\")\n    elif data_before_2021['Country name'][i] == 'Cuba':\n        region.append(\"Latin America and Caribbean\")\n    elif data_before_2021['Country name'][i] == 'Qatar':\n        region.append(\"Middle East and North Africa\")\n    elif data_before_2021['Country name'][i] == 'Sudan':\n        region.append(\"Middle East and North Africa\")\n    elif data_before_2021['Country name'][i] == 'Central African Republic':\n        region.append(\"Sub-Saharan Africa\")\n    elif data_before_2021['Country name'][i] == 'Djibouti':\n        region.append(\"Sub-Saharan Africa\")\n    elif data_before_2021['Country name'][i] == 'Somaliland region':\n        region.append(\"Sub-Saharan Africa\")\n    elif data_before_2021['Country name'][i] == 'South Sudan':\n        region.append(\"Middle East and North Africa\")\n    elif data_before_2021['Country name'][i] == 'Somalia':\n        region.append(\"Sub-Saharan Africa\")\n    elif data_before_2021['Country name'][i] == 'Oman':\n        region.append(\"Middle East and North Africa\")\n    elif data_before_2021['Country name'][i] == 'Guyana':\n        region.append(\"Latin America and Caribbean\")\n    elif data_before_2021['Country name'][i] == 'Guyana':\n        region.append(\"Latin America and Caribbean\")\n    elif data_before_2021['Country name'][i] == 'Bhutan':\n        region.append(\"South Asia\")\n    elif data_before_2021['Country name'][i] == 'Suriname':\n        region.append(\"Latin America and Caribbean\")\n    else:\n        region.append(country_continent[data_before_2021['Country name'][i]])\n        \ndata_before_2021[\"region\"] = region\ndata_before_2021.head()","699e590c":"all_countries = data_before_2021[\"Country name\"].value_counts().reset_index()[\"index\"].tolist()\nall_countries_pop = pop[\"Country Name\"].value_counts().reset_index()[\"index\"].tolist()\n\ndel_cou = []\nfor x in all_countries:\n    if x not in all_countries_pop:\n        del_cou.append(x)\ndel_cou","8efd0ac0":"data_before_2021.columns\n","a54c8aa2":"# Population attributes take in order to compared Log GDP per capita\npop_df = data_before_2021[['Log GDP per capita', 'Life Ladder', 'Country name', 'year', 'Social support', 'Healthy life expectancy at birth',\n       'Freedom to make life choices', 'Generosity',\"region\",'Perceptions of corruption']].copy()\npop_df.head()","a401b032":"pop_df = pop_df[~pop_df[\"Country name\"].isin(del_cou)]\npop_df = pop_df[~pop_df.year.isin([2006,2005,2007,2018,2019,2020,2021])]\npop_dict = {x:{} for x in range(2008,2018)}\nfor i in range(len(pop)):\n    if(pop[\"Year\"][i] in range(2008,2018)):\n        pop_dict[pop[\"Year\"][i]][pop[\"Country Name\"][i]] = pop[\"Count\"][i]","0ca04b65":"population = []\nfor i in pop_df.index:\n    population.append(pop_dict[pop_df[\"year\"][i]][pop_df[\"Country name\"][i]])\npop_df[\"population\"] = population\npop_df.head()","60848be7":"# Population Life Ladder and Log GDP per capita Comparison by Countries via Regions for each Year\nfig = px.scatter(pop_df, \n                 x = \"Log GDP per capita\",\n                 y = \"Life Ladder\",\n                 animation_frame = \"year\",\n                 animation_group = \"Country name\",\n                 size = \"population\",\n                 template = \"plotly_white\",\n                 color = \"region\", \n                 hover_name = \"Country name\", \n                 size_max = 60)\nfig.update_layout(title = \"Life Ladder and Log GDP per capita Comparison by Countries via Regions for each Year\")\nfig.show()","085375f6":"# As increasing Population,it is decreasing effect on Life Ladder \n# China have most population\npop_df.groupby(\"population\")[[\"Country name\",\"Life Ladder\",\"year\"]].max().sort_values(by=\"population\",ascending=False).head()","927adac2":"# As decreasing Population,it is increasing effect on Life Ladder \n# Iceland have most population\npop_df.groupby(\"population\")[[\"Country name\",\"Life Ladder\",\"year\"]].min().sort_values(by=\"population\",ascending=True).head()","98797f1d":"# The Countries decribes freedom affect on happiness \nfig = px.scatter(pop_df, \n                 x = \"Freedom to make life choices\",\n                 y = \"Life Ladder\",\n                 animation_frame = \"year\",\n                 animation_group = \"Country name\",\n                 size = \"population\",\n                 template = \"plotly_dark\",\n                 color = \"region\", \n                 hover_name = \"Country name\", \n                 size_max = 60)\nfig.update_layout(title = \"Life Ladder and Freedom Comparison by Countries via Regions for each Year\")\nfig.show()","e958226d":"pop_df.groupby(by=\"Freedom to make life choices\").max().sort_values(by=\"Freedom to make life choices\",ascending=False)[[\"Life Ladder\",\"year\",\"Country name\",\"population\"]].head(15)","d3a7a9e0":"pop_df.groupby(by=\"Freedom to make life choices\").max().sort_values(by=\"Freedom to make life choices\",ascending=True)[[\"Life Ladder\",\"year\",\"Country name\",\"population\"]].head(15)\n\n","05568e16":"fig = px.scatter(pop_df, \n                 x = \"Perceptions of corruption\",\n                 y = \"Life Ladder\",\n                 animation_frame = \"year\",\n                 animation_group = \"Country name\",\n                 size = \"population\",\n                 color = \"region\", \n                 hover_name = \"Country name\", \n                 size_max = 60)\nfig.update_layout(title = \"Life Ladder and Corruption Comparison by Countries via Regions for each Year\")\nfig.show()","f51056b4":"# As incresing rate of corruption, Life Ladder rate is decreasing \npop_df.groupby(by=\"Perceptions of corruption\").max().sort_values(by=\"Perceptions of corruption\",ascending=False)[[\"Life Ladder\",\"year\",\"Country name\",\"population\"]].head(15)","ac39bd34":"pop_df.groupby(by=\"Perceptions of corruption\").max().sort_values(by=\"Perceptions of corruption\",ascending=True)[[\"Life Ladder\",\"year\",\"Country name\",\"population\"]].head(15)","abb91311":"# Rigth proportion Log DGP per capita with Life Ladder\n# Rigth proportion Helhtly with Life Ladder\n# Rigth proportion Social support with Life Ladder\nsns.heatmap(data_before_2021.corr(),annot=True,fmt=\".2f\",linewidth=.7)\nplt.title(\"Relationship Between Features \")\nplt.show()","5c63958c":"Here Most deep value color is the highest value whereas light blue is the lowest value in every correspnding column","f45b7a92":"# Relationship between happiness and corruption","b9731d35":"#### The most unhappy region is East Asia","194e4280":"#### The least generous country is Afghanistan","bee72f21":"\n# Info About Data\n\n#### info about before  2021 data","c5389d18":"# Unique Countrys","262f27ab":"####  Description of before 2021 data","83317ca3":" #### The most happiest region is western europe","d74f61b6":"#### Lets show the data","ba8a81ac":"\nAs we can see this particular does'mt contain null values, So here is no missing value is presents\n","4b8dab8e":"# Relationship between Happiness and Income","cb0fbf43":"# The Generous distribution in 2021 according to Regional Indicator","0eb995f2":" #### info about 2021 data","9841d59f":"importing of all those essential library","41448ace":"# Relationship between happiness and freedom","6a2d179b":"# Describe the data","8e599edb":"# Regional Happiness Distribution","fccd29a1":"# Distribution of remaining columns","69e9ab74":"# Ladder score compared by countries","ca77acda":"#### This is sorted value by representing from the lowest value to highest","5b991b96":"### Ditribution of feature list 2","0bbec70f":"#### This is sorted value by representing from the highest value to lowest","25410994":"Here Most deep value color is the highest value whereas light blue is the lowest value in every correspnding column","3ab54b67":"Here, on hte x-axis it represts all those unique region and on the y-axis it represents the amount of countries that fall in this region","85bf67e1":"# Count Regional Indicator","7fd011af":"# Reading the file \n\nNow we need to read the file which is downloaded from kaggle","6ec5dc69":"### Distribution of feature list 3","e8ec921d":"#### Description of 2021 data","8f156ca8":"\nHere the value below 0 is represents red color for and the every row represents essetntial data like mean, stndard deviation, min, max e.t.c","bc043109":"# Happiest and Unhappiest countries in 2021","8e4660a6":"#### The most generous country is Mayanmar","d49b78aa":"As we can see this particular doesn't contain null values, So here is no missing value is presents","8818bc20":"# Most generous and less generous countries","c5e9856e":"#### Let's find out unique country in this data to see any redundacy data is available or not","82721056":"# Relationship between Features","12b4ea84":"\nHere the value below 0 is represents red color for and the every row represents essetntial data like mean, stndard deviation, min, max e.t.c","633be9dc":"####  Here we can see that west europe has highest peak than east countries"}}