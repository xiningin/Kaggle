{"cell_type":{"7365ca49":"code","0f44ec0c":"code","9c9add68":"code","506c799f":"code","df6158b6":"code","21dccd25":"code","eb92b30e":"code","b81da6c1":"code","207698a2":"code","c7df3f5b":"code","22894b81":"code","e48a8871":"code","dfe01074":"code","2f820e89":"markdown","7927d0ef":"markdown"},"source":{"7365ca49":"from tqdm.notebook import tqdm\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport shutil\nimport os\nimport keras","0f44ec0c":"train = pd.read_csv('..\/input\/plant-pathology-2021-fgvc8\/train.csv')\nprint(train.shape)\ntrain.head()","9c9add68":"seed = 32\ntarget_size = (380, 380)\nbatch_size = 16\ntest_img = '..\/input\/plant-pathology-2021-fgvc8\/test_images'\nsubmission = pd.read_csv('..\/input\/plant-pathology-2021-fgvc8\/sample_submission.csv')\nsubmission.head()","506c799f":"import cv2\nimport numpy as np\ndef get_cut_image(image):\n    img = cv2.blur(image,(3,3))\n    copy = np.uint8(img)\n    canny = cv2.Canny(copy, 145, 165)\n    box = np.argwhere(canny>0)\n    y1,x1 = box.min(axis=0)\n    y2,x2 = box.max(axis=0)\n    cut_img = img[y1:y2, x1:x2]\n    cut_img = cv2.resize(cut_img, target_size)\n    cut_img = cut_img.astype(\"float32\")*(1.)\/255\n    return np.array(cut_img)","df6158b6":"from keras.preprocessing.image import ImageDataGenerator\n\npre = ImageDataGenerator(\n    rescale=1.\/255,\n    brightness_range=[0.5, 1.5],\n    rotation_range=45,\n    shear_range=0.2,\n    zoom_range=0.2, \n    horizontal_flip=True,\n    vertical_flip=True,\n    width_shift_range=0.2,\n    height_shift_range=0.2)\npos = ImageDataGenerator(\n    rescale=1.\/255,\n    brightness_range=[0.5, 1.5],\n    rotation_range=15, #45\n    shear_range=0.2,\n    zoom_range=0.3, #0.2 \n    featurewise_center=False, #\n    featurewise_std_normalization=False, #\n    horizontal_flip=True,\n    width_shift_range=0.2,\n    height_shift_range=0.2,\n    vertical_flip=True,\n    validation_split= 0.2,\n)","21dccd25":"test_generator = pos.flow_from_dataframe(\n                  submission,\n                  directory = test_img,\n                  x_col = 'image',\n                  y_col = 'labels',\n                  class_mode = \"raw\",\n                  batch_size=batch_size,\n                  target_size = target_size,\n                  color_mode=\"rgb\",\n                  shuffle = False,\n                  seed = seed,)","eb92b30e":"model = keras.models.load_model(\"..\/input\/07300946\/posrandomsampleB4.h5\",compile=False)\ntta_steps = 5\npredictions = []\n\nfor i in range(tta_steps):\n    preds = model.predict(test_generator)\n    predictions.append(preds)\n\npred_EffB4 = np.mean(predictions, axis=0)","b81da6c1":"model = keras.models.load_model(\"..\/input\/prexception\/5.h5\",compile=False)\ntta_steps = 5\npredictions = []\n\nfor i in range(tta_steps):\n    preds = model.predict(test_generator)\n    predictions.append(preds)\n\npred_Xception = np.mean(predictions, axis=0)","207698a2":"predmean = (pred_EffB4 + pred_Xception) \/ 2.","c7df3f5b":"np.around(predmean, decimals=2)","22894b81":"perdict = (predmean>0.35)\nn_label = ['complex', 'frog_eye_leaf_spot', 'healthy', 'powdery_mildew', 'rust', 'scab']\nanswer = []\n\nfor i in range(perdict.shape[0]):\n    temp = []\n    for j, k in enumerate(n_label):\n        if perdict[i, j]:\n            temp.append(k)\n    answer.append(temp)\n    \nanswer = [' '.join(n) for n in answer]","e48a8871":"submission['labels'] = np.array(answer)\nsubmission","dfe01074":"submission.to_csv('submission.csv', index=False)","2f820e89":"## Xception","7927d0ef":"## Efficientnetb4"}}