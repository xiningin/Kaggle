{"cell_type":{"520b04ce":"code","e6fa77ef":"code","e47cd73a":"code","18bad9f0":"code","0271470f":"code","17d7613d":"code","98dbaaf7":"code","e9aadef2":"code","84ba58b9":"code","52fb66ee":"code","42c3fb8b":"code","c5d6e6fe":"code","906050ae":"code","321245a9":"code","74781654":"code","b955d558":"code","7938f6a6":"code","a7c139b6":"code","296cc287":"code","40f65157":"code","e4251513":"markdown","714c691e":"markdown","ab578187":"markdown","d836d988":"markdown","0af9800a":"markdown"},"source":{"520b04ce":"import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e6fa77ef":"prifix_path='\/kaggle\/input\/dataanalyticsforfunget-to-know-toyotacorolla\/'","e47cd73a":"car_df = pd.read_csv(prifix_path + 'ToyotaCorolla.csv')","18bad9f0":"car_df.head()","0271470f":"car_df.shape","17d7613d":"car_df.columns","98dbaaf7":"Selected_Columns = [\n    'Age_08_04',\n    'KM',\n    'Fuel_Type',\n    'HP',\n    'Met_Color',\n    'Automatic',\n    'CC',\n    'Doors',\n    'Quarterly_Tax',\n    'Weight',\n    'Price',\n]","e9aadef2":"car_df = car_df[Selected_Columns]","84ba58b9":"car_df.shape","52fb66ee":"car_df.describe()","42c3fb8b":"car_df.describe().loc['mean':'std']","c5d6e6fe":"Numerical_Columns = [\n    'Age_08_04',\n    'KM',\n    'HP',\n    'CC',\n    'Doors',\n    'Quarterly_Tax',\n    'Weight',\n    'Price',\n]","906050ae":"for cl in Numerical_Columns:\n    car_df[cl].plot.hist()\n    plt.title(cl)\n    plt.show()\n    car_df[cl].plot.box(vert=False)\n    plt.show()","321245a9":"Categorical_columns = [\n    'Fuel_Type',\n    'Automatic',\n    'Met_Color',\n]","74781654":"for cl in Categorical_columns:\n    car_df[cl].value_counts().plot.bar()\n    plt.title(cl)\n    plt.show()\n    ","b955d558":"sns.pairplot(car_df[Numerical_Columns])\nplt.show()","7938f6a6":"Corealations = car_df[Numerical_Columns].corr()\nCorealations","a7c139b6":"BM = abs(Corealations)> 0.7\nCorealations[BM]","296cc287":"for cl1 in Categorical_columns:\n    for cl2 in Categorical_columns:\n        if( cl1 != cl2):\n            contingency_tbl = pd.crosstab(car_df[cl1], car_df[cl2])\n            probability_tbl = contingency_tbl \/ contingency_tbl.sum()\n            sns.heatmap(\n                probability_tbl,\n                annot=True,\n                center=0.5,\n                cmap='Greys'\n            )\n            plt.show()","40f65157":"for cl1 in Categorical_columns:\n    for cl2 in Numerical_Columns:\n        cl_discretized = pd.cut(\n            car_df[cl2],\n            bins=5,\n            labels=False\n        )\n        contingency_tbl = pd.crosstab(car_df[cl1], cl_discretized)\n        probability_tbl = contingency_tbl \/ contingency_tbl.sum()\n        sns.heatmap(\n            probability_tbl,\n            annot=True,\n            center=0.5,\n            cmap='Greys'\n        )\n        plt.show()\n        ","e4251513":"## I create this notebook to follow the Roy Jafari predictive modeling Video 01\n\n# You can find course Video [youtub Roy Jafari](https:\/\/www.youtube.com\/watch?v=jgrZMPC3c38&list=PLeIx1CWnEc7uBTvBR0VXYgVwZcJNFnp0W)\n# And teh source code is in [gitHub](https:\/\/github.com\/royjafari\/DataAnalyticsForFun\/tree\/main\/Get%20To%20Know%20ToyotaCorolla)","714c691e":"# Examine the relationship between categorical Attributes and numerical attributes","ab578187":"# Examine the relationship between Numerical Attributes","d836d988":"# Get to know Numerical Attributes","0af9800a":"# Examine the relationship between categorical Attributes"}}