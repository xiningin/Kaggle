{"cell_type":{"c042e035":"code","13ad358b":"code","c6003455":"code","cec8229c":"code","86aff82f":"code","9297c399":"markdown","2ea6c55c":"markdown","51ac2023":"markdown","526e4930":"markdown"},"source":{"c042e035":"from sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn import svm,metrics","13ad358b":"df=pd.read_csv('..\/input\/pima-indians-diabetes-database\/diabetes.csv', sep=',')\ndataset = df.values\npositives = dataset[dataset[:,8]==1,:]\nnegatives = dataset[dataset[:,8]==0,:]\n\n# Import train_test_split function\ny = dataset[:,-1]\n# Split dataset into training set and test set\nX_train, X_test, y_train, y_test = train_test_split(dataset[:,:],y, test_size=0.3,random_state=42)\n\n# Standardize features\nscaler = preprocessing.StandardScaler().fit(X_train)\nX_train = scaler.transform(X_train)","c6003455":"for i in range(8):\n    n, bins, patches = plt.hist(negatives[:,i], 20, facecolor='red', alpha=0.5)\n    n, bins, patches = plt.hist(positives[:,i], 20, facecolor='green', alpha=0.5)\n    plt.xlabel(df.columns[i])\n    plt.show()","cec8229c":"#Create a svm Classifier\nclf = svm.SVC(kernel='linear')\n#Train the model using the training sets\nclf.fit(X_train, y_train)\n#Predict the response for test dataset\ny_pred = clf.predict(scaler.transform(X_test))","86aff82f":"print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))\nprint(\"Precision:\",metrics.precision_score(y_test, y_pred))\nprint(\"Recall:\",metrics.recall_score(y_test, y_pred))\nprint(\"F-Score\",metrics.f1_score(y_test, y_pred))","9297c399":"### Preprocessing & Visualizing Data","2ea6c55c":"### Calculating Accuracy Metrics","51ac2023":"# Diabetes Prediction with SVM \n### Importing required Libraries","526e4930":"## Defining & Fitting Model"}}