{"cell_type":{"d54a4387":"code","b2ca0072":"code","a8a41fca":"code","f6ec1f92":"code","c00e01d0":"code","a78980d6":"code","80660b40":"code","8ddec472":"code","3b11cd91":"code","2e149f7a":"code","64b6df3f":"code","e725eecc":"code","e39ae5fc":"code","fd8e1624":"code","6c65098a":"code","9867fdad":"code","af484597":"code","492f6353":"code","f81b28b9":"code","57562cad":"code","03d98bdd":"code","ca4f8163":"code","35c9bf23":"code","b2b41fcd":"code","07e4acf1":"code","85e5e61e":"code","32d28799":"code","68280ceb":"code","b204cac7":"code","8747a918":"code","2e48de3c":"code","ced2262b":"code","b7a95019":"code","74e51b51":"code","837e5d78":"code","ab4a749c":"markdown","fe369f05":"markdown","b1c72387":"markdown","c4b62b5c":"markdown","618b2eef":"markdown","638c693c":"markdown","04e276b3":"markdown","9a2ee368":"markdown"},"source":{"d54a4387":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b2ca0072":"df = pd.read_csv('\/kaggle\/input\/costa-rican-household-poverty-prediction\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/costa-rican-household-poverty-prediction\/test.csv')\n\ndf.shape, test.shape","a8a41fca":"df_all = df.append(test)\n\ndf_all.shape","f6ec1f92":"df_all.info()","c00e01d0":"df_all.info(max_cols=145)","a78980d6":"df_all.select_dtypes('object').head()","80660b40":"df_all['dependency'].value_counts()","8ddec472":"df_all['edjefa'].value_counts()","3b11cd91":"df_all['edjefe'].value_counts()","2e149f7a":"mapeamento = {'yes': 1, 'no': 0}\n\ndf_all['edjefa'] = df_all['edjefa'].replace(mapeamento).astype(int)\ndf_all['edjefe'] = df_all['edjefe'].replace(mapeamento).astype(int)","64b6df3f":"df_all.select_dtypes('object').head()","e725eecc":"df_all['dependency'] = df_all['dependency'].replace(mapeamento).astype(float)","e39ae5fc":"df_all.select_dtypes('object').head()","fd8e1624":"df_all.isnull().sum().sort_values()","6c65098a":"df_all[df_all['parentesco1'] == 1]['v2a1'].isnull().sum()","9867fdad":"df_all['v18q'].value_counts()","af484597":"df_all['v2a1'].fillna(-1, inplace=True)","492f6353":"df_all['v18q1'].fillna(0, inplace=True)","f81b28b9":"df_all.isnull().sum().sort_values()","57562cad":"df_all['SQBmeaned'].fillna(-1, inplace=True)\ndf_all['meaneduc'].fillna(-1, inplace=True)\ndf_all['rez_esc'].fillna(-1, inplace=True)\n","03d98bdd":"df_all.isnull().sum().sort_values()\n","ca4f8163":"feats = [c for c in df_all.columns if c not in ['Id', 'idhogar', 'Target']]","35c9bf23":"train, test = df_all[~df_all['Target'].isnull()], df_all[df_all['Target'].isnull()]\n\ntrain.shape, test.shape","b2b41fcd":"sns.histplot(data=train, x=\"Target\", bins = 8)\nplt.show()","07e4acf1":"train['Target'].value_counts()","85e5e61e":"train['Target'].value_counts(normalize=True)","32d28799":"X, y = train[feats], train[['Target']]","68280ceb":"from imblearn.over_sampling import RandomOverSampler\n\nros = RandomOverSampler(random_state=42)\nX_ros,y_ros= ros.fit_resample(X,y)\n\ny_ros['Target'].value_counts()","b204cac7":"from xgboost import XGBClassifier\nxgb = XGBClassifier(n_estimators=250, learning_rate=0.09, random_state=42)\n\n# Treinar\nxgb.fit(X_ros, y_ros)","8747a918":"test['Target'].value_counts()","2e48de3c":"test['Target'].value_counts(normalize=True)","ced2262b":"previsao = test['Target'] = xgb.predict(test[feats]).astype(int)","b7a95019":"previsao","74e51b51":"test[['Id', 'Target']].to_csv('submission.csv', index=False)","837e5d78":"#import matplotlib.pyplot as plt\nfig=plt.figure(figsize=(25,30))\n    \npd.Series(xgb.feature_importances_, index=feats).sort_values().plot.barh()","ab4a749c":"### **Carregando os dados**","fe369f05":"## **Treinando com XGBoost**","b1c72387":"## **Avaliar importancia de cada coluna** ","c4b62b5c":"## **Treinamento dos Dados**","618b2eef":"## **Feature Engineering** e realizar over_sampling","638c693c":"## **Verificando as previs\u00f5es**","04e276b3":"## **Arquivo para submiss\u00e3o** ","9a2ee368":"### **Importando as bibliotecas e bases**"}}