{"cell_type":{"6860255e":"code","e095a2a4":"code","5128277b":"code","62a84cb8":"code","bf7c0363":"code","d29d7c9d":"code","11b331fb":"code","c303cf4d":"code","f33de46b":"code","9741b9f0":"code","f5379f91":"code","c4a36276":"code","6e7107f7":"code","77b4ced9":"code","e77aa6e3":"code","0c25607c":"code","25d84e8f":"code","9d367dfa":"code","e66b280e":"code","57c00ee7":"code","df9418ec":"code","50f463f2":"code","746f7b8d":"code","2cfdd7b3":"code","e7604fd3":"code","db00a840":"code","1ba08107":"code","a3e8d758":"code","e2350972":"code","4b642876":"code","2ad85880":"code","2f4da833":"code","8dca4796":"code","26173b36":"code","c6f912a4":"code","051b7f3e":"code","c966bcd1":"code","73bb0880":"markdown","9e7e2866":"markdown","86ea113e":"markdown","45376ef8":"markdown","c66da139":"markdown","0d703ab1":"markdown","ad8079f6":"markdown","b9790700":"markdown","da2ada0d":"markdown","2492d2fe":"markdown","1489d5d8":"markdown","f155f07b":"markdown","07e41f55":"markdown","579d3a44":"markdown","94d592c2":"markdown","f0cc2e6b":"markdown","5add4aaa":"markdown"},"source":{"6860255e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Plotting libraries\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e095a2a4":"data = pd.read_csv('..\/input\/covid19-global-forecasting-week-1\/train.csv',parse_dates=['Date'])\n#print(len(data))\n#print(data.dtypes)\ndata.head()","5128277b":"data.rename(columns={'Id': 'id',\n                     'Province\/State':'state',\n                     'Country\/Region':'country',\n                     'Lat':'lat',\n                     'Long': 'long',\n                     'Date': 'date', \n                     'ConfirmedCases': 'confirmed',\n                     'Fatalities':'deaths',\n                    }, inplace=True)\ndata.head()","62a84cb8":"data = data.sort_values(by=['country','date'],ascending=[True,True])\n#data.head()","bf7c0363":" # Sorting by country and date\ndata = data.groupby(['country','date'])['country','date','confirmed','deaths'].sum().reset_index()\n#print(len(data))\ndata.head()","d29d7c9d":"# Worldwide\nworldwide = data.groupby(['date'])[['date','confirmed','deaths']].sum().reset_index()\nworldwide.tail()","11b331fb":"fig = px.line(worldwide,'date','confirmed',title='Worldwide confirmed cases')\nfig.show()\n\nfig = px.line(worldwide,'date','confirmed',title='Worldwide confirmed cases (Log scale)',log_y = True)\nfig.show()","c303cf4d":"# China\ngrouped_china = data[data.country=='China']\n\nfig = px.line(grouped_china,'date','confirmed',title='China confirmed cases')\nfig.show()\n\nfig = px.line(grouped_china,'date','confirmed',title='China confirmed cases (Log scale)',log_y = True)\nfig.show()","f33de46b":"# USA\ngrouped_usa = data[data.country=='US']\n\nfig = px.line(grouped_usa,'date','confirmed',title='USA confirmed cases')\nfig.show()\n\nfig = px.line(grouped_usa,'date','confirmed',title='USA confirmed cases (Log scale)',log_y = True)\nfig.show()","9741b9f0":"# India\ngrouped_india = data[data.country=='India']\n\nfig = px.line(grouped_india,'date','confirmed',title='India confirmed cases')\nfig.show()\n\nfig = px.line(grouped_india,'date','confirmed',title='India confirmed cases (Log scale)',log_y = True)\nfig.show()","f5379f91":"# Cases per population\npop = pd.read_csv('..\/input\/countryinfo\/covid19countryinfo.csv')\npop.head()","c4a36276":"# Treat values\npop['pop'] = pop['pop'].str.replace(',','').fillna(0).astype(int)","6e7107f7":"# Treat missing values\n# Check missing values per column\npop.isnull().sum()","77b4ced9":"# Fill missing with mean\npop['smokers'] = pop['smokers'].fillna(pop['smokers'].mean())\n","e77aa6e3":"# And since this data is on 100 scale so making it %\npop['smokers'] = pop['smokers']\/100\npop['urbanpop'] = pop['urbanpop']\/100","0c25607c":"# Clean population data\npop_data = pop[['country','pop','density','medianage','urbanpop','hospibed','smokers']]\npop_data.describe()","25d84e8f":"fig = px.bar(pop.sort_values(by=\"pop\", ascending=False)[:10],'country','pop',title = \"Population country wise\")\nfig.update_layout(xaxis_title = 'Country',yaxis_title = 'Population')\nfig.show()","9d367dfa":"# Join main data with population data\ndata = data.merge(pop_data,how = 'left', on =['country'])\ndata.head()","e66b280e":"data['confirmed_norm'] = data['confirmed']\/data['pop']\ndata['deaths_norm'] = data['deaths']\/data['pop']\ndata.describe()","57c00ee7":"# Locations having more than 1% cases?","df9418ec":"data[data.confirmed_norm>0.01].tail()","50f463f2":"# Italy\ngrouped_italy = data[data.country=='Italy']\n\nfig = px.line(grouped_italy,'date','confirmed_norm',title='Italy confirmed cases')\nfig.layout.yaxis.tickformat = ',.2%'\nfig.update_layout(xaxis_title = 'Date',yaxis_title = 'Confirmed cases (%)')\nfig.show()\n\nfig = px.line(grouped_italy,'date','confirmed_norm',title='Italy confirmed cases (Log scale)',log_y = True)\nfig.layout.yaxis.tickformat = ',.2%'\nfig.update_layout(xaxis_title = 'Date',yaxis_title = 'Confirmed cases (%)')\nfig.show()","746f7b8d":"# India\ngrouped_india = data[data.country=='India']\n\nfig = px.line(grouped_india,'date','confirmed_norm',title='India confirmed cases')\nfig.layout.yaxis.tickformat = ',.5%'\nfig.update_layout(xaxis_title = 'Date',yaxis_title = 'Confirmed cases (%)')\nfig.show()\n\nfig = px.line(grouped_india,'date','confirmed_norm',title='India confirmed cases (Log scale)',log_y = True)\nfig.layout.yaxis.tickformat = ',.5%'\nfig.update_layout(xaxis_title = 'Date',yaxis_title = 'Confirmed cases (%)')\nfig.show()","2cfdd7b3":"# India\ngrouped_china = data[data.country=='China']\n\nfig = px.line(grouped_china,'date','confirmed_norm',title='China confirmed cases')\nfig.layout.yaxis.tickformat = ',.3%'\nfig.update_layout(xaxis_title = 'Date',yaxis_title = 'Confirmed cases (%)')\nfig.show()\n\nfig = px.line(grouped_china,'date','confirmed_norm',title='China confirmed cases (Log scale)',log_y = True)\nfig.layout.yaxis.tickformat = ',.3%'\nfig.update_layout(xaxis_title = 'Date',yaxis_title = 'Confirmed cases (%)')\nfig.show()","e7604fd3":"data['max_date'] = data.groupby(['country'])['date'].transform('max')\ndata['max_date_flag'] = np.where(data['date'] == data['max_date'],True,False)\nlatest_data = data[data['max_date_flag']]\nlatest_data.tail()","db00a840":"# Bar plot of most affected countries (% wise)\nfig = px.bar(latest_data.sort_values(by=\"confirmed_norm\", ascending=False)[:10],'country','confirmed_norm',title = \"Confirmed per 100 (Country wise)\")\nfig.layout.yaxis.tickformat = ',.1%'\nfig.update_layout(xaxis_title = 'Country',yaxis_title = 'Confirmed cases (%)')\nfig.show()","1ba08107":"# Remove countries with population less than million and confirmed cases less than 100\nfig = px.bar(latest_data[(latest_data['pop'] >= 1e6) & (latest_data['confirmed'] >= 100)].sort_values(by=\"confirmed_norm\", ascending=False)[:10],'country','confirmed_norm',title = \"Confirmed per 100 (Country wise)\")\nfig.layout.yaxis.tickformat = ',.2%'\nfig.update_layout(xaxis_title = 'Country',yaxis_title = 'Confirmed cases (%)')\nfig.show()","a3e8d758":"clean_data = latest_data[(latest_data['pop'] >= 1e6) & (latest_data['confirmed'] >= 100)]\nclean_data.describe()","e2350972":"fig = px.scatter(clean_data,'medianage','confirmed_norm',title = \"Confirmed % vs Median Age\",\n                hover_name=\"country\")\nfig.layout.yaxis.tickformat = ',.2%'\nfig.update_layout(xaxis_title = 'Median Age',yaxis_title = 'Confirmed cases (%)')\nfig.show()","4b642876":"# Correlation between smokers and confirmed norm\nfig = px.scatter(clean_data,'smokers','confirmed_norm',title = \"Confirmed % vs % Smokers\",\n                hover_name=\"country\")\nfig.layout.yaxis.tickformat = ',.2%'\nfig.update_layout(xaxis_title = 'Smokers %',yaxis_title = 'Confirmed cases (%)')\nfig.show()","2ad85880":"# Correlation between urbanpop vs confirmed_norm\nfig = px.scatter(clean_data,'urbanpop','confirmed_norm',title = \"Confirmed % vs Urban population %\",\n                hover_name=\"country\")\nfig.layout.yaxis.tickformat = ',.2%'\nfig.update_layout(xaxis_title = 'Urban population %',yaxis_title = 'Confirmed cases (%)')\nfig.show()","2f4da833":"# Correlation between Hospital bed vs confirmed_norm\nfig = px.scatter(clean_data,'hospibed','confirmed_norm',title = \"Confirmed % vs Hospital bed per 1k\",\n                                hover_name=\"country\")\nfig.layout.yaxis.tickformat = ',.2%'\nfig.update_layout(xaxis_title = 'No. hospital beds per 1k',yaxis_title = 'Confirmed cases (%)')\nfig.show()","8dca4796":"# Correlation between Population density vs confirmed_norm\nfig = px.scatter(clean_data,'density','confirmed_norm',title = \"Confirmed % vs Population Density\",\n                                hover_name=\"country\")\nfig.layout.yaxis.tickformat = ',.2%'\nfig.update_layout(xaxis_title = 'Population density (sq km)',yaxis_title = 'Confirmed cases (%)')\nfig.show()","26173b36":"plot_data = data.copy()\nplot_data['date'] = pd.to_datetime(plot_data['date']).dt.strftime(\"%Y-%b-%d\")\nplot_data['factor_size'] = plot_data['confirmed'].pow(0.5)","c6f912a4":"fig = px.scatter_geo(plot_data, locations=\"country\", locationmode='country names', \n                     color=\"confirmed\", size='factor_size', hover_name=\"country\", \n                     range_color= [1, 1000], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='Coronavirus (COVID 19): Spread Over Time', color_continuous_scale=\"portland\")\n#fig.update(layout_coloraxis_showscale=False)\nfig.show()","051b7f3e":"# Percentage wise\nplot_data['factor_size_pc'] = plot_data['confirmed_norm'].fillna(0).pow(0.2)\nplot_data['confirmed_pc'] = plot_data['confirmed_norm'].fillna(0)*100","c966bcd1":"fig = px.scatter_geo(plot_data, locations=\"country\", locationmode='country names', \n                     color=\"confirmed_pc\", size='factor_size_pc', hover_name=\"country\", \n                     range_color= [1e-10, 0.001], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='Coronavirus (COVID 19): Spread Over Time (% of population as confirmed cases)', color_continuous_scale=\"portland\")\n# fig.update(layout_coloraxis_showscale=False)\nfig.show()","73bb0880":"# Percentage of population as confirmed cases","9e7e2866":"**India is not much affected yet, when seen on % basis**","86ea113e":"# Reading Data","45376ef8":"[Covonavirus(COVID-19)](https:\/\/en.wikipedia.org\/wiki\/Coronavirus_disease_2019) is all over us. Organiations and Governments around the world are taking a number of policy actions to mitigate the spread.\n\nIt started in Wuhan,China and now it has spread to 150+ countries. Even countries smaller in size have been seeing large number of cases. Nobody knows cure to this disease but we are becoming more informed and smarter about actions that should be taken to minimize the impact.\n\nFrom quarantining, to using masks and sanitizers and taking other necessary steps can be great precaution. \n\nIn all this, there has been constant support from world community over data collection and processing to gather more insights about the outbreak and what are the factors affecting. Here, in this kernel, I have attempted to find the relation between socioeconomic indicators of countries, to the impact of virus on those countries.","c66da139":"*** This was quite informative, Eurppean countries have highest impact**","0d703ab1":"# Socio-Economic Indicators angle","ad8079f6":"**This is quite huge (Italy has close to 0.1% population affected**","b9790700":"# Confirmed cases over time","da2ada0d":"# Seeing latest numbers of confirmed cases","2492d2fe":"# Correlation between Median Age and Confirmed %","1489d5d8":"China is high in absolute but less in percantage impact","f155f07b":"# Plotting worldwide cases","07e41f55":"# Map plot","579d3a44":"# Now plotting normalized data","94d592c2":"# Fraction of population as confirmed COVID19 cases","f0cc2e6b":"# Installing libraries","5add4aaa":"* As we are seeing, European countries are most hit when we compare cases to population\n* Older Age, smoking, and high level of interaction (urban) has effect on contracting COVID19"}}