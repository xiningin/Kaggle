{"cell_type":{"3c94d341":"code","feba8a7a":"code","7289d37e":"code","cd5abcfb":"code","70dea68a":"code","b1307531":"code","4280fd6c":"code","db744da5":"code","191d9672":"code","fbb30284":"code","c3a5cde9":"code","7f15e336":"code","a3d549ce":"code","82803656":"code","430917a7":"code","21949d54":"code","c26a1efb":"code","04cd1224":"code","b0389abc":"code","e4543a0f":"code","cdd25958":"code","c74e263b":"code","5de0e233":"code","6e65ba40":"code","9dc9634a":"code","223091f6":"code","b0470759":"markdown","00da04d8":"markdown","54c9a9cc":"markdown","a951b3e2":"markdown","eca3b8d5":"markdown","4488287c":"markdown","83ef722d":"markdown","8555838c":"markdown","2bac3293":"markdown","bdb1d1bc":"markdown","e324b3da":"markdown","e22d0a4b":"markdown","c8728a98":"markdown","0d3d3668":"markdown","caf172ce":"markdown","40908301":"markdown","b5ffd737":"markdown"},"source":{"3c94d341":"import numpy as np\nimport pandas as pd   \nimport matplotlib.pyplot as plt\nimport matplotlib.pyplot as plot\nimport seaborn as sns\npd.set_option('max_columns', 150)\nimport random","feba8a7a":"X_ = np.loadtxt(\"\/kaggle\/input\/iot-sensordata\/Xdados.txt\") # X have 14.400rows x 52 sensors\nX=pd.DataFrame(X_, columns=['s1','s2','s3','s4','s5','s6','s7','s8','s9','s10','s11','s12','s13','s14','s15','s16','s17','s18','s19','s20','s21','s22','s23','s24','s25','s26','s27','s28','s29','s30','s31','s32','s33','s34','s35','s36','s37','s38','s39','s40','s41','s42','s43','s44','s45','s46','s47','s48','s49','s50','s51','s52']) \nX.head() \n","7289d37e":"ts_log = np.log(X['s1'])\nplot.plot(ts_log.values,color=\"green\")\nplot.show()","cd5abcfb":"ts_log_diff = ts_log - ts_log.shift()\nplot.plot(ts_log_diff.values)\nplot.show()","70dea68a":"from statsmodels.tsa.arima_model import ARIMA","b1307531":"# follow lag\nmodel_ar = ARIMA(ts_log.values, order=(1,1,0))  \nresults_ARIMA_ar = model_ar.fit(disp=-1)  \n\nplot.plot(ts_log_diff.values)\nplot.plot(results_ARIMA_ar.fittedvalues, color='red')\nplot.title('RSS: %.7f'% sum((results_ARIMA_ar.fittedvalues-ts_log_diff.values[0:len(results_ARIMA_ar.fittedvalues)])**2))\nplot.show()","4280fd6c":"def escoragem(pred, real):\n    # computing errors\n    errors = np.abs(pred - real).flatten()\n    # estimation\n    mean = sum(errors)\/len(errors)\n    cov = 0\n    for e in errors:\n        cov += (e - mean)**2\n    cov \/= len(errors)\n\n    print('mean : ', mean)\n    print('cov : ', cov)\n    return errors, cov, mean\n\n# calculate Mahalanobis distance\ndef Mahala_distantce(x,mean,cov):\n    return (x - mean)**2 \/ cov\n","db744da5":"errors, cov, mean = escoragem(results_ARIMA_ar.fittedvalues, X['s1'].values[0:len(results_ARIMA_ar.fittedvalues)])\n","191d9672":"mahala_dist = []\nfor e in errors:\n    mahala_dist.append(Mahala_distantce(e, mean, cov))","fbb30284":"def scale(A):\n    return (A-np.min(A))\/(np.max(A) - np.min(A))","c3a5cde9":"X['s1_scores'] = [0]+mahala_dist\n\nX['s1_escoragem_escalado'] = scale([0]+mahala_dist)\nplt.figure(figsize=(12, 8))\nplt.hist(X['s1_escoragem_escalado'], bins=50);\n","7f15e336":"q1_pc1, q3_pc1 = X['s1_scores'].quantile([0.25, 0.75])\niqr_pc1 = q3_pc1 - q1_pc1\n\n# Calculate upper and lower bounds for outlier for pc1\nlower_pc1 = q1_pc1 - (1.5*iqr_pc1)\nupper_pc1 = q3_pc1 + (1.5*iqr_pc1)\n    # Filter out the outliers from the pc1\nX['s1_anomalia'] = ((X['s1_scores']>upper_pc1) | (X['s1_scores']<lower_pc1)).astype('int')","a3d549ce":"fig, axes = plt.subplots(nrows=2, figsize=(15,10))\naxes[0].plot(X['s1'], color='blue')\naxes[1].plot(np.array(mahala_dist).ravel(), color='red')\n\naxes[0].set_title('Dados originais', fontsize=20)\naxes[1].set_title('Score de Anomalia', fontsize=20)\n\n# axes[0].grid()\n# axes[1].grid()\nplt.tight_layout()\nplt.show()","82803656":"# visualization\na = X.loc[X['s1_anomalia'] == 1] \n_ = plt.figure(figsize=(18,6))\n_ = plt.plot(X['s1'], color='blue', label='Normal')\n_ = plt.plot(a['s1'], linestyle='none', marker='X', color='red', markersize=12, label='Anomalia')\n_ = plt.xlabel('Series')\n_ = plt.ylabel('leitura do Sensor')\n_ = plt.title('Anomalias do Sensor 1')\n_ = plt.legend(loc='best')\nplt.show();","430917a7":"X['s1_anomalia'].value_counts()","21949d54":"N = X.shape[0]\nplt.scatter(range(N),X['s1_anomalia'][:N].cumsum(),marker='1',label='Modelo AR ')\nplt.xlabel('Dados do sensor 1')\nplt.ylabel('Anomalias encontradas')\nplt.legend()\nplt.show()","c26a1efb":"#2 -- Distributions of Predicted Probabilities of both classes\nlabels=['Positivo','negativo']\nplt.hist(X[X['s1_anomalia']==1]['s1_escoragem_escalado'], density=True, bins=25,\n             alpha=.5, color='green',  label=labels[0])\nplt.hist(X[X['s1_anomalia']==0]['s1_escoragem_escalado'], density=True, bins=25,\n             alpha=.5, color='red', label=labels[1])\nplt.axvline(.5, color='blue', linestyle='--', label='Fronteira de Decis\u00e3o')\n# plt.xlim([0,1])\nplt.title('Distribui\u00e7\u00e3o dos Valores', size=13)\nplt.xlabel('Valores normalizados', size=13)\nplt.ylabel('Amostra (normalizados)', size=13)\nplt.legend(loc=\"upper right\")","04cd1224":"# follow error\nmodel_ma = ARIMA(ts_log.values, order=(0,1,1))  \nresults_ARIMA_ma = model_ma.fit(disp=-1)  \nplot.plot(ts_log_diff.values)\nplot.plot(results_ARIMA_ma.fittedvalues, color='red')\nplot.title('RSS: %.7f'% sum((results_ARIMA_ma.fittedvalues-ts_log_diff.values[0:len(results_ARIMA_ma.fittedvalues)])**2))\nplot.show()","b0389abc":"model_arima = ARIMA(ts_log.values, order=(1,1,1))  \nresults_ARIMA = model_arima.fit(disp=-1)  \nplot.plot(ts_log_diff.values)\nplot.plot(results_ARIMA.fittedvalues, color='red')\nplot.title('RSS: %.7f'% sum((results_ARIMA.fittedvalues-ts_log_diff.values[0:len(results_ARIMA.fittedvalues)])**2))\nplot.show()","e4543a0f":"errors_arima, cov_arima, mean_arima = escoragem(results_ARIMA.fittedvalues, X['s1'].values[0:len(results_ARIMA.fittedvalues)])\n\nmahala_dist_arima = []\nfor e in errors_arima:\n    mahala_dist_arima.append(Mahala_distantce(e, mean_arima, cov_arima))\n","cdd25958":"X['s1_scores_arima'] = [0]+mahala_dist_arima\n\nX['s1_arima_escoragem_escalado'] = scale([0]+mahala_dist_arima)\nplt.figure(figsize=(12, 8))\nplt.hist(X['s1_arima_escoragem_escalado'], bins=50);\n","c74e263b":"q1_pc1, q3_pc1 = X['s1_scores_arima'].quantile([0.25, 0.75])\niqr_pc1 = q3_pc1 - q1_pc1\n# Calculate upper and lower bounds for outlier for pc1\nlower_pc1 = q1_pc1 - (1.5*iqr_pc1)\nupper_pc1 = q3_pc1 + (1.5*iqr_pc1)\n    # Filter out the outliers from the pc1\nX['s1_arima_anomalia'] = ((X['s1_scores_arima']>upper_pc1) | (X['s1_scores_arima']<lower_pc1)).astype('int')","5de0e233":"fig, axes = plt.subplots(nrows=2, figsize=(15,10))\naxes[0].plot(X['s1'], color='blue')\naxes[1].plot(np.array(mahala_dist_arima).ravel(), color='red')\n\naxes[0].set_title('Dados originais', fontsize=20)\naxes[1].set_title('Score de Anomalia', fontsize=20)\n# axes[0].grid()\n# axes[1].grid()\nplt.tight_layout()\nplt.show()","6e65ba40":"# visualization\na = X.loc[X['s1_arima_anomalia'] == 1] \n_ = plt.figure(figsize=(18,6))\n_ = plt.plot(X['s1'], color='blue', label='Normal')\n_ = plt.plot(a['s1'], linestyle='none', marker='X', color='red', markersize=12, label='Anomalia')\n_ = plt.xlabel('Series')\n_ = plt.ylabel('leitura do Sensor')\n_ = plt.title('Anomalias do Sensor 1')\n_ = plt.legend(loc='best')\nplt.show();","9dc9634a":"X['s1_arima_anomalia'].value_counts()","223091f6":"\n#2 -- Distributions of Predicted Probabilities of both classes\nlabels=['Positivo','negativo']\nplt.hist(X[X['s1_arima_anomalia']==1]['s1_arima_escoragem_escalado'], density=True, bins=25,\n             alpha=.5, color='green',  label=labels[0])\nplt.hist(X[X['s1_arima_anomalia']==0]['s1_arima_escoragem_escalado'], density=True, bins=25,\n             alpha=.5, color='red', label=labels[1])\nplt.axvline(.5, color='blue', linestyle='--', label='Fronteira de Decis\u00e3o')\n# plt.xlim([0,1])\nplt.title('Distribui\u00e7\u00e3o dos Valores', size=13)\nplt.xlabel('Valores normalizados', size=13)\nplt.ylabel('Amostra (normalizados)', size=13)\nplt.legend(loc=\"upper right\")","b0470759":"# [Modelo Auto Regressivo (AR)](https:\/\/pt.wikipedia.org\/wiki\/ARMA)\nA nota\u00e7\u00e3o AR(p) se refere ao modelo auto-regressivo de ordem p. O modelo AR(p) \u00e9 escrito como:\n\n![](https:\/\/wikimedia.org\/api\/rest_v1\/media\/math\/render\/svg\/e66382ae014c555d7709407b1ca81997ed959f14)\n\nem que ![](https:\/\/wikimedia.org\/api\/rest_v1\/media\/math\/render\/svg\/8c86323021126b1275b0455e9364df075f30a3c2) s\u00e3o os par\u00e2metros, ![](https:\/\/wikimedia.org\/api\/rest_v1\/media\/math\/render\/svg\/86a67b81c2de995bd608d5b2df50cd8cd7d92455) \u00e9 uma constante e a vari\u00e1vel aleat\u00f3ria ![](https:\/\/wikimedia.org\/api\/rest_v1\/media\/math\/render\/svg\/7c1ff8b8945e6a4fccf6071f806b9ef232492b9a) \u00e9 ru\u00eddo branco.\n","00da04d8":"## [Modelo de m\u00e9dia m\u00f3vel (MA)](https:\/\/pt.wikipedia.org\/wiki\/ARMA)\n\nA nota\u00e7\u00e3o MA(q) se refere ao modelo de m\u00e9dia m\u00f3vel de ordem q\n\n![](https:\/\/wikimedia.org\/api\/rest_v1\/media\/math\/render\/svg\/7f483a11d02567364e0eea50f6f884586bc6cafe)\n\nem que ![](https:\/\/wikimedia.org\/api\/rest_v1\/media\/math\/render\/svg\/856294dd0558ce87f4f515a175f7b1e6e45af43a) s\u00e3o os par\u00e2metros do modelo, ![](https:\/\/wikimedia.org\/api\/rest_v1\/media\/math\/render\/svg\/9fd47b2a39f7a7856952afec1f1db72c67af6161)  \u00e9 o valor esperado de ![](https:\/\/wikimedia.org\/api\/rest_v1\/media\/math\/render\/svg\/82120d04dfb3cbadc4912951dd12b5568c9cd8f3) (frequentemente assumido como igual a zero) e ![](https:\/\/wikimedia.org\/api\/rest_v1\/media\/math\/render\/svg\/d583cf26eb20eb0492ba1fdeb96be32515d616c8) s\u00e3o novamente os termos de erro de ru\u00eddo branco.\n\n","54c9a9cc":"### Plotando as anomalias do sensor 1","a951b3e2":"# Como \u00e9 gerado o score?\nA pontua\u00e7\u00e3o da anomalia \u00e9 definida pela dist\u00e2ncia de Mahalanobis dos vetores de erro de predi\u00e7\u00e3o ajustados a uma distribui\u00e7\u00e3o normal.\n\ne = | X_original - X_predito |\n\n\nPodemos medir a raridade do evento com a localiza\u00e7\u00e3o na distribui\u00e7\u00e3o para isso usamos a dist\u00e2ncia do Mahalanobis que \u00e9 uma estat\u00edstica que representa uma pontua\u00e7\u00e3o de anomalia. Assumindo que os par\u00e2metros de uma distribui\u00e7\u00e3o Gaussiana com dimensional M temos:\n\np(x|Data)=N(x|\u03bc\u02c6,\u2211\u02c6).\n\nEnt\u00e3o, a dist\u00e2ncia de Mahalanobis \u00e9 definida como: a(x)=(x\u2212\u03bc\u02c6)\u22a4\u2211\u02c6\u22121(x\u2212\u03bc\u02c6).\nPodemos medir a raridade do evento com um a(x).\n\n\nEstimamos a m\u00e9dia e a vari\u00e2ncia ajustando-o \u00e0 distribui\u00e7\u00e3o normal. A raz\u00e3o para usar a distribui\u00e7\u00e3o normal \u00e9 que, assumindo uma distribui\u00e7\u00e3o normal, a dist\u00e2ncia de Mahalanobis segue a distribui\u00e7\u00e3o qui-quadrado com um grau de liberdade de 1, tornando mais f\u00e1cil determinar o limiar de anormalidade. As estimativas de m\u00e9dia e vari\u00e2ncia s\u00e3o:\n\n\u03bc\u02c6= (1\/N) \u2211n=1 at\u00e9 N de (x(n))\n\n\u2211\u02c6= (1\/N) \u2211n=1 at\u00e9 N de (x(n)\u2212\u03bc\u02c6)(x(n)\u2212\u03bc\u02c6)T(transposto)\n","eca3b8d5":"### Distribui\u00e7\u00e3o dos scores das anomalias do sensor 1","4488287c":"### Plotando as anomalias do sensor 1","83ef722d":"Gerando um score com  Mahalanobis\n- Ajustando uma distribui\u00e7\u00e3o gaussiana dimensional M","8555838c":"#### Detecanto anomalias com modelos autoregressivos AR, MA, ARIMA\n![](https:\/\/www.googleapis.com\/download\/storage\/v1\/b\/kaggle-user-content\/o\/inbox%2F3595464%2F4088133a20318f4e47e1e2d738509d12%2F__results___5_0.png?generation=1590869249365044&alt=media)","2bac3293":"### Distribui\u00e7\u00e3o dos scores das anomalias do sensor 1","bdb1d1bc":"# Lendo os dados dos 52 sensores","e324b3da":"#### Quantidade de anomalias na serie do sensor 1","e22d0a4b":"### Plotando as anomalias do sensor 1","c8728a98":"### Ocorr\u00eancias de anomalias no sensor 1","0d3d3668":"#### Plotando as anomalias do sensor 1","caf172ce":"## Removendo tend\u00eancia e sasonalidade com diferencia\u00e7\u00e3o","40908301":"#### Quantidade de anomalias na serie do sensor 1","b5ffd737":"## [Modelo AR I MA (ARIMA)](https:\/\/pt.wikipedia.org\/wiki\/ARIMA)\n\nModelos ARIMA n\u00e3o sazonais s\u00e3o geralmente denotados como ARIMA(p,d,q), em que os par\u00e2metros p, d e q s\u00e3o n\u00fameros inteiros n\u00e3o negativos, p \u00e9 a ordem (n\u00famero de defasagens) do modelo auto-regressivo, d \u00e9 o grau de diferencia\u00e7\u00e3o (o n\u00famero de vezes em que os dados tiveram valores passados subtra\u00eddos) e q \u00e9 a ordem do modelo de m\u00e9dia m\u00f3vel. \n\nQuando dois dos tr\u00eas termos s\u00e3o iguais a zero, o modelo pode ser referido com base no par\u00e2metro diferente de zero, retirando \"AR\", \"I\" ou \"MA\" do acr\u00f4nimo que descreve o modelo. Por exemplo, ARIMA(1,0,0) \u00e9 AR(1), ARIMA(0,1,0) \u00e9 I(1) e ARIMA(0,0,1) \u00e9 MA(1)."}}