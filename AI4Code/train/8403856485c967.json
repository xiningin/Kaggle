{"cell_type":{"b35b3a2d":"code","77c3e0c3":"code","fa4961a3":"code","ef5d9e82":"code","295b2af3":"markdown"},"source":{"b35b3a2d":"import numpy as np\nimport json\nimport os\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# print contents of input directory\nprint(os.listdir(\"..\/input\"))","77c3e0c3":"# load train set meta data \ntrain_anns_file = '..\/input\/train2019.json'\nwith open(train_anns_file) as da:\n    train_anns = json.load(da)","fa4961a3":"# print train set stats\nprint('Number of train images ' + str(len(train_anns['images'])))\nprint('Number of classes      ' + str(len(train_anns['categories'])))\ncategory_ids = [cc['category_id'] for cc in train_anns['annotations']]\n_, category_counts = np.unique(category_ids, return_counts=True)\nplt.plot(np.sort(category_counts))\nplt.title('classes sorted by amount of train images')\nplt.xlabel('sorted class')\nplt.ylabel('number of train images per class')\nplt.show()","ef5d9e82":"# display random image\nrand_id = np.random.randint(len(train_anns['images']))\nim_meta = train_anns['images'][rand_id]\nim_category = train_anns['annotations'][rand_id]['category_id']\nim = plt.imread('..\/input\/train_val2019\/' + im_meta['file_name'])\nplt.imshow(im)\nplt.title('image id: ' + str(rand_id) + ', class:' + str(im_category) + ', rights holder: ' + im_meta['rights_holder'])\nplt.xticks([])\nplt.yticks([])\nplt.axis()\nplt.show()","295b2af3":"## Overview\nThis script will load the iNat2019 dataset, print a summary, and display a random image."}}