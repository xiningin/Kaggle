{"cell_type":{"1215f53c":"code","90df3e5b":"code","92c51559":"code","86a2ca6a":"code","635f4d9a":"code","b6a4374b":"markdown","834024b4":"markdown","ee59e0c8":"markdown","32b7f7a6":"markdown"},"source":{"1215f53c":"import numpy as np\nimport pandas as pd\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.metrics import classification_report,confusion_matrix\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score","90df3e5b":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")","92c51559":"# 1. delete insignificant feature\ndrop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Parch']\ntrain = train.drop(drop_elements, axis = 1)\ntest = test.drop(drop_elements, axis = 1)\n\n# 2. check null and fill new data\ndef checkNull_fillData(df):\n    for col in df.columns:\n        if len(df.loc[df[col].isnull() == True]) != 0:\n            if df[col].dtype == \"float64\" or df[col].dtype == \"int64\":\n                df.loc[df[col].isnull() == True,col] = df[col].mean()\n            else:\n                df.loc[df[col].isnull() == True,col] = df[col].mode()[0]\n                \ncheckNull_fillData(train)\ncheckNull_fillData(test)\n\n# 3.one hot encoding \nstr_list = [] \nnum_list = []\nfor colname, colvalue in train.iteritems():\n    if type(colvalue[1]) == str:\n        str_list.append(colname)\n    else:\n        num_list.append(colname)\n        \ntrain = pd.get_dummies(train, columns=str_list)\ntest = pd.get_dummies(test, columns=str_list)","86a2ca6a":"y = train['Survived']\nX = train.drop(['Survived'], axis=1)\nX_test = test\nRANDOM_SEED = 2021\n\nX_Train, X_Val, Y_Train, Y_Val = train_test_split(X, y, test_size = 0.25,random_state = RANDOM_SEED )","635f4d9a":"for i in np.arange(10):\n    model = RandomForestClassifier(n_estimators=1000 + np.random.randint(1000), random_state= RANDOM_SEED).fit(X_Train,Y_Train)\n    predictionforest = model.predict(X_Val)\n    print(confusion_matrix(Y_Val,predictionforest))\n    print(classification_report(Y_Val,predictionforest,target_names=['Died', 'Survived']))\n    acc2 = accuracy_score(Y_Val,predictionforest)\n    print(acc2)\n\n    submission = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\n    submission.Survived = model.predict(X_test)\n    submission.to_csv(\"submission_\" + str(i) + \".csv\" ,index=False)","b6a4374b":"# split train and valid set ","834024b4":"# import basic libraray ","ee59e0c8":"# preprocessing","32b7f7a6":"# load data"}}