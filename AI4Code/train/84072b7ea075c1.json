{"cell_type":{"5007076a":"code","ea6c2bd2":"code","37e44d1d":"code","c7e6dfe6":"code","dc52c492":"code","e4e8a13b":"code","07e9153c":"code","4be79b00":"code","0cbaed3c":"code","969b00e6":"code","a535414d":"code","f6291f0c":"code","529df806":"code","e5cf81e6":"code","b545600a":"code","834d01ff":"code","f0027b26":"code","c28a0f8e":"code","6c1da907":"code","83599831":"code","2323914c":"code","33a85570":"code","a693c19d":"code","e4f9a08a":"code","0e3ea84a":"code","0a0aaa55":"code","1286d506":"code","9130d745":"code","076228eb":"code","48c9f9bf":"markdown","248ff2e4":"markdown","b3bfa58d":"markdown","b8819521":"markdown","92ae48b6":"markdown","88864fb6":"markdown","5e2003cd":"markdown","7a1772ac":"markdown","9a4c8ea7":"markdown","addb31f6":"markdown","b33b1610":"markdown","474e8519":"markdown","d29cd06a":"markdown","8bdde20f":"markdown"},"source":{"5007076a":"import numpy as np\nimport pandas as pd","ea6c2bd2":"train = pd.read_csv(\"..\/input\/tabular-playground-series-apr-2021\/train.csv\", index_col=\"PassengerId\")\ntest = pd.read_csv(\"..\/input\/tabular-playground-series-apr-2021\/test.csv\", index_col=\"PassengerId\")","37e44d1d":"y = train[\"Survived\"]\ntrain.drop(columns=[\"Survived\"], inplace=True)\ndf = pd.concat([train,test])","c7e6dfe6":"df = df[[\"Pclass\",\"Sex\",\"Embarked\",\"Cabin\"]]","dc52c492":"df.isna().sum()","e4e8a13b":"df[\"Cabin\"] = df[\"Cabin\"].str[0]\ndf[\"Cabin\"] = df[\"Cabin\"].fillna(\"N\")\ndf[\"Cabin\"].value_counts()","07e9153c":"(df[:len(train)].join(y)).groupby([\"Cabin\"]).agg({\"Cabin\":\"count\",'Survived': 'mean'})","4be79b00":"df.loc[df[\"Cabin\"]==\"T\",\"Cabin\"] = \"N\"\ndf.loc[df[\"Cabin\"]==\"G\",\"Cabin\"] = \"F\"","0cbaed3c":"(df[:len(train)].join(y)).groupby([\"Cabin\"]).agg({\"Cabin\":\"count\",'Survived': 'mean'})","969b00e6":"df.groupby([\"Pclass\",\"Sex\",\"Cabin\"])[\"Embarked\"].agg(lambda x:x.value_counts().index[0])","a535414d":"aux = df.groupby([\"Pclass\",\"Sex\",\"Cabin\"])[\"Embarked\"].agg(lambda x:x.value_counts().index[0])\ndf[\"MultiIndex\"] = pd.MultiIndex.from_frame(df[[\"Pclass\",\"Sex\",\"Cabin\"]])\ndf.loc[df[\"Embarked\"].isna(),\"Embarked\"] = df.loc[df[\"Embarked\"].isna(),\"MultiIndex\"].map( aux )\ndf.drop(columns=[\"MultiIndex\"],inplace=True)","f6291f0c":"df.isna().sum()","529df806":"def target_encoding(features,df,y):\n    for i in features:\n        mean = df[:len(train)].join(y).groupby(i)[\"Survived\"].mean()\n        df[i] = df[i].map(mean)","e5cf81e6":"target_encoding(df.columns,df,y)","b545600a":"df[\"std\"] = df.std(axis=1)","834d01ff":"df[\"std\"] = pd.qcut(df[\"std\"],5)\nmean = df[:len(train)].join(y).groupby(\"std\")[\"Survived\"].mean()\ndf[\"std\"] = df[\"std\"].map(mean)\ndf[\"std\"] = df[\"std\"].astype(float)","f0027b26":"import matplotlib.pyplot as plt\nimport seaborn as sns","c28a0f8e":"target_mask = y == 1\nnon_target_mask = y == 0","6c1da907":"for col in df.columns:\n    fig, ax = plt.subplots(1, 1, figsize=(10, 4))\n    sns.kdeplot(df[:len(train)].loc[non_target_mask, col], ax=ax, label='Target == 0')\n    sns.kdeplot(df[:len(train)].loc[target_mask, col], ax=ax, label='Target == 1')\n\n    ax.set_title('name: {}'.format(col))\n    plt.show()","83599831":"df.corr()","2323914c":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score","33a85570":"x_train, x_test, y_train, y_test = train_test_split(df[:len(train)], y, test_size=1000)","a693c19d":"lr = LogisticRegression(max_iter=300)\nlr.fit(x_train, y_train)","e4f9a08a":"print(\"Test accuracy: \",accuracy_score(y_test, lr.predict(x_test)), \", Train accuracy: \", accuracy_score(y_train, lr.predict(x_train)))","0e3ea84a":"pd.DataFrame({\"Variable\":df.columns, \"Weights\": lr.coef_.round(2).reshape(-1)})","0a0aaa55":"lr.fit(df[:len(train)], y)","1286d506":"accuracy_score(y, lr.predict(df[:len(train)]))","9130d745":"pd.DataFrame({\"Variable\":df.columns, \"Weights\": lr.coef_.round(2).reshape(-1)})","076228eb":"sub = pd.read_csv(\"..\/input\/tabular-playground-series-apr-2021\/sample_submission.csv\", index_col = \"PassengerId\")\nsub[\"Survived\"] = lr.predict(df[len(train):])\nsub.to_csv('sub_lg_4var.csv')","48c9f9bf":"## Target Encoding","248ff2e4":"Here we are going to add the standard deviation variable and encode it with the target.","b3bfa58d":"### 2.1 Logistic Regression","b8819521":"## 1. Visualization variable vs target","92ae48b6":"Fill each NaN with the most common category (C, S or Q) of its respective subgroup.","88864fb6":"## Fill NaN of the Embarked variable","5e2003cd":"We can see the weights of the model for the variables:","7a1772ac":"## Feature Creation","9a4c8ea7":"There are very few cases of T, G and F categories, so we are going to set T as N and join G and F.","addb31f6":"## 2. Models","b33b1610":"We are going to encode the four variables with the mean of the target.","474e8519":"### Cabin variable. Extract the first letter and fill NaN","d29cd06a":"We are going to use the following 4 variables.","8bdde20f":"Now we are going to train the logistic regression in all the training set and submit."}}