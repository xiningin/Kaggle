{"cell_type":{"ad516346":"code","05fc17b8":"code","fc70e0a5":"code","fdb835a8":"code","a96e059a":"code","fe31f855":"code","bf910abc":"code","38f85f46":"code","3671d4e6":"code","0921a006":"code","344c862c":"code","196a739b":"code","477005aa":"code","1adea817":"code","b8e58804":"code","8b4b0c08":"code","265dfe2a":"code","deb5aba2":"code","181e1d07":"code","b7443eff":"code","bc2dd03c":"code","e08e967e":"code","91356168":"code","6fdc04ac":"code","bac7b183":"code","90998da8":"code","763918e6":"code","86d635e7":"code","4ea8ab57":"markdown","00eee9af":"markdown","1b427c51":"markdown","3f913615":"markdown","5d49ba15":"markdown"},"source":{"ad516346":"import os\nimport glob\nimport numpy as np\nimport pandas as pd\nprint('Priyatama is ready!')","05fc17b8":"#Read multiple csv in one go, and concate them one on one, save as a csv.\n#combine all files in the list\ndata_files_list = [file for file in os.listdir('..\/input\/sales-data-for-eda\/Sales_Data\/')]\ndata_files_list\n#Read all files with name in the list\ndataframes = [pd.read_csv(file) for file in files]\n#Concatenate all the dataframes into one\ndf = pd.concat(dataframes, ignore_index=True)\ndata = df","fc70e0a5":"data.head()","fdb835a8":"data = data.dropna(how='all')\ndata.head()","a96e059a":"#In order to do that, need to add a month column.","fe31f855":"data['Month'] = data['Order Date'].str[0:2] #This makes first two letters of data in Order date column and put it in Month column.\ndata['Month'] = data['Month'].astype(int)\ndata.head()","bf910abc":"#Could not convert as there exists a string \"Or\", which could be because there are multiple entries with 'Or' in column Order date.","38f85f46":"data[data['Month'].str.contains('Or')]","3671d4e6":"#Drop these entries.\ndata = data[data['Month'].str[0:2]!='Or']","0921a006":"data['Month'] = data['Month'].astype(int)\ndata.head()","344c862c":"#Create a new total sales column by multiplying two columns.\ndata['Sales']= data['Quantity Ordered'].astype(int)*data['Price Each'].astype(float)\ndata.head()","196a739b":"data.dtypes","477005aa":"#Change format of a column.\ndata[[\"Quantity Ordered\", \"Price Each\"]] = data[[\"Quantity Ordered\", \"Price Each\"]].astype(float)\ndata.head()","1adea817":"month_summary = data.groupby(['Month']).sum()\nmonth_summary","b8e58804":"import matplotlib.pyplot as plt","8b4b0c08":"months = range(1,13)\nplt.bar(month_summary.index,month_summary['Sales'])\nplt.xticks(months)\nplt.ylabel('Sales in USD ($)')\nplt.xlabel('Month number')\nplt.show()","265dfe2a":"#First add a column for city.\ndata.head()","deb5aba2":"def get_city(address):\n  return address.split(',')[1]\n\ndef get_state(address):\n  return address.split(',')[2].split(' ')[1]\n\n\ndata['City'] = data['Purchase Address'].apply(lambda x: f\"{get_city(x)} ({get_state(x)})\")\ndata.head()","181e1d07":"keys = [city for city, df in data.groupby(['City'])]\n\nplt.bar(keys,data.groupby(['City']).sum()['Sales'])\nplt.ylabel('Sales in USD ($)')\nplt.xlabel('City')\nplt.xticks(keys, rotation='vertical', size=8)\nplt.show()","b7443eff":"#Add a column with hour.\n\ndata['Hour'] = pd.to_datetime(data['Order Date']).dt.hour\ndata['Minute']=pd.to_datetime(data['Order Date']).dt.minute\ndata['Count']=1\ndata.head(3)","bc2dd03c":"keys = [pair for pair, df in data.groupby(['Hour'])]\nplt.plot(keys, data.groupby(['Hour']).count()['Count'])\nplt.xticks(keys)\nplt.grid()\nplt.show()","e08e967e":"#Before 11 AM & 7 PM is the best time to advertise.","91356168":"#Create a new dataframe with only duplicate values of order ID.\ndf = data[data['Order ID'].duplicated(keep=False)] #Keep is kept false so all duplicate entries are kept.\ndf.head(5)","6fdc04ac":"df['Grouped'] = df.groupby('Order ID')['Product'].transform(lambda x: ','.join(x))\ndf.head(4)","bac7b183":"df2 = df[['Order ID', 'Grouped']].drop_duplicates()","90998da8":"from itertools import combinations\nfrom collections import Counter\n\ncount = Counter()\n\nfor row in df2['Grouped']:\n    row_list = row.split(',')\n    count.update(Counter(combinations(row_list, 2))) #2-shows 2 items bought together.\n\nfor key,value in count.most_common(10):\n    print(key, value)","763918e6":"qty= data.groupby(['Product'])['Quantity Ordered'].sum().reset_index()\nqty.columns = ['Product', 'Qty']\nqty = qty.sort_values(by = 'Qty', ascending = False).reset_index().drop('index', axis=1)\nqty.head(3)","86d635e7":"import seaborn as sns\nax = plt.axes()\nax.set(facecolor = 'grey')\nsns.barplot(x=qty['Product'], y =qty['Qty'], palette='rocket')\nplt.xticks(rotation = 90)\nplt.xlabel('Products', fontsize = 10, fontweight = 'bold')\nplt.ylabel('Qty', fontsize=10, fontweight='bold')\nplt.title('Total Qty Sold')\nplt.show","4ea8ab57":"\nQuestion 3: What time should we display advertisements to maximize likelihood of customer's buying product?","00eee9af":"Question 1: What was the best month for sales? How much was earned that month?","1b427c51":"Question 2: What city sold the most product?","3f913615":"Question 4: What products are most often sold together?","5d49ba15":"Question 4:What product sold the most?"}}