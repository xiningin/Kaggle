{"cell_type":{"e8828617":"code","e83bf0ac":"code","c0985e05":"code","5c1b5c93":"code","2cc4ab18":"code","0375c814":"code","aa1f0a8c":"code","dbe3783d":"code","bac8827d":"code","2239c8c5":"code","c4f31ac6":"code","e70cbe4d":"code","bda13054":"code","1f6b6387":"code","7a6768cd":"code","ec787c43":"code","35a5c122":"code","35800b91":"markdown","7d1724a1":"markdown"},"source":{"e8828617":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport unicodedata\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e83bf0ac":"from colorama import Fore, Style\n\nnRowsRead = 1000 # specify 'None' if want to read whole file\n# ham_lyrics.csv has 3634 rows in reality, but we are only loading\/previewing the first 1000 rows\ndf = pd.read_csv('..\/input\/lacountyrestaurantinspectionandviolations\/violations.csv', delimiter=',', nrows = nRowsRead)\ndf.dataframeName = 'violations.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\nprint(Fore.YELLOW + 'Data shape: ',Style.RESET_ALL,df.shape)\ndf.head()","c0985e05":"#Code from Gabriel Preda\n#plt.style.use('dark_background')\ndef plot_count(feature, title, df, size=1):\n    f, ax = plt.subplots(1,1, figsize=(4*size,4))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:20], palette=('#42b3f5', '#42f554', '#f55442'))\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()","5c1b5c93":"plot_count(\"points\", \"Violation Points\", df,2)","2cc4ab18":"plot_count(\"serial_number\", \"Serial Number\", df,4)","0375c814":"plot_count(\"violation_code\", \"Violation Code\", df,4)","aa1f0a8c":"plot_count(\"violation_status\", \"Violation Status\", df,1)","dbe3783d":"plot_count(\"violation_description\", \"violation_description\", df,4)","bac8827d":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.Greens(np.linspace(0,1,20))\ndf[\"violation_description\"].value_counts().sort_values(ascending=False).head(20).plot.pie(y=\"points\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Restaurant Violations Descriptions\")\nplt.axis(\"off\")\nplt.show()","2239c8c5":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.Greens(np.linspace(0,1,20))\ndf[\"violation_status\"].value_counts().sort_values(ascending=False).head(20).plot.pie(y=\"points\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Restaurant Violations Status\")\nplt.axis(\"off\")\nplt.show()","c4f31ac6":"# Count Plot\nplt.style.use(\"classic\")\nplt.figure(figsize=(10, 8))\nsns.countplot(df['violation_description'], palette='Greens', **{'hatch':'\/','linewidth':3})\nplt.xlabel(\"violation_description\")\nplt.ylabel(\"Count\")\nplt.title(\"Restaurants Violations\")\nplt.xticks(rotation=45, fontsize=8)\nplt.show()","e70cbe4d":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.violation_description)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Oranges', background_color=\"green\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","bda13054":"#Codes by Carl McBride Ellis https:\/\/www.kaggle.com\/carlmcbrideellis\/absolute-beginners-titanic-eda-using-dabl\n!pip install dabl\nimport dabl","1f6b6387":"dabl.detect_types(df)","7a6768cd":"dabl.plot(df, target_col=\"violation_description\")","ec787c43":"dabl.plot(df, target_col=\"points\")","35a5c122":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('People can change, they always do. Havent they noticed the changes in you?, @mpwolke Was here' )","35800b91":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcSjmckWlWHwX06WxGT3e7iNbraVG4W1-y6TWw&usqp=CAU)bizjournals.com","7d1724a1":"#Spoiler alert: No Missing Values."}}