{"cell_type":{"12fccdf4":"code","eb900179":"code","b6ee9ad4":"code","732df332":"code","3d54cb68":"code","809bd9fc":"code","4ebf8a80":"code","75d1f452":"code","af1a276e":"code","03244711":"code","de63a3a5":"code","e48ce66b":"code","8f783dcd":"code","4f8a2559":"code","ad58d708":"code","20af032b":"code","7eeb7894":"code","5ac21fe6":"code","4618f4d7":"code","69c3afba":"code","f5bc66fc":"code","37f87bf5":"code","8f8ca232":"code","4d003430":"code","854defb6":"code","beddbb0b":"code","f8206127":"code","f31c14c7":"markdown","dac20277":"markdown","a626d9fd":"markdown","94ecf234":"markdown","0397d162":"markdown","a5a04129":"markdown","8959ac83":"markdown","a1ae900e":"markdown","b05877e9":"markdown"},"source":{"12fccdf4":"\n\nimport numpy as np \nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","eb900179":"import numpy as np\nimport pandas as pd\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import svm\nfrom sklearn.metrics import accuracy_score","b6ee9ad4":"# loading the diabetes dataset to a pandas DataFrame\ndiabetes_dataset = pd.read_csv('..\/input\/pima-indians-diabetes-database\/diabetes.csv') ","732df332":"# printing the first 5 rows of the dataset\ndiabetes_dataset.head()","3d54cb68":"# number of rows and Columns in this dataset\ndiabetes_dataset.shape","809bd9fc":"# getting the statistical measures of the data\ndiabetes_dataset.describe()","4ebf8a80":"diabetes_dataset['Outcome'].value_counts()","75d1f452":"diabetes_dataset.groupby('Outcome').mean()","af1a276e":"# separating the data and labels\nX = diabetes_dataset.drop(columns = 'Outcome', axis=1)\nY = diabetes_dataset['Outcome']","03244711":"print(X)","de63a3a5":"print(Y)","e48ce66b":"scaler = StandardScaler()","8f783dcd":"scaler.fit(X)","4f8a2559":"StandardScaler(copy=True, with_mean=True, with_std=True)","ad58d708":"standardized_data = scaler.transform(X)","20af032b":"print(standardized_data)","7eeb7894":"X = standardized_data\nY = diabetes_dataset['Outcome']","5ac21fe6":"print(X)\nprint(Y)","4618f4d7":"X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, stratify=Y, random_state=2)","69c3afba":"print(X.shape, X_train.shape, X_test.shape)","f5bc66fc":"classifier = svm.SVC(kernel='linear')","37f87bf5":"#training the support vector Machine Classifier\nclassifier.fit(X_train, Y_train)","8f8ca232":"# accuracy score on the training data\nX_train_prediction = classifier.predict(X_train)\ntraining_data_accuracy = accuracy_score(X_train_prediction, Y_train)","4d003430":"print('Accuracy score of the training data : ', training_data_accuracy)","854defb6":"# accuracy score on the test data\nX_test_prediction = classifier.predict(X_test)\ntest_data_accuracy = accuracy_score(X_test_prediction, Y_test)","beddbb0b":"print('Accuracy score of the test data : ', test_data_accuracy)","f8206127":"input_data = (5,166,72,19,175,25.8,0.587,51)\n\n# changing the input_data to numpy array\ninput_data_as_numpy_array = np.asarray(input_data)\n\n# reshape the array as we are predicting for one instance\ninput_data_reshaped = input_data_as_numpy_array.reshape(1,-1)\n\n# standardize the input data\nstd_data = scaler.transform(input_data_reshaped)\nprint(std_data)\n\nprediction = classifier.predict(std_data)\nprint(prediction)\n\nif (prediction[0] == 0):\n  print('The person is not diabetic')\nelse:\n  print('The person is diabetic')","f31c14c7":"\nData Standardization","dac20277":"Making a Predictive System","a626d9fd":"Data Collection and Analysis\n\nPIMA Diabetes Dataset","94ecf234":"*Model* Evaluation","0397d162":"*0* --> Non-Diabetic\n\n1 --> Diabetic","a5a04129":"Importing the Dependencies","8959ac83":"*Training* the Model","a1ae900e":"Train Test Split","b05877e9":"**Accuracy** Score"}}