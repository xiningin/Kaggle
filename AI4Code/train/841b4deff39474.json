{"cell_type":{"8c159fb2":"code","fdb1a583":"code","468c1a5a":"code","cbdc9b76":"code","b4c83244":"code","6ad054b4":"code","33645190":"code","4ac269a3":"code","e7e433cf":"code","ba73ca0e":"code","330b4d28":"code","73b171c5":"code","6d3d08aa":"code","6213b92d":"code","a66a7220":"code","b15147d3":"code","dc560847":"code","b6fca547":"code","0ae73998":"code","bff2f36c":"code","f4520dc0":"code","b756be0b":"code","54819958":"code","d547471f":"code","46198112":"code","3503c3f6":"code","1a100d8e":"code","44294b6d":"code","06ce56bd":"code","cfdf060b":"code","486dd6f5":"code","0f6c3aff":"code","ca1285c3":"code","98fd9510":"code","1dff284c":"markdown","a498d22d":"markdown","06c933ad":"markdown","44c4c36f":"markdown","a5fb4190":"markdown","7ee21d8c":"markdown","a064e4e6":"markdown","767295eb":"markdown","66e09531":"markdown","73e91533":"markdown","2d33c07b":"markdown","593a51aa":"markdown","b0fd42e0":"markdown","37b08cd6":"markdown","36eb25e4":"markdown","3500896d":"markdown","60385e77":"markdown","70ec27d7":"markdown","122168dd":"markdown","62a58942":"markdown","bfbf609d":"markdown","fce4b410":"markdown","e9106a5a":"markdown","489b9df2":"markdown","d758a687":"markdown","d3c87997":"markdown","484859ba":"markdown","e7e4e0e5":"markdown","7ffac29f":"markdown","3660efc8":"markdown"},"source":{"8c159fb2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fdb1a583":"import pandas as pd\nimport numpy as np\nimport imblearn\nimport matplotlib.pyplot as plt\nimport seaborn as sns","468c1a5a":"train = pd.read_csv(\"\/kaggle\/input\/jobathon-may-2021-credit-card-lead-prediction\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/jobathon-may-2021-credit-card-lead-prediction\/test.csv\")","cbdc9b76":"train.head()","b4c83244":"train.shape","6ad054b4":"test.head()","33645190":"test.shape","4ac269a3":"train.info()","e7e433cf":"train.describe(include='all')","ba73ca0e":"train['Is_Lead'].value_counts()\/len(train['Is_Lead'])","330b4d28":"train.isnull().sum()","73b171c5":"train['Credit_Product'].isnull().sum()\/len(train)","6d3d08aa":"train['Credit_Product'].mode()[0]","6213b92d":"train['Credit_Product'] = train['Credit_Product'].fillna(train['Credit_Product'].mode()[0])\ntest['Credit_Product'] = test['Credit_Product'].fillna(train['Credit_Product'].mode()[0]) #Not a mistake","a66a7220":"sns.boxplot(x = train['Age'])","b15147d3":"sns.boxplot(x = train['Vintage'])","dc560847":"sns.boxplot(x = train['Avg_Account_Balance'])","b6fca547":"sns.displot(train['Age'])","0ae73998":"train['Gender'].value_counts(normalize=True).plot(kind='bar')","bff2f36c":"train['Region_Code'].value_counts(normalize=True).plot(kind='bar')","f4520dc0":"train['Occupation'].value_counts(normalize=True).plot(kind='bar')","b756be0b":"train['Channel_Code'].value_counts(normalize=True).plot(kind='bar')","54819958":"sns.displot(train['Vintage'])","d547471f":"train['Credit_Product'].value_counts(normalize=True).plot(kind='bar')","46198112":"sns.displot(train['Avg_Account_Balance'])","3503c3f6":"sns.countplot(x= train['Is_Active'])","1a100d8e":"train['Is_Active'].value_counts(normalize=True).plot(kind='bar')","44294b6d":"train['Is_Lead'].value_counts(normalize=True).plot(kind='bar')","06ce56bd":"sns.countplot(x= train['Is_Lead'],hue='Gender',data=train)","cfdf060b":"sns.heatmap(train.corr(),annot=True)","486dd6f5":"sns.countplot(x = train['Is_Lead'],hue='Occupation',data=train)","0f6c3aff":"sns.countplot(x = train['Is_Lead'],hue = 'Channel_Code',data = train)","ca1285c3":"sns.countplot(x = train['Is_Lead'],hue='Credit_Product',data=train)","98fd9510":"sns.countplot(x = train['Is_Lead'],hue='Is_Active',data=train)","1dff284c":"This shows that around 75% of the data is for Category = 0 and 25% is for category = 1. \n\nSince, we want to know who are our leads, we're concerned about Category 1 which is minority category. Hence, classification algorithms that deal with imbalance of classes must be applied.","a498d22d":"This shows maxiumum people from the dataset have entered from Channel X1 (40-45%)","06c933ad":"70% people in the dataset don't have a Credit Product.","44c4c36f":"The Distribution of region code is right skewed.","a5fb4190":"No outliers here.","7ee21d8c":"Below Graphs, show a breakdown of Is_lead with Occupation, Channel Code Credit product and Is_Active.","a064e4e6":"# Import Libraries","767295eb":"Around 40% of the people in data are Self_employed, 30% are Salaried , 25% as other and only 2-3% are entrepreneurs.","66e09531":"This has a lot of outliers.","73e91533":"# Problem Statement","2d33c07b":"# Univariate Analysis","593a51aa":"# Bivariate Analysis","b0fd42e0":"From the above, we can see that it is a Imbalanced Binary Classification Problem.","37b08cd6":"# Know Data\nAlways try to see the shape of data and it's values.","36eb25e4":"This shows our data has almost 55% males and 45% females.","3500896d":"This shows that out of 2,45,725 people in dataset 1,40,000 are inactive which is around 60%.(shown below)","60385e77":"This shows that data has a huge number of people between 20-30 and distribution is not normal.","70ec27d7":"This shows that Credit_Product has missing values.","122168dd":"# Outlier Analysis","62a58942":"This tells that: \n\nID is a unique column (Primary Key)\n\nGender is of twop types: Male and Female\n\n35 unique region codes\n\n4 Occupations\n\n4 Channel_Code\n\nCredit_Product and Is_Active is Yes\/No\n\nRange of data is huge in Avg_Account_Balance. Probably because of outlier.","bfbf609d":"# <center> <b> Exploratory Data Analysis on AV's Jobathon - May 2021 <\/b> <\/center>","fce4b410":"No outlier in Age.","e9106a5a":"This shows that the number of females is less than males, irrespective of whether a person was lead or not.","489b9df2":"# Key Points:\n\n1. It's a imbalanced problem, so you need to apply some technique either SMOTENC,Over\/UnderSampling or imblearn algos like BalancedRandomForest\n\n2. Imputing 12% values with mode might or might not create problem, so test the model for both.\n\n3. Test Data also has missing values for credit, change them using mode of training data and not test (Important).\n\n4. Avg_Account_Balance has many outliers, choose a algo accordingly. Else, maybe you can change outliers with median value (You have to check accuarcy of model to decide that)\n\n5. Accuracy won't be a good metric here. Precision Recall curve is robust to imbalanced datasets. So, use that while evaluating and not ROC-AUC as it's good for balanced classes.\n\n6. When you're done, scale the data , it would be make algo run comparatively fast. Make sure to fit only train data and use the result to transfrom test data.\n\n7. Be careful while scaling and imputing values, don't leak the test data to the model.","d758a687":"This shows that there is moderate positive correlation between Vintage and Age. Though it is not high and we can ignore it for now, but keep this in mind while doing analysis. Rest of the varibles have low correlation","d3c87997":"# Get Data","484859ba":"Average Account Balance is right skewed.","e7e4e0e5":"# Checking for missing values\nSince, we have missing values in a categorical column. Since values missing are only 12%, we are replacing it with Mode. ","7ffac29f":"## Hope you all liked it! \n\n## I'd appreciate if you'll leave comments below for any suggestions to improve this EDA. \n\n## Thanks!\n","3660efc8":"This shows that there are less cases of Is_Lead = 0, making it a minority class."}}