{"cell_type":{"5dded9f4":"code","6932d35a":"code","d0b65ff1":"code","19250c49":"code","0a906a23":"code","a32364e4":"code","f7112596":"code","625d184f":"code","81c0ed6a":"code","0e48df85":"code","e51c891f":"code","78922f29":"code","f707d036":"code","d74c23e7":"code","01e2a4d1":"code","9aff1feb":"code","617032b1":"code","7cb3ae92":"code","ba9f011a":"code","9010ada4":"code","62749b92":"markdown","b973d380":"markdown","ea2cea17":"markdown"},"source":{"5dded9f4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport seaborn as sns\nimport wordcloud as wc\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsns.set(style='dark')\nimport plotly.express as px\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6932d35a":"df = pd.read_csv(\"..\/input\/all-space-missions-from-1957\/Space_Corrected.csv\")\ndf.head()","d0b65ff1":"df.info()","19250c49":"df.describe()","0a906a23":"df.shape","a32364e4":"#check null values\ndf.isna().sum()","f7112596":"# Extract the launch year\ndf['DateTime'] = pd.to_datetime(df['Datum'])\ndf['Year'] = df['DateTime'].apply(lambda datetime: datetime.year)\n\n# Extract the country of launch\ndf[\"Country\"] = df[\"Location\"].apply(lambda location: location.split(\", \")[-1])\n\ndf.head(10)","625d184f":"df = df.drop(['Unnamed: 0', 'Unnamed: 0.1', ' Rocket'], axis=1)","81c0ed6a":"df","0e48df85":"df['Month'] = df['DateTime'].apply(lambda datetime: datetime.month)\ndf","e51c891f":"# Country vs no.of launches\ncountry = df.groupby('Country').count()['Detail'].sort_values(ascending=False).reset_index()\ncountry.rename(columns={\"Detail\":\"No of Launches\"},inplace=True)\ncountry.head(10).style.background_gradient(cmap='Blues').hide_index()","78922f29":"#bar plot on the above for better visualization\nplt.figure(figsize=(8,8))\nax = sns.countplot(y=\"Country\", data=df, order=df[\"Country\"].value_counts().index)\nax.set_xscale(\"log\")\nax.axes.set_title(\"Country vs. # Launches (Log Scale)\",fontsize=18)\nax.set_xlabel(\"Number of Launches (Log Scale)\",fontsize=16)\nax.set_ylabel(\"Country\",fontsize=16)\nax.tick_params(labelsize=12)\nplt.tight_layout()\nplt.show()","f707d036":"#Companies vs no.of launches by them\ncomp = df['Company Name'].value_counts().reset_index()\ncomp.columns = ['company', 'number of starts']\ncomp = comp.sort_values(['number of starts'])\nfig = px.bar(\n    comp, \n    x='number of starts', \n    y=\"company\", \n    orientation='h', \n    title='Number of launches by every company', \n    height=1000, \n    width=800\n)\nfig.show()","d74c23e7":"# treemap  for company vs launches\ncompany_list = list(df['Company Name'].unique())\n\nnum_launch = []\n\n# get number of lunchs for each company\nfor n in company_list:\n    num_launch.append(((df[df['Company Name']== n]).shape)[0])\n\n#convert the lists into data dict.    \ndata = {'Company': company_list, 'launchs': num_launch}\n\n#create dataframe\ndf_comp = pd.DataFrame(data=data, columns= ['Company', 'launchs'])","01e2a4d1":"df_comp\nfig = px.treemap(df_comp.sort_values(by = 'launchs', ascending= False).reset_index(drop = True),\n                         path = ['Company'], values= 'launchs', height = 700,\n                         title = 'Number of launchs Company wise',\n                         color_discrete_sequence = px.colors.qualitative.Light24)\nfig.data[0].textinfo = 'label + text+ value'\n\nfig.show()","9aff1feb":"location_list = list(df['Location'].unique())\n\nlaunch = []\n\nfor n in location_list:\n    launch.append(((df[df['Location']== n]).shape)[0])\n\ndata_l = {'Company': location_list, 'launchs': launch}\n\n\ndf_loc = pd.DataFrame(data=data_l, columns= ['location', 'launchs'])","617032b1":"fig = px.pie(df_loc, values=df_loc['launchs'], names=df_loc.index,\n             title='location and Their Lauches Ratio in The World',\n            )\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(\n    template='plotly_white'\n)\nfig.show()","7cb3ae92":"#Status va launches\nsts = df['Status Rocket'].value_counts().reset_index()\nsts.columns = ['status', 'count']\nfig = px.pie(\n    sts, \n    values='count', \n    names=\"status\", \n    title='Rocket status', \n    width=500, \n    height=500\n)\nfig.show()","ba9f011a":"# Mission status vs Count\nplt.figure(figsize=(6,6))\nax = sns.countplot(y=\"Status Mission\", data=df, order=df[\"Status Mission\"].value_counts().index, palette=\"ocean_r\")\nax.set_xscale(\"log\")\nax.axes.set_title(\"Mission Status vs. Count\",fontsize=18)\nax.set_xlabel(\"Count\",fontsize=16)\nax.set_ylabel(\"Mission Status\",fontsize=16)\nax.tick_params(labelsize=12)\nplt.tight_layout()\nplt.show()","9010ada4":"#yearwise launches\ndate= df.groupby('Year').count()['Detail'].reset_index()\nplt.figure(figsize=(20,6))\nb=sns.barplot(x='Year', y='Detail', data=date)\nplt.ylabel('no of launches')\nplt.title(' No of launches per year')\n_=b.set_xticklabels(b.get_xticklabels(), rotation=90, horizontalalignment='right')","62749b92":"# 3. Data Visualization \ud83d\udcc9\n","b973d380":"## 1. Introduction \u2b07\n\n ## *This notebook is our attempt to visualize space missions across the world*","ea2cea17":"# **2. Data Pre-processing \u2699\ufe0f**"}}