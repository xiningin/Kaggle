{"cell_type":{"d85efa72":"code","5bfece97":"code","dbc31a85":"code","f0a50044":"code","c958a457":"code","933345e1":"code","6f8ab965":"code","db8a6335":"code","9e331e45":"code","38208630":"code","af70c506":"code","b460066b":"code","892b9dd0":"code","8120200c":"code","bb975251":"markdown","5cfd8407":"markdown","35b7f02a":"markdown"},"source":{"d85efa72":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5bfece97":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go","dbc31a85":"FILE_PATH = '..\/input\/indian-migration-history\/IndianMigrationHistory.csv'\ndf = pd.read_csv(FILE_PATH)","f0a50044":"df.info()","c958a457":"# Checking for null data \n1 - df.count() \/ len(df) ","933345e1":"# Checking for duplicated rows\ndf[df.duplicated()].count()","6f8ab965":"df.head()\nrename_columns = {'1960 [1960]':'1960' ,'1970 [1970]':'1970','1980 [1980]':'1980','1990 [1990]':'1990',\n                  '2000 [2000]':'2000','Migration by Gender Name': 'Gender','Country Dest Name':'Country'\n                 }\ndf.rename(columns = rename_columns , inplace = True)","db8a6335":"total_data = df[ df['Gender'] == 'Total'] # gender = Total\ndf = df.iloc[:26 , : ] # gender = M or F","9e331e45":"migrated_population = df.groupby(['Country']).sum()\nmigrated_population['Total'] = migrated_population.sum(axis = 1)\nmigrated_population['Percent'] = round((migrated_population['Total'] \/ migrated_population['Total'].sum())*100 , 2)\nmigrated_population","38208630":"def create_percent(data_frame , years = []):\n    new_frame = pd.DataFrame()    \n    for year in years:\n        new_frame[year] = round( ( data_frame[year]\/data_frame[year].sum() ) * 100 , 3)\n    new_frame['country'] = data_frame.index\n    return new_frame\nmigrated_pop_percnt = create_percent(migrated_population , ['1960' , '1970' , '1980' , '1990' , '2000'])","af70c506":"header = dict(values = ['country' , '1960' , '1970' , '1980' , '1990' , '2000'])\ncells = dict(values = [ migrated_pop_percnt['country'] ,migrated_pop_percnt['1960'] ,migrated_pop_percnt['1970'],migrated_pop_percnt['1980'] ,\n                                migrated_pop_percnt['1990'] , migrated_pop_percnt['2000'] ])\ndata = go.Table(header = header , cells = cells)\ngo.Figure(data , layout = go.Layout(title = 'Percentage of population migrated to different countries for given years'))","b460066b":"px.bar(migrated_population['1960'] , labels = dict(value = 'Migrated Population')).show()\npx.bar(migrated_population['2000'] , labels = dict(value = 'Migrated Population')).show()","892b9dd0":"data = df.groupby(['Gender' , 'Country']).sum()\ndata['Total'] = data.sum(axis = 1)\nfemale_mig = data.loc['Female'][  data.loc['Female']['Total'] == data.loc['Female']['Total'].max() ]\nmale_mig = data.loc['Male'][  data.loc['Male']['Total'] == data.loc['Male']['Total'].max() ]\n\nheader = dict(values = ['Gender' , 'Source' , 'Destination' , 'Count'])\ncells =  dict(values = [ \n    ['Female' , 'Male'] , ['India' , 'India'] , [female_mig.index[0] , male_mig.index[0]] ,\n    [female_mig['Total'][0],male_mig['Total'][0]] ])\n\ngo.Figure(data = go.Table(header = header , cells = cells) , layout = go.Layout(title = 'Preferable choice of country to migrate according to female and male'))","8120200c":"max_ = migrated_population[ migrated_population['Total'] == migrated_population['Total'].max() ]\nmin_ = migrated_population[ migrated_population['Total'] == migrated_population['Total'].min() ]\nhead = dict(values = ['Migrated The Most' , 'Count' , 'Percent' , 'Migrated the least' , 'Count' , 'Percent'])\ncells = dict(values = [\n        [max_.index[0]] , [max_['Total'][0]] , [max_['Percent'][0]],\n        [min_.index[0]] , [min_['Total'][0]] , [min_['Percent'][0]],\n])\ndata = go.Table(header = head , cells = cells)\ngo.Figure(data , layout = go.Layout(title = 'Most and Least Migrated Country '))","bb975251":"# Inference\nWe could see that over the fourty year's there is a drastic migration to United States , but we still can't conclude the most migrated country is United States.","5cfd8407":"According to females the preferable country to migrate is United Kingdom while for Males it is United States","35b7f02a":"# Conclusion\nThe most migrated country is United kingdom between 1960 - 2000 , and least migrated country is Finland"}}