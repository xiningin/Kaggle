{"cell_type":{"90d10dcb":"code","8b01e95f":"code","29ccf421":"code","93c4e999":"code","8ebde680":"code","0e67b5b4":"code","2e7ec48a":"code","944ef8c2":"code","65771138":"code","d1beae45":"code","17057510":"code","49b41ae0":"code","dd2045c8":"code","4579c757":"code","74a627aa":"code","a9bfa984":"code","6adda624":"code","3e612855":"code","42023a43":"code","9ebb9c0f":"code","5eda327c":"code","a07b3a23":"code","eb67aa95":"code","26d96fae":"code","a18086d6":"code","9f44ebe0":"code","5e90286b":"code","df258f5d":"code","eed7a958":"code","f8d35163":"code","843bd386":"code","15321714":"code","6c1c6429":"code","a077c699":"code","56d7f6e4":"code","1ec9400f":"code","59c70314":"code","bb957c13":"code","8f3263c1":"code","bda8ec02":"code","8661ec3a":"code","5b61899b":"code","19729e4d":"code","ca1f2003":"code","f0aafa68":"code","3306b612":"code","bdce776c":"code","c8486aeb":"code","0607eb5a":"code","1149b659":"code","2a807627":"code","5aaaf609":"code","e9d54ffe":"code","87e89c8f":"code","e90f3162":"code","fa0d12a5":"code","8c1108bb":"code","edb9ebea":"code","1c580a55":"code","883f531e":"code","53b5e635":"code","5b0e74a6":"code","f664297a":"code","133af541":"code","252ae182":"code","80a21f40":"code","54701110":"code","4349f414":"code","131d7547":"code","056f2bb1":"code","35fd361e":"code","1dd73baf":"code","c5cf1bce":"code","ab19c3e8":"code","d9b2785a":"code","69741d47":"code","b0f5a256":"code","a589e36f":"code","9bbe4961":"code","9a0be92d":"code","bc446e18":"code","cd76d2a8":"code","01ff4dc5":"code","dd7734d1":"code","86183b5d":"code","08c01cbe":"code","681f87ff":"code","7a758d36":"code","2db9d7b8":"code","8c3e5897":"code","05a3c021":"code","71ef8ebd":"code","ba1fee1d":"code","11633c8a":"code","55772905":"code","a1e61ff3":"code","c84a1a2b":"code","5b419f1a":"code","5ed6abca":"code","3dbd8fdc":"code","0337c2c5":"code","4bdc6587":"code","3be8506d":"code","d72d20f1":"code","0993bbac":"code","65cc9a07":"code","2788ae99":"code","9aab282c":"code","4169206b":"code","ac51c3c2":"code","c9bd93d7":"code","d614557d":"code","9446fad9":"code","1102f459":"code","65cc06d2":"code","913e3c47":"code","c19ee6bd":"code","9b946799":"code","20e66870":"code","64bc3982":"code","d036813d":"code","df295483":"code","0b01ef8a":"code","ac026c31":"code","0bc8b596":"code","386395f1":"code","04b90987":"code","5ece80ba":"code","1af8fa4b":"code","d733d95a":"code","46ba103a":"code","83a4c8be":"code","09ea470c":"code","947f7354":"code","ad277167":"code","8886c742":"code","658218c2":"code","b6ab0043":"code","05ce7859":"code","7b5acd03":"code","322e032e":"code","3663f54c":"code","06188f07":"code","7e8d17d4":"code","20aab8dd":"code","2b18e0f1":"code","d25e01ad":"code","cda44bb3":"code","e87cfab1":"code","ae261939":"code","ee21faa9":"code","8e182ad3":"code","8c0bf99f":"code","4a212e32":"code","6d3195a9":"code","7ed36de2":"code","84d629c4":"code","7923dc71":"code","26c439a8":"code","5c5c749a":"code","d495dee7":"markdown","960d7f00":"markdown","4dbd001a":"markdown","d72d22b8":"markdown","9737fe63":"markdown","fd7d0a26":"markdown","bdfc6a86":"markdown","b1c7cde4":"markdown","006e51f4":"markdown","2837c9c5":"markdown","907d7340":"markdown","edda3905":"markdown","63abb43f":"markdown","0387cbda":"markdown","70750324":"markdown","f00fe3a6":"markdown","f8499b85":"markdown","3600e1f6":"markdown","3c698eac":"markdown","312f0d81":"markdown","cc71c53c":"markdown","e46aeb3f":"markdown","696b5179":"markdown","00770196":"markdown","8ecee43f":"markdown","a0cb2050":"markdown","eb95dc3d":"markdown","97a17ca1":"markdown","dca5da7d":"markdown","dc43e02e":"markdown","fae92a57":"markdown","1176ed8f":"markdown","2d88b563":"markdown","a919e37d":"markdown","f3e1c850":"markdown","48bf5273":"markdown","fe6b2717":"markdown","b90a569a":"markdown","a1553ffb":"markdown","e5544b85":"markdown","315c30ba":"markdown","34d2b449":"markdown","37f550e2":"markdown","e40d12a0":"markdown","0e444d44":"markdown","f84d2d04":"markdown","5c4b42bc":"markdown","7d4a42c8":"markdown","276a7c1b":"markdown","a8ceb4fb":"markdown","76620991":"markdown","d9211448":"markdown","27a126e4":"markdown","3b64e222":"markdown","fbdd48de":"markdown","a9838d1f":"markdown","cacd0bb2":"markdown","facd3c34":"markdown","0f7c572f":"markdown","3f50a5d9":"markdown","7e79f1d2":"markdown","eb6963b0":"markdown","85637b47":"markdown","43c7cd04":"markdown","fe192b5a":"markdown","a4a4b4df":"markdown","dc430478":"markdown","885ebde7":"markdown","c517f56b":"markdown","f6cb25bf":"markdown","fe9b7ff1":"markdown","6183b8c7":"markdown","4b9f643c":"markdown","4ee45c64":"markdown","08ee7cc7":"markdown","aec4bb82":"markdown","e4e62f60":"markdown","8a1f1831":"markdown","6c89e4da":"markdown","4e240f65":"markdown","81fd7459":"markdown","ab5fed5a":"markdown","4eae0f1f":"markdown","f5615275":"markdown","0b5f8178":"markdown","75f1b98c":"markdown","c746072e":"markdown","0734d96a":"markdown","832885b2":"markdown","f528c96a":"markdown","a8ab12e6":"markdown","cf08345c":"markdown","5db69c53":"markdown","e1fafe6d":"markdown","09707e03":"markdown","fc1451b7":"markdown","51757fd6":"markdown","d4df8e1e":"markdown","f73f1b86":"markdown","ed3b4a72":"markdown","69cc6039":"markdown","72262631":"markdown","1c974d5a":"markdown","d236c55b":"markdown","6d072f11":"markdown","8634a6ca":"markdown","6a58ae05":"markdown","d10566e5":"markdown","86a73484":"markdown","a0410f51":"markdown","4f34ad0a":"markdown","f740bf2e":"markdown","ec9bd430":"markdown","91b715c3":"markdown","dece0455":"markdown","6462c59d":"markdown","12a4e129":"markdown","b3144157":"markdown","939dbb3f":"markdown","6b71e7e6":"markdown","195cd8b1":"markdown","759c5938":"markdown","fdb446fa":"markdown","814dd985":"markdown","345cde4f":"markdown","0a57a073":"markdown","0072f46d":"markdown","3bda11be":"markdown","a40c03d2":"markdown","4143a4e1":"markdown","9a3b5abe":"markdown","57ef673a":"markdown","2aadc340":"markdown","dabac62e":"markdown","7782752c":"markdown","e1fc4fe8":"markdown","4b2a0887":"markdown","7a29de07":"markdown","c1c709b9":"markdown","2f104b14":"markdown","3e920859":"markdown","2eb88ebb":"markdown","2e2ab1d5":"markdown","ad3d6746":"markdown","d9efc62c":"markdown","f65d533b":"markdown","4c84b478":"markdown","644effc6":"markdown","dd725cb9":"markdown"},"source":{"90d10dcb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8b01e95f":"import numpy as np\nimport pandas as pd\nimport random\nimport xgboost as xgb\n\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.preprocessing import StandardScaler, RobustScaler\nfrom sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor\nfrom sklearn.metrics import r2_score as r2\nfrom sklearn.model_selection import KFold, GridSearchCV\nfrom catboost import CatBoostRegressor\n\nfrom datetime import datetime\n\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","29ccf421":"# \u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432\u044b\u0432\u043e\u0434 \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0439\nimport warnings\nwarnings.filterwarnings('ignore')","93c4e999":"# \u0417\u0430\u0434\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u0432\nmatplotlib.rcParams.update({'font.size': 14})","8ebde680":"def evaluate_preds(train_true_values, train_pred_values, test_true_values, test_pred_values):\n    \"\"\"\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043c\u0435\u0442\u0440\u0438\u043a\u0443 r2 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0438 \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a\u0430\u0445\"\"\"\n    \n    print(\"Train R2:\\t\" + str(round(r2(train_true_values, train_pred_values), 3)))\n    print(\"Test R2:\\t\" + str(round(r2(test_true_values, test_pred_values), 3)))\n    \n    plt.figure(figsize=(18,10))\n    \n    plt.subplot(121)\n    sns.scatterplot(x=train_pred_values, y=train_true_values)\n    plt.xlabel('Predicted values')\n    plt.ylabel('True values')\n    plt.title('Train sample prediction')\n    \n    plt.subplot(122)\n    sns.scatterplot(x=test_pred_values, y=test_true_values)\n    plt.xlabel('Predicted values')\n    plt.ylabel('True values')\n    plt.title('Test sample prediction')\n\n    plt.show()","0e67b5b4":"# \u041f\u0443\u0442\u0438 \u0434\u043e \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438\nTRAIN_DATASET_PATH = '..\/input\/real-estate-price-prediction-moscow\/train.csv'\nTEST_DATASET_PATH = '..\/input\/real-estate-price-prediction-moscow\/test.csv'","2e7ec48a":"# \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438\ntrain_df = pd.read_csv(TRAIN_DATASET_PATH)\ntrain_df.head()","944ef8c2":"train_df.dtypes","65771138":"# \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438\ntest_df = pd.read_csv(TEST_DATASET_PATH)\ntest_df.head()","d1beae45":"test_df.dtypes","17057510":"print('\u0427\u0438\u0441\u043b\u043e \u0441\u0442\u0440\u043e\u043a \u0432 \u0442\u0440\u0435\u0439\u043d\u0435: ', train_df.shape[0])\nprint('\u0427\u0438\u0441\u043b\u043e \u0441\u0442\u0440\u043e\u043a \u0432 \u0442\u0435\u0441\u0442\u0435: ', test_df.shape[0])","49b41ae0":"print('\u0427\u0438\u0441\u043b\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0432 \u0442\u0440\u0435\u0439\u043d\u0435: ', train_df.shape[1])\nprint('\u0427\u0438\u0441\u043b\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0432 \u0442\u0435\u0441\u0442\u0435: ', test_df.shape[1])","dd2045c8":"train_df.dtypes","4579c757":"train_df['Id'] = train_df['Id'].astype(str)\ntrain_df['DistrictId'] = train_df['DistrictId'].astype(str)\ntrain_df.dtypes","74a627aa":"target_name = 'Price'\n\n# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u0434\u043b\u044f \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\ntrain_df[target_name].describe()","a9bfa984":"target_mean = round(train_df[target_name].mean(), 2)\ntarget_median = train_df[target_name].median()\n\nprint(f'\u0421\u0440\u0435\u0434\u043d\u0435\u0435: {target_mean}\\n\u041c\u0435\u0434\u0438\u0430\u043d\u0430: {target_median}')","6adda624":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0440\u0430\u0444\u0438\u043a\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\nplt.figure(figsize = (16, 8))\n\nsns.distplot(train_df[target_name], bins=50)\n\ny = np.linspace(0, 7e-6, 10)\nplt.plot([target_mean] * 10, y, label='mean', linewidth=3)\nplt.plot([target_median] * 10, y, label='median', linewidth=3)\n\nplt.title('Distribution of target')\nplt.legend()\nplt.show()","3e612855":"train_df.dtypes","42023a43":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u0434\u043b\u044f \u0432\u0435\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\ntrain_df.describe()","9ebb9c0f":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c \u0434\u043b\u044f \u0432\u0435\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\ntrain_df.select_dtypes(include=['float64', 'int64']).drop(target_name, axis=1).hist(figsize=(16, 16), bins=20, grid=False)\nplt.show()","5eda327c":"def plot_feature_hist(feature_name, bins_count=20, ylog=False):\n    \"\"\"\u0421\u0442\u0440\u043e\u0438\u0442 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\"\"\"\n    \n    train_df[feature_name].hist(figsize=(10, 10), bins=bins_count, grid=False)\n    \n    plt.xlabel(feature_name)\n    plt.ylabel('Count')\n    plt.title(f'Distribution of {feature_name}')\n    \n    if ylog:\n        plt.yscale('log')\n    \n    plt.show()","a07b3a23":"def add_outlier_label_feature(outlier_condition, outlier_label_feature_name):\n    \"\"\"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c - \u043c\u0435\u0442\u043a\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u0430 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0432 \u043c\u0435\u0442\u043e\u0434 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\"\"\"\n    \n    train_df[outlier_label_feature_name] = 0\n    train_df.loc[condition, outlier_label_feature_name] = 1","eb67aa95":"def get_and_print_quantile(feature_name):\n    \"\"\"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 2.5, 97.5 \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u044c \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\"\"\"\n    \n    quantile025 = train_df[feature_name].quantile(.025)\n    quantile975 = train_df[feature_name].quantile(.975)\n    print(f'2.5 \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u044c: {quantile025}')\n    print(f'97.5 \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u044c: {quantile975}')\n    return quantile025, quantile975","26d96fae":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0434\u043b\u044f Rooms\nplot_feature_hist('Rooms', ylog=True)","a18086d6":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u0434\u043b\u044f Rooms\ntrain_df['Rooms'].describe()","9f44ebe0":"train_df['Rooms'].value_counts()","5e90286b":"train_df.loc[(train_df['Rooms'] == 10) | (train_df['Rooms'] == 19) | (train_df['Rooms'] == 6)]","df258f5d":"train_df.loc[train_df['Rooms'] == 0]","eed7a958":"# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\ncondition = (train_df['Rooms'] == 0) | (train_df['Rooms'] >= 6)\nadd_outlier_label_feature(condition, 'Rooms_outlier')\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df[condition]","f8d35163":"# \u0417\u0430\u043c\u0435\u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ntrain_df.loc[train_df['Rooms'] == 0, 'Rooms'] = 1\ntrain_df.loc[train_df['Rooms'] >= 6, 'Rooms'] = train_df['Rooms'].median()\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df.loc[train_df['Rooms_outlier'] == 1]","843bd386":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nplot_feature_hist('Rooms')","15321714":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ntrain_df['Rooms'].describe()","6c1c6429":"train_df['Rooms'].value_counts()","a077c699":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0434\u043b\u044f KitchenSquare\nplot_feature_hist('KitchenSquare', bins_count=100, ylog=True)","56d7f6e4":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a \u0434\u043b\u044f KitchenSquare\ntrain_df['KitchenSquare'].describe()","1ec9400f":"train_df['KitchenSquare'].value_counts()","59c70314":"quantile025, quantile975 = get_and_print_quantile('KitchenSquare')","bb957c13":"# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\nKitchenSquare_min = 3\ncondition = (train_df['KitchenSquare'] < KitchenSquare_min) | (train_df['KitchenSquare'] > quantile975)\nadd_outlier_label_feature(condition, 'KitchenSquare_outlier')\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df.head()","8f3263c1":"# \u0417\u0430\u043c\u0435\u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ntrain_df.loc[train_df['KitchenSquare'] < KitchenSquare_min, 'KitchenSquare'] = KitchenSquare_min\ntrain_df.loc[train_df['KitchenSquare'] > quantile975, 'KitchenSquare'] = train_df['KitchenSquare'].median()\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df[train_df['KitchenSquare_outlier'] == 1]","bda8ec02":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nplot_feature_hist('KitchenSquare')","8661ec3a":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ntrain_df['KitchenSquare'].describe()","5b61899b":"train_df['KitchenSquare'].value_counts()","19729e4d":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0434\u043b\u044f Square\nplot_feature_hist('Square', ylog=True)","ca1f2003":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u0434\u043b\u044f Square\ntrain_df['Square'].describe()","f0aafa68":"quantile025, quantile975 = get_and_print_quantile('Square')","3306b612":"train_df[train_df['Square'] > quantile975]","bdce776c":"train_df[train_df['Square'] > 250]","c8486aeb":"Square_max = 250","0607eb5a":"train_df[train_df['Square'] < quantile025]","1149b659":"train_df[train_df['Square'] < 20]","2a807627":"train_df[train_df['Square'] < 15]","5aaaf609":"Square_min = 15","e9d54ffe":"# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\ncondition = (train_df['Square'] < Square_min) | (train_df['Square'] > Square_max)\nadd_outlier_label_feature(condition, 'Square_outlier')\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df[condition]","87e89c8f":"# \u0417\u0430\u043c\u0435\u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ntrain_df.loc[condition, 'Square'] = train_df['Square'].median()\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df[train_df['Square_outlier'] == 1]","e90f3162":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nplot_feature_hist('Square', ylog=True)","fa0d12a5":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ntrain_df['Square'].describe()","8c1108bb":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0434\u043b\u044f LifeSquare\nplot_feature_hist('LifeSquare', ylog=True)","edb9ebea":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u0434\u043b\u044f LifeSquare\ntrain_df['LifeSquare'].describe()","1c580a55":"# \u0412\u044b\u0432\u043e\u0434 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\ntrain_df['LifeSquare'].isna().sum()","883f531e":"# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u043a\u0438 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\ntrain_df['LifeSquare_nan'] = train_df['LifeSquare'].isna() * 1\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df.head()","53b5e635":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0441\u0435\u0440\u0438\u0438 \u0441 \u0440\u0430\u0437\u043d\u043e\u0441\u0442\u044f\u043c\u0438 \u043c\u0435\u0436\u0434\u0443 Square \u0438 LifeSquare + KitchenSquare\nadd_square_series = train_df['Square'] - train_df['LifeSquare'] - train_df['KitchenSquare']\n\n# \u0412\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0434\u0438\u0430\u043d\u044b \u044d\u0442\u0438\u0445 \u0440\u0430\u0437\u043d\u043e\u0441\u0442\u0435\u0439\nadd_square_median = add_square_series[(add_square_series > 0) & (~add_square_series.isna())].median()\n\n# \u0417\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0434\u043b\u044f LifeSquare \u043f\u043e \u0444\u043e\u0440\u043c\u0443\u043b\u0435\ncondition = (train_df['LifeSquare'].isna()) & (~train_df['Square'].isna()) & (~train_df['KitchenSquare'].isna())\ntrain_df.loc[condition, 'LifeSquare'] = train_df.loc[condition, 'Square'] - train_df.loc[condition, 'KitchenSquare'] - add_square_median\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df[train_df['LifeSquare_nan'] == 1]","5b0e74a6":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\nplot_feature_hist('LifeSquare', ylog=True)","f664297a":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\ntrain_df['LifeSquare'].describe()","133af541":"train_df['LifeSquare'].hist(figsize=(10, 10), bins=100, grid=False)\nplt.xlim([0, 250])","252ae182":"quantile025, quantile975 = get_and_print_quantile('LifeSquare')","80a21f40":"train_df[train_df['LifeSquare'] > 150]","54701110":"train_df[train_df['LifeSquare'] > 250]","4349f414":"LifeSquare_max = 250","131d7547":"train_df[train_df['LifeSquare'] < quantile025]","056f2bb1":"train_df[train_df['LifeSquare'] < 10]","35fd361e":"LifeSquare_min = 10","1dd73baf":"# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\ncondition = (train_df['LifeSquare'] < LifeSquare_min) | (train_df['LifeSquare'] > LifeSquare_max)\nadd_outlier_label_feature(condition, 'LifeSquare_outlier')\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df[condition]","c5cf1bce":"# \u0417\u0430\u043c\u0435\u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ntrain_df.loc[condition, 'LifeSquare'] = train_df['LifeSquare'].median()\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df[train_df['LifeSquare_outlier'] == 1]","ab19c3e8":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nplot_feature_hist('LifeSquare', ylog=True)","d9b2785a":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ntrain_df['LifeSquare'].describe()","69741d47":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0434\u043b\u044f HouseFloor\nplot_feature_hist('HouseFloor', ylog=True)","b0f5a256":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u0434\u043b\u044f HouseFloor\ntrain_df['HouseFloor'].describe()","a589e36f":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\ntrain_df['HouseFloor'].sort_values().unique()","9bbe4961":"train_df[train_df['HouseFloor'] == 0]","9a0be92d":"train_df[train_df['HouseFloor'] > 90]","bc446e18":"HouseFloor_max = 95","cd76d2a8":"# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\ncondition = (train_df['HouseFloor'] == 0) | (train_df['HouseFloor'] > HouseFloor_max)\nadd_outlier_label_feature(condition, 'HouseFloor_outlier')\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df[condition]","01ff4dc5":"# \u0417\u0430\u043c\u0435\u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ntrain_df.loc[condition, 'HouseFloor'] = train_df['HouseFloor'].median()\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df[train_df['HouseFloor_outlier'] == 1]","dd7734d1":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nplot_feature_hist('HouseFloor', ylog=True)","86183b5d":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ntrain_df['HouseFloor'].describe()","08c01cbe":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\ntrain_df['HouseFloor'].sort_values().unique()","681f87ff":"train_df['HouseFloor'].value_counts()","7a758d36":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0434\u043b\u044f Floor\nplot_feature_hist('Floor', ylog=True)","2db9d7b8":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u0434\u043b\u044f Floor\ntrain_df['Floor'].describe()","8c3e5897":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\ntrain_df['Floor'].sort_values().unique()","05a3c021":"train_df['Floor'].value_counts()","71ef8ebd":"(train_df['Floor'] > train_df['HouseFloor']).sum()","ba1fee1d":"# \u0418\u043d\u0434\u0435\u043a\u0441\u044b \u0441\u0442\u0440\u043e\u043a, \u0433\u0434\u0435 Floor > HouseFloor\nfloor_outliers = train_df.loc[train_df['Floor'] > train_df['HouseFloor']].index\nfloor_outliers","11633c8a":"train_df.loc[floor_outliers]","55772905":"# \u0414\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 HouseFloor_outlier \u043d\u043e\u0432\u044b\u043c\u0438 \u043c\u0435\u0442\u043a\u0430\u043c\u0438 \u043e \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u0445\ntrain_df.loc[floor_outliers, 'HouseFloor_outlier'] = 1","a1e61ff3":"random.seed(100)\n\n# \u0417\u0430\u043c\u0435\u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u044d\u0442\u0430\u0436 \u043a\u0432\u0430\u0440\u0442\u0438\u0440\u044b \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u043c \u0446\u0435\u043b\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 [1, HouseFloor)\ntrain_df.loc[floor_outliers, 'Floor'] = train_df.loc[floor_outliers, 'HouseFloor'].apply(lambda x: random.randint(1, x))\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df.loc[floor_outliers]","c84a1a2b":"(train_df['Floor'] > train_df['HouseFloor']).sum()","5b419f1a":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nplot_feature_hist('Floor', ylog=True)","5ed6abca":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ntrain_df['Floor'].describe()","3dbd8fdc":"train_df['Floor'].value_counts()","0337c2c5":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0434\u043b\u044f HouseYear\nplot_feature_hist('HouseYear', ylog=True)","4bdc6587":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u0434\u043b\u044f HouseYear\ntrain_df['HouseYear'].describe()","3be8506d":"train_df['HouseYear'].value_counts()","d72d20f1":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\ntrain_df['HouseYear'].sort_values().unique()","0993bbac":"# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\ncurrent_year = datetime.now().year\ncondition = train_df['HouseYear'] > datetime.now().year\nadd_outlier_label_feature(condition, 'HouseYear_outlier')\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df[condition]","65cc9a07":"# \u0417\u0430\u043c\u0435\u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ntrain_df.loc[condition, 'HouseYear'] = current_year\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df[train_df['HouseYear_outlier'] == 1]","2788ae99":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nplot_feature_hist('HouseYear', ylog=True)","9aab282c":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ntrain_df['HouseYear'].describe()","4169206b":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0434\u043b\u044f Healthcare_1\nplot_feature_hist('Healthcare_1', ylog=True)","ac51c3c2":"# \u0412\u044b\u0432\u043e\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a \u0434\u043b\u044f Healthcare_1\ntrain_df['Healthcare_1'].describe()","c9bd93d7":"# \u0412\u044b\u0432\u043e\u0434 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\ntrain_df['Healthcare_1'].isna().sum()","d614557d":"# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u043a\u0438 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\ntrain_df['Healthcare_1_nan'] = train_df['Healthcare_1'].isna() * 1\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df.head()","9446fad9":"# \u0412\u044b\u0432\u043e\u0434 \u0432\u0441\u0435\u0445 \u043d\u043e\u043c\u0438\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\ntrain_df.select_dtypes(include='object').columns.tolist()","1102f459":"train_df['DistrictId'].value_counts()","65cc06d2":"train_df['Ecology_2'].value_counts()","913e3c47":"train_df['Ecology_3'].value_counts()","c19ee6bd":"train_df['Shops_2'].value_counts()","9b946799":"plt.figure(figsize=(20, 15))\n\nsns.set(font_scale=1.4)\n\n# \u0412\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u0438 \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043c\u0430\u0442\u0440\u0438\u0446\u044b \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438\ncorr_matrix = train_df.corr()\ncorr_matrix = np.round(corr_matrix, 2)\n\n# \u0417\u0430\u043d\u0443\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438 \u043c\u0435\u043d\u044c\u0448\u0435 0.3, \u0447\u0442\u043e\u0431\u044b \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0430\u043c\u044b\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435\ncorr_matrix[np.abs(corr_matrix) < 0.3] = 0\n\nsns.heatmap(corr_matrix, annot=True, linewidths=.5, cmap='coolwarm')\n\nplt.title('Correlation matrix')\nplt.show()","20e66870":"grid = sns.jointplot(train_df['Social_1'], train_df['Social_2'], kind='reg')\ngrid.fig.set_figwidth(8)\ngrid.fig.set_figheight(8)\n\nplt.show()","64bc3982":"grid = sns.jointplot(train_df['Rooms'], train_df['Price'], kind='reg')\ngrid.fig.set_figwidth(8)\ngrid.fig.set_figheight(8)\n\nplt.show()","d036813d":"grid = sns.jointplot(train_df['Square'], train_df['Price'], kind='reg')\ngrid.fig.set_figwidth(8)\ngrid.fig.set_figheight(8)\n\nplt.show()","df295483":"class DataPreprocessing:\n    \"\"\"\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\"\"\"\n    \n    def __init__(self):\n        \"\"\"\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043b\u0430\u0441\u0441\u0430\"\"\"\n        self.medians = None\n        self.modas = None\n        self.kitchen_square_quantile975 = None\n        self.add_square_median = None\n    \n    def fit(self, X):\n        \"\"\"\u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\"\"\"\n        self.medians = X.median()\n        self.modas = X.mode().iloc[0]\n        self.kitchen_square_quantile975 = X['KitchenSquare'].quantile(.975)\n        \n        # \u0412\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u0434\u043e\u0431\u0430\u0432\u043e\u0447\u043d\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u043e\u0442 \u043e\u0431\u0449\u0435\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u0438, \u043a\u0443\u0434\u0430 \u043d\u0435 \u0432\u0445\u043e\u0434\u0438\u0442 \u0436\u0438\u043b\u0430\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u0438 \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043a\u0443\u0445\u043d\u0438\n        add_square_series = X['Square'] - X['LifeSquare'] - X['KitchenSquare']\n        self.add_square_median = add_square_series[(add_square_series > 0) & (~add_square_series.isna())].median()\n        \n        self.num_features = ['Rooms', 'KitchenSquare', 'Square', 'LifeSquare', 'HouseFloor', 'Floor', 'HouseYear', 'Healthcare_1']\n        self.cat_features = ['DistrictId', 'Ecology_2', 'Ecology_3', 'Shops_2']\n    \n    def transform(self, X):\n        \"\"\"\u0422\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445\"\"\"\n        \n        def add_outlier_label_feature(outlier_condition, outlier_label_feature_name):\n            X[outlier_label_feature_name] = 0\n            X.loc[condition, outlier_label_feature_name] = 1\n        \n        # Rooms\n        Rooms_max = 6\n        condition = (X['Rooms'] == 0) | (X['Rooms'] >= Rooms_max)\n        add_outlier_label_feature(condition, 'Rooms_outlier')\n\n        X.loc[X['Rooms'] == 0, 'Rooms'] = 1\n        X.loc[X['Rooms'] >= Rooms_max, 'Rooms'] = self.medians['Rooms']\n        \n        # KitchenSquare\n        KitchenSquare_min = 3\n        condition = (X['KitchenSquare'] < KitchenSquare_min) | (X['KitchenSquare'] > self.kitchen_square_quantile975)\n        add_outlier_label_feature(condition, 'KitchenSquare_outlier')\n        \n        X.loc[X['KitchenSquare'] < KitchenSquare_min, 'KitchenSquare'] = KitchenSquare_min\n        X.loc[X['KitchenSquare'] > self.kitchen_square_quantile975, 'KitchenSquare'] = self.medians['KitchenSquare']\n        \n        # Square\n        Square_min = 15\n        Square_max = 250\n        condition = (X['Square'] < Square_min) | (X['Square'] > Square_max)\n        add_outlier_label_feature(condition, 'Square_outlier')\n        \n        X.loc[condition, 'Square'] = self.medians['Square']\n        \n        # LifeSquare\n        # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\n        X['LifeSquare_nan'] = X['LifeSquare'].isna() * 1\n        \n        condition = (X['LifeSquare'].isna()) & (~X['Square'].isna()) & (~X['KitchenSquare'].isna())\n        X.loc[condition, 'LifeSquare'] = X.loc[condition, 'Square'] - X.loc[condition, 'KitchenSquare'] - self.add_square_median\n        \n        # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\n        LifeSquare_min = 10\n        LifeSquare_max = 250\n        condition = (X['LifeSquare'] < LifeSquare_min) | (X['LifeSquare'] > LifeSquare_max)\n        add_outlier_label_feature(condition, 'LifeSquare_outlier')\n        \n        X.loc[condition, 'LifeSquare'] = self.medians['LifeSquare']\n        \n        # HouseFloor\n        HouseFloor_max = 95\n        condition = (X['HouseFloor'] == 0) | (X['HouseFloor'] > HouseFloor_max)\n        add_outlier_label_feature(condition, 'HouseFloor_outlier')\n        \n        X.loc[condition, 'HouseFloor'] = self.medians['HouseFloor']\n        \n        # Floor\n        floor_outliers = X.loc[X['Floor'] > X['HouseFloor']].index\n        X.loc[floor_outliers, 'HouseFloor_outlier'] = 1\n        \n        random.seed(21)\n        X.loc[floor_outliers, 'Floor'] = X.loc[floor_outliers, 'HouseFloor'].apply(lambda x: random.randint(1, x))\n        \n        # HouseYear\n        current_year = datetime.now().year\n        condition = X['HouseYear'] > current_year\n        add_outlier_label_feature(condition, 'HouseYear_outlier')\n        \n        X.loc[condition, 'HouseYear'] = current_year\n        \n        # Healthcare_1\n        # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\n        X['Healthcare_1_nan'] = X['Healthcare_1'].isna() * 1\n        \n        X[self.num_features] = X[self.num_features].fillna(self.medians[self.num_features])\n        X[self.cat_features] = X[self.cat_features].fillna(self.modas[self.cat_features])\n        \n        return X","0b01ef8a":"binary_to_numbers = {'A': 0, 'B': 1}\n\n# \u0411\u0438\u043d\u0430\u0440\u043d\u043e\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\ntrain_df['Ecology_2'] = train_df['Ecology_2'].replace(binary_to_numbers)\ntrain_df['Ecology_3'] = train_df['Ecology_3'].replace(binary_to_numbers)\ntrain_df['Shops_2'] = train_df['Shops_2'].replace(binary_to_numbers)\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ntrain_df[['Ecology_2', 'Ecology_3', 'Shops_2']]","ac026c31":"# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b DistrictId \u0438 DistrictSize - \u0447\u0438\u0441\u043b\u043e \u043a\u0432\u0430\u0440\u0442\u0438\u0440 \u0432 \u044d\u0442\u043e\u043c \u0440\u0430\u0439\u043e\u043d\u0435\ndistrict_size = train_df['DistrictId'].value_counts().reset_index().rename(columns={'index':'DistrictId', 'DistrictId':'DistrictSize'})\ndistrict_size.head()","0bc8b596":"# \u041f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043a \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435\ntrain_df = train_df.merge(district_size, on='DistrictId', how='left')\ntrain_df.head()","386395f1":"(train_df['DistrictSize'] > 100).value_counts()","04b90987":"# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 IsDistrictLarge\ntrain_df['IsDistrictLarge'] = (train_df['DistrictSize'] > 100).astype(int)\ntrain_df.head()","5ece80ba":"# \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e DistrictId \u0438 Rooms \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0434\u0438\u0430\u043d\u044b \u0446\u0435\u043d\u044b \u043f\u043e \u0433\u0440\u0443\u043f\u043f\u0435\nmed_price_by_district = train_df.groupby(['DistrictId', 'Rooms'], as_index=False).agg({'Price':'median'}).rename(columns={'Price':'MedPriceByDistrict'})\nmed_price_by_district.head()","1af8fa4b":"# \u041f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043a \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435\ntrain_df = train_df.merge(med_price_by_district, on=['DistrictId', 'Rooms'], how='left')\ntrain_df.head()","d733d95a":"# \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e Floor \u0438 HouseYear \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0434\u0438\u0430\u043d\u044b \u0446\u0435\u043d\u044b \u043f\u043e \u0433\u0440\u0443\u043f\u043f\u0435\nmed_price_by_floor_year = train_df.groupby(['Floor', 'HouseYear'], as_index=False).agg({'Price':'median'}).rename(columns={'Price':'MedPriceByFloorYear'})\nmed_price_by_floor_year.head()","46ba103a":"# \u041f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043a \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435\ntrain_df = train_df.merge(med_price_by_floor_year, on=['Floor', 'HouseYear'], how='left')\ntrain_df.head()","83a4c8be":"class FeatureGenerator():\n    \"\"\"\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u0444\u0438\u0447\"\"\"\n    \n    def __init__(self):\n        self.binary_to_numbers = None\n        self.district_size = None\n        self.med_price_by_district = None\n        self.med_price_by_floor_year = None\n        self.med_price_by_district_median = None\n        self.med_price_by_floor_year_median = None\n        self.district_size_mode = None\n    \n    def fit(self, X, y=None):\n        # Binary features\n        self.binary_to_numbers = {'A': 0, 'B': 1}\n        \n        # DistrictSize\n        self.district_size = X['DistrictId'].value_counts().reset_index().rename(columns={'index':'DistrictId', 'DistrictId':'DistrictSize'})\n        self.district_size_mode = self.district_size['DistrictSize'].mode()[0]\n        \n        # Target encoding\n        if y is not None:\n            X_copy = X.copy()\n            X_copy['Price'] = y.values\n\n            # MedPriceByDistrict\n            self.med_price_by_district = X_copy.groupby(['DistrictId', 'Rooms'], as_index=False).agg({'Price':'median'}).rename(columns={'Price':'MedPriceByDistrict'})\n            self.med_price_by_district_median = self.med_price_by_district['MedPriceByDistrict'].median()\n            \n            # MedPriceByFloorYear \n            self.med_price_by_floor_year = X_copy.groupby(['Floor', 'HouseYear'], as_index=False).agg({'Price':'median'}).rename(columns={'Price':'MedPriceByFloorYear'})\n            self.med_price_by_floor_year_median = self.med_price_by_floor_year['MedPriceByFloorYear'].median()\n    \n    def transform(self, X):\n        # Binary features\n        X['Ecology_2'] = X['Ecology_2'].map(self.binary_to_numbers)\n        X['Ecology_3'] = X['Ecology_3'].map(self.binary_to_numbers)\n        X['Shops_2'] = X['Shops_2'].map(self.binary_to_numbers)\n        \n        # DistrictSize\n        X = X.merge(self.district_size, on='DistrictId', how='left')\n        X['DistrictSize'].fillna(self.district_size_mode, inplace=True)\n        \n        X['IsDistrictLarge'] = (X['DistrictSize'] > 100).astype(int)\n        \n        # Target encoding\n        # MedPriceByDistrict\n        if self.med_price_by_district is not None:\n            X = X.merge(self.med_price_by_district, on=['DistrictId', 'Rooms'], how='left')\n            X['MedPriceByDistrict'].fillna(self.med_price_by_district_median, inplace=True)\n        \n        # MedPriceByFloorYear\n        if self.med_price_by_floor_year is not None:\n            X = X.merge(self.med_price_by_floor_year, on=['Floor', 'HouseYear'], how='left')\n            X['MedPriceByFloorYear'].fillna(self.med_price_by_floor_year_median, inplace=True)\n        \n        return X","09ea470c":"# \u0412\u044b\u0432\u043e\u0434 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\ntrain_df.columns.tolist()","947f7354":"# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0442\u0430\u043a\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u0433\u0434\u0435 Healthcare_1 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\nX = train_df[~train_df['Healthcare_1'].isna()].drop(columns=['Id', 'DistrictId', 'Healthcare_1', 'Price'])\nX.head()","ad277167":"# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 - \u043f\u0440\u0438\u0437\u043d\u0430\u043a Healthcare_1 \u0431\u0435\u0437 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\ny = train_df.loc[~train_df['Healthcare_1'].isna(), 'Healthcare_1']\ny.head()","8886c742":"# \u0420\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0435 \u043d\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u044b\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.33, shuffle=True, random_state=21)\nX_train.shape, X_valid.shape","658218c2":"# \u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438\nmodel = RandomForestRegressor(criterion='mse',\n                              max_depth=10,\n                              min_samples_leaf=10,\n                              random_state=21, \n                              n_estimators=100)\n\nmodel.fit(X_train, y_train)","b6ab0043":"# \u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f\ny_train_preds = model.predict(X_train)\ny_valid_preds = model.predict(X_valid)\n\nevaluate_preds(y_train, y_train_preds, y_valid, y_valid_preds)","05ce7859":"class HealthcareFiller():\n    \"\"\"\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 Healthcare_1\"\"\"\n    \n    def __init__(self):\n        self.model = RandomForestRegressor(criterion='mse',\n                                           max_depth=10,\n                                           min_samples_leaf=10,\n                                           random_state=21, \n                                           n_estimators=100)\n        self.feature_names = ['Rooms', 'Square', 'LifeSquare', 'KitchenSquare', 'Floor', 'HouseFloor', 'HouseYear', \n                              'Ecology_1', 'Ecology_2', 'Ecology_3', 'Social_1', 'Social_2', 'Social_3', 'Helthcare_2', \n                              'Shops_1', 'Shops_2', 'Rooms_outlier', 'KitchenSquare_outlier', 'Square_outlier', \n                              'LifeSquare_nan', 'LifeSquare_outlier', 'HouseFloor_outlier', 'HouseYear_outlier', 'Healthcare_1_nan', \n                              'DistrictSize', 'IsDistrictLarge', 'MedPriceByDistrict', 'MedPriceByFloorYear']\n\n        self.target_name = 'Healthcare_1'\n    \n    def fit(self, X):\n        X_train = X[self.feature_names]\n        \n        # \u0414\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0432\u044b\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0438, \u0433\u0434\u0435 Healthcare_1 \u043d\u0435 \u0440\u0430\u0432\u0435\u043d NaN\n        X_train = X_train[X_train['Healthcare_1_nan'] == 0]\n        y_train = X.loc[X['Healthcare_1_nan'] == 0, self.target_name]\n        self.model.fit(X_train, y_train)\n    \n    def transform(self, X):\n        X_preds = X[self.feature_names]\n        \n        # \u0414\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0432\u044b\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0438, \u0433\u0434\u0435 Healthcare_1 = NaN\n        X_preds = X_preds[X_preds['Healthcare_1_nan'] == 1]\n        \n        y_preds = self.model.predict(X_preds)\n        \n        # \u0417\u0430\u043c\u0435\u043d\u0430 NaN-\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0434\u043b\u044f Healthcare_1\n        X.loc[X['Healthcare_1_nan'] == 1, self.target_name] = y_preds\n        \n        return X","7b5acd03":"# \u0412\u044b\u0432\u043e\u0434 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\ntrain_df.columns.tolist()","322e032e":"feature_names = ['Rooms', 'Square', 'LifeSquare', 'KitchenSquare', 'Floor', 'HouseFloor', 'HouseYear',\n                 'Ecology_1', 'Ecology_2', 'Ecology_3', 'Social_1', 'Social_2', 'Social_3',\n                 'Healthcare_1', 'Helthcare_2', 'Shops_1', 'Shops_2']\n\nnew_feature_names = ['KitchenSquare_outlier', 'Square_outlier', 'LifeSquare_nan', 'LifeSquare_outlier',\n                     'HouseFloor_outlier', 'Healthcare_1_nan', 'DistrictSize',\n                     'IsDistrictLarge', 'MedPriceByFloorYear']\n\ntarget_name = 'Price'","3663f54c":"# \u0421\u0447\u0438\u0442\u044b\u0432\u0430\u043d\u0438\u0435 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0433\u043e \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u043e\u0432\ntrain_df = pd.read_csv(TRAIN_DATASET_PATH)\ntest_df = pd.read_csv(TEST_DATASET_PATH)\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0438 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\nX = train_df.drop(columns=target_name)\ny = train_df[target_name]","06188f07":"# \u0420\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0435 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u043d\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u044b\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.33, shuffle=True, random_state=21)","7e8d17d4":"# \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u0438 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0432\u044b\u0431\u043e\u0440\u043e\u043a\npreprocessor = DataPreprocessing()\npreprocessor.fit(X_train)\n\nX_train = preprocessor.transform(X_train)\nX_valid = preprocessor.transform(X_valid)\ntest_df = preprocessor.transform(test_df)\n\nX_train.shape, X_valid.shape, test_df.shape","20aab8dd":"# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0432\u043e \u0432\u0441\u0435 \u0432\u044b\u0431\u043e\u0440\u043a\u0438\nfeatures_gen = FeatureGenerator()\nfeatures_gen.fit(X_train, y_train)\n\nX_train = features_gen.transform(X_train)\nX_valid = features_gen.transform(X_valid)\ntest_df = features_gen.transform(test_df)\n\nX_train.shape, X_valid.shape, test_df.shape","2b18e0f1":"# \u0417\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435 Healthcare_1 \u0432\u043e \u0432\u0441\u0435\u0445 \u0432\u044b\u0431\u043e\u0440\u043a\u0430\u0445\nfiller = HealthcareFiller()\nfiller.fit(X_train)\n\nX_train = filler.transform(X_train)\nX_valid = filler.transform(X_valid)\ntest_df = filler.transform(test_df)\n\nX_train.shape, X_valid.shape, test_df.shape","d25e01ad":"# \u041e\u0442\u0431\u043e\u0440 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0438 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f\nX_train = X_train[feature_names + new_feature_names]\nX_valid = X_valid[feature_names + new_feature_names]\ntest_df = test_df[feature_names + new_feature_names]\n\nX_train.shape, X_valid.shape, test_df.shape","cda44bb3":"# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430, \u0447\u0442\u043e \u043d\u0435\u0442 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0432\u043e \u0432\u0441\u0435\u0445 \u0432\u044b\u0431\u043e\u0440\u043a\u0430\u0445\nX_train.isna().sum().sum(), X_valid.isna().sum().sum(), test_df.isna().sum().sum()","e87cfab1":"# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\ncb_model = CatBoostRegressor(logging_level='Silent')\n\n# \u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435\ncb_model.fit(X_train, y_train, verbose=False)","ae261939":"# \u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u043d\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0430\u0445\ny_train_preds = cb_model.predict(X_train)\ny_valid_preds = cb_model.predict(X_valid)\n\n# \u0412\u044b\u0432\u043e\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432\nevaluate_preds(y_train, y_train_preds, y_valid, y_valid_preds)","ee21faa9":"# \u0412\u044b\u0432\u043e\u0434 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e \u0432\u0430\u0436\u043d\u043e\u0441\u0442\u0438\nfeature_importances = pd.DataFrame(zip(X_train.columns, cb_model.feature_importances_), \n                                   columns=['feature_name', 'importance'])\n\nfeature_importances.sort_values(by='importance', ascending=False)","8e182ad3":"cv_score = cross_val_score(cb_model, X_train, y_train, scoring='r2', cv=KFold(n_splits=3, shuffle=True, random_state=21))\ncv_score","8c0bf99f":"cv_score.mean()","4a212e32":"# search_model = CatBoostRegressor()\n# grid = {'learning_rate': [0.03, 0.1],\n#         'depth': [4, 6, 10],\n#         'l2_leaf_reg': [1, 3, 5, 7, 9],\n#         'logging_level':['Silent'],\n#         'random_seed': [42]\n#        }\n\n# gs = GridSearchCV(search_model, grid, \n#                   scoring='r2',\n#                   cv=KFold(n_splits=5,\n#                            random_state=21, \n#                            shuffle=True),\n#                   n_jobs=-1\n#                   )\n\n# gs.fit(X_train, y_train)\n# gs.best_params_","6d3195a9":"test_df.shape","7ed36de2":"test_df","84d629c4":"# \u0421\u0447\u0438\u0442\u044b\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043e\u0447\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430\nsubmit = pd.read_csv('\/kaggle\/input\/real-estate-price-prediction-moscow\/sample_submission.csv')\nsubmit.head()","7923dc71":"# \u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435\npredictions = cb_model.predict(test_df)\npredictions","26c439a8":"# \u0417\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043e\u0447\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u0446\u0435\u043d\u044b\nsubmit['Price'] = predictions\nsubmit.head()","5c5c749a":"# \u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0432 \u0444\u0430\u0439\u043b\nsubmit.to_csv('catboost_submit.csv', index=False)","d495dee7":"\u0415\u0449\u0435 \u0440\u0430\u0437 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0438 \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438.","960d7f00":"\u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u044b.","4dbd001a":"\u0412\u044b\u0432\u0435\u0434\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e 0.","d72d22b8":"\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f HouseFloor = 0 \u0438 \u0431\u043e\u043b\u044c\u0448\u0435 HouseFloor_max \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439.","9737fe63":"\u0412\u044b\u0431\u0435\u0440\u0435\u043c \u0432\u0441\u0435 \u0432\u0435\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u0434\u043b\u044f \u043d\u0438\u0445 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0434\u043b\u044f \u043d\u0438\u0445 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b.","fd7d0a26":"\u0420\u0430\u0437\u043d\u0438\u0446\u044b \u0441 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u043c \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c \u043d\u0435\u0442.","bdfc6a86":"# \u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435","b1c7cde4":"\u0415\u0441\u0442\u044c \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, min = 1.136.\n\n\u0422\u0430\u043a\u0436\u0435 \u0435\u0441\u0442\u044c \u043f\u043e\u0434\u043e\u0437\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0435 200.","006e51f4":"# \u041e\u0442\u0431\u043e\u0440 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 <a class='anchor' id='features_select'>","2837c9c5":"\u0418\u0441\u0445\u043e\u0434\u044f \u0438\u0437 \u0432\u0438\u0434\u0430 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b, \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 250. ","907d7340":"\u042d\u0442\u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0447\u0435\u0440\u0435\u0437 \u0441\u0435\u0431\u044f - \u0447\u0435\u0440\u0435\u0437 value_counts, \u0442.\u0435. \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0447\u0430\u0441\u0442\u043e\u0442\u043d\u043e\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435. \u041f\u043e\u043b\u0443\u0447\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a DistrictSize - \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u043a\u0432\u0430\u0440\u0442\u0438\u0440 \u0432 \u044d\u0442\u043e\u043c \u0440\u0430\u0439\u043e\u043d\u0435.","edda3905":"### \u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438<a class='anchor' id='cat_features'>","63abb43f":"\u0422\u0430\u043a\u0436\u0435 \u0435\u0441\u0442\u044c \u043e\u0447\u0435\u043d\u044c \u0441\u0438\u043b\u044c\u043d\u0430\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u044f \u043d\u0435\u043f\u043e\u043d\u044f\u0442\u043d\u044b\u043c\u0438 Social_1 \u0438 Social_2.\n\n\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438 \u044d\u0442\u0438\u0445 \u0434\u0432\u0443\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.","0387cbda":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u043b\u0435\u0432\u0443\u044e \u0433\u0440\u0430\u043d\u0438\u0446\u0443. \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435, \u0433\u0434\u0435 Square \u043c\u0435\u043d\u044c\u0448\u0435 \u043b\u0435\u0432\u043e\u0433\u043e \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u044f.","70750324":"\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043c\u0435\u043d\u044b \u0442\u0430\u043a\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435\u0442.","f00fe3a6":"1. [\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445](#load_data)\n2. [\u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432](#cast_data)\n3. [EDA \u0438 \u043f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445](#eda)\n    *  [\u0410\u043d\u0430\u043b\u0438\u0437 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439   ](#target_analysis)\n    *  [\u0410\u043d\u0430\u043b\u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432](#features_analysis) \n        *  [\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438](#num_features)\n            *  [Rooms](#rooms)\n            *  [KitchenSquare](#kitchen_square)    \n            *  [Square](#square)   \n            *  [LifeSquare](#life_square)\n            *  [HouseFloor](#house_floor)\n            *  [Floor](#floor)\n            *  [HouseYear](#house_year)\n            *  [Healthcare_1](#healthcare_1)\n        *  [\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438](#cat_features) \n            *  [DistrictId](#district_id)\n            *  [Ecology_2](#ecology_2)\n            *  [Ecology_3](#ecology_3)\n            *  [Shops_2](#shops_2)\n        *  [\u041c\u0430\u0442\u0440\u0438\u0446\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439](#correlation_matrix)\n    *  [\u0410\u043d\u0430\u043b\u0438\u0437 \u0432\u043b\u0438\u044f\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0430 \u0442\u0430\u0440\u0433\u0435\u0442](#feature_target_analysis)\n4. [\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 DataPreprocessing](#data_preprocessing_class)\n5. [\u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432](#feature_generation)\n    *  [Dummies](#dummies)\n    *  [DistrictSize, IsDistrictLarge](#district_size)\n    *  [MedPriceByDistrict](#med_price_by_district)\n    *  [MedPriceByFloorYear](#med_price_by_floor_year)\n6. [\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 FeatureGenerator](#feature_generator)\n7. [\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f Healthcare_1](#healthcare_1_model)\n8. [\u041e\u0442\u0431\u043e\u0440 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432](#features_select)\n9. [\u0420\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0435 \u043d\u0430 train \u0438 test](#train_test_split)\n10. [\u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438](#model)\n    * [\u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435](#fit_model)\n    * [\u041e\u0446\u0435\u043d\u043a\u0430 \u043c\u043e\u0434\u0435\u043b\u0438](#evaluate_model)\n    * [\u0412\u0430\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432](#feature_importance)\n    * [\u041a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f](#cv_model)\n    * [\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0441\u0435\u0442\u043a\u0435](#grid_search)\n11. [\u041f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435](#test_preds)","f8499b85":"\u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0442\u0430\u043a, \u0447\u0442\u043e \u043f\u0440\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u043f\u043e\u044f\u0432\u044f\u0442\u0441\u044f DistrictId, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 med_price_by_district. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0431\u0443\u0434\u0435\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439 MedPriceByDistrict.","3600e1f6":"**\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430**\n\n* **Id** - \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u043a\u0432\u0430\u0440\u0442\u0438\u0440\u044b\n* **DistrictId** - \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0440\u0430\u0439\u043e\u043d\u0430\n* **Rooms** - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442\n* **Square** - \u043f\u043b\u043e\u0449\u0430\u0434\u044c\n* **LifeSquare** - \u0436\u0438\u043b\u0430\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u044c\n* **KitchenSquare** - \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043a\u0443\u0445\u043d\u0438\n* **Floor** - \u044d\u0442\u0430\u0436\n* **HouseFloor** - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u0442\u0430\u0436\u0435\u0439 \u0432 \u0434\u043e\u043c\u0435\n* **HouseYear** - \u0433\u043e\u0434 \u043f\u043e\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u043e\u043c\u0430\n* **Ecology_1, Ecology_2, Ecology_3** - \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u043c\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u0438\n* **Social_1, Social_2, Social_3** - \u0441\u043e\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u043c\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u0438\n* **Healthcare_1, Helthcare_2** - \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u043c\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u0438, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0441 \u043e\u0445\u0440\u0430\u043d\u043e\u0439 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f\n* **Shops_1, Shops_2** - \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0441 \u043d\u0430\u043b\u0438\u0447\u0438\u0435\u043c \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u043e\u0432, \u0442\u043e\u0440\u0433\u043e\u0432\u044b\u0445 \u0446\u0435\u043d\u0442\u0440\u043e\u0432\n* **Price** - \u0446\u0435\u043d\u0430 \u043a\u0432\u0430\u0440\u0442\u0438\u0440\u044b","3c698eac":"\u0414\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438. \n\n\u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f, \u0442.\u043a. \u0434\u0430\u043b\u0435\u0435 \u043f\u0440\u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432\u044b\u044f\u0441\u043d\u0438\u043b\u043e\u0441\u044c, \u0447\u0442\u043e \u043e\u043d\u0438 \u043b\u0438\u0431\u043e \u0431\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u044b\u0435, \u043b\u0438\u0431\u043e \u0432\u0435\u0434\u0443\u0442 \u043a \u043f\u0435\u0440\u0435\u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044e. \u042d\u0442\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 **Rooms_outlier**, **HouseYear_outlier**, **MedPriceByDistrict**.","312f0d81":"# \u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f Healthcare_1 <a class='anchor' id='healthcare_1_model'>","cc71c53c":"## \u0410\u043d\u0430\u043b\u0438\u0437 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 <a class='anchor' id='target_analysis'>","e46aeb3f":"\u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u043f\u043e\u043b\u043d\u0435 \u0445\u043e\u0440\u043e\u0448\u0438\u0435. \u0421\u0434\u0432\u0438\u043d\u0435\u043c \u0433\u0440\u0430\u043d\u0438\u0446\u0443 \u0435\u0449\u0435 \u043b\u0435\u0432\u0435\u0435.","696b5179":"\u0418\u0437\u043e\u0431\u0440\u0430\u0437\u0438\u043c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0446\u0435\u043b\u0435\u0432\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 Rooms \u0438 Square, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0435\u0441\u0442\u044c \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0430\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c. ","00770196":"\u0418\u0437 \u0433\u0440\u0430\u0444\u0438\u043a\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0435\u0442, \u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0446\u0435\u043b\u0435\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u043d\u0443\u0436\u043d\u043e.","8ecee43f":"\u041c\u0435\u0442\u0440\u0438\u043a\u0438 \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f \u0434\u0440\u0443\u0433 \u043e\u0442 \u0434\u0440\u0443\u0433\u0430 \u043d\u0435 \u0441\u0438\u043b\u044c\u043d\u043e, \u0437\u043d\u0430\u0447\u0438\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u0430.","a0cb2050":"#### Ecology_3 <a class='anchor' id='ecology_3'>","eb95dc3d":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 <a class='anchor' id='feature_generation'>","97a17ca1":"#### Ecology_2 <a class='anchor' id='ecology_2'>","dca5da7d":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 <a class='anchor' id='model'>","dc43e02e":"\u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u044b.","fae92a57":"\u042d\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u0445\u043e\u0436\u0438 \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b - \u0431\u043e\u043b\u044c\u0448\u0438\u0435 LifeSquare \u043f\u0440\u0438 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0445 Square \u0438 \u043f\u0440\u0438 \u043d\u0438\u0437\u043a\u043e\u0439 \u0446\u0435\u043d\u0435. \u041f\u0443\u0441\u0442\u044c \u043f\u0440\u0430\u0432\u0430\u044f \u0433\u0440\u0430\u043d\u0438\u0446\u0430 \u0440\u0430\u0432\u043d\u0430 250.","1176ed8f":"\u0412\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0435\u0442.","2d88b563":"\u041f\u0440\u0438\u0437\u043d\u0430\u043a Healthcare_1 \u0438\u043c\u0435\u0435\u0442 \u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432, \u0438 \u043d\u0435\u043f\u043e\u043d\u044f\u0442\u043d\u043e \u043a\u0430\u043a \u0438\u0445 \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0442\u044c.\n\n\u0414\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043e\u0431\u0443\u0447\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c.","a919e37d":"# \u0420\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0435 \u043d\u0430 train \u0438 test <a class='anchor' id='train_test_split'>","f3e1c850":"\u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u044b.","48bf5273":"\u0414\u0430\u043d\u043d\u044b\u0435 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u044b\u0435. \u041e\u0447\u0435\u0432\u0438\u0434\u043d\u044b\u0445 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0435\u0442, \u043d\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0442\u0430\u043a, \u0447\u0442\u043e \u0432 \u0434\u0430\u043d\u043d\u044b\u0445 Floor > HouseFloor. \u0422.\u0435. \u044d\u0442\u0430\u0436, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0430 \u043a\u0432\u0430\u0440\u0442\u0438\u0440\u0430, \u0432\u044b\u0448\u0435, \u0447\u0435\u043c \u0432\u0441\u0435\u0433\u043e \u044d\u0442\u0430\u0436\u0435\u0439 \u0432 \u0434\u043e\u043c\u0435. \n\n\u0412\u044b\u0432\u0435\u0434\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0430\u043a\u0438\u0445 \u0441\u0442\u0440\u043e\u043a.","fe6b2717":"\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u043d\u0435 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430 (LifeSquare_min, LifeSquare_max) \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439.","b90a569a":"\u0415\u0449\u0435 \u0440\u0430\u0437 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0438 \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438.","a1553ffb":"### \u041c\u0430\u0442\u0440\u0438\u0446\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439 <a class='anchor' id='correlation_matrix'>","e5544b85":"#### KitchenSquare <a class='anchor' id='kitchen_square'>","315c30ba":"\u041f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u043d\u0435\u0442.","34d2b449":"\u0412\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0435\u0442.","37f550e2":"\u0412\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0435\u0442.","e40d12a0":"\u0418\u0441\u0441\u043b\u0435\u0434\u0443\u0435\u043c \u044d\u0442\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438.","0e444d44":"\u0422\u0435\u043f\u0435\u0440\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u044b. \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0431\u043e\u043b\u0435\u0435 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0443\u044e \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0443.","f84d2d04":"#### HouseYear <a class='anchor' id='house_year'>","5c4b42bc":"\u0415\u0449\u0435 \u0440\u0430\u0437 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0438 \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438.","7d4a42c8":"\u0415\u0449\u0435 \u0440\u0430\u0437 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0438 \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438.","276a7c1b":"## \u0412\u0430\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 <a class='anchor' id='feature_importance'>","a8ceb4fb":"### \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438<a class='anchor' id='num_features'>","76620991":"# \u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 DataPreprocessing <a class='anchor' id='data_preprocessing_class'>","d9211448":"\u0417\u0430\u043f\u0438\u0448\u0435\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0442\u0430\u043a\u0438\u0445 \u0441\u0442\u0440\u043e\u043a.","27a126e4":"\u041f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u043a \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u043c\u0443 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0443 \u043f\u043e DistrictId. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0442\u0430\u043a, \u0447\u0442\u043e \u043f\u0440\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u043f\u043e\u044f\u0432\u044f\u0442\u0441\u044f DistrictId, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 district_size. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0431\u0443\u0434\u0435\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043c\u043e\u0434\u043e\u0439 DistrictSize.","3b64e222":"\u0422\u0443\u0442 \u0442\u0430\u043a\u0436\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0435\u0434\u0438\u0430\u043d\u0443.","fbdd48de":"\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0434\u043b\u044f \u0442\u0430\u043a\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e\u0434\u043e\u0439\u0434\u0435\u0442 \u043c\u0435\u0434\u0438\u0430\u043d\u0430.","a9838d1f":"#### HouseFloor <a class='anchor' id='house_floor'>","cacd0bb2":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0430\u0432\u043e\u0433\u043e \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442 \u0438 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. \u0418\u0441\u0445\u043e\u0434\u044f \u0438\u0437 \u0432\u0438\u0434\u0430 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b, \u0438\u0441\u0441\u043b\u0435\u0434\u0443\u0435\u043c \u0441\u0440\u0430\u0437\u0443 \u043f\u0440\u0430\u0432\u0443\u044e \u0433\u0440\u0430\u043d\u0438\u0446\u0443, \u0440\u0430\u0432\u043d\u0443\u044e 150.","facd3c34":"\u0421\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f - \u043f\u043e\u0445\u043e\u0436\u0435 \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b. \u041f\u0443\u0441\u0442\u044c \u043b\u0435\u0432\u0430\u044f \u0433\u0440\u0430\u043d\u0438\u0446\u0430 \u0440\u0430\u0432\u043d\u0430 10.","0f7c572f":"\u0414\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f DistrcitId \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0447\u0430\u0441\u0442\u043e\u0442\u043d\u043e\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435.\n\n\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0440\u0430\u0439\u043e\u043d\u0430 DistrictId \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0432\u0430\u0440\u0442\u0438\u0440 \u0432 \u044d\u0442\u043e\u043c \u0440\u0430\u0439\u043e\u043d\u0435 \u0438 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 DistrictId \u0438 DistrictSize - \u0447\u0438\u0441\u043b\u043e \u043a\u0432\u0430\u0440\u0442\u0438\u0440 \u0432 \u044d\u0442\u043e\u043c \u0440\u0430\u0439\u043e\u043d\u0435.","3f50a5d9":"\u0412\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 **LifeSquare** \u0438 **Healthcare_1** \u0438\u043c\u0435\u044e\u0442 \u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0442\u0430\u043a\u0436\u0435 \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c.","7e79f1d2":"\u0420\u0430\u0437\u043d\u043e\u0441\u0442\u044c \u043c\u0435\u0442\u0440\u0438\u043a \u043e\u043a\u043e\u043b\u043e 16%. \u0417\u043d\u0430\u0447\u0438\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u043e\u0431\u0443\u0447\u0435\u043d\u0430.\n\n\u0418\u0437 \u0433\u0440\u0430\u0444\u0438\u043a\u0430 \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0432\u044b\u0432\u043e\u0434, \u0447\u0442\u043e \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u043f\u043b\u043e\u0445\u043e \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0446\u0435\u043d\u0443 \u0434\u043b\u044f \u043a\u0432\u0430\u0440\u0442\u0438\u0440 \u0441 \u043d\u0435\u0432\u044b\u0441\u043e\u043a\u043e\u0439 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c\u044e - \u0446\u0435\u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u0437\u0430\u0432\u044b\u0448\u0435\u043d\u043d\u043e\u0439.","eb6963b0":"\u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0438\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043f\u043e\u043d\u044f\u0442\u043d\u044b \u0438 \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u044b. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u043c\u0435\u0436\u0434\u0443 Rooms \u0438 Square \u0438\u043b\u0438 LifeSquare \u0438 Square, HouseFloor \u0438 Floor.\n\n\u0418\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u0430\u044f \u043f\u0440\u044f\u043c\u0430\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u043c\u0435\u0436\u0434\u0443 Shops1 \u0438 Social_3. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u044d\u0442\u043e \u043a\u0430\u043a-\u0442\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u043e\u0432 - \u0447\u0435\u043c \u0432\u044b\u0448\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c, \u0442\u0435\u043c \u0432\u044b\u0448\u0435 \u043d\u0435\u043a\u0438\u0439 \u0441\u043e\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c Social_3.\n\n\u0412\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f **Price** \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0441\u0438\u043b\u044c\u043d\u043e \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 **Rooms** \u0438 **Square**. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u044b \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043d\u0430 \u0438\u0445 \u043e\u0441\u043d\u043e\u0432\u0435.","85637b47":"\u0415\u0441\u0442\u044c \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 - 0 \u043a\u043e\u043c\u043d\u0430\u0442.\n\n\u0422\u0430\u043a\u0436\u0435 \u0435\u0441\u0442\u044c \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f - 6, 10, 19 \u043a\u043e\u043c\u043d\u0430\u0442.","43c7cd04":"## Dummies <a class='anchor' id='dummies'>","fe192b5a":"#### Floor <a class='anchor' id='floor'>","a4a4b4df":"\u0415\u0441\u0442\u044c \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 - 0, 1, 2 \u0438 \u0442.\u0434.\n\n\u0422\u0430\u043a\u0436\u0435 \u0435\u0441\u0442\u044c \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f - 1970, 2014.","dc430478":"\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430.","885ebde7":"\u0415\u0441\u0442\u044c \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, min = 0.37.\n\n\u0422\u0430\u043a\u0436\u0435 \u0435\u0441\u0442\u044c \u043f\u043e\u0434\u043e\u0437\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0435 250.","c517f56b":"# \u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 FeatureGenerator <a class='anchor' id='feature_generator'>","f6cb25bf":"#### Shops_2 <a class='anchor' id='shops_2'>","fe9b7ff1":"#### Healthcare_1 <a class='anchor' id='healthcare_1'>","6183b8c7":"#### LifeSquare <a class='anchor' id='life_square'>","4b9f643c":"\u041f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u043a \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u043c\u0443 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0443 \u043f\u043e Floor \u0438 HouseYear.","4ee45c64":"## \u041e\u0446\u0435\u043d\u043a\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 <a class='anchor' id='evaluate_model'>","08ee7cc7":"\u0417\u0434\u0435\u0441\u044c \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0433\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a: \n\nA \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u043d\u0430 0, \n\nB \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u043d\u0430 1.","aec4bb82":"#### Square <a class='anchor' id='square'>","e4e62f60":"\u041d\u0435\u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a DistrictId \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0438\u043c\u0435\u0435\u0442 \u0442\u0438\u043f int64, \u043e\u043d \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u043c. \u0415\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c.","8a1f1831":"\u042d\u0442\u043e \u0432\u0435\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u043e\u0434\u0430 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0441\u043c\u044b\u0441\u043b\u0430. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u043d\u0430 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0432\u043d\u0430 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439. \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0441\u0440\u0435\u0434\u043d\u0435\u0439 \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u044b \u0438 \u043c\u0435\u0434\u0438\u0430\u043d\u044b \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a\u0435 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f.","6c89e4da":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435.","4e240f65":"\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430. \u041f\u0440\u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430.","81fd7459":"\u041e\u0442\u043c\u0435\u0442\u0438\u043c \u0442\u0430\u043a\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435 HouseFloor_outlier.","ab5fed5a":"\u0411\u044b\u043b \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0441\u0435\u0442\u043a\u0435 \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438. \u0421\u0435\u0439\u0447\u0430\u0441 \u0432 \u0432\u0438\u0434\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0442.\u043a. \u0440\u0430\u0441\u0447\u0435\u0442 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043e\u0447\u0435\u043d\u044c \u0434\u043e\u043b\u0433\u043e.\n\n\n\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b:\n\ndepth=6, l2_leaf_reg=3, learning_rate=0.03.\n\n\u0422.\u0435. \u0442\u043e\u043b\u044c\u043a\u043e depth \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0441\u044f \u043d\u0435 \u0440\u0430\u0432\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.","4eae0f1f":"\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u044d\u0442\u0430\u0436\u0435\u0439 \u0432 \u041c\u043e\u0441\u043a\u0432\u0435 \u0440\u0430\u0432\u043d\u043e 95, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f 0, 99, 117 - \u044d\u0442\u043e \u0432\u044b\u0431\u0440\u043e\u0441\u044b. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u0430\u043a\u0438\u0435 \u044d\u0442\u0430\u0436\u0438 \u0434\u043b\u044f \u043a\u0432\u0430\u0440\u0442\u0438\u0440 \u0432 \u044d\u0442\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.","f5615275":"\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u043a\u0432\u0430\u0440\u0442\u0438\u0440 \u0432 \u044d\u0442\u043e\u043c \u0440\u0430\u0439\u043e\u043d\u0435 IsDistrictLarge. \u0413\u0440\u0430\u043d\u0438\u0446\u0443 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043c \u0440\u0430\u0432\u043d\u043e\u0439 100, \u0442.\u043a. \u043e\u043d\u0430 \u0434\u0435\u043b\u0438\u0442 \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f DistrictSize \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u043d\u0430 2 \u0447\u0430\u0441\u0442\u0438.","0b5f8178":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435, \u0433\u0434\u0435 Square \u0431\u043e\u043b\u044c\u0448\u0435 \u043f\u0440\u0430\u0432\u043e\u0433\u043e \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u044f.","75f1b98c":"\u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439 \u0438 \u0438\u0437\u043e\u0431\u0440\u0430\u0437\u0438\u043c \u0435\u0435 \u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438.","c746072e":"\u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0430\u0432\u043e\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c 97.5 \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u044c. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u043f\u0440\u0430\u0432\u043e\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439.\n\n\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 0 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u043d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442. \u0417\u0430\u0434\u0430\u0434\u0438\u043c \u0434\u043b\u044f \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0432\u043d\u043e\u0435 3. \u041c\u0435\u043d\u044c\u0448\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u043c\u0435\u043d\u0438\u043c 3.","0734d96a":"\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0435 200 - \u044d\u0442\u043e \u043d\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u044b.","832885b2":"\u0417\u0430\u043c\u0435\u043d\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043f\u043e \u0444\u043e\u0440\u043c\u0443\u043b\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c.\n\n\u0412\u044b\u0447\u0438\u0441\u043b\u0438\u043c \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e Square \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c LifeSquare + KitchenSquare. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0441\u0435\u0440\u0438\u044e \u0441 \u0440\u0430\u0437\u043d\u043e\u0441\u0442\u044f\u043c\u0438 \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u043c \u043c\u0435\u0434\u0438\u0430\u043d\u0443 add_square_median.\n\n\u041f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0434\u043b\u044f LifeSquare \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u043c \u043a\u0430\u043a Square - KitchenSquare - add_square_median.","f528c96a":"\u0414\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0447\u0435\u0440\u0435\u0437 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e.\n\n\u0421\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u0443\u0435\u043c \u043f\u043e Floor \u0438 HouseYear \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u043c \u043c\u0435\u0434\u0438\u0430\u043d\u0443 \u0446\u0435\u043d \u043a\u0432\u0430\u0440\u0442\u0438\u0440. \u042d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u043e\u0432\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 Floor \u0438 HouseYear.","a8ab12e6":"\u041d\u0435\u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a DistrictId \u0438\u043c\u0435\u0435\u0442 \u0442\u0438\u043f int64, \u043e\u043d \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u043c. \u0422\u0430\u043a\u0436\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a Id - \u044d\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438. \u0427\u0442\u043e\u0431\u044b \u043e\u043d\u0438 \u043d\u0435 \u043c\u0435\u0448\u0430\u043b\u0438 \u043f\u0440\u0438 \u0430\u043d\u0430\u043b\u0438\u0437\u0435 \u0432\u0435\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438\u0437\u043c\u0435\u043d\u0438\u043c \u0438\u0445 \u0442\u0438\u043f \u043d\u0430 str.","cf08345c":"\u0414\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0431\u044b\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438: **RandomForestRegressor**, **GradientBoostingRegressor**, **StackingRegressor** \u0438 **CatBoostRegressor**.\n\n\u0425\u0443\u0434\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 \u0438 \u043f\u043e \u043f\u0435\u0440\u0435\u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044e \u043f\u043e\u043a\u0430\u0437\u0430\u043b\u0430 \u043c\u043e\u0434\u0435\u043b\u044c RandomForestRegressor.\n\n\u0414\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 GradientBoostingRegressor, StackingRegressor \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0441\u044f \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439. \u0414\u043b\u044f GradientBoostingRegressor \u0431\u044b\u043b \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d \u043f\u043e\u0438\u0441\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043f\u043e \u0441\u0435\u0442\u043a\u0435.\n\n\u0421\u0430\u043c\u044b\u0439 \u043b\u0443\u0447\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u043e\u043a\u0430\u0437\u0430\u043b\u0430 \u043c\u043e\u0434\u0435\u043b\u044c **CatBoostRegressor** \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u0414\u043b\u044f \u044d\u0442\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0442\u0430\u043a\u0436\u0435 \u0431\u044b\u043b \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0441\u0435\u0442\u043a\u0435, \u043e\u0434\u043d\u0430\u043a\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043d\u0435 \u0443\u043b\u0443\u0447\u0448\u0438\u043b\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.","5db69c53":"\u0415\u0441\u0442\u044c \u0438 \u0445\u043e\u0440\u043e\u0448\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043d\u0435 \u043f\u043e\u0445\u043e\u0436\u0438\u0435 \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u0432\u0430\u0440\u0442\u0438\u0440\u044b \u0441 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u044c\u044e \u0438 \u043f\u043e \u043d\u0435\u0432\u044b\u0441\u043e\u043a\u043e\u0439 \u0446\u0435\u043d\u0435. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.","e1fafe6d":"\u041d\u0435\u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u043a\u0430\u043a \u0437\u0430\u0434\u0430\u0442\u044c \u0432\u0435\u0440\u0445\u043d\u044e\u044e \u0438 \u043d\u0438\u0436\u043d\u044e\u044e \u0433\u0440\u0430\u043d\u0438\u0446\u0443 \u0434\u043b\u044f \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u043c 2.5 \u0438 97.5 \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u044c.","09707e03":"\u0415\u0449\u0435 \u0440\u0430\u0437 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0438 \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438.","fc1451b7":"#### DistrictId <a class='anchor' id='district_id'>","51757fd6":"\u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0430\u0432\u043e\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043c 95.","d4df8e1e":"\u0418\u0437 \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c \u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 **Rooms**, **Square**, **LifeSquare**, **KitchenSquare**, **Floor**, **HouseFloor**, **HouseYear** \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0438\u043c\u0435\u044e\u0442 \u0432\u044b\u0431\u0440\u043e\u0441\u044b. \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u044d\u0442\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e.","f73f1b86":"\u0412\u044b\u0447\u0438\u0441\u043b\u0438\u043c \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u0438 \u0434\u043b\u044f \u043e\u0446\u0435\u043d\u043a\u0438 \u0433\u0440\u0430\u043d\u0438\u0446 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432.","ed3b4a72":"\u0412\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0435\u0442.","69cc6039":"\u0417\u0434\u0435\u0441\u044c \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0442\u0430\u043a \u0436\u0435, \u043a\u0430\u043a \u0434\u043b\u044f Ecology_2","72262631":"## \u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 <a class='anchor' id='fit_model'>","1c974d5a":"## \u0410\u043d\u0430\u043b\u0438\u0437 \u0432\u043b\u0438\u044f\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0430 \u0442\u0430\u0440\u0433\u0435\u0442 <a class='anchor' id='feature_target_analysis'>","d236c55b":"\u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u044b.","6d072f11":"\u0415\u0449\u0435 \u0440\u0430\u0437 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0438 \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438.","8634a6ca":"\u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0442\u0430\u043a, \u0447\u0442\u043e \u043f\u0440\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u043f\u043e\u044f\u0432\u044f\u0442\u0441\u044f DistrictId, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 med_price_by_floor_year. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0431\u0443\u0434\u0435\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439 MedPriceByFloorYear.","6a58ae05":"## DistrictSize, IsDistrictLarge <a class='anchor' id='district_size'>","d10566e5":"# EDA \u0438 \u043f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445<a class='anchor' id='eda'>","86a73484":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.","a0410f51":"#### Rooms <a class='anchor' id='rooms'>","4f34ad0a":"\u0421\u0440\u0435\u0434\u0438 \u0442\u0430\u043a\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0435\u0441\u0442\u044c \u0438 \u0445\u043e\u0440\u043e\u0448\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043d\u0435 \u043f\u043e\u0445\u043e\u0436\u0438\u0435 \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b. \u0422.\u0435. \u043a\u0432\u0430\u0440\u0442\u0438\u0440\u044b \u0441 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u044c\u044e \u0438 \u043f\u043e \u0432\u044b\u0441\u043e\u043a\u043e\u0439 \u0446\u0435\u043d\u0435. \u041a\u0432\u0430\u043d\u0442\u0438\u043b\u044c \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0430\u0432\u043e\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u043d\u0435 \u043f\u043e\u0434\u043e\u0439\u0434\u0435\u0442. ","f740bf2e":"\u0415\u0449\u0435 \u0440\u0430\u0437 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0438 \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438.","ec9bd430":"## MedPriceByDistrict <a class='anchor' id='med_price_by_district'>","91b715c3":"\u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u044b.","dece0455":"\u0417\u0434\u0435\u0441\u044c \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0442\u0430\u043a \u0436\u0435, \u043a\u0430\u043a \u0434\u043b\u044f Ecology_2","6462c59d":"\u0412\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a MedPriceByFloorYear \u043e\u043a\u0430\u0437\u0430\u043b\u0441\u044f \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c.","12a4e129":"\u0412\u044b\u0432\u0435\u0434\u0435\u043c \u0432\u0441\u0435 \u043d\u043e\u043c\u0438\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 - \u0442\u0438\u043f\u0430 object.","b3144157":"# \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445<a class='anchor' id='load_data'>","939dbb3f":"\u0422\u0430\u043a\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u043c \u0446\u0435\u043b\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c \u043e\u0442 1 \u0434\u043e HouseFloor. \u0417\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c random.seed \u0434\u043b\u044f \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438.","6b71e7e6":"\u0415\u0441\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438, \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0438\u0445. \u0412\u044b\u0432\u0435\u0434\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432.","195cd8b1":"# \u041f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 <a class='anchor' id='test_preds'>","759c5938":"\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0435\u0441\u0442\u044c \u043b\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u044b, \u043e\u0434\u043d\u0430\u043a\u043e \u0435\u0441\u0442\u044c \u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432.\n\n\u0412\u044b\u0432\u0435\u0434\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432.","fdb446fa":"\u0415\u0441\u0442\u044c \u0438 \u0445\u043e\u0440\u043e\u0448\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 - \u043a\u0432\u0430\u0440\u0442\u0438\u0440\u044b \u0441 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u044c\u044e \u0438 \u043f\u043e \u0432\u044b\u0441\u043e\u043a\u043e\u0439 \u0446\u0435\u043d\u0435. \u0421\u0434\u0432\u0438\u043d\u0435\u043c \u0433\u0440\u0430\u043d\u0438\u0446\u0443 \u0435\u0449\u0435 \u043f\u0440\u0430\u0432\u0435\u0435.","814dd985":"\u0414\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f Ecology_2, Ecology_3, Shops_2 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435.","345cde4f":"\u0414\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0447\u0435\u0440\u0435\u0437 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e.\n\n\u0421\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e DistrictId \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u043a\u043e\u043c\u043d\u0430\u0442 \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u043c \u043c\u0435\u0434\u0438\u0430\u043d\u0443 \u0446\u0435\u043d \u043a\u0432\u0430\u0440\u0442\u0438\u0440. \u042d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u043e\u0432\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 DistrictId \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043a\u043e\u043c\u043d\u0430\u0442.","0a57a073":"\u041f\u043b\u043e\u0449\u0430\u0434\u044c Square \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 2 \u043a\u043e\u043c\u043d\u0430\u0442\u0430\u043c, \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f Rooms >= 6 \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439.","0072f46d":"\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e\u0434\u0431\u0435\u0440\u043c \u0432\u0440\u0443\u0447\u043d\u0443\u044e.","3bda11be":"## \u041a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f <a class='anchor' id='cv_model'>","a40c03d2":"\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u0432 \u0432\u0438\u0434\u0443 \u043a\u0430\u0440\u0442\u0438\u0440\u0430-\u0441\u0442\u0443\u0434\u0438\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0431\u044b\u043b\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043e 0 \u043a\u043e\u043c\u043d\u0430\u0442. \u0422\u0430\u043a\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0437\u0430\u043c\u0435\u043d\u0438\u043c 1.","4143a4e1":"\u0412\u044b\u0432\u0435\u0434\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.","9a3b5abe":"\u041f\u043e\u0445\u043e\u0436\u0435 \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b - \u0431\u043e\u043b\u044c\u0448\u0430\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043f\u043e \u043d\u0438\u0437\u043a\u043e\u0439 \u0446\u0435\u043d\u0435. \u041f\u0443\u0441\u0442\u044c \u043f\u0440\u0430\u0432\u0430\u044f \u0433\u0440\u0430\u043d\u0438\u0446\u0430 \u0440\u0430\u0432\u043d\u0430 250.","57ef673a":"\u0415\u0449\u0435 \u0440\u0430\u0437 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0438 \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438.","2aadc340":"# \u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432<a class='anchor' id='cast_data'>","dabac62e":"\u0414\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043a\u0440\u043e\u043c\u0435 **Id**, **DistrictId**, **Healthcare_1**, **Price**.\n\n\u0422\u0430\u043a\u0436\u0435 \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435, \u0433\u0434\u0435 Healthcare_1 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432.","7782752c":"\u0412\u044b\u0432\u0435\u0434\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0431\u043e\u043b\u044c\u0448\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c.","e1fc4fe8":"\u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u044b.","4b2a0887":"\u0422\u0435\u043f\u0435\u0440\u044c \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0435\u0442.","7a29de07":"## \u0410\u043d\u0430\u043b\u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432<a class='anchor' id='features_analysis'>","c1c709b9":"## MedPriceByFloorYear <a class='anchor' id='med_price_by_floor_year'>","2f104b14":"\u041f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u043e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e - \u043f\u043e\u0447\u0442\u0438 \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0432\u0447\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438. \u041d\u0435\u043f\u043e\u043d\u044f\u0442\u043d\u043e \u043a\u0430\u043a \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u044d\u0442\u0438 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438.\n\n\u0414\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u043e\u0431\u0443\u0447\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c [\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f Healthcare_1](#healthcare_1_model).","3e920859":"\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u043d\u0435 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430 (Square_min, Square_max) \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439.","2eb88ebb":"\u041f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u043a \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u043c\u0443 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0443 \u043f\u043e DistrictId \u0438 Rooms. ","2e2ab1d5":"\u0412\u0440\u043e\u0434\u0435 \u0435\u0441\u0442\u044c \u0438 \u0445\u043e\u0440\u043e\u0448\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f - \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u043a\u0432\u0430\u0440\u0442\u0438\u0440\u044b \u0441 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u043c LifeSquare. \u0421\u0434\u0438\u0432\u043d\u0435\u043c \u0433\u0440\u0430\u043d\u0438\u0446\u0443 \u0435\u0449\u0435 \u043b\u0435\u0432\u0435\u0435.","ad3d6746":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u043b\u0435\u0432\u0443\u044e \u0433\u0440\u0430\u043d\u0438\u0446\u0443. \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435, \u0433\u0434\u0435 Square \u043c\u0435\u043d\u044c\u0448\u0435 \u043b\u0435\u0432\u043e\u0433\u043e \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u044f.","d9efc62c":"\u041f\u043e\u043b\u0443\u0447\u0438\u043b\u0441\u044f \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u0438 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0432 Healthcare_1.","f65d533b":"\u0415\u0441\u0442\u044c \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u0441\u043f\u0440\u0430\u0432\u0430 - \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n\n\u0412\u044b\u0431\u0440\u043e\u0441\u044b \u0441\u043f\u0440\u0430\u0432\u0430 \u0431\u0443\u0434\u0435\u043c \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0442\u0430\u043a: \u0435\u0441\u043b\u0438 \u0433\u043e\u0434 \u0431\u043e\u043b\u044c\u0448\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0433\u043e\u0434\u0430, \u0442\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u0435\u0433\u043e \u043d\u0435 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0433\u043e\u0434.","4c84b478":"## \u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0441\u0435\u0442\u043a\u0435 <a class='anchor' id='grid_search'>","644effc6":"\u0412\u044b\u0447\u0438\u0441\u043b\u0438\u043c \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u0438 \u0434\u043b\u044f \u043e\u0446\u0435\u043d\u043a\u0438 \u0433\u0440\u0430\u043d\u0438\u0446 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432.","dd725cb9":"\u041f\u043e\u0445\u043e\u0436\u0435 \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b. \u0414\u043b\u044f \u0442\u0430\u043a\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0446\u0435\u043d\u044b \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0432\u044b\u0441\u043e\u043a\u0438\u0435. \u041f\u0443\u0441\u0442\u044c \u043b\u0435\u0432\u0430\u044f \u0433\u0440\u0430\u043d\u0438\u0446\u0430 \u0440\u0430\u0432\u043d\u0430 15."}}