{"cell_type":{"2b000846":"code","9fe7ce28":"code","3189949d":"code","394f8fc1":"code","77d5b282":"code","a9a516de":"code","9b6d7b6b":"code","bb224a17":"code","83caa464":"code","44799d52":"code","5067ebf4":"code","e3b73f07":"code","b46f7090":"code","e2a34872":"code","415ae61e":"code","fd7843e7":"code","779e803c":"code","d166586c":"markdown","2f658cd0":"markdown","a4b8f8ad":"markdown","6f59c34b":"markdown"},"source":{"2b000846":"\nfrom sklearn.datasets import fetch_california_housing\n\ncalifornia = fetch_california_housing()","9fe7ce28":"#description of the dataset\n\nprint(california.DESCR)","3189949d":"print(california.data.shape)\nprint(california.target.shape)","394f8fc1":"#load the feature names\ncalifornia.feature_names","77d5b282":"import pandas as pd\n\npd.set_option('precision', 4)\npd.set_option('max_columns', 9)\npd.set_option('display.width', None)\ncalifornia_df = pd.DataFrame(california.data,\n                             columns=california.feature_names)\ncalifornia_df['MedHouseValue'] = pd.Series(california.target)\ncalifornia_df.head()","a9a516de":"california_df.describe()","9b6d7b6b":"sample_df = california_df.sample(frac=0.1, random_state=17)\nprint(sample_df)","bb224a17":"#using matplotlib for visualization\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(font_scale=2)\nsns.set_style('whitegrid')\n\nfor feature in california.feature_names:\n    plt.figure(figsize=(16, 9))\n    sns.scatterplot(data=sample_df, x=feature,y='MedHouseValue',\n                    hue='MedHouseValue', palette='cool', legend=False)","83caa464":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(california.data,\n                                                    california.target, random_state=11)\nprint(X_train.shape)\nprint(X_test.shape)","44799d52":"from sklearn.linear_model import LinearRegression\n\nlinear_regression = LinearRegression()\nlinear_regression.fit(X=X_train, y=y_train)\n\nfor i,name in enumerate(california.feature_names):\n    print(f'{name:>10}: {linear_regression.coef_[i]}')","5067ebf4":"print(linear_regression.intercept_)","e3b73f07":"#Testing the model\npredicted = linear_regression.predict(X_test)\nexpected = y_test","b46f7090":"#Visualizing the Expected vs. Predicted Prices\ndf = pd.DataFrame()\ndf['Expected'] = pd.Series(expected)\ndf['Predicted'] = pd.Series(predicted)\n\nfigure = plt.figure(figsize=(9, 9))\naxes = sns.scatterplot(data=df, x='Expected', y='Predicted',\n                       hue='Predicted', palette='cool', legend=False)\n","e2a34872":"start = min(expected.min(), predicted.min())\nend = max(expected.max(), predicted.max())\n\nprint(f'X-limit {axes.set_xlim(start, end)}')\nprint(f'Y-limit {axes.set_ylim(start, end)}')","415ae61e":"line = plt.plot([start, end], [start, end], 'k--')","fd7843e7":"from sklearn import metrics\nprint(f'The R2 score: {metrics.r2_score(expected, predicted)}\\n')\nprint(f'The MSE: {metrics.mean_squared_error(expected, predicted)}')","779e803c":"#choosing the best model\nfrom sklearn.linear_model import ElasticNet, Lasso, Ridge\n\nestimators = {\n    'LinearRegression': linear_regression,\n    'ElasticNet': ElasticNet(),\n    'Lasso': Lasso(),\n    'Ridge': Ridge()}\n\nfrom sklearn.model_selection import KFold, cross_val_score\n\nfor estimator_name, estimator_object in estimators.items():\n    kfold = KFold(n_splits=10, random_state=11, shuffle=True)\n    scores = cross_val_score(estimator=estimator_object,\n                             X=california.data, y=california.target, cv=kfold,\n                             scoring='r2')\n    print(f'{estimator_name:>16}: ' +\n          f'mean of r2 scores={scores.mean():.3f}')","d166586c":"# Training the model","2f658cd0":"# Loading dataset","a4b8f8ad":"# Splitting the Data for Training and Testing","6f59c34b":"# Visualizing the features"}}