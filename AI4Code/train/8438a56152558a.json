{"cell_type":{"68bf15cc":"code","42d1f19f":"code","d0c8f521":"code","2420b924":"code","cfad7668":"markdown","630e44a3":"markdown","09474ab7":"markdown","72809112":"markdown","374d4819":"markdown","b897eb27":"markdown","958463c3":"markdown","98280ea9":"markdown"},"source":{"68bf15cc":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D\nfrom keras.layers import MaxPooling2D\nfrom keras.layers import Flatten\nfrom keras.layers import Dense","42d1f19f":"# Initialising the CNN\nclassifier = Sequential()\n\n# Step 1 - Convolution\nclassifier.add(Conv2D(32, (3, 3), input_shape = (64, 64, 3), activation = 'relu'))\n\n# Step 2 - Pooling\nclassifier.add(MaxPooling2D(pool_size = (2, 2)))\n\n# Adding a second convolutional layer\nclassifier.add(Conv2D(32, (3, 3), activation = 'relu'))\nclassifier.add(MaxPooling2D(pool_size = (2, 2)))\n\n# Step 3 - Flattening\nclassifier.add(Flatten())\n\n# Step 4 - Full connection\nclassifier.add(Dense(units = 128, activation = 'relu'))\nclassifier.add(Dense(units = 1, activation = 'sigmoid'))\n\n# Compiling the CNN\nclassifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\n\n","d0c8f521":"# Part 2 - Fitting the CNN to the images\n\nfrom keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)\n\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)\n\ntraining_set = train_datagen.flow_from_directory('..\/input\/brain-mri-images-for-brain-tumor-detection\/',\n                                                 target_size = (64, 64),\n                                                 batch_size = 32,\n                                                 class_mode = 'binary')\n\ntest_set = test_datagen.flow_from_directory('..\/input\/brain-mri-images-for-brain-tumor-detection\/',\n                                            target_size = (64, 64),\n                                            batch_size = 32,\n                                            class_mode = 'binary')\n\nclassifier.fit_generator(training_set,\n                         steps_per_epoch =300,\n                         epochs = 5,\n                         validation_data = test_set,\n                         validation_steps = 60)","2420b924":"# Part 3 - Making new predictions\n\n# import numpy as np\n# from keras.preprocessing import image\n# test_image = image.load_img('dataset\/single_prediction_image.jpg', target_size = (64, 64))\n# test_image = image.img_to_array(test_image)\n# test_image = np.expand_dims(test_image, axis = 0)\n# result = classifier.predict(test_image)\n# training_set.class_indices\n# if result[0][0] == 1:\n#    prediction = 'Have Tumer'\n# else:\n#    prediction = 'No Tumer'","cfad7668":"For more accuracy you can increase epoch size.Here i take 5 because it take to much time to compile.\nThen simply pass any image to the classifier but the image should be in same form as we have created the train dataset.\n\nFor this use Following Commented code ","630e44a3":"![](https:\/\/d2h0cx97tjks2p.cloudfront.net\/blogs\/wp-content\/uploads\/sites\/2\/2018\/05\/CNN-Tensorflow-01.jpg)","09474ab7":"Hi, Let's Start from scratch \n\nFirst You have to **install** **tensorflow and keras**\n\nto install tensorflow use :pip install tensorflow\nand to install keras use :pip install --upgrade keras\n\n**Note**:- you may be need cuDNN tools for tensorflow it totally depends on purpose.\n\nIf you are using Anaconda then\n1.open Anaconda prompt and give following commands\n2.conda install tensorflow\n3.conda install keras\n\n**Note**:- installation differs from person to person you can use yours steps.","72809112":"Now,start with Building CNN model","374d4819":"Try it on your laptop :-)","b897eb27":"If you don't know the steps of CNN Google it.\n\nLets Pass the image dataset and automatically generation train and test dataset.","958463c3":"Lets start with importing libraries","98280ea9":"If You get similor output then tensorflow installed correctly. otherwise try to reinstall it."}}