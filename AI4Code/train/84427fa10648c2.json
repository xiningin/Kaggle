{"cell_type":{"c5f90082":"code","3b08f0e0":"code","907ab03d":"code","80a254f0":"code","4f3e4d16":"code","a98d1857":"markdown","2cf90f95":"markdown","0ab337ad":"markdown","21ed13b1":"markdown","1dfb9b19":"markdown","6e366908":"markdown"},"source":{"c5f90082":"import numpy as np\nimport pandas as pd\nimport folium\nimport matplotlib\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","3b08f0e0":"result = pd.read_csv(\"\/kaggle\/input\/tallinn-restaurants\/restaraunts_tallin.csv\")\n\nlatitude = 59.436962\nlongitude = 24.753574\n\nmap_tallinn = folium.Map(location=[latitude, longitude], zoom_start=12)\n\n# add markers to map\nfor lat, lng, restaraunt in zip(result['Latitude'], result['Longitude'], result['Restaraunt']):\n    label = '{}'.format(restaraunt)\n    label = folium.Popup(label, parse_html=True)\n    folium.CircleMarker(\n        [lat, lng],\n        radius=5,\n        popup=label,\n        color='blue',\n        fill_opacity=0.7,\n        parse_html=False).add_to(map_tallinn)  \n    \nmap_tallinn","907ab03d":"from folium import plugins\n\nheatmap_map = folium.Map(location=[latitude, longitude], zoom_start=12, tiles='OpenStreetMap')\n\nfor _, row in result.iterrows():\n    data = result.iloc[:,[-2, -1]]\n    hm = plugins.HeatMap(data, max_opacity=0.5)\n    heatmap_map.add_child(hm)\n\n\nheatmap_map","80a254f0":"from sklearn.cluster import KMeans\n\n# set number of clusters\nkclusters = 5\n\nclustering = result.iloc[:,[-2, -1]]\n\n# run k-means clustering\nkmeans = KMeans(n_clusters=kclusters).fit(clustering)\n\n# add cluster labels to dataframe:\nclustering.insert(0, 'Labels', kmeans.labels_)\n\ndisplay(clustering.head(2))","4f3e4d16":"# create map\nmap_clusters = folium.Map(location=[latitude, longitude], zoom_start=11)\n\n# set color scheme for the clusters\nx = np.arange(kclusters)\nys = [i + x + (i*x)**2 for i in range(kclusters)]\ncolors_array = matplotlib.cm.rainbow(np.linspace(0, 1, len(ys)))\nrainbow = [matplotlib.colors.rgb2hex(i) for i in colors_array]\n\n# add markers to the map\nmarkers_colors = []\nfor lat, lon, cluster in zip(clustering['Latitude'], clustering['Longitude'], clustering['Labels']):\n    label = folium.Popup(str(str(lat)+\" \"+str(lon) + '\\nCluster ' + str(cluster)), parse_html=True)\n    folium.CircleMarker(\n        [lat, lon],\n        radius=5,\n        popup=label,\n        color=rainbow[cluster-1],\n        fill=True,\n        fill_color=rainbow[cluster-1],\n        fill_opacity=0.7).add_to(map_clusters)\n       \nmap_clusters","a98d1857":"The clustering we see makes a lot of sense. It highlights main groups of venues by coordinates.\n* A historic town square of Tallinn inside city castle walls. It has a lot of tourists all year round and seems like a good place for a restaurant, but it has a lot of competition.\n* A modern buisness-district of the city with several skyscrapers and 5-star hotels located in the area. These restaurants are more fairly spread, while still have a lot of tourists and office workers coming through\n* Pirreta. It is located at the seaside, near a major yacht club. These restaurants are probably more expensive and flow of visitors is significantly lower here.\n* Mustamae, a calm neighbourhood. Fast-food chains and delivery services here are more important than restaurants.\n* An outlier, a restaraunt located in the less visited side of town. It is relatively new and has little competition","2cf90f95":"### Heatmap to show density","0ab337ad":"# Putting Restaurants on the Map\n\nFrom the dataset we have a few insights to gain.\nThe most obvious one - determine the density for certain areas.","21ed13b1":"### Placing locations on the map!","1dfb9b19":"### Clustering?\nIt seems there are a few areas that have restaurants in town. Let's see how K-Means handles it.","6e366908":"## Thank you for reading!\nHopefully we gained some insight into restaurant placement in Tallinn"}}