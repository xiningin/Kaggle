{"cell_type":{"04034792":"code","e5f8374c":"code","d7e37401":"code","be03bfab":"code","eb655801":"code","312f6a76":"code","bca7c745":"code","338de96d":"code","7db41815":"code","0317b0f7":"code","c79c6820":"code","450612f7":"code","027fa408":"code","5f01572e":"code","42ca60d0":"code","d17ef403":"code","ab76a8a6":"code","4656dd9f":"markdown","13969ac0":"markdown","6da87dde":"markdown","a7a8380e":"markdown","cf2353a9":"markdown","0c75e3c4":"markdown","795e41e8":"markdown","3022d6d2":"markdown","d228342a":"markdown","ff015c40":"markdown"},"source":{"04034792":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os\nimport copy\nfrom pandas import DataFrame\nfrom pandas import concat\nfrom statsmodels.tsa.arima_model import ARIMA\nimport statsmodels.api as sm\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.preprocessing import MinMaxScaler\n","e5f8374c":"#covid_data = pd.read_csv(\"..\/input\/ntt-data-global-ai-challenge-06-2020\/COVID-19_and_Price_dataset.csv\")\nts = pd.read_csv(\"..\/input\/ntt-data-global-ai-challenge-06-2020\/Crude_oil_trend_From1986-01-02_To2020-06-15.csv\")\n\nts[\"Diff\"] = ts[\"Price\"].diff().dropna()\nts[\"MA75D\"] = ts[\"Price\"].rolling(window=75).mean()\nts[\"Diff_MA75D\"] = ts[\"MA75D\"].diff().dropna()\n\nprint(ts.shape)\nts.tail()","d7e37401":"plt.plot(ts[\"Price\"])\nplt.show()\nplt.plot(ts[\"Diff\"])\nplt.show()\nplt.plot(ts[\"MA75D\"])\nplt.show()\nplt.plot(ts[\"Diff_MA75D\"])\nplt.show()\n","be03bfab":"from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n\n# Autocorrelation\nplot_acf(ts[\"Diff_MA75D\"][75:],lags=100)\nplt.xlabel(\"Lag\")\nplt.ylabel(\"ACF\")\nplt.show()\n\n# Partial Autocorrelation\nplot_pacf(ts[\"Diff_MA75D\"][75:], lags=100)\nplt.xlabel(\"Lag\")\nplt.ylabel(\"PACF\")\nplt.show()","eb655801":"#Split into learning data and test data. Test data uses the last 28 steps\ntrain, test = ts[\"Diff_MA75D\"][75:-28], ts[\"Diff_MA75D\"][-28:]","312f6a76":"#Execute automatic ARMA estimation function to estimate p and q of ARIMA(p,d,q)\nresDiff = sm.tsa.arma_order_select_ic(train, ic='aic', trend='nc')\nresDiff\n\n#We can know (p, q)=(4,2) from the result 'aic_min_order': (4, 2)","bca7c745":"model = ARIMA(train.to_numpy(), order=(4,1,2))\n\nmodel_fit = model.fit(disp=0)\nprint(model_fit.summary())","338de96d":"#forecast() returns only one step forecast.\n#if you want future(out of sample) forecasting, set the argument \"steps\".\npredict = model_fit.forecast(steps=28)\nyhat_arima = predict[0]\nyhat_arima","7db41815":"# plot residual errors\nresiduals = pd.DataFrame(model_fit.resid)\nresiduals.plot()\nplt.show()\nresiduals.plot(kind='kde')\nplt.show()\nprint(residuals.describe())","0317b0f7":"#change differencial series to original series\ndef get_price(preds):\n    base_test = ts[\"MA75D\"].tolist()[-28]\n    oil_preds = []\n    for i in range(len(preds)):\n        oil_preds.append(round(base_test + sum(preds[0:i]),6))\n    return oil_preds\n","c79c6820":"plt.plot(get_price(test), color=\"black\", label=\"Actual Oil Price\")\nplt.plot(get_price(yhat_arima), color=\"blue\", label=\"ARIMA Prediction\")\nplt.legend()\nplt.show()","450612f7":"# calculate RMSE\nrmse = np.sqrt(mean_squared_error(get_price(test), get_price(yhat_arima)))\n\n#rmse = np.sqrt(mean_squared_error(test, yhat_arima)) # differencial RMSE\n\nprint('Test RMSE: %.3f' % rmse)","027fa408":"#Limit learning data to the latest\ntrain, test = ts[\"Diff_MA75D\"][-200:-28], ts[\"Diff_MA75D\"][-28:]\n#Run automatic ARMA estimation function on difference series\nresDiff = sm.tsa.arma_order_select_ic(train, ic='aic', trend='nc')\nresDiff","5f01572e":"model = ARIMA(train.to_numpy(), order=(2,1,1))\nmodel_fit = model.fit(disp=0)\nprint(model_fit.summary())","42ca60d0":"#forecast() returns only one step forecast.\n#if you want future(out of sample) forecasting, set the argument \"steps\".\npredict = model_fit.forecast(steps=28)\nyhat_arima = predict[0]\nyhat_arima","d17ef403":"plt.plot(get_price(test), color=\"black\", label=\"Actual Oil Price\")\nplt.plot(get_price(yhat_arima), color=\"blue\", label=\"ARIMA Prediction\")\nplt.legend()\nplt.show()","ab76a8a6":"# calculate RMSE\nrmse = np.sqrt(mean_squared_error(get_price(test), get_price(yhat_arima)))\nprint('Test RMSE: %.3f' % rmse)","4656dd9f":"ARIMA - a basic time series modeling method\n==============\nI studied and tried a basic time series modelling method ARIMA.  \nI hope it will be a reference for learning to beginners in ARIMA.\n\n\n- Main topics\n  - Using MA(75) series as ARIMA train data\n  - Using auto ARIMA order(p, q) estimation function\n  - Change the period of train data from all periods to the latest period","13969ac0":"# Create a model by limiting the range of training data to the nearest prediction period\n* Although the generalization performance is lost, the most recent movement is too rapid, so try limiting the range of the learning data to the most recent and making it overlearning.\n* RMSE become bad","6da87dde":"Read input data, calculate difference series, 75-day moving average MA75D","a7a8380e":"Create a model using the obtained values of (p,d,q).","cf2353a9":"# Evaluation","0c75e3c4":"Performance got worse. It is meaningless to fit training data of latest period.","795e41e8":"# Residual analysis  \n- Regarding the time stationarity of the residuals, the residuals are almost constant and the error does not seem to increase over time. (Excluding the last sudden change)\n- For the distribution of residuals, kernel density estimation reveals that the model predictions are unbiased because the mean is near zero and symmetric.","3022d6d2":"We can know p (AR model order) is around 2 by the PACF plot.  \nBut, we cannot know q (MA model order) from the ACF Plot.","d228342a":"# ARIMA model order estimation\nARIMA is reprented as ARIMA(p,d,q). I'll estimate p, q.\n\n\n**Characteristics of AR process**\n- Autocorrelation gradually diminishes.\n- The partial autocorrelation has a partial autocorrelation up to the time point p, and becomes 0 after the time point p.\n\n**Characteristics of MA process**\n- Autocorrelation has autocorrelation up to time point q, and becomes 0 after time point q\n- Partial autocorrelation gradually decreases.","ff015c40":"# Model fit and predict"}}