{"cell_type":{"958015f1":"code","b1110fd7":"code","22297376":"code","7969363e":"code","c56c3663":"code","9cb5718b":"code","e72c8b37":"code","77ee0c3d":"code","106d6003":"code","436929a1":"code","81ecb39b":"code","ef076152":"code","4af5c5f3":"code","9d5c5be6":"code","60263b37":"code","c33f1c75":"code","808ec87e":"code","bee840e7":"markdown","b8a968fa":"markdown","33fb4917":"markdown","775e3977":"markdown","4cc56862":"markdown","bc64e9ec":"markdown","479d8a2e":"markdown","d3925010":"markdown","bf145466":"markdown","8a574da9":"markdown","210d6930":"markdown","44a86d40":"markdown","ce196b57":"markdown","a94efc9e":"markdown"},"source":{"958015f1":"import pandas as pd\nimport numpy as np","b1110fd7":"df=pd.read_csv('..\/input\/customer-personality-analysis\/marketing_campaign.csv',sep='\\t')","22297376":"df.head(10)","7969363e":"df.describe()","c56c3663":"df.dtypes","9cb5718b":"#example to take the year value\ndf.Dt_Customer[0].split('-')[2]","e72c8b37":"year_join=[]\n\nfor i in range(len(df.Dt_Customer)):\n    temp=df.Dt_Customer[i].split('-')[2]\n    temp=int(temp)\n    year_join.append(temp)","77ee0c3d":"df['year_join']=year_join","106d6003":"df=df.drop('Dt_Customer',axis=1)   # drop the column from the dataframe","436929a1":"df.columns","81ecb39b":"temp=df.Education\ndf['Graduation']=(df.Education=='Graduation')*1.0\ndf['PhD']=(df.Education=='PhD')*1.0\ndf['Master']=(df.Education=='Master')*1.0\ndf['2n_cycle']=(df.Education=='2n Cycle')*1.0\ndf['Basic']=(df.Education=='Basic')*1.0\ndf=df.drop('Education',axis=1)","ef076152":"temp=df.Marital_Status\ndf['Married']=(df.Marital_Status=='Married')*1.0\ndf['Together']=(df.Marital_Status=='Together')*1.0\ndf['Single']=(df.Marital_Status=='Single')*1.0\ndf['Divorced']=(df.Marital_Status=='Divorced')*1.0\ndf['Widow']=(df.Marital_Status=='Widow')*1.0\ndf=df.drop('Marital_Status',axis=1)","4af5c5f3":"df=df.drop('ID',axis=1)\ndf=df.dropna()\n","9d5c5be6":"# K means clustering\n\nX = df.values\n\nfrom sklearn.cluster import KMeans\nkmeans = KMeans(n_clusters = 4,random_state=1000,init = 'k-means++')\n\n#init will specify if we want to use K-means++ or not\n#change n_clusters to change number of clusters\n#change random state to change the initial random selection of the cluster centers\n\n#PREDICT ON X\ny_kmeans = kmeans.fit_predict(X)","60263b37":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.countplot(y_kmeans)\nplt.xlabel('Clusters:')\nplt.ylabel('Number of instances in clusters:')\nplt.show()","c33f1c75":"wcss = [] \nfor i in range(1,20):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 0) \n    kmeans.fit(X) \n    wcss.append(kmeans.inertia_)","808ec87e":"plt.plot(range(1, 20), wcss) #plotting the Elbow method Graph \nplt.title('The Elbow Method')  \nplt.xlabel('Number of clusters:')  \nplt.ylabel('WCSS:') \nplt.show()","bee840e7":"## We can see that the graph is turning after 2.5 and stops turning before 5 and then flattens after 5 therefore the ideal number of clusters are around 3 or 4 so you can keep the K value to either 3 or 4.","b8a968fa":"## Method used: Elbow Curve method","33fb4917":"Each bar represents one cluster","775e3977":"## Making discrete string variables Education and Marital_status as one hot encoded values for inclusion in the trainable data.","4cc56862":"## To visualize the centroids in a 2d graph you need to take only 2 features but since this model is having more than 30 features it's visually impossible to see the scatter plot.\n\n","bc64e9ec":"## K-means","479d8a2e":"# Step 4: Visualizing the number of clusters and number of data points that they contain.","d3925010":"## Drop NULL value containing rows","bf145466":"# Step 5: Optimizing the K value","8a574da9":"# !PLEASE UPVOTE IF YOU FOUND THIS USEFUL!","210d6930":"## Convert Dt_customer date into the year (for better processing and converting it into actionable integer data) ","44a86d40":"# Step 1: Read the data","ce196b57":"# Step 3: Model Creation and training","a94efc9e":"# Step 2: Pre-Processing"}}