{"cell_type":{"6e4fd6d0":"code","5cd432a5":"code","86ee47c8":"code","0f7f699e":"code","709538fb":"code","56f00395":"code","101700bf":"code","766e7f70":"code","7b676841":"code","0a7093bf":"code","4266e291":"code","ada02f05":"code","6e05b077":"code","f36344dc":"code","b5dfb681":"code","9ba5602b":"code","abc872df":"code","5b1d5f7a":"code","9f638af9":"code","699c39e5":"code","789104e6":"code","b012d6dd":"code","21c251c4":"code","c389f14a":"code","d6d629a4":"code","2e6a869e":"markdown","cce9a0a6":"markdown","7769a544":"markdown","89aef383":"markdown","3c3090cf":"markdown","b83a761c":"markdown","b0a046e3":"markdown","8d6aba14":"markdown","1be98f80":"markdown","eab0e3ee":"markdown","30b219d1":"markdown","49ff36a3":"markdown","07807820":"markdown","fc7ca48a":"markdown","83d7add9":"markdown","40f49f00":"markdown","9043e3d7":"markdown","d84f799e":"markdown","dd006121":"markdown","593a9b03":"markdown","79b313fd":"markdown","00813262":"markdown","8b687a57":"markdown","cf6812a8":"markdown","7c333f58":"markdown","9191f260":"markdown"},"source":{"6e4fd6d0":"import pandas as pd\nimport numpy as np\nfrom sklearn import preprocessing\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\nfrom pylab import rcParams\n!pip install pmdarima\n!pip install mplfinance\nfrom datetime import datetime\nimport mplfinance as mpf\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom pmdarima.arima import auto_arima\nfrom statsmodels.tsa.seasonal import seasonal_decompose","5cd432a5":"df= pd.read_csv(\"..\/input\/d\/shreyasmr\/training\/train.csv\")\ndfs= pd.read_csv(\"..\/input\/d\/shreyasmr\/training\/test.csv\")\ndf ","86ee47c8":"df.isnull().sum()","0f7f699e":"x=df.index\ny=df['Close']\ny","709538fb":"def df_plot(data, x, y, title=\"\", xlabel='Date', ylabel='Value', dpi=100):\n    plt.figure(figsize=(16,5), dpi=dpi)\n    plt.plot(x, y, color='tab:blue')\n    plt.gca().set(title=title, xlabel=xlabel, ylabel=ylabel)\n    plt.show()\n    \nstock_name= \"WAYA US\"\ntitle = (stock_name,\"History stock performance till date\")\ndf_plot(df , x , y , title=title,xlabel='Date', ylabel='Value',dpi=100)","56f00395":"dfk = df[['Open','High','Low','Close']]\ndfk['Date'] = [datetime.strptime(x,'%d-%m-%Y') for x in df['Date']]\ndfk.set_index(dfk['Date'],inplace=True)\ndfk = dfk[['Open','High','Low','Close']]\nmpf.plot(dfk[1400:],type='candle',ylabel=\"INR PRICE\",title=\"candle stick Pattern last 100 days\",style='yahoo')","101700bf":"Close = df['Close']\nresult = seasonal_decompose(Close,model = 'multiplicative', freq = 30)\nfig = plt.figure()\nfig = result.plot()\nfig.set_size_inches(16,9)","766e7f70":"df.describe()","7b676841":"train_X = df[['Open', 'High','Low', 'Volume']]\ntest_X = dfs[['Open', 'High','Low', 'Volume']]\ntrain_y = df['Close']","0a7093bf":"print(train_X.shape)\nprint(test_X.shape)\nprint(train_y.shape)","4266e291":"reg=LinearRegression()\nreg.fit(train_X,train_y)\n","ada02f05":"pre=reg.predict(test_X)\nprint(pre)","6e05b077":"dfr=pd.DataFrame({'Date':dfs['Date'],'Close':pre})\ndfr.set_index(dfr['Date'],inplace=True)\ndfr=dfr[['Close']]\ndfr\ndfr.to_csv('.\/linear.csv')","f36344dc":"Close = df['Close']\nClose","b5dfb681":"rolmean = Close.rolling(window = 20).mean()\nrolstd = Close.rolling(window = 20).std()\nprint(rolmean, rolstd)","9ba5602b":"def df_plot(data, x, y, title=\"\", xlabel='Date', ylabel='Value', dpi=100):\n    plt.figure(figsize=(16,5), dpi=dpi)\n    plt.plot(x, y, color = 'tab:blue')\n    plt.plot(x, rolmean, color='r')\n    plt.plot(x, rolstd, color = 'g')\n    plt.gca().set(title=title, xlabel=xlabel, ylabel=ylabel)\n    plt.show()\n    \nstock_name= \"WAYA US\"\ntitle = (stock_name,\"History stock performance till date\")\ndf_plot(df , x , y , title=title,xlabel='Date', ylabel='Value',dpi=100)","abc872df":"from statsmodels.tsa.stattools import adfuller\nprint(\"results of Dicky Fuller Test: \")\ndftest = adfuller(Close, autolag = 'AIC')\n\ndfoutput = pd.Series(dftest[0:4], index = ['Test Statistic', 'p-vlues', '#lags used', 'Num of obs'])\nfor key,value in dftest[4].items():\n    dfoutput['Critical values (%s)' %key] = value\n\nprint(dfoutput)","5b1d5f7a":"data = {'Date':df['Date'],'Close':Close}\ndff = pd.DataFrame(data)\ndff.set_index('Date', inplace = True)\ndff","9f638af9":"rcParams['figure.figsize'] = 10, 6\ndf_log = np.log(Close)\nmoving_avg = df_log.rolling(20).mean()\nstd_dev = df_log.rolling(30).std()\nplt.legend(loc='best')\nplt.title('Moving Average')\nplt.plot(std_dev, color =\"black\", label = \"Standard Deviation\")\nplt.plot(moving_avg, color=\"red\", label = \"Mean\")\nplt.legend()\nplt.show()","699c39e5":"model_autoARIMA = auto_arima(df_log, start_p=0, start_q=0,\n                      test='adf',       # use adftest to find optimal 'd'\n                      max_p=3, max_q=3, # maximum p and q\n                      m=1,              # frequency of series\n                      d=None,           # let model determine 'd'\n                      seasonal=False,   # No Seasonality\n                      start_P=0, \n                      D=0, \n                      trace=True,\n                      error_action='ignore',  \n                      suppress_warnings=True, \n                      stepwise=True)\nprint(model_autoARIMA.summary())\nmodel_autoARIMA.plot_diagnostics(figsize=(15,8))\nplt.show()","789104e6":"model = ARIMA(df_log, order=(1,1,0))  \nfitted = model.fit(disp=-1)  \nprint(fitted.summary())","b012d6dd":"\nfc, se, conf = fitted.forecast(30, alpha=0.05) #95% Confidence Level","21c251c4":"fc_series = pd.Series(fc, index=dfs['Date'])\nclose=[]\nfor i in range(len(fc_series)):\n    fc_series[i] = np.exp(fc_series[i])\n    close.append(fc_series[i])\nclose","c389f14a":"data = {'Date':dfs['Date'],'Close':close}\ndf_save2 = pd.DataFrame(data)\ndf_save2.set_index(df_save2['Date'],inplace=True)\ndf_save2=df_save2[['Close']]\ndf_save2","d6d629a4":"df_save2.to_csv('.\/arima.csv')","2e6a869e":"checking for null Values","cce9a0a6":"Creating dataframe of Close values as trainning data","7769a544":"Trainning ARIMA model by auto arima","89aef383":"printing date with Close values","3c3090cf":"Assumptions\n* Future trends will hold similar to historical trends.\n\nModel Chosen with Rationale\n* We chose to use ARIMA as it is known to be robust, efficient, and has a strong potential for short-term share market prediction\n\nParameters\n* Close","b83a761c":"**Comparison between Regression and Time Series models**\n\nBased on validation performance metrics\n* Linear regression has RMSE = 1.44337\n* ARIMA Time Series has RMSE =4.81875\nSince Linear regression model has lesser MSE ,it is better in terms of validation performance metrics\n\nWhich model is more suitable for the data?\n* ARIMA Time Series is more suitable for the data as it will be able to handle fluctuations better as it accounts for the trend ,cyclic and seasonal components also\n\nReasoning for what model is chosen to predict test (hidden) data\n* We have chosen Linear regression model since it able to better predict the close values of the next month compared to ARIMA model\n","b0a046e3":"converting unstationary data into stationary data  and displaying graph of Moving Average and Std deviation","8d6aba14":"Conducting Dicky Fuller Test\n\nSince p-values is more than 0.05 ,the data is unstationary","1be98f80":"Importing Required Libaries","eab0e3ee":"Predicting and printing the predicted Close values","30b219d1":"Trainning and fitting Linear regression model on Trainning dataframes","49ff36a3":"**Data Preproccessing And EDA**","07807820":"exporting Close values as arima.csv","fc7ca48a":"Data processing for Regression and Time series Model are done in their respective sections","83d7add9":"**Regression Model**","40f49f00":"Printing Predicted Close Values","9043e3d7":"Trainning arima with order 1 1 0","d84f799e":"Calcauting moving average and market volitality","dd006121":"Getting index and close values for plot","593a9b03":"plot of graph of Time vs Close , Moving Average and Market Voliatality ","79b313fd":"Loading Trainnig and Test dataset\n","00813262":"**Time seris Model**","8b687a57":"Assumptions\n* There is a linear and  additive relationship between dependent variable and independent variable.\n\nModel Chosen with Rationale\n* We have chosen Linear regression model since there is a linear and  additive relationship between dependent variable and independent variable.\n\nParameters\n* Open \n* High\n* Low\n* Volume\n","cf6812a8":"Creating Test and Trainning data frames","7c333f58":"plot of graph of date vs close ","9191f260":"converting predicted close values into data frame and exporting as .csv file"}}