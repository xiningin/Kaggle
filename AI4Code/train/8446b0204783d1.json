{"cell_type":{"949fd6c2":"code","424febaf":"code","61fccd0d":"code","12f63bdd":"code","039ce536":"code","b8c87f5f":"code","51705c9c":"code","23c00d20":"code","6f4752e4":"code","21799ca4":"code","7e63d253":"code","241b46a6":"code","7c5a426e":"code","52a7eab5":"code","8cfe6ea6":"code","24465a9a":"code","16ad049c":"code","90646568":"code","66a60511":"code","814791cb":"code","4b178ad7":"code","e94d8556":"code","4f73253d":"code","2e3a89f3":"code","cfc9d906":"code","b26c5223":"code","a74e7173":"code","bc6bcd26":"code","5a7f9923":"code","e436c86c":"code","f3b0225c":"code","a9ea0581":"code","3ccffe13":"code","36c724d7":"code","e4da9709":"code","68497159":"code","ba48f49a":"code","38f1abce":"code","14184bbc":"code","75882fca":"markdown","670018d8":"markdown","e192774a":"markdown","26127fe4":"markdown","2752d038":"markdown","cf6b52fd":"markdown","0bc68e79":"markdown","d8fad757":"markdown","00cd87fe":"markdown","401b048b":"markdown","21c48269":"markdown","cbaa8fdd":"markdown","7d8fce4a":"markdown","674b04a7":"markdown","ad5afd4a":"markdown","94cb833f":"markdown","131aebdf":"markdown"},"source":{"949fd6c2":"# importing libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","424febaf":"input_directory = '\/kaggle\/input\/brasilian-houses-to-rent\/houses_to_rent_v2.csv'","61fccd0d":"input_dataset = pd.read_csv(input_directory)","12f63bdd":"input_dataset.shape","039ce536":"input_dataset.head()","b8c87f5f":"input_dataset.dtypes","51705c9c":"input_dataset['floor'].value_counts()","23c00d20":"input_dataset['floor'] = input_dataset['floor'].replace('-',0)","6f4752e4":"input_dataset['floor'].value_counts()","21799ca4":"input_dataset['floor'] = pd.to_numeric(input_dataset['floor'])","7e63d253":"input_dataset.isnull().sum()","241b46a6":"input_dataset['animal'].value_counts()","7c5a426e":"input_dataset['furniture'].value_counts()","52a7eab5":"from sklearn.preprocessing import LabelEncoder\nencoder = LabelEncoder()","8cfe6ea6":"input_dataset['city'] = encoder.fit_transform(input_dataset['city'])\ninput_dataset['animal'] = encoder.fit_transform(input_dataset['animal'])\ninput_dataset['furniture'] = encoder.fit_transform(input_dataset['furniture'])","24465a9a":"input_dataset.dtypes","16ad049c":"sns.heatmap(input_dataset.corr())","90646568":"plt.plot(input_dataset['total (R$)'], input_dataset['hoa (R$)'], 'o')\nplt.suptitle('total VS hoa')","66a60511":"# Let us remove the outliers\ninput_dataset.sort_values('hoa (R$)', ascending = False).head(10)\n# the Indexes - [255, 6979, 6230, 2859, 2928, 1444] are outliers. Let us remove them","814791cb":"input_dataset = input_dataset.drop([255, 6979, 6230, 2859, 2928, 1444])","4b178ad7":"input_dataset.sort_values('hoa (R$)', ascending = False).head()","e94d8556":"plt.plot(input_dataset['total (R$)'], input_dataset['hoa (R$)'], 'o')\nplt.suptitle('total VS hoa (after removing outliers)')","4f73253d":"input_dataset.sort_values('total (R$)', ascending = False).head()","2e3a89f3":"input_dataset = input_dataset.drop([6645, 2182])","cfc9d906":"plt.plot(input_dataset['total (R$)'], input_dataset['hoa (R$)'], 'o')\nplt.suptitle('total VS hoa (after removing outliers)')","b26c5223":"plt.plot(input_dataset['rent amount (R$)'], input_dataset['fire insurance (R$)'], 'o')\nplt.suptitle('rent amount VS fire insurance')","a74e7173":"input_dataset.sort_values('rent amount (R$)',ascending = False).head()","bc6bcd26":"input_dataset.sort_values('fire insurance (R$)',ascending = False).head()","5a7f9923":"input_dataset = input_dataset.drop([7748])","e436c86c":"plt.plot(input_dataset['rent amount (R$)'], input_dataset['fire insurance (R$)'], 'o')\nplt.suptitle('rent amount VS fire insurance')","f3b0225c":"# separating training and testing data\nfrom sklearn.model_selection import train_test_split\ninputs = input_dataset.drop(columns = 'rent amount (R$)')\ntarget = input_dataset['rent amount (R$)']\ntrain_input, test_input, train_target, test_target = train_test_split(inputs, target, test_size = 0.2, random_state = 101)","a9ea0581":"print(train_input.shape)\nprint(train_target.shape)\nprint(test_input.shape)\nprint(test_target.shape)","3ccffe13":"# importing machine learning algorithms\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.linear_model import LogisticRegression, LinearRegression\nfrom sklearn.svm import SVR\nfrom sklearn.neural_network import MLPRegressor","36c724d7":"# importing evaluation metrics for regression algorithms\nfrom sklearn.metrics import mean_squared_error","e4da9709":"# KNN Algorithm\nknn = KNeighborsRegressor(n_neighbors = 2)\nmodel = knn.fit(train_input, train_target)\nprint('model = ', model)\nprediction = knn.predict(test_input)\nprint(np.sqrt(mean_squared_error(test_target, prediction)))","68497159":"# Logistic Algorithm\nlogit = LogisticRegression()\nmodel = logit.fit(train_input, train_target)\nprint('model = ',model)\nprediction = model.predict(test_input)\nprint(np.sqrt(mean_squared_error(test_target, prediction)))","ba48f49a":"# Linear Regression Algorithm\nlinear = LinearRegression()\nmodel = linear.fit(train_input, train_target)\nprint('model = ',model)\nprediction = model.predict(test_input)\nprint(np.sqrt(mean_squared_error(test_target, prediction)))","38f1abce":"# Support Vector Machine\nsvm = SVR()\nmodel = svm.fit(train_input, train_target)\nprint('model = ', model)\nprediction = model.predict(test_input)\nprint(np.sqrt(mean_squared_error(test_target, prediction)))","14184bbc":"# Multilayered Perceptron\nmlp = MLPRegressor()\nmodel = mlp.fit(train_input, train_target)\nprint('model = ', model)\nprediction = model.predict(test_input)\nprint(np.sqrt(mean_squared_error(test_target, prediction)))","75882fca":"Now the dataset has been preprocessed. Let us go to the Modelling and Evaluation stages.","670018d8":"The 'total' is highly correlated with 'hoa', The 'rent amount' is highly correlated with 'fire insurance' .......INTERESTING !!!","e192774a":"Business Understanding = We are trying to predict the rent of the houses in Brazil. The output is the predicted rent amount. ","26127fe4":"Looks like we got some outliers in the dataset.","2752d038":"Now all the datatypes are numeric.","cf6b52fd":"Now let us check 'rent amount' and 'fire insurance'","0bc68e79":"The feature floor is having 2461 values as '-'. Which means no floors present. We have to change '-' to 0 and convert them into numbers. ","d8fad757":"Let us change these three features to numeric using label encoders.","00cd87fe":"We still have some outliers","401b048b":"Data Understanding - we have to understand what kind of data we have.\nData Preparation - we will preprocess the dataset that we have.","21c48269":"Finally, the trained model will be deployed in the production.\n\n\nPlease comment if any improvements can be done :). Thanks.","cbaa8fdd":"I think we can proceed with the modelling now.","7d8fce4a":"Now we have changed the feature to numeric feature. Let us check the missing values now. ","674b04a7":"There are 10,692 samples and 13 features in the dataset. 13 features include the target feature","ad5afd4a":"Linear Regression is a good algorithm for this requirement.","94cb833f":"The feature 'floor' is supposed to be a numeric feature. We have to change it to number.","131aebdf":"Let us understand CRISP-DM for begineers.\n\n\n\n\nhttps:\/\/en.wikipedia.org\/wiki\/Cross-industry_standard_process_for_data_mining"}}