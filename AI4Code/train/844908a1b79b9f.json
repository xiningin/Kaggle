{"cell_type":{"8cf071c3":"code","cb18f07f":"code","c4db61dc":"code","81fbbf0b":"code","766fa892":"code","58d28fd9":"code","b1d4d389":"code","aa791633":"code","8fa81100":"code","030471d8":"code","43799d7d":"code","2c54f9d5":"code","986e0612":"code","94aa5b4b":"code","d29b9a93":"code","a51951f2":"code","a59b91fb":"code","cca1798f":"code","25354bf5":"code","f3970a05":"code","124c4fb4":"code","9d99188c":"code","056aee85":"code","566a6bdc":"code","e99ba6a3":"code","bfc9e0b1":"code","2f2857ba":"code","fc0f2149":"code","6991d9d3":"code","07fe54b1":"code","4340157d":"code","bb056c3e":"code","f4c87469":"code","219efff0":"code","d0457714":"code","8fea90cc":"code","6d32909c":"code","f12c1068":"code","e4ed0225":"code","56827156":"code","c1ca23cb":"code","3dce4a56":"code","7b77a720":"code","06efbe3e":"code","e5879cca":"code","f85d5f03":"code","0205d54f":"code","ea28a212":"code","02efcfb5":"code","4cdf333b":"code","79ef2364":"code","8611c8e8":"code","224a2f16":"code","e5aa1aef":"code","b48ee05d":"code","005a19e7":"code","612d7d0a":"code","4a0016b5":"code","934ebe0f":"code","4a6123b8":"code","1175f6cc":"code","23355728":"code","a927be6b":"code","6cdc7967":"code","e85703f1":"code","6fdffaee":"code","45f6902b":"code","c5f598aa":"code","ec80078c":"code","f59b5328":"code","3e6639b3":"code","b1dab245":"code","cb83376a":"code","80241805":"code","1b3e38dc":"code","7e0542a7":"code","673c5a42":"code","f7376908":"code","b5c4953e":"code","afde8cee":"code","88824c83":"code","44f1d720":"code","2803acf2":"code","1dbafd49":"code","d3c02a91":"code","657716f0":"code","3e98c341":"code","65073f87":"code","64fc7d9b":"code","464c9ea3":"code","075d7df3":"code","9cce709f":"code","47dc6289":"code","1aef7ad0":"code","df89e0f5":"code","57b1ea2a":"code","fec718c5":"code","624a3601":"code","6a6027ab":"code","8718bda8":"code","7924180c":"code","fa860957":"code","66b60780":"code","d398253e":"code","543c692f":"code","b5623f3d":"code","ebe0d492":"code","52cf9b37":"code","1b58d681":"code","b9515fdd":"code","d9cc046a":"code","db4c1f6b":"code","69f59497":"code","192f113d":"markdown","cd9e6127":"markdown","c77ef343":"markdown","f8953c38":"markdown","69c77453":"markdown","c2cec00c":"markdown","1caa2356":"markdown","329e875f":"markdown","6be6e0c9":"markdown","52cdd384":"markdown","c2becea1":"markdown","10a34ea5":"markdown","9a3e7211":"markdown","af92dfef":"markdown","6014e39e":"markdown","aaa7d00b":"markdown","9d0b9dfc":"markdown","a53a8426":"markdown","10922fe1":"markdown","06984f3c":"markdown","30443c7e":"markdown","9935172e":"markdown","0b010bc2":"markdown","c901a7f7":"markdown","fba4c031":"markdown","57c58d9a":"markdown","4cfad318":"markdown","c04a1d2f":"markdown","bf5d69d8":"markdown","815419b0":"markdown","ba423b26":"markdown","afbcb184":"markdown","4cb3275b":"markdown","e57ef15a":"markdown","8b5eed86":"markdown","6d1975aa":"markdown","df14a2b8":"markdown","7eec3039":"markdown","05e5b0f9":"markdown","55339b7c":"markdown","b6fdf48f":"markdown","e940dacc":"markdown","888e72fc":"markdown","90c94cf2":"markdown","6840b9ee":"markdown","6d5a492a":"markdown","15700994":"markdown","62f31739":"markdown","6b7bac74":"markdown","cd19a4d6":"markdown","4df7e154":"markdown","2da86f24":"markdown","9b8da2c8":"markdown","4837933b":"markdown","6d6087de":"markdown","576c0634":"markdown","256bcd5d":"markdown","a15e8c02":"markdown","1e685d64":"markdown","bd819f80":"markdown","4cb9aef2":"markdown","223f8b3d":"markdown","d0697dc4":"markdown","0c520b84":"markdown","b739036e":"markdown","ddea036c":"markdown","087eeb05":"markdown","44f76c90":"markdown","f6c9c2b3":"markdown","acc63e41":"markdown","7cdd0f76":"markdown","70daa6d0":"markdown","a2c5d2ba":"markdown","9a7f416d":"markdown","1ed6c533":"markdown","05a3d215":"markdown","e34e1372":"markdown","9a7a0cc2":"markdown","b23e83b5":"markdown","be784c80":"markdown","d14d9683":"markdown","0c138d7c":"markdown","29a5d2d3":"markdown","76784827":"markdown","024a128f":"markdown","f08514b4":"markdown","e8b21af6":"markdown","c7479bcb":"markdown","09077ad8":"markdown","30d437ea":"markdown","dd38bfb6":"markdown","62d0ec31":"markdown","29622b14":"markdown","c4462bf7":"markdown","a370b1f7":"markdown"},"source":{"8cf071c3":"pip install dnspython ","cb18f07f":"import pandas as pd\nimport json\nimport dns\nimport pymongo\nimport threading \nimport ipywidgets as widgets\nimport timeit\nfrom pymongo import MongoClient\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport pprint\nimport urllib.parse","c4db61dc":"client = MongoClient(\"mongodb+srv:\/\/geuser:melq.5491@bdegi.3pkrh.gcp.mongodb.net\/gre_EMD?retryWrites=true&w=majority\")\ndb = client.test\n\n","81fbbf0b":"db = client['gre_EMD'] ","766fa892":"db.list_collection_names()","58d28fd9":"collection = db['gre10_depl']\ncollection2= db['gre10_traj']\ncollection3= db['gre10_mng']\ncollection4= db['gre10_pers']","b1d4d389":"view = collection.find_one()\nview2 = collection2.find_one()\nview3 = collection3.find_one()\nview4 = collection4.find_one()","aa791633":"print(\"a sample of the first collection\",view,\n      \"\\n a sample of the second collection\",view2,\n       \"\\n a sample of the third collection\", view3, \n     \" \\n a sample of the fourth collection\", view4)","8fa81100":"n=collection.count_documents({})\nprint(n)","030471d8":"exp1=collection.find()\nfor i in exp1:\n    print(i)","43799d7d":"a=collection.find_one({\"DP1\" : {\"$ne\" : \"3\"}})\nprint(a)","2c54f9d5":"b=collection.find({'nbarret': 'NA'})\ns_arret=0\nfor i in b:\n    s_arret=s_arret+1\nprint(\"the number of samples with a 'NA' 'nbarret' value is\", s_arret)","986e0612":"print(\"the rate of missing data for 'nbarret' variable is :\", (int(s_arret)\/int(n))*100, '%')","94aa5b4b":"b=collection.find({'motdeacc': 'NA'})\ns_motdeacc=0\nfor i in b:\n    s_motdeacc=s_motdeacc+1\nprint(\"the number of samples with 'motdeacc' different than Na is :\",n-s_motdeacc)","d29b9a93":"print(\"the rate of missing data for 'motdeacc' variable is :\", (int(s_motdeacc)\/int(n))*100, '%')","a51951f2":"c=collection.aggregate([{\"$group\":{\"_id\":\"$tir\", \"number\": { \"$sum\":1}}},{\"$sort\": {\"number\": -1}}\n                       ])\nfor i in c:\n    print(i)","a59b91fb":"c=collection.aggregate([{\"$group\":{\"_id\":\"$zoneres\", \"number\": { \"$sum\":1}}},{\"$sort\": {\"number\": -1}}\n                       ])\nfor i in c:\n    print(i)","cca1798f":"c=collection.aggregate([{\"$group\":{\"_id\":\"$zoneorig\", \"number\": { \"$sum\":1}}},{\"$sort\": {\"number\": -1}}\n                       ])\nfor i in c:\n    print(i)","25354bf5":"exp1=collection.find()\ndf =pd.DataFrame(list(exp1))\ndf","f3970a05":"df.shape","124c4fb4":"mot1=len(df[df.motdeacc == \"NA\"].index)\nprint(mot1)","9d99188c":"mot1= df[df.nbarret == \"NA\"].shape\nprint(mot1)","056aee85":"df1=df.drop([\"_id\",\"DP1\", \"nbarret\", \"motdeacc\"], axis=1)\ndf1","566a6bdc":"len(df1[df1.duree =='NA'].index)","e99ba6a3":"df1['duree'] = df1['duree'].astype(int)\ndf1['heuredep'] = df1['heuredep'].astype(int)\ndf1['heurearr'] = df1['heurearr'].astype(int)\ndf1['mindep']= df1['mindep'].astype(int)\ndf1['minarr']= df1['minarr'].astype(int)","bfc9e0b1":"df1[(df1.heurearr *60 + df1.minarr)-(df1.heuredep *60 + df1.mindep)==df1.duree]","2f2857ba":"me_duree =df1['duree'].mean()\nvar_duree =df1['duree'].var()\nstd_duree =df1['duree'].std()\nmedian_duree=df1['duree'].median()\nprint ('Statistics of age for duree: mean:', me_duree, 'median',median_duree, 'var:',var_duree , 'std:',std_duree)","fc0f2149":"min_duree =df1['duree'].min()\nmax_duree =df1['duree'].max()\n\nprint ('Statistics of age for duree: min:', min_duree, 'max:',max_duree )","6991d9d3":"duree_sorted=df1.sort_values(\"duree\", ascending= True)\nduree_grouped = duree_sorted.groupby('duree').size()\nprint (duree_grouped)","07fe54b1":"depl_duree=df1['duree']\ndepl_duree.hist(density=0,histtype='stepfilled', bins=40)\nplt.xlabel('duree',fontsize=15)\nplt.ylabel('samples',fontsize=15)\nplt.show()","4340157d":"interval1=len(df1[(df1.duree > 120)].index)\n\nprint(\"trips with a duration less than two hours:\",interval1, \" \\n the rate of samples with duration less than two hours is:\", (float(interval1)\/int(n))*100,'%')","bb056c3e":"df12 =df1[(df1.duree <= 120)]","f4c87469":"depl_duree=df12['duree']\ndepl_duree.hist(density=0,histtype='stepfilled', bins=10)\nplt.xlabel('duree',fontsize=15)\nplt.ylabel('samples',fontsize=15)\nplt.show()","219efff0":"e=collection.aggregate([{\"$group\":{\"_id\":\"$heuredep\", \"number\": { \"$sum\":1}}},{\"$sort\": {\"number\": -1}}\n                       ])\nfor i in e:\n    print(i)","d0457714":"df12_heuredep=df12['heuredep']\ndf12_heuredep.hist(density=0, histtype='stepfilled', bins=40)","8fea90cc":"heurearr_sorted=df12.sort_values(\"heurearr\", ascending= True)\nheurearr_grouped = heurearr_sorted.groupby('heurearr').size()\nprint (heurearr_grouped)","6d32909c":"df1_heurearr=df12['heurearr']\ndf1_heurearr.hist(density=0, histtype='stepfilled', bins=40)","f12c1068":"df1[(df1.heuredep>24)]","e4ed0225":"df13=df12[df12.heuredep<24]\nimport seaborn as sns\ndf13['heuredep'].hist(histtype='stepfilled', alpha=.7, bins=24)   \ndf13['heurearr'].hist(histtype='stepfilled', alpha=.5, color=sns.desaturate(\"indianred\", .75), bins=24)\nplt.xlabel('heure',fontsize=15)\nplt.ylabel('Samples',fontsize=15)\nplt.show()","56827156":"collec4=db['gre10_pers']\nview4=collec4.find_one()\nview4","c1ca23cb":"collec4.count_documents({})","3dce4a56":"exp1=collec4.find()\ndf =pd.DataFrame(list(exp1))","7b77a720":"df.shape","06efbe3e":"df.describe()\n","e5879cca":"counts = df.groupby('sexe').size()\n\nprint (counts) ","f85d5f03":"df1=df.drop((df.index[(df['freqtram']=='NA')])&(df.index[(df['fqvelo']=='NA')]))","0205d54f":"df1['age'] = df1['age'].astype(int) \ndf1['freqtram'] = df1['freqtram'].astype(int) \ndf1['fqvelo'] = df1['fqvelo'].astype(int)","ea28a212":"dfm=df1[(df1.sexe==\"1\")]\ndff=df1[(df1.sexe==\"2\")]","02efcfb5":"df1['freqtram'].mean()","4cdf333b":"print ('The average use of tram by men : ', dfm['freqtram'].mean(), '.' )\nprint ('The average use of tram by women : ', dff['freqtram'].mean(), '.' )\n\n","79ef2364":"print ('The standard deviation of the frequency of the use of tram by men : ', dfm['freqtram'].std(), '.' )\nprint ('The standard deviation of the frequency of the use of tram by women : ', dff['freqtram'].std(), '.' )","8611c8e8":"import matplotlib.pyplot as plt\ndfm_freqtram=dfm['freqtram']\ndfm_freqtram.hist(density=0, histtype='stepfilled', bins=20)\nplt.xlabel('freqtram',fontsize=15)\nplt.ylabel('number of men',fontsize=15)","224a2f16":"freq1 =dfm[(dfm.freqtram == 1)]\nfreq2 =dfm[(dfm.freqtram == 2)]\nfreq3 =dfm[(dfm.freqtram == 3)]\nfreq4 =dfm[(dfm.freqtram == 4)]\nfreq5 =dfm[(dfm.freqtram == 5)]\nprint ('The rate of men having 1 as a frequency of having the tram: ', int(len(freq1)\/float(len(dfm))*100), '%.' )\nprint ('The rate of men having 2 as a frequency of having the tram: ', int(len(freq2)\/float(len(dfm))*100), '%.' )\nprint ('The rate of men having 3 as a frequency of having the tram:', int(len(freq3)\/float(len(dfm))*100), '%.' )\nprint ('The rate of men having 4 as a frequency of having the tram:', int(len(freq4)\/float(len(dfm))*100), '%.' )\nprint ('The rate of men having 5 as a frequency of having the tram:' ,int(len(freq5)\/float(len(dfm))*100), '%.' )","e5aa1aef":"dff_freqtram=dff['freqtram']\ndff_freqtram.hist(density=0, histtype='stepfilled', bins=20)\nplt.xlabel('freqtram',fontsize=15)\nplt.ylabel('number of women',fontsize=15)","b48ee05d":"freq1 =dff[(dff.freqtram == 1)]\nfreq2 =dff[(dff.freqtram == 2)]\nfreq3 =dff[(dff.freqtram == 3)]\nfreq4 =dff[(dff.freqtram == 4)]\nfreq5 =dff[(dff.freqtram == 5)]\nprint ('The rate of women having 1 as a frequency of having the tram: ', int(len(freq1)\/float(len(dff))*100), '%.' )\nprint ('The rate of women having 2 as a frequency of having the tram: ', int(len(freq2)\/float(len(dff))*100), '%.' )\nprint ('The rate of women having 3 as a frequency of having the tram:', int(len(freq3)\/float(len(dff))*100), '%.' )\nprint ('The rate of women having 4 as a frequency of having the tram:', int(len(freq4)\/float(len(dff))*100), '%.' )\nprint ('The rate of women having 5 as a frequency of having the tram:' ,int(len(freq5)\/float(len(dff))*100), '%.' )","005a19e7":"view2","612d7d0a":"n2=collection2.count_documents({})\nprint('the number of samples of this collection is:',n2)","4a0016b5":"df2 = pd.DataFrame(list(collection2.find()))\ndf2","934ebe0f":"nb_abonpeage_NA= len(df2[df2.abonpeage==\"NA\"].index)\nnb_autoroute_NA=len(df2[df2.autoroute==\"NA\"].index)\nnb_durstat_NA=len(df2[df2.durstat==\"NA\"].index)\nnb_NAT_STAT_NA=len(df2[df2.NAT_STAT==\"NA\"].index)\nnb_LIEU_STAT_NA=len(df2[df2.LIEU_STAT==\"NA\"].index)\nnb_NB_OCCU_NA=len(df2[df2.NB_OCCU==\"NA\"].index)\nnb_NUM_VEH_NA=len(df2[df2.NUM_VEH==\"NA\"].index)\nprint('the number of samples with a missing value for abonpeage is:',nb_abonpeage_NA,\n      '\\n the number of samples with a missing value for autoroute is:',nb_autoroute_NA,\n      '\\n the number of samples with a missing value for durstat is:',nb_durstat_NA,\n       '\\n the number of samples with a missing value for NAT_STAT is:',nb_NAT_STAT_NA,\n      '\\n the number of samples with a missing value for LIEU_STAT is:',nb_LIEU_STAT_NA,\n      '\\n the number of samples with a missing value for NB_OCCU is:',nb_NB_OCCU_NA,\n      '\\n the number of samples with a missing value for NUM_VEH is:',nb_NUM_VEH_NA\n      , '\\n the rate of samples with abonpeage missing values is :', int(nb_abonpeage_NA)*100\/int(n2), '%'\n     , '\\n the rate of samples with autoroute missing values is :', int(nb_autoroute_NA)*100\/int(n2), '%'\n     , '\\n the rate of samples with durstat missing values is :', int(nb_durstat_NA)*100\/int(n2), '%'\n     , '\\n the rate of samples with NAT_STAT missing values is :', int(nb_NAT_STAT_NA)*100\/int(n2), '%'\n     , '\\n the rate of samples with LIEU_STAT missing values is :', int(nb_LIEU_STAT_NA)*100\/int(n2), '%'\n     , '\\n the rate of samples with NB_OCCU missing values is :', int(nb_NB_OCCU_NA)*100\/int(n2), '%'\n     , '\\n the rate of samples with NUM_VEH missing values is :', int(nb_NUM_VEH_NA)*100\/int(n2), '%')","4a6123b8":"NA_attributes=df2[(df2.NUM_VEH =='NA')& (df2.NB_OCCU =='NA')&(df2.LIEU_STAT =='NA')&(df2.autoroute =='NA')]\nnb_NA_attributes=len(NA_attributes.index)\nprint('the number of samples having missing data for all attributes NUM_VEH, NB_OCCU,LIEU_STAT and autoroute is:', nb_NA_attributes)","1175f6cc":"df3 = pd.DataFrame(list(collection3.find()))\ndf3","23355728":"df3.describe()","a927be6b":"df31=df3.drop([\"_id\",\"ENERGIE4\",\"AN_VP4\",\"PUIS_VP4\",\"POSSES4\",\"LIEU_STAT4\",\"TYPE_STAT4\", \"Gare2\", \"Etu\"], axis=1)\ndf31.describe()","6cdc7967":"df32=df31.drop([\"AN_VP3\", \"PUIS_VP3\", \"POSSES3\", \"LIEU_STAT3\", \"TYPE_STAT3\", \"GENRE4\", \"GENRE3\",\"ENERGIE3\"], axis=1)\ndf32.describe()","e85703f1":"start_time = timeit.default_timer()\n# Creates a client for the primary sandbox from cluster host cluster0-nlbcx.mongodb.net\nclient = MongoClient(\"mongodb:\/\/adminUser:xpass@cluster0-shard-00-00-nlbcx.mongodb.net:27017\/?ssl=true&replicaSet=Cluster0-shard-0&authSource=admin\")\n\ndb = client.test \ndb = client['stackoverflow-dump-view']\ncollection = db['viewModel-view']\n\nview = collection.find_one() # json file, can be browsed as a dictionary\n\n#print (view['releaseViewList'][0].keys())\nviewRel0=view['releaseViewList'][0]\nviewRel1=view['releaseViewList'][1]\nviewRel2=view['releaseViewList'][2]","6fdffaee":"viewRel0","45f6902b":"viewRel1","c5f598aa":"viewRel2","ec80078c":"minValue0=viewRel0['attributeDescList'][0]['minValue'];print(minValue0)\nmaxValue0=viewRel0['attributeDescList'][0]['maxValue'];print(maxValue0)\nmean0=viewRel0['attributeDescList'][0]['mean'];print(mean0)\nmedian0=viewRel0['attributeDescList'][0]['median'];print(median0)\nnullValue0=viewRel0['attributeDescList'][0]['nullValue'];print(nullValue0)\nname0=viewRel0['attributeDescList'][0]['name'];print(name0)\ncount0=viewRel0['attributeDescList'][0]['count'];print(count0)","f59b5328":"nullsRel0=[]\nfor i in viewRel0['attributeDescList']:\n    nullsRel0.append(sum(i['nullValue']))\n\nnullsRel1=[]\nfor i in viewRel1['attributeDescList']:\n    nullsRel1.append(sum(i['nullValue']))\n\nnullsRel2=[]\nfor i in viewRel2['attributeDescList']:\n    nullsRel2.append(sum(i['nullValue']))","3e6639b3":"import matplotlib.pyplot as plt \n\n# line 1 points \nx = ['Votes','Posts','Comments','Badges','Users']\ny1 = nullsRel0\n# plotting the line 1 points \nplt.plot(x, y1, label = \"Jan01-18\")\n\n# line 2 points \ny2 = nullsRel1\n# plotting the line 1 points \nplt.plot(x, y2, label = \"Jan02-18\")\n\n# line 3 points \ny3 = nullsRel2\n# plotting the line 1 points \nplt.plot(x, y3, label = \"Jan03-18\")\n\n# naming the x axis \nplt.xlabel('dataset') \n# naming the y axis \nplt.ylabel('null values') \n# giving a title to my graph \nplt.title('Number of null values per release') \n\n# show a legend on the plot \nplt.legend() \n\n# function to show the plot \nplt.show() ","b1dab245":"countRel0=[]\nfor i in viewRel0['attributeDescList']:\n    countRel0.append(i['count'])\n\ncountRel1=[]\nfor i in viewRel1['attributeDescList']:\n    countRel1.append(i['count'])\n\ncountRel2=[]\nfor i in viewRel2['attributeDescList']:\n    countRel2.append(i['count'])","cb83376a":"import matplotlib.pyplot as plt \n\n# line 1 points \nx = ['Votes','Posts','Comments','Badges','Users']\ny1 = countRel0\n# plotting the line 1 points \nplt.plot(x, y1, label = \"Jan01-18\")\n\n# line 2 points \ny2 = countRel1\n# plotting the line 1 points \nplt.plot(x, y2, label = \"Jan02-18\")\n\n# line 3 points \ny3 = countRel2\n# plotting the line 1 points \nplt.plot(x, y3, label = \"Jan03-18\")\n\n# naming the x axis \nplt.xlabel('dataset') \n# naming the y axis \nplt.ylabel('count') \n# giving a title to my graph \nplt.title('Count of items per release') \n\n# show a legend on the plot \nplt.legend() \n\n# function to show the plot \nplt.show() ","80241805":"elapsed = timeit.default_timer() - start_time","1b3e38dc":"print (\"execution time: \" + str(elapsed) + \" s\")","7e0542a7":"#------------------------------------------------------------------ Q1 --------------------------------------------------------------------#\nbtn1=widgets.ToggleButton(value=False,description='Activate',disabled=False,button_style='info',tooltip='',icon='',visibility = 'visible')\n#timeLbl1=widgets.Text(value='0',description='',disabled=True)\nq1 = widgets.RadioButtons(options=['January 1rst 2018', 'January 2nd 2018', 'January 3rd 2018'],value=None,description='Release:',disabled=True)\n#------------------------------------------------------------------------------------------------------------------------------------------#\n#------------------------------------------------------------------ Q2 --------------------------------------------------------------------#\nbtn2=widgets.ToggleButton(value=False,description='Activate',disabled=False,button_style='info',tooltip='',icon='',visibility = 'visible')\n#timeLbl2=widgets.Text(value='0',description='',disabled=True)\nq2 = widgets.RadioButtons(options=['January 1rst 2018', 'January 2nd 2018', 'January 3rd 2018'],value=None,description='Release:',disabled=True)\n#------------------------------------------------------------------------------------------------------------------------------------------#\n#------------------------------------------------------------------ Q3 --------------------------------------------------------------------#\nbtn3=widgets.ToggleButton(value=False,description='Activate',disabled=False,button_style='info',tooltip='',icon='',visibility = 'visible')\n#timeLbl3=widgets.Text(value='0',description='',disabled=True)\nq3 = widgets.RadioButtons(options=['January 1rst 2018', 'January 2nd 2018', 'January 3rd 2018'],value=None,description='Release:',disabled=True)\n#------------------------------------------------------------------------------------------------------------------------------------------#\n#------------------------------------------------------------------ Q4 --------------------------------------------------------------------#\nbtn4=widgets.ToggleButton(value=False,description='Activate',disabled=False,button_style='info',tooltip='',icon='',visibility = 'visible')\n#timeLbl4=widgets.Text(value='0',description='',disabled=True)\nq4 = widgets.Dropdown(options=['Id','PostTypeId','AcceptedAnswerId','ParentId','CreationDate','DeletionDate','Score','ViewCount','Body','OwnerUserId','OwnerDisplayName','LastEditorUserId','LastEditorDisplayName','LastEditDate','LastActivityDate','Title','Tags','AnswerCount','CommentCount','FavoriteCount','ClosedDate','CommunityOwnedDate'],\n    value=None,description='Attribute:',disabled=True,)\n#------------------------------------------------------------------------------------------------------------------------------------------#\n#------------------------------------------------------------------ Q5 --------------------------------------------------------------------#\nbtn5=widgets.ToggleButton(value=False,description='Activate',disabled=False,button_style='info',tooltip='',icon='',visibility = 'visible')\n#timeLbl5=widgets.Text(value='0',description='',disabled=True)\ndrop_options = [['--','Id','UserId','Name','Date','Class','TagBased'],\n                ['--','Id','PostId','Score','Text','CreationDate','UserDisplayName','UserId'],\n               ['--','Id','PostTypeId','AcceptedAnswerId','ParentId','CreationDate','DeletionDate','Score','ViewCount','Body','OwnerUserId','OwnerDisplayName','LastEditorUserId','LastEditorDisplayName','LastEditDate','LastActivityDate','Title','Tags','AnswerCount','CommentCount','FavoriteCount','ClosedDate','CommunityOwnedDate'],\n               ['--','Id','Reputation','CreationDate','DisplayName','LastAccessDate','WebsiteUrl','Location','AboutMe','Views','UpVotes','DownVotes','ProfileImageUrl','EmailHash','AccountId'],\n               ['--','Id','PostId','VoteTypeId','UserId','CreationDate','BountyAmount']]\nchildren = [widgets.Dropdown(options=name,description='',value=None) for name in drop_options]\ntab = widgets.Tab()\ntab.children = children\nitems=['Badges', 'Comments', 'Posts', 'Users', 'Votes']\nfor i in range(len(items)):\n    tab.set_title(i, items[i])\nq5=tab\n#------------------------------------------------------------------------------------------------------------------------------------------#\n#------------------------------------------------------------------ Q6 --------------------------------------------------------------------#\nbtn6=widgets.ToggleButton(value=False,description='Activate',disabled=False,button_style='info',tooltip='',icon='',visibility = 'visible')\n#timeLbl6=widgets.Text(value='0',description='',disabled=True)\nq6= widgets.RadioButtons(options=['Yes', 'No'],value=None,description='',disabled=False)\n#------------------------------------------------------------------------------------------------------------------------------------------#\n#------------------------------------------------------------------ Q7 --------------------------------------------------------------------#\nbtn7=widgets.ToggleButton(value=False,description='Activate',disabled=False,button_style='info',tooltip='',icon='',visibility = 'visible')\n#timeLbl7=widgets.Text(value='0',description='',disabled=True)\nchildren2 = [widgets.Dropdown(options=name,value=None) for name in drop_options]\ntab2 = widgets.Tab()\ntab2.children = children2\nfor i in range(len(items)):\n    tab2.set_title(i, items[i])\nq7=tab2\n#------------------------------------------------------------------------------------------------------------------------------------------#\n\n#------------------------------------------------------- Effort questions -----------------------------------------------------------------#\neffortW = []\nfor e in range(7):\n    effortW.append(widgets.ToggleButtons(options=['Low', 'Regular', 'High'],description='Select Effort:',disabled=False,value=None))  \n\ntimeLblW = []\nfor t in range(7):\n    timeLblW.append(widgets.Text(value='0',description='',disabled=True))  \n    \n# Timer function    \n# btn - receive a button object\n# lbl - receive a label object\n#    we use lbl.value to get timer value\n# q - receive a multiple option object\n#    we use q.value to get answered value\ndef timer(btn,lbl,q):        \n\n    cnt =int(lbl.value)   \n    on=btn.value \n    desc=q.description\n\n    if desc!='Submitted':\n        if on==True:      \n            threading.Timer(1, timer, [btn,lbl,q]).start()\n            cnt = cnt+1                        \n            lbl.value = str(cnt)\n            btn.description='Submit answer'\n            q.disabled=False\n\n        elif on==False:\n            threading.Timer(1, timer, [btn,lbl,q]).start()\n            btn.description='Activate'\n            q.disabled=True\n\n        else:\n            None\n\n    if cnt!=0 and btn.description=='Activate':\n        threading.Timer(1, timer, [btn,lbl,q]).start()\n        q.description='Submitted'\n        btn.visibility='hidden'\n        btn.description='--'\n        btn.disbled=True  \n\ndef timerTab(btn,lbl,q):        \n\n    cnt=int(lbl.value)   \n    on=btn.value \n    desc=q.children[0].description\n\n    if desc!='Submitted':\n        if on==True:      \n            threading.Timer(1, timerTab, [btn,lbl,q]).start()\n            cnt = cnt+1                        \n            lbl.value = str(cnt)\n            btn.description='Submit answer'\n            for i in range(len(q.children)):\n                q.children[i].disabled=False\n\n        elif on==False:\n            threading.Timer(1, timerTab, [btn,lbl,q]).start()\n            btn.description='Activate'\n            for i in range(len(q.children)):\n                q.children[i].disabled=True\n\n        else:\n            None\n\n    if cnt!=0 and btn.description=='Activate':\n        threading.Timer(1, timerTab, [btn,lbl,q]).start()\n        for i in range(len(q.children)):\n            q.children[i].description='Submitted'\n        btn.visibility='hidden'\n        btn.description='--'\n        btn.disbled=True                        ","673c5a42":"timeLblW[0]","f7376908":"btn1","b5c4953e":"q1","afde8cee":"timer(btn1,timeLblW[0],q1)","88824c83":"effortW[0]","44f1d720":"timeLblW[1]","2803acf2":"btn2","1dbafd49":"q2","d3c02a91":"timer(btn2,timeLblW[1],q2)","657716f0":"effortW[1]","3e98c341":"timeLblW[2]","65073f87":"btn3","64fc7d9b":"q3","464c9ea3":"timer(btn3,timeLblW[2],q3)","075d7df3":"effortW[2]","9cce709f":"timeLblW[3]","47dc6289":"btn4","1aef7ad0":"q4","df89e0f5":"timer(btn4,timeLblW[3],q4)","57b1ea2a":"effortW[3]","fec718c5":"timeLblW[4]","624a3601":"btn5","6a6027ab":"q5","8718bda8":"timerTab(btn5,timeLblW[4],q5)","7924180c":"effortW[4]","fa860957":"timeLblW[5]","66b60780":"btn6","d398253e":"q6","543c692f":"timer(btn6,timeLblW[5],q6)","b5623f3d":"effortW[5]","ebe0d492":"timeLblW[6]","52cf9b37":"btn7","1b58d681":"timerTab(btn7,timeLblW[6],q7)","b9515fdd":"q7","d9cc046a":"effortW[6]","db4c1f6b":"# collect user effort \nuserEffortL = []\nfor e in effortW:\n    userEffortL.append(e.value) \n        \n# collect time from answers\nqtimeL=[]\nfor t in timeLblW:\n    qtimeL.append(int(t.value))\n\n# tuple for answers\nqans1=q1.options[2]\nqans2=q2.options[0]\nqans3=q3.options[1]\nqans4=q4.options[3]\nqans5=[q5.children[0].options[3],q5.children[1].options[0],q5.children[2].options[5],q5.children[3].options[5],q5.children[4].options[0]]\nqans6=q6.options[0]\nqans7=[q7.children[0].options[3],q7.children[1].options[0],q7.children[2].options[5],q7.children[3].options[5],q7.children[4].options[0]]\nqans = [qans1,qans2,qans3,qans4,qans5,qans6,qans7]\n\nscoreL = [0.0]*7\n\nif q1.value == qans1: scoreL[0]=1 \nif q2.value == qans2: scoreL[1]=1 \nif q3.value == qans3: scoreL[2]=1 \nif q4.value == qans4: scoreL[3]=1 \n\nif qans5[0] == q5.children[0].value: scoreL[4]=scoreL[4] + 0.2\nif qans5[1] == q5.children[1].value: scoreL[4]=scoreL[4] + 0.2\nif qans5[2] == q5.children[2].value: scoreL[4]=scoreL[4] + 0.2\nif qans5[3] == q5.children[3].value: scoreL[4]=scoreL[4] + 0.2\nif qans5[4] == q5.children[4].value: scoreL[4]=scoreL[4] + 0.2\n\nif q6.value ==qans6: scoreL[5]=1\n\nif qans7[0] == q7.children[0].value: scoreL[6]=scoreL[6] + 0.2\nif qans7[1] == q7.children[1].value: scoreL[6]=scoreL[6] + 0.2\nif qans7[2] == q7.children[2].value: scoreL[6]=scoreL[6] + 0.2\nif qans7[3] == q7.children[3].value: scoreL[6]=scoreL[6] + 0.2\nif qans7[4] == q7.children[4].value: scoreL[6]=scoreL[6] + 0.2\n        \n# calculated effort\ncalcEffortL = []\nmaxcEffort = 100\nfor i in range(0,len(scoreL)):\n    if scoreL[i] == 0: \n        calcEffortL.append(maxcEffort)\n    else:\n        if int(qtimeL[i]) > 300: qtimeL[i] = 300 # 5 min limit\n        tmp=int(qtimeL[i])\/scoreL[i]\n        calcEffortL.append((tmp*100)\/1800)            ","69f59497":"import csv\n# qid | time | score | user_effort | calculated_effort | execution_time (cpu)\nheader=['qid', 'score', 'time', 'user_effort', 'calculated_effort', 'execution_time'] \nqid=list(range(1,8))\nelapsedL = [elapsed]*7\n\nrows = zip(qid,scoreL,qtimeL,userEffortL,calcEffortL,elapsedL)\n\nwith open(\"..\/results\/match2.csv\", mode=\"w\") as f:\n    #writer = csv.writer(f, delimiter=',', quotechar='\"', quoting=csv.QUOTE_MINIMAL)\n    writer = csv.writer(f, delimiter=',')\n    writer.writerow(header)\n    for row in rows:\n        writer.writerow(row)","192f113d":"As we can see in the examples above the attribute \"DP1\" is always equal to 3 . Is it really the case, let's check with the following script:","cd9e6127":"we notice that there is a difference between the mean and the median so we can say that the data may present some outliers","c77ef343":"* The standard deviation is low for both men and women which indicates that the data is highly concentrated around the mean.","f8953c38":"## Q2. Which release has the most number of records?","69c77453":"### Number of Items per release","c2cec00c":"# **Women vs Men use of the tram and the bicycle**\n> We begin by getting the dataframes representing respectively men and women.","1caa2356":"### Q3.1 Effort to answer the question","329e875f":"We associate each collection to a variable like follow:","6be6e0c9":"* **Grouping the samples**","52cdd384":"Now we transform the collection to a dataframe ","c2becea1":"### Q2.1 Effort to answer the question","10a34ea5":"### Third Release View","9a3e7211":"So we can assume that when one of the following attributes NUM_VEH ,NB_OCCU,LIEU_STAT and autoroute is missing the other three attributtes are missing too.","af92dfef":"As we can see there is 97% missing data for the 'abonpeage' attribute, so we can eliminate this variable.\nOn the other hand , there is 40.30% missing data for the attributes 'NUM_VEH', 'NB_OCCU', 'LIEU_STAT', 'autoroute' and 44.29% for the attribute NAT_STAT.\nAs we can notice there is a lot of missing data in this collection more than the fourth and the first collections, However there is more samples than the fourth collection.","6014e39e":"* ** Conclusion**\nWe can say for sure that the third collection is the collection with most missing values and less samples.","aaa7d00b":"# ***3. Manipulating missing values for the second and third collection***","9d0b9dfc":"# **2. Manipulating the 4th collection**\n\n\n1. Discovering the collection\n\n\n","a53a8426":"## Releases","10922fe1":"The variables that we can understand in this collection are: \n* _id: which is unique for every sample in this collection generated automatically by mongodb\n* \"duree\": which is the duration of the trip in minutes\n* \"heuredep\": which is the hour of the beginning of the trip\n* \"heurearr\": which is the hour of the end of the trip \nBellow we will try to identify which variables we can eliminate without loosing much information of the data. ","06984f3c":"First thing we convert the column, \"heuredep\", \"heurearr\", \"duree\" to integer so we can manipulate them ","30443c7e":"* **Do we have always the same samples with missing data for the attributes 'NUM_VEH', 'NB_OCCU', 'LIEU_STAT' and 'autoroute'?**\nLet's check it out.","9935172e":"-> 6126 samples with 'motdeacc' different than 'NA'","0b010bc2":"### Number of Null Values per release","c901a7f7":"* **The second collection**","fba4c031":"Let's see the size of our collection:","57c58d9a":"## Q1. Which is the release with best quality? (less missing, nulls and default values)","4cfad318":"Interpretations:\n* The first thing to notice that the arrival time with the highest number of trips is 8h which represents the hour of starting work. \n* We can also notice that the interval of time of trip's beginning-hour with second highest number of trips is [16h,18h] which represents actually the time to go back home from work or school.","c04a1d2f":"Let's group the samples by \"zoneres\" and sort them in decreasing way:","bf5d69d8":"I appreciate the work donee in the wrap up project\n- You played the game of interacting with mongodb for exploring data collectiosn and understaing their content\n- It was a good strategy to exploit Pandas to explore the data and find out missing values and evaluate quantitative quality with descriptive statistics\n- I missed a research question or several research questions stated for the analysis.\n- I also missed a general overview of the pipeline or pipelines implemented in your experiment and a figure explaining the architecture of the experiment.\n- Finally, I regret that you did not cleaned the intitial code given as example and that a piece of code that has nothing to do with your experiment is there at the end of the notebook. ","815419b0":"1. 2. manipulating data with pandas","ba423b26":"We change the format of age , freqtram and fqvelo from string to integer.","afbcb184":"**a.Configuring data related to the chosen attributes**\n\n\n","4cb3275b":"1. 1. 2. studying the trip's duration variation:\nLet's see if we have missing data for the \"duree\" attribute. ","e57ef15a":"## Q3. Which is the release where _UpVote_ attribute from _Users_ item is more spread?","8b5eed86":"# 1. **Manipulating the data of the first collection:**","6d1975aa":"### Q1.1 Effort to answer the question","df14a2b8":"* **Statistics releated to the duration of the trips:**","7eec3039":"### Q6.1 Effort to answer the question","05e5b0f9":"* The average of using the bicycle by men is higher than the total average\n* The average of the use the bicycle by women is slightly lower than the total average","55339b7c":"As we can see, the \"duree\" value is always equal to the difference between arrival time and the departure time. So we don't have illogical duration values.  ","b6fdf48f":"We can iliminate this variable 'nbarret' since 99,84% of data related to this variable are missing. ","e940dacc":"From the table above we can assume that we have more than half of the data (8486 samples) with missing values for \"ENERGIE2\", \"AN_VP2\", \"PUIS_VP2\", \"POSSES2\", \"LIEU_STAT2\", \"TYPE_STAT2\".\t","888e72fc":"## Q6 Will missing, null, and default values bias observation of trends?","90c94cf2":"# Exploring Views","6840b9ee":"We calculate the average of using tram than we see the average of the use of each sexe.","6d5a492a":"### Second Release View","15700994":"This collection is composed of 15206 samples and 47 attributes. the number of samles in this collections is smaller than the other collections however the number of attributes is higher.\nFrom a first look we can say that there is probably a lot of missing data in this collection, so let's check it out.","62f31739":"### Q5.1 Effort to answer the question","6b7bac74":"## Q4. Which attribute from _Posts_ item can be used to compute answers' popularity and author's reputation (started answered and authors)","cd19a4d6":"**2. Introduction and description of the collection**\n\nAs we see this collection represents the data related to persons: each row represents a person and we give data describing this movements specificties and his caracteristics a person( type of transport used , age , sexe..etc)\n\nWe will study the following attributes :\n\n* age\n* sexe\n* freqtram which represents the frequency of using tram by the person\n* fqvelo which represents the frequency of using bicycle by the person","4df7e154":"Let's group the samples by \"zoneorig\"and sort them in decreasing way:","2da86f24":"Now we can assume that in the first collection 'DP1' is always equal to 3. So we keep that in mind, but we should remove this variable since it won't make any difference between the samples in order to decrease the complexity of the dataframe.","9b8da2c8":"we notice that most of the trips duration is located between 1 and 120","4837933b":"Interpretations:\n* As we can see most of trips begin in the day and not in the night which is so normal, since most people work in day shifts.\n* We can confirm also our previous observation : most trips begin in [7h,8h] or in [16h,18h] which are actually the hours of going to work or school and going back from them.","6d6087de":"To show the name of each collectionwe type the following script:","576c0634":"Let's make sure that there is no false duration (\"duree\") values in our collection. ","256bcd5d":"### Q7.1 Effort to answer the question","a15e8c02":"let's see some samples of the first collection to understand our data:","1e685d64":"Let's group the samples by \"tir\"and sort them in decreasing way:","bd819f80":"### Execution time","4cb9aef2":"**1. 1. Querying with Pymongo:**","223f8b3d":"In order to view an exemple of each collection's sample we type the following script:","d0697dc4":"## Q7. Choose the attributes that can be used as sharging keys to fragment the release using a hash based and an interval based strategy","0c520b84":"We can iliminate this variable 'motdeacc' since 90,32% of data related to this variable are missing. ","b739036e":"Let's see how many samples we have in this collection :","ddea036c":"* **The third collection**","087eeb05":"we notice that half of the deplacements have a duration that does not exceed 15 minutes.","44f76c90":"## Get Match Results","f6c9c2b3":"Let's transform our collection into a data frame ","acc63e41":"From the table above we can assume that we have 14994 samples with missing values for'ENERGIE4','AN_VP4', 'PUIS_VP4', 'POSSES4', 'LIEU_STAT4' and 'TYPE_STAT4' attributes. So we can remove this attributes. We have most samples(14804) with \"Etu\" value equal to 1, and 14816 samples with \"Gare2\" value equal to 38. So we should keep this in mind and remove those attributes .","7cdd0f76":"As we have seen previously, we can remove the \"DP1\" variable to decrease the complexity of our data,and since most informations are not available for the \"nbarret\" variable we should remove it as well. The \"_id\" variable is unique for every sample and automatically generated by mongodb so it doesn't help us to better understand our data so we will remove it too. ","70daa6d0":"## Q5. Which is\/are the attribute(s) that can be used to identify the most trendy topic addressed in the release?","a2c5d2ba":"**hypothesis**\n\n> We suppose that the sexe 1 is reffering to males and 2 to females ==>we have 8658 males and 9038 females in our data.","9a7f416d":"### First Release View","1ed6c533":"We can notice the same thing when grouping the arrival time of the trips : \n* the departure time whith the highest number of trips represent the hour of going to the work or school and out of the work or school\n* the data contains some samples with an hour of arrival equal to 25,26 , 27 or 28 which confirms that our collection contains trips that happened in more than one day.\nIn order to confirm this observations we will make a histogram to show the number of trips for every arrival hour.\n    ","05a3d215":"There is 17696 rows : each row represents a person and there is 36 columns which represent our variables.","e34e1372":"Let's see a sample of the second collection","9a7a0cc2":"This project is made by : HAMROUNI Wissal\n                          CHEBAANE Souleima\n                          RABOUDI Houda","b23e83b5":"Only 143 samples in our collection with a departure time bigger than 24, so only 143 samples of the next day are included in our collection. We can suggest that the samples of the trips are collected begin between 00:00 of the first day and 3:00 of the next day.","be784c80":"we notice also that :\n* the top values of departure represent the hour of going to the work and out of the work as well as the lunch hours.\n* the data contains some samples with an hour of departure equal to 25,26 or 27 which means that our collection contains trips that happened in more than one day.\nIn order to confirm this observations we will make a histogram to show the number of trips for every departure hour.","d14d9683":"1. 1. 1. evaluating the variables : ","0c138d7c":"We delete the columns that we dont have information about their freqtram and fqvelo","29a5d2d3":"For the first collection we will begin with **querying the data with Pymongo** to exctract important information ( the number of samples , the different attributes and the availability of the related data in the collection) then we will **manipulate the data using Pandas** in order to convert the collection into a data frame and remove the irrelevant columns. We will focus on the \"duree\" attribute, study its variation, the outliers and how it is related to \"heuredep\" and \"heurearr\" attributes.","76784827":"### Q4.1 Effort to answer the question","024a128f":"the minimum duration of a trip is 1 and the maximal duration is 750. Compared to the mean and median we can consider the maximum duration to be an outlier.","f08514b4":"**Compare the arrival hours and the departure hours of the trips**\nNow let's compare the arrival hours and the departure hours of the trips on one day. To do so let's just consider the trips with departure time less than 24h.","e8b21af6":"***1. The use of tram***","c7479bcb":"In a data with 63336 lines we have only 385 deplacement with a duration that take more than 2 hours so we can work on the data that have a duration less than 2 hours.","09077ad8":"**Interpretation**\n\n* Both men and women have a high frequency of using the tram : 90% of men used the tram with a frequency of 5 and 89% of women uses the tram with a frequency of 5.","30d437ea":"# Tasks","dd38bfb6":"* **Statistics releated to the departure time and arrival time of the trips:**","62d0ec31":"* **Missing variables**","29622b14":"Description:\n* In blue, we find the histogram of the hour of the departure of the trips.\n* In indianred, we find the histogram of the hour of arrival of the trips.\n* In purple, we find the two graphs overlayed. \n\nInterpretation:\n* In this graph, we have no trips arrival in the intervals of time [8h:9h],[13h:14h] and [18h:19h], since there is only blue columns. So, we can assume that [8h:9h],[13h:14h] and [18h:19h] are rush hours, it's almost sure that if a trip begins in those intervals of time it will last at least one hour. ","c4462bf7":"From the table above we can assume that we have 14038 samples with missing values for \"AN_VP3\",\t\"PUIS_VP3\",\t\"POSSES3\", \"LIEU_STAT3\", \"TYPE_STAT3\", \"GENRE4\", \"GENRE3\"and\"ENERGIE3 attributes. So we can remove this attributes.","a370b1f7":" First of all let's convert our collection to a dataframe in order to better visualize it."}}