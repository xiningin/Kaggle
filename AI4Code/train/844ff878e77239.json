{"cell_type":{"f53e0ecb":"code","0f5065f6":"code","ea4da326":"code","a078bf87":"code","edc9614f":"code","32ee1f30":"markdown","d0cf91ce":"markdown","0bb0e182":"markdown","293ea4da":"markdown","b4f74d3c":"markdown","d55d2641":"markdown"},"source":{"f53e0ecb":"from IPython.display import YouTubeVideo\nYouTubeVideo('sDG5tPtsbSA', width=800, height=450)","0f5065f6":"from os.path import join\n\nimage_dir = '..\/input\/dog-breed-identification\/train\/'\nimg_paths = [join(image_dir, filename) for filename in \n                           ['0c8fe33bd89646b678f6b2891df8a1c6.jpg',\n                            '0c3b282ecbed1ca9eb17de4cb1b6e326.jpg',\n                            '04fb4d719e9fe2b6ffe32d9ae7be8a22.jpg',\n                            '0e79be614f12deb4f7cae18614b7391b.jpg']]","ea4da326":"import numpy as np\nfrom tensorflow.python.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.python.keras.preprocessing.image import load_img, img_to_array\n\nimage_size = 224\n\ndef read_and_prep_images(img_paths, img_height=image_size, img_width=image_size):\n    imgs = [load_img(img_path, target_size=(img_height, img_width)) for img_path in img_paths]\n    img_array = np.array([img_to_array(img) for img in imgs])\n    output = preprocess_input(img_array)\n    return(output)","a078bf87":"from tensorflow.python.keras.applications import ResNet50\n\nmy_model = ResNet50(weights='..\/input\/resnet50\/resnet50_weights_tf_dim_ordering_tf_kernels.h5')\ntest_data = read_and_prep_images(img_paths)\npreds = my_model.predict(test_data)","edc9614f":"from learntools.deep_learning.decode_predictions import decode_predictions\nfrom IPython.display import Image, display\n\nmost_likely_labels = decode_predictions(preds, top=3, class_list_path='..\/input\/resnet50\/imagenet_class_index.json')\n\nfor i, img_path in enumerate(img_paths):\n    display(Image(img_path))\n    print(most_likely_labels[i])","32ee1f30":"# Introduction\n\nAt the end of this lesson, you will be able to write TensorFlow and Keras code to use one of the best models in computer vision.\n\n# Lesson\n","d0cf91ce":"### Function to Read and Prep Images for Modeling","0bb0e182":"# Exercise\nNow you are ready to **[use a powerful TensorFlow model](https:\/\/www.kaggle.com\/kernels\/fork\/3349935)** yourself.","293ea4da":"# Sample Code\n\n### Choose Images to Work With","b4f74d3c":"### Visualize Predictions","d55d2641":"### Create Model with Pre-Trained Weights File. Make Predictions"}}