{"cell_type":{"2d713730":"code","fde263fd":"code","f19a97a5":"code","3e6c270a":"code","6e532e3b":"code","2876a8b9":"code","a360a9a5":"code","8bf08d9f":"code","32a430cc":"code","144aded8":"code","081a63ea":"code","924cc3f5":"code","0ad2e21b":"code","fe714489":"code","b23ad81d":"code","74296d07":"code","316b6be8":"code","66321bf4":"code","f3599bfb":"code","6f3d9d4b":"code","2340b1fe":"code","52cb6900":"code","e31e6d6c":"code","fc7458f2":"code","1dea8a36":"code","480d88f5":"code","0e8b49b3":"code","d84e5437":"code","25378a88":"code","91e510b2":"code","ae18b0d4":"code","62915282":"code","b3216c51":"code","c2c9e4eb":"code","da66090c":"code","60a4178c":"code","9506ab6d":"code","dc7d9cc4":"code","4c724efe":"code","d3de030e":"code","a82c53eb":"code","25cb9327":"code","b8acfa0d":"code","4a09a1a7":"code","fcfe8527":"markdown","980fdda0":"markdown","6f8cb7b5":"markdown","d37c9b9b":"markdown","0d258ede":"markdown","b453f4f8":"markdown","e2c7b83b":"markdown","bec47348":"markdown","a5b217d7":"markdown","81743005":"markdown","ef48a690":"markdown","0f867f20":"markdown","86c63ebb":"markdown","74e1c93a":"markdown","15553870":"markdown"},"source":{"2d713730":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.simplefilter(\"ignore\")","fde263fd":"df = pd.read_csv(\"..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")\ndf.head()","f19a97a5":"df.info()","3e6c270a":"# Checking if there are any missing values in the dataset\ndf.isna().sum()","6e532e3b":"# Having a look at the correlation matrix\n\nfig, ax = plt.subplots(figsize=(10,6)) \nsns.heatmap(df.corr(), annot=True, fmt='.1g', cmap=\"viridis\", cbar=False);","2876a8b9":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.countplot(df[\"DEATH_EVENT\"], palette=[\"seagreen\",\"firebrick\"]);","a360a9a5":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.distplot(df[\"age\"], color=\"r\");\nplt.show()","8bf08d9f":"plt.style.use(\"seaborn\")\nfig, ax = plt.subplots(figsize=(8,6))\ncolors = [\"lightcoral\", \"maroon\"]\nplt.pie(df[\"high_blood_pressure\"].value_counts(), labels=[\"Normal Blood Pressure\", \"High Blood Pressure\"],\n        explode = (0.1,0), shadow=True, colors=colors);","32a430cc":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.countplot(df[\"diabetes\"], palette=[\"skyblue\", \"deepskyblue\"]);","144aded8":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.countplot(df[\"anaemia\"], palette=[\"olivedrab\",\"darkolivegreen\"]);","081a63ea":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.countplot(df[\"sex\"], palette=[\"pink\", \"skyblue\"],);","924cc3f5":"plt.style.use(\"seaborn\")\nfig, ax = plt.subplots(figsize=(8,6))\ncolors = [\"mediumorchid\", \"darkorchid\"]\nplt.pie(df[\"smoking\"].value_counts(), labels=[\"Non-Smoker\", \"Smoker\"],\n        explode = (0.05,0), shadow=True, colors=colors);","0ad2e21b":"df.head()","fe714489":"# X data\nX = df.drop(\"DEATH_EVENT\", axis=1)","b23ad81d":"X.head()","74296d07":"# y data\ny = df[\"DEATH_EVENT\"]","316b6be8":"y.head()","66321bf4":"# Splitting the data into X train, X test and y train, y test\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=4)","f3599bfb":"len(X_train), len(X_test)","6f3d9d4b":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier(random_state=4)","2340b1fe":"rfc.fit(X_train, y_train)","52cb6900":"rfc.predict(X_test)","e31e6d6c":"np.array(y_test)","fc7458f2":"RandomForestClassifierScore = rfc.score(X_test,y_test)\nprint(\"Accuracy obtained by Random Forest Classifier model:\", RandomForestClassifierScore*100)","1dea8a36":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()","480d88f5":"lr.fit(X_train, y_train)","0e8b49b3":"lr.predict(X_test)","d84e5437":"np.array(y_test)","25378a88":"LogisticRegressionScore = lr.score(X_test,y_test)\nprint(\"Accuracy obtained by Logistic Regression model:\", LogisticRegressionScore*100)","91e510b2":"from sklearn.tree import DecisionTreeClassifier\ntree = DecisionTreeClassifier()\ntree.fit(X_train,y_train)","ae18b0d4":"DecisionTreeClassifierScore = tree.score(X_test,y_test)\nprint(\"Accuracy obtained by Decision Tree Classifier model:\",DecisionTreeClassifierScore*100)","62915282":"from sklearn.ensemble import GradientBoostingClassifier\ngb = GradientBoostingClassifier()\ngb.fit(X_train, y_train)","b3216c51":"GradientBoostingClassifierScore = gb.score(X_test,y_test)\nprint(\"Accuracy obtained by Gradient Boosting Classifier model:\",GradientBoostingClassifierScore*100)","c2c9e4eb":"from catboost import CatBoostClassifier\ncat = CatBoostClassifier(iterations=10)\ncat.fit(X_train, y_train);","da66090c":"CatBoostClassifierScore = cat.score(X_test,y_test)\nprint(\"Accuracy obtained by CatBoost Classifier model:\",CatBoostClassifierScore*100)","60a4178c":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(4)\nknn.fit(X_train, y_train)","9506ab6d":"KNeighborsClassifierScore = cat.score(X_test,y_test)\nprint(\"Accuracy obtained by K Neighbors Classifier model:\",KNeighborsClassifierScore*100)","dc7d9cc4":"plt.style.use(\"classic\")\nx = [\"LogisticRegression\", \n     \"Decision Tree Classifier\", \n     \"RandomForestClassifier\", \n     \"KNeighborsClassifier\", \n     \"CatBoost Classifier\", \n     \"Gradient Boosting Classifier\"]\n\ny = [LogisticRegressionScore, \n     DecisionTreeClassifierScore, \n     RandomForestClassifierScore, \n     KNeighborsClassifierScore, \n     CatBoostClassifierScore, \n     GradientBoostingClassifierScore]\n\nfig, ax = plt.subplots(figsize=(8,6))\nsns.barplot(x=x,y=y, palette=\"crest\");\nplt.xlabel(\"Models\")\nplt.ylabel(\"Model Accuracy\")\nplt.xticks(rotation=40)\nplt.title(\"Model Comparison - Model Accuracy\");","4c724efe":"from sklearn.model_selection import GridSearchCV\n\nparam_grid = [\n    {\n      \"penalty\": [\"l1\", \"l2\", \"elastic\", \"none\" ],\n      \"C\" : np.logspace(-4, 4, 20),\n      \"solver\" : [\"sag\", \"saga\", \"lbfgs\", \"liblinear\", \"newton-cg\"],\n      \"max_iter\" : [100, 1000, 2500, 5000]\n    }\n]","d3de030e":"clf = GridSearchCV(lr, param_grid=param_grid, cv=5, verbose=True, n_jobs=-1)","a82c53eb":"best_clf = clf.fit(X_train,y_train)","25cb9327":"best_clf.best_estimator_","b8acfa0d":"best_clf.best_params_","4a09a1a7":"print(f\"Accuracy of the Logistic Regression Model after doing GridSearchCV: {best_clf.score(X_test,y_test):.3f}\")","fcfe8527":"## Decision Tree Classifier","980fdda0":"## Random Forest Classifier","6f8cb7b5":"## Gradient Boosting Classifier","d37c9b9b":"## Splitting the data into training and test datasets\nHere, we are trying to predict the `Death` of the patient using the given data. \nHence, the `DEATH_EVENT` will be the y label and the rest data will be the `X` or the input data.","0d258ede":"## Hyperparameter Tuning","b453f4f8":"The average age of the patients seems to be between `55 to 75 years`. With the maximum age being 95 and the minimum being 40 years.","e2c7b83b":"## Training the Model\n","bec47348":"# Heart Failure \ud83e\ude7a EDA + Predictions","a5b217d7":"Majority of the patients having the problem are `Male`.","81743005":"## Importing Libraries","ef48a690":"## CatBoost Classifier","0f867f20":"#### If you like my work, It will be really great of you to upvote this notebook!\n#### If not then you leaving a comment on what do I need to work on and improve will be really helpful!","86c63ebb":"## Logistic Regression","74e1c93a":"## K Neighbors Classifier","15553870":"## Loading up the data"}}