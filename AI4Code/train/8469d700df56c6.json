{"cell_type":{"e01c9bd3":"code","002062a9":"code","3b4fa32d":"code","ba9d07dd":"code","41ac4593":"code","b15128e0":"code","06fb1c14":"code","66ec097b":"code","075515e5":"code","3e5d9063":"code","6aac3991":"code","8749293e":"code","5ef850ae":"code","197720eb":"code","1cba786a":"code","9c733ec2":"code","c859d6b2":"code","811afe32":"code","3a996336":"code","86a0b2ad":"code","3a108985":"markdown","54a994d2":"markdown"},"source":{"e01c9bd3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n# importing libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","002062a9":"coursera=pd.read_csv('..\/input\/coursera-course-dataset\/coursea_data.csv',thousands=',')","3b4fa32d":"# some basic information about dataset\ncoursera.info()","ba9d07dd":"# lets check the first five rows of the dataset\ncoursera.head()","41ac4593":"# as you can see there is the column named 'course_students_enrolled' \n# having k with each value lets change this with 1000 so, that column look normal\ncoursera['course_students_enrolled']=coursera['course_students_enrolled'].replace({'k': '*1e3', 'm': '*1e6'}, regex=True).map(pd.eval).astype(int)\n# print first five rows of column 'course_students_enrolled'\ncoursera['course_students_enrolled'][:5]","b15128e0":"# histgram of course rating\nrating=coursera.course_rating\nstudent_enrolled=coursera.course_students_enrolled\nrating.hist()","06fb1c14":"# histogram of student enrollment in the courses\nstudent_enrolled=coursera.course_students_enrolled\nstudent_enrolled.hist()","66ec097b":"# rename the column\ncoursera=coursera.rename(columns={'Unnamed: 0':'unknown'})\n# as unknown column is not needed so drop this column\ncoursera=coursera.drop(['unknown'],axis=1)\ncoursera.head()","075515e5":"# check the null values\ncoursera.isnull().sum()","3e5d9063":"# unique course title\ncourse_title1=coursera.course_title.unique()\nprint(len(course_title1)) # print total(value) unique title \nprint(course_title1) # print the unique titles","6aac3991":"# lets check how many organization in the dataset\norganization=coursera.course_organization.unique()\norganization\nlen(organization)\nfor i,item in enumerate(organization):\n    print(i+1,' ',item)","8749293e":"# take a look on University of Michigan for example checking the how many courses from this university etc.\n\nUOM=coursera[coursera['course_organization']=='University of Michigan']\n# print(UOM)\n# how many courses and specialization by university of michigan\nlen(UOM)","5ef850ae":"# now take a look on course certificate type of university of michigan\nUOM['course_Certificate_type'].value_counts()","197720eb":"# lets check total strenght of students enrolled in all courses of university of michigan\nUOM['course_students_enrolled'].sum()","1cba786a":"# so, lets check the top 10 courses which have greater enrollment of students in university of michigan.\ncourse_enrolled=UOM[['course_title','course_students_enrolled']]\n# Now, time to check the top ten courses or specialization which have greater students enrolled\ntop_enrolled=course_enrolled.nlargest(10,['course_students_enrolled'])\ntop_enrolled\n# bar plot for these courses\nx=top_enrolled['course_title']\ny=top_enrolled['course_students_enrolled']\nplt.figure(figsize=(8,5))\nbar_color=['#D2691E','FireBrick','#4682B4','#778899','#66CDAA','cyan','pink','#90EE90','MediumPurple','Plum']\nplt.barh(x,y,color=bar_color)\nplt.gca().invert_yaxis()\nplt.xlabel('student enrolled')\nplt.title('Most students enrolled in the courses of university of michigan')\nplt.show()","9c733ec2":"# lets check the course difficulty of courses of university of michigan\nUOM['course_difficulty'].value_counts()","c859d6b2":"# lets check course_difficulty of the courses and specialization of university of michigan or \n# check which course on which course_difficulty\n\nm=pd.DataFrame(UOM.groupby(['course_difficulty','course_title']).groups)\nm.T","811afe32":"# checking the top four organization along with particular course_title who have higher number of student enrolled\norganization_enrolled=coursera[['course_organization','course_title','course_students_enrolled']]\ntop_enrolled=organization_enrolled.nlargest(5,['course_students_enrolled'])\ntop_enrolled\n\n# plotting\norganization=top_enrolled['course_organization']\nenrolled=top_enrolled['course_students_enrolled']\nplt.figure(figsize=(9,3))\nsns.barplot(x=organization,y=enrolled)\nplt.show()","3a996336":"# as we can see the stanford university on the top of who getting maximum student enrolled in one particulr course\n\n# lets check the which university organization have how many courses on coursera\norganization=coursera['course_organization'].value_counts().sort_values(ascending=False)\norganization=organization.head(5)\norganization=organization.reset_index()\norganization.columns=['course_organization','number of courses']\n\nplt.barh(organization['course_organization'],organization['number of courses'])\nplt.gca().invert_yaxis()","86a0b2ad":"# now its time to check the top 5 organization who have maximum student enrollment in all the courses \n# they have on the coursera\ntotal_enrollment=pd.DataFrame(coursera.groupby(['course_organization'])['course_students_enrolled'].sum().sort_values(ascending=False))\ntotal_enrollment=total_enrollment[:5]\nprint(total_enrollment)\n\n# plotting\nx=total_enrollment.index\ny=total_enrollment['course_students_enrolled']\nplt.figure(figsize=(8,6))\nplt.barh(x,y)\nplt.gca().invert_yaxis()\nplt.title('top organizations which have maximum enrollments in all their courses on coursera')\nplt.show()","3a108985":"### Now again Exploring according to whole dataset","54a994d2":"### Exploring University of Michigan (I have taken the courses on coursera)"}}