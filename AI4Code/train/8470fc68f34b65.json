{"cell_type":{"7b95c1a0":"code","8e8abb3b":"code","1a8022b7":"code","32572e23":"code","f38f1237":"code","5b24dbc9":"code","d1fbe682":"code","20c3f11a":"code","aafd5df8":"code","9fd85b18":"code","251f3b6b":"code","50240a17":"code","19d1eedd":"code","5470a2a0":"code","bf838c69":"code","768b43ee":"code","267c289c":"code","e52f5d2b":"code","d3b8de56":"code","fabd86df":"code","6a593740":"code","cdf47dae":"code","d54d86eb":"code","e16f3a36":"code","2b8d3d87":"markdown","9b62fdd0":"markdown"},"source":{"7b95c1a0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\/\"))\n\n# Any results you write to the current directory are saved as output.\n# Added Resnet34 dataset","8e8abb3b":"# Put these at the top of every notebook, to get automatic reloading and inline plotting\n%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","1a8022b7":"# This file contains all the main external libs we'll use\nfrom fastai import *\nfrom fastai.vision import *","32572e23":"PATH = \"..\/input\/art-images-drawings-painting-sculpture-engraving\/art_dataset_cleaned\/art_dataset\/\"\nPATH_OLD = \"..\/input\/art-images-drawings-painting-sculpture-engraving\/musemart\/dataset_updated\/\"\nTMP_PATH = \"\/tmp\/tmp\"\nMODEL_PATH = \"\/tmp\/model\/\"\nsz=200","f38f1237":"# GPU required\ntorch.cuda.is_available()","5b24dbc9":"torch.backends.cudnn.enabled","d1fbe682":"os.listdir(PATH + 'training_set')","20c3f11a":"files = os.listdir(f'{PATH}training_set\/engraving')[:5]\nfiles","aafd5df8":"img = plt.imread(f'{PATH}training_set\/engraving\/{files[0]}')\nplt.imshow(img);","9fd85b18":"img.shape","251f3b6b":"img[:4,:4]","50240a17":"# Fix to enable Resnet to live on Kaggle\ncache_dir = os.path.expanduser(os.path.join('~', '.torch'))\nif not os.path.exists(cache_dir):\n    os.makedirs(cache_dir)\nmodels_dir = os.path.join(cache_dir, 'models')\nif not os.path.exists(models_dir):\n    os.makedirs(models_dir)","19d1eedd":"cp ..\/input\/resnet34\/resnet34.pth \/tmp\/.torch\/models\/resnet34-333f7ec4.pth","5470a2a0":"#arch=resnet34\ntfms = get_transforms(do_flip=False)\ndata = ImageDataBunch.from_folder(PATH, train='training_set', valid='validation_set', ds_tfms=tfms, size=sz, num_workers=0)\n\n#data = ImageClassifierData.from_paths(PATH, trn_name='training_set', val_name='validation_set', tfms=tfms_from_model(arch, sz))","bf838c69":"# All the images that hit an OS error - Not needed with the cleaned data set\n#imagesL = {}\n#printIt = []\n\n#for foldername in data.classes:\n#    imagesL.update({foldername : os.listdir(PATH + 'training_set\/' + foldername)})\n#for key in imagesL:\n#    for image in imagesL[key]:\n#            try:\n#                img = open_image(PATH + 'training_set\/' + key + \"\/\" + image) \n#            except OSError:\n#                printIt.append(\"deleting \" + PATH + 'training_set\/' +  key + \"\/\" + image + str(OSError))\n#                #Read only data set so can't - os.remove(PATH + 'training_set\/' + key + \"\/\" + image, dir_fd=None)\n#print(printIt)\n\n","768b43ee":"data.show_batch(rows=3, figsize=(6,6))","267c289c":"#def simple_learner(): return Learner(data, simple_cnn((3,16,16,2)), metrics=[accuracy], model_dir=MODEL_PATH)\n#learn = simple_learner()","e52f5d2b":"#learn.lr_find(learn, start_lr=1e-6, end_lr=1e-1)","d3b8de56":"learn = create_cnn(data, models.resnet34, metrics=accuracy, model_dir=MODEL_PATH)\n","fabd86df":"learn.fit_one_cycle(4,1e-2)\nlearn.recorder.plot()","6a593740":"learn.recorder.plot_losses()","cdf47dae":"preds,y,losses = learn.get_preds(with_loss=True)\ninterp = ClassificationInterpretation(data, preds, y, losses)\ninterp.plot_top_losses(9, figsize=(14,14))\n## Showing the top losses -> worst predictions ##","d54d86eb":"interp.plot_confusion_matrix()","e16f3a36":"## Showing the most confused preditions \n# - Engravings are often confused with drawings and vice versa\ninterp.most_confused(slice_size=10)","2b8d3d87":"This is as far as I got for now...","9b62fdd0":"My first attempt at reusing the Fast ai with an image set.\n\nStarted with the original Fast ai library... had issues with bad images.\nI have cleaned up the dataset... but now my new problem is that fast ai has moved to 1.0...  and just trying t figure it out..\n\nA strange learning rate graph which I would like to know more about..\nThe accurate turned out about 90% and the confusion matrix looks good.\n"}}