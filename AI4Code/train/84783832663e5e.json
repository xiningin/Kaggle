{"cell_type":{"893a9796":"code","4c1de7a1":"code","661588c5":"code","b4f3ac2b":"code","95ec9a55":"code","09c8b6fa":"code","bc4812aa":"code","f83318d0":"code","3b2e6c3b":"code","282fc227":"code","e0c324f8":"code","cf25994d":"code","8d707fb5":"code","4500dec2":"code","f4ba085f":"code","e22cd15d":"code","32a34491":"code","30cafcd7":"code","c4971229":"code","c00b0f70":"code","bae03921":"code","58233afb":"code","ab9ec0ad":"code","8e7dbd75":"code","ba58d361":"code","3142a32b":"code","dedd7b35":"code","9f50e8f4":"markdown","bd8476b9":"markdown","a4c2584f":"markdown","061b04b0":"markdown","0a8b9d74":"markdown","7966af56":"markdown","04934aba":"markdown","ccb23f70":"markdown","7d65a20d":"markdown","0150a9d3":"markdown","4abf9e18":"markdown","69d53dca":"markdown","e3fcc3ff":"markdown"},"source":{"893a9796":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom pylab import rcParams\nfrom fbprophet import Prophet\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\n\nimport seaborn as sns\nworldometers=pd.read_csv('..\/input\/corona-virus-report\/worldometer_data.csv')\nworldometersnew=worldometers[['Country\/Region','TotalCases','TotalDeaths','TotalRecovered','Serious,Critical']].copy()\nworldometersnew.head()\nworldometersnew.iloc[0:10].style.background_gradient(cmap='Reds')\n","4c1de7a1":"\n\nsns.set_style(\"whitegrid\")\ntimeseries=pd.read_csv('..\/input\/corona-virus-report\/day_wise.csv')\ntimeseriesnew=timeseries[['Date','New cases']].copy()\ntimeseriesnew['Date']=pd.to_datetime(timeseriesnew['Date']) \n\ntimeseriesnew.head()\n","661588c5":"timeseriesnew['month'] = timeseriesnew['Date'].apply(lambda x: x.month)\ntimeseriesnew.set_index('Date', inplace= True)\ntimeseriesnew=timeseriesnew.fillna(method='ffill')\n\ntimeseriesnew.sample(10)","b4f3ac2b":"timeseriesyear=timeseriesnew.copy()\ntsf=timeseriesnew.loc['2020-04-16':'2020-07-25'].copy()\ntsf.drop('month', axis=1,inplace=True)\nplt.figure(figsize=(25,8))\nplt.plot(tsf)\nplt.title('Daily New Cases')\nplt.xlabel('Daily Cases From January 2020 To July 2020 : Each Column Grid Represents Half of a Month')\nplt.ylabel('Number Of Cases : Time Series')\nplt.show()","95ec9a55":"tsf['Date'] = tsf.index\ndf_train = tsf[tsf['Date'] < \"2020-07-08\"]\ndf_valid = tsf[tsf['Date'] >= \"2020-07-08\"]\ntsf.head()","09c8b6fa":"model_fbp=Prophet()\nmodelres=model_fbp.fit(df_train[[\"Date\", \"New cases\"]].rename(columns={\"Date\": \"ds\", \"New cases\": \"y\"}))\nforecast = model_fbp.predict(df_valid[[\"Date\", \"New cases\"]].rename(columns={\"Date\": \"ds\"}))\ndf_valid[\"Forecast Prediction\"] = forecast.yhat.values","bc4812aa":"plt.figure(figsize=(20,8))\n\n\nplt.plot(df_valid[[\"New cases\"]])\nplt.plot(df_valid[\"Forecast Prediction\"],color='Green')\nplt.plot(df_train[[\"New cases\"]])\nplt.title(\"New Cases\")\nplt.legend(['Actual Increase of Cases', 'New Cases Predicted By the Model','Fitted Model on Training set'], loc='upper left')\n","f83318d0":"from pandas.tseries.offsets import DateOffset\nfuture_dates=[tsf.index[-1]+ DateOffset(days=x)for x in range(0,30)]\nfuture_datest_df=pd.DataFrame(index=future_dates[1:],columns=tsf.columns)\nfuture_datest_df['Date'] = future_datest_df.index\nfuture_datest_df.head(10)","3b2e6c3b":"future_df=pd.concat([tsf,future_datest_df])\n\ndf_trains = future_df[future_df['Date'] < \"2020-07-20\"]\ndf_valids = future_df[future_df['Date'] >= \"2020-07-06\"]\nfuture_df.tail()","282fc227":"model_fbp=Prophet()\nmodelres=model_fbp.fit(df_trains[[\"Date\", \"New cases\"]].rename(columns={\"Date\": \"ds\", \"New cases\": \"y\"}))\nforecast = model_fbp.predict(df_valids[[\"Date\", \"New cases\"]].rename(columns={\"Date\": \"ds\"}))\ndf_valids[\"Forecast Prediction\"] = forecast.yhat.values","e0c324f8":"plt.figure(figsize=(20,8))\n\n\nplt.plot(df_valids[\"Forecast Prediction\"],color='Green')\nplt.plot(df_train[[\"New cases\"]])\nplt.title(\"New Cases for the month of August\")\nplt.legend(['New Cases Predicted By the Model','Fitted Model on Training set'], loc='upper left')\n","cf25994d":"timeseries=pd.read_csv('..\/input\/corona-virus-report\/day_wise.csv')\ntimeseriesnew=timeseries[['Date','New recovered']].copy()\n\ntimeseriesnew['Date']=pd.to_datetime(timeseriesnew['Date']) \n\ntimeseriesnew.head()\ntimeseriesnew['month'] = timeseriesnew['Date'].apply(lambda x: x.month)\ntimeseriesnew.set_index('Date', inplace= True)\ntimeseriesnew=timeseriesnew.fillna(method='ffill')\n\ntimeseriesyear=timeseriesnew.copy()\ntsf=timeseriesnew.loc['2020-04-16':'2020-07-15'].copy()\ntsf.drop('month', axis=1,inplace=True)\nplt.figure(figsize=(20,8))\nplt.plot(tsf)\nplt.title('Daily Recovered Cases')\nplt.xlabel('Daily Recovering Cases From January 2020 To July 2020 : Each Column Grid Represents Each Month')\nplt.ylabel('Number Of Cases : Time Series')\n\nplt.show()","8d707fb5":"tsf['Date'] = tsf.index\ndf_train = tsf[tsf['Date'] < \"2020-07-07\"]\ndf_valid = tsf[tsf['Date'] >= \"2020-07-07\"]\ntsf.head()","4500dec2":"model_fbp=Prophet()\nmodelres=model_fbp.fit(df_train[[\"Date\", \"New recovered\"]].rename(columns={\"Date\": \"ds\", \"New recovered\": \"y\"}))\nforecast = model_fbp.predict(df_valid[[\"Date\", \"New recovered\"]].rename(columns={\"Date\": \"ds\"}))\ndf_valid[\"Forecast Prediction\"] = forecast.yhat.values","f4ba085f":"plt.figure(figsize=(20,8))\n\nplt.plot(df_valid[[\"New recovered\"]])\nplt.plot(df_valid[\"Forecast Prediction\"],color='Green')\nplt.plot(df_train[[\"New recovered\"]])\nplt.title(\"New Recovered Cases\")\nplt.legend(['Actual Recovered Cases', 'Recovered Cases Predicted By the Model','Fitted Model on Training set'], loc='upper left')\n","e22cd15d":"from pandas.tseries.offsets import DateOffset\nfuture_dates=[tsf.index[-1]+ DateOffset(days=x)for x in range(0,30)]\nfuture_datest_df=pd.DataFrame(index=future_dates[1:],columns=tsf.columns)\nfuture_datest_df['Date'] = future_datest_df.index\nfuture_datest_df.head(10)","32a34491":"future_df=pd.concat([tsf,future_datest_df])\n\ndf_trains = future_df[future_df['Date'] < \"2020-07-15\"]\ndf_valids = future_df[future_df['Date'] >= \"2020-07-06\"]\nfuture_df.tail()","30cafcd7":"model_fbp=Prophet()\nmodelres=model_fbp.fit(df_trains[[\"Date\", \"New recovered\"]].rename(columns={\"Date\": \"ds\", \"New recovered\": \"y\"}))\nforecast = model_fbp.predict(df_valids[[\"Date\", \"New recovered\"]].rename(columns={\"Date\": \"ds\"}))\ndf_valids[\"Forecast Prediction\"] = forecast.yhat.values","c4971229":"plt.figure(figsize=(20,8))\n\n\nplt.plot(df_valids[\"Forecast Prediction\"],color='Green')\nplt.plot(df_train[[\"New recovered\"]])\nplt.title(\"New Cases for the month of August\")\nplt.legend(['New Cases Predicted By the Model','Fitted Model on Training set'], loc='upper left')\n","c00b0f70":"timeseries=pd.read_csv('..\/input\/corona-virus-report\/day_wise.csv')\ntimeseriesnew=timeseries[['Date','New deaths']].copy()\ntimeseriesnew['Date']=pd.to_datetime(timeseriesnew['Date']) \n\ntimeseriesnew.head()\ntimeseriesnew['month'] = timeseriesnew['Date'].apply(lambda x: x.month)\ntimeseriesnew.set_index('Date', inplace= True)\ntimeseriesnew=timeseriesnew.fillna(method='ffill')\n\ntimeseriesyear=timeseriesnew.copy()\ntsf=timeseriesnew.loc['2020-04-16':'2020-07-15'].copy()\ntsf.drop('month', axis=1,inplace=True)\nplt.figure(figsize=(25,8))\nplt.plot(tsf)\nplt.title('Daily New Deaths')\nplt.xlabel('Daily Deaths From January 2020 To July 2020 : Each Column Grid Represents Each Month')\nplt.ylabel('Number Of Cases : Time Series')\nplt.show()","bae03921":"tsf['Date'] = tsf.index\ndf_train = tsf[tsf['Date'] < \"2020-06-30\"]\ndf_valid = tsf[tsf['Date'] >= \"2020-06-30\"]\ntsf.head()","58233afb":"model_fbp=Prophet()\nmodelres=model_fbp.fit(df_train[[\"Date\",'New deaths']].rename(columns={\"Date\": \"ds\", \"New deaths\": \"y\"}))\nforecast = model_fbp.predict(df_valid[[\"Date\", \"New deaths\"]].rename(columns={\"Date\": \"ds\"}))\ndf_valid[\"Forecast Prediction\"] = forecast.yhat.values","ab9ec0ad":"plt.figure(figsize=(20,8))\n\nplt.plot(df_valid[[\"New deaths\"]])\nplt.plot(df_valid[\"Forecast Prediction\"],color='Green')\nplt.plot(df_train[[\"New deaths\"]])\nplt.title(\"New Deaths\")\nplt.legend(['Actual Increase of Deaths', 'New Deaths Predicted By the Model','Fitted Model on Training set'], loc='upper left')\n","8e7dbd75":"from pandas.tseries.offsets import DateOffset\nfuture_dates=[tsf.index[-1]+ DateOffset(days=x)for x in range(0,30)]\nfuture_datest_df=pd.DataFrame(index=future_dates[1:],columns=tsf.columns)\nfuture_datest_df['Date'] = future_datest_df.index\nfuture_datest_df.head(10)","ba58d361":"future_df=pd.concat([tsf,future_datest_df])\n\ndf_trains = future_df[future_df['Date'] < \"2020-06-27\"]\ndf_valids = future_df[future_df['Date'] >= \"2020-06-27\"]\nfuture_df.tail()","3142a32b":"model_fbp=Prophet()\nmodelres=model_fbp.fit(df_trains[[\"Date\", \"New deaths\"]].rename(columns={\"Date\": \"ds\", \"New deaths\": \"y\"}))\nforecast = model_fbp.predict(df_valids[[\"Date\", \"New deaths\"]].rename(columns={\"Date\": \"ds\"}))\ndf_valids[\"Forecast Prediction\"] = forecast.yhat.values","dedd7b35":"plt.figure(figsize=(20,8))\n\n\nplt.plot(df_valids[\"Forecast Prediction\"],color='Green')\nplt.plot(df_train[[\"New deaths\"]])\nplt.title(\"New Deaths Prediction for the month of August\")\nplt.legend(['New Deaths Predicted By the Model','Fitted Model on Training set'], loc='upper left')\n","9f50e8f4":"# August Deaths Prediction","bd8476b9":"# Fitting & Prediction","a4c2584f":"# August Month New Cases Prediction\n\n**Creating new dataset for the month of august with null values inorder for the model to predict**","061b04b0":"#### Couldn't help with nan because worldometers haven't disclosed them.","0a8b9d74":"#### Indexed the date for plotting","7966af56":"# August Recovered Cases Prediction","04934aba":"### First of all, this is my second implementation. I had implemented ARIMA already in one of my previous notebooks and it had failed to predict. I have done FB Prophet in this and it is showing really great results. ","ccb23f70":"#### Created a new dataframe from the old dataframe only containing Date & cases","7d65a20d":"# Train & Test set splitting","0150a9d3":"**Deaths also seem to increase**\n\n**Your feedback is much appreciated**","4abf9e18":"# EDA & Time Series Model Using Facebook Prophet","69d53dca":"**Created a duplicate column date**","e3fcc3ff":"**The cases seem to spike for the month of august.**"}}