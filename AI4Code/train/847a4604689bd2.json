{"cell_type":{"2bb4f380":"code","50567bfa":"code","8dee08a7":"code","cce109a4":"code","2a21aa2a":"code","6e93c139":"code","e6aaaee9":"code","61986181":"code","44164b8c":"code","610f5a4f":"code","b4b62247":"code","d9589eaf":"code","7de9e7e6":"code","0aff9575":"code","0ab3b220":"code","36a4ebae":"code","014a24cc":"code","e9b3f6a3":"code","0c6dee47":"code","b008e68f":"code","0a3d6d4a":"code","fc183358":"markdown","218063a6":"markdown","81784643":"markdown","ce4b3b4c":"markdown","e2fb7b53":"markdown","ee9973d4":"markdown"},"source":{"2bb4f380":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt \nimport plotly.graph_objects as go\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session \n\n#Pip Install Guide \n#pip install xlrd \n#pip install openpyxl\n#pip install urlopen\n","50567bfa":"pip install urlopen","8dee08a7":"pip install openpyxl","cce109a4":"pip install xlrd ","2a21aa2a":"df = pd.DataFrame(pd.read_excel(\"..\/input\/crime-ratio-in-malaysia-20172019\/Bab 1 - Jenayah indeks 2020 v1.xlsx\"))\ndf","6e93c139":"df.columns = df.columns.str.strip()\ndf17=df.loc[(df.Year == 2017)] #We only want 2017 \ndf17 =df17.reset_index(drop=True) #Resetting the Index ","e6aaaee9":"fig = px.bar(df17.iloc[1:] , x='State', y='Total Cases', hover_data=['Violent crime', 'Property crime'],width = 1000,\n             color='Total Cases',title=\"Table 1 : Total Cases throughout each state in Malaysia in 2017\")\nfig","61986181":"df_crime = pd.DataFrame(pd.read_excel(\"..\/input\/crime-ratio-in-malaysia-20172019\/Bab 1 - Jenayah indeks 2020 v1.xlsx\", sheet_name=\"1.2 Crime Index Ratio\"))\ndf_crime.columns = df_crime.columns.str.strip()\ndf_crime[\"Crime index ratio\"]= df_crime[\"Crime index ratio\"].round(decimals=2)\ndf_crime","44164b8c":"fig2 = px.bar(df_crime.iloc[3:] , x='State', y='Crime index ratio', hover_data=['Crime Index', 'Pop(1000)',\"Year\"],width= 900, \n             color='Crime Index',title=\"Table 2 : Crime Index Ratio throughout 2017-2019\")\nfig2","610f5a4f":"df_kl = pd.DataFrame(pd.read_excel(\"..\/input\/crime-ratio-in-malaysia-20172019\/Bab 1 - Jenayah indeks 2020 v1.xlsx\", sheet_name=\"1.7 KL\"))\ndf_kl.columns = df_kl.columns.str.strip()\ndf_kl= df_kl.replace(\"-\",0)\ndf_kl19 = df_kl[(df_kl['Year'] == 2019) ].reset_index(drop=True)\ndf_kl19 = df_kl19.drop(\"Year\", axis=1)\ndf_kl19","b4b62247":"df_kl19_wm= df_kl19.iloc[5]\ndf_kl19_wm = pd.DataFrame(df_kl19_wm)\ndf_kl19_wm2 = df_kl19_wm.iloc[2:]\ndf_kl19_wm2=df_kl19_wm2.reset_index()\ndf_kl19_wm2.rename(columns = {5:\"Total\",\"index\":\"Cases\"},inplace=True)\nfig = px.treemap(df_kl19_wm2 ,values=df_kl19_wm2.columns[1],path =[\"Cases\"] , width=600,height=700,\n                 title=\"Table 3 : The Amount of cases in Wangsa Maju \", color_discrete_sequence = px.colors.sequential.RdBu)\n\nfig.show()","d9589eaf":"from urllib.request import urlopen\nimport json","7de9e7e6":"from urllib.request import urlopen\nwith urlopen('https:\/\/raw.githubusercontent.com\/nullifye\/malaysia.geojson\/master\/malaysia.state.geojson') as response:\n    my_map = json.load(response)","0aff9575":"state_id_map={}\nfor feature in my_map['features']:\n    state_id_map[feature['properties']['State']] = feature['id']\n\n#Rename the all the names from the JSON file \nrename =[\"Kuala Lumpur\",\"Labuan\",\"Putrajaya\",\"Johor\",\"Kedah\",\"Kelantan\",\"Melaka\",\n         \"Negeri Sembilan\",\"Pahang\",\"Pulau Pinang\",\"Perak\",\"Perlis\",\"Sabah\",\"Sarawak\",\"Selangor\",\"Terengganu\"]\nstate_id_map = dict(zip(rename , list(state_id_map.values())))  \n\n#Taking only 2019 Data \ndf19_c =df_crime.loc[(df_crime.Year == 2019)]  \ndf19_c= df19_c.reset_index(drop=True) \ndf19_c= df19_c.loc[1:].reset_index(drop=True) \n\ndf19_c","0ab3b220":"df19_c[\"id\"]=df19_c[\"State\"].apply(lambda x : state_id_map[x])\nfig = px.choropleth(\n    df19_c,\n    locations=\"id\",width=700,\n    geojson=my_map,\n    color=\"Crime index ratio\",\n    hover_name=\"State\",\n    hover_data=[\"Crime Index\",\"Pop(1000)\"],\n    title=\"Table 4 :Crime Index Ratio throughout Malaysia in 2019\")\nfig.update_geos(fitbounds=\"locations\", visible=False)\nfig.show()","36a4ebae":"df_negeri = pd.read_excel('..\/input\/labour-force-by-sex-19822019\/Labour force by sex (82-19) ALL CLEAN.xlsx', sheet_name=None)\n\nfull_tables = pd.DataFrame()\nfor name, sheet in df_negeri.items():\n    sheet['sheet'] = name\n    sheet = sheet.rename(columns=lambda x: x.split('\\n')[-1])\n    sheet.columns = sheet.columns.str.strip() #get rid of white space on the names of the columns \n    full_tables = full_tables.append(sheet)#append each of those sheets \n\nfull_tables.reset_index(inplace=True, drop=True)\nfull_tables.dropna(how='all',axis=1,inplace=True) #Dropping Null values only on columns with Null Values \nfull_tables","014a24cc":"full_tables.dropna(inplace=True)\nfull_tables= full_tables.astype({'Year': 'int32'})\nfull_tables","e9b3f6a3":"sheets=full_tables.loc[:,\"sheet\"] #change the Sheet Name \nfull_tables[\"sheet\"] = list(map(lambda i: i[ : -3], sheets)) #Get rid of (M) and (f) \nfull_tables = full_tables.loc[full_tables['sheet'] == 'KL'] #Fill only KL \nfull_tables.reset_index(drop=True) #drop Null values \nfull_tables = full_tables.loc[full_tables['Year'] > 2016] #Only take 2017,2018,2019 \nfull_tables= full_tables.groupby(\"Year\")[\"Labour force\",\"Employed\",\"Unemployed\",\"Outside labour force\",\"sheet\"].sum().reset_index() #combine both the KLs into this ","0c6dee47":"full_tables","b008e68f":"kl_crime= df_crime.loc[df_crime[\"State\"]==\"Kuala Lumpur\"].drop(columns=\"State\")\nkl_crime","0a3d6d4a":"trace1 = go.Bar(\n                x = full_tables.Year,\n                y = full_tables[\"Unemployed\"],\n                name = \"Unemployed\",\n                marker = dict(color = 'rgba(0,0,205)',\n                             line=dict(color='rgb(0,0,0)',width=2)))\n\ntrace2 = go.Bar(\n                x = kl_crime.Year,\n                y = kl_crime[\"Crime index ratio\"],\n                name = \"Crime Index Ratio\",\n                marker = dict(color = 'rgba(255, 0, 0, 0.6)',\n                              line=dict(color='rgb(0,0,0)',width=2)))\ntrace3 = go.Bar(\n                x = full_tables.Year,\n                y = full_tables[\"Employed\"],\n                name = \"Employed\",\n                marker = dict(color = 'rgba(0,139,69,19)',\n                             line=dict(color='rgb(0,0,0)',width=2)))\ndata = [trace1,trace3,trace2]\nlayout = go.Layout(barmode = \"group\",title=\"Table 5: Comparison between Employed & Unemployed and Crime Index Ratio in KL ( 2017-2019)\",xaxis={'title': 'Year'},yaxis={'title': 'Population (1000)'})\nfig = go.Figure(data = data, layout = layout)\nfig ","fc183358":"# Total Number of Cases in Malaysia ","218063a6":"## Chlopleth Map of Crime Rates in Malaysia \n\nHere a a visual cholropleth map based on each states Crime Index Ratio as of 2019 ","81784643":"# Comparison between Employed & Unemployed and Crime Index Ratio in Kuala Lumpur and Malaysia \n<img src=\"https:\/\/bfmcms.s3.amazonaws.com\/websiteimages\/currentaffairs-2017-05-23-CA-unemployment.JPG\"\/> \n\n### This is a simple comparison chart between between Employed and Unemployed people in Kuala Lumpur(2017-2019) that goes against Crime Index Ratio .  ","ce4b3b4c":"# Overall Crime Rates in Malaysia \n<img src=\"https:\/\/www.malaysiantalk.com\/CMS\/Documents\/Article\/4404\/tarikkk.jpg\"\/>\n\n\n### The reason why I want to tackle this type of cause is due to the fact the question of how safe is living in Malaysia especially due to the rising cases of unemployed people during COVID-19 . \n\n### Unfortunately , all the data that is shown here are from the Department of Statistics Malaysia (DOSM) and Data.com.my where it was recently shown the number of cases between 2017 to 2019 . ","e2fb7b53":"## Crime Activity in Kuala Lumpur \n<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/f\/fc\/Moonrise_over_kuala_lumpur.jpg\"\/>\n\n\n### Approximately 54% of people worldwide now live in cities from World Urbanization Prospects report. With an estimate this will grow to 2\/3 of world population in the next 15-30 years. How can we ensure the safety of our urban areas as the population of people living in dense urban cities like Penang , Kuala Lumpur and Johor Bahru will be overcrowded. \n\n### Shown below are the types of theft in selected PDRM District, along with a treemap on the all the thefts occured in Wangsa Maju which is the district where I live . ","ee9973d4":"# Crime Index Ratio throughout Malaysia \n\n> The Crime index ratio measures the Crime Index per 100,000 population "}}