{"cell_type":{"c7c1c8b4":"code","69dada45":"code","b96b096e":"code","8cbbf706":"code","2b1d1ed6":"code","645580fa":"code","51cf9443":"code","f7c7336a":"code","4c2c0549":"code","965ada85":"code","1c4057e3":"code","698db266":"code","af535e4f":"markdown","87b7a8de":"markdown","c1ef7a8c":"markdown","913094be":"markdown","6117cdbd":"markdown","d01700ad":"markdown","5cbbbe14":"markdown","9690812a":"markdown"},"source":{"c7c1c8b4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy import stats\nfrom scipy.optimize import minimize","69dada45":"df = pd.read_csv(\"..\/input\/spain-salary-distribution\/spain_salary_distribution.csv\")\ndf.sample(15)","b96b096e":"filter_df = lambda y,s,g: (df.iloc[:,1] == y) & (df.iloc[:,2] == s) & (df.iloc[:,3] == g)\ndf_filter = filter_df('nationwide','both','median')\ndf_filter2 = filter_df('nationwide','both','mean')\ndf_filter3 = filter_df('nationwide','both','lower_quartile')\ndf_filter4 = filter_df('nationwide','both','upper_quartile')\ndf_filter5 = filter_df('nationwide','both','90th_percentile')\ndf_filter6 = filter_df('nationwide','both','10th_percentile')","8cbbf706":"fig = plt.figure(figsize=(20,10))\naxes = plt.gca()\naxes.set_xlim([2008,2017])\naxes.set_ylim([5000,50000])\n\nplt.plot(df[df_filter][\"year\"],df[df_filter][\"gross_income_euros\"],label='Median')\nplt.plot(df[df_filter2][\"year\"],df[df_filter2][\"gross_income_euros\"],label=\"Mean\")\nplt.plot(df[df_filter3][\"year\"],df[df_filter3][\"gross_income_euros\"],label='Lower quartile')\nplt.plot(df[df_filter4][\"year\"],df[df_filter4][\"gross_income_euros\"],label='Upper quartile')\nplt.plot(df[df_filter5][\"year\"],df[df_filter5][\"gross_income_euros\"],label='90th percentile')\nplt.plot(df[df_filter6][\"year\"],df[df_filter6][\"gross_income_euros\"],label='10th percentile')\nplt.title('Statistic of gross salaries per year and person')\nplt.legend(loc='upper left')\nplt.grid()\nplt.ylabel('Gross salary (euros)')\nplt.xlabel('Year')\nplt.show()","2b1d1ed6":"quantiles = [0.1,0.25,0.5,0.75,0.9]\nz = stats.norm.ppf(quantiles)\nz","645580fa":"xq = [9000,14000,20000,30000,42000]","51cf9443":"# scipy parametrization. mu calculated as in (1)\nloc = np.log(20000) # (1): mu = log(median)\n\n# Define the error function as in (3)\nerror = lambda sigma: sum((zi - (np.log(xqi)-loc)\/sigma)**2 for zi,xqi in zip(z,xq))\n\n# Initial guess as in (4)\nsigma = lambda mean, mu: (2*(np.log(mean)-mu))**0.5\nx0 = sigma(30000,loc)\n\n# Minimize it. res.x contains the value of the parameter\nres = minimize(error, x0=x0, method='Nelder-Mead', tol=1e-6)\nres.x","f7c7336a":"sigma(30000,np.log(20000)) # x0 as the starting point above","4c2c0549":" t = pd.concat([df[df_filter][\"gross_income_euros\"],\n          df[df_filter2][\"gross_income_euros\"],\n          df[df_filter3][\"gross_income_euros\"],\n          df[df_filter4][\"gross_income_euros\"],\n          df[df_filter5][\"gross_income_euros\"],\n          df[df_filter6][\"gross_income_euros\"]])\n\n# Generate samples from the calculated distribution to make plots\nq = np.arange(0.1,0.91,0.01)\nx = stats.lognorm.ppf(q,s=res.x,scale=20000)","965ada85":"# Map statistics in words to numbers\npmap = {\"upper_quartile\" : 0.75,\n        \"lower_quartile\" : 0.25,\n        \"median\" : 0.5,\n        \"90th_percentile\" : 0.9,\n        \"10th_percentile\" : 0.1,\n        \"mean\" : np.nan}\n\ndf[\"percentile\"] = df[\"statistic\"].apply(lambda s: pmap.get(s))","1c4057e3":"fig = plt.figure(figsize=(20,10))\naxes = plt.gca()\n\nplt.plot(df[df_filter][\"gross_income_euros\"],df[df_filter][\"percentile\"])\nplt.plot(df[df_filter3][\"gross_income_euros\"],df[df_filter3][\"percentile\"])\nplt.plot(df[df_filter4][\"gross_income_euros\"],df[df_filter4][\"percentile\"])\nplt.plot(df[df_filter5][\"gross_income_euros\"],df[df_filter5][\"percentile\"])\nplt.plot(df[df_filter6][\"gross_income_euros\"],df[df_filter6][\"percentile\"])\nplt.scatter(xq,quantiles)\nplt.plot(x,q)\n\nplt.title('Lognormal distribution fitted to data')\nplt.grid()\nplt.xlabel('Gross salary (euros)')\nplt.ylabel('CDF')\nplt.show()","698db266":"xinc = np.arange(8000,43000,100)\nfig = plt.figure(figsize=(13,6))\nplt.plot(xinc, stats.lognorm.pdf(xinc,s=res.x,scale=20000))\nplt.xlabel('Gross income in euros')\nplt.ylabel('pdf(x)')\nplt.grid()\nplt.title('Probability density function of a lognormal distribution fitted to income data')\nplt.show()","af535e4f":"Since we know $\\mu$ by (1), $X_q$ and $q$ by data, and $Z$ by calculation, we can compute sigma by minimizing the squared error in (2):\n\n$$ Error(\\sigma) = \\sum_i^n \\left(z_i - \\frac{log(x_{qi}) - \\mu}{\\sigma} \\right)^2 \\qquad (3)$$","87b7a8de":"We are given statistics about the gross income in euros, per person for Spain. We have in the attribute statistic:\n\n- The 10th percentile - 10t_percentile.\n- The lower quartile - lower_quartile.\n- The median - median.\n- The mean - mean.\n- The upper quartile - upper_quartile.\n- The 90th percentile - 90th_percentile.\n\nThese statistics are seggregated by:\n- Gender.\n- Year.\n- State.\n\nIn this notebook I will just explore total national incomes, but the analysis could be extended much futher, for example to gender, year and state.","c1ef7a8c":"Which is close to the optimized value of 0.594, and thus is a good initial guess for an starting point.\n\nThis is only one of the many possible ways of estimating the parameters of the distribution. I used this method since we were given quantiles and not the sampled data. So the idea is to fit the quantiles to the CDF of the lognormal distribution.","913094be":"Now associate values of the income to those quantiles, which we can do visually by looking at the plot above so, approximately:","6117cdbd":"$x0$ is an estimate of the parameter being minimized. I set it to one by using the formula:\n\n$$ mean = exp\\left(\\mu + \\frac{\\sigma^2}{2}\\right) \\implies \\sigma^2 = 2log(mean) - 2\\mu \\qquad (4)$$\n\nSince we know the mean (data) and $\\mu$ we can use (4) to find a educated guess of $\\sigma$ as the starting point for the optimization algorithm:","d01700ad":"As can be seen from the plot of the cumulative distribution function, the lognormal distribution fits the data accurately. One would have to perform hypothesis tests to asses formally if the lognormal distribution fits the data accurately, however, as can be seen in the plots it is likely not necessary and is left as an expanding exercise. Now that we have the distribution and its parameters we can compute any value and its percentiles. This can be useful to estimate how much can the country expect to collect in taxes from this range of the population, or to asses where does a person lie in the salary distribution, which could be useful to stablish public aid programs. Notice also that the mode is around 13000 euros, which means that most frequent value for the income of a person in Spain is approximately 980 euros per month after taxes.\n\nThis concludes the exploratory basic analysis and the fitting of the data to a parametric distribution. There are many interesting questions to be answered using this data. But we now know where does a particular salary lie in the overall distribution for the majority of the working population.","5cbbbe14":"### Fitting data to a lognormal distribution\n\n\n$ X \\sim Lognorm(\\mu, \\sigma^2) $\n\nI suppose that the income is distributed lognormally between the 10th and 90th percentiles. To find the parameters of the distribution, I use the analytic formula for the median of the distribution:\n\n$$ median = e^\\mu \\implies \\mu = log(median) \\qquad (1)$$\n\nFor the standard deviation ($\\sigma$), we know since it is a lognormal distribution that:\n\n$$ q = P(X \\leq x_q) = \\Phi\\left(Z \\leq \\frac{log(x_q) - \\mu}{\\sigma}\\right) \\qquad (2)$$\n\nThe quantiles are given and the logarithm of their respective values follow a normal distribution, so we can standardize the income random variable and find the corresponding values of the standard normal random variable that corresponds to those quantiles.","9690812a":"### Spain gross income distribution per person\n\nIn this notebook I will develop on an application of the lognormal distribution.\n\n  Data of gross income per person in euros for Spain is fitted to a [lognormal distribution](https:\/\/en.wikipedia.org\/wiki\/Log-normal_distribution). The distribution of income has been succesfully modeled in economics for up to approximately 95% of the population of a country using a lognormal model. Data downloaded from Spain's [National Institute of Statistics](https:\/\/www.ine.es\/index.htm) (INE - Instituto Nacional de Estad\u00edstica) will be used to estimate the paremeters of the distribution.\n  \n  In order to understand the method used to derive the parameters of the distribution one should know what is:\n  - Normal distribution.\n  - Standard normal distribution.\n  - Lognormal distribution.\n  - Quantiles.\n  - Logarithms and exponents.\n  - Basic optimization."}}