{"cell_type":{"06feb018":"code","524f93bb":"code","7bf85763":"code","369df4f1":"code","596ae5e8":"code","a75facbd":"code","16de8894":"code","8f393723":"code","646d90a8":"code","580a6bc6":"code","dff89e18":"code","71b806b8":"code","96039aad":"code","f9f5514f":"code","f107729d":"code","9de71ce9":"code","119351ab":"code","7a95307f":"code","7da880f7":"code","c8cc6e0b":"code","57826b5c":"code","443f174f":"code","c936fad5":"code","e0ce6fc6":"code","705b8480":"code","7f12e450":"code","3cb585db":"code","62ec8e7b":"code","d9273263":"code","5cf7e4ec":"code","334b3e94":"code","279f72d8":"code","990e908e":"code","ff80ab20":"code","294b7b22":"code","d9e1b17d":"code","6b7bfba2":"code","8ea65ce5":"code","1ed1b443":"code","3143b835":"markdown","c3828049":"markdown","beb45f79":"markdown","12115ffe":"markdown","2e139ad4":"markdown","5be333d3":"markdown","a0590050":"markdown","df230c9f":"markdown","ed8ee72a":"markdown","8fb5be73":"markdown","cd0e8fb4":"markdown","5609d745":"markdown","7be6535f":"markdown","7a4744b9":"markdown","c82019e4":"markdown","2b74e2a7":"markdown","597df56e":"markdown","641515b0":"markdown","937d65dc":"markdown","35b67b0b":"markdown","35aea90b":"markdown","a1255f6f":"markdown","ff031c7b":"markdown"},"source":{"06feb018":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","524f93bb":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns\n","7bf85763":"train=pd.read_csv(\"\/kaggle\/input\/home-data-for-ml-course\/train.csv\")\ntrain.head()\n","369df4f1":"test=pd.read_csv(\"\/kaggle\/input\/home-data-for-ml-course\/test.csv\")\ntest.head()","596ae5e8":"#list of categorical values.ie, text values\nS=train.dtypes=='object'\ncat_features=list(S[S].index)\ncat_features","a75facbd":"train_values=train.select_dtypes(exclude=['object']).copy()\ntrain_values.info()","16de8894":"test_values=test.select_dtypes(exclude=['object']).copy()\ntest_values.info()","8f393723":"col_missing_values=[col for col in train_values.columns if train_values[col].isnull().any()]\ncol_missing_values\n","646d90a8":"for col in col_missing_values:\n    mode=train_values[col].mode()\n    print(\"mode is\",mode[0])\n    train_values[col].fillna(value=mode[0],inplace=True)\ntrain_values.info() \n","580a6bc6":"col_missing_values=[col for col in test_values.columns if test_values[col].isnull().any()]\ncol_missing_values","dff89e18":"for col in col_missing_values:\n    mode=test_values[col].mode()\n    print(\"mode is\",mode[0])\n    test_values[col].fillna(value=mode[0],inplace=True)\ntest_values.info() ","71b806b8":"mapping=train_values.corr() # this is df with non Categorical features\nmapping","96039aad":"fig, ax = plt.subplots(figsize=(20,20))\nsns.heatmap(train_values.corr())\n\n","f9f5514f":"corr_series=mapping['SalePrice'].sort_values(ascending=False)\n#print(corr_series.index)\ncorr_series","f107729d":"#features=[row for row in corr_series.index if corr_series[row]>0 and corr_series[row]!=1 ]","9de71ce9":"train_cat=train[cat_features].copy()\ntrain_cat.head()","119351ab":"train_cat.info()","7a95307f":"NA_as_notpresent=[\"Alley\",'MasVnrType','BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2','FireplaceQu','GarageType','GarageFinish','GarageQual','GarageCond','PoolQC',\n 'Fence','MiscFeature']\nNA_as_notavail= cat_features.copy()\n\nfor word in NA_as_notpresent:\n    NA_as_notavail.remove(word)\n","7da880f7":"print(\"Features in which NA means Not present: \",NA_as_notpresent,\"\\n\\n\\n\",\"Features in which NA means Not a value :\",NA_as_notavail)\nprint(len(NA_as_notpresent+NA_as_notavail))","c8cc6e0b":"len(cat_features)","57826b5c":"test_cat=test[cat_features].copy()\ntest_cat.info()","443f174f":"for col in NA_as_notpresent :\n    train_cat[col].fillna(\"None\",inplace=True)\n    test_cat[col].fillna(\"None\",inplace=True)\n    \nfor  col in NA_as_notavail:\n    train_cat[col].fillna(train_cat[col].mode()[0],inplace=True)\n    test_cat[col].fillna(test_cat[col].mode()[0],inplace=True)","c936fad5":"train_cat.info()","e0ce6fc6":"test_cat.info()","705b8480":"!pip install dython\nfrom dython import nominal\n#nominal.associations(df,figsize=(20,10),mark_columns=True);","7f12e450":"Cat_new_df=train_cat.copy()","3cb585db":"Cat_new_df.insert(0, 'SalePrice', train[\"SalePrice\"])","62ec8e7b":"nominal.associations(Cat_new_df,figsize=(25,25),mark_columns=True);","d9273263":"from sklearn.preprocessing import LabelEncoder\ntest_cat1=test_cat.copy()\nlabel_encoder=LabelEncoder()\nfor col in list(test_cat.columns):\n    test_cat1[col]=label_encoder.fit_transform(test_cat[col])","5cf7e4ec":"test_cat1.head()","334b3e94":"train_cat1=train_cat.copy()\nlabel_encoder=LabelEncoder()\nfor col in list(train_cat.columns):\n    train_cat1[col]=label_encoder.fit_transform(train_cat[col])","279f72d8":"train_cat1.head()","990e908e":"train_values.drop([\"Id\"],axis=1,inplace=True)\ntest_values.drop([\"Id\"],axis=1,inplace=True)\ntrain_values.drop([\"SalePrice\"],axis=1,inplace=True)\n#train_values.head()\n#test_values.head()\n","ff80ab20":"y=train[\"SalePrice\"]\ny.head()","294b7b22":"X=pd.concat([train_values,train_cat1],axis=1)\nfinal_test=pd.concat([test_values,test_cat1],axis=1)","d9e1b17d":"X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.20, random_state=50)\nX_train.info()","6b7bfba2":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\nregr_Forest_model= RandomForestRegressor(max_depth=20, random_state=1)\nregr_Forest_model.fit(X_train,y_train )\nval_predictions = regr_Forest_model.predict(X_val)\nprint(mean_absolute_error(y_val, val_predictions))","8ea65ce5":"test_predict = regr_Forest_model.predict(final_test)\ntest_predict","1ed1b443":"output = pd.DataFrame({'Id': test.Id,\n                      'SalePrice': test_predict})\noutput.to_csv('submission.csv', index=False)\n","3143b835":"Divided into train,validation dataset using sklearn train_test_split","c3828049":"Random forest regrssor is used to find out the predicted values ","beb45f79":"Lets first see the training data and testing data","12115ffe":"Positive correlation means both are going in the same direction","2e139ad4":"Read Training and testing data set using Pandas","5be333d3":"Dataframe for submission","a0590050":"Now we will merege both Numericals data features and vectorised categorical data feature and will make a new data frame","df230c9f":"Correlation heatmap between Categorical variables and target continous variable using dython library   https:\/\/pypi.org\/project\/dython\/\n","ed8ee72a":"Directly we cannot put strings into ML algos we need to convert them into vector we can do that by using label encoding","8fb5be73":"Missing values for Test data for numerical columns would be handled the same way","cd0e8fb4":"Now lets check for the correlation between target and the different training features","5609d745":"Dython library for Ploting Correlation heatmap between Categorical variables and SalePrice i.e Target variable.","7be6535f":"Handling missing values for numerical columns in Training data, Replace the missing value with most occured value i.e mode","7a4744b9":"We wii now focus on only Numerical data types for time being ","c82019e4":"Now we will focus on Categorical data on training and testing dataset","2b74e2a7":"In the heat map it is shown that some columns are important for the Saleprice prediction have positive correlation with it.","597df56e":"Whatever features we select for training data, we need to keep in mind that Testing data must have the same features. ","641515b0":"we will see those columns with missing values i.e NaN values ","937d65dc":"Model is used to predict output of test data","35b67b0b":"Lets handles the NA values, for NA_as_notpresent list we replace NAN values with \"none\" because it will requires a string to represent some kind of data and for NA_as_notavail list these values are actually not recorded so we will take the max occured values i.e the mode.","35aea90b":"Import various modules Pandas,Matplotlib, Numpy etc. etc","a1255f6f":"# Those high null values are actually not null. If we see the description of the data we can find out for some columns NA means not available i.e the facility is not present at home.So I have divided that into 2 list one with NA means Not available and in other NA means No value present (or str there).","ff031c7b":"We will now first check out the numericals columns only for Training and Testing datasets and later we focus on Categorical features columns and later we concatenate them."}}