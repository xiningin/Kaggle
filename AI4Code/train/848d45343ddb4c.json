{"cell_type":{"ca177a86":"code","0ee8233b":"code","b39ecdb8":"code","6d3783c9":"code","7c072804":"code","e783ef3c":"code","4c66488c":"code","8a83e00b":"code","6744a5cf":"code","b801f0e6":"code","65f2df60":"code","0f30f7fd":"code","6d4d556e":"code","ce7dbb15":"code","f142669c":"code","8b130cd8":"code","01627016":"code","8a569e7c":"code","3b0c0a5e":"code","63993e6f":"code","07f086e5":"code","fa587982":"code","04b42ccc":"code","c19c235f":"markdown","bc212279":"markdown","2eddde27":"markdown","c7c95b4f":"markdown"},"source":{"ca177a86":"#Machin_Learning\n#K_means\n#Kmeans","0ee8233b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report, plot_confusion_matrix\nfrom sklearn.metrics import precision_recall_curve, plot_precision_recall_curve, plot_roc_curve\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn import metrics\n%matplotlib inline","b39ecdb8":"df=pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')","6d3783c9":"df.head()","7c072804":"df.info()","e783ef3c":"df.describe()","4c66488c":"df.shape","8a83e00b":"df.drop(['CustomerID','Gender','Age'],axis=1,inplace=True)","6744a5cf":"df.head()","b801f0e6":"print('Annual Income',df['Annual Income (k$)'].unique())\nprint('Spending Score',df['Spending Score (1-100)'].unique())","65f2df60":"sns.countplot(data=df, x='Annual Income (k$)')","0f30f7fd":"sns.countplot(data=df, x='Spending Score (1-100)')","6d4d556e":"df.isnull().sum().sum()","ce7dbb15":"df.corr()","f142669c":"sns.pairplot(data=df)","8b130cd8":"scaler=StandardScaler()\nscaler.fit(df)","01627016":"scaler_train=scaler.transform(df)","8a569e7c":"objective_function=[] \nfor i in range(1,11):\n    clustering=KMeans(n_clusters=i, init='k-means++')\n    clustering.fit(scaler_train)\n    objective_function.append(clustering.inertia_)\n#inertia is calculaing min intra cluster distance\n# objective function contains min intra cluster distances \nobjective_function","3b0c0a5e":"plt.plot(range(1,11),objective_function)\nplt.title('The Elbow Method')\nplt.xlabel('Number of Clusters K')\nplt.ylabel('objective_function')\nplt.show()","63993e6f":"# Training the model with optimal no of clusters\nclustering=KMeans(n_clusters=5,init='k-means++',random_state=0)\nlabels=clustering.fit_predict(scaler_train)\n# x and y  coordinates of all clusters\n# Centroids of clusters\nclustering.cluster_centers_[:]","07f086e5":"# visualizing the clusters\nplt.scatter(scaler_train[labels==0,0],scaler_train[labels==0,1],c='green',label='cluster1')\nplt.scatter(scaler_train[labels==1,0],scaler_train[labels==1,1],c='yellow',label='cluster2')\nplt.scatter(scaler_train[labels==2,0],scaler_train[labels==2,1],c='red',label='cluster3')\nplt.scatter(scaler_train[labels==3,0],scaler_train[labels==3,1],c='orange',label='cluster4')\nplt.scatter(scaler_train[labels==4,0],scaler_train[labels==4,1],c='blue',label='cluster5')\nplt.scatter(tuned_clustering.cluster_centers_[:,0],tuned_clustering.cluster_centers_[:,1],s=300,c='black',label='centroid')\nplt.title('Clusters of customers')\nplt.xlabel('Annual Income(K$)')\nplt.ylabel('Spending Score(1\u2013100)')\nplt.legend()\nplt.show()","fa587982":"clustering.inertia_","04b42ccc":"plt.scatter(x=df['Annual Income (k$)'],y=df['Spending Score (1-100)'],cmap='brg')","c19c235f":"# K-means Clustering tuninig","bc212279":"# Normalization Data","2eddde27":"# Import and print the dataset","c7c95b4f":"# Exploratory Data Analysis"}}