{"cell_type":{"9d3f9d83":"code","962d5e51":"code","5fe336e0":"code","c6a6d799":"code","8986bd6b":"code","4c7227b3":"code","dd561b15":"code","5f3c38ba":"code","bd01e8bc":"code","ea78358d":"code","023c40e1":"code","7d19da67":"markdown","fa6bd48d":"markdown"},"source":{"9d3f9d83":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nprint(os.listdir('..\/input'))\n\n# Any results you write to the current directory are saved as output.","962d5e51":"data = pd.read_csv('..\/input\/uncover\/UNCOVER\/harvard_global_health_institute\/hospital-capacity-by-state-20-population-contracted.csv')","5fe336e0":"# dataframe from dictionary\ncountry = [\"France\", \"Turkey\", \"Germany\", \"Spain\"]\npopulation = [\"15\", \"20\", \"32\", \"50\"]\nlist_label = [\"country\", \"population\"]\nlist_col = [country, population]\nzipped = list(zip(list_label, list_col))\ndata_dict=dict(zipped)\ndf = pd.DataFrame(data_dict)\ndf","c6a6d799":"### Add new columns\ndf[\"capital\"] = [\"Paris\", \"Ankara\", \"Berlin\", \"Madrid\"]\ndf","8986bd6b":"#broadcasting\ndf[\"income\"]=0#broadcasting entire column\ndf","4c7227b3":"data.head()\ndata.info()","dd561b15":"#Plotting all data\ndata1 = data.loc[:,[\"total_hospital_beds\", \"available_hospital_beds\", \"potentially_available_hospital_beds\"]]\ndata1.plot()\n\n#For another column\ndata2 = data.loc[:,[\"percentage_of_potentially_available_icu_beds_needed_six_months\", \"percentage_of_potentially_available_icu_beds_needed_twelve_months\", \"percentage_of_potentially_available_icu_beds_needed_eighteen_months\"]]\ndata2.plot()","5f3c38ba":"#Subplots\ndata1.plot(subplots=True)\nplt.show()\n\ndata2.plot(subplots=True)\nplt.show()","bd01e8bc":"### Scatter plot\ndata.plot(kind = \"scatter\", x=\"available_icu_beds\", y = \"potentially_available_icu_beds\")\nplt.show()","ea78358d":"#Hist plot (measure the frequency)\ndata.plot(kind = \"hist\", y = \"potentially_available_icu_beds\", bins = 50, range = (0, 250))\n","023c40e1":"#Histogram subplot with non cumulative and cumulative\nfig, axes = plt.subplots(nrows = 2, ncols = 1)\ndata.plot(kind = \"hist\", y = \"potentially_available_icu_beds\", bins = 50, range = (0, 250),  ax = axes[0])\ndata.plot(kind = \"hist\", y = \"potentially_available_icu_beds\", bins = 50, range = (0, 250),  ax = axes[1], cumulative = True)\nplt.savefig('graph.png')\nplt\n\n#For another column\nfig, axes = plt.subplots(nrows = 2, ncols = 1)\ndata.plot(kind = \"hist\", y = \"available_icu_beds\", bins = 50, range = (0, 250),  ax = axes[0])\ndata.plot(kind = \"hist\", y = \"available_icu_beds\", bins = 50, range = (0, 250),  ax = axes[1], cumulative = True)\nplt.savefig('graph.png')\nplt\n\n\n","7d19da67":"### **VIRTUAL EXPLORATORY DATA ANALYSIS**\n* Plot\n* Subplot\n* Histogram\n  bins = number of bins\n  range(tuple) = min and max values of data\n  normed(boolean) = normalize or not\n  cumulative(boolean) = compute cumulative distribution\n","fa6bd48d":"# **PANDAS**\n* single column = series\n* NaN = not a number\n* dataframevalues = numpy\n\n# **BUILDING DATAFRAMES FROM STRATCH**\n* We can build dataframes from csv.\n* Also we can build dataframe from dictionaries.\n\n  zip() method: This funtions return a lisst of tuples, where the i-th tuple contains the i-th element from each of the argument sequences or iterables.\n* Adding new column.\n\n***Broadcasting: *** Create new column and assig a value to entire column."}}