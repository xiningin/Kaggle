{"cell_type":{"ce4b4a48":"code","d61c5664":"code","d357a5ce":"code","00b5165b":"code","05889ff6":"code","9440a354":"code","40ed1c4c":"code","82e88eed":"code","7a4b403b":"code","0caadba1":"code","11726486":"code","948f18f2":"code","b63f0d86":"code","8391a84e":"code","22da8c39":"code","cd3efaf0":"code","bba311bf":"code","3e0c2b5f":"code","dd5f988a":"code","aa72b121":"code","b079a44a":"code","58c73770":"code","3ce195c6":"code","32b0ef3c":"code","03265db7":"code","029e9534":"code","18455bfb":"code","f23af655":"code","350415ac":"code","4c1c4cad":"code","b458ffd4":"code","5d058b1a":"code","85ece9c4":"code","e3a64624":"code","9db5dda6":"code","1401954b":"code","eeafd387":"code","5a58195d":"code","721cb370":"markdown","e84098dc":"markdown","86f8e501":"markdown","01970f71":"markdown","a874d9ab":"markdown","eeed3339":"markdown","aea465f7":"markdown","a2580dc8":"markdown","0a764d63":"markdown","fc1adb87":"markdown","d5dce6eb":"markdown","5f8e9d12":"markdown","148ce365":"markdown","325fcb13":"markdown","afc8cb41":"markdown"},"source":{"ce4b4a48":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d61c5664":"df = pd.read_csv('\/kaggle\/input\/google-job-skills\/job_skills.csv')","d357a5ce":"df.head()","00b5165b":"df.shape","05889ff6":"df.describe().T","9440a354":"df[\"Minimum Qualifications\"][1]","40ed1c4c":"df.isnull().sum()","82e88eed":"df = df.dropna(how='any',axis='rows')","7a4b403b":"df.shape","0caadba1":"from nltk.tokenize import word_tokenize \n\ndf['Responsibilities'] = df.Responsibilities.apply(lambda x: word_tokenize(x))\ndf['Minimum Qualifications'] = df['Minimum Qualifications'].apply(lambda x: word_tokenize(x))\ndf['Preferred Qualifications'] = df['Preferred Qualifications'].apply(lambda x: word_tokenize(x))","11726486":"from nltk.corpus import stopwords\nstop_words = set(stopwords.words('english'))\n\ndf['Responsibilities'] = df['Responsibilities'].apply(lambda x: [w for w in x if w not in stop_words])\ndf['Minimum Qualifications'] = df['Minimum Qualifications'].apply(lambda x: [w for w in x if w not in stop_words])\ndf['Preferred Qualifications'] = df['Preferred Qualifications'].apply(lambda x: [w for w in x if w not in stop_words])","948f18f2":"df['Preferred Qualifications'] = df['Preferred Qualifications'].apply(lambda x: ' '.join(x))\ndf['Minimum Qualifications'] = df['Minimum Qualifications'].apply(lambda x: ' '.join(x))\ndf['Preferred Qualifications'] = df['Preferred Qualifications'].apply(lambda x: ' '.join(x))","b63f0d86":"programing_language_list = ['go','r', 'sas', 'matlab','stata','python', 'java','net', 'c++','html','css', 'php', \\\n                            'javascript', 'objective-c', 'ruby', 'perl','c','c#', 'sql','mysql','mapreduce','hadoop','kotlin']","8391a84e":"min_qualifications = df['Minimum Qualifications'].tolist()\nmin_qualifications_string = ''.join(map(str, min_qualifications)).lower()","22da8c39":"import re\nlanguages_count = dict((keys,0) for keys in programing_language_list)\nfor w in re.findall(r\"[\\w'+#-]+|[.!?;\u2019]\", min_qualifications_string):\n    if w in languages_count:\n        languages_count[w] += 1\n\nprint(languages_count)","cd3efaf0":"popular_languages = pd.DataFrame(languages_count.items(), columns=['Language', 'Popularity'])","bba311bf":"popular_languages.head()","3e0c2b5f":"import matplotlib.pyplot as plt\nimport seaborn as sns","dd5f988a":"plt.figure(figsize=(15,4))\nsns.barplot(x = \"Language\" , y = \"Popularity\"  ,data = popular_languages )","aa72b121":"plt.figure(figsize=(35,24))\nsns.catplot(x = \"Language\" , y = \"Popularity\" , data = popular_languages ,height=8.27, aspect=11.7\/8.27)","b079a44a":"df[\"Location\"].head()","58c73770":"df[\"Country\"] = df[\"Location\"].str.split(',').str[-1]","3ce195c6":"df[\"Country\"]","32b0ef3c":"country_value_counts = df.Country.value_counts()\ncountry_value_counts= country_value_counts[country_value_counts.values>=10]","03265db7":"df_popular_countries=pd.Series.to_frame(country_value_counts).reset_index()\ndf_popular_countries.columns=['Country', 'Preference']\ndf_popular_countries.head()","029e9534":"plt.figure(figsize=(15,4))\nsns.barplot(x = \"Country\" , y = \"Preference\"  ,data = df_popular_countries )","18455bfb":"df[\"City\"] = df[\"Location\"].str.split(',').str[0]\ndf[\"City\"].head()","f23af655":"city_value_counts = df.City.value_counts()\ncity_value_counts= city_value_counts[city_value_counts.values>=10]","350415ac":"df_popular_cities=pd.Series.to_frame(city_value_counts).reset_index()\ndf_popular_cities.columns=['City', 'Preference']\ndf_popular_cities.head()","4c1c4cad":"plt.figure(figsize=(30,8))\nsns.barplot(x = \"City\" , y = \"Preference\"  ,data = df_popular_cities )","b458ffd4":"degree_list = [\"ba\", \"bs\", \"bachelor's\", \"phd\",'mba','bachelor','student' ]\n","5d058b1a":"degree_count = dict((x,0) for x in degree_list)\nfor w in re.findall(r\"[\\w']+|[.,!?;\u2019]\", min_qualifications_string):\n    if w in degree_count:\n        degree_count[w] += 1\n# print\nprint(degree_count)","85ece9c4":"df_degree_popular = pd.DataFrame.from_dict(degree_count, orient='index').sort_values(by=0,ascending=False).reset_index()\ndf_degree_popular.columns=['Degree', 'Popularity']\ndf_degree_popular['Degree'] = df_degree_popular.Degree.str.upper() \ndf_degree_popular","e3a64624":"plt.figure(figsize=(30,8))\nsns.barplot(x = \"Degree\" , y = \"Popularity\"  ,data = df_degree_popular )","9db5dda6":"from collections import defaultdict\nyears_exp = defaultdict(lambda: 0)\nfor w in re.findall(r'([0-9]+) year', min_qualifications_string):\n     years_exp[w] += 1\n        \nprint(years_exp)\n\ndf_years_exp = pd.DataFrame.from_dict(years_exp, orient='index').sort_values(by=0,ascending=False).reset_index()\ndf_years_exp.columns=['Years of Experience', 'Popularity'] \n\ndf_years_exp.head()","1401954b":"plt.figure(figsize=(30,8))\nsns.barplot(x = \"Years of Experience\" , y = \"Popularity\"  ,data = df_years_exp ,order = df_years_exp['Years of Experience'] )","eeafd387":"category_value_counts = df.Category.value_counts()\n\ndf_popular_category=pd.Series.to_frame(category_value_counts).reset_index()\ndf_popular_category.columns=['Category', 'Preference']\ndf_popular_category.head()","5a58195d":"plt.figure(figsize=(30,18))\nsns.barplot(x = \"Preference\" , y = \"Category\"  ,data = df_popular_category )","721cb370":"#### Country","e84098dc":"## Data Cleaning","86f8e501":"#### Split","01970f71":"#### City","a874d9ab":"#### Tokenize","eeed3339":"## Loading the Data","aea465f7":"#### removing Missing Values","a2580dc8":"## 5 - Popular Category","0a764d63":"## Which qualifications are requested by Google","fc1adb87":"### 1- Languges","d5dce6eb":"## 3- Degree","5f8e9d12":"#### Removing Stopwords","148ce365":"Most popular languease is Pyhton.","325fcb13":"## 4 - Years of Experience","afc8cb41":"### 2- Location"}}