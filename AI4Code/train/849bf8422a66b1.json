{"cell_type":{"fdd85df4":"code","4167f4a0":"code","6cfed12d":"code","38997a44":"code","399911a6":"code","251de540":"code","6983d537":"code","cefd413c":"code","8931b711":"code","41c0239b":"code","f94fc6d1":"code","71347dd1":"code","77e57d28":"code","0054d974":"markdown","4d82dc1a":"markdown","7ddffd6f":"markdown","03ba4574":"markdown","cb759e77":"markdown","111cc64f":"markdown","3ce587c7":"markdown"},"source":{"fdd85df4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4167f4a0":"import spacy\n# Load the small English model\nnlp = spacy.load('en_core_web_sm')\n# Process a text\ndoc = nlp(\"She ate the pizza\")\n# Iterate over the tokens\nfor token in doc:\n    # Print the text and the predicted part-of-speech tag\n    print(token.text, token.pos_)","6cfed12d":"for token in doc:\n    print(token.text, token.pos_, token.dep_, token.head.text)","38997a44":"for token in doc:\n    print(token.text, token.pos_, token.dep_, token.head.text)","399911a6":"# Process a text\ndoc = nlp(\"Apple is looking at buying U.K. startup for $1 billion\")\n# Iterate over the predicted entities\nfor ent in doc.ents:\n    # Print the entity text and its label\n    print(ent.text, ent.label_)","251de540":"\n\nnlp = spacy.load('en')\n\ndoc = nlp(\"my friend Mary has worked at Google since 2009\")\n\nfor ent in doc.ents:\n    print(ent.text, ent.label_)","6983d537":"print(\"GPE  :-\", spacy.explain('GPE'))\nprint(\"NNP  :-\", spacy.explain('NNP'))\nprint(\"DOBJ :-\", spacy.explain('dobj'))","cefd413c":"!python -m spacy download en_core_web_md","8931b711":"import spacy\n# Load a larger model with vectors\nnlp = spacy.load('en_core_web_md')\n# Compare two documents\ndoc1 = nlp(\"I like fast food\")\ndoc2 = nlp(\"I like pizza\")\nprint(doc1.similarity(doc2))","41c0239b":"# Compare two tokens\ndoc = nlp(\"I like pizza and pasta\")\ntoken1 = doc[2]\ntoken2 = doc[4]\nprint(\"Token 1, Token 2 : \",token1,\" , \",token2)\nprint(token1.similarity(token2))","f94fc6d1":"# Compare a document with a token\ndoc = nlp(\"I like pizza\")\ntoken = nlp(\"soap\")[0]\nprint(doc.similarity(token))","71347dd1":"# Compare a span with a document\nspan = nlp(\"I like pizza and pasta\")[2:5]\ndoc = nlp(\"McDonalds sells burgers\")\nprint(\"span :- \",span)\nprint(\"doc :- \",doc)\nprint(span.similarity(doc))","77e57d28":"# Load a larger model with vectors\nnlp = spacy.load('en_core_web_md')\ndoc = nlp(\"I have a banana\")\n# Access the vector via the token.vector attribute\nprint(doc[3].vector)","0054d974":"# Explain Method","4d82dc1a":"# Predicting Named Entities","7ddffd6f":"# Predicting Syntactic Dependencies","03ba4574":"# Predicting Part-of-Speech Tags","cb759e77":"# Using Word Vectors to Predict Similarity in spaCy\n* Similarity is determined using word vectors\n* Multi-dimensional meaning representations of words\n* Generated using an algorithm like Word2Vec and lots of text\n* Can be added to spaCy's statistical models\n* Default: cosine similarity, but can be adjusted\n* Doc and Span vectors default to average of token vectors\n* Short phrases are better than long documents with many irrelevant word","111cc64f":"# Predicting Syntactic Dependencies","3ce587c7":"# Document Similarity"}}