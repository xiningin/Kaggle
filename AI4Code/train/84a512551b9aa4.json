{"cell_type":{"ee65c3d8":"code","9f5bacce":"code","b68ccf9a":"code","858421eb":"code","e3dc0e49":"code","1c653b36":"code","e43f48d5":"code","3be6f0ff":"code","d96a7d7b":"code","7d9ab2dd":"code","a2d5c5cd":"code","584b127f":"code","2185d479":"code","a1b55db1":"code","ab8126f9":"code","98436515":"code","dfefa1ab":"code","55d6b7c8":"code","1124cbb5":"markdown","10f24603":"markdown","fbc65a71":"markdown","5457083f":"markdown","6d8d9a05":"markdown","34aa132b":"markdown","1add0f56":"markdown","24162cc1":"markdown","ba51a1cf":"markdown","e794f0d7":"markdown","9911be96":"markdown","525a678c":"markdown","823498ef":"markdown","af97dedd":"markdown","4607f09f":"markdown","847f4a8a":"markdown"},"source":{"ee65c3d8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9f5bacce":"# Visualization libraries\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsns.set(style=\"darkgrid\")\nfrom plotly.offline import init_notebook_mode, iplot \nimport plotly.graph_objs as go\nimport plotly.offline as py\nfrom plotly.subplots import make_subplots\n\n# Disable warnings in Anaconda\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Counter\nfrom collections import Counter","b68ccf9a":"# Importing Projects.csv\nProjects_DF = pd.read_csv('\/kaggle\/input\/io\/Projects.csv')\nProjects_DF.dropna(subset=['Project Subject Category Tree','Project Title','Project Essay','Project Short Description','Project Need Statement','Project Resource Category'],inplace = True)\n#Projects_DF.isnull().sum()\n\n# Importing Donors.csv\n#Donors_DF = pd.read_csv(\"\/kaggle\/input\/io\/Donors.csv\")\n\n# Importing Donations.csv\n#Donations_DF = pd.read_csv('\/kaggle\/input\/io\/Donations.csv')","858421eb":"Projects_DF.head(5)","e3dc0e49":"project_type_count = pd.DataFrame(Projects_DF.groupby('Project Type')['Project ID'].count())\nproject_type_count.columns = ['Count']\n\nproject_type_pie = go.Pie(labels=project_type_count.index,values=project_type_count['Count'],name=\"Project Type\",hole=0.4,domain={'x': [0,0.46]})\n\n\nlayout = dict(title = 'Project Types', font=dict(size=10), legend=dict(orientation=\"h\"))\nfig = dict(data=[project_type_pie], layout=layout)\npy.iplot(fig)","1c653b36":"# Extract Project Subject Category Tree\n\ncategories = Counter()\ndef extract_category(category):\n        cat = category.split(',')\n        for c in cat:\n            categories[c.strip()]+=1\n\nProjects_DF['Project Subject Category Tree'].apply(extract_category)\nproject_categories_count = pd.DataFrame.from_dict(categories,orient = 'index')\nproject_categories_count.columns = ['Count']\n\nproject_category_pie = go.Pie(labels=project_categories_count.index,values=project_categories_count['Count'],name=\"Project Category\",hole=0.4,domain={'x': [0,0.46]})\n\n\nlayout = dict(title = 'Project Categories', font=dict(size=10), legend=dict(orientation=\"h\"))\nfig = dict(data=[project_category_pie], layout=layout)\npy.iplot(fig)","e43f48d5":"# Extract Project Subject Subcategory Tree\n\nsub_categories = Counter()\ndef extract_sub_category(sub_category):\n        sub_cat = sub_category.split(',')\n        for c in sub_cat:\n            sub_categories[c.strip()]+=1\n\nProjects_DF['Project Subject Subcategory Tree'].apply(extract_sub_category)\n#print(sub_categories)\nproject_sub_categories_count = pd.DataFrame.from_dict(sub_categories,orient = 'index')\nproject_sub_categories_count.columns = ['Count']\nproject_sub_categories_count.sort_values(by = ['Count'],inplace = True,ascending = False)\nplt.figure(figsize=(20,10))\nsns.barplot(x = 'Count', y = project_sub_categories_count.index,data = project_sub_categories_count).set_title('Project Subject Subcategories')","3be6f0ff":"project_resource_count = pd.DataFrame(Projects_DF.groupby(['Project Resource Category'])['Project ID'].count())\nproject_resource_count.columns = ['Count']\nproject_resource_count.sort_values(by=['Count'], inplace = True,ascending = False)\nplt.figure(figsize=(15,10))\nsns.barplot(x = 'Count',y = project_resource_count.index,data = project_resource_count)","d96a7d7b":"#Top_5_resources = Projects_DF[Projects_DF['Project Resource Category'].isin('')]\nproject_resource_count = pd.DataFrame(Projects_DF.groupby(['Project Resource Category','Project Grade Level Category'])['Project ID'].count())\nproject_resource_count.columns = ['Count']\nproject_resource_count.sort_values(by=['Count'], inplace = True,ascending = False)\nproject_resource_count.reset_index(inplace = True)\nproject_resource_count = project_resource_count[project_resource_count['Project Resource Category'].isin(['Supplies','Technology','Books','Other','Computers & Tablets'])]\nplt.figure(figsize=(20,10))\nsns.barplot(x = 'Count',y = 'Project Resource Category',hue = 'Project Grade Level Category',data = project_resource_count)","7d9ab2dd":"posted_date = pd.DataFrame(Projects_DF['Project Posted Date'].value_counts())\nposted_date.columns = ['Count']\nposted_date['Day of Week'] = pd.DatetimeIndex(posted_date.index).dayofweek\nposted_date['Month'] = pd.DatetimeIndex(posted_date.index).month\nposted_date['Year'] = pd.DatetimeIndex(posted_date.index).year\n\nposted_date_month_df = pd.DataFrame(posted_date.groupby('Month')['Count'].sum())\nposted_date_month_df.columns = ['Count']\n\n\nfunded_date = pd.DataFrame(Projects_DF['Project Fully Funded Date'].value_counts())\nfunded_date.columns = ['Count']\nfunded_date['Day of Week'] = pd.DatetimeIndex(funded_date.index).dayofweek\nfunded_date['Month'] = pd.DatetimeIndex(funded_date.index).month\nfunded_date['Year'] = pd.DatetimeIndex(funded_date.index).year\n\nfunded_date_month_df = pd.DataFrame(funded_date.groupby('Month')['Count'].sum())\nfunded_date_month_df.columns = ['Count']\n\n\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\nlabels = ['January','February','March','April','May','June','July','August','September','October','November','December']\nfig.add_trace(go.Pie(labels=labels, values=posted_date_month_df['Count'], name=\"Month Posted\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=labels, values=funded_date_month_df['Count'], name=\"Month Funded\"),\n              1, 2)\nfig.update_traces(hole=.4)\nfig.update_layout(\n    title_text=\"Project Posted vs Project Funded: Monthy breakdown\")\nfig.show()","a2d5c5cd":"posted_date_dow_df = pd.DataFrame(posted_date.groupby('Day of Week')['Count'].sum())\nposted_date_dow_df.columns = ['Count']\n\nfunded_date_dow_df = pd.DataFrame(funded_date.groupby('Day of Week')['Count'].sum())\nfunded_date_dow_df.columns = ['Count']\n\n\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\nlabels = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\nfig.add_trace(go.Pie(labels=labels, values=posted_date_dow_df['Count'], name=\"Day Posted\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=labels, values=funded_date_dow_df['Count'], name=\"Day Funded\"),\n              1, 2)\nfig.update_traces(hole=.7)\nfig.update_layout(\n    title_text=\"Project Posted vs Project Funded: Daily breakdown\")\nfig.show()","584b127f":"project_status_df = pd.DataFrame(Projects_DF['Project Current Status'].value_counts())\nproject_status_df.columns = ['Count']\nfig = make_subplots(rows=1, cols=1, specs=[[{'type':'domain'}]])\nfig.update_layout(\n    title_text=\"Project Current Status\")\nfig.add_trace(go.Pie(labels=project_status_df.index, values=project_status_df['Count'], name=\"Project Status\"),\n              1, 1)\nfig.show()","2185d479":"fig, (axis1,axis2) = plt.subplots(2,1,sharex=True,figsize=(15,8))\nfunded_count = funded_date.groupby(['Year','Month'])['Count'].sum()\nposted_count = posted_date.groupby(['Year','Month'])['Count'].sum()\nposted_count.plot(legend=True,ax=axis1,marker='o',title=\"Projects Posted\")\nfunded_count.plot(legend=True,ax=axis2,marker='o',title=\"Projects Funded\")\n\n","a1b55db1":"posted_count.sort_values(ascending = False)","ab8126f9":"funded_amount = pd.DataFrame(Projects_DF.groupby('Project Fully Funded Date')['Project Cost'].sum())\nfunded_amount.columns = ['Cost']\nfunded_amount['Day of Week'] = pd.DatetimeIndex(funded_amount.index).dayofweek\nfunded_amount['Month'] = pd.DatetimeIndex(funded_amount.index).month\nfunded_amount['Year'] = pd.DatetimeIndex(funded_amount.index).year\nfunded_amount_sum = pd.DataFrame(funded_amount.groupby(['Year','Month'])['Cost'].sum())\nfunded_amount_sum.reset_index(inplace = True)\nfunded_amount_sum = funded_amount_sum[funded_amount_sum['Year'].isin(['2015','2016','2017','2018'])]\nfunded_amount_sum['Month'] = funded_amount_sum['Month'].map({1:'January',2:'February',3:'March',4:'April',5:'May',6:'June',7:'July',8:'August',9:'September',10:'October',11:'November',12:'December'})\n\nplt.figure(figsize=(20,10))\nsns.barplot(x = 'Year',y = 'Cost',hue = 'Month',data = funded_amount_sum)","98436515":"funded_amount_sum.sort_values(by=['Cost'],ascending = False).head(3)","dfefa1ab":"Schools_DF = pd.read_csv(\"\/kaggle\/input\/io\/Schools.csv\")","55d6b7c8":"project_school_df = pd.DataFrame(Projects_DF['School ID'].value_counts())\nproject_school_df.reset_index(inplace = True)\nproject_school_df.columns = ['School ID','Count']\nproject_school_df = project_school_df.head(10)\nproject_school_df = project_school_df.merge(Schools_DF[['School ID','School Name']], on = ['School ID'],how = 'left')\nproject_school_df\nplt.figure(figsize=(20,10))\nsns.barplot(x = 'Count',y = 'School Name', data = project_school_df)","1124cbb5":"## What is the current status of these projects?","10f24603":"> <a id=\"5\">\ud83d\udcca My insight :<\/a>\n> * The top 3 resource categories are **Supplies, Technology, Books**. Books make sense since because the Top project category was **Literacy & Language**. You may also want **Supplies** like copies of text books and **Technology** like audiobooks for projects related to Literacy & Language.\n> * A breakdown by grade-level tells us that most of the *Supplies,Technology,Books* are for **PreK-2 Grades** followed closely in second by **Grades 3-5**. Most of the projects posted are to help kindergarteners and children in elementary school.","fbc65a71":"## Objective \u2692\n> The objective of this notebook is to do some **Exploratory Data Analysis** on the Projects that are posted on DonorsChoose.org to help find the right projects to donote to. The notebook will help answer the following questions:\n> <h4> 1. What are the types, categories, sub-categories of projects posted?\n> <h4>2. What kind of resources are most popular and what is their breakdown by Grade?\n> <h4>3. What does the monthly and daily breakdown of projects that are posted vs projects that are funded look like?\n> <h4>4. What is the current status of these projects?\n> <h4>5. What is the count of projects posted vs projects funded over time?\n> <h4>6. What does the project costs over time look like?\n> <h4>7. What are the Top 10 schools having the most number of projects on DonorsChoose?<\/h4>\n><p>I will also be giving my insight every step of the way! Let's dive in!<\/p>","5457083f":"## What does the monthly and daily breakdown of projects that are posted vs projects that are funded look like?","6d8d9a05":"> <a id=\"3\">\ud83d\udcca My insight :<\/a>\n> * Almost 98% of the projects are **Teacher-Led**. This makes sense because if you read how DonorsChoose.org was started, it was started by a history teacher, Charles Best who created a website where teachers could post their requests and donors could view them and donate to the project of their choice.\n> * The projects are placed under **9** categories. The most popular category is **Literacy & Language**, followed by **Math & Science**. They make up for 50% of the projects posted on DonorsChoose.org\n> * If the categories weren't informative enough for you, there are 30 sub-categories under which the projects are placed to give a little more detail to the type of projects posted on **DonorsChose.org**","34aa132b":"## A snapshot of the data. \ud83d\udcf8 ","1add0f56":"## What does the project costs over time look like?","24162cc1":"## Support a classroom. Build a future: An analysis on the kind of projects posted on DonorsChoose.org\n![donorschoose_org_social_1200x630.png](attachment:donorschoose_org_social_1200x630.png)\n\n","ba51a1cf":"## Find the right project for you!\n![wordpress-best-donation-plugins.jpg](attachment:wordpress-best-donation-plugins.jpg)\n\n> <li>DonorsChoose.org is an excellent platform if you are thinking of connecting and donating to public schools. Their mission is to help make donating to classrooms easier for anyone who wants to. \n> <li>Donating to classrooms couldn't get any easier: you find the project that inspires you, make your donation, once the project is fully funded, DonorsChoose purchases all the requested items and ships them directly to the school. And an added bonus, every donor gets a thank-you letter from the teacher, photos from the classroom, and a report of how each dollar was spent. Isn't that amazing!\n\n>The hard part though, is choosing the right project that inspires you. There are about <b>1,109,972<\/b> unique projects you can donate to on DonorsChoose.org. How will you find out what projects interests you? Hopefully, this notebook will answer exactly that. Read on","e794f0d7":"## What kind of resources are most popular and what is their breakdown by Grade?","9911be96":"## What is the count of projects posted vs projects funded over time?","525a678c":"## What are the Top 10 schools having the most number of projects on DonorsChoose?","823498ef":"## What are the types, categories, sub-categories of projects posted?","af97dedd":"> <a id=\"13\">\ud83d\udcca My insight :<\/a>\n> * The Top school that posts the most projects are **Dawes Elementary School**. It can be useful to know which school the project is for if you are trying to find a project to donate to. Of course, all schools are equally important but maybe there are particular schools that you have a strong inclination too. Maybe you want to donate to a project from the school that your grandfather attended or maybe you want donate to projects from schools that are closer to were you stay.\n> * All in all, I hope this notebook gave you some idea about the projects that are present in DonorChoose.org. There are so many things that go into deciding which project you want to donate too, especially if it's your first time donating through DonorsChoose.\n> * In this notebook, we have covered what *Type of Projects are there in DonorChoose, what categories, sub-categories, what resource categories there are, which months post the most projects, what days of the week are more likely to post projects,which schools post the most and much more*. All this information from a single csv file with less than 20 columns. Oh the power of Exploratory Data Analysis!\n\n> Don't forget to **upvote** if you found this notebook insightful! ","4607f09f":"> <a id=\"11\">\ud83d\udcca My insight :<\/a>\n> * Almost **75%** of the projects are *fully funded* and **4%** are *live* projects. The most number of Projects were posted on April and March 2018. About 40,308 projects were posted in March 2018.\n> * March 2018 also happened to be the month were almost 50,636 projects were funded making it the month of highest fundings since 2013\n> * March 2016 & March 2018 are the months with the highest project cost. DonorsChoose recieved about 36491230.85 and  22450508.09 dollars respectively\n> * So as far as **\"Highest number of Projects posted, Highest number of fundings received\"** goes, March 2018 tops it all off in the history of DonorsChoose.\n> * One last thing I want to investigate as far as projects are concerned, is *Which school posts the most projects?*. For that, lets bring in the Schools table.","847f4a8a":"> <a id=\"7\">\ud83d\udcca My insight :<\/a>\n> * The majority of the projects are posted in the month of **September & August**. The first day of an academic year is usually August or September in the Northern Hemisphere. So it makes sense that most of the projects are posted in the beginning of the academic year.\n> * It is interesting to see that most of the projects are funded in the month of **March & December**. One thing to note is that not all projects that are posted are funded yet. There are a collections of projects that are Live and not fully funded. Let's look at that next."}}