{"cell_type":{"1494681d":"code","bfab9878":"code","e05f8093":"code","a1b2e349":"code","928ae4d3":"code","f5753df9":"code","3db12983":"code","c46a3eec":"code","1f25762f":"code","ce120b17":"code","3beec7ae":"code","0dd142b1":"code","390c5c83":"code","b6940717":"code","c722e773":"code","bf68e149":"code","0361d469":"code","e83144c0":"code","f93f23e5":"code","8f2a3912":"code","374562d6":"markdown","b2961fa3":"markdown","0309297d":"markdown"},"source":{"1494681d":"import numpy as np \nimport pandas as pd \n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport plotly.offline as pyo\nimport plotly.graph_objs as go\nimport cufflinks as cf\ncf.go_offline(connected=True)\n\nfrom wordcloud import WordCloud, STOPWORDS\nfrom PIL import Image\n\npd.options.display.max_columns = None\npyo.init_notebook_mode(connected=True)\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","bfab9878":"data = pd.read_csv('\/kaggle\/input\/structured-enron-dataset\/emails.csv')\ndata.head()","e05f8093":"data.shape","a1b2e349":"data.info()","928ae4d3":"def extract_date(date):\n    date = date[0:10]\n    return date","f5753df9":"extract_date('2001-05-14 23:39:00+00:00')","3db12983":"data['Cleaned_Date'] = data['Date'].apply(extract_date)","c46a3eec":"data['Cleaned_Date'] = pd.to_datetime(data['Cleaned_Date'])\ndata['Year'] = pd.DatetimeIndex(data['Cleaned_Date']).year\ndata['Month'] = pd.DatetimeIndex(data['Cleaned_Date']).month\ndata['Day'] = pd.DatetimeIndex(data['Cleaned_Date']).day","1f25762f":"data['Cleaned_Date']","ce120b17":"data.info()","3beec7ae":"emails_by_day = data.groupby(by='Cleaned_Date').count()['Message-ID']\nemails_by_day = pd.DataFrame(emails_by_day)\nemails_by_day.reset_index(inplace=True)\nemails_by_day","0dd142b1":"emails_by_day.iplot(kind='scatter', x='Cleaned_Date', y='Message-ID')","390c5c83":"data[data['Year'] < 1981]","b6940717":"data[data['Year'] < 1981]['X-Folder']","c722e773":"data[data['Year'] == 2001]['X-Folder']","bf68e149":"emails_by_sender = data.groupby(by='X-From').count()['Message-ID']\nemails_by_sender = pd.DataFrame(emails_by_sender)\nemails_by_sender.reset_index(inplace=True)\nemails_by_sender.sort_values(by='Message-ID', ascending='False')","0361d469":"from collections import Counter\nresults = Counter()\ndata['content'].str.lower().str.split().apply(results.update)\n\ncounter_df = pd.DataFrame.from_dict(results, orient='index')\ncounter_df['Total'] = counter_df[0]\ncounter_df.sort_values(by='Total', axis=0, ascending=False).head(15)\ncounter_df","e83144c0":"STOPWORDS\n\nnew_stopwords = ['kay', 'mann', 'enron', 'ect', 'mail', 'corp', 'subject']\nSTOPWORDS.update(new_stopwords)","f93f23e5":"white_background = np.array(Image.open('..\/input\/white-background\/black.png'))\n\nword_string=\" \".join(data['content'][data['X-From']=='Kay Mann'].str.lower())\nwordcloud = WordCloud(stopwords=STOPWORDS).generate(word_string)\n\nplt.subplots(figsize=(15,15))\nplt.clf()\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","8f2a3912":"data[data['X-From']=='Kay Mann']['content']","374562d6":"## Email contents","b2961fa3":"## Unusual dates\nI was thinking, I can get the month and year from the folder, but it's unlikely to be accurate. For now, I will drop these in case, I do any period related analysis.","0309297d":"## Email senders"}}