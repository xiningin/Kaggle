{"cell_type":{"d0c02f12":"code","2aa45b3a":"code","c9242433":"code","f4f2ccff":"code","b7b30326":"code","23a3eb28":"code","a4815b3a":"code","1f2313b0":"code","050ea434":"code","50f92234":"code","1415cc18":"code","0ed3a7e5":"code","3564f33c":"code","f25e86e1":"code","07a3349e":"code","4864b97e":"code","83763d98":"code","75d77620":"code","67f514fe":"code","00a4cf5d":"code","a17e92aa":"code","ba6f62d8":"code","518e9550":"markdown","25282bd8":"markdown","858b5957":"markdown","9dcc0e3d":"markdown","a4b819e5":"markdown","0d5a9ac6":"markdown","e94693dd":"markdown","a3100071":"markdown","c1d0c7a7":"markdown","53cf91e8":"markdown","9a627a0c":"markdown","5e552163":"markdown"},"source":{"d0c02f12":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n","2aa45b3a":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c9242433":"# load datasets\ntrain = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jan-2021\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jan-2021\/test.csv')\nsample = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jan-2021\/sample_submission.csv')","f4f2ccff":"train","b7b30326":"test","23a3eb28":"sample","a4815b3a":"train.info()","1f2313b0":"test.info()","050ea434":"train.isnull().sum()","50f92234":"test.isnull().sum()","1415cc18":"import seaborn as sns\n\nsns.distplot(train['target']);","0ed3a7e5":"id = test.id\n\ny = train.target.values\n\nX = train.drop(['id','target'], axis = 1)\nX_test = test.drop('id', axis = 1)","3564f33c":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\n\nX = scaler.fit_transform(X)\nX_test = scaler.transform(X_test)","f25e86e1":"from sklearn.model_selection import train_test_split\n\n# Split into validation and training data\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.1, random_state=1)\nX_train.shape, X_val.shape, y_train.shape,y_val.shape, X_test.shape","07a3349e":"from sklearn.experimental import enable_hist_gradient_boosting \nfrom sklearn.ensemble import HistGradientBoostingRegressor\n\nmodel = HistGradientBoostingRegressor(loss='least_squares', max_iter=1000, random_state=1).fit(X_train, y_train)\nprint(model.score(X_train, y_train))","4864b97e":"from sklearn.metrics import r2_score\n\ny_pred = model.predict(X_val)\ny_pred[y_pred < 0] = 0\nprint(model.score(X_val, y_val))","83763d98":"from sklearn.metrics import mean_squared_error\nfrom math import sqrt\n\nrms = sqrt(mean_squared_error(y_val, y_pred))\nrms","75d77620":"df_val=pd.DataFrame({'actual_value': y_val, 'predicted_value':y_pred})\ndf_val.reset_index(drop=True, inplace=True)\ndf_val","67f514fe":"final_labels = model.predict(X_test)\nfinal_labels","00a4cf5d":"final_result = pd.DataFrame({'Id': id, 'target': final_labels})","a17e92aa":"final_result.to_csv('submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","ba6f62d8":"#upload submission\nsubmission = pd.read_csv(\"submission.csv\")\nsubmission","518e9550":"Check for null values","25282bd8":"Check info","858b5957":"Define X and y","9dcc0e3d":"Predict on test set","a4b819e5":"Graphics","0d5a9ac6":"Load and read datasets","e94693dd":"Define model","a3100071":"Predict on validation set","c1d0c7a7":"Import libraries","53cf91e8":"Split X for training and validation","9a627a0c":"Scaler","5e552163":"Submit predictions"}}