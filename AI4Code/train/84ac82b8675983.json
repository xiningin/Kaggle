{"cell_type":{"e97ce172":"code","f7dfcfff":"code","9853dded":"code","76307e28":"code","19a10234":"code","02bf0b63":"code","c139de13":"code","637428e3":"code","7e3ef7da":"code","004c08b9":"code","08bdb717":"code","26c98f5e":"code","62c59442":"code","ff982f7f":"code","b5bd5490":"code","87c78e90":"markdown","66facb7b":"markdown","f9061116":"markdown"},"source":{"e97ce172":"import numpy as np\nimport pandas as pd \nimport glob\nimport json\nimport math","f7dfcfff":"import warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics.pairwise import cosine_similarity","9853dded":"meta_df = pd.read_csv('..\/input\/CORD-19-research-challenge\/metadata.csv')\nmeta_df.head()","76307e28":"meta_df = meta_df[(meta_df.abstract.str.contains('covid') | meta_df.abstract.str.contains('coronavirus') | meta_df.abstract.str.contains('cov') | meta_df.abstract.str.contains('coronaviruses'))] \nmeta_df.drop_duplicates(['sha'], inplace = True)\nlen(meta_df)\nmeta_df.info()","19a10234":"all_json = meta_df.pdf_json_files.tolist()\nall_json = ['..\/input\/CORD-19-research-challenge\/' + str(x) for x in all_json]","02bf0b63":"_json = glob.glob('..\/input\/CORD-19-research-challenge\/document_parses\/pdf_json\/*.json', recursive=True)\nlen(all_json)","c139de13":"class FileReader:\n    def __init__(self, file_path):\n        with open(file_path) as file:\n            content = json.load(file)\n            self.paper_id = content['paper_id']\n            self.abstract = []\n            self.body_text = []\n            # Abstract\n            for entry in content['abstract']:\n                self.abstract.append(entry['text'])\n            # Body text\n            for entry in content['body_text']:\n                self.body_text.append(entry['text'])\n            self.abstract = '\\n'.join(self.abstract)\n            self.body_text = '\\n'.join(self.body_text)\n    def __repr__(self):\n        return f'{self.paper_id}: {self.abstract[:200]}... {self.body_text[:200]}...'\n","637428e3":"first_row = FileReader(all_json[0])\nprint(first_row)","7e3ef7da":"\ndict_ = {'paper_id': [], 'abstract': [], 'body_text': []}\nfor idx, entry in enumerate(all_json):\n    try:\n        content = FileReader(entry)\n        if (idx % 1000 == 0):\n            print(f\"processing {idx} of {len(all_json)} \")\n        dict_['paper_id'].append(content.paper_id)\n        dict_['abstract'].append(content.abstract)\n        dict_['body_text'].append(content.body_text)\n    except:\n        pass\ndf_covid = pd.DataFrame(dict_, columns=['paper_id', 'abstract', 'body_text'])\ndf_covid.head()","004c08b9":"final_df = pd.merge(meta_df, df_covid, how = 'inner', left_on = 'sha', right_on = 'paper_id')\nfinal_df.head()","08bdb717":"selected_columns = ['paper_id','title', 'doi', 'abstract_x', 'body_text', 'authors', 'journal', 'publish_time']\nfinal_df = final_df[selected_columns]","26c98f5e":"final_df.info()","62c59442":"final_df.sample(1).abstract_x.values","ff982f7f":"final_df.to_csv('selected_data.csv', index = False)","b5bd5490":"final_df.head()","87c78e90":"### Loading Meta Data","66facb7b":"### Loading All Json data","f9061116":"#### Get papers having covid content"}}