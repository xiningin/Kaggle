{"cell_type":{"a8a5ad69":"code","a31920a9":"code","735d8a41":"code","f8157f71":"code","1f13b02e":"code","f4850eb5":"code","9d9bed74":"code","ecc60c58":"code","72eaec7c":"code","7938c241":"code","6e0dbbd5":"code","a91790cd":"code","3123175c":"code","2897050d":"code","12fb8540":"code","0e41542c":"code","f7919428":"code","bb9e59eb":"code","94649cd7":"code","dcf0d756":"code","4014ca7c":"code","3575dabe":"code","706b09bd":"code","7d3ba6c2":"code","7bcd87ae":"code","bca7f692":"code","8ea8c3ea":"code","ade241b5":"code","915fa564":"code","51b5b4e7":"code","a0f53797":"code","3ac09e37":"code","494ddf8a":"code","762f16cb":"code","2ec5771a":"code","8497d218":"code","ae7b7da0":"code","431d9067":"code","560c3235":"code","73c1c599":"code","ab67873f":"markdown","29a137b7":"markdown"},"source":{"a8a5ad69":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a31920a9":"import pandas as pd\nimport matplotlib as mlt\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns \n\n%matplotlib inline","735d8a41":"df = pd.read_csv(\"..\/input\/world-bank-wdi-212-health-systems\/2.12_Health_systems.csv\")","f8157f71":"df.head()","1f13b02e":"## Data cleaning and manipulation","f4850eb5":"df.info()","9d9bed74":"df.describe()","ecc60c58":"df.shape","72eaec7c":"#The data have 210 rows and 14 columns","7938c241":"df.isna().sum()","6e0dbbd5":"## The data have missing values but except the world bank name column","a91790cd":"df.tail()","3123175c":"df2 = df.drop([\"Province_State\"], axis = 1)","2897050d":"df2\n\n# I have droped the Province_State column to have an accurate analysis has the column had 196 missing data out of 210","12fb8540":"# check for duplications in the data ","0e41542c":"df2.duplicated()","f7919428":"## The data has no duplication in it","bb9e59eb":"df2.shape","94649cd7":"# After i dropped the column the data shows that the data have 210 rows and 13 columns","dcf0d756":"df2.isnull().any()","4014ca7c":"df2.median()","3575dabe":"# will be replacing every null value with the meadian value expect for Country_Region  column","706b09bd":"df2[\"Country_Region\"].fillna('no country_region', inplace = True)","7d3ba6c2":"df2","7bcd87ae":"# For country_relion i have replaced all the null with no counry religion","bca7f692":"df3 =df2.fillna(df2.median())","8ea8c3ea":"df3.isna().sum()","ade241b5":"#They is no missing values in the data ","915fa564":"for column in df4:\n    plt.figure()\n    df4.boxplot([column])","51b5b4e7":"## we can see that they is outliers in the data","a0f53797":"# df4 is the dataset with numeric values","3ac09e37":"df4.head()","494ddf8a":"# will use heatmap\n\ncorrelations = df3.corr()\nsns.heatmap(data=correlations, square=True, cmap=\"bwr\")\n\nplt.yticks(rotation=0)\nplt.xticks(rotation =90)","762f16cb":"## we can see that they is more behavior on health_exp_per_capita_usd 2016 and per_capit_exp_ppp_2016, The red colour shows maximum correlation and \n## the blue shows the minimum correlation","2ec5771a":"### Gonna focus on the health_exp_per_capita_usd 2016 and per_capit_exp_ppp_2016 to further understand there relationship\n\ndf3[['Health_exp_per_capita_USD_2016', 'per_capita_exp_PPP_2016']].groupby(['per_capita_exp_PPP_2016']).describe().unstack()","8497d218":"## we can see the count and max of both columns grouped by per capita exp ppp 2016","ae7b7da0":"df3[['Health_exp_per_capita_USD_2016', 'per_capita_exp_PPP_2016']].corr()","431d9067":"# looking for relationship against per capita xep ppp 2016\n\nfig,axs = plt.subplots(1,5, sharey = True)\ndf3.plot(kind = \"scatter\", x = \"Health_exp_per_capita_USD_2016\", y = \"per_capita_exp_PPP_2016\", ax = axs[0],figsize=(22,10))\ndf3.plot(kind = \"scatter\", x = \"External_health_exp_pct_2016\", y = \"per_capita_exp_PPP_2016\", ax = axs[1])\ndf3.plot(kind = \"scatter\", x = \"Health_exp_public_pct_2016\", y=\"per_capita_exp_PPP_2016\", ax=axs[2])\ndf3.plot(kind=\"scatter\", x =\"Health_exp_out_of_pocket_pct_2016\", y = \"per_capita_exp_PPP_2016\", ax=axs[3])\ndf3.plot(kind = 'scatter', x = 'Health_exp_per_capita_USD_2016', y = \"per_capita_exp_PPP_2016\", ax = axs[4])","560c3235":"# the relationship against Specialist_surgical_per_1000_2008\n\nfig,axs = plt.subplots(1,2, sharey = True)\ndf3.plot(kind = \"scatter\", x = \"Physicians_per_1000_2009-18\", y = \"Specialist_surgical_per_1000_2008-18\", ax = axs[0],figsize=(22,10), color = 'g')\ndf3.plot(kind = \"scatter\", x = \"Nurse_midwife_per_1000_2009-18\", y = \"Specialist_surgical_per_1000_2008-18\", ax = axs[1],color = 'g')","73c1c599":"# we can see the relationships of each column against the one column","ab67873f":"**Checking for outliers**","29a137b7":"**DATA VISUALISATION**"}}