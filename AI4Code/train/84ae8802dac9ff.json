{"cell_type":{"1924b438":"code","ea5412bf":"code","9a52ce3a":"code","6d7049cb":"code","080a5761":"code","64f9cd06":"code","aa63af2a":"code","eec1cada":"code","acf340c1":"code","e305aa8f":"code","23e70f34":"code","3067f924":"code","bfed3221":"code","1eba3328":"code","c9270027":"code","395271e1":"code","2664b8d2":"code","76abf4c5":"code","dc24ce79":"code","36410ab6":"code","14892aed":"code","8946dc31":"code","367c1163":"code","9a769d14":"markdown"},"source":{"1924b438":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ea5412bf":"!pip install pycaret","9a52ce3a":"from pycaret.datasets import get_data","6d7049cb":"# loading inbuilt datasets from pycaret\n# we will use diaetes dataset from pycaret itself\n# but yes we can also use our own csv file\ndiabetes_df = get_data('diabetes')","080a5761":"# this is a classification problem\n# importing classification modules\nfrom pycaret.classification import *","64f9cd06":"clf = setup(data = diabetes_df, target='Class variable')","aa63af2a":"# to compare the model with other algorithms available \n# compare_models() function is used\ncompare_models()","eec1cada":"# regression problem\nboston_df = get_data('boston')","acf340c1":"# instead of * we can also import a particular algorithm\nfrom pycaret.regression import *","e305aa8f":"reg = setup(data = boston_df, target = 'medv')","23e70f34":"boston_df.describe()","3067f924":"compare_models()","bfed3221":"regressor_model = create_model('catboost')","1eba3328":"regressor_model","c9270027":"reg_model_hypertune = tune_model('catboost', n_iter = 50, optimize = 'mae')","395271e1":"from pycaret.clustering import *","2664b8d2":"jewellery = get_data('jewellery')","76abf4c5":"clust_algo = setup(jewellery)","dc24ce79":"kmeans = create_model('kmeans')","36410ab6":"kmeans","14892aed":"### assign labels to the dataframe\nkmeans_df = assign_model(kmeans)","8946dc31":"# just have a look on the last column how the data points are assigned to different clusters\nkmeans_df.head()","367c1163":"# PCA is applied before clustering\nplot_model(kmeans)","9a769d14":"## How to hypertune your model"}}