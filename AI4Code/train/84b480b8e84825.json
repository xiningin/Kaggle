{"cell_type":{"1b3945cc":"code","908fe3fa":"code","42f04c63":"code","f926cea5":"code","fcde0bf4":"code","6d69dc97":"code","cc0526e5":"code","57e82e7f":"code","e5302de3":"code","8f989ae9":"code","8cb141e2":"code","7005b2eb":"code","2a8390d7":"code","8151f8ff":"code","9cea4278":"code","476395e7":"code","9da1d2b4":"code","8f9467d0":"code","a394fb4b":"code","ca1c1242":"code","ae98a71b":"code","be107587":"code","468a9857":"code","f5c53d05":"code","b90ff238":"code","c341ec8a":"code","d5bd34b6":"code","6f41a0aa":"code","cdb345a7":"code","2c8cdf66":"code","b5c7aa82":"code","261cbc4d":"code","c6e67003":"code","beb96d12":"code","b56dc42a":"code","953bf1fb":"code","69ad3bec":"code","c616bd70":"code","275ae34a":"code","79da860e":"code","4806e143":"code","f85176d9":"code","1fc7b40c":"code","b1943277":"code","40248f20":"code","5b3c065c":"code","44475940":"code","ee579356":"code","fe7afdc6":"code","9647174c":"code","32a54c89":"code","cdfd3fa5":"code","ac875cca":"code","21271ab5":"code","b26852cc":"code","04cb67c1":"markdown","67d2a930":"markdown","ea6f7977":"markdown","b41c21a0":"markdown","5cf9269a":"markdown","22a56d10":"markdown","263075e6":"markdown","81a50028":"markdown","2e1533d9":"markdown","41896396":"markdown","dc14883b":"markdown","703fa0f2":"markdown","204e883e":"markdown","b5765a76":"markdown","b6422d79":"markdown","8cfbdc0d":"markdown","b91946bc":"markdown","3c503b19":"markdown","4c6ecc0b":"markdown","c9804f87":"markdown","faee9fc8":"markdown","fe3bbba8":"markdown","eb155e68":"markdown","82c91099":"markdown","97b14808":"markdown","6aac2cc2":"markdown","f3c3b68f":"markdown","86c1706e":"markdown","f34a2713":"markdown","34ffabfe":"markdown","5409b911":"markdown","a52b3d28":"markdown","b6ea4ad5":"markdown"},"source":{"1b3945cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# plotly\n#import plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected = True)\n#from plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","908fe3fa":"timesData = pd.read_csv(\"\/kaggle\/input\/world-university-rankings\/timesData.csv\")","42f04c63":"type(timesData)","f926cea5":"timesData.info()","fcde0bf4":"timesData.head()","6d69dc97":"timesData.head(100)","cc0526e5":"first_100 = timesData.iloc[:100]","57e82e7f":"first_100","e5302de3":"import plotly.graph_objs as go                 #importing graph objects as go ","8f989ae9":"trace1 = go.Scatter(x = first_100.world_rank, y = first_100.citations, mode = \"lines\", name = \"citations\", marker = dict(color = \"rgba(238, 118, 33,1)\"), text = first_100.university_name)","8cb141e2":"trace2 = go.Scatter(x = first_100.world_rank, y = first_100.teaching, mode = \"lines+markers\", name = \"teaching\", marker = dict(color = \"rgba(139,0,139,0.8)\"), text = first_100.university_name)","7005b2eb":"data = [trace1, trace2]","2a8390d7":"layout = dict(title = \"Citation and Teaching vs World Rank of Top 100 Universities\", xaxis = dict(title = \"World Rank\", ticklen = 5, zeroline = False))  # title :  label of x axis\n                                                                                                                                                         # zeroline : showing zero line or not\n                                                                                                                                                         # ticklen : length of x axis ticks           ","8151f8ff":"iplot(dict(data = data, layout = layout))","9cea4278":"first_100_2014 = timesData[timesData.year == 2014].iloc[:100]\nfirst_100_2015 = timesData[timesData.year == 2015].iloc[:100]\nfirst_100_2016 = timesData[timesData.year == 2016].iloc[:100]","476395e7":"plot1 = go.Scatter(x = first_100_2014.world_rank, y = first_100_2014.citations, mode = \"markers\", name =\"2014\", marker = dict(color = \"rgba(0, 229, 238, 1)\"), text = first_100_2014.university_name)\nplot2 = go.Scatter(x = first_100_2015.world_rank, y = first_100_2015.citations, mode = \"markers\", name = \"2015\", marker = dict(color = \"rgba(238, 58, 140, 1)\"), text = first_100_2015.university_name)\nplot3 = go.Scatter(x = first_100_2016.world_rank, y = first_100_2016.citations, mode = \"markers\", name =\"2016\", marker = dict(color = \"rgba(102, 205, 0, 1)\"), text = first_100_2016.university_name)","9da1d2b4":"data = [plot1, plot2, plot3]","8f9467d0":"layout = dict(title = \"Citation vs world rank of top 100 universities with 2014, 2015 and 2016 years\", xaxis = dict(title = \"World Rank\", ticklen = 5, zeroline = False), yaxis = dict(title = \"Citations\", ticklen = 5, zeroline = False))","a394fb4b":"iplot(dict(data = data, layout = layout))","ca1c1242":"top_3_2014 = timesData[timesData.year == 2014].iloc[:3]","ae98a71b":"top_3_2014","be107587":"plot1 = go.Bar(x = top_3_2014.university_name, y = top_3_2014.citations, name =\"citations\", marker = dict(color = \"rgba(0, 229, 238, 1)\", line=dict(color='rgb(0,0,0)',width=1.5)), text = top_3_2014.country)\nplot2 = go.Bar(x = top_3_2014.university_name, y = top_3_2014.teaching, name = \"teaching\", marker = dict(color = \"rgba(238, 58, 140, 1)\", line=dict(color='rgb(0,0,0)',width=1.5)), text = top_3_2014.country)","468a9857":"data = [plot1, plot2]","f5c53d05":"layout = dict(title = \" Citations And Teaching Of Top 3 Universities In 2014\", xaxis = dict(title = \"University Names\", ticklen = 5, zeroline = False), yaxis = dict(title = \"Ratio\", ticklen = 5, zeroline = False))","b90ff238":"iplot(dict(data = data, layout = layout))","c341ec8a":"timesData.head()","d5bd34b6":"top_7_universities = timesData[timesData.year == 2016].iloc[:7]","6f41a0aa":"top_7_universities","cdb345a7":"top_7_universities.info()","2c8cdf66":"nums = []\nfor i in top_7_universities.num_students:\n    a = float(i.replace(',','.'))\n    nums.append(a)","b5c7aa82":"nums","261cbc4d":"plot1 = {\"values\" : nums, \"labels\": top_7_universities.university_name, \"hole\" : 0.3, \"type\": \"pie\"}\n\nlayout = go.Layout({\"title\" : \"Students Rate Of Top 7 Universities In 2016\"})\n\niplot(dict(data = plot1, layout = layout))","c6e67003":"timesData.head()","beb96d12":"top_20_2016 = timesData[timesData.year == 2016].iloc[:20]","b56dc42a":"nums1 = []\nfor i in top_20_2016.num_students:\n    a = float(i.replace(',','.'))\n    nums1.append(a)","953bf1fb":"nums2 = []\nfor i in top_20_2016.international:\n    b = float(i)\n    nums2.append(b)","69ad3bec":"nums2","c616bd70":"plot1 = [{\"x\" : top_20_2016.world_rank, \"y\": top_20_2016.teaching, \"mode\": \"markers\", \"marker\": {\"color\": nums2, \"size\" : nums1, \"showscale\": True}}]\n\nlayout = go.Layout({\"title\" : \" University World Rank (first 20) vs Teaching Score With Number Of Students (size) And International Score (color) In 2016\"})\n\niplot(dict(data = plot1, layout = layout))","275ae34a":"student_2011 = timesData[timesData.year == 2011]\nstudent_2012 = timesData[timesData.year == 2012]","79da860e":"plot1 = go.Histogram(x = student_2011.student_staff_ratio, name = \"2011\")\nplot2 = go.Histogram(x = student_2012.student_staff_ratio, name = \"2012\")\n\nlayout = go.Layout(title = \"students-staff ratio in 2011 and 2012 years\", xaxis = dict(title = \"Student Staff Ratio\"), yaxis = dict(title = \"Count\"))\n\niplot(go.Figure(data = [plot1,plot2], layout = layout))","4806e143":"from wordcloud import WordCloud","f85176d9":"data_2011 = timesData.country[timesData.year == 2011]","1fc7b40c":"plt.figure(figsize = (10,10))\nword_cloud = WordCloud(background_color = \"white\", width = 512, height = 384). generate(\" \".join(data_2011))\nplt.imshow(word_cloud)\nplt.axis(\"off\") # for not visualizing x and y axis.\n\nplt.show()","b1943277":"data_2015_score = timesData.total_score[timesData.year == 2015]\ndata_2015_research = timesData.research[timesData.year == 2015]","40248f20":"import plotly.graph_objs as go ","5b3c065c":"plot1 = go.Box(y = data_2015_score, name = \"total score of universities in 2015\")\nplot2 = go.Box(y = data_2015_research, name = \"research of universities in 2015\")\n\niplot(go.Figure(data = [plot1,plot2]))","44475940":"import plotly.figure_factory as ff","ee579356":"data_for_scatter = timesData[timesData.year == 2015]\n\ndata_2015_compare = data_for_scatter.loc[:,[\"research\", \"international\", \"total_score\"]]","fe7afdc6":"data_2015_compare","9647174c":"data_2015_compare[\"index\"] = np.arange(1,len(data_2015_compare)+1)","32a54c89":"data_2015_compare","cdfd3fa5":"iplot(ff.create_scatterplotmatrix(data_2015_compare, diag = \"box\", index = \"index\", height=700, width=700))","ac875cca":"plot1 = go.Scatter(x = data_for_scatter.world_rank, y = data_for_scatter.teaching, name = \"teaching\")\nplot2 = go.Scatter(x = data_for_scatter.world_rank, y = data_for_scatter.income, xaxis = \"x2\", yaxis = \"y2\", name =\"income\")\n\nlayout = go.Layout(title = \"Income and Teaching vs World Rank of Universities\", xaxis2 = dict(domain=[0.6, 0.95], anchor = 'y2'), yaxis2 = dict( domain=[0.6, 0.95], anchor='x2'))\n\niplot(go.Figure(data = [plot1, plot2], layout = layout))","21271ab5":"plot1 = go.Scatter3d(x = data_for_scatter.world_rank, y = data_for_scatter.research, z = data_for_scatter.citations, mode = \"markers\")\n\nlayout = go.Layout(title = \"World Rank vs Research vs Citations\") \n\niplot(go.Figure(data = plot1, layout = layout))","b26852cc":"trace1 = go.Scatter(x = data_for_scatter.world_rank, y = data_for_scatter.research, name = \"research\")\ntrace2 = go.Scatter(x = data_for_scatter.world_rank, y = data_for_scatter.citations, xaxis = \"x2\", yaxis = \"y2\", name = \"citations\")\ntrace3 = go.Scatter(x = data_for_scatter.world_rank, y = data_for_scatter.income, xaxis = \"x3\", yaxis = \"y3\", name = \"income\")\ntrace4 = go.Scatter(x = data_for_scatter.world_rank, y=data_for_scatter.total_score, xaxis = \"x4\", yaxis = \"y4\", name = \"total_score\")\ndata = [trace1, trace2, trace3, trace4]\nlayout = go.Layout(xaxis = dict(domain = [0, 0.45]), yaxis = dict(domain = [0, 0.45]), xaxis2 = dict(domain = [0.55, 1]), xaxis3 = dict(domain = [0, 0.45], anchor = \"y3\"), xaxis4 = dict(domain = [0.55, 1], anchor = \"y4\" ), yaxis2 = dict(domain = [0, 0.45], anchor = \"x2\"), yaxis3 = dict(domain=[0.55, 1]), yaxis4 = dict(domain = [0.55, 1], anchor = \"x4\"), \ntitle = \"Research, citation, income and total score VS World Rank of Universities\")\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","04cb67c1":"### Content of the data:\n* world_rank: world rank for the university. Contains rank ranges and equal ranks (eg. =94 and 201-250)\n* university_name: name of university\n* country: country of each university\n* teaching: university score for teaching (the learning environment)\n* international: university score international outlook (staff, students, research)\n* research: university score for research (volume, income and reputation)\n* citations: university score for citations (research influence)\n* income: university score for industry income (knowledge transfer)\n* total_score: total score for university, used to determine rank\n* num_students: number of students at the university\n* student_staff_ratio: ratio of students and staffs\n* international_students: ratio of international students\n* female_male_ratio: male and female ratio in universities\n* year: university ranks according to years","67d2a930":"<a id = \"3\"><\/a>\n# 3.Scatter Plot","ea6f7977":"<a id = \"11\"><\/a>\n# 11.Inset Plot","b41c21a0":"<a id = \"2\"><\/a>\n# 2.Line Charts","5cf9269a":"Two plots in one frame.","22a56d10":"<a id = \"5\"><\/a>\n# 5.Pie Chart","263075e6":"As you can see \"num_students\" variable has a type object. We need to do it float64.","81a50028":"I am going to visualize our data using plotly library.","2e1533d9":"<a id = \"13\"><\/a>\n# 13.Multiple Subplots","41896396":"<a id = \"12\"><\/a>\n# 12. 3D Scatter Plot wiht Colorscaling","dc14883b":"I am going to compare citation and world rank of top 100 universities with 2014, 2015 and 2016 years.","703fa0f2":"I am going to compare citations and teaching of top 3 universities in 2014.","204e883e":"I ama going to visualize students-staff ratio in 2011 and 2012 years.","b5765a76":"I am going to visualize students rate of top 7 universities in 2016.","b6422d79":"I am going to compare teaching scores and incomes of the universities in 2015.","8cfbdc0d":"Parts of the notebook:","b91946bc":"<a id = \"7\"><\/a>\n# 7.Histogram","3c503b19":"I am going to visualize university world rank (first 20) vs teaching score with number of students (size) and international score (color) in 2016.","4c6ecc0b":"<a id = \"4\"><\/a>\n# 4.Bar Plot","c9804f87":"<a id = \"6\"><\/a>\n# 6.Bubble Chart","faee9fc8":"* mode -> which plot type we are gonna use.\n* name -> title of the plot.\n* marker -> color of the plot.\n* text -> information written on the plot.","fe3bbba8":"<a id = \"10\"><\/a>\n# 10.Scatter Matrix Plots","eb155e68":"The Times Higher Education World University Ranking is widely regarded as one of the most influential and widely observed university measures, done in the United Kingdom in 2010.\n\nIn this tutorial, I am going to analyze the data and try to visuaize it with different kind of visualisation methods using plotly library.","82c91099":"<a id = \"1\"><\/a>\n# 1.Load and Check Data","97b14808":"I am going to visualize countries, which are mentioned most in 2011. ","6aac2cc2":"* layout -> title: name of the plot","f3c3b68f":"<a id = \"9\"><\/a>\n# 9.Box Plot","86c1706e":"<a id = \"8\"><\/a>\n# 8.Word Cloud","f34a2713":"# INTRODUCTION","34ffabfe":"1. [Loading Data and Explanation of Features](#1)\n1. [Line Charts](#2)\n1. [Scatter Charts](#3)\n1. [Bar Charts](#4)\n1. [Pie Charts](#5)\n1. [Bubble Charts](#6)\n1. [Histogram](#7)\n1. [Word Cloud](#8)\n1. [Box Plot](#9)\n1. [Scatter Plot Matrix](#10)\n1. [Inset Plot](#11)\n1. [3D Scatter Plot wiht Colorscaling](#12)\n1. [Multiple Subplots](#13)","5409b911":"I added an index column","a52b3d28":"I am going to prepare my data frame:","b6ea4ad5":"To get general idea from dataset we use \"info()\" function."}}