{"cell_type":{"88a04e43":"code","e4e80e65":"code","986a8a04":"code","9f570a5e":"code","6b3e328b":"code","ca38d93c":"code","4e073dad":"code","2c49bf62":"code","fe2e8d94":"code","a793f99e":"code","de155f75":"code","55c3634d":"code","fe500f1b":"code","e3d666d4":"code","772c0d60":"code","db143b14":"code","32108ed7":"code","e1865a1b":"code","88154229":"markdown","e125d47c":"markdown","de902306":"markdown","536492a1":"markdown","2a73aec0":"markdown","622a5d2b":"markdown","7baa0529":"markdown","22a12a34":"markdown","dffdc35f":"markdown","8b1a4340":"markdown","ade2b235":"markdown","86f9f918":"markdown","bb1846c8":"markdown"},"source":{"88a04e43":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","e4e80e65":"training_set = pd.read_csv('\/kaggle\/input\/unsw-nb15\/UNSW_NB15_training-set.csv')\ntraining_set.info()","986a8a04":"training_set.head()","9f570a5e":"print(training_set['label'].unique())\nprint(training_set['attack_cat'].unique())","6b3e328b":"mask = (training_set.dtypes == np.object) #\u79bb\u6563\u578b\u53d8\u91cf\u7684\u7c7b\u578b\nprint(training_set.loc[:,mask].head())\nlist_cat = training_set.loc[:,mask].columns.tolist()\nprint(list_cat)\nprint(training_set.loc[:,mask].values)\n","ca38d93c":"mask = (training_set.dtypes != np.object)\nprint(training_set.loc[:,mask].head())\nlist_cat = training_set.loc[:,mask].columns.tolist()\nprint(list_cat)\ntraining_set.loc[:,mask].describe()","4e073dad":"# number of occurrences for each attack category\ntraining_set.attack_cat.value_counts()","2c49bf62":"mask = (training_set.label == 1)\nprint(training_set.loc[mask,:].service.value_counts())\nprint(training_set.loc[mask,:].proto.value_counts())","fe2e8d94":"mask = (training_set.label == 0)\nprint(training_set.loc[mask,:].service.value_counts())\nprint(training_set.loc[mask,:].proto.value_counts())","a793f99e":"#\u5c06attack_cat\u591a\u7c7b\u8f6c\u4e3a\u6570\u503c\nfrom sklearn import preprocessing\nle=preprocessing.LabelEncoder()\nnum_cat = le.fit_transform(training_set.attack_cat)\nprint(le.classes_)\nprint(np.unique(num_cat))","de155f75":"Y=num_cat.tolist()\nX = training_set.drop(columns=['id','attack_cat','label']) #\u53bb\u9664\u65e0\u5173\u53d8\u91cf\nmask = (X.dtypes == np.object)\nlist_cat = X.loc[:,mask].columns.tolist()\nlist_cat","55c3634d":"X = pd.get_dummies(X, columns=list_cat)\nX.head()","fe500f1b":"Y[:10]","e3d666d4":"import sklearn\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.2, random_state = 42)","772c0d60":"import xgboost as xgb\nfrom sklearn import svm\nfrom sklearn.metrics import classification_report,roc_auc_score,average_precision_score,confusion_matrix\n","db143b14":"params = {\n    'max_depth': 10,\n    'objective': 'multi:softmax',  # error evaluation for multiclass training\n    'num_class': 10,                # Number of classes \n    'n_gpus': 1\n}\n\nxg_clf = xgb.XGBClassifier(**params)","32108ed7":"pred = xg_clf.fit(X_train, y_train).predict(X_test)\nprint(classification_report(y_test, pred))\nprint(confusion_matrix(y_test, pred))","e1865a1b":"clf = svm.SVC(gamma='auto')\npredsvm=clf.fit(X_train,y_train).predict(X_test)\nprint(classification_report(y_test, predsvm))\nprint(confusion_matrix(y_test, predsvm))","88154229":"### \u79bb\u6563\u578b\u53d8\u91cf","e125d47c":"## 3\u3001Data cleaning","de902306":"## \u6570\u636e\u96c6\u7b80\u4ecb","536492a1":"## 2. Dataset Observation","2a73aec0":"### Evaluation of the training dataset","622a5d2b":"### \u6570\u503c\u578b\u53d8\u91cf","7baa0529":"## import","22a12a34":"## 4\u3001Machine Learning Analysis","dffdc35f":"## 1. Loading Data","8b1a4340":"#### proto\u548cservice\u5728\u653b\u51fb\u6570\u636e\u91cc\u7684\u5206\u5e03","ade2b235":"\u8be5\u6570\u636e\u96c6\u6709\u4e5d\u79cd\u7c7b\u578b\u7684\u653b\u51fb\uff0c\u5373\u6a21\u7cca\u653b\u51fb\u3001\u5206\u6790\u653b\u51fb\u3001\u540e\u95e8\u653b\u51fb\u3001DoS\u653b\u51fb\u3001\u5229\u7528\u653b\u51fb\u3001\u901a\u7528\u653b\u51fb\u3001\u4fa6\u5bdf\u653b\u51fb\u3001\u5916\u58f3\u4ee3\u7801\u653b\u51fb\u548c\u8815\u866b\u653b\u51fb\u3002\uff08Fuzzers, Analysis, Backdoors, DoS, Exploits, Generic, Reconnaissance, Shellcode and Worms.\uff09","86f9f918":"#### proto\u548cservice\u5728\u6b63\u5e38\u6570\u636e\u91cc\u7684\u5206\u5e03","bb1846c8":"# Predicting attacks : UNSW-NB 15 dataset"}}