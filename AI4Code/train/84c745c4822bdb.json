{"cell_type":{"7d704445":"code","1280962c":"code","1b4e96d9":"code","c1fb113f":"code","cd4f6955":"code","676d07a2":"code","c519e620":"code","7d4ec0e7":"code","febcbf6a":"code","05d7a9c8":"code","7f619ce6":"code","2fdbac53":"code","2c95c70d":"code","be6b6a05":"code","433baae5":"code","0c987240":"code","41db7dc6":"markdown","6e8cef6d":"markdown","7b7e8904":"markdown"},"source":{"7d704445":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1280962c":"restaurants_df = pd.read_csv('\/kaggle\/input\/zomato-restaurants-hyderabad\/Restaurant names and Metadata.csv')\nreviews_df = pd.read_csv('\/kaggle\/input\/zomato-restaurants-hyderabad\/Restaurant reviews.csv')","1b4e96d9":"restaurants_df = restaurants_df.rename(columns={'Name': 'Restaurant'})\nrestaurants_df.head()","c1fb113f":"reviews_df['Rating'].unique()","cd4f6955":"reviews_df.head()","676d07a2":"restaurants_df.shape","c519e620":"reviews_df.shape","7d4ec0e7":"rev_res_df = pd.merge(restaurants_df, reviews_df, on=['Restaurant'], how='inner')\nrev_res_df","febcbf6a":"rev_res_df[rev_res_df['Rating'].isna()]","05d7a9c8":"rev_res_df = rev_res_df[~rev_res_df['Rating'].isna()]\nrev_res_df.head()","7f619ce6":"rev_res_df['Cost'] = rev_res_df['Cost'].apply(lambda c: c.replace(',',''))\nrev_res_df['Cost'] = rev_res_df['Cost'].apply(lambda c: int(c))","2fdbac53":"from sklearn import preprocessing\n\n\nrev_res_df.loc[rev_res_df['Rating']=='Like', 'Rating'] = '5.5'\nrev_res_df['Rating'] = rev_res_df['Rating'].apply(lambda r: float(r))\nrev_res_df['Rating'] = preprocessing.minmax_scale(rev_res_df['Rating'], feature_range=(1, 10))\nrev_res_df['Rating'] = rev_res_df['Rating'].apply(lambda r: int(r))","2c95c70d":"sns.countplot(x=\"Rating\", data=rev_res_df)","be6b6a05":"sns.regplot(y=\"Cost\", x=\"Rating\", data=rev_res_df)","433baae5":"sns.regplot(y=\"Cost\", x=\"Pictures\", data=rev_res_df)","0c987240":"sns.regplot(y=\"Rating\", x=\"Pictures\", data=rev_res_df)","41db7dc6":"# Prepare","6e8cef6d":"One restaurant is associated with multiple reviews.","7b7e8904":"# EDA"}}