{"cell_type":{"4f6620d5":"code","5d1ee493":"code","c7f9fbda":"code","89fc5f76":"code","2fb55c90":"code","ed105e07":"code","db6141fc":"markdown"},"source":{"4f6620d5":"from kaggle_secrets import UserSecretsClient\ngcp_project_id = UserSecretsClient().get_secret(\"gcp_project_id\")","5d1ee493":"import gc\nimport numpy as np\nimport pandas as pd\n\nfrom tqdm.auto import tqdm\n\nfrom google.cloud import bigquery","c7f9fbda":"client = bigquery.Client(project=gcp_project_id)","89fc5f76":"n_lag = 1\n\nvecs = []\nfor feat_i in tqdm(range(0, 100)):\n    query = f\"\"\"\n    SELECT\n        IFNULL(LAG (f_{feat_i}, {n_lag}) OVER (PARTITION BY investment_id ORDER BY time_id), 0) AS f_{feat_i}_l_{n_lag}\n    FROM\n        `{gcp_project_id}.ump.train`\n    ORDER BY time_id, investment_id\n    \"\"\"\n\n    query_job = client.query(query)\n\n    data = query_job.to_dataframe()\n    vecs.append(data.values[:, 0])","2fb55c90":"np.save(\"f0_f99_lag_1\", np.stack(vecs).T)","ed105e07":"!ls","db6141fc":"# Get Lag Features\n\nThis code calculate lag features by using BigQuery API.\n\nI'm creating three notebook similar to this one to avoid OOM.\n\nThese datasete is here:\n- f0~99: https:\/\/www.kaggle.com\/takamichitoda\/ump-lag-1-features-f0f99\n- f100~199: https:\/\/www.kaggle.com\/takamichitoda\/ump-lag-1-features-f100f199\n- f200~299: https:\/\/www.kaggle.com\/takamichitoda\/ump-lag-1-features-f200f299"}}