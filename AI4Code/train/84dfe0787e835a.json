{"cell_type":{"9fa3322d":"code","f04f7c06":"code","fcb7b242":"code","82a17e50":"code","1e749136":"code","bf6d1124":"code","6c95ff95":"code","bac45745":"markdown","e4d0de24":"markdown","ad2a2e11":"markdown","494276d3":"markdown","731d400f":"markdown","866a1616":"markdown","eccf3d1d":"markdown"},"source":{"9fa3322d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport janestreet\n\nfrom lightgbm import LGBMClassifier\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f04f7c06":"train = pd.read_csv(\"\/kaggle\/input\/jane-street-market-prediction\/train.csv\")","fcb7b242":"train[\"action\"] = train[\"resp\"] > 0","82a17e50":"train = train[train[\"date\"] > 85]","1e749136":"features = [col for col in train.columns if \"feature\" in col]","bf6d1124":"model = LGBMClassifier()\nmodel.fit(train[features], train[\"action\"])","6c95ff95":"env = janestreet.make_env() # initialize the environment\niter_test = env.iter_test() # an iterator which loops over the test set\nfor (test_df, sample_prediction_df) in iter_test:\n    sample_prediction_df[\"action\"] = model.predict(test_df[features]).astype(int)\n    env.predict(sample_prediction_df)","bac45745":"Filter date < 85","e4d0de24":"A model with the default parameters:","ad2a2e11":"# [Jane] Simple Lightgbm submission - Sanity check\n\nThis is a sanity check notebook to understand how submission works. It's going to give you a non-zero score and then what you need to do is to replace this simple model by a better one.","494276d3":"Now the submission part:","731d400f":"## Create a target and select the features","866a1616":"Let's use all features:","eccf3d1d":"And that's all! It should give you a low score, but it works!"}}