{"cell_type":{"9681ed1e":"code","df1c69fb":"code","ff2622f1":"code","d798c779":"code","26b96c37":"code","0e4316cf":"code","a2ee6583":"code","ea57ce6e":"code","91939c01":"code","1e3ad1a4":"code","8e4c15b9":"code","e159bb6c":"code","2096d707":"code","3899141f":"code","e294efcf":"code","1007f6f4":"markdown","64461b8d":"markdown","fde91bde":"markdown","f660bca9":"markdown","08259946":"markdown","3c4c1ee7":"markdown","2c50d7cd":"markdown","e37cb43b":"markdown","ac5c1ab6":"markdown","1545403f":"markdown","01943aa1":"markdown","9044de05":"markdown","78294df5":"markdown","1ec30a4a":"markdown","146b3ae0":"markdown","7e2e93b2":"markdown"},"source":{"9681ed1e":"!jt -t oceans16\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport math\nfrom collections import Counter","df1c69fb":"ipl = pd.read_csv('..\/input\/ipl-complete-dataset-20082020\/IPL Matches 2008-2020.csv', parse_dates = True, index_col = 2)\n\n## Cleaning The Data##\n\nipl = ipl.drop(columns = ['id','method'])\n\n## check for Columns with NaN Values\n\nsns.set_style('dark')\n\nplt.rcParams[\"figure.figsize\"] = (28,6)\n\nipl.isna().sum().plot(kind = 'bar',color = '#00afb9',label = \"Number of NaN's\")\n\nplt.xlabel('Columns', color = '#f07167', fontsize = 20)\n\nplt.ylabel(\"Number of Missing Values\", color = '#f07167', fontsize = 20)\n\nplt.title(\"MISSING VALUES\", color  = '#0081a7', fontsize = 20)\n\nplt.xticks(rotation = 90, color = '#6d597a', fontsize = 20)\n\nplt.yticks(color = '#6d597a', fontsize = 20)\n\nplt.axhline(y = 4, label = \"Four columns with Similar number of NaN Values\", linestyle = '--')\n\nplt.legend(fontsize = 20)\n\nplt.annotate(xy =(10,16) ,xytext =(4,10) ,text ='\"result_margin\" column has largest number of NaN Values'\\\n             ,arrowprops = {'arrowstyle':'simple','color':'#00296b'}, fontsize = 20, color = \"#1f2041\")\nplt.show()\n\nplt.clf()\n","ff2622f1":"## Cleaning Data From NaN Values\n\nipl['city'] = ipl['city'].fillna('Unkown City')\n\nipl['winner'] = ipl['winner'].fillna('No Result')\n\nipl['result'] = ipl['result'].fillna('No Result')\n\nipl['player_of_match'] = ipl['player_of_match'].fillna('No Result')\n\nipl['result_margin'] = ipl['result_margin'].fillna(0)","d798c779":"##Umpires in IPL History##\n\n## Extracting Umpire Data from the IPL Data##\n\numpire1 = ipl['umpire1'].to_list()\n\numpire2 = ipl['umpire2'].to_list()\n\numpire_df = pd.DataFrame()\n\numpire_df['Total_umpires'] = umpire1+umpire2\n\n## Plotting the extracted data to get insights##\n\numpire = sns.catplot(kind = 'count',x = 'Total_umpires', data = umpire_df, color  = '#00afb9')\n\n##Customising the PLOT##\n\nsns.set_style('dark')\n\numpire.fig.set_size_inches([28,6])\n\nplt.title(\"Number of Matches Umpired per Unique Umpire\", fontsize = 20, color  = '#0081a7')\n\nplt.xlabel(\"Umpires\", color = '#fb5607', fontsize = 20)\n\nplt.ylabel('Match Count',  color = '#fb5607', fontsize = 20)\n\nplt.xticks(rotation = 90, color = '#6d597a', fontsize = 20)\n\nplt.yticks(color = '#6d597a', fontsize = 20)\n\nplt.annotate( xy = (20, 120), fontsize = 20,text = 'S Ravi Tops with 120 Matches',\\\n            arrowprops = {'arrowstyle':'simple', 'color':'#00296b'}, xytext = (21,115), color = \"#1f2041\")\nplt.show()\n\nplt.clf()","26b96c37":"pop = 0\n\nsns.set_palette('YlGnBu')\n\nexplode1 = [ 0 if x != 'No Result' else 0.2 for x in ipl['result'].value_counts().index ]\n\nplt.pie(ipl['result'].value_counts(),explode = explode1, autopct = '%1.1f%%')\n\nplt.legend(labels = ipl['result'].value_counts().index , fontsize = 20, loc = 'upper right', bbox_to_anchor=(1.5,0.9))\n\nplt.show()\n\nplt.clf()","0e4316cf":"## Corrcting the Error OF Chinnaswamy Stadium##\n\nipl = ipl.replace(['M Chinnaswamy Stadium'],'M.Chinnaswamy Stadium')\n\n## Creating a Count Plot withrespect to Venue at which mathces are held##\n\ng = sns.catplot(x = 'venue', data = ipl, kind = 'count', color = '#00afb9')\n\n##customising the Plot##\n\nsns.set_style('dark')\n\ng.fig.set_size_inches([28,6])\n\n# g.fig.suptitle(\"No of Cricket Matches in Different Venues\", color  = '#7209b7',y = 0.945)\n\nplt.title(\"Number of Cricket Matches in Different Venues\", fontsize = 20, color  = '#0081a7')\n\nplt.ylabel('Number of Matches Per Stadium',color = '#fb5607')\n\nplt.xlabel('Stadium', color = '#fb5607', fontsize = 20)\n\nplt.xticks(rotation = 90, color = '#6d597a', fontsize = 20)\n\nplt.yticks(color = '#6d597a', fontsize = 20)\n\nplt.annotate(xy = (0,78), xytext = (10,70), fontsize = 20, arrowprops = {'arrowstyle':'simple', 'color':'#00296b'},\\\n            text = \"M.Chinnaswamy Stadium Hosted Most IPL Matches\", color = \"#1f2041\")\n\nplt.show()\n\nplt.clf()","a2ee6583":"# Overall Teams\n\nprint(ipl['winner'].unique())","ea57ce6e":"#Correcting Errors and Rebranding Team names\n\nipl = ipl.replace(['Delhi Daredevils'],'Delhi Capitals')\n\nipl = ipl.replace(['Rising Pune Supergiants'],'Rising Pune Supergiant')\n\nipl = ipl.replace(['Deccan Chargers'],'Sunrisers Hyderabad')\n\nprint(ipl['winner'].unique())\n\nipl_teams = list(ipl['winner'].unique())\n\nipl_cities  = list(ipl['city'].unique())","91939c01":"## Lets See Who won the Most ##\n\nwinner = sns.catplot(kind = 'count', x = 'winner', data = ipl, color  = '#00afb9')\n\n## Customising the Plot ##\n\nsns.set_style('dark')\n\nwinner.fig.set_size_inches([28,6])\n\nplt.title(\"Number of Matches Won by Each Franchise\", fontsize = 20, color  = '#0081a7')\n\nplt.ylabel('Wins',color = '#fb5607', fontsize = 20)\n\nplt.xlabel('IPL Franchises', color = '#fb5607', fontsize = 20)\n\nplt.xticks(rotation = 90, color = '#6d597a', fontsize = 20)\n\nplt.yticks(color = '#6d597a')\n\nplt.annotate(xy = (7,118), xytext = (8,120), fontsize = 20, arrowprops = {'arrowstyle':'simple', 'color':'#00296b'},\\\n            text = \"Mumbai Indians Won most Matches\", color = \"#1f2041\")\nplt.show()\n\nplt.clf()","1e3ad1a4":"##Plot For Cities Which Hosted Ipl##\n\nsns.set_style('dark')\n\ncity = sns.catplot(x = 'city', data = ipl, kind ='count', color  = '#00afb9')\n\n## customizing the Plot ##\n\ncity.fig.set_size_inches([28,6])\n\nplt.title('Number of Matches Per City', color  = '#0081a7',fontsize = 20)\n\nplt.ylabel('Number of Matches Per City',color = '#fb5607', fontsize = 20)\n\nplt.xlabel('City', color = '#fb5607', fontsize = 20)\n\nplt.xticks(rotation = 90, color = '#6d597a', fontsize = 20)\n\nplt.yticks(color = '#6d597a', fontsize = 20)\n\n##Adding Annotations##\n\nplt.annotate(xy = (27,13), xytext = (24,40), fontsize = 20, arrowprops = {'arrowstyle':'simple', 'color':'#00296b'},\\\n            text = \"Note That there are 13 Unknown Cities\", color = \"#1f2041\")\n\nplt.annotate(xy = (4,100), xytext = (7,65), fontsize = 20, arrowprops = {'arrowstyle':'simple', 'color':'#00296b'},\\\n            text = \"Mumbai Hosted Most IPL Matches and \\nInterestigly Its the home town of Mumbai Indians the team with most wins in IPL\"\\\n             , color = \"#1f2041\")\n\nplt.show()\n\nplt.clf()","8e4c15b9":"## Filtering ipl Data Frame##\n\n\"\"\" Let's cretate a Data Frame from ipl Data Frame with condition that Mumbai indians won the match\"\"\"\n\nipl_mi_won = ipl[ipl['winner'] == 'Mumbai Indians']\n\nsns.set_palette('YlGnBu')\n\nfig, ax = plt.subplots()\n\nexplode = [0.1 if city == 'Mumbai' else 0 for city in ipl_mi_won['city'].value_counts().index ]\n\nax.pie(ipl_mi_won['city'].value_counts(), explode = explode, autopct='%1.1f%%', shadow = True)\n\n## customization ##\n\nax.legend(loc = 'upper right', bbox_to_anchor=(1.2,0.9), labels = ipl_mi_won['city'].value_counts().index )\n\nax.annotate(xy = (0.4,0.9), xytext = (1.5,1.5), fontsize = 20, arrowprops = {'arrowstyle':'simple', 'color':'#00296b'},color = \"#1f2041\", \\\n            text =\"Proving our Hypothesis True Mumbai Indians won 53 matches in Mumbai that is 44.2% of thier total 120 wins\")\n\nfig.set_size_inches([32,9])\n\nplt.plot()","e159bb6c":"# lets remove rows with result == 'No Result' ##\n\nipl_without_no_result = ipl[ipl['winner'] != 'No Result']\n\n##Forming a Facet Grid##\n\ng = sns.catplot(kind = 'count', x= 'city', data = ipl_without_no_result, col ='winner', col_wrap = 3, color  = '#00afb9')\n\ng.set_xticklabels(rotation = 90,color = '#6d597a' )\n\ng.set_yticklabels(color = '#6d597a')\n\ng.set_xlabels('Cities' ,color = '#fb5607')\n\ng.set_ylabels('Wins in the city',color = '#fb5607')\n\ng.set_titles( color  = '#0081a7')\n\ng.add_legend()\n\nplt.show()\n\nplt.clf()","2096d707":"### Extracting data to Visualise Info ###\nteam_and_thier_best_city = []\n\npercentage_of_wins = []\n\nfor team in ipl_without_no_result['winner'].unique():\n    data = ipl_without_no_result[ipl_without_no_result['winner'] == team]['city'].value_counts(normalize =True)\n    team_and_thier_best_city.append(f'{team} at {list(data.index)[0]}')\n    percentage_of_wins.append(data.max()*100)\n    ","3899141f":"\n### Forming A bar plot using the Lists we created ###\n\nsns.barplot(x = team_and_thier_best_city, y = percentage_of_wins, color  = '#00afb9')\n\n### customization ###\n\nplt.xticks(rotation = 90, fontsize = 20,color = '#6d597a')\n\nplt.yticks( [0,10,20,30,40],['0%','10%','20%','30%','40%'],fontsize = 20,color = '#6d597a')\n\nplt.ylabel(\"Percentage of wins\", fontsize = 20, color = '#fb5607')\n\nplt.xlabel(\"Teams at cities where they won most\", fontsize = 20, color = '#fb5607')\n\nplt.title(\"Pecentage of wins at  Home \", color  = '#0081a7', fontsize = 20)\n\nplt.axhline(np.mean(percentage_of_wins), label = 'Mean', linestyle = '--', color = '#0077b6')\n\nplt.legend(fontsize = 20)\n\nplt.show()","e294efcf":"print(len(ipl_without_no_result[ipl_without_no_result['toss_winner'] == ipl_without_no_result['winner']].index))\nprint(len(ipl_without_no_result[ipl_without_no_result['toss_winner'] != ipl_without_no_result['winner']].index))","1007f6f4":"### From the above Facet Grid it's pretty clear that Home Matches constitute a major chunk of Teams total match wins.\n### Lets further explore to seee if \"Home Advantage\" is Fictional or Real ","64461b8d":"### Team have an average 35% of thier total wins at Home. From this we can conclude that \"Home Advantage\" is not A myth\n\n***\n","fde91bde":"# Re-Branding of Delhi and HyderaBad\n#### Both The Delhi DareDevils and the Delhi Capitals are the same team. The Delhi daredevils in 2018 renamed to Delhi capitals. And also Deccan Charges were acquired by a new owner and was Renamed to Sunrisers hyderabad. So for the Sake of Better Coding Lets Rename Delhi Daredevils to Delhi capitals and Deccan Chargers to Sunrisers Hyderabad in 'ipl' DataFrame. Specifically in the column 'winner'","f660bca9":"# Overall\n#### The Above list is the Cleaned Version of Teams that participated in Ipl History. From the list we can count 13 Unique teams that participated.","08259946":"# Errors in the IPL Team List\n#### We have Noticed a Entry error. Both Risisng Pune Supergiants and Rising Pune Supergiant are obivously same team. But due to wrong entry we have Rising Pune Supergaints which is not the name of franchise. We should Correct This Error.","3c4c1ee7":"# Umpiring facts that I observed from the data\n***\n","2c50d7cd":"# Conclusions and Some Finds\n* Of 56 umpires to have umpired in IPL ***S.Ravi*** Umpired Most number of IPL matches with 120 matches\n* ***M.Chinnaswamy*** Stadium in Banglore hosted most number of IPL matches. A whooping 80 matches were held at this Venue\n* ***Mumbai*** as a city hosted most number of IPL matches and The Mumbai's home team ***Mumbai Indians*** won most number of IPL matches\n* When we dug further we were able to see that Home Advantage is Real and playing at home does help teams\n* But winning a toss doesnt seems to have a deterministic effect on a match's outcome. ","e37cb43b":"# Observations From Above Two Plots\n#### Mumabai Indians are the Team with most Number of wins(with 120 wins) in IPL and Mumbai which is there home City also hosted most number of IPL Matches .\n\n#### This assumed correlation screams of \"HOME ADVANTAGE\". Lets see if such a term really holds value in the face of real data.","ac5c1ab6":"### As we can see '418' times did teams win the toss and won the match and '394' times teams won the toss and still lost the match. with just 24 matches of difference we can say that winnig a TOSS doesnt help you in winning matches","1545403f":"***","01943aa1":"# Importance of TOSS\n### While we proved Home Advantage is not fictious. There is one more Aspect of a cricket match which cricket community deem quite important and that is winning a toss. People feel that winning a toss can give a team massive advantage. Lets explore if it's True.","9044de05":"# M.Chinnaswamy Stadium\n#### As we can see from the above countplot M.Chinnaswamy Stadium in Chennai Held Most IPL Matches.","78294df5":"# With this I wave you a Good Bye!! Take care and wear masks.","1ec30a4a":"# Filling up the NaN values\n***\n#### As we can see 'city' Column and 'result_margin' column Have most NaN values. I will fill city columns NaN values with 'Unknown Venue'. And Result Margin will be filled with value 0.\n***\n#### Alse note that columns = ['player_of_match','winner','result','eliminator'] have Similar amount of NaN. I have researched a bit and these tend to be No results. I will Fill these with 'No Result'. But I dont think 'eliminator' Column is that important. So I will leave it as it is.","146b3ae0":"# Modes of wins in IPL","7e2e93b2":"#### 1) <span style = 'color:#0081a7'>S. Ravi<\/span> holds the distinction of Umpiring most number of matches in the IPL\n#### 2) In the entire History of IPL <span style = 'color:#0081a7'>56<\/span> Different Umpires have Supervised IPL Matches"}}