{"cell_type":{"e07ce044":"code","84c69b3d":"code","3281caaf":"code","9b558478":"code","a7b373a0":"code","da35c272":"code","00aff775":"code","1a7570c9":"code","cf7eedd1":"code","41833cf8":"code","412e2ce3":"code","8cd63552":"code","bf0afc1d":"code","f2b8820d":"code","e8a6b7dd":"code","dfb2b69e":"code","db58134f":"code","35a03c85":"code","68475ee4":"code","cb5f6688":"code","bda4a387":"code","dd4bd58b":"code","8c7de97c":"code","64a145af":"code","bbf40374":"code","73ef25ff":"code","6a7a2b25":"code","8121da92":"code","140fc288":"code","42ae5360":"markdown","d094bb19":"markdown","6943b279":"markdown","81849ff8":"markdown","d6119b2e":"markdown","56e11208":"markdown","dba925de":"markdown","fb0e3035":"markdown","9dd06604":"markdown","8d4e2c7d":"markdown","576ca488":"markdown","9e03e70e":"markdown","5e8506ee":"markdown","7e9fd099":"markdown","d6e7f44d":"markdown","2051f8de":"markdown","eafd5ec5":"markdown","447df42c":"markdown","24718863":"markdown","be243c49":"markdown","7c85858b":"markdown","25ff52cf":"markdown","3d9ab229":"markdown","6aadd071":"markdown","f9d8aa35":"markdown","41463aad":"markdown","81ccbfa6":"markdown"},"source":{"e07ce044":"# import the usual frameworks\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport collections\nimport warnings\nimport os\n\nfrom IPython.core.display import display, HTML\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# plotly for charts\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.tools as tls\nimport colorlover as cl \n\n# define color scale https:\/\/plot.ly\/ipython-notebooks\/color-scales\/\ncs = cl.scales['4']['div']['RdYlGn']    # for most charts \ncs7 =  cl.scales['7']['qual']['Dark2']   # for stacked bar charts  \n\n# configure things\nwarnings.filterwarnings('ignore')\n\n#pd.options.display.float_format = '{:,.2f}'.format  \n\npy.init_notebook_mode(connected=False)\n\n%load_ext autoreload\n%autoreload 2\n%matplotlib inline","84c69b3d":"new_col_names = ['framework','indeed', 'monster', 'simply', 'linkedin', \n                 'google', 'medium', 'arxiv', 'quora', \n                 'stars', 'watchers', 'forks', 'contribs',\n                ]\n\ndf = pd.read_csv('..\/input\/additions_mar.csv', \n                 skiprows=1,\n                 header=None, \n                 nrows=11, \n                 thousands=',',\n                 index_col=0,\n                 names=new_col_names,\n                 usecols=new_col_names,\n                )\n\ndf","3281caaf":"df.info()","9b558478":"# sum groupby for the hiring columns\ndf['hiring'] = df['indeed'] + df['monster'] + df['linkedin'] + df['simply'] ","a7b373a0":"df","da35c272":"data = [\n    go.Bar(\n        x=df.index,\n        y=df.hiring,\n        marker=dict(color=cs),\n    )\n]\n\nlayout = go.Layout(\n    dict(\n        title='Online Job Listing Growth',\n        xaxis=dict(title='Framework'),\n        yaxis=dict(title='Change in Listings'),\n    )\n)\n\n    \nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","00aff775":"y_indeed = df['indeed']\ny_monster = df['monster']\ny_simply = df['simply']\ny_linkedin = df['linkedin']\n","1a7570c9":"indeed = go.Bar(x=df.index, y=y_indeed, name = 'Indeed')\nsimply = go.Bar(x=df.index, y=y_simply, name='Simply Hired')\nmonster = go.Bar(x=df.index, y=y_monster, name='Monster')\nlinked = go.Bar(x=df.index, y=y_linkedin, name='LinkedIn')\n\ndata = [linked, indeed, simply, monster]\nlayout = go.Layout(\n    barmode='stack',\n    title='Online Job Listing Growth',\n    xaxis={'title': 'Framework'},\n    yaxis={'title': 'Change in Listings', 'separatethousands': True},\n    colorway=cs,\n)\n\nfig = go.Figure(data = data, layout = layout)\npy.iplot(fig)","cf7eedd1":"indeed = go.Bar(x=df.index, y=y_indeed, name = \"Indeed\")\nsimply = go.Bar(x=df.index, y=y_simply, name=\"Simply Hired\")\nmonster = go.Bar(x=df.index, y=y_monster, name=\"Monster\")\nlinked = go.Bar(x=df.index, y=y_linkedin, name=\"LinkedIn\")\n\n\ndata = [linked, indeed, simply, monster]\nlayout = go.Layout(\n    barmode='group',\n    title=\"Online Job Listing Growth by Website\",\n    xaxis={'title': 'Framework'},\n    yaxis={'title': \"Listings\", 'separatethousands': True,\n    }\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","41833cf8":"data = [\n    go.Bar(\n        x = df.index, \n        y = df['google'],\n        marker = dict(color=cs),  \n    )\n]\n    \nlayout = {\n    'title': 'Google Search: Past 6 Months to Prior 6 Months',\n    'xaxis': {'title': 'Framework'},\n    'yaxis': {'title': \"Average Search Interest\"},\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","412e2ce3":"# Make sure you have colorlover imported as cl for color scale\n# cs is defined in first cell\n\ndata = [\n    go.Bar(\n        x=df.index, \n        y=df['medium'],\n        marker=dict(color=cs) ,\n    )\n]\n    \nlayout = {\n    'title': 'New Medium Articles',\n    'xaxis': {'title': 'Framework'},\n    'yaxis': {'title': \"Articles\"},\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","8cd63552":"data = [\n    go.Bar(\n        x=df.index, \n        y=df['arxiv'],\n        marker=dict(color=cs),           \n    )\n]\n\nlayout = {\n    'title': 'New arXiv Articles',\n    'xaxis': {'title': 'Framework'},\n    'yaxis': {'title': \"Articles\"},\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","bf0afc1d":"data = [\n    go.Bar(\n        x=df.index, \n        y=df['quora'],\n        marker=dict(color=cs),           \n    )\n]\n\nlayout = {\n    'title': 'New Quora Topic Followers',\n    'xaxis': {'title': 'Framework'},\n    'yaxis': {'title': \"Followers\"},\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","f2b8820d":"y_stars = df['stars']\ny_watchers = df['watchers']\ny_forks = df['forks']\ny_contribs = df['contribs']\n\nstars = go.Bar(x = df.index, y=y_stars, name=\"Stars\")\nwatchers = go.Bar(x=df.index, y=y_watchers, name=\"Watchers\")\nforks = go.Bar(x=df.index, y=y_forks, name=\"Forks\")\ncontribs = go.Bar(x=df.index, y=y_contribs, name=\"Contributors\")\n\n\ndata = [stars, watchers, forks, contribs]\nlayout = go.Layout(barmode='stack', \n    title=\"GitHub Activity\",\n    xaxis={'title': 'Framework'},\n    yaxis={\n        'title': \"Quantity\",\n        'separatethousands': True,\n    }\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","e8a6b7dd":"trace1 = go.Bar(\n    x=df.index,\n    y=df['stars'],\n    name='Stars',\n    marker=dict(color=cs),\n)\ntrace2 = go.Bar(\n    x=df.index,\n    y=df['forks'],\n    name =\"Forks\",\n    marker=dict(color=cs)\n)\ntrace3 = go.Bar(\n    x=df.index,\n    y=df['watchers'],\n    name='Watchers',\n    marker=dict(color=cs)\n)\ntrace4 = go.Bar(\n    x=df.index,\n    y=df['contribs'],\n    name='Contributors',\n    marker=dict(color=cs),\n)\n\nfig = tls.make_subplots(\n    rows=2, \n    cols=2, \n    subplot_titles=(\n        'Stars', \n        'Forks',\n        'Watchers',\n        'Contributors',\n    )\n)\n\nfig['layout']['yaxis3'].update(separatethousands = True)\nfig['layout']['yaxis4'].update(separatethousands = True)\nfig['layout']['yaxis2'].update(tickformat = ',k', separatethousands = True)\nfig['layout']['yaxis1'].update(tickformat = ',k', separatethousands = True)\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 2, 1)\nfig.append_trace(trace4, 2, 2)\n\nfig['layout'].update(title = 'New GitHub Activity', showlegend = False)\npy.iplot(fig)","dfb2b69e":"df.info()","db58134f":"scale = MinMaxScaler()\nscaled_df = pd.DataFrame(\n    scale.fit_transform(df), \n    columns = df.columns,\n    index = df.index)    ","35a03c85":"scaled_df","68475ee4":"scaled_df['hiring_score'] = scaled_df[['indeed', 'monster', 'simply', 'linkedin']].mean(axis=1)","cb5f6688":"scaled_df","bda4a387":"scaled_df['github_score'] = scaled_df[['stars', 'watchers', 'forks', 'contribs']].mean(axis=1)","dd4bd58b":"scaled_df","8c7de97c":"weights = {'Online Job Listings\u00a0': .35,\n           'Google Seach Interest': .13,\n           'GitHub Activity': .13,\n           'Quora Followers': .13,\n           'Medium Articles': .13,\n           'ArXiv Articles': .13 }","64a145af":"# changing colors because we want to show these aren't the frameworks\nweight_colors = cl.scales['6']['qual']['Set1'] \n\ncommon_props = dict(\n    labels = list(weights.keys()),\n    values = list(weights.values()),\n    textfont=dict(size=16),\n    marker=dict(colors=weight_colors),\n    hoverinfo='none',\n    showlegend=False,\n)\n\ntrace1 = go.Pie(\n    **common_props,\n    textinfo='label',\n    textposition='outside',\n)\n\ntrace2 = go.Pie(\n    **common_props,\n    textinfo='percent',\n    textposition='inside',\n)\n\nlayout = go.Layout(title = 'Weights by Category')\n\nfig = go.Figure([trace1, trace2], layout=layout)\npy.iplot(fig)","bbf40374":"scaled_df['w_hiring'] = scaled_df['hiring_score'] * .35\nscaled_df['w_google'] = scaled_df['google'] * .13\nscaled_df['w_github'] = scaled_df['github_score'] * .13\nscaled_df['w_arxiv'] = scaled_df['arxiv'] * .13\nscaled_df['w_medium'] = scaled_df['medium'] * .13\nscaled_df['w_quora'] = scaled_df['quora'] * .13","73ef25ff":"weight_list = ['w_hiring', 'w_google', 'w_github', 'w_arxiv',  'w_medium', 'w_quora']\nscaled_df = scaled_df[weight_list]\nscaled_df","6a7a2b25":"scaled_df['gs'] = scaled_df[weight_list].sum(axis = 1)\nscaled_df","8121da92":"g_s_df = scaled_df * 100\ng_s_df = g_s_df.round(0)\ng_s_df.columns = ['Job Search Listings', 'Google Interest', 'GitHub Activity',  'ArXiv Articles', 'Medium Articles', 'Quora Followers', 'Growth Score']\ng_s_df.rename_axis('Framework', inplace = True)\ng_s_df","140fc288":"data = [\n    go.Bar(\n        x=scaled_df.index,          \n        y=g_s_df['Growth Score'],\n        marker=dict(color=cs),\n        text=g_s_df['Growth Score'],\n        textposition='outside',\n        textfont=dict(size=10)\n    )\n]\n\nlayout = {\n    'title': 'Deep Learning Framework Six-Month Growth Scores 2019',\n    'xaxis': {'title': 'Framework'},\n    'yaxis': {'title': \"Score\"}\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","42ae5360":"## Six-Month Growth Scores\nLet's make the growth score column by summing the seven category scores.","d094bb19":"Let's make a pie chart of weights by category.","6943b279":"## Import the usual frameworks and configure\n","81849ff8":"# GitHub Activity\nLet's make another stacked bar chart of the four GitHub categories.","d6119b2e":"Let's clean things up for publication","56e11208":"## Medium Articles\nPast 6 months increase.","dba925de":"### Scaled GitHub Activity\n\nLet's combine the scaled GitHub columns into a new column.","fb0e3035":"## Online Job Listings\nI looked at how many times each framework appeared in searches on job listing websites. For more discussion see the Medium Article the accompanies this notebook.","9dd06604":"## Quora Topic Followers\nPast 6 months increase.","8d4e2c7d":"# Make visualizations\nLet's make interactive plots with plotly for each popularity category.","576ca488":"### Scaled Online Job Listings\nLet's combine the scaled online job listing columns into a new column.","9e03e70e":"That's just the aggregate listings. Let's plot the job listing mentions for each website in a stacked bar chart. This will take multiple traces.","5e8506ee":"* Let's make a bar chart of the growth scores.","7e9fd099":"## Weight the Categories","d6e7f44d":"## ArXiv Articles\nPast 6 months increase.","2051f8de":"# Scale and Aggregate for Growth Scores\nScale each column. For each column we'll use MinMaxScaler to subtract the minumum and divide by the original max - original min.","eafd5ec5":"This presentation shows the information in a more comprehensible and appropriate format.","447df42c":"Now we have a hiring score.","24718863":"Now we have all our aggregate columns and are ready to turn to the weights.","be243c49":"### That's the end! I hope you found this helpful. Check out [this Medium article](https:\/\/bit.ly\/2UaEjCq) for discussion.\n\n## Pleave upvote if you found this interesting or informative!","7c85858b":"Cool. Now let's see how this data looks with grouped bars instead of stacked bars by changing the barmode to \"group\".","25ff52cf":"## Weights","3d9ab229":"This configuration doesn't make the most sense, because there are going to be way more stars than contributors. It's not an apples to apples comparison. Let's try four subplots instead.","6aadd071":"# Growth Scores: TensorFlow vs PyTorch 2019\n## By Jeff Hale\n\nIn this Kernel I look at TensorFlow, PyTorch, Keras, and fastai in terms of their growth in job listings, interest, activity, and publications. See [this Medium Article](https:\/\/bit.ly\/2UaEjCq) for discussion.\n\nI'm going to use plotly and pandas to make interactive visualizations for this project.\n","f9d8aa35":"# Please upvote this Kaggle kernel if you find it helpful :)","41463aad":"## Google Search Volume\nComparing the past six months average Google interest for worldwide in Machine Learning & Artificial Intelligence to the prior six months.","81ccbfa6":"## Load the data \nGoogle Sheet available [here](https:\/\/docs.google.com\/spreadsheets\/d\/1Q9rQkfi8ubKM8aX33In0Ki6ldUCfJhGqiH9ir6boexw\/edit?usp=sharing)."}}