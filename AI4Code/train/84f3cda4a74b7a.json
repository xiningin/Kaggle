{"cell_type":{"0a1d46ac":"code","ca1c266a":"code","84e48669":"code","ae5d9dbc":"code","e62a0949":"code","d5244598":"code","08036c3d":"code","180daae3":"code","0da3fc20":"code","f5566f34":"code","f8ae5345":"code","27cf3848":"code","bbb18b86":"code","3e43c662":"code","c36a6dbb":"code","8e005572":"code","fa2e1f83":"code","c5cd1229":"code","8accf5f9":"code","baf87c53":"code","0555398a":"code","ac8a5087":"code","d8d602b0":"code","30baafde":"code","686bee1b":"code","ec951367":"code","11e70fa2":"code","f3a383d0":"code","e5958dbd":"code","e8ee3d0c":"code","11529946":"code","ab7eedad":"markdown","3ea376e7":"markdown","645fe9e8":"markdown","195c1ed8":"markdown","70bde250":"markdown","67d802b0":"markdown","92d65faf":"markdown","9b54d46e":"markdown","d4751238":"markdown","8e66a73c":"markdown","df4837ba":"markdown","761ffe40":"markdown"},"source":{"0a1d46ac":"import numpy as np\nimport pandas as pd \nimport time\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nplt.style.use('seaborn-darkgrid')\nimport seaborn as sns\n\nfrom collections import Counter\nimport warnings\nwarnings.filterwarnings('ignore')\n\n","ca1c266a":"df = pd.read_csv('..\/input\/customer-personality-analysis\/marketing_campaign.csv', sep = '\\t', index_col = 'ID')\ndf.head()","84e48669":"df[\"Age\"] = df[\"Year_Birth\"].apply(lambda x: int(time.strftime(\"%Y\"))-x)\ndf.head()","ae5d9dbc":"df.columns","e62a0949":"df.describe()","d5244598":"df.info()","08036c3d":"def bar_plot(variable):\n    \"\"\"\n        input: variable ex: \"Education\"\n        output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = df[variable]\n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize = (12,6))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))","180daae3":"cat1 = [\"Education\",\"Marital_Status\",\"Kidhome\",\"Teenhome\",\"Complain\",\"AcceptedCmp1\",\"AcceptedCmp2\",\"AcceptedCmp3\",\"AcceptedCmp4\",\"AcceptedCmp5\",\"Response\"]\nfor i in cat1:\n    bar_plot(i)","0da3fc20":"def plot_hist(variable):\n    var = df[variable]\n    varValue = var.value_counts()\n    plt.figure(figsize = (12,6))\n    plt.hist(df[variable], bins = 100)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","f5566f34":"numVar = [\"Income\",\"MntWines\",\"MntFruits\",\"MntMeatProducts\",\"MntSweetProducts\",\"NumDealsPurchases\",\"NumWebPurchases\",\"NumCatalogPurchases\",\"NumStorePurchases\",\"NumWebVisitsMonth\"]\nfor i in numVar:\n    plot_hist(i)","f8ae5345":"# Marital_Status vs Income\ndf[[\"Marital_Status\",\"Income\"]].groupby([\"Marital_Status\"], as_index = False).mean().sort_values(by=\"Income\",ascending = False)","27cf3848":"# Education vs Income\ndf[[\"Education\",\"Income\"]].groupby([\"Education\"], as_index = False).mean().sort_values(by=\"Income\",ascending = False)","bbb18b86":"# Education vs NumPurchases (NumDealsPurchases,NumWebPurchases,NumCatalogPurchases,NumStorePurchases)\ndf[[\"Education\",\"NumDealsPurchases\",\"NumWebPurchases\",\"NumCatalogPurchases\",\"NumStorePurchases\"]].groupby([\"Education\"], as_index = False).mean()","3e43c662":"# Education vs NumWebVisitsMonth\ndf[[\"Education\",\"NumWebVisitsMonth\"]].groupby([\"Education\"], as_index = False).mean().sort_values(by=\"NumWebVisitsMonth\",ascending = False)","c36a6dbb":"# Education vs AcceptCampaigns\ndf[[\"Education\",\"AcceptedCmp1\",\"AcceptedCmp2\",\"AcceptedCmp3\",\"AcceptedCmp4\",\"AcceptedCmp5\",\"Response\"]].groupby([\"Education\"], as_index = False).mean().sort_values(by=\"Education\",ascending = False)","8e005572":"# Age vs Education\ndf[[\"Education\",\"Age\"]].groupby([\"Education\"], as_index = False).mean().sort_values(by=\"Education\",ascending = False)","fa2e1f83":"def multiple_detect_outliers(df,features):\n    outlier_indices = []\n\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25) \n        # 3rd quartile\n        Q3 = np.percentile(df[c],75) \n        # IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n\n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n    \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 1)\n    \n    return multiple_outliers","c5cd1229":"def single_detect_outliers(df,features):\n    outlier_indices = []\n\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25) \n        # 3rd quartile\n        Q3 = np.percentile(df[c],75) \n        # IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n\n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n    \n    outlier_indices = Counter(outlier_indices)\n        \n    return outlier_indices","8accf5f9":"df.loc[multiple_detect_outliers(df,[\"NumDealsPurchases\",\"NumWebPurchases\",\"NumCatalogPurchases\",\"NumStorePurchases\"])]","baf87c53":"# drop outliers\ndf = df.drop(multiple_detect_outliers(df,[\"NumDealsPurchases\",\"NumWebPurchases\",\"NumCatalogPurchases\",\"NumStorePurchases\"]),axis = 0).reset_index(drop = True)","0555398a":"df.loc[single_detect_outliers(df,[\"Income\"])]","ac8a5087":"# drop outliers for Income\ndf = df.drop(single_detect_outliers(df,[\"Income\"]),axis = 0).reset_index(drop = True)","d8d602b0":"df.loc[single_detect_outliers(df,[\"Age\"])]","30baafde":"# drop outliers for Income\ndf = df.drop(single_detect_outliers(df,[\"Age\"]),axis = 0).reset_index(drop = True)","686bee1b":"df.columns[df.isnull().any()]","ec951367":"df.isnull().sum()","11e70fa2":"# Lets check the null values for Income\ndf[df[\"Income\"].isnull()]","f3a383d0":"df[[\"Education\",\"Income\"]].groupby([\"Education\"], as_index = False).mean().sort_values(by=\"Income\",ascending = False)","e5958dbd":"df[\"Income\"] = df.groupby([\"Education\"], sort=False)[\"Income\"].apply(lambda x: x.fillna(x.mean()))","e8ee3d0c":"df.isnull().sum()","11529946":"df.head(11)","ab7eedad":"<a id = \"10\"><\/a><br>\n## Fill Missing Value\n* Income has only 24 missing value","3ea376e7":"<a id = \"9\"><\/a><br>\n## Find Missing Value","645fe9e8":"<a id=\"2\"><\/a><\/br>\n## Variable Description\n\n1. Year_Birth\n1. Education\n1. Marital_Status\n1. Income\n1. Kidhome\n1. Teenhome\n1. Dt_Customer\n1. Recency\n1. MntWines\n1. MntFruits\n1. MntMeatProducts\n1. MntFishProducts\n1. MntSweetProducts\n1. MntGoldProds\n1. NumDealsPurchases\n1. NumWebPurchases\n1. NumCatalogPurchases\n1. NumStorePurchases\n1. NumWebVisitsMonth\n1. AcceptedCmp3\n1. AcceptedCmp4\n1. AcceptedCmp5\n1. AcceptedCmp1\n1. AcceptedCmp2\n1. Complain\n1. Z_CostContact\n1. Z_Revenue\n1. Response\n1. Age","195c1ed8":"<a id = \"4\"><\/a><br>\n## Categorical Variable","70bde250":"Float : Income\n\nObject(str) : Education,Marital_Status,Dt_Customer\n\nInteger : Year_Birth,Kidhome,Teenhome,Recency,Mntwines,MntFruits,MntMeatProducts,MntSweetProducts,NumDealsPurchases,NumWebPurchases,NumCatalogPurchases,NumStorePurchases,NumWebVisitsMonth,AcceptedCmp3,AcceptedCmp4,AcceptedCmp5,AcceptedCmp1,AcceptedCmp2,Complain,Z_CostContact,Z_Revenue,Response\n","67d802b0":"<a id=\"1\"><\/a><\/br>\n## Load and Check Data","92d65faf":"<a id = \"3\"><\/a><br>\n# Univariate Variable Analysis\n* Categorical Variable: Education,Year_Birth,Marital_status,Kidhome,Teenhome,Complain,AcceptedCmp1,AcceptedCmp2,AcceptedCmp3,AcceptedCmp4,AcceptedCmp5,Response,Age\n* Numerical Variable: Income,Dt_Customer,Mntwines,MntFruits,MntMeatProducts,MntSweetProducts,NumDealsPurchases,NumWebPurchases,NumCatalogPurchases,NumStorePurchases,NumWebVisitsMonth,Age","9b54d46e":"<a id = \"5\"><\/a><br>\n## Numerical Variable","d4751238":"<a id = \"7\"><\/a><br>\n# Outlier Detection","8e66a73c":"<a id = \"6\"><\/a><br>\n# Basic Data Analysis\n* Marital_Status - Income\n* Education - Income\n* Education - NumPurchases\n* Education - NumWebVisitsMonth\n* Marital_Status - NumWebVisitsMonth\n* Education - AcceptCampaigns\n* Age - Education\n* Age - Income","df4837ba":"# Introduction\n<font color=\"blue\"\/>\nLets check the data and analysis on customer personalities. \nAfter that drop some outlier rows and filling the missing values as well.\n\nContent:\n    \n1. [Load and Check Data](#1)\n1. [Variable Description](#2)\n     * [Univariate Variable Analysis](#3)\n        * [Categorical Variable](#4)\n        * [Numerical Variable](#5)\n1. [Basic Data Analysis](#6)\n1. [Outlier Detection](#7)\n1. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Fill Missing Value](#10)    \n\u200b","761ffe40":"<a id = \"8\"><\/a><br>\n# Missing Value\n* Find Missing Value\n* Fill Missing Value"}}