{"cell_type":{"b18f00f4":"code","e2762a38":"code","58edd319":"code","5a7f965c":"code","14f69043":"code","da8539ef":"code","df59d57f":"code","0e6dc7e8":"code","a529b28e":"code","f7adb2f0":"code","fadf0f69":"code","28e75b2d":"code","a1709e6f":"code","2804db54":"code","1724e89d":"code","d5c3cfdc":"code","3f3d4107":"code","7571f9b5":"code","15310139":"code","e67c9019":"code","45b85ebc":"code","dd8ca847":"code","07baa116":"code","3b1b2499":"code","f39b6335":"code","d9065218":"code","03c41f52":"code","c4fc81ca":"code","a846a622":"code","b934c6b5":"code","18c06b7a":"code","bbd7ccdc":"code","b66a5f3f":"code","80933c0f":"code","29e15975":"code","25eb7ded":"code","479a7d0a":"code","cf3a9c24":"code","9d105cb3":"code","90468978":"code","838303c2":"code","bf37e017":"code","fcfb78ba":"code","9e32ddae":"code","e9e88e36":"code","7272360c":"code","78c4a785":"markdown","14a49a8c":"markdown","4c8aeb34":"markdown","55094c03":"markdown","2eeae491":"markdown","eab28b08":"markdown","20443486":"markdown","355b4b17":"markdown","c1755d43":"markdown","1f4315d0":"markdown"},"source":{"b18f00f4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e2762a38":"# Read train and test test data\ntrain_data = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","58edd319":"# view data samples for train data\ntrain_data.sample(10)","5a7f965c":"# Check the information of datasets\nprint('*' * 20 ,'Traning Data ',\"*\"*20)\nprint(train_data.info())\nprint('*' * 20 ,'Test Data ',\"*\"*20)\nprint(test_data.info())","14f69043":"pd.isnull(train_data).sum()","da8539ef":"for i in train_data.columns:\n    print(i,'-->',train_data[i].isnull().sum())","df59d57f":"sns.heatmap(train_data.isnull(),yticklabels=False, cmap='plasma')","0e6dc7e8":"# columns which have missing values\ntrain_data.columns[train_data.isnull().any()]","a529b28e":"missing_data_list = train_data.columns[train_data.isnull().any()]","f7adb2f0":"list(missing_data_list)","fadf0f69":"for i in missing_data_list:\n    print(i,'--->',round(train_data[i].isna().sum()\/len(train_data) *100,2),'%' )","28e75b2d":"pd.isnull(test_data).sum()","a1709e6f":"sns.heatmap(test_data.isnull(),yticklabels=False, cmap='plasma')","2804db54":"# columns which contains missing values in test data\ntest_data.columns[test_data.isnull().any()]","1724e89d":"# percentage of of missing values\nmissing_col = list(test_data.columns[test_data.isnull().any()])\nfor i in missing_col:\n    print(i,'-->',round(test_data[i].isna().sum()\/len(train_data) *100,2),'%')","d5c3cfdc":"# Descriptive mesure of train_data\ntrain_data.describe(include='all')","3f3d4107":"train_data.describe()","7571f9b5":"# for Test_data \ntest_data.describe(include ='all')","15310139":"test_data.describe()","e67c9019":"columns = []\nfor i in train_data.columns:\n    if train_data[i].isna().sum()\/len(train_data)*100 >=10:\n        columns.append(i)\nprint(columns)# List of columns which has >=10% missing data       ","45b85ebc":"# Droping columns in train data\ntrain_data = train_data.drop(columns=columns,axis = 1)\ntrain_data.sample(5)","dd8ca847":"train_data.info()","07baa116":"feature_data = train_data.drop(columns=['SalePrice'])\ntarget_data = train_data.SalePrice","3b1b2499":"feature_data.info()","f39b6335":"# select int data in to one variable\nfloat_int_data = feature_data.select_dtypes(include = ['int','float'])","d9065218":"# select object data into one variable\ncat_data = feature_data.select_dtypes(include = ['object'])","03c41f52":"from sklearn.pipeline import make_pipeline","c4fc81ca":"from sklearn.preprocessing import OrdinalEncoder,MinMaxScaler","a846a622":"from sklearn.impute import SimpleImputer","b934c6b5":"# creating sub pipelines\nfloat_int_pipeline = make_pipeline(SimpleImputer(strategy='median'),MinMaxScaler())\ncat_pipeline = make_pipeline(SimpleImputer(strategy='most_frequent'),OrdinalEncoder())","18c06b7a":"from sklearn.compose import make_column_transformer","bbd7ccdc":"preprocessor = make_column_transformer(\n               (cat_pipeline,cat_data.columns),\n               (float_int_pipeline,float_int_data.columns)\n               )","b66a5f3f":"from sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestClassifier","80933c0f":"pipeline = make_pipeline(preprocessor, LinearRegression())","29e15975":"from sklearn.model_selection import train_test_split","25eb7ded":"trainX, testX, trainY, testY = train_test_split(feature_data, target_data)","479a7d0a":"pipeline.fit(feature_data, target_data)","cf3a9c24":"pipeline.score(testX,testY)","9d105cb3":"pipeline = make_pipeline(preprocessor, RandomForestClassifier())","90468978":"pipeline.fit(feature_data, target_data)","838303c2":"pipeline.score(testX, testY)","bf37e017":"from sklearn.metrics import mean_squared_error","fcfb78ba":"y_pred = pipeline.predict(testX)","9e32ddae":"mean_squared_error(testY, y_pred)","e9e88e36":"y_pred = pipeline.predict(test_data)\nsubmission = pd.DataFrame({'Id': test_data.index,'SalePrice': y_pred})","7272360c":"submission.to_csv(\"house_prices_submission.csv\", index=False)","78c4a785":"* SalePrice is our target variable.we have to predict best Sale price of house","14a49a8c":"* check categorical and numerical columns in dataset","4c8aeb34":"### Training Data\n* There are total 1460 observations with 81 columns\/variables\/features.\n* There are both numerical and categorical data.","55094c03":"### Test Data\n* There are total 1459 observations with 80 columns\/variables\/features.\n* There are both numerical and categorical data.","2eeae491":"### Data Preprocessing\n* <b>Treatement of missing Values<\/b>","eab28b08":"### Missing Values in particular column\/Feature\/Attribute","20443486":"#### Dropping columns with missing values >= 20%","355b4b17":"### List of columns which has some mising data","c1755d43":"### Descriptive Analysis","1f4315d0":"* 5 Columns dropped from train and test data"}}