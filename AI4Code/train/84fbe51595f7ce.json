{"cell_type":{"26cf0b66":"code","fbdd03db":"code","1b45d530":"code","a19bcdfd":"code","b984e9ad":"code","45632748":"code","9fb882db":"code","86c413d0":"markdown","3fbc3224":"markdown","58433496":"markdown","6b34569b":"markdown","0f396ef1":"markdown","07f0b4e5":"markdown"},"source":{"26cf0b66":"import numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt \nplt.style.use('seaborn')\n\nfrom scipy.integrate import odeint\nfrom scipy import optimize","fbdd03db":"mexico = pd.read_csv('https:\/\/raw.githubusercontent.com\/carloscerlira\/COVIDMX\/master\/data\/covidmx.csv')\n\nplt.hist(mexico['Edad'], bins=20, range=(0,100), color='royalblue', histtype='bar', ec='black')\nplt.xlabel('Edad')\nplt.ylabel('N\u00famero de infectados')\nplt.show()","1b45d530":"df = pd.read_csv('https:\/\/raw.githubusercontent.com\/carloscerlira\/COVIDMX\/master\/data\/covidworld.csv')\ndf = df.drop('SNo', axis=1)\n\ndef get_country(country_name):\n    data = df[df['Country\/Region']==country_name]\n    data = data[data['Confirmed']>=100]\n    country = data.groupby('ObservationDate')\n    country = country.sum()\n    return country\n\nmexico = get_country('Mexico')['Confirmed']\/129.2e6*1e6\ndays = mexico.size\nprint(days)\nplt.plot(np.arange(1, days+1), mexico, linewidth=4, label='Mexico')\n\ncountries = ['US','France', 'Spain', 'Germany', 'Italy']\npopulation = [327.2e6, 66.99e6, 46.66e6, 82.79e6, 60.48e6]\nfor i in range(0,len(countries)):\n    country = get_country(countries[i])['Confirmed']\/population[i]*1e6\n    plt.plot(np.arange(1, days+1), country[:days], linewidth=1.5, label=countries[i]) \n\nplt.ylabel('Cases per 1 million')\nplt.xlabel('Days since confirmed cases is greaten than 100')\nplt.legend()\nplt.show()","a19bcdfd":"df = pd.read_csv('https:\/\/raw.githubusercontent.com\/carloscerlira\/COVIDMX\/master\/data\/covidworld.csv') \ndf = df.drop('SNo', axis=1)\ndf['Infected'] = df['Confirmed'] - df['Deaths'] - df['Recovered']\n\ndef deriv(y, t, beta, gamma):\n    S, I, R = y\n    dSdt = -beta*S*I\/N\n    dIdt = beta*S*I\/N - gamma*I\n    dRdt = gamma*I\n    return dSdt, dIdt, dRdt\n    \ndef sir(x, beta, gamma):\n    I0, R0 = 1, 0\n    S0 = N - I0 - R0\n    t = np.linspace(0, 100, 500)\n    y0 = S0, I0, R0\n    ret = odeint(deriv, y0, t, args=(beta, gamma))\n    S, I, R = ret.T\n    return np.interp(x, t, I)\n\ndef forecast(country_name):\n    data = df[(df['Country\/Region'] == country_name)]\n    gb = data.groupby('ObservationDate')\n    country = gb.sum()\n    country = country.reset_index()\n    infected = country['Infected'].values\n    plt.scatter(np.arange(0, infected.size, 1), infected, label='infected test', color='crimson', s=12) \n\n    y_data = country['Infected'].values[:-3]\n    x_data = np.arange(0, y_data.size, 1)\n    plt.scatter(x_data, y_data, label='infected train', color='royalblue', s=12) \n\n    params, params_covariance = optimize.curve_fit(sir, x_data, y_data, p0=[1,1])\n    x_data = np.linspace(0, 80, 500)\n    I0, R0 = 1, 0\n    S0 = N - I0 - R0\n    y0 = S0, I0, R0\n    ret = odeint(deriv, y0, x_data, args=(params[0], params[1]))\n    S, I, R = ret.T\n\n    plt.plot(x_data, I, label='infected fit', color='black')\n    plt.ylabel('number of infected persons')\n    plt.xlabel('days')\n    plt.legend()\n    plt.show()","b984e9ad":"N = 120e6\nforecast('Mexico')","45632748":"N = 44.66e6 \nforecast('Spain')","9fb882db":"states = gpd.read_file('..\/input\/covidmx\/data\/geopandas\/states.shp')\n\nplt.style.use('seaborn')\nvmin = states['infected'].min(); vmax = states['infected'].max();\nstates.plot(column='infected', cmap='Blues', norm=plt.Normalize(vmin=vmin,vmax=vmax), linewidth=0.3, edgecolor='.8')\n\nsm = plt.cm.ScalarMappable(cmap='Blues', norm=plt.Normalize(vmin=vmin, vmax=vmax))\nsm._A = []\nplt.colorbar(sm)\n\nplt.title('Casos confirmados COVID-19 \\n 31\/03\/2020', fontdict={'fontsize': '18', 'fontweight' : '3'})\nplt.annotate('Fuente: Plataforma COVID-19, SINVAE',xy=(0.15, .15),  xycoords='figure fraction', horizontalalignment='left', verticalalignment='top', fontsize=10, color='#555555')\nplt.axis('off')\nplt.show()","86c413d0":"Histogram confirmed cases by age code:","3fbc3224":"Libraries used:\n* Scipy for SIR model fit\n* Geopandas for map visualziation ","58433496":"In this notebook I explore the data of Mexico, I made 4 very simple things:\n* Histogram of confirmed cases by age.\n* Comparison with other countries starting from the day since the number of confirmed cases is greater than 100. \n* SIR model using confirmed cases with 3 day lag, this is we fit the model with data from 3 days ago and use the last 3 days to see if the fit has any value.\n* Visualization of number of confirmed cases per state using geopandas.  \n\nI am usign the data from Mexico goverment: https:\/\/www.gob.mx\/salud\/documentos\/coronavirus-covid-19-comunicado-tecnico-diario-238449  \nI cleaned the data and uploded to my github, from where I am pulling the data: https:\/\/github.com\/carloscerlira\/COVIDMX  ","6b34569b":"Comparison with other countries code:","0f396ef1":"Confirmed cases per state using geopandas","07f0b4e5":"SIR model code: "}}