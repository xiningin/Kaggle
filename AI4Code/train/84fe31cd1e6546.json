{"cell_type":{"b1459b78":"code","3e8ab6f8":"code","cfac4811":"code","1746ccb2":"code","258630fa":"code","d716e331":"code","32417e5c":"code","c8e64ed4":"code","5f4cb8eb":"code","a1966a9b":"code","76f8caad":"code","9e3638ae":"code","d7f0a893":"code","31e96c65":"code","bcf69f8a":"code","5268ed2a":"code","d3e10216":"code","4c4a1b09":"code","0fb93993":"code","aa79f6f4":"code","750ae15a":"code","508c0548":"code","b62e1108":"code","7e323c3f":"code","9748d086":"code","61100952":"code","3aa4a913":"code","6385a376":"code","3768d490":"code","4b5170d8":"code","ffa7a85d":"code","14f7bc77":"code","8cf959a0":"code","1800056c":"code","856bb415":"code","ac3bc972":"code","d62e6fcf":"code","b68d1732":"code","d338e480":"code","eaeb3704":"code","0cc0f80a":"code","49b40cb3":"code","3c49b918":"markdown","52900c0c":"markdown","60b1fb20":"markdown"},"source":{"b1459b78":"%matplotlib inline\nimport pandas as pd\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\npd.set_option('display.max_columns', 99)\npd.set_option('display.max_rows', 99)\nimport os\nimport numpy as np\nfrom matplotlib import pyplot as plt\nfrom tqdm import tqdm\nimport datetime as dt","3e8ab6f8":"import matplotlib.pyplot as plt\nplt.rcParams['figure.figsize'] = [16, 10]\nplt.rcParams['font.size'] = 14\nimport seaborn as sns\nsns.set_palette(sns.color_palette('tab20', 20))","cfac4811":"DATEFORMAT = '%Y-%m-%d'","1746ccb2":"!ls ..\/input","258630fa":"COMP = 'covid19-global-forecasting-week-1'","d716e331":"train = pd.read_csv(f'..\/input\/{COMP}\/train.csv')\ntest = pd.read_csv(f'..\/input\/{COMP}\/test.csv')\nsubmission = pd.read_csv(f'..\/input\/{COMP}\/submission.csv')\ntrain.shape, test.shape, submission.shape","32417e5c":"train.head()\nsubmission.head()\ntest.head()","c8e64ed4":"set(test['Country\/Region']) - set(train['Country\/Region'])\nset(test['Country\/Region']) - set(train['Country\/Region'])","5f4cb8eb":"def to_log(x):\n    return np.log(x + 1)\n\ndef to_exp(x):\n    return np.exp(x) - 1","a1966a9b":"np.arange(10)\nto_exp(to_log(np.arange(10)))","76f8caad":"train['Location'] = train['Country\/Region'] + '-' + train['Province\/State'].fillna('')\ntrain['Location'] = train['Location'].str.replace(',', '')\n\ntest['Location'] = test['Country\/Region'] + '-' + test['Province\/State'].fillna('')\ntest['Location'] = test['Location'].str.replace(',', '')\n\ntrain['LogConfirmed'] = to_log(train.ConfirmedCases)\ntrain['LogFatalities'] = to_log(train.Fatalities)\ntrain = train.drop(columns=['Province\/State', 'Country\/Region', 'Lat', 'Long'])\ntest = test.drop(columns=['Province\/State', 'Country\/Region', 'Lat', 'Long'])","9e3638ae":"train.tail()","d7f0a893":"set(test['Location']) - set(train['Location'])","31e96c65":"dfs = []\nfor loc, df in tqdm(train.groupby('Location')):\n    df = df.sort_values(by='Date')\n    df['LogFatalities'] = df['LogFatalities'].cummax()\n    df['LogConfirmed'] = df['LogConfirmed'].cummax()\n    df['LogConfirmedNextDay'] = df['LogConfirmed'].shift(-1)\n    df['DateNextDay'] = df['Date'].shift(-1)\n    df['LogFatalitiesNextDay'] = df['LogFatalities'].shift(-1)\n    df['LogConfirmedDelta'] = df['LogConfirmedNextDay'] - df['LogConfirmed']\n    df['LogFatalitiesDelta'] = df['LogFatalitiesNextDay'] - df['LogFatalities']\n    dfs.append(df)\ndfs = pd.concat(dfs)","bcf69f8a":"dfs.shape\ndfs.tail()","5268ed2a":"deltas = dfs[np.logical_and(\n        dfs.LogConfirmed > 0,\n        ~dfs.Location.str.startswith('China')\n)].dropna().sort_values(by='LogConfirmedDelta', ascending=False)\n\ndeltas['start'] = deltas['LogConfirmed'].round(1)\nconfirmed_deltas = pd.concat([\n    deltas.groupby('start')[['LogConfirmedDelta']].mean(),\n    deltas.groupby('start')[['LogConfirmedDelta']].std(),\n    deltas.groupby('start')[['LogConfirmedDelta']].count()\n], axis=1)\n\ndeltas.mean()\n\nconfirmed_deltas.columns = ['avg', 'std', 'cnt']\nconfirmed_deltas\nconfirmed_deltas.to_csv('confirmed_deltas.csv')","d3e10216":"plt.scatter(confirmed_deltas.index, confirmed_deltas.avg, s=confirmed_deltas.cnt)\nplt.grid()","4c4a1b09":"daily_confirmed_deltas = pd.concat([\n    deltas.groupby('Date')[['LogConfirmedDelta']].mean(),\n    deltas.groupby('Date')[['LogConfirmedDelta']].std(),\n    deltas.groupby('Date')[['LogConfirmedDelta']].count()\n], axis=1)\n\n\ndaily_confirmed_deltas.columns = ['avg', 'std', 'cnt']\n\nplt.scatter(daily_confirmed_deltas.index, daily_confirmed_deltas.avg, s=daily_confirmed_deltas.cnt)\nplt.xticks(rotation=90)\nplt.grid()\nplt.show();","0fb93993":"deltas = dfs[np.logical_and(\n        dfs.LogConfirmed > 0,\n        ~dfs.Location.str.startswith('China')\n)].dropna().sort_values(by='LogConfirmedDelta', ascending=False)\ndeltas = deltas[deltas['Date'] >= '2020-03-01']\n\nconfirmed_deltas = pd.concat([\n    deltas.groupby('Location')[['LogConfirmedDelta']].mean(),\n    deltas.groupby('Location')[['LogConfirmedDelta']].std(),\n    deltas.groupby('Location')[['LogConfirmedDelta']].count(),\n    deltas.groupby('Location')[['LogConfirmed']].max()\n], axis=1)\nconfirmed_deltas.columns = ['avg', 'std', 'cnt', 'max']\n\nconfirmed_deltas.sort_values(by='avg').head(10)\nconfirmed_deltas.sort_values(by='avg').tail(10)\nconfirmed_deltas.to_csv('confirmed_deltas.csv')","aa79f6f4":"DECAY = 0.93\nDECAY ** 14, DECAY ** 27","750ae15a":"confirmed_deltas = train.groupby('Location')[['Id']].count()\n\nconfirmed_deltas['DELTA'] = 0.18\nconfirmed_deltas.loc[confirmed_deltas.index.str.startswith('China'), 'DELTA'] = 0.02\nconfirmed_deltas.loc[confirmed_deltas.index.str.startswith('US'), 'DELTA'] = 0.24\nconfirmed_deltas.loc[confirmed_deltas.index=='Turkey-', 'DELTA'] = 0.23\nconfirmed_deltas.loc[confirmed_deltas.index=='Brazil-', 'DELTA'] = 0.23\nconfirmed_deltas.loc[confirmed_deltas.index=='Mexico-', 'DELTA'] = 0.23\nconfirmed_deltas.loc[confirmed_deltas.index=='Romania-', 'DELTA'] = 0.25\nconfirmed_deltas.loc[confirmed_deltas.index=='Singapore-', 'DELTA'] = 0.07\nconfirmed_deltas.loc[confirmed_deltas.index=='Japan-', 'DELTA'] = 0.05\nconfirmed_deltas.loc[confirmed_deltas.index=='Korea South-', 'DELTA'] = 0.03\nconfirmed_deltas.loc[confirmed_deltas.index=='China-Hong Kong', 'DELTA'] = 0.12\nconfirmed_deltas.loc[confirmed_deltas.index=='Iran-', 'DELTA'] = 0.14\nconfirmed_deltas.loc[confirmed_deltas.index=='Italy-', 'DELTA'] = 0.14\nconfirmed_deltas.loc[confirmed_deltas.index.str.endswith('Princess'), 'DELTA'] = 0.01\nconfirmed_deltas","508c0548":"daily_log_confirmed = dfs.pivot('Location', 'Date', 'LogConfirmed').reset_index()\ndaily_log_confirmed = daily_log_confirmed.sort_values('2020-03-24', ascending=False)\ndaily_log_confirmed.to_csv('daily_log_confirmed.csv', index=False)\n\nfor i, d in tqdm(enumerate(pd.date_range('2020-03-25', '2020-04-24'))):\n    new_day = str(d).split(' ')[0]\n    last_day = dt.datetime.strptime(new_day, DATEFORMAT) - dt.timedelta(days=1)\n    last_day = last_day.strftime(DATEFORMAT)\n#     print(i, new_day, last_day)\n    for loc in confirmed_deltas.index:\n        confirmed_delta = confirmed_deltas.loc[confirmed_deltas.index == loc, 'DELTA'].values[0]\n        daily_log_confirmed.loc[daily_log_confirmed.Location == loc, new_day] = daily_log_confirmed.loc[daily_log_confirmed.Location == loc, last_day] + \\\n            confirmed_delta * DECAY ** i","b62e1108":"daily_log_confirmed.head(30)","7e323c3f":"confirmed_deltas = train.groupby('Location')[['Id']].count()\n\nconfirmed_deltas['DELTA'] = 0.18\nconfirmed_deltas.loc[confirmed_deltas.index.str.startswith('China'), 'DELTA'] = 0.02\nconfirmed_deltas.loc[confirmed_deltas.index.str.startswith('US'), 'DELTA'] = 0.2\nconfirmed_deltas.loc[confirmed_deltas.index=='Turkey-', 'DELTA'] = 0.23\nconfirmed_deltas.loc[confirmed_deltas.index=='Brazil-', 'DELTA'] = 0.23\nconfirmed_deltas.loc[confirmed_deltas.index=='Mexico-', 'DELTA'] = 0.23\nconfirmed_deltas.loc[confirmed_deltas.index=='Romania-', 'DELTA'] = 0.25\nconfirmed_deltas.loc[confirmed_deltas.index=='Singapore-', 'DELTA'] = 0.07\nconfirmed_deltas.loc[confirmed_deltas.index=='Japan-', 'DELTA'] = 0.05\nconfirmed_deltas.loc[confirmed_deltas.index=='Korea South-', 'DELTA'] = 0.03\nconfirmed_deltas.loc[confirmed_deltas.index=='China-Hong Kong', 'DELTA'] = 0.12\nconfirmed_deltas.loc[confirmed_deltas.index=='Iran-', 'DELTA'] = 0.14\nconfirmed_deltas.loc[confirmed_deltas.index=='Italy-', 'DELTA'] = 0.14\nconfirmed_deltas.loc[confirmed_deltas.index.str.endswith('Princess'), 'DELTA'] = 0.01\nconfirmed_deltas\nconfirmed_deltas.describe()","9748d086":"daily_log_confirmed[:25].set_index('Location').T.plot()\nplt.grid()\nplt.show();","61100952":"death_deltas = dfs[np.logical_and(\n        dfs.Fatalities > 0,\n        ~dfs.Location.str.startswith('China')\n)].dropna().sort_values(by='LogFatalitiesDelta', ascending=False)","3aa4a913":"death_deltas","6385a376":"daily_confirmed_death_deltas = pd.concat([\n    death_deltas.groupby('Date')[['LogFatalitiesDelta']].mean(),\n    death_deltas.groupby('Date')[['LogFatalitiesDelta']].std(),\n    death_deltas.groupby('Date')[['LogFatalitiesDelta']].count()\n], axis=1)\n\n\ndaily_confirmed_death_deltas.columns = ['avg', 'std', 'cnt']\n\nplt.scatter(daily_confirmed_death_deltas.index, daily_confirmed_death_deltas.avg, s=daily_confirmed_death_deltas.cnt)\nplt.xticks(rotation=90)\nplt.grid()\nplt.show();","3768d490":"loc_confirmed_death_deltas = pd.concat([\n    death_deltas.groupby('Location')[['LogFatalitiesDelta']].mean(),\n    death_deltas.groupby('Location')[['LogFatalitiesDelta']].std(),\n    death_deltas.groupby('Location')[['LogFatalitiesDelta']].count(),\n    death_deltas.groupby('Location')[['LogFatalities']].max()\n], axis=1)\nloc_confirmed_death_deltas.columns = ['avg', 'std', 'cnt', 'max']\nloc_confirmed_death_deltas = loc_confirmed_death_deltas[loc_confirmed_death_deltas.cnt >= 3]\n\nloc_confirmed_death_deltas.sort_values(by='avg').head(10)\nloc_confirmed_death_deltas.sort_values(by='avg').tail(10)\nloc_confirmed_death_deltas.to_csv('loc_confirmed_death_deltas.csv')","4b5170d8":"death_deltas = train.groupby('Location')[['Id']].count()\n\ndeath_deltas['DELTA'] = 0.17\ndeath_deltas.loc[death_deltas.index.str.startswith('China'), 'DELTA'] = 0.01\ndeath_deltas.loc[death_deltas.index.str.startswith('US'), 'DELTA'] = 0.15\ndeath_deltas.loc[death_deltas.index=='Turkey-', 'DELTA'] = 0.23\ndeath_deltas.loc[death_deltas.index=='Brazil-', 'DELTA'] = 0.23\ndeath_deltas.loc[death_deltas.index=='Mexico-', 'DELTA'] = 0.23\ndeath_deltas.loc[death_deltas.index=='Singapore-', 'DELTA'] = 0.07\ndeath_deltas.loc[death_deltas.index=='Japan-', 'DELTA'] = 0.05\ndeath_deltas.loc[death_deltas.index=='Korea South-', 'DELTA'] = 0.05\ndeath_deltas.loc[death_deltas.index=='Taiwan*-', 'DELTA'] = 0.05\ndeath_deltas.loc[death_deltas.index=='China-Hong Kong', 'DELTA'] = 0.08\ndeath_deltas.loc[death_deltas.index=='Iran-', 'DELTA'] = 0.14\ndeath_deltas.loc[death_deltas.index=='Italy-', 'DELTA'] = 0.12\ndeath_deltas.loc[death_deltas.index=='Spain-', 'DELTA'] = 0.14\ndeath_deltas.loc[death_deltas.index.str.endswith('Princess'), 'DELTA'] = 0.01\ndeath_deltas","ffa7a85d":"death_deltas.describe()","14f7bc77":"daily_log_deaths = dfs.pivot('Location', 'Date', 'LogFatalities').reset_index()\ndaily_log_deaths = daily_log_deaths.sort_values('2020-03-24', ascending=False)\ndaily_log_deaths.to_csv('daily_log_deaths.csv', index=False)\n\nfor i, d in tqdm(enumerate(pd.date_range('2020-03-25', '2020-04-24'))):\n    new_day = str(d).split(' ')[0]\n    last_day = dt.datetime.strptime(new_day, DATEFORMAT) - dt.timedelta(days=1)\n    last_day = last_day.strftime(DATEFORMAT)\n    for loc in death_deltas.index:\n        death_delta = death_deltas.loc[death_deltas.index == loc, 'DELTA'].values[0]\n        daily_log_deaths.loc[daily_log_deaths.Location == loc, new_day] = daily_log_deaths.loc[daily_log_deaths.Location == loc, last_day] + \\\n            death_delta * DECAY ** i","8cf959a0":"daily_log_deaths[:25].set_index('Location').T.plot()\nplt.grid()\nplt.show();","1800056c":"submission.head()","856bb415":"confirmed = []\nfatalities = []\nfor id, d, loc in tqdm(test.values):\n#     print(id, d, loc)\n    c = to_exp(daily_log_confirmed.loc[daily_log_confirmed.Location == loc, d].values[0])\n    f = to_exp(daily_log_deaths.loc[daily_log_deaths.Location == loc, d].values[0])\n    confirmed.append(c)\n    fatalities.append(f)","ac3bc972":"test","d62e6fcf":"my_submission = test.copy()\nmy_submission['ConfirmedCases'] = confirmed\nmy_submission['Fatalities'] = fatalities\nmy_submission.head()\nmy_submission.shape\n\n","b68d1732":"my_submission.groupby('Date').sum().tail()","d338e480":"my_submission.groupby('Date').sum().plot()\n","eaeb3704":"plt.semilogy(my_submission.groupby('Date').sum()['ConfirmedCases'].values)","0cc0f80a":"plt.semilogy(my_submission.groupby('Date').sum()['Fatalities'].values)","49b40cb3":"my_submission[[\n    'ForecastId', 'ConfirmedCases', 'Fatalities'\n]].to_csv('submission.csv', index=False)\nprint(DECAY)\nmy_submission.head()\nmy_submission.tail()\nmy_submission.shape","3c49b918":"# Create submission file","52900c0c":"# Fatalities","60b1fb20":"# Confirmed Cases"}}