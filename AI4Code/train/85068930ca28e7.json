{"cell_type":{"9c989bba":"code","f1269889":"code","f462318f":"code","6e30120a":"code","0982f82b":"code","925722b3":"code","e2d7d787":"code","72626186":"code","80370959":"markdown","478b60d8":"markdown","879e9cac":"markdown","08821a19":"markdown","f938daf9":"markdown"},"source":{"9c989bba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f1269889":"\nimport rasterio as ras\nimport matplotlib.pyplot as plt\nfrom rasterio import plot\n%matplotlib inline","f462318f":"mappath = '\/kaggle\/input\/senthinelv1\/'\n\nband5 = ras.open(mappath+'T43PFS_20200531T051701_B05_20m.jp2',driver='JP2openJPEG')\nband4 = ras.open(mappath+'T43PFS_20200531T051701_B04_20m.jp2',driver='JP2openJPEG')\nband3 = ras.open(mappath+'T43PFS_20200531T051701_B03_20m.jp2',driver='JP2openJPEG')\nband2 = ras.open(mappath+'T43PFS_20200531T051701_B02_20m.jp2',driver='JP2openJPEG')\n\n\n\n","6e30120a":"#Viewing a file in Python\nplot.show(band2)","0982f82b":"#Here we are plotting the files and comparing with the bands together\nfig, (ax1,ax2,ax3,ax4) = plt.subplots(1,4,figsize=(12,4))\nplot.show(band2,ax=ax1,cmap='Blues')\nplot.show(band3,ax=ax2,cmap='Greens')\nplot.show(band4,ax=ax3,cmap='Reds')\nplot.show(band5,ax=ax4,cmap='Purples')\nfig.tight_layout","925722b3":"\n\ntruecolor = ras.open('\/kaggle\/working\/Truepic.tiff','w',driver='Gtiff',\n                     width=band2.width,\n                     height=band2.height,\n                     count=4,\n                     crs=band2.crs,\n                     transform=band2.transform,\n                     dtype='uint16')\n\n\n\n\ntruecolor.write(band2.read(1),3)\ntruecolor.write(band3.read(1),2)\ntruecolor.write(band4.read(1),1)\ntruecolor.write(band5.read(1),4)\ntruecolor.close()","e2d7d787":"#opening tiff file in Python\nsrc = ras.open(r'\/kaggle\/working\/Truepic.tiff',count=4)\nplot.show(src)","72626186":"src = ras.open(r'\/kaggle\/working\/Truepic.tiff',count=4)\nfig, (axrgb, axhist) = plt.subplots(1, 2, figsize=(14,7))\nplot.show(src, ax=axrgb)\nplot.show_hist(src, bins=50, histtype='stepfilled',lw=0.0, stacked=True, alpha=0.3, ax=axhist)\nplt.show()","80370959":"Loading the files in Python.","478b60d8":"Python Packages to Download Are below\nGDAL \u2013 spatial Analysis\nFIONA - spatial Analysis\nMatplotlib- plot charts\nRasterio - spatial Analysis and plot charts\n","879e9cac":"# **Beginners Exploratory Map Analysis Using Python \u2013 Map available free**\n\nThis a basic program for beginners in Python to download maps and do Exploratory Analysis.\nMap Available free from - https:\/\/scihub.copernicus.eu\/\nSelect the portion in the Map and then enter criteria in search button for the dates.\nChoose Senthinel 2 maps.\nDifferent Bands relate to Different Types of Information like vegetation, Cloud Cover Etc\nWe have downloaded 4 bands 2,3,4 and 5 which represents colours Blue, green, red and vegetation\nWe will be opening the file for each band loading in Python and do initial analysis on the bands and combining bands together into 1 file\n","08821a19":"Opening Tiff file and do a histogram to compare the colour plots in a file","f938daf9":"Here we are combining all bands together into a single tiff file and viewing it"}}