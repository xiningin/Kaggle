{"cell_type":{"9864590d":"code","a04c1cdc":"code","fd56f3a1":"code","9d0f1280":"code","a6fa9a52":"code","58f7ce46":"code","120c0ab1":"code","26c523ee":"code","891ecf32":"code","52de89bc":"code","6cb3e7c9":"code","1e8e5ed1":"code","80365267":"code","3d7a6178":"code","deec3625":"code","de8aec1e":"code","796e0125":"code","c71003e8":"code","de805b7f":"code","e02dc743":"code","2b6d676c":"code","d71ecd9f":"code","e2d89064":"code","b600b88d":"code","2fc3ad4a":"code","4166cf10":"code","673a20fd":"code","09be00d8":"code","68f68c3e":"code","b94b7aae":"code","da82535a":"code","ab4a4ae3":"code","e81060b1":"code","bb6c2615":"code","3d7ef9b4":"code","2edc439a":"code","28573a3b":"code","5adbc619":"code","14f6654d":"code","a30a4366":"code","57c4c980":"code","06166bf2":"code","0fd924ec":"code","d1e6ac00":"code","66cd0106":"code","b29d015a":"code","754f0202":"code","865d083f":"code","c1592ac4":"code","ae81068b":"code","f95a0afd":"code","3e599f19":"code","e62ad9b3":"code","9fb6caf9":"code","c0a8b2c0":"code","a7ebaf87":"code","d314fc06":"code","feeb004d":"code","11ffbcd1":"code","8b0be872":"code","474963d0":"code","4ea2d74b":"code","bb6333c7":"code","5160601d":"code","31f1ef22":"code","b6786fee":"code","539ee7cb":"code","c5bbc29d":"code","ebd8227d":"code","7e403098":"code","fdda2456":"code","2063e600":"code","7f77c113":"code","0093713c":"code","cfa4d689":"code","6911c22c":"code","e4defaf3":"code","abdc6740":"code","e70a23d1":"code","759de6d6":"markdown","d8c6c41a":"markdown","048b6656":"markdown","cb186c6c":"markdown","583f043e":"markdown","05234909":"markdown","265f7c35":"markdown","b9f3ef89":"markdown","e400d532":"markdown","ed2b3dd8":"markdown","fddf200d":"markdown","7d33fd1d":"markdown","77ba8c0c":"markdown","9f65aeb8":"markdown","57224661":"markdown","90ff6604":"markdown"},"source":{"9864590d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px","a04c1cdc":"dataset=pd.read_csv('..\/input\/telecom-users-dataset\/telecom_users.csv')\ndataset","fd56f3a1":"dataset.isnull().sum()         ","9d0f1280":"dataset=dataset.drop(['Unnamed: 0','customerID'],axis=1)\ndataset","a6fa9a52":"dataset.info()","58f7ce46":"dataset.describe()","120c0ab1":"for i in dataset.columns:\n    print(\"Unique values in\",i,\"are=>\",dataset[i].unique())\n    print(\"-\"*234)","26c523ee":"!pip install plotly==4.14.3","891ecf32":"fig=px.bar(dataset,x='gender',color='Churn',barmode='group')\nfig.show()","52de89bc":"sc=dataset['SeniorCitizen'].value_counts()\nsc","6cb3e7c9":"fig=px.pie(title='Senior Citizen',values=sc.values,names=sc.index)\nfig.show()","1e8e5ed1":"pt=dataset['Partner'].value_counts()","80365267":"fig=px.pie(dataset,title=\"Partner\",values=pt.values,names=pt.index)\nfig.show()","3d7a6178":"fig=px.sunburst(dataset,path=['PhoneService','MultipleLines','InternetService'],values='tenure')\nfig.show()","deec3625":"fig=px.histogram(dataset,x='tenure')\nfig.show()","de8aec1e":"fig=px.bar(dataset,x='InternetService')\nfig.show()","796e0125":"s1=dataset['Churn'].value_counts()\ns1","c71003e8":"fig=px.pie(dataset,names=s1.index,values=s1.values)\nfig.show()","de805b7f":"dataset['Churn']=dataset['Churn'].replace(to_replace='No',value=0)\ndataset['Churn']=dataset['Churn'].replace(to_replace='Yes',value=1)\n","e02dc743":"dataset['Churn'].value_counts()","2b6d676c":"sns.heatmap(dataset.corr(),annot=True)","d71ecd9f":"os=dataset['OnlineSecurity'].value_counts()","e2d89064":"px.pie(values=os.values,names=os.index)","b600b88d":"os=dataset['DeviceProtection'].value_counts()\npx.pie(values=os.values,names=os.index)","2fc3ad4a":"dataset['Churn']=dataset['Churn'].replace(to_replace=0,value='No')\ndataset['Churn']=dataset['Churn'].replace(to_replace=1,value='Yes')\n","4166cf10":"dataset['Churn'].value_counts()","673a20fd":"dataset['MultipleLines']=dataset['MultipleLines'].replace(to_replace='No internet service',value='No')\ndataset['OnlineSecurity']=dataset['OnlineSecurity'].replace(to_replace='No internet service',value='No')\ndataset['OnlineBackup']=dataset['OnlineBackup'].replace(to_replace='No internet service',value='No')\ndataset['DeviceProtection']=dataset['DeviceProtection'].replace(to_replace='No internet service',value='No')\ndataset['TechSupport']=dataset['TechSupport'].replace(to_replace='No internet service',value='No')\ndataset['StreamingTV']=dataset['StreamingTV'].replace(to_replace='No internet service',value='No')\ndataset['StreamingMovies']=dataset['StreamingMovies'].replace(to_replace='No internet service',value='No')\ndataset","09be00d8":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\ndataset['gender']=le.fit_transform(dataset['gender'])\ndataset['Churn']=le.fit_transform(dataset['Churn'])\ndataset['PhoneService']=le.fit_transform(dataset['PhoneService'])\ndataset['PaperlessBilling']=le.fit_transform(dataset['PaperlessBilling'])\ndataset['Dependents']=le.fit_transform(dataset['Dependents'])\ndataset['Partner']=le.fit_transform(dataset['Partner'])\ndataset['MultipleLines']=le.fit_transform(dataset['MultipleLines'])\ndataset['OnlineSecurity']=le.fit_transform(dataset['OnlineSecurity'])\ndataset['OnlineBackup']=le.fit_transform(dataset['OnlineBackup'])\ndataset['DeviceProtection']=le.fit_transform(dataset['DeviceProtection'])\ndataset['TechSupport']=le.fit_transform(dataset['TechSupport'])\ndataset['StreamingTV']=le.fit_transform(dataset['StreamingTV'])\ndataset['StreamingMovies']=le.fit_transform(dataset['StreamingMovies'])\ndataset","68f68c3e":"type(dataset['MonthlyCharges'][1])","b94b7aae":"type(dataset['TotalCharges'][1])","da82535a":"dataset[dataset['TotalCharges']==' ']","ab4a4ae3":"dataset['TotalCharges']=dataset['TotalCharges'].replace(to_replace=' ',value=np.nan)\ndataset.isnull().sum()","e81060b1":"dataset=dataset.dropna(axis=0).reset_index()\ndataset","bb6c2615":"dataset=dataset.drop(['index'],axis=1)\ndataset","3d7ef9b4":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nct=ColumnTransformer([('encoder',OneHotEncoder(),[7,14,16])],remainder='passthrough')\ndataset=ct.fit_transform(dataset)\ndataset=pd.DataFrame(dataset)\ndataset","2edc439a":"x=dataset.iloc[:,:-1].values\ny=dataset.iloc[:,-1].values\n","28573a3b":"y=y.astype(int)","5adbc619":"y","14f6654d":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=177013)","a30a4366":"print(x_train.shape,y_train.shape)","57c4c980":"from imblearn.over_sampling import SMOTE\nsmt=SMOTE(random_state=177013)","06166bf2":"x_train_smote,y_train_smote=smt.fit_resample(x_train,y_train)","0fd924ec":"print(x_train_smote.shape,y_train_smote.shape)","d1e6ac00":"from collections import Counter\nprint(\"Before SMOTE\", Counter(y_train))\nprint(\"After SMOTE\", Counter(y_train_smote))","66cd0106":"np.unique(y)","b29d015a":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression()\nlr.fit(x_train_smote,y_train_smote)","754f0202":"lr_pred=lr.predict(x_test)\nlr_pred","865d083f":"from sklearn.metrics import confusion_matrix,accuracy_score\ncm_lr=confusion_matrix(y_test,lr_pred)\ncm_lr","c1592ac4":"acc_lr=accuracy_score(y_test,lr_pred)\nacc_lr","ae81068b":"from sklearn.tree import DecisionTreeClassifier\ndsc=DecisionTreeClassifier()\ndsc.fit(x_train_smote,y_train_smote)\n","f95a0afd":"dsc_pred=dsc.predict(x_test)\ndsc_pred","3e599f19":"cm_dsc=confusion_matrix(y_test,dsc_pred)\ncm_dsc","e62ad9b3":"acc_dsc=accuracy_score(y_test,dsc_pred)\nacc_dsc","9fb6caf9":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier(n_estimators=400)\nrfc.fit(x_train_smote,y_train_smote)\n","c0a8b2c0":"rfc_pred=rfc.predict(x_test)\nrfc_pred","a7ebaf87":"cm_rfc=confusion_matrix(y_test,rfc_pred)\ncm_rfc","d314fc06":"acc_rfc=accuracy_score(y_test,rfc_pred)\nacc_rfc","feeb004d":"from xgboost import XGBClassifier\nxgb=XGBClassifier()\nxgb.fit(x_train_smote,y_train_smote)","11ffbcd1":"xgb_pred=xgb.predict(x_test)\nxgb_pred","8b0be872":"cm_xgb=confusion_matrix(y_test,xgb_pred)\ncm_xgb","474963d0":"acc_xgb=accuracy_score(y_test,xgb_pred)\nacc_xgb","4ea2d74b":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nx_train_smote=sc.fit_transform(x_train_smote)\nx_test=sc.transform(x_test)","bb6333c7":"from keras.models import Input,Model\nfrom keras.layers import Dense,Dropout","5160601d":"i=Input(shape=[26])","31f1ef22":"layer1=Dense(units=20,activation='relu')(i)\nlayer2=Dense(units=14,activation='relu')(layer1)\nlayer3=Dense(units=8,activation='relu')(layer2)\nout=Dense(units=1,activation='sigmoid')(layer3)","b6786fee":"ann=Model(inputs=i,outputs=out)\n","539ee7cb":"ann.summary()","c5bbc29d":"from keras.utils.vis_utils import plot_model","ebd8227d":"plot_model(ann, to_file='ann_model_plot.png', show_shapes=True, show_layer_names=True)","7e403098":"ann.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])","fdda2456":"ann.fit(x_train_smote,y_train_smote,batch_size=32,epochs=30)","2063e600":"metrics=pd.DataFrame(ann.history.history)","7f77c113":"metrics","0093713c":"metrics[['loss']].plot()","cfa4d689":"metrics[['accuracy']].plot()","6911c22c":"y_pred=ann.predict(x_test)\ny_pred=(y_pred>0.5)\ny_pred","e4defaf3":"cm=confusion_matrix(y_test,y_pred)\ncm","abdc6740":"score=accuracy_score(y_test,y_pred)\nscore","e70a23d1":"print(\"Logistic Regression Accuracy=>{:.2%}\".format(acc_lr))\nprint(\"Decision Tree Classifier Accuracy=>{:.2%}\".format(acc_dsc))\nprint(\"Random Forest Classifeir Accuracy=>{:.2%}\".format(acc_rfc))\nprint(\"XGB Classifeir Accuracy=>{:.2%}\".format(acc_xgb))\nprint(\"Neural Network Accuracy=>{:.2%}\".format(score))","759de6d6":"# Splitting the dataset","d8c6c41a":"# Importing libraries","048b6656":"# Feature Scaling","cb186c6c":"# Dealing with Categorical Variable","583f043e":"\n\n2.   Decision Tree Classifier\n\n\n","05234909":"# Compiling ANN model","265f7c35":"\n\n1.   Logistic Regression\n\n","b9f3ef89":"\n\n3.   Random Forest Classification\n\n\n","e400d532":"# ML Algorithms","ed2b3dd8":"# Training model","fddf200d":"No Null values","7d33fd1d":"# Results","77ba8c0c":"# Using Neural Network","9f65aeb8":"# Importing dataset","57224661":"\n\n4.   XGB Classifier\n\n","90ff6604":"# Exploratory Data Analysis"}}