{"cell_type":{"37425a99":"code","a83de4de":"code","355fd96e":"code","9dd0f106":"code","0d08e490":"code","70d54923":"code","d21a680e":"code","5a7a8af7":"code","527486c6":"code","9a5a2b62":"code","2a732541":"code","4cc798b1":"code","94333891":"code","0aa97dcf":"code","f43e9106":"code","9e06a3af":"code","1af74269":"code","0601649a":"code","47cba643":"code","912ffde3":"code","f4ffd26e":"code","d2eb1789":"markdown","4a1f1480":"markdown","72de3c37":"markdown","787a7167":"markdown","c96ef751":"markdown","69264cf6":"markdown","139e4b78":"markdown","2d14e035":"markdown","77de7ea5":"markdown","f26cb878":"markdown"},"source":{"37425a99":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a83de4de":"# Required Libararies\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","355fd96e":"# Loading data into data frame\ndf = pd.read_csv('\/kaggle\/input\/boston-housing-dataset\/HousingData.csv')","9dd0f106":"# printing head of data frame\ndf.head()","0d08e490":"# Shape of dataset\ndf.shape","70d54923":"# Structure of Dataset\ndf.info()","d21a680e":"# Null Values\ndf.isnull().sum()","5a7a8af7":"# Zeros\ndf[df==0].sum()","527486c6":"# Box Plots\ncols = list(df.columns)\nfor col in cols:\n    plt.figure()\n    sns.boxplot(y=df[col], color = 'r')\n    plt.title(col)","9a5a2b62":"# Handling null values\ndf = df.interpolate(method ='linear', limit_direction ='backward', limit = 2)","2a732541":"# Dropping null value\ndf = df.dropna()","4cc798b1":"# Checking Null Values\ndf.isnull().sum()","94333891":"# shape of data\ndf.shape","0aa97dcf":"# Checking outliers\nQ1 = df.quantile(0.25)\nQ3 = df.quantile(0.75)\nIQR = Q3 - Q1\nlowerlimit = Q1 - 1.5*IQR\nupperlimit = Q3 + 1.5*IQR","f43e9106":"df_out = df[~((df < lowerlimit) |(df > upperlimit)).any(axis=1)]\nprint(df_out.shape)","9e06a3af":"X = df.drop('MEDV', axis = 1)\ny = df.MEDV","1af74269":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=0)","0601649a":"from sklearn.linear_model import LinearRegression\nlinear_reg = LinearRegression()","47cba643":"linear_reg.fit(X_train,y_train)","912ffde3":"pred = linear_reg.predict(X_test)\npred","f4ffd26e":"from sklearn.metrics import mean_absolute_error\nprint('Mean Squared Error is ',mean_absolute_error(pred,y_test))","d2eb1789":"# EDA","4a1f1480":" # Model Builing","72de3c37":"youtube link : youtube.com\/watch?v=JTj-WgWLKFM","787a7167":"# Data Transformation","c96ef751":"# Visualization","69264cf6":"# Fitting Model","139e4b78":"# Splitting into Train and Test data","2d14e035":"# X and y","77de7ea5":"# Mean Absolute Error","f26cb878":"# Predictions"}}