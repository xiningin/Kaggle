{"cell_type":{"6b1558e9":"code","2c7f99a5":"code","745af938":"code","3ab01912":"code","eb5c3a5f":"code","635b3488":"code","7c038c45":"code","4a91aca6":"code","93d4332b":"code","2470deab":"code","f67fc25b":"code","f63fdb2d":"code","0f0f53df":"code","a4343499":"code","11b3e7dc":"code","ac081c78":"code","8d8d995b":"code","b0119c0d":"code","58d41f13":"code","ac224aec":"code","db262038":"code","6bff6fc6":"code","53989db4":"code","3f11b75f":"code","6b4bbd05":"code","593182c2":"code","fe6e900a":"code","e52c273a":"code","7f7ef907":"code","281e1fb1":"code","856c860c":"code","36f1164e":"code","85fb4107":"code","2849aca9":"code","eafc2b7c":"code","fc502adc":"code","c397d14e":"code","0f44dd8d":"code","88c1ac83":"code","97485401":"code","46896089":"code","38dd92ff":"code","5dd89185":"code","1388f215":"code","659937be":"code","7389b206":"code","cc737340":"code","6a1388f0":"code","20f35bc0":"code","9a21a6ab":"code","e7dc26aa":"code","aa68ee98":"code","f406b6c4":"code","8255ed14":"code","30e27c60":"code","ee815c93":"code","3a18137c":"code","9682f3c3":"code","a74b5b57":"code","3ac16d8f":"code","f36a1d39":"code","a339c9d2":"code","afde738c":"code","ba42f92c":"code","2a785b13":"code","f2a198d2":"code","ee82509e":"code","f100d9e9":"code","2f092863":"code","622664d5":"code","0c1e6c68":"code","8158cf80":"code","79a4a1c7":"code","c4597ea4":"code","11f6f0f7":"code","b804f8bd":"code","d775217c":"code","aae6a2e6":"code","d3391f35":"code","d9502aea":"code","da962a59":"code","2757b653":"code","53604294":"code","545a870d":"code","bac752ed":"code","1fb19dd5":"code","f0ea070c":"code","6179d273":"code","d680b6f5":"code","02112ee9":"code","53026c52":"code","9752af65":"code","6774ce78":"code","e1db5847":"code","785c486c":"code","e0fb3a3f":"code","8de96cd9":"code","92b0446b":"code","b7bf26c7":"code","442fe2a1":"code","4a10e600":"code","2408964e":"code","92ab588f":"code","d835a691":"code","aa092239":"markdown","634fafb7":"markdown","bd2082c4":"markdown","6fd5545f":"markdown","6f40b9ee":"markdown","fae20f3d":"markdown"},"source":{"6b1558e9":"!pip install -qU xlrd openpyxl","2c7f99a5":"import pandas as pd\nimport numpy as np\nimport  matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","745af938":"train_df = pd.read_excel(r'..\/input\/flight-price\/Data_Train.xlsx')\ntest_df = pd.read_excel(r'..\/input\/flight-price\/Test_set.xlsx')","3ab01912":"train_df.head()","eb5c3a5f":"test_df.head()","635b3488":"big_df  = train_df.append(test_df,sort=False)","7c038c45":"big_df.head()","4a91aca6":"big_df.tail()","93d4332b":"big_df.dtypes","2470deab":"big_df['Date'] = big_df['Date_of_Journey'].str.split('\/').str[0]","f67fc25b":"big_df['Month'] = big_df['Date_of_Journey'].str.split('\/').str[1]\nbig_df['Year'] = big_df['Date_of_Journey'].str.split('\/').str[2]","f63fdb2d":"big_df.head()","0f0f53df":"big_df = big_df.drop(['Date_of_Journey'],axis=1)","a4343499":"big_df['Date'] = big_df['Date'].astype(int)\nbig_df['Month'] = big_df['Month'].astype(int)\nbig_df['Year'] = big_df['Year'].astype(int)","11b3e7dc":"big_df.dtypes","ac081c78":"big_df['Arrival_Time'] = big_df['Arrival_Time'].str.split(' ').str[0]","8d8d995b":"big_df.head()","b0119c0d":"big_df[big_df['Total_Stops'].isnull()]","58d41f13":"big_df['Total_Stops'] = big_df['Total_Stops'].fillna('1 stop')","ac224aec":"big_df['Total_Stops'] = big_df['Total_Stops'].replace('non-stop','0 stop')","db262038":"big_df.head()","6bff6fc6":"big_df['Total_Stops'] = big_df['Total_Stops'].str.split(' ').str[0]","53989db4":"big_df.head()","3f11b75f":"big_df['Total_Stops'] = big_df['Total_Stops'].astype('int')","6b4bbd05":"big_df.dtypes","593182c2":"big_df['Arrival_Hour'] = big_df['Arrival_Time'].str.split(':').str[0]\nbig_df['Arrival_Minute'] = big_df['Arrival_Time'].str.split(':').str[1]","fe6e900a":"big_df['Arrival_Hour'] = big_df['Arrival_Hour'].astype('int')\nbig_df['Arrival_Minute'] = big_df['Arrival_Minute'].astype('int')","e52c273a":"big_df = big_df.drop(['Arrival_Time'],axis=1)","7f7ef907":"big_df['Departure_Hour'] = big_df['Dep_Time'].str.split(':').str[0]\nbig_df['Departure_Minute'] = big_df['Dep_Time'].str.split(':').str[1]","281e1fb1":"big_df['Departure_Hour'] = big_df['Departure_Hour'].astype('int')\nbig_df['Departure_Minute'] = big_df['Departure_Minute'].astype('int')","856c860c":"big_df = big_df.drop(['Dep_Time'],axis=1)","36f1164e":"big_df.head()","85fb4107":"big_df['Duration_Hour'] = big_df['Duration'].str.split(' ').str[0]\nbig_df['Duration_Minute'] = big_df['Duration'].str.split(' ').str[1]\n","2849aca9":"big_df.head()","eafc2b7c":"big_df['Duration_Hour']= big_df['Duration_Hour'].str.split('h').str[0]\nbig_df['Duration_Minute'] = big_df['Duration_Minute'].str.split('m').str[0]\n","fc502adc":"big_df.head()","c397d14e":"big_df['Duration_Minute'] = big_df['Duration_Minute'].fillna(0)","0f44dd8d":"big_df['Duration_Hour'] = big_df['Duration_Hour'].fillna(0)","88c1ac83":"big_df.head()","97485401":"big_df['Route_1'] = big_df['Route'].str.split('\u2192 ').str[0]\nbig_df['Route_2'] = big_df['Route'].str.split('\u2192 ').str[1]\nbig_df['Route_3'] = big_df['Route'].str.split('\u2192 ').str[2]\nbig_df['Route_4'] = big_df['Route'].str.split('\u2192 ').str[3]\nbig_df['Route_5'] = big_df['Route'].str.split('\u2192 ').str[4]","46896089":"big_df.head()","38dd92ff":"big_df['Route_1'].fillna('None',inplace=True)\nbig_df['Route_2'].fillna('None',inplace=True)\nbig_df['Route_3'].fillna('None',inplace=True)\nbig_df['Route_4'].fillna('None',inplace=True)\nbig_df['Route_5'].fillna('None',inplace=True)","5dd89185":"big_df.head()","1388f215":"big_df.isnull().sum()","659937be":"sns.distplot(big_df['Price'])","7389b206":"train_df.mean()","cc737340":"big_df['Price'].mean(),big_df['Price'].max(),big_df['Price'].median(),big_df['Price'].mode()","6a1388f0":"big_df['Price'].fillna(big_df['Price'].median(),inplace=True)","20f35bc0":"big_df.isnull().sum()","9a21a6ab":"from sklearn.preprocessing import LabelEncoder","e7dc26aa":"encoder = LabelEncoder()\nbig_df['Airline'] = encoder.fit_transform(big_df['Airline'])\nbig_df['Source'] = encoder.fit_transform(big_df['Source'])\nbig_df['Destination'] = encoder.fit_transform(big_df['Destination'])\nbig_df['Route_1'] = encoder.fit_transform(big_df['Route_1'])\nbig_df['Route_2'] = encoder.fit_transform(big_df['Route_2'])\nbig_df['Route_3'] = encoder.fit_transform(big_df['Route_3'])\nbig_df['Route_4'] = encoder.fit_transform(big_df['Route_4'])\nbig_df['Route_5'] = encoder.fit_transform(big_df['Route_5'])\n","aa68ee98":"big_df['Additional_Info'] = encoder.fit_transform(big_df['Additional_Info'])","f406b6c4":"big_df.head()","8255ed14":"big_df.drop(['Route'],axis=1,inplace=True)","30e27c60":"big_df.drop(['Duration'],axis=1,inplace=True)","ee815c93":"big_df.head()","3a18137c":"big_df['Duration_Minute'] = big_df['Duration_Minute'].astype(int)","9682f3c3":"big_df['Duration_Hour'] = big_df['Duration_Hour'].str.split('m').str[0]","a74b5b57":"big_df['Duration_Hour'] = big_df['Duration_Hour'].astype(int)","3ac16d8f":"big_df.dtypes","f36a1d39":"from sklearn.linear_model import Lasso\n\nfrom sklearn.feature_selection import SelectFromModel","a339c9d2":"df_train = big_df[0:10683]\ndf_test = big_df[10683:]","afde738c":"X = df_train.drop(['Price'],axis=1)\ny = df_train.Price","ba42f92c":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=0)","2a785b13":"model = SelectFromModel(Lasso(alpha=0.005,random_state=0))","f2a198d2":"model.fit(X_train,y_train)","ee82509e":"model.get_support()","f100d9e9":"selected_features = X_train.columns[(model.get_support())]","2f092863":"selected_features","622664d5":"X_train = X_train.drop(['Year'],axis=1)","0c1e6c68":"X_test = X_test.drop(['Year'],axis=1)","8158cf80":"from sklearn.linear_model import LinearRegression","79a4a1c7":"le_reg = LinearRegression()","c4597ea4":"le_reg.fit(X_train,y_train)","11f6f0f7":"le_reg.intercept_","b804f8bd":"le_reg.coef_","d775217c":"print('The coefficient of determination R^2 for train set is: {}'.format(le_reg.score(X_train,y_train)))","aae6a2e6":"print('The coefficient of determination R^2 for test set is: {}'.format(le_reg.score(X_test,y_test)))","d3391f35":"from sklearn.model_selection import cross_val_score\nscore = cross_val_score(le_reg,X,y,cv=5)","d9502aea":"score.mean()","da962a59":"y_pred = le_reg.predict(X_test)","2757b653":"sns.distplot(y_test-y_pred)","53604294":"plt.scatter(y_test,y_pred)","545a870d":"from sklearn import metrics","bac752ed":"print('MAE: ', metrics.mean_absolute_error(y_test,y_pred))\nprint('MSE: ', metrics.mean_squared_error(y_test,y_pred))\nprint('RMSE: ', np.sqrt(metrics.mean_absolute_error(y_test,y_pred)))","1fb19dd5":"from sklearn.tree import DecisionTreeRegressor","f0ea070c":"dt_reg = DecisionTreeRegressor()","6179d273":"dt_reg.fit(X_train,y_train)","d680b6f5":"dt_reg.score(X_train,y_train),dt_reg.score(X_test,y_test)","02112ee9":"score = cross_val_score(dt_reg,X_train,y_train,cv=5)","53026c52":"score.mean()","9752af65":"dt_pred = dt_reg.predict(X_test)","6774ce78":"sns.distplot(y_test-dt_pred)","e1db5847":"plt.scatter(y_test,dt_pred)","785c486c":"print('MAE ', metrics.mean_absolute_error(y_test,dt_pred))\nprint('MSE ', metrics.mean_squared_error(y_test,dt_pred))\nprint('RMSE ', np.sqrt(metrics.mean_squared_error(y_test,dt_pred)))","e0fb3a3f":"dot_data = StringIO()  \nexport_graphviz(dt_reg, out_file=dot_data,feature_names=features,filled=True,rounded=True,max_depth=5)\n\ngraph = pydotplus.graph_from_dot_data(dot_data.getvalue())  \nImage(graph.create_png())","8de96cd9":"from sklearn.ensemble import RandomForestRegressor","92b0446b":"rf_reg = RandomForestRegressor()","b7bf26c7":"rf_reg.fit(X_train,y_train)","442fe2a1":"rf_reg.score(X_train,y_train),rf_reg.score(X_test,y_test)","4a10e600":"rf_pred = rf_reg.predict(X_test)","2408964e":"sns.distplot(y_test-rf_pred)","92ab588f":"plt.scatter(y_test,rf_pred)","d835a691":"print('MAE ', metrics.mean_absolute_error(y_test,rf_pred))\nprint('MSE ', metrics.mean_squared_error(y_test,rf_pred))\nprint('RMSE ', np.sqrt(metrics.mean_squared_error(y_test,rf_pred)))","aa092239":"## Random Forest","634fafb7":"# Flight Price Prediction\nBy Gokul Siva Krishna Vedullapalli","bd2082c4":"## Feature Engineering","6fd5545f":"## Feature Selection","6f40b9ee":"## Linear Regression","fae20f3d":"## Decision Tree Regressor"}}