{"cell_type":{"a45117b7":"code","1927589a":"code","9576c968":"code","adc03c38":"code","7dcd939d":"code","585a4a2f":"code","b9f29ad4":"code","aa4bc096":"code","6a87d833":"code","ccf3f35a":"code","cedc6964":"code","58cd5e04":"code","0cdb4faa":"code","4d4d61bb":"code","159ee61c":"markdown","ca46ebe5":"markdown","051d26f1":"markdown","dbf740c7":"markdown","771cf73d":"markdown","871da841":"markdown","179b222b":"markdown","4aca6cfc":"markdown","5ccb2553":"markdown","9e90216e":"markdown","4159eba7":"markdown"},"source":{"a45117b7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1927589a":"import matplotlib.pyplot as plt\nimport matplotlib.ticker\nfrom matplotlib import rc\nfrom matplotlib.ticker import StrMethodFormatter\n%matplotlib inline\nfrom scipy import stats\n\n# Regular expressions\nimport re\n\n# seaborn : advanced visualization\nimport seaborn as sns\nprint('seaborn version\\t:',sns.__version__)\n","9576c968":"loan = pd.read_csv('..\/input\/tvs-loan-default\/TVS.csv')\nloan.head()","adc03c38":"loan_1 = loan.rename(columns={'V1': 'Customer ID',\n'V2': 'Customer has bounced in first EMI', \n'V3': 'No of times bounced 12 months',\n'V4': 'Maximum MOB',\n'V5': 'No of times bounced while repaying the loan',\n'V6': 'EMI',\n'V7': 'Loan Amount',\n'V8': 'Tenure',\n'V9': 'Dealer codes from where customer has purchased the Two wheeler',\n'V10': 'Product code of Two wheeler', \n'V11': 'No of advance EMI paid',\n'V12': 'Rate of interest',\n'V13': 'Gender',\n'V14': 'Employment type',\n'V15': 'Resident type of customer',\n'V16': 'Date of birth',\n'V17': 'Customer age when loanwas taken',\n'V18': 'No of loans',\n'V19': 'No of secured loans',\n'V20': 'No of unsecured loans',\n'V21': 'Max amount sanctioned in the Live loans',\n'V22': 'No of new loans in last 3 months',\n'V23': 'Total sanctioned amount in the secured Loans which are Live',\n'V24': 'Total sanctioned amount in the unsecured Loans which are Live',\n'V25': 'Maximum amount sanctioned for any Two wheeler loan',\n'V26': 'Time since last Personal loan taken (in months)',\n'V27': 'Time since first consumer durables loan taken (in months)',\n'V28': 'No of times 30 days past due in last 6 months',\n'V29': 'No of times 60 days past due in last 6 months',\n'V30': 'No of times 90 days past due in last 3 months',\n'V31': 'Tier',\n'V32': 'Target variable'})\n\nloan_1.head()","7dcd939d":"loan_1.columns","585a4a2f":"not_required_cols = ['Time since first consumer durables loan taken (in months)','Time since last Personal loan taken (in months)']\nloan_1.drop(labels = not_required_cols, axis =1, inplace=True)\nloan_1.shape","b9f29ad4":"loan_1.Gender.value_counts()","aa4bc096":"sns.set(style=\"darkgrid\")\n\nfig = plt.figure(figsize=(13,6))\nplt.subplot(121)\n\nloan_1[\"Gender\"].value_counts().plot.pie(autopct = \"%1.0f%%\",colors = [\"gold\",\"b\"],startangle = 60,\n                                                                        wedgeprops={\"linewidth\":2,\"edgecolor\":\"k\"},explode=[.05,0],shadow =True)\nplt.title(\"distribution of client owning a car\")\n\nplt.subplot(122)\nax = loan_1[\"Gender\"].value_counts().plot(kind=\"bar\",color='b')\nplt.xticks(rotation=0)\nplt.title(\"Count of target variable\")\n\nplt.show()","6a87d833":"sns.set(style=\"darkgrid\")\n\nfig, ax=plt.subplots(nrows =1,ncols=3,figsize=(25,8))\nax[0].set_title(\"Loan Amount (Distribution Plot)\")\nsns.distplot(loan_1['Loan Amount'],ax=ax[0])\nax[1].set_title(\"Loan Amount (Violin Plot)\")\nsns.violinplot(data =loan_1, x='Loan Amount',ax=ax[1], inner=\"quartile\")\nax[2].set_title(\"Loan Amount (Box Plot)\")\nsns.boxplot(data =loan_1, x='Loan Amount',ax=ax[2],orient='v')\nplt.show()","ccf3f35a":"sns.set(style=\"darkgrid\")\n\nfig, ax=plt.subplots(nrows =1,ncols=3,figsize=(25,8))\nax[0].set_title(\"Loan Amount (Distribution Plot)\")\nsns.distplot(loan_1['Rate of interest'],ax=ax[0])\nax[1].set_title(\"Loan Amount (Violin Plot)\")\nsns.violinplot(data =loan_1, x='Rate of interest',ax=ax[1], inner=\"quartile\")\nax[2].set_title(\"Loan Amount (Box Plot)\")\nsns.boxplot(data =loan_1, x='Rate of interest',ax=ax[2],orient='v')\nplt.show()","cedc6964":"plt.figure(figsize=(18,6))\n\n#bar plot\nloan_1['Customer age when loanwas taken'].value_counts().plot(kind='bar',color='b',alpha=0.7, edgecolor='black')\nplt.xlabel(\"Age\", labelpad=14)\nplt.ylabel(\"Count of People\", labelpad=14)\nplt.title(\" Age of Customer when the loan was approved\")\nplt.legend(loc=\"best\",prop={\"size\":12})\nplt.show()","58cd5e04":"plt.figure(figsize=(18,6))\n\n#histogarm\nsns.distplot(loan_1[\"Customer age when loanwas taken\"],color=\"b\")\nplt.xlabel('Age')\nplt.show()","0cdb4faa":"plt.figure(figsize=(8,8))\nloan_1[\"Product code of Two wheeler\"].value_counts().plot.pie(autopct = \"%1.1f%%\",fontsize=8,\n                                                             colors = sns.color_palette(\"prism\",5),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},\n                                                               shadow =True)\nplt.title(\"Two Wheeler Type\")\n#MC : Motorcycle , MO : Moped, SC : Scooter\nplt.show()","4d4d61bb":"plt.figure(figsize=(24,8))\nsns.countplot(x=\"No of times bounced while repaying the loan\", hue=\"Employment type\", data=loan_1, edgecolor='k')\nplt.xlim(0, 6)\nplt.ylim(0, 16000)\nplt.legend(loc='upper right')\nplt.show()","159ee61c":"**Load data from the file path of csv as a DataFrame object**\n","ca46ebe5":"**5. Number of times bounced while repaying the loan**","051d26f1":"**Pie chart of loans taken by *Gender***","dbf740c7":"**3. Age at which customer has taken the loan**  ***(Client's Age)***","771cf73d":"**Remove irrelevant columns**","871da841":"**4. Ratio of loan taken by Two-Wheeler type**","179b222b":"**Rename columns to identify data in it**","4aca6cfc":"**List of Column names**","5ccb2553":"**Ratio of loans taken based on *Gender***","9e90216e":"**1. Loan Amount**","4159eba7":"**2. Interest Rate**"}}