{"cell_type":{"82865b20":"code","4eed32c4":"code","0c259b84":"code","c5162277":"code","4be9da57":"code","89d369ad":"code","d756301a":"code","baeade6e":"code","9680356c":"code","c3c841d8":"code","2e8d60d4":"code","0f3ae76e":"code","a0dc999f":"code","281f0b8c":"code","4459c770":"code","99069a6e":"code","2f73b391":"code","73dcb69a":"code","26f877f2":"code","e2b48f0c":"code","4512a178":"code","497b78d3":"code","873d05b8":"code","9ecbc039":"code","ce22c3ba":"code","14dc60fc":"code","0c3c4d81":"code","884032be":"code","7a8c7ad7":"code","a1e5b3c5":"markdown","44b765f7":"markdown","81b5a811":"markdown","879c396e":"markdown","06966333":"markdown","51012d71":"markdown","3b95915b":"markdown","354b1eca":"markdown","0adfb41f":"markdown","af83ed29":"markdown","a6e2e347":"markdown","df1cf4e8":"markdown","5910435d":"markdown","27fa5f1a":"markdown","253e5152":"markdown","9d6bcb46":"markdown","6d6aa4fd":"markdown","4ed79698":"markdown","bba9d215":"markdown","a7548969":"markdown","97598e45":"markdown","1125f242":"markdown","617b3e80":"markdown","fc97156d":"markdown","8da82f67":"markdown","9850bf17":"markdown","4086fc0b":"markdown","24e446b4":"markdown","06c79390":"markdown","eaec4820":"markdown","27a24689":"markdown","32c023a6":"markdown","1aa270b0":"markdown","96080c90":"markdown"},"source":{"82865b20":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\n%matplotlib inline\nplt.rcParams[\"figure.figsize\"] = (10, 8)\nsns.set(style='white', context='notebook', palette='deep')","4eed32c4":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")","0c259b84":"train.head()","c5162277":"train.shape, test.shape","4be9da57":"train.columns.values, test.columns.values","89d369ad":"set(train.columns.values) - set(test.columns.values)","d756301a":"train.info()","baeade6e":"train.dtypes","9680356c":"train.isnull().sum()","c3c841d8":"train_survived = train[\"Survived\"].value_counts()\ntrain_survived","2e8d60d4":"train_s_rate = train_survived[1] \/ train_survived.sum()\ntrain_s_rate","0f3ae76e":"train_survived.plot(kind=\"bar\")\nplt.title(\"Survival Histogram - {:0.1%} Survived (All Passengers)\".format(train_s_rate))\nplt.ylabel(\"Number of Passengers\")\nplt.xlabel(\"0 = Perished, 1 = Survived\")\nplt.show()","a0dc999f":"train[\"Survived\"].value_counts(normalize=True).plot(kind=\"bar\")\n\nplt.title(\"Survival Histogram\")\nplt.ylabel(\"% of Passengers\")\nplt.xlabel(\"0 = Perished, 1 = Survived\")\n\nplt.show()","281f0b8c":"fig, axs = plt.subplots(1,3, figsize=(20,4))\n\nfor i, f in enumerate([\"Fare\", \"Age\", \"Pclass\"]):\n    sns.distplot(train[f].dropna(), kde=False, ax=axs[i]).set_title(f)\n    axs[i].set(ylabel=\"# of Passengers\")\n\nplt.suptitle(\"Feature Histograms (Ignoring Missing Values)\")\nplt.show()","4459c770":"fig, axs = plt.subplots(1,2, figsize=(20,4))\n\nfor i, f in enumerate([\"Parch\", \"SibSp\"]):\n    sns.distplot(train[f].dropna(), kde=False, ax=axs[i]).set_title(f)\n    axs[i].set(ylabel=\"# of Passengers\")\n\nplt.suptitle(\"Feature Histograms (Ignoring Missing Values)\")\nplt.show()","99069a6e":"sns.heatmap(train.corr(), annot=True, cmap=\"coolwarm\")\nplt.show()","2f73b391":"train.corr()[\"Survived\"].sort_values()","73dcb69a":"fig, axs = plt.subplots(1, 2, figsize=(12,6))\nfor i, sex in enumerate([\"female\", \"male\"]):\n    p = train[train[\"Sex\"] == sex][\"Survived\"].value_counts(normalize=True).sort_index().to_frame().reset_index()\n    sns.barplot(x=[\"Perished\", \"Survived\"], y=\"Survived\", data=p, hue=\"index\", ax=axs[i], dodge=False)\n    axs[i].set_title(\"Survival Histogram - {:0.1%} Survived ({})\".format(p.loc[1,\"Survived\"], sex))\n    axs[i].set_ylabel(\"Survival Rate\")\n    axs[i].get_legend().remove()","26f877f2":"sex_map = {\"male\": 0, \"female\": 1}\nsex_encoded = train[\"Sex\"].map(sex_map)\n\nsex_df = pd.DataFrame({\"Sex_Encoded\": sex_encoded, \"Survived\": train[\"Survived\"]})\nsex_df.corr()","e2b48f0c":"n_male = len(train[train[\"Sex\"] == \"male\"])\nn_female = len(train[train[\"Sex\"] == \"female\"])\n\"Males: {:.1%}, Females: {:.1%}\".format(n_male \/ len(train), n_female \/ len(train))","4512a178":"fig, axs = plt.subplots(1, 3, figsize=(20,4))\n\nfor i, pclass in enumerate([1, 2, 3]):\n    p = train[train[\"Pclass\"] == pclass][\"Survived\"].value_counts(normalize=True)\n    p.plot(kind=\"bar\", ax=axs[i])\n    axs[i].set_title(\"Survival Histogram - {:0.1%} Survived (Class {})\".format(p[1], pclass))\n    axs[i].set_ylabel(\"% of Passengers\")\n    axs[i].set_xlabel(\"0 = Perished, 1 = Survived\")","497b78d3":"g = sns.catplot(x=\"Pclass\", y=\"Survived\", data=train, kind=\"bar\")\ng.despine(left=True)\ng.set_ylabels(\"Survival Probability\")\nplt.show()","873d05b8":"g = sns.catplot(x=\"SibSp\", y=\"Survived\", data=train, kind=\"bar\")\ng.despine(left=True)\ng.set_ylabels(\"Survival Probability\")\nplt.show()","9ecbc039":"g = sns.catplot(x=\"Embarked\", y=\"Survived\", data=train, kind=\"bar\")\ng.despine(left=True)\ng.set_ylabels(\"Survival Probability\")\nplt.show()","ce22c3ba":"g = sns.catplot(\"Pclass\", col=\"Embarked\",  data=train, kind=\"count\", palette=\"muted\")\ng = g.set_ylabels(\"# of Passengers\")","14dc60fc":"g = sns.catplot(x=\"Parch\", y=\"Survived\", data=train, kind=\"bar\")\ng.despine(left=True)\ng.set_ylabels(\"Survival Probability\")\nplt.show()","0c3c4d81":"g = sns.kdeplot(train[\"Age\"][train[\"Survived\"] == 0], label=\"Perished\", shade=True, color=sns.xkcd_rgb[\"pale red\"])\ng = sns.kdeplot(train[\"Age\"][train[\"Survived\"] == 1], label=\"Survived\", shade=True, color=sns.xkcd_rgb[\"steel blue\"])\nplt.xlabel(\"Age\")\nplt.ylabel(\"Density\")\nplt.show()","884032be":"g = sns.FacetGrid(train, col=\"Survived\")\ng = g.map(sns.distplot, \"Age\")","7a8c7ad7":"child_ages = [13, 14, 15, 16, 17, 18, 19, 20, 21]\nnum_children = []\nfor i in child_ages:\n    num_children.append(len(train[train[\"Age\"] < i]))\n                        \ng = sns.barplot(x=child_ages, y=num_children)\nplt.ylabel(\"# of Passengers\")\nplt.xlabel(\"Age Threshold\")\nplt.title(\"Number of Passengers Under Certain Age Thresholds\")\nplt.show()","a1e5b3c5":"**Age**\n\nAge also factors into survival rate and indeed the age distributions are not the same for the survived\/perished populations. The dual density plot below shows that very young passengers had a higher chance to survive.","44b765f7":"**Siblings\/Spouses**","81b5a811":"Let's take a quick peek at the training dataset to get an idea of what sorts of features we are dealing with:","879c396e":"We have several object (string) columns that we will need to deal with: Name, Sex, Ticket, Cabin and Embarked. The rest of the columns are numerical. The ```.info()``` method contains information about the data type of each column as well as the number of values contained within each column. Note we can look at each of these summaries separately, using ```.dtypes``` and ```.isnull()```:","06966333":"### Feature Analysis","51012d71":"This plot reveals that passengers in classes 1 and 2 were more likely to survive than those in class 3. Specifically, 63% of first class passengers survived while only 24% of third class passengers survived.","3b95915b":"**Parents\/Children**","354b1eca":"### Basic Visuals\n\nHistograms are a quick way to get an idea about the shape of the data. Let's start by looking at the survival distribution, i.e. how many people survived vs. perished. Below, we determine how many passengers fall into each category (Survived = 0 and Survived = 1) using ```value_counts()```; then we divide the number of survivors by the total number of passengers to get a survival rate.","0adfb41f":"Likewise, we see that most passengers traveled without parents, children, siblings or spouses.","af83ed29":"#### Data Types & Missing Values","a6e2e347":"The training dataset has 891 rows (observations) and 12 columns (features) while the test dataset has just under half the number of rows and 11 columns. This is a relatively small dataset.","df1cf4e8":"**Sex**\n\nSex was an important feature in deciding who survived. The graphs below correspond to the conditional probability of survival given a person's sex: $P(\\text{survived } | \\text{ male or female})$.","5910435d":"Underage children make up a significant percentage of the people onboard. For example, there are 100 passengers under the age of 18 and 180 passengers under the age of 21.","27fa5f1a":"The histograms above show that the majority of fares were less than 100 dollars. The majority of passengers were in the 20 to 40 age range and approximately the same number of passengers were in 3rd class as there were in 1st and 2nd class combined.","253e5152":"### Get to Know the Data","9d6bcb46":"....And with that, I will wrap up this notebook. \n\nWe've just scratched the surface of what can be learned from this dataset using exploratory data analysis.\n\nI hope you enjoyed this notebook and maybe learned a trick or two. Stay tuned and thanks for reading :)","6d6aa4fd":"### Load the Data","4ed79698":"Option 2 is to use the Seaborn ```catplot```, which is a much faster way of visualizing the relationship between variables:","bba9d215":"## Titanic - Exploratory Data Analysis\n\nGreetings! In this notebook I will conduct exploratory data analysis to better understand the Titanic dataset.\n\nThis EDA will include various plotting technqiues using Matplotlib and Seaborn, which will come in handy when dealing with almost any type of data.\n\nPlease leave a message below with any comments or suggestions. Happy reading :)","a7548969":"Now that we know that sex is an important factor, note that there were more males than females onboard.","97598e45":"A correlation matrix illustrates how variables move together. We see that Pclass has the highest negative correlation with Survived, followed by Parch; Fare is positively correlated.","1125f242":"**Passenger Class**\n\nAt this point, it's interesting to look at how survival varies based on passenger class. Option 1 is to construct individual plots by filtering for each passenger class:","617b3e80":"The training and test datasets have the same columns except that the test dataset is missing the Survived feature (as expected - this is the target output that we are trying to predict).\n\n### Data Dictionary\n\nIt's important to understand what each feature represents. Luckily, this dataset has been labeled clearly and it is obvious what type of information most of the columns contain.\n\n* PassengerId - unique ID, not relevant\n* Survived - target, what we are trying to predict\n* Pclass - ticket class, (1-3 for 1st\/2nd\/3rd class)\n* Name - text field for passenger name, including title\n* Sex - passenger gender (male or female)\n* SibSp - # of siblings or spouses onboard\n* Parch - # of parents or children onboard\n* Ticket - ticket number\n* Fare - cost of ticket\n* Cabin - cabin number\n* Embarked - port of embarkation (C = Cherbourg, Q = Queenstown, S = Southampton)","fc97156d":"Only 38% of passengers survived.\n\nWe can also use histograms to look at the distributions of the other features:","8da82f67":"Rather than calculating the percentage of passengers by hand, we can use the built in parameter ```normalize=True``` within our ```value_counts()``` method call. It can be easier to interpret percentages rather than whole numbers.","9850bf17":"**Embarkation Location**","4086fc0b":"The correlation matrix contains a lot of information and can be difficult to interpret. Instead, we can view the correlation with a specific variable using the ```.corr()``` method:","24e446b4":"We can also view the density plots separately using a ```FacetGrid```.","06c79390":"Likewise, passengers with 3 or 4 siblings\/spouses have a lower chance to survive.","eaec4820":"The relationship between Parch and survival is less clear. Notice the large standard deviations associated with Parch = 3 and Parch = 5.","27a24689":"Passengers from Cherbourg (C) have the higher probability of surviving. If we plot the distribution of passenger class for each port, we see that a large number of passengers in class 1 embarked at port C.","32c023a6":"We will have to deal with missing values for Age, Cabin and Embarked.","1aa270b0":"Each row corresponds to one passenger on board the Titanic. There are basic personal characteristics, such as Age and Sex, as well as voyage information.","96080c90":"If we encode sex (0 for male or 1 for female) and look at the correlation with Survived, we confirm that these variables are highly correlated (compared to the other features in the dataset)."}}