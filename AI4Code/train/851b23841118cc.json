{"cell_type":{"4bf83019":"code","fcddd9fa":"code","64bc132d":"code","0012d36a":"code","b1dd6f9a":"code","b3f9a7ad":"code","0e8cb2da":"code","941f5b90":"code","0eee858c":"code","b082740f":"code","1ff1c332":"code","74257601":"code","722ffe35":"code","a0e5b021":"code","ec40a5af":"code","eaac8d01":"code","c1b5cffc":"code","b07ecd3a":"code","69b49513":"code","09c549da":"code","fea951ee":"code","ab171a94":"code","18d7a6ad":"code","110ffc17":"code","aaafdf60":"code","d388eea4":"code","0c656f67":"code","f9d822ce":"code","2b93c7a8":"code","5b9fea4b":"code","abf73869":"code","1d953abf":"code","bc530f38":"code","f82f7c92":"code","852b130e":"markdown","98d041fd":"markdown","c711f8b1":"markdown","1d5978d4":"markdown"},"source":{"4bf83019":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","fcddd9fa":"import random as rnd\n\n# visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsns.set()\n\n# machine learning\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier","64bc132d":"train_df = pd.read_csv('..\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('..\/input\/titanic\/test.csv')","0012d36a":"train_df.head()","b1dd6f9a":"x = train_df.Survived\ny = train_df.Embarked\nprint(len(x))","b3f9a7ad":"train_df.describe()","0e8cb2da":"train_df.info()","941f5b90":"plt.hist(train_df['Fare'],bins=10)\nplt.show()","0eee858c":"male=0\nfemale=0\nfor gender in train_df['Sex']:\n    if gender == 'male':\n        male=male+1\n    if gender == 'female':\n        female=female+1\n        \nprint(male,female,len(train_df['Sex']))","b082740f":"train_df.iloc[0]","1ff1c332":"train_df.head()","74257601":"mensur=0\nfemsur=0\n\nfor i in train_df.index:\n    if(train_df.iloc[i][2]==1 and train_df.iloc[i][4]=='male'):\n        mensur=mensur+1\n    if(train_df.iloc[i][2]==1 and train_df.iloc[i][4]=='female'):\n        femsur=femsur+1\n        \n            \n        \n            \n            ","722ffe35":"print(mensur,femsur,(mensur+femsur)\/len(train_df.index))","a0e5b021":"(train_df.iloc[2][4])","ec40a5af":"sns.countplot(x='Survived',data=train_df)","eaac8d01":"sns.countplot(x=('Survived'),hue='Pclass',data=train_df)","c1b5cffc":"train_df['Survived']","b07ecd3a":"age_df = pd.DataFrame({\n    'Age' : train_df['Age'],\n    'Survived' : train_df['Survived']\n})\n#age_df = train_df['Age','Survived']\nage_df.head()","69b49513":"survival_age=[]\nfor i in age_df.index:\n    if age_df.iloc[i][1]==1:\n        survival_age.append(age_df.iloc[i][0])","09c549da":"plt.hist(x=survival_age,bins=10)","fea951ee":"train_df.isnull().sum()","ab171a94":"sns.heatmap(train_df.isnull() ,yticklabels=False)","18d7a6ad":"train_df.drop('Cabin',axis=1,inplace=True)","110ffc17":"train_df.dropna(inplace=True)","aaafdf60":"sns.heatmap(train_df.isnull() ,yticklabels=False)","d388eea4":"train_df.head()","0c656f67":"Pclass = pd.get_dummies(train_df['Pclass'],drop_first=True)\nPclass.head()","f9d822ce":"sex = pd.get_dummies(train_df['Sex'],drop_first=True)\nsex.head()","2b93c7a8":"Embarked = pd.get_dummies(train_df['Embarked'],drop_first=True)\nEmbarked.head()","5b9fea4b":"train_df=pd.concat([train_df,Embarked,sex,Pclass],axis=1)\ntrain_df.head()","abf73869":"train_df.drop(['PassengerId','Pclass','Name','Sex','Ticket','Embarked'],axis=1,inplace=True)\ntrain_df.head()","1d953abf":"logmodel=LogisticRegression()\nX = train_df.drop(\"Survived\",axis=1)\ny= train_df[\"Survived\"]","bc530f38":"logmodel.fit(X,y)","f82f7c92":"test_df.head()","852b130e":"This is a simple implementation of Logistic Regression model","98d041fd":"Data Wrangling","c711f8b1":"Changing variables into catagorical form","1d5978d4":"Training Model"}}