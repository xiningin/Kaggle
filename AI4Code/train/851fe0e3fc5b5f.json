{"cell_type":{"823a42cd":"code","c1b883ae":"code","9e01ba36":"code","38312ddb":"code","1931e0f9":"code","c404831f":"code","25e5833e":"code","66fcce7e":"code","8037161a":"code","317e479e":"code","aeaf8e4d":"code","baa3a4dc":"code","a2ecf464":"code","eb7c796f":"code","2be3093f":"code","c9ca6e05":"code","54e9918d":"code","2bc647ca":"markdown","a816f078":"markdown"},"source":{"823a42cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c1b883ae":"## Read the liberaris\n\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport sqlite3\n\n","9e01ba36":"## Map the dataset to a DB path and connect to sqlite base\n\npath = \"..\/input\/soccer\/\"  #Insert path here\ndb = path + 'database.sqlite'\nconn = sqlite3.connect(db)","38312ddb":"## Read Master File\nconn = sqlite3.connect(db)\nmaster_table = pd.read_sql(\"\"\"SELECT * \n                    FROM sqlite_master\n                    WHERE type='table';\"\"\", conn)\nprint(master_table.tbl_name.to_list())","1931e0f9":"## print all the colums of each table\n\nsqlite_sequence_table = pd.read_sql(\"\"\"SELECT *\n                        FROM sqlite_sequence;\"\"\", conn)\nplayer_attributes_table = pd.read_sql(\"\"\"SELECT *\n                        FROM player_attributes;\"\"\", conn)\nplayer_table = pd.read_sql(\"\"\"SELECT *\n                        FROM player;\"\"\", conn)\nmatch_table = pd.read_sql(\"\"\"SELECT *\n                        FROM match;\"\"\", conn)\nleague_table = pd.read_sql(\"\"\"SELECT *\n                        FROM league;\"\"\", conn)\ncountry_table = pd.read_sql(\"\"\"SELECT *\n                        FROM country;\"\"\", conn)\nteam_table = pd.read_sql(\"\"\"SELECT *\n                        FROM team;\"\"\", conn)\nteam_attributes = pd.read_sql(\"\"\"SELECT *\n                        FROM team_attributes;\"\"\", conn)\n\nprint('The columns for sqlite_sequence_table_table are :',sqlite_sequence_table.columns.to_list())\nprint('\\n')\nprint('The columns for player_attributes_table are :',player_attributes_table.columns.to_list())\nprint('\\n')\nprint('The columns for player_table are :',player_table.columns.to_list())\nprint('\\n')\nprint('The columns for match_table are :',match_table.columns.to_list())\nprint('\\n')\nprint('The columns for league_table are :',league_table.columns.to_list())\nprint('\\n')\nprint('The columns for country_table are :',country_table.columns.to_list())\nprint('\\n')\nprint('The columns for team_table are :',team_table.columns.to_list())\nprint('\\n')\nprint('The columns for team_attributes are :',team_attributes.columns.to_list())","c404831f":"## count of Columns of all table\n\nprint('No of columns for sqlite_sequence_table_table are :',len(sqlite_sequence_table.columns))\nprint('\\n')\nprint('No of columns for player_attributes_table are :',len(player_attributes_table.columns))\nprint('\\n')\nprint('No of columns for player_table are :',len(player_table.columns))\nprint('\\n')\nprint('No of columns for match_table are :',len(match_table.columns))\nprint('\\n')\nprint('No of columns for league_table are :',len(match_table.columns))\nprint('\\n')\nprint('No of columns for country_table are :',len(country_table.columns))\nprint('\\n')\nprint('No of columns for team_table are :',len(team_table.columns))\nprint('\\n')\nprint('No of columns for team_attributes are :',len(team_attributes.columns))","25e5833e":"##Query 1:- Types of leagues\n\nsql = pd.read_sql(\"\"\" select id,name from league\ngroup by name\n\"\"\", conn)\nsql.head()","66fcce7e":"##Query 2:- League vs Country Name\n\nsql = pd.read_sql(\"\"\" \nselect c.id,\nl.name as leagueName,\nc.name as countryName\nfrom league l\njoin country c on c.id=l.id\ngroup by c.name,l.name\"\"\", conn)\nsql.head(100)","8037161a":"##Query 3:- Teams associated with the leagues (Country vs League vs Teams)\n\nsql = pd.read_sql(\"\"\" \n\nselect \ncountry_league_table.countryname,\nleague_teams_table.LeagueName,\nleague_teams_table.Teamintheleague from (\nselect\nl.name as LeagueName,\nt.team_long_name as TeamInTheLeague\nfrom league l \njoin match m on l.country_id=m.country_id\njoin team t on  m.home_team_api_id=t.team_api_id\ngroup by l.name,t.team_long_name) league_teams_table join (select c.id,\nl.name as leagueName,\nc.name as countryName\nfrom league l\njoin country c on c.id=l.id\ngroup by c.name,l.name) country_league_table on league_teams_table.leaguename=country_league_table.leaguename\n\n\"\"\", conn)\nsql.head()","317e479e":"##Query 4:-  Player Info\nsql = pd.read_sql(\"\"\" \nselect \npa.player_api_id as Player_api_id,\np.player_name as Player_Name, \nstrftime('%d-%m-%Y',p.birthday) as DOB,\nmax(p.height) as Height,\nmax(p.weight) as Weight,\nmax(pa.overall_rating) as Rating,\nmax(pa.potential) as Potenital,\npa.preferred_foot as Preferred_Foot,\npa.attacking_work_rate as Attacking_Work_Rate,\npa.defensive_work_rate as Defensive_Work_Rate\nfrom player p \njoin player_attributes pa on p.player_api_id=pa.player_api_id and p.player_fifa_api_id=pa.player_fifa_api_id\ngroup by p.player_name\n\n\"\"\", conn)\nsql.head()","aeaf8e4d":"##Query 5:-  Away Team Info\nsql = pd.read_sql(\"\"\" \n\nselect  \nmatch_api_id,\naway_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.away_team_api_id\ngroup by match_api_id\n\"\"\", conn)\nsql.head()","baa3a4dc":"##Query 6:-  Home Team Info\nsql = pd.read_sql(\"\"\" \n\nselect  \nmatch_api_id,\nhome_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.home_team_api_id\ngroup by match_api_id\n\"\"\", conn)\nsql.head()","a2ecf464":"##Query 7:-  Match By Match RAW\nsql = pd.read_sql(\"\"\" \nselect\na.match_api_id,\na.countryname,\na.leaguename,\nht.team_long_name as Home_Team_Long_Name,\nht.team_short_name as Home_Team_Short_Name,\nat.team_long_name as Away_Team_Long_Name,\nat.team_short_name as Away_Team_Short_Name,\na.season,\nstrftime('%d-%m-%Y',a.date) as Date,\na.stage,\na.home_team_goal,\na.away_team_goal,\ncase \nwhen a.home_team_goal - a.away_team_goal > 0 then ht.team_short_name\nwhen a.home_team_goal - a.away_team_goal < 0 then at.team_short_name else 'Tie' end as Match_Winner\nfrom (\nselect \nmatch_api_id,\ncountry_team_league_table.countryname,\ncountry_team_league_table.leaguename,\nhome_team_goal,\naway_team_goal,\nseason,\ndate,\nstage\nfrom match m \njoin team t on t.team_api_id=m.home_team_api_id or t.team_api_id=m.away_team_api_id\njoin (select \ncountry_league_table.countryname,\nleague_teams_table.LeagueName,\nleague_teams_table.Teamintheleague from (\nselect\nl.name as LeagueName,\nt.team_long_name as TeamInTheLeague\nfrom league l \njoin match m on l.country_id=m.country_id\njoin team t on  m.home_team_api_id=t.team_api_id\ngroup by l.name,t.team_long_name) league_teams_table join (select c.id,\nl.name as leagueName,\nc.name as countryName\nfrom league l\njoin country c on c.id=l.id\ngroup by c.name,l.name) country_league_table on league_teams_table.leaguename=country_league_table.leaguename) country_team_league_table on t.team_long_name=country_team_league_table.teamintheleague\ngroup by match_api_id ) a join (select  \nmatch_api_id,\nhome_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.home_team_api_id\ngroup by match_api_id) ht on a.match_api_id=ht.match_api_id \njoin (select  \nmatch_api_id,\naway_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.away_team_api_id\ngroup by match_api_id) at on a.match_api_id=at.match_api_id\n\n\"\"\", conn)\nsql.head()","eb7c796f":"##Query 8:Goals scored by home team vs away team Season on Season\nsql = pd.read_sql(\"\"\" \n\nselect\nat_table.season,\nat_table.leaguename,\nht_table.HT_goals as Home_Team_Goals,\nat_table.AT_goals as Away_Team_Goals\nfrom (\nselect \nb.season,\nb.leaguename,\nsum(home_team_goal) as HT_goals\nfrom (\nselect\na.match_api_id,\na.countryname,\na.leaguename,\nht.team_long_name as Home_Team_Long_Name,\nht.team_short_name as Home_Team_Short_Name,\nat.team_long_name as Away_Team_Long_Name,\nat.team_short_name as Away_Team_Short_Name,\na.season,\nstrftime('%d-%m-%Y',a.date) as Date,\na.stage,\na.home_team_goal,\na.away_team_goal,\ncase \nwhen a.home_team_goal - a.away_team_goal > 0 then ht.team_short_name\nwhen a.home_team_goal - a.away_team_goal < 0 then at.team_short_name else 'Tie' end as Match_Winner\nfrom (\nselect \nmatch_api_id,\ncountry_team_league_table.countryname,\ncountry_team_league_table.leaguename,\nhome_team_goal,\naway_team_goal,\nseason,\ndate,\nstage\nfrom match m \njoin team t on t.team_api_id=m.home_team_api_id or t.team_api_id=m.away_team_api_id\njoin (select \ncountry_league_table.countryname,\nleague_teams_table.LeagueName,\nleague_teams_table.Teamintheleague from (\nselect\nl.name as LeagueName,\nt.team_long_name as TeamInTheLeague\nfrom league l \njoin match m on l.country_id=m.country_id\njoin team t on  m.home_team_api_id=t.team_api_id\ngroup by l.name,t.team_long_name) league_teams_table join (select c.id,\nl.name as leagueName,\nc.name as countryName\nfrom league l\njoin country c on c.id=l.id\ngroup by c.name,l.name) country_league_table on league_teams_table.leaguename=country_league_table.leaguename) country_team_league_table on t.team_long_name=country_team_league_table.teamintheleague\ngroup by match_api_id ) a join (select  \nmatch_api_id,\nhome_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.home_team_api_id\ngroup by match_api_id) ht on a.match_api_id=ht.match_api_id \njoin (select  \nmatch_api_id,\naway_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.away_team_api_id\ngroup by match_api_id) at on a.match_api_id=at.match_api_id) b\n\ngroup by b.season,b.leaguename ) ht_table join \n(select \nb.season,\nb.leaguename,\nsum(away_team_goal) as AT_goals\nfrom (\nselect\na.match_api_id,\na.countryname,\na.leaguename,\nht.team_long_name as Home_Team_Long_Name,\nht.team_short_name as Home_Team_Short_Name,\nat.team_long_name as Away_Team_Long_Name,\nat.team_short_name as Away_Team_Short_Name,\na.season,\nstrftime('%d-%m-%Y',a.date) as Date,\na.stage,\na.home_team_goal,\na.away_team_goal,\ncase \nwhen a.home_team_goal - a.away_team_goal > 0 then ht.team_short_name\nwhen a.home_team_goal - a.away_team_goal < 0 then at.team_short_name else 'Tie' end as Match_Winner\nfrom (\nselect \nmatch_api_id,\ncountry_team_league_table.countryname,\ncountry_team_league_table.leaguename,\nhome_team_goal,\naway_team_goal,\nseason,\ndate,\nstage\nfrom match m \njoin team t on t.team_api_id=m.home_team_api_id or t.team_api_id=m.away_team_api_id\njoin (select \ncountry_league_table.countryname,\nleague_teams_table.LeagueName,\nleague_teams_table.Teamintheleague from (\nselect\nl.name as LeagueName,\nt.team_long_name as TeamInTheLeague\nfrom league l \njoin match m on l.country_id=m.country_id\njoin team t on  m.home_team_api_id=t.team_api_id\ngroup by l.name,t.team_long_name) league_teams_table join (select c.id,\nl.name as leagueName,\nc.name as countryName\nfrom league l\njoin country c on c.id=l.id\ngroup by c.name,l.name) country_league_table on league_teams_table.leaguename=country_league_table.leaguename) country_team_league_table on t.team_long_name=country_team_league_table.teamintheleague\ngroup by match_api_id ) a join (select  \nmatch_api_id,\nhome_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.home_team_api_id\ngroup by match_api_id) ht on a.match_api_id=ht.match_api_id \njoin (select  \nmatch_api_id,\naway_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.away_team_api_id\ngroup by match_api_id) at on a.match_api_id=at.match_api_id) b\n\ngroup by b.season,b.leaguename) at_Table on ht_table.leaguename=at_table.leaguename and ht_table.season=at_table.season\n\"\"\", conn)\nsql.head()","2be3093f":"##Query 9:-Total Games played by team\nsql = pd.read_sql(\"\"\" \nselect \nht.season as Season,\nht.team as Team ,\nht.home_games_played,\nat.away_games_played,\nht.home_games_played + at.away_games_played as Total_games_played_for_the_season\nfrom (\nselect b.season as Season,b.home_team_long_name as Team ,count(b.match_api_id) as home_games_played from (\nselect\na.match_api_id,\na.countryname,\na.leaguename,\nht.team_long_name as Home_Team_Long_Name,\nht.team_short_name as Home_Team_Short_Name,\nat.team_long_name as Away_Team_Long_Name,\nat.team_short_name as Away_Team_Short_Name,\na.season,\nstrftime('%d-%m-%Y',a.date) as Date,\na.stage,\na.home_team_goal,\na.away_team_goal,\ncase \nwhen a.home_team_goal - a.away_team_goal > 0 then ht.team_short_name\nwhen a.home_team_goal - a.away_team_goal < 0 then at.team_short_name else 'Tie' end as Match_Winner\nfrom (\nselect \nmatch_api_id,\ncountry_team_league_table.countryname,\ncountry_team_league_table.leaguename,\nhome_team_goal,\naway_team_goal,\nseason,\ndate,\nstage\nfrom match m \njoin team t on t.team_api_id=m.home_team_api_id or t.team_api_id=m.away_team_api_id\njoin (select \ncountry_league_table.countryname,\nleague_teams_table.LeagueName,\nleague_teams_table.Teamintheleague from (\nselect\nl.name as LeagueName,\nt.team_long_name as TeamInTheLeague\nfrom league l \njoin match m on l.country_id=m.country_id\njoin team t on  m.home_team_api_id=t.team_api_id\ngroup by l.name,t.team_long_name) league_teams_table join (select c.id,\nl.name as leagueName,\nc.name as countryName\nfrom league l\njoin country c on c.id=l.id\ngroup by c.name,l.name) country_league_table on league_teams_table.leaguename=country_league_table.leaguename) country_team_league_table on t.team_long_name=country_team_league_table.teamintheleague\ngroup by match_api_id ) a join (select  \nmatch_api_id,\nhome_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.home_team_api_id\ngroup by match_api_id) ht on a.match_api_id=ht.match_api_id \njoin (select  \nmatch_api_id,\naway_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.away_team_api_id\ngroup by match_api_id) at on a.match_api_id=at.match_api_id ) b\ngroup by b.season,b.home_team_long_name ) ht\njoin (select b.season as Season,b.away_team_long_name as team,count(b.match_api_id) as away_games_played from (\nselect\na.match_api_id,\na.countryname,\na.leaguename,\nht.team_long_name as Home_Team_Long_Name,\nht.team_short_name as Home_Team_Short_Name,\nat.team_long_name as Away_Team_Long_Name,\nat.team_short_name as Away_Team_Short_Name,\na.season,\nstrftime('%d-%m-%Y',a.date) as Date,\na.stage,\na.home_team_goal,\na.away_team_goal,\ncase \nwhen a.home_team_goal - a.away_team_goal > 0 then ht.team_short_name\nwhen a.home_team_goal - a.away_team_goal < 0 then at.team_short_name else 'Tie' end as Match_Winner\nfrom (\nselect \nmatch_api_id,\ncountry_team_league_table.countryname,\ncountry_team_league_table.leaguename,\nhome_team_goal,\naway_team_goal,\nseason,\ndate,\nstage\nfrom match m \njoin team t on t.team_api_id=m.home_team_api_id or t.team_api_id=m.away_team_api_id\njoin (select \ncountry_league_table.countryname,\nleague_teams_table.LeagueName,\nleague_teams_table.Teamintheleague from (\nselect\nl.name as LeagueName,\nt.team_long_name as TeamInTheLeague\nfrom league l \njoin match m on l.country_id=m.country_id\njoin team t on  m.home_team_api_id=t.team_api_id\ngroup by l.name,t.team_long_name) league_teams_table join (select c.id,\nl.name as leagueName,\nc.name as countryName\nfrom league l\njoin country c on c.id=l.id\ngroup by c.name,l.name) country_league_table on league_teams_table.leaguename=country_league_table.leaguename) country_team_league_table on t.team_long_name=country_team_league_table.teamintheleague\ngroup by match_api_id ) a join (select  \nmatch_api_id,\nhome_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.home_team_api_id\ngroup by match_api_id) ht on a.match_api_id=ht.match_api_id \njoin (select  \nmatch_api_id,\naway_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.away_team_api_id\ngroup by match_api_id) at on a.match_api_id=at.match_api_id ) b\ngroup by b.season,b.home_team_long_name) at on ht.season=at.season and ht.team=at.team\n\"\"\", conn)\nsql.head()","c9ca6e05":"##Query 10:-  Matches won by Teams Season on Season\nsql = pd.read_sql(\"\"\" \nselect \na.season,a.match_winner,count(a.match_winner) as Number_of_Wins\nfrom (\nselect\na.match_api_id,\na.countryname,\na.leaguename,\nht.team_long_name as Home_Team_Long_Name,\nht.team_short_name as Home_Team_Short_Name,\nat.team_long_name as Away_Team_Long_Name,\nat.team_short_name as Away_Team_Short_Name,\na.season,\nstrftime('%d-%m-%Y',a.date) as Date,\na.stage,\na.home_team_goal,\na.away_team_goal,\ncase \nwhen a.home_team_goal - a.away_team_goal > 0 then ht.team_long_name\nwhen a.home_team_goal - a.away_team_goal < 0 then at.team_long_name else 'Tie' end as Match_Winner\nfrom (\nselect \nmatch_api_id,\ncountry_team_league_table.countryname,\ncountry_team_league_table.leaguename,\nhome_team_goal,\naway_team_goal,\nseason,\ndate,\nstage\nfrom match m \njoin team t on t.team_api_id=m.home_team_api_id or t.team_api_id=m.away_team_api_id\njoin (select \ncountry_league_table.countryname,\nleague_teams_table.LeagueName,\nleague_teams_table.Teamintheleague from (\nselect\nl.name as LeagueName,\nt.team_long_name as TeamInTheLeague\nfrom league l \njoin match m on l.country_id=m.country_id\njoin team t on  m.home_team_api_id=t.team_api_id\ngroup by l.name,t.team_long_name) league_teams_table join (select c.id,\nl.name as leagueName,\nc.name as countryName\nfrom league l\njoin country c on c.id=l.id\ngroup by c.name,l.name) country_league_table on league_teams_table.leaguename=country_league_table.leaguename) country_team_league_table on t.team_long_name=country_team_league_table.teamintheleague\ngroup by match_api_id ) a join (select  \nmatch_api_id,\nhome_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.home_team_api_id\ngroup by match_api_id) ht on a.match_api_id=ht.match_api_id \njoin (select  \nmatch_api_id,\naway_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.away_team_api_id\ngroup by match_api_id) at on a.match_api_id=at.match_api_id) a\ngroup by a.season,a.match_winner\n\n\"\"\", conn)\nsql.head()","54e9918d":"##Query 11:-  Most Successful Teams compared for all seasons\n\nsql = pd.read_sql(\"\"\" \nselect * from (\nselect \na.team,\nsum(a.total_games),\nsum(a.wins),\n100*round(round(a.wins,2)\/round(a.total_games,2),4) as Win_Percentage from\n(select \ntotal_matches.season,\ntotal_matches.team,\nTotal_games_played_for_the_season as total_games,\nwin_matches.number_of_wins as wins\nfrom (\nselect \nht.season as Season,\nht.team as Team ,\nht.home_games_played,\nat.away_games_played,\nht.home_games_played + at.away_games_played as Total_games_played_for_the_season\nfrom (\nselect b.season as Season,b.home_team_long_name as Team ,count(b.match_api_id) as home_games_played from (\nselect\na.match_api_id,\na.countryname,\na.leaguename,\nht.team_long_name as Home_Team_Long_Name,\nht.team_short_name as Home_Team_Short_Name,\nat.team_long_name as Away_Team_Long_Name,\nat.team_short_name as Away_Team_Short_Name,\na.season,\nstrftime('%d-%m-%Y',a.date) as Date,\na.stage,\na.home_team_goal,\na.away_team_goal,\ncase \nwhen a.home_team_goal - a.away_team_goal > 0 then ht.team_short_name\nwhen a.home_team_goal - a.away_team_goal < 0 then at.team_short_name else 'Tie' end as Match_Winner\nfrom (\nselect \nmatch_api_id,\ncountry_team_league_table.countryname,\ncountry_team_league_table.leaguename,\nhome_team_goal,\naway_team_goal,\nseason,\ndate,\nstage\nfrom match m \njoin team t on t.team_api_id=m.home_team_api_id or t.team_api_id=m.away_team_api_id\njoin (select \ncountry_league_table.countryname,\nleague_teams_table.LeagueName,\nleague_teams_table.Teamintheleague from (\nselect\nl.name as LeagueName,\nt.team_long_name as TeamInTheLeague\nfrom league l \njoin match m on l.country_id=m.country_id\njoin team t on  m.home_team_api_id=t.team_api_id\ngroup by l.name,t.team_long_name) league_teams_table join (select c.id,\nl.name as leagueName,\nc.name as countryName\nfrom league l\njoin country c on c.id=l.id\ngroup by c.name,l.name) country_league_table on league_teams_table.leaguename=country_league_table.leaguename) country_team_league_table on t.team_long_name=country_team_league_table.teamintheleague\ngroup by match_api_id ) a join (select  \nmatch_api_id,\nhome_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.home_team_api_id\ngroup by match_api_id) ht on a.match_api_id=ht.match_api_id \njoin (select  \nmatch_api_id,\naway_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.away_team_api_id\ngroup by match_api_id) at on a.match_api_id=at.match_api_id ) b\ngroup by b.season,b.home_team_long_name ) ht\njoin (select b.season as Season,b.away_team_long_name as team,count(b.match_api_id) as away_games_played from (\nselect\na.match_api_id,\na.countryname,\na.leaguename,\nht.team_long_name as Home_Team_Long_Name,\nht.team_short_name as Home_Team_Short_Name,\nat.team_long_name as Away_Team_Long_Name,\nat.team_short_name as Away_Team_Short_Name,\na.season,\nstrftime('%d-%m-%Y',a.date) as Date,\na.stage,\na.home_team_goal,\na.away_team_goal,\ncase \nwhen a.home_team_goal - a.away_team_goal > 0 then ht.team_short_name\nwhen a.home_team_goal - a.away_team_goal < 0 then at.team_short_name else 'Tie' end as Match_Winner\nfrom (\nselect \nmatch_api_id,\ncountry_team_league_table.countryname,\ncountry_team_league_table.leaguename,\nhome_team_goal,\naway_team_goal,\nseason,\ndate,\nstage\nfrom match m \njoin team t on t.team_api_id=m.home_team_api_id or t.team_api_id=m.away_team_api_id\njoin (select \ncountry_league_table.countryname,\nleague_teams_table.LeagueName,\nleague_teams_table.Teamintheleague from (\nselect\nl.name as LeagueName,\nt.team_long_name as TeamInTheLeague\nfrom league l \njoin match m on l.country_id=m.country_id\njoin team t on  m.home_team_api_id=t.team_api_id\ngroup by l.name,t.team_long_name) league_teams_table join (select c.id,\nl.name as leagueName,\nc.name as countryName\nfrom league l\njoin country c on c.id=l.id\ngroup by c.name,l.name) country_league_table on league_teams_table.leaguename=country_league_table.leaguename) country_team_league_table on t.team_long_name=country_team_league_table.teamintheleague\ngroup by match_api_id ) a join (select  \nmatch_api_id,\nhome_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.home_team_api_id\ngroup by match_api_id) ht on a.match_api_id=ht.match_api_id \njoin (select  \nmatch_api_id,\naway_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.away_team_api_id\ngroup by match_api_id) at on a.match_api_id=at.match_api_id ) b\ngroup by b.season,b.home_team_long_name) at on ht.season=at.season and ht.team=at.team ) total_matches join \n(select \na.season,a.match_winner,count(a.match_winner) as Number_of_Wins\nfrom (\nselect\na.match_api_id,\na.countryname,\na.leaguename,\nht.team_long_name as Home_Team_Long_Name,\nht.team_short_name as Home_Team_Short_Name,\nat.team_long_name as Away_Team_Long_Name,\nat.team_short_name as Away_Team_Short_Name,\na.season,\nstrftime('%d-%m-%Y',a.date) as Date,\na.stage,\na.home_team_goal,\na.away_team_goal,\ncase \nwhen a.home_team_goal - a.away_team_goal > 0 then ht.team_long_name\nwhen a.home_team_goal - a.away_team_goal < 0 then at.team_long_name else 'Tie' end as Match_Winner\nfrom (\nselect \nmatch_api_id,\ncountry_team_league_table.countryname,\ncountry_team_league_table.leaguename,\nhome_team_goal,\naway_team_goal,\nseason,\ndate,\nstage\nfrom match m \njoin team t on t.team_api_id=m.home_team_api_id or t.team_api_id=m.away_team_api_id\njoin (select \ncountry_league_table.countryname,\nleague_teams_table.LeagueName,\nleague_teams_table.Teamintheleague from (\nselect\nl.name as LeagueName,\nt.team_long_name as TeamInTheLeague\nfrom league l \njoin match m on l.country_id=m.country_id\njoin team t on  m.home_team_api_id=t.team_api_id\ngroup by l.name,t.team_long_name) league_teams_table join (select c.id,\nl.name as leagueName,\nc.name as countryName\nfrom league l\njoin country c on c.id=l.id\ngroup by c.name,l.name) country_league_table on league_teams_table.leaguename=country_league_table.leaguename) country_team_league_table on t.team_long_name=country_team_league_table.teamintheleague\ngroup by match_api_id ) a join (select  \nmatch_api_id,\nhome_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.home_team_api_id\ngroup by match_api_id) ht on a.match_api_id=ht.match_api_id \njoin (select  \nmatch_api_id,\naway_team_api_id,\nteam_long_name,\nteam_short_name\nfrom match m\njoin team t on t.team_api_id=m.away_team_api_id\ngroup by match_api_id) at on a.match_api_id=at.match_api_id) a\ngroup by a.season,a.match_winner) win_matches on total_matches.team=win_matches.match_winner) a\ngroup by a.team)b\ngroup by b.team\norder by b.win_percentage desc\n\"\"\", conn)\nsql.head()","2bc647ca":"# This notebook contains data analysis of the European Football Dataset using SQL\n# Please Upvote if you liked the notebook, feel free ping on feedback\/query upgrades, if any\n# If you'd like a buddy mentor for SQL and Data Analytics i'm just a ping away :)!","a816f078":"#  DataBase Schema \n![1 IF83MVgOooX5EEm-Fateww.png](attachment:2170bab1-cdb9-4f68-91bf-994f69f086fd.png)\n\n**Note:- For visual Simplicity we have downsized the columns o few tables (match_table,team_attributes,player_table,team_attributes) and, if you're interested for the complete schema base, please drop me a note.**"}}