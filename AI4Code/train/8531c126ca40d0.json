{"cell_type":{"fce807aa":"code","68e26aec":"code","e0e60dfc":"code","779288e6":"code","1344c2b1":"code","d977cf9f":"code","08de50e0":"code","d66e251e":"code","cc415216":"code","4d2e64d5":"code","608ea89e":"code","cb78f5bc":"code","2a28eb17":"code","e011510c":"markdown","2530d354":"markdown","4b8ebf17":"markdown","a8789a45":"markdown","3e4af47b":"markdown","2d929938":"markdown","43ca3d65":"markdown","91f9d0db":"markdown","d615acfb":"markdown","d4dba426":"markdown"},"source":{"fce807aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","68e26aec":"province_data = pd.read_csv('..\/input\/covid19-in-italy\/covid19_italy_province.csv', index_col='Date', parse_dates=True)\nregion_data = pd.read_csv('..\/input\/covid19-in-italy\/covid19_italy_region.csv', index_col='Date', parse_dates=True)\n#region_data = pd.read_csv('..\/input\/covid19-in-italy\/covid19_italy_region.csv')\n\n\n#region_data['MyDate'] =  pd.to_datetime(region_data['Date']).dt.strftime('%m-%d')\n#region_data.set_index('MyDate')\n#print (\"Region Data\")\nregion_data.head()\n","e0e60dfc":"print (\"Region Data\")\nregion_data.head()","779288e6":"print (\"Region Data (tail)\")\nregion_data.tail()","1344c2b1":"for (idx,column) in enumerate(region_data.columns):\n    print(\"%d) %s\" % (idx,column) )","d977cf9f":"region_columns = region_data['RegionName']\nfor (idx, region) in enumerate(region_columns.unique()):\n    print(\"%d) %s\" % (idx,region) )","08de50e0":"#Define target region list\nplt.figure(figsize=(10,6))\ntgt_region_l = ['Emilia-Romagna', 'Lombardia', 'Veneto']\nemilia_data = region_data.loc[region_data.RegionName == 'Emilia-Romagna']\nlombardia_data = region_data.loc[region_data.RegionName == 'Lombardia']\nveneto_data = region_data.loc[region_data.RegionName == 'Veneto']\nfor tgt_region in tgt_region_l:\n    my_data = region_data.loc[region_data.RegionName ==tgt_region]\n    ax = sns.lineplot(data=my_data[\"CurrentPositiveCases\"], label=tgt_region)\n","d66e251e":"Same regions : new cases","cc415216":"\nplt.figure(figsize=(14,6))\nfor tgt_region in tgt_region_l:\n    my_data = region_data.loc[region_data.RegionName ==tgt_region]\n    ax = sns.lineplot(data=my_data[\"NewPositiveCases\"], label=tgt_region)\n    \n","4d2e64d5":"region_data[\"TestCasesRatio\"] = region_data['NewPositiveCases']\/region_data['TestsPerformed']\nplt.figure(figsize=(14,6))\nfor tgt_region in tgt_region_l:\n    my_data = region_data.loc[region_data.RegionName ==tgt_region]\n    ax = sns.lineplot(data=my_data[\"TestCasesRatio\"], label=tgt_region)\n","608ea89e":"\nplt.figure(figsize=(14,6))\nfor tgt_region in tgt_region_l:\n    my_data = region_data.loc[region_data.RegionName == tgt_region]\n    sns.lineplot(data=my_data[\"IntensiveCarePatients\"], label=\"%s: \" % tgt_region)","cb78f5bc":"plt.figure(figsize=(14,6))\n\nfor tgt_region in tgt_region_l:\n    my_data = region_data.loc[region_data.RegionName == tgt_region]\n    sns.lineplot(data=my_data[\"HospitalizedPatients\"], label=\"%s: Hospitalized patients\" % tgt_region)","2a28eb17":"# Get last day\nplt.figure(figsize=(14,6))\nlast_day_data = region_data.loc[region_data.index[-1]]\nax = sns.barplot(x=\"RegionName\", y=\"CurrentPositiveCases\", data=last_day_data)\ny = ax.set_xticklabels(ax.get_xticklabels(), rotation=90)","e011510c":"# Analysis of Corona Virus Data Italy","2530d354":"Intensive care patients","4b8ebf17":"Grahpic on hospitalized patients","a8789a45":"Barplot of cumulative data","3e4af47b":"New Cases versus tests","2d929938":"We can now view the columns","43ca3d65":"Reading data with csv reader & print header of provinces","91f9d0db":"Listing regions","d615acfb":"Check tail of code","d4dba426":"Comparison of cases Lombardia\/Emilia\/Veneto"}}