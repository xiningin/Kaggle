{"cell_type":{"776e442a":"code","c6eb0bb4":"code","4b5530b6":"code","91aa7bda":"code","3eedf544":"code","ccb3e057":"code","77d70390":"code","0b5d3452":"code","36aa8c83":"code","e9364542":"code","b967d5d3":"code","96bc909e":"code","244b01b1":"code","def45a19":"code","da8301dd":"code","79e4546d":"code","ab6fc527":"code","2e222cad":"code","da97ef12":"code","64ca417f":"code","7b1a9207":"code","52fe6845":"code","c185ac18":"code","b82ea968":"code","ad163c2a":"code","bae583da":"code","477e02a5":"code","f83eb623":"code","1e09e091":"code","d0c50d8d":"code","a1971bea":"code","c2c6ec2d":"code","573c91aa":"code","b776f03e":"code","40e20f9e":"code","59854b93":"code","d5592b58":"code","df60e42b":"code","d3c49b69":"code","8839e8c2":"code","08986c06":"code","4c50d39c":"code","c8ffe4e6":"code","46312650":"code","77d954e2":"code","e65692c5":"code","d90084dd":"code","a06db2a6":"code","811b1ff7":"code","d5e7a0ee":"code","dd742a56":"code","4708688f":"code","87492e61":"code","9fb37e29":"code","9fb709af":"code","60b42c8e":"code","80da472f":"code","753c3ced":"code","d0e16ed7":"code","261cabf4":"code","5a017b97":"code","ad5642bf":"code","23cf6556":"code","528b904c":"code","c5bb570f":"code","eb05ff92":"code","417ea829":"code","7f0379fa":"code","fd374e58":"code","7093b2d1":"code","14037402":"code","858af219":"code","eb62a2e9":"code","e12959a1":"code","9ecf3c74":"code","2ea395c8":"code","8ce0578c":"code","1819c185":"code","49ba82d9":"code","7d08558a":"code","9ef9f6d1":"code","aaa0ecd4":"code","0a2ac590":"code","ea737f21":"code","78578af4":"code","6c0de12c":"code","eb817ad4":"code","f74466cf":"code","d37d3e65":"code","62c8927c":"code","cbb0b273":"code","86688952":"markdown","0103a41f":"markdown","a6341539":"markdown","2747a6e3":"markdown","9514d3e4":"markdown","147733cf":"markdown","4d876aa2":"markdown","b0340b23":"markdown","43901880":"markdown","eba5a0f5":"markdown","f798bfce":"markdown","2aec1ff2":"markdown","7b6b13ae":"markdown","eba31b15":"markdown","44096386":"markdown","fda443e3":"markdown","01ceac54":"markdown","6efa0cb4":"markdown","79e418e5":"markdown","d443872b":"markdown","0618a2f6":"markdown","e18f3277":"markdown","ec9a4072":"markdown","9e619fda":"markdown","a12f1206":"markdown","a359bae6":"markdown","a5132e2e":"markdown","ea4ecef9":"markdown","9c072927":"markdown","4b213095":"markdown","6bf72fd2":"markdown","fcf013e1":"markdown","ab0fbbc1":"markdown","8da792d4":"markdown","5a6b3b6a":"markdown","45d291f1":"markdown","7c2019d0":"markdown","fd4fbae1":"markdown","0f89a158":"markdown","290adf82":"markdown"},"source":{"776e442a":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.font_manager\n%matplotlib inline","c6eb0bb4":"test = pd.read_csv('..\/input\/titanic\/test.csv')\ntrain = pd.read_csv('..\/input\/titanic\/train.csv')","4b5530b6":"# Salvanso os \u00edndices para separar os datasets no final\ntrain_index= train.shape[0]\ntest_index = test.shape[0]\ntest_index","91aa7bda":"#Salvar o Passenger Id para subimiss\u00e3o no Kaglgle\npassengerId = test.PassengerId","3eedf544":"#Extrair a coluna Survived e exclu\u00ed-la do treino\n\ntarget = train.Survived.copy()\n\ntrain.drop(columns=['Survived'], inplace=True)\n\ntrain.head()#confirmando a exclus\u00e3o","ccb3e057":"# juntando treino e teste em um \u00fanico DataFrame\n\ntudo_junto = pd.concat(objs=[train, test], axis=0).reset_index(drop=True)\n\ndisplay(tudo_junto.shape)","77d70390":"tudo_junto.drop(columns=['PassengerId', 'Name', 'Ticket', 'Cabin'], inplace=True)\ntudo_junto.head()","0b5d3452":"tudo_junto.isna().sum()","36aa8c83":"tudo_junto.isna().sum()\/tudo_junto.shape[0] *100","e9364542":"#idade - Escolhemos completar os valores nulos com a mediana, mas poderia ser a moda tamb\u00e9m.\ntudo_junto.Age.fillna(tudo_junto.Age.median(), inplace=True)","b967d5d3":"#Tarifa - Tamb\u00e9m escolhemos preencher com a mediana\ntudo_junto.Fare.fillna(tudo_junto.Fare.median(),inplace=True)\n","96bc909e":"#Local de Embarque - Preenchemos com o local onde teve maior n\u00famero de embarques.\ntudo_junto.Embarked.fillna(tudo_junto.Embarked.value_counts()[0],inplace=True)","244b01b1":"#Conferindo que n\u00e3o h\u00e1 mais valores nulos.\ntudo_junto.isna().sum()","def45a19":"# COnvertendo Sex 0 para male e 1 para female\n\ntudo_junto.Sex = tudo_junto.Sex.map({\"male\":0 , \"female\":1})\n\ntudo_junto.Sex","da8301dd":"# dummies variables para Embarked\nembarked_dummies = pd.get_dummies(tudo_junto.Embarked, prefix='Embarked')\n\ntudo_junto = pd.concat([tudo_junto, embarked_dummies], axis=1)\n                      ","79e4546d":"tudo_junto","ab6fc527":"tudo_junto.drop(columns=['Embarked'], inplace=True)","2e222cad":"tudo_junto","da97ef12":"train = tudo_junto.iloc[:train_index]\ntest = tudo_junto.iloc[train_index:]","64ca417f":"comparacao_modelos = pd.DataFrame(columns=['Modelo', 'Acur\u00e1cia']) # Esse Data Frame tem o objetivo de armazenar os valores das m\u00e9tricas para facilitar a compara\u00e7\u00e3o dos valores.","7b1a9207":"#essa fun\u00e7\u00e3o armazenar\u00e1, classificar\u00e1 por ordem de melhor desempenho o nome do modelo e sua acur\u00e1cia.\ndef comparar(Nome_do_modelo, valor_acuracia):  \n\n  global comparacao_modelos\n\n  comparacao_modelos = comparacao_modelos.append({'Modelo': Nome_do_modelo, 'Acur\u00e1cia': valor_acuracia }, ignore_index=True)\n\n  #Colocando em ordem de melhor acur\u00e1cia para a pior\n\n  comparacao_modelos.sort_values(ascending=False, by='Acur\u00e1cia', inplace=True)\n\n  comparacao_modelos.drop_duplicates(inplace=True) # para caso duplicar uma linha sem querer :)\n\n  display(comparacao_modelos) ","52fe6845":"#a semente para que as amostram sejam as mesmas\nSEED = 2021\nnp.random.seed(SEED)","c185ac18":"from sklearn.dummy import DummyClassifier\n\ndummy_stratified = DummyClassifier(strategy = 'most_frequent', random_state = SEED) #testei os par\u00e2metro strategy e mantive o que obt\u00e9m o melhor resultado\n\ndummy_stratified.fit(train, target)","b82ea968":"#verificando a acur\u00e1cia do modelo\nacuracia_dummy = round(dummy_stratified.score(train, target)*100, 2)\n\ndisplay(f\"A acur\u00e1cia do modelo Dummy Classifier \u00e9 de {acuracia_dummy} %\")","ad163c2a":"comparar(\"Dummy Classifier\",acuracia_dummy)","bae583da":"from sklearn.linear_model import LogisticRegression","477e02a5":"#criando  o modelo\nlr_model = LogisticRegression(solver='liblinear',random_state=SEED)\nlr_model.fit(train, target)","f83eb623":"#verificando a acur\u00e1cia do modelo\nacuracia_r_l = round(lr_model.score(train, target)*100, 2)\n\ndisplay(f\"A acur\u00e1cia do modelo de Regress\u00e3o Log\u00edstica \u00e9 de {acuracia_r_l} %\")","1e09e091":"#Gerando a previs\u00e3o com os testes\n\ny_predict = lr_model.predict(test)\n\n#submission = pd.DataFrame({'PassengerId': passengerId,'Survived':y_predict})","d0c50d8d":"#gerando o arquivo Csv\n#submission.to_csv('.\/submission_lr.csv', index=False)\n","a1971bea":"comparar('Regress\u00e3o Log\u00edstica', acuracia_r_l)","c2c6ec2d":"from sklearn.tree import DecisionTreeClassifier","573c91aa":"#Criando o modelo\ntree_model = DecisionTreeClassifier(max_depth=3, random_state=SEED)\n\ntree_model.fit(train,target)","b776f03e":"#verificando a acur\u00e1cia do modelo\nacuracia_tree_model = round(tree_model.score(train, target)*100, 2)\n\ndisplay(f\"A acur\u00e1cia do modelo de \u00c1rvore de Classifica\u00e7\u00e3o \u00e9 de {acuracia_tree_model} %\")","40e20f9e":"y_pred_tree = tree_model.predict(test)\n\nsubmission = pd.DataFrame({\n    \"PassengerId\": passengerId,\n    \"Survived\": y_pred_tree\n})\n\n# gerar arquivo csv\nsubmission.to_csv('.\/submission_tree.csv', index=False)","59854b93":"comparar( \"Decision Tree Classifier\", acuracia_tree_model)","d5592b58":"from sklearn.linear_model import LinearRegression","df60e42b":"#criando o modelo\nlinear_model = LinearRegression()\nlinear_model.fit(train,target)","d3c49b69":"#verificando a acur\u00e1cia do modelo\nacuracia_linear_regression = round(linear_model.score(train, target)*100, 2)\n\ndisplay(f\"A acur\u00e1cia do modelo de Linear \u00e9 de {acuracia_linear_regression} %\")","8839e8c2":"comparar(\"Linear Regression\", acuracia_linear_regression)","08986c06":"from sklearn.ensemble import GradientBoostingClassifier","4c50d39c":"#criando o modelo\ngradient_model = GradientBoostingClassifier(max_depth=3, learning_rate=0.3, random_state=SEED)\n\ngradient_model.fit(train,target)","c8ffe4e6":"#verificando a acur\u00e1cia do modelo\nacuracia_gradient = round(gradient_model.score(train, target)*100, 2)\n\ndisplay(f\"A acur\u00e1cia do modelo de Gradiente \u00e9 de {acuracia_gradient} %\")","46312650":"#gerando as previs\u00f5es\ny_pred_gradient = gradient_model.predict(test)\n\nsubmission = pd.DataFrame({\n    \"PassengerId\": passengerId,\n    \"Survived\": y_pred_gradient\n})\n\n# gerar arquivo csv\nsubmission.to_csv('.\/submission_gradient.csv', index=False)","77d954e2":"comparar(\"Gradient Boosting Model\", acuracia_gradient)","e65692c5":"from sklearn.ensemble import RandomForestClassifier","d90084dd":"#criando o Modelo\nrandom_forest_model = RandomForestClassifier(n_estimators=55, random_state=SEED)\nrandom_forest_model.fit(train, target)","a06db2a6":"#verificando a acur\u00e1cia do modelo\nacuracia_random_forest = round(random_forest_model.score(train, target)*100, 2)\n\ndisplay(f\"A acur\u00e1cia do modelo Random Forest \u00e9 de {acuracia_random_forest} %\")","811b1ff7":"#gerando as previs\u00f5es\ny_pred_random_forest = random_forest_model.predict(test)\n\nsubmission = pd.DataFrame({\n    \"PassengerId\": passengerId,\n    \"Survived\": y_pred_random_forest\n})\n\n# gerar arquivo csv\nsubmission.to_csv('.\/submission_random_forest.csv', index=False)","d5e7a0ee":"comparar(\"Random Forest Classifier\", acuracia_random_forest)","dd742a56":"from xgboost import XGBClassifier","4708688f":"xgbc_model = XGBClassifier(max_depth=15, min_child_weight=1, n_estimators=500, random_state=42, learning_rate=0.01,  \n                     eval_metric=[\"error\", \"logloss\"])\nxgbc_model.fit(train, target)","87492e61":"#verificando a acur\u00e1cia do modelo\nacuracia_XGB = round(xgbc_model.score(train, target)*100, 2)\n\ndisplay(f\"A acur\u00e1cia do modelo XGBC  \u00e9 de {acuracia_XGB} %\")","9fb37e29":"#gerando as previs\u00f5es\ny_pred_xbgc = xgbc_model.predict(test)\n\nsubmission = pd.DataFrame({\n    \"PassengerId\": passengerId,\n    \"Survived\": y_pred_xbgc\n})\n\n# gerar arquivo csv\nsubmission.to_csv('.\/submission_xbgc.csv', index=False)","9fb709af":"comparar('XGB Classifier',acuracia_XGB)","60b42c8e":"from sklearn.svm import SVC","80da472f":"#criando o Modelo\nsvc_model = SVC(C=10000, random_state=SEED)\nsvc_model.fit(train, target)","753c3ced":"#verificando a acur\u00e1cia do modelo\nacuracia_svc = round(svc_model.score(train, target)*100, 2)\n\ndisplay(f\"A acur\u00e1cia do modelo SVC  \u00e9 de {acuracia_svc} %\")","d0e16ed7":"#gerando as previs\u00f5es\ny_pred_svc = svc_model.predict(test)\n\nsubmission = pd.DataFrame({\n    \"PassengerId\": passengerId,\n    \"Survived\": y_pred_svc\n})\n\n# gerar arquivo csv\nsubmission.to_csv('.\/submission_svc.csv', index=False)","261cabf4":"comparar('SVC', acuracia_svc)","5a017b97":"from sklearn.neighbors import KNeighborsClassifier","ad5642bf":"#Criando o modelo\nknn_model = KNeighborsClassifier(n_neighbors=2)\nknn_model.fit(train, target)","23cf6556":"#verificando a acur\u00e1cia do modelo\nacuracia_knn = round(knn_model.score(train, target)*100, 2)\n\ndisplay(f\"A acur\u00e1cia do modelo KNeighborsClassifier  \u00e9 de {acuracia_knn} %\")","528b904c":"#gerando as previs\u00f5es\ny_pred_knn= knn_model.predict(test)\n\nsubmission = pd.DataFrame({\n    \"PassengerId\": passengerId,\n    \"Survived\": y_pred_knn\n})\n\n# gerar arquivo csv\nsubmission.to_csv('.\/submission_knn.csv', index=False)","c5bb570f":"comparar('KNeighbors Classifier', acuracia_knn)","eb05ff92":"tres_modelos = comparacao_modelos[:3].copy()\ntres_modelos","417ea829":"from sklearn.metrics import confusion_matrix \n\n# Usamos os mesmos dados de treino para previs\u00e3o e calculamos a matriz de confus\u00e3o\nxgbc_predict = xgbc_model.predict(train)\nxgbc_matrix = confusion_matrix(target,xgbc_predict )","7f0379fa":"#Ser\u00e1 impresso no gr\u00e1fico\n\nclassificacao = ['Verdadeiro Negativo','Falso Positivo','Falso Negativo','Verdadeiro Positivo']\n\ncontagem_xgbc = [\"{0:0.0f}\".format(value) for value in xgbc_matrix.flatten()] # list comprehension  que ir\u00e1 gerar uma lista da Matriz de confus\u00e3o.\n\npercentual_xgbc = [\"{0:.2%}\".format(value) for value in xgbc_matrix.flatten()\/np.sum(xgbc_matrix)] # list comprehension  que ir\u00e1 gerar uma lista com os % da Matriz de confus\u00e3o.\n\nlabels_xgbc = [f\"{v1}\\n{v2}\\n{v3}\" for v1, v2, v3 in zip(classificacao,contagem_xgbc,percentual_xgbc)] #re\u00fane as informa\u00e7\u00f5es acima \n\nlabels_xgbc = np.asarray(labels_xgbc).reshape(2,2) # remodela o array unidimendional em um 2x2 que ser\u00e1 impresso em cada quadrante da Matriz de Confus\u00e3o\n\nprint(classificacao)\ndisplay(contagem_xgbc)\ndisplay(percentual_xgbc)\ndisplay(labels_xgbc)\n\n#sns.heatmap(xgbc_matrix, annot=labels_xgbc, fmt=\"\", cmap='Blues') # gr\u00e1fico da matriz de confus\u00e3o individual. Preferi lotar os 3 lado a lado para facilitar a compara\u00e7\u00e3o","fd374e58":"# COnfigurando o gr\u00e1fico para o modelo Random Forest\nrandom_predict = random_forest_model.predict(train)\nrandom_matrix = confusion_matrix(target,random_predict )\n\n\nclassificacao = ['Verdadeiro Negativo','Falso Positivo','Falso Negativo','Verdadeiro Positivo']\n\ncontagem_rf = [\"{0:0.0f}\".format(value) for value in random_matrix.flatten()] # list comprehension\n\npercentual_rf = [\"{0:.2%}\".format(value) for value in random_matrix.flatten()\/np.sum(random_matrix)]\n\nlabels_rf = [f\"{v1}\\n{v2}\\n{v3}\" for v1, v2, v3 in zip(classificacao,contagem_rf,percentual_rf)]\n\nlabels_rf = np.asarray(labels_rf).reshape(2,2)\n\n#sns.heatmap(random_matrix, annot=labels_rf, fmt=\"\", cmap='Oranges')","7093b2d1":"# COnfigurando o gr\u00e1fico para o modelo Gradient boost Model\ngradient_predict = gradient_model.predict(train)\ngradient_matrix = confusion_matrix(target,gradient_predict )\n\n\nclassificacao = ['Verdadeiro Negativo','Falso Positivo','Falso Negativo','Verdadeiro Positivo']\n\ncontagem_gb = [\"{0:0.0f}\".format(value) for value in gradient_matrix.flatten()] # list comprehension\n\npercentual_gb = [\"{0:.2%}\".format(value) for value in gradient_matrix.flatten()\/np.sum(gradient_matrix)]\n\nlabels_gb = [f\"{v1}\\n{v2}\\n{v3}\" for v1, v2, v3 in zip(classificacao,contagem_gb,percentual_gb)]\n\nlabels_gb = np.asarray(labels_gb).reshape(2,2)\n\n#sns.heatmap(gradient_matrix, annot=labels_gb, fmt=\"\", cmap='Greens')","14037402":"#colocando os gr\u00e1ficos lado a lado para facilitar a compara\u00e7\u00e3o\nfig, (axis1, axis2, axis3) = plt.subplots(1,3, figsize=(25,5))\n\n#matrix de confus\u00e3o do XBGC\nax = sns.heatmap(xgbc_matrix, annot=labels_xgbc, fmt=\"\", cmap='Blues', ax=axis1)\nax.set_title(\"XGBC Classifier\", fontsize=15,pad=20)\nax.set_xlabel('Previsto', fontsize= 15)\nax.set_ylabel('Real', fontsize=15)\n\n# #matrix de confus\u00e3o do Random Forest\nax = sns.heatmap(random_matrix, annot=labels_rf, fmt=\"\", cmap='Oranges', ax=axis2)\nax.set_title(\"Random Forest\", fontsize=15,pad=20)\nax.set_xlabel('Previsto', fontsize= 15)\nax.set_ylabel('Real', fontsize=15)\n\n#matrix de confus\u00e3o do Gradient Boost\nax = sns.heatmap(gradient_matrix, annot=labels_gb, fmt=\"\", cmap='Greens', ax=axis3)\nax.set_title(\"Gradient Boost Classifier\", fontsize=15,pad=20)\nax.set_xlabel('Previsto', fontsize= 15)\nax.set_ylabel('Real', fontsize=15)\n\n","858af219":"from sklearn.metrics import precision_score","eb62a2e9":"tres_modelos","e12959a1":"#lista dos valores preditos respeitando a ordem  dos tres_modelos para inserir numa coluna e compararmos.\nlista_val_predict =[random_predict,gradient_predict,xgbc_predict] ","9ecf3c74":"tres_modelos['Precis\u00e3o'] = [(precision_score(target,x)*100).round(2) for x in lista_val_predict]\ntres_modelos","2ea395c8":"from sklearn.metrics import recall_score\n\ntres_modelos['Recall']=[(recall_score(target,x)*100).round(2) for x in lista_val_predict]\ntres_modelos","8ce0578c":"from sklearn.metrics import plot_precision_recall_curve\n\nplot_precision_recall_curve(random_forest_model, train,target)\nplot_precision_recall_curve(gradient_model, train, target)\nplot_precision_recall_curve(xgbc_model, train, target)","1819c185":"from sklearn.metrics import f1_score","49ba82d9":"tres_modelos['F1-Score'] = [(f1_score(target,x)*100).round(2) for x in lista_val_predict]\ntres_modelos","7d08558a":"from sklearn.metrics import classification_report","9ef9f6d1":"#Individualmente\n# y_true = target\n# y_pred = xgbc_predict\n# target_names = ['N\u00e3o Sobreviventes', 'Sobreviventes']\n# print(classification_report(y_true, y_pred, target_names=target_names))","aaa0ecd4":"#Gerando os relat\u00f3rios para os 3 modelos ao mesmo tempo\nlista_val_predict =[random_predict,gradient_predict,xgbc_predict] \n[print(classification_report(target,x,target_names=['N\u00e3o Sobrevivente','Sobrevivente'])) for x in lista_val_predict]","0a2ac590":"tres_modelos #para compara\u00e7\u00e3o","ea737f21":"from sklearn.metrics import plot_roc_curve","78578af4":"plot_roc_curve(random_forest_model,train, random_predict)\nplot_roc_curve(gradient_model, train, gradient_predict)\nplot_roc_curve(xgbc_model, train,gradient_predict)\n\n  ","6c0de12c":"from sklearn.model_selection import KFold, cross_val_score\n\nlista_de_modelos = [random_forest_model,gradient_model,xgbc_model]\nmedia = []\ndesv_pad = []\nintervalo = []","eb817ad4":"def validacao_cruzada(lista_de_modelos):\n  \n  #n_splits \u00e9 a quantidade de divis\u00e3o que ser\u00e1 feita nos dados e testado\n  #shuffle se prefere que embaralha os dados na escolha dos n_splits\n\n  kfold  = KFold(n_splits=10, shuffle=True, random_state=2021)\n\n  for x in lista_de_modelos:\n    score = cross_val_score(x,train,target, cv=kfold, scoring='accuracy')\n    #print((score*100).round(2),(score.mean()*100).round(2),(score.std()*100).round(2))\n    media.append((score.mean()*100).round(2))\n    desv_pad.append((score.std()*100).round(2))\n    intervalo.append([(score.mean()*100).round(2) - (score.std()*100).round(2) , (score.mean()*100).round(2) + (score.std()*100).round(2)])\n\n\n  tres_modelos[\"Acuracia-CV\"]=media\n  tres_modelos['Desvio Padr\u00e3o-CV'] = desv_pad\n  tres_modelos['Intervalo-CV'] =intervalo\n\n  ","f74466cf":"validacao_cruzada(lista_de_modelos)\ntres_modelos","d37d3e65":"tres_modelos['Resultado do Kaggle'] = [76.77, 78.23, 75.36]\ntres_modelos.sort_values(ascending=False, by= 'Resultado do Kaggle', ignore_index=True)","62c8927c":"test.columns #para saber qual o vetor de caracter\u00edsticas.","cbb0b273":"Samuel = np.array([1,0 , 33, 0, 0, 100, 0, 1, 0, 0]).reshape((1, -1))\n\n\n# verificar se ter\u00edamos sobrevivido\na = gradient_model.predict(Samuel) \n\nif a == 1: \n    print('Voc\u00ea Sobreviveria ao Titanic!')\nelse:\n    print('Que pena, voc\u00ea n\u00e3o teria muitas chances de sobreviver ao desastre do Titanic.')\n     \n     \n","86688952":"\n## **3.1 - Juntando os datasets de treino e teste**\n\nJuntamos os dados para fazer as features engineering e depois separamos no final.\n\nSe n\u00e3o quiser reunir tudo em um s\u00f3 dataset, ent\u00e3o os mesmos tratamentos realizados no dataset train dever\u00e1 tamb\u00e9m ser realizado no test. A vantagem juntar os datasets \u00e9 que usaremos outras fun\u00e7\u00f5es do pandas e com isso adquirimos familiaridade, como a fun\u00e7\u00e3o pd.concat().","0103a41f":"## **5.6 - ROC Curve (Receiver Operating Characteristic Curve)**","a6341539":"**List Comprehension**  \u00e9 um jeito de construir uma lista com uma simples linha em Python. Substitui o padr\u00e3o de criar uma lista vazia, preench\u00ea-la com um loop atrav\u00e9s de ifs. \n\nPara entender melhor indico o v\u00eddeo a seguir mas h\u00e1 muitos outros dispon\u00edveis gratuitamente no youtube: [V\u00eddeo](https:\/\/youtu.be\/j7pe5x2apBs)","2747a6e3":"## 5.1 - **Matriz de Confus\u00e3o** \n\u00e9 uma matriz\/tabela  n x n onde n \u00e9 o n\u00famero de ***classes\/categorias*** da vari\u00e1vel alvo - ***target***. No caso do Titanic a vari\u00e1vel alvo posui duas categorias: ***0*** se n\u00e3o sobreviveu e ***1*** se sobreviveu.\nNos plots s\u00e3o mostrados 4 quadrantes descritos a seguir:\n\n\n*   **Verdadeiro Positivo ou True Positive - TP** : Quando o modelo prev\u00ea corretamente a vari\u00e1vel alvo,p.e,  previu que um passageiro sobreviveria e sobreviveu. (1,1)\n*   **Falso Positivo ou False Positive - FP:** quando o modelo prev\u00ea incorretamente a classe alvo, p.e, previu que o passageiro sobreviveiria mas n\u00e3o sobreviveu,(1,0). Tamb\u00e9m \u00e9 conhecido como ***Erro do tipo 1***\n*   **Verdadeiro Negativo ou True Negative - TN:** Quando o modelo prev\u00ea corretamente que n\u00e3o pertence a categoria que estamos tentando prever, p.e, previu que n\u00e3o sobreviveria e n\u00e3o sobreviveu. (0,0)\n*   **Falso Negativo ou False Negative - FN** : Quando o modelo prev\u00ea incorretamente que n\u00e3o pertence a clase alvo mas na verdade pertence, p.e, que n\u00e3o sobreviveria mas sobreviveu, (0,1). Tamb\u00e9m \u00e9 conhecido como ***Erro do tipo 2***.\n\nA **Acur\u00e1cia**, que foi calculada na se\u00e7\u00e3o anterior para a escolha dos melhores modelos, \u00e9 a medida de todas as previs\u00f5es corretas feitas pelo modelo em rela\u00e7\u00e3o a todas as previs\u00f5es. \n\n***Acur\u00e1cia*** = **(TP + TN) \/ (TP + TN + FP + FN)**\n\nPara saber mais detalhes voc\u00ea pode acessar:\n\n[Artigo em portugu\u00eas](https:\/\/medium.com\/data-hackers\/entendendo-o-que-%C3%A9-matriz-de-confus%C3%A3o-com-python-114e683ec509)\n\n[Artigo em Ingl\u00eas](https:\/\/towardsdatascience.com\/evaluation-metrics-18db24a91223)\n\n\n\n","9514d3e4":"**Notamos que com a valida\u00e7\u00e3o cruzada a acur\u00e1cia dos modelos diminuiu com m\u00e9dia  inferior ao c\u00e1lculo da acur\u00e1cia, mas levando em conta os erros a partir dos desvio padr\u00e3o, \u00e9 mais prov\u00e1vel que o valor esteja em algum ponto dentro do intervalo. Por exemplo, o Modelo XGB Classifier aplicado aos nossos dados tem uma acur\u00e1cia entre 78,23% e 87,2%. Abaixo dos 92,93% calculado anteriormente**","147733cf":"A curva **Precision-Recall** pode ser plotada como podemos ver abaixo para cada um dos modelos.\n\n\"*A curva de recall de precis\u00e3o plota a rela\u00e7\u00e3o entre precis\u00e3o e RECALL \u00e0 medida que o limite de decis\u00e3o \u00e9 alterado. Recall \u00e9 a capacidade de um modelo detectar todos os exemplos positivos e a precis\u00e3o \u00e9 a capacidade de um modelo evitar rotular amostras negativas como positivas. Alguns problemas de neg\u00f3cios podem exigir uma recall mais alta e uma precis\u00e3o mais alta, dependendo da import\u00e2ncia relativa de evitar falsos negativos versus falsos positivos.*\" Trecho retirado da documenta\u00e7\u00e3o da Microsoft Azure.","4d876aa2":"# **3- Prepara\u00e7\u00e3o dos Dados**\n\n","b0340b23":"## **5.2 - Precis\u00e3o**\n\nPara superar as limita\u00e7\u00f5es da acur\u00e1cia a **Precision**  nos fala qual a propor\u00e7\u00e3o de previs\u00f5es positivas est\u00e3o corretas.\n\n![image.png](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAXAAAABuCAYAAAA+skhgAAAQhUlEQVR4Ae2djZHUvBJFCYEYCIEYCIEYCIEYCIEYCIEYCIEYSGG\/OhSX109YUst\/OxpdVbk8Y0ut1pF91e6Z2X3z4mICJmACJjAlgTdTem2nTcAETMAEXizgvghMwARMYFICFvBJJ85um4AJmIAF3NeACZiACUxKwAI+6cTZbRMwAROwgPsaMAETMIFJCVjAJ504u20CJmACFnBfAyZgAiYwKQEL+KQTZ7dNwARMwALua8AETOAvgQ8fPry8e\/fulA1brfL+\/fuXN2\/epDfqf\/z48eX79+8ts0uds4AvNd0erAnUCSCMEtTPnz\/\/FsqfP3++xA1RVp1v377937kfP368cEx1WAgypex3q82vX79+25bo0wfHVi8W8NWvAI\/fBP4Q+PTp0wsCiWDXigS0J86Klmt24nFEX4tCq2+1kQ+9CF\/1n3lvAX\/m2fXYTGCAwNu3b5vijSkJLWLfKkTwX758aVX5ew5b2KX\/TPn69etfP4j6Vy4W8JVn32M3gT8ESGP0RDmmOoiaWwUB79VRe6J5BJz8dqZEP7KLRMbujHUs4DPOmn02gZMJIN699AWirAi8l3\/O2GMI2JFNIutMiRG4BTxDzHVMwASemgB55V5R7rmX\/8ZONj89mv\/GNpG6RN8plN6s+bwJmMBTE9A3PHqDlGj2Ui3YyUbT2MJuNv+NbfmRWXR6Y5r9vFMos8+g\/TeBGwgQ6Uo4s7ntjFuj+e+YxumlfDL9z17HAj77DNp\/E7iBALlmCXgv\/511ZzT\/rXQL0frqqRMxtoCLhPcmYAJVAqM\/zqkaCickyCwMrWiab52o\/9U\/tAz4fr+0gJdE\/N4ETOAfAoq+M\/nvfxpXDij\/jW3y2eVGeoVom+MI91mRf8WdKQ9bwKecNjttAvcRuDr\/nf3Gyn0jnqcnC\/g8c2VPTeBVCFyd\/3ZaZP+0WsD3s3NLE1iCgPLPme9\/Z4HE\/Lc\/kMxS+7eeBfxfJj5iAiYQCFyd\/w5d+eUgAQv4IDBXN4GVCDj\/\/dizbQF\/7PmxdybwqgSuzn\/zwxyX\/QQs4PvZuaUJPD2BK\/Lf8a8J8tplPwEL+H52bmkCT0\/givx3\/Dn80wO8eIAW8IsB27wJzEog5r+zf5wqM1Z+mKMf72Tqu06dgAW8zsZnTGBZAvy0XekTxPYsAY\/pE\/+A5\/jlZQE\/ztAWTOApCPCzdTYEW6\/jPh4f+e42or1lF3vanAvfdwkdFnA9Dmkienvq8wfZPWH7JsytTMAETEAEDgu4DMVHo9pXg\/SH4yX6PEL5D9SIoPcmYAImMEbgNAGPP41t\/WlIuRdFXMeeZc\/4Gd\/VOb67+nmWefE4TODZCJwm4PrTkOS6MiX+Y9KRfFrG9mvX0deksiz2+ntXP3v9czsTMIFrCZwm4KP\/GimmXJ7tr5ERGd+R57+rn2svQVs3ARPYS+AUAR\/910g4GyPwZxPwvZPhdiZgAiYwQuAUAR\/Nf+MgEaq+sfJsKZSRCXBdEzABE9hL4BQBH81\/46zEmw\/7XEzABEzABMYJnCLgo\/lvffiGiJPHdTEBEzABExgncFjAR\/PfSrfwDY2t1An2+PodG2mW+D1xcuU6zn6rfYmA9iwYaodNtszCQVv1GdszhrKQ08cuTxQj\/\/iVPqivrx3SD9tWH\/R5pB+NRQxa\/egDUvkVecE92qAOfrmYgAncS+CwgEuQe9E03zpBMKjX+tASYZBoI\/K0obCPIoHo9b6mp0i\/7A8x4qlB\/Wwhpy\/sY6MsHIu+YF\/vsckYt9qVdmCCH+zLQvtSxPf2E8cSxwwHxgjzsog7x6mDnxT8gn20o2ug5Fza9HsTMIFzCRwWcG5mBIuNSKzcuPERAI5zg8cbvxwKQhZFgDbYRWAkkLShjvosbei92taidGyWAqm2GtPWefzQWKmPfeqr8D6e1\/FyL6Hf6gMOpbDu7UdjifyiLxpP9IPX8T1zuDUPsqOx4PPeIhua17P2W4vjXh\/dzgQejcBhAdfNHSO2vYNEbOKjOoLAjRwFEtuIC8ej2Mc+8aV1nroI\/NbNTYS51afsyydFreyjz732sqNFKLYtz0XR3dNPxhf6Z7yKsPGhnEvOs2Fvq0Tx3TqfPYYvLFRnbtm+Xc8EZiRwSMDjjVsT0xEoiKqKhAXhoJ9sUUTZigapU4oU9hU9t\/pk8WCs8klCLv8k8NhqFUXG5eKkNrKv96P9sDhJeGVjax8563zsS0xaPFUnLgKyNete7Lz\/318MNIvXZ1HeT4cEXJEwE9sTrLLjrffRhoR4S2i32uqYBDRGi4ghtrGJyMRzasdeaZcoYPF877VEMyNkkR38GCd+RQa1\/jL9aCy1BUK2ZQsfykWDOnpSaNnJ1FF\/s+wtVq8vVp6Df+egvH8OCbiiSECfXRBR7CK62YL4adIRRGyw4Scig1jVSmzbqldrz3H6HPEZwZa\/cd9bQHr9xLH0FgSJL\/1vFS0ELDi1kqlTa+vjJmAC+wls37VJe0Sa3PgIytlFgsYjfrYoaq+JUcuOhKyVKmi1J3qVz6165TnaIY4sMuKJndpTQqYfjSXDQeJbm0ONaSs6ZyxbKZhyjH5vAiZwDYHdAh6FpCY2e13WY30mFRH7kHAhSqNFTxM1IevZUzSNnSNFY6iNPdNPdixxDrcibKV5WjzlT++pocck+qJF44z93qepnr8+bwKPQGC3gEtkucnOvkkkCqNiKMHZI8ISvdE+NYnKvceUBU8EJRuEjrrlcdlhz\/naGDL9ZPmpXk2gxYR6tbLlD\/PQGl\/NFtE8\/M7can35uAk8A4HdAq6bHwE\/u+ixflQEuPHxpyZI0U\/EIoq10i\/xWKwfX9NPrKd+y6i5FGHVw8dWbp\/zROJlUfteP1rIWlGxUh8IcC09Qj\/4UpsH2ej5U47D703ABM4hsFt9JbIZsRxxNT5Kj7RTXUQTUWoVBIl6pXDRrhSj0s5WW4l\/jFSpV4owgof98njsg3M1H7L9YA8bNTuMm3OMl0Vhq2TmoeZP5LBl+1mOsVC25vJZxulxXEuAQKvUomyPuwQccSIyYyujzGzHtXqKHvfaRSQRphghqy\/EClg1gWFctN0632qryFhRNT7Uol+OM8atQr8IK+23ykg\/1N0aC8fpY2sBi31m5kH+SMRa4462n+E1fM4OXp6Bi8cwTkD35B4RTwu4xA3RRhi0ScjZU+do4cbA9lFbCDgihWCy8Rqh6UHi\/J62iDc3NH3RvtUPdeVX3GsBaDEc6acci3hk2GbnYcSf1rhmOqfFsbbQMhZYs1CesWGrV7j24r3Ye61rNXMt9Pp+lPOwli7t3WfuwStYo03YHS1pAR817Pom8IwEWBQRBxa4WkEUJaA8VfEesY8boqw62IrnWCA4pjoIU7aUfW+1YwzYlxDRTyvg2LLxqMcYByIstltP4vKdurBmjlQ\/I+BqfzZr5qHlr\/qNewt4pOHXJtAhoKezVjXqII6tCF3i2RNn6vGUli0Is8So1b\/syQ\/E41lKFHAEOlPEDVHOFrWB9xmssYGtrM\/4aQHPzpbrLU+AG4sbrHeTE6H3bmiJbC\/iIjrUZwyZCcAetvEhU\/aIXcbua9ZhwRPfET9o05u3aO8K1vjOopotFvAsKddbngA3Vy9iRtx7ohwfvYniWgUB79WJ7fEPIcpG7dGXkYUi9tl6jRiNiGLLVvYcixcMRp8qenNb9n8FawUJ2Tm3gJez4vcmsEFAj7e9HCni3ROsmHPt5Z4z9uQuthR59vxUmxiBXyHg+DOSEpBfe\/eaJ\/odHc9I5Hsla\/zILj4W8L1XitstRQAxQBR6gpsRAepgKxPxZW9kJmM0J0ubmG64QmjvFvC4II2O51FYa4HvXWvMnwV8KRnyYPcSQHR7eWVuuMyjL6LG1ku14Gs2kqYu9rDb8zMykC+ZhSe2y77G\/qiQZm1v1RMD+q2VWmTe+2wj2lM\/V7BWWisz9\/VRRm\/92gQWJqDH5WxeuYUKMZNoZsS+Zas8N5qTVaSHP720T9lX9v3dAi4GrWj6jMVK\/WSviRHWI9ebBTx7JbresgQUEdUitxEwSsUgbJlH5Kxt3fTYzURuSrcQQV4ZId8p4JFBba6Yy6zo1tjHfq5izQKRie4t4LVZ8nET+EOAmxQhGnnErsEjMsQWN+iZRYKM7VY0zRjkQ03kzvTrTgGPDMpFCdHlPKKYEd0Wg9jPVaw1Ry0\/OGcB7xHy+eUJKN9ZisIeMAgaGzbPLPIR26QIyk0RHccRbgTtjnKngEcG4ry1b4luhknsp+TM+zNY68Plnq8W8MyMuc7SBLI3Uw\/SHfnvVu63598V5+8UcIST\/rYYIITMYyYt0ePQ6qfXNntei0Tvqc8CniXqessS0OPs0aj1jvz3HWmRkQvhLgGPeekag7Pz37V+RvjU6upDT9I1rWIBb9HxORMI\/6z6KAwtBERwZ5aYkz0jzdPzLYrlVopi77FetNnyK8OAOmfmv69krcXeAt6adZ8zgQQBCe\/RCFzCxuPxmUWP29i\/q5CSQMB6Gz4hmr16R8UwwwA\/ejnlHr9MPz0bmfOKwHuL2n0znvHadUzgAQmckQNHoCTgvahqFMEdOdlRn1SfMR8VZ9lq7e9icFc\/Wigs4K1Z9zkTSBDI3kwtU3okRtCORvKxn5jOIGp7tHKHgN\/F4K5+mEMFDb3FzxH4o13x9ufhCPDojRAdiZyVhjk7\/02Ehm9svWjtNcDeIeDMyx0M7mSt66U3ZxbwHiGfX56Abtwj3zqQwBDNn1mUK8X+I5Y7BFxPSFczuJM1C31msX\/MWX\/EK9E+LUtAj8481u4pMf999FsQZf\/8cAThYv+I5Q4BV176agZ3sR653izgj3jV26eHI8DNu+dHIHzrQY\/DiNmZAq4nA+zSxyOWqwU8pk+uZHAna\/WVuVYs4I941dunhyOgx+fM19AQejbES6\/jPh7vfUhVguDm3rKNTW3UeZSCT6Nj7PmOaG8x0DHxJZI9Ul6Lta61jP8W8CMz7LbLEEC4EYZMVLQMlMRArxDwRLdTV+FpL\/s0YQGfeqrt\/J0EuKkyHyzd6dOj92UBH5shfV6SfYqygI\/xde2FCYzeXAuj+jt00gGZVMDfBou\/4IPykSDBAr74BePhjxHgK2vZx9sxy669OgGl6UY+M7CAr37VePxDBIgm+bAs+4g7ZNyVlyZAYDD6OwEL+NKXjAe\/hwAREiLu1MAeem6zRYAfie35HrsFfIumj5lAhwBfZdtzw3XM+vSCBHiaI++9JyCwgC94wXjI5xBAxI\/8vP4cL2xldgJ8cLlHvBm3BXz22bf\/JmACyxKwgC879R64CZjA7AQs4LPPoP03ARNYloAFfNmp98BNwARmJ2ABn30G7b8JmMCyBCzgy069B24CJjA7AQv47DNo\/03ABJYlYAFfduo9cBMwgdkJWMBnn0H7bwImsCwBC\/iyU++Bm4AJzE7AAj77DNp\/EzCBZQlYwJedeg\/cBExgdgIW8Nln0P6bgAksS8ACvuzUe+AmYAKzE7CAzz6D9t8ETGBZAhbwZafeAzcBE5idgAV89hm0\/yZgAssSsIAvO\/UeuAmYwOwELOCzz6D9NwETWJaABXzZqffATcAEZidgAZ99Bu2\/CZjAsgQs4MtOvQduAiYwOwEL+OwzaP9NwASWJWABX3bqPXATMIHZCfwHVVWtLv6qvbMAAAAASUVORK5CYII=)","43901880":"## **4.9 - Modelo KNeighbor**","eba5a0f5":"## **4.8 - Modelo SVC**\n","f798bfce":"## **4.1 - Dummy Classifier**\nO Dummy Classifier, foi o primeiro a ser escolhido j\u00e1 que \u00e9 usado para ter uma base de performance dos modelos e suas regras de classifica\u00e7\u00e3o s\u00e3o simples. N\u00e3o \u00e9 indicado para problemas reais.\nPor exemplo, ele pode chutar todos valores 0 ou 1 e com isso ter uma acur\u00e1cia alta mas isso n\u00e3o quer dizer que prediz alguma coisa. \n\n[What is the scikit-learn dummy classifier?](https:\/\/medium.com\/@mamonu\/what-is-the-scikit-learn-dummy-classifier-95549d9cd44)\n\n[Biblioteca](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.dummy.DummyClassifier.html)","2aec1ff2":"## **5.5 - Obtendo todas as m\u00e9tricas por meio do classification_report**\nEm vez de termos esse trabalho todo de calcularmos uma a um, a fun\u00e7\u00e3o classification report j\u00e1 retorna todos os valores.\nE com 3 linhas de c\u00f3digo podemos calcular para todos os modelos.","7b6b13ae":"## **3.2 - Selecionando as features**\n\nAlguns dados n\u00e3o ser\u00e3o importantes para a constru\u00e7\u00e3o do modelo como nem os notamos na An\u00e1lise Explorat\u00f3ria. Ent\u00e3o iremos exclu\u00ed-los. \n\nNo caso s\u00e3o: ['PassengerId', 'Name', 'Ticket', 'Cabin']","eba31b15":"## **4.7 - Modelo XGB Classifier**","44096386":"A **Fun\u00e7\u00e3o zip do Python** retorna uma lista de tuplas de acordo com a posi\u00e7\u00e3o. Por exemplo:\n>a = [1,2]\n\n>b = [4,5]\n\n> zip(a,b)\n\nRetorna:\n(1,4) \n(2,5)\n\nAqui no c\u00f3digo usamos para juntar em uma mesma tupla a classifica\u00e7\u00e3o, contagem e percentual e posteriormente imprimir em cada quadrado do gr\u00e1fico da matriz de confus\u00e3o..\n\n\n\n","fda443e3":"A **fun\u00e7\u00e3o flatten do pandas** retorna um array unidimensional.\nPor exemplo:\na = [ [1,2], [3,4] ]\n\na.flatten()\n\nretorna: \n[1,2,3,4]\n\nAqui n\u00f3s a usamos para transformar o retorno da confusion_matrix em uma lista para na sequ\u00eancia aplicarmos a fun\u00e7\u00e3o zip.","01ceac54":"Na idade e tarifa podemos completar os dados faltantes com a mediana ou a m\u00e9dia, optamos pela mediana, j\u00e1 no caso do local de embarque optamos pelo porto de maior frequ\u00eancia.\nNote que poder\u00edamos optar por excluir os dados faltantes em Fare e Embarked, uma vez que representam menos de 1% dos dados totais. J\u00e1 na vari\u00e1vel idade, os dados faltantes s\u00e3o representativos: 20%, e sua exclus\u00e3o poderia ocorrer perdas significativas de informa\u00e7\u00f5es.","6efa0cb4":"As rela\u00e7\u00f5es adquirem relev\u00e2ncia de acordo com o que se est\u00e1 querendo prever. \n\nPor exemplo, ao prever se um paciente est\u00e1 com alguma doen\u00e7a terminal em caso de n\u00e3o tratamento os **Falsos Negativos** s\u00e3o importantes, pois o paciente depende do tratamento para sobreviver mas o modelo retorna que ele n\u00e3o est\u00e1 doente, portanto com diagn\u00f3stico que pode levar a morte.\n\nNo caso do **Falso Positivo,** podemos citar uma empresa que quer saber o que manter em uma linha de produtos\/servi\u00e7os que trar\u00e3o lucros, o modelo prev\u00ea que o item ser\u00e1 lucrativo mas na verdade pode dar preju\u00edzo para a empresa.\n","79e418e5":"**Observamos que o modelo que obteve melhor score com os dados de Teste foi o *Gradient Boost Model* que obteve 78,23% de score**\n**Curiosamente, notamos que o score obtido no Kaggle est\u00e1 fora do intervalo, por uma pequena margem, da nossa valida\u00e7\u00e3o obtida pelo K-Fold cross-validation para os modelos Gradient Boosting e XGB Classifier**\n","d443872b":"**O modelo de Regress\u00e3o Linear definitivamente n\u00e3o \u00e9 bom para esse tipo de problema, vimos que com o Dummy Classifier obtemos um resutado melhor.**","0618a2f6":"## **5.3 - Recall**\n\nSemelhante a precis\u00e3o, o **Recall = Sensitivity = True Positive Rate = Hit Rate** calcula qual a propor\u00e7\u00e3o de positivos foi identificada corretamente.\n\n![image.png](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAT8AAABkCAYAAADwmDcrAAAP30lEQVR4Ae2dj7HVLBDFLcEaLMEaLMEaLMEaLMEaLMEaLMEabOF983vjed9KAiz5d3OTw0wmubDsLgc4LCQ+3704GQEjYARuiMC7G7bZTTYCRsAIvJj8PAiMgBG4JQImv1t2uxttBIyAyc9jwAgYgVsiYPK7Zbe70UbACJj8PAaMgBG4JQImv1t2uxttBIyAyc9jwAgYgVsiYPK7Zbe70UbACJj8PAaMgBG4JQImv1t2uxttBIyAyc9jwAgYgVsiYPK7Zbe70UbACJj8PAaMgBG4JQImv1t2uxttBIyAyc9jwAgYgVsiYPK7Zbe70UbACJj8PAaMwCACnz59evnw4cMmF7p66ePHjy\/v3r1LX8h\/\/vz55efPnz3Vty43+d26+934UQQgFBHR169fXwnm9+\/fL\/GC0CTz48ePf8p+\/fr1Qp5kINFsKm3P1fvz58+rfhEmdshzmiJg8pti4hwjUEXgy5cvLxALZFdLIp4esSlCq+kp8yFNkWrLvurJj0x0qTp3upv87tTbbutqBN6\/f98kPgyIoCDKViJy\/PbtW0vknzL0oRsfMun79+9vvhBxOv2LgMnvXzz8ywhUEWDb2SO0uDUlUmslyK8nE+sTSUJ+nOdlUvRlhGQzuq8gY\/K7Qi+6DYcgAPH1tpsQmiK\/3llbRp8ahi7pJaLLpBj5mfymiJn8ppg4xwjMIsAZWi\/pnK133oeekbO40fM+9BMhijC97Z32nMlviolzjMAEAb1FnRQUGSKb3vaYatkIDln0oTt73kcd+ZIh7aIZt\/hp8rtFN7uRRyBAdCXCGTnLy\/g2et4Xt9+9rXrG\/hVlTH5X7FW36SEIcK4m8uud9404OHrepy0yUaK3u3WkTX51bFxiBIYQWPLhcsaAyAxibUVxvN2VD37B0UfW5NfHyBJGIIWAor7MeV9K4V8hnfehn\/O78mJLTJRHPqS3ZdQ54uezyZr8nq3H7O8pETjivG\/k7fApQTqZUya\/k3WI3XlOBI447\/NWdtuxYfLbFk9ruykCOmvLfN83AlE87\/PLixHk+rImvz5GljACXQSOOO\/rOmGBIQRMfkNwWdgITBHwed8Uk2fIMfk9Qy\/Zx1MjcMR5Hx8tO22LgMlvWzyt7YYI7HXeF\/8qC89O2yJg8tsWT2u7IQJ7nffFf6J2Q1h3b7LJb3eIbeDKCMTzvpE\/VJDBhI+W9WFzRt4yYwiY\/MbwsrQReEOAf2qmLS8ktSX5xS2vP25+g3zTB5PfpnBa2dUR4J+RcUF2eo73mD\/6XR6EN6cbnbp89rfdCEuTn\/6kjjqhdqfzCNf5Q4pb\/1mf7Zq9ThMrPu2jncJl7uv7rNw6b1zbCBiBJQikyU\/K4xfnc6\/f+UfVrHj6x9iQw9VWK9oIDvFAeq6NWTlh67sRMALHIbCK\/Fp\/XocmRKLsyR7X5O0s0SZFwC2tWbmWDpcZASOwLQLD5KeIju1tJukMgy3i1ZL+g5jegXRW7mr4uD1G4MwIDJOfzriy\/31efBt2ZiCW+Kb\/IGbuvC\/qy8rFOn42AkZgXwSGyI8zLG3zsq\/1RZbUo\/6VkqLa3lu9rNyVsHFbjMDZERgiv9EzvEiWkOCVUvYcLyt3JWzcFiPwDAgMkZ+2b9nzvvgPvufehj4DQDUfs+d4WbmaHecbASOwDwJD5KftW+a8L0Y82S3yPk3cR6sWAp\/37YOvtRqBvRFIk98ImRHlQZRc2YiPLTLfzfGCBGLRhd1eoi4kRN1Yn216K+Gb6nDXfzyDTZ5bZ5RaCHze10LYZUbgvAikyU\/bN15clIQESZAH2UAinO\/1IqIIiT4WLuugE10tEsIviGjug2vyalEn5Eq9SF48k89nObSzRtz4pRc\/sR3lc1aurOffRsAI7I9AmvwgBU14RWW6iywoLwms1wTVjSQU62CjFsHpm8O5cpE1+sskm5BTmUTEtKVGutIN0bdSVq6lgzL8EPZb3mvk3vPH5UbgCgikyU\/bPMioliA+JmePFFQfOeRbhAlRzU1SkZS2qtKpe81fEWYtIoRI8WmONKUbDHp+I5uVk97WHaJmgdjyatlzmRG4OgIp8ovbtxppCCgRWo2UJKeoCJKqJWTmiBQCgHy4atEZJAapxnLVa9kUqXKvJRHrXOQY62TlYp1neRb+vv\/\/F1eMxfmwaM2nFPmJqOjc3oRX9NciGBwSMUSSgaggKOxx1hfLYiO0bW1FoVFez6pX04ucZOaiTcozBDoiJ9+e7e6Jfr6J7j6Z9klrXqXIT9u3zIfKEIs6oWZYBIIckR36uYgWIc8a8aAv1m3JlbZjPZ7nUjxbmysnT+TeI96sXM2O842AEdgXgRT5KUrrbWVxVZFTK\/KLkeRo80QqLf1zOlUPwq2lzHmftvW0oZWyci0dLjMCRmA\/BOpM8NdmPO+be6tauqaoDxKsJRFRS6ZWVy8s5s4Ca3XIz9STDP7VktoXt\/\/xXFH1snKSb91jRCq9W9xHIueWfy4zAs+IQJf8YpQ2N8ljo5lMmpStbaEirFECw5YIivtIytRThBu3xbEd2jqXUWeUwaes3Ij\/kC16t7xG7FvWCFwNgS75MbEhtMx5XyTK8qUCk1ZbRZFDJvJj0keik42YV+sU7EhO0Wbpl+rKJ9qqBNlHgpbtSHYQfhkpZuVkx3cjYASOR+D\/mV6xrUhOJFIRe82OBFISAoQRt4qQShlBlbohFuTKiJN6PTIu62KbtkTikj3KdFYZ9UJiXEoitUig6Cv9y8pJ71Xv+tzoqu1zux6DwNycW+LJhPwULWFA20BIg2fyIMFIYqVRkUgkS4iwJEN0oDPKSRc+YCuSjMq4Q2zUnStv1UWetkT\/0YUtEr6jVylGfeRBctSXz8JK8rpn5SR\/xTvEl4nsr9h2t2lfBJh3BCll0DFqdUJ+KIQQuDCiS3ncewmSwTnIgytGT2VdiAQZCIiLZ4iy1zDKl9TFl2gv+oZOylQeSVJ+gweTGl9FgiqL96xcrHOVZ9rOIjKHn9oIxoyRLS50tRL9xaKVvdS\/mbHesnu2MrCmX9Zccb7MtQ8bJc7k9ZICk+ib9My9aIUj6Kc1aUJ+a5S5rhFgAWEAzw1YoQOpaGAz6PkNUcYLQpMMumIZ5EqeZDKTC9ulXfkT7\/iPbhEmNsi7SqItEJiwbS3gyIK1iIk6PfITTtSTDe6ZhQR7sgX+6Ggl+qblf6suZSa\/HkIuH0JA0XirEjIM7lZkKPLpERtyOrZo2aQMUtOEbNmWHvnAJLtSiuTXIxi1W9hlSIw6yIvIwDyLIQTI4plJ9CG6s20odZr8SkT8ezECWu17E4TB3SMfkVRvZWeClefJtQagC73ZybWEJGq2z5TPYiF8R\/yiTq\/fpA+sGQ\/CnLoQWy8xdnp9HnXQFhapJcnktwQ115lFgIHYi9QygxsZTU4iiFaC\/Hoyqo9v6M1GitGPLMHKVubOpM2SSUZfVgbyB4dsNCa9vb6VHHcRkhZE7GUwHOlP7Eh\/dgxEH01+EQ0\/L0ZAW5DemRCrem\/Cx+1SL1rI6KNR6BGh9nwUCDHyy0xc1cve8YfJe2RSP2XJKPomQot5c89gHYmVetjLRNzU6\/V5aRP90V5ZXvtt8qsh4\/whBCAHBnhv4GYmkCZLJtLIDnoiA\/zj6pGvGh63h3uQFL7soVf+z90joY\/aHsE6LhbRJtF0K2XGR1lfi2Vv7JX1TH4lIv69CAEGbW9lZ3BmticiqczZTzaKQxd6ez7GxsuPJRMy6qk9P4L8hAO2aykSV5TpEZdksVESq7BsHTlQJ9PnsqO7jieyY0H16ghIwncj0EEAUmNwtwZ2R8VbMRNAEyVDlG8VOw+j532KJvAlGyl2XJgUo7skiYnQxhnCoRXFrSX7ufqRdGsRGqS7pM+Xjj+T38aD647qtPLWIoYRTNAh8qtNkhF9yGpyoDcTHWiLTJS4JzkdTX4Rh1pf0ZdrFjFszBFrXNRqtqm3tM8h9ZGonnFh8hudSZafIKAzney2aKIgZDABIIXMeV+o1nwUmaG3FcXhv+zXJmjT0GDh0eQXcShJHdKhHALJLBC1pqKjhp2izlrfzkWMNTtlvvqtzG\/9Nvm10HFZCgFtacoJlapcCEEIXEvOfgpVbz\/lH3qZYOWlqIF8Ju7S6OPNYPLhaPKLOAjnuXtrgeg1DRu1caBFEpvlQkmdNX2ul1Mjvpv8er3p8i4CSwbenFImgCYjEcRWSREH0cGZEm2tEcUefrZwgDTox9GtY+lnK3pjUVH\/lltrFp01fS5iL0m19C\/+NvlFNPy8CAFtOdZGTEwATY61utSQOOFq2zHJHn0\/kvwyOEAcJSmNYIKN3gKjhZK2xz6mXvw9YhdZvaAaIVCT3yjKlp8gIPKbFAxmSE\/tTGhQ3as4k0GEekSUFUlGdre4j0Q0czhlcEBmr\/M++RSj+7gYtSJG1W3dtXCa\/FoouWxzBERaa1ZunBJJrDn7KRun7RC6j0psIZnkvQufIJueHOVrUwYHfBk5Myt9wkbGV22\/tchRZ22fK\/IbWSSOGxElUv59GQS0lVkzcZgAIr+R1bsHoiYaBH22RHszZLGF30fgkI3eFKXRfsiK32v7XORu8ttitFhHGoElA69UHifE2ghSuuMWlMjgbOko8jsCB2xkF5joDwsn9chbk7QAjywmjvzWIO66rwjoE4Y1q7e2ztoKbQEtUYCiyZGIYAvbGR1HkR\/9sjcO2GAByyaRFX5t0ecaP1n7yJn8RtCy7CwCIpmRwV8q0uRce\/YT9eocCN1nTPg1EqksbYMi8z1xwMZIWzRm8GmLPodAR0n0nKNiaS+73kMQ0DaG1XxJYtIwCbjWvG0sbXMGhc7sWVRZf+\/f+DZCGEv9gRT2xoHvA0e3rvJrzY4BTJaOP5Pf0hHlev8gAMEs+UCWlyTasmxJfjGyQP8Z0xHkF7e8e+AAeWuRIfIfIUCd8655UUa\/qq9HF06T3xlnxRP6pC1mZiBDklxMfj3He8wfiYyYBHN60acLmbMkfBppX9ZvCG8OB+UJ3xGiKm1HUpU+YZw9\/sD+FlG5xt5oe0x+Za\/69yIEID0G\/+jqu8jYRSqB1x7kdxF40s2AQJdEtSa\/NMQW7CHAABw9dO7pvHK5yW9977J4gOOSiN7ktx5\/a\/iLwJqBeEcQ2a6NbtXuiFOrzbxkW7rgmvxayLpsGAE+W1iyBRk25Aq3R0BHLUuPDkx+tx9C2wJAJMPB+pJtyLaeWNvVEWCRXfONoMnv6iPkAe1jJYYAvaV7APg3Mckb5bVvik1+NxksRzeTTyHWDs6jfba950CAXQXnfGsXV5Pfc\/T3U3oJAWa\/+XrKBtrphyDAS461xIfjJr+HdJ+NGgEj8GgETH6P7gHbNwJG4CEImPweAruNGgEj8GgETH6P7gHbNwJG4CEImPweAruNGgEj8GgETH6P7gHbNwJG4CEI\/AfUGioGCIWqigAAAABJRU5ErkJggg==)","e18f3277":"## **4.4 - Modelo de Regress\u00e3o Linear**\n","ec9a4072":"# **5 - Matriz de Confus\u00e3o, Precis\u00e3o, Recall, e F1-Score**\n\nNesta se\u00e7\u00e3o calculamos e plotamos os gr\u00e1ficos da Matriz de Confus\u00e3o. As fun\u00e7\u00f5es zip e flatten  s\u00e3o brevemente explicadas, tamb\u00e9m indicamos um v\u00eddeo explicativo sobre o list conprehension.\nOs gr\u00e1ficos tamb\u00e9m poderiam ser plotados por meio de uma fun\u00e7\u00e3o. Optei por plotar as imagens lado a lado para facilitar a compara\u00e7\u00e3o dos resultados.\n","9e619fda":"## **4.5 - Gradient Boosting ClassiFier**\n\u00c9 um conjunto de modelos mais fracos que combinados conseguem fazer uma predi\u00e7\u00e3o mais robusta. Os artigos d\u00e3o uma ideia muito melhor do funcionamento desses algoritmos.\n\n[What\u2019s a gradient boosting classifier?](https:\/\/medium.com\/codestory\/gradient-boosting-classifier-f7a6834979d8)\n\n\n[Um tutorial completo sobre modelagem baseada em \u00e1rvores de decis\u00e3o (c\u00f3digos R e Python)](https:\/\/www.vooo.pro\/insights\/um-tutorial-completo-sobre-a-modelagem-baseada-em-tree-arvore-do-zero-em-r-python\/)\n\n[Biblioteca](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.GradientBoostingClassifier.html?highlight=gradient%20boost%20classifier#sklearn.ensemble.GradientBoostingClassifier)","a12f1206":"## **4.2 - Modelo de Regress\u00e3o Log\u00edstica**\n\u00c9 um modelo popular usado em problemas de classifica\u00e7\u00e3o cuja a vari\u00e1vel alvo \u00e9 categ\u00f3rica e tem dois poss\u00edveis resultados, p.e, 0 ou 1. No nosso caso, se sobreviveu (1) ou n\u00e3o sobreviveu (0).\n\n[Logistic Regression \u2014 Detailed Overview](https:\/\/towardsdatascience.com\/logistic-regression-detailed-overview-46c4da4303bc)\n\n[Biblioteca](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.linear_model.LogisticRegression.html?highlight=logistic%20regression#sklearn.linear_model.LogisticRegression)","a359bae6":"## **6.2 - Comparando com os resultados obtido no Kaggle**\nSubmeti v\u00e1rios modelos desenvolvidos no Kaggle e obtivemos os resultados da imagem.\n![image.png](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAApoAAAITCAYAAACns7zvAAAgAElEQVR4Aey9y09b197\/nz+DaYZn2GGnGSJGDCN5ZHUQIWUCI1Op6IiDosStQIQgxEU9CJKar0z7FBA8jo02BuNjXEx36tr+ATY1yMWI1CSWE2ef4Of909o3bxtfgJBLyduSD\/be6\/JZr+2jvvJZa+194\/\/+7\/\/ANxnwN8DfAH8D\/A3wN8DfAH8D\/A1c9W\/gBvgiARIgARIgARIgARIggfdAgKL5HqCySRIgARIgARIgARIgAYCiyV8BCZAACZAACZAACZDAeyHwaYmmkkMsXbj4QI8OkXpRung91iABEiABEiABEiCBT4CAopwviPOWq2xNgXJaecT8dqrgnF2bVS7y4WpFUw7jxkgUhxeJwFL2JBhEy8AWYpZjzT\/msTDpxZdzmeZFz1lifcaLdm\/unKVZjARIgARIgARIgAQuR0BJzqPvqza0tbXB1jGAwFHtdrKhcThsWjn7Ny7IL63lCth\/OgB7WxtcCetxBcmf+9TjbW023BkMIGueziI86oCtTbRpR487XkM4s5DuifMuxM16F\/vwSYnmxUJ\/f6Upmu+PLVsmARIgARIgARLQCShxuO52wZXQcoqF9WHYvvFYZFAv96cHPbZhBHS53F\/ogW0kDG0OOIdA\/x30uSXM\/qtSNJWEC3c7XYgXRTsFBB7Z0PNUU83cSh9s30paX8UkZr+xYVKuzG3mVh+g614fHO9NNEvPsfBYwj++W8at77y45d6DGmtV5vLQ68eNmT1APb6FabeElvte3HAGMLb7WqUk5K3bE4Pd6cWN+17YpT24x7TPLYObiLyBXl9kREtIrYbQKvodWMbNwTDWBc068VSIYSaBziEvWpziLaE39KJm\/+ZY9Gto\/VNur4SU14+bo1GkFKB6DGYbYtw\/RC3j0eO1NmqMSR\/\/zaHN+mMq7aHXKWFsT29A\/\/5wl8sDKpDyCwmQAAmQAAn8nQlsu2D72iqWcbhsDnj+rBxUdsmBuz8lgVMFhUKhahpcQeGlEMScmn20ZjSTMzY4lso5TCSM\/nIIfNuG8a2yWArxbJuQy1nN4wAefDUO+UBC33sTzcQmvhjcQkz4Tek5fHNb8ImUbiPRvL8MZ+ytqADrVLiQtC9+0ES1GAqi5X4A7uMSUDrE2JAXnSHF0u4BnP0SNLEqIRXawsPNHFAnnrIYHqlt3fY+165QJop20c9fmiS2TG3jRIzlRQId9y0iV3k9VaFs9z7XJHN4ExF92ajop2YbgocziAWxTrRUUKfyby1WLSBIP0Or04\/pjAjgLWJzElqEnNccUwmRH5dhtiGH0TL0DKmqOPmVBEiABEiABEjg70vgjNzVkEUxuviTNjgeDaOv0wHH112wf1Vrir1aNLXvVpnEsSGNcbjaqoQ24ULbPQnawsECwo\/sGA4VUK5zOc6Np87\/2kaH04vW7zcxHTzA4Rs9o9ZINActQlTaQ\/d9P6YPNdEz1z0eCgEMY12P2RRFs11t3eXNoSCc3m1EMrpx14nHrH8cw+37QfhEdlR95bEwoUmsWUY9nsP0iBe9sl6s6o8oe2vUjy\/vC3ksn6zbhhm3VtbM8Jar4lDy48bUtpYRthxHnTEhJiRfsCyp4tu6VGfRhrUtfiYBEiABEiABEvjbELiIaAoJNHKTudUBixQaw7060VS2xmH\/NqBJpymnRj8X+9tYNEVbSh6xZwmMTflx0+mHWyTqqsQq5bFMnV+JaIqO3+IklYZ7KYR2pxe3JX1zTo14TAGsI5odq3k9S2ls8Gkumi2jYfSOevHljL5cAFWyDEsbVTwuJJr1GOMQY4MSxnZFdlfLyl7s0rI0CZAACZAACZDAJ03gnFPnYgq8a2G\/PJQjIzNZPnR1U+dJzN5tg2PQhVn3LGb\/\/QB323ow7A6bomvttdnnhqJZjEbRvaSLVukIY8N6FjAaRkt\/CD4xVfwiDeeQt7xG876Y8rZMnfdvIlItac0ymvk0pmeeaWsYxdrGJU1k68Vjiia0qfMOv56GrJo6NzOqVkmsQchsr7CH7v5l9MrldaY126gnmqUXiG1mtOn6iqnzElKLEloe7+KkHmMAqSUJt0b8+GIshpMacfIQCZAACZAACZDA35iAImPSVrUZqHMWSZHnO4ojfqTP6CZntU096lI+BcmfrJuBjPFXZzQBRZ6ErWozUJdY6wkg+7TnzGYgdaocBezLMmTjvToJR9sA5uV9ffOR0d\/5\/jYUTbw5wMMRL272S9pmoMkEUvp6zfJGnjCm5ywZzZEtTM+IDURiM5AfD2M1JK2ZaEJBZEFkUI3NQEEsiLWNdeIxxVCMWWwGGhQxL+OmU0LnqrZes6LMeUUTQFEO40t9bWXdNuqJppphXcbDXRGY2OAUxC2nF1\/2e9EyGIJPrFGtMyb18gk5ve+FyMjyRQIkQAIkQAIkcP0IWG9v1GZZeymymOWd5Yp6+6I7xu2N7s0jqe7OtvI4K5qA9fZGbbD317u9kQ2OmVq3N8J7XqNpxP+mgGJ5Y5JxtPHfgiaYjQs1OVtScFIQ2dGqV9N4Sijmz9G\/KrzaznexE159v8N9QKuirP310mOq3RyPkgAJkAAJkAAJ\/P0JKIXzidalbtgudqufEVOdmVLAObu+FOTGGc1LNclKJEACJEACJEACJEACJMBnnfM3QAIkQAIkQAIkQAIk8J4IMKP5nsCyWRIgARIgARIgARL43AlQND\/3XwDHTwIkQAIkQAIkQALviQBF8z2BZbMkQAIkQAIkQAIk8LkToGh+7r8Ajp8ESIAESIAESIAE3hMBiuZ7AstmSYAESIAESIAESOBzJ9BcNJUTpH6TIf+Wwsl\/G+PK\/xFH9ny3gWrc0JWeVZD9I4sLh6Xk4FvahNO9hemo5YHnVxqbtbE81pcSSFkPic9Huxhzb8I5F0VE3OC93iudgFOU099jz67mJu+H\/hCc0QvTqxclj5MACZAACZAACXxGBJqIZh5xKYKMuMlnfgcrgXRDYctuerCjPh7pUyL4CjubO3h1oZDyWHgcwkJGUZ\/1vv6jH85YA8m7UNv1Cotnp4exbj39VwKdjxM4fFMCcmk4RzcRqReGHEZ3MI+TF\/pb1LmKV9Ob419FJ2yDBEiABEiABEjgOhJoLJrPZQT\/UHCqKFCU05rjz\/+xAd\/SHBZ9MiIBXTSLGUR8PqytrsAXSuMVTpEJrSGtJ8aUP9awkTkF8mls+FawFvAhmKzKwJ1pQ3SfRzrkw+LCInzPIlh7qguk2s4i5pYWEUycoDLSV9gJbyAaFvXmsPLbMU7rxWOO8ADOkS2ccctCBmOTEuzfB3F7YguRNwDkMG6NBnF7eBm3JqLw+UNoH1pG6+Q2DkV7chjm89EPo+j15tReirEt2IcktA4F9Md01hDNxCba5zJmVA0\/yGH0ylUlSs+x8IMfrYMSbv+gPz7UiHcoiIXjPfQO+tExKh7VmVMf39k9KuHWkB\/d+qM7D71+rd2Keq8RWwqidSKIjtEAHiaY8awiz68kQAIkQAIkQAJocsP204MgPFIE8l4GqV99WNmpksHTDDZWU3qWU0FK0kVTeYVX+jT7ye9rWpbzKIK1PSEkCtKBDQjPfLWzhuhf2nVQClU5xxptnGY2ENzXNbKYwooqmnnEl2Uc65dT9Bd\/ab22r7DzdA1pPZ789hpk8fjzGvFYaxV3o+gclmCfeoaFtJ6mVXI41Kevi8FgWcAWVaVEyuNH95bIJJaw\/oMfbhFULdF8s4vuqW1oT4PKwz0RRkR9\/npVRhOvEfOG0D4YQOfSNlIvGmQp5TBavy9PnS+kgdRSAA939TqxTXRIOU2MTXkVomkI9RHGvjc+lxD5MajGXyGaZr23OMzoywkK2+iY2bOi42cSIAESIAESIAESUAk0zmgebsCzbcilgtRqxBQ6tXZhBxvmecCcOs9nIP9nDSvL2lubTj+GvJ6CUkwh+Kuuhf89RnzVh0XfGqKHVVmxGm282olYpuaziKiimUUknC1fzqMIIkflr0DV1PlRBJ4dIbU14rFWMz4XjuCbkdAdVoDCAaYfB2EfC6BjTDJF08hYmlIGYH3Gj2nhn7VE8zAK+6Af9omA+r49LLKLNTKaRgx4i+LBLnqHQ\/CJLGqtV42M5vrMMtr1PuxjfrTOHVTGgz30ms9230Nvfzkm+4iEhzHAHJN1HHiNiDeEjrEA7JMBtFI0a10RHiMBEiABEiCBz55AY9F8Gcfa7yc6pMrMoXpQSWMtkNanqssZzexmeZr85PegKYfHvwYR\/S2oZRRFA0VFz4aeallOS8KuVhsio6llRUVdI6N5DPlpFGaUCV+5fTXIV9hZ1jKo4quyt2aK6Jl41PJihj6N6eUDPeMIYHcLnd4cDr1BPNzWgrRmNBuKZjSMdo9IoQIQWUUxdf4igY7Hu3r7JZz8JWT+rGgWo1FMm9PSJcTmgpq8GnFa\/9YQzcj\/+DGW1gsV8jgR6zYrhNEqmgdwjj4zNyMVcy9QLNURzcMoOozsJjOa1qvAzyRAAiRAAiRAAhYCjUUTpzj+bQUr\/5ER9C0iclS5+lG0k0+uwLcuYyOwgZWn2tS5ktmAb2UD8uYGgstl0cTLOOYW4jBypKdHEa1ceA0rm5mKjUa121CQ\/XUFi\/\/rwcpv5TWaFe38mq25RlPEIodXsLiSMvuvjqfM5TUic360ToTgnAmifXgT62L2PPUMt0dDcLpD6J0or11sKJpv0nAOiSn4ILrdIXSrazRLSEkBrf0pP1rdeyjWEE2RQX04KsE+s4nu7\/1oV8sBJ\/4AbroPyuGKTzVEE4U99A750ekOwT4UgDvTSDSBoph+F+ObEbHFkKonmqVDjI2KdjfR\/f8CaGdGs\/Ja8BsJkAAJkAAJkIBKoIlonpNSSWyvOcdLZEgThmZaylsymZajZz+WXiFvLOU8zSC4WrULvkk7p9VB1ovH6LmkoHhm9\/Zbscz0al6i\/fO09ea1ml28dKdvztOJ0frbGmM2zlX9Vd5WHeBXEiABEiABEiABEigTuBrRLLdX95OSkeFbjeK4yb046zagntB2nXuWFuFZ3kC6hrM2rl8+ezXxlNvjJxIgARIgARIgARIggUoCH0w0K7vlNxIgARIgARIgARIggetOgKJ53a8wx0cCJEACJEACJEACH4kARfMjgWe3JEACJEACJEACJHDdCVA0r\/sV5vhIgARIgARIgARI4CMRoGh+JPDslgRIgARIgARIgASuOwGK5nW\/whwfCZAACZAACZAACXwkAhTNjwSe3ZIACZAACZAACZDAdSdA0bzuV5jjIwESIAESIAESIIGPRICi+ZHAX4tuj5PYf3ktRsJBkAAJkAAJkAAJvAcCH140TxUULvJExPcw6PpNFrCfzNU\/fVVnioUre4rlVYV0vnYUKNbHeCpxuB5J+ADEzhceS5EACZAACZAACXxSBJqIZhyuNhfiZshZSN86MBzKAscS+mzDCFdktHKQ7vVBOjYrnPlQ+GUY9tFwY9FKuND2pNxruZE4XPfen9hknz7AbLLc2\/v5VEB4xI7xXxrbdvxJG1yJGhEI7jXZ1Ch7hYeyqwNwOBxwOLrQNRhAVm876e75AMyucCBsigRIgARIgARI4IMRuIBoFhB\/4sCDFV0xVNG0wf5twJLRai6a5xrZRxHNJGa\/mcV798xzAQA+KdH804Oe\/gAKeuzZ5T48WNXzmL9P4u5Pnwq1c8JlMRIgARIgARIggQ9C4JyiqWiSuWzksaBlNO9JCP9kkU9YRVPB\/tNyFqxnNKxlwawSeRTG+DddcHztgONRANKUng0VZUZcmL0nMmh3cOfePJJqAlBkNOchufvUOl2dfZjXTgDFfXgGHVpbnT0YF1lX8Uq40PdkFgMiG\/ezEKIsApZyk7KuT8lZ3J3Ss6hCoqckBB6J9rpwx+FCvFjveogxT0JaHdZi6nDAldCzlXViskpkNjSOnk4t7uFVCZN6xlaUGX4yiz7BpuMO+haSWha4IjYHur4ZR\/hIj+2lDNc\/tbasbOJP+uBya9difhtQErPoETy+7kJXv4Rs4+QqIJY7WMavbI2jb0UXzSMJfY\/CpoTWo8TjJEACJEACJEACnx+Bc4jmJKSVB7BVy4QQHlWKsvD86wEkVXYsopmcRc9U3Jwizy71YDhUUMVPmxYvINDfp9cDUJQxbrOI5j3JnJ7dXxDT9UIIxVR+Dzx\/6heqGMeknoVMurswvmUYUxbSPb2ckFZLW0I8HUuGMO8jHsqqklQIDZflSYzt7qQpl4X1AfRZJbvidyLGfBeTv+t9vwxg4F9a7GJa2TyOLDzfDCNcsGQrRVlLbELgbBbRLPe5j\/mvtbrakoVxyIb4CdFTs42CZxWbzknIitZfuS0R77h6XAyjkAwjfixiT2JeSK31PRq2ZKv1QZ8mMet4gICxPML8HVRA4RcSIAESIAESIAESwDlEsw1d\/\/Zg9ltDJnVqVsEQsqMKU1k0s0sODCzIkGX9vTCgrbs0MpqKjHFdyLQWFcgTFtG0rEPMrfTpEhiH62uPKaCiXnzKAc+fWXi+nrSsJQVEHXV61+jPuNjHATzo6MP40wDiB8ZksFbezNJZxybqVbdhtKX+LY9ZO2ysaxUxDWDeGL8sY35QW3dpZDTVzKBVYAUTi2iW12ha+hCxTcimwIsMrfSvcciFap5CMG1wbVvEVg1QQXLGAcfgLKRfksgZbg5AKRRQqHhbTqp1tTW6ZsZWHBPxVCyf0Cjwf0mABEiABEiABEjgHKKpC9yRhAfWKeQqGcuuPEDfkmxuBjojmkK4hNgZ0nZGNAsIP\/oAoimu+WkB+4kAPKM9uDOiTfuWZba8LMDcTW3EXPP3YpFA9Xx90RTSLW4HVFc0C2EMv3fR1AahHCcRXtGWFMyrSywL2LdIsfoPhO2cRWj15RPGGl2DRcIF2wzXaBo4+JcESIAESIAESKBM4ByiWd51LjJwdiObViWaambtWztsxvR31dS5kgwg8IdFNCHE0gHX73pW8UjCwFfnEM3qqXN9erh6mrpi6tySHS1seyAZ6zoRx6Sxq37bBbshTNVju5RoApUxKUiuB7BfMXUexrCQdx1BdmUA9vOIpq1q6vwbkeWtXooQx6Rl6tzMjp5mEX4qm1PiYmOPlsltJJoK4jM9GKiWTLHidakHk2J+ni8SIAESIAESIAESqCJwIdEELFmtahkTDYtpaUM0oSD5cx+61I0uXej6ZlZb82iVtmIS8\/0OdHV2YeDnJMJPziGaYjPQTE+NjTdJzN\/rQpdYY+hwYGC1vBmo4lZJx9oGpJ5Hw+oGIbOcImNSFbarymiKdaeWmDq70OPW1qwaGU2BTEnOY0BsyukcwHwybN6+yVoG1k1WgvuUBEnf0HSnYwABYzOQdXOVowez+qakyrYUJBfEdRnA8KMeOP6pX5eqH0bF120XbG12ja2xhlPfWOX59tPZqV8RM7+QAAmQAAmQAAl8dAJNRPMq4qvcsVzRYsF643I9I2dsMqkoWONLvZue1zte3cSZckKiH5Q3GlWXr7VZ5uv5890OSSlU3ujc0nbBevd6fXOQOWVvKVfro2KtaylQ77iliFDcip3klefO9005CFiyw+erw1IkQAIkQAIkQAKfD4EPIJr1YIqMZw8c\/fMIyGFIT\/rQ1W+9J2e9eu\/x+Ms4POv7lnWJ77Ev0bSSxPw\/HRj4OQD5Fwmue10YWD+vZr7n2Ng8CZAACZAACZAACbwjgY8omlrkyst9xGUZyaPPdZ2fgsJBHLKcRNa4ZdE7XlRWJwESIAESIAESIIFPgcBHF81PAQJjIAESIAESIAESIAESuHoCFM2rZ8oWSYAESIAESIAESIAEgGY3bCcjEiABEiABEiABEiABErgcAWY0L8eNtUiABEiABEiABEiABJoQoGg2AcTTJEACJEACJEACJEAClyNA0bwcN9YiARIgARIgARIgARJoQoCi2QQQT5MACZAACZAACZAACVyOAEXzctxYiwRIgARIgARIgARIoAkBimYTQDxNAiRAAiRAAiRAAiRwOQIUzctxYy0SIAESIAESIAESIIEmBG7kTk7ANxnwN8DfAH8D\/A3wN8DfAH8D\/A1c9W+AGc0mJs7TJEACJEACJEACJEAClyNA0bwcN9YiARIgARIgARIgARJoQoCi2QQQT5MACZAACZAACZAACVyOAEXzctxYiwRIgARIgARIgARIoAkBimYTQDxNAiRAAiRAAiRAAiRwOQIUzctxYy0SIAESIAESIAESIIEmBCiaTQDxNAmQAAmQAAmQAAmQwOUIUDQvx421SIAESIAESIAESIAEmhCgaDYBxNMkQAIkQAIkQAIkQAKXI0DRvBw31iIBEiABEiABEiABEmhC4NMSTSWHWLrQJOQap48OkXpRqnGCh0iABEiABEiABEjg0yegKB8rRgXKaZ2+TxW8a1hXK5pyGDdGojisE2+zwyfBIFoGthBrVrDifB4Lk158OZepOMovJEACJEACJEACJPCpE1CS8+j7qg1tbW2wdQwgcHQ24txKn3pelDHfT+JVBRXEp+6ira0P0rH1VAH7Twdgb2uDK2E9riD5c596vK3NhjuDHuwXjfNZhEcdsH11B3dsdvQ8kXGJNKDa2Cclmsbw+JcESIAESIAESIAErj0BJQ7X3S64ElresLA+DNs3HmQbDlyBPGFD30quopSy7ULXvT70VYhmDoH+O+hzS5j9V6VoKvIkbN\/MIqnKZQHhCRu6ft5X2xRia5sIa3J5moXnng2T8uVym41Fs\/QcC48l\/OO7Zdz6zotb7j2o8VRlLg+9ftyY2QPU41uYdktoue\/FDWcAY7uv1aDXZ7zo9sRgd3px474XdmkP7jHtc8vgJiJvoNcXGdESUqshtIp+B5ZxczCMdaHSdeIRbbd7deCZBDqHvGhxireE3tCLmv2bY6m4TNqXYmwLt79bxpeDy7jpDMCdKQGHUbTfD8In4hQv\/ftCQY9VH9fNoU0tVr2Y9qdOmVrjKe2h1ylhbE9vQP\/+cJdLAyqQ8gsJkAAJkAAJ\/N0JbLtg+9oqlnG4bA54\/mwwsD896LnrQtzqfUoSrs4eeP6Mw1UhmgoKL0XBHKR7VtEUstqG4VABUAooFAoVU+SFAxnJ43IH8ak2PFitFNsGEVacaiyaiU18MbiFmHCc0nP45rbgEyndRqJ5fxnO2FtRAdapcCGDX\/ygiWoxFETL\/QDcxyWgdIixIS86Q4ql3QM4+yVoclVCKrSFh5s5oE48ZdE8Utu67X2uDTIj5DAA91+AKNMytY0TMZYXCXTct8hcBZI8Fia86AhqglyMReGUMigir4qxGqfwTK8fLY93UUw\/Q6vTj2kho3iL2JyEFiHd1le9MjXHU0Lkx2XcWtQXIMhhtAw9Q8raHj+TAAmQAAmQAAn87QmoU+ITskXyqoWweoi1s5nJn7rQ9VMSQLVoGvWr29W+940Mo6fTAYfjDuwOF+Lm1LlRD8CRhD7bMMIvLccu8LGxaP61jQ6nF63fb2I6eIDDN3pWrZFoDlqkqLSH7vt+TB9qomdmHdVsYBjreqCmKJrtausubw4F4fRuI5LRrbpOPGb94xhuW7OO0KRRyKFZRu0zh+kRL3rlWqRKiMxJuPmdH51LCayn8mahE38AN6a2UYRWvzus4FDy68fMYmc+1C1TZzyICcEXHEtq3K1LNRZsnOmFB0iABEiABEiABP5OBC4smrWymeJYpwtJVZUuJpp3p+Km5CZn7sJWve7zKICBr8pT+5dh21g0RYtKHrFnCYxN+XHT6YdbJNpMIdS6THksU+dXIpqi3bc4SaXhXgqh3enFbUlP2daIx5TIOqLZsZq\/gGiKvksoZg6w4N2EfdCLL91pbcnAm210CpHNxGDv30REzKi\/i2jW44tDjA1KGNsVmV0tI6uR5v+SAAmQAAmQAAlcGwIXmjovIPyoem2mONaGO\/fGMeuexax7GD1td\/Hg3x7EK3bvnM1oBr5tw\/Av5elx\/D6JtnsSzAnylzImO99NMsV1aiiaxWgU3Uv6uszSEcaG9SxgNIyW\/hB84pZCL9JwDnnLazTviylvy9S5EDJcMKOZT2N65pm+1rGE1JImsvXiMUUT2tR5h19bl4mqqXMzo6pnJGtnNI+w8OMmFvb07O1myLKTXoHvsRftI3588eOB9juvmBYvIbUoaVPqpReIbWa0qfo6ZU7q8QWQWpJwS\/QzFsPJtfl\/FAdCAiRAAiRAAiRgElBkTNrKMqduBuqchZgEV47iiB9ZRDA5i67qtZlQkNuWIcvGex4DbQ5MriaRs1Q9u0YTKKwPwPathKx6a6MCAo\/Km4FQiMPV2YXJrQpbNcO+yIeGook3B3g44sXNfknbDDSZQEr4V+m5ZSNPGNNzlozmyBamZ8QGIrEZyI+HsfJmIFP0mk6dK4gsiAyqsRkoiAWxBrJOPGXRBCA2Aw2KmMVGHgmdq9p6zYoyDUUTOAwGcUv0rW4GKo9BgC2GQ2gR61DNWwSIjT6ivBdf9nvRMhiCT6w9VbOry3i4K2rVKVNnPOoFFHJ63wuRjeWLBEiABEiABEjgehKw3t6o7avy7Y2SMzbYRvSd36iVzazF47xT56JuAfKTHvP2Ro7RsLnbPf7Echsl45ZK1dPqtbqvcayxaBoV3hRQrDBj40SDvwVNMBuUaH6qpOCkILKjVa+m8ZRQzJ+jf1V4tZ3vYie8+jbvA\/oWxfwFBl0vVmvo9co0HY+1EX4mARIgARIgARK4bgSUwgWc40oH3+CG7VfQz\/lE8wo6YhMkQAIkQAIkQAIkQAKfFwGK5ud1vTlaEiABEiABEiABEvhgBCiaHww1OyIBEiABEiABEiCBz4sARfPzut4cLQmQAAmQAAmQAAl8MAIUzQ+Gmh2RAAmQAAmQAAmQwOdFgKL5eV1vjpYESIAESIAESIAEPhgBiuYHQ82OSIAESIAESIAESODzIkDR\/LyuN0dLAiRAAiRAAiRAAh+MQHPRVOXJRXgAACAASURBVE6Q+k2G\/FsKJ\/9tHFf+jziyH+t+o3VDU5D9I2s+NL5useoTSg6+pU043VuYjuqPtKwuc6Xf81hfSiBV3ebRLsbcm3DORRERTxyq90on4BTl9PfYs6t5otChPwRn9JO7qPUo8DgJkAAJkAAJkMAnRKCJaOYRlyLIFAHkd7ASSDcUtuymBzvv\/ljMK8bzCjubO3h1oVbzWHgcwkJGAZQ81n\/0wxlrIHkXarte4RymR8JYt57+K4HOxwkcvikBuTSco5uI1AtDDqM7mMfJC\/0t6lzFi08tugqKbIMESIAESIAEPksCjUXzuYzgHwpOFQWKoj51\/Qyk\/B8b8C3NYdEnIxLQRbOYQcTnw9rqCnyhNF7hFJnQGtJ6Ykz5Yw0bmVMgn8aGbwVrAR+CyaoM3Jk2RNd5pEM+LC4swvcsgrWnukCq7SxibmkRwcQJKiN9hZ3wBqJhUW8OK78d47RePOboDuAc2cIZtyxkMDYpwf59ELcnthB5A0AO49ZoELeHl3FrIgqfP4T2oWW0Tm7jULQnh2F9xnuvN6f2UoxtwT4koXUooD8PvoZoJjbRPpcxo2r4QQ6jV64qUXqOhR\/8aB2UcPsH\/Tn1RrxDQSwc76F30I+OUfFM+Jz6nPjuUQm3hvzo1p8Rf+j1a+1W1HuN2FIQrRNBdIwG8DDBjGcVeX4lARIgARIgARIA0FA0Tw+C8EgRyHsZpH71YWWnSgZPM9hYTelZTgUpSRdN5RVe6dPsJ7+vaVnOowjW9oSQKEgHNiA889XOGqJ\/addBKVTlHGu0cZrZQHBf18hiCiuqaOYRX5ZxrF9O0V\/8pfXavsLO0zWk9Xjy22uQnwOoEY+1VnE3is5hCfapZ1hI62laJYdDffq6GAyWBWxRVUqkPH50b4lMYgnrP\/jhFkHVEs03u+ie2oZIFAt5dk+EEUEN0cRrxLwhtA8G0Lm0jdSLBllKOYzW78tT5wtpILUUwMNdvU5sEx1SThNjU16FaBpCfYSx743PJUR+DKrxV4imWe8tDjP6coLCNjpm9qzo+JkESIAESIAESIAEVAINRROHG\/BsG3KpILUaMYVOrV3YwYZ5HjCnzvMZyP9Zw8qy9tam048hr6egFFMI\/qpr4X+PEV\/1YdG3huhhVVasRhuvdiKWqfksIqpoZhEJZ8uX8yiCyFH5K1A1dX4UgWdHSG2NeKzVjM+FI\/hmJHSHFaBwgOnHQdjHAugYk0zRNDKWppQBWJ\/xY1r4Zy3RPIzCPuiHfSKgvm8Pi+xiLdE0gniL4sEueodD8Iksaq1XjYzm+swy2vU+7GN+tM4dVMaDPfSORLXMq\/jcX47JPiLhYQwwx2QdB14j4g2hYywA+2QArRTNWleEx0iABEiABEjgsyfQWDRfxrH2+4kOqTJzqB5U0lgLpPWp6nJGM7tZniY\/+T1oyuHxr0FEfwtqGUXRQFHRs6GnWpbTkrCr1YbIaGpZUVHXyGgeQ34ahRllwlduXw3yFXaWtQyq+KrsrZkieiYetbxIMqYxvXygZxwB7G6h05vDoTeIh9takNaMZkPRjIbR7hEpVAAiqyimzl8k0PF4V2+\/hJO\/hMyfFc1iNIppc1q6hNhcUJNXI07r3xqiGfkfP8bSeqFCHidi3WaFMFpF8wDO0WfmZqRi7gWKpTqieRhFh5HdZEbTehX4mQRIgARIgARIwEKgsWjiFMe\/rWDlPzKCvkVEjipXP4p28skV+NZlbAQ2sPJUmzpXMhvwrWxA3txAcLksmngZx9xCHEaO9PQoopULr2FlM1Ox0ah2Gwqyv65g8X89WPmtvEazop1fszXXaIpY5PAKFldSZv\/V8ZS5vEZkzo\/WiRCcM0G0D29iXcyep57h9mgITncIvRPltYsNRfNNGs4hMQUfRLc7hG51jWYJKSmgtT\/lR6t7D8UaoikyqA9HJdhnNtH9vR\/tajngxB\/ATfdBOVzxqYZoorCH3iE\/Ot0h2IcCcGcaiSZQFNPvYnwzIrYYUvVEs3SIsVHR7ia6\/18A7cxoVl4LfiMBEiABEiABElAJNBHNc1Iqie0153iJDGnC0ExLeUsm03L07MfSK+SNpZynGQRXq3bBN2nntDrIevEYPZcUFM\/s3n4rlplezUu0f5623rxWs4uX7vTNeToxWn9bY8zGuaq\/ytuqA\/xKAiRAAiRAAiRAAmUCVyOa5fbqflIyMnyrURw3uRdn3QbUE9quc8\/SIjzLG0jXcNbG9ctnryaecnv8RAIkQAIkQAIkQAIkUEngg4lmZbf8RgIkQAIkQAIkQAIkcN0JUDSv+xXm+EiABEiABEiABEjgIxGgaH4k8OyWBEiABEiABEiABK47AYrmdb\/CHB8JkAAJkAAJkAAJfCQCFM2PBJ7dkgAJkAAJkAAJkMB1J0DRvO5XmOMjARIgARIgARIggY9EgKL5kcCzWxIgARIgARIgARK47gQ+nmi+3EdSf+T53w9yAdnt7JXdt\/3vN35GTAIkQAIkQAIkQALNCZxfNJWLPF3G0nHNR99k4fl2FklLMe2jgst2c7ap+vHW7ePUePb6mdbOxJVbGYbLfA752fI8QgIkQAIkQAIkQAKfO4Gmoqkk59HX2QXH1w44OnswHspCPINR\/ncXZqtN8U8PevoDEI8FF\/UedNxBl6jXcQd97rh6XAWenEXPT9bKWYQnenCnwwHH11244xiHdFBfFMsXrYD9pwOwt\/VBMrOjWQT67+COwxqvVkNJuODoEGPpQte9eSSLRksK4jMO3OkUdbrQ93OynK08CmCg4446\/q5vxhE+0uu8DGBAH6vRCv+SAAmQAAmQAAmQAAmUCTQWTUXGZKcLSfMZ4VlI93rg+RNAwgX7k3i5JQDZpz0YWC8ARxL6Ol2IC+NUXwXsL\/ShZ0lIKpD86S4mf9fOCGmNT3XhwbJ2Tj2aC2O8cxyyKYJGWevfHAKDPZj8JQ7PvbJoihj6zLaSmHUMI\/xSmK8YyyTiepuF0DAcuuwq8iS6puK6XBYQfuTQJToLzzd9kAy5TM7C8SisC3MW0r+GETbHaI2Nn0mABEiABEiABEiABBqLZiGM4a\/nsV+TUxKzQibNc1l4vh6HrADJGTtcCfOE9kFJQnoqsppC5MpiiFwAD+5JyFUVz8nzCAuh3Z7XsqkiM6q\/x0OitAJFlcYcJFM0hfxpMRjNZZf7MBwqAL9PwqGLrnYujsm72vR9fMqhybNR6fdJ3BUSKoR5Qi5nN1Epl\/Gpu2ezukYb\/EsCJEACJEACJEACnzmBxqIpspSrA7jT8QDjTwNIHlVOZyd\/6sKkMEvxSs6i699CyqziV4tu1fmEC21VmdGKWqcKCoVC5bsiDGt7cbjarPILVTD7VnLIrfRB\/C2\/hDSKstb6+lkhmCKmGrHFp8qSHH\/Sdlaoyx3wEwmQAAmQAAmQAAl81gSaiqZKRylgPxHA\/KMedPUHYE5yizWZqlwCSXeXLl01xK0CcdX5GjJXUfzlPmRZrngnj62maW3vQ4umDa7timj5hQRIgARIgARIgARIQCdwPtG04Eq671qyeGINo1hLmcTsN+Vd5I2nzvWpdUPQmk2dX0g0P+TUuRDcBwhYk6QWTvxIAiRAAiRAAiRAAp87gcaimZzF3XtSOYMp1ldOVO42F1PSA6PjlbvI620GeqrlQsXmG2NjUP3NQJPqes\/mF8ia0dQ2JJmbgU7rbwbKrdfbDJRD4DybgRQZ4994LGyaR8oSJEACJEACJEACJPA5EWgsmlDU2wd1idv+qLc36sID661\/BClxm5+2qs00zW5vpMTh+tYqaZe9vZEIoFI0gQ9zeyMhy8Nihz1fJEACJEACJEACJEACNQk0EU2jjrYhx7oy0jjT9G\/NG7YDhYQHgTP3yvy73LC9gPiyzGxm04vPAiRAAiRAAiRAAp8zgXOK5ueMiGMnARIgARIgARIgARK4DAGK5mWosQ4JkAAJkAAJkAAJkEBTAhTNpohYgARIgARIgARIgARI4DIEKJqXocY6JEACJEACJEACJEACTQlQNJsiYgESIAESIAESIAESIIHLEKBoXoYa65AACZAACZAACZAACTQlQNFsiogFSIAESIAESIAESIAELkOAonkZaqxDAiRAAiRAAiRAAiTQlABFsykiFiABEiABEiABEiABErgMAYrmZaixDgmQAAmQAAmQAAmQQFMCFM2miFiABEiABEiABEiABEjgMgQompehxjokQAIkQAIkQAIkQAJNCdzInZyAbzLgb4C\/Af4G+Bvgb4C\/Af4G+Bu46t8AM5pNXZwFSIAESIAESIAESIAELkOAonkZaqxDAiRAAiRAAiRAAiTQlABFsykiFiABEiABEiABEiABErgMAYrmZaixDgmQAAmQAAmQAAmQQFMCFM2miFiABEiABEiABEiABEjgMgQompehxjokQAIkQAIkQAIkQAJNCVA0myJiARIgARIgARIgARIggcsQoGhehhrrkAAJkAAJkAAJkAAJNCVA0WyKiAVIgARIgARIgARIgAQuQ4CieRlqrEMCJEACJEACJEACJNCUwKclmkoOsXShadBnChwdIvWidOYwD5AACZAACZAACZDA34GAorzfKC\/V\/qkC5fTd4rpa0ZTDuDESxeElYzoJBtEysIXYhernsTDpxZdzmQvVukzh9Rkv2r25y1RlHRIgARIgARIgARI4Q0BJzqPvqza0tbXB1jGAwNGZIsit9KnnRRnz\/SSuF4zDZT3e1oa+FcNVFCR\/7oO9zQ77V22w35tHsqhXO5bQV1XPlTD6ziI86oDtqy50fWWDYzSMrHHqgn8\/KdG8YOwfvDhF84MjZ4ckQAIkQAIkcH0JKHG47nbBldDSmYX1Ydi+8TSROgXyhK0sk4UwhttcMLTTCkuRJ2H7Zh77alZSQXzqLu7+lNSKJGdx954EQ0mt9XKrD9DWH9DPZSHda8Nw6BIzzgAai2bpORYeS\/jHd8u49Z0Xt9x7UEW4KnN56PXjxsweoB7fwrRbQst9L244Axjbfa3GLiSt2xOD3enFjfte2KU9uMe0zy2Dm4i8gV5fZERLSK2G0Cr6HVjGzcEw1sX46sRTIYCZBDqHvGhxireE3tCLmv2bY7GSVT\/nsTBRzlwWQ0HcHI0iVQLUfuai6B3U4r459gwxlXsJKSmAf6hjW0bHXBjt98NYF+0VDvBwdFnnsQy79PxMj7XL1Gagsp7a1q4DAPX7ZPn72cZ5hARIgARIgARI4JMksO2C7WurWMbhsjng+bNBtH960HPXhbgx1X4koe9rD\/aVAgqFQsOp7uySA7YZXTR\/n0TbhIxCUa9n6VIVzSlDXYXYtuHBai0ltVSq87GxaCY28cXgFmJi+WPpOXxzW\/CJlG4j0by\/DGfsragA61S4kLQvftBEVchby\/0A3McloHSIsSEvOkOKpd0DOPslPNxVO0YqtIWHmzmgTjxl0TxS27rt1WUuE0W76OcvTRJbprZxIpp8kUDHfQlje3WoHMZw2xmE73gPvf2inLb+U\/RzY2ATEXFxSwUsTOlT9ulnaHX6MZ0R5d4iteTHDVU0Ffgee\/HljC7oL7bRKcpVrC2oV6YOg79isN8PwifEHDlMj3jRHTZ+bXXGw8MkQAIkQAIkQAKfHAF1SnxCRvm\/4jk1e1iewq4OuSqbKU4nXGiz2dHlcMDhuAPbV2en37OhWcxO9KHr3iziL7U21b5td+D42gFHpx02hwtxY1pdyUJ65EDPo0lMDjrQ9SjQJMtaHWf5e2PR\/GsbHU4vWr\/fxHTwAIdvNOFqKJqDz5Ay2i\/tofu+JlZlGRRpOCGAesYPeqZQrH00BVZbd3lzKAindxuRjH4J6sRjtn0cw21TwkQQWnZSSKxZRo1NE7Re2Qi0+m8JqUUJN51efPk\/B+ZJ0catRYslboXUNamy5McNS5axPL40ep0NhFZtuV6ZOgyQVzPBqpgLjs6QLp1mmPxAAiRAAiRAAiTwNyBwYdGszmbqY1SKZVXNLvXA9m+rvIrJVRnyLx6MO+5gYLW82lIxxBKawPY81c4pCRccjmF4fpEhr89jwOEwp\/cvirWxaIrWlDxizxIYm\/LjptMPt\/AsUwi17lIey9T5lYimaPctTlJpuJdCaHd6cVvSU7Y14jElso5odqzmLyWaYvr9PKL5\/60GKkVTzaQKka4nkdbL1KhMbQYiIyzENuUP4IsfyyJsbZWfSYAESIAESIAEPnECF5o6LyD8yLI2s97QRIazztpL\/OmBw+aCPnle0YIqveoGoxwC37ZhfKssr8rWONq+NdZsVlRr+qWhaBajUXQv6dO+pSOMDXuhZgGjYbT0h+ATtxR6kYZzyFteo3lfTHlbps77NxGxZi1FSM0ymvk0pmeeaesyxXpNMRUtpp\/rxGOKJrSp8w6\/ti4TVVPn5R3jTTKa6tR5AAvpPXRXT50PbSEm2OtT51+IjKc6Hj8ebhdUMffNLNeeOi+IqXMJY2mgeJDG+oFYv1o1dW6UiddmoF7RN7vodvrRPiKWKehZ5qaXmgVIgARIgARIgAQ+KQKKjElb1WagzllVBJWjOOJHZdlDchZd1rWZ+kAKv4gNRMaGnwJkseHHralk9mkP2u55kNVvUZRdfmBuNtr\/uQu2iTDUrSanWXjutWFA3RBTQHjEhp6Ffb0HbRNRdZb0vBwbiibeHODhiBc3+yVtM9BkQt0UI9ZrljfyhDE9Z8lojmxhekZsIBKbgfx4GCtvBjJFr5loQkFkQWRQjc1AQSyI9Y914imLJgCxGWhQxLyMm04Jnavaes2KMvraxppT56UXcE+UM6jqetKR6s1Ay+rGn5sjW4jom4FOtjZhH1jGlwMBPPRvlZcGiM1AI160fKfVsS9l1I08EbcXLZPbOBFXqmaZOgzUK6vJ6Q1d4s97sVmOBEiABEiABEjg0yJgvb1Rm2V9ZXLGBtuILoJolM0sQH7SA7t6qyIb7gx6sG9OiWcRnjDOtcHmGEfYuH1ScR+ewTuwqfXs6Hkia9Ip8LyMY\/aeHW3q7Y2qbot0QXyNRdNo7E0Blul\/42jjvwVNMBsXanK2pOCkILKjVa+m8ZRQzJ+jf1V4tR3kYie8+j7XfUDfolgR11ucHOTMneDYe4ZbzrCayTUjLxRQbJZ8rFWmHgOzYX4gARIgARIgARL4uxNQCpbs5aUG0+jm6grq3rBd3JS9Xn+f3A3b6wV63Y8XDuAc9uLWRAhOdwj2QS9alyybhq77+Dk+EiABEiABEiABEqhB4HwZzRoVeaiKgMg8ptLwbaYR+6vuvw2qKvErCZAACZAACZAACVxfAhTN63ttOTISIAESIAESIAES+KgEKJofFT87JwESIAESIAESIIHrS4CieX2vLUdGAiRAAiRAAiRAAh+VAEXzo+Jn5yRAAiRAAiRAAiRwfQlQNK\/vteXISIAESIAESIAESOCjEqBoflT87JwESIAESIAESIAEri+B5qKpnCD1mwz5txRO\/tsYRP6POLKf3J19FGT\/yNa\/GWm9ISk5+JY24XRvYTqqP9KyXtkrOZ7H+lICqeq2jnYx5t6Ecy6KyHGDO76nE3CKcvp77Fm+uqVLfT\/0h+CMfnIX9VJjYSUSIAESIAESIIEPS6CJaOYRlyLIiEcZ5XewEkg3FLbspgc76iMZP+wgGvf2CjubO3jVuFDV2TwWHoewkFHUZ5ev\/+j\/AM8UF89fD2PdGslfCXQ+TuDwTQnIpeEc3USknmvKYXQH8zh5ob9Fnat4NX0K01V0wjZIgARIgARIgASuI4HGovlcRvAPBaeKeHSR\/kT2Kgr5PzbgW5rDok9GJKCLZjGDiM+HtdUV+EJpvMIpMqE1pPXEmPLHGjYyp0A+jQ3fCtYCPgSTVRm4M22IjvNIh3xYXFiE71kEa091gVTbWcTc0iKCiRNURvoKO+ENRMOi3hxWfjvGab14zLEdwDmyhVi1qxUyGJuUYP8+iNsTW4i8ASCHcWs0iNvDy7g1EYXPH0L70DJaJ7ehPhtIDsP6jPdeb07tpRjbgn1IQutQQH8efA3RTGyifS5jRtXwgxzGmWe3l55j4Qc\/Wgcl3P5Bf069Ee9QEAvHe+gd9KNjVDwTPqc+J757VMKtIT+69WfEH3r9WrsV9V4jthRE60QQHaMBPEww49nw2vAkCZAACZAACXymBBqK5ulBEB4pAnkvg9SvPqzsVMngaQYbqyk9y6kgJemiqbzCK32a\/eT3NS3LeRTB2p4QEgXpwAaEZ77aWUP0L428UqjKOdZo4zSzgeC+rpHFFFZU0cwjvizjWL+Aor\/4S+vVfIWdp2tI6\/Hkt9cgPwdQIx5rreJuFJ3DEuxTz7CQ1tO0Sg6H+vR1MRgsC9ii9rjJlMeP7i1hpyWs\/+CHWwRVSzTf7KJ7alt\/Nnoe7gnxXPQaoonXiHlDaB8MoHNpG6kX1eZriVgOo\/X78tT5QhpILQXwcFevE9tEh5TTxNiUVyGahlAfYex743MJkR+DavwVomnWe4vDjL6coLCNjpk9SyD8SAIkQAIkQAIkQAIagYaiicMNeLYNuVSQWo2YQqdWL+xgwzwPmFPn+Qzk\/6xhZVl7a9Ppx5DXU1CKKQR\/1bXwv8eIr\/qw6FtD9LAqK1ajjVc7EcvUfBYRVTSziISz5et5FEHkqPwVqJo6P4rAsyOktkY81mrG58IRfDMSusMKUDjA9OMg7GMBdIxJpmgaGUtTygCsz\/gxLfyzlmgeRmEf9MM+EVDft4dFdrGWaBpBvEXxYBe9wyH4RBa11qtGRnN9Zhnteh\/2MT9a5w4q48EeekeiWuZVfO4vx2QfkfAwBphjso4DrxHxhtAxFoB9MoBWimatK8JjJEACJEACJPDZE2gsmi\/jWPv9RIdUmTlUDypprAXS+lR1OaOZ3SxPk5\/8HjTl8PjXIKK\/BbWMomigqOjZ0FMty2lJ2NVqQ2Q0tayoqGtkNI8hP43CjDLhK7evBvkKO8taBlV8VfbWTBE9E49aXszQpzG9fKBnHAHsbqHTm8OhN4iH21qQ1oxmQ9GMhtHuESlUACKrKKbOXyTQ8XhXb7+Ek7+EzJ8VzWI0imlzWrqE2FxQk1cjTuvfGqIZ+R8\/xtJ6oUIeJ2LdZoUwWkXzAM7RZ+ZmpGLuBYqlOqJ5GEWHkd1kRtN6FfiZBEiABEiABEjAQqCxaOIUx7+tYOU\/MoK+RUSOKlc\/inbyyRX41mVsBDaw8lSbOlcyG\/CtbEDe3EBwuSyaeBnH3EIcRo709CiilQuvYWUzU7HRqHYbCrK\/rmDxfz1Y+a28RrOinV+zNddoiljk8AoWV1Jm\/9XxlLm8RmTOj9aJEJwzQbQPb2JdzJ6nnuH2aAhOdwi9E+W1iw1F800aziExBR9EtzuEbnWNZgkpKaC1P+VHq3sPxRqiKTKoD0cl2Gc20f29H+1qOeDEH8BN90E5XPGphmiisIfeIT863SHYhwJwZxqJJlAU0+9ifDMithhS9USzdIixUdHuJrr\/XwDtzGhWXgt+IwESIAESIAESUAk0Ec1zUiqJ7TXneIkMacLQTEt5SybTcvTsx9Ir5I2lnKcZBFerdsE3aee0Osh68Rg9lxQUz+zefiuWmV7NS7R\/nrbevFazi5fu9M15OjFaf1tjzMa5qr\/K26oD\/EoCJEACJEACJEACZQJXI5rl9up+UjIyfKtRHDe5F2fdBtQT2q5zz9IiPMsbSNdw1sb1y2evJp5ye\/xEAiRAAiRAAiRAAiRQSeCDiWZlt\/xGAiRAAiRAAiRAAiRw3QlQNK\/7Feb4SIAESIAESIAESOAjEaBofiTw7JYESIAESIAESIAErjsBiuZ1v8IcHwmQAAmQAAmQAAl8JAIUzY8Ent2SAAmQAAmQAAmQwHUnQNG87leY4yMBEiABEiABEiCBj0SAovmRwLNbEiABEiABEiABErjuBCia1\/0Kc3wkQAIkQAIkQAIk8JEIXI1onuvxNh9yhAqUizwM58KhKSgULZUKWcTlJHLiyUPFwpU9OMjSAz+SAAmQAAmQAAmQwN+OQEPRVLbGYZ+QLeKkID7VheH1nDrQwvY8HnTcQdfXDjg6u\/DAHYd4JLh45Vb6YOtwwKGeu4M79+eRtMqZXu5d\/ijHSSSPrUaZRXiiB3fUfrtwxzEO6UA\/n3Ch7Un8Xbor1\/1jHl2OeeyLI4UwhjsfYHYljqxSQHjEjvFfrDGVq\/ETCZAACZAACZAACXxOBBqKpniotzzRhcnfNXFStl1wfBuAqpl\/etDT6ULcMEsUEH\/ShZ6lrMpPiGbfiiak4oCQ1q6fklfKtrIPTYIfLGv9a0GEMd45DlkI7lWKpnUU2y7Yrkpgre3yMwmQAAmQAAmQAAn8zQk0EU0AL8MYdriQLCYx29kH6UgbcXLGDleiavRKEtKCrIpopQQCOJhHz4wumi9luP6pZTu7Ovswn9QzgMV9eAaNLGgPxkOGNGYRsByflAvA9jwcHTYtazoaRi4XwIN7kibBlrBy8jzCf1aKppKcR19nl5ZtdQwgoI9JScyixyH670JXv4SsGlaNvo8l9Im+ckJk7Wj7SrQ1DzG6+JM2k0thy1Vu756e0RV1J1yYFeMXcVti5UcSIAESIAESIAESuE4EmoummB0ODePOV3YzWwnkIN3rg3RcH4UQTcdUALIsI7wyi4F+F+IvRfkCAv098Aj5E69iHJOdk5AVIOnuwviWMe2chXRPL5dwwaFnSoF9xENZdYq+QmabZSzN8wXsrwbK0\/jJWXSpAizGNK7GIcIqJMOIi2n5Wn0boikKmu2qoymL5ssABu5JMFTZzOiKuncnEb\/iZQRa7\/xfEiABEiABEiABEvh0CFyRaCYxL9Zift0Fe5sLYiWkVTRlOQzPiAMPVrKAImP8X2UBEyjiT2xwbWfh+XpSrWvgEW08WM0BxwE86OjD+NMA4gfmXL3ahzk9XyV8RhvmX+v5UwXZpBDgecyO9uhT3wqSMw44Bmch\/6yR1AAAIABJREFU\/ZJEzvDdWn2fQzSFWBqiLWRbXp2EQ2RBrXXN4PiBBEiABEiABEiABK4fgeaiKabOOycRL5ydOp8UaUjrS0jk3Vl1Crki26iWEfVdSF5GNEX90wL2EwF4RntwZyR8NqN57qnzfcw7HBh+Gkb8IIfCnxL6LGssxQYjNQPrcGDeWFJa3bdVFq0Ca5k6PyOaQja3c1Csda3s+JkESIAESIAESIAErhmBJqIpNgPZzensxpuBFOwv9Jkbfs6IZkGsZxQSKqbOy2s9K6fOe8yNR0B56ryw7YFkrONEHJN61lRM6feZm3\/qbQbSpuXNKW6xS9ySUVV+GdZ2o59mEX6qrS8V1zi7rG1mqtm3VRbriCaqps5xJEOSRXZWX995zX5IHA4JkAAJkAAJkAAJVBNoKJoiK2d\/pGUPtYoNbm\/UcQc9T+TatzcSm2s6B8qbfo7CGP\/G2IzTg9mEnhktJjF\/r0u7XZLDgYFVfYXjsVa+59EwBqzHX8qYFO3824jxPLc3UhCf6UHXP4cx3O\/A8MykntFUkBSi3DmA4Uc9cPxzVltHWatvqyzWE00hq6Fx9HQam570TUfWutVXg99JgARIgARIgARI4BoRaCia5x7nJe+OrhSqpt6NDuvd9LzecaOe+fccN2xXCqjdfdXN2I02z923UaH8t+44y0X4iQRIgARIgARIgASuHYGrEc1rh4UDIgESIAESIAESIAESeFcCFM13Jcj6JEACJEACJEACJEACNQlQNGti4UESIAESIAESIAESIIF3JUDRfFeCrE8CJEACJEACJEACJFCTAEWzJhYeJAESIAESIAESIAESeFcCFM13Jcj6JEACJEACJEACJEACNQlQNGti4UESIAESIAESIAESIIF3JUDRfFeCrE8CJEACJEACJEACJFCTAEWzJhYeJAESIAESIAESIAESeFcCFM13Jcj6JEACJEACJEACJEACNQlQNGti4UESIAESIAESIAESIIF3JUDRfFeCrE8CJEACJEACJEACJFCTwI3cyQn4JgP+Bvgb4G+AvwH+Bvgb4G+Av4Gr\/g0wo1nTv3mQBEiABEiABEiABEjgXQlQNN+VIOuTAAmQAAmQAAmQAAnUJEDRrImFB0mABEiABEiABEiABN6VAEXzXQmyPgmQAAmQAAmQAAmQQE0CFM2aWHiQBEiABEiABEiABEjgXQlQNN+VIOuTAAmQAAmQAAmQAAnUJEDRrImFB0mABEiABEiABEiABN6VAEXzXQmyPgmQAAmQAAmQAAmQQE0CFM2aWHiQBEiABEiABEiABEjgXQlQNN+VIOuTAAmQAAmQAAmQAAnUJPBpiaaSQyxdqBlow4NHh0i9KDUscr1PllDMHMC3eYBD5XqPlKMjARIgARIggetIQLmC\/37Xb0OBcnoZapetV+7rakVTDuPGSBSH5fYv9OkkGETLwBZiF6qVx8KkF1\/OZS5U68MWzmF6xIte+T31mtjEl04J9qlniLx5T31AwWF0F7Hc+2qf7ZIACZAACZDA50dASc6j76s2tLW1wdYxgMDRWQa5lT71vChjvp\/EzYLZ0DgcNu2c\/RsX5JfGKQXJn\/tgV+vZcGcwgKx+Kv7E0pbebt+K8R\/56noe7BeNNi\/295MSzYuF\/ncq\/X5F89Drx42ZvfcM5P2O4T0Hz+ZJgARIgARI4NMjoMThutsFV0JLZxbWh2H7xmPKYO2AFcgTNphS+KcHPbZhBHS53F\/ogW0kDDE\/rCRcuNvpQlyVxAICj2zoeWqoprX1LDzf3DXjUORJ2L6ZRVKvF56woevnfWuFc39uLJql51h4LOEf3y3j1nde3HLvQe2zKnNpio56fAvTbgkt97244QxgbPe1Gsz6jBfdnhjsTi9u3PfCLu3BPaZ9bhnc1DJxZrslpFZDaBX9Dizj5mAY64JYnXhE2+1e3cIzCXQOedHiFG8JvaEXNfs3x1IL1WEU7fcD6JgU8YWxjteIzPlx07mML7\/z4h+jW1q8otxI5XjdGX0KPxOD\/TttfF9ObqHXzGjqY3N6cVO8h8LwHYs6QuT8eOgN45Zg5JTgDG2jd1Br4+ZYrGamWGUvWKtvEWuj9r2wTwZx877IrlaVG9lCRF21UJu9YKz14a0htRqff+jX9h8TMaTEkAoHeDi6jH\/0S\/jSKa75c6C0h16nhDHDi\/XvD3c\/56UPtX6EPEYCJEACJHDtCWy7YPvaKpZxuGwOeP5sMHIhlnddiOtT7dklB+7+lAROFRQKhYop8uSMDY4li1gmqvvT+lG2xmG7J0EzKSGybRgOFQCloLXZIJxmpxqLZmITXwxuISYcoPQcvrkt+ERK1xRCrfkK0by\/DGfsragA61S4EJUvftBEtRgKouV+AG4hWKVDjA150RlSLO0ewNkvQZOPElKhLTzczAF14imL5pHa1m3vcy2wjCaM7r8AUaZlahsnYiwvEui4b5GdakqqaEpwRvX1ose7eOiOIaZe1NfqVH3Hah7Qyz3cFeN9i9ichBtT2yiiKo70M7Srcgcg\/QytTj+mVSEtIeXx48ZYDCeqaHrR7hGxl5BalHCjP4yI6LOwjU6rnFXFa\/IXx5u03\/pjWmMgyvWH4FPXtmpxtDzeRRF12Ovx1Zr+L4ZDaBkw\/jFQwMKUJv4nqwHcmBQ8NOmcVhmWEPlxGbcW9QUWchgtQ8+QqhoTv5IACZAACZDAdSegTolPyNCdUU06Sffa4ErUG3lVNhOAmAJ3PBpGX6cDjq+7YP\/KmH7PQbQ1vlVuHccS+tpcKE+6i34qs5ki8SXq9Y0Mo0e06bgDu8PIitaLq\/7xxqL51zY6nF60fr+J6eABDt\/oWadGojlokYbSHrrv+zF9qImemXVUBU1k37SXKYpmu9q6y5tDQTi924hkdEh14jHrH8dw+34QPnOdYh4LE5rEmmXULptMA1fFp1U5xPpmAmPuEOwDega1upwR\/5k4nmN6WFujeSj5dRnVB69Kr4i5KiajrXPEaxXN87avlhN83Zva+wc\/vujfRAR12DcQzYjbWxZHfVjqn8QWbjmXcXvqGdzPDnFi\/NZj4h8w4ndSUv8B0LpUY0GKtR1+JgESIAESIIFrSODColmVzRRI1LWW9yRzuj23OoA2NTt5PtGszGaKFrV6d6fipgAnZ+7CZlkTepFL0Vg0RUtKHrFnCYxNialjP9wiEVUhQdCycmKNoDh+JaIpOn6Lk1Qa7qUQ2p1e3Jb0qfEa8ZgSeUbwNNEU2UezjEqnSuqqiVULpL7Zpte\/i\/VUDguPr1o0A1h4URVTBeOqc1XxNhfNs+2rojm2Bd\/mruV9iBO17Vrs68dQVzRFW2+eIxKMwjkhqVlPbbPSIcYGJYztiuxpACLjzBcJkAAJkAAJfHYELjR1XkD4kWVtpg5LTI93LVjWTx6Vs5bNp86TmO0sr83Umswh8G0bhn8xskMAfp\/U5fXiV6ihaBajUXQv6esyS0cY07NyiIbRYky7vkjDOaSv2xNydF9MeVumztUs2QUzmvk0pmeeaesyxTTykrbZpV48ZYnUpqw7\/Nq6TFRNnZsZ1QbZORVhlWiqUvaDvqhQn+pX26oqVxbwqqlzNQ5917k6ta0vGxBjq5o6N6emLyma2tT5OdqvmDoHivIzdHvTKNZhr60h9aIjqK25ReEI68+O1GnxiqlzvIZvyguRpUwFN+Fc1afIlV0zuy0Yp5Yk3Brx4wt12cDFf7isQQIkQAIkQAJ\/ewKKjElb1WagzlkkRZ7vKI74kUX2krPosqzNNMeenNU2\/Kir\/RQkf7JsBhKbeqo2A3WJ9Zz6qxAatqzNNI4ChfUB2L6VkFVviaRtIno\/m4HeHODhiBc3+yVtM9BkQtvkUXpu2cgTxvScvutZlaMtTM+IDURiQ4sfD2PlzUCm6FUJmimKplwpiCxom2+0zUBBLIg1jXXiMesLRmIz0KCIeRk3nRI6V7X1mhVlLiiaKOypm3L+MSDhy6EweiebZDQBFPei6sYnEceXY5tVm4GC6oafL\/u9aBnUx1Ydk8lCDKp+NlGctWY01fWdq+doX900JMppG65azI1bddiLfvwBdSPRF\/9zAPUfG84gFlSnr9wsdXPsGWLiB3+4rV4LlZvTi\/a5A229pghaiO59L9S1ruI7XyRAAiRAAiTwGRKw3t6ozVxfCYhspLF7HKidzdRwKdh\/OoA7xu2N7s3ru8XFWettitpg7y\/f3giolc00LkAB8pMe87ZIjtGwOTVvlDjv34YZTbORNwUULVJtHm\/0oaBnvhqVaXaupOCkILKjVa+m8ZRQzJ+jf1V4Lbupxc7tuvcBfYvii3O0WRHqWxRrxS\/K1BtbRf3KL6pQmjvMtbhNea8seoH236KYr3FxLxEflNc4MdbxWuMpFFDkpnIrEX4mARIgARIggQoCSqHGf4srSjT\/UveG7WJHurozt3kblSU+tRu2V0bHbyRAAiRAAiRAAiRAAp8xgfNlND9jQBw6CZAACZAACZAACZDA5QhQNC\/HjbVIgARIgARIgARIgASaEKBoNgHE0yRAAiRAAiRAAiRAApcjQNG8HDfWIgESIAESIAESIAESaEKAotkEEE+TAAmQAAmQAAmQAAlcjgBF83LcWIsESIAESIAESIAESKAJAYpmE0A8TQIkQAIkQAIkQAIkcDkCzUVTOUHqNxnybymc\/LdxJ\/k\/4si++\/1GG3dy4bMKsn9kzQfDn7u6koNvaRNO9xamo\/ojLc9d+TIF81hfSiBVXfVoF2PuTTjnoogcN7jreToBpyinv8ee5atbutT3Q38Izugnd1EvNRZWIgESIAESIAES+LAEmohmHnEpgoy4m3x+ByuBdENhy256sKM+a\/PDDqJxb6+ws7mDV40LVZ3NY+FxCAsZBVDyWP\/RD2esgeRV1b7cV\/GYyTDWrZX\/SqDzcQKH4mk7uTSco5uI1AtDDqM7mMfJC\/1d6wk91rbP+7npU5jO2xDLkQAJkAAJkAAJfG4EGovmcxnBPxScKgoURX2y+hk++T824Fuaw6JPRiSgi2Yxg4jPh7XVFfhCabzCKTKhNaT1xJjyxxo2MqdAPo0N3wrWAj4Ek1UZuDNtiK7zSId8WFxYhO9ZBGtPdYFU21nE3NIigokTVEb6CjvhDUTDot4cVn47xmm9eMzRHcA5soUzblnIYGxSgv37IG5PbCHyBoAcxq3RIG4PL+PWRBQ+fwjtQ8tondzGoWhPDsN8TORhFL3enNpLMbYF+5CE1qGA\/jz4GqKZ2ET7XMaMquEHOYxeuapE6TkWfvCjdVDC7R\/059Qb8Q4FsXAsnuHuR8eoeCZ8Tn1OfPeohFtDfnTrz4gXj71U262o9xqxpSBaJ4LoGA3gYYIZzyry\/EoCJEACJEACJACgoWieHgThkSKQ9zJI\/erDyk6VDJ5msLGa0rOcClKSLprKK7zSp9lPfl\/TspxHEaztCSFRkA5sQHjmq501RP\/SroNSqMo51mjjNLOB4L6ukcUUVlTRzCO+LONYv5yiv\/hL67V9hZ2na0jr8eS31yA\/B1AjHmut4m4UncMS7FPPsJDW07RKDof69HUxGCwL2KKqlEh5\/OjeEinHEtZ\/8MMtgqolmm920T21De2xo3m4J8KIoIZo4jVi3hDaBwPoXNpG6kW9dKbWT+v35anzhTSQWgrg4a5eJ7aJDimnibEpr0I0DaE+wtj3xucSIj8G1fgrRNOs9xaHGX05QWEbHTN7VnT8TAIkQAIkQAIkQAIqgYaiicMNeLYNuVSQWo2YQqfWLuxgwzwPmFPn+Qzk\/6xhZVl7a9Ppx5DXU1CKKQR\/1bXwv8eIr\/qw6FtD9LAqK1ajjVc7EcvUfBYRVTSziISz5ct5FEHkqPwVqJo6P4rAsyOktkY81mrG58IRfDMSusMKUDjA9OMg7GMBdIxJpmgaGUtTygCsz\/gxLfyzlmgeRmEf9MM+EVDft4dFdrGWaBpBvEXxYBe9wyH4RBa11qtGRnN9Zhnteh\/2MT9a5w4q48EeekeiWuZVfO4vx2QfkfAwBphjso4DrxHxhtAxFoB9MoBWimatK8JjJEACJEACJPDZE2gsmi\/jWPv9RIdUmTlUD\/7\/7L3NTxvJ+v49f0a2Wc5yltlmGbHKMhIrNNKDkLLBKxMp1igHRYlnFEQShHjRHATJmK\/MOWcAhePYqG0wPsaxmc4w2CIxBHgIRmRMgjpxeoJ1\/VT97sY2LwGSgcuSx91dVXfd9ake5eK+q7rVFUzHV4xUtR3RLKTtNPn2HwlLHG79lsD87wk9oigMlFQjGrqrRzkdAbtqNkREU4+KirZmRHML8tN5WF7mIrZ9zcn3eDGpR1DFqbo8bQnRPf5o9UWGfgVDk2tGxBHAyzm0hovYCCdwf1F30hnRrCs051O4GhIhVAAiqihS529zaHn00rBfxvafQszvFZql+XkMWWnpMhZGE7p4Nf10\/lYRmpn\/xNC7YlRSdrAt1m1WCEan0FyDv+e5tRmpVHyLUrmG0NyYR4sZ3WRE0zkLPCYBEiABEiABEnAQqC80sYut36OI\/k9GIvIEmc3K1Y\/Czk4+isiMjNn4LKJP9dS5uj6LSHQWcnoWiUlbaOJdFqPjWZgx0t3NjF4vNY1oer1io1F1GyoKv0Xx5L8hRH+312hW2PmtUHWNpvBFTkXxJLpk9e\/2x+byAZnRGK70J+EfTuBqVxozInu+9BzXepLwB5O41W+vXawrND+uwP9ApOATaAsm0aat0SxjSYrr9gdjuBJcRqmK0BQR1Ps9EpqG02j7OYarWj1gOxbHxeCa7a44qiI0oSzj1oMYWoNJND2II7heT2gCJTmFK2J8w8K3BSzVEprlDfT2CLtptP1fHFcZ0aycC56RAAmQAAmQAAloBPYRmgekVBbbaw7wERHSnCkzHfUdkUzH1b2H5ffYMZdy7q4jMeXaBb+PnV23k7X8MXsuqyjt2b39SSwzPZ6PsH8QWx8\/aNHFI3f68SCdmNY\/VRmzWeb6VT+5LvCUBEiABEiABEiABGwCxyM0bXs1j9R1GZGpeWzt8yzOmga0An3XeWjiCUKTs1ipolnrt7dLj8cf2x6PSIAESIAESIAESIAEKgmcmtCs7JZnJEACJEACJEACJEACZ50AheZZn2GOjwRIgARIgARIgAS+EAEKzS8Ent2SAAmQAAmQAAmQwFknQKF51meY4yMBEiABEiABEiCBL0SAQvMLgWe3JEACJEACJEACJHDWCVBonvUZ5vhIgARIgARIgARI4AsRoND8QuDZLQmQAAmQAAmQAAmcdQIUmmd9hjk+EiABEiABEiABEvhCBCg0vxB4dksCJEACJEACJEACZ50AheZJz\/CuCtX96svj7HNXheJ8w2QxDzlXgAIVSuk4O6ItEiABEiABEiABEjgcgX2EZhaBhiZ4bnjhveFFc4sPfcnC4XqoVXtLQvvjbK3So10XNhubNV+Fv9r31\/zRbO3bSkVxMY+iU+Q525TyGLvTjOZWL7zeZjTfHkH2nV4h+7gBgZyz8tGPlWddaOpJ6a9ffzUGz80+SDN5FMWxdwyrRzfNliRAAiRAAiRAAiTwWQQOIDQDsOVgAdJtH0KvP6tPvfFJCc3bEorH4N7+JoqQbrdD2qpWU3DyIPCHYhUqr8bQfjMEIdOPU2haHQAoTt1Fe\/R0Ru\/sl8ckQAIkQAIkQAIkUI3AIYUmUHjqM6JxBaR6fPB4RcTOC18wq0fVcgG0j0sYuW1E8u7FNXEFqMj\/2g6PiPDdaMdIdMyOaL6TEfhBj0B6WtsxltfDhNnH7Rh5GkD7DS88LT6E5lIYuOODt7UJnu7UXkEpxGs1oVlaRajTiHC2OqKywtfHI+gQYxCRz1r1NuN6HeHHzQHI74D8r140Nzai2etFX9Il7hYDaNoTrVWRj4aQVZxC08nEC2+nyaqAuMPfAVkXrGpuBD7h6w0PPPckFASmXAANoq\/FMXhbGtHY4oW3J4Wik0WtcbnHX+0O4TUSIAESIAESIAESOCKBwwlNJY+Rm0ZEc0uGNGem0RXE791FXOgtIXxuS4a4BPLB6xj4A0B+BL5BQ4wCKEz4dIEE0dYRJS1lMdA6AFnVBVnHjBEVXBuD94aZChZtqkQThbi6MYC4LEPWvnpqOx\/0oG\/OzHE7orJ7fPVh4A+7XuhmF1KaMPTaUdy1LFKvhU+1I5rFaHvdyKIV0VRWEZ\/J6wJdIAp6EFjUGXonTLaryCbFmkvRX5\/GRcy1kk8hu6XaQlN45OzXITTzwerjcs\/VEe8hNiMBEiABEiABEiCBqgQOIDSNNZreZjT+f+0YcaSD1XeryMpxhIID6Gg1hJ8ZYTO6M8VPYcKrC07TjdcheEUkTpXR9w9bmIri7ONGTXBZgkxcdAgnvc5BhWYBoRsDjvS\/LsjuThUrRBog6nVgzBKpMsY69bWUIiXdfLsPoZksVo11lsciNMVASgXk5RSkX0fQ90OjHi3eiuNuSzv6nsaRXTPT7yrywyLqOQLpmWNtqIO3yVqYtXnVHpcVDdUa8D8kQAIkQAIkQAIkcLwEDiA0zTWaClIPPQjk9Iif8qwPzT8EEJfzKCgq5MdfidDckzo\/utAUUVFLWApRPRNC3w\/N6HpWP6KJg6bOX43B6+1C6FkWq0UFhcl2e5PQroLVXByhHh+au1Ow5OZWHqmonu4fE\/ucjiA0rXE52h7vbUVrJEACJEACJEACJAAcQmgCeB2Cz9jQkv+3kRLXKK5i7EZ9oanKA\/DUTJ23Q9o0psOVOrd2Zx80orlHaIqUdGXq2NrQ5BJalfVU5GfiWFUU5J9KMJaNAn8MWCn\/1EOH3xV308E2AynJLrRPmilyFaluPYKqLIYgWR1mMdAQQHa3gNRT2VqXKkSptvHHMYbqEU33+M1xVYpU4X5xrWCl8SuGwxMSIAESIAESIAESOAKBwwlNqJD\/2YSupAKIDTKtHnQ87EL77REEuusLTbEZKDvsNR7340PAuRloM4W+mx79cUReH0aMqOmRUudVhCbEo4Zue\/THNHm96JgyxJ1DpGnsnPVaPdYGp+KzPvhafeh62AGvtwNxQxQr8gB8rV4MaBFOF\/2DPN6olEXgpge+h13ouNGFwKAR0dzSeWjXLX9V5MfFZqoOdD30wfvDCLLiOZmOMdQSmhXjd4zL2RbFOO42GOtsXUPhKQmQAAmQAAmQAAkchcA+QnN\/k2rF08L3rw9VqfkA80PbOkB3FVVK4jHmB\/jU8PFI\/h3gge2qUsOvqv5+xoPYa4zrAERYhQRIgARIgARIgAQOTeCzheahe2QDEiABEiABEiABEiCBc0GAQvNcTDMHSQIkQAIkQAIkQAKnT4BC8\/SZs0cSIAESIAESIAESOBcEKDTPxTRzkCRAAiRAAiRAAiRw+gQoNE+fOXskARIgARIgARIggXNBgELzXEwzB0kCJEACJEACJEACp0+AQvP0mbNHEiABEiABEiABEjgXBCg0z8U0c5AkQAIkQAIkQAIkcPoEKDRPnzl7JAESIAESIAESIIFzQYBC81xMMwdJAiRAAiRAAiRAAqdPgELz9JmzRxIgARIgARIgARI4FwQoNM\/FNHOQJEACJEACJEACJHD6BL4pbm+DXzLgPcB7gPcA7wHeA7wHeA\/wHjjue4ARzdMX9+yRBEiABEiABEiABM4FAQrNczHNHCQJkAAJkAAJkAAJnD4BCs3TZ84eSYAESIAESIAESOBcEKDQPBfTzEGSAAmQAAmQAAmQwOkToNA8febskQRIgARIgARIgATOBQEKzXMxzRwkCZAACZAACZAACZw+AQrN02fOHkmABEiABEiABEjgXBCg0DwX08xBkgAJkAAJkAAJkMDpE6DQPH3m7JEESIAESIAESIAEzgUBCs1zMc0cJAmQAAmQAAmQAAmcPoGvS2iqRSysKIensLmBpbflw7f7Ei2OOsZ6vqoqSn+T4dcbBstIgARIgARI4LwSUNUvNPJdFSfZ9fEKTTmFb7rnsXFEVtuJBC50zGHhUO13MD4QxqXR9UO1OtXKG\/O4eieFGQBHG6Pp7Q4W0ivY+GicK2u43x3GN\/4wLt4J4+roGkpmVf6SAAmQAAmQAAl89QTU\/Bjav29AQ0MDGls6EN\/c63Ix2q6VizrW93HWVVFFdvA6GhraIW25ilCtrIBUjxeNms0m+ILZSsG5W0RqUJRXs+e2X\/v8qxKatd38m5c4hObnjWQZt+7EMGQo+cx\/JvHdL8u6uFSW0XZvEv7c5\/XA1iRAAiRAAiRAAqdEQM0icN2DQE6PKSozXWi8GUKhbvcq5P5GtEeLFbXUxQA8t9vRXkUYVisT4rXxR0nvq5THyM1GDMhmbDOPkRYv+qJj6Kpir6LjfU7qC83yG4w\/kvDtT5O4\/FMYl4OGqHFFLjfCMXwzvAxo1+cwFJRw4Y6ItMXR+\/KD5sLMcBhtoQU0+cP45k4YTdIygr368YXONDIiSmfZLWNpKokrot+OSVzsTGFGZNRr+CNsXw0bwNdzaH0QxgW\/+Eq4lXxbtX9rLNUAKcvwPzB865qDf9CwrwnGOFoGRJmIUH5AZjSGi\/5JXPopjG975vRxoIwlKY5vtbFOomU0ZUU07TECqPA1hvsL1VnpvhYxJKKXgquIXoaL2F56icy6eVPsYLw\/jFuye0AGS4P7xQfp2izLy7jll9C7bNgwzu+\/ZF7eTZXnJEACJEACJPDZBBYDaLzhFJZZBBq9CL2uY\/l1CL7rAWTNf\/5FVTWPQKsPoddZBNzCsGpZEfEfG9A3ZxvRoqb9shHVVKC8E4ar2KvjWrWi+kIzl8Z3nXNYEDqj\/AaR0TlEREjXEoS6yQqheWcS\/oVPokFFmliIQTP6VkomcOFOHMGtMlDeQO+DMFqTqsPuGvz3JOgCp4yl5Bzup4tADX9sobmp2boWfqM7ti5S1nEE\/wREnQuDi9gWY3mbQ8sdh6CqIKMi8iiMS8OGqH77Em33nEKgXcvjAAAgAElEQVRTgn\/eWEe69RL3gwtY0Obpg5bCb5naAVae44o\/hqF10dknLE3EDGHqZCd8nURb2rAlfPUnEflYz9fKiKbT7ZKcwqWOlCF0HSUuXxZGJVwQfxRUZVlG5l+TuPzECJnKKVx48BxLDnM8JAESIAESIAESOB4CleJO2CxCut2AQM3sZPVoZv7fHnj+na8qDKuXCQHpErS5ABpuS6iMk5600PxzES3+MK78nMZQYg0bH43IVj2h2ekQJuVltBmpXlsMAnClkq0yy66+7vLigwT84UU7alfDH6v91gKu3UloYk2\/BfQonxCxVh2tQI8O7o3+icKVyqgedOGnRUxdfuumNjCTzqE3mERThy5IN6QYvhlctNdLaoJXX6NpiXTNVwktwTT82jeJa0bqu7avNYTmyjyuWcJWH7n53z2+mAU1WGJB\/HEh5rCsMbsyUWWxiGmDvyRAAiRAAiRAAkcmcGihWS2aKa61BpDXgl4uYViz7GsRmgKduoOF5zn0DooUcQxBEeyyBKHOdinkSJ0fi9AUdj9he2kFwYkkrvrDuCYZGruKP5YwqyE0RZTRqqO5XE9o6tFUK30sBNcvzoimIRiFnVwal0R6PvYSM0tFjD86rNCM437qJSJp+7tQdAjbPb5WEZrrQmRKuCXraXetieM\/NYWmqFOFJbCB3k4JvS8FBz0a7DDHQxIgARIgARIggeMicKjUuYLUQ\/faTHGtAc23+zASHMFIsAu+huu4+88Qskq9sv1S5+YAXcLVvHyI37qp89L8PNomjBRyeRO9XcYawPkULtxLIiIeKfR2RV\/PaK7RvCNS3o7U+b00Ms6ooHDOFRm0RKApYHdWMDT8XF9LKNY7itSzSGXX8MdqDz113hLT12XClTq31nGintAU0c9JfDeYw4ZaRmlZCLnqQlMTcb8YCxqNJQBaHxXp6jI0IW7sOrdFuit1riyjd3gemZ39hKa5pECs8RRrXif3iszyWyyk1\/VlAm5fnki48OgltmuwFNOzNCHhcncM3\/UuYPsQNxOrkgAJkAAJkAAJHIKAKmOg0bUZqHUEIgmubmaR3bTXUCI\/Ao97bSZUFBdlyLL5HUNHgxcDU3kU1XplQOGpb89moK6k+xGTJyw08VF\/fM7Fe5K+GWgghyVjvaa9kSeFoVFHRLN7DkPDYgOR2AxUucHFEnr7CU2oyIzrm2z0zUAJjIv1jjX8sYWmscGmM4yL9yZx0S+hdUpfr1lRp67QBKCsY+hRDJfuTeLqoxyGakU0lWXc6gzj2w4Jlx6kcGvAEKRQsRSKa48cEjaagnU2A2ntJ7WNQ00T61q6vbavKjLGRiszSmtuDjJ\/NcZaZHcS91+Km11sBkrgsj+MS\/fCuNCZRESsja3BUvvfQ4jTO2Fo600P8f8Lq5IACZAACZAACRyOgPPxRg3f2483yg83orE7BV36VYtmVuunnjB0lzkfb9QI77Dr8UaaeXeban3Wv1Y3omk1\/aig5BDV1vV6B0r1VG69JnvKyiq2FREddX329aeM0s4B+tcEr72TWxNr4jmgH99gQ4gx7aMiMuhI3btcESn+0tsafakfDsZNUU7+getHZrlnwLxAAiRAAiRAAiRwzARU5bBC65gcUBWcZNcHE5rHNJa\/hxk9AnjJH0Or2KQj1qZ2JBH58+\/hPb0kARIgARIgARIgga+FAIVmrZlQNpERm3RymweLStayw+skQAIkQAIkQAIkcE4JUGie04nnsEmABEiABEiABEjgpAlQaJ40YdonARIgARIgARIggXNKgELznE48h00CJEACJEACJEACJ02AQvOkCdM+CZAACZAACZAACZxTAhSa53TiOWwSIAESIAESIAESOGkC+wtNdRtLv8uQf1\/C9l\/13dl5lUXhCz0GqrZnKgqvCji0W2oRkQnxHvI5DM0bbxqq3ckxlOxgZiKHJbelzZfoFY9ZGp1Hxnq2p7uSeEV7znhnuv7u9N7nO1UqHf7SRiwJ\/\/yh6R2+I7YgARIgARIgARI4cwT2EZo7yEoZrJcA7LxANL5SV7AV0iG8cL+96Isje48X6Rd4fyg\/djD+KInxdVV7H\/jMv2LwL5gPcD+UoUNUFq\/FdLxHXbT8M4fWRzlsfCwDxRX4e9LI1HJDTqEtsYPtt8ZXtDmOz74Pxz+OTmiDBEiABEiABEjgLBKoLzTfyEi8UrGrqlDV3arj33k1i8jEKJ5EZGTihtAsrSMTiWB6KopIcgXvsYv15DRWjMCY+moas+u7wM4KZiNRTMcjSORdEbg9NkT3O1hJRvBk\/AkizzOYfmoISM3OE4xOPEEit41KT9\/jRWoW8ynRbhTR37ewW8sfa4Rr8HfPYY+2VNbROyCh6ecErvXPIfMREO8uv9yTwLWuSVzun0cklsTVB5O4MrCIDWFPTsH56s1b4aLWS2lhDk0PJFx5EMf9BfFmoSpCM5fG1dF1y6u6B3IKt2RXjfIbjP8Sw5VOCdd+MV4favr7IIHxLfEKzRhaesSrOovAeg5tPRIuP4ihzXh150Y4ptutaPcBCxMJXOlPoKUnjvs5Rjxd5HlKAiRAAiRAAiQAoK7Q3F1LICRlIC+vY+m3CKIvXGJwdx2zU0tGlFPFkmQITfU93htp9u0\/pvUo52YG08tCkKhYic9C6Mz3L6Yxb7xxR1VcMccqNnbXZ5FYNWRkaQlRTWjuIDspY8uYTtFf9p1zbt\/jxdNprBj+7CxOQxavP6\/ij7NV6eU8WrskNA0+x\/iKEaZVi9arKUuJhC3AnmiSEkuhGNrmRCSxjJlfYggKp6oJzY8v0Ta4qL3XXIjnYH8KmWpCEx+wEE7iamccrROLWHpbJ0opp3DlZz1t7g+mMb4CLE3Ecf+l0WYhjRapqAtjS7wKoWkK6k30\/mwel5H5V0Lzv0JoWu0+YWPdWE6gLKJleNmJjsckQAIkQAIkQAIkoBGoKzSxMYvQoikuVSxNZSxBp7VWXmDWKges1PnOOuT\/TSM6qX\/1dPoW5JklqKUlJH4zZOFfW8hORfAkMo35DVdUrIqN9y8yjtR8ARlNaBaQSRXs6dzMILNpnwKu1PlmBqEXQtRW8cfZzDxWNhEZltCWUgFlDUOPEmjqjaOlV7KEphmxtEQZgJnhGIaE\/qwmNDfm0dQZQ1N\/XPte6xLRxSoRTdMH8T71tZe41ZVERERRq32qRDRnhidx1eijqTeGK6Nrlf5gGbfEu901e8u4dc\/2qalbwv0FwBqTcxz4gEw4iZbeOJoG4rhCoVltRniNBEiABEiABM49gfpC810W039sG5AqI4faRXUF0\/EVI1VtRzQLaTtNvv1HwhKHW78lMP97Qo8oCgMl1YiG7upRTkfArpoNEdHUo6KirRnR3IL8dB6Wl7mIbV9z8j1eTOoRVHGqLk9bQnSPP1p9kaFfwdDkmhFxBPByDq3hIjbCCdxf1J10RjTrCs35FK6GRAgVgIgqitT52xxaHr007Jex\/acQ83uFZml+HkNWWrqMhdGELl5NP52\/VYRm5j8x9K4YlZQdbIt1mxWC0Sk01+DveW5tRioV36JUriE0N+bRYkY3GdF0zgKPSYAESIAESIAEHATqC03sYuv3KKL\/k5GIPEFms3L1o7Czk48iMiNjNj6L6FM9da6uzyISnYWcnkVi0haaeJfF6HgWZox0dzOj10tNI5per9hoVN2GisJvUTz5bwjR3+01mhV2fitUXaMpfJFTUTyJLln9u\/2xuXxAZjSGK\/1J+IcTuNqVxozIni89x7WeJPzBJG7122sX6wrNjyvwPxAp+ATagkm0aWs0y1iS4rr9wRiuBJdRqiI0RQT1fo+EpuE02n6O4apWD9iOxXExuGa7K46qCE0oy7j1IIbWYBJND+IIrtcTmkBJpN\/F+IaFbwtYqiU0yxvo7RF202j7vziuMqJZORc8IwESIAESIAES0AjsIzQPSKksttcc4CMipDlTZjrqOyKZjqt7D8vvsWMu5dxdR2LKtQt+Hzu7bidr+WP2XFZR2rN7+5NYZno8H2H\/ILY+ftCii0fu9ONBOjGtf6oyZrPM9at+cl3gKQmQAAmQAAmQAAnYBI5HaNr2ah6p6zIiU\/PY2udZnDUNaAX6rvPQxBOEJmexUkWz1m9vlx6PP7Y9HpEACZAACZAACZAACVQSODWhWdktz0iABEiABEiABEiABM46AQrNsz7DHB8JkAAJkAAJkAAJfCECFJpfCDy7JQESIAESIAESIIGzToBC86zPMMdHAiRAAiRAAiRAAl+IAIXmFwLPbkmABEiABEiABEjgrBOg0DzrM8zxkQAJkAAJkAAJkMAXIkCh+YXAs1sSIAESIAESIAESOOsEKDTP+gxzfCRAAiRAAiRAAiTwhQhQaH4h8OyWBEiABEiABEiABM46gUMITRXqYd5keEByqnICRg\/Y92lUUw\/0jsmje1LJT0EhJyNfBFBSju1NmUf37oy13FXJ9IxNKYdDAiRAAiRwsgT2F5q7BcT7fWhu8cJ7wwPPzT5Ia58pDrcktD\/OAljFWKsXY2tHGaSK4mIexWquCPuNzfDe0H1ubrmLsXy1ikfp12jzbhXymlLTQCHZB1+L7oOnxYu+6KouUoRvtyUILfj5Hyc\/BaluD+7+W0L2dRGp7ib0PTvmMX++w0eykH3cDmnrSE2hbuWR3zI5FCHdPootBfKgDx6vF95WD9p\/zVNwHm062IoESIAESOCcEdhHaKqQ+5twd7JgY9mUcPf7Psgl+9KhjyyheeiWjgZ1RINbzJVk9LWOIO9o\/dmHuQAaNLG815L6xwA8P0oo7Bplu0Wk+j3om1MBt297mx\/xSh6BxgCEfD9rn88RmsVoO9qjpqyvc8\/UgaYkuxz\/D4j\/JzwYOdabqU7nLCIBEiABEiCBvzGB+kKzGMfdKtG3ojyG+CsVyAXQ\/ngEHSLS86v4l7eAVI8R+fF64QtmjciPivyv7fC0ighjO0aiY0ZE0\/kPv4rVpx3wClteD3w9KWjyVvQxLmHktrjejOZ7ce16\/lcvmhsb0ez1oi9pCgljJvaIuVWM3QzoQrO0ilCn8ENEp3zoS5oiukb\/UJEN+nS\/Wj3omCxALabQ19qEhu898N4YcwnYIuI\/VomabckYE305fdtMoe+msCHG5sNITo+8qbkR+AQHEUG+J6GgXS4g7vB7QBbRVJNfEakeD5oamuC54cXYIpB93IBATuehzAVse7fHkNf+SBBt+xAQY7vRh5QLYdV7Wvg+GELonj4X3v4U5IkO+G540fy9z4gaO+faC2+nPl94HYLPupcKCP3jLqTNqr0ATi4P45AGTZ415kjzS0L8oT6vntYOxIXtxTF4WxrRKKLxPSkUDV4Dw10acy3S\/Gy\/gStIPexCSgFURYFyxpd61JgRXiYBEiABEiCBIxGoLzTrRO203kT5bUkXhOLClgxpzhRuCuL37iIu\/h3Pj8A3aIpOoDDhM6KBplCqXqcrqWhi1tlHPngdA3+Izhxt3UMXwuPGAOKyDPmZhJF7HQj8oae580Ejsqi1KUC67UPotd6\/p1+2UqKFyXb4nhrC0LquIP8sq6fra7LJItBQJ7LoEJpFWYJsiq13cXT8GDfEUB9kI9ur5FPIitRvLgDvhMl2FdlkAUoFg8p+LaEp7DrmSJ3rg+ff4o8CwU+wNNPKbohVzoXv183IsIpUdwO6zPR8fgTXRYRXWUV8xk4tC96BRd1WYaJdi+oWpzrQETXH4u5H3DfttggV0ehGQ2hWuY+0e0T41dil32vC3KaE9psh7b7cG9F0jLmUQpc5HiFKtaUWxh8hN8w\/YPIYud6FQLAdHf0j6LvjgW\/Yvpfd3vOcBEiABEiABEjAJnAooVlM9un\/GLc06unIKmJLfbeKrBxHKDiAjlZdIBQmvIY4NDp+HYJXSzvbYlHU6RiXIQtxKL7jHboYdfVhCwe7rT0c48gpNGUZqadd8IpUNgoI3RioSC8Le3enitjjo7AhhJ+aR8DrRUdQQipftISoEH7VU+eVgq+qb1ZkT4WyloU8E8LIYAc82nUV+WERCRyB9MyxBnUrjrst7eh7GkfWWhvqZFDZryk0hbD0DsZtrlMD8Gr9ONvu8bL6BcHE8r0yaqpFas2lBKUC8nIK0q8j6Puh0YqsAnmM\/ODRlxUYPYjItCXwRNRRldH3D8cfLxCpavs+qnqPuPzSRbT+R459v4gO3WN2MNtVoWgRSxG1NL6aBhd1HOJURLgHPY4xVUfFqyRAAiRAAiRAAkB9oSlS50ZkyAlLiDIr2miKCwDKsz40\/xBAXM6joKiQjU0ce0TcQYSmEJtCULkEnS0c3KLB4eEe4QHokbUjCE3NrIpiPgUpKFL7Rqrc5Zfd+0FT5wpSPc3wDcch5wtQSjICDhEnNrGkovqyhDFzPeCugtVcHKEeH5q7UweKaO4RmoLrohDMdfjZg6k8cnE1xaxWSZSJe+HVGLzeLoSeZbFaVCAiw2YKXxOa3iY0aaK\/0rR1dhihad4jLr+OJDTF5i5hz\/HVNxEVIP3DTN3rXtr3oOU1D0iABEiABEiABKoQqC80tWiSazPQO7E+sQupd9gjAvP\/FpEfs5dVjN3Q\/4FW5QF4Dpk6V\/NxxF\/VE5pi7ZwjxWp2K373CA9F24wjNnDkgz5HurgydV6R3jdT569TCMnmOj6H6BCp4sHqW29qbQYaEPlwyzeRknVEV9fG9EjjbgGpp7K1K10INbGZRVkMQbJ2zmcxoKXnnWLREZ2DI9roSp1jU4akjcfZ1gmvzrHlu16nmtAUG2farc1jenrdFJoidd6VLKIweRd3a6bOCwjddMxrndS5dY8IvxqNe1K45kidV\/rjHrODWU2hCRSetqNrxnEP\/MjNQHXuEhaRAAmQAAmQgEVgH6EJwPV4o+aWDoTMxxu5o3qbcXSIDTMPu9B+ewSBbjMSpCI77EWz2Azk9SFQYzOQvWFIPEZpBFmxacXVhzOapMgD8LV6MfDM9ZghTXiYjzfywiN8Mh9JU8pj7LZH2zQjNh51TJlrBWtsYlGN+ve60PWDc4PTKkLCzu0QVi2c9sFBHm9UmOqA2LjS9bAd7cEAuszU+bjYOCWu++D9weCwpW8c8j3s0jZf6X47hZNDNDmFptiiJR61pG3EEiyMjTJ1I5rCrrG+1h6SQyTrF6sJTZSyCNz0QPPzRhcCg0ZE09gMpNPebzNQHB3Go6G8nVLFZqCq94iY738MIODYDCS9NtaevpMxIDZc\/dMdARZjqGTmHGrlsdiI5dEfb9TSzMcbVcLhGQmQAAmQAAnUJLC\/0HQ0PegD2ysfIu40oEA1H\/njuFx5qEL5nEcnVRqrfVbrgeZirV61\/THqQXzf292+D2wX\/VUdb43rtfze2\/WeKzXnZU\/NPAJVlkzsqVbngtihXQ1jnSZ7imr762LjiLTWbrPH\/OEv8IHth2fGFiRAAiRAAueawKGE5rkmdZ4GvymhQ9uZ\/jcZtENo\/k08ppskQAIkQAIkcC4IUGiei2k+64MUO8Y\/N3561hlxfCRAAiRAAiRw+gQoNE+fOXskARIgARIgARIggXNBgELzXEwzB0kCJEACJEACJEACp0+AQvP0mbNHEiABEiABEiABEjgXBCg0z8U0c5AkQAIkQAIkQAIkcPoEKDRPnzl7JAESIAESIAESIIFzQYBC81xMMwdJAiRAAiRAAiRAAqdPgELz9JmzRxIgARIgARIgARI4FwQoNM\/FNHOQJEACJEACJEACJHD6BCg0T585eyQBEiABEiABEiCBc0GAQvNcTDMHSQIkQAIkQAIkQAKnT+Cb4vY2+CUD3gO8B3gP8B7gPcB7gPcA74HjvgcY0Tx9cc8eSYAESIAESIAESOBcEKDQPBfTzEGSAAmQAAmQAAmQwOkToNA8febskQRIgARIgARIgATOBQEKzXMxzRwkCZAACZAACZAACZw+AQrN02fOHkmABEiABEiABEjgXBCg0DwX08xBkgAJkAAJkAAJkMDpE6DQPH3m7JEESIAESIAESIAEzgUBCs1zMc0cJAmQAAmQAAmQAAmcPgEKzdNnzh5JgARIgARIgARI4FwQoNA8F9PMQZIACZAACZAACZDA6RP4uoSmWsTCinJ4CpsbWHpbPny7L9HiqGP8Er6yTxIgARIgARIggVMhoKqf242K2jZUqLs17O+qqNm1Wqeshjn35eMVmnIK33TPY8PdywHPtxMJXOiYw8IB6+vVdjA+EMal0fVDtTrVyhvzuHonhRkARxuj6e0OFtIr2PhonvOXBEiABEiABEjg70xAzY+h\/fsGNDQ0oLGlA\/HNvaMpRtu1clHH+j7OGhVV5H9tR1NjMzwtjWi6PYZ8ybRhlzV\/34jmzhBWrbICUj1eNH7fjObGJvgey7BCfaU8xm43GX01of3XfG0xanZV4\/erEpo1fPz7X3YIzc8bzDJu3Ylh6KhK\/vM6Z2sSIAESIAESIIHjJKBmEbjuQSCnxxSVmS403gyhULcPFXJ\/I9qjRb3WYgCN1wPIaxFLFdnB67j+77xelgug8eYYVrUyBfLgdfie6taFeG3sT+nicreA0O1GDMi6H\/ngdXgeZ6uW1XWtSmF9oVl+g\/FHEr79aRKXfwrjcnAZmhB2RS43wjF8M7wMaNfnMBSUcOFOGN\/44+h9+UHrdmY4jLbQApr8YXxzJ4wmaRnBXv34QmcaGRGls+yWsTSVxBXRb8ckLnamMCNkdg1\/hO2rYQP4eg6tD8K44BdfCbeSb6v2b42lChQoy\/A\/MHzrmoN\/0LCvCcY4WgZEmYhQfkBmNIaL\/klc+imMb3vm9HGgjCUpjm+1sU6iZTRlRTTtMQKo8DWG+wvVWem+FjHUrfsk+FnjNf1X1nC\/Z9LgPokm6Y1WUlqYw7WfJnGpcxIX\/XEE18uANo4EImZk1Dgft\/6UMY3ylwRIgARIgARI4MQICJF4wyksswg0ehF6XafH1yH4rgeQNfPdwsY\/JEucFia8aBzWhaa6lYe8Zv\/jXphst8qUNRn5LdMIkB1swN0poaWKkG43IJCzfdAiqv3ykaKa9YVmLo3vOuewIJY\/lt8gMjqHiAjpWoJQd6JCaN6ZhH\/hk2hQkSYWYvC7X3ShWkomcOFOHMGtMlDeQO+DMFqTqsPuGvz3JNx\/qXWMpeQc7qeLQA1\/bKG5qdm6FtZFFtZFyjqO4J+AqHNhcBHbwuTbHFruSOhdtiHaRyoij8K4NGyI6rcv0XbPKTQl+OeNSdt6ifvBBSxo8\/RBS+G3TO0AK89xxR\/DkBB1+ISliZghTJ3shK+TaEsbtoSv\/qQm\/mr7Wiui6fZ5Ea2i\/40djPeH0ZLQBWxpYR5+aR0l7GgiX2MOQMzfhUcv9T8ibBA8IgESIAESIAESOEECewXcXpFX2b0rmqkVKsg+9qH5Th9G+tvRdHPEkTp3tC5lMXDdgxEj2OkoATYltDd2IfVOXFUh\/7MRvgkzrlqA9GMjGm5LMEJ6FU33O6kvNP9cRIs\/jCs\/pzGUWMPGRyGcnGJJP60Qmp3PsaRfBsrLaDNSvbYYFMrGXrMoqlplloDV111efJCAP7yIzLqhuGv4Y7XfWsC1O45IHXShJQSVVUfzTY8O3pJNR52\/K7jlrxShVluX37qpDcykc+gNJtHUoQvSDSmGbwYXbeGmCV59jaYl0jVfJbQE0\/Br3ySu3ZuEP+fgscfXWkJzr8\/6iMrIjEq4+FMMrRM5zCztWAPdjsUNH3UWbSn7rxqrEg9IgARIgARIgAROjMChhaY7mik824yjo8WHwIwM+ZmEgR+a0TFlikTD9VIWAW8T7kZd183239vpe63FZgpdrY1o9nrhbfUh8LgLDT\/GT0Boit7UHSw8z6F3UKSIYwiK9YGWINQHsBRypM6PRWgKu5+wvbSC4EQSV\/1hXJMMHV3FH0sI1hCaIspo1dFcric09WiqHe0sY+YXZ0TTEIzCTi6NSyI9H3uJmaUixh8dVmjGcT\/1EpG0\/V0oHqfQFE6WUVpfw3g4jabOMC4FV3QB\/HERrUKUry+g6V4aGeNvCA0P\/0MCJEACJEACJHDyBA6VOleQeuhYm2l4lx9uhNeKPgJ4HYK3MQArcFlaRejHGiLznYyBVpfItEatQlEUbbe6SLlb6z6t8oMd1I1olubn0TZhpJDLm+jtCkOLAs6ncOFeEhHxSKG3K\/p6RnON5h2R8nakzoWIcUYthV+uyKAlAk0Bu7OCoeHn+rpMsd5RpJ5FKruGP1Z76Knzlpi+LtOdOrfXNdYTmiL6OYnvBnPYUMsoLc\/jmr+60NQil78Y+XdjCYDWR0XqvAxNiBu7zm2R7kqdK8voHZ5HZmc\/oWkuKQBKayuYWRNpcVfqXBGpcwm9K5sY\/1ca48uGikwnHU8F0Ntc7Y7hu3+tHexuYS0SIAESIAESIIHjI6DKGGi0hZ62Gah1RBOJ6mYW2U1HtjE\/Ao9zbabhxeqvHntTDwAhChvMDUW7Iu3dhLsTq3vXVypZBFo9GJiz13CaA8s+bsT1QWMXulGvasrdbFDnt67QxMc13O8O4+I9Sd8MNJDDktAs5TeOjTwpDI06IprdcxgaFhuIxGagyg0ultDbT2hCRWZc32SjbwZKYFysd6zhjy00jQ02ncJnsflFQuuUvl6zog7qCU0AyjqGHsVw6d4krj7KYahWRFNZxq3OML7tkHDpQQq3BgxBChVLoTgu3glrNpqCdTYDae0ntY1DTRNi\/WQ9oakiY2y0ElHaTDCMCwOL2BYTLDYDdYdx4adKWxuJBC77J3FZ2wxkz4doUkolcUGsqXUs+K1zr7CIBEiABEiABEjgmAk4H2\/U8L39eCMRqWzsNnaFo3o0U3OltApJPKbIeLxRo7cPKeMRSVpq3vlIJHFsrLXMPnY8KsmsYz4yyfl4o0Yv+pJVUu4H5FBfaJpGPiooOUS1ebnur6JvQKlbZ7\/CsoptRURHXZ99\/SmjtHOA\/jXBa+\/kFj4ZLLoAACAASURBVLu5teeAfnyDDbFRSfuoiAw6UvcuV0SKv\/S2Rl\/qh4NxUxSUzO722D\/khaq2PqG0c9gJPGS\/rE4CJEACJEACJHBkAqryuf9O13tg+xHdqv0E+AMbPJjQPLC5s1BRPFopgUv+GFrFJh2xNrUjicifZ2FsHAMJkAAJkAAJkAAJnB4BCs1arJVNZMQmndzmwaKStezwOgmQAAmQAAmQAAmcUwIUmud04jlsEiABEiABEiABEjhpAhSaJ02Y9kmABEiABEiABEjgnBKg0DynE89hkwAJkAAJkAAJkMBJE6DQPGnCtE8CJEACJEACJEAC55QAheY5nXgOmwRIgARIgARIgAROmgCF5kkTpn0SIAESIAESIAESOKcE9hea6jaWfpch\/76E7b\/qU9p5lUXhc583Wr+LI5SqKLwq7H310n6W1CIiE2n4g3MYmjdeablfm88q38HMRA5LbhubL9Ernuc5Oo+M9RB5dyUAKzn4RT3j2\/t8p0qlw1\/aiCXhn\/\/qJvXwA2ELEiABEiABEiCBUyewj9DcQVbKYF28F3HnBaLxlbqCrZAO4cXeV2ae+qAqO3yPF+kXeF95cZ+zHYw\/SmJ8XQXUHcz8Kwb\/wnG9uqdW1+K1mCnMOIv\/zKH1UQ4bH8tAcQX+njQytdyQU2hL7GD7rfEVbY7js+9bmI6jE9ogARIgARIgARI4iwTqC803MhKvVOyq4rVGu1XHv\/NqFpGJUTyJyMjEDaFZWkcmEsH0VBSR5AreYxfryWmsGIEx9dU0Ztd3gZ0VzEaimI5HkMi7InB7bIjud7CSjODJ+BNEnmcw\/dQQkJqdJxideIJEbhuVnr7Hi9Qs5lOi3Siiv29ht5Y\/1gjX4O+ewx5tqayjd0BC088JXOufQ+YjADmFyz0JXOuaxOX+eURiSVx9MIkrA4vYEPbkFJzveL8VLmq9lBbm0PRAwpUHcdxfEK+wrCI0c2lcHV23vKp7IKdwS3bVKL\/B+C8xXOmUcO0X4z31pr8PEhjfEu9qj6GlR7wTvgis59DWI+HygxjajHfEb4Rjut2Kdh+wMJHAlf4EWnriuJ9jxNNFnqckQAIkQAIkQAIA6grN3bUEQlIG8vI6ln6LIPrCJQZ31zE7tWREOVUsSYbQVN\/jvZFm3\/5jWo9ybmYwvSwEiYqV+CyEznz\/YhrzxqsdVcUVc6xiY3d9FolVQ0aWlhDVhOYOspMytozpFP1l3znn9j1ePJ3GiuHPzuI05DcAqvjjbFV6OY\/WLglNg88xvmKEadWi9Q70UiJhC7AnmqTEUiiGtjkRSSxj5pcYgsKpakLz40u0DS5CBIqFeA72p5CpJjTxAQvhJK52xtE6sYilt3WilHIKV362U+fjK8DSRBz3XxptFtJokYq6MLbEqxCapqDeRO\/P5nEZmX8lNP8rhKbV7hM21o3lBMoiWoaXneh4TAIkQAIkQAIkQAIagbpCExuzCC2a4lLF0lTGEnRaa+UFZq1ywEqd76xD\/t80opP6V0+nb0GeWYJaWkLiN0MW\/rWF7FQETyLTmN9wRcWq2Hj\/IuNIzReQ0YRmAZlUwZ7OzQwym\/Yp4Eqdb2YQeiFEbRV\/nM3MY2UTkWEJbSkVUNYw9CiBpt44WnolS2iaEUtLlAGYGY5hSOjPakJzYx5NnTE09ce177UuEV2sEtE0fcAnlNZe4lZXEhERRa32qRLRnBmexFWjj6beGK6MrlX6g2Xc6p7XI6\/i+J7tU1O3hPsLgDUm5zjwAZlwEi29cTQNxHGFQrPajPAaCZAACZAACZx7AvWF5rsspv\/YNiBVRg61i+oKpuMrRqrajmgW0naafPuPhCUOt35LYP73hB5RFAZKqhEN3dWjnI6AXTUbIqKpR0VFWzOiuQX56TwsL3MR277m5Hu8mNQjqOJUXZ62hOgef7T6Isi4gqHJNSPiCODlHFrDRWyEE7i\/qDvpjGjWFZrzKVwNiRAqABFVFKnztzm0PHpp2C9j+08h5vcKzdL8PIastHQZC6MJXbyafjp\/qwjNzH9i6F0xKik72BbrNisEo1NorsHf89zajFQqvkWpXENobsyjxYxuMqLpnAUekwAJkAAJkAAJOAjUF5rYxdbvUUT\/JyMReYLMZuXqR2FnJx9FZEbGbHwW0ad66lxdn0UkOgs5PYvEpC008S6L0fEszBjp7mZGr5eaRjS9XrHRqLoNFYXfonjy3xCiv9trNCvs\/FaoukZT+CKnongSXbL6d\/tjc\/mAzGgMV\/qT8A8ncLUrjRmRPV96jms9SfiDSdzqt9cu1hWaH1fgfyBS8Am0BZNo09ZolrEkxXX7gzFcCS6jVEVoigjq\/R4JTcNptP0cw1WtHrAdi+NicM12VxxVEZpQlnHrQQytwSSaHsQRXK8nNIGSSL+L8Q0L3xawVEtoljfQ2yPsptH2f3FcZUSzci54RgIkQAIkQAIkoBHYR2gekFJZbK85wEdESHOmzHTUd0QyHVf3HpbfY8dcyrm7jsSUaxf8PnZ23U7W8sfsuayitGf39iexzPR4PsL+QWx9\/KBFF4\/c6ceDdGJa\/1RlzGaZ61f95LrAUxIgARIgARIgARKwCRyP0LTt1TxS12VEpuaxtc+zOGsa0Ar0XeehiScITc5ipYpmrd\/eLj0ef2x7PCIBEiABEiABEiABEqgkcGpCs7JbnpEACZAACZAACZAACZx1AhSaZ32GOT4SIAESIAESIAES+EIEKDS\/EHh2SwIkQAIkQAIkQAJnnQCF5lmfYY6PBEiABEiABEiABL4QAQrNLwSe3ZIACZAACZAACZDAWSdAoXnWZ5jjIwESIAESIAESIIEvRIBC8wuBZ7ckQAIkQAIkQAIkcNYJUGie9Rnm+EiABEiABEiABEjgCxE4AaGpQil9odEcsVtVOcybc+xO1AO91seuf6CjknJsLx46UH9fa6WTYOscq4tzMS8j+1oBdlUc8XZwWucxCZAACZAACZAAgLpCs5jsg\/eGF94bHjQ1NMGjHXvRlywCuQAaHmf3Qnw1Bo93DKt7S078SvZxO6StOt1sSWi\/LaFYUWUVY61ejLleHV5RxXVSmOmDr6VZY+Np9aEvuvqZ4jCLgOaXglR3E\/qeHVH4buWR36rWNouAY\/6aW3zoSxZco\/rcUwWr8irEK+E\/56Pmx3C3pVm\/11qa0R7MGjaLkG7vM78H7riS8+qvHvj6JcTzRSjPutDUk\/rM+TywI6xIAiRAAiRAAmeaQF2haY9cCJUAKmRlLaFpNzr1o6MJzcO5qc71oelHCQXzvem7BUg\/NqFvrprAO6htU2getH71esVoO9qjlTJar+mevwJCN7uQ+lxVWOGGu4+KwoOdbEpobw0ga\/mlYHW8Hb4JIYqPU2g63Ski\/uNxCVinXR6TAAmQAAmQAAl8ntDsDmDkthdebzOab48hL7SWM2q4GUeHV0REvfDcHID8zgVc1B0MIXRPt+HtT0Ge6IDvhhfN3\/swphkElLkAfJodDzyiHzM1v5lC302PHnV9GIc0aAoGFatPO+AVbbwe+HpS0OJ3Tt8sV5wCpoB4p+6vt9WHAdlSPEbtGqJkS8bY1CpUYb8\/gJEfvPD2pFCEivyv7fC0GjY747ofAArJPviM611TEgaMSGv2cQMCOb27quPWmEmIP9Qjzc3eALKCx+IYvC2NaGwx+7YGCMAtAlWkuu8irmnSGqxQm7uaG7Hn456EglpEqseOeo8tAiitIuRgaUVQcwG0Px7R74tf804nkR9ussZuFah5SE9FVLNynlI9Pni0+fXCF8zqEciq95uKbNCn3wutHnRMFrS6Juf8r140Nzai2VslUv9ORkDMpbh\/W9ut+1H8QRMI6veXNlbLWR6QAAmQAAmQAAk4CXye0LwtWcJpddyLrqRSITSzj70IvTa6W8siJdbAOT9CNF0fgS43hPhpQJeZNs6P4LpIzb+Lo+NmyOpH\/WMAnn\/KUKEgfq8d0qZhsCSjr9EQmvkR+AYN8SFE3YRvj2+2Gw4BkwvAq0XPROkqssmCKxXsFmy2Fe1IG8+ALvzEBWUV8Zm8lYbNBz0ICBEmxuRgJ6KkjW6hWaWO5995ne91uw9lpgPtk3oavH5EswNjsgxZjiPU04GuSSPdnx+Bp1\/w1D+FyXb4nhbqcBe8+iAbDZR8ClktXV\/JJh\/0YeAPy6odQRWRcMfYjW4PELF0zNOWDGnOTP2L+0AXzVXvN038m+NTkH+WRVEFTKG5J1JqReqr3F+t+r0q2prMbf95RAIkQAIkQAIk4CbweULTsUbTEjniH3ZDNBWn7qL5dh9CM1msuqOZwhNHXXFq\/+NvlD3OQoiwyn\/Uswg0BpBXZfT9wxa6gAq5XxeahQkvOsaFqDK+4x36elJXfzoMp4CJ425LO\/qexpFdc4lirXKlmEIxhT6xbtXbrAvFavZLBeTlFKRfR9D3Q6MWsdszJjEWl9AUdbyDcXsMUwPwijruPixhBFhzoA\/M8V\/htyk0ZcgzIkKsR0IFq4E\/HFWF\/R\/j2KzFXURph73wdo5AepbXRJve2smmgNANR3+yjLFOI1Lr8NfR6+GEJgD13SqyQjQHB9DRqs971ftNzSPg9aIjKCGVFzFmw1srcuyYf1Fk+ifm5MYA4uY9JMcxcEPvp+I+rRwEz0iABEiABEiABBwETlRoav0IQTATQt8Pzeh65hJvLtFU8Q+4KDsuoSnEghCOrv50Di6hsatgNSeifj40d6dcEU2ROvfZUVoT5OsQvA9TUNz2X43B6+1C6FkWq0UFIloo0uJHEppiDItFPT1viFKte1MYCal24DWagIiE3p0q4vBCUx+0upVHKqqnwMe0kHR9oSlEv\/bHhsNfE5\/5e9DUufKsD80\/BBCX8ygoKmTnJrCq95uKYj4FSUt3j2kRdPtec82\/6d8eoSn+aNGFtd3W9Jy\/JEACJEACJEAC1QicoNBUkH8q6es2Rc9\/DOzdpe4SZhX\/gBtCc0+a2Uqdiw0tB0udq\/k44q\/2F5rKYgiSsS5UrGsccG+AEpE092YgKEj1e6qm5pVklyMaqy8N0NZfvg7B50gfC5v7pc6xKUOSi3vFsimMRKa+oj\/ndDtFoH59ddxYTuBeZuBMnTt9NLnvFpB6Kls794V41jcg5TEiUvpGt5WpcxX5mThWxd8ZDn+dHmrHtTYDiVS+Y41m\/t\/XHVHYVYxpkcYa99vrFEKCm\/YpQPqHOypZQ2i6l2agADkqo7jrirxDQcG9JMTojT8kQAIkQAIkcN4JnKDQBIrPxIYXH7oeio0THYib6ylN6gcRmq6NM94fRuw1kGLzh\/GYIW+nVLEZyN6E44HnptHG1Z\/uhkNobOmbi3wPu7TNKh1T5jpA02H9t+LxRi3N6HhqrHd02y9lEbjpgWbvRhcCg3pEU1gpTHWgWWzcueFFR7T6ZiDnhiFPq8HP3YdTuL2TMSA2R\/3THYkVQtN+PJW3VTzOx9ggdcANSzZ3FflxscGpA10PfbCvA6tPxfV2hF6JzUB5jN326I8pEv2ZG3ac\/lZi1c4O9HgjMe9iY8\/DLrTfHkGg20idV7vfVMOPe13o+sHeOGT\/UeOYf+GB0z\/nZjPRn3E\/2G3FJqwAGsVSjipj4SUSIAESIAESOO8EDig0Pw\/TUR+IXtlr7QfB17Zfu02lbdeZ62HerlL7VDVX\/NmXqh2pSo2HsB\/w4eC1x1ettyNeq+lLLYa1rrv6VxWo5qOgXEV1Tw\/wwPZaXKpeP6ofwsmD3g91B8RCEiABEiABEjh\/BE5FaJ4\/rBwxCZAACZAACZAACZAAhSbvARIgARIgARIgARIggRMhQKF5IlhplARIgARIgARIgARIgEKT9wAJkAAJkAAJkAAJkMCJEKDQPBGsNEoCJEACJEACJEACJEChyXuABEiABEiABEiABEjgRAhQaJ4IVholARIgARIgARIgARKg0OQ9QAIkQAIkQAIkQAIkcCIEKDRPBCuNkgAJkAAJkAAJkAAJUGjyHiABEiABEiABEiABEjgRAhSaJ4KVRkmABEiABEiABEiABCg0eQ+QAAmQAAmQAAmQAAmcCIFvitvb4JcMeA\/wHuA9wHuA9wDvAd4DvAeO+x5gRPNE9DuNkgAJkAAJkAAJkAAJUGjyHiABEiABEiABEiABEjgRAhSaJ4KVRkmABEiABEiABEiABCg0eQ+QAAmQAAmQAAmQAAmcCAEKzRPBSqMkQAIkQAIkQAIkQAIUmrwHSIAESIAESIAESIAEToQAheaJYKVREiABEiABEiABEiABCk3eAyRAAiRAAiRAAiRAAidCgELzRLDSKAmQAAmQAAmQAAmQAIUm7wESIAESIAESIAESIIETIfB1CU21iIUV5fAD3dzA0tvy4duxBQmQAAmQAAmQAAl8BQRU9Stw4gRcOF6hKafwTfc8No7o6HYigQsdc1g4VPsdjA+EcWl0\/VCt6lYubiAy\/walupVYSAIkQAIkQAIkQAKfR0DNj6H9+wY0NDSgsaUD8c299orRdq1c1LG+j7NaxXplQBYBZ5uGBrRHi3YHu0WkBr1obGiHtGVf1o7qlbmq1jv9qoRmPUdPtewzBfOp+srOSIAESIAESIAE\/p4E1CwC1z0I5PRwpjLThcabIRTqjkaF3N9YKRit+q4yJYWuhgB0SWpVMg7yGGnxoi86hq49QrNemdtO\/fP6QrP8BuOPJHz70yQu\/xTG5eCyHuVzCbGNcAzfDC8D2vU5DAUlXLgTxjf+OHpfftA8mBkOoy20gCZ\/GN\/cCaNJWkawVz++0JlG5iOM9iIiWsbSVBJXRL8dk7jYmcKMyKjX8EfYvho2FPp6Dq0PwrjgF18Jt5Jvq\/ZvjcXNZ2MeV4Xv2jeGoQ1As9+fwGW\/0U9FHzHcX9DHCGUN93smtb4v+iW0Tr1xWwfwAZnRGL41OHzbv4ClMlBamMO1nyZxqXMSF\/1xBNfLgOZLAhHBRnyM8\/EjrC4wLPCHBEiABEiABEjgayGwGEDjDaewzCLQ6EXodR0HX4fgux5Atlqq3V22KaH9RgirqgJFUaDuOu0qUN6JcxH1dEc065U5bex\/XF9o5tL4rnMOC2L5Y\/kNIqNziIiQbj2heWcS\/oVPogGcqXAh1r77RReqpWQCF+7EEdwqA+UN9D4IozWpOuyuwX9Pwv2XWsdYSs7hfroI1PDHFpqbmq1rYUPgrQvRGEfwT10sXhhcxLYw+TaHljsSepdrAHKNT9i\/8PMCNrRJFX1Moi1tqD3Rhz+JyEcVkUdhXJ0wYt7KMtruSehdqeyjlEriQocpnBWMDwrx+v9jvD+MloQuWEsL8\/BL6yhhRxPjGhuhM8MxXHj0kin9SqQ8IwESIAESIIG\/JQEt7d0vw9aMRUi3GxDI1RqOK2JZUa1KWS6AhsYmeLxeeL3NaPy+Wmq+mtA0DdcrM+vU\/60vNP9cRIs\/jCs\/pzGUWMPGR2PDjUuIVUQ0O59jyeyzvIy2O46ooBl11CJzKcwY9SyhaNnV111efJCAP7yIzLoxBTX8sdpvLeDaHUcEEDuagBNCzaqj9VnEUHcYt2TTUdev5Yd+vaKt1oeElmAafu2bxLV7k\/DnVnDLP4lrv5jX02h5EEbL1E6F8UwwjMtP3KtYy8iMSrj4UwytEznMLNlttmNxfDO4iBJ0n9tS9u1YYZgnJEACJEACJEACfysChxaa7oilc7Q1ytSSrRsKEz40\/tMpbIWBemKyXpmz89rH9YWmaKfuYOF5Dr2DMVz0xxAUGsklxJZCjtT5sQhN0fEnbC+tIDiRxFV\/GNckIzVexR9LCNYQmkLsWXU0Fp8rNOO4n3qJSNr+LhR1odk2aV8T5ZZINuagutAUhWWU1tcwHk6jqTOMS8EVPXL5cRGtQjyvL6DpXhoZQ+sb5vhDAiRAAiRAAiTwdyVwqNS5gtTDWmsz65U54IgI520Jju1AX1Zolubn0TZhrMssb6K3y4gCzqdw4V4SEfFIobcr8D8I22s074iUtyN1LsQRjHWOB41o7qxgaPi5vi5TrNec0IVsLX9sEamnzlti+rpMuFLn1jpOIzpYN6JpLhlw+w5X6lxZRu\/wPDI7rtR5eQPjwTTG1wAom5h5vqkJx4rUOT4gMhjGlYkXGP9XGuPLhopMJx279w273TF89y9hjB8SIAESIAESIIEzQUCVMdDo2gzUOoK8iPNtZpHdtKORyI\/AU2ttZo0y5ZnYXDSGVW1tpgJ58DquB4V156de1LJemdNG7eP6Ec2Pa7jfHcbFe5K+GWggp21cEes17Y08KQyNOiKa3XMYGhYbiMRmIHujjC0GzU0t9VLnKjLjIoJqbgZKYFxsjqnhT4VtsVGnU\/gsNtXYG3Iq6uwnND+uwN8pNgTFMf7WJZIFS6OPbzsmtU09TRNiPaUQlDavS\/4wLv9irAkVwtyf0GyZm4HE2C79FMbF3udYUICNhNhsNInL2mYgm5swq4lTsfa15pqN2hPMEhIgARIgARIgga+XgPPxRg2ONZT54UY0dqeg7wipF7GsXyY\/9qFJe8RRI5o7Q1jd8+zGemKyXtnBmNYXmqaNjwocKX7zav1fxdiJXb9W\/dKyim1FREddn339KaO0c4D+K3aYGzvND\/McUEVBqVoqe1\/\/xJ8qH7Btrnm1hvcJpR3HXy\/WdR6QAAmQAAmQAAmcZQKqcpL\/\/quuHeenR\/JgQvP0\/GFPJEACJEACJEACJEACZ4QAheYZmUgOgwRIgARIgARIgAS+NgIUml\/bjNAfEiABEiABEiABEjgjBCg0z8hEchgkQAIkQAIkQAIk8LURoND82maE\/pAACZAACZAACZDAGSFAoXlGJpLDIAESIAESIAESIIGvjQCF5tc2I\/SHBEiABEiABEiABM4IAQrNMzKRHAYJkAAJkAAJkAAJfG0E6gpN8foj+TfZ\/r7aqe2\/WkC2Xnntlidbohaw4nyF04F6K2N7cQH3g2n4JxaxpD+W\/0Atj1xpJYfe5y6+ZQULsTn4g2n0JvRXWFa3v4OZibRWT9T1B3NYql7xcFfFG5IeLUC83p4fEiABEiABEiABEjgsgbpCE7sqVFX\/vn+VwPRynafWKy8QShcO2\/\/J11deIPPi\/eH6yaXRMrqGbbWM0voCWvoXsH04C4evLadgv4tdNC8j858E7ud2gLKKDSmOlphLiFq9FDH0y3MsvN3BtvY9wFuRrLb1Dvimonp0WEYCJEACJEACJFCfQH2habV9jxdTMrasc+Pgry3MR5\/gyfgTJH6bNYTmLrZzCTyJTmM6EsX8m13gXRaR52brLciTWexgF1u\/RxGJTyMakVH4q9K4upZBJDKN6WgEs6u6UNx9M4\/oxBOMTiQgp0LIbIo2up0nE6N4Eslg3f0OT+UFZlPzmJ18gtHxev7Y\/W9PxdGScIu1MraTKVzrSaClP4a2RFFrsBGO4Wp\/ElcfTOJKcBGR8Tiudkzi2vgaSto71Z3vdDeOy28w\/ksMVzolXPvFeH\/8HqG5g\/H+BMYPFE0tYmh4fk\/ksbQwh6YHEq48iOP+ghhPEUPdMTQNSLg8ugbd9wSudM4hgw\/IjMZxRdTvn0NG63cZt7RXcla2w9YibvXE0PJzHNd+WdzTr02SRyRAAiRAAiRAAueZwIGE5u76bNVo5k4uAvmNge+NjKAR0Xxvvq\/zrxVMa9ccQvWNjIiI0qGAzNQKtBjpX+\/x3hUsVZX32NVMb2M+\/gLvsYPs1LwVWdz6LagJzQrf\/lpBIrlutDP8EpHW+IpxbccQzNX8cdwG5beYCcZxuSsBf3gFG5pvZWyvF6Hr2HXcH9CFnRBrrUlRoYyZX2IYWhd23mCoO4VMDaG5NBHH\/ZfGS9IX0miRisAeoQlgaxn+XglXf05j6LkubB1eOg6LGBLiV0ubi3T\/CrY\/vkTb4KLh7w6C\/aY\/tngVvpuCupRKotUU138uoCW4AsApNO12ePsGG4YAXhhNYIi5dcdc8JAESIAESIAESMAkcAChuYPsZJVoppCK6VlYyXIrdb6LrcVZTEtRRONRPDHEp7qc0ETp1m8JLBlRx521jBahjKaXsO2KaO6syUhMRRHRvkJoFpBxpObfv9Ajmu9fzOKFlVF+jxdpUdfxcaXOC+kQXihANX8crfTDsort3Dxaep5jCWUsJdNo7Y\/jmojk9dtC85asV58ZjhmiS0QARfTS\/DXL9YjmzPAkrvbH0SS+vTFcGV2rLjRNhz6+RSYUx7UJLYRrXnX8VolobsyjqTOm9yF87kpgfKvSHyE0Td83wnFc7jF86o\/h6kAOGxVC047MYn0R\/sE4mkT9njiFpmMmeEgCJEACJEACJGAT2FdoVkQM7Xba0dbzEObNxYtmRFN5genfjYtWRBNAaQmJuXlkZpb0KCZ2oZb0mCW25zGtRTnNDhzRTmxj\/n9GRNMheM2IpvpqGtOrhp3ddczGjSipaUp5gYgV5VSxNJXRxfEef8wGwFJiDhErSvcB4wNCZC3j1s85PaJaXsf9wYMJzWBPEjNa8HIHwV5drGX+E0OvCBiKj7KD7Y\/lKkJzE+PjL+20tLKIluFlo5H7p4rQfJtDy6OXRkSzjO0\/hRqvLTS3pxJoSxlh5bKC7eInV0TTFpozwwmMvxU+lMGIpnsueE4CJEACJEACJGAS2Edo1o5magb+KiATiWL2t1lMT0UwqkUct5GNRJD4TcZsOurYILSL9f91I7FmiELsYCmq10tIUWRNwaoZVrGejCCakpFJJhDRhCawu\/0Cs5EnCD2ddazRdNqZxpIV3TSGqK3RFHZkzEafIJo3K7j9MZEAWM+h9UEMrcE0WnsltEhifcAOIr\/E0DScxq1HSVw7kNAENmJxXOpOom0gjVuaYBXichm3NPtJND2II7heTWiWsTSVwJWeJPzBJJo6E3o9rMHvjyP4p8NfISD3rNEsY0mK40p\/Ev7BGK4El\/esGXVGNFF+g2C\/pI2vtUfCLVms6XSmzm2huZ1K4pqwt\/s3pQAAIABJREFU+39JtPYwde6cCR6TAAmQAAmQAAnYBPYRmnbFeke7pnZ0VjKWINqXdrGenMW6u+6eenYLuMrEuk1zKedONmSvDxVNXHUdVozDXexW1Knhj7Oh4t4QBEAVkb5j+nw0R1PP3ieUlM\/os6yidJBuTBcO5JPg\/ekAzE2j\/CUBEiABEiABEjiPBI5FaO4PbhsvpqKY\/cznbIpd59P\/DWH0vyFM\/75VuelnfyccNY7HH4dBHpIACZAACZAACZAACbgInJLQdPXKUxIgARIgARIgARIggTNPgELzzE8xB0gCJEACJEACJEACX4YAheaX4c5eSYAESIAESIAESODME6DQPPNTzAGSAAmQAAmQAAmQwJchQKH5ZbizVxIgARIgARIgARI48wQoNM\/8FHOAJEACJEACJEACJPBlCFBofhnu7JUESIAESIAESIAEzjwBCs0zP8UcIAmQAAmQAAmQAAl8GQInIDRVKKUvM5ij9qoqh3l1zlF7+QrblRTrTUvVvPu7clEP9SqkaiOvf62Si4JCTka+CGAfnvWtspQESIAESIAEzh6BukKzmOyD94YX3hseNDU0waMde9GXLAK5ABoeZ\/cSeTUGj3cMq3tLTvxK9nE7pK063WxJaL8tQWgC+7OKsVYvxtbsK0c52rfvAxtVUVzMo1hN+wr\/G5v1OfE2o7m1A4FnhQNbrqyoINXdhL5n1ToSNY+HC4op9Bn3jef7BjS1ivvJC29PyjUPld4d5ayQ7IOvRefjafGiL7qqC+mq836UHtxcBEMP7v5bQvZ1cR+eR+2P7UiABEiABEjg70ugrtC0h5VFoCGACllZS2jajU79aF+xd6yCo3J4+\/ZdWb3OWRHS7RqC2e3\/bgHxbi+6kkode19PUfZxAwK5k\/FH\/WMAnh8lFHYN+7tFpPo96JtTATe3Y3Mhj0Cj6\/+LY7NNQyRAAiRAAiTw9yfweUKzO4CR2154RXTt9hjyIjjm\/Ed9M44Orx7B8twcgPzOBUzUHQwhdE+34e1PQZ7ogO+GF83f+zCmGQSUuQB8mh0PPKIfMzW\/mULfTY8eIXsYhzRoCjQVq0874BVtvB74elLQ4n5O3yxXnMKugHinEXFr9WFA3ivg1PwY2luNPr0diG\/qhoTQHIuOoF1E61o9aP81b6SlD+hLLoD2aBH5X71obmxEs9eIHFt+utia19\/F0XEjpI+vtIqQw\/++pBHtrHHdFn7Vxu3kUmcMgxLiD\/Wod7M3gKw5N6Z\/jl+7P3FR2O9DIOiD90YfUsU68\/xORuAH4z5qbbfuC9t0EfEfzbm3r2JLxphg4Jx35z3j9WEkp0d01dyIfY\/dk1DQLtfjUkSqx470jy0CzvFVv2f3jtnhLQ9JgARIgARI4MwR+DyheVvSBY5ItI4bkTXHP+rZx16EXhvM1rJIvXYJN1H3+gjyWhUVqe4GdJmp3PwIrovUvBBSNw0hBUCLXP1ThgoF8XvtkAyhh5KMvkZDbORH4BvMWusPCxM+Pern8M2eSYegygXgnTBT0avIJguo9FjB6lTcFrr5EXiGde+FyPBZbVVkB30YEUWiTr\/wV\/8UJtvhe+oSP6Lo\/7V3Pj9tXGsf75+RbZd3eZfddhmxyjKSV+guEFI29moSKVaUWiilVRBJrIiA+lqkqXllbt8GFK4DaAwxvsYBOrkEI1KTAiIxIjUJmlxnWqzvqzM\/j8e\/Q37na8nxeOb8eJ7POZG\/PM85M7bQtARYHdEkytS1vwj1GyuqVkiEEXvo9oTk+ShyOlBI2JE904Qi1MvjyB9Jwqiu3xKXZj6cibniUl8YQGTW4Wf5K\/8rCzHLzzOevWKcpflkrAwj9LMAWGecg86ccVqvE3F3LolPiVtJU6E5c0b0+V0aJVv0ajY6vZBDft8wx6R2PkhcUN2v619DX0RdyWfZRh6TAAmQAAmQwCdI4HhCU1qjWUpFzIhc1Y\/6\/Lfo6RtGciGPbX80U8CUBID46v5QO9du5SEER7V4yZvpyoKhYfgbT+gCBrQRS6AVpxQMTGrQNPs9OWCtJ\/X1Z42nJBz20\/i2N4Lhu2nkd6olplUWwJGBYkFDLjWB8aEwAjaDKlEtCj+MmaJV2BJ76Na2fBbixm\/LsYRmDHkUkTw3gAnHZ03DxKBIVYvz4nrty+Vd12+PSyc+1F23a3ft9md+99oXX8U4K6Npb8zmY1DEeloxzudiSLt+pRE75xfi1YKvxtMq1gb0nTy0hSTGRwcQMtfsGiiMKVAGx6Hel9bHtuCCBkKzoS+moPXbXmMtT5AACZAACZDAJ0PgrQpNk9KLbeQXkhi+0IPofZ94qxIAb1FoCpEihKOvP2sUqwUPjnRsr6eRHAqj53rOF9HcxoSiIHo3h\/xOCfoTFZH3LTTdiG+t0BRCe\/tFG0JTgKjx2+PyXoSmGLONEowaoSn+eJDEoDmI7abOdeSGehAeS0MrFKGXNcSlzWHGfgG51Li53GPCClQ35dK20HR8odC0\/svxXxIgARIggc+GwFsUmjoKd1Vr3abA+TBWu0vdJ\/yqIl7impM6l1OqYtOHmTovInm+vdS5UUgj\/XtroalvJKHa60KFiIj5N0DpOUSlKKpxP+r6JGyvTp2HEBO5WH8a30mdi7akZQP50TNWRBg6ctckv+Sp6OMFowj1u253M1B16txAYSGNbTN1Xp1SVy\/HoJU9YV\/fb09oNvTBb0+LDWJV4+sXXb50M\/Y0qJq4P4AvdY4itJSGkrPpx+bTaDOQOQaunQWMi1S\/w3RnwoqaHhWRu6u5u+DF8gaxXrYllwYRTXO5hzRnPV8kpsIGvYhivUi\/Yx8\/SYAESIAESOAjJ\/AWhSZQuj+McDCM6DWxMcfbOOMycwWAdaZKiIhrdrTQvG2Nc1ucC+PumkCIzUb27WyUQbVqM1DhlwhCZp0QQuftOr7+rF6lH\/99a3NR+FrUjGoNzPvXGxrIj4URuhBF9LKC6FjMtdHaDGRvWgr2QBlz1oga8GwR6dm0va7VQGEygp5esWFpAOnZmC00AV2LIRxUEKsXAfbd3mj8oRQlLhcw0ReybkMVDCGcsG2oOh+Gs0nI5V3Xb4kLGvjg53kcoQlAHudQUJov8gaeYAi142KNZDu3NyrOD0C0Hb0WQSQRR9RJnU+K+SLOh6E4c6wll+qUvcuzoS8yU6AwFkDAXuPr\/p\/gAQmQAAmQAAl8QgTaFJrH87j6Btev21bjG8E3br9xnaZWtLrxtqGj4T3ej4z61xqdb2rIa140dBi+iJ\/ZUiu\/Wl1\/Rz40HM9W9tm4Wt6wXfhRd3d8g\/Nt9ltvtBr6Uq8wz5EACZAACZDAJ0bgnQjNT4wZ3SEBEiABEiABEiABEmiDAIVmG5BYhARIgARIgARIgARIoHMCFJqdM2MNEiABEiABEiABEiCBNghQaLYBiUVIgARIgARIgARIgAQ6J0Ch2Tkz1iABEiABEiABEiABEmiDAIVmG5BYhARIgARIgARIgARIoHMCFJqdM2MNEiABEiABEiABEiCBNghQaLYBiUVIgARIgARIgARIgAQ6J0Ch2Tkz1iABEiABEiABEiABEmiDAIVmG5BYhARIgARIgARIgARIoHMCFJqdM2MNEiABEiABEiABEiCBNghQaLYBiUVIgARIgARIgARIgAQ6J\/BF6eAAfJMB5wDnAOcA5wDnAOcA5wDnwJueA4xodi7OWYMESIAESIAESIAESKANAhSabUBiERIgARIgARIgARIggc4JUGh2zow1SIAESIAESIAESIAE2iBAodkGJBYhARIgARIgARIgARLonACFZufMWIMESIAESIAESIAESKANAhSabUBiERIgARIgARIgARIggc4JUGh2zow1SIAESIAESIAESIAE2iBAodkGJBYhARIgARIgARIgARLonACFZufMWIMESIAESIAESIAESKANAhSabUBiERIgARIgARIgARIggc4JfFhC0yhhbUvv3Iu9p9h8Xum8HmuQAAmQAAmQAAmQwAdAwDCOb0SzNppdO37PjVt4s0JTy+GL66t42ri\/plcOMhmcGFjBWtNS\/ouHmIxN46vbu\/4Lr\/19YWwap6ZLr12fFUmABEiABEiABEigHQJGYQKRf3Shq6sLgd4BpPdqa5VSEfO6KOO+b+XdgsXsMJSAda37fBzaC+eSgcIvEXR3daP7H13o7ptAoexcA3BUQm5UQaArAnVfOr+vIiL31dWF+Lp0vYPDD0podmD3Wy1KoflW8bJxEiABEiABEiABQcDII34mhPi6Fc7UF6IInE+i2JSOAW0kgEjKDog9SSIciCJti8vtyTAC13MQ+WFDiyFwfgLbR2ZnyI+ewZmfC3brBYz3KhhOTSDqF5qFcZzpU\/EmQm7NhWblGSZ\/VPG372fx9ffT+DrxGKYQ9kUun07P4Yuxx4B5fgU3EypOXJrGF\/1p3Pjtv6ZDQrydTa6hu38aX1yaRrf6GIkb1vGJwSUsv4JdX0REK9icz+Kk6HdgFl8O5rAgiDWwp0oY7q4jeHUaJ\/rFW8XF7PO6\/bu+2LjlD6+9Em5en0Z3LIMvL03joiaV0ndwZWjW9nMW3eoz82J5bQWnv5\/FV4Oz+LI\/jcRuBXi6ilOXMpgRPoqX\/X3yNVYJ2C3wgwRIgARIgARI4GMnsBFH4JwsLPOIBxQknzRxTAjLM3Hk7VR7cUqxxOORAV3XYZiisn59UTYw5ghNHbopTvOI+4Xmwxi6RjToZd1qs35zbZ1tLjTXl\/D3wRWsieWPlWeYub2CGRHSbSY0L82if+0vUQFyKlyIt7\/\/ZAnVcjaDE5fSSOxXgMpT3Lg6jWDWkNrdQf9lFVd+MzvGZnYFV5ZKQAN7PGG4Z7Z1etoSfdgVAi+NxB+AKHNidAMHosnn6+i9pOLG4\/qMvPYsoXnyn1tWPbe4gZkfp\/HVmC28n28g2D+Hm08PMTkyjd6MJa7La6voV3dRxqEpqk0fhc6cnsOJH3+zRLvbJg9IgARIgARIgAQ+JwJmSnxEg7c8swS1r1ma2hfNBJC\/1QXlWhSRoALlXAjd\/6hNvxez4xgfiSDUN468m1Z3SNcKTdOuQA+UcwqUYDcCShx5OeXuVG3js7nQ\/GMDvf3TOPnDEm5mdvD0lb3hppnQHHyATafjymOcvSQEmCX03HWPZkQvhwW7nCvs3HatdZdfXs2gf3oDy7v2EDSwx62\/v4bTcuQQlvATAs8tY\/ZpCciqCKVjM2RbG5XbwsX+ekK1guXbKr78fg7BqXUsbB66rR7MpfHF6AbKsNo8m\/OmlVuIByRAAiRAAiRAAp8NgY6Fpi+aKUAJodnVp7rp9tL8gPldTnvrOxq0+0kMKz0YmPcn5muFpmjXcIWlJW7Dd\/312hum5kLT7OkQaw\/WcWN0Dl\/2zyEhdvq4gtDqZDMppc7fiNAU7f6Fg80tJKayONU\/jdOqjcyotccVkQ2EZu\/84TsSmsLuCsq7O5icXkL34DS+SmxZkctXGwgKEby7hu7LS1i2NbtFkP+SAAmQAAmQAAl8dgQ6Sp3ryF2T1mbasApjAYQmtz10e2IjTxzeViHvEp4koQTicJLn1pX6QlOqBVMQS5uP5GutjpsKzfLqKs5O2enhyh5uRO11iqs5nLicxYy4pdDzLfRfnfbWaF4SKW8pdS5EVVWU0Fmj2CSiebiFm2MPrHWZYr3mlCVkG9njCk1YqfPeOWtdpj917kZU7ahipxHN8s4WFnZEWtyXOtdF6lzFja09TP5zCZOPbRW5lJV24Vt1Tl2fw9\/\/udNqXHidBEiABEiABEjgUydgaIgFfJuBguOmEDT28sjvSdnPwjhC0tpMF43YuBOMI2\/u+zBQ+NnbDFS8G0ZXXxJFe91mcfbbOpuNaoXm9i8hBEasDUU4KiLZ14UBc7OM22vbB02FJl7t4Mr1aXx5WbU2A8XWsSk0VOWZtJEnh5u3pYjm9RXcHBMbiMRmoDlcWfM2A7lCr2Xq3MDypIigOpuBMpgUm2oa2OMJTQBiM9CgsFlsxlERnLfWa1aVeU2huZyYxonYBg4EXrEZ6Po0Tnw\/i7\/1T6N7SqzFBJ5mMvha2G1uBvL8F1XKuSxOiDWsr3mLgLZHlQVJgARIgARIgAQ+CgLy7Y26pPWVIlLp7B4H6kczLQcNbN8dQI9ze6OqWxgVkRsJo9u+VVFAGUau5vZJtUIT5W0kB3sQMOt1I3xLM3exvw7Q5kLTafGVjrIkqp3TTT91S2A2LdPqYsXAgS6io75XS3sqKB+20b8peK2d72InvPnu9D6guo5yTRr8L5QPOwXm85FfSYAESIAESIAEPhsChn583dD4puwGGl9rgvjIkDYqNSnX5FJ7QrNJA7xEAiRAAiRAAiRAAiRAAvUIUGjWo8JzJEACJEACJEACJEACxyZAoXlshGyABEiABEiABEiABEigHgEKzXpUeI4ESIAESIAESIAESODYBCg0j42QDZAACZAACZAACZAACdQjQKFZjwrPkQAJkAAJkAAJkAAJHJsAheaxEbIBEiABEiABEiABEiCBegQoNOtR4TkSIAESIAESIAESIIFjE2gqNMXjj7RfNe\/9+2HjDo0i8s2uN675dq8YRWzJj3Bqq7cKDjbWcCWxhP6pDWyaj3Vqq+LrF9pax40HPr4VHWtzK+hPLOFGZs96ZnrdHg6xMLVklhNl+xPr2KxbrsOTr7bQ\/+MaxOPt+SIBEiABEiABEiCBTgk0FZoQd4Q3rPfL3zO497jJXev1R0guFTvt\/+2X1x9h+dHLzvpZX0Lv7R0cGBWUd9fQO7JmPXays1Y6K63l4D6i06xZwfL\/ZXBl\/RCoGHiqptE75xOibg8l3PzpAdaeH+LAfLfxVCS3brMDPuGoGR1eIwESIAESIAESaE6gudB0677Eo3kN++53++DPfaym7uDO5B1kfl20heYRDtYzuJO6h3szKaw+OwJe5DHzwKm9D202j0McYf8\/Kcyk7yE1o6H4Z3Xjxs4yZmbu4V5qBovbllA8eraK1NQd3J7KQMslsWw+r9Nq587UbdyZWcaueOC4\/NIfYTG3isXZO7g92cwer9LBfBq9Gb9Yq+Agm8PpoQx6R+ZwNlMyKzydnsOpkSxOXZ3FycQGZibTODUwi9OTOyibz1TPYcFuemHMPq48w+RPczg5qOL0T\/bz42uE5iEmRzKYbCuaWsLNsdWayGN5bQXdV1WcvJq2nzlfws3rc+iOqfj69g4s2zM4ObiCZfwXy7fTOCnKj6xg2ez3MS6aj+Ssrof9DVwcmkPvD2mc\/mmjpl+PJI9IgARIgARIgAQ+ZwJtCc2j3cW60czD9Rloz2x8zzQk7IjmS+d5nX9u4Z55ThKqzzTMiCgdilie37KeofnnS7z0BUsN\/SWOzKYPsJp+hJc4RH5+1Y0s7v+aMIVmlW1\/biGT3bXr2XaJSGt6yz53aAvmevZI06DyHAuJNL6OZtA\/vYWnpm0VHOyW7PT1Lq7ELGEnxFowKwpUsPDTHG7uinae4eb1HJYbCM3NqTSu\/GY\/IH1tCb1qCagRmgD2H6P\/hopTPyzh5gNL2EpWSocl3BTi10ybi3T\/Fg5e\/Yazoxu2vYdIjDj2eOJV2O4I6nIui6Ajrv9YQ29iC4AsNL16eP4MT20BvHY7g5vMrUtjwUMSIAESIAESIAGHQBtC8xD52TrRTCEVlxbhJsvd1PkR9jcWcU9NIZVO4Y4tPo3HGVOU7v+awaYddTzcWTYjlKmlTRz4IpqHOxoy8ynMmG8hNItYllLzLx9ZEc2XjxbxyM0ov8SjJVFWevlS58WlJB7pQD17pFrWYcXAwfoqeoceYBMVbGaXEBxJ47SI5I14QvOiZhVfGJuzRZeIAIropfPpXLcimgtjszg1kka3eN+Yw8nbO\/WFpmPQq+dYTqZxesoM4Tpnpc86Ec2nq+genLP6EDZHM5jcr7ZHCE3H9qfTaXw9ZNs0ModTsXU8rRKaXmQWuxvoH02jW5QfSlNoSiPBQxIgARIgARIgAY9AS6FZFTH06plH+w+SWD2wTzoRTf0R7v3HPulGNAGUN5FZWcXywqYVxcQRjLIVs8TBKu6ZUU6nAynaiQOs\/tuOaEqC14loGr\/fw71tu52jXSym7Sip05T+CDNulNPA5vyyJY5r7HEqAJuZFcy4Ubr\/YjImRNZjXPxh3YqoVnZxZbQ9oZkYymLBDF4eInHDEmvL\/zeHGyJgKF76IQ5eVeoIzT1MTv7mpaX1DfSOPbYr+T\/qCM3n6+j98Tc7olnBwR9CjTcWmgfzGZzN2WHlio6D0l++iKYnNBfGMph8LmyogBFN\/1jwOwmQAAmQAAmQgEOghdBsHM00G\/iziOWZFBZ\/XcS9+RncNiOOB8jPzCDzq4bFpZS0QegIu\/++jsyOLQpxiM2UVS6jppB3BKvZsIHd7AxSOQ3L2QxmTKEJHB08wuLMHSTvLkprNOV27mHTjW7aLpprNEU7GhZTd5AqOAX89jhIAOyuI3h1DsHEEoI3VPSqYn3AIWZ+mkP32BIu\/pjF6baEJvB0Lo2vrmdxNraEi6ZgFeLyMS6a7WfRfTWNxG49oVnB5nwGJ4ey6E9k0T2YscphB\/39aST+kOwVArJmjWYFm2oaJ0ey6B+dw8nE45o1o3JEE5VnSIyopn\/BIRUXNbFGVU6de0LzIJfFadHu\/2YRHGLqXB4JHpMACZAACZAACXgEWghNr2CzoyNHO8qF7CWI3qkj7GYXsesvW1POqwHfNbFu01nKeZhPeutDRRVfWakV+\/AIR1VlGtgjV9T9G4IAGCLS94ZerxxvmrX3F8r6MfqsGCi3041jQls2Cd5\/tcHcaZSfJEACJEACJEACnyOBNyI0W4M7wKP5FBaPeZ9Nsev83r+SuP2vJO79Z796009rI6QSb8YeqUEekgAJkAAJkAAJkAAJ+Ai8I6Hp65VfSYAESIAESIAESIAEPnkCFJqf\/BDTQRIgARIgARIgARJ4PwQoNN8Pd\/ZKAiRAAiRAAiRAAp88AQrNT36I6SAJkAAJkAAJkAAJvB8CFJrvhzt7JQESIAESIAESIIFPngCF5ic\/xHSQBEiABEiABEiABN4PAQrN98OdvZIACZAACZAACZDAJ0+AQvOTH2I6SAIkQAIkQAIkQALvhwCF5vvhzl5JgARIgARIgARI4JMn8BaEpgG9\/AFwOzKgd\/LoxU7Ld+ii0ZExHTb+gRbvzOcPZN68IZad+f6GOmUzJEACJEACJPCBEWgqNEvZYSjnFCjnQuju6kbIPFYwnC0B63F03crXuvP7BELKBLZrr7yDM3nE+1SUAOj3o+geyrnPRq\/t3EBpo4CSLUZbl69tof0z25gIKpjYab9GbUnPt9prnZ6p9r2q9r6KiM2w6nzHX1r7bOwXUNi3B6DDeZO\/1YXuoJibCpTeHoRHcih2bOPbqtDa97fVM9slARIgARIggQ+JQFOh6RmaR7wrjipZ2UhoepXew1EnYqwEtS8Cdf89mPlaXXbiW6sOmvj+xoRmKxuAUiqCSEr8WdD5SwjN+LpXrzgbQfjuhyM1Pct4RAIkQAIkQAKfL4HjCc3rcYz3KVCUHvT0TaAgglOyUNlLY0Cxok6h8zFoL3ygRdlRFelrdpngANJ7oowQQsOIJ8JQzg0jVwL0lTjCZlshhERfdnq+mB1G2I5sRedVxJxonCyEX2iIX3D6iGCiYKDwi4KeQAA9Sp0IbZ3ywqr8rQgmUuOI2FG0gXlH2BSRHrSja8EwYpruc1QWdq3KCtsiCDnRusG0HakTQnMCaiJiRvFCQcsPs6PyNpJS\/8NZ2y6ZgaCaipjirMZ32Vp5\/OTzjfqAbG8E46kJRMxIdwufNyag9AYQ6FWgDOVQkvtt2JdnkF9oYi+JsB1h73SuiHGNJwagKAomNgA0GH9jfdybg5dVFM1gbL3xlH03sH3XaltRQggP2ZHXqrkfQo8SR\/5DWHLiIeYRCZAACZAACRybwPGEZp\/qpiu3JxVEs3qV0MzfUpB8Ytu4k0fuiU+AiR\/bQBRpJ6i1pyJyPomiKTTPIPbQTqu+SGNA6stYGUbo5wJQ53ygRmjqSF8Oe3aUNcQHhd2yGIC0FMBfPo9YMAbNEEKzC5FZR1wWMH4mZkV51+NQppzz28hni6j2VOqrVVl9G+mFgpvyLyRCiAvxAxFVlv3II3Z+HAUAoszwis0KRah9drkGQtMS8g2iubLgk6ZXwz4K4wiP5l17i1Nhe0lFa5+rIppSvzV9XR5H\/kgyxhT9ckRTR+HnsBXRrDMnWs2V6nEV4x+Bav7BA6CsYTgoOAt\/hs15ICzRCznkRdq\/7nhKvhfGERrRPD5O5FX4K+aPLS71hQFpblX7ym8kQAIkQAIk8LESOJ7QlNZouqJBEgyl+W\/R0zeM5EIe2\/5opiAmlbUAih\/ob5EuST\/UAISwVEbT0DTNes\/HoPSp2FsZrv5xNjQM+4WmOPeNJ4i9garuw11zWqd8\/lbAFHvVUTSp\/n4a3\/ZGMHw3jfxOtcT0\/LKFXcuyQtwUUdByUH8Zx\/CFgJ0iziN+Tohw75UfFUK+iOQ5W\/Dal8RYfDtfu47WiWh2LjQb91GcUhB76NmEJ0ko\/ohmA5\/dOSOqu3Ohti+pdfdQjIWzRrMn0INIIm+K+9eZK1XjKsb\/XAxpZ65pacTOibEzUBhToAyOQ73vre1FXd+8uVHDR\/j5Xbo6giu88v1R4DrKAxIgARIgARL4iAm8VaFpcnmxjfxCEsMXehC97xNhrrhwCIof6DaEphABGyXoH4rQFOYf6dheTyM5FEbP9VzjiGarsr9PQFGiSN7PY7ukQ6w9tNYifiRCszCOM36h2cDn4wpNZ42mno0idMuKqtYIzUZzRc8hav9R0lxoij9uPGEpNjDlUuPmkpAJEU6u6xuFpk2GHyRAAiRAAp85gbcoNHUU7qrWuk0B+WGsdpe6EJqBKHJOtLMqdS6ldn3pUOxpULUSRPQ\/VjgBAAADOUlEQVQs7Eup10+dV6dC45eS2IaO3DXpvBtR8qdOq1PnjriRo4L6RhKquUBVOJpHzL9xSkrTtyorRJOXnjeQu+6kiOukzu2UfiER9pYZyKlzIfoup23RK1LqTls+3+X\/BDXi37rYrA\/lOxVFM7WtIz+mIOATmo18rvJV6remr8sxaL71i1XiEEUkz9vLBRrNlRc5RMU6SPtvnWJqAN31hCZ8448itJSGklFE7q5m3tFAEBF\/AIiNTPV984Qm\/EsL5NS5E30XDbrzTyym3UbR5688RDwmARIgARIggY+FwFsUmkDpvtioE0b0mtgM4Wz0kdAIcfFNDHFpM5D6RKw1lH6o7eLypp+Qu2kIKM4PoEdsKDmnYCDVYDPQXg7D50M1m2h0LWZuJIqJSKv8Qy+VV5Qwxtet9Y\/V4kaycd9qP3wtaka6vE1Cjq8dlC3nET8fgtnWuSjio1JEU2wGGhMbpBSEehXEbbtQLmCiL2TdfkpR4PVfQm5IQY\/YWHQhDnXSaQuo8t0xU3ya4r\/H7MO6tZW9WaphH4AYm4gSQujCMHIP1drNQI34vNAQE+PyPznoktCs8icYhru5SbKzeiwAQ4uh+5oVSW40V4zCBAbOhSDmz0Qh594Ky98W5PEPhmyeBgqTYpPWAKLXwlAujFvrK+v6Jo131WYpkXq3N3fJ\/gq\/3PlXQvq7Lmvpg+QvD0mABEiABEjgYyTQptA8nmsNb14t\/dg2LOPrum65Nm+2Xreur335a6flUdbdTR9yO3WPW5Q19CZtNarb6HxdA17zZE0fBnR5RYSbOq\/Tfk3dOmXkU52Wl+uKtb2+m+Tr8nc78unsQ\/NVtb7W7b\/BjeXrlpVabXOOSjV4SAIkQAIkQAIfPYF3IjQbUpKEZsMyvPBhE9gXKekwYqkctIUJDJwPY3zD2QH\/AZluFDBxQcHAL2lo91XE+0IYWGgqMz8g42kKCZAACZAACXycBN6v0ISIhn2AouTjHMv3Z\/WRgWJBg7a+3dljP9+5xQb0nby5uYdrIN85fHZIAiRAAiTwGRJ4z0LzMyROl0mABEiABEiABEjgMyFAofmZDDTdJAESIAESIAESIIF3TeD\/AaEXn2l4XtSEAAAAAElFTkSuQmCC)\n","a5132e2e":"## **4.10 - Comparando os modelos**\n\nAgora que comparamos a acur\u00e1cia dos modelos e colocamos em ordem decrescente, temos uma no\u00e7\u00e3o dos que possuem melhor desempenho.\n\nLembrando que as Acur\u00e1cias s\u00e3o dos dados de treino, o que n\u00e3o quer dizer que eles ter\u00e3o o mesmo resultado nos dados de teste e 'real life'.\nA partir de agora usaremos os 3 modelos que se destacam para analisar  com   outros m\u00e9todos: MAtriz de Confus\u00e3o, e Valida\u00e7\u00e3o Cruzada.\n\nPara saber mais, indico esse artigo em ingl\u00eas: [Performance Metrics in ML- Part 1](https:\/\/towardsdatascience.com\/performance-metrics-in-machine-learning-part-1-classification-6c6b8d8a8c92).","ea4ecef9":"## **3.5 - Separando os datasets de treino e teste**\n\nAgora que j\u00e1 tratamos os dados podemos separar  os datasets como  eram no inicio e come\u00e7aremos contruir nossos modelos e compar\u00e1los.\n","9c072927":"# Configura\u00e7\u00e3o inicial e bibliotecas que ser\u00e3o utilizadas","4b213095":"## **3.4 - Preparando as vari\u00e1veis para os modelos**\n\nAs vari\u00e1veis de entrada para o modelo devem ser num\u00e9ricas, portanto as categ\u00f3ricas ter\u00e3o que ser representadas desse modo:\n- para Sex faremos 0 para male e 1 para female\n- e para o local de embaque usaremos os dummies, isto \u00e9: \n- - se o passageiro embarcou no porto A, ent\u00e3o recebe valor 1 para A e 0 para os demais portos; \n- - se embarcou no B recebe 1 para B e 0 nos demais;\n- - se embarcou no C recebe 1 para C e 0 nos demais;","6bf72fd2":"**UAU!! 97,98% \u00e9 um resultado incr\u00edvel!! Ser\u00e1 que h\u00e1 algo errado?**","fcf013e1":"Se eu tivesse viajado sozinho na 1\u00aa Classe, pago U$100 na \u00e9poca e embarcado em Cherbourg, teria dobrevivido.","ab0fbbc1":"# **4 - Constru\u00e7\u00e3o do Modelos e Avalia\u00e7\u00e3o**\n\nNos modelos abaixo, h\u00e1 um briefing sobre seu funcionamento e  indica\u00e7\u00e3o de artigos sobre o assunto e a blioteca consultada.\n\nDepois de calculada a acur\u00e1cia, o arquivo csv de predi\u00e7\u00e3o para submiss\u00e3o no Kaggle \u00e9 gerado e uma compara\u00e7\u00e3o das performances \u00e9 mostrada.\n\nAntes de tudo, foi criada uma fun\u00e7\u00e3o simples com o objetivo de armazenar, classificar e exibir a performance de cada modelo.","8da792d4":"## **5.4 - F1 - Score**\n\u00c9 uma m\u00e9dia harm\u00f4nica entre a Precis\u00e3o e o Recall no intervalo entre 0 e 1\n\n1 - Indica precis\u00e3o e recall perfeitos\n\n0 - Se precis\u00e3o ou Recall for zero.\n\n![image.png](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAekAAABnCAYAAAAkA7qLAAAVFklEQVR4Ae2di5HlNBBFNwRiIARiIARiIARiIARiIARiIARiIIWhzi53t0erT8u\/sfWuqlx+z9andWTpdstvdj+9OZmACZiACZiACdySwKdbWmWjTMAETMAETMAE3izSfghMwARMwARM4KYELNI3HRibZQImYAImYAIWaT8DJmACJmACJnBTAhbpmw6MzTIBEzABEzABi7SfARMwARMwARO4KQGL9E0HxmaZgAmYgAmYgEXaz4AJmMDLEPj555\/ffvzxx0MO6hqln3766e3Tp0\/pg\/y\/\/PLL219\/\/TWq2vdfhIBF+kUG2t00gZUI\/Pbbb5+FFgFEdBG233\/\/vdtFhE+CSXm+\/\/PPP+8OhFd5\/vzzz3f3\/v777zeuKQ\/tZlPZdq3cv\/\/++7l+CTvtcM3ptQlYpF97\/N17E3gUAUQVEfvjjz++ChjiiUhLsPleS7\/++uvnstTRShLIkQAr4m3VU15H3CX+vfZVTnZkonWV8XlNAhbpNcfVvTKB5QgQVSKeLZEjOu4J4Q8\/\/NAsK1gqj6D3Em2NIvdYnvqoGxsyCSdEtrScjkw9zvN8Ahbp54+he2ACL0EAoSMi7SVEEHEjEo2J7eaR8MYt6VE7iPQoT2wf5wK7iPgzKdoy4wxk6naeZxGwSD9rvGytCbwsgUwUiqApAkXolBDoVgSuPDESH70LztSneqlLNhEhZ1KMpC3SGWLr5rFIrzu27pkJLEOALV8JXRTfsoMxAkV0lcrIWtfjWe+BR++jKTPzrnj2fTT16x07ffZ2dxyl1\/tskX69MXePTeBxBKLQ9baMo5hre5tINrM1LSdA5XqQshExdVAfdWd2AtSmbMk4Fyrj85oELNJrjqt7ZQJLEUBoESyELhtJz2wTR3HPCPoM3Nn30XHbfbRFP2OH8z6TgEX6meNmq03ABCoEWu+kK1nfXYrlRu+j3xUcfJl9H60dA5wRb3MP4L7IbYv0iwy0u2kCr0BAUevsNvGWf6Akw1Oiy\/Z1Lypmd0A2zOwAZGxwnmcTsEg\/e\/xsvQmYwP8E4o\/GZqNQvQPOvI+eAa730dSP41AeOBVEzVxHnI+M4mfsdN77ErBI33dsbJkJmMAEAUXRs5HoFe+jZ34NPtFlZ30BAhbpFxhkd9EEViegiHVWoOFCGUXSR0ay8X30FrtWHzP3L0fAIp3j5FwmYAI3JaB\/+GOrEOpdMJH4kSm+j57dfj\/SDtf1bAIW6WePn603gZcmoPfQM3+3XAJTFH3m++iyTX83gSwBi3SWlPOZgAncigDRKT+62vN3zX4ffashtTEVAhbpChRfMgETuDcB\/pyp9w+b8D6494+eqHdXvI+O\/zyp2vXZBLIELNJZUs5nAiZwCwIIMO+Pe+95EejMO+qz3kdrG56t9IyzcAuwNuKWBCzStxwWG2UCJlAjgEDzN8U9gaYc0WtGHM96Hx3\/ac9aP3zNBLIELNJZUs5nAibw4QQQaASQ99CtgwiarfDev\/BFR+L76D0\/PKtBwU4cAM5OJrCHgEV6Dz2XNQETuIyAtqYV\/Y7OPcMQ8FjfkSIdt7ppw8kE9hCwSO+h57ImYAKXEIh\/czwS51YES3TNwX19jud4fbSdXnYaYa7VHW3NbL+X9fq7CVRFWv+ebHyAZz8f6ZnuHSa8ZrbI1C9N4vKHJfZ695J2eRMwARMwgSMJVEWaBviBBkIrT7D3h\/7kxfOMP5bIiDT\/eXsplEd2jrr0fopzfEfFZ\/qkd0bx89E2uD4TMAETMAET2EKgKdJUFkU6u\/2jbana1k4Uc20NIexnJQSYg3ZbiT4SYeOMnGlLq31fNwETMAETMIEWga5IE+kqkm5VULtOmRi1kodrCDNbyggj4nmmMNIO7fUEWrZLpGuOhfL4bAImYAImYAJXE+iKtKLd2Xe1iN4oUedZIq1onnMmsdWNLU4mYAImYAImcCcCTWUiEka4OGbfG+s9b6+jZ4q0ovRMFI2NRPazjkivb75nAiZgAiZgAkcQaIr0lvfRMigjeGeKNI4FuwDZRF9nHZFs3c5nAiZgAiZgAlsJNEVaW8C9beCWsGXe7Z4t0thdvhdvQUKksz+Ma9Xh6yZgAiZgAiZwNIGmSOvHVL2oOLOt3TL4TJHWu\/Q99rXs9nUTMAETMAETuIpAVaR5l0skytGLlvn199Z0pkhjs+xHsNkVILrPvqNu9Yny1I3tHPSfY\/QDtVhOZSjfKkf+2Ea0W+1TD3lGOwCU5U\/Lor2Uze4ytFj4ugmYgAmYwPkEqiKtX0cjdKUIsOhzH\/Fjm3hrQjSo\/6y\/TVb9Emudia5pc1ak6Ct9rtnLtRaLWC6KLe1TH4JZJq4pL3noC4lzbAfng\/uthF30u3S0aJudErXRKu\/rJmACJmACH0ugKtLxfbTErXaeFbrYVYloTfRivj2fcSbUTs3+KHi9dsSjFvlSB3XXttZVrtWOysZ6ifijqFIv9SPcsR7yqE8121WudLKUl\/piu7reOyPqavPIc+Y3DD27fM8ETMAEViVQFene+2iEmQW+F8FlYEk8zxTpaAdihbBJvCQyLRFTWUWjCG4twYG6YBLTqBx5YUnZ+HfltBOdH9Vfto\/AUjYKutoX29o95YHDFnHENpgdecgmn03ABEzABN4T+E6kY7TUWuRZ3EtRel\/t+JuE5CqRjhYhMBK\/Xj\/IJzFvbQ0jlnCK9+GjcrHd8rNEmrxKiKdSvB\/r1\/3aWdF5z4kiD\/xXSOLs85ffkJiDOfgZeOYz0FqPv6nD\/zkUoTHQiFQtkSduvdbyjK59pEhjm\/oZo9jSZkXdPSEvy\/Bd5crot8wbxVwiHJlLcGcEVc5HdH6om3qpj\/7Ge6VNT\/vuBemZC5LHzePmZ+D9M9Bae78TaYRF8FqFWOzjlmwrX+\/60SKN6EaB67XNPYSLfrZEmrrEYWZbOJYb2UMErjZq9uIccD\/rEMW24Ut5DsaUtmb6UbPH10zABEzABK4l8J1II1oIw0z0tsXko0Wa+mYcB20lt\/opAe1tG9f6rXIwHCVF3C0bJODZfinyzrQ9ss33TcAETMAEPp7AOyVRdMkif\/aW6NEijc3aMs5g1XZ3K0rVjkJLQFttZMtF1thSJm2FtyL9Mj\/f5SAg\/mekaLMciCPOjvDPGC3XaQImsAKBdyIt4WLhPXvhPFKktc2bjTgZONrvRckSW84zCecGfqNyytcSVN0f1RNt0\/jNOhaxjtFnGMP7yGPUpu+bgAmYwKsSeCfSEiZE5ux0pEgrgsxG\/9oW7jkiypMRSQRL+SSUvR+baasdJ6EV\/WsrvGdjOUZyVlrCH\/Njg2yO1\/3ZBEzABEzgPgTeqbHeR2cW+b1dkEgfIRSqC\/tb29eyV+I7ykd+RHS03YyI0n4UW8q0ypGPe9SNqNZS3Fau3e9dw5beDgFlazb36nz6PRwnHDknEzABE7iSAMFa1IYtbX8VaUWARNEs9GcmxAkhoS0Ea2abumYX9WA\/9eBgYD9CFOFImGbaowx21iJ0+sAAtO7VylGG9ktRL\/uksdgyDjCg7Zrz07O5tGGV77C8wulchZf7YQImcBwBrflRi2Zr\/ySx5BwPhI+Da3sakEEIjtpS3eWZ+zVxUR21MxBKoWRhpj0EUX3geyZ6Ltug79hEeUSZg89EZj0uZTmVR\/hHCfthkcnbqmuLza26nnqdZwOOe53AXv8ZV56zIw7qGiUcjnLe9L6Tn2d2z7M0sunq+7BmXPccmbXArN8+P9d7OFM2w1prdXyWuTZKrP1a42Wn6mAd7aWr2kQreJa2pq+R9NYKXM4E7kgAJ4lJO5qosp3JrknLGWEbbZEjfFoQKM93HIJ4ILzKgy3xHk4E15QnsyjJ3rJtXY9nGFC\/xIZ2eo5lLHv3z\/SDxV9se849eeXMK39GOMTArK9jzThpjDjDfpQYX4k1zzp1zKQr2mTu9Z7Rnr0W6R4d33ssAe0kjDqAaDKxWbQlYExaRJpFAuFsTXraoCx1tJIEciTA5KPNbEJ8tZj12ld9soPFYpUURbo1RmVfxS2z+KusysDbrNv\/EqV46Sxus6wluPDOPq\/MXZzyLQk7z26T54b+ZJ\/T2A+LdKThz0sQYCIwIUaLAxMb8WwtvHHi1vKwKNSuR4jYwTHyomlrFLnHeqmPerML0xZBi+3d8bMcKTjMJPKPxi3WZ9ZvX53WK1gzf8Wc9uQ8xzEpPzPXR3OsLKPvlLuiTZ5XnOXZNPd0z9bu\/CbwAQSYDKPIFbOYnHjRvYQIslCUkyuzKJCHshyjdhDpUZ5oJ\/2j3mz0HW2ZcQZim73P8JkRvl5d2Xsam2y0pXozz4bycjbrL3\/pwvN2NmvNMznatJl5XmfnTxzfq9pUn2bmOXZapONo+fPjCSAUTOzMO8dMFMoCQX0cCJ0SAj8SpRiJj6KBTH1qm7pkU6aflIuRdGbRU1vZM\/awCF2VNM60O9sfLcoZW83623+pewXr6AQwTrSZmaeUG82x2nhT5so26VNsr2ZTec0iXRLx90cTkKiOJqy8WhaBKL5l52MEiugqZRZ6LTKZyG1m4uKJYzfHyFGQvXFr+AwxxZYz6pX95Tk6HbPtmnVJs\/\/9StbR4Yrt9uYo1mfmY62XzKUr25TjPlqfoq0W6UjDnx9PgMma8byj0PW2jKOYE+2SmGCZLSsJqcr14LIgZRP1UXemn6pTtmxdzFRP63y1SIsB7bZSXHxjntGCH\/OqHbP+4hRGNvHzUaxLh0vP7WiOZuZYtFefKXdlm3L6Z+Z7+wlXL3w2gYcQQDyZ1L0Jra6QV4LeW7Q1qai3tRCpzniO4p4R9Fh29Hn2Ham8d\/qQjbxHNpT3qbtc7Mo8R34Xg15UfIRDonYyzxT9M+vto1wbLzlJPF+t6JN5uXWOXd3mzBolkhZpkfD58QQkqDNiOuo0dbFAcPTEvKwnlmstLmWZzHdNcuzJeOPaMSASPFNEsefM+iObyKA11oxVVlhj3fFzbMes207qUaxrDld0dltjTbktc4wyV7fJ84XjN7UzEx9KfzaBJxNgIZ0V01F\/FUnVPO5eWSY\/tlD+yCTRpe5eVMzCKRtai9uRdl0p0pFB6Riw8HKfRTAjrD0GsR2z\/t4JO5p16znVHGzNpdm5qTFnfK9uk7Y1L2XH6OxIekTI9x9DQFtj5cK9tQMIHeKzRYBUbuu7spbN6iP1sziVBwsZAsV1FqAtEUar7d71LYx69fXuRQbiXDv3hLVXv+7FdkrOfDfrL3MD9kewbs1bOd+0w5yMiTJb5xjlrm4T29nhmWFmkY4j7s+PJjD78I86Kw++5W23yjPxJRp460cm2VTbpjuyndm66G9rwZuta5S\/xwCx4DmY2U5stddrp1XmiusrssbpaSUcTc2n8hUGc3PrHPuINumjnL\/S4Wj13yLdIuPrjyOgbaQjokdNpFmBBhpltKgcYYsGIi5WW+xSPWecrxKODAMWv3Ixn+1zpp3ZOo\/KvyLrkdMpB5y+xzlFufg9y5gyV7cp2\/TjwqxzYZEWOZ8fT0Aivbcj2l7bKoSyg0jsyMSklvhfEbVGoVK7R5yzEUSNXYYBeY58H23W7V2So1iP5lrcnYp5e9Fw7fnRNeyO9eh6PB\/dpuqmXeYRNmSSRTpDyXkeQUDiuMWzVgcRECbQnkVeQrb1XZlsKc+K7qn\/qsT2MYvV6BCzUT7u70kZBozdEe9INY577J0p+8qsM8+FXj\/I+aXM1jlGuavb1LOgSDrrrF4322WhzyZwEgFtiW1doJm0vMvMeri1blCHFvc99dTq1iI12qarlT37Gn3OLHp77biKwVXtbOGxGutsNKwIlP4jcHzfOsc+ok2NtRxNi7SI+PwyBGYf\/ggGYUegWxOH6Lx1L9YTF5I9EX2sk89x6xlP\/G7pCuG4isFV7Wwdw9VYZ53OOC445JTj2myizNVtRhsVTGSdWkfSkZ4\/P5qA3iXPetdMWiKn3qSR5z4CxORnEaW+IxPtUy9Hxlk4su1MXVcIB+N6BQOzfvscoV7BmjHFsc0mCRy2bZ1jH9Fm7J\/WiHit99ki3aPje48ioMV1ZtIj0Gx99QQaCESvGXHUwrb1XVkLuN5jUf8dE3aNGO61WzslZzMw629\/JnQ2a8Z05rnRHMeurXPsI9qMzz7OxYyDcc8ZH3vkzyaQJIDgMnnxtrMJgWZRxrtuHYg+W+Gjd90sNrTPseeHZzXbsZN6s+\/SanWceQ3bZhbbLbawsF3BwKy\/\/R\/aZz9vzCvm7UzSc8B83ZI+ok3ZuWWNskiLns9LEGBRYRJmkradWPgzR69OBDzWd6RIx+iBNu6YzhZpFmSN0ZkMzPr9VvdZrHHo5AzhBM8INfl5FkZOczlPPqLN0gY9XzPrg0W6pOjvjyagrcrRBI6Lvhb\/3rkWUeAMcFBOn+M5Xp+NMpnMtbqjjeS5S8Ku2T6ObGeMagx0TXxnFvham2b9RZjFlXM89MxxbS\/rct6pTdrIvqbChtp8rI0t1z6izZYtWp9mOFqkWzR9\/ZEEEGcm\/Iyn+siO3sxomB8t0jfr4m3MMevbDMW0ITgXs7sTFulpzC5wdwJMgpkfZty9P0+wz8Jx3SiZ9XWsj2wJJ5axm90Bs0gfOQqu6xYEtk6GWxj\/UCPYxpvZwntoN29htlnfYhimjeAHrVuCB4v0NGoXeAIB\/sxidlvpCf2yjSZgAs8joNdwW14JWaSfN962OEGAqI4fpcxuLSWqdhYTMAETmCJAwLD177ot0lOonflJBPBaj\/hF6pP6bFtNwATuRYBfrc\/8Gr203iJdEvH3pQjw5xd7JshSMNwZEzCBSwmwk8d76D2\/17BIXzpkbuwjCCDU2b\/B\/Aj73KYJmMCaBPix2B6BhopFes1nw70yARMwARNYgIBFeoFBdBdMwARMwATWJGCRXnNc3SsTMAETMIEFCFikFxhEd8EETMAETGBNAhbpNcfVvTIBEzABE1iAgEV6gUF0F0zABEzABNYkYJFec1zdKxMwARMwgQUIWKQXGER3wQRMwARMYE0CFuk1x9W9MgETMAETWICARXqBQXQXTMAETMAE1iRgkV5zXN0rEzABEzCBBQhYpBcYRHfBBEzABExgTQIW6TXH1b0yARMwARNYgIBFeoFBdBdMwARMwATWJGCRXnNc3SsTMAETMIEFCFikFxhEd8EETMAETGBNAhbpNcfVvTIBEzABE1iAgEV6gUF0F0zABEzABNYkYJFec1zdKxMwARMwgQUI\/AcpgnRvLoPXXgAAAABJRU5ErkJggg==)","5a6b3b6a":"## **3.3 - Tratando os valores faltantes**\n\nNormalmente preenchemos os dados faltantes com algum crit\u00e9rio ou os exclu\u00edmos. \nSe os dados faltantes forem menos que 5% do dataset ent\u00e3o excluir \u00e9 uma solu\u00e7\u00e3o r\u00e1pida, mas se for maior que isso corre-se o risco de perder dados e influencia a cria\u00e7\u00e3o do modelo e o resultados das predi\u00e7\u00f5es.\n\nVejamos.\n","45d291f1":"* ## **4.3 - Modelo de \u00c1rvore de Decis\u00e3o**\nAlgoritmos de \u00c1rvode de Decis\u00e3o s\u00e3o m\u00e9todos populares usados para regress\u00e3o e classifica\u00e7\u00e3o. \nO algritmo \u00e9 baseado no precedimento de 'n\u00f3', isto \u00e9, em cada n\u00f3 \u00e9 feita a pergunta se pertence a 'x' ou 'y' que se tornam os n\u00f3s x e y. O procedimento \u00e9 realizado em x e y que por sua vez ir\u00e3o gerar mais 2 n\u00f3s cada um. J\u00e1 percebeu que o processo \u00e9 exponencial n\u00e9? Quanto maior a quantidade de n\u00f3s, maior a profundidade da \u00e1rvore o que a torna mais complexa. o par\u00e2metro max_depth limita a profundidade da \u00e1rvore.\n\n\n[Modelos de Predi\u00e7\u00e3o | Decision Tree](https:\/\/medium.com\/turing-talks\/turing-talks-17-modelos-de-predi%C3%A7%C3%A3o-decision-tree-610aa484cb05)\n\n[Biblioteca](https:\/\/scikit-learn.org\/stable\/modules\/tree.html#tree)\n","7c2019d0":"# **7 - Se eu tivesse viajado no Titanic, sobreviveria?**\n## Conclus\u00e3o\n\nAprendi bastante com o dessafio do Titanic. Consultei materiais, outras resolu\u00e7\u00f5es e em cada uma incorporei algo no meu notebook. Tentei aplicar outras fun\u00e7\u00f5es e conceitos que aprendi mas nem tudo foi poss\u00edvel devido a limita\u00e7\u00e3o do dataset e porqu\u00ea j\u00e1 estava consumindo horas e horas, ficando muito longo e cansativo.\n\nNa Parte 1 - Se\u00e7\u00e3o 2 fizemos um reconhecimento do dataset train e tiramos algumas infer\u00eancias sobre os passageiros do Titanic. Visualmente aferimos que alguns grupos tiveram maiores chances de sobreviver, por exemplo, mulheres, crian\u00e7as, ser da 1\u00aa Classe e viajar acompahado de um familiar. \nPosteriormente obtivemos a correla\u00e7\u00e3o entre as vari\u00e1veis num\u00e9ricas e concluimos que eram fracas e as mantivemos na confec\u00e7\u00e3o dos modelos.\n\nNa Parte 2 - Se\u00e7\u00e3o 3 tratamos os dados faltantes manipulandoos e deixando-os preparados para entradas da se\u00e7\u00e3o 4.\nNa Se\u00e7\u00e3o 4 Calculamos a acur\u00e1cia de 9 modelos diferentes e as comparamos.Em sequ\u00eancia separamos os 3 com melhores desempenho e fizemos, na Se\u00e7\u00e3o 5, o c\u00e1lculo das demais m\u00e9tricas e constru\u00edmos o gr\u00e1fico da Matriz de Confus\u00e3o e curva ROC.\n\nN\u00e3o se\u00e7\u00e3o 6 fizemos a valida\u00e7\u00e3o com o K-Fold cross-validation, comparando na tabela os intervalos das m\u00e9tricas anteriormente calculada.\nSubmetidas as previs\u00f5es \u00e0 competi\u00e7\u00e3o do Kaggle, o melhor resultado obtido foi com o modelo GradientBooster que em nossas an\u00e1lises teve o segundo melhor desempenho.\n\n## **Com suas caracter\u00edsticas atuais, voc\u00ea teria sobrevivido ao Titanic?**\n\nVamos testar!\n\n","fd4fbae1":"## **6.1 - Cross Validation para os modelos**\nDesenvolveremos uma fun\u00e7\u00e3o para fazer a valida\u00e7\u00e3o dos modelos e em seguida colocar no nosso DataFrame para compara\u00e7\u00e3o.","0f89a158":"# **6 - Valida\u00e7\u00e3o Cruzada**\nO qu\u00e3o confi\u00e1vel s\u00e3o as m\u00e9tricas obtidas nos modelos acima? Para isso faremos agora a etapa de valida\u00e7\u00e3o, isto \u00e9, se os n\u00fameros s\u00e3o confi\u00e1veis ou se h\u00e1 algum enviesamento como o **overfitting**, que ocorre quando o modelo \"decora\" os dados e gera previs\u00f5es ruins.\n\nDentre as v\u00e1rias t\u00e9cnicas poss\u00edveis, aplicaremos o K-Fold e o cross-validation (Valida\u00e7\u00e3o cruzada).\n\no **K-fold cross-validation** divide aleatoriamente os dados em k grupos e em cada etapa etapa a valida\u00e7\u00e3o \u00e9 feita k vezes com os k grupos. Cada m\u00e9trica final obtida \u00e9 a m\u00e9dia das m\u00e9tricas das k modelagens.\nOs valores mais usados, baseado em vid\u00eancia emp\u00edrica, \u00e9 de k=5 ou k=10, mas pode-se realizar testes para obter o melhor resultado.\n\nAlguns artigos que consultei para compreender melhor:\n\n[Cross Validation Explained: Evaluating estimator performance.\nImprove your ML model using cross validation.](https:\/\/towardsdatascience.com\/cross-validation-explained-evaluating-estimator-performance-e51e5430ff85)\n\n[Understanding Cross Validation\nHow Cross Validation Helps Us Avoid The Pitfalls Of Overfitting](\/\/https:\/\/towardsdatascience.com\/understanding-cross-validation-419dbd47e9bd)\n\n[Cross-Validation\nValidating your Machine Learning Model Performance](https:\/\/towardsdatascience.com\/cross-validation-c4fae714f1c5)\n\n[CrossValidation de maneira did\u00e1tica](https:\/\/medium.com\/data-hackers\/crossvalidation-de-maneira-did%C3%A1tica-79c9b080a6ec)\n\n[Cross-Validation in Machine Learning](https:\/\/towardsdatascience.com\/cross-validation-in-machine-learning-72924a69872f)\n\n","290adf82":"## **4.6 - Random Forest Classifier**"}}