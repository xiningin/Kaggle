{"cell_type":{"6edb31bb":"code","30293605":"code","d46062cf":"code","2824d950":"code","bb2f07bc":"code","1a30f0d8":"code","52f7e8df":"code","6ed948d4":"code","a32188aa":"code","45e14156":"code","44994b7b":"code","de86efbf":"code","cca9411b":"code","206922e9":"code","ab20ad63":"code","d2d67630":"code","dfb78174":"code","396ee180":"code","8325dc34":"code","fb68e9c8":"code","357893f9":"code","5a49112b":"markdown"},"source":{"6edb31bb":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","30293605":"df1 = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ndf1.head()","d46062cf":"df2 = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ndf2.head()","2824d950":"print('train_data shape',df1.shape)\nprint('test_data shape',df2.shape)","bb2f07bc":"print(df1.isnull().sum())\nprint(\"\\n****************\\n\")\nprint(df2.isnull().sum())","1a30f0d8":"df1['Age'].fillna(df1['Age'].median(),inplace=True)\ndf2['Age'].fillna(df2['Age'].median(),inplace=True)","52f7e8df":"df2['Fare'].fillna(df2['Fare'].median(),inplace=True)","6ed948d4":"df1.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)\ndf2.drop(['Name','Ticket'],axis=1,inplace=True)","a32188aa":"for i in df1.columns:\n    sns.countplot(df1[i])\n    plt.show()","45e14156":"df1['family_members']=df1['Parch']+df1['SibSp']\ndf2['family_members']=df2['Parch']+df2['SibSp']","44994b7b":"df1.drop(['SibSp','Parch','Embarked'],axis=1,inplace=True)\ndf2.drop(['SibSp','Parch','Embarked'],axis=1,inplace=True)","de86efbf":"df1.groupby(df1['Cabin'].isnull())['Survived'].mean()","cca9411b":"df1['Cabin_Alotted']=np.where(df1['Cabin'].isnull(),0,1)\ndf2['Cabin_Alotted']=np.where(df2['Cabin'].isnull(),0,1)","206922e9":"df1.drop('Cabin',axis=1,inplace=True)\ndf2.drop('Cabin',axis=1,inplace=True)","ab20ad63":"df1.head()","d2d67630":"df1['Age']=np.where(df1['Age']<18,'child','Adult')\ndf2['Age']=np.where(df2['Age']<18,'child','Adult')","dfb78174":"sns.boxplot(df1['Fare'])\nplt.show()","396ee180":"df1['Fare']=np.where(df1['Fare']<80,'low_cost','High_cost')\ndf2['Fare']=np.where(df2['Fare']<80,'low_cost','High_cost')","8325dc34":"for i in df1.columns:\n    sns.lineplot(i,'Survived',data=df1)    # people in Pclass 3 were least to survive\n    plt.show()                             # family with 1 to 3 members survived the most\n                                           # females were most to survive","fb68e9c8":"df1.head()","357893f9":"from sklearn.ensemble import RandomForestClassifier\n\ny = df1[\"Survived\"]\n\nfeatures = [\"Pclass\",\"Sex\",\"Age\",\"Fare\",\"family_members\",\"Cabin_Alotted\"]\nX = pd.get_dummies(df1[features])\nX_test = pd.get_dummies(df2[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': df2.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","5a49112b":"combine SibSp - [sibling and spouse]  + Parch - [parents and children]"}}