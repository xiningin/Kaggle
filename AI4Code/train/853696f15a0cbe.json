{"cell_type":{"502deb23":"code","78c559d2":"code","d336be57":"code","e04b7653":"code","0a371a4d":"code","b43b5783":"code","44250619":"code","29d08671":"code","15413ce3":"code","86564832":"code","4651c1b8":"code","e3b40c99":"code","28bd1a3c":"code","2a3c176f":"code","89af9e13":"code","912a1211":"code","f9b3d28d":"code","675f80bb":"code","1a457fd2":"code","ca34ceba":"code","495b2303":"code","cf319f4c":"code","d38ad0f4":"code","340c8627":"code","7af90450":"markdown"},"source":{"502deb23":"!pip install japanize-matplotlib","78c559d2":"%matplotlib inline\nfrom IPython.display import SVG, Image\nfrom keras.utils.vis_utils import model_to_dot\n\nimport random\n\nimport numpy as np\nimport pandas as pd\nfrom sklearn import datasets\nfrom sklearn import preprocessing\nfrom sklearn.decomposition import PCA\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","d336be57":"plt.style.use('seaborn')\n%config InlineBackend.figure_format = 'retina'","e04b7653":"import japanize_matplotlib\nplt.rcParams['font.family']","0a371a4d":"img_cnt = 0","b43b5783":"def save_img():\n    global img_cnt\n    img_cnt += 1\n    img_name = 'img_{0:03}.png'.format(img_cnt)\n    print(img_name)\n    plt.savefig(img_name)","44250619":"def hexbin(x, y, color, **kwargs):\n    cmap = sns.light_palette(color, as_cmap=True)\n    plt.hexbin(x, y, cmap=cmap, **kwargs)\ndef scatter(x, y, color, **kwargs):\n    plt.scatter(x, y, marker='.')","29d08671":"df_part = pd.read_csv('..\/input\/ks2020-encode-data-001\/encoded_01.csv', index_col=0)\ndf_part.head()","15413ce3":"df_out_wgt_user = pd.read_csv('..\/input\/ks2020-lowcol-fet12-001\/out_user.csv', index_col=0)\nX_df_user = df_out_wgt_user\nwgt_user = df_out_wgt_user.values\ndf_out_wgt_user.head()","86564832":"df_out_wgt_col = pd.read_csv('..\/input\/ks2020-lowcol-fet12-001\/out_col.csv', index_col=0)\nX_df_col = df_out_wgt_col\nwgt_prod = df_out_wgt_col.values\ndf_out_wgt_col.head()","4651c1b8":"X_df_user_som_out = pd.read_csv('..\/input\/ks2020-lowcol-fet12-001-somcls-sksom-keras\/som_out_user.csv', index_col=0)\nX_df_user_som_out.head()","e3b40c99":"X_df_col_som_out = pd.read_csv('..\/input\/ks2020-lowcol-fet12-001-somcls-sksom-keras\/som_out_col.csv', index_col=0)\nX_df_col_som_out.head()","28bd1a3c":"X_df_lm = pd.read_csv('..\/input\/ks2020-lowcol-fet12-001-somcls-sksom-keras\/som_out_LM.csv', index_col=0)\nX_df_lm.head()","2a3c176f":"X_df = df_out_wgt_user","89af9e13":"sns.pairplot(X_df.iloc[:,:5], markers=['.'], height=2.2)\nsave_img()","912a1211":"ix, jx = '0', '1'\n\nplt.figure(figsize=(12,12))\nax = sns.kdeplot(data=X_df, x=ix, y=jx,\n                 cmap=\"Blues\", shade=True, thresh=0.05)\nax.scatter(X_df_lm.values[:,int(ix)], X_df_lm.values[:,int(jx)], marker='X', s=100, c='orange')\n\nfor ii, col in enumerate(X_df_lm.columns):\n    text = 'CLASS_' + str(col)\n    xy = (X_df_lm.values[ii,int(ix)], X_df_lm.values[ii,int(jx)])\n    ax.annotate(text, xy=xy, size=16)\nsave_img()","f9b3d28d":"'''\u5217\uff08\u30d6\u30e9\u30f3\u30c9\u3084\u5c5e\u6027\uff09\u304c\u3069\u306e\u30af\u30e9\u30b9\u306b\u5c5e\u3057\u305f\u304b'''\nenc = preprocessing.OneHotEncoder()\nenc.fit(X_df_col_som_out['cls'].values.reshape(-1,1))\ntmp = pd.DataFrame(enc.transform(X_df_col_som_out['cls'].values.reshape(-1,1)).toarray().astype(int), index=X_df_col_som_out.index.values)\ntmp.columns = ['cls'+str(ee) for ee in range(12)]\ntmp","675f80bb":"'''\u5404\u30af\u30e9\u30b9\u306e\u30e6\u30fc\u30b6\u30fc\u6570'''\ncnt = pd.DataFrame({'cls': X_df_user_som_out['cls']}).groupby('cls').size()\ncnt","1a457fd2":"'''[\u30af\u30e9\u30b9]\u00d7[\u5217\u306e\u5404\u5909\u6570] \u30af\u30ed\u30b9\u96c6\u8a08'''\nll = []\nfor ee in X_df_col_som_out.index.values:\n    tmp = pd.crosstab(X_df_user_som_out['cls'], df_part[ee], margins=True, normalize='index')\n    #print(tmp)\n    ll.append(tmp.values[:,1])\n\nres = pd.DataFrame(np.c_[ll].T, index=tmp.index, columns=df_part.columns)\nres.iloc[:,:10]","ca34ceba":"res.iloc[:,10:20]","495b2303":"res.iloc[:,20:30]","cf319f4c":"res.iloc[:,30:40]","d38ad0f4":"cnt1 = cnt.values\ncnt1 = np.r_[cnt1, cnt.values.sum()]\ncnt1 = pd.DataFrame(cnt1)\ncnt1.index = res.index.values\ncnt1\nres1 = pd.concat([res, pd.DataFrame(cnt1)], axis=1)\nres1.columns.values[-1] = 'cnt'\nres1","340c8627":"res1.to_csv('som_cls_crosstab.csv')","7af90450":"[WordAndDoc2vec](https:\/\/github.com\/darecophoenixx\/wordroid.sblo.jp\/wiki\/WordAndDoc2vec)"}}