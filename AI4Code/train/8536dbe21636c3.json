{"cell_type":{"a3609eda":"code","a4a959e8":"code","2176e71c":"code","050bb817":"code","77f70400":"code","bdc3934b":"code","5d648016":"code","90aa54c2":"code","1406f0f7":"code","2edd4f36":"code","05a8a5dc":"code","e6c0aa5c":"code","1c209f55":"code","c1147bcb":"code","f89ecfac":"code","a99bd9e7":"code","6a6bc231":"code","1885e3f4":"code","6602d887":"code","d4344ab5":"code","374c2115":"code","a808e345":"code","ca5d685b":"code","6db56390":"code","8749e893":"code","53d88cf1":"code","65a3c1a3":"code","f4e58174":"code","c8080d2e":"code","e07a4ed0":"code","f4d360e3":"markdown","4c039b4f":"markdown","5b064512":"markdown","d69cef40":"markdown","423c57f2":"markdown","a89ea4af":"markdown","1cdfc6ac":"markdown","d3776d43":"markdown","c3550fc7":"markdown","22911ab4":"markdown","e2a572f8":"markdown","6a5ce85f":"markdown","fc0982c6":"markdown","eed2b11b":"markdown","083138f4":"markdown","827297f4":"markdown","56e1ed43":"markdown","c1a9e8a7":"markdown","d89573f8":"markdown","510c313d":"markdown","21aaa5a4":"markdown","172b1cc9":"markdown","3ab8dc9c":"markdown","c00d8179":"markdown","6a09f56a":"markdown","630ec152":"markdown","dfbaf85c":"markdown","c4b47694":"markdown","ded8f226":"markdown","10ff420c":"markdown","b9edbceb":"markdown","64c3e114":"markdown","252ee13b":"markdown","3afd340a":"markdown","ad39cdf7":"markdown","a5ca8b87":"markdown","1e5730ba":"markdown","39371454":"markdown"},"source":{"a3609eda":"# Importing libraries\nimport pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib import colors\nfrom matplotlib.ticker import PercentFormatter\nimport seaborn as sns\nimport warnings\nfrom scipy.stats import *\n","a4a959e8":"# Importing dataset\ndf=pd.read_csv(\"\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")","2176e71c":"# viewing top rows of data\ndf.head()","050bb817":"# viewing summary of the dataset\ndf.describe()","77f70400":"# viewing the dteails about rows and columns\ndf.info()","bdc3934b":"# fix any missing value or incorrect value\ndf.isna().sum()","5d648016":"plt.figure(figsize=(8, 7))\nsns.countplot(df['sex'])\nplt.title(\"Gender Count Plot\", fontdict={'fontsize': 14})\nplt.xlabel(\"Gender\")\nplt.ylabel(\"Count\")\nplt.show()","90aa54c2":"labels = df['sex'].value_counts().index.tolist()\nvalues = df['sex'].value_counts().tolist()\nplt.figure(figsize=(8, 8))\nplt.pie(x=values, labels=labels, )\nplt.title(\"Gender Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","1406f0f7":"plt.figure(figsize=(7, 7))\nplt.title(f\"Age Distribution\")\nsns.histplot(df['age'], stat='density', color='green')\nsns.kdeplot(df['age'], color='blue')\nplt.axvline(df['age'].mean(), color='red', linestyle='--', linewidth=0.8)\nmin_ylim, max_ylim = plt.ylim()\nplt.text(df['age'].mean()*1.05, max_ylim*0.96, 'Mean (\u03bc): {:.2f}'.format(df['age'].mean()))\nplt.xlabel(\"Score\")\nplt.ylabel(\"Density\")\nplt.show()","2edd4f36":"def print_quantile_summary(column:str):\n    \"\"\"\n    Prints Quantile Summary a bit nicely.\n    \"\"\"\n    verbose = column.split(' ')[0].capitalize()\n    print(f\"Some Stats about {verbose} :\", end=\" \")\n\n    print(f\"Maximum {verbose} is: \", end=\"\")\n    print(f\"{df[column].max()}\", end=\"\\n\")\n\n    print(f\"Minimum {verbose} is: \", end=\"\")\n    print(f\"{df[column].min()}\", end=\"\\n\\n\")\n\n    print(f\"25% of people were less than \", end=\"\")\n    print(f\"{int(np.quantile(df[column], 0.25))}\", end=\" \")\n    print(f\"{verbose}\")\n\n    print(f\"50% of people were less than \", end=\"\")\n    print(f\"{int(np.quantile(df[column], 0.50))}\", end=\" \")\n    print(f\"{verbose}\")\n\n    print(f\"75% of people were less than \", end=\"\")\n    print(f\"{int(np.quantile(df[column], 0.75))}\", end=\" \")\n    print(f\"{verbose}\")","05a8a5dc":"print_quantile_summary(\"age\")","e6c0aa5c":"plt.figure(figsize=(8, 7))\nsns.countplot(df['exng'])\nplt.title(\"Exercise Induced Angina Count Plot\", fontdict={'fontsize': 14})\nplt.xlabel(\"Angina\")\nplt.ylabel(\"Count\")\nplt.show()","1c209f55":"plt.figure(figsize=(8, 7))\nsns.countplot(df['restecg'])\nplt.title(\"ECG Normal Count\", fontdict={'fontsize': 14})\nplt.xlabel(\"restecg\")\nplt.ylabel(\"Count\")\nplt.show()","c1147bcb":"plt.figure(figsize=(8, 7))\nsns.countplot(df['cp'])\nplt.title(\"Chest Pain Types Count\", fontdict={'fontsize': 14})\nplt.xlabel(\"cp\")\nplt.ylabel(\"Count\")","f89ecfac":"plt.figure(figsize=(7, 7))\nplt.title(f\"Cholestrol Level Distribution\")\nsns.histplot(df['chol'], stat='density', color='pink')\nsns.kdeplot(df['chol'], color='blue')\nplt.axvline(df['chol'].mean(), color='red', linestyle='--', linewidth=0.8)\nmin_ylim, max_ylim = plt.ylim()\nplt.text(df['chol'].mean()*1.05, max_ylim*0.96, 'Mean (\u03bc): {:.2f}'.format(df['chol'].mean()))\nplt.xlabel(\"Cholestrol\")\nplt.ylabel(\"Density\")\nplt.show()","a99bd9e7":"print_quantile_summary(\"chol\" )\n","6a6bc231":"plt.figure(figsize=(8, 7))\nsns.countplot(df['fbs'])\nplt.title(\"Fasting Blood Sugar Condition Count\", fontdict={'fontsize': 14})\nplt.xlabel(\"Fasting Blood Sugar level\")\nplt.ylabel(\"Count\")","1885e3f4":"plt.figure(figsize=(7, 7))\nplt.title(f\"Maximum Heart Rate Achieved\")\nsns.histplot(df['thalachh'], stat='density', color='yellow')\nsns.kdeplot(df['thalachh'], color='green')\nplt.axvline(df['thalachh'].mean(), color='red', linestyle='--', linewidth=0.8)\nmin_ylim, max_ylim = plt.ylim()\nplt.text(df['thalachh'].mean()*1.05, max_ylim*0.96, 'Mean (\u03bc): {:.2f}'.format(df['thalachh'].mean()))\nplt.xlabel(\"Score\")\nplt.ylabel(\"Density\")\nplt.show()","6602d887":"print_quantile_summary(\"thalachh\")","d4344ab5":"plt.figure(figsize=(8, 7))\nsns.countplot(df['output'])\nplt.title(\"Target Count\", fontdict={'fontsize': 14})\nplt.xlabel(\"Target\")\nplt.ylabel(\"Count\")","374c2115":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(10, 5))\n\nsns.boxplot(x='sex', y='trtbps', data=df, ax=ax[0], palette='gnuplot')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Gender\")\nax[0].set_ylabel(\"Resting Blood Pressure\")\nax[0].tick_params(axis='x', rotation=45)\n\nsns.violinplot(x='sex', y='trtbps', data=df, ax=ax[1], palette='gnuplot')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Gender\")\nax[1].set_ylabel(\"Resting Blood Pressure\", color='w')\nax[1].tick_params(axis='x', rotation=45)\n\nfig.suptitle(\"Gender VS Resting Blood Pressure\", fontsize=18)\n\nplt.show()","a808e345":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(10, 5))\n\nsns.boxplot(x='sex', y='chol', data=df, ax=ax[0], palette='Set3')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Gender\")\nax[0].set_ylabel(\"Cholestrol\")\nax[0].tick_params(axis='x', rotation=45)\n\nsns.violinplot(x='sex', y='chol', data=df, ax=ax[1], palette='Set3')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Gender\")\nax[1].set_ylabel(\"Cholestrol\", color='w')\nax[1].tick_params(axis='x', rotation=45)\n\nfig.suptitle(\"Gender Vs Cholestrol\", fontsize=18)\n\nplt.show()","ca5d685b":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(10, 5))\n\nsns.boxplot(x='cp', y='sex', data=df, ax=ax[0], palette='Set2')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Chest Pain Type\")\nax[0].set_ylabel(\"Gender\")\nax[0].tick_params(axis='x', rotation=45)\n\nsns.violinplot(x='cp', y='sex', data=df, ax=ax[1], palette='Set2')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Chest Pain Type\")\nax[1].set_ylabel(\"Gender\", color='w')\nax[1].tick_params(axis='x', rotation=45)\n\nfig.suptitle(\"Gender Vs Chest Pain Type\", fontsize=18)\n\nplt.show()","6db56390":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(10, 5))\n\nsns.boxplot(x='cp', y='trtbps', data=df, ax=ax[0], palette='magma_r')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Chest Pain Type\")\nax[0].set_ylabel(\"Resting Blood Pressure\")\nax[0].tick_params(axis='x', rotation=45)\n\nsns.violinplot(x='cp', y='trtbps', data=df, ax=ax[1], palette='magma_r')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Chest Pain Type\")\nax[1].set_ylabel(\"Resting Blood Pressure\", color='w')\nax[1].tick_params(axis='x', rotation=45)\n\nfig.suptitle(\"Chest Pain Type Vs Resting Blood Pressure\", fontsize=18)\n\nplt.show()","8749e893":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(10, 5))\n\nsns.boxplot(x='cp', y='chol', data=df, ax=ax[0], palette='mako')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Chest Pain Type\")\nax[0].set_ylabel(\"Cholestrol\")\nax[0].tick_params(axis='x', rotation=45)\n\nsns.violinplot(x='cp', y='chol', data=df, ax=ax[1], palette='mako')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Chest Pain Type\")\nax[1].set_ylabel(\"Cholestrol\", color='w')\nax[1].tick_params(axis='x', rotation=45)\n\nfig.suptitle(\"Chest Pain Type Vs Cholestrol\", fontsize=18)\n\nplt.show()","53d88cf1":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(10, 5))\n\nsns.boxplot(x='output', y='thalachh', data=df, ax=ax[0], palette='rocket_r')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Chances \")\nax[0].set_ylabel(\"Maximum Heart Rate Attained\")\nax[0].tick_params(axis='x', rotation=45)\n\nsns.violinplot(x='output', y='thalachh', data=df, ax=ax[1], palette='rocket_r')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Chances\")\nax[1].set_ylabel(\"Maximum Heart Rate Attained\", color='w')\nax[1].tick_params(axis='x', rotation=45)\n\nfig.suptitle(\"Chances of getting Heartattack vs Maximum Blood Pressure\", fontsize=18)\n\nplt.show()","65a3c1a3":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(10, 5))\n\nsns.boxplot(x='output', y='chol', data=df, ax=ax[0], palette='tab10')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Chances \")\nax[0].set_ylabel(\"Cholestrol\")\nax[0].tick_params(axis='x', rotation=45)\n\nsns.violinplot(x='output', y='chol', data=df, ax=ax[1], palette='tab10')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Chances\")\nax[1].set_ylabel(\"Cholestrol\", color='w')\nax[1].tick_params(axis='x', rotation=45)\n\nfig.suptitle(\"Chances of getting Heartattack vs Cholestrol\", fontsize=18)\n\nplt.show()","f4e58174":"def heatmap(df):\n    \n    fig, ax = plt.subplots(figsize = (15, 15))\n    \n    sns.heatmap(df.corr(), cmap = \"coolwarm\", annot = True, fmt = \".2f\", annot_kws = {\"fontsize\": 9},\n                vmin = -1, vmax = 1, square = True, linewidths = 0.8, cbar = False)\n    \nheatmap(df)","c8080d2e":"# Make a dataframe for our test\ntests = pd.DataFrame()\n\n# Get the values from old\nresting_blood_pressure = df['trtbps'].values\ncholestrol = df['chol'].values\nmaximum_heart_rate = df['thalachh'].values\nfasting_blood_sugar_level = df['fbs'].values\n\nrlist, clist, mlist, flist = [], [], [], []\n\n# Make a list of all values and iteratively calculate the shapiro value\nvalues = [('resting_blood_pressure', resting_blood_pressure, rlist), ('cholestrol', cholestrol, clist), ('maximum_heart_rate', maximum_heart_rate, mlist), ('fasting_blood_sugar_level', fasting_blood_sugar_level, flist)]\nfor value in values:\n    _, prob = shapiro(value[1])\n    if prob > 0.05:\n        value[2].append(\"H0\")\n    else:\n        value[2].append(\"H1\")\n\n    tests[f'{value[0]}_shapiro'] = value[2]\n\ntests.head()","e07a4ed0":"# Get the value from old dataframe\nresting_blood_pressure = df['trtbps'].values\ncholestrol = df['chol'].values\nmaximum_heart_rate = df['thalachh'].values\nfasting_blood_sugar_level = df['fbs'].values\n\nrlist, clist, mlist, flist = [], [], [], []\n\n# Make a list of all values and iteratively calculate the shapiro value\nvalues = [('resting_blood_pressure', resting_blood_pressure, rlist), ('cholestrol', cholestrol, clist), ('maximum_heart_rate', maximum_heart_rate, mlist), ('fasting_blood_sugar_level', fasting_blood_sugar_level, flist)]\n\n# Make a list of all scores and iteratively calculate the d'augstino value\nfor value in values:\n    _, prob = normaltest(value[1])\n    if prob > 0.05:\n        value[2].append(\"H0\")\n    else:\n        value[2].append(\"H1\")\n\n    tests[f\"{value[0]}_d'augstino\"] = value[2]\n\ntests.head()","f4d360e3":"<center style=\"color:green\"> MORE WORK TO BE DONE IN FUTURE !! ALSO PLEASE COMMENT YOUR SUGGESTIONS, THANK YOU! <\/center>","4c039b4f":"#### Here, the number of people having abnormal ecg rate is more in number","5b064512":"#### Here in the given dataset people having no Angina are more in number.","d69cef40":"#### Here the people having normal fasting blood sugar level is high is number than people having High fasting blood sugar level.","423c57f2":"#### From this we can say there are no missing values in the dataset","a89ea4af":"### Chances of getting Heartattack vs Maximum Blood Pressure","1cdfc6ac":"### Age","d3776d43":"### Heat Map","c3550fc7":"## In-Depth Exploratory Data Analysis \ud83d\udcc8","22911ab4":"### Cholestrol Distribution\nCholestoral in mg\/dl fetched via BMI sensor.","e2a572f8":"### Maximum Heart Rate Achieved\nMaximum heart rate is measured in beats\/minute","6a5ce85f":"![heart_pumping.gif](attachment:92eddd0d-f62d-475b-b59e-d47fada3c02b.gif) ","fc0982c6":"## Exploratory Data Analysis \ud83d\udcca\ud83d\udcc8\n","eed2b11b":"### Gender vs Cholestrol","083138f4":"## Index\n","827297f4":"## Introduction and Imports \ud83d\udcc3\n","56e1ed43":"### D\u2019Agostino\u2019s K^2 Test\nD\u2019Agostino\u2019s K^2 Tests whether a data sample has a Gaussian distribution.\n\nAssumptions\n\n- Observations in each sample are independent and identically distributed.\n\nInterpretation\n- H0: the sample has a Gaussian distribution.\n- H1: the sample does not have a Gaussian distribution.","c1a9e8a7":"#### It shows the dataset contains 303 rows and 14 columns with their data type.","d89573f8":"### Chest Pain Type VS Gender","510c313d":"<center><h1 style=\"background:#87CEFA\">EDA on Heart Attack Dataset + Testing \u2714<\/h1><\/center>\n<br>","21aaa5a4":"#### Number of people having chances of heart attack is high in the dataset","172b1cc9":"### Chest Pain Vs Cholestrol","3ab8dc9c":"#### Here the people having type 0 chest pain is high in number.","c00d8179":"## Hypothesis Testing \ud83e\uddff","6a09f56a":"### Gender VS Resting Blood Pressure","630ec152":"### Chances of getting Heartattack vs Cholestrol","dfbaf85c":"### Fasting Blood Sugar\n- fasting blood sugar > 120 mg\/dl is considered as true or 1 (High Blood sugar level)\n- fasting blood sugar < 120 mg\/dl is considered as false or 0","c4b47694":"### ","ded8f226":"#### The number of people having Cholestrol level between 200-300 is high.","10ff420c":"### Chest Pain Type\n- Value 0: typical angina\n- Value 1: atypical angina\n- Value 2: non-anginal pain\n- Value 3: asymptomatic","b9edbceb":"### Shapiro-Wilk Test\nShapiro-Wilk Tests whether a data sample has a Gaussian distribution.\nAssumptions\n- Observations in each sample are independent and identically distributed (iid).\n\nInterpretation\n- H0: the sample has a Gaussian distribution.\n- H1: the sample does not have a Gaussian distribution.\nHere, testing will be done on `Resting Blood Pressure`, `Cholestrol`,`Maximum Heart Rate Attained`, and `Fasting Blood Sugar Level`,and then store the results in a dataframe.","64c3e114":"### Resting Electrocardiographic Results\nThe electrocardiogram (ECG) is one of the simplest and oldest cardiac investigations available, yet it can provide a wealth of useful information and remains an essential part of the assessment of cardiac patients.\nHere in the dataset, 0 represents the person has normal ECG range and 1 represents out of normal ECG range.","252ee13b":"### Target Variable Count\nCount of people having chances of getting heart attack","3afd340a":"### Exercise Induced Angina\nAngina is a type of chest pain caused by reduced blood flow to the heart. Angina is a symptom of coronary artery disease.\nAngina, also called angina pectoris, is often described as squeezing, pressure, heaviness, tightness or pain in your chest. Some people with angina symptoms say angina feels like a vise squeezing their chest or a heavy weight lying on their chest. Angina may be a new pain that needs to be checked by a doctor, or recurring pain that goes away with treatment.<br\/>\nHere, 1 means yes and 0 means no __Angina__","ad39cdf7":"<center>In this notebook, I have performed in-depth Exploratory Data Analysis and some very basic  Hypothesis Testing. <\/center>\n<center style=\"color:green\"> If you found this notebook helpful, consider upvoting and leaving comments with suggestions. <\/center>","a5ca8b87":"### Gender\nHere 0 represents female and 1 represents male.","1e5730ba":"### Chest Pain Type vs Resting Blood Pressure","39371454":"* [1. Introduction and Imports](#Introduction-and-Imports)\n* [2. Exploratory Data Analysis](#Exploratory-Data-Analysis)\n    * [2.1 Gender](#Gender)\n    * [2.2 Age](#Age)\n    * [2.3 Exercise Induced Angina](#Exericse-Induced-Angina)\n    * [2.4 Resting Electrocardiographic Results](#Resting-Electrocardiographic-Results)\n    * [2.5 Chest Pain Type](#Chest-Pain-Type)\n    * [2.6 Cholestrol Distribution](#Cholestrol-Distribution)\n    * [2.7 Fasting Blood Sugar](#Fasting-Blood-Sugar)\n    * [2.8 Maximum Heart Rate Achieved](#Maximum-Heart-Rate-Achieved)\n    * [2.9 Target Variable Count](#Target-Variable-Count)\n* [3. In-depth Exploratory Data Analysis](#In-depth-Exploratory-Data-Analysis)\n    * [3.1 Gender VS Resting Blood Pressure](#Gender-VS-Resting-Blood-Pressure)\n    * [3.2 Gender vs Cholestrol](#Gender-vs-Cholestrol)\n    * [3.3 Chest Pain Type VS Gender](#Chest-Pain-Type-VS-Gender)\n    * [3.4 Chest Pain Type vs Resting Blood Pressure](#Chest-Pain-Type-vs-Resting-Blood-Pressure)\n    * [3.5 Chest Pain Vs Cholestrol](#Chest-Pain-Vs-Cholestrol)\n    * [3.6 Chances of getting Heartattack vs Maximum Blood Pressure](#Chances-of-getting-Heartattack-vs-Maximum-Blood-Pressure)\n    * [3.7 Chances of getting Heartattack vs Cholestrol](#Chances-of-getting-Heartattack-vs-Cholestrol)\n    * [3.8 Heat Map](#Heat-Map)\n* [4. Testing](#Hypothesis-Testing)\n    * [4.1 Shapiro Wilk Test](#Shapiro-Wilk-Test)\n    * [4.2 D\u2019Agostino\u2019s K^2 Test](#D\u2019Agostino\u2019s-K^2-Test)"}}