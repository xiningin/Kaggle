{"cell_type":{"fb890f04":"code","3ab87f29":"code","0a90fdaa":"code","d5eb026e":"code","28247c31":"code","b281354c":"code","cfd63bf9":"code","7b13cff2":"code","373f00a7":"code","0d3b84b0":"code","98505342":"code","033cf5e2":"code","c05eb2f5":"code","6d7f5c30":"code","dba10cb5":"code","7f26b631":"code","710c6cf7":"code","2786d65e":"code","749a1925":"code","0ae8606e":"code","ac759562":"code","d5f166c6":"code","0bfc422a":"code","f2e540ed":"code","c563d09c":"code","eaa8d3c1":"code","9c9b0d12":"code","a0666edb":"code","e8803012":"code","ae6958a8":"code","3ee538af":"code","01e2709b":"code","dc5c55e7":"code","474ca1ca":"markdown","50543e7e":"markdown","99e21be6":"markdown","217059a8":"markdown","6052ceea":"markdown","ac8b6fe2":"markdown","84389fc2":"markdown","23db9169":"markdown","1836ddca":"markdown","74707c43":"markdown","fe0959d9":"markdown","1bbd0623":"markdown","62c8cc97":"markdown","00b41a69":"markdown","256eb678":"markdown","f319fb4e":"markdown","39ad17c7":"markdown","6fd4fd2e":"markdown","a2921765":"markdown","8f29e4c2":"markdown","77d413f5":"markdown","ae52dd5c":"markdown","7cc8a7c7":"markdown","ec1db4d6":"markdown","43db8e44":"markdown","3a64ee06":"markdown"},"source":{"fb890f04":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\nfrom pandas import read_csv\nfrom pandas.plotting import scatter_matrix\n\nfrom numpy import mean\nfrom numpy import std\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.compose import ColumnTransformer\n\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import RepeatedStratifiedKFold\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import BaggingClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.linear_model import SGDClassifier\n\n\nfrom sklearn import model_selection\nfrom sklearn.metrics import accuracy_score,confusion_matrix, classification_report\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\n","3ab87f29":"df = pd.read_csv('..\/input\/adult-census-income\/adult.csv')\ndf.head()","0a90fdaa":"# drop rows with missing\ndf = df.dropna()","d5eb026e":"# summarize the shape of the dataset\nprint(df.shape)","28247c31":"df.describe()","b281354c":"df.info()","cfd63bf9":"df.isnull().values.any()","7b13cff2":"df['income']=LabelEncoder().fit_transform(df['income'])","373f00a7":"fig=plt.figure(figsize=(10,6))\nsns.countplot('workclass',data=df,hue=\"income\" )\nplt.tight_layout()\nplt.show()","0d3b84b0":"fig=plt.figure(figsize=(10,6))\nsns.countplot('education',data=df)\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","98505342":"fig=plt.figure(figsize=(10,6))\nsns.countplot('marital.status',data=df )\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","033cf5e2":"fig=plt.figure(figsize=(10,6))\nsns.countplot('occupation',data=df )\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","c05eb2f5":"fig=plt.figure(figsize=(10,6))\nsns.countplot('sex',data=df,hue=\"income\")\nplt.tight_layout()\nplt.show()","6d7f5c30":"fig=plt.figure(figsize=(10,6))\nsns.countplot('race',data=df )\nplt.tight_layout()\nplt.show()","dba10cb5":"fig=plt.figure(figsize=(10,6))\nsns.countplot('native.country',data=df.head(200) )\nplt.tight_layout()\nplt.show()","7f26b631":"f,ax=plt.subplots(1,3,figsize=(25,5))\nbox1=sns.boxplot(data=df[\"fnlwgt\"],ax=ax[0],color='m')\nax[0].set_xlabel('fnlwgt')\nbox1=sns.boxplot(data=df[\"hours.per.week\"],ax=ax[1],color='m')\nax[1].set_xlabel('hours.per.week')\nbox1=sns.boxplot(data=df[\"age\"],ax=ax[2],color='m')\nax[2].set_xlabel('age')","710c6cf7":"sns.boxplot(x=\"age\",y=\"sex\",hue=\"income\",data=df)","2786d65e":"#df1= df.corr()\ncorr = (df.corr())\nplt.subplots(figsize=(9, 9))\nsns.heatmap(corr, vmax=.8,annot=True,cmap=\"viridis\", square=True);","749a1925":"df1=df.drop(['income'],axis=1)\ndf1.hist (bins=10,figsize=(20,20))\nplt.show ()","0ae8606e":"sns.pairplot(data=df,kind='reg',size=5)","ac759562":"sns.pairplot(df,hue = 'income',vars = ['fnlwgt','hours.per.week','education.num'] )","d5f166c6":"ax = sns.violinplot(x=\"education.num\", y=\"income\", data=df, palette=\"muted\")","0bfc422a":"df=df.dropna()","f2e540ed":"df['sex'] = LabelEncoder().fit_transform(df['sex'])","c563d09c":"x = df.drop(['income','workclass','education','marital.status','occupation','relationship','race','native.country'],axis=1)\ny= df['income']\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3,random_state=101)","eaa8d3c1":"cat_ix = x.select_dtypes(include=['object', 'bool']).columns \nnum_ix = x.select_dtypes(include=['int64', 'float64']).columns ","9c9b0d12":"seed=101\nmodels = []\nmodels.append(('RF',RandomForestClassifier()))\nmodels.append(('SGDC',SGDClassifier()))\nmodels.append (('CART',DecisionTreeClassifier()))\nmodels.append (('BAG',BaggingClassifier()))\nmodels.append(('LR',LogisticRegression()))\nmodels.append(('GBM',GradientBoostingClassifier()))\nresults = []\nnames = []\nfor name, model in models:\n    cv=RepeatedStratifiedKFold(n_splits=10,n_repeats=3,random_state=seed)\n    cv_results = cross_val_score(model, x_train, y_train,scoring='accuracy',cv=cv,n_jobs=-1)\n    results.append(cv_results)\n    names.append(name)\n    msg = \"%s: %f (%f)\" %(name, cv_results.mean(), cv_results.std())\n    print(msg)","a0666edb":"from sklearn.metrics import classification_report, confusion_matrix\nlogistic = LogisticRegression()\nlogistic.fit(x_train,y_train)\ny_pred=logistic.predict(x_test)\nprint(classification_report(y_test,y_pred))\naccuracy1=logistic.score(x_test,y_test)\nprint (accuracy1*100,'%')\ncm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, annot= True)","e8803012":"des_class=DecisionTreeClassifier()\ndes_class.fit(x_train,y_train)\ndes_predict=des_class.predict(x_test)\nprint(classification_report(y_test,des_predict))\naccuracy3=des_class.score(x_test,y_test)\nprint(accuracy3*100,'%')\ncm = confusion_matrix(y_test, des_predict)\nsns.heatmap(cm, annot= True)","ae6958a8":"Bag=BaggingClassifier()\nBag.fit(x_train,y_train)\nBag_predict=Bag.predict(x_test)\nprint(classification_report(y_test,Bag_predict))\naccuracy3=Bag.score(x_test,y_test)\nprint(accuracy3*100,'%')\ncm = confusion_matrix(y_test, Bag_predict)\nsns.heatmap(cm, annot= True)","3ee538af":"from sklearn.ensemble import RandomForestClassifier \nran_class=RandomForestClassifier()\nran_class.fit(x_train,y_train)\nran_predict=ran_class.predict(x_test)\nprint(classification_report(y_test,ran_predict))\naccuracy3=ran_class.score(x_test,y_test)\nprint(accuracy3*100,'%')\ncm = confusion_matrix(y_test, ran_predict)\nsns.heatmap(cm, annot= True)","01e2709b":"Sgdc=SGDClassifier()\nSgdc.fit(x_train,y_train)\nSgdc_predict=Sgdc.predict(x_test)\nprint(classification_report(y_test,Sgdc_predict))\naccuracy3=Sgdc.score(x_test,y_test)\nprint(accuracy3*100,'%')\ncm = confusion_matrix(y_test, Sgdc_predict)\nsns.heatmap(cm, annot= True)","dc5c55e7":"gbc=GradientBoostingClassifier()\ngbc.fit(x_train,y_train)\ngbc_predict=gbc.predict(x_test)\nprint(classification_report(y_test,gbc_predict))\naccuracy3=gbc.score(x_test,y_test)\nprint(accuracy3*100,'%')\ncm = confusion_matrix(y_test, gbc_predict)\nsns.heatmap(cm, annot= True)","474ca1ca":"**Problem Statement:-** \n\nThe data here is for the \"Census Income\". This data is labeled with whether the person's yearly income is above or below $50K (and you are trying to model and predict this).\n\nThe data contains the following columns, along with a brief description of the data type (either \"continuous\" for numerical values, or a list of categorical values):\n\n1)age: continuous.\n\n2)workclass: Private, Self-emp-not-inc, Self-emp-inc, Federal-gov, Local-gov, State-gov, Without-pay, Never-worked.\n\n3)fnlwgt: continuous.\n\n4)education: Bachelors, Some-college, 11th, HS-grad, Prof-school, Assoc-acdm, Assoc-voc, 9th, 7th-8th, 12th, Masters, 1st-4th, 10th, Doctorate, 5th-6th, Preschool.\n\n5)education-num: continuous.\n\n6)marital-status: Married-civ-spouse, Divorced, Never-married, Separated, Widowed, Married-spouse-absent, Married-AF-spouse.\n\n7)occupation: Tech-support, Craft-repair, Other-service, Sales, Exec-managerial, Prof-specialty, Handlers-cleaners, Machine-op-inspct, Adm-clerical, Farming-fishing, Transport-moving, Priv-house-serv, Protective-serv, Armed-Forces.\n\n8)relationship: Wife, Own-child, Husband, Not-in-family, Other-relative, Unmarried.\n\n9)race: White, Asian-Pac-Islander, Amer-Indian-Eskimo, Other, Black.\n\n10)gender: Female, Male.\n\n11)capital-gain: continuous.\n\n12)capital-loss: continuous.\n\n13)hours-per-week: continuous.\n\n14)native-country: United-States, Cambodia, England, Puerto-Rico, Canada, Germany, Outlying-US(Guam-USVI-etc), India, Japan, Greece, South, China, Cuba, Iran, Honduras, Philippines, Italy, Poland, Jamaica, Vietnam, Mexico, Portugal, Ireland, France, Dominican-Republic, Laos, Ecuador, Taiwan, Haiti, Columbia, Hungary, Guatemala, Nicaragua, Scotland, Thailand, Yugoslavia, El-Salvador, Trinadad&Tobago, Peru, Hong, Holand-Netherlands.\n\n15)Output adult.data contains one additional column for the label, which is >50K if the person's yearly income is greater than $50K, and otherwise <=50K.\n\nDATA VISUALIZATION IS DONE BY:-\n\n1)Count plot\n\n2)Histogram\n\n3)Boxplot\n\n4)Heatmap\n\n5)Pairplot\n\nMachine learning algorithm used:-\n\n1)Logistic Regression\n\n2)Decision Tree classifier\n\n3)Bagging Classifier\n\n4)Random Forest classifier\n\n5)SGD Classifier\n\n6)Gradient Boosting Classifier","50543e7e":"**Violinplot**","99e21be6":"# Classifying on the basis of income ","217059a8":"# 5.SGD Classifier","6052ceea":"# 6.Gradient Boosting Classifier ","ac8b6fe2":"# Drop missing values","84389fc2":"# Histograms of each features ","23db9169":"0=more than 50k\n\n1=less than 50k","1836ddca":"# Heatmap ","74707c43":"# classifying input and output ","fe0959d9":"1.Workclass","1bbd0623":"2.Eduacation","62c8cc97":"4.Occupation ","00b41a69":"# 2.Decision Tree Classifier ","256eb678":"# Cross Validation ","f319fb4e":"# 4.Random Forest classifier ","39ad17c7":"# 3.Bagging Classifier ","6fd4fd2e":"6.Race","a2921765":"3.Marital Status ","8f29e4c2":"# count plot","77d413f5":"# Importing dataset ","ae52dd5c":"# 1.Logistic Regression ","7cc8a7c7":"# Pairplot ","ec1db4d6":"# Box plot ","43db8e44":"7.Native Country","3a64ee06":"5.sex"}}