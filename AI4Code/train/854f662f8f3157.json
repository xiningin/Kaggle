{"cell_type":{"37bce69c":"code","014ef848":"code","47b666eb":"code","e24838cd":"code","b94d97a7":"code","2ce567dd":"code","3057d9ec":"code","3906ef13":"code","7023511a":"code","9d2a77c0":"code","79350e23":"code","6d8ae6dd":"markdown","2ee832a2":"markdown","32522599":"markdown"},"source":{"37bce69c":"import pandas as pd\nimport yake_helper_funcs as yhf\nfrom sklearn.cluster import SpectralClustering\nimport numpy as np\nimport itertools\n\nforum_posts = pd.read_csv(\"..\/input\/meta-kaggle\/ForumMessages.csv\")\n\n# get forum posts\n\n# subsample forum posts\nsample_posts = forum_posts.Message[-1000:].astype(str)","014ef848":"# extact keywords & tokenize\nkeywords = yhf.keywords_yake(sample_posts)\nkeywords_tokenized = yhf.tokenizing_after_YAKE(keywords)\nkeyword_sets = [set(post) for post in keywords_tokenized]\n","47b666eb":"\n# remove empty sets\nkeyword_sets_noempty = [x for x in keyword_sets if x]","e24838cd":"vectors = pd.read_csv(\"..\/input\/fine-tuning-word2vec-2-0\/kaggle_word2vec.model\", \n                      delim_whitespace=True,\n                      skiprows=[0], \n                      header=None\n                     )\n\n# set words as index rather than first column\nvectors.index = vectors[0]\nvectors.drop(0, axis=1, inplace=True)","b94d97a7":"def vectors_from_post(post):\n    all_words = [] \n\n    for words in post:\n        all_words.append(words) \n        \n    return(vectors[vectors.index.isin(all_words)])\n\n\ndef doc_embed_from_post(post):\n    test_vectors = vectors_from_post(post)\n\n    return(test_vectors.mean())","2ce567dd":"# get document embeddings for 100 posts\nnum_of_posts = 100\ndoc_embeddings = np.zeros([num_of_posts, 300])\n\n\n# TODO: handle posts where all words out OOV\nfor i in range(num_of_posts):\n    embeddings = np.array(doc_embed_from_post(keyword_sets[i]))\n    if np.isnan(embeddings).any():\n        doc_embeddings[i,:] = np.zeros([1,300])\n    else:\n        doc_embeddings[i,:] = embeddings","3057d9ec":"# note that (default) k-means label assignment didn't work well\nclustering = SpectralClustering(assign_labels=\"discretize\").fit(doc_embeddings)","3906ef13":"# look at the labels for each of the posts\nclustering.labels_","7023511a":"# explore our posts by cluster\npost_subset = keyword_sets[0:num_of_posts]\n\ndef get_keyword_set_by_cluster(number):\n    cluster_index = list(clustering.labels_ == number)\n    return(list(itertools.compress(post_subset, cluster_index)))","9d2a77c0":"# this cluster looks like it's out of vocabular\nget_keyword_set_by_cluster(3)","79350e23":"# this cluster looks like it's about deep learning\nget_keyword_set_by_cluster(6)","6d8ae6dd":"# Clustering!","2ee832a2":"# Extract set of keywords from each post","32522599":"# Get word vectors for keywords in post"}}