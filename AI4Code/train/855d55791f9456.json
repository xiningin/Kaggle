{"cell_type":{"50a2b14d":"code","2edd2f6b":"code","7838a6a0":"code","75117b4d":"code","6de7b871":"code","75bdfa19":"code","fe66b220":"code","7cdfc390":"code","ee92d4b5":"code","d436e91b":"code","1af73dfb":"code","59aade82":"code","cbdc8342":"code","283ad30f":"code","ffefbef5":"code","22691387":"code","b083d186":"markdown","3bc9e1d1":"markdown","d097afdd":"markdown","09e9fc0e":"markdown","598169fa":"markdown","9d6892d1":"markdown","7c8c87e3":"markdown","3e5d1f91":"markdown","f0b8cbfa":"markdown","afa0b741":"markdown","e790abb2":"markdown","a2938226":"markdown","54263542":"markdown","fdfac3d1":"markdown","bbb93655":"markdown","139b0cea":"markdown"},"source":{"50a2b14d":"from IPython.display import Image\nImage(\"..\/input\/students-timetables-university-of-brasilia\/Darcy Ribeiro3.jpg\")","2edd2f6b":"# First, we need to import the required libraries for data analysis\nimport numpy as np\nimport pandas as pd\n\n# We also need to import the system library that allows us importing the dataset\nimport os","7838a6a0":"# Now we import the csv file for the dataset and set all columns to the dtype 'string'\ndf = pd.read_csv(\"..\/input\/students-timetables-university-of-brasilia\/student_timetable.csv\", sep=';',\n                 dtype={'student_id':str,\n                        'year_demester':str,\n                        'course_id':str,\n                        'course_name':str,\n                        'weekday':str,\n                        'start_time':str,\n                        'end_time':str,\n                        'room_address':str})\ndf.head()","75117b4d":"# Let's see how many unique students are there for each semester\ndf_20191 = df.loc[df['year_semester']==20191]\ndf_20192 = df.loc[df['year_semester']==20192]\n\nprint('There are '\n      + str(len(df_20191.student_id.unique()))\n      + ' unique students in the 1st semester of 2019')\n\nprint('There are '\n      + str(len(df_20192.student_id.unique()))\n      + ' unique students in the 2nd semester of 2019')    ","6de7b871":"# Let's check how many different courses students may take each semester as well\nprint('There are '\n      + str(len(df_20191.course_id.unique()))\n      + ' unique courses in the 1st semester of 2019')\n\nprint('There are '\n      + str(len(df_20192.course_id.unique()))\n      + ' unique courses in the 2nd semester of 2019')    ","75bdfa19":"def to_basket(input_df):\n    df = input_df.copy()\n    basket = dict((el, []) for el in df.student_id.unique())\n    \n    for row in df.to_numpy():\n        student_id = row[0]\n        course_id = row[2]\n        cur_list = basket[student_id]\n        cur_list.sort()\n        \n        if course_id not in cur_list:\n            basket[student_id].append(course_id)\n            \n    return list(basket.values())","fe66b220":"basket20191 = to_basket(df_20191)\nbasket20192 = to_basket(df_20192)\nbasket = basket20191 + basket20192\n\n# Let's see the first elements of our list\nprint(basket[0:5])","7cdfc390":"#External package need to install\n!pip install apyori","ee92d4b5":"from apyori import apriori","d436e91b":"# First, we define our set of thresholds. For support, we will say the minimum\n# limit is 0.01 and for confidance we set a minimum value of 0.75;\nrules = apriori(basket,min_support=0.01,min_confidence=0.4)\n\n# Then, we save the results into a list\nResults = list(rules)\n\n# Finally, we convert these results into a dataframe\napriori_results = pd.DataFrame(Results)\n\n# Let's see how this dataframe looks like:\nprint('We found '\n      + str(len(apriori_results))\n      + ' pairs of itemsets that satisfy the conditions set')\n\napriori_results.head()","1af73dfb":"# We begin by creating the dataframe that will contain our final results\n\napriori_final = pd.DataFrame(columns=['X',\n                                 'Y', \n                                 'Support',\n                                 'Confidence_X-Y'])\n\n# Then we loop through the results dataframe and convert the values\n# into a more appropiate format\nfor i in range(apriori_results.shape[0]):\n    X_Y_list = apriori_results['ordered_statistics'][i][0]\n    \n    apriori_final.loc[i,'X'] = list(X_Y_list[0])\n    apriori_final.loc[i,'Y'] = list(X_Y_list[1])\n    apriori_final.loc[i,'Support'] = apriori_results['support'][i]\n    apriori_final.loc[i,'Confidence_X-Y'] = X_Y_list[2]\n\napriori_final","59aade82":"course_name_by_id = df[['course_id','course']].drop_duplicates()\ncourse_name_by_id.head()","cbdc8342":"# For each row of our df_final dataframe\nfor i in range(apriori_final.shape[0]):\n\n    # For each item that composes the 'X' itemset\n    for j in range(len(apriori_final.loc[i,'X'])):\n        \n        # We substitute this item id for its name, according to the mapped dataframe\n        apriori_final.loc[i,'X'][j] = course_name_by_id.loc[course_name_by_id['course_id']==apriori_final.loc[i,'X'][j]].course.values[0]\n\n    # For each item that composes the 'Y' itemset        \n    for j in range(len(apriori_final.loc[i,'Y'])):\n        \n        # We substitute this item id for its name, according to the mapped dataframe\n        apriori_final.loc[i,'Y'][j] = course_name_by_id.loc[course_name_by_id['course_id']==apriori_final.loc[i,'Y'][j]].course.values[0]\n\napriori_final","283ad30f":"rooms_20191 = df_20191[['course','room_address']]\nrooms_algorithms = rooms_20191.loc[rooms_20191['course']=='Algorithms And Computer Programming']\nrooms_algorithms.drop_duplicates()","ffefbef5":"rooms_calculus1 = rooms_20191.loc[rooms_20191['course']=='Calculus 1']\nrooms_calculus1.drop_duplicates()","22691387":"Image(\"..\/input\/students-timetables-university-of-brasilia\/Algorithms-and-Calculus.jpg\")","b083d186":"Based on the location information on the previous tables, we can see in Figure 2 that some *Calculus 1* locations are pretty far away from *Algorithms And Computer Programming* locations, even though it's pretty probable that students taking *Algorithms And Computer Programming* classes are also taking *Calculus 1*. The orange line in Figure 2 indicates that students may walk more than 1.2 km when going from one class to another.","3bc9e1d1":"We need to format these results. According to the [unnoficial documentation](https:\/\/zaxrosenberg.com\/unofficial-apyori-documentation\/) of the Apyori library, the 'ordered_statistics' output is formated as:","d097afdd":"In order to run the Apriori algorithm and obtain the association rules, we need to define minimum support and minimum confidence thresholds. Let's recap some definitions:\n\n* **Itemset** is a collection of one or more items. In our example, the items are courses at the University. E.g., [Calculus 1, Physics 1, Experimental Physics 1] etc\n* **Support count** is the frequency of occurence of an itemset. E.g., suppose that 300 students take the set of courses [Calculus 1, Physics 1]\n* **Association rule** is an implication expression of the form X -> Y, where X and Y are itemsets. E.g., [Physics 1, Experimental Physics 1] -> [Calculus] (which means that there is an association between taking the courses [Physics 1. Experimental Physics 1] and taking the course [Calculus]\n* **Support** of itemsets X and Y refer to the fraction of transactions that contain both X and Y. E.g., perhaps 220 out of all the 34000 students take the courses [Calculus 1, Physics 1, Experimental Physics 1], therefore the support of this set is 220\/34000 ~0.006\n* **Confidence** measures how often items in Y appear in transactions that contain X. E.g., out of the 300 students that take the set of courses [Calculus 1, Physics 1], there are 220 students that take [Experimental Physics 1] as well. So the confidence for the association [Calculus 1, Physics 1] -> [Experimental Physics 1] is equal to 220\/300 = 0.733\n\nLet's then run the Apriori algorithm in our dataset:","09e9fc0e":"# A Market Basket Approach for Improving Mobility at the University Campus\n\nThis notebook was developed by Daniele Miranda as part of the requirements for the completion of the \"Artificial Intelligence 2\" course, taught by Professor Li Weigang, at the Graduate Program in Informatics (PPGInf) of the University of Brasilia (UnB), Brazil.\n\n## 1. Introduction\n\nThe association analysis methodology is an important technique for exploring hidden relationships in large volumes of data (Tan, Steinbach & Kumar, 2005). A classical example is the analysis of *market basket transactions*, which are datasets that contain sets of items bought by individual customers. The objective, then, is to identify purchasing behavior patterns (which items are often bought together?) in order to support business decision processes (marketing promotions, for instance).\n\nOne of the most popular methods for pereforming association analysis is the *Apriori algorithm*. **This research aims to apply the market basket approach and the Apriori algorithm to student's timetables in order to identify courses in which students are usually enrolled at the same time. The idea is to ensure that courses that are usually taken at the same semester are alocated in classrooms that are close to each other, making mobility around the campus easier for students and professors.**\n\nI used student's timetable data from the University of Brasilia (UnB), in Brazil, referring to the 1st and 2nd semesters of 2019 (before the global pandemic). The following sections of this report present a detailed description of the dataset, the problem that I am trying to solve and the applied methods.\n\n## 2. Problem definition\n\nSometimes university campuses are so large that they look like a small city inside the actual city where they are located. This is the case for the main campus of University of Bras\u00edlia (UnB), in Brazil's capital city. The *Darcy Ribeiro* campus is situated at the heart of Bras\u00edlia, and it occupies an area of over 3 km2 (refer to Figure 1) with more than 70 buildings.","598169fa":"## 3. Dataset\n\nIn order to obtain student's timetables, I took advantage of the Brazilian Law that grants access to government information. Due to the fact that University of Brasilia is owned by the government, I was able to require anonimized information about student's timetables from both semesters of the 2019 academic year. I translated these tables into English and uploaded them into a Kaggle dataset. Let's now import this dataset into this notebook in order to explore its infomation.","9d6892d1":"We can't be sure if the same student_id was used for each student for each semester (20191 and 20192). Thus, we will create different lists for each semester and we will later append them to each other.","7c8c87e3":"Then we substitute the *course_ids* in our *apriori_final* dataframe for the respective course names","3e5d1f91":"It's better if we can see the course names instead of their ids. We start by creating a dataframe that maps each *course_id* to its respective name, from the original *df* dataframe:","f0b8cbfa":"## References\n\n* Tan, P-N; Steinbach, M; Kumar, V (2005). *Introduction to Data Mining*. 1 ed. Addison-Wesley Professional. 769 p.","afa0b741":"### 4.2 Implementing the Apriori algorithm\n\nIn order to implement the Apriori algorithm for our Market Basket Analysis, we will use the Python *apyory* library (https:\/\/pypi.org\/project\/apyori\/). Let's begin by installing this library.","e790abb2":"```python\n\nordered_statistics = [OrderedStatistic(X,\n                                       Y,\n                                       confidence(X->Y),\n                                       lift(X->Y)),\n                      OrderedStatistic(Y, \n                                       X, \n                                       confidence(Y->X), \n                                       lift(Y->X))]\n```","a2938226":"## 4. Method\n\n### 4.1 Organizing the input data\n\nIn order to implement the Apriori algorithm, we need our data to be in the format of a 'basket'. This means that the input to our model is a list of lists, in which each instance is the list of courses a certain individual takes in a given semester. We then define a function 'to_basket' that converts our original dataset into this list of lists.","54263542":"## 5. Conclusions\n\nThis study presented a potential application of Market Basket Analysis and the Apriori algorithm for identifying courses that undergraduate students usually take at the same semester at University of Brasilia. With these results, a better planning for room allocation can be made in order to reduce walking\/driving distances that the majority of students have to travel between classes.","fdfac3d1":"**Figure 1:** Map of the Darcy Ribeiro campus.\n\nDue to the large area of the campus, mobility may be very difficult for students, specially the ones that do not own a car. For example, a student may have a class that ends at 9:50 AM in a certain place of the campus and he\/she may have another class that starts at 10:00 AM in a building that is more than 2 km distant from the previous one. Even students that own a car struggle sometimes with these movements inside the campus because parking spaces are also difficult to find.","bbb93655":"Then we import the apriori package.","139b0cea":"### 4.3 Analysis of the results\n\nOur df_final dataframe showed that among all UnB students, each semester 1.32% of them take the courses *Algorithms And Computer Programming* and *Calculus 1* simultaneously. It is a lot, because each semester has more than 30,000 students, so the total group that take both courses is composed by almost 400 people.\n\nWe could also verify that more than 69% of the students that take the *Algorithms And Computer Programming* course are also taking the *Calculus 1* course. Let's see how these classes are geographically allocated in the first semester of 2019:"}}