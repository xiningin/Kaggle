{"cell_type":{"28d3f7b0":"code","b185fe63":"code","a77b2c03":"code","de77d4ce":"code","89a2e86d":"code","a27587ec":"code","1977d75c":"code","539714d0":"code","40cdb58d":"code","3645a459":"code","91ef3226":"code","04db77f2":"code","b0498eb6":"code","53a3c68a":"markdown","4b5c300b":"markdown","bd1a57ef":"markdown","007c0cb2":"markdown","ec32b15c":"markdown","6205f132":"markdown","a6c1979d":"markdown","b80849f9":"markdown","9070aa47":"markdown","0b29e122":"markdown","a6e467fa":"markdown","9556a1a8":"markdown","e1e14513":"markdown","4e234b49":"markdown","2dea6916":"markdown","3318796f":"markdown","c328d01c":"markdown","db31a527":"markdown","c5d62b78":"markdown","588e8f44":"markdown","5ad72dca":"markdown"},"source":{"28d3f7b0":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom scipy import stats\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\ndf = pd.read_csv('\/kaggle\/input\/star-dataset\/6 class csv.csv')","b185fe63":"fig = plt.figure(facecolor='#00008B', figsize=(13, 6))\n\n# axes\naxes1 = fig.add_axes([0, 0, 1, 1])\naxes2 = fig.add_axes([0, -1.25, 1, 1])\naxes3 = fig.add_axes([0, -2.5, 1, 1])\naxes4 = fig.add_axes([0, -3.75, 1, 1])\naxes5 = fig.add_axes([0, -5, 1, 1])\naxes6 = fig.add_axes([0, -6.25, 1, 1])\naxes7 = fig.add_axes([0, -7.5, 1, 1])\n\n# distplot\nsns.distplot(x=df['Temperature (K)'], color='white', ax=axes1, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==0]['Temperature (K)'], color='white', ax=axes2, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==1]['Temperature (K)'], color='white', ax=axes3, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==2]['Temperature (K)'], color='white', ax=axes4, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==3]['Temperature (K)'], color='white', ax=axes5, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==4]['Temperature (K)'], color='white', ax=axes6, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==5]['Temperature (K)'], color='white', ax=axes7, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\n\n# lines\naxes1.axvline(df['Temperature (K)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes1.axvline(df['Temperature (K)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes2.axvline(df[df['Star type']==0]['Temperature (K)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes2.axvline(df[df['Star type']==0]['Temperature (K)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes3.axvline(df[df['Star type']==1]['Temperature (K)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes3.axvline(df[df['Star type']==1]['Temperature (K)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes4.axvline(df[df['Star type']==2]['Temperature (K)'].describe()[1], ymin=0, ymax=0.8, color='goldenrod', linestyle=':', lw=6)\naxes4.axvline(df[df['Star type']==2]['Temperature (K)'].describe()[5], ymin=0, ymax=0.8, color='goldenrod', linestyle=':', lw=6)\naxes5.axvline(df[df['Star type']==3]['Temperature (K)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes5.axvline(df[df['Star type']==3]['Temperature (K)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes6.axvline(df[df['Star type']==4]['Temperature (K)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes6.axvline(df[df['Star type']==4]['Temperature (K)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes7.axvline(df[df['Star type']==5]['Temperature (K)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes7.axvline(df[df['Star type']==5]['Temperature (K)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\n\n# background color\naxes1.set_facecolor('#00008B')\naxes2.set_facecolor('#00008B')\naxes3.set_facecolor('#00008B')\naxes4.set_facecolor('#00008B')\naxes5.set_facecolor('#00008B')\naxes6.set_facecolor('#00008B')\naxes7.set_facecolor('#00008B')\n\n# labels\naxes1.set_ylabel('')\naxes1.set_xlabel('')\naxes2.set_ylabel('')\naxes2.set_xlabel('')\naxes3.set_ylabel('')\naxes3.set_xlabel('')\naxes4.set_ylabel('')\naxes4.set_xlabel('')\naxes5.set_ylabel('')\naxes5.set_xlabel('')\naxes6.set_ylabel('')\naxes6.set_xlabel('')\naxes7.set_ylabel('')\naxes7.set_xlabel('')\n\n# ticks\naxes1.tick_params(axis = 'x', colors='white')\naxes1.set_xticks(range(0, 51000, 5000))\naxes1.set_yticks([])\naxes2.tick_params(axis = 'x', colors='white')\naxes2.set_xticks(range(1500, 4001, 250))\naxes2.set_yticks([])\naxes3.tick_params(axis = 'x', colors='white')\naxes3.set_xticks(range(1500, 4001, 250))\naxes3.set_yticks([])\naxes4.tick_params(axis = 'x', colors='white')\naxes4.set_xticks(range(0, 30001, 2500))\naxes4.set_yticks([])\naxes5.tick_params(axis = 'x', colors='white')\naxes5.set_xticks(range(-10000, 50001, 5000))\naxes5.set_yticks([])\naxes6.tick_params(axis = 'x', colors='white')\naxes6.set_xticks(range(-10000, 50001, 5000))\naxes6.set_yticks([])\naxes7.tick_params(axis = 'x', colors='white')\naxes7.set_xticks(range(-10000, 50001, 5000))\naxes7.set_yticks([])\n\n# spines\naxes1.spines['bottom'].set_color('white')\naxes1.spines[['top', 'right', 'left']].set_visible(False)\naxes2.spines['bottom'].set_color('white')\naxes2.spines[['top', 'right', 'left']].set_visible(False)\naxes3.spines['bottom'].set_color('white')\naxes3.spines[['top', 'right', 'left']].set_visible(False)\naxes4.spines['bottom'].set_color('white')\naxes4.spines[['top', 'right', 'left']].set_visible(False)\naxes5.spines['bottom'].set_color('white')\naxes5.spines[['top', 'right', 'left']].set_visible(False)\naxes6.spines['bottom'].set_color('white')\naxes6.spines[['top', 'right', 'left']].set_visible(False)\naxes7.spines['bottom'].set_color('white')\naxes7.spines[['top', 'right', 'left']].set_visible(False)\n\n# annotate\naxes1.text(df['Temperature (K)'].describe()[1]-1000, 0.000162, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes1.text(df['Temperature (K)'].describe()[5]-1000, 0.000162, 'Median', color='white', fontsize=14, fontweight='bold')\naxes2.text(df[df['Star type']==0]['Temperature (K)'].describe()[1], 0.00165, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes2.text(df[df['Star type']==0]['Temperature (K)'].describe()[5]-180, 0.00165, 'Median', color='white', fontsize=14, fontweight='bold')\naxes3.text(df[df['Star type']==1]['Temperature (K)'].describe()[1]-120, 0.00185, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes3.text(df[df['Star type']==1]['Temperature (K)'].describe()[5]+10, 0.00185, 'Median', color='white', fontsize=14, fontweight='bold')\naxes4.text(df[df['Star type']==2]['Temperature (K)'].describe()[1]+120, 0.000142, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes4.text(df[df['Star type']==2]['Temperature (K)'].describe()[5]-2050, 0.000142, 'Median', color='white', fontsize=14, fontweight='bold')\naxes5.text(df[df['Star type']==3]['Temperature (K)'].describe()[1]+100, 0.000067, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes5.text(df[df['Star type']==3]['Temperature (K)'].describe()[5]-3050, 0.000067, 'Median', color='white', fontsize=14, fontweight='bold')\naxes6.text(df[df['Star type']==4]['Temperature (K)'].describe()[1]+300, 0.000082, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes6.text(df[df['Star type']==4]['Temperature (K)'].describe()[5]-4050, 0.000082, 'Median', color='white', fontsize=14, fontweight='bold')\naxes7.text(df[df['Star type']==5]['Temperature (K)'].describe()[1]-1500, 0.00022, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes7.text(df[df['Star type']==5]['Temperature (K)'].describe()[5]-1500, 0.00022, 'Median', color='white', fontsize=14, fontweight='bold')\n\n# stats\naxes1.text(21000, 0.00018, f'''Range of temperature between {round(df['Temperature (K)'].describe()[3])} and {round(df['Temperature (K)'].describe()[7])}.\nMean of temperature - {round(df['Temperature (K)'].describe()[1])}.\nMeadian of temperature - {round(df['Temperature (K)'].describe()[5])}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes2.text(1400, 0.00185, f'''Range of temperature between {round(df[df['Star type']==0]['Temperature (K)'].describe()[3])} and {round(df[df['Star type']==0]['Temperature (K)'].describe()[7])}.\nMean of temperature - {round(df[df['Star type']==0]['Temperature (K)'].describe()[1])}.\nMeadian of temperature - {round(df[df['Star type']==0]['Temperature (K)'].describe()[5])}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes3.text(1600, 0.00205, f'''Range of temperature between {round(df[df['Star type']==1]['Temperature (K)'].describe()[3])} and {round(df[df['Star type']==1]['Temperature (K)'].describe()[7])}.\nMean of temperature - {round(df[df['Star type']==1]['Temperature (K)'].describe()[1])}.\nMeadian of temperature - {round(df[df['Star type']==1]['Temperature (K)'].describe()[5])}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes4.text(20000, 0.000133, f'''Range of temperature between {round(df[df['Star type']==2]['Temperature (K)'].describe()[3])} and {round(df[df['Star type']==2]['Temperature (K)'].describe()[7])}.\nMean of temperature - {round(df[df['Star type']==2]['Temperature (K)'].describe()[1])}.\nMeadian of temperature - {round(df[df['Star type']==2]['Temperature (K)'].describe()[5])}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes5.text(25000, 0.000082, f'''Range of temperature between {round(df[df['Star type']==3]['Temperature (K)'].describe()[3])} and {round(df[df['Star type']==3]['Temperature (K)'].describe()[7])}.\nMean of temperature - {round(df[df['Star type']==3]['Temperature (K)'].describe()[1])}.\nMeadian of temperature - {round(df[df['Star type']==3]['Temperature (K)'].describe()[5])}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes6.text(25000, 0.000092, f'''Range of temperature between {round(df[df['Star type']==4]['Temperature (K)'].describe()[3])} and {round(df[df['Star type']==4]['Temperature (K)'].describe()[7])}.\nMean of temperature - {round(df[df['Star type']==4]['Temperature (K)'].describe()[1])}.\nMeadian of temperature - {round(df[df['Star type']==4]['Temperature (K)'].describe()[5])}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes7.text(20000, 0.00025, f'''Range of temperature between {round(df[df['Star type']==5]['Temperature (K)'].describe()[3])} and {round(df[df['Star type']==5]['Temperature (K)'].describe()[7])}.\nMean of temperature - {round(df[df['Star type']==5]['Temperature (K)'].describe()[1])}.\nMeadian of temperature - {round(df[df['Star type']==5]['Temperature (K)'].describe()[5])}.''', \ncolor='white', fontsize=14, fontweight='bold')\n\n# title\naxes1.text(-10000, 0.00027, 'Temperature distribution (all types)', color='white', fontsize=24, fontweight='bold')\naxes2.text(1350, 0.0028, 'Temperature distribution (brown dwarfs)', color='white', fontsize=24, fontweight='bold')\naxes3.text(1550, 0.0031, 'Temperature distribution (red dwarfs)', color='white', fontsize=24, fontweight='bold')\naxes4.text(-1000, 0.000183, 'Temperature distribution (white dwarfs)', color='white', fontsize=24, fontweight='bold')\naxes5.text(-13300, 0.00011, 'Temperature distribution (main sequence)', color='white', fontsize=24, fontweight='bold')\naxes6.text(-13300, 0.000135, 'Temperature distribution (supergiants)', color='white', fontsize=24, fontweight='bold')\naxes7.text(-15300, 0.00037, 'Temperature distribution (hypergiants)', color='white', fontsize=24, fontweight='bold')\n\nfig.show()","a77b2c03":"# replace\ndf['Star color'].replace({'Blue White' : 'Blue-white', 'Blue white' : 'Blue-white', 'Blue-White' : 'Blue-white', 'Blue white ' : 'Blue-white',\n                         'yellow-white' : 'White-Yellow', 'Yellowish White' : 'White-Yellow',\n                         'white' : 'White', 'Whitish' : 'White', \n                         'Blue ' : 'Blue',\n                         'yellowish' : 'Yellowish'}, inplace=True)\ndf['Sprectral_for_corr'] = df['Spectral Class'].replace({'M' : 0, 'B' : 1, 'A' : 2, 'F' : 3, 'O' : 4, 'K' : 5, 'G': 6})\n# corr features\ndf['Star_color_for_corr'] = df['Star color'].replace({'Red' : 0, 'Blue-white' : 1, 'White' : 2, 'White-Yellow' : 3,\n                                                     'Pale yellow orange' : 4, 'Blue' : 5, 'Orange': 6, 'Yellowish' : 7, 'Orange-Red' : 8})\n\nfig = plt.figure(facecolor='#00008B', figsize=(13, 6))\n\n# axes\naxes1 = fig.add_axes([0, 0, 1, 1])\naxes2 = fig.add_axes([0, -1.25, 1, 1])\naxes3 = fig.add_axes([0, -2.5, 1, 1])\naxes4 = fig.add_axes([0, -3.75, 1, 1])\naxes5 = fig.add_axes([0, -5, 1, 1])\naxes6 = fig.add_axes([0, -6.25, 1, 1])\n\n\n# regplot\nsns.regplot(x=df['Temperature (K)'], y=df['Luminosity(L\/Lo)'], color='white', ax=axes1, line_kws=dict(color='goldenrod', lw=5))\nsns.regplot(x=df['Temperature (K)'], y=df['Radius(R\/Ro)'], color='white', ax=axes2, line_kws=dict(color='goldenrod', lw=5))\nsns.regplot(x=df['Temperature (K)'], y=df['Absolute magnitude(Mv)'], color='white', ax=axes3, line_kws=dict(color='goldenrod', lw=5))\n\n# replace\ndf['Star color'].replace({'Blue White' : 'Blue-white', 'Blue white' : 'Blue-white', 'Blue-White' : 'Blue-white', 'Blue white ' : 'Blue-white',\n                         'yellow-white' : 'White-Yellow', 'Yellowish White' : 'White-Yellow',\n                         'white' : 'White', 'Whitish' : 'White', \n                         'Blue ' : 'Blue',\n                         'yellowish' : 'Yellowish'}, inplace=True)\n\n# stripplot\nsns.stripplot(y=df['Star color'], x=df['Temperature (K)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes4)\nsns.stripplot(y=df['Spectral Class'], x=df['Temperature (K)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes5)\nsns.stripplot(y=df['Star type'].replace({0 : 'Brownd dwarf', 1 : 'Red dwarf',\n                                        2 : 'White dwarf', 3 : 'Main Sequence',\n                                        4 : 'Supergiant', 5 : 'Hypergiant'}), \n              x=df['Temperature (K)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes6)\n\n# background color\naxes1.set_facecolor('#00008B')\naxes2.set_facecolor('#00008B')\naxes3.set_facecolor('#00008B')\naxes4.set_facecolor('#00008B')\naxes5.set_facecolor('#00008B')\naxes6.set_facecolor('#00008B')\n\n# labels\naxes1.set_ylabel('Luminosity(L\/Lo)', fontsize=16, color='white')\naxes1.set_xlabel('Temperature (K)', fontsize=16, color='white')\naxes2.set_ylabel('Radius(R\/Ro)', fontsize=16, color='white')\naxes2.set_xlabel('Temperature (K)', fontsize=16, color='white')\naxes3.set_ylabel('Absolute magnitude(Mv)', fontsize=16, color='white')\naxes3.set_xlabel('Temperature (K)', fontsize=16, color='white')\naxes4.set_ylabel('Star color', fontsize=16, color='white')\naxes4.set_xlabel('Temperature (K)', fontsize=16, color='white')\naxes5.set_ylabel('Spectral class', fontsize=16, color='white')\naxes5.set_xlabel('Temperature (K)', fontsize=16, color='white')\naxes6.set_ylabel('Star type', fontsize=16, color='white')\naxes6.set_xlabel('Temperature (K)', fontsize=16, color='white')\n\n# ticks\naxes1.tick_params(axis = 'both', colors='white')\naxes1.set_xticks(range(0, 41000, 5000))\naxes1.set_yticks(range(0, 800001, 100000))\naxes2.tick_params(axis = 'both', colors='white')\naxes2.set_xticks(range(0, 41000, 5000))\naxes2.set_yticks(range(0, 2001, 250))\naxes3.tick_params(axis = 'both', colors='white')\naxes3.set_xticks(range(0, 41000, 5000))\naxes3.set_yticks(range(-13, 22, 2))\naxes4.tick_params(axis = 'both', colors='white')\naxes4.set_xticks(range(0, 41000, 5000))\naxes5.tick_params(axis = 'both', colors='white')\naxes5.set_xticks(range(0, 41000, 5000))\naxes6.tick_params(axis = 'both', colors='white')\naxes6.set_xticks(range(0, 41000, 5000))\n\n# spines\naxes1.spines[['bottom', 'left']].set_color('white')\naxes1.spines[['top', 'right']].set_visible(False)\naxes2.spines[['bottom', 'left']].set_color('white')\naxes2.spines[['top', 'right']].set_visible(False)\naxes3.spines[['bottom', 'left']].set_color('white')\naxes3.spines[['top', 'right']].set_visible(False)\naxes4.spines[['bottom', 'left']].set_color('white')\naxes4.spines[['top', 'right']].set_visible(False)\naxes5.spines[['bottom', 'left']].set_color('white')\naxes5.spines[['top', 'right']].set_visible(False)\naxes6.spines[['bottom', 'left']].set_color('white')\naxes6.spines[['top', 'right']].set_visible(False)\n\n# annotate\naxes1.text(1000, 800000, f'''r = {round(df.corr('spearman')['Temperature (K)'][1], 2)} (weak positive correlation)''', fontsize=14, color='white', fontweight='bold')\naxes2.text(1000, 1950, f'''r = {round(df.corr('spearman')['Temperature (K)'][2], 2)} (weak positive correlation)''', fontsize=14, color='white', fontweight='bold')\naxes3.text(6000, 19, f'''r = {round(df.corr('spearman')['Temperature (K)'][3], 2)} (medium negative correlation)''', fontsize=14, color='white', fontweight='bold')\naxes4.text(30000, 3, f'''r = {round(df.corr('spearman')['Star_color_for_corr'][0], 2)} (strong positive correlation).\nThe most stars are red. \nThe hottest stars are blue.''', fontsize=14, color='white', fontweight='bold')\naxes5.text(27000, 3, f'''r = {round(df.corr('spearman')['Sprectral_for_corr'][0], 2)} (strong positive correlation).\nThe most stars have \"M\" spectral class. \nThe hottest stars have \"O\" spectral class.''', fontsize=14, color='white', fontweight='bold')\naxes6.text(23000, 1, f'''r = {round(df.corr('spearman')['Star type'][0], 2)} (medium positive correlation)\nThe hottest stars are main sequence, supergiants and hypergiants.''', fontsize=14, color='white', fontweight='bold')\n\n# title\naxes1.text(-3000, 950000, 'Ratio between Temperature (K) and Luminosity(L\/Lo)', fontsize=24, color='white', fontweight='bold')\naxes2.text(-3000, 2150, 'Ratio between Temperature (K) and Radius(R\/Ro)', fontsize=24, color='white', fontweight='bold')\naxes3.text(-3000, 23.5, 'Ratio between Temperature (K) and Absolute magnitude(Mv)', fontsize=24, color='white', fontweight='bold')\naxes4.text(-3000, -0.9, 'Ratio between Temperature (K) and Star color', fontsize=24, color='white', fontweight='bold')\naxes5.text(-3000, -0.9, 'Ratio between Temperature (K) and Spectral class', fontsize=24, color='white', fontweight='bold')\naxes6.text(-3000, -0.9, 'Ratio between Temperature (K) and Star type', fontsize=24, color='white', fontweight='bold')\n\nfig.show()","de77d4ce":"fig = plt.figure(facecolor='#00008B', figsize=(13, 6))\n\n# axes\naxes1 = fig.add_axes([0, 0, 1, 1])\naxes2 = fig.add_axes([0, -1.25, 1, 1])\naxes3 = fig.add_axes([0, -2.5, 1, 1])\naxes4 = fig.add_axes([0, -3.75, 1, 1])\naxes5 = fig.add_axes([0, -5, 1, 1])\naxes6 = fig.add_axes([0, -6.25, 1, 1])\naxes7 = fig.add_axes([0, -7.5, 1, 1])\n\n# distplot\nsns.distplot(x=df['Luminosity(L\/Lo)'], color='white', ax=axes1, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==0]['Luminosity(L\/Lo)'], color='white', ax=axes2, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==1]['Luminosity(L\/Lo)'], color='white', ax=axes3, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==2]['Luminosity(L\/Lo)'], color='white', ax=axes4, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==3]['Luminosity(L\/Lo)'], color='white', ax=axes5, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==4]['Luminosity(L\/Lo)'], color='white', ax=axes6, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==5]['Luminosity(L\/Lo)'], color='white', ax=axes7, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\n\n# lines\naxes1.axvline(df['Luminosity(L\/Lo)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes1.axvline(df['Luminosity(L\/Lo)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes2.axvline(df[df['Star type']==0]['Luminosity(L\/Lo)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes2.axvline(df[df['Star type']==0]['Luminosity(L\/Lo)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes3.axvline(df[df['Star type']==1]['Luminosity(L\/Lo)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes3.axvline(df[df['Star type']==1]['Luminosity(L\/Lo)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes4.axvline(df[df['Star type']==2]['Luminosity(L\/Lo)'].describe()[1], ymin=0, ymax=0.8, color='goldenrod', linestyle=':', lw=6)\naxes4.axvline(df[df['Star type']==2]['Luminosity(L\/Lo)'].describe()[5], ymin=0, ymax=0.8, color='goldenrod', linestyle=':', lw=6)\naxes5.axvline(df[df['Star type']==3]['Luminosity(L\/Lo)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes5.axvline(df[df['Star type']==3]['Luminosity(L\/Lo)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes6.axvline(df[df['Star type']==4]['Luminosity(L\/Lo)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes6.axvline(df[df['Star type']==4]['Luminosity(L\/Lo)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes7.axvline(df[df['Star type']==5]['Luminosity(L\/Lo)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes7.axvline(df[df['Star type']==5]['Luminosity(L\/Lo)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\n\n# background color\naxes1.set_facecolor('#00008B')\naxes2.set_facecolor('#00008B')\naxes3.set_facecolor('#00008B')\naxes4.set_facecolor('#00008B')\naxes5.set_facecolor('#00008B')\naxes6.set_facecolor('#00008B')\naxes7.set_facecolor('#00008B')\n\n# labels\naxes1.set_ylabel('')\naxes1.set_xlabel('')\naxes2.set_ylabel('')\naxes2.set_xlabel('')\naxes3.set_ylabel('')\naxes3.set_xlabel('')\naxes4.set_ylabel('')\naxes4.set_xlabel('')\naxes5.set_ylabel('')\naxes5.set_xlabel('')\naxes6.set_ylabel('')\naxes6.set_xlabel('')\naxes7.set_ylabel('')\naxes7.set_xlabel('')\n\n# ticks\naxes1.tick_params(axis = 'x', colors='white')\naxes1.set_yticks([])\naxes2.tick_params(axis = 'x', colors='white')\naxes2.set_yticks([])\naxes3.tick_params(axis = 'x', colors='white')\naxes3.set_yticks([])\naxes4.tick_params(axis = 'x', colors='white')\naxes4.set_yticks([])\naxes5.tick_params(axis = 'x', colors='white')\naxes5.set_yticks([])\naxes6.tick_params(axis = 'x', colors='white')\naxes6.set_yticks([])\naxes7.tick_params(axis = 'x', colors='white')\naxes7.set_yticks([])\n\n# spines\naxes1.spines['bottom'].set_color('white')\naxes1.spines[['top', 'right', 'left']].set_visible(False)\naxes2.spines['bottom'].set_color('white')\naxes2.spines[['top', 'right', 'left']].set_visible(False)\naxes3.spines['bottom'].set_color('white')\naxes3.spines[['top', 'right', 'left']].set_visible(False)\naxes4.spines['bottom'].set_color('white')\naxes4.spines[['top', 'right', 'left']].set_visible(False)\naxes5.spines['bottom'].set_color('white')\naxes5.spines[['top', 'right', 'left']].set_visible(False)\naxes6.spines['bottom'].set_color('white')\naxes6.spines[['top', 'right', 'left']].set_visible(False)\naxes7.spines['bottom'].set_color('white')\naxes7.spines[['top', 'right', 'left']].set_visible(False)\n\n# annotate\naxes1.text(df['Luminosity(L\/Lo)'].describe()[1]-30000,  0.00001, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes1.text(df['Luminosity(L\/Lo)'].describe()[5]-30000,  0.00001, 'Median', color='white', fontsize=14, fontweight='bold')\naxes2.text(df[df['Star type']==0]['Luminosity(L\/Lo)'].describe()[1], 900, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes2.text(df[df['Star type']==0]['Luminosity(L\/Lo)'].describe()[5]-0.0005, 900, 'Median', color='white', fontsize=14, fontweight='bold')\naxes3.text(df[df['Star type']==1]['Luminosity(L\/Lo)'].describe()[1], 125, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes3.text(df[df['Star type']==1]['Luminosity(L\/Lo)'].describe()[5]-0.003, 125, 'Median', color='white', fontsize=14, fontweight='bold')\naxes4.text(df[df['Star type']==2]['Luminosity(L\/Lo)'].describe()[1], 290, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes4.text(df[df['Star type']==2]['Luminosity(L\/Lo)'].describe()[5]-0.005, 290, 'Median', color='white', fontsize=14, fontweight='bold')\naxes5.text(df[df['Star type']==3]['Luminosity(L\/Lo)'].describe()[1]-10000, 0.000045, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes5.text(df[df['Star type']==3]['Luminosity(L\/Lo)'].describe()[5]-25000, 0.000045, 'Median', color='white', fontsize=14, fontweight='bold')\naxes6.text(df[df['Star type']==4]['Luminosity(L\/Lo)'].describe()[1]-20000, 0.00000513, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes6.text(df[df['Star type']==4]['Luminosity(L\/Lo)'].describe()[5]-70000, 0.00000513, 'Median', color='white', fontsize=14, fontweight='bold')\naxes7.text(df[df['Star type']==5]['Luminosity(L\/Lo)'].describe()[1]-15000, 0.00000295, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes7.text(df[df['Star type']==5]['Luminosity(L\/Lo)'].describe()[5]-90000, 0.00000295, 'Median', color='white', fontsize=14, fontweight='bold')\n\n# stats\naxes1.text(385000, 0.00001, f'''Range of luminosity between {df['Luminosity(L\/Lo)'].describe()[3]} and {round(df['Luminosity(L\/Lo)'].describe()[7])}.\nMean of luminosity - {round(df['Luminosity(L\/Lo)'].describe()[1])}.\nMeadian of luminosity - {round(df['Luminosity(L\/Lo)'].describe()[5], 3)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes2.text(0.0025, 1000, f'''Range of luminosity between {round(df[df['Star type']==0]['Luminosity(L\/Lo)'].describe()[3], 5)} and {df[df['Star type']==0]['Luminosity(L\/Lo)'].describe()[7]}.\nMean of luminosity - {round(df[df['Star type']==0]['Luminosity(L\/Lo)'].describe()[1], 5)}.\nMeadian of luminosity - {round(df[df['Star type']==0]['Luminosity(L\/Lo)'].describe()[5], 5)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes3.text(0.015, 120, f'''Range of luminosity between {df[df['Star type']==1]['Luminosity(L\/Lo)'].describe()[3]} and {df[df['Star type']==1]['Luminosity(L\/Lo)'].describe()[7]}.\nMean of luminosity - {round(df[df['Star type']==1]['Luminosity(L\/Lo)'].describe()[1], 4)}.\nMeadian of luminosity - {round(df[df['Star type']==1]['Luminosity(L\/Lo)'].describe()[5], 4)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes4.text(0.015, 220, f'''Range of luminosity between {df[df['Star type']==2]['Luminosity(L\/Lo)'].describe()[3]} and {df[df['Star type']==2]['Luminosity(L\/Lo)'].describe()[7]}.\nMean of luminosity - {round(df[df['Star type']==2]['Luminosity(L\/Lo)'].describe()[1], 4)}.\nMeadian of luminosity - {round(df[df['Star type']==2]['Luminosity(L\/Lo)'].describe()[5], 4)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes5.text(75000, 0.00005, f'''Range of luminosity between {df[df['Star type']==3]['Luminosity(L\/Lo)'].describe()[3]} and {round(df[df['Star type']==3]['Luminosity(L\/Lo)'].describe()[7])}.\nMean of luminosity - {round(df[df['Star type']==3]['Luminosity(L\/Lo)'].describe()[1])}.\nMeadian of luminosity - {round(df[df['Star type']==3]['Luminosity(L\/Lo)'].describe()[5])}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes6.text(425000, 0.00000555, f'''Range of luminosity between {df[df['Star type']==4]['Luminosity(L\/Lo)'].describe()[3]} and {round(df[df['Star type']==4]['Luminosity(L\/Lo)'].describe()[7])}.\nMean of luminosity - {round(df[df['Star type']==4]['Luminosity(L\/Lo)'].describe()[1])}.\nMeadian of luminosity - {round(df[df['Star type']==4]['Luminosity(L\/Lo)'].describe()[5])}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes7.text(425000, 0.00000355, f'''Range of luminosity between {df[df['Star type']==5]['Luminosity(L\/Lo)'].describe()[3]} and {round(df[df['Star type']==5]['Luminosity(L\/Lo)'].describe()[7])}.\nMean of luminosity - {round(df[df['Star type']==5]['Luminosity(L\/Lo)'].describe()[1])}.\nMeadian of luminosity - {round(df[df['Star type']==5]['Luminosity(L\/Lo)'].describe()[5])}.''', \ncolor='white', fontsize=14, fontweight='bold')\n\n# title\naxes1.text(-300000, 0.000017, 'Luminosity distribution (all types)', color='white', fontsize=24, fontweight='bold')\naxes2.text(-0.0019, 1600, 'Luminosity distribution (brown dwarfs)', color='white', fontsize=24, fontweight='bold')\naxes3.text(-0.0162, 220, 'Luminosity distribution (red dwarfs)', color='white', fontsize=24, fontweight='bold')\naxes4.text(-0.021, 385, 'Luminosity distribution (white dwarfs)', color='white', fontsize=24, fontweight='bold')\naxes5.text(-140000, 0.000077, 'Luminosity distribution (main sequence)', color='white', fontsize=24, fontweight='bold')\naxes6.text(-260000, 0.0000088, 'Luminosity distribution (supergiants)', color='white', fontsize=24, fontweight='bold')\naxes7.text(-350000, 0.0000051, 'Luminosity distribution (hypergiants)', color='white', fontsize=24, fontweight='bold')\n\nfig.show()","89a2e86d":"fig = plt.figure(facecolor='#00008B', figsize=(13, 6))\n\n# axes\naxes1 = fig.add_axes([0, 0, 1, 1])\naxes2 = fig.add_axes([0, -1.25, 1, 1])\naxes3 = fig.add_axes([0, -2.5, 1, 1])\naxes4 = fig.add_axes([0, -3.75, 1, 1])\naxes5 = fig.add_axes([0, -5, 1, 1])\naxes6 = fig.add_axes([0, -6.25, 1, 1])\n\n\n# regplot\nsns.regplot(x=df['Luminosity(L\/Lo)'], y=df['Temperature (K)'], color='white', ax=axes1, line_kws=dict(color='goldenrod', lw=5))\nsns.regplot(x=df['Luminosity(L\/Lo)'], y=df['Radius(R\/Ro)'], color='white', ax=axes2, line_kws=dict(color='goldenrod', lw=5))\nsns.regplot(x=df['Luminosity(L\/Lo)'], y=df['Absolute magnitude(Mv)'], color='white', ax=axes3, line_kws=dict(color='goldenrod', lw=5))\n# stripplot\nsns.stripplot(y=df['Star color'], x=df['Luminosity(L\/Lo)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes4)\nsns.stripplot(y=df['Spectral Class'], x=df['Luminosity(L\/Lo)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes5)\nsns.stripplot(y=df['Star type'].replace({0 : 'Brownd dwarf', 1 : 'Red dwarf',\n                                        2 : 'White dwarf', 3 : 'Main Sequence',\n                                        4 : 'Supergiant', 5 : 'Hypergiant'}), \n              x=df['Luminosity(L\/Lo)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes6)\n\n# background color\naxes1.set_facecolor('#00008B')\naxes2.set_facecolor('#00008B')\naxes3.set_facecolor('#00008B')\naxes4.set_facecolor('#00008B')\naxes5.set_facecolor('#00008B')\naxes6.set_facecolor('#00008B')\n\n# spines\naxes1.spines['bottom'].set_color('white')\naxes1.spines[['top', 'right', 'left']].set_visible(False)\naxes2.spines['bottom'].set_color('white')\naxes2.spines[['top', 'right', 'left']].set_visible(False)\naxes3.spines['bottom'].set_color('white')\naxes3.spines[['top', 'right', 'left']].set_visible(False)\naxes4.spines['bottom'].set_color('white')\naxes4.spines[['top', 'right', 'left']].set_visible(False)\naxes5.spines['bottom'].set_color('white')\naxes5.spines[['top', 'right', 'left']].set_visible(False)\naxes6.spines['bottom'].set_color('white')\naxes6.spines[['top', 'right', 'left']].set_visible(False)\n\n# labels\naxes1.set_ylabel('Temperature (K)', fontsize=16, color='white')\naxes1.set_xlabel('Luminosity(L\/Lo)', fontsize=16, color='white')\naxes2.set_ylabel('Radius(R\/Ro)', fontsize=16, color='white')\naxes2.set_xlabel('Luminosity(L\/Lo)', fontsize=16, color='white')\naxes3.set_ylabel('Absolute magnitude(Mv)', fontsize=16, color='white')\naxes3.set_xlabel('Luminosity(L\/Lo)', fontsize=16, color='white')\naxes4.set_ylabel('Star color', fontsize=16, color='white')\naxes4.set_xlabel('Luminosity(L\/Lo)', fontsize=16, color='white')\naxes5.set_ylabel('Spectral class', fontsize=16, color='white')\naxes5.set_xlabel('Luminosity(L\/Lo)', fontsize=16, color='white')\naxes6.set_ylabel('Star type', fontsize=16, color='white')\naxes6.set_xlabel('Luminosity(L\/Lo)', fontsize=16, color='white')\n\n# ticks\naxes1.tick_params(axis = 'both', colors='white')\naxes1.set_xticks(range(0, 800001, 100000))\naxes1.set_yticks(range(0, 41000, 5000))\naxes2.tick_params(axis = 'both', colors='white')\naxes2.set_xticks(range(0, 800001, 100000))\naxes2.set_yticks(range(0, 2001, 250))\naxes3.tick_params(axis = 'both', colors='white')\naxes3.set_xticks(range(0, 800001, 100000))\naxes3.set_yticks(range(-30, 21, 5))\naxes4.tick_params(axis = 'both', colors='white')\naxes4.set_xticks(range(0, 800001, 100000))\naxes5.tick_params(axis = 'both', colors='white')\naxes5.set_xticks(range(0, 800001, 100000))\naxes6.tick_params(axis = 'both', colors='white')\naxes6.set_xticks(range(0, 800001, 100000))\n\n# annotate\naxes1.text(450000, 35000, f'''r = {round(df.corr('spearman')['Luminosity(L\/Lo)'][0], 2)} (weak positive correlation)''', fontsize=14, color='white', fontweight='bold')\naxes2.text(450000, 1800, f'''r = {round(df.corr('spearman')['Luminosity(L\/Lo)'][2], 2)} (strong positive correlation)''', fontsize=14, color='white', fontweight='bold')\naxes3.text(450000, 9, f'''r = {round(df.corr('spearman')['Luminosity(L\/Lo)'][3], 2)} (strong negative correlation)''', fontsize=14, color='white', fontweight='bold')\naxes4.text(450000, 3.7, f'''r = {round(df.corr('spearman')['Star_color_for_corr'][1], 2)} (weak positive correlation).\nThe maximum luminosity - blue-white and blue stars.\nThe luminosity of White-Yellow, Pale yellow orange, \nYellowish and Orange-Red stars is not more than 10.''', fontsize=14, color='white', fontweight='bold')\naxes5.text(450000, 3.3, f''' r = {round(df.corr('spearman')['Sprectral_for_corr'][1], 2)} (weak positive correlation).\nThe maximum luminosity - \"B\" and \"O\" spectral classes.\nThe luminosity of \"F\" spectral class is not more than 10.''', fontsize=14, color='white', fontweight='bold')\naxes6.text(450000, 1, f'''r = {round(df.corr('spearman')['Star type'][1], 2)} (strong positive correlation)\nBrown, red and white dwarfs - minimum luminosity;\nStars of main sequence - medium luminosity;\nSupergiants and Hypergiants - maximum luminosity''', fontsize=14, color='white', fontweight='bold')\n\n# title\naxes1.text(-85000, 47000, 'Ratio between Luminosity(L\/Lo) and Temperature (K)', fontsize=24, color='white', fontweight='bold')\naxes2.text(-85000, 2200, 'Ratio between Luminosity(L\/Lo) and Radius(R\/Ro)', fontsize=24, color='white', fontweight='bold')\naxes3.text(-85000, 22, 'Ratio between Luminosity(L\/Lo) and Absolute magnitude(Mv)', fontsize=24, color='white', fontweight='bold')\naxes4.text(-125000, -0.9, 'Ratio between Luminosity(L\/Lo) and Star color', fontsize=24, color='white', fontweight='bold')\naxes5.text(-125000, -0.9, 'Ratio between Luminosity(L\/Lo) and Spectral Class', fontsize=24, color='white', fontweight='bold')\naxes6.text(-125000, -0.9, 'Ratio between Luminosity(L\/Lo) and Star type', fontsize=24, color='white', fontweight='bold')\n\nfig.show()","a27587ec":"fig = plt.figure(facecolor='#00008B', figsize=(13, 6))\n\n# axes\naxes1 = fig.add_axes([0, 0, 1, 1])\naxes2 = fig.add_axes([0, -1.25, 1, 1])\naxes3 = fig.add_axes([0, -2.5, 1, 1])\naxes4 = fig.add_axes([0, -3.75, 1, 1])\naxes5 = fig.add_axes([0, -5, 1, 1])\naxes6 = fig.add_axes([0, -6.25, 1, 1])\naxes7 = fig.add_axes([0, -7.5, 1, 1])\n\n# distplot\nsns.distplot(x=df['Radius(R\/Ro)'], color='white', ax=axes1, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==0]['Radius(R\/Ro)'], color='white', ax=axes2, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==1]['Radius(R\/Ro)'], color='white', ax=axes3, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==2]['Radius(R\/Ro)'], color='white', ax=axes4, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==3]['Radius(R\/Ro)'], color='white', ax=axes5, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==4]['Radius(R\/Ro)'], color='white', ax=axes6, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==5]['Radius(R\/Ro)'], color='white', ax=axes7, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\n\n# lines\naxes1.axvline(df['Radius(R\/Ro)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes1.axvline(df['Radius(R\/Ro)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes2.axvline(df[df['Star type']==0]['Radius(R\/Ro)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes2.axvline(df[df['Star type']==0]['Radius(R\/Ro)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes3.axvline(df[df['Star type']==1]['Radius(R\/Ro)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes3.axvline(df[df['Star type']==1]['Radius(R\/Ro)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes4.axvline(df[df['Star type']==2]['Radius(R\/Ro)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes4.axvline(df[df['Star type']==2]['Radius(R\/Ro)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes5.axvline(df[df['Star type']==3]['Radius(R\/Ro)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes5.axvline(df[df['Star type']==3]['Radius(R\/Ro)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes6.axvline(df[df['Star type']==4]['Radius(R\/Ro)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes6.axvline(df[df['Star type']==4]['Radius(R\/Ro)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes7.axvline(df[df['Star type']==5]['Radius(R\/Ro)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes7.axvline(df[df['Star type']==5]['Radius(R\/Ro)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\n\n# background color\naxes1.set_facecolor('#00008B')\naxes2.set_facecolor('#00008B')\naxes3.set_facecolor('#00008B')\naxes4.set_facecolor('#00008B')\naxes5.set_facecolor('#00008B')\naxes6.set_facecolor('#00008B')\naxes7.set_facecolor('#00008B')\n\n\n# labels\naxes1.set_ylabel('')\naxes1.set_xlabel('')\naxes2.set_ylabel('')\naxes2.set_xlabel('')\naxes3.set_ylabel('')\naxes3.set_xlabel('')\naxes4.set_ylabel('')\naxes4.set_xlabel('')\naxes5.set_ylabel('')\naxes5.set_xlabel('')\naxes6.set_ylabel('')\naxes6.set_xlabel('')\naxes7.set_ylabel('')\naxes7.set_xlabel('')\n\n# ticks\naxes1.tick_params(axis = 'x', colors='white')\naxes1.set_yticks([])\naxes2.tick_params(axis = 'x', colors='white')\naxes2.set_yticks([])\naxes3.tick_params(axis = 'x', colors='white')\naxes3.set_yticks([])\naxes4.tick_params(axis = 'x', colors='white')\naxes4.set_yticks([])\naxes5.tick_params(axis = 'x', colors='white')\naxes5.set_yticks([])\naxes6.tick_params(axis = 'x', colors='white')\naxes6.set_yticks([])\naxes7.tick_params(axis = 'x', colors='white')\naxes7.set_yticks([])\n\n# spines\naxes1.spines['bottom'].set_color('white')\naxes1.spines[['top', 'right', 'left']].set_visible(False)\naxes2.spines['bottom'].set_color('white')\naxes2.spines[['top', 'right', 'left']].set_visible(False)\naxes3.spines['bottom'].set_color('white')\naxes3.spines[['top', 'right', 'left']].set_visible(False)\naxes4.spines['bottom'].set_color('white')\naxes4.spines[['top', 'right', 'left']].set_visible(False)\naxes5.spines['bottom'].set_color('white')\naxes5.spines[['top', 'right', 'left']].set_visible(False)\naxes6.spines['bottom'].set_color('white')\naxes6.spines[['top', 'right', 'left']].set_visible(False)\naxes7.spines['bottom'].set_color('white')\naxes7.spines[['top', 'right', 'left']].set_visible(False)\n\n# annotate\naxes1.text(df['Radius(R\/Ro)'].describe()[1]-45,  0.0056, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes1.text(df['Radius(R\/Ro)'].describe()[5]-45,  0.0056, 'Median', color='white', fontsize=14, fontweight='bold')\naxes2.text(df[df['Star type']==0]['Radius(R\/Ro)'].describe()[1],  22, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes2.text(df[df['Star type']==0]['Radius(R\/Ro)'].describe()[5]-0.012,  22, 'Median', color='white', fontsize=14, fontweight='bold')\naxes3.text(df[df['Star type']==1]['Radius(R\/Ro)'].describe()[1],  2.6, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes3.text(df[df['Star type']==1]['Radius(R\/Ro)'].describe()[5]-0.07,  2.6, 'Median', color='white', fontsize=14, fontweight='bold')\naxes4.text(df[df['Star type']==2]['Radius(R\/Ro)'].describe()[1]-0.0002,  300, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes4.text(df[df['Star type']==2]['Radius(R\/Ro)'].describe()[5]-0.0005,  300, 'Median', color='white', fontsize=14, fontweight='bold')\naxes5.text(df[df['Star type']==3]['Radius(R\/Ro)'].describe()[1]-0.4,  0.33, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes5.text(df[df['Star type']==3]['Radius(R\/Ro)'].describe()[5]-0.5,  0.33, 'Median', color='white', fontsize=14, fontweight='bold')\naxes6.text(df[df['Star type']==4]['Radius(R\/Ro)'].describe()[1]-0.4,  0.02, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes6.text(df[df['Star type']==4]['Radius(R\/Ro)'].describe()[5]-7,  0.02, 'Median', color='white', fontsize=14, fontweight='bold')\naxes7.text(df[df['Star type']==5]['Radius(R\/Ro)'].describe()[1],  0.0016, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes7.text(df[df['Star type']==5]['Radius(R\/Ro)'].describe()[5]-130,  0.0016, 'Median', color='white', fontsize=14, fontweight='bold')\n\n# stats\naxes1.text(800, 0.0046, f'''Range of radius between {round(df['Radius(R\/Ro)'].describe()[3], 3)} and {round(df['Radius(R\/Ro)'].describe()[7], 3)}.\nMean of radius - {round(df['Radius(R\/Ro)'].describe()[1], 3)}.\nMeadian of radius - {round(df['Radius(R\/Ro)'].describe()[5], 3)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes2.text(0.14, 22, f'''Range of radius between {round(df[df['Star type']==0]['Radius(R\/Ro)'].describe()[3], 3)} and {round(df[df['Star type']==0]['Radius(R\/Ro)'].describe()[7], 3)}.\nMean of radius - {round(df[df['Star type']==0]['Radius(R\/Ro)'].describe()[1], 3)}.\nMeadian of radius - {round(df[df['Star type']==0]['Radius(R\/Ro)'].describe()[5], 3)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes3.text(0.5, 2.6, f'''Range of radius between {round(df[df['Star type']==1]['Radius(R\/Ro)'].describe()[3], 3)} and {round(df[df['Star type']==1]['Radius(R\/Ro)'].describe()[7], 3)}.\nMean of radius - {round(df[df['Star type']==1]['Radius(R\/Ro)'].describe()[1], 3)}.\nMeadian of radius - {round(df[df['Star type']==1]['Radius(R\/Ro)'].describe()[5], 3)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes4.text(0.013, 305, f'''Range of radius between {round(df[df['Star type']==2]['Radius(R\/Ro)'].describe()[3], 3)} and {round(df[df['Star type']==2]['Radius(R\/Ro)'].describe()[7], 3)}.\nMean of radius - {round(df[df['Star type']==2]['Radius(R\/Ro)'].describe()[1], 3)}.\nMeadian of radius - {round(df[df['Star type']==2]['Radius(R\/Ro)'].describe()[5], 4)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes5.text(7.6, 0.33, f'''Range of radius between {round(df[df['Star type']==3]['Radius(R\/Ro)'].describe()[3], 3)} and {round(df[df['Star type']==3]['Radius(R\/Ro)'].describe()[7], 3)}.\nMean of radius - {round(df[df['Star type']==3]['Radius(R\/Ro)'].describe()[1], 3)}.\nMeadian of radius - {round(df[df['Star type']==3]['Radius(R\/Ro)'].describe()[5], 4)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes6.text(80, 0.025, f'''Range of radius between {round(df[df['Star type']==4]['Radius(R\/Ro)'].describe()[3], 3)} and {round(df[df['Star type']==4]['Radius(R\/Ro)'].describe()[7], 3)}.\nMean of radius - {round(df[df['Star type']==4]['Radius(R\/Ro)'].describe()[1], 3)}.\nMeadian of radius - {round(df[df['Star type']==4]['Radius(R\/Ro)'].describe()[5], 3)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes7.text(300, 0.0017, f'''Range of radius between {round(df[df['Star type']==5]['Radius(R\/Ro)'].describe()[3], 3)} and {round(df[df['Star type']==5]['Radius(R\/Ro)'].describe()[7], 3)}.\nMean of radius - {round(df[df['Star type']==5]['Radius(R\/Ro)'].describe()[1], 3)}.\nMeadian of radius - {round(df[df['Star type']==5]['Radius(R\/Ro)'].describe()[5], 3)}.''', \ncolor='white', fontsize=14, fontweight='bold')\n\n# title\naxes1.text(-800, 0.0095, 'Radius distribution (all types)', color='white', fontsize=24, fontweight='bold')\naxes2.text(0.001, 38, 'Radius distribution (brown dwarfs)', color='white', fontsize=24, fontweight='bold')\naxes3.text(-0.217, 4.5, 'Radius distribution (red dwarfs)', color='white', fontsize=24, fontweight='bold')\naxes4.text(0.005, 535, 'Radius distribution (white dwarfs)', color='white', fontsize=24, fontweight='bold')\naxes5.text(-4.7, 0.57, 'Radius distribution (maim sequence)', color='white', fontsize=24, fontweight='bold')\naxes6.text(-42, 0.033, 'Radius distribution (supergiants)', color='white', fontsize=24, fontweight='bold')\naxes7.text(180, 0.00263, 'Radius distribution (hypergiants)', color='white', fontsize=24, fontweight='bold')\n\nfig.show()","1977d75c":"fig = plt.figure(facecolor='#00008B', figsize=(13, 6))\n\n# axes\naxes1 = fig.add_axes([0, 0, 1, 1])\naxes2 = fig.add_axes([0, -1.25, 1, 1])\naxes3 = fig.add_axes([0, -2.5, 1, 1])\naxes4 = fig.add_axes([0, -3.75, 1, 1])\naxes5 = fig.add_axes([0, -5, 1, 1])\naxes6 = fig.add_axes([0, -6.25, 1, 1])\n\n# regplot\nsns.regplot(x=df['Radius(R\/Ro)'], y=df['Temperature (K)'], color='white', ax=axes1, line_kws=dict(color='goldenrod', lw=5))\nsns.regplot(x=df['Radius(R\/Ro)'], y=df['Luminosity(L\/Lo)'], color='white', ax=axes2, line_kws=dict(color='goldenrod', lw=5))\nsns.regplot(x=df['Radius(R\/Ro)'], y=df['Absolute magnitude(Mv)'], color='white', ax=axes3, line_kws=dict(color='goldenrod', lw=5))\n\n# stripplot\nsns.stripplot(y=df['Star color'], x=df['Radius(R\/Ro)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes4)\nsns.stripplot(y=df['Spectral Class'], x=df['Radius(R\/Ro)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes5)\nsns.stripplot(y=df['Star type'].replace({0 : 'Brownd dwarf', 1 : 'Red dwarf',\n                                        2 : 'White dwarf', 3 : 'Main Sequence',\n                                        4 : 'Supergiant', 5 : 'Hypergiant'}), \n              x=df['Radius(R\/Ro)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes6)\n\n# background color\naxes1.set_facecolor('#00008B')\naxes2.set_facecolor('#00008B')\naxes3.set_facecolor('#00008B')\naxes4.set_facecolor('#00008B')\naxes5.set_facecolor('#00008B')\naxes6.set_facecolor('#00008B')\n\n# spines\naxes1.spines['bottom'].set_color('white')\naxes1.spines[['top', 'right', 'left']].set_visible(False)\naxes2.spines['bottom'].set_color('white')\naxes2.spines[['top', 'right', 'left']].set_visible(False)\naxes3.spines['bottom'].set_color('white')\naxes3.spines[['top', 'right', 'left']].set_visible(False)\naxes4.spines['bottom'].set_color('white')\naxes4.spines[['top', 'right', 'left']].set_visible(False)\naxes5.spines['bottom'].set_color('white')\naxes5.spines[['top', 'right', 'left']].set_visible(False)\naxes6.spines['bottom'].set_color('white')\naxes6.spines[['top', 'right', 'left']].set_visible(False)\n\n# labels\naxes1.set_ylabel('Temperature (K)', fontsize=16, color='white')\naxes1.set_xlabel('Radius(R\/Ro)', fontsize=16, color='white')\naxes2.set_ylabel('Luminosity(L\/Lo)', fontsize=16, color='white')\naxes2.set_xlabel('Radius(R\/Ro)', fontsize=16, color='white')\naxes3.set_ylabel('Absolute magnitude(Mv)', fontsize=16, color='white')\naxes3.set_xlabel('Radius(R\/Ro)', fontsize=16, color='white')\naxes4.set_ylabel('Star color', fontsize=16, color='white')\naxes4.set_xlabel('Radius(R\/Ro)', fontsize=16, color='white')\naxes5.set_ylabel('Spectral Class', fontsize=16, color='white')\naxes5.set_xlabel('Radius(R\/Ro)', fontsize=16, color='white')\naxes6.set_ylabel('Star type', fontsize=16, color='white')\naxes6.set_xlabel('Radius(R\/Ro)', fontsize=16, color='white')\n\n# ticks\naxes1.tick_params(axis = 'both', colors='white')\naxes1.set_xticks(range(0, 1751, 250))\naxes1.set_yticks(range(0, 41000, 5000))\naxes2.tick_params(axis = 'both', colors='white')\naxes2.set_xticks(range(0, 1751, 250))\naxes2.set_yticks(range(0, 800001, 100000))\naxes3.tick_params(axis = 'both', colors='white')\naxes3.set_xticks(range(0, 1751, 250))\naxes3.set_yticks(range(-20, 21, 5))\naxes4.tick_params(axis = 'both', colors='white')\naxes4.set_xticks(range(0, 1751, 250))\naxes5.tick_params(axis = 'both', colors='white')\naxes5.set_xticks(range(0, 1751, 250))\naxes6.tick_params(axis = 'both', colors='white')\naxes6.set_xticks(range(0, 1751, 250))\n\n# annotate\naxes1.text(240, 35000, f'''r = {round(df.corr('spearman')['Radius(R\/Ro)'][0], 2)} (weak positive correlation)''', fontsize=14, color='white', fontweight='bold')\naxes2.text(240, 700000, f'''r = {round(df.corr('spearman')['Radius(R\/Ro)'][1], 2)} (strong positive correlation)''', fontsize=14, color='white', fontweight='bold')\naxes3.text(240, 15, f'''r = {round(df.corr('spearman')['Radius(R\/Ro)'][3], 2)} (strong negative correlation)''', fontsize=14, color='white', fontweight='bold')\naxes4.text(240, 3.7, f'''r = {round(df.corr('spearman')['Star_color_for_corr'][2], 2)} (very weak positive correlation).\nThe maximum radius - blue stars.''', fontsize=14, color='white', fontweight='bold')\naxes5.text(240, 3.3, f''' r = {round(df.corr('spearman')['Sprectral_for_corr'][2], 2)} (weak positive correlation).\nThe maximum radius - spectral class \"O\".''', fontsize=14, color='white', fontweight='bold')\naxes6.text(240, 1, f'''r = {round(df.corr('spearman')['Star type'][2], 2)} (strong positive correlation).\nThe maximum radius - hypergiants.''', fontsize=14, color='white', fontweight='bold')\n\n# title\naxes1.text(-160, 47000, 'Ratio between Radius(R\/Ro) and Temperature (K)', fontsize=24, color='white', fontweight='bold')\naxes2.text(-160, 940000, 'Ratio between Radius(R\/Ro) and Luminosity(L\/Lo)', fontsize=24, color='white', fontweight='bold')\naxes3.text(-160, 24, 'Ratio between Radius(R\/Ro) and Absolute magnitude(Mv)', fontsize=24, color='white', fontweight='bold')\naxes4.text(-270, -0.9, 'Ratio between Radius(R\/Ro) and Star color', fontsize=24, color='white', fontweight='bold')\naxes5.text(-270, -0.9, 'Ratio between Radius(R\/Ro) and Spectral Class', fontsize=24, color='white', fontweight='bold')\naxes6.text(-270, -0.9, 'Ratio between Radius(R\/Ro) and Star type', fontsize=24, color='white', fontweight='bold')\n\nfig.show()","539714d0":"fig = plt.figure(facecolor='#00008B', figsize=(13, 6))\n\n# axes\naxes1 = fig.add_axes([0, 0, 1, 1])\naxes2 = fig.add_axes([0, -1.25, 1, 1])\naxes3 = fig.add_axes([0, -2.5, 1, 1])\naxes4 = fig.add_axes([0, -3.75, 1, 1])\naxes5 = fig.add_axes([0, -5, 1, 1])\naxes6 = fig.add_axes([0, -6.25, 1, 1])\naxes7 = fig.add_axes([0, -7.5, 1, 1])\n\n# distplot\nsns.distplot(x=df['Absolute magnitude(Mv)'], color='white', ax=axes1, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==0]['Absolute magnitude(Mv)'], color='white', ax=axes2, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==1]['Absolute magnitude(Mv)'], color='white', ax=axes3, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==2]['Absolute magnitude(Mv)'], color='white', ax=axes4, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==3]['Absolute magnitude(Mv)'], color='white', ax=axes5, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==4]['Absolute magnitude(Mv)'], color='white', ax=axes6, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\nsns.distplot(x=df[df['Star type']==5]['Absolute magnitude(Mv)'], color='white', ax=axes7, hist_kws = dict(alpha=0.8, edgecolor='black', lw=2), kde_kws = dict(alpha=1, lw=4), bins=20)\n\n# lines\naxes1.axvline(df['Absolute magnitude(Mv)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes1.axvline(df['Absolute magnitude(Mv)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes2.axvline(df[df['Star type']==0]['Absolute magnitude(Mv)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes2.axvline(df[df['Star type']==0]['Absolute magnitude(Mv)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes3.axvline(df[df['Star type']==1]['Absolute magnitude(Mv)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes3.axvline(df[df['Star type']==1]['Absolute magnitude(Mv)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes4.axvline(df[df['Star type']==2]['Absolute magnitude(Mv)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes4.axvline(df[df['Star type']==2]['Absolute magnitude(Mv)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes5.axvline(df[df['Star type']==3]['Absolute magnitude(Mv)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes5.axvline(df[df['Star type']==3]['Absolute magnitude(Mv)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes6.axvline(df[df['Star type']==4]['Absolute magnitude(Mv)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes6.axvline(df[df['Star type']==4]['Absolute magnitude(Mv)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes7.axvline(df[df['Star type']==5]['Absolute magnitude(Mv)'].describe()[1], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\naxes7.axvline(df[df['Star type']==5]['Absolute magnitude(Mv)'].describe()[5], ymin=0, ymax=0.6, color='goldenrod', linestyle=':', lw=6)\n\n# background color\naxes1.set_facecolor('#00008B')\naxes2.set_facecolor('#00008B')\naxes3.set_facecolor('#00008B')\naxes4.set_facecolor('#00008B')\naxes5.set_facecolor('#00008B')\naxes6.set_facecolor('#00008B')\naxes7.set_facecolor('#00008B')\n\n# labels\naxes1.set_ylabel('')\naxes1.set_xlabel('')\naxes2.set_ylabel('')\naxes2.set_xlabel('')\naxes3.set_ylabel('')\naxes3.set_xlabel('')\naxes4.set_ylabel('')\naxes4.set_xlabel('')\naxes5.set_ylabel('')\naxes5.set_xlabel('')\naxes6.set_ylabel('')\naxes6.set_xlabel('')\naxes7.set_ylabel('')\naxes7.set_xlabel('')\n\n# ticks\naxes1.tick_params(axis = 'x', colors='white')\naxes1.set_yticks([])\naxes2.tick_params(axis = 'x', colors='white')\naxes2.set_yticks([])\naxes3.tick_params(axis = 'x', colors='white')\naxes3.set_yticks([])\naxes4.tick_params(axis = 'x', colors='white')\naxes4.set_yticks([])\naxes5.tick_params(axis = 'x', colors='white')\naxes5.set_yticks([])\naxes6.tick_params(axis = 'x', colors='white')\naxes6.set_yticks([])\naxes7.tick_params(axis = 'x', colors='white')\naxes7.set_yticks([])\n\n# spines\naxes1.spines['bottom'].set_color('white')\naxes1.spines[['top', 'right', 'left']].set_visible(False)\naxes2.spines['bottom'].set_color('white')\naxes2.spines[['top', 'right', 'left']].set_visible(False)\naxes3.spines['bottom'].set_color('white')\naxes3.spines[['top', 'right', 'left']].set_visible(False)\naxes4.spines['bottom'].set_color('white')\naxes4.spines[['top', 'right', 'left']].set_visible(False)\naxes5.spines['bottom'].set_color('white')\naxes5.spines[['top', 'right', 'left']].set_visible(False)\naxes6.spines['bottom'].set_color('white')\naxes6.spines[['top', 'right', 'left']].set_visible(False)\naxes7.spines['bottom'].set_color('white')\naxes7.spines[['top', 'right', 'left']].set_visible(False)\n\n# annotate\naxes1.text(df['Absolute magnitude(Mv)'].describe()[1]-2,  0.057, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes1.text(df['Absolute magnitude(Mv)'].describe()[5]-2,  0.057, 'Median', color='white', fontsize=14, fontweight='bold')\naxes2.text(df[df['Star type']==0]['Absolute magnitude(Mv)'].describe()[1]-0.15,  0.5, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes2.text(df[df['Star type']==0]['Absolute magnitude(Mv)'].describe()[5]-0.4,  0.5, 'Median', color='white', fontsize=14, fontweight='bold')\naxes3.text(df[df['Star type']==1]['Absolute magnitude(Mv)'].describe()[1]-0.45,  0.27, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes3.text(df[df['Star type']==1]['Absolute magnitude(Mv)'].describe()[5],  0.27, 'Median', color='white', fontsize=14, fontweight='bold')\naxes4.text(df[df['Star type']==2]['Absolute magnitude(Mv)'].describe()[1],  0.42, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes4.text(df[df['Star type']==2]['Absolute magnitude(Mv)'].describe()[5]-0.36,  0.42, 'Median', color='white', fontsize=14, fontweight='bold')\naxes5.text(df[df['Star type']==3]['Absolute magnitude(Mv)'].describe()[1]-0.4, 0.175, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes5.text(df[df['Star type']==3]['Absolute magnitude(Mv)'].describe()[5]-1.3, 0.175, 'Median', color='white', fontsize=14, fontweight='bold')\naxes6.text(df[df['Star type']==4]['Absolute magnitude(Mv)'].describe()[1]-0.15, 0.93, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes6.text(df[df['Star type']==4]['Absolute magnitude(Mv)'].describe()[5]-0.05, 0.93, 'Median', color='white', fontsize=14, fontweight='bold')\naxes7.text(df[df['Star type']==5]['Absolute magnitude(Mv)'].describe()[1]-0.05, 0.45, 'Mean', color='white', fontsize=14, fontweight='bold')\naxes7.text(df[df['Star type']==5]['Absolute magnitude(Mv)'].describe()[5]-0.4, 0.45, 'Median', color='white', fontsize=14, fontweight='bold')\n\n# stats\naxes1.text(12.2, 0.077, f'''Range of absolute magnitude between {df['Absolute magnitude(Mv)'].describe()[3]} and {round(df['Absolute magnitude(Mv)'].describe()[7])}.\nMean of absolute magnitude - {round(df['Absolute magnitude(Mv)'].describe()[1], 2)}.\nMeadian of absolute magnitude - {round(df['Absolute magnitude(Mv)'].describe()[5], 2)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes2.text(18.1, 0.6, f'''Range of absolute magnitude between {df[df['Star type']==0]['Absolute magnitude(Mv)'].describe()[3]} and {round(df[df['Star type']==0]['Absolute magnitude(Mv)'].describe()[7])}.\nMean of absolute magnitude - {round(df[df['Star type']==0]['Absolute magnitude(Mv)'].describe()[1], 2)}.\nMeadian of absolute magnitude - {round(df[df['Star type']==0]['Absolute magnitude(Mv)'].describe()[5], 2)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes3.text(7.6, 0.37, f'''Range of absolute magnitude between {df[df['Star type']==1]['Absolute magnitude(Mv)'].describe()[3]} and {round(df[df['Star type']==1]['Absolute magnitude(Mv)'].describe()[7])}.\nMean of absolute magnitude - {round(df[df['Star type']==1]['Absolute magnitude(Mv)'].describe()[1], 2)}.\nMeadian of absolute magnitude - {round(df[df['Star type']==1]['Absolute magnitude(Mv)'].describe()[5], 2)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes4.text(13.8, 0.48, f'''Range of absolute magnitude between {df[df['Star type']==2]['Absolute magnitude(Mv)'].describe()[3]} and {round(df[df['Star type']==2]['Absolute magnitude(Mv)'].describe()[7])}.\nMean of absolute magnitude - {round(df[df['Star type']==2]['Absolute magnitude(Mv)'].describe()[1], 2)}.\nMeadian of absolute magnitude - {round(df[df['Star type']==2]['Absolute magnitude(Mv)'].describe()[5], 2)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes5.text(3, 0.18, f'''Range of absolute magnitude between {df[df['Star type']==3]['Absolute magnitude(Mv)'].describe()[3]} and {round(df[df['Star type']==3]['Absolute magnitude(Mv)'].describe()[7])}.\nMean of absolute magnitude - {round(df[df['Star type']==3]['Absolute magnitude(Mv)'].describe()[1], 2)}.\nMeadian of absolute magnitude - {round(df[df['Star type']==3]['Absolute magnitude(Mv)'].describe()[5], 2)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes6.text(-8.5, 0.88, f'''Range of absolute magnitude between {df[df['Star type']==4]['Absolute magnitude(Mv)'].describe()[3]} and {round(df[df['Star type']==4]['Absolute magnitude(Mv)'].describe()[7])}.\nMean of absolute magnitude - {round(df[df['Star type']==4]['Absolute magnitude(Mv)'].describe()[1], 2)}.\nMeadian of absolute magnitude - {round(df[df['Star type']==4]['Absolute magnitude(Mv)'].describe()[5], 2)}.''', \ncolor='white', fontsize=14, fontweight='bold')\naxes7.text(-14.5, 0.58, f'''Range of absolute magnitude between {df[df['Star type']==5]['Absolute magnitude(Mv)'].describe()[3]} and {round(df[df['Star type']==5]['Absolute magnitude(Mv)'].describe()[7])}.\nMean of absolute magnitude - {round(df[df['Star type']==5]['Absolute magnitude(Mv)'].describe()[1], 2)}.\nMeadian of absolute magnitude - {round(df[df['Star type']==5]['Absolute magnitude(Mv)'].describe()[5], 2)}.''', \ncolor='white', fontsize=14, fontweight='bold')\n\n# title\naxes1.text(-30, 0.1, 'Absolute magnitude distribution (all types)', fontsize=24, color='white', fontweight='bold')\naxes2.text(13.25, 0.86, 'Absolute magnitude distribution (brown dwarfs)', fontsize=24, color='white', fontweight='bold')\naxes3.text(6.8, 0.47, 'Absolute magnitude distribution (red dwarfs)', fontsize=24, color='white', fontweight='bold')\naxes4.text(7.12, 0.73, 'Absolute magnitude distribution (white dwarfs)', fontsize=24, color='white', fontweight='bold')\naxes5.text(-12.79, 0.29, 'Absolute magnitude distribution (main sequence)', fontsize=24, color='white', fontweight='bold')\naxes6.text(-8.79, 1.54, 'Absolute magnitude distribution (supergiants)', fontsize=24, color='white', fontweight='bold')\naxes7.text(-15.2, 0.77, 'Absolute magnitude distribution (hypergiants)', fontsize=24, color='white', fontweight='bold')\n\nfig.show()","40cdb58d":"fig = plt.figure(facecolor='#00008B', figsize=(13, 6))\n\n# axes\naxes1 = fig.add_axes([0, 0, 1, 1])\naxes2 = fig.add_axes([0, -1.25, 1, 1])\naxes3 = fig.add_axes([0, -2.5, 1, 1])\naxes4 = fig.add_axes([0, -3.75, 1, 1])\naxes5 = fig.add_axes([0, -5, 1, 1])\naxes6 = fig.add_axes([0, -6.25, 1, 1])\n\n\n# regplot\nsns.regplot(x=df['Absolute magnitude(Mv)'], y=df['Temperature (K)'], color='white', ax=axes1, line_kws=dict(color='goldenrod', lw=5))\nsns.regplot(x=df['Absolute magnitude(Mv)'], y=df['Luminosity(L\/Lo)'], color='white', ax=axes2, line_kws=dict(color='goldenrod', lw=5))\nsns.regplot(x=df['Absolute magnitude(Mv)'], y=df['Radius(R\/Ro)'], color='white', ax=axes3, line_kws=dict(color='goldenrod', lw=5))\n\n# stripplot\nsns.stripplot(y=df['Star color'], x=df['Absolute magnitude(Mv)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes4)\nsns.stripplot(y=df['Spectral Class'], x=df['Absolute magnitude(Mv)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes5)\nsns.stripplot(y=df['Star type'].replace({0 : 'Brownd dwarf', 1 : 'Red dwarf',\n                                        2 : 'White dwarf', 3 : 'Main Sequence',\n                                        4 : 'Supergiant', 5 : 'Hypergiant'}), \n              x=df['Absolute magnitude(Mv)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes6)\n\n# background color\naxes1.set_facecolor('#00008B')\naxes2.set_facecolor('#00008B')\naxes3.set_facecolor('#00008B')\naxes4.set_facecolor('#00008B')\naxes5.set_facecolor('#00008B')\naxes6.set_facecolor('#00008B')\n\n# spines\naxes1.spines['bottom'].set_color('white')\naxes1.spines[['top', 'right', 'left']].set_visible(False)\naxes2.spines['bottom'].set_color('white')\naxes2.spines[['top', 'right', 'left']].set_visible(False)\naxes3.spines['bottom'].set_color('white')\naxes3.spines[['top', 'right', 'left']].set_visible(False)\naxes4.spines['bottom'].set_color('white')\naxes4.spines[['top', 'right', 'left']].set_visible(False)\naxes5.spines['bottom'].set_color('white')\naxes5.spines[['top', 'right', 'left']].set_visible(False)\naxes6.spines['bottom'].set_color('white')\naxes6.spines[['top', 'right', 'left']].set_visible(False)\n\n# labels\naxes1.set_ylabel('Temperature (K)', fontsize=16, color='white')\naxes1.set_xlabel('Absolute magnitude(Mv)', fontsize=16, color='white')\naxes2.set_ylabel('Luminosity(L\/Lo)', fontsize=16, color='white')\naxes2.set_xlabel('Absolute magnitude(Mv)', fontsize=16, color='white')\naxes3.set_ylabel('Radius(R\/Ro)', fontsize=16, color='white')\naxes3.set_xlabel('Absolute magnitude(Mv)', fontsize=16, color='white')\naxes4.set_ylabel('Star color', fontsize=16, color='white')\naxes4.set_xlabel('Absolute magnitude(Mv)', fontsize=16, color='white')\naxes5.set_ylabel('Spectral Class', fontsize=16, color='white')\naxes5.set_xlabel('Absolute magnitude(Mv)', fontsize=16, color='white')\naxes6.set_ylabel('Star type', fontsize=16, color='white')\naxes6.set_xlabel('Absolute magnitude(Mv)', fontsize=16, color='white')\n\n# ticks\naxes1.tick_params(axis = 'both', colors='white')\naxes1.set_xticks(range(-10, 21, 2))\naxes1.set_yticks(range(0, 41000, 5000))\naxes2.tick_params(axis = 'both', colors='white')\naxes2.set_xticks(range(-10, 21, 2))\naxes2.set_yticks(range(0, 800001, 100000))\naxes3.tick_params(axis = 'both', colors='white')\naxes3.set_xticks(range(-10, 21, 2))\naxes3.set_yticks(range(0, 2001, 250))\naxes4.tick_params(axis = 'both', colors='white')\naxes4.set_xticks(range(-10, 21, 2))\naxes5.tick_params(axis = 'both', colors='white')\naxes5.set_xticks(range(-10, 21, 2))\naxes6.tick_params(axis = 'both', colors='white')\naxes6.set_xticks(range(-10, 21, 2))\n\n# annotate\naxes1.text(3, 35000, f'''r = {round(df.corr('spearman')['Absolute magnitude(Mv)'][0], 2)} (medium negative correlation)''', fontsize=14, color='white', fontweight='bold')\naxes2.text(3, 600000, f'''r = {round(df.corr('spearman')['Absolute magnitude(Mv)'][1], 2)} (strong negative correlation)''', fontsize=14, color='white', fontweight='bold')\naxes3.text(3, 1500, f'''r = {round(df.corr('spearman')['Absolute magnitude(Mv)'][2], 2)} (strong negative correlation)''', fontsize=14, color='white', fontweight='bold')\naxes4.text(8.5, 7.2, f'''r = {round(df.corr('spearman')['Star_color_for_corr'][3], 2)} (weak positive correlation).\nThe maximum absolute magnitude - red stars.''', fontsize=14, color='white', fontweight='bold')\naxes5.text(3, 3.9, f''' r = {round(df.corr('spearman')['Sprectral_for_corr'][3], 2)} (weak positive correlation).\nThe maximum absolute magnitude - spectral class \"M\".''', fontsize=14, color='white', fontweight='bold')\naxes6.text(-7, 0.8, f'''r = {round(df.corr('spearman')['Star type'][3], 2)} (very strong negative correlation)\nDwarfs have a large absolute magnitude,\nstars of main sequence - medium,\ngiants - small.''', fontsize=14, color='white', fontweight='bold')\n\n# title\naxes1.text(-14.5, 47000, 'Ratio between Absolute magnitude(Mv) and Temperature (K)', fontsize=24, color='white', fontweight='bold')\naxes2.text(-14.5, 940000, 'Ratio between Absolute magnitude(Mv) and Luminosity(L\/Lo)', fontsize=24, color='white', fontweight='bold')\naxes3.text(-14.5, 2200, 'Ratio between Absolute magnitude(Mv) and Radius(R\/Ro)', fontsize=24, color='white', fontweight='bold')\naxes4.text(-16.5, -0.9, 'Ratio between Absolute magnitude(Mv) and Star color', fontsize=24, color='white', fontweight='bold')\naxes5.text(-16.5, -0.9, 'Ratio between Absolute magnitude(Mv) and Spectral Class', fontsize=24, color='white', fontweight='bold')\naxes6.text(-16.5, -0.9, 'Ratio between Absolute magnitude(Mv) and Star type', fontsize=24, color='white', fontweight='bold')\n\nfig.show()","3645a459":"# all\ncolor_df = df['Star color'].value_counts().to_frame().reset_index()\ncolor_df['Percentage'] = round(color_df['Star color']\/sum(color_df['Star color'])*100, 2)\n# brown\ncolor_df_brown = df[df['Star type']==0]['Star color'].value_counts().to_frame().reset_index()\ncolor_df_brown['Percentage'] = round(color_df_brown['Star color']\/sum(color_df_brown['Star color'])*100, 2)\n# red\ncolor_df_red = df[df['Star type']==1]['Star color'].value_counts().to_frame().reset_index()\ncolor_df_red['Percentage'] = round(color_df_red['Star color']\/sum(color_df_red['Star color'])*100, 2)\n# white\ncolor_df_white = df[df['Star type']==2]['Star color'].value_counts().to_frame().reset_index()\ncolor_df_white['Percentage'] = round(color_df_white['Star color']\/sum(color_df_white['Star color'])*100, 2)\n# main sequence\ncolor_df_main = df[df['Star type']==3]['Star color'].value_counts().to_frame().reset_index()\ncolor_df_main['Percentage'] = round(color_df_main['Star color']\/sum(color_df_main['Star color'])*100, 2)\n# super\ncolor_df_super = df[df['Star type']==4]['Star color'].value_counts().to_frame().reset_index()\ncolor_df_super['Percentage'] = round(color_df_super['Star color']\/sum(color_df_super['Star color'])*100, 2)\n# hyper\ncolor_df_hyper = df[df['Star type']==5]['Star color'].value_counts().to_frame().reset_index()\ncolor_df_hyper['Percentage'] = round(color_df_hyper['Star color']\/sum(color_df_super['Star color'])*100, 2)\n\n# fig\nfig = plt.figure(facecolor='#00008B', figsize=(13, 6))\n\n# axes\naxes1 = fig.add_axes([0, 0, 1, 1])\naxes2 = fig.add_axes([0, -1.25, 1, 1])\n\n# bar\naxes1.bar(x=color_df['index'], height=color_df['Percentage'], color='white', edgecolor='black', alpha=0.8, width=0.5)\n\n# comprasion\naxes2.text(0.2, 0.9, f'''Brown dwarf:''', fontsize=16, color='white', fontweight='bold')\naxes2.text(0.2, 0.85, f'''{color_df_brown['index'][0]} - {color_df_brown['Percentage'][0]}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.75, f'''Red dwarf:''', fontsize=16, color='white', fontweight='bold')\naxes2.text(0.2, 0.7, f'''{color_df_red['index'][0]} - {color_df_red['Percentage'][0]}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.6, f'''White dwarf:''', fontsize=16, color='white', fontweight='bold')\naxes2.text(0.2, 0.55, f'''{color_df_white['index'][0]} - {color_df_white['Percentage'][0]}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.5, f'''{color_df_white['index'][1]} - {color_df_white['Percentage'][1]}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.45, f'''{color_df_white['index'][2]} - {color_df_white['Percentage'][2]}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.4, f'''{color_df_white['index'][3]} - {color_df_white['Percentage'][3]}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.35, f'''{color_df_white['index'][4]} - {color_df_white['Percentage'][4]}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.9, f'''Main sequence:''', fontsize=16, color='white', fontweight='bold')\naxes2.text(0.6, 0.85, f'''{color_df_main['index'][0]} - {color_df_main['Percentage'][0]}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.8, f'''{color_df_main['index'][1]} - {color_df_main['Percentage'][1]}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.75, f'''{color_df_main['index'][2]} - {color_df_main['Percentage'][2]}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.7, f'''{color_df_main['index'][3]} - {color_df_main['Percentage'][3]}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.65, f'''{color_df_main['index'][4]} - {color_df_main['Percentage'][4]}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.6, f'''{color_df_main['index'][5]} - {color_df_main['Percentage'][5]}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.5, f'''Supergiant:''', fontsize=16, color='white', fontweight='bold')\naxes2.text(0.6, 0.45, f'''{color_df_super['index'][0]} - {color_df_super['Percentage'][0]}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.4, f'''{color_df_super['index'][1]} - {color_df_super['Percentage'][1]}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.3, f'''Hypergiant:''', fontsize=16, color='white', fontweight='bold')\naxes2.text(0.6, 0.25, f'''{color_df_hyper['index'][0]} - {color_df_hyper['Percentage'][0]}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.2, f'''{color_df_hyper['index'][1]} - {color_df_hyper['Percentage'][1]}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.15, f'''{color_df_hyper['index'][2]} - {color_df_hyper['Percentage'][2]}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.1, f'''{color_df_hyper['index'][3]} - {color_df_hyper['Percentage'][3]}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.05, f'''{color_df_hyper['index'][4]} - {color_df_hyper['Percentage'][4]}%''', fontsize=14, color='white')\n\n# background color\naxes1.set_facecolor('#00008B')\naxes2.set_facecolor('#00008B')\n\n# labels\naxes1.set_ylabel('Percentage', fontsize=16, color='white')\naxes1.set_xlabel('Color', fontsize=16, color='white')\n\n# spines\naxes1.spines[['bottom', 'left']].set_color('white')\naxes1.spines[['top', 'right']].set_visible(False)\naxes2.spines[['top', 'right', 'left', 'bottom']].set_visible(False)\n\n# ticks\naxes1.tick_params(axis = 'both', colors='white')\naxes1.set_yticks(range(0, 51, 5))\naxes2.set_xticks([])\naxes2.set_yticks([])\n\n# annotate\nfor p in axes1.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    axes1.annotate('{:.1f}'.format(height), (x + width\/2, y + height*1.02), ha='center', color='white', fontsize=14)\n\n# title\naxes1.text(-1.2, 55, 'Percentage of color by all types of stars', color='white', fontsize=24, fontweight='bold')\naxes2.text(-0.052, 1.05, 'Percentage of color by type of stars', color='white', fontsize=24, fontweight='bold')\n    \nfig.show()","91ef3226":"# cross\ncross = pd.crosstab(df['Star color'], df['Spectral Class'], margins=True)\ncross1 = pd.crosstab(df['Star color'], df['Star type'], margins=True)\n\n# fig\nfig = plt.figure(facecolor='#00008B', figsize=(13, 6))\n\n# axes\naxes1 = fig.add_axes([0, 0, 1, 1])\naxes2 = fig.add_axes([0, -1.25, 1, 1])\naxes3 = fig.add_axes([0, -2.5, 1, 1])\naxes4 = fig.add_axes([0, -3.75, 1, 1])\naxes5 = fig.add_axes([0, -5, 1, 1])\naxes6 = fig.add_axes([0, -6.25, 1, 1])\n\n# stripplot\nsns.stripplot(x=df['Star color'], y=df['Temperature (K)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes1)\nsns.stripplot(x=df['Star color'], y=df['Luminosity(L\/Lo)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes2)\nsns.stripplot(x=df['Star color'], y=df['Radius(R\/Ro)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes3)\nsns.stripplot(x=df['Star color'], y=df['Absolute magnitude(Mv)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes4)\n\n# comprasion (spectral)\naxes5.text(0.1, 0.9, f'''{cross.index[0]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.1, 0.85, f'''{cross.columns[1]} - {round(cross['B'][0]\/cross['All'][0]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.1, 0.8, f'''{cross.columns[6]} - {round(cross['O'][0]\/cross['All'][0]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.1, 0.7, f'''{cross.index[1]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.1, 0.65, f'''{cross.columns[0]} - {round(cross['A'][1]\/cross['All'][1]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.1, 0.6, f'''{cross.columns[1]} - {round(cross['B'][1]\/cross['All'][1]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.1, 0.5, f'''{cross.index[2]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.1, 0.45, f'''{cross.columns[4]} - {round(cross['K'][2]\/cross['All'][2]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.1, 0.4, f'''{cross.columns[5]} - {round(cross['M'][2]\/cross['All'][2]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.1, 0.3, f'''{cross.index[3]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.1, 0.25, f'''{cross.columns[4]} - {round(cross['K'][3]\/cross['All'][3]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.4, 0.9, f'''{cross.index[4]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.4, 0.85, f'''{cross.columns[2]} - {round(cross['F'][4]\/cross['All'][4]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.4, 0.75, f'''{cross.index[5]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.4, 0.7, f'''{cross.columns[3]} - {round(cross['G'][5]\/cross['All'][5]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.4, 0.65, f'''{cross.columns[4]} - {round(cross['K'][5]\/cross['All'][5]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.4, 0.6, f'''{cross.columns[5]} - {round(cross['M'][5]\/cross['All'][5]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.4, 0.5, f'''{cross.index[6]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.4, 0.45, f'''{cross.columns[0]} - {round(cross['A'][6]\/cross['All'][6]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.4, 0.4, f'''{cross.columns[1]} - {round(cross['B'][6]\/cross['All'][6]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.4, 0.35, f'''{cross.columns[2]} - {round(cross['F'][6]\/cross['All'][6]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.7, 0.9, f'''{cross.index[7]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.7, 0.85, f'''{cross.columns[2]} - {round(cross['F'][7]\/cross['All'][7]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.7, 0.75, f'''{cross.index[8]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.7, 0.85, f'''{cross.columns[4]} - {round(cross['K'][8]\/cross['All'][8]*100, 2)}%''', fontsize=14, color='white')\n\n# comprasion (type)\naxes6.text(0.1, 0.9, f'''{cross1.index[0]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.1, 0.85, f'''White dwarf - {round(cross1[2][0]\/cross1['All'][0]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.8, f'''Main sequence - {round(cross1[3][0]\/cross1['All'][0]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.75, f'''Supergiant - {round(cross1[4][0]\/cross1['All'][0]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.7, f'''Hypergiant - {round(cross1[5][0]\/cross1['All'][0]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.6, f'''{cross1.index[1]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.1, 0.55, f'''White dwarf - {round(cross1[2][1]\/cross1['All'][1]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.5, f'''Main sequence - {round(cross1[3][1]\/cross1['All'][1]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.45, f'''Hypergiant - {round(cross1[5][1]\/cross1['All'][1]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.35, f'''{cross1.index[2]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.1, 0.3, f'''Hypergiant - {round(cross1[5][2]\/cross1['All'][2]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.2, f'''{cross1.index[3]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.1, 0.15, f'''Main sequence - {round(cross1[3][3]\/cross1['All'][3]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.9, f'''{cross1.index[4]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.4, 0.85, f'''White dwarf - {round(cross1[2][4]\/cross1['All'][4]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.75, f'''{cross1.index[5]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.4, 0.7, f'''Brown dwarf - {round(cross1[0][5]\/cross1['All'][5]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.65, f'''Red dwarf - {round(cross1[1][5]\/cross1['All'][5]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.6, f'''Supergiant - {round(cross1[4][5]\/cross1['All'][5]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.55, f'''Hypergiant - {round(cross1[5][5]\/cross1['All'][5]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.45, f'''{cross1.index[6]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.4, 0.4, f'''White dwarf - {round(cross1[2][6]\/cross1['All'][6]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.35, f'''Main sequence - {round(cross1[3][6]\/cross1['All'][6]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.3, f'''Hypergiant - {round(cross1[5][6]\/cross1['All'][6]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.7, 0.9, f'''{cross1.index[7]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.7, 0.85, f'''White dwarf - {round(cross1[2][7]\/cross1['All'][7]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.7, 0.8, f'''Main sequence - {round(cross1[3][7]\/cross1['All'][7]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.7, 0.7, f'''{cross1.index[8]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.7, 0.65, f'''Main sequence - {round(cross1[3][8]\/cross1['All'][8]*100, 2)}%''', fontsize=14, color='white')\n\n# background color\naxes1.set_facecolor('#00008B')\naxes2.set_facecolor('#00008B')\naxes3.set_facecolor('#00008B')\naxes4.set_facecolor('#00008B')\naxes5.set_facecolor('#00008B')\naxes6.set_facecolor('#00008B')\n\n# spines\naxes1.spines['bottom'].set_color('white')\naxes1.spines[['top', 'right', 'left']].set_visible(False)\naxes2.spines['bottom'].set_color('white')\naxes2.spines[['top', 'right', 'left']].set_visible(False)\naxes3.spines['bottom'].set_color('white')\naxes3.spines[['top', 'right', 'left']].set_visible(False)\naxes4.spines['bottom'].set_color('white')\naxes4.spines[['top', 'right', 'left']].set_visible(False)\naxes5.spines[['top', 'right', 'left', 'bottom']].set_visible(False)\naxes6.spines[['top', 'right', 'left', 'bottom']].set_visible(False)\n\n# labels\naxes1.set_ylabel('Temperature (K)', fontsize=16, color='white')\naxes1.set_xlabel('Star color', fontsize=16, color='white')\naxes2.set_ylabel('Luminosity(L\/Lo)', fontsize=16, color='white')\naxes2.set_xlabel('Star color', fontsize=16, color='white')\naxes3.set_ylabel('Radius(R\/Ro)', fontsize=16, color='white')\naxes3.set_xlabel('Star color', fontsize=16, color='white')\naxes4.set_ylabel('Absolute magnitude(Mv)', fontsize=16, color='white')\naxes4.set_xlabel('Star color', fontsize=16, color='white')\n\n# ticks\naxes1.tick_params(axis = 'both', colors='white')\naxes1.set_yticks(range(0, 41000, 5000))\naxes2.tick_params(axis = 'both', colors='white')\naxes2.set_yticks(range(0, 800001, 100000))\naxes3.tick_params(axis = 'both', colors='white')\naxes3.set_yticks(range(0, 2001, 250))\naxes4.tick_params(axis = 'both', colors='white')\naxes4.set_yticks(range(-10, 21, 5))\naxes5.set_xticks([])\naxes5.set_yticks([])\naxes6.set_xticks([])\naxes6.set_yticks([])\n\n# annotate\naxes1.text(1.6, 30000, f'''r = {round(df.corr('spearman')['Star_color_for_corr'][0], 2)} (strong positive correlation).\nThe most stars are red. \nThe hottest stars are blue.\n''', fontsize=14, color='white', fontweight='bold')\naxes2.text(1.45, 640000, f''' r = {round(df.corr('spearman')['Sprectral_for_corr'][1], 2)} (weak positive correlation).\nThe maximum luminosity - \"B\" and \n\"O\" spectral classes.\nThe luminosity of \"F\" spectral class \nis not more than 10.''', fontsize=14, color='white', fontweight='bold')\naxes3.text(1.8, 400, f'''r = {round(df.corr('spearman')['Star_color_for_corr'][2], 2)} (very weak positive correlation).\nThe maximum radius - blue stars.''', fontsize=14, color='white', fontweight='bold')\naxes4.text(3.3, 1.8, f'''r = {round(df.corr('spearman')['Star_color_for_corr'][3], 2)} (weak positive correlation).\nThe maximum absolute magnitude - red stars.''', fontsize=14, color='white', fontweight='bold')\n\n# title\naxes1.text(-1.2, 45000, 'Ratio between Star color and Temperature (K)', fontsize=24, color='white', fontweight='bold')\naxes2.text(-1.2, 940000, 'Ratio between Star color and Luminosity(L\/Lo)', fontsize=24, color='white', fontweight='bold')\naxes3.text(-1.2, 2200, 'Ratio between Star color and Radius(R\/Ro)', fontsize=24, color='white', fontweight='bold')\naxes4.text(-1.2, 23, 'Ratio between Star color and Absolute magnitude(Mv)', fontsize=24, color='white', fontweight='bold')\naxes5.text(-0.08, 1.05, 'Percentage of Specrtal class by Star color', color='white', fontsize=24, fontweight='bold')\naxes6.text(-0.08, 1.05, 'Percentage of Star type by Star color', color='white', fontsize=24, fontweight='bold')\n\nfig.show()","04db77f2":"# cross\ncross2 = pd.crosstab(df['Spectral Class'], df['Star type'], margins=True)\ncross2['Percentage'] = cross2['All']\/cross2['All'][7]*100\ncross2_sort = cross2.sort_values('Percentage', ascending=False)\n\n# fig\nfig = plt.figure(facecolor='#00008B', figsize=(13, 6))\n\n# axes\naxes1 = fig.add_axes([0, 0, 1, 1])\naxes2 = fig.add_axes([0, -1.25, 1, 1])\n\n# bar\naxes1.bar(x=cross2_sort.index[1:], height=cross2_sort['Percentage'][1:], color='white', edgecolor='black', alpha=0.8, width=0.5)\n\n# background color\naxes1.set_facecolor('#00008B')\naxes2.set_facecolor('#00008B')\n\n# labels\naxes1.set_ylabel('Percentage', fontsize=16, color='white')\naxes1.set_xlabel('Spectral class', fontsize=16, color='white')\n\n# spines\naxes1.spines[['bottom', 'left']].set_color('white')\naxes1.spines[['top', 'right']].set_visible(False)\naxes2.spines[['top', 'right', 'left', 'bottom']].set_visible(False)\n\n# ticks\naxes1.tick_params(axis = 'both', colors='white')\naxes1.set_yticks(range(0, 51, 5))\naxes2.set_xticks([])\naxes2.set_yticks([])\n\n# annotate\nfor p in axes1.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    axes1.annotate('{:.1f}'.format(height), (x + width\/2, y + height*1.02), ha='center', color='white', fontsize=14)\n\n# comprasion\naxes2.text(0.2, 0.9, f'''Brown dwarf:''', fontsize=16, color='white', fontweight='bold')\naxes2.text(0.2, 0.85, f'''{cross2.index[5]} - {round(cross2[0][5]\/cross2[0][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.75, f'''Red dwarf:''', fontsize=16, color='white', fontweight='bold')\naxes2.text(0.2, 0.7, f'''{cross2.index[5]} - {round(cross2[1][5]\/cross2[1][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.6, f'''White dwarf:''', fontsize=16, color='white', fontweight='bold')\naxes2.text(0.2, 0.55, f'''{cross2.index[0]} - {round(cross2[2][0]\/cross2[2][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.5, f'''{cross2.index[1]} - {round(cross2[2][1]\/cross2[2][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.45, f'''{cross2.index[2]} - {round(cross2[2][2]\/cross2[2][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.35, f'''Main sequence:''', fontsize=16, color='white', fontweight='bold')\naxes2.text(0.2, 0.3, f'''{cross2.index[0]} - {round(cross2[3][0]\/cross2[3][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.25, f'''{cross2.index[1]} - {round(cross2[3][1]\/cross2[3][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.2, f'''{cross2.index[2]} - {round(cross2[3][2]\/cross2[3][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.15, f'''{cross2.index[4]} - {round(cross2[3][4]\/cross2[3][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.2, 0.1, f'''{cross2.index[6]} - {round(cross2[3][6]\/cross2[3][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.9, f'''Supergiant:''', fontsize=16, color='white', fontweight='bold')\naxes2.text(0.6, 0.85, f'''{cross2.index[1]} - {round(cross2[4][1]\/cross2[4][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.8, f'''{cross2.index[5]} - {round(cross2[4][5]\/cross2[4][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.75, f'''{cross2.index[6]} - {round(cross2[4][6]\/cross2[4][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.65, f'''Hypergiant:''', fontsize=16, color='white', fontweight='bold')\naxes2.text(0.6, 0.6, f'''{cross2.index[0]} - {round(cross2[5][0]\/cross2[5][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.55, f'''{cross2.index[1]} - {round(cross2[5][1]\/cross2[5][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.5, f'''{cross2.index[3]} - {round(cross2[5][3]\/cross2[5][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.45, f'''{cross2.index[4]} - {round(cross2[5][4]\/cross2[5][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.4, f'''{cross2.index[5]} - {round(cross2[5][5]\/cross2[5][7]*100, 2)}%''', fontsize=14, color='white')\naxes2.text(0.6, 0.35, f'''{cross2.index[6]} - {round(cross2[5][6]\/cross2[5][7]*100, 2)}%''', fontsize=14, color='white')\n\n# title\naxes1.text(-0.95, 55, 'Percentage of spectral class by all types of stars', color='white', fontsize=24, fontweight='bold')\naxes2.text(-0.052, 1.05, 'Percentage of spectral class by type of stars', color='white', fontsize=24, fontweight='bold')\n\nfig.show()","b0498eb6":"# cross\ncross3 = pd.crosstab(df['Spectral Class'], df['Star color'], margins=True)\ncross4 = pd.crosstab(df['Spectral Class'], df['Star type'], margins=True)\n\n# fig\nfig = plt.figure(facecolor='#00008B', figsize=(13, 6))\n\n# axes\naxes1 = fig.add_axes([0, 0, 1, 1])\naxes2 = fig.add_axes([0, -1.25, 1, 1])\naxes3 = fig.add_axes([0, -2.5, 1, 1])\naxes4 = fig.add_axes([0, -3.75, 1, 1])\naxes5 = fig.add_axes([0, -5, 1, 1])\naxes6 = fig.add_axes([0, -6.25, 1, 1])\n\n# stripplot\nsns.stripplot(x=df['Spectral Class'], y=df['Temperature (K)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes1)\nsns.stripplot(x=df['Spectral Class'], y=df['Luminosity(L\/Lo)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes2)\nsns.stripplot(x=df['Spectral Class'], y=df['Radius(R\/Ro)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes3)\nsns.stripplot(x=df['Spectral Class'], y=df['Absolute magnitude(Mv)'], color='white', size=6, linewidth=1, edgecolor='black', ax=axes4)\n\n# comprasion (color)\naxes5.text(0.1, 0.9, f'''{cross3.index[0]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.1, 0.85, f'''{cross3.columns[1]} - {round(cross3['Blue-white'][0]\/cross3['All'][0]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.1, 0.8, f'''{cross3.columns[6]} - {round(cross3['White'][0]\/cross3['All'][0]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.1, 0.7, f'''{cross3.index[1]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.1, 0.65, f'''{cross3.columns[0]} - {round(cross3['Blue'][1]\/cross3['All'][1]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.1, 0.6, f'''{cross3.columns[1]} - {round(cross3['Blue-white'][1]\/cross3['All'][1]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.1, 0.55, f'''{cross3.columns[6]} - {round(cross3['White'][1]\/cross3['All'][1]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.1, 0.45, f'''{cross3.index[2]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.1, 0.4, f'''{cross3.columns[4]} - {round(cross3['Pale yellow orange'][2]\/cross3['All'][2]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.1, 0.35, f'''{cross3.columns[6]} - {round(cross3['White'][2]\/cross3['All'][2]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.1, 0.3, f'''{cross3.columns[7]} - {round(cross3['White-Yellow'][2]\/cross3['All'][2]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.1, 0.2, f'''{cross3.index[3]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.1, 0.15, f'''{cross3.columns[5]} - {round(cross3['Red'][3]\/cross3['All'][3]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.4, 0.9, f'''{cross3.index[4]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.4, 0.85, f'''{cross3.columns[2]} - {round(cross3['Orange'][4]\/cross3['All'][4]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.4, 0.8, f'''{cross3.columns[3]} - {round(cross3['Orange-Red'][4]\/cross3['All'][4]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.4, 0.75, f'''{cross3.columns[5]} - {round(cross3['Red'][4]\/cross3['All'][4]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.4, 0.7, f'''{cross3.columns[8]} - {round(cross3['Yellowish'][4]\/cross3['All'][4]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.4, 0.6, f'''{cross3.index[5]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.4, 0.55, f'''{cross3.columns[2]} - {round(cross3['Orange'][5]\/cross3['All'][5]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.4, 0.5, f'''{cross3.columns[5]} - {round(cross3['Red'][5]\/cross3['All'][5]*100, 2)}%''', fontsize=14, color='white')\naxes5.text(0.4, 0.4, f'''{cross3.index[6]}:''', fontsize=16, color='white', fontweight='bold')\naxes5.text(0.4, 0.35, f'''{cross3.columns[0]} - {round(cross3['Blue'][6]\/cross3['All'][6]*100, 2)}%''', fontsize=14, color='white')\n\n# comprasion (type)\naxes6.text(0.1, 0.9, f'''{cross4.index[0]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.1, 0.85, f'''White dwarf - {round(cross4[2][0]\/cross4['All'][0]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.8, f'''Main sequence - {round(cross4[3][0]\/cross4['All'][0]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.75, f'''Hypergiant - {round(cross4[5][0]\/cross4['All'][0]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.65, f'''{cross4.index[1]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.1, 0.6, f'''White dwarf - {round(cross4[2][1]\/cross4['All'][1]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.55, f'''Main sequence - {round(cross4[3][1]\/cross4['All'][1]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.5, f'''Supergiant - {round(cross4[4][1]\/cross4['All'][1]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.45, f'''Hypergiant - {round(cross4[5][1]\/cross4['All'][1]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.35, f'''{cross4.index[2]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.1, 0.3, f'''White dwarf - {round(cross4[2][2]\/cross4['All'][2]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.1, 0.25, f'''Main sequence - {round(cross4[2][2]\/cross4['All'][2]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.9, f'''{cross4.index[3]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.4, 0.85, f'''Hypergiant - {round(cross4[5][3]\/cross4['All'][3]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.75, f'''{cross4.index[4]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.4, 0.7, f'''Main sequence - {round(cross4[3][4]\/cross4['All'][4]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.65, f'''Hypergiant - {round(cross4[5][4]\/cross4['All'][4]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.55, f'''{cross4.index[5]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.4, 0.5, f'''Brown dwarf - {round(cross4[0][5]\/cross4['All'][5]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.45, f'''Red dwarf - {round(cross4[1][5]\/cross4['All'][5]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.4, f'''Supergiant - {round(cross4[4][5]\/cross4['All'][5]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.4, 0.35, f'''Hypergiant - {round(cross4[5][5]\/cross4['All'][5]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.7, 0.9, f'''{cross4.index[6]}:''', fontsize=16, color='white', fontweight='bold')\naxes6.text(0.7, 0.85, f'''Main sequence - {round(cross4[3][6]\/cross4['All'][6]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.7, 0.8, f'''Supergiant - {round(cross4[4][6]\/cross4['All'][6]*100, 2)}%''', fontsize=14, color='white')\naxes6.text(0.7, 0.75, f'''Hypergiant - {round(cross4[4][6]\/cross4['All'][6]*100, 2)}%''', fontsize=14, color='white')\n\n# background color\naxes1.set_facecolor('#00008B')\naxes2.set_facecolor('#00008B')\naxes3.set_facecolor('#00008B')\naxes4.set_facecolor('#00008B')\naxes5.set_facecolor('#00008B')\naxes6.set_facecolor('#00008B')\n\n# spines\naxes1.spines['bottom'].set_color('white')\naxes1.spines[['top', 'right', 'left']].set_visible(False)\naxes2.spines['bottom'].set_color('white')\naxes2.spines[['top', 'right', 'left']].set_visible(False)\naxes3.spines['bottom'].set_color('white')\naxes3.spines[['top', 'right', 'left']].set_visible(False)\naxes4.spines['bottom'].set_color('white')\naxes4.spines[['top', 'right', 'left']].set_visible(False)\naxes5.spines[['top', 'right', 'left', 'bottom']].set_visible(False)\naxes6.spines[['top', 'right', 'left', 'bottom']].set_visible(False)\n\n# labels\naxes1.set_ylabel('Temperature (K)', fontsize=16, color='white')\naxes1.set_xlabel('Spectral Class', fontsize=16, color='white')\naxes2.set_ylabel('Luminosity(L\/Lo)', fontsize=16, color='white')\naxes2.set_xlabel('Spectral Class', fontsize=16, color='white')\naxes3.set_ylabel('Radius(R\/Ro)', fontsize=16, color='white')\naxes3.set_xlabel('Spectral Class', fontsize=16, color='white')\naxes4.set_ylabel('Absolute magnitude(Mv)', fontsize=16, color='white')\naxes4.set_xlabel('Spectral Class', fontsize=16, color='white')\n\n# ticks\naxes1.tick_params(axis = 'both', colors='white')\naxes1.set_yticks(range(0, 41000, 5000))\naxes2.tick_params(axis = 'both', colors='white')\naxes2.set_yticks(range(0, 800001, 100000))\naxes3.tick_params(axis = 'both', colors='white')\naxes3.set_yticks(range(0, 2001, 250))\naxes4.tick_params(axis = 'both', colors='white')\naxes4.set_yticks(range(-10, 21, 5))\naxes5.set_xticks([])\naxes5.set_yticks([])\naxes6.set_xticks([])\naxes6.set_yticks([])\n\n# annotate\naxes1.text(1.35, 27000, f'''r = {round(df.corr('spearman')['Sprectral_for_corr'][0], 2)} (strong positive correlation).\nThe most stars have \"M\" spectral class. \nThe hottest stars have \"O\" spectral class.''', fontsize=14, color='white', fontweight='bold')\naxes2.text(1.26, 640000, f''' r = {round(df.corr('spearman')['Sprectral_for_corr'][1], 2)} (weak positive correlation).\nThe maximum luminosity - \"B\" and \n\"O\" spectral classes.\nThe luminosity of \"F\" spectral class \nis not more than 10.''', fontsize=14, color='white', fontweight='bold')\naxes3.text(2.2, 380, f''' r = {round(df.corr('spearman')['Sprectral_for_corr'][2], 2)} (weak positive correlation).\nThe maximum radius - spectral class \"O\".''', fontsize=14, color='white', fontweight='bold')\naxes4.text(3, 17, f''' r = {round(df.corr('spearman')['Sprectral_for_corr'][3], 2)} (weak positive correlation).\nThe maximum absolute magnitude - spectral class \"M\".''', fontsize=14, color='white', fontweight='bold')\n\n# title\naxes1.text(-0.95, 45000, 'Ratio between Spectral Class and Temperature (K)', color='white', fontsize=24, fontweight='bold')\naxes2.text(-0.95, 940000, 'Ratio between Spectral Class and Luminosity(L\/Lo)', color='white', fontsize=24, fontweight='bold')\naxes3.text(-0.95, 2200, 'Ratio between Spectral Class and Radius(R\/Ro)', color='white', fontsize=24, fontweight='bold')\naxes4.text(-0.95, 23, 'Ratio between Spectral Class and Absolute magnitude(Mv)', color='white', fontsize=24, fontweight='bold')\naxes5.text(-0.08, 1.05, 'Ratio between Spectral Class and Star color', color='white', fontsize=24, fontweight='bold')\naxes6.text(-0.08, 1.05, 'Ratio between Spectral Class and Star type', color='white', fontsize=24, fontweight='bold')\n\nfig.show()","53a3c68a":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Conclusion  <\/h1><\/b>\n\n  \n<b><h3 style=\"text-align:left; color: white\">The largest number of stars is the spectral class \"M\". Also we observe that percentages of spectral class are very similar to the percentages of colors.<\/h3><\/b>","4b5c300b":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Temperature distribution <\/h1><\/b>","bd1a57ef":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Conclusion  <\/h1><\/b>\n\n  \n<b><h3 style=\"text-align:left; color: white\">The luminosity distribution for all types of stars is non-normal and right skewed.<\/h3><\/b>\n    \n<b><h3 style=\"text-align:left; color: white\">The luminosity range is very large - between 0.000080 and 849420.<\/h3><\/b>\n    \n<b><h3 style=\"text-align:left; color: white\"> Maximun luminosity - supergiants and hypergiants, medium - main sequence, minimum - white dwarfs, red dwarfs and brown dwarfs.<\/h3><\/b>    \n \n<b><h3 style=\"text-align:left; color: white\"> Strong positive correlation with radius and strong negative correlation with absolute magnitude.<\/h3><\/b>    \n\n<b><h3 style=\"text-align:left; color: white\"> Strong positive correlation with target.<\/h3><\/b>    ","007c0cb2":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Ratio between spectral classes and other features and target<\/h1><\/b>","ec32b15c":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Conclusion  <\/h1><\/b>\n\n  \n<b><h3 style=\"text-align:left; color: white\">The absolute magnitude distribution for all types of stars is bimodal.<\/h3><\/b>\n    \n<b><h3 style=\"text-align:left; color: white\">Maximum absolute magnitude - brown, red and white dwarfs.<\/h3><\/b>\n    \n<b><h3 style=\"text-align:left; color: white\">Medium absolute magnitude - main seequence.<\/h3><\/b>    \n    \n<b><h3 style=\"text-align:left; color: white\">Minimum absolute magnitude - supergiants and hypergiants.<\/h3><\/b>\n\n<b><h3 style=\"text-align:left; color: white\">Strong negative correlation with luminosity and radius.<\/h3><\/b>\n    \n<b><h3 style=\"text-align:left; color: white\">Very strong negative correlation with target.<\/h3><\/b>","6205f132":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Ratio between Radius(R\/Ro) and other features and target<\/h1><\/b>","a6c1979d":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Percentages of star colors   <\/h1><\/b>","b80849f9":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> About targets  <\/h1><\/b>\n\n<b><h2 style='text-align:left; color: white'>Brown Dwarf (0) <\/h2><\/b>\n\n![image.png](attachment:ee2ef889-4191-4f36-9196-cc3cdbe510dd.png)  \n  \n<b><h4 style=\"text-align:left; color: white\">A brown dwarf is a sub-stellar object \u2013 one that is intermediate in mass between a star and a planet. They are not really brown but a very dull. The upper mass for a brown dwarf is that which is just insufficient for normal hydrogen fusion to be triggered in the core. Based on theoretical considerations, this is believed to be between 0.075 and 0.080 solar mass, or 75 to 80 times the mass of Jupiter. The brown dwarf population of the Milky way is at least 25 billion and may range as high as 100 billion brown dwarfs, which would mean a brown dwarf for every hydrogen-burning star. <\/h4><\/b>\n\n<b><h2 style='text-align:left; color: white'>Red Dwarf (1) <\/h2><\/b>\n![image.png](attachment:0519dda2-eb8c-4cbd-84d7-3ce039557d36.png)\n    \n<b><h4 style=\"text-align:left; color: white\">Red dwarf stars have a prevalence of around 73% in the universe. They are usually of spectral class K and M. Red dwarf stars have temperatures of around 4,000 K, much cooler than our Sun. Though red dwarfs are common, their luminosities are around 0.0001 to 0.8 that of the Sun, and thus despite their prevalence, individual red dwarf stars are hard to spot due to their dimness. Red dwarf stars live up to trillions of years, they might be the last stars to die in the universe, their light, the last to shun in the eternal darkness. Red dwarf stars usually have around 0.08 to 0.45 solar masses.<\/h4><\/b>\n\n<b><h2 style='text-align:left; color: white'>White Dwarf (2) <\/h2><\/b>\n![image.png](attachment:2b0be0b7-8b4a-4d51-bd6b-e20ad3d099db.png)\n    \n<b><h4 style=\"text-align:left; color: white\">White dwarf stars have a prevalence of around 0.4%, and their spectral type is usually D. White dwarf stars have temperatures of around 8,000 to 40,000 K, and they have luminosities of around 0.0001 to 100 times that of the Sun. Usually, white dwarf stars have a mass of around 0.1 to 1.4 that of our Sun, and they continue to live for around 100.000 to 10 billion years. White dwarf stars are composed out of one of the densest forms of matter known in the universe, surpassed by only other compact stars such as neutron stars, black holes, and quark stars.<\/h4><\/b>\n    \n<b><h2 style='text-align:left; color: white'>Main Sequence (3) <\/h2><\/b>    \n![image.png](attachment:b2ed1e27-e422-478c-968c-085cda6c0438.png)\n    \n<b><h4 style=\"text-align:left; color: white\">Stars begin their lives from clouds of dust and gases. A main sequence star is also born that way. The clouds are drawn together by gravity, forming a protostar. Our Sun is an example of a main-sequence star. It is just one of the many. In fact, they make up about 90% of all the stars in stars that populate the universe. The mass of main-sequence stars ranges from about 0.10 to 200 times the solar mass. A star is born when gas and dust collapse in their own gravity and fuse hydrogen atoms. They move away from the main sequence when they use up the hydrogen that fuels their cores.<\/h4><\/b>    \n\n<b><h2 style='text-align:left; color: white'>Supergiant (4) <\/h2><\/b>       \n![image.png](attachment:4dbe7424-c172-4873-851e-a7d2268ad466.png)\n    \n<b><h4 style=\"text-align:left; color: white\">The temperature range of supergiant stars spans from around 3,450 K to 20,000 K. Supergiant stars can have masses from 10 to 70 times greater than our Sun, and when it comes to brightness, some of them can be from 30,000 times or brighter than our Sun. In regards to their radius, supergiants vary greatly, from 30 to 500, or even exceeding 1,000 solar radii. Due to their extreme masses, supergiants have short lifespans of around 10 to 50 million years. They are usually observed in young cosmic structures such as open clusters, the arms of spiral galaxies, and irregular galaxies.<\/h4><\/b>\n    \n<b><h2 style='text-align:left; color: white'>Hypergiant (5) <\/h2><\/b>       \n![image.png](attachment:29c51dcd-c191-4acb-a653-eaf05758fe10.png)\n    \n<b><h4 style=\"text-align:left; color: white\">Hypergiant stars were first identified separately from other supergiants because they are significantly brighter; that is, they have a larger luminosity than others. An example giant star would be Rigel, with 17 times the mass of the Sun. It\u2019s putting out about 66,000 times as much energy as the Sun, and it\u2019s estimated to have 62 times the radius of the Sun.<\/h4><\/b>","9070aa47":"<div style='color:white;\n           background-color:#00008B;\n           '>\n     \n<b><h3 style=\"text-align:left; color: white\">And so, after analisys we can say about problems: <\/h3><\/b>\n    \n<b><h4 style=\"text-align:left; color: white\">- small number of observations; <\/h4><\/b>\n\n<b><h4 style=\"text-align:left; color: white\">- multicollinearity; <\/h4><\/b>\n \n<b><h4 style=\"text-align:left; color: white\">- outliers. <\/h4><\/b>\n    \n<b><h3 style=\"text-align:left; color: white\">I didn't find method, which can helped me to decide problem with small number of observations. I had an idea to generate synthetic examples, but I found only methods for unbalanced cases. And we have outliers, because some observations we will drop. And we will need to do one hot encoding. All this will reduce the data and increase the number of features. So I think that building models on this data is wrong.<\/h3><\/b>","0b29e122":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Ratio between absolute magnitude and other features and target<\/h1><\/b>","a6e467fa":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Absolute magnitude distribution   <\/h1><\/b>","9556a1a8":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Ratio between star colors and other features and target<\/h1><\/b>","e1e14513":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Percentages of spectral classes   <\/h1><\/b>","4e234b49":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Radius distribution   <\/h1><\/b>","2dea6916":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Conclusion  <\/h1><\/b>\n\n  \n<b><h3 style=\"text-align:left; color: white\">The temperature distribution for all types of stars is non-normal and right skewed.<\/h3><\/b>\n    \n<b><h3 style=\"text-align:left; color: white\">The hottest stars - main sequence, supergiants and hypergiants..<\/h3><\/b>    \n    \n<b><h3 style=\"text-align:left; color: white\">Strong (positive) correlation with star color and the spectral class.<\/h3><\/b>    \n\n<b><h3 style=\"text-align:left; color: white\">Correlation with target - medium.<\/h3><\/b>    ","3318796f":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Conclusion  <\/h1><\/b>\n\n  \n<b><h3 style=\"text-align:left; color: white\">The radius distribution for all types of stars is non-normal and right skewed.<\/h3><\/b>\n    \n<b><h3 style=\"text-align:left; color: white\">The largest radius - hypergiants.<\/h3><\/b>\n    \n<b><h3 style=\"text-align:left; color: white\">Strong positive correlation with luminosity and strong negative correlation with absolute magnitude.<\/h3><\/b>\n    \n<b><h3 style=\"text-align:left; color: white\">Strong positive correlation with target.<\/h3><\/b>","c328d01c":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Luminosity distribution   <\/h1><\/b>","db31a527":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Conclusion  <\/h1><\/b>\n\n  \n<b><h3 style=\"text-align:left; color: white\">The largest number of stars are red. They are present in all types, a crop of white dwarfs and stars of main sequence. Brown and red dwarfs have only one color - red.<\/h3><\/b>","c5d62b78":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Ratio between temperature and other features and target<\/h1><\/b>","588e8f44":"<div style='color:white;\n           background-color:#00008B;\n           '>  \n<b><h1 style='text-align:center; color: white'> Features  <\/h1><\/b>  \n<b><h2 style='text-align:left; color: white'>Temperature (K) - Absolute Temperature (in K)<\/h2><\/b>\n<b><h2 style='text-align:left; color: white'>Luminosity(L\/Lo) - Relative Luminosity (L\/Lo)<\/h2><\/b>\n<b><h2 style='text-align:left; color: white'>Radius(R\/Ro) - Relative Radius (R\/Ro)<\/h2><\/b>\n<b><h2 style='text-align:left; color: white'>Absolute magitude(Mv)<\/h2><\/b>    \n<b><h2 style='text-align:left; color: white'>Star color  - white, Red,Blue, Yellow, yellow-orange etc<\/h2><\/b>\n<b><h2 style='text-align:left; color: white'>Spectral class  - O,B,A,F,G,K,,M<\/h2><\/b>    ","5ad72dca":"<div style='color:white;\n           background-color:#00008B;\n           '>\n    \n<b><h1 style='text-align:center; color: white'> Ratio between Luminosity(L\/Lo) and other features and target<\/h1><\/b>"}}