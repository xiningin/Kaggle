{"cell_type":{"a6655e9f":"code","cbad4435":"code","ee9ab1b0":"code","2bf108eb":"code","9f7a526f":"code","754fe82d":"code","b1325447":"code","8268b418":"code","749e3bed":"code","ec00d1b9":"code","2ac38a4e":"code","05486697":"code","307bdd70":"code","ccf70112":"code","0748f3bf":"code","5cf710b2":"code","44866e36":"code","a832e011":"code","d754ec8e":"markdown","0fb08679":"markdown","b9f8650e":"markdown","5ac3f353":"markdown","2f7482fa":"markdown","222973cf":"markdown","542f3778":"markdown","a0ae6210":"markdown","f14b3a54":"markdown","99bc2a24":"markdown","da42ea8d":"markdown","8c2e0e7f":"markdown"},"source":{"a6655e9f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cbad4435":"data_2004 = pd.read_csv('\/kaggle\/input\/lok-sabha-election-candidate-list-2004-to-2019\/LokSabha2004.csv')\ndata_2004.head()","ee9ab1b0":"data_2009 = pd.read_csv('\/kaggle\/input\/lok-sabha-election-candidate-list-2004-to-2019\/LokSabha2009.csv')\ndata_2014 = pd.read_csv('\/kaggle\/input\/lok-sabha-election-candidate-list-2004-to-2019\/LokSabha2014.csv')\ndata_2019 = pd.read_csv('\/kaggle\/input\/lok-sabha-election-candidate-list-2004-to-2019\/LokSabha2019.csv')","2bf108eb":"data_2004['year'] = 2004\ndata_2009['year'] = 2009\ndata_2014['year'] = 2014\ndata_2019['year'] = 2019","9f7a526f":"data = pd.concat([data_2004, data_2009, data_2014, data_2019])","754fe82d":"data.shape","b1325447":"data.head()","8268b418":"data.columns","749e3bed":"data.sort_values(by = 'Criminal Cases', ascending=False)","ec00d1b9":"crimes_city = pd.DataFrame()\ncrimes_city['Criminal Cases'] = data['Criminal Cases']\ncrimes_city['City'] = data['City']","2ac38a4e":"crimes_city.head()","05486697":"top_cities = crimes_city.groupby('City').sum().sort_values(by='Criminal Cases', ascending=False)[:10]","307bdd70":"top_cities.plot(kind='bar')","ccf70112":"data['Education'].value_counts().plot(kind='bar')","0748f3bf":"(data['Education'].value_counts()\/data['Education'].count()*100).plot(kind='bar')","5cf710b2":"(data['Education'].value_counts()\/data['Education'].count()*100).plot(kind='pie', figsize=(25, 10), autopct='%1.2f%%')","44866e36":"data.loc[data['Education']=='Doctorate']","a832e011":"data.loc[data['Education']=='Illiterate']","d754ec8e":"> City with highest Criminal Cases\n* To make things easier lets create a new DataFrame with only \"Criminal Cases\" and \"City\" features","0fb08679":"**Most of the Candidates are UnderGraduates and Illiterates are the least amount of people**","b9f8650e":"* Bar plot representing top 10 cities with highest crime cases","5ac3f353":"**We can see that**\n\n1. Udayakumar S.p.\n2. M.pushparayan\n3. K.Surendran\n\n**are the candidates with most Criminal Cases**","2f7482fa":">To get the Candidate with most number of Criminal Cases\n* Sort the data with 'Criminal Cases' as key in descending order","222973cf":"> Education of Candidates\n1. Plotting Education qualification counts\n2. Plotting Percentages of all Qualifications","542f3778":"**DataFrame for all 4 year combined**","a0ae6210":"***Concat method to concat the frames***","f14b3a54":"* Group all rows based on their 'City' by adding up values of other columns\n* Sort the same on number of Criminal Cases in descending order to get cities with highest crimes","99bc2a24":"**I am begginer and this is my first task, Please provide feedback and any improvements no matter how small they are**","da42ea8d":"**Read all the csv files into Pandas DataFrames and Concat them all together into one DataFrame**","8c2e0e7f":"> Candidates with Doctorate\n* Using loc funtionality to extract data of candidates with doctorate\n* Same with Illterate Candidates"}}