{"cell_type":{"6faf0a56":"code","e3cb70d9":"code","57f3603d":"code","bb3fb633":"code","e2304d85":"code","8ec8620a":"code","7984e6d6":"code","02345344":"code","5f7b6b96":"code","3e4e912d":"code","e29786c9":"code","65b26eac":"code","bd70f231":"code","cc4f50ff":"code","01ec8b5c":"code","596b3170":"code","69009887":"code","c3de94fa":"markdown","bef77564":"markdown","b1786ac9":"markdown","13628b8d":"markdown","ed9a81ed":"markdown","ab5691c3":"markdown","e54c4673":"markdown","b623b271":"markdown","ff040f83":"markdown","8ce57219":"markdown","5b5e31ed":"markdown","ae9a2309":"markdown","47aea62f":"markdown","8fa89531":"markdown","eaf1ce17":"markdown","4e0bd95f":"markdown","e317ce88":"markdown"},"source":{"6faf0a56":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport re\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\ndf = pd.read_csv('\/kaggle\/input\/cocktails-hotaling-co\/hotaling_cocktails - Cocktails.csv')","e3cb70d9":"sns.set(style=\"darkgrid\")\ndef plotDist(data, prop, minimum = 0, title=''):\n    plt.figure(figsize=(10,6))\n    singnificant_values = data.groupby(prop).filter(lambda x: len(x) >= minimum)\n    plot = sns.countplot(\n        data = singnificant_values,\n        y=prop,\n        order=singnificant_values[prop].value_counts().index,\n        palette=\"deep\"\n    )\n    plot.set_title(title)\n    plt.tight_layout()\n    plt.show()\n    return singnificant_values","57f3603d":"df.head()","bb3fb633":"locations = plotDist(df, 'Location', 2, 'Distribution of recepies origin location')","e2304d85":"companies = plotDist(df, 'Bar\/Company', 3, 'Most innovative Bars\/Companies')","8ec8620a":"companiesLocation = plotDist(companies, 'Location', 0, 'Location of top bars\/companies')","7984e6d6":"top10 = companies['Location'].value_counts()[0:10]\nsum(top10) \/ df.shape[0]","02345344":"bartenders = plotDist(df, 'Bartender', 4, 'Top Bartenders')","5f7b6b96":"top5Bartenders = bartenders['Bartender'].value_counts()[0:5]\n\ntop5BartendersData = bartenders.loc[bartenders['Bartender'].isin(top5Bartenders.index)][['Bartender','Bar\/Company']]\n\nplt.figure(figsize=(20,20))\ncatplot = sns.catplot(y=\"Bartender\", hue=\"Bar\/Company\", kind=\"count\", height=6,\n            palette=\"deep\", edgecolor=\".6\",\n            data=top5BartendersData,\n            legend_out=False)\nplt.legend(loc='lower right')\nplt.title(\"Bars\/Companies of top Bartenders\")\nplt.tight_layout()\nplt.show()","3e4e912d":"sum(top5Bartenders) \/ df.shape[0]","e29786c9":"g = df.set_index('Cocktail Name').Garnish.str.split(',', expand=True).stack().reset_index('Cocktail Name').reset_index(drop=True)\ng.columns = ['Cocktail Name', 'garnish']\ng['garnish'] = g['garnish'].str.replace('[0-9] ', '') #remove numbers\ng['garnish'] = g['garnish'].str.replace('rries$','rry') #unify plular and singular\ng['garnish'] = g['garnish'].str.replace('Luxardo Cherry', 'Cherry Luxardo') #remove numbers\ng['garnish']= g['garnish'].map(str.strip) \ng['garnish_ingr'] = g['garnish'].str.replace('[a-zA-Z]+$','') #split\ng['garnish_ingr'] = g['garnish_ingr'][g['garnish_ingr'] != '']\ng['garnish_type'] = g['garnish'].str.extract('([a-zA-Z]+)$')\ng['garnish_type'] = g['garnish_type'][g['garnish_type'] != 'Luxardo']\ng['garnish_type'] = g['garnish_type'].str.capitalize()","65b26eac":"garnish = plotDist(g, 'garnish', 5, 'Most popular garnish')","bd70f231":"garnish_ingr = plotDist(g, 'garnish_ingr', 4, 'Top garnish ingredients')","cc4f50ff":"garnish_type = plotDist(g, 'garnish_type', 15, 'Garnish method')","01ec8b5c":"i = df.set_index('Cocktail Name').Ingredients.str.split(',', expand=True).stack().reset_index('Cocktail Name').reset_index(drop=True)\n\ni.columns = ['Cocktail Name', 'ingredients']\ni['ingredients'] = i['ingredients'].str.replace('.?[0-9]\\.?[0-9]?( oz )?', '') #remove quantity\ni['ingredients'] = i['ingredients'].str.replace('dash|ml|tsp', '') #remove quantity\ni['ingredients'] = i['ingredients'].map(str.strip)\ni['ingredients'] = i['ingredients'].str.lower().str.capitalize()\ni['ingredients'] = i['ingredients'][i['ingredients'].str.contains('juice') == False]\ni['ingredients'] = i['ingredients'][i['ingredients'].str.contains('bitter') == False]","596b3170":"ingredients = plotDist(i, 'ingredients', 20, 'Base Liqueur')","69009887":"topBartender = top5Bartenders[[0]]\n\ntopBartenderData = bartenders.loc[bartenders['Bartender'].isin(topBartender.index)][['Bartender','Cocktail Name']]\nj = pd.merge(topBartenderData, i, on='Cocktail Name')\n\ningredients = plotDist(j, 'ingredients', 3, 'Ingrediends used by Francesco Lafranconi')","c3de94fa":"Top 5 bartenders creaded 15% of total recepies\n\n### Recepies","bef77564":"### TODO:\n- number of drinks combinations with mimimum ingredients\n- add missing Location based on Bars\n- location on a map","b1786ac9":"Ploting aggregated values shows domination of Citruses over `Luxardo Cherry`","13628b8d":"We can see that most of recepies come from United States, mainly San Francisco \n\n### Bar\/Company","ed9a81ed":"Ploting most common ingrediences used by `Francesco Lafranconi` we can spot an abbormal popularity of `Luxardo` products, that might indicate connection between him and brand.","ab5691c3":"### Location","e54c4673":"#### Garnish\n\nData preparation:","b623b271":"The most innovative bar is \"Dirty Habit\" located in San Francisco","ff040f83":"Looking at the data we can see that the most popular option is `Luxardo Cherry` and it is present in 9% of total recepies. This is caused by separation of Citrus based on the dosing method","8ce57219":"Dataset doesn't provide any addition informations about top inventor `Francesco Lafranconi` who, according to Google, is the Executive Director of Mixology and Spirits Educator for Southern Wine and Spirits of Nevada.\n\nWe can see that Brian Means is the man responsible for success of `Dirty Habit`, creating of 62% of their recepies","5b5e31ed":"High number of innovative bars can also be found in New Orleans and New York","ae9a2309":"### Ingredients\n\n#### Data Preparation","47aea62f":"Top 10 bars created 16% of total recepies","8fa89531":"#### Bartenders","eaf1ce17":"![](http:\/\/)## Exploratory Analysis","4e0bd95f":"Quick look at the shape of the table","e317ce88":"#### Favourite ingredients of top Bartenders"}}