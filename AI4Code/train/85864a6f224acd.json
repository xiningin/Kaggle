{"cell_type":{"36a888a2":"code","7fde7ffd":"code","dd748bdd":"code","4ec41ff1":"code","93c2184d":"code","4b4ab7ca":"code","5be4be0f":"code","d680b186":"code","be46611c":"code","28b64b51":"code","0db81eb6":"code","74594e30":"code","37ddbb59":"code","1616478e":"code","030df19f":"markdown","d102e04d":"markdown","858c12f6":"markdown","fb2e2d15":"markdown","8977c89c":"markdown","7cdc44d5":"markdown","a15db35b":"markdown","0f75fcf9":"markdown","4fde3402":"markdown","4bc13924":"markdown","f2fdaefb":"markdown","d013830e":"markdown","1f78bbcf":"markdown","e5baba62":"markdown","80d9efbe":"markdown","be56e6b9":"markdown","96cc0cfc":"markdown","afbeca02":"markdown"},"source":{"36a888a2":"import numpy as np # linear algebra\nM = np.load('\/kaggle\/input\/permissions-table\/M.npy')\nB = np.load('\/kaggle\/input\/permissions-table\/B.npy')\npermissions_table = np.load('\/kaggle\/input\/permissions-table\/permissions_table.npy')","7fde7ffd":"def create_and_evaluate_model(dataset):\n    permisisons_labels = (np.sum(permissions_table,axis=1) > 10).astype(int) # as usuall all the manifests with more than 10 permisisons\n    #required will be considered as maliciuos\n\n    from sklearn.model_selection import train_test_split\n    # Split dataset into training set and test set\n    X_train, X_test, y_train, y_test = train_test_split(dataset, permisisons_labels, test_size=0.3,random_state=109) # 70% training and 30% test\n\n    #Import svm model\n    from sklearn import svm\n    #Create a svm Classifier\n    clf = svm.SVC(kernel='linear') # Linear Kernel\n    #Train the model using the training sets\n    clf.fit(X_train, y_train)\n    #Predict the response for test dataset\n    y_pred = clf.predict(X_test)\n\n    #Import scikit-learn metrics module for accuracy calculation\n    from sklearn import metrics\n    # Model Accuracy: how often is the classifier correct?\n    print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))\n    # Model Precision: what percentage of positive labels are correct?\n    print(\"Precision:\",metrics.precision_score(y_test, y_pred))\n    # Model Recall: what percentage of positive tuples are labelled as such?\n    print(\"Recall:\",metrics.recall_score(y_test, y_pred))\n    # Model f1 score: implemented using a formula on precision and recall\n    print(\"F1 ScoRe:\",metrics.f1_score(y_test, y_pred))\n    fp = len(y_test[(y_test == 0) & (y_test == 1)])\n    N = len(y_test[y_test == 0])\n    # Model fall out: percent of false positive out of all negative in the data\n    print(\"Fall out:\",fp\/N)","dd748bdd":"permissions_table.shape","4ec41ff1":"create_and_evaluate_model(permissions_table)","93c2184d":"def S_B(j):\n    sigmaBij = np.sum(B,axis=0)[j]\n    sizeBj = B.shape[0]\n    sizeMj = M.shape[0]\n    return (sigmaBij\/sizeBj)*sizeMj\n\ndef PRNR(j):\n    sigmaMij = np.sum(M,axis=0)[j]\n    S_Bj = S_B(j)\n    return (sigmaMij-S_Bj)\/(sigmaMij+S_Bj)\n\ndef PRNR_absolute(j):\n    return abs(PRNR(j))","4b4ab7ca":"permissions_table = np.load('\/kaggle\/input\/permissions-table\/permissions_table.npy')\npermissions_PRNR_ranking = np.array([PRNR_absolute(i) for i in np.arange(121)])\nPRNR_reduced_permissions_table = permissions_table[ :, permissions_PRNR_ranking > 0.5]\nprint(\"number of features: \" + str(PRNR_reduced_permissions_table.shape[1]))","5be4be0f":"create_and_evaluate_model(PRNR_reduced_permissions_table)","d680b186":"\nprint(\"number of features used by 1 samples or more: \"+str(sum(np.sum(PRNR_reduced_permissions_table,axis=0) >= 1)))\nprint(\"number of features used by 2 samples or more: \"+str(sum(np.sum(PRNR_reduced_permissions_table,axis=0) >= 2)))\nprint(\"number of features used by 3 samples or more: \"+str(sum(np.sum(PRNR_reduced_permissions_table,axis=0) >= 3)))\nprint(\"number of features used by 4 samples or more: \"+str(sum(np.sum(PRNR_reduced_permissions_table,axis=0) >= 4)))\nprint(\"number of features used by 5 samples or more: \"+str(sum(np.sum(PRNR_reduced_permissions_table,axis=0) >= 5)))","be46611c":"PRNR_SPR_reduced_permissions_table = PRNR_reduced_permissions_table[:,np.sum(PRNR_reduced_permissions_table,axis=0) > 1] # sum all the\n#column thus give us the number of manifests using this feature. then we take only greater than 1\n\n\n\nprint(\"number of features: \" + str(PRNR_SPR_reduced_permissions_table.shape[1]))","28b64b51":"create_and_evaluate_model(PRNR_SPR_reduced_permissions_table)","0db81eb6":"#permissions which will always be together will yeild identical columns. thus we just need to remove identical columns\n\ndef unique_columns2(data): # and thank you stack overflow!\n    dt = np.dtype((np.void, data.dtype.itemsize * data.shape[0]))\n    dataf = np.asfortranarray(data).view(dt)\n    u,uind = np.unique(dataf, return_inverse=True)\n    u = u.view(data.dtype).reshape(-1,data.shape[0]).T\n    return (u,uind)\n\nPRNR_SPR_PMAR_reduced_permissions_table = unique_columns2(PRNR_SPR_reduced_permissions_table)[0]\nprint(\"number of features: \" + str(PRNR_SPR_PMAR_reduced_permissions_table.shape[1]))","74594e30":"create_and_evaluate_model(PRNR_SPR_PMAR_reduced_permissions_table)","37ddbb59":"dangerous_permissions_labels = [12,13,16,17,23,24,43,44,59,65,55,71,82,83,92]\ndangerous_permissions = permissions_table[:, dangerous_permissions_labels]\nprint(\"number of features: \" + str(dangerous_permissions.shape[1]))","1616478e":"create_and_evaluate_model(dangerous_permissions)","030df19f":"with only 15 permissions, will it do as the other models?","d102e04d":"<h1>BASIC<\/h1><br>\nfirst, try with all 121 features:","858c12f6":"so we will take all the features used by 2 or more samples.<br>\nhere we take down all the permisisons which are used only in 1 manifest:","fb2e2d15":"<h1>PRNR + SPR + PMAR<\/h1><br>\nhere we take down permisions which will always appear together (we dont take them both down, we leave just 1 of them):","8977c89c":"create the model:","7cdc44d5":"same as the last one","a15db35b":"lets make a model and test it again, this time with only 38 features:","0f75fcf9":"not bad at all, but we did better!","4fde3402":"define a model creating and evaluating funciton, we will use it later:","4bc13924":"<h1>PRNR<\/h1><br>\ndefine the PRNR function:","f2fdaefb":"load tables:","d013830e":"from 121 features to only 34 featuers, lets check how the model will do:","1f78bbcf":"great, now lets filter out all the rankings which will not help us (their absolute PRNR ranking is below 0.5):","e5baba62":"and we are left with 113 features. next, build a model and see how well it goes:","80d9efbe":"<h1>Dangerous permissions<\/h1><br>\nGoogle has announced 24 dangerous permissions, we will use them to compare this tactic againt out premission reduction tactic<br>\nhere we dont have 24 permissions because we dont have much apks so we dont get all of the permissions:","be56e6b9":"<h1>PRNR + SPR<\/h1><br>\nFirst we look at the number of features which are used by different samples:","96cc0cfc":"did just as well as the last model but with less features!","afbeca02":"with better accuracy, we can suggest that the other features just confused the model."}}