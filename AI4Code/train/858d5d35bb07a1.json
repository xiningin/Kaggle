{"cell_type":{"33322bbc":"code","063de147":"code","7edfaf2b":"code","85c5f72f":"code","6ee41809":"code","a2c99b3f":"code","544d800e":"code","6f0d39dd":"code","8d336dc3":"code","4db6b733":"code","24f1cd8b":"code","51c2e43f":"code","eaed144b":"code","a0a1b96b":"code","74d581b8":"code","e4867d6f":"code","ef0b5a45":"code","d46c249d":"code","165c5e15":"code","9ab98ef0":"code","6a7b1f7c":"code","254d5472":"code","bd5cb1aa":"code","4038c9a2":"code","985913b2":"code","b0f12b84":"code","e2abafc1":"code","98bfd09c":"code","9d806c59":"code","7939e933":"code","997f29b1":"markdown","a91fab8a":"markdown","8311e2d9":"markdown","bf0089e4":"markdown","7e05ce90":"markdown","3adca9ba":"markdown","7debd9e9":"markdown","55a46b7e":"markdown","8ee718c8":"markdown","afbf6dc1":"markdown","6e44e97f":"markdown","14875b8b":"markdown","b00f20b8":"markdown","eb5e1858":"markdown","c3116a46":"markdown","198b0b19":"markdown","8bd00612":"markdown","eecb76fc":"markdown","07520bf7":"markdown","621c4210":"markdown","abeafe32":"markdown","ed366f3a":"markdown","46969e35":"markdown","5a2aad64":"markdown","9fdb5103":"markdown","d5143720":"markdown"},"source":{"33322bbc":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport tensorflow as tf\nfrom sklearn.metrics import classification_report\nfrom sklearn.preprocessing import OrdinalEncoder\nimport seaborn as sns\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\nimport numpy as np\nimport plotly.express as px\nimport folium\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.preprocessing import MinMaxScaler\nfrom folium import plugins\nfrom sklearn.preprocessing import StandardScaler\nfrom folium.plugins import HeatMap\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","063de147":"melbourne_file_path = '..\/input\/melbourne-housing-snapshot\/melb_data.csv'\n# read the data and store data in DataFrame titled melbourne_data\ndata = pd.read_csv(melbourne_file_path) ","7edfaf2b":"# As seen from below, the dataset has 21 features. Unfortinately, some features has missing values such as BuildingArea and Yearbuilt for the first look.\n\n\ndata.head()","85c5f72f":"# Count of the missing values of the dataset\ncount_NaN = data.isna().sum()\ncount_NaN","6ee41809":"# Dropping the highly NaN and not needed columns. BuildingArea, YearBuilt.\ndata = data.dropna(subset=['BuildingArea', 'YearBuilt'], axis=0)\ndata = data.drop(['Address', 'Type', 'Method', 'SellerG', 'Date', 'CouncilArea'], axis=1)\n\ndata.head()","a2c99b3f":"# Creating a new dataset with the Latitude and Longitude\nlatitude = data['Lattitude']\nlongitude = data['Longtitude']\n\n# Filling the missing Car values with the mean of the Car value which is 1\ndata['Car'].fillna(np.floor(data['Car'].mean()), inplace=True)\n\ndata.head()","544d800e":"# Let's check the missing values after dropping the chosen columns\n# As you can see from below, there is no more missing data points\ncount_NaN_afterDrops = data.isna().sum()\ncount_NaN_afterDrops","6f0d39dd":"# Encoding the string dataframe (Regionname) and (Suburb) columns\nordinal_enc = OrdinalEncoder()\ndata['Encoded_Regionname'] = ordinal_enc.fit_transform(data[['Regionname']])\ndata['Encoded_Suburb'] = ordinal_enc.fit_transform(data[['Suburb']])","8d336dc3":"# Encoded Regionname Dictionary, I would use this part for analysing the dataset. As you can see below, the Regionname columns are encoded from 0 to 7.\nEncoded_Regionname = data[[\"Regionname\", \"Encoded_Regionname\"]].drop_duplicates().sort_values(by='Encoded_Regionname')\nEncoded_Regionname","4db6b733":"# Encoded Suburb Dictionary. As you can see below, the Suburb columns are encoded.\nEncoded_Suburb = data[[\"Suburb\", \"Encoded_Suburb\"]].drop_duplicates().sort_values(by='Encoded_Suburb')\nEncoded_Suburb","24f1cd8b":"# Before the starting the visualizations, let's check our dataset after the changes.\ndata","51c2e43f":"# Density Plot of the Prices\nplt.figure(figsize=(15, 8))\nsns.distplot(data['Price'], hist=True, color='red')\nplt.xlabel(\"Price (M)\", fontsize=12)\nplt.ylabel('Density',fontsize=12)\nplt.title(\"Density Plot of the House Prices\", fontsize=16)","eaed144b":"# Density Plot of the Landsize\nplt.figure(figsize=(15, 8))\nsns.distplot(data['Landsize'], hist=True, color='blue')\nplt.ylabel('Density',fontsize=12)\nplt.xlabel(\"Landsize\", fontsize=12)\nplt.title(\"Density Plot of the Landsize\", fontsize=16)","a0a1b96b":"# Density Plot of the Regionname\nplt.figure(figsize=(15, 8))\nsns.distplot(data['Encoded_Regionname'], hist=True, color='darkblue')\nplt.ylabel('Density',fontsize=12)\nplt.xlabel(\"Regionname\", fontsize=12)\nplt.title(\"Density Plot of the Regionname\", fontsize=16)","74d581b8":"Encoded_Regionname","e4867d6f":"# Density Plot of the Distance from CBD (Central Business Sub District)\nplt.figure(figsize=(15, 8))\nsns.distplot(data['Distance'], hist=True, color='green')\nplt.ylabel('Density',fontsize=12)\nplt.xlabel(\"Distance from CBD\", fontsize=12)\nplt.title(\"Density Plot of the Distance from CBD\", fontsize=16)","ef0b5a45":"# Density Plot of the Rooms\nplt.figure(figsize=(15, 8))\nsns.distplot(data['Rooms'], hist=True, color='purple')\nplt.ylabel('Density',fontsize=12)\nplt.xlabel(\"Rooms\", fontsize=12)\nplt.title(\"Density Plot of the Rooms\", fontsize=16)","d46c249d":"# Regions vs Price barplot\nplt.figure(figsize=(20, 8))\nsns.barplot(x=data['Regionname'], y=data['Price'])\nplt.title(\"Graph of the Regions vs Price\", fontsize=16)\nplt.ylabel('Price (M)', fontsize=12)\nplt.xlabel('Regionnames', fontsize=12)","165c5e15":"# The Relationship between the Distance vs Price\nfig = px.scatter(data, x='Distance', y='Price', hover_data=['Price'])\nfig.update_layout(title='The Relationship between the Distance and the Price', title_x=0.5, title_font=dict(size=24))\nfig.show()\n","9ab98ef0":"# The Relationship between the Suburb vs Price\nfig = px.scatter(data, x='Regionname', y='Price', hover_data=['Price'])\nfig.update_layout(title='The Relationship between the Regionname and the Price', title_x=0.5, title_font=dict(size=24))\nfig.show()","6a7b1f7c":"# The Relationship between the Rooms vs Price\ntotal_rooms = data['Rooms'] + data['Bedroom2'] + data['Bathroom']\nfig = px.scatter(data, x=total_rooms, y='Price', hover_data=['Price'])\nfig.update_layout(title='The Relationship between the Regionname and the Price', title_x=0.5, title_font=dict(size=24))\nfig.update_layout(xaxis_title='Total Number of Rooms')\nfig.show()","254d5472":"fig = px.density_mapbox(data, lat=latitude, lon=longitude, z=data['Price'],\n                        center=dict(lat=-37.823002, lon=144.998001), zoom=9,\n                        mapbox_style=\"stamen-terrain\",\n                        radius=20,\n                        opacity=0.5)\nfig.update_layout(title_text='Melbourne Heatmap of the House Prices', title_x=0.5, title_font=dict(size=32))\nfig.show()","bd5cb1aa":"# Correlation Analysis of the Dataset\nplt.figure(figsize=(15, 8))\ncorrelation = sns.heatmap(data.corr(), vmin=-1, vmax=1, annot=True, linewidths=1, linecolor='black')\ncorrelation.set_title('Correlation Graph of the Melbourne Dataset', fontdict={'fontsize': 24})\n","4038c9a2":"# After encoding the Suburb and Regionname columns, I don't need them for now\ndata = data.drop(['Suburb', 'Regionname'], axis=1)\ndata.head()","985913b2":"# y are the values I want to predict and, X is the input.\n\n# Due to Price feature is not distributed well, I will apply a log transform in order to distribute the Price feature well.\ny = np.log(data['Price'])\nX = data.drop('Price', axis=1)\n\n\n# The X values are given below\nX.head()","b0f12b84":"plt.figure(figsize=(15, 8))\nsns.distplot(y)\nplt.xlabel(\"Price (M)\", fontsize=12)\nplt.ylabel('Density',fontsize=12)\nplt.title(\"Log Transformed Density Plot of the House Prices\", fontsize=16)","e2abafc1":"# Train and Text split. I picked the test size as %20 and I enabled the Shuffle. In order to obtain the same train and test dataset for the each try and gain more interpretation, I will set the random_state as 13.\ntrainX, testX, trainY, testY = train_test_split(X, y, test_size=0.15, shuffle=True, random_state=13)\ntrainX = pd.DataFrame(trainX)\ntrainY = pd.DataFrame(trainY)\n","98bfd09c":"# Random Forest Model\nrf = RandomForestRegressor(max_depth=60, max_features=6, min_samples_leaf=5,\n                           min_samples_split=6, n_estimators=60, oob_score=True,\n                           max_leaf_nodes=55)\n\nrf.fit(trainX, trainY)","9d806c59":"train_score = rf.score(trainX, trainY)\noob_score = rf.oob_score_\nAdjusted_R2_train = 1 - (1-rf.score(trainX, trainY))*(len(trainY)-1)\/(len(trainY)-trainX.shape[1]-1)\nAdjusted_R2_test = 1 - (1-rf.score(testX, testY))*(len(testY)-1)\/(len(testY)-testX.shape[1]-1)\n\nprint('Train Adjusted R2: %', Adjusted_R2_train*100)\nprint('Test Adjusted R2: %', Adjusted_R2_test*100)\nprint('OOB Score: %', oob_score*100)","7939e933":"plt.figure(figsize=(15, 8))\nplt.barh(X.columns, rf.feature_importances_)\nplt.title(\"Melbourne Housing Snapshot Feature Importance\", fontsize=20)\nplt.xlabel('Relative Importance', fontsize=12)\n","997f29b1":"# Random Forest Regression\n\n**In this part of the notebook, I will drop the already encoded features and split the dataset into two parts which are train and test datasets.**","a91fab8a":"# The Model Scores\n\n**To check model performance, I will use the OOB score and the Validation Score. These two scores evaluate the R2 error, but for the better error analysis, I will use the Adjusted R2 Score.** \n\n**Ref: https:\/\/www.statisticshowto.com\/probability-and-statistics\/statistics-definitions\/adjusted-r2\/**\n","8311e2d9":"**The figure above shows that the Graph of the Regions vs House Prices. The X-axis represents that the Region names and the Y-axis represent that the price of the houses. According to this graph, the Southern Metropolitan has the highest total house prices. This is not mean that the most expensive houses are located there. As you can see from the Density of the Region names, the Southern Metropolitan had the highest density.**\n\n**Hence, the highest price of the Southern Metropolitan may not refer that the Southern Metropolitan is the most expensive region.**","bf0089e4":"**The heatmap above shows that the Melbourne Heatmap of the House Prices. Feel free to zoom in and zoom out for better visualization and interpretation. South-Eastern Metropolitan region has mostly the highest values which are reasonable for the analysis above.**","7e05ce90":"**The figure above represents that the Melbourne Housing Snapshot Feature Importances. The X-axis represents that the Relative Importance and the Y-axis represents that the input features.**\n\n**As you can see in the graph, the most Relative Impoertance is Building Area which is logical. After checking the Correlation Graph of the Melbourne Housing Dataset, the Relative Importance values are looking reasonable.**\n\n\n**\n\n**\n\n**Thank you if you followed me this far!**\n\n**I am open to your feedbacks and suggestions, feel free to contact me!**","3adca9ba":"**After droping some features as follows, the dataset come out like the above.**\n\n**At the end of this operation, I will hold the maximum features but I will lose some data points.**","7debd9e9":"# Data Visualization\n\n**For the first step of this notebook, I will clear the dataset and, I will start with simple dataset visualization. I will use Seaborn, Plotly, and Folium libraries for this step. At the end of this step, I will make a simple data analysis.**\n","55a46b7e":"# Melbourne Housing Snapshot Feature Importance","8ee718c8":"# Encoding the String Dataset Columns\n\n**The dataset contains 2 string columns, therefore I will encode them for the better analysis and visualization. I will use the OrdinalEncoder.**","afbf6dc1":"**As you can see from the Correlation Graph of the Melbourne Dataset, the Rooms feature is highly correlated with the House Prices. This analysis makes sense because of the scatter plot of these two features.**\n\n**The House Price and the Distance is negatively correlated features which makes sense because of the scatter plot of these features. We can say that if the house is closer to CBD, the House Price becomes higher.**\n\n**For the Bedroom and the Bathroom features are highly correlated with the House Prices. Well, this make sense due to these rooms were related according to scatter plot of these features.**\n\n**This analysis would help me to choose the best features for machine learning model.**","6e44e97f":"# Importing the Libraries","14875b8b":"**As seen from the Density Plot of the Landsize, the X-axis represents that the house Landsizes and the Y-axis represents that the Density of the Density of the Landsizes. According to the graph, the house prices have high density between the 0 values.**","b00f20b8":"**According to this scatter plot above, the X-axis represents that the Distance to the Central Business Sub District. And the Y-axis represents that the House Prices. According to this scatter plot above, the Distance and the House Prices have mostly distributed on the lower Distances. This plot makes sense because people would like to choose their houses close to the Central Business Sub District. Hence, this high demand would increase house prices.**","eb5e1858":"**The Test Adjusted R2 Score and OOB Score is close to each other. This model is not performing not bad but not well, so I should use some feature engineering techniques for better results. Please let me know about your comments and interpretations of these error analyses.**","c3116a46":"**READ ME** \n(this informations are taken from the Melbourne Housing Snapshot, Notes on Specific Variables: https:\/\/www.kaggle.com\/dansbecker\/melbourne-housing-snapshot)\n\nRooms: Number of rooms\n\nPrice: Price in dollars\n\nDate: Date sold\n\nDistance: Distance from CBD\n\nRegionname: General Region\n\nPropertycount: Number of properties that exist in the suburb.\n\nBathroom: Number of Bathrooms\n\nCar: Number of carspots\n\nLandsize: Land Size\n\nBuildingArea: Building Size","198b0b19":"**In the figure above, the X-axis represents that the Distance from CBD and CBD reffers that the Central Business Sub District. The Y-axis represents that the Density of the Distance from CBD. According to this graph, the most of the houses are close to the Central Business Sub District.**","8bd00612":"**I will create a new dataset with the Latitude and Longitude values. I will use these values for pretty funny visualization. And then I filled the missing data points for the Car feature by using the average of the Car feature.**\n","eecb76fc":"# Clearing the Data and Pre-process\n\n**In this part of the notebook, I will search for the missing dataset values and fill them. Finally, I will make several data pre-process steps for better performance and visualization.**","07520bf7":"**As you can see from the missing values of the dataset, the BuildingArea, YearBuilt, CouncilArea features have pretty high missing values. For this notebook, I will not these values.**","621c4210":"**As seen from the Density Plot of the Prices, the X-axis represents that the house prices in M and the Y-axis represents that the Density of the house prices. According to the graph, the house prices have high density between the 85K and 2M dollars.**\n\n**The house prices are not well distributed, therefore I will need a data pre-processing step for solving this issue.**","abeafe32":"**According to this scatter plot above, the X-axis represents that the Region names. And the Y-axis represents that the House Prices. According to this graph above, the most expensive house is located at the South-Eastern Metropolitan and this house is 9M dollars.**\n\n**We analyzed the Region names and the Prices by the bar plot. I said that \"According to this graph, the Southern Metropolitan has the highest total house prices. This is not mean that the most expensive houses are located there.\". But according to this scatter plot above, I can say that the Southern Metropolitan is the most expensive region. And the cheapest region is Western Victoria.**\n\n**The cheapest house is located at the Western Metropolitan religion and it is 85K dollars.**","ed366f3a":"# Aim of the Notebook\n\n\n**Hello everyone, welcome to this Notebook!**\n\n**In this notebook, I will be working on the Melbourne Housing Snapshot dataset. I always love dealing with house price prediction problems. I hope would create a nice model for this problem.**\n\n**For the first step of this notebook, I will clear the dataset and, I will start with simple dataset visualization. I will use Seaborn, Plotly, and Folium libraries for this step. At the end of this step, I will make a simple data analysis.**\n\n**For the next step, I will use a simple Random Forest Reggresor for the predictions.**\n\n**Finally, I will analyze the prediction results and finish my notebook.**\n\n**I am open to feedback and suggestions, feel free to comment your feedback and suggestions on the comment section or contact me.**\n\n**So, let's get started!**","46969e35":"**According to this scatter plot above, the X-axis represents that the Total Number of Rooms which refers that the total rooms, bedrooms, and bathrooms. And the Y-axis represents that the House Prices. According to this scatter plot above, the Total Number of Rooms and the House Prices have a high relationship till 15 Total Number of Rooms. But this relation is not valid for the after 15 Total Number of Rooms.**","5a2aad64":"**In the figure above, the X-axis represents that the Encoded_Regionnames and you can see the Encoded_Regionname Dictionary also above. The Y-axis represents that the Density of the Encoded_Regionname. According to the graph, The most of the houses are located at the Southern Metropolitan and Northern Metropolitan.**\n\n**The lowest Density of the Encoded_Regionnames are Northern Victoria and Western Victoria.**","9fdb5103":"**In the figure above, the X-axis represents that the Rooms of the houses. And the Y-axis represents that the Density of the Rooms. According to this graph, the most of the houses have 2, 3 or4 rooms but the 3 rooms have the majority.**","d5143720":"# Correlation Graph of the Melbourne Dataset"}}