{"cell_type":{"5f2f4db5":"code","9758cecb":"code","dfc528b4":"code","6bd3f4e0":"code","1824c907":"code","2898cfd1":"code","c2e9ed10":"code","538c384e":"code","e104a7cd":"code","62e2352a":"code","7eada821":"code","7035ffc1":"code","d248bad9":"code","947996ff":"code","dffd578e":"code","efb4fd60":"code","93f08b2a":"code","4ab999fc":"code","70519308":"code","59e50ea0":"code","1fea03f1":"code","7e085f50":"markdown","8e63ac31":"markdown","27afb031":"markdown","2ba32533":"markdown","16b69782":"markdown","70c1e250":"markdown","c349760d":"markdown","92736ab6":"markdown","ad3292b1":"markdown","0319fba3":"markdown","f331f960":"markdown","7d2b7810":"markdown","ffaf1351":"markdown"},"source":{"5f2f4db5":"import numpy as np\nimport pandas as pd","9758cecb":"odi = pd.read_csv('https:\/\/bit.ly\/2NDmwxt')\nodi.head()","dfc528b4":"# data type.\nnum_colms = odi._get_numeric_data()\nnum_colms.head()","6bd3f4e0":"# modi = pd.read_csv('https:\/\/bit.ly\/2JNsUkA')\n# modi.head()","1824c907":"# Create new columns\n# is_century, is_duck, is_fifty, is_missed_century","2898cfd1":"odi['is_century'] = odi['Runs'].apply(lambda v: 1 if v> 99 else 0)\nodi['is_duck'] = odi['Runs'].apply(lambda v: 1 if v == 0 else 0)\nodi['is_fifty'] = odi['Runs'].apply(lambda v: 1 if v> 49 else 0)\nodi['is_missed_century'] = odi['Runs'].apply(lambda v: 1 if v> 90 and v < 100 else 0)","c2e9ed10":"odi.head()","538c384e":"players_summary = odi.groupby('Player').agg({\n    'Runs' : 'sum',\n    'ScoreRate' : 'mean',\n    'Country' : 'count',\n    'is_century' : 'sum',\n    'is_fifty' : 'sum',\n    'is_duck' : 'sum',\n    'is_missed_century' : 'sum'\n})\n\ncols_rename = { 'Country' : 'Total Matches',\n              'is_century': 'Centuries',\n               'is_fifty' : 'Fifties',\n               'is_duck' : 'Ducks',\n               'is_missed_century' : 'Missed Centuries'\n              }\n\nplayers_summary = players_summary.rename( columns = cols_rename)","e104a7cd":"players_summary = players_summary.sort_values('Runs' , ascending = False)\nplayers_summary.to_csv('players_summary.csv')","62e2352a":"# trending analysis\n\nodi['date']=pd.to_datetime(odi['MatchDate'], format ='%m-%d-%Y')\nodi['year'] = odi['date'].dt.year","7eada821":"# splitting\nodi['year1']=odi['MatchDate'].apply(lambda v: v.split('-')[-1])\nodi['year2']=odi['MatchDate'].str[-4:]\nodi[['date','year','year1','year2']].head()","7035ffc1":"#pivot table creation\nyears_summary = odi.pivot_table(index='Player',\n                                columns='year',\n                                values='Runs',\n                               aggfunc= 'sum')\nyears_summary.head()","d248bad9":"years_summary.loc['Sachin R Tendulkar']","947996ff":"%matplotlib inline\nyears_summary.loc['Sachin R Tendulkar'].plot.line()","dffd578e":"years_century = odi.pivot_table(index='Player',\n                                columns='year',\n                                values='is_century',\n                               aggfunc= 'sum')\nyears_summary.head()","efb4fd60":"years_fifties = odi.pivot_table(index='Player',\n                                columns='year',\n                                values='is_fifty',\n                               aggfunc= 'sum')\nyears_fifties.head()","93f08b2a":"player_name = 'Sachin R Tendulkar'\nsachin_centuries = years_century.loc[player_name]\nsachin_fifties = years_fifties.loc[player_name]\nimport matplotlib.pyplot as plt\nfig, axs = plt.subplots(1)\nsachin_centuries.plot.line(ax=axs)\nsachin_fifties.plot.line(ax=axs)\nplt.legend(['Year wise no of Centuries',\n            'Year wise no of fifties'])","4ab999fc":"# versus analysis\nsachin_rows = odi[odi['Player']== 'Sachin R Tendulkar']\nversus_runs = sachin_rows.groupby('Versus')['Runs'].sum()\nversus_runs.sort_values(ascending= False).head(10).plot.bar()","70519308":"top5_versus = versus_runs.sort_values(ascending = False).head(5).index\ntop5_versus","59e50ea0":"import seaborn as sns\nsachin_versus_rows = sachin_rows[sachin_rows['Versus'].isin(top5_versus)]\nsns.boxplot(data=sachin_versus_rows, y ='Runs',x='Versus')","1fea03f1":"sachin_versus_rows.boxplot('Runs',by='Versus',figsize=(14,5))","7e085f50":"Pick a player and show different metrics.","8e63ac31":"![image.png](attachment:image.png)","27afb031":"# Cricket data set","2ba32533":"# -- The End --","16b69782":"based on the questions and assumptions. Three types of analysis can be done\n- player profiling\n- ground profiling\n- country profiling  \n\nNow prioritize which is important and based on that segregate your dashboard granularity.","70c1e250":"**frquency analysis and distribuion analysis**","c349760d":"### Data types\n\nnum_colms \n- Runs, score rate\ncategorical column(column which has repeated names multiple times) \n- Country , Player , Ground , Versus\nText_columns \n- none\ngeographical column \n- ground,versus,country\ndate \n- match date","92736ab6":"### list down possible questions and generalize them. \n\ntype of analysis that can be done on this dataset.\n- which country has the top 20 best players\n- Which ground has good batting and bowling pitch based on the score rate\n- the players ability to play in homeground and foriegn ground\n- how constant is the score rate of a player over years, improvments.\n- in which location highest number of matches were conducted","ad3292b1":"# Descriptive analysis on Cricket Data set","0319fba3":"# Player performance","f331f960":"### Data Imputation for Data Mining.\n(i.e, Creating new columns using existing columns)\nfor example columns \n - New columns that could be created : \n    - Runs : full centuries,half centuries, duck outs.\n    - grounds : Lattitude & Longitude.\n    - MatchDate: month, year, day,avg temp,Weekday.","7d2b7810":"## Modi twitter data set","ffaf1351":"Granularity - information of every player who has played in the ODI from beginning of odi to 2011.\nthis is player wise data against every match."}}