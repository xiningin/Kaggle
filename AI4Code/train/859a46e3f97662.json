{"cell_type":{"2f511f08":"code","1cf3f44c":"code","ca57bf06":"code","c6af77a6":"code","7a5cd57f":"code","6f29c91b":"code","56991aa5":"code","8434a8f4":"code","1247298d":"code","10c62943":"code","8ef3a68f":"code","083cec22":"code","ac7e31a7":"code","35f38df7":"code","ccdc5ee6":"code","f286fd44":"code","54510f13":"code","49617f04":"code","2e4be1b6":"code","9cb9e169":"code","f23b2377":"code","da560073":"code","546eb76c":"code","d6829413":"code","2cba3146":"code","8ca37827":"code","43fe5428":"markdown","c1e9bc63":"markdown","a76ff1e0":"markdown","e8c48807":"markdown","657625bb":"markdown","17541093":"markdown","a4af1600":"markdown","32e42e0b":"markdown","0e39267e":"markdown","2e3bd241":"markdown","f1daf698":"markdown","ed566ac8":"markdown","d3e78846":"markdown","5dc21e7a":"markdown","2337e32a":"markdown","8eb9957a":"markdown","079471a7":"markdown","842ffa69":"markdown","9f208f2f":"markdown","c3792da6":"markdown","7e51c3e5":"markdown","5ce580c1":"markdown","c1dbe7a3":"markdown","cbb0b64a":"markdown","5d6da629":"markdown","771d6452":"markdown","e31fdb49":"markdown","65d6726f":"markdown"},"source":{"2f511f08":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import LabelEncoder\nfrom xgboost import XGBRegressor\nfrom sklearn import metrics","1cf3f44c":"sales_data = pd.read_csv(\"..\/input\/bigmart-sales-data\/Train.csv\")\nsales_data.head()","ca57bf06":"sales_data.info()","c6af77a6":"sales_data.isnull().sum()","7a5cd57f":"# Imputation\nsales_data['Item_Weight'] = sales_data['Item_Weight'].fillna(sales_data['Item_Weight'].mean())\nsales_data['Outlet_Size'] = sales_data['Outlet_Size'].fillna(sales_data['Outlet_Size'].mode()[0])\nsales_data.isnull().sum()","6f29c91b":"sales_data.head()","56991aa5":"sales_data['Item_Fat_Content'].value_counts()","8434a8f4":"# Low Fat, LF and low fat are all same and Regular and reg are same so we need to combine them.\nsales_data.replace({'Item_Fat_Content':{'low fat':'Low Fat','LF':'Low Fat','reg':'Regular'}},inplace=True)\nsales_data['Item_Fat_Content'].value_counts()","1247298d":"# Now we'll do label encoding to transform categorical values to numerical values\nencoder = LabelEncoder()\nsales_data['Item_Identifier'] = encoder.fit_transform(sales_data['Item_Identifier'])\nsales_data['Item_Fat_Content'] = encoder.fit_transform(sales_data['Item_Fat_Content'])\nsales_data['Item_Type'] = encoder.fit_transform(sales_data['Item_Type'])\nsales_data['Outlet_Identifier'] = encoder.fit_transform(sales_data['Outlet_Identifier'])\nsales_data['Outlet_Size'] = encoder.fit_transform(sales_data['Outlet_Size'])\nsales_data['Outlet_Location_Type'] = encoder.fit_transform(sales_data['Outlet_Location_Type'])\nsales_data['Outlet_Type'] = encoder.fit_transform(sales_data['Outlet_Type'])\n\nsales_data.head()","10c62943":"sales_data.head()","8ef3a68f":"# We can use a heatmap to check correlation between the variables.\ncorr = sales_data.corr()\nplt.figure(figsize=(8,8))\nsns.heatmap(corr,cbar=True,square=True,fmt='.1f',annot=True,cmap='Reds')","083cec22":"# What type of item has most sales?\nplt.figure(figsize=(20,10))\nsns.barplot(x='Item_Type',y='Item_Outlet_Sales',data=sales_data)\nplt.grid()","ac7e31a7":"# Which year were there highest sales?\nplt.figure(figsize=(10,10))\nsns.countplot(x=\"Outlet_Establishment_Year\", data=sales_data)","35f38df7":"# What type of outlet usually has more sales?\nplt.figure(figsize=(10,10))\nsns.countplot(x=\"Outlet_Type\", data=sales_data)","ccdc5ee6":"# We need to split the data\nX = sales_data.drop(columns='Item_Outlet_Sales',axis=1) # We need all the variables (columns) as independent variables so we're just dropping the target column to make things easier.\ny = sales_data['Item_Outlet_Sales'] # Target\n\n# Then we split the data into training and testing data\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.2, random_state = 2) # 80% data will be used for training the model and rest 20% for testing.","f286fd44":"print(X.shape,X_train.shape)","54510f13":"model1 = XGBRegressor()\n\n# Now we need to train the model\nmodel1.fit(X_train,y_train) # fitting means training","49617f04":"model2 = LinearRegression()\nmodel2.fit(X_train,y_train)","2e4be1b6":"train_pred1 = model1.predict(X_train)\ntrain_pred1","9cb9e169":"train_pred2 = model2.predict(X_train)\ntrain_pred2","f23b2377":"# Now we use R squared error (Basically comparing the original y_train and predictions and seeing difference\/error)\n\n# For XGBRegressor\nRSQscore1 = metrics.r2_score(y_train,train_pred1)\n\n# Let's check\n\n# The closer the errors are to 0, the more accurate our model is.\nprint(\"R squared error for XGB Regressor:\",RSQscore1) ","da560073":"# For Linear Regressor\nRSQscore2 = metrics.r2_score(y_train,train_pred2)\n\n# Let's check\n\n# The closer the errors are to 0, the more accurate our model is.\nprint(\"R squared error for Linear Regressor:\",RSQscore2) ","546eb76c":"test_pred1 = model1.predict(X_test)\ntest_pred1","d6829413":"test_pred2 = model2.predict(X_test)\ntest_pred2","2cba3146":"# Now we use R squared error (Basically comparing the original y_train and predictions and seeing difference\/error)\n\n# For XGBRegressor\nRSQscore1 = metrics.r2_score(y_test,test_pred1)\n\n# Let's check\n\n# The closer the errors are to 0, the more accurate our model is.\nprint(\"R squared error for XGB Regressor:\",RSQscore1) ","8ca37827":"# For Linear Regressor\nRSQscore2 = metrics.r2_score(y_test,test_pred2)\n\n# Let's check\n\n# The closer the errors are to 0, the more accurate our model is.\nprint(\"R squared error for Linear Regressor:\",RSQscore2) ","43fe5428":"**Linear regression is a regression model that estimates the relationship between one independent variable and one dependent variable using a straight line.**\n\n**Example**\n\n**You are a social researcher interested in the relationship between income and happiness. You survey 500 people whose incomes range from 15k to 75k and ask them to rank their happiness on a scale from 1 to 10.**\n**Your independent variable (income) and dependent variable (happiness) are both quantitative, so you can do a regression analysis to see if there is a linear relationship between them.**","c1e9bc63":"# Supervised vs Unsupervised Learning","a76ff1e0":"**But keep in mind that we used training data to check accuracy. We need to check using test data for a better understanding.**","e8c48807":"# Splitting Data","657625bb":"**All our missing values are imputed so now we're good to go.**","17541093":"# Missing Values","a4af1600":"# Linear Regression","32e42e0b":"**Interestingly, 1985, the debut year of the mall had the highest sales but from then on, sales volume was pretty much constant.**","0e39267e":"**We're going to build a LinearRegression model and XGBoost model and compare. Finally, we will use the one with higher accuracy.**","2e3bd241":"**For training data, linear regressor is a better model for our project as it's R squared error is closer to 0. But we can still check with other models to find best model.**","f1daf698":"**So, we have missing values in Item_Weight and Outlet_Size column. We need to impute these missing values with appropriate ones. We usually replace missing values in numerical columns with mean and in categorical columns with mode.**","ed566ac8":"**As we can see, 6818 rows are used for testing out of 8523 which is about 80% of the data.**","d3e78846":"**First, we need to use the model to predict prices from the training data. Then, we check our model's accuracy using R squared error\/ Mean Square error\/ Mean Absolute error (for regression).**","5dc21e7a":"# Model Evaluation","2337e32a":"**This notebook is a guide for beginners into machine learning, linear regression to be more specific. There will be comments every step of the way so there is a clear understanding. We will be working on a mall's dataset and try to find insights on company's business decisions through exploratory data analysis and use linear regression models to predict sales.**","8eb9957a":"**Machine learning is divided into supervised and unsupervised learning. In supervised learning, we train our model with data that we have previously acquired (labelled data). But, in unsupervised learning, our data is not labelled so our model must first self-discover any naturally occurring patterns in that training data set.**\n\n**Supervised machine learning is divided into classification and regression. In classification, we predict discrete values, e.g. Yes\/No, Customer will purchase\/Won't purchase. But in regression, we predict continuous values, such as age, price, etc.**","079471a7":"# Conclusion","842ffa69":"**So basically the workflow is like this: Import libraries and dataset -> check for missing values -> perform necessary imputation -> data preprocessing -> exploratory data analysis -> split data -> train model -> check its accuracy -> improve model or try other ones.**\n\n**To get better accuracy, try different models or use more training data.**","9f208f2f":"# Introduction","c3792da6":"**Clearly, linear regressor is a better model for our project as it's R squared error is closer to 0. But we can still check with other models to find the best model.**","7e51c3e5":"# Model Building","5ce580c1":"**From the illustration above, we can tell items like fruits and vegetables, household goods, snacks, starchy foods and seafood are more sold than the other items so the mall should consider keeping more of these items in inventory, give special offers and discounts to these goods so volume of sales increases more.**","c1dbe7a3":"# Importing libraries and dataset","cbb0b64a":"# Exploratory Data Analysis","5d6da629":"# Data Preprocessing","771d6452":"**We need to encode the categorical variables to numerical ones so our ML model understands the data.**","e31fdb49":"**Supermarket Type1 have the most sales, much higher than other types so the mall owners should consider building more of these types in other locations.**","65d6726f":"**There isn't much correlation between the variables, except that if Item_MRP increases, Item_Outlet_Sales increases.**"}}