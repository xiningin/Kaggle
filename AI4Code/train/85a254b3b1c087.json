{"cell_type":{"e370ec58":"code","a8c5a7cd":"code","89b99fc5":"code","98c5d574":"code","0a582888":"code","7491f4b6":"code","c7572a02":"code","807620b6":"code","63b57fad":"code","420ea884":"code","b46adaa9":"code","6492e9cd":"code","4d980c2d":"code","09873a8f":"code","1fb676a7":"code","3b0a3c6e":"code","fbce6947":"code","34f5de2b":"code","b6fd0ca9":"code","c832e601":"code","33601e5d":"code","f6151bd2":"code","95f7748b":"code","697c9125":"code","40fb96ef":"code","4244d560":"code","c58ea9c2":"code","55646405":"code","5547098c":"code","b9327a07":"code","36fa16d3":"code","9d79cb14":"code","547eab9c":"code","08a4d7ba":"code","998cb564":"code","813c39b4":"code","bd24705d":"code","ff294583":"code","a07225b4":"code","6cb26154":"code","942bb6ec":"code","75989d6f":"code","6d51ec66":"code","80b01aad":"code","f201e3ad":"code","b3b497fb":"code","8d4e2fee":"code","ba945410":"code","f8506e61":"code","63c69022":"code","af0e0231":"code","a0b53f13":"code","3e4d5f55":"code","8855bea3":"code","a07b8e7e":"code","0b77165f":"code","40ade992":"code","c5db5af1":"code","afdf12d1":"code","69a8ff8e":"code","ee55dc01":"code","f899af67":"code","0894644f":"code","7ae7abf4":"code","b2b3d346":"code","03f99b24":"code","db9d9963":"code","89f9f7b0":"code","4c6d0b88":"markdown","5843705f":"markdown","b5440592":"markdown","b41ecbc3":"markdown","79154790":"markdown","e6737eb3":"markdown","48f721a7":"markdown","7dd2c466":"markdown","0b42b4b0":"markdown","bba4b5c7":"markdown","35a365e1":"markdown","a6bb86d0":"markdown","5831a7d2":"markdown","a3b06af6":"markdown","09dfea97":"markdown","7d418477":"markdown","84da859a":"markdown","b703589d":"markdown","655fe78b":"markdown"},"source":{"e370ec58":"#basic packages\nimport pandas as pd \nimport numpy as np \n\n#preprocessing libraries and algorithm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder,OneHotEncoder,StandardScaler\nfrom sklearn.linear_model import LogisticRegression\n\n#visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#metrics\n\nfrom sklearn.metrics import accuracy_score,precision_score,recall_score,roc_curve,f1_score,auc,plot_roc_curve,confusion_matrix\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a8c5a7cd":"attr_df=pd.read_csv('\/kaggle\/input\/employee-attrition\/HR-Employee-Attrition.csv')","89b99fc5":"attr_df.shape","98c5d574":"attr_df.info()","0a582888":"attr_df.isna().sum()","7491f4b6":"attr_df.select_dtypes('object').columns","c7572a02":"attr_df['BusinessTravel'].value_counts()","807620b6":"plt.figure(figsize=(6,6))","63b57fad":"def percentageAttritionPerCategory(df,featureColumn):\n    print(f'{featureColumn}\\n')\n    print(df[featureColumn].describe(include='all'))\n    if 'Attrition_Numerical' in df:\n        print(f'\\n Correlation :{df[[featureColumn,\"Attrition_Numerical\"]].corr()}')\n    for category,groupeddata in df.groupby([featureColumn])['Attrition']:\n        print(f'\\n{category}\\n')\n        print(f'Attrition: Yes : {(len(groupeddata[groupeddata==\"Yes\"])\/len(groupeddata))*100}')\n        print(f'Attrition: No : {(len(groupeddata[groupeddata==\"No\"])\/len(groupeddata))*100}')","420ea884":"def  generateFigures(df,featureColumn,hueColumn):   \n    plt.figure(figsize = (12,8))\n    ax = sns.countplot(x = featureColumn,hue =hueColumn,data=df)\n    for p in ax.patches:\n        ax.annotate('{:.0f}'.format(p.get_height()), (p.get_x()+0.15, p.get_height()+13))","b46adaa9":"sns.countplot(x='BusinessTravel',data=attr_df,hue='Attrition')","6492e9cd":"attr_df.groupby(['BusinessTravel','Attrition'])['Attrition'].agg(lambda groupeddata : len(groupeddata[groupeddata=='Yes'])\/len(groupeddata))","4d980c2d":"percentageAttritionPerCategory(attr_df,'BusinessTravel')","09873a8f":"for category,groupeddata in attr_df.groupby(['BusinessTravel'])['Attrition']:\n    print(category)\n    print(len(groupeddata[groupeddata=='Yes'])\/len(groupeddata))","1fb676a7":"sns.countplot(x='Department',data=attr_df,hue='Attrition')","3b0a3c6e":"percentageAttritionPerCategory(attr_df,'Department')\n# comments people in research department are staying back ","fbce6947":"sns.countplot(x='EducationField',data=attr_df,hue='Attrition')","34f5de2b":"percentageAttritionPerCategory(attr_df,'EducationField')\n#Comments : People in life science & medical are not changing job frequently like other education field","b6fd0ca9":"sns.countplot(x='Gender',data=attr_df,hue='Attrition')","c832e601":"percentageAttritionPerCategory(attr_df,'Gender')\n#Comments : No significant difference in the attribition","33601e5d":"percentageAttritionPerCategory(attr_df,'JobRole')\n#Comments : Attrition rate is very less for managers , healthcare representative , manufacturing director , research director","f6151bd2":"percentageAttritionPerCategory(attr_df,'MaritalStatus')\n#Comments : Bachelors tend to move out quickly than others ","95f7748b":"percentageAttritionPerCategory(attr_df,'Over18')\n#Comments : Seems like only 1 value is there ","697c9125":"attr_df['Over18'].value_counts()\n#comments , this field can be ignored as it has only one value ","40fb96ef":"percentageAttritionPerCategory(attr_df,'OverTime')\n# People who works overtime move out so quickly . May be frustrate with job ","4244d560":"#processedData_df=PreprocessData(attr_df.copy(deep = True))","c58ea9c2":"attr_df.info()","55646405":"attr_df['Attrition_Numerical']=attr_df['Attrition'].replace({'Yes':1,'No':0})","5547098c":"attr_df.info()","b9327a07":"plt.figure(figsize=(10,15))\nsns.countplot(x='Age',data=attr_df,hue='Attrition')","36fa16d3":"plt.figure(figsize=(20,15))\nsns.countplot(x='Age',data=attr_df,hue='Attrition')\n#Higher levels are handled by aged people\n# Mid range age is ","9d79cb14":"attr_df['DailyRate'].value_counts()","547eab9c":"sns.histplot(x='DailyRate',data=attr_df)","08a4d7ba":"sns.countplot(x='Education',hue='Attrition',data=attr_df )\n# % Attrition across education level is same. Not a big contributor","998cb564":"sns.countplot(x='Education',hue='JobLevel',data=attr_df)","813c39b4":"sns.countplot(x='EnvironmentSatisfaction',hue='Attrition',data=attr_df)\n# % attrition rate is compartively high for less satisfied people","bd24705d":"attr_df['HourlyRate'].value_counts()","ff294583":"sns.scatterplot(x='HourlyRate',y='Attrition',data=attr_df)","a07225b4":"sns.countplot(x='JobInvolvement',hue='Attrition',data=attr_df)\n\n# Very evident that people with less job involvement are moving out quickly","6cb26154":"sns.countplot(x='JobLevel',hue='Attrition',data=attr_df)\n# Reduction in attrition with job level . People at lower job level tend to jump more ","942bb6ec":"sns.countplot(x='JobSatisfaction',hue='Attrition',data=attr_df)\n# Job satisfaction has got a significant relation with attrition","75989d6f":"sns.countplot(x='JobSatisfaction',hue='JobInvolvement',data=attr_df)","6d51ec66":"sns.barplot(x='JobSatisfaction',y='MonthlyIncome',data=attr_df)","80b01aad":"sns.countplot(x='NumCompaniesWorked',hue='Attrition',data=attr_df)","f201e3ad":"sns.countplot(x='PerformanceRating',hue='Attrition',data=attr_df)\n# Percentage attrition does not seems to have much relation with attrition","b3b497fb":"sns.countplot(x='RelationshipSatisfaction',hue='Attrition',data=attr_df)\n# seeing increased attrition for people with less relationship satisfaction","8d4e2fee":"sns.countplot(x='WorkLifeBalance',hue='Attrition',data=attr_df)\n# People with low work life tend to move out more than people with good work life balance ","ba945410":"sns.countplot(x='TotalWorkingYears',hue='Attrition',data=attr_df)","f8506e61":"sns.countplot(x='TrainingTimesLastYear',hue='JobInvolvement',data=attr_df)\n# Not indicating a good pattern","63c69022":"full_list=['Age', 'DailyRate', 'DistanceFromHome', 'Education', 'EmployeeCount',\n       'EmployeeNumber', 'EnvironmentSatisfaction', 'HourlyRate',\n       'JobInvolvement', 'JobLevel', 'JobSatisfaction', 'MonthlyIncome',\n       'MonthlyRate', 'NumCompaniesWorked', 'PercentSalaryHike',\n       'PerformanceRating', 'RelationshipSatisfaction', 'StandardHours',\n       'StockOptionLevel', 'TotalWorkingYears', 'TrainingTimesLastYear',\n       'WorkLifeBalance', 'YearsAtCompany', 'YearsInCurrentRole',\n       'YearsSinceLastPromotion', 'YearsWithCurrManager',\n       'Attrition_Numerical'] \n#HourlyRate,MonthlyIncome,MonthlyRate\n\nprocessed_list=['Age', 'DailyRate','Education','EmployeeCount','EnvironmentSatisfaction','HourlyRate','JobInvolvement','JobLevel',\n               'JobSatisfaction', 'MonthlyIncome','MonthlyRate','PerformanceRating','RelationshipSatisfaction','StandardHours','EmployeeNumber','DistanceFromHome'] \n\nfor index,feature in enumerate(attr_df.select_dtypes(np.number)):\n    if(feature not in processed_list and len(attr_df[feature].value_counts())>10):\n        percentageAttritionPerCategory(attr_df,feature)  ","af0e0231":"attr_df.corr()","a0b53f13":"print(\"#  FeatureName DistinctRecords\")\nfor index,feature in enumerate(attr_df):\n    print(f'{index}\\t{feature}\\t{attr_df[feature].dtype}\\t{len(attr_df[feature].value_counts())}')","3e4d5f55":"def PreprocessData(df):\n    lbl_encoder=LabelEncoder()\n    # Handling categorical data \n    if 'Attrition' in df and df['Attrition'].dtype=='object':\n        df['Attrition']=df['Attrition'].replace({'Yes':1,'No':0})\n        \n    # for rest of the categorical fields\n    df=pd.concat([df,pd.get_dummies(df[['BusinessTravel','Department','EducationField','Gender','JobRole','MaritalStatus','OverTime']], drop_first=True)],axis=1)\n    # dropping columns after dummies encoding\n    df.drop(['BusinessTravel','Department','EducationField','Gender','JobRole','MaritalStatus','OverTime'], axis=1,inplace=True)\n       \n    #dropping columns with only single value\n    for feature in df:\n        if(len(df[feature].value_counts())==1):\n            df.drop([feature],inplace=True,axis=1)\n    \n    #Possible exclusions based on data analysis \n    #Low correlation\n    if 'DailyRate' in df:\n        df.drop(['DailyRate'],inplace=True,axis=1)\n    \n    if 'Over18' in df:\n        df.drop(['Over18'],inplace=True,axis=1)\n        \n    if 'EmployeeNumber' in df:\n        df.drop(['EmployeeNumber'],inplace=True,axis=1)\n    if 'HourlyRate' in df:\n        df.drop(['HourlyRate'],inplace=True,axis=1)\n    if 'MonthlyRate' in df:\n        df.drop(['MonthlyRate'],inplace=True,axis=1)\n    if 'PerformanceRating' in df:\n        df.drop(['PerformanceRating'],inplace=True,axis=1)   \n\n    return df\n    \n    ","8855bea3":"preprocessed_df=PreprocessData(attr_df.copy(deep=True))","a07b8e7e":"preprocessed_df.drop('Attrition_Numerical',inplace=True,axis=1)","0b77165f":"preprocessed_df.describe()","40ade992":"preprocessed_df.corr()","c5db5af1":"preprocessed_y=preprocessed_df.pop('Attrition')","afdf12d1":"scaler=StandardScaler()\npreprocessed_df=scaler.fit_transform(preprocessed_df)","69a8ff8e":"train_x,test_x,train_y,test_y=train_test_split(preprocessed_df,preprocessed_y,test_size=.3,random_state=12)","ee55dc01":"train_x.shape","f899af67":"test_x.shape","0894644f":"lgr=LogisticRegression()","7ae7abf4":"lgr.fit(train_x,train_y)","b2b3d346":"predicted_y=lgr.predict(test_x)","03f99b24":"predicted_y","db9d9963":"print(f\"Accuracy : {accuracy_score(test_y,predicted_y)}\")\nprint(f\"Precision : {precision_score(test_y,predicted_y)}\")\nprint(f\"Recall : {recall_score(test_y,predicted_y)}\")\n","89f9f7b0":"fpr, tpr, threshold = roc_curve(test_y, predicted_y)\nroc_auc = auc(fpr, tpr)\n\nplt.title('Receiver Operating Characteristic')\nplt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)","4c6d0b88":"### PerformanceRating","5843705f":"### NumCompaniesWorked","b5440592":"## EDA ","b41ecbc3":"### StockOptionLevel","79154790":"### Environment Satisfaction","e6737eb3":"### JobSatisfaction","48f721a7":"## Preprocessing","7dd2c466":"### HourlyRate","0b42b4b0":"## Numerical data","bba4b5c7":"## Categorical data analysis","35a365e1":"### Job Involvement","a6bb86d0":"### Job Level","5831a7d2":"### Age","a3b06af6":"print(confusion_matrix(test_y, predicted_y))","09dfea97":"### TrainingTimesLastYear","7d418477":"### Daily rate","84da859a":"### WorkLifeBalance","b703589d":"### Education","655fe78b":"### RelationshipSatisfaction"}}