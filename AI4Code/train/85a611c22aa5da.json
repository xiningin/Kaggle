{"cell_type":{"e5d04fae":"code","747695ef":"code","e74d2931":"code","46cb4aa9":"code","77cbc9dc":"code","25dad0b9":"code","2831334e":"code","e13d0182":"code","84f5c801":"code","85f32c95":"code","a79837dc":"code","89fde40b":"code","ed277522":"code","10441a0d":"code","c2fb9c23":"code","28608f32":"code","4267192d":"code","6b176cb0":"code","b0bf6b9b":"code","eb4be7d5":"code","fe11a45d":"code","0a323741":"code","5dc0cac8":"code","aeba2ab6":"code","6da1b246":"code","4f39c580":"code","0f7234de":"code","a55b620e":"code","269514d9":"code","40569668":"code","889c7d91":"code","5e936ba0":"code","a8f5bdfb":"code","8d032381":"code","a9f1cf87":"code","d9980715":"code","aca3d48a":"code","dac008b4":"markdown","5681ca39":"markdown","31ddbe1e":"markdown","335efa69":"markdown","0dda1068":"markdown","2cbcd738":"markdown","163785ed":"markdown","e6746279":"markdown","7a2495b9":"markdown","158025af":"markdown","84210710":"markdown","8af9aea7":"markdown","ccb59c12":"markdown","86cdf0f4":"markdown","f88e9508":"markdown","1c52e772":"markdown","748ba7d2":"markdown","326c948f":"markdown","915cab76":"markdown","ea33a459":"markdown","0228fbcb":"markdown","35ebbb7f":"markdown","82dd668d":"markdown","8626a3e3":"markdown","47430e9a":"markdown","11328326":"markdown","09ee5245":"markdown","6ae3ff81":"markdown","8501b25d":"markdown","a8a978d6":"markdown","8e4bcdaa":"markdown","52d55d7c":"markdown"},"source":{"e5d04fae":"import pandas as pd\nimport numpy as np\nimport sys\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom plotly import tools\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)","747695ef":"os.listdir(\"..\/input\/kaggle-survey-2020\")","e74d2931":"multiple_df = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv', low_memory=False)","46cb4aa9":"print(\"Multiple choice response - rows: {} columns: {}\".format(multiple_df.shape[0], multiple_df.shape[1]))","77cbc9dc":"multiple_df.head(3)","25dad0b9":"def missing_data(data):\n    total = data.isnull().sum().sort_values(ascending = False)\n    percent = (data.isnull().sum()\/data.isnull().count()*100).sort_values(ascending = False)\n    return pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])","2831334e":"df = missing_data(multiple_df)","e13d0182":"def plot_percent_of_available_data(title):\n    trace = go.Box(\n        x = df['Percent'],\n        name=\"Percent\",\n         marker=dict(\n                    color='rgba(238,23,11,0.5)',\n                    line=dict(\n                        color='tomato',\n                        width=0.9),\n                ),\n         orientation='h')\n    data = [trace]\n    layout = dict(title = 'Percent of available data  - all columns ({})'.format(title),\n              xaxis = dict(title = 'Percent', showticklabels=True), \n              yaxis = dict(title = 'All columns'),\n              hovermode = 'closest',\n             )\n    fig = dict(data=data, layout=layout)\n    iplot(fig, filename='percent')","84f5c801":"plot_percent_of_available_data('multiple_df')","85f32c95":"tmp = pd.DataFrame(multiple_df.columns.values)\ncolumns = []\nfor i in range(1,50):\n    var = \"Q{}\".format(i)\n    l = len(list(tmp[tmp[0].str.contains(var)][0]))\n    if(l == 1):\n        columns.append(var)\n\nprint(\"The columns with only one item in the column group are:\\n\",columns)","a79837dc":"def get_categories(data, val):\n    tmp = data[1::][val].value_counts()\n    return pd.DataFrame(data={'Number': tmp.values}, index=tmp.index).reset_index()","89fde40b":"df = get_categories(multiple_df, 'Q1')","ed277522":"def draw_trace_bar(data, title, xlab, ylab,color='Blue'):\n    trace = go.Bar(\n            x = data['index'],\n            y = data['Number'],\n            marker=dict(color=color),\n            text=data['index']\n        )\n    data = [trace]\n\n    layout = dict(title = title,\n              xaxis = dict(title = xlab, showticklabels=True, tickangle=15,\n                          tickfont=dict(\n                            size=9,\n                            color='black'),), \n              yaxis = dict(title = ylab),\n              hovermode = 'closest'\n             )\n    fig = dict(data = data, layout = layout)\n    iplot(fig, filename='draw_trace')","10441a0d":"draw_trace_bar(df, 'Number of people\/age interval', 'Age interval', 'Number of people' )","c2fb9c23":"draw_trace_bar(get_categories(multiple_df,'Q2'), \"Number of people in each gender\", \"Gender\", \"Number of people\", \"Green\")","28608f32":"df = get_categories(multiple_df, 'Q3')\ndf.head()","4267192d":"trace = go.Choropleth(\n            locations = df['index'],\n            locationmode='country names',\n            z = df['Number'],\n            text = df['index'],\n            autocolorscale =False,\n            reversescale = True,\n            colorscale = 'rainbow',\n            marker = dict(\n                line = dict(\n                    color = 'rgb(0,0,0)',\n                    width = 0.5)\n            ),\n            colorbar = dict(\n                title = 'Respondents',\n                tickprefix = '')\n        )\n\ndata = [trace]\nlayout = go.Layout(\n    title = 'Number of respondents per country',\n    geo = dict(\n        showframe = True,\n        showlakes = False,\n        showcoastlines = True,\n        projection = dict(\n            type = 'natural earth'\n        )\n    )\n)\n\nfig = dict( data=data, layout=layout )\niplot(fig)","6b176cb0":"draw_trace_bar(get_categories(multiple_df,'Q4'), \"Highest level of formal education\", \"Education\", \"Number of people\", \"Magenta\")","b0bf6b9b":"draw_trace_bar(get_categories(multiple_df,'Q5'), \"Current job title\", \"Current job title\", \"Number of respondents\", \"Tomato\")","eb4be7d5":"draw_trace_bar(get_categories(multiple_df,'Q6'), \"Years of experience\", \"Years of experience\", \"Number of respondents\", \"Red\")","fe11a45d":"draw_trace_bar(get_categories(multiple_df,'Q8'), \n               \"What programming language would you recommend an aspiring data scientist to learn first?\", \n               \"Programming language\", \"Number of respondents\", \"Lightblue\")","0a323741":"draw_trace_bar(get_categories(multiple_df,'Q11'), \n               \"What type of computing platform do you use most often for your data science projects?\", \n               \"Computing platform\", \"Number of respondents\", \"Orange\")","5dc0cac8":"draw_trace_bar(get_categories(multiple_df,'Q22'), \n               multiple_df['Q22'].values[0], \n               \"ML methods included in the business\", \"Number of respondents\", \"Lightgray\")","aeba2ab6":"draw_trace_bar(get_categories(multiple_df,'Q21'), \n               multiple_df['Q21'].values[0], \n               \"Individuals involved in Data Science\", \"Number of respondents\", \"Darkgreen\")","6da1b246":"draw_trace_bar(get_categories(multiple_df,'Q24'), multiple_df['Q24'][0], \"Option\", \"Number of respondents\", \"Lightgreen\")","4f39c580":"draw_trace_bar(get_categories(multiple_df,'Q25'), multiple_df['Q25'][0], \"Option\", \"Number of respondents\", \"Gold\")","0f7234de":"draw_trace_bar(get_categories(multiple_df,'Q25'), multiple_df['Q25'][0], \"Option\", \"Number of respondents\", \"Gold\")","a55b620e":"draw_trace_bar(get_categories(multiple_df,'Q30'), multiple_df['Q30'][0], \"Option\", \"Number of respondents\", \"Cyan\")","269514d9":"draw_trace_bar(get_categories(multiple_df,'Q32'), multiple_df['Q32'][0], \"Option\", \"Number of respondents\", \"Darkblue\")","40569668":"draw_trace_bar(get_categories(multiple_df,'Q38'), multiple_df['Q38'][0], \"Option\", \"Number of respondents\", \"steelblue\")","889c7d91":"def get_categories_group(data, val_group, val):\n    tmp = data[1::].groupby(val_group)[val].value_counts()\n    return pd.DataFrame(data={'Number': tmp.values}, index=tmp.index).reset_index()","5e936ba0":"def draw_trace_group_bar(data_df, val_group, val, title, xlab, ylab,color='Blue'):\n    data = list()\n    groups = (data_df.groupby([val_group])[val_group].nunique()).index\n    for group in groups:\n        data_group_df = data_df[data_df[val_group]==group]\n        trace = go.Bar(\n                x = data_group_df[val],\n                y = data_group_df['Number'],\n                name = group,\n                #marker=dict(color=color),\n                text=data_group_df[val]\n            )\n        data.append(trace)\n\n    layout = dict(title = title,\n              xaxis = dict(title = xlab, showticklabels=True, tickangle=15,\n                          tickfont=dict(\n                            size=9,\n                            color='black'),), \n              yaxis = dict(title = ylab),\n              hovermode = 'closest'\n             )\n    fig = dict(data = data, layout = layout)\n    iplot(fig, filename='draw_trace')","a8f5bdfb":"df = get_categories_group(multiple_df, 'Q1', 'Q2')\ndraw_trace_group_bar(df, 'Q1', 'Q2', 'Number of respondents by Sex and age', 'Sex', 'Number of respondents')","8d032381":"df = get_categories_group(multiple_df, 'Q1', 'Q4')\ndraw_trace_group_bar(df, 'Q1', 'Q4', 'Number of respondents by Age and Highest level of formal education', 'Highest level of formal education', 'Number of respondents')","a9f1cf87":"df = get_categories_group(multiple_df, 'Q1', 'Q6')\ndraw_trace_group_bar(df, 'Q1', 'Q6', 'Number of respondents by Age and number of years of experience', \n                     'Number of years of experience', 'Number of respondents')","d9980715":"df = get_categories_group(multiple_df, 'Q4', 'Q6')\ndraw_trace_group_bar(df, 'Q4', 'Q6', 'Number of respondents by Highest level of formal education and Current yearly compensation', 'Current yearly compensation', 'Number of respondents')","aca3d48a":"df = get_categories_group(multiple_df, 'Q6', 'Q4')\ndraw_trace_group_bar(df, 'Q6', 'Q4', 'Number of respondents by Current title and years of experience', 'Current title', 'Number of respondents')","dac008b4":"<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n# <a id='22'>Load the data<\/a>  \n\nLet's see first what data files do we have in the root directory.","5681ca39":"\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n## Age interval\n\nLet's show the age interval, as declared by respondents. \nWe will create here also a function to count categories for categorical data and a function to draw barplots using Plotly.","31ddbe1e":"<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n## What computing platform use most often?","335efa69":"## What is your currently yearly compensation?","0dda1068":"\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n\n## Gender\n\nLet's explore the gender groups.","2cbcd738":"## Highest level of formal education and current yearly compensation","163785ed":"# <a id='21'>Load packages<\/a>\n\nWe load the packages used for the analysis.","e6746279":"## Age and number of years of experience","7a2495b9":"## How much money you or your team spent on machine learing or cloud computing?","158025af":"\n\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n## Columns to visualize\n\n\nSome of the following columns are grouped, to capture the multiple choice answers where the order of the answer gives the order of preferences. \nLet's check which columns groups have only one item in the group (columns with multiple items in the group will be called like `Q11_Part1`, `Q11_Part2`[...]. For this we will compose filters like `Q1`, `Q2`, ..., `Q11`, `Q12` etc. and filter the columns containing these values and count the items. We separate only the group of columns with one item in the group. These will be the columns we will further represent.\n\n","84210710":"<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n## What programming language to learn first?","8af9aea7":"Because the first row contains a description of the column, we will read only from 2nd row the categorical values per each column.\n\n## Missing data\n\nLet's represent the distribution of available data for all the columns, using a boxplot.","ccb59c12":"## Business intelligence tools used","86cdf0f4":"<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n## Individuals responsible for data science at your place of business?","f88e9508":"\n# <a id='4'>Combine the features<\/a>\n\n\nLet's visualize some of the dimmensions presented previously in combination. For example, let's see the combined distribution of sex and age to see how these two are distributed.\n\n## Number of respondents by Sex and Age","1c52e772":"<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n## What computing platform use most often?","748ba7d2":"## Primary tool used at work for data analysis","326c948f":"There are three dataset files. Let's load all the files.","915cab76":"<h1><center><font size=\"6\">Data Scientists in 2020 - Kaggle Survey<\/font><\/center><\/h1>\n\n<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/7\/7c\/Kaggle_logo.png\"><\/img>\n\n# <a id='0'>Content<\/a>\n\n- <a href='#1'>Introduction<\/a>  \n- <a href='#2'>Prepare the data analysis<\/a>  \n - <a href='#21'>Load packages<\/a>  \n - <a href='#21'>Load the data<\/a>  \n- <a href='#3'>Data exploration<\/a>   \n- <a href='#4'>Combine the features<\/a>   \n- <a href='#5'>Final note<\/a>   ","ea33a459":"\n# <a id='5'>Final note<\/a>  \n\nThis Kernel is still under construction. Stay tuned, we will update it frequently in the following days.\n\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  ","0228fbcb":"\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n# <a id='3'>Data exploration<\/a>  \n\n\nLet's start by exploring the multiple choice response dataset.\n\nWe will also glimpse the free format response dataset.\n\n## Glimpse the data","35ebbb7f":"\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n\n## Country\n\nLet's plot the number of responses per country..","82dd668d":"We will make sure to include these columns in the following, besides the obvious options `Q1`, `Q2` ... `Q7`.","8626a3e3":"# <a id='2'>Prepare the data analysis<\/a>   \n\n\nBefore starting the analysis, we need to make few preparation: load the packages, load and inspect the data.\n\n","47430e9a":"## Number of respondents by Age and Highest level of formal education","11328326":"\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n## Highest level of formal education","09ee5245":"# <a id='1'>Introduction<\/a>  \n\nWe will analyze the dataset `2020 Kaggle ML & DS Survey` with answers provided by the respondents to the survey of Kaggle users in 2020.\n","6ae3ff81":"## Big data products used most often?","8501b25d":"## Current job title\n\nThe next question is about the description of the industry of the current employer.","a8a978d6":"## How much money you or your team spent on machine learing or cloud computing at home?","8e4bcdaa":"## Current title and years of experience","52d55d7c":"\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n## Years of experience writting code\n\nThe next question is about the description of the title."}}