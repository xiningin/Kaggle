{"cell_type":{"9c9e5bd3":"code","122e647d":"code","4a1cb3b5":"code","d98e1222":"code","b989a6a1":"code","48605e79":"code","c9dfd60f":"code","dd243e90":"code","6057a427":"code","0d47af91":"code","38d67f3b":"code","f602e024":"code","f0fe4ce5":"code","a641fbaf":"code","3e515693":"code","8c5e2252":"code","2b60bc40":"code","925c8d86":"code","72ff9a5e":"code","fd4d33ac":"code","022c6249":"code","6a0b8aa5":"code","bb5d0b77":"code","ca693747":"code","ad15754a":"code","e33e9330":"code","e8a7700b":"code","a1ab332e":"code","88d2b710":"code","362831bf":"code","8e921596":"code","dd8ba30d":"code","16e9e536":"code","3b1b7057":"code","a275c09e":"code","6fc4b45b":"code","78046b0c":"code","4a68cb49":"code","1c402ddf":"code","396973df":"code","58939fc9":"code","8c7ddb7e":"code","2b034770":"code","601b7e4d":"code","b4274e4f":"code","379e8cc7":"markdown","77994a29":"markdown","da0a15af":"markdown","2341a43f":"markdown","26b3e81c":"markdown","853d7be1":"markdown","041334f2":"markdown","9d8243b6":"markdown","126a047f":"markdown","4c9c8f09":"markdown","95c55a27":"markdown","99997e30":"markdown","3f515ede":"markdown","f90346e3":"markdown"},"source":{"9c9e5bd3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","122e647d":"import numpy as np\nimport pandas as pd\nimport seaborn as sns \nimport matplotlib.pyplot as plt","4a1cb3b5":"data=pd.read_csv(\"..\/input\/car-data\/CarPrice_Assignment.csv\")\ndata.head(3)","d98e1222":"data.tail(3)","b989a6a1":"data.info()","48605e79":"data.describe()","c9dfd60f":"data.isnull().sum()","dd243e90":"#manipulate data with another instance\ntemp=data\ntemp.columns\ntemp['CarName'].unique()","6057a427":"## Add car company name \ncompany_name=temp['CarName'].apply(lambda x:x.split(' ')[0])\n","0d47af91":"temp['Company Name'] = company_name ","38d67f3b":"temp.head(3)","f602e024":"#Rearrange the colums to make company name before Car Name\ncols=temp.columns.to_list()\ni=[]\ni.append(cols[-1])\ncols = cols[:2] + i + cols[2:-1]\ntemp = temp[cols]","f0fe4ce5":"temp.head(4)","a641fbaf":"temp['Company Name'].unique()","3e515693":"### Correcting the errors as some company names are spelled wrong.\ntemp['Company Name'].replace(to_replace=\"maxda\",value=\"mazda\",inplace=True)\ntemp['Company Name'].replace(to_replace=\"Nissan\",value=\"nissan\",inplace=True)\ntemp['Company Name'].replace(to_replace=\"porcshce\",value=\"porsche\",inplace=True)\ntemp['Company Name'].replace(to_replace=\"toyouta\",value=\"toyota\",inplace=True)\ntemp['Company Name'].replace(to_replace=\"vokswagen\",value=\"volkswagen\",inplace=True)\ntemp['Company Name'].replace(to_replace=\"vw\",value=\"vokswagen\",inplace=True)\ntemp['Company Name'].unique()","8c5e2252":"temp.loc[temp.duplicated()].sum() ## Warning shown, hence checking for duplicate copies ","2b60bc40":"temp['cylindernumber'].unique()","925c8d86":"temp['cylindernumber'].replace(to_replace=\"four\",value=4,inplace=True)\ntemp['cylindernumber'].replace(to_replace=\"eight\",value=8,inplace=True)\ntemp['cylindernumber'].replace(to_replace=\"six\",value=6,inplace=True)\ntemp['cylindernumber'].replace(to_replace=\"five\",value=5,inplace=True)\ntemp['cylindernumber'].replace(to_replace=\"three\",value=3,inplace=True)\ntemp['cylindernumber'].replace(to_replace=\"twelve\",value=12,inplace=True)\ntemp['cylindernumber'].replace(to_replace=\"two\",value=2,inplace=True)\ntemp.astype({'cylindernumber': 'int32'}).dtypes\ntemp['cylindernumber'].head(3)","72ff9a5e":"temp['doornumber'].unique()","fd4d33ac":"temp['doornumber'].replace(to_replace=\"four\",value=4,inplace=True)\ntemp['doornumber'].replace(to_replace=\"two\",value=2,inplace=True)\ntemp.astype({'doornumber': 'int32'}).dtypes","022c6249":"temp.loc[temp.duplicated()].sum() ## Warning shown, hence checking for duplicate copies ","6a0b8aa5":"temp.head(5)","bb5d0b77":"temp.hist(figsize = (35,30), bins = 40)\nplt.show()","ca693747":"f, ax = plt.subplots(figsize=(30, 25))\nmat = temp.corr('spearman')\nmask = np.triu(np.ones_like(mat, dtype=bool))\ncmap = sns.diverging_palette(230, 20, as_cmap=True)\nsns.heatmap(mat, mask=mask, cmap=cmap, vmax=1, center=0,square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\nplt.show()\n","ad15754a":"plt.figure(figsize = (20,20))\nax =sns.boxplot(data = temp, orient=\"h\")\nax.set_title('Bank Data Boxplots', fontsize = 18)\nax.set_xscale(\"log\") #Using log scale as some vales are near by and not well represnted in a linear scale \nplt.show()","e33e9330":"plt.figure(figsize = (10,10))\nsns.boxplot(y=\"price\",data = temp)\nplt.title('Car price Boxplots', fontsize = 18)\nplt.figure(figsize = (10,10))\nsns.displot(x=\"price\",data = temp,kde=True)\nplt.title('Car price distplot', fontsize = 18)","e8a7700b":"f, ax = plt.subplots(nrows=3,ncols=3, figsize=(30,30))\n\nsns.histplot(x=\"Company Name\",data = temp,ax=ax[0,0])\nax[0,0].set_title('Company name Histogram', fontsize = 18)\nax[0,0].set_xticklabels(temp['Company Name'].unique().tolist(), rotation=90)\n\nsns.histplot(temp[\"aspiration\"],ax=ax[0,1])\nax[0,1].set_title('Aspiration Histogram', fontsize = 18)\n\nsns.histplot(temp[\"fueltype\"],ax=ax[0,2])\nax[0,2].set_title('Fuel type Histogram', fontsize = 18)\n\n\nsns.histplot(temp[\"enginetype\"],ax=ax[1,0])\nax[1,0].set_title('Engine type Histogram', fontsize = 18)\n\n\nsns.histplot(temp[\"carbody\"],ax=ax[1,1])\nax[1,1].set_title('Car body Histogram', fontsize = 18)\n\nsns.histplot(temp[\"enginelocation\"],ax=ax[1,2])\nax[1,2].set_title('Engine location Histogram', fontsize = 18)\n\nsns.histplot(temp[\"fuelsystem\"],ax=ax[2,0])\nax[2,0].set_title('Car body Histogram', fontsize = 18)\n\n\nsns.histplot(temp[\"symboling\"],ax=ax[2,1])\nax[2,1].set_title('Symboling Histogram', fontsize = 18)\n\nsns.histplot(temp[\"drivewheel\"],ax=ax[2,2])\nax[2,2].set_title('Drive wheel Histogram', fontsize = 18)\n","a1ab332e":"f, ax = plt.subplots(nrows=3,ncols=3, figsize=(30,30))\n\n#sns.boxplot(x=cars.enginetype, y=cars.price, palette=(\"PuBuGn\"))\nsns.boxplot(x=\"Company Name\",y=\"price\",data = temp,ax=ax[0,0])\nax[0,0].set_title('Company name  vs Price ', fontsize = 18)\nax[0,0].set_xticklabels(temp['Company Name'].unique().tolist(), rotation=90)\n\nsns.boxplot(x=\"aspiration\",y=\"price\",data = temp,ax=ax[0,1])\nax[0,1].set_title('Aspiration  vs Price', fontsize = 18)\n\nsns.boxplot(x=\"fueltype\",y=\"price\",data = temp,ax=ax[0,2])\nax[0,2].set_title('Fuel type vs Price', fontsize = 18)\n\n\nsns.boxplot(x=\"enginetype\",y=\"price\",data = temp,ax=ax[1,0])\nax[1,0].set_title('Engine type vs Price', fontsize = 18)\n\n\nsns.boxplot(x=\"carbody\",y=\"price\",data = temp,ax=ax[1,1])\nax[1,1].set_title('Car body vs Price', fontsize = 18)\n\nsns.boxplot(x=\"enginelocation\",y=\"price\",data = temp,ax=ax[1,2])\nax[1,2].set_title('Engine location vs Price', fontsize = 18)\n\nsns.boxplot(x=\"fuelsystem\",y=\"price\",data = temp,ax=ax[2,0])\nax[2,0].set_title('Car body vs Price', fontsize = 18)\n\n\nsns.boxplot(x=\"symboling\",y=\"price\",data = temp,ax=ax[2,1])\nax[2,1].set_title('Symboling vs Price', fontsize = 18)\n\nsns.boxplot(x=\"drivewheel\",y=\"price\",data = temp,ax=ax[2,2])\nax[2,2].set_title('Drive wheel vs Price', fontsize = 18)\n","88d2b710":"f, ax = plt.subplots(nrows=3,ncols=3, figsize=(30,30))\n\nsns.barplot(x=\"Company Name\",y=\"price\",data = temp,ax=ax[0,0],palette=(\"PuBuGn\"))\nax[0,0].set_title('Company name  vs Price ', fontsize = 18)\nax[0,0].set_xticklabels(temp['Company Name'].unique().tolist(), rotation=90)\n\nsns.barplot(x=\"aspiration\",y=temp[\"price\"],data = temp,ax=ax[0,1],palette=(\"PuBuGn\"))\nax[0,1].set_title('Aspiration  vs Price', fontsize = 18)\n \nsns.barplot(x=\"fueltype\",y=\"price\",data = temp,ax=ax[0,2],palette=(\"PuBuGn\"))\nax[0,2].set_title('Fuel type vs Price', fontsize = 18)\n \n \nsns.barplot(x=\"enginetype\",y=\"price\",data = temp,ax=ax[1,0],palette=(\"PuBuGn\"))\nax[1,0].set_title('Engine type vs Price', fontsize = 18)\n \n \nsns.barplot(x=\"carbody\",y=\"price\",data = temp,ax=ax[1,1],palette=(\"PuBuGn\"))\nax[1,1].set_title('Car body vs Price', fontsize = 18)\n \nsns.barplot(x=\"enginelocation\",y=\"price\",data = temp,ax=ax[1,2],palette=(\"PuBuGn\"))\nax[1,2].set_title('Engine location vs Price', fontsize = 18)\n \nsns.barplot(x=\"fuelsystem\",y=\"price\",data = temp,ax=ax[2,0],palette=(\"PuBuGn\"))\nax[2,0].set_title('Car body vs Price', fontsize = 18)\n \nsns.barplot(x=\"symboling\",y=\"price\",data = temp,ax=ax[2,1],palette=(\"PuBuGn\"))\nax[2,1].set_title('Symboling vs Price', fontsize = 18)\n \nsns.barplot(x=\"drivewheel\",y=\"price\",data = temp,ax=ax[2,2],palette=(\"PuBuGn\"))\nax[2,2].set_title('Drive wheel vs Price', fontsize = 18)\n ","362831bf":"f, ax = plt.subplots(nrows=3,ncols=3, figsize=(30,30))\nsns.scatterplot(x='doornumber',y='price',data=temp,ax=ax[0,0])\nax[0,0].set_title(\"Doornumber vs Price\",fontsize=18)\n\nsns.scatterplot(x='cylindernumber',y='price',data=temp,ax=ax[0,1])\nax[0,1].set_title(\"Cylindernumber vs Price\",fontsize=18)\n\nsns.scatterplot(x='carlength',y='price',data=temp,ax=ax[0,2])\nax[0,2].set_title(\"Car length vs Price\",fontsize=18)\n\nsns.scatterplot(x='carwidth',y='price',data=temp,ax=ax[1,0])\nax[1,0].set_title(\"Car width vs Price\",fontsize=18)\n\nsns.scatterplot(x='carheight',y='price',data=temp,ax=ax[1,1])\nax[1,1].set_title(\"Car height vs Price\",fontsize=18)\n\nsns.scatterplot(x='curbweight',y='price',data=temp,ax=ax[1,2])\nax[1,2].set_title(\"Curbweight vs Price\",fontsize=18)\n\nsns.scatterplot(x='boreratio',y='price',data=temp,ax=ax[2,0])\nax[2,0].set_title(\"Boreratio vs Price\",fontsize=18)\n\nsns.scatterplot(x='horsepower',y='price',data=temp,ax=ax[2,1])\nax[2,1].set_title(\"Horsepower vs Price\",fontsize=18)\n\nsns.scatterplot(x='wheelbase',y='price',data=temp,ax=ax[2,2])\nax[2,2].set_title(\"Wheelbase vs Price\",fontsize=18)\n\nf, ax = plt.subplots(ncols=2, figsize=(20,10))\nsns.scatterplot(x='citympg',y='price',data=temp,ax=ax[0])\nax[0].set_title(\"Citympg vs Price\",fontsize=18)\n\nsns.scatterplot(x='highwaympg',y='price',data=temp,ax=ax[1])\nax[1].set_title(\"Highwaympg vs Price\",fontsize=18)","8e921596":"f, ax = plt.subplots(nrows=3,ncols=3, figsize=(30,30))\nsns.lineplot(x='doornumber',y='price',data=temp,ax=ax[0,0])\nax[0,0].set_title(\"Doornumber vs Price\",fontsize=18)\n\nsns.lineplot(x='cylindernumber',y='price',data=temp,ax=ax[0,1])\nax[0,1].set_title(\"Cylindernumber vs Price\",fontsize=18)\n\nsns.lineplot(x='carlength',y='price',data=temp,ax=ax[0,2])\nax[0,2].set_title(\"Car length vs Price\",fontsize=18)\n\nsns.lineplot(x='carwidth',y='price',data=temp,ax=ax[1,0])\nax[1,0].set_title(\"Car width vs Price\",fontsize=18)\n\nsns.lineplot(x='carheight',y='price',data=temp,ax=ax[1,1])\nax[1,1].set_title(\"Car height vs Price\",fontsize=18)\n\nsns.lineplot(x='curbweight',y='price',data=temp,ax=ax[1,2])\nax[1,2].set_title(\"Curbweight vs Price\",fontsize=18)\n\nsns.lineplot(x='boreratio',y='price',data=temp,ax=ax[2,0])\nax[2,0].set_title(\"Boreratio vs Price\",fontsize=18)\n\nsns.lineplot(x='horsepower',y='price',data=temp,ax=ax[2,1])\nax[2,1].set_title(\"Horsepower vs Price\",fontsize=18)\n\nsns.lineplot(x='wheelbase',y='price',data=temp,ax=ax[2,2])\nax[2,2].set_title(\"Wheelbase vs Price\",fontsize=18)\n\nf, ax = plt.subplots(ncols=2, figsize=(20,10))\nsns.lineplot(x='citympg',y='price',data=temp,ax=ax[0])\nax[0].set_title(\"Citympg vs Price\",fontsize=18)\n\nsns.lineplot(x='highwaympg',y='price',data=temp,ax=ax[1])\nax[1].set_title(\"Highwaympg vs Price\",fontsize=18)","dd8ba30d":"### Make categories based on average price\ncars=temp.copy()\ncars.groupby(['Company Name'])['price'].mean().reset_index()\nflag=cars.merge(cars.groupby(['Company Name'])['price'].mean().reset_index(),how='left',on=\"Company Name\")\ntable=pd.cut(flag['price_y'],bins=[0,10000,20000,40000],labels=['Budget','Medium','Luxury'],right=False)\ntemp['range']=table\ntemp.head()","16e9e536":"### Convert Catregories into Numerical for regression \n# Defining the map function\ndef convert_label(label,data):\n    temp = pd.get_dummies(data[label])\n    data = pd.concat([data, temp], axis = 1)\n    data=data.drop([label], axis = 1)\n    return data\ntemp = convert_label('fueltype',temp)\ntemp = convert_label('carbody',temp)\ntemp = convert_label('enginetype',temp)\ntemp = convert_label('aspiration',temp)\ntemp = convert_label('drivewheel',temp)\ntemp = convert_label('enginelocation',temp)\ntemp = convert_label('fuelsystem',temp)\ntemp = convert_label('range',temp)\ntemp = convert_label('Company Name',temp)","3b1b7057":"temp.shape","a275c09e":"temp.head()","6fc4b45b":"temp.columns","78046b0c":"from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()\nheader = ['wheelbase', 'curbweight','enginesize','horsepower','citympg','highwaympg','carlength','carwidth','price']\ntemp[header] = scaler.fit_transform(temp[header])\ntemp.head()","4a68cb49":"labels=pd.DataFrame({'price':temp['price'].to_list()})\nlabels.head()","1c402ddf":"dataset=temp.drop(['price','carheight','CarName','car_ID'],axis=1)\ndataset.head()","396973df":"from sklearn.model_selection import train_test_split \nX_raw,X_test,y_raw,y_test  = train_test_split(dataset,\n                                              labels,\n                                              test_size=0.2,\n                                              random_state = 1)\n\n","58939fc9":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nmodel.fit(X_raw,y_raw)\n","8c7ddb7e":"pred=model.predict(X_test)\nmodel.score(X_test,y_test)","2b034770":"from sklearn.metrics import mean_squared_error\nmean_squared_error(y_test, pred)\n","601b7e4d":"predictions= pred.flatten()","b4274e4f":"my_submission = pd.DataFrame({'Id': y_test.index, 'Price': predictions})\n# you could use any filename. We choose submission here\nmy_submission.to_csv('.\/submission.csv', index=False)","379e8cc7":"## Inference\n### Numeric data\n```\n> Cylinder number has positive correlation with the price\n> Car length has positive correlation with the price \n> Car width has positive correlation with the price\n> Car height has no significant correlation with the price\n> Curb weight has positive correlation with the price\n> Horse power has positive correlation with the price\n> Wheel base has positive correlation with the price\n> Bore ratio has positive correlation with the price\n> Citympg has negative correlation with the price\n> Highway has negative correlation with the price\n```","77994a29":"## Inference\n### Based on the count\n```\n> Most common car : Toyota\n> Most aspired : std\n> Most fuel type : Gas\n> Most common engine type : ohc\n> Most common body type : Sedan\n> Most common engine location : Front\n> Most common car body type : mpfi\n> Most common symboling type: 0\n> Most common drive wheel type : fwd \n```   \n\n<br>\n\n### Price vs categories\n\n```\n> Companies with most costly cars: bmw, buick, jaguar, porche\n> Aspirations : turbmo most costly\n> Fuel type : Gas most costly\n> Engine type : dohcv most costly\n> Body type : Hardtop and convertible most costly\n> Engine location : rear location most costly\n> Car body type : mpfi most costly\n> Symboling type: -1 and 3 types most costly\n> Drive wheel type : rwd most costly \n```   ","da0a15af":"## 4.3:Visualising numerical data\u00b6","2341a43f":"## Car Price Prediction\n### Problem\nThe given dataset has 26 columns and 206 rows that can be used to predict the value of a car. Build a model to do so.\nOther goals are:\n> - Which variables are significant in predicting the price of a car\n> - How well those variables describe the price of a car\n---\n---","26b3e81c":"# 2:Reading the data with briefing\n---","853d7be1":"# 4:Data Visualization\n---","041334f2":"## Inference\n### Correlations \n\n```\n> Car length : Wheelbase\n> Car width : Car length, Wheelbase\n> Car height : Door number, Carlength, Wheelbase\n> Curb weight : Car width, Car length, Wheelbase\n> Engine size : Curb weight, Car width,Car length, Wheelbase\n> Horsepower: Engine size, Curb weight, Car width,Car length, Wheelbase\n> Price : Cylinder number, Bore ratio, Horsepower, Engine size, Curb weight, Car width,Car length, Wheelbase\n> Price : It is alsio inversely related to citympg and highway mpg\n```","9d8243b6":"# 5:Train-Test Split and feature scaling\n---\n\n","126a047f":"## 3.1:Convert string numbers into int","4c9c8f09":"## 4.1:Close up Visualisation of  Data\n```\n- CompanyName\n- Symboling\n- fueltype\n- enginetype\n- carbody\n- doornumber\n- enginelocation\n- fuelsystem\n- cylindernumber\n- aspiration\n- drivewheelm\n\n```","95c55a27":"# 1:Importing modules\n---","99997e30":"## 4.2:Category vs price Visualization","3f515ede":"\n# 3:Preprocessing data\n---","f90346e3":"## Inference\nHere we have described the data and taken a look at the type of features"}}