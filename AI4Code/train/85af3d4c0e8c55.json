{"cell_type":{"1bc08c53":"code","88164186":"code","4deba61f":"code","7f9ed376":"code","539578e3":"code","c96d2cb0":"code","74b0d226":"code","41307ab9":"code","e4da0793":"code","88473949":"code","fdaaf8b1":"code","e75c1126":"code","a94f5986":"code","6bd4dcb3":"code","beda0313":"code","a16871cc":"code","d86916e3":"code","f6f6798e":"markdown"},"source":{"1bc08c53":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","88164186":"# Import the necessary packages and modules\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Prepare the data\nx = np.linspace(0, 10, 100)\n\n# Plot the data\nplt.plot(x, x, label='linear')\n\n# Add a legend\nplt.legend()\n\n# Show the plot\nplt.show()","4deba61f":"import matplotlib.pyplot as plt\nfig = plt.figure()\nax = fig.add_subplot(111)\nax.plot([1, 2, 3, 4], [10, 20, 25, 30], color='lightblue', linewidth=3)\nax.scatter([0.3, 3.8, 1.2, 2.5], [11, 25, 9, 26], color='darkgreen', marker='^')\nax.set_xlim(0.5, 4.5)\nplt.show()","7f9ed376":"import matplotlib.pyplot as plt\nplt.plot([1, 2, 3, 4], [10, 20, 25, 30], color='lightblue', linewidth=3)\nplt.scatter([0.3, 3.8, 1.2, 2.5], [11, 25, 9, 26], color='darkgreen', marker='^')\nplt.xlim(0.5, 4.5)\nplt.show()","539578e3":"# Import `pyplot`\nimport matplotlib.pyplot as plt\n\n# Initialize a Figure \nfig = plt.figure()\n\n# Add Axes to the Figure\nfig.add_axes([0,0,1,1])","c96d2cb0":"# Import the necessary packages and modules\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a Figure\nfig = plt.figure()\n\n# Set up Axes\nax = fig.add_subplot(111)\n\n# Scatter the data\nax.scatter(np.linspace(0, 1, 5), np.linspace(0, 5, 5))\n\n# Show the plot\nplt.show()","74b0d226":"# Import `pyplot` from `matplotlib`\nimport matplotlib.pyplot as plt\n\n# Initialize the plot\nfig = plt.figure(figsize=(20,10))\nax1 = fig.add_subplot(121)\nax2 = fig.add_subplot(122)\n\n# or replace the three lines of code above by the following line: \n#fig, (ax1, ax2) = plt.subplots(1,2, figsize=(20,10))\n\n# Plot the data\nax1.bar([1,2,3],[3,4,5])\nax2.barh([0.5,1,2.5],[0,1,2])\n\n# Show the plot\nplt.show()","41307ab9":"# Import `pyplot` from `matplotlib`\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Initialize the plot\nfig = plt.figure()\nax1 = fig.add_subplot(131)\nax2 = fig.add_subplot(132)\nax3 = fig.add_subplot(133)\n\n# Plot the data\nax1.bar([1,2,3],[3,4,5])\nax2.barh([0.5,1,2.5],[0,1,2])\nax2.axhline(0.45)\nax1.axvline(0.65)\nax3.scatter(np.linspace(0, 1, 5), np.linspace(0, 5, 5))\n\n# Delete `ax3`\nfig.delaxes(ax3)\n\n# Show the plot\nplt.show()","e4da0793":"# Import the necessary packages and modules\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Prepare the data\nx = np.linspace(0, 10, 100)\n\n# Plot the data\nplt.plot(x, x, label='linear')\n\n# Add a legend\nplt.legend()\n\n# Show the plot\nplt.show()","88473949":"# Save Figure\nplt.savefig(\"foo.png\")\n\n# Save Transparent Figure\nplt.savefig(\"foo.png\", transparent=True)","fdaaf8b1":"\n# importing matplotlib module  \nfrom matplotlib import pyplot as plt \n  \n# x-axis values \nx = [5, 2, 9, 4, 7] \n  \n# Y-axis values \ny = [10, 5, 8, 4, 2] \n  \n# Function to plot \nplt.plot(x,y) \n  \n# function to show the plot \nplt.show() ","e75c1126":"# importing matplotlib module  \nfrom matplotlib import pyplot as plt \n  \n# x-axis values \nx = [5, 2, 9, 4, 7] \n  \n# Y-axis values \ny = [10, 5, 8, 4, 2] \n  \n# Function to plot the bar \nplt.bar(x,y) \n  \n# function to show the plot \nplt.show()","a94f5986":"# importing matplotlib module  \nfrom matplotlib import pyplot as plt \n  \n# Y-axis values \ny = [10, 5, 8, 4, 2] \n  \n# Function to plot histogram \nplt.hist(y) \n  \n# Function to show the plot \nplt.show() ","6bd4dcb3":"# importing matplotlib module  \nfrom matplotlib import pyplot as plt \n  \n# x-axis values \nx = [5, 2, 9, 4, 7] \n  \n# Y-axis values \ny = [10, 5, 8, 4, 2] \n  \n# Function to plot scatter \nplt.scatter(x, y) \n  \n# function to show the plot \nplt.show() ","beda0313":"\n\n# importing required modules\nimport matplotlib.pyplot as plt\n \n# values of x and y axes\nx = [5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\ny = [1, 4, 3, 2, 7, 6, 9, 8, 10, 5]\n \nplt.plot(x, y)\nplt.xlabel('x')\nplt.ylabel('y')\n \nplt.show()","a16871cc":"# importing libraries\nimport random\nimport matplotlib.pyplot as plt\n \nfig = plt.figure()\n \n# function to get random values for graph\ndef get_graphs():\n    xs =[]\n    ys =[]\n    for i in range(10):\n        xs.append(i)\n        ys.append(random.randrange(10))\n    return xs, ys\n \n# defining subplots\nax1 = fig.add_subplot(221)\nax2 = fig.add_subplot(222)\nax3 = fig.add_subplot(223)\nax4 = fig.add_subplot(224)\n \n# hiding the marker on axis\nx, y = get_graphs()\nax1.plot(x, y)\nax1.tick_params(axis ='both', which ='both', length = 0)\n \n# One can also change marker length\n# by setting (length = any float value)\n \n# hiding the ticks and markers\nx, y = get_graphs()\nax2.plot(x, y)\nax2.axes.get_xaxis().set_visible(False)\nax2.axes.get_yaxis().set_visible(False)\n \n# hiding the values and displaying the marker\nx, y = get_graphs()\nax3.plot(x, y)\nax3.yaxis.set_major_formatter(plt.NullFormatter())\nax3.xaxis.set_major_formatter(plt.NullFormatter())\n \n# tilting the ticks (usually needed when\n# the ticks are densely populated)\nx, y = get_graphs()\nax4.plot(x, y)\nax4.tick_params(axis ='x', rotation = 45)\nax4.tick_params(axis ='y', rotation =-45)\n     \nplt.show()","d86916e3":"# importing libraries\nimport matplotlib.pyplot as plt\nimport numpy as np\n \n# values of x and y axes\nx = [5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\ny = [1, 4, 3, 2, 7, 6, 9, 8, 10, 5]\n \nplt.plot(x, y, 'b')\nplt.xlabel('x')\nplt.ylabel('y')\n \n# 0 is the initial value, 51 is the final value\n# (last value is not taken) and 5 is the difference\n# of values between two consecutive ticks\nplt.xticks(np.arange(0, 51, 5))\nplt.yticks(np.arange(0, 11, 1))\nplt.show()","f6f6798e":"Matplotlib is an amazing visualization library in Python for 2D plots of arrays. Matplotlib is a multi-platform data visualization library built on NumPy arrays and designed to work with the broader SciPy stack."}}