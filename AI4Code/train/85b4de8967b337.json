{"cell_type":{"3937a8d2":"code","66855911":"code","240be00c":"code","9eda8908":"code","035de414":"code","2b1d2463":"code","4b2a8a50":"code","6817a399":"code","fca2690b":"code","d8a32f72":"code","34abb766":"code","f4529587":"code","c16471a2":"code","e8a4184e":"code","47fc8b61":"code","4d6e64f7":"code","e51d0d30":"code","c1b99a4d":"code","b021d800":"code","31c7134e":"code","0142c59d":"code","24bb8ec1":"code","94ef2a0c":"code","9fccc6ca":"code","15da425b":"code","e4711bd6":"code","9304d682":"code","ae077f91":"code","1c5e0e80":"code","cea872ee":"markdown","cb93726c":"markdown","eda2ab24":"markdown","55e9f23a":"markdown","fd9abe3a":"markdown","f65459c8":"markdown","0933d02f":"markdown","52269dd5":"markdown","ca4a5d14":"markdown","54c3c74c":"markdown","18a47a44":"markdown","102f4fa0":"markdown","74a0dce6":"markdown","b14f57bf":"markdown","74b293b9":"markdown","b5b8f9c2":"markdown","fa0ac99f":"markdown","4b622356":"markdown","eb1277c2":"markdown","475266e1":"markdown","11d74425":"markdown","96dff628":"markdown","fe06eb49":"markdown","577b7084":"markdown","29240016":"markdown"},"source":{"3937a8d2":"import numpy as np\n# Powerful n-dimensional arrays. Numerical computing tools. Interoperable:\n\nimport pandas as pd\n# python powerfull library used for data manipulating and data analysis:\n\nimport matplotlib.pyplot as plt\n# mayplotlib is a ploting library we can use this to make awesome graphs:\n\nimport seaborn as sns\n# seaborn also a ploting library we can use this to make awesome graphs:\n\n%matplotlib inline\n# %matplotlib inline sets the backend of matplotlib to the inline:","66855911":"# Linear Regression Model \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nimport random\nfrom sklearn import metrics","240be00c":"# Load data:\n\ndata = pd.read_csv('..\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv')","9eda8908":"# showing first five rows of data:\ndata.head()","035de414":"## first we can chek our data info using info function:\ndata.info()","2b1d2463":"# first we check our columns name using df.columns function:\ndata.columns","4b2a8a50":"data.drop('Serial No.',axis=1,inplace=True)\n\n# axis = 1 because of its by default axis=0 . axis  = 0 means row wise , axis = 1 means column wise \n# so here we want to remove a column so we uset axis = 1 .\n\n# inplace = True . mean we want this changing in our main dataset -","6817a399":"data.columns","fca2690b":"data.describe()\n\n# using this function we can simply find [count,mean,std,min,25%,50%,75%,max]","d8a32f72":"data.corr()\n\n# dataframe.corr() is used to find the pairwise correlation of all columns in the dataframe. \n# Any na values are automatically excluded. For any non-numeric data type columns in the dataframe \n# it is ignored.","34abb766":" sns.heatmap(data.corr(),annot=True)\n\n# now you can simple check out correlation between x and y variables:","f4529587":"sns.distplot(data['CGPA'])","c16471a2":"sns.regplot(x='CGPA',y='Chance of Admit ',data=data,ci=None)","e8a4184e":"sns.regplot(x='GRE Score',y='Chance of Admit ',data=data,ci=None)","47fc8b61":"sns.regplot(x='TOEFL Score',y='Chance of Admit ',data=data,ci=None)","4d6e64f7":"x = data[['CGPA','GRE Score','TOEFL Score']]","e51d0d30":"y = data[['Chance of Admit ']]","c1b99a4d":"# Split data for test and train the model.\nx_train, x_test, y_train, y_test = train_test_split(x,y,random_state=0,test_size=.20)","b021d800":"# x shape\nx.shape","31c7134e":"# x_train shape 80% of data from x - 20% other data for test\nx_train.shape","0142c59d":"# x_train first five rows:\nx_train.head()","24bb8ec1":"#object\nlinreg = LinearRegression()","94ef2a0c":"# fiting our data for training\nlinreg.fit(x_train,y_train)","9fccc6ca":"# our model is ready to predict y.\ny_predict = linreg.predict(x_test)","15da425b":"# our model prediction\ny_predict[:10]","e4711bd6":"# y predict\ny_predict[:10]","9304d682":"# y test\ny_test[:10]","ae077f91":"# from sklearn import metrics\n# already imported","1c5e0e80":"metrics.mean_absolute_error(y_test,y_predict)","cea872ee":"<font color = 'red'>from sklearn.linear_model import LinearRegression<br>\nfrom sklearn.model_selection import train_test_split<br>\nimport random<br><\/font>\n\nthese libraries we can use for create our model . so we already import these libraries . lets start working on model.<br>","cb93726c":"First we can compare y_predict and y_test ","eda2ab24":"now we can use these columns in model for <font color=\"green\">Chance of Admit<\/font> prediction","55e9f23a":"<h1>07- <font color='sky blue'>Train<\/font> Linear Regression Model<br><h1>","fd9abe3a":"<h1>4% Error Means our <font color='green'>Model 96% correct<font>.<h1>","f65459c8":"<h2>TOEFL Score <font color='green'>VS<\/font> Chance of Admit<h2>","0933d02f":"<h1>09- Find Model<font color='sky blue'> Acuracy<\/font> : Evaluating the performance<h1>","52269dd5":"<h1>05- <font color='sky blue'>Exploratory<\/font> data analysis<br><\/h1>\n    \nFirst we can describe our data . using descriptive statics funtion help called <font color = 'green'>**df.describe()**<\/font>","ca4a5d14":"<h2>CGPA <font color='green'>VS<\/font> Chance of Admit<h2>","54c3c74c":"now we can find correlations between x and y variabls . in x variabls we have independent variables and in y variable we have dependent variables. we can change this corr table into a graph usng <font color = 'green'>seaborn heatmap<\/font> through for simply understanding.","18a47a44":"<b>as u can see <font color='red'>['CGPA','GRE Score','TOEFL Score']<\/font> are strongly correlated with dependent variable - '<font color='green'>Chance of Admit '<\/green>","102f4fa0":"now we can split our variables in 2 variables x and y :<br>\n+ <font color='green'> x = independent variables\n+ y = dependent variables<\/font><br>\n\nindependent variables are  <font color='green'>[CGPA,GRE Score,TOEFL Score]<\/font> we put these variables in X = [CGPA,GRE Score,TOEFL Score]<br>\ndependent variable are <font color='green'> [Chance of Admit]<\/font> now we go to predict this variabl so y = [Chance of Admit]","74a0dce6":"<h1>04- Clean data - <font color='sky blue'>Feature Engineering<\/font><br><\/h1>","b14f57bf":"<h1>03- Load <font color='sky blue'>Data<\/font><br><h1>","74b293b9":"**now we can select <font color='green'>'Serial No.'<\/font> column and remove this from our dataset.**","b5b8f9c2":"from sklearn import metrics<br>\nwe can use this for find evaluating the performance","fa0ac99f":"<h1> 01- <font color='sky blue'>Intro<\/font>duction<br><\/h1>","4b622356":"<h1>02- Import Main <font color='sky blue'>Libraries<\/font><br><h1>","eb1277c2":"**Graduate Admission 2**\nPredicting admission from important parameters\n\nhttps:\/\/www.kaggle.com\/mohansacharya\/graduate-admissions","475266e1":"<h1> 06- Creating a <font color='sky blue'>Linear Regression Model<\/font><br><h1>","11d74425":"<h1>08- <font color='sky blue'>Test<\/font> Linear Regression Model<br><h1>","96dff628":"in our data set no any kind of missing values . but one thing is noteable that in our dataset\n<font color='red'>\"Serial No\" column is useless<\/font> this column get us error in model development session because here we want \nto predict the <font color='green'>\"Chance of admit\"<\/font> . and \"chance of admit\" not depend on your serial no so this column is useless for us.\nfirst we can remove this column using <font color='sky blue'>df.drop()<\/font> so lets GO","fe06eb49":"**now you can see <font color=red>'Serial No.'<\/font> removed from our dataset.**","577b7084":"<h2>GRE Score <font color='green'>VS<\/font> Chance of Admit<h2>","29240016":"<h3>Ste<font color='sky blue'>ps:<\/font><h3>\n    01- <font color='sky blue'>Intro<\/font>duction<br>\n02- Import Main <font color='sky blue'>Libraries<\/font><br>\n03- Load <font color='sky blue'>Data<\/font><br>\n04- Clean data - <font color='sky blue'>Feature Engineering<\/font><br>\n05- <font color='sky blue'>Exploratory<\/font> data analysis<br>\n06- Creating a <font color='sky blue'>Linear Regression Model<\/font><br>\n07- <font color='sky blue'>Train<\/font> Linear Regression Model<br>\n08- <font color='sky blue'>Test<\/font> Linear Regression Model<br>\n09- Find Model<font color='sky blue'> Acuracy<\/font>"}}