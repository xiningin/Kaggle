{"cell_type":{"3b303f8e":"code","fb0f9122":"code","a3e8726b":"code","95f3c87f":"code","c9600379":"code","d253fe07":"code","fbfc6c6d":"code","f34e78d9":"code","df0dc9f5":"code","701e355b":"code","9874aa5c":"code","110cc312":"code","07f8f599":"code","8975095b":"code","96f0ef2e":"code","a2d8fddf":"code","c59afb78":"code","09b468f5":"code","27840745":"code","cf6d9447":"code","adf0ed37":"code","5810bbf6":"code","d1566034":"code","57704c8f":"code","55359551":"code","14151058":"code","2e337187":"code","7a60c374":"code","1a2ed3aa":"code","05bf5f51":"code","4307d86f":"code","4377e695":"code","5f164605":"code","6d83c77c":"code","e37b8a8e":"code","ac742cdb":"code","e2ffed97":"code","0270ea6a":"code","727dad45":"code","867acb8a":"code","75d16867":"code","b52ce551":"code","850d1088":"code","8b4520c2":"code","5d5128f6":"code","7e87f583":"code","c5bfdba7":"code","8c115d06":"code","3ae3e177":"code","0a297828":"code","d0e7903f":"code","d026699a":"code","e1dbbd2a":"code","3ae2ed73":"code","c1f6c7df":"code","76b58447":"code","1dca4c1f":"code","4531815b":"code","e3f32236":"markdown","b249be0f":"markdown","56b2b36f":"markdown","892353be":"markdown","6735bca1":"markdown","3a9bffcb":"markdown","b2158f77":"markdown","838aa848":"markdown","74c4325a":"markdown","182277a8":"markdown","47a5e980":"markdown","fa0b3b16":"markdown","d715b1b5":"markdown","b0374c00":"markdown","0511f554":"markdown","0e0437e5":"markdown","86e05139":"markdown","d078124e":"markdown","7a5c30da":"markdown","ac865c34":"markdown","306eea3f":"markdown","4babc8ab":"markdown","dc11b1a6":"markdown","4c2af392":"markdown","cd41cde6":"markdown","357506b8":"markdown","046b854e":"markdown","8caae9c9":"markdown","2e8e55ad":"markdown","77b3932b":"markdown","69fef46f":"markdown","fccfac98":"markdown","bb106703":"markdown","287329d6":"markdown","c283cecf":"markdown","3d91a48c":"markdown","f70ec8b6":"markdown","c2def4fb":"markdown","5ab481d1":"markdown","45a69af5":"markdown","4dd4cf9f":"markdown","414e414b":"markdown","822ead98":"markdown"},"source":{"3b303f8e":"# import all packages and set plots to be embedded inline\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n\n%matplotlib inline","fb0f9122":"df = pd.read_csv('..\/input\/propserloan-usa-2005-2014\/prosperLoanData.csv')","a3e8726b":"# inspect general shape and data types\nprint(df.shape)\nprint(df.dtypes.value_counts())","95f3c87f":"# inspect data rows\nprint(df.head())","c9600379":"# plot precentage (sum\/count of row) of missing values per column\n(df.isna().sum()\/df.shape[0]).plot.bar(figsize=(25,5));","d253fe07":"# get column names with more than 50% null data\nnames_toDrop = (df.isnull().sum()\/df.shape[0] >=0.5)\nnames_toDrop = names_toDrop[names_toDrop.iloc[:]==True].index.tolist()\n\n# drop those columns\ndf.drop(columns=names_toDrop, inplace=True)\n","fbfc6c6d":"# inspect null in remaining data \ndf.isna().sum()[df.isna().sum() > 0]","f34e78d9":"# check remaining columns data types\nprint(df.dtypes.value_counts())","df0dc9f5":"# explore int64 data\nprint(df.select_dtypes(include='int64').head())","701e355b":"# explore float64 data\nprint(df.select_dtypes(include='float64').head())","9874aa5c":"# check correlation between numerical remaining columns to decide which to explore\n# first get numerical columns\nnumeric_vars = df.select_dtypes(include=['int64','float64']).columns\n\n# calculate correlation between numerical variables for successful loans \n# (i.e loan status is either; completed, FinalPaymentInProgress)\ncorr_mat = df.query('LoanStatus == \"FinalPaymentInProgress\" or LoanStatus == \"Completed\"').corr()\n\n# get variables with correlation > 0.5\nindices = np.where(corr_mat > 0.5)\nindices = [(corr_mat.index[x], corr_mat.columns[y]) for x, y in zip(*indices)\n                                        if x != y and x < y]\nindices[:10]","110cc312":"# change listingCategory from numeric to qualitative values\n\ndf['ListingCategory'] = df.apply(\n    lambda x: 'Not Avail' if x['ListingCategory (numeric)'] == 0 \n    else 'Debt Consolidation' if x['ListingCategory (numeric)'] == 1\n    else 'Home Improvement' if x['ListingCategory (numeric)'] == 2\n    else 'Business' if x['ListingCategory (numeric)'] == 3\n    else 'Personal Loan' if x['ListingCategory (numeric)'] == 4\n    else 'Student Use' if x['ListingCategory (numeric)'] == 5\n    else 'Auto' if x['ListingCategory (numeric)'] == 6\n    else 'Other' if x['ListingCategory (numeric)'] == 7\n    else 'Baby&Adoption' if x['ListingCategory (numeric)'] == 8\n    else 'Boat' if x['ListingCategory (numeric)'] == 9\n    else 'Cosmetic Procedure' if x['ListingCategory (numeric)'] == 10\n    else 'Engagement Ring' if x['ListingCategory (numeric)'] == 11\n    else 'Green Loans' if x['ListingCategory (numeric)'] == 12\n    else 'Household Expenses' if x['ListingCategory (numeric)'] == 13\n    else 'Large Purchases' if x['ListingCategory (numeric)'] == 14\n    else 'Medical\/Dental' if x['ListingCategory (numeric)'] == 15\n    else 'Motorcycle' if x['ListingCategory (numeric)'] == 16\n    else 'RV' if x['ListingCategory (numeric)'] == 17\n    else 'Taxes' if x['ListingCategory (numeric)'] == 18\n    else 'Vacation' if x['ListingCategory (numeric)'] == 19\n    else 'Wedding Loans' if x['ListingCategory (numeric)'] == 20\n    else x['ListingCategory (numeric)'], axis = 1)","07f8f599":"# explore types of features selected\nvariables = ['LoanStatus','BorrowerAPR','ProsperScore','OpenCreditLines','EstimatedLoss','EstimatedReturn','LoanOriginalAmount','Term','EmploymentStatus', 'EmploymentStatusDuration','ListingCategory','IncomeRange','IncomeVerifiable']\ndf[variables].dtypes","8975095b":"# change bool variable to str\ndf['IncomeVerifiable'] = df['IncomeVerifiable'].astype('str')","96f0ef2e":"# Explore each variable individually\n\n# first plot qualitative features alone using countplot\nfig, ax = plt.subplots(nrows=2, figsize = [8,8])\n\ndefault_color = sb.color_palette()[0]\n\nsb.countplot(data = df, y = 'LoanStatus', color = default_color, ax = ax[0]).set_title('LoanStatus Count');\nsb.countplot(data = df, y = 'EmploymentStatus', color = default_color, ax = ax[1]).set_title(label='EmployementStatus Count');\nplt.tight_layout()","a2d8fddf":"fig, ax = plt.subplots(nrows=2, figsize = [8,8])\nsb.countplot(data = df, y = 'ListingCategory', color = default_color, ax = ax[0]).set_title('ListingCategory Count');\nsb.countplot(data = df, y = 'IncomeVerifiable', color = default_color, ax = ax[1]).set_title('IncomeVerifiable Count');\nplt.tight_layout()","c59afb78":"sb.countplot(data = df, y = 'IncomeRange', color = default_color).set_title('IncomeRange Count');","09b468f5":"# second plot hist of quantative variables\n\n# define qual features\nquan_variables = ['BorrowerAPR','ProsperScore','OpenCreditLines','EstimatedLoss','EstimatedReturn','LoanOriginalAmount','Term','EmploymentStatusDuration']\n\n# explore their ranges\ndf[quan_variables].describe()\n","27840745":"# plot histograms of quan_variables\nfig, ax = plt.subplots(nrows=8, figsize = [8,20])\n\nfor i in range(len(quan_variables)):\n    var = quan_variables[i]\n    binsize=(df[var].max() - df[var].min())\/100\n    bins = np.arange(df[var].min(), df[var].max()+binsize, binsize)\n    ax[i].hist(data = df, x = var, bins = bins)\n    ax[i].set_ylabel('Count')\n    ax[i].set_xlabel('{}'.format(var))\n    ax[i].set_title('{} Histogram'.format(var))\n\nplt.tight_layout()    \nplt.show()","cf6d9447":"# investigating further on an even smaller bin size\nbins = np.arange(1000, 25000, 100)\n\nplt.figure(figsize=[10, 5])\nplt.hist(data = df, x = 'LoanOriginalAmount', bins = bins)\nplt.title('Checking trends by Zooming into $1-25K range with small binwidth (100)')\nplt.xlim([1000,25000])\nplt.xlabel('LoanOriginalAmount')\nplt.ylabel('Count')\nplt.show()","adf0ed37":"# re-plot the distribution of Loss and Return\nfig, ax = plt.subplots(nrows=2, figsize = [5,7], sharey=True)\n\nLR_variables = ['EstimatedReturn', 'EstimatedLoss']\nfor i in range(2):\n    var = LR_variables[i]\n    binwidth = (df[var].max() - df[var].min())\/50\n    bins = np.arange(0, 0.3+binwidth, binwidth)\n    ax[i].hist(data = df, x = var, bins = bins, range=(0, 0.3))\n    ax[i].set_xlabel('{}'.format(var))\n    ax[i].set_ylabel('Count')\n    ax[i].set_title('{} Histogram'.format(var))\n\nplt.tight_layout()        \nplt.show()","5810bbf6":"# there's a long tail in the distribution, so let's put it on a log scale instead\nlog_binsize = 0.05\nbins = 10 ** np.arange(0.5, np.log10(df['EmploymentStatusDuration'].max())+log_binsize, log_binsize)\n\nplt.figure(figsize=[8, 5])\nplt.hist(data = df, x = 'EmploymentStatusDuration', bins = bins)\nplt.xscale('log')\nplt.xticks([3,10,50,150, 400], [3,10,50,150,400])\nplt.xlabel('Employment Duration (Month)')\nplt.ylabel('Count')\nplt.title('Log-scale plot of Employment duration')\nplt.show()","d1566034":"# plotting relationship between selected qualitative features and loanStatus .. focusing only on the top 5 Statuses\n\nloanStatus_df = df.query('LoanStatus in (\"Completed\",\"Current\",\"Defaulted\",\"Chargedoff\",\"Past Due (1-15 days)\")')\n\nfig, ax = plt.subplots(nrows=8, figsize = [8, 20])\n\nfor i in range(len(quan_variables)):\n    var = quan_variables[i]\n    ax[i].scatter(loanStatus_df[var],loanStatus_df['LoanStatus'], alpha=0.05)\n    ax[i].set_xlabel('{}'.format(var))\n    ax[i].set_title('Loan Status vs. {}'.format(var))\n\nplt.tight_layout()    \nplt.show()","57704c8f":"# plot Loan Status count per qualitative features\nplt.figure(figsize = [8, 5])\n\n# chose to plot only top 5 of df.LoanStatus.value_counts() .. as the remaining are too low compared to the rest\n\n# subplot 1: LoanStatus vs EmploymentStatus\nax = plt.subplot(2, 1, 1)\nsb.countplot(data = loanStatus_df, x = 'EmploymentStatus', hue = 'LoanStatus', palette = 'BuGn_r', order=df.EmploymentStatus.value_counts().iloc[:5].index)\nax.legend(loc = 1, ncol = 2) # re-arrange legend to reduce overlapping\nax.set_title('Plotting Count of Loans grouped by Loan Status & Employment Status')\n\n# subplot 2: LoanStatus vs. IncomeRange\nax = plt.subplot(2, 1, 2)\nsb.countplot(data = loanStatus_df, x = 'IncomeRange', hue = 'LoanStatus', palette = 'Blues_d', order=df.IncomeRange.value_counts().iloc[:5].index)\nax.legend(loc = 1, ncol = 2) # re-arrange legend to reduce overlapping\nax.set_title('Plotting Count of Loans grouped by Loan Status & IncomeRange')\n\nplt.tight_layout()\nplt.show()","55359551":"# plot Loan Status count per qualitative features\nplt.figure(figsize = [8, 5])\n\n# chose to plot only top 5 of df.LoanStatus.value_counts() .. as the remaining are too low compared to the rest\n\n# subplot 3: LoanStatus vs. IncomeVerifiable\nax = plt.subplot(2, 1, 1)\nsb.countplot(data = loanStatus_df, x = 'IncomeVerifiable', hue = 'LoanStatus', palette = 'BuGn_r', order=df.IncomeVerifiable.value_counts().iloc[:5].index)\nax.legend(loc = 1, ncol = 2) # re-arrange legend to remove overlapping\nax.set_title('Plotting Count of Loans grouped by Loan Status & IncomeVerifiable')\n\n# subplot 3: LoanStatus vs. ListingCategory\nax = plt.subplot(2, 1, 2)\nsb.countplot(data = loanStatus_df, x = 'ListingCategory', hue = 'LoanStatus', palette = 'Blues_d', order=df.ListingCategory.value_counts().iloc[:5].index)\nax.legend(loc = 1, ncol = 2) # re-arrange legend to remove overlapping\nax.set_title('Plotting Count of Loans grouped by Loan Status & ListingCategory')\n\nplt.tight_layout()\nplt.show()","14151058":"# Explore relationship between rate (Borrower APR) vs. EmploymentStatus, ListingCategory & Term\n\nplt.figure(figsize = [8, 5])\n\n# subplot 1: BorrowerAPR vs EmploymentStatus .. hue on if income is verifiable\nsb.boxplot(data = df, y = 'EmploymentStatus', x = 'BorrowerAPR', hue='IncomeVerifiable', color=sb.color_palette()[0]);\nplt.title('Box Plotting BorrowerAPR vs. EmploymentStatus and split by IncomeVerifiable')\n\nplt.tight_layout()\nplt.show();","2e337187":"plt.figure(figsize = [8, 5])\n# subplot 2: BorrowerAPR vs IncomeRange .. hue on if income is verifiable\nsb.boxplot(data = df, y = 'IncomeRange', x = 'BorrowerAPR', hue='IncomeVerifiable', color=sb.color_palette()[0]);\nplt.title('Box Plotting BorrowerAPR vs. IncomeRange and split by IncomeVerifiable')\n\nplt.tight_layout()\nplt.show();","7a60c374":"plt.figure(figsize = [8, 5])\n# subplot 3: BorrowerAPR vs. ListingCategory\nsb.boxplot(data = df, y = 'ListingCategory', x = 'BorrowerAPR', color=sb.color_palette()[0]);\nplt.title('Box Plotting BorrowerAPR vs. ListingCategory')\n\nplt.tight_layout()\nplt.show();","1a2ed3aa":"# Explore relationship between rate (Borrower APR) vs. Term\nplt.figure(figsize = [5, 3])\n\nplt.scatter(data = df, x = 'BorrowerAPR', y = 'Term', alpha = 0.01)\nplt.xlabel('Borrower APR')\nplt.ylabel('Term (Months)')\nplt.title('Scatter plot Borrower APR vs. Term')\n\nplt.show()","05bf5f51":"# get unique values of Term\ndf['Term'].unique()","4307d86f":"# Explore relationship between rate (Borrower APR) vs. Term\nplt.figure(figsize = [8, 5])\n\nsb.distplot( df.loc[df['Term'] == df['Term'].unique()[0]]['BorrowerAPR'] , kde=True, bins=50,\n            label = df['Term'].unique()[0],\n             hist_kws={\"alpha\":0.2});\n\nsb.distplot( df.loc[df['Term'] == df['Term'].unique()[1]]['BorrowerAPR'] , kde=True, bins=50,\n            label = df['Term'].unique()[1],\n             hist_kws={\"alpha\":0.2});\n\nsb.distplot( df.loc[df['Term'] == df['Term'].unique()[2]]['BorrowerAPR'] , kde=True, bins=50,\n            label = df['Term'].unique()[2],\n             hist_kws={\"alpha\":0.2});\n\nplt.legend(title='Term in Months')\nplt.ylabel('Density')\nplt.title('Borrower APR density distribution per 3 Unique values of Term')","4377e695":"# Explore relationship between rate (Borrower APR) vs. LoanOriginalAmount\nplt.figure(figsize = [8, 5])\n\nsb.regplot(data = df, x = 'BorrowerAPR', y = 'LoanOriginalAmount', scatter_kws={'alpha':0.01})\nplt.title('RegPlot of BorrowerAPR against LoanOriginalAmount')\nplt.show()","5f164605":"# Explore relationship between rate (Borrower APR) vs. EstimatedLoss\nplt.figure(figsize = [5, 5])\n\nsb.regplot(data = df, x = 'BorrowerAPR', y = 'EstimatedLoss', scatter_kws={'alpha':0.01});\nplt.title('RegPlot of BorrowerAPR against EstimatedLoss')\nplt.show()","6d83c77c":"# Explore relationship between rate (Borrower APR) vs. EstimatedReturn\nplt.figure(figsize = [5, 5])\n\nsb.regplot(data = df, x = 'BorrowerAPR', y = 'EstimatedReturn', scatter_kws={'alpha':0.01});\nplt.title('RegPlot of BorrowerAPR against EstimatedReturn')\n\nplt.show()","e37b8a8e":"# Explore relationship between rate (Borrower APR) vs. OpenCreditLines\nplt.figure(figsize = [5, 5])\n\nsb.regplot(data = df, x = 'BorrowerAPR', y = 'OpenCreditLines', scatter_kws={'alpha':0.01});\nplt.title('RegPlot of BorrowerAPR against OpenCreditLines')\n\nplt.show()","ac742cdb":"# Explore relationship between rate (Borrower APR) vs. ProsperScore\nplt.figure(figsize = [5, 5])\n\nsb.regplot(data = df, x = 'BorrowerAPR', y = 'ProsperScore', scatter_kws={'alpha':0.01});\nplt.title('RegPlot of BorrowerAPR against ProsperScore')\n\nplt.show()","e2ffed97":"# correlation plot\nplt.figure(figsize = [8, 5])\nsb.heatmap(df[quan_variables].corr(), annot = True, fmt = '.3f',\n           cmap = 'vlag_r', center = 0)\nplt.title('Heatmap of the numerical features we chose for this study')\n\nplt.show()","0270ea6a":"# plotting relationship between selected numerical features\ng = sb.PairGrid(data = df, vars = quan_variables)\ng = g.map_diag(plt.hist, bins = 20);\ng.map_offdiag(plt.scatter)","727dad45":"def hist2dgrid(x, y, **kwargs):\n    \"\"\" Quick hack for creating heat maps with seaborn's PairGrid. \"\"\"\n    palette = kwargs.pop('color')\n    plt.hist2d(x, y, cmap = palette, cmin = 0.5)\n    ","867acb8a":"# Explore APR, EstimatedLoss .. FacetGrid on EmploymentStatus & IncomeVerifiable\n\ng = sb.FacetGrid(data = df.fillna(0), row = 'IncomeVerifiable', col = 'EmploymentStatus', size = 2.5, margin_titles = True)\ng.map(hist2dgrid, 'BorrowerAPR', 'EstimatedLoss', color = 'inferno_r')\n\nplt.tight_layout()\nplt.show()","75d16867":"# Explore APR, EstimatedReturn .. FacetGrid on EmploymentStatus & IncomeVerifiable\n\ng = sb.FacetGrid(data = df.fillna(0), row = 'IncomeVerifiable', col = 'EmploymentStatus', size = 2.5, margin_titles = True)\ng.map(hist2dgrid, 'BorrowerAPR', 'EstimatedReturn', color = 'inferno_r')\n\nplt.show()","b52ce551":"# Explore LoanOriginalAmount, LoanStatus & ListingCategory\n\nfig = plt.figure(figsize = [25,8])\nax = sb.pointplot(data = loanStatus_df, x = 'ListingCategory', y = 'LoanOriginalAmount', hue = 'LoanStatus',\n           palette = 'Greens', linestyles = '', dodge = 0.4)\nplt.title('Loan Original Amount across Listing Category and Loan Status')\nax.legend(ncol = 2) # re-arrange legend to reduce overlapping\nplt.xticks(rotation=70)\n\nplt.show();","850d1088":"# Explore LoanOriginalAmount, IncomeRange & EmploymentStatus\n\nfig = plt.figure(figsize = [15,5])\nax = sb.pointplot(data = loanStatus_df, x = 'IncomeRange', y = 'LoanOriginalAmount', hue = 'EmploymentStatus',\n           palette = 'Blues', linestyles = '', dodge = 0.4)\nplt.title('Loan Original Amount across Income Range and Employment Status')\nax.legend(ncol = 2) # re-arrange legend to reduce overlapping\nplt.xticks(rotation=70)\n\nplt.show();","8b4520c2":"# Explore APR, EmploymentStatus & ListingCategory\n\nfig = plt.figure(figsize = [25,8])\nax = sb.pointplot(data = loanStatus_df, x = 'ListingCategory', y = 'BorrowerAPR', hue = 'EmploymentStatus',\n           palette = 'Blues', linestyles = '', dodge = 0.4)\nplt.title('Borrower APR across ListingCategory and EmploymentStatus')\nax.legend(ncol = 2) # re-arrange legend to reduce overlapping\nplt.xticks(rotation=70)\n\nplt.show();","5d5128f6":"# Explore APR, EmploymentStatus & IncomeRange\n\nfig = plt.figure(figsize = [20,8])\nax = sb.pointplot(data = loanStatus_df, x = 'IncomeRange', y = 'BorrowerAPR', hue = 'EmploymentStatus',\n           palette = 'Blues', linestyles = '', dodge = 0.4)\nplt.title('Borrower APR across IncomeRange and EmploymentStatus')\nplt.show();","7e87f583":"df['year'] = pd.DatetimeIndex(df['ListingCreationDate']).year\nloanStatus_df['year'] = pd.DatetimeIndex(loanStatus_df['ListingCreationDate']).year","c5bfdba7":"# Overall APR mean per IncomeRange across the years\n\nmAPR_year_IncomeRange = df.groupby(['year','IncomeRange'])['BorrowerAPR'].mean().reset_index(name ='mAPR')\n\nfig = plt.figure(figsize = [10,5])\nax = sb.lineplot(data = mAPR_year_IncomeRange, x = 'year', y = 'mAPR', hue = 'IncomeRange')\nplt.title('mean Borrower APR per IncomeRange in 2005-2014')\nplt.show();","8c115d06":"# Overall APR mean per IncomeRange across the years\n\nmAPR_year_IncomeRange_Status = loanStatus_df.groupby(['year','IncomeRange','LoanStatus','IncomeVerifiable'])['BorrowerAPR'].mean().reset_index(name ='mAPR')\n\ng = sb.FacetGrid(data = mAPR_year_IncomeRange_Status, hue='IncomeRange', row = 'IncomeVerifiable', col = 'LoanStatus', size = 3.5, margin_titles = True)\ng.map(sb.lineplot, 'year', 'mAPR');\ng.add_legend()\n\nplt.show()","3ae3e177":"mAPR_year_ListingCategory = df.groupby(['year','ListingCategory'])['BorrowerAPR'].mean().reset_index(name ='mAPR')\n\nfig = plt.figure(figsize = [20,8])\nax = sb.lineplot(data = mAPR_year_ListingCategory, x = 'year', y = 'mAPR', hue = 'ListingCategory')\nplt.title('mean Borrower APR per ListingCategory in 2005-2014')\nplt.show();","0a297828":"# Overall APR mean per ListingCategory across the years\n\nmAPR_year_IncomeRange_Status = loanStatus_df.groupby(['year','ListingCategory','LoanStatus','IncomeVerifiable'])['BorrowerAPR'].mean().reset_index(name ='mAPR')\n\ng = sb.FacetGrid(data = mAPR_year_IncomeRange_Status, hue='ListingCategory', row = 'IncomeVerifiable', col = 'LoanStatus', size = 3.5, margin_titles = True)\ng.map(sb.lineplot, 'year', 'mAPR');\ng.add_legend()\n\nplt.show()","d0e7903f":"mAPR_year_EstimatedLoss = df.groupby(['year','EstimatedLoss'])['BorrowerAPR'].mean().reset_index(name ='mAPR')\n\nfig = plt.figure(figsize = [10,5])\nax = sb.lineplot(data = mAPR_year_EstimatedLoss, x = 'EstimatedLoss', y = 'mAPR', hue = 'year')\nplt.title('mean Borrower APR per EstimatedLoss in 2005-2014')\nplt.show();","d026699a":"# Overall APR mean per EstimatedLoss across the years\n\nmAPR_year_EstimatedLoss_Status = loanStatus_df.groupby(['year','EstimatedLoss','LoanStatus','IncomeVerifiable'])['BorrowerAPR'].mean().reset_index(name ='mAPR')\n\ng = sb.FacetGrid(data = mAPR_year_EstimatedLoss_Status, hue='year', row = 'IncomeVerifiable', col = 'LoanStatus', size = 3.5, margin_titles = True)\ng.map(sb.lineplot, 'EstimatedLoss', 'mAPR');\ng.add_legend()\n\nplt.show()","e1dbbd2a":"mAPR_year_EstimatedReturn = df.groupby(['year','EstimatedReturn'])['BorrowerAPR'].mean().reset_index(name ='mAPR')\n\nfig = plt.figure(figsize = [10,5])\nax = sb.scatterplot(data = mAPR_year_EstimatedReturn, x = 'EstimatedReturn', y = 'mAPR', hue = 'year', alpha=0.5)\nplt.title('mean Borrower APR per EstimatedReturn in 2005-2014')\nplt.show();","3ae2ed73":"# Overall APR mean per EstimatedReturn across the years\n\nmAPR_year_EstimatedReturn_Status = loanStatus_df.groupby(['year','EstimatedReturn','LoanStatus','IncomeVerifiable'])['BorrowerAPR'].mean().reset_index(name ='mAPR')\n\ng = sb.FacetGrid(data = mAPR_year_EstimatedReturn_Status, hue='year', row = 'IncomeVerifiable', col = 'LoanStatus', size = 3.5, margin_titles = True)\ng.map(sb.scatterplot, 'EstimatedReturn', 'mAPR');\ng.add_legend()\n\nplt.show()","c1f6c7df":"mAPR_year_OpenCredit = df.groupby(['year','OpenCreditLines'])['BorrowerAPR'].mean().reset_index(name ='mAPR')\n\nfig = plt.figure(figsize = [10,5])\nax = sb.lineplot(data = mAPR_year_OpenCredit, x = 'OpenCreditLines', y = 'mAPR', hue = 'year')\nplt.title('mean Borrower APR per OpenCreditLines in 2005-2014')\nplt.show();","76b58447":"# Overall APR mean per EstimatedLoss across the years\n\nmAPR_year_OpenCredit_Status = loanStatus_df.groupby(['year','OpenCreditLines','LoanStatus','IncomeVerifiable'])['BorrowerAPR'].mean().reset_index(name ='mAPR')\n\ng = sb.FacetGrid(data = mAPR_year_OpenCredit_Status, hue='year', row = 'IncomeVerifiable', col = 'LoanStatus', size = 3.5, margin_titles = True)\ng.map(sb.scatterplot, 'OpenCreditLines', 'mAPR');\ng.add_legend()\n\nplt.show()","1dca4c1f":"status_analysis1 = loanStatus_df.groupby(['LoanStatus','IncomeVerifiable','IncomeRange','EmploymentStatus'])['Term'].mean().reset_index(name ='Term_mean')\n\ng = sb.catplot(x=\"LoanStatus\", y=\"Term_mean\",\n                row=\"IncomeRange\", col = 'EmploymentStatus', hue='IncomeVerifiable',\n                data=status_analysis1, kind=\"bar\");\n\ng.add_legend()\nplt.show()","4531815b":"\nstatus_analysis2 = loanStatus_df.groupby(['LoanStatus','IncomeRange','ListingCategory','EmploymentStatus'])['Term'].mean().reset_index(name ='Term_mean')\nplt.figure(figsize = [20,8])\n\ng = sb.catplot(x=\"LoanStatus\", y=\"Term_mean\",\n                hue=\"ListingCategory\", col = 'EmploymentStatus',\n                data=status_analysis2, kind=\"bar\");\ng.add_legend()\nplt.xticks(rotation=70)\nplt.show()","e3f32236":"### Talk about some of the relationships you observed in this part of the investigation. How did the feature(s) of interest vary with other features in the dataset?\n\nTwo main approaches were followed:\n1. **LoanStatus** vs. all other variables\n2. **BorrowerAPR** vs. all other variables\n\n**LoanStatus** exploration and analysis:\n- By focusing on the top 5 Statuses we find most of the bivariate analysis agree with the univariate analysis, in terms of where we find most of our data points.\n- However there were couple of interesting findings:\n    1. Current Loans have more data featured with High employment duration, High Loan amounts and High # of Open Credits\n    2. Estimated Loss for the loans doesn't differ significantly by Status\n    3. Estimated Return's range for chargedoff loans is large\n\n**BorrowerAPR** exploration and analysis:\n- APR is indirectly propotional with ProsperScore, in an obvious way.\n- APR is very slightly increases as EstimatedLoss increase, while on the other hand it positively changes as EstimatedReturn increase almost by a factor of 1\/2.\n- APR increases as the amount of loan decreases, hence negatively correlated.\n- Surprisingly APR doesn't vary greatly with OpenCreditLines as I expected to find.\n- And finally APR distribution becomes less variant and more centered around 0.2 as the Term increases to 36\n- In general APR mean is greater if the Income is unverfieable regardless of the IncomeRange or Employment Status, it's range is also larger.\n- APR range is larger for certain Listing Categories; such as Personal Loans, Business, Students and Debt settlement","b249be0f":"### Discuss the distribution(s) of your variable(s) of interest. Were there any unusual points? Did you need to perform any transformations?\n\n1. **EmploymentStatusDuration** distribution has a long-tailed distribution, with a lot of entries with low duration. When plotted on a log-scale, the duration distribution looks almost normally distributed, with one peak around 100 (Months). Interestingly, it rapidly drops after 150.\n2. **BorrowerAPR** is almost a normal around 0.2, however there is a huge spike at ~0.35 which needs to be furtherly investigated\n3. **EstimatedReturn** & **EstimatedLoss** fall under the same range (with few outliers) between 0 and 0.3, when both are drawn together, limiting their range to the observed one, we notice that *EstimatedReturn* is ***unimodal*** around 0.75 and *EstimatedLoss* is ***bi-modal*** around 0.05 & 0.15\n4. By zooming into **LoanOriginalAmount**, we find it follows a decaying trend, starting from certain peak points till the next, noticeable peaks are at: 4000, 10000, 15000 & 20000.\n5. **Term** has 3 distinct values only\n\n\n### Of the features you investigated, were there any unusual distributions? Did you perform any operations on the data to tidy, adjust, or change the form of the data? If so, why did you do this?\n\nTwo cleaning actions at the very beginning were performed:\n1. Dropping all columns with > 50% of their values = na\n2. ListingCategory column was added to be used of its numerical value column","56b2b36f":"Can't really get much information from above scatter plot, except that APR range for the 30+ Months loan term is the widest, hence will plot distribution of APR per each term","892353be":"- By taking a deeper look into LoanOriginalAmount, we find there are peaks at 4K, 10K, 15K & 20K dollars","6735bca1":"## Univariate Exploration\n\nWe shall start by exploring  each variable (mentioned on the previous slide) individually, first by plotting qualitative features alone using countplot","3a9bffcb":"## Bivariate Exploration\nIn this section, investigate relationships between pairs of variables.\n\n- First approach, explore LoanStatus Vs. remaining features Cont'd\n    - In this section we focus on our top 5 LoanStatuses; Completed, Current, Defaulted, Chargedoff , Past Due (1-15 days)\n    - We scatter plot to see how other **categorical** variables are distributed across those Statuses","b2158f77":"### Talk about some of the relationships you observed in this part of the investigation. Were there features that strengthened each other in terms of looking at your feature(s) of interest?\n\n- Retired ppl who ask for loans have the largest range in APR and Loan Amounts, usually requested for: Student Use, Taxes, Household expenses\/Improvement and medical reasons.\n- Highest APR mean is for those with IncomeRange of < 25K\n- Largest range of defaulted Loan amounts are for Wedding loans, taxes, Medical and large purchases\n- On average self-employed ppl request higher loan amounts\n- Largest Range of loan amounts with Completed Status are Green Loans\n\n\n### Were there any interesting or surprising interactions between features?\n\nAPR have stronger relationship with EstimatedReturn, espcially if Income is not Verifiable","838aa848":"- EmploymentStatusDuration showed decaying exponential pattern when plotted as is, hence I've transofrmed it via log-scale to get a better look at its distribution, after transformation we can see it is almost normal around peak of 100.","74c4325a":"## Multivariate Exploration - Cont'd\n\nIn this section, investigate relationships between 3 of the variables.\n- Next plot the relationship between IncomeRange & LoanOriginalAmount across EmploymentStatus","182277a8":"- Next is plotting BorrowerAPR against EstimatedReturn","47a5e980":"## Multivariate Exploration - Cont'd\n\nIn this section, investigate relationships between 3 of the variables.\n- Next plot the relationship between ListingCategory & BorrowerAPR across EmploymentStatus","fa0b3b16":"## Multivariate Exploration - Cont'd\n\nIn this section, Explore APR across the years\n- First we plot APR across the year per IncomeRange .. then split it by LoanStatus","d715b1b5":"> Load in your dataset and describe its properties through the questions below.\nTry and motivate your exploration goals through this section.","b0374c00":"- By plotting count of LoanStatus, we see most of our dataset falls in the bucket of (Completed, Current, Chargedoff and deafulted)\n- By plotting count of EmploymentStatus, we see most of our dataset falls in the bucket of (Employed, Full-time, self-employed and not available!)","0511f554":"- By plotting count of IncomeRange, we see most of our Income Range varies from 0 dollars till 100,000+, however almost 40% of our data is within 25K-75K dollars range","0e0437e5":"## Multivariate Exploration - Cont'd\n\nIn this section, LoanStatus\n- Finally we plot LoanStatus per LoanOriginalAmount, OpenCreditLines, IncomeVerifiable, IncomeRange, ListingCategory & EmploymentStatus","86e05139":"- By plotting both EstimatedReturn, EstimatedLoss withing the same x-lim (0-0.3), we see that EstimatedReturn is almost unimodal around ~0.075, and EstimatedLoss is almost bi-modal around ~0.05 & 0.15","d078124e":"> At the end of your report, make sure that you export the notebook as an\nhtml file from the `File > Download as... > HTML` menu. Make sure you keep\ntrack of where the exported file goes, so you can put it in the same folder\nas this notebook for project submission. Also, make sure you remove all of\nthe quote-formatted guide notes like this one before you finish your report!","7a5c30da":"- Next is plotting BorrowerAPR against OpenCreditLines","ac865c34":"### What features in the dataset do you think will help support your investigation into your feature(s) of interest?\n\nI will investigate the below features, based on the correlation matrix above and the below suggested Qs:\n- What factors affect a loan\u2019s outcome status?\n- What affects the borrower\u2019s APR or interest rate?\n- Are there differences between loans depending on how large the original loan amount was?\n\nFeatures to investigate:\n1. **Bank-related** Bucket:\n    - BorrowerAPR\n    - ProsperScore\n    - OpenCreditLines\n    - EstimatedLoss \/ EstimatedReturn\n    - LoanOriginalAmount\n    - Term\n2. **Financial** Bucket:\n    - EmploymentStatus\n    - EmploymentStatusDuration\n    - ListingCategory\n    - IncomeRange\n    - IncomeVerifiable","306eea3f":"- We close bivariate analysis by:\n    1. Heatmap plot between our numerical features","4babc8ab":"## Summary\n\nBy Exploring our numerical variables selected above, we notice the following:\n- Further invesigation needs to be done on **BorrowerAPR**\n- Transformation of **EmploymentStatusDuration** is needed to understand distribution, log-scale would be helpful\n- Taking a deeper look into **LoanOriginalAmount** is advised\n- Plotting **EstimatedLoss** & **EstimatedReturn** without the outliers and under the same range is needed","dc11b1a6":"# Prosper Loan Dataset Exploration\n## by Katherine Kher\n\n## Preliminary Wrangling\n\n- Check Nulls and handle them\n- After data cleaning, will determine the features based on their correlation","4c2af392":"- Next is plotting BorrowerAPR against Term","cd41cde6":"- By plotting count of ListingCategory, we see most of our dataset falls in the bucket of (Debt Consolidation, Home Improvement, Not Avail, Business and Other)\n- By plotting count of IncomeVerifiable, we see most of our Income data is verifiable","357506b8":"- We close bivariate analysis by:\n    2. PairGrid plot between our numerical features","046b854e":"## Summary\n\nBy Exploring our categorical variables selected above, we notice the following:\n- **LoanStatus** mainly is either: Completed, Current, Chargedoff, Defaulted\n- Almost 90% of our data is for **IncomeVerifiable** customers\n- Most of the loans are for ppl whose **IncomeRange** is between 25K-75K dollars\n- Most of the loans are given to ppl with **EmploymentStatus** of employed or full-time\n- And almost 70% of loans are **ListingCategory** of Debt conslidation ","8caae9c9":"## Multivariate Exploration - Cont'd\n\nIn this section, Explore APR across the years\n- Then we plot APR across the year per EstimatedReturn .. then split it by LoanStatus","2e8e55ad":"## Univariate Exploration - Cont'd\n\nWe shall continue by exploring  each variable individually, but now we will plot numerical features","77b3932b":"## Multivariate Exploration - Cont'd\n\nIn this section, Explore APR across the years\n- Then we plot APR across the year per OpenCreditLines .. then split it by LoanStatus","69fef46f":"## Multivariate Exploration\n\nIn this section, investigate relationships between 3 of the variables.\n- We start with investigating the relationship between BorrowerAPR & EstimatedLoss across IncomeVerifiable & EmploymentStatus","fccfac98":"## Multivariate Exploration - Cont'd\n\nIn this section, Explore APR across the years\n- Then we plot APR across the year per EstimatedLoss .. then split it by LoanStatus","bb106703":"- Next is plotting BorrowerAPR against ProsperScore","287329d6":"## Multivariate Exploration - Cont'd\n\nIn this section, investigate relationships between 3 of the variables.\n- Next plot the relationship between ListingCategory & LoanOriginalAmount across LoanStatus","c283cecf":"- Next is plotting BorrowerAPR against LoanOriginalAmount","3d91a48c":"## Multivariate Exploration - Cont'd\n\nIn this section, Explore APR across the years\n- Then we plot APR across the year per ListingCategory .. then split it by LoanStatus","f70ec8b6":"## Multivariate Exploration - Cont'd\n\nIn this section, investigate relationships between 3 of the variables.\n- Next plot the relationship between BorrowerAPR & EstimatedReturn across IncomeVerifiable & EmploymentStatus","c2def4fb":"### What is the structure of your dataset?\n\nThis data set contains 113,937 loans with 81 variables on each loan, including loan amount, borrower rate (or interest rate), current loan status, borrower income, and many others.\n\nDetailed description of this dataset can be found [here](https:\/\/docs.google.com\/spreadsheets\/d\/1gDyi_L4UvIrLTEC6Wri5nbaMmkGmLQBk-Yx3z0XDEtI\/edit#gid=0)\n\n### What is\/are the main feature(s) of interest in your dataset?\n\nThere are lots of features that can be considered to be main, as per correlation result above, however those features can be categorized into 2 main buckets; financial capabilities & bank-related history","5ab481d1":"## Bivariate Exploration - Cont'd\nIn this section, investigate relationships between pairs of variables.\n\n- Second approach, explore BorrowerAPR Vs. remaining features\n    - First plot against categorical vairables (EmploymentStatus\/IncomeVerifiable, IncomeRange\/IncomeVerifiable, ListingCategory)","45a69af5":"## Bivariate Exploration\n\nIn this section, investigate relationships between pairs of variables.\n\n- First approach, explore LoanStatus Vs. remaining features.\n    - In this section we focus on our top 5 LoanStatuses; Completed, Current, Defaulted, Chargedoff , Past Due (1-15 days)\n    - We scatter plot to see how other **numerical** variables are distributed across those Statuses","4dd4cf9f":"## Multivariate Exploration - Cont'd\n\nIn this section, investigate relationships between 3 of the variables.\n- Finally plot the relationship between IncomeRange & BorrowerAPR across EmploymentStatus","414e414b":"- Next is plotting BorrowerAPR against EstimatedLoss","822ead98":"- In Order to select the features to be used in our investigation, I'll check correlation between numerical variables (int64 or float64) and select features with correlation > 0.5 for successful loans.\n- In addition to exploring the answer to the following questions:\n    1. What factors affect a loan\u2019s outcome status?\n    2. What affects the borrower\u2019s APR or interest rate?\n    3. Are there differences between loans depending on how large the original loan amount was?"}}