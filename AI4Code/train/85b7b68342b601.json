{"cell_type":{"48dc8618":"code","b3b101f3":"code","fa6a9430":"code","3f53bfce":"code","cb2d0417":"code","8b82be56":"code","e50dc30a":"code","d9067cad":"code","1d2e54ca":"code","4f43dc7a":"code","f0f57d69":"code","213ff161":"code","bff387a3":"code","dea8daff":"code","cdd48c1c":"code","c791922f":"code","5e90a543":"code","31df5638":"code","c2e9dfe0":"code","87d7708e":"code","9535507d":"code","f1a201b2":"code","9e98a42d":"code","6420e34c":"code","bbf5b294":"code","7fa06719":"code","afc7badc":"code","0ebc6976":"code","47394e34":"code","97056b51":"code","d40682bb":"code","bf433881":"code","e4fc2795":"code","3a5a6f87":"code","085c3601":"code","b73d8b61":"code","56cbdf9e":"code","a6744839":"code","0b2d4256":"code","36c083b2":"code","854ef310":"code","0d957ebc":"code","50cfd1f9":"code","ebecda9c":"code","d5fca142":"code","4722d7a4":"code","c0d54a4b":"code","c248c133":"code","79ee0e47":"code","1a3a0b0d":"code","b55951b1":"code","8ed1b2cd":"code","781a8d54":"code","5d46fe48":"code","9ea987e4":"code","8183b37f":"code","a89f8c7b":"markdown","a657a479":"markdown","11d8ea1b":"markdown","354b1cd4":"markdown","f639efdb":"markdown","4bd9c5b5":"markdown","a9e1946e":"markdown","384c7248":"markdown","35628831":"markdown","4a5bb62f":"markdown","b8770ebb":"markdown","ff6ced0c":"markdown","ac5e1ec6":"markdown","2625f255":"markdown","c1020bfd":"markdown","c1dce190":"markdown","e7315945":"markdown","540d3ba4":"markdown","4d09aec2":"markdown","3c2ba50b":"markdown","9ab78fc7":"markdown","5e92c0e2":"markdown","2039c637":"markdown"},"source":{"48dc8618":"! pip install pydotplus","b3b101f3":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n        \nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import LinearSVC\nfrom sklearn.metrics import f1_score\nfrom sklearn.model_selection import train_test_split\nimport seaborn","fa6a9430":"train = pd.read_csv('\/kaggle\/input\/2021-homework1-multiclass-classification\/train.csv', sep=';')\ntest = pd.read_csv('\/kaggle\/input\/2021-homework1-multiclass-classification\/test.csv', sep=';')\nsubmission = pd.read_csv('\/kaggle\/input\/2021-homework1-multiclass-classification\/sample_submission.csv')","3f53bfce":"'train: ', train.shape, 'test: ', test.shape","cb2d0417":"submission.head()","8b82be56":"train.columns","e50dc30a":"train['features'] = train['features'].str.replace('[\\'\\[\\]]', '').str.split(', ')","d9067cad":"train['features_cnt'] = train['features'].apply(len)","1d2e54ca":"train['photos'] = train['photos'].str.replace('[\\'\\[\\]]', '').str.split(', ')","4f43dc7a":"train['photos_cnt'] = train['photos'].apply(len)","f0f57d69":"target = 'interest_level'","213ff161":"train.columns","bff387a3":"features = ['bathrooms', 'bedrooms', 'latitude' , 'longitude', 'features_cnt', 'photos_cnt', 'price']","dea8daff":"train.head()","cdd48c1c":"train.interest_level.value_counts()","c791922f":"train.interest_level.value_counts(normalize=True)","5e90a543":"train.describe()","31df5638":"test.describe()","c2e9dfe0":"import seaborn","87d7708e":"train['price'].mean()","9535507d":"from sklearn.model_selection import train_test_split, StratifiedKFold, RandomizedSearchCV\nfrom sklearn.preprocessing import StandardScaler, Normalizer\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.gaussian_process import GaussianProcessClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score, f1_score, average_precision_score, roc_auc_score, classification_report, precision_score, recall_score\nimport joblib","f1a201b2":"train[features].head()","9e98a42d":"mapper={\n        'low':0,\n        'medium':1,\n        'high':2\n       }","6420e34c":"train['interest_level'] = train['interest_level'].apply(lambda x: mapper[x])","bbf5b294":"train['interest_level'].value_counts(normalize=True)","7fa06719":"features","afc7badc":"scaler = StandardScaler()\nscaled_train = scaler.fit_transform(train[features])","0ebc6976":"len(features)","47394e34":"pd.DataFrame(scaled_train).describe()","97056b51":"X_train, X_test, y_train, y_test = train_test_split(scaled_train, train[target],\n                                                    test_size=0.3, random_state=42)","d40682bb":"X_train.shape, X_test.shape, y_train.shape, y_test.shape","bf433881":"lg = LogisticRegression(random_state = 42)\nlg.fit(X_train, y_train)\npredicts = lg.predict(X_test)\npredicts_proba = lg.predict_proba(X_test)","e4fc2795":"accuracy_score(y_test, predicts)","3a5a6f87":"f1_score(y_test, predicts, average='macro')","085c3601":"print(classification_report(y_test, predicts))","b73d8b61":"scv = LinearSVC(random_state = 42)\nscv.fit(X_train, y_train)\npredicts = scv.predict(X_test)","56cbdf9e":"print(classification_report(y_test, predicts))","a6744839":"knn = KNeighborsClassifier(n_neighbors=3)\nknn.fit(X_train, y_train)\npredicts = knn.predict(X_test)","0b2d4256":"print(classification_report(y_test, predicts))","36c083b2":"dt = DecisionTreeClassifier(random_state=42, class_weight='balanced')\ndt.fit(X_train, y_train)\npredicts = dt.predict(X_test)","854ef310":"print(classification_report(y_test, predicts))","0d957ebc":"X_train, X_test, y_train, y_test = train_test_split(train[features], train[target],\n                                                    test_size=0.3, random_state=42)","50cfd1f9":"dt = DecisionTreeClassifier(max_depth=3, random_state=42)\ndt.fit(X_train, y_train)\npredicts = dt.predict(X_test)","ebecda9c":"print(classification_report(y_test, predicts))","d5fca142":"from ipywidgets import Image\nfrom io import StringIO\nimport pydotplus\nfrom sklearn.tree import export_graphviz\n\ndot_data = StringIO()\nexport_graphviz(dt, feature_names=features, \n                out_file=dot_data, filled=True)\n\ngraph = pydotplus.graph_from_dot_data(dot_data.getvalue())  \nImage(value=graph.create_png())","4722d7a4":"from ipywidgets import Image\nfrom io import StringIO\nimport pydotplus\nfrom sklearn.tree import export_graphviz\n\ndot_data = StringIO()\nexport_graphviz(dt, feature_names=features, \n                out_file=dot_data, filled=True)\n\ngraph = pydotplus.graph_from_dot_data(dot_data.getvalue())  \nImage(value=graph.create_png())","c0d54a4b":"rf = RandomForestClassifier(n_estimators = 100, random_state=42)\nrf.fit(X_train, y_train)\npredicts = rf.predict(X_test)","c248c133":"print(classification_report(y_test, predicts))","79ee0e47":"xgb = XGBClassifier(seed=42)\nxgb.fit(X_train, y_train)\npredicts = xgb.predict(X_test)","1a3a0b0d":"print(classification_report(y_test, predicts))","b55951b1":"skf = StratifiedKFold(n_splits=3, shuffle=True, random_state=42)\nparams = {\n    'max_depth': [3, 4, None, 5],\n    \"min_samples_leaf\": list(range(1, 5))\n}\n\nrf = RandomForestClassifier(n_estimators=100, random_state=42, \n                             n_jobs=-1, oob_score=True)\n\ndt_random_search = RandomizedSearchCV(rf, params, n_jobs=-1, cv=skf, verbose=1)\ndt_random_search.fit(X_train, y_train)\n\nprint(dt_random_search.best_estimator_)\nprint(dt_random_search.best_params_)","8ed1b2cd":"rf = dt_random_search.best_estimator_\nrf.fit(train[features], train[target])","781a8d54":"test['features']=test['features'].str.replace('[\\[\\]\\']', '').str.split(', ')\ntest['features_cnt']=test['features'].apply(len)\ntest['photos']=test['photos'].str.replace('[\\[\\]\\']', '').str.split(', ')\ntest['photos_cnt']=test['photos'].apply(len)","5d46fe48":"test[target]=dt.predict(test[features])","9ea987e4":"test[target].value_counts()","8183b37f":"test[['listing_id', target]].to_csv('sub_baseline.csv', index=None)","a89f8c7b":"## \u0418\u0442\u043e\u0433\u043e\u0432\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0438 \u0441\u0430\u0431\u043c\u0438\u0442 \n\n\u0414\u0430\u043b\u0435\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432\u0430\u0448\u0435 \u0438\u0442\u043e\u0433\u043e\u0432\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435, \u0441 \u043b\u0443\u0447\u0448\u0435\u0439 \u043c\u0435\u0442\u0440\u0438\u043a\u043e\u0439 \u043d\u0430 \u043b\u0438\u0434\u0435\u0440\u0431\u043e\u0440\u0434\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u0430\u043c \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0434\u043e\u0431\u0438\u0442\u0441\u044f. \u041c\u043e\u0436\u0435\u0442\u0435 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0434\u0432\u0430 \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0430 \u0435\u0441\u043b\u0438 \u0442\u0430\u043a \u0443\u0434\u043e\u0431\u043d\u0435\u0435.\n\n\u0412\u044b\u0448\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043d\u0435 \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u044e\u0442 \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0430 \u043b\u0438\u0434\u0435\u0440\u0431\u043e\u0440\u0434\u0435, \u0434\u043b\u044f \u043d\u0435\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u044d\u043a\u0441\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e ;) \n\n**! \u0412\u0410\u0416\u041d\u041e: \u0432\u0430\u0448 \u0438\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u0432\u044b\u0448\u0435 baseline.**","a657a479":"# DecisionTreeClassifier","11d8ea1b":"# Linear SVC","354b1cd4":"## 2. \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432\n\n\u0414\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0440\u0430\u0437\u0431\u0435\u0439\u0442\u0435 \u0440\u0430\u0437\u043c\u0435\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 train \u0438 test \u0438 \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u043d\u044b\u0445 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0432 \u0446\u0438\u043a\u043b\u0435 \u0441 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435\u043c \u043c\u0435\u0442\u0440\u0438\u043a\u0438 f1_score('macro')\n\n\u041c\u0435\u0442\u0440\u0438\u043a\u0443 \u043d\u0430 \u0442\u0435\u0441\u0442\u0435 \u043f\u043e \u0440\u0430\u0437\u043d\u044b\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430\u043c \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0439\u0442\u0435 \u0432 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c \u0438\u043b\u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0435","f639efdb":"\u041f\u0440\u0438 \u0442\u0430\u043a\u043e\u0439 \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0447\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043e\u0434\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430, \u0442\u0435\u043c \u0446\u0432\u0435\u0442 \u0432\u0435\u0440\u0448\u0438\u043d\u044b \u0431\u043b\u0438\u0436\u0435 \u043a \u0442\u0435\u043c\u043d\u043e-\u043e\u0440\u0430\u043d\u0436\u0435\u0432\u043e\u043c\u0443 \u0438, \u043d\u0430\u043e\u0431\u043e\u0440\u043e\u0442, \u0447\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430, \u0442\u0435\u043c \u0431\u043b\u0438\u0436\u0435 \u0446\u0432\u0435\u0442 \u043a \u0442\u0435\u043c\u043d\u043e-\u0444\u0438\u043e\u043b\u0435\u0442\u043e\u0432\u043e\u043c\u0443(\u043f\u0440\u0438 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0439 \u0442\u0435\u043c\u043d\u043e-\u0441\u0438\u043d\u0435\u043c\u0443). \u0415\u0441\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043e\u0434\u043d\u043e\u0433\u043e \u043a\u0430\u0441\u0441\u0430 \u043f\u043e\u0440\u043e\u0432\u043d\u0443, \u0442\u043e \u043a\u043e\u0440\u043d\u0435\u0432\u0430\u044f \u0432\u0435\u0440\u0448\u0438\u043d\u0430 \u0434\u0435\u0440\u0435\u0432\u0430 \u2013 \u0431\u0435\u043b\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430. \u0417\u0435\u043b\u0435\u043d\u0430\u044f - \u0431\u043e\u043b\u044c\u0448\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 3 \u043a\u043b\u0430\u0441\u0441\u0430.","4bd9c5b5":"# KNeighborsClassifier","a9e1946e":"\u0412\u0438\u0434\u0438\u043c \u0447\u0442\u043e 2(high) \u043a\u043b\u0430\u0441\u0441 \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f.","384c7248":"# \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445","35628831":"# XGBClassifier","4a5bb62f":"# \u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 \u043f\u043e \u0431\u0430\u0437\u043e\u0432\u043e\u043c\u0443 ML","b8770ebb":" <img src='https:\/\/i.gifer.com\/Xbb1.gif'><br>","ff6ced0c":"## 3. \u041f\u043e\u0434\u0431\u043e\u0440 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432\n\n\u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u0434\u0431\u0435\u0440\u0438\u0442\u0435 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u0434\u043b\u044f 3 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432 \u0438\u0437 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0432\u044b\u0448\u0435. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 Grid Search \u0438\u043b\u0438 Random Search, \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0439\u0442\u0435 f1_score\n\n\u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0442\u044c \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u043d\u0430 \u0444\u043e\u043b\u0434\u044b, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e StratifiedShuffleSplit.","ac5e1ec6":"\u0412 \u043f\u043b\u0430\u043d\u0435 \u043f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438\\\u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0434\u0435\u043b\u0430\u0435\u043c \u0432\u0441\u0435 \u0442\u043e\u0436\u0435 \u0441\u0430\u043c\u043e\u0435. \u041f\u043e\u0442\u043e\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.","2625f255":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0432 **csv \u0444\u0430\u0439\u043b \u0441 \u0434\u0432\u0443\u043c\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c\u0438**: \n\nlisting_id - \u0431\u0435\u0440\u0435\u0442\u0435 \u0438\u0437 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430\n\ninterest_level - \u043f\u0440\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \u0441\u0432\u043e\u0438\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u043c\n\n\u0420\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c **\u0437\u0430\u043f\u044f\u0442\u0430\u044f**, \u043f\u0440\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e result.to_csv() - \u043d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c index=None.","c1020bfd":"<img src='https:\/\/i0.wp.com\/media4.giphy.com\/media\/AlBHDuku3H7fG\/giphy.gif'><br>","c1dce190":"# LogisticRegression","e7315945":"## \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 submission","540d3ba4":"## \u0410\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445\n## 1. \u041f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\n\n\u0414\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043f\u0440\u0438\u0434\u0443\u043c\u0430\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u0445, \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u043c\u0438 \u043f\u043e\u043b\u044f\u043c\u0438 \u0432\u0430\u043c \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0433\u043e\u0434\u0438\u0442\u0441\u044f LabelEncoder\/OneHotEncoder, re.sub(),re.findall() ","4d09aec2":"## Baseline","3c2ba50b":"\u041c\u043e\u0436\u043d\u043e \u043f\u043e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u0432\u044b\u0431\u0440\u043e\u0441\u044b","9ab78fc7":"# RandomForestClassifier","5e92c0e2":"<img src='https:\/\/github.com\/ZombieCait\/junior-program\/raw\/2707837bfc42f572e899450bc1a12a3e76a7763a\/gifs\/ml_map.png'><br>","2039c637":"\u041d\u0438\u0436\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0438\u043c\u0435\u044e\u0449\u0438\u0435\u0441\u044f \u0443 \u043d\u0430\u0441 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438. \u041c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0437 \u043d\u0438\u0445 \u043d\u043e\u0432\u044b\u0435. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0437\u0430 \u043a\u043e\u043c\u043d\u0430\u0442\u0443, \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 features, \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u0438 \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0430\u0434\u0440\u0435\u0441, \u0442\u0430\u043a \u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043e\u0446\u0435\u043d\u0438\u0442\u044c \"\u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0441\u0442\u044c\" \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0430, \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0438\u0432, \u0447\u0442\u043e \u0447\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u0443 \u0434\u0430\u043d\u043d\u043e\u0433\u043e manager_id - \u0442\u0435\u043c \u043e\u043d \u043a\u0440\u0443\u0447\u0435."}}