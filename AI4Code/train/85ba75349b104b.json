{"cell_type":{"831d7f7e":"code","91a9d84f":"code","6dd6a03a":"code","1cb78788":"code","abbd7270":"code","697d5715":"code","6a18c745":"code","f0b25fcc":"code","90f98768":"code","ec2a70ea":"code","f02e1077":"code","d408466a":"code","29c5036a":"code","a9efa5bd":"code","85e21d64":"code","081010d0":"code","7c2a11b2":"markdown","2576ddc8":"markdown","b89ac2f7":"markdown","8022b3d4":"markdown","dbfc86e7":"markdown","61e38661":"markdown","d5b26d9a":"markdown","64818824":"markdown"},"source":{"831d7f7e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","91a9d84f":"data=pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')\ndata","6dd6a03a":"data.info()","1cb78788":"data.columns","abbd7270":"data['Species'].unique()","697d5715":"data['Species']=data['Species'].replace({'Iris-setosa':1,'Iris-versicolor':2,'Iris-virginica':3})","6a18c745":"data","f0b25fcc":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(data[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']],data['Species'],test_size=0.3)","90f98768":"X_train","ec2a70ea":"y_train","f02e1077":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression(max_iter=120)\nmodel.fit(X_train,y_train)","d408466a":"model.predict(X_test)","29c5036a":"model.score(X_test,y_test)","a9efa5bd":"y_predicted=model.predict(X_test)\ny_predicted","85e21d64":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_predicted)\ncm","081010d0":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.heatmap(cm,annot=True)\nplt.xlabel('Predicted Value')\nplt.ylabel('Truth or Actual Value')","7c2a11b2":"# Assign Different values To Different Species","2576ddc8":" **Split Training And Testing Varibales Using Train_test_split Model Selection**","b89ac2f7":"# Identify the Iris Species Using Logistic Regression MultiClass Classification","8022b3d4":"# Confusion Matrix","dbfc86e7":"<img src= \"https:\/\/seedsnpots.com\/wp-content\/uploads\/2018\/12\/iris-professor-blaw.jpg\"  style='width: 1000px;'>","61e38661":"# Prediction ","d5b26d9a":"# Model Score","64818824":"# Apply Logistics Regression Model "}}