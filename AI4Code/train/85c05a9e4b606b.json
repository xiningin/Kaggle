{"cell_type":{"599900af":"code","ea8186da":"code","164b0780":"code","dc686d65":"code","2daa1681":"code","ce653a51":"code","d1a9012c":"code","31eea5d9":"code","191c597e":"code","00e67276":"code","c5d935dd":"code","43c1af75":"code","7fc8cf56":"code","d099d4ce":"code","8af94912":"code","5bbfd2b7":"code","707518be":"code","2d5d9b05":"code","e23cf2c0":"code","c83cb5a8":"code","31dfa758":"code","dd4ec34c":"code","0b7ad2ff":"markdown","956e8584":"markdown","7c0a6a79":"markdown","5af767ae":"markdown","3616627c":"markdown","7d38d648":"markdown","2162e095":"markdown","87a3d124":"markdown","ce1dad51":"markdown","a8d35254":"markdown","75457062":"markdown","d815f044":"markdown","15f587f1":"markdown","28880727":"markdown","03658824":"markdown","b3a37411":"markdown","b1004243":"markdown","762df1b9":"markdown","987ca399":"markdown","fe258277":"markdown","69c4ce64":"markdown"},"source":{"599900af":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ea8186da":"data = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\n\n# splitting the dataset into questions and data points\nquestions = data.iloc[0, :].T\ndata = data.iloc[1:, :]","164b0780":"# data scientists and machine learning engineers df\nds_mle = data[data.Q5.isin([\"Machine Learning Engineer\", \"Data Scientist\"])]","dc686d65":"plt.figure(figsize=(8, 6))\n\nbase_color = sns.color_palette()[0]\nax = sns.countplot(data=ds_mle, x='Q5', color=base_color)\n\nplt.xlabel('Title')\nplt.ylabel('Count')\nplt.title('Data Scientists and Machine Learning Engineers in 2020')\n\n# annotate percentages\ntitles_p = data.Q5.value_counts()*100\/len(data)  # calculate all titles percentages\nds_mle_p = titles_p[['Data Scientist', 'Machine Learning Engineer']]\nfor p, (title, title_p) in zip(ax.patches, ds_mle_p.iteritems()):\n    ax.annotate('{:.1f}%'.format(title_p), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 7), \n                   textcoords = 'offset points')\n    \n# hide the right and top spines\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)","2daa1681":"# I need to make a barplot of the experience in coding for the two occupations\n# I can't look at the absolute frequency as data scientists will always have higher ones\n# So I need to look at the relative frequencies\nplt.figure(figsize=(12, 6))\n\n# calculate the relative frequencies of experiences for each title\nds_mle_coding = ds_mle.groupby('Q5')['Q6'].apply(lambda x: x.value_counts()\/len(x)).reset_index()\n\nq6_order = ['I have never written code', '< 1 years', '1-2 years', '3-5 years', '5-10 years', '10-20 years', '20+ years']\nax = sns.barplot(data=ds_mle_coding, x='level_1', y='Q6', hue='Q5', order=q6_order, color='#319ebd')\nplt.xlabel('Coding Experience')\nplt.ylabel('Relative Frequency')\nplt.title('Relative Frequencies of Coding Experiences for Data Scientists and ML Engineers')\nplt.legend(title='Job')\n\n# hide the right and top spines\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)","ce653a51":"# cleaning ML experience values to be more similar to coding experience values\nds_mle.loc[:, 'Q15'] = ds_mle['Q15'].replace(\n    {'Under 1 year': '< 1 years', '20 or more years': '20+ years',\n     'I do not use machine learning methods': 'No experience'});","d1a9012c":"plt.figure(figsize=(12, 6))\n\n# calculate the relative frequencies of experiences for each title\nds_mle_coding = ds_mle.groupby('Q5')['Q15'].apply(lambda x: x.value_counts()\/len(x)).reset_index()\n\nq15_order = ['No experience', '< 1 years', '1-2 years', '2-3 years',\n             '3-4 years', '4-5 years', '5-10 years', '10-20 years', '20+ years']\nax = sns.barplot(data=ds_mle_coding, x='level_1', y='Q15', hue='Q5', order=q15_order, color='#319ebd')\nplt.xlabel('ML Experience')\nplt.ylabel('Relative Frequency')\nplt.title('Relative Frequencies of ML Experiences for Data Scientists and ML Engineers')\nplt.legend(title='Job')\n\n# hide the right and top spines\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\n\n","31eea5d9":"plt.figure(figsize=(12, 6))\n\n\n# calculate the relative frequencies of ages for each title\nds_mle_coding = ds_mle.groupby('Q5')['Q1'].apply(lambda x: x.value_counts()\/len(x)).reset_index()\n\nq1_order = ['18-21', '22-24', '25-29', '30-34', '35-39', '40-44', '45-49', '50-54', '55-59', '60-69', '70+']\nax = sns.barplot(data=ds_mle_coding, x='level_1', y='Q1', hue='Q5', order=q1_order, color='#319ebd')\nplt.xlabel('Age Group')\nplt.ylabel('Relative Frequency')\nplt.title('Relative Frequencies of Age Groups for Data Scientists and ML Engineers')\nplt.legend(title='Job')\n\n# hide the right and top spines\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)","191c597e":"q4_order = ['No formal education past high school', 'Some college\/university study without earning a bachelor\u2019s degree',\n            'Bachelor\u2019s degree', 'Professional degree', 'Master\u2019s degree', 'Doctoral degree', 'I prefer not to answer']\n\nplt.figure(figsize=(18, 4))\n\n\n# calculate the relative frequencies of ages for each title\nds_mle_coding = ds_mle.groupby('Q5')['Q4'].apply(lambda x: x.value_counts()\/len(x)).reset_index()\n\nax = sns.barplot(data=ds_mle_coding, x='level_1', y='Q4', hue='Q5', order=q4_order, color='#319ebd')\nplt.xlabel('Education')\nplt.ylabel('Relative Frequency')\nplt.title('Relative Frequencies of Education for Data Scientists and ML Engineers')\nplt.legend(title='Job')\nplt.xticks(rotation=90)\n\n# hide the right and top spines\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)","00e67276":"q7 = [f'Q7_Part_{i+1}' for i in range(12)]  # question 7 parts\n\n# calculating the number of languages used on regular basis\ndef get_languages(row):\n    if row.dropna().empty:\n        return \"Doesn't code\"\n    else:\n        return ', '.join(row.dropna())\nds_mle.loc[:, 'languages_used_count'] = (~ds_mle[q7].isna()).sum(axis=1)  \nds_mle.loc[:, 'languages_used'] = ds_mle[q7].apply(get_languages, axis=1)\n\nplt.figure(figsize=(18, 6))\n\n\n# calculate the relative frequencies of languages for each title\nds_mle_coding = ds_mle.groupby('Q5')['languages_used_count'].apply(lambda x: x.value_counts()\/len(x)).reset_index()\n\nlang_order = list(range(11))\nax = sns.barplot(data=ds_mle_coding, x='level_1', y='languages_used_count', hue='Q5', order=lang_order, color='#319ebd')\nplt.xlabel('Number of Languages')\nplt.ylabel('Relative Frequency')\nplt.title('Relative Frequencies of Regularly Used Languages Count for Data Scientists and ML Engineers')\nplt.legend(title='Job', loc='right')\nplt.xticks(rotation=90)\n\n# hide the right and top spines\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)","c5d935dd":"fig, axes = plt.subplots(1, 2, figsize=(18, 5), sharey=False)\n\n(ds_mle.query('Q5 == \"Data Scientist\"').languages_used.value_counts()\/len(ds_mle.query('Q5 == \"Data Scientist\"')))[:20].plot(kind='bar', ax=axes[0])\n(ds_mle.query('Q5 == \"Machine Learning Engineer\"').languages_used.value_counts()[:20]\/len(ds_mle.query('Q5 == \"Machine Learning Engineer\"'))).plot(kind='bar', ax=axes[1])\n\naxes[0].set_title('Most Regularly Used Language Combinations for Data Scientists')\naxes[1].set_title('Most Regularly Used Language Combinations for ML Engineers')\n\n# hide the right and top spines\nfor ax in axes:\n    ax.spines['right'].set_visible(False)\n    ax.spines['top'].set_visible(False)\n    \n\n","43c1af75":"def get_lang_freq(group, relative=True):\n    \"\"\"Calculates each language absolute or relative frequency from multiple selections of question 7.\"\"\"\n    group_lang_freq = pd.melt(group.reset_index(), id_vars='index', value_vars=q7).value.value_counts().astype(int)\n    if relative:\n        group_lang_freq = group_lang_freq\/group_lang_freq.sum()\n    return group_lang_freq\n\nds_mle_lang_freq = ds_mle.groupby('Q5').apply(get_lang_freq).reset_index()\n\nplt.figure(figsize=(18, 5))\nax = sns.barplot(data=ds_mle_lang_freq, x='level_1', y='value', hue='Q5', color='#319ebd')\nplt.xlabel('Language')\nplt.ylabel('Relative Frequency')\nplt.title('Relative Frequencies of Regularly Used Languages for Data Scientists and ML Engineers')\nplt.legend(title='Job', loc='right')\n\n# hide the right and top spines\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\n","7fc8cf56":"lang_order = ds_mle_lang_freq.query('Q5 == \"Data Scientist\"').level_1.tolist()[:-1]\nq6_order = ['< 1 years', '1-2 years', '3-5 years', '5-10 years', '10-20 years', '20+ years']\nq15_order = ['No experience', '< 1 years', '1-2 years', '2-3 years', '3-4 years', '4-5 years', '5-10 years', '10-20 years', '20+ years']\n\nrelative = True\n\nds_exp_lang = ds_mle.query('Q5 == \"Data Scientist\"').groupby('Q6').apply(get_lang_freq, relative).unstack().loc[q6_order, lang_order].fillna(0)\nmle_exp_lang = ds_mle.query('Q5 == \"Machine Learning Engineer\"').groupby('Q6').apply(get_lang_freq, relative).unstack().loc[q6_order, lang_order].fillna(0)\n\nds_exp_ml = ds_mle.query('Q5 == \"Data Scientist\"').groupby('Q15').apply(get_lang_freq, relative).unstack().loc[q15_order, lang_order].fillna(0)\nmle_exp_ml = ds_mle.query('Q5 == \"Machine Learning Engineer\"').groupby('Q15').apply(get_lang_freq, relative).unstack().loc[q15_order, lang_order].fillna(0)\n\n\n# ds_exp_lang = ds_exp_lang.apply(lambda x: x\/x.sum(), axis=0)\n# mle_exp_lang = mle_exp_lang.apply(lambda x: x\/x.sum(), axis=0)\n\n# ds_exp_ml = ds_exp_ml.apply(lambda x: x\/x.sum(), axis=0)\n# mle_exp_ml = mle_exp_ml.apply(lambda x: x\/x.sum(), axis=0)\n\nfmt = '.2f'\n\n\n# ds_exp_lang = ds_exp_lang.astype(int)\n# mle_exp_lang = mle_exp_lang.astype(int)\n\n# ds_exp_ml = ds_exp_ml.astype(int)\n# mle_exp_ml = mle_exp_ml.astype(int)\n\n# fmt = 'd'\n\n\nfig, axes = plt.subplots(2, 2, figsize=(18, 12))\naxes = axes.reshape(-1)\n\n\n\nsns.heatmap(mle_exp_lang, cmap=\"YlGnBu\",\n            square=True, \n            linewidth=0.5, \n            cbar=False, \n            annot=True,\n            fmt=fmt,\n            ax=axes[0]\n           )\n\naxes[0].set_ylabel('Coding Experience')\naxes[0].set_title('Languages Frequencies by Coding Experience in ML Engineers');\n\nsns.heatmap(ds_exp_lang, cmap=\"YlGnBu\",\n            square=True, \n            linewidth=0.5, \n            cbar=False, \n            annot=True,\n            fmt=fmt,\n            ax=axes[1]\n           )\n\naxes[1].set_title('Languages Frequencies by Coding Experience in Data Scientists');\n\nsns.heatmap(mle_exp_ml, cmap=\"YlGnBu\",\n            square=True, \n            linewidth=0.5, \n            cbar=False, \n            annot=True,\n            fmt=fmt,\n            ax=axes[2]\n           )\n\naxes[2].set_ylabel('ML Experience')\naxes[2].set_xlabel('Language')\naxes[2].set_title('Languages Frequencies by ML Experience in ML Engineers');\n\nsns.heatmap(ds_exp_ml, cmap=\"YlGnBu\",\n            square=True, \n            linewidth=0.5, \n            cbar=False, \n            annot=True,\n            fmt=fmt,\n            ax=axes[3]\n           )\n\naxes[3].set_xlabel('Language')\naxes[3].set_title('Languages Frequencies by ML Experience in Data Scientists');","d099d4ce":"relative = True\n\nds_edu_lang = ds_mle.query('Q5 == \"Data Scientist\"').groupby('Q4').apply(get_lang_freq, relative).unstack().loc[q4_order, lang_order].fillna(0)\nmle_edu_lang = ds_mle.query('Q5 == \"Machine Learning Engineer\"').groupby('Q4').apply(get_lang_freq, relative).unstack().loc[q4_order, lang_order].fillna(0)\n\n# ds_edu_lang = ds_edu_lang.apply(lambda x: x\/x.sum(), axis=0)\n# mle_edu_lang = mle_edu_lang.apply(lambda x: x\/x.sum(), axis=0)\n\nfmt = '.2f'\n\nfig, axes = plt.subplots(2, 1, figsize=(18, 12))\n\nsns.heatmap(mle_edu_lang, cmap=\"YlGnBu\",\n            square=True, \n            linewidth=0.5, \n            cbar=False, \n            annot=True,\n            fmt=fmt,\n            ax=axes[0]\n           )\n\naxes[0].set_ylabel('Language Experience')\naxes[0].set_title('Languages Frequencies by Education in ML Engineers');\n\nsns.heatmap(ds_edu_lang, cmap=\"YlGnBu\",\n            square=True, \n            linewidth=0.5, \n            cbar=False, \n            annot=True,\n            fmt=fmt,\n            ax=axes[1]\n           )\n\naxes[1].set_title('Languages Frequencies by Education in Data Scientists');","8af94912":"q16 = data.columns[data.columns.str.contains('Q16')]  # questions 16 multiple columns\n\ndef get_multi_question_freq(group, columns, relative=True):\n    \"\"\"Calculates a multiple selections question answers' absolute or relative frequency.\"\"\"\n    group_multi_question_freq = pd.melt(group.reset_index(), id_vars='index', value_vars=columns).value.value_counts().astype(int)\n    if relative:\n        group_multi_question_freq = group_multi_question_freq\/group_multi_question_freq.sum()\n    return group_multi_question_freq\n\nds_mle_lang_freq = ds_mle.groupby('Q5').apply(get_multi_question_freq, q16).reset_index()\n\nplt.figure(figsize=(18, 5))\nax = sns.barplot(data=ds_mle_lang_freq, x='level_1', y='value', hue='Q5', color='#319ebd')\nplt.xlabel('ML Framework')\nplt.ylabel('Relative Frequency')\nplt.title('Relative Frequencies of Regularly Machine Learning Frameworks for Data Scientists and ML Engineers')\nplt.legend(title='Title', loc='right')\n\n# hide the right and top spines\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)","5bbfd2b7":"q17 = data.columns[data.columns.str.contains('Q17')]  # questions 16 multiple columns\n\nds_mle_mla_freq = ds_mle.groupby('Q5').apply(get_multi_question_freq, q17).reset_index()\n\nplt.figure(figsize=(10, 6))\nax = sns.barplot(data=ds_mle_mla_freq, y='level_1', x='value', hue='Q5', color='#319ebd')\nplt.ylabel('ML Algorithms')\nplt.xlabel('Relative Frequency')\nplt.title('Relative Frequencies of Regularly Machine Learning Algorithms for Data Scientists and ML Engineers')\nplt.legend(title='Title', loc='right')\n\n# hide the right and top spines\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\n# plt.xticks(rotation=90);","707518be":"q23 = data.columns[data.columns.str.contains('Q23')]\n\nds_mle_act_freq = ds_mle.groupby('Q5').apply(get_multi_question_freq, q23).reset_index()\n\nplt.figure(figsize=(10, 6))\nax = sns.barplot(data=ds_mle_act_freq, y='level_1', x='value', hue='Q5', color='#319ebd')\nplt.ylabel('Activities')\nplt.xlabel('Relative Frequency')\nplt.title('Relative Frequencies of Regularly Activities for Data Scientists and ML Engineers')\nplt.legend(title='Title', loc='right')\n\n# hide the right and top spines\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)\n# plt.xticks(rotation=90);","2d5d9b05":"sex = ['Man', 'Woman']\nds_mle_sex = ds_mle.groupby('Q5')['Q2'].apply(lambda x: x.value_counts()[sex]\/x.value_counts()[sex].sum()).reset_index()\n\nplt.figure(figsize=(10, 6))\nax = sns.barplot(data=ds_mle_sex, x='Q5', y='Q2', hue='level_1', color='#319ebd')\nplt.title('Men and Women Proportions in Data Science and ML Engineering')\nplt.legend(title='Title')\n\nfor p, c in zip(ax.patches, ds_mle_sex.sort_values('level_1')['Q2'].values):\n    ax.annotate('{:.1f}%'.format(c*100), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 7), \n                   textcoords = 'offset points')","e23cf2c0":"q37 = ds_mle.columns[ds_mle.columns.str.startswith('Q37')]\n\nds_mle_course_freq = ds_mle.groupby('Q5').apply(get_multi_question_freq, q37).reset_index()\n\nplt.figure(figsize=(10, 8))\nax = sns.barplot(data=ds_mle_course_freq, y='level_1', x='value', hue='Q5', color='#319ebd')\n\nds_values = ds_mle_course_freq.query('Q5 == \"Data Scientist\"')\nmle_values = ds_mle_course_freq.query('Q5 != \"Data Scientist\"')\n\n\n\ncourse_platforms = ds_mle_course_freq.level_1.unique()\nfor p in enumerate(ax.patches):\n    \n    \n    ax.annotate('{:.1f}%'.format(c*100), (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 7), \n                   textcoords = 'offset points')\n\nplt.ylabel('Course Platforms')\nplt.xlabel('Relative Frequency')\nplt.title('Relative Frequencies of Course Platforms for Data Scientists and ML Engineers')\nplt.legend(title='Title', loc='right')\n\n# hide the right and top spines\nax.spines['right'].set_visible(False)\nax.spines['top'].set_visible(False)","c83cb5a8":"# Chi2 test\nfrom scipy.stats import chi2_contingency\n\nq4_order = ['No formal education past high school', 'Some college\/university study without earning a bachelor\u2019s degree',\n            'Bachelor\u2019s degree', 'Professional degree', 'Master\u2019s degree', 'Doctoral degree', 'I prefer not to answer']\nq4_q8 = pd.pivot_table(data, index=['Q4'], columns=['Q8'], aggfunc='size', fill_value=0).loc[q4_order]\n\nE_q4_q8 = np.zeros(q4_q8.shape)\n\ngrandTotal = np.sum(q4_q8.values)\nrowsTotal = np.sum(q4_q8, axis=1).values\ncolsTotal = np.sum(q4_q8, axis=0).values\n\nexpected = np.outer(rowsTotal, colsTotal)\/grandTotal\n\nchi_squared = np.sum(np.square(q4_q8.values - expected)\/expected)\n\nprint(chi_squared)\n\nstatistic, prob, dof, ex = chi2_contingency(q4_q8)\n\nprint(statistic)","31dfa758":"# Chi2 distance\nnorm_q4_q8 = np.divide(q4_q8.values, rowsTotal[:, None])\n\nn_rows = q4_q8.shape[0]\nchi2_distances = np.zeros((n_rows, n_rows))\n\nnorm_colTotals = np.sum(norm_q4_q8, axis=1)\n\nfor row in range(n_rows):\n    chi2_distances[row] = np.sqrt(np.sum(np.square(norm_q4_q8 - norm_q4_q8[row])\/norm_colTotals[:, None], axis=1))\n    \npd.DataFrame(data=np.round(chi2_distances*100).astype(int), columns=q4_q8.index)","dd4ec34c":"q4_q8.shape","0b7ad2ff":"We can see that women's presence is just slightly higher in Data Scientists than in ML Engineers.","956e8584":"Machine Learning Engineers tend to do every activity more than Data Scientists, except analyzing and understanding data.","7c0a6a79":"Now that we've made some assumptions about the data, it's to inspect them. \n\nThrough the previous questions and visualization, we've come to think that Data Scientists with more experience are more compared to ML Engineers. Now how shall we prove this? Well, we first shall look in the number of languages that a typical Data Scientist and ML Engineer works with. \n\nIf the previous assumptions were correct, we ought to see a higher number of Data Scientists who are proficient in more languages at the same time. ","5af767ae":"What course platforms do DS and MLEs prefer?","3616627c":"I have to remind the reader that we are looking at the relative frequencies of the answers of each group, so these percentages don't represent actual precentage of users that use a particular language in a specific group, rather it calculate the percentage of that language presence in all answers for the multiple selection question for that group. Therefore some insights might be based on trivial numbers that got blown up in proportion.\n\nFrom the get go we can clearly see that coding veterans don't use python that much for both Data Scientists and ML Engineers.\n\nSQL usage in ML Engineers is uniformly distributed in all groups, as well as in Data Scientists.\n\nC++ usage probability is constant across groups with different coding experiences in ML Engineers, which might signify that a group of some sort opts for using C++ regardless different experiences. This doesn't apply when we look at different ML experiences, where it comprised 16% of the answers of users with no ML experience, and decreases until it stabilized at 9% over 2-5 years of ML experience.  ","7d38d648":"It's clear that the data is normally distributed even though it is binned. But what is more clear now is that the **Data Science** title has more coding veterans than the **ML Enginner** title.\n\nThe difference isn't huge, but it is persistent once we look at 3-5 years of coding experience and beyond, that the numbers tip in favor of Data Scientists, which actually challenges what I used to believe. \n\nI though that ML Engineers needed to have more experience, but it looks like the opposite. My guess for now is that the Data Scientist stack is broader than the ML Engineer one. We can take another look at the ML experience of both occupations to better understand this connundrum.","2162e095":"Let's start asking some questions.\n\n## How many data scientists and ml engineers were present in this year's survey?","87a3d124":"Aroud 50% Data Scientists use 2 or 3 languages on regularly basis, where only around 35% of ML Engineers use that number. And around 30% of ML Engineer use only 1, while the percentage in Data Scientists is around 20%.\n\nWhat are the most common languages that Data Scientists and ML Engineer use respectively?","ce1dad51":"Data Scientists make around 13.4% of the dataset, while ML Engineers are only 5.4%.\n\nThis signifies the abundance of Data Scientist jobs over ML Engineer's. But why? **Is one job more sophisticated than the other? Does one require more experience than the other?**\n\nWe can look at the experiences of the participants in terms of coding and ML to see if there is a threshold for ML Engineer jobs for examples, which makes it's opportunities more scarce than Data Scientist ones. ","a8d35254":"We can easily see that Data Scientists have a consensus on the most useful languages and they are Python, R, SQL and some Bash in the top language combinations, which could be used for command line data manipulation.\n\nWith ML Engineers it gets different. The agreement is that more than 25% of them use solely Python, but then the combinations get different with decreasing proportions. So for example, along Python, some use C, C++, Bash, SQL, MATLAB, Java, Javascript, etc.\n\nWe can take a look at the proportion of users in each profession who said that they used a particular language on regularly basis.","75457062":"As we can see here 90% Data Scientists use python, around 60% of them use SQl, and also around 40% use R. Where ML Engineers around 90% use only python, and then the proportion of users choosing other languages never exceed 30%. \n\nThis means that although a lot ML Engineers use more than 1 language, they have no consensus on the languages they use besides python. Where Data Scientists mostly resort to SQL or R, ML Engineers would go for either SQL, C, C++, Java, Javascript or MATLAB.\n\nIs the last remark with ML Engineers in anyway related to coding experience? It might be that ML Engineers who have shifted from a more software oriented job must have brought with them some of what they used. So let's look into which languages ML Engineers and Data Scientists with different experiences use regularly.\n\nSince we'll be looking into each of them separately, it might be better to using absolute frequencies to avoid any over-insights.","d815f044":"Let's further look into how langauges preferences differ between groups with different education.","15f587f1":"### Correspondence Analysis","28880727":"The conclusion is the same regarding ML experience. Data Scientists with more experience in ML methods are greater in relative frequency than their fellow ML Engineers. But is that in anyway related to their ages? ","03658824":"Now I think that is something to note down. ML Engineers tend to use Neural Networks more heavily than Data Scientists, and that should encourage all beginner Data Scientists, including myself, that our skills can still be useful even if they don't include advanced Deep Learning methods.","b3a37411":"We can still see the trend in ages, as ML Engineers have more relative proportions of population below 30, while Data scientists have more relative proportions of population above 30. I guess that the same would go with education, where Data Scientists will have higher proportions in post grad studies, while ML Engineers will have the opposite. Let's take a look to make sure.","b1004243":"# Introduction\n\nThis notebook will aim to understand the differences between Data Scientists and Machine Learning Engineers. \n\nI'm sure that for alot of beginners, including myself, we don't truly understand the difference. We read blogposts and medium articles and see the two titles getting tossed around, and all we know is that a data scientist is more concerned with data, while a machine learning engineer is more concerned with algorithms and deployment. \n\nDoes the distinct separation of the two terms hold out in real life? That's what we are going to *try* to answer here in this notebook. \n\nI hope you enjoy!","762df1b9":"How do women fare in both titles? Does one title favor women's presence over the other?","987ca399":"Now we can see a nice distinction between Data Scientists and ML Engineers, which is that ML Engineers tend to use Deep Learning frameworks more than Data Scientists, and Data Scientists tend to prefer regular ML frameworks.\n\nIf we look into their algorithms usage, I suppose that we shall see the same. Let's take a look.","fe258277":"Once again C++ proves that it's valuable for ML Engineers across different groups, also we can see that MATLAB is used by some ML Engineers with PhDs, which they might have picked up during their graduate studies.\n\nIn Data Scientists, most groups show similar answer distributions, and there is no valuable insight that hasn't been pointed out before.\n\nNow it's time to look into the differen between Data Scientists and ML Engineers when it comes to ML. First of all, which frameworks do they use?","69c4ce64":"That's it for now. I hope you enjoyed the notebook.\n\nI'd appreciate it if you leave a comment with any input or advice on how to improve my work.\n\nThanks for taking the time to look at my work :D"}}