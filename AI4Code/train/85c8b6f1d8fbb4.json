{"cell_type":{"ba976a78":"code","f459e8e9":"code","c4d72f0a":"code","9fdd56ed":"code","3aa1de0f":"code","09c747fd":"code","4412d9f7":"code","849e767a":"code","5c690c34":"code","01dc41b2":"code","341bfffb":"code","d3ef4cb1":"markdown"},"source":{"ba976a78":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom pandas import set_option\nfrom pandas.plotting import scatter_matrix,andrews_curves, parallel_coordinates\nfrom sklearn.manifold import MDS\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split, KFold, cross_val_score, GridSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, accuracy_score\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nplt.rcParams['figure.figsize'] = [10, 7]\n# Any results you write to the current directory are saved as output.","f459e8e9":"sonar_data = pd.read_csv('..\/input\/sonar-mines-vs-rocks\/sonar_all-data.csv', header=None)\n\nprint(\"   Data shape\",sonar_data.shape)\nprint(\"============================================================\")\nprint('   Class Distribution in the dataset : \\n  ' ,sonar_data.groupby(60).size())\nprint(\"============================================================\")\nprint (\"Data type of values \",sonar_data.dtypes)\nprint(\"============================================================\")","c4d72f0a":"print(\"Overview of data\")\nprint(\"============================================================\")\nsonar_data.head()","9fdd56ed":"print(\"Stastical Overview\")\nprint(\"============================================================\")\nsonar_data.describe()","3aa1de0f":"#Storing all rows in X. 1st and Last(60) coloumn in Y.\n\nX = sonar_data.iloc[:,0:60].values.astype(float)\nY = sonar_data.iloc[:,60]\n\nencoder= LabelEncoder()\nencoder.fit(Y)\nen_Y= encoder.transform(Y)\n\nprint (Y)\nprint(en_Y)\n\nprint (\"BASIC DATA PREPRATION \")\nprint(\"============================================================\")\nprint(\"X has -\\n\")\nprint(X)\nprint(\"============================================================\")\nprint(\"Y has -\\n\")\nprint(en_Y)\n\n\nsonar_data.rename(columns={sonar_data.columns[60]:'Label'}, inplace=True)\nsonar_data.Label = sonar_data.Label.astype('category')\nsonar_data.head()","09c747fd":"fig, axes = plt.subplots(2,1,figsize=(15,10))\nandrews_curves(sonar_data, 'Label', samples=207, linewidth=0.5, ax=axes[0])\naxes[0].set_xticks([])\n\nparallel_coordinates(sonar_data, 'Label', linewidth=0.5, ax=axes[1],\n                     axvlines_kwds={'linewidth': 0.5, 'color': 'black', 'alpha':0.5})\naxes[1].set_xticks([])\naxes[1].margins(0.05)\npass","4412d9f7":"\nmds = MDS(n_components=2)\nmds_data = mds.fit_transform(sonar_data.iloc[:, :-1])\nplt.scatter(mds_data[:, 0],mds_data[:, 1],c=sonar_data.Label.cat.codes, s=50);\n\n\n","849e767a":"heatmap = plt.pcolor(sonar_data.corr(), cmap='jet')\nplt.colorbar(heatmap)\npass","5c690c34":" # Unimodal Density Visualization\nsonar_data.plot(kind='density', subplots=True, sharex=False, sharey=False, layout=(10,8) ,fontsize=3)\nplt.show()","01dc41b2":"sonar_data.plot.box(figsize=(13,7), xticks=[])\npass","341bfffb":"plt.figure(figsize=(9,7))\nplt.plot(sonar_data[Y == 'R'].values[0][:-1], label='Rock', color='pink')\nplt.plot(sonar_data[Y == 'M'].values[0][:-1], label='Metal', color='skyblue', linestyle='--')\nplt.legend()\nplt.xlabel('Attribute Index')\nplt.ylabel('Attribute Values')\nplt.tight_layout()\nplt.show()","d3ef4cb1":"> EDA"}}