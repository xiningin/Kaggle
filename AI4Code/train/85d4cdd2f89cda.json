{"cell_type":{"444f518c":"code","062829ef":"code","34de5cde":"code","1d8fde60":"code","132a75b3":"code","24274f1d":"code","ebdd10d5":"code","cdd4ce02":"code","2c1148ba":"code","be01e21a":"code","acc5a83d":"code","80328326":"code","468fd945":"code","6b457106":"code","62c3efc3":"code","0ed81440":"code","a55d9999":"code","4cc036fc":"markdown","24253a28":"markdown","514af26b":"markdown","a6343de7":"markdown","c45202a8":"markdown"},"source":{"444f518c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pandas  as pd #Data manipulation\nimport numpy as np #Data manipulation\nimport matplotlib.pyplot as plt # Visualization\nimport seaborn as sns #Visualization\npd.set_option('display.max_columns', 500)\n\nfrom sklearn.model_selection import train_test_split\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","062829ef":"df = pd.read_csv('..\/input\/student-grade-prediction\/student-mat.csv')\ndf.head()","34de5cde":"df.shape","1d8fde60":"df.info()","132a75b3":"df.describe()","24274f1d":"df.columns","ebdd10d5":"plt.figure(figsize=(12,4))\nsns.heatmap(df.isnull(),cbar=False,cmap='viridis',yticklabels=False)\nplt.title('Missing value in the dataset');","cdd4ce02":"# Correlation Plot\n\ncorr = df.corr()\nsns.heatmap(corr)","2c1148ba":"from sklearn.model_selection import train_test_split\nX = df[['G1', 'G2','studytime', 'failures', 'absences']] #Independent variable \ny = df['G3'] #dependent variable \n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","be01e21a":"from sklearn.linear_model import LinearRegression \n\nlm = LinearRegression() ","acc5a83d":"lm.fit(X_train,y_train) ","80328326":"print(lm.intercept_)","468fd945":"predictions = lm.predict(X_test)  ","6b457106":"plt.scatter(y_test,predictions)","62c3efc3":"sns.distplot((y_test-predictions)); ","0ed81440":"from sklearn import metrics","a55d9999":"print('MAE:', metrics.mean_absolute_error(y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))","4cc036fc":"Checking for missing value","24253a28":"There is no missing value data","514af26b":"## Model Building ##\n\nIn this step build model using our linear regression equation  \u03b8=(XTX)\u22121XTy . In first step we need to add a feature  x0=1  to our original data set.","a6343de7":"## Train Test split ","c45202a8":"Plot"}}