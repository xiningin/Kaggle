{"cell_type":{"0039a433":"code","8ccdc540":"code","d35f2867":"code","209811e9":"code","ecb22db0":"code","dd999fec":"code","19413ee3":"code","29bd7d3e":"code","d77f3b59":"code","f5a5d376":"code","ea82aa3e":"code","26059294":"code","2439ef4d":"code","7c951d00":"code","376fe9d4":"code","4144766b":"code","eafdae00":"code","df0bdc54":"code","3cc36e32":"code","4c30dfd4":"code","49ea4f72":"code","105b052c":"code","7c95d908":"code","1af81a24":"code","7f8f3acb":"code","f96b0c7f":"code","9c38e730":"code","90ebca18":"code","d4b4f18a":"code","bc911e11":"code","0791fca1":"code","bf8bc04d":"markdown","b904b141":"markdown","e12440d2":"markdown","62a58690":"markdown","a00a000c":"markdown","b9876005":"markdown","e95f25c5":"markdown","d9046975":"markdown","77c3f407":"markdown","3e81ab9a":"markdown","d00d93f1":"markdown","8c20dec6":"markdown","7d7f809c":"markdown","e125a80b":"markdown","4fe36048":"markdown","edd4e58c":"markdown","2849f386":"markdown","2b62b07c":"markdown"},"source":{"0039a433":"import pandas as pd\nimport folium\nimport warnings\nimport seaborn as sns\nimport matplotlib.dates as md\nimport datetime\nsns.set(style='darkgrid')\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nwarnings.filterwarnings('ignore')\nimport plotly\nimport numpy as np\nimport matplotlib.dates as mdates\nimport matplotlib.ticker as ticker\nimport ipywidgets as widgets\nfrom ipywidgets import interact, interact_manual\nimport plotly.graph_objects as go\nfrom scipy.optimize import curve_fit","8ccdc540":"covid19provlast = pd.read_csv(\"..\/input\/italy-covid19\/covid19-ita-province-latest.csv\")\ncovid19provtime = pd.read_csv(\"..\/input\/italy-covid19\/covid19-ita-province.csv\")\ncovid19regionlast= pd.read_csv(\"..\/input\/italy-covid19\/covid19-ita-regions-latest.csv\")\ncovid19regiontime= pd.read_csv(\"..\/input\/italy-covid19\/covid19-ita-regions.csv\")\nds_it=pd.read_csv('..\/input\/italy-covid19\/covid-nationality.csv')\ncovid_age=pd.read_csv('..\/input\/italy-covid19\/covid-age.csv')\ncovid_disease= pd.read_csv('..\/input\/italy-covid19\/covid-disease.csv')\ncovid19provtime.rename(columns={'\u00ef\u00bb\u00bfdata': 'date'},inplace=True)","d35f2867":"covid=covid19regionlast[['region','hospitalized_with_symptoms', 'intensive_care', 'total_hospitalized',\n       'home_quarantine', 'total_confirmed_cases', 'new_confirmed_cases',\n       'recovered', 'deaths', 'total_cases', 'swabs_made']]\ncovid.sort_values(by='total_confirmed_cases',ascending=False,inplace=True)\ncovid.style.background_gradient(cmap='BuGn')","209811e9":"totale=covid.sum().reset_index()\ntotale.drop([0,3,5,9,10,6],inplace=True)\ntotale.rename(columns={'index':'Detection',0 :'Total'},inplace=True)\ntotale.style.background_gradient(cmap='Blues')","ecb22db0":"labels=totale['Detection'].values.tolist()\nsizes=totale['Total'].values.tolist()\nexplode = (0.1, 0 , 0.1, 0, 0)  \nfig, ax = plt.subplots(figsize=(10,10))\n\nax.pie(sizes, explode=explode,labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax.set_title('Cumulative Results',fontsize=20)\nplt.tight_layout()\nplt.show()","dd999fec":"covid19prov=covid19provlast[['province','lat','long','total_cases']]\ncovid19prov['total_cases_q'] = pd.qcut(covid19prov['total_cases'], 3, labels=False)\ncovid19prov.fillna(0,inplace=True)\n\ncovid_map = folium.Map(location=[42.50, 12.50], zoom_start=5)\n\ncolordict = {0: 'green', 1: 'orange', 2: 'red', 3: 'purple'}\n\nfor lat,lon,total_q,total_cases,province in zip(covid19prov['lat'], covid19prov['long'], covid19prov['total_cases_q'],covid19prov['total_cases'],covid19prov['province']):\n    folium.CircleMarker(\n        [lat, lon],\n        radius=.0030* int(total_cases),\n        popup = ('City : ' + str(province).capitalize() + '<br>'\n                 'Total cases : ' + str(int(total_cases)) + '<br>'),\n        color='b',\n        key_on = total_q,\n        threshold_scale=[0,1,2,3],\n        fill_color=colordict[total_q],\n        fill=True,\n        fill_opacity=0.47\n        ).add_to(covid_map)\ncovid_map\n","19413ee3":"italy_map = covid19provtime.groupby(['date', 'province'])['lat','long','total_cases'].max()\n\nitaly_map = italy_map.reset_index()\nitaly_map['size'] = italy_map['total_cases'].pow(0.5)\nitaly_map.head()\n\nfig = px.scatter_mapbox(italy_map, lat=\"lat\", lon=\"long\",\n                     color=\"total_cases\", size='size', hover_name=\"province\", hover_data=['total_cases'],\n                     color_continuous_scale='matter',\n                     animation_frame=\"date\", \n                     title='Spread total cases over time in Italy')\nfig.update(layout_coloraxis_showscale=True)\nfig.update_layout(mapbox_style=\"carto-positron\",\n                  mapbox_zoom=4, mapbox_center = {\"lat\": 41.8719, \"lon\": 12.5674})\nfig.update_layout(margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0})\nfig.show()","29bd7d3e":"reg=px.bar(covid19regiontime,x='region', y=\"new_confirmed_cases\", animation_frame=\"date\", \n           animation_group=\"region\", color=\"region\", hover_name=\"region\")\nreg.update_yaxes(range=[0, 2500])\nreg.update_layout(title='New Confirmed Cases')","d77f3b59":"tot=px.bar(covid19regiontime,x='region', y=\"total_cases\", animation_frame=\"date\", \n           animation_group=\"region\", color=\"region\", hover_name=\"region\")\ntot.update_yaxes(range=[0,50000])\ntot.update_layout(title='Total cases')\ntot.update_xaxes(categoryorder='total ascending')","f5a5d376":"ds_it['new_total_cases']=ds_it['total_cases']-ds_it['total_cases'].shift(1)\npx.bar(ds_it,x='date',y='new_total_cases',title='New Total Cases',color_discrete_sequence=['cornflowerblue'])","ea82aa3e":"new_confermed_total=ds_it[['date','new_confirmed_cases']]\nregioni=covid19regiontime.loc[covid19regiontime.region.isin({'Lombardia','Veneto','Piemonte',\n                                                             'Emilia-Romagna','Toscana','Marche','Liguria',\n                                                             'Lazio','Campania','Puglia','Sicilia','P.A. Trento'})]\nfor i in regioni['region'].values:\n    new_confermed_total[str(i)]= regioni.loc[regioni.region.isin({i})]['new_confirmed_cases'].values\n    new_confermed_total[str(i) + \"Percentage\"]= round(new_confermed_total[i]\/new_confermed_total['new_confirmed_cases'],2)","26059294":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=new_confermed_total['date'], y=new_confermed_total['LombardiaPercentage'],\n                    mode='lines',\n                    name='Lombardia'))\nfig.add_trace(go.Scatter(x=new_confermed_total['date'], y=new_confermed_total['Emilia-RomagnaPercentage'],\n                    mode='lines+markers',\n                    name='Emilia-Romagna'))\nfig.add_trace(go.Scatter(x=new_confermed_total['date'], y=new_confermed_total['VenetoPercentage'],\n                    mode='lines+markers',\n                    name='Veneto'))\nfig.add_trace(go.Scatter(x=new_confermed_total['date'], y=new_confermed_total['PiemontePercentage'],\n                    mode='lines+markers',\n                    name='Piemonte'))\nfig.add_trace(go.Scatter(x=new_confermed_total['date'], y=new_confermed_total['MarchePercentage'],\n                    mode='lines+markers',\n                    name='Marche'))\nfig.add_trace(go.Scatter(x=new_confermed_total['date'], y=new_confermed_total['ToscanaPercentage'],\n                    mode='lines+markers',\n                    name='Toscana'))\nfig.add_trace(go.Scatter(x=new_confermed_total['date'], y=new_confermed_total['LiguriaPercentage'],\n                    mode='lines+markers',\n                    name='Liguria'))\nfig.add_trace(go.Scatter(x=new_confermed_total['date'], y=new_confermed_total['LazioPercentage'],\n                    mode='lines+markers',\n                    name='Lazio'))\nfig.add_trace(go.Scatter(x=new_confermed_total['date'], y=new_confermed_total['CampaniaPercentage'],\n                    mode='lines+markers',\n                    name='Campania'))\nfig.update_layout(title='Region percentage of new confirmed cases')\n\nfig.show()","2439ef4d":"lombardia=covid19regiontime.loc[covid19regiontime.region.isin({'Lombardia'})]\nlombardia['new_total_cases']=lombardia['total_cases'] - lombardia['total_cases'].shift(1)\npx.bar(lombardia,x='date',y='new_total_cases',title='New total cases in Lombardia',color_discrete_sequence=['orange'])","7c951d00":"region_time_series=covid19regiontime.groupby('date')['deaths','total_cases'].sum().reset_index()\nregion_time_series['mortality_rate(%)']=round((region_time_series['deaths']\/region_time_series['total_cases']),4)\npx.line(region_time_series,x='date',y='mortality_rate(%)',title='Mortality rate(%) over time in Italy',color_discrete_sequence=['purple'])","376fe9d4":"temp = covid19regiontime.groupby('date')['recovered', 'deaths', 'total_confirmed_cases'].sum().reset_index()\ntemp = temp.melt(id_vars=\"date\", value_vars=['recovered', 'deaths', 'total_confirmed_cases'],\n                 var_name='Case', value_name='Count')\ntemp.head()\n\nfig = px.area(temp, x=\"date\", y=\"Count\", color='Case',\n             title='Cases over time', color_discrete_sequence = ['orange','blue','red'])\nfig.show()","4144766b":"sw=covid19regiontime.groupby(['date'])['new_confirmed_cases','swabs_made'].agg('sum').reset_index()\nsw['swabs_per_day']=sw['swabs_made']- sw['swabs_made'].shift(1)\nsw.drop('swabs_made',1,inplace=True)\nsw['new_infection_per_day(%)']=round(sw['new_confirmed_cases']\/sw['swabs_per_day'],2)\n\nfig = go.Figure()\nfig.add_trace(go.Bar(x=sw['date'],\n                y=sw['swabs_per_day'],\n                name='Tests Made every day',\n                marker_color='rgb(55, 83, 109)'\n                ))\nfig.add_trace(go.Bar(x=sw['date'],\n                y=sw['new_confirmed_cases'],\n                name='New Confirmed Cases',\n                marker_color='rgb(26, 118, 255)'\n                ))\n\nfig.update_layout(\n    title='Tests Made and New confirmed Cases',\n    xaxis_tickfont_size=14,\n    yaxis=dict(\n        title='Number',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    legend=dict(\n        x=0,\n        y=1.0,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    barmode='group',\n    bargap=0.15, \n    bargroupgap=0.1 \n)\nfig.show()","eafdae00":"ds_it['hospitalized_everyday']=ds_it['hospitalized_with_symptoms']- ds_it['hospitalized_with_symptoms'].shift(1)\nds_it['intensive_care_everyday']= ds_it['intensive_care'] - ds_it['intensive_care'].shift(1)","df0bdc54":"fig = go.Figure()\nfig.add_trace(go.Bar(x=ds_it['date'],\n                y=ds_it['hospitalized_everyday'],\n                name='Hospitalized with symptoms',\n                marker_color='purple'\n                ))\nfig.add_trace(go.Bar(x=ds_it['date'],\n                y=ds_it['intensive_care_everyday'],\n                name='Intensive care',\n                marker_color='orange'\n                ))\nfig.update_layout(title='Patients hospitalized and in intensive care every day')","3cc36e32":"covid_age.drop('Unnamed: 0',1,inplace=True)\ncovid_age['femal_mortality_rate']=round(covid_age['female_deaths']\/covid_age['female_cases'],2)*100\ncovid_age['male_mortality_rate']=round(covid_age['male_deaths']\/covid_age['male_cases'],2)*100\ncovid_age['mortality_rate']=round(covid_age['total_deaths']\/covid_age['total_cases'],2)*100","4c30dfd4":"fig,ax =plt.subplots(ncols=2,figsize=(20,7),dpi=100)\nsns.barplot(x='age_classes',y='total_deaths',ax=ax[0],label='Female',data=covid_age,color='coral')\nsns.barplot(x='age_classes',y='male_deaths',ax=ax[0],label='Male',data=covid_age,color='dodgerblue')\nax[0].legend()\nax[0].set_xlabel('Age Classes')\nax[0].set_title('Distribution of Deaths by age',fontsize=18)\nax[0].set_ylabel('Deaths')\nsns.barplot(x='age_classes',y='total_cases',ax=ax[1],label='Female',data=covid_age,color='coral')\nsns.barplot(x='age_classes',y='male_cases',ax=ax[1],label='Male',data=covid_age,color='dodgerblue')\nax[1].legend()\nax[1].set_xlabel('Age Classes')\nax[1].set_title('Distribution of Total Cases by age',fontsize=18)\nax[1].set_ylabel('Total Cases')\nplt.show()","49ea4f72":"fig = go.Figure()\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['mortality_rate'],\n                name='Lethality for Age Classes',\n                marker_color='black'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['femal_mortality_rate'],\n                name='Lethality for Female',\n                marker_color='coral'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['male_mortality_rate'],\n                name='Lethality for Male',\n                marker_color='dodgerblue'\n                ))\nfig.update_layout(title='Lethality Rate (%)')\nfig.update_yaxes(title='Lethality Rate (%)')\nfig.update_xaxes(title='Age Classes')","105b052c":"fig = go.Figure()\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['lombardia_cases'],\n                name='Lombardia',\n                marker_color='blue'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['emilia-romagna_cases'],\n                name='Emilia-Romagna',\n                marker_color='red'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['veneto_cases'],\n                name='Veneto',\n                marker_color='green'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['piemonte_cases'],\n                name='Piemonte',\n                marker_color='black'\n                ))\n\nfig.update_layout(barmode='stack', xaxis={'categoryorder':'category ascending'},title='Most affected Regions')\nfig.show()","7c95d908":"fig = go.Figure()\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['valleaosta_cases'],\n                name='Valle Aosta',\n                marker_color='blue'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['friuli-veneziagiulia_cases'],\n                name='Friuli-Venezia Giulia',\n                marker_color='red'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['liguria_cases'],\n                name='Liguria',\n                marker_color='green'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['trento_cases'],\n                name='Provincia Autonoma di Trento',\n                marker_color='black'\n                ))\n\nfig.update_layout(barmode='stack', xaxis={'categoryorder':'category ascending'},title='Northern Regions')\nfig.show()","1af81a24":"fig = go.Figure()\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['toscana_cases'],\n                name='Toscana',\n                marker_color='blue'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['umbria_cases'],\n                name='Umbria',\n                marker_color='red'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['marche_cases'],\n                name='Marche',\n                marker_color='green'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['lazio_cases'],\n                name='Lazio',\n                marker_color='black'\n                ))\n\nfig.update_layout(barmode='stack', xaxis={'categoryorder':'category ascending'},title='Central Regions')\nfig.show()","7f8f3acb":"fig = go.Figure()\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['abruzzo_cases'],\n                name='Abruzzo',\n                marker_color='blue'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['molise_cases'],\n                name='Molise',\n                marker_color='red'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['campania_cases'],\n                name='Campania',\n                marker_color='green'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['puglia_cases'],\n                name='Puglia',\n                marker_color='black'\n                ))\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['sicilia_cases'],\n                name='Sicilia',\n                marker_color='yellow'\n                ))\n\nfig.add_trace(go.Bar(x=covid_age['age_classes'],\n                y=covid_age['sardegna_cases'],\n                name='Sardegna',\n                marker_color='purple'\n                ))\n\n\nfig.update_layout(barmode='stack', xaxis={'categoryorder':'category ascending'},title='South Regions')\nfig.show()","f96b0c7f":"covid_dis=covid_disease.loc[0:10,]\nfig = go.Figure()\nfig.add_trace(go.Bar(y=covid_dis['Total'],\n                x=covid_dis['Disease'],\n                name='Total',\n                marker_color='black'\n                ))\nfig.add_trace(go.Bar(y=covid_dis['Men'],\n                x=covid_dis['Disease'],\n                name='Men',\n                marker_color='dodgerblue'\n                ))\nfig.add_trace(go.Bar(y=covid_dis['Women'],\n                x=covid_dis['Disease'],\n                name='Women',\n                marker_color='coral'\n                ))\nfig.update_layout(barmode='stack', xaxis={'categoryorder':'category ascending'},title='Most common pre-existing chronic pathologies in patients who died')\nfig.show()","9c38e730":"covid_com=covid_disease.loc[11:,]\nfig = go.Figure()\nfig.add_trace(go.Bar(y=covid_com['Total'],\n                x=covid_com['Disease'],\n                name='Total',\n                marker_color='black'\n                ))\nfig.add_trace(go.Bar(y=covid_com['Men'],\n                x=covid_com['Disease'],\n                name='Men',\n                marker_color='dodgerblue'\n                ))\nfig.add_trace(go.Bar(y=covid_com['Women'],\n                x=covid_com['Disease'],\n                name='Women',\n                marker_color='coral'\n                ))\nfig.update_layout(barmode='stack', xaxis={'categoryorder':'category ascending'},title='Number of Comorbidities observed in positive deceased patients')\nfig.show()","90ebca18":"print('Patients died with 0 pre-existing patologies: ' + str(round(covid_com.iloc[0,4]\/covid_com['Total'].sum(),4)*100)+ ' %')\nprint('Patients died with 1 pre-existing patologies: ' + str(round(covid_com.iloc[1,4]\/covid_com['Total'].sum(),4)*100)+ ' %')\nprint('Patients died with 2 pre-existing patologies: ' + str(round(covid_com.iloc[2,4]\/covid_com['Total'].sum(),4)*100)+ ' %')\nprint('Patients died with 3 and over pre-existing patologies: ' + str(round(covid_com.iloc[3,4]\/covid_com['Total'].sum(),4)*100)+ ' %')","d4b4f18a":"# Shifts\nds_it['total_cases-1'] = ds_it.shift(periods=1, fill_value=0)['total_cases']\n# Deltas\nds_it['total_cases_DELTA1'] = ds_it['total_cases'] - ds_it['total_cases-1']\n# Shift of Deltas\nds_it['total_cases_DELTA1-1'] = ds_it.shift(periods=1)['total_cases_DELTA1']\n\ntry:\n    ds_it['growth_factor_cum_infected'] = ds_it['total_cases_DELTA1'] \/ ds_it['total_cases_DELTA1-1']\nexcept ZeroDivisionError:\n    ds_it['growth_factor_cum_infected'] = 0","bc911e11":"ds_it['date']=pd.to_datetime(ds_it['date'])\nds_it['date']=ds_it['date'].dt.date\nds_it.set_index('date',inplace=True)","0791fca1":"ax = ds_it.plot(y='growth_factor_cum_infected',label='Growth Factor',figsize=(20,8),marker='o')\nplt.axhline(y=1, color='red', linewidth=1, zorder=1, alpha=1, label='Inflection Point')\nplt.axhline(y=0, color='green', linewidth=2, zorder=0, alpha=1, label='End of Epidemic')\nax.axvspan(pd.datetime(2020, 2, 24), pd.datetime(2020, 3, 11), facecolor='red', alpha=0.25)\nplt.text(pd.datetime(2020, 3, 2),3,'No restrictions',fontsize=20,color='red')\nplt.legend()\n\n#ax.xaxis.set_minor_locator(mdates.DayLocator())\nax.xaxis.set_minor_formatter(mdates.DateFormatter('%d\\n%b\\n%Y'))\nax.xaxis.set_major_formatter(mdates.DateFormatter('%d\\n%b\\n%Y'))\n#ax.tick_params(axis='x', which='both', labelsize=12)\nax.xaxis.grid(True, which='both')\nax.axvline(pd.Timestamp('2020-03-11'),color='green')\nax.annotate('Total Lockdown',xy =(pd.Timestamp('2020-03-11'),2.5), xytext=(pd.Timestamp('2020-03-13'),3),\n            arrowprops=dict(arrowstyle=\"simple\"),fontsize=20,color='green')\n\nax.set_xlim([datetime.date(2020 ,2, 24), datetime.date(2020, 4, 25)])\nplt.title('Growth Factor on Confirmed Cases Italy COVID-19',fontsize=20)\n\nplt.show()","bf8bc04d":"##  Development of patients hospitalized","b904b141":"# Maps","e12440d2":"## Cases over time","62a58690":"## New infection per day","a00a000c":"## New total cases in Lombardia","b9876005":"## Cumulative Results","e95f25c5":"# Table","d9046975":"## Most common pre-existing chronic pathologies in patients who died","77c3f407":"# COVID-19 Italy","3e81ab9a":"## Mortality rate over time","d00d93f1":"** How many are positives among all the tested per day? **","8c20dec6":"# Case by Age Classes and Gender","7d7f809c":"## New Total Cases","e125a80b":"We know that the confirmed cases trend in an epidemic follows a generalized logistic. About this, we can study the Growth Factor, defined with \n\n$$G=\\frac{\u0394C(g)}{\u0394C(g-1)}$$  \n\nwhere \u0394C(g) is the maximum increase of confirmed cases per day (g) in relation to the previous day (g-1), to attempt the prediction of the logistic inflection point(G=1).\n\nHow we can read that?\nAbove the line we haven't reached the inflection point of EXPONENTIAL curve that you can see in the previous cell. \nWhen the growth factor goes below the red line we're passing trought the inflection point and the exp curve is flexing to a Logistic Curve.\n\nA value of G(Growth Factor) upper than 1 could mean that you're still in the exponential part of the growth. As we can see below:\n","4fe36048":"## Animation of New Confirmed Cases and Total Cases","edd4e58c":"# Growth Factor","2849f386":"## Map of Total cases(last updated)","2b62b07c":"# Region Percentage of New Confirmed Cases"}}