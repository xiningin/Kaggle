{"cell_type":{"a9ba8e79":"code","656f280b":"code","e76f9b89":"code","ac2da0b4":"code","eaa1b925":"code","5927be05":"code","24f91546":"code","3cf87d52":"code","75e757ee":"code","652d83a5":"code","e3db9ad4":"code","f4617761":"code","a0594a1b":"code","4d667e9d":"code","0a492d1d":"code","a2dda64a":"code","fd5abcc4":"code","3841e29c":"code","f86bcf39":"code","657a8c83":"code","1b80b362":"code","3464dc7f":"code","9ab3fe66":"code","41446bf0":"code","6bd352d4":"code","f73ce199":"code","dc8a89cf":"code","96217741":"code","33606a34":"code","59e0b554":"code","e90a3343":"markdown","3b47841e":"markdown","03d06055":"markdown","d8a5099e":"markdown","79eb01da":"markdown"},"source":{"a9ba8e79":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","656f280b":"import pandas as pd\nimport matplotlib.pyplot  as plt\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split","e76f9b89":"# Carregando os data sets para an\u00e1lise\n\n\nsales =  pd.read_csv(\"\/kaggle\/input\/datah-m1-challange\/sales.csv\")\n\nitem =  pd.read_csv(\"\/kaggle\/input\/datah-m1-challange\/meta-item.csv\")\nstores =  pd.read_csv(\"\/kaggle\/input\/datah-m1-challange\/meta-store.csv\")\n\n\n# Carregando os data sets para submiss\u00e3o dos resulados\nsubmission =  pd.read_csv(\"\/kaggle\/input\/datah-m1-challange\/submission_sample.csv\")","ac2da0b4":"sales.head()","eaa1b925":"sales.info()","5927be05":"sales.plot(subplots=True)","24f91546":"item.head()","3cf87d52":"stores.head()","75e757ee":"sales['DATE'] = pd.to_datetime(sales['DATE'])","652d83a5":"sales['Year'] = sales['DATE'].dt.year\nsales['Month'] = sales['DATE'].dt.month\nsales['Day'] = sales['DATE'].dt.day\nsales.head()","e3db9ad4":"QTT_mean = sales['QTT'].mean()\nQTT_DEV = sales['QTT'].std()\nQTT_max = sales['QTT'].max()\nc = QTT_mean + QTT_DEV","f4617761":"df_remove = sales.loc[sales['Month'] <= 6] \nsales = sales.drop(df_remove.index)\n\n\ndf_remove2 = sales.loc[sales['Year'] <= 2019] \nsales = sales.drop(df_remove2.index)\n\ncut = c\ndf_remove3 = sales.loc[sales['QTT'] >= cut]\nsales = sales.drop(df_remove3.index)","a0594a1b":"sales.describe()","4d667e9d":"#Plotar gr\u00e1fico de vendas\n\nsales.plot(x='DATE', y='QTT')\nplt.show()","0a492d1d":"sales.corr()","a2dda64a":"sales_dummy=pd.merge(item, sales, how='inner', on='I100')\nsales_full=pd.merge(stores, sales_dummy, how='inner', on='S100')\nsales_full.head()","fd5abcc4":"sales = sales_full[['Year','Month','Day','S100','S101','S102','S103','I100','I101','I102','I103','C100','C101','QTT']]\nsales.head()","3841e29c":"#Separando os conjuntos de dados\n\nX = sales[['Year','Month','Day','S100','S101','S102','S103','I100','I101','I102','I103','C100','C101']]\ny = sales [['QTT']]","f86bcf39":"#Cria os grupos de Teste e Treino\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n#Cria o modelo de regress\u00e3o linear\n\nmlr_model = LinearRegression()\nmlr_model.fit(X_train, y_train)\nmlr_model.score(X_test, y_test)","657a8c83":"predict = mlr_model.predict(X)\nsales['predict'] = predict\nsales.head()\n\n","1b80b362":"sales.describe()","3464dc7f":"new_data = submission.ID.str.split(\"_\",expand=True)\nnew_data.rename(columns={0: 'DATE', 1: 'S100', 2: 'I100', 3: 'C100', 4:'C101'}, inplace=True)\nnew_data.head(10)","9ab3fe66":"new_data['DATE'] = pd.to_datetime(new_data['DATE'])\nnew_data['Year'] = new_data['DATE'].dt.year\nnew_data['Month'] = new_data['DATE'].dt.month\nnew_data['Day'] = new_data['DATE'].dt.day\nnew_data = new_data[['Year','Month','Day','S100','I100','C100','C101']]\nnew_data.head()","41446bf0":"new_data.info()","6bd352d4":"new_data = new_data.astype(int)","f73ce199":"submission_dummy=pd.merge(item, new_data, how='inner', on='I100')\nsubmission_full=pd.merge(stores, submission_dummy, how='inner', on='S100')\nsubmission_full.head()","dc8a89cf":"submission_full = submission_full[['Year','Month','Day','S100','S101','S102','S103','I100','I101','I102','I103','C100','C101']]","96217741":"y_sub = mlr_model.predict(submission_full)","33606a34":"submission['QTT'] = y_sub","59e0b554":"submission.to_csv('submission_nome_version_003.csv', encoding='utf-8', index=False)","e90a3343":"# Caregando os data sets","3b47841e":"# An\u00e1lise Explorat\u00f3ria de Dados","03d06055":"# Carregando as bibliotecas","d8a5099e":"# Criando um modelo simples de regress\u00e3o linear","79eb01da":"# Preparando o dataset para previs\u00e3o e submiss\u00e3o"}}