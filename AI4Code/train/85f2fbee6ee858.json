{"cell_type":{"aa2325ce":"code","2145f22a":"code","3dc397d9":"code","be64a2f9":"code","a86e0df8":"code","6bbd1311":"code","3c3facde":"code","31793c9a":"code","bcfd55d9":"code","0ce773aa":"code","8152efd9":"code","4cef79db":"code","1c6b13d1":"code","062b73dd":"code","10c65006":"code","1381e2a0":"code","3205b298":"code","28b3f440":"code","4683c9d7":"code","2f8232ff":"code","cfa6d8d3":"code","9b1024e2":"code","ac159a57":"code","358f896f":"code","43fff1da":"code","5bef5d00":"code","3caa6470":"code","d6892dd9":"code","c3e10533":"code","359f965b":"code","2a7150c8":"code","4ed8775e":"code","9b79bcba":"code","0084a62c":"code","fe085297":"code","815b18e7":"code","a7f87bae":"markdown"},"source":{"aa2325ce":"import warnings\nwarnings.filterwarnings(\"ignore\", category = FutureWarning)\n\nimport os\nimport keras\nimport h5py\nimport librosa\nimport itertools\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom collections import OrderedDict\n\nfrom keras.utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\n\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import Activation\nfrom keras.layers import Flatten\nfrom keras.layers import Input\nfrom keras.layers import Dropout\nfrom keras.models import Model,load_model\nfrom keras.applications.vgg16 import VGG16\nfrom tensorflow.keras.callbacks import EarlyStopping","2145f22a":"X = np.load('..\/input\/artsistdata\/data1\/x_gtzan_npy.npy')\ny = np.load('..\/input\/artsistdata\/data1\/y_gtzan_npy.npy')","3dc397d9":"y.shape","be64a2f9":"X.shape","a86e0df8":"# One hot encoding of the labels\ny = to_categorical(y)","6bbd1311":"y.shape","3c3facde":"X_stack = np.squeeze(np.stack((X,) * 3, -1))\nX_stack.shape","31793c9a":"X_train, X_test, y_train, y_test = train_test_split(X_stack, y, test_size=0.3, random_state=42, stratify = y)","bcfd55d9":"print(X_train.shape, X_test.shape, y_train.shape, y_test.shape)","0ce773aa":"# Histogram for train and test \nvalues, count = np.unique(np.argmax(y_train, axis=1), return_counts=True)\nplt.bar(values, count)\n\nvalues, count = np.unique(np.argmax(y_test, axis=1), return_counts=True)\nplt.bar(values, count)\nplt.show()","8152efd9":"input_shape = X_train[0].shape\nnum_genres = 4","4cef79db":"input_tensor = Input(shape=input_shape)\nvgg16 = VGG16(include_top=False, weights='imagenet',input_shape = input_shape)\ntop = Sequential()\ntop.add(Flatten(input_shape=vgg16.output_shape[1:]))\ntop.add(Dense(256, activation='relu'))\ntop.add(Dropout(0.5))\ntop.add(Dense(num_genres, activation='softmax'))\nprint(vgg16.output_shape[1:])\nprint(vgg16.input)\nprint(vgg16.output)\nprint(top(vgg16.output))\nmodel = Model(inputs=vgg16.input, outputs=top(vgg16.output))\n","1c6b13d1":"model.summary()","062b73dd":"for layer in model.layers :\n   print(layer,\"----->\",layer.trainable)","10c65006":"len(model.layers)","1381e2a0":"for i, layer in enumerate(model.layers):\n        \n        if(i <= 5):\n            layer.trainable = False\n        else:\n            layer.trainable = True","3205b298":"for layer in model.layers :\n   print(layer,\"----->\",layer.trainable)","28b3f440":"early_stopping_callback = EarlyStopping(monitor='val_acc', patience=4)","4683c9d7":"model.compile(loss=keras.losses.categorical_crossentropy,optimizer=keras.optimizers.Adam(),metrics=['accuracy'])","2f8232ff":"hist = model.fit(X_train, y_train,\n          batch_size=128,\n          epochs=50,\n          verbose=1,\n          validation_data=(X_test, y_test),\n          shuffle=True,\n          callbacks=[early_stopping_callback])","cfa6d8d3":"for layers in top.layers:\n   print(layers)","9b1024e2":"new  = load_model(\"..\/input\/genremodelh5\/genres_full_vgg16.h5\")       ","ac159a57":"pred = new.predict(X_test)","358f896f":"pred.shape","43fff1da":"pred[0]","5bef5d00":"pred.argmax(axis= 1)","3caa6470":"mat = confusion_matrix(y_test.argmax(axis =1),pred.argmax(axis= 1))","d6892dd9":"genres = {'metal': 0, 'disco': 1, 'classical': 2, 'hiphop': 3, 'jazz': 4, \n          'country': 5, 'pop': 6, 'blues': 7, 'reggae': 8, 'rock': 9}","c3e10533":"import seaborn as sns\nimport pandas as pd\ndf = pd.DataFrame(mat,columns = list(genres.keys()),index=list(genres.keys()))\nprint(df)\n#sns.heatmap(mat,annot = True , cmap='Blues')","359f965b":" k = new.evaluate(X_test,y_test)","2a7150c8":"k","4ed8775e":"t = list(genres.keys())\nt","9b79bcba":"from sklearn.metrics import classification_report","0084a62c":"print(classification_report( y_test.argmax(axis =1), pred.argmax(axis=1),target_names= t))","fe085297":"type(p)","815b18e7":"k.shape","a7f87bae":"## **Dataset** ***Split***"}}