{"cell_type":{"d3fb8f4f":"code","2fdf2cab":"code","a1ba6d3a":"code","1c5e7e53":"code","f846cf64":"code","9bf8caab":"code","6d299ab5":"code","3eea1a2f":"code","9ad15acd":"code","fe6b9ce5":"code","b5413a0d":"code","eb7ec20b":"code","fd6a168a":"code","2a39cc8c":"code","cced555f":"code","f929f96c":"code","7adac25e":"code","23528deb":"code","de471120":"code","c13d4af8":"code","d4880142":"code","0518c770":"code","9033bca7":"code","8ca38a12":"code","7f2080a8":"code","471f0a0a":"code","838681c4":"code","613314be":"code","b33d5f02":"code","1a12160a":"code","29f42a06":"code","58500500":"code","83ee3ddb":"code","01498aa0":"code","3e2f4699":"markdown","a31433e4":"markdown","39fd20b8":"markdown","fe1491a2":"markdown","9a0b2aaa":"markdown","e58e1a14":"markdown","b8370d1b":"markdown","12898f9a":"markdown","625b4426":"markdown","915a3943":"markdown","b616fcac":"markdown","bcd8cc73":"markdown","acc520e7":"markdown","4d07f477":"markdown","444b4a3d":"markdown"},"source":{"d3fb8f4f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\n\nfrom matplotlib import pyplot as plt\nsns.set_style(\"whitegrid\")\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","2fdf2cab":"i=2003\ndf_full=pd.DataFrame()\nwhile i <= 2017:\n    df_y = pd.read_csv('..\/input\/utmb_'+str(i)+'.csv')\n    df_y['year']=i\n    df_y=df_y[['Unnamed: 0','name','nationality','team','time','year','rank','category']]\n    df_full=df_full.append(df_y)\n    i=i+1","a1ba6d3a":"df_full = df_full.rename(columns={'Unnamed: 0': 'Position'})","1c5e7e53":"df_full[\"nationality\"] = df_full.nationality.str.upper()","f846cf64":"df_full.head()","9bf8caab":"cat1=[]\ncat2=[]\ncat3=[]\nfor value in df_full.category:\n    cat1.append(value[0])\n    cat2.append(value[1])\n    if len(value) == 4:\n        cat3.append(value[3])\n    else:\n        cat3.append(value[2])\n    \ndf_full['cat1']=cat1\ndf_full['cat2']=cat2\ndf_full['cat3']=cat3\n","6d299ab5":"df_full.head()","3eea1a2f":"df_full.describe()","9ad15acd":"df_full.info()","fe6b9ce5":"pd.isnull(df_full).sum()","b5413a0d":"df_finish = df_full[(df_full.time != \" \") & (df_full.time.notna())]\n\ndf_dnf = df_full[(df_full.time == \" \") | (df_full.time.isna())]","eb7ec20b":"df_finish.head()","fd6a168a":"df_dnf.head()","2a39cc8c":"pd.isnull(df_finish).sum()","cced555f":"df_finish[df_finish.nationality.isna()]","f929f96c":"df_full[df_full[\"year\"]==2010]","7adac25e":"df_finish[df_finish.cat3=='F'].head()","23528deb":"sns.countplot(x='cat3',  data=df_finish)\nplt.title(\"Female\/Male\")\nplt.show()\n","de471120":"g=sns.catplot(x=\"year\", col=\"cat3\", data=df_finish, kind=\"count\")\ng.set_xticklabels(rotation=45)\n#plt.xticks(rotation=45)\nplt.show()","c13d4af8":"print(\"Overall man\",len(df_finish[df_finish.cat3 == \"H\"]))\nprint(\"Overall women\",len(df_finish[df_finish.cat3 == \"F\"]))","d4880142":"sns.countplot(x='year',  data=df_finish)\nplt.title(\"Year\")\nplt.xticks(rotation=90)\nplt.show()","0518c770":"sns.countplot(x='nationality',  data=df_finish, order=df_finish.nationality.value_counts().iloc[:10].index)\nplt.title(\"Year\")\nplt.show()","9033bca7":"df_finish[df_finish['Position']==0]","8ca38a12":"df_new=pd.DataFrame()\ndf_new['time']=pd.to_datetime(df_finish[df_finish['Position']==0].time, format='%H:%M:%S')\ndf_new['year']=df_finish[df_finish['Position']==0].year\nplt.plot_date(x='year', y='time', data=df_new, ydate=True,xdate=False, fmt='r.-')\nplt.title(\"time\")\nplt.show()","7f2080a8":"df_new=pd.DataFrame()\ndf_new['time']=pd.to_datetime(df_finish[df_finish['Position']==1].time, format='%H:%M:%S')\ndf_new['year']=df_finish[df_finish['Position']==1].year\nplt.plot_date(x='year', y='time', data=df_new, ydate=True,xdate=False, fmt='r.-')\nplt.title(\"time\")\nplt.show()","471f0a0a":"x=df_finish[df_finish['cat3']=='F'].groupby('year').year.count()\nplt.plot(x)","838681c4":"df_new=pd.DataFrame()\n\ndf_new['time']=pd.to_timedelta(df_finish[df_finish['cat3']=='F'].time, unit='h')\/pd.Timedelta('1 hour')\ndf_new['year']=df_finish[df_finish['cat3']=='F'].year\ndf_new=df_new.groupby(['year'], as_index=False)['time'].min()\nplt.plot_date(x='year', y='time', data=df_new,xdate=False, fmt='r.-')\nplt.title(\"time\")\nplt.show()","613314be":"df_new","b33d5f02":"df_full.groupby('name').size().sort_values(ascending=False)\n","1a12160a":"df_full[df_full[\"name\"].str.contains(\"DELEMONTEZ\", case=False)]","29f42a06":"df_full[df_full[\"name\"].str.contains(\"drescher\", case=False)]","58500500":"df_full[df_full[\"nationality\"].str.contains(\"DE\", case=False, na=False)].count()","83ee3ddb":"df_de = df_full[df_full[\"nationality\"].str.contains(\"DE\", case=False, na=False)]\nlst_de=df_de.groupby('year').year.count()\n\nplt.plot(lst_de)","01498aa0":"df_full[df_full['team']!=\" \"].groupby(['year','team']).team.count().nlargest(20)","3e2f4699":"mmhhh seems in 2012 the race was shorter.....","a31433e4":"Ckeck how many times they participate","39fd20b8":"Lets check the women","fe1491a2":"Still a few without nationality","9a0b2aaa":"We have many values without time -> DNF","e58e1a14":"Split category into the three values","b8370d1b":"First column do not have a header -> rename it","12898f9a":"Getting the one with Position = 0 Winner?","625b4426":"Read the data into one DF with adding column year","915a3943":"Check 2010, seems no timevalues there.....","b616fcac":"How many germans participate per year","bcd8cc73":"Women per year","acc520e7":"datetime is not working here because time is over 24 h -> timedelta coverted to hours","4d07f477":"Winner-Times","444b4a3d":"**First Eda of the UTMB data**"}}