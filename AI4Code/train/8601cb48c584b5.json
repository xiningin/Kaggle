{"cell_type":{"1c7f1b25":"code","fc408d96":"code","bb7d6e9d":"code","106cc549":"code","8f028931":"code","eeb422e7":"code","6e65e991":"code","1d16cea6":"code","fc3816e2":"code","ef09addf":"code","d9deb208":"code","2e7bd692":"code","6ec39368":"code","b100b8f3":"code","c36b93ad":"code","1b1d5813":"code","ab4c4df1":"code","a005ad9f":"code","ec09f45a":"code","bf7f606a":"code","ca94abe6":"code","ea0e1b59":"code","1dba7101":"code","c63cae63":"code","a7ddeb8e":"code","286a7985":"code","16e22021":"code","d9f7c9fc":"code","d39e3b0a":"code","c629bffa":"code","cdf17801":"code","dc6d161f":"code","cc45afc9":"code","92f164ca":"code","18297660":"code","079a1e81":"code","268c911a":"code","512b7ead":"code","5e9c2a49":"code","97b5ef52":"code","335bdf97":"code","03a262a4":"code","2b00cf15":"code","93af05bb":"code","19ba005d":"code","d8d86d2d":"code","35ca90b5":"code","72ea74fb":"code","ec6f673a":"code","ed577d72":"code","020ef2b8":"code","ac303d99":"code","d47e0e1f":"code","59d0855f":"code","6ae5ea0b":"code","4e5a3509":"code","764e4b77":"code","7e1161c3":"code","2e2af6fd":"code","51b3c38c":"code","6e127eb3":"code","8a86acb5":"code","9c958e4c":"code","aebaa13f":"code","1bb37d89":"code","1513db57":"code","e3f37b06":"code","e3b48533":"code","f00498c7":"code","3b98551c":"code","764239bf":"code","c93ce8dc":"code","d71762ce":"code","1b4dcfbd":"code","1dab23eb":"code","376b8393":"code","1f5b46b9":"code","89f38a92":"code","50a1aaed":"code","0683fb0f":"code","cd4ad71b":"code","b0e08e2f":"code","5fd82748":"code","341b506e":"code","76020101":"code","b30e0ef9":"code","f8bf92aa":"code","2e9b3480":"code","a27c3672":"code","6c99e76b":"code","82ffa951":"code","82850567":"code","018ea45e":"code","03a7f552":"markdown","c1851dea":"markdown","7798b224":"markdown","1950ed26":"markdown","854d3a5b":"markdown","b2ea7986":"markdown","ea56c9da":"markdown","ff8ee883":"markdown","dc04f73b":"markdown","ebf8e9ec":"markdown","e830c6f8":"markdown","422cff82":"markdown","adc51ac3":"markdown","f1fb2332":"markdown","49453518":"markdown","4ec61df3":"markdown","1a54e6e9":"markdown","c687b48e":"markdown","41a81b7a":"markdown","0b58a5ba":"markdown","bc52dcf9":"markdown","86dad973":"markdown","85147424":"markdown","8b09ae4d":"markdown","9bf89f35":"markdown","0b21e396":"markdown","de029ab1":"markdown","6edd586f":"markdown","a2b213a8":"markdown","b649d2a2":"markdown","a3adbc46":"markdown","eb7e2c23":"markdown","a8e55dcc":"markdown","aabc647f":"markdown","7cea19a7":"markdown","d171065f":"markdown","eba91fa4":"markdown","836f9457":"markdown","7d3a97fe":"markdown","9f7c147c":"markdown","a1dce7bd":"markdown","9fc3c6f0":"markdown","a4990429":"markdown","34b7b7e9":"markdown","ef4e819b":"markdown","dd72fdd4":"markdown","de0c5d03":"markdown","2332f65e":"markdown","99ff4b21":"markdown","a767d21f":"markdown","f6d9be44":"markdown"},"source":{"1c7f1b25":"import os\nprint(os.listdir('..\/input'))","fc408d96":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","bb7d6e9d":"#read the csv files\nAD = pd.read_csv('..\/input\/bank-loans-dataset\/application_data.csv')\nPD=pd.read_csv('..\/input\/bank-loans-dataset\/previous_application.csv')","106cc549":"#to view large outputs\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)","8f028931":"AD.head()","eeb422e7":"AD.shape","6e65e991":"AD.info()","1d16cea6":"AD.describe()","fc3816e2":"PD.head()","ef09addf":"PD.shape","d9deb208":"PD.info()","2e7bd692":"PD.describe()","6ec39368":"#Checking missing values in Application data\n(100*AD.isnull().sum()\/len(AD)).round(2)","b100b8f3":"AD = AD.loc[:, AD.isnull().mean() <= .19]","c36b93ad":"#Checking the data again\n(AD.isnull().sum()*100\/len(AD)).round(2)","1b1d5813":"#Checking the missing values in previous application data.\n(100*PD.isnull().sum()\/len(PD)).round(2)","ab4c4df1":"PD = PD.loc[:, PD.isnull().mean() <= .20]","a005ad9f":"(100*PD.isnull().sum()\/len(PD)).round(2)","ec09f45a":"#Missing values in Categorical variables NAME_TYPE_SUITE should be replaced with the MODE value 'Unaccompanied'\nMo=AD.NAME_TYPE_SUITE.mode()\nAD['NAME_TYPE_SUITE'].fillna(AD.NAME_TYPE_SUITE.mode(), inplace=True)","bf7f606a":"#AMT_REQ_CREDIT_BUREAU_HOUR,AMT_REQ_CREDIT_BUREAU_DAY,AMT_REQ_CREDIT_BUREAU_WEEK,AMT_REQ_CREDIT_BUREAU_MON\n#have more than 90% values as 0 (0 enquiries 1 hour, 1 week and 1 month before application),\n#we can impute the missing values in these column as 0 (0 is the median for these columns)  \n\n\n#Missing values in AMT_GOODS_PRICE could be imputed by mean value for this var since this is a continuous float var\nAvg=AD.AMT_REQ_CREDIT_BUREAU_YEAR.mean()\nAD['AMT_GOODS_PRICE'].fillna(Avg, inplace=True)","ca94abe6":"#Imputing Missing values in the following columns with 0. \n#We are assuming that missisng means that there were no inquiries for the person.\nAD[['AMT_REQ_CREDIT_BUREAU_HOUR','AMT_REQ_CREDIT_BUREAU_DAY','AMT_REQ_CREDIT_BUREAU_WEEK','AMT_REQ_CREDIT_BUREAU_MON','AMT_REQ_CREDIT_BUREAU_QRT','AMT_REQ_CREDIT_BUREAU_YEAR']]= AD[['AMT_REQ_CREDIT_BUREAU_HOUR','AMT_REQ_CREDIT_BUREAU_DAY','AMT_REQ_CREDIT_BUREAU_WEEK' ,'AMT_REQ_CREDIT_BUREAU_MON','AMT_REQ_CREDIT_BUREAU_QRT','AMT_REQ_CREDIT_BUREAU_YEAR']].fillna(value=0.0)","ea0e1b59":"AD.select_dtypes('object').columns ","1dba7101":"AD.select_dtypes('float').columns ","c63cae63":"#Following variabes could not be float (number of days,number of enquiries, \n#number of family members and number of people in social circle). SO converting few of them to integer\nAD['DAYS_REGISTRATION'] = AD['DAYS_REGISTRATION'].astype(int,errors='ignore')\nAD['CNT_FAM_MEMBERS'] = AD['CNT_FAM_MEMBERS'].astype(int,errors='ignore')\nAD['OBS_30_CNT_SOCIAL_CIRCLE'] = AD['OBS_30_CNT_SOCIAL_CIRCLE'].astype(int,errors='ignore')\nAD['DEF_30_CNT_SOCIAL_CIRCLE'] = AD['DEF_30_CNT_SOCIAL_CIRCLE'].astype(int,errors='ignore')\nAD['DAYS_LAST_PHONE_CHANGE'] = AD['DAYS_LAST_PHONE_CHANGE'].astype(int,errors='ignore')\nAD['AMT_REQ_CREDIT_BUREAU_HOUR'] = AD['AMT_REQ_CREDIT_BUREAU_HOUR'].astype(int,errors='ignore')","a7ddeb8e":"AD.columns","286a7985":"AD.select_dtypes('int64').columns ","16e22021":"AD.select_dtypes('int64').apply(pd.Series.nunique, axis = 0)","d9f7c9fc":"## Flag variables with 0 and 1 values should be converted to Categorical vars\ncols=['FLAG_MOBIL', 'FLAG_EMP_PHONE', 'FLAG_WORK_PHONE', 'FLAG_CONT_MOBILE', 'FLAG_PHONE', 'FLAG_EMAIL','REG_REGION_NOT_LIVE_REGION', 'REG_REGION_NOT_WORK_REGION', 'LIVE_REGION_NOT_WORK_REGION', 'REG_CITY_NOT_LIVE_CITY', 'REG_CITY_NOT_WORK_CITY', 'LIVE_CITY_NOT_WORK_CITY', 'FLAG_DOCUMENT_2', 'FLAG_DOCUMENT_3', 'FLAG_DOCUMENT_4', 'FLAG_DOCUMENT_5', 'FLAG_DOCUMENT_6', 'FLAG_DOCUMENT_7', 'FLAG_DOCUMENT_8', 'FLAG_DOCUMENT_9', 'FLAG_DOCUMENT_10', 'FLAG_DOCUMENT_11', 'FLAG_DOCUMENT_12', 'FLAG_DOCUMENT_13', 'FLAG_DOCUMENT_14', 'FLAG_DOCUMENT_15', 'FLAG_DOCUMENT_16', 'FLAG_DOCUMENT_17', 'FLAG_DOCUMENT_18', 'FLAG_DOCUMENT_19', 'FLAG_DOCUMENT_20', 'FLAG_DOCUMENT_21']\n\n#function to convert columns\ndef convert(AD, cols):\n    for y in cols:\n        AD.loc[:,y].replace((0, 1), ('N', 'Y'), inplace=True)\n    return AD\n\n#calling the function for application_data\nconvert(AD, cols)\nAD.dtypes.value_counts()","d39e3b0a":"AD.describe()\n#We can see from the results below that some columns have a significant min or max value. We will probe these.","c629bffa":"plt.figure(figsize=(10,2))\nsns.boxplot(AD.AMT_INCOME_TOTAL)\nplt.show()","cdf17801":"sns.boxplot(AD.AMT_ANNUITY)\nplt.show()","dc6d161f":"plt.figure(figsize=(15,2))\nsns.boxplot(AD.DAYS_EMPLOYED)\nplt.show()","cc45afc9":"#Excluding values outside 99%ile in each of the 3 variables\nAD=AD[AD.AMT_ANNUITY<np.nanpercentile(AD['AMT_ANNUITY'], 99)]\nAD=AD[AD.DAYS_EMPLOYED<np.nanpercentile(AD['DAYS_EMPLOYED'], 99)]\nAD=AD[AD.AMT_INCOME_TOTAL<np.nanpercentile(AD['AMT_INCOME_TOTAL'], 99)]","92f164ca":"#Rechecking the columns\nplt.figure(figsize=(10,2))\nsns.boxplot(AD.AMT_ANNUITY)\nplt.show()","18297660":"#Rechecking the columns\nplt.figure(figsize=(10,2))\nsns.boxplot(AD.DAYS_EMPLOYED)\nplt.show()","079a1e81":"#Rechecking the columns\nplt.figure(figsize=(10,2))\nsns.boxplot(AD.AMT_INCOME_TOTAL)\nplt.show()","268c911a":"AD['AMT_INCOME_TOTAL'].describe()","512b7ead":"#Creating binned var\nAD.loc[:,'INCOME_RANGE']=pd.qcut(AD.loc[:,'AMT_INCOME_TOTAL'],q=[0,0.20,0.50,0.90,1],\nlabels=['Low','Medium','High','Very_high'])","5e9c2a49":"#Checking Binned Variable\nAD['INCOME_RANGE'].value_counts()","97b5ef52":"# creating another binnned Var\nprint(AD['EXT_SOURCE_2'].describe())\nAD.loc[:,'Rating2']=pd.qcut(AD.loc[:,'EXT_SOURCE_2'],q=[0,0.20,0.50,0.90,1],\nlabels=['Low','Medium','High','Very_high'])","335bdf97":"#Checking Binned Variable\nAD['Rating2'].value_counts()","03a262a4":"#DAYS_BIRTH column is age of the peron at the time of loan application.\n#This could be converted to age in years by dividing by 365.25(Considering leap years). Also it is with a negative sign, hence needs to be treated.\nAD['AGE'] =AD['DAYS_BIRTH']\/\/-365.25\nAD.drop(['DAYS_BIRTH'],axis=1,inplace=True)","2b00cf15":"#Checking the Age variable\nAD.AGE.describe()","93af05bb":"#Creating binned variable for AGE\nAD['AGE_GROUP']= pd.cut(AD.AGE,bins=np.linspace(20 ,70,num=11))","19ba005d":"#Checking binned variable\nAD.AGE_GROUP.value_counts()","d8d86d2d":"count1 = 0 \ncount0 = 0\nfor i in AD['TARGET'].values:\n    if i == 1:\n        count1 += 1\n    else:\n        count0 += 1\n        \ncount1 = (count1\/len(AD['TARGET']))*100\ncount0 = (count0\/len(AD['TARGET']))*100\n\nx = ['Defaulted Population(TARGET=1)','Non-Defauted Population(TARGET=0)']\ny = [count1, count0]\n\nexplode = (0.1, 0)  # only \"explode\" the 1st slice\n\nfig1, ax1 = plt.subplots()\nax1.pie(y, explode=explode, labels=x, autopct='%1.1f%%',\n        shadow=True, startangle=110)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.title('Data imbalance',fontsize=25)\nplt.show()","35ca90b5":"AD_t0 =AD[AD.TARGET==0]\nAD_t1=AD[AD.TARGET==1]","72ea74fb":"# function to plot for categorical variables\ndef plotfunc(var):\n    plt.figure(figsize=(15,5))\n    plt.subplot(1, 2, 1)\n    sns.countplot(var, data=AD_t0)\n    plt.title('Distribution of '+ '%s' %var +' for Non-Defaulters', fontsize=14)\n    plt.xlabel(var)\n    plt.xticks(rotation=90)\n    plt.ylabel('Number of cases for non-defaulters')\n    plt.subplot(1, 2, 2)\n    sns.countplot(var, data=AD_t1)\n    plt.title('Distribution of '+ '%s' %var +' for Defaulters', fontsize=14)\n    plt.xlabel(var)\n    plt.xticks(rotation=90)\n    plt.ylabel('Number of cases for defaulters')\n    plt.show()","ec6f673a":"plotfunc('NAME_CONTRACT_TYPE')","ed577d72":"plotfunc('NAME_TYPE_SUITE')","020ef2b8":"plotfunc('NAME_INCOME_TYPE')","ac303d99":"plotfunc('NAME_HOUSING_TYPE')","d47e0e1f":"plotfunc('NAME_FAMILY_STATUS')","59d0855f":"plotfunc('NAME_EDUCATION_TYPE')","6ae5ea0b":"Def=AD_t1.NAME_EDUCATION_TYPE.value_counts(normalize=True)\nNonDef=AD_t0.NAME_EDUCATION_TYPE.value_counts(normalize=True)\nprint(Def, NonDef)","4e5a3509":"plotfunc('CNT_FAM_MEMBERS')","764e4b77":"plotfunc('INCOME_RANGE')","7e1161c3":"Def=AD_t1.INCOME_RANGE.value_counts(normalize=True)\nNonDef=AD_t0.INCOME_RANGE.value_counts(normalize=True)\nprint(Def, NonDef)","2e2af6fd":"plotfunc('Rating2')","51b3c38c":"plotfunc('AGE_GROUP')","6e127eb3":"Def=AD_t1.AGE_GROUP.value_counts(normalize=True)\nNonDef=AD_t0.AGE_GROUP.value_counts(normalize=True)\nprint(Def, NonDef)","8a86acb5":"#selecting int and float columns for correlation\ncols_num=list(AD_t0.select_dtypes('int64').columns)\ncols_float=list(AD_t0.select_dtypes('float').columns)\n\ncols=cols_num+cols_float\n\nNondef_num=AD_t0[cols]\nNondef_corr = Nondef_num.corr()\nround(Nondef_corr, 3)","9c958e4c":"l1=Nondef_corr.unstack()\nl1.sort_values(ascending=False).drop_duplicates()","aebaa13f":"#selecting int and float columns for correlation\ncols_num=list(AD_t1.select_dtypes('int64').columns)\ncols_float=list(AD_t1.select_dtypes('float').columns)\n\ncols=cols_num+cols_float\n\ndef_num=AD_t1[cols]\ndef_corr = def_num.corr()\nround(def_corr, 3)","1bb37d89":"l1=def_corr.unstack()\nl1.sort_values(ascending=False).drop_duplicates()","1513db57":"# defining function for plotting contnous variables\ndef plotcont(var):\n    plt.figure(figsize=(15,5))\n    plt.subplot(1, 2, 1)\n    #sns.distplot(AD_t0[var].dropna(),kde=True)\n    AD_t0[var].plot.hist()\n    plt.title('Distribution for Non-Defaulters', fontsize=14)\n    plt.xlabel(var)\n    #plt.xticks(rotation=90)\n    plt.subplot(1, 2, 2)\n    #sns.distplot(AD_t1[var].dropna(),kde=True)\n    AD_t1[var].plot.hist()\n    plt.title('Distribution for Defaulters', fontsize=14)\n    plt.xlabel(var)\n    #plt.xticks(rotation=90)\n    plt.show()","e3f37b06":"plotcont('AMT_GOODS_PRICE')","e3b48533":"plotcont('REGION_POPULATION_RELATIVE')","f00498c7":"plt.figure(figsize=(18,6))\nplt.subplot(121)\nsns.countplot(x='TARGET',hue='CODE_GENDER',data=AD_t0)\nplt.subplot(122)\nsns.countplot(x='TARGET',hue='CODE_GENDER',data=AD_t1)\nplt.show()","3b98551c":"mean_income_t_0_m = AD_t0[AD_t0.CODE_GENDER=='M']['AMT_INCOME_TOTAL'].mean()\n\nmean_income_t_0_f = AD_t0[AD_t0.CODE_GENDER=='F']['AMT_INCOME_TOTAL'].mean()\n\nmean_income_t_1_m = AD_t1[AD_t1.CODE_GENDER=='M']['AMT_INCOME_TOTAL'].mean()\n\nmean_income_t_1_f = AD_t1[AD_t1.CODE_GENDER=='F']['AMT_INCOME_TOTAL'].mean()\n\nx_male = ['AMT_INCOME_mean_T_0_Male','AMT_INCOME_mean_T_1_Male']\n\ny_male = [mean_income_t_0_m,mean_income_t_1_m]\n\nx_Female = ['AMT_INCOME_mean_T_0_Female','AMT_INCOME_mean_T_1_Female']\n\ny_Female = [mean_income_t_0_f,mean_income_t_1_f]\nplt.figure(figsize=(18,6))\nplt.subplot(121)\nplt.bar(x_male,y_male)\n\nplt.subplot(122)\nplt.bar(x_Female,y_Female)\n\nplt.show()","764239bf":"def plotbivarcontcont(var1,var2):\n    plt.figure(figsize=(15,5))\n    plt.subplot(1, 2, 1)\n    sns.scatterplot(x=var1,y=var2,data=AD_t0)\n    plt.title('TARGET=0')\n    plt.xlabel(var1)\n    plt.xticks(rotation=90)\n    plt.subplot(1, 2, 2)\n    sns.scatterplot(x=var1,y=var2,data=AD_t1)\n    plt.title('TARGET=1')\n    plt.xlabel(var1)\n    plt.xticks(rotation=90)\n    plt.show()","c93ce8dc":"plt.figure(figsize=(18,6))\nplt.subplot(121)\nsns.scatterplot(x='AMT_CREDIT',y='AMT_INCOME_TOTAL',data=AD_t0)\nplt.title('INCOME vs CREDIT for Non-Defaulters')\n\nplt.subplot(122)\nsns.scatterplot(x='AMT_CREDIT',y='AMT_INCOME_TOTAL',data=AD_t1)\nplt.title('INCOME vs CREDIT for Defaulters')\nplt.show()","d71762ce":"plt.figure(figsize=(18,6))\nplt.subplot(121)\nsns.scatterplot(x='AMT_CREDIT',y='AMT_GOODS_PRICE',data=AD_t0)\nplt.title('CREDIT vs GOODS PRICE for Non-Defaulters')\n\nplt.subplot(122)\nsns.scatterplot(x='AMT_CREDIT',y='AMT_GOODS_PRICE',data=AD_t1)\nplt.title('CREDIT vs GOODS PRICE for Defaulters')\nplt.show()","1b4dcfbd":"PD.shape","1dab23eb":"PD.info()","376b8393":"PD.dtypes.value_counts()","1f5b46b9":"#Checking missng values\n((PD.isnull().sum()*100)\/len(PD)).round(2)","89f38a92":"#Removing columns having more than 40% missing values\nPD = PD.loc[:, PD.isnull().mean() <= .4]","50a1aaed":"#Rechecking the data\nPD.info()","0683fb0f":"#Since the Previous application data is very large, we are deleting some rows so that it could be easily merged\nPD=PD.loc[0:70000]","cd4ad71b":"PD.shape","b0e08e2f":"Combined = pd.merge(AD, PD, how='left', on=['SK_ID_CURR'])","5fd82748":"Combined.shape","341b506e":"Combined.columns","76020101":"sns.countplot(Combined.NAME_CONTRACT_STATUS)\nplt.xlabel(\"Contract Status\")\nplt.ylabel(\"Count of Contract Status\")\nplt.title(\"Distribution of Contract Status\")\nplt.show()","b30e0ef9":"approved=Combined[Combined.NAME_CONTRACT_STATUS=='Approved']\nrefused=Combined[Combined.NAME_CONTRACT_STATUS=='Refused']\ncanceled=Combined[Combined.NAME_CONTRACT_STATUS=='Canceled']\nunused=Combined[Combined.NAME_CONTRACT_STATUS=='Unused Offer']","f8bf92aa":"def plot_func(var):\n    fig, (ax1, ax2, ax3) = plt.subplots(ncols=3, figsize=(15,5))\n    \n    s1=sns.countplot(ax=ax1,x=refused[var], data=refused, order= refused[var].value_counts().index,)\n    ax1.set_title(\"Refused\", fontsize=10)\n    ax1.set_xlabel('%s' %var)\n    ax1.set_ylabel(\"Count of Loans\")\n    s1.set_xticklabels(s1.get_xticklabels(),rotation=90)\n    \n    s2=sns.countplot(ax=ax2,x=approved[var], data=approved, order= approved[var].value_counts().index,)\n    s2.set_xticklabels(s2.get_xticklabels(),rotation=90)\n    ax2.set_xlabel('%s' %var)\n    ax2.set_ylabel(\"Count of Loans\")\n    ax2.set_title(\"Approved\", fontsize=10)\n    \n    \n    s3=sns.countplot(ax=ax3,x=canceled[var], data=canceled, order= canceled[var].value_counts().index,)\n    ax3.set_title(\"Canceled\", fontsize=10)\n    ax3.set_xlabel('%s' %var)\n    ax3.set_ylabel(\"Count of Loans\")\n    s3.set_xticklabels(s3.get_xticklabels(),rotation=90)\n    plt.show()","2e9b3480":"plot_func('TARGET')","a27c3672":"refused.TARGET.value_counts(normalize=True)","6c99e76b":"approved.TARGET.value_counts(normalize=True)","82ffa951":"canceled.TARGET.value_counts(normalize=True)","82850567":"def plot_func1(var):\n    fig, (ax1, ax2, ax3) = plt.subplots(ncols=3, figsize=(15,5))\n    \n    s1=sns.scatterplot(x='AMT_CREDIT',y='AMT_GOODS_PRICE',data=approved)\n    ax1.set_title(\"Refused\", fontsize=10)\n    ax1.set_xlabel('%s' %var)\n    ax1.set_ylabel(\"Count of Loans\")\n    s1.set_xticklabels(s1.get_xticklabels(),rotation=90)\n    \n    s2=sns.scatterplot(x='AMT_CREDIT',y='AMT_GOODS_PRICE',data=refused)\n    s2.set_xticklabels(s2.get_xticklabels(),rotation=90)\n    ax2.set_xlabel('%s' %var)\n    ax2.set_ylabel(\"Count of Loans\")\n    ax2.set_title(\"Approved\", fontsize=10)\n    \n    \n    s3=sns.scatterplot(x='AMT_CREDIT',y='AMT_GOODS_PRICE',data=cancelled)\n    ax3.set_title(\"Canceled\", fontsize=10)\n    ax3.set_xlabel('%s' %var)\n    ax3.set_ylabel(\"Count of Loans\")\n    s3.set_xticklabels(s3.get_xticklabels(),rotation=90)\n    plt.show()","018ea45e":"plt.figure(figsize=(18,6))\nplt.subplot(1,2,1)\nsns.scatterplot(x='AMT_APPLICATION',y='AMT_INCOME_TOTAL',data=refused)\nplt.title('Refused')\n\nplt.subplot(1,2,2)\nsns.scatterplot(x='AMT_APPLICATION',y='AMT_INCOME_TOTAL',data=approved)\nplt.title('Approved')\nplt.show()","03a7f552":"Low income range has higher defaults as their proportion in defaulted population is higher than in the non defaulted population","c1851dea":"### 4.3.1 Unordered Categorical Variables ","7798b224":"# 4.7 Segmented Analysis Male vs Female","1950ed26":"Deriving Age in years","854d3a5b":"## 4.6 Univariate Analysis on continuous variables","b2ea7986":"Higher education count is proportionally lesser in dafualted population as compared to non defaulted population. Hence Higher the education level, lower the default rate. This is logical as higher degree category should be earning more and hence easier to pay off loan installments.","ea56c9da":"Defaults are higher for price of the goods for which the loan is given is lesser (between 0 to 500,000)","ff8ee883":"### Imputation in numerical variables","dc04f73b":"## 3.1 Data quality check and Missing Values","ebf8e9ec":"Single\/ not married is proportionally higher in dafaulted population as compared to non defaulted population. THis shows that Single applicants have higher defaults.","e830c6f8":"# 5.1 Merging the data","422cff82":"A lot of the int columns are named flag. We can check their unique values","adc51ac3":"# 5. Previous Application data analysis","f1fb2332":"We can notice that revolving loans are lesser in the defaulted population. Hence we can infer that revolving loans have comparatively safer. This may be attributed to the Nature of revolving loan as it is considered a flexible financing tool due to its repayment and re-borrowing flexibility","49453518":"## 4.8 Bivariate Analysis of numerical variables for both 0 and 1","4ec61df3":"Most of the defaults are from Working population.","1a54e6e9":"# Top 10 correlations for Default population","c687b48e":"Who was accompanying client when he was applying for the loan does not have any impact on the default. Both populations have same proportions.","41a81b7a":"## 3.3 Imputaion of values for columns where missing values are less than around 13%","0b58a5ba":"# 2. Check the structure of data","bc52dcf9":"## 4.5 Top 10 correlations in both the Default and non default population are same","86dad973":"Defaulters are less if price of good is upto 500k and amount credit is also less than 500k","85147424":"## 3.6 Binning at least 1 Continuous variable","8b09ae4d":"Population living in Rented apartments and those living with parents have higher default rate as they have higher proportion in the Defaulted population as compared to non defaulted population. Living in rental apartment means a cash outfow towards rent and thus less cash left for repayment of loan. Living with parents may suggest that the incme is not too high anf thus difficulty in repayment of loan.","9bf89f35":"# Top 10 correlations for non default population ","0b21e396":"Lower desity of defaults where income is higher than 300k or credit is lower than 200k. ","de029ab1":"## 3.5 Checking for outliers and treating at least 3 variables","6edd586f":"Mean among male defaulters do have less income compared to non-defaulters.","a2b213a8":"# 3.2 Dropping columns where missing values are greater than 19%","b649d2a2":"People living in higher density areas having lesser defaults","a3adbc46":"We can see that the Application data has high imbalance with Defaulted population\nat 8.7% as compared to Non-defualted population at 91.3%\nImbalance ratio is 11.4.","eb7e2c23":"# 4.4 Find correlation for numerical columns for both case, i.e 0 and 1","a8e55dcc":"## 3.4 Checking Data types of columns","aabc647f":"### Checking for outliers","7cea19a7":"## 4.3 Univariate Analysis with respect to TAGET 0 and TARGET 1 for categorical variables","d171065f":"## 4.2 Splitting Data with respect to TARGET=0 and TARGET=1","eba91fa4":"Dividing merged data set into 4 categories","836f9457":"## 2.1. Examining application data","7d3a97fe":"### Imputation in categorical variables","9f7c147c":"# 1. importing required libraries","a1dce7bd":"Loan request higher than 200k had a higher rejection rate. Also loan rejection rate was much lower if the income was higher than 500k.","9fc3c6f0":"# 4.1 Checking imbalance","a4990429":"### 4.3.2 Ordered categorical variables","34b7b7e9":"## 2.2 Examining previous application data","ef4e819b":"People having low Rating2 tends to Default more.","dd72fdd4":"#### OBS_30_CNT_SOCIAL_CIRCLE        - OBS_60_CNT_SOCIAL_CIRCLE       0.998495\n#### AMT_CREDIT                      - AMT_GOODS_PRICE                0.985951\n#### REGION_RATING_CLIENT_W_CITY     - REGION_RATING_CLIENT           0.949203\n#### CNT_FAM_MEMBERS                 - CNT_CHILDREN                   0.893020\n#### DEF_30_CNT_SOCIAL_CIRCLE        - DEF_60_CNT_SOCIAL_CIRCLE       0.861724\n#### AMT_ANNUITY                     - AMT_CREDIT                     0.778710\n#### AMT_ANNUITY                     - AMT_GOODS_PRICE                0.777681\n#### AGE                             - EXT_SOURCE_1                  -0.557865\n#### REGION_POPULATION_RELATIVE      - REGION_RATING_CLIENT          -0.532110\n#### REGION_RATING_CLIENT_W_CITY     - REGION_POPULATION_RELATIVE    -0.529862\n","de0c5d03":"We cannot decide much on basis of gender as defaulters and non defaulters both follow same pattern","2332f65e":"Loans which were previously refused or cancelled have a higher default rate","99ff4b21":"\n#### OBS_30_CNT_SOCIAL_CIRCLE- OBS_60_CNT_SOCIAL_CIRCLE\n\n#### AMT_GOODS_PRICE- AMT_CREDIT\n\n#### REGION_RATING_CLIENT_W_CITY- REGION_RATING_CLIENT\n\n#### CNT_FAM_MEMBERS- CNT_CHILDREN\n\n#### DEF_60_CNT_SOCIAL_CIRCLE- DEF_30_CNT_SOCIAL_CIRCLE\n\n#### AMT_CREDIT- AMT_ANNUITY\n\n#### AMT_ANNUITY- AMT_GOODS_PRICE\n\n#### EXT_SOURCE_1- AGE\n\n#### REGION_POPULATION_RELATIVE- REGION_RATING_CLIENT_W_CITY\n\n#### REGION_RATING_CLIENT- REGION_POPULATION_RELATIVE\n\n","a767d21f":"Children count seem to have some impact on default rate. As the proportion for higher count of chidlren is more in defaulted population as compared to non defaulted","f6d9be44":"### Treatment of outliers"}}