{"cell_type":{"c53d61eb":"code","b14e296b":"code","8472f6da":"code","d8c8d03c":"code","e15bd0c0":"code","ab2ab0a2":"code","f8dce9e3":"code","6262eab5":"code","cdd681d2":"code","60294eb6":"code","f9437574":"code","3b6a4497":"code","6745cc91":"code","71d59ca8":"code","83ba55db":"markdown","f7091343":"markdown","76e566c6":"markdown","1284562f":"markdown","c6917ff5":"markdown","e3b3a198":"markdown","cd295476":"markdown","c61da562":"markdown","c9f37338":"markdown"},"source":{"c53d61eb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b14e296b":"import numpy as np\nimport tensorflow as tf\nimport datetime\nfrom tensorflow.keras.datasets import fashion_mnist","8472f6da":"tf.__version__","d8c8d03c":"(X_train, y_train), (X_test, y_test) = fashion_mnist.load_data()","e15bd0c0":"X_train = X_train \/ 255.0\nX_test = X_test \/ 255.0","ab2ab0a2":"print(X_train.shape)","f8dce9e3":"X_train[:5]","6262eab5":"X_train = X_train.reshape(-1, 28*28)","cdd681d2":"print(X_test.shape)","60294eb6":"#Reshape the testing subset in the same way\nX_test = X_test.reshape(-1, 28*28)","f9437574":"from tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import Dropout\n\nmodel = Sequential()\nmodel.add(Dense(units=128, activation='relu', input_shape= (784,)))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(units=64, activation='relu'))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(units = 10, activation = 'softmax'))","3b6a4497":"model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['sparse_categorical_accuracy'])\nmodel.summary()","6745cc91":"model.fit(X_train, y_train, epochs=100)","71d59ca8":"model.evaluate(X_test, y_test)","83ba55db":"### Stage 4: Compiling an Artificial Neural network\n","f7091343":"### Loading the data","76e566c6":"### Stage5: fitting the model to data","1284562f":"### Stage 4: Building an Artificial Neural network\n","c6917ff5":"# 1.Data Preprocessing","e3b3a198":"### 2.Normalising the data","cd295476":"### Stage5: Evaluate the model to data","c61da562":"### 3. Change the Shape of this array ","c9f37338":"# Importing the library and dataset "}}