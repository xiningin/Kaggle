{"cell_type":{"8fe53518":"code","ab0b52e7":"code","5e89bef1":"code","e10257a0":"code","687cd70d":"code","fbb84f37":"code","a5736035":"code","d3f56752":"code","d23a5b3f":"code","06888fb6":"code","8fa9af1f":"code","b36582e7":"code","950ab5df":"code","7a594ad4":"code","aba9cb7c":"code","c0414e8b":"code","2cfaa5c3":"code","c066a59e":"code","ca21f90b":"code","c6ad8de4":"code","0f0a9c7f":"code","4404840c":"code","d2c54a08":"code","04666185":"code","5e393166":"code","4857d7a6":"code","17a8f394":"code","15713764":"code","dd31c923":"code","a5167ba6":"code","17249022":"code","c34ba34a":"code","42a8f03e":"code","ef95402c":"code","e3382092":"code","b0f66fcb":"markdown","61ff4311":"markdown","1b08f7a8":"markdown","7f19ff6b":"markdown","99bf87a9":"markdown","611ffde9":"markdown","aa371418":"markdown","96fda55b":"markdown","6b9410a1":"markdown","e5f772b3":"markdown","207be707":"markdown","c34602e8":"markdown"},"source":{"8fe53518":"import numpy as np \nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler, StandardScaler\n\nimport tensorflow as tf\nfrom tensorflow.keras import datasets, layers, models, callbacks, optimizers\nfrom keras.preprocessing.image import ImageDataGenerator","ab0b52e7":"train_data = pd.read_csv('\/kaggle\/input\/arabic-hwr-ai-pro-intake1\/train.csv', index_col='id')\ntrain_data.head()","5e89bef1":"train_data['img_name'] = train_data.index\ntrain_data['img_name'] = train_data['img_name'].astype(str).str.pad(5, fillchar='0')\ntrain_data.head()","e10257a0":"train_images = np.empty((train_data.shape[0], 32, 32, 3))\n\nfor i in range(train_data.shape[0]):\n    img_name = train_data.loc[i, 'img_name']\n    img_path = '\/kaggle\/input\/arabic-hwr-ai-pro-intake1\/train\/{}.png'.format(img_name)\n    \n    image = mpimg.imread(img_path)\n    image = image[:,:,:3]\n    train_images[i] = image","687cd70d":"train_images.shape","fbb84f37":"test_data = pd.read_csv('\/kaggle\/input\/arabic-hwr-ai-pro-intake1\/test.csv', index_col='id')\ntest_data.head()","a5736035":"test_data['img_name'] = test_data.index\ntest_data['img_name'] = test_data['img_name'].astype(str).str.pad(5, fillchar='0')\ntest_data.head()","d3f56752":"test_images = np.empty((test_data.shape[0], 32, 32, 3))\n\nfor i in range(test_data.shape[0]):\n    img_name = test_data.loc[i, 'img_name']\n    img_path = '\/kaggle\/input\/arabic-hwr-ai-pro-intake1\/test\/{}.png'.format(img_name)\n    \n    image = mpimg.imread(img_path)\n    image = image[:,:,:3]\n    test_images[i] = image","d23a5b3f":"test_images.shape","06888fb6":"train_data['label'].sort_values().unique()","8fa9af1f":"train_data['label'].value_counts().plot(kind='bar');","b36582e7":"train_labels = np.array(train_data['label'].tolist())\nprint(train_labels)","950ab5df":"letters_positions = []\n\nfor i in range(1, 29):\n    letters_positions.append(np.where(train_labels == i)[0][0])\n    \nprint(letters_positions)","7a594ad4":"plt.figure(figsize=(10,10))\nletter = 1\nfor i in range(4):\n    for j in range(7):\n        ax = plt.subplot2grid((4,7), (i,j))\n        ax.imshow(train_images[letters_positions[letter-1]])\n        letter += 1\n        \nplt.show()","aba9cb7c":"X_train, X_valid, y_train, y_valid = train_test_split(train_images, train_labels,\n                                                      test_size=0.2, stratify=train_labels,\n                                                      random_state = 42)","c0414e8b":"print(X_train.shape)\nprint(X_valid.shape)\n\nprint(y_train.shape)\nprint(y_valid.shape)","2cfaa5c3":"print(test_images.shape)","c066a59e":"X_train = X_train.flatten().reshape(-1, 1)\nX_valid = X_valid.flatten().reshape(-1, 1)\ntest_images = test_images.flatten().reshape(-1, 1)\n\n# X_train Normalizing\nmms = MinMaxScaler()\nmms.fit(X_train)\nX_train = mms.transform(X_train)\n\n# X_valid Normalizing\nmms = MinMaxScaler()\nmms.fit(X_valid)\nX_valid = mms.transform(X_valid)\n\n# Test Data Normalizing\nmms = MinMaxScaler()\nmms.fit(test_images)\ntest_images = mms.transform(test_images)\n\n# Reshapeing Data Sets\nX_train = X_train.reshape(10752, 32, 32, 3)\nX_valid = X_valid.reshape(2688, 32, 32, 3)\ntest_images = test_images.reshape(3360, 32, 32, 3)","ca21f90b":"print(X_train.shape)\nprint(X_valid.shape)\n\nprint(test_images.shape)","c6ad8de4":"model = models.Sequential([\n    \n    layers.Conv2D(filters=16, kernel_size=(3, 3), #padding = 'Same',\n                  activation='relu', input_shape=(32, 32, 3)),\n    layers.Conv2D(filters=16, kernel_size=(5, 5), #padding = 'Same',\n                  activation='relu'),\n    layers.MaxPooling2D((2, 2)),\n    layers.Dropout(0.3),\n    \n    \n    layers.Conv2D(filters=32, kernel_size=(3, 3), padding = 'Same',\n                  activation='relu'),\n    layers.Conv2D(filters=32, kernel_size=(5, 5), padding = 'Same',\n                  activation='relu'),\n    layers.MaxPooling2D((2, 2)),\n    layers.Dropout(0.3),\n    \n    \n    layers.Conv2D(filters=64, kernel_size=(3, 3), padding = 'Same',\n                  activation='relu'),\n    layers.Conv2D(filters=64, kernel_size=(5, 5), padding = 'Same',\n                  activation='relu'),\n    layers.MaxPooling2D((2, 2)),\n    layers.Dropout(0.5),\n    \n    \n    layers.Flatten(),\n    layers.Dense(256, activation='relu'),\n    layers.Dropout(0.2),\n    layers.Dense(256, activation='relu'),\n    layers.Dropout(0.3),\n    layers.Dense(128, activation='relu'),\n    layers.Dropout(0.5),\n    layers.Dense(29, activation='softmax')\n])","0f0a9c7f":"model.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])","4404840c":"datagen = ImageDataGenerator(\n        featurewise_center=False, \n        samplewise_center=False,  \n        featurewise_std_normalization=False,\n        samplewise_std_normalization=False,\n        zca_whitening=False,\n        rotation_range=10,\n        zoom_range = 0.1,  \n        width_shift_range=0.1, \n        height_shift_range=0.1,\n        horizontal_flip=False,\n        vertical_flip=False)","d2c54a08":"datagen.fit(X_train)","04666185":"early_stopp = callbacks.EarlyStopping(patience=25, restore_best_weights=True)","5e393166":"history = model.fit(datagen.flow(X_train,y_train, batch_size=192),\n                            validation_data=(X_valid, y_valid),\n                            epochs=120, batch_size=192,\n                            verbose=2, callbacks=[early_stopp])","4857d7a6":"pd.DataFrame(history.history).plot(figsize=(10, 6))","17a8f394":"model.evaluate(X_valid,y_valid)","15713764":"prediction = model.predict(X_valid)\npredictions = np.argmax(prediction,axis = 1)","dd31c923":"print(predictions[:20])\nprint(y_valid[:20])","a5167ba6":"test_prediction = model.predict(test_images)\ntest_predictions = np.argmax(test_prediction,axis = 1)","17249022":"test_predictions","c34ba34a":"submission = pd.read_csv('\/kaggle\/input\/arabic-hwr-ai-pro-intake1\/sample_submission.csv')\nsubmission.head()","42a8f03e":"submission.shape","ef95402c":"submission['label'] = test_predictions","e3382092":"submission[['id', 'label']].to_csv('submission.csv', index=False)","b0f66fcb":"### **Test Prediction**","61ff4311":"### **Submission**","1b08f7a8":"### **EDA** ","7f19ff6b":"##### **Test Data**","99bf87a9":"Dataset is **Balanced** and ready to trained","611ffde9":"### **Spliting Data**","aa371418":"#### **Load Important Libraries and Datasets**","96fda55b":"##### **Show Images**","6b9410a1":"##### **Normalizing Data**","e5f772b3":"#### **Data Generation**","207be707":"### Modeling & Training","c34602e8":"##### **Train Data**"}}