{"cell_type":{"026e66f0":"code","aa86f333":"code","d9daf958":"code","256316bd":"code","22b9fb64":"code","3526eab2":"code","2a79d090":"code","29ab760b":"code","f3d8eebc":"code","00db6406":"code","d8a4a3a5":"code","13d2eadb":"markdown","cf51a591":"markdown","c553c486":"markdown","c88afef6":"markdown","f11b778c":"markdown","cc8685b2":"markdown","ad401c90":"markdown","7b054e9e":"markdown","2bfee8de":"markdown","123bb12a":"markdown"},"source":{"026e66f0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","aa86f333":"\nimport numpy as np                # linear algebra\nimport pandas as pd               # data frames\nimport seaborn as sns             # visualizations\nimport matplotlib.pyplot as plt   # visualizations\nfrom pylab import *\nimport scipy.stats                # statistics\nfrom sklearn import preprocessing\nimport dateutil.parser\nfrom datetime import *\n\n\n\ndf = pd.read_csv(\"..\/input\/bikeshare.csv\")\n# , index_col = 'datetime', parse_dates=True)\n\nprint(df.head())\nprint(df.tail())\nprint(df.columns.tolist())\nprint(df.info())\nprint(df.shape)\n","d9daf958":"\n#c\u00f3digo para obtener las rentas cont\u00ecnuas\nsns.lineplot(x=\"datetime\", y=\"count\", data=df)\n# plt.ylim(0, 1500)\n\n\n","256316bd":"nc = (pd.DataFrame(df.groupby('season')['count'].sum()) )\nnc.reset_index(inplace=True)\n#print(nc)\nsns.barplot(x=nc[\"season\"],y=nc[\"count\"], palette=(\"Blues_d\"))","22b9fb64":"yk = sns.distplot( df[\"count\"])\nplt.show()","3526eab2":"ax = sns.scatterplot(x=\"atemp\", y=\"count\", data=df)","2a79d090":"corr = df.corr()\ncorr.style.background_gradient(cmap='coolwarm')","29ab760b":"hd = df[df.holiday == 1]\nwd = df[df.workingday == 1]\nwend = df[(df.holiday == 0) & (df.workingday == 0)]\nwend.head()\nwd.head()\n\naverage(hd['count'])\naverage(wd['count'])\naverage(wend['count'])\n\n                     \nh = [average(hd['count']),average(wend['count']),average(wd['count'])]\nb = ('hd','wd','wend')\n    \ny = np.arange(len(b))\n\nplt.bar(y,h)\nplt.xticks(y,b)\n","f3d8eebc":"hd['datetime'] = pd.to_datetime(hd['datetime'], errors='coerce')\nwd['datetime'] = pd.to_datetime(wd['datetime'], errors='coerce')\nwend['datetime'] = pd.to_datetime(wend['datetime'], errors='coerce')\n\nhd['hour'] = hd['datetime'].dt.hour\nwd['hour'] = wd['datetime'].dt.hour\nwend['hour'] = wend['datetime'].dt.hour\n\nwend.head()\n","00db6406":"nc4 = pd.DataFrame((hd.groupby('hour')['count'].mean()) )\nnc5 = pd.DataFrame((wd.groupby('hour')['count'].mean()) )\nnc6 = pd.DataFrame((wend.groupby('hour')['count'].mean()) )\nnc4['day_type'] = repeat('hd',len(nc4['count']))\nnc5['day_type'] = repeat('wd',len(nc5['count']))\nnc6['day_type'] = repeat('wend',len(nc6['count']))\n\nprint(nc4)\n\ndf4 = pd.concat([nc4,  nc5, nc6])\ndf4 = df4.reset_index()\ndf4.head()\n\n","d8a4a3a5":"#Gr\u00e1fico de barras promedio rentas por tipo de d\u00eda. \ng = sns.barplot(x=\"hour\", y=\"count\", hue=\"day_type\", data=df4)\n        ","13d2eadb":"Con el fin de entender un poco mas las relaciones que hay entre las variables, se muestra una tabla de correlaciones,\nprimero no hay relaciones muy marcadas entre las variables, pero si se pueden ver algunas cosas como una relaci\u00f3n inversa\nentre humedad y velocidad del viento o la relaci\u00f3n positiva entre el n\u00famero de rentas y temperatura que es la relaci\u00f3n que\nse ve\u00eda anteriormente. ","cf51a591":"Por \u00faltimo graficaremos los promedios de rentas de bicicletas por tipo de d\u00eda por cada hora, y as\u00ed tener un panorama mas claro del comportamiento, graficamos los promedios por hora en barras para los tres tipos de d\u00eda (hd, wd, wend). Para lo cual fue necesario unir verticalemte los tres dataframes auxiliares que obtenian los promedios y as\u00ed poder agrupar. ","c553c486":"[](http:\/\/)Con la gr\u00e1fica anterior obtenemos el total de rentas por estaci\u00f3n teniendo en cuenta que los n\u00fameros en el eje X sigifican lo siguiente.\n1: Primavera\n2: Verano\n3: Oto\u00f1o\n4: Invierno, donde se ven cosas interesantes, como que en iniverno se rentan m\u00e1s bicicletas que en primavera y que relativamnte la rentas en invierno no est\u00e1n lejos de las rentas en verano u oto\u00f1o. ","c88afef6":"El anterior es el histograma del n\u00famero de rentas de biciceltas por hora, la distribuci\u00f3n fisher es similar al resultado obtenido.\n\nPor otro lado dos variables que pueden tener relaci\u00f3n con la renta de bicicletas es la sensaci\u00f3n t\u00e9rmica (\"atemp\"), al graficar una dispersi\u00f3n entre esta variable y el n\u00famero de rentas (\"count\") vemos que aunque aparentemente hay una relaci\u00f3n positiva dicha relaci\u00f3n no es muy clara.  ","f11b778c":"OBJETIVO:\n\nEn este Nootbook se mostrar\u00e1n algunas consideraciones relacionadas con los datos obtenidos de de la base datos Bikeshare que contienen los datos de renta de bicicletas por hora para la ciudad de Washington por hora durante 2 a\u00f1os. \n\nEsta base de datos tiene informaci\u00f3n sobre las caracter\u00edsticas del momento en el que se rentan las bicicletas tales como: Estaci\u00f3n, temperatura, humendad, velocidad del tiempo, variables nominales relacionadas a si el dia en un d\u00eda festivo o d\u00eda laboral entre otras.  \n","cc8685b2":"Como conclusi\u00f3n se ve que la renta de bicicletas es mas importante en los d\u00edas laborales y fines de semana no festivos, algo un poco parad\u00f3jico, pero que se sustenta desde el hecho de que este servicio es altamente utilizado en las horas pico (6-9 am) y (4-7 pm), que est\u00e1 muy relacionado con los d\u00edas laborales y para el resto de horas las rentas se comportan superiores para los d\u00edas festivos y fines de semana que est\u00e1 relacionado con horas del d\u00eda en la que las personas salen a pasear o a realizar actividades l\u00fadicas. ","ad401c90":"En el bloque de arriba importamos las librerias que pueden ser \u00fatililes para mostar lo que queremos. Adem\u00e1s mostramos unos res\u00famenes de la base de datos y con ello tener un primer acercamiento con la informaci\u00f3n, no hay datos nulos y tambi\u00e9n sabemos el tipo de datos que contiene cada columna. ","7b054e9e":"Como primer medida se muestran para los dos a\u00f1os en una gr\u00e1fica el n\u00famero de rentas de bicicletas","2bfee8de":"En el bloque y gr\u00e1fica anterior obtenemos unos sub dataframes, para el caso de d\u00edas festivos (hd), d\u00edas laborales (wd) y fines de semana no festivos (wend) que es cuando las variables nominales est\u00e1n al mismo tiempo en 0, obtenemos un promedio para cada tipo de d\u00eda, y nos damos cuenta de algo revelador, los fines de semana y d\u00edas laborales tienen un promedio de rentas que los d\u00edas festivos.  ","123bb12a":"Se agreg\u00f3 una nueva variable que es la hora del d\u00eda va de la hora 0 a hora 23, para ello fue necesario cambiar el tipo de dato de la columna datetime, antes era tipo obejeto y ahora qued\u00f3 tipo datetime y as\u00ed fue posible obtener la hora del d\u00eda. "}}