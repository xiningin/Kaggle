{"cell_type":{"036b35e4":"code","609b7d8a":"code","a585436c":"code","8ed87a5f":"code","5954625f":"code","82061e6a":"code","3ccc87b2":"code","fc510b87":"code","d0a832e3":"code","31d35bce":"markdown","69899ef2":"markdown","d35f4560":"markdown","c547270a":"markdown","12824357":"markdown","89643e68":"markdown","bac156c2":"markdown","1367fae0":"markdown","0ac3f1f5":"markdown","7269b3f6":"markdown","5fd2b294":"markdown","a489c861":"markdown"},"source":{"036b35e4":"# Importing the libraries\nimport numpy as np \nimport pandas as pd \nfrom matplotlib import pyplot as plt\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import GradientBoostingClassifier","609b7d8a":"data = pd.read_csv('\/kaggle\/input\/letterrecognition-using-svm\/letter-recognition.csv')\ndata.head()","a585436c":"X = data.iloc[:, 1:].values\ny = data[\"letter\"].values\nX = MinMaxScaler().fit_transform(X)\n\n\n\nunique, count = np.unique(y, return_counts=True)\nplt.figure(figsize=(17, 2))\nplt.bar(unique, count, color='gray', data=data.columns)\nplt.title('Class Frequency')\nplt.xlabel('Class')\nplt.ylabel('Frequency')\nplt.show()","8ed87a5f":"T = 12\nplt.figure(figsize=(17, 17))\nfor i in range(T):\n    img = np.asarray(X[i].reshape((4, 4)))\n    plt.subplot(6, 6, i + 1)\n    plt.imshow(img, cmap='gist_gray')","5954625f":"rando_state = np.random.randint(20)\nx_train, x_test, y_train, y_test = train_test_split(X,\n                                                    y,\n                                                    test_size=0.3,\n                                                    random_state=rando_state)","82061e6a":"model = GradientBoostingClassifier(learning_rate=0.1,\n                                   subsample=1,\n                                   max_features=\"sqrt\",\n                                   criterion=\"mse\",\n                                   n_estimators=150,\n                                   max_depth=3,\n                                   random_state=rando_state,\n                                   verbose=True)","3ccc87b2":"model.fit(x_train, y_train)","fc510b87":"pred = model.predict(x_test)\nscore = model.score(x_test, y_test)\nscore","d0a832e3":"plt.plot(model.train_score_)","31d35bce":"# Simple and clear notebook \n\nSimple and clear notebook which introduces the gradient performance and letter recognition problem. I tried to cover essential topics in less than ten cells.","69899ef2":"### Illustrate the Black-and-white rectangular pixel displays some of the 26 capital letters in the English alphabet. ","d35f4560":"# Preparing and studying the dataset","c547270a":"## Splitting the dataset for validation purpose","12824357":"I trained 150 decision regressor trees as our base learner with three as a depth of each tree.","89643e68":"## Demonstrate the class distribution","bac156c2":"# Training Letter-26 \n","1367fae0":"# Check the loss curve of each additive step","0ac3f1f5":"# Defining the classification model","7269b3f6":"## Training the Gradient Boosting","5fd2b294":"# If you like the notebook, just left an upvote;)","a489c861":"Here we have in train loss for each boosting iteration on the in-bag sample."}}