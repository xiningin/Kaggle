{"cell_type":{"8e10d2b1":"code","e3c5cc58":"code","8c4a17e3":"code","e5144b31":"code","2729da64":"code","1e807476":"code","f365d712":"code","cb9969e9":"code","43299ebd":"code","0301e39c":"code","9cb368c1":"code","c325993e":"code","a505b8c8":"code","12c67051":"code","43764d78":"code","fad20648":"code","14342f91":"code","c106a146":"code","f05c2315":"code","17041ad0":"code","973f11f2":"code","4b5cd261":"code","0e8e4139":"code","f54865f5":"code","45fb2498":"code","98de0a49":"code","4657f441":"code","d7f2901c":"code","ba39f908":"code","4ae7bb02":"code","14aceb88":"code","6e5c3a33":"code","bd9cbf66":"markdown","98e860d2":"markdown","61a018b9":"markdown","ed97a0c7":"markdown","6f480238":"markdown","f211bdf2":"markdown","1dee86d5":"markdown","a2b0fd6e":"markdown","8d8f6c44":"markdown","0559f6b4":"markdown","b5a762ac":"markdown","c6d13a57":"markdown","e70f3a94":"markdown"},"source":{"8e10d2b1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics","e3c5cc58":"df = pd.read_csv('..\/input\/insurance\/insurance.csv')","8c4a17e3":"df.head()","e5144b31":"df.shape","2729da64":"df.info()","1e807476":"df.isnull().sum()","f365d712":"df.describe()","cb9969e9":"sns.set()\nplt.figure(figsize = (6,6))\n# sns.distplot(df.age)   # distplot will get deprecated in future versions. \n# sns.distplot(df['age'])\n\nsns.displot(df.age)\nplt.title('Age Distribution')\nplt.show()","43299ebd":"# Gender\nplt.figure(figsize = (6,6))\nsns.countplot(x = 'sex',data = df)\nplt.title(\"Gender DIstribution\")\nplt.show()","0301e39c":"df['sex'].value_counts()","9cb368c1":"# BMI DIstribution\nplt.figure(figsize = (6,6))\nsns.displot(df.bmi)\nplt.title('BMI Distribution')\nplt.show()","c325993e":"# Children Distribution\nplt.figure(figsize = (6,6))\nsns.countplot(x = 'children',data = df)\nplt.title(\"CHildren DIstribution\")\nplt.show()","a505b8c8":"df['children'].value_counts()","12c67051":"# Smoker Distribution\nplt.figure(figsize = (6,6))\nsns.countplot(x = 'smoker',data = df)\nplt.title(\"Smoker DIstribution\")\nplt.show()","43764d78":"df['smoker'].value_counts()","fad20648":"# Region Distribution\nplt.figure(figsize = (6,6))\nsns.countplot(x = 'region',data = df)\nplt.title(\"Region DIstribution\")\nplt.show()","14342f91":"df['region'].value_counts()","c106a146":"# Target DIstribution\nplt.figure(figsize = (6,6))\nsns.displot(df.charges)\nplt.title('Charges Distribution')\nplt.show()","f05c2315":"# ENcoding the Sex feature\ndf.replace({'sex': {'male' : 0, 'female': 1}}, inplace = True)\ndf.head()","17041ad0":"# ENcoding the Smoker feature\ndf.replace({'smoker': {'no' : 0, 'yes': 1}}, inplace = True)\ndf.head()","973f11f2":"# ENcoding the Region feature\ndf.replace({'region': {'southeast' : 0, 'southwest': 1, 'northeast': 2, 'northwest':3}}, inplace = True)\ndf.head()","4b5cd261":"X = df.drop(columns = 'charges', axis = 1)\ny = df.charges","0e8e4139":"X.shape, y.shape","f54865f5":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 99)","45fb2498":"X_train.shape, X_test.shape, y_train.shape, y_test.shape","98de0a49":"# Load or instiate Linear Regression \nlr = LinearRegression()\nlr.fit(X_train, y_train)","4657f441":"# Evaluate on Train Set\npred_train = lr.predict(X_train)","d7f2901c":"# R Squared\nr2_train = metrics.r2_score(y_train, pred_train)\nprint(r2_train)","ba39f908":"# Evaluate on Test Set\npred_test = lr.predict(X_test)\n\n# R Squared\nr2_test = metrics.r2_score(y_test, pred_test)\nprint(r2_test)","4ae7bb02":"# age         : 37\n# sex         : male (0)\n# bmi         : 28.025\n# children    : 2\n# smoker      : no (0)\n# region      : northeast (2)\n# charges     : expected --> 6203.90175\ninput_data = (37, 0, 28.025, 0, 0, 2)\nprint(input_data)\n\n# Changing input data to numpy array\ninput_data_arr = np.asarray(input_data)\n\nprint(input_data_arr)\n\n# Reshape the Array\ninput_data_reshp = input_data_arr.reshape(1,-1) \n\nprint(input_data_reshp)","14aceb88":"pred_new = lr.predict(input_data_reshp)\nprint(pred_new)","6e5c3a33":"print('The Insurance Cost is $', pred_new[0])","bd9cbf66":"# Data Pre-Processing\n## ENcoding the Categorical Features","98e860d2":"# CHeck for missing values.\nThough from df.info() we got to know there are no missing or NaN data, but still checking via `isnull()`","61a018b9":"# Predict on Unseen Data","ed97a0c7":"## Distribution of Age","6f480238":"# Data load","f211bdf2":"R2 value for Train data and Test Data are nearly same, so could say our model did not neither over train nor under train (aka overfitting or underfitting).","1dee86d5":"For a person, normal BMI Range should be in range 18.5 and 24.9.\n\n* If a person has BMI below 18.5, (s)he will consider as under weight.\n* and is BMI is above 24.9 then its consider as Over weight.","a2b0fd6e":"# Data Visualization","8d8f6c44":"* Categorical Features - based on the df.info(), we see that the below features are of `object` type.\n        * Sex\n        * Smoker\n        * Region\n        \n* Numerical Features - non `object` type\n        * Age\n        * BMI\n        * Children\n       \n* Target \n        * Charges\n        ","0559f6b4":"# Model Training\n## Linear Regression","b5a762ac":"## Statistical Measures of the data set","c6d13a57":"# Split into Train Test","e70f3a94":"# Model Evaluation"}}