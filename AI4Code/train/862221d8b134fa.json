{"cell_type":{"9b82a227":"code","c206d947":"code","25dc3c2c":"code","60c5f74e":"code","2ea8b842":"code","3924ec7c":"code","d6757a79":"code","41feea3f":"code","a1d345b7":"code","5362a16a":"code","18212781":"code","eea2a80f":"markdown"},"source":{"9b82a227":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\n\n!ls","c206d947":"## Load the data\n\nThe second code cell in your notebook now appears below the three lines of output with the file locations.\n\n\n\nType the two lines of code below into your second code cell.  Then, once you're done, either click on the blue play button, or hit **[Shift] + [Enter]**.  ","25dc3c2c":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()\n","60c5f74e":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","2ea8b842":"women = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\n\nprint(\"% of women who survived:\", rate_women)","3924ec7c":"men = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"% of men who survived:\", rate_men)","d6757a79":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\", \"Age\", \"Fare\", \"Embarked\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","41feea3f":"!ls","a1d345b7":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns \nimport matplotlib.pyplot as plt","5362a16a":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ngender_submission = pd.read_csv(\"\/kaggle\/input\/titanic\/gender_submission.csv\")","18212781":"# %% [markdown]\n# This kernel is a kaggle tutorial for Japanese kaggle beginners writen in Japanese.\n# \n# # 1. \u307e\u305a\u306fsubmit\uff01 \u9806\u4f4d\u8868\u306b\u8f09\u3063\u3066\u307f\u3088\u3046\n\n# %% [markdown]\n# \u3053\u306e[Kernel](https:\/\/www.kaggle.com\/sishihara\/upura-kaggle-tutorial-01-first-submission)\u3067\u306f\u3001Kaggle\u3067\u306esubmit\u306e\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002\n# \n# Kaggle\u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3067\u81ea\u5206\u304c\u4f5c\u6210\u3057\u305f\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u7d50\u679c\u3092\u63d0\u51fa\u53ef\u80fd\u3067\u3059\u3002\uff08Kernel\u7d4c\u7531\u3067\u3057\u304b\u63d0\u51fa\u3067\u304d\u306a\u3044\u30b3\u30f3\u30da\u30c6\u30a3\u30b7\u30e7\u30f3\u3082\u5b58\u5728\u3057\u307e\u3059\uff09\n# \n# - Kernel\u7d4c\u7531\n# - csv\u30d5\u30a1\u30a4\u30eb\u3092\u76f4\u63a5\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\n# - [Kaggle API](https:\/\/github.com\/Kaggle\/kaggle-api)\u3092\u5229\u7528\n# \n# \u4eca\u56de\u306f\u3001Kernel\u7d4c\u7531\u3067\u63d0\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n# \n# \u3053\u306eKernel\u306b\u306f\u3044\u308d\u3044\u308d\u306a\u30bb\u30eb\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u4e00\u65e6\u306f\u4f55\u3082\u8003\u3048\u305a\u306b\u53f3\u4e0a\u306e\u300cCOMMIT\u300d\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n# \n# \u4eca\u56de\u306f\u4e00\u65e6\u7121\u8996\u3057\u305fKernel\u306e\u51e6\u7406\u306e\u6d41\u308c\u306f\u3001\u6b21\u306eKernel\u3067\u5177\u4f53\u7684\u306b\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n# %% [code]\nimport numpy as np\nimport pandas as pd\n!ls\n\n# %% [markdown]\n# ## \u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n\n# %% [code]\n!ls ..\/input\/titanic\n\n# %% [code]\ntrain = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ngender_submission = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\n\n# %% [code]\ngender_submission.head()\n\n# %% [code]\ntrain.head()\n\n# %% [code]\ntest.head()\n\n# %% [code]\ndata = pd.concat([train, test], sort=False)\n\n# %% [code]\ndata.head()\n\n# %% [code]\nprint(len(train), len(test), len(data))\n\n# %% [code]\ndata.isnull().sum()\n\n# %% [markdown]\n# ## \u7279\u5fb4\u91cf\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\n\n# %% [markdown]\n# ### 1. Pclass\n\n# %% [markdown]\n# ### 2. Sex\n\n# %% [code]\ndata['Sex'].replace(['male','female'], [0, 1], inplace=True)\n\n# %% [markdown]\n# ### 3. Embarked\n\n# %% [code]\ndata['Embarked'].fillna(('S'), inplace=True)\ndata['Embarked'] = data['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)\n\n# %% [markdown]\n# ### 4. Fare\n\n# %% [code]\ndata['Fare'].fillna(np.mean(data['Fare']), inplace=True)\n\n# %% [markdown]\n# ### 5. Age\n\n# %% [code]\nage_avg = data['Age'].mean()\nage_std = data['Age'].std()\n\ndata['Age'].fillna(np.random.randint(age_avg - age_std, age_avg + age_std), inplace=True)\n\n# %% [code]\ndelete_columns = ['Name', 'PassengerId', 'SibSp', 'Parch', 'Ticket', 'Cabin']\ndata.drop(delete_columns, axis=1, inplace=True)\n\n# %% [code]\ntrain = data[:len(train)]\ntest = data[len(train):]\n\n# %% [code] {\"scrolled\":true}\ny_train = train['Survived']\nX_train = train.drop('Survived', axis = 1)\nX_test = test.drop('Survived', axis = 1)\n\n# %% [code]\nX_train.head()\n\n# %% [code]\ny_train.head()\n\n# %% [markdown]\n# ## \u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\n# %% [code]\nfrom sklearn.linear_model import LogisticRegression\n\n# %% [code]\nclf = LogisticRegression(penalty='l2', solver=\"sag\", random_state=0)\n\n# %% [code]\nclf.fit(X_train, y_train)\n\n# %% [code]\ny_pred = clf.predict(X_test)\n\n# %% [code]\ny_pred[:20]\n\n# %% [markdown]\n# ## \u63d0\u51fa\n\n# %% [code]\nsub = gender_submission\nsub['Survived'] = list(map(int, y_pred))\nsub.to_csv(\"submission2.csv\", index=False)\n\n# %% [code]\n","eea2a80f":"## The data\n\nTo take a look at the competition data, click on the **<a href=\"https:\/\/www.kaggle.com\/c\/titanic\/data\" target=\"_blank\" rel=\"noopener noreferrer\"><b>Data tab<\/b><\/a>** at the top of the competition page.  Then, scroll down to find the list of files.  \n\n![](https:\/\/i.imgur.com\/LiM3JA7.png)\n\nThere are three files in the data: (1) **train.csv**, (2) **test.csv**, and (3) **gender_submission.csv**.\n\n### (1) train.csv\n\n**train.csv** contains the details of a subset of the passengers on board (891 passengers, to be exact -- where each passenger gets a different row in the table).  To investigate this data, click on the name of the file under the **\"Data Sources\"** column (on the left of the screen).  Once you've done this, all of the column names (along with a brief description of what they contain) are listed to the right of the screen, under the **\"Columns\"** heading.  \n\n\n\nYou can view all of the data in the same window.  \n\n\nThe values in the second column (**\"Survived\"**) can be used to determine whether each passenger survived or not: \n- if it's a \"1\", the passenger survived.\n- if it's a \"0\", the passenger died.\n\nFor instance, the first passenger listed in **train.csv** is Mr. Owen Harris Braund.  He was 22 years old when he died on the Titanic.\n\n### (2) test.csv\n\nUsing the patterns you find in **train.csv**, you have to predict whether the other 418 passengers on board (in **test.csv**) survived.  \n\nClick on **test.csv** (under the **\"Data Sources\"** column) to examine its contents.  Note that **test.csv** does not have a **\"Survived\"** column - this information is hidden from you, and how well you do at predicting these hidden values will determine how highly you score in the competition! \n"}}