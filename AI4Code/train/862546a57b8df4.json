{"cell_type":{"c0983c9b":"code","d4d6865c":"code","657bb016":"code","5cfab95b":"code","ac5946d3":"code","8a68a10b":"code","32fb69cd":"code","ba22b7f3":"code","f43e4565":"code","26449b7a":"code","2c0fbe5c":"code","e581dcd9":"code","af862a4f":"code","37d59f90":"code","0cb59b4e":"code","bfd2d71c":"code","590a94fd":"code","21bcf36c":"code","0ad5e56a":"code","29289690":"code","ab0e6fe2":"code","df4e2cc0":"markdown","6166f0fb":"markdown","0ff78e63":"markdown","42731b14":"markdown","421227d4":"markdown","4dbe6708":"markdown","028cb19b":"markdown","a48523d8":"markdown","02635e04":"markdown","963b42d5":"markdown","07ae0c81":"markdown","c3df0c38":"markdown","5dc9c136":"markdown","137e8b42":"markdown","458fe8cb":"markdown","c53c22c8":"markdown","a9126464":"markdown","c310dfda":"markdown","572e95f6":"markdown","bb8928d1":"markdown","5c64dc7c":"markdown","b249048e":"markdown"},"source":{"c0983c9b":"# Import Python libraries for data manipuation and visualization\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as pyplot\n\n# Import the Python machine learning libraries we need\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\n","d4d6865c":"# Load the data set\ndataset = pd.read_csv(\"..\/input\/world-data-really-tiny\/world_data_really_tiny.csv\")","657bb016":"# Inspect first few rows\ndataset.head(12)","5cfab95b":"# Inspect data shape\ndataset.shape","ac5946d3":"# Inspect descriptive stats\ndataset.describe()","8a68a10b":"# View univariate histgram plots\ndataset.hist()","32fb69cd":"# View univariate box plots\ndataset.boxplot()","ba22b7f3":"# Split into input and output features\ny = dataset[\"happiness\"]\nX = dataset[[\"lifeexp\",\"unemployment\"]]\nX.head()","f43e4565":"y.head()","26449b7a":"# Split into test and training sets\ntest_size = 0.33\nseed = 7\nX_train, X_test, y_train, y_test =  train_test_split(X, y, test_size=test_size, random_state=seed)","2c0fbe5c":"X_train","e581dcd9":"X_test","af862a4f":"y_train","37d59f90":"y_test","0cb59b4e":"# Select algorithm\nmodel = DecisionTreeClassifier()","bfd2d71c":"# Fit model to the data\nmodel.fit(X_train, y_train)","590a94fd":"# Check model performance on training data\npredictions = model.predict(X_train)\nprint(accuracy_score(y_train, predictions))","21bcf36c":"# Evaluate the model on the test data\npredictions = model.predict(X_test)","0ad5e56a":"predictions","29289690":"print(accuracy_score(y_test, predictions))","ab0e6fe2":"df = X_test.copy()\ndf['Actual'] = y_test\ndf['Prediction'] = predictions\ndf","df4e2cc0":"### ii. Select an Algorithm\nCreate a model using the sklearn decision tree algorithm:","6166f0fb":"![](https:\/\/user.oc-static.com\/upload\/2019\/08\/06\/15650817599747_pt12_1.png)\n\n#### Remember the task:\n\nUse life expectancy and long-term unemployment rate to predict the perceived happiness (low or high) of inhabitants of a country.","0ff78e63":"### iii. Fit the Model to the Data\nNow take the training set and use it to fit the model (i.e., train the model):","42731b14":"## 5. Build a Model\n![](https:\/\/user.oc-static.com\/upload\/2019\/08\/06\/1565082528365_pt12_9.png)","421227d4":"The model has performed really well - 100%!","4dbe6708":"### ii. Visualize the Data\nUse the  histPlotAll()  function from functions.py to plot a histogram for each numeric feature:","028cb19b":"#### Compute Descriptive Statistics\nComputing the descriptive stats can be done in one function call:","a48523d8":"### i. Split Into Training and Test Sets\nUse the  train_test_split()  function in sklearn to split the sample set into a training set, which we will use to train the model, and a test set, to evaluate the model:","02635e04":"#### Look at the Data Shape\nConfirm the number of rows and columns in the data:","963b42d5":"![](https:\/\/user.oc-static.com\/upload\/2019\/12\/11\/15760871986625_0743_p1c1.jpg)\n\nIn the field of artificial intelligence (AI), we build models that represent and solve a particular problem. Machine learning semi-automates the creation of these models for particular AI tasks. For example, you can automate the building of a model that forecasts the weather.\n\n### Supervised learning : \nuses examples of the thing you are trying to predict like pictures of rabbits to build a model that can find other pictures of rabbits.\n\n### Unsupervised learning :\nbuilds models without examples to discover structure within data.\n\nWe will focus on two types of supervised learning tasks: classification, for predicting a category, and regression, for predicting a continuous numeric feature.\n\nHere are some real-world classification problems:\n\n* Filtering out spam emails. \n\n* Determining which patients suffer from a particular disease. \n\n* Recognizing hand-written letters and numbers. \n\nHere are some real-world regression problems:\n\n* Estimating property prices.\n\n* Forecasting stock prices.\n\n* Predicting sales for a retail store.","07ae0c81":"0.5\n\nWe can show the model predictions with the original data, with the actual happiness value:","c3df0c38":"Note that I have requested \u2153 of the data be held back as the test set.  I have also set the random_state parameter to a seed of seven. This requests a random sampling of the data but ensures we can always get the same random sampling if we rerun the experiment. When we tweak the model, it ensures that any changes are due to the tweaking, and not to the random sampling being different. You can change the random sample by changing the seed to another integer value.\n\nLet's look at the four samples produced and confirm the randomness of the selection:","5dc9c136":"### i. Select Features and Split Into Input and Target Features\nWe can select happiness as the feature to predict ( y ) and lifeexp and unemployment as the features to make the prediction ( X ):","137e8b42":"## 3. Understand the Data\n\n![](https:\/\/user.oc-static.com\/upload\/2019\/08\/06\/15650824039566_pt12_3.png)\n\n### i. Inspect the Data\nUse the  head()  function to show the first 12 rows (which is the entire dataset).  Again, this is far too small for any real machine learning activity, but it serves our purpose in this learning exercise.","458fe8cb":"## 6. Evaluate the Model\n![](https:\/\/user.oc-static.com\/upload\/2019\/08\/06\/15650829747247_pt12_10.png)","c53c22c8":"### iv. Check the Model\nNext, assess how well the model predicts happiness using the training data, by \u201cpouring\u201d training set X into the decision tree:\n\n","a9126464":"You can see that the first rule is to check if unemployment is below or equal to  1.48 , and if so, classify the sample point as high. The next rule checks if lifeexp is below or equal to  75.35, and if, so classify the sample point as low. The third and final rule checks if unemployment is below or equal to  5.525, and if so, classify it as high. Any other sample points get classified as low.\n","c310dfda":"### What Rules Did Sklearn Come Up With?\nAt this point, the model produced by sklearn is a bit of a black box.  There is no set of rules to examine, but it is possible to inspect the model and visualize the rules.\n\nFor this code to work, you need to first install Graphviz by running the following from a terminal session:\n\nconda install python-graphviz\n\nYou can then run the following code, which uses a function from functions.py:\n\n![](https:\/\/user.oc-static.com\/upload\/2019\/12\/11\/15760884116737_0743_p1c3%20and%20p3c1.jpg)","572e95f6":"## 4. Prepare the Data for Supervised Machine Learning\n![](https:\/\/user.oc-static.com\/upload\/2019\/08\/06\/15650823876876_pt12_4.png)","bb8928d1":"### i. Compute Accuracy Score\nLet\u2019s pour test set X into the decision tree and see what it predicts:","5c64dc7c":"# Build a Model With Python\n\nIn the previous chapter, we manually built a decision tree to classify countries into low and high happiness based on life expectancy and unemployment. We provided pre-classified samples to the model (that was you!), which were used to infer the rules for the decision tree.\n\nIn this chapter, we will repeat the same tasks using Python.  You may want to check back to that exercise to compare what we did manually against what we do in code.\n\n## 1.Import Libraries\nStart by importing the necessary libraries, including pandas, NumPy, and Matplotlib, to give you data manipulation and visualization capabilities. Then you'll import a few capabilities from scikit-learn (also called sklearn), which is the Python machine learning library we will be using.\n\nFinally, you'll import a library called functions.py, which I have created for this course. You can find all the code for this course on my profile\n","b249048e":"## 1. Define the Task"}}