{"cell_type":{"8f6eb6c3":"code","ed524fb1":"code","f549d7b2":"code","c8faff1a":"code","6ac532f2":"code","a86df7fc":"code","77d47269":"code","35af8337":"code","6eaf60fd":"code","72bd8783":"code","938036f9":"code","09da9b8f":"code","5b31923d":"code","a1da2963":"code","78db3d3f":"code","111c6bd2":"code","c48e457b":"code","bf9a1d99":"code","52fb749d":"code","26fb7a68":"code","fc4c40d3":"code","d8a21d17":"code","cc3814ff":"code","428e7177":"code","7d6cd4a1":"code","8d3fde33":"code","23b148dd":"code","c1e0038b":"code","07642d5f":"code","ccd2e2bc":"code","82c5326a":"code","5bf8052f":"code","2081b364":"code","db0ae49d":"markdown","8c124848":"markdown","c13bf61d":"markdown","c421daaa":"markdown","3583b27f":"markdown","00a017e8":"markdown","70725f07":"markdown","5bf482db":"markdown","9db955f7":"markdown","bcfec3d2":"markdown","00da0011":"markdown","96632983":"markdown","d263cc88":"markdown","c2f468c5":"markdown","43e350b9":"markdown","a2067cd1":"markdown","b4dda0b3":"markdown","826f2b2f":"markdown","cff73b36":"markdown","3c774bf9":"markdown","1757d914":"markdown","ce5d6b31":"markdown","bf1655df":"markdown","22767746":"markdown","5fa7c34a":"markdown","3fce0bb5":"markdown","74773d49":"markdown","2733c0be":"markdown","143a7f89":"markdown","2a2887cf":"markdown","23691137":"markdown","2cacfcae":"markdown"},"source":{"8f6eb6c3":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pickle # For saving models\nimport matplotlib.pyplot as plt # For plotting figures\nfrom sklearn.metrics import confusion_matrix, f1_score, precision_score, recall_score\n\n# For building our model\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense","ed524fb1":"# Load dataset from csv using pandas\ndataset = pd.read_csv('..\/input\/hypothyroid\/hypothyroid.csv')\ndataset.head()","f549d7b2":"dataset.columns","c8faff1a":"# Renaming the first column as target\ndataset = dataset.rename(columns = {dataset.columns[0]:\"target\"})","6ac532f2":"# Check the count of data in target\ndataset[\"target\"].value_counts()","a86df7fc":"dataset[\"target\"] = dataset[\"target\"].map({\"negative\":0,\"hypothyroid\":1})","77d47269":"print(\"Unique categories in the column 'pregnant'\", dataset['pregnant'].unique())\nprint(\"Count of categories in the column 'pregnant' \\n\", dataset[\"pregnant\"].value_counts())","35af8337":"print(\"Unique categories in the column 'T3 measured'\", dataset['T3_measured'].unique())\nprint(\"Count of categories in the column 'T3 measured' \\n\", dataset[\"T3_measured\"].value_counts())","6eaf60fd":"print(\"Unique categories in the column 'Sex'\", dataset['Sex'].unique())\nprint(\"Count of categories in the column 'Sex' \\n\", dataset[\"Sex\"].value_counts())","72bd8783":"# Replacing the categorical values into binary values\ndataset = dataset.replace({'f':0,'t':1, 'y':1, 'n':0, 'M':0, 'F':1})","938036f9":"# Displaying the head of the dataset\ndataset.head()","09da9b8f":"# Replacing ? into NaN values \ndataset.replace(to_replace='?', inplace=True, value=np.NaN)","5b31923d":"# Count the number of null values\ndataset.isnull().sum()","a1da2963":"# Dropping the TBG column as it contains extremely high number of null values\ndataset.drop('TBG', axis = 1, inplace=True)","78db3d3f":"# Selecting columns with data type as 'object'\ncolumns = dataset.columns[dataset.dtypes.eq('object')]\n\n# Convert to numeric values\ndataset[columns] = dataset[columns].apply(pd.to_numeric, errors='coerce')","111c6bd2":"# Viewing the details\ndataset.info()","c48e457b":"dataset.hist(figsize = (20,20));","bf9a1d99":"# List of columns containing null values\ndataset.columns[dataset.isnull().any()].tolist() ","52fb749d":"# Replacing null values by mean \ndataset['Age'].fillna(dataset['Age'].mean(), inplace = True)\ndataset['T4U'].fillna(dataset['T4U'].mean(), inplace = True)\n\n# Replacing null values by median\ndataset['TSH'].fillna(dataset['TSH'].mean(), inplace = True)\ndataset['T3'].fillna(dataset['T3'].median(), inplace = True)\ndataset['TT4'].fillna(dataset['TT4'].median(), inplace = True)\ndataset['FTI'].fillna(dataset['FTI'].median(), inplace = True)\n\n# The gender data looks to be imbalanced with 0 lesser than 1\n# Replacing null values with 0\ndataset['Sex'].fillna(0, inplace = True)","26fb7a68":"# Plot the histogram of different features\nplot_cleaned = dataset.hist(figsize = (20,20))","fc4c40d3":"# Check for the number of null values\ndataset.isnull().sum()","d8a21d17":"# Features\nX = dataset.drop('target', axis = 1) # selecting all columns except the target\n# Target variable\ny = dataset['target']","cc3814ff":"print(X.shape, y.shape)","428e7177":"from sklearn.model_selection import train_test_split\n\n# Split the data\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","7d6cd4a1":"from sklearn.preprocessing import StandardScaler\n\n# Initialization of the class\nscaler = StandardScaler()\n\n# Applying the scaler on test and train data\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","8d3fde33":"# Input\nmodel = Sequential()\n# Hidden layer\nmodel.add(Dense(64, kernel_initializer='uniform', input_dim=24, activation='relu'))\n# Output layer\nmodel.add(Dense(1, kernel_initializer='uniform', activation='sigmoid'))","23b148dd":"model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","c1e0038b":"# Training the model\nresult = model.fit(X_train, y_train, epochs=100, validation_split=0.2, batch_size=40,  verbose=2)","07642d5f":"# Get the loss and accuracy of the model by evaluation\nloss, acc = model.evaluate(X_test, y_test)\n\n# Print the loss and accuracy score for the model\nprint(\"%s: %.2f%%\" % (model.metrics_names[0], loss*100))\nprint(\"%s: %.2f%%\" % (model.metrics_names[1], acc*100))","ccd2e2bc":"# Predicting the output predictions\ny_pred = model.predict(X_test).round()","82c5326a":"# Calculating the F1 score, recall, and precision\nprint(\"%s: %.2f%%\" % (\"F1-score\", f1_score(y_test, y_pred)*100))\nprint(\"%s: %.2f%%\" % (\"Recall\", recall_score(y_test, y_pred)*100))\nprint(\"%s: %.2f%%\" % (\"Precision\", precision_score(y_test, y_pred)*100))","5bf8052f":"# summarize the result and plot the training and test loss\nplt.plot(result.history['loss'])\nplt.plot(result.history['val_loss'])\n\n# Set the parameters\nplt.title('Deep learning model loss')\nplt.ylabel('Loss')\nplt.xlabel('Epochs')\nplt.legend(['train', 'test'], loc='upper right')\n\n# Display the plots\nplt.show()","2081b364":"# Save the trained model \nmodel.save('saved_model.h5')","db0ae49d":"### Visualize the imputed data","8c124848":"### Checking for null values\n\nWe will again check the number of null values for each column.","c13bf61d":"### Checking for null values","c421daaa":"### Converting columns into numeric values\n\nThis will help us in performing mathematical and statistical operations on the columns.","3583b27f":"**Training and validation loss**","00a017e8":"### 2. Splitting the data into train (80%) and test (20%) data\n\nIn order to efficiently evaluate our model, we will be training our model on 80% of the data, and keep the rest 20% for testing the model.","70725f07":"## Conclusion\n\nIn this project, we have illustrated the potential use of neural networks in diagnosing hypothyroid disease. The identification of thyroid disease identi\ufb01cation remains to be an essential yet dif\ufb01cult task in both clinical diagnosis and statistical classification. The diagnosis involves the use of a large number of interrelated patient attributes along with extremely unbalanced groups that result in a complicated relationship between the input features. However, Arti\ufb01cial neural networks show a promising result due to its flexible nature in modeling complex patterns of data for diagnosis. This knowledge can be further extended for many other disease diagnosis where such problems exist.","5bf482db":"**Based on the statistics plotted above, we can see that,**\n\n- The features \"Age\" and \"T4U\" show a normal distribution, which is why we will be replacing the missing values with mean.\n- The features \"TSH\", \"T3\", \"TT4\" and \"FTI\" show a skewed distribution, which is why we will be replacing the missing values with median.\n- The feature \"gender\" is binary and contains an imbalanced data with the values \"1\" much greater then \"0\". So we will be replacing the missing values with \"0\".","9db955f7":"**Accuracy**","bcfec3d2":"### 3. Scaling the train and test data \n\nScaling the data helps in normalizing the data within a particular range and also helps in speeding up the calculations in an algorithm. For scaling the data, we will be using the `StandardScaler` class from scikit-learn.","00da0011":"## Importing necessary libraries\n\nWe will start by importing the necessary libraries in Python.","96632983":"**Compiling the model with 'adam' optimizer and loss function as 'binary_crossentropy'.**","d263cc88":"The value **'hypothyroid'** means that the patient was diagnosed with hypothyroidism and '**'negative''** means that there hypothyroidism was not diagnosed. We will be mapping the value '**'hypothyroid''** as '**1'** and '**'negative''** as '**0'**. \n\nAlso, the target value in the dataset looks imbalanced as the number of negative samples is much higher than the positive ones.","c2f468c5":"### 7. Saving the trained model\n\nWe can save our trained model for future use. We can then load the saved model using\n`model = keras.models.load_model('path\/to\/savedmodel')`","43e350b9":"### 5. Training the model\n\nWe will now train the model with a validation split of 0.2 for 100 epochs.","a2067cd1":"## Data Cleaning\n\nAfter getting the data, cleaning and formatting it is essential to avoid potential faults in our results due to inconsistencies or errors in our data.","b4dda0b3":"### 4. Building the neural network\n\nThe scope of our project is to design a feed-forward neural network for classi\ufb01cation of our target variable. Several factors determine the performance of the model such as the input, hidden and output layer con\ufb01gurations and the training methodology used. Most of the neural network architectures are determined by experimentation in practice. Here, we are defining a neural network containing a sequential model with one hidden layer and one output layer. \n\n<img src=\"https:\/\/drive.google.com\/uc?export=view&id=1iZ-v26eDf9nL7h_7F9juHRRYiWKgmqxX\" width=\"600\">\n\nWe have 24 feature columns due to which we have specified the input dimension as input_dim=24. We are using the ReLU activation function in the hidden layer, and sigmoid function for the output layer to return a binary value of output, i.e. hypothyroid (1) or negative (0).","826f2b2f":"Here, we can see that the feature column \"TBG\" contains extremely high number of null values. So, we will be not be using this column for our model. ","cff73b36":"We will then look into the replacing the categorical values of some other columns in the dataset.","3c774bf9":"### 6. Evaluating the model\n\nWe will now evaluate the performance of our trained model on test data to find metrics such as Accuracy, F1-score, recall, and precision.","1757d914":"---\n## Modeling the data\n\nOur data is now cleaned and formatted. We are now ready to model the data for prediction using Deep Learning. We will be using a Neural network for predicting the **hypothyroidism (target)** based on our **input data (features).** ","ce5d6b31":"## Data\n\n- We are using the hypothyroid data for training our model. \n- The dataset contains the value of different hormone levels of different patients along with our target variable, i.e., if the patient was suffering from hypothyroidism or not. \n- To start using it, we can simply load the csv dataset using pandas.","bf1655df":"### Replacing null values in our data\n\n- We will now replace or impute the null values in our data with their appropriate statistical metric.","22767746":"We can see that both the losses have converged at a very good rate.","5fa7c34a":"**F1-score, Recall, Precision**","3fce0bb5":"### Visualize the patterns or trends in data\n\nWe will now visualize the patterns in different columns (features) of the data using the `hist()` function of pandas library.","74773d49":"We are getting a quite good accuracy of **98.26%** from our Deep Learning model. However, our data is imbalanced and hence accuracy is not a good measure. Hence, we will be using a metric called [F1-score](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.f1_score.html).","2733c0be":"We are getting a quite good value of F1-score, recall and precision as well. Hence, our model seems to be performing well.","143a7f89":"**The dataset contains several features related to the patient such as age, gender, and if the person was on any kind of medication or not, along with the measure of different hormones such as T3, T4 ,etc.**","2a2887cf":"**Some of the features contain '?' values. So we will be replacing them with NaN values to count them.**","23691137":"### 1. Defining the features and target variables\n\nWe will be separating our dataset into features (X) and the target variable (y).","2cacfcae":"# Diagnosing Hypothyroid disease using Deep Learning\n\nHypothyroid disease or Hypothyroidism is one of the most difficult diseases to diagnose. It is a condition which causes your thyroid gland to not produce enough of certain crucial hormones. It usually may not cause noticeable symptoms in the early stages and hence becomes extremely difficult to diagnose. Applying deep learning algorithms can help assist healthcare workers in identifying signs and symptoms based on patterns shown in past cases of patients' data.\n\nIn this tutorial, we will be learning the code and workflow for diagnosing whether or not a person is suffering from Hypothyroid disease based on various metrics."}}