{"cell_type":{"2449b57b":"code","4db1b1c1":"code","a409b4b3":"code","bcfbb267":"code","b4e8ad85":"code","014ac06f":"code","8fbbc1d0":"code","988f18e2":"code","c2a91ba6":"code","617e8e60":"code","685bcbdb":"code","d21a0632":"code","606e5339":"code","8bb22877":"code","9d36dc2f":"code","2f3899ca":"code","4af3a678":"code","86cde389":"markdown"},"source":{"2449b57b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4db1b1c1":"import matplotlib as mpl\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport tensorflow as tf\nfrom tensorflow import keras\n","a409b4b3":"from sklearn.datasets import fetch_california_housing\nhousing = fetch_california_housing()","bcfbb267":"print(housing.feature_names)\nprint(housing.target_names)","b4e8ad85":"from sklearn.model_selection import train_test_split\nX_train_full,X_test,y_train_full,y_test = train_test_split(housing.data,housing.target,random_state = 42)\nX_train,X_valid,y_train,Y_valid = train_test_split(X_train_full,y_train_full,random_state=42)","014ac06f":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_valid = scaler.fit_transform(X_valid)\nX_test = scaler.fit_transform(X_test)","8fbbc1d0":"np.random.seed(42)\ntf.random.set_seed(42)","988f18e2":"model = keras.models.Sequential([\n    keras.layers.Dense(30,activation=\"relu\",input_shape = [8]),\n    keras.layers.Dense(30,activation=\"relu\"),\n    keras.layers.Dense(1)\n])","c2a91ba6":"model.compile(loss=\"mean_squared_error\",optimizer=keras.optimizers.SGD(lr=1e-3),metrics=[\"mae\"])","617e8e60":"model_history = model.fit(X_train,y_train,epochs=20,validation_data=(X_valid,Y_valid))","685bcbdb":"model.summary()","d21a0632":"model.evaluate(X_test,y_test)","606e5339":"model_history.history","8bb22877":"pd.DataFrame(model_history.history).plot(figsize=(8,5))\nplt.grid(True)\nplt.gca().set_ylim(0,1)\nplt.show()","9d36dc2f":"X_new = X_test[:3]","2f3899ca":"y_pred = model.predict(X_new)","4af3a678":"print(y_pred)\nprint(y_test[:3])","86cde389":"# Build a regression model using Keras"}}