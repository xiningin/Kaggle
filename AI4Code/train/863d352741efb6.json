{"cell_type":{"a40de73f":"code","1ceb6e61":"code","894c975f":"code","54d6cee9":"code","f10fc978":"code","416a24ad":"code","9ddba50f":"code","684c7463":"code","6cc87385":"code","a72d70ae":"code","ede6b8b9":"code","858cb58c":"code","5c629182":"code","f8e73637":"code","3489ae05":"code","8322e7f1":"code","40dcbd22":"code","c2efb476":"code","88139046":"code","0449efb1":"code","0530f54d":"markdown","5665dee8":"markdown","2c93e8b6":"markdown","65d60e31":"markdown","9e2540b7":"markdown","db1a314f":"markdown","10eef44b":"markdown","edf58d28":"markdown","5ab89649":"markdown","8bdae2c4":"markdown","030debae":"markdown","0682dad0":"markdown","13346b90":"markdown","c154e463":"markdown","e9d93bcd":"markdown","b0e8c979":"markdown","420ee0aa":"markdown","5f65a625":"markdown"},"source":{"a40de73f":"import pandas as pd\nimport numpy as np\nimport datetime\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as mcolors\nplt.style.use('fivethirtyeight')","1ceb6e61":"# Open data french gvt\nurl = 'https:\/\/www.data.gouv.fr\/fr\/datasets\/r\/63352e38-d353-4b54-bfd1-f1b3ee1cabd7'\n","894c975f":"df = pd.read_csv(url, sep= \";\")\ndf.head()","54d6cee9":"df.info()","f10fc978":"# sex = 0 => total M + W\n# Using groupby\ndf_group = df[df['sexe'] == 0].groupby('jour')['hosp','rea','dc'].sum()\n\ndf_group","416a24ad":"days_in_future = 10\nfuture_forcast = np.array([i for i in range(len(df['jour'].unique())+days_in_future)]).reshape(-1, 1)\nadjusted_dates = future_forcast[:-10]","9ddba50f":"start_date = datetime.date(2020, 3, 18)\ndates_cases = [start_date + datetime.timedelta(days=x) for x in range(len(df['jour'].unique()))]\nforecast_dates = [start_date + datetime.timedelta(days=x) for x in range(len(df['jour'].unique()) + days_in_future)]","684c7463":"plt.figure(figsize=(16, 9))\nplt.plot(dates_cases, df_group['hosp'])\nplt.title('# of Hosp', size=30)\nplt.xlabel('Dates', size=25)\nplt.ylabel('# of Cases', size=30)\n\n\nimport matplotlib.dates as mdates\n\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%d'))\nplt.gca().xaxis.set_major_locator(mdates.DayLocator())\n\nplt.gca().get_yaxis().set_ticks([i for i in range(max(df_group['hosp'])) if i % 2000 == 0])\nplt.xticks(size=8)\nplt.yticks(size=10)\nplt.show()","6cc87385":"plt.figure(figsize=(16, 9))\nplt.plot(dates_cases, df_group['rea'])\nplt.title('# of ICU', size=30)\nplt.xlabel('Dates', size=25)\nplt.ylabel('# of Cases', size=30)\n\n\nimport matplotlib.dates as mdates\n\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%d'))\nplt.gca().xaxis.set_major_locator(mdates.DayLocator())\n\nplt.gca().get_yaxis().set_ticks([i for i in range(max(df_group['rea'])) if i % 1000 == 0])\nplt.xticks(size=8)\nplt.yticks(size=20)\nplt.show()","a72d70ae":"plt.figure(figsize=(16, 9))\nplt.plot(dates_cases, df_group['dc'])\n\nplt.title('# of Deaths', size=30)\nplt.xlabel('Dates', size=25)\nplt.ylabel('# of Cases', size=30)\n\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%d'))\nplt.gca().xaxis.set_major_locator(mdates.DayLocator())\n\nplt.gca().get_yaxis().set_ticks([i for i in range(max(df_group['dc'])) if i % 500 == 0])\nplt.xticks(size=11)\nplt.yticks(size=20)\nplt.show()\n","ede6b8b9":"\nimport operator\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.preprocessing import PolynomialFeatures","858cb58c":"# training (deaths)\ny = df_group.iloc[:,2].values\nX = np.array([i for i in range(len(df['jour'].unique()))]).reshape(-1, 1)","5c629182":"from sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\npoly_reg = PolynomialFeatures(degree= 4)\nX_poly = poly_reg.fit_transform(X)\n\nlin_reg = LinearRegression()\nlin_reg.fit(X_poly, y)","f8e73637":"plt.scatter(X,y,color =  'red')\nlines = plt.plot(X, lin_reg.predict(X_poly))\nplt.setp(lines, linewidth=2,linestyle='--')","3489ae05":"plt.figure(figsize=(16, 9))\nplt.scatter(X,y,color =  'red')\nlines = plt.plot(future_forcast, lin_reg.predict(poly_reg.fit_transform(future_forcast)))\nplt.setp(lines, linewidth=2,linestyle='--')\n\nplt.title('# of Deaths', size=30)\nplt.xlabel('Days Since 3\/18\/2020', size=30)\nplt.ylabel('# of Cases', size=30)\n# axis\nplt.gca().get_xaxis().set_ticks([i for i in range(len(future_forcast)) if i % 1 == 0])\n\nplt.xticks(size=10)\nplt.yticks(size=20)\nplt.show()","8322e7f1":"max(df_group['dc'])","40dcbd22":"pd.DataFrame(future_forcast, lin_reg.predict(poly_reg.fit_transform(future_forcast)))\n","c2efb476":"# training (ICU)\ny = df_group.iloc[:,1].values\nX = np.array([i for i in range(len(df['jour'].unique()))]).reshape(-1, 1)\npoly_reg = PolynomialFeatures(degree= 2)\nX_poly = poly_reg.fit_transform(X)\n\nlin_reg = LinearRegression()\nlin_reg.fit(X_poly, y)\n\nplt.scatter(X,y,color =  'red')\nlines = plt.plot(X, lin_reg.predict(X_poly))\nplt.setp(lines, linewidth=2,linestyle='--')","88139046":"plt.figure(figsize=(16, 9))\nplt.scatter(X,y,color =  'red')\nlines = plt.plot(future_forcast, lin_reg.predict(poly_reg.fit_transform(future_forcast)))\nplt.setp(lines, linewidth=2,linestyle='--')\n\nplt.title('# of ICU', size=30)\nplt.xlabel('Days Since 3\/18\/2020', size=30)\nplt.ylabel('# of Cases', size=30)\n# axis\nplt.gca().get_xaxis().set_ticks([i for i in range(len(future_forcast)) if i % 1 == 0])\n\nplt.xticks(size=20)\nplt.yticks(size=10)\nplt.show()","0449efb1":"pd.DataFrame(future_forcast, lin_reg.predict(poly_reg.fit_transform(future_forcast)))","0530f54d":"Dates","5665dee8":"### Data collection & management","2c93e8b6":"### Hospitalizations","65d60e31":"## FORECAST with the model","9e2540b7":"### Deaths","db1a314f":"* dep = departments (https:\/\/en.wikipedia.org\/wiki\/Departments_of_France)\n* sexe = sex\n* hosp = # hospitalizations\n* rea = # Intensive Care Unit admissions\n* rad = # Discharges\n* dc = # Deaths ","10eef44b":"Some informations about contagion and how many days people can be contagious.\nUsefull to try to predict the lockdown effect.","edf58d28":"### Fit the model","5ab89649":"## Modeling - Polynomial regression","8bdae2c4":"### ICU admissions","030debae":"![info](https:\/\/pbs.twimg.com\/media\/EUN6qymXQAATSyn?format=jpg&name=medium)","0682dad0":"### Deaths","13346b90":"ICU admissions is quite interesting to forceast since we know how many beds we have in France (~ 5000), we opened 5000 more beds for coronavirus and we can go up to 14000 total beds.","c154e463":"### ICU Admissions","e9d93bcd":"Visualization","b0e8c979":"<img src=\"https:\/\/guides.etalab.gouv.fr\/images\/logo-marianne.svg\" width=\"200\" height=\"200\">\n<img src=\"https:\/\/static.lpnt.fr\/images\/2020\/03\/17\/20162449-20162506-g-jpg_6983793_1000x667.jpg\" width=\"500\" height=\"500\"\/>\nMaking my first Python notebook with the data from Sant\u00e9 Publique France (download from the french opendata governement's platform Data.gouv.FR).\nThe dataset contains :\n* Number of hospitalisations\n* Number of ICU admissions\n* Number of discharges\n* Number of Deaths\n\nBy day, sex (0 = 1+2) and departments.\n\nThis is hospital data only !\n","420ee0aa":"Updated every day","5f65a625":"# COVID-19 hospital data from France"}}