{"cell_type":{"9c2f0934":"code","ef42fd91":"code","697393f6":"code","c18897c7":"code","8e378d77":"code","398cbd17":"code","51eb24c4":"code","3ac90a34":"code","dafcd873":"code","39a1276a":"code","88d8781d":"code","ed4e46a0":"markdown","595b9d76":"markdown","f5f9955b":"markdown","12badb12":"markdown","8f8be7d1":"markdown","e879f9bb":"markdown","6a0cd197":"markdown","479a9e6c":"markdown"},"source":{"9c2f0934":"#importing the required libraries\nimport tensorflow as tf\nfrom tensorflow import keras\nimport numpy as np\nimport matplotlib.pyplot as plt","ef42fd91":"#importing the dataset\ndata = keras.datasets.fashion_mnist","697393f6":"#spliting our data into test and train\n(train_images, train_labels), (test_images, test_labels) = data.load_data()","c18897c7":"np.unique(train_labels)","8e378d77":"#this is actual label for those 10 different clothing(Given by tensorflow website itself)\nclass_names = ['T-shirt\/top', 'Trouser', 'Pullover', 'Dress', 'Coat',\n               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']","398cbd17":"train_images[0]","51eb24c4":"plt.imshow(train_images[7], cmap=plt.cm.binary)\nplt.show()","3ac90a34":"#here we simplifying our image data so it ranges from 0 to 1 rather than 0 to 255.\ntrain_images = train_images\/255\ntest_images = test_images\/255","dafcd873":"#model\n#In the model we are flattening our images so that the image will become a line of 784 pixels.\n#we have a hidden layer of 128 neurons\n#finally we use softmax to determine our clothing by probability\nmodel = keras.Sequential([\n    keras.layers.Flatten(input_shape=(28,28)),\n    keras.layers.Dense(128, activation=\"relu\"),\n    keras.layers.Dense(10, activation=\"softmax\")\n])\n\n#optimizing our model by reducing loss\nmodel.compile(optimizer=\"adam\", loss=\"sparse_categorical_crossentropy\", metrics=[\"accuracy\"])\n\n#I tried a number of epochs and 8 seems to work preety good\nmodel.fit(train_images, train_labels, epochs=8)","39a1276a":"test_loss, test_acc = model.evaluate(test_images, test_labels)\n\nprint(test_acc * 100)","88d8781d":"prediction = model.predict(test_images)\n\nfor i in range(5):\n    plt.grid(False)\n    plt.imshow(test_images[i], cmap=plt.cm.binary)\n    plt.xlabel(\"Actual: \"+class_names[test_labels[i]])\n    plt.title(\"Predicted: \"+class_names[np.argmax(prediction[i])])\n    plt.show()","ed4e46a0":"Here what we see is pixel values. Basically our image is divided into 28 * 28 pixels. If you looks closely each of our image data is given as a 2D array. In the outer array it consists of 28 arrays, and the inner array consists of 28 different values ranging from 0 to 255.\n\nLet me explain what this value represents. It tells us the colour of a perticular pixel out 28 * 28 (784) pixels. Where 0 means completely white and 255 means completly black.\n\nLet me show you a image below so that we understand it properly.","595b9d76":"Here we see that our dataset has 10 diffenrent types of clothing and are represented by a number.","f5f9955b":"Now, lets observe some of our prediction.","12badb12":"Our model accuracy","8f8be7d1":"# Fashion MNIST with Tensorflow","e879f9bb":"![](http:\/\/www.tensorflow.org\/images\/fashion-mnist-sprite.png)","6a0cd197":"Here we are gonna solve a fashion mnist problem by tensorflow. The dataset is given by keras's datasets. \nWhat we are basically gonna do is look a bunch of different clothing images and their respective labels and train our model.Then we are gonna try and predict its label by looking at the images.","479a9e6c":"Here's what the images basically look like :-"}}