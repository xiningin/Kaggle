{"cell_type":{"a5bd89ba":"code","25645875":"code","0af6cb16":"code","cb3e1874":"code","8a103f5a":"code","43da0e8a":"code","63911353":"code","840433da":"code","bbbf2ba1":"code","b6a452fd":"code","1ede81c7":"code","4937908a":"code","bc1602ad":"code","873873cf":"markdown","d597e380":"markdown","186519b3":"markdown","a1c94f0b":"markdown","2fc91d62":"markdown","2f0ed261":"markdown","e07b356e":"markdown","992e25e2":"markdown","797bb8f5":"markdown"},"source":{"a5bd89ba":"%matplotlib inline\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nplt.style.use('ggplot')\n\nimport seaborn as sns # for making plots with seaborn\ncolor = sns.color_palette()\nsns.set(rc={'figure.figsize':(25,15)})\n\nimport plotly\n# connected=True means it will download the latest version of plotly javascript library.\nplotly.offline.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\nimport plotly.figure_factory as ff\nimport cufflinks as cf\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport pylab as pl","25645875":"import pandas as pd\ndf = pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore.csv\")\nreviews_df = pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore_user_reviews.csv\")","0af6cb16":"df.drop_duplicates(subset='App', inplace=True)\ndf = df[df['Android Ver'] != np.nan]\ndf = df[df['Android Ver'] != 'NaN']\ndf = df[df['Installs'] != 'Free']\ndf = df[df['Installs'] != 'Paid']","cb3e1874":"df['Installs'] = df['Installs'].apply(lambda x: x.replace('+', '') if '+' in str(x) else x)\ndf['Installs'] = df['Installs'].apply(lambda x: x.replace(',', '') if ',' in str(x) else x)\ndf['Installs'] = df['Installs'].apply(lambda x: int(x))","8a103f5a":"df['Size'] = df['Size'].apply(lambda x: str(x).replace('Varies with device', 'NaN') if 'Varies with device' in str(x) else x)\n\ndf['Size'] = df['Size'].apply(lambda x: str(x).replace('M', '') if 'M' in str(x) else x)\ndf['Size'] = df['Size'].apply(lambda x: str(x).replace(',', '') if 'M' in str(x) else x)\ndf['Size'] = df['Size'].apply(lambda x: float(str(x).replace('k', '')) \/ 1000 if 'k' in str(x) else x)\n\n\ndf['Size'] = df['Size'].apply(lambda x: float(x))\ndf['Installs'] = df['Installs'].apply(lambda x: float(x))\n\ndf['Price'] = df['Price'].apply(lambda x: str(x).replace('$', '') if '$' in str(x) else str(x))\ndf['Price'] = df['Price'].apply(lambda x: float(x))\n\ndf['Reviews'] = df['Reviews'].apply(lambda x: int(x))","43da0e8a":"x = df['Rating'].dropna()\ny = df['Size'].dropna()\nz = df['Installs'][df.Installs!=0].dropna()\np = df['Reviews'][df.Reviews!=0].dropna()\nt = df['Type'].dropna()\nprice = df['Price']\n\np = sns.pairplot(pd.DataFrame(list(zip(x, y, np.log(z), np.log10(p), t, price)), \n                        columns=['Rating','Size', 'Installs', 'Reviews', 'Type', 'Price']), hue='Type', palette=\"Set2\")\n\np.fig.suptitle(\"Analisis Eksplorasi Data\", y=1.025)","63911353":"import scipy.stats as stats\nf = stats.f_oneway(df.loc[df.Category == 'BUSINESS']['Rating'].dropna(), \n               df.loc[df.Category == 'FAMILY']['Rating'].dropna(),\n               df.loc[df.Category == 'GAME']['Rating'].dropna(),\n               df.loc[df.Category == 'PERSONALIZATION']['Rating'].dropna(),\n               df.loc[df.Category == 'LIFESTYLE']['Rating'].dropna(),\n               df.loc[df.Category == 'FINANCE']['Rating'].dropna(),\n               df.loc[df.Category == 'EDUCATION']['Rating'].dropna(),\n               df.loc[df.Category == 'MEDICAL']['Rating'].dropna(),\n               df.loc[df.Category == 'TOOLS']['Rating'].dropna(),\n               df.loc[df.Category == 'PRODUCTIVITY']['Rating'].dropna()\n              )\n\ngroups = df.groupby('Category').filter(lambda x: len(x) > 286).reset_index()\narray = groups['Rating'].hist(by=groups['Category'], sharex=True, figsize=(20,20))\n\n\npl.suptitle(\"Rata-rata Nilai Rating Pada Setiap Kategori\", y=0.935)","840433da":"merged_df = pd.merge(df, reviews_df, on = \"App\", how = \"inner\")\nmerged_df = merged_df.dropna(subset=['Sentiment', 'Translated_Review'])","bbbf2ba1":"number_of_apps_in_category = df['Category'].value_counts().sort_values(ascending=True)\n\ndata = [go.Pie(\n        labels = number_of_apps_in_category.index,\n        values = number_of_apps_in_category.values,\n        hoverinfo = 'label+value',\n        title='Jumlah Download Aplikasi Pada Masing-Masing Kategori'\n    \n)]\n\nplotly.offline.iplot(data, filename='active_category')","b6a452fd":"corrmat = df.corr()\nf, ax = plt.subplots()\np =sns.heatmap(corrmat, annot=True, cmap=sns.diverging_palette(220, 20, as_cmap=True))\ntitle = ax.set_title('Heatmap korelasi antar atribut')","1ede81c7":"subset_df = df[df.Category.isin(['GAME', 'FAMILY', 'PHOTOGRAPHY', 'MEDICAL', 'TOOLS', 'FINANCE',\n                                 'LIFESTYLE','BUSINESS'])]\nsns.set_style('whitegrid')\nfig, ax = plt.subplots()\nfig.set_size_inches(15, 8)\np = sns.stripplot(x=\"Price\", y=\"Category\", data=subset_df, jitter=True, linewidth=1)\ntitle = ax.set_title('Tren Harga Aplikasi pada Masing-masing Kategori')","4937908a":"sns.set_style('ticks')\nsns.set_style(\"whitegrid\")\nfig, ax = plt.subplots()\nfig.set_size_inches(11.7, 8.27)\nax = sns.boxplot(x='Type', y='Sentiment_Polarity', data=merged_df)\ntitle = ax.set_title('Distribusi Polaritas Sentiment')","bc1602ad":"from wordcloud import WordCloud\nwc = WordCloud(background_color=\"white\", max_words=200, colormap=\"Set2\")\n# generate word cloud\n\nfrom nltk.corpus import stopwords\nstop = stopwords.words('english')\nstop = stop + ['app', 'APP' ,'ap', 'App', 'apps', 'application', 'browser', 'website', 'websites', 'chrome', 'click', 'web', 'ip', 'address',\n            'files', 'android', 'browse', 'service', 'use', 'one', 'download', 'email', 'Launcher']\n\n#merged_df = merged_df.dropna(subset=['Translated_Review'])\nmerged_df['Translated_Review'] = merged_df['Translated_Review'].apply(lambda x: \" \".join(x for x in str(x).split(' ') if x not in stop))\n#print(any(merged_df.Translated_Review.isna()))\nmerged_df.Translated_Review = merged_df.Translated_Review.apply(lambda x: x if 'app' not in x.split(' ') else np.nan)\nmerged_df.dropna(subset=['Translated_Review'], inplace=True)\n\n\nfree = merged_df.loc[merged_df.Type=='Free']['Translated_Review'].apply(lambda x: '' if x=='nan' else x)\nwc.generate(''.join(str(free)))\nplt.figure(figsize=(10, 10))\nplt.imshow(wc, interpolation='bilinear')\nplt.axis(\"off\")\nplt.title(\"Wordcloud Mengenai Review Pengguna Terhadap Aplikasi\", y=1.05)\nplt.show()\n\n","873873cf":"-------------------------------------------------------------------------------------------------------------\n**Word Cloud**\nWord Cloud merupakan salah satu visualisasi modern. Visualisasi ini memungkinkan untuk mencari secara cepat dan tepat terkait dengan pendapat dari pengguna aplikasi. Pendapat yang paling banyak disuarakan akan dicetak semakin besar. Dari visualisasi ini, terlihat pendapat kebanyakan pengguna app terhadap aplikasi gratis. Kata-kata yang paling sering muncul adalah \u2018ads, love, good, gallery, thanks, dan lain sebagainya\u2019.\n\n**What (Penjelasan Visualisasi)**\nVisualisasi yang dapat menampilkan kata-kata yang paling disuarakan oleh pengguna terhadap aplikasi gratis.\n\n**Why (Alasan Visualisasi)**\nAgar developer dapat mengetahui secara cepat dan tepat terkait dengan suara konsumen atau pengguna. Ukuran dari setiap kata beragam dan besarnya ditentukan dari seberapa banyak kata tersebut ada di dalam dataset. Pemilihan warna random untuk setiap kata. Kata yang muncul dimampatkan dalam sebuah frame.\n\n**When**\nSaat hendak melakukan evaluasi terhadap aplikasi yang dibuat.\n\n**How**\nMenggunakan wordcloud pada atribut komentar aplikasi.","d597e380":"**Visualisasi Pada Dataset Aplikasi di Google Play Store**","186519b3":"Link Dataset: \n(https:\/\/www.kaggle.com\/lava18\/google-play-store-apps)","a1c94f0b":"-------------------------------------------------------------------------------------------------------------\n**Bar Chart**\n\nMenampilkan rata-rata nilai rating aplikasi dari berbagai kategori aplikasi\n\n**What (Penjelasan Visualisasi)**\nVisualisasi yang dapat menampilkan rata-rata nilai rating dari seluruh kategori dan rata-rata nilai rating pada kategori yang spesifik.\n\n**Why (Alasan Visualisasi)**\nAgar dapat mengetahui kontribusi dari masing-masing atribut terhadap keseluruhan rata-rata nilai rating, mana yang menyebabkan nilai rata-rata keseluruhan paling besar dan paling kecil. Atribut yang digunakan dari dataset adalah kategori dan rating aplikasi. Pada grafik 1, koordinat y menampilkan jumlah aplikasi, dan pada koordinat x merupakan rata-rata nilai aplikasi. Pada grafik 2, koordinat y menampilkan jumlah aplikasi dan koordinat x menampilkan rata-rata nilai aplikasi beserta nama kategorinya.\n\n**When**\nSetelah melakukan EDA, dapat diketahui rating memiliki rata-rata nilai yang menonjol sehingga dilakukan visualisasi bar chart untuk mengetahui rata-rata keseluruhan.\n\n**How**\nDengan menggunakan metode bernama Histogram.","2fc91d62":"-------------------------------------------------------------------------------------------------------------\n**Pie Chart**\n\nChart ini merupakan chart berbentuk pie yang menggunakan atribut category dimana tujuannya adalah untuk mengetahui kategori mana yang memiliki persentase tertinggi dari seluruh kategori yang ada. Dapat diketahui bahwa aplikasi dengan kategori Family memiliki persentase tertinggi yaitu sebesar 19%.\n\n**What (Penjelasan Visualisasi)**\nVisualisasi yang dapat menampilkan persentase aplikasi pada masing-masing kategori dengan menggunakan pie chart.\n\n**Why (Alasan Visualisasi)**\nAgar dapat mengetahui besaran dalam persen aplikasi pada masing-masing kategori dari seluruh data yang ada pada dataset. Warna yang digunakan random dan berbeda untuk tiap kategori aplikasi. Keterangan yang terdapat pada pie chart berupa angka dalam bentuk persen.\n\n**When**\nKetika ingin mengetahui persenan masing-masing kategori. \n\n**How**\nDengan menggunakan metode bernama Pie.","2f0ed261":"-------------------------------------------------------------------------------------------------------------\n**Scatter Plot**\n\nChart ini merupakan chart yang digunakan untuk menggambarkan keterhubungan antar antribut. Dalam hal ini, sedang dilihat keterhubungan antar harga app terhadap kategori dari app yang ada. Pada visualisasi ini hanya digunakan beberapa sampel kategori saja tanpa mengurangi esensi informasi. Dari chart ini didapatkan informasi bahwa tidak banyak aplikasi berbayar di play store. Secara umum banyak aplikasi yang dijual dengan harga gratis.\n\n**What (Penjelasan Visualisasi)**\nVisualisasi yang dapat menampilkan keterhubungan antara variabel harga app dengan kategori app\n\n**Why (Alasan Visualisasi)**\nAgar dapat mengetahui tren harga aplikasi pada setiap kategorinya menggunakan sebaran pada graf scatter plot. Pada koordinat x terdapat sebaran harga dari 0 hingga 400. Pada koordinat y terdapat kategori aplikasi.\n\n**When**\nVisualisasi ini dapat membantu developer dalam menentukan harga app yang tepat agar dapat bersaing dengan kompetitor\n\n**How**\nDengan menggunakan library sns dan metode sub plot dan strip plot.","e07b356e":"-------------------------------------------------------------------------------------------------------------\n**Box Plot**\nChart ini merupakan chart yang digunakan untuk persebaran data atau distribusi dari polaritas sentiment yang ada. Sentiment disini didapatkan dari pengolahan terhadap review. Dari chart ini didapatkan informasi bahwa rata-rata sentiment nya masih lebih tinggi aplikasi berbayar. Secara implisit itu berarti bahwa secara kualitas, aplikasi berbayar memang sedikit lebih baik dibandingkan aplikasi gratis.\n\n**What (Penjelasan Visualisasi)**\nVisualisasi yang dapat menampilkan distribusi dari polaritas sentiment\n\n**Why (Alasan Visualisasi)**\nAgar dapat persebaran sentiment dari app berbayar dan gratis dapat diketahui. Pada bagian koordinat x terdapat tipe aplikasi yaitu gratis dan berbayar. Pada bagian koordinat y terdapat besaran sentiment polarity yang dinyatakan dalam bentuk angka (decimal).\n\n**When**\nSaat hendak mengetahui pendapat pengguna app secara general terhadap app berbayar dan gratis\n\n**How**\nMenggunakan sns dan metode box plot.","992e25e2":"-------------------------------------------------------------------------------------------------------------\n**EDA (Exploration Data Analysis)**\n\nData yang digunakan adalah data dari atribut Rating, Size, Installs, Reviews, Type dan Price. Seluruh data ini digunakan untuk mengetahui gambaran umum yang dapat dihasilkan oleh data-data tersebut sehingga mempermudah untuk melakukan eksplorasi pada visualisasi berikutnya.\n\n**What (Penjelasan Visualisasi)**\nVisualisasi yang dapat menggambarkan secara umum tentang data yang dimiliki\n\n**Why (Alasan Visualisasi)**\nAgar dapat mengetahui gambaran umum dari data yang akan diolah sehingga dapat menentukan pengolahan serta visualisasi seperti apa yang cocok digunakan untuk data yang dimiliki. Dataset yang digunakan adalah tipe aplikasi (berbayar atau gratis) dan kategori aplikasi. Sehingga melalui grafik di atas dapat diketahui relasi antar atribut dan sebaran tipe aplikasinya.\n\n**When**\nSebelum melakukan visualisasi selanjutnya pada atribut lainnya.\n\n**How**\nDengan menggunakan metode bernama pair plot.\n","797bb8f5":"-------------------------------------------------------------------------------------------------------------\n**Heat Map**\nHeatmap dibuat untuk menghasilkan visualisasi informasi yang menampilkan korelasi data antar kolom (price, category, downloads, dan lainnya) sehingga dapat diketahui atribut apa yang memiliki keterkaitan paling dekat\n\n**What (Penjelasan Visualisasi)**\nVisualisasi yang dapat menampilkan korelasi antar atribut\n\n**Why (Alasan Visualisasi)**\nAgar dapat mengetahui atribut apa yang memiliki keterkaitan paling tinggi\n\n**When**\nVisualisasi ini dapat digunakan ketika developer butuh untuk meningkatkan performa pada atribut-atribut yang saling berpengaruh\n\n**How**\nDengan menggunakan heatmap"}}