{"cell_type":{"21af4bf8":"code","0991d0ad":"code","69da7942":"code","0bdf10ca":"markdown"},"source":{"21af4bf8":"SEED = 42\nFOLDS = 5\n\n# LOAD LIBRARIES (from PIP or Kaggle Dataset)\n! pip install iterative-stratification \nfrom sklearn.model_selection import KFold\nfrom iterstrat.ml_stratifiers import MultilabelStratifiedKFold\nimport pandas as pd\n","0991d0ad":"\n# LOAD FILES\nscored = pd.read_csv('\/kaggle\/input\/lish-moa\/train_targets_scored.csv')\ndrug = pd.read_csv('\/kaggle\/input\/lish-moa\/train_drug.csv')\ntargets = scored.columns[1:]\nscored = scored.merge(drug, on='sig_id', how='left') \n\n# LOCATE DRUGS\nvc = scored.drug_id.value_counts()\nvc1 = vc.loc[vc<=18].index.sort_values()\nvc2 = vc.loc[vc>18].index.sort_values()\n\n# STRATIFY DRUGS 18X OR LESS\ndct1 = {}; dct2 = {}\nskf = MultilabelStratifiedKFold(n_splits=FOLDS, shuffle=True, \n          random_state=SEED)\ntmp = scored.groupby('drug_id')[targets].mean().loc[vc1]\nfor fold,(idxT,idxV) in enumerate( skf.split(tmp,tmp[targets])):\n    dd = {k:fold for k in tmp.index[idxV].values}\n    dct1.update(dd)\n\n# STRATIFY DRUGS MORE THAN 18X\nskf = MultilabelStratifiedKFold(n_splits=FOLDS, shuffle=True, \n          random_state=SEED)\ntmp = scored.loc[scored.drug_id.isin(vc2)].reset_index(drop=True)\nfor fold,(idxT,idxV) in enumerate( skf.split(tmp,tmp[targets])):\n    dd = {k:fold for k in tmp.sig_id[idxV].values}\n    dct2.update(dd)\n\n# ASSIGN FOLDS\nscored['kfold'] = scored.drug_id.map(dct1)\nscored.loc[scored.kfold.isna(),'kfold'] =\\\n    scored.loc[scored.kfold.isna(),'sig_id'].map(dct2)\nscored.kfold = scored.kfold.astype('int8')","69da7942":"scored[['sig_id', 'kfold']].to_csv('xfolds.csv', index = False)","0bdf10ca":"Thanks to Chris: https:\/\/www.kaggle.com\/c\/lish-moa\/discussion\/195195"}}