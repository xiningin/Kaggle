{"cell_type":{"8645d0bd":"code","0bb0a29b":"code","2036976c":"code","40cbb3c4":"code","cac2a43a":"code","6e72b433":"code","2e20f1e1":"code","51be15c9":"code","f13f4574":"code","14aa71da":"code","72f091d5":"markdown","24e284a2":"markdown","dea713b2":"markdown","847b84c5":"markdown","66d33c3d":"markdown","752da811":"markdown","5a136c46":"markdown"},"source":{"8645d0bd":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQCjsAuta-CINfAoXs4I6Dn-zNIV-5Q_qSIBnDmQbQIgnXCud1y&usqp=CAU',width=400,height=400)","0bb0a29b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2036976c":"ls ..\/input\/hackathon\/task_1-google_search_txt_files_v2\/BF\/","40cbb3c4":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcSehrBWoETMvqp9Ny5sm3FZhXkc2w8MTxL22vrdjr-zvW2wntWF&usqp=CAU',width=400,height=400)","cac2a43a":"burkinafaso_file = '..\/input\/hackathon\/task_1-google_search_txt_files_v2\/BF\/Burkina Faso-fr-result-14.txt'\nwith open(burkinafaso_file) as f: # The with keyword automatically closes the file when you are done\n    print (f.read(2000))","6e72b433":"import re\nfrom nltk.stem import WordNetLemmatizer","2e20f1e1":"def lemmatize(word):\n    \"\"\"\n    WordNet lemmatizer, try verb, noun, adjective andd return the smallest.\n    Always begin with verb.\n    WARN: Slow code, we can for ex remove adjective from the list\n    \"\"\"\n    lemmatizer = WordNetLemmatizer()\n    \n    word_v = lemmatizer.lemmatize(word, pos='v')\n    word_n = lemmatizer.lemmatize(word, pos='n')\n    word_a = lemmatizer.lemmatize(word, pos='a')\n    \n    return min([word_v, word_n, word_a], key=len)\n\n\"\"\"\nCommun useless words\n\"\"\"\nfrom sklearn.feature_extraction.text import ENGLISH_STOP_WORDS\nfrom nltk.corpus import stopwords\nstop_words = set(stopwords.words('english')) | ENGLISH_STOP_WORDS\n\n# what is: ed\nstop_words.update([\"'s\", \"n't\",\n                   \"e.g.\", \"e.g\", \"i.e.\", \"i.e\", \"etc.\", \"etc\",\n                   \"co.\", \"ltd.\",\n                   \"et\", \"al\", \"al.\", \"dr.\",\n                   \"table\", \"figure\", \"fig\", \"fig.\",\n                   \"url\",\n                   \"http\", \"https\"\n                  ])","51be15c9":"# BAD code rewrite\nnumber = r'[\\d\\Wex]+' # fake number, but do the job\nnumber_re = re.compile(f'^{number}s?$')\nnot_letters_digits_re = re.compile(r'^[^a-zA-Z0-9]+$')\nsingle_re = re.compile(r'^[a-zA-Z]\\.?$')\n\ndef valid_token(token):\n    not_stop_words = not token in stop_words\n    not_number = not number_re.match(token)\n    not_punctuation = not not_letters_digits_re.match(token)\n    not_single = not single_re.match(token)\n    \n    return (not_number and \n            not_stop_words and \n            not_punctuation and \n            not_single and \n            len(token)>1 and len(token)<70)","f13f4574":"# Rewrite proprely, at the right place (tokenizer class)\na_reg = re.compile(fr\"^[\\W]+(.+)$\")\nreg = r'^(\\d+[.e\\d\\W]+)((?!.*ncov$).+)'\nb_reg = re.compile(reg)\nc_reg = re.compile(r'^(.*)[-*]+$')\n\ndef post(token):\n    # Drop non words characters at begining: \"-+,=sometext\" -> \"sometext\"\n    token = a_reg.sub(r'\\1',token)\n    # \"10km\" -> \"km\", \"10-years-old\" -> \"years-old\" but keep \"2019-ncov\"\n    token = b_reg.sub(r'\\2',token)\n    # \"sometext-\" -> \"sometext\", \"word*\" -> \"word\"\n    token = c_reg.sub(r'\\1',token)\n    \n    return token","14aa71da":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRM7IagJlB9SL-tuW-x20aBJ7WSGEUngCMNFSwSM_CnE_WmE6kf&usqp=CAU',width=400,height=400)","72f091d5":"isitgettingbetteryet.com","24e284a2":"vectorstock.com","dea713b2":"atd-fourthworld.org","847b84c5":"Immunization, BCG (% of one-year-old children) in Burkina Faso was reported at 98 % in 2018, according to the World Bank collection of development indicators, compiled from officially recognized sources. Burkina Faso - Immunization, BCG (% of one-year-old children) - actual values, historical data, forecasts and projections were sourced from the World Bank on June of 2020.\n\n\nChild immunization rate, BCG is the percentage of children ages 12-23 months who received vaccinations before 12 months or at any time before the survey for BCG. A child is considered adequately immunized after one dose. https:\/\/tradingeconomics.com\/burkina-faso\/immunization-bcg-percent-of-one-year-old-children-wb-data.html","66d33c3d":"#Codes above from Maroune Benmeida  https:\/\/www.kaggle.com\/atmarouane\/cord-19-word-cleaner","752da811":"Das War's Kaggle Notebook Runner: Mar\u00edlia Prata     @mpwolke","5a136c46":"#Codes above from Maroune Benmeida  https:\/\/www.kaggle.com\/atmarouane\/cord-19-word-cleaner"}}