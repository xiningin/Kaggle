{"cell_type":{"844c4d53":"code","1041c43a":"code","2a1e07a6":"code","4acba792":"code","b0144268":"code","1329ff51":"code","689ffa09":"code","4f86b495":"code","007ffffb":"code","7de40daa":"code","c165df4f":"code","0604d351":"code","035387bf":"code","49c0447f":"code","bf182728":"code","f90b5a4b":"code","371bbc63":"code","fac3ef44":"code","1d5a6d58":"markdown"},"source":{"844c4d53":"import numpy as np\nimport pandas as pd\ntrain_df = pd.read_csv('..\/input\/loan-prediction-problem-dataset\/train_u6lujuX_CVtuZ9i.csv')\ntrain_df.head()","1041c43a":"train_df=train_df.drop(\"Loan_ID\", axis=1)","2a1e07a6":"train_df['Loan_Status']=pd.get_dummies(train_df['Loan_Status'])","4acba792":"train_df.info()","b0144268":"train_df[\"Credit_History\"] = train_df[\"Credit_History\"].astype(object)","1329ff51":"train_df.isnull().sum()","689ffa09":"train_df['LoanAmount']=train_df['LoanAmount'].fillna(train_df['LoanAmount'].mean())\ntrain_df['Loan_Amount_Term']=train_df['Loan_Amount_Term'].fillna(train_df['Loan_Amount_Term'].mean())","4f86b495":"train_df.shape","007ffffb":"train_df=train_df.dropna()","7de40daa":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\ncategorical_columns = ['Gender', 'Married', 'Dependents', 'Education', 'Self_Employed', 'Property_Area', 'Credit_History']\nfig,axes = plt.subplots(4,2,figsize=(12,15))\nfor idx,cat_col in enumerate(categorical_columns):\n    row,col = idx\/\/2,idx%2\n    sns.countplot(x=cat_col,data=train_df,hue='Loan_Status',ax=axes[row,col])\n\n\nplt.subplots_adjust(hspace=1)","c165df4f":"cat_df = train_df[['Gender', 'Married', 'Dependents', 'Education', 'Self_Employed', 'Property_Area', 'Credit_History','Loan_Status']]\nnum_df = train_df[['ApplicantIncome','CoapplicantIncome','LoanAmount','Loan_Amount_Term','Loan_Status']]","0604d351":"cat_df.head()","035387bf":"num_df.head()","49c0447f":"num_df.describe()","bf182728":"num_df.corr(method = 'spearman')","f90b5a4b":"dummy_variable_1 = pd.get_dummies(cat_df['Dependents'])\ndummy_variable_1.head()","371bbc63":"import seaborn as sns\n\ncorr = train_df.corr(method = 'spearman')\n\nsns.heatmap(corr, annot = True)\n\nplt.show()","fac3ef44":"from sklearn import tree\nX=train_df[[]]\nclf = tree.DecisionTreeClassifier()\nclf = clf.fit(X, Y)","1d5a6d58":"This project is done by Hoummada Outman and Mohamed El-eliem, we are engineering students at the National Institut of Statistic and Applied Economy in Rabat Morocco, this project is still on work, comment below for any suggestion, Thanks.... "}}