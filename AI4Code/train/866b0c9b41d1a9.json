{"cell_type":{"38f464d0":"code","20685a9e":"code","ae537d19":"code","3b517319":"code","123e9ea5":"code","84865ad7":"code","c5dbd1b5":"code","4bae19f6":"code","db5625ac":"code","a678050f":"code","b84de4f8":"code","0f64bb1a":"code","45dbb2da":"code","9395f8a5":"code","d33be8c7":"code","3365e0b0":"code","5c64ab35":"code","2b506a73":"code","151985e0":"code","bb7d1d45":"markdown","8a156e3e":"markdown","299bfa15":"markdown","bbf478c6":"markdown","caddf307":"markdown","558f2b6a":"markdown","fbf71cc3":"markdown","ea03b553":"markdown","b00bf05e":"markdown","8a380099":"markdown","d0dbcd56":"markdown","b2d6094b":"markdown","6845b652":"markdown","16692d8b":"markdown","16e6eb62":"markdown","4b3c4e95":"markdown","53b6520c":"markdown","b49ce61b":"markdown","30c2d323":"markdown","4013012d":"markdown","ae6b24c1":"markdown"},"source":{"38f464d0":"from google.cloud import bigquery\nimport pandas as pd\nimport matplotlib.pyplot as plt\n","20685a9e":"client = bigquery.Client()","ae537d19":"query = \"\"\"\n    SELECT * FROM `bigquery-public-data.chicago_crime.crime` ORDER BY RAND() LIMIT 10000\n    \"\"\"\n# execute the query and get the results\nquery_job = client.query(query)\nrows = query_job.result()","3b517319":"df = rows.to_dataframe()\ndf.head()","123e9ea5":"df = df[df[\"year\"] < 2022]","84865ad7":"df[\"primary_type\"].value_counts()","c5dbd1b5":"df[\"primary_type\"].value_counts().head(9).plot(kind=\"barh\")","4bae19f6":"primary_top = df[\"primary_type\"].value_counts().head(9).to_frame(name=\"count\").reset_index()","db5625ac":"# extract year and month from date\ndf[\"year\"] = pd.DatetimeIndex(df[\"date\"]).year\ndf[\"month\"] = pd.DatetimeIndex(df[\"date\"]).month","a678050f":"type_year = df.groupby([\"primary_type\", \"year\"]).size().reset_index(name=\"counts\")","b84de4f8":"type_year_top9 = type_year[type_year[\"primary_type\"].isin(primary_top[\"index\"])]","0f64bb1a":"fig, ax = plt.subplots(3, 3, sharey=True)\nrow = 0\ncolumn = 0\nfor label, group in type_year_top9.groupby(\"primary_type\"):\n    ax[row, column].plot(group[\"year\"], group[\"counts\"])\n    ax[row, column].set_title(label, y=1.0, pad=-14, fontsize=10)\n    if column == 2:\n        column = 0\n    elif column < 2:\n        column += 1\n    if column == 0:\n        row += 1","45dbb2da":"type_year.sort_values(by=[\"primary_type\", \"year\"], inplace=True)","9395f8a5":"type_year[\"percent_change\"] = type_year.groupby([\"primary_type\"]).counts.pct_change()","d33be8c7":"type_year_pct_change_top9_names = type_year.groupby(\"primary_type\").percent_change.mean().reset_index().dropna(subset=[\"percent_change\"]).sort_values(by=\"percent_change\").tail(9)\ntype_year_pct_change_bottom9_names = type_year.groupby(\"primary_type\").percent_change.mean().reset_index().dropna(subset=[\"percent_change\"]).sort_values(by=\"percent_change\").head(9)","3365e0b0":"type_year_pct_change_top9 = type_year[type_year[\"primary_type\"].isin(type_year_pct_change_top9_names[\"primary_type\"])]\ntype_year_pct_change_bottom9 = type_year[type_year[\"primary_type\"].isin(type_year_pct_change_bottom9_names[\"primary_type\"])]","5c64ab35":"fig, ax = plt.subplots(3, 3)\nrow = 0\ncolumn = 0\nfor label, group in type_year_pct_change_top9.groupby(\"primary_type\"):\n    ax[row, column].plot(group[\"year\"], group[\"counts\"])\n    ax[row, column].set_title(label, y=1.0, pad=-14, fontsize=10)\n    if column == 2:\n        column = 0\n    elif column < 2:\n        column += 1\n    if column == 0:\n        row += 1","2b506a73":"fig, ax = plt.subplots(3, 3)\nrow = 0\ncolumn = 0\nfor label, group in type_year_pct_change_bottom9.groupby(\"primary_type\"):\n    ax[row, column].plot(group[\"year\"], group[\"counts\"])\n    ax[row, column].set_title(label, y=1.0, pad=-14, fontsize=10)\n    if column == 2:\n        column = 0\n    elif column < 2:\n        column += 1\n    if column == 0:\n        row += 1","151985e0":"import geopandas as gpd\nfrom shapely.geometry import Point\ngeometry = [Point(xy) for xy in zip(df['longitude'], df['latitude'])]\ngdf = gpd.GeoDataFrame(df, geometry=geometry)\nchicago_map = gpd.read_file(\"..\/input\/chicago-shape\/geo_export_8a51828f-0f28-4264-9a2d-02b2fe44e258.shp\")\nfig, ax = plt.subplots(1, 2)\nchicago_map.plot(ax=ax[0], alpha=0.5, color='grey')\nchicago_map.plot(ax=ax[1], alpha=0.5, color='grey')\ngdf[gdf[\"year\"] < 2010].plot(ax=ax[0], color='red', marker='o', markersize=3, alpha=0.1)\nax[0].set_title(\"Before 2010\")\ngdf[gdf[\"year\"] >= 2010].plot(ax=ax[1], color='red', marker='o', markersize=3, alpha=0.1)\nax[1].set_title(\"After 2010\")","bb7d1d45":"We now plot the number of incidents of these crimes each year:","8a156e3e":"Finally, let us plot the coordinates of the crimes on the map of Chicago. It would be interesting to compare the maps from two different time periods. We therefore create a plot for crime before 2010 and another plot for the crimes after 2010. To do that, we use the geopandas library along with the latitude and longitude columns that are in our data frame:","299bfa15":"We notice that there are suden jumps in each. This shows that the large increase is not due to a steady change, but due to abrupt changes. We also note that these crimes have very low frequency. When the frequency is low, small changes will result in large percentage change.\n\nLet us now plot the types with the smalles percent change, or in other words, the largest percentage drop:","bbf478c6":"We keep only the crime types that are in the top 9 most frequent:","caddf307":"Now we filter the records of those in the top 9 and those in the bottom 9:","558f2b6a":"Now we calculate the average percent change in each group and get the highest nine and lowest nine. We store the names of each type in a list to use later on as a filter:","fbf71cc3":"Here we have a much more instuctive figure. We see a clear and steady drop in most cases, not a series of abrupt changes as we saw above.","ea03b553":"Let us now look at the most frequent types of crimes:","b00bf05e":"We see that in general there is a drop in the number of cases in all types, except perhaps for deceptive practice.\n\nIt would be interesting to see which crimes exhibit the highest increase and which exhibit the highest decrease. To do this, we need to create a new variable that stores the percent change of these counts.\n\nFirst sort the data frame to make sure that the years are in ascending order:","8a380099":"We now convery the results to a data frame that we can use:","d0dbcd56":"First we set up the environment:","b2d6094b":"Let us keep only records before 2022 since the last year with full data is 2021:","6845b652":"We now get the number of each crime type in each year:","16692d8b":"Let us save the most frequent 9 types of criminal activity:","16e6eb62":"Let us take a closer look at the column primary_type which records the type of crime:","4b3c4e95":"We now need to read the data using the BigQuery API:","53b6520c":"We now extract the year and month so that we can group by them later on:","b49ce61b":"The plots show two things. First, there is a clear decrease in crime which is manifested by the lower density of points. Second, the location of the crimes in general are the same. ","30c2d323":"Now calculate the change in the counts for each crime:","4013012d":"We now create and execute the query in order to retrieve the data from the database:","ae6b24c1":"We can now plot. First we plot the types with the highest percent increase:"}}