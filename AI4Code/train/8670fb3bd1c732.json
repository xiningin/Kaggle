{"cell_type":{"f2d47026":"code","574ec715":"code","f05aa137":"code","d0b35482":"code","4482595f":"code","b2e45a73":"code","fc25ed05":"code","bace6827":"code","36a9fd97":"code","f47a1039":"code","cb315e38":"code","b773d0a0":"code","13786570":"code","2019b19f":"code","ea842323":"code","bc64dece":"code","459c4d35":"code","e696f11f":"code","a39683cb":"code","f40b4777":"code","7eb06356":"code","cd00ed0c":"code","183c6232":"code","a1e8d09e":"markdown"},"source":{"f2d47026":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","574ec715":"df=pd.read_csv(\"\/kaggle\/input\/statistics-practicenitin-sir\/teams.csv\")","f05aa137":"df","d0b35482":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nsns.scatterplot(x=\"No of matches\",\n                    y=\"Highest score\", \n                    hue=\"Country\", \n                    data=df)\n","4482595f":"# importing packages\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# loading dataset\ndata = sns.load_dataset(\"iris\")\n\n# draw lineplot\nsns.lineplot(x=\"sepal_length\", y=\"sepal_width\", data=data[data['species']=='setosa'],color=\"blue\")\nsns.lineplot(x=\"sepal_length\", y=\"sepal_width\", data=data[data['species']=='virginica'],ci=95, color=\"red\")\n\nplt.legend(['sl vs sw setosa','sl vs sw virginica'])\nplt.title('Comarison')\n#plt.xlim(4)\n#plt.ylim(1)\nplt.xlabel(\"Sepal length in mm\")\nplt.ylabel(\"Sepal width in mm\")\n\n\n","b2e45a73":"data","fc25ed05":"import seaborn\n\n\nseaborn.set(style='whitegrid')\nfmri = seaborn.load_dataset(\"fmri\")\n\nseaborn.scatterplot(x=\"timepoint\",y=\"signal\",data=fmri)\n","bace6827":"fmri","36a9fd97":"import seaborn\n\n\nseaborn.set(style='whitegrid')\nfmri = seaborn.load_dataset(\"fmri\")\nfmri\n","f47a1039":"seaborn.scatterplot(x=\"timepoint\",\n\t\t\t\t\ty=\"signal\",\n\t\t\t\t\thue=\"region\",\n                    style=\"event\",\n\t\t\t\t\tdata=fmri)\n","cb315e38":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.histplot([0, 1, 2, 3, 4, 5,1,2,1,6], bins=6)\n\nplt.show()","b773d0a0":"import pandas as pd\nimport seaborn as sb\nfrom matplotlib import pyplot as plt\ndf = sb.load_dataset('iris')\nsb.distplot(df['petal_length'],bins=3,kde=False)\nplt.show()","13786570":"import pandas as pd\nimport seaborn as sb\nfrom matplotlib import pyplot as plt\ndf = sb.load_dataset('iris')\nprint(df['petal_length'])\nsb.distplot(df['petal_length'],hist=True)\nplt.show()","2019b19f":"import statistics as s\ndata=[1,2,3,2,4,3,2,3,4,20]\ns.mean(data)\ns.median(data)","ea842323":"sb.distplot(data,hist=True)","bc64dece":"# Import necessary libraries\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\n# Generating dataset of random numbers\nnp.random.seed(1)\nnum_var = np.random.randn(1000)\nnum_var = pd.Series(num_var, name = \"Numerical Variable\")\n\n# Plot histogram\nsns.histplot(data = num_var, kde = True,bins=30)\n","459c4d35":"# Import necessary libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\n# Load dataset\npenguins = sns.load_dataset(\"penguins\")\n\npenguins\n\n\n","e696f11f":"# Plot histogram\nsns.histplot(data = penguins, x = \"body_mass_g\", kde = True)","a39683cb":"# Plot Histogram\nsns.histplot(data = penguins, x = \"body_mass_g\", kde = True, hue = \"species\")\n","f40b4777":"# Import necessary libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\n# Load dataset\ntips = sns.load_dataset(\"tips\")\n\n# Plot histogram\nsns.histplot(data = tips, x = \"size\", stat = \"probability\", discrete = True)\n","7eb06356":"sns.histplot(data = tips, x = \"size\", stat = \"probability\", discrete = True)","cd00ed0c":"sns.histplot(data = tips, x = \"size\", stat = \"count\", discrete = True)","183c6232":"sns.histplot(data = tips, x = \"size\", stat = \"frequency\", discrete = True)","a1e8d09e":"Kernel Density Estimation (KDE) is one of the techniques used to smooth a histogram. Seaborn is a data visualization library based on matplotlib in Python.\nIn this article, we will use seaborn.histplot () to plot a histogram with a density plot."}}