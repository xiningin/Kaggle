{"cell_type":{"dc21cea4":"code","a21995eb":"code","baf7b7da":"code","922395d7":"code","6d05921e":"code","6cf07599":"code","30c28b68":"code","757549f2":"code","fc0367bc":"code","d0b94523":"code","6369173c":"code","6ef4aef9":"code","cea7ae3d":"code","10d268cd":"code","ce4c2e71":"markdown","379c8e2e":"markdown","c26a6f73":"markdown","21054d3d":"markdown","20a8a59e":"markdown","8fe155e8":"markdown","0a4cd1e5":"markdown","86147570":"markdown","7490d3ce":"markdown","35502c76":"markdown","b2ef08b5":"markdown","b9c2c40e":"markdown","98d07c91":"markdown"},"source":{"dc21cea4":"from learntools.core import binder\nbinder.bind(globals())\nfrom learntools.data_cleaning.ex2 import *\nprint(\"Setup Complete\")","a21995eb":"# modules we'll use\nimport pandas as pd\nimport numpy as np\n\n# for Box-Cox Transformation\n\nfrom scipy import stats\n\n# for min_max scaling\nfrom mlxtend.preprocessing import minmax_scaling\n\n# plotting modules\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# read in all our data\nkickstarters_2017 = pd.read_csv(\"..\/input\/kickstarter-projects\/ks-projects-201801.csv\")\n\n# set seed for reproducibility\nnp.random.seed(0)","baf7b7da":"kickstarters_2017.head()","922395d7":"# select the usd_goal_real column\noriginal_data = pd.DataFrame(kickstarters_2017.usd_goal_real)\n\n# scale the goals from 0 to 1\nscaled_data = minmax_scaling(original_data, columns=['usd_goal_real'])\n\n# plot the original & scaled data together to compare\nfig, ax=plt.subplots(1,2,figsize=(15,7))\nsns.distplot(kickstarters_2017.usd_goal_real, ax=ax[0])\nax[0].set_title(\"Original Data\")\nsns.distplot(scaled_data, ax=ax[1])\nax[1].set_title(\"Scaled data\")","6d05921e":"print('Original data\\nPreview:\\n', original_data.head())\nprint('Minimum value:', float(original_data.min()),\n      '\\nMaximum value:', float(original_data.max()))\nprint('_'*30)\n\nprint('\\nScaled data\\nPreview:\\n', scaled_data.head())\nprint('Minimum value:', float(scaled_data.min()),\n      '\\nMaximum value:', float(scaled_data.max()))","6cf07599":"# select the usd_goal_real column\noriginal_goal_data = pd.DataFrame(kickstarters_2017.goal)","30c28b68":"# TODO: Your code here\nscaled_goal_data = minmax_scaling(original_goal_data,columns=[\"goal\"])\n\n# Check your answer\nq1.check()","757549f2":"print(scaled_goal_data.head())\nprint(scaled_goal_data.min())\nprint(scaled_goal_data.max())","fc0367bc":"# Lines below will give you a hint or solution code\n#q1.hint()\n#q1.solution()","d0b94523":"# get the index of all positive pledges (Box-Cox only takes positive values)\n# get only positive pledges (using their indexes)\npositive_pledges = kickstarters_2017.usd_pledged_real.loc[kickstarters_2017.usd_pledged_real > 0]\n\n# normalize the pledges (w\/ Box-Cox)\nnormalized_pledges = pd.Series(stats.boxcox(positive_pledges)[0], \n                               name='usd_pledged_real', index=positive_pledges.index)\n\n# plot both together to compare\nfig, ax=plt.subplots(1,2,figsize=(15,3))\nsns.distplot(positive_pledges, ax=ax[0])\nax[0].set_title(\"Original Data\")\nsns.distplot(normalized_pledges, ax=ax[1])\nax[1].set_title(\"Normalized data\")","6369173c":"print('Original data\\nPreview:\\n', positive_pledges.head())\nprint('Minimum value:', float(positive_pledges.min()),\n      '\\nMaximum value:', float(positive_pledges.max()))\nprint('_'*30)\n\nprint('\\nNormalized data\\nPreview:\\n', normalized_pledges.head())\nprint('Minimum value:', float(normalized_pledges.min()),\n      '\\nMaximum value:', float(normalized_pledges.max()))","6ef4aef9":"# TODO: Your code here!\n\n# get the index of all positive pledges (Box-Cox only takes positive values)\n# get only positive pledges (using their indexes)\npositive_pledges = kickstarters_2017.pledged.loc[kickstarters_2017.pledged > 0]\n\n# normalize the pledges (w\/ Box-Cox)\nnormalized_pledges = pd.Series(stats.boxcox(positive_pledges)[0], \n                               name='pledged', index=positive_pledges.index)\n\n# plot both together to compare\nfig, ax=plt.subplots(1,2,figsize=(15,3))\nsns.distplot(positive_pledges, ax=ax[0])\nax[0].set_title(\"Original Data\")\nsns.distplot(normalized_pledges, ax=ax[1])\nax[1].set_title(\"Normalized data\")\n","cea7ae3d":"# Check your answer (Run this code cell to receive credit!)\nq2.check()","10d268cd":"# Line below will give you a hint\n#q2.hint()","ce4c2e71":"After scaling, all values lie between 0 and 1 (you can read this in the horizontal axis of the second plot above, and we verify in the code cell below).","379c8e2e":"---\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/172650) to chat with other Learners.*","c26a6f73":"We used the \"usd_pledged_real\" column. Follow the same process to normalize the \"pledged\" column. ","21054d3d":"# Get our environment set up\n\nTo practice scaling and normalization, we're going to use a [dataset of Kickstarter campaigns](https:\/\/www.kaggle.com\/kemical\/kickstarter-projects). (Kickstarter is a website where people can ask people to invest in various projects and concept products.)\n\nThe next code cell loads in the libraries and dataset we'll be using. ","20a8a59e":"How does the normalized \"usd_pledged_real\" column look different from when we normalized the \"pledged\" column?  Or, do they look mostly the same?\n\nOnce you have an answer, run the code cell below.","8fe155e8":"# (Optional) More practice\n\nTry finding a new dataset and pretend you're preparing to perform a [regression analysis](https:\/\/www.kaggle.com\/rtatman\/the-5-day-regression-challenge). \n\n[These datasets are a good start!](https:\/\/www.kaggle.com\/rtatman\/datasets-for-regression-analysis)\n\nPick three or four variables and decide if you need to normalize or scale any of them and, if you think you should, practice applying the correct technique.\n\n# Keep going\n\nIn the next lesson, learn how to [**parse dates**](https:\/\/www.kaggle.com\/alexisbcook\/parsing-dates) in a dataset.","0a4cd1e5":"**This notebook is an exercise in the [Data Cleaning](https:\/\/www.kaggle.com\/learn\/data-cleaning) course.  You can reference the tutorial at [this link](https:\/\/www.kaggle.com\/alexisbcook\/scaling-and-normalization).**\n\n---\n","86147570":"Let's start by scaling the goals of each campaign, which is how much money they were asking for.  The plots show a histogram of the values in the \"usd_goal_real\" column, both before and after scaling.  ","7490d3ce":"In this exercise, you'll apply what you learned in the **Scaling and normalization** tutorial.\n\n# Setup\n\nThe questions below will give you feedback on your work. Run the following cell to set up the feedback system.","35502c76":"Use `original_goal_data` to create a new DataFrame `scaled_goal_data` with values scaled between 0 and 1. You must use the `minimax_scaling()` function.","b2ef08b5":"It's not perfect (it looks like a lot pledges got very few pledges) but it is much closer to a normal distribution!","b9c2c40e":"# 2) Practice normalization\n\nNow you'll practice normalization. We begin by normalizing the amount of money pledged to each campaign.","98d07c91":"# 1) Practice scaling\n\nWe just scaled the \"usd_goal_real\" column. What about the \"goal\" column?\n\nBegin by running the code cell below to create a DataFrame `original_goal_data` containing the \"goal\" column."}}