{"cell_type":{"82331f38":"code","d8a2a7aa":"code","a3e567dc":"code","9defc676":"code","d5bc4630":"code","4fab7385":"code","870be26a":"code","a3c629d6":"code","5ba3c786":"code","002a829c":"code","c38707bc":"code","5cbb8000":"code","82d0bdf8":"code","33a24d80":"code","faeef7c9":"code","75e2d48a":"code","038ac560":"markdown","f52c2c53":"markdown","065ed320":"markdown","992a5c7c":"markdown","bdaa9726":"markdown","06f4fe3f":"markdown","22fec009":"markdown","748cd158":"markdown","c1631704":"markdown","9c18e396":"markdown","c0b6eaaf":"markdown","d92bab4f":"markdown","ee6be843":"markdown","1f3cf595":"markdown"},"source":{"82331f38":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport matplotlib.lines as mlines\nimport matplotlib.transforms as mtransforms\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d8a2a7aa":"spot_filepath = ('\/kaggle\/input\/spotify-all-time\/SPOTIFY ALL TIME - ALL METRICS - 1.csv')\nmy_data_filepath = ('\/kaggle\/input\/my-top-songs-20162020\/MY TOP SONGS (2016-2020) - 2.csv')\n\nspotify = pd.read_csv(spot_filepath)\nmy_songs = pd.read_csv(my_data_filepath)","a3e567dc":"spotify.set_index('Rank', inplace=True)\n\nspotify['Album Date'] = pd.to_datetime(spotify['Album Date'])\ns=spotify['Album Date']\n\ns.dt.year.head()\n\nspotify['Year'] = s.dt.year\n\ncolumns_to_drop = ['Popularity', 'Instrumentalness', 'Album Date']\nspotify.drop(columns_to_drop, axis='columns', inplace=True)\n\nspotify.head(10)","9defc676":"song_years = spotify.Year.value_counts().sort_index()\nsong_years.plot(kind='bar', figsize= (13,8))\nplt.xlabel('Year')\nplt.ylabel('Total # of Songs')\nplt.title('Top Songs by Year');","d5bc4630":"avg_list = spotify[['Energy', 'Danceability', 'Happy', 'Speechiness', 'Acousticness']].mean()\navg_list.plot(kind='barh', figsize=(13,7))\nplt.xlabel('Average Score (of Spotify top 725 songs)')\nplt.ylabel('Musical Measurement')\nplt.title('Average Score of Key Song Factors');","4fab7385":"dance_and_energy = spotify[['Energy', 'Danceability']].groupby('Energy').head(10)\ndance_and_energy.plot(kind='scatter', figsize = (11,7), x='Energy', y='Danceability', c='green')\nplt.xlabel('Energy')\nplt.ylabel('Danceability')\nplt.title('Danceability and Energy Correlation')\nplt.xlim(0,100);","870be26a":"energy_by_year = spotify.groupby(['Year'])['Energy'].mean()\nhappy_by_year = spotify.groupby(['Year'])['Happy'].mean()\nhappy_energy = pd.merge(happy_by_year, energy_by_year, left_on='Year',right_on='Year')\nhappy_energy.plot(figsize=(13,7))\nplt.ylabel('Average Score')\nplt.title('Top Song Happiness and Energy (by Song Release Year)');","a3c629d6":"top_artists = spotify['Artist'].value_counts().head(20)\ntop_artists","5ba3c786":"top_genres = spotify['Genres'].value_counts().plot(kind='barh', figsize=(11,7));\ntop_genres\nplt.xlabel('Total # of Songs')\nplt.ylabel('Genre')\nplt.title('Top Genres in Top Spotify Songs');","002a829c":"print('The average tempo in the top songs is', spotify['Tempo'].mean())\nprint('\\nThe average energy score in the top songs is', spotify['Energy'].mean())\nprint('\\nThe average danceability score in the top songs is', spotify['Danceability'].mean())\nprint('\\nThe average loudness score in the top songs is', spotify['Loudness'].mean())\nprint('\\nThe average happiness score in the top songs is', spotify['Happy'].mean())\nprint('\\nThe average speechiness score in the top songs is', spotify['Speechiness'].mean())\nprint('\\nThe average acousticness score in the top songs is', spotify['Acousticness'].mean())","c38707bc":"def time_to_seconds(time):\n    minutes, seconds = [int(t) for t in time.split(':')]\n    return (minutes*60) + seconds\nmins_to_secs = spotify['Time'].apply(time_to_seconds)\nspotify['Time in Seconds'] = mins_to_secs","5cbb8000":"avg_song_time = spotify['Time in Seconds'].mean()\nprint(avg_song_time\/\/60, 'minutes')\nprint(avg_song_time%60,'seconds')","82d0bdf8":"my_songs['Artist'].value_counts().mean()","33a24d80":"my_songs['Artist'].value_counts().head(20)","faeef7c9":"avg_list2 = my_songs[['Energy', 'Danceability', 'Happy', 'Speechiness', 'Acousticness']].mean()\navg_list2.plot(kind='barh', figsize=(13,7))\nplt.xlabel('Average Score of My Top Songs')\nplt.ylabel('Musical Measurement')\nplt.title('Average Score of Key Song Factors');","75e2d48a":"my_songs['Parent Genres'].value_counts().plot(kind='barh', figsize=(11,7));","038ac560":"Pop is the top genre in this list by a wide margin, with Hip Hop and Dance\/Electronic trailing behind.","f52c2c53":"# What makes a Spotify hit?\n\n1. Fast and upbeat; songs should have a tempo of 110 or higher with a catchy, rhythmic beat. \n\n2. Happy, upbeat, and danceable; the average danceability score is 66.7, and the top 20 songs all have a score of 50 or above (with the exception of one).\n\n3. A memorable beat will go further than memorable lyrics. The average speechiness score is 9, meaning that these 725 songs are more likely on this list for the music\/instrumentals and less for the vocals.\n\n4. Try to avoid going longer than 4 minutes in one song. The average song length on this list is 3 minutes and 40 seconds, and listeners are more likely to listen to a whole album if the songs are shorter.","065ed320":"The Happy, Energy, and Danceability average scores all seem to somewhat align, while speechiness and acousticness are lower in these 725 songs.","992a5c7c":"# Data Limitations\n1. This data is pulled from Spotify only. While we can assume that popular songs on Spotify are popular elsewhere, that cannot be confirmed from these datasets. \n\n2. 55% of all Spotify users are between the ages of 18-34, meaning that these trends are based on what a younger demographic is listening to and do not speak for music and music listeners as a whole.\n\n3. These are the top 725 songs out of Spotify's 70 million songs offered on the platform. Additionally, the data is not definite. The playlist is updated weekly because it is ever-changing.","bdaa9726":"# Overall Data Analysis","06f4fe3f":"# Resources\n* Used to pull song stats: https:\/\/www.chosic.com\n\n* Top Spotify songs of all time playlist by Ray Fontaine: https:\/\/open.spotify.com\/playlist\/2YRe7HRKNRvXdJBp9nXFza?si=9957b5d7a7ad4df1\n\n* Spotify revenue and usage statistics: https:\/\/www.businessofapps.com\/data\/spotify-statistics\/\n\n* Insight into why songs are getting shorter: https:\/\/bit.ly\/3HudPAL","22fec009":"# Analyzing Myself","748cd158":"Spotify's users are made up of mostly the younger generation, so it tracks that most of the top played songs on the platform were released in the last 10 years.","c1631704":"Though somewhat clustered, there seems to be at least a slight positive correlation here between a song's energy and its danceability rating. If a song is one of these things, it will usually be the other too.","9c18e396":"None of the artists in my top 20 align with the artists in Spotify's top 20. There are no repeats in the 'My Top Songs' dataset, so each time an artist shows up it's for a unique song. In my top songs, each artist shows up an average of 1.3 times.","c0b6eaaf":"I spend a lot of time on Spotify, both listening to music and curating playlists, and I'd like to think that my taste is somewhat eclectic and well-rounded. I took a look at a few similar measurements to see how my music taste stacks up against 'everyone else's.'","d92bab4f":"My averages look very similar to the measurements of Spotify's top songs. What about genres?","ee6be843":"# Metrics Included\n\n* Time: Duration of the song (given in minutes).\n\n* Danceability: Measure from 0 to 100 that describes how suitable a song is for dancing. This is calculated based on a combination of song elements including beat strength and tempo stability. Essentially, does the song have a rhythm and does it maintain this rhythm for its entire duration?\n\n* Energy: Measure from 0 to 100 that represents how energetic, fast, loud, and noisy the song is. \n\n* Acousticness: Spotify's prediction from 0 to 100 of whether the song is acoustic. 100 represents the highest confidence that the song is acoustic.\n\n* Happy: Measure from 0 to 100 describing the overall positive mood in the song. Tracks with high happiness ratings sound more energetic, lively, etc. while tracks with low happiness scores will sound more sad, angry, or depressed.\n\n* Speechiness: Measure from 0 to 100 based on the spoken words in a song. The closer to 0, the less vocals there are in the song. \n\n* Liveness: Spotify's prediction from 0 to 100 of whether the song is performed live, based on the presence of audience\/background sounds. \n\n* Loudness: Overall loudness of a song in decibels (dB). The lower the number is will indicate a louder song.\n\n* Tempo: Average tempo of a song in beats per minute (BPM).\n\n* Key: The most-used key in the song.\n\n* Year: Year the song was released","1f3cf595":"I wanted to see 1) Do these two metrics track together? and 2) Are there any clear changes in either over the years (with the songs in the dataset)?\n\nFor the most part, songs that rank high in energy also tend to have a higher happiness score. There are a few noticeable discrepanices between the two scores in the above chart.\n\nThere are 5 songs that are classified as Metal on this list. Two were released in 1991, two were released between 2000-2003, and one was released in 2015.\n\nThe steep drop right after 1990 is due to one song - Creep by Radiohead, which was released in 1993 (Happy score: 10, Energy score: 43)."}}