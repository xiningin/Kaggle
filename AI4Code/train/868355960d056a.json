{"cell_type":{"1cb16f1b":"code","1d8f8e63":"code","a0691548":"code","d88221de":"code","4f69ec83":"code","d4e8bfb7":"code","663c5362":"code","8167a1c8":"code","b1de9f15":"code","31ce7b6f":"code","19bb56e8":"code","c02f6774":"code","8d4f7250":"code","40e6fd1b":"code","4804798c":"code","c8fcf95d":"code","e12830c2":"code","754697e8":"code","768f2ba5":"code","dda51128":"code","8742d7da":"code","5348d2f8":"code","ed6c72a9":"code","7c23281d":"code","27dc7929":"code","4da553b5":"code","54f0d728":"code","fb60893c":"code","7da742b2":"code","7a2bf37a":"markdown","8ed4d2dc":"markdown","0180b3b6":"markdown","a9212e1a":"markdown","d3bd1154":"markdown","32234f8e":"markdown","edf25ea1":"markdown","dab5d17e":"markdown","9dd12bff":"markdown","a02c6811":"markdown","350238cb":"markdown","aeddb16c":"markdown","1a53250c":"markdown","e1506e60":"markdown","9ee2fb36":"markdown","6444a744":"markdown","07c6aa6a":"markdown","5ffa37e4":"markdown","4bba828a":"markdown","a2742a8c":"markdown","59e4d4a8":"markdown"},"source":{"1cb16f1b":"import pandas as pd\napple = pd.read_csv('..\/input\/AppleStore.csv')","1d8f8e63":"apple.columns = ['XX','id','apps','size_bytes','currency','price','rating_count_tot','rating_count_ver','user_rating','user_rating_ver','ver','cont_rating','prime_genre','sup_devices','ipadSC','lang_support','vpp_lic']","a0691548":"apple.drop(labels = ['XX'], axis = 1, inplace = True)\napple.head(5)","d88221de":"import matplotlib.pyplot as plt\n\nx = apple['price']\n\napple.price.value_counts()\n\ndf = apple[apple['price'] != 0]\n\n","4f69ec83":"df.head(10)","d4e8bfb7":"\n\nplt.figure(figsize = (15,10))\nplt.style.use(\"fivethirtyeight\")\ndfa = df[df['price'] < 49.99]\nplt.xlabel('Price($)')\ndfa.price.plot(kind = 'hist',log = True)","663c5362":"plt.figure(figsize = (25,15))\nimport seaborn as sns\nsns.stripplot(data = dfa,y = 'price', x = 'prime_genre')","8167a1c8":"dfa.prime_genre.value_counts()","b1de9f15":"df_games = dfa[dfa['prime_genre'] == 'Games']\ndf_edu = dfa[dfa['prime_genre'] == 'Education']\ndf_pv = dfa[dfa['prime_genre'] == 'Photo & Video']\ndf_ut = dfa[dfa['prime_genre'] == 'Utilities']\ndf_hf = dfa[dfa['prime_genre'] == 'Productivity']","31ce7b6f":"plt.figure(figsize = (15,15))\nyrange = [0,30]\n\n# add colors later\n# add labels later\n\nplt.subplot(1,5,1)\nplt.ylim([0,25])\nsns.stripplot(data = df_games, y = 'price', jitter = True, color = '#604e85', )\nplt.xlabel('Games')\n\nplt.subplot(1,5,2)\nplt.ylim(yrange)\nsns.stripplot(data = df_edu, y = 'price', jitter = True , color = '#c55292')\nplt.xlabel('Education')\n\nplt.subplot(1,5,3)\nplt.ylim(yrange)\nsns.stripplot(data = df_pv, y = 'price', jitter = True, color = '#d053cb')\nplt.xlabel('Photo & Video')\n\n\nplt.subplot(1,5,4)\nplt.ylim(yrange)\nsns.stripplot(data = df_ut, y = 'price', jitter = True, color = '#431e54')\nplt.xlabel('Utilities')\n\nplt.subplot(1,5,5)\nplt.ylim(yrange)\nsns.stripplot(data = df_hf, y = 'price', jitter = True, color = '#EF1A78')\nplt.xlabel('Productivity')\n\n\nplt.show()\n","19bb56e8":"l = df.prime_genre.value_counts().index[:4]\n\ndef catag(x):\n    if x in l:\n        return x\n    else:\n        return \"Other\"\n    \n    \napple['broad_genre'] = apple.prime_genre.apply(lambda x: catag(x))","c02f6774":"apple.drop(labels = ['broad_genre'], axis = 1)\n\ndata = pd.DataFrame(apple['broad_genre'].value_counts())\n\ndata.sort_index()\n\nfree  = apple[apple['price'] == 0].broad_genre.value_counts().to_frame(name = 'free').sort_index()\nfree","8d4f7250":"paid = apple[apple['price']!= 0].broad_genre.value_counts().to_frame(name =  'paid').sort_index()\npaid","40e6fd1b":"data_price = data.join(free).join(paid)\ndata_price","4804798c":"data_price.columns = ['total','free','paid']","c8fcf95d":"\ndata_price['free%'] = data_price['free'] * 100\/data_price['total']\ndata_price['paid%'] = data_price['paid']*100\/data_price['total']\n","e12830c2":"data_price","754697e8":"f = data_price['free'].sort_index()\np = data_price['paid'].sort_index()","768f2ba5":"df_price = data_price[['free%','paid%']]","dda51128":"\nplt.figure(figsize =(15,6))\nfree_tuple = tuple(data_price['free%'].tolist())\npaid_tuple = tuple(data_price['paid%'].tolist())\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\n\nN = 5\n\nind = np.arange(N)    # the x locations for the groups\nwidth = 0.55      # the width of the bars: can also be len(x) sequence\n\np1 = plt.bar(ind, free_tuple, width,color  ='#5fc497')\np2 = plt.bar(ind, paid_tuple, width,\n             bottom=free_tuple, color = '#44a8c5')\n\nplt.ylabel('Percentage')\nplt.title('Scores by Categories')\nplt.xticks(ind, ('Games', 'Other', 'Entertainment', 'Education', 'Photo & Video'))\nplt.legend((p1[0], p2[0]), ('Free', 'Paid'))\n\n\n\nplt.show()\n\n\n","8742d7da":"\n\ndf_price.T.plot.pie(subplots = True, figsize = (20,4), colors = ['#5fc497','#44a8c5'] )\nplt.show()","5348d2f8":"def check(x):\n    if(x == 0):\n        return \"free\"\n    else:\n        return \"paid\"\n\napple['Status'] = pd.DataFrame(apple.price.apply(lambda x : check(x)))\n\n","ed6c72a9":"\nplt.figure(figsize = (20,15))\nplt.ylim(0,5)\nsns.violinplot(data = apple, y = 'user_rating', x = 'broad_genre', hue = 'Status', split = True, scale = 'count', palette= ['#44a8c5','#5fc497'] )\nplt.style.use(\"fast\")\nplt.xlabel('Categories')\nplt.ylabel('User Rating')\nplt.title('User Rating Distribution')\nplt.show()","7c23281d":"def size(x):\n    mb = x\/1000000\n    return mb\n    \napple['size_mb'] = apple.size_bytes.apply(lambda x : size(x))\napple.head(5)","27dc7929":"plt.figure(figsize = (15,10))\npaid_apps_desc = apple[apple['price'] <50]\nsns.lmplot(data = paid_apps_desc, x = 'size_mb', y = 'price', col = 'broad_genre',col_wrap= 3,aspect= 1.5\n           ,scatter = True,fit_reg = False, hue  = 'broad_genre', legend_out = True, palette = ['#c973d0' , '#8e52b8' , '#4a4f92', '#4a73ab' , '#649ca1'] )\n\n\n\nplt.show()","4da553b5":"\nplt.figure(figsize = (20,20))\n\n\n\ngroup_names= apple.broad_genre.value_counts().sort_index().index\n\ngroup_size = apple.broad_genre.value_counts().sort_index().tolist()\n\nx = ['Free','Paid']\nsubgroup_names = 5*x\nsubgroup_size = [f[0],p[0],f[1],p[1], f[2],p[2],f[3],p[3],f[4],p[4]]\n\ncol = ['#5fc497','#44a8c5', '#5fc497','#44a8c5' , '#5fc497','#44a8c5', '#5fc497','#44a8c5', '#5fc497','#44a8c5']\n\n# First Ring (outside)\nfig, ax = plt.subplots()\nax.axis('equal')\nmypie, _ = ax.pie(group_size, radius=2.3, labels=group_names, colors = ['#4a4f92','#8e52b8','#c973d0','#4a73ab','#649ca1']) \nplt.setp( mypie, width=0.5, edgecolor='white')\n ","54f0d728":"# First Ring (outside)\nfig, ax = plt.subplots()\nax.axis('equal')\nmypie, _ = ax.pie(group_size, radius= 2.3, labels=group_names, colors = ['#4a4f92','#8e52b8','#c973d0','#4a73ab','#649ca1']) \nplt.setp( mypie, width=0.5, edgecolor='white')\n\n# Second Ring (Inside)\nmypie2, _ = ax.pie(subgroup_size, radius=2.3-0.2, labels=subgroup_names, labeldistance=0.8, colors= col)\nplt.setp( mypie2, width=0.5, edgecolor='white')\nplt.margins(0,0)\n \n# show it\nplt.show()\n","fb60893c":"apple[(apple.user_rating_ver  < apple.user_rating) & (apple.rating_count_ver\/apple.rating_count_tot > 0.5)].prime_genre.value_counts()","7da742b2":"apple[apple.rating_count_ver\/apple.rating_count_tot > 0.5].prime_genre.value_counts()","7a2bf37a":"# Intuition : \n\nMost apps with maxx price < 49.99 lie in the $(0-5) range, as the price of the apps increase the frequency count decrease, as is evident from the histogram.\n\nAs the price increases the frequency count decreases which indicates that ideally price should be lower or equal to $30, after that, the Frequency Count decreases exponentially\n","8ed4d2dc":"# Insights\n        \n- For Games and Photo & Video Genres, the median rating of the apps is approximately 4.5, which suggests that they are better","0180b3b6":"# Intuition\n\nThough it may seem at firs that that the games category is highly sensisitive to consumer behaviour as the number of applications which appears to have degraded in their new verison were from the Games category, yet when we divide the count of apps by the total apps which cross the 50% threshold, we obseerve that the apps which are most senstitive are  \nEntertainment\nPhoto & Video\nand Games","a9212e1a":"# Insights\n- The relation between Price and Genere suggest that there exists no relation between app size and price","d3bd1154":"# 4 - Do they launch paid apps only in gaming category ?","32234f8e":"Tagging lower priced values with \"other\"","edf25ea1":"# 7- Categorization of Apps based on Genre","dab5d17e":"# 6 - As the size of the app increases do they get pricier ?","9dd12bff":"# 9 - Rating (Upgrade\/degrade) based on version update","a02c6811":"### - Intuition\n\n- Games apps were the higest in number followed by Other and Entertainment","350238cb":"# Insights\n   \n- Education has the lest free apps followed by Photo & Video   ","aeddb16c":"# Fin!","1a53250c":"# 5 - Are paid apps good enough ?","e1506e60":"# Intuition :\n\nWith threshhold of $30, the most highly priced apps are in the following Genres :\n- Games\n- Reference\n- Music\n- Productivity\n- Medical","9ee2fb36":"### Intuition\n- Maximum percentage of Free apps were in the Game, Other and Entertainment Genre\n- Maximum percentage of Paid apps were in the Game, Other and Education Genre","6444a744":"# 1- Understanding of Data","07c6aa6a":"# Project Scope\n\n- Understanding of Data\n- Price Distribution based on Genre\n- Price Distribution of Apps (top 5 Genre )\n- Do they launch paid apps only in gaming category ?\n- Are paid apps good enough ?\n- As the size of the app increases do they get pricier ?\n- Categorization of Apps based on Genre\n- Categorization of Apps based on Genre with Free and Paid Split\n- Rating (Upgrade\/degrade) based on version update\n\n","5ffa37e4":"# 2 - Price Distribution based on Category","4bba828a":"# 8 - Categorization of Apps based on Genre with Free and Paid Split","a2742a8c":"Calculating the trotal apps by Category, and paid and free apps in those categories respectively","59e4d4a8":"# 3 - Price Distribution of Apps - Top 5 Categories"}}