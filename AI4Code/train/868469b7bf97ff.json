{"cell_type":{"9306a378":"code","c465cefd":"code","a4de0ad0":"code","b4e1e777":"code","51d06801":"code","9d568d75":"code","5c411bd5":"code","8623d679":"code","40ad61dc":"code","9222a6c6":"code","eff285b0":"code","5773d370":"code","3a08a335":"code","18aae441":"code","60673b21":"code","3c54dc02":"code","3a548f00":"code","7e2139ba":"code","4aa8f05a":"code","e65a4214":"code","294a0d09":"code","0ab327c7":"code","5d19a18f":"code","a103cf6a":"code","52709035":"code","41b5c193":"code","7265c85c":"code","633d3376":"code","ae7ed87c":"code","e422631c":"code","4696fcac":"code","9058fabf":"code","b3844f5b":"code","57e58dc7":"code","69bf23ab":"code","9f01a94e":"code","8253df9f":"code","73b8a466":"code","68849344":"code","5455b26d":"code","2bd636e9":"code","cdde44ce":"code","342cc559":"code","742381f2":"code","b13ae8de":"code","3e32213a":"code","88012bc5":"code","d470b1fb":"code","92a41e96":"code","283e0ed9":"code","4e547787":"markdown","19976805":"markdown","c72df9dc":"markdown","d9c126ac":"markdown","f99eda64":"markdown","be35633c":"markdown","d592f67b":"markdown","10809399":"markdown","dab27317":"markdown","3c8df4fc":"markdown","0e4ae8b9":"markdown","2e42251a":"markdown","9e49bbf0":"markdown","5539c847":"markdown","fe1b2414":"markdown","7a42411e":"markdown","2a2d4569":"markdown","82405367":"markdown","67a456ea":"markdown","6d2c1e62":"markdown","795fc07a":"markdown","903634e0":"markdown","fcf36e78":"markdown","442cdff7":"markdown","666f32c8":"markdown","4277345c":"markdown","4937d44c":"markdown","17a5955b":"markdown","e35c8dca":"markdown","d5855f0d":"markdown","24502f90":"markdown","b2be52f1":"markdown","e5a4afdc":"markdown","f073aea4":"markdown","750ac710":"markdown","49ebf280":"markdown","f7682a28":"markdown","a6265506":"markdown","b3efe804":"markdown","c62f32df":"markdown","c4d148d3":"markdown","e17ea45c":"markdown","ec528308":"markdown","2c68faf2":"markdown","7670279b":"markdown","7f7f9225":"markdown","93fc45d3":"markdown","bda8dcfb":"markdown","dc58c661":"markdown","009d7820":"markdown","837d3d2f":"markdown","dea88570":"markdown","8837077e":"markdown","bad9f9a7":"markdown","2c42f5f8":"markdown"},"source":{"9306a378":"import numpy as np\nimport pandas as pd \nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nimport os\nprint(os.listdir(\"..\/input\"))","c465cefd":"meets = pd.read_csv('..\/input\/meets.csv')\nopenpl = pd.read_csv('..\/input\/openpowerlifting.csv')","a4de0ad0":"meets.head(10)","b4e1e777":"openpl.head(10)","51d06801":"merged = pd.merge(meets, openpl, on='MeetID', how='left')","9d568d75":"merged.head(5)","5c411bd5":"merged.info()","8623d679":"merged.describe()","40ad61dc":"print(merged['Equipment'].value_counts())","9222a6c6":"def strapsInWraps(x):\n    if x == 'Straps':\n        return 'Wraps'\n    return x","eff285b0":"merged['Equipment'] = merged['Equipment'].apply(strapsInWraps)","5773d370":"print(merged['Equipment'].value_counts())","3a08a335":"plt.figure(figsize=(10,7))\nmerged['Sex'].value_counts().plot(kind='bar')\nplt.title('Gender division in the dataframe',fontsize=20)\nplt.yticks(fontsize=15)\nplt.xticks(fontsize=15)\nplt.show()\nprint('Percentage of Male lifters: {}%\\n'.format(round(len(merged[merged['Sex']=='M'])\/len(merged)*100),4))\nprint(merged['Sex'].value_counts())","18aae441":"g = sns.FacetGrid(merged,hue='Sex',size=6,aspect=2,legend_out=True)\ng = g.map(plt.hist,'BodyweightKg',bins=50,alpha=.6)\nplt.title('Bodyweight Kg',fontsize=20)\nplt.yticks(fontsize=15)\nplt.xticks(fontsize=15)\nplt.xlabel('BodyweightKg',fontsize=15)\nplt.legend(loc=1)\nplt.show()","60673b21":"def age_calculate(x):\n    if(x < 10.0):\n        return \"05-10\"\n    if(x >= 10.0 and x < 20.0):\n        return \"10-20\"\n    if(x >= 20.0 and x < 30.0):\n        return \"20-30\"\n    if(x >= 30.0 and x < 40.0):\n        return \"30-40\"\n    if(x >= 40.0 and x < 50.0):\n        return \"40-50\"\n    if(x >= 50.0 and x < 60.0):\n        return \"50-60\"\n    if(x >= 60.0 and x < 70.0):\n        return \"60-70\"\n    if(x >= 70.0 and x < 80.0):\n        return \"70-80\"\n    if(x >= 80.0 and x < 90.0):\n        return \"80-90\"\n    else:\n        return \"90-100\"\n    \nmerged['ageCategory'] = pd.DataFrame(merged.Age.apply(lambda x : age_calculate(x)))","3c54dc02":"firstPlace = merged[(merged.Place == '1')]","3a548f00":"firstPlaceMale = firstPlace[(firstPlace.Sex == 'M')]\nfirstPlaceFemale = firstPlace[(firstPlace.Sex == 'F')]","7e2139ba":"firstPlaceMale.head(5)","4aa8f05a":"firstPlaceFemale.head(5)","e65a4214":"firstPlaceMale.isnull().any()","294a0d09":"firstPlaceMale = firstPlaceMale[np.isfinite(firstPlaceMale['Age'])]","0ab327c7":"uniqueAgeValuesMale = firstPlaceMale.Age.unique() ","5d19a18f":"uniqueAgeValuesMale","a103cf6a":"firstPlaceMale[firstPlaceMale['Age'] == 9.5]","52709035":"plt.figure(figsize=(20, 10))\nplt.tight_layout()\nsns.countplot(firstPlaceMale['ageCategory'], palette=\"muted\")\nplt.title('Distribution of Age for Male Athletes (winners)')","41b5c193":"firstPlaceFemale = firstPlaceFemale[np.isfinite(firstPlaceFemale['Age'])]","7265c85c":"plt.figure(figsize=(20, 10))\nplt.tight_layout()\nsns.countplot(firstPlaceFemale['ageCategory'], palette=\"Set1\")\nplt.title('Distribution of Age for Female Athletes (winners)')","633d3376":"plt.figure(figsize=(40,20))\nplt.tight_layout()\nsns.catplot(x=\"ageCategory\", y=\"BestSquatKg\", kind=\"box\", data=firstPlace, palette=\"Set1\")\nplt.title('Best Squat per Age Category')","ae7ed87c":"firstPlace['BestSquatKg'] = firstPlace['BestSquatKg'].abs()\nfirstPlace['BestBenchKg'] = firstPlace['BestBenchKg'].abs()\nfirstPlace['BestDeadliftKg'] = firstPlace['BestDeadliftKg'].abs()","e422631c":"plt.figure(figsize=(40,20))\nplt.tight_layout()\nsns.catplot(x=\"ageCategory\", y=\"BestSquatKg\", kind=\"box\", data=firstPlace, palette=\"Set1\")\nplt.title('Best Squat per Age Category')\n\nplt.figure(figsize=(40,20))\nplt.tight_layout()\nsns.catplot(x=\"ageCategory\", y=\"BestBenchKg\", kind=\"box\", data=firstPlace, palette=\"Set1\")\nplt.title('Best Bench per Age Category')\n\nplt.figure(figsize=(40,20))\nplt.tight_layout()\nsns.catplot(x=\"ageCategory\", y=\"BestDeadliftKg\", kind=\"box\", data=firstPlace, palette=\"Set1\")\nplt.title('Best Deadlift per Age Category')","4696fcac":"merged['Year'] = pd.DatetimeIndex(merged['Date']).year  ","9058fabf":"merged.head()","b3844f5b":"plt.figure(figsize=(20, 10))\nsns.set(style=\"ticks\", rc={\"lines.linewidth\": 5})\nsns.lineplot('Year', 'Age', data=merged)\nplt.title('Variation of Age for Athletes over time')","57e58dc7":"sns.set(style=\"darkgrid\")\nplt.figure(figsize=(30, 10))\nsns.countplot(x='Year', data=merged, palette='Set2')\nplt.title('Variation of the number of athletes over time')","69bf23ab":"merged.head(5)","9f01a94e":"merged['Place'].dtype","8253df9f":"merged['Place'] = pd.to_numeric(merged.Place, errors='coerce').fillna(0, downcast='infer')","73b8a466":"def is_Winner(x):\n    if(x == 1):\n        return 1\n    else:\n        return 0\n    \nmerged['isWinner'] = pd.DataFrame(merged.Place.apply(lambda x : is_Winner(x)))","68849344":"final_data = merged.drop(['MeetID', 'MeetPath', 'Federation', \n                          'MeetName', 'Date', 'MeetName', \n                          'Name', 'WeightClassKg', 'Division', 'Squat4Kg', \n                          'Bench4Kg', 'Deadlift4Kg', 'Place', 'ageCategory'], axis=1)","5455b26d":"final_data.head(5)","2bd636e9":"catData = pd.get_dummies(final_data, columns=['Sex', 'MeetCountry', 'MeetState', 'MeetTown', 'Equipment'])","cdde44ce":"catData.head(5)","342cc559":"catData.dtypes","742381f2":"catData['Age'] = catData['Age'].fillna(catData['Age'].mean())\ncatData['BodyweightKg'] = catData['BodyweightKg'].fillna(catData['BodyweightKg'].mean())\ncatData['BestSquatKg'] = catData['BestSquatKg'].fillna(catData['BestSquatKg'].mean())\ncatData['BestBenchKg'] = catData['BestBenchKg'].fillna(catData['BestBenchKg'].mean())\ncatData['BestDeadliftKg'] = catData['BestDeadliftKg'].fillna(catData['BestDeadliftKg'].mean())\ncatData['TotalKg'] = catData['TotalKg'].fillna(catData['TotalKg'].mean())\ncatData['Wilks'] = catData['Wilks'].fillna(catData['Wilks'].mean())\ncatData['Year'] = catData['Year'].fillna(catData['Year'].mean())","b13ae8de":"from sklearn.model_selection import train_test_split\nX = catData.drop('isWinner',axis=1)\ny = catData['isWinner']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=101)","3e32213a":"from sklearn.tree import DecisionTreeClassifier\ndtree = DecisionTreeClassifier()","88012bc5":"dtree.fit(X_train, y_train)","d470b1fb":"predictions = dtree.predict(X_test)","92a41e96":"from sklearn.metrics import classification_report,confusion_matrix\nprint(classification_report(y_test,predictions))","283e0ed9":"merged.head(5)","4e547787":"# 1. Importing the modules","19976805":"Let's try with a decision tree.","c72df9dc":"# Index\n\n1. Importing the modules\n2. Reading the Data\n3. Collecting information about the two dataset\n4. Equipment Analysis\n5. Gender Analysis\n6. Weight analysis\n7. Winners Analysis\n8. Variation of athletes age over time\n9. Number of Athletes per year\n10. Some machine learning","d9c126ac":"We can now divide our athletes according to the gender.\n\nBelow we will build a graph and a recap of the numbers to display more information.","f99eda64":"I will try to answer this question using different approaches.\n\nIn our analysis, best lifters will be:\n\n* Boys and Girls that lifts a lot;\n* Professional athletes that lifts a lot according to age category and bodyweight.\n\nLet's start reviewing the head of the data as always.","be35633c":"Let's analyze the unique Age values remained to decide which graph is better to use:","d592f67b":"Okay, at this point we can proceed with the plots:","10809399":"Okay, the first noticeable thing is that we have a negative lift (???).\n\nLet's convert the column values to their absolute value.","dab27317":"# 6. Weight analysis","3c8df4fc":"And now, some columns and statistical information:","0e4ae8b9":"Perfect, now let's create our column:","2e42251a":"# 10. Some machine learning","9e49bbf0":"Ok, we have Null values: to consider only the not nulls we can use *np.isfinite* as below:","5539c847":"To work with time, let's create a column 'Year' starting from the column 'Date'.","fe1b2414":"Okay, it is effectively correct.\n\nAt this point we can try to plot a countplot to see the distribution of the age using the column 'ageCategory' previously created:","7a42411e":"# 9. Number of Athletes per year","2a2d4569":"Let's now plot the data of the number of the athletes every year thanks to our new column 'Year':","82405367":"First of all, we have to create a new \"AgeCategory\" column. \n\nWhy? Because otherwise when creating a plot with the age the column number will be huge (imagine to have 21, 22, 23,24 and so on for each age range).\n\nThat is why we will use the function below to split the ages in ranges.","67a456ea":"As explained in the intro, in competitions, lifts may be performed equipped or un-equipped (typically referred to as 'raw' lifting or 'classic' in the IPF specifically). Equipment in this context refers to a supportive bench shirt or squat\/deadlift suit or briefs. \n\nLet's make an analysis of the equipments!","6d2c1e62":"Another important topic that can be analyzed is the bodyweight of the athletes: with the graph below we can compare male and female using the colours.","795fc07a":"Let's see the result:","903634e0":"Done, let's now see the metrics:","fcf36e78":"# Work in progress...","442cdff7":"We will use get_dummies to create categorical features automatically on target columns:","666f32c8":"Done.\n\nAt this point, the first thing that we have to do to analyze the winners is to create a new dataframe that will include only first place athletes.\n\nWe will do so assigning the filtered dataframe to a new variable, *firstPlace*.","4277345c":"We can now join the two dataframes using as key the NOC column with the Pandas 'Merge' function.","4937d44c":"Let's do the same for female athletes.","17a5955b":"Now let's drop all the non-categorical, not useful or strings columns:","e35c8dca":"Let's check data types again:","d5855f0d":"**Categorical features\/NaN analysis**","24502f90":"Done! Let's move on.","b2be52f1":"Now let's take a look at the result:","e5a4afdc":"**Model**","f073aea4":"# 5. Gender Analysis","750ac710":"[](http:\/\/)Okay, let's now remove NaN's (not a number) values replacing them with the mean of the value of the column:","49ebf280":"# 8. Variation of athletes age over time","f7682a28":"# 2. Reading the Data","a6265506":"![](http:\/\/www.beyondlimitstraining.net\/wp-content\/uploads\/2017\/11\/FullSizeRender.jpg)","b3efe804":"**Best lifts per age category**","c62f32df":"Okay, let's replace  values that are not INT with 0 in the column Place to have the possibility to use it to create our \"isWinner\" column:","c4d148d3":"Well, the first thing that I noticed is that for me it is really strange to see kids in powerlifting competitions: I would like to make a cross check and see all the records in the dataframe with an age equal to 9.5.","e17ea45c":"# 4. Equipment Analysis","ec528308":"To make a graph about the age, we have to consider only the values in which the Age is not null.","2c68faf2":"# **About the Dataset**\n\n**Context**\nThis dataset is a snapshot of the [OpenPowerlifting](https:\/\/www.openpowerlifting.org\/) database as of February 2018. OpenPowerlifting is an organization which tracks meets and competitor results in the sport of powerlifting, in which competitors complete to lift the most weight for their class in three separate weightlifting categories.\n\n**Content**\nThis dataset includes two files. meets.csv is a record of all meets (competitions) included in the OpenPowerlifting database. competitors.csv is a record of all competitors who attended those meets, and the stats and lifts that they recorded at them.\n\nFor more on how this dataset was collected, see the [OpenPowerlifting FAQ](https:\/\/www.openpowerlifting.org\/faq).\n\n**Acknowledgements**\nThis dataset is republished as-is from the [OpenPowerlifting source](https:\/\/www.openpowerlifting.org\/data).\n\n**Inspiration**\nHow much influence does overall weight have on lifting capacity?\nHow big of a difference does gender make? What is demographic of lifters more generally?","7670279b":"We are going to:\n\n* Review the first lines of the data;\n* Use the describe and info functions to collect statistical information, datatypes, column names and other information.","7f7f9225":"Let's try to predict if an athlete won a competion, starting with a review of the data:","93fc45d3":"Straps and wraps are the same, so we can include straps inside wraps","bda8dcfb":"# 11. Who is the best lifter?","dc58c661":"Let's review the best squat, bench, deadlift for all the athletes:","009d7820":"# 3. Collecting information about the two dataset","837d3d2f":"# 7. Winners Analysis","dea88570":"Okay, we can now create a lineplot:","8837077e":"Now, we can split the data to have two dataframes according to the gender of the athletes.","bad9f9a7":"Let's now create a new column, *isWinner*: it will be 1 if the place is 1, in other cases it will be 0.\n\nIt is important because our algorithm needs a categorical variable to make predictions.\n\nTo proceed, let's first check the dtype of the column Place:","2c42f5f8":"# **What is PowerLifting?**\n\nHey, thanks for viewing my Kernel! \n\n**If you like my work, please, leave an upvote: it will be really appreciated and it will motivate me in offering more content to the Kaggle community ! :)**\n\nPowerlifting is a strength sport that consists of three attempts at maximal weight on three lifts: squat, bench press, and deadlift. As in the sport of Olympic weightlifting, it involves the athlete attempting a maximal weight single lift of a barbell loaded with weight plates. Powerlifting evolved from a sport known as \"odd lifts\", which followed the same three-attempt format but used a wider variety of events, akin to strongman competition. Eventually odd lifts became standardized to the current three.\n\nIn competition, lifts may be performed equipped or un-equipped (typically referred to as 'raw' lifting or 'classic' in the IPF specifically). Equipment in this context refers to a supportive bench shirt or squat\/deadlift suit or briefs. In some federations, knee wraps are permitted in the equipped but not un-equipped division; in others, they may be used in both equipped and un-equipped lifting. Weight belts, knee sleeves, wrist wraps and special footwear may also be used, but are not considered when distinguishing equipped from un-equipped lifting.\n\nCompetitions take place across the world. Powerlifting has been a Paralympic sport (bench press only) since 1984 and, under the IPF, is also a World Games sport. Local, national and international competitions have also been sanctioned by other federations operating independently of the IPF.\n\nSource: [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Powerlifting)"}}