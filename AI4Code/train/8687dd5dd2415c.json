{"cell_type":{"78de8cf6":"code","b24ed0f9":"code","0fbe570a":"code","74040994":"code","01fad75a":"code","75f3c4a0":"code","ccf96a3d":"code","cfaad4bd":"code","50c16707":"code","188cf58e":"code","d51eb89b":"code","5ef119b0":"code","36726117":"code","4209230b":"code","2bfd0137":"code","bab6a4cc":"code","d8373216":"code","3fcd0f26":"code","352db65d":"code","30d7922f":"code","c9221824":"code","d6b2fb03":"code","244dedcd":"code","6d212a0f":"code","f4ede5a2":"markdown","6b9a1722":"markdown","cc71f47b":"markdown","cbaf8062":"markdown","abbb41ed":"markdown","b4961f18":"markdown","a1c96cc1":"markdown","095315e6":"markdown","405c99cb":"markdown","3819e729":"markdown","54692a71":"markdown","ea75f4dd":"markdown","4d91a1df":"markdown","8d0b2857":"markdown","9d21aa9a":"markdown","51bcb168":"markdown","510e3629":"markdown","57d8fc23":"markdown","e1106b75":"markdown","bf2e71e0":"markdown"},"source":{"78de8cf6":"import numpy as np\nimport pandas as pd\n\n# visualisation\nimport matplotlib.pyplot as plt\nimport seaborn as sns","b24ed0f9":"train_df = pd.read_csv('..\/input\/train.csv')  # train set\ntest_df  = pd.read_csv('..\/input\/test.csv')   # test  set\ncombine  = train_df + test_df","0fbe570a":"train_df.describe(include = 'all')","74040994":"train_df.head()","01fad75a":"test_df.describe(include = 'all')","75f3c4a0":"test_df.head()","ccf96a3d":"plt.title('Age distribution on Titanic',fontsize = 16)\nplt.hist(train_df['Age'], bins=np.arange(train_df['Age'].min(), train_df['Age'].max()+1))\nplt.show()","cfaad4bd":"# code from https:\/\/www.kaggle.com\/startupsci\/titanic-data-science-solutions\ng = sns.FacetGrid(train_df, col='Survived')\ng.map(plt.hist, 'Age', bins=20)","50c16707":"# code from https:\/\/stackoverflow.com\/questions\/31029560\/plotting-categorical-data-with-pandas-and-matplotlib\ntrain_df['Sex'].value_counts().plot(kind='bar')","188cf58e":"# plt.hist(train_df['Fare'], bins=np.arange(train_df['Fare'].min(), train_df['Fare'].max()+1))\n\nplt.boxplot(train_df['Fare'])\nplt.show()","d51eb89b":"plt.title('Fare and survival',fontsize = 16)\nplt.scatter(train_df['Fare'],train_df['Survived'])\nplt.show()","5ef119b0":"# Following code from https:\/\/stackoverflow.com\/questions\/8202605\/matplotlib-scatterplot-colour-as-a-function-of-a-third-variable\n# Function to map the colors as a list from the input list of x variables\ndef pltcolor(lst):\n    cols=[]\n    for l in lst:\n        if l == 1:\n            cols.append('red')\n        elif l == 2:\n            cols.append('blue')\n        else:\n            cols.append('green')\n    return cols\n# Create the colors list using the function above\ncolor_cols = pltcolor(train_df['Pclass'])\n\nplt.scatter(x=train_df['Fare'],y=train_df['Survived'],s=20,c=color_cols) #Pass on the list created by the function here\nplt.title('Fare and survival sorted by class',fontsize = 16)\nplt.show()","36726117":"# Following code from https:\/\/www.kaggle.com\/startupsci\/titanic-data-science-solutions\ngrid = sns.FacetGrid(train_df, col='Survived', row='Pclass', size=2.5, aspect=1.6)\ngrid.map(plt.hist, 'Age', alpha=.75, bins=20)\ngrid.add_legend();","4209230b":"# How many people paid $0 fare\n(train_df.Fare == 0).sum()","2bfd0137":"total = train_df.isnull().sum().sort_values(ascending = False)\npercent = round(train_df.isnull().sum().sort_values(ascending = False)\/len(train_df)*100, 2)\npd.concat([total, percent], axis = 1,keys= ['Total', 'Percent'])\n\n# from 2b in https:\/\/www.kaggle.com\/masumrumi\/a-statistical-analysis-ml-workflow-of-titanic\/notebook","bab6a4cc":"# train_df[train_df.Age.isnull()]","d8373216":"total = test_df.isnull().sum().sort_values(ascending = False)\npercent = round(test_df.isnull().sum().sort_values(ascending = False)\/len(test_df)*100, 2)\npd.concat([total, percent], axis = 1,keys= ['Total', 'Percent'])","3fcd0f26":"# code from https:\/\/www.kaggle.com\/startupsci\/titanic-data-science-solutions\ntrain_df.info()\nprint('_'*40)\ntest_df.info()","352db65d":"combine = [train_df, test_df]","30d7922f":"# code from https:\/\/www.kaggle.com\/startupsci\/titanic-data-science-solutions\nfor dataset in combine:\n    dataset['Sex'] = dataset['Sex'].map( {'female': 1, 'male': 0} ).astype(int)\n\ntrain_df.head()","c9221824":"# code from https:\/\/www.kaggle.com\/startupsci\/titanic-data-science-solutions\n# guess_ages is an external array which we will fill in the guessed age\nguess_ages = np.zeros((2,3))\nguess_ages","d6b2fb03":"for dataset in combine:\n    for i in range(0, 2):\n        for j in range(0, 3):\n            guess_df = dataset[(dataset['Sex'] == i) & \\\n                                  (dataset['Pclass'] == j+1)]['Age'].dropna()\n\n            # age_mean = guess_df.mean()\n            # age_std = guess_df.std()\n            # age_guess = rnd.uniform(age_mean - age_std, age_mean + age_std)\n\n            age_guess = guess_df.median()\n\n            # Convert random age float to nearest .5 age\n            guess_ages[i,j] = int( age_guess\/0.5 + 0.5 ) * 0.5\n            \n    for i in range(0, 2):\n        for j in range(0, 3):\n            dataset.loc[ (dataset.Age.isnull()) & (dataset.Sex == i) & (dataset.Pclass == j+1),\\\n                    'Age'] = guess_ages[i,j]\n\n    dataset['Age'] = dataset['Age'].astype(int)\n\ntrain_df.head()","244dedcd":"total = train_df.isnull().sum().sort_values(ascending = False)\npercent = round(train_df.isnull().sum().sort_values(ascending = False)\/len(train_df)*100, 2)\npd.concat([total, percent], axis = 1,keys= ['Total', 'Percent'])","6d212a0f":"print(\"Before\", train_df.shape, test_df.shape, combine[0].shape, combine[1].shape)\n\ntrain_df = train_df.drop(['Ticket', 'Cabin', 'Embarked'], axis=1)\ntest_df = test_df.drop(['Ticket', 'Cabin', 'Embarked'], axis=1)\ncombine = [train_df, test_df]\n\n\"After\", train_df.shape, test_df.shape, combine[0].shape, combine[1].shape","f4ede5a2":"There are 687 missing cabin location data, which might be a problem for predicting lifes with their class. While there are 19.87% of age data is missing, so we can either: \n* omit the data points (not really as it is about 20% of the data), or\n* use the average age, or\n* use another field to predict the age. In here we use **decision tree** to help us. ","6b9a1722":"# Step 2: Describe the Dataframes","cc71f47b":"## Visualising the Variables ##\nNext we would like to visualise the results from the tables above. ","cbaf8062":"## Assumptions for Analysis\nThe following are the assumptions to the situation so that any following analysis would work. \n* Age is normally distributed due to the large sample pool (follows CLT). \n* Missing values of age could be substituted. ","abbb41ed":"From above we could infer the following information: \n* There are 1132 passengers that is used for this exercise, which is 50% of the passengers on board the Titanic. \n* There are few elderly (age 65 to 80) on board. \n* The mode of ages are around 15 to 35 and below 4. \n* There are 15 people paid $0 on board, they could be treated as missing data or because they are children so paid no fare. ","b4961f18":"## Data Types ##\nKnowing the data type will help us when machine learning. For example, string data is not a favourite in machine learning and we may want to omit them. We could also put categorical data with dummy numbers. ","a1c96cc1":"However, there are missing values in Age. As what we have decided before, we are going to let decision tree to fill in the data. ","095315e6":"# Step 3: Convert Data","405c99cb":"Now we can see there are no missing values in age. ","3819e729":"In the following, we find the features of data from the dataframes. The data dictionary is stored in https:\/\/www.kaggle.com\/c\/titanic\/data. ","54692a71":"It is the same as above so as the conclusion. ","ea75f4dd":"Now we can drop any redundant features for analysis. ","4d91a1df":"We could separate the variables of fare and survival into a grid plot. From below we can see that: \n* There are more Class 1 passengers are more likely to be survived, while the converse for Class 3 passengers. \n* Children and infants are more likely survive if they are in Class 1 and 2. ","8d0b2857":"## Missing Values\nLet us find out the missing values and see if we need to omit the data rows or substitute by average. ","9d21aa9a":"The 'Fare and Survival' plot poses an interesting feature, where there are people who have paid $0 on board. We need to see how many are they at below: ","51bcb168":"**Sidenote:** Is there any states labels that are aligned as a coordination? For example, age with the predicted survival rate or actually something that a person who have 2 values of and they are linked. \n\n*I don't think so as this dataset does not capture interactions*","510e3629":"However, there are few missing data that are represented by '0' instead of Nan. For example, the fare is an important example. We can either: \n* use the average fare, or\n* use another field to predict the age. In here we use **decision tree** to help us. ","57d8fc23":"Specificially by looking at the output below: \n* The name contains their title and it could (possibly) validate their gender. \n* Sex is a categorical data and we can convert them into dummy variables. \n* Embarked is a categorical data and we can convert them into dummy variables. Since the causation is unintuitive, we could consider this later. ","e1106b75":"# Step 1: Import the Data","bf2e71e0":"In this step we convert the sex data as a dummy variable for machine learning. First, we combine the training and validation data sets. "}}