{"cell_type":{"a4754918":"code","a14ad693":"code","5005015d":"code","694bc9a8":"code","379aef6e":"code","652e9e08":"code","9f342125":"code","d3172e6e":"code","354d0ae5":"code","09791051":"code","f4909261":"code","c24efe0f":"code","9a6365c5":"code","dde8f82b":"code","7ce802f9":"code","fe83d91d":"code","87c878cf":"code","0ce88d05":"code","457b0734":"code","62a4195b":"code","e7465f50":"code","b0d89667":"code","639f86a3":"code","b1f6abcb":"code","924372f7":"code","82f09db1":"code","bfbd5a70":"code","28cec48e":"code","8e0b2878":"code","d26e2d79":"code","38586d3b":"code","1a467c00":"code","cc09aa1d":"code","69791cd4":"code","cd7306b0":"code","84334e47":"code","ce482e25":"code","eb22c9b5":"code","c454453c":"markdown","810be0a7":"markdown","49d7bb2b":"markdown"},"source":{"a4754918":"import pandas as pd\nimport numpy as np\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.preprocessing import OneHotEncoder\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom sklearn.metrics import accuracy_score","a14ad693":"data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndata1 = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","5005015d":"X_train = data.drop(['Survived', 'Cabin'], axis = 1)\ny_train = data.Survived","694bc9a8":"X_test = data1.drop(['Cabin'], axis = 1)\ngender_submission = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\ny_test = gender_submission.drop(['PassengerId'], axis = 1)","379aef6e":"X_test","652e9e08":"X_test.isnull().sum()","9f342125":"X_train","d3172e6e":"X_train.isnull().sum()","354d0ae5":"X_train.info()","09791051":"X_train.isnull().sum()","f4909261":"X_train.info()","c24efe0f":"X_test.isnull().sum()","9a6365c5":"from sklearn.impute import KNNImputer","dde8f82b":"imputer = KNNImputer(n_neighbors=500)\nimputer.fit(X_train[['Age']])\nX_train['Age'] = imputer.transform(X_train[['Age']])\n\nX_test['Age'] = imputer.transform(X_test[['Age']])","7ce802f9":"imputer_fare = KNNImputer(n_neighbors=500)\nimputer_fare.fit(X_train[['Fare']])\n\nX_test['Fare'] = imputer_fare.transform(X_test[['Fare']])","fe83d91d":"X_train.isnull().sum()","87c878cf":"X_test.isnull().sum()","0ce88d05":"most_frequent_embarked = X_train['Embarked'].value_counts().index[0]\nX_train['Embarked'] = X_train['Embarked'].fillna(most_frequent_embarked)","457b0734":"X_train.isnull().sum()","62a4195b":"X_test.isnull().sum()","e7465f50":"X_train = X_train.drop(['PassengerId', 'Name', 'Ticket'], axis = 1)\nX_test = X_test.drop(['PassengerId', 'Name', 'Ticket'], axis = 1)","b0d89667":"X_train.info()","639f86a3":"X_test.info()","b1f6abcb":"encoder = OneHotEncoder(handle_unknown='ignore')\nencoder.fit(X_train[['Sex', 'Embarked']])\n\nX_train = encoder.transform(X_train[['Sex', 'Embarked']])\n\nX_test = encoder.transform(X_test[['Sex', 'Embarked']])","924372f7":"X_train.shape","82f09db1":"X_test.shape","bfbd5a70":"clf_rf = RandomForestClassifier()\nparametrs = ({})","28cec48e":"grid_search_cv_rf = GridSearchCV(clf_rf, parametrs, n_jobs = -1)","8e0b2878":"grid_search_cv_rf.fit(X_train, y_train)","d26e2d79":"grid_search_cv_rf.best_params_","38586d3b":"best_clf = grid_search_cv_rf.best_estimator_","1a467c00":"y_predicted_rf = best_clf.predict(X_test)","cc09aa1d":"y_predicted_rf[:10]","69791cd4":"np.array(y_test)[:10]","cd7306b0":"accuracy_score(y_predicted_rf, y_test)","84334e47":"out = pd.DataFrame(y_predicted_rf, columns = ['Survived'])","ce482e25":"out = pd.DataFrame(gender_submission['PassengerId']).join(out)","eb22c9b5":"out.to_csv('out.csv', index = False)","c454453c":"## RF","810be0a7":"## \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435","49d7bb2b":"### \u0417\u0430\u043c\u0435\u043d\u0430 NaN"}}