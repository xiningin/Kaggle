{"cell_type":{"e5af70b7":"code","8790d60a":"code","0c05761f":"code","7fb73528":"code","901143e7":"code","3976f0d6":"code","18c1be39":"code","d5abfd00":"code","bee88ebb":"code","a17d6c45":"code","62a1453c":"code","52929d3d":"code","5730c931":"code","04930bd2":"code","ed3c541d":"code","18efc1dc":"code","c203374f":"code","f4e6f02f":"code","643633ea":"code","c1688934":"code","b7225de0":"code","b49ad8b9":"code","827b24aa":"code","ab76037c":"code","d6b004cf":"code","b4dce23b":"code","8d6fe952":"code","6bc2ac9e":"code","bd04f2b9":"code","fae3e116":"code","235d2977":"code","01fe2178":"code","e289ac47":"code","0735e9be":"code","c99b808d":"markdown","80ca0083":"markdown"},"source":{"e5af70b7":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n%matplotlib inline","8790d60a":"data = pd.read_csv(\"..\/input\/titanic\/train.csv\")","0c05761f":"data.head()","7fb73528":"data.drop('PassengerId', axis=1, inplace=True)","901143e7":"data.describe()","3976f0d6":"fig = plt.figure(figsize=(10,4))\nfig.add_subplot(121)\ndata.Survived[data['Sex'] == 'male'].value_counts().plot(kind='pie')\nfig.add_subplot(122)\ndata.Survived[data['Sex'] == 'female'].value_counts().plot(kind='pie')","18c1be39":"from sklearn.preprocessing import LabelEncoder\ndata['Sex'] = LabelEncoder().fit_transform(data['Sex'])","d5abfd00":"data['Name'] = data['Name'].map(lambda x: x.split(',')[1].split('.')[0].strip())\ntitles = data['Name'].unique()\ntitles","bee88ebb":"data['Age'].fillna(-1, inplace=True)\n\nmedians = dict()\nfor title in titles:\n    median = data.Age[(data[\"Age\"] != -1) & (data['Name'] == title)].median()\n    medians[title] = median\n    \nfor index, row in data.iterrows():\n    if row['Age'] == -1:\n        data.loc[index, 'Age'] = medians[row['Name']]\n\ndata.head()","a17d6c45":"fig = plt.figure(figsize=(15,6))\n\ni=1\nfor title in data['Name'].unique():\n    fig.add_subplot(3, 6, i)\n    plt.title('Title : {}'.format(title))\n    data.Survived[data['Name'] == title].value_counts().plot(kind='pie')\n    i += 1","62a1453c":"replacement = {\n    'Don': 0,\n    'Rev': 0,\n    'Jonkheer': 0,\n    'Capt': 0,\n    'Mr': 1,\n    'Dr': 2,\n    'Col': 3,\n    'Major': 3,\n    'Master': 4,\n    'Miss': 5,\n    'Mrs': 6,\n    'Mme': 7,\n    'Ms': 7,\n    'Mlle': 7,\n    'Sir': 7,\n    'Lady': 7,\n    'the Countess': 7\n}\n\ndata['Name'] = data['Name'].apply(lambda x: replacement.get(x))\n\nfrom sklearn.preprocessing import StandardScaler\ndata['Name'] = StandardScaler().fit_transform(data['Name'].values.reshape(-1, 1))","52929d3d":"data.head()[['Pclass', 'Age', 'SibSp', 'Parch', 'Ticket', 'Cabin', 'Embarked']]","5730c931":"data['Age'] = StandardScaler().fit_transform(data['Age'].values.reshape(-1, 1))","04930bd2":"data['Fare'].fillna(-1, inplace=True)\nmedians = dict()\nfor pclass in data['Pclass'].unique():\n    median = data.Fare[(data[\"Fare\"] != -1) & (data['Pclass'] == pclass)].median()\n    medians[pclass] = median\nfor index, row in data.iterrows():\n    if row['Fare'] == -1:\n        data.loc[index, 'Fare'] = medians[row['Pclass']]\ndata['Fare'] = StandardScaler().fit_transform(data['Fare'].values.reshape(-1, 1))","ed3c541d":"fig = plt.figure(figsize=(15,4))\n\ni=1\nfor pclass in data['Pclass'].unique():\n    fig.add_subplot(1, 3, i)\n    plt.title('Class : {}'.format(pclass))\n    data.Survived[data['Pclass'] == pclass].value_counts().plot(kind='pie')\n    i += 1","18efc1dc":"data['Pclass'] = StandardScaler().fit_transform(data['Pclass'].values.reshape(-1, 1))","c203374f":"fig = plt.figure(figsize=(15,8))\ni = 0\nfor parch in data['Parch'].unique():\n    fig.add_subplot(2, 4, i+1)\n    plt.title('Parents \/ Child : {}'.format(parch))\n    data.Survived[data['Parch'] == parch].value_counts().plot(kind='pie')\n    i += 1","f4e6f02f":"replacement = {\n    6: 0,\n    4: 0,\n    5: 1,\n    0: 2,\n    2: 3,\n    1: 4,\n    3: 5\n}\ndata['Parch'] = data['Parch'].apply(lambda x: replacement.get(x))\ndata['Parch'] = StandardScaler().fit_transform(data['Parch'].values.reshape(-1, 1))","643633ea":"data.drop('Ticket', axis=1, inplace=True)","c1688934":"data['Embarked'].value_counts()","b7225de0":"data['Embarked'].fillna('S', inplace=True)\nfig = plt.figure(figsize=(15,4))\ni = 1\nfor embarked in data['Embarked'].unique():\n    fig.add_subplot(1, 3, i)\n    plt.title('Embarked : {}'.format(embarked))\n    data.Survived[data['Embarked'] == embarked].value_counts().plot(kind='pie')\n    i += 1","b49ad8b9":"replacement = {\n    'S': 0,\n    'Q': 1,\n    'C': 2\n}\n\ndata['Embarked'] = data['Embarked'].apply(lambda x: replacement.get(x))\ndata['Embarked'] = StandardScaler().fit_transform(data['Embarked'].values.reshape(-1, 1))\ndata.head()['Embarked']","827b24aa":"data['SibSp'].unique()","ab76037c":"fig = plt.figure(figsize=(15,8))\ni = 1\nfor sibsp in data['SibSp'].unique():\n    fig.add_subplot(2, 4, i)\n    plt.title('SibSp : {}'.format(sibsp))\n    data.Survived[data['SibSp'] == sibsp].value_counts().plot(kind='pie')\n    i += 1","d6b004cf":"replacement = {\n    5: 0,\n    8: 0,\n    4: 1,\n    3: 2,\n    0: 3,\n    2: 4,\n    1: 5\n}\n\ndata['SibSp'] = data['SibSp'].apply(lambda x: replacement.get(x))\ndata['SibSp'] = StandardScaler().fit_transform(data['SibSp'].values.reshape(-1, 1))\ndata.head()['SibSp']","b4dce23b":"data['Cabin'].fillna('U', inplace=True)\ndata['Cabin'] = data['Cabin'].apply(lambda x: x[0])\ndata['Cabin'].unique()","8d6fe952":"fig = plt.figure(figsize=(15,12))\ni = 1\nfor cabin in data['Cabin'].unique():\n    fig.add_subplot(3, 3, i)\n    plt.title('Cabin : {}'.format(cabin))\n    data.Survived[data['Cabin'] == cabin].value_counts().plot(kind='pie')\n    i += 1","6bc2ac9e":"replacement = {\n    'T': 0,\n    'U': 1,\n    'A': 2,\n    'G': 3,\n    'C': 4,\n    'F': 5,\n    'B': 6,\n    'E': 7,\n    'D': 8\n}\n\ndata['Cabin'] = data['Cabin'].apply(lambda x: replacement.get(x))\ndata['Cabin'] = StandardScaler().fit_transform(data['Cabin'].values.reshape(-1, 1))\ndata.head()['Cabin']","bd04f2b9":"data.head()","fae3e116":"from sklearn.model_selection import train_test_split\nsurvived = data['Survived']\ndata.drop('Survived', axis=1, inplace=True)\nX_train, X_test, y_train, y_test = train_test_split(data, survived, test_size=0.2, random_state=42)","235d2977":"from sklearn.ensemble import RandomForestClassifier","01fe2178":"model = RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',\n                       max_depth=10, max_features='sqrt', max_leaf_nodes=None,\n                       min_impurity_decrease=0.0, min_impurity_split=None,\n                       min_samples_leaf=5, min_samples_split=2,\n                       min_weight_fraction_leaf=0.0, n_estimators=6,\n                       n_jobs=None, oob_score=False, random_state=None,\n                       verbose=0, warm_start=False)","e289ac47":"model.fit(X_train, y_train)","0735e9be":"score = model.score(X_test, y_test)\nscore","c99b808d":"### Exploratory Data Analysis","80ca0083":"# Titanic"}}