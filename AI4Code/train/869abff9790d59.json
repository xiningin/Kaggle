{"cell_type":{"4f86eb9b":"code","0ee7a98e":"code","ae79ee37":"code","580a50cf":"code","13414ede":"code","ed0f390e":"code","ddda9541":"code","495ba774":"code","07e79f1e":"code","b327ac05":"code","6a37df80":"code","ec06ff55":"code","a6004288":"code","757a1c1c":"code","b219dc6a":"code","60616179":"code","1cd39be0":"code","7bc221df":"code","b29a9faa":"code","5a0b4d21":"code","4d146089":"code","b4a14bce":"code","e233f103":"code","f9010c13":"code","646fe0b4":"code","deeb33f5":"code","eea6b845":"code","73ae3e4a":"code","747e2370":"markdown","7d7141a9":"markdown","817330ca":"markdown","7ae9e578":"markdown","60e4370d":"markdown","6139112a":"markdown","0eda0184":"markdown","9c80cd54":"markdown","a9eba4cf":"markdown","e7504eba":"markdown","4352553c":"markdown","d57987fe":"markdown","8c5a30c6":"markdown","f0397d05":"markdown","ce92a6ba":"markdown","9ce477f6":"markdown","9669dfa1":"markdown","402cc102":"markdown","38253563":"markdown","1033e742":"markdown","a22aa749":"markdown","24e920b8":"markdown"},"source":{"4f86eb9b":"# Work with Data - the main Python libraries\nimport numpy as np\nimport pandas as pd\n\n# For import data from API\nimport requests\n\n# Visualization\nimport matplotlib.pyplot as plt\n\n# Modeling and Prediction\nfrom fbprophet import Prophet\nfrom sklearn.metrics import mean_absolute_error, r2_score\n\nimport warnings\nwarnings.simplefilter('ignore')","0ee7a98e":"prediction_period = 7  # Period for prediction, days","ae79ee37":"# Download data via API from the Portal of RNBO of Ukraine: https:\/\/api-covid19.rnbo.gov.ua\/\n# https:\/\/api-covid19.rnbo.gov.ua\/charts\/main-data?mode=ukraine\ncode_region = 4914  # \"Zhytomyrsk\u0430 oblast\"\nprint(f'Download daily data from the Portal of RNBO of Ukraine')\nmyfile = requests.get(f'https:\/\/api-covid19.rnbo.gov.ua\/charts\/main-data?mode=ukraine&country={code_region}')\nopen('data', 'wb').write(myfile.content)\ndf_data = pd.read_json('data')\ndf_data","580a50cf":"# Display the last 10 rows of the dataframe \"df_data\"\ndf_data.tail(10)","13414ede":"# Calculation daily data for number of confirmed cases\ndf_data['n_confirmed'] = df_data['confirmed'].diff()\n#df_data['n_confirmed'] = df_data['confirmed']","ed0f390e":"# Filtering the missing data\ndata = df_data[['dates','n_confirmed']].dropna().reset_index(drop=True)\ndata['n_confirmed'] = data['n_confirmed'].astype('int')\ndata.tail(4)","ddda9541":"# Delete the last zero value\ndata = data[:-1]\ndata.tail(3)","495ba774":"# Build the plot\ndata['n_confirmed'].plot()","07e79f1e":"# Prepairing data for modeling with Prophet\ndata.columns = ['ds', 'y']\ndata.tail()","b327ac05":"# Removing zero values\ndata = data[data['y'] > 0].reset_index(drop=True)\ndata","6a37df80":"# Devide dataset to training and validation datasets\nvalid = data[(len(data)-prediction_period):].reset_index(drop=True)\ndata = data[:(len(data)-prediction_period)]\nvalid","ec06ff55":"data.tail(prediction_period)","a6004288":"# The smallest increase in value\ndata.loc[303:305]","757a1c1c":"# Selection data with the biggest wave\ndf2 = data[304:].reset_index(drop=True)\ndf2","b219dc6a":"df2.plot()","60616179":"# Build Prophet model\nmodel = Prophet()\n\n# Training model for all data\nmodel.fit(data)","1cd39be0":"# Build Prophet model with parameters ans structure \n# from the notebook https:\/\/www.kaggle.com\/vbmokin\/covid-19-in-ukraine-eda-forecasting \n# but without holidays\nmodel2 = Prophet(daily_seasonality=False, weekly_seasonality=False, yearly_seasonality=False, \n                changepoint_range=1, changepoint_prior_scale = 0.3)\nmodel2.add_seasonality(name='weekly', period=7, fourier_order=12, \n                      mode = 'multiplicative', prior_scale = 0.24)\nmodel2.add_seasonality(name='triply', period=3, fourier_order=2, \n                      mode = 'multiplicative', prior_scale = 0.15)\n\n# Training model for df2\nmodel2.fit(df2)","7bc221df":"def prediction_accuracy(valid, model):\n    # Calculation prediction accuracy for valid dataset by model\n    \n    future = model.make_future_dataframe(periods = prediction_period)   # Valid data prediction\n    forecast = model.predict(future)\n    forecast = forecast[(len(forecast)-prediction_period):]\n    forecast[forecast['yhat'] < 0]['yhat'] = 0\n    y_val = forecast['yhat'].round()  # Prediction    \n    y_target = valid['y']             # Real data\n    \n    return round(mean_absolute_error(y_val, y_target)*100\/valid['y'].sum(), 2)    ","b29a9faa":"# Make a forecast for prediction_period days ahead\nfuture = model.make_future_dataframe(periods = prediction_period)\nforecast = model.predict(future)\n\n# Make values integer, and replace negative values with zero\nfeature_all = ['yhat_lower', 'yhat', 'yhat_upper']\nforecast[feature_all] = forecast[feature_all].astype('int')\nfor feature in feature_all:\n    forecast.loc[forecast[feature] < 0, feature] = 0","5a0b4d21":"# Draw plot of the values with forecasting data\nfigure = model.plot(forecast, xlabel = 'Date', ylabel = 'Number of confirmed cases')","4d146089":"# Draw plot with the components (trend and weekly seasonality) of the forecasts\nfigure_component = model.plot_components(forecast)","b4a14bce":"# Ouput the prediction for the next prediction_period days\nforecast[['ds', 'yhat_lower', 'yhat', 'yhat_upper']].tail(prediction_period)","e233f103":"print(f\"Relative error (WAPE) for model = {prediction_accuracy(valid, model)}%\")","f9010c13":"# Make a forecast for prediction_period days ahead\nfuture2 = model2.make_future_dataframe(periods = prediction_period)\nforecast2 = model2.predict(future2)\n\n# Make values integer, and replace negative values with zero\nforecast2[feature_all] = forecast2[feature_all].astype('int')\nfor feature in feature_all:\n    forecast2.loc[forecast2[feature] < 0, feature] = 0","646fe0b4":"# Draw plot of the values with forecasting data\nfigure2 = model2.plot(forecast2, xlabel = 'Date', ylabel = 'Number of confirmed cases')","deeb33f5":"# Draw plot with the components (trend and weekly seasonality) of the forecasts\nfigure_component2 = model2.plot_components(forecast2)","eea6b845":"# Ouput the prediction for the next prediction_period days\nforecast2[['ds', 'yhat_lower', 'yhat', 'yhat_upper']].tail(prediction_period)","73ae3e4a":"print(f\"Relative error (WAPE) for model = {prediction_accuracy(valid, model2)}%\")","747e2370":"## 1. Import libraries<a class=\"anchor\" id=\"1\"><\/a>\n\n[Back to Table of Contents](#0.1)","7d7141a9":"### All list of API parameters\nhttps:\/\/api-covid19.rnbo.gov.ua\/charts\/main-data?mode=ukraine\n\n### Example for region \"Zhytomyrsk\u0430 oblast\"\ncode_region = 4914","817330ca":"### For the biggest wave - df2","7ae9e578":"### For all data","60e4370d":"I hope you find this notebook useful and enjoyable.\n\nYour comments and feedback are most welcome.\n\n[Go to Top](#0)","6139112a":"<a class=\"anchor\" id=\"0\"><\/a>\n# COVID-19 in one region of Ukraine","0eda0184":"### For the biggest wave - df2","9c80cd54":"**ADDITIONAL TASK:** Try to specify another number (instead of 304) as a reference point or other.\n\nLook all data with plot here: https:\/\/covid19.rnbo.gov.ua\/","a9eba4cf":"## 5. Prediction & Visualization<a class=\"anchor\" id=\"5\"><\/a>\n\n[Back to Table of Contents](#0.1)","e7504eba":"## 3. EDA & FE<a class=\"anchor\" id=\"3\"><\/a>\n\n[Back to Table of Contents](#0.1)","4352553c":"**TASK:** Make similar calculations for the dataframe df2:\n1. Make a forecast for it for prediction_period=7 days ahead.\n2. Draw a plot of the values with forecasting data.\n3. Draw plot with the components (trend and weekly seasonality) of the forecasts.\n4. Ouput the prediction for the next prediction_period=7 days.","d57987fe":"**ADDITIONAL TASK:** Try changing the parameters of the Prophet model and evaluate how this will affect the shape of the curve and the accuracy of the simulation","8c5a30c6":"<a class=\"anchor\" id=\"0.1\"><\/a>\n## Table of Contents\n\n1. [Import libraries](#1)\n1. [Download data](#2)\n1. [EDA & FE](#3)\n1. [Modeling](#4)\n1. [Prediction & Visualization](#5)","f0397d05":"## 4. Modeling<a class=\"anchor\" id=\"4\"><\/a>\n\n[Back to Table of Contents](#0.1)","ce92a6ba":"## 2. Download data<a class=\"anchor\" id=\"2\"><\/a>\n\n[Back to Table of Contents](#0.1)","9ce477f6":"## Dataset [COVID-19 in Ukraine: daily data](https:\/\/www.kaggle.com\/vbmokin\/covid19-in-ukraine-daily-data)","9669dfa1":"The adequacy of a simple model is very poor!","402cc102":"## Acknowledgements\n\n### Datasets:\n- official data of Ukraine (https:\/\/covid19.rnbo.gov.ua\/) - via API\n- my dataset [COVID-19 in Ukraine: daily data](https:\/\/www.kaggle.com\/vbmokin\/covid19-in-ukraine-daily-data) - for the next commits\n\n### Notebooks:\n* [AI-ML-DS Training. L1A : COVID in UA - Prophet](https:\/\/www.kaggle.com\/vbmokin\/ai-ml-ds-training-l1t-covid-in-ua-prophet?scriptVersionId=63736090)\n* [COVID in UA: Prophet with 4, Nd seasonality](https:\/\/www.kaggle.com\/vbmokin\/covid-in-ua-prophet-with-4-nd-seasonality)\n* [Data Science for tabular data: Advanced Techniques](https:\/\/www.kaggle.com\/vbmokin\/data-science-for-tabular-data-advanced-techniques)\n* [EDA for tabular data: Advanced Techniques](https:\/\/www.kaggle.com\/vbmokin\/eda-for-tabular-data-advanced-techniques)\n* [COVID-19 in Ukraine: EDA & Forecasting](https:\/\/www.kaggle.com\/vbmokin\/covid-19-in-ukraine-eda-forecasting)\n* [COVID-19 new cases in 70 countries - FB Prophet](https:\/\/www.kaggle.com\/vbmokin\/covid-19-new-cases-in-70-countries-fb-prophet)\n\n### Libraries from GitHub:\n- https:\/\/facebook.github.io\/prophet\/\n- https:\/\/facebook.github.io\/prophet\/docs\/\n- https:\/\/github.com\/facebook\/prophet","38253563":"### Selection data with the biggest wave","1033e742":"<a class=\"anchor\" id=\"0\"><\/a>\n# [AI-ML-DS : Training for beginners](https:\/\/www.kaggle.com\/vbmokin\/ai-ml-ds-training-for-beginners-in-kaggle). Level 2 (simple). 2021\n## Kaggle GM, Prof. [@vbmokin](https:\/\/www.kaggle.com\/vbmokin)\n### [Vinnytsia National Technical University](https:\/\/vntu.edu.ua\/), Ukraine\n#### [Chair of the System Analysis and Information Technologies](http:\/\/mmss.vntu.edu.ua\/index.php\/ua\/)","a22aa749":"The adequacy of a more complex model is much better.","24e920b8":"### For all data"}}