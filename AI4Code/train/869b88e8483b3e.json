{"cell_type":{"f6f80d68":"code","c08c0c80":"code","e88438de":"code","206dbc72":"code","6bc8005a":"code","8a586c17":"code","5990089a":"code","47558b6a":"code","31203858":"code","4eed1350":"code","944e1b12":"code","30eb326d":"code","235ea777":"code","24795b27":"code","cf331f47":"code","1c8454ce":"code","cd1d79a9":"code","34d6e1fe":"code","1b62cc56":"code","2ebe27a9":"code","76de9659":"code","d224fca2":"code","9eda11e7":"markdown","682a8c25":"markdown","05a07f0c":"markdown","351fe431":"markdown","36543355":"markdown","26c6a1e6":"markdown","143fbee8":"markdown","b21d80a0":"markdown","384079b4":"markdown","22455e39":"markdown","e63abf49":"markdown","17d17324":"markdown","6ce60a83":"markdown","e0ffddb7":"markdown","28643e5b":"markdown","272e72a0":"markdown"},"source":{"f6f80d68":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c08c0c80":"pip install openpyxl","e88438de":"import pandas as pd\nimport numpy as np\nimport plotly.express as px","206dbc72":"facebook = pd.read_excel('..\/input\/social-media-platform-with-most-subscribers\/MostSubscribers.xlsx',sheet_name = 'Facebook')\ninstagram = pd.read_excel('..\/input\/social-media-platform-with-most-subscribers\/MostSubscribers.xlsx',sheet_name = 'Instagram')\nyoutube = pd.read_excel('..\/input\/social-media-platform-with-most-subscribers\/MostSubscribers.xlsx',sheet_name = 'YouTube')","6bc8005a":"facebook.head()","8a586c17":"instagram.head()","5990089a":"youtube.head()","47558b6a":"facebook.info()","31203858":"instagram.info()","4eed1350":"youtube.info()","944e1b12":"facebook.isnull().sum()","30eb326d":"instagram.isnull().sum()","235ea777":"youtube.isnull().sum()","24795b27":"df1 = facebook.sort_values(by = 'Followers(millions)',ascending = False).reset_index().head(10)\n\nfig = px.bar(df1 , x= 'PageName', y = 'Followers(millions)',color = 'Followers(millions)',\n             color_continuous_scale = 'blues',\n             hover_data = ['Rank','Description'],\n             hover_name = 'PageName'\n             \n            )\nfig.update_layout(title = 'Top 10 Pages with the most followers(Facebbok)',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'MidnightBlue')\n                 \n                 )\nfig.show()","cf331f47":"df1 = facebook['Country'].value_counts().sort_values(ascending = True).reset_index()\n\nfig = px.bar(df1, y= 'index', x = 'Country', color ='Country',orientation='h',\n             color_continuous_scale = 'blues',\n             labels = {\"Country\":\"Count\",\"index\":\"Country\"}\n            \n            )\n\nfig.update_layout(title = 'The distribution of countries(Facebook)',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'MidnightBlue')\n                 \n                 )\nfig.show()","1c8454ce":"df1 = instagram.sort_values(by = 'Followers(millions)',ascending = False).reset_index().head(10)\n\nfig = px.bar(df1 , x= 'Owner', y = 'Followers(millions)',color = 'Followers(millions)',\n             color_continuous_scale = 'purp',\n             hover_data = ['Rank','Username','Profession_or_Activity'],\n             hover_name = 'Owner')\n\nfig.update_layout(title = 'Top 10 Users with the most followers(Instagram)',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'Indigo')\n                 \n                 )\nfig.show()","cd1d79a9":"df1 = instagram['Country'].value_counts().sort_values(ascending = True).reset_index()\n\nfig = px.bar(df1, y= 'index', x = 'Country', color ='Country',orientation='h',\n             color_continuous_scale = 'purp',\n             labels = {\"Country\":\"Count\",\"index\":\"Country\"}\n            \n            )\n\nfig.update_layout(title = 'The distribution of countries(Instagram)',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'Indigo')\n                 \n                 )\nfig.show()","34d6e1fe":"df1 = youtube.sort_values(by = 'Subscribers(millions)',ascending = False).reset_index().head(10)\n\nfig = px.bar(df1 , x= 'Channel', y = 'Subscribers(millions)',color = 'Subscribers(millions)',\n             color_continuous_scale = 'reds',\n             hover_data = ['Rank','Category'],\n             hover_name = 'Channel'\n            \n            )\n\nfig.update_layout(title = 'Top 10 Channels with the most Subscribers(Youtube)',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'FireBrick')\n                 \n                 )\nfig.show()","1b62cc56":"youtube['Category'].unique()","2ebe27a9":"df1 = youtube['Category'].value_counts().sort_values(ascending = True).reset_index()\n\nfig = px.bar(df1, y= 'index', x = 'Category', color ='Category',orientation='h',\n             color_continuous_scale = 'reds',\n             labels = {\"Category\":\"Count\",\"index\":\"Category\"})\n\nfig.update_layout(title = 'The distribution of Categories(Youtube)',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'FireBrick')\n                 \n                 )\nfig.show()","76de9659":"df1 = youtube['Country'].value_counts().sort_values(ascending = True).reset_index()\n\nfig = px.bar(df1, y= 'index', x = 'Country', color ='Country',orientation='h',\n             color_continuous_scale = 'reds',\n             labels = {\"Country\":\"Count\",\"index\":\"Country\"}\n            \n            )\n\nfig.update_layout(title = 'The distribution of Countries(Youtube)',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'FireBrick')\n                 \n                 )\nfig.show()","d224fca2":"df1 = youtube['Language'].value_counts().sort_values(ascending = True).reset_index()\n\nfig = px.bar(df1, y= 'index', x = 'Language', color ='Language',orientation='h',\n             color_continuous_scale = 'reds',\n             labels = {\"Language\":\"Count\",\"index\":\"Language\"}\n            \n            )\n\nfig.update_layout(title = 'The distribution of Languages(Youtube)',\n                  title_x = 0.5,\n                  title_font = dict(size = 16, color = 'FireBrick')\n                 \n                 )\nfig.show()","9eda11e7":"**There are no missing values.**","682a8c25":"**There are no missing values.**","05a07f0c":"**<font color =DarkSlateBlue size = 5>Information about data<\/font>**","351fe431":"**<font color =DarkSlateBlue size = 5>Thank you for reading!<\/font>**","36543355":"**Please consider upvoting & checking out more of my work if you found this interesting & valuable! Thanks so much!**","26c6a1e6":"**<font color =DarkSlateBlue size = 5>Data analysis<\/font>**","143fbee8":"**<font color =DarkSlateBlue size = 5>Check the null values<\/font>**","b21d80a0":"**<font color =DarkSlateBlue size = 5>Load data<\/font>**","384079b4":"**<font color =FireBrick size = 4>Youtube<\/font>**","22455e39":"**<font color =\tRebeccaPurple size = 4>Instagram<\/font>**","e63abf49":"**There are no missing values.**","17d17324":"**<font color =DarkSlateBlue size = 5>Show first five rows of data<\/font>**","6ce60a83":"**<font color =DarkSlateBlue size = 5>Install openpyxl<\/font>**","e0ffddb7":"**<font color =DarkSlateBlue size = 5>Import related libraries<\/font>**","28643e5b":"**<font color =\tRebeccaPurple size = 4>Facebook<\/font>**","272e72a0":"[Link to My Kaggle](http:\/\/www.kaggle.com\/carriech)"}}