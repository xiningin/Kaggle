{"cell_type":{"0e2d90c3":"code","d1294add":"code","e304edda":"code","6910b65d":"code","1e1b4e9e":"code","1b80de1b":"code","814bc7d1":"code","b9462f42":"code","6f1652c0":"code","f6f584e5":"code","5e0c4106":"code","75dcebd1":"code","83ec13f5":"code","f235b56e":"code","7710ea80":"code","b2173a04":"code","7472794a":"code","c7cace5f":"code","8a645810":"code","031ae31c":"code","20a7a3de":"code","c223d164":"code","60206fea":"code","75c32445":"code","e83680eb":"code","9f03eec5":"code","9892ab77":"code","8a1aa270":"code","0700080d":"code","3b11f146":"code","1260e525":"markdown","cac8f035":"markdown","089b8b47":"markdown","6f5570e6":"markdown","a70560a2":"markdown","c243ab31":"markdown","35c4e9ba":"markdown","f995134d":"markdown","af8feadf":"markdown","8c4fb933":"markdown","877b2302":"markdown","614403fe":"markdown"},"source":{"0e2d90c3":"# \uc2dc\ud5d8\ud658\uacbd \uc138\ud305 (\ucf54\ub4dc \ubcc0\uacbd X, \uc2dc\ud5d8\ud658\uacbd\uacfc \uc720\uc0ac\ud558\uac8c \ud30c\uc77c\uc77d\uae30 \uad6c\ud604)\nimport pandas as pd\ndf = pd.read_csv(\"..\/input\/pima-indians-diabetes-database\/diabetes.csv\")\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test = train_test_split(df, test_size=0.2, shuffle=True, random_state=2021)\ny_train = X_train['Outcome']\nX_train = X_train.drop(columns=['Outcome'])\ny_test = X_test['Outcome']\nX_test = X_test.drop(columns=['Outcome'])\n\nX_train.shape, y_train.shape, X_test.shape, y_test.shape","d1294add":"# \ub77c\uc774\ube0c\ub7ec\ub9ac\nimport pandas as pd","e304edda":"# \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 (\uc0dd\ub7b5)\nX_train.shape, y_train.shape, X_test.shape","6910b65d":"X_train.head()","1e1b4e9e":"y_train.value_counts()","1b80de1b":"X_train.info()","814bc7d1":"X_train.isnull().sum()","b9462f42":"X_test.isnull().sum()","6f1652c0":"X_train.describe()","f6f584e5":"# describe()\uc5d0\uc11c min\uc774 0 \uc73c\ub85c \ub098\uc624\uae30 \ubd88\uac00\ub2a5\ud55c \ud53c\ucc98\uc5d0 \ub300\ud55c \uce74\uc6b4\ud2b8 \ud30c\uc545\nzero_features = ['Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI']\nprint('Train Feature:\\n', X_train[X_train[zero_features]==0].count())\nprint('    ')\nprint('Ttest Feature:\\n', X_test[X_test[zero_features]==0].count())","5e0c4106":"# \uac01 \ud53c\ucc98\uc5d0\uc11c 0\uc744 \uc81c\uc678\ud55c \uac12\uc758 \ud3c9\uade0\uc744 \uad6c\ud55c \ud6c4 \uadf8 \uac12\uc744 0 \uac12\uc5d0 \ub300\uccb4\ndf_mean = X_train[X_train[zero_features] != 0][zero_features].mean()\nprint(df_mean)\n\n\nX_train[zero_features] = X_train[zero_features].replace(0, df_mean)\n\n# 0 \uac12\uc744 \uac00\uc9c4 \ud53c\ucc98\uac00 \uc874\uc7ac\ud558\ub294\uc9c0 \ud655\uc778\nprint(X_train[X_train[zero_features]==0].count())","75dcebd1":"# \uac01 Test \ud53c\ucc98\uc5d0\uc11c 0\uc744 \uc81c\uc678\ud55c \uac12\uc758 \ud3c9\uade0\uc744 \uad6c\ud55c \ud6c4 \uadf8 \uac12\uc744 0 \uac12\uc5d0 \ub300\uccb4\ndf_mean_test = X_test[X_test[zero_features] != 0][zero_features].mean()\nprint(df_mean_test)\n\n\nX_test[zero_features] = X_test[zero_features].replace(0, df_mean_test)\n\n# 0 \uac12\uc744 \uac00\uc9c4 \ud53c\ucc98\uac00 \uc874\uc7ac\ud558\ub294\uc9c0 \ud655\uc778\nprint(X_test[X_test[zero_features]==0].count())","83ec13f5":"X_test.describe()","f235b56e":"# \uc2a4\ucf00\uc77c\ub9c1\nfrom sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nX_train_scaled = scaler.fit_transform(X_train)\n\n# test \ub370\uc774\ud130\ub294 transform() \ub9cc \uc218\ud589\nX_test_scaled = scaler.transform(X_test)","7710ea80":"from sklearn.model_selection import train_test_split\n\nx_tr, x_te, y_tr, y_te = train_test_split(X_train_scaled, y_train, test_size=0.3, random_state=123)\n","b2173a04":"from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(random_state=123)\n\nrf.fit(x_tr, y_tr)\npred = rf.predict(x_te)\npred_proba = rf.predict_proba(x_te)\nprint('pred_proba:', pred_proba)\n\n","7472794a":"from sklearn.metrics import roc_auc_score\n\nprint('roc_auc:',roc_auc_score(y_te, pred_proba[:, 1]))","c7cace5f":"rf.fit(X_train_scaled, y_train)\npredict = rf.predict(X_test_scaled)\nsub = pd.DataFrame({'index': X_test.index, 'Outcome': predict})\nsub.to_csv('1234.csv', index=False)\n\nsub.head()","8a645810":"#\uc774\uc0c1\uce58 \ucc98\ub9ac\n#Train\nprint('Glucose:',len(X_train[X_train['Glucose']==0]))\nprint('BloodPressure:',len(X_train[X_train['BloodPressure']==0]))\nprint('SkinThickness:',len(X_train[X_train['SkinThickness']==0]))\nprint('Insulin:',len(X_train[X_train['Insulin']==0]))\nprint('BMI:',len(X_train[X_train['BMI']==0]))","031ae31c":"#Test\nprint('Glucose:',len(X_test[X_test['Glucose']==0]))\nprint('BloodPressure:',len(X_test[X_test['BloodPressure']==0]))\nprint('SkinThickness:',len(X_test[X_test['SkinThickness']==0]))\nprint('Insulin:',len(X_test[X_test['Insulin']==0]))\nprint('BMI:',len(X_test[X_test['BMI']==0]))","20a7a3de":"# \ud3ec\ub3c4\ub2f9 \uc774\uc0c1\uce58 \uc0ad\uc81c\ndel_idx = X_train[(X_train['Glucose']==0)].index\ndel_idx","c223d164":"print('Glucose \uc774\uc0c1\uce58 \uc0ad\uc81c \uc804 :', X_train.shape, y_train.shape)\nX_train = X_train.drop(index=del_idx, axis=0)\ny_train = y_train.drop(index=del_idx, axis=0)\nprint('Glucose \uc774\uc0c1\uce58 \uc0ad\uc81c \ud6c4 :', X_train.shape, y_train.shape)","60206fea":"# \ud3ec\ub3c4\ub2f9\uc744 \uc81c\uc678\ud55c \uc774\uc0c1\uce58, \ud3c9\uade0\uac12\uc73c\ub85c \ub300\uccb4\ncols = ['BloodPressure', 'SkinThickness', 'Insulin', 'BMI']\ncols_mean = X_train[cols].mean()\nX_train[cols].replace(0, cols_mean)","75c32445":"# \uc2a4\ucf00\uc77c\ub9c1\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.fit_transform(X_test)","e83680eb":"# \uc2a4\ucf00\uc77c \ud6c4 \ub370\uc774\ud130 \ud655\uc778\npd.DataFrame(X_train_scaled, columns=X_train.columns).head()","9f03eec5":"from sklearn.svm import SVC\nmodel = SVC(random_state=2022)\nmodel.fit(X_train_scaled, y_train)\npredictions = model.predict(X_test)","9892ab77":"round(model.score(X_train_scaled, y_train) * 100, 2) ","8a1aa270":"output = pd.DataFrame({'idx': y_test.index, 'Outcome': predictions})\noutput.head()","0700080d":"# \uc218\ud5d8\ubc88\ud638.csv\ub85c \ucd9c\ub825\noutput.to_csv('1234567.csv', index=False)","3b11f146":"round(model.score(X_test, y_test) * 100, 2) # 60\uc810\ub300\ub85c \ub0ae\uc740 \uc815\ud655\ub3c4\ub97c \ubcf4\uc5ec\uc90c","1260e525":"\ud2b8\ub808\uc778\uc5d0\ub9cc 0\uc774 \uc788\ub294 \ud3ec\ub3c4\ub2f9(Glucose)\ub294 \uc0ad\uc81c\n\ub098\uba38\uc9c0\ub294 \ud3c9\uade0\uac12\uc73c\ub85c \ub300\uccb4 \ud558\uc5ec \uc774\uc0c1\uce58\ub97c \ucc98\ub9ac\ud568","cac8f035":"## \uacb0\uacfc \uccb4\uc810 (\uc218\ud5d8\uc790\ub294 \uc54c \uc218 \uc5c6\ub294 \ubd80\ubd84\uc784)","089b8b47":"## EDA","6f5570e6":"## [\ucc38\uace0]\uc791\uc5c5\ud6152 \ubb38\uad6c\n- \ucd9c\ub825\uc744 \uc6d0\ud558\uc2e4 \uacbd\uc6b0 print() \ud568\uc218 \ud65c\uc6a9\n- \uc608\uc2dc) print(df.head())\n- getcwd(), chdir() \ub4f1 \uc791\uc5c5 \ud3f4\ub354 \uc124\uc815 \ubd88\ud544\uc694\n- \ud30c\uc77c \uacbd\ub85c \uc0c1 \ub0b4\ubd80 \ub4dc\ub77c\uc774\ube0c \uacbd\ub85c(C: \ub4f1) \uc811\uadfc \ubd88\uac00\n\n### \ub370\uc774\ud130 \ud30c\uc77c \uc77d\uae30 \uc608\uc81c\n- import pandas as pd\n- X_test = pd.read_csv(\"data\/X_test.csv\")\n- X_train = pd.read_csv(\"data\/X_train.csv\")\n- y_train = pd.read_csv(\"data\/y_train.csv\")\n\n### \uc0ac\uc6a9\uc790 \ucf54\ub529\n\n### \ub2f5\uc548 \uc81c\ucd9c \ucc38\uace0\n- \uc544\ub798 \ucf54\ub4dc \uc608\uce21\ubcc0\uc218\uc640 \uc218\ud5d8\ubc88\ud638\ub97c \uac1c\uc778\ubcc4\ub85c \ubcc0\uacbd\ud558\uc5ec \ud65c\uc6a9\n- pd.DataFrame({'cust_id': X_test.cust_id, 'gender': pred}).to_csv('003000000.csv', index=False)","a70560a2":"## Start","c243ab31":"# \uc544\ub798\ub294 \uc6d0\ubcf8(?) \ud480\uc774","35c4e9ba":"## \ub370\uc774\ud130 \uc804\ucc98\ub9ac","f995134d":"------------------------------------------------------------------------------------------------","af8feadf":"## \ub77c\uc774\ube0c\ub7ec\ub9ac \ubc0f \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30","8c4fb933":"## \ub2f9\ub1e8\ubcd1 \uc5ec\ubd80 \ud310\ub2e8\n- \uc774\uc0c1\uce58 \ucc98\ub9ac (Glucose, BloodPressure, SkinThickness, Insulin, BMI\uac00 0\uc778 \uac12)","877b2302":"**\uac01 \ud53c\ucc98 \uc124\uba85**\n- Pregnancies : \uc784\uc2e0\ud69f\uc218\n- Glucose : \ud3ec\ub3c4\ub2f9 \ubd80\ud558 \uac80\uc0ac \uc218\uce58\n- BloodPressure : \ud608\uc555 (mm Hg)\n- SkinThickness : \ud314 \uc0bc\ub450\uadfc \ub4a4\ucabd\uc758 \ud53c\ud558\uc9c0\ubc29 \uce21\uc815\uac12(mm)\n- Insulin : \ud608\uccad \uc778\uc290\ub9b0(mu U\/ml)\n- BMI : \uccb4\uc9c8\ub7c9\uc9c0\uc218 ( \uccb4\uc911(kg) \/(\ud0a4(m))^2 )\n- DiabetesPedigreeFunction : \ub2f9\ub1e8 \ub0b4\ub825 \uac00\uc911\uce58 \uac12\n- Age : \ub098\uc774\n- Outcome : \ud074\ub798\uc2a4 \uacb0\uc815 \uac12(0 \ub610\ub294 1)","614403fe":"\ucd5c\uc18c\uac12(min)\uc774 0 \uc778 \ud53c\ucc98\uac00 \uc5ec\ub7ec\uac1c \uc788\uc74c. \n- Pregnancies : \uc784\uc2e0\ud69f\uc218 >  \ub294 0 \uc774 \uac00\ub2a5\n- Glucose : \ud3ec\ub3c4\ub2f9 \ubd80\ud558 \uac80\uc0ac \uc218\uce58 > 0\uc774 \ubd88\uac00\ub2a5\n- BloodPressure : \ud608\uc555 (mm Hg) > 0\uc774 \ubd88\uac00\ub2a5\n- SkinThickness : \ud314 \uc0bc\ub450\uadfc \ub4a4\ucabd\uc758 \ud53c\ud558\uc9c0\ubc29 \uce21\uc815\uac12(mm) > 0\uc774 \ubd88\uac00\ub2a5\n- Insulin : \ud608\uccad \uc778\uc290\ub9b0(mu U\/ml) > 0\uc774 \ubd88\uac00\ub2a5\n- BMI : \uccb4\uc9c8\ub7c9\uc9c0\uc218 ( \uccb4\uc911(kg) \/(\ud0a4(m))^2 ) > 0\uc774 \ubd88\uac00\ub2a5\n- DiabetesPedigreeFunction : \ub2f9\ub1e8 \ub0b4\ub825 \uac00\uc911\uce58 \uac12 > 0\uc774 \ubd88\uac00\ub2a5\n- Age : \ub098\uc774 > 0\uc774 \ubd88\uac00\ub2a5"}}