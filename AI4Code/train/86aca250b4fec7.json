{"cell_type":{"c8d84684":"code","3590cab0":"code","8a1ed882":"code","835ad1d4":"code","3b53abbb":"code","d262dcc1":"code","fa114b82":"code","1cc701ea":"code","cca237a2":"code","3ccb84ca":"code","b6937f6a":"code","b63b8cd8":"code","c0dba51f":"code","35120dc8":"code","65e00ca4":"code","c00bf2f1":"code","582ce137":"code","fb0b7814":"code","f0e51568":"code","0083f9af":"code","b61c527d":"code","55d11429":"code","a619feb1":"code","643fac14":"code","b3270e55":"code","1e373dee":"code","d15bdb9f":"code","2169e41b":"code","fac4247d":"code","df91b674":"code","56763b55":"code","4d4dc4ba":"code","d49b8a00":"code","f633b179":"code","d9ad1057":"code","b65a5db3":"code","b433baef":"code","4d5fea27":"code","47fc4a24":"code","d8d36451":"code","48e318a6":"code","1b60083f":"code","588f9ca2":"code","40ca6f3a":"code","b9153279":"code","00529c15":"code","3dc2919e":"code","e8e0bb7c":"markdown","1fa9abdf":"markdown","ef25f920":"markdown","fa1cfc88":"markdown","2f9a177a":"markdown","801437f7":"markdown","15202683":"markdown","73ed54bd":"markdown","b9d387de":"markdown","0c5d53de":"markdown","0a74a85a":"markdown","419ba744":"markdown","e379ad92":"markdown","dfc9799c":"markdown","7a42da5f":"markdown","cb687409":"markdown","6e23a02d":"markdown","9212de45":"markdown","fd169521":"markdown","b1447307":"markdown","db353b86":"markdown","a250cf96":"markdown","3ec52360":"markdown","02a25036":"markdown","a7598dd0":"markdown","1d1a0f51":"markdown","7200d4c6":"markdown","55cd6f70":"markdown","f874c484":"markdown","648fe848":"markdown","268ea8a0":"markdown","bf20a297":"markdown","4947b731":"markdown","8505f071":"markdown","4f4470a9":"markdown","23d8abfb":"markdown","6c6e2389":"markdown","8152e0ad":"markdown","d70f8fc7":"markdown"},"source":{"c8d84684":"pip install opencage","3590cab0":"key = '2117b047581540e59c772059f03a714a'","8a1ed882":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt \nimport seaborn as sns\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nfrom PIL import Image \nimport plotly.graph_objects as go\nimport plotly.express as px \nimport plotly.graph_objs as go \nfrom plotly.subplots import make_subplots\nfrom opencage.geocoder import OpenCageGeocode\nfrom mpl_toolkits.basemap import Basemap\ngeocoder = OpenCageGeocode(key)\n","835ad1d4":"\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","3b53abbb":"df = pd.read_csv('..\/input\/indian-food-101\/indian_food.csv')\ndf.head()","d262dcc1":"def word_cloud_1(df):\n    \n    mask = np.array(Image.open('..\/input\/india-image-2\/65337787-india-map-silhouette-word-cloud-with-most-popular-travel-destinations_2.jpg'))\n\n    word_ls =  []\n    font_path = '..\/input\/text-samakaran\/SAMAN___.TTF'\n    for i in range(len(df)):\n        word_ls +=  df['name'][i]\n    wordcloud = WordCloud(background_color='white',mask=mask,\n                          width=2000,height=1800,\n                          font_path=font_path,\n                          ).generate(''.join(word_ls))\n    plt.figure(figsize=(20,12))\n    plt.axis('off')\n    plt.title('Indian_Food',fontsize=20)\n    plt.tight_layout(pad=0)\n    plt.imshow(wordcloud,interpolation='bilinear')\n    plt.show()\nword_cloud_1(df)   ","fa114b82":"def word_cloud_2(df):\n    word_ls =  []\n    \n    mask = np.array(Image.open('..\/input\/burger-image-1\/49870451-fast-food-danger-word-cloud_.jpg'))\n\n    \n    font_path = '..\/input\/text-samakaran\/SAMAN___.TTF'\n    for i in range(len(df)):\n        word_ls +=  df['ingredients'][i]\n    wordcloud = WordCloud(background_color='white',font_path=font_path,mask=mask,\n                          width=500,height=200).generate(''.join(word_ls))\n    plt.figure(figsize=(19,9))\n    plt.axis('off')\n    plt.title('Ingredients',fontsize=20)\n    plt.imshow(wordcloud,interpolation='bilinear')\n    plt.show()\nword_cloud_2(df)   ","1cc701ea":"def one_color_func(word=None, font_size=None, \n                   position=None, orientation=None, \n                   font_path=None, random_state=None):\n    h = 120# 0 - 360\n    s = 100# 0 - 100\n    l = 50# 0 - 100\n    return \"hsl({}, {}%, {}%)\".format(h, s, l)\n\n\n\ndef word_cloud_3(df):\n    \n    mask = np.array(Image.open('..\/input\/veg-food-2\/vegetables-word-cloud-shape-concept-45843277_2.jpg'))\n    font_path = '..\/input\/text-samakaran\/SAMAN___.TTF'\n    df = df[df['diet']=='vegetarian']\n    df = df.reset_index()\n    word_ls =[]\n    for i in range(len(df)):\n        word_ls +=  df['ingredients'][i]\n    wordcloud = WordCloud(background_color='white',mask=mask,\n                          width=1000,height=800,\n                          font_path=font_path,color_func=one_color_func,\n                          ).generate(''.join(word_ls))\n    plt.figure(figsize=(20,10))\n    plt.axis('off')\n    plt.title('Veg Dishes Ingredients',fontsize=20)\n    plt.tight_layout(pad=0)\n    plt.imshow(wordcloud,interpolation='bilinear')\n    plt.show()\nword_cloud_3(df)","cca237a2":"def one_color_func(word=None, font_size=None, \n                   position=None, orientation=None, \n                   font_path=None, random_state=None):\n    h = 0# 0 - 360\n    s = 100# 0 - 100\n    l = 50# 0 - 100\n    return \"hsl({}, {}%, {}%)\".format(h, s, l)\n\n\n\n\ndef word_cloud_4(df):\n    \n    mask = np.array(Image.open('..\/input\/chicken-photo-2\/depositphotos_28243749-stock-illustration-chicken-word-cloud-concept.jpg'))\n    font_path = '..\/input\/text-samakaran\/SAMAN___.TTF'\n    df = df[df['diet']=='non vegetarian']\n    df = df.reset_index()\n    word_ls =[]\n    for i in range(len(df)):\n        word_ls +=  df['ingredients'][i]\n    wordcloud = WordCloud(background_color='white',mask=mask,\n                          width=1200,height=900,color_func=one_color_func,\n                          font_path=font_path,\n                          ).generate(''.join(word_ls))\n    plt.figure(figsize=(20,10))\n    plt.axis('off')\n    plt.title('Non_Veg dishes ingredients',fontsize=20)\n    plt.tight_layout(pad=0)\n    plt.imshow(wordcloud,interpolation='bilinear')\n    plt.show()\n\nword_cloud_4(df)","3ccb84ca":"def bar_graph_1(df):\n    diet_df = pd.DataFrame(df['diet'].value_counts(),columns =['diet'])\n    fig = px.bar(diet_df,x='diet',title='Diet_distribution',color='diet',labels  = {'diet':'Count of Dishes','index':'Diet_type'})\n    fig.show()\nbar_graph_1(df)","b6937f6a":"def bar_graph_2(df):\n    x = df['state'].value_counts()\n    col1 = pd.DataFrame(x.index.values,columns=['States'])\n    col2 = pd.DataFrame(x.values,columns=['Dish counts'])\n    col3 = pd.concat([col1,col2],axis=1)\n    fig = px.bar(col3,x='States',y='Dish counts',title='State distribution of dishes ',color='Dish counts')\n    fig.show()\nbar_graph_2(df)","b63b8cd8":"def bar_graph_3(df):\n    x = df['course'].value_counts()\n    col1 =  pd.DataFrame(x.index,columns=['course_name'])\n    col2 = pd.DataFrame(x.values,columns=['count'])\n    col3 = pd.concat([col1,col2],axis=1)\n    fig = px.bar(col3,y ='course_name',x = 'count',title='Different courses',color='count')\n    fig.show()\nbar_graph_3(df)","c0dba51f":"def bar_graph_4(df):\n    x = df['flavor_profile'].value_counts()\n    col1 =  pd.DataFrame(x.index,columns=['flavor'])\n    col2 = pd.DataFrame(x.values,columns=['count'])\n    col3 = pd.concat([col1,col2],axis=1)\n    fig = px.bar(col3,y ='flavor',x = 'count',title='Different flavor',color='flavor')\n    fig.show()\nbar_graph_4(df)","35120dc8":"def bar_graph_5(df):\n    x = df['region'].value_counts()\n    fig  =  px.bar(df,x='region')\n    fig.show()\nbar_graph_5(df)","65e00ca4":"def line_plot_1(df):\n    df_1 = df.copy()\n    df_1.sort_values(by='prep_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig = px.line(df_1,y='prep_time',color='diet',labels={'_index':'least_to_most_time'})\n    \n    fig.show()\n    \nline_plot_1(df)","c00bf2f1":"def line_plot_2(df):\n    df_1 = df.copy()\n    df_1.sort_values(by='cook_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig = px.line(df_1,y='cook_time',color='diet',labels={'_index':'least_to_most_time'})\n    fig.show()\n    \nline_plot_2(df)","582ce137":"#  Flavor profile for veg and non veg dishes \ndef pie_chart_1(df):\n    \n    veg = df[df['diet']=='vegetarian']['flavor_profile'].value_counts()\n    n_veg = df[df['diet']=='non vegetarian']['flavor_profile'].value_counts()\n\n    \n    \n    fig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])    \n    fig.add_trace(go.Pie(labels= veg.index, values= veg.values, name=\"Veg tastes\",title='VEG'),\n                  1, 1)\n    fig.add_trace(go.Pie(labels= n_veg.index, values = n_veg.values, name=\"non_veg tastes\",title='Non_Veg'),\n              1, 2)\n\n    fig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\n\n    fig.show()\npie_chart_1(df)","fb0b7814":"#  course distribution for veg and non veg dishes \ndef pie_chart_2(df):\n    \n    veg = df[df['diet']=='vegetarian']['course'].value_counts()\n    n_veg = df[df['diet']=='non vegetarian']['course'].value_counts()\n\n    \n    \n    fig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])    \n    fig.add_trace(go.Pie(labels= veg.index, values= veg.values, name=\"Veg courses\"),\n                  1, 1)\n    fig.add_trace(go.Pie(labels= n_veg.index, values = n_veg.values, name=\"Non_veg courses\"),\n              1, 2)\n\n    fig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\n\n    fig.show()\npie_chart_2(df)","f0e51568":"# basemap of total dishes distribution \ndef basemap_1(df):\n    new_df = df.copy()\n    indexes = new_df[new_df['state']=='-1'].index\n    new_df.drop(indexes,axis=0,inplace=True)\n    x = new_df['state'].value_counts()\n    state_names = x.index\n    state_count = x.values\n    \n    \n    lat,lon = [],[]\n    for i in range(len(state_names)):\n        query = state_names[i]\n        results = geocoder.geocode(query)\n        lat.append(results[0]['geometry']['lat'])\n        lon.append(results[0]['geometry']['lng'])\n        \n    \n    col1 = pd.DataFrame(state_names,columns=['state_name'])\n    col2 = pd.DataFrame(lat,columns=['lat'])\n    col3 = pd.DataFrame(lon,columns=['lon'])\n    col4 = pd.DataFrame(state_count,columns=['count'])\n    \n    india_df = pd.concat([col1,col2,col3,col4],axis=1)\n    \n    \n\n    fig = px.scatter_mapbox(india_df, lat=\"lat\", lon=\"lon\", size='count',hover_name=\"state_name\",\n                            color_discrete_sequence=[\"fuchsia\"], zoom=3.5, height=500,width=500)\n    fig.update_layout(mapbox_style=\"open-street-map\")\n    fig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\n    fig.show()\nbasemap_1(df)   ","0083f9af":"# basemap of total dishes distribution \ndef basemap_2(df):\n    df = df[df['diet']=='vegetarian']\n    new_df = df.copy()\n    indexes = new_df[new_df['state']=='-1'].index\n    new_df.drop(indexes,axis=0,inplace=True)\n    x = new_df['state'].value_counts()\n    state_names = x.index\n    state_count = x.values\n    \n    \n    lat,lon = [],[]\n    for i in range(len(state_names)):\n        query = state_names[i]\n        results = geocoder.geocode(query)\n        lat.append(results[0]['geometry']['lat'])\n        lon.append(results[0]['geometry']['lng'])\n        \n    \n    col1 = pd.DataFrame(state_names,columns=['state_name'])\n    col2 = pd.DataFrame(lat,columns=['lat'])\n    col3 = pd.DataFrame(lon,columns=['lon'])\n    col4 = pd.DataFrame(state_count,columns=['count'])\n    \n    india_df = pd.concat([col1,col2,col3,col4],axis=1)\n    \n    \n\n    fig = px.scatter_mapbox(india_df, lat=\"lat\", lon=\"lon\", size='count',hover_name=\"state_name\",\n                            color_discrete_sequence=[\"green\"], zoom=3.5, height=500,width=500)\n    fig.update_layout(mapbox_style=\"open-street-map\")\n    fig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\n    fig.show()\nbasemap_2(df)   ","b61c527d":"# basemap of non veg  dishes distribution \ndef basemap_3(df):\n    \n    df = df[df['diet']=='non vegetarian']\n    new_df = df.copy()\n    \n    indexes = new_df[new_df['state']=='-1'].index\n    new_df.drop(indexes,axis=0,inplace=True)\n    x = new_df['state'].value_counts()\n    state_names = x.index\n    state_count = x.values\n    \n    \n    lat,lon = [],[]\n    for i in range(len(state_names)):\n        query = state_names[i]\n        results = geocoder.geocode(query)\n        lat.append(results[0]['geometry']['lat'])\n        lon.append(results[0]['geometry']['lng'])\n        \n    \n    col1 = pd.DataFrame(state_names,columns=['state_name'])\n    col2 = pd.DataFrame(lat,columns=['lat'])\n    col3 = pd.DataFrame(lon,columns=['lon'])\n    col4 = pd.DataFrame(state_count,columns=['count'])\n    \n    india_df = pd.concat([col1,col2,col3,col4],axis=1)\n    \n    \n\n    fig = px.scatter_mapbox(india_df, lat=\"lat\", lon=\"lon\", size='count',hover_name=\"state_name\",\n                            color_discrete_sequence=[\"red\"], zoom=3.5, height=500,width=500)\n    fig.update_layout(mapbox_style=\"open-street-map\")\n    fig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\n    fig.show()\nbasemap_3(df)   ","55d11429":"def state_eda_wordcloud(state_name,df):\n    fig,(ax1,ax2) = plt.subplots(1,2,figsize=(20,18))\n\n    new_df = df[df['state']==state_name]\n    new_df.reset_index(inplace=True)\n    word_ls,word_ls_2 = [],[]\n    \n    for i in range(len(new_df)):\n        word_ls +=  new_df['name'].loc[i]\n    wordcloud  = WordCloud().generate(''.join(word_ls))\n    ax1.set_xticks([])\n    ax1.title.set_text('Dishes')\n    ax1.set_yticks([])\n    \n    ax1.imshow(wordcloud,interpolation='bilinear')\n    \n    for i in range(len(new_df)):\n        word_ls_2 +=  new_df['ingredients'].loc[i]\n    wordcloud2 = WordCloud().generate(''.join(word_ls_2))\n    ax2.set_xticks([])\n    ax2.title.set_text('Ingredients')\n    ax2.set_yticks([])\n    \n    \n    ax2.imshow(wordcloud2,interpolation='bilinear')\n    \n    \nstate_eda_wordcloud('Gujarat',df)  ","a619feb1":"def state_eda(state_name):\n    \n    new_df = df[df['state']==state_name]\n    \n    fig  = make_subplots(rows=2,cols=2,specs=[[{'type':'xy'}, {'type':'xy'}],\n                                             [{'type':'domain'}, {'type':'domain'}]],\n                        subplot_titles = ('Diet distribution(veg-non_veg)','Prep-Cook Time','Flavor distribution','Course distribution'))\n    \n    # diet distribution\n    x = new_df['diet'].value_counts()\n    fig.add_trace(go.Bar(x=x.values),row=1,col=1)\n    \n#     # prep time - cook time \n    df_1 = new_df.copy()\n    df_1.sort_values(by='cook_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig.add_trace(go.Scatter(y = df_1.cook_time,mode='lines'),row=1,col=2)\n    fig.add_trace(go.Scatter(y = df_1.prep_time,mode='lines'),row=1,col=2)\n\n    \n    \n    # flavor pie chart \n    flavor = new_df['flavor_profile'].value_counts()\n    fig.add_trace(go.Pie(values=flavor.values,labels=flavor.index),row=2,col= 1)\n    \n    #course pie chart \n    course = new_df['course'].value_counts()\n    fig.add_trace(go.Pie(values=course.values,labels=course.index),row=2,col=2)\n    \n    \n    fig.show()\n    \nstate_eda('Gujarat')","643fac14":"def state_eda_wordcloud(state_name,df):\n    fig,(ax1,ax2) = plt.subplots(1,2,figsize=(20,18))\n\n    new_df = df[df['state']==state_name]\n    new_df.reset_index(inplace=True)\n    word_ls,word_ls_2 = [],[]\n    \n    for i in range(len(new_df)):\n        word_ls +=  new_df['name'].loc[i]\n    wordcloud  = WordCloud().generate(''.join(word_ls))\n    ax1.set_xticks([])\n    ax1.title.set_text('Dishes')\n    ax1.set_yticks([])\n    \n    ax1.imshow(wordcloud,interpolation='bilinear')\n    \n    for i in range(len(new_df)):\n        word_ls_2 +=  new_df['ingredients'].loc[i]\n    wordcloud2 = WordCloud().generate(''.join(word_ls_2))\n    ax2.set_xticks([])\n    ax2.title.set_text('Ingredients')\n    ax2.set_yticks([])\n    \n    \n    ax2.imshow(wordcloud2,interpolation='bilinear')\n    \n    \nstate_eda_wordcloud('Punjab',df)  ","b3270e55":"def state_eda(state_name):\n    \n    new_df = df[df['state']==state_name]\n    \n    fig  = make_subplots(rows=2,cols=2,specs=[[{'type':'xy'}, {'type':'xy'}],\n                                             [{'type':'domain'}, {'type':'domain'}]],\n                        subplot_titles = ('Diet distribution(veg-non_veg)','Prep-Cook Time','Flavor distribution','Course distribution'))\n    \n    # diet distribution\n    x = new_df['diet'].value_counts()\n    fig.add_trace(go.Bar(x=x.values),row=1,col=1)\n    \n#     # prep time - cook time \n    df_1 = new_df.copy()\n    df_1.sort_values(by='cook_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig.add_trace(go.Scatter(y = df_1.cook_time,mode='lines'),row=1,col=2)\n    fig.add_trace(go.Scatter(y = df_1.prep_time,mode='lines'),row=1,col=2)\n\n    \n    \n    # flavor pie chart \n    flavor = new_df['flavor_profile'].value_counts()\n    fig.add_trace(go.Pie(values=flavor.values,labels=flavor.index),row=2,col= 1)\n    \n    #course pie chart \n    course = new_df['course'].value_counts()\n    fig.add_trace(go.Pie(values=course.values,labels=course.index),row=2,col=2)\n    \n    \n    fig.show()\n    \nstate_eda('Punjab')","1e373dee":"def state_eda_wordcloud(state_name,df):\n    fig,(ax1,ax2) = plt.subplots(1,2,figsize=(20,18))\n\n    new_df = df[df['state']==state_name]\n    new_df.reset_index(inplace=True)\n    word_ls,word_ls_2 = [],[]\n    \n    for i in range(len(new_df)):\n        word_ls +=  new_df['name'].loc[i]\n    wordcloud  = WordCloud().generate(''.join(word_ls))\n    ax1.set_xticks([])\n    ax1.title.set_text('Dishes')\n    ax1.set_yticks([])\n    \n    ax1.imshow(wordcloud,interpolation='bilinear')\n    \n    for i in range(len(new_df)):\n        word_ls_2 +=  new_df['ingredients'].loc[i]\n    wordcloud2 = WordCloud().generate(''.join(word_ls_2))\n    ax2.set_xticks([])\n    ax2.title.set_text('Ingredients')\n    ax2.set_yticks([])\n    \n    \n    ax2.imshow(wordcloud2,interpolation='bilinear')\n    \n    \nstate_eda_wordcloud('Maharashtra',df)  ","d15bdb9f":"def state_eda(state_name):\n    \n    new_df = df[df['state']==state_name]\n    \n    fig  = make_subplots(rows=2,cols=2,specs=[[{'type':'xy'}, {'type':'xy'}],\n                                             [{'type':'domain'}, {'type':'domain'}]],\n                        subplot_titles = ('Diet distribution(veg-non_veg)','Prep-Cook Time','Flavor distribution','Course distribution'))\n    \n    # diet distribution\n    x = new_df['diet'].value_counts()\n    fig.add_trace(go.Bar(x=x.values),row=1,col=1)\n    \n#     # prep time - cook time \n    df_1 = new_df.copy()\n    df_1.sort_values(by='cook_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig.add_trace(go.Scatter(y = df_1.cook_time,mode='lines'),row=1,col=2)\n    fig.add_trace(go.Scatter(y = df_1.prep_time,mode='lines'),row=1,col=2)\n\n    \n    \n    # flavor pie chart \n    flavor = new_df['flavor_profile'].value_counts()\n    fig.add_trace(go.Pie(values=flavor.values,labels=flavor.index),row=2,col= 1)\n    \n    #course pie chart \n    course = new_df['course'].value_counts()\n    fig.add_trace(go.Pie(values=course.values,labels=course.index),row=2,col=2)\n    \n    \n    fig.show()\n    \nstate_eda('Maharashtra')","2169e41b":"def state_eda_wordcloud(state_name,df):\n    fig,(ax1,ax2) = plt.subplots(1,2,figsize=(20,18))\n\n    new_df = df[df['state']==state_name]\n    new_df.reset_index(inplace=True)\n    word_ls,word_ls_2 = [],[]\n    \n    for i in range(len(new_df)):\n        word_ls +=  new_df['name'].loc[i]\n    wordcloud  = WordCloud().generate(''.join(word_ls))\n    ax1.set_xticks([])\n    ax1.title.set_text('Dishes')\n    ax1.set_yticks([])\n    \n    ax1.imshow(wordcloud,interpolation='bilinear')\n    \n    for i in range(len(new_df)):\n        word_ls_2 +=  new_df['ingredients'].loc[i]\n    wordcloud2 = WordCloud().generate(''.join(word_ls_2))\n    ax2.set_xticks([])\n    ax2.title.set_text('Ingredients')\n    ax2.set_yticks([])\n    \n    \n    ax2.imshow(wordcloud2,interpolation='bilinear')\n    \n    \nstate_eda_wordcloud('West Bengal',df)  ","fac4247d":"def state_eda(state_name):\n    \n    new_df = df[df['state']==state_name]\n    \n    fig  = make_subplots(rows=2,cols=2,specs=[[{'type':'xy'}, {'type':'xy'}],\n                                             [{'type':'domain'}, {'type':'domain'}]],\n                        subplot_titles = ('Diet distribution(veg-non_veg)','Prep-Cook Time','Flavor distribution','Course distribution'))\n    \n    # diet distribution\n    x = new_df['diet'].value_counts()\n    fig.add_trace(go.Bar(x=x.values),row=1,col=1)\n    \n#     # prep time - cook time \n    df_1 = new_df.copy()\n    df_1.sort_values(by='cook_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig.add_trace(go.Scatter(y = df_1.cook_time,mode='lines'),row=1,col=2)\n    fig.add_trace(go.Scatter(y = df_1.prep_time,mode='lines'),row=1,col=2)\n\n    \n    \n    # flavor pie chart \n    flavor = new_df['flavor_profile'].value_counts()\n    fig.add_trace(go.Pie(values=flavor.values,labels=flavor.index),row=2,col= 1)\n    \n    #course pie chart \n    course = new_df['course'].value_counts()\n    fig.add_trace(go.Pie(values=course.values,labels=course.index),row=2,col=2)\n    \n    \n    fig.show()\n    \nstate_eda('West Bengal')","df91b674":"def state_eda_wordcloud(state_name,df):\n    fig,(ax1,ax2) = plt.subplots(1,2,figsize=(20,18))\n\n    new_df = df[df['state']==state_name]\n    new_df.reset_index(inplace=True)\n    word_ls,word_ls_2 = [],[]\n    \n    for i in range(len(new_df)):\n        word_ls +=  new_df['name'].loc[i]\n    wordcloud  = WordCloud().generate(''.join(word_ls))\n    ax1.set_xticks([])\n    ax1.title.set_text('Dishes')\n    ax1.set_yticks([])\n    \n    ax1.imshow(wordcloud,interpolation='bilinear')\n    \n    for i in range(len(new_df)):\n        word_ls_2 +=  new_df['ingredients'].loc[i]\n    wordcloud2 = WordCloud().generate(''.join(word_ls_2))\n    ax2.set_xticks([])\n    ax2.title.set_text('Ingredients')\n    ax2.set_yticks([])\n    \n    \n    ax2.imshow(wordcloud2,interpolation='bilinear')\n    \n    \nstate_eda_wordcloud('Assam',df)  ","56763b55":"def state_eda(state_name):\n    \n    new_df = df[df['state']==state_name]\n    \n    fig  = make_subplots(rows=2,cols=2,specs=[[{'type':'xy'}, {'type':'xy'}],\n                                             [{'type':'domain'}, {'type':'domain'}]],\n                        subplot_titles = ('Diet distribution(veg-non_veg)','Prep-Cook Time','Flavor distribution','Course distribution'))\n    \n    # diet distribution\n    x = new_df['diet'].value_counts()\n    fig.add_trace(go.Bar(x=x.values),row=1,col=1)\n    \n#     # prep time - cook time \n    df_1 = new_df.copy()\n    df_1.sort_values(by='cook_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig.add_trace(go.Scatter(y = df_1.cook_time,mode='lines'),row=1,col=2)\n    fig.add_trace(go.Scatter(y = df_1.prep_time,mode='lines'),row=1,col=2)\n\n    \n    \n    # flavor pie chart \n    flavor = new_df['flavor_profile'].value_counts()\n    fig.add_trace(go.Pie(values=flavor.values,labels=flavor.index),row=2,col= 1)\n    \n    #course pie chart \n    course = new_df['course'].value_counts()\n    fig.add_trace(go.Pie(values=course.values,labels=course.index),row=2,col=2)\n    \n    \n    fig.show()\n    \nstate_eda('Assam')","4d4dc4ba":"def state_eda_wordcloud(state_name,df):\n    fig,(ax1,ax2) = plt.subplots(1,2,figsize=(20,18))\n\n    new_df = df[df['state']==state_name]\n    new_df.reset_index(inplace=True)\n    word_ls,word_ls_2 = [],[]\n    \n    for i in range(len(new_df)):\n        word_ls +=  new_df['name'].loc[i]\n    wordcloud  = WordCloud().generate(''.join(word_ls))\n    ax1.set_xticks([])\n    ax1.title.set_text('Dishes')\n    ax1.set_yticks([])\n    \n    ax1.imshow(wordcloud,interpolation='bilinear')\n    \n    for i in range(len(new_df)):\n        word_ls_2 +=  new_df['ingredients'].loc[i]\n    wordcloud2 = WordCloud().generate(''.join(word_ls_2))\n    ax2.set_xticks([])\n    ax2.title.set_text('Ingredients')\n    ax2.set_yticks([])\n    \n    \n    ax2.imshow(wordcloud2,interpolation='bilinear')\n    \n    \nstate_eda_wordcloud('Tamil Nadu',df)  ","d49b8a00":"def state_eda(state_name):\n    \n    new_df = df[df['state']==state_name]\n    \n    fig  = make_subplots(rows=2,cols=2,specs=[[{'type':'xy'}, {'type':'xy'}],\n                                             [{'type':'domain'}, {'type':'domain'}]],\n                        subplot_titles = ('Diet distribution(veg-non_veg)','Prep-Cook Time','Flavor distribution','Course distribution'))\n    \n    # diet distribution\n    x = new_df['diet'].value_counts()\n    fig.add_trace(go.Bar(x=x.values),row=1,col=1)\n    \n#     # prep time - cook time \n    df_1 = new_df.copy()\n    df_1.sort_values(by='cook_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig.add_trace(go.Scatter(y = df_1.cook_time,mode='lines'),row=1,col=2)\n    fig.add_trace(go.Scatter(y = df_1.prep_time,mode='lines'),row=1,col=2)\n\n    \n    \n    # flavor pie chart \n    flavor = new_df['flavor_profile'].value_counts()\n    fig.add_trace(go.Pie(values=flavor.values,labels=flavor.index),row=2,col= 1)\n    \n    #course pie chart \n    course = new_df['course'].value_counts()\n    fig.add_trace(go.Pie(values=course.values,labels=course.index),row=2,col=2)\n    \n    \n    fig.show()\n    \nstate_eda('Tamil Nadu')","f633b179":"def state_eda_wordcloud(state_name,df):\n    fig,(ax1,ax2) = plt.subplots(1,2,figsize=(20,18))\n\n    new_df = df[df['state']==state_name]\n    new_df.reset_index(inplace=True)\n    word_ls,word_ls_2 = [],[]\n    \n    for i in range(len(new_df)):\n        word_ls +=  new_df['name'].loc[i]\n    wordcloud  = WordCloud().generate(''.join(word_ls))\n    ax1.set_xticks([])\n    ax1.title.set_text('Dishes')\n    ax1.set_yticks([])\n    \n    ax1.imshow(wordcloud,interpolation='bilinear')\n    \n    for i in range(len(new_df)):\n        word_ls_2 +=  new_df['ingredients'].loc[i]\n    wordcloud2 = WordCloud().generate(''.join(word_ls_2))\n    ax2.set_xticks([])\n    ax2.title.set_text('Ingredients')\n    ax2.set_yticks([])\n    \n    \n    ax2.imshow(wordcloud2,interpolation='bilinear')\n    \n    \nstate_eda_wordcloud('Andhra Pradesh',df)  ","d9ad1057":"def state_eda(state_name):\n    \n    new_df = df[df['state']==state_name]\n    \n    fig  = make_subplots(rows=2,cols=2,specs=[[{'type':'xy'}, {'type':'xy'}],\n                                             [{'type':'domain'}, {'type':'domain'}]],\n                        subplot_titles = ('Diet distribution(veg-non_veg)','Prep-Cook Time','Flavor distribution','Course distribution'))\n    \n    # diet distribution\n    x = new_df['diet'].value_counts()\n    fig.add_trace(go.Bar(x=x.values),row=1,col=1)\n    \n#     # prep time - cook time \n    df_1 = new_df.copy()\n    df_1.sort_values(by='cook_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig.add_trace(go.Scatter(y = df_1.cook_time,mode='lines'),row=1,col=2)\n    fig.add_trace(go.Scatter(y = df_1.prep_time,mode='lines'),row=1,col=2)\n\n    \n    \n    # flavor pie chart \n    flavor = new_df['flavor_profile'].value_counts()\n    fig.add_trace(go.Pie(values=flavor.values,labels=flavor.index),row=2,col= 1)\n    \n    #course pie chart \n    course = new_df['course'].value_counts()\n    fig.add_trace(go.Pie(values=course.values,labels=course.index),row=2,col=2)\n    \n    \n    fig.show()\n    \nstate_eda('Andhra Pradesh')","b65a5db3":"def state_eda_wordcloud(state_name,df):\n    fig,(ax1,ax2) = plt.subplots(1,2,figsize=(20,18))\n\n    new_df = df[df['state']==state_name]\n    new_df.reset_index(inplace=True)\n    word_ls,word_ls_2 = [],[]\n    \n    for i in range(len(new_df)):\n        word_ls +=  new_df['name'].loc[i]\n    wordcloud  = WordCloud().generate(''.join(word_ls))\n    ax1.set_xticks([])\n    ax1.title.set_text('Dishes')\n    ax1.set_yticks([])\n    \n    ax1.imshow(wordcloud,interpolation='bilinear')\n    \n    for i in range(len(new_df)):\n        word_ls_2 +=  new_df['ingredients'].loc[i]\n    wordcloud2 = WordCloud().generate(''.join(word_ls_2))\n    ax2.set_xticks([])\n    ax2.title.set_text('Ingredients')\n    ax2.set_yticks([])\n    \n    \n    ax2.imshow(wordcloud2,interpolation='bilinear')\n    \n    \nstate_eda_wordcloud('Uttar Pradesh',df)  ","b433baef":"def state_eda(state_name):\n    \n    new_df = df[df['state']==state_name]\n    \n    fig  = make_subplots(rows=2,cols=2,specs=[[{'type':'xy'}, {'type':'xy'}],\n                                             [{'type':'domain'}, {'type':'domain'}]],\n                        subplot_titles = ('Diet distribution(veg-non_veg)','Prep-Cook Time','Flavor distribution','Course distribution'))\n    \n    # diet distribution\n    x = new_df['diet'].value_counts()\n    fig.add_trace(go.Bar(x=x.values),row=1,col=1)\n    \n#     # prep time - cook time \n    df_1 = new_df.copy()\n    df_1.sort_values(by='cook_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig.add_trace(go.Scatter(y = df_1.cook_time,mode='lines'),row=1,col=2)\n    fig.add_trace(go.Scatter(y = df_1.prep_time,mode='lines'),row=1,col=2)\n\n    \n    \n    # flavor pie chart \n    flavor = new_df['flavor_profile'].value_counts()\n    fig.add_trace(go.Pie(values=flavor.values,labels=flavor.index),row=2,col= 1)\n    \n    #course pie chart \n    course = new_df['course'].value_counts()\n    fig.add_trace(go.Pie(values=course.values,labels=course.index),row=2,col=2)\n    \n    \n    fig.show()\n    \nstate_eda('Uttar Pradesh')","4d5fea27":"def state_eda_wordcloud(state_name,df):\n    fig,(ax1,ax2) = plt.subplots(1,2,figsize=(20,18))\n\n    new_df = df[df['state']==state_name]\n    new_df.reset_index(inplace=True)\n    word_ls,word_ls_2 = [],[]\n    \n    for i in range(len(new_df)):\n        word_ls +=  new_df['name'].loc[i]\n    wordcloud  = WordCloud().generate(''.join(word_ls))\n    ax1.set_xticks([])\n    ax1.title.set_text('Dishes')\n    ax1.set_yticks([])\n    \n    ax1.imshow(wordcloud,interpolation='bilinear')\n    \n    for i in range(len(new_df)):\n        word_ls_2 +=  new_df['ingredients'].loc[i]\n    wordcloud2 = WordCloud().generate(''.join(word_ls_2))\n    ax2.set_xticks([])\n    ax2.title.set_text('Ingredients')\n    ax2.set_yticks([])\n    \n    \n    ax2.imshow(wordcloud2,interpolation='bilinear')\n    \n    \nstate_eda_wordcloud('Kerala',df)  ","47fc4a24":"def state_eda(state_name):\n    \n    new_df = df[df['state']==state_name]\n    \n    fig  = make_subplots(rows=2,cols=2,specs=[[{'type':'xy'}, {'type':'xy'}],\n                                             [{'type':'domain'}, {'type':'domain'}]],\n                        subplot_titles = ('Diet distribution(veg-non_veg)','Prep-Cook Time','Flavor distribution','Course distribution'))\n    \n    # diet distribution\n    x = new_df['diet'].value_counts()\n    fig.add_trace(go.Bar(x=x.values),row=1,col=1)\n    \n#     # prep time - cook time \n    df_1 = new_df.copy()\n    df_1.sort_values(by='cook_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig.add_trace(go.Scatter(y = df_1.cook_time,mode='lines'),row=1,col=2)\n    fig.add_trace(go.Scatter(y = df_1.prep_time,mode='lines'),row=1,col=2)\n\n    \n    \n    # flavor pie chart \n    flavor = new_df['flavor_profile'].value_counts()\n    fig.add_trace(go.Pie(values=flavor.values,labels=flavor.index),row=2,col= 1)\n    \n    #course pie chart \n    course = new_df['course'].value_counts()\n    fig.add_trace(go.Pie(values=course.values,labels=course.index),row=2,col=2)\n    \n    \n    fig.show()\n    \nstate_eda('Kerala')","d8d36451":"def state_eda_wordcloud(state_name,df):\n    fig,(ax1,ax2) = plt.subplots(1,2,figsize=(20,18))\n\n    new_df = df[df['state']==state_name]\n    new_df.reset_index(inplace=True)\n    word_ls,word_ls_2 = [],[]\n    \n    for i in range(len(new_df)):\n        word_ls +=  new_df['name'].loc[i]\n    wordcloud  = WordCloud().generate(''.join(word_ls))\n    ax1.set_xticks([])\n    ax1.title.set_text('Dishes')\n    ax1.set_yticks([])\n    \n    ax1.imshow(wordcloud,interpolation='bilinear')\n    \n    for i in range(len(new_df)):\n        word_ls_2 +=  new_df['ingredients'].loc[i]\n    wordcloud2 = WordCloud().generate(''.join(word_ls_2))\n    ax2.set_xticks([])\n    ax2.title.set_text('Ingredients')\n    ax2.set_yticks([])\n    \n    \n    ax2.imshow(wordcloud2,interpolation='bilinear')\n    \n    \nstate_eda_wordcloud('Odisha',df)  ","48e318a6":"def state_eda(state_name):\n    \n    new_df = df[df['state']==state_name]\n    \n    fig  = make_subplots(rows=2,cols=2,specs=[[{'type':'xy'}, {'type':'xy'}],\n                                             [{'type':'domain'}, {'type':'domain'}]],\n                        subplot_titles = ('Diet distribution(veg-non_veg)','Prep-Cook Time','Flavor distribution','Course distribution'))\n    \n    # diet distribution\n    x = new_df['diet'].value_counts()\n    fig.add_trace(go.Bar(x=x.values),row=1,col=1)\n    \n#     # prep time - cook time \n    df_1 = new_df.copy()\n    df_1.sort_values(by='cook_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig.add_trace(go.Scatter(y = df_1.cook_time,mode='lines'),row=1,col=2)\n    fig.add_trace(go.Scatter(y = df_1.prep_time,mode='lines'),row=1,col=2)\n\n    \n    \n    # flavor pie chart \n    flavor = new_df['flavor_profile'].value_counts()\n    fig.add_trace(go.Pie(values=flavor.values,labels=flavor.index),row=2,col= 1)\n    \n    #course pie chart \n    course = new_df['course'].value_counts()\n    fig.add_trace(go.Pie(values=course.values,labels=course.index),row=2,col=2)\n    \n    \n    fig.show()\n    \nstate_eda('Odisha')","1b60083f":"def state_eda_wordcloud(state_name,df):\n    fig,(ax1,ax2) = plt.subplots(1,2,figsize=(20,18))\n\n    new_df = df[df['state']==state_name]\n    new_df.reset_index(inplace=True)\n    word_ls,word_ls_2 = [],[]\n    \n    for i in range(len(new_df)):\n        word_ls +=  new_df['name'].loc[i]\n    wordcloud  = WordCloud().generate(''.join(word_ls))\n    ax1.set_xticks([])\n    ax1.title.set_text('Dishes')\n    ax1.set_yticks([])\n    \n    ax1.imshow(wordcloud,interpolation='bilinear')\n    \n    for i in range(len(new_df)):\n        word_ls_2 +=  new_df['ingredients'].loc[i]\n    wordcloud2 = WordCloud().generate(''.join(word_ls_2))\n    ax2.set_xticks([])\n    ax2.title.set_text('Ingredients')\n    ax2.set_yticks([])\n    \n    \n    ax2.imshow(wordcloud2,interpolation='bilinear')\n    \n    \nstate_eda_wordcloud('Karnataka',df)  ","588f9ca2":"def state_eda(state_name):\n    \n    new_df = df[df['state']==state_name]\n    \n    fig  = make_subplots(rows=2,cols=2,specs=[[{'type':'xy'}, {'type':'xy'}],\n                                             [{'type':'domain'}, {'type':'domain'}]],\n                        subplot_titles = ('Diet distribution(veg-non_veg)','Prep-Cook Time','Flavor distribution','Course distribution'))\n    \n    # diet distribution\n    x = new_df['diet'].value_counts()\n    fig.add_trace(go.Bar(x=x.values),row=1,col=1)\n    \n#     # prep time - cook time \n    df_1 = new_df.copy()\n    df_1.sort_values(by='cook_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig.add_trace(go.Scatter(y = df_1.cook_time,mode='lines'),row=1,col=2)\n    fig.add_trace(go.Scatter(y = df_1.prep_time,mode='lines'),row=1,col=2)\n\n    \n    \n    # flavor pie chart \n    flavor = new_df['flavor_profile'].value_counts()\n    fig.add_trace(go.Pie(values=flavor.values,labels=flavor.index),row=2,col= 1)\n    \n    #course pie chart \n    course = new_df['course'].value_counts()\n    fig.add_trace(go.Pie(values=course.values,labels=course.index),row=2,col=2)\n    \n    \n    fig.show()\n    \nstate_eda('Karnataka')","40ca6f3a":"def state_eda_wordcloud(state_name,df):\n    fig,(ax1,ax2) = plt.subplots(1,2,figsize=(20,18))\n\n    new_df = df[df['state']==state_name]\n    new_df.reset_index(inplace=True)\n    word_ls,word_ls_2 = [],[]\n    \n    for i in range(len(new_df)):\n        word_ls +=  new_df['name'].loc[i]\n    wordcloud  = WordCloud().generate(''.join(word_ls))\n    ax1.set_xticks([])\n    ax1.title.set_text('Dishes')\n    ax1.set_yticks([])\n    \n    ax1.imshow(wordcloud,interpolation='bilinear')\n    \n    for i in range(len(new_df)):\n        word_ls_2 +=  new_df['ingredients'].loc[i]\n    wordcloud2 = WordCloud().generate(''.join(word_ls_2))\n    ax2.set_xticks([])\n    ax2.title.set_text('Ingredients')\n    ax2.set_yticks([])\n    \n    \n    ax2.imshow(wordcloud2,interpolation='bilinear')\n    \n    \nstate_eda_wordcloud('Rajasthan',df)  ","b9153279":"def state_eda(state_name):\n    \n    new_df = df[df['state']==state_name]\n    \n    fig  = make_subplots(rows=2,cols=2,specs=[[{'type':'xy'}, {'type':'xy'}],\n                                             [{'type':'domain'}, {'type':'domain'}]],\n                        subplot_titles = ('Diet distribution(veg-non_veg)','Prep-Cook Time','Flavor distribution','Course distribution'))\n    \n    # diet distribution\n    x = new_df['diet'].value_counts()\n    fig.add_trace(go.Bar(x=x.values),row=1,col=1)\n    \n#     # prep time - cook time \n    df_1 = new_df.copy()\n    df_1.sort_values(by='cook_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig.add_trace(go.Scatter(y = df_1.cook_time,mode='lines'),row=1,col=2)\n    fig.add_trace(go.Scatter(y = df_1.prep_time,mode='lines'),row=1,col=2)\n\n    \n    \n    # flavor pie chart \n    flavor = new_df['flavor_profile'].value_counts()\n    fig.add_trace(go.Pie(values=flavor.values,labels=flavor.index),row=2,col= 1)\n    \n    #course pie chart \n    course = new_df['course'].value_counts()\n    fig.add_trace(go.Pie(values=course.values,labels=course.index),row=2,col=2)\n    \n    \n    fig.show()\n    \nstate_eda('Rajasthan')","00529c15":"def state_eda(state_name):\n    \n    new_df = df[df['state']==state_name]\n    \n    fig  = make_subplots(rows=2,cols=2,specs=[[{'type':'xy'}, {'type':'xy'}],\n                                             [{'type':'domain'}, {'type':'domain'}]],\n                        subplot_titles = ('Diet distribution(veg-non_veg)','Prep-Cook Time','Flavor distribution','Course distribution'))\n    \n    # diet distribution\n    x = new_df['diet'].value_counts()\n    fig.add_trace(go.Bar(x=x.values),row=1,col=1)\n    \n#     # prep time - cook time \n    df_1 = new_df.copy()\n    df_1.sort_values(by='cook_time',inplace=True)\n    df_1.reset_index(inplace=True)\n    fig.add_trace(go.Scatter(y = df_1.cook_time,mode='lines'),row=1,col=2)\n    fig.add_trace(go.Scatter(y = df_1.prep_time,mode='lines'),row=1,col=2)\n\n    \n    \n    # flavor pie chart \n    flavor = new_df['flavor_profile'].value_counts()\n    fig.add_trace(go.Pie(values=flavor.values,labels=flavor.index),row=2,col= 1)\n    \n    #course pie chart \n    course = new_df['course'].value_counts()\n    fig.add_trace(go.Pie(values=course.values,labels=course.index),row=2,col=2)\n    \n    \n    fig.show()\n    \nstate_eda('-1')","3dc2919e":"def state_eda_wordcloud(state_name,df):\n    fig,(ax1,ax2) = plt.subplots(1,2,figsize=(20,18))\n\n    new_df = df[df['state']==state_name]\n    new_df.reset_index(inplace=True)\n    word_ls,word_ls_2 = [],[]\n    \n    for i in range(len(new_df)):\n        word_ls +=  new_df['name'].loc[i]\n    wordcloud  = WordCloud().generate(''.join(word_ls))\n    ax1.set_xticks([])\n    ax1.title.set_text('Dishes')\n    ax1.set_yticks([])\n    \n    ax1.imshow(wordcloud,interpolation='bilinear')\n    \n    for i in range(len(new_df)):\n        word_ls_2 +=  new_df['ingredients'].loc[i]\n    wordcloud2 = WordCloud().generate(''.join(word_ls_2))\n    ax2.set_xticks([])\n    ax2.title.set_text('Ingredients')\n    ax2.set_yticks([])\n    \n    \n    ax2.imshow(wordcloud2,interpolation='bilinear')\n    \n    \nstate_eda_wordcloud('-1',df)  ","e8e0bb7c":"<a id=\"top\"><\/a>\n\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\">Quick_Access<\/h3>\n\n<font color=\"blue\" size=+1><b>EDA<\/b><\/font>\n\n* [1. word_cloud_1](#1)\n* [2. word_cloud_2](#2)\n* [3. word_cloud_3](#3)\n* [4. word_cloud_4](#4)\n* [5. bar_graph_1](#5)\n* [6. bar_graph_2](#6)\n* [7. bar_graph_3](#7)\n* [8. bar_graph_4](#8)\n* [9. bar_graph_5](#9) \n* [10. line_plot_1](#10)\n* [11. line_plot_2](#11)\n* [12. Pie_chart_1](#12)\n* [13. Pie_chart_2](#13)\n* [14. Basemap_1](#14)\n* [15. Basemap_2](#15)\n* [16. Basemap_3](#16) \n\n<font color=\"blue\" size=+1><b>State wise EDA<\/b><\/font>\n* [17. Gujarat](#17) \n* [18. Punjab](#18) \n* [19. Maharashta](#19) \n* [20. West Bengal](#20) \n* [21. Assam](#21) \n* [22. Tamil Nadu](#22) \n* [23. Andhra Pradesh](#23) \n* [24. Uttar Pradesh](#24) \n* [25. Kerala](#25) \n* [26. Odisha](#26) \n* [27. Karnataka](#27) \n* [28. Rajasthan](#28) \n* [29. None_of_the_states](#29) \n","1fa9abdf":"<a id=\"22\"><\/a>\n<font color=\"gray\" size=+1.0><b>Tamil Nadu<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","ef25f920":"<a id=\"6\"><\/a>\n<font color=\"gray\" size=+1.0><b>6. bar_graph_2<\/b><\/font>\n\n<p style=\"font-size:20px; font-family:cursive; line-height: 1.7em\">\n    These are the states with most variety of the dishes .<ul> <li>Gujarat<\/li><li> Punjab<\/li> <li> Maharashtra <\/li><\/ul>\n<\/p>\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","fa1cfc88":"<a id=\"7\"><\/a>\n<font color=\"gray\" size=+1.0><b>7. bar_graph_3<\/b><\/font>\n\n<p style=\"font-size:20px; font-family:cursive; line-height: 1.7em\">\n    Most of the dishes are main course followed by deserts.\n<\/p>\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","2f9a177a":"<a id=\"16\"><\/a>\n<font color=\"gray\" size=+1.0><b>16. basemap_3<\/b><\/font>\n<p style=\"font-size:20px; font-family:cursive; line-height: 1.7em\">\n    The count of <span style='color:crimson' > Non-vegetarian <\/span> dishes by region.<br\/> The dataset contains 255 \n    rows ,which clearly does not take all the Indian dishes into consideration.<br\/>.This can be seen in the map where regions like\n    Maharashtra and hyderabad have very low count of <span style='color:crimson'>non-veg <\/span>dishes.\n<\/p>\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","801437f7":"<a id=\"11\"><\/a>\n<font color=\"gray\" size=+1.0><b>11. line_plot_2<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","15202683":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1>Column Description<\/h1>\n<pre>      \n\nname : name of the dish\ningredients : main ingredients used\ndiet : type of diet - either vegetarian or non vegetarian\nprep_time : preparation time\ncook_time : cooking time\nflavor_profile : flavor profile includes whether the dish is spicy, sweet, bitter, etc\ncourse : course of meal - starter, main course, dessert, etc\nstate : state where the dish is famous or is originated\nregion : region where the state belongs\nPresence of -1 in any of the columns indicates NaN value.\n<\/pre>\n    \n<\/div>\n","73ed54bd":"<a id=\"28\"><\/a>\n<font color=\"gray\" size=+1.0><b>Rajasthan<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","b9d387de":"<p style=\"font-size:20px; font-family:cursive; line-height: 1.7em\">\n    Wordcloud of all the indian dishes mentioned in the dataframe.\n<\/p>\n\n<div class=\"alert alert-block alert-info\" style=\"font-size:14px; font-family:verdana;\">\n    \ud83d\udccc Please note that the borders shown in the wordcloud does not represent the real borders ,the wordcloud does not fit the borders entirely.\n<\/div>","0c5d53de":"<div> <h1> <p style=\"color:crimson;\"> <i>Thank you!!!<\/i><\/p><\/h1> <\/div>","0a74a85a":"![feature-platter_1.jpg](attachment:feature-platter_1.jpg)","419ba744":"<p style=\"font-size:20px; font-family:cursive; line-height: 1.7em\">\n    Wordcloud of all the indian ingredients mentioned in the dataframe.\n    <p>\n    ps:- burger image is used to represent indian ingredients\ud83d\ude05.<\/p>\n<\/p>","e379ad92":"<a id=\"24\"><\/a>\n<font color=\"gray\" size=+1.0><b>Uttar Pradesh<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","dfc9799c":"<a id=\"15\"><\/a>\n<font color=\"gray\" size=+1.0><b>15 basemap_2<\/b><\/font>\n<p style=\"font-size:20px; font-family:cursive; line-height: 1.7em\">\n    The count of <span style='color:green' > vegetarian <\/span> dishes by region.\n<\/p>\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","7a42da5f":"<a id=\"25\"><\/a>\n<font color=\"gray\" size=+1.0><b>Kerala<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","cb687409":"<a id=\"5\"><\/a>\n<font color=\"gray\" size=+1.0><b>5. bar_graph_1<\/b><\/font>\n\n<p style=\"font-size:20px; font-family:cursive; line-height: 1.7em\">\n    As expected the majority of the Indian dishes are <span style='color:green'>vegetarian<\/span>,  with minority <span style='color:crimson'>non-veg <\/span>dishes.\n<\/p>\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","6e23a02d":"<div> <h1> <span style=\"color:orange,\"> IND<\/span><span style=\"color:blue\">IAN F<\/span><span style=\"color:green\">OOD<\/span> <\/h1><\/div>\n\n","9212de45":"<a id=\"2\"><\/a>\n<font color=\"gray\" size=+1.0><b>2. word_cloud_2<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","fd169521":"<a id=\"10\"><\/a>\n<font color=\"gray\" size=+1.0><b>10. line_plot_1<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","b1447307":"<a id=\"13\"><\/a>\n<font color=\"gray\" size=+1.0><b>13. pie_chart_2<\/b><\/font>\n<p style=\"font-size:20px; font-family:cursive; line-height: 1.7em\">\n    <span style='color:orange'> Course<\/span> distribution for <span style='color:green'>veg<\/span> and <span style='color:crimson'>non-veg <\/span>dishes.\n    \n<\/p>\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","db353b86":"<a id=\"4\"><\/a>\n<font color=\"gray\" size=+1.0><b>4. word_cloud_4<\/b><\/font>\n\n<p style=\"font-size:20px; font-family:cursive; line-height: 1.7em\">\n    non-vegetarian ingredients.\n<\/p>\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","a250cf96":"<a id=\"26\"><\/a>\n<font color=\"gray\" size=+1.0><b>Odisha<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","3ec52360":"<a id=\"27\"><\/a>\n<font color=\"gray\" size=+1.0><b>Karnataka<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","02a25036":"<a id=\"21\"><\/a>\n<font color=\"gray\" size=+1.0><b>Assam<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","a7598dd0":"<a id=\"23\"><\/a>\n<font color=\"gray\" size=+1.0><b>Andhra Pradesh<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","1d1a0f51":"<a id=\"20\"><\/a>\n<font color=\"gray\" size=+1.0><b>West Bengal<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","7200d4c6":"<a id=\"18\"><\/a>\n<font color=\"gray\" size=+1.0><b>Punjab<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","55cd6f70":"<a id=\"12\"><\/a>\n<font color=\"gray\" size=+1.0><b>12. pie_chart_1<\/b><\/font>\n<p style=\"font-size:20px; font-family:cursive; line-height: 1.7em\">\n    <span style='color:orange'> Flavor<\/span> distribution for <span style='color:green'>veg<\/span> and <span style='color:crimson'>non-veg <\/span>dishes.\n    \n<\/p>\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","f874c484":"<a id=\"17\"><\/a>\n<font color=\"gray\" size=+1.0><b>Gujarat<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","648fe848":"<a id=\"9\"><\/a>\n<font color=\"gray\" size=+1.0><b>9. bar_graph_5<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","268ea8a0":"<p style=\"font-size:20px; font-family:cursive; line-height: 1.7em\">\n    <h1>Statewise EDA<\/h1>\n<\/p>","bf20a297":"<a id=\"14\"><\/a>\n<font color=\"gray\" size=+1.0><b>14 basemap_1<\/b><\/font>\n<p style=\"font-size:20px; font-family:cursive; line-height: 1.7em\">\n    The count of dishes by region.\n<\/p>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","4947b731":"<a id=\"19\"><\/a>\n<font color=\"gray\" size=+1.0><b>Maharashtra<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","8505f071":"<div><h3> <span style='font-style:italic;color:pink;'>\n\nIndian cuisine encompasses a wide variety of regional cuisine native to India. Given the range of diversity in soil type, climate and occupations, these cuisines vary significantly from each other and use locally available ingredients such as: herbs, vegetables and fruits. The dishes are then served according to taste in either mild, medium or hot. Indian food is also heavily influenced by religious and cultural choices, like Hinduism and traditions. Some Indian dishes are common in more than one region of India, with many vegetarian and vegan dishes. Some ingredients commonly found in Indian dishes include: rice, wheat, ginger, green chillies and spices.\n   <\/span>\n    <\/h3>   <\/div> ","4f4470a9":"<div> <h1> <span style=\"color:brown\"> Please give an upvote if you liked the notebook\ud83d\ude4c<\/span><\/h1><\/div>\n\n","23d8abfb":"<a id=\"29\"><\/a>\n<font color=\"gray\" size=+1.0><b>None of the states<\/b><\/font>\n\n<p style=\"font-size:20px; font-family:cursive; line-height: 1.7em\">\n    The rows of the table were mentioned '-1' ,which means either data is missing or the dishes cannot be classified to one state or region.\n<\/p>\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","6c6e2389":"<a id=\"1\"><\/a>\n<font color=\"gray\" size=+1.0><b>1. word_cloud_1<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","8152e0ad":"<a id=\"8\"><\/a>\n<font color=\"gray\" size=+1.0><b>8. bar_graph_4<\/b><\/font>\n\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>","d70f8fc7":"<a id=\"3\"><\/a>\n<font color=\"gray\" size=+1.0><b>3. word_cloud_3<\/b><\/font>\n\n<p style=\"font-size:20px; font-family:cursive; line-height: 1.7em\">\n    Vegetarian ingredients .\n<\/p>\n<a href=\"#top\" class=\"btn btn-primary btn-sm\"  aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to menu<\/a>"}}