{"cell_type":{"3c6deb4c":"code","7c46a570":"code","b376dc43":"code","03e86e7d":"code","1aa1afff":"code","384cb390":"code","0a988f75":"code","a3d06f03":"code","960cacba":"code","a15c28f2":"code","3e57ca1b":"code","bd959863":"code","6fc1a827":"code","e295c04b":"code","a6cdb0d4":"code","7603ce3c":"code","21822f21":"code","b36ea9cd":"code","b1d326a7":"code","e040087f":"markdown","72a09994":"markdown","e93c5195":"markdown","c6cc796a":"markdown","b5eae407":"markdown"},"source":{"3c6deb4c":"import numpy as np\nimport pandas as pd\nfrom sklearn import linear_model\nfrom sklearn import preprocessing\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nRANDOM_SEED = 9999","7c46a570":"train = pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-1\/train.csv')\nsubmission = pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-1\/submission.csv')\ntest = pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-1\/test.csv')","b376dc43":"train.head(2)","03e86e7d":"submission.head(2)","1aa1afff":"test.head(2)","384cb390":"train = train.fillna(-20)","0a988f75":"test = test.fillna(-20)","a3d06f03":"print('Count of unique regions in test data', len(test['Country\/Region'].unique()))\nprint('Count of unique regions in train data', len(train['Country\/Region'].unique()))","960cacba":"train['Date'] =  pd.to_datetime(train['Date'])","a15c28f2":"train['year'] = train['Date'].dt.year\ntrain['month'] = train['Date'].dt.month\n\ntrain['dayofweek'] = train['Date'].dt.dayofweek\ntrain['dayofyear'] = train['Date'].dt.dayofyear\ntrain['weekofyear'] = train['Date'].dt.weekofyear","3e57ca1b":"train.head(5)","bd959863":"test['Date'] =  pd.to_datetime(test['Date'])","6fc1a827":"test['year'] = test['Date'].dt.year\ntest['month'] = test['Date'].dt.month\n\ntest['dayofweek'] = test['Date'].dt.dayofweek\ntest['dayofyear'] = test['Date'].dt.dayofyear\ntest['weekofyear'] = test['Date'].dt.weekofyear","e295c04b":"test.head(5)","a6cdb0d4":"from sklearn.neighbors import KNeighborsRegressor\n\nConfirmedCasesList = []\nFatalitiesList = []\n\npredictions = []\n\nfor region in train['Country\/Region'].unique():\n    sub_train = train[train['Country\/Region'] == region]\n    sub_test= test[test['Country\/Region'] == region]\n    \n    sub_clf1 = KNeighborsRegressor(n_neighbors=5).fit(sub_train[['year', 'month', 'dayofweek', 'dayofyear', 'weekofyear']], sub_train[['ConfirmedCases']])\n    sub_clf2 = KNeighborsRegressor(n_neighbors=5).fit(sub_train[['year', 'month', 'dayofweek', 'dayofyear', 'weekofyear']], sub_train[['Fatalities']])\n    \n    ConfirmedCasesList += [x for x in sub_clf1.predict(sub_test[['year', 'month', 'dayofweek', 'dayofyear', 'weekofyear']])]\n    FatalitiesList += [x for x in sub_clf2.predict(sub_test[['year', 'month', 'dayofweek', 'dayofyear', 'weekofyear']])]","7603ce3c":"submission.drop(['ConfirmedCases', 'Fatalities'], axis=1, inplace=True)\nsubmission['ConfirmedCases'] = ConfirmedCasesList\nsubmission['Fatalities'] = FatalitiesList","21822f21":"submission.head(5)","b36ea9cd":"submission['ConfirmedCases'] = submission['ConfirmedCases'].str.get(0)\nsubmission['Fatalities'] = submission['Fatalities'].str.get(0)\n\n#submission['ConfirmedCases'] = submission['ConfirmedCases'].apply(np.ceil)\n#submission['Fatalities'] = submission['Fatalities'].apply(np.ceil)","b1d326a7":"submission.to_csv('submission.csv', index=False)","e040087f":"Let's build models for each region","72a09994":"# FE","e93c5195":"train part","c6cc796a":"test part","b5eae407":"# Modelling"}}