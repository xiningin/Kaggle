{"cell_type":{"71a0ea83":"code","04db49e9":"code","9b1efcbf":"code","15222b71":"code","8609954e":"code","5f0f5b90":"code","5d5168bd":"code","af30eac4":"code","f627029b":"code","a0ca4427":"code","03f30962":"code","27d3ab3d":"code","18a67811":"code","f17deb3d":"markdown","47f0aba3":"markdown","6e46acc1":"markdown","6586984a":"markdown","a15ecb53":"markdown","b7fc919e":"markdown","52943673":"markdown","fc8cb97c":"markdown","96407e0a":"markdown","ab36e7e6":"markdown","2122703f":"markdown","75853189":"markdown","8e0cc8ce":"markdown","192dab75":"markdown","8785df36":"markdown","3bf89df6":"markdown","b42cffa9":"markdown"},"source":{"71a0ea83":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pyplot as plt\nimport ipywidgets as widgets\nfrom IPython.display import display\nfrom scipy import stats\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","04db49e9":"columns_needed = [\"season\", \"episode_num_in_season\", \"episode_num_overall\", \"title\", \"us_viewers\"]\ncolumns_needed_1 = [\"title\", \"imdb_rating\"]\nepisodes = pd.read_csv('..\/input\/the-office-episodes-data\/the_office_episodes.csv', usecols=columns_needed)\nimdb = pd.read_csv('..\/input\/the-office-episodes-data\/the_office_imdb.csv', usecols=columns_needed_1)\n\nthe_office_df = pd.merge(episodes, imdb, on='title')\n\nthe_office_df","9b1efcbf":"x = the_office_df.us_viewers\ny = the_office_df.imdb_rating\nplt.scatter(x,y)\n\nslope, intercept, r, p, std_err = stats.linregress(x, y)\n\ndef myfunc(x):\n  return slope * x + intercept\n\nmymodel = list(map(myfunc, x))\n\nplt.scatter(x, y)\nplt.plot(x, mymodel)\nplt.title(\"Relationship Between Viewers and IMDB Rating\")\nplt.xlabel(\"US Viewers\")\nplt.ylabel(\"IMDB Rating\")\nplt.show()\n\nplt.show()\nprint(\"Correlation Coefficient:\")\nprint(r)","15222b71":"plt.plot(the_office_df.episode_num_overall, the_office_df.us_viewers, color = \"cyan\", label = \"Viewers\")\nplt.xlabel('Episode Number')\nplt.ylabel('US Viewers')\nplt.title('The Office US: US Viewers Over Time')\nplt.legend()\nplt.show()","8609954e":"the_office_df.boxplot(column='us_viewers',\n                  by='season',\n                  color='magenta',\n                rot=90)","5f0f5b90":"the_office_most_watched = the_office_df[(the_office_df.us_viewers >= 10000000)]\nthe_office_most_watched","5d5168bd":"x = the_office_df.episode_num_overall\ny = the_office_df.imdb_rating\nplt.scatter(x,y)\n\nslope, intercept, r, p, std_err = stats.linregress(x, y)\n\ndef myfunc(x):\n  return slope * x + intercept\n\nmymodel = list(map(myfunc, x))\n\nplt.scatter(x, y)\nplt.plot(x, mymodel)\nplt.title(\"IMDb Rating Over Time\")\nplt.xlabel(\"Episode Number\")\nplt.ylabel(\"IMDB Rating\")\nplt.show()\n\nplt.show()\nprint(\"Correlation Coefficient:\")\nprint(r)","af30eac4":"season_1 = the_office_df[(the_office_df.season == 1)]\nsum_1 = season_1.imdb_rating.sum()\nnumber_of_1 = len(season_1)\naverage_1 = sum_1\/number_of_1\n\nseason_2 = the_office_df[(the_office_df.season == 2)]\nsum_2 = season_2.imdb_rating.sum()\nnumber_of_2 = len(season_2)\naverage_2 = sum_2\/number_of_2\n\nseason_3 = the_office_df[(the_office_df.season == 3)]\nsum_3 = season_3.imdb_rating.sum()\nnumber_of_3 = len(season_3)\naverage_3 = sum_3\/number_of_3\n\nseason_4 = the_office_df[(the_office_df.season == 4)]\nsum_4 = season_4.imdb_rating.sum()\nnumber_of_4 = len(season_4)\naverage_4 = sum_4\/number_of_4\n\nseason_5 = the_office_df[(the_office_df.season == 5)]\nsum_5 = season_5.imdb_rating.sum()\nnumber_of_5 = len(season_5)\naverage_5 = sum_5\/number_of_5\n\nseason_6 = the_office_df[(the_office_df.season == 6)]\nsum_6 = season_6.imdb_rating.sum()\nnumber_of_6 = len(season_6)\naverage_6 = sum_6\/number_of_6\n\nseason_7 = the_office_df[(the_office_df.season == 7)]\nsum_7 = season_7.imdb_rating.sum()\nnumber_of_7 = len(season_7)\naverage_7 = sum_7\/number_of_7\n\nseason_8 = the_office_df[(the_office_df.season == 8 )]\nsum_8 = season_8.imdb_rating.sum()\nnumber_of_8 = len(season_8)\naverage_8 = sum_8\/number_of_8\n\nseason_9 = the_office_df[(the_office_df.season == 9 )]\nsum_9 = season_9.imdb_rating.sum()\nnumber_of_9 = len(season_9)\naverage_9 = sum_9\/number_of_9\n\nbarWidth = 0.5\naverages = [average_1, average_2, average_3, average_4, average_5, average_6, average_7, average_8, average_9]\n\nr1 = np.arange(len(averages))\n\nplt.bar(r1, averages, color='cyan', width=barWidth, edgecolor='white')\n \nplt.xlabel('Season')\nplt.ylabel('Average IMDb')\nplt.title('Average IMDb by Season')\nplt.xticks(np.arange(9), ['1', '2', '3', '4', '5', '6', '7', '8', '9'])\nplt.show()\n","f627029b":"the_office_df.boxplot(column='imdb_rating',\n                  by='season',\n                  color='magenta',\n                rot=90)","a0ca4427":"nineplus_1 = len(the_office_df[(the_office_df.imdb_rating >= 9) & (the_office_df.season == 1)])\nnineplus_2 = len(the_office_df[(the_office_df.imdb_rating >= 9) & (the_office_df.season == 2)])\nnineplus_3 = len(the_office_df[(the_office_df.imdb_rating >= 9) & (the_office_df.season == 3)])\nnineplus_4 = len(the_office_df[(the_office_df.imdb_rating >= 9) & (the_office_df.season == 4)])\nnineplus_5 = len(the_office_df[(the_office_df.imdb_rating >= 9) & (the_office_df.season == 5)])\nnineplus_6 = len(the_office_df[(the_office_df.imdb_rating >= 9) & (the_office_df.season == 6)])\nnineplus_7 = len(the_office_df[(the_office_df.imdb_rating >= 9) & (the_office_df.season == 7)])\nnineplus_8 = len(the_office_df[(the_office_df.imdb_rating >= 9) & (the_office_df.season == 8)])\nnineplus_9 = len(the_office_df[(the_office_df.imdb_rating >= 9) & (the_office_df.season == 9)])\n\nnine_ten = [nineplus_1, nineplus_2, nineplus_3, nineplus_4, nineplus_5, nineplus_6, nineplus_7, nineplus_8, nineplus_9]\n\nnine_eight_1 = len(the_office_df[(the_office_df.imdb_rating >= 8) & (the_office_df.imdb_rating < 9) &(the_office_df.season == 1)])\nnine_eight_2 = len(the_office_df[(the_office_df.imdb_rating >= 8) & (the_office_df.imdb_rating < 9) & (the_office_df.season == 2)])\nnine_eight_3 = len(the_office_df[(the_office_df.imdb_rating >= 8) & (the_office_df.imdb_rating < 9) & (the_office_df.season == 3)])\nnine_eight_4 = len(the_office_df[(the_office_df.imdb_rating >= 8) & (the_office_df.imdb_rating < 9) & (the_office_df.season == 4)])\nnine_eight_5 = len(the_office_df[(the_office_df.imdb_rating >= 8) & (the_office_df.imdb_rating < 9) & (the_office_df.season == 5)])\nnine_eight_6 = len(the_office_df[(the_office_df.imdb_rating >= 8) & (the_office_df.imdb_rating < 9) & (the_office_df.season == 6)])\nnine_eight_7 = len(the_office_df[(the_office_df.imdb_rating >= 8) & (the_office_df.imdb_rating < 9) & (the_office_df.season == 7)])\nnine_eight_8 = len(the_office_df[(the_office_df.imdb_rating >= 8) & (the_office_df.imdb_rating < 9)  & (the_office_df.season == 8)])\nnine_eight_9 = len(the_office_df[(the_office_df.imdb_rating >= 8) & (the_office_df.imdb_rating < 9) & (the_office_df.season == 9)])\n\nnine_eight = [nine_eight_1, nine_eight_2, nine_eight_3, nine_eight_4, nine_eight_5, nine_eight_6, nine_eight_7, nine_eight_8, nine_eight_9]\n\nseven_eight_1 = len(the_office_df[(the_office_df.imdb_rating >= 7) & (the_office_df.imdb_rating < 8) &(the_office_df.season == 1)])\nseven_eight_2 = len(the_office_df[(the_office_df.imdb_rating >= 7) & (the_office_df.imdb_rating < 8) & (the_office_df.season == 2)])\nseven_eight_3 = len(the_office_df[(the_office_df.imdb_rating >= 7) & (the_office_df.imdb_rating < 8) & (the_office_df.season == 3)])\nseven_eight_4 = len(the_office_df[(the_office_df.imdb_rating >= 7) & (the_office_df.imdb_rating < 8) & (the_office_df.season == 4)])\nseven_eight_5 = len(the_office_df[(the_office_df.imdb_rating >= 7) & (the_office_df.imdb_rating < 8) & (the_office_df.season == 5)])\nseven_eight_6 = len(the_office_df[(the_office_df.imdb_rating >= 7) & (the_office_df.imdb_rating < 8) & (the_office_df.season == 6)])\nseven_eight_7 = len(the_office_df[(the_office_df.imdb_rating >= 7) & (the_office_df.imdb_rating < 8) & (the_office_df.season == 7)])\nseven_eight_8 = len(the_office_df[(the_office_df.imdb_rating >= 7) & (the_office_df.imdb_rating < 8)  & (the_office_df.season == 8)])\nseven_eight_9 = len(the_office_df[(the_office_df.imdb_rating >= 7) & (the_office_df.imdb_rating < 8) & (the_office_df.season == 9)])\n\n\nseven_eight = [seven_eight_1, seven_eight_2, seven_eight_3, seven_eight_4, seven_eight_5, seven_eight_6, seven_eight_7, seven_eight_8, seven_eight_9]\n\nseven_six_1 = len(the_office_df[(the_office_df.imdb_rating >= 6) & (the_office_df.imdb_rating < 7) &(the_office_df.season == 1)])\nseven_six_2 = len(the_office_df[(the_office_df.imdb_rating >= 6) & (the_office_df.imdb_rating < 7) & (the_office_df.season == 2)])\nseven_six_3 = len(the_office_df[(the_office_df.imdb_rating >= 6) & (the_office_df.imdb_rating < 7) & (the_office_df.season == 3)])\nseven_six_4 = len(the_office_df[(the_office_df.imdb_rating >= 6) & (the_office_df.imdb_rating < 7) & (the_office_df.season == 4)])\nseven_six_5 = len(the_office_df[(the_office_df.imdb_rating >= 6) & (the_office_df.imdb_rating < 7) & (the_office_df.season == 5)])\nseven_six_6 = len(the_office_df[(the_office_df.imdb_rating >= 6) & (the_office_df.imdb_rating < 7) & (the_office_df.season == 6)])\nseven_six_7 = len(the_office_df[(the_office_df.imdb_rating >= 6) & (the_office_df.imdb_rating < 7) & (the_office_df.season == 7)])\nseven_six_8 = len(the_office_df[(the_office_df.imdb_rating >= 6) & (the_office_df.imdb_rating < 7)  & (the_office_df.season == 8)])\nseven_six_9 = len(the_office_df[(the_office_df.imdb_rating >= 6) & (the_office_df.imdb_rating < 7) & (the_office_df.season == 9)])\n\n\nseven_six = [seven_six_1, seven_six_2, seven_six_3, seven_six_4, seven_six_5, seven_six_6, seven_six_7, seven_six_8, seven_six_9]\n\n\nbarWidth = 0.2\n\nr1 = np.arange(len(nine_ten))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\nr4 = [x + barWidth for x in r3]\nr5 = [x + barWidth for x in r4]\n\nplt.bar(r1, seven_six, color='cyan', width=barWidth, edgecolor='white', label='6-7')\nplt.bar(r2, seven_eight, color='magenta', width=barWidth, edgecolor='white', label='7-8')\nplt.bar(r3, nine_eight, color='yellow', width=barWidth, edgecolor='white', label='8-9')\nplt.bar(r4, nine_ten, color='#39FF14', width=barWidth, edgecolor='white', label='9-10')\n \nplt.xlabel('Season')\nplt.ylabel('Number of Episodes')\nplt.title('IMDb Rating by Episode')\nplt.xticks([r + barWidth for r in range(len(nine_ten))], ['1', '2', '3', '4', '5', '6', '7','8', '9'])\n \nplt.legend()\nplt.show()","03f30962":"the_office_best_episodes = the_office_df[(the_office_df.imdb_rating >= 9)]\nthe_office_best_episodes","27d3ab3d":"the_office_worst_episodes = the_office_df[(the_office_df.imdb_rating <= 7.5)]\nthe_office_worst_episodes","18a67811":"\nvar_1 = season_1.loc[:,\"imdb_rating\"].var()\nvar_2 = season_2.loc[:,\"imdb_rating\"].var()\nvar_3 = season_3.loc[:,\"imdb_rating\"].var()\nvar_4 = season_4.loc[:,\"imdb_rating\"].var()\nvar_5 = season_5.loc[:,\"imdb_rating\"].var()\nvar_6 = season_6.loc[:,\"imdb_rating\"].var()\nvar_7 = season_7.loc[:,\"imdb_rating\"].var()\nvar_8 = season_8.loc[:,\"imdb_rating\"].var()\nvar_9 = season_9.loc[:,\"imdb_rating\"].var()\n\nbarWidth = 0.5\nvar_seasons = [var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9]\n\nr1 = np.arange(len(var_seasons))\n\nplt.bar(r1, var_seasons, color='cyan', width=barWidth, edgecolor='white')\n \nplt.xlabel('Season')\nplt.ylabel('IMDb Variance')\nplt.title('IMDb Variance by Season')\nplt.xticks(np.arange(9), ['1', '2', '3', '4', '5', '6', '7', '8', '9'])\n \nplt.legend()\nplt.show()\n","f17deb3d":"#### 3.4 Grouped Bar of IMDb Ratings by Season\n\nThe below grouped bar chart illustrates the IMDb ratings awarded to each episode within a season. Season 7 has the most 9+ rated episodes, but also a lot of lower rated episodes. The prescence of low rated (6-7) episodes only begins in season 6, an indicator of declining quality. Only two seasons have no 9+ rated episodes, season 1 and season 8. Season 3 and season 5 both stand out as high quality. Season 3 has the second most 9+ rated episodes, whilst season 8 is the only one with no episodes rated below 8. The box plot above shows that season 3 has a higher median rating than season 5, but season 5's best episode is higher rated than season 3's. ","47f0aba3":"### 2.0 TV Ratings\n\nThe aim of looking into the TV ratings over the series is to ascertain the show's cultural impact over time and to determine the point at which The Office attracted the most attention. I believe that some consideration should be given to the TV ratings when considering the show's peak as it reflects the level of engagement fans had with the show at the time. The Best Season Award should go to a season compelling enough to keep fans tuned in each week. ","6e46acc1":"#### 2.2 TV Ratings Box Plot by Season\n\nLooking at the viewing figures of each season individually reveals a similar pattern. The viewing figures drop off after season 6. Seasons 2-5 enjoyed the highest average figures, with the median viewership highest for seaon 4. ","6586984a":"Like most sitcoms, The Office takes some time to find its groove. It also suffers from a severe case of seasonal rot as plots become more extreme and key cast members are replaced. But when did The Office peak? And how long was its peak for? \n\nIncluded in the data are two metrics by which we can judge an episode: \n\n* TV Ratings\n* IMDb Ratings\n\nTV ratings can measure the popularity of the show over time, whilst IMDb ratings measure quality as dictated by the audience. This analysis will primarily focus on IMDb ratings as an indicator of the quality of an episode. IMDb ratings are a direct gage of quality as perceived by the audience, whilst TV ratings merely reflect the number of people who tuned in. A lot of people might have decided to watch an ultimately disappointing episode. TV ratings are used in this analysis to judge the cultural impact of the programme - i.e. when did The Office attract the most attention?\n\n* Which season was the most well received?\n* Which episode(s) stood out as being of particularly high quality?\n* Which season was the most consistent?\n\nThrough balancing the overall quality and consistency, this analysis will conclude by crowning one season the winner of the \"Best Season Award\" Dundie. \n\n## Contents\n\n### 0.0 Setting Up and Comments on Dataset\n\n### 1.0 Relationship Between TV Ratings and IMDb Ratings\n\n### 2.0 TV Ratings\n\n#### 2.1 TV Ratings Over Time\n\n#### 2.2 TV Ratings Box Plot by Season\n\n#### 2.3 Most Watched Episodes\n\n### 3.0 IMDb Ratings\n\n#### 3.1 Relationship between IMDb Rating and Time\n\n#### 3.2 Average IMDb Rating by Season\n\n#### 3.3 IMDb Rating Box Plots by Season\n\n#### 3.4 Grouped Bar of IMDb Ratings by Season\n\n#### 3.5 Highest and Lowest Rated Episodes\n\n#### 3.6 Measuring Consistency Using Variance\n\n### 4.0 Conclusions\n\n#### 4.1 The Dundies: Best Season Award goes to...\n","a15ecb53":"### 4.0 Conclusions\n\n#### 4.1 The Dundies: Best Season Award goes to...\n\nThe Office serves up high quality episodes right up to the end of its run, but the consistency wavers over time. Whilst the above graphs and calculations help to convey the change in the quality of the show over time, the decision regarding which season is the best is ultimately a value judgement. The decision requires balancing standout episodes alongside consistency and cultural impact.\n\nI believe that the show enjoys a golden period from season 2 to season 5 where the IMDb ratings are consistently high, reflected in stable viewership. From season 6 onwards the ownership of Dunder Mifflin becomes a major plot point and new characters are introduced that are either unlikeable or underdeveloped: Deangelo, Robert California, Nellie, Clark, & Pete. It is obvious from the data which season is the weakest - season 8. To decide which season is the best is much more difficult. \n\nSeason 7 has several very highly rated episodes, but misses out due to its inconsistency. Between seasons 2 - 5 seasons 3 and 5 contain more 9+ rated episodes. Season 3 has more 9+ episodes than season 5, but every season 5 episode is ranked above 8, whereas season 3 has one episode below an 8. Nonetheless, season 3 has the highest median IMDb rating (see boxplots).\n\nWithout further ado, the Dundie goes to...\n\nSeason 3!\n\n\nThe below article was useful in providing a summary of the chronology of events during the show's run:\n\n[The Office Wiki: Timeline of The Office](https:\/\/theoffice.fandom.com\/wiki\/Timeline_of_The_Office#Season_1:)","b7fc919e":"#### 3.6 Measuring Consistency Using Variance\n\nThe below chart plots the variance in each season's IMDb ratings. Variance measures the distribution of the ratings around the mean. A low variance indicates that the ratings are all grouped close to the mean, with a large variance indicating a wide spread of ratings. The increase in variance over the seasons indicates growing inconsistency over the course of the show's run. The exception is the weakest season, season 8, which could be called consistently bad.","52943673":"#### 3.2 Average IMDb Rating by Season\n\nWhen comparing the average IMDb rating per episode for each season, it is clear that a level of quality is maintained throughout. Season 8 sticks out as an obvious weak spot, but other than that the differences in these averages are small.","fc8cb97c":"If the best episodes are spread out throughout the show's run, the worst episodes are almost all skewed towards the end of the show's run. The pilot episode received poor reviews, but after that there isn't a single episode rated below 7.5 until season 6. Season 8 and season 9 stick out for having poor quality episodes in, with 8 episodes below 7.5 each.","96407e0a":"### 1.0 Relationship Between TV Ratings and IMDb Ratings\n\nA check of the correlation between our two metrics revealed a very weak positive correlation. A higher rated episode is slightly more likely to have had a lot of US viewers when it was released, but we cannot infer much about one metric from the other. This reinforces my position of analysing the two metrics separately. ","ab36e7e6":"#### 2.3 Most Watched Episodes\n\nThe below table lists the most watched episodes of The Office. These are the episodes that pulled in over 10,000,000 US viewers when they aired. The aforementioned season 5 episode Stress Relief, which aired after the Superbowl, is there. The outlier for season 1 on the box plot above is the Pilot, which generated the second highest figures of the whole series. There is also a run of 3 season 3 episodes in a row that attracted over 10,000,000 viewers. During those 3 episodes, Dwight is fired for protecting Angela, Andy gets sent to anger management, and complications develop in the love triangle between Jim, Pam, and Karen. ","2122703f":"# The Dundies: Best Season Award","75853189":"#### 3.3 IMDb Box Plot by Season\n\nLooking at the distribution of IMDb scores season by season is more enlightening.  Season 6, where the Sabre takeover happens. 3, 4, and 5 all come out very strong. Season 5 doesn't have an episode rated below 8. Interestingly, season 7's box plot is very long, indicating a high level of variance between its episodes. The best episode ranked above 9.5, with the worst below 7.5","8e0cc8ce":"### 0.0 Setting Up and Comments on Dataset\n\nThe TV ratings details are stored in the_office_episodes.csv, whilst the IMDb ratings are stored in a separate file, the_office_imdb.csv. The column of the second csv file that contains these ratings is appended to the the_office_episodes.csv file using the episode title as the link. \n\nSeveral episodes of The Office are 40 minute double episodes and the two datasets available store these differently. IMDb rates the episode as a whole - it occupies one row. The episodes dataset splits these episodes into two separate episode numbers, resulting in two rows. The Finale, for example, is listed as episode 24 and 25 of season 9 in the episodes dataset, but the IMDb dataset lists it as episode 23. For the sake of this analysis, I have opted to use the episode dataset approach of treating these as two separate episodes. My reason for this is that these episodes are twice the length of a normal episode, so they contain twice the content. The consequence of this is that my analysis counts the 9.8 IMDb rating for The Finale as two separate IMDb ratings, which has ramifications for averages. \n\nThe result of this data processing is the following format:","192dab75":"### 3.0 IMDb Ratings\n\nIMDb ratings are being used here to gage quality of both individual episodes and seasons overall. Whilst viewership reflects popularity at the time, ratings can be added to IMDb at any time. They act as an aggregate for how much an episode was enjoyed both at the time and by audiences since the initial run of the show. ","8785df36":"#### 3.5 Highest and Lowest Rated Episodes\n\nAs established, The Office manages to put out high quality episodes right up to the end of its run. 7\/9 of its seasons have at least 1 episode rated above 9. Infact, its highest rated episodes come later in the show's run - the season 7 episode where Michael leaves and the finale are both rated 9.8.","3bf89df6":"#### 2.1 TV Ratings Over Time\n\nThat's quite a spike in viewing figures midway through The Office's run right? The episode that causes it is season 5's Stress Relief. It's a double episode that starts with Dwight starting a fire (for the sake of fire safety!) and ends with Michael roasting the whole office (\"Boom, Roasted\"). The reason why it was so watched is because it aired straight after the Super Bowl. \n\nIgnoring that anomaly, a few things are noticable from this zoomed out look at the viewing figures. The drop off in viewers after a disappointing pilot is visible, as well as a quick recovery and sustained viewing figures for most of The Office's time on TV. The numbers begin to decline in the final third of its run, picking up for the final few episodes. ","b42cffa9":"#### 3.1 Relationship between IMDb Rating and Time\n\nThe weak correlation between episode number and IMDb rating reflects a gradual deline in quality over time, but, as is clear from the scatter, there are some very highly rated episodes of The Office right at the end of its run. "}}