{"cell_type":{"c07a0e7b":"code","801e8e32":"code","4d1e512a":"code","ae3d0304":"code","52e064e4":"code","978fef70":"code","c7851976":"code","65b01e4d":"code","31e91ff3":"code","5e282969":"code","43f48af6":"markdown","47e81578":"markdown","fe7c2b31":"markdown","8e29dec4":"markdown","1c6cf207":"markdown","07a0e023":"markdown","214f9109":"markdown","e5473476":"markdown","235c017a":"markdown","e5722eea":"markdown"},"source":{"c07a0e7b":"# 1.0 Call libraries\nfrom sklearn.cluster import KMeans\n# 1.1 For creating elliptical-shaped clusters\nfrom sklearn.datasets import make_blobs\n# 1.2 Data manipulation\nimport pandas as pd\nimport numpy as np\n# 1.3 Plotting\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LogNorm\nimport seaborn as sns\n\n#1.4Import SKLearn Classes\nfrom sklearn.cluster import KMeans\nfrom sklearn.mixture import GaussianMixture\nfrom sklearn.manifold import TSNE\nimport re  #regular expression\nfrom sklearn.preprocessing import StandardScaler\nfrom pandas.plotting import andrews_curves\n\nimport warnings\nwarnings.filterwarnings('ignore')\n# 1.5 TSNE\nfrom sklearn.manifold import TSNE\nimport os\n# 1.6 Set your working folder to where data is\nos.chdir(\"..\/input\")\nos.listdir()\n\n#1.7 Import Warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n","801e8e32":"# 2.1 Read csv file\nMall_Customers = pd.read_csv(\"Mall_Customers.csv\")\nMall_Customers_col = {\n'Annual Income (k$)':'Annual_Income',\n'Spending Score (1-100)':'Spending_Score'\n}\n\nMall_Customers.rename(columns = Mall_Customers_col,inplace = True)\n\n#2.2 Drop Customer ID Column from Mall Customer Table\nMall_Customers.drop('CustomerID',axis =1,inplace = True)\n\n#2.3 Replacing {Male,Female] in gender column with [0,1]\n\nMall_Customers.Gender.replace(('Male', 'Female'), (1, 0), inplace=True)\n\n\n# Engineering  features\nMall_Customers[\"Spending_Score_Cat\"] = pd.cut(\n                       Mall_Customers['Spending_Score'],\n                       bins = [0,33,66,99],\n                       labels= [1,2,3]\n                      )\n\nMall_Customers['Spending_Score_Cat'] =Mall_Customers['Spending_Score_Cat'].astype(str).astype(int)\nMall_Customers.dtypes\n#2.4 Plotting of Mall Customer Data\n\nsns.distplot(Mall_Customers.Age)  #Mall Age Data is More Scewed towards Young Age.\nsns.despine()     \n\n\nsns.distplot(Mall_Customers.Annual_Income)\n\n#2.5 Columns in num_data that are either discrete (with few levels)\n#     or numeric\nnum_data = Mall_Customers.select_dtypes(include = ['float64', 'int64','int32']).copy()\ncols= ['Age','Gender','Annual_Income','Spending_Score_Cat']","4d1e512a":"# 3.0 Create an instance of StandardScaler object\nss= StandardScaler()\n\n# 3.1 Use fit and transform method\nnc = ss.fit_transform(num_data.loc[:,cols])\n\n# 3.3\nnc.shape     # (200,4)\n\n# 3.4 Transform numpy array back to pandas dataframe\n#        as we will be using pandas plotting functions\nnc = pd.DataFrame(nc, columns = cols)\n\n# 3.6 Add\/overwrite few columns that are discrete\n#        These columns were not to be scaled\n\nnc['Gender'] = Mall_Customers['Gender']\n# 3.7 Also create a dataframe from random data\n#      for comparison\nnc_rand = pd.DataFrame(np.random.randn(200,4),\n                       columns = cols    # Assign column names, just like that\n                       )\n\n# 3.8 Add\/overwrite these columns also\nnc_rand['Spending_Score_Cat']        = np.random.randint(3, size= (200,))   # [0,1]\nnc_rand.shape    # (200,4)\n","ae3d0304":"#4.0 Now start plotting\n\n#4.1 Parallel coordinates with random data\nfig1 = plt.figure()\npd.plotting.parallel_coordinates(nc_rand,\n                                 'Spending_Score_Cat',    # class_column\n                                  colormap='winter'\n                                  )\nplt.xticks(rotation=90)\nplt.title(\"Parallel chart with random data\")\n\n\n# 4.2 Parallel coordinates with 'Mall Customer' data\nfig2 = plt.figure()\nax = pd.plotting.parallel_coordinates(nc,'Spending_Score_Cat',\n                                  colormap= plt.cm.winter\n                                  )\n\nplt.xticks(rotation=90)\nplt.title(\"Parallel chart with Mall Customer data\")\n\n","52e064e4":"# 4.3 Andrews charts with random data\nfig3 = plt.figure()\npd.plotting.andrews_curves(nc_rand,\n                           'Spending_Score_Cat',\n                           colormap = 'winter')\n\nplt.title(\"Andrews plots with random data\")\n\n\n# 4.4 Andrews plots with Mall Customer data\nfig4 = plt.figure()\npd.plotting.andrews_curves(nc,\n                           'Spending_Score_Cat',\n                            colormap =  plt.cm.winter\n                           )\nplt.xticks(rotation=90)\nplt.title(\"Andrews curve with Mall_Customer data\")\n\n","978fef70":"#5.1 Done Unsupervised Learning Using KMeans Algorithm\nss= StandardScaler()\nss.fit(Mall_Customers)\nX = ss.transform(Mall_Customers)\nX.shape\n\nsse = []\nno_of_clusters = 30\nfor k in range(1,no_of_clusters):\n    km = KMeans(n_clusters = k)\n    km.fit(X)\n    sse.append(km.inertia_)\nplt.plot(range(1,no_of_clusters), sse, marker='*')\n\n\n","c7851976":"#5.2 This algorithm shows 7 Clusters are optimum now we see what is interpretion of all the 7 clusters\n\nkmean= KMeans(7)\nkmean.fit(X)\nlabels=kmean.labels_\n\nclusters=pd.concat([Mall_Customers, pd.DataFrame({'cluster':labels})], axis=1)\nclusters.head()\nfor c in clusters:\n    grid= sns.FacetGrid(clusters, col='cluster')\n    grid.map(plt.hist, c)","65b01e4d":"#6.1 Import GaussianMixture class\nfrom sklearn.mixture import GaussianMixture\nss= StandardScaler()\nss.fit(Mall_Customers)\nX = ss.transform(Mall_Customers)\nX.shape\n\n#6.2 Done Unsuperwised learning using Guassian Mixture Model\ngm = GaussianMixture(\n                     n_components = 5,\n                     n_init = 10,\n                     max_iter = 100)\ngm.fit(X)\n\nfig = plt.figure()\n\nplt.scatter(X[:, 1], X[:, 2],\n            c=gm.predict(X),\n            s=5)\nplt.scatter(gm.means_[:, 1], gm.means_[:, 2],\n            marker='v',\n            s=10,               # marker size\n            linewidths=5,      # linewidth of marker edges\n            color='red'\n            )","31e91ff3":"#7.1 Findings of BIC and AIC\nbic =[]\naic= []\n\nfor i in range(8):\n    gm = GaussianMixture(\n                     n_components = i+1,\n                     n_init = 10,\n                     max_iter = 100)\n    gm.fit(X)\n    bic.append(gm.bic(X))\n    aic.append(gm.aic(X))\n    \nfig = plt.figure()\nplt.plot([1,2,3,4,5,6,7,8], aic)\nplt.plot([1,2,3,4,5,6,7,8], bic)\nplt.show()","5e282969":"#8.1Now do unsupervised learning using TSNE Model\n\ntsne = TSNE(n_components = 2)\ntsne_out = tsne.fit_transform(X)\nplt.scatter(tsne_out[:, 0], tsne_out[:, 1],\n            marker='x',\n            s=50,              # marker size\n            linewidths=5,      # linewidth of marker edges\n            c=gm.predict(X)   # Colour as per gmm\n            )\n","43f48af6":"**Cluster Analysis using Gaussian Mixture Model**","47e81578":"**Unsupervised Learning Using TSNE Model**","fe7c2b31":"**Parallel Charts**\nParallel coordinates helps to visualize if a feature helps to segregate the groups effectively. If a segregation is effected, that feature is likely going to be very useful in predicting that group. We ananlyses with random data and Mall Customer data for seeing the grouping between different variables.","8e29dec4":"**SSE Plots** are used to analyse what are the optimum clusters required to analysed the data perfectly. Optimum values comes from elbow of chart.","1c6cf207":"**Analysis of Various Clusters**\n\n**Cluster 0** - This cluster belongs to \n     A.middle and senior age group from 35 to 70.\n     B.Having average income range 25000 to 75000\n     C.Most of them belongs to Average spending score of 40 to 60.\nPeople with medium spending score with income in mid range and age group also in mid range.\n\n**Cluster 1**. This cluster belongs to\n     A. Age group of 20 to 40.\n     B. Annual income between 25000 to 70000.\n     C. Spending score between 20 to 90.     \nPeople in younger category with high variation in annual income and spending score.\n\n**Cluster 2.** This Cluster belongs to \n     A.Agegroup of 25 to 40.\n     B.Annual Income on higher side 75000 to 125000.\n     C.Spending score is also on higher side i.e. 60 to 100.\nPeople in medium agegroup with higher annual income and with high spending score.\n\n**Cluster 3.** This cluster belongs to \n     A. Agegroup of Elder People 45 to 80.\n     B. Annual Income in two groups 20000 - 60000 and 75000 -1000000.\n     C. Spending score also in two groups 5-20 and 35-60\nThis cluster belongs to mix of senior and midage people therefore spending score also in two ranges.\n\n\n**Cluster 4.** This cluster belongs to \n     A. Agegroup of 15 to 40 i.e younger and middle group.\n     B. Annual Income in a range of 15000 to 60000.\n     C. Spending score between 5 to 100.\nThis cluster belongs to younger generation group with income in lower and middle group and spening score mostly in 40 to 60.\n\n**Cluster 5.** This cluster belongs to \n     A. Agegroup of 40-60\n     B. Annual Income in 75000 to 100000\n     C. Spending score between 60 to 100.\nThis cluster belongs to higher age group with higher income and higher spending score.\n\n**Cluster 6.** This cluster belongs to \n    A. Agegroup of 20 to 55\n    B. Annual Income in 75000 to 150000\n    C. Spending score of 10 to 40.\n\nThis cluster belongs to mature customers with higher income range but spending scores are average.","07a0e023":"**Andrews Curve**\nAndrews Curve helps visualize if there are inherent groupings of the numerical features based on a given grouping. If the features (columns in the dataset) doesn\u2019t help discriminate the group (cyl), then the lines will not be well segregated as you see below. We see First chart of Andrews curve with random data shows no correlation or inherient grouping between variables whereas Mall Customer data shows grouping between different variables.","214f9109":"**Conclusion**\n\nWhile Analysing Mall Customer data we analysed by Using Parallel and Andrew Charts that there is strong correlation between Age,Annual Income and Spending Score.\n\n-Persons with Middle age and Higher Annual Income have higher spending score.\n-Persons with Higher age and Higher Annual Income have low spending score.\n-Persons with Lower age and Lower Annual Income have low spending score.\n\n**Clusting Analysis **\n\nWe analysed the data using K-Means and Guassian Mixture clustering algorithm. SSE chart of K Means gives seven clusters are optimum for analysis. We also analysed all the seven clusters.\n","e5473476":"**Conclusions from Parallel Chart**\n1. Middle Age Groups customers have a grouping with Higher spending score.\n2. Higher Annual income customers have higher spending score.\n3. Lower Annual income customers have lower spending scores.\n","235c017a":"**BIC and AIC analysis in Guassian Mixture Model**","e5722eea":"**Objective of this Sheet** \n\nObjective is of this sheet to analyse data of various customers visited at Mall on following parameters\n1.Agegroup\n2.Sex\n3.Annual Income\n4.Spending Score\n\nIn present notebook we analyse data using K Means clustering, Gussian Mixture Model and TSNE Model. We also analyse grouping of data using Andrew Curve and Parallel Charts.\n\n"}}