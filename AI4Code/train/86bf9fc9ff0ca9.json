{"cell_type":{"64e8de01":"code","03704833":"code","ad9a2e14":"code","7fdeed3c":"code","e487b47e":"code","afa85e19":"code","df8ec13d":"code","cc20a47d":"code","04dbdda5":"code","f03be242":"code","6bfb5a14":"code","a0bed0e1":"code","94a52e26":"code","61402e66":"code","3278be78":"code","0caeab5c":"code","65c214be":"code","2fad1350":"code","c754746e":"code","1b2b8f65":"code","0cae16b1":"code","b173bede":"code","2bb2b99e":"code","f6cc8b86":"code","8e9d8424":"code","a5f8a7f0":"code","4f6bb8a3":"code","9b8f79ed":"code","98038f31":"code","a5fd6990":"code","05a21811":"markdown","5bc33de2":"markdown","fae86e95":"markdown","b8d8270d":"markdown"},"source":{"64e8de01":"import pandas as pd\nfrom tensorflow.keras.optimizers import RMSprop,Adam\nimport numpy as np\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom keras.layers.convolutional import Conv2D, MaxPooling2D\nfrom keras.models import Sequential\nfrom tensorflow.keras import layers\nfrom tensorflow.keras import Model\nfrom keras import Model\nfrom os import getcwd\nfrom keras.layers import Dense, Activation, BatchNormalization\nimport tensorflow as tf","03704833":"train =  \"..\/input\/paddyleafdiseaseuci\/train\"\ntest = \"..\/input\/paddyleafdiseaseuci\/valid\"","ad9a2e14":"from tensorflow.keras.preprocessing.image import ImageDataGenerator\nTRAINING_DIR = \"..\/input\/paddyleafdiseaseuci\/train\"\nTESTING_DIR = \"..\/input\/paddyleafdiseaseuci\/valid\"\ntrain_datagen = ImageDataGenerator(\n    rescale=1.\/ 255,\n    rotation_range = 40,\n    width_shift_range=.2,\n    height_shift_range=.2,\n    shear_range=.2,\n    #validation_split=0.05,\n    zoom_range=.2,\n    horizontal_flip=True,\n    fill_mode='nearest'\n)\n\ntest_datagen = ImageDataGenerator(rescale=1.\/255)\n\ntrain_generator = train_datagen.flow_from_directory(\n    TRAINING_DIR,\n    batch_size=128,\n    class_mode='categorical',\n    target_size = (150, 150)\n)\n\n\nvalidation_generator = test_datagen.flow_from_directory(\n    TESTING_DIR,\n    batch_size = 128,\n    class_mode='categorical',\n    target_size=(150, 150)\n)   ","7fdeed3c":"from keras.callbacks import EarlyStopping, ModelCheckpoint,ReduceLROnPlateau\n\n\nearlyStopping = EarlyStopping(monitor='val_loss', patience = 7, verbose=0, mode='min')\nmcp_save_xc = ModelCheckpoint('mdl_wts_xc.hdf5', save_best_only=True, monitor='val_loss', mode='min')\nreduce_lr_loss = ReduceLROnPlateau(monitor='val_loss', factor=0.1, patience=5, verbose=1, min_delta=1e-4, mode='min')","e487b47e":"from tensorflow.keras.applications.inception_v3 import InceptionV3","afa85e19":"preModel  = InceptionV3(input_shape= (150,150,3), include_top= False, weights= 'imagenet')","df8ec13d":"for layer in preModel.layers:\n  layer.trainable = False\n  ","cc20a47d":"preModel.summary()","04dbdda5":"last_layer = preModel.get_layer('mixed7')\nlast_output = last_layer.output","f03be242":"x = layers.Flatten()(last_output)\n\nx = layers.Dense(256, activation = 'relu')(x)\n\nx = layers.Dropout(0.3)(x)\n\nx= layers.Dense(3, activation = 'softmax')(x)\n\n","6bfb5a14":"model = Model(preModel.input,x)","a0bed0e1":"\nmodel.compile(loss = 'categorical_crossentropy', optimizer = Adam(lr=0.0001), metrics=['accuracy'])","94a52e26":"model.summary()","61402e66":"history = model.fit(\n      train_generator,  \n      callbacks=[ mcp_save_xc, reduce_lr_loss,earlyStopping],\n      validation_data = validation_generator,\n      epochs = 30,\n      verbose = 1,\n )","3278be78":"model.load_weights('mdl_wts_xc.hdf5')","0caeab5c":"testing_datagen = ImageDataGenerator(rescale=1.\/255)\ntesting_dir = \"..\/input\/paddyleafdiseaseuci\/test\"\ntesting_generator = testing_datagen.flow_from_directory(\n  testing_dir,\n    batch_size=128,\n    class_mode='categorical',\n    target_size = (150, 150)\n)","65c214be":"predict = model.predict(testing_generator)","2fad1350":"pred = predict.argmax(axis = -1)","c754746e":"score = model.evaluate(testing_generator, batch_size=1, verbose=1)","1b2b8f65":"score","0cae16b1":"from keras.applications import VGG16","b173bede":"preModelVgg  = VGG16(input_shape= (150,150,3), include_top= False, weights= 'imagenet')","2bb2b99e":"\nfor layer in preModelVgg.layers[:15]:\n    layer.trainable = False\n  ","f6cc8b86":"preModelVgg.summary()","8e9d8424":"last_layer = preModelVgg.get_layer('block5_pool')\nlast_output = last_layer.output","a5f8a7f0":"from keras.layers.advanced_activations  import PReLU\n\nx = layers.Conv2D(32,padding = 'same', activation = PReLU(), kernel_size=3)(last_output)\n\nx = layers.MaxPooling2D(pool_size=(3,3), padding='same')(x)\n\nx = layers.Flatten()(x)\n\nx = layers.Dropout(0.3)(x)\n\nx = layers.Dense(64, activation = PReLU())(x)\n\nx = layers.Dropout(0.5)(x)\n\nx= layers.Dense(3, activation = 'softmax')(x)\n\n","4f6bb8a3":"model = Model(preModelVgg.input,x)","9b8f79ed":"\nmodel.compile(loss = 'categorical_crossentropy', optimizer = RMSprop(lr=0.0001), metrics=['accuracy'])","98038f31":"model.summary()","a5fd6990":"history = model.fit(\n      train_generator,  \n      callbacks=[ mcp_save_xc, reduce_lr_loss,earlyStopping],\n      validation_data = validation_generator,\n      epochs = 50,\n      verbose = 1,\n )","05a21811":"##### Kaggle dataset import","5bc33de2":"## Prediction on Test Set","fae86e95":"## VGG16","b8d8270d":"### Inception"}}