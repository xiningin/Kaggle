{"cell_type":{"bb490461":"code","89dd19e9":"code","f215e819":"code","dfbd5490":"code","fdf72f1a":"code","27129883":"code","2a81e4f0":"code","fb14da52":"code","9051e1c6":"code","14269542":"code","33919888":"code","ed90263f":"code","a501f6c4":"code","86868b87":"code","3a6e5768":"code","fbb9ad21":"code","d347468d":"code","1832a58a":"code","62ba6deb":"code","19253f54":"code","84a3894e":"code","03912ce6":"code","00dcf590":"code","aeddc3a2":"code","2906637a":"code","0e79f961":"markdown","7853b649":"markdown","122e44a1":"markdown","0fee8dea":"markdown","f30006a5":"markdown","de93a159":"markdown","6ffcd7ea":"markdown","2120243e":"markdown","f91e7bfc":"markdown","aeee463a":"markdown"},"source":{"bb490461":"#libraries\nimport numpy as np \nimport pandas as pd \nimport numpy as np","89dd19e9":"#directory of articles\ndf1=pd.read_csv('..\/input\/CORD-19-research-challenge\/metadata.csv')\ndf1.head(2)","f215e819":"#selecting specific columns\n##these include the title of the article, its abstract, date, link to the article, and authors\njournals= df1[['title', 'abstract', 'publish_time', 'url', 'authors']]","dfbd5490":"#separate each word in the ABSTRACT column\njournals['words'] = journals.abstract.str.strip().str.split('[\\W_]+')\njournals['words'].head()","fdf72f1a":"#separate words in the abstract column and create a new column\nabstracts = journals[journals.words.str.len() > 0]\nabstracts.head(2)","27129883":"#A column of individual words\nrows = list()\nfor row in abstracts[['words']].iterrows():\n    r = row[1]\n    for word in r.words:\n        rows.append((word))\n\nwords = pd.DataFrame(rows, columns=['word'])\nwords.head(2)","2a81e4f0":"#changes strings to lowercase for ease of search\ntext1 = words.word.str.lower()","fb14da52":"#remove punctuation\ntext1=text1.str.replace('[^\\w\\s]','')","9051e1c6":"counts = text1.value_counts()\ncommon1=counts.head(24)","14269542":"#removes common words like the, of, etc.\n\ncommon1 = list(common1.index)\ntext1 = text1.apply(lambda x: \" \".join(x for x in x.split() if x not in common1))\ntext1.head(20)","33919888":"#number of unique words\ntext1.nunique()","ed90263f":"text1.value_counts().head(20)","a501f6c4":"#looking for rows with specific term\n##VACCINE RELATED articles\nabstracts[abstracts['abstract'].str.contains('vaccine')]","86868b87":"##therapeutic RELATED articles\nabstracts[abstracts['abstract'].str.contains('therapeutic')]","3a6e5768":"##COVID specific articles\nlit_COVID=abstracts[abstracts['abstract'].str.contains('COVID')]\nlit_COVID.head(2)","fbb9ad21":"#looking for rows with specific term\n##articles about monitor\nabstracts[abstracts['abstract'].str.contains('monitor')]","d347468d":"##articles related to trace\nabstracts[abstracts['abstract'].str.contains('trace')]","1832a58a":"##articles about surveillance\nsurv=abstracts[abstracts['abstract'].str.contains('surveillance')]\nsurv.head(2)","62ba6deb":"##articles about ELISA\nabstracts[abstracts['abstract'].str.contains('ELISA')]","19253f54":"##articles about antibodies\nantib=abstracts[abstracts['abstract'].str.contains('antibodies')]\nantib.head(2)","84a3894e":"#looking for rows with specifid terms\n##articles about outcome\nabstracts[abstracts['abstract'].str.contains('outcome')]","03912ce6":"#lit_COVID is the 1892 articles defined before.\n#from here, we can narrow the search.\nCOVID_thera=lit_COVID[lit_COVID['abstract'].str.contains('therapeutic')]\n# a new dataframe of COVID19 articles on therapetic\n## it becomes easier to scroll through 117 articles\nCOVID_thera","00dcf590":"COVID_diag=lit_COVID[lit_COVID['abstract'].str.contains('diagnosis')]\n# a new dataframe of COVID19 articles on diagnosis\n## it becomes easeier to scroll through 225 articles\nCOVID_diag","aeddc3a2":"monitor1=antib[antib['abstract'].str.contains('diagnosis')]\n# a new dataframe of antibodies and monitor articles \n## it becomes easeier to scroll through 232 articles\n\n#then focus on ELISA\n#this shows 71 articles\nELImon=monitor1[monitor1['abstract'].str.contains('ELISA')]\nELImon","2906637a":"COVID_surv=surv[surv['abstract'].str.contains('COVID')]\n# a new dataframe of COVID19 articles on survellance\n## it becomes easier to scroll through 76 articles\nCOVID_surv","0e79f961":"Fourth, I found the common relevant terms across all the articles","7853b649":"COVID_diag norrows the articles to those related to COVID and **diagnosis**.    \nThe dataframe below may answer ***WHAT IS KNOWN ABOUT DIAGNOSIS?***","122e44a1":"To answer the above, first, I narrowed the articles by:   \n- the terms monitor, trace, surveillence, ELISA, antibodies, outcome  ","0fee8dea":"First, I opened the metadata file: it is a directory of 51,078 articles.   \nSecond, I norrowed the columns to the desired information.","f30006a5":"Third, I created a column with every word is an entry in a list of list from the abstract of each article.","de93a159":"COVID-surv may answer ***WHAT IS KNOWN ABOUT SURVEILLENCE?***.    \nSpecifically, it is a dataframe with those articles related to COVID and surveillence.","6ffcd7ea":"ELImon is a shorter list of relevant articles related to **diagnosis, antibodies, and ELISAs**.   ","2120243e":"# Literature search: Diagnostics and Surveillence   \n**The goal is to navigate and narrow the data to help researchers find relevant scholarly articles related to COVID19.**     \nBy Myrna M Figueroa Lopez   ","f91e7bfc":"# Which publications discuss diagnostics and surveillance?","aeee463a":"**Lastly, I narrowed the articles' dataframe to relevant journals**   \n- This could be modified to find other combination of terms.   \n\nCOVID_thera narrows the literature to those articles related to COVID and therapeutic.   "}}