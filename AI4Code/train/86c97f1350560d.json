{"cell_type":{"3fe78498":"code","6e674e89":"code","3de96f20":"code","4164acf6":"code","7c8c757b":"code","13d9a233":"code","e5d79f3a":"code","64a2bf3f":"code","a1399505":"code","e6288863":"code","1a099e7c":"code","f9ffc43a":"code","c2703c5a":"code","32699540":"code","a8a6bb36":"code","ceddd742":"code","46f37949":"code","71b7e274":"code","ab83a45a":"code","a8cd0239":"code","39310193":"code","30e09f91":"markdown"},"source":{"3fe78498":"import numpy as np\nimport pandas as pd\n\nimport os \nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname,filename))","6e674e89":"train = pd.read_csv('..\/input\/titanic\/train.csv')","3de96f20":"train.describe","4164acf6":"train.corr()","7c8c757b":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.countplot(x = 'Parch', hue = \"Survived\", data = train)\nplt.legend(loc = \"upper right\", title = \"Survived ~ Sibsp\")","13d9a233":"sns.distplot(train[train['Survived'] == 0].Fare, kde=False,rug=False)","e5d79f3a":"sns.distplot(train[train['Survived'] == 1].Fare,  kde=False,rug=False)","64a2bf3f":"train.isnull().sum()","a1399505":"train.drop(['PassengerId','Name','Cabin','Ticket', ], axis=1, inplace=True)\ntrain[\"Age\"].fillna(train[\"Age\"].median(skipna=True), inplace=True)\ntrain[\"Embarked\"].fillna(train['Embarked'].value_counts().idxmax(), inplace=True)","e6288863":"train['Alone']=np.where((train[\"SibSp\"]+train[\"Parch\"])>0, 0, 1)\ntrain.drop(['SibSp', 'Parch'], axis=1, inplace=True)","1a099e7c":"pd.get_dummies(train['Sex'])","f9ffc43a":"training = pd.get_dummies(train, columns=[\"Pclass\",\"Embarked\",\"Sex\"], drop_first=True)\ntraining","c2703c5a":"from sklearn.preprocessing import StandardScaler\ntrain_standard = StandardScaler()\ntrain_copied = training.copy()\ntrain_standard.fit(train_copied[['Age','Fare']])\ntrain_std = pd.DataFrame(train_standard.transform(train_copied[['Age','Fare']]))\ntrain_std","32699540":"from sklearn.linear_model import LogisticRegression\ncols = [\"Age\",\"Fare\",\"Alone\",\"Pclass_2\",\"Pclass_2\",\"Embarked_Q\",\"Embarked_S\",\"Sex_male\"] \nX = training[cols]\ny = training['Survived']\n# Build a logreg and compute the feature importances\nmodel = LogisticRegression()\n# create the RFE model and select 8 attributes\nmodel.fit(X,y)","a8a6bb36":"from sklearn.metrics import accuracy_score\ntrain_predicted = model.predict(X)\naccuracy_score(train_predicted, y)","ceddd742":"test = pd.read_csv('..\/input\/titanic\/test.csv')","46f37949":"test.isnull().sum()","71b7e274":"test.drop(['PassengerId','Name','Cabin','Ticket'], axis=1, inplace=True)\ntest[\"Age\"].fillna(28, inplace=True)\ntest[\"Embarked\"].fillna(test['Embarked'].value_counts().idxmax(), inplace=True)\ntest[\"Fare\"].fillna(train.Fare.median(), inplace=True)\ntest['Alone']=np.where((test[\"SibSp\"]+test[\"Parch\"])>0, 0, 1)\ntest.drop(['SibSp', 'Parch'], axis=1, inplace=True)\ntesting=pd.get_dummies(test, columns=[\"Pclass\",\"Embarked\",\"Sex\"], drop_first=True)\nprint(testing.dtypes)\ntest_copied = testing.copy()\ntest_std = train_standard.transform(test_copied[['Age','Fare']])\ntest_std\ntesting[['Age','Fare']] = test_std\ntesting","ab83a45a":"cols = [\"Age\",\"Fare\",\"Alone\",\"Pclass_2\",\"Pclass_2\",\"Embarked_Q\",\"Embarked_S\",\"Sex_male\"] \nX_test=testing[cols]\nprint(X_test.dtypes)\ntest_predicted = model.predict(X_test)","a8cd0239":"sub = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","39310193":"sub['Survived'] = list(map(int, test_predicted))\nsub.to_csv('submission.csv', index=False)","30e09f91":"train.corr()"}}