{"cell_type":{"a48aaa62":"code","5ca3dbcb":"code","aa811517":"code","8178d714":"code","d56488bf":"code","99f07898":"code","ba2675d7":"code","21b1e3fa":"code","5fc1f76d":"code","7d7fdec6":"markdown"},"source":{"a48aaa62":"import pandas as pd\nimport time\nimport os.path\n\nimport warnings\nwarnings.filterwarnings('ignore')","5ca3dbcb":"# install DenMune clustering algorithm using pip command from the offecial Python repository, PyPi\n# from https:\/\/pypi.org\/project\/denmune\/\n!pip install denmune\n\n# then import it\nfrom denmune import DenMune","aa811517":"# clone datasets from our repository datasets\nif not os.path.exists('datasets'):\n  !git clone https:\/\/github.com\/egy1st\/datasets","8178d714":"data_path = 'datasets\/denmune\/chameleon\/'  \n\nchameleon_dataset = \"t7.10k\" #[\"t4.8k\", \"t5.8k\", \"t7.10k\", \"t8.8k\"]\n\nknn = 10\n# train file\ndata_file = data_path + chameleon_dataset + '.csv'\nX_train = pd.read_csv(data_file, sep=',', header=None)\n\ndm = DenMune(train_data=X_train, k_nearest=knn, rgn_tsne=False)\nlabels, validity = dm.fit_predict(show_noise=True, show_analyzer=False)\n","d56488bf":"# let us show clean data by removing noise\n\nm = DenMune(train_data=X_train, k_nearest=knn, rgn_tsne=False)\nlabels, validity = dm.fit_predict(show_noise=False, show_analyzer=False)","99f07898":"knn = 20\n# train file\ndata_file = data_path + chameleon_dataset + '.csv'\nX_train = pd.read_csv(data_file, sep=',', header=None)\n\ndm = DenMune(train_data=X_train, k_nearest=knn, rgn_tsne=False)\nlabels, validity = dm.fit_predict(show_noise=True, show_analyzer=False)","ba2675d7":"# let us show clean data by removing noise\n\nm = DenMune(train_data=X_train, k_nearest=knn, rgn_tsne=False)\nlabels, validity = dm.fit_predict(show_noise=False, show_analyzer=False)","21b1e3fa":"knn = 39\n# train file\ndata_file = data_path + chameleon_dataset + '.csv'\nX_train = pd.read_csv(data_file, sep=',', header=None)\n\ndm = DenMune(train_data=X_train, k_nearest=knn, rgn_tsne=False)\nlabels, validity = dm.fit_predict(show_noise=True, show_analyzer=False)","5fc1f76d":"# let us show clean data by removing noise\n\nm = DenMune(train_data=X_train, k_nearest=knn, rgn_tsne=False)\nlabels, validity = dm.fit_predict(show_noise=False, show_analyzer=False)","7d7fdec6":"\n\n---\n\n\nDenMune detects noise and outlier automatically, no need to any further work from your side.\n*   It plots pre-identified noise in black \n*   It plots post-identified noise in light grey \n\nYou can set show_noise parameter to False to show clean data as identified by the algorithm"}}