{"cell_type":{"aaf91f9c":"code","c186427f":"code","4a3ec555":"code","b6c13048":"code","9ed2d479":"code","3cb3fbae":"code","7c9cbafe":"code","7d2de2cc":"code","b232ffd1":"code","cafd4fe5":"code","4b048155":"code","4f9247e3":"code","5bfe2e6e":"code","b0d79aa3":"markdown","f132e210":"markdown","dc9ab27c":"markdown","858a329b":"markdown","7c6ce4e1":"markdown","0a885b09":"markdown"},"source":{"aaf91f9c":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split\n\nimport tensorflow as tf","c186427f":"dfs = [pd.read_csv('..\/input\/heartbeat\/ptbdb_' + x + '.csv') for x in ['normal', 'abnormal']]","4a3ec555":"for df in dfs:\n    df.columns = list(range(len(df.columns)))","b6c13048":"data = pd.concat(dfs, axis=0).sample(frac=1.0, random_state=1).reset_index(drop=True)\n\ndata = data.rename({187: 'Label'}, axis=1)","9ed2d479":"data","3cb3fbae":"y = data['Label'].copy()\nX = data.drop('Label', axis=1).copy()\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=1)","7c9cbafe":"X_train","7d2de2cc":"y_train","b232ffd1":"X_train.shape","cafd4fe5":"inputs = tf.keras.Input(shape=(X_train.shape[1],))\n\nexpand = tf.expand_dims(inputs, axis=2)\ngru = tf.keras.layers.GRU(256, return_sequences=True)(expand)\nflatten = tf.keras.layers.Flatten()(gru)\n\noutputs = tf.keras.layers.Dense(1, activation='sigmoid')(flatten)\n\n\nmodel = tf.keras.Model(inputs=inputs, outputs=outputs)\n\nprint(model.summary())","4b048155":"model.compile(\n    optimizer='adam',\n    loss='binary_crossentropy',\n    metrics=[\n        'accuracy',\n        tf.keras.metrics.AUC(name='auc')\n    ]\n)\n\nhistory = model.fit(\n    X_train,\n    y_train,\n    validation_split=0.2,\n    batch_size=32,\n    epochs=100,\n    callbacks=[\n        tf.keras.callbacks.EarlyStopping(\n            monitor='val_loss',\n            patience=5,\n            restore_best_weights=True\n        )\n    ]\n)","4f9247e3":"results = model.evaluate(X_test, y_test, verbose=0)","5bfe2e6e":"print(\"Test Accuracy: {:.2f}%\".format(results[1] * 100))\nprint(\"     Test AUC: {:.4f}\".format(results[2]))","b0d79aa3":"# Getting Started","f132e210":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/MfFe6FbWNSw","dc9ab27c":"# Results","858a329b":"# Training","7c6ce4e1":"# Preprocessing","0a885b09":"# Task for Today  \n\n***\n\n## Abnormal Heartbeat Classification  \n\nGiven *ECG data about patients' hearts*, let's try to detect **abnormal heartbeats** in the data.\n\nWe will use a TensorFlow RNN to make our predictions. "}}