{"cell_type":{"3eb56f90":"code","987a7e10":"code","74823b2a":"code","21cd1ebe":"code","cd9d119d":"code","885dcab3":"code","a36a8c49":"code","c97fe7f5":"code","1cca8eec":"code","c2215458":"code","835b9ad0":"code","2a426afb":"code","4882328d":"code","982f369b":"code","4393eb92":"code","9a3eb6e4":"code","cb3d3bd7":"code","28c6c5db":"code","e95d33a7":"code","33edcb98":"code","e8fd65ab":"code","8e1adff9":"markdown","934ff07a":"markdown","3f369dff":"markdown","1b902604":"markdown","c5d03894":"markdown","f073e541":"markdown","8bcc10aa":"markdown","deda488e":"markdown","e6d2faed":"markdown","e5af6196":"markdown","63c23e74":"markdown","9e69f5c5":"markdown","16125fc6":"markdown","7b7e0e5d":"markdown"},"source":{"3eb56f90":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","987a7e10":"train_df = pd.read_csv('\/kaggle\/input\/1056lab-titanic-survivors-prediction-2020\/train.csv', index_col=0)\ntest_df = pd.read_csv('\/kaggle\/input\/1056lab-titanic-survivors-prediction-2020\/test.csv', index_col=0)","74823b2a":"train_df","21cd1ebe":"test_df","cd9d119d":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.figure()\nsns.pairplot(train_df)\nplt.show()","885dcab3":"corr = train_df.corr()\n\nplt.figure()\nsns.heatmap(corr, square=True, annot=True)\nplt.show()","a36a8c49":"train_df = train_df.drop('Name', axis=1)\ntest_df = test_df.drop('Name', axis=1)","c97fe7f5":"train_df['Sex'] = train_df['Sex'].map({'male':0, 'female':1})\ntest_df['Sex'] = test_df['Sex'].map({'male':0, 'female':1})","1cca8eec":"train_df","c2215458":"test_df","835b9ad0":"X_train = train_df.drop('Survived', axis=1).to_numpy()\ny_train = train_df['Survived'].to_numpy()\nX_test = test_df.to_numpy()","2a426afb":"X_train","4882328d":"y_train","982f369b":"X_test","4393eb92":"from sklearn.tree import DecisionTreeClassifier\n\nmodel = DecisionTreeClassifier(max_depth=3)\nmodel.fit(X_train, y_train)","9a3eb6e4":"! pip3 install dtreeviz","cb3d3bd7":"from dtreeviz.trees import dtreeviz\n\nviz = dtreeviz(model, X_train, y_train, target_name='Survived',\n               feature_names=test_df.columns, class_names={0:'no', 1:'yes'})\nviz","28c6c5db":"p_train = model.predict_proba(X_train)\np_train","e95d33a7":"p_test = model.predict_proba(X_test)\np_test","33edcb98":"submit_df = pd.read_csv('\/kaggle\/input\/1056lab-titanic-survivors-prediction-2020\/sampleSubmission.csv', index_col=0)\nsubmit_df['Survived'] = p_test[:,1]\nsubmit_df","e8fd65ab":"submit_df.to_csv('submission.csv')","8e1adff9":"## Correlation heatmap","934ff07a":"## Scatterplot matrix","3f369dff":"## Replacing string to numeric","1b902604":"## Training data","c5d03894":"# Learning a decision tree","f073e541":"# NumPy data","8bcc10aa":"# Making a submission file","deda488e":"# Visualizing the decision tree","e6d2faed":"## Feature selection","e5af6196":"## Test data","63c23e74":"# Preprocessing","9e69f5c5":"# Predicting","16125fc6":"# Visualizing","7b7e0e5d":"# DataFrame"}}