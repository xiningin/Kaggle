{"cell_type":{"e847e0ce":"code","e1fe923b":"code","1e718a1f":"code","49050d52":"code","aeaf7f49":"code","79846c28":"code","dc41bf26":"code","b9a0dd91":"code","71879f93":"code","b3a3b985":"code","1bf93eba":"code","e5dd59f1":"code","98c2728f":"code","3f138dfe":"code","57b163cf":"code","7c5830ff":"code","9b1e44c4":"code","3b05af35":"code","d8332ea6":"code","069a7b30":"code","ef6cfd34":"code","9c95bff7":"code","53523cea":"code","40344e8b":"code","d776702b":"code","f93f912c":"code","5ec1847f":"code","4625f979":"code","3df6ee04":"code","8ba3b7d3":"code","174079de":"code","063a5155":"code","649c29c7":"code","706da9c0":"code","28fe2095":"code","f2ad1c0f":"code","8ddd1836":"code","d7b82b9e":"code","303609d0":"code","131c332a":"code","fb3c7a5c":"code","7d2ac47c":"code","7143fe34":"code","f2fb6afa":"code","7c816a32":"code","a2ec4504":"code","cc969d6a":"code","2f4e53a5":"code","005e519b":"code","11bf9615":"code","460ddbd3":"code","b63c98ad":"code","6fc2cb48":"markdown","bb0a037c":"markdown","fdc03fd3":"markdown","65caca62":"markdown","4eb0bc1a":"markdown","9a5a0201":"markdown","2d7dfe31":"markdown","fd33df3e":"markdown","e21ce58d":"markdown","6f12f951":"markdown","1dd0e5eb":"markdown","d14fe60b":"markdown","9f231f32":"markdown","10b20809":"markdown","ede23f99":"markdown","736cd1a7":"markdown","45cacfd5":"markdown","9d3a7507":"markdown","d4f44972":"markdown"},"source":{"e847e0ce":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e1fe923b":"df_rating = pd.read_csv('\/kaggle\/input\/anime-recommendations-database\/rating.csv')\ndf_anime = pd.read_csv('\/kaggle\/input\/anime-recommendations-database\/anime.csv')","1e718a1f":"df_rating.head()","49050d52":"df_anime.head()","aeaf7f49":"df_rating.describe()","79846c28":"sns.set(font_scale=1)\nsns.boxplot(df_rating['rating'])\nplt.show()","dc41bf26":"avg_ratings = df_rating[['user_id','rating']].groupby(['user_id']).mean()","b9a0dd91":"sns.boxplot(avg_ratings['rating'])\nplt.show()","71879f93":"ax = sns.countplot(x=\"type\",data=df_anime)","b3a3b985":"ax = sns.boxplot(x=\"type\", y=\"rating\", data=df_anime)","1bf93eba":"avg_ratings.head()","e5dd59f1":"df_anime['type'].unique()","98c2728f":"np.sum(df_anime['type'].isna())","3f138dfe":"df_anime[df_anime['type'].isna()]","57b163cf":"df_anime = df_anime[df_anime['rating'].notna()]","7c5830ff":"np.sum(df_anime['type'].isna())","9b1e44c4":"temp =  df_anime['genre'].str.split(',', expand=True).stack().str.get_dummies().sum(level=0)\ndf_anime = df_anime.drop('genre',axis=1)\ndf_anime.head()","3b05af35":"df_anime = pd.concat([df_anime,pd.DataFrame(temp)],axis=1)","d8332ea6":"df_anime.head()","069a7b30":"df_anime = df_anime.drop('name',axis=1)","ef6cfd34":"one_hot = pd.get_dummies(df_anime['type'],prefix='type_')\ndf_anime = df_anime.drop('type',axis = 1)\ndf_anime = df_anime.join(one_hot)","9c95bff7":"df_anime.head()","53523cea":"df_anime['members'] = (df_anime['members']-df_anime['members'].mean())\/(df_anime['members'].std())","40344e8b":"df_anime['members'].mean(),df_anime['members'].std()","d776702b":"pd.concat([df_anime['anime_id'],df_rating['anime_id']]).unique().shape","f93f912c":"df_anime['anime_id'].unique().shape","5ec1847f":"df_rating['anime_id'].unique().shape","4625f979":"cond = ~(df_rating['anime_id'].isin(df_anime['anime_id']))\ndf_rating = df_rating.drop(df_rating[cond].index)","3df6ee04":"df_rating['anime_id'].unique().shape","8ba3b7d3":"12064-11194","174079de":"df_anime['anime_id'].unique().shape[0],df_anime['anime_id'].min(),df_anime['anime_id'].max()","063a5155":"anime_ids = list(df_anime['anime_id'].unique())\nid_ind = {anime_ids[i]:i for i in range(len(anime_ids))}","649c29c7":"df_anime['anime_id'] = df_anime['anime_id'].apply(lambda id: id_ind[id])\ndf_rating['anime_id'] = df_rating['anime_id'].apply(lambda id: id_ind[id])","706da9c0":"df_rating.head()","28fe2095":"df_anime['episodes'] = df_anime['episodes'].replace('Unknown',np.nan)","f2ad1c0f":"df_anime['episodes'] = df_anime['episodes'].astype('float32')","8ddd1836":"np.sum(df_anime['episodes'].isna())","d7b82b9e":"plt.figure(figsize=(50,20))\nsns.set(font_scale=5)\nsns.scatterplot(x=\"episodes\", y=\"rating\", data=df_anime.sort_values('episodes'), s=100)\nplt.show()","303609d0":"df_anime['episodes'] = df_anime['episodes'].fillna(int(df_anime['episodes'].mean()))","131c332a":"np.sum(df_anime['episodes'].isna())","fb3c7a5c":"int(df_anime['episodes'].mean())","7d2ac47c":"df_rating['user_id']= df_rating['user_id']-1\ndf_rating['user_id'].min()","7143fe34":"df_rating.shape[0]","f2fb6afa":"indices = df_rating[['user_id', 'anime_id']].values\nvalues = df_rating['rating'].values\nindices.shape,values.shape","7c816a32":"indices[:4],values[:4]","a2ec4504":"m,n = 73516,12294\nm*n","cc969d6a":"df_rating.shape[0]","2f4e53a5":"successCount,failureCount=0,0","005e519b":"from sklearn.model_selection import train_test_split","11bf9615":"indices_train,indices_val_test,values_train,values_val_test = train_test_split(indices,values,test_size=0.3)\nindices_train.shape,indices_val_test.shape,values_train.shape,values_val_test.shape","460ddbd3":"indices_val,indices_test,values_val,values_test = train_test_split(indices_val_test,values_val_test,test_size=0.5)\nindices_val.shape,indices_test.shape,values_val.shape,values_test.shape","b63c98ad":"np.save('indices_train.npy',indices_train.astype('int32'))\nnp.save('indices_test.npy',indices_test.astype('int32'))\nnp.save('indices_val.npy',indices_val.astype('int32'))\nnp.save('values_train.npy',values_train.astype('int32'))\nnp.save('values_test.npy',values_test.astype('int32'))\nnp.save('values_val.npy',values_val.astype('int32'))\ndf_anime.to_csv('anime_details.csv',index=False)","6fc2cb48":"### As evident the data is right-skewed. This means that on average, people tend to rate above 5 more than below 5. The one outlier to the far left indicates a rating of -1 i.e. UNRATED","bb0a037c":"## Filling in the available values from the df_rating dataset","fdc03fd3":"# Re-indexing data","65caca62":"### Count of animes based on type of anime","4eb0bc1a":"# Plotting info from datasets","9a5a0201":"# Data Preprocessing\n### Handling missing values, dropping irrelevant features, handling categorical features, normalizing etc...\n### Approach:\n#### Missing Values in 'type': DROP<br\/>\n#### Irrelevant feature 'name': DROP<br\/>\n#### Categorical Feature 'genre': Comma separated string entity. Split on \",\"->Expand them into columns->pd.get_dummies() to fill<br\/>\n#### Categorical Feature 'type': Single string entity. One Hot Encoding<br\/>\n#### Numerical feature 'members': Z-Score normalization<br\/>","2d7dfe31":"### There are 12064 unique records under anime_id. However, the minimum value is 1 and the maximum value is 34519. This indicates that anime_id is not continuously present","fd33df3e":"## Splitting the ratings into train,val,test (70%,15%,15%)","e21ce58d":"# Generating the user x anime ratings matrix\n### This will act as Ground Truth matrix","6f12f951":"# Loading the datasets","1dd0e5eb":"### The above code shows the total number of unique 'anime_id' that are present in the entire dataset (both files)","d14fe60b":"# Handling errors in dataset","9f231f32":"### The code above shows that there are actually only 12064 'anime_id' referenced in the df_anime dataset\n### This implies that df_rating contains 6 entries that have an invalid 'anime_id' field that need to be dropped","10b20809":"### The above boxplot represents on average what a user tends rate animes as. This is also right-skewed","ede23f99":"### The above code drops those records from df_rating that contain an invalid 'anime_id'","736cd1a7":"## Basic Processing of datasets","45cacfd5":"### 6 records removed. 11194 records post-removal of invalids","9d3a7507":"### The above figure shows the difference of total animes and rated animes. This implies that there are 870 unrated animes i.e. animes not rated by any user. This illustrates the cold start problem in recommender systems that use collaborative filtering (also popularity bias)","d4f44972":"### Type to Rating comparison"}}