{"cell_type":{"b91185ed":"code","39d4452d":"code","1c4d44d7":"code","dda1a2a1":"code","4649b888":"code","4a6afc87":"code","43e674c8":"code","987ce07e":"code","0210670f":"code","607d148e":"code","debeb3ec":"markdown","5b4e96b3":"markdown","da552386":"markdown","e80cb5f2":"markdown"},"source":{"b91185ed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","39d4452d":"doc1 = \"Sugar is bad to consume. My sister likes to have sugar, but not my father.\"\ndoc2 = \"My father spends a lot of time driving my sister around to dance practice.\"\ndoc3 = \"Doctors suggest that driving may cause increased stress and blood pressure.\"\ndoc4 = \"Sometimes I feel pressure to perform well at school, but my father never seems to drive my sister to do better.\"\ndoc5 = \"Health experts say that Sugar is not good for your lifestyle.\"\n\n# compile documents\ndoc_complete = [doc1, doc2, doc3, doc4, doc5]","1c4d44d7":"from nltk.corpus import stopwords\nfrom nltk.stem.wordnet import WordNetLemmatizer\nimport string\nstop = set(stopwords.words('english'))\nexclude = set(string.punctuation)\nlemma = WordNetLemmatizer()","dda1a2a1":"def clean(doc):\n    stop_free = \" \".join([i for i in doc.lower().split() if i not in stop])\n    punc_free = ''.join(ch for ch in stop_free if ch not in exclude)\n    normalized = \" \".join(lemma.lemmatize(word) for word in punc_free.split())\n    return normalized\n\ndoc_clean = [clean(doc).split() for doc in doc_complete] ","4649b888":"doc_clean","4a6afc87":"# Importing Gensim\nimport gensim\nfrom gensim import corpora\n\n# Creating the term dictionary of our courpus, where every unique term is assigned an index. \ndictionary = corpora.Dictionary(doc_clean)\n\n# Converting list of documents (corpus) into Document Term Matrix using dictionary prepared above.\ndoc_term_matrix = [dictionary.doc2bow(doc) for doc in doc_clean]","43e674c8":"print(dictionary)","987ce07e":"print(doc_term_matrix)","0210670f":"# Creating the object for LDA model using gensim library\nLda = gensim.models.ldamodel.LdaModel\n\n# Running and Trainign LDA model on the document term matrix.\nldamodel = Lda(doc_term_matrix, num_topics=3, id2word = dictionary, passes=50)","607d148e":"print(ldamodel.print_topics(num_topics=3, num_words=2))\n","debeb3ec":"## Running LDA Model\n","5b4e96b3":"Topics that can be infered are Sugar -> Health \nand Family.","da552386":"Next step is to create an object for LDA model and train it on Document-Term matrix. The training also requires few parameters as input which are explained in the above section. The gensim module allows both LDA model estimation from a training corpus and inference of topic distribution on new, unseen documents.","e80cb5f2":"## Preparing Document-Term Matrix\nAll the text documents combined is known as the corpus. To run any mathematical model on text corpus, it is a good practice to convert it into a matrix representation. LDA model looks for repeating term patterns in the entire DT matrix. Python provides many great libraries for text mining practices, \u201cgensim\u201d is one such clean and beautiful library to handle text data. It is scalable, robust and efficient. Following code shows how to convert a corpus into a document-term matrix."}}