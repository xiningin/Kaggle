{"cell_type":{"551bed1b":"code","438c99bf":"code","3f56f16e":"code","b5d3a242":"code","a20ffad7":"code","bcd1dc54":"code","4d04ac25":"code","21c94fe9":"code","392c0fb6":"code","4b30033f":"code","e462254e":"code","37b7bfd0":"code","b0c666c4":"code","4ca28ce4":"markdown","9d4b0c8b":"markdown","7f0a1600":"markdown","6c69f00b":"markdown","d4188a7e":"markdown","7a8f343e":"markdown","026647d3":"markdown","06be1f62":"markdown","9e8aa6fc":"markdown","1eaebfe8":"markdown","20f273b5":"markdown","ea915ebb":"markdown"},"source":{"551bed1b":"#Data processing packages\nimport pandas as pd\nimport numpy as np\npd.set_option('display.max_colwidth', 200)\n\n#Visualization packages\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#NLP packages\nfrom textblob import TextBlob\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","438c99bf":"#Testing NLP - Sentiment Analysis using TextBlob\nTextBlob(\"The movie is good\").sentiment","3f56f16e":"#Importing YouTube comments data\ncomm = pd.read_csv('..\/input\/UScomments.csv',encoding='utf8',error_bad_lines=False);#opening the file UScomments","b5d3a242":"#Displaying the first 5 rows of the data\ndata.head()","a20ffad7":"#Finding the size of the data\ndata.shape","bcd1dc54":"#Extracting 1000 random samples from the data\ncomm = data.sample(2000)\ncomm.shape","4d04ac25":"#Calculating the Sentiment Polarity\npol=[] # list which will contain the polarity of the comments\nfor i in comm.comment_text.values:\n    try:\n        analysis =TextBlob(i)\n        pol.append(analysis.sentiment.polarity)\n        \n    except:\n        pol.append(0)","21c94fe9":"#Adding the Sentiment Polarity column to the data\ncomm['pol']=pol","392c0fb6":"#Converting the polarity values from continuous to categorical\ncomm['pol'][comm.pol==0]= 0\ncomm['pol'][comm.pol > 0]= 1\ncomm['pol'][comm.pol < 0]= -1","4b30033f":"#Displaying the POSITIVE comments\ndf_positive = comm[comm.pol==1]\ndf_positive.head(10)","e462254e":"#Displaying the NEGATIVE comments\ndf_positive = comm[comm.pol==-1]\ndf_positive.head(10)","37b7bfd0":"#Displaying the NEUTRAL comments\ndf_positive = comm[comm.pol==0]\ndf_positive.head(10)","b0c666c4":"comm.pol.value_counts().plot.bar()\ncomm.pol.value_counts()","4ca28ce4":"# Extracting 1000 random samples from the data","9d4b0c8b":"# Importing python packages","7f0a1600":"# Displaying Positive comments","6c69f00b":"# Testing Sentiment Analysis (sample)","d4188a7e":"# Importing YouTube comments data","7a8f343e":"# Calculating Sentiment polarity for each comment","026647d3":"# Displaying first 5 rows of data","06be1f62":"# Calculating the count of Positive, Negative & Neutral comments","9e8aa6fc":"# Converting the polarity values from continuous to categorical","1eaebfe8":"# Displaying Negative comments","20f273b5":"# Adding the Sentiment Polarity column to the data","ea915ebb":"# Displaying Neutral comments"}}