{"cell_type":{"b9e9e279":"code","018a0438":"code","5790abbe":"code","5ca566e6":"code","4022209c":"code","86151779":"code","f5c4dd69":"code","cee19e04":"code","e5ee72ad":"code","87de6cd6":"code","78cb0860":"code","0b136072":"code","cd46820a":"code","a14b91d5":"code","a63cf7a3":"code","4c8902b2":"code","2fd00280":"code","a1fa6cab":"code","587ed4ae":"code","083c9f6a":"code","862039c8":"code","b2e7168b":"code","aa54d042":"code","48cbaf45":"code","10961b2b":"code","e5333ced":"code","63a41c89":"code","20fcee1e":"code","137b994b":"code","af74221c":"markdown","1983fcee":"markdown","344f9901":"markdown","260ba417":"markdown","8de851a4":"markdown","efbd2bf1":"markdown","620a0f52":"markdown","5b63ef07":"markdown","8fe15fbc":"markdown","7b3eee89":"markdown","e942e7d1":"markdown","6b84e1aa":"markdown","05e65ab0":"markdown","fc3aa58f":"markdown","623920c1":"markdown","6e0dfb63":"markdown","e03306c4":"markdown","77db50d9":"markdown","a5527543":"markdown","9bc50c30":"markdown","d92e5cf5":"markdown","59be9967":"markdown"},"source":{"b9e9e279":"#Imports:\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","018a0438":"#Code:\nsat = pd.read_csv('..\/input\/sat-act-files\/sat_2017.csv')\nact = pd.read_csv('..\/input\/sat-act-files\/act_2017.csv')","5790abbe":"#Code:\nsat.head()","5ca566e6":"act.head()","4022209c":"print(sat.min())\nprint('\\n')\nprint(sat.max())\nprint('\\n')\nprint(act.min())\nprint('\\n')\nprint(act.max())","86151779":"act.loc[act['State'] == 'Wyoming', ['Composite']] ","f5c4dd69":"#remove x from wyoming\nact.loc[act['State'] == 'Wyoming', ['Composite']] = float(20.2)","cee19e04":"#code\nsat.info()\nprint('\\n')\nact.info()","e5ee72ad":"#code\ndef percent_to_float(x):\n    return float(x.strip('%'))\/100\n\nsat['Participation'] = sat['Participation'].str.rstrip('%').astype('float') \/ 100.0\nact['Participation'] = act['Participation'].str.rstrip('%').astype('float') \/ 100.0\nact['Composite'] = act['Composite'].astype(float)","87de6cd6":"#make columns lowercase\nsat.columns = sat.columns.str.lower()\nact.columns = act.columns.str.lower()\n\n# The .rename method\n\nsat.rename(columns={\n    'participation' : 'participation_sat_2017',\n    'evidence-based reading and writing' : 'ebrw_sat_2017',\n    'math' : 'math_sat_2017',\n    'total' : 'total_sat_2017'\n}, inplace=True)\n\nact.rename(columns={\n    'math' : 'math_act_2017',\n    'english' : 'english_act_2017',\n    'reading' : 'reading_act_2017',\n    'science' : 'science_act_2017',\n    'participation' : 'participation_act_2017',\n    'composite' : 'composite_act_2017',\n    'state' : 'state_act'\n}, inplace=True)","78cb0860":"#code\nact.drop([0], inplace = True)\nact.index = act.index - 1 #shifting index\nact.sort_index(inplace = True)","0b136072":"act.head()","cd46820a":"#Code:\nmerged = pd.concat([sat, act], axis=1)\ndel merged['state_act']\nmerged.head()","a14b91d5":"#code\nmerged.to_csv('combined_2017.csv', index=False)","a63cf7a3":"sat2018 = pd.read_csv('..\/input\/sat-act-files\/sat_2018.csv')\nact2018 = pd.read_csv('..\/input\/sat-act-files\/act_2018.csv')","4c8902b2":"#percent to float\nsat2018['Participation'] = sat2018['Participation'].apply(percent_to_float)\nact2018['Participation'] = act2018['Participation'].apply(percent_to_float)\n\n#remove duplicate\nact2018.drop([20], inplace = True)\nact2018 = act2018.reset_index(drop=True)\n\n#make everything lowercase\nsat2018.columns = sat2018.columns.str.lower()\nact2018.columns = act2018.columns.str.lower()\n\n# The .rename method\n\nsat2018.rename(columns={\n    'participation' : 'participation_sat_2018',\n    'evidence-based reading and writing' : 'ebrw_sat_2018',\n    'math' : 'math_sat_2018',\n    'total' : 'total_sat_2018'\n}, inplace=True)\n\nact2018.rename(columns={\n    'participation' : 'participation_act_2018',\n    'composite' : 'composite_act_2018',\n}, inplace=True)","2fd00280":"merged1 = pd.concat([sat2018, act2018], axis=1)\ndel merged1['state']","a1fa6cab":"sat_act_2017_2018 = pd.concat([merged, merged1], axis = 1)","587ed4ae":"'''\nDo the same thing for the 2019 datasets\n'''\nsat2019 = pd.read_csv('..\/input\/sat-act-files\/sat_2019.csv', encoding = \"ISO-8859-1\")\nact2019 = pd.read_csv('..\/input\/sat-act-files\/act_2019.csv')","083c9f6a":"#remove duplicates and unnecesary rows\n\nact2019.drop([51], inplace = True)\nact2019 = act2019.reset_index(drop=True)\n\nsat2019.drop([47], inplace = True)\nsat2019.drop([39], inplace = True)\nsat2019 = sat2019.reset_index(drop = True)\n\n#percent to float\nsat2019['Participation Rate'] = sat2019['Participation Rate'].apply(percent_to_float)\nact2019['Participation'] = act2019['Participation'].apply(percent_to_float)\n\n#make everything lowercase\nsat2019.columns = sat2019.columns.str.lower()\nact2019.columns = act2019.columns.str.lower()\n\n# The .rename method\n\nsat2019.rename(columns={\n    'participation rate' : 'participation_sat_2019',\n    'ebrw' : 'ebrw_sat_2019',\n    'math' : 'math_sat_2019',\n    'total' : 'total_sat_2019'\n}, inplace=True)\n\nact2019.rename(columns={\n    'participation' : 'participation_act_2019',\n    'composite' : 'composite_act_2019',\n}, inplace=True)","862039c8":"merged2 = pd.concat([sat2019, act2019], axis=1)\ndel merged2['state']","b2e7168b":"final = pd.concat([sat_act_2017_2018, merged2], axis = 1)\nfinal.T.head(10)","aa54d042":"final.to_csv('final.csv', index=False)","48cbaf45":"plt.subplots(figsize=(12,12)) \n# set  canvas for plotting \nplt.barh(final.state, final.participation_act_2019, label='ACT part', alpha=0.5) \n# make a bar graph \nplt.barh(final.state, final.participation_sat_2019, label='SAT part.', alpha=0.5) \nplt.legend(loc='lower center') \nplt.title(\"Average Participation Rate for ACT and SAT per State\", fontsize=16) \nplt.xlabel(\"Average Participation Rate\", fontsize=14) \nplt.ylabel(\"State\",fontsize=14) \nplt.show()","10961b2b":"def subplot_histograms(dataframe, list_of_columns, list_of_titles, list_of_xlabels):\n    nrows = int(np.ceil(len(list_of_columns)\/2)) # Makes sure you have enough rows\n    fig, ax = plt.subplots(nrows=nrows, ncols=2, figsize=(12,10)) # You'll want to specify your figsize\n    ax = ax.ravel() # Ravel turns a matrix into a vector, which is easier to iterate\n    plt.subplots_adjust(hspace = 0.5)\n    for i, column in enumerate(list_of_columns): # Gives us an index value to get into all our lists\n        ax[i].hist(dataframe[column]) # feel free to add more settings\n        ax[i].set_title(list_of_titles[i]) # Set titles for each subplot\n        ax[i].set_xlabel(list_of_xlabels[i]) # Set xlabels for each subplot","e5333ced":"# Code\nsubplot_histograms(final,\n                   list_of_columns=['participation_sat_2017', 'participation_sat_2018','participation_sat_2019', \n                           'participation_act_2017', 'participation_act_2018', 'participation_act_2019'],\n                   \n                   list_of_titles=['SAT 2017 Participation', 'SAT 2018 Participation', 'SAT 2019 Participation',\n                                   'ACT 2017 Participation', 'ACT 2018 Participation', 'ACT 2019 Participation'], \n                   \n                   list_of_xlabels=['participation rate', 'participation rate', 'participation rate', 'participation rate', 'participation rate', 'participation rate'])\n","63a41c89":"ax = plt.subplots(figsize=(15,10))\nplt.title('SAT Scores',fontsize=30)\nplt.ylabel('Score',fontsize=20)\nplt.ylim(450, 675)\nsns.boxplot(data=final[['ebrw_sat_2017','ebrw_sat_2018','ebrw_sat_2019',\n                        'math_sat_2017', 'math_sat_2018', 'math_sat_2019']],width=0.4)\n","20fcee1e":"f, axes = plt.subplots(2, figsize = (10, 12))\nsns.scatterplot(data = final, x = \"participation_sat_2019\", y = \"total_sat_2019\", ax=axes[0]).set_title('SAT vs. participation 2019');\nsns.scatterplot(data = final, x = \"participation_act_2019\", y = \"composite_act_2019\", ax=axes[1]).set_title('ACT vs. participation 2019');","137b994b":"#all states with free sat tests\nfree_state_SAT = ['Colorado', 'Connecticut', 'Delaware', 'District of Columbia', \n                'Idaho', 'Illinois', 'Maine', 'Michigan', 'New Hampshire', \n                'Ohio', 'Oklahoma', 'Rhode Island', 'South Carolina', 'Tennesee', \n                'West Virginia']\nfree = final['state'].isin (free_state_SAT)\n\nplt.subplots(figsize=(12,12)) \n# set  canvas for plotting \nplt.barh(final[free].state, final[free].participation_act_2019, label='ACT part', color = 'green', alpha=0.5) \n# make a bar graph \nplt.barh(final[free].state, final[free].participation_sat_2019, label='SAT part', color = 'red', alpha=0.5) \nplt.legend(loc='lower center') \nplt.title(\"Average Participation Rate for ACT and SAT in States with Free SAT Testing\", fontsize=16) \nplt.xlabel(\"Average Participation Rate\", fontsize=14) \nplt.ylabel(\"State\",fontsize=14) \nplt.show()","af74221c":"#### Our data dictionary","1983fcee":"## Part 1: Data Cleaning","344f9901":"One of our dataframes contains an extra row. Let's remove this from the dataframe.","260ba417":"For both the ACT and SAT dataset, there are no missing (null) values. However, in the SAT dataset there are missing partitions of columns pertaining to the individual scores for all 4 categories. Specifically, The SAT has four sections: Reading, Writing and Language, Math (no calculator), and Math (calculator allowed). In our dataset, Reading and Writing and Language have been combined into Column 2 as an integer. While Math scores of calculator and without calculator have been combined into column 3.\n","8de851a4":"The SAT dataset is showing statistics related to the SAT test for each state in the U.S. for the SAT. The SAT is a standardized test widely used for college admissions in the United States. The SAT has four sections: Reading, Writing and Language, Math (no calculator), and Math (calculator allowed).\n\nThe total test score is displayed as 'Total'. In addition, the 'Participation' column relates to the percentage of a population within the state, that participated in taking the test. The 'Math' and 'Evidence-Based Reading and Writing' pertain to the scores in mathematics and reading\/writing, respectivelly. We can prove this hypothesis by combining both math and english values to yield the final test score. All values in the sat dataset are integers.\n\nThe act dataset is showing statistics related to the ACT test for each state in the U.S. The ACT is a standardized test used for college admissions in the United States that covers four academic skill areas: English, mathematics, reading, and science reasoning. The main four ACT test sections are individually scored on a scale of 1\u201336, and a composite score is the rounded whole number average of the four sections.\n\nEach column is related to an individual score pertaining to each individual topic, that is, 'English' refers to a score from 1-36 for English, 'Science' refers to a score from 1-36 for Science, etc. All Subject test scores range from 1 to 36; all scores are floats.\nThe 'Participation' is related to the percentage of a population within a state that are able to take the test.","efbd2bf1":"# 2019 Datasets","620a0f52":"#### 2. Display Data","5b63ef07":"![](https:\/\/bostonglobe-prod.cdn.arcpublishing.com\/resizer\/S0jNbdqmfG9pcGdG13r6MLGIieU=\/1440x0\/cloudfront-us-east-1.images.arcpublishing.com\/bostonglobe\/PBOB6NQGFJGUPOO6EVWSF5GVYQ.jpeg)","8fe15fbc":"Participation distributions are similar across years. SAT has a higher amount of states with very low participation rates, and ACT has a higher amount of states with very high participation rates","7b3eee89":"#### 3. Verbally Describing the Data","e942e7d1":"# Problem Statement\n\nThe SAT dataset is showing statistics related to the SAT test for each state in the U.S. from years 2017, 2018, and 2019.The SAT is a standardized test widely used for college admissions in the United States. The SAT has four sections: Reading, Writing and Language, Math (no calculator), and Math (calculator allowed). These datasets take data from years 2017 to 2019.\n\nThe ACT dataset is showing statistics related to the ACT test for each state in the U.S. from years 2017, 2018, and 2019. The ACT is a standardized test used for college admissions in the United States that covers four academic skill areas: English, mathematics, reading, and science reasoning. The main four ACT test sections are individually scored on a scale of 1\u201336, and a composite score is the rounded whole number average of the four sections.\n\nWith these datasets, we are trying to find correlations and trends related to SAT and\/or ACT participation rates in specific states, to determine a way to improve participation rates within these states. To do this, we will thoroughly analyze this data using pandas, matplotlib, seaborn, numpy, and other tools to draw our conclusions.","6b84e1aa":"Lets test a hypothesis: Do states that offer free SAT testing have better participation?","05e65ab0":"## 2018 Data Import and Cleaning","fc3aa58f":"|Feature|Type|Dataset|Description|\n|---|---|---|---|\n|state|object|ACT\/SAT|one of the 50 U.S. states of the United States| \n|participation_SAT \/ participation_ACT|float|ACT\/SAT|percentage of students in the class of {year} that took the specified test (units percent to two decimal places 98.10 means 98.1%)| \n|ebrw_sat|int|SAT|scores for evidence-based reading and writing (total score = 800)| \n|math_sat|int|SAT|scores for mathematics (total score = 800)|\n|total_sat|int|SAT|total score for the SAT out of 1600 points| \n|english_act|float|ACT|english scores. (scaled from 1-36)| \n|math_act|float|ACT|mathematics scores. (scaled from 1-36)|\n|reading_act|float|ACT|reading scores. (scaled from 1-36)|\n|science_act|float|ACT|science scores. (scaled from 1-36)|\n|composite_act|float|ACT|total score. (average of four test scores, rounded to the nearest whole number. Fractions less than one-half are rounded down; fractions one-half or more are rounded up.)|","623920c1":"Read in the `sat_2018.csv` and `act_2018.csv` files and assign them to appropriately named pandas dataframes. For the **2018 ACT Data**, only the `Composite` scores are available. Repeating the same processes to clean the 2018 data here as in the previous sections above.","6e0dfb63":"Looks like there are some errors in the data, we can fix this below:","e03306c4":"## 2017 Data Import and Cleaning","77db50d9":"# SAT & ACT Analysis ","a5527543":"#### Merge Dataframes\n\nJoin the 2017 ACT and SAT dataframes using the state in each dataframe as the key. Assign this to a new variable.","9bc50c30":"#### Fixing any errors identified","d92e5cf5":"#### 1. Read In SAT & ACT  Data\n\nRead in the `sat_2017.csv` and `act_2017.csv` files and assign them to appropriately named pandas dataframes.","59be9967":"## Part 2: EDA"}}