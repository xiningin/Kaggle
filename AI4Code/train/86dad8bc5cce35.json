{"cell_type":{"4d373479":"code","9f3ea94c":"code","c28524e6":"code","9439a467":"code","39104adf":"code","a3cb58fa":"code","d2a0b4ab":"code","a3da87c7":"code","df3d0f3e":"code","b39a52e9":"code","67554248":"code","ff841a90":"code","a88af7a0":"code","68a64370":"code","733b17f4":"code","ae7c56bf":"code","eb747e76":"code","b135ba0e":"code","ec1f9367":"code","0d641f40":"code","73fc4106":"code","70e72224":"code","bc2309a0":"code","da08ca4b":"code","d502289f":"code","4146892d":"code","34749de8":"markdown","7dd8c09c":"markdown"},"source":{"4d373479":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport datetime as dt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9f3ea94c":"SeoulFloating = pd.read_csv(\"\/kaggle\/input\/coronavirusdataset\/SeoulFloating.csv\")\ncase = pd.read_csv(\"\/kaggle\/input\/coronavirusdataset\/Case.csv\")\nSearchTrend = pd.read_csv(\"\/kaggle\/input\/coronavirusdataset\/SearchTrend.csv\")\nPatientRoute = pd.read_csv(\"\/kaggle\/input\/coronavirusdataset\/PatientRoute.csv\")\nTimeGender = pd.read_csv(\"\/kaggle\/input\/coronavirusdataset\/TimeGender.csv\")\nTimeAge = pd.read_csv(\"\/kaggle\/input\/coronavirusdataset\/TimeAge.csv\")\nRegion = pd.read_csv(\"\/kaggle\/input\/coronavirusdataset\/Region.csv\")\nWeather = pd.read_csv(\"\/kaggle\/input\/coronavirusdataset\/Weather.csv\")\nTime = pd.read_csv(\"\/kaggle\/input\/coronavirusdataset\/Time.csv\")\nPatientInfo = pd.read_csv(\"\/kaggle\/input\/coronavirusdataset\/PatientInfo.csv\")\nTimeProvince = pd.read_csv(\"\/kaggle\/input\/coronavirusdataset\/TimeProvince.csv\")\nSearchTrend.tail(10)","c28524e6":"SearchTrend.columns\n","9439a467":"SearchTrend.corr()","39104adf":"f,ax = plt.subplots(figsize=(5,5))\nsns.heatmap(SearchTrend.corr(), annot=True, linewidths=20, fmt= ' .1f', ax=ax)\nplt.show()","a3cb58fa":"Time.head()","d2a0b4ab":"Time.columns","a3da87c7":"x_dateValues = Time[['date']]\n#data frame","df3d0f3e":"\nplt.plot(Time.date,Time.confirmed,zorder=1,color=\"black\")\nplt.plot(Time.date,Time.released,zorder=1,color=\"red\")\nplt.plot(Time.date,Time.test,zorder=1,color=\"blue\")\nplt.plot(Time.date,Time.negative,zorder=1,color=\"orange\")\nplt.show()","b39a52e9":"Time.test.plot(kind = 'line', color = 'g',label = 'test',linewidth=1,alpha = 0.9,grid = True,linestyle = ':')\nTime.confirmed.plot(color = 'r',label = 'confirmed',linewidth=1, alpha = 0.9,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('time')              # label = name of label\nplt.ylabel('test&confirmed count')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","67554248":"Time.plot(kind='scatter', x='confirmed', y='test',alpha = 0.5,color = 'red')\nplt.xlabel('confirmed')              # label = name of label\nplt.ylabel('test')\nplt.title('confirmed test scatter plot')   \nplt.show()","ff841a90":"Time.confirmed.plot(kind = 'hist', bins = 50, figsize = (12,12), color = 'g')\n\n# hist graph doens't mean anythin for this data.\nplt.clf()","a88af7a0":"Time.head()","68a64370":"Time[\"test_date\"] = [\"after 16\" if i > 16 else \"before 16\" for i in Time.time]\nTime.loc[20:,[\"test_date\", \"confirmed\"]]","733b17f4":"Time.info()\n#there is no nan data in this part","ae7c56bf":"Time.describe()\n#this doen't mean anything","eb747e76":"Time.boxplot(column = 'confirmed')","b135ba0e":"data_time = Time.head()\ndata_time","ec1f9367":"melted = pd.melt(frame = data_time, id_vars = 'date', value_vars = ['test', 'confirmed'])\nmelted","0d641f40":"melted.pivot(index = 'date', columns = 'variable', values = 'value')","73fc4106":"data1 = Time.head()\ndata2 = Time.tail()\nconc_data_row = pd.concat([data1,data2],axis =0,ignore_index =True) # axis = 0 : adds dataframes in row\nconc_data_row","70e72224":"data1 = Time['test'].head()\ndata2 = Time['confirmed'].head()\nconc_data = pd.concat([data1,data2],axis =1)\nconc_data","bc2309a0":"Time.dtypes\n","da08ca4b":"Time['date'] = Time['date'].astype('category')\nTime.dtypes","d502289f":"Time.info()","4146892d":"#Time['test'].value_counts(dropna = False)","34749de8":"If the range is high between dots, the acceleration of spreading there is high. That is, the number of positive cases is higher compared to the number of tests.","7dd8c09c":"The most versatile of each other Coronavirus and Pneumonia. Second most are Coronavirus and Cold."}}