{"cell_type":{"76622b78":"code","75fb968c":"code","cb241e5b":"code","df233e28":"code","1c357041":"code","7aa26b3a":"markdown","c1d32f82":"markdown","29ced12e":"markdown"},"source":{"76622b78":"!ls '..\/input\/cnn-part-1-create-subslices-for-each-sound\/output\/'","75fb968c":"!pip install split_folders","cb241e5b":"import split_folders\n\nimport os","df233e28":"os.makedirs('output')\nos.makedirs('output\/train')\nos.makedirs('output\/val')","1c357041":"audio_loc = '..\/input\/cnn-part-1-create-subslices-for-each-sound\/output\/'\n\nsplit_folders.ratio(audio_loc, output='output', seed=1337, ratio=(0.8, 0.2))","7aa26b3a":"This is the 2nd part of my mini series in Detecting Respiratory Disease using Respiratory Audio (breathing sounds). Here are the other parts in this series:\n- Part 1: [Slicing audio files to subslices as defined by the .txt files](https:\/\/www.kaggle.com\/danaelisanicolas\/cnn-part-1-create-subslices-for-each-sound)\n- Part 3: [Creating Spectogram images from sound files](https:\/\/www.kaggle.com\/danaelisanicolas\/cnn-part-3-create-spectrogram-images)\n- Part 4: [Creating a model and training using VGG16](https:\/\/www.kaggle.com\/danaelisanicolas\/cnn-part-4-training-and-modelling-with-vgg16)\n\nFor this kernel, we'll just split the output from part 1 (wav slices) to train and validation sets. I'm importing my output from the Part 1 kernel which you can checkout from the links above.","c1d32f82":"And that's that. You can now use the output from this kernel for Part 3 (WIP)","29ced12e":"This task involves splitting without distorting the folder structure. I'm using split_folders python package to do this. Source: https:\/\/pypi.org\/project\/split-folders\/"}}