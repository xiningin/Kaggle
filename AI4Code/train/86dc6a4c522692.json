{"cell_type":{"6129668b":"code","d9e5b397":"code","254a3bd4":"code","8ced4f34":"code","a4a49689":"code","e7c2b27c":"code","2d2479c0":"code","4f0c5d66":"code","ab089734":"code","92a0f0ae":"code","23611cda":"code","c3909afa":"markdown","754e4e92":"markdown","90a0c9e9":"markdown","d60b2558":"markdown","0f57567f":"markdown","904cba6a":"markdown","a50e49fa":"markdown"},"source":{"6129668b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","d9e5b397":"df = pd.read_csv('..\/input\/attendance-marka\/AttendanceMarksSA-200919-184800.csv')\ndf.head()","254a3bd4":"X= df['MSE']\nY=df['ESE']\nsns.scatterplot(X,Y)","8ced4f34":"theta0 = 0\ntheta1 = 0\nalpha = 0.01\ncount = 10000\nm = len(X) # m is number of examples i.e number of students here.","a4a49689":"for i in range(count): \n    Y_hat = theta1*X + theta0  \n    theta0 = theta0 - (alpha\/m)*sum(Y_hat-Y)\n    theta1 = theta1 - (alpha\/m)*sum(X*(Y_hat-Y))\n        \nprint(theta0,theta1)","e7c2b27c":"Y_hat = theta1*X + theta0\n\nplt.scatter(X, Y) \nplt.plot([min(X), max(X)], [min(Y_hat), max(Y_hat)], color='red')  # regression line\nplt.show()","2d2479c0":"import math\ndef RSE(y_true, y_predicted):\n   \n    y_true = np.array(y_true)\n    y_predicted = np.array(y_predicted)\n    RSS = np.sum(np.square(y_true - y_predicted))\n\n    rse = math.sqrt(RSS \/ (len(y_true) - 2))\n    return rse\n\n\nrse= RSE(df['ESE'],Y_hat)\nprint(rse)","4f0c5d66":"\nfrom sklearn.linear_model import LinearRegression","ab089734":"X = np.array(df['MSE']).reshape(-1,1)\ny = np.array(df['ESE']).reshape(-1,1)\n \n\nmodel = LinearRegression()\nmodel.fit(X,y)\n\n\nprint(model.coef_)\nprint(model.intercept_)\n\ny_predict = model.predict(X)","92a0f0ae":"rse = RSE(y,y_predict)\n\nprint(rse)","23611cda":"marks = [17]\nresult = model.predict([marks])\nprint(result)","c3909afa":"Implementation","754e4e92":"# **SLR with Gradient Descent and Scikit-learn\u00b6**\n\n1.Gradient Descent (Without Scikit-learn)\n\n    -this is based upon Supervised lerning Algorithem Algorithm\n    -Iterative Process\n    - Makes a guess for the values ofy-intercept, and slope\n    - Calculates error between predicted and true value\n    -Process of iteration continues either error is unacceptable or does not exceed iteration count\n    \n2.Scikit-learn","90a0c9e9":"Calculating Residual Standard Erro","d60b2558":"Predicting score","0f57567f":"**2)Scikit Learn:**","904cba6a":" Mid Semester Examination  score =17\n predicted  End Semester Examination = 58","a50e49fa":"Importing Library"}}