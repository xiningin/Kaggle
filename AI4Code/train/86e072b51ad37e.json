{"cell_type":{"ecf470ca":"code","a063e0ce":"code","6133aab8":"code","1da5db74":"code","8451416f":"code","1fe84e21":"code","8b92383c":"code","3eff347d":"code","0fe37633":"code","2949bfdc":"code","d3bf6f46":"code","6b810efa":"code","ef4d359e":"code","d83a143d":"code","9a2d6c3a":"code","6d345785":"code","28181148":"code","58f57ab3":"code","13554de1":"code","21a9daa0":"code","863d2d24":"code","c4e6f31d":"markdown","b895d2fe":"markdown","38d31c85":"markdown","1df10bdf":"markdown","d7b90b67":"markdown","a6767e26":"markdown","1598689a":"markdown","89dcb366":"markdown"},"source":{"ecf470ca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a063e0ce":"df=pd.read_csv(\"..\/input\/heart-disease-cleveland-uci\/heart_cleveland_upload.csv\")","6133aab8":"df.head()","1da5db74":"df.isnull().any()","8451416f":"# Visulaize how much data is missing \nimport seaborn as sns\n\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')\n\n# if any data had been missing, it would have been highlighted in yellow\n# no yellow lines = no missing values = very clean data","1fe84e21":"sns.countplot(x='condition',data=df)","8b92383c":"sns.countplot(x='condition',hue='sex',data=df,palette = 'RdBu_r')","3eff347d":"sns.countplot(x='condition',hue='cp',data=df,palette='rainbow')","0fe37633":"sns.pairplot(df)","2949bfdc":"x=df.drop(['condition'],axis=1)","d3bf6f46":"y=df['condition']","6b810efa":"from sklearn.model_selection import train_test_split\n\nxtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.3,random_state=22)","ef4d359e":"from sklearn.linear_model import LogisticRegression","d83a143d":"logmodel=LogisticRegression()\nlogmodel.fit(xtrain,ytrain)","9a2d6c3a":"pred=logmodel.predict(xtest)","6d345785":"from sklearn.metrics import confusion_matrix","28181148":"sns.heatmap(confusion_matrix(pred,ytest),annot=True)","58f57ab3":"from sklearn.metrics import accuracy_score\n\nacc=accuracy_score(pred,ytest)\n\nacc*100","13554de1":"logmodel.coef_","21a9daa0":"logmodel.intercept_","863d2d24":"from sklearn.datasets import make_classification\nfrom sklearn.linear_model import LogisticRegression\nfrom matplotlib import pyplot\n\n# get importance\nimportance = logmodel.coef_[0]\n# summarize feature importance\nfor i,v in enumerate(importance):\n\tprint('Feature: %0d, Score: %.5f' % (i,v))\n# plot feature importance\npyplot.bar([x for x in range(len(importance))], importance)\npyplot.show()","c4e6f31d":"**cp: chest pain type Value 0: typical angina\n\nValue 0: typical angina\nValue 1: atypical angina\n\nValue 2: non-anginal pain\n\nValue 3: asymptomatic**","b895d2fe":"# Train test split","38d31c85":"**The data is clean without any missing values**","1df10bdf":"## Logistic regression","d7b90b67":"**those who have heart disease suffer mostly from asymptomatic chest pain \n those who do not have disease suffer from a wide range of chest pains**","a6767e26":"# Model training","1598689a":"**The heart disease category data is lesser than the no disease type**","89dcb366":"**It is seen that the males are having the highest chance of heart disease than females**"}}