{"cell_type":{"ba71516d":"code","50f78dc3":"code","4f762c4d":"code","d4412fd7":"code","c678a306":"code","2009df06":"code","d46da2a7":"code","038ffce4":"code","d52a64ce":"code","1fa0b9af":"code","278ecdfc":"code","be3e8bd4":"code","51b3135e":"code","2f0dd7c7":"code","6d3f0f6b":"code","bce3ada0":"code","bd5dcddd":"code","b4c2fd90":"code","15aa6a9a":"code","d441fcbd":"code","2a03273d":"code","c425f475":"markdown"},"source":{"ba71516d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nfrom scipy.stats import skewnorm\nimport numpy as np # linear algebra\nimport matplotlib.dates as mdates\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom scipy.stats import skew\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data filen ass are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nfrom scipy.stats import skew\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","50f78dc3":"df = pd.read_csv(\"..\/input\/zameecom-dataset\/Zamee.com Dataset.csv\" , parse_dates=True,)\ndf.head(10)","4f762c4d":"df.drop(df.iloc[:, 19:309], inplace = True, axis = 1)\n  \ndf.head()","d4412fd7":"df.dropna()","c678a306":"p =sns.distplot(df[\"price\"] ,label=\"Skewness: %.2f\"%(df[\"price\"] .skew()) )\np.legend()","2009df06":"numerical_feats = df.dtypes[df.dtypes != \"object\"].index\nprint(\"Number of Numerical features: \", len(numerical_feats))\n\ncategorical_feats = df.dtypes[df.dtypes == \"object\"].index\nprint(\"Number of Categorical features: \", len(categorical_feats))","d46da2a7":"for col in numerical_feats:\n    print('{:15}'.format(col), \n          'Skewness: {:05.2f}'.format(df[col].skew()) , \n          '   ' ,\n          'Kurtosis: {:06.2f}'.format(df[col].kurt())  \n         )","038ffce4":"\nsns.countplot(x = \"price\" , data = df)\nplt.title('Skewed data')\nplt.show()","d52a64ce":"df.plot()","1fa0b9af":"\n\ndf['year'] = pd.DatetimeIndex(df['date_added']).year\ndf['month'] = pd.DatetimeIndex(df['date_added']).month\nsns.scatterplot(data=df, x='year' , y=\"price\" , hue =\"property_type\" )\nplt.gcf().set_size_inches((20, 20))","278ecdfc":"sns.scatterplot(data=df, x='month' , y=\"price\" , hue =\"property_type\" )\nplt.gcf().set_size_inches((20, 20))","be3e8bd4":"pd.crosstab([df.price], [df.property_type, df.year], margins=True)","51b3135e":"sns.catplot('year','price',hue='property_type',kind='point',data=df);","2f0dd7c7":"df.corr()","6d3f0f6b":"sns.distplot(df['price']);","bce3ada0":"sns.catplot('year','price',kind='point',data=df);","bd5dcddd":"sns.catplot('year','price',hue='purpose',kind='point',data=df);","b4c2fd90":"\n sns.countplot(x=\"purpose\", hue=\"year\" , data=df)","15aa6a9a":"sns.countplot(x=\"purpose\", hue=\"date_added\" , data=df)","d441fcbd":"sns.countplot(x=\"purpose\", hue=\"month\" , data=df)","2a03273d":"sns.catplot( x=\"price\", col=\"year\", \n                data= df, kind=\"count\",\n                height=4, aspect=.7);","c425f475":"Price trend w.r.t to dates and property types"}}