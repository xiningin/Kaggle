{"cell_type":{"00a41668":"code","9c56182b":"code","f66ca567":"code","f2b15b17":"code","e5a25b76":"code","3c42f4fb":"code","921370fc":"code","744a151c":"code","1753f01d":"code","5e1060c2":"code","90f97f28":"code","22c9c25f":"code","4215ef49":"code","ce51d133":"code","65f70465":"code","7461ce33":"code","9d046a0f":"code","8882b73e":"code","505fdfa8":"code","c7268c16":"code","54241645":"code","9c643e26":"code","ddf3f179":"code","84964ccf":"code","428e1ced":"code","f4833461":"code","1627212d":"code","281b1a24":"code","20bc26d7":"code","02f9cc45":"code","8ab22223":"code","bb36c698":"code","9e246408":"code","e1fac4dd":"code","c94b9f6b":"code","531f4c26":"code","3c21ca6a":"code","734323fc":"code","832e0f51":"code","8e891a79":"code","2a2cf99d":"code","df856971":"code","2177400d":"code","4d4941f4":"code","b4536c37":"code","64ffba0a":"code","df722b62":"code","b212b65a":"code","b63f2b22":"code","20a94206":"code","eb3eb455":"code","ece0952e":"code","852adf69":"code","365afd2a":"code","2e6cc754":"code","968bea00":"code","b49d9244":"code","13f75921":"code","8b6521fb":"code","50609381":"code","003285ea":"code","e6be2fb3":"code","2aae72cf":"code","6f6842c3":"code","b86e8c11":"code","1b81eaf5":"code","3e364cb5":"code","bb667dc8":"code","8f78e01c":"code","9a8ef22d":"code","9994ba80":"code","9339352e":"code","d63912dd":"code","75d9f2b2":"code","c92d80f5":"code","cb5e1c8f":"code","91931921":"code","c477f5b9":"code","533fdc66":"code","e182108b":"code","292ebc6a":"code","379be2d2":"code","c5e78d73":"code","de714887":"code","54146e34":"code","524f07e3":"code","9493a8d1":"code","f7136d16":"code","61b6c1f6":"code","dff25422":"code","59cef30b":"code","517dce3b":"code","4899ade5":"code","9434a415":"code","770e58d1":"code","b1212acd":"code","cfc7fc8f":"code","70691cfc":"code","dc4478e4":"code","13f41913":"code","144ce27c":"code","ca50ee9d":"code","472f0640":"code","2ec5efa7":"code","62a2a81a":"code","1e776ad2":"code","35dc6d6f":"code","4a1423fa":"code","2e2d4bfd":"code","638312c6":"code","9bc38249":"code","f5b0a3e0":"code","e67b8a46":"code","55829616":"code","c713e113":"code","5484082c":"code","4de238f6":"code","efb58f90":"code","1a542c2d":"code","313c42e9":"code","4225372e":"code","0bb6d4ee":"code","4b5e8830":"code","8e37d8d7":"code","8d193caa":"code","9e0cbb7d":"code","4a16fe72":"code","c688828e":"code","a82de58a":"code","e907d3f0":"code","261945c8":"code","e14e6a63":"code","86fd95cb":"code","d5929c8b":"code","2a00bc05":"code","41d8097f":"code","d7c07b1e":"code","dfe51bfb":"code","75b287b9":"markdown","1c011f36":"markdown","1513aa6d":"markdown","45d12ca5":"markdown","bed575bf":"markdown","3423493d":"markdown","f94f9e06":"markdown","d5c6145b":"markdown","41391259":"markdown","64e425a0":"markdown","a45812e5":"markdown","79c4c7a4":"markdown","eb6e21fb":"markdown","2697201c":"markdown","8958386f":"markdown","fff9e998":"markdown","174950ad":"markdown","98cbc9d5":"markdown","27e84f46":"markdown","5ca6f223":"markdown","4338aff8":"markdown","4c96d839":"markdown","861482f5":"markdown","ea86def2":"markdown","b74d74bc":"markdown","5ddfdc38":"markdown","f0bcf60c":"markdown","c233c7a4":"markdown","61a485a3":"markdown","58547526":"markdown","9170bb17":"markdown","022e69de":"markdown","10eeface":"markdown","784297aa":"markdown","49abe195":"markdown","a9ccc350":"markdown","a179cae3":"markdown","9db25134":"markdown","a748418d":"markdown","cfd29a35":"markdown","b033563b":"markdown","31f14ec3":"markdown","18bf3b95":"markdown","0567265d":"markdown","d03a28bf":"markdown","f933ab0f":"markdown","9938b4c7":"markdown","16ca97df":"markdown","ad07a0e7":"markdown","3f379bd2":"markdown","31f2f578":"markdown","0292c9fc":"markdown","7ae12e11":"markdown","4dbe2702":"markdown","a60f1627":"markdown","88d6ee42":"markdown","cfcff931":"markdown","9a8a662f":"markdown","2c58f556":"markdown","7328ab4e":"markdown","e4ea7c3d":"markdown","5fd09374":"markdown","8f81ed37":"markdown","dbad336b":"markdown","a158fac5":"markdown","9065ae1f":"markdown","4644c774":"markdown","13097a85":"markdown","a5daa76a":"markdown","089dd4f9":"markdown","c4eeea4c":"markdown","5450daf9":"markdown","0be33876":"markdown","ffc285ca":"markdown","d2323104":"markdown","3e6ad35e":"markdown","d0ffe21a":"markdown","489ac6c7":"markdown","68731155":"markdown","508c04a0":"markdown","87ca3efb":"markdown","0b3c5cbb":"markdown","0b61f881":"markdown","c51cd60c":"markdown","a9359bc5":"markdown","e08c0481":"markdown","517ae180":"markdown","a7e75404":"markdown","aba1f0e6":"markdown","1841954b":"markdown","481ba35e":"markdown","51e9e295":"markdown","40f65d9d":"markdown","05a42268":"markdown","0ff8a9c0":"markdown","79f56bfa":"markdown","bc3f76c8":"markdown","681895c9":"markdown","447ce59c":"markdown","64ad9d64":"markdown","63425ef2":"markdown","185e05f3":"markdown","90308ecd":"markdown","047f314f":"markdown","2bae0961":"markdown","a0745ac6":"markdown","b3501bb5":"markdown","d130183f":"markdown","212f429d":"markdown","4b23697a":"markdown","0a4b1cb2":"markdown","cb6628eb":"markdown","5e71e6e4":"markdown","db480662":"markdown","c8c11736":"markdown","dbd9e75f":"markdown","1aff9a02":"markdown","2f620611":"markdown","4d105ec9":"markdown","91300258":"markdown","7cab1d77":"markdown","a093ac5b":"markdown","6ad68621":"markdown","cdc2f650":"markdown","bd553eb9":"markdown","a8e900a1":"markdown","a55b7bb7":"markdown","c86ae5e4":"markdown","a29a12fe":"markdown","03bbea80":"markdown","75537a52":"markdown","b11bd44f":"markdown"},"source":{"00a41668":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\npd.set_option('display.max_column',None)\npd.set_option('display.max_row',None)","9c56182b":"df = pd.read_excel('..\/input\/league-of-legends-world-championship-2019\/2019-summer-match-data-OraclesElixir-2019-11-10.xlsx')\ndf.head()","f66ca567":"print('We have',df.shape[1],'attributes to work on.')","f2b15b17":"teamdf = df.loc[df['position']=='Team',:]\nteamdf.head()","e5a25b76":"playersdf = df.loc[df['position']!='Team',:]\nplayersdf.head()","3c42f4fb":"print(int((teamdf.shape[0]\/2)),'matches played')","921370fc":"bans = teamdf[['ban1','ban2','ban3','ban4','ban5']].melt()\nbans.head()","744a151c":"top5bans = bans['value'].value_counts().nlargest(5)\nfor i in range (0,top5bans.shape[0]):\n    print(top5bans.index[i],'was banned',top5bans[i],'times, which is',str(\"%.2f\" %((top5bans[i]\/119)*100))+'% of the matches.')","1753f01d":"top5picks = playersdf['champion'].value_counts().nlargest(5)\nfor i in range (0,top5picks.shape[0]):\n    print(top5picks.index[i],'was picked',top5picks[i],'times, which is',str(\"%.2f\" %((top5picks[i]\/119)*100))+'% of the matches.')","5e1060c2":"top = playersdf.loc[playersdf['position']=='Top']\nmid = playersdf.loc[playersdf['position']=='Middle']\nbot = playersdf.loc[playersdf['position']=='ADC']\nsupport = playersdf.loc[playersdf['position']=='Support']\njungle = playersdf.loc[playersdf['position']=='Jungle']","90f97f28":"print('Top 5 picked champions in Top:')\nprint(top['champion'].value_counts().nlargest(5))","22c9c25f":"print('Top 5 picked champions in Mid:')\nprint(mid['champion'].value_counts().nlargest(5))","4215ef49":"print('Top 5 picked champions in Bot:')\nprint(bot['champion'].value_counts().nlargest(5))","ce51d133":"print('Top 5 picked champions in Support:')\nprint(support['champion'].value_counts().nlargest(5))","65f70465":"print('Top 5 picked champions in Jungle:')\nprint(jungle['champion'].value_counts().nlargest(5))","7461ce33":"timedf = teamdf.loc[teamdf['side']=='Red'] #picking only one side of the match to get the times only once\ntimedf.head(3)","9d046a0f":"timedf['gamelength'].describe()","8882b73e":"maxtime = teamdf.loc[teamdf['gamelength']==teamdf['gamelength'].max()]\nmintime = teamdf.loc[teamdf['gamelength']==teamdf['gamelength'].min()]\nprint(\"Maximum Match Time is game number {} between {} and {}\".format(maxtime['game'].tolist()[0],maxtime['team'].tolist()[0],maxtime['team'].tolist()[1]))\nprint(\"Minimum Match Time is game number {} between {} and {}\".format(mintime['game'].tolist()[0],mintime['team'].tolist()[0],mintime['team'].tolist()[1]))","505fdfa8":"side = teamdf[['side','result']]\nside.groupby('side')['result'].value_counts()","c7268c16":"maxkills = teamdf.loc[teamdf['teamkills']==teamdf['teamkills'].max()]\nminkills = teamdf.loc[teamdf['teamkills']==teamdf['teamkills'].min()]\nprint('Max kills for a team in a single game is {} for {} against {}'.format(maxkills['teamkills'].tolist()[0],maxkills['team'].tolist()[0],teamdf.loc[teamdf['gameid']==maxkills['gameid'].tolist()[0]]['team'].tolist()[0]))\nprint('Min kills for a team in a single game is {} for {} against {}'.format(minkills['teamkills'].tolist()[0],minkills['team'].tolist()[0],teamdf.loc[teamdf['gameid']==minkills['gameid'].tolist()[0]]['team'].tolist()[1]))","54241645":"maxdeaths = teamdf.loc[teamdf['teamdeaths']==teamdf['teamdeaths'].max()]\nmindeaths = teamdf.loc[teamdf['teamdeaths']==teamdf['teamdeaths'].min()]\nprint('Max deaths for a team in a single game is {} for {} against {}'.format(maxdeaths['teamdeaths'].tolist()[0],maxdeaths['team'].tolist()[0],teamdf.loc[teamdf['gameid']==maxdeaths['gameid'].tolist()[0]]['team'].tolist()[1]))\nprint('Min deaths for a team in a single game is {} for {} against {}'.format(mindeaths['teamdeaths'].tolist()[0],mindeaths['team'].tolist()[0],teamdf.loc[teamdf['gameid']==mindeaths['gameid'].tolist()[0]]['team'].tolist()[1]))","9c643e26":"print(\"There was {} Double Kills\".format(playersdf['doubles'].sum()))\nprint(\"There was {} Triple Kills\".format(playersdf['triples'].sum()))\nprint(\"There was {} Quadra Kills\".format(playersdf['quadras'].sum()))\nprint(\"There was {} Penta Kills\".format(playersdf['pentas'].sum()))","ddf3f179":"player = playersdf[['player','doubles','triples','quadras','pentas','k','d','a','fb','fbvictim','fbassist','fbtime']]\nplayerdoubles = player.groupby('player')['doubles'].sum()\nplayertriples = player.groupby('player')['triples'].sum()\nplayerquadras = player.groupby('player')['quadras'].sum()\nplayerpentas = player.groupby('player')['pentas'].sum()\nprint(\"Max Double kills is {} by {}\".format(playerdoubles.max(),playerdoubles.loc[playerdoubles == playerdoubles.max()].index[0]))\nprint(\"Max Triple kills is {} by {}\".format(playertriples.max(),playertriples.loc[playertriples == playertriples.max()].index[0]))\nprint(\"Max Quadra kills is {} by {}\".format(playerquadras.max(),playerquadras.loc[playerquadras == playerquadras.max()].index[0]))\nprint(\"Max Penta kills is {} by {}\".format(playerpentas.max(),playerpentas.loc[playerpentas == playerpentas.max()].index[0]))","84964ccf":"playerkills = player.groupby('player')['k'].sum()\nplayerdeaths = player.groupby('player')['d'].sum()\nplayerassists = player.groupby('player')['a'].sum()\nprint(\"Max kills is {} by {}\".format(playerkills.max(),playerkills.loc[playerkills == playerkills.max()].index[0]))\nprint(\"Max deaths is {} by {}\".format(playerdeaths.max(),playerdeaths.loc[playerdeaths == playerdeaths.max()].index[0]))\nprint(\"Max assists is {} by {}\".format(playerassists.max(),playerassists.loc[playerassists == playerassists.max()].index[0]))\nprint(\"Min kills is {} by {}\".format(playerkills.min(),playerkills.loc[playerkills == playerkills.min()].index[0]))\nprint(\"Min deaths is {} by {}\".format(playerdeaths.min(),playerdeaths.loc[playerdeaths == playerdeaths.min()].index[0]))\nprint(\"Min assists is {} by {}\".format(playerassists.min(),playerassists.loc[playerassists == playerassists.min()].index[0]))","428e1ced":"firstbloodkill = player.groupby('player')['fb'].sum()\nfirstbloodassist = player.groupby('player')['fbassist'].sum()\nfirstblooddeath = player.groupby('player')['fbvictim'].sum()\nprint(\"Max First Blood Kills is {} by {}\".format(firstbloodkill.max(),firstbloodkill.loc[firstbloodkill == firstbloodkill.max()].index[0]))\nprint(\"Max First Blood Assist is {} by {}\".format(firstbloodassist.max(),firstbloodassist.loc[firstbloodassist == firstbloodassist.max()].index[0]))\nprint(\"Max Fist Blood Victim is {} by {}\".format(firstblooddeath.max(),firstblooddeath.loc[firstblooddeath == firstblooddeath.max()].index[0]))","f4833461":"LowestFBt = player['fbtime'].min()\nHighestFBt = player['fbtime'].max()\nlowteam = teamdf.loc[teamdf['fbtime']==player['fbtime'].min()]['team'].tolist()\nhighteam = teamdf.loc[teamdf['fbtime']==player['fbtime'].max()]['team'].tolist()\nlowkiller = playersdf.loc[(playersdf['fbtime']==player['fbtime'].min()) & (playersdf['fb']==1) ]['player'].tolist()[0]\nlowvictim = playersdf.loc[(playersdf['fbtime']==player['fbtime'].min()) & (playersdf['fbvictim']==1)]['player'].tolist()[0]\nhighkiller = playersdf.loc[(playersdf['fbtime']==player['fbtime'].max()) & (playersdf['fb']==1) ]['player'].tolist()[0]\nhighvictim = playersdf.loc[(playersdf['fbtime']==player['fbtime'].max()) & (playersdf['fbvictim']==1)]['player'].tolist()[0]\nprint('Fastest First Blood happend after',\"%.2f\" %LowestFBt,'minutes in the match between {} and {}, {} was killed by {}'.format(lowteam[0],lowteam[1],lowvictim,lowkiller))\nprint('Slowest First Blood happend after',\"%.2f\" %HighestFBt,'minutes in the match between {} and {}, {} was killed by {}'.format(highteam[0],highteam[1],highvictim,highkiller))","1627212d":"kpmteamh = teamdf.loc[teamdf['kpm']==teamdf['kpm'].max()]['team'].tolist()[0]\nkpmh = \"%.2f\" %teamdf.loc[teamdf['kpm']==teamdf['kpm'].max()]['kpm'].tolist()[0]\nkpmteaml = teamdf.loc[teamdf['kpm']==teamdf['kpm'].min()]['team'].tolist()[0]\nkpml = \"%.2f\" %teamdf.loc[teamdf['kpm']==teamdf['kpm'].min()]['kpm'].tolist()[0]\ngameh = teamdf.loc[teamdf['kpm']==teamdf['kpm'].max()]['gameid'].tolist()[0]\ngamel = teamdf.loc[teamdf['kpm']==teamdf['kpm'].min()]['gameid'].tolist()[0]\nopkpmteamh = teamdf.loc[teamdf['gameid']==gameh]['team'].tolist()[1]\nopkpmteaml = teamdf.loc[teamdf['gameid']==gamel]['team'].tolist()[1]\nprint('Highest Kill Per Minute Team is {} with {} KPM against {}.'.format(kpmteamh,kpmh,opkpmteamh))\nprint('Lowest Kill Per Minute Team is {} with {} KPM against {}.'.format(kpmteaml,kpml,opkpmteaml))\nprint('Average Kill Per Minute for teams in all matches is {} KPM.'.format(\"%.2f\" %teamdf['kpm'].mean()))","281b1a24":"kpmplayerh = playersdf.loc[playersdf['kpm']==playersdf['kpm'].max()]['player'].tolist()[0]\npkpmh = \"%.2f\" %playersdf.loc[playersdf['kpm']==playersdf['kpm'].max()]['kpm'].tolist()[0]\nkpmplayerl = playersdf.loc[playersdf['kpm']==playersdf['kpm'].min()]['player'].tolist()[0]\npkpml = \"%.2f\" %playersdf.loc[playersdf['kpm']==playersdf['kpm'].min()]['kpm'].tolist()[0]\npgameh = playersdf.loc[playersdf['kpm']==playersdf['kpm'].max()]['gameid'].tolist()[0]\npgamel = playersdf.loc[playersdf['kpm']==playersdf['kpm'].min()]['gameid'].tolist()[0]\nopkpmteamh = teamdf.loc[teamdf['gameid']==pgameh]['team'].tolist()[0]\nopkpmteaml = teamdf.loc[teamdf['gameid']==pgamel]['team'].tolist()[1]\nprint(\"Highest Kill Per Minute Player is {} with {} KPM against {}.\".format(kpmplayerh,pkpmh,opkpmteamh))\nprint(\"Lowest Kill Per Minute Player is {} with {} KPM against {}.\".format(kpmplayerl,pkpml,opkpmteaml))\nprint('Average Kill Per Minute for players in all matches is {} KPM.'.format(\"%.2f\" %playersdf['kpm'].mean()))","20bc26d7":"avgkpmt = teamdf.groupby('team')['kpm'].mean()\navgkpmp = playersdf.groupby('player')['kpm'].mean()\nprint('The Highest Average KPM Team is {} with {} KPM.'.format(avgkpmt.loc[avgkpmt == avgkpmt.max()].index.tolist()[0],\"%.2f\" %avgkpmt.max()))\nprint('The Lowest Average KPM Team is {} with {} KPM.'.format(avgkpmt.loc[avgkpmt == avgkpmt.min()].index.tolist()[0],\"%.2f\" %avgkpmt.min()))\nprint('The Highest Average KPM Player is {} with {} KPM.'.format(avgkpmp.loc[avgkpmp == avgkpmp.max()].index.tolist()[0],\"%.2f\" %avgkpmp.max()))\nprint('The Lowest Average KPM Player is {} with {} KPM.'.format(avgkpmp.loc[avgkpmp == avgkpmp.min()].index.tolist()[0],\"%.2f\" %avgkpmp.min()))","02f9cc45":"#Let me check that\nplayersdf.loc[playersdf['player']=='Lwx']['kpm'].mean()","8ab22223":"rules = ['Top','Jungle','Middle','ADC','Support']\nfor i in rules:\n    kda = playersdf.loc[playersdf['position']==i].groupby(['player'])['k','d','a'].sum()\n    kda['kda'] = (kda['k']+kda['a'])\/kda['d'] \n    print('{} has the highest KDA as {} with {} KDA.'.format(kda.loc[kda['kda']==kda['kda'].max()].index.tolist()[0],i,\"%.2f\" %kda['kda'].max()))","bb36c698":"kda2 = playersdf.loc[playersdf['position']=='Top'].groupby(['player'])['k','d','a'].sum()\nkda2['kda'] = (kda2['k']+kda2['a'])\/kda2['d'] \nkda2.sort_values(by=['kda'],ascending=False).head()","9e246408":"playersdf.loc[playersdf['position']=='Top']['player'].unique()","e1fac4dd":"playersdf.loc[(playersdf['position']=='Top') & (playersdf['player']=='ShowMaker')]","c94b9f6b":"df.loc[(df['gameid']==1070445)]","531f4c26":"rules = ['Top','Jungle','Middle','ADC','Support']\nfor i in rules:\n    kda = playersdf.loc[playersdf['position']==i].groupby(['player'])['k','d','a'].sum()\n    kda['kda'] = (kda['k']+kda['a'])\/kda['d'] \n    print('{} has the lowest KDA as {} with {} KDA.'.format(kda.loc[kda['kda']==kda['kda'].min()].index.tolist()[0],i,\"%.2f\" %kda['kda'].min()))","3c21ca6a":"teamdf.groupby('team')['k'].sum().nlargest(5)","734323fc":"teamdf.groupby('team')['d'].sum().nlargest(5)","832e0f51":"champplays = playersdf.groupby('champion')['result'].count()\nchampplays = champplays.reset_index()\n\nchampwins = playersdf.loc[playersdf['result']==1].groupby('champion')['result'].count()\nchampwins = champwins.reset_index()\n\nchampplays.rename(columns={'result':'number of plays'},inplace=True)\nchampwins.rename(columns={'result':'number of wins'},inplace=True)\n\nchampwinrate = champplays.merge(champwins)\nchampwinrate['Win Rate'] = champwinrate['number of wins']\/champwinrate['number of plays']\nchampwinrate.loc[champwinrate['Win Rate'] == champwinrate['Win Rate'].max()]","8e891a79":"champwins.sort_values(by=['number of wins'],ascending=False).head()","2a2cf99d":"playersdf.groupby('champion')['position'].value_counts()","df856971":"DragonKilled = teamdf.groupby('team')['teamdragkills'].sum()\nDragonKilled = DragonKilled.reset_index()\nDragonKilled = DragonKilled.sort_values(by=['teamdragkills'],ascending=False)\nDragonKilled.head()","2177400d":"DragonKilled.tail()","4d4941f4":"DrakeKilled = teamdf.groupby('team')['elementals'].sum()\nDrakeKilled = DrakeKilled.reset_index()\nDrakeKilled = DrakeKilled.sort_values(by=['elementals'],ascending=False)\nDrakeKilled.head()","b4536c37":"gamedragon = teamdf.groupby('gameid')['teamdragkills'].sum()\ngamedragon = gamedragon.reset_index()\ngamedragon = gamedragon.sort_values(by=['teamdragkills'],ascending=False)\ngamedragon.head()","64ffba0a":"teamdf.loc[(teamdf['gameid']==1070555 )] ","df722b62":"teamdf.loc[(teamdf['gameid']==1071627 )]","b212b65a":"teamdf.groupby('team')['teamdragkills'].sum().sum()","b63f2b22":"firedrakesKilled = teamdf.groupby('team')['firedrakes'].sum()\nfiredrakesKilled = firedrakesKilled.reset_index()\nfiredrakesKilled = firedrakesKilled.sort_values(by=['firedrakes'],ascending=False)\nfiredrakesKilled.head()","20a94206":"teamdf.groupby('team')['firedrakes'].sum().sum()","eb3eb455":"waterdrakesKilled = teamdf.groupby('team')['waterdrakes'].sum()\nwaterdrakesKilled = waterdrakesKilled.reset_index()\nwaterdrakesKilled = waterdrakesKilled.sort_values(by=['waterdrakes'],ascending=False)\nwaterdrakesKilled.head()","ece0952e":"teamdf.groupby('team')['waterdrakes'].sum().sum()","852adf69":"earthdrakesKilled = teamdf.groupby('team')['earthdrakes'].sum()\nearthdrakesKilled = earthdrakesKilled.reset_index()\nearthdrakesKilled = earthdrakesKilled.sort_values(by=['earthdrakes'],ascending=False)\nearthdrakesKilled.head()","365afd2a":"teamdf.groupby('team')['earthdrakes'].sum().sum()","2e6cc754":"airdrakesKilled = teamdf.groupby('team')['airdrakes'].sum()\nairdrakesKilled = airdrakesKilled.reset_index()\nairdrakesKilled = airdrakesKilled.sort_values(by=['airdrakes'],ascending=False)\nairdrakesKilled.head()\n","968bea00":"teamdf.groupby('team')['airdrakes'].sum().sum()","b49d9244":"eldersKilled = teamdf.groupby('team')['elders'].sum()\neldersKilled = eldersKilled.reset_index()\neldersKilled = eldersKilled.sort_values(by=['elders'],ascending=False)\neldersKilled.head()","13f75921":"teamdf.groupby('team')['elders'].sum().sum()","8b6521fb":"teamdf.groupby('team')['teamdragkills'].sum().nlargest(5)","50609381":"teamdf.loc[teamdf['gameid']==1070555]","003285ea":"maxdragkillsteam = teamdf.groupby(['gameid','team'])['teamdragkills'].sum()\nmaxdragkillsteam = maxdragkillsteam.reset_index()\nmaxdragkillsteam.loc[maxdragkillsteam['teamdragkills'] == maxdragkillsteam['teamdragkills'].max()]","e6be2fb3":"teamdf.loc[teamdf['gameid']==1060790]","2aae72cf":"teamdf.loc[teamdf['gameid']==1071398]","6f6842c3":"teamdf.loc[teamdf['gameid']==1072193]","b86e8c11":"teamdf.groupby('team')['herald'].sum().nlargest(5)","1b81eaf5":"heraldtime = teamdf.groupby('team')['heraldtime'].mean()\nheraldtime = heraldtime.reset_index()\nFastestHerald = heraldtime.loc[heraldtime['heraldtime']==heraldtime['heraldtime'].min()]\nSlowestHerald = heraldtime.loc[heraldtime['heraldtime']==heraldtime['heraldtime'].max()]\nprint(FastestHerald)\nprint(SlowestHerald)","3e364cb5":"teamdf['heraldtime'].min()","bb667dc8":"teamdf.loc[teamdf['heraldtime'] == teamdf['heraldtime'].min()]","8f78e01c":"teamdf.groupby('team')['ft'].sum().nlargest(5)","9a8ef22d":"ftwr = teamdf.groupby(['team','ft'])['result'].sum()\nftwr = ftwr.reset_index()\nftwr.head()","9994ba80":"ftwr.groupby('ft')['result'].sum()","9339352e":"83\/(36+83)","d63912dd":"maxftt = teamdf['fttime'].max()\nmaxfttgameid = teamdf.loc[teamdf['fttime']==teamdf['fttime'].max()]['gameid'].tolist()[0]\nmaxfttteams = teamdf.loc[teamdf['gameid']==maxfttgameid]['team'].tolist()\nmaxfttteam = teamdf.loc[teamdf['fttime']==teamdf['fttime'].max()]['team'].tolist()[1]\nprint('Longest Time to kill the first tower was {} minutes in the game between {} and {} and was killed by {}.'.format(\"%.2f\" %maxftt,maxfttteams[0],maxfttteams[1],maxfttteam))","75d9f2b2":"minftt = teamdf['fttime'].min()\nminfttgameid = teamdf.loc[teamdf['fttime']==teamdf['fttime'].min()]['gameid'].tolist()[0]\nminfttteams = teamdf.loc[teamdf['gameid']==minfttgameid]['team'].tolist()\nminfttteam = teamdf.loc[teamdf['fttime']==teamdf['fttime'].min()]['team'].tolist()[0]\nprint('Shortest Time to kill the first tower was {} minutes in the game between {} and {} and was killed by {}.'.format(\"%.2f\" %minftt,minfttteams[0],minfttteams[1],minfttteam))","c92d80f5":"print(\"Average time taken to kill the first tower is\",\"%.2f\" %teamdf['fttime'].mean(),\"minutes.\")","cb5e1c8f":"teamdf.groupby('team')['firstmidouter'].sum().nlargest(5)","91931921":"ftwr = teamdf.groupby(['team','firstmidouter'])['result'].sum()\nftwr = ftwr.reset_index()\nftwr.groupby('firstmidouter')['result'].sum()","c477f5b9":"90\/119","533fdc66":"teamdf.groupby('team')['firsttothreetowers'].sum().nlargest(5)","e182108b":"ftwr = teamdf.groupby(['team','firsttothreetowers'])['result'].sum()\nftwr = ftwr.reset_index()\nftwr.groupby('firsttothreetowers')['result'].sum()","292ebc6a":"96\/119","379be2d2":"teamdf.groupby('team')['teamtowerkills'].sum().nlargest(5)","c5e78d73":"teamdf.groupby('team')['fbaron'].sum().nlargest(5)","de714887":"ftwr = teamdf.groupby(['team','fbaron'])['result'].sum()\nftwr = ftwr.reset_index()\nftwr.groupby('fbaron')['result'].sum()","54146e34":"101\/119","524f07e3":"maxfb = teamdf['fbarontime'].max()\nmaxfbgameid = teamdf.loc[teamdf['fbarontime']==teamdf['fbarontime'].max()]['gameid'].tolist()[0]\nmaxfbteams = teamdf.loc[teamdf['gameid']==maxfbgameid]['team'].tolist()\nmaxfbteam = teamdf.loc[teamdf['fbarontime']==teamdf['fbarontime'].max()]['team'].tolist()[0]\nprint('Longest Time to kill the first Baron was {} minutes in the game between {} and {} and was killed by {}.'.format(\"%.2f\" %maxfb,maxfbteams[0],maxfbteams[1],maxfbteam))","9493a8d1":"minfb = teamdf['fbarontime'].min()\nminfbgameid = teamdf.loc[teamdf['fbarontime']==teamdf['fbarontime'].min()]['gameid'].tolist()[0]\nminfbteams = teamdf.loc[teamdf['gameid']==minfbgameid]['team'].tolist()\nminfbteam = teamdf.loc[teamdf['fbarontime']==teamdf['fbarontime'].min()]['team'].tolist()[1]\nprint('Shortest Time to kill the first baron was {} minutes in the game between {} and {} and was killed by {}.'.format(\"%.2f\" %minfb,minfbteams[0],minfbteams[1],minfbteam))","f7136d16":"teamdf.groupby('team')['teambaronkills'].sum().nlargest(5)","61b6c1f6":"teamdf.groupby('team')['dmgtochamps'].sum().nlargest(5)","dff25422":"teamdf.groupby('team')['dmgtochamps'].mean().nlargest(5)","59cef30b":"teamdf.groupby('team')['dmgtochamps'].max().nlargest(5)","517dce3b":"DamageteamGameID = teamdf.loc[teamdf['dmgtochamps']==teamdf['dmgtochamps'].max()]['gameid'].tolist()[0]\nteamdf.loc[teamdf['gameid']==DamageteamGameID]","4899ade5":"teamdf.groupby('gameid')['dmgtochamps'].sum().max()","9434a415":"playersdf.groupby('player')['dmgtochamps'].sum().nlargest(5)","770e58d1":"playersdf.groupby('player')['dmgtochamps'].mean().nlargest(5)","b1212acd":"playersdf.groupby(['player'])['dmgtochamps'].max().nlargest(5)","cfc7fc8f":"DamagePlayerGameID = playersdf.loc[playersdf['dmgtochamps']==playersdf['dmgtochamps'].max()]['gameid'].tolist()[0]\nplayersdf.loc[playersdf['gameid']==DamagePlayerGameID]","70691cfc":"teamdf.groupby('team')['dmgtochampsperminute'].mean().nlargest(5)","dc4478e4":"playersdf.groupby('player')['dmgtochampsperminute'].mean().nlargest(5)","13f41913":"playersdf.groupby('player')['dmgshare'].mean().nlargest(5)","144ce27c":"playersdf.groupby('player')['earnedgoldshare'].mean().nlargest(5)","ca50ee9d":"ds = []\nfor i in playersdf['dmgshare'].tolist():\n    try:\n      ds.append(float(i))\n    except:\n      ds.append(float(0)) \n","472f0640":"playersdf['damageshare'] = ds","2ec5efa7":"playersdf[['player','dmgshare','damageshare']].head()","62a2a81a":"gs = []\nfor i in playersdf['earnedgoldshare'].tolist():\n    try:\n      gs.append(float(i))\n    except:\n      gs.append(float(0)) \n","1e776ad2":"playersdf['goldshare'] = gs","35dc6d6f":"playersdf[['player','earnedgoldshare','goldshare']].head()","4a1423fa":"playersdf.groupby('player')['damageshare'].mean().nlargest(5)","2e2d4bfd":"playersdf.groupby('player')['goldshare'].mean().nlargest(5)","638312c6":"teamdf.groupby('team')['wards'].sum().nlargest(5)","9bc38249":"teamdf.groupby('team')['wards'].mean().nlargest(5)","f5b0a3e0":"playersdf.groupby('player')['wards'].sum().nlargest(5)","e67b8a46":"playersdf.groupby('player')['wards'].mean().nlargest(5)","55829616":"teamdf.groupby('team')['wpm'].mean().nlargest(5)","c713e113":"playersdf.groupby('player')['wpm'].mean().nlargest(5)","5484082c":"playersdf.groupby('player')['wardshare'].mean().nlargest(5)","4de238f6":"teamdf.groupby('team')['wardkills'].sum().nlargest(5)","efb58f90":"playersdf.groupby('player')['wardkills'].sum().nlargest(5)","1a542c2d":"teamdf.groupby('team')['wcpm'].mean().nlargest(5)","313c42e9":"teamdf.groupby('team')['visionwards'].sum().nlargest(5)","4225372e":"playersdf.groupby('player')['visionwards'].sum().nlargest(5)","0bb6d4ee":"teamdf.groupby('team')['totalgold'].sum().nlargest(5)","4b5e8830":"playersdf.groupby('player')['totalgold'].sum().nlargest(5)","8e37d8d7":"teamdf.groupby('team')['totalgold'].mean().nlargest(5)","8d193caa":"playersdf.groupby('player')['totalgold'].mean().nlargest(5)","9e0cbb7d":"teamdf.groupby('team')['earnedgpm'].mean().nlargest(5)","4a16fe72":"playersdf.groupby('player')['earnedgpm'].mean().nlargest(5)","c688828e":"teamdf.groupby('team')['minionkills'].sum().nlargest(5)","a82de58a":"playersdf.groupby('player')['minionkills'].sum().nlargest(5)","e907d3f0":"playersdf.groupby('player')['monsterkills'].sum().nlargest(5)","261945c8":"teamdf.groupby('team')['cspm'].mean().nlargest(5)","e14e6a63":"playersdf.groupby('player')['cspm'].mean().nlargest(5)","86fd95cb":"teamdf.groupby('team')['csdat10'].mean().nlargest(5)","d5929c8b":"playersdf.groupby('player')['csdat10'].mean().nlargest(5)","2a00bc05":"teamdf.groupby('team')['gdat15'].mean().nlargest(5)","41d8097f":"playersdf.groupby(['player'])['gdat15'].mean().nlargest(5)","d7c07b1e":"teamdf.groupby('team')['xpdat10'].mean().nlargest(5)","dfe51bfb":"playersdf.groupby('player')['xpdat10'].mean().nlargest(5)","75b287b9":"Baron wasn't killed in only 4 games of the tournment","1c011f36":"Most first three towers killed by a team is 12 times by Damwongaming, Funplus Phoenix and Splyce followed by G2 Esports with 11 times","1513aa6d":"Now let's see the most picked champions","45d12ca5":"Now Let's explore Wards ","bed575bf":"Highest average XP difference for a team is 388.35 by SK Telecom T1 followed by Griffin with 378.36","3423493d":"Most Dragon Killed by a team in a single game is 6 by Clutch Gaming gainst Royal Youth and by J team against Splyce and by Damwon Gaming against G2 Esports","f94f9e06":"Max Average Gold earned by a player per game is 17411 by Yutapon followed by 17312.5 by Warangelus","d5c6145b":"Max amount of minion killed by a team is 18106 by Splyce followed by Damwon Gaming by 15660","41391259":"Max Average Gold earned by a team per game is 68171.75 by DetonatioN FocusMe followed by 67807.5 by Isurus Gaming","64e425a0":"Now Let's see How many double\/triple\/quadra\/penta kills happend ","a45812e5":"Funplus Phoenix is the deadliest team with 335 kills followed by Splyce with 298 kills","79c4c7a4":"133 Mountain Drakes were killed in the tournment\n\nDamown Gaming has the most mountain drake kills with 19 followed by SK Telecom T1 with 14 Kills","eb6e21fb":"Highest number of dragons killed in a single game is 8 dragons in two games\n\ngame between Isurus Gaming and DetonatioN FocusMe\n\ngame between Clutch Gaming and Fnatic","2697201c":"Highest average Creep Score per minute for a player is 11.12 by Uzi followed by MnM with 10.97","8958386f":"Most First Tower by a team is 13 times by Funplus Phoenix followed by 12 times by SK Telecom T1\n","fff9e998":"Let's find which matches had the max and min length ","174950ad":"Now for players","98cbc9d5":"The Highest Average Wards Per Minutes is 4.4 WPM by Sk Telecom T1 followed by 4.35 by Royal Never Give Up","27e84f46":"Highest Number of Heralds for a team 13 Heralds for Damwon Gaming and Funplus Phoenix","5ca6f223":"Let's see how many attributes we can make analysis on","4338aff8":"Now let's explore the top picked champions in every rule","4c96d839":"144 Cloud Drakes were killed in the tournment\n\nFunplus Phoenix has the most Cloud Drake kills with 14 followed by Damown Gaming with 13 kills","861482f5":"Highest average CS difference at 10 by a player is 15.5 by Rockky followed by Zeyzal with 13.66","ea86def2":"Kai'Sa was the most picked champion in the tournment, 71 out of 119 matches. Lee Sin came in second with 57 picks.","b74d74bc":"The Highest Average Wards Per Minutes is 1.9 by Ming followed by 1.84 by Koala","5ddfdc38":"Most Damage dealt by a player in a single game was 66398 by Sneaky on Heimerdinger in the game between Cloud9 and Hong Kong Attitude","f0bcf60c":"Highest number of rules by a champion is 3 rules.\n\nEzreal (ADC,Middle,Top)\n\nIrelia (ADC,Middle,Top)\n\nKarma (Support,Middle,Top)\n\nKayle (ADC,Middle,Top)\n\nLucian (ADC,Middle,Top)\n\nPoppy (Support,Middle,Top)\n\nPyke (Support,Middle,Top)\n\nQiyana (Jungle,Middle,Top)\n\nTristana (ADC,Middle,Top)\n\nVladimir (ADC,Middle,Top)\n\nYasuo (ADC,Middle,Top)","c233c7a4":"The Highest average damage share of the team for a player is 37.2% for Uzi from Royals Never Give Up followed by 32% for Buggax from Isurus Gaming.","61a485a3":"Most Mid Tower first Kill by a team is 13 times by Splyce and Damwon Gaming followed by 11 times by Funplus Phoenix","58547526":"The team who kill the first baron wins 85% of the time","9170bb17":"Yup he played top that match against flamingo","022e69de":"Put the data set into a dataframe ","10eeface":"The Highest Amount of wards for the tournment is 1038 by Norskeren followed by 1010 by Mikyx","784297aa":"The fastest Herald killd was after 10.39 minutes by Hong Kong Attitude against Griffin","49abe195":"Now Let's Explore Barons","a9ccc350":"Now let's do the same with the first three towers","a179cae3":"The Highest average amount of wards per game by a player is 69.25 wards by Slow followed by 66.5 by Ming","9db25134":"Blue side won 62 matches which is 52% of the matches","a748418d":"This notebook is made to practice my data scince skills on a data set from a field that I enjoy so much, esports in general but specificaly my favorite tournment from my favorite game League of Legends World Championship. ","cfd29a35":"Pantheon was the most banned champion in the tournment, 118 out of 119 matches.\nQiyana came in second with 86 bans.","b033563b":"Elders was killed 29 times in the tournment\n\nTeams with highed Elder kills are Fnatic, Unicorns of Love and Isurus Gaming with 3 Elder kills","31f14ec3":"The team who kill the first tower wins 70% of the time","18bf3b95":"Let's start with individual games for teams","0567265d":"Max Amount of gold earned by a player is 318058 by Kobbe followed by 285079 by Humanoid","d03a28bf":"Max amount of Monsters killed by a jungler is 2401 by Canyon followed by Xerxe with 2362","f933ab0f":"Now which team has the most deaths?","9938b4c7":"530 Dragons were killed in the tournment","16ca97df":"Did niguri and showmaker switch sides this game? i will check the vods on youtube","ad07a0e7":"Maximum Match Time is 63.41 Minutes\n\nAverage Match Time is 33.29 Minutes\n\nMinimum Match Time is 22.71 Minutes","3f379bd2":"Highest average XP difference for a player is 454.6 by Shrimp followed by Rockky with 303.25","31f2f578":"Highest average Gold difference at 15 minutes by a player is 909.33 by Blabler","0292c9fc":"Max Amount of gold earned by a team that didn't play in the play-in stage is 1088766 by Funplus Phoenix followed by 1064673 by G2 Esports","7ae12e11":"He is registered as top, Let's check which game","4dbe2702":"Now let's see which team has most kills and deaths in a game","a60f1627":"Highest average Gold Per Minute by a team is 1290.16 by Funplus Phoenix followed by 1274.21 by Damwon Gaming","88d6ee42":"Now let's explore which side Blue or Red has the most wins","cfcff931":"Highest average damage dealt per minute by a player is 614.77 by Sneaky followed by TheShy with 590.67 damage dealt per minute","9a8a662f":"Let's explore the mid tower same as we did with the first tower\n","2c58f556":"Which team is the deadliest(most kills)?","7328ab4e":"Now let's split the players data frame to explore each rule seperately ","e4ea7c3d":"Highest average CS difference at 10 by a team is 19.92 by Invictus Gaming followed by Clutch Gaming with 14.61","5fd09374":"# League of Legends World Championship 2019","8f81ed37":"Max Amount of gold earned by a team is 1257971 by Splyce followed by 1114693 by Damwon Gaming","dbad336b":"let's check all the players in this game","a158fac5":"Highest Share of team\u2019s total wards placed (of all types) is 49.15% by Destingy followed by 48.47% by Baolan","9065ae1f":"The Highest average gold share of the team for a player is 30.8% for K1ng from MAMMOTH followed by 30.3% for Uzi from Royals Never Give Up.","4644c774":"Now let's get the averages","13097a85":"Highest average number of cleared wards per minutes is 2 by Royal Never Give Up followed by 1.77 for Griffin","a5daa76a":"The Team who killed baron the most is Splyce 19 times followed by Funplus Phoenix with 18 times","089dd4f9":"Cloud Drakes were the most killed 144 times followed by mountain drakes with 133 times\n","c4eeea4c":"ShowMaker is TOP ??? hmmm","5450daf9":"Max amount of minion killed by a player is 6147 by kobbe followed by Humanoid by 5591","0be33876":"Most Damage dealt by a team over the tournment length is 1226722 by Splyce followed by 1098078 by Funplus Phoenix","ffc285ca":"Let's explore Champions for a change ","d2323104":"Highest average Gold Difference at 15 minutes by a team is 1762.66 by Funplus Phoenix followed by Griffin with 1189.09","3e6ad35e":"Splyce has the most Elemental Drake kills with 20 Elemental Drakes followed by Damwon Gaming, Funplus Phoenix and G2 Esports with 18 Elemental Drakes.","d0ffe21a":"First for teams","489ac6c7":"Now let's see how many games were played","68731155":"The Highest Damage Dealth in a single game from both teams is 312814 in the game between Isurus Gaming and DetonatioN FocusMe","508c04a0":"Max amount of Monsters killed by a jungler that didn't play in the play-in stage is 2309 by Tian followed by Jankos with 2209","87ca3efb":"Now Let's Explore Kills per minute for teams and players for individual games then the average of all games","0b3c5cbb":"Most Killed Towers by a team is 143 towers by Damwon Gaming followed by Funplus Phoenix with 140 towers","0b61f881":"Highest average Creep Score per minute for a team is 33.96 by GAM Esports followed by Damwon Gaming with 33.77","c51cd60c":"Bans are seperated as 5 bans so I have to melt them into one ban column.","a9359bc5":"Highest number of vision\/control wards by a team is 862 by Splyce followed by 815 by Damwon Gaming","e08c0481":"129 Ocean Drakes were killed in the tournment\n\nDamown Gaming and Funplus Phoenix have the most water drake kills with 13 followed by Clutch Gaming with 12 ","517ae180":"Highest number of wards killed by a player is 329 by Jankos followed by 302 by Norskeren","a7e75404":"Max amount of minion killed by a team that didn't play in the play-in stage is 15456 by G2 Esports followed by Funplus Phoenix with 14258","aba1f0e6":"The Highest amount of wards through the tournment by a team is 2494 wards by Splyce followed by 2372 by G2 Esports","1841954b":"Damwon Gaming has the most dragon kills with 57 dragons followed by Funplus Phoenix\twith 52 dragons. ","481ba35e":"Now for the lowest KDA for all rules","51e9e295":"The Highest Average Damage dealt per game by a player is 25142.6 by Sneaky followed by Ceros with 23296.75","40f65d9d":"Now let's explore the periods of the matches","05a42268":"Highest number of wards killed by a team is 1116 by Splyce followed by 1041 by G2 Esports","0ff8a9c0":"Top 5 champions with the highest win rate","79f56bfa":"Lowest Number of Heralds for a team is 1 Heralds for Team Liquid","bc3f76c8":"Now let's see Max\/Min Kills\/Deaths for all then for each rule","681895c9":"Lowest Number of Dragon kills is 6 by Flamengo and AHQ e-sports Club","447ce59c":"The team who kill 3 towers first wins 81% of the time","64ad9d64":"Splyce is the most killed team with 265 deaths followed by G2 Esports with 259 deaths","63425ef2":"Now let's explore the First Blood ","185e05f3":"Most Flixable Champions","90308ecd":"Now Let's find Max\/Min First Blood time","047f314f":"As you can see teams and players both are in the same dataframe so I will seperate them to make our mission easier\n\nLet's start with teams","2bae0961":"Now as the matched I will start with bans lets see the top 5 banned champions","a0745ac6":"Now let's see what is the most banned champions","b3501bb5":"apparently dmgshare and earnedgoldshare columns are object type and have some bad values and can't be transformed to numerical values, let's try to solve this","d130183f":"Slowest Team to get Herald is Detonation FocusMe in 15.77 minutes","212f429d":"Max amount of minion killed by a player who didn't play in the play-in stage is 5200 by Perkz followed by Lwx with 4925","4b23697a":"Now Let's Explore The Damage dealt to champions","0a4b1cb2":"The Highest average amount of wards per game by a team is 161.5 wards by DetonatioN FocusMe followed by 151 by Royal Never Give Up","cb6628eb":"Ok now everything is good, let's continue","5e71e6e4":"Highest average Gold Per Minute by a player is 366.46 by Uzi followed by 351.22 by Lwx","db480662":"Now let's get the stats on match times","c8c11736":"The Highest Damage dealt by a player in the tournment without playing in the play-in stage is 282318 by Doinb ","dbd9e75f":"The team who kill the Mid tower first wins 76% of the time","1aff9a02":"Highest number of vision\/control wards by a player is 345 by Mikyx followed by 327 by BeryL","2f620611":"Now let's explore the dragons","4d105ec9":"Least Killed Towers by a team is 13 towers by AHQ e-Sports Club","91300258":"Fastest Team to get Herald is Royal Youth in 11.19 minutes","7cab1d77":"Now with individual games for players","a093ac5b":"Now Let's Explore the KDA of the players","6ad68621":"The Highest Damage Dealt by a team in a single game is 176971 by Isurus Gaming against DetonatioN FocusMe","cdc2f650":"Top 5 champions with the most wins","bd553eb9":"Max Amount of gold earned by a player that didn't play in the play-in stage is 271084 by Lwx followed by 269484 by Perkz","a8e900a1":"Import the needed libraries","a55b7bb7":"The Highest Damage dealt by a player in the tournment is 336503 by Humanoid followed by 308664 by Kobbe","c86ae5e4":"Now let's explore the damage for players","a29a12fe":"125 Inferno Drakes were killed in tournment\n\nSplyce has the most Inferno drake kills with 13 followed by Funplus Phoenix and Griffin with 11","03bbea80":"Highest Average Damage per Minute Teams is Invictus Gaming with 2015.19 damage per minute dealt followed by Griffin with 2005.95","75537a52":"Most first baron kills by a team is 13 times by Damwon Gaming and Funplus Phoenix followed by Splyce with 12 times.","b11bd44f":"Highest Average Damage dealt by a team is 79021.75 by team DetonatioN FocusMe followed by Isurus Gaming with 72031.75"}}