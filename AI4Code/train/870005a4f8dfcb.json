{"cell_type":{"649788b4":"code","53097aa0":"code","38f10808":"code","626b64d0":"code","1dd529fc":"code","645d9f6d":"code","5aeff228":"code","a7e83b11":"code","631079e4":"code","305a2a70":"code","f12be34f":"code","01d1ade2":"code","36d7f748":"code","3f95e4ba":"code","c10dc2ab":"code","355414d2":"code","459b07fc":"code","c3915564":"markdown","1dd0e8cb":"markdown","097de13b":"markdown","b74da358":"markdown","7a3ca634":"markdown","e152204b":"markdown","87db08a6":"markdown","9bd95370":"markdown","6e705831":"markdown"},"source":{"649788b4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","53097aa0":"import warnings\nwarnings.filterwarnings('ignore')","38f10808":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.ensemble import IsolationForest","626b64d0":"df = pd.read_excel(\"\/kaggle\/input\/wholesale-superstore-dataset\/Sample - Superstore.xls\")\ndf.head()","1dd529fc":"df['Sales'].describe()","645d9f6d":"plt.scatter(range(df.shape[0]), np.sort(df['Sales'].values))\nplt.xlabel('index')\nplt.ylabel('Sales')\nplt.title(\"Sales distribution\")\nsns.despine()","5aeff228":"sns.distplot(df['Sales'])\nplt.title(\"Distribution of Sales\")\nsns.despine()","a7e83b11":"print(\"Skewness: %f\" % df['Sales'].skew())\nprint(\"Kurtosis: %f\" % df['Sales'].kurt())","631079e4":"df['Profit'].describe()","305a2a70":"plt.scatter(range(df.shape[0]), np.sort(df['Profit'].values))\nplt.xlabel('index')\nplt.ylabel('Profit')\nplt.title(\"Profit distribution\")\nsns.despine()","f12be34f":"sns.distplot(df['Profit'])\nplt.title(\"Distribution of Profit\")\nsns.despine()","01d1ade2":"print(\"Skewness: %f\" % df['Profit'].skew())\nprint(\"Kurtosis: %f\" % df['Profit'].kurt())","36d7f748":"isolation_forest = IsolationForest(n_estimators=100)\nisolation_forest.fit(df['Sales'].values.reshape(-1, 1))\n\nxx = np.linspace(df['Sales'].min(), df['Sales'].max(), len(df)).reshape(-1,1)\nanomaly_score = isolation_forest.decision_function(xx)\noutlier = isolation_forest.predict(xx)\n\nplt.figure(figsize=(10,4))\nplt.plot(xx, anomaly_score, label='anomaly score')\nplt.fill_between(xx.T[0], np.min(anomaly_score), np.max(anomaly_score), \n                 where=outlier==-1, color='r', \n                 alpha=.4, label='outlier region')\nplt.legend()\nplt.ylabel('anomaly score')\nplt.xlabel('Sales')\nplt.show();","3f95e4ba":"df.iloc[10]","c10dc2ab":"isolation_forest = IsolationForest(n_estimators=100)\nisolation_forest.fit(df['Profit'].values.reshape(-1, 1))\n\nxx = np.linspace(df['Profit'].min(), df['Profit'].max(), len(df)).reshape(-1,1)\nanomaly_score = isolation_forest.decision_function(xx)\noutlier = isolation_forest.predict(xx)\n\nplt.figure(figsize=(10,4))\nplt.plot(xx, anomaly_score, label='anomaly score')\nplt.fill_between(xx.T[0], np.min(anomaly_score), np.max(anomaly_score), \n                 where=outlier==-1, color='r', \n                 alpha=.4, label='outlier region')\nplt.legend()\nplt.ylabel('anomaly score')\nplt.xlabel('Profit')\nplt.show();","355414d2":"df.iloc[3]","459b07fc":"df.iloc[1]","c3915564":"**Univariate Anomaly Detection on Profit**\n\nIt seems that Profit that below -100 or exceeds 100 would be considered as an outlier, as follow.","1dd0e8cb":"**Visually investigate some of the anomalies**\n\nAccording to the above results and visualization, It seems that Profit that below -100 or exceeds 100 would be considered as an outlier, let\u2019s visually examine one example each that determined by our model and to see whether they make sense.\n\nThe model determined that the second order with a large profit is an anomaly. However, it could be just a product that has a relatively high margin. While the previous one with negative profit, of course, is worth to be investigated.","097de13b":"**Visually investigate one anomaly**\n\nThe following looks like a normal one dispite the large amount of sales.","b74da358":"**Reference:**\n* [Anomaly Detection for Dummies](https:\/\/towardsdatascience.com\/anomaly-detection-for-dummies-15f148e559c1)\n* [Novelty and Outlier Detection](https:\/\/scikit-learn.org\/stable\/modules\/outlier_detection.html)","7a3ca634":"**Univariate Anomaly Detection on Sales**\n\nAs per the following graph, it seems that Sales that exceeds 1000 would be considered as an outlier.","e152204b":"**Distribution of the Profit**\n\nProfit, on the other hand, has both a positive tail and a negative one. Still the positive tail is longer than the negative tail, therefore the distribution is positive skewed, and the data are heavy-tailed or profusion of outliers.\n\nWhat that means is that we have two regions where the data has low probability to appear: on the *right side* or the *left side* of the distribution.","87db08a6":"Well, looks like it is more complex that it seems to be. So we need a more robust method to deal with it.","9bd95370":"**Distribution of the Sales**\n\nWhat we observer for sales is a positive long thin tail with a great mass of the distribution concentrated on the left.","6e705831":"**The Isolation Forest Algorithm**\n\nIsolation Forest is an algorithm to detect outliers that returns the anomaly score of each sample, which is based on the fact that anomalies are data points that are few in occurence and different of the absolute mojority. As per scikit-learn documentation:\n\n> The IsolationForest \u2018isolates\u2019 observations by randomly selecting a feature and then randomly selecting a split value between the maximum and minimum values of the selected feature.\n\n[Novelty and Outlier Detection :: Isolation Forest](https:\/\/scikit-learn.org\/stable\/modules\/outlier_detection.html#isolation-forest)"}}