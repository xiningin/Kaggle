{"cell_type":{"a8751a5e":"code","74fc4096":"code","f38d0bd8":"code","a9524a2a":"code","678d03f6":"code","51009747":"code","8ad60eb1":"code","b3953fee":"code","8243cb60":"code","f3f5257c":"code","379d3191":"code","09b51dff":"code","767d29b1":"code","7a16e6cf":"code","d1d59752":"code","58fa9b12":"code","0c514190":"code","86ffc44f":"code","e69f8500":"code","6b558cb5":"code","6506f6e3":"code","b0b9d977":"code","b10bace3":"code","276d029b":"code","b6fbc8a8":"code","b13aa242":"code","2c630f65":"markdown"},"source":{"a8751a5e":"import numpy as np # linear algebra\nimport pandas as pd # data processing\nimport matplotlib.pyplot as plt # to plot inage, graph\nimport time","74fc4096":"%matplotlib inline","f38d0bd8":"# dataset for digit (0-9)\nfrom sklearn.datasets import load_digits","a9524a2a":"# load dataset\ndigits = load_digits()","678d03f6":"digits.keys()","51009747":"# dataset description\ndigits.DESCR","8ad60eb1":"# already processed images\ndigits.images[0]","b3953fee":"# predictors,independent variables, features\ndigits.data","8243cb60":"# target variable, class, dependent variable\ndigits.target","f3f5257c":"# There 1797 images (8 by 8 for a dimension of 64)\nprint('Image Data Shape', digits.images.shape)","379d3191":"# 1797 labels\nprint('Label Data Shape', digits.target.shape)","09b51dff":"X = digits.images","767d29b1":"plt.figure(figsize=(20,10))\ncolumns = 5\nfor i in range(5):\n    plt.subplot(5 \/ columns + 1, columns, i + 1)\n    plt.imshow(X[i],cmap=plt.cm.gray_r,interpolation='nearest')","7a16e6cf":"from sklearn.metrics import accuracy_score,confusion_matrix # metrics error\nfrom sklearn.model_selection import train_test_split # resampling method","d1d59752":"X = digits.data\ny = digits.target","58fa9b12":"# since its a multi-class prediction, in order to prevent error we need some library\nfrom sklearn.multiclass import OneVsRestClassifier","0c514190":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)","86ffc44f":"from sklearn.neighbors import KNeighborsClassifier","e69f8500":"knn = OneVsRestClassifier(KNeighborsClassifier())","6b558cb5":"knn.fit(X_train,y_train)","6506f6e3":"# predict for one observation\nknn.predict(X_test[0].reshape(1,-1))","b0b9d977":"# predict for multiple observation (images) at once\nknn.predict(X_test[0:10])","b10bace3":"# make prediction on entire test data\npredictions = knn.predict(X_test)","276d029b":"%time\n# 98%\nprint('KNN Accuracy: %.3f' % accuracy_score(y_test,predictions))","b6fbc8a8":"# to create nice confusion metrics\nimport seaborn as sns","b13aa242":"cm = confusion_matrix(y_test,predictions)\nplt.figure(figsize=(9,9))\nsns.heatmap(cm,annot=True, fmt='.3f', linewidths=.5, square=True,cmap='Blues_r')\nplt.ylabel('Actual label')\nplt.xlabel('Predicted label')\nall_sample_title = 'Accuracy Score: {0}'.format(accuracy_score(y_test,predictions))\nplt.title(all_sample_title,size=15)","2c630f65":"# KNN accuracy is 98%"}}