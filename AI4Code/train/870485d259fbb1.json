{"cell_type":{"01fe7b2d":"code","74323e08":"code","729eb208":"code","a747cd9d":"code","c8608a87":"code","6ead1977":"code","fc59b8ea":"code","cad1ed70":"code","d6417ad2":"code","360f2fc0":"code","4f29c3a0":"code","b2973b84":"code","5101f5b1":"code","737fbb16":"code","340bb240":"code","a4588102":"code","7c68ec5f":"code","ae75e6a3":"code","b7772e30":"code","e932a270":"code","90dad250":"code","fe7f5c8d":"code","14655fab":"code","452dde6d":"code","572806b4":"markdown","bad224c9":"markdown","29c6296a":"markdown","897d197c":"markdown"},"source":{"01fe7b2d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(rc={'figure.figsize':(11.7,8.27)})","74323e08":"from sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score","729eb208":"df = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')","a747cd9d":"df = df.drop(['Id'], axis=1)\n","c8608a87":"df.head(2)","6ead1977":"plt.scatter(df['SepalLengthCm'], df['SepalWidthCm'], cmap = df['Species'])","fc59b8ea":"sns.scatterplot(x = 'SepalLengthCm', y = 'SepalWidthCm', data = df, hue = 'Species')","cad1ed70":"df['Species'].value_counts()","d6417ad2":"df_setosa = df[df['Species']=='Iris-setosa']\ndf_versicolor = df[df['Species']=='Iris-versicolor']\ndf_virginica = df[df['Species']=='Iris-virginica']","360f2fc0":"plt.plot(df_setosa['SepalLengthCm'], np.zeros_like(df_setosa['SepalLengthCm']),'o')\nplt.plot(df_versicolor['SepalLengthCm'], np.zeros_like(df_versicolor['SepalLengthCm']), 'o')\nplt.plot(df_virginica['SepalLengthCm'], np.zeros_like(df_virginica['SepalLengthCm']),'o')\nplt.xlabel('Sepal Length')\nplt.show()","4f29c3a0":"plt.plot(df_setosa['PetalLengthCm'], np.zeros_like(df_setosa['PetalLengthCm']), 'o')\nplt.plot(df_versicolor['PetalLengthCm'], np.zeros_like(df_versicolor['PetalLengthCm']), 'o')\nplt.plot(df_virginica['PetalLengthCm'], np.zeros_like(df_virginica['PetalLengthCm']), 'o')\nplt.xlabel('Petal Length')\nplt.show()","b2973b84":"plt.plot(df_setosa['SepalWidthCm'], np.zeros_like(df_setosa['SepalWidthCm']),'o')\nplt.plot(df_versicolor['SepalWidthCm'], np.zeros_like(df_versicolor['SepalWidthCm']), 'o')\nplt.plot(df_virginica['SepalWidthCm'], np.zeros_like(df_virginica['SepalWidthCm']),'o')\nplt.xlabel('Sepal Width')\nplt.show()","5101f5b1":"plt.plot(df_setosa['PetalWidthCm'], np.zeros_like(df_setosa['PetalWidthCm']),'o')\nplt.plot(df_versicolor['PetalWidthCm'], np.zeros_like(df_versicolor['PetalWidthCm']), 'o')\nplt.plot(df_virginica['PetalWidthCm'], np.zeros_like(df_virginica['PetalWidthCm']),'o')\nplt.xlabel('Petal Width')\nplt.show()","737fbb16":"sns.FacetGrid(df, hue='Species', height=4, aspect=1.5).map(plt.scatter, 'SepalLengthCm', 'PetalWidthCm').add_legend()\nplt.show()","340bb240":"sns.pairplot(df, hue= 'Species', height=3)","a4588102":"df['Species'].value_counts()","7c68ec5f":"df['Species'] = df['Species'].map({'Iris-setosa':0, 'Iris-versicolor': 1, 'Iris-virginica':2})","ae75e6a3":"X = df.iloc[:, 0:4]\ny = df.iloc[:, 4]","b7772e30":"X_train, X_test, y_train, y_test = train_test_split(X, y , test_size = 0.10, random_state = 34)","e932a270":"lr = LinearRegression()\nlr.fit(X_train,y_train)","90dad250":"lr.score(X_train, y_train)","fe7f5c8d":"predictions = lr.predict(X_test)","14655fab":"#To get r2 score directly from X_test\nlr.score(X_test, y_test)","452dde6d":"#To get r2 score from predited values\nr2_score(predictions, y_test)","572806b4":"**Bivariate Correlation**","bad224c9":"**Multiple Linear Regression**","29c6296a":"#Univariate Analysis","897d197c":"**Multivariate Correlation**"}}