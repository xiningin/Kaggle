{"cell_type":{"339bcdf2":"code","577bcb77":"code","7311e271":"code","78b8e316":"code","02cc0476":"code","afe91b98":"code","4bffcccb":"code","9833b466":"code","6fd2ba38":"code","9ccebe9d":"code","31da3181":"code","24b5d432":"code","f1e00ac5":"code","3f15f3c1":"code","b4c9fde8":"code","aaa58bb9":"code","33d85cfd":"code","f99ea3fd":"code","e86731f4":"code","0d5a706b":"code","0ccac162":"code","b628fb4e":"markdown","09344bf9":"markdown","6e8b2cac":"markdown"},"source":{"339bcdf2":"import cv2\nfrom pylab import rcParams\nimport matplotlib.pyplot as plt\nrcParams['figure.figsize'] =40,50\n\nimg = cv2.imread(\"..\/input\/result-table\/result table.PNG\")\nplt.imshow(img)","577bcb77":"rcParams['figure.figsize'] = 20,20\nimg = cv2.imread(\"..\/input\/result-pics\/RESULTS\/1.png\")\nplt.imshow(img)","7311e271":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/2.png\")\nplt.imshow(img)","78b8e316":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/3.png\")\nplt.imshow(img)","02cc0476":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/4.png\")\nplt.imshow(img)","afe91b98":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/5.png\")\nplt.imshow(img)","4bffcccb":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/6.png\")\nplt.imshow(img)","9833b466":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/7.png\")\nplt.imshow(img)","6fd2ba38":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/8.png\")\nplt.imshow(img)","9ccebe9d":"rcParams['figure.figsize'] =10,10\nimg = cv2.imread(\"..\/input\/result-pics\/RESULTS\/9.png\")\nplt.imshow(img)","31da3181":"rcParams['figure.figsize'] =20,20\nimg = cv2.imread(\"..\/input\/result-pics\/RESULTS\/10.png\")\nplt.imshow(img)","24b5d432":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/11.png\")\nplt.imshow(img)","f1e00ac5":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/12.png\")\nplt.imshow(img)","3f15f3c1":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/13.png\")\nplt.imshow(img)","b4c9fde8":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/14.png\")\nplt.imshow(img)","aaa58bb9":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/15.png\")\nplt.imshow(img)","33d85cfd":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/16.png\")\nplt.imshow(img)","f99ea3fd":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/17.png\")\nplt.imshow(img)","e86731f4":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/18.png\")\nplt.imshow(img)","0d5a706b":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/19.png\")\nplt.imshow(img)","0ccac162":"img = cv2.imread(\"..\/input\/result-pics\/RESULTS\/20.png\")\nplt.imshow(img)","b628fb4e":"### The following project has been prepared using colab (used for extra RAM and GPU time) and kaggle, so the entire project is published on GitHub. \n\n# Link: [GitHub Link for the kernels on One-Stop-for-COVID-19-Infection-and-Lung-Segmentation-plus-Classification](https:\/\/github.com\/deadskull7\/One-Stop-for-COVID-19-Infection-and-Lung-Segmentation-plus-Classification)\n","09344bf9":"### Following is the glimpse of some results in form of pics (some have colour distortion, for clarity visit above link)\n### Please upvote \u25b2 here and give a \u2605 on GitHub if you like :) ","6e8b2cac":"### Please upvote \u25b2 here and give a \u2605 on GitHub if you like :) "}}