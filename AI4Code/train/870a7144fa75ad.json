{"cell_type":{"b7dccba2":"code","c7032a23":"code","c4b85eb2":"code","cb3d8663":"code","65b3bbd4":"code","ee9caabc":"code","d5bef12b":"code","39be11aa":"code","3618af0a":"code","d98e2eb4":"code","614ea54c":"code","89532ae9":"code","3d34157b":"code","1bd9a56b":"code","924d3cf3":"code","7d739742":"code","e3ccc8a2":"code","7263b3fe":"markdown","19851e9a":"markdown","963fe28a":"markdown","8232b8e0":"markdown"},"source":{"b7dccba2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c7032a23":"df=pd.read_csv('\/kaggle\/input\/spam-text-message-classification\/SPAM text message 20170820 - Data.csv')","c4b85eb2":"df.head()","cb3d8663":"import re\nimport nltk \nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\nfrom nltk.stem import WordNetLemmatizer\n","65b3bbd4":"ps=PorterStemmer()\nwordnet=WordNetLemmatizer()\n","ee9caabc":"collect = []\nfor i in range(0, len(df)):\n    values = re.sub('[^a-zA-Z]', ' ', df['Message'][i])\n    values = values.lower()\n    values = values.split()\n    values = [wordnet.lemmatize(word) for word in values if not word in stopwords.words('english')]\n    values = ' '.join(values)\n    collect.append(values)\n    ","d5bef12b":"df['Category'].replace({'ham':1,'spam':0},inplace=True)","39be11aa":"df['Category']","3618af0a":"y=df['Category']\ny","d98e2eb4":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.20,random_state=0)","614ea54c":"from sklearn.svm import SVC\nmodel=SVC()\nmodel","89532ae9":"model.fit(X_train,y_train)","3d34157b":"from sklearn.feature_extraction.text import CountVectorizer\ncs=CountVectorizer(max_features=1000)\nX=cs.fit_transform(collect).toarray()","1bd9a56b":"X","924d3cf3":"y_pred=model.predict(X_test)\ny_pred","7d739742":"from sklearn.metrics import accuracy_score,confusion_matrix\nprint(accuracy_score(y_test,y_pred))","e3ccc8a2":"print(confusion_matrix(y_test,y_pred))","7263b3fe":"**Bag of words**","19851e9a":"******Convert deopendant feature ham and spam into dummies**","963fe28a":"**Text cleaning**","8232b8e0":"**Apply train_test_split**"}}