{"cell_type":{"925d1993":"code","a41c7286":"code","c230c8be":"code","81aca1ab":"code","61efd752":"code","f4e5bca1":"code","188197ae":"code","37d5290b":"code","3aa30cf7":"code","449bded5":"code","9a3f3ec7":"code","3fca26ec":"code","1ae76261":"code","5000e6a4":"code","47a24dd2":"code","d19794f0":"code","ea7d9357":"code","10d79a09":"code","940e4b5f":"code","5fee00e6":"code","aaa554fc":"code","f8cdb90f":"code","6680aca7":"code","50775ab2":"code","9db75227":"code","1a7d1b89":"code","d68c0ec1":"code","c5629eb7":"code","4d93badc":"code","5af03583":"code","979f33c3":"code","2a1594dd":"code","54e63574":"code","af5cd54e":"code","bce14d97":"code","f233a9a1":"code","4bc3cc97":"code","0eb4510c":"code","b57a7f0c":"code","ac047bfd":"code","952ef00c":"code","0f93dec5":"code","83b7674c":"code","0893023f":"code","df30cdfa":"code","115a83a8":"code","9352e8fe":"code","35576b8f":"markdown"},"source":{"925d1993":"# Importing Dependencies\n\nimport numpy as np\nimport pandas as pd","a41c7286":"# Data Collection and Preprocessing\n\ncredits = pd.read_csv(\"..\/input\/tmdb-movie-metadata\/tmdb_5000_credits.csv\")\nmovie = pd.read_csv(\"..\/input\/tmdb-movie-metadata\/tmdb_5000_movies.csv\")\n\nmovie.head()","c230c8be":"credits.head()","81aca1ab":"movie= movie.merge(credits, on = 'title')","61efd752":"movie.head()","f4e5bca1":"movie['original_language'].value_counts() # will drop original language as highly imbalanced","188197ae":"# making a new dataframe with some coloumns to make tags\n\nmovie = movie[['id', 'keywords', 'genres', 'overview', 'title', 'cast', 'crew']]\n\nmovie.head()","37d5290b":"# no. of missing data\n\nmovie.isnull().sum()","3aa30cf7":"movie.dropna(inplace= True)","449bded5":"movie.duplicated().sum()","9a3f3ec7":"movie.iloc[0].genres # change the format like [Action, Adventure,...]","3fca26ec":"import ast","1ae76261":"def convert (obj):\n    l=[]\n    for i in ast.literal_eval(obj):\n        l.append(i['name'])\n    return l\n","5000e6a4":"movie[\"genres\"] = movie[\"genres\"].apply(convert)","47a24dd2":"movie['keywords'] = movie['keywords'].apply(convert)","d19794f0":"movie.head()","ea7d9357":"def convert2 (obj):\n    l=[]\n    counter = 0\n    for i in ast.literal_eval(obj):\n        if (counter != 3):\n            l.append(i['name'])\n            counter+= 1\n        else:\n            break\n    return l","10d79a09":"movie['cast'] = movie['cast'].apply(convert2)","940e4b5f":"movie.head()","5fee00e6":"movie.iloc[0].crew","aaa554fc":"def convert3 (obj):\n    l=[]\n    for i in ast.literal_eval(obj):\n        if i['job'] == 'Director':\n            l.append(i['name'])\n            break\n    return l","f8cdb90f":"movie['crew'] = movie['crew'].apply(convert3)","6680aca7":"movie.head()","50775ab2":"movie['overview']= movie['overview'].apply(lambda x:x.split())","9db75227":"movie.head()","1a7d1b89":"# remove the space between the words(names) by applying transformation\n\nmovie['genres']= movie['genres']. apply(lambda x:[i.replace(\" \",\"\") for i in x])\nmovie['cast']= movie['cast']. apply(lambda x:[i.replace(\" \",\"\") for i in x])\nmovie['crew']= movie['crew']. apply(lambda x:[i.replace(\" \",\"\") for i in x])\nmovie['keywords']= movie['keywords']. apply(lambda x:[i.replace(\" \",\"\") for i in x])","d68c0ec1":"movie.head()","c5629eb7":"movie['tag'] = movie['genres'] + movie['cast'] + movie['crew'] + movie['keywords']","4d93badc":"movie.head()","5af03583":"movie_rec = movie[['id','title','tag']]","979f33c3":"movie_rec.head()","2a1594dd":"movie_rec['tag'] = movie_rec['tag'].apply(lambda x: \" \".join(x))","54e63574":"movie_rec.head()","af5cd54e":"movie_rec['tag'] = movie_rec['tag'].apply(lambda x : x.lower())","bce14d97":"import nltk\nfrom nltk.stem.porter import PorterStemmer\nps = PorterStemmer()","f233a9a1":"def stem(text):\n    y = []\n    \n    for i in text.split():\n       y.append(ps.stem(i))\n    return \" \".join(y)","4bc3cc97":"movie_rec['tag'] = movie_rec['tag'].apply(stem)","0eb4510c":"movie_rec.head()","b57a7f0c":"from sklearn.feature_extraction.text import CountVectorizer\ncv = CountVectorizer(max_features= 5000, stop_words=\"english\")","ac047bfd":"vectors = cv.fit_transform(movie_rec['tag']).toarray()","952ef00c":"vectors","0f93dec5":"cv.get_feature_names()","83b7674c":"from sklearn.metrics.pairwise import cosine_similarity","0893023f":"similarity = cosine_similarity(vectors)","df30cdfa":"similarity[1]","115a83a8":"def recommend(x):\n    movie_index = movie_rec[movie_rec['title'] == x].index[0]\n    distance = similarity[movie_index]\n    recommmended_movie = sorted(list(enumerate(distance)),reverse = True, key = lambda x:x[1])[1:6]\n    \n    for i in recommmended_movie:\n        print (movie_rec.iloc[i[0]].title)","9352e8fe":"recommend(\"Avatar\")","35576b8f":"# MovieRecommenderSystem"}}