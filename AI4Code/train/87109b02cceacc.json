{"cell_type":{"759c7e45":"code","3c519abe":"code","0b28faca":"code","44413534":"code","226f03f8":"code","965bb3e5":"code","63a5b022":"code","199769c1":"code","c0e8d772":"code","025aa1fa":"code","2dcc792a":"code","29436760":"code","2b9708ca":"code","e35f3f7b":"code","db1768f8":"code","a4fbf71e":"code","5a56b571":"code","5ba78abf":"code","1df774b2":"code","0b313111":"code","bfab56bb":"code","e9286210":"code","989e7eab":"code","f5f83437":"code","cd8908e4":"code","ea68cc17":"code","c99170f4":"code","40d40513":"code","7afcbdf5":"code","ede3e2de":"code","c726d162":"code","aec0bf6d":"code","5339c5f2":"code","cc4b8438":"code","e6757099":"code","67c29ff2":"code","ea54ca58":"code","addf6afc":"code","b3722a89":"code","f4a8b7dd":"code","17958778":"code","144f3809":"code","2c1c9de4":"code","4dd7f10a":"code","ad5190cf":"code","7df1d635":"markdown","13b2d075":"markdown","ce2569dc":"markdown","00ff10bd":"markdown","f18e6938":"markdown","6dd5c322":"markdown","14a5deae":"markdown","c6aca787":"markdown","55c79d2a":"markdown","a32934c1":"markdown","27ef79d5":"markdown","62d94abc":"markdown","259e8b44":"markdown","f489e324":"markdown","7713095e":"markdown","45c29d0b":"markdown"},"source":{"759c7e45":"!pip install dabl","3c519abe":"!pip install shap","0b28faca":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport dabl\nimport shap\n\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import mean_squared_error, accuracy_score\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","44413534":"dataset = pd.read_csv('..\/input\/wild-blueberry-yield-prediction\/Data in Brief\/Data in Brief\/WildBlueberryPollinationSimulationData.csv')","226f03f8":"dataset.head(10)","965bb3e5":"dataset.drop('Row#', axis='columns', inplace=True)","63a5b022":"dataset.head(10)","199769c1":"dataset.tail(10)","c0e8d772":"dataset.info()","025aa1fa":"import plotly.express as px\nfig = px.histogram(dataset, x=\"yield\")\nfig.show()","2dcc792a":"dabl.plot(dataset, target_col=\"yield\")","29436760":"sns.boxplot(x=dataset['bumbles'])","2b9708ca":"sns.boxplot(x=dataset['honeybee'])","e35f3f7b":"q1 = dataset.quantile(0.25)\nq2 = dataset.quantile(0.75)\niqr = q2 -q1\nprint(iqr)","db1768f8":"dataset = dataset[~((dataset < (q1 - 1.5 * iqr)) |(dataset > (q2 + 1.5 * iqr))).any(axis=1)]\ndataset.shape","a4fbf71e":"plt.figure(figsize=(20,20))\nc = dataset.corr()\n","5a56b571":"c","5ba78abf":"plt.figure(figsize=(15,12))\nsns.heatmap(c, annot=True, cmap=\"YlGnBu\")\nplt.title('Heatmap to understand the correlation between input data', fontsize=15)\nplt.show()","1df774b2":"X = dataset[['clonesize','honeybee','bumbles', 'andrena', 'osmia', 'MaxOfUpperTRange', 'MinOfUpperTRange', 'AverageOfUpperTRange', 'MaxOfLowerTRange', 'MinOfLowerTRange', 'AverageOfLowerTRange', 'RainingDays', 'AverageRainingDays', 'fruitset', 'fruitmass', 'seeds']]\nX","0b313111":"y = dataset['yield']\ny","bfab56bb":"print(X.shape)","e9286210":"print(y.shape)","989e7eab":"X_train, X_val, Y_train, Y_val = train_test_split(X, y, test_size=0.2, random_state=0)","f5f83437":"print(X_train.shape)","cd8908e4":"print(X_val.shape)","ea68cc17":"from sklearn.linear_model import LinearRegression\nreg = LinearRegression()","c99170f4":"reg.fit(X_train, Y_train)","40d40513":"Y_pred = reg.predict(X_val)","7afcbdf5":"rmse = np.sqrt(np.mean((Y_val - Y_pred)**2))\nrmse","ede3e2de":"from sklearn.metrics import r2_score\nr2_score(Y_pred, Y_val)","c726d162":"data_pred = X_val.iloc[8,:] \ndata_pred_array = data_pred.values.reshape(1, -1)\n\n\nreg.predict(data_pred_array)","aec0bf6d":"from sklearn.ensemble import RandomForestRegressor","5339c5f2":"params = {\n    'n_estimators' : [25, 50, 75, 100, 150, 200],\n    'max_depth' : [2, 4, 6, 8, 10]  \n}\nrfreg = GridSearchCV(RandomForestRegressor(random_state=0), params)\nrfreg.fit(X_train, Y_train)\n\nY_pred = rfreg.predict(X_val)\n\nrmse = np.sqrt(np.mean((Y_val - Y_pred)**2))\n\nprint(\"RMSE : {:.2f}\".format(rmse))","cc4b8438":"r2_score(Y_pred, Y_val)","e6757099":"from xgboost import XGBRegressor\nregressor = XGBRegressor()","67c29ff2":"regressor.fit(X_train, Y_train)","ea54ca58":"Y_pred = regressor.predict(X_val)","addf6afc":"rmse = np.sqrt(np.mean((Y_val - Y_pred)**2))\nrmse","b3722a89":"r2_score(Y_pred, Y_val)","f4a8b7dd":"shap_values = shap.TreeExplainer(regressor).shap_values(X_val)","17958778":"shap.summary_plot(shap_values, X_val, plot_type=\"bar\")","144f3809":"shap.summary_plot(shap_values, X_val)","2c1c9de4":"exp = shap.Explainer(reg, X_train)\nshap_values = exp.shap_values(data_pred)","4dd7f10a":"shap.initjs()\nshap.force_plot(exp.expected_value, shap_values, data_pred)","ad5190cf":"#end","7df1d635":"**Data Preprocessing**","13b2d075":"# Exploratory Data Analysis","ce2569dc":"**Removing Outliers**","00ff10bd":"# XGBoost","f18e6938":"<img src=\"https:\/\/images.theconversation.com\/files\/304187\/original\/file-20191128-176618-zrwazf.jpg\">\n<h1><center>Wild Blueberry Yield Prediction Model<\/center><\/h1>\n<p><center>Exploratory Data Analysis and Explainable AI<\/center><\/p>\n\n# Introduction\n\nThe most challenging task in the agriculture sector is to accurately predict crop yield. Here is the complete Wild Blueberry Yield Prediction Model coupled with Exploratory Data Analysis(EDA) and Explainable AI.","6dd5c322":"# Multiple Linear Regression","14a5deae":"**Modelling**","c6aca787":"**Modelling**","55c79d2a":"# Random Forest Regression","a32934c1":"# Explainable AI","27ef79d5":"# Ref :\n\n* dabl lib : https:\/\/www.kaggle.com\/parulpandey\/useful-python-libraries-for-data-science\n\n* Explainable AI : <br>\nhttps:\/\/en.wikipedia.org\/wiki\/Explainable_artificial_intelligence <br>\nhttps:\/\/towardsdatascience.com\/explainable-artificial-intelligence-part-2-model-interpretation-strategies-75d4afa6b739\n             ","62d94abc":"**Model Evaluation**","259e8b44":"**Model Evaluation and Prediction**","f489e324":"**Prediction**","7713095e":"**Correlation**","45c29d0b":"**Importing all the crucial libraries**"}}