{"cell_type":{"49595933":"code","c9e78011":"code","d530088a":"code","75459dd9":"code","a83bdc4c":"code","c92588c2":"code","69f240c4":"code","8388223a":"code","f597ba81":"code","37707b47":"code","5b222dcb":"code","0c514b3d":"code","3b1a1f4a":"code","c97f6e71":"markdown","1b45cce8":"markdown","4a339476":"markdown","b89c1a84":"markdown","7ce06ea6":"markdown","9160d658":"markdown","8187f44f":"markdown","08a056d4":"markdown","c78a9a39":"markdown","a5c4560f":"markdown","f6758bf3":"markdown","d6554275":"markdown","d4df3266":"markdown","19902501":"markdown"},"source":{"49595933":"import pandas as pd\nimport warnings\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n#Ignore the import and install warnings\nwarnings.filterwarnings(\"ignore\")","c9e78011":"df = pd.read_csv('..\/input\/pakistan-car-prices\/updated_pakwheels.csv')\ndf.info()","d530088a":"from sklearn import preprocessing\nlabel_encoder = preprocessing.LabelEncoder()\nencoded_CarName = label_encoder.fit_transform(df.Name)\n","75459dd9":"encoded_CarName = pd.Series(encoded_CarName)\ndf['Name'] = encoded_CarName","a83bdc4c":"x = df[['Engine Capacity', 'Model Year', 'Mileage','Name', 'Engine Type', 'Transmission', 'Body Type']]\ny = df['Price']","c92588c2":"from sklearn.tree import DecisionTreeRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score, mean_squared_error\n\nindependent_train, independent_test, dependent_train, dependent_test = train_test_split(x, y, test_size = 0.30, random_state = 46)\nregr = DecisionTreeRegressor(criterion='mae')\nmodel = regr.fit(independent_train, dependent_train)","69f240c4":"predicted_values = model.predict(independent_test)\nr2_score(dependent_test, predicted_values)","8388223a":"predict_df = pd.DataFrame({\"Dependent_Test\" : dependent_test, \"Dependent_Predicted\" : predicted_values})\npredict_df.head()","f597ba81":"from sklearn import neighbors\nmodel_knn = neighbors.KNeighborsRegressor(n_neighbors = 3)\nmodel_knn.fit(independent_train, dependent_train)","37707b47":"predicted_value = model_knn.predict(independent_test)\nknn_score = r2_score(dependent_test, predicted_value)\nknn_score","5b222dcb":"from sklearn.naive_bayes import GaussianNB\nmodelNB = GaussianNB()\nmodelNB.fit(independent_train, dependent_train)\n","0c514b3d":"predicted_val = modelNB.predict(independent_test)\n\nNB_score = r2_score(dependent_test, predicted_val)\nNB_score","3b1a1f4a":"from catboost import CatBoostRegressor\nmodel_CBR = CatBoostRegressor(iterations=500)\nmodel_CBR.fit(independent_train, dependent_train)\n\nprediction_CBR = modelNB.predict(independent_test)\n\nCBR_score = r2_score(dependent_test, prediction_CBR)\nCBR_score","c97f6e71":"## As the model is trained now wih KNN, we can check its accuracy below","1b45cce8":"## Training the model using KNN","4a339476":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b89c1a84":"## Training the model on decision tree with the criterion as Mean Absolute Error","7ce06ea6":"## We have 7229 different cars available from 54913 ads","9160d658":"## Car names are now transformed","8187f44f":"### We will now prepare our x and y variables for prediction where x is the list of independent variables and y is the dependent variable","08a056d4":"# Importing necessary libraries for reading the csv","c78a9a39":"### As the Car's make, model, year and variant is in the same column and is catagorical so we need to transform it into numerics","a5c4560f":"## As the model is trained now, we can check its accuracy below","f6758bf3":"## As the model is trained now with Naive bayes, we can check its accuracy below","d6554275":"# R2 score with Naive bayes is better than KNN","d4df3266":"# R2 score with decision tree is better than KNN","19902501":"## Here, we can check the first 5 real vs predicted values"}}