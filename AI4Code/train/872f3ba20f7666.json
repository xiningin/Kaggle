{"cell_type":{"80abefcc":"code","8a1cbc3b":"code","38bbd890":"code","e15715e6":"code","9508e23b":"code","aac2268f":"code","25babf83":"code","90c2ba22":"code","7fb00776":"code","25dcabfd":"code","ac02bb56":"code","22c50a49":"code","2cd0b21b":"code","5feaa139":"code","0b79324a":"code","41cc7f5f":"code","e9fb2163":"markdown","270d8c25":"markdown"},"source":{"80abefcc":"import pandas as pd\nimport seaborn as sns\nimport numpy as np\nimport sklearn\nimport matplotlib.pyplot as plt\nimport matplotlib as matplot\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import LabelBinarizer\nfrom sklearn.model_selection import train_test_split","8a1cbc3b":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","38bbd890":"train = pd.read_json('file:\/\/localhost\/kaggle\/input\/nslkdd-in-json-format\/NSL-KDD-Train.json',lines=True)\ntrain.head()","e15715e6":"le_prototype = LabelEncoder().fit(train['protocol_type'])\ntrain['protocol_type'] =le_prototype.transform(train['protocol_type'])\nlb_prototype = LabelBinarizer().fit(train['protocol_type'])\ntrain['protocol_type'] = lb_prototype.transform(train['protocol_type'])","9508e23b":"le_service = LabelEncoder().fit(train['service'])\ntrain['service'] =le_service.transform(train['service'])\nlb_service = LabelBinarizer().fit(train['service'])\ntrain['service'] = lb_service.transform(train['service'])","aac2268f":"le_flag = LabelEncoder().fit(train['flag'])\ntrain['flag'] =le_flag.transform(train['flag'])","25babf83":"le_class = LabelEncoder().fit(train['class'])\ntrain['class'] =le_class.transform(train['class'])","90c2ba22":"train.head()","7fb00776":"x = train.drop('class', axis=1)\ny = train.loc[:,['class']]\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.50, random_state=908)","25dcabfd":"from sklearn.ensemble import VotingClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import BaggingClassifier\nfrom sklearn.ensemble import ExtraTreesClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.ensemble import IsolationForest\nfrom sklearn.tree import DecisionTreeClassifier","ac02bb56":"x = X_train\ny = y_train['class'].ravel()\n\nclf1 = DecisionTreeClassifier() \nclf2 = RandomForestClassifier(n_estimators=25, random_state=1)\nclf3 = GradientBoostingClassifier()\nET = ExtraTreesClassifier(n_estimators=10, criterion='gini', max_features='auto', bootstrap=False)\n\neclf = VotingClassifier(estimators=[('lr', clf1), ('rf', clf2), ('gnb', clf3),('et',ET)], voting='hard') \n\nfor clf, label in zip([clf1, clf2, clf3,ET, eclf], ['DecisionTreeClassifier', 'Random Forest', 'GradientBoostingClassifier','ExtraTreesClassifier', 'Ensemble']): \n    tmp = clf.fit(x,y)\n    pred = clf.score(X_test,y_test)\n    print(\"Acc: %0.2f [%s]\" % (pred,label))","22c50a49":"### Lets test on Testing dataset","2cd0b21b":"test = pd.read_json('file:\/\/localhost\/kaggle\/input\/nslkdd-in-json-format\/NSL-KDD-Test.json',lines=True)","5feaa139":"test['class'] =le_class.transform(test['class'])\ntest['flag'] =le_flag.transform(test['flag'])\ntest['service'] =le_service.transform(test['service'])\ntest['protocol_type'] =le_prototype.transform(test['protocol_type'])","0b79324a":"x = test.drop('class', axis=1)\ny = test.loc[:,['class']]","41cc7f5f":"for clf, label in zip([clf1, clf2, clf3,ET, eclf], ['DecisionTreeClassifier', 'Random Forest', 'GradientBoostingClassifier','ExtraTreesClassifier', 'Ensemble']): \n    pred = clf.score(x,y)\n    print(\"Acc: %0.2f [%s]\" % (pred,label))","e9fb2163":"###### Security Attack Detection \n\n### Dataset from https:\/\/ieee-dataport.org\/analysis\/nsl-kdd-json-format\n\n\n### cite as [1] Jalindar Karande, Sarang Joshi, \"NSL-KDD in JSON Format\", IEEE Dataport, 2020. [Online]. Available: http:\/\/dx.doi.org\/10.21227\/w3f0-nr98.\n","270d8c25":"### Note: Column \"Difficulty level\" is removed from original NSl_KDD and class contains either 'normal' or 'anomaly' ony\n\n### Note: It is advised to do Feature Engineering  though this notebook is not using any"}}