{"cell_type":{"2aa1280d":"code","41f9546c":"code","9959c3d8":"code","1a88f16e":"code","caaed263":"code","74e460a4":"code","34e617d7":"code","7fb94bc5":"code","f991ccad":"code","3aa91949":"code","4adb603d":"code","eb5871b7":"code","bb9e4188":"code","2902f30d":"code","22924803":"code","2b09bcdf":"code","5be69cc5":"code","4da2eb5b":"code","d97e4d3c":"code","f7cc979a":"code","ec127016":"code","b755912a":"code","3221dd77":"code","c1ed8ab6":"code","a5ed410a":"code","d96e652e":"code","b2dab842":"code","d149be25":"code","79134e13":"markdown","246fe048":"markdown","38937f58":"markdown","21cb9944":"markdown","b657cbcd":"markdown","a71ab597":"markdown","0205307e":"markdown","f71c03d3":"markdown","39c459d1":"markdown","1d0bf48d":"markdown","66b681c9":"markdown"},"source":{"2aa1280d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","41f9546c":"kaggle_pizza_df = pd.read_csv(\"..\/input\/8358_1.csv\")","9959c3d8":"kaggle_pizza_df.head()","1a88f16e":"kaggle_pizza_df[['name','menus.name','menus.amountMax']][kaggle_pizza_df['menus.amountMax']==kaggle_pizza_df['menus.amountMax'].max()]","caaed263":"kaggle_pizza_df[['name','menus.name','menus.amountMin']][kaggle_pizza_df['menus.amountMin']==kaggle_pizza_df['menus.amountMin'][kaggle_pizza_df['menus.amountMin'].gt(0)].min()]","74e460a4":"kaggle_pizza_df['menus.amountDiff'] = kaggle_pizza_df['menus.amountMax']- kaggle_pizza_df['menus.amountMin']","34e617d7":"kaggle_pizza_df[['name','menus.name','menus.amountDiff']][kaggle_pizza_df['menus.amountDiff']==kaggle_pizza_df['menus.amountDiff'].max()]","7fb94bc5":"kaggle_pizza_df[['name','menus.name','menus.amountDiff']][kaggle_pizza_df['menus.amountDiff']==kaggle_pizza_df['menus.amountDiff'].replace(0, np.nan).min()]","f991ccad":"df1 = pd.DataFrame(kaggle_pizza_df['menus.dateSeen'].values, columns = ['date'])\ndf2=  df1['date'].str.split(',', expand=True).stack().reset_index(level=1,drop=True)\ndf2 = df2.to_frame('date').set_index(df2.groupby(df2.index).cumcount(), append=True)\ndf2['date']= df2['date'].str[:10]\ndf2['date']= pd.to_datetime(df2['date']) \ndf2['day_of_week'] = df2['date'].dt.day_name()","3aa91949":"day_count= df2.groupby(['day_of_week']).size().to_frame('day_count').reset_index()\nday_count.sort_values(by='day_count', ascending=False)","4adb603d":"day_count.sort_values(by='day_count').plot('day_of_week','day_count',kind='barh')","eb5871b7":"pizza= kaggle_pizza_df.drop_duplicates(subset=['address','city','latitude','longitude','menus.name','name'], keep='first')\npizza","bb9e4188":"pizza_count= pizza.groupby(['menus.name']).size().to_frame('count').reset_index()\npizza_count_sort = pizza_count.sort_values(by='count', ascending=False)[:10]\npizza_count_sort","2902f30d":"pizza_count_sort.plot('menus.name','count', kind='bar')","22924803":"pizza_name_df_count= pizza.groupby(['name']).size().to_frame('count').reset_index()\npizza_name_df_count.sort_values(by='count', ascending=False)[:10]","2b09bcdf":"pizza_name_df_count.sort_values(by='count', ascending=False)[:10].plot('name','count',kind='bar')","5be69cc5":"kaggle_pizza_df_city= kaggle_pizza_df.groupby(['city']).size().to_frame('count').reset_index()\nkaggle_pizza_df_city.sort_values(by='count', ascending=False)[:10]","4da2eb5b":"kaggle_pizza_df_city.sort_values(by='count', ascending=False)[:10].plot('city','count',kind='bar',color='C2')","d97e4d3c":"state_count= kaggle_pizza_df.groupby(['province']).size().to_frame('count').reset_index()\nstate_count.sort_values(by='count', ascending=False)[:20]","f7cc979a":"state_count.sort_values(by='count', ascending=False)[:20].plot('province','count',kind='bar')","ec127016":"kaggle_pizza_df['latitude'] = kaggle_pizza_df['latitude'].astype(str)\nkaggle_pizza_df['longitude'] = kaggle_pizza_df['longitude'].astype(str)","b755912a":"kaggle_pizza_df['altitude'] = kaggle_pizza_df[['latitude', 'longitude']].apply(lambda x: ', '.join(x), axis=1)","3221dd77":"kaggle_pizza_df_altitude= kaggle_pizza_df.groupby(['altitude']).size().to_frame('frequency').reset_index()","c1ed8ab6":"kaggle_pizza_df.drop_duplicates(subset= ['city','latitude','longitude','altitude'], keep='first', inplace=True)","a5ed410a":"kaggle_pizza_df_city= kaggle_pizza_df[['name','city','latitude','longitude','altitude']]","d96e652e":"kaggle_pizza_df_arranged= pd.merge(kaggle_pizza_df_city, kaggle_pizza_df_altitude, on='altitude', how='left')","b2dab842":"import plotly.offline as py\nimport plotly.graph_objects as go\nkaggle_pizza_df_arranged['text'] = kaggle_pizza_df_arranged['name']+ ', ' + kaggle_pizza_df_arranged['city'] + ', '+ 'total pizza types: ' + kaggle_pizza_df_arranged['frequency'].astype(str)\ndata = [dict(\n        type = 'scattergeo',\n        lon = kaggle_pizza_df_arranged['longitude'],\n        lat = kaggle_pizza_df_arranged['latitude'],\n        text = kaggle_pizza_df_arranged['text'],\n        mode = 'markers',\n        marker = dict(\n            size = 8,\n            opacity = 0.8,\n            reversescale = False,\n            autocolorscale = False,\n            symbol = 'circle',\n            line = dict(\n                width=1,\n                color='rgba(102, 102, 102)'\n            ),\n            colorscale = 'Blues',\n            cmin = 0,\n            color = kaggle_pizza_df_arranged['frequency'],\n            cmax = kaggle_pizza_df_arranged['frequency'].max(),\n            colorbar_title=\"Pizza Frequency\"\n        ))]\nlayout = dict(\n        title = 'Pizza distribution in USA<br>(Hover for pizza details)',\n        geo = dict(\n            scope='usa',\n            projection_type='albers usa',\n            showland = True,\n            landcolor = \"rgb(250, 250, 250)\",\n            subunitcolor = \"rgb(217, 217, 217)\",\n            countrycolor = \"rgb(217, 217, 217)\",\n            countrywidth = 0.5,\n            subunitwidth = 0.5\n        ),\n    )\npy.init_notebook_mode(connected=True)\nfig = dict(data=data, layout= layout)\npy.iplot(fig, filename='Pizza_USA.html')","d149be25":"scl = [[0.0, 'rgb(248,255,206)'],[0.2, 'rgb(203,255,205)'],[0.4, 'rgb(155,255,164)'], [0.6, 'rgb(79,255,178)'],[0.8, 'rgb(15,183,132)'], [1, '#008059']]\ndata = [dict(\n        type = 'choropleth',\n        colorscale = scl,\n        autocolorscale = False,\n        locations = state_count.province,\n        z= state_count['count'],\n        locationmode= 'USA-states',\n        marker = dict(\n            line = dict(\n                width=2,\n                color='rgb(255, 255, 255)'\n            )),\n            colorbar = dict(\n                title=\"Pizza Frequency\")\n        )]\nlayout = dict(\n        title = 'Pizza distribution in USA<br>(Hover for pizza details)',\n        geo = dict(\n            scope='usa',\n            projection=dict( type='albers usa'),\n            showlakes = True,\n            lakecolor = 'rgb(255,255,255)'\n        ),\n    )\npy.init_notebook_mode(connected=True)\nfig = dict(data=data, layout= layout)\npy.iplot(fig, filename='d3-chloropleth-map')","79134e13":"**Pizza with highest price difference**","246fe048":"**Top 10 most popular pizza**","38937f58":"**Least expensive Pizza**","21cb9944":"**Popular day for pizza**","b657cbcd":"**Top 10 popular cities for pizza consumption**","a71ab597":"**Most expensive Pizza**","0205307e":"**Pizza with lowest price difference**","f71c03d3":"**Top 10 most popular restaurant**","39c459d1":"**Pizza Distribution in USA: city-wise**","1d0bf48d":"**Pizza Distribution in USA: state-wise**","66b681c9":"**Top 20 states in pizza consumption**"}}