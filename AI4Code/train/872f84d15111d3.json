{"cell_type":{"60ac028e":"code","4b013cb0":"code","44ddc381":"code","b9035ed9":"code","ea57145f":"code","30524085":"code","8d7e318c":"code","506fd5f7":"code","0e382075":"code","412703bc":"code","885a246c":"code","e4c4a0a6":"code","77bf09dd":"code","91579818":"code","763a00f9":"code","4197d5f9":"code","f38f66e1":"code","9619f067":"code","c30c7551":"code","fe6d7531":"code","f5b822e5":"code","36ea1467":"code","5dd9c742":"code","be75e6a5":"code","0463050e":"code","bde62789":"code","2159847d":"code","a607f78a":"code","79fa632f":"code","69811c43":"code","fe0f6d04":"code","9c6471c9":"code","37eab430":"code","e8419edd":"code","d4c1970f":"code","120ff6ee":"code","2e56e9b4":"code","ecfb859b":"code","f0f9a4e0":"code","a03ce951":"code","ca220498":"code","2c9ddd0d":"code","0f3e6437":"code","f8c587b5":"code","4397d180":"code","eb5baf23":"markdown","771afb82":"markdown","2d7ddbd0":"markdown","56e3ed94":"markdown","1451abad":"markdown","fd58be89":"markdown","0f50a215":"markdown","248c42e1":"markdown","2b573509":"markdown","3810a497":"markdown"},"source":{"60ac028e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4b013cb0":"features = pd.read_csv(\"\/kaggle\/input\/walmart-recruiting-store-sales-forecasting\/features.csv.zip\")\nfeatures","44ddc381":"# \ub0a0\uc9dc\ud615\uc73c\ub85c \ubcc0\uacbd\nfeatures[\"Date\"] = pd.to_datetime(features[\"Date\"])","b9035ed9":"features2 = features[features[\"Date\"] < '2012-10-27']","ea57145f":"features2","30524085":"train = pd.read_csv(\"\/kaggle\/input\/walmart-recruiting-store-sales-forecasting\/train.csv.zip\")\ntrain","8d7e318c":"train.groupby(\"IsHoliday\")[\"Weekly_Sales\"].median()","506fd5f7":"#pd.merge(train,features2, how = 'left', right_on = 'Date')","0e382075":"train.dtypes","412703bc":"# \ub0a0\uc9dc\ud615\uc73c\ub85c \ubcc0\uacbd\ntrain[\"Date\"] = pd.to_datetime(train[\"Date\"])","885a246c":"# \uc5f0\ub3c4\ubcc4 \ub370\uc774\ud130\ub97c \ubcf4\uae30\uc704\ud574 dt.year \ucd94\uac00\ntrain[\"dateyear\"] = train[\"Date\"].dt.year\ntrain[\"week\"] = train[\"Date\"].dt.week","e4c4a0a6":"train3 = train[train[\"Weekly_Sales\"] < 50000]","77bf09dd":"\nplt.figure(figsize = (20,12))\nsns.boxplot(train3[\"week\"],train3[\"Weekly_Sales\"])","91579818":"# \uc6d4\ubcc4 \ub370\uc774\ud130\ub97c \ubcf4\uae30 \uc704\ud574 dt.month \ucd94\uac00\ntrain[\"datemonth\"] = train[\"Date\"].dt.month","763a00f9":"# \uc77c\ubcc4 \ub370\uc774\ud130\ub97c \ubcf4\uae30 \uc704\ud574 dt.month \ucd94\uac00\ntrain[\"dateday\"] = train[\"Date\"].dt.day","4197d5f9":"train[\"dateyear\"].value_counts()","f38f66e1":"train[\"weeknum\"] = np.ceil(train[\"dateday\"]\/7)","9619f067":"print(train.groupby(\"dateyear\")[\"Weekly_Sales\"].mean())\ntrain.groupby(\"dateyear\")[\"Weekly_Sales\"].median()","c30c7551":"print(train.groupby(\"datemonth\")[\"Weekly_Sales\"].mean())\ntrain.groupby(\"datemonth\")[\"Weekly_Sales\"].median()","fe6d7531":"# \uc77c\ubcc4 \ud3c9\uade0\uacfc \uc911\uac04\uac12 \ud655\uc778\nprint(train.groupby(\"dateday\")[\"Weekly_Sales\"].mean())\ntrain.groupby(\"dateday\")[\"Weekly_Sales\"].median()","f5b822e5":"print(train.groupby(\"Dept\")[\"Weekly_Sales\"].mean())\nprint(train.groupby(\"Store\")[\"Weekly_Sales\"].mean())","36ea1467":"train = train.merge(stores,on = \"Store\",how = \"left\")","5dd9c742":"# train \ub370\uc774\ud130\uc758 Date\uc5f4 \uc0ad\uc81c, test\uc640 train\uc758 \ucc28\uc6d0\uc744 \ub9de\ucdb0\uc8fc\uae30 \uc704\ud574 weekly sales\ub97c \uc0ad\uc81c\ud558\uace0 train2\ub85c \uc800\uc7a5\ntrain2 = train.drop([\"Date\",\"Weekly_Sales\"],axis = 1)\ntrain2.head()","be75e6a5":"stores = pd.read_csv(\"\/kaggle\/input\/walmart-recruiting-store-sales-forecasting\/stores.csv\")\nstores.head()","0463050e":"stores = stores.replace({\"A\":1,\"B\":2, \"C\":3})","bde62789":"stores.groupby(\"Type\")[\"Size\"].mean()","2159847d":"test = pd.read_csv(\"\/kaggle\/input\/walmart-recruiting-store-sales-forecasting\/test.csv.zip\")\ntest.head()","a607f78a":"test.dtypes","79fa632f":"test[\"Date\"] = pd.to_datetime(test[\"Date\"])","69811c43":"# \uc5f0\ub3c4\ubcc4 \ub370\uc774\ud130\ub97c \ubcf4\uae30\uc704\ud574 dt.year \ucd94\uac00\ntest[\"dateyear\"] = test[\"Date\"].dt.year\ntest[\"week\"] = test[\"Date\"].dt.week","fe0f6d04":"# \uc6d4\ubcc4 \ub370\uc774\ud130\ub97c \ubcf4\uae30 \uc704\ud574 dt.month \ucd94\uac00\ntest[\"datemonth\"] = test[\"Date\"].dt.month","9c6471c9":"# \uc77c\ubcc4 \ub370\uc774\ud130\ub97c \ubcf4\uae30 \uc704\ud574 dt.month \ucd94\uac00\ntest[\"dateday\"] = test[\"Date\"].dt.day","37eab430":"test[\"dateyear\"].value_counts()","e8419edd":"test[\"weeknum\"] = np.ceil(test[\"dateday\"]\/7)","d4c1970f":"test = test.merge(stores,on = \"Store\",how = \"left\")","120ff6ee":"test2 = test.drop([\"Date\"],axis = 1)\ntest2.head()","2e56e9b4":"train[\"Weekly_Sales\"].describe()","ecfb859b":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nscaler.fit_transform(train[\"Weekly_Sales\"])","f0f9a4e0":"train[\"Weekly_Sales\"] = np.log(train[\"Weekly_Sales\"])\ntrain = train.fillna(-1)\ntrain.isna().sum()","a03ce951":"print(train2.isna().sum())\ntest2.isna().sum()","ca220498":"train[\"Weekly_Sales\"]","2c9ddd0d":"from sklearn.ensemble import RandomForestRegressor \nrf = RandomForestRegressor(n_estimators = 100,n_jobs = 4)\nrf.fit(train2,train[\"Weekly_Sales\"])                # train2 \ub370\uc774\ud130\ub85c train\uc758 Weekly_Sales \uac12\uc744 \ud559\uc2b5\nresult = rf.predict(test2)                          # test2\ub97c \uae30\ubc18\uc73c\ub85c \uacb0\uacfc\uac12 \uc608\uce21","0f3e6437":"sub = pd.read_csv(\"\/kaggle\/input\/walmart-recruiting-store-sales-forecasting\/sampleSubmission.csv.zip\")\nsub.head()\nsub[\"Weekly_Sales\"] = result\nsub.to_csv(\"Walmart_sub.csv\",index = False)","f8c587b5":"sub[\"Weekly_Sales\"] = result\nsub.head()","4397d180":"sub.to_csv(\"Walmart_sub.csv\",index = False)","eb5baf23":"\ub370\uc774\ud130\ub97c \ud655\uc778\ud574\ubcf8 \uacb0\uacfc train\ub370\uc774\ud130\uc5d0\ub294 \ubaa9\uc694\uc77c \ub370\uc774\ud130\ub9cc \uc874\uc7ac\ud558\ub294\uac83\uc73c\ub85c \ubcf4\uc784","771afb82":"Dept\ubcc4 \ud310\ub9e4\ub7c9\uc758 \ucc28\uc774\ub294 415.48\uc5d0\uc11c 19213.48\uae4c\uc9c0 \ucc28\uc774\uac00 \uc2ec\ud55c\uac83\uc73c\ub85c \ubcf4\uc774\uba70, store\ubcc4 \ud310\ub9e4\ub7c9\ub3c4 \ucc28\uc774\uac00 \uc788\ub294\uac83\uc73c\ub85c \ubcf4\uc784.","2d7ddbd0":"# Train","56e3ed94":"# Stores","1451abad":"# Test","fd58be89":"# \uba54\ubaa8\uc7a5\n## \ubcc0\uc218\n* Store :\n* Dept : \n* Date : \n* Weekly_Sales : \n* IsHoliday : \n\n## \uac00\uc815\n* \uc6d4\ucd08, \uc6d4 \uc911\uc21c, \uc6d4 \ud558\uc21c\uc5d0 \ub530\ub77c \ud310\ub9e4\ub7c9\uc5d0 \ucc28\uc774\uac00 \uc788\ub294\uac00?\n* \uc694\uc77c\uc5d0 \ub530\ub77c \ud310\ub9e4\ub7c9\uc5d0 \ucc28\uc774\uac00 \uc788\ub294\uac00? -> \ub0a0\uc9dc \ub370\uc774\ud130\uac00 \uae08\uc694\uc77c\ub9cc \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc694\uc77c\uc5d0 \ub530\ub978 \ud310\ub9e4\uae08\uc561 \ucc28\uc774\ub294 \uc54c\uc218 \uc5c6\uc74c.\n\ub2e8, \uae08\uc694\uc77c \ub370\uc774\ud130\ub97c \uac00\uc9c0\uace0 \ubaa8\ub378\ub9c1\uc744 \ud558\uc5ec \uc81c\ucd9c\ud55c\ub4a4, \ub2e4\ub978\uc694\uc77c \ud310\ub9e4\ub7c9\uc744 \uc608\uce21\ud558\ub294\uac83\uc77c\uc218 \uc788\uc74c.\n\n* store\ubcc4, depart\ubcc4\ub85c \ud310\ub9e4\uae08\uc561\uc758 \ucc28\uc774\uac00 \uc788\ub294\uac00? -> train\ub370\uc774\ud130\ub97c \ud655\uc778\ud55c \uacb0\uacfc \ucc28\uc774\uac00 \uc788\ub294\uac83\uc73c\ub85c \ubcf4\uc784.\n\nFeatures\ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 Date\uac12\uc744 \uae30\uc900\uc73c\ub85c Join\ud574\uc57c\ud560\ub4ef.\n\nfeatures\uc5d0\uc11c 2012-10-26 \uc774\ud6c4\uc758 \ub370\uc774\ud130\ub97c \uc81c\uac70\ud55c\ud6c4","0f50a215":"# Modeling","248c42e1":"\ud3c9\uade0\uacfc \uc911\uac04\uac12\uc744 \ud655\uc778\ud55c \uacb0\uacfc, \uc5f0\ub3c4\ubcc4 \ud310\ub9e4\uae08\uc561\uc774 \uc810\uc810 \uac10\uc18c\ud558\ub294 \uacbd\ud5a5\uc774 \ubcf4\uc784","2b573509":"# Features","3810a497":"test\ub370\uc774\ud130\ub3c4 \ud655\uc778\ud574\ubcf8 \uacb0\uacfc \ubaa9\uc694\uc77c \ub370\uc774\ud130\ub9cc \ud3ec\ud568\ud558\uace0\uc788\uc74c."}}