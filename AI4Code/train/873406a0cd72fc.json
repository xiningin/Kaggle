{"cell_type":{"c88c5d8a":"code","4117a34c":"code","70e8a846":"code","7c5bb172":"code","1bbed7a8":"code","96962488":"code","9db664ec":"code","655a263e":"code","42f5017d":"code","f6914551":"code","32a3389e":"code","cd1a3f49":"code","812a2328":"code","f8b23c95":"code","7536b386":"code","e4948b72":"code","7e336025":"code","51829532":"code","9f719ef7":"code","07ee1969":"code","fd0984dc":"code","aa1f931a":"code","8343cbc0":"code","d36af5df":"code","5801b64d":"code","8c727c50":"code","d16fda08":"code","5b98743f":"markdown","c182dac8":"markdown","754261a2":"markdown","c44ff6cb":"markdown","d700e55f":"markdown","7c2e58d6":"markdown","7c7f2bcd":"markdown"},"source":{"c88c5d8a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4117a34c":"# Prepare required tools\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\nfrom sklearn.linear_model import RidgeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier \nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix","70e8a846":"# read CSV file\n\nestonia = pd.read_csv (\"..\/input\/passenger-list-for-the-estonia-ferry-disaster\/estonia-passenger-list.csv\")\nestonia.head()","7c5bb172":"estonia.tail()","1bbed7a8":"estonia[\"Country\"].value_counts()","96962488":"estonia[\"Category\"].value_counts()","9db664ec":"estonia.Sex.value_counts()","655a263e":"# EDA _ Exploratory Data Analysis\n\nestonia.info()","42f5017d":"# check for any null features\nestonia.isna().sum()","f6914551":"# describe dataset\nestonia.describe()\n","32a3389e":"# how many (survived = 1) and how many (did not survive = 0) \nestonia[\"Survived\"].value_counts()","cd1a3f49":"pd.crosstab(estonia.Sex, estonia.Survived)","812a2328":"pd.crosstab(estonia.Sex, estonia.Survived).plot.bar()\nplt.title (\"SEX VS Survival\")\nplt.ylabel (\"Number of passengers\")\nplt.xticks (rotation = 0)\nplt.legend ([\"Didn't Survive\", \"Survive\"]);","f8b23c95":"pd.crosstab(estonia.Category, estonia.Survived)","7536b386":"pd.crosstab(estonia.Category, estonia.Survived).plot.bar()\nplt.title (\"Category VS Survival\")\nplt.ylabel (\"Number os passengers\")\nplt.xticks (rotation = 0)\nplt.legend ([\"Didn't survive\", \"Survive\"]);","e4948b72":"estonia.Age.plot.hist();","7e336025":"# plot Age & Country VS survival\nplt.figure (figsize = (10, 6))\nplt.scatter (estonia.Age[estonia.Survived ==1],\n             estonia.Country[estonia.Survived ==1],\n             c = \"orange\")\nplt.title (\"Age and Country VS Survival\")\nplt.legend ([\"Survive\"])\nplt.xlabel (\"Age\");","51829532":"# plot Age & Country VS No Survival\nplt.figure (figsize = (10, 6))\nplt.scatter (estonia.Age[estonia.Survived ==0],\n             estonia.Country[estonia.Survived ==0],\n             c = \"blue\")\nplt.title (\"Age and Country VS No Survival\")\nplt.legend ([\"Didn't Survive\"])\nplt.xlabel (\"Age\");","9f719ef7":"# lets drop less important columns in our data set to prepare our correlation matrix\nestonia.drop([\"PassengerId\", \"Firstname\", \"Lastname\", \"Country\"], axis=1,inplace = True)\nestonia.head()","07ee1969":"# change Sex and Category to numerical \nchange_dict = {\"Sex\" : {\"M\" : 1,\n                        \"F\" : 0},\n              \"Category\" : {\"P\" : 1,\n                            \"C\" : 0}}\nestonia.replace(change_dict, inplace = True)\nestonia.head()","fd0984dc":"# We can get the correlation matrix now \n\ncorr_matrix = estonia.corr()\ncorr_matrix","aa1f931a":"# lets make the correlation matrix more visual\nfig, ax = plt.subplots(figsize = (8, 6))\nplt.ax = (sns.heatmap(corr_matrix,\n                      cmap = \"YlGnBu\",\n                      cbar = False,\n                      annot = True,\n                      fmt = \".2f\"));","8343cbc0":"# Start Modeling \n# keep all featires as X and target as y\nX = estonia.drop(\"Survived\", axis = 1)\ny = estonia[\"Survived\"]","d36af5df":"X","5801b64d":"# split data to train and test \nnp.random.seed (99)\nX_train, X_test, y_train, y_test = train_test_split (X, y, test_size = 0.2)","8c727c50":"# we are going to be testing on Three models\n\nmodels = {\"Ridge classifier\" : RidgeClassifier(),\n          \"Random Forest\" : RandomForestClassifier(),\n          \"KNN\" : KNeighborsClassifier()}\ndef fit_and_score(models, X_train, X_test, y_train, y_test):\n    models_score = {}\n    for name, model in models.items():\n        model.fit(X_train, y_train)\n        models_score[name] = model.score(X_test, y_test)\n    return models_score","d16fda08":"models_score = fit_and_score(models, X_train, X_test, y_train, y_test)\nmodels_score","5b98743f":"### sex and Category we need to transform from categorical to numerical \n### (Sex - Male = 1, Female = 0)\n### (Category - Passenger = 1 , Crew = 0)","c182dac8":"* The Dataset consist of 8 columns (3 numerical - 5 categorical)\n* There is no null\/empty features\n* 90% of passenger were from (Sweden\/Estonia)\n* Crew memeber were 193, Passengers were 796 \n* 503 Males and 486 Females were on board\n* 852 Did not survive and 137 survived ","754261a2":"## Introduction:\n\nOn September 27 1994 the ferry Estonia set sail on a night voyage across the Baltic Sea carrying 989 passengers and crew but sadely the Estonia never arrived.\n\nThe weather was typically stormy for the time of year but, At roughly 01:00 a worrying sound of screeching metal was heard, The ship suddenly listed 15 minutes later and soon alarms were sounding,  Shortly afterwards the Estonia rolled drastically to starboard. A Mayday signal was sent but power failure meant the ship\u2019s position was given imprecisely. The Estonia disappeared from the responding ships\u2019 radar screens at about 01:50.\n\nThe final death toll was shockingly high \u2013 more than 850 people.\n\nThe sinking of the Estonia was Europe\u2019s worst postwar maritime disaster.\n\n## Problem Definition\n\nThe problem here will be Binary Classification, Given data about passeneger can we predict whether they lived or died\n\n## Data \nThe dataset contains the name, age, sex, category and fate of the 989 passengers aboard the Estonia on the night of the sinking.\n\n\n## Data Dictionary\n\n* Country - Country of origin\n* Firstname - Firstname of passenger\n* Lastname - Lastname of passenger\n* Sex - Gender of passenger - M = Male, F = Female\n* Age - Age of passenger\n* Category - The type of passenger - C = Crew, P = Passenger\n* Survived - 0 = No, 1 = Yes\n\n## Evaluation\n\nThe death toll of the Estonia disaster is well above 80%. If we were to make a naive baseline classifier that simply assumed all passengers aboard the Estonia died, it would be right about 86% of the time. Can you make a more sophisticated classifier that beats the baseline? (>85%) ","c44ff6cb":"### Lets dive more into our dataset and get more info about survivals","d700e55f":"### we notice Age distribution is between 20 to 70 years old, younger and older than these ages can be neglected ","7c2e58d6":"### Lets take a look on our dataset","7c7f2bcd":"### The highest positive correlation with survival is the sex and the higest negative correlation with the survival is the age"}}