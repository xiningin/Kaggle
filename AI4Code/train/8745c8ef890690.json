{"cell_type":{"4967c3b0":"code","b00e9382":"code","49667bb0":"code","307631a4":"code","ccf5134b":"code","ed062767":"code","aec3dc0c":"code","8aeb6d0a":"code","a510840d":"code","fdb608f8":"code","91205d6d":"code","7b934bab":"code","9a21933f":"code","e441dea1":"code","70979457":"code","8550da4a":"code","db9dca46":"code","4c61ffa9":"code","196fe9a7":"code","cfdb972a":"code","4a4eae4c":"markdown","fe7a1097":"markdown","db357222":"markdown","28b6302a":"markdown","825f6f45":"markdown","bedfebc5":"markdown"},"source":{"4967c3b0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))\n","b00e9382":"# importing the keras libraries and packages\nfrom keras.layers import Dense\nfrom keras.models import Sequential\nfrom tensorflow import keras\nimport tensorflow as tf\n# Helper libraries\nimport matplotlib.pyplot as plt","49667bb0":"# File path\ntrain_data_file= \"..\/input\/fashion-mnist_train.csv\"\ntest_data_file= \"..\/input\/fashion-mnist_test.csv\"","307631a4":"# Read CSV file for Training and Testing\ntrain_data=pd.read_csv(train_data_file)\ntest_data=pd.read_csv(test_data_file)","ccf5134b":"train_data.head()","ed062767":"# plot testing data and their labels\nplt.figure(figsize=(10,10))\nfor i in range(25):\n    test_array_data=np.reshape(test_data[test_data.columns[1:]].iloc[i].values\/255,(28,28))\n    plt.subplot(5,5,i+1)\n    plt.title('Lables{}'.format(test_data['label'].iloc[i]))\n    plt.imshow(test_array_data,'gray')\nplt.tight_layout() ","aec3dc0c":"# initialising the ANN\nclassifier=Sequential()","8aeb6d0a":"# hidden layer or fully connected layer\nclassifier.add(Dense(units=397,kernel_initializer='uniform', activation='relu',input_shape=(784,)))\nclassifier.add(Dense(units=397,kernel_initializer='uniform', activation='relu'))\n# output layer\nclassifier.add(Dense(units=10, kernel_initializer='uniform',activation='softmax'))","a510840d":"classifier.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])","fdb608f8":"def get_features_labels(df):\n    features=df.values[:,1:]\/255\n    labels=df['label'].values\n    return features, labels","91205d6d":"train_features, train_labels= get_features_labels(train_data)\ntest_features, test_labels= get_features_labels(test_data)","7b934bab":"train_labels.shape","9a21933f":"train_labels=tf.keras.utils.to_categorical(train_labels)\ntest_labels=tf.keras.utils.to_categorical(test_labels)","e441dea1":"train_labels.shape","70979457":"EPOCHS=2\nBATCH_SIZE=128\nclassifier.fit(train_features,train_labels,batch_size=BATCH_SIZE,epochs=EPOCHS)","8550da4a":"predictions=classifier.predict(test_features)","db9dca46":"test_loss, test_acc=classifier.evaluate(test_features,test_labels)","4c61ffa9":"print(test_acc)","196fe9a7":"class_names = ['T-shirt\/top', 'Trouser', 'Pullover', 'Dress', 'Coat', \n               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']","cfdb972a":"plt.figure(figsize=(10,10))\nfor i in range(100):\n    pred_label = np.argmax(predictions[i])\n    pred_name = class_names[pred_label]\n    test_array_data=np.reshape(test_data[test_data.columns[1:]].iloc[i].values\/255,(28,28))\n    plt.subplot(10,10,i+1)\n    plt.title(pred_name)\n    plt.imshow(test_array_data,'gray')\nplt.tight_layout() \n    ","4a4eae4c":"# convert labels to one hot encoding","fe7a1097":"# compiling the ANN","db357222":"# fitting the ANN to the training set","28b6302a":"# preprocessing the data","825f6f45":"# making the predictions and evaluating the model","bedfebc5":"# setup layers"}}