{"cell_type":{"9caa7a69":"code","cdff95e3":"code","fb113732":"code","55794e8b":"code","ba7f9f54":"code","cde205d3":"code","082bd178":"code","5789dbae":"code","e96cef0c":"code","7c87f106":"code","3b81fb8b":"code","2c855da0":"code","028c877a":"code","69df27f9":"code","d67d5bb6":"code","83e71906":"code","e9eb22e2":"code","b1fcbca0":"markdown","0e4d6aa9":"markdown","3b0e9f7f":"markdown","3a451ed5":"markdown","d16bc6f6":"markdown","b40f47b9":"markdown","210b7441":"markdown","d9966684":"markdown","01ca704c":"markdown","2611f28a":"markdown","72d537a8":"markdown"},"source":{"9caa7a69":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cdff95e3":"data = pd.read_csv('\/kaggle\/input\/predict-test-scores-of-students\/test_scores.csv')\ndata.head(5)","fb113732":"pd.crosstab(data['school_setting'],data['school_type'], normalize='index')","55794e8b":"pd.crosstab(data['school_type'],data['lunch'], normalize='index')","ba7f9f54":"pd.pivot_table(data, values='posttest', index=['school_type'],\n                    columns=['lunch'], aggfunc=np.mean)","cde205d3":"\nf, axes = plt.subplots(1, 3,figsize=(15,8))\nsns.boxplot(data=data, x='teaching_method', y='posttest', ax=axes[0])\nsns.boxplot(data=data, x='lunch', y='posttest', ax=axes[1])\nsns.boxplot(data=data, x='school_type', y='posttest', ax=axes[2])\nplt.tight_layout()\nplt.show()\n","082bd178":"f, axes = plt.subplots(1, 2,figsize=(9,8))\nsns.boxplot(data=data, x='school_setting', y='posttest', ax=axes[0])\nsns.boxplot(data=data, x='gender', y='posttest', ax=axes[1])\nplt.tight_layout()","5789dbae":"post_desc = data['posttest'].describe()\npre_desc = data['pretest'].describe()\n\ndif = post_desc['mean']-pre_desc['mean']\ndif","e96cef0c":"\nplt.figure(figsize=(10,5))\nsns.kdeplot(data=data['pretest'], shade=True, label='Pre-test')\nsns.kdeplot(data=data['posttest'], shade=True, label='Post-test')\nplt.title('Distribution of Pre and Post Tests')\nplt.axvline(x=post_desc['mean'], linestyle='--', color='orange',label='Post test mean')\nplt.axvline(x=pre_desc['mean'], linestyle='--', color='#5D8BBA',label='Pre test mean')\nplt.legend()\nplt.show()","7c87f106":"\nplt.figure(figsize=(10,5))\nsns.scatterplot(data=data, x='pretest',y='posttest', hue='school_setting', s=18)","3b81fb8b":"plt.figure(figsize=(10,5))\nplt.title('Number of students in class vs post test scores ')\nsns.boxplot(data=data, x='n_student', y='posttest', hue='school_type')\nplt.show()","2c855da0":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score\n","028c877a":"def evaluating(y_act,y_pred):\n    MAE = mean_absolute_error(y_act, y_pred)\n    MSE = mean_squared_error(y_act, y_pred)\n    r2 = r2_score(y_act, y_pred)\n    eval_values = {'MAE': round(MAE,3), 'MSE' : round(MSE,3), 'r2' : round(r2,3)}\n    print('Results:\\n Mean absolute error = ', round(MAE,3),'\\n Mean squared error = ', round(MSE,3),'\\n R2 = ', round(r2,3))\n\n    return eval_values","69df27f9":"X = data[['pretest','n_student','school_setting','school_type','teaching_method','lunch']]\nY = data[['posttest']]\nX = pd.get_dummies(X)\nX.head(3)","d67d5bb6":"Xlin = X[['pretest']]\n[x_adj, x_tst, y_adj, y_tst] = train_test_split(Xlin,Y,test_size=0.35, random_state=5)\n\nmodel_linear= LinearRegression()\nmodel_linear.fit(x_adj, y_adj)\n\ny_pred = model_linear.predict(x_tst)\n\nonly_pret_eval = evaluating(y_tst,y_pred)","83e71906":"Xlin = X[['pretest','n_student']]\n[x_adj, x_tst, y_adj, y_tst] = train_test_split(Xlin,Y,test_size=0.35, random_state=5)\n\nmodel_linear= LinearRegression()\nmodel_linear.fit(x_adj, y_adj)\n\ny_pred = model_linear.predict(x_tst)\n\npret_n_eval = evaluating(y_tst,y_pred)\n","e9eb22e2":"[x_adj, x_tst, y_adj, y_tst] = train_test_split(X,Y,test_size=0.35, random_state=5)\n\nmodel_linear= LinearRegression()\nmodel_linear.fit(x_adj, y_adj)\n\ny_pred = model_linear.predict(x_tst)\n\nmulti_eval = evaluating(y_tst,y_pred)","b1fcbca0":"In the table bellow, It's possible to see that <b>most of the students<\/b> in the dataset are from <b>public schools<\/b>.","0e4d6aa9":"<font size=\"5\"> Linear Regression model <\/font>","3b0e9f7f":"<font size=\"5\"> Thanks for reading =D <\/font>","3a451ed5":"<font size=\"3\"> Using the variables that appear to influence the post test values, from observing the different box plots. Using dummies for the qualitative variables<\/font>","d16bc6f6":"<font size=\"3\"> Making a function to print and create a dictionary with <b>errors<\/b> and <b>r2 score<\/b>: <\/font>","b40f47b9":"<font size=\"5\"> Multiple Linear Regression model <\/font>","210b7441":"<font size=\"3\"> Model using the two quantitative variables <b>pre test<\/b> and <b>number of students in class<\/b> to predict post tests.<\/font>","d9966684":"<font size=\"6\"> Models for post test scores <\/font>","01ca704c":"<font size=\"3\"> Model using the <b>following variables<\/b>:\n1. Pre test\n2. number of students in classroom\n3. School Setting\n4. School Type\n5. Teaching Method\n6. Lunch\n    <\/font>","2611f28a":"<font size=\"3\"> Using only the values of <b>pre test<\/b> to predict post test. <\/font>","72d537a8":"<font size=\"3\"> The table bellow shows some interesting information. For this dataset, the highest <b>scores<\/b> are seen for students from private schools that doesn't serve lunch. <\/font>   "}}