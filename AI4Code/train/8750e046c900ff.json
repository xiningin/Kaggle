{"cell_type":{"75158783":"code","3bec94e8":"code","0ffea91a":"code","6f7999af":"code","56c0ee14":"code","8cd9bc0e":"code","c9a8374a":"code","832d4103":"code","8471bf9c":"code","b625fd79":"code","62966b50":"code","c8902f2b":"code","40172e19":"code","63ad7304":"code","3d979c38":"code","c50d06dc":"code","6a437368":"code","9c7e7f59":"code","83262d67":"code","70d42c46":"code","68616308":"code","f5ce1787":"code","4bf93e98":"code","8c72f0c2":"code","8fb1298f":"code","539658de":"code","5d4aaee9":"code","05a99072":"code","ae5319d7":"code","2bddff09":"code","43cbcafc":"code","a79edbf5":"code","27fb5661":"code","f6404f19":"code","00482ce9":"code","e29040f6":"code","35be8a99":"code","2aedcf16":"code","8fd37b58":"code","9513bc12":"code","c318cd8c":"code","47c9369b":"code","7b7e7ffb":"code","a69c8772":"code","061d8df0":"code","5538f099":"code","dd7e2a6d":"code","bb6779a5":"code","ef0d4e48":"code","f2d061fb":"markdown","e328aad3":"markdown","89b0b029":"markdown","4e619bf9":"markdown","6c96ad13":"markdown","d9282a28":"markdown","b39306c0":"markdown","5aa98456":"markdown","f050e45a":"markdown","85b930ba":"markdown","5deab100":"markdown","1f27be64":"markdown","a31e8619":"markdown"},"source":{"75158783":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np \nimport pandas as pd ","3bec94e8":"train = pd.read_csv(\"..\/input\/train.csv\")\ntest = pd.read_csv(\"..\/input\/test.csv\")","0ffea91a":"#To view the Train data\ntrain","6f7999af":"#To view the test data\ntest","56c0ee14":"#To get the no.of columns and rows in train data\ntrain.shape","8cd9bc0e":"#To get the no.of columns and rows in test data\ntest.shape","c9a8374a":"train.columns","832d4103":"# To get the top 5 column values\ntrain.head()","8471bf9c":"train.describe()","b625fd79":"#To get the missing values\nprint(pd.isnull(train).sum())","62966b50":"sns.countplot(x='Survived',data=train)","c8902f2b":"sns.countplot(x='Survived',hue='Sex',data=train)","40172e19":"#grouping the sex and survived to get the count of the survived and not survived by sex\ntrain.groupby(['Survived','Sex'])['Survived'].count()","63ad7304":"# To get the percentage of the survived by sex\n\nprint(\"% of women survived: \" , train[train.Sex == 'female'].Survived.sum()\/train[train.Sex == 'female'].Survived.count())\nprint(\"% of men survived:   \" , train[train.Sex == 'male'].Survived.sum()\/train[train.Sex == 'male'].Survived.count())","3d979c38":"#Grouping Pclass and survived\ntrain.groupby(['Survived','Pclass'])['Survived'].count()","c50d06dc":"#To get the percentage of the survival rate wrt Pclass\nprint(\"% of Pclass 1 survived\",train[train.Pclass==1].Survived.sum()\/train[train.Pclass==1].Survived.count())\nprint(\"% of Pclass 2 survived\",train[train.Pclass==2].Survived.sum()\/train[train.Pclass==2].Survived.count())\nprint(\"% of Pclass 3 survived\",train[train.Pclass==3].Survived.sum()\/train[train.Pclass==3].Survived.count())","6a437368":"#grouping SibSp and Survived\ntrain.groupby(['Survived','SibSp'])['Survived'].count()","9c7e7f59":"print(\"% of sibsp 0 survived\",train[train.SibSp==0].Survived.sum()\/train[train.SibSp==0].Survived.count())\nprint(\"% of sibsp 1 survived\",train[train.SibSp==1].Survived.sum()\/train[train.SibSp==1].Survived.count())\nprint(\"% of sibsp 2 survived\",train[train.SibSp==2].Survived.sum()\/train[train.SibSp==2].Survived.count())","83262d67":"train.groupby(['Survived','Parch'])['Survived'].count()\n","70d42c46":"print(\"% of Parch 0 survived\",train[train.Parch==0].Survived.sum()\/train[train.Parch==0].Survived.count())\nprint(\"% of Parch 1 survived\",train[train.Parch==1].Survived.sum()\/train[train.Parch==1].Survived.count())\nprint(\"% of Parch 2 survived\",train[train.Parch==2].Survived.sum()\/train[train.Parch==2].Survived.count())","68616308":"train.groupby(['Survived','Age'])['Survived'].count()","f5ce1787":"#sorting the ages into logical categories\ntrain[\"Age\"] = train[\"Age\"].fillna(-0.5)\ntest[\"Age\"] = test[\"Age\"].fillna(-0.5)\nbins = [-1, 0, 5, 12, 18, 24, 35, 60, np.inf]\nlabels = ['Unknown', 'Baby', 'Child', 'Teenager', 'Student', 'Young Adult', 'Adult', 'Senior']\ntrain['AgeGroup'] = pd.cut(train[\"Age\"], bins, labels = labels)\ntest['AgeGroup'] = pd.cut(test[\"Age\"], bins, labels = labels)\n\n#draw a bar plot of Age vs. survival\nsns.barplot(x=\"AgeGroup\", y=\"Survived\", data=train)\nplt.show()","4bf93e98":"train.groupby(['Survived','Embarked'])['Survived'].count()","8c72f0c2":"print(\"% of Embarked c survived\",train[train.Embarked=='C'].Survived.sum()\/train[train.Embarked=='C'].Survived.count())\nprint(\"% of Embarked Q survived\",train[train.Embarked=='Q'].Survived.sum()\/train[train.Embarked=='Q'].Survived.count())\nprint(\"% of Embarked S survived\",train[train.Embarked=='S'].Survived.sum()\/train[train.Embarked=='S'].Survived.count())","8fb1298f":"train.groupby(['Survived','Fare'])['Survived'].count()","539658de":"train.groupby(['Survived','Cabin'])['Survived'].count()","5d4aaee9":"print(pd.isnull(train).sum())","05a99072":"test.describe()","ae5319d7":"test.columns","2bddff09":"train.columns","43cbcafc":"train.drop(['PassengerId','Name','Ticket','Fare','Cabin'],axis=1,inplace=True)","a79edbf5":"id=test['PassengerId']\ntest.drop(['PassengerId','Name','Ticket','Fare','Cabin'],axis=1,inplace=True)","27fb5661":"train = train.fillna({\"Embarked\": \"S\"})","f6404f19":"print(pd.isnull(train).sum())","00482ce9":"print(pd.isnull(test).sum())","e29040f6":"train","35be8a99":"import statsmodels.formula.api as sm","2aedcf16":"logit_model = sm.logit('Survived~Pclass+Sex+SibSp+Parch+Embarked+AgeGroup',data = train).fit()","8fd37b58":"logit_model.summary()","9513bc12":"logit_model.params","c318cd8c":"predictions_test=np.round(logit_model.predict(test))","47c9369b":"predictions_test","7b7e7ffb":"predict_train=np.round(logit_model.predict(train))","a69c8772":"predict_train","061d8df0":"from sklearn.metrics import accuracy_score \nAccuracy_Score = accuracy_score(train['Survived'],predict_train)","5538f099":"Accuracy_Score","dd7e2a6d":"output = pd.DataFrame({ 'PassengerId' : id, 'Survived': predictions_test})","bb6779a5":"output.to_csv('submission.csv', index=False)","ef0d4e48":"output","f2d061fb":"People who started from the Port of Embarkation C = Cherbourg are more likely to survival than others","e328aad3":"** 3)Data Analysis**","89b0b029":"By the above output people traveling alone are less likely to survive than those with 1-2 parents or children.","4e619bf9":"**2) Read In and Explore the Data**","6c96ad13":"By the above plot we can get to know that females have a much higher chance of survival than males. The Sex feature is essential in our predictions.","d9282a28":"By the above output we can get to know that Pclass 1  have a much higher chance of survival than Pclass 2 and Pclass 3. The Pclass feature is essential in our predictions.","b39306c0":"4) Data Visualization","5aa98456":"**5)Data Cleaning**","f050e45a":"Babies are more likely to survive than any other age group.","85b930ba":"**6)Model Building**","5deab100":"By the above output it is clear that people with no siblings or spouses were less  likely to survive than those with one or two. ","1f27be64":"**1)Importing the Libraries**","a31e8619":"**#Titanic Survival Predictions (Beginner)**\n\n1) ImportingLibraries\n2) Read In and Explore the Data\n3) Data Analysis\n4) Data Visualization\n5) Cleaning Data\n6) Model Building\n7)Creating Submission File\n\n**Description of the Data Fields:**\nsurvival - Survival (0 = No; 1 = Yes)\nclass - Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd)\nname - Name\nsex - Sex\nage - Age\nsibsp - Number of Siblings\/Spouses Aboard\nparch - Number of Parents\/Children Aboard\nticket - Ticket Number\nfare - Passenger Fare\ncabin - Cabin\nembarked - Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton)"}}