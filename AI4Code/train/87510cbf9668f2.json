{"cell_type":{"76c27492":"code","49eb23bd":"code","1e30e299":"code","f46b514e":"code","be500f2b":"code","e4d2bc11":"code","be176616":"code","af81daf8":"code","94b14a69":"code","23f41102":"code","25838469":"code","e1420174":"code","2779cb76":"code","843efeb2":"code","7c98bd62":"code","0aaf5e61":"code","efbba47e":"code","e626b4db":"code","a8610e0d":"code","52723a7f":"code","202db4ce":"code","945567c4":"code","3eb621b7":"code","4973c62a":"code","070c5ae6":"code","334b0dc5":"code","42893595":"code","8b6890d1":"code","26f1a270":"code","8684614b":"code","1b96daaa":"code","f383197c":"code","2d93bf2f":"code","e0ad58b1":"code","c34d461b":"code","d39d898c":"code","cd868f13":"code","a3f02f58":"code","83b31e84":"code","f9d86d7c":"code","76d6df8c":"code","fef2c0c4":"code","8df7f1c0":"code","968ef0c0":"code","f562c7f2":"code","fb964c17":"code","4395aa69":"code","48410116":"code","9eb38450":"code","b166a2bf":"code","8fdc732c":"code","8dd4dd9f":"code","e016eed9":"code","347896d0":"code","0d49700a":"code","7cd415d1":"code","b4378492":"code","397c2b3a":"code","c0870d11":"code","6b8fcfdc":"code","e50712e5":"code","3b3c494b":"code","7bbf895e":"code","c6e74afc":"code","d08f2b10":"code","3544b7c9":"code","977123ca":"code","722cdbdd":"code","584c86cf":"code","6bbe4a59":"code","79e0153d":"code","d2d473d6":"code","7459152d":"code","f93bd3fc":"code","ba5b0236":"code","7f75ab1e":"code","35fb1c4a":"code","9fe554a9":"code","782f496e":"code","f6f10793":"code","b435ff35":"code","7fc4f51f":"code","2aef8262":"code","42c99a7d":"code","b3cdcfae":"code","81b2bfdd":"code","580d1b3c":"code","ff45bcb4":"code","f81e246d":"code","da7c549c":"code","4709e706":"code","db698525":"code","e5e36d6d":"code","5b4ab754":"code","7353dbd3":"code","e048d3b8":"code","ecc12237":"code","f53d7f1b":"code","ddff0306":"code","537bcd63":"code","2068d9a3":"code","5179a9d8":"code","67da6884":"code","84e92026":"code","392e902e":"code","628e7a4b":"code","ceebdedb":"code","1c7af336":"code","696d21c7":"code","3e2b6953":"code","6ce17b7b":"code","bafd19bd":"code","c7986993":"code","b0891137":"code","1896be0e":"code","412e2ac7":"code","76de087e":"code","7d55b02f":"code","a4b5ba73":"code","827ec15a":"markdown","25d9a225":"markdown","6c704693":"markdown","15bb04e4":"markdown","68d6e893":"markdown","80d9511b":"markdown","f27506fa":"markdown","51cb198a":"markdown","3bd2e78e":"markdown","80b51af9":"markdown","4063e6a7":"markdown","43ec5a47":"markdown","8b67d292":"markdown","63340879":"markdown","57a43ec9":"markdown","e59e6bf3":"markdown","138270cd":"markdown"},"source":{"76c27492":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sns\nfrom warnings import filterwarnings \nfilterwarnings(\"ignore\")\nfrom sklearn.metrics import confusion_matrix","49eb23bd":"# Pandas sayesinde veri setimizi notebook dosyam\u0131za dahil ediyoruz.\n\ndf_original = pd.read_csv(\"..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")","1e30e299":"# Orijinal verilerimizi kaybetmemek i\u00e7in kopyas\u0131n\u0131 al\u0131p \"df\" ismini verdi\u011fimiz de\u011fi\u015fkene at\u0131yoruz.\n\ndf = df_original.copy()","f46b514e":"# \u0130lk 5 veriye bir g\u00f6z atal\u0131m.\n\ndf.head()","be500f2b":"# Son 5 veriye bir g\u00f6z atal\u0131m.\n\ndf.tail()","e4d2bc11":"# G\u00f6zlem ve de\u011fi\u015fken say\u0131m\u0131z\u0131 \u00f6\u011frenelim.\n# 299 gozlem - 13 degisken var.\n\ndf.shape","be176616":"# Degiskenlerimizi inceleyelim\n\ndf.columns","af81daf8":"# Verinin de\u011fi\u015fkenler tipleri ve bellekte kaplad\u0131\u011f\u0131 alan\n\ndf.info()","94b14a69":"# Veri \u00e7er\u00e7evemizde eksik verilerin var olup olmad\u0131\u011f\u0131na bakal\u0131m.\n\ndf.isnull().sum()","23f41102":"# Tekrarlayan de\u011ferler var m\u0131?\n\ndf.duplicated().sum()","25838469":"df.creatinine_phosphokinase.describe()","e1420174":"# Ayk\u0131r\u0131 de\u011ferleri kontrol edelim.\n# creatinine_phosphokinase de\u011fi\u015fkeninden ba\u015fl\u0131yoruz.\n\nsns.boxplot(x = df['creatinine_phosphokinase'])","2779cb76":"# creatinine_phosphokinase de\u011fi\u015fkeninin ayk\u0131r\u0131 de\u011ferleri kald\u0131ral\u0131m.\n\nq1 = df['creatinine_phosphokinase'].quantile(0.25)\nq3 = df['creatinine_phosphokinase'].quantile(0.75)\niqr = q3 - q1\ntoprange = q3 + iqr * 1.5\nbotrange = q1 - iqr * 1.5\nfor i in df.index:\n    if df.loc[i, 'creatinine_phosphokinase'] > toprange:\n        df.loc[i, 'creatinine_phosphokinase'] = toprange\n    if df.loc[i, 'creatinine_phosphokinase'] < botrange:\n        df.loc[i, 'creatinine_phosphokinase'] = botrange","843efeb2":"# Creatinine phosphokinase temizlendikten sonra\n\nsns.boxplot(x = df['creatinine_phosphokinase'])","7c98bd62":"# ejection_fraction de\u011fi\u015fkeni i\u00e7in de ayn\u0131 i\u015flemleri uygulayal\u0131m. \n\ndf.ejection_fraction.describe()","0aaf5e61":"# Ejection fraction de\u011fi\u015fkeninin ayk\u0131r\u0131 de\u011ferleri\n\nsns.boxplot(x = df['ejection_fraction'])","efbba47e":"q1 = df['ejection_fraction'].quantile(0.25)\nq3 = df['ejection_fraction'].quantile(0.75)\niqr = q3 - q1\ntoprange = q3 + iqr * 1.5\nbotrange = q1 - iqr * 1.5\nfor i in df.index:\n    if df.loc[i, 'ejection_fraction'] > toprange:\n        df.loc[i, 'ejection_fraction'] = toprange\n    if df.loc[i, 'ejection_fraction'] < botrange:\n        df.loc[i, 'ejection_fraction'] = botrange","e626b4db":"sns.boxplot(x = df['ejection_fraction'])","a8610e0d":"# platelets de\u011fi\u015fkeni ayk\u0131r\u0131 de\u011fer i\u015flemleri\n\ndf.platelets.describe()","52723a7f":"sns.boxplot(x = df['platelets'])","202db4ce":"q1 = df.platelets.quantile(0.25)\nq3 = df.platelets.quantile(0.75)\niqr = q3 - q1\ntoprange = q3 + iqr * 1.5\nbotrange = q1 - iqr * 1.5\nfor i in df.index:\n    if df.loc[i, 'platelets'] > toprange:\n        df.loc[i, 'platelets'] = toprange\n    if df.loc[i, 'platelets'] < botrange:\n        df.loc[i, 'platelets'] = botrange","945567c4":"sns.boxplot(x = df['platelets'])","3eb621b7":"# serum_creatinine de\u011fi\u015fkeni ayk\u0131r\u0131 de\u011fer i\u015flemleri\n\ndf.serum_creatinine.describe()","4973c62a":"sns.boxplot(x = df['serum_creatinine'])","070c5ae6":"q1 = df.serum_creatinine.quantile(0.25)\nq3 = df.serum_creatinine.quantile(0.75)\niqr = q3 - q1\ntoprange = q3 + iqr * 1.5\nbotrange = q1 - iqr * 1.5\nfor i in df.index:\n    if df.loc[i, 'serum_creatinine'] > toprange:\n        df.loc[i, 'serum_creatinine'] = toprange\n    if df.loc[i, 'serum_creatinine'] < botrange:\n        df.loc[i, 'serum_creatinine'] = botrange","334b0dc5":"sns.boxplot(x = df['serum_creatinine'])","42893595":"# serum_sodium de\u011fi\u015fkeni ayk\u0131r\u0131 de\u011fer i\u015flemleri\n\ndf.serum_sodium.describe()","8b6890d1":"sns.boxplot(x = df['serum_sodium'])","26f1a270":"q1 = df.serum_sodium.quantile(0.25)\nq3 = df.serum_sodium.quantile(0.75)\niqr = q3 - q1\ntoprange = q3 + iqr * 1.5\nbotrange = q1 - iqr * 1.5\nfor i in df.index:\n    if df.loc[i, 'serum_sodium'] > toprange:\n        df.loc[i, 'serum_sodium'] = toprange\n    if df.loc[i, 'serum_sodium'] < botrange:\n        df.loc[i, 'serum_sodium'] = botrange","8684614b":"sns.boxplot(x = df['serum_sodium'])","1b96daaa":"# \u0130lk 5 veriye g\u00f6z atal\u0131m.\n\ndf.head()","f383197c":"# Son 5 veriye g\u00f6z atal\u0131m.\n\ndf.tail()","2d93bf2f":"# Veri \u00e7er\u00e7evesinin de\u011fi\u015fkenler tipleri ve bellekte kaplad\u0131\u011f\u0131 alan\n\ndf.info()","e0ad58b1":"# Veri \u00e7er\u00e7evisini daha iyi g\u00f6zlemleyebilmek i\u00e7in:\n\ndf.loc[:, ['creatinine_phosphokinase', 'ejection_fraction', 'platelets', 'serum_creatinine', 'serum_sodium']].describe()","c34d461b":"# Anemi ile ilgili toplam girdi say\u0131s\u0131\n\ndf.anaemia.value_counts()","d39d898c":"# Aneminin ya\u015f de\u011fi\u015fkenine g\u00f6re da\u011f\u0131l\u0131m\u0131\n\ndf.groupby('anaemia')['age'].describe()","cd868f13":"plt.figure(figsize=(8,6))\nsns.countplot(df.anaemia,palette=['#D7223D','#27aB6B'])\nplt.title('Anaemic Patients - Anemi\\'ye Sahip Olan Hastalar')\nplt.show()","a3f02f58":"# Diyabet ile ilgili toplam girdi say\u0131s\u0131\n\ndf.diabetes.value_counts()","83b31e84":"# Diyabet'in ya\u015fa g\u00f6re da\u011f\u0131l\u0131m\u0131\n\ndf.groupby('diabetes')['age'].describe()","f9d86d7c":"# Hem diyabet hem anemi durumuna g\u00f6re hastalar\n\ndf.groupby('diabetes')['anaemia'].value_counts()","76d6df8c":"sns.countplot(df.diabetes, palette=['#D7223D','#27aB6B'])\nplt.title('Diabetic Patients - Diyabet\\'i Olan Hastalar')\nplt.show()","fef2c0c4":"# Y\u00fcksek tansiyon ile ilgili toplam girdi say\u0131s\u0131\n\ndf.high_blood_pressure.value_counts()","8df7f1c0":"# Hiper tansiyonun ya\u015fa g\u00f6re da\u011f\u0131l\u0131m\u0131\n\ndf.groupby('high_blood_pressure')['age'].describe()","968ef0c0":"# Hem y\u00fcksek tansiyon hem anemi durumuna g\u00f6re hastalar\n\ndf.groupby('high_blood_pressure')['anaemia'].value_counts()","f562c7f2":"# Hem y\u00fcksek tansiyon hem diyabeti olmas\u0131na g\u00f6re durumuna g\u00f6re hastalar\n\ndf.groupby('high_blood_pressure')['diabetes'].value_counts()","fb964c17":"sns.countplot(df.high_blood_pressure, palette=['#D7223D','#27aB6B'])\nplt.title('Blood Pressure Patients - Y\u00fcksek Tansiyon Hastalar\u0131')\nplt.show()","4395aa69":"# Cinsiyet ile ilgili toplam girdi say\u0131s\u0131\n\ndf.sex.value_counts()","48410116":"# Cinsiyetin ya\u015fa g\u00f6re da\u011f\u0131l\u0131m\u0131\n\ndf.groupby('sex')['age'].describe()","9eb38450":"# Cinsiyete g\u00f6re anemi da\u011f\u0131l\u0131m\u0131\n\ndf.groupby('sex')['anaemia'].value_counts()","b166a2bf":"# Cinsiyete g\u00f6re diyabet da\u011f\u0131l\u0131m\u0131\n\ndf.groupby('sex')['diabetes'].value_counts()","8fdc732c":"# Cinsiyete g\u00f6re hiper tansiyon da\u011f\u0131l\u0131m\u0131\n\ndf.groupby('sex')['high_blood_pressure'].value_counts()","8dd4dd9f":"sns.countplot(df.sex, palette=['#D7223D','#27aB6B'])\nplt.title('Gender of Patients - Hastalar\u0131n Cinsiyeti')\nplt.show()","e016eed9":"# Sigara i\u00e7me durumuyla ilgili t\u00fcm girdiler\n\ndf.smoking.value_counts()","347896d0":"# Sigara i\u00e7me durumunun hastalar\u0131n ya\u015f\u0131na g\u00f6re da\u011f\u0131l\u0131m\u0131\n\ndf.groupby('smoking')['age'].describe()","0d49700a":"# Sigara i\u00e7me durumuna g\u00f6re anemi durumu\n\ndf.groupby('smoking')['anaemia'].value_counts()","7cd415d1":"# Sigara i\u00e7me durumuna g\u00f6re diyabet\n\ndf.groupby('smoking')['diabetes'].value_counts()","b4378492":"# Sigara i\u00e7me durumuna g\u00f6re hiper tansiyon\n\ndf.groupby('smoking')['high_blood_pressure'].value_counts()","397c2b3a":"# Cinsiyetlere g\u00f6re sigara i\u00e7me durumlar\u0131\n\ndf.groupby('sex')['smoking'].value_counts()","c0870d11":"sns.countplot(df.smoking, palette=['#D7223D','#27aB6B'])\nplt.title('Smoker Patients - Sigara \u0130\u00e7en Hastalar')\nplt.show()","6b8fcfdc":"plt.figure(figsize=(15, 10))\nsns.heatmap(df.loc[:, ['age', 'anaemia', 'diabetes', 'high_blood_pressure', 'smoking']].corr(), annot = True)\nplt.title('Ya\u015f ile Anemi, Diyabet, Hiper Tansiyon ve Sigara \u0130\u00e7me Durumu Aras\u0131ndaki Korelasyon')\nplt.show()","e50712e5":"# \u015eimdi de cinsiyet ile anemi, diyabet, hiper tansiyon ve sigara i\u00e7me durumu aras\u0131ndaki korelasyona bakal\u0131m.\n\nplt.figure(figsize=(15, 10))\nsns.heatmap(df.loc[:, ['age', 'anaemia', 'diabetes', 'high_blood_pressure', 'smoking']].corr(), annot = True)\nplt.title('Ci ile Anemi, Diyabet, Hiper Tansiyon ve Sigara \u0130\u00e7me Durumu Aras\u0131ndaki Korelasyon')\nplt.show()","3b3c494b":"# Hastalar\u0131n hayatta olup olmad\u0131\u011f\u0131yla ilgili t\u00fcm girdiler\n\ndf.DEATH_EVENT.value_counts()","7bbf895e":"# Hastalar\u0131n hayatta olup olmamalar\u0131n\u0131n ya\u015flar\u0131na g\u00f6re da\u011f\u0131l\u0131m\u0131\n\ndf.groupby('DEATH_EVENT')['age'].describe()","c6e74afc":"# \u015eimdi de daire grafikle (pie) hastalar\u0131n ya\u015fay\u0131p ya\u015famad\u0131\u011f\u0131na g\u00f6re olan durumu inceleyelim.\n\nplt.figure(figsize=(10, 7))\ndeath_age = df.groupby('DEATH_EVENT')['age'].mean()\nmyexplode = [0.1, 0]\nplt.pie(death_age, autopct='%.1f%%', labels=['Alive', 'Dead'], explode=myexplode, shadow=True)\nplt.title('Average Ages In Death Cases')\nplt.legend(death_age, loc='upper right')\nplt.show()","d08f2b10":"# Hastalar\u0131n \u00f6l\u00fc\/diri bilgilerinin anemi'ye g\u00f6re da\u011f\u0131l\u0131m\u0131\n\ndf.groupby('DEATH_EVENT')['anaemia'].value_counts()","3544b7c9":"# \u015eimdi de bunu pie'da g\u00f6sterelim\n\nplt.figure(figsize=(10, 7))\ndeath_anae = df.groupby('DEATH_EVENT')['anaemia'].value_counts()\nmyexplode = [0.1, 0, 0.2, 0]\nplt.pie(death_anae, autopct='%.1f%%', labels=['Diri - Anemi De\u011fil', 'Diri - Anemi', '\u00d6l\u00fc - Anemi De\u011fil', '\u00d6l\u00fc - Anemi'], explode=myexplode, shadow=True)\nplt.title('Hayatta Olup Olmamas\u0131na G\u00f6re Anemi Durumu Tablosu')\nplt.legend(death_anae, loc='upper left')\nplt.show()","977123ca":"# Hastalar\u0131n hayatta olup olmama durumuna g\u00f6re diyabet da\u011f\u0131l\u0131m\u0131\n\ndf.groupby('DEATH_EVENT')['diabetes'].value_counts()","722cdbdd":"# \u015eimdi de bunu pie'da g\u00f6sterelim\n\nplt.figure(figsize=(10, 7))\ndeath_diab = df.groupby('DEATH_EVENT')['diabetes'].value_counts()\nmyexplode = [0.1, 0, 0.2, 0]\nplt.pie(death_diab, autopct='%.1f%%', labels=['Diri - Diyabet De\u011fil', 'Diri - Diyabet', '\u00d6l\u00fc - Diyabet De\u011fil', '\u00d6l\u00fc - Diyabet'], explode=myexplode, shadow=True)\nplt.title('Hayatta Olup Olmamas\u0131na G\u00f6re Diyabet Durumu Tablosu')\nplt.legend(death_diab, loc='upper left')\nplt.show()","584c86cf":"# Hastalar\u0131n hayatta olup olmama durumuna g\u00f6re hiper tansiyon durumlar\u0131\n\ndf.groupby('DEATH_EVENT')['high_blood_pressure'].value_counts()","6bbe4a59":"# Pie grafi\u011finde g\u00f6sterelim.\n\nplt.figure(figsize=(10, 7))\ndeath_hbp = df.groupby('DEATH_EVENT')['high_blood_pressure'].value_counts()\nmyexplode = [0.1, 0, 0.2, 0]\nplt.pie(death_hbp, autopct='%.1f%%', labels=['Diri - Normal Tansiyon', 'Diri - Y\u00fcksek Tansiyon', '\u00d6l\u00fc - Normal Tansiyon', '\u00d6l\u00fc - Y\u00fcksek Tansiyon'], explode=myexplode, shadow=True)\nplt.title('Hayatta Olup Olmamas\u0131na G\u00f6re Hiper Tansiyon Durumu Tablosu')\nplt.legend(death_hbp, loc='upper left')\nplt.show()","79e0153d":"# Hastalar\u0131n hayatta olup olmad\u0131\u011f\u0131na g\u00f6re sigara i\u00e7me durumlar\u0131\n\ndf.groupby('DEATH_EVENT')['smoking'].value_counts()","d2d473d6":"# Pie grafi\u011fine bakal\u0131m.\n\nplt.figure(figsize=(10, 7))\ndeath_smok = df.groupby('DEATH_EVENT')['smoking'].value_counts()\nmyexplode = [0.1, 0, 0.2, 0]\nplt.pie(death_smok, autopct='%.1f%%', labels=['Diri - Sigara \u0130\u00e7iyor', 'Diri - Sigara \u0130\u00e7iyor', '\u00d6l\u00fc - Sigara \u0130\u00e7miyor', '\u00d6l\u00fc - Sigara \u0130\u00e7iyor'], explode=myexplode, shadow=True)\nplt.title('Hayatta Olup Olmamas\u0131na G\u00f6re Sigara \u0130\u00e7me Durumu Tablosu')\nplt.legend(death_smok, loc='upper left')\nplt.show()","7459152d":"# Hastalar\u0131n hayatta olup olmamas\u0131na g\u00f6re cinsiyet da\u011f\u0131l\u0131mlar\u0131\n\ndf.groupby('DEATH_EVENT')['sex'].value_counts()","f93bd3fc":"# Pie grafi\u011fine bakacak olursak\n\nplt.figure(figsize=(10, 7))\ndeath_sex = df.groupby('DEATH_EVENT')['sex'].value_counts()\nmyexplode = [0.1, 0, 0.2, 0]\nplt.pie(death_sex, autopct='%.1f%%', labels=['Diri - Kad\u0131n', 'Diri - Erkek', '\u00d6l\u00fc - Kad\u0131n', '\u00d6l\u00fc - Erkek'], explode=myexplode, shadow=True)\nplt.title('Hastalar\u0131n Cinsiyetlerine G\u00f6re Hayatta Olup Olmama Durumlar\u0131 Tablosu')\nplt.legend(death_sex, loc='upper left')\nplt.show()","ba5b0236":"# Hastalar\u0131n hayatta olup olmad\u0131\u011f\u0131na g\u00f6re CPK enzimi ortalamas\u0131 durumu\n\ndf.groupby('DEATH_EVENT')['creatinine_phosphokinase'].mean()","7f75ab1e":"# Pie grafi\u011fini inceleyelim.\n\nplt.figure(figsize=(10, 7))\ndeath_cpk = df.groupby('DEATH_EVENT')['creatinine_phosphokinase'].mean()\nmyexplode = [0.07, 0]\nplt.pie(death_cpk, autopct='%.1f%%', labels=['Diri - Ortalama CPK', '\u00d6l\u00fc - Ortalama CPK'], explode=myexplode, shadow=True)\nplt.title('Hastalar\u0131n Hayatta Olup Olmamas\u0131na G\u00f6re CPK Enzimi Ortalamas\u0131 Oranlar\u0131')\nplt.legend(death_cpk, loc='upper right')\nplt.show()","35fb1c4a":"# Hastalar\u0131n hayatta olup olmad\u0131\u011f\u0131na g\u00f6re EF enzimi ortalamas\u0131 durumu\n\ndf.groupby('DEATH_EVENT')['ejection_fraction'].mean()","9fe554a9":"# Pie grafi\u011fi\n\nplt.figure(figsize=(10, 7))\ndeath_ef = df.groupby('DEATH_EVENT')['ejection_fraction'].mean()\nmyexplode = [0.07, 0]\nplt.pie(death_ef, autopct='%.1f%%', labels=['Diri - Ortalama EF Enzimi', '\u00d6l\u00fc - Ortama EF Enzimi'], explode=myexplode, shadow=True)\nplt.title('Hastalar\u0131n Hayatta Olup Olmad\u0131\u011f\u0131na G\u00f6re EF Enzimi Ortalamas\u0131 Oranlar\u0131')\nplt.legend(death_ef, loc='upper right')\nplt.show()","782f496e":"# Hastalar\u0131n hayatta olup olmad\u0131\u011f\u0131na g\u00f6re trombosit ortalamas\u0131 durumu\n\ndf.groupby('DEATH_EVENT')['platelets'].mean()","f6f10793":"# Pie grafi\u011fi\n\nplt.figure(figsize=(10, 7))\ndeath_plts = df.groupby('DEATH_EVENT')['platelets'].mean()\nmyexplode = [0.07, 0]\nplt.pie(death_plts, autopct='%.1f%%', labels=['Diri - Ortalama Trombosit', '\u00d6l\u00fc - Ortalama Trombosit'], explode=myexplode, shadow=True)\nplt.title('Hastalar\u0131n Hayatta Olup Olmamas\u0131na G\u00f6re Trombosit Ortalamas\u0131 Oranlar\u0131')\nplt.legend(death_plts, loc='upper right')\nplt.show()","b435ff35":"# Hastalar\u0131n hayatta olup olmad\u0131\u011f\u0131na g\u00f6re serum kreatinin ortalamas\u0131 durumu\n\ndf.groupby('DEATH_EVENT')['serum_creatinine'].mean()","7fc4f51f":"# Pie grafi\u011fi\n\nplt.figure(figsize=(10, 7))\ndeath_SC = df.groupby('DEATH_EVENT')['serum_creatinine'].mean()\nmyexplode = [0.1, 0]\nplt.pie(death_SC, autopct='%.1f%%', labels=['Diri - Ortalama Serum Kreatinin', '\u00d6l\u00fc - Ortalama Serum Kreatinin'], explode=myexplode, shadow=True)\nplt.title('Hastalar\u0131n Hayatta Olup Olmamas\u0131na G\u00f6re Serum Kreatinin Ortalamas\u0131 Oranlar\u0131')\nplt.legend(death_SC, loc='upper left')\nplt.show()","2aef8262":"# Hastalar\u0131n hayatta olup olmad\u0131\u011f\u0131na g\u00f6re serum sodyum ortalamas\u0131 durumu\n\ndf.groupby('DEATH_EVENT')['serum_sodium'].mean()","42c99a7d":"# Pie grafi\u011fi\n\nplt.figure(figsize=(10, 7))\ndeath_SS = df.groupby('DEATH_EVENT')['serum_sodium'].mean()\nmyexplode = [0.1, 0]\nplt.pie(death_SS, autopct='%.1f%%', labels=['Diri - Ortalama Serum Sodyum', '\u00d6l\u00fc - Ortalama Serum Sodyum'], explode=myexplode, shadow=True)\nplt.legend(death_SS, loc='upper right')\nplt.title('Hastalar\u0131n Hayatta Olup Olmamas\u0131na G\u00f6re Serum Sodyum Ortalamas\u0131 Oranlar\u0131')\nplt.show()","b3cdcfae":"plt.figure(figsize=(20, 15))\nsns.heatmap(df.corr(), annot=True)\nplt.title('Hastalar\u0131n Hayatta Olup Olmamas\u0131 ile Di\u011fer Fakt\u00f6rler Aras\u0131ndaki Korelasyon')\nplt.show()","81b2bfdd":"df.columns # Ozniteliklerin isimleri","580d1b3c":"# Oznitelikleri ayirma islemi yapiyoruz. Bizim ulasmak istedigimiz sonuc. DEATH_EVENT\nfeatures = ['age', 'anaemia', 'creatinine_phosphokinase', 'diabetes',\n       'ejection_fraction', 'high_blood_pressure', 'platelets',\n       'serum_creatinine', 'serum_sodium', 'sex', 'smoking', 'time']\nlabel = ['DEATH_EVENT']\nX=df[features]\ny=df[label]","ff45bcb4":"X.head()","f81e246d":"y.head()","da7c549c":"# 80 e 20 olarak verileri ayiriyoruz. 80% egitim, 20% test verisi\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, shuffle = True, random_state = 42)","4709e706":"X_train.head() # Train verimizen ornek gosterelim","db698525":"X_train.info() # 239 adet egitim gozlemimiz var.","e5e36d6d":"features1 = ['age', 'creatinine_phosphokinase', 'ejection_fraction', 'platelets', 'serum_sodium', 'time']","5b4ab754":"# scaling\nfrom sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\n\n# Gerekli degiskenlere scaling uygulanmasi\nX_train_require = sc.fit_transform(X_train[features1])\nX_test_require = sc.transform(X_test[features1])\n\n# tum degiskenlere scaling uygulanmasi\nX_train_all = sc.fit_transform(X_train)\nY_train_all = sc.fit_transform(X_train)","7353dbd3":"# 12 oznitelik scaling islemi\nX_train_all","e048d3b8":"# 6 oznitelik scaling islemi\nX_train_require","ecc12237":"# Initializing the ANN\nann = tf.keras.models.Sequential()\n# Add the input layer and first hidden layer\nann.add(tf.keras.layers.Dense(units=12, activation='relu', input_shape=X_train_all[0].shape))\n# Add the second hidden layer\nann.add(tf.keras.layers.Dense(units=8, activation='relu'))\n# Add the output layer\nann.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))","f53d7f1b":"ann.summary() # 269 ogrenilmesi gerek parametre ---\n# [12 * 12] + [12 * 8] + [8 * 1] + 12 + 8 + 1 = 269","ddff0306":"# Training ANN\n# batch size -- her epoach icerisine kactane gozlem girecegini belirler\n# toplam gozlem \/ batch size = epach icindeki gozlem sayisi\nann.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nann.fit(X_train_all, y_train, batch_size = 32, epochs = 25)","537bcd63":"# Burada epoch sayisini arttirdik ve \n# batch_size dusurerek her epoch icin gozlem sayisini cogalttik.\n\nann.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nann.fit(X_train_all, y_train, batch_size = 8, epochs = 50)","2068d9a3":"# Burada olceklendirmeli ANN olusturuldu.\n\n# Initializing the ANN\nann_r = tf.keras.models.Sequential()\n# Add the input layer and first hidden layer\nann_r.add(tf.keras.layers.Dense(units=12, activation='relu', input_shape=X_train_require[0].shape))\n# Add the second hidden layer\nann_r.add(tf.keras.layers.Dense(units=8, activation='relu'))\n# Add the output layer\nann_r.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))","5179a9d8":"# Training ANN\nann_r.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nann_r.fit(X_train_require, y_train, batch_size = 32, epochs = 25)","67da6884":"# Training ANN\nann_r.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nann_r.fit(X_train_require, y_train, batch_size = 8, epochs = 50)","84e92026":"# Cikis katmanindaki aktivasyon fonksiyonu degistirildi ve 8 birimlik gizli katman eklendi.\n# Olceklendirmesiz veriler ile olusturuldu.\n\n# Initializing the ANN\nann2 = tf.keras.models.Sequential()\n# Add the input layer and first hidden layer\nann2.add(tf.keras.layers.Dense(units=12, activation='relu', input_shape=X_train_all[0].shape))\n# Add the second hidden layer\nann2.add(tf.keras.layers.Dense(units=8, activation='relu'))\n# Add the third hidden layer\nann2.add(tf.keras.layers.Dense(units=8, activation='sigmoid'))\n# Add the output layer\nann2.add(tf.keras.layers.Dense(units=1, activation='softmax'))","392e902e":"ann2.summary() # 341 ogrenilmesi gereken parametre olustu.","628e7a4b":"ann2.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nann2.fit(X_train_all, y_train, batch_size = 32, epochs = 25)","ceebdedb":"ann2.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nann2.fit(X_train_all, y_train, batch_size = 8, epochs = 50)","1c7af336":"# Cikis katmanindaki aktivasyon fonksiyonu degistirildi ve 8 birimlik gizli katman eklendi.\n\n# Olceklendirmeli ANN\n\n# Initializing the ANN\nann2_r = tf.keras.models.Sequential()\n# Add the input layer and first hidden layer\nann2_r.add(tf.keras.layers.Dense(units=12, activation='relu', input_shape=X_train_require[0].shape))\n# Add the second hidden layer\nann2_r.add(tf.keras.layers.Dense(units=8, activation='relu'))\n# Add the third hidden layer\nann2_r.add(tf.keras.layers.Dense(units=8, activation='sigmoid'))\n# Add the output layer\nann2_r.add(tf.keras.layers.Dense(units=1, activation='softmax'))","696d21c7":"ann2_r.summary() # 269 ogrenilmesi gereken parametre. Yukaridakinden az cikmasinin giris katmaninin azalmasindan.","3e2b6953":"ann2_r.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nann2_r.fit(X_train_require, y_train, batch_size = 32, epochs = 25)","6ce17b7b":"ann2_r.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nann2_r.fit(X_train_require, y_train, batch_size = 8, epochs = 50)","bafd19bd":"# Olceklendirmesiz ANN\n\nann3 = tf.keras.models.Sequential()\n\nann3.add(tf.keras.layers.Dense(units=12, activation='relu', input_shape=X_train_all[0].shape))\nann3.add(tf.keras.layers.Dense(units=8, activation='relu'))\nann3.add(tf.keras.layers.Dense(units=8, activation='relu'))\nann3.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))","c7986993":"ann3.summary()","b0891137":"ann3.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nann3.fit(X_train_all, y_train, batch_size = 32, epochs = 25)","1896be0e":"ann3.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nann3.fit(X_train_all, y_train, batch_size = 8, epochs = 50)","412e2ac7":"# Olceklendirmeli ANN\n\nann3_r = tf.keras.models.Sequential()\nann3_r.add(tf.keras.layers.Dense(units=12, activation='relu', input_shape=X_train_require[0].shape))\nann3_r.add(tf.keras.layers.Dense(units=8, activation='relu'))\nann3_r.add(tf.keras.layers.Dense(units=8, activation='relu'))\nann3_r.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))","76de087e":"ann3_r.summary()","7d55b02f":"ann3_r.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nann3_r.fit(X_train_require, y_train, batch_size = 32, epochs = 25)","a4b5ba73":"ann3_r.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nann3_r.fit(X_train_require, y_train, batch_size = 8, epochs = 50)","827ec15a":"Tum sonuclar incelendiginde; Her epoch icin verdigimiz gozlem sayisinin dogrulukta etkisi yuksek.\nEpoch sayisinin artmasida dogruluk oraninin artmasini sagliyor.\n\nCikis katmannda aktivasyon fonksiyonu olarak \"sigmoid\" kullanmak dogrulugu cok buyuk oranda arttiriyor.\n\"softmax\" fonk. 0.3 civarinda dogruluk verirken \"sigmoid\" 0.8 ustunde sonuclar veriyor.\n\nGizli katman kullanilmasi; Olceklendirmesi veride 0.01 lik bir artis saglarken olceklendirmeli veride epoch sayisinin 25 oldugu durumda dusuk sonuc vermis fakat epoch sayisinin 50 oldugu durumda 0.01 li kartis saglamistir.\n\nTum bu veriler incelendiginde en iyi sonucun Epoch sayisinin yuksek, batch_size dusuk, ve olceklendirmeli veri kullanildiginda daha iyi sonuc verdigidir. Gizli katman sayisinin fazla olmasi da iyi sonuc verir.","25d9a225":"Cinsiyet de boolean olarak tutulmu\u015f. (0 = Kad\u0131n, 1 = Erkek)","6c704693":"Diyabet de anemi gibi boolean olarak tutulmu\u015f. (0 = Diyabet De\u011fil, 1 = Diyabet)","15bb04e4":"# Veri Ke\u015ffi","68d6e893":"Son olarak da hastalar\u0131n hayatta olup olmamas\u0131 ile di\u011fer fakt\u00f6rlerin korelasyonuna bakal\u0131m.","80d9511b":"age = Hastan\u0131n ya\u015f\u0131\n\n---\n\nanaemia = Hemoglobinlerin azalmas\u0131 durumu (anemi - kans\u0131zl\u0131k)\n\n---\n\ncreatinine_phosphokinase = Kandaki CPK enzimi seviyesi (mcg\/L)\n\n---\n\ndiabetes = Hasta ayr\u0131ca \u015feker hastal\u0131\u011f\u0131na sahip mi?\n\n---\n\nejection_fraction = Her kas\u0131lmada kalpten \u00e7\u0131kan kan\u0131n y\u00fczde olarak kar\u015f\u0131l\u0131\u011f\u0131\n\n---\n\nhigh_blood_pressure = Hastada y\u00fcksek tansiyon (hiper tansiyon) olup olmad\u0131\u011f\u0131 (bool)\n\n---\n\nplatelets = Mililitre ba\u015f\u0131na trombosit miktar\u0131\n\n---\n\nserum_creatinine = Kandaki serum kreatinin d\u00fczeyi (mg\/dL)\n\n---\n\nserum_sodium = Kandaki serum sodyum seviyesi (mEq\/L)\n\n---\n\nsex = Cinsiyet (0 = Female (Kad\u0131n) \/ 1 = Male (Erkek))\n\n---\n\nsmoking = Hastan\u0131n sigara i\u00e7ip i\u00e7medi\u011fi (bool)\n\n---\n\ntime = G\u00f6zlemlenen zaman periyodu (g\u00fcn olarak)\n\n---\n\nDEATH_EVENT = Hastan\u0131n g\u00f6zlem esnas\u0131nda \u00f6l\u00fcp \u00f6lmedi\u011fi (bool)","f27506fa":"# \u00d6l\u00fcm Durumlar\u0131","51cb198a":"Y\u00fcksek tansiyon da boolean olarak tutuluyor. (0 = Hiper Tansiyon Yok, 1 = Hiper Tansiyon Var)","3bd2e78e":"Bir \u00f6nceki h\u00fccrede g\u00f6r\u00fcld\u00fc\u011f\u00fc gibi t\u00fcm veri tiplerimiz s\u00fcrekli (say\u0131sal) veri tiplerinden olu\u015fmaktad\u0131r.","80b51af9":"# Veri Temizli\u011fi","4063e6a7":"##### ANN Olusturulmasi;\nTum oznitelikler input katmaninda kullanildi. 12 ve 8 olmaz uzere iki tane gizli katman eklendi ve output icin 1 katman eklendi.","43ec5a47":"Hastalar\u0131n sigara i\u00e7me durumu da bool olarak kaydedilmi\u015f. (0 = Sigara \u0130\u00e7miyor, 1 = Sigara \u0130\u00e7iyor)","8b67d292":"Hastalar\u0131n anemi durumuna bakal\u0131m. (Bool olarak tutuluyor. 0 = Anemi De\u011fil, 1 = Anemi)","63340879":"# Model Building","57a43ec9":"\u015eimdi korelasyona bakabiliriz. \u00d6nce ya\u015f ile anemi, diyabet, hiper tansiyon ve sigara i\u00e7me durumuna g\u00f6re olan korelasyonu inceleyelim.","e59e6bf3":"Yukaridaki sonuclara baktigimizda cikis katmaninin \"softmax\" olarak degistirilmesi dogruluk oranlarini ciddi miktarda dusurdu.\n\n- Asagida tekrardan cikis katmanini \"sigmoid\" yapalim ve 8 birimlik aktivasyon fonksiyonu \"relu\" olan gizli katmani ekleyip inceleyelim.","138270cd":"\u00d6l\u00fcm durumlar\u0131 da veri \u00e7er\u00e7evesinde boolean olarak tutuluyor. (0 = Hasta Ya\u015f\u0131yor, 1 = Hasta Hayat\u0131n\u0131 Kaybetti)"}}