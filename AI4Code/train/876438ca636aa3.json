{"cell_type":{"d5bcd140":"code","28a798e6":"code","647116ba":"code","0356abb9":"markdown","ee1e81f8":"markdown","4cfa89ba":"markdown"},"source":{"d5bcd140":"# Import the dataset \nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# List the input files\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# gics dataframe\ngics = pd.read_csv(\"\/kaggle\/input\/gics-global-industry-classification-standard\/gics-map-2018.csv\")\n\n# Test, to see if it is working\ngics[gics[\"SubIndustry\"] == \"Tobacco\"]\n","28a798e6":"# Import Packages\nimport bs4 as bs\nimport requests \nimport pandas as pd\nimport re\n\nwiki_url = \"https:\/\/en.wikipedia.org\/wiki\/List_of_S%26P_500_companies\"\n\ndef get_sp500_tickers():\n  resp = requests.get(wiki_url)\n  soup = bs.BeautifulSoup(resp.text, \"lxml\")\n  table = soup.find('table', {'id': 'constituents'})\n  tickers = []\n  for row in table.findAll('tr')[1:]:\n    #print(row.find_all('a'))\n    \n    ticker = [t.text.strip() for t in row.find_all('td')]\n    for link in row.findAll('a'):\n        ticker.append(link.get('href'))\n    tickers.append(ticker)\n   \n  return tickers\n\n\ndata = get_sp500_tickers()\n\n# Keep only 14 columns\ndata = [row[0:13] for row in data]\n\n# Create Pandas dataframe\ncolumns = [\"Ticker\", \"CompanyName\", \"Reports\", \"Sector\", \"SubIndustry\", \"HQLocation\", \"DateFirstAdded\", \"CIK\", \"FoundedYear\", \"QuoteURL\", \"WikiPage\", \"EDGARURL\", \"HQLocationWikiPage\"]\ndf = pd.DataFrame(data=data, columns=columns)\n\n# Remove \"Reports\" column because it only has the text \"reports\" \ndf = df.drop('Reports', axis=1)\n\nprint(len(df))\n#print(df)\n\n","647116ba":"# Add gics code column\ngics_df = pd.DataFrame()\nfor i in range(0, len(df)):\n    gics_row = gics[gics[\"SubIndustry\"] == df.loc[i,\"SubIndustry\"]]\n    if len(gics_row) != 1:\n        print(f\"**** Error in index {i}\\n\\n\", df.loc[i])\n    gics_df = pd.concat([gics_df, gics_row], ignore_index=True)\n\n\nfor col in gics_df.columns:\n    columns.append(col)\n    \n#columns\n\nsp500_df=pd.concat([df, gics_df], axis=1)\nsp500_df\n\nsp500_df.to_csv('sp500-with-gics.csv', index = True) ","0356abb9":"# Merge S&P500 with the gics","ee1e81f8":"# Objective\n\nThe goal of this notebook is to get [GICS](https:\/\/www.msci.com\/gics) (Global Industry Clsasification Standard) of the list of companies of the S&P 500.\n\nIn order to do that, we will use the [GICS dataset](https:\/\/www.kaggle.com\/merlos\/gics-global-industry-classification-standard). and the list of SP500 from Wikipedia, which already includes the \"sub-industry\" name.\n\n","4cfa89ba":"# Get the list of S&P 500\n\nIn order to do that we will scrap the wikipedia page of the S&P500."}}