{"cell_type":{"b19bebe5":"code","eea5b15a":"code","124f3531":"code","b91f3dc8":"code","5e8e767a":"code","27f4f596":"code","12b3bc09":"code","77d1f493":"code","0bdef78e":"code","d80daa0d":"code","8bb5dba6":"markdown","1b07ea09":"markdown","815a7444":"markdown","2ae8ea4f":"markdown","1cdc8f8b":"markdown"},"source":{"b19bebe5":"import tensorflow as tf","eea5b15a":"train_path = \"..\/input\/chest-xray-pneumonia\/chest_xray\/train\"\nval_path = \"..\/input\/chest-xray-pneumonia\/chest_xray\/val\"\ntest_path = \"..\/input\/chest-xray-pneumonia\/chest_xray\/test\"","124f3531":"train_datagen = tf.keras.preprocessing.image.ImageDataGenerator(\n    rescale=1.\/255,\n    horizontal_flip=True,\n    zoom_range=0.2 )\n\nval_datagen = tf.keras.preprocessing.image.ImageDataGenerator(\n    rescale=1.\/255,\n    horizontal_flip=True,\n    zoom_range=0.2 )\n\ntest_datagen = tf.keras.preprocessing.image.ImageDataGenerator(\n    rescale=1.\/255 )\n\ntrain_generator = train_datagen.flow_from_directory(\n    train_path,\n    batch_size=128,\n    target_size=(220,220),\n    color_mode=\"rgb\",\n    class_mode=\"binary\",\n    shuffle=True,\n    seed=123,\n    subset=\"training\")\n\nval_generator = val_datagen.flow_from_directory(\n    val_path,\n    batch_size=4,\n    target_size=(220,220),\n    color_mode=\"rgb\",\n    class_mode=\"binary\",\n    shuffle=True,\n    seed=123 )\n\ntest = test_datagen.flow_from_directory(\n    test_path,\n    batch_size=16,\n    target_size=(220,220),\n    color_mode=\"rgb\",\n    class_mode=\"binary\" )","b91f3dc8":"from keras.layers import Flatten,Dense,BatchNormalization,Dropout,LeakyReLU,GlobalAveragePooling2D\nfrom keras.optimizers import Adam\nfrom keras.losses import BinaryCrossentropy\nfrom keras.applications import ResNet50V2\nfrom keras import Sequential","5e8e767a":"resnet = ResNet50V2(\n    weights=\"imagenet\",\n    input_shape=(220,220,3),\n    include_top=False )\n\nfor layer in resnet.layers:   # bu katmanlar zaten e\u011fitilmi\u015f oldu\u011fu i\u00e7in buradaki d\u00fc\u011f\u00fcmleri e\u011fitime kapat\u0131yoruz.\n    layer.trainable = False","27f4f596":"model = Sequential()\nmodel.add(resnet)\nmodel.add(Flatten())\nmodel.add(Dense(128))\nmodel.add(BatchNormalization())\nmodel.add(LeakyReLU(0.2))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(512))\nmodel.add(BatchNormalization())\nmodel.add(LeakyReLU(0.2))\nmodel.add(Dropout(0.3))\nmodel.add(Dense(1,activation=\"sigmoid\"))\noptim = Adam(1e-3)\nloss = BinaryCrossentropy()\nmodel.compile(optimizer=optim,loss=loss,metrics=[\"accuracy\"])","12b3bc09":"model.summary()","77d1f493":"history = model.fit(\n    train_generator,\n    validation_data=val_generator,\n    steps_per_epoch = 20,\n    epochs=3,\n    validation_steps = 4\n    )","0bdef78e":"results = model.evaluate(test)","d80daa0d":"model.save(\".\/chest_xray_pneumonia.h5\")","8bb5dba6":"## BatchNormalization\n* Yapay sinir a\u011flar\u0131 BackPropagation ile a\u011f\u0131rl\u0131klar\u0131n\u0131 g\u00fcnceller ve \u00f6\u011frenmeye ba\u015flar. Fakat bu geri yay\u0131l\u0131m s\u0131ras\u0131nda, a\u011f\u0131 e\u011fitmek i\u00e7in olan s\u00fcreyi art\u0131ran bir durum olu\u015fur. 3. Katman 2. katmandan de\u011fer gelmesini bekler. \n* Batch normalization sayesinde a\u011fdaki katmanlar, \u00f6nceki katman\u0131n \u00f6\u011frenmesini beklemek zorunda kalmaz. E\u015f zamanl\u0131 olarak \u00f6\u011frenime olanak sa\u011flar. E\u011fitimimizin h\u0131zlanmas\u0131n\u0131 sa\u011flar.\n* Ayr\u0131ca batch norm, a\u011f\u0131n daha kararl\u0131 ve d\u00fczenli hale gelmesini sa\u011flar.\n\n## Flatten\n* Matris formundaki veriyi d\u00fczle\u015ftirmek i\u00e7in kullan\u0131l\u0131r.\n\n## Dense\n* Dense ile katmanlar aras\u0131nda n\u00f6ron ya da d\u00fc\u011f\u00fcmlerin ge\u00e7i\u015flerini sa\u011flar. Bir ba\u015fka deyi\u015fle, bir katmandan ald\u0131\u011f\u0131 n\u00f6ronlar\u0131 bir sonraki katmana girdi olarak ba\u011flanmas\u0131n\u0131 sa\u011flar.\n\n## Dropout\n* A\u011f i\u00e7indeki baz\u0131 ba\u011flant\u0131lar\u0131n kald\u0131r\u0131lmas\u0131yla  e\u011fitim performans\u0131 artaca\u011f\u0131 varsay\u0131l\u0131yor.  Dropout katman\u0131na  0 dan b\u00fcy\u00fck 1 den k\u00fc\u00e7\u00fck bir oran veriyorsunuz. Verdi\u011fimiz de\u011fer alt\u0131nda olan de\u011ferlerin d\u00fc\u011f\u00fcmlerini kapat\u0131yor.\n\n## Activation\n* ReLu,tanh,sigmoid gibi aktivasyon fonksiyonlar\u0131 i\u00e7erir, \u00e7\u0131kt\u0131 de\u011ferini aktivasyon fonksiyonuna g\u00f6re belirler.\n\n## Leaky Relu\n* Leaky ReLU\u2019da negatif de\u011ferler s\u0131f\u0131ra \u00e7ok yak\u0131nd\u0131r fakat tam s\u0131f\u0131r de\u011fildir. B\u00f6ylece t\u00fcrevinin s\u0131f\u0131r olmas\u0131 engellenmi\u015f olur. Bu durum Back Propagation esnas\u0131nda \u00f6\u011frenmenin negatif tarafta da ger\u00e7ekle\u015fece\u011fi anlam\u0131na gelir.\n\n## Softmax\n* Softmax, \u00e7\u0131kt\u0131 olarak her s\u0131n\u0131fa ait olas\u0131l\u0131k sonucu d\u00f6nd\u00fcr\u00fcr. Yani Softmax ile bir sinir a\u011f\u0131 kuruyorsan\u0131z, \u00e7\u0131kt\u0131 katman\u0131n\u0131zda hedef de\u011fi\u015fkeniniz kadar n\u00f6ron olmas\u0131 gerekli. Ne demek istedim? Diyelim ki 3 s\u0131n\u0131fl\u0131 bir tahmin yap\u0131yorsan\u0131z, [0.2,0.88,0.45] gibi her bir s\u0131n\u0131fa ait olas\u0131l\u0131\u011f\u0131 sonu\u00e7 olarak d\u00f6nd\u00fcr\u00fcr.","1b07ea09":"## batch_size\ne\u011fitim veya test s\u0131ras\u0131nda girdi bilgilerinin tek tek de\u011fil bir grup halinde e\u011fitime sokulmas\u0131n\u0131 sa\u011flamaktad\u0131r. Verilen de\u011ferler a\u011f\u0131n ba\u015far\u0131s\u0131na g\u00f6re de\u011fi\u015ftirilebilmektedir.\n\n","815a7444":"## optimizer\nW de\u011ferlerinin iyile\u015ftirilmesi i\u00e7in kullan\u0131lan optimizasyon algoritmalar\u0131n\u0131n kullan\u0131lmas\u0131n\u0131 sa\u011flamaktad\u0131r. Kullan\u0131lan \u201cadam\u201d (Adaptive Moment Estimation) algoritmas\u0131, her bir parametre i\u00e7in ger\u00e7ek zamanl\u0131 olarak \u00f6\u011frenme oran\u0131n\u0131 g\u00fcnceller.\n\n## loss\nHer e\u011fitimden sonra elde edilen de\u011ferler ile ger\u00e7ek de\u011ferler aras\u0131ndaki hata fark\u0131n\u0131n hesaplanmas\u0131d\u0131r.\n\n## metrics\nE\u011fitim a\u015famas\u0131nda her epoch sonras\u0131nda sonu\u00e7lar\u0131 de\u011ferlendirmek i\u00e7in bir s\u0131nanma i\u015flemi yapmaktad\u0131r. Kullan\u0131lan \u201caccuracy\u201d, modelin ba\u015far\u0131s\u0131n\u0131 inceleyebilmek i\u00e7in kullan\u0131lan yayg\u0131n bir metriktir.","2ae8ea4f":"## Normal xray g\u00f6r\u00fcnt\u00fcs\u00fc 1000 iken hastal\u0131kl\u0131 xray 3000 dir bu y\u00fczden veri artt\u0131r\u0131m\u0131 yap\u0131lacakt\u0131r.","1cdc8f8b":"## ImageDataGenerator, Keras'\u0131n derin \u00f6\u011frenme i\u00e7in g\u00f6r\u00fcnt\u00fc verilerinin ard\u0131\u015f\u0131k d\u00fczenlenmesi i\u00e7in ba\u015fvurdu\u011fu s\u0131n\u0131ft\u0131r. Yerel dosya sisteminize kolay eri\u015fim ve farkl\u0131 yap\u0131lardan veri y\u00fcklemek i\u00e7in birden fazla farkl\u0131 y\u00f6ntem sa\u011flar. Ayr\u0131ca olduk\u00e7a g\u00fc\u00e7l\u00fc veri \u00f6n i\u015fleme ve art\u0131rma yeteneklerine sahiptir"}}