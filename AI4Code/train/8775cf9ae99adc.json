{"cell_type":{"82a1c0e3":"code","50701579":"code","4fef1b23":"code","8173bec5":"code","a83183b6":"code","6da6e59c":"code","e12da444":"code","f703bb14":"code","89ac1805":"code","45e76f30":"code","48352f82":"code","b393f75f":"code","f9e3b649":"code","09d827ed":"code","36a4b224":"code","dcc4a755":"code","38c8d3e0":"code","bd5449a0":"code","9f24efc9":"code","76d754e9":"code","ac8d95d6":"code","8307ffa1":"code","e9c338d7":"code","ae14cfe8":"code","6769c364":"code","8862e277":"code","62242170":"code","87d07d2d":"code","a5d5d6f5":"code","7343e220":"code","6efebe50":"markdown","debdd50a":"markdown","cb6ee4f4":"markdown","c677b5f6":"markdown","9b8d67c2":"markdown","f0aacb48":"markdown","e1d24f63":"markdown","94c43a31":"markdown","8cc408bd":"markdown","71ad0cc5":"markdown","599c1f7d":"markdown","6db35509":"markdown","e1e7a38c":"markdown","4e3ce71b":"markdown","a56e5d5e":"markdown","376bb945":"markdown","baef016c":"markdown","0ca759fb":"markdown","7af177ba":"markdown","21e58b44":"markdown","cb10ac89":"markdown","2f6f0de6":"markdown","db42ecad":"markdown","8486e3f4":"markdown","9d36d159":"markdown","74ec6db8":"markdown"},"source":{"82a1c0e3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\nimport seaborn as sns\nsns.set_palette(\"rocket_r\")\nimport datetime as dt\nimport re\n%matplotlib inline","50701579":"transaction = pd.read_csv(\"..\/input\/quantium-data-analytics-virtual-experience-program\/Transactions.csv\")\nbehaviour = pd.read_csv(\"..\/input\/quantium-data-analytics-virtual-experience-program\/PurchaseBehaviour.csv\")","4fef1b23":"transaction.head()","8173bec5":"transaction.info()","a83183b6":"behaviour.head()","6da6e59c":"behaviour.info()","e12da444":"transaction.describe()","f703bb14":"transaction[transaction.PROD_QTY>100]","89ac1805":"#Dropping rows from the main data\ntransaction  = transaction.drop([69762,69763],axis=0).reset_index(drop=True)","45e76f30":"# Brand Column\ntransaction['BRAND'] = transaction['PROD_NAME'].apply(lambda x : x.strip().split()[0])\nbrands = {'Dorito':'Doritos','Infzns':'Infuzions','Snbts':'Sunbites','Grain':'Grain Wave','Red':'RRD','Smith':'Smiths','GrnWves':'Grain Wave','ww':'Woolworths','NCC':'Natural'}\ntransaction['BRAND'] = transaction['BRAND'].map(brands).fillna(transaction['BRAND'])","48352f82":"#Packet Size\ndef get_size(item):\n    size=[]\n    for i in item:\n        if i.isdigit():\n            size.append(i)\n    return int(\"\".join(size))\n\ntransaction['PACKET_SIZE'] = transaction['PROD_NAME'].apply(lambda x : get_size(x))","b393f75f":"#Product Unit Price\ntransaction['PROD_UNIT_PRICE'] = transaction['TOT_SALES']\/transaction['PROD_QTY']","f9e3b649":"#Salsa\ntransaction[transaction['PROD_NAME'].str.contains('salsa',case=False)]['PROD_NAME'].unique()","09d827ed":"salsa_index = transaction.index[(transaction.PACKET_SIZE==300) & transaction['PROD_NAME'].str.contains('salsa',case=False) & ~transaction['PROD_NAME'].str.contains('Doritos',case=False)]\n\n#Drop rows from the main data\ntransaction = transaction.drop(salsa_index,axis=0,).reset_index(drop=True)","36a4b224":"# Counts of different brands according to packet size\ntransaction.groupby(['BRAND'])['PACKET_SIZE'].value_counts()","dcc4a755":"# Brands Plot\nfig,ax = plt.subplots(figsize=(20,18))\nplt.subplot(3,1,1)\nsns.countplot(transaction['BRAND'],palette='rocket_r').set(ylabel='TRANSACTIONS')\nplt.title(\"Transactions of different Brands\")\n\n# Packet Size plot\nplt.subplot(3,1,2)\nsns.countplot(transaction['PACKET_SIZE'],palette='rocket_r').set(ylabel='TRANSACTIONS')\nplt.title(\"Transactions of different Packet Sizes\")\n\nfig.suptitle(\"Analysing PROD_NAME\",fontsize=20)","38c8d3e0":"sns.distplot(transaction['PROD_UNIT_PRICE'])","bd5449a0":"# Date\ntransaction['DATE'] = pd.to_datetime(transaction['DATE'],unit='D',origin=pd.Timestamp(\"30-12-1899\")).dt.normalize()\ntransaction['YEAR'] = pd.DatetimeIndex(transaction['DATE']).year\ntransaction['MONTH'] = pd.DatetimeIndex(transaction['DATE']).month","9f24efc9":"fig,ax = plt.subplots(figsize=(20,12))\nplt.subplot(2,2,1)\nsns.countplot(transaction['YEAR']).set(ylabel='TRANSACTIONS')\nplt.title(\"Transaction per Year\")\nplt.subplot(2,2,2)\nsns.countplot(transaction['MONTH'],palette='rocket_r').set(ylabel='TRANSACTIONS')\nplt.title(\"Transactions per Month\")\nplt.subplot(2,2,3)\nsns.countplot(transaction[transaction['YEAR']==2018]['MONTH']).set(ylabel='TRANSACTIONS')\nplt.title(\"Transactions for the Year 2018\")\nplt.subplot(2,2,4)\nsns.countplot(transaction[transaction['YEAR']==2019]['MONTH']).set(ylabel='TRANSACTIONS')\nplt.title(\"Transactions for the Year 2019\")","76d754e9":"#Total sales - date\ndate_sale = transaction.groupby('DATE').agg({'TOT_SALES':'sum'}).reset_index()\nplt.figure(figsize=(20,6))\nsns.lineplot(x=date_sale['DATE'],y=date_sale['TOT_SALES'])","ac8d95d6":"fig,ax = plt.subplots(figsize=(20,12))\nplt.subplot(2,1,1)\nsns.countplot(transaction['STORE_NBR'],order = transaction['STORE_NBR'].value_counts().head(50).index,palette='rocket_r').set(ylabel='TRANSACTIONS')\nplt.title(\"First 50 Stores with highest transactions\")\nplt.subplot(2,1,2)\nsns.countplot(transaction['STORE_NBR'],order = transaction['STORE_NBR'].value_counts().tail(50).index,palette='rocket_r').set(ylabel='TRANSACTIONS')\nplt.title(\"Last 50 Stores with lowest transactions\")\nprint(\"Max:\",transaction['STORE_NBR'].value_counts().max())\nprint(\"Min:\",transaction['STORE_NBR'].value_counts().min())","8307ffa1":"fig,ax = plt.subplots(figsize=(25,12))\nplt.subplot(2,1,1)\nsns.countplot(transaction['PROD_NBR'],order=transaction['PROD_NBR'].value_counts().head(50).index,palette='rocket_r').set(ylabel='TRANSACTIONS')\nplt.title(\"First 50 Products with highest transaction\")\nplt.subplot(2,1,2)\nsns.countplot(transaction['PROD_NBR'],order=transaction['PROD_NBR'].value_counts().tail(50).index,palette='rocket_r').set(ylabel='TRANSACTIONS')\nplt.title(\"Last 50 Products with lowest transaction\")\n\nprint(\"Max:\",transaction['PROD_NBR'].value_counts().max())\nprint(\"Min:\",transaction['PROD_NBR'].value_counts().min())","e9c338d7":"sns.countplot(behaviour['PREMIUM_CUSTOMER'])","ae14cfe8":"plt.figure(figsize=(20,5))\nsns.countplot(behaviour['LIFESTAGE'],palette='rocket_r')","6769c364":"plt.figure(figsize=(20,5))\nsns.countplot(behaviour['LIFESTAGE'],palette='rocket_r',hue=behaviour['PREMIUM_CUSTOMER'])","8862e277":"combined = transaction.merge(behaviour,how='left',on='LYLTY_CARD_NBR')\ncombined = combined[['DATE','YEAR','MONTH','STORE_NBR','TXN_ID','PROD_NBR','PROD_NAME','BRAND','PACKET_SIZE',\n                      'PROD_QTY','PROD_UNIT_PRICE','TOT_SALES','LYLTY_CARD_NBR','LIFESTAGE','PREMIUM_CUSTOMER']]\ncombined.head()","62242170":"customer_group = combined.groupby(['LIFESTAGE','PREMIUM_CUSTOMER']).agg({'TOT_SALES':'sum','PROD_QTY':'sum','LYLTY_CARD_NBR':'count'}).reset_index()\ncustomer_group['SEGMENT'] = customer_group.LIFESTAGE + '-' + customer_group.PREMIUM_CUSTOMER.apply(lambda x:x.upper())\ncustomer_group['SALES_PER_CUSTOMER'] = customer_group['TOT_SALES']\/customer_group['LYLTY_CARD_NBR']","87d07d2d":"fig,ax = plt.subplots(figsize=(20,30))\nplt.subplot(3,1,1)\ncustomer_group = customer_group.sort_values('TOT_SALES')\nsns.barplot(y='SEGMENT',x='TOT_SALES',data=customer_group,orient='h',palette='rocket_r')\nplt.title(\"Total Sales of different segments\")\n\nplt.subplot(3,1,2)\ncustomer_group = customer_group.sort_values('PROD_QTY')\nsns.barplot(y='SEGMENT',x='PROD_QTY',data=customer_group,orient='h',palette='rocket_r')\nplt.title(\"Products Purched by different segments\")\n\nplt.subplot(3,1,3)\ncustomer_group = customer_group.sort_values('SALES_PER_CUSTOMER')\nsns.barplot(y='SEGMENT',x='SALES_PER_CUSTOMER',data=customer_group,orient='h',palette='rocket_r')\nplt.title(\"Units Per Customer\")","a5d5d6f5":"young_main = combined[(combined['LIFESTAGE']=='YOUNG SINGLES\/COUPLES') & (combined['PREMIUM_CUSTOMER']=='Mainstream')]\nother = combined[(combined['LIFESTAGE']!='YOUNG SINGLES\/COUPLES') & (combined['PREMIUM_CUSTOMER']!='Mainstream')]","7343e220":"plt.subplots(figsize=(20,25))\nplt.subplot(4,1,1)\nsns.barplot(x='BRAND',y='TOT_SALES',data=young_main,palette='rocket_r')\nplt.title(\"Mainstream Young Single Couple - Brand vs Total Sales\")\nplt.subplot(4,1,2)\nsns.barplot(x='BRAND',y='TOT_SALES',data=other,palette='rocket_r')\nplt.title(\"Other Segments - SIZE vs Total Sales\")\nplt.subplot(4,1,3)\nsns.barplot(x='PACKET_SIZE',y='TOT_SALES',data=young_main,palette='rocket_r')\nplt.title(\"Mainstream Young Single Couple - Size vs Total Sales\")\nplt.subplot(4,1,4)\nsns.barplot(x='PACKET_SIZE',y='TOT_SALES',data=other,palette='rocket_r')\nplt.title(\"Other Segments - Size vs Total Sales\")","6efebe50":"### PREMIUM CUSTOMER","debdd50a":"### PROD_NAME","cb6ee4f4":"The DATE column looks pretty well distributed between years as well as months.<br>\nTransactions have been more or less same across different months.","c677b5f6":"Kettle is the highest selling brand.<br>\nPacket Size of 175g is the highest selling.","9b8d67c2":"# Conclusion\n\n* Kettle brand has the highest number of transactions.\n* Packet Size of 175 has the highest transactions.\n* Price Range between - 3-4.5 has the highest transactions.\n* Sales have mainly been due to Budget - older families, Mainstream - young singles\/couples, and Mainstream retirees shoppers.\n* We found that the high spend in chips for mainstream young singles\/couples and retirees is due to there being more of them than other buyers. \n* Mainstream, midage and young singles and couples are also more likely to pay more per packet of chips.\n","f0aacb48":"## 2. Behaviour Data","e1d24f63":"Older Families with Budget have max total sales as well as purchse more products.","94c43a31":"# Quantium Virtual Internship - Retail Strategy and Analytics\n\n\nAnalyse the data to understand the current purchasing trends and behaviours, in particular to customer segments and chip purchasing behaviour.","8cc408bd":"We see that in PROD_QTY max is 200 whereas mean is only 2. Even is TOT_SALES max is 650 whereas mean is 7.4. So we will need to check this.","71ad0cc5":"### STORE_NBR","599c1f7d":"### PROD_NBR","6db35509":"After Googling a bit, only Old and Woolworths salsa are bottled salsa. Others are just different chip flavours.So we will only remove them.","e1e7a38c":"## 1. Transaction Data","4e3ce71b":"We see that max number of transactions are done by Mainstream Young Single\/Couples.","a56e5d5e":"There are many items with Salsa and OnionDip in the PROD_NAME.But OnionDip is a chip flavour so we will look only at Salsa items.","376bb945":"### DATE","baef016c":"Lets merge the two datasets on loyalty card number.","0ca759fb":"## Data Cleaning & EDA","7af177ba":"## Load Data","21e58b44":"### LIFESTAGE","cb10ac89":"### REMOVING OUTLIERS","2f6f0de6":"Max transactions are for the price range 3-4.5","db42ecad":"**Lets Take a look at Mainstream Young Couples for further insights.**","8486e3f4":"## Importing Libraries","9d36d159":"So we will drop these rows.","74ec6db8":"## Merge Data"}}