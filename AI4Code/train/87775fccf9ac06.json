{"cell_type":{"7f411060":"code","046fb26d":"code","64d046ec":"code","179eeb10":"code","5e600b5c":"code","19472af1":"code","ac94685e":"code","5d3e56ee":"code","5d999691":"code","47ac109a":"code","da32dbe0":"code","b166c509":"code","80c0587c":"code","abe450c1":"code","dacedd0f":"code","5a3b1573":"code","59dc9549":"code","957b72b1":"code","aacbe34d":"code","1bd1f10d":"code","ec09c14c":"code","fb03f9c8":"code","482f13e8":"code","e57c91e4":"code","1dc83bab":"code","abacaa97":"code","4881a0e9":"code","bf2c5a2b":"code","390ae6b7":"code","5e08fe27":"code","05c380ca":"code","29924f2f":"code","0176ee9a":"code","fe6c8fcc":"code","d22c4362":"code","f1e90da8":"code","1d591a03":"code","b77b0779":"markdown","e12b92c7":"markdown","a63152c5":"markdown","e630c1a3":"markdown","6da73fe3":"markdown","d2e31c25":"markdown","a0a03e32":"markdown","4f58818f":"markdown","9b47b31f":"markdown","b264af8f":"markdown","89e202f8":"markdown","6b9b2a6a":"markdown","aec6a2b3":"markdown"},"source":{"7f411060":"# Age : Age of the patient\n\n# Sex : Sex of the patient\n\n# exang: exercise induced angina (1 = yes; 0 = no)\n# Angina: type of chest pain caused by reduced blood flow to the heart. \n\n# ca: number of major vessels (0-3)\n\n# cp : Chest Pain type chest pain type\n\n# Value 1: typical angina\n# Value 2: atypical angina\n# Value 3: non-anginal pain\n# Value 4: asymptomatic\n\n# trtbps : resting blood pressure (in mm Hg)\n\n# chol : cholestoral in mg\/dl fetched via BMI sensor\n\n# fbs : (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n\n# rest_ecg : resting electrocardiographic results\n\n# Value 0: normal\n# Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n# Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n\n# thalach : maximum heart rate achieved\n\n# target : 0= less chance of heart attack 1= more chance of heart attack","046fb26d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px","64d046ec":"df1 = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","179eeb10":"df1.sample(6)","5e600b5c":"df1.isnull().sum()","19472af1":"df1.info()","ac94685e":"df1.duplicated().sum()","5d3e56ee":"df1[df1.duplicated()]","5d999691":"df1 = df1.drop_duplicates()","47ac109a":"df1.duplicated().sum()","da32dbe0":"df1.sample(10)","b166c509":"from  matplotlib.colors import LinearSegmentedColormap\ncmap=LinearSegmentedColormap.from_list('rg',[\"black\", \"pink\", \"w\"], N=256) \nplt.figure(figsize = (14,10))\nsns.heatmap(df1.corr(), cmap = cmap, annot = True)\nplt.title('Correlation Matrix',pad = 15, fontsize = 15)\nplt.show()","80c0587c":"plt.figure(figsize = (10,6))\nsns.set(rc = {'axes.facecolor': 'w', 'axes.grid': False,})\n\nsex_data = df1.sex.map({1: 'Male', 0: 'Female'})\nsns.countplot(sex_data, hue = df1.output, palette = 'bright', alpha = 0.8)\nplt.title('Comparing Male and Female Patients')\nplt.show()","abe450c1":"plt.figure(figsize = (10,6))\nsns.countplot(df1.sex , palette = 'hls' , alpha = 0.8)\nplt.show()","dacedd0f":"plt.figure(figsize = (10,6))\nsns.set(rc = {'axes.facecolor': 'w', 'axes.grid': False,})\nsns.countplot(df1.output ,palette = 'bright', alpha = 0.8)\nplt.show()","5a3b1573":"df1['age'].value_counts()","59dc9549":"df1['chol'].value_counts()","957b72b1":"# Age\nsns.set(rc = {'axes.facecolor': 'black', 'axes.grid': False,})\nplt.figure(figsize = [10,6])\n\nsns.distplot(df1['age'], color='red')\nplt.title('Distribution of Ages', fontsize=15, pad = 10)\nplt.xlabel('Ages', fontsize=10)\nplt.ylabel('Count', fontsize=10)\nplt.show()","aacbe34d":"# Blood Pressure\nsns.set(rc = {'axes.facecolor': 'black', 'axes.grid': False,})\nplt.figure(figsize = [10,6])\n\nsns.distplot(df1['trtbps'], color='magenta')\nplt.title('Distribution of Blood Pressure among patients', fontsize=15, pad = 10)\nplt.xlabel('Blood Pressure', fontsize=10)\nplt.ylabel('Count', fontsize=10)\nplt.show()","1bd1f10d":"# Cholesterol rate\nplt.figure(figsize = [10,6])\n\nsns.distplot(df1['chol'], color='cyan')\nplt.title('Distribution of Cholestrol among patients', fontsize=15, pad = 10)\nplt.xlabel('Cholestrol', fontsize=10)\nplt.ylabel('Count', fontsize=10)\nplt.show()","ec09c14c":"features = ['cp','fbs','restecg','exng','slp','caa','thall']","fb03f9c8":"list(enumerate(features))","482f13e8":"df1['restecg'].value_counts()","e57c91e4":"plt.figure(figsize = (13,30))\nsns.set(rc = {'axes.facecolor': 'w', 'axes.grid': False,})\n\nfor i in enumerate(features):\n    plt.subplot(6, 2, i[0]+1)\n    sns.countplot(i[1], hue = 'output',data = df1)\nplt.show()","1dc83bab":"df1.head()","abacaa97":"X = df1.iloc[: , :-1]\nY = df1.iloc[: , -1]","4881a0e9":"from sklearn.model_selection import train_test_split\nx_train, x_test,y_train,y_test = train_test_split(X,Y,test_size = (0.3))\n","bf2c5a2b":"# Hyperparameter Tuning\nfrom sklearn import svm\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import GridSearchCV\n\nmodel_params = {\n    'svm': {\n        'model': svm.SVC(gamma='auto'),\n        'params' : {\n            'C': [1,10,20],\n            'kernel': ['rbf','linear']\n        }  \n    },\n    'random_forest': {\n        'model': RandomForestClassifier(),\n        'params' : {\n            'n_estimators': [1,5,10]\n        }\n    },\n    'logistic_regression' : {\n        'model': LogisticRegression(solver='liblinear',multi_class='auto'),\n        'params': {\n            'C': [1,5,10]\n        }\n    },\n}","390ae6b7":"scores = []\n\nfor model_name, mp in model_params.items():\n    clf =  GridSearchCV(mp['model'], mp['params'], cv=5, return_train_score=False)\n    clf.fit(x_train, y_train)\n    scores.append({\n        'model': model_name,\n        'best_score': clf.best_score_,\n        'best_params': clf.best_params_\n    })\n    \ndf2 = pd.DataFrame(scores,columns=['model','best_score','best_params'])\ndf2","5e08fe27":"model_lg = LogisticRegression(solver='liblinear', multi_class='auto')\nmodel_lg.fit(x_train, y_train)","05c380ca":"pred = model_lg.predict(x_test)\npred","29924f2f":"Y.head()","0176ee9a":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test , pred)\ncm","fe6c8fcc":"from sklearn.metrics import f1_score\nf1_score(y_test, pred)","d22c4362":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test, pred)","f1e90da8":"from sklearn.metrics import precision_score\nprecision_score(y_test, pred)","1d591a03":"from sklearn.metrics import recall_score\nrecall_score(y_test, pred)","b77b0779":"## I choose Logistic Regression to implement this ","e12b92c7":"## Training Different ML models","a63152c5":"## From the Heatmap we find that  cp(Chest Pain type),  thalach(maximum heart rate achieved) positively correlated.\n## Also exng(exercise induced angina) and oldpeak(depression induced by exercise relative to rest) are negatively correlated.","e630c1a3":"## Now Lets find relation of output with other columns","6da73fe3":"## Lets find the other metrics also","d2e31c25":"### Heart Attack Analysis and prediction","a0a03e32":"## We cant conclude that male patients are more than female patients as the total count of female patients is lesser than male patients","4f58818f":"### In this notebook I have implemented the above task. \n### I am a beginner and have implemented simple Machine Learning Algorithms to predict the Heart Attack among Patients considering various factors and information which is provided in the dataset.\n\n### Feel free to share your thoughts and opinions.","9b47b31f":"## Thankyou and Happy Analyzing!","b264af8f":"## From this plot we conclude that maximum heart attack patients are from the age of 45 to 65 (approximately).","89e202f8":"## TASK = Analysis & Predict Heart Attack based on Age, Gender, No. of disease they have and some other aspects","6b9b2a6a":"## here 0 : Female,  1 : Male","aec6a2b3":"## the people with maximum heart rate have more risk of heart attack - (thall) - maximum heart rate achieved"}}