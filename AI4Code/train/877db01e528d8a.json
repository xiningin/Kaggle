{"cell_type":{"89d7d6dc":"code","123cb736":"code","58edf308":"code","6423f357":"code","080c5e6b":"code","c78486a3":"code","601bdef7":"code","96cd6c3a":"code","4b6490fc":"code","605cdf99":"code","a22e714a":"code","74fedaed":"code","70a276f9":"code","4a839701":"code","f853618f":"code","8363036d":"code","d39b7054":"code","ab750e91":"code","0d0c8063":"code","a2563977":"code","6f9124e7":"code","1790e5d7":"markdown"},"source":{"89d7d6dc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","123cb736":"import matplotlib.pyplot as plt","58edf308":"from keras.models import Sequential\nfrom keras.layers import Input, Convolution2D,MaxPooling2D,Flatten,Dense,Dropout\nfrom keras.utils import np_utils\nimport tensorflow","6423f357":"dataframe = pd.read_csv(\"\/kaggle\/input\/fashionmnist\/fashion-mnist_train.csv\")","080c5e6b":"data = np.array(dataframe)","c78486a3":"X = data[:,1:]\ny = data[:,0]","601bdef7":"X = X\/255.0","96cd6c3a":"X.shape","4b6490fc":"y.shape","605cdf99":"np.unique(y,return_counts=True)","a22e714a":"X_train = X.reshape((-1,28,28,1))","74fedaed":"# One-hot encoded\nY_train = np_utils.to_categorical(y)\nY_train.shape","70a276f9":"for i in range(10):\n    plt.imshow(X_train[i].reshape(28,28),cmap = 'gray')\n    plt.show()","4a839701":"model = Sequential()\nmodel.add(Convolution2D(32,(3,3),activation = 'relu',input_shape = (28,28,1)))\nmodel.add(Convolution2D(64,(3,3),activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(MaxPooling2D(2,2))\nmodel.add(Convolution2D(32,(5,5),activation = 'relu'))\nmodel.add(Convolution2D(8,(5,5),activation= 'relu'))\nmodel.add(Flatten())\nmodel.add(Dense(10,activation = 'softmax'))\nmodel.summary()","f853618f":"model.compile(loss=\"categorical_crossentropy\",optimizer = 'adam',metrics = [\"accuracy\"])","8363036d":"hist = model.fit(X_train,Y_train,epochs = 20,shuffle = True,batch_size=256,validation_split=0.20)","d39b7054":"plt.figure()\nplt.plot(hist.history['loss'],'g')\nplt.plot(hist.history['val_loss'],'b')\nplt.plot(hist.history['accuracy'],'r')\nplt.plot(hist.history['val_accuracy'],'black')\nplt.show()","ab750e91":"testDataframe = pd.read_csv(\"\/kaggle\/input\/fashionmnist\/fashion-mnist_test.csv\")\ndata = np.array(testDataframe)\nX = data[:,1:]\ny = data[:,0]\nX = X\/255.0","0d0c8063":"X_test = X.reshape((-1,28,28,1))\ny_test = np_utils.to_categorical(y)","a2563977":"print(\"X_test: %d, %d  and y_test : %d, %d\" %(X_test.shape[0],X_test.shape[1],y_test.shape[0],y_test.shape[1]))","6f9124e7":"model.evaluate(X_test,y_test)","1790e5d7":"# CNN model"}}