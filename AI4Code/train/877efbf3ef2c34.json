{"cell_type":{"f5970e44":"code","c4e42d27":"code","e389a845":"code","4d8d22a4":"code","6718f311":"code","52ac3d13":"code","8add80c7":"code","5c8c417b":"code","91e04626":"code","6f931c13":"code","93134857":"code","a159d16e":"code","73e950a8":"code","c883974c":"code","ed856ccf":"code","e0cb1a4f":"code","35abdbe4":"code","6c026db6":"code","31160c51":"code","f0732559":"code","c71e873f":"code","122346c6":"code","b51fcc86":"code","5630aafc":"markdown","3dac236f":"markdown"},"source":{"f5970e44":"!pip install pyexcel_ods3\n'''\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\n<ipython-input-2-56aa90807b82> in <module>\n      1 import pandas as pd\n----> 2 from pyexcel_ods3 import get_data\n      3 import re\n      4 from pathlib import Path\n      5 import arrow\n\nModuleNotFoundError: No module named 'pyexcel_ods3\n'''","c4e42d27":"import pandas as pd\nfrom pyexcel_ods3 import get_data\nimport re\nfrom pathlib import Path\nimport arrow\nfrom ipywidgets import IntProgress\nfrom IPython.display import display","e389a845":"data = get_data(r\"..\/input\/taiwan-crime-statistics\/107\u5e7410\u670815\u65e5\u81f3107\u5e7410\u670821\u65e5\u8cc7\u6599.ods\")\ndata\nprint(type(data))\ndisplay(data)","4d8d22a4":"for k,v in data.items():\n    print(type(k))\n    display(k)\n    print(type(v))\n    display(v)","6718f311":"for k,v in data.items():\n    i = 0\n    for vi in v:\n        print(f\"v[{i}] type is {type(vi)}\")\n        display(vi)\n        i += 1","52ac3d13":"for k,v in data.items():\n    column = v[2] # \u6848\u985e\u5225\n    for i in range(0, len(column)):\n        col=  column[i]  \n        print(f\"column[{i}]  '{col}'\\t {type(col)}\\t  length {len(col)}\")    ","8add80c7":"df_column = []\ndf_column.append(\"\u65e5\u671f\")\nfor k,v in data.items():\n    column = v[2] #\u6848\u985e\u5225\n    for i in range(1, len(column)):\n        col=  column[i]  \n        print(f\"column[{i}]  {col}  length {len(col)}\")\n        if (len(col) !=0) :\n            df_column.append(col+\"\u767c\u751f\u6578\")\n            df_column.append(col+\"\u7834\u7372\u6578\")\n            print(col+\"\u767c\u751f\u6578\")\n            print(col+\"\u7834\u7372\u6578\")  \ndf_column","5c8c417b":"for k,v in data.items():\n    cases = v[3]    # \u767c\u751f\u6578\n    solvedes = v[4] # \u7834\u7372\u6578 \n    for i in range(0,len(cases)):\n        case =  cases[i]  \n        print(f\"cases[{i}]  {case}\")  \n    for i in range(0,len(solvedes)):\n        solved = solvedes[i]\n        print(f\"solveds[{i}]  {solved}\")      ","91e04626":"df_cases = []\nfor k,v in data.items():\n    cases = v[3]    # \u767c\u751f\u6578\n    solvedes = v[4] # \u7834\u7372\u6578\n    print(f\"\u767c\u751f\u6578 :\")\n    index = 0\n    for i in range(1,len(cases)):\n        case = cases[i]\n        print(f\"'{case}' {type(case)}, \", end ='')\n        if (isinstance(case, int)):\n            df_cases.insert(index*2, case) # case at index 0, 2, 4, 6 ... index*2\n            index += 1        \n    print(f\"\\n \u7834\u7372\u6578 :\")\n    inex = 0\n    for i in range(1,len(solvedes)):\n        solved = solvedes[i]\n        print(f\"'{solved}' {type(case)}, \", end = '')\n        if(isinstance(solved, int)):\n            df_cases.insert(index*2+1, solved) # # solved at index 1, 3, 5, 7 ... index*2+1\n            index += 1\n    print()\nprint(f\"{cases} \\n{solvedes} \\n\")    \ndf_cases","6f931c13":"for k,v in data.items():\n    dates = v[1][0] # \u4e2d\u83ef\u6c11\u570b107\u5e7410\u670815\u65e5\u81f3107\u5e7410\u670821\u65e5 --> \u4e2d\u83ef\u6c11\u570b107\u5e7410\u670815\u65e5 --> 10\/15\/2018\n    match = re.search(\"\u4e2d\u83ef\u6c11\u570b(\\s*\\d+\\s*)\u5e74(\\s*\\d+\\s*)\u6708(\\s*\\d+\\s*)\u65e5\", dates)\n    mg = match.groups()\n    date_str = mg[1]+\"\/\"+mg[2]+\"\/\"+ str(int(mg[0])+1911)\n    print(date_str)","93134857":"df_cases = []\nfor k,v in data.items():\n    ## Add case and solveds \n    cases = v[3]    # \u767c\u751f\u6578\n    solvedes = v[4] # \u7834\u7372\u6578\n    #print(f\"\u767c\u751f\u6578 :\")\n    index = 0\n    for i in range(1,len(cases)):\n        case = cases[i]\n        #print(f\"'{case}' {type(case)}, \", end ='')\n        if (isinstance(case, int)):\n            df_cases.insert(index*2, case) # case at index 0, 2, 4, 6 ... index*2\n            index += 1        \n    #print(f\"\\n \u7834\u7372\u6578 :\")\n    index = 0\n    for i in range(1,len(solvedes)):\n        solved = solvedes[i]\n        #print(f\"'{solved}' {type(case)}, \", end = '')\n        if(isinstance(solved, int)):\n            df_cases.insert(index*2+1, solved) # # solved at index 1, 3, 5, 7 ... index*2+1\n            index += 1\n    #print()\n    ## Add date_time at index 0\n    dates = v[1][0] # \u4e2d\u83ef\u6c11\u570b107\u5e7410\u670815\u65e5\u81f3107\u5e7410\u670821\u65e5 --> \u4e2d\u83ef\u6c11\u570b107\u5e7410\u670815\u65e5 --> 10\/15\/2018\n    match = re.search(\"\u4e2d\u83ef\u6c11\u570b(\\s*\\d+\\s*)\u5e74(\\s*\\d+\\s*)\u6708(\\s*\\d+\\s*)\u65e5\", dates)\n    mg = match.groups()\n    date_str = mg[1]+\"\/\"+mg[2]+\"\/\"+ str(int(mg[0])+1911)\n    #print(date_str)\n    df_cases.insert(0, date_str)   \n#print(f\"{cases} \\n{solvedes} \\n\")    \ndf_cases","a159d16e":"# make dataframe from one file\ndf_data=[df_cases]\ndf1 = pd.DataFrame(df_data, columns = df_column)\ndf1","73e950a8":"# list the all files of the path\nallfiles = list(Path('..\/input\/taiwan-crime-statistics\/').glob(\"*.ods\"))\nallfiles","c883974c":"def make_dfcases(file_name):\n    data = get_data(file_name)\n    df_cases = []\n    for k,v in data.items():\n        ## Add case and solveds\n        cases = v[3]    # \u767c\u751f\u6578\n        solvedes = v[4] # \u7834\u7372\u6578\n        #print(f\"\u767c\u751f\u6578 :\")\n        index = 0\n        for i in range(1,len(cases)):\n            case = cases[i]\n            #print(f\"'{case}' {type(case)}, \", end ='')\n            if (isinstance(case, int)):\n                df_cases.insert(index*2, case) # case at index 0, 2, 4, 6 ... index*2\n                index += 1        \n        #print(f\"\\n \u7834\u7372\u6578 :\")\n        index = 0\n        for i in range(1,len(solvedes)):\n            solved = solvedes[i]\n            #print(f\"'{solved}' {type(case)}, \", end = '')\n            if(isinstance(solved, int)):\n                df_cases.insert(index*2+1, solved) # # solved at index 1, 3, 5, 7 ... index*2+1\n                index += 1\n        #print()\n        ## Add date_time at index 0\n        dates = v[1][0] # \u4e2d\u83ef\u6c11\u570b107\u5e7410\u670815\u65e5\u81f3107\u5e7410\u670821\u65e5 --> \u4e2d\u83ef\u6c11\u570b107\u5e7410\u670815\u65e5 --> 10\/15\/2018\n        match = re.search(\"\u4e2d\u83ef\u6c11\u570b(\\s*\\d+\\s*)\u5e74(\\s*\\d+\\s*)\u6708(\\s*\\d+\\s*)\u65e5\", dates)\n        mg = match.groups()\n        date_str = mg[1]+\"\/\"+mg[2]+\"\/\"+ str(int(mg[0])+1911)\n        #print(date_str)\n        df_cases.insert(0, date_str)   \n    #print(f\"{cases} \\n{solvedes} \\n\")\n    return df_cases","ed856ccf":"case_list = make_dfcases(r\"..\/input\/taiwan-crime-statistics\/107\u5e7410\u670815\u65e5\u81f3107\u5e7410\u670821\u65e5\u8cc7\u6599.ods\")\nprint(case_list)","e0cb1a4f":"# transform all files data to dataframe \nallfiles = list(Path('..\/input\/taiwan-crime-statistics\/').glob(\"*.ods\"))\ndf_data = []\n# Initialize a progess bar\nprogress = IntProgress()\nprogress.max = len(allfiles)\nprogress.description = '(Init)'\ndisplay(progress)\n\nfor file in allfiles:\n    #print(str(file))\n    case = make_dfcases(str(file))\n    if (len(case) == len(df_column)):\n        df_data.append(case)\n    progress.value += 1\n    progress.description = \"Processing\"\n    \nprogress.description = 'Done'    \ndf_data","35abdbe4":"df = pd.DataFrame(df_data, columns = df_column)\ndf","6c026db6":"df.info()","31160c51":"df['\u65e5\u671f'] = pd.to_datetime(df['\u65e5\u671f'])\ndf.info()","f0732559":"df.sort_values(by=['\u65e5\u671f'], inplace=True)\ndf","c71e873f":"res = df[df['\u65e5\u671f'].between('2020-1-1', '2020-12-31')].sum()\nprint(f\"{type(res)} \\n\\nThe summary of 2020\")\ndisplay(res)","122346c6":"start = arrow.get('2020-1-1')\nend = start.shift(months=12)\nend = end.shift(days=-1)\n\nsdate = str(start.date())\nedate = str(end.date())\n\nprint(f\"{type(res)} \\n\\nThe summary from {sdate} to {edate}\")\nres = df[df['\u65e5\u671f'].between(sdate, edate)]\nres","b51fcc86":"start = arrow.get('2020-1-1')\nend = start.shift(months=11)\nprint(f\"start_date : {start.date()}  end_date{str(end.date())}\")\nsum_data = []\nfor r in arrow.Arrow.interval('month', start, end, 3):\n    start_date = str(r[0].date())\n    end_date  = str(r[1].date()) \n    print (f\"{start_date} ,{end_date} \")\n    sum1 = df[df['\u65e5\u671f'].between(start_date, end_date)].sum()\n    sum_data.append(start_date)\n    sum_data.append(sum1)\nprint(\"====================================================\")    \nfor i in sum_data:\n    print(i)\n    print(\"===================================================\")       ","5630aafc":"## \u6b77\u5e74\u72af\u7f6a\u8cc7\u6599\u7d71\u8a08\u6578\u64da\n### [dataset](https:\/\/data.gov.tw\/dataset\/13166)","3dac236f":"## Take \u5e74\u6708\u65e5\n### \u6b63\u898f\u8868\u793a\u5f0f \n\n[\u7c21\u6613 Regular Expression \u5165\u9580\u6307\u5357](https:\/\/blog.techbridge.cc\/2020\/05\/14\/introduction-to-regular-expression\/)\n\n[Regular Expression (regex)\uff0c\u8981\u6210\u70baGA\u5c08\u5bb6\u4e00\u5b9a\u8981\u61c2\u7684\u6b63\u898f\u8868\u793a\u5f0f](https:\/\/transbiz.com.tw\/regex-regular-expression-ga-%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%A4%BA%E5%BC%8F\/)\n\n[regex101](https:\/\/regex101.com\/)\n\n\\*\u3010\u661f\u865f\u3011\u6bd4\u5c0d\u524d\u4e00\u500b\u5b57\u4e32\u96f6\u6b21\u6216\u662f\u591a\u6b21\u3002 \n\n\\+ \u3010\u52a0\u865f\u3011\u81f3\u5c11\u8981\u8207\u524d\u4e00\u500b\u5b57\u6bd4\u5c0d\u4e00\u6b21\u6216\u4ee5\u4e0a\u3002\n\n( )\u3010\u62ec\u865f\u3011 \u628a\u4f60\u60f3\u8981\u627e\u7684\u76f8\u95dc\u5b57\u8a5e\u653e\u5728\u62ec\u865f\u88e1\u9762\uff0c\n\n[ ] \u3010\u4e2d\u62ec\u865f\u3011\n\u4efb\u610f\u6bd4\u5c0d\u5b57\u4e32\u4e2d\u88e1\u9762\u7684\u6bcf\u500b\u9805\u76ee\u3002\u6bd4\u5982\u4f60\u8a2d\u5b9a[DEFG]\n"}}