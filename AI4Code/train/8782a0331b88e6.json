{"cell_type":{"100b3fe1":"code","60a4189b":"code","fd02aa5d":"code","12a0c240":"code","6fc5a1e8":"code","4ec00e91":"code","c84bb83a":"code","b4e870b7":"code","e5248365":"code","f64b588c":"code","6cf7dda3":"code","e277fa63":"code","f8257cf3":"code","b1c68289":"code","00375145":"code","231b9189":"markdown","cde57274":"markdown","b97f4049":"markdown","1799f1ce":"markdown","7eb4f62e":"markdown","3ff30e4b":"markdown","7af525fb":"markdown","4f8ea94c":"markdown","bca50d39":"markdown","bf39d245":"markdown","f2c6f468":"markdown","0f7b4ab3":"markdown","8915b44c":"markdown","fd24998f":"markdown","5b188591":"markdown","39359826":"markdown","ba7fca3e":"markdown","cce38359":"markdown"},"source":{"100b3fe1":"# read in all the modules we'll use\n# included by default\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# added to this kernel\n# pip install : SpeechRecognition\nimport speech_recognition as sr\n# pip install: soundfile\nimport soundfile as sf","60a4189b":"### Using speech recognition to transcribe speech\n\n# use the audio file as the audio source\nr = sr.Recognizer()\nwith sr.AudioFile(\"..\/input\/synthetic-speech-commands-dataset\/augmented_dataset\/augmented_dataset\/bed\/1001.wav\", ) as source:\n    audio = r.record(source)  # read the entire audio file\n    \n# recognize speech using Google Speech Recognition\n# IMPORTANT NOTE: You don't want to do this too many  times because the \n# default API key is rate limited & you'll hit it pretty quick\ntry:\n    # for testing purposes, we're just using the default API key\n    # to use another API key, use `r.recognize_google(audio, key=\"GOOGLE_SPEECH_RECOGNITION_API_KEY\")`\n    # instead of `r.recognize_google(audio)`\n    print(\"Google Speech Recognition thinks you said \" + r.recognize_google(audio))\nexcept sr.UnknownValueError:\n    print(\"Google Speech Recognition could not understand audio\")\nexcept sr.RequestError as e:\n    print(\"Could not request results from Google Speech Recognition service; {0}\".format(e))","fd02aa5d":"### create a fucntion to speed this process up\n\n# our function takes in a file path & uses the default API key to \n# recognize what's in it. \n\n# IMPORTANT NOTE: You don't want to do this too many  times because the \n# default API key is rate limited & you'll hit it pretty quick\ndef recognize_speech_goog_default(file_path):\n    # use the audio file as the audio source\n    r = sr.Recognizer()\n    with sr.AudioFile(file_path, ) as source:\n        audio = r.record(source)  # read the entire audio file\n\n    # recognize speech using Google Speech Recognition\n    try:\n        # for testing purposes, we're just using the default API key\n        # to use another API key, use `r.recognize_google(audio, key=\"GOOGLE_SPEECH_RECOGNITION_API_KEY\")`\n        # instead of `r.recognize_google(audio)`\n        print(\"Google Speech Recognition thinksteach you said \" + r.recognize_google(audio))\n    except sr.UnknownValueError:\n        print(\"Google Speech Recognition could not understand audio\")\n    except sr.RequestError as e:\n        print(\"Could not request results from Google Speech Recognition service; {0}\".format(e))\n\n# use function to recognize the same file\nrecognize_speech_goog_default(\"..\/input\/synthetic-speech-commands-dataset\/augmented_dataset\/augmented_dataset\/bed\/1001.wav\")","12a0c240":"### Visualizing a spectrogram\n\n# load in the data & samplerate\ndata, samplerate = sf.read(\"..\/input\/synthetic-speech-commands-dataset\/augmented_dataset_verynoisy\/augmented_dataset_verynoisy\/bed\/1001.wav\")\n\n# plot a spectrogram\nPxx, freqs, bins, im = plt.specgram(data, Fs=samplerate)\n\n# add axis labels\nplt.ylabel('Frequency [Hz]')\nplt.xlabel('Time [sec]')","6fc5a1e8":"# Now let's write a function to produce a spectrogram\n# that looks like this with just the file path\n\n# What do we do first?","4ec00e91":"## First, write (or copy and paste) a chunk of code that you've ended up typing more than once","c84bb83a":"## Now, write a function that will make it easier for you to use that code in the future","b4e870b7":"# Your sample code goes here\n\n","e5248365":"# Your revised sample code goes here\n\n","f64b588c":"# Your code here :)\n\n","6cf7dda3":"# revised code here :)\n","e277fa63":"# import packages we'll need\nimport pandas as pd\n\n# create a dataframe with random numbers in it\ndataframe_random = pd.DataFrame(np.random.randint(low=0, high=10, size=(5,5)),\n                    columns=['a', 'b', 'c', 'd', 'e'])\n\n# Function to subtract the median from the mean for each column in a dataframe\n# (a very simple measure of skew)\ndef simple_skew(df):\n    means = df.mean(axis=None, skipna=None, level=None, numeric_only=None)\n    medians = df.median(axis=None, skipna=None, level=None, numeric_only=None)\n\n    return means - medians\n\n# see if it works\nsimple_skew(dataframe_random)","f8257cf3":"# This function will let learners test their simple measures of skew\ndef test_simple_skew(function_name):\n    # create a test dataset we know the correct answer for\n    df = pd.DataFrame({'col1': [1, 2, 3], 'col2': [10, 3.5, 6]})\n    # store that answer (figure this out in another place & copy and\n    # paste rather than writing the code to figure it out here so that \n    # students can't just copy & paste it. :)\n    expected_output = pd.Series({'col1':0, 'col2':0.5})\n    \n    # check if the output of our function is the same as the expected\n    # output & print helpful messages\n    if expected_output.equals(function_name(df)):\n        print(\"Correct! You've got the expected output.\")\n    else:\n        print(\"Looks like that's not quite it.\")","b1c68289":"# use the function to test our work\ntest_simple_skew(simple_skew)","00375145":"## Part 1: \n\n# Edit this function so that it returns a helpful message if students only \n# return the mean or the median\n\n# This function will let students test themselves\ndef test_simple_skew(function_name):\n    # create a test dataset we know the correct answer for\n    df = pd.DataFrame({'col1': [1, 2, 3], 'col2': [10, 3.5, 6]})\n    # store that answer (figure this out in another place & copy and\n    # paste rather than writing the code to figure it out here so that \n    # students can't just copy & paste it. :)\n    expected_output = pd.Series({'col1':0, 'col2':0.5})\n    \n    # check if the output of our function is the same as the expected\n    # output & print helpful messages\n    if expected_output.equals(function_name(df)):\n        print(\"Correct! You've got the expected output\")\n    else:\n        print(\"Looks like that's not quite it\")\n    # you can include additional helpful if statements here\n    # to catch common errors & steer students in the right direction\n    \n    \n## Part 2: \n\n# write a function that just returns the mean\n\n\n## Part 3:\n\n# use your function from part 2 to test your test function from part 1","231b9189":"# We Do\n____\n\nOnce you've modelled the behaviour you want students to learn, it's time for you to guide them through applying it for the first time.\n\n## Designing small, interactive exercises\n\nWriting compelling exercises can be a bit of an art, and you'll no doubt iterate on your favorites as you road test them in your classroom. That said, I do have some tips:\n\n* Only ask students to do one thing at a time. That thing should be stated in your learning goal.\n* For an in-class exercise, aim for code that it would take you no more than five minutes to write. In my experience, it takes learners approximately four times as long as write code as it does me, and students tend to burn out after twenty minutes. (Your mileage may vary, of course.)\n* Triple check that your exercise instructions are clear and correct. It's frustrating for students if they can't trust the course material & it erodes trust.\n* Don't worry about always writing exercises that have exactly one correct answer. Helping students become comfortable with ambiguity is a great service you can do them as a teacher. \n* My recommendation is to make in-class work \"low stakes\" (i.e. ungraded) so that students can feel more free to make mistakes as they get to grips with the material for the first time. \n\n\nSome ideas for exercises: \n* Give students code that has a common bug in it and ask them to fix the bug. (Remind them that it's ok to refer to outside sources like StackOverflow! :)\n* \"One missing piece\" type exercises, like we did in the first section. Give students code that is missing just one or two lines for them to fill in. You can also \n* Have students work from pseudocode. I like to write pseudocode as comments (one comment per line of code) and \n* Have students write pseudocode from actual code. (This can be especially revealing for you as a teacher since it will let you find unexpected problems with students' mental models!)\n\n\n### Exercise:\n\nYou've guessed it: you're going to write an exercise to go with the learning goal, supporting text & example code you wrote earlier. (I really like linking exercises in the same class so that students get a sense of accomplishment & building towards something.)","cde57274":"# You Do\n_____\n\nEventually, of course, you want learners to be able to work independently.  \n\n## Creating notebooks for homework assignments\n\nProviding notebooks for students to do homework can be a big time-saver because it's an environment they're already familiar with from class. However, it does present its own challenges.\n\n* You'll probably need more supporting text for homework than for in-class notebooks since you won't be there to answer questions. \n* Err on the side of less rather than more for homework. Learners have a lot on their plates & you want to make sure you respect their time. My rule of thumb: have students do something that would take me no more than 15 minutes to do. \n* If you don't already have one, consider providing a class forum for students so they can ask each other questions. (Although I've had very mixed success with forums: it really depends on the amount of comraderie the students build in class.)\n\nAlso, don't feel wedded to the notebook format. You can also give students assignments to complete on their own with whatever tools they wish. (Check out your own homework assignment at the end of the notebook for an example.)\n\n\n### Exercise\n\nDesign a homework assignment to help students solidify the learning goal you set in the \"I Do\" section above. We probably won't have time for you to write the whole exercise, but write a quick outline of the notebook. What sections will it have? How will it build on the previous exercises? Will it introduce any new material? If so, how will you ensure that students won't be lost?\n\n> Your text here.","b97f4049":"## You do:\n\nFinally, learners are ready to begin working more independently and can begin working on exercises on their own. ","1799f1ce":"# Introduction \n___\n\nThe gradual release of responsibility instructional model (also known as the I Do, We Do, You Do model)\u2014a pedagogical technique developed by Pearson and Gallagher in which students engage with material more independently over time. The basic idea is that instruction moves from a \n\n1. A focused lesson where you model the material\n2. Guided instructions where students practice applying the material alone or in groups with instructor assistance & availability\n3. Independent practice, where learners work alone, applying what they've learned\n\nSince this workshop focuses on active learning, let's work through an example of an \"I do, We do, You do\" curriculum designed around a specific learning goal:\n\n> <strong>Learning goal<\/strong>: By the time you finish this introduction, you will learn how to put a chunk of code you routinely use in a Python function. (Note: this content is designed for a fairly new coder who's using Python for scientific computing but hasn't moved much beyond the point where they're just putting everything in one long script without using functions.)\n\n## I do\n\nIn the first stage, you demonstrate the behaviour or technique you want your students to learn, explaining as you go along. For code, this means a small example of the thing you'd like them to be able to do: in this case, write a function that wraps some small piece of code and makes it easier to re-use. ","7eb4f62e":"## Reflections:\n\nTake a moment to jot down any thoughts that you have now that you've experienced the gradual release of responsibility model as a student. Did you find it helpful? What did you like best about this way of structuring content? What challenges can you see in applying it in your educational work?\n \n> Your text here\n\nOnce you've taken some time to reflect, we'll talk in small groups and then come together to share anything you found especially insightful.\n ","3ff30e4b":"## Dos and don\u2019ts for writing effective sample code\n\nOf course, if you're demonstrating a technical task for students, you also need to write example example. Here are some quick do's and don'ts for writing good example sample code.pre\n    \n### DO\n\n* Only include code for the specific task you want students to learn. If you're you want students to learn how to apply a specific type of statistical test, for example, don't also do your pre-processing in your example code. \n* Comment your heart out. Even you might not use that many comments in code for your own work, if you have a large class you're almost certain to have at least one student who's never seen whatever common thing it is that you're doing.\n* Follow best practices for your community (e.g. use a style guide, clear variable names, consistent use of white space, etc.). Students will pick up on your style and you want to make sure you teach them good habits.\n\n### DON'T\n\n* Use language like \"simple\", \"self-explanatory\" or \"just do x\". If this is the first time learners have encountered whatever-it-is you're teaching, it's probably not simple for them, and they may get discouraged if you ignore their struggles with the material\n* Try to introduce too much at once. Using active learning methods usually means that you'll end up covering less material in a class, so be prepared for a slightly slower pace. \n\n### Exercise\n\nTake a couple minutes to write example code to go with the example text you wrote in the last exercise. ","7af525fb":"## Evaluating exercises in notebooks using tests\n\nEven though I suggested you consider writing exercises without a clear right answer, sometimes that is what you actually want. If your exercise does have a single correct answer, then I would recommend using tests in your notebooks to let students check their answers.\n\nThis lets students iterate on work more independently. You also avoid a lot of the simple \"is this right?\" questions and can focus your time on students who are struggling instead.\n\nLet's work through an example to see how this might work. In this example, the students have been set an exercise to write a function that subtracts the median from the mean for each column in a dataframe to provide a very simple measure of skew. Student's work might look like this:","4f8ea94c":"## Encouraging student collaboration\n\n\nStudents can sometimes be resistant to collaboration, which can be frustrating for instructors who are trying to help their students master technical collaboration. Here are some of my strategies for encouraging students to collaborate productively.\n\n\n### Build buy in\n\nIt can be helpful to explicitly discuss why you're having students collaborate. I've found it helpful to talk about my experiences co-authoring papers to show that this isn't just busy-work: it's an important skill!\n\n### Design assignments to be fair\n\nDifferent students will put different amounts into projects, so it can be helpful for you to have a way to evaluate this.\n\n* Have students use version control for their projects & check the commit logs. That will really help you get a good sense of who used what. (Plus it's good practice for your students. :)\n* Consider pre-segmenting the work\/defining the roles in the group and having students pick which they want. So for a data science capstone, you could split the work into scoping the project\/defining the problem, finding data, preparing data for analysis, and different segments of analysis (visualization, summarization, etc.). Encourage students to work on all parts, but have one student ultimately responsible for each segment.\n\n### Have frequent check-ins\n\nAvoid procrastination and avoid end-of-term blow ups by having frequent check-ins. For groups in class, this can mean just working through the room and seeing how groups are getting on, while for long-term projects it's probably going to look more like intertrim deadlines.\n\n\n### Include self\/group evaluation\n\nTo make sure students know you hear their side of the story, have them include a  self-evaluation and evaluation for each member of the group along with the final assignment. (This can just be a rubric you have them fill out.) Don't base grades entirely on peer feedback, but if most members of a group single out a member as doing an exceptional job you might consider that in your grading. \n\n### Exercise\n\nWhat have you found helpful in encouraging collaboration? Spend a few minutes brainstorming, then meet in small groups to share tactics & resources.","bca50d39":"# Practical considerations \n___\n\nFinally, let's cover some practical considerations around using notebooks in the classroom. \n\n## Hosted notebooks versus having students download notebooks\n\nOften times, \n\nIf you're having students download notebooks: Don't \n\n* Try to get students to install everything before class (that much strain on classroom internet can be really frustrating) but know that many students won't. \n* In a longer course, plan on spending the first day getting everyone's environment set up. \n* In a shorter course or workshop, provide a virtual machine for students to download. The majority of problems that crop up are due to differences between operating systems or language\/package versions. Providing a VM will get rid of these (although it will introduce the problem of starting the VM!)\n\nIf you're using a hosted notebook:\n\n* Make sure that students sign up for the service before class. (Some services will let you use notebooks without signing in but will also erase your work.)\n* Spend some time getting to know the platform so that you can help with student \n* Make sure you will have adequate internet access in your classroom, especially if you're planning on downloading large datasets.\n\n### Options for hosted notebooks\n\nHere's a quick overview of some of the hosted notebook services available for you. (Note that these specs may change, so double check before getting your course set up.)\n\n![](https:\/\/svgshare.com\/i\/7w5.svg)\n\n\n## Pacing of material and classroom management\n\nFinally, some notes on classroom pacing. This format of teaching is much more variable than lectures, so a combination of flexibility in pacing and good time-management is a must. \n\nHere are some of my tips for keeping things on track:\n\n* Have a rough guide (to the nearest 15 minutes) for the course. I've found that course plans with any finer granularity get off-track quick enough that they're no longer useful almost immediately.\n* Make sure you have five to ten minutes at the end of class to review what you've covered so in class & give learners a sense of closure.\n* Plan on no more than three exercises an hour, and fewer if you have a discussion component. \n* To give yourself extra wiggle room, include both additional challenge exercises (in this case, the homework) and a throw-away exercise you can cut if time runs short (in this case the Encouraging Student Collaboration exercise). \n* Put more important material first. Basics first, then nuance.\n* If you know your students, pick groups that have students with different levels of comfort with the material. This will prevent the problem of having one very fast group and one very slow one.","bf39d245":"## We do:\n\nNow that learners have seen what you expect them to do, you can begin to work together to give them a chance to practice applying these skills.","f2c6f468":"# Your homework!\n____\n\nIn this workshop I've modelled teaching using the I do\/we do\/you do, but so far we've only hit \"I Do\" and \"You Do\". Now it's time for you to practice applying these concepts to your own cirriculum.\n\n1. Take one key concept or task you want your learners to be able to do. \n2. State this as a learning goal (what will students be able to do once they've finished?)\n3. Design at least two small exercises that will help students learn how to complete part of the task you put forth in your learning goal. (If you find that the smaller tasks start to drift away from your learning goal, either redesign your tasks or restate your learning goal.) Complete an example exercise yourself to model the expected behaviour, and then write the exercises to help your students \n4. Finally, design a homework exercise for your students to help them practice what you've modelled and they've practiced together. ","0f7b4ab3":"## Exercise:\n\nA big benefit of this technique is that you can include additional complexity in your tests to catch common errors & steer students in the right direction. \n\nOne thing that students might do wrong in this exercise is to return just the mean or just the median instead of subtracting them from each other. Can you modify the `test_simple_skew()` function to help students who've made this mistake?\n\nI'd recommend using a structure something like this (at least for very short exercises).\n\n```\nif something_is_true\n    do x\nelif something_else_is_true: \n    do y\nelse:\n    do z\n```","8915b44c":"# I do\n____\n\nNow that we've seen the gradual release of responsibility method in action, let's talk about how to design curriculum using this technique that will work for your teaching needs.\n\n## Balancing code examples and supporting text\n\nThere are several things to consider when deciding how much supporting text to include in your notebooks. \n \n* How will you be delivering the material? For in-person classes, less text may be better (to give students room to take their own notes) but for materials you'll be presenting on-line. \n* Will you be teaching in your learners' native language? I've found that more supporting text can be especially helpful for learners who are taking a course in their second (or third or fourth or fifth!) language. \n* Do you have a lot of references in your teaching? If you typically refer to a large number of resources while you're teaching, adding links in your notebook can help students use these resources more easily.  \n* Do you want students to refer to materials in the future? If your notebooks are more like workbooks, just for in-class exercises, then you probably don't need a lot of supporting text. If you want learners to have a single source to refer to in the future, though, (like this notebook!) you may want to include more supporting text.\n\nWriting more supporting may take longer at the front end but, if you're effective at anticipating what your students' questions might be and answering them preemptively in your supporting text, it may end up saving you time in the end.\n\nNo matter how much supporting text you choose to write, however, I'd strongly recommend including a learning goal.","fd24998f":"After getting feedback from your partner, revise your exercise & put the revision below.","5b188591":"### Exercise\n\nThink about a small computational task that you might need to teach, with about the same level of complexity as putting code into functions or making a specific type of graph. \n\nFirst, write a learning for the task. Specifically state what you'd like students to be able to do.Second, write some additional supporting text that explains what the task is, why students might need to learn it and how to do it. \n \n> Your text here\n\nNow find a partner (ideally one who is unfamiliar with the task so they can be a really good proxy student for you) and share your supporting text with them. Take a minute to read each other's text and give each other feedback. What worked well? What was unclear? Take a minute to incorporate your partner's feedback and edit your text.\n\n> Your revised text here. ","39359826":" This notebook contains supporting materials for the workshop [I Do, We Do, You Do: Supporting active learning with notebooks](https:\/\/conferences.oreilly.com\/jupyter\/jup-ny\/public\/schedule\/detail\/68277) at JupyterCon 2018. \n \n <table cellspacing=\"1\" cellpadding=\"1\" border=\"0\" width=\"100%\" bgcolor=\"#000000\">\n  <tr>\n    <td bgcolor=\"#FFFFFF\" font-size=\"30px\">\n      <h1 style=\"font-size:1.5vw\"> <strong>Learning goal<\/strong>: By the time you finish this workshop, you will be able to write a notebook to teach from that will apply the principle of \"I do, We do, You do\"\n       <\/h1>\n    <\/td>\n  <\/tr>\n<\/table>\n____\n\n\n\n### Agenda:\n\n* [Introduction](#Introduction)\n    * What is the gradual release of responsibility instructional model?\n* [Practical considerations](#Practical-considerations)\n    * Hosted notebooks versus having students download notebooks\n    * Pacing of material and classroom management\n* [I do: Direct instruction](#I-Do)\n    * Balancing code examples and supporting text\n    * Dos and don\u2019ts for writing effective sample code\n* [We do: Guided instruction](#We-Do)\n    * Designing small, interactive exercises\n    * Evaluating exercises in notebooks using tests\n* [You do: Independent practice and collaborative learning](#You-Do)\n    * Creating notebooks for homework assignments\n    * Encouraging student collaboration\n* [Your Homework!](#Your-homework!)\n    * A take-home exercise to help you apply what you've learned","ba7fca3e":"Now meet up with your partner again and give each other feedback on your sample code. What was confusing? What worked well? After going over your sample code, incorporate your partner's suggestions in some transparent revisions.","cce38359":"That looks good, but how will students know if this is correct? We can write a function that will allow them to test their work themselves.\n\nI actually recommend putting the test functions in the body of the notebook itself (if it's practical). This lets you model good coding practices & builds learners' trust in your evaluation techniques. "}}