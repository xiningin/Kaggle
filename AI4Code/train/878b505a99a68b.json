{"cell_type":{"1d530301":"code","b7bfbc82":"code","b4dd4315":"code","5aecf177":"code","52fdfd52":"code","00b81c21":"code","a34781dd":"code","df67ecd3":"code","786d4eb8":"code","777cafbc":"code","58bca431":"code","a1dbefd7":"code","2b7bcfc9":"code","407f53a5":"code","a77b0588":"code","00e83866":"code","335a818d":"code","1ab81cfc":"code","f019e337":"code","c92849f8":"code","7f81f5b0":"code","efe381e4":"code","50941551":"code","3589e189":"code","66d7c68f":"code","fa3d78a6":"code","6a132452":"code","cfaa5522":"code","33bd7d24":"code","f4b01893":"code","4df244f5":"code","f032dab5":"code","77b678d7":"code","7a4711eb":"code","a223e191":"code","5f97fab0":"code","5af5ab54":"code","eef54c59":"code","2ac0d92b":"code","f6165bcf":"code","98f3bb03":"code","f43ea4ff":"code","655d91bc":"code","18c0f673":"markdown","12569e73":"markdown","a7924553":"markdown","8d844da3":"markdown","b8558ef1":"markdown","f666b483":"markdown","fa16942e":"markdown","3a8c28b0":"markdown","89bad6bb":"markdown","ef28b8c1":"markdown","9fc0dd92":"markdown","5169a5f3":"markdown","951b485b":"markdown","c2d88f74":"markdown","938e766b":"markdown","a0154fd7":"markdown","17c27fad":"markdown","85a33324":"markdown","c7232ecd":"markdown","ea91397a":"markdown","d07341b6":"markdown","0d4d7ec9":"markdown","d1a6e130":"markdown","70ed1047":"markdown","9a18b0b7":"markdown","264009ed":"markdown"},"source":{"1d530301":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b7bfbc82":"df=pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')\ndf.head()","b4dd4315":"df.info()","5aecf177":"df.describe()","52fdfd52":"df.isna().sum()","00b81c21":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, accuracy_score, confusion_matrix\nfrom mlxtend.plotting import plot_confusion_matrix\nfrom sklearn.model_selection import GridSearchCV\n\n\n%matplotlib inline\nsns.set(rc={'figure.figsize': [12, 10]}, font_scale=1.2)","a34781dd":"sns.countplot(x=df['target'],palette='mako')\nplt.title('Count Target')\nplt.xlabel(\"Target\")\nplt.show()","df67ecd3":"sns.countplot(x=df['sex'],hue=df['target'],palette='mako')\nplt.title('which gendar have disease more ? ')\nplt.xlabel(\"gendar 0= female, 1= male \")\nplt.show()","786d4eb8":"sns.countplot(x=df['cp'],hue=df['target'],palette='mako')\nplt.title('Effect of Chest pain experienced ')\nplt.xlabel(\"cp (0: typical angina, 1: atypical angina, 2: non-anginal pain, 3: asymptomatic) \")\nplt.show()","777cafbc":"sns.countplot(x=df['fbs'],hue=df['target'],palette='mako')\nplt.title('Effect of fasting blood suger ')\nplt.xlabel(\"fasting blood suger 0= False, 1= True \")\nplt.show()","58bca431":"sns.countplot(x=df['restecg'],hue=df['target'],palette='mako')\nplt.title('Effect of fasting blood suger ')\nplt.xlabel(\"Resting electrocardiographic measurmeant (0 = normal, 1 = having ST-T wave abnormal, 2 = showing probable or definite left ventricular hypertrophy) \")\nplt.show()","a1dbefd7":"sns.countplot(x=df['exang'],hue=df['target'],palette='mako')\nplt.title('Effect of Exercise induced angina  ')\nplt.xlabel(\"Exercise induced angina  0= False, 1= True \")\nplt.show()","2b7bcfc9":"sns.countplot(x=df['slope'],hue=df['target'],palette='mako')\nplt.title('Effect of Slope  ')\nplt.xlabel(\"Slope ( 0: upsloping, 1: flat, 2: downsloping) \")\nplt.show()","407f53a5":"sns.countplot(x=df['ca'],hue=df['target'],palette='mako')\nplt.title('Effect of  major vessels  ')\nplt.xlabel(\"number of major vessels \")\nplt.show()","a77b0588":"sns.countplot(x=df['thal'],hue=df['target'],palette='mako')\nplt.title('Effect of Thalassemia  ')\nplt.xlabel(\"kind of Thalassemia(0=don't have ,1 = normal; 2 = fixed defect; 3 = reversable defect) \")\nplt.show()","00e83866":"sns.kdeplot(df[df['target']==1]['age'],color='red',label='target: Yes')\nsns.kdeplot(df[df['target']==0]['age'],color='green',label='target: No')\nplt.title('range of age and how it effected  ')\nplt.xlabel(\"age\")\nplt.show()","335a818d":"sns.kdeplot(df[df['target']==1]['trestbps'],color='red',label='target: Yes')\nsns.kdeplot(df[df['target']==0]['trestbps'],color='green',label='target: No')\nplt.title('range of resting blood pressure and how it effected  ')\nplt.xlabel(\"resting blood pressure\")\nplt.show()","1ab81cfc":"sns.kdeplot(df[df['target']==1]['chol'],color='red',label='target: Yes')\nsns.kdeplot(df[df['target']==0]['chol'],color='green',label='target: No')\nplt.title('range of Serum cholestoral  and how it effected  ')\nplt.xlabel(\"Serum cholestoral \")\nplt.show()","f019e337":"sns.kdeplot(df[df['target']==1]['thalach'],color='red',label='target: Yes')\nsns.kdeplot(df[df['target']==0]['thalach'],color='green',label='target: No')\nplt.title('range of  maximum heart rate achieved and how it effected  ')\nplt.xlabel(\" maximum heart rate achieved\")\nplt.show()","c92849f8":"sns.kdeplot(df[df['target']==1]['oldpeak'],color='red',label='target: Yes')\nsns.kdeplot(df[df['target']==0]['oldpeak'],color='green',label='target: No')\nplt.title('range of  ST depression induced and how it effected  ')\nplt.xlabel(\" ST depression induced\")\nplt.show()","7f81f5b0":"sns.heatmap(df.corr(),annot=True)\nplt.show()","efe381e4":"sns.boxplot(x=df['age'],palette='mako');","50941551":"sns.boxplot(x=df['trestbps'],palette='mako');","3589e189":"sns.boxplot(x=df['chol'],palette='mako');","66d7c68f":"sns.boxplot(x=df['thalach'],palette='mako');","fa3d78a6":"sns.boxplot(x=df['oldpeak'],palette='mako');","6a132452":"Q1 = df.quantile(0.25)\nQ3 = df.quantile(0.75)\nIQR = Q3 - Q1","cfaa5522":"#we handled outlier now by make point with in Q1 and Q3\nfor col in df.columns:\n    df.loc[(df[col] < (Q1[col] - 1.5 * IQR[col])) | (df[col] > (Q3[col] + 1.5 * IQR[col])), col] = df[col].median()","33bd7d24":"x = df[['cp', 'thalach', 'slope', 'exang', 'oldpeak','ca','thal']]\ny = df['target']","f4b01893":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)","4df244f5":"scaler = StandardScaler()\n\nscaler.fit(x_train)\n\nx_train = scaler.transform(x_train)\nx_test = scaler.transform(x_test)","f032dab5":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()\nlr.fit(x_train, y_train)\ny_pred = lr.predict(x_test)\nprint(confusion_matrix(y_test, y_pred))\nprint(accuracy_score(y_test, y_pred))","77b678d7":"parameters=[{'penalty':['l1','l2'],'C':[0.1,0.4,0.5],'random_state':[0]}]\n\n\ngrid_search = GridSearchCV(lr, parameters, scoring='accuracy', n_jobs=-1, )\n\n\nresult = grid_search.fit(x_train, y_train)\n\nprint(result.best_score_)\nprint(result.best_params_)","7a4711eb":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression(C= 0.1, penalty= 'l2',random_state=0)\nlr.fit(x_train, y_train)\ny_pred = lr.predict(x_test)\n\nprint(confusion_matrix(y_test, y_pred))\nprint(accuracy_score(y_test, y_pred))","a223e191":"plot_confusion_matrix(confusion_matrix(y_test, y_pred));","5f97fab0":"print(classification_report(y_test, y_pred))","5af5ab54":"print(accuracy_score(y_test, y_pred)*100)","eef54c59":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier()\nrfc.fit(x_train, y_train)\ny_pred = rfc.predict(x_test)\nprint(confusion_matrix(y_test, y_pred))\nprint(accuracy_score(y_test, y_pred))","2ac0d92b":"params = [\n        {'criterion':['gini', 'entropy'], 'n_estimators':[20, 50, 100, 150, 200, 500]}\n         ]\n\ngrid_search = GridSearchCV(estimator=rfc,\n                           param_grid=params,\n                           scoring='accuracy',\n                           cv=10, verbose=1, n_jobs=-1)\ngrid_search.fit(x_train, y_train)\nprint(grid_search.best_score_)\nprint(grid_search.best_params_)","f6165bcf":"plot_confusion_matrix(confusion_matrix(y_test, y_pred));","98f3bb03":"rfc = RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,\n                                              class_weight=None,\n                                              criterion='entropy', max_depth=None,\n                                              max_features='auto',\n                                              max_leaf_nodes=None,\n                                              max_samples=None,\n                                              min_impurity_decrease=0.0,\n                                              min_impurity_split=None,\n                                              min_samples_leaf=1,\n                                              min_samples_split=2,\n                                              min_weight_fraction_leaf=0.0,\n                                              n_estimators=20, n_jobs=None,\n                                              oob_score=False,\n                                              random_state=None, verbose=0,\n                                              warm_start=False)\nrfc.fit(x_train, y_train)\ny_pred = rfc.predict(x_test)\nprint(confusion_matrix(y_test, y_pred))\nprint(accuracy_score(y_test, y_pred))","f43ea4ff":"print(classification_report(y_test, y_pred))","655d91bc":"print(accuracy_score(y_test, y_pred)*100)","18c0f673":"non-anginal pain and atypical angina are most thing get heart disease","12569e73":"Patient who have heart disease their age between 45 : 55<br>\nand people who don't have their age between 55:60","a7924553":"it's proportionality between if he have fasting blood suger or not have doesn't effect on heart disease","8d844da3":" maximum heart rate achieved Patient have disease between 155:175 <br>\n Patient don't have between 125 : 150","b8558ef1":"downsloping get heart disease more than upsloping and flat","f666b483":"# Train model ","fa16942e":"To handle outlier we use Boxplot <br>\nif you found point in graph that point is outlier ","3a8c28b0":"Serum cholestoral doesn't effect on heart like we see they have same range","89bad6bb":"# EDA","ef28b8c1":"# Outlier","9fc0dd92":"we make Fine-Tune to our Model <br> \nto choose best parameter\n","5169a5f3":"# Logistic Regression","951b485b":"# Data preprocessing","c2d88f74":"fixed defect effect on heart with high rate","938e766b":"# Logistic Regression accuracy = 85.25%","a0154fd7":"ST depression induced to aviod disease patient must upper than 1 rate","17c27fad":"from first look we see that CP, thalach,slope have strong effect by {43%,42%,35%}<br>\nand exang,oldpeak,ca,thal effect by - {44%,43%,39%,34%}\n","85a33324":"People who don't do Exercise induced angina they get heart disease more than who do it","c7232ecd":"handle outlier","ea91397a":"Patient having ST-T wave abnormal have heart disease more normal patient","d07341b6":"if you have more 1 of major vessels your rate to get heart disease Decrease <br>\nmean that column effect on heart","0d4d7ec9":"resting blood pressure doesn't effect on heart like we see they have same range","d1a6e130":"split dataset to train and test\n","70ed1047":"Female have disease more than male","9a18b0b7":"# Random Forest Classifier get accuracy = 85.24%","264009ed":"# Random forest"}}