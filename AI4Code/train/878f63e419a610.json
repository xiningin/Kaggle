{"cell_type":{"b9ecb09e":"code","dd21743d":"code","7b5e93ff":"code","ce0a6f22":"code","4cfd493e":"code","e92f8e0e":"code","97d573e2":"code","afc6e1ec":"code","4ab2e600":"code","17010300":"code","cf144b7e":"code","3051e7de":"code","f7da41e1":"code","01a97c44":"code","ae0d9f5d":"code","cae5937f":"code","41ed1559":"code","b6ad7085":"code","d07d3c99":"code","1bdfc79f":"code","d8451279":"code","f285e902":"code","404d0a17":"code","d2c28b1f":"code","155503f9":"code","66d1a32a":"code","ae752759":"code","19417aec":"code","c3b3013d":"code","9e3f94a3":"code","8ef3bd24":"code","b84b2b6a":"code","0722bc5d":"code","eb3cf544":"code","8ce67d02":"code","ef2fbfc6":"code","223d5335":"code","7f669c27":"code","67794810":"code","7d535e1c":"code","ef0cfb38":"code","7e945bcb":"code","576ddd6a":"code","d874a396":"code","ac69d7b6":"code","903fd40f":"code","8be23844":"code","151120c9":"code","012cbcb7":"code","eb2aa5da":"code","5113c950":"code","6672f0b5":"code","f81d0335":"code","a40b8a5e":"code","13ecd3eb":"markdown","f49527b5":"markdown","0ead3867":"markdown","0f5c9b04":"markdown","ab3c70fc":"markdown","f3bd1e6e":"markdown","e082a3ca":"markdown","f0bc5af7":"markdown","da97cc96":"markdown","89f363ff":"markdown","111f3711":"markdown","04b17fa9":"markdown","554ed73e":"markdown","55c46db5":"markdown","a4abf96e":"markdown","300b19a0":"markdown","8c3581df":"markdown","b6e13b19":"markdown","32cbaf23":"markdown","56aeafc1":"markdown","f30f3d8a":"markdown","b882a769":"markdown","e67ff1f4":"markdown","db1f07a3":"markdown","944deac6":"markdown","068cceb5":"markdown","491f7fed":"markdown","b99adcc4":"markdown","ca72b154":"markdown","4aa12b3c":"markdown"},"source":{"b9ecb09e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","dd21743d":"# Import few libraries \nimport pandas as pd\nimport numpy as np\nimport seaborn as sns # used for plot interactive graph. \nimport matplotlib.pyplot as plt","7b5e93ff":"# Import the dataset\ndata = pd.read_csv(\"..\/input\/marketing.csv\")","ce0a6f22":"# check first 5 rows \ndata.head() ","4cfd493e":"# checking missing values # total no of missing values col wise \ndata.isnull().sum() ","e92f8e0e":"# Convert is_retained to a boolean\n\n#By changing the data type to boolean,\n\n#can now sum the is_retained column to calculate the number of users who were retained.\n\ndata['is_retained'] = data['is_retained'].astype('bool')\n\ndata['is_retained'].sum()","97d573e2":"# Check the data type of is_retained, again\nprint(data['is_retained'].dtype)","afc6e1ec":"# Add the new column is_correct_lang\n\ndata['is_correct_lang'] = np.where( data['language_preferred'] == data['language_displayed'],  'Yes', 'No')","4ab2e600":"data['is_correct_lang'].head()","17010300":"data.info() # all date col( date served ,subscribed ,canceled) shown as object & # there are missing values ","cf144b7e":"# Import marketing.csv with date columns\n\ndata = pd.read_csv(\"..\/input\/marketing.csv\",parse_dates=['date_served','date_subscribed','date_canceled'])","3051e7de":"# Date columns are shown as now datetime \ndata.info() ","f7da41e1":"# Group by date_served and count number of unique user_id's  \n\ndaily_users = data.groupby(['date_served'])['user_id'].nunique()\n\n# Print head of daily_users\nprint(daily_users.head())","01a97c44":"#Visualizing daily marketing reach\n\n# Plot daily_subscribers\ndaily_users.plot()\n\n# Include a title and y-axis label\nplt.title('Daily users')\nplt.ylabel('Number of users')\n\n# Rotate the x-axis labels by 45 degrees\nplt.xticks(rotation = 45)\n\n# Display the plot\nplt.show()  ","ae0d9f5d":"# Calculate the number of people marketed to\ntotal =data['user_id'].nunique()","cae5937f":"# Calculate the number of people who subscribed\nsubscribers = data[data[\"converted\"] == True]\\\n                       ['user_id'].nunique()\n\n# Calculate the conversion rate\nconversion_rate = subscribers\/total\nprint(round(conversion_rate*100, 2), \"%\")","41ed1559":"# Calculate the number of subscribers\ntotal_subscribers = data[data[\"converted\"] == True]\\\n                            ['user_id'].nunique()\n\n# Calculate the number of people who remained subscribed\nretained = data[data['is_retained'] == True]\\\n                   ['user_id'].nunique()\n\n# Calculate the retention rate   \nretention_rate = retained\/total_subscribers\nprint(round(retention_rate*100, 2), \"%\")   # from no of ppl those subscriber has retained 66.8%","b6ad7085":"# Isolate english speakers\nenglish_speaker = data[data['language_displayed'] == 'English']","d07d3c99":"# Calculate the total number of english speaking users\ntotal = english_speaker['user_id'].nunique()","1bdfc79f":"subscribers = english_speaker[english_speaker['converted'] == True]\\\n['user_id'].nunique()","d8451279":"#Calculate conversion rate of english speaking people\nconversion_rate = subscribers\/total\nprint('English speaker conversion rate:',  round(conversion_rate*100,2), '%')","f285e902":"# Group by language_displayed and count unique users\ntotal = data.groupby('language_displayed')['user_id'].nunique()\n        \n# Group by language_displayed and count unique conversions\nsubscribers = data[data['converted'] == True]\\\n              .groupby(['language_displayed'])\\\n              ['user_id'].nunique()\n\n# Calculate the conversion rate for all languages\nlanguage_conversion_rate = subscribers\/total\nprint(language_conversion_rate)\n","404d0a17":"# Create a bar chart using language_conversion_rate DataFrame\nlanguage_conversion_rate.plot(kind ='bar')\n\n# Add a title and x and y-axis labels\nplt.title('Conversion rate by language\\n', size = 16)\nplt.xlabel('Language', size = 14)\nplt.ylabel('Conversion rate (%)', size = 14)\n\n# Display the plot\nplt.show()  \n\n# German and Arabic has highest conversion rate ","d2c28b1f":"#Aggregating by date \n\n# Group by date_served and count unique users\n\ntotal = data.groupby('date_served')['user_id'].nunique()\n\n# Group by date_served and count unique converted users\nsubscribers = data[data['converted']==True]\\\n              .groupby(['date_served'])\\\n              ['user_id'].nunique()\n\n# Calculate the conversion rate per day\ndaily_conversion_rate = subscribers\/total\nprint(daily_conversion_rate) # date 16\/17 has higest conversion rate","155503f9":"# Reset index to turn the results into a DataFrame\ndaily_conversion_rate = pd.DataFrame(daily_conversion_rate.reset_index(0))\n","66d1a32a":"daily_conversion_rate.columns  # now the dataframe","ae752759":"daily_conversion_rate.head()","19417aec":"# Rename columns\ndaily_conversion_rate.columns = ['date_served','conversion_rate']  # userId now conversion rate ","c3b3013d":"# Create a line chart using daily_conversion_rate\ndaily_conversion_rate.plot('date_served','conversion_rate')\n\nplt.title('Daily conversion rate\\n', size = 16)\nplt.ylabel('Conversion rate (%)', size = 14)\nplt.xlabel('Date', size = 14)\n\n# Set the y-axis to begin at 0\nplt.ylim(0)\n\n# Display the plot  # there is seems to be one spike after 15 jan\nplt.show()","9e3f94a3":"# Group by date subscribed  and count unique users\ntotal = data.groupby(['date_subscribed'])['user_id']\\\n            .nunique()\n\n# Group by date_scubscribed and who are retained after subscribtion\n\nretained = data[data['is_retained'] == True]\\\n                .groupby(['date_subscribed'])\\\n                ['user_id'].nunique()\n# Calculate subscriber quality across dates\ndaily_retention_rate = retained\/total","8ef3bd24":"# Reset index to turn the Series into a DataFrame\ndaily_retention_rate =pd.DataFrame(daily_retention_rate.reset_index())\n","b84b2b6a":"# Rename columns\ndaily_retention_rate.columns = ['date_subscribed','retention_rate']","0722bc5d":"# Create a line chart using the daily_retention DataFrame\n\ndaily_retention_rate.plot('date_subscribed','retention_rate')\n\n# Add a title and x and y-axis labels\nplt.title('Daily subscriber quality\\n', size = 16)\nplt.ylabel('1-month retention rate (%)', size = 14)\nplt.xlabel('Date', size = 14)\n# Set the y-axis to begin at 0\nplt.ylim(0)\n# Display the plot\nplt.show()","eb3cf544":"# Group by marketeing channel and age group per user Id\n\nchannel_age = data.groupby(['marketing_channel', 'age_group'])\\\n                                ['user_id'].count()\n\n# Unstack channel_age and transform it into a DataFrame #Unstacking after groupby\n\nchannel_age_df = pd.DataFrame(channel_age.unstack(level = 1)) # as index = 0\n\n# Plot channel_age\n\nchannel_age_df.plot(kind = 'bar')\nplt.title('Marketing channels by age group')\nplt.xlabel('Age Group')\nplt.ylabel('Users')\n# Add a legend to the plot\nplt.legend(loc = 'upper right', \n           labels = channel_age_df.columns.values)\nplt.show()","8ce67d02":"channel_age_df.head() # can check the all marketing channels serving different age group ","ef2fbfc6":"# Count the subscription by subscribing channel and each day\n\n#Use .groupby() to calculate subscribers by subscribing_channel and date_subscribed.\n\nretention_total =data.groupby(['date_subscribed','subscribing_channel'] )['user_id'].nunique() \n\n# Print results\nprint(retention_total.head())","223d5335":"#Count the retained subs by subscribing channel and date subscribed\n\nretention_subs = data[data['is_retained'] == True]\\\n                           .groupby(['date_subscribed',\n                                     'subscribing_channel'])\\\n                            ['user_id'].nunique()\n","7f669c27":"# Divide retained subscribers by total subscribers\nretention_rate = retention_subs\/retention_total\n\n#unstack the retention rate and convert in to dataframe\n\nretention_rate_df = pd.DataFrame(retention_rate.unstack(level=1))\n","67794810":"retention_rate_df.head() # to check the first 5 rows ","7d535e1c":"# Plot retention rate\nretention_rate_df.plot()\n\n# Add a title, x-label, y-label, legend and display the plot\nplt.title('Retention Rate by Subscribing Channel')\nplt.xlabel('Date Subscribed')\nplt.ylabel('Retention Rate (%)')\nplt.legend(loc = 'upper right', \n           labels = retention_rate_df.columns.values)\nplt.show()  # can address the question of which channel had the highest retention rate each day","ef0cfb38":"# Group by subscribing_channel and calculate subscribers  # House_ads has highest no of users subscription\n\nsubscribers = data[data['converted'] == True]\\\n               .groupby(['subscribing_channel'])\\\n               ['user_id'].nunique()\nprint(subscribers)","7e945bcb":"# Segmenting using pandas - groupby()   \n# Group by subscribing_channel and calculate retention\nretained = data[data['is_retained'] == True]\\\n            .groupby(['subscribing_channel'])\\\n            ['user_id'].nunique()\nprint(retained)","576ddd6a":"# Calculate the retention rate across the DataFrame             # here House ads has lowest retention rate \n\nchannel_retention_rate = (retained\/subscribers)*100\nprint(channel_retention_rate)","d874a396":"def conversion_rate(dataframe, column_names):\n    # Total number of converted users\n    column_conv = data[data['converted'] == True]\\\n                   .groupby(column_names)['user_id'].nunique()\n\n\n    # Total number users\n    column_total =  data.groupby(column_names)['user_id'].nunique()\n    \n    # Conversion rate \n    conversion_rate = column_conv\/column_total\n    \n    # Fill missing values with 0\n    conversion_rate = conversion_rate.fillna(0)\n    return conversion_rate","ac69d7b6":"#Test and visualize conversion function\n#conversion_rate() function to calculate the conversion rate in marketing by date_served and age_group\n#store results in age_group_conv","903fd40f":"# Calculate conversion rate by age_group # by using above conversion function#\n\nage_group_conv = conversion_rate(data, ['date_served',\n                                             'age_group'])\n\n# Unstack and create a DataFrame\nage_group_df = pd.DataFrame(age_group_conv.unstack(level = 1))\n\n# Visualize conversion by age_group\nage_group_df.plot()\nplt.title('Conversion rate by age group\\n', size = 16)\nplt.ylabel('Conversion rate', size = 14)\nplt.xlabel('Age group', size = 14)\nplt.show()","8be23844":"# Calculate conversion rate by language displayed # by using above conversion function#\n\nlang_group_conv = conversion_rate(data, ['date_served',\n                                             'language_displayed'])\n\n# Unstack and create a DataFrame\nlang_group_df = pd.DataFrame(lang_group_conv.unstack(level = 1))\n\n# Visualize conversion by age_group\nlang_group_df.plot()\nplt.title('Conversion rate by lang displayed group\\n', size = 16)\nplt.ylabel('Conversion rate', size = 14)\nplt.xlabel('language_displayed', size = 14)\nplt.show()","151120c9":"# Isolate the rows where marketing channel is Facebook\nFacebook = data\\\n            [data['marketing_channel'] == 'Facebook']","012cbcb7":"#Creating a DataFrame for Facebook to check no.of times correct language displayed \n\n# new col added : is_correct_lang\n\nFacebook['is_correct_lang'] = np.where(\n    Facebook['language_preferred'] == Facebook['language_displayed'], \n    'Yes', \n    'No')\n\n# Groupby date_served and is_correct_lang\nlanguage_check = Facebook.groupby(['date_served','is_correct_lang'])['is_correct_lang'].count()\n\n# Unstack language_check and fill missing values with 0's\nlanguage_check_df = pd.DataFrame(language_check.unstack(level=1)).fillna(0)\n\n# Print results\nprint(language_check_df)","eb2aa5da":"#Check to ensure users were allocated equally to the test and control groups","5113c950":" # Subset the DataFrame\ndf_facebook = data[data['marketing_channel'] == 'Facebook']\n\n# Group the facebook DataFrame by variant \nalloc = df_facebook.groupby(['variant'])['user_id'].nunique()\n\n# Plot a bar chart of the test allocation\nalloc.plot(kind='bar')\nplt.title('Personalization test allocation')\nplt.ylabel('# participants')\nplt.show()","6672f0b5":"# Group data by user_id and variant\nsubscribers = df_facebook.groupby(['user_id', \n                             'variant'])['converted'].max()\n\nsubscribers_df = pd.DataFrame(subscribers.unstack(level=1)) \n\n# Drop missing values from the control column\ncontrol = subscribers_df['control'].dropna()\n\n# Drop missing values from the personalization column\npersonalization = subscribers_df['personalization'].dropna()\n\nprint('Control conversion rate:', np.mean(control))\nprint('Personalization conversion rate:', np.mean(personalization))\n\n#can see that personalization converted users are hiher rate than the control. ","f81d0335":"def lift(a,b):\n    # Calcuate the mean of a and b\n    a_mean = np.mean(a)\n    b_mean = np.mean(b)\n    \n    # Calculate the lift using a_mean and b_mean\n    lift = (b_mean-a_mean)\/a_mean\n  \n    return str(round(lift*100, 2)) + '%'\n# Print lift() with control and personalization as inputs\nprint(lift(control, personalization))      # control and personalizaiton object created above\n\n","a40b8a5e":"# To check difference between the control and personalization statistically significant?\n\nfrom scipy.stats import ttest_ind\n\nt = ttest_ind(control, personalization)\nprint(t) \n","13ecd3eb":"* Can make comparison across languages, get a sense of which languages convert well relative to others.\n* Comparing language conversion rate","f49527b5":"Want to know if marketing channels are reaching all users equally \nOr if some marketing channels are serving specific age demographics.\n","0ead3867":"Can find out in one day how many adds are served ?","0f5c9b04":"English and spanish has lowest conversion rate ,and highest is German language conversion rate ","ab3c70fc":"* Function that takes a DataFrame and list of column names and outputs the conversion rate across the      column(s)\n* Building a conversion function\n* where users were converted, then group by the list of user inputted column_names \n* count the number of unique converted users.","f3bd1e6e":"To determine how effective the campaign was on converting English speakers.\n\n","e082a3ca":"* Setting data to visualize daily conversion\n* Build upon the daily conversion rate DataFrame daily_conversion_rate\n* Transform data in to dataframe to accept in matplotlib # to convert the results into a DataFrame.","f0bc5af7":"Facebook campaign was actually run as an A\/B test. Half the compaign messages sent out were generic upsells to  product .while the other half contained personalized messaging around the users\u2019 usage of the site.\n","da97cc96":"* Here will try to analyzing Marketing campaign and trying to find out of few of the business ques like:\n* How did this campaign perform?\", \n* Which channel is referring the most subscribers?\", \n* Why is a particular channel underperforming?\"","89f363ff":"It seems to be age group 19-24 and 24-30 years has highest conversion rate than other age groups","111f3711":"Daily conversion rate is crucial to contextualize whether the conversion rate on a particular day was good or bad\nHelp to surface trends such as a conversion rate that appears to be going down over time","04b17fa9":"Marketing channels House Ads, Facebook and Instagram are serving highest no to specific age demographics of 19-24 age group","554ed73e":"By looking at above plot there is discontiunity in language displayed Arabic, German and Spanish can investigate further.The English conversion rate drops after a little bit of spike, and there do not appear to be ads served in other languages in during some period.","55c46db5":"Wants to know whether there is any difference in the conversion rate based on when in the month, users saw an ad.","a4abf96e":"* Creating a lift function.\n* Lift can be calculated by calculating as follows \n* Formula: (Treatment conversion rate - Control conversion rate)\/Control conversion rate","300b19a0":"Can build a function to enable to calculate conversion rate across any sub-segment want on the fly.","8c3581df":"There's a large lift, but are results statistically significant that can be verfiy by using t test","b6e13b19":"The resultant pvalue very small(e-18) ,So result is significant and personaltion variant has impact on conversion rate as compared to generic messages.","32cbaf23":"* To address the question of which channel had the highest retention rate each day \n* Divide retained subscribers by total subscribers\n* retention_rate = retention_subs\/retention_total","56aeafc1":"There's a large peak around the time mid of jan may be because of marketing campaign or email blast goes out.Can explore this further","f30f3d8a":"Adding new columns that derive information from existing data or based on domain knowledge is known as Feature Engineering","b882a769":"* Formula for conversion rate is:\n\n* Number of people who convert\/Total number of people who market to","e67ff1f4":"Dataframe is formed with different age groups are cols with rows having marketing channel","db1f07a3":"Visualize daily conversion rate so proceed to create a line chart","944deac6":"Creating daily retention rate DataFrame\ni.e retention rate each day","068cceb5":"* Selecting conversion rate as our key metrics for this test.\n* It is highly important that evaluate whether or not conversion was higher in the personalization treatment  compared with the control.\n* Measuring the difference between the key metric in the control and the treatment is the most important part of evaluating the success of an A\/B test.","491f7fed":"* The personalization variant outperformed the control,to determine whether the result is statistically         significant. \n* Statistical significance is vital to understanding whether a test showed a positive result by chance or if   it is reflective of a true difference between the variants.\n* This can help marketing team to make an informed choice about whether to roll out the feature or not.","b99adcc4":"A\/B testing for marketing\nwhen is the right time to determine key success metrics?The earlier define what success looks like,the better it is","ca72b154":"* Calculating retention rate.\n* can give a sense of whether marketing campaign converted subscribers who were actually interested in the product.\n* could create a business with a high conversion rate by giving users a free trial, but have a low retention rate once users are charged for services.\n* what percentage of users remain  with subscribers\n* Formula : Number of people who remain subscribed\/Total number of people who converted","4aa12b3c":"* Introduction to common marketing metrics\n\n* The formula for conversion rate is:\n\n* Conversion rate =  Number of people who converted \/ Total number of people who we market to"}}