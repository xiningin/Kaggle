{"cell_type":{"f5b35cb8":"code","c83e6d70":"code","5b5cada6":"code","cfeff1ce":"code","514c3496":"code","9cc4ae3a":"code","7fc88500":"code","ae5542ce":"code","f050dc97":"code","4669831b":"code","a96eb502":"code","cea0a6a6":"code","9cd644ac":"code","63eb592e":"code","6405b313":"code","33c91fab":"code","1e9fcd27":"code","d69f5410":"code","dec64323":"code","8dab8640":"code","b41d78d2":"code","8598d594":"code","19fd1363":"code","5bf6effd":"code","348c78d5":"markdown","991f7cdf":"markdown","9afbe1f3":"markdown","04e7b183":"markdown","2c4f75e2":"markdown","e25ec60b":"markdown","7feaa07a":"markdown","74dc5908":"markdown","ec789638":"markdown","a3b3ddc4":"markdown","322eeab6":"markdown","30031741":"markdown","b3f5b46a":"markdown","9bdb64a0":"markdown","dad33727":"markdown","5dfd13ce":"markdown","8c5c0627":"markdown","8d875313":"markdown","e1877683":"markdown","b92b1d9b":"markdown","ac971af2":"markdown","f86274fd":"markdown","aee5f327":"markdown"},"source":{"f5b35cb8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nprint(\"Setup Complete\")\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        creditcard_dataset_path = os.path.join(dirname, filename)\n        creditcard_data = pd.read_csv(creditcard_dataset_path)\n        \n# Any results you write to the current directory are saved as output.\nprint(\"Number of transactions: \", len(creditcard_data))\ncreditcard_data.tail()","c83e6d70":"plt.figure(figsize=(18,6))\nsorted_creditcard_data = creditcard_data.sort_values(by='Amount', ascending=True)\n# sns.lineplot(data=sorted_creditcard_data['Amount'], label = \"Amount\")\n# plot = sns.lineplot(data = 500 * sorted_creditcard_data['Class'], label = \"IsFraud\")\n\n# plot.set(xlabel ='Transactions', ylabel ='Amount')\n# plt.show()\n \n# plot of 2 variables\np1=sns.kdeplot(sorted_creditcard_data['Amount'], shade=True, color=\"r\")\n# p1=sns.kdeplot(2000*sorted_creditcard_data['Class'], shade=True, color=\"b\")\n","5b5cada6":"fraudulent_amount = 0\nnumber_of_fraudulent_transactions = 0;\nfor record in creditcard_data.itertuples():\n    if record.Class == True:\n        fraudulent_amount += record.Amount\n        number_of_fraudulent_transactions += 1\nprint('The total amount of fraudulent transactions: ', fraudulent_amount)    \nprint('The total number of fraudulent transactions: ', number_of_fraudulent_transactions)  \nfraudulent_mean = fraudulent_amount \/ number_of_fraudulent_transactions\n        \nnonfraudulent_amount = 0\nnumber_of_nonfraudulent_transactions = 0\nfor record in creditcard_data.itertuples():\n    if record.Class == False:\n        nonfraudulent_amount += record.Amount\n        number_of_nonfraudulent_transactions += 1\nprint('The total amount of non-fraudulent transactions: ', nonfraudulent_amount)    \nprint('The total number of fraudulent transactions: ', number_of_nonfraudulent_transactions)  \nnonfraudulent_mean = nonfraudulent_amount \/ number_of_nonfraudulent_transactions\n        \nd = {'Class':[0, 1], 'Mean':[nonfraudulent_mean, fraudulent_mean]}\n\nfig, ax = plt.subplots(figsize=(18,8))\n\nax.pie(d[\"Mean\"],\n       explode=[0, 0.1],\n       labels=['The average amount of a non-fraudulent transaction', 'The average amount of a fraudulent transaction'],\n       shadow=True, startangle=90)\n\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","cfeff1ce":"correlated_data = creditcard_data.corr()\n\nplt.figure(figsize=(18,12))\nsns.heatmap(correlated_data, annot=False)","514c3496":"nonfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 0]\ncorrelated_data = nonfraudulent_data.corr()\n\nplt.figure(figsize=(18,12))\nsns.heatmap(correlated_data, annot=False)","9cc4ae3a":"fraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 1]\ncorrelated_data = fraudulent_data.corr()\n\nplt.figure(figsize=(18,12))\nsns.heatmap(correlated_data, annot=False)","7fc88500":"plt.figure(figsize=(18,12))\nsns.scatterplot(x=creditcard_data[\"Time\"], y=creditcard_data[\"Amount\"], hue=creditcard_data[\"Class\"], size=creditcard_data[\"Class\"], sizes=(40, 8), marker=\"+\")\n","ae5542ce":"plt.figure(figsize=(18,12))\nplot = sns.distplot(a=creditcard_data[\"Time\"], kde=True, color='purple')\nplot.set(xlabel ='Time', ylabel ='Frequency')\nplt.show()","f050dc97":"fraudulent_transactions = creditcard_data[creditcard_data['Class'] == 1]\nnonfraudulent_transactions = creditcard_data[creditcard_data['Class'] == 0]\n\nplt.figure(figsize=(18,12))\n\nsns.distplot(a=nonfraudulent_transactions[\"Time\"], kde=True)\nplot = sns.distplot(a=fraudulent_transactions[\"Time\"], kde=True)\n\nplot.set(xlabel ='Time', ylabel ='Frequency')\nplot.legend(['Not Fraud', 'Fraud'])\nplt.show()","4669831b":"plt.figure(figsize=(18,12))\n\nnonfraudulent_transactions = creditcard_data[creditcard_data['Class'] == 0]\nplot = sns.kdeplot(data=nonfraudulent_transactions[\"Amount\"], label=\"Not Fraud\", shade=True)\nplot.set(xlabel ='Amount', ylabel ='Density')\nplt.show()","a96eb502":"plt.figure(figsize=(18,12))\n\nfraudulent_transactions = creditcard_data[creditcard_data['Class'] == 1]\nplot = sns.kdeplot(data=fraudulent_transactions[\"Amount\"], label=\"Fraud\", shade=True, color='orange')\nplot.set(xlabel ='Amount', ylabel ='Density')\nplt.show()","cea0a6a6":"# plt.figure(figsize=(18,8))\n# cmap = sns.cubehelix_palette(light=1, as_cmap=True) \n# sns.jointplot(x=nonfraudulent_transactions[\"Time\"], y=nonfraudulent_transactions[\"Amount\"], cmap=cmap, kind=\"kde\")","9cd644ac":"plt.figure(figsize=(18,8))\n\nfraudulent_transactions = creditcard_data[creditcard_data['Class'] == 1]\n\ncmap = sns.cubehelix_palette(light=1, as_cmap=True) \nsns.jointplot(x=fraudulent_transactions[\"Time\"], y=fraudulent_transactions[\"Amount\"], cmap=cmap, kind=\"kde\")","63eb592e":"fraudulent_transactions = creditcard_data[creditcard_data['Class'] == 1]\n# v1_matched_df = []\n# for record in fraudulent_transactions.itertuples():\n#     v1 = record.V1\n#     result = fraudulent_transactions.loc[fraudulent_transactions[\"V1\"] == v1]\n#     if len(result.() != 1:\n#         v1_matched_df.append(record)\n#         v1_matched_df.append(fraudulent_transactions.loc[fraudulent_transactions[\"V1\"] == v1])\n# v1_matched_df\nplt.figure(figsize=(18,8))\n\nv1_grouped_fraudulent = fraudulent_transactions[[\"Time\", \"Amount\"]].groupby(\"Time\", as_index = False).agg(\"mean\")\nv1_grouped_fraudulent\n# sns.distplot(a=v1_grouped_fraudulent[\"V1\"])\n\n# v2_grouped_fraudulent = fraudulent_transactions.groupby(\"V2\", as_index = False)[\"Amount\"].mean()\n\n# sns.distplot(a=v2_grouped_fraudulent[\"V2\"])\n\n# v3_grouped_fraudulent = fraudulent_transactions.groupby(\"V3\", as_index = False)[\"Amount\"].mean()\n\n# sns.distplot(a=v3_grouped_fraudulent[\"V3\"])","6405b313":"plt.figure(figsize=(18,8))\n\nnonfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 0]\nsns.distplot(a=nonfraudulent_data[\"V7\"], kde=\"True\")\n\nfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 1]\nsns.distplot(a=fraudulent_data[\"V7\"], kde=\"True\")","33c91fab":"plt.figure(figsize=(18,8))\n\nnonfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 0]\nsns.distplot(a=nonfraudulent_data[\"V2\"], kde=\"True\")\n\nfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 1]\nsns.distplot(a=fraudulent_data[\"V2\"], kde=\"True\")","1e9fcd27":"plt.figure(figsize=(18,8))\n\nnonfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 0]\nsns.distplot(a=nonfraudulent_data[\"V3\"], kde=\"True\")\n\nfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 1]\nsns.distplot(a=fraudulent_data[\"V3\"], kde=\"True\")","d69f5410":"plt.figure(figsize=(18,8))\n\nnonfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 0]\nsns.distplot(a=nonfraudulent_data[\"V4\"], kde=\"True\")\n\nfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 1]\nsns.distplot(a=fraudulent_data[\"V4\"], kde=\"True\")","dec64323":"plt.figure(figsize=(18,8))\n\nnonfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 0]\nsns.distplot(a=nonfraudulent_data[\"V9\"], kde=\"True\")\n\nfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 1]\nsns.distplot(a=fraudulent_data[\"V9\"], kde=\"True\")","8dab8640":"plt.figure(figsize=(18,8))\n\nnonfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 0]\nsns.distplot(a=nonfraudulent_data[\"V10\"], kde=\"True\")\n\nfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 1]\nsns.distplot(a=fraudulent_data[\"V10\"], kde=\"True\")","b41d78d2":"plt.figure(figsize=(18,8))\n\nnonfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 0]\nsns.distplot(a=nonfraudulent_data[\"V11\"], kde=\"True\")\n\nfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 1]\nsns.distplot(a=fraudulent_data[\"V11\"], kde=\"True\")","8598d594":"plt.figure(figsize=(18,8))\n\nnonfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 0]\nsns.distplot(a=nonfraudulent_data[\"V12\"], kde=\"True\")\n\nfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 1]\nsns.distplot(a=fraudulent_data[\"V12\"], kde=\"True\")","19fd1363":"plt.figure(figsize=(18,8))\n\nnonfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 0]\nsns.distplot(a=nonfraudulent_data[\"V16\"], kde=\"True\")\nsns.distplot(a=nonfraudulent_data[\"V17\"], kde=\"True\")\nsns.distplot(a=nonfraudulent_data[\"V18\"], kde=\"True\")","5bf6effd":"plt.figure(figsize=(18,8))\n\nfraudulent_data = creditcard_data[creditcard_data[\"Class\"] == 1]\nsns.distplot(a=fraudulent_data[\"V16\"], kde=\"True\")\nsns.distplot(a=fraudulent_data[\"V17\"], kde=\"True\")\nsns.distplot(a=fraudulent_data[\"V18\"], kde=\"True\")","348c78d5":"Depict the last 5 records of the creditcard data","991f7cdf":"**Depict the similar distribution nonfraudulent transactions based on features V16, V17, and V18.**","9afbe1f3":"**Depict the correlation of amount and time for non-fraudulent nontransactions.**","04e7b183":"**Depict a comparison between the histograms of feature V2 of fraudulent transactions and that of the nonfraudulents.**","2c4f75e2":"**Depict a comparison between the histograms of feature V4 of fraudulent transactions and that of the nonfraudulents.**","e25ec60b":"**Depict a comparison between the histograms of feature V11 of fraudulent transactions and that of the nonfraudulents.**","7feaa07a":"**Depict a comparison between the histograms of feature V7 of fraudulent transactions and that of the nonfraudulents.**","74dc5908":"**Depict a comparison between the histograms of feature V12 of fraudulent transactions and that of the nonfraudulents.**","ec789638":"**Depict a comparison between the histograms of feature V3 of fraudulent transactions and that of the nonfraudulents.**","a3b3ddc4":"**Depict the correlations between every pair of features of nonfraudulent transactions.**","322eeab6":"**Depict the density estimation of non-fraudulent transactions according to their amounts.**","30031741":"**Depict the correlations between every pair of features.**","b3f5b46a":"**Depict how number of transactions varies in time.** As in the Scatterplot it was shown, ups and downs show a day and night trend, respectively.","9bdb64a0":"**Depict how the frequency of fraudulent transactions (orange) is distributed in time, compared to that of the non-fraudulents (blue).**","dad33727":"**Depict the distribution of fraudulent transactions among others through the time with their amount.**\nUps and downs show a day and night trend, respectively. Although we already knew this, it could be also concluded from this scatter plot that the data belongs to a two-day period.","5dfd13ce":"**Depict the density estimation of fraudulent transactions according to their amounts.**","8c5c0627":"**Depict Amounts of every record and their class.**","8d875313":"**Depict a comparison between the histograms of feature V9 of fraudulent transactions and that of the nonfraudulents.**","e1877683":"**Depict a comparison between the histograms of feature V10 of fraudulent transactions and that of the nonfraudulents.**","b92b1d9b":"**Depict the correlation of amount and time for fraudulent nontransactions.**","ac971af2":"**Depict the almost similar distribution fraudulent transactions based on features V16, V17, and V18.**","f86274fd":"**Depict the correlations between every pair of features of fraudulent transactions.**","aee5f327":"**Depict total amount of nonfraudulent transactions vs. that of fraudulent transactions.**"}}