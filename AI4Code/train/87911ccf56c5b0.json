{"cell_type":{"63842678":"code","8a6dfaed":"code","a191a018":"code","53a90770":"code","52386579":"code","25f6479a":"code","3a58dcdc":"code","803e2ec9":"code","186cc634":"code","64d2c290":"code","44e7eabf":"code","725ede1f":"code","972ba57d":"code","5c86ea5f":"code","b174a67e":"code","e652629b":"code","cc40b493":"code","fcc2c793":"code","001fb5a3":"code","10c1a486":"code","dc8ec2b6":"code","6caec539":"code","6b6e12d8":"code","665dc535":"code","79507f33":"code","f32f2920":"code","aba8f778":"code","ebf19031":"code","08d4c70a":"code","0b5374dd":"code","f5ed58e1":"code","2284dacf":"code","5f8c7833":"code","1e9b2626":"code","c00f81c4":"code","abf61c59":"code","b5502894":"code","866710cb":"code","6124e1fd":"code","5d33f23a":"code","f1047431":"code","189d3883":"code","b58e6f97":"code","9d587d6a":"code","697d7ac7":"code","f4585557":"code","c2c01dd0":"code","e4838a3b":"code","5e565695":"code","c3fc6952":"code","a34c7815":"code","5a0ba3e5":"code","dc19c64e":"code","121c713a":"code","1deb49b0":"code","e622df6a":"code","74c9949b":"code","2b099b7e":"code","4def4527":"code","9ec5a2a5":"code","584f1f64":"code","14ba3eed":"code","c38fc1f5":"code","e4b39758":"code","79f5d9dd":"code","efdf7d57":"code","e9d751e3":"code","78fc540d":"code","a88c1fcf":"code","dedd8cfc":"code","40f32367":"code","4f883d59":"code","1f2b341a":"code","50bf969b":"code","c96762d8":"code","9fc1283b":"code","f7143311":"markdown","5ae7f89c":"markdown","7e15f3ea":"markdown","c19790ce":"markdown","99b54703":"markdown","582f6d08":"markdown","50f822d4":"markdown","4101dc94":"markdown","e2cc3aa2":"markdown","b8376a46":"markdown","601fe31c":"markdown","0417f000":"markdown","98257f61":"markdown"},"source":{"63842678":"from __future__ import division, print_function\n# \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u043c \u0432\u0441\u044f\u043a\u0438\u0435 \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f Anaconda\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom glob import glob\nimport os\nfrom tqdm import tqdm_notebook\nimport numpy as np\nimport pandas as pd\npd.set_option('display.max.columns', 25)\nimport pickle\nimport seaborn as sns\n%matplotlib inline\nfrom scipy.sparse import csr_matrix, hstack, vstack\nfrom matplotlib import pyplot as plt\nfrom datetime import datetime, timedelta\nfrom matplotlib.ticker import PercentFormatter","8a6dfaed":"train_df = pd.read_csv('..\/input\/catch-me-if-you-can-intruder-detection-through-webpage-session-tracking2\/train_sessions.csv', index_col='session_id')\ntest_df = pd.read_csv('..\/input\/catch-me-if-you-can-intruder-detection-through-webpage-session-tracking2\/test_sessions.csv', index_col='session_id')","a191a018":"train_df.head()","53a90770":"train_test_df = pd.concat([train_df, test_df])","52386579":"train_df.info()","25f6479a":"test_df.info()","3a58dcdc":"train_df['target'].value_counts()","803e2ec9":"train_test_df_sites = train_test_df[['site%d' % i for i in range(1, 11)]].fillna(0).astype('int')","186cc634":"train_test_df_sites.head(10)","64d2c290":"times = ['time%s' % i for i in range(1, 11)]\nsites = ['site%s' % i for i in range(1, 11)]","44e7eabf":"%%time\ntrain_test_sparse = csr_matrix(([1]*train_test_df_sites.size,np.array(train_test_df_sites).flatten(),\n                               range(0,train_test_df_sites.size+1,train_test_df_sites.shape[1])))[:,1:]\n\nX_train_sparse = train_test_sparse[:len(train_df)]\nX_test_sparse = train_test_sparse[len(train_df):]\ny = train_df.target.values","725ede1f":"print('X_train_sparse dimensionality:')\nprint(X_train_sparse.shape)\nprint('X_test_sparse dimensionality:')\nprint(X_test_sparse.shape)","972ba57d":"train_share = int(.7 * X_train_sparse.shape[0])\nX_train, y_train = X_train_sparse[:train_share, :], y[:train_share]\nX_valid, y_valid  = X_train_sparse[train_share:, :], y[train_share:]","5c86ea5f":"from sklearn.linear_model import SGDClassifier\nfrom sklearn.metrics import roc_auc_score, roc_curve\nfrom sklearn.model_selection import cross_val_score, validation_curve, train_test_split,\\\n                                    StratifiedKFold, GridSearchCV, TimeSeriesSplit","b174a67e":"%%time\nsgd_logit = SGDClassifier(loss='log', n_jobs=-1, random_state=42)\nsgd_logit.fit(X_train, y_train)","e652629b":"logit_valid_pred_proba = sgd_logit.predict_proba(X_valid)","cc40b493":"print('ROC AUC:')\nprint (round(roc_auc_score(y_valid, logit_valid_pred_proba[:,1]), 3))","fcc2c793":"train_df.head()","001fb5a3":"def feature_ingeneering(sessions):\n\n    new_features = pd.DataFrame()\n    \n    timestamps = sessions[['time%s' % i for i in range(1, 11)]]\n    sites = sessions[['site%s' % i for i in range(1, 11)]].fillna(0).astype(int).values\n\n    for td_index in range(1, 10):\n        new_features['time_diff{}'.format(td_index)] = (pd.to_datetime(timestamps['time{}'.format(td_index + 1)]) - \n                                                pd.to_datetime(timestamps['time{}'.format(td_index)])\n                                               ).dt.total_seconds().fillna(0)\n    \n    new_features['session_timespan'] = np.sum(new_features, axis=1)\n    new_features['start_hour'] = pd.to_datetime(timestamps['time1']).dt.hour\n    new_features['day_of_week'] = pd.to_datetime(timestamps['time1']).dt.weekday\n    new_features['unique_sites'] = [len(np.unique(session[session != 0])) for session in sites]\n\n    return new_features","10c1a486":"train_test_new = feature_ingeneering(train_df)","dc8ec2b6":"train_test_new.head()","6caec539":"plt.figure(figsize=(15, 10))\nsns.distplot(train_test_new['session_timespan'])\n\nplt.xlabel('\u0414\u043b\u0438\u043d\u0430 \u0441\u0435\u0441\u0441\u0438 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445')\nplt.ylabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e')\nplt.title('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u0438\u043d\u044b \u0441\u0435\u0441\u0441\u0438\u0438 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445')\nplt.grid(True)\nplt.show()","6b6e12d8":"plt.figure(figsize=(14, 10))\nsns.countplot(x=train_test_new['day_of_week'].values, data=train_test_new)\n\nplt.xlabel('\u0414\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438')\nplt.ylabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e')\nplt.title('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u0435\u0441\u0441\u0438\u0439 \u043f\u043e \u0434\u043d\u044f\u043c')\nplt.grid(True)\nplt.show()","665dc535":"plt.figure(figsize=(15, 10))\nsns.countplot(x='start_hour', data=train_test_new)\n\nplt.xlabel('\u0427\u0430\u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0435\u0441\u0441\u0438\u0438')\nplt.ylabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e')\nplt.title('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0447\u0430\u0441\u0430 \u0441\u0435\u0441\u0441\u0438\u0438')\nplt.grid(True)\nplt.show()","79507f33":"plt.figure(figsize=(14, 10))\nsns.countplot(x=train_test_new['unique_sites'].values, data=train_test_new)\n\nplt.xlabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0430\u0439\u0442\u043e\u0432')\nplt.ylabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e')\nplt.title('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0430\u0439\u0442\u043e\u0432')\nplt.grid(True)\nplt.show()","f32f2920":"train_test_new.head()","aba8f778":"train_test_new_numeric = train_test_new.loc[:, :'session_timespan']\ntrain_test_new_dummy = train_test_new.loc[:, 'start_hour':]","ebf19031":"train_test_new_numeric.head()","08d4c70a":"train_test_new_dummy.head()","0b5374dd":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()","f5ed58e1":"train_test_dummy = pd.get_dummies(train_test_new_dummy.loc[:, ['start_hour', 'day_of_week', 'unique_sites']],\\\n                                  columns=train_test_new_dummy.loc[:, ['start_hour', 'day_of_week', 'unique_sites']].columns,\\\n                                  drop_first=True)","2284dacf":"train_test_dummy.head()","5f8c7833":"numerical = train_test_new_numeric.columns\nnumerical","1e9b2626":"train_test_new_numeric[numerical] = scaler.fit_transform(train_test_new_numeric[numerical])","c00f81c4":"train_test_new_numeric.shape","abf61c59":"add = pd.concat([train_test_new_numeric, train_test_dummy], axis=1)","b5502894":"add.columns","866710cb":"add.shape","6124e1fd":"add_sparse = csr_matrix(add)\nadd_sparse.shape","5d33f23a":"train_share = int(.7 * X_train_sparse.shape[0])\nadd_sparse_train, add_sparse_valid = add_sparse[:train_share, :], add_sparse[train_share:, :]","f1047431":"X_train = hstack([X_train, add_sparse_train])\nX_valid = hstack([X_valid, add_sparse_valid])","189d3883":"test_new = feature_ingeneering(test_df)","b58e6f97":"test_new.head()","9d587d6a":"test_new_numeric = test_new.loc[:, :'session_timespan']\ntest_new_dummy = test_new.loc[:, 'start_hour':]","697d7ac7":"test_new_numeric.head()","f4585557":"test_new_dummy.head()","c2c01dd0":"test_dummy = pd.get_dummies(test_new_dummy.loc[:, ['start_hour', 'day_of_week', 'unique_sites']],\\\n                                  columns=test_new_dummy.loc[:, ['start_hour', 'day_of_week', 'unique_sites']].columns,\\\n                                  drop_first=True)","e4838a3b":"numeric = test_new_numeric.columns\nnumeric","5e565695":"test_new_numeric[numerical] = scaler.fit_transform(test_new_numeric[numerical])","c3fc6952":"add_test = pd.concat([test_new_numeric, test_dummy], axis=1)","a34c7815":"add_test.columns","5a0ba3e5":"add_test_sparse = csr_matrix(add_test)\nadd_test_sparse.shape","dc19c64e":"X_test = hstack([X_test_sparse, add_test_sparse])","121c713a":"X_test_sparse.shape","1deb49b0":"X_test.shape","e622df6a":"X_train.shape","74c9949b":"X_valid.shape","2b099b7e":"X_train = vstack([X_train, X_valid])","4def4527":"X_train.shape","9ec5a2a5":"def write_to_submission_file(predicted_labels, out_file,\n                             target='target', index_label=\"session_id\"):\n    # turn predictions into data frame and save as csv file\n    predicted_df = pd.DataFrame(predicted_labels,\n                                index = np.arange(1, predicted_labels.shape[0] + 1),\n                                columns=[target])\n    predicted_df.to_csv(out_file, index_label=index_label)","584f1f64":"skf = StratifiedKFold(n_splits=10, shuffle=True, random_state=42)","14ba3eed":"sgd_model = SGDClassifier(loss='log', random_state=42, n_jobs=-1)\nsgd_model.fit(X_train, y)","c38fc1f5":"sgd_predict = sgd_model.predict_proba(X_valid)","e4b39758":"sgd_model.score(X_valid, y_valid)","79f5d9dd":"auc_roc = roc_auc_score(y_valid, sgd_predict[:, 1])\nprint(auc_roc)","efdf7d57":"fpr, tpr, thresholds = roc_curve(y_valid, sgd_predict[:, 1])\n\nplt.figure(figsize=(12, 12))\nplt.plot([0, 1], [0, 1])\nplt.plot(fpr, tpr, linestyle='--')\n\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC-\u043a\u0440\u0438\u0432\u0430\u044f')\nplt.grid(True)\nplt.show()","e9d751e3":"%%time\nparam_grid = {'alpha' : [0.000001, 0.0000015, 0.000002, 0.0000025, 0.000003, 0.0000035, 0.000004, \\\n                         0.000005, 0.0000075, 0.00001, 0.00005]}\nsgd_grid = GridSearchCV(sgd_model, param_grid, scoring='roc_auc', cv=skf, n_jobs=-1,\\\n                        return_train_score=True, verbose=1)\nsgd_grid.fit(X_train, y)","78fc540d":"def plot_validation_curves(param_values, grid_cv_results_,\n                          xlabel='\u0421', ylabel='ROC AUC'):\n    train_mu, train_std = grid_cv_results_['mean_train_score'], grid_cv_results_['std_train_score']\n    valid_mu, valid_std = grid_cv_results_['mean_test_score'], grid_cv_results_['std_test_score']\n    train_line = plt.plot(param_values, train_mu, '-', label='train', color='green')\n    valid_line = plt.plot(param_values, valid_mu, '-', label='test', color='red')\n    plt.fill_between(param_values, train_mu - train_std, train_mu + train_std, edgecolor='none',\n                     facecolor=train_line[0].get_color(), alpha=0.2)\n    plt.fill_between(param_values, valid_mu - valid_std, valid_mu + valid_std, edgecolor='none',\n                     facecolor=valid_line[0].get_color(), alpha=0.2)\n    plt.xlabel(xlabel); plt.ylabel(ylabel)\n    plt.legend()","a88c1fcf":"plt.figure(figsize=(12, 10))\nplot_validation_curves(param_grid['alpha'], sgd_grid.cv_results_)\nplt.xlabel('hyperparamether alpha')\nplt.ylabel('accuracy score')\nplt.xlim(0, 0.000051)\nplt.grid(True);","dedd8cfc":"sgd_grid.score(X_train, y)","40f32367":"sgd_grid.score(X_valid, y_valid)","4f883d59":"sgd_grid.best_params_, sgd_grid.best_estimator_","1f2b341a":"sgd_final_model = SGDClassifier(loss='log', random_state=42, n_jobs=-1, alpha=5e-06)\nsgd_final_model.fit(X_train, y)","50bf969b":"sgd_final_pred = sgd_final_model.predict_proba(X_test)","c96762d8":"sgd_final_model.score(X_valid, y_valid)","9fc1283b":"write_to_submission_file(sgd_final_pred[:, 1], 'sgd_final.csv') #","f7143311":"\u0412 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 train_sessions.csv:\n\n* \u041f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 site_i \u2013 \u044d\u0442\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u043d\u044b\u0445 \u0441\u0430\u0439\u0442\u043e\u0432 (\u0440\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0430 \u0434\u0430\u043d\u0430 \u0432 pickle-\u0444\u0430\u0439\u043b\u0435 \u0441\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u043c site_dic.pkl)\n* \u041f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 time_j \u2013 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u044f \u0441\u0430\u0439\u0442\u043e\u0432 site_j\n* \u0426\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a target \u2013 \u0444\u0430\u043a\u0442 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0441\u0435\u0441\u0441\u0438\u044f \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u042d\u043b\u0438\u0441 (\u0442\u043e \u0435\u0441\u0442\u044c \u0447\u0442\u043e \u0438\u043c\u0435\u043d\u043d\u043e \u042d\u043b\u0438\u0441 \u0445\u043e\u0434\u0438\u043b\u0430 \u043f\u043e \u0432\u0441\u0435\u043c \u044d\u0442\u0438\u043c \u0441\u0430\u0439\u0442\u0430\u043c)\n\n\u0417\u0430\u0434\u0430\u0447\u0430 \u2013 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u044b \u0434\u043b\u044f \u0441\u0435\u0441\u0441\u0438\u0439 \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 (test_sessions.csv), \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c, \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442 \u043b\u0438 \u043e\u043d\u0438 \u042d\u043b\u0438\u0441. \u041d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u043e\u0439 train_sessions.csv \u2013 \u0432 train.zip \u0434\u0430\u043d\u044b \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430\u0445, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043c\u043e\u0436\u043d\u043e \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u044e \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443.","5ae7f89c":"**\u0412 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u2013 2297 \u0441\u0435\u0441\u0441\u0438\u0439 \u043e\u0434\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (Alice) \u0438 251264 \u0441\u0435\u0441\u0441\u0438\u0439 \u2013 \u0434\u0440\u0443\u0433\u0438\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u043d\u0435 \u042d\u043b\u0438\u0441. \u0414\u0438\u0441\u0431\u0430\u043b\u0430\u043d\u0441 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u043e\u0447\u0435\u043d\u044c \u0441\u0438\u043b\u044c\u043d\u044b\u0439, \u0438 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u0434\u043e\u043b\u044e \u0432\u0435\u0440\u043d\u044b\u0445 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 (accuracy) \u043d\u0435\u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e.**","7e15f3ea":"**\u0421\u0447\u0438\u0442\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 DataFrame train_df \u0438 test_df (\u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0430\u044f \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u0432\u044b\u0431\u043e\u0440\u043a\u0438).**","c19790ce":"**\u0420\u0430\u0437\u043e\u0431\u044c\u0435\u043c \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u043d\u0430 2 \u0447\u0430\u0441\u0442\u0438 \u0432 \u043f\u0440\u043e\u043f\u043e\u0440\u0446\u0438\u0438 7\/3, \u043f\u0440\u0438\u0447\u0435\u043c \u043d\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u0448\u0438\u0432\u0430\u044f. \u0418\u0441\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0435\u043d\u044b \u043f\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0442\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u0432\u044b\u0431\u043e\u0440\u043a\u0430 \u043f\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0447\u0435\u0442\u043a\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0430 \u043e\u0442 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439, \u044d\u0442\u043e \u0436\u0435 \u0441\u043e\u0431\u043b\u044e\u0434\u0435\u043c \u0438 \u0437\u0434\u0435\u0441\u044c.**","99b54703":"## \u0427\u0430\u0441\u0442\u044c 4. \u041f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445","582f6d08":"## \u0427\u0430\u0441\u0442\u044c 5. \u041a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f, \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043a\u0440\u0438\u0432\u044b\u0445 \u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435. \u0421\u0432\u0435\u0440\u0438\u043c \u043d\u0430 \u043b\u0438\u0434\u0435\u0440\u0431\u043e\u0440\u0434\u0435, \u0447\u0442\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043b\u0443\u0447\u0448\u0435.","50f822d4":"## \u0427\u0430\u0441\u0442\u044c 3. \u0412\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445","4101dc94":"**\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043c \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0443\u044e \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u2013 \u044d\u0442\u043e \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f, \u0447\u0442\u043e\u0431 \u0432\u043c\u0435\u0441\u0442\u0435 \u043f\u043e\u0442\u043e\u043c \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u0438\u0445 \u043a \u0440\u0430\u0437\u0440\u0435\u0436\u0435\u043d\u043d\u043e\u043c\u0443 \u0444\u043e\u0440\u043c\u0430\u0442\u0443.**","e2cc3aa2":"## \u0427\u0430\u0441\u0442\u044c 2. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432","b8376a46":"**\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0430\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043d\u0430 \u0441\u0430\u0439\u0442\u0435 \u0438 \u043e\u0431\u0449\u0435\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0441\u0435\u0441\u0441\u0438\u0438, \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438, \u0447\u0430\u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0435\u0441\u0441\u0438\u0438**","601fe31c":"**\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 `sklearn.linear_model.SGDClassifier` \u0441 \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u043f\u043e\u0442\u0435\u0440\u044c \u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c *random_state*=42. \u041e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043e\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0440\u0430\u0437\u0432\u0435 \u0447\u0442\u043e *n_jobs*=-1 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u043f\u043e\u043c\u0435\u0448\u0430\u0435\u0442. \u041e\u0431\u0443\u0447\u0438\u0442\u0435  \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 `(X_train, y_train)`.**","0417f000":"**\u0413\u0440\u0430\u0444\u0438\u043a\u0438 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u0438\u043d\u044b \u0441\u0435\u0441\u0441\u0438\u0438 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445, \u0447\u0430\u0441\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0435\u0441\u0441\u0438\u0438, \u0434\u043d\u044f \u043d\u0435\u0434\u0435\u043b\u0438, \u0447\u0438\u0441\u043b\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0430\u0439\u0442\u043e\u0432**","98257f61":"**\u041f\u043e\u043a\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0430 \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u043d\u044b\u0445 \u0441\u0430\u0439\u0442\u043e\u0432. \u0418\u043d\u0434\u0435\u043a\u0441\u044b \u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u0441 1, \u0442\u0430\u043a \u0447\u0442\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043d\u0430 \u043d\u0443\u043b\u0438.**"}}