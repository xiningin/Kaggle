{"cell_type":{"1e8aae88":"code","7641de3c":"code","28a840a6":"code","1e5c58dc":"code","92a4efe9":"code","d51604da":"code","a7774d16":"code","e087a83b":"code","7b46217f":"code","6cff5880":"code","c9b6bc19":"code","d56e4410":"code","3d1a0dd2":"code","6503e4d3":"code","76b59aef":"code","c02d035e":"code","c7607aa8":"code","690ed2c2":"code","68778ea0":"code","28271f36":"code","f1e18c04":"code","139ab333":"code","36308076":"markdown","a46ebe1c":"markdown","d929b4b8":"markdown","dd7f85b6":"markdown","cef862c6":"markdown","c377ecc0":"markdown","5e0ac5f6":"markdown","a3ffe072":"markdown","f3d62a4b":"markdown","8a01de9c":"markdown","9c08f7de":"markdown","ee136645":"markdown","79e5ea82":"markdown"},"source":{"1e8aae88":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","7641de3c":"USAhousing = pd.read_csv('..\/input\/usa-housing\/USA_Housing.csv')","28a840a6":"USAhousing.head()","1e5c58dc":"USAhousing.info()","92a4efe9":"USAhousing.describe()","d51604da":"USAhousing.columns","a7774d16":"sns.pairplot(USAhousing)","e087a83b":"sns.distplot(USAhousing['Price'])","7b46217f":"sns.heatmap(USAhousing.corr())","6cff5880":"X = USAhousing[['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms',\n               'Avg. Area Number of Bedrooms', 'Area Population']]\ny = USAhousing['Price']","c9b6bc19":"from sklearn.model_selection import train_test_split","d56e4410":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=101)","3d1a0dd2":"from sklearn.linear_model import LinearRegression","6503e4d3":"lm = LinearRegression()","76b59aef":"lm.fit(X_train,y_train)","c02d035e":"# print the intercept\nprint(lm.intercept_)","c7607aa8":"coeff_df = pd.DataFrame(lm.coef_,X.columns,columns=['Coefficient'])\ncoeff_df","690ed2c2":"predictions = lm.predict(X_test)","68778ea0":"plt.scatter(y_test,predictions)","28271f36":"sns.distplot((y_test-predictions),bins=50);","f1e18c04":"from sklearn import metrics","139ab333":"print('MAE:', metrics.mean_absolute_error(y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))","36308076":"# Regression Evaluation Metrics\n\n\nHere are three common evaluation metrics for regression problems:\n\n**Mean Absolute Error** (MAE) is the mean of the absolute value of the errors:\n\n$$\\frac 1n\\sum_{i=1}^n|y_i-\\hat{y}_i|$$\n\n**Mean Squared Error** (MSE) is the mean of the squared errors:\n\n$$\\frac 1n\\sum_{i=1}^n(y_i-\\hat{y}_i)^2$$\n\n**Root Mean Squared Error** (RMSE) is the square root of the mean of the squared errors:\n\n$$\\sqrt{\\frac 1n\\sum_{i=1}^n(y_i-\\hat{y}_i)^2}$$\n\nComparing these metrics:\n\n- **MAE** is the easiest to understand, because it's the average error.\n- **MSE** is more popular than MAE, because MSE \"punishes\" larger errors, which tends to be useful in the real world.\n- **RMSE** is even more popular than MSE, because RMSE is interpretable in the \"y\" units.\n\nAll of these are **loss functions**, because we want to minimize them.","a46ebe1c":"# Creating and Training the Model","d929b4b8":"# Model Evaluation\n\nLet's evaluate the model by checking out it's coefficients and how we can interpret them.","dd7f85b6":"**Let's get started!**<br\/>\nlet's get our environment ready with the libraries we'll need\n# Import Libraries","cef862c6":"# Predictions from our Model\n\nLet's grab predictions off our test set and see how well it did!","c377ecc0":"# Training a Linear Regression Model\n\nLet's now begin to train out regression model! We will need to first split up our data into an X array that contains the features to train on, and a y array with the target variable, in this case the Price column. We will toss out the Address column because it only has text info that the linear regression model can't use.\n\n### X and y arrays","5e0ac5f6":"**My first real Machine Learning Project! <br\/>Done!!!**","a3ffe072":"# USA_Housing - Linear Regression\n\nWe will somehow create a model that allows to put in a few features of a house and returns back an estimate of what the house would sell for.\n\nWe are using data set: USA_Housing.csv.\n\nThe data contains the following columns:\n\n* 'Avg. Area Income': Avg. Income of residents of the city house is located in.\n* 'Avg. Area House Age': Avg Age of Houses in same city\n* 'Avg. Area Number of Rooms': Avg Number of Rooms for Houses in same city\n* 'Avg. Area Number of Bedrooms': Avg Number of Bedrooms for Houses in same city\n* 'Area Population': Population of city house is located in\n* 'Price': Price that the house sold at\n* 'Address': Address for the house","f3d62a4b":"**Residual Histogram**","8a01de9c":"# Train Test Split\n\nNow let's split the data into a training set and a testing set. We will train out model on the training set and then use the test set to evaluate the model.","9c08f7de":"Interpreting the coefficients:\n\n- Holding all other features fixed, a 1 unit increase in **Avg. Area Income** is associated with an **increase of \\$21.52 **.\n- Holding all other features fixed, a 1 unit increase in **Avg. Area House Age** is associated with an **increase of \\$164883.28 **.\n- Holding all other features fixed, a 1 unit increase in **Avg. Area Number of Rooms** is associated with an **increase of \\$122368.67 **.\n- Holding all other features fixed, a 1 unit increase in **Avg. Area Number of Bedrooms** is associated with an **increase of \\$2233.80 **.\n- Holding all other features fixed, a 1 unit increase in **Area Population** is associated with an **increase of \\$15.15 **.","ee136645":"# Check out the data\nImport the data!","79e5ea82":"# EDA\n\nLet's create some simple plots to check out the data!"}}