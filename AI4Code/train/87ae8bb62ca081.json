{"cell_type":{"6e17b622":"code","e0168d46":"code","be16e704":"code","209f0f36":"code","e0ec3fac":"code","f14d2a24":"code","eec81492":"code","0b739a02":"code","368ea3a0":"code","76066f2a":"code","cab31428":"code","16214054":"code","222477e5":"code","625e0d96":"code","d1ec7b7b":"code","26b27042":"markdown","1010723d":"markdown","283429eb":"markdown","b8edfa81":"markdown","42f311c3":"markdown","a4c8415b":"markdown","47a3a86e":"markdown","ea151053":"markdown","2739bf6f":"markdown","2129c06f":"markdown","cbcde5cc":"markdown","50657098":"markdown","52416583":"markdown"},"source":{"6e17b622":"!pip install tika","e0168d46":"from tika import parser\nfile = r'..\/input\/resume-pdf\/candidate_042.pdf'\nfile_data = parser.from_file(file)\ntext = file_data['content']\nprint(text)","be16e704":"parsed_content = {}","209f0f36":"#E-MAIL\nimport re\ndef get_email_addresses(string):\n    r = re.compile(r'[\\w\\.-]+@[\\w\\.-]+')\n    return r.findall(string)\n\nemail = get_email_addresses(text)\nprint(email)\nparsed_content['E-mail'] = email","e0ec3fac":"#PHONE NUMBER\nimport re\ndef get_phone_numbers(string):\n    r = re.compile(r'(\\d{3}[-\\.\\s]??\\d{3}[-\\.\\s]??\\d{4}|\\(\\d{3}\\)\\s*\\d{3}[-\\.\\s]??\\d{4}|\\d{3}[-\\.\\s]??\\d{4})')\n    phone_numbers = r.findall(string)\n    return [re.sub(r'\\D', '', num) for num in phone_numbers]\n\nphone_number= get_phone_numbers(text)\nif len(phone_number) <= 10:\n    print(phone_number)\n    parsed_content['Phone number'] = phone_number","f14d2a24":"import spacy\nnlp = spacy.load('en_core_web_sm')\nfrom spacy.matcher import Matcher\nmatcher = Matcher(nlp.vocab)\n\ndef extract_name(text):\n   nlp_text = nlp(text)\n  \n   # First name and Last name are always Proper Nouns\n   pattern = [{'POS': 'PROPN'}, {'POS': 'PROPN'}]\n  \n   matcher.add('NAME', [pattern], on_match = None)\n  \n   matches = matcher(nlp_text)\n  \n   for match_id, start, end in matches:\n       span = nlp_text[start:end]\n       return span.text\n\nname = extract_name(text)\nprint(name)\nparsed_content['Name'] =  name","eec81492":"Keywords = [\"education\",\n            \"summary\",\n            \"accomplishments\",\n            \"executive profile\",\n            \"professional profile\",\n            \"personal profile\",\n            \"work background\",\n            \"academic profile\",\n            \"other activities\",\n            \"qualifications\",\n            \"experience\",\n            \"interests\",\n            \"skills\",\n            \"achievements\",\n            \"publications\",\n            \"publication\",\n            \"certifications\",\n            \"workshops\",\n            \"projects\",\n            \"internships\",\n            \"trainings\",\n            \"hobbies\",\n            \"overview\",\n            \"objective\",\n            \"position of responsibility\",\n            \"jobs\"\n           ]","0b739a02":"text = text.replace(\"\\n\",\" \")\ntext = text.replace(\"[^a-zA-Z0-9]\", \" \");  \nre.sub('\\W+','', text)\ntext = text.lower()\nprint(text)","368ea3a0":"content = {}\nindices = []\nkeys = []\nfor key in Keywords:\n    try:\n        content[key] = text[text.index(key) + len(key):]\n        indices.append(text.index(key))\n        keys.append(key)\n    except:\n        pass\n    ","76066f2a":"#Sorting the indices\nzipped_lists = zip(indices, keys)\nsorted_pairs = sorted(zipped_lists)\nsorted_pairs\n\ntuples = zip(*sorted_pairs)\nindices, keys = [ list(tuple) for tuple in  tuples]\nkeys","cab31428":"#Keeping the required content and removing the redundant part\ncontent = []\nfor idx in range(len(indices)):\n    if idx != len(indices)-1:\n        content.append(text[indices[idx]: indices[idx+1]])\n    else:\n        content.append(text[indices[idx]: ])","16214054":"for i in range(len(indices)):\n    parsed_content[keys[i]] = content[i]   ","222477e5":"#Displaying the parsed content\nparsed_content","625e0d96":"import json\nwith open(\"Parsed_Resume.json\", \"w\") as outfile:\n    json.dump(parsed_content, outfile)","d1ec7b7b":"a_file = open(\"Parsed_Resume.json\", \"r\")\na_json = json.load(a_file)\npretty_json = json.dumps(a_json, indent=4)\na_file.close()\nprint(pretty_json)","26b27042":"### Storing the parsed content in the dictionary","1010723d":"### Extracting Name","283429eb":"# RESUME PARSER","b8edfa81":"### List of Keywords to identify 'Headings' in the Resume text","42f311c3":"#### Creating a dictionary to store parsed content","a4c8415b":"### Installing dependencies","47a3a86e":"### Extracting Phone Number ","ea151053":"### Extracting E-Mail from the text","2739bf6f":"### Finding the headings and corresponding indices","2129c06f":"### Displaying the contents of json file","cbcde5cc":"### Cleaning the resume text","50657098":"### Dumping the dictionary into json format","52416583":"### Extracting text from pdf"}}