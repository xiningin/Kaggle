{"cell_type":{"b346225e":"code","22fd3e36":"code","d3282aa6":"code","34945a91":"code","acc5ddbc":"code","3c6c8afb":"code","867478ec":"code","c75ea607":"code","2d8f021a":"code","2456b447":"code","4141bb4d":"code","7aba5955":"code","09c2167c":"code","9dcb0594":"code","feb76e9a":"code","9043e1af":"code","72fe0b48":"code","aa6611aa":"code","7683a18a":"code","790eb645":"code","12a3194e":"code","2308919c":"code","733b6438":"code","358de9e8":"code","93e72261":"code","8c57bfb7":"code","fda34136":"code","7da9bd0c":"code","d2fe4d54":"code","7544a359":"code","9e8d0394":"code","97d202ca":"code","e0d56ed0":"code","e0a5f1e4":"code","92ba6f08":"code","a13a7930":"code","49bd1b5a":"code","72ed94e8":"code","0db4e6fa":"code","61693605":"code","0c2f2dd2":"code","a96376fa":"code","ecae0a05":"code","ffc104a1":"code","64e6e881":"code","b34a6df6":"code","61b2a85c":"code","10c533dc":"code","f0ac1846":"code","3311a449":"code","03d077ad":"code","9f808ca1":"code","c787d066":"code","cca64740":"code","9a9c5534":"code","736166c8":"code","eb4c0da4":"code","2640edb7":"code","c408f163":"code","ef60abc5":"code","4274639c":"code","24fee493":"code","482a25d4":"code","09bfc630":"code","48dc92e8":"code","2f92caf0":"code","6ed50092":"code","ad51d0e7":"code","238b0280":"code","5b8bc460":"code","b5de0784":"code","c30ac5a8":"code","cbec75a9":"code","6ba70f51":"code","aaa3190a":"code","c6206139":"code","5f11ace3":"code","e9de549b":"code","55a4eaed":"code","e14b84d4":"code","05874762":"code","35a276f1":"code","9918cff0":"code","194a978e":"code","48634130":"code","3de416d7":"code","88cf12b6":"code","8a9a0e51":"code","ed95bf35":"code","eb94ad02":"code","c7a8e441":"code","567813bf":"code","d0cc1867":"code","38753138":"code","78a410e2":"code","741e749d":"code","f589bc45":"code","54f2a7fc":"code","e3a4deb5":"code","e4c34605":"code","32f88190":"markdown","4ea75f86":"markdown","75359539":"markdown","1959c3a7":"markdown","a0994078":"markdown","47d7752c":"markdown","c1161b6e":"markdown","4d84ec6a":"markdown","feefc4ac":"markdown","dae927e9":"markdown","62784b41":"markdown","a72cba8f":"markdown","bad6f748":"markdown","a2a797ba":"markdown","f8869152":"markdown","e3c8f617":"markdown","21382625":"markdown","94f87fbd":"markdown","1eea4fbe":"markdown","7ad89e57":"markdown","9ecaea92":"markdown","251a991a":"markdown","fbe5dd73":"markdown","b06d4876":"markdown","60f86e72":"markdown","135132b7":"markdown","572c0003":"markdown","a3d0e041":"markdown","130777e7":"markdown","7f0cb5d4":"markdown","3ff773fb":"markdown","acdf2cb6":"markdown","2969c9b8":"markdown","22169877":"markdown","9f383de6":"markdown","f80a1224":"markdown","68d50f30":"markdown","39f049a8":"markdown","b2a23c10":"markdown","d180d5ec":"markdown","b1a8dda2":"markdown"},"source":{"b346225e":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","22fd3e36":"ames_df=pd.read_csv('..\/input\/ames-housing-dataset\/AmesHousing.csv')","d3282aa6":"ames_df.info()","34945a91":"ames_df.describe()","acc5ddbc":"ames_df.corr()['SalePrice'].sort_values()","3c6c8afb":"df_out1=ames_df[(ames_df['Overall Qual']>8) &(ames_df['SalePrice']<200000)][['SalePrice', 'Overall Qual']]\ndf_out1","867478ec":"sns.scatterplot(data=ames_df,x='Overall Qual',y='SalePrice')\nsns.scatterplot(data=df_out1,x='Overall Qual',y='SalePrice',color='m')\n\nplt.axhline(y=200000,color='r')","c75ea607":"df_out2=ames_df[(ames_df['Gr Liv Area']>4000)&(ames_df['SalePrice']<200000)][['SalePrice','Gr Liv Area']]\ndf_out2","2d8f021a":"sns.scatterplot(x='Gr Liv Area',y='SalePrice',data=ames_df,color='y')\nsns.scatterplot(x='Gr Liv Area',y='SalePrice',data=df_out2,color='c')\n\nplt.axhline(y=200000,color='g')\nplt.axvline(x=4000,color='g')","2456b447":"index_drop=ames_df[(ames_df['Gr Liv Area']>4000) & (ames_df['SalePrice']<400000)].index\names_df=ames_df.drop(index_drop, axis=0)","4141bb4d":"sns.boxplot(x='Overall Qual',y='SalePrice',data=ames_df)","7aba5955":"ames_df.head()","09c2167c":"ames_df=ames_df.drop('PID',axis=1)","9dcb0594":"ames_df.isnull()","feb76e9a":"ames_df_nan_sum=ames_df.isnull().sum()\names_df_nan_sum","9043e1af":"ames_df_nan_percent=round((ames_df_nan_sum\/len(ames_df))*100,3)\names_df_nan_percent","72fe0b48":"def missing_percent(df):\n    nan_percent= round(100*(df.isnull().sum()\/len(df)),3)\n    nan_percent= nan_percent[nan_percent>0].sort_values()\n    return nan_percent","aa6611aa":"ames_df_nan_percent= missing_percent(ames_df)\names_df_nan_percent","7683a18a":"plt.figure(figsize=(12,6))\nsns.barplot(x=ames_df_nan_percent.index, y=ames_df_nan_percent)\nplt.xticks(rotation=90)","790eb645":"plt.figure(figsize=(12,6))\nsns.barplot(x=ames_df_nan_percent.index, y=ames_df_nan_percent)\nplt.xticks(rotation=90)\n\n#Set 1% threshold:\nplt.ylim(0,1)","12a3194e":"ames_df_nan_percent[ames_df_nan_percent<1]","2308919c":"ames_df_nan_percent[ames_df_nan_percent<1].index","733b6438":"round(100\/len(ames_df),4)\n","358de9e8":"ames_df[ames_df['Electrical'].isnull()]","93e72261":"ames_df[ames_df['Garage Area'].isnull()]","8c57bfb7":"ames_df=ames_df.dropna(axis=0,subset=['Electrical', 'Garage Area'])","fda34136":"ames_df_nan_percent= missing_percent(ames_df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=ames_df_nan_percent.index, y=ames_df_nan_percent)\nplt.xticks(rotation=90)\nplt.ylim(0,1)","7da9bd0c":"ames_df[ames_df['Total Bsmt SF'].isnull()]","d2fe4d54":"ames_df[ames_df['Bsmt Half Bath'].isnull()]","7544a359":"ames_df[ames_df['Bsmt Full Bath'].isnull()]","9e8d0394":"#Numerical Columns fill with 0:\nbsmt_num_cols= ['BsmtFin SF 1', 'BsmtFin SF 2', 'Bsmt Unf SF','Total Bsmt SF' ,'Bsmt Full Bath', 'Bsmt Half Bath']\names_df[bsmt_num_cols]=ames_df[bsmt_num_cols].fillna(0)\n\n#String Columns fill with None:\nbsmt_str_cols= ['Bsmt Qual', 'Bsmt Cond', 'Bsmt Exposure', 'BsmtFin Type 1', 'BsmtFin Type 2']\names_df[bsmt_str_cols]=ames_df[bsmt_str_cols].fillna('None')","97d202ca":"ames_df_nan_percent= missing_percent(ames_df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=ames_df_nan_percent.index, y=ames_df_nan_percent)\nplt.xticks(rotation=90)\nplt.ylim(0,1)","e0d56ed0":"ames_df[\"Mas Vnr Type\"]= ames_df[\"Mas Vnr Type\"].fillna(\"None\")\names_df[\"Mas Vnr Area\"]= ames_df[\"Mas Vnr Area\"].fillna(0)","e0a5f1e4":"ames_df_nan_percent= missing_percent(ames_df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=ames_df_nan_percent.index, y=ames_df_nan_percent)\nplt.xticks(rotation=90)","92ba6f08":"ames_df[['Garage Type', 'Garage Yr Blt', 'Garage Finish', 'Garage Qual', 'Garage Cond']]","a13a7930":"Gar_str_cols= ['Garage Type', 'Garage Finish', 'Garage Qual', 'Garage Cond']\names_df[Gar_str_cols]=ames_df[Gar_str_cols].fillna('None')\n\names_df['Garage Yr Blt']=ames_df['Garage Yr Blt'].fillna(0)","49bd1b5a":"ames_df_nan_percent= missing_percent(ames_df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=ames_df_nan_percent.index, y=ames_df_nan_percent)\nplt.xticks(rotation=90)","72ed94e8":"ames_df_nan_percent.index","0db4e6fa":"ames_df[['Lot Frontage', 'Fireplace Qu', 'Fence', 'Alley', 'Misc Feature',\n       'Pool QC']]","61693605":"ames_df= ames_df.drop(['Fence', 'Alley', 'Misc Feature','Pool QC'], axis=1)","0c2f2dd2":"ames_df_nan_percent= missing_percent(ames_df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=ames_df_nan_percent.index, y=ames_df_nan_percent)\nplt.xticks(rotation=90)","a96376fa":"ames_df['Fireplace Qu']= ames_df['Fireplace Qu'].fillna('None')","ecae0a05":"ames_df_nan_percent= missing_percent(ames_df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=ames_df_nan_percent.index, y=ames_df_nan_percent)\nplt.xticks(rotation=90)","ffc104a1":"ames_df['Neighborhood'].unique()","64e6e881":"plt.figure(figsize=(8,12))\nsns.boxplot(data=ames_df, x='Lot Frontage', y='Neighborhood')","b34a6df6":"ames_df.groupby('Neighborhood')['Lot Frontage']","61b2a85c":"ames_df.groupby('Neighborhood')['Lot Frontage'].mean()","10c533dc":"ames_df.groupby('Neighborhood')['Lot Frontage'].transform(lambda val: val.fillna(val.mean()))","f0ac1846":"ames_df['Lot Frontage']=ames_df.groupby('Neighborhood')['Lot Frontage'].transform(lambda val: val.fillna(val.mean()))","3311a449":"ames_df_nan_percent= missing_percent(ames_df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=ames_df_nan_percent.index, y=ames_df_nan_percent)\nplt.xticks(rotation=90)","03d077ad":"ames_df['Lot Frontage']= ames_df['Lot Frontage'].fillna(0)","9f808ca1":"ames_df_nan_percent= missing_percent(ames_df)\names_df_nan_percent","c787d066":"ames_df['MS SubClass']","cca64740":"ames_df.info()","9a9c5534":"ames_df['MS SubClass'].unique()","736166c8":"ames_df['MS SubClass']= ames_df['MS SubClass'].apply(str)","eb4c0da4":"ames_df.info()","2640edb7":"ames_df.select_dtypes(include='object')","c408f163":"df_num= ames_df.select_dtypes(exclude='object')\ndf_obj= ames_df.select_dtypes(include='object')","ef60abc5":"df_num.info()","4274639c":"df_obj.info()","24fee493":"df_obj= pd.get_dummies(df_obj, drop_first=True)","482a25d4":"df_obj.shape","09bfc630":"Final_df= pd.concat([df_num, df_obj], axis=1)","48dc92e8":"Final_df.head()","2f92caf0":"from sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LinearRegression","6ed50092":"X=Final_df.drop('SalePrice',axis=1)\ny=Final_df['SalePrice']","ad51d0e7":"#Split the dataset to train and test\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=101)","238b0280":"model=LinearRegression()\nmodel.fit(X_train, y_train)","5b8bc460":"pd.DataFrame(model.coef_,X.columns,columns=[\"coeficient\"])\n","b5de0784":"y_pred=model.predict(X_test)","c30ac5a8":"#evaluating the model\nfrom sklearn import metrics\nMAE=metrics.mean_absolute_error(y_test,y_pred)\nMSE=metrics.mean_squared_error(y_test,y_pred)\nRMSE=np.sqrt(MSE)","cbec75a9":"pd.DataFrame(data=[MAE,MSE,RMSE],index=[\"MAE\",\"MSE\",\"RMSE\"],columns=[\"LinearRegression\"])","6ba70f51":"test_residuals=y_test-y_pred\n#the residuals should be random and close to normal distribution.","aaa3190a":"sns.scatterplot(x=y_test,y=y_pred,color=\"m\")\nplt.xlabel('Y-Test')\nplt.ylabel('Y-Pred')","c6206139":"sns.displot(test_residuals, bins=25, kde=True,color='m')","5f11ace3":"sns.scatterplot(x=y_test,y=test_residuals,color=\"m\")#test residuals should not show a clear pattern.\nplt.axhline(y=0,color=\"r\",ls=\"--\")\nplt.xlabel('Y-Test')\nplt.ylabel('residuals')","e9de549b":"from sklearn.preprocessing import PolynomialFeatures\n\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.linear_model import Ridge\n\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\n\nfrom sklearn.linear_model import RidgeCV\n\nfrom sklearn.linear_model import LassoCV\n\nfrom sklearn.linear_model import ElasticNetCV","55a4eaed":"ridge_model=Ridge(alpha=10)\n","e14b84d4":"ridge_model.fit(X_train,y_train)\n","05874762":"y_pred=ridge_model.predict(X_test)\n","35a276f1":"MAE3=metrics.mean_absolute_error(y_test,y_pred)\nMSE3=metrics.mean_squared_error(y_test,y_pred)\nRMSE3=np.sqrt(MSE3)","9918cff0":"data={'LinearRegression':[MAE,MSE,RMSE],\"Ridge regression\":[MAE3,MSE3,RMSE3]}\npd.DataFrame(data,index=[\"MAE\",\"MSE\",\"RMSE\"])","194a978e":"ridge_cv_model=RidgeCV(alphas=(0.1, 4.0, 10.0),scoring=\"neg_mean_absolute_error\")","48634130":"ridge_cv_model.fit(X_train,y_train)\n","3de416d7":"ridge_cv_model.alpha_\n","88cf12b6":"y_pred_ridge=ridge_cv_model.predict(X_test)\n","8a9a0e51":"MAE4=metrics.mean_absolute_error(y_test,y_pred_ridge)\nMSE4=metrics.mean_squared_error(y_test,y_pred_ridge)\nRMSE4=np.sqrt(MSE4)","ed95bf35":"data={'LinearRegression':[MAE,MSE,RMSE],\"Ridge regression\":[MAE3,MSE3,RMSE3],\"Ridgecv\":[MAE4,MSE4,RMSE4]}\npd.DataFrame(data,index=[\"MAE\",\"MSE\",\"RMSE\"])","eb94ad02":"lasso_cv_model=LassoCV(eps=0.1,n_alphas=100,cv=5)\n","c7a8e441":"lasso_cv_model.fit(X_train,y_train)\n","567813bf":"lasso_cv_model.alpha_\n","d0cc1867":"y_pred_lasso=lasso_cv_model.predict(X_test)\n","38753138":"MAE5=metrics.mean_absolute_error(y_test,y_pred_lasso)\nMSE5=metrics.mean_squared_error(y_test,y_pred_lasso)\nRMSE5=np.sqrt(MSE5)","78a410e2":"data={'LinearRegression':[MAE,MSE,RMSE],\"Ridge regression\":[MAE3,MSE3,RMSE3],\"Ridgecv\":[MAE4,MSE4,RMSE4],\"Lassocv\":[MAE5,MSE5,RMSE5]}\npd.DataFrame(data,index=[\"MAE\",\"MSE\",\"RMSE\"])","741e749d":"elastic_model=ElasticNetCV(l1_ratio=[0.1,0.5,0.7,0.9,0.95,0.99,1],cv=5,max_iter=100000)","f589bc45":"elastic_model.fit(X_train,y_train)\nelastic_model.l1_ratio_","54f2a7fc":"y_pred_elastic=elastic_model.predict(X_test)\n","e3a4deb5":"MAE6=metrics.mean_absolute_error(y_test,y_pred_elastic)\nMSE6=metrics.mean_squared_error(y_test,y_pred_elastic)\nRMSE6=np.sqrt(MSE6)","e4c34605":"data={'LinearRegression':[MAE,MSE,RMSE],\"Ridge regression\":[MAE3,MSE3,RMSE3],\"Ridgecv\":[MAE4,MSE4,RMSE4],\"Lassocv\":[MAE5,MSE5,RMSE5],\"elasticnet\":[MAE6,MSE6,RMSE6]}\npd.DataFrame(data,index=[\"MAE\",\"MSE\",\"RMSE\"])","32f88190":"#### Impute missing data based on other columns","4ea75f86":"### Mas Vnr Features:\n\n**Based on the Dataset Document File, missing values for 'Mas Vnr Type' and 'Mas Vnr Area' means the house doesn't have any mansonry veneer. so, we decide to fill the missing value as below**","75359539":"#### Remove the outliers","1959c3a7":"####  Dealing with Missing Data","a0994078":"#### Train_Test Split","47d7752c":"\n**I had previously worked about  Regularization  on Real estate. you can study (->[HERE](https:\/\/www.kaggle.com\/zahrajai\/regularization-ridge-lasso-elasticnet-realestate)<-)**","c1161b6e":"### Ridge Regression","4d84ec6a":"#### Import Libraries","feefc4ac":"###  Elastic Net","dae927e9":"#### Features related to Basement","62784b41":"#### After checking the data documentation,\n#### it shows that missing value (two rows) in Basement Features are becouse of there is no basement in these rows\n#### Decision: Filling in data based on column: numerical basement & string descriptive:\n","a72cba8f":"#### Regularization","bad6f748":"#### Residuals","a2a797ba":"#### every Feature with missing data must be checked!\n#### We choose a threshold of 1%. It means, if there is less than 1% of a feature are missing,\n#### then we will consider just dropping that rows","f8869152":"#### The percent of missing data in any feature:","e3c8f617":"##### Import Libraries","21382625":"### Creating Dummy Variables","94f87fbd":"### Dataset is Ready for any Analysis","1eea4fbe":"#### Convert to String","7ad89e57":"#### Based on the dataset documentation, NaN in Garage Columns seems to indicate no garage.\n\n#### Decision: Fill with 'None' or 0","9ecaea92":"### Dealing with Outliers","251a991a":"#### Make a Function to calculate the percent of missing data in each columns (feature) and then sort it\n","fbe5dd73":"#### We don't have any Missing Data","b06d4876":"\n**I had previously worked with Linear Regression on Real estate. you can study (->[HERE](https:\/\/www.kaggle.com\/zahrajai\/linear-regression-real-estate)<-)**","60f86e72":"#### Remove the Columns with more than 80% missing values","135132b7":"### Lasso regression","572c0003":"### Converting","a3d0e041":"#### plot the feature with missing indicating the percent of missing data\n","130777e7":"#### Import libraries\u00b6\n","7f0cb5d4":"#### Filling the missing Value","3ff773fb":"#### Removing the PID (We already have an index, so we don't need PID unique identifier. \n#### becuase it doesn't have any information and can't help our learning models)\n","acdf2cb6":"#### It shows that, Feature with just one missing rows has this percent value of missing data","2969c9b8":"#### Determine the feature and lable","22169877":"#### Train the model","9f383de6":"#### Filling in Fireplace Quality based on dataset documentation","f80a1224":"### Linear Regression\n","68d50f30":"#### How many missing data is there in each features?\n","39f049a8":"## Why data preparation is important?\n\nIt is undeniable that 80% of a data scientist\u2019s time and effort is spent in collecting, cleaning and preparing the data for analysis because datasets come in various sizes and are different in nature. It is extremely important for a data scientist to reshape and refine the datasets into usable datasets, which can be leveraged for analytics.\n\n\n## What is data preparation?\nin simple terms, preparing the log file to extract data in the required format for analysis,  can be termed as - data preparation.","b2a23c10":"#### Model Evaluation","d180d5ec":"#### Predictions from our Model","b1a8dda2":"#### Ridge Regression (Choosing an alpha value with Cross-Validation)"}}