{"cell_type":{"ad6de2de":"code","182c4140":"code","65b0948f":"code","4a1a669d":"code","b2698100":"code","85775fac":"code","98c91399":"code","77a8aafd":"code","540cd15f":"code","ebddbf20":"code","345db567":"code","0bb52880":"code","110eb535":"code","a860831c":"code","1731a90f":"code","a0ef6847":"code","e21748a9":"code","f6eb2d25":"code","6ef87cbb":"code","ef38bda0":"code","49a1ce34":"code","45d785ce":"code","8d95b2dc":"code","f424cad5":"code","7b37cae1":"code","e70ce958":"code","94595fb2":"code","fb687c48":"code","027ea185":"code","35d2b2c6":"code","c9d8c1d4":"code","0a6c497e":"code","26042592":"code","952d14f9":"code","740bc5dd":"code","5fd55b1e":"code","3fc0c08b":"code","0dd260a8":"code","839f9bd0":"code","8e714a7b":"code","26399c28":"code","3dcf75ca":"code","7e60fa7c":"code","9bc2fafc":"code","cf9c7945":"code","ebc39b14":"code","dc1fdf10":"code","2fb7c22a":"code","d87c9270":"code","12029471":"code","9d2fe734":"code","b9bf7556":"code","eeb455c8":"code","5a28f208":"code","45ae064f":"code","77992f4f":"code","81fede4a":"code","8466bd9c":"markdown","a646a7e4":"markdown","31aaf6e3":"markdown","7a18077c":"markdown","e7dee422":"markdown","38c819df":"markdown","76072a60":"markdown","9f9697b2":"markdown","ddb0d49e":"markdown","d1fbbfa7":"markdown","b70a623d":"markdown","1346673e":"markdown","58f2c798":"markdown","6ab818e5":"markdown","1e60a04a":"markdown","bf0d37ed":"markdown","090026de":"markdown"},"source":{"ad6de2de":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","182c4140":"#imports\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import cross_val_score\nimport warnings\nfrom collections import Counter\nimport datetime\nimport wordcloud\nimport spacy\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn import preprocessing\nfrom xgboost import XGBRegressor\nfrom lightgbm import LGBMRegressor\nimport json\nwarnings.filterwarnings('ignore')\npd.set_option('max_rows',50000)\npd.set_option('max_columns',5000)\npd.options.display.float_format = '{:.2f}'.format\nplt.rc('figure', figsize=(8, 5), dpi=100)","65b0948f":"df_usa = pd.read_csv('\/kaggle\/input\/youtube-new\/USvideos.csv')\ndf_usa.head()","4a1a669d":"df_usa.info()","b2698100":"df_usa.describe()","85775fac":"df_usa.isna().sum()","98c91399":"df_usa['description'] = df_usa['description'].fillna(\"\")\ndf_usa.isna().sum()","77a8aafd":"df_usa['trending_date']","540cd15f":"df_usa['trending_date'] = pd.to_datetime(df_usa['trending_date'],format=\"%y.%d.%m\")","ebddbf20":"df_usa['trending_date']","345db567":"df_usa.head()","0bb52880":"plt.figure(figsize=(15,10))\nsns.distplot(df_usa[\"views\"], kde=False, \n                 hist_kws={'alpha': 1}, bins=np.linspace(0, 2.3e8, 47))\nplt.ylabel('No. of videos',fontsize=20)\nplt.show()","110eb535":"df_usa[df_usa['views'] < 1000000]['views'].count() \/ df_usa['views'].count() * 100","a860831c":"plt.figure(figsize=(15,10))\nsns.distplot(df_usa[\"likes\"], kde=False, \n                 hist_kws={'alpha': 1}, bins=np.linspace(0, 6e6, 61))\nplt.ylabel('No. of videos',fontsize=20)\nplt.show()","1731a90f":"df_usa[df_usa['likes'] < 40000]['likes'].count() \/ df_usa['likes'].count() * 100","a0ef6847":"plt.figure(figsize=(15,10))\nsns.distplot(df_usa[\"comment_count\"], kde=False, \n                 hist_kws={'alpha': 1}, bins=np.linspace(0, 6e6, 61))\nplt.ylabel('No. of videos',fontsize=20)\nplt.show()","e21748a9":"df_usa[df_usa['comment_count'] < 4000]['comment_count'].count() \/ df_usa['comment_count'].count() * 100","f6eb2d25":"plt.figure(figsize=(15,10))\nsns.barplot(x=df_usa['trending_date'].dt.year,y=df_usa['views'],palette='rocket_r')","6ef87cbb":"plt.figure(figsize=(15,10))\nsns.barplot(x=df_usa['trending_date'].dt.month,y=df_usa['views'],palette='rocket_r')","ef38bda0":"plt.figure(figsize=(15,10))\nsns.barplot(x=df_usa['trending_date'].dt.day,y=df_usa['views'],palette='rocket_r')","49a1ce34":"day_bins = df_usa['trending_date'].dt.day\nday_bins = day_bins.apply(lambda x:0 if x<=10 else (1 if x>10 and x<=20 else 2))\nplt.figure(figsize=(15,10))\nsns.barplot(x=day_bins,y=df_usa['views'],palette='rocket_r')","45d785ce":"df_usa['channel_title'].value_counts()","8d95b2dc":"plt.figure(figsize=(15,10))\nsns.heatmap(df_usa.corr(),annot=True)","f424cad5":"def contains_capitalized_word(s):\n    for w in s.split():\n        if w.isupper():\n            return True\n    return False\ntitle_cap = df_usa['title'].apply(contains_capitalized_word)\ntitle_cap = title_cap.value_counts(normalize=True)","7b37cae1":"fig, ax = plt.subplots()\n_ = ax.pie([title_cap[False], title_cap[True]], labels=['No', 'Yes'], \n           colors=['#003f5c', '#ffa600'], textprops={'color': '#040204'}, startangle=45)\n_ = ax.axis('equal')\n_ = ax.set_title('Title Contains Capitalized Word?')","e70ce958":"title_cap1 = df_usa['title'].apply(contains_capitalized_word)\nplt.figure(figsize=(15,10))\nsns.barplot(x=title_cap1,y=df_usa['views'],palette='rocket_r')","94595fb2":"title_len = df_usa[\"title\"].apply(lambda x: len(x))\n\nfig, ax = plt.subplots()\n_ = sns.distplot(title_len, kde=False, rug=False, \n                  hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"Title Length\", ylabel=\"No. of videos\", xticks=range(0, 110, 10))","fb687c48":"fig, ax = plt.subplots()\n_ = ax.scatter(x=df_usa['views'], y=title_len, edgecolors=\"#000000\", linewidths=0.5)\n_ = ax.set(xlabel=\"Views\", ylabel=\"Title Length\")","027ea185":"df_usa['comments_disabled'].value_counts()","35d2b2c6":"plt.figure(figsize=(15,10))\nsns.barplot(x=df_usa['comments_disabled'],y=df_usa['views'],palette='rocket_r')","c9d8c1d4":"df_usa['ratings_disabled'].value_counts()","0a6c497e":"plt.figure(figsize=(15,10))\nsns.barplot(x=df_usa['ratings_disabled'],y=df_usa['views'],palette='rocket_r')","26042592":"plt.figure(figsize=(15,10))\nsns.scatterplot(x=df_usa['likes'],y=df_usa['views'],hue=df_usa['comment_count'],palette='rocket_r')","952d14f9":"plt.figure(figsize=(15,10))\nsns.scatterplot(x=df_usa['comment_count'],y=df_usa['views'],hue=df_usa['likes'],palette='rocket_r')","740bc5dd":"VL_group = df_usa.groupby('views')['likes'].mean().sort_values(ascending=False)\nVL_group.head(500)","5fd55b1e":"title_words = list(df_usa[\"title\"].apply(lambda x: x.split()))\ntitle_words = [x for y in title_words for x in y]\nCounter(title_words).most_common(40)","3fc0c08b":"wc = wordcloud.WordCloud(width=1200, height=500, \n                         collocations=False, background_color=\"white\", \n                         colormap=\"tab20b\").generate(\" \".join(title_words))\nplt.figure(figsize=(25,10))\nplt.imshow(wc, interpolation='bilinear')\n_ = plt.axis(\"off\")","0dd260a8":"with open(\"\/kaggle\/input\/youtube-new\/US_category_id.json\") as f:\n    categories = json.load(f)[\"items\"]\ncat_dict = {}\nfor cat in categories:\n    cat_dict[int(cat[\"id\"])] = cat[\"snippet\"][\"title\"]\ndf_usa['category_name'] = df_usa['category_id'].map(cat_dict)","839f9bd0":"df_usa['category_name']","8e714a7b":"cdf = df_usa[\"category_name\"].value_counts().to_frame().reset_index()\ncdf.rename(columns={\"index\": \"category_name\", \"category_name\": \"No_of_videos\"}, inplace=True)\nplt.figure(figsize=(25,10))\nfig, ax = plt.subplots()\n_ = sns.barplot(x=\"category_name\", y=\"No_of_videos\", data=cdf, \n                palette=sns.cubehelix_palette(n_colors=16, reverse=True), ax=ax)\n_ = ax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n_ = ax.set(xlabel=\"Category\", ylabel=\"No. of videos\")\nplt.show()","26399c28":"plt.figure(figsize=(15,10))\nsns.barplot(x=df_usa['category_name'],y=df_usa['views'],palette='magma_r')\nplt.xticks(rotation=90,fontsize=20)\nplt.show()","3dcf75ca":"df_usa[\"publishing_day\"] = df_usa[\"publish_time\"].apply(\n    lambda x: datetime.datetime.strptime(x[:10], \"%Y-%m-%d\").date().strftime('%a'))\ndf_usa[\"publishing_hour\"] = df_usa[\"publish_time\"].apply(lambda x: x[11:13])","7e60fa7c":"cdf = df_usa[\"publishing_day\"].value_counts()\\\n        .to_frame().reset_index().rename(columns={\"index\": \"publishing_day\", \"publishing_day\": \"No_of_videos\"})\nplt.figure(figsize=(15,10))\nsns.barplot(x=\"publishing_day\",y=\"No_of_videos\",data=cdf,palette='rocket_r')\nplt.ylabel(\"No_of_videos\",fontsize=20)\nplt.xlabel('publishing day')\nplt.show()","9bc2fafc":"plt.figure(figsize=(15,10))\nsns.barplot(x=df_usa['publishing_day'],y=df_usa['views'],palette='magma_r')","cf9c7945":"cdf1 = df_usa[\"publishing_hour\"].value_counts()\\\n        .to_frame().reset_index().rename(columns={\"index\": \"publishing_hour\", \"publishing_hour\": \"No_of_videos\"})\nplt.figure(figsize=(15,10))\nsns.barplot(x=\"publishing_hour\",y=\"No_of_videos\",data=cdf1,palette='rocket_r')\nplt.ylabel(\"No_of_videos\",fontsize=20)\nplt.xlabel('publishing hour')\nplt.show()","ebc39b14":"plt.figure(figsize=(15,10))\nsns.barplot(x=df_usa['publishing_hour'],y=df_usa['views'],palette='magma_r')","dc1fdf10":"hour_bin = df_usa['publishing_hour'].apply(lambda x:0 if int(x)<=6 else (1 if int(x)>6 and int(x)<=12 else(2 if int(x)>12 and int(x)<=18 else 3)))\nplt.figure(figsize=(15,10))\nsns.barplot(x=hour_bin,y=df_usa['views'],palette='rocket_r')","2fb7c22a":"nlp = spacy.load('en_core_web_lg')\n#title_vector = np.array([nlp(text).vector for text in df_usa.title])\n#tags_vector = np.array([nlp(text).vector for text in df_usa.tags])\n#description_vector = np.array([nlp(text).vector for text in df_usa.description])\n#print(title_vector.shape,tags_vector.shape,description_vector.shape)","d87c9270":"sns.distplot(df_usa['comment_count'])","12029471":"cat_dict = {'News & Politics':0,'Education':1,'Shows':2,'Travel & Events':2,'Howto & Style':2,\n           'Pets & Animals':2,'Autos & Vehicles':3,'Science & Technology':3,'Comedy':3,\n           'People & Blogs':3,'Entertainment':4,'Sports':4,'Gaming':5,'Nonprofits & Activism':6,\n           'Film & Animation':7,'Music':8}\nday_dict = {'Mon':0,'Tue':1,'Wed':2,'Thu':3,'Fri':4,'Sat':5,'Sun':6}\ndf_usa['title_len'] = title_len\ndf_usa['trending_day'] = day_bins\ndf_usa['trending_month'] = df_usa['trending_date'].dt.month\ndf_usa['title_cap'] = title_cap1\ndf_usa['category_map'] = df_usa['category_name'].map(cat_dict)\ndf_usa['publishing_day_map'] = df_usa['publishing_day'].map(day_dict)\ndf_usa['comment_count_log'] = np.log1p(df_usa['comment_count'])\ndf_usa['likes_log'] = np.log1p(df_usa['likes'])\ndf_usa.info()","9d2fe734":"cols = ['title_cap','trending_month','trending_day','title_len','publishing_hour','publishing_day_map',\n       'likes','comment_count','category_map','dislikes']\ntarget = df_usa['views']\ntrain = df_usa[cols]","b9bf7556":"target.head()","eeb455c8":"X_train,X_test,y_train,y_test = train_test_split(train,target,test_size=0.1,random_state=42,shuffle=True)\nprint(X_train.shape,X_test.shape,y_train.shape,y_test.shape)","5a28f208":"scaler = preprocessing.StandardScaler()\nscaler.fit(X_train)\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)","45ae064f":"rf = RandomForestRegressor(bootstrap=True,criterion='mse',random_state=42,max_depth=35,\n                           max_features=10,n_estimators=2500,n_jobs=-1)\n\nxgb = XGBRegressor()","77992f4f":"#cross_val_score(rf, X_train, y_train, scoring='accuracy', cv=5, n_jobs=-1)","81fede4a":"xgb.fit(X_train,y_train)\nsqrt(mean_squared_error(y_test, xgb.predict(X_test)))","8466bd9c":"scaling the input,","a646a7e4":"# EDA","31aaf6e3":"training","7a18077c":"Videos published on Fridays are getting the most views","e7dee422":"extracting categories from the json file...","38c819df":"looks like videos with most views were uploaded in june.","76072a60":"titles with average length seems to be getting most amount of views.","9f9697b2":"lets see if we can predict the number of views on trending videos by training a model on different features.","ddb0d49e":"a simple correaltion heatmap of features.","d1fbbfa7":"let's have a look at the most common words appearing in title.","b70a623d":"dividing the day in 4 parts,videos uploaded in part two (6am to 12pm) gets most views","1346673e":"# More Analysis to follow...","58f2c798":"# MODELLING","6ab818e5":"most of the records in the dataset are from 2018. ","1e60a04a":"categorizing month into 3 bins, middle of the month seems to be garnering relatively less views. ","bf0d37ed":"most videos belong to the Entertainment category.","090026de":"Obviously, its the music videos people watch the most, on repeat quite often.\nGaming and Entertainment are not far behind though."}}