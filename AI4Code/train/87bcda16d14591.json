{"cell_type":{"923e6060":"code","c55bb3cb":"code","9c15f015":"code","3fa6c785":"code","376936f1":"code","3628b16b":"code","788d1a15":"code","6993f50f":"code","6f7de89f":"code","d97ecc4a":"code","337816e3":"markdown","009e59ed":"markdown","3b3c94fb":"markdown","8b8317a4":"markdown","7f560d62":"markdown","cd6eeace":"markdown","c44d7cc8":"markdown","33d382b3":"markdown","8e8a9728":"markdown"},"source":{"923e6060":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n# Any results you write to the current directory are saved as output.","c55bb3cb":"data = pd.read_csv('..\/input\/globalterrorismdb_0718dist.csv', encoding ='ISO-8859-1')\n\ndata.rename(columns={'iyear':'Year','imonth':'Month','iday':'Day','country_txt':'Country', \n                     'provstate':'City','attacktype1_txt':'AttackType','target1':'Target','nkill':'Killed',\n                     'nwound':'Wounded','summary':'Summary','gname':'Group','targtype1_txt':'Target_type',\n                     'weaptype1_txt':'Weapon_type', 'motive':'Motive'},inplace=True)\n\ndata = data[['Year','Month','Day','Country','City','latitude','longitude','AttackType','Killed','Wounded',\n             'Target','Summary','Group','Target_type','Weapon_type','Motive']]\n\ndata = data[data.Country== 'Turkey']\n\ndata['Killed'] = data['Killed'].fillna(0)\ndata['Wounded'] = data['Wounded'].fillna(0)\n\ndata['Casualties'] = data['Killed'] + data['Wounded']\n\ndata.info()\n","9c15f015":"data.Year.plot(kind = 'hist', color = 'b', bins=range(1970, 2018), figsize = (16,7), alpha=0.5, grid=True)\nplt.xticks(range(1970, 2018), rotation=90, fontsize=14)\nplt.yticks(fontsize=14)\nplt.xlabel(\"Years\", fontsize=15)\nplt.ylabel(\"Number of Attacks\", fontsize=15)\nplt.title(\"Number of Attacks By Year\", fontsize=16)\nplt.show()","3fa6c785":"data.City.value_counts().drop('Unknown').head(10).plot.bar(figsize=[16,9], grid=True, alpha=0.8)\nplt.yticks(fontsize=14)\nplt.xticks(fontsize=14)\nplt.xlabel(\"Cities\", fontsize=15)\nplt.ylabel(\"Number of Attacks\", fontsize=15)\nplt.title(\"Most Targeted Cities\", fontsize=16)\nplt.show()","376936f1":"from wordcloud import WordCloud\ndf = data[data.City != 'Unknown']\nwordcloud = WordCloud(max_font_size=50, max_words=100, background_color=\"white\").generate(\" \".join(df.City))\nplt.figure()\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.savefig(\"graph.png\")\nplt.show()","3628b16b":"from plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected = True)\nimport plotly.graph_objs as go\n\nnewData = pd.DataFrame(data.groupby(['City', 'Year']).Killed.sum())  # Groupby City and Year\n#Chose five(5) cities that have highest death results. And if there is unknown cities, drop them.\ncityNames = data.groupby('City').Killed.sum().sort_values(ascending=False).drop('Unknown').head().index\nnewData = newData.loc[cityNames]\n\ntrace = [0] * 5\ni = 0\n#Plot death result for each city years by years.\nfor city in cityNames:\n    trace[i] = go.Scatter (\n                        x = newData.loc[city].index,\n                        y = newData.loc[city].Killed,\n                        mode = \"lines\",\n                        name = city,\n                        marker=dict(size=12),\n                        #text = city\n    )\n    i += 1\n    \ndata_result = trace\nlayout_result = dict(title = \"Top 5 Cities That Have Highest Death Results According to Years\", hovermode='closest',\n             xaxis = dict(title = \"Years\", ticklen = 5, zeroline = False),\n             yaxis = dict(title = \"Death Results\", ticklen = 5, zeroline = False))\nfig = dict(data = data_result, layout = layout_result)\niplot(fig)","788d1a15":"casualties = data.groupby('Weapon_type').Casualties.sum()\ncasualties = casualties[ casualties > 0]\nplt.figure()\ncasualties.plot.bar(alpha=0.8, grid=True, figsize=(16,6))\nplt.yticks(fontsize=14)\nplt.xticks(fontsize=14)\nplt.xlabel(\"Weapon Type\", fontsize=15)\nplt.ylabel(\"Casaulties\", fontsize=15)\nplt.title(\"Casulties by Weapon Type\", fontsize=16)\nplt.show()","6993f50f":"data.Group.value_counts().head(10).plot.bar(figsize=[18,9], grid=True, alpha=0.8)\nplt.yticks(fontsize=14)\nplt.xticks(fontsize=14)\nplt.ylabel(\"Number of Attacks\", fontsize=15)\nplt.show()","6f7de89f":"pkk = data[data.Group == \"Kurdistan Workers' Party (PKK)\"]\npkk.City.value_counts().drop(\"Unknown\").head(10).plot.bar(figsize=[16,8], grid=True, alpha=0.8)\nplt.yticks(fontsize=14)\nplt.xticks(fontsize=14)\nplt.ylabel(\"Number of Attacks\", fontsize=15)\nplt.title(\"Most Targeted Cities\", fontsize=16)\nplt.show()","d97ecc4a":"import plotly.plotly as py\npkk = pkk[pkk.latitude.notnull() & pkk.Casualties > 0]\npkk['text'] = \"City : \" + pkk[\"City\"].astype(str) + \" <br>\"+\"Year : \" + pkk['Year'].astype(str) +\\\n                 \" <br>\" + \"Casualties : \" + (pkk[\"Casualties\"].astype(int)).astype(str) +\\\n                 \" <br>\" + \"Attack Type : \" + pkk[\"AttackType\"]\nattacks = dict(\n               type = 'scattergeo',\n               lon = pkk['longitude'],\n               lat = pkk['latitude'],\n               text = pkk['text'],\n               hoverinfo = 'text',\n               mode = 'markers',\n               marker = dict(\n                     size = pkk[\"Casualties\"] ** 0.25 * 10,\n                     opacity = 0.7,\n                     color = 'rgb(10, 160, 200)'\n               )\n         )\n        \nlayout = dict(\n            title = 'PKK Attacks in Turkey',\n            hovermode='closest',\n            geo = dict(\n                showframe=False,\n                showcountries = True,\n                lonaxis = dict( range= [ 25.0, 46.0 ] ),\n                lataxis = dict( range= [ 35.0, 43.0 ] ),\n            )\n         )\nfigure = dict(data = [attacks], layout = layout)\niplot(figure)","337816e3":"    Which ones are the most targeted cities? I want to see this as a plot bar. Generally big cities and southeastern of Turkey has been targeted.","009e59ed":"**I want to explore terrorist attacks in Turkey with using Global Terrorism Database.**","3b3c94fb":"I want to show those attacks on the map.","8b8317a4":"Let's see the which groups did the terrorist attacks and the what's the their number of attacks.","7f560d62":"    Let's see how many attacks occurred each year.","cd6eeace":"Which cities are targeted by PKK? Mostly southeastern side of Turkey.","c44d7cc8":"1. Read file\n2. Eliminate unnecessary columns\n3. Change columns names\n4. Change Killed and Wounded columns' NaN values to 0(zero) and create Casualties column\n4. Select attacks which are target to Turkey.","33d382b3":"This chart shows the top 5 cities that have highest death results by years. I used plotly libraries.","8e8a9728":"    Weapon Type and Casulties"}}