{"cell_type":{"68e1b642":"code","8b8b345e":"code","71a708c4":"code","14c407e3":"code","ebfd408e":"code","6571422a":"code","cd6d65c1":"code","86b0f408":"code","1bf9607a":"code","ba72338d":"code","f6886aad":"code","7b53f156":"code","9f333759":"code","bd3935b8":"code","1b808e61":"code","6d83f4fb":"code","f7320487":"code","0f7b444c":"code","c968e7c5":"code","585b49bb":"code","84a73222":"code","9ece50fd":"code","674a9f21":"code","4c6b5cf4":"code","6ac10469":"code","e3df423d":"code","5eba18c1":"code","0850b459":"code","f16be449":"code","2008c193":"code","829f3e58":"code","f409e84e":"code","1ff0d85d":"code","96c58166":"code","51ddc9ba":"code","2c764032":"code","78670025":"code","86136db9":"code","592ade24":"code","77fb8ee4":"code","2e232280":"code","49ff7c74":"code","fc9dcbec":"code","61e13b2a":"code","42c9e53a":"code","17c556ed":"code","aad5f00f":"code","8a2f98ab":"code","5b2d92a4":"code","d40d5804":"code","af428aee":"code","bd4748f5":"code","46a3fb7b":"code","2fcb08d5":"markdown","4c398072":"markdown","277940c8":"markdown","aeeae0f3":"markdown","ec83e7a2":"markdown","051b777b":"markdown","f39c1c21":"markdown","fe9e868f":"markdown","e67f2068":"markdown"},"source":{"68e1b642":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","8b8b345e":"df=pd.read_csv(\"..\/input\/german-credit-data-with-risk\/german_credit_data.csv\")\ndf=df.iloc[:,1:]\ndf.head()","71a708c4":"sns.set(font_scale=1,style=\"whitegrid\")\nfig,ax=plt.subplots(ncols=2,nrows=3,figsize=(16,12))\ncat_list=[\"Age\",\"Credit amount\",\"Duration\"]\ncount=0\nfor i in range(3):\n    sns.distplot(df[cat_list[count]],ax=ax[i][0],kde=False,color=\"#F43EEC\")\n    sns.kdeplot(df[cat_list[count]],ax=ax[i][1],shade=True,color=\"#359F4B\")\n    count+=1","14c407e3":"fig,ax=plt.subplots(ncols=2,nrows=3,figsize=(16,12))\ncat_list=[\"Age\",\"Duration\",\"Credit amount\"]\ncount=0\nfor i in range(3):\n    sns.distplot(df[df[\"Sex\"]==\"male\"][cat_list[count]],ax=ax[i][0],kde=False,color=\"#2758FF\")\n    sns.distplot(df[df[\"Sex\"]==\"female\"][cat_list[count]],ax=ax[i][0],kde=False,color=\"#FF62AE\")\n    sns.kdeplot(df[df[\"Sex\"]==\"male\"][cat_list[count]],ax=ax[i][1],shade=True,color=\"#2758FF\")\n    sns.kdeplot(df[df[\"Sex\"]==\"female\"][cat_list[count]],ax=ax[i][1],shade=True,color=\"#FF62AE\")\n    ax[i][0].legend(labels=['male','female'])\n    ax[i][1].legend(labels=['male','female'])\n    count+=1","ebfd408e":"fig,ax=plt.subplots(ncols=2,nrows=3,figsize=(16,12))\ncat_list=[\"Age\",\"Duration\",\"Credit amount\"]\ncount=0\nfor i in range(3):\n    sns.distplot(df[df[\"Risk\"]==\"good\"][cat_list[count]],ax=ax[i][0],kde=False,color=\"#00FF7F\")\n    sns.distplot(df[df[\"Risk\"]==\"bad\"][cat_list[count]],ax=ax[i][0],kde=False,color=\"#FF2424\")\n    sns.kdeplot(df[df[\"Risk\"]==\"good\"][cat_list[count]],ax=ax[i][1],shade=True,color=\"#00FF7F\")\n    sns.kdeplot(df[df[\"Risk\"]==\"bad\"][cat_list[count]],ax=ax[i][1],shade=True,color=\"#FF2424\")\n    ax[i][0].legend(labels=['good','bad'])\n    ax[i][1].legend(labels=['good','bad'])\n    count+=1","6571422a":"df.insert(1,\"Cat Age\",np.NaN)\ndf.loc[df[\"Age\"]<25,\"Cat Age\"]=\"0-25\"\ndf.loc[((df[\"Age\"]>=25) & (df[\"Age\"]<30)),\"Cat Age\"]=\"25-30\"\ndf.loc[((df[\"Age\"]>=30) & (df[\"Age\"]<35)),\"Cat Age\"]=\"30-35\"\ndf.loc[((df[\"Age\"]>=35) & (df[\"Age\"]<40)),\"Cat Age\"]=\"35-40\"\ndf.loc[((df[\"Age\"]>=40) & (df[\"Age\"]<50)),\"Cat Age\"]=\"40-50\"\ndf.loc[((df[\"Age\"]>=50) & (df[\"Age\"]<76)),\"Cat Age\"]=\"50-75\"","cd6d65c1":"df.insert(9,\"Cat Duration\",df[\"Duration\"])\nfor i in df[\"Cat Duration\"]:\n    if i<12:\n        df[\"Cat Duration\"]=df[\"Cat Duration\"].replace(i,\"0-12\")\n    elif (i>=12) and (i<24):\n        df[\"Cat Duration\"]=df[\"Cat Duration\"].replace(i,\"12-24\")\n    elif (i>=24) and (i<36):\n        df[\"Cat Duration\"]=df[\"Cat Duration\"].replace(i,\"24-36\")\n    elif (i>=36) and (i<48):\n        df[\"Cat Duration\"]=df[\"Cat Duration\"].replace(i,\"36-48\")\n    elif (i>=48) and (i<60):\n        df[\"Cat Duration\"]=df[\"Cat Duration\"].replace(i,\"48-60\")\n    elif (i>=60) and (i<=72):\n        df[\"Cat Duration\"]=df[\"Cat Duration\"].replace(i,\"60-72\")","86b0f408":"df.insert(4,\"Cat Job\",df[\"Job\"])\ndf[\"Cat Job\"]=df[\"Cat Job\"].astype(\"category\")\ndf[\"Cat Job\"]=df[\"Cat Job\"].replace(0,\"unskilled\")\ndf[\"Cat Job\"]=df[\"Cat Job\"].replace(1,\"resident\")\ndf[\"Cat Job\"]=df[\"Cat Job\"].replace(2,\"skilled\")\ndf[\"Cat Job\"]=df[\"Cat Job\"].replace(3,\"highly skilled\")","1bf9607a":"df[\"Job\"]=pd.Categorical(df[\"Job\"],categories=[0,1,2,3],ordered=True)\ndf[\"Cat Age\"]=pd.Categorical(df[\"Cat Age\"],categories=['0-25','25-30', '30-35','35-40','40-50','50-75'],ordered=True)\ndf[\"Cat Duration\"]=pd.Categorical(df[\"Cat Duration\"],categories=['0-12','12-24', '24-36','36-48','48-60','60-72'],ordered=True)","ba72338d":"df.head()","f6886aad":"import missingno as msno","7b53f156":"msno.bar(df,sort='descending')","9f333759":"msno.matrix(df)","bd3935b8":"msno.heatmap(df)","1b808e61":"df[\"Saving accounts\"].fillna(df[\"Saving accounts\"].mode()[0],inplace=True)\ndf[\"Checking account\"].fillna(df[\"Checking account\"].mode()[0],inplace=True)","6d83f4fb":"msno.matrix(df,sort='descending')","f7320487":"df[\"Saving accounts\"]=pd.Categorical(df[\"Saving accounts\"],ordered=True,categories=['little','moderate','rich','quite rich'])\ndf[\"Checking account\"]=pd.Categorical(df[\"Checking account\"],ordered=True,categories=['little','moderate','rich'])","0f7b444c":"df.head()","c968e7c5":"fig,ax=plt.subplots(ncols=2,figsize=(16,5))\ndf[\"Risk\"].value_counts().plot.pie(autopct=\"%.2f%%\",colors=['#00FF7F','#FF2424'],explode = (0.1, 0.1),ax=ax[0])\nsns.countplot(df[\"Risk\"],ax=ax[1],palette=['#00FF7F','#FF2424'])","585b49bb":"fig,ax=plt.subplots(ncols=2,nrows=3,figsize=(16,18))\ncat_list=[\"Cat Age\",\"Sex\",\"Cat Job\",\"Housing\",\"Cat Duration\",\"Purpose\"]\npalette=[\"red\",\"blue\",\"purple\",\"green\",\"yellow\",\"cyan\"]\ncount=0\nfor i in range(3):\n    for j in range(2):\n        sns.countplot(df[cat_list[count]],ax=ax[i][j],palette=sns.dark_palette(palette[count],reverse=True))\n        ax[i][j].set_xticklabels(ax[i][j].get_xticklabels(),rotation=30)\n        count+=1","84a73222":"fig,ax=plt.subplots(nrows=1,ncols=2,figsize=(16,5))\nsns.stripplot(x=\"Sex\",y=\"Age\",data=df,ax=ax[0],palette=\"bwr\")\nsns.stripplot(x=\"Risk\",y=\"Age\",data=df,ax=ax[1],palette=\"rainbow_r\")","9ece50fd":"plt.figure(figsize=(16,5))\nsns.barplot(data=df,x=\"Sex\",y=\"Age\",hue=\"Cat Job\",palette=\"hsv_r\")","674a9f21":"g=sns.FacetGrid(data=df,col=\"Risk\",aspect=1.68,height=4).map(sns.pointplot,\"Purpose\",\"Age\",\"Sex\",palette=\"Set2_r\",ci=None).add_legend();\ng.set_xticklabels(rotation=60)","4c6b5cf4":"sns.FacetGrid(data=df,col=\"Risk\",aspect=1.68,height=4).map(sns.pointplot,\"Cat Age\",\"Credit amount\",\"Sex\",palette=[\"#FF7659\",\"#30AB55\"],ci=None).add_legend();","6ac10469":"fig,ax=plt.subplots(ncols=2,nrows=2,figsize=(16,10))\nsns.boxplot(x=\"Saving accounts\",y=\"Age\",data=df,ax=ax[0][0],hue=\"Sex\",palette=[\"#008080\",\"#E74C3C\"]).legend(loc=\"upper right\")\nsns.boxplot(x=\"Saving accounts\",y=\"Age\",data=df,ax=ax[0][1],hue=\"Risk\",palette=[\"#00FFFF\",\"#FFB600\"]).legend(loc=\"upper right\")\nsns.boxplot(x=\"Checking account\",y=\"Age\",data=df,ax=ax[1][0],hue=\"Sex\",palette=[\"#008080\",\"#E74C3C\"]).legend(loc=\"upper right\")\nsns.boxplot(x=\"Checking account\",y=\"Age\",data=df,ax=ax[1][1],hue=\"Risk\",palette=[\"#00FFFF\",\"#FFB600\"]).legend(loc=\"upper right\")","e3df423d":"plt.figure(figsize=(16,10))\ncor = df.corr()\nsns.heatmap(cor, annot=True, cmap=sns.cubehelix_palette(8),linecolor='black',linewidths=10)\nplt.show()","5eba18c1":"df[\"Age\"],df[\"Duration\"],df[\"Job\"]=df[\"Cat Age\"],df[\"Cat Duration\"],df[\"Cat Job\"]\ndf=df.drop([\"Cat Age\",\"Cat Duration\",\"Cat Job\"],axis=1)","0850b459":"liste_columns=list(df.columns)\nliste_columns.remove(\"Sex\")\nliste_columns.remove(\"Risk\")\nliste_columns.remove(\"Credit amount\")","f16be449":"from sklearn.preprocessing import LabelEncoder\nlabel=LabelEncoder()\ndf[\"Sex\"]=label.fit_transform(df[\"Sex\"])\ndf[\"Risk\"]=label.fit_transform(df[\"Risk\"])\ndf=pd.get_dummies(df,columns=liste_columns,prefix=liste_columns)","2008c193":"from sklearn.preprocessing import MinMaxScaler\nscaler=MinMaxScaler()\ndf[\"Credit amount\"]=scaler.fit_transform(df[[\"Credit amount\"]])","829f3e58":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score,r2_score,confusion_matrix,roc_curve,roc_auc_score,auc","f409e84e":"X=df.drop([\"Risk\"],axis=1)\nY=df[\"Risk\"]\nX_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3,random_state=0)","1ff0d85d":"from xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom catboost import CatBoostClassifier","96c58166":"xgb_model=XGBClassifier().fit(X_train,Y_train)\nlgbm_model=LGBMClassifier().fit(X_train,Y_train)\ncat_model=CatBoostClassifier().fit(X_train,Y_train)","51ddc9ba":"print(\"XGBoost Model\")\nprint(\"-\"*15)\nprint(\"Train R2 Score : \",r2_score(Y_train,xgb_model.predict(X_train)))\nprint(\"Train Accuracy Score : \",accuracy_score(Y_train,xgb_model.predict(X_train)))\nprint(\"-\"*50)\nprint(\"Test R2 Score : \",r2_score(Y_test,xgb_model.predict(X_test)))\nprint(\"Test Accuracy Score : \",accuracy_score(Y_test,xgb_model.predict(X_test)))\n\nplt.figure(figsize=(16,5))\nlogit_roc_auc=roc_auc_score(Y_test,xgb_model.predict(X_test))\nfpr,tpr,thresholds = roc_curve(Y_test,xgb_model.predict_proba(X_test)[:,1])\nplt.plot(fpr,tpr,label=\"AUC = %0.2f)\"%logit_roc_auc)\nplt.plot([0,1],[0,1],\"r--\")\nplt.xlim([0,1])\nplt.ylim([0,1])\nplt.legend(loc=\"lower right\")\nplt.title(\"ROC\")\nplt.show()","2c764032":"print(\"LightGBM Model\")\nprint(\"-\"*15)\nprint(\"Train R2 Score : \",r2_score(Y_train,lgbm_model.predict(X_train)))\nprint(\"Train Accuracy Score : \",accuracy_score(Y_train,lgbm_model.predict(X_train)))\nprint(\"-\"*50)\nprint(\"Test R2 Score : \",r2_score(Y_test,lgbm_model.predict(X_test)))\nprint(\"Test Accuracy Score : \",accuracy_score(Y_test,lgbm_model.predict(X_test)))\n\nplt.figure(figsize=(16,5))\nlogit_roc_auc=roc_auc_score(Y_test,lgbm_model.predict(X_test))\nfpr,tpr,thresholds = roc_curve(Y_test,lgbm_model.predict_proba(X_test)[:,1])\nplt.plot(fpr,tpr,label=\"AUC = %0.2f)\"%logit_roc_auc)\nplt.plot([0,1],[0,1],\"r--\")\nplt.xlim([0,1])\nplt.ylim([0,1])\nplt.legend(loc=\"lower right\")\nplt.title(\"ROC\")\nplt.show()","78670025":"print(\"Cat Model\")\nprint(\"-\"*15)\nprint(\"Train R2 Score : \",r2_score(Y_train,cat_model.predict(X_train)))\nprint(\"Train Accuracy Score : \",accuracy_score(Y_train,cat_model.predict(X_train)))\nprint(\"-\"*50)\nprint(\"Test R2 Score : \",r2_score(Y_test,cat_model.predict(X_test)))\nprint(\"Test Accuracy Score : \",accuracy_score(Y_test,cat_model.predict(X_test)))\n\nplt.figure(figsize=(16,5))\nlogit_roc_auc=roc_auc_score(Y_test,cat_model.predict(X_test))\nfpr,tpr,thresholds = roc_curve(Y_test,cat_model.predict_proba(X_test)[:,1])\nplt.plot(fpr,tpr,label=\"AUC = %0.2f)\"%logit_roc_auc)\nplt.plot([0,1],[0,1],\"r--\")\nplt.xlim([0,1])\nplt.ylim([0,1])\nplt.legend(loc=\"lower right\")\nplt.title(\"ROC\")\nplt.show()","86136db9":"before_model=pd.DataFrame({\"Model\":[\"XGBoost\",\"LightGBM\",\"CatBoost\"],\n                   \"Train Accuracy\":[accuracy_score(Y_train,xgb_model.predict(X_train)),accuracy_score(Y_train,lgbm_model.predict(X_train)),accuracy_score(Y_train,cat_model.predict(X_train))],\n                   \"Test Accuracy\":[accuracy_score(Y_test,xgb_model.predict(X_test)),accuracy_score(Y_test,lgbm_model.predict(X_test)),accuracy_score(Y_test,cat_model.predict(X_test))]})","592ade24":"fig,ax=plt.subplots(ncols=2,figsize=(16,5))\nsns.barplot(x=\"Model\",y=\"Train Accuracy\",data=before_model,ax=ax[0],palette=\"tab20c_r\")\nsns.barplot(x=\"Model\",y=\"Test Accuracy\",data=before_model,ax=ax[1],palette=\"tab20c_r\")","77fb8ee4":"from sklearn.model_selection import GridSearchCV","2e232280":"xgb_params={\"max_depth\":[3,4,5,6],\n            \"subsample\":[0.6,0.8,1],\n            \"n_estimators\":[100,200,500,1000],\n            \"learning_rate\":[0.1,0.01,0.2,0.5,0.05]}","49ff7c74":"lgbm_params={\"max_depth\":[3,4,5,6],\n              \"subsample\":[0.6,0.8,1.0],\n              \"n_estimators\":[100,200,500,1000],\n              \"learning_rate\":[0.1,0.01,0.02,0.05],\n              \"min_child_samples\":[5,10,20]}","fc9dcbec":"cat_params={\"iterations\":[100,200,500,1000,2000],\n           \"learning_rate\":[0.1,0.01,0.2,0.5,1],\n           \"depth\":[3,4,5,6]}","61e13b2a":"xgb_params_tuned=GridSearchCV(xgb_model,xgb_params,cv=10,n_jobs=-1,verbose=2).fit(X_train,Y_train)","42c9e53a":"lgbm_params_tuned=GridSearchCV(lgbm_model,lgbm_params,cv=10,n_jobs=-1,verbose=2).fit(X_train,Y_train)","17c556ed":"cat_params_tuned=GridSearchCV(cat_model,cat_params,cv=10,n_jobs=-1,verbose=2).fit(X_train,Y_train)","aad5f00f":"print(xgb_params_tuned.best_params_)\nprint(lgbm_params_tuned.best_params_)\nprint(cat_params_tuned.best_params_)","8a2f98ab":"xgb_model_tuned = XGBClassifier(learning_rate=0.01,max_depth=3,n_estimators=100,subsample=0.8).fit(X_train,Y_train)\nlgbm_model_tuned = LGBMClassifier(learning_rate=0.02,max_depth=3,min_child_samples=10,n_estimators=200,subsample=0.6).fit(X_train,Y_train)\ncat_model_tuned = CatBoostClassifier(depth=4,iterations=100,learning_rate=0.01).fit(X_train,Y_train)","5b2d92a4":"print(\"XGBoost Model\")\nprint(\"-\"*15)\nprint(\"Train R2 Score : \",r2_score(Y_train,xgb_model_tuned.predict(X_train)))\nprint(\"Train Accuracy Score : \",accuracy_score(Y_train,xgb_model_tuned.predict(X_train)))\nprint(\"-\"*50)\nprint(\"Test R2 Score : \",r2_score(Y_test,xgb_model_tuned.predict(X_test)))\nprint(\"Test Accuracy Score : \",accuracy_score(Y_test,xgb_model_tuned.predict(X_test)))\n\nplt.figure(figsize=(16,5))\nlogit_roc_auc=roc_auc_score(Y_test,xgb_model_tuned.predict(X_test))\nfpr,tpr,thresholds = roc_curve(Y_test,xgb_model_tuned.predict_proba(X_test)[:,1])\nplt.plot(fpr,tpr,label=\"AUC = %0.2f)\"%logit_roc_auc)\nplt.plot([0,1],[0,1],\"r--\")\nplt.xlim([0,1])\nplt.ylim([0,1])\nplt.legend(loc=\"lower right\")\nplt.title(\"ROC\")\nplt.show()","d40d5804":"print(\"LightGBM Model\")\nprint(\"-\"*15)\nprint(\"Train R2 Score : \",r2_score(Y_train,lgbm_model_tuned.predict(X_train)))\nprint(\"Train Accuracy Score : \",accuracy_score(Y_train,lgbm_model_tuned.predict(X_train)))\nprint(\"-\"*50)\nprint(\"Test R2 Score : \",r2_score(Y_test,lgbm_model_tuned.predict(X_test)))\nprint(\"Test Accuracy Score : \",accuracy_score(Y_test,lgbm_model_tuned.predict(X_test)))\n\nplt.figure(figsize=(16,5))\nlogit_roc_auc=roc_auc_score(Y_test,lgbm_model_tuned.predict(X_test))\nfpr,tpr,thresholds = roc_curve(Y_test,lgbm_model_tuned.predict_proba(X_test)[:,1])\nplt.plot(fpr,tpr,label=\"AUC = %0.2f)\"%logit_roc_auc)\nplt.plot([0,1],[0,1],\"r--\")\nplt.xlim([0,1])\nplt.ylim([0,1])\nplt.legend(loc=\"lower right\")\nplt.title(\"ROC\")\nplt.show()","af428aee":"print(\"Cat Model\")\nprint(\"-\"*15)\nprint(\"Train R2 Score : \",r2_score(Y_train,cat_model_tuned.predict(X_train)))\nprint(\"Train Accuracy Score : \",accuracy_score(Y_train,cat_model_tuned.predict(X_train)))\nprint(\"-\"*50)\nprint(\"Test R2 Score : \",r2_score(Y_test,cat_model_tuned.predict(X_test)))\nprint(\"Test Accuracy Score : \",accuracy_score(Y_test,cat_model_tuned.predict(X_test)))\n\nplt.figure(figsize=(16,5))\nlogit_roc_auc=roc_auc_score(Y_test,cat_model_tuned.predict(X_test))\nfpr,tpr,thresholds = roc_curve(Y_test,cat_model_tuned.predict_proba(X_test)[:,1])\nplt.plot(fpr,tpr,label=\"AUC = %0.2f)\"%logit_roc_auc)\nplt.plot([0,1],[0,1],\"r--\")\nplt.xlim([0,1])\nplt.ylim([0,1])\nplt.legend(loc=\"lower right\")\nplt.title(\"ROC\")\nplt.show()","bd4748f5":"after_model=pd.DataFrame({\"Model\":[\"XGBoost\",\"LightGBM\",\"CatBoost\"],\n                   \"Train Accuracy\":[accuracy_score(Y_train,xgb_model_tuned.predict(X_train)),accuracy_score(Y_train,lgbm_model_tuned.predict(X_train)),accuracy_score(Y_train,cat_model_tuned.predict(X_train))],\n                   \"Test Accuracy\":[accuracy_score(Y_test,xgb_model_tuned.predict(X_test)),accuracy_score(Y_test,lgbm_model_tuned.predict(X_test)),accuracy_score(Y_test,cat_model_tuned.predict(X_test))]})","46a3fb7b":"fig,ax=plt.subplots(ncols=2,figsize=(16,5))\nsns.barplot(x=\"Model\",y=\"Train Accuracy\",data=after_model,ax=ax[0],palette=\"tab20c_r\")\nsns.barplot(x=\"Model\",y=\"Test Accuracy\",data=after_model,ax=ax[1],palette=\"tab20c_r\")","2fcb08d5":"# Create Models","4c398072":"![](https:\/\/mir-s3-cdn-cf.behance.net\/project_modules\/max_1200\/13cd2d79048987.5cb71d959f245.gif)","277940c8":"# Model Tuning","aeeae0f3":"# Data Visualization","ec83e7a2":"# Data Classification","051b777b":"# Import Module and Data","f39c1c21":"# Missing Data Filling","fe9e868f":"# Label Encoder,Min-Max Scaler and Get Dummies","e67f2068":"# German Credit Risk Introduction"}}