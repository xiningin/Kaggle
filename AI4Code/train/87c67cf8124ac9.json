{"cell_type":{"d6592089":"code","818e5083":"code","533b5de9":"code","4b933fd2":"code","bc06933b":"code","da9c0ced":"code","d76e874f":"code","00f39cc3":"code","4d59742b":"code","e086da8d":"code","95dc22be":"code","5fe4af9c":"code","50fcb2ee":"code","15b3f595":"code","a90d05c0":"code","d667c585":"code","30640248":"code","7b401c83":"code","be3c2a95":"code","e18fc6bc":"code","241fc0b2":"code","49e7c19a":"code","aedc7c1f":"code","eabadb41":"code","29220aab":"code","b4e3d949":"code","015f218a":"code","0dededde":"code","5b45ef55":"code","4440eb5a":"code","426cb294":"code","a9521b3c":"code","ae906004":"code","c462d62f":"code","e803186c":"code","795f7c50":"code","f3729550":"code","0095cd20":"code","b38dc0f5":"code","a961adad":"code","fcf3c200":"code","5b5186f3":"code","79ed193a":"code","27e8d654":"code","9c927393":"code","39d38dfd":"code","ebd81c90":"code","610b76eb":"code","237f3d46":"code","b6ef734e":"code","8ad55685":"code","9b233341":"code","e45e1fbf":"code","83694bd6":"code","40be097e":"code","e5220e86":"code","a9e43d31":"markdown","574984e4":"markdown","a06c7116":"markdown","de10c596":"markdown","93e4beb0":"markdown","667de257":"markdown","da32bab2":"markdown","eb73d10a":"markdown","84de90a3":"markdown","de722408":"markdown","533346e4":"markdown","4f208c37":"markdown","67d30702":"markdown","0ee70394":"markdown","ec1cdee7":"markdown","960b585e":"markdown","3d5e1539":"markdown","d3158b7a":"markdown","d590c1e7":"markdown","6c5ee0dc":"markdown","985fd535":"markdown","0fcf688a":"markdown","43ff8a89":"markdown","44992fcd":"markdown","d936878d":"markdown","54f68993":"markdown","e5d3e0c0":"markdown","db2fc8e8":"markdown","c4b6974e":"markdown","b402da78":"markdown","c1d0e14d":"markdown","7bca8c85":"markdown","1663a3b6":"markdown","e1d2e4cb":"markdown","fa628f54":"markdown","7c1b8511":"markdown"},"source":{"d6592089":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","818e5083":"file = open('\/kaggle\/input\/ho-ict\/files\/adult.data', 'r')","533b5de9":"def chr_int(a):\n    if a.isdigit():\n        return int(a)\n    else:\n        return 0\n                \ndata=[]\nfor line in file:\n     data1=line.split(', ')\n     if len(data1)==15:\n        data.append([chr_int(data1[0]),data1[1],chr_int(data1[2]),data1[3],chr_int(data1[4]),data1[5],data1[6],\\\n            data1[7],data1[8],data1[9],chr_int(data1[10]),chr_int(data1[11]),chr_int(data1[12]),data1[13],\\\n            data1[14]])","4b933fd2":"print (data[1:2])","bc06933b":"%matplotlib inline\nimport pandas as pd\n\ndf = pd.DataFrame(data) #  Two-dimensional size-mutable, potentially heterogeneous tabular data structure with labeled axes \n\ndf.columns = ['age', 'type_employer', 'fnlwgt', 'education', \n                \"education_num\",\"marital\", \"occupation\", \"relationship\", \"race\",\"sex\",\n                \"capital_gain\", \"capital_loss\", \"hr_per_week\",\"country\",\"income\"]\ndf.head()","da9c0ced":"df.tail()","d76e874f":"df.shape","00f39cc3":"counts = df.groupby('country').size()\n\nprint (counts) ","4d59742b":"counts = pd.DataFrame(df.groupby('age').size()) # grouping by age\n#counts.columns = ['age','count']\nprint(counts.idxmax())\n","e086da8d":"ml = df[(df.sex == 'Male')] # grouping by sex\n\nml1 = df[(df.sex == 'Male')&(df.income=='>50K\\n')]\n\nml.shape\n#ml1.shape","95dc22be":"fm =df[(df.sex == 'Female')]\nfm.shape","5fe4af9c":"fm1 =df[(df.sex == 'Female')&(df.income=='>50K\\n')]\nfm1.shape","50fcb2ee":"df1=df[(df.income=='>50K\\n')]\n\nprint ('The rate of people with high income is: ', int(len(df1)\/float(len(df))*100), '%.' )\nprint ('The rate of men with high income is: ', int(len(ml1)\/float(len(ml))*100), '%.' )\nprint ('The rate of women with high income is: ', int(len(fm1)\/float(len(fm))*100), '%.' )","15b3f595":"print ('The average age of men is: ', ml['age'].mean(), '.' )\nprint ('The average age of women is: ', fm['age'].mean(), '.')","a90d05c0":"print ('The average age of high-income men is: ', ml1['age'].mean(), '.' )\nprint ('The average age of high-income women is: ', fm1['age'].mean(), '.')","d667c585":"ml_mu = ml['age'].mean()\nfm_mu = fm['age'].mean()\nml_var = ml['age'].var()\nfm_var = fm['age'].var()\nml_std = ml['age'].std()\nfm_std = fm['age'].std()\n\nprint ('Statistics of age for men: mu:', ml_mu, 'var:', ml_var, 'std:', ml_std)\nprint ('Statistics of age for women: mu:', fm_mu, 'var:', fm_var, 'std:', fm_std)","30640248":"ml_mu_hr = ml['hr_per_week'].mean()\nfm_mu_hr = fm['hr_per_week'].mean()\nml_var_hr = ml['hr_per_week'].var()\nfm_var_hr = fm['hr_per_week'].var()\nml_std_hr = ml['hr_per_week'].std()\nfm_std_hr = fm['hr_per_week'].std()\n\nprint ('Statistics of hours per week for men: mu:', ml_mu_hr, 'var:', ml_var_hr, 'std:', ml_std_hr)\nprint ('Statistics of hours per week for women: mu:', fm_mu_hr, 'var:', fm_var_hr, 'std:', fm_std_hr)","7b401c83":"ml_median= ml['age'].median()\nfm_median= fm['age'].median()\n\nprint (\"Median age per men and women: \", ml_median, fm_median)","be3c2a95":"ml_median_age= ml1['age'].median()\nfm_median_age= fm1['age'].median()\n\nprint (\"Median age per men and women with high-income: \", ml_median_age, fm_median_age)","e18fc6bc":"ml_median_hr= ml['hr_per_week'].median()\nfm_median_hr= fm['hr_per_week'].median()\nprint (\"Median hours per week per men and women: \", ml_median_hr, fm_median_hr)","241fc0b2":"import matplotlib.pyplot as plt\nml_age=ml['age']\nml_age.hist(histtype='stepfilled', bins=20)","49e7c19a":"fm_age=fm['age']\nfm_age.hist(density=True,histtype='stepfilled', bins=10)\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Female samples',fontsize=15)\nplt.show()","aedc7c1f":"import seaborn as sns\nfm_age.hist(histtype='stepfilled', alpha=.5, bins=20)   # default number of bins = 10\nml_age.hist(histtype='stepfilled', alpha=.5, color=sns.desaturate(\"indianred\", .75), bins=10)\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Samples',fontsize=15)\nplt.show()","eabadb41":"fm_age.hist(density=True, histtype='stepfilled', alpha=.5, bins=20)   # default number of bins = 10\nml_age.hist(density=True, histtype='stepfilled', alpha=.5, color=sns.desaturate(\"indianred\", .75), bins=10)\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('PMF',fontsize=15)\nplt.show()","29220aab":"ml_age.hist(density=True, histtype='stepfilled', bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Probability',fontsize=15)\nplt.show()","b4e3d949":"fm_age.hist(density=True, histtype='stepfilled', bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Probability',fontsize=15)\nplt.show()","015f218a":"ml_age.hist(density=True, histtype='step', cumulative=True, linewidth=3.5, bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","0dededde":"fm_age.hist(density=True, histtype='step', cumulative=True, linewidth=3.5, bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","5b45ef55":"ml_age.hist(bins=10, density=True, histtype='stepfilled', alpha=.5)   # default number of bins = 10\nfm_age.hist(bins=10, density=True, histtype='stepfilled', alpha=.5, color=sns.desaturate(\"indianred\", .75))\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Probability',fontsize=15)\nplt.show()","4440eb5a":"ml_age.hist(density=True, histtype='step', cumulative=True,  linewidth=3.5, bins=20)\nfm_age.hist(density=True, histtype='step', cumulative=True,  linewidth=3.5, bins=20, color=sns.desaturate(\"indianred\", .75))\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","426cb294":"print (\"The mean sample difference is \", ml_age.mean() - fm_age.mean())","a9521b3c":"df['age'].median()","ae906004":"len(df[(df.income == '>50K\\n') & (df['age'] < df['age'].median() - 15)])","c462d62f":"len(df[(df.income == '>50K\\n') & (df['age'] > df['age'].median() + 35)])","e803186c":"df2 = df.drop(df.index[(df.income=='>50K\\n') & (df['age']>df['age'].median() +35) & (df['age'] > df['age'].median()-15)])\n\ndf2.shape","795f7c50":"ml1_age=ml1['age']\nfm1_age=fm1['age']","f3729550":"ml2_age = ml1_age.drop(ml1_age.index[(ml1_age >df['age'].median()+35) & (ml1_age>df['age'].median() - 15)])\n\nfm2_age = fm1_age.drop(fm1_age.index[(fm1_age > df['age'].median()+35) & (fm1_age > df['age'].median()- 15)])","0095cd20":"mu2ml = ml2_age.mean()\nstd2ml = ml2_age.std()\nmd2ml = ml2_age.median()\n\n# Computing the mean, std, median, min and max for the high-income male population\n\nprint (\"Men statistics: Mean:\", mu2ml, \"Std:\", std2ml, \"Median:\", md2ml, \"Min:\", ml2_age.min(), \"Max:\",ml2_age.max())","b38dc0f5":"mu3ml = fm2_age.mean()\nstd3ml = fm2_age.std()\nmd3ml = fm2_age.median()\n\n# Computing the mean, std, median, min and max for the high-income female population\nprint (\"Women statistics: Mean:\", mu2ml, \"Std:\", std2ml, \"Median:\", md2ml, \"Min:\", fm2_age.min(), \"Max:\",fm2_age.max())","a961adad":"print ('The mean difference with outliers is: %4.2f.'% (ml_age.mean() - fm_age.mean()))\nprint (\"The mean difference without outliers is: %4.2f.\"% (ml2_age.mean() - fm2_age.mean()))","fcf3c200":"#Let us compare visually the age distributions before and after removing the outliers:\n\nplt.figure(figsize=(13.4,5))\n\ndf.age[(df.income == '>50K\\n')].plot(alpha=.25, color='blue')\ndf2.age[(df2.income == '>50K\\n')].plot(alpha=.45,color='red')\n\nplt.ylabel('Age')\nplt.xlabel('Samples')\n","5b5186f3":"#Let us see what is happening near the mode:\n\nimport numpy as np\n\ncountx,divisionx = np.histogram(ml2_age, normed=True)\ncounty,divisiony = np.histogram(fm2_age, normed=True)","79ed193a":"import matplotlib.pyplot as plt\n\nval = [(divisionx[i]+divisionx[i+1])\/2 for i in range(len(divisionx)-1)]\n\nplt.plot(val, countx-county,'o-')\nplt.title('Differences in promoting men vs. women')\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Differences',fontsize=15)\nplt.show()","27e8d654":"#There is still some evidence for our hypothesis!\n\nprint (\"Remember:\\n We have the following mean values for men, women and the difference:\\nOriginally: \", ml_age.mean(), fm_age.mean(),  ml_age.mean()- fm_age.mean()) # The difference between the mean values of male and female populations.)\nprint (\"For high-income: \", ml1_age.mean(), fm1_age.mean(), ml1_age.mean()- fm1_age.mean()) # The difference between the mean values of male and female populations.)\nprint (\"After cleaning: \", ml2_age.mean(), fm2_age.mean(), ml2_age.mean()- fm2_age.mean()) # The difference between the mean values of male and female populations.)\n\nprint (\"\\nThe same for the median:\")\nprint (ml_age.median(), fm_age.median(), ml_age.median()- fm_age.median()) # The difference between the mean values of male and female populations.)\nprint (ml1_age.median(), fm1_age.median(), ml1_age.median()- fm1_age.median()) # The difference between the mean values of male and female populations.)\nprint (ml2_age.median(), fm2_age.median(), ml2_age.median()- fm2_age.median()), # The difference between the mean values of male and female populations.)","9c927393":"def skewness(x):\n    res=0\n    m=x.mean()\n    s=x.std()\n    for i in x:\n        res+=(i-m)*(i-m)*(i-m)\n    res\/=(len(x)*s*s*s)\n    return res\n\nprint (\"The skewness of the male population is:\", skewness(ml2_age))\nprint (\"The skewness of the female population is:\", skewness(fm2_age))","39d38dfd":"def pearson(x):\n    return 3*(x.mean()-x.median())\/x.std()\n\nprint (\"The Pearson's coefficient of the male population is:\", pearson(ml2_age))\nprint (\"The Pearson's coefficient of the female population is:\", pearson(fm2_age))","ebd81c90":"from scipy.stats.distributions import norm\n\n# Some random data\ny = np.random.random(15) * 10\nx = np.linspace(0, 10, 100)\n\nx1 = np.random.normal(-1, 2, 15) # parameters: (loc=0.0, scale=1.0, size=None)\nx2 = np.random.normal(6, 3, 10)\ny = np.r_[x1, x2] # r_ Translates slice objects to concatenation along the first axis.\nx = np.linspace(min(y), max(y), 100)\n\n# Smoothing parameter\ns = 0.4\n\n# Calculate the kernels\nkernels = np.transpose([norm.pdf(x, yi, s) for yi in y])\n\nplt.plot(x, kernels, 'k:')\nplt.plot(x, kernels.sum(1), 'r')\nplt.plot(y, np.zeros(len(y)), 'go', ms=10)","610b76eb":"from scipy.stats import kde\n\nx1 = np.random.normal(-1, 0.5, 15)\n\n# parameters: (loc=0.0, scale=1.0, size=None)\n\nx2 = np.random.normal(6, 1, 10)\ny = np.r_[x1, x2]\n\n# r_ Translates slice objects to concatenation along the first axis.\n\nx = np.linspace(min(y), max(y), 100)\ns = 0.4   # Smoothing parameter\n\nkernels = np.transpose([norm.pdf(x, yi, s) for yi in y])\n\n# Calculate the kernels\ndensity = kde.gaussian_kde(y)\n\nplt.plot(x, kernels, 'k:')\nplt.plot(x, kernels.sum(1), 'r')\nplt.plot(y, np.zeros(len(y)), 'bo', ms=10)","237f3d46":"NTs=200\nmu=0.0\nvar=1.0\nerr = 0.0\nNPs=1000\nfor i in range(NTs):\n    x = np.random.normal(mu, var, NPs)\n    err += (x.mean()-mu)**2\n\nprint ('MSE: ', err\/NTs)","b6ef734e":"X=np.array([[10.0, 8.04,10.0, 9.14, 10.0, 7.46, 8.0, 6.58],\n[8.0,6.95, 8.0, 8.14, 8.0, 6.77, 8.0, 5.76],\n[13.0,7.58,13.0,8.74,13.0,12.74,8.0,7.71],\n[9.0,8.81,9.0,8.77,9.0,7.11,8.0,8.84],\n[11.0,8.33,11.0,9.26,11.0,7.81,8.0,8.47],\n[14.0,9.96,14.0,8.10,14.0,8.84,8.0,7.04],\n[6.0,7.24,6.0,6.13,6.0,6.08,8.0,5.25],\n[4.0,4.26,4.0,3.10,4.0,5.39,19.0,12.50],\n[12.0,10.84,12.0,9.13,12.0,8.15,8.0,5.56],\n[7.0,4.82,7.0,7.26,7.0,6.42,8.0,7.91],\n[5.0,5.68,5.0,4.74,5.0,5.73,8.0,6.89]])","8ad55685":"plt.subplot(2,2,1)\nplt.scatter(X[:,0],X[:,1],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)\n","9b233341":"plt.subplot(2,2,2)\nplt.scatter(X[:,2],X[:,3],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)\nplt.subplot(2,2,3)\nplt.scatter(X[:,4],X[:,5],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)","e45e1fbf":"plt.subplot(2,2,4)\nplt.scatter(X[:,6],X[:,7],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)\nplt.gcf().set_size_inches((10,10))","83694bd6":"def Cov(X, Y):\n    def _get_dvis(V):\n        return [v - np.mean(V) for v in V]\n    dxis = _get_dvis(X)\n    dyis = _get_dvis(Y)\n    return np.sum([x * y for x, y in zip(dxis, dyis)])\/len(X)\nk =0\nmean = []\nvariance = []\ncovariance = []\nfor k in range(0, 8):\n    mean.append(X[:,k].mean())\n    variance.append(X[:,k].var())\ncovariance.append(Cov(X[:,0],X[:,1]))\ncovariance.append(Cov(X[:,2],X[:,3]))\ncovariance.append(Cov(X[:,4],X[:,5]))\ncovariance.append(Cov(X[:,6],X[:,7]))\nprint(\"the mean is\", mean)\nprint(\"the variance is\", variance)\nprint(\"the covariance for each pair is\", covariance)","40be097e":"pearson = []\n\ndef Corr(X, Y):\n    assert len(X) == len(Y)\n    return Cov(X, Y) \/ np.prod([np.std(V) for V in [X, Y]])\n\npearson.append(Corr(X[:,0],X[:,1]))\npearson.append(Corr(X[:,2],X[:,3]))\npearson.append(Corr(X[:,4],X[:,5]))\npearson.append(Corr(X[:,6],X[:,7]))\n\nprint(\"Pearson's correlation for each pair is\",pearson)","e5220e86":"X=np.array([[10.0, 8.04,10.0, 9.14, 10.0, 7.46, 8.0, 6.58],\n[8.0,6.95, 8.0, 8.14, 8.0, 6.77, 8.0, 5.76],\n[13.0,7.58,13.0,8.74,13.0,12.74,8.0,7.71],\n[9.0,8.81,9.0,8.77,9.0,7.11,8.0,8.84],\n[11.0,8.33,11.0,9.26,11.0,7.81,8.0,8.47],\n[14.0,9.96,14.0,8.10,14.0,8.84,8.0,7.04],\n[6.0,7.24,6.0,6.13,6.0,6.08,8.0,5.25],\n[4.0,4.26,4.0,3.10,4.0,5.39,19.0,12.50],\n[12.0,10.84,12.0,9.13,12.0,8.15,8.0,5.56],\n[7.0,4.82,7.0,7.26,7.0,6.42,8.0,7.91],\n[5.0,5.68,5.0,4.74,5.0,5.73,8.0,6.89]])\n\nprint(X[:,0])\n\n\ndef list2rank(l):\n    #l is a list of numbers\n    # returns a list of 1-based index; mean when multiple instances\n    return [np.mean([i+1 for i, sorted_el in enumerate(sorted(l)) if sorted_el == el]) for el in l]\n\n\ndef spearmanRank(X, Y):\n    # X and Y are same-length lists\n    print (list2rank(X) )\n    print (list2rank(Y))\n    return Corr(list2rank(X), list2rank(Y))\n\n\n\nprint (\"Pearson rank coefficient: %.2f\" % Corr(X[:,0], X[:,1]))\nprint (\"Spearman rank coefficient: %.2f\" % spearmanRank(X[:,0], X[:,1]))\n\n","a9e43d31":"Exercise: Obtain for the Anscombe's quartet [2] given in the figures bellow, the different estimators (mean, variance, covariance for each pair, Pearson's correlation and Spearman's rank correlation.","574984e4":"Results of Pearson: We get the same conclusion than for the other function but the results are more contrasted.","a06c7116":"**QUESTION 20 : Explain the result.**\n\nANSWER : This simply finds the difference of the two means obtained in Q8 = 39.43354749885268 - 36.85823043357163 ","de10c596":"QUESTION 6 : *What is the age of the most represented people?*\n\nANSWER : 36","93e4beb0":"PEARSON","667de257":"**QUESTION 17 : Show the graphics and an explain the result.**\n\nANSWER : This shows the probability that a sample male age is equal to or less than aby value. ","da32bab2":"QUESTION 1 : *What is the obtained result? What did you ask for in the previous command? Explain.*\n\nANSWER : The first two rows of the dataframe were printed without formatting as a data frame.","eb73d10a":"QUESTION 9 : *9. Describe an explain the result.*\nANSWER : The variance and the standard deviations in the data are quite similar for men and women with respect to age and hours worked. The spread of both hours worked and ages for men and women has a medium density around the mean which makes sense for this information.","84de90a3":"**QUESTION 11 : Show the graphics and an explain the result.**\n\nANSWER : The most frequent ages of the female samples appear to be significantly skewed towards lower age groups in this histogram, but with a significant tail of older ages. ","de722408":"**QUESTION 18. Show the graphics and an explain the result.**\n\nANSWER : This performs the same function as Question 13, however the same number of bins is used for each sample set.","533346e4":"*21. What did you obtain as a result?*\nWe get a mean squared error of 0.001","4f208c37":"The Kernel Density allows to have a continuous representation of the data.","67d30702":"21. What does the figure show?\nWe have an input set of points and kernel functions around these points. Then to get the continuous distribution we sum the kernel functions and we get the red curve.\n","0ee70394":"**QUESTION 15 : Show the graphics and an explain the result.**\n\nANSWER : Same as for the previous question but for the female probability distrinbution.","ec1cdee7":"**QUESTION 14 : Show the graphics and an explain the result.**\n\nANSWER : This is simply showing the male age probability distrubtion of the previous question.","960b585e":"We are running the different functions on the quartet dataset. That is composed by four (X,Y) relations. ","3d5e1539":"**Sample and Estimated Mean, Variance and Standard Scores**\n","d3158b7a":"20. EXPLAIN THE RESULTS:\nIn Blue we can see the outliers and in red the data without the outliers. We can clearly see the effect of removing the outliers by the change in statistics for the data.\nAfter having removed the outliers when we look at the graph \"Differences in promoting men vs women\" the difference is less, the mean difference went from 2.58 to 2.44 probably because there were more outliers men data than women data! Women are more likely to be promoted earlier than men.","d590c1e7":"**QUESTION 13 : Show the graphics and an explain the result.**\n\nANSWER : While continuing to use different bin sizes, for this exercise the attribute 'density' has been set to True, which maps the bin sizes to their fraction of the total. Using the separate male and female datasets, this more clearly shows the difference in the shape of their distributions, however it still does not illustrate the difference in the number of samples obtained for each group.\n\nNOTE : I think there is a mistake here because this is not a cumulative distribution function.","6c5ee0dc":"To conclude on the pipeline of the HO2 for the outliers identification we analyzed the dataset given by studying its statistics (mean, variance etc...) and visualizing it through plots. We then identified potential outliers that were making the dataset and results more unreliable and removed them according to criterias we identified in the first step. Once we preprared our dataset we were able to extract more reliable parameters and informations on our dataset: skewness, covariance for example. ","985fd535":"MEASURING ASYMMETRY","0fcf688a":"**QUESTION 12 : Show the graphics and an explain the result.**\n\nANSWER : This histogram is fairly misleading - it gives the impression that there might be x10 number of male samples as female samples. The reason for this is it selects double number of bins for the male samples with respect to the female samples. As such, every male bin has double the number of samples as every female bin, and so reaches higher in the curve. Using the same number of bins would give a more realistic comparison.","43ff8a89":"KERNEL DENSITY","44992fcd":"QUESTION 8 : *8. Describe an explain the result.*\nANSWER : Even though the most represented age group was 36 (the mode ), the average ages are all higher, because the mean is influenced by the size of the range of the data. That is, the presence of much higher ages (ie.80+) draw the arithmetic mean further away from the frequential mode.\n","d936878d":"QUESTION 3 : *Describe and explain the result. Compare with the previous one.*\n\nANSWER : .tail displays the final 5 rows of the dataframe (the last row is index 32560)","54f68993":"**QUESTION 10 :. Describe an explain the result.**\n\nANSWER : The median ages and hours worked per week are higher than the arithmatic averages. This is somewhat surprising, because this suggests there might be several very low entries (eg. age = 0, or hours worked = 0) dragging down the arithmatic average, away from the more realistic centers of the distributions which are slightly higher.","e5d3e0c0":"QUESTION 4 : *Describe an explain the result.*\n\nANSWER : This gives the dimensions of the dataframe - it has 32561 rows (indexed 0 - 32560 ), and 15 columns (does not include index as a column)","db2fc8e8":"PEARSON'S CORRELATION","c4b6974e":"**QUESTION 10 (11) . Show the graphics and an explain the result.**\n\nANSWER : This histogram shows the frequency of different age groups created as different 'bin' ranges. It shows a curve centred around our mode\/mean\/median values (36 to 44) as expected, with a long tail towards the maximum ages up to 90 years old. The surprising lower bars around 35-37 years are a quirk of the particular bins used - as more and more bins are added the 'dip' here would probably even out to become more consistent with the overall curve.\n\nNOTE 'normed' is no longer an attribute of hist in the library. density does the same function, however I have just deleted it, because you have set it to zero in this assignment anyway. I hope that is ok !","b402da78":"MEAN, VARIANCE, COVARIANCE","c1d0e14d":"**QUESTION 19 : Show the graphics and an explain the result.**\n\nANSWER : This compares the CDF's of the male and female sample sets. It illustrates that there is a higher likelihood of obtaining a female sample that is a realtively low age.","7bca8c85":"QUESTION 5 : *How many items are there for USA? and for Mexico?*\n\nANSWER : size does not include nan values. USA - 29170 ; Mexico - 643. The data is heavily biased by the data from the US.","1663a3b6":"21. Explain the result\nSkewness measures asymmetry of the datset. The results show that female population has a more important skewness than the male population. It means that the population of female is more asymmetric since maybe women tend to stop working sooner than men.","e1d2e4cb":"QUESTION 7 : *7. Describe an explain the result.*\nANSWER : Each of these commands calulates the proportion of high income persons over the data frame (df), over male samples (ml), and then female samples (fm). It shows that male samples had a higher frequency of being high incomes than the female samples. It can be seen that the number of male samples ( ~22k ) is much higher than the number of female samples ( ~11k ). One could argue that this is evidence in a bias in the way the data has been gathered that leads to more male samples being obtained than female. Since it is related to gender, this bias may also affect the types of men or types of women included in the sample. \nGiven widespread knowledge about this issue, however, it is likely that this difference is a result of an actualy bias in the population for men to have on average higher incomes than women.","fa628f54":"QUESTION 2 : *Describe an explain the result.*\n\nANSWER : The data is formatted into a data frame and headings added so that it is much easier to understand. (.head shows the first five rows).","7c1b8511":"**QUESTION 16 : Show the graphics and an explain the result.**\n\nANSWER : This shows the probability that a female age sample is equal to or less than aby value. It has identical number of steps as there are bins in the histogram from which it was translated."}}