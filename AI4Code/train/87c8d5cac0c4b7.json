{"cell_type":{"745aa0f7":"code","c583c891":"code","92b1a18b":"code","213bfd48":"code","6fe9b146":"code","090603da":"code","bc62dd27":"code","d398a5eb":"code","f2154871":"code","3e631f5e":"code","becb3b2a":"code","f920bc97":"code","4f3ad46f":"code","b4839055":"markdown","2b96404c":"markdown","e60f6d3f":"markdown","a9b51886":"markdown"},"source":{"745aa0f7":"import numpy as np\nimport cv2\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport os\nfrom tqdm import tqdm","c583c891":"path = '\/kaggle\/input\/crop-and-weed-detection-data-with-bounding-boxes\/agri_data\/data\/'","92b1a18b":"data = [os.path.join(path,x) for x in os.listdir(path)]","213bfd48":"images = [data[x] for x in range(len(data)) if data[x].endswith('.jpeg')]","6fe9b146":"labels = [data[x] for x in range(len(data)) if data[x].endswith('.txt')]","090603da":"#checking our conversion is working or not\nplt.imshow(cv2.cvtColor(cv2.imread(images[0]),cv2.COLOR_BGR2RGB))","bc62dd27":"df = pd.DataFrame(columns=['image_name','object','x_cen','y_cen','w','h'])\ni=0\nfor id in tqdm(images):\n    label = open(id[:-5]+'.txt','r') \n    a = label.read()\n    label.close()\n    label = a.split('\\n')\n    cleaned_label = label[:-1]\n    \n    for name in cleaned_label:\n        ind_label = name.split(' ')\n        df.loc[i,'image_name'] = id[78:]\n        df.loc[i,'object'] = int(ind_label[0])\n        df.loc[i,'x_cen'] = float(ind_label[1])\n        df.loc[i,'y_cen'] = float(ind_label[2])\n        df.loc[i,'w'] = float(ind_label[3])\n        df.loc[i,'h'] = float(ind_label[4])\n        i += 1\n    ","d398a5eb":"df.head()","f2154871":"#column name for pascal-voc dataframe\ncolumn_name = ['filename', 'width', 'height', 'class', 'xmin', 'ymin', 'xmax', 'ymax']","3e631f5e":"pascal_voc = pd.DataFrame(columns=column_name)\nfor i in tqdm(range(len(df))):\n    \n    pascal_voc.loc[i,'filename'] = df.loc[i,'image_name']\n    pascal_voc.loc[i,'width'] = 512\n    pascal_voc.loc[i,'height']= 512  \n    if df.loc[i,'object'] == 0:    \n        pascal_voc.loc[i,'class'] = 'crop'\n    else:\n        pascal_voc.loc[i,'class'] = 'weed'\n    pascal_voc.loc[i,'xmin']  = int((df.loc[i,'x_cen'] - df.loc[i,'w']\/2)*512)\n    pascal_voc.loc[i,'ymin']  = int((df.loc[i,'y_cen'] - df.loc[i,'h']\/2)*512)\n    pascal_voc.loc[i,'xmax']  = int((df.loc[i,'x_cen'] + df.loc[i,'w']\/2)*512)\n    pascal_voc.loc[i,'ymax']  = int((df.loc[i,'y_cen'] + df.loc[i,'h']\/2)*512) \n    ","becb3b2a":"pascal_voc","f920bc97":"any_index_number = 55 #change this number for different images\ntest_img = cv2.cvtColor(cv2.imread(path+pascal_voc.loc[any_index_number,'filename']),cv2.COLOR_BGR2RGB)\ntest_df = pascal_voc[pascal_voc['filename']==pascal_voc.loc[any_index_number,'filename']].reset_index(drop=True)\nfor i in range(len(test_df)):\n    \n    rec = cv2.rectangle(test_img, (test_df.loc[i,'xmin'],test_df.loc[i,'ymin']), (test_df.loc[i,'xmax'],test_df.loc[i,'ymax']), (255,0,0), 1, 1) \n    text = cv2.putText(rec, test_df.loc[i,'class'], (test_df.loc[i,'xmin'],test_df.loc[i,'ymin']-10), cv2.FONT_HERSHEY_SIMPLEX,1, (255,255,0), 2, cv2.LINE_AA)\n    \nplt.figure(figsize=(8,8))    \nplt.imshow(text)\nplt.axis('off')\nplt.show()","4f3ad46f":"\npascal_voc.to_csv('pascal_voc_format.csv',index=False)","b4839055":"# Visualizing labels","2b96404c":"# Converting text file into dataframe","e60f6d3f":"# Converting dataframe into Pascal-voc format","a9b51886":"# Saving label file"}}