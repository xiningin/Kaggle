{"cell_type":{"e45489d1":"code","f3843775":"code","87b076d9":"code","7eb61f15":"code","9c411c0a":"code","65df7bd9":"code","33e62487":"code","58d1798d":"code","850385da":"code","590e3cba":"code","ed607e2f":"code","a4d8cbec":"code","836c7f27":"code","99482606":"code","bf3eeab1":"code","6b23a61b":"code","02bcece4":"markdown","500b9fdb":"markdown","984df016":"markdown","65a6aeb0":"markdown","aa306ba0":"markdown","c64289c4":"markdown","640f19ae":"markdown"},"source":{"e45489d1":"import numpy as np \nimport pandas as pd\nfrom sklearn.preprocessing import LabelEncoder\n\n\n#graph\nimport plotly.graph_objs as go\nimport plotly.express as px\n\n","f3843775":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \ndf = pd.read_csv('..\/input\/mushroom-classification\/mushrooms.csv')","87b076d9":"df.isnull().sum().sort_values(ascending=False)","7eb61f15":"df.head(8)","9c411c0a":"df.describe()","65df7bd9":"df_encoded = df.copy()\nle = LabelEncoder()\nfor col in df_encoded.columns:\n    df_encoded[col]=le.fit_transform(df_encoded[col])\n    \ndf_encoded.head()","33e62487":"labels = ['Edible', 'Poison']\nvalues = df['class'].value_counts()\n\nfig=go.Figure(data=[go.Pie(labels=labels, values=values)])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n                  marker=dict(colors=['#87CEFA', '#7FFF00'],\n                              line=dict(color='#FFFFFF',width=3)))\nfig.show()","58d1798d":"labels = ['Woods', 'Grasses', 'Paths', 'Leaves', 'Urban', 'Meadows', 'Waste']\nvalues = df['habitat'].value_counts()\ncolors = ['#DEB887','#778899', '#B22222', '#FFFF00', \n          '#F8F8FF','#FFE4C4','#FF69B4']\n\nfig=go.Figure(data=[go.Pie(labels=labels,\n                           values=values,\n                           #marker_colors=labels,\n                           pull=[0.1, 0, 0, 0, 0.2, 0, 0])])\nfig.update_traces(title='Mushrooms Habitat Percentage',\n                  hoverinfo='label+value', \n                  textinfo='percent', \n                  opacity=0.9,\n                  textfont_size=20,\n                  marker=dict(colors=colors,\n                             line=dict(color='#000000', width=0.1)),\n                 )\nfig.show()","850385da":"labels = ['Brown', 'Gray', 'Red', 'Yellow', 'White', 'Buff', 'Pink', \n          'Cinnamon', 'Purple', 'Green']\nvalues = df['cap-color'].value_counts()\ncolors = ['#DEB887','#778899', '#B22222', '#FFFF00', \n          '#F8F8FF','#FFE4C4','#FF69B4','#F0DC82','#C000C5', '#228B22']\n\nfig=go.Figure(data=[go.Pie(labels=labels,\n                           values=values,\n                           #marker_colors=labels,\n                           pull=[0, 0, 0, 0, 0.2, 0, 0, 0, 0, 0])])\nfig.update_traces(title='Mushrooms Color Quantity',\n                  hoverinfo='label+percent', \n                  textinfo='value',\n                  opacity=0.9,\n                  textfont_size=20,\n                  marker=dict(colors=colors,\n                             line=dict(color='#000000', width=0.1)),\n                 )\nfig.show()","590e3cba":"colors = ['#DEB887','#f8f8ff','#778899', '#FF69B4','#FFFF00','#B22222','#FFE4C4','#F0DC82','#C000C5', '#228B22']\nfig = px.histogram(df, x='cap-color',\n                   color_discrete_map={'p':'#7FFF00'},\n                   #opacity=0.8,\n                   color_discrete_sequence=[colors],\n                   #barmode='relative',\n                   barnorm='percent',\n                   color='class'\n                  )\nfig.update_layout(title='Edible or Poisonous Percent Based on Cap Color',\n                  xaxis_title='Cap Color',\n                  yaxis_title='Quantity',\n                 )\n\nfig.show()","ed607e2f":"fig = px.histogram(df, x='odor',\n                   color_discrete_map={'p':'#7FFF00', 'e':'#87CEFA'},\n                   #opacity=0.8,\n#                    color_discrete_sequence='Green',\n                   barmode='group',\n#                    barnorm='percent',\n                   color='class'\n                  )\nfig.update_layout(title='Edible or Poisonous vs Odor',\n                  xaxis_title='Cap Color',\n                  yaxis_title='Quantity',\n                  #title_x=0.5,\n                 )\n\nfig.show()","a4d8cbec":"fig = px.histogram(df, x='cap-shape',\n                   color_discrete_map={'p':'#7FFF00', 'e':'#87CEFA'},\n                   #opacity=0.8,\n                   color_discrete_sequence=[colors],\n                   barmode='group',\n                   #barnorm='percent',\n                   color='class'\n                  )\nfig.update_layout(\n                  xaxis_title='Cap Shape',\n                  yaxis_title='Quantity',\n                  #title_x=0.5,\n                 )\n\nfig.show()","836c7f27":"fig = px.sunburst(df, path=['class','bruises', 'population'],\n                 color='class',\n                 color_discrete_map={'e':'#87CEFA', 'p':'#7FFF00', 't':'red'},\n                 )\nfig.update_layout(title=\"Class vs Bruises vs Population\",\n                  title_x=0.5,\n                  )\n\nfig.update_traces(marker=dict(line=dict(width=3)))\nfig.show()","99482606":"gill_cats = ['class', 'gill-size', 'gill-attachment', 'gill-spacing', 'gill-color']\ngill_data = df_encoded[gill_cats]\ngill_corr = gill_data.corr() \n# gill_corr['class'].sort_values(ascending=False)\n\nfig = px.imshow(gill_corr,\n                color_continuous_scale = 'Greens',\n                color_continuous_midpoint=0,\n               )\nfig.update_layout(title=\"Gill Categories Correlation Matrix\")\nfig.show()","bf3eeab1":"stalk_cats = ['class', 'stalk-shape', 'stalk-color-below-ring', 'stalk-color-above-ring', \n              'stalk-surface-below-ring', 'stalk-surface-above-ring', 'stalk-root']\nstalk_data = df_encoded[stalk_cats]\nstalk_corr = stalk_data.corr() \n# stalk_corr['class'].sort_values(ascending=False)\n\nfig = px.imshow(stalk_corr,\n                color_continuous_scale = 'purples',\n                color_continuous_midpoint=0,\n               )\nfig.update_layout(title=\"Stalk Categories Correlation Matrix\")\nfig.show()","6b23a61b":"corr_matrix = df_encoded.corr()\ncorr_matrix['class'].sort_values(ascending=False)","02bcece4":"### **It seems like edible mushrooms tends to have bruises and the poison ones not**\n### **Poison mushrooms also tends to appear in group**","500b9fdb":"## **Attribute Information:**\n\n1. cap-shape: bell=b,conical=c,convex=x,flat=f, knobbed=k,sunken=s\n2. cap-surface: fibrous=f,grooves=g,scaly=y,smooth=s\n3. cap-color: brown=n,buff=b,cinnamon=c,gray=g,green=r, pink=p,purple=u,red=e,white=w,yellow=y\n4. bruises?: bruises=t,no=f\n5. odor: almond=a,anise=l,creosote=c,fishy=y,foul=f, musty=m,none=n,pungent=p,spicy=s\n6. gill-attachment: attached=a,descending=d,free=f,notched=n\n7. gill-spacing: close=c,crowded=w,distant=d\n8. gill-size: broad=b,narrow=n\n9. gill-color: black=k,brown=n,buff=b,chocolate=h,gray=g, green=r,orange=o,pink=p,purple=u,red=e, white=w,yellow=y\n10. stalk-shape: enlarging=e,tapering=t\n11. stalk-root: bulbous=b,club=c,cup=u,equal=e, rhizomorphs=z,rooted=r,missing=?\n12. stalk-surface-above-ring: fibrous=f,scaly=y,silky=k,smooth=s\n13. stalk-surface-below-ring: fibrous=f,scaly=y,silky=k,smooth=s\n14. stalk-color-above-ring: brown=n,buff=b,cinnamon=c,gray=g,orange=o, pink=p,red=e,white=w,yellow=y\n15. stalk-color-below-ring: brown=n,buff=b,cinnamon=c,gray=g,orange=o, pink=p,red=e,white=w,yellow=y\n16. veil-type: partial=p,universal=u\n17. veil-color: brown=n,orange=o,white=w,yellow=y\n18. ring-number: none=n,one=o,two=t\n19. ring-type: cobwebby=c,evanescent=e,flaring=f,large=l, none=n,pendant=p,sheathing=s,zone=z\n20. spore-print-color: black=k,brown=n,buff=b,chocolate=h,green=r, orange=o,purple=u,white=w,yellow=y\n21. population: abundant=a,clustered=c,numerous=n, scattered=s,several=v,solitary=y\n22. habitat: grasses=g,leaves=l,meadows=m,paths=p, urban=u,waste=w,woods=d","984df016":"### **I'ts almost a 50\/50 lotery to come across with a poisonous mushroom**","65a6aeb0":"# **My very first time using Plotly**\n\nThere is a little mess of colors and not all the charts has the desire labels\n\nFor the last thing, the attribute info is added.","aa306ba0":"### Check for null-values","c64289c4":"### **Veil-type only has 1 unique value**","640f19ae":"# **Plotly EDA**"}}