{"cell_type":{"1b0e1ba1":"code","af18038e":"code","9e8f1128":"code","b8bded59":"code","63e0b54e":"code","b3dffb42":"code","39999782":"code","206d0b11":"code","f2308e0a":"code","6edb8b6c":"code","4fa43b55":"code","7cf3cbdd":"code","8491b6ec":"code","0fea6cf4":"code","097d537d":"code","0a32b462":"code","c05a62f2":"code","c5225686":"code","d709c5c6":"code","6c7690c3":"code","c672b118":"code","5b411e48":"code","07f515bb":"code","ad746e62":"code","5f5f5c2f":"code","a15be47f":"code","9644de35":"code","7e8f381a":"code","7a69e95f":"code","79677017":"code","e97c9271":"code","2e35e0ce":"code","3f850448":"code","d52675bd":"code","97dde22e":"code","46d9d1ad":"code","9e0f8f7b":"code","5622dc8d":"code","567da184":"code","d7001a36":"code","73426856":"code","50663062":"code","d61b6c67":"code","0b31afde":"code","03613aaf":"code","ea5287f1":"code","24ec396a":"code","bb2c06f4":"code","2807aabd":"code","6d9f1e85":"code","3b52ac05":"code","1c251786":"code","862829ad":"code","1a7f67b4":"code","127d2bdb":"markdown","9111a67c":"markdown","90e0711b":"markdown","849c01b5":"markdown","71ce25f2":"markdown","e79f6a32":"markdown","4159a541":"markdown","cd2a9a3b":"markdown","6fd6837e":"markdown","7617db33":"markdown","af52c096":"markdown","e128ed7c":"markdown","a441ccf6":"markdown","3d2ed233":"markdown","b893c0fc":"markdown","e6212d8c":"markdown","34016c83":"markdown","049bf32d":"markdown","d84b7b13":"markdown","6eaa9759":"markdown","b76240c2":"markdown","b76bd2c4":"markdown","80ab2f86":"markdown","fb38200f":"markdown","b76e7cb4":"markdown","0c3242a7":"markdown","8a5557ca":"markdown","5c4e2ca3":"markdown","201022f1":"markdown","97db9e60":"markdown","cf462aee":"markdown","97019258":"markdown","80d63242":"markdown","e791e3fe":"markdown","1f90c1aa":"markdown","c9ca2b2b":"markdown","1bb6dfba":"markdown","0ddc197c":"markdown","ab8e66e8":"markdown","b6b2592e":"markdown","0f0f5d66":"markdown","d5c34217":"markdown","8bb898b8":"markdown","04cb1271":"markdown","7359a3f2":"markdown","5def9699":"markdown","1b25400c":"markdown","63975143":"markdown","91921a70":"markdown","e2c73331":"markdown","9a76822b":"markdown","f224f7dd":"markdown","46b67b25":"markdown","48247d78":"markdown","6f80e735":"markdown","6b1839db":"markdown","62447326":"markdown","df381891":"markdown","e99336e2":"markdown","fa4c5b11":"markdown"},"source":{"1b0e1ba1":"import numpy as np\nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy import stats\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict\nfrom sklearn import metrics\nfrom sklearn import datasets\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import tree\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import confusion_matrix\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings(\"ignore\")","af18038e":"df=pd.read_csv(\"..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")\ndf.head()","9e8f1128":"duplicate_rows = df[df.duplicated()]\nprint(\"Number of duplicate rows :: \", duplicate_rows.shape)\nduplicate_rows","b8bded59":"df = df.drop_duplicates() #drops duplicated rows\nduplicate_rows = df[df.duplicated()]\nprint(\"Number of duplicate rows :: \", duplicate_rows.shape)","63e0b54e":"df.isnull().sum()","b3dffb42":"df.describe()","39999782":"plt.figure(figsize= (15,6))\nsns.set_style(\"dark\")\nsns.heatmap(df.corr(),annot= True)\nplt.show()","206d0b11":"df.output.mean()*100","f2308e0a":"sns.distplot(df['age'],kde = False).set(title=\"Age distributed in the dataset \")","6edb8b6c":"\nsns.FacetGrid(df,col='output',height=7).map(plt.hist,'age')\n","4fa43b55":"\n\nsns.FacetGrid(df,col='output',height=5).map(sns.countplot,'sex').add_legend()\n","7cf3cbdd":"df['cp'].hist(color='green',bins=40,figsize=(8,4))\nplt.title(\"Chest pain type\",fontsize=20)","8491b6ec":"sns.FacetGrid(df,col='output',height=7).map(sns.countplot,'cp')","0fea6cf4":"df.trtbps.plot.hist().set(title='output vs trtbps' )","097d537d":"sns.FacetGrid(df,col='output',height=7).map(plt.hist,'trtbps')","0a32b462":"plt.figure(figsize=(10,10))\nplt.title(\" Cholestoral \",fontsize=20)\nplt.hist(x='chol',data=df)","c05a62f2":"sns.FacetGrid(df,col='output',height=7).map(plt.hist,'chol')","c5225686":"plt.figure(figsize=(10,5))\nplt.title(\"Fasting blood sugar distribution\",fontsize=20)\nsns.countplot(df['fbs'])\nsns.FacetGrid(df,col='output',height=7).map(plt.hist,'fbs').set(title=\"output vs fbs\")\n","d709c5c6":"plt.figure(figsize=(10,5))\nplt.title(\"Resting Electrocardiographic Results distribution\",fontsize=20)\nsns.countplot(df['restecg'])\nplt.show()\nprint(\"Output vs Resting Electrocardiographic result\")\nsns.FacetGrid(df,col='output',height=7).map(plt.hist,'restecg')\n","6c7690c3":"plt.figure(figsize=(10,5))\nplt.title(\"Maximum heart rate achieved in beats per minute (bpm) distrinution\",fontsize=20)\ndf.thalachh.plot.hist(df['thalachh'])\nplt.show()\nprint(\"Output vs Thalachh \")\nsns.FacetGrid(df,col='output',height=7).map(plt.hist,'thalachh')","c672b118":"plt.figure(figsize=(10,5))\nplt.title(\"Exercise induced angina\",fontsize=20)\nsns.countplot(df['exng'])\nplt.show()\nprint(\"Output vs exchng \")\nsns.FacetGrid(df,col='output',height=7).map(plt.hist,'exng')","5b411e48":"plt.figure(figsize=(10,5))\nplt.title(\"Depression induced by exercise relative to rest\",fontsize=20)\nplt.hist(df['oldpeak'])\nplt.show()\nprint(\"Output vs oldpeak]\")\nsns.FacetGrid(df,col='output',height=7).map(plt.hist,'oldpeak')","07f515bb":"plt.figure(figsize=(10,5))\nplt.title(\"slope of the peak exercise ST segment\",fontsize=20)\nsns.countplot(df['slp'])\nplt.show()\nprint(\"Output vs slp \")\nsns.FacetGrid(df,col='output',height=7).map(sns.countplot,'slp')","ad746e62":"plt.figure(figsize=(10,5))\nplt.title(\"ca distribution\",fontsize=20)\nsns.countplot(df['caa'])\nplt.show()\nprint(\"Output vs caa \")\nsns.FacetGrid(df,col='output',height=7).map(sns.countplot,'caa')","5f5f5c2f":"plt.figure(figsize=(10,5))\nplt.title(\" \u03b2-Thalassemia Cardiomyopathy distribution\",fontsize=20)\nsns.countplot(df['thall'])\nplt.show()\nprint(\"Output vs thall \")\nsns.FacetGrid(df,col='output',height=7).map(sns.countplot,'thall')","a15be47f":"sns.countplot(data= df, x='sex',hue='thall')\nplt.title('Gender v\/s Thalassemia\\n')","9644de35":"sns.countplot(data= df, x='slp',hue='output')\nplt.title('Slope v\/s Target\\n')","7e8f381a":"sns.countplot(data= df, x='exng',hue='thall')\nplt.title('exng v\/s Thalassemia\\n')","7a69e95f":"sns.FacetGrid(df,col='output',row='sex',hue='cp',height=7).map(sns.countplot,'thall').add_legend()","79677017":"plt.figure(figsize=(10,5))\nsns.FacetGrid(df,col='output',row='sex',hue='cp',height=5).map(plt.hist,'age').add_legend()","e97c9271":"plt.figure(figsize=(10,5))\nsns.FacetGrid(df,col='output',row='sex',hue='cp',height=5).map(sns.countplot,'exng').add_legend()","2e35e0ce":"for i in range(0,13):\n    sns.boxplot(y=df.iloc[:,i],data=df)\n    plt.show()","3f850448":"#Removing outliers using Z-score\nz = np.abs(stats.zscore(df))\ndf2 = df[(z<3).all(axis=1)]\ndf2.shape","d52675bd":"sns.boxplot(y=df2.age)","97dde22e":"fig = plt.subplots(figsize=(14,8))\nsns.heatmap(df2.corr(method=\"pearson\"),annot= True,linewidth=0.1)","46d9d1ad":"fig = plt.subplots(figsize=(14,8))\nsns.heatmap(df.corr(method=\"spearman\"),annot= True,linewidth=0.1)","9e0f8f7b":"df2['age_range'] = pd.qcut(df2['age'], 3)\n\nprint(df2[[\"age_range\", \"output\"]].groupby([\"age_range\"], as_index = False).mean().sort_values(by = \"age_range\", ascending = True))\ndf2=df2.drop(['age_range'], axis=1)\n","5622dc8d":"dfa= [df2]  \nfor dataset in dfa:\n    dataset.loc[(dataset[\"age\"] <= 51, \"age_cat\")] = 0\n    dataset.loc[(dataset[\"age\"] >51) & (dataset[\"age\"] <= 59), \"age_cat\"] = 1\n    dataset.loc[(dataset[\"age\"] > 59) , \"age_cat\"] = 2\ndf2=df2.drop(['age'],axis=1)    \ndf2\nsns.countplot(x='age_cat',data=df2,hue='output')    ","567da184":"df2['trtbps_range'] = pd.qcut(df2['trtbps'], 3)\n\n\n\nprint(df2[[\"trtbps_range\", \"output\"]].groupby([\"trtbps_range\"], as_index = False).mean().sort_values(by = \"trtbps_range\", ascending = True))\ndf2=df2.drop(['trtbps_range'], axis=1)","d7001a36":"dfa= [df2]  \nfor dataset in dfa:\n    dataset.loc[(dataset[\"trtbps\"] <= 122, \"trtbps_cat\")] = 0\n    dataset.loc[(dataset[\"trtbps\"] > 122 ) & (dataset[\"trtbps\"] <= 138), \"trtbps_cat\"] = 1\n    dataset.loc[(dataset[\"trtbps\"] > 138), \"trtbps_cat\"] = 2\ndf2\nsns.countplot(x='trtbps_cat',data=df2,hue='output')  \ndf2=df2.drop(['trtbps'],axis=1)","73426856":"df2['chol_range'] = pd.qcut(df2['chol'], 4)\n\n\n\nprint(df2[[\"chol_range\", \"output\"]].groupby([\"chol_range\"], as_index = False).mean().sort_values(by = \"chol_range\", ascending = True))\ndf2=df2.drop(['chol_range'], axis=1)","50663062":"dfa= [df2]  \nfor dataset in dfa:\n    dataset.loc[(dataset[\"chol\"] <= 211, \"chol_cat\")] = 0\n    dataset.loc[(dataset[\"chol\"] > 211) & (dataset[\"chol\"] <= 241), \"chol_cat\"] = 1\n    dataset.loc[(dataset[\"chol\"] > 241) & (dataset[\"chol\"] <= 274), \"chol_cat\"] = 2\n    dataset.loc[(dataset[\"chol\"] > 274), \"chol_cat\"] = 3\ndf2=df2.drop(['chol'], axis=1)\nsns.countplot(x='chol_cat',data=df2,hue='output')  ","d61b6c67":"df2['thalach_range'] = pd.qcut(df2['thalachh'], 3)\n\n\n\nprint(df2[[\"thalach_range\", \"output\"]].groupby([\"thalach_range\"], as_index = False).mean().sort_values(by = \"thalach_range\", ascending = True))\ndf2=df2.drop(['thalach_range'], axis=1)","0b31afde":"dfa= [df2]  \nfor dataset in dfa:\n    dataset.loc[(dataset[\"thalachh\"] <= 142, \"thalach_cat\")] = 0\n    dataset.loc[(dataset[\"thalachh\"] > 142) & (dataset[\"thalachh\"] <= 162), \"thalach_cat\"] = 1\n    dataset.loc[(dataset[\"thalachh\"] > 162), \"thalach_cat\"] = 2\n    \ndf2=df2.drop(['thalachh'], axis=1)\nsns.countplot(x='thalach_cat',data=df2,hue='output')  \ndf2","03613aaf":"df2['oldpeak_range'] = pd.qcut(df2['oldpeak'], 3)\n\n\n\nprint(df2[[\"oldpeak_range\", \"output\"]].groupby([\"oldpeak_range\"], as_index = False).mean().sort_values(by = \"oldpeak_range\", ascending = True))\ndf2=df2.drop(['oldpeak_range'], axis=1)","ea5287f1":"dfa= [df2]  \nfor dataset in dfa:\n    dataset.loc[(dataset[\"oldpeak\"] <= 0.1, \"oldpeak_cat\")] = 2\n    dataset.loc[(dataset[\"oldpeak\"] > 0.1) & (dataset[\"oldpeak\"] <= 1.4), \"oldpeak_cat\"] = 1\n    dataset.loc[(dataset[\"oldpeak\"] > 1.4), \"oldpeak_cat\"] = 2\n    \ndf2=df2.drop(['oldpeak'], axis=1)\nsns.countplot(x='oldpeak_cat',data=df2,hue='output') ","24ec396a":"df2","bb2c06f4":"x = df2.drop([\"output\",'restecg'], axis=1)\ny = df2[\"output\"]\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.1,random_state=0)","2807aabd":"# Using Random forest classifier\nrf = RandomForestClassifier()\nrf.fit(x_train,y_train)\ny_pred_rf = rf.predict(x_test)\nprint(\"Accuracy of Random Forest Classifier :: \", metrics.accuracy_score(y_test, y_pred_rf))\n","6d9f1e85":"logReg = LogisticRegression(random_state=0, solver='liblinear')\nlogReg.fit(x_train, y_train)\n#Check accuracy of Logistic Regression\ny_pred_logReg = logReg.predict(x_test)\n#Model Accuracy\nprint(\"Accuracy of logistic regression classifier :: \" ,metrics.accuracy_score(y_test,y_pred_logReg))\n","3b52ac05":"cm= confusion_matrix(y_test,y_pred_logReg)\nsns.heatmap(cm,annot= True)","1c251786":"for n in range (1, 20, 2):\n    knn = KNeighborsClassifier (n_neighbors = n)\n    knn.fit(x_train, y_train)\n    y_pred = knn.predict(x_test)\n    acc_knn = round(knn.score(x_train, y_train) * 100, 2)\n    print(\"The accuracy with\", n, \"neihbors is:\", acc_knn)\n    \n    y_pred","862829ad":"dc= DecisionTreeClassifier()\ndc.fit(x_train,y_train)\npreddc= dc.predict(x_test)\nmetrics.accuracy_score(y_test,preddc)","1a7f67b4":"print(\"now lets see the scores togher\")\n\nmodels = pd.DataFrame({\n    \"Model\": [\"Random Forest\",\"Decision Tree\"  ,\"Logistic Regression\",\"KNN\"],\n    \"Score\": [ metrics.accuracy_score(y_test, y_pred_rf)*100,metrics.accuracy_score(y_test,preddc)*100 , metrics.accuracy_score(y_test,y_pred_logReg)*100, acc_knn]\n})\n\nmodels.sort_values(by = \"Score\", ascending = False)","127d2bdb":"<h1 style=\"color:#a6b9ff\" >Outlier detection and treatment<h1>","9111a67c":"<p style=\"color:Salmon\">Since there are no null values, we can go further with our exploration process.<\/p>","90e0711b":"<p style=\"color:Salmon\">No more missing rows!!<\/p>","849c01b5":"<h2  style=\"color:#a6b9ff\">Checking For Duplicate Values<\/h2>","71ce25f2":"oldpeak","e79f6a32":"<p style=\"color:Salmon\">Significantly higher proportion of males were diagnosed with cardiac disease compared to females.<\/p>","4159a541":"<P>Output vs Resting blood pressure (in mm Hg on admission to the hospital)<\/P>","cd2a9a3b":"<h1  style=\"color:#a6b9ff\" >Applying different machine learning models<\/h1>","6fd6837e":"<h1 style=\"color:#a6b9ff\">Importing Libraries Required<\/h1>","7617db33":"Logistic Regression","af52c096":"age","e128ed7c":"<p style=\"color:Salmon\">As you can see some have features have outliers . <\/p>","a441ccf6":"descision tree","3d2ed233":"<pre>Output vs Chest Pain type(cp)\n    chest pain type\n 0: typical angina\n 1: atypical angina\n 2: non-anginal pain\n 3: asymptomatic<\/pre>","b893c0fc":"chol","e6212d8c":"<p style=\"color:Salmon\">It seems like people below the age of 57 are less prone to heart attack and people betwween the age of 55-60 are prone to have heart attack. This information may be ambiguous therefore we might go for multivariate anaysis or if it has outliers we might remove that as well.<\/p>","34016c83":"Gender, Chest Pain Type and Exercise Induced Angina","049bf32d":"KNN","d84b7b13":"<p style=\"color:Salmon\">As things are not clear , we have to go for multivariate analysis by checking it with other variates<\/p>","6eaa9759":"<h1  style=\"color:#a6b9ff\">Checking For Missing Values<\/h1>","b76240c2":"<h1 style=\"color:#a6b9ff\" >Splitting variables into train and test<h1>","b76bd2c4":"<img src=\"https:\/\/i.guim.co.uk\/img\/media\/f2b0671c5f3aa754f1f7c257e528aa15d2fd5d07\/0_717_7000_4200\/master\/7000.jpg?width=445&quality=45&auto=format&fit=max&dpr=2&s=372a5c5dff4523ec7c152183426d688c\"  height=\"500\" width=\"500\" \/>","80ab2f86":"<h1 style=\"color:#8fc5ff\">Problem Defination<\/h1>\n<p><div style=\" background-color: #8fc5ff;\"  >Heart disease is currently the leading cause of death across the globe. It is anticipated that the development of computation methods that can predict the presence of heart disease will significantly reduce heart disease caused mortalities while early detection could lead to substantial reduction in health care costs. Traditional statistical methods draw inferences from a limited number of variables obtained from experiments performed under controlled conditions. In contrast, Machine Learning methods can use a large number of often complex variables obtained from a variety of medical data banks to predict whether a patient has heart disease. Cardiovascular medicine generates a plethora of biomedical, clinical and operational data as a part of patient health care delivery, making this field ideal for the development and use of computational methods for predicting a patient has cardiac disease. Recent efforts to develop computational models capable of analysing and predicting whether a person has heart disease have shown great promise.<\/div><\/p>","fb38200f":"we will hence categorize data into three groups with index 0,1 ,2","b76e7cb4":"<p style=\"color:Salmon\">Most individuals did not have fasting blood sugar levels greater than 120 mg\/dL . This did not change greatly when the data was divided based on the presence of disease although a slightly higher proportion of diseased patients exhibited higher levels of blood sugar.<\/p>","0c3242a7":"<h1 style=\"color:#a6b9ff\">Multivariate analysis<\/h1>\n","8a5557ca":"Output vs Sex","5c4e2ca3":"<h3  style=\"color:#a6b9ff\">Outlier Treatment<\/h3>","201022f1":"<p style=\"color:Salmon\">People showing probable or definite left ventricular hypertropy by Estes criteria have less chanes to end up with heart attack.<\/p>","97db9e60":"<p>Output vs Thalachh(maximum heart rate achieved in beats per minute (bpm))<\/p>","cf462aee":"thalachh","97019258":"therefore we conclude logistic regression is the perfect algorithm that fits this model that is trained","80d63242":"<pre> Output vs Ca: number of major vessels (0-3) colored by fluoroscopy<\/pre>","e791e3fe":"<pre>Output vs Slope: \n    the slope of the peak exercise ST segment\n    Value 1: upsloping\n    Value 2: flat\n    Value 3: down-sloping\n   <\/pre>","1f90c1aa":"<p style=\"color:Salmon\">significantly more patients in the diseased cohort displayed exercise induced angina . This feature should be strongly predictive.<\/p>","c9ca2b2b":"<h1 style=\"color:#a6b9ff\" >Feature Engineering<h1>","1bb6dfba":"<p> Output vs Fasting Blood Sugar\n     Fbs: fasting blood sugar > 120 mg\/dl (1 = true; 0 = false)<\\p>","0ddc197c":"<h1 style=\"color:#a6b9ff\" >Converting continuous numerical values to categorical<h1>","ab8e66e8":"<p style=\"color:Salmon\" >Since we  have one duplicated row, let's drop it and cross check it.<\/p>","b6b2592e":"Gender, Chest Pain and Age","0f0f5d66":"<p style=\"color:Salmon\">Although the majority of males and females diagnosed with cardiac disease were asymptomatic for angina pain, they actually exhibit exercise induced angina pain . This added further support to the use of the exercise induced angina pain feature for the prediction of heart disease. <\/p>","d5c34217":"pls comment!!","8bb898b8":"<p style=\"color:Salmon\">lets check this out with ultivariate analysis<\/p>","04cb1271":"# HEART ATTACK ANALYSIS AND PREDICTION","7359a3f2":"<h1  style=\"color:#a6b9ff\">Reading CSV<\/h1>","5def9699":"<p>Output vs cholestrol<\/p>\n","1b25400c":"Gender, Chest Pain Type and \u03b2-Thalassemia","63975143":"<p style=\"color:Salmon\">Let's some basic statistical details about the data set<\/p>","91921a70":"\n<p ><div style=\" background-color:#8fc5ff;\" >\n    Processes involved in data visualization and analysis are as follows ,<br>\n   <b>1. Exploratory Data Analysis (EDA)<\/b>\n    <ol><i>\n        <li>Problem definition (what do we need to solve)<\/li>\n        <li>Variable Identification (what data do we have)<\/li>\n        <li>Missing values treatment (machine learning algorithms hates fields with missing data)<\/li>\n        <li>Univariate Analysis (understanding each field in the dataset)<\/li>\n        <li>Multivariate Analysis (understanding the interactions between different fields and target)<\/li>\n       <\/i>\n    <\/ol><b>2. Feature Enginerring<\/b>\n        <ol><i>        <li>Outlier treatment<\/li>\n                    <li>Variable transformation<\/li>\n                <li>Variable creation<\/li>\n                <li>Dimesionality reduction<\/li>\n             <\/i>\n            <\/ol>\n    <b>3. Predictive Modeling<\/b><\/div><\/p>","e2c73331":"trtbps","9a76822b":"<p style=\"color:Salmon\">Most female and male patients diagnosed with \u03b2-Thalassemia, or the reversible phenotype, and displaying signs of cardiac disease did not exhibit non-stress induced angina pain <\/p>","f224f7dd":"<p>Output vs Excercise induced angina<\/p>","46b67b25":"Output vs Age","48247d78":"Output vs depression induced by exercise relative to rest","6f80e735":"<p style=\"color:Salmon\">People with non anginal pain are most prone to heart attack.to get a better idea we may to go for multivariate analysis<\/p>","6b1839db":"<pre> Output vs Resting Electrocardiographic results\n    Value 0: normal\n    Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 005 mV)\n    Value 2: showing probable or definite left ventricular hypertropy by Estes criteria<\/pre>","62447326":"<p style= \"color:Salmon\"> AGE, TRTBPS, THALACHH,OLDPEAK AND CHOL are features with continuous values. <\/p>","df381891":"<pre>Output vs Thal\n    3 = normal; 6 = fixed defect; 7 = reversible defect\n    thal - 2 = normal; 1 = fixed defect; 3 = reversable defect<\/pre>","e99336e2":"<h1 style=\"color:#a6b9ff\">Variable description<\/h1>\n<pre><div style=\"background-color: #8fc5ff\">\n    Age: age in years\n    Gender: gender (1 = male; 0 = female)\n    Cp: chest pain type\n    Value 1: typical angina\n    Value 2: atypical angina\n    Value 3: non-anginal pain\n    Value 0: asymptomatic\n    Trtbps: resting blood pressure (in mm Hg on admission to the hospital)\n    Chol: serum cholesterol in mg\/dl\n    Fbs: fasting blood sugar > 120 mg\/dl (1 = true; 0 = false)\n    Restecg: resting electrocardiographic results\n    Value 0: normal\n    Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 005 mV)\n    Value 2: showing probable or definite left ventricular hypertropy by Estes criteria\n    Thalach: maximum heart rate achieved in beats per minute (bpm)\n    Exang: exercise induced angina (1 = yes; 0 = no)\n    Oldpeak: ST depression induced by exercise relative to rest\n    Slope: the slope of the peak exercise ST segment\n    Value 1: upsloping\n    Value 2: flat\n    Value 3: down-sloping\n    Ca: number of major vessels (0-3) colored by fluoroscopy\n    Thal: 3 = normal; 6 = fixed defect; 7 = reversible defect\n    The target feature has two classes and hence it is a binary classification problem. To reiterate, the goal is to predict whether a person has heart disease.\n     0= less chance of heart attack 1= more chance of heart \n     \n<\/div>\n<\/pre>\n","fa4c5b11":"<h1 style=\"color:#a6b9ff\">Univariate Analysis<\/h1>"}}