{"cell_type":{"2a665937":"code","874e392d":"code","74efc334":"code","82c91ea4":"code","af32ae28":"code","5295eccc":"code","8072786b":"code","8f358771":"code","ff3992ab":"code","07dcb50f":"markdown","3d87e883":"markdown","d1206f8e":"markdown","0f8fa6fa":"markdown","f95a6f92":"markdown"},"source":{"2a665937":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime, date\nimport gc\n%matplotlib inline\nsns.set()","874e392d":"df = pd.read_csv('..\/input\/vancouver-crime-report\/crime_records.csv')\ndf.replace([np.inf,-np.inf],np.nan,inplace=True)\ndf.fillna(0,inplace=True)\ndf['HOUR'] = df['HOUR'].astype('int')\ndf['MINUTE'] = df['MINUTE'].astype('int')\ndf['date'] = df.apply(lambda row: datetime(year=row.YEAR,month=row.MONTH,day=row.DAY,hour=row.HOUR,minute=row.MINUTE),axis=1)\ndf['weekday'] = df['date'].apply(lambda x: x.weekday())\ndf = df[df.date<pd.Timestamp('2019-07-01')]\ndf.index = df['date']","74efc334":"def prepare_df(crime_type, df, percentage=True,years=[2011,2012,2013]):\n    newdf1 = df[(df.TYPE==crime_type)&(df.YEAR.isin(years))]\n    newdf2 = df[(df.TYPE==crime_type)&(df.YEAR.isin([2017,2018,2019]))]\n    if percentage==True:\n        newdf1 = (newdf1.groupby(['NEIGHBOURHOOD']).size()\/len(newdf1)).sort_values(ascending=True).reset_index().rename(columns={0: 'years 2011, 2012 and 2013'})\n        newdf2 = (newdf2.groupby(['NEIGHBOURHOOD']).size()\/len(newdf2)).sort_values(ascending=True).reset_index().rename(columns={0: 'years 2017, 2018 and 2019'})\n    else:\n        newdf1 = (newdf1.groupby(['NEIGHBOURHOOD']).size()).sort_values(ascending=True).reset_index().rename(columns={0: 'years 2011, 2012 and 2013'})\n        newdf2 = (newdf2.groupby(['NEIGHBOURHOOD']).size()).sort_values(ascending=True).reset_index().rename(columns={0: 'years 2017, 2018 and 2019'})  \n    newdf = pd.merge(newdf2,newdf1,on=['NEIGHBOURHOOD'],how='left')\n    newdf.index = newdf['NEIGHBOURHOOD']\n    newdf.drop(['NEIGHBOURHOOD'],axis=1,inplace=True)\n    return newdf \n\ndef make_heatmap(df,color='black',crime_type='Other Theft', years=[2019],comments=''): \n    df_clean = df.copy()\n    df_clean = df_clean[df_clean.TYPE==crime_type]\n    df_clean = df_clean[df_clean.YEAR.isin(years)]\n    weekdays = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}\n    heatmap = pd.pivot_table(df_clean[~((df_clean.HOUR==0)&(df_clean.MINUTE==0))], values='TYPE', index=['HOUR'],columns=['weekday'], aggfunc='count')\n    heatmap.fillna(0,inplace=True)\n    ylabels = [weekdays[i] for i in heatmap.columns.values]\n    xlabels = heatmap.index.values\n    values = heatmap.values.T\n\n    fig, ax = plt.subplots(figsize=(15,5))\n    ax.xaxis.tick_top()\n    ax.tick_params(axis=u'both', which=u'both',length=0)\n    im = ax.imshow(values,cmap='Reds',vmin=0)\n    ax.set_xticks(np.arange(len(xlabels)))\n    ax.set_yticks(np.arange(len(ylabels)))\n    ax.set_xticklabels(xlabels)\n    ax.set_yticklabels(ylabels)\n    plt.setp(ax.get_xticklabels(), ha=\"right\",\n             rotation_mode=\"anchor\")\n    for i in range(len(ylabels)):\n        for j in range(len(xlabels)):\n            text = ax.text(j, i, int(values[i, j]),\n                           ha=\"center\", va=\"center\", color=\"white\")\n    ax.grid(False)\n\n    fig.tight_layout()\n    text = ''\n    for y in years:\n        text += str(y)+\", \"\n    plt.title(f'Total number of \"{crime_type}\" incidents in years: {text[:-2]} (weekday by hour of the day)',fontsize=12,color=color)\n    plt.subplots_adjust(left=0.38)\n    plt.gcf().text(0.995, 0.5, comments, fontsize=12)\n    plt.show()\n    del df_clean\n    gc.collect()","82c91ea4":"crime_type = 'Theft from Vehicle'\nplt.figure(figsize=(10,5))\nplt.rcParams['axes.facecolor'] = 'white'\ndf[df.TYPE==crime_type].groupby(pd.Grouper(freq='BQ')).size().rolling(4).mean().plot(color='blue',alpha=0.5,linestyle='--', label='moving average 12 months')\ndf[df.TYPE==crime_type].groupby(pd.Grouper(freq='BQ')).size().plot(color='black',alpha=0.9, label = f'number \"{crime_type}\" of incidents')\nplt.title(f'{crime_type} per Quarter',fontsize=14)\nplt.legend(frameon=False)\nplt.xlabel('')\nplt.xlim(pd.Timestamp('2003-01-01'), pd.Timestamp('2019-06-30'))\nplt.axvspan(pd.Timestamp('2011-01-01'), pd.Timestamp('2013-12-31'), facecolor='green', alpha=0.1)\nplt.axvspan(pd.Timestamp('2017-01-01'), pd.Timestamp('2019-06-30'), facecolor='red', alpha=0.1)\nplt.ylim(400)\ntextstr = f'\"{crime_type}\" numbers were decreasing, from 2003 to ~2012,'\ntextstr2 = 'from 2013 to 2019 there is a clear increase in the number of this'\ntextstr3 = 'type of crime. There is a seasonal influence, but observing '\ntextstr4 = 'the \"moving average\" curve it is clear the trend of increase.'\nplt.gcf().text(0.92, 0.82, textstr, fontsize=10.5)\nplt.gcf().text(0.92, 0.79, textstr2, fontsize=10.5)\nplt.gcf().text(0.92, 0.76, textstr3, fontsize=10.5)\nplt.gcf().text(0.92, 0.73, textstr4, fontsize=10.5)\n\ntextstr = 'In the graphs below there will be a comparison between the total'\ntextstr2 = 'number of occurrences in the timespan between'\ntextstr21 = '2011 to 2013'\ntextstr22 = 'and'\ntextstr3 = '2017 to 2019 (June 30).'\nplt.gcf().text(0.92, 0.52, textstr, fontsize=10.5)\nplt.gcf().text(0.92, 0.49, textstr2, fontsize=10.5)\nplt.gcf().text(1.235, 0.49, textstr21, fontsize=10.5, color='green',alpha=0.8)\nplt.gcf().text(1.325, 0.49, textstr22, fontsize=10.5)\nplt.gcf().text(0.92, 0.46, textstr3, fontsize=10.5, color='red', alpha=0.8)\nplt.show()","af32ae28":"newdf = prepare_df(crime_type = crime_type, df=df, percentage=True)\nplt.figure(figsize=(15,5.5))\nax = plt.subplot(121)\ny = newdf.sort_values(by=['years 2017, 2018 and 2019'],ascending=True).iloc[-10:].index\nv1 = newdf.sort_values(by=['years 2017, 2018 and 2019'],ascending=True).iloc[-10:,0]\nv2 = newdf.sort_values(by=['years 2017, 2018 and 2019'],ascending=True).iloc[-10:,1]\nind = np.arange(len(y))\nwidth=0.4\nax.barh(ind+0.4,v1,width,color='red', alpha=0.25)\nax.barh(ind,v2,width, color ='green', alpha=0.25)\nax.set(yticks=ind + width\/2, yticklabels=y, ylim=[2*width - 1, len(y)])\nax.get_xaxis().set_visible(False)\nfor i in ax.patches:\n    ax.text(i.get_width()+0.001, i.get_y()+.09, \\\n            str((round((i.get_width())*100,1)))+'%', fontsize=10,color='black')\nplt.ylabel('')\nplt.title(f'{crime_type} in percentage')\n\nnewdf = prepare_df(crime_type = crime_type, df=df, percentage=False)\nax1 = plt.subplot(122)\ny = newdf.sort_values(by=['years 2017, 2018 and 2019'],ascending=True).iloc[-10:].index\nv1 = newdf.sort_values(by=['years 2017, 2018 and 2019'],ascending=True).iloc[-10:,0]\nv2 = newdf.sort_values(by=['years 2017, 2018 and 2019'],ascending=True).iloc[-10:,1]\nind = np.arange(len(y))\nwidth=0.4\nax1.barh(ind+0.4,v1,width,label='years 2017, 2018 and 2019',color='red', alpha=0.25)\nax1.barh(ind,v2,width,label='years 2011, 2012 and 2013', color ='green', alpha=0.25)\nax1.set(yticks=ind + width\/2, yticklabels=y, ylim=[2*width - 1, len(y)])\nax1.get_xaxis().set_visible(False)\nax1.get_yaxis().set_visible(False)\nfor i in ax1.patches:\n    ax1.text(i.get_width()+0.001, i.get_y()+.09, \\\n            str((round((i.get_width()),1))), fontsize=10,color='black')\nplt.legend(frameon=False)\nplt.ylabel('')\nplt.title(f'{crime_type} in percentage')\nplt.subplots_adjust(left=0.4)\n\ntextstr = 'CBD more than double the number of \"Theft from Vehicle\"'\ntextstr2 = ''\nplt.gcf().text(0.92, 0.82, textstr, fontsize=10.5)\nplt.gcf().text(0.92, 0.79, textstr2, fontsize=10.5)\n\ntextstr = 'All neighbourhoods in the top 10 increased the number'\ntextstr2 = ' of occurrences.'\nplt.gcf().text(0.92, 0.578, textstr, fontsize=10.5)\nplt.gcf().text(0.92, 0.548, textstr2, fontsize=10.5)\n\ntextstr = 'Notice that even with a smaller timespan of 2.5 years'\ntextstr2 = '2017, 2018 and 2019 (until 30 June) have a greater '\ntextstr3 = 'number of occurrences than 2003, 2004 and 2005,'\ntextstr4 = 'confirming the increase in \"Theft from Vehicle\".'\nplt.gcf().text(0.92, 0.218, textstr, fontsize=10.5)\nplt.gcf().text(0.92, 0.188, textstr2, fontsize=10.5)\nplt.gcf().text(0.92, 0.158, textstr3, fontsize=10.5)\nplt.gcf().text(0.92, 0.128, textstr4, fontsize=10.5)\n\ntextstr = 'Top 10 neighbourhoods in number of incidents'\nplt.gcf().text(0.5, 0.98, textstr, fontsize=12)\nplt.show()","5295eccc":"comments = 'Incidents more likely to happen in the evening, \\nafter ~17.'\nmake_heatmap(df,color='green',crime_type=crime_type, years =[2011,2012,2013],comments=comments)\ncomments = f'No big change in the time when \\n\"{crime_type}\" likely to occur, still\\n concentrated in the evening.'\nmake_heatmap(df,color='red',crime_type=crime_type, years =[2017,2018,2019],comments=comments)","8072786b":"crime_type = 'Other Theft'\nplt.figure(figsize=(10,5))\nplt.rcParams['axes.facecolor'] = 'white'\n#df[df.TYPE==crime_type].groupby(pd.Grouper(freq='BQ')).size().rolling(4).mean().plot(color='black',linestyle='--', label='rolling average 12 months')\ndf[df.TYPE==crime_type].groupby(pd.Grouper(freq='BQ')).size().plot(color='black',alpha=0.9, label = f'Number of \"{crime_type}\" incidents')\nplt.title(f'{crime_type} per Quarter')\nplt.legend(frameon=False)\nplt.xlabel('')\nplt.xlim(pd.Timestamp('2003-01-01'), pd.Timestamp('2019-06-30'))\nplt.axvspan(pd.Timestamp('2003-01-01'), pd.Timestamp('2005-12-31'), facecolor='green', alpha=0.1)\nplt.axvspan(pd.Timestamp('2017-01-01'), pd.Timestamp('2019-06-30'), facecolor='red', alpha=0.1)\nplt.ylim(400)\ntextstr = f'\"{crime_type}\" numbers are increasing since 2003, numbers stabilized'\ntextstr2 = 'from ~2011 to ~2013 and in more recent years.'\n#textstr3 = 'type of crime.'\nplt.gcf().text(0.92, 0.82, textstr, fontsize=10.5)\nplt.gcf().text(0.92, 0.79, textstr2, fontsize=10.5)\n#plt.gcf().text(0.92, 0.76, textstr3, fontsize=10.5)\n\ntextstr = 'In the graphs below there will be a comparison between the total'\ntextstr2 = 'number of occurrences in the timespan between'\ntextstr21 = '2003 to 2005'\ntextstr22 = 'and'\ntextstr3 = '2017 to 2019 (June 30).'\nplt.gcf().text(0.92, 0.62, textstr, fontsize=10.5)\nplt.gcf().text(0.92, 0.59, textstr2, fontsize=10.5)\nplt.gcf().text(1.235, 0.59, textstr21, fontsize=10.5, color='green',alpha=0.8)\nplt.gcf().text(1.325, 0.59, textstr22, fontsize=10.5)\nplt.gcf().text(0.92, 0.56, textstr3, fontsize=10.5, color='red', alpha=0.8)\nplt.show()","8f358771":"newdf = prepare_df(crime_type = crime_type, df=df, percentage=True,years=[2003,2004,2005])\nplt.figure(figsize=(15,5.5))\nax = plt.subplot(121)\ny = newdf.sort_values(by=['years 2017, 2018 and 2019'],ascending=True).iloc[-10:].index\nv1 = newdf.sort_values(by=['years 2017, 2018 and 2019'],ascending=True).iloc[-10:,0]\nv2 = newdf.sort_values(by=['years 2017, 2018 and 2019'],ascending=True).iloc[-10:,1]\nind = np.arange(len(y))\nwidth=0.4\nax.barh(ind+0.4,v1,width,color='red', alpha=0.25)\nax.barh(ind,v2,width, color ='green', alpha=0.25)\nax.set(yticks=ind + width\/2, yticklabels=y, ylim=[2*width - 1, len(y)])\nax.get_xaxis().set_visible(False)\nfor i in ax.patches:\n    ax.text(i.get_width()+0.001, i.get_y()+.09, \\\n            str((round((i.get_width())*100,1)))+'%', fontsize=10,color='black')\nplt.ylabel('')\nplt.title(f'{crime_type} in percentage')\n\nnewdf = prepare_df(crime_type = crime_type, df=df, percentage=False, years=[2003,2004,2005])\nax1 = plt.subplot(122)\ny = newdf.sort_values(by=['years 2017, 2018 and 2019'],ascending=True).iloc[-10:].index\nv1 = newdf.sort_values(by=['years 2017, 2018 and 2019'],ascending=True).iloc[-10:,0]\nv2 = newdf.sort_values(by=['years 2017, 2018 and 2019'],ascending=True).iloc[-10:,1]\nind = np.arange(len(y))\nwidth=0.4\nax1.barh(ind+0.4,v1,width,label='years 2017, 2018 and 2019',color='red', alpha=0.25)\nax1.barh(ind,v2,width,label='years 2003, 2004 and 2005', color ='green', alpha=0.25)\nax1.set(yticks=ind + width\/2, yticklabels=y, ylim=[2*width - 1, len(y)])\nax1.get_xaxis().set_visible(False)\nax1.get_yaxis().set_visible(False)\nfor i in ax1.patches:\n    ax1.text(i.get_width()+0.001, i.get_y()+.09, \\\n            str((round((i.get_width()),1))), fontsize=10,color='black')\nplt.legend(frameon=False)\nplt.ylabel('')\nplt.title(f'{crime_type} in percentage')\nplt.subplots_adjust(left=0.4)\n\ntextstr = 'Top 10 neighbourhoods in number of incidents'\nplt.gcf().text(0.5, 0.98, textstr, fontsize=12)\n\ntextstr = 'CBD concentrated the most of \"Other Theft\"'\ntextstr2 = 'and still increased the number of occurrences.'\nplt.gcf().text(0.92, 0.82, textstr, fontsize=10.5)\nplt.gcf().text(0.92, 0.79, textstr2, fontsize=10.5)\n\ntextstr = 'Kensington-Cedar Cottage was the only neighbourhood'\ntextstr2 = 'in the top 10 to decrease number of \"Other Theft\".'\nplt.gcf().text(0.92, 0.378, textstr, fontsize=10.5)\nplt.gcf().text(0.92, 0.348, textstr2, fontsize=10.5)\n\ntextstr = 'Note that even with a smaller timespan of 2.5 years'\ntextstr2 = '2017, 2018 and 2019 (until 30 June) have a greater '\ntextstr3 = 'number of occurrences than 2011, 2012 and 2013,'\ntextstr4 = 'confirming the increase in \"Other Theft\".'\nplt.gcf().text(0.92, 0.218, textstr, fontsize=10.5)\nplt.gcf().text(0.92, 0.188, textstr2, fontsize=10.5)\nplt.gcf().text(0.92, 0.158, textstr3, fontsize=10.5)\nplt.gcf().text(0.92, 0.128, textstr4, fontsize=10.5)\nplt.show()","ff3992ab":"comments = 'Incidents more likely to happen in the afternoon, \\nbetween ~12 to ~19.'\nmake_heatmap(df,color='green',crime_type=crime_type, years =[2011,2012,2013],comments=comments)\ncomments = f'No big change in the time when \"{crime_type}\" \\nlikely to occur, still concentrated in afternoon.'\nmake_heatmap(df,color='red',crime_type=crime_type, years =[2017,2018,2019],comments=comments)","07dcb50f":"2. Now a comparison of the behave of **\"Other Theft\"** incidents, from a timespan when the numbers were better **(2003 to 2005)** to more recent times **(2017 to June 2019)**.","3d87e883":"The trend of increase come since ~2003, there is an increase in the concentration of incidents in CBD. Somehow even with a general increase in the numbers Kensington-Cedar Cottage was able to decrease the number of incidents, would be interesting to know what happened there. The concentration of occurrences still in the afternoon, did not notice big differences.","d1206f8e":"Basically a general increase, with CBD increasing the concentration of incidents, Fairview and Kensington-Cedar Cottage with almost stable numbers. Can be noticed a slightly shift of incidents to friday night aswell, but this would need to be refined to confirm the trend.","0f8fa6fa":"I will show below crime types that are clearly with an increase trend over time: \"Other Theft\" and \"Theft from Vehicle\". Note that Vancouver population also increased within last years, but I did not cross data, so the rate (incidents\/population) have not increased as much as the numbers showed below. \n\nOther crime types decreased, are stable or the increase trend is not as clear as the two types mentioned below.","f95a6f92":"1. First a comparison of the behave of **\"Theft from Vehicle\"** incidents, from a timespan when the numbers were better **(2011 to 2013)** to more recent times **(2017 to June 2019)**."}}