{"cell_type":{"cce4c7b2":"code","ff1f2e23":"code","9710eee9":"code","d4a43915":"code","06b40219":"code","21b02647":"code","d8d63717":"code","06e585c4":"code","c4cc6886":"code","e6c764c6":"code","06a0acac":"code","495d38d4":"code","3cd3ee48":"markdown","4a1ef86b":"markdown","febeb3b1":"markdown","7ccee92f":"markdown"},"source":{"cce4c7b2":"import pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(rc={'figure.figsize':(10,6)})\nsns.set(font_scale=1.3)\nplt.style.use('fivethirtyeight')\nimport plotly.graph_objects as go\nimport plotly.express as px\n\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV\n\nfrom sklearn.ensemble import GradientBoostingClassifier, AdaBoostClassifier, ExtraTreesClassifier\nfrom sklearn.ensemble import BaggingClassifier, RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier, ExtraTreeClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import ShuffleSplit, GridSearchCV, cross_validate\nfrom sklearn.metrics import accuracy_score, confusion_matrix\n\nfrom sklearn.metrics import accuracy_score\n\nimport warnings\nwarnings.filterwarnings('ignore')","ff1f2e23":"data = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","9710eee9":"data.head()","d4a43915":"data.info()","06b40219":"data_0 = data[(data['output'] == 0)]\ndata_1 = data[(data['output'] == 1)]","21b02647":"data_0[['age','trtbps','chol','thalachh','oldpeak']].describe().T","d8d63717":"ax = sns.countplot(data['output'])\nax.set_title('Count of Attack');\nax.set(xlabel='0 = Negative \/ 1 = Positive', ylabel='Count');","06e585c4":"columns = ['age','trtbps','chol','thalachh','oldpeak']\nlength = len(columns)\nplt.subplots(figsize=(18,10))\n\nfor i, j in zip(columns, range(length)):\n    plt.subplot((length\/2), 3, j+1)\n    plt.subplots_adjust(wspace=.3, hspace=.5)\n    sns.distplot(x=data_0[i])\n    sns.distplot(x=data_1[i])    \n    plt.title(i);        ","c4cc6886":"plt.subplots(figsize=(18,12))\nlength = len(columns)\n\nfor i, j in zip(columns, range(length)):\n    plt.subplot((length\/2), 3, j+1)\n    sns.boxplot(y=data[i])\n    plt.title(i)","e6c764c6":"plt.figure(figsize=(13,13))\nsns.heatmap(data.corr(), annot=True, cmap=plt.cm.Reds, cbar_kws={'shrink': .8}, square=True, fmt='.2f', \n            linewidths=.8);","06a0acac":"x = data.drop(columns=['output'])\ny = data['output']\n\nscaler = MinMaxScaler()\nx = scaler.fit_transform(x)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, stratify=y)","495d38d4":"colunas = ['Modelo','Acuracy']\nresultado = pd.DataFrame(columns=colunas)\n\nmodels = []\n\nmodels.append(('GradientBoostingClassifier', GradientBoostingClassifier()))\nmodels.append(('AdaBoostClassifier', AdaBoostClassifier()))\nmodels.append(('ExtraTreesClassifier', ExtraTreesClassifier()))\nmodels.append(('BaggingClassifier', BaggingClassifier()))\nmodels.append(('RandomForestClassifier', RandomForestClassifier()))\nmodels.append(('DecisionTreeClassifier', DecisionTreeClassifier()))\nmodels.append(('ExtraTreeClassifier', ExtraTreeClassifier()))\nmodels.append((\"XGBClassifier\", XGBClassifier()))\n\nfor name, model in models:\n    model.fit(x_train,y_train)\n    y_pred=model.predict(x_test)\n    acc = accuracy_score(y_test, y_pred)\n    resultado = resultado.append(pd.DataFrame([[name, acc]], columns=colunas))\n    \nresultado.sort_values(by=['Acuracy'], ascending=False, inplace=True)\nresultado","3cd3ee48":"# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:150%; text-align:center; border-radius: 15px 15px;\">Input<\/p>","4a1ef86b":"# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:150%; text-align:center; border-radius: 15px 15px;\">EDA<\/p>","febeb3b1":"# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:150%; text-align:center; border-radius: 15px 15px;\">Heart Attack<\/p>","7ccee92f":"# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:150%; text-align:center; border-radius: 15px 15px;\">Model<\/p>"}}