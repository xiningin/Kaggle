{"cell_type":{"9aa3c791":"code","5cd24b87":"code","790bf226":"code","80659e8f":"code","7082ab81":"code","4c94b6f4":"code","183393f2":"code","4af4ce32":"code","4e973d37":"code","2ffa5847":"code","3efc14ab":"code","b6e51015":"code","3cfb6c7d":"code","2efdaeb0":"code","8a9a7013":"code","e29b2158":"code","210c53f2":"code","ca33aed8":"code","925ea738":"code","f5124b22":"markdown","001f67c7":"markdown"},"source":{"9aa3c791":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.linear_model import LogisticRegression as LogReg\nfrom sklearn.preprocessing import LabelEncoder\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5cd24b87":"train = pd.read_csv(\"\/kaggle\/input\/widsdatathon2021\/TrainingWiDS2021.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/widsdatathon2021\/UnlabeledWiDS2021.csv\")","790bf226":"train = train.fillna(0)\ntest = test.fillna(0)","80659e8f":"train.dtypes","7082ab81":"cat_col = train.select_dtypes(include = [object]).columns.tolist()","4c94b6f4":"cat_col","183393f2":"train['ethnicity'].unique()","4af4ce32":"test['ethnicity'].unique()","4e973d37":"def label_encoding(train, test, columns):\n    for col in columns:\n        encoder = LabelEncoder()\n        encoder.fit(train[col].astype(str))\n        train[col] = encoder.transform(train[col].astype(str))\n        test[col] = encoder.transform(test[col].astype(str))\n    return train, test","2ffa5847":"train, test = label_encoding(train, test, cat_col)","3efc14ab":"train['ethnicity'].unique()","b6e51015":"target = train['diabetes_mellitus']\ntrain.drop(['diabetes_mellitus'], axis = 1, inplace=True)\ntrain.shape","3cfb6c7d":"x_train, x_val, y_train, y_val = train_test_split(train, target, train_size = 0.8, random_state=43)","2efdaeb0":"model = LogReg()\nmodel.fit(x_train, y_train)\nval_preds = model.predict_proba(x_val)","8a9a7013":"print(roc_auc_score(y_val, val_preds[:,1]))","e29b2158":"val_preds[:10]","210c53f2":"test_preds = model.predict_proba(test)\ntest_preds = test_preds[:,1]","ca33aed8":"test[\"diabetes_mellitus\"] = test_preds","925ea738":"test[['encounter_id','diabetes_mellitus']].to_csv('sub1.csv', index=False)","f5124b22":"cat_col = train.select_dtypes(include = [object]).columns.tolist()","001f67c7":" Check encoders!!!(label, one-hot)"}}