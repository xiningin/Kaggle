{"cell_type":{"b53c0810":"code","8023ad91":"code","75b0dec5":"code","97d7c792":"code","24320dd9":"code","c26d3a78":"code","1de64d99":"code","53243e84":"code","1e70e389":"code","af931986":"code","8fe9c9bf":"code","36e59065":"code","4ea9ec7f":"code","8eb0d9bc":"code","9afb644f":"code","6db55ee8":"code","8c7049fd":"code","bfc12326":"code","4b9c001a":"code","34b5b38a":"code","169ee4f0":"markdown","200f0382":"markdown"},"source":{"b53c0810":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom collections import Counter\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","8023ad91":"from subprocess import check_output     #to handle UTF-8 decode error\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))","75b0dec5":"median_household_income = pd.read_csv(\"..\/input\/MedianHouseholdIncome2015.csv\", encoding=\"windows-1252\")\npercent_people_below_poverty = pd.read_csv(\"..\/input\/PercentagePeopleBelowPovertyLevel.csv\", encoding=\"windows-1252\")\npercent_over_25 = pd.read_csv(\"..\/input\/PercentOver25CompletedHighSchool.csv\", encoding=\"windows-1252\")\npolice_killing = pd.read_csv(\"..\/input\/PoliceKillingsUS.csv\", encoding=\"windows-1252\")\nShare_raceby_city = pd.read_csv(\"..\/input\/ShareRaceByCity.csv\", encoding=\"windows-1252\")","97d7c792":"percent_people_below_poverty.head(10)","24320dd9":"area_list = list(percent_people_below_poverty['Geographic Area'].unique())","c26d3a78":"percent_people_below_poverty.isnull().sum(axis = 0)","1de64d99":"percent_people_below_poverty.poverty_rate.replace(['-'],0.0,inplace = True)\npercent_people_below_poverty.poverty_rate = percent_people_below_poverty.poverty_rate.astype(float)","53243e84":"df = percent_people_below_poverty.groupby(['Geographic Area']).mean()\ndf","1e70e389":"type(df)","af931986":"new_index = (df['poverty_rate'].sort_values(ascending = False)).index.values\nsorted_df = df.reindex(new_index)\nsorted_df['Geographic Area'] = sorted_df.index\nsorted_df","8fe9c9bf":"#visualization\nplt.figure(figsize = (12, 10))\nsns.barplot(x = sorted_df['Geographic Area'], y = sorted_df['poverty_rate'])\nplt.xticks(rotation = 45)\nplt.xlabel('States')\nplt.ylabel('Average Poverty Rate')\nplt.title('Average Poverty Rate of Each State')","36e59065":"kill = police_killing.copy()\nkill.head(10)","4ea9ec7f":"kill.age.value_counts().head()","8eb0d9bc":"#most common 15 Name or surname of people killed\nseperate = kill['name'].str.split()\na, b = zip(*seperate)\nname_list = a+ b\nname_count = Counter(name_list)\nmost_common_names = name_count.most_common(15)  \nx,y = zip(*most_common_names)\nx,y = list(x),list(y)","9afb644f":"plt.figure(figsize=(15,10))\nax= sns.barplot(x=x, y=y)\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name or Surname of killed people')","6db55ee8":"Share_raceby_city.head(10)","8c7049fd":"Share_raceby_city.replace(['-'],0.0,inplace = True)\nShare_raceby_city.replace(['(X)'],0.0,inplace = True)\nShare_raceby_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] =  Share_raceby_city.loc[:,['share_white','share_black','share_native_american',\n                                                                                                                                          'share_asian','share_hispanic']].astype(float)","bfc12326":"df2 = Share_raceby_city.groupby(['Geographic area']).mean()\ntype(df2)","4b9c001a":"df2['area_list'] = df2.index\ndf2.head(10)","34b5b38a":"f,ax = plt.subplots(figsize = (9,15))\nsns.barplot(x=df2.share_white,y=df2.area_list, color='green',alpha = 0.5,label='White' )\nsns.barplot(x=df2.share_black,y=df2.area_list,color='blue',alpha = 0.7,label='African American')\nsns.barplot(x=df2.share_native_american,y=df2.area_list,color='cyan',alpha = 0.6,label='Native American')\nsns.barplot(x=df2.share_asian,y=df2.area_list,color='yellow',alpha = 0.6,label='Asian')\nsns.barplot(x=df2.share_hispanic,y=df2.area_list,color='red',alpha = 0.6,label='Hispanic')\n\nax.legend(loc='lower right',frameon = True)     \nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races\")","169ee4f0":"## Bar plot","200f0382":"## Point Plot"}}