{"cell_type":{"2a6bfc3f":"code","0d7116f9":"code","ea284d0a":"code","66f87843":"code","40b198b3":"code","bcfa1d95":"code","8834f722":"code","c6a0aed1":"code","bf1bae94":"code","1e5655af":"code","5c67cb30":"code","6829f7e2":"code","9cb86e5d":"code","add2080f":"code","bf545de9":"code","3d28b126":"code","7980c3b2":"code","4a8defae":"code","c3fefaf2":"code","9307b8f3":"code","42aebae9":"code","9df3dd94":"code","7f3b053d":"code","8a6edb85":"markdown","a843d7b8":"markdown"},"source":{"2a6bfc3f":"import numpy as np\nimport pandas as pd\n\nmydata=pd.read_csv(\"..\/input\/titanic_train.csv\")\n\n# Any results you write to the current directory are saved as output.","0d7116f9":"#top 5 will be reflects and use .tail to lower data and .loc with index numbers for consideration.(basics)\nmydata.head()","ea284d0a":"#info gives the missing values in our data\nmydata.info()","66f87843":"#if required to know the True values\nmydata.isnull()","40b198b3":"import matplotlib.pyplot as plt\nimport seaborn as sb\n\n#null values present in our data using data visuals\nsb.heatmap(mydata.isnull())","bcfa1d95":"#percentage of persons survived in disaster\nsb.countplot(x='Survived',data=mydata)","8834f722":"#defining in sex\nsb.countplot(x='Survived',hue='Sex',data=mydata)","c6a0aed1":"#classifying in Pclass(L,M,H)\nsb.countplot(x='Survived',hue='Pclass',data=mydata)","bf1bae94":"#defining pclass on reference with age for suvival.\nplt.figure(figsize=(12,7))\nsb.boxplot(x='Pclass',y='Age',data=mydata,palette='autumn')","1e5655af":"#imputing age on null values\ndef impute_age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass==1:\n            return 37\n        elif Pclass==2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","5c67cb30":"mydata['Age']=mydata[['Age','Pclass']].apply(impute_age,axis=1)","6829f7e2":"#age null values filled using decision making\nsb.heatmap(mydata.isnull())","9cb86e5d":"#dropping cabin \nmydata.drop('Cabin',axis=1,inplace=True)","add2080f":"mydata.info()","bf545de9":"#Dropping variables which is not required for study\nsex=pd.get_dummies(mydata['Sex'],drop_first=True)\nembark=pd.get_dummies(mydata['Embarked'],drop_first=True)","3d28b126":"mydata.drop(['PassengerId','Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","7980c3b2":"#concantenate to remove the dummies\nmydata=pd.concat([mydata,sex,embark],axis=1)","4a8defae":"mydata.head()","c3fefaf2":"#train_test to prediction\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(mydata.drop('Survived',axis=1),mydata['Survived'],test_size=0.20,random_state=101)","9307b8f3":"from sklearn.linear_model import LogisticRegression\nlogmodel=LogisticRegression(solver='liblinear')\nlogmodel.fit(x_train,y_train)\npredictions=logmodel.predict(x_test)\nprint(predictions[5])\ny_test.head(5)\n#package warning","42aebae9":"logmodel.fit(x_train,y_train)","9df3dd94":"logmodel.score(x_test,y_test)","7f3b053d":"predictions","8a6edb85":"# Logistic Regression on Dependent(Survived) Titanic Dataset","a843d7b8":"# END"}}