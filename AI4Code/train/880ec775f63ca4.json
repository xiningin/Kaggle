{"cell_type":{"963b0b57":"code","c8888011":"code","04491596":"code","98517fcc":"code","2b9b12c6":"code","28c556ed":"code","1749faaa":"code","f7bed4bb":"code","744d7df8":"markdown"},"source":{"963b0b57":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","c8888011":"corpus = \"\"\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        if filename[-3:] == 'txt':\n            file = open(dirname+'\/'+filename, \"r\")\n            corpus = corpus + file.read() \n            file.close()","04491596":"from wordcloud import WordCloud, STOPWORDS\nfrom PIL import Image\nimport matplotlib.pyplot as plt\n\na = np.array(Image.open('..\/input\/trumpmmm\/trump-fail-004.jpg'))\n\n#wordcloud = WordCloud(stopwords=STOPWORDS, mask =  ).generate(corpus)\nwordcloud = WordCloud(stopwords=STOPWORDS, mask=a).generate(corpus)\n\nplt.subplots(figsize=(100,100))\nplt.clf()\nplt.title('All speeches')\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","98517fcc":"from wordcloud import WordCloud, STOPWORDS\nfrom PIL import Image\nimport matplotlib.pyplot as plt\n\na = np.array(Image.open('..\/input\/usamap\/USA-States-Color-Map.jpg'))\n\n#wordcloud = WordCloud(stopwords=STOPWORDS, mask =  ).generate(corpus)\nwordcloud = WordCloud(stopwords=STOPWORDS, mask=a).generate(corpus)\n\nplt.subplots(figsize=(100,100))\nplt.clf()\nplt.title('All speeches')\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","2b9b12c6":"file_content = []\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        if filename[-3:] == 'txt':\n            file = open(dirname+'\/'+filename, \"r\")\n            file_content.append(file.read())\n        \n            file.close()\n        \nfile_names = []\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        if filename[-3:] == 'txt':\n            file_names.append(os.path.join(filename))\n        \nres = {file_names[i]: file_content[i] for i in range(len(file_names))}\ndf = pd.DataFrame.from_records([res]).T\ndf","28c556ed":"for i in range(0,35):\n    wordcloud = WordCloud(stopwords=STOPWORDS).generate(df.iloc[i,0])\n\n    plt.subplots(figsize=(15,15))\n    plt.clf()\n    plt.title(df.index[i])\n    plt.imshow(wordcloud)\n    plt.axis('off')\n    plt.show()","1749faaa":"import nltk\ntokens = nltk.word_tokenize(corpus)\ntagged = nltk.pos_tag(tokens)\n\ntags = []\n\nfor i in range (len(tagged)):\n    if tagged[i][1][0] == 'N':\n        tags.append(tagged[i][0])\n    \nstr_tags = ' '.join([str(elem) for elem in tags])\n\nwordcloud = WordCloud(stopwords=STOPWORDS, mask=a).generate(str_tags)\n\nplt.subplots(figsize=(100,100))\nplt.clf()\nplt.title('Most Nouns used')\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","f7bed4bb":"import nltk\ntokens = nltk.word_tokenize(corpus)\ntagged = nltk.pos_tag(tokens)\n\ntags = []\n\nfor i in range (len(tagged)):\n    if tagged[i][1][0] == 'V':\n        tags.append(tagged[i][0])\n    \nstr_tags = ' '.join([str(elem) for elem in tags])\n\nwordcloud = WordCloud(stopwords=STOPWORDS, mask=a).generate(str_tags)\n\nplt.subplots(figsize=(100,100))\nplt.clf()\nplt.title('Most Verbs used')\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","744d7df8":"# Some TODOs\n\n1. Creating a csv of count of words in each speech.\n2. Some world clouds visualising the above.\n3. Transform word cloud to shape of maps?"}}