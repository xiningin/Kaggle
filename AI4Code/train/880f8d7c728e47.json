{"cell_type":{"7510bf5c":"code","0a0a8f16":"code","7d5208e8":"code","c4240d25":"code","c5597e62":"code","241c84c1":"code","a4a73485":"code","be9acd0d":"code","12c09c8c":"code","13959dba":"code","63b60dab":"code","9937c333":"code","118e939b":"code","e5ed5676":"markdown","84a24ab9":"markdown","7cb44275":"markdown","2a8ee83b":"markdown","bb8ae850":"markdown","0cd0c814":"markdown","f6317186":"markdown","082e0158":"markdown"},"source":{"7510bf5c":"import pandas as pd \nimport numpy as np\nfrom matplotlib import pyplot\nfrom sklearn.linear_model import LinearRegression\nimport matplotlib.pyplot as plt","0a0a8f16":"sd_test=pd.read_csv(\"..\/input\/sale_data_train.csv\")\nsd_test.head()","7d5208e8":"sd_test.dtypes","c4240d25":"import datetime as dt\nsd_test['InvoiceDate'] = pd.to_datetime(sd_test['InvoiceDate'])\nsd_test['InvoiceDate']=sd_test['InvoiceDate'].map(dt.datetime.toordinal)\nsd_test.head(2)","c5597e62":"sd_test.dtypes","241c84c1":"sd_test.info()","a4a73485":"x=sd_test['InvoiceDate'] #independent variable \ny=sd_test['TotalSales'] #dependent variable \nx_matrix=x.values#without reshaping you will get error\nx_matrix.shape\nx_matrix=x.values.reshape(-1,1) #Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.","be9acd0d":"reg=LinearRegression()\nreg.fit(x_matrix,y)\nreg.score(x_matrix,y)","12c09c8c":"sd_test.plot()\nplt.show()\n","13959dba":"plt.scatter(x_matrix, y, color = 'red')","63b60dab":"import numpy as np\ntest_X = np.array(719163).reshape(-1, 1) #test our model with a sample data(date must be converted into ordinal form because our model recognize that form)\nreg.predict(test_X)","9937c333":"sd_predict=pd.read_csv(\"..\/input\/sample_submission.csv\")\nsd_predict['InvoiceDate'] = pd.to_datetime(sd_predict['InvoiceDate'])\nsd_predict['InvoiceDate']=sd_predict['InvoiceDate'].map(dt.datetime.toordinal)\nx=sd_predict['InvoiceDate']\nx_predict=x.values.reshape(-1,1)\nsubmit=pd.read_csv(\"..\/input\/sample_submission.csv\")\nsubmit.head()","118e939b":"submit['TotalSales']=reg.predict(x_predict)\nexport_csv = submit.to_csv(r'export_dataframe.csv', index = None, header=True) #choose your directory where you want to save that .csv file ","e5ed5676":"# Create .CSV file for submission","84a24ab9":"## Simple Linear regression\n# Import libraries","7cb44275":"# Load test data","2a8ee83b":"# Test for regression","bb8ae850":"# Create the regression\n# Declare dependent and independent variables","0cd0c814":"# Regression part","f6317186":"The InvoiceDate column is object type which isn't preferable for regression. Oneway to convert it numerical type is:","082e0158":"# Load data"}}