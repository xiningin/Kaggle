{"cell_type":{"1da99d30":"code","05c9014b":"code","69d4a40c":"code","ec32c2f0":"code","8e4d883d":"code","efc3d96e":"code","417e9732":"code","bc6203cc":"code","5f47d02a":"code","01367ff4":"code","34712a06":"code","cde4ff99":"code","db235dda":"code","45cd4d03":"code","75b33975":"code","f8a2c279":"code","cdc09be9":"code","79e1d4f6":"code","009aa6b6":"code","0a671631":"code","f7ad5b29":"code","d3f2e615":"code","bde17cf2":"code","69d86652":"code","a1b86099":"code","4ffc95d9":"code","93db598e":"code","f30f6288":"markdown"},"source":{"1da99d30":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","05c9014b":"import os\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import classification_report\n\nimport warnings\nwarnings.filterwarnings('ignore')","69d4a40c":"print(os.listdir(\"..\/input\/\"))","ec32c2f0":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\nprint(\"Training data shape:\",train.shape)\ntrain.head()","8e4d883d":"test = pd.read_csv('..\/input\/titanic\/test.csv')\nprint(\"Testing data shape:\",test.shape)\ntest.head()","efc3d96e":"train[\"Survived\"].value_counts()","417e9732":"sns.countplot(x='Survived',data=train)","bc6203cc":"sns.countplot(x='Survived' , hue = 'Sex' , data =train)","5f47d02a":"sns.countplot(x='Survived',hue='Pclass',data=train)","01367ff4":"sns.boxplot(x='Pclass',y='Age',data=train)","34712a06":"print(\"Null in Training set\")\nprint(\"---------------------\")\nprint(train.isnull().sum())\nprint(\"---------------------\")\nprint(\"Null in Testing set\")\nprint(\"---------------------\")\nprint(test.isnull().sum())","cde4ff99":"def add_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    if pd.isnull(Age):\n        return int(train[train[\"Pclass\"] == Pclass][\"Age\"].mean())\n    else:\n        return Age\n        ","db235dda":"train['Age'] = train[['Age','Pclass']].apply(add_age,axis=1)\ntest['Age'] = test[['Age','Pclass']].apply(add_age,axis=1)","45cd4d03":"train.drop(\"Cabin\",inplace=True,axis=1)\ntest.drop(\"Cabin\",inplace=True,axis=1)","75b33975":"train['Embarked'].fillna(train['Embarked'].mode()[0],inplace=True)\ntest['Embarked'].fillna(test['Embarked'].mode()[0],inplace=True)","f8a2c279":"test['Fare'].fillna(test['Fare'].mean(),inplace=True)","cdc09be9":"def combine(df,col1,col2):\n    df[\"Family\"] = df[col1]+df[col2]\n    df.drop([col1,col2],inplace=True,axis=1)\n    return df\n\ntrain = combine(train,'SibSp','Parch')\ntest = combine(test,'SibSp','Parch')","79e1d4f6":"def process_age(df,cut_points,label_names):\n    df[\"Age\"] = df[\"Age\"].fillna(-0.5)\n    df[\"Age_categories\"] = pd.cut(df[\"Age\"],cut_points,labels=label_names)\n    return df\n\ncut_points = [-1,0,5,12,18,35,60,100]\nlabel_names = [\"Missing\",\"Infant\",\"Child\",\"Teenager\",\"Young Adult\",\"Adult\",\"Senior\"]\ntrain = process_age(train,cut_points,label_names)\ntest = process_age(test,cut_points,label_names)\n\npivot = train.pivot_table(index=\"Age_categories\",values='Survived')\npivot.plot.bar()","009aa6b6":"def create_dummies(df,column_name):\n    dummies = pd.get_dummies(df[column_name],prefix=column_name)\n    df = pd.concat([df,dummies],axis=1)\n    return df\n\nfor column in [\"Pclass\",\"Sex\",\"Age_categories\",'Embarked']:\n    train = create_dummies(train,column)\n    test = create_dummies(test,column)","0a671631":"train.drop(['Name','Sex','Ticket','Pclass','Age_categories','Embarked'],inplace=True,axis=1)\ntest.drop(['Name','Sex','Ticket','Pclass','Age_categories','Embarked'],inplace=True,axis=1)","f7ad5b29":"lr = LogisticRegression()\ncolumns = ['PassengerId', 'Age', 'Fare','Family',\n       'Pclass_1', 'Pclass_2', 'Pclass_3', 'Sex_female', 'Sex_male',\n       'Age_categories_Missing', 'Age_categories_Infant',\n       'Age_categories_Child', 'Age_categories_Teenager',\n       'Age_categories_Young Adult', 'Age_categories_Adult',\n       'Age_categories_Senior']\n\nlr.fit(train[columns], train[\"Survived\"])","d3f2e615":"X = train[columns]\ny = train['Survived']\n\ntrain_X, val_X, train_y, val_y = train_test_split(\n    X, y, test_size=0.20,random_state=0)","bde17cf2":"lr = LogisticRegression()\nlr.fit(train_X, train_y)\npredictions = lr.predict(val_X)\naccuracy = accuracy_score(val_y, predictions)\nprint(accuracy)\nfrom sklearn.metrics import classification_report\nprint(classification_report(val_y,predictions))","69d86652":"lr = LogisticRegression()\nscores = cross_val_score(lr, X, y, cv=10)\nscores.sort()\naccuracy = scores.mean()\n\nprint(scores)\nprint(accuracy)","a1b86099":"lr = LogisticRegression()\nlr.fit(X,y)\npredictions_test = lr.predict(test[columns])","4ffc95d9":"submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nsubmission_df = pd.DataFrame({'PassengerId' : test['PassengerId'],\n                              'Survived':predictions_test})\nsubmission_df.head()","93db598e":"submission_df.to_csv(\"submission.csv\",index=False)","f30f6288":"# Read in the data"}}