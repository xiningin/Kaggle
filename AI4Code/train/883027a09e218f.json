{"cell_type":{"a6fb3f9e":"code","e8e08ae0":"code","dfcd7e55":"code","9e1cb67a":"code","2bd7311a":"markdown","eb1cd348":"markdown"},"source":{"a6fb3f9e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport matplotlib.pylab as plt # Plotting\nimport sklearn # Machine learning models.\nfrom sklearn.naive_bayes import GaussianNB # Gaussian Naive Bayes.\nimport sklearn.metrics # Area Under the ROC calculations.\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\ndata = np.loadtxt('\/kaggle\/input\/higgs\/train.csv', skiprows=1, delimiter=',')\n\n# Any results you write to the current directory are saved as output.","e8e08ae0":"# Split off validation set for testing.\nXtrain = data[:40000, 1:]\nYtrain = data[:40000, 0:1]\nXvalid = data[40000:, 1:]\nYvalid = data[40000:, 0:1]","dfcd7e55":"# Fit model to train.\nmodel = GaussianNB()\nmodel.fit(Xtrain, Ytrain)\n\n# Make hard predictions.\nhard_predictions = model.predict(Xvalid)\n\n# Make probabilistic predictions.\npredictions = model.predict_proba(Xvalid)\n\n# Compute AUROC.\nval = sklearn.metrics.roc_auc_score(Yvalid, predictions[:,1])\nprint(f'Validation AUROC: {val}' )\n\n# Plot ROC curve.\nfpr, tpr, thresholds = sklearn.metrics.roc_curve(Yvalid, predictions[:,1])\nplt.plot(fpr, tpr)\nplt.plot([0, 1], [0, 1], color='navy', linestyle='--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')","9e1cb67a":"# Make probabilistic predictions.\nXtest1 = np.loadtxt('\/kaggle\/input\/higgs\/test.csv', skiprows=1, delimiter=',')\npredictions = model.predict_proba(Xtest1)\npredictions = predictions[:,1:2] # Probability that label=1\nN = predictions.shape[0]\nassert N == 50000, \"Predictions should have lenght 50000.\"\nsubmission = np.hstack((np.arange(N).reshape(-1,1), predictions)) # Add Id column.\nnp.savetxt(fname='submission.csv', X=submission, header='Id,Predicted', delimiter=',', comments='')\n\n# Submission can be downloaded from this Kaggle Notebook under Sessions->Data->output->\/kaggle\/working.","2bd7311a":"# Make Predictions on Test Set","eb1cd348":"# Train and Assess Model"}}