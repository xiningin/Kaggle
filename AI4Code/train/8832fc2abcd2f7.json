{"cell_type":{"abba0f41":"code","149a6790":"code","fa1cdb3a":"code","f31ca5fe":"code","ea8f937a":"code","9baf0a2b":"code","5c3192a4":"code","e38e9756":"code","82166cda":"code","2c7ff93c":"code","7d408424":"code","cc5a8c48":"code","39f029f0":"code","857e1823":"code","3fcedece":"markdown"},"source":{"abba0f41":"# Import packages and setup the data directory\nimport os, math, itertools, matplotlib\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\nimport matplotlib.pylab as pylab\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","149a6790":"# Setting up the plots font size and figure dpi\nplt.rcParams.update({'font.size': 7})\ndpi_set = 1200\n\n# Read the file into pandas dataframe\nmain_path = '\/kaggle\/input\/chocolate-bar-ratings'\nmain_data = pd.read_csv(main_path+\"\/\/flavors_of_cacao.csv\")\n\n# Cleaning the data\nmain_data.columns = main_data.columns.str.replace('\\n', ' ').str.replace('\\xa0', '')\n\nemptyval = main_data['Bean Type'].values[0]\ndef empty_to_nan(feature):\n    if feature == emptyval:\n        return np.nan\n    else:\n        return feature\n\nfor onecol in main_data.columns:\n    if main_data[onecol].dtype == 'O':\n        main_data[onecol] = main_data[onecol].apply(lambda element: empty_to_nan(element))\n\n# Converting rating and cocoa percentage strings to numbers\nmain_data['Cocoa Percent'] = main_data['Cocoa Percent'].apply(lambda row: row[:-1]).astype('float')\n\nprint(main_data.head(5))","fa1cdb3a":"# List of all columns \nfeatures_list = list(main_data.columns)\nprint(features_list)","f31ca5fe":"#### Plot Ratings\nplot_df = main_data['Rating'].value_counts(normalize=True, sort=True, ascending=False, bins=None, dropna=False)*100\nplot_df_data = list(plot_df)\nplot_df_uniques = list(plot_df.keys())\nplt.figure(dpi=dpi_set,figsize=(4,3))\nplt.xlabel('Ratings')\nplt.ylabel('Percent [%]')\nplt.bar(plot_df_uniques,height=plot_df_data, width=0.17,linewidth=0,edgecolor='w')\nplt.grid(b=True, which='major', axis='both', linestyle=':', linewidth=0.5, alpha=1)\nplt.show()\n","ea8f937a":"#### Plot Review Date\nplot_df = main_data['Review Date'].value_counts(normalize=True, sort=True, ascending=False, bins=None, dropna=False)*100\nplot_df_data = list(plot_df)\nplot_df_uniques = list(plot_df.keys())\nplt.figure(dpi=dpi_set,figsize=(4,3))\nplt.xlabel('Review Date')\nplt.ylabel('Percent [%]')\nplt.bar(plot_df_uniques,height=plot_df_data, width=0.3,linewidth=0,edgecolor='w')\nplt.grid(b=True, which='major', axis='both', linestyle=':', linewidth=0.5, alpha=1)\nplt.show()\n","9baf0a2b":"#### Plot REF\nplot_df = main_data['REF'].value_counts(normalize=True, sort=True, ascending=False, bins=None, dropna=False)*100\nplot_df_data = list(plot_df)\nplot_df_uniques = list(plot_df.keys())\nplt.figure(dpi=dpi_set,figsize=(4,3))\nplt.xlabel('Batch Reference No.')\nplt.ylabel('Percent [%]')\nplt.scatter(plot_df_uniques,plot_df_data, s=5)\nplt.grid(b=True, which='major', axis='both', linestyle=':', linewidth=0.5, alpha=1)\nplt.show()\n","5c3192a4":"#### Plot Cocoa Percent\nplot_df = main_data['Cocoa Percent'].value_counts(normalize=True, sort=True, ascending=False, bins=None, dropna=False)*100\nplot_df_data = list(plot_df)\nplot_df_uniques = list(plot_df.keys())\nplt.figure(dpi=dpi_set,figsize=(4,3))\nplt.xticks(rotation=90)\nplt.xlabel('Cocoa Percent [%]')\nplt.ylabel('Percent [%]')\nplt.scatter(plot_df_uniques,plot_df_data, s=7)\nplt.grid(b=True, which='major', axis='both', linestyle=':', linewidth=0.5, alpha=1)\nplt.show()\n","e38e9756":"#### Plot Bean Type\nplot_df = main_data['Bean Type'].fillna(value='Unavailable', method=None, axis=None, inplace=False, limit=None, downcast=None) \nplot_df = plot_df.value_counts(normalize=True, sort=True, ascending=False, bins=None, dropna=False)*100\nplot_df_data = list(plot_df)\nplot_df_uniques = list(plot_df.keys())\nplt.figure(dpi=dpi_set,figsize=(7.875,3.375))\nplt.xticks(rotation=90)\nplt.xlabel('Bean Type')\nplt.ylabel('Percent [%]')\nplt.scatter(plot_df_uniques,plot_df_data, s=8)\nplt.grid(b=True, which='major', axis='both', linestyle=':', linewidth=0.5, alpha=1)\nplt.show()\n","82166cda":"#### Plot Company Location\nplot_df = main_data['Company Location'].fillna(value='Unavailable', method=None, axis=None, inplace=False, limit=None, downcast=None) \nplot_df = plot_df.value_counts(normalize=True, sort=True, ascending=False, bins=None, dropna=False)*100\nplot_df_data = list(plot_df)\nplot_df_uniques = list(plot_df.keys())\nplt.figure(dpi=dpi_set,figsize=(7.875,3.375))\nplt.xticks(rotation=90)\nplt.xlabel('Company Location')\nplt.ylabel('Percent [%]')\nplt.scatter(plot_df_uniques,plot_df_data, s=10)\nplt.grid(b=True, which='major', axis='both', linestyle=':', linewidth=0.5, alpha=1)\nplt.show()\n","2c7ff93c":"#### Plot Broad Bean Origin\nplot_df = main_data['Broad Bean Origin'].fillna(value='Unavailable', method=None, axis=None, inplace=False, limit=None, downcast=None) \nplot_df = plot_df.value_counts(normalize=True, sort=True, ascending=False, bins=None, dropna=False)*100\nplot_df_data = list(plot_df)\nplot_df_uniques = list(plot_df.keys())\nplt.figure(dpi=dpi_set,figsize=(11.875,3.375))\nplt.xticks(rotation=90)\nplt.xlabel('Broad Bean Origin')\nplt.ylabel('Percent [%]')\nplt.scatter(plot_df_uniques,plot_df_data, s=10)\nplt.grid(b=True, which='major', axis='both', linestyle=':', linewidth=0.5, alpha=1)\nplt.show()\n","7d408424":"#### Plot Specific Bean Origin or Bar Name\nplot_df = main_data['Specific Bean Origin or Bar Name'].fillna(value='Unavailable', method=None, axis=None, inplace=False, limit=None, downcast=None) \nplot_df = plot_df.value_counts(normalize=True, sort=True, ascending=False, bins=None, dropna=False)*100\nplot_df_data = list(plot_df)\nplot_df_uniques = list(plot_df.keys())\nplt.figure(dpi=dpi_set,figsize=(7.875,3.375))\nplt.xticks(rotation=90)\nplt.xlabel('Specific Bean Origin or Bar Name')\nplt.ylabel('Percent [%]')\nplt.scatter(plot_df_uniques,plot_df_data, s=7)\nplt.grid(b=True, which='major', axis='both', linestyle=':', linewidth=0.5, alpha=1)\nplt.show()\n","cc5a8c48":"#### Plot Company (Maker-if known)\nplot_df = main_data['Company (Maker-if known)'].fillna(value='Unavailable', method=None, axis=None, inplace=False, limit=None, downcast=None) \nplot_df = plot_df.value_counts(normalize=True, sort=True, ascending=False, bins=None, dropna=False)*100\nplot_df_data = list(plot_df)\nplot_df_uniques = list(plot_df.keys())\nplt.figure(dpi=dpi_set,figsize=(7.875,3.375))\nplt.xticks(rotation=90)\nplt.xlabel('Company')\nplt.ylabel('Percent [%]')\nplt.scatter(plot_df_uniques,plot_df_data, s=5)\nplt.grid(b=True, which='major', axis='both', linestyle=':', linewidth=0.5, alpha=1)\nplt.show()\n","39f029f0":"# set marker size based on the cocoa percent of a chocolate\nmarkerprop = {'s': .1*main_data['Cocoa Percent']**1.7, 'alpha': .2, 'color': 'navy'}\n\n# scatterplot\nax = sns.lmplot(x='Company Location', y='Rating', data=main_data, scatter_kws=markerprop, fit_reg=False, legend=True, aspect=2.5)\n\n# add averaged rating\nmain_data_copy = main_data.copy().groupby(['Company Location'])['Rating'].mean()\nplt.plot(main_data_copy, color='r', marker='o', alpha=.8, lw=3, label='Averaged Rating')\n\n# # graph properties\nax.set_xticklabels(rotation=90)\nplt.title('Rating vs. Company Location', fontsize=20)\nplt.xlabel('Company Location', fontsize=15)\nplt.ylabel('Rating', fontsize=15)\nplt.margins(.03)\nplt.show()","857e1823":"print(\"\\nDone!!!\\n\")","3fcedece":"### Questions and Answers:\n* Where are the best cocoa beans grown?\n\nBest cocoa beans ratings are 4.0, and these beans are grown at various locations such as Dominican Republic, Madagascar, Guatemala, Peru, PNG, Venezuela, Bolivia, Java.\n\n* Which countries produce the highest-rated bars?\n\nOn average, Chile is the country producing highest rated bars among all the countries in this dataset.\n\n* What\u2019s the relationship between cocoa solids percentage and rating?\n\nIntuitively, we expect that the higher cocoa percentage implies higher ratings, but taking into account the subjective experience while rating the bars, as well as the texture, quality, soft and velvetiness, residue, melting effect, smell etc. all contribute to the rating. Thus, there's a low correlation between cocoa percentage and bar ratings."}}