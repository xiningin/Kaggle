{"cell_type":{"8da68a8b":"code","2817590b":"code","c081a1d2":"code","8381ca3a":"code","0eb4389b":"code","2449c0e0":"code","38ed7102":"code","a3dccc28":"code","a2186087":"code","e30f3149":"code","2b970005":"code","e95699da":"code","fdd2270c":"code","e793ceb6":"code","4036c95a":"code","a256e6bb":"code","cfb91ad9":"code","8580b029":"code","cd935212":"code","cace11dd":"markdown","5e7081b9":"markdown","f5b5ac28":"markdown","fc3878d6":"markdown","2f7280b0":"markdown","ff763df0":"markdown","0424f702":"markdown","97f98961":"markdown"},"source":{"8da68a8b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom plotly.offline import init_notebook_mode,iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nfrom plotly.tools import FigureFactory as ff\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud,STOPWORDS\nimport seaborn as sns\nfrom PIL import Image\nimport os\nprint(os.listdir(\"..\/input\"))\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# Any results you write to the current directory are saved as output.\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2817590b":"#firstly read dates\ndata=pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\")\n","c081a1d2":"data.info()","8381ca3a":"df=data.head(20)\ndf2=data.head(100)","0eb4389b":"df.head()","2449c0e0":"Platform=data[\"Platform\"]\nplt.figure(figsize=(10,10))\nsns.barplot(Platform.unique(),Platform.value_counts())\nplt.xlabel(\"Total\")\nplt.xticks(rotation=90)\nplt.ylabel(\"Platform\")\nplt.show()","38ed7102":"Platform=df[\"Platform\"]\nplt.figure(figsize=(8,6))\nsns.barplot(Platform.value_counts(),Platform.unique())\nplt.xlabel(\"Platform\")\nplt.ylabel(\"Total No. of games\")\nplt.show()","a3dccc28":"trace = go.Histogram(x=df2.Publisher,marker=dict(color=\"lime\",line=dict(color='red', width=2)),opacity=0.75)\ndata=[trace]\n\n\n\nlayout = go.Layout(\n    title='Numbers of Top 100 Video Games Publishers',\n    xaxis=dict(\n        title='Publishers'\n    ),\n    yaxis=dict(\n        title='Count'\n    ),\n     paper_bgcolor='rgb(204, 204, 204)',\n    plot_bgcolor=\"rgb(204, 204, 204)\")\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","a2186087":"trace1 = go.Scatter(\n                    x = df.Rank,\n                    y = df.NA_Sales,\n                    mode = \"lines\",\n                    name = \"North America\",\n                    marker = dict(color = 'rgba(28, 149, 249, 0.8)',size=8),\n                    text= df.Name)\n\ntrace2 = go.Scatter(\n                    x = df.Rank,\n                    y = df.EU_Sales,\n                    mode = \"lines+markers\",\n                    name = \"Europe\",\n                    marker = dict(color = 'rgba(249, 94, 28, 0.8)',size=8),\n                    text= df.Name)\ntrace3 = go.Scatter(\n                    x = df.Rank,\n                    y = df.JP_Sales,\n                    mode = \"markers+lines\",\n                    name = \"Japan\",\n                    marker = dict(color = 'rgba(150, 26, 80, 0.8)',size=8),\n                    text= df.Name)\ntrace4 = go.Scatter(\n                    x = df.Rank,\n                    y = df.Other_Sales,\n                    mode = \"lines\",\n                    name = \"Other\",\n                    marker = dict(color = 'lime',size=8),\n                    text= df.Name)\n                    \n\ndata = [trace1, trace2,trace3,trace4]\nlayout = dict(title = 'North America, Europe, Japan and Other Sales of Top 100 Video Games',\n              xaxis= dict(title= 'Rank',ticklen= 5,zeroline= False,zerolinewidth=1,gridcolor=\"white\"),\n              yaxis= dict(title= 'Sales(In Millions)',ticklen= 5,zeroline= False,zerolinewidth=1,gridcolor=\"white\",),\n              paper_bgcolor='rgb(243, 243, 243)',\n              plot_bgcolor='rgb(243, 243, 243)' )\nfig = dict(data = data, layout = layout)\niplot(fig)","e30f3149":"g = sns.jointplot(df.Other_Sales, df.JP_Sales, kind=\"kde\", size=7)\nplt.savefig('graph.png')\nplt.show()","2b970005":"g = sns.jointplot(\"Other_Sales\", \"JP_Sales\", data=df,size=5, ratio=3, color=\"r\")","e95699da":" len(df2.Platform.value_counts())","fdd2270c":"labels = df2.Platform.value_counts().index\ncolors = ['grey','blue','red','yellow','green','brown','lime','cyan','orange','white','black','pink','darkblue','purple','grey','lightGreen','darkgreen']\nexplode = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\nsizes = df2.Platform.value_counts().values\n\n# visual\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.2f%%')\nplt.title('TOTAL PLATFORM RAT\u0130O',color = 'red',fontsize = 15)\nplt.show()","e793ceb6":"sns.lmplot(x=\"NA_Sales\", y=\"EU_Sales\", data=df2)\nplt.show()","4036c95a":"plt.figure(figsize=(12,12))\nsns.heatmap(df.corr(),annot=True,cmap='RdBu_r')\n","a256e6bb":"df2","cfb91ad9":"plt.figure(figsize = (15,8))\nsns.countplot(df2.Publisher)\nplt.title(\"Publisher\",color = 'blue',fontsize=18)\nplt.xticks(rotation=90)","8580b029":"df2","cd935212":"df2.describe()","cace11dd":"<a id=\"2\"><\/a> \n## Point Plot","5e7081b9":"<br>\n<br>\nPLOT CONTENTS:\n* [Bar Plot](#1)\n* [Point Plot](#2)\n* [Joint Plot](#3)\n* [Pie Chart](#4)\n* [Lm Plot](#5)\n* [Heatmap](#6)\n* [Count Plot](#7)","f5b5ac28":"<a id=\"1\"><\/a> \n## Bar Plot","fc3878d6":"<a id=\"5\"><\/a> \n## Lm Plot","2f7280b0":"<a id=\"4\"><\/a> \n## Pie Plot","ff763df0":"<a id=\"6\"><\/a> \n## Heat Map\n","0424f702":"<a id=\"7\"><\/a> \n## Count Plot","97f98961":"<a id=\"3\"><\/a> \n## Joint Plot"}}