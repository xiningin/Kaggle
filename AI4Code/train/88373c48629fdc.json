{"cell_type":{"3e3c9ca5":"code","cc7851ce":"code","6963a87f":"code","63616fa8":"code","6439744a":"code","395895d6":"code","3d76f9c2":"code","ed7f596d":"code","9b629c0c":"code","73b4df77":"code","ab1ea622":"code","51989bf3":"code","c7edd6e8":"code","0a7b9113":"code","4570da88":"code","6087c1d6":"code","ce9d90be":"code","6eed54f6":"code","af228212":"code","1259866b":"code","8199db59":"code","b2762422":"code","2c1fcb5f":"code","bafbfd24":"markdown","184175e6":"markdown","8737fd9d":"markdown","8c2e7079":"markdown","04bfd5fc":"markdown","31073f11":"markdown","bd233b64":"markdown","4382e997":"markdown","96876b6e":"markdown","58efca0c":"markdown"},"source":{"3e3c9ca5":"import os\nimport numpy as np\npath = '\/kaggle\/input\/utkface-new\/UTKFace'\nos.chdir(path)\nimages = os.listdir()","cc7851ce":"print('No. of Images : '+str(len(images)))","6963a87f":"!pip install git+https:\/\/github.com\/Soongja\/basic-image-eda","63616fa8":"from basic_image_eda import BasicImageEDA\n\nextensions = ['jpg']\nthreads = 0\ndimension_plot = True\nchannel_hist = True\nnonzero = False\nhw_division_factor = 1.0\n\nBasicImageEDA.explore(path, extensions, threads, dimension_plot, \n                      channel_hist, nonzero, hw_division_factor)","6439744a":"from PIL.ImageStat import Stat\nfrom PIL import ImageStat\nfrom PIL import Image\n\n#Converting Images to PIL images\nIMAGES = []\nfor img in images:\n  im = Image.open(img)\n  IMAGES.append(im)","395895d6":"type(IMAGES[0]),len(IMAGES)","3d76f9c2":"def print_stats(img):\n    \"\"\" prints stats, remember that img should already have been opened \"\"\"\n    stat = Stat(img)\n    print(\"extrema    : \", stat.extrema)\n    print(\"count      : \", stat.count)\n    print(\"sum        : \", stat.sum)\n    print(\"sum2       : \", stat.sum2)\n    print(\"mean       : \", stat.mean)\n    print(\"median     : \", stat.median)\n    print(\"rms        : \", stat.rms)\n    print(\"var        : \", stat.var)\n    print(\"stddev     : \", stat.stddev)","ed7f596d":"print_stats(IMAGES[0]) #Stats for first Image","9b629c0c":"import math\n\ndef brightness(im):\n    \"\"\" Computes brightness \"\"\"\n    stat = ImageStat.Stat(im)\n    r,g,b = stat.mean\n    return math.sqrt(0.241*(r**2) + 0.691*(g**2) + 0.068*(b**2))","73b4df77":"print('Brigthness of Image 1: '+str(brightness(IMAGES[0]))+\n      '\\nBrigthness of Image 2: '+str(brightness(IMAGES[1]))+\n      '\\nBrigthness of Image 3: '+str(brightness(IMAGES[2])))","ab1ea622":"brightness_images = [brightness(img) for img in IMAGES]","51989bf3":"import matplotlib.pyplot as plt\nplt.scatter(np.arange(0,len(IMAGES),1),brightness_images,alpha=0.01)\nplt.title('Brightness of ith image')\nplt.xlabel('Image Index')\nplt.ylabel('Perceived Brightness')\nplt.show()","c7edd6e8":"import numpy as np\n\nplt.hist(brightness_images,bins=int(np.sqrt(len(IMAGES))))\nplt.title('Brightness Distribution')\nplt.xlabel('Brightness')\nplt.ylabel('Frequency')\nplt.show();\n\nprint('Mean: ' + str(np.mean(brightness_images)),\n      '\\nStd : ' + str(np.std(brightness_images)))","0a7b9113":"images[:5]","4570da88":"#Further I discovered 3 images were unlabelled\n\nremove  = ['20170109150557335.jpg.chip.jpg',\n           '20170116174525125.jpg.chip.jpg',\n           '20170109142408075.jpg.chip.jpg']","6087c1d6":"Age, Gender, Race = [], [], []\nfor img in images:\n  if img.split('_')[2] not in remove:\n    Age.append(int(img.split('_')[0]))\n    Gender.append(int(img.split('_')[1]))\n    Race.append(int(img.split('_')[2]))","ce9d90be":"len(Age), len(Gender), len(Race)","6eed54f6":"import matplotlib.pyplot as plt \nimport math\nimport numpy as np\n\nprint('(Age, Gender, Race)')\nfig=plt.figure(figsize=(16, 16))\ndisplay_first = 20\ncolumns = 5\nrows = math.ceil(display_first\/10)\nfor i in range(1,display_first+1):\n    img = Image.open(images[i-1])\n    fig.add_subplot(10, 10, i)\n    plt.title((Age[i-1],Gender[i-1],Race[i-1]))\n    plt.axis('off')\n    plt.imshow(img)\nplt.show()","af228212":"def is_grayscale(img):\n\n    im = img.convert(\"RGB\")\n    stat = ImageStat.Stat(im)\n\n    if sum(stat.sum)\/3 == stat.sum[0]:\n        return True\n    else:\n        return False","1259866b":"img_type = [is_grayscale(img) for img in IMAGES]\nprint(img_type[:10]) ","8199db59":"import pandas as pd\ndf = pd.DataFrame(img_type)\ndf[0].value_counts()","b2762422":"gray_images = df[df[0]==True]\ngray_images.columns =['Gray Scale ?']\nprint(gray_images)","2c1fcb5f":"fig=plt.figure(figsize=(16, 16))\nfig.tight_layout()\ncolumns = 20\nrows = math.ceil(838\/20)\nj = 1\nfor i in gray_images.index:\n    img = IMAGES[i]\n    fig.add_subplot(20, 20, j)\n    j+=1\n    plt.axis('off')\n    plt.imshow(img)\n    if j>100:\n      break\nplt.show()","bafbfd24":"From the documentation of the Data Set\n(https:\/\/susanqq.github.io\/UTKFace\/)","184175e6":"There is variation in brightness of images.\nLet's dive deeper.","8737fd9d":"Let's crosscheck","8c2e7079":"* This notebook shows some quick EDA techniques for Images\n* Dataset : https:\/\/susanqq.github.io\/UTKFace\/\n* Using : Python PIL.ImageStat.Stat, and externel basic_image_eda","04bfd5fc":"You can now make some quick decisions on data augmentation and preprocessing.","31073f11":"Using external tool:\nhttps:\/\/pypi.org\/project\/basic-image-eda\/","bd233b64":"Let us look at some of the Images","4382e997":"****Labels**\n**\nThe labels of each face image is embedded in the file name, formated like\n\n**[age]**_**[gender_race]** _**[date&time]**.jpg.chip.jpg\n\n\n*   **[age]** is an integer from 0 to 116, indicating the age\n*   **[gender]** is either 0 (male) or 1 (female)\n*   **[race]** is an integer from 0 to 4, denoting White, Black, Asian, Indian, and Others (like Hispanic, Latino, Middle Eastern)\n*   **[date&time]** is in the format of yyyymmddHHMMSSFFF, showing the date and time an image was collected to UTKFace","96876b6e":"Let us look at some of the images","58efca0c":"Oh I see a grayscale image over here.\nLet's check if there are more!"}}