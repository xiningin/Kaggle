{"cell_type":{"07bb8f52":"code","f2db08e2":"code","1b017849":"code","179bbef9":"code","2e422320":"code","f69c79bb":"code","38799554":"code","d55ac952":"code","1c60bf45":"code","1d1e6f9c":"code","07e649d8":"code","c40cfec5":"code","46034c50":"code","0c4a2773":"code","aa79e5de":"code","6a325abd":"code","60f14dae":"code","19b5d1df":"code","2a1e95b5":"code","e8e25ea1":"code","4f3726ea":"code","4386c100":"code","685bb778":"code","e800357e":"code","df93bc95":"code","d62509c8":"code","8d4193b8":"code","8c726e00":"code","a93f654c":"code","f4f6b30b":"code","0fc46502":"code","acc4d62f":"code","ac313524":"code","b76a65eb":"code","1d1e1cd8":"code","fcb2c4be":"code","c257b119":"code","4fbbb095":"code","bd4535d8":"code","437c4267":"markdown"},"source":{"07bb8f52":"import numpy as np\nimport pandas as pd\nimport warnings\nwarnings.filterwarnings('ignore')","f2db08e2":"train = pd.read_csv(\"..\/input\/hr-analytics-analytics-vidya\/train_LZdllcl.csv\")\ntest= pd.read_csv(\"..\/input\/hr-analytics-analytics-vidya\/test_2umaH9m.csv\")\ntest1 = test.copy()\ntrain.head()\n","1b017849":"train.nunique()","179bbef9":"train.isna().sum()","2e422320":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.rcParams[\"figure.figsize\"] = (13,8)\nsns.countplot(train.department,hue = train.department,palette = 'dark')\nplt.legend(loc = \"best\")\nplt.show()","f69c79bb":"plt.rcParams[\"figure.figsize\"] = (14,8)\nsns.countplot(train.education,hue = train.education,palette = 'dark')\nplt.legend(loc = \"best\")\nplt.show()","38799554":"plt.rcParams[\"figure.figsize\"] = (5,5)\nsns.countplot(train.gender,hue = train.gender,palette = 'dark')\nplt.legend(loc = \"best\")\nplt.show()","d55ac952":"plt.rcParams[\"figure.figsize\"] = (14,8)\nsns.countplot(train.recruitment_channel,hue = train.recruitment_channel,palette = 'dark')\nplt.legend(loc = \"best\")\nplt.show()","1c60bf45":"train.no_of_trainings.value_counts()","1d1e6f9c":"train.no_of_trainings.unique()","07e649d8":"labels = [1,2,3,4,5,6,7,8,9,10]\nsizes = train.no_of_trainings.value_counts()\ncolor = colors = plt.cm.copper(np.linspace(0, 1, 10))\nexplode = explode = [0.1, 0.1, 0.2, 0.3, 0.5,0.6,0.7,0.8,0.9,1.0]\nplt.rcParams['figure.figsize'] = (9, 9)\nplt.pie(sizes, labels = labels, colors = color, explode = explode, shadow = True)\nplt.title('International Repuatation for the Football Players', fontsize = 20)\nplt.legend()\nplt.show()\n\n","c40cfec5":"plt.rcParams[\"figure.figsize\"] = (14,8)\nsns.countplot(train.no_of_trainings,hue = train.no_of_trainings,palette = 'dark')\nplt.legend(loc = \"best\")\nplt.show()","46034c50":"plt.rcParams['figure.figsize'] = (15,8)\nsns.distplot(train.age,color = 'blue')\nplt.xlabel(xlabel = \"Ages\",fontsize = 10)\nplt.ylabel(ylabel = \"Count distribution\",fontsize = 10)\nplt.title(\"Distribution PLot\",fontsize =20)\nplt.legend()\nplt.xticks(rotation = 0)\nplt.show()","0c4a2773":"labels = ['5.0', '4.0', '3.0', '2.0', '1.0'] \nsizes = train.previous_year_rating.value_counts()\ncolors = plt.cm.copper(np.linspace(0, 1, 5))\nexplode = [0, 0, 0, 0, 0.1]\n\n# plt.rcParams[\"figure.figsize\"] = (10,10)\nplt.pie(sizes,labels = labels,colors = colors,explode = explode,shadow = True,startangle = 90)\nplt.title(\"Rating Analysis\")\nplt.legend()\nplt.show()","aa79e5de":"plt.rcParams['figure.figsize'] = (15,8)\nsns.distplot(train.length_of_service,color = 'blue')\nplt.xlabel(xlabel = \"Service Duration\",fontsize = 10)\nplt.ylabel(ylabel = \"Count distribution\",fontsize = 10)\nplt.title(\"Distribution PLot\",fontsize =20)\nplt.legend()\nplt.xticks(rotation = 0)\nplt.show()","6a325abd":"# avg_training_score\t\nplt.rcParams['figure.figsize'] = (15,8)\nsns.distplot(train.avg_training_score,color = 'blue')\nplt.xlabel(xlabel = \"Service Duration\",fontsize = 10)\nplt.ylabel(ylabel = \"Count distribution\",fontsize = 10)\nplt.title(\"Distribution PLot\",fontsize =20)\nplt.legend()\nplt.xticks(rotation = 0)\nplt.show()","60f14dae":"plt.style.use(\"dark_background\")\ntrain.department.value_counts().plot.bar(color = 'orange',figsize = (10,10))\nplt.title(\"Department Distribution\",fontsize = 20)\nplt.xlabel(\"Department\",fontsize = 16)\nplt.ylabel(\"Count\")\nplt.show()\n","19b5d1df":"plt.rcParams['figure.figsize'] = (10,8)\nplt.style.use(\"Solarize_Light2\")\nsns.scatterplot(x=train[\"age\"],y = train[\"length_of_service\"],palette = \"Reds\")\nplt.legend()\nplt.show()","2a1e95b5":"print(train.shape,test.shape)\ntrain.head()","e8e25ea1":"train.drop(labels = [\"employee_id\",\"education\",\"previous_year_rating\",\"region\"],axis=1,inplace = True)\ntest.drop(labels = [\"employee_id\",\"education\",\"previous_year_rating\",\"region\"],axis=1,inplace = True)\ntrain.head()","4f3726ea":"feat = [\"department\",\"gender\",\"recruitment_channel\"]\nX = pd.get_dummies(train[feat])\nX_test = pd.get_dummies(test[feat])\nX.head()","4386c100":"train = pd.concat([train,X],axis=1)\ntest = pd.concat([test,X_test],axis=1)","685bb778":"train.head()","e800357e":"train.drop(labels = [\"department\",\"gender\",\"recruitment_channel\"],axis=1,inplace = True)\ntest.drop(labels = [\"department\",\"gender\",\"recruitment_channel\"],axis=1,inplace = True)\ntrain.head()","df93bc95":"y = train.is_promoted\nX = train.drop(labels = [\"is_promoted\"],axis=1)\nX.head()","d62509c8":"from sklearn import preprocessing\n\nx = X.values #returns a numpy array\ntest_s = test.values\nmin_max_scaler = preprocessing.MinMaxScaler()\nx_scaled_train = min_max_scaler.fit_transform(x)\nx_scaled_test = min_max_scaler.fit_transform(test_s)\ndf_train = pd.DataFrame(x_scaled_train)\ndf_test = pd.DataFrame(x_scaled_test)","8d4193b8":"from sklearn.model_selection import train_test_split,cross_val_predict\nX_train, X_test, y_train, y_test = train_test_split(df_train, y, test_size=0.4,stratify = y)","8c726e00":"from sklearn.metrics import log_loss\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import AdaBoostClassifier,RandomForestClassifier,GradientBoostingClassifier,BaggingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\n\nimport xgboost as xgb\nimport lightgbm as lgb\n\n\ndef metric(y,y0):\n    return log_loss(y,y0)\ndef cross_valid(model,train,y_train,cv):\n    results = cross_val_predict(model, train, y_train, method=\"predict_proba\",cv=cv)\n    return metric(y_train,results)","a93f654c":"models = [lgb.LGBMClassifier(), xgb.XGBClassifier(), GradientBoostingClassifier(), LogisticRegression(), \n              RandomForestClassifier(), AdaBoostClassifier()\n             ]\nfor i in models:\n    error =  cross_valid(i,df_train,y,5)\n    print(str(i).split(\"(\")[0], error)","f4f6b30b":"model = lgb.LGBMClassifier(booster= 'dart',\n        objective= 'binary',\n        learning_rate= 0.05,\n        max_depth= 8)","0fc46502":"model.fit(X_train,y_train)","acc4d62f":"preds = model.predict(X_test)\nprint(log_loss(y_test,preds))","ac313524":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, preds))\n","b76a65eb":"predictions = model.predict(df_test)\nfinal = pd.DataFrame({\"employee_id\":test1.employee_id,\n                     \"is_promoted\":predictions})\nfinal.head()","1d1e1cd8":"final.to_csv(\"submiss.csv\",index = False)","fcb2c4be":"xgb1 = xgb.XGBClassifier(\n    booster='dart',\n    objective='multi:softprob',\n    learning_rate= 0.01,\n#     num_round= 775,\n    max_depth=8,\n    seed=25,\n    nthread=3,\n    eval_metric='mlogloss',\n    num_class=5\n\n)","c257b119":"model = xgb1\nmodel.fit(X_train,y_train)\npreds = model.predict(X_test)\nprint(log_loss(preds,y_test))","4fbbb095":"predictions = model.predict(df_test)\nfinal = pd.DataFrame({\"employee_id\":test1.employee_id,\n                     \"is_promoted\":predictions})\nfinal.head()\nfinal.to_csv(\"submiss.csv\",index = False)","bd4535d8":"print(classification_report(y_test, preds))\n","437c4267":"# Trying XGBoost"}}