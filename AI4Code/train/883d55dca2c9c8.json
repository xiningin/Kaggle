{"cell_type":{"cd17570e":"code","648c31d8":"code","03d7929d":"code","bd3f805f":"code","37ee5dfe":"code","d34b05ba":"code","c3d9ae71":"code","1d7e1388":"code","5db78130":"code","9db71a5c":"code","2e47a09d":"code","87c0ba92":"code","9cbe66cd":"code","2e3b54c8":"code","2017a756":"code","8dea690b":"code","b0601522":"code","723ab702":"markdown","81e84d6f":"markdown","e6879cc8":"markdown","e3ce5bf6":"markdown","044fbaa8":"markdown","3273ee06":"markdown"},"source":{"cd17570e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","648c31d8":"# Display image directly IPython.display.Image\nfrom IPython.display import Image\n# Display 18*18 pixel image\nImage(filename='\/kaggle\/input\/image-ma\/checkerboard_18x18.png')","03d7929d":"# Read image as gray scale in opencv\nimport cv2\ncb_img = cv2.imread(filename='\/kaggle\/input\/image-ma\/checkerboard_18x18.png',flags= cv2.IMREAD_GRAYSCALE )\nprint(cb_img)","bd3f805f":"print('Image size ', cb_img.shape)\nprint('Image data type ', cb_img.dtype)","37ee5dfe":"# Display image data using matplotlib\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nplt.imshow(cb_img)","d34b05ba":"# Set color map for matplotlib imshow\nplt.imshow(cb_img, cmap='gray')","c3d9ae71":"# Read color image\nImage('\/kaggle\/input\/image-ma\/New_Zealand_Lake.jpg')","1d7e1388":"# Read color image\nnz_img = cv2.imread('\/kaggle\/input\/image-ma\/New_Zealand_Lake.jpg', cv2.IMREAD_COLOR)\nprint(nz_img)","5db78130":"print(\"Image size\", nz_img.shape)","9db71a5c":"# Display image data \nplt.imshow(nz_img)","2e47a09d":"# open cv read image as GBR format but matplotlib needs standard RGB format\nnz_img_rgb = nz_img[:,:,::-1]\nplt.imshow(nz_img_rgb)","87c0ba92":"# Split image into B, G, R components\nb, g, r = cv2.split(nz_img)\nprint(b)","9cbe66cd":"# Show channel\nplt.figure(figsize=[20,5])\n\nplt.subplot(141)\nplt.imshow(r, cmap='gray')\nplt.title('Red Channel')\n\nplt.subplot(142)\nplt.imshow(g, cmap='gray')\nplt.title('Green Channel')\n\nplt.subplot(143)\nplt.imshow(b, cmap='gray')\nplt.title('Blue Channel')\n\n# Merge individual channels into BGR image\nimg_merged = cv2.merge((b, g, r))\n\n# Show merged output\nplt.subplot(144)\nplt.imshow(img_merged[:, :, ::-1])\nplt.title('Merged Output')","2e3b54c8":"nz_img_rgb = cv2.cvtColor(nz_img, cv2.COLOR_BGR2RGB)\nplt.imshow(nz_img_rgb)","2017a756":"nz_img_hsv = cv2.cvtColor(nz_img, cv2.COLOR_BGR2HSV)\nh, s, v = cv2.split(nz_img_hsv)\n\n# Show channel\nplt.figure(figsize=[20,5])\n\nplt.subplot(141)\nplt.imshow(h, cmap='gray')\nplt.title('H Channel')\n\nplt.subplot(142)\nplt.imshow(s, cmap='gray')\nplt.title('S Channel')\n\nplt.subplot(143)\nplt.imshow(v, cmap='gray')\nplt.title('V Channel')\n\n# Merge individual channels into BGR image\nimg_merged = cv2.merge((b, g, r))\n\n# Show merged output\nplt.subplot(144)\nplt.imshow(nz_img_rgb)\nplt.title('Original')","8dea690b":"h_new = h + 10\nnz_img_hsv_modified = cv2.merge((h_new, s, v))\nnz_img_rgb_modified = cv2.cvtColor(nz_img_hsv_modified, cv2.COLOR_HSV2RGB)\n\n# Show channel\nplt.figure(figsize=[20,5])\n\nplt.subplot(141)\nplt.imshow(h_new, cmap='gray')\nplt.title('H New Channel')\n\nplt.subplot(142)\nplt.imshow(s, cmap='gray')\nplt.title('S Channel')\n\nplt.subplot(143)\nplt.imshow(v, cmap='gray')\nplt.title('V Channel')\n\n# Show merged output\nplt.subplot(144)\nplt.imshow(nz_img_rgb_modified)\nplt.title('Modified')","b0601522":"# Save image\ncv2.imwrite('New Zealand Saved.png', nz_img)\nImage(filename='New Zealand Saved.png')","723ab702":"# Saving Image","81e84d6f":"# Converting to different color space","e6879cc8":"# Modify individual channel","e3ce5bf6":"# Color image","044fbaa8":"# Splitting and merging color channel","3273ee06":"# Gray scale image"}}