{"cell_type":{"01e81f53":"code","d582d45a":"code","0ae84113":"code","4b138b4a":"code","156632e1":"code","bfa6027e":"code","a6ccd794":"code","ce818d59":"code","acbec873":"code","a1731dd3":"code","289d071c":"code","71c45e97":"code","5a696a54":"code","9a27156d":"code","b273f1c6":"code","506b5c42":"code","ac32095a":"code","df7fa487":"code","b8e3602d":"code","6f3ec183":"code","491dd84c":"code","13de8c2e":"code","a773ae5e":"markdown","d0c97cc3":"markdown","7e8c903c":"markdown","e1e02491":"markdown"},"source":{"01e81f53":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d582d45a":"df_2002 = pd.read_csv('\/kaggle\/input\/predict-pakistan-elections-2018\/National Assembly 2002 - Updated.csv', encoding = 'ISO-8859-1')\ndf_2008 =pd.read_csv('\/kaggle\/input\/predict-pakistan-elections-2018\/National Assembly 2008.csv', encoding = 'ISO-8859-1')\ndf_2013 = pd.read_csv('\/kaggle\/input\/predict-pakistan-elections-2018\/National Assembly 2013.csv', encoding = 'ISO-8859-1')\ndf_2018 = pd.read_csv('\/kaggle\/input\/predict-pakistan-elections-2018\/NA-Results2018 Ver 2.csv', encoding = 'ISO-8859-1')\n\ndf_2002.head(20)","0ae84113":"print('Data Dimentions of NA_2002:',df_2002.shape)\nprint('Data Dimentions of NA_2008:',df_2008.shape)\nprint('Data Dimentions of NA_2013:',df_2013.shape)","4b138b4a":"print(\"NA_ 2002.csv\")\ndf_2002.info()\nprint(\"NA_2008.csv\")\ndf_2008.info()\nprint(\"NA_2013.csv\")\ndf_2013.info()","156632e1":"df_2002.isnull().sum()","bfa6027e":"df_2002[\"Party\"].replace({\"Pakistan Mulim League(QA)\": \"Pakistan Muslim League(QA)\", \n                            \"Indepndent\": \"Independent\",\n                            \"Pakistan Peoples Party Parliamentarian\": \"Pakistan Peoples Party Parliamentarians\", \n                            \"Pakistan Peoples Party Parlimentarians\": \"Pakistan Peoples Party Parliamentarians\",\n                           \"Pakistan peoples Party Parlimentarians\": \"Pakistan Peoples Party Parliamentarians\"}, inplace=True)","a6ccd794":"#drop NA values in all dataset\ndf_2018 = df_2018.rename(columns={'Part':'Party'})\ndf_2018 = df_2018.dropna()\ndf_2002 = df_2002.dropna()\ndf_2008 = df_2008.dropna()\ndf_2013 = df_2013.dropna()\n","ce818d59":"grouped = df_2002.groupby(\"Party\")\ngrouped.get_group('Pakistan Tehreek-e-Insaf')","acbec873":"df_2002['Party'].value_counts()","a1731dd3":"grouped = df_2008.groupby(\"Party\")\ngrouped.get_group('Pakistan Tehreek-e-Insaf')","289d071c":"grouped = df_2013.groupby(\"Party\")\ngrouped.get_group('Pakistan Tehreek-e-Insaf')","71c45e97":"grouped = df_2018.groupby(\"Party\")\ngrouped.get_group('Pakistan Tehreek-e-Insaf')","5a696a54":"turnout_2018 = (((df_2018.Votes.sum())+(df_2018['Total_Rejected_Votes'].sum()))*100)\/(df_2018['Total_Registered_Voters'].sum())","9a27156d":"Registered_Votes_2013 = df_2013.groupby('Seat')['TotalRegisteredVoters'].mean().sum()\nTotal_valid_votes_2013 = df_2013.groupby('Seat')['TotalVotes'].mean().sum()\nturnout_2013 = (((Total_valid_votes_2013)*100)\/(Registered_Votes_2013))\nturnout_2013","b273f1c6":"turnout_2018 = (((df_2018.Votes.sum())+(df_2018['Total_Rejected_Votes'].sum()))*100)\/(df_2018['Total_Registered_Voters'].sum())","506b5c42":"Registered_Votes_2008 = df_2008.groupby('Seat')['TotalRegisteredVoters'].mean().sum()\nTotal_valid_votes_2008 = df_2008.groupby('Seat')['TotalVotes'].mean().sum()\nturnout_2008 = (((Total_valid_votes_2008)*100)\/(Registered_Votes_2008))\nturnout_2008","ac32095a":"Registered_Votes_2002 = df_2002.groupby('Seat')['Total_Registered_Voters'].mean().sum()\nTotal_valid_votes_2002 = df_2002.groupby('Seat')['Total_Votes'].mean().sum()\nturnout_2002 = (((Total_valid_votes_2002)*100)\/(Registered_Votes_2002))\nturnout_2002","df7fa487":"from matplotlib import pyplot as plt\nTurnout=[turnout_2002,turnout_2008,turnout_2013,turnout_2018]\nElection = ['Election 2002','Election 2008','Election 2013','Election 2018']\nplt.bar(Election,Turnout)\nplt.title('Voters Turnout in Paksitan ')","b8e3602d":"Parties_gain_2018 = df_2018.groupby('Party').Votes.sum().sort_values(ascending=False).head(5)","6f3ec183":"from matplotlib import pyplot as plt\nParties_gain_2018.plot.pie(subplots=True, figsize=(20,6),autopct='%5.1f%%',textprops={'fontsize': 18})\nplt.title('Top 5 Parties 2018')","491dd84c":"party_gain_2013 = df_2013.groupby('Party')['Votes'].sum().sort_values(ascending=False).head(5)","13de8c2e":"party_gain_2013.plot.pie(subplots=True, figsize=(20,6),autopct='%1.1f%%',textprops={'fontsize': 20})\nplt.title('Top 5 Parties 2013')","a773ae5e":"Data cleaning in 2002","d0c97cc3":"#  Parties  values ","7e8c903c":"Turnout in 2013","e1e02491":"Check number of nulls in data set: and found Zero null"}}