{"cell_type":{"15380546":"code","2123b175":"code","6594f109":"code","69fa3c77":"code","6b6615a2":"code","adfa2d2c":"code","a4f5bbaa":"code","1feb760f":"code","ba7fa83f":"code","dca03ddf":"code","afd1d40b":"code","59b7e821":"code","c71c4af2":"code","ccb8174a":"markdown","21cda5f8":"markdown","06764f8c":"markdown","5ced03d5":"markdown","5081493a":"markdown","7de73f0a":"markdown","1f250301":"markdown","d78d194e":"markdown","ae445f9b":"markdown"},"source":{"15380546":"from sklearn.preprocessing import LabelEncoder\n\nitems = ['TV', '\ub0c9\uc7a5\uace0', '\uc804\uc790\ub808\uc778\uc9c0', '\ucef4\ud4e8\ud130', '\uc120\ud48d\uae30', '\uc120\ud48d\uae30', '\ubbf9\uc11c', '\ubbf9\uc11c']\n\n#LabelEncoder\ub97c \uac1d\uccb4\ub85c \uc0dd\uc131\ud55c \ud6c4, fit()\uacfc transform()\uc73c\ub85c \ub808\uc774\ube14 \uc778\ucf54\ub529 \uc218\ud589. \nencoder = LabelEncoder()\nencoder.fit(items)\nlabels = encoder.transform(items)\nprint('\uc778\ucf54\ub529 \ubcc0\ud658\uac12:', labels)","2123b175":"print('\uc778\ucf54\ub529 \ud074\ub798\uc2a4:', encoder.classes_)","6594f109":"print('\ub514\ucf54\ub529 \uc6d0\ubcf8\uac12:', encoder.inverse_transform([1,2,4,5,0,0,0]))","69fa3c77":"from sklearn.preprocessing import OneHotEncoder\nimport numpy as np\n\nitems = ['TV', '\ub0c9\uc7a5\uace0', '\uc804\uc790\ub808\uc778\uc9c0', '\ucef4\ud4e8\ud130', '\uc120\ud48d\uae30', '\uc120\ud48d\uae30', '\ubbf9\uc11c', '\ubbf9\uc11c']\n\n#\uba3c\uc800 \uc22b\uc790 \uac12\uc73c\ub85c \ubcc0\ud658\uc744 \uc704\ud574 LabelEncoder\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4. \n\nencoder = LabelEncoder()\nencoder.fit(items)\nlabels = encoder.transform(items)\n\n#2\ucc28\uc6d0 \ub370\uc774\ud130\ub85c \ubcc0\ud658\nlabels = labels.reshape(-1,1)\n\nprint(labels)\n","6b6615a2":"#\uc6d0\ud56b \uc778\ucf54\ub529 \uc801\uc6a9\noh_encoder = OneHotEncoder()\noh_encoder.fit(labels)\noh_labels = oh_encoder.transform(labels)\nprint('\uc6d0\ud56b \uc778\ucf54\ub529 \ub370\uc774\ud130')\nprint(oh_labels.toarray())\nprint('\uc6d0\ud56b \uc778\ucf54\ub529 \ub370\uc774\ud130 \ucc28\uc6d0')\nprint(oh_labels.shape)\n","adfa2d2c":"import pandas as pd\n\ndf = pd.DataFrame({'item':['TV', '\ub0c9\uc7a5\uace0', '\uc804\uc790\ub808\uc778\uc9c0', '\ucef4\ud4e8\ud130', '\uc120\ud48d\uae30', '\uc120\ud48d\uae30', '\ubbf9\uc11c', '\ubbf9\uc11c']})\npd.get_dummies(df)\n\n","a4f5bbaa":"from sklearn.datasets import load_iris\nimport pandas as pd\n\n#\ubd93\uaf43 \ub370\uc774\ud130 \uc138\ud2b8\ub97c \ub85c\ub529\ud558\uace0 DataFrame\uc73c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4. \niris = load_iris()\niris_data = iris.data\niris_df = pd.DataFrame(data=iris_data, columns=iris.feature_names)\n\nprint('feature \ub4e4\uc758 \ud3c9\uade0 \uac12')\nprint(iris_df.mean())\nprint('\\nfeature \ub4e4\uc758 \ubd84\uc0b0 \uac12')\nprint(iris_df.var())","1feb760f":"from sklearn.preprocessing import StandardScaler\n\n#StandardScaler\uac1d\uccb4 \uc0dd\uc131\nscaler = StandardScaler()\n\n#StandardScaler\ub85c \ub370\uc774\ud130 \uc138\ud2b8 \ubcc0\ud658. fit()\uacfc transform() \ud638\ucd9c\nscaler.fit(iris_df)\niris_scaled = scaler.transform(iris_df)\n\n#transform() \uc2dc \uc2a4\ucf00\uc77c \ubcc0\ud658\ub41c \ub370\uc774\ud130 \uc138\ud2b8\uac00 Numpy ndarray\ub85c \ubc18\ud658\ub3fc \uc774\ub97c DataFrame\uc73c\ub85c \ubcc0\ud658\niris_df_scaled = pd.DataFrame(data=iris_scaled, columns=iris.feature_names)\nprint('feature\ub4e4\uc758 \ud3c9\uade0 \uac12')\nprint(iris_df_scaled.mean())\nprint('\\nfeature \ub4e4\uc758 \ubd84\uc0b0 \uac12')\nprint(iris_df_scaled.max())","ba7fa83f":"from sklearn.preprocessing import MinMaxScaler  ","dca03ddf":"#MinMaxScaler \uac1d\uccb4 \uc0dd\uc131\nscaler = MinMaxScaler()\n\n#MinMaxScaler\ub85c \ub370\uc774\ud130 \uc138\ud2b8 \ubcc0\ud658. fit()\uacfc transform() \ud638\ucd9c.\nscaler.fit(iris_df)\niris_scaled = scaler.transform(iris_df)\n\n#transform() \uc2dc \uc2a4\ucf00\uc77c \ubcc0\ud658\ub41c \ub370\uc774\ud130 \uc138\ud2b8\uac00 NumPy ndarray\ub85c \ubc18\ud658\ub3fc \uc774\ub97c DataFrame\uc73c\ub85c \ubcc0\ud658. \niris_df_scaled = pd.DataFrame(data=iris_scaled, columns=iris.feature_names)\nprint('feature\ub4e4\uc758 \ucd5c\uc19f\uac12')\nprint(iris_df_scaled.min())\nprint('\\nfeature\ub4e4\uc758 \ucd5c\ub313\uac12')\nprint(iris_df_scaled.max())\n\n","afd1d40b":"from sklearn.preprocessing import MinMaxScaler\nimport numpy as np\n\n#\ud559\uc2b5 \ub370\uc774\ud130\ub294 0\ubd80\ud130 10\uae4c\uc9c0, \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\ub294 0\ubd80\ud130 5\uae4c\uc9c0 \uac12\uc744 \uac00\uc9c0\ub294 \ub370\uc774\ud130 \uc138\ud2b8\ub85c \uc0dd\uc131. \n#Scaler \ud074\ub798\uc2a4\uc758 fit(), transform()\uc740 2\ucc28\uc6d0 \uc774\uc0c1 \ub370\uc774\ud130\ub9cc \uac00\ub2a5\ud558\ubbc0\ub85c reshape(-1,1)\ub85c \ucc28\uc6d0 \ubcc0\uacbd \ntrain_array = np.arange(0,11).reshape(-1,1)\ntest_array = np.arange(0,6).reshape(-1,1)\n\n#MinMaxScaler \uac1d\uccb4\uc5d0 \ubcc4\ub3c4\uc758 feature_range \ud30c\ub77c\ubbf8\ud130 \uac12\uc744 \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 0~1 \uac12\uc73c\ub85c \ubcc0\ud658\nscaler = MinMaxScaler()\n\n#fit()\ud558\uac8c \ub418\uba74 train_array \ub370\uc774\ud130\uc758 \ucd5c\uc19f\uac12\uc774 0, \ucd5c\ub313\uac12\uc774 10\uc73c\ub85c \uc124\uc815\nscaler.fit(train_array)\n\n#1\/10 scale\ub85c train_array \ub370\uc774\ud130 \ubcc0\ud658\ud568. \uc6d0\ubcf8 10->1\ub85c \ubcc0\ud658\ub428. \ntrain_scaled = scaler.transform(train_array)\n\nprint('\uc6d0\ubcf8 train_array \ub370\uc774\ud130:', np.round(train_array.reshape(-1), 2))\nprint('Scale\ub41c train_array \ub370\uc774\ud130:', np.round(train_scaled.reshape(-1), 2))","59b7e821":"#MinMaxScaler\uc5d0 test_array\ub97c fit()\ud558\uac8c \ub418\uba74 \uc6d0\ubcf8 \ub370\uc774\ud130\uc758 \ucd5c\uc19f\uac12\uc774 0, \ucd5c\ub313\uac12\uc774 5\ub85c \uc124\uc815\ub428. \nscaler.fit(test_array)\n\n#1\/5 scale\ub85c test_array \ub370\uc774\ud130 \ubcc0\ud658\ud568. \uc6d0\ubcf8 5->1\ub85c \ubcc0\ud658. \ntest_scaled = scaler.transform(test_array)\n\n#test_array\uc758 scale \ubcc0\ud658 \ucd9c\ub825.\nprint('\uc6d0\ubcf8 test_array \ub370\uc774\ud130:', np.round(test_array.reshape(-1),2))\nprint('Scale\ub41c test_array \ub370\uc774\ud130:', np.round(test_scaled.reshape(-1),2))","c71c4af2":"Scaler = MinMaxScaler()\nscaler.fit(train_array)\ntrain_scaled = scaler.transform(train_array)\nprint('\uc6d0\ubcf8 train_array \ub370\uc774\ud130:', np.round(train_array.reshape(-1),2))\nprint('Scale\ub41c train_array \ub370\uc774\ud130:', np.round(train_scaled.reshape(-1),2))\n\n#test_array\uc5d0 Scale \ubcc0\ud658\uc744 \ud560 \ub54c\ub294 \ubc18\ub4dc\uc2dc fit()\uc744 \ud638\ucd9c\ud558\uc9c0 \uc54a\uace0 transform()\ub9cc\uc73c\ub85c \ubcc0\ud658\ud574\uc57c\ud568.\ntest_scaled = scaler.transform(test_array)\nprint('\\n\uc6d0\ubcf8 test_array \ub370\uc774\ud130:', np.round(test_array.reshape(-1),2))\nprint('Scale\ub41c test_array \ub370\uc774\ud130:', np.round(test_scaled.reshape(-1),2))","ccb8174a":"**\ud559\uc2b5 \ub370\uc774\ud130\uc640 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc758 \uc2a4\ucf00\uc77c\ub9c1 \ubcc0\ud658 \uc2dc \uc720\uc758\uc810**","21cda5f8":"\uc774\ubc88\uc5d0\ub294 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \uc138\ud2b8\ub97c \ubcc0\ud658\ud558\ub294\ub370, fit()\uc744 \ud638\ucd9c\ud574 \uc2a4\ucf00\uc77c\ub9c1 \uae30\uc900 \uc815\ubcf4\ub97c \ub2e4\uc2dc \uc801\uc6a9\ud55c \ub4a4 transform()\uc744 \uc218\ud589\ud55c \uacb0\uacfc\ub97c \ud655\uc778\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. ","06764f8c":"**\ub808\uc774\ube14 \uc778\ucf54\ub529**","5ced03d5":"**StandardScaler**\n","5081493a":"\uc774\uc81c StandardScaler\ub97c \uc774\uc6a9\ud574 \uac01 \ud53c\ucc98\ub97c \ud55c \ubc88\uc5d0 \ud45c\uc900\ud654\ud558\uaca0\uc2b5\ub2c8\ub2e4. StandardScaler \uac1d\uccb4\ub97c \uc0dd\uc131\ud55c \ud6c4\uc5d0 fit()\uacfc transform() \uba54\uc11c\ub4dc\uc5d0 \ubcc0\ud658 \ub300\uc0c1 \ud53c\ucc98 \ub370\uc774\ud130 \uc138\ud2b8\ub97c \uc785\ub825\ud558\uace0 \ud638\ucd9c\ud558\uba74 \uac04\ub2e8\ud558\uac8c \ubcc0\ud658\ub429\ub2c8\ub2e4. transform()\uc744 \ud638\ucd9c\ud560 \ub54c \uc2a4\ucf00\uc77c \ubcc0\ud658\ub41c \ub370\uc774\ud130 \uc138\ud2b8\uac00 \ub118\ud30c\uc774\uc758 ndarray\uc774\ubbc0\ub85c \uc774\ub97c DataFrame\uc73c\ub85c \ubcc0\ud658\ud574 \ud3c9\uade0\uac12\uacfc \ubd84\uc0b0 \uac12\uc744 \ub2e4\uc2dc \ud655\uc778\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. ","7de73f0a":"\ub2e4\uc74c \ucf54\ub4dc\ub294 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc5d0 fit()\uc744 \ud638\ucd9c\ud558\uc9c0 \uc54a\uace0 \ud559\uc2b5 \ub370\uc774\ud130\ub85c fit()\uc744 \uc218\ud589\ud55c MinMaxScaler \uac1d\uccb4\uc758 transform()\uc744 \uc774\uc6a9\ud574 \ub370\uc774\ud130\ub97c \ubcc0\ud658\ud569\ub2c8\ub2e4. \ucd9c\ub825 \uacb0\uacfc\ub97c \ud655\uc778\ud574 \ubcf4\uba74 \ud559\uc2b5\ub370\uc774\ud130, \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ubaa8\ub450 1\/10\uc218\uc900\uc73c\ub85c \uc2a4\ucf00\uc77c\ub9c1 \ub418\uc5b4 1\uc774 0.1\ub85c, 5\uac00 0.5\ub85c, \ud559\uc2b5 \ub370\uc774\ud130, \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ubaa8\ub450 \ub3d9\uc77c\ud558\uac8c \ubcc0\ud658\ub410\uc74c\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ","1f250301":"**Get_dummies()**\n","d78d194e":"**\uc6d0-\ud56b \uc778\ucf54\ub529**\n","ae445f9b":"**MinMaxScaler**"}}