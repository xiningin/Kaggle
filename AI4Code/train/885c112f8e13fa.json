{"cell_type":{"dd0f7378":"code","ad32f5e4":"code","140b38bf":"code","7c49c79c":"code","2953d425":"code","afc17827":"code","dbe72f58":"code","371d30fb":"code","0ae0e3b5":"code","e1051937":"code","573a8174":"code","4ce3ef08":"code","305c6dcb":"code","6c08850c":"code","f822a8b8":"code","daa3cdc4":"code","cffb54f9":"code","f998cd6a":"code","6dbe94fd":"code","15cb0adb":"code","25a5fcdc":"code","74cf9931":"markdown","ec9ad3bc":"markdown"},"source":{"dd0f7378":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","ad32f5e4":"churn = pd.read_csv('..\/input\/bank-churn\/Churn_Modelling.csv')","140b38bf":"churn.head()","7c49c79c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(F:\\\\fsm_python\\\\assignment, churn.csv)\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n#churn = pd.read_csv(r\"F:\\fsm_python\\assignment\\Churn_Modelling.csv\")","2953d425":"churn.describe()","afc17827":"churn.isna().sum()","dbe72f58":"# drop columns which are not required\nchurn1 = churn[['RowNumber', 'CustomerId','Surname']]","371d30fb":"churn.drop(churn1, axis = 1, inplace = True)","0ae0e3b5":"# using the distibution plot, histogram, box plots to find the distribution of variables\n\n\n\n#fig.suptitle(\"Distribution of balance and estimated salary\")\n\nsns.displot(churn.Balance, kind = 'kde' )\n\nsns.displot(churn.EstimatedSalary, kind = 'kde' );","e1051937":"# to put a heat map to find the correlation function\n\nchurn.Geography.value_counts()","573a8174":"churn['Geography'].replace({'France':1, 'Germany':2, 'Spain':3}, inplace= True)\nchurn['Gender'].replace({'Male' : 1, 'Female' : 2}, inplace= True)","4ce3ef08":"corr = churn.corr()\n\nplt.figure(figsize=(12,8))\n\nsns.heatmap(corr, cmap='Blues_r' , annot = True)","305c6dcb":"_, ax = plt.subplots(1,3, figsize = (12,8))\n\nsns.countplot(x = \"NumOfProducts\", hue ='Exited', data = churn, ax = ax[0])\nsns.countplot(x = \"HasCrCard\", hue='Exited', data = churn, ax = ax[1])\nsns.countplot(x = 'IsActiveMember' , hue = 'Exited', data = churn,  ax = ax[2])","6c08850c":"# Finding the relation ship between the variable Exited and other \n_ , ax = plt.subplots(1,3, figsize = (12,8))\n_= sns.jointplot (data = churn, x = 'Geography' , y = 'Exited', kind = 'kde', ax = ax[0])\n_= sns.jointplot (data = churn, x = 'EstimatedSalary' , y = 'Exited', kind = 'kde', ax = ax[1])\n_= sns.jointplot (data = churn, x = 'CreditScore' , y = 'Exited', kind = 'kde', ax = ax[2])","f822a8b8":"churn['Age'].value_counts().plot.bar(figsize = (18,6))\n","daa3cdc4":"# converting the age, income bracket in to categories\nchurn['Age_cat1'] = pd.cut(churn['Age'], bins =3, labels=['y','m','s'])\nchurn['CreditScore_cat'] = pd.cut(churn['CreditScore'], bins = 3, labels = ['l','m','h'])\nchurn['Esitm_sal_cat'] = pd.cut(churn['EstimatedSalary'], bins = 3, labels = ['l','m','h'])","cffb54f9":"churn.head()","f998cd6a":"#how is age related to exited?\n_= sns.boxplot(data=churn, x = 'Exited', y ='Age')","6dbe94fd":"# how is gender and exited\n\n_= sns.boxplot(data= churn, x = 'CreditScore', y = 'Gender')","15cb0adb":"# age category of the exited group\nfig, ax = plt.subplots(1,3, figsize = (12,8))\n_= sns.countplot(data = churn, x = 'Age_cat1', hue = 'Exited', ax = ax[0])\n_= sns.countplot(data= churn,  x = 'CreditScore_cat', hue= 'Exited',ax= ax[1])\n_= sns.countplot(data = churn, x = 'Esitm_sal_cat', hue='Exited', ax = ax[2])","25a5fcdc":"from the above it is visbile that the middle aged are churning higher, \nnd the middel score have higher propensity of churn than the higher credit score category","74cf9931":"it can be infered that the churn rate is higher if the customer has a single product\nSimilarly the churn rate is higher in the case of Inactive member","ec9ad3bc":"from the above it is visbile that the middle aged are churning higher, \nnd the middel score have higher propensity of churn than the higher credit score category"}}