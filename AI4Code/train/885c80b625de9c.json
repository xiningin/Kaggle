{"cell_type":{"fecf8ba0":"code","f6684d98":"code","e527fd24":"code","f903b14e":"code","0daaeff9":"code","3517120b":"code","e9a03ccc":"code","99a9be25":"code","e64c10bf":"code","0cdc6921":"code","ae033692":"code","8c3df0d7":"code","d9b67f73":"code","4a467452":"code","ee8eb774":"markdown","f9425748":"markdown","78429532":"markdown","17fd1ef0":"markdown"},"source":{"fecf8ba0":"import numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport cv2\nimport tqdm\n#from tqdm.notebook import tqdm","f6684d98":"from pathlib import Path\nhome = str(Path.home())\nprint(\"HOME_FOLDER is \", home)\n\nif not os.path.exists(home+\"\/.deepface\"):\n    os.mkdir(home+\"\/.deepface\")\n    \nif not os.path.exists(home+\"\/.deepface\/weights\"):    \n    os.mkdir(home+\"\/.deepface\/weights\")\n\nimport shutil\nshutil.copy(\"..\/input\/pretrained-models\/age_model_weights.h5\", home+\"\/.deepface\/weights\")\n#shutil.copy(\"..\/input\/pretrained-models\/gender_model_weights.h5\", home+\"\/.deepface\/weights\")","e527fd24":"image_dir = Path('..\/input\/age-prediction\/20-50\/20-50')\nfilepaths = pd.Series(list(image_dir.glob(r'**\/*.jpg')), name='img_path').astype(str)\nages = pd.Series(filepaths.apply(lambda x: os.path.split(os.path.split(x)[0])[1]), name='actual_age').astype(np.int)\ndf = pd.concat([filepaths, ages], axis=1).sample(frac=1.0, random_state=1).reset_index(drop=True)","f903b14e":"df.head()","0daaeff9":"df.shape","3517120b":"#sub-sampling\ndf = df.sample(100, random_state = 17)","e9a03ccc":"!pip install gdown==3.10.1 --no-deps\n!pip install mtcnn==0.1.0 --no-deps\n!pip install deepface==0.0.51 --no-deps","99a9be25":"from deepface import DeepFace","e64c10bf":"#build age and gender prediction models once\nmodels = {}\nmodels[\"age\"] = DeepFace.build_model(\"Age\")\n#models[\"gender\"] = DeepFace.build_model(\"Gender\")","0cdc6921":"df.head()","ae033692":"obj = DeepFace.analyze(df[\"img_path\"].values.tolist(), actions = [\"age\"], models = models)","8c3df0d7":"age_predictions = []\nfor key in obj.keys():\n    age_predictions.append(obj[key][\"age\"])\n\ndf[\"predicted_age\"] = age_predictions\ndf[\"absolute_error\"] = abs(df[\"actual_age\"] - df[\"predicted_age\"])\nmae = df[\"absolute_error\"].mean()\nprint(\"Mean absolute error (MAE) is \", mae)","d9b67f73":"df.head()","4a467452":"from deepface.commons import functions\n\nfor index, instance in df.sample(10, random_state = 333).iterrows():\n    img_path = instance[\"img_path\"]\n    actual_age = instance[\"actual_age\"]\n    predicted_age = instance[\"predicted_age\"]\n    #-----------------------\n    \n    print(\"Predicted as \", predicted_age,\" years old but actually \", actual_age)\n    \n    fig = plt.figure()\n    \n    img_base = cv2.imread(img_path)\n    img_aligned = functions.preprocess_face(img_path, detector_backend = 'mtcnn')[0]\n    \n    ax1 = fig.add_subplot(1,2,1)\n    plt.imshow(img_base[:, :, ::-1])\n    plt.axis('off')\n    \n    ax2 = fig.add_subplot(1,2,2)\n    plt.imshow(img_aligned[:, :, ::-1])\n    plt.axis('off')\n    \n    plt.show()\n    \n    print(\"---------------\")","ee8eb774":"# Dataset","f9425748":"# DeepFace","78429532":"# Pre-trained models\n\ndeepface will download pre-trained weights from Google Drive source but I copied the weights to the inputs folder to skip downloading step","17fd1ef0":"[Deepface](https:\/\/github.com\/serengil\/deepface) is a lightweight face recognition and facial attribute analysis library for Pyhton. \n\nIt wraps several state-of-the-art face recognition models: **VGG-Face**, **Google FaceNet**, **Dlib** and **ArcFace**. Those models already reached and passed the human level accuracy.\n\nIt can also analyze some demography including **age**, **gender**, **emotion** and **race**.\n\nGitHub repo: https:\/\/github.com\/serengil\/deepface\n\nThere are many ways to support a project - starring\u2b50\ufe0f it is just one."}}