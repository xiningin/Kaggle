{"cell_type":{"469d6e81":"code","cdc3f6cb":"code","94aa34a6":"code","6daceab4":"code","578d11bc":"code","31aa4a78":"code","a98f3ea8":"code","c3321ba3":"code","2f553359":"code","30da14c9":"code","b1096a8a":"code","a17659d8":"code","15fa6649":"code","8da3bc50":"code","9034fe95":"code","9fcefb63":"code","7cb9d705":"code","60b30f3c":"markdown","6e4caff7":"markdown","a41212ee":"markdown","b861029e":"markdown","7576c784":"markdown","8a0c8c4e":"markdown","043bb1f0":"markdown","afc7f212":"markdown","7ed5f43f":"markdown","6a68c0fe":"markdown","180f37ce":"markdown","37d3086a":"markdown","e97f057e":"markdown","6f8f4948":"markdown","3071ef7d":"markdown","31ba00c4":"markdown","27bcd514":"markdown","f457074c":"markdown"},"source":{"469d6e81":"import pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport numpy as np\nimport json\nimport plotnine as p9\nimport os\nimport plotly.express as px\nimport plotly.graph_objects as go\n\n\n\n","cdc3f6cb":"df = pd.read_csv('..\/input\/bachelor-degree-majors-by-age-sex-and-state\/Bachelor_Degree_Majors.csv')","94aa34a6":"df.head()","6daceab4":"df.info()","578d11bc":"df = df[df['Sex'] != 'Total']\ndf_cleaned = df[df['Age Group'] != '25 and older']\n\ndf_cleaned\n\n\n","31aa4a78":"df_cleaned","a98f3ea8":"def variable_restorer(val):\n    \n    \"\"\"\n    Takes in a string. \n    Replaces all commas within the string.\n    Returns an int..\n    \"\"\"\n    \n    new_val = val.replace(',','')\n    \n    return int(new_val)\n\nnumeric_cols = df.iloc[0:,3:]  # Variables\n\n\nfor col in numeric_cols.columns:\n    df_cleaned[col] = df_cleaned[col].apply(variable_restorer)\n","c3321ba3":"df_cleaned.head()","2f553359":"grouped_df = df_cleaned.groupby(['State','Sex','Age Group']).sum()\ngrouped_df","30da14c9":"grouped_df['STEM'] = grouped_df['Science and Engineering'] + grouped_df['Science and Engineering Related Fields']\ngrouped_df = grouped_df.reset_index().drop(['Science and Engineering', 'Science and Engineering Related Fields'], axis = 1)\ngrouped_df\n","b1096a8a":"fig = px.bar(grouped_df, x='Age Group', y = \"Bachelor's Degree Holders\", color = 'Sex', facet_col = \"State\"\n            ,facet_col_wrap = 3, facet_row_spacing = 0.01, facet_col_spacing =0.04,\n            height = 5000, width =1000)\nfig.for_each_annotation(lambda a: a.update(text=a.text.split(\"=\")[-1]))\nfig.update_yaxes(showticklabels=False)\n","a17659d8":"code = {'Alabama': 'AL',\n        'Alaska': 'AK',\n        'Arizona': 'AZ',\n        'Arkansas': 'AR',\n        'California': 'CA',\n        'Colorado': 'CO',\n        'Connecticut': 'CT',\n        'Delaware': 'DE',\n        'District of Columbia': 'DC',\n        'Florida': 'FL',\n        'Georgia': 'GA',\n        'Hawaii': 'HI',\n        'Idaho': 'ID',\n        'Illinois': 'IL',\n        'Indiana': 'IN',\n        'Iowa': 'IA',\n        'Kansas': 'KS',\n        'Kentucky': 'KY',\n        'Louisiana': 'LA',\n        'Maine': 'ME',\n        'Maryland': 'MD',\n        'Massachusetts': 'MA',\n        'Michigan': 'MI',\n        'Minnesota': 'MN',\n        'Mississippi': 'MS',\n        'Missouri': 'MO',\n        'Montana': 'MT',\n        'Nebraska': 'NE',\n        'Nevada': 'NV',\n        'New Hampshire': 'NH',\n        'New Jersey': 'NJ',\n        'New Mexico': 'NM',\n        'New York': 'NY',\n        'North Carolina': 'NC',\n        'North Dakota': 'ND',\n        'Ohio': 'OH',\n        'Oklahoma': 'OK',\n        'Oregon': 'OR',\n        'Pennsylvania': 'PA',\n        'Rhode Island': 'RI',\n        'South Carolina': 'SC',\n        'South Dakota': 'SD',\n        'Tennessee': 'TN',\n        'Texas': 'TX',\n        'Utah': 'UT',\n        'Vermont': 'VT',\n        'Virginia': 'VA',\n        'Washington': 'WA',\n        'West Virginia': 'WV',\n        'Wisconsin': 'WI',\n        'Wyoming': 'WY'}\n\n# Target dataframe for the map: Has state name, state ID and total number of Bachelor's Degree holders in each state.\n\ngraduates_by_state = pd.DataFrame({'State':grouped_df['State'].unique(), 'ID':[ value for key,value in code.items()],\n                         \n                         \"Bachelor's Degree Holders\": grouped_df[\"Bachelor's Degree Holders\"].groupby(grouped_df.index \/\/ 6).sum()})\n\n\n\nfig0 = px.choropleth(graduates_by_state, locations = 'ID',\n                              color = \"Bachelor's Degree Holders\",\n                              hover_name = 'State',\n                              locationmode = 'USA-states',\n                              color_continuous_scale = \"Aggrnyl\",\n                              scope = 'usa')\n        \nfig0.add_scattergeo(\n                locations = graduates_by_state['ID'],\n                locationmode = 'USA-states',\n                text = graduates_by_state['ID'],   \n                mode ='text'\n                )\nfig0.show()\n\n\n\n\n","15fa6649":"def col_creator(df,col):\n    \n    Females_maj = df.loc[df['Sex'] =='Female',col].values\n    Females_maj = pd.DataFrame({'Females in'+ ' ' + col : Females_maj})\n    Females_maj = Females_maj.groupby(Females_maj.index \/\/ 3).sum()\n\n    Males_maj = df.loc[df['Sex'] == 'Male',col].values\n    Males_maj = pd.DataFrame({'Males in' + ' ' + col :Males_maj})\n    Males_maj = Males_maj.groupby(Males_maj.index \/\/ 3).sum()\n    \n    frames = [Females_maj, Males_maj]\n    \n    return  (pd.concat(frames,axis =1 ))\n            \n\nframes_2 = list()\n\nfor elem in grouped_df.iloc[0:,3:].columns :\n    \n    frames_2.append(col_creator(grouped_df, elem))\n    \n            \ndf_last = pd.concat(frames_2, axis =1)\n\n\ndf_last .index = [state for state in grouped_df['State'].unique()]\n\ndf_last.loc['Total'] = list(df_last[col_name].sum() for col_name in df_last.columns)\n\n\ndf_last","8da3bc50":"fig = go.Figure(data=go.Scatter(x=graduates_by_state['ID'],\n                                y=graduates_by_state[\"Bachelor's Degree Holders\"],\n                                mode='markers',\n                                marker_color=graduates_by_state[\"Bachelor's Degree Holders\"],\n                                 marker=dict(\n        size=10,\n        color=np.random.randn(500),\n        colorscale='peach', \n        showscale=False),\n                                text=graduates_by_state['State'])) \nfig.update_traces(marker=dict(size=12,\n                              line=dict(width=2,\n                                        color='white')),\n                  selector=dict(mode='markers'))\n\n\nfig.update_layout(title= \"Bachelor's Degree Holders in the USA\")\nfig.show()","9034fe95":"fig0 = go.Figure()\n\nSex = ['Male','Female']\n\nfor sex in Sex:\n    fig0.add_trace(go.Violin(x=grouped_df['Sex'][grouped_df['Sex'] == sex],\n                            y=grouped_df[\"Bachelor's Degree Holders\"][grouped_df['Sex'] == sex],\n                            name=sex,\n                            box_visible=True,\n                            meanline_visible=True))\n\nfig0.show()\n    \n    ","9fcefb63":"df_last[\"Males in Bachelor's Degree Holders\"]","7cb9d705":"\nimport plotly.graph_objects as go\n\n\nMajors = np.array([\"Business\",\"Education\",\"Arts, Humanites and Others\", \"STEM\"])\nTotals = np.array([e for e in df_last.loc['Total'][0:]])\n\n\nMen_Bachelors_total = np.array([df_last.iloc[51,1]]*4)\nWomen_Bachelors_total = np.array([-x for x in  [df_last.iloc[51,0]]*4])\n\nMen_totals = np.array([a for a in df_last.iloc[51,3::2]])\nWomen_totals = np.array([ -b for b in df_last.iloc[51,2::2]])\nW_pos = -1*Women_totals\nW_pos_t = -1*Women_Bachelors_total\n\nPercentage_male = pd.Series(Men_totals).apply(lambda x : round((x*100)\/ sum(Men_totals)) )\n\nPercentage_female = pd.Series(Women_totals).apply(lambda x : round((x*100)\/ sum(Women_totals)) )\n\n\nfig1 = go.Figure( layout =  go.Layout(yaxis = go.layout.YAxis(title = 'Majors'),\n                                      title = \"Proportion of Bachelors Degree holders per Major\",\n                                      xaxis = go.layout.XAxis( \n                                              range=[-50000000,50000000],\n                                              tickvals = [e for e in range(-50000000,75000000,25000000)],\n                                              ticktext = [50000000,25000000,0,25000000,50000000],\n                                              title = 'Count'),\n                                      barmode= 'overlay',\n                                      bargap = 0.1) )\n\nfig1.add_trace(go.Bar(y=Majors,\n                      x= Men_Bachelors_total,\n                      text = 'x',\n                      name = 'Men',\n                      hovertemplate  = 'Total Graduates: %{x:.4sf}',\n                      showlegend = False,\n                      orientation = 'h',\n                      \n                      marker = dict(\n                      color= 'rgba(46,183,18,0.5)',\n                    \n              )))\n\nfig1.add_trace(go.Bar(y=Majors,\n                      x= Men_totals,\n                      name = 'Men',\n                      text = Percentage_male.apply(lambda x: '{:.0f}%'.format(x)),\n                      textposition = 'outside',\n                      hovertemplate = '%{y} graduates: %{x:.4sf}',\n                      textfont=dict(\n                            family=\" Droid Sans,Standard TT\",\n                            size=25,\n                            color=\"black\"),                 \n                      orientation = 'h',\n                      marker = dict(line=dict(color='black', width=0.5),\n                             color='rgba(43,151,21,0.9)',\n                    \n              )))\n\n\nfig1.add_trace(go.Bar(y=Majors,\n              x= Women_Bachelors_total,\n                      name = 'Women',\n                      text = -1*Women_Bachelors_total,\n              hovertemplate = \n                      'Total Graduates: %{text:.4sf}',\n              showlegend = False,\n               \n               hoverinfo = 'text + y',\n               \n               orientation = 'h',\n               marker = dict(\n                    color='rgba(250,255,78,0.4)',\n                    \n              )))\n\n\nfig1.add_trace(go.Bar(y=Majors,\n              x= Women_totals,\n              customdata = -1*Women_totals,\n              name = 'Women',\n              text = Percentage_female.apply(lambda x: '{:.0f}%'.format(x)),\n              textposition = 'outside',\n              hovertemplate = '%{y} graduates : %{customdata:.4sf}',\n              textfont=dict(\n                            family=\" Droid Sans,Standard TT\",\n                            size=25,\n                            color=\"black\"),\n              orientation = 'h',\n              marker = dict(opacity = 1,\n                             line = dict(color = 'black', width = 0.5),\n                             color='rgba(235,242,36,0.5)',\n                    \n              )))\n\nfig1.update_xaxes(title_font = dict(size = 20))\n\nfig1.update_yaxes(title_font = dict(size = 20))\n\nfig1.show()","60b30f3c":"### Scatterplot","6e4caff7":"### Correcting Formatting error","a41212ee":"### GroupBy to get a better look at the data.","b861029e":"### The difference between 'Science and Engineering' and 'Science and Engineering Related Fields' doesn't seem too significant for our purposes. They essentially tell us the same thing. Let's merge the values together into a new column : STEM .","7576c784":"#### The female gender group has a  higher median, confirming the fact that there are more women who have a Bachelor's Degree than there are men. ","8a0c8c4e":"# Feedback request: Thanks for reading ! Please don't hesitate to point out anything that might have been done better . I'm always up for some good ol' constructive criticism ! Have a great day!","043bb1f0":"### Which gender group has more Bachelor's Degrees ?\n\n##### Simple Violin plots can shed some more light on this question.","afc7f212":"#### Looks like the state of California has a disproportionately high amount of indidivuals with a Bachelor's Degree . This doesn't come as a surprise considering :\n1. The state has the highest population density amongst all states.\n2. The state has over 200 colleges","7ed5f43f":"#### It it seems there are more women with a Bachelor's degree in almost every state than there are men.What's less surprising is that that most Bachelor's degree holders fall in the '40 to 64' age group.","6a68c0fe":"### How many Bachelor's Degree Holders are there per state ?\n\n##### We can go about visualizing this in two ways:\n1. Plotly choropleth heatmap\n2. Basic Scatterplot","180f37ce":"## Data Wrangling\n\nKey issues with the data:\n\n1. ****Dtype inconsistency**** : The dtypes of the numerical\/quanitative variables are not appropriate and need to be changed\n2. ****Un-necessary data values****: The data value of ' 25 and older' is not needed since this group is already subvided into the remaining data values of 'Age Group' i.e '25 to 39', '40 to 64' and '65 and Older'\n3. ****Formatting****: ',' values within the quantitave variables must be removed","37d3086a":"### Disparity between the proportion of of the population of Men and Women across Majors:\n##### 1. What proportion of the total population of women have  Bachelor's degrees in a STEM field ? \n##### 2. What proportion of the total population of men have  Bachelor's degrees in Arts and Humanities ?\n##### 3. Is there a significant amount of men who have Bachelor's Degrees in Education ?\n\n\n#### We can collectively answer these questions at once via a ****Population Pyramid****","e97f057e":"#### Choropeth heatmap","6f8f4948":"### The state of California has the highest number of Bachelor's Degree holders while the state of Wyoming has the lowest.","3071ef7d":"### Let's stop here to try and get a better look at the total number of individuals state-wide , regardless of age, with degrees in each major.","31ba00c4":"### Removing data-values which are of no use:","27bcd514":"### What is the proportion of Male to Female Bachelor's degree holders per state ?","f457074c":"Thats a good sign ! Our dataframe does not have any null or misssing data values"}}