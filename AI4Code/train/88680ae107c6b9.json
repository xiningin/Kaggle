{"cell_type":{"5ee7e834":"code","1b58dab1":"code","93efa826":"code","cd4fe55b":"code","979f838f":"code","d9665284":"code","9af1b416":"code","ec30cdc4":"code","1d9d15af":"code","7724d7f2":"code","e6ae41f9":"code","1cdb622a":"code","2ea566a0":"code","0f065cec":"code","3bd8b223":"code","88b94b70":"code","881ffbed":"code","292eeca1":"code","d589fff4":"code","3602120b":"code","601c98aa":"code","e4f7d608":"code","64ee8dca":"code","a6f06985":"code","15a7c0be":"code","57c9b779":"code","7c037674":"code","ce0fc728":"code","ea548102":"code","8c68f442":"code","55d956b0":"code","4702ccb5":"code","1b232922":"code","a52ad184":"code","72966ad6":"markdown","c67f7de1":"markdown","70288bb2":"markdown","0e508e7a":"markdown","9edd83eb":"markdown","824cddae":"markdown","1d965b1e":"markdown","ff0c1dc0":"markdown","eb664fb1":"markdown","59f76027":"markdown","d2f9a4ed":"markdown","4e4d5245":"markdown","e0a89f58":"markdown","92624010":"markdown","9d199236":"markdown","79a56322":"markdown","1d047296":"markdown"},"source":{"5ee7e834":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nfrom sklearn import metrics\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split","1b58dab1":"dataset=pd.read_csv('..\/input\/Iris.csv')","93efa826":"dataset.head()","cd4fe55b":"x=dataset.iloc[:,:-1]","979f838f":"x.head()","d9665284":"y=dataset.iloc[:,-1]","9af1b416":"y.head()","ec30cdc4":"dataset.describe()","1d9d15af":"dataset.info()","7724d7f2":"dataset['Species'].value_counts()","e6ae41f9":"x.isnull().sum()","1cdb622a":"y.isnull().sum()","2ea566a0":"plt.figure(2,figsize=(15,5))\nplt.subplot(1,2,1)\nplt.scatter(x=x.iloc[:,1],y=x.iloc[:,2] ,edgecolor='k')\nplt.xlabel('Sepal length')\nplt.ylabel('Sepal width')\nplt.subplot(1,2,2)\nplt.scatter(x=x.iloc[:,3],y=x.iloc[:,4] ,edgecolor='r')\nplt.xlabel('Petal length')\nplt.ylabel('Petal width')\nplt.show()","0f065cec":"data=dataset.drop('Id',axis=1)","3bd8b223":"sns.pairplot(data,hue='Species',markers='o',diag_kind='kde',palette='husl')","88b94b70":"g = sns.violinplot(y='Species', x='SepalLengthCm', data=data, inner='box')\nplt.show()\ng = sns.violinplot(y='Species', x='SepalWidthCm', data=data, inner='box')\nplt.show()\ng = sns.violinplot(y='Species', x='PetalLengthCm', data=data, inner='box')\nplt.show()\ng = sns.violinplot(y='Species', x='PetalWidthCm', data=data, inner='box')\nplt.show()","881ffbed":"from sklearn.preprocessing import LabelEncoder\nlabelencoder = LabelEncoder()\ny = labelencoder.fit_transform(y)","292eeca1":"x=x.drop('Id',axis=1)","d589fff4":"from sklearn.cross_validation import train_test_split","3602120b":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.4,random_state=0)","601c98aa":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nsc.fit_transform(x_train,y_train)\nsc.fit(x_test,y_test)","e4f7d608":"print(x_test)\nprint('*******************************')\nprint(x_train)\nprint('*******************************')\nprint(y_test)\nprint('*******************************')\nprint(y_train)\nprint('*******************************')","64ee8dca":"scores=[]\nlrange=list(range(1,26))\nfor k in lrange:\n    knn=KNeighborsClassifier(n_neighbors=k)\n    knn.fit(x_train,y_train)\n    y_pred=knn.predict(x_test)\n    scores.append(metrics.accuracy_score(y_test,y_pred))\n\nplt.plot(lrange, scores,ls='dashed')\nplt.xlabel('Value of k for KNN')\nplt.ylabel('Accuracy Score')\nplt.title('Accuracy Scores for Values of k of k-Nearest-Neighbors')\nplt.show()\n    ","a6f06985":"logreg = LogisticRegression()\nlogreg.fit(x_train, y_train)\ny_pred = logreg.predict(x_test)\nprint('Logistic Regression Score:',metrics.accuracy_score(y_test, y_pred))","15a7c0be":"\nfrom sklearn.decomposition import PCA\npca = PCA(n_components = 2)\nX_train = pca.fit_transform(x_train)\nX_test = pca.transform(x_test)\nexplained_variance = pca.explained_variance_ratio_\nexplained_variance","57c9b779":"principalDf = pd.DataFrame(data =X_train\n             , columns = ['principal component 1', 'principal component 2'])","7c037674":"finalDf = pd.concat([principalDf, dataset[['Species']]], axis = 1)\n","ce0fc728":"fig = plt.figure(figsize = (8,8))\nax = fig.add_subplot(1,1,1) \nax.set_xlabel('Principal Component 1', fontsize = 15)\nax.set_ylabel('Principal Component 2', fontsize = 15)\nax.set_title('2 component PCA', fontsize = 20)\ntargets = ['Iris-setosa', 'Iris-versicolor', 'Iris-virginica']\ncolors = ['r', 'g', 'b']\nfor targets, colors in zip(targets,colors):\n    indicesToKeep = finalDf['Species'] == targets\n    ax.scatter(finalDf.loc[indicesToKeep, 'principal component 1']\n               , finalDf.loc[indicesToKeep, 'principal component 2']\n               , c = colors\n               , s = 50)\nax.legend(targets)\nax.grid()","ea548102":"from sklearn.svm import SVC\nsvc=SVC()\nsvc.fit(x_train,y_train)","8c68f442":"svc_predictions = svc.predict(x_test)\nsvc_predictions","55d956b0":"svc_accuracy = svc.score(x_test,y_test)\nsvc_accuracy","4702ccb5":"from sklearn.ensemble import RandomForestClassifier\nrf=RandomForestClassifier(n_estimators=10)\nrf.fit(x_train,y_train)\n","1b232922":"rf_prediction=rf.predict(x_test)","a52ad184":"rf_accuracy=rf.score(x_test,y_test)\nrf_accuracy","72966ad6":"Using Label encoder to deal with the categorical data","c67f7de1":"# KNN Model","70288bb2":"# EDA and Visualization","0e508e7a":"# Applying Support Vector Classifier","9edd83eb":"# Feature Scaling","824cddae":"# Machine Learning","1d965b1e":"# Import Dataset","ff0c1dc0":"Plotting violin plot using box plot the inner depiction of variance of data ","eb664fb1":"Dropping the axis column as we find it futile for evaluation of models","59f76027":"# Import Liabraries","d2f9a4ed":"# Applying PCA","4e4d5245":"Scatter Plot ","e0a89f58":"# Applying Random Forest Classifier","92624010":"Standardizing the scalability of the data","9d199236":"# Logistic Regression","79a56322":"Pair-Plot is being plot so as visualize the relation among each targeted labels(categorical variable)","1d047296":"Splitting the dataset into train and test sets"}}