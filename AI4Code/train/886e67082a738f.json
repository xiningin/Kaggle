{"cell_type":{"9ae5de37":"code","02d7a6c8":"code","53a5a3f0":"code","305f7ae4":"code","98307c52":"code","41870105":"code","74e3e427":"code","2a2cd37e":"code","8cc682a2":"code","42a83cc0":"code","65fad823":"code","c428bd7b":"code","53046373":"code","34c01142":"code","6b176e68":"code","24ee9b22":"code","eba82532":"code","e73db5ae":"code","cc6405e8":"code","4f9e7cdb":"code","7a8f8dd9":"code","8d4e1eab":"code","2f97bfad":"code","ef422661":"code","07f402d6":"code","49c9434d":"code","e027a988":"code","6c1baf76":"code","ad0711cf":"code","d524e316":"code","ebb6816f":"code","99f876e3":"code","08b92b92":"code","81cae00c":"code","85745183":"code","35955836":"code","674a25d2":"code","e2b807bd":"code","e98949c0":"code","89376d21":"code","55d8ed94":"code","8948a030":"code","b99400af":"code","d91d4559":"code","2ce5a746":"code","d1abdf51":"code","37f33180":"code","8b8ac494":"code","8ac13be9":"code","8041f55c":"code","9a089c45":"markdown","d1b991e4":"markdown","2f6fc10c":"markdown","ace51b6d":"markdown","1f3260b1":"markdown","642480fd":"markdown","614d8f13":"markdown","8f34a0ae":"markdown","29aab28a":"markdown","e42e218d":"markdown","e2585b38":"markdown","175e014b":"markdown","76bfc52a":"markdown","7c11b6d4":"markdown","3c3c49df":"markdown","ec3177ff":"markdown","68581fcf":"markdown","dd242f4c":"markdown","3db3030f":"markdown","9b127f44":"markdown","ec6931f4":"markdown","35624ea7":"markdown","ef423b7e":"markdown","78ac5646":"markdown","dfd865a7":"markdown"},"source":{"9ae5de37":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","02d7a6c8":" !pip install openpyxl","53a5a3f0":"df = pd.read_excel('..\/input\/doctor-fees-prediction\/Final_Train.xlsx')","305f7ae4":"df.head()","98307c52":"df.Experience.head(5)","41870105":"df.shape","74e3e427":"df.dtypes","2a2cd37e":"df.isnull().sum()","8cc682a2":"df.isna().sum()","42a83cc0":"str() is None","65fad823":"values = {\"Rating\": '0%', \"Miscellaneous_Info\": str()}\ndf.fillna(value=values,limit=None,inplace=True) # remove null values","c428bd7b":"df['Rating']=df['Rating'].str.replace(r'\\D+','', regex=True).astype(int)","53046373":"df.Rating.head(5)","34c01142":"df['Experience']=df['Experience'].str.replace(r'\\D+','', regex=True).astype(int)","6b176e68":"df.Experience.head(5)","24ee9b22":"df.head(2)","eba82532":"# percentile list\nperc =[.20, .40, .60, .80]\n# list of dtypes to include\ninclude =['object', 'float', 'int']\n# calling describe method\ndesc = df.describe(percentiles = perc, include = include)\ndisplay(desc)","e73db5ae":"corr=df.corr() #correlative\ndisplay(corr)","cc6405e8":"import matplotlib.pyplot as plt\nimport seaborn as sns","4f9e7cdb":"plt.figure(figsize=(16,6))\nsns.heatmap(data=corr,linewidths=8,annot=True,fmt='f',cmap='rainbow',cbar=True)","7a8f8dd9":"plt.figure(figsize=(16,6))\nsns.heatmap(data=corr,linewidths=8,annot=True,fmt='f',cmap='rainbow',cbar=True,vmin=-1,vmax=1)","8d4e1eab":"df.head(2)","2f97bfad":"plt.figure(figsize=(20,6))\nplt.xlabel('Experience')\nplt.ylabel('Fees')\nplt.scatter(x=df['Experience'],y=df['Fees'],color='DarkGreen',marker='H')","ef422661":"plt.figure(figsize=(20,6))\nplt.xlabel('Experience')\nplt.ylabel('Rating')\nplt.scatter(x=df['Experience'],y=df['Rating'],color='DarkGreen',marker='+')","07f402d6":"plt.figure(figsize=(20,6))\nplt.ylabel('Fees')\nplt.xlabel('Rating')\nplt.scatter(y=df['Fees'],x=df['Rating'],color='DarkGreen',marker='+')","49c9434d":"from sklearn import linear_model","e027a988":"regression = linear_model.LinearRegression()\nregression.fit(df[['Experience']],df['Fees'])","6c1baf76":"df.head(2)","ad0711cf":"[df['Experience'][0]]","d524e316":"regression.predict([ [df['Experience'][0]],[12]])","ebb6816f":"m=regression.coef_  #slope (m)\nm","99f876e3":"b=regression.intercept_  # y-intercept (b)\nb","08b92b92":"#y=mx+b\ny=m*(df['Experience'][0])+b\nprint(y) # Fee's Predicted\nprint(df['Fees'][0]) #Fee's Actuall","81cae00c":"exp=np.array(df['Experience'])\nnew_exp=exp.reshape(-1,1) # I am telling like I don't know how many row are there but I need 1 column\nnew_exp","85745183":"df['predicted_fees']=regression.predict(new_exp).round()","35955836":"plt.figure(figsize=(20,6))\nplt.xlabel('Experience-Train')\nplt.ylabel('Predicted Fees-Train')\nplt.scatter(x=df['Experience'],y=df['predicted_fees'],color='Magenta',marker='H')","674a25d2":"plt.figure(figsize=(20,6))\nplt.ylabel('Predicted Fees-Train')\nplt.xlabel('Rating-Train')\nplt.scatter(y=df['predicted_fees'],x=df['Rating'],color='Maroon',marker='+')","e2b807bd":"df1 = pd.read_excel('..\/input\/doctor-fees-prediction\/Final_Test.xlsx')","e98949c0":"df1.head(2)","89376d21":"df1.shape","55d8ed94":"values = {\"Rating\": '0%', \"Miscellaneous_Info\": str()}\ndf1.fillna(value=values,limit=None,inplace=True)","8948a030":"df1['Rating']=df1['Rating'].str.replace(r'\\D+','', regex=True).astype(int)\ndf1['Experience']=df1['Experience'].str.replace(r'\\D+','', regex=True).astype(int)","b99400af":"df1.head(2)","d91d4559":"exp=np.array(df1['Experience'])\nnew_exp=exp.reshape(-1,1) # I am telling like I don't know how many row are there but I need 1 column\nnew_exp","2ce5a746":"##https:\/\/www.w3schools.com\/python\/numpy\/numpy_array_reshape.asp\n# import numpy as np\n# arr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])\n# newarr = arr.reshape(4, 3)\n# print(newarr)\n# newarr = arr.reshape(-1, 3)\n# print(newarr)\n# newarr = arr.reshape(4, -1)\n# print(newarr)\n# newarr = arr.reshape(-1, 1)\n# print(newarr)\n# newarr = arr.reshape(1, -1)\n# print(newarr)","d1abdf51":"df1['predicted_fees']=regression.predict(new_exp).round()","37f33180":"csv_data=df1[['Experience','Rating','predicted_fees']]\ndisplay(csv_data.head())","8b8ac494":"csv_data.to_csv('predicted_fees.csv',index=False)","8ac13be9":"plt.figure(figsize=(20,6))\nplt.xlabel('Experience-test')\nplt.ylabel('Predicted Fees-test')\nplt.scatter(x=df1['Experience'],y=df1['predicted_fees'],color='OrangeRed',marker='H')\n# plt.plot(df1['Experience'],df1['predicted_fees'],color='blue')","8041f55c":"plt.figure(figsize=(20,6))\nplt.ylabel('Predicted Fees-test')\nplt.xlabel('Rating-test')\nplt.scatter(y=df1['predicted_fees'],x=df1['Rating'],color='Navy',marker='+')","9a089c45":"# Predicted Column","d1b991e4":"# Load Test dataFrom diagram we came to know that Experience and Fee are fitted in positive manner","2f6fc10c":"From above diagram we know that rating of doctor increases but predicted fee of doctor is not high as compare to experience","ace51b6d":"# Regression linear_model\n\n1.1.1. Ordinary Least Squares\n","1f3260b1":"# Plot Linear_model-Train","642480fd":"#  Conclusion\n\nSo in conclusion Experience Doctor get more fees than rated doctor","614d8f13":"# How it works (y=mx+b)\n","8f34a0ae":"# To_csv\n","29aab28a":"From above heatmap diagram of correlation between Fees,Experience,Rating\nGreen color in diagram denote that they are not strongly related to each other ","e42e218d":"From diagram we came to know that Fee and rating are fitted in moderate manner when compare to experience","e2585b38":"# Regression","175e014b":"From diagram we came to know that Experience and Fee are fitted in positive manner","76bfc52a":"#  Clean Test data","7c11b6d4":"# Reshape Test\n","3c3c49df":"Correlation coefficient formulas are used to find how strong a relationship is between data. \n\nThe formulas return a value between -1 and 1, where:\n\n1 indicates a strong positive relationship.\n\n-1 indicates a strong negative relationship.\n\nA result of zero indicates no relationship at all.","ec3177ff":"# Plot Linear_model-Test","68581fcf":"From above diagram we know that if exprerience of doctor is higher our predicted fees is also higher","dd242f4c":"From above diagram I get that Experience of doctor doesn't related to fees charged by the doctor, Even low experience doctor is getting higher fees in our diagram\n\nIn our dataset we didn't have much data for doctor whose Experience is greater than 60 \n\nFrom given data it lead to my conclusion that doctor whose age greater than 60 didn't get much fees than other's lesser Experience people","3db3030f":"# correlation-coefficient-formula\n\nhttps:\/\/www.statisticshowto.com\/probability-and-statistics\/correlation-coefficient-formula\/\n","9b127f44":"REGULAR EXPRESSIONS WITH PYTHON - 2021\n\nhttps:\/\/www.bogotobogo.com\/python\/python_regularExpressions.php","ec6931f4":"# Reshape Train","35624ea7":"From above diagram I get that increase of Experience has no effect on Rating \n\nand doctor whose Experience greater than 50 given rating but not as much as other's","ef423b7e":"DataFrame.fillna(value=None, method=None, axis=None, inplace=False, limit=None, downcast=None)\n\n\nhttps:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.DataFrame.fillna.html","78ac5646":"# Predict Train data","dfd865a7":"In above diagram  0 in x axis are the doctor who didn't get rating from the patient\n\nSo we fail to get real rating for these doctor's to analysis\n\nAnd also we see that some of higher rated doctor are getting lower fee"}}