{"cell_type":{"392b3b21":"code","47a84ed3":"code","1c44ceec":"code","4075af82":"code","dba6e66b":"code","538338c4":"code","41d0441c":"code","c175b76d":"code","11bac643":"code","a1a9d060":"code","039e25bf":"code","83c18047":"code","5c66cbcb":"code","e541ac08":"code","1b8699fc":"code","bab2dc00":"code","18162602":"code","8ea0131e":"code","660e1d55":"code","7df67bc6":"code","9c720c71":"code","ae7eea42":"code","41d18956":"code","ea20db68":"code","d0c98aaf":"code","de206bba":"markdown","271ad8b7":"markdown","dbb19490":"markdown","f5ad7067":"markdown","59675b8f":"markdown","0fc5e54c":"markdown","ad8b857a":"markdown","3b7c8a12":"markdown","9ac84901":"markdown","66441ccb":"markdown","6d2372de":"markdown","844f2594":"markdown"},"source":{"392b3b21":"import numpy as np \nimport pandas as pd\nimport matplotlib\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline \nfrom wordcloud import WordCloud, STOPWORDS\nfrom nltk.sentiment import SentimentIntensityAnalyzer\nfrom textblob import TextBlob\nimport warnings\nwarnings.simplefilter(\"ignore\")","47a84ed3":"data_df = pd.read_csv(\"\/kaggle\/input\/reddit-wallstreetsbets-posts\/reddit_wsb.csv\")","1c44ceec":"data_df.head()","4075af82":"data_df.info()","dba6e66b":"def missing_data(data):\n    total = data.isnull().sum()\n    percent = (data.isnull().sum()\/data.isnull().count()*100)\n    tt = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n    types = []\n    for col in data.columns:\n        dtype = str(data[col].dtype)\n        types.append(dtype)\n    tt['Types'] = types\n    return(np.transpose(tt))","538338c4":"missing_data(data_df)","41d0441c":"def show_wordcloud(data, title=\"\"):\n    text = \" \".join(t for t in data.dropna())\n    stopwords = set(STOPWORDS)\n    stopwords.update([\"t\", \"co\", \"https\", \"amp\", \"U\", \"fuck\", \"fucking\"])\n    wordcloud = WordCloud(stopwords=stopwords, scale=4, max_font_size=50, max_words=500,background_color=\"black\").generate(text)\n    fig = plt.figure(1, figsize=(16,16))\n    plt.axis('off')\n    fig.suptitle(title, fontsize=20)\n    fig.subplots_adjust(top=2.3)\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.show()","c175b76d":"show_wordcloud(data_df['title'], title = 'Prevalent words in titles')","11bac643":"show_wordcloud(data_df['body'], title = 'Prevalent words in post bodies')","a1a9d060":"# borrowed from https:\/\/www.kaggle.com\/pashupatigupta\/sentiments-transformer-vader-embedding-bert\nsia = SentimentIntensityAnalyzer()\ndef find_sentiment(post):\n    if sia.polarity_scores(post)[\"compound\"] > 0:\n        return \"Positive\"\n    elif sia.polarity_scores(post)[\"compound\"] < 0:\n        return \"Negative\"\n    else:\n        return \"Neutral\"       ","039e25bf":"def plot_sentiment(df, feature, title):\n    counts = df[feature].value_counts()\n    percent = counts\/sum(counts)\n\n    fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12, 5))\n\n    counts.plot(kind='bar', ax=ax1, color='green')\n    percent.plot(kind='bar', ax=ax2, color='blue')\n    ax1.set_ylabel(f'Counts : {title} sentiments', size=12)\n    ax2.set_ylabel(f'Percentage : {title} sentiments', size=12)\n    plt.suptitle(f\"Sentiment analysis: {title}\")\n    plt.tight_layout()\n    plt.show()","83c18047":"data_df['title_sentiment'] = data_df['title'].apply(lambda x: find_sentiment(x))\nplot_sentiment(data_df, 'title_sentiment', 'Title')","5c66cbcb":"show_wordcloud(data_df.loc[data_df['title_sentiment']=='Positive', 'title'], title = 'Prevalent words in titles (Positive sentiment)')","e541ac08":"show_wordcloud(data_df.loc[data_df['title_sentiment']=='Negative', 'title'], title = 'Prevalent words in titles (Negative sentiment)')","1b8699fc":"show_wordcloud(data_df.loc[data_df['title_sentiment']=='Neutral', 'title'], title = 'Prevalent words in titles (Neutral sentiment)')","bab2dc00":"df = data_df.loc[~data_df.body.isna()]\ndf['body_sentiment'] = df['body'].apply(lambda x: find_sentiment(x))\nplot_sentiment(df, 'body_sentiment', 'Body')","18162602":"show_wordcloud(df.loc[df['body_sentiment']=='Positive', 'body'], title = 'Prevalent words in body (Positive sentiment)')","8ea0131e":"show_wordcloud(df.loc[df['body_sentiment']=='Negative', 'body'], title = 'Prevalent words in body (Negative sentiment)')","660e1d55":"show_wordcloud(df.loc[df['body_sentiment']=='Neutral', 'body'], title = 'Prevalent words in body (Neutral sentiment)')","7df67bc6":"def find_sentiment_polarity_textblob(post):\n    blob = TextBlob(post)\n    polarity = 0\n    for sentence in blob.sentences:\n        polarity += sentence.sentiment.polarity\n    return polarity\n\ndef find_sentiment_subjectivity_textblob(post):\n    blob = TextBlob(post)\n    subjectivity = 0\n    for sentence in blob.sentences:\n        subjectivity += sentence.sentiment.subjectivity\n    return subjectivity","9c720c71":"data_df['title_sentiment_polarity'] = data_df['title'].apply(lambda x: find_sentiment_polarity_textblob(x))\ndata_df['title_sentiment_subjectivity'] = data_df['title'].apply(lambda x: find_sentiment_subjectivity_textblob(x))","ae7eea42":"def plot_sentiment_textblob(df, feature, title):\n    polarity = df[feature+'_sentiment_polarity']\n    subjectivity = df[feature+'_sentiment_subjectivity']\n\n    fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12, 5))\n\n    polarity.plot(kind='kde', ax=ax1, color='magenta')\n    subjectivity.plot(kind='kde', ax=ax2, color='green')\n    ax1.set_ylabel(f'Sentiment polarity : {title}', size=12)\n    ax2.set_ylabel(f'Sentiment subjectivity: {title}', size=12)\n    plt.suptitle(f\"Sentiment analysis (polarity & subjectivity): {title}\")\n    plt.tight_layout()\n    plt.show()","41d18956":"plot_sentiment_textblob(data_df, \"title\", 'Title')","ea20db68":"df['body_sentiment_polarity'] = df['body'].apply(lambda x: find_sentiment_polarity_textblob(x))\ndf['body_sentiment_subjectivity'] = df['body'].apply(lambda x: find_sentiment_subjectivity_textblob(x))","d0c98aaf":"plot_sentiment_textblob(df, \"body\", 'Body')","de206bba":"### Body","271ad8b7":"Body of posts is missing in approximatively half of the data.","dbb19490":"# Sentiment analysis\n\n## With nltk SentimentIntensityAnalyzer","f5ad7067":"# Analysis preparation\n\nWe initialize the packages that we will use in the analysis.","59675b8f":"## Title","0fc5e54c":"We also look to things like data quality, for example missing data.","ad8b857a":"# Data visualization\n\n\nWe will use wordclouds to identify the most frequent words in the titles and body of the posts.\n\nFor understanding some of the frequent used terms, it will be useful to consult this resource: [Dissecting the Unique Lingo and Terminology used in the Subreddit r\/Wallstreetbets](https:\/\/www.wallstreetbets.shop\/blogs\/news\/dissecting-the-unique-lingo-and-terminology-used-in-the-subreddit-r-wallstreetbets)\n\nSome examples (from the resource mentioned above):  \n\n* GME - stock ticker symbol for GameStop. Recently users of r\/wallstreetbets have shifted their attention towards GameStop (GME) causing the stock to spike to record breaking highs. \n\n* Robinhood - Robinhood is an app commonly used by reddit wall st bets user's. This app has had glitches exploited by members of r\/Wallstreetbets in the past.  \n\n* WSB - WallStreetBets  \n\n* RH - Robinhood  \n\n* AMC - stock ticker symbol for AMC Entertainment Holdings Inc, an alternative target for WSB.  \n\n* NOK - stock ticker symbol for Nokia, an alternative target for WSB.  \n\n","3b7c8a12":"We read and glimpse the data.","9ac84901":"## With TextBlob","66441ccb":"### Title","6d2372de":"## Body","844f2594":"# Introduction\n\nFrom Wikipedia: [r\/wallstreetbets](https:\/\/www.reddit.com\/r\/wallstreetbets\/), also known as WallStreetBets or WSB, is a subreddit where participants discuss stock and option trading. It has become notable for its profane nature and allegations of users manipulating securities.\n\n<center><img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/en\/f\/f0\/WallStreetBets.png\" width=600><\/img><\/center>"}}