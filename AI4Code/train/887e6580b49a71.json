{"cell_type":{"c2596cfd":"code","113b6f0c":"code","321c53b7":"code","e588dc72":"code","a84520f5":"code","b91d02e6":"code","29299d6e":"code","c4e37b41":"code","fb5c8444":"code","9b87e573":"markdown","59ca8d65":"markdown","b75e4dfb":"markdown","b36b2ab5":"markdown","d8af4b66":"markdown"},"source":{"c2596cfd":"import matplotlib.pyplot as plt # plotting\nimport numpy as np # linear algebra\nimport os # accessing directory structure\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn","113b6f0c":"data_partitions_dirpath = '..\/input\/random_split\/random_split'\nprint('Available dataset partitions: ', os.listdir(data_partitions_dirpath))","321c53b7":"def read_all_shards(partition='dev', data_dir=data_partitions_dirpath):\n    shards = []\n    for fn in os.listdir(os.path.join(data_dir, partition)):\n        with open(os.path.join(data_dir, partition, fn)) as f:\n            shards.append(pd.read_csv(f, index_col=None))\n    return pd.concat(shards)\n\ntest = read_all_shards('test')\ndev = read_all_shards('dev')\ntrain = read_all_shards('train')\n\npartitions = {'test': test, 'dev': dev, 'train': train}\nfor name, df in partitions.items():\n    print('Dataset partition \"%s\" has %d sequences' % (name, len(df)))","e588dc72":"dev.head()","a84520f5":"dev.groupby('family_id').size().sort_values(ascending=False).head(10)","b91d02e6":"for name, partition in partitions.items():\n    partition.groupby('family_id').size().hist(bins=50)\n    plt.title('Distribution of family sizes for %s' % name)\n    plt.ylabel('# Families')\n    plt.xlabel('Family size')\n    plt.show()","29299d6e":"dev['alignment_length'] = dev.aligned_sequence.str.len()\ndev.alignment_length.hist(bins=30)\nplt.title('Distribution of alignment lengths')\nplt.xlabel('Alignment length')\nplt.ylabel('Number of sequences')","c4e37b41":"family_lengths = (dev[['family_id', 'alignment_length']]\n                  .drop_duplicates()\n                  .sort_values(by='alignment_length', ascending=False))\n\nfamily_lengths.head(5)","fb5c8444":"family_lengths.tail(5)","9b87e573":"### Find the families with the most sequences","59ca8d65":"### Find the families with the longest alignment length","b75e4dfb":"## Loading the data","b36b2ab5":"and you can also find the smallest alignment lengths in the dataset","d8af4b66":"## Pfam seed random split"}}