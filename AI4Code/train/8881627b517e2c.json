{"cell_type":{"1ca7077f":"code","cc73dd7c":"code","66dbeb3e":"code","ae307080":"code","75827e14":"code","a0af6852":"code","f53f61eb":"code","2d65ea2f":"code","a59caccc":"code","33a38215":"code","f943b678":"code","8f5e42db":"code","34997da1":"code","61bf6ab8":"code","48df3f82":"code","c9ca196f":"code","3517f2cd":"markdown","0c57a227":"markdown","4c6be580":"markdown"},"source":{"1ca7077f":"# linear algebra\nimport numpy as np \n# data processing, CSV file I\/O ...\nimport pandas as pd ","cc73dd7c":"# list files\n! ls ..\/input\/list-of-isro-satellites","66dbeb3e":"# read data\ndf = pd.read_csv('..\/input\/list-of-isro-satellites\/raw.csv')\ndf.head()","ae307080":"df.info()","75827e14":"df.describe(include='all')","a0af6852":"launch_mass_in_kg = df['Launch Mass'].str.extract('([0-9,.]*)')[0]\nlaunch_mass_in_kg = launch_mass_in_kg.str.replace(',', '')\nlaunch_mass_in_kg = pd.to_numeric(launch_mass_in_kg, errors='coerce')\n\ndf['Launch Mass'] = launch_mass_in_kg\ndf = df.rename(columns={\"Launch Mass\": \"Launch Mass in kg\"})","f53f61eb":"# dry mass in kg\n\ndry_mass_in_kg = df['Dry Mass'].str.extract('([0-9,.]*)')[0]\ndry_mass_in_kg = dry_mass_in_kg.str.replace(',', '')\ndry_mass_in_kg = pd.to_numeric(dry_mass_in_kg, errors='coerce')\n\ndf['Dry Mass'] = dry_mass_in_kg\ndf = df.rename(columns={\"Dry Mass\": \"Dry Mass in kg\"})","2d65ea2f":"on_board_power_in_W = df['On-board Power'].str.extract('(\\d*)')[0]\non_board_power_in_W = pd.to_numeric(on_board_power_in_W, errors='coerce')\n\ndf['On-board Power'] = on_board_power_in_W\ndf = df.rename(columns={\"On-board Power\": \"On-board Power in W\"})","a59caccc":"launch_date = df['Launch Date'].str.extract('(\\d+ [A-Za-z]+ \\d{4})')[0]\nlaunch_date = pd.to_datetime(launch_date, errors='coerce')\n\nlaunch_time = df['Launch Date'].str.extract('(\\d{1,2}\\:\\d{1,2}(\\:\\d{1,2})?)')[0]\n\nlaunch_time_zone = df['Launch Date'].str.extract('([A-Z]{3})')[0]\n\ndf['Launch Date'] = launch_date\ndf['Launch Time'] = launch_time\ndf['Launch Timezone'] = launch_time_zone","33a38215":"periapsis_in_km = df['Periapsis'].str.extract('([0-9,.]*)')[0].str.replace(',', '')\nperiapsis_in_km = pd.to_numeric(periapsis_in_km, errors='coerce')\n\napoapsis_in_km = df['Apoapsis'].str.extract('([0-9,.]*)')[0].str.replace(',', '')\napoapsis_in_km = pd.to_numeric(apoapsis_in_km, errors='coerce')\n\nsemi_major_axis_in_km = df['Semi-Major Axis'].str.extract('([0-9,.]*)')[0].str.replace(',', '')\nsemi_major_axis_in_km = pd.to_numeric(semi_major_axis_in_km, errors='coerce')\n\ndf['Periapsis'] = periapsis_in_km\ndf['Apoapsis'] = apoapsis_in_km\ndf['Semi-Major Axis'] = semi_major_axis_in_km\n\ndf = df.rename(columns={\"Periapsis\": \"Periapsis in km\", \n                        \"Apoapsis\": \"Apoapsis in km\", \n                        \"Semi-Major Axis\": \"Semi-Major Axis in km\"})","f943b678":"period = df['Period'].str.replace(' (mins|minutes).*', '')\nperiod = period.str.replace(',', '')\nperiod = pd.to_numeric(period, errors='coerce')\ndf['Period'] = period","8f5e42db":"inclinations_in_degrees = df['Inclination'].str.replace('[^0-9.]', '')\ninclinations_in_degrees = pd.to_numeric(inclinations_in_degrees, errors='coerce')\ndf['Inclination'] = inclinations_in_degrees","34997da1":"epoch_date = df['Epoch Start'].str.extract('(\\d+ [A-Za-z]+ \\d{4})')[0]\nepoch_date = pd.to_datetime(launch_date, errors='coerce')\n\nepoch_time = df['Epoch Start'].str.extract('(\\d{1,2}\\:\\d{1,2}(\\:\\d{1,2})?)')[0]\n\nepoch_time_zone = df['Epoch Start'].str.extract('([A-Z]{3})')[0]\n\ndf['Epoch Start Date'] = epoch_date\ndf['Epoch Start Time'] = epoch_time\ndf['Epoch Start Timezone'] = epoch_time_zone","61bf6ab8":"decay_date = pd.to_datetime(df['Decay Date'], errors='coerce')\ndf['Decay Date'] = decay_date","48df3f82":"launch_vehicle_type = df['Launch Vehicle'].str.split('-| ').str[0]\ndf['Launch Vehicle Type'] = launch_vehicle_type\nlaunch_vehicle_type.value_counts()","c9ca196f":"pd.DataFrame(launch_vehicle_type.value_counts()).plot(kind='bar')","3517f2cd":"# Libraries","0c57a227":"# Data Cleaning","4c6be580":"# Data"}}