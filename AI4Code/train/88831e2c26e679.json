{"cell_type":{"7f96370e":"code","086af8a8":"code","822eee30":"code","81e42340":"code","5ddd5b21":"code","07e49208":"code","7b347e98":"code","eb036de0":"code","7fa6b471":"code","b1ff92ca":"code","d5f19b6f":"code","8886f80a":"code","4d7f9888":"code","bf886101":"code","7e30f7cf":"code","aedc878f":"code","c09de3a9":"code","2eb08486":"markdown","55dd7401":"markdown","5af43166":"markdown","574d0c5f":"markdown","91ceb4e9":"markdown","ce365b71":"markdown","8944c2ad":"markdown","c51151ce":"markdown","7add3aee":"markdown","218ae013":"markdown","12036dbb":"markdown","7ba73037":"markdown","1990ff63":"markdown","10e9458f":"markdown","7232b898":"markdown","160743b6":"markdown","13a13da5":"markdown","071442bc":"markdown","3514964d":"markdown","324a1bee":"markdown","023a21f1":"markdown","d03f9828":"markdown","42277a68":"markdown","6b84afda":"markdown"},"source":{"7f96370e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","086af8a8":"# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","822eee30":"# Input data file\ntweets = pd.read_csv('..\/input\/tweets.csv')\n","81e42340":"#Separating out the time variable by Hour, Day, Month and Year \n#for further analysis using datetime package\nimport datetime as dt\ntweets['time'] = pd.to_datetime(tweets['time'])\ntweets['hour'] = tweets['time'].apply(lambda x: x.hour)\ntweets['month'] = tweets['time'].apply(lambda x: x.month)\ntweets['day'] = tweets['time'].apply(lambda x: x.day)\ntweets['year'] = tweets['time'].apply(lambda x: x.year)\n","5ddd5b21":"tweets.head(5)","07e49208":"#Total number of tweets by both of the twitter handles\nsns.countplot(x='handle', data = tweets)","7b347e98":"fig, (axis1,axis2) = plt.subplots(1,2,figsize=(15,3))\n\n#Total number of original tweets and retweets for each of the contender\nretweet_hc = tweets.loc[(tweets['handle']=='HillaryClinton'), ['is_retweet']]\nretweet_dt = tweets.loc[(tweets['handle']=='realDonaldTrump'), ['is_retweet']]\nax1 = sns.countplot(retweet_hc['is_retweet'], palette='rainbow', ax=axis1)\nax1.set_title(\"HillaryClinton's tweets\")\nax1.set(xticklabels=[\"Tweets\",\"Retweets\"])\n\nax2 = sns.countplot(retweet_dt['is_retweet'], palette=\"Set1\", ax=axis2)\nax2.set_title(\"realDonaldTrump's tweets\")\nax2.set(xticklabels=[\"Tweets\",\"Retweets\"])","eb036de0":"#Number of tweets by the months\nmonthly_tweets = tweets.groupby(['month', 'handle']).size().unstack()\nmonthly_tweets.plot(title='Monthly Tweet Counts', colormap='winter')","7fa6b471":"#Number of tweets daily\ndaily_tweets = tweets.groupby(['day', 'handle']).size().unstack()\ndaily_tweets.plot(title='Daily Tweet Counts')","b1ff92ca":"#Number of tweets hourly\nhourly_tweets = tweets.groupby(['hour', 'handle']).size().unstack()\nhourly_tweets.plot(title='Hourly Tweet Counts', colormap='coolwarm')","d5f19b6f":"from wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\n\ntweets_hillary=tweets.loc[(tweets['handle']=='HillaryClinton'),['text']]\ntweets_trump=tweets.loc[(tweets['handle']=='realDonaldTrump'),['text']]","8886f80a":"stopwords = set(STOPWORDS)\nstopwords.add(\"http\")\nstopwords.add(\"https\")\nstopwords.add(\"amp\")\nstopwords.add(\"CO\")\nstopwords.add(\"Trump\")\nstopwords.add(\"Trump2016\")\nstopwords.add(\"Donald\")\nstopwords.add(\"Clinton\")\nstopwords.add(\"Hillary\")\nstopwords.add(\"realDonaldTrump\")\nstopwords.add(\"will\")\nstopwords.add(\"say\")\nstopwords.add(\"said\")\nstopwords.add(\"let\")\nstopwords.add(\"vote\")\nstopwords.add(\"now\")\nstopwords.add(\"go\")","4d7f9888":"wordcloud_hc = WordCloud(background_color='white',max_font_size=46, relative_scaling=0.5,stopwords=stopwords).generate(tweets_hillary['text'].str.cat())\nplt.figure()\nplt.imshow(wordcloud_hc)\nplt.axis(\"off\")\nplt.show()","bf886101":"wordcloud_dt = WordCloud(max_font_size=42, relative_scaling=.5,stopwords=stopwords).generate(tweets_trump['text'].str.cat())\nplt.figure()\nplt.imshow(wordcloud_dt)\nplt.axis(\"off\")\nplt.show()","7e30f7cf":"from textblob import TextBlob\n\nbloblist_desc = list()\n\ndf_tweet_descr_str=tweets['text'].astype(str)\nfor row in df_tweet_descr_str:\n    blob = TextBlob(row)\n    bloblist_desc.append((row,blob.sentiment.polarity, blob.sentiment.subjectivity))\n    df_tweet_polarity_desc = pd.DataFrame(bloblist_desc, columns = ['sentence','sentiment','polarity'])\n \ndef f(df_tweet_polarity_desc):\n    if df_tweet_polarity_desc['sentiment'] > 0:\n        val = \"Positive\"\n    elif df_tweet_polarity_desc['sentiment'] == 0:\n        val = \"Neutral\"\n    else:\n        val = \"Negative\"\n    return val\n\ndf_tweet_polarity_desc['Sentiment_Type'] = df_tweet_polarity_desc.apply(f, axis=1)\n\nplt.figure(figsize=(10,10))\nsns.set_style(\"whitegrid\")\nax = sns.countplot(x=\"Sentiment_Type\", data=df_tweet_polarity_desc)","aedc878f":"tweet_clinton = tweets.loc[(tweets['handle']=='HillaryClinton'), ['text']]\nbloblist_desc = list()\n\ndf_tweet_clinton_str=tweet_clinton['text'].astype(str)\nfor row in df_tweet_clinton_str:\n    blob = TextBlob(row)\n    bloblist_desc.append((row,blob.sentiment.polarity, blob.sentiment.subjectivity))\n    df_tweet_clinton_polarity_desc = pd.DataFrame(bloblist_desc, columns = ['sentence','sentiment','polarity'])\n \ndef f(df_tweet_clinton_polarity_desc):\n    if df_tweet_clinton_polarity_desc['sentiment'] > 0:\n        val = \"Positive\"\n    elif df_tweet_clinton_polarity_desc['sentiment'] == 0:\n        val = \"Neutral\"\n    else:\n        val = \"Negative\"\n    return val\n\ndf_tweet_clinton_polarity_desc['Sentiment_Type'] = df_tweet_clinton_polarity_desc.apply(f, axis=1)\n\nplt.figure(figsize=(10,10))\nsns.set_style(\"whitegrid\")\nax = sns.countplot(x=\"Sentiment_Type\", data=df_tweet_clinton_polarity_desc)\n          \n","c09de3a9":"tweet_trump = tweets.loc[(tweets['handle']=='realDonaldTrump'), ['text']]\nbloblist_desc = list()\n\ndf_tweet_trump_str=tweet_trump['text'].astype(str)\nfor row in df_tweet_trump_str:\n    blob = TextBlob(row)\n    bloblist_desc.append((row,blob.sentiment.polarity, blob.sentiment.subjectivity))\n    df_tweet_trump_polarity_desc = pd.DataFrame(bloblist_desc, columns = ['sentence','sentiment','polarity'])\n \ndef f(df_tweet_trump_polarity_desc):\n    if df_tweet_trump_polarity_desc['sentiment'] > 0:\n        val = \"Positive\"\n    elif df_tweet_trump_polarity_desc['sentiment'] == 0:\n        val = \"Neutral\"\n    else:\n        val = \"Negative\"\n    return val\n\ndf_tweet_trump_polarity_desc['Sentiment_Type'] = df_tweet_trump_polarity_desc.apply(f, axis=1)\n\nplt.figure(figsize=(10,10))\nsns.set_style(\"whitegrid\")\nax = sns.countplot(x=\"Sentiment_Type\", data=df_tweet_trump_polarity_desc)","2eb08486":"# 7. Conclusion","55dd7401":"# 4.1 Overall Tweets and Retweets visualization ","5af43166":"# The words Clinton used the most","574d0c5f":"# Clinton Sentiment analysis","91ceb4e9":"Launay Christian & Alfred Chantharath\n\n20\/10\/2018\n\n* 1 Introduction\n* 2 Data Source\n* 3 Preparation\n* 4 Data Content: First 5 Rows\n* 4.1 Overall Tweets and Retweets view \n* 5 Time Analysis \n* 6 Text Mining\n* 6.1 Sentiment Analysis\n* 7 Conclusion","ce365b71":"Unlike what we could have think, most of the tweets are postive and neutral. we know are going to focus on each candidates .","8944c2ad":"# 4.Data Content: First 5 Rows\u00b6\n ","c51151ce":"It's really interesting to see that Donald Trump has a really large number of positive tweets , their represent nearly the double of his neutral or negative tweets ","7add3aee":"It's interesting to see that Hillary Clinton has a large number of neutral tweets , it maybe was a choice for her campain . ","218ae013":"# 5. Time Analysis of the number of tweets  ","12036dbb":"#  Clinton and Trump election Tweets Analysis\n","7ba73037":"# 3. Preparation","1990ff63":"# 6.1 Sentiment Analysis","10e9458f":"# The words  Trump used the most","7232b898":"# 1. Introduction\n\nthe 2016 US Presidential Election is one of the most publicized in the history and Twitter has played an increasingly prominent role in it. Debates have raged and candidates have risen and fallen based on tweets.\n\nSo we finded interesting to analyse the tweets tendency per device and the sentiments communicate in them .","160743b6":"# 6. Text mining \n\n","13a13da5":"Hillary Clinton tweets start in april meanwhile Donald Trump has started in january that's why he have more tweets than Clinton's . Moreover it's interesting to see the hourly tweets tendency , canditates tend to communicate more in the afternoon and the night .","071442bc":"from this we can say that Donald Trump has used a little a bit more twitter than Hillary Clinton but Clinton's tweets have been more retweeted than Trump's one ","3514964d":"The TextBlop package contains several sentiment lexicons in the sentiments dataset.\n\n\n","324a1bee":"sentiment analysis can be really usefull to break down a comportement, a tendency that would not have been an intuitive one at the first insight . this was our first text analysis we will continue this work in the following weeks ","023a21f1":"# Sentiment Analysis on the entiere dataset ","d03f9828":"# Trump Sentiment Analysis","42277a68":"# Categorize the text column into Positive and Negative sentiments using TextBlob\n\n","6b84afda":"# 2. Data Source \n\nwe used the Hillary Clinton and Donald Trump Tweets dataset which contain ~3000 recent tweets from Hillary Clinton and Donald Trump, the two major-party presidential nominees.\n\n"}}