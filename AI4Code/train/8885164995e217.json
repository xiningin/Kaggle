{"cell_type":{"32f7a4bb":"code","f4b787bb":"code","e28f4f27":"code","fe4847da":"code","94b82c17":"code","bc931c1e":"code","f59792ab":"code","744c6f91":"code","cc3eac90":"code","29d09079":"code","79350c56":"code","5da48d09":"code","6cb36f3c":"markdown"},"source":{"32f7a4bb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f4b787bb":"import numpy as np\nimport pandas as pd\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.svm import LinearSVC\nfrom sklearn.metrics import mean_squared_error","e28f4f27":"# Read the data(train)\ntrain = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ncolumns_data=['LotArea','YearBuilt','1stFlrSF','2ndFlrSF','FullBath','BedroomAbvGr','TotRmsAbvGrd']\ntrain_X=train[columns_data]\ntrain_y=train.SalePrice","fe4847da":"#SVM\nsvm_clf = Pipeline([\n    (\"scaler\", StandardScaler()),\n    (\"linear_svc\", LinearSVC(C=1, loss=\"hinge\")),\n    ])\n\nsvm_clf.fit(train_X,train_y)\n","94b82c17":"#linear regression\nfrom sklearn.linear_model import LinearRegression\nlm = LinearRegression()\nlm.fit(train_X,train_y)","bc931c1e":"#polynominal\nfrom sklearn.preprocessing import PolynomialFeatures\npoly_features = PolynomialFeatures(degree=2, include_bias=False)\nX_poly = poly_features.fit_transform(train_X)\nlin_reg = LinearRegression()\nlin_reg.fit(X_poly, train_y)","f59792ab":"# Read the test data\ntest = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')\ntest_X=test[columns_data]","744c6f91":"#SVM\n# Use the model to make predictions\npredicted_prices = svm_clf.predict(test_X)\n# We will look at the predicted prices to ensure we have something sensible.\nprint(predicted_prices)","cc3eac90":"#linear regressor\npredictions = lm.predict(test_X)\nprint(predictions)","29d09079":"#polynomial\nX_test_poly = poly_features.fit_transform(test_X)\ny_pred = lin_reg.predict(X_test_poly)\ny=train_y.drop([1459])","79350c56":"from sklearn import metrics\nprint('SVM MSE:',metrics.mean_squared_error(y,predicted_prices))\nprint('Linear Regressor MSE:',metrics.mean_squared_error(y,predictions))\nprint('Polynomial MSE:',metrics.mean_squared_error(y,y_pred))","5da48d09":"my_submission = pd.DataFrame({'Id': test.Id, 'SalePrice': predictions})\nmy_submission.head()\nmy_submission.to_csv('Hw1_Predicted_Prices.csv',header=True, index=False)","6cb36f3c":"From the MSE, we descide to choose linear regressor."}}