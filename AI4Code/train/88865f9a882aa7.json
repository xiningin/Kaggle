{"cell_type":{"8db332a6":"code","666d8425":"code","31a294e9":"code","93258e52":"code","d0c94245":"code","79af510d":"code","f6ee01ca":"code","27470616":"code","fa007198":"code","150b4e90":"code","200935d0":"code","dacb8ec8":"code","d4e5e2e0":"code","6835fc95":"markdown","c5fca0af":"markdown","6f409d5d":"markdown","49c63140":"markdown","aed87f83":"markdown","6a765e72":"markdown","68bf927b":"markdown","74e40167":"markdown","bb89749c":"markdown","cf5995d6":"markdown","b97d9a6b":"markdown","178643ad":"markdown"},"source":{"8db332a6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","666d8425":"df=pd.read_csv('\/kaggle\/input\/tufetufe\/tufe.csv')\ndata_months=df.ay\ny=data_months.values","31a294e9":"year = df.iloc[:,0].values.reshape(-1,1)\nmonths = df.iloc[:,1].values.reshape(-1,1)\ninflation=df.iloc[:,2].values.reshape(-1,1)","93258e52":"GuessRange=np.arange(1,24).reshape(-1,1)","d0c94245":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(months,inflation,test_size=0.33,random_state=1)","79af510d":"from sklearn.linear_model import LinearRegression\nlr=LinearRegression()\nlr.fit(x_train,y_train)\nguess=lr.predict(GuessRange)","f6ee01ca":"from sklearn.preprocessing import PolynomialFeatures\npoly_reg=PolynomialFeatures(degree=2)\nmonth_poly=poly_reg.fit_transform(months)\nlinreg_inflation=LinearRegression()\nlinreg_inflation.fit(month_poly,inflation)\nResults_inflation=linreg_inflation.predict(poly_reg.fit_transform(GuessRange))\nprint(\"Guess of Inflation:\",Results_inflation)","27470616":"plt.scatter(GuessRange, Results_inflation, color='red',label=\"Guess Inflation\")\nplt.plot(GuessRange, Results_inflation, color='blue',label=\"Guess Inflation\")\nplt.xlabel(\"Months\")\nplt.ylabel(\"Inflation\")\nplt.legend()","fa007198":"sns.kdeplot(df[\"ay\"],df[\"enflasyon\"],shade=True,cmap=\"Blues\")","150b4e90":"df","200935d0":"plt.scatter(df.ay,df.enflasyon)\nplt.xlabel(\"Months\")\nplt.ylabel(\"Inflation\")\nplt.show()","dacb8ec8":"from sklearn.linear_model import LinearRegression\n\nlinear_reg = LinearRegression()\n\nx = df.ay.values.reshape(-1,1)\ny = df.enflasyon.values.reshape(-1,1)\n\nlinear_reg.fit(x,y)\n\ny_head = linear_reg.predict(y)  \n\nplt.plot(x, y_head,color = \"Red\")\n","d4e5e2e0":"from sklearn.metrics import r2_score\n\nprint(\"r_square score: \", r2_score(y,y_head))\n","6835fc95":"## Range of Guess","c5fca0af":"# Bonus with ML","6f409d5d":"## Linear Regression","49c63140":"## R2 Score","aed87f83":"## Train & Test","6a765e72":"## Calculation","68bf927b":"## Mark Columns","74e40167":"## Visualization (Matplotlib)","bb89749c":"# Read File","cf5995d6":"## Visualization (Seaborn)","b97d9a6b":"### !Guess of Top 4 Months is same true index ","178643ad":"## Beginning with Polynomial"}}