{"cell_type":{"a436f7f2":"code","47e0ba1d":"code","06db17cb":"code","bc3f55ea":"code","1207e5bc":"code","db2fb2fe":"code","5f9c010a":"code","f6519470":"code","98f74a4c":"code","b00fbee4":"code","b4c0f5c3":"code","04dd0576":"code","b9a50fe5":"code","d6ff9eb2":"code","f05d138e":"code","5f3e1f59":"code","b09d907e":"markdown","772611c1":"markdown","ddbd9e57":"markdown","18fe402f":"markdown","430c675a":"markdown","706797f0":"markdown","658ce63c":"markdown","dc785465":"markdown","80ff1333":"markdown","2fa6d105":"markdown","dce16a47":"markdown","6fd58065":"markdown","11411ee9":"markdown"},"source":{"a436f7f2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\nimport matplotlib.pyplot as plt\nimport seaborn as sns","47e0ba1d":"df=pd.read_csv(\"\/kaggle\/input\/billboard-the-hot-100-songs\/charts.csv\")","06db17cb":"df.head()","bc3f55ea":"df.info()","1207e5bc":"df.describe()","db2fb2fe":"df.shape","5f9c010a":"df.isna().sum()","f6519470":"df[\"last-week\"]=df[\"last-week\"].fillna(df[\"last-week\"]).median()","98f74a4c":"df.isna().sum()","b00fbee4":"df[\"date\"]=pd.DatetimeIndex(df[\"date\"])","b4c0f5c3":"df[\"year\"]=pd.DatetimeIndex(df[\"date\"]).year","04dd0576":"df[\"month\"]=pd.DatetimeIndex(df[\"date\"]).month","b9a50fe5":"x=df.groupby(by=df[\"song\"])[\"year\"].value_counts().sort_values(ascending=False)\nx.head(10).plot(kind=\"bar\")","d6ff9eb2":"x=df.groupby(by=df[\"artist\"])[\"year\"].value_counts().sort_values(ascending=False)\nx.head(10).plot(kind=\"bar\")","f05d138e":"df[(df[\"year\"]==2021) & (df[\"rank\"]==1)]","5f3e1f59":"df[(df[\"year\"]==2021) & (df[\"rank\"]==1) & (df[\"month\"]==1)]","b09d907e":"## Check the null values","772611c1":"## Let's do some analysis","ddbd9e57":"## 03. Top songs & artist of year 2021","18fe402f":"## Let's Handle that First\n## Impute the missing values","430c675a":"## Let's get the imformation about the data set","706797f0":"## So as we can see we clean the data .\n## There is no null values present in the data set","658ce63c":"## 01.Top 10 Featured songs of all time","dc785465":"## 1st change the date column in Time stamp\n   - so that we can make a new columns YEAR & Month","80ff1333":"## 04.Top songs & artist of JAN. Month of year 2021","2fa6d105":"## Import Dataset","dce16a47":"## 02. Top 10  Featured Artist Of All Time","6fd58065":"## Import libraries","11411ee9":"## AS we can see some of the data is missing from last_week column"}}