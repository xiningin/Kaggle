{"cell_type":{"f5f53bf4":"code","b9a76e03":"code","5fa95ab2":"code","ba6a564b":"code","1b339411":"code","66e9a471":"code","c759ee42":"code","4bd569eb":"code","e6582e9f":"code","78ab0a90":"code","324f3fbd":"code","3277c027":"code","d76c3262":"code","c3dd9c1d":"code","464c9ea0":"code","d3870b62":"code","abc28586":"code","c78f52b6":"code","398fd8b0":"code","c2e85103":"code","fcea554a":"code","3f3d4af5":"code","72d1c126":"code","a4e425b3":"code","3d0d06f2":"markdown","24925b47":"markdown","d216005e":"markdown","e8f2a2cf":"markdown","4f5ceec2":"markdown","93eafc19":"markdown","b9fa858b":"markdown","21c7c34a":"markdown","57a24b34":"markdown","926d3432":"markdown","cf07ad28":"markdown","ce893d75":"markdown"},"source":{"f5f53bf4":"import numpy as np\nimport pandas as pd \n\ntrain = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv('..\/input\/titanic\/test.csv')\n\n#1. delete unnecessary columns\ndrop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Parch']\ntrain = train.drop(drop_elements, axis = 1)\ntest = test.drop(drop_elements, axis = 1)\n\n#2.find null data and fill new data \ndef checkNull_fillData(df):\n    for col in df.columns:\n        if len(df.loc[df[col].isnull() == True]) != 0:\n            if df[col].dtype == \"float64\" or df[col].dtype == \"int64\":\n                df.loc[df[col].isnull() == True,col] = df[col].mean()\n            else:\n                df.loc[df[col].isnull() == True,col] = df[col].mode()[0]\n                \ncheckNull_fillData(train)\ncheckNull_fillData(test)\n\n#3.one hot encoding \nstr_list = [] \nnum_list = []\nfor colname, colvalue in train.iteritems():\n    if type(colvalue[1]) == str:\n        str_list.append(colname)\n    else:\n        num_list.append(colname)\n        \ntrain = pd.get_dummies(train, columns=str_list)\ntest = pd.get_dummies(test, columns=str_list)\n\ntrain.columns","b9a76e03":"import seaborn as sns","5fa95ab2":"x = 'Age'\ny = 'Fare'","ba6a564b":"kind = 'scatter'\nsns.jointplot(x=train[x], y=train[y], kind = kind)","1b339411":"kind = 'hist'\nsns.jointplot(x=train[x], y=train[y], kind = kind)","66e9a471":"kind = 'hex'\nsns.jointplot(x=train[x], y=train[y], kind = kind)","c759ee42":"kind = 'reg'\nsns.jointplot(x=train[x], y=train[y], kind = kind)","4bd569eb":"kind = 'resid'\nsns.jointplot(x=train[x], y=train[y], kind = kind)","e6582e9f":"x = 'Pclass'\ny = 'Fare'","78ab0a90":"kind = 'scatter'\nsns.jointplot(x=train[x], y=train[y], kind = kind)","324f3fbd":"kind = 'hist'\nsns.jointplot(x=train[x], y=train[y], kind = kind)","3277c027":"kind = 'hex'\nsns.jointplot(x=train[x], y=train[y], kind = kind)","d76c3262":"kind = 'reg'\nsns.jointplot(x=train[x], y=train[y], kind = kind)","c3dd9c1d":"kind = 'resid'\nsns.jointplot(x=train[x], y=train[y], kind = kind)","464c9ea0":"x = 'Age'\ny = 'Fare'","d3870b62":"g = sns.JointGrid(data=train, x=x, y=y)\ng.plot(sns.scatterplot, sns.histplot)","abc28586":"g = sns.JointGrid(data=train, x=x, y=y)\ng.plot(sns.kdeplot, sns.histplot)","c78f52b6":"g = sns.JointGrid(data=train, x=x, y=y)\ng.plot(sns.boxplot, sns.histplot)","398fd8b0":"g = sns.JointGrid(data=train, x=x, y=y)\ng.plot(sns.regplot, sns.histplot)","c2e85103":"x = 'Pclass'\ny = 'Fare'","fcea554a":"g = sns.JointGrid(data=train, x=x, y=y)\ng.plot(sns.scatterplot, sns.histplot)","3f3d4af5":"g = sns.JointGrid(data=train, x=x, y=y)\ng.plot(sns.kdeplot, sns.histplot)","72d1c126":"g = sns.JointGrid(data=train, x=x, y=y)\ng.plot(sns.boxplot, sns.histplot)","a4e425b3":"g = sns.JointGrid(data=train, x=x, y=y)\ng.plot(sns.regplot, sns.histplot)","3d0d06f2":"# 1.2 Pclass and Fare","24925b47":"# 1.jointplot","d216005e":"# import + load + preprocess","e8f2a2cf":"### kind type:  scatter', 'hist', 'hex', 'kde', 'reg', 'resid'","4f5ceec2":"# 2.Joint Grid","93eafc19":"# JointGrid","b9fa858b":"## 1.1 Age and Fare","21c7c34a":"## 2.2 Pclass and Fare","57a24b34":"## 2.1 Age and Fare","926d3432":"# seaborn jointplot","cf07ad28":"Grid for drawing a bivariate plot with marginal univariate plots.\n\nMany plots can be drawn by using the figure-level interface jointplot(). \n\n### Use this class directly when you need more flexibility.","ce893d75":"Draw a plot of \n### two variables with bivariate and univariate graphs.\n\nThis function provides a convenient interface to the JointGrid class, with several canned plot kinds. \n\nThis is intended to be a fairly lightweight wrapper\n\nif you need more flexibility, you should use JointGrid directly."}}