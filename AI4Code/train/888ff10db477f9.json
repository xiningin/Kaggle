{"cell_type":{"37ddb9e3":"code","1e649fb3":"code","dd262e88":"code","59228097":"code","d39685f6":"code","af490ba3":"code","89ed2935":"code","fd81ca5c":"code","02f01c8d":"code","3f344765":"code","a6141cc0":"code","4445b8ad":"code","e5ab319a":"code","e722cbe6":"code","6c4ef9eb":"code","7de9c2f2":"code","6e552104":"code","c14c3154":"code","7561b611":"code","b00aa6a2":"code","6f96c473":"code","4e28867c":"markdown","66631cb6":"markdown","35bbd719":"markdown","d4c99c4d":"markdown","78823f87":"markdown","14d50052":"markdown","11528e29":"markdown","dbab5119":"markdown","e7e13590":"markdown","5b4621fe":"markdown","59586e1b":"markdown","d207cfde":"markdown","ad64f77f":"markdown","c1d5fdcb":"markdown","73ba548a":"markdown","b6005be6":"markdown","dc8b47f5":"markdown","de19fc28":"markdown","ead1d9fd":"markdown","93a38116":"markdown","ce75c340":"markdown","124ff8ea":"markdown","0f4f4d19":"markdown","ba0c512a":"markdown"},"source":{"37ddb9e3":"# To prevent the annoying warning from scikit learn package\nimport warnings \nwarnings.filterwarnings('ignore')","1e649fb3":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set_style('darkgrid')\ncmap = sns.cm.mako_r\n\n%matplotlib inline\n\nfrom sklearn.svm import SVC\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, classification_report, accuracy_score","dd262e88":"aug_train = pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv')","59228097":"aug_train.head()","d39685f6":"aug_train.info()","af490ba3":"aug_train.isna().sum()","89ed2935":"aug_train.dropna(inplace=True)","fd81ca5c":"# Function to Plot Bar Graph\ndef plot_bar_graph(column, order=None):\n    x = aug_train[column].value_counts().index\n    y = aug_train[column].value_counts().values\n    sns.barplot(x, y, order=order)\n     \n# Funtion to Plot Pie Chart\ndef plot_pie_chart(column, title=''):\n    values = aug_train[column].value_counts().values\n    labels = aug_train[column].value_counts().index\n    plt.figure(figsize=(6,6))\n    plt.title(title)\n    plt.pie(x=values, labels=labels, autopct='%1.2f%%')","02f01c8d":"plot_pie_chart('gender', title='Pie Chart For Gender')\nplt.show()","3f344765":"plot_pie_chart('relevent_experience', title='Pie Chart For Relevent Experience')\nplt.show()","a6141cc0":"plot_pie_chart('enrolled_university', title='Pie Chart For Enrolled University')\nplt.show()","4445b8ad":"plot_pie_chart('education_level', title='Pie Chart For Education Level')\nplt.show()","e5ab319a":"plot_bar_graph('major_discipline')\nplt.show()","e722cbe6":"plt.figure(figsize=(8, 4))\norder = ['<10', '10\/49', '50-99', '100-500', '500-999', '1000-4999', '5000-9999', '10000+']\nplot_bar_graph('company_size', order=order)\nplt.show()","6c4ef9eb":"plt.figure(figsize=(9, 5))\nplot_bar_graph('company_type')\nplt.show()","7de9c2f2":"plt.figure(figsize=(9, 5))\norder = ['never', '1', '2', '3', '4', '>4']\nplot_bar_graph('last_new_job', order=order)\nplt.show()","6e552104":"plt.figure(figsize=(12, 6))\nsns.histplot(aug_train['training_hours'], kde=True)","c14c3154":"figures, axes = plt.subplots(3, 2, figsize=(16, 14))\n\nsns.scatterplot('relevent_experience', 'training_hours', data=aug_train, hue='target', ax=axes[0,0])\nsns.scatterplot('education_level', 'training_hours', data=aug_train, hue='target', ax=axes[0,1])\nsns.scatterplot('major_discipline', 'training_hours', data=aug_train, hue='target', ax=axes[1,0])\nsns.scatterplot('company_size', 'training_hours', data=aug_train, hue='target', ax=axes[1,1])\nsns.scatterplot('company_type', 'training_hours', data=aug_train, hue='target', ax=axes[2,0])\nsns.scatterplot('last_new_job', 'training_hours', data=aug_train, hue='target', ax=axes[2,1])\n\nplt.show()","7561b611":"list_of_columns = ['city', 'gender', 'relevent_experience', 'enrolled_university', 'education_level',\n                   'major_discipline', 'experience', 'company_size', 'company_type', 'last_new_job']\n\naug_train_dummies_df = []\n\nfor col in list_of_columns:\n    dummy_train_df = pd.get_dummies(aug_train[col])\n    aug_train_dummies_df.append(dummy_train_df)\n\n\n\nlist_of_columns.append('enrollee_id')    \n\naug_train_dummies_df.insert(0, aug_train.drop(columns=list_of_columns))\n\naug_train = pd.concat(aug_train_dummies_df,axis=1)","b00aa6a2":"X = aug_train.dropna().drop(columns=['target']).values\ny = aug_train.dropna()['target'].values\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=80)\n\npipeline = make_pipeline(StandardScaler(), SVC(kernel='sigmoid'))\npipeline.fit(X_train, y_train)\nprediction = pipeline.predict(X_test)\n\nprint(f'Accuracy of the Model is {accuracy_score(y_test, prediction)}')","6f96c473":"conf_matrix = confusion_matrix(y_test, prediction)\nsns.heatmap(conf_matrix, linewidths=1, cmap=cmap, annot=True)\nplt.plot()","4e28867c":"---\n10. Before moving on to the prediction part we will check relation between few features and Training Hours, as people looking for a Job Change tend to Train for longer hours.\n\n<ol>\n    <li><span style='color:red'>Relevent Experience<\/span> vs <span style='color:blue'>Training Hours<\/span><\/li>\n    <li><span style='color:red'>Education Level<\/span> vs <span style='color:blue'>Training Hours<\/span><\/li>\n    <li><span style='color:red'>Major Discipline<\/span> vs <span style='color:blue'>Training Hours<\/span><\/li>\n    <li><span style='color:red'>Company Size<\/span> vs <span style='color:blue'>Training Hours<\/span><\/li>\n    <li><span style='color:red'>Company Type<\/span> vs <span style='color:blue'>Training Hours<\/span><\/li>\n    <li><span style='color:red'>Last New Job<\/span> vs <span style='color:blue'>Training Hours<\/span><\/li>\n<\/ol>","66631cb6":"---\n**1. Importing the necessary libraries**","35bbd719":"---\n5. Major Discipline","d4c99c4d":"---\n2. Pie Chart for Relevent Experience","78823f87":"---\n6. Company Size","14d50052":"---\n**5. Let's get to the prediction part**","11528e29":"Most of the Candidates are from STEM. That is their major discipline was in one of the Following:<br>\n<ol>\n    <li><span style='color:red'>S<\/span>cience<\/li>\n    <li><span style='color:red'>T<\/span>echnology<\/li>\n    <li><span style='color:red'>E<\/span>ngineering<\/li>\n    <li><span style='color:red'>M<\/span>athematics<\/li>\n<\/ol>","dbab5119":"**2. Importing the Data using Pandas read_csv(). And calling head() and info() on the DataFrame**","e7e13590":"As we can see that most of the Candidates working are Male","5b4621fe":"1. Pie Chart for Gender","59586e1b":"---\n9. Let's play a Histogram to see the Distribution of the Training Hours","d207cfde":"---\n# Thank You.! Upvote if you like it.","ad64f77f":"# HR Analytics","c1d5fdcb":"---\n8. How many Jobs Candidates Worked before joining the current company","73ba548a":"The graph reveals the most of the Candidates train for 20 to 50 Hours","b6005be6":"---\n7. Company Type","dc8b47f5":"3. Using Seaborm HeatMap we will plot Confussion Matrix","de19fc28":"---\n4. Education Level","ead1d9fd":"---\n**3. Calling isna() and checking the total number of Null Data**","93a38116":"**4. As most of the Data is Categorical we plot Bar\/Pie to visualize the Categorical Data** ","ce75c340":"1. Data Preprocessing Phase\n\n<ul>\n    <li>Using pandas get_dummies() to convert the Categorical Data to Numerical Features<\/li>\n    <li>Then Removing the Unnecessary Columns<\/li>\n<\/ul>","124ff8ea":"As we can see that there are a lot of missing values and most of them are Categorical and it is not feasible to fill those values as we may end up providing completly wrong data to the training set. So, I prefer dropping them instead.","0f4f4d19":"2. Split the Data in to Training(70%) and Testing(30%) and train the model and Check it accuracy","ba0c512a":"---\n3. Enrolled University"}}