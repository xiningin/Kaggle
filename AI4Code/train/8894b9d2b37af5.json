{"cell_type":{"87a82121":"code","4e68cacb":"code","2c7c6630":"code","1083cd90":"code","a445af68":"code","888a77e3":"code","7fbad74a":"code","15184321":"code","7d98da88":"code","4a97ca7b":"code","e06a9746":"code","9757ef2e":"code","d8e951df":"code","0832d75b":"code","5be9b46b":"code","fe1ad885":"code","525ea7c4":"code","c19e0743":"code","a4abdf9d":"code","bee6b9af":"code","c8a44bb5":"code","3b3a3042":"code","f8dfde3b":"code","e16d2ee1":"code","ca37dcc7":"code","366d99dd":"code","39f54c2b":"code","b1d7ce50":"code","36a48261":"code","8d62d323":"code","d983e698":"code","a7f177cc":"code","26162e7f":"code","6f3da738":"code","6e6ff694":"code","127bc531":"code","39c17263":"code","6cd7d834":"code","95ffe74d":"code","5226c99c":"code","c937cd13":"code","a20624d6":"markdown","dc9433d6":"markdown","b55d8ca7":"markdown","95a34c27":"markdown","6d3031d2":"markdown","8d546f09":"markdown","114a93f1":"markdown","92ebb30e":"markdown","f8055c35":"markdown","2732e4e1":"markdown","de0942f7":"markdown","1a165ebd":"markdown","25dc91e0":"markdown","5617063e":"markdown"},"source":{"87a82121":"import pandas as pd    # for data analysis\nimport numpy as np     # a libraru for array functions\nimport matplotlib.pyplot as plt # for making plots\nimport seaborn as sns  # a plotting package built on top of pandas\n\n#import machine learning modules\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn import preprocessing\n\n#import feature importance modules\n# !pip install yellowbrick #uncomment if yellowbrick module not installed\nfrom yellowbrick.model_selection import FeatureImportances\nfrom sklearn.ensemble import RandomForestClassifier","4e68cacb":"data = pd.read_csv('..\/input\/xAPI-Edu-Data\/xAPI-Edu-Data.csv')\ndata.head()","2c7c6630":"data.tail()","1083cd90":"data.shape","a445af68":"data.info()","888a77e3":"data.rename(columns={'NationalITy':'Nationality',\n'VisITedResources':'VisitedResources',\n'ParentschoolSatisfaction':'ParentSchoolSatisfaction',\n'raisedhands':'raisedHands'}, inplace=True) ","7fbad74a":"data.head()","15184321":"data.drop(columns='PlaceofBirth', inplace=True)","7d98da88":"print(list(data.columns), sep=' ')","4a97ca7b":"data['Nationality'].replace({'KW':'Kuwait'}, inplace=True)","e06a9746":"ax = sns.countplot(x='Class', data=data, order=['L', 'M', 'H'])\nfor p in ax.patches:\n    ax.annotate('{:.2f}%'.format((p.get_height() * 100) \/ len(data)), (p.get_x() + 0.24, p.get_height() + 2))\nplt.show()","9757ef2e":"fig, axarr  = plt.subplots(2,figsize=(10,10))\nsns.countplot(x='gender', data=data, order=['M','F'], ax=axarr[0])\nsns.countplot(x='gender', hue='Class', data=data, order=['M', 'F'],hue_order = ['L', 'M', 'H'], ax=axarr[1])\nplt.show()","d8e951df":"fig, axarr  = plt.subplots(2,figsize=(10,10))\nsns.countplot(x='Nationality', data=data, ax=axarr[0])\nsns.countplot(x='Nationality', hue='Class', data=data,hue_order = ['L', 'M', 'H'], ax=axarr[1])\nplt.show()","0832d75b":"fig, axarr  = plt.subplots(2,figsize=(10,10))\nsns.countplot(x='StageID', data=data, ax=axarr[0])\nsns.countplot(x='StageID', hue='Class', data=data, hue_order = ['L', 'M', 'H'], ax=axarr[1])\nplt.show()","5be9b46b":"fig, axarr  = plt.subplots(2,figsize=(10,10))\nsns.countplot(x='GradeID', data=data, order=['G-02', 'G-04', 'G-05', 'G-06', 'G-07', 'G-08', 'G-09', 'G-10', 'G-11', 'G-12'], ax=axarr[0])\nsns.countplot(x='GradeID', hue='Class', data=data, order=['G-02', 'G-04', 'G-05', 'G-06', 'G-07', 'G-08', 'G-09', 'G-10', 'G-11', 'G-12'], hue_order = ['L', 'M', 'H'], ax=axarr[1])\nplt.show()","fe1ad885":"fig, axarr  = plt.subplots(2,figsize=(10,10))\nsns.countplot(x='SectionID', data=data, order=['A', 'B', 'C'], ax = axarr[0])\nsns.countplot(x='SectionID', hue='Class', data=data, order=['A', 'B', 'C'],hue_order = ['L', 'M', 'H'], ax = axarr[1])\nplt.show()","525ea7c4":"fig, axarr  = plt.subplots(2,figsize=(10,10))\nsns.countplot(x='Topic', data=data, ax = axarr[0])\nsns.countplot(x='Topic', hue='Class', data=data,hue_order = ['L', 'M', 'H'], ax = axarr[1])\nplt.show()","c19e0743":"fig, axarr  = plt.subplots(2,figsize=(10,10))\nsns.countplot(x='Semester', data=data, ax = axarr[0])\nsns.countplot(x='Semester', hue='Class', data=data,hue_order = ['L', 'M', 'H'], ax = axarr[1])\nplt.show()","a4abdf9d":"fig, axarr  = plt.subplots(2,figsize=(10,10))\nsns.countplot(x='Relation', data=data, ax = axarr[0])\nsns.countplot(x='Relation', hue='Class', data=data,hue_order = ['L', 'M', 'H'], ax = axarr[1])\nplt.show()","bee6b9af":"sns.pairplot(data, hue=\"Class\", diag_kind=\"kde\", hue_order = ['L', 'M', 'H'], markers=[\"o\", \"s\", \"D\"])\nplt.show()","c8a44bb5":"data.groupby('Topic').median()","3b3a3042":"data.groupby('GradeID').median()","f8dfde3b":"fig, axarr  = plt.subplots(2,figsize=(10,10))\nsns.countplot(x='ParentAnsweringSurvey', data=data, order=['Yes', 'No'], ax = axarr[0])\nsns.countplot(x='ParentAnsweringSurvey', hue='Class', data=data, order=['Yes', 'No'], hue_order = ['L', 'M', 'H'], ax = axarr[1])\nplt.show()","e16d2ee1":"fig, axarr  = plt.subplots(2,figsize=(10,10))\nsns.countplot(x='ParentSchoolSatisfaction', data=data, order=['Good', 'Bad'], ax = axarr[0])\nsns.countplot(x='ParentSchoolSatisfaction', hue='Class', data=data, order=['Good', 'Bad'],hue_order = ['L', 'M', 'H'], ax = axarr[1])\nplt.show()","ca37dcc7":"fig, axarr  = plt.subplots(2,figsize=(10,10))\nsns.countplot(x='StudentAbsenceDays', data=data, order=['Under-7', 'Above-7'], ax = axarr[0])\nsns.countplot(x='StudentAbsenceDays', hue='Class', data=data, order=['Under-7', 'Above-7'],hue_order = ['L', 'M', 'H'], ax = axarr[1])\nplt.show()","366d99dd":"X = data.drop(columns='Class')\ny = data['Class']","39f54c2b":"X.head()","b1d7ce50":"X = pd.get_dummies(X)","36a48261":"shape = X.shape\nprint(f'Number of rows: {shape[0]}\\nNumber of columns: {shape[1]}')","8d62d323":"X.head()","d983e698":"train_X, test_X, train_y, test_y = train_test_split(X, y, test_size=0.25, random_state=42)","a7f177cc":"model = MLPClassifier(random_state=42, max_iter=1000)","26162e7f":"model.fit(train_X, train_y)","6f3da738":"pred_y = model.predict(test_X)","6e6ff694":"pred_y","127bc531":"cm = confusion_matrix(test_y, pred_y)\ncm","39c17263":"sns.heatmap(cm, cmap='icefire')","6cd7d834":"print(classification_report(test_y, pred_y))","95ffe74d":"new_X = data.drop(columns='Class')\nnew_y = data['Class']","5226c99c":"X_train, X_test, y_train, y_test = train_test_split(new_X, new_y, test_size=0.25, random_state=42)","c937cd13":"fi_model = RandomForestClassifier()\nplt.figure(figsize=(25,20), dpi=400)\nviz = FeatureImportances(fi_model) # create a visualizer using the random forest estimator\nviz.fit(train_X, train_y)\n# viz.show(outpath='feature importances.png')\nviz.show();","a20624d6":"## Evaluating the model","dc9433d6":"## Renaming feature names\nFor more intuitiveness, we will be renaming the following columns:  \nNationalITy \u27a1 Nationality  \nVisITedResources \u27a1 VisitedResources  \nParentschoolSatisfaction \u27a1 ParentSchoolSatisfaction  \nraisedhands \u27a1 raisedHands  ","b55d8ca7":"### Visualizing the continuous data in the numeric features","95a34c27":"## Preprocessing the Data\nData preprocessing consists of the steps that were taken to prepare our data for the artificial neural network.","6d3031d2":"'Kuwait' is represented as 'KW' in Nationality. I'll change it with this cell below:","8d546f09":"I will be dropping the `PlaceofBirth` column as it is the same as the `Nationality` ","114a93f1":"# Predicting Student Academic Performance using artificial neural networks","92ebb30e":"#### Here we can see part of the likely reason why the all of the geology students pass. They have far higher median numerical values than most other courses.","f8055c35":"We'll be setting the `random_state` to 42 for reproducibility","2732e4e1":"#### Here, looking at the median data again we can see part of the likely reason why the 5th and 9th grade students performed as they did as well.","de0942f7":"## Model Definition","1a165ebd":"# Features in the data\n\n|Feature  | Description |\n|:--------|:------------|\n|Gender | student's gender (nominal: 'Male' or 'Female\u2019) |\n|Nationality | student's nationality (nominal:\u2019 Kuwait\u2019,\u2019 Lebanon\u2019,\u2019 Egypt\u2019,\u2019 SaudiArabia\u2019,\u2019 USA\u2019, \u2019Jordan\u2019,\u2019Venezuela\u2019,\u2019 Iran\u2019,\u2019 Tunis\u2019,\u2019 Morocco\u2019,\u2019 Syria\u2019,\u2019 Palestine\u2019,\u2019 Iraq\u2019,\u2019 Lybia\u2019)|\n|Place of birth | student's Place of birth (nominal:\u2019 Kuwait\u2019,\u2019 Lebanon\u2019,\u2019 Egypt\u2019,\u2019 SaudiArabia\u2019,\u2019 USA\u2019,\u2019 Jordan\u2019,\u2019Venezuela\u2019,\u2019 Iran\u2019,\u2019 Tunis\u2019,\u2019 Morocco\u2019,\u2019 Syria\u2019,\u2019 Palestine\u2019,\u2019 Iraq\u2019,\u2019 Lybia\u2019)|\n|Educational Stages | educational level student belongs (nominal:\u2018lowerlevel\u2019, \u2019MiddleSchool\u2019, \u2019HighSchool\u2019)|\n|Grade Levels | grade student belongs (nominal: \u2018G-01\u2019, \u2018G-02\u2019, \u2018G-03\u2019, \u2018G-04\u2019, \u2018G-05\u2019, \u2018G-06\u2019, \u2018G-07\u2019, \u2018G-08\u2019, \u2018G-09\u2019, \u2018G-10\u2019, \u2018G-11\u2019, \u2018G-12 \u2018)|\n|Section ID | classroom student belongs (nominal:\u2019A\u2019,\u2019B\u2019,\u2019C\u2019)|\n|Topic | course topic (nominal:\u2019 English\u2019,\u2019 Spanish\u2019, \u2018French\u2019,\u2019 Arabic\u2019,\u2019 IT\u2019,\u2019 Math\u2019,\u2019 Chemistry\u2019, \u2018Biology\u2019, \u2018Science\u2019,\u2019 History\u2019,\u2019 Quran\u2019,\u2019 Geology\u2019)|\n|Semester | school year semester (nominal:\u2019 First\u2019,\u2019 Second\u2019)|\n|Relation | Parent responsible for student (nominal:\u2019Mum\u2019,\u2019Father\u2019)|\n|Raised hand | how many times the student raises his\/her hand on classroom (numeric:0-100)|\n|Visited resources | how many times the student visits a course content (numeric:0-100)|\n|Viewing announcements | how many times the student checks the new announcements (numeric:0-100)|\n|Discussion groups | how many times the student participate on discussion groups (numeric:0-100)|\n|Parent Answering Survey | parent answered the surveys which are provided from school or not ( nominal: \u2019Yes\u2019,\u2019No\u2019)|\n|Parent School Satisfaction | the Degree of parent satisfaction from school (nominal:\u2019Yes\u2019,\u2019No\u2019)|\n|Student Absence Days | the number of absence days for each student (nominal: above-7, under-7)|","25dc91e0":"### Minor Tweaks here and there:","5617063e":"### Feature Importance\nWe'll be using the yellowbrick library to plot the various feature importances"}}