{"cell_type":{"486fd8c8":"code","3fd7f543":"code","36c22171":"code","3df06cbc":"code","0d7d03d0":"code","1bdb780d":"code","e3032b1d":"code","4f33f9b4":"code","aef1ab34":"code","e71a88d6":"code","3c51c82a":"code","4b8cab18":"code","0f0ea18a":"code","4836bdec":"code","0af7ec18":"code","dd7a63a4":"code","9f16f69f":"code","d7c4fcfe":"code","06b46f09":"code","236d8929":"code","cb1c45e2":"code","aabab54e":"code","4e23b485":"code","dd80a7de":"code","97a0a335":"code","ef59b327":"code","1ea6cbee":"code","675571c8":"code","91cd2087":"code","8b6803ca":"code","68236827":"code","5017f41a":"code","bf7d3ba8":"code","775e1a1d":"code","094ec99a":"code","1b0bcb03":"code","01da2ebe":"code","8e171085":"code","3bf89274":"code","eecc1189":"code","ad756f34":"code","eaa9d4e9":"code","dc6b2cbc":"code","820705ca":"code","3c907919":"code","75627d11":"code","54f840a2":"code","747d3b18":"code","115a2327":"code","a07e8008":"code","acbe0401":"markdown","e345d166":"markdown","4cad5e02":"markdown","edf1e0de":"markdown","7908900b":"markdown","d5a91f75":"markdown","1b9353c2":"markdown","3f3ad536":"markdown","67ce5004":"markdown","6a3aefc2":"markdown","436cde57":"markdown","47b92ea4":"markdown","15db0a2a":"markdown","bea41b97":"markdown","c58e467d":"markdown","4425a096":"markdown","922d12b5":"markdown","11b09a5f":"markdown","fbd80cd1":"markdown","e215e32c":"markdown","37781ad5":"markdown","89589295":"markdown","8e829ef9":"markdown","e0ae3c6e":"markdown","fdd29886":"markdown","cce927fb":"markdown"},"source":{"486fd8c8":"# Data exploration\nimport pandas as pd\nimport numpy as np\n\n# To crate graphics\nimport matplotlib.pyplot as plt\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\n\n\n# To date\nimport datetime","3fd7f543":"# import data, creating a dataframe and first vizualization of dataframe\nimport os\nos.chdir('..\/input')\ndf = pd.read_csv('\/kaggle\/input\/gas-prices-in-brazil\/2004-2019.tsv', sep='\\t',parse_dates=[1,2])\ndf.head()","36c22171":"# Shape of data frame\ndf.shape","3df06cbc":"# Removing index column\ndf_clean = df.drop(\"Unnamed: 0\", axis=1)","0d7d03d0":"# Rename the header\ndf_clean.rename(\n    columns={\n        \"DATA INICIAL\": \"start_date\",\n        \"DATA FINAL\": \"end_date\",\n        \"REGI\u00c3O\": \"region\",\n        \"ESTADO\": \"state\",\n        \"PRODUTO\": \"fuel\",\n        \"N\u00daMERO DE POSTOS PESQUISADOS\": \"n_gas_stations\",\n        \"UNIDADE DE MEDIDA\": \"unit\",\n        \"PRE\u00c7O M\u00c9DIO REVENDA\": \"avg_price\",\n        \"DESVIO PADR\u00c3O REVENDA\": \"sd_price\",\n        \"PRE\u00c7O M\u00cdNIMO REVENDA\": \"min_price\",\n        \"PRE\u00c7O M\u00c1XIMO REVENDA\": \"max_price\",\n        \"MARGEM M\u00c9DIA REVENDA\": \"avg_price_margin\",\n        \"ANO\": \"year\",\n        \"M\u00caS\": \"month\",\n        \"COEF DE VARIA\u00c7\u00c3O DISTRIBUI\u00c7\u00c3O\": \"coef_dist\",\n        \"PRE\u00c7O M\u00c1XIMO DISTRIBUI\u00c7\u00c3O\": \"dist_max_price\",\n        \"PRE\u00c7O M\u00cdNIMO DISTRIBUI\u00c7\u00c3O\": \"dist_min_price\",\n        \"DESVIO PADR\u00c3O DISTRIBUI\u00c7\u00c3O\": \"dist_sd_price\",\n        \"PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O\": \"dist_avg_price\",\n        \"COEF DE VARIA\u00c7\u00c3O REVENDA\": \"coef_price\"\n    },\n    inplace=True\n)\n\n# Vizualization after the translation\ndf_clean.head()","1bdb780d":"# Information about data \ndf_clean.info()","e3032b1d":"# Creating a for condition to convert the data type\nfor col in ['avg_price_margin', 'dist_avg_price', 'dist_sd_price', 'dist_min_price', 'dist_max_price', 'coef_dist']:\n    \n# to_numeric is the function that convert to float, and error=coerce is to ingnore NaN values\n    df_clean[col] = pd.to_numeric(df_clean[col], errors='coerce')\n    \ndf_clean.info()","4f33f9b4":"# Creating a dictionary to tranlate the regions names\nregions = {\"SUL\":\"South\", \"SUDESTE\":\"Southeast\", \"CENTRO OESTE\":\"Midwest\", \n            \"NORTE\":\"North\", \"NORDESTE\":\"Northeast\"}\n\n# Replace the names \ndf_clean[\"region\"] = df_clean.region.map(regions)\n\n# Checking the translation\ndf_clean.region.value_counts()","aef1ab34":"# Creating a dictionary to tranlate the fuel names\nfuels = {\"\u00d3LEO DIESEL\":\"Diesel\", \"GASOLINA COMUM\":\"Regular Gasoline\", \"GLP\":\"LPG\", \n            \"ETANOL HIDRATADO\":\"Hydrous Ethanol\", \"GNV\":\"Natural Gas\", \"\u00d3LEO DIESEL S10\":\"Diesel S10\"}\n\n# Replace the names \ndf_clean[\"fuel\"] = df_clean.fuel.map(fuels)\n\n# Checking the translation\ndf_clean.fuel.value_counts()","e71a88d6":"# Creating a new column. I will separate the date in month starting in day 1 \ndf_clean['month-year'] = pd.to_datetime(df_clean[['month','year']].assign(Day=1), format = \"%m-%Y\", errors='ignore')\ndf_clean.head()","3c51c82a":"# Customized float formatting\ndf_clean = df_clean.round(3)","4b8cab18":"# Checking the data type of new columns\ndf_clean.info()","0f0ea18a":"# Creating a dataframe to number of observation by regions\ndf_NO = df_clean.region.value_counts().rename_axis('Region').reset_index(name='Number of observations')\n\n# Creating a figure\nfig = go.Figure()\n\n# Creatin the bar graphic\nfig.add_trace(go.Bar(x = df_NO['Region'], y = df_NO['Number of observations'], base=0,marker_color= 'navy',name='Number of observations'))\n\n# Chart formatting\nfig.update_layout(\n    #title\n    title=go.layout.Title(text=\"Number of observations by Regions\",xref=\"paper\",x=0),\n    # Axis titles\n    xaxis=go.layout.XAxis(title=go.layout.xaxis.Title(text=\"Region\")),\n    yaxis=go.layout.YAxis(title=go.layout.yaxis.Title(text=\"Number of Observations\")))\n\n\n# Creating margin\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)","4836bdec":"# Creating a dataframe about number of observation by state\ndf_FR = df_clean.groupby(\"region\")[\"fuel\"].value_counts().unstack()\n\n#Creating a list of fuels names\ngas_list = df_FR.columns.tolist()\n\n#Creating a list of regions names\nregion_list = df_FR.index.tolist()","0af7ec18":"\nfig = go.Figure()\n\nfor gas in gas_list:\n    fig.add_trace(go.Bar(y=df_FR.index,x=df_FR[gas],name=gas,orientation='h'))\n    \nfig.update_layout(title=go.layout.Title(text=\"Number of observations by Regions\",xref=\"paper\",x=0),\n    xaxis=go.layout.XAxis(title=go.layout.xaxis.Title(text=\"Number of observations\")),\n    legend=dict(x=0, y=1.09))\n\n# To fixe some bar separation\nfig.update_traces(marker_line_color='black',marker_line_width=0.001)\n# To stack bar\nfig.update_layout(barmode='stack')\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n\n\nfig.show()","dd7a63a4":"# Showing the units of fuels\ndf_clean.groupby(\"fuel\")['unit'].value_counts()","9f16f69f":"# Creating a new dataframe to compare the prices of fuel in the same unit\ndf_fuels = df_clean[['start_date','end_date','region','state','fuel','unit','avg_price','month','year','month-year']]\ndf_fuels.head()","d7c4fcfe":"# Creating dictionary for conversion\n# Units\nevent_dictionary_units ={'R$\/l ' : 'R$\/l', 'R$\/13Kg' : 'R$\/l', 'R$\/m3' : 'R$\/l'}\n\n# Conversion factors\nevent_dictionary_conversion ={'R$\/l' : 1 , 'R$\/13Kg' : 0.00006153, 'R$\/m3' : 0.001}\n\n# Creating the new column\ndf_fuels['conversion'] = df_fuels['unit'].map(event_dictionary_conversion)\n\n# Doing the convertion\ndf_fuels['avg_price'] = df_fuels.avg_price*df_fuels.conversion\n\n# Changing the units\ndf_fuels['unit'] = df_fuels['unit'].map(event_dictionary_units)\n\n# Checking the columns\ndf_fuels.tail()","06b46f09":"# Creating a data frame of values in R$\/l\ndf_fuels_avg = df_fuels.groupby(['year', 'fuel']).mean()['avg_price'].unstack().round(3)\ndf_fuels_avg\n","236d8929":"df_fuels_avg.columns.unique().tolist()","cb1c45e2":"fig = go.Figure()\n\nfor gas in gas_list:\n    fig.add_trace(go.Scatter(x = df_fuels_avg.index,y = df_fuels_avg[gas],mode = 'lines',name = gas))\n\nfig.update_layout(title=go.layout.Title(text=\"Price of fuels by years\",xref=\"paper\",x=0),\n    xaxis=go.layout.XAxis(title=go.layout.xaxis.Title(text=\"Years\")),\n    yaxis=go.layout.YAxis(title=go.layout.yaxis.Title( text=\"Price (R$\/l)\")))\n\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n\n\nfig.show()","aabab54e":"# Creating dataframes for each fuel\n\ndf_GLP = df_clean.query('fuel in [\"LPG\"]').groupby(['month-year', 'region']).mean()['avg_price'].unstack().round(3)\ndf_GAS = df_clean.query('fuel in [\"Regular Gasoline\"]').groupby(['month-year', 'region']).mean()['avg_price'].unstack().round(3)\ndf_ETA = df_clean.query('fuel in [\"Hydrous Ethanol\"]').groupby(['month-year', 'region']).mean()['avg_price'].unstack().round(3)\ndf_GNV = df_clean.query('fuel in [\"Natural Gas\"]').groupby(['month-year', 'region']).mean()['avg_price'].unstack().round(3)\ndf_OLD = df_clean.query('fuel in [\"Diesel\"]').groupby(['month-year', 'region']).mean()['avg_price'].unstack().round(3)\ndf_OL10 = df_clean.query('fuel in [\"Diesel S10\"]').groupby(['month-year', 'region']).mean()['avg_price'].unstack().round(3)","4e23b485":"fig = go.Figure()\n\nfor region in region_list:\n    fig.add_trace(go.Scatter(x = df_GLP.index,y = df_GLP[region],mode = 'lines',name = region))\n\nfig.update_layout(\n    title=go.layout.Title(text=\"Price of LPG by Regions\", xref=\"paper\", x=0),\n    xaxis=go.layout.XAxis(title=go.layout.xaxis.Title(text=\"Years\" )),\n    yaxis=go.layout.YAxis(title=go.layout.yaxis.Title(text=\"Price (R$\/13 Kg)\"))\n    ,xaxis_rangeslider_visible=True\n    ,legend_orientation=\"h\", legend=dict(x=0, y=1.03))\n\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n\n\nfig.show()","dd80a7de":"fig = go.Figure()\n\nfor region in region_list:\n    fig.add_trace(go.Scatter(x = df_GAS.index,y = df_GAS[region],mode = 'lines',name = region))\n\nfig.update_layout(title=go.layout.Title(text=\"Price of Regular gasoline by Regions\",xref=\"paper\",x=0),\n    xaxis=go.layout.XAxis(title=go.layout.xaxis.Title(text=\"Years\")),\n    yaxis=go.layout.YAxis(title=go.layout.yaxis.Title(text=\"Price (R$\/l)\"))\n    ,xaxis_rangeslider_visible=True,\n    legend_orientation=\"h\", legend=dict(x=0, y=1.03))\n\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n\n\nfig.show()","97a0a335":"fig = go.Figure()\n\nfor region in region_list:\n    fig.add_trace(go.Scatter(x = df_ETA.index,y = df_ETA[region],mode = 'lines',name = region))\n\nfig.update_layout(title=go.layout.Title(text=\"Price of Hydrous Ethanol by Regions\",xref=\"paper\",x=0),\n    xaxis=go.layout.XAxis(title=go.layout.xaxis.Title(text=\"Years\")),\n    yaxis=go.layout.YAxis(title=go.layout.yaxis.Title(text=\"Price (R$\/l)\"))\n    ,xaxis_rangeslider_visible=True,\n    legend_orientation=\"h\", legend=dict(x=0, y=1.03))\n\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n\n\nfig.show()","ef59b327":"fig = go.Figure()\n\nfor region in region_list:\n    fig.add_trace(go.Scatter(x = df_GNV.index,y = df_GNV[region],mode = 'lines',name = region))\n\nfig.update_layout(title=go.layout.Title(text=\"Price of Natural gas by Regions\", xref=\"paper\",x=0),\n    xaxis=go.layout.XAxis(title=go.layout.xaxis.Title(text=\"Years\")),\n    yaxis=go.layout.YAxis(title=go.layout.yaxis.Title(text=\"Price (R$\/m3)\"))\n    ,xaxis_rangeslider_visible=True,\n    legend_orientation=\"h\", legend=dict(x=0, y=1.03))\n\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n\n\nfig.show()","1ea6cbee":"fig = go.Figure()\n\nfor region in region_list:\n    fig.add_trace(go.Scatter(x = df_OLD.index,y = df_OLD[region],mode = 'lines',name = region))\n\nfig.update_layout(title=go.layout.Title(text=\"Price of Diesel by Regions\",xref=\"paper\",x=0),\n    xaxis=go.layout.XAxis(title=go.layout.xaxis.Title(text=\"Years\")),\n    yaxis=go.layout.YAxis(title=go.layout.yaxis.Title(text=\"Price (R$\/l)\")),\n    xaxis_rangeslider_visible=True,\n    legend_orientation=\"h\", legend=dict(x=0, y=1.03))\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n\nfig.show()","675571c8":"fig = go.Figure()\n\nfor region in region_list:\n    fig.add_trace(go.Scatter(x = df_OL10.index,y = df_OL10[region],mode = 'lines',name = region))\n\nfig.update_layout(title=go.layout.Title(text=\"Price of Diesel S10 by Regions\",xref=\"paper\",x=0),\n    xaxis=go.layout.XAxis(title=go.layout.xaxis.Title(text=\"Years\")),\n    yaxis=go.layout.YAxis(title=go.layout.yaxis.Title(text=\"Price (R$\/l)\")),\n    xaxis_rangeslider_visible=True,\n    legend_orientation=\"h\", legend=dict(x=0, y=1.03))\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n\n\nfig.show()","91cd2087":"# Creating a data frame with values of regular gasoline in southeast in porcentage\ndf_GASP = df_clean.query('region in [\"Southeast\"] & fuel in [\"Regular Gasoline\"]').groupby(['month-year', 'region']).mean()['avg_price'].pct_change().unstack().round(3)\n# Converting to porcentage\ndf_GASP = df_GASP.select_dtypes(exclude=['object']) * 100\n","8b6803ca":"# Creating a data frame of values of regular gasoline in southeast by year\ndf_GASP_S = df_clean.query('region in [\"Southeast\"] & fuel in [\"Regular Gasoline\"]').groupby(['year', 'state']).mean()['avg_price'].unstack().round(3)\n\n# Creating a list of states \nsw_states = df_GASP_S.columns.tolist()\n\ndf_GASP_S","68236827":"fig = go.Figure()\n\nfor state in sw_states:\n    fig.add_trace(go.Scatter(x = df_GASP_S.index, y = df_GASP_S[state], mode = 'lines', name = state))\n\nfig.update_layout(title=go.layout.Title(text=\"Price of Regular gasoline by Southeast States\",xref=\"paper\",x=0),\n    xaxis=go.layout.XAxis(title=go.layout.xaxis.Title(text=\"Years\")),\n    yaxis=go.layout.YAxis(title=go.layout.yaxis.Title(text=\"Price (R$\/l)\")),\n    legend_orientation=\"h\", legend=dict(x=0, y=1.1))\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n","5017f41a":"# Creating the data frame with values of total variation in porcentage\ndf_GAS_DF = df_GASP_S.query('year in [\"2004\",\"2019\"]')\ndf_GAS_DF = df_GAS_DF.pct_change().select_dtypes(exclude=['object']) * 100\ndf_GAS_DF = df_GAS_DF[1:2].round(3)\ndf_GAS_DF","bf7d3ba8":"fig = make_subplots(rows=2, cols=1, subplot_titles=(\"Over the years\", \"Total\"),vertical_spacing = 0.08,row_heights=[0.7, 0.3])\n\nfor state in sw_states:\n    fig.add_trace(go.Scatter(x = df_GASP_S.index, y = df_GASP_S[state], mode = 'lines', name = state), row=1, col=1)\n\nfig.add_trace(go.Bar(x = df_GAS_DF.columns, y = df_GAS_DF.loc[2019], base=0,marker_color= 'sandybrown',name='Total Variation'),row=2, col=1)\n\nfig.update_layout(height=900, width=1000, title_text=\"Price variation of Regular gasoline in the southeast states (2004-2019)\")\n\n\nfig.update_yaxes(title_text=\"Variation (%)\", row=2, col=1)\nfig.update_xaxes(title_text=\"States\", row=2, col=1)\nfig.update_yaxes(title_text=\"Variation (%)\", row=1, col=1)\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n\n\n","775e1a1d":"#Creating a data frame with values of price variation in Rio de Janeiro in porcentage\ndf_GAS_RJ = df_clean.query('state in [\"RIO DE JANEIRO\"] & fuel in [\"Regular Gasoline\"]').groupby(['month-year', 'state']).mean()['avg_price'].unstack().round(3)\ndf_GASP_RJ = df_GAS_RJ.pct_change()\ndf_GASP_RJ = df_GASP_RJ.select_dtypes(exclude=['object']) * 100\n\n# Creating a column do describe the variation\ndf_GASP_RJ['label'] = df_GASP_RJ['RIO DE JANEIRO'].apply(lambda x: 'Decrease' if x <= 0 else 'Increase')\n\n# Spliting the values by leabels\ndf_GASP_RJ1 = df_GASP_RJ[df_GASP_RJ['label'] == 'Decrease'].round(3)\ndf_GASP_RJ2 = df_GASP_RJ[df_GASP_RJ['label'] == 'Increase'].round(3)","094ec99a":"fig = make_subplots(rows=2, cols=1, subplot_titles=(\"Price\", \"Price variation (%)\"),vertical_spacing = 0.1,row_heights=[0.6, 0.4])\n\n# Creating a subgraphic tho show the variation \nfig.add_trace(go.Bar(x=df_GASP_RJ1.index, y=df_GASP_RJ1['RIO DE JANEIRO'],base=0,marker_color= 'red',name='Decrease'),row=2, col=1)\nfig.add_trace(go.Bar(x=df_GASP_RJ2.index, y=df_GASP_RJ2['RIO DE JANEIRO'],base=0,marker_color= 'green',name='Increase'),row=2, col=1),\n\nfig.add_trace(go.Scatter(x = df_GAS_RJ.index,y = df_GAS_RJ['RIO DE JANEIRO'],marker_color= 'navy', mode = 'lines',name = 'RIO DE JANEIRO'), row=1, col=1)\n\nfig.update_layout(height=800, width=1000, title_text=\"Price variation of Regular gasoline in Rio de Janeiro (2004-2019)\", legend_orientation=\"h\", legend=dict(x=0, y=1.05))\n\nfig.update_yaxes(title_text=\"Variation (%)\", row=2, col=1)\nfig.update_xaxes(title_text=\"Years\", row=2, col=1)\nfig.update_yaxes(title_text=\"Price(R$\/l)\", row=1, col=1)\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(zeroline=True, zerolinewidth=0.5, zerolinecolor='black')\n\n\nfig.show()","1b0bcb03":"# Creating a dataframe with data of natural gas in midwest region\ndf_GNVP_S = df_clean.query('region in [\"Midwest\"] & fuel in [\"Natural Gas\"]').groupby(['year', 'state']).mean()['avg_price'].unstack().round(3)\n\n# Creating a list of states \nmw_states = df_GNVP_S.columns.tolist()\n\ndf_GNVP_S","01da2ebe":"# Creating a graphic \nfig = go.Figure()\n\nfor state in mw_states:\n    fig.add_trace(go.Scatter(x = df_GNVP_S.index, y = df_GNVP_S[state], mode = 'lines', name = state))\n\nfig.update_layout(title=go.layout.Title(text=\"Price of Natural gas by Midwest States\",xref=\"paper\",x=0,),\n    xaxis=go.layout.XAxis(title=go.layout.xaxis.Title(text=\"Years\")),\n    yaxis=go.layout.YAxis(title=go.layout.yaxis.Title(text=\"Price (R$\/m3)\")))\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n\n","8e171085":"#Creating a data frame with values of price variation in Mato Grosso do Sul in porcentage\ndf_GNV_MS = df_clean.query('state in [\"MATO GROSSO DO SUL\"] & fuel in [\"Natural Gas\"]').groupby(['month-year', 'state']).mean()['avg_price'].unstack().round(3)\ndf_GNVP_MS = df_GNV_MS.pct_change()\ndf_GNVP_MS = df_GNVP_MS.select_dtypes(exclude=['object']) * 100\n\n# Creating a column do describe the variation\ndf_GNVP_MS['label'] = df_GNVP_MS['MATO GROSSO DO SUL'].apply(lambda x: 'Decrease' if x <= 0 else 'Increase')\n\n# Spliting the values by leabels\ndf_GNVP_MS1 = df_GNVP_MS[df_GNVP_MS['label'] == 'Decrease'].round(3)\ndf_GNVP_MS2 = df_GNVP_MS[df_GNVP_MS['label'] == 'Increase'].round(3)","3bf89274":"fig = make_subplots(rows=2, cols=1, subplot_titles=(\"Price\", \"Price variation (%)\"),vertical_spacing = 0.1,row_heights=[0.6, 0.4])\n\n\nfig.add_trace(go.Bar(x=df_GNVP_MS1.index, y=df_GNVP_MS1['MATO GROSSO DO SUL'],base=0,marker_color= 'red',name='Decrease'),row=2, col=1)\nfig.add_trace(go.Bar(x=df_GNVP_MS2.index, y=df_GNVP_MS2['MATO GROSSO DO SUL'],base=0,marker_color= 'green',name='Increase'),row=2, col=1)\n\nfig.add_trace(go.Scatter(x = df_GNV_MS.index,y = df_GNV_MS['MATO GROSSO DO SUL'],marker_color= 'navy',mode = 'lines',name = 'MATO GROSSO DO SUL'),row=1, col=1)\n\nfig.update_layout(height=800, width=1000, title_text=\"Price variation of Natural Gas in Mato Grosso do Sul (2004-2019)\", legend_orientation=\"h\", legend=dict(x=-0.02, y=1.06))\n\nfig.update_yaxes(title_text=\"Variation (%)\", row=2, col=1)\nfig.update_xaxes(title_text=\"Years\", row=2, col=1)\nfig.update_yaxes(title_text=\"Price(R$\/m3)\", row=1, col=1)\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n\nfig.update_yaxes(zeroline=True, zerolinewidth=0.5, zerolinecolor='black')\n\n\nfig.show()","eecc1189":"# Creating df for each fuels in 2019\ndf_GLP_D = df_clean.query('year==2019 & fuel in [\"LPG\"]')\ndf_GAS_D = df_clean.query('year==2019 & fuel in [\"Regular Gasoline\"]')\ndf_ETA_D = df_clean.query('year==2019 & fuel in [\"Hydrous Ethanol\"]')\ndf_GNV_D = df_clean.query('year==2019 & fuel in [\"Natural Gas\"]')\ndf_OLD_D = df_clean.query('year==2019 & fuel in [\"Diesel\"]')\ndf_OL10_D = df_clean.query('year==2019 & fuel in [\"Diesel S10\"]')","ad756f34":"fig = go.Figure(data=[go.Box(y=df_GLP_D['avg_price'],boxpoints='all', jitter=0.5,pointpos=-1.8, name = 'LPG' )])\n\nfig.update_layout(title=go.layout.Title(text=\"Box plot of LPG avarege price in 2019\",xref=\"paper\",x=0,),\n    yaxis=go.layout.YAxis(title=go.layout.yaxis.Title(text=\"Price (R$\/13Kg)\")))\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n\nfig.show()","eaa9d4e9":"fig = go.Figure(data=[go.Box(y=df_GNV_D['avg_price'],boxpoints='all', jitter=0.5,pointpos=-1.8, name = 'Natural Gas' )])\n\nfig.update_layout(title=go.layout.Title(text=\"Box plot of Natural Gas avarege price in 2019\",xref=\"paper\",x=0,),\n    yaxis=go.layout.YAxis(title=go.layout.yaxis.Title(text=\"Price (R$\/m3)\")))\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n\nfig.show()","dc6b2cbc":"fig = go.Figure()\n\nfig.add_trace(go.Box(y=df_GAS_D['avg_price'],boxpoints='all', jitter=0.5,pointpos=-1.8, name = 'Regular Gasoline' ))\nfig.add_trace(go.Box(y=df_ETA_D['avg_price'],boxpoints='all', jitter=0.5,pointpos=-1.8, name = 'Hydrous Ethanol' ))\nfig.add_trace(go.Box(y=df_OLD_D['avg_price'],boxpoints='all', jitter=0.5,pointpos=-1.8, name = 'Diesel' ))\nfig.add_trace(go.Box(y=df_OL10_D['avg_price'],boxpoints='all', jitter=0.5,pointpos=-1.8, name = 'Diesel S10' ))\n\nfig.update_layout(title=go.layout.Title(text=\"Box plot of fuels avarege price in 2019\",xref=\"paper\",x=0,),\n    yaxis=go.layout.YAxis(title=go.layout.yaxis.Title(text=\"Price (R$\/l)\")))\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n\nfig.show()","820705ca":"# Creating data frame of avarage prices in each year.\ndf_GLP_S = df_clean.query('year==2019 & fuel in [\"LPG\"]').groupby(['year', 'state']).mean()['avg_price'].unstack().round(3)\ndf_GAS_S = df_clean.query('year==2019 & fuel in [\"Regular Gasoline\"]').groupby(['year', 'state']).mean()['avg_price'].unstack().round(3)\ndf_ETA_S = df_clean.query('year==2019 & fuel in [\"Hydrous Ethanol\"]').groupby(['year', 'state']).mean()['avg_price'].unstack().round(3)\ndf_GNV_S = df_clean.query('year==2019 & fuel in [\"Natural Gas\"]').groupby(['year', 'state']).mean()['avg_price'].unstack().round(3)\ndf_OLD_S = df_clean.query('year==2019 & fuel in [\"Diesel\"]').groupby(['year', 'state']).mean()['avg_price'].unstack().round(3)\ndf_OL10_S = df_clean.query('year==2019 & fuel in [\"Diesel S10\"]').groupby(['year', 'state']).mean()['avg_price'].unstack().round(3)\n","3c907919":"df_GLP_S = df_GLP_S.sort_values(by = df_GLP_S.index[0], axis=1)\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(y=df_GLP_S.columns,x=df_GLP_S.loc[2019],marker=dict(color='rgba(50, 171, 96, 0.6)',line=dict(color='rgba(50, 171, 96, 1.0)',width=1),),name='GNV',orientation='h',))\n\nfig.update_layout(height=700, width=800, title_text=\"Price of LPG in 2019 by states\")\nfig.update_xaxes(title_text='Price (R$\/13 Kg)'),\nfig.update_yaxes(tickfont=dict(size=10))\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)","75627d11":"df_GAS_S = df_GAS_S.sort_values(by = df_GAS_S.index[0], axis=1)\n\nfig = go.Figure()\n\n\nfig.add_trace(go.Bar(y=df_GAS_S.columns, x=df_GAS_S.loc[2019],base=0,marker_color= 'tan',name='Gasolina Comum',orientation='h'))\n\n\nfig.update_layout(height=700, width=800, title_text=\"Price of Regular Gasoline in 2019 by states\")\nfig.update_xaxes(title_text='Price (R$\/l)'),\nfig.update_yaxes(tickfont=dict(size=10))\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n","54f840a2":"df_ETA_S = df_ETA_S.sort_values(by = df_ETA_S.index[0], axis=1)\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(y=df_ETA_S.columns, x=df_ETA_S.loc[2019],base=0,marker_color= 'lightblue',name='Etanol Comum',orientation='h'))\n\n\nfig.update_layout(height=700, width=800, title_text=\"Price of Hydrous ethanol in 2019 by states\")\nfig.update_xaxes(title_text='Price (R$\/l)'),\nfig.update_yaxes(tickfont=dict(size=10))\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)","747d3b18":"df_GNV_S = df_GNV_S.sort_values(by = df_GNV_S.index[0], axis=1)\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(y=df_GNV_S.columns, x=df_GNV_S.loc[2019],base=0,marker_color= 'lightcoral',name='GNV',orientation='h'))\n\nfig.update_layout(height=700, width=800, title_text=\"Price of Natural gas in 2019 by states\")\nfig.update_xaxes(title_text='Price (R$\/ 13Kg)'),\nfig.update_yaxes(tickfont=dict(size=10))\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)","115a2327":"df_OLD_S = df_OLD_S.sort_values(by = df_OLD_S.index[0], axis=1)\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(y=df_OLD_S.columns, x=df_OLD_S.loc[2019],base=0,marker_color= 'mediumvioletred',name='\u00d3leo Diesel',orientation='h'))\n\n\nfig.update_layout(height=700, width=800, title_text=\"Price of Diesel in 2019 by states\")\nfig.update_xaxes(title_text='Price (R$\/l)'),\nfig.update_yaxes(tickfont=dict(size=10))\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)","a07e8008":"df_OL10_S = df_OL10_S.sort_values(by = df_OL10_S.index[0], axis=1)\n\nfig = go.Figure()\n\n\nfig.add_trace(go.Bar(y=df_OL10_S.columns, x=df_OL10_S.loc[2019], base=0, marker_color= 'olive', name='\u00d3leo Disel S10',orientation='h'))\n\nfig.update_layout(height=700, width=800, title_text=\"Price of Diesel S10 in 2019 by states\")\nfig.update_xaxes(title_text='Price (R$\/l)'),\nfig.update_yaxes(tickfont=dict(size=10))\n\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\n","acbe0401":"For Diesel the chepeast state is **Paran\u00e1** and the most expensive is **Amapa** in 2019.","e345d166":"Between all states in the region midwest, just **Mato Grosso do Sul** has data in all years. Because this reason Mato Grosso will be use for a variance analysis.","4cad5e02":"For regular gasoline the chepeast state is **Amapa** and the most expensive is **Acre** in 2019.","edf1e0de":"In order to better understand I will creat a column fo month and year for the vizualization","7908900b":"#### Which states are the cheapest (or most expensive) for different types of fuels?\n\nTo compare the prices to answer this question, I will creat vizualition of date just in 2019, because is de current year.","d5a91f75":"![Cap](https:\/\/www.fuelfreedom.org\/wp-content\/uploads\/shutterstock_458106988-1030x526.jpg)\n","1b9353c2":"#### Objective\n\nThese 3 questions were suggested:\n\n- How different regions of Brazil saw their gas prices change?\n- Within a region, which states increased more their prices?\n- Within a region, which states increased less their prices?\n- Which states are the cheapest (or most expensive) for different types of fuels?\n\n\n#### How different regions of Brazil saw their gas prices change?\n\n","3f3ad536":"### Within a region, which states increased less their prices?\n\nIn the graphic of fuel, the **natural gas** was the cheapest fuel and between the region the midwest has the cheapest price. I will analyse variation of price in this region by year.","67ce5004":"For LPG the chepeast state is **Bahia** and the most expensive is **Mato Grosso** in 2019.","6a3aefc2":"There are three tipes of units: \n\n- R$\/l: Reais per liter\n\n- R$\/m3: Reais per cubic meters of Natural Gas\n\n- R$\/13KG: reais per 13 kilograms of LPG\n\nThe unit of natural gas is in this way because the gas station sell it that way in Brazil. How IPEM determines. Source: http:\/\/www.ipem.pr.gov.br\/modules\/conteudo\/conteudo.php?conteudo=141\n\nThe unit of LPG is this way because It is distributed in cylinders with standard capacity of 13 Kg. This is commum in Brazil. \n\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSJnYyNXhN_PHPdzLnRm9mxFLy9NJxkVLHJjAYnyCiTW_67iPs9pg)\n\nThe best way to compare the price of fuels is if they are in the same unit. This does not help to understand which one has the best performance (that is the best reason to choose a fuel in my opnion. By the way I'm a chemical engineer), but this is not one of the objectives of this analysis. So I will convert the values and units of natural gas and LPG to R$\/l, but just to compare the prices. The reason to not convert the rest of values is that I don't know how this will impact the values of coefficient of variation and standat deviation of each collection. (I didn't research this).\n\nFor the rest of the analysis I will use the regulars units of dataset.\n\nThe conversion factors:\n\n- For LPG. Source of values for convertion: http:\/\/www.gasmig.com.br\/GasNatural\/Paginas\/Tabela-de-Conversao.aspx\n\n$$ {1R$ \\over 13KG} {1kg \\over 1.25m^3} {1m^3 \\over 1000l} = {0.0000615 R$ \\over l} $$\n\n- For natural gas:\n\n$$ {0.001 m^3 \\over l} $$","436cde57":"In this chart show that **regular gasoline** is the most expensive fuel and **natural gas** the the cheapest.\n\nFor the rest of the analysis I will compare by fuel using the standard units of each fuel","47b92ea4":"For hydrous ethanol the chepeast state is **Mato Grosso** and the most expensive is **Rio Grande do Sul** in 2019.","15db0a2a":"The header of data is in Portuguese, so I will translate to English, explain some information and also the values of fuels and regions of Brazil.\n\nThe header:\n\n- DATA INICIAL or start date: Date of start the collection of data\n- DATA FINAL or end date: Date of end the collcetion of data\n- REGI\u00c3O or region: Is a subdivision of Brazil. There are 5 Region: Sul - South, Sudeste - Southeast, Centro-Oeste - Midwest, Nordeste - Northeast e Norte - North.\n- ESTADO or states: Brasil has 26 states and one federal district\n- PRODUTO or fuel: There are 6 tipes of fuel: \u00d3leo diesel - Diesel, Gasolina comum - Regular gasoline, GLP - LPG, Etanol hidratado - Hydrous Ethanol, GNV - Natural gas e \u00d3leo Diesel S10 - Diesel S10\n- N\u00daMERO DE POSTOS PESQUISADOS or number of gas stations: Number of gas stations consulted in the research\n- UNIDADE DE MEDIDA or unit: Unit about each fuel in the research. I will explain better in conversion topic.\n- PRE\u00c7O M\u00c9DIO REVENDA or avarege price of resale: Avarege price of resale in each collection\n- DESVIO PADR\u00c3O REVENDA or standart deviation price of resale: Standart deviation price of resale in each collection\n- PRE\u00c7O M\u00cdNIMO REVENDA or minimum price of resale: Minimum price of resale in each collection\n- PRE\u00c7O M\u00c1XIMO REVENDA or maximum price of resale: Maximum price of resale in each collection\n- MARGEM M\u00c9DIA REVENDA or avarage amount for profit of resale: Avarege of profit in relase in reach collection\n- ANO or year: Year of each collection\n- M\u00caS or month: Month of each collection\n- COEF DE VARIA\u00c7\u00c3O DISTRIBUI\u00c7\u00c3O or coefficient of variation about distribution: coefficient of variation about distribution of each colection\n- PRE\u00c7O M\u00c1XIMO DISTRIBUI\u00c7\u00c3O or maximum price of ditribution: Maximum price of distrition in each collection\n- PRE\u00c7O M\u00cdNIMO DISTRIBUI\u00c7\u00c3O or minimum price of ditribution: Minimum price of distrition in each collection\n- DESVIO PADR\u00c3O DISTRIBUI\u00c7\u00c3O or standart deviation price of distribution: Standart deviation price of resale in each collection\n- PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O or avarege price of distribution: Avarege price of distribution in each collection\n- COEF DE VARIA\u00c7\u00c3O REVENDA or coefficient of variation about resale: coefficient of variation about resale of each colection","bea41b97":"For natural gas the chepeast state is **Pernambuco** and the most expensive is **Goias** in 2019. Natural g\u00e1s is not accessible to all states of Brazil.","c58e467d":"#### Data exploration","4425a096":"### What are the variations in the resale prices of fuels in 2019?","922d12b5":"I will not replace the NaN values to 0 because this can reflact in the avarage price values. ","11b09a5f":"#### References\n\n- Latex: https:\/\/upmath.me\/\n- Pandas: https:\/\/www.geeksforgeeks.org\/python-creating-a-pandas-dataframe-column-based-on-a-given-condition\/\n- Pandas: https:\/\/chrisalbon.com\/python\/data_wrangling\/pandas_create_column_using_conditional\/\n- Information about LPG: http:\/\/www.gasmig.com.br\/GasNatural\/Paginas\/Tabela-de-Conversao.aspx\n- Vizualization Photly: https:\/\/plot.ly\/python\/","fbd80cd1":"# Gas Prices in Brazil\n### Gas Prices in Brazil from 2004 to 2019\n\n#### Data\nThe National Agency of Petroleum, Natural Gas and Bio fuels (ANP in Portuguese) releases weekly reports of gas, diesel and other fuels prices used in transportation across the country. These datasets bring the mean value per liter, number of gas stations analyzed and other information grouped by regions and states across the country.\n\n#### Source\n\nAs stated before, these datasets are provided by ANP, and are regularly updated with new dates and information - which can be retrieved in http:\/\/www.anp.gov.br\/precos-e-defesa-da-concorrencia\/precos\/levantamento-de-precos\/serie-historica-do-levantamento-de-precos-e-de-margens-de-comercializacao-de-combustiveis\n\n\n#### Imports","e215e32c":"**Rio de Janeiro** was the state with more variation in their prices.","37781ad5":"Comparing the total variation beteween 2004 and 2019 ","89589295":"There are some wrong data type in some columns.\n- **avg_price_margin**, **dist_avg_price**, **dist_sd_price**, **dist_min_price**, **dist_max_price** and **coef_dist** are object but they are float number.","8e829ef9":"#### Within a region, which states increased more their prices?\n\nThe most expensive was regular gasoline. In its graphic the region of **southeast** was the reagion with the most expensive prices. I will analyse variation of price in this region by year.","e0ae3c6e":"For Diesel the chepeast state is **Paran\u00e1** and the most expensive is **Acre** in 2019.","fdd29886":"#### Vizualization of data exploration","cce927fb":"#### Units of fuel"}}