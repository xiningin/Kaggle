{"cell_type":{"8f193ea9":"code","745c4ba4":"code","40096ede":"code","ac4df282":"code","71b87a5a":"code","aaec74ef":"code","536fd3a4":"code","83eeade8":"code","aa009ac9":"code","add903a9":"code","8c217a4e":"code","a4406e2b":"code","81886c3b":"code","d77be5ad":"code","35b257a1":"code","f0513976":"code","083c961e":"code","b8094d3e":"code","7c961e0e":"markdown"},"source":{"8f193ea9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","745c4ba4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","40096ede":"df = pd.read_csv('\/\/kaggle\/\/input\/\/salary-data\/\/Salary_Data.csv')\n","ac4df282":"df.head()","71b87a5a":"df.tail()","aaec74ef":"df.info()","536fd3a4":"df.describe()","83eeade8":"df.describe().T","aa009ac9":"df.corr()","add903a9":"df.plot.scatter(x='YearsExperience' ,y = 'Salary')\n","8c217a4e":"import seaborn as sns\nsns.regplot('YearsExperience' , 'Salary',data = df)\n","a4406e2b":"X = df.iloc[:, :-1].values\ny = df.iloc[:, 1].values\n","81886c3b":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 1\/3, random_state = 0)\n","d77be5ad":"# Feature Scaling\n\"\"\"from sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nX_train = sc_X.fit_transform(X_train)\nX_test = sc_X.transform(X_test)\nsc_y = StandardScaler()\ny_train = sc_y.fit_transform(y_train)\"\"\"\n","35b257a1":"from sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train, y_train)\n","f0513976":"y_pred = regressor.predict(X_test)\n","083c961e":"\n# Visualising the Training set results\nplt.scatter(X_train, y_train, color = 'red')\nplt.plot(X_train, regressor.predict(X_train), color = 'blue')\n\n\n","b8094d3e":"\n\n# Visualising the Test set results\nplt.scatter(X_test, y_test, color = 'red')\nplt.plot(X_train, regressor.predict(X_train), color = 'blue')\nplt.title('Salary vs Experience (Test set)')\nplt.xlabel('Years of Experience')\nplt.ylabel('Salary')\nplt.show()","7c961e0e":"# Print First 5 rows"}}