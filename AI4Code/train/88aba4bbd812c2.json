{"cell_type":{"42930f81":"code","0cd82681":"code","57ae55ad":"code","4fbf2e96":"code","7ceb4e73":"code","523d03a5":"code","2e9c462d":"code","4b0fbbdd":"code","5184d253":"code","f3c39159":"code","6a5049e1":"code","66e5e040":"code","cb58038c":"code","7f0f96f1":"markdown","30c279cf":"markdown"},"source":{"42930f81":"import pandas as pd\nimport numpy as np\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.metrics.pairwise import cosine_similarity\nimport warnings\nwarnings.filterwarnings(\"ignore\")","0cd82681":"data = pd.read_excel('\/kaggle\/input\/movie-datasets\/Hollywood_Movie_Dataset.xlsx')","57ae55ad":"data.head()","4fbf2e96":"data.columns","7ceb4e73":"# We need to convert certain features (useful for extracting the contents) to string","523d03a5":"data[['keywords','cast','genres','director']] = data[['keywords','cast','genres','director']].astype(str)","2e9c462d":"columns = ['keywords','cast','genres','director']\ndef combination(n):\n    return n['keywords']+\" \"+n['cast']+\" \"+n['genres']+\" \"+n['director']","4b0fbbdd":"for columns in columns:\n    data[columns] = data[columns].fillna('')","5184d253":"data['combination'] = data.apply(combination,axis=1)","f3c39159":"# We can use CountVectorizer() object for getting the count matrix form the combined text\ncount_vector = CountVectorizer()\ncount_matrix = count_vector.fit_transform(data['combination']) ","6a5049e1":"similarity = cosine_similarity(count_matrix)","66e5e040":"# We need the title and the index to match for the following loop to rank movies\ndef index(index):\n    return data[data.index == index][\"title\"].values[0]\ndef title(title):\n    return data[data.title == title][\"index\"].values[0]","cb58038c":"user_input = \"Skyfall\"\nindex_match = title(user_input)\nsimilar_movies = list(enumerate(similarity[index_match]))\nfinal_list = sorted(similar_movies,key=lambda x:x[1],reverse=True)[1:]\ni=0\nprint(\"Top 10 movies similar to '\"+user_input+\"' are:\\n\")\nfor x in final_list:\n    print(index(x[0]))\n    i=i+1\n    if i>10:\n        break","7f0f96f1":"We can see that the top 10 movies are sorted based on their similarity.","30c279cf":"**Content based recommendation system:**\n\nContent based recommendation system takes a movie name as input, then it analyzes the contents, such as genre, storyline, cast, budget, director etc., of the movie to find out similar movies.\n\nThe methodology used is cosine similarity, and it can be done using Scikit-Learn.\n"}}