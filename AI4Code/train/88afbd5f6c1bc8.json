{"cell_type":{"9313c5c3":"code","a7caae4a":"code","67d77c6e":"code","a1b881ed":"code","0521f4ad":"code","56caa3eb":"code","247c3ec8":"code","31450fb7":"code","74368fe2":"code","0885cd57":"code","30ce862a":"code","5e0b6670":"code","027bf128":"code","bddf4976":"code","7447869b":"markdown","60531de7":"markdown","aaeb070c":"markdown"},"source":{"9313c5c3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a7caae4a":"from sklearn.datasets import load_boston#import the dataset from sklearn for linear regression\ndata1=load_boston()\nprint(data1.data.shape)","67d77c6e":"print(data1.feature_names)#these are features of the model this means input to the model","a1b881ed":"print(data1.target)#these are actual y values this means output to the model","0521f4ad":"print(data1.DESCR) #this imformation about the dataset","56caa3eb":"import pandas as pd\nbos = pd.DataFrame(data1.data)\nprint(bos)","247c3ec8":"bos['PRICE'] = data1.target\nX = bos.iloc[:,:13]\nY = bos.iloc[:,13]","31450fb7":"print(X)#input to the model","74368fe2":"print(Y) #output of the model","0885cd57":"#if you want bulid a model we need train data and test data so we need to divide the dataset in to train and test data\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.30)","30ce862a":"print(x_train.shape)\nprint(y_train.shape)\nprint(x_test.shape)\nprint(y_test.shape)\n","5e0b6670":"#now train and test data is ready then we need build a model\nfrom sklearn.linear_model import LinearRegression\ns=LinearRegression()\ns.fit(x_train,y_train)\ny_pred=s.predict(x_test)\nprint(y_pred)","027bf128":"from sklearn.metrics import mean_squared_error\nmse=mean_squared_error(y_test, y_pred,sample_weight=None, multioutput='uniform_average', squared=True)","bddf4976":"print(np.sqrt(mse))#here error is very high so we need to minimize the error \n#when error is less then only the line is best fit line.","7447869b":"Linear Regression is a machine learning algorithm based on supervised learning. \nIt performs a regression task. Regression models a target prediction value based on independent variables. \nIt is mostly used for finding out the relationship between variables and forecasting. \nDifferent regression models differ based on \u2013 the kind of relationship between dependent and independent variables, they \nare considering and the number of independent variables being used.\n","60531de7":"MEAN SQUARE ERROR AND ROOT MEAN SQUARE ERROR:","aaeb070c":"# LINEAR REGRESSION USING SKLEARN"}}