{"cell_type":{"4d68ce35":"code","10a4186c":"code","0a2a0329":"code","4c64b37f":"code","f5cbe736":"code","0f7e5cae":"code","3dff9ca9":"code","3313e224":"code","72d05396":"code","f1084225":"code","7242530e":"code","6864f86c":"code","203840c9":"code","0ed9e677":"code","91c69358":"code","bbdced80":"code","d05a54fd":"code","cd3b77fb":"code","55cb844a":"code","53c0df71":"code","6ac3841e":"code","67d8020d":"code","936eaa45":"code","0d8b6394":"code","122638ef":"code","1a4d6187":"code","957ecc95":"code","55a4bd93":"code","fc55457c":"code","886aed1a":"code","40929d70":"code","1828a7ef":"code","714ed31c":"code","b5b45f49":"code","2e6a0e74":"code","efc8af6a":"markdown","76cd2902":"markdown"},"source":{"4d68ce35":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","10a4186c":"import torch\nimport fastai\nfrom fastai.tabular.all import *\nfrom fastai.text.all import *\nfrom fastai.vision.all import *\nfrom fastai.medical.imaging import *\nfrom fastai import *\n\nimport time\nfrom datetime import datetime\n\nprint(f'Notebook last run on {datetime.fromtimestamp(time.time()).strftime(\"%Y-%m-%d, %H:%M:%S UTC\")}')\nprint('Using fastai version ',fastai.__version__)\nprint('And torch version ',torch.__version__)","0a2a0329":"from fastai.vision.all import *\nfrom fastai.imports import *\nfrom fastai.vision.data import *\nimport matplotlib.pyplot as plt","4c64b37f":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","f5cbe736":"from PIL import Image\n\nimg = Image.open(\"..\/input\/abstract-art-gallery\/Abstract_gallery\/Abstract_image_1018.jpg\")\nimg","0f7e5cae":"TensorTypes = (TensorImage,TensorMask,TensorPoint,TensorBBox)","3dff9ca9":"def _add1(x): return x+1\ndumb_tfm = RandTransform(enc=_add1, p=0.5)\nstart,d1,d2 = 2,False,False\nfor _ in range(40):\n    t = dumb_tfm(start, split_idx=0)\n    if dumb_tfm.do: test_eq(t, start+1); d1=True\n    else:           test_eq(t, start)  ; d2=True\nassert d1 and d2\ndumb_tfm","3313e224":"_,axs = subplots(1,2)\nshow_image(img, ctx=axs[0], title='original')\nshow_image(img.flip_lr(), ctx=axs[1], title='flipped');","72d05396":"img.resize((64,64))","f1084225":"timg = TensorImage(image2tensor(img))\ntpil = PILImage.create(timg)","7242530e":"tpil.resize((64,64))","6864f86c":"TensorTypes = (TensorImage,TensorMask,TensorPoint,TensorBBox)\n\ndef flip_lr(x:Image.Image): return x.transpose(Image.FLIP_LEFT_RIGHT)\ndef flip_lr(x:TensorImageBase): return x.flip(-1)\ndef flip_lr(x:TensorPoint): return TensorPoint(_neg_axis(x.clone(), 0))\ndef flip_lr(x:TensorBBox):  return TensorBBox(TensorPoint(x.view(-1,2)).flip_lr().view(-1,4))","203840c9":"img = PILImage(PILImage.create(timg).resize((600,400)))\nimg","0ed9e677":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax,sz in zip(axs.flatten(), [300, 500, 700]):\n    show_image(img.crop_pad(sz), ctx=ax, title=f'Size {sz}');","91c69358":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax,mode in zip(axs.flatten(), [PadMode.Zeros, PadMode.Border, PadMode.Reflection]):\n    show_image(img.crop_pad((600,700), pad_mode=mode), ctx=ax, title=mode);","bbdced80":"_,axs = plt.subplots(1,3,figsize=(12,4))\nf = RandomCrop(200)\nfor ax in axs: show_image(f(img), ctx=ax);","d05a54fd":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax in axs: show_image(f(img, split_idx=1), ctx=ax);","cd3b77fb":"test_eq(ResizeMethod.Squish, 'squish')","55cb844a":"Resize(224)","53c0df71":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax,method in zip(axs.flatten(), [ResizeMethod.Squish, ResizeMethod.Pad, ResizeMethod.Crop]):\n    rsz = Resize(256, method=method)\n    show_image(rsz(img, split_idx=0), ctx=ax, title=method);","6ac3841e":"crop = RandomResizedCrop(256)\n_,axs = plt.subplots(3,3,figsize=(9,9))\nfor ax in axs.flatten():\n    cropped = crop(img)\n    show_image(cropped, ctx=ax);","67d8020d":"_,axs = subplots(1,3)\nfor ax in axs.flatten(): show_image(crop(img, split_idx=1), ctx=ax);","936eaa45":"test_eq(cropped.shape, [256,256])","0d8b6394":"RatioResize(256)(img)","122638ef":"test_eq(RatioResize(256)(img).size[0], 256)\ntest_eq(RatioResize(256)(img.dihedral(3)).size[1], 256)","1a4d6187":"timg = TensorImage(array(img)).permute(2,0,1).float()\/255.\ndef _batch_ex(bs): return TensorImage(timg[None].expand(bs, *timg.shape).clone())","957ecc95":"tflip = FlipItem(p=1.)","55a4bd93":"bbox = TensorBBox(((tensor([[1.,0., 2.,1]]) -1)[None]))\nx=test_eq(tflip(bbox,split_idx=0), tensor([[1.,0., 0.,1]]) -1)","fc55457c":"_,axs = subplots(2, 4)\nfor ax in axs.flatten():\n    show_image(DihedralItem(p=1.)(img, split_idx=0), ctx=ax)","886aed1a":"path = Path(\"\/kaggle\/input\/abstract-art-gallery\/Abstract_gallery\")\npath.ls()","40929d70":"np.random.seed(42)\ndata = ImageDataLoaders.from_folder(path, train=\".\", valid_pct=0.2, item_tfms=RandomResizedCrop(512, min_scale=0.75),\n                                    bs=32,batch_tfms=[*aug_transforms(size=256, max_warp=0), Normalize.from_stats(*imagenet_stats)],num_workers=0)","1828a7ef":"data.show_batch(nrows=3, figsize=(7,8))","714ed31c":"data.show_batch(nrows=2, figsize=(7,8))","b5b45f49":"data.show_batch(nrows=1, figsize=(7,8))","2e6a0e74":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke was Here.' )","efc8af6a":"# <font color=\"#E74C3C\">Vasiliy Kandinsky and Abstract Art <\/font>\n\nWassily Wassilyevich Kandinsky ( Russian: \u0412\u0430\u0441\u0438\u043b\u0438\u0439 \u0412\u0430\u0441\u0438\u043b\u044c\u0435\u0432\u0438\u0447 \u041a\u0430\u043d\u0434\u0438\u043d\u0441\u043a\u0438\u0439, tr. Vasiliy Vasilyevich Kandinskiy, IPA: ; 16 December  1866 \u2013 13 December 1944) was a Russian painter and art theorist. Kandinsky is generally credited as the pioneer of abstract art. \n\nBorn in Moscow, Kandinsky spent his childhood in Odessa (today Ukraine), where he graduated at Grekov Odessa Art school. He enrolled at the University of Moscow, studying law and economics. \n\nSuccessful in his profession\u2014he was offered a professorship (chair of Roman Law) at the University of Dorpat (today Tartu, Estonia)\u2014Kandinsky began painting studies (life-drawing, sketching and anatomy) at the age of 30.\n\nFollowing the Russian Revolution, Kandinsky \"became an insider in the cultural administration of Anatoly Lunacharsky\" and helped establish the Museum of the Culture of Painting.https:\/\/en.wikipedia.org\/wiki\/Wassily_Kandinsky","76cd2902":"![](https:\/\/shop.bauhaus-movement.com\/media\/724\/catalog\/wassily-kandinsky-sweater.jpg)shop.bauhaus-movement.com"}}