{"cell_type":{"e58d49ea":"code","c6d9df53":"code","9fe2549e":"code","08095733":"code","3f649754":"code","aa014f6e":"code","db318780":"code","ec55263d":"code","a04c509b":"code","9c2e87c9":"code","508705ab":"code","b6e4f045":"code","2b012462":"code","4eb1c435":"code","123dcfd3":"code","725f031c":"code","1b396a48":"code","8fa155f8":"code","a56dff53":"code","d153f0f0":"code","a50bcab0":"code","1edb33a7":"markdown","5e554ae4":"markdown","699a6f1b":"markdown","4d96cbee":"markdown","bb3bc00a":"markdown"},"source":{"e58d49ea":"import numpy as np \nimport pandas as pd \n\njson_file_paths = []  # Intializing empty list to save full paths of json files to read them later on\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    print(dirname)\n    for filename in filenames:\n        a = os.path.join(dirname, filename)\n        if a.endswith('.json') and 'biorxiv_medrxiv' in a:\n            json_file_paths.append(a)\n        elif a.endswith('.csv'):\n            print(a)","c6d9df53":"# Number of json files\nlen(json_file_paths)","9fe2549e":"!pip install git+https:\/\/github.com\/boudinfl\/pke.git\n!python -m nltk.downloader stopwords\n!python -m nltk.downloader universal_tagset\n!python -m spacy download en","08095733":"!pip install scispacy\n!pip install https:\/\/s3-us-west-2.amazonaws.com\/ai2-s2-scispacy\/releases\/v0.2.4\/en_ner_bc5cdr_md-0.2.4.tar.gz","3f649754":"import json, spacy, scispacy, en_ner_bc5cdr_md\nimport pandas as pd\nfrom pke.unsupervised import TopicRank, TextRank, YAKE","aa014f6e":"def read_jsons(file_name):\n    with open(file_name, 'r') as f:\n        json_data = json.load(f)\n    return json_data","db318780":"data = pd.DataFrame([read_jsons(i) for i in  json_file_paths])","ec55263d":"data = data.fillna(' ')","a04c509b":"def process_abstract_body(value):\n    if value != ' ':\n        return \" \".join(i['text'] for i in value)\n    else:\n        return ' '","9c2e87c9":"def get_title(value):\n    try:\n        return value.get('title')\n    except:\n        return ' '","508705ab":"data.abstract = data.abstract.apply(process_abstract_body)","b6e4f045":"data.body_text = data.body_text.apply(process_abstract_body)","2b012462":"data[\"title\"] = data.metadata.apply(get_title)","4eb1c435":"data = data[['paper_id', 'title', 'abstract', 'body_text']]","123dcfd3":"data.head()","725f031c":"def use_textrank(text, num_keyphrases=5):\n    extractor = TextRank()\n    extractor.load_document(text)\n    extractor.candidate_selection(pos={'NOUN', 'PROPN', 'ADJ'})\n    extractor.candidate_weighting(window=2, top_percent=10)\n    keys = []\n    scores = []\n    for (keyphrase, score) in extractor.get_n_best(n=num_keyphrases):\n        keys.append(keyphrase)\n        scores.append(score)\n    return keys, scores","1b396a48":"for i,j in zip(data.body_text[:5],data.title[:5]):\n    keys, scores = use_textrank(i)\n    key_data = pd.DataFrame({\"keyphrases\":keys, \"scores\":scores})\n    print(\"Title is \"+j)\n    print(key_data)","8fa155f8":"def use_topicrank(text, num_keyphrases=10):\n    extractor = TopicRank()\n    extractor.load_document(text)\n    extractor.candidate_selection(pos={'NOUN', 'PROPN', 'ADJ'})\n    extractor.candidate_weighting(threshold=0.7,\n                                  method='average')\n    keys = []\n    scores = []\n    for (keyphrase, score) in extractor.get_n_best(n=num_keyphrases):\n        keys.append(keyphrase)\n        scores.append(score)\n    return keys, scores","a56dff53":"for i,j in zip(data.body_text[:5],data.title[:5]):\n    keys, scores = use_topicrank(i)\n    key_data = pd.DataFrame({\"keyphrases\":keys, \"scores\":scores})\n    print(\"Title is \"+j)\n    print(key_data)","d153f0f0":"nlp = en_ner_bc5cdr_md.load()","a50bcab0":"doc = nlp(data.body_text[0])\ncovid_ents = list(set([(i.text,i.label_) for i in doc.ents if i.label_ == 'DISEASE']))\ncovid_ents","1edb33a7":"We won't be loading and working on all the data provided. We will using only papers published under **biorxiv_medrxiv**","5e554ae4":"> *ScispaCy is an open-source project developed by the Allen Institute for Artificial Intelligence (AI2). AI2 is a non-profit institute with the mission to contribute to humanity through high-impact AI research and engineering.\nFor more information, visit https:\/\/github.com\/allenai\/scispacy*","699a6f1b":"Download and install ***pke for keyphrase extraction***\n\n> *pke is an open source python-based keyphrase extraction toolkit. It provides an end-to-end keyphrase extraction pipeline in which each component can be easily modified or extended to develop new models. pke also allows for easy benchmarking of state-of-the-art keyphrase extraction models, and ships with supervised models trained on the SemEval-2010 dataset.*","4d96cbee":"Installing Sci spacy for medical entities extraction","bb3bc00a":"In this notebook, we will be analysing research papers on COVID-19. We will be using multiple NLP methods to analyse the data.\n\n1. Entity Extraction with Sci-Spacy\n2. Keyphrases Extraction with TextRank\n3. Keyphrases Extraction with TopicRank"}}