{"cell_type":{"669a1a99":"code","8d7703d2":"code","79e7eb80":"code","a4d04dac":"code","0c412be3":"code","5d9cc198":"code","74d55614":"code","a2bbc783":"code","e8652055":"code","23f998bc":"code","ba695963":"code","b22f0d7a":"code","092b6e8c":"code","f5fecfc4":"code","84f7ee29":"code","4c42a379":"code","6b796af0":"code","2c782270":"code","1615c99e":"code","866dc65d":"code","8c7dc44c":"code","1f042a8f":"code","508c7fc2":"code","3bd6a98d":"code","18b3b365":"code","2f54207a":"code","d56474b7":"code","696b1900":"code","7496539a":"code","76cc9024":"code","0e3273f1":"code","7be45255":"code","155b0293":"code","182caba4":"code","29157006":"code","ea28d692":"code","22ecdde2":"code","2907c103":"code","e8f366e4":"code","ded64926":"code","3b302a4f":"code","fe27e398":"code","e9551bf8":"code","895a532b":"code","7b84759c":"markdown","e28f0c85":"markdown","433ec117":"markdown","be9ea473":"markdown","ee220275":"markdown","265f8067":"markdown","9ce445de":"markdown","fda79dc7":"markdown","4cb0d838":"markdown","fbd66ca3":"markdown","dbbcd74c":"markdown","df8cdfcb":"markdown","35ab8b21":"markdown","95f74c8c":"markdown","4617f95b":"markdown","1a68949e":"markdown","199300ad":"markdown"},"source":{"669a1a99":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom warnings import filterwarnings\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom tensorflow.keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D, BatchNormalization,MaxPooling2D\nfrom keras import models\nfrom keras import layers\nimport tensorflow as tf\nimport os\nimport os.path\nfrom pathlib import Path\nimport cv2\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom keras.utils.np_utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom keras import regularizers\nfrom keras.optimizers import RMSprop,Adam\nimport glob\nfrom PIL import Image\nfrom sklearn.preprocessing import StandardScaler\n\n# IGNORING UNNECESSARRY WARNINGS\n\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","8d7703d2":"Dandalion_Data = Path(\"..\/input\/dandelionimages\/Images\")","79e7eb80":"JPG_Path = list(Dandalion_Data.glob(r\"*\/*.jpg\"))","a4d04dac":"print(JPG_Path[0:5])","0c412be3":"JPG_Labels = list(map(lambda x: os.path.split(os.path.split(x)[0])[1],JPG_Path))","5d9cc198":"print(\"DANDELION: \",JPG_Labels.count(\"dandelion\"))\nprint(\"OTHER: \",JPG_Labels.count(\"other\"))","74d55614":"JPG_Path_Series = pd.Series(JPG_Path,name=\"JPG\").astype(str)\nJPG_Labels_Series = pd.Series(JPG_Labels,name=\"CATEGORY\")","a2bbc783":"Main_Data = pd.concat([JPG_Path_Series,JPG_Labels_Series],axis=1)","e8652055":"print(Main_Data.head(-1))","23f998bc":"Main_Data = Main_Data.sample(frac=1).reset_index(drop=True)","ba695963":"print(Main_Data.head(-1))","b22f0d7a":"figure = plt.figure(figsize=(10,10))\nx = plt.imread(Main_Data[\"JPG\"][0])\nplt.imshow(x)\nplt.xlabel(x.shape)\nplt.title(Main_Data[\"CATEGORY\"][0])","092b6e8c":"figure = plt.figure(figsize=(10,10))\nx = plt.imread(Main_Data[\"JPG\"][1258])\nplt.imshow(x)\nplt.xlabel(x.shape)\nplt.title(Main_Data[\"CATEGORY\"][1258])","f5fecfc4":"figure = plt.figure(figsize=(10,10))\nx = plt.imread(Main_Data[\"JPG\"][1260])\nplt.imshow(x)\nplt.xlabel(x.shape)\nplt.title(Main_Data[\"CATEGORY\"][1260])","84f7ee29":"fig, axes = plt.subplots(nrows=7, ncols=7, figsize=(10, 10),\n                        subplot_kw={'xticks': [], 'yticks': []})\n\nfor i, ax in enumerate(axes.flat):\n    ax.imshow(plt.imread(Main_Data[\"JPG\"][i]))\n    ax.set_title(Main_Data[\"CATEGORY\"][i])\nplt.tight_layout()\nplt.show()","4c42a379":"Train_Data,Test_Data = train_test_split(Main_Data,train_size=0.8,shuffle=True,random_state=12)","6b796af0":"print(Train_Data.shape)","2c782270":"print(type(Train_Data))","1615c99e":"print(Test_Data.shape)","866dc65d":"print(type(Test_Data))","8c7dc44c":"print(Train_Data.head(-1))","1f042a8f":"print(Test_Data.head(-1))","508c7fc2":"Data_Generator = ImageDataGenerator(rescale=1.\/255,\n                                   brightness_range=[0.3,0.7],\n                                   width_shift_range=0.1,\n                                   height_shift_range=0.1,\n                                   zoom_range=0.1,\n                                    vertical_flip=False,\n                                    horizontal_flip=False,\n                                    featurewise_std_normalization=False,\n                                   validation_split=0.1)","3bd6a98d":"Train_Set = Data_Generator.flow_from_dataframe(dataframe=Train_Data,\n                                              x_col=\"JPG\",\n                                              y_col=\"CATEGORY\",\n                                              color_mode=\"grayscale\",\n                                              class_mode=\"categorical\",\n                                              subset=\"training\",\n                                              batch_size=10,\n                                              target_size=(1000,1000))","18b3b365":"Validation_Set = Data_Generator.flow_from_dataframe(dataframe=Train_Data,\n                                              x_col=\"JPG\",\n                                              y_col=\"CATEGORY\",\n                                              color_mode=\"grayscale\",\n                                              class_mode=\"categorical\",\n                                              subset=\"validation\",\n                                              batch_size=10,\n                                              target_size=(1000,1000))","2f54207a":"Test_Set = Data_Generator.flow_from_dataframe(dataframe=Test_Data,\n                                              x_col=\"JPG\",\n                                              y_col=\"CATEGORY\",\n                                              color_mode=\"grayscale\",\n                                              class_mode=\"categorical\",\n                                              batch_size=10,\n                                              target_size=(1000,1000))","d56474b7":"print(Train_Set.class_indices)\nprint(Train_Set.classes[0:5])\nprint(Train_Set.image_shape)","696b1900":"for data_batch,label_batch in Train_Set:\n    print(\"DATA SHAPE: \",data_batch.shape)\n    print(\"LABEL SHAPE: \",label_batch.shape)\n    break","7496539a":"print(Validation_Set.class_indices)\nprint(Validation_Set.classes[0:5])\nprint(Validation_Set.image_shape)","76cc9024":"for data_batch,label_batch in Validation_Set:\n    print(\"DATA SHAPE: \",data_batch.shape)\n    print(\"LABEL SHAPE: \",label_batch.shape)\n    break","0e3273f1":"print(Test_Set.class_indices)\nprint(Test_Set.classes[0:5])\nprint(Test_Set.image_shape)","7be45255":"for data_batch,label_batch in Test_Set:\n    print(\"DATA SHAPE: \",data_batch.shape)\n    print(\"LABEL SHAPE: \",label_batch.shape)\n    break","155b0293":"Model = Sequential()\n#\nModel.add(Conv2D(32,(3,3),activation=\"relu\",\n                 input_shape=(1000,1000,1),\n                 strides=(2,2)))\nModel.add(MaxPooling2D((2,2)))\nModel.add(Dropout(0.2))\n#\nModel.add(Conv2D(64,(3,3),activation=\"relu\",\n                 strides=(2,2)))\nModel.add(MaxPooling2D((2,2)))\nModel.add(Dropout(0.2))\n#\nModel.add(Conv2D(128,(3,3),activation=\"relu\",\n                 strides=(2,2)))\nModel.add(MaxPooling2D((2,2)))\nModel.add(Dropout(0.2))\n#\nModel.add(Conv2D(128,(3,3),activation=\"relu\",\n                 strides=(2,2)))\nModel.add(MaxPooling2D((2,2)))\nModel.add(Dropout(0.2))\n\n#\nModel.add(Flatten())\nModel.add(Dropout(0.5))\nModel.add(Dense(256,activation=\"relu\"))\nModel.add(Dense(2,activation=\"softmax\"))","182caba4":"Model.compile(optimizer=\"rmsprop\",loss=\"categorical_crossentropy\",metrics=[\"accuracy\"])","29157006":"ANN_Model = Model.fit(Train_Set,validation_data=Validation_Set,\n                      epochs=30)","ea28d692":"print(Model.summary())","22ecdde2":"HistoryDict_Two = ANN_Model.history\n\nval_losses_Two = HistoryDict_Two[\"val_loss\"]\nval_acc_Two = HistoryDict_Two[\"val_accuracy\"]\nacc_Two = HistoryDict_Two[\"accuracy\"]\nlosses_Two = HistoryDict_Two[\"loss\"]\nepochs_Two = range(1,len(val_losses_Two)+1)","2907c103":"plt.plot(ANN_Model.history[\"accuracy\"])\nplt.plot(ANN_Model.history[\"val_accuracy\"])\nplt.ylabel(\"ACCURACY\")\nplt.legend()\nplt.show()","e8f366e4":"plt.plot(epochs_Two,losses_Two,\"k-\",label=\"LOSS\")\nplt.plot(epochs_Two,val_losses_Two,\"r-.\",label=\"LOSS VALIDATION\")\nplt.title(\"LOSS & LOSS VAL\")\nplt.xlabel(\"EPOCH\")\nplt.ylabel(\"LOSS & LOSS VAL\")\nplt.legend()\nplt.show()","ded64926":"plt.plot(epochs_Two,acc_Two,\"k-\",label=\"ACCURACY\")\nplt.plot(epochs_Two,val_acc_Two,\"r-.\",label=\"ACCURACY VALIDATION\")\nplt.title(\"ACCURACY & ACCURACY VAL\")\nplt.xlabel(\"EPOCH\")\nplt.ylabel(\"ACCURACY & ACCURACY VAL\")\nplt.legend()\nplt.show()","3b302a4f":"Dict_Summary_Two = pd.DataFrame(ANN_Model.history)\nDict_Summary_Two.plot()","fe27e398":"Model_Results_Two = Model.evaluate(Test_Set,verbose=False)\nprint(\"LOSS:  \" + \"%.4f\" % Model_Results_Two[0])\nprint(\"ACCURACY:  \" + \"%.2f\" % Model_Results_Two[1])","e9551bf8":"Model_Test_Prediction_Two = Model.predict(Test_Set)\nModel_Test_Prediction_Two = Model_Test_Prediction_Two.argmax(axis=-1)","895a532b":"print(Model_Test_Prediction_Two)","7b84759c":"#### MODEL STRUCTURE","e28f0c85":"# CNN MODEL","433ec117":"# MODEL TRAINING DATA","be9ea473":"#### GENERATOR ","ee220275":"#### PREDICTION","265f8067":"#### SHUFFLING","9ce445de":"# VISUALIZATION","fda79dc7":"#### MODEL SUMMARY","4cb0d838":"# IMAGE GENERATOR PROCESS","fbd66ca3":"#### MODEL COMPILE","dbbcd74c":"# PACKAGES AND LIBRARIES","df8cdfcb":"#### CHECKING","35ab8b21":"# PATH & DATA PROCESS","95f74c8c":"#### TRANSFORMATION TO DATAFRAME","4617f95b":"#### PICTURES FORMATING","1a68949e":"#### FITTING","199300ad":"#### CHECKING"}}