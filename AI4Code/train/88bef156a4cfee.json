{"cell_type":{"0e3dcefa":"code","5191c495":"code","ebb4122e":"code","c4317a83":"code","6cb14efd":"code","080df18e":"code","a5be1ca1":"code","46f0ad4a":"code","0d64fb2e":"code","5a682e23":"code","80435eaf":"code","d3cd876c":"code","7711dace":"code","ad3e29ac":"code","10a398b8":"code","e86a8ff0":"code","7845bc75":"code","8fe8d36e":"markdown","c6f74e62":"markdown","8f66410d":"markdown","999cee3c":"markdown"},"source":{"0e3dcefa":"import warnings\nwarnings.filterwarnings('ignore')","5191c495":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\nmovies = pd.read_csv('..\/input\/movielens-dataset\/movies.csv')\nratings = pd.read_csv('..\/input\/movielens-dataset\/ratings.csv')\n\n\ndataset = pd.merge(movies, ratings, how='left', on='movieId')\n\n\ntable = dataset.pivot_table(index='title', columns='userId', values='rating')\n","ebb4122e":"table.shape","c4317a83":"table = table.fillna(0)","6cb14efd":"table.head(2)","080df18e":"from scipy.sparse import csr_matrix\n\nmatrix = csr_matrix(table.values)","a5be1ca1":"user_query_index = np.random.choice(table.shape[1])\nuser_query_index","46f0ad4a":"from sklearn.metrics.pairwise import linear_kernel\n\ncosine = linear_kernel(matrix, matrix)","0d64fb2e":"def recommendations(name, cosine = cosine):\n    recommended_list = []\n    idx = user_query_index\n    score = pd.Series(cosine[idx]).sort_values(ascending=False)\n    \n    top_10 = list(score.iloc[0:11].index)\n    for each in top_10:\n        recommended_list.append(list(table.index)[each])\n    return recommended_list\n\nprint('Recommendation for {0} :\\n'.format(table.index[user_query_index]))\nrecommendations(table.index[user_query_index])","5a682e23":"dataset = dataset.fillna(0)","80435eaf":"dataset.loc[dataset['userId'] == 3]","d3cd876c":"from surprise import SVD, Reader, Dataset\nfrom surprise.model_selection import cross_validate\nfrom sklearn.metrics.pairwise import linear_kernel","7711dace":"svd = SVD()\nreader = Reader()\ncosine = linear_kernel(matrix, matrix)","ad3e29ac":"df = Dataset.load_from_df(dataset[['userId', 'movieId', 'rating']], reader)","10a398b8":"cross_validate(svd, df, measures=['RMSE', 'MAE'], cv = 5, verbose= True)","e86a8ff0":"trainset = df.build_full_trainset()\nsvd.fit(trainset)","7845bc75":"svd.predict(1, user_query_index, 3)","8fe8d36e":"## Movies rated by a user with ID 3","c6f74e62":"## Normal Recommendation with Cosine Matrix","8f66410d":"     Prediciting the rating of userId 1 for the movieId = user_query_index","999cee3c":"# Predicting a user's rating"}}