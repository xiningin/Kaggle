{"cell_type":{"65b9d77e":"code","adbea819":"code","55ba7538":"code","37a0577c":"code","e9210a65":"code","c4539c4d":"code","5dcd4684":"code","9f0e2a3c":"code","6962e1d3":"code","057a1862":"code","82d8b892":"code","d09743cc":"code","19477bd0":"code","2ddca6b1":"code","dd34e2bd":"code","e7e23901":"code","faad92e1":"code","a524fda3":"code","e79c2684":"code","91e671e8":"code","1900f403":"code","32a3b5a5":"code","9b4c5678":"code","07fbbb70":"code","b4258bb2":"code","5c97709c":"code","c05c22d9":"code","96dbaf99":"code","9b5001cb":"code","f2e9f0bd":"code","ac7de452":"code","311fae3f":"code","1134ff3a":"code","cad6633c":"code","34dbc596":"code","db812d9b":"code","adad26eb":"code","7d3aec6e":"code","746021ac":"code","b5070895":"code","fdfffd14":"code","0647b43b":"code","2e9a8883":"code","486dede1":"code","e66974e1":"code","c07216fc":"code","26e36bb4":"code","61f2171b":"code","d4ac28cf":"code","ea543904":"code","5f15be5b":"code","1d56bb2d":"code","8742f702":"code","af6cff9d":"code","9bc980e0":"code","a0ac1cc3":"code","84b53446":"code","a6549533":"code","19710b47":"code","bc23e18f":"code","0791a5ff":"markdown","76eca6fc":"markdown","6e9544d0":"markdown","d8f5f24d":"markdown","21b9e40e":"markdown","88bf0268":"markdown","ea3f2e45":"markdown","ef67dff9":"markdown","03bdb4f9":"markdown","48c73673":"markdown","949afa56":"markdown","b2936960":"markdown","f8721daf":"markdown","84f43cb6":"markdown","6644060a":"markdown","cb73f87e":"markdown","c5237568":"markdown","4581558b":"markdown","133ba9ed":"markdown","5c0d7f87":"markdown","96e40469":"markdown","8753be9f":"markdown","5cc1ef7d":"markdown","92adfefa":"markdown","e9714550":"markdown","19fee8eb":"markdown","578e6902":"markdown","59c6a7fa":"markdown","83d329de":"markdown","67674965":"markdown","e68ebfcd":"markdown","7d87b881":"markdown","5afc3426":"markdown","a4fef70a":"markdown","276f65a2":"markdown","44aa44e2":"markdown","aa3f3339":"markdown","2b776f23":"markdown","0b7bf2bf":"markdown","121e46ae":"markdown","23d041aa":"markdown","a046e670":"markdown","3bff6fb7":"markdown","3b67061f":"markdown","20c31f3b":"markdown","0fe8eed7":"markdown","0ff6a3ce":"markdown","fb74c94c":"markdown","d33db52f":"markdown","e629f87a":"markdown","ab2ed32a":"markdown","3865f60b":"markdown","990d8cb3":"markdown","dab0b273":"markdown","597dd814":"markdown","de6ea3cc":"markdown","d7c105a9":"markdown","2c28343c":"markdown","65d58531":"markdown","3d5fbaec":"markdown","32c0bfc6":"markdown","06f1c7c8":"markdown","0ab49fdc":"markdown","a6b95986":"markdown","b00e5985":"markdown","e81620c6":"markdown","bfa42e4d":"markdown","78374ea6":"markdown","54f55b7e":"markdown","56bd6703":"markdown"},"source":{"65b9d77e":"import os\n\n# Making a list of all csv files available\n\nlist_csvs = os.listdir('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16')\nfor file in list_csvs:\n    is_csv = file.endswith('.csv')\n    if not is_csv:\n        list_csvs.remove(file)\nlist_csvs.sort()\nlist_csvs\n","adbea819":"# Importing necessary libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime\nimport warnings\nsns.set(style='whitegrid')\ntitle_dict = {'size': 18, 'color': 'k'}\nlabel_dict = {'size': 14, 'color': 'k'}\n%matplotlib inline","55ba7538":"# excluding redundant tables from list\nredundant_tables = ['dailyCalories_merged.csv',\n                    'dailyIntensities_merged.csv',\n                    'dailySteps_merged.csv',\n                    'minuteCaloriesNarrow_merged.csv',\n                    'minuteIntensitiesNarrow_merged.csv',\n                    'minuteMETsNarrow_merged.csv',\n                    'minuteStepsNarrow_merged.csv']\n\nfor redundant in redundant_tables:\n    list_csvs.remove(redundant)\nlist_csvs","37a0577c":"# Creating dictionary cointaining each table used (also exclude '_merged')\n\ntables = {'original': {}}\n\nfor csv in list_csvs:\n    table_name = csv[0:-11]\n    tables['original'][table_name] = pd.read_csv('..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/' + csv)\ntables['original'].keys()","e9210a65":"tables['cleaned'] = {}\ni = 0\nfor name, table in tables['original'].items():\n    tables['cleaned'][name] = table.copy()\n    \n    if i == 0:\n        tables['cleaned'][name].iloc[:,1] = pd.to_datetime(table.iloc[:,1], format= '%m\/%d\/%Y')\n    else:\n        tables['cleaned'][name].iloc[:,1] = pd.to_datetime(table.iloc[:,1], format= '%m\/%d\/%Y %I:%M:%S %p')\n    i += 1\n    print(name, \"corvesion suceeded\")","c4539c4d":"tables['cleaned']['dailyActivity'].isnull().any().any()","5dcd4684":"# function to check what table has missing values, if any.\ndef anyNA(dict_tables):\n    with_na = []\n    any_na = False\n    for name, table in tables['cleaned'].items():\n        has_na = table.isnull().any().any()\n        any_na |= has_na\n        if has_na:\n            with_na.append(name)\n        else:\n            pass\n    if any_na:\n        print('List of tables with missing values:' )\n        return with_na\n    else:\n        return print(\"There are no missing values in any table\")","9f0e2a3c":"# Applying\nanyNA(tables)","6962e1d3":"# Variable to reduce typing\nweight = tables['cleaned']['weightLogInfo']","057a1862":"# checking what columns have nulls\nweight.isnull().any()","82d8b892":"# checking how many are not nulls\nweight.Fat.count()","d09743cc":"# closer look at not nulls\nweight.loc[weight.Fat.notnull()]","19477bd0":"# Droping column and refreshing dict\ntables['cleaned']['weightLogInfo'] = weight.drop('Fat', axis=1)\ntables['cleaned']['weightLogInfo']","2ddca6b1":"# Rechecking for NAs\nanyNA(tables)","dd34e2bd":"# function to check what table has duplicated entries, if any.\ndef any_duplicates(dict_tables):\n    with_dup = []\n    any_dup = False\n    for name, table in tables['cleaned'].items():\n        has_dup = table.duplicated().any().any()\n        any_dup |= has_dup\n        if has_dup:\n            with_dup.append(name)\n        else:\n            pass\n    if any_dup:\n        print('List of tables with duplicated entries:' )\n        return with_dup\n    else:\n        return print(\"There are no duplicated entries in any table\")","e7e23901":"# Applying\nany_duplicates(tables['cleaned'])","faad92e1":"# Variables to reduce typing\nsleep_min = tables['cleaned']['minuteSleep']\nsleep_day = tables['cleaned']['sleepDay']","a524fda3":"# closer look at the duplicated entries\nsleep_day[sleep_day.duplicated()]","e79c2684":"# Droping rows and refreshing dict\nsleep_day.drop_duplicates(inplace=True)\ntables['cleaned']['sleepDay'] = sleep_day","91e671e8":"# closer look at the duplicated entries\nsleep_min[sleep_min.duplicated()]","1900f403":"# checking number of rows in the table\nsleep_min.shape","32a3b5a5":"# Droping rows and refreshing dict\nsleep_min.drop_duplicates(inplace=True)\ntables['cleaned']['minuteSleep'] = sleep_min","9b4c5678":"# Rechecking for duplicates\nany_duplicates(tables)","07fbbb70":"def setting_index_all(tables_dict):\n    for table in tables['cleaned'].values():\n        column_list = list(table.columns[:2])\n        table.set_index(column_list, inplace=True)\n\ndef resetting_index_all(tables_dict):\n    for table in tables['cleaned'].values():\n        table.reset_index(inplace=True)","b4258bb2":"setting_index_all(tables)","5c97709c":"tables['cleaned']['dailyActivity']","c05c22d9":"# First look at table\nintensities_hour = tables['cleaned']['hourlyIntensities'].copy()\nintensities_hour","96dbaf99":"# Verifying number of records for each Id\nintensities_hour.groupby('Id')['TotalIntensity'].count().sort_values(ascending=False)","9b5001cb":"# Extracting time of day\nhour_of_day = intensities_hour.index.get_level_values(level=1).hour\n# Grouping by time of day with correct agregating functions\navg_intensity_hour = intensities_hour.groupby(hour_of_day).agg({\n                                           'TotalIntensity':[('sum','sum'),\n                                                             ('n_records', 'count'),\n                                                             ('average', lambda x : x.sum() \/ x.count())]\n                                          })\navg_intensity_hour","f2e9f0bd":"os.mkdir('\/kaggle\/working\/img\/')\n\n# Plotting results\nplt.figure(figsize=(6,4))\npal = sns.color_palette(\"Blues_r\", avg_intensity_hour.shape[0])\nrank = avg_intensity_hour[('TotalIntensity','average')].argsort().argsort()\nsns.barplot(x=avg_intensity_hour.index, y=avg_intensity_hour[('TotalIntensity','average')], palette=np.array(pal[::-1])[rank])\nplt.title('Activity Intensitity vs Hour of Day', size=18)\nplt.xlabel('Hour of day (h)', size = 14)\nplt.ylabel('Average intensity', size = 14)\nplt.tight_layout()\nplt.savefig('img\/activity_hour_day.png', dpi=200)\nplt.show()","ac7de452":"# First Look at dailyActivity descriptive statistics\nactivity_day = tables['cleaned']['dailyActivity'].reset_index()\nactivity_day.describe(datetime_is_numeric=True)","311fae3f":"# Visual representation of records in dailyActivity\nfig, axes = plt.subplots(3,2, figsize=(10,10), constrained_layout=True)\ncolors = sns.color_palette('deep')\n\ncolumn_hist = [['TotalSteps', 'TotalDistance'],\n               ['TrackerDistance', 'SedentaryActiveDistance'],\n               ['SedentaryMinutes', 'Calories']]\n\nfor i in range(3):\n    for j in range(2):\n        sns.histplot(data = activity_day, x=column_hist[i][j], bins=50, ax=axes[i,j], color=colors[2*i+j])\nplt.suptitle('Daily Activity Records', size=18)\nplt.show()","1134ff3a":"# Reference\ntables['cleaned'].keys()","cad6633c":"# Filtering relevant data in dailyActivity\nactivity_day_time = tables['cleaned']['dailyActivity'].copy()\nactivity_day_time.drop(['TrackerDistance',\n                        'LoggedActivitiesDistance',\n                        'VeryActiveDistance',\n                        'ModeratelyActiveDistance',\n                        'LightActiveDistance',\n                        'SedentaryActiveDistance'], axis=1, inplace=True)\n\n# Adding column with sum of minutes recorded of activity\nactivity_day_time['ActiveRecordedMinutes'] = activity_day_time.loc[:,'VeryActiveMinutes' : 'SedentaryMinutes'].sum(axis=1)\n\nactivity_day_time","34dbc596":"# First Look at sleepDay\nsleep_day_time = tables['cleaned']['sleepDay'].copy()\nsleep_day_time","db812d9b":"# Renaming indexes to more easily join tables\nsleep_day_time.rename_axis(['Id', \"Date\"], inplace=True)\nactivity_day_time.rename_axis(['Id', \"Date\"], inplace=True)\n\n# Outer Join\nmerged_whole_day = activity_day_time.join(sleep_day_time, how='outer')\nmerged_whole_day","adad26eb":"# Ploting frequency of sums that did not sum up to 1440 minutes\ntotal_minutes = merged_whole_day[['ActiveRecordedMinutes','TotalTimeInBed']].sum(axis=1)\ntotal_minutes[total_minutes != 1440].plot.hist(bins=50)\nplt.title('Frequency of non-1440 sums', size=14)\nplt.show()","7d3aec6e":"# looking at minuteSleep\nsleep_min = tables['cleaned']['minuteSleep'].copy()\nsleep_min","746021ac":"# Grouping minutes of sleep by calendar day\nmy_sleep_day = sleep_min.groupby([pd.Grouper(level='Id'),\n                                  pd.Grouper(level='date', freq=\"D\")]\n                                )['logId'].count()\nmy_sleep_day.rename('SleepRecordedMinutes',inplace=True)\nmy_sleep_day.rename_axis(['Id','Date'], inplace=True)\nmy_sleep_day","b5070895":"'''Comparison between the numbers I got from the minuteSleep table and the numbers\non the TotalTimeInBed column in the sleepDay table'''\n\nsleep_day_comparison = sleep_day_time.join(my_sleep_day, how='outer')\nsleep_day_comparison[sleep_day_comparison.TotalTimeInBed != sleep_day_comparison.SleepRecordedMinutes]\\\n[['TotalTimeInBed', 'SleepRecordedMinutes']]\n# Showing only diverging results","fdfffd14":"merged_whole_day['SleepRecordedMinutes'] = my_sleep_day\n\n# Checking the if values sum up to 1440 minutes\nmerged_whole_day['TotalMinutesRecorded'] = merged_whole_day.loc[:,['ActiveRecordedMinutes','SleepRecordedMinutes']].sum(axis=1)\nmerged_whole_day.TotalMinutesRecorded.value_counts()","0647b43b":"merged_whole_day[['TotalTimeInBed', 'SleepRecordedMinutes']].describe()","2e9a8883":"# Analyzing how many times people monitored their sleep\nmonitored = ~merged_whole_day.TotalTimeInBed.isna()\nmerged_whole_day['SleepMonitor'] = monitored.replace([True, False], ['Monitored','Unmonitored'])\n\nsleep_monitor = merged_whole_day.groupby(['Id','SleepMonitor']).SleepMonitor.count().unstack()\nsleep_monitor.fillna(0, inplace=True)\nsleep_monitor['NoDataGathered'] = 31 - sleep_monitor.Monitored - sleep_monitor.Unmonitored\nsleep_monitor.sort_values('Monitored', ascending=False)","486dede1":"# Categorizing sleep monitor usability\nsleep_monitor_categories = pd.cut(sleep_monitor.Monitored, [0,10,21,32], labels=['Rarely','Sometimes', 'Usually'], right=False)\nsleep_monitor_categories.value_counts(sort=False)","e66974e1":"# Ploting\nfig = plt.figure(figsize=(5,5))\n# The slices will be ordered and plotted counter-clockwise.\nplt.pie(sleep_monitor_categories.value_counts(sort=False),\n        autopct='%1.0f%%', startangle=90,\n        textprops={'fontsize':11, 'multialignment':'center', 'color':'white'},\n        colors=sns.color_palette('Set1',3),\n        explode=(0,0,0.05)\n        )\nplt.legend(title='Monitors sleep', loc='best', labels=['Rarely','Sometimes', 'Usually'])\nplt.ylabel('')\nplt.suptitle('How frequently people monitor their sleep', size=16)\nplt.axis('equal')\nplt.tight_layout()\nplt.savefig('img\/sleep_monitor_freq.png',dpi=200)\nplt.show()","c07216fc":"fig, axes = plt.subplots(4,2, figsize=(10,10), constrained_layout=True)\ncolors = sns.color_palette('deep')\n\ncolumn_hist = [['TotalSteps', 'TotalDistance'],\n               ['SedentaryMinutes', 'Calories'],\n               ['ActiveRecordedMinutes', 'TotalSleepRecords'],\n               ['TotalMinutesAsleep', 'TotalTimeInBed'],\n               ['SleepRecordedMinutes', 'TotalMinutesRecorded']]\n\nfor i in range(4):\n    for j in range(2):\n        sns.histplot(data=merged_whole_day, x= column_hist[i][j],kde=True, bins=50, ax=axes[i,j], color=colors[2*i+j])\nplt.suptitle('All Records (No Filter)',size=20)\nplt.show()","26e36bb4":"fig, axes = plt.subplots(4,2, figsize=(10,10), constrained_layout=True)\ncolors = sns.color_palette('deep')\n\ncolumn_hist = [['TotalSteps', 'TotalDistance'],\n               ['SedentaryMinutes', 'Calories'],\n               ['ActiveRecordedMinutes', 'TotalSleepRecords'],\n               ['TotalMinutesAsleep', 'TotalTimeInBed']\n              ]\n\nfor i in range(4):\n    for j in range(2):\n        with warnings.catch_warnings():\n            warnings.simplefilter(\"ignore\")\n            sns.histplot(data=merged_whole_day, x=column_hist[i][j], hue='SleepMonitor',\n                         kde=True, bins=50, ax=axes[i,j], palette='RdBu_r')\nplt.suptitle('Records of days the sleep WAS vs WAS NOT monitored',size=20)\nplt.show()","61f2171b":"# Function to filter using said method\ndef filter_by_iqr(df, column, whisker_width=1.5):\n    # Calculate Q1, Q2 and IQR\n    q1 = df[column].quantile(0.25)                 \n    q3 = df[column].quantile(0.75)\n    iqr = q3 - q1\n    # Apply filter with respect to IQR\n    outliers_filter = (df[column] >= q1 - whisker_width*iqr) & (df[column] <= q3 + whisker_width*iqr)\n    return outliers_filter                                               ","d4ac28cf":"# Filtering out obivous outliers\nwhole_day_no_outliers = merged_whole_day[\n    (merged_whole_day.TotalSteps > 200) &\n    (merged_whole_day.TotalDistance != 0) &\n    (merged_whole_day.Calories > 50) &\n    (merged_whole_day.SedentaryMinutes < 1420)\n]\n\n# Separating records based on wether sleep was monitored or not\nmonitored_sleep = whole_day_no_outliers[whole_day_no_outliers.SleepMonitor == 'Monitored']\nunmonitored_sleep = whole_day_no_outliers[whole_day_no_outliers.SleepMonitor == 'Unmonitored']\n\n# Columns to be tested on monitored sleep subset\ncolumns_with_outliers = [\n    'TotalSteps', 'TotalDistance', 'SedentaryMinutes',\n    'Calories', 'TotalTimeInBed', 'SleepRecordedMinutes',\n    'TotalMinutesRecorded'\n]\n\n# Testing\/Filtering by Z-Score\noutliers_filter = monitored_sleep.iloc[:,0].apply(lambda x : True)\nfor col in columns_with_outliers:\n    outliers_filter &= filter_by_iqr(df=monitored_sleep, column=col)\nmonitored_sleep = monitored_sleep[outliers_filter]\n\n# Columns to be tested on unmonitored sleep subset\ncolumns_with_outliers = [\n    'TotalSteps', 'TotalDistance', 'SedentaryMinutes',\n    'Calories', 'TotalMinutesRecorded'\n]\n\n# Testing\/Filtering by Z-Score\noutliers_filter = unmonitored_sleep.iloc[:,0].apply(lambda x : True)\nfor col in columns_with_outliers:\n    outliers_filter &= filter_by_iqr(df=unmonitored_sleep, column=col)\nunmonitored_sleep = unmonitored_sleep[outliers_filter]\n\n# Remerging dataframes\nwhole_day_no_outliers = pd.concat([monitored_sleep, unmonitored_sleep])\n\n# Plotting results\nfig, axes = plt.subplots(4,2, figsize=(10,10), constrained_layout=True)\ncolors = sns.color_palette('deep')\n\ncolumn_hist = [['TotalSteps', 'TotalDistance'],\n               ['SedentaryMinutes', 'Calories'],\n               ['ActiveRecordedMinutes', 'TotalSleepRecords'],\n               ['TotalMinutesAsleep', 'TotalTimeInBed'],\n              ]\n\nfor i in range(4):\n    for j in range(2):\n        with warnings.catch_warnings():\n            warnings.simplefilter(\"ignore\")\n            sns.histplot(data=whole_day_no_outliers, x=column_hist[i][j], hue='SleepMonitor',\n                         kde=True, bins=50, ax=axes[i,j], palette='RdBu_r')\nplt.suptitle('Records of days the sleep WAS vs WAS NOT monitored\\n(No outliers)',size=20, multialignment='center')\nplt.show()","ea543904":"fix = unmonitored_sleep.SedentaryMinutes - monitored_sleep.TotalTimeInBed.mean()\n\nsedentary_fix = pd.DataFrame({'SedentMinMonitored': monitored_sleep.SedentaryMinutes.describe(),\n                              'SedentMinUnmonitored': unmonitored_sleep.SedentaryMinutes.describe(),\n                              'SedentMinUnmonitoredFixed': fix.describe()\n                             })\nsedentary_fix","5f15be5b":"# Filtering and transforming relevant data\nactivity_time_fixed = whole_day_no_outliers.loc[:,['VeryActiveMinutes','FairlyActiveMinutes',\n                                                   'LightlyActiveMinutes','SedentaryMinutes',\n                                                   'TotalSteps', 'TotalMinutesAsleep']].copy()\n\nactivity_time_fixed['SedentaryMinutes'] = pd.concat(\n    [monitored_sleep.SedentaryMinutes,\n    unmonitored_sleep.SedentaryMinutes - round(monitored_sleep.TotalTimeInBed.mean())]\n)\n\n# Extracting Week day and renaming\nday_of_week = activity_time_fixed.index.get_level_values(level=1).weekday\nactivity_time_fixed['WeekDay']= day_of_week\nactivity_time_fixed['WeekDay'].replace({0:'Sunday', 1:'Monday', 2:'Tuesday', 3:'Wednesday', 4:'Thursday', 5:'Friday', 6:'Saturday'}, inplace=True)\nactivity_time_fixed\n\n# Grouping by week day and applying .mean()\navg_activity_weekday = activity_time_fixed.groupby(by='WeekDay').mean()\navg_activity_weekday = avg_activity_weekday.reindex(['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'])\navg_activity_weekday","1d56bb2d":"fig, axes = plt.subplots(3,2, figsize=(10,10), constrained_layout=True)\n\ncolumn_hist = [['SedentaryMinutes', 'LightlyActiveMinutes'],\n               ['FairlyActiveMinutes', 'VeryActiveMinutes'],\n               ['TotalSteps', 'TotalMinutesAsleep']\n              ]\n\nfor i in range(3):\n    for j in range(2):\n        sns.barplot(x=column_hist[i][j], y='WeekDay', data=activity_time_fixed,\n                    order=avg_activity_weekday.index, orient='h', ax=axes[i][j])\nplt.suptitle('Weekday influence on activity and sleep', size=20)\nplt.show()","8742f702":"fig, axes = plt.subplots(1,2, figsize=(12,4), constrained_layout=True)\n\ncolumn_hist = ['VeryActiveMinutes', 'TotalMinutesAsleep']\n\nfor i in range(2):\n    sns.barplot(x=column_hist[i], y='WeekDay', data=activity_time_fixed,\n                order=avg_activity_weekday.index, orient='h', ax=axes[i])\nplt.suptitle('Weekday influence on activity and sleep', size=20)\nplt.savefig('img\/weekday.png',dpi=200)\nplt.close('all')","af6cff9d":"# Getting the average activity per ID\nactivity_time_fixed2 = activity_time_fixed.copy()\nactivity_time_fixed2['Calories'] = whole_day_no_outliers['Calories']\n\navg_activity_Id = activity_time_fixed2.groupby(level=0).mean().sort_values('TotalSteps', ascending=False)\navg_activity_Id.reindex(['TotalSteps','Calories','VeryActiveMinutes', 'FairlyActiveMinutes', 'LightlyActiveMinutes',\n       'SedentaryMinutes', 'TotalMinutesAsleep'], axis=1)","9bc980e0":"# Aggregating intensity minutes.\nactivity_CDC = activity_time_fixed.groupby(level=0).agg(\n    {'VeryActiveMinutes' : [('Records','count'),\n                            ('DailyAverage', lambda x : x.mean()),\n                            ('ActivityScore', lambda x : x.mean() * 2),\n                            ('ScoreStdError', lambda x : x.sem() * 2),\n                            ('LowerEstimate(95%)', lambda x : (x.mean() - 2 * x.sem()) * 2)],\n     'FairlyActiveMinutes' : [('DailyAverage', lambda x : x.mean()),\n                              ('ActivityScore', lambda x : x.mean()),\n                              ('ScoreStdError', lambda x : x.sem() * 2),\n                              ('LowerEstimate(95%)', lambda x : x.mean() - 2 * x.sem())]\n    }\n)\n\n# Organizing and calculating Total Score\nactivity_CDC[('Total','Records')] = activity_CDC[('VeryActiveMinutes', 'Records')]\nactivity_CDC.drop(('VeryActiveMinutes', 'Records'), axis=1, inplace=True)                                                \n\nactivity_CDC[('Total','DailyScore')] = (activity_CDC[('VeryActiveMinutes', 'LowerEstimate(95%)')]\n                                  + activity_CDC[('FairlyActiveMinutes', 'LowerEstimate(95%)')])\n\nactivity_CDC[('Total', 'DailyScore')] = activity_CDC[('Total', 'DailyScore')].apply(lambda x : 0 if x < 0 else x)\n\nactivity_CDC.sort_values(('Total', 'DailyScore'), ascending=False, inplace=True)\n\n# Elimintaing one person with less than 10 observations\nactivity_CDC = activity_CDC[activity_CDC[('Total','Records')] > 10]\n\n# Categorizing based on daily average score - \nactivity_CDC[\"Classification\"] = pd.cut(activity_CDC[('Total','DailyScore')],\n                                       [0,22,44,2880], right=False,\n                                       labels=['Sedentary', 'Active', 'VeryActive'])\nactivity_CDC","a0ac1cc3":"# Ploting\nfig, ax = plt.subplots(figsize=(7,6), constrained_layout=True)\nplt.pie(activity_CDC.Classification.value_counts(sort=False),\n        autopct='%1.0f%%', startangle=90,\n        textprops={'fontsize':12, 'multialignment':'center', 'color':'white'},\n        colors=sns.color_palette('Set1',3),\n        explode=(0.05,0,0)\n        )\nplt.legend(title='Classification', loc='upper left', bbox_to_anchor=(.8, .95),\n           labels=['Sedentary (less than 150 min)', 'Active (150 - 300 min)', 'Very Active (more than 300 min)'])\nplt.ylabel('')\nplt.suptitle(\"Percent of subjects fitting CDC's\\nrecommended activity minutes\", size=16)\nplt.axis('equal')\nplt.savefig('img\/CDC_act_users.png', dpi=200)\nplt.show()","84b53446":"# Aggregating\nsleep_CDC = activity_time_fixed2.groupby(level=0).agg(\n    {'TotalMinutesAsleep':[('Average','mean'),\n                           ('Records','count'),\n                           ('Low95%CI',lambda x : x.mean() - x.sem() * 2),\n                           ('High95%CI', lambda x : x.mean() + x.sem() * 2) ] }\n).round(2)\n\n# Cleaning\nsleep_CDC.dropna(inplace=True)\nsleep_CDC = sleep_CDC[sleep_CDC['TotalMinutesAsleep','Records'] > 10]\n\n# Sorting\nsleep_CDC.sort_values(('TotalMinutesAsleep', 'Average'), ascending=False, inplace=True)\nsleep_CDC","a6549533":"# Dataframe for plot\ndf = activity_time_fixed2.reset_index()\ndf = df.loc[df.Id.isin(sleep_CDC.index.unique()),['Id','TotalMinutesAsleep']]\ndf.dropna(inplace=True)\n\n# Ploting\nfig = plt.figure(figsize=(7,7))\n\ngraph = sns.barplot(x='Id',y='TotalMinutesAsleep',data=df, order=sleep_CDC.index.unique()[::-1],\n                    palette='pastel')\ngraph.axhline(420, color='Red', alpha=.7, ls='--')\nplt.title(\"Subjects fitting CDC's recommended\\nsleep time (95% CI)\", multialignment='center', size=16)\nplt.xlabel('Id', size=14)\nplt.ylabel('Average Minutes Asleep', size=14)\nplt.ylim(0)\nplt.yticks([0,100,200,300,400,420,500])\nplt.xticks([],[])\nplt.show()","19710b47":"# Calculating correlation between Total Steps and Calories with the other variables.\nwhole_day_no_outliers.corr()[['TotalSteps', 'Calories','TotalMinutesAsleep']].sort_values('Calories',ascending=False)","bc23e18f":"fig, axes = plt.subplots(2,2, figsize=(10,8), constrained_layout=True)\ncolors = sns.color_palette('deep')\n\ncolumn_hist = [['TotalSteps', 'TotalDistance'],\n               ['VeryActiveMinutes', 'FairlyActiveMinutes']\n              ]\n\nfor i in range(2):\n    for j in range(2):\n        with warnings.catch_warnings():\n            warnings.simplefilter(\"ignore\")\n            sns.regplot(data=whole_day_no_outliers, x=column_hist[i][j] ,y='Calories',\n                        ax= axes[i,j], color=sns.color_palette('deep')[2*i+j])\n            # sns.histplot(data=whole_day_no_outliers, x=column_hist[i][j], hue='SleepMonitor',\n                         #kde=True, bins=50, ax=axes[i,j], palette='RdBu_r')\nplt.suptitle('How variables affect Calories',size=20, multialignment='center')\nplt.savefig('img\/calories.png', dpi=200)\nplt.show()","0791a5ff":"It is reasonable to assume that the wrong sedentary minutes of unmonitored sleep records can be corrected (aproximately) by subtracting these records by the mean of the TotalTimeInBed. To test this hiphothesys, I do the transformation and print the descriptives:","76eca6fc":"### 5.4 Segmenting Data <a class='anchor' id='bullet_fivefour' ><\/a>","6e9544d0":"This is a Case Study for the completion of the Google Data Analytics Certificate.","d8f5f24d":"## 7. Act Phase <a class='anchor' id='bullet_seven' ><\/a>","21b9e40e":"All tables start with an Id column and are followed by a date column, so I'll use pandas hierarchical indexing for every table","88bf0268":"The vast majority of results sum up to 1440 minutes, which means that our aproach was successful and most of the data is a representation of the whole persons day. The 1439 minutes were probably due to aproximation of seconds and the rest of the results could have any number of explanations.\n\nWith this new data is evident that **a lot of the time recorded as Sedentary minutes** was actually just from **people that didn't monitor their sleep** in that day.","ea3f2e45":"I've already checked the in every table the date data is in the second column, now I'll get a general view on the date formats of each table.","ef67dff9":"This is my first Data Analytics Project, it showed me how much effort goes into getting closer to the truth behind the data, it highlights some of my strengths and weaknesses as I'm putting in the work to get better at it.\n\nDoing this has allowed me to understand what I have to study and practice moreand it was a great final challenge to earn my Google Data Analytics Certificate, but just a first step in a really long journey.\n\nThank you for anyone reading! I would aprecciate feedback :)","03bdb4f9":"### 4.5 Additional Checks <a class='anchor' id='bullet_fourfive' ><\/a>","48c73673":"There are lots of zeros in TotalSteps, TotalDistance and TrackerDistance. Also there are lots of 1440 min in SedentaryMinutes and **these records seem to be divided in two distributions**. This could've happened for a number of reasons, but after investigating some hyphothesis that led me nowhere, I was able to get a more complete picture of the data by **merging it with the sleepDay table** and doing some other operations.","949afa56":"To reformat these values to datetime i'll use *.to_datetime* method of pandas, with a custom format, which will also make sure that there are no irregular date entries being parsed.\n\nI'll will also update the dictionary with the tables that are being cleaned.","b2936960":"At this step of the process I will analyze the data in order to find trends and generate insights that can inspire data-driven decisions for the marketing team.","f8721daf":"### 5.1 Activity Intensity by Hour of the Day <a class='anchor' id='bullet_fiveone' ><\/a>","84f43cb6":"## 5. Analyze Phase <a class='anchor' id='bullet_five' ><\/a>","6644060a":"### 3.1 Files <a class='anchor' id='bullet_threeone' ><\/a>","cb73f87e":"My task is to analyze non-Bellabeat smart device's usage data, identify trends and gain insights that can realate to one of Bellabeat's products. My insights might help understand *how customers use their fitness smart devices*, helping Bellabeat's marketing team, the Chief Creative Officer and a member of the Executive team to focus on these features.","c5237568":"### 5.2 Merging Daily Activity and Sleep <a class='anchor' id='bullet_fivetwo' ><\/a>","4581558b":"To start analyzing activity and sleep data, I did some transformations and additional cleaning. This is the biggest part of the whole study case, so feel free to take a quick look and jump to the share phase, where the findings are summarized and insights are drawn for the data.","133ba9ed":"This is a useful information that can be used to help users achieve their objectives in weight loss and at the same time help them gain more health benefits.","5c0d7f87":"543 rows of duplicates seems like a lot, but not compared to 188,521 total.\n\nIt's also impossible for someone to start sleeping twice at the same time (or have the same logId), so i will get rid of these entries.","96e40469":"### 3.2 Tables <a class='anchor' id='bullet_threetwo' ><\/a>","8753be9f":"The data I am going to use is FitBit Fitness Tracker Data, available on Kaggle. The data is organized in 18 tables and formats vary from long to wide format.\n\nThe data is from a reliable source, it is original, comprehensive and cited. The dataset is from 2016, so not exactly current, but assuming that activity and sleeping habits didn't completely changed from 2016 to 2021, it is still relevant.\n\nFortunately the dataset is from the public domain with no copyright and already anonymized, and unfortunately, there are no indications of gender, age or any other information about the subjects that might have been useful to determine data integrity.\n\nThese limitations of the data (especially sampling bias) will be considered during analysis.","5cc1ef7d":"## 6. Share Phase <a class='anchor' id='bullet_six' ><\/a>","92adfefa":"# Bellabeat Case Study (Python)","e9714550":"#### 5.7.2 Sleep Time Analysis <a class='anchor' id='bullet_fiveseventwo' ><\/a>\n\nThe CDC also recommends that adults have at least 7 houurs (420 minutes) of sleep per night and that they follow a regular schedule.","19fee8eb":"With the outliers effect on the data under control we can start the rest of the analysis","578e6902":"## 2. Ask Phase <a class='anchor' id='bullet_two' ><\/a>","59c6a7fa":"### 5.6 Patterns on activity and sleep by the of the week <a class='anchor' id='bullet_fivesix' ><\/a>","83d329de":"### 4.3 Dealing with duplicates <a class='anchor' id='bullet_fourthree' ><\/a>","67674965":"Bellabeat is a high-tech company that develops wearables and accompanying products that monitor women\u2019s biometric and lifestyle data to help them better understand how their bodies work and how to make healthier choices.\n\n**Scenario**\n\nI'm a junior data analyst working on the marketing analyst team at Bellabeat, a high-tech manufacturer of health-focused products for women. Bellabeat is a successful small company, but they have the potential to become a larger player in the global smart device market. Ur\u0161ka Sr\u0161en, cofounder and Chief Creative Officer of Bellabeat, believes that analyzing smart device fitness data could help unlock new growth opportunities for the company. I have been asked to focus on one of Bellabeat\u2019s products and analyze smart device data to gain insight into how consumers are using their smart devices. The insights I discover will then help guide marketing strategy for the company. I will present my analysis to the Bellabeat executive team along with your high-level recommendations for Bellabeat\u2019s marketing strategy.\n\nThis case study will follow the steps of the data analysis process:\nAsk, Prepare, Process, Analyze, Share and Act.","e68ebfcd":"I did a full scan of all tables and found nulls in only one of them, dealt with it by removing the column after making sure it was the right choice.","7d87b881":"## 1. Summary <a class='anchor' id='bullet_one'><\/a>","5afc3426":"Let's look at both of these tables","a4fef70a":"Since it's very unlike that the same person sleeped exactly the same amount of time and spent the same amount of time in bed in the same day, I'll drop these entries","276f65a2":"| Name | Format | Period | Frequency | Users | Description |\n| :- | :-: | :-: | :-: | :-: | :- |\n| dailyActivity_merged | Wide | 31 days | daily | 33 | Daily activity includes steps, distances, intensities and calories|\n| dailyCalories_merged | Wide | 31 days | daily | 33 | Redundant calories data (as in dailyActivity_merged) |\n| dailyIntensities_merged | Wide | 31 days | daily | 33 | Redundant instensities data measures distance and minutes of four intensities: Very Active, Moderately Active (or Fairly Active), Light (or Lightly Active), Sedentary Active (as in dailyActivity_merged) |\n| dailySteps_merged | Wide | 31 days | daily | 33 | Redundant steps data (as in dailyActivity_merged) |\n| heartrate_seconds_merged | Wide | 31 days | every 5 sec | 14 | Heart rate data, when wearing device. |\n| hourlyCalories_merged | Wide | 31 days | every 1 hour | 33 | Calories data |\n| hourlyIntensities_merged | Wide | 31 days | every 1 hour | 33 | Intensities data |\n| hourlySteps_merged | Wide | 31 days | every 1 hour | 33 | Steps data |\n| minuteCaloriesNarrow_merged | Long | 31 days | every 1 minute | 33 | Calories data |\n| minuteCaloriesWide_merged | Wide | 31 days | every 1 minute | 33 | Calories data |\n| minuteIntensitiesNarrow_merged | Long | 31 days | every 1 minute | 33 | Intensities data |\n| minuteIntensitiesWide_merged | Wide | 31 days | every 1 minute | 33 | Intensities data |\n| minuteMETsNarrow_merged | Long | 31 days | every 1 minute | 33 | One MET is defined as 1 kcal\/kg\/hour and is roughly equivalent to the energy cost of sitting quietly. A MET also is defined as oxygen uptake in ml\/kg\/min with one MET equal to the oxygen cost of sitting quietly, equivalent to 3.5 ml\/kg\/min |\n| minuteSleep_merged | Wide | 31 days | every 1 minute | 33 | Sleep record. (value column is probably MET every minute) |\n| minuteStepsNarrow_merged | Long | 31 days | every 1 minute | 33 | Steps data |\n| minuteStepsWide_merged | Wide | 31 days | every 1 minute | 33 | Steps data |\n| sleepDay_merged | Wide | 31 days | daily | 33 | total minutes asleep and in bed per day |\n| weightLogInfo_merged | Wide | 31 days | daily | 33 | Weight in Kg and pounds and body mass index for 8 users, 5 being manual reports e 3 automaticaly gathered.|","44aa44e2":"## 4. Process Phase <a class='anchor' id='bullet_four' ><\/a>","aa3f3339":"At a 95% confidence interval there's no significant difference on activity by day of the week, other than that saturday looks to be the day with the least amount of highly intense activity and monday the day with the highest.\n\nThe data also indicates that users tend to have longer sleeps on saturdays and shortest on mondays.","2b776f23":"The analysis on sleep duration, at a 95% confidence level, was not able to classify precisely the percentage of users that follow CDC's recommendation. But most of them sleep around the recommended duration of 420 minutes (7 hours).","0b7bf2bf":"### 5.3 Analyzing sleep <a class='anchor' id='bullet_fivethree' ><\/a>\n\nWith this new table it is possible to analyze different usages of the FitBit, including how many of these users regularly monitor their sleep.","121e46ae":"This shows that the segmentation was on point and revealed a hidden property of the data.","23d041aa":"### 4.1 Dealing with date formats: <a class='anchor' id='bullet_fourone' ><\/a>","a046e670":"- Mispelled Words and extra spaces:\n    - There are no words in any table and dtyps assure that there are no extra spaces.\n- Inconsistent Data:\n    - To check for inconsistent data I have to look at each column in every table, so I'll do this when a need a specific variable","3bff6fb7":"Understanding what hours of day have registered more intense activity while wearing FitBit","3b67061f":"Even though there are only 88 records of one person, i'll get an average by time of day, so it won't affect the final result significantly","20c31f3b":"The original files were stored in a folder at my computer, for analysis and a backup was made.\n\nAll tables are in a .csv file as listed above:","0fe8eed7":"### 4.2 Dealing with missing values <a class='anchor' id='bullet_fourtwo' ><\/a>","0ff6a3ce":"#### 4.2.2 Removing missing values <a class='anchor' id='bullet_fourtwotwo' ><\/a>","fb74c94c":"With only two entries on the 'Fat' column, is better to drop it for the analysis, but I'm curious if somehow those were not manual entries, so I take one last look at them to be sure.","d33db52f":"#### 4.2.1 Full scan <a class='anchor' id='bullet_fourtwoone' ><\/a>","e629f87a":"The insights I had while analyzing the data will apply to the Bellabeat's app and Subscription service.\n\n### 6.1 Activity minutes <a class='anchor' id='bullet_sixone' ><\/a>\n\nThe analysis I did, especially at the CDC's website, showed that, of all the usual acitvity indicators, like number of steps, calories burned, distance walked and minutes of (graded) activity, the one with the most relevancy when measuring health benefits is the minutes of graded intensity activity.\n\nFor substantial health benefits, adults should do at least 150 to 300 minutes a week (22 to 43 minutes a day) of moderate-intensity, or 75 minutes to 150 minutes a week (11 - 22 minutes a day) of vigorous-intensity aerobic physical activity, or an equivalent combination of moderate- and vigorous-intensity aerobic\nactivity.\n\nFurthermore, additional health benefts are gained by engaging in physical activity beyond the equivalent\nof 300 minutes (43 minutes a day) of moderate-intensity physical activity a week. Research has not identifed an upper limit of total activity, above which additional health benefts cease to occur.\n\nWhen analyzing the FitBit data of 30 users, I noticed that FitBit uses a similar measure of activity minutes, that they officially call \"Active Zone Minutes\". Also, the analysis of these minutes made possible to segment these FitBit users in 3 categories, Sedentary, Active and Very Active, as seem below:\n\n<img src=\"img\/CDC_act_users.png\" width=500 height=500 align=left \/><br clear=\"left\">\n\nSince there are lots of research about the health benefits of exercise following the CDC's reccomendations and grading, it would be interesting to incorporate this measures on Bellabeat's app. Also, the fact that aproximately 44% of Fiftbit users can be classified as sedentary, shows that only having the measures in place isn't enough, **we at Bellabeat can incentivize our users by offering discounts on the subscription based service, for people that reach and keep a certain level of weekly activity minutes.**\n\nMorover, having **animations showing research based benefits for the users while they are achieving certain milestones in activity minutes** is a fun, informative and encoraging way of keeping them in track with their objectives.\n\n### 6.2 Sleep duration <a class='anchor' id='bullet_sixtwo' ><\/a>\n\nThe Fitbit data show that only 36% of users regularly monitor their sleep.\n\n<img src='img\/sleep_monitor_freq.png' height=400 width=400 align=left \/><br clear='left'>\n\nThere are many reasons why someone might not monitor their sleep. One that it is really common to fitness smart device users is the fact that lots of users choose to charge their devices at night. So Bellabeat has a clear advantage here with its extensive portfolio of devices that can be used while the other one is charging, emphasizing that on targeted ads is a great way of showing the best Bellabeat has to offer.\n\n### 6.3 Calories <a class='anchor' id='bullet_sixthree' ><\/a>\n\nLots of users look for better ways to burn calories, for any number of reasons. With the data collected it is possible to show users how efficient their exercises have been comparatively and then let them choose which one fits their needs the best.\n\n<img src='img\/calories.png' height=720 width=720 align=left \/><br clear=\"left\">\n\nThis analysis would be made for each user to reduce error, but that is a really useful type of analysis that can make users more loyal to the brand.\n\n\n### 6.4 Notifications <a class='anchor' id='bullet_sixfour' ><\/a>\n\nThe analysis on FitBit users revealed that between 5 and 8 PM are the hours of day with most intense activity, also the hours between 8 AM and 15 PM registered considerably high activity as shown below:\n\n<img src=\"img\/activity_hour_day.png\" height=400 width=400 align=left \/><br clear=\"left\">\n\nSince this are already the time of the day users are more likely to do intense activities they could also be the times set for default on notifications remembering users to exercise.\n\nAdditionally, minutes of vigorous actvity are usually higher on mondays and lower on saturdays, and sleeps are usually longer on saturdays and shorter on mondays.\n\n<img src='img\/weekday.png' height=320 width=960 align=left \/><br clear='left'>\n\nRemembering users to start the exercising on mondays, or to have longer sleeps on saturdays by default should yield higher rasults.\n\nBoth of this insights only apply for new users of the app, since notifications should be A\/B tested, but the tests and default times are not muttually exclusive.","ab2ed32a":"### 5.8 Looking for correlation between variables <a class='anchor' id='bullet_fiveeight' ><\/a>","3865f60b":"### 5.5 Dealing with outliers <a class='anchor' id='bullet_fivefive' ><\/a>\n\nNow that the data is segmented, there's only one last thing to do before doing more advanced statistical analysis, dealing with the outliers.\n\nTo filter out the outliers in the data I will use a method that is commom for stasticians to use, the 1.5xIQR (InterQuatile Range) rule:","990d8cb3":"#### 5.2.1 First look at Daily Activity <a class='anchor' id='bullet_fivetwoone' ><\/a>","dab0b273":"### 5.7 Analysis based on CDC's recommendation <a class='anchor' id='bullet_fiveseven' ><\/a>\n\nAccording to the CDC's [Physical Activity Guidelines for Americans, 2nd Edition](https:\/\/health.gov\/paguidelines\/second-edition\/pdf\/Physical_Activity_Guidelines_2nd_edition.pdf), the best ways to measure exercise that helps improve health is by the amonut of moderately or vigorous-intense activity.\n\nFor substantial health benefits, adults should do at least 150 to 300 minutes a week (22 to 43 minutes a day) of moderate-intensity, or 75 minutes to 150 minutes a week (11 - 22 minutes a day) of vigorous-intensity aerobic physical activity, or an equivalent combination of moderate- and vigorous-intensity aerobic\nactivity.\n\nFurthermore, additional health benefts are gained by engaging in physical activity beyond the equivalent\nof 300 minutes (43 minutes a day) of moderate-intensity physical activity a week. Research has not identifed an upper limit of total activity, above which additional health benefts cease to occur.\n\nThe good thing is that the FitBit already [categorizes their activity intensities by this measure](https:\/\/help.fitbit.com\/articles\/en_US\/Help_article\/1379.htm).","597dd814":"So the data indicates that between 5 and 8 PM are the hours of day with most intensite activity, also the hours between 8 AM and 15 PM registered considerably high activity.","de6ea3cc":"Both were manual reports so it's safe to say this data won't be useful","d7c105a9":"There are some outliers that sould be dealt with, but first let's look at what the data looks like when we separate the records of when sleep was monitored and when they weren't.\n\nThe reason behind it is that when the sleep was monitored we can account for most of the person's day, so it should yield more realistic measures.","2c28343c":"So with a 95% confidence level, at least 56% of subjects are considered Active or Very Active, according to CDC's recommendation. This is a high number of active people considering it is close to the average of states with higher activity in the US, according to the CDC ([source](https:\/\/nccd.cdc.gov\/dnpao_dtm\/rdPage.aspx?rdReport=DNPAO_DTM.ExploreByTopic&islClass=PA&islTopic=PA1&go=GO)), and it makes sense, since people buying fitbits should be more interested in fitness than the average person.\n\nBut, that also means that almost half of the users are sedentaries or close to it, so there's a lot of room for improvement.","65d58531":"#### 5.7.1 Activity Score Analysis <a class='anchor' id='bullet_fivesevenone' ><\/a>\n\nThat being said, the subjects can be categorized in three groups, Sedentary, Active and Very Active, by calculating an Activity Score (the sum of the average FairlyActiveMinutes and VeryActiveMinutes multiplied by 2, per week) and comparing with the recommend by the CDC.","3d5fbaec":"Note: There are more nulls in the TotalTimeAsleep than before, because of the outliers removal, which were necessary for the analisys of usage, but are not in other statiscal analysis","32c0bfc6":"With this merged table, at first i tried adding the TotalTimeInBed, to the total of active minutes, to make sure I had data for the whole day. Some of the sums added to 1440 minutes (1 day), but others did not.","06f1c7c8":"### 4.4 Setting indexes <a class='anchor' id='bullet_fourfour' ><\/a>","0ab49fdc":"The two datas match almost perfectly now.","a6b95986":"I did a full scan of all tables and found duplicated rows in two of them, dealt with it by removing the entries after making sure it was the right choice.","b00e5985":"## Table of Contents:\n* **[1. Summary](#bullet_one)**\n\n* **[2. Ask Phase](#bullet_two)**\n\n* **[3. Prepare Phase](#bullet-three)**\n    * [3.1 Files](#bullet-threeone)\n    * [3.2 Tables](#bullet-threetwo)\n    \n* **[4. Process Phase](#bullet_four)**\n    * [4.1 Dealing with date formats](#bullet_fourone)\n    * [4.2 Dealing with missing values](#bullet_fourtwo)\n        * [4.2.1 Full scan](#bullet_fourtwoone)\n        * [4.2.2 Removing missing values](#bullet_fourtwotwo)\n    * [4.3 Dealing with duplicates](#bullet_fourthree)\n    * [4.4 Setting indexes](#bullet_fourfour)\n    * [4.5 Additional Checks](#bullet_fourfive)\n    \n* **[5. Analyze Phase](#bullet_five)**\n    * [5.1 Activity Intensity by Hour of the Day](#bullet_fiveone)\n    * [5.2 Merging Daily Activity and Sleep](#bullet_fivetwo)\n        * [5.2.1 First look at Daily Activity](#bullet_fivetwoone)\n        * [5.2.2 Merging Relevant data in dailyActivity and sleepDay ](#bullet_fivetwotwo)\n    * [5.3 Analyzing sleep](#bullet_fivethree)\n    * [5.4 Segmenting Data](#bullet_fivefour)\n    * [5.5 Dealing with outliers](#bullet_fivefive)\n    * [5.6 Patterns on activity and sleep by the of the week](#bullet_fivesix)\n    * [5.7 Analysis based on CDC's recommendation](#bullet_fiveseven)\n        * [5.7.1 Activity Score Analysis](#bullet_fivesevenone)\n        * [5.7.2 Sleep Time Analysis](#bullet_fiveseventwo)\n    * [5.4 Segmenting Data](#bullet_fivefour)\n    * [5.5 Dealing with outliers](#bullet_fivefive)\n    * [5.6 Patterns on activity and sleep by the of the week](#bullet_fivesix)\n    * [5.7 Analysis based on CDC's recommendation](#bullet_fiveseven)\n    * [5.8 Looking for correlation between variables](#bullet_fiveeight)\n    \n* **[6. Share Phase](#bullet_six)**\n    * [6.1 Activity minutes ](#bullet_sixone)\n    * [6.2 Sleep duration](#bullet_sixtwo)\n    * [6.3 Calories](#bullet_sixthree)\n    * [6.4 Notifications](#bullet_sixfour)\n    \n* **[7. Act Phase](#bullet_seven)**","e81620c6":"As expected, steps and distance walked have a positive correlation with daily calories, but what is really interesting to see is that minutes of vigorous activity are way more relevant to the calories burned in one day, then moderate (fairly) active minutes. It is even more relevant than TotalSteps or TotalDistance.","bfa42e4d":"#### 5.2.2 Merging Relevant data in dailyActivity and sleepDay <a class='anchor' id='bullet_fivetwotwo' ><\/a>","78374ea6":"Note: Some people had sleep time recorded in the calendar day, but didn't had the sleep session attributed to that day that's why I decided to categorize monitored sleep by TotalTimeInBed.","54f55b7e":"This led me to realize that this aproach was flawed, because many times people start sleeping in one calendar day and stop in next. To solve this issue I grouped the minutes slept by calendar day (with the minuteSleep table), so if the person started sleeping before midnight, the fraction of time of sleep that will be counted in that day is equal to the minutes until midnight sumed with the minutes after the last midnight (the start of that same day).","56bd6703":"## 3. Prepare Phase <a class='anchor' id='bullet_three' ><\/a>"}}