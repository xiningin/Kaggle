{"cell_type":{"9d87e915":"code","d258d21a":"code","b354dee4":"code","2e34da5b":"code","e1d02435":"code","195d50a4":"code","9c0e2bc0":"code","6405d19f":"code","8c6a87db":"code","201f06d4":"code","70617949":"code","f03d7090":"code","cf05056a":"code","cbf4d2a4":"code","791eef23":"code","259ebad1":"code","c68ba2b9":"code","aae39067":"code","3a092646":"code","a9892938":"code","d017f5ee":"code","de36f636":"code","6d6126c1":"code","8e620e6a":"code","930d682d":"code","b02d1275":"code","ee319971":"code","0150bc64":"code","68108af8":"code","f0100710":"code","13e75b28":"code","53faaadc":"code","fa0c4b4d":"code","2ac4e84a":"code","8f8d047f":"code","b2b5f8a4":"code","5f2abfb2":"code","f8e1a71c":"code","77cbd46d":"code","55c686c5":"code","1222d279":"code","1827f347":"code","6ee5c038":"code","9a5c7021":"code","6b3d869a":"code","dda75c1e":"code","c01d2ab0":"code","f8d3e064":"code","8e16a677":"code","fb9a95e9":"code","dc7c2626":"code","dd98c260":"code","30e3c9ff":"code","bb4117c4":"code","57b6d619":"code","8c26e6de":"code","3f112e77":"code","86435cdb":"code","25929beb":"code","e63b1fd2":"code","64a284a8":"code","57b404c3":"code","8e01bdb6":"code","9cb05c08":"code","1faa1dde":"code","f1cec5ff":"code","ae478ffe":"code","2d0c8078":"code","534271a3":"code","3cb3a592":"code","ebd815e1":"code","c100325f":"code","09f565a2":"code","13b39740":"code","d30057ca":"code","389bb2b0":"code","b3a87c28":"code","8704e724":"code","f06c8a00":"code","7721b29b":"code","4f9b54bd":"code","f9381ba2":"code","e7241300":"code","31ef6f9b":"code","d17d00df":"code","b15c6b10":"code","dd88e111":"code","fba2ea12":"code","6b778d78":"code","803f7a40":"code","b2052b57":"code","86a4ad60":"code","16590a8c":"code","57371fe1":"code","f9a3396d":"code","eb428d11":"code","68d3455f":"code","8cc5592b":"code","ae8e268c":"code","35d78c2e":"code","accf48ab":"code","e3fa4ebb":"code","b3c87d26":"code","3bbd9cb4":"code","5f044afe":"code","042c55e2":"code","68ed39b7":"code","5bad478b":"code","f903cb07":"code","4bc0a2aa":"code","22886490":"code","b85fd771":"code","42d8d3e0":"markdown","811e8c4a":"markdown","75c5837f":"markdown","291eb9e9":"markdown","dcea5620":"markdown","ecbf50dd":"markdown","6cfb0a43":"markdown","9a7b6157":"markdown","097792af":"markdown","9a233414":"markdown","d7ded73a":"markdown","ff67ef21":"markdown","92c330c6":"markdown","d5d15cf4":"markdown","9760e01a":"markdown","4d423aed":"markdown","da5d037c":"markdown","d2c6d1c8":"markdown","b43bfe87":"markdown","ebab0d82":"markdown","fde01a13":"markdown","81158c23":"markdown","aa01c11c":"markdown","4871d515":"markdown","217d3275":"markdown","6a21ff9d":"markdown","3ff347bb":"markdown","e66ea4f6":"markdown","cb82ac70":"markdown","2b599e7d":"markdown","0412a87a":"markdown","fac89fc5":"markdown","52e083f6":"markdown","5b4203a4":"markdown","e5f61726":"markdown","61b9b417":"markdown","ff26dda3":"markdown","62a88dea":"markdown","cbca0ebf":"markdown","ec157fa4":"markdown","5e3df9b5":"markdown","7c2fa22c":"markdown","34d65173":"markdown","78390f3b":"markdown","c5079bc5":"markdown","06420409":"markdown","ab48abc1":"markdown","97a5e0b2":"markdown","21569c21":"markdown","5df0ae42":"markdown","2ae24032":"markdown","cfa31ea8":"markdown"},"source":{"9d87e915":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","d258d21a":"train_df=pd.read_csv('..\/input\/titanic\/train.csv')\ntrain_df.head()","b354dee4":"train_df.describe()","2e34da5b":"train_df.shape","e1d02435":"test_df=pd.read_csv('..\/input\/titanic\/test.csv')\ntest_df.head()","195d50a4":"test_df.describe()","9c0e2bc0":"test_df.shape","6405d19f":"train_df.columns","8c6a87db":"sns.countplot(train_df.Pclass).set_title(\"Count of Pclass\")\n","201f06d4":"sns.barplot(x='Pclass',y='Survived',data=train_df,ci=None).set_title('Pclass v\/s Survived')","70617949":"sns.countplot(train_df.Sex).set_title('Count of Sex')","f03d7090":"sns.barplot(x='Sex',y='Survived',data=train_df,ci=None).set_title(\"Sex v\/s Survived\")","cf05056a":"sns.distplot(train_df.Age)","cbf4d2a4":"ax=sns.distplot(train_df['Age'][train_df['Survived']==1],hist=False,label='Survived')\nsns.distplot(train_df['Age'][train_df['Survived']==0],hist=False,label='Death')","791eef23":"sns.countplot(train_df.SibSp)","259ebad1":"sns.barplot(x='SibSp',y='Survived',data=train_df,ci=None)","c68ba2b9":"sns.countplot(train_df.Parch)","aae39067":"sns.barplot(x='Parch',y='Survived',data=train_df,ci=None)","3a092646":"sns.distplot(train_df.Fare)","a9892938":"ax=sns.distplot(train_df['Fare'][train_df['Survived']==1],label='Survived',hist=False)\nsns.distplot(train_df['Fare'][train_df['Survived']==0],label='Death',hist=False,ax=ax)","d017f5ee":"sns.countplot(train_df.Embarked)","de36f636":"sns.barplot(x='Embarked',y='Survived',data=train_df,ci=None)","6d6126c1":"train_df['Title']=train_df['Name'].str.extract('([A-Za-z]+)\\.')\ntrain_df.head()","8e620e6a":"train_df.Title.value_counts()","930d682d":"title_dict={\n    'Mr':'Mr',\n    'Miss':'Miss',\n    'Mrs':'Mrs',\n    'Master':'Master',\n    'Dr':'Other',\n    'Rev':'Other',\n    'Major':'Other',\n    'Mlle':'Other',\n    'Col':'Other',\n    'Jonkheer':'Other',\n    'Lady':'Other',\n    'Sir':'Other',\n    'Mme':'Other',\n    'Don':'Other',\n    'Capt':'Other',\n    'Ms':'Other',\n    'Countess':'Other',\n}","b02d1275":"train_df.Title=train_df.Title.map(title_dict)\ntrain_df.Title.value_counts()","ee319971":"sns.countplot(train_df.Title)","0150bc64":"sns.barplot(x='Title',y='Survived',data=train_df,ci=None)","68108af8":"train_df.groupby(['Title']).mean()","f0100710":"train_df.Age.fillna(train_df.groupby('Title')['Age'].transform('mean'),inplace=True)","13e75b28":"bins=np.linspace(train_df.Age.min(),train_df.Age.max(),6)\ngroup_name=['Children','Adult','Maturity','Aging','OldAge']\ntrain_df['Age_binning']=pd.cut(train_df.Age,bins,labels=group_name,include_lowest=True)\ntrain_df.head()","53faaadc":"sns.countplot(train_df.Age_binning)","fa0c4b4d":"sns.barplot(x='Age_binning',y='Survived',data=train_df,ci=None)","2ac4e84a":"bin_fare=np.linspace(train_df.Fare.min(),train_df.Fare.max(),4)\ngroup_fare=['Low','Medium','High']\ntrain_df['Fare_binning']=pd.cut(train_df.Fare,bin_fare,labels=group_fare,include_lowest=True)\ntrain_df.head()","8f8d047f":"sns.countplot(train_df.Fare_binning)","b2b5f8a4":"sns.barplot(x='Fare_binning',y='Survived',data=train_df,ci=None)","5f2abfb2":"train_df['Alone']=np.where((train_df[\"SibSp\"]+train_df[\"Parch\"])>0, 0, 1)","f8e1a71c":"test_df['Title']=test_df['Name'].str.extract('([A-Za-z]+)\\.')\ntest_df.head()","77cbd46d":"test_df.Title.value_counts()","55c686c5":"title_dict_2={\n    'Mr':'Mr',\n    'Miss':'Miss',\n    'Mrs':'Mrs',\n    'Master':'Master',\n    'Dr':'Other',\n    'Rev':'Other',\n    'Col':'Other',\n    'Ms':'Other',\n    'Dona':'Other'\n}","1222d279":"test_df.Title=test_df.Title.map(title_dict_2)\ntest_df.Title.value_counts()","1827f347":"test_df.groupby(['Title']).mean()","6ee5c038":"test_df.Age.fillna(test_df.groupby('Title')['Age'].transform('mean'),inplace=True)","9a5c7021":"bins_test=np.linspace(test_df.Age.min(),test_df.Age.max(),6)\ngroup_name_test=['Children','Adult','Maturity','Aging','OldAge']\ntest_df['Age_binning']=pd.cut(test_df.Age,bins_test,labels=group_name_test,include_lowest=True)\ntest_df.head()","6b3d869a":"test_df.Fare.fillna(train_df.groupby('Fare_binning')['Fare'].transform('mean'),inplace=True)","dda75c1e":"bin_fare_test=np.linspace(test_df.Fare.min(),test_df.Fare.max(),4)\ngroup_fare_test=['Low','Medium','High']\ntest_df['Fare_binning']=pd.cut(test_df.Fare,bin_fare_test,labels=group_fare_test,include_lowest=True)\ntest_df.head()","c01d2ab0":"test_df['Alone']=np.where((test_df[\"SibSp\"]+test_df[\"Parch\"])>0, 0, 1)","f8d3e064":"train_df.isna().sum()","8e16a677":"print('Cabin Null Percentage: ',train_df.Cabin.isna().sum()\/train_df.shape[0]*100)","fb9a95e9":"train_df.drop('Cabin',axis=1,inplace=True)","dc7c2626":"train_df.Embarked.value_counts()","dd98c260":"train_df.Embarked.fillna('S',inplace=True)","30e3c9ff":"test_df.isna().sum()","bb4117c4":"test_df.drop('Cabin',axis=1,inplace=True)","57b6d619":"train_df.head()","8c26e6de":"train_df.drop(['Name','Age','SibSp','Parch','Ticket','Fare'],axis=1,inplace=True)","3f112e77":"test_df.drop(['Name','Age','SibSp','Parch','Ticket','Fare'],axis=1,inplace=True)","86435cdb":"train_df.head()","25929beb":"dummies_train=pd.get_dummies(train_df[['Sex','Embarked','Title','Age_binning','Fare_binning']],drop_first=True)","e63b1fd2":"dummies_test=pd.get_dummies(test_df[['Sex','Embarked','Title','Age_binning','Fare_binning']],drop_first=True)","64a284a8":"train_df=pd.concat([train_df,dummies_train],axis=1)","57b404c3":"test_df=pd.concat([test_df,dummies_test],axis=1)","8e01bdb6":"train_df.drop(['Sex','Embarked','Title','Age_binning','Fare_binning'],axis=1,inplace=True)","9cb05c08":"test_df.drop(['Sex','Embarked','Title','Age_binning','Fare_binning'],axis=1,inplace=True)","1faa1dde":"train_df.head()","f1cec5ff":"from sklearn.model_selection import train_test_split\nfrom sklearn.feature_selection import chi2","ae478ffe":"x_chi=train_df.drop(['PassengerId','Survived'],axis=1)\ny_chi=train_df.Survived","2d0c8078":"features=[]\nfor col in x_chi.columns:\n    res=chi2(train_df[[col]],y_chi)\n    if res[1]<0.05:\n        print(col,end=\": \")\n        print(res)\n        features.append(col)","534271a3":"print(features)","3cb3a592":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import classification_report","ebd815e1":"X=train_df[features]\ny=train_df.Survived","c100325f":"x_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=23)","09f565a2":"lm=LogisticRegression()","13b39740":"lm.fit(x_train,y_train)","d30057ca":"yhat_lm=lm.predict(x_test)","389bb2b0":"f1_score_lm=f1_score(y_test,yhat_lm)\nf1_score_lm","b3a87c28":"accuracy_score_lm=accuracy_score(y_test,yhat_lm)\naccuracy_score_lm","8704e724":"tree=DecisionTreeClassifier()","f06c8a00":"tree.fit(x_train,y_train)","7721b29b":"yhat_tree=tree.predict(x_test)","4f9b54bd":"f1_score_tree=f1_score(y_test,yhat_tree)\nf1_score_tree","f9381ba2":"accuracy_score_tree=accuracy_score(y_test,yhat_tree)\naccuracy_score_tree","e7241300":"naive=GaussianNB()","31ef6f9b":"naive.fit(x_train,y_train)","d17d00df":"yhat_naive=naive.predict(x_test)","b15c6b10":"f1_score_naive=f1_score(y_test,yhat_naive)\nf1_score_naive","dd88e111":"accuracy_score_naive=accuracy_score(y_test,yhat_naive)\naccuracy_score_naive","fba2ea12":"svc=SVC()","6b778d78":"svc.fit(x_train,y_train)","803f7a40":"yhat_svc=svc.predict(x_test)","b2052b57":"f1_score_svc=f1_score(y_test,yhat_svc)\nf1_score_svc","86a4ad60":"accuracy_score_svc=accuracy_score(y_test,yhat_svc)\naccuracy_score_svc","16590a8c":"neighbour=KNeighborsClassifier()","57371fe1":"neighbour.fit(x_train,y_train)","f9a3396d":"yhat_neighbour=neighbour.predict(x_test)","eb428d11":"f1_score_neighbour=f1_score(y_test,yhat_neighbour)\nf1_score_neighbour","68d3455f":"accuracy_score_neighbour=accuracy_score(y_test,yhat_neighbour)\naccuracy_score_neighbour","8cc5592b":"forest=RandomForestClassifier()","ae8e268c":"forest.fit(x_train,y_train)","35d78c2e":"yhat_forest=forest.predict(x_test)","accf48ab":"f1_score_forest=f1_score(y_test,yhat_forest)\nf1_score_forest","e3fa4ebb":"accuracy_score_forest=accuracy_score(y_test,yhat_forest)\naccuracy_score_forest","b3c87d26":"models_name=['LogisticRegression','DecisionTreeClassifier','GaussianNB','SVC','KNeighborsClassifier','RandomForestClassifier']","3bbd9cb4":"f1_score_models=[f1_score_lm,f1_score_tree,f1_score_naive,f1_score_svc,f1_score_neighbour,f1_score_forest]","5f044afe":"fig,ax=plt.subplots(figsize=(10,6))\nax.bar(models_name,f1_score_models)\nax.set_title(\"F1 Score of  Test Data\",pad=20)\nax.set_xlabel(\"Models\",labelpad=20)\nax.set_ylabel(\"F1_Score\",labelpad=20)\nplt.xticks(rotation=90)\n\nfor p in ax.patches:\n    width, height = p.get_width(), p.get_height()\n    x, y = p.get_xy() \n    ax.annotate('{:.0%}'.format(height), (x+0.25, y + height + 0.01))","042c55e2":"accuracy_score_models=[accuracy_score_lm,accuracy_score_tree,accuracy_score_naive,accuracy_score_svc,accuracy_score_neighbour,accuracy_score_forest]","68ed39b7":"fig,ax=plt.subplots(figsize=(10,6))\nax.bar(models_name,accuracy_score_models)\nax.set_title(\"Accuracy of Models on Test Data\",pad=20)\nax.set_xlabel(\"Models\",labelpad=20)\nax.set_ylabel(\"Accuracy\",labelpad=20)\nplt.xticks(rotation=90)\n\nfor p in ax.patches:\n    width, height = p.get_width(), p.get_height()\n    x, y = p.get_xy() \n    ax.annotate('{:.0%}'.format(height), (x+0.25, y + height + 0.01))","5bad478b":"forest.fit(train_df[features],train_df.Survived)","f903cb07":"yhat_test_df=forest.predict(test_df[features])","4bc0a2aa":"test_df['Survived']=pd.Series(yhat_test_df)","22886490":"submission_df=test_df[['PassengerId','Survived']]\nsubmission_df.head()","b85fd771":"submission_df.to_csv('answer_forest.csv',index=False,header=True)","42d8d3e0":"### KNeighborsClassifier","811e8c4a":"### train_data","75c5837f":"# Titanic Survival Analysis","291eb9e9":"## Data Visualization","dcea5620":"### Sex","ecbf50dd":"#### Age","6cfb0a43":"#### Test_data","9a7b6157":"### GaussianNB","097792af":"### DecisionTreeClassifier","9a233414":"### SVC","d7ded73a":"### Age","ff67ef21":"### RandomForestClassifier","92c330c6":"The above Distplot shows that there are more passenger in age group 20 to 40 but the passenger in age group 0 to 10 (Childrens) survived the most ","d5d15cf4":"## Removing Features","9760e01a":"graph represents that parent\/children aboard in total number 3 survived the most","4d423aed":"### Fare","da5d037c":"### Removing Null Values","d2c6d1c8":"#### Name","b43bfe87":"### Pclass","ebab0d82":"### Classification model to predict the survival of Passenger","fde01a13":"The above plot shows that number of male were more that number of femails but femail passenger survived more then male passenger","81158c23":"## Importing Modules","aa01c11c":"### SibSp","4871d515":"## Conclusion","217d3275":"### Dummies Variable","6a21ff9d":"### Test_data","3ff347bb":"## Feature Selection","e66ea4f6":"#### Name","cb82ac70":"the above graph represents that single and two siblings survived the most ","2b599e7d":"### Embarked","0412a87a":"#### Analysing relationship between Categorical (Features) and Categorical (Output) variables","fac89fc5":"### Accuracy_Score","52e083f6":"### Parch","5b4203a4":"### test_data","e5f61726":"## Model Development","61b9b417":"## Feature Engineering","ff26dda3":"### Train_data","62a88dea":"#### Fare","cbca0ebf":"#### SibSp and Parch","ec157fa4":"passenger paid the low fare survived the least","5e3df9b5":"## Importing Data","7c2fa22c":"#### Train_data","34d65173":"We will use Chi-Squared","78390f3b":"#### Age","c5079bc5":"#### SibSp and Parch","06420409":"### test_data","ab48abc1":"### F1_Score","97a5e0b2":"The above plot clearly shows that number of passengers in 3 Pclass were maximum but most passengers survived are from 1 Pclass ","21569c21":"majority of passengers boarded from S Embarked but passengers boarded from Embarked C survived the most","5df0ae42":"#### Fare","2ae24032":"### Creating Features","cfa31ea8":"### LogisticRegression"}}