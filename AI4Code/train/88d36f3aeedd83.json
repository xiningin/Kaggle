{"cell_type":{"c6729daa":"code","7818f318":"code","388f101d":"code","96c028f7":"code","bbb2ab4d":"code","f785d321":"code","e1c44b9f":"code","8e1046bb":"code","e7ff12f2":"markdown","c16f9b69":"markdown"},"source":{"c6729daa":"import pandas as pd\nimport numpy as np\nPATH=\"..\/input\/scrabble-point-value\/\"\ntrain=pd.read_csv(PATH+\"turns_train.csv\")\ntest=pd.read_csv(PATH+\"turns_test.csv\")\nscores=pd.read_csv(PATH+\"scores.csv\")\ngames=pd.read_csv(PATH+\"games.csv\")\nsubmission=pd.read_csv(PATH+\"sample_submission.csv\")\n\ngamefirst=dict([(game[0], game[1]) for game in games.itertuples(index=False)])\ngamelexicon=dict([(game[0], game[6][0:3]) for game in games.itertuples(index=False)])\ntrain['tile_count'] = [len(str(turn[3])) for turn in train.itertuples(index=False)]\ntrain['blank_count'] = [str(turn[3]).count('?') for turn in train.itertuples(index=False)]\ntrain['first'] = [gamefirst[turn[0]] for turn in train.itertuples(index=False)]\ntrain['lexicon'] = [gamelexicon[turn[0]] for turn in train.itertuples(index=False)]\n\ntrain","7818f318":"test['tile_count'] = [len(str(turn[3])) for turn in test.itertuples(index=False)]\ntest['blank_count'] = [str(turn[3]).count('?') for turn in test.itertuples(index=False)]\ntest['first'] = [gamefirst[turn[0]] for turn in test.itertuples(index=False)]\ntest['lexicon'] = [gamelexicon[turn[0]] for turn in test.itertuples(index=False)]\ntest","388f101d":"scores","96c028f7":"games","bbb2ab4d":"submission","f785d321":"human0csw=train[(train['turn_number']>=18)&(train['turn_number']<=22)&(train['lexicon']=='CSW')&(train['nickname']!='BetterBot')&(train['blank_count']==0)&(train['points']>=0)]['points'].mean()\nhuman1csw=train[(train['turn_number']>=18)&(train['turn_number']<=22)&(train['lexicon']=='CSW')&(train['nickname']!='BetterBot')&(train['blank_count']==1)&(train['points']>=0)]['points'].mean()\nhuman2csw=train[(train['turn_number']>=18)&(train['turn_number']<=22)&(train['lexicon']=='CSW')&(train['nickname']!='BetterBot')&(train['blank_count']==2)&(train['points']>=0)]['points'].mean()\nhumancsw = [human0csw, human1csw, human2csw]\n\nplayercsw=train[(train['turn_number']>=18)&(train['turn_number']<=22)&(train['lexicon']=='CSW')&(train['points']>=0)].groupby(['nickname'])['points'].mean()\nplayer0csw=train[(train['turn_number']>=18)&(train['turn_number']<=22)&(train['lexicon']=='CSW')&(train['blank_count']==0)&(train['points']>=0)].groupby(['nickname'])['points'].mean()\nplayer1csw=train[(train['turn_number']>=18)&(train['turn_number']<=22)&(train['lexicon']=='CSW')&(train['blank_count']==1)&(train['points']>=0)].groupby(['nickname'])['points'].mean()\nplayer2csw=train[(train['turn_number']>=18)&(train['turn_number']<=22)&(train['lexicon']=='CSW')&(train['blank_count']==2)&(train['points']>=0)].groupby(['nickname'])['points'].mean()\nplayer012csw = [player0csw, player1csw, player2csw]\n\nhuman0nwl=train[(train['turn_number']>=18)&(train['turn_number']<=22)&(train['lexicon']!='CSW')&(train['nickname']!='BetterBot')&(train['blank_count']==0)&(train['points']>=0)]['points'].mean()\nhuman1nwl=train[(train['turn_number']>=18)&(train['turn_number']<=22)&(train['lexicon']!='CSW')&(train['nickname']!='BetterBot')&(train['blank_count']==1)&(train['points']>=0)]['points'].mean()\nhuman2nwl=train[(train['turn_number']>=18)&(train['turn_number']<=22)&(train['lexicon']!='CSW')&(train['nickname']!='BetterBot')&(train['blank_count']==2)&(train['points']>=0)]['points'].mean()\nhumannwl = [human0nwl, human1nwl, human2nwl]\n\nplayernwl=train[(train['turn_number']>=18)&(train['turn_number']<=22)&(train['lexicon']!='CSW')&(train['points']>=0)].groupby(['nickname'])['points'].mean()\nplayer0nwl=train[(train['turn_number']>=18)&(train['turn_number']<=22)&(train['lexicon']!='CSW')&(train['blank_count']==0)&(train['points']>=0)].groupby(['nickname'])['points'].mean()\nplayer1nwl=train[(train['turn_number']>=18)&(train['turn_number']<=22)&(train['lexicon']!='CSW')&(train['blank_count']==1)&(train['points']>=0)].groupby(['nickname'])['points'].mean()\nplayer2nwl=train[(train['turn_number']>=18)&(train['turn_number']<=22)&(train['lexicon']!='CSW')&(train['blank_count']==2)&(train['points']>=0)].groupby(['nickname'])['points'].mean()\nplayer012nwl = [player0nwl, player1nwl, player2nwl]\n\nhumancsw, playercsw, humannwl, playernwl                                                                                                                        ","e1c44b9f":"points19 = {}\nname19 = {}\nname20 = {}\nfor turn in test.itertuples(index=False):\n    if turn[1]==19:\n        name19[turn[0]] = turn[2]\n        points19[turn[0]] = turn[6]\n    elif turn[1]==20:\n        name20[turn[0]] = (turn[2], str(turn[4]).count('?'))\n\nfor gameid in name20:\n    name, blank_count = name20[gameid]\n    lexicon = gamelexicon[gameid]\n    if name19[gameid] == name:\n        submission.loc[submission['game_id'] == gameid, 'points'] = -points19[gameid]\n    elif lexicon=='CSW' and name in player012csw[blank_count].index:\n        submission.loc[submission['game_id'] == gameid, 'points'] = player012csw[blank_count][name]\n    elif lexicon=='CSW' and name in playercsw.index:\n        submission.loc[submission['game_id'] == gameid, 'points'] = playercsw[name]\n    elif name in player012nwl[blank_count].index:\n        submission.loc[submission['game_id'] == gameid, 'points'] = player012nwl[blank_count][name]\n    elif name in playernwl.index:\n        submission.loc[submission['game_id'] == gameid, 'points'] = playernwl[name]\n    else:\n        submission.loc[submission['game_id'] == gameid, 'points'] = humancsw[blank_count] if lexicon=='CSW' else humannwl[blank_count]\nsubmission.to_csv(\"submission.csv\",index=False)","8e1046bb":"submission","e7ff12f2":"### This simple code gives us a baseline better that baseline of this contest.","c16f9b69":"### We focus on turn_round == 20 and User == 'BetterBot'"}}