{"cell_type":{"21566631":"code","7cf8ab40":"code","79b0ef9f":"code","14ecc421":"code","a4d14193":"code","e301316d":"code","a28c686e":"code","f33664bd":"code","c1aaac88":"code","ac0915bd":"code","0a9a30ff":"code","38ddc7cf":"code","4cad1410":"code","9d0be936":"code","f49ebc44":"code","ad3a9ae1":"code","a5f4d32d":"code","f7f24c5b":"code","38c0e148":"code","e2e97880":"code","02379bbb":"code","fbd14c81":"code","ce3aeab2":"code","70f89fb9":"code","8f4c0d7f":"markdown","7d2273b1":"markdown","79d23c3b":"markdown","20dfb799":"markdown"},"source":{"21566631":"# Pandas : librairie de manipulation de donn\u00e9es\n# NumPy : librairie de calcul scientifique\n# MatPlotLib : librairie de visualisation et graphiques\n# SeaBorn : librairie de graphiques avanc\u00e9s\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nimport pandas\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.wrappers.scikit_learn import KerasClassifier\nfrom keras.utils import np_utils\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import KFold\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import classification_report, confusion_matrix, roc_curve, roc_auc_score,auc, accuracy_score","7cf8ab40":"df = pd.read_csv(\"..\/input\/abalone-dataset\/abalone.csv\")","79b0ef9f":"df.head(10).T","14ecc421":"df.columns","a4d14193":"from IPython.core.display import HTML # permet d'afficher du code html dans jupyter\ndisplay(HTML(df.head(10).to_html()))","e301316d":"df.shape","a28c686e":"df.describe()","f33664bd":"df.info()","c1aaac88":"#sns.pairplot(df, hue = \"Sex\")","ac0915bd":"df['Sex'] = df['Sex'].map({\"M\":0, \"F\":1, \"I\":2})","0a9a30ff":"tabcorr = df.corr()","38ddc7cf":"tabcorr","4cad1410":"plt.figure(figsize=(12,12))\nsns.heatmap(abs(tabcorr), cmap=\"coolwarm\")","9d0be936":"sns.clustermap(abs(tabcorr), cmap=\"coolwarm\")","f49ebc44":"correlations = tabcorr.Sex\nprint(correlations)","ad3a9ae1":"correlations = correlations.drop(['Sex'],axis=0)","a5f4d32d":"print(abs(correlations).sort_values(ascending=False))","f7f24c5b":"from tensorflow.keras.utils import to_categorical\nfrom sklearn.model_selection import train_test_split\ny = df['Sex']\nX = df.drop(['Sex'], axis=1).values.astype(float)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)\ny_test_ = y_test\ny_train = to_categorical(y_train, 3)\ny_test = to_categorical(y_test, 3)","38c0e148":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\n\nmodel = Sequential()\nmodel.add(Dense(16,input_dim=8, activation=\"tanh\"))\nmodel.add(Dense(3, activation=\"softmax\"))\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","e2e97880":"train = model.fit(X_train , y_train , validation_data=(X_test,y_test), epochs=100, verbose=1)","02379bbb":"predict_x=model.predict(X_test)\ny_ann=np.argmax(predict_x,axis=1)","fbd14c81":"accuracy_score(y_test_, y_ann)","ce3aeab2":"confusion_matrix(y_test_, y_ann)","70f89fb9":"def plot_scores(train) :\n    accuracy = train.history['accuracy']\n    val_accuracy = train.history['val_accuracy']\n    epochs = range(len(accuracy))\n    plt.plot(epochs, accuracy, 'b', label='Score apprentissage')\n    plt.plot(epochs, val_accuracy, 'r', label='Score validation')\n    plt.title('Scores')\n    plt.legend()\n    plt.show()\n\nplot_scores(train)","8f4c0d7f":"## Analyser le dataset","7d2273b1":"## Visualiser le dataset","79d23c3b":"## Visualiser les corr\u00e9lations entre les colonnes","20dfb799":"## Deep Learning"}}