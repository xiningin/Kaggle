{"cell_type":{"32222f09":"code","13413182":"code","b8411150":"code","239ff02c":"code","5c581207":"code","f7fefb00":"code","ba558ba5":"code","6680431f":"code","1e6566a5":"code","153db6f1":"code","3f8908c1":"code","764ddbaf":"code","4cd35349":"code","d8dc452d":"code","5650cd2a":"code","14bad170":"code","1a943da5":"code","b98a039e":"code","4ad34d64":"code","7b567ac1":"code","a17f1b66":"code","61bb8242":"code","15c4a970":"code","b4eec0f2":"code","b546a63b":"code","11b5dda7":"code","93a3ecc3":"code","eb41adfe":"code","b08ead7d":"code","ca8307f6":"code","25f056bf":"code","0daa36c1":"code","52c95838":"code","22746b85":"code","45636e27":"code","c4833374":"code","23fe0f71":"code","a9ba48f7":"code","8d495412":"code","716447b3":"code","b6d2812a":"code","44f77f2d":"code","88392805":"code","e37ff73f":"code","9704fedf":"code","4cd92e80":"code","af969a39":"code","671a8992":"code","f63475a7":"code","15b4fd16":"code","f55e3e70":"code","6445f1be":"code","69fc7031":"code","010aebb2":"code","939fe75f":"code","a4430613":"code","c0fc092a":"code","21cde574":"code","cb18193c":"code","d6d787a7":"code","c5d5a09e":"code","ec929c8d":"code","6e4591b5":"code","c3baee12":"code","7a82c078":"code","120248ad":"markdown","0cf9c527":"markdown","669800cf":"markdown","d5d73cff":"markdown","052c4cc8":"markdown","71232179":"markdown","1dc54b5a":"markdown","b0a60e28":"markdown","05d20e50":"markdown","cfe5ad33":"markdown","b607263b":"markdown","7aa96b97":"markdown","9633a29a":"markdown","a16df56e":"markdown","fa366630":"markdown","dee06a5d":"markdown","07033e3c":"markdown"},"source":{"32222f09":"import numpy as np\nimport pandas as pd\n\nimport plotly.offline as py\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport gc\nimport warnings\nimport time\nwarnings.filterwarnings(\"ignore\")\n\n%matplotlib inline","13413182":"app = pd.read_csv('..\/input\/home-credit-default-risk\/application_train.csv')\napp_test = pd.read_csv('..\/input\/home-credit-default-risk\/application_test.csv')\n\nbureau = pd.read_csv('..\/input\/home-credit-default-risk\/bureau.csv')\nbureau_bal = pd.read_csv('..\/input\/home-credit-default-risk\/bureau_balance.csv')\n\ncredit_card_bal = pd.read_csv('..\/input\/home-credit-default-risk\/credit_card_balance.csv')\npos_cash_bal = pd.read_csv('..\/input\/home-credit-default-risk\/POS_CASH_balance.csv')\n\nprevious_app = pd.read_csv('..\/input\/home-credit-default-risk\/previous_application.csv')\ninstallment_pay = pd.read_csv('..\/input\/home-credit-default-risk\/installments_payments.csv')","b8411150":"name_list = ['application_train.csv', 'application_test.csv', \n             'bureau.csv', 'bureau_balance.csv',\n             'credit_card_balance.csv','POS_CASH_balance.csv',\n             'previous_application.csv','installments_payments.csv']\nrow_list = [app.shape[0], app_test.shape[0], bureau.shape[0], \n            bureau_bal.shape[0],credit_card_bal.shape[0],\n            pos_cash_bal.shape[0], previous_app.shape[0], \n            installment_pay.shape[0]]\ncolumn_list = [app.shape[1], app_test.shape[1], bureau.shape[1], \n               bureau_bal.shape[1],credit_card_bal.shape[1],\n            pos_cash_bal.shape[1], previous_app.shape[1], \n               installment_pay.shape[1]]\nsummary_df_column_list = ['File Name','Number of Rows', 'Number of Columns']\nsummary_df = pd.DataFrame(list(zip(name_list, row_list, column_list)),\n                          index=[1,2,3,4,5,6,7,8],\n                          columns=summary_df_column_list)\nsummary_df.sort_index()","239ff02c":"def feature_tye_split(data, special_list=[]):\n    categorical_list = []\n    discreat_numerical_list = []\n    numerical_list = []\n    \n    for i in data.columns.tolist():\n        if data[i].dtype == 'object':\n            categorical_list.append(i)\n        elif data[i].nunique() < 25:\n            discreat_numerical_list.append(i)\n        elif i in special_list:\n            discreat_numerical_list.append(i)\n        else:\n            numerical_list.append(i)\n    return categorical_list, discreat_numerical_list, numerical_list\n\ncategorical_list,discreat_numerical_list,numerical_list = feature_tye_split(\n    app,special_list=['AMT_REQ_CREDIT_BUREAU_YEAR'])","5c581207":"print(len(categorical_list), 'Categorical Features: ', categorical_list)\nprint('---------------------------------------------------------------')\nprint(len(discreat_numerical_list), 'Discreate Numerical Features: ', discreat_numerical_list)\nprint('---------------------------------------------------------------')\nprint(len(numerical_list), 'Numerical Features: ', numerical_list)","f7fefb00":"def plot_categorical(data, column, size=[8,4], xlabel_angle=0, title=''):\n    plotdata = data[column].value_counts();\n    plt.figure(figsize=size)\n    sns.barplot(x=plotdata.index, y=plotdata.values)\n    plt.title(title)\n    plt.xticks(rotation = xlabel_angle)\n    plt.show()","ba558ba5":"def plot_categorical_bar(data, column):    \n    plotdata = data[column].value_counts();\n\n    fig = go.Figure(data=[\n        go.Bar(x=plotdata.index, y=plotdata.values)\n    ])\n    fig.show()","6680431f":"def plot_categorical_pie(data, column, title, hole=.3):\n    plotdata = data[column].value_counts();\n    \n    fig = go.Figure(data=[go.Pie(labels=plotdata.index, values=plotdata.values, hole=hole)])\n    fig.update_layout(title_text=title)\n    fig.show()","1e6566a5":"def plot_numerical(data, column, size=[8,4], bins=50):\n    plt.figure(figsize=size)\n    plt.title('Distribution of %s'%column)\n    sns.distplot(data[column].dropna(), kde=True, bins=bins)\n    plt.show()","153db6f1":"def plot_categorical_bylable(data, column, size=[12,6], xlabel_angle=0, title=''):\n   \n    label1 = data.loc[data.TARGET == 1, column].value_counts()\n    label0 = data.loc[data.TARGET == 0, column].value_counts()\n    \n    plt.figure(figsize=size)\n    plt.subplot(1,2,1)\n    sns.barplot(x=label1.index, y=label1.values)\n    plt.title('Default (TARGET == 1)' + title)\n    plt.xticks(rotation = xlabel_angle)\n    \n    plt.subplot(1,2,2)\n    sns.barplot(x=label0.index, y=label0.values)\n    plt.title('Non Default (TARGET == 0)' + title)\n    plt.xticks(rotation = xlabel_angle)\n    \n    plt.show()","3f8908c1":"def plot_categorical_bylabel_bar(data, column):    \n    labels=data[column].unique()\n\n    fig = go.Figure(data=[\n        go.Bar(name='Non Defaults', \n               x=labels, \n               y=data.loc[data.TARGET == 0, column].value_counts().values),\n        go.Bar(name='Defaults', \n               x=labels, \n               y=data.loc[data.TARGET == 1, column].value_counts().values)\n    ])\n    # Change the bar mode\n    fig.update_layout(barmode='group')\n    fig.show()","764ddbaf":"def plot_categorical_bylabel_pie(data, column):\n    labels = data[column].unique()\n\n    # Create subplots: use 'domain' type for Pie subplot\n    fig = make_subplots(rows=1, \n                        cols=2, \n                        specs=[[{'type':'domain'}, {'type':'domain'}]],\n                        subplot_titles=['Target=0', 'Target=0'])\n    fig.add_trace(go.Pie(labels=labels, \n                         values=data.loc[app.TARGET == 0, column].value_counts().values, \n                         name=\"Non Defaults\"),\n                  1, 1)\n    fig.add_trace(go.Pie(labels=labels, \n                         values=data.loc[app.TARGET == 1,column].value_counts().values, \n                         name=\"Defaults\"),\n                  1, 2)\n\n    # Use `hole` to create a donut-like pie chart\n    fig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\n\n    fig.update_layout(\n        title_text=column +\" wise defaulties\",\n        # Add annotations in the center of the donut pies.\n        annotations=[dict(text='Target=0', x=0.18, y=0.55, font_size=20, showarrow=False),\n                     dict(text='Target=1', x=0.82, y=0.55, font_size=20, showarrow=False)])\n    fig.show()","4cd35349":"def plot_numerical_bylabel(data, column, size=[12,6]):\n    \n    plt.figure(figsize=size)\n    corr = data['TARGET'].corr(data[column])\n    avg_repaid = data.ix[data.TARGET == 0, column].median()\n    avg_not_repaid = data.ix[data.TARGET == 1, column].median()\n    \n    sns.kdeplot(data.ix[data.TARGET == 0, column], label='TARGET = 0')\n    sns.kdeplot(data.ix[data.TARGET == 1, column], label='TARGET = 1')\n\n    #plt.figure(figsize=(12,6))\n    plt.xlabel(column);plt.ylabel('Density');plt.title('%s Distributions'%column)\n    plt.legend();\n    \n    print('Correlation between %s and TARGET is %0.4f'%(column, corr))\n    print('Average Repaid = %f and Average Not Repaid = %f for Feature = %s'%(avg_repaid, avg_not_repaid, column))","d8dc452d":"plot_categorical(app, 'TARGET', title='Application Train : TARGET')","5650cd2a":"plot_categorical_pie(app, 'TARGET', 'Label Target ', .6)","14bad170":"plot_categorical_bar(app,'OCCUPATION_TYPE')","1a943da5":"plot_categorical_pie(app, 'OCCUPATION_TYPE', 'Occupation type', .2)","b98a039e":"plot_categorical(app,'NAME_INCOME_TYPE', size=[10,6], title='Income Type', xlabel_angle=70)","4ad34d64":"plot_categorical_pie(app, 'NAME_INCOME_TYPE', 'Income Type', .7)","7b567ac1":"plot_categorical(app,'NAME_HOUSING_TYPE', size=[10,6], title='House Type', xlabel_angle=70)","a17f1b66":"plot_numerical(app, 'AMT_CREDIT')","61bb8242":"plot_numerical(app, 'AMT_ANNUITY')","15c4a970":"plot_numerical(app, 'DAYS_EMPLOYED')","b4eec0f2":"plt.boxplot(app[\"DAYS_EMPLOYED\"])\nplt.title(\"Boxplot of DAYS_EMPLOYED\\n \")\nplt.ylabel(\"DAYS_EMPLOYED\")","b546a63b":"fig = px.box(app, x=\"NAME_INCOME_TYPE\", y=\"DAYS_EMPLOYED\")\nfig.show()","11b5dda7":"fig = px.box(app[app['NAME_INCOME_TYPE']== 'Working'], x=\"NAME_INCOME_TYPE\", y=\"DAYS_EMPLOYED\")\nfig.show()","93a3ecc3":"fig = px.box(app, x=\"NAME_FAMILY_STATUS\", y=\"DAYS_BIRTH\")\nfig.show()","eb41adfe":"plot_categorical_bylable(app, 'CODE_GENDER', title='Gender' )","b08ead7d":"plot_categorical_bylabel_bar(app, 'CODE_GENDER')","ca8307f6":"plot_categorical_bylabel_pie(app, 'CODE_GENDER')","25f056bf":"plot_categorical_bylable(app, 'NAME_EDUCATION_TYPE', title='Education Type', xlabel_angle=80 )","0daa36c1":"plot_categorical_bylabel_bar(app, 'NAME_EDUCATION_TYPE')","52c95838":"plot_categorical_bylabel_pie(app, 'NAME_EDUCATION_TYPE')","22746b85":"plot_categorical_bylable(app, 'OCCUPATION_TYPE', title='Occupation Type', xlabel_angle=80)","45636e27":"plot_categorical_bylabel_bar(app, 'OCCUPATION_TYPE')","c4833374":"plot_categorical_bylabel_pie(app, 'OCCUPATION_TYPE')","23fe0f71":"plot_numerical_bylabel(app, 'EXT_SOURCE_1')","a9ba48f7":"plot_numerical_bylabel(app, 'EXT_SOURCE_2')","8d495412":"plot_numerical_bylabel(app, 'EXT_SOURCE_3')","716447b3":"corr_matrix = app.corr()\nplt.figure(figsize=[15,15])\nsns.heatmap(corr_matrix.values, annot=False)\nplt.show()","b6d2812a":"go.Figure(data=go.Heatmap(z=corr_matrix.values))","44f77f2d":"app_dis_num = app[discreat_numerical_list + ['TARGET']]\napp_dis_corr = app_dis_num.corr()\ngo.Figure(data=go.Heatmap(x=app_dis_corr.index, y=app_dis_corr.index, z=app_dis_corr.values))","88392805":"app_num = app[numerical_list + ['TARGET']]\napp_num_corr = app_num.corr()\napp_num_corr.sort_values('TARGET', ascending=False, inplace=True)\ngo.Figure(data=go.Heatmap(x=app_num_corr.index, y=app_num_corr.index, z=app_num_corr.values))","e37ff73f":"documents = [column for column in app.columns if column[:6] == 'FLAG_D']\napp_docs = app[documents + ['TARGET']]\napp_docs_corr = app_docs.corr()\napp_docs_corr.sort_values('TARGET', ascending=False, inplace=True)\ngo.Figure(data=go.Heatmap(x=app_docs_corr.index, y=app_docs_corr.index, z=app_docs_corr.values))","9704fedf":"app_home_columns = ['APARTMENTS_AVG',\n 'BASEMENTAREA_AVG',\n 'YEARS_BEGINEXPLUATATION_AVG',\n 'YEARS_BUILD_AVG',\n 'COMMONAREA_AVG',\n 'ELEVATORS_AVG',\n 'ENTRANCES_AVG',\n 'FLOORSMAX_AVG',\n 'FLOORSMIN_AVG',\n 'LANDAREA_AVG',\n 'LIVINGAPARTMENTS_AVG',\n 'LIVINGAREA_AVG',\n 'NONLIVINGAPARTMENTS_AVG',\n 'NONLIVINGAREA_AVG',\n 'APARTMENTS_MODE',\n 'BASEMENTAREA_MODE',\n 'YEARS_BEGINEXPLUATATION_MODE',\n 'YEARS_BUILD_MODE',\n 'COMMONAREA_MODE',\n 'ELEVATORS_MODE',\n 'ENTRANCES_MODE',\n 'FLOORSMAX_MODE',\n 'FLOORSMIN_MODE',\n 'LANDAREA_MODE',\n 'LIVINGAPARTMENTS_MODE',\n 'LIVINGAREA_MODE',\n 'NONLIVINGAPARTMENTS_MODE',\n 'NONLIVINGAREA_MODE',\n 'APARTMENTS_MEDI',\n 'BASEMENTAREA_MEDI',\n 'YEARS_BEGINEXPLUATATION_MEDI',\n 'YEARS_BUILD_MEDI',\n 'COMMONAREA_MEDI',\n 'ELEVATORS_MEDI',\n 'ENTRANCES_MEDI',\n 'FLOORSMAX_MEDI',\n 'FLOORSMIN_MEDI',\n 'LANDAREA_MEDI',\n 'LIVINGAPARTMENTS_MEDI',\n 'LIVINGAREA_MEDI',\n 'NONLIVINGAPARTMENTS_MEDI',\n 'NONLIVINGAREA_MEDI']","4cd92e80":"app_home_df = app[app_home_columns + ['TARGET']]\napp_home_corr = app_home_df.corr()\napp_home_corr.sort_values('TARGET', ascending=False, inplace=True)\ngo.Figure(data=go.Heatmap(x=app_home_corr.index, y=app_home_corr.index, z=app_home_corr.values))","af969a39":"app['annuity_income_percentage'] = app['AMT_ANNUITY'] \/ app['AMT_INCOME_TOTAL']\napp['car_to_birth_ratio'] = app['OWN_CAR_AGE'] \/ app['DAYS_BIRTH']\napp['car_to_employ_ratio'] = app['OWN_CAR_AGE'] \/ app['DAYS_EMPLOYED']\napp['children_ratio'] = app['CNT_CHILDREN'] \/ app['CNT_FAM_MEMBERS']\napp['credit_to_annuity_ratio'] = app['AMT_CREDIT'] \/ app['AMT_ANNUITY']\napp['credit_to_goods_ratio'] = app['AMT_CREDIT'] \/ app['AMT_GOODS_PRICE']\napp['credit_to_income_ratio'] = app['AMT_CREDIT'] \/ app['AMT_INCOME_TOTAL']\napp['days_employed_percentage'] = app['DAYS_EMPLOYED'] \/ app['DAYS_BIRTH']\napp['income_credit_percentage'] = app['AMT_INCOME_TOTAL'] \/ app['AMT_CREDIT']\napp['income_per_child'] = app['AMT_INCOME_TOTAL'] \/ (1 + app['CNT_CHILDREN'])\napp['income_per_person'] = app['AMT_INCOME_TOTAL'] \/ app['CNT_FAM_MEMBERS']\napp['payment_rate'] = app['AMT_ANNUITY'] \/ app['AMT_CREDIT']\napp['phone_to_birth_ratio'] = app['DAYS_LAST_PHONE_CHANGE'] \/ app['DAYS_BIRTH']\napp['phone_to_employ_ratio'] = app['DAYS_LAST_PHONE_CHANGE'] \/ app['DAYS_EMPLOYED']","671a8992":"app_eng_num_columns = ['annuity_income_percentage',\n                                'car_to_birth_ratio',\n                                'car_to_employ_ratio',\n                                'children_ratio',\n                                'credit_to_annuity_ratio',\n                                'credit_to_goods_ratio',\n                                'credit_to_income_ratio',\n                                'days_employed_percentage',\n                                'income_credit_percentage',\n                                'income_per_child',\n                                'income_per_person',\n                                'payment_rate',\n                                'phone_to_birth_ratio',\n                                'phone_to_employ_ratio'\n                                ]","f63475a7":"app_eng = app[app_eng_num_columns + ['TARGET']]\napp_eng_corr = abs(app_eng.corr())\napp_eng_corr.sort_values('TARGET', ascending=False)['TARGET']\ngo.Figure(data=go.Heatmap(x=app_eng_corr.index, y=app_eng_corr.index, z=app_eng_corr.values))","15b4fd16":"bureau['bureau_credit_active_binary'] = (bureau['CREDIT_ACTIVE'] != 'Closed').astype(int)\nbureau['bureau_credit_enddate_binary'] = (bureau['DAYS_CREDIT_ENDDATE'] > 0).astype(int)","f55e3e70":"groupby_SK_ID_CURR = bureau.groupby(by=['SK_ID_CURR'])\nfeatures = pd.DataFrame({'SK_ID_CURR':bureau['SK_ID_CURR'].unique()})\nfeatures.head()\n","6445f1be":"group_object = groupby_SK_ID_CURR['DAYS_CREDIT'].agg('count').reset_index()\ngroup_object.rename(index=str, columns={'DAYS_CREDIT': 'bureau_number_of_past_loans'},inplace=True)\nfeatures = features.merge(group_object, on=['SK_ID_CURR'], how='left')\nfeatures.head()","69fc7031":"group_object = groupby_SK_ID_CURR['CREDIT_TYPE'].agg('nunique').reset_index()\ngroup_object.rename(index=str, columns={'CREDIT_TYPE':'bureau_number_of_loan_types'}, inplace=True)\nfeatures = features.merge(group_object, on=['SK_ID_CURR'], how='left')\nfeatures.head()","010aebb2":"features['bureau_average_of_past_loans_per_type'] = features['bureau_number_of_past_loans'] \/ features['bureau_number_of_loan_types']\nfeatures.head()","939fe75f":"group_object = groupby_SK_ID_CURR['bureau_credit_active_binary'].agg('mean').reset_index()\nfeatures = features.merge(group_object, on=['SK_ID_CURR'], how='left')\nfeatures.head()","a4430613":"group_object = groupby_SK_ID_CURR['AMT_CREDIT_SUM_DEBT'].agg('sum').reset_index()\ngroup_object.rename(index=str, columns={'AMT_CREDIT_SUM_DEBT': 'bureau_total_customer_debt'},inplace=True)\nfeatures = features.merge(group_object, on=['SK_ID_CURR'], how='left')\nfeatures.head()","c0fc092a":"group_object = groupby_SK_ID_CURR['AMT_CREDIT_SUM'].agg('sum').reset_index()\ngroup_object.rename(index=str, columns={'AMT_CREDIT_SUM': 'bureau_total_customer_credit'},inplace=True)\nfeatures = features.merge(group_object, on=['SK_ID_CURR'], how='left')\nfeatures.head()","21cde574":"features['bureau_debt_credit_ratio'] = features['bureau_total_customer_debt'] \/ features['bureau_total_customer_credit']\nfeatures.head()","cb18193c":"group_object = groupby_SK_ID_CURR['AMT_CREDIT_SUM_OVERDUE'].agg('sum').reset_index()\ngroup_object.rename(index=str, columns={'AMT_CREDIT_SUM_OVERDUE': 'bureau_total_customer_overdue'},inplace=True)\nfeatures = features.merge(group_object, on=['SK_ID_CURR'], how='left')\nfeatures.head()","d6d787a7":"features['bureau_overdue_debt_ratio'] = features['bureau_total_customer_overdue'] \/ features['bureau_total_customer_debt']\nfeatures.head()","c5d5a09e":"group_object = groupby_SK_ID_CURR['CNT_CREDIT_PROLONG'].agg('sum').reset_index()\ngroup_object.rename(index=str, columns={'CNT_CREDIT_PROLONG': 'bureau_total_prolonged_count'},inplace=True)\n\nfeatures = features.merge(group_object, on=['SK_ID_CURR'], how='left')\nfeatures.head()","ec929c8d":"group_object = groupby_SK_ID_CURR['bureau_credit_enddate_binary'].agg('mean').reset_index()\ngroup_object.rename(index=str, columns={'bureau_credit_enddate_binary': 'bureau_credit_enddate_percentage'},inplace=True)\n\nfeatures = features.merge(group_object, on=['SK_ID_CURR'], how='left')\nfeatures.head()","6e4591b5":"app_bureau_eng = app.merge(features,\n                                left_on=['SK_ID_CURR'],\n                                right_on=['SK_ID_CURR'],\n                                how='left',\n                                validate='one_to_one')\napp_bureau_eng.shape","c3baee12":"bureau_eng_num_columns = list(features.columns)\nbureau_eng_num_columns.remove('SK_ID_CURR')\nbureau_eng = app_bureau_eng[bureau_eng_num_columns + ['TARGET']]\nbureau_eng_corr = abs(bureau_eng.corr())\n\nbureau_eng_corr.sort_values('TARGET', ascending=False, inplace=True)\ngo.Figure(data=go.Heatmap(x=bureau_eng_corr.index, y=bureau_eng_corr.index, z=bureau_eng_corr.values))","7a82c078":"app_bureau_eng_columns = app_eng_num_columns + bureau_eng_num_columns\napp_bureau_eng_corr = app_bureau_eng[['TARGET'] + app_bureau_eng_columns].corr()\napp_bureau_eng_corr.sort_values('TARGET', ascending=False, inplace=True)\ngo.Figure(data=go.Heatmap(x=app_bureau_eng_corr.index, y=app_bureau_eng_corr.index, z=app_bureau_eng_corr.values))","120248ad":"**Checking some outliers**","0cf9c527":"## Exploratory data analysis\n### Main Application Train file","669800cf":"### Creating some features from application train file manually ","d5d73cff":"Creating Summary dataframe for displaying number of rows and columns","052c4cc8":"#### Next Plan\n#### Other files (bureau_balance, credit_card_bal, pos_cash_bal, previous_application, installment_payments) needs to joined with application file\n","71232179":"Import required libraries","1dc54b5a":"### Combining application and bureau engineered features and check thiere correlation","b0a60e28":"#### Application users home related features and its correlation","05d20e50":"Correlation of discreat numerical values","cfe5ad33":"### Checking bureau engineered features correlation","b607263b":"### Bureau file\n#### Creating some features from buearu file","7aa96b97":"*1. Load Files*","9633a29a":"1. Load Files\n1. Exploratory data analysis\n> * Main Application Train file\n> * Bureau file\n> * Bureau Balance file","a16df56e":"#### Document flag related features and its correlation ","fa366630":"Feature list spliting to Numerical, Catagorical or Discreat Numerical ","dee06a5d":"#### Correlation of numerical value","07033e3c":"### Merging application and buearu files"}}