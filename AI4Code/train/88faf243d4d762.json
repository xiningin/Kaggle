{"cell_type":{"e56bf3dd":"code","42570f97":"code","8357b5c3":"code","3eb42bdb":"code","10bd073b":"code","2392b349":"code","ae786617":"code","725ceec9":"code","5526acb2":"code","afeb8e2c":"code","1e528b6e":"code","7b36f973":"code","09cda0cf":"code","a3b425ce":"code","b054fb70":"code","8dcc8423":"code","6ecaafe6":"code","b6c17c5b":"code","79702424":"code","6b55899d":"code","766bd48a":"code","c4e5e690":"code","ea2f1014":"code","cdb11f22":"code","c22d63ca":"code","3de2d331":"code","b1c00b55":"code","cb6efa8c":"code","f6a75458":"markdown","5a05465d":"markdown","1f0dbc0b":"markdown","99f9aeb8":"markdown","15838c78":"markdown","d0c85afd":"markdown","db4c1950":"markdown","9d5dab12":"markdown"},"source":{"e56bf3dd":"# \uc2dc\ud5d8\ud658\uacbd \uc138\ud305 (\ucf54\ub4dc \ubcc0\uacbd X)\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\n\ndef exam_data_load(df, target, id_name=\"\", null_name=\"\"):\n    if id_name == \"\":\n        df = df.reset_index().rename(columns={\"index\": \"id\"})\n        id_name = 'id'\n    else:\n        id_name = id_name\n    \n    if null_name != \"\":\n        df[df == null_name] = np.nan\n    \n    X_train, X_test = train_test_split(df, test_size=0.2, random_state=2021)\n    \n    y_train = X_train[[id_name, target]]\n    X_train = X_train.drop(columns=[target])\n\n    \n    y_test = X_test[[id_name, target]]\n    X_test = X_test.drop(columns=[target])\n    return X_train, X_test, y_train, y_test \n    \ndf = pd.read_csv(\"..\/input\/insurance\/insurance.csv\")\nX_train, X_test, y_train, y_test = exam_data_load(df, target='charges')\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","42570f97":"X_train.head()","8357b5c3":"y_train.head()","3eb42bdb":"y_train['charges'].hist()","10bd073b":"X_train.isnull().sum()","2392b349":"X_test.isnull().sum()","ae786617":"X_train.info()","725ceec9":"X_train.select_dtypes(\"object\").columns","5526acb2":"# Train ['sex', 'smoker', 'region']\ncols = X_train.select_dtypes(\"object\").columns\n\nfor col in cols:\n    print(\"\\n=====\", col, \"=====\")\n    print(\"[train]\")\n    print(X_train[col].value_counts())\n    print(\"[test]\")\n    print(X_test[col].value_counts())","afeb8e2c":"X_train = pd.get_dummies(X_train, columns = cols)\nX_test = pd.get_dummies(X_test, columns = cols)","1e528b6e":"X_train.head(2)","7b36f973":"y_train['charges'].hist()","09cda0cf":"y_train['charges'] = np.log1p(y_train['charges'])","a3b425ce":"y_train['charges'].hist()","b054fb70":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_train['bmi'] = scaler.fit_transform(X_train[['bmi']])\nX_test['bmi'] = scaler.transform(X_test[['bmi']])","8dcc8423":"# \ub098\uc774\ub97c 10\ub300, 20\ub300, 30\ub300\ub85c \uad6c\ubd84\ud558\uae30 \uc704\ud574 10\uc744 \ub098\ub208 \ubaab \uac12\ub9cc \uad6c\ud568\nX_train['age'] = X_train['age'].apply(lambda x: x\/\/10)\nX_test['age'] = X_test['age'].apply(lambda x: x\/\/10)","6ecaafe6":"X_train.head(3)","b6c17c5b":"target = y_train['charges']\nX_train = X_train.drop('id', 1)","79702424":"from sklearn.model_selection import train_test_split\nX_tr, X_val, y_tr, y_val = train_test_split(X_train, target, test_size=0.15, random_state=2022)\nX_tr.shape, X_val.shape, y_tr.shape, y_val.shape","6b55899d":"from sklearn.ensemble import RandomForestRegressor\n\nrf = RandomForestRegressor()\nrf.fit(X_tr, y_tr)\npred = rf.predict(X_val)","766bd48a":"from sklearn.metrics import mean_squared_error\ndef rmse2(y_true, y_pred):\n    return np.sqrt(mean_squared_error(y_true, y_pred))\n\nrmse2(y_val, pred)","c4e5e690":"def rmse(y_true, y_pred):\n    return np.sqrt(np.mean((y_true-y_pred)**2))\n\nrmse(y_val, pred)","ea2f1014":"from xgboost import XGBRegressor\n\nxgb = XGBRegressor()\nxgb.fit(X_tr, y_tr)\npred = xgb.predict(X_val)","cdb11f22":"rmse2(y_val, pred)","c22d63ca":"rf.fit(X_train, y_train['charges'])\npred = rf.predict(X_test.drop('id',1))","3de2d331":"pred = np.exp(pred)\noutput = pd.DataFrame({'id': y_test['id'], 'charges':pred})\noutput.head()","b1c00b55":"output.to_csv(\"000000.csv\", index=False)","cb6efa8c":"rmse(y_test['charges'], pred)","f6a75458":"## label encoding","5a05465d":"## Categorical Variables","1f0dbc0b":"# \uacb0\uacfc \ucc44\uc810","99f9aeb8":"## Log Transform","15838c78":"## Standard Scaler","d0c85afd":"## Train-Validation Split","db4c1950":"# Preprocessing","9d5dab12":"# EDA"}}