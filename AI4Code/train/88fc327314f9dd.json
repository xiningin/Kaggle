{"cell_type":{"483c8ec1":"code","8edbd233":"code","bc693c0c":"code","86705df0":"code","db54110a":"code","f0bcfb0d":"code","994d98b2":"code","f7f7ac37":"code","f8cc570a":"code","ef74bd14":"code","589003bc":"code","c59c6df8":"code","69d0045e":"markdown"},"source":{"483c8ec1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nfrom matplotlib import colors\nimport geoplot as gplt\nfrom shapely.geometry import Point\n\n\nepsg = 4289\ncrscode = 3395\nprojectioncode = \"EPSG:%d\" % epsg\nprojection = gplt.crs.Mercator()\nextent = (-90.14003111,  29.86560481, -89.87, 30.08)","8edbd233":"neighborDf = gpd.read_file('..\/input\/geospatial-sets-for-new-orleans\/Neighborhood_Statistical_Areas\/Neighborhood_Statistical_Areas.shp').to_crs(epsg=epsg)\nwaterDf = gpd.read_file('..\/input\/geospatial-sets-for-new-orleans\/water\/WATER2.SHP')","bc693c0c":"safetyCallsDf = gpd.read_file('..\/input\/safety-and-crime-911-calls-new-orleans-2018\/civildffinal.csv')\nsafetyCallsDf.head()","86705df0":"def strToPoint(instr):\n    coords = [float(coord) for coord in instr[1:-1].split(', ')]\n    \n    return Point(coords[1],coords[0])\n    \nsafetyCallsDf = safetyCallsDf.set_geometry( safetyCallsDf['Coordinates'].map(strToPoint) )","db54110a":"neighborDf['centers'] = neighborDf['geometry'].centroid.to_crs(crscode)","f0bcfb0d":"neighborDf['Name'] = neighborDf['GNOCDC_LAB'].map(lambda x: x.title().replace(' ',\"\\n\").split('-')[0])","994d98b2":"def countPoints(poly):\n    return np.count_nonzero( safetyCallsDf['geometry'].map(lambda x: poly.contains(x)) )\n    \nneighborDf['SafetyCalls'] = neighborDf['geometry'].map(countPoints)","f7f7ac37":"norm = colors.LogNorm()\nneighborDf['SafetyCallsLogNorm'] = norm(neighborDf['SafetyCalls'])","f8cc570a":"neighborDf['SafetyCallPerArea'] = neighborDf['SafetyCalls'] \/ (neighborDf['Shape_Area'] \/ 10**6 )","ef74bd14":"neighborDf.head()","589003bc":"#this figure doesnt take the size of the neighborhood into account\n\nfig,ax = plt.subplots(figsize=(28,18), subplot_kw={'projection': projection})\n#gplt.polyplot(neighborDf, projection=projection, ax=ax, extent=extent)\ngplt.choropleth(neighborDf,edgecolor='black',hue='SafetyCallsLogNorm',cmap='turbo',ax=ax,projection=projection,extent=extent, legend=True, zorder=14)\ngplt.polyplot(waterDf, ax=ax, projection=projection,extent=extent,zorder=15,edgecolor='#abd3df', facecolor='#abd3df')\n\nax.set_title('New Orleans 911 Calls (2018)')\n\ncbar = fig.get_axes()[-1]\ncbar.set_yticklabels([int(x) for x in norm.inverse(cbar.get_yticks())])\ncbar.set_ylabel('Calls to 911 (LogNorm)')\nax.set_facecolor('#ffffce')\n\nfor idx,neighborhood in neighborDf.iterrows():\n    pass\n    ax.annotate(text=neighborhood['Name'], xy=(neighborhood['centers'].x,neighborhood['centers'].y), \\\n               va='center',ha='center', xytext=(-20,-12), textcoords='offset points', fontsize=8, zorder=100)\n\n#fig.savefig('Output.jpg')","c59c6df8":"fig,ax = plt.subplots(figsize=(28,18), subplot_kw={'projection': projection})\n#gplt.polyplot(neighborDf, projection=projection, ax=ax, extent=extent)\ngplt.choropleth(neighborDf,edgecolor='black',hue='SafetyCallPerArea',cmap='turbo',ax=ax,projection=projection,extent=extent, legend=True, zorder=14)\ngplt.polyplot(waterDf, ax=ax, projection=projection,extent=extent,zorder=15,edgecolor='#abd3df', facecolor='#abd3df')\n\nax.set_title('New Orleans 911 Calls per Square Kilometer (2018)')\n\ncbar = fig.get_axes()[-1]\n#cbar.set_yticklabels([int(x) for x in norm.inverse(cbar.get_yticks())])\ncbar.set_ylabel('Calls to 911 per Square Kilometer')\nax.set_facecolor('#ffffce')\n\nfor idx,neighborhood in neighborDf.iterrows():\n    pass\n    ax.annotate(text=neighborhood['Name'], xy=(neighborhood['centers'].x,neighborhood['centers'].y), \\\n               va='center',ha='center', xytext=(-20,-12), textcoords='offset points', fontsize=8, zorder=100)\n\nfig.savefig('Output.jpg')","69d0045e":"# New Orleans 911 Calls Map (2018)\n\nI wrote this notebook to play around with geospatial data, and to author my first notebook directly on Kaggle (instead of uploading a notebook from my computer)."}}