{"cell_type":{"c0d2d8ce":"code","ac02ebac":"code","9601bc7b":"code","0479323c":"code","10afe065":"code","ce711dd1":"code","96fd1fbb":"code","525a89e7":"code","68e326c1":"code","53068444":"code","9de89479":"code","c3084d88":"code","45dcc2ed":"code","6a868132":"code","7617f302":"code","2dda73e2":"code","4d02dff2":"code","fc8af987":"code","d61ed224":"code","027a4ecd":"code","b2489c75":"code","814dd942":"code","e16d817e":"code","15001b68":"code","1937f426":"code","070c8242":"code","42f33792":"markdown"},"source":{"c0d2d8ce":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ac02ebac":"data = pd.read_csv(\"\/kaggle\/input\/world-happiness\/2016.csv\")","9601bc7b":"data.head()","0479323c":"data.info()","10afe065":"f,ax = plt.subplots(figsize = (10,10))\nsns.heatmap(data.corr() , cmap = \"BuPu\" , annot = True , linewidth = .5 , fmt= \".2f\" , vmin= 0 , vmax= 1 );\n#cmap = colormap , renk belirtecidir. Yan\u0131ndaki kodlar\u0131 internettern kolayca kopyala yap\u0131\u015ft\u0131r yapabiliriz.\n#vmin, de\u011fer \u00e7ubu\u011funun minimum de\u011feri vmax ise maximum de\u011feridir.\n","ce711dd1":"data.head()","96fd1fbb":"sns.set_style(\"whitegrid\") \n#grid ekledik.\nf, ax = plt.subplots(figsize=(6.5 ,6.5))\nsns.despine(f, left=True, bottom=True ) \n#grafikteki sol ve alt \u00e7izgileri \u00e7\u0131kartt\u0131k.\nsns.scatterplot(data=data, x = \"Happiness Score\" , y = \"Health (Life Expectancy)\" ,hue = \"Freedom\" ,size = \"Economy (GDP per Capita)\",palette=\"Spectral\",linewidth=0);","525a89e7":"#Columnlardaki de\u011fer say\u0131mlar\u0131 i\u00e7in countplot kullan\u0131l\u0131r.\nf,ax = plt.subplots(figsize = (8,8))\nsns.despine(f, left = False , bottom = False)\nsns.countplot(x = data[\"Region\"] ,palette = \"pastel\" , order = data[\"Region\"].value_counts().index )\nplt.xticks(rotation = 90)\nplt.title(\"Region's value counting using CountPlot\")\nplt.show()","68e326c1":"#countplottaki de\u011ferler bar \u015feklinde g\u00f6sterildi\u011finden, ayn\u0131 i\u015flem barplot ile de yap\u0131labilir.\nplt.figure(figsize=(8,8))\nx = data[\"Region\"].value_counts().index\ny = data[\"Region\"].value_counts().values\nsns.barplot(x=x , y=y, palette =sns.color_palette(\"PuOr\" , 10) )\nplt.xticks(rotation = 90)\nplt.title(\"Region's value counting using BarPlot\")\nplt.show()","53068444":"#bruh moment\nplt.figure(figsize = (8,8))\ndata[\"Region\"].value_counts().plot(kind=\"bar\" , color = \"#8db596\")","9de89479":"plt.figure(figsize = (7,7))\ndata[\"Trust (Government Corruption)\"].plot(kind=\"line\", label = \"Trust\" , color = \"#52575d\", grid = True , linestyle = \"-.\")\ndata[\"Generosity\"].plot(label=\"Generosity\" , color = \"#fddb3a\" , grid = True , linestyle = \"-\")\nplt.legend()\nplt.show()","c3084d88":"data.head()","45dcc2ed":"newd = data.head()\nnewdd = data.tail()","6a868132":"concdata = pd.concat([newd,newdd] , axis = 0 , ignore_index = True)\nconcdata","7617f302":"melted = pd.melt(concdata , id_vars = [\"Region\" , \"Country\"] , value_vars = [\"Family\",\"Freedom\"] )\nmelted","2dda73e2":"pivotdata = melted.pivot(index = [\"Country\" , \"Region\"] , columns = \"variable\" , values = \"value\")\npivotdata","4d02dff2":"data.dtypes","fc8af987":"data[\"Happiness Rank\"] = data[\"Happiness Rank\"].astype(\"float64\")","d61ed224":"data.head()","027a4ecd":"from sklearn.linear_model import LinearRegression","b2489c75":"reg = LinearRegression()","814dd942":"x = data.drop([\"Happiness Score\",\"Country\",\"Region\"] ,axis = 1)\ny = data[[\"Happiness Score\"]]","e16d817e":"reg.fit(x,y)","15001b68":"reg.coef_","1937f426":"reg.intercept_","070c8242":"data.head()","42f33792":"* Country = \u00dclke\n* Region = B\u00f6lge\n* Happiness Rank = Mutluluk S\u0131ralamas\u0131\n* Lower Confidence Interval = Alt G\u00fcven Aral\u0131\u011f\u0131\n* Upper Confidence Interval = \u00dcst G\u00fcven Aral\u0131\u011f\u0131\n* Economy = Ki\u015fi ba\u015f\u0131 gelir\n* Family = Aile\n* Health = Sa\u011fl\u0131k, ya\u015fam beklentisi\n* Freedom = \u00d6zg\u00fcrl\u00fck\n* Trust = G\u00fcven, devlet yolsuzluk oran\u0131\n* Genoristy = C\u00f6mertlik\n* Dystopia Residual = Otoriter,bask\u0131c\u0131 y\u00f6netim\n\n\n"}}