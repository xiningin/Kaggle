{"cell_type":{"d0d1857e":"code","af630365":"code","5f067172":"code","72222b64":"code","92333091":"code","a6bc11d3":"code","222c190a":"code","d8510a67":"code","9c7861d0":"code","7954afde":"code","f64be01c":"code","80f78ddf":"code","2e7ee8d6":"code","f37c2ed0":"code","b086d2dd":"code","4a31d4c5":"code","48c7d9ce":"code","698cd970":"code","6a590180":"code","abb1902e":"code","efa6932b":"code","c56adf23":"markdown","81bc117e":"markdown","1d901e3d":"markdown","5b544b54":"markdown","b49f6886":"markdown","dfed2b8a":"markdown","fa43791e":"markdown","104effe5":"markdown","e7000663":"markdown"},"source":{"d0d1857e":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","af630365":"# Train data\ntraindata = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntraindata.drop(['PassengerId','Name','Ticket','Cabin'],axis=1,inplace=True)\ntraindata.head()","5f067172":"# Test data\ntestdata = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntestdata.drop(['Name','Ticket','Cabin'],axis=1,inplace=True)\ntestdata.info()","72222b64":"traindata['Age'].fillna(traindata['Age'].mean(),inplace=True)\ntestdata['Age'].fillna(testdata['Age'].mean(),inplace=True)\n\ntraindata[\"Age\"]=np.log(traindata[\"Age\"])\ntestdata[\"Age\"]=np.log(testdata[\"Age\"])","92333091":"traindata['Fare'].fillna(traindata['Fare'].mean(),inplace=True)\ntestdata['Fare'].fillna(testdata['Fare'].mean(),inplace=True)","a6bc11d3":"traindata['Embarked'].fillna(traindata['Embarked'].mode()[0],inplace=True)\ntestdata['Embarked'].fillna(testdata['Embarked'].mode()[0],inplace=True)","222c190a":"traindata.isnull().sum()","d8510a67":"testdata.isnull().sum()","9c7861d0":"traindata['Sex']=traindata['Sex'].map({'male':0,'female':1})\ntestdata['Sex']=testdata['Sex'].map({'male':0,'female':1})","7954afde":"traindata['Embarked']=traindata['Embarked'].map({'S':0,'C':1,'Q':2})\ntestdata['Embarked']=testdata['Embarked'].map({'S':0,'C':1,'Q':2})","f64be01c":"traindata.head()","80f78ddf":"testdata.head()","2e7ee8d6":"X = traindata.iloc[:,1:].values\ny = traindata.iloc[:,0].values","f37c2ed0":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX = sc.fit_transform(X)","b086d2dd":"X","4a31d4c5":"from sklearn.model_selection import GridSearchCV, RandomizedSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import MultinomialNB, GaussianNB\nfrom sklearn.preprocessing import LabelEncoder","48c7d9ce":"model_params = {\n    'Logistic regression': {\n        'model': LogisticRegression(),\n        'params' :{\n        }\n    },\n    'KNN': {\n        'model': KNeighborsClassifier(),\n        'params' :{\n            'n_neighbors':[5], \n            'metric':['minkowski'], \n            'p':[2]\n        }\n    },\n    'SVM': {\n        'model': SVC(),\n        'params' :{\n            'C':[1,10,20,50,100],\n            'kernel':['rbf','linear']\n        }\n    },\n    'GaussianNB':{\n        'model': GaussianNB(),\n        'params':{}\n    },\n    'Decision Tree':{\n        'model': DecisionTreeClassifier(),\n        'params':{\n            'criterion':['gini','entropy']\n        }\n    },\n    'RandomForest': {\n        'model': RandomForestClassifier(),\n        'params' :{\n            'n_estimators':[1,5,10,20,50,100,200,500,1000],\n            'criterion':['entropy']\n        }\n    }\n}","698cd970":"score = []\n\nfor model_name, mp in model_params.items():\n    clf = GridSearchCV(mp['model'],mp['params'],cv=5,return_train_score=False)\n    clf.fit(X,y)\n    score.append({\n        'model':model_name,\n        'best_score':clf.best_score_,\n        'best_param':clf.best_params_\n    })\ndf = pd.DataFrame(score,columns=['model','best_score','best_param'])\ndf","6a590180":"classifier = SVC(kernel = 'rbf', C=1)\nclassifier.fit(X, y)","abb1902e":"test_X = testdata.iloc[:,1:].values\ny_result = classifier.predict(sc.transform(test_X))","efa6932b":"result = pd.DataFrame(columns=['PassengerId','Survived'])\nresult['PassengerId'] = testdata['PassengerId']\nresult['Survived'] = pd.DataFrame(y_result)\nresult.to_csv('result.csv',index=False)","c56adf23":"# Features and dependent variable","81bc117e":"# Model selection","1d901e3d":"## Importing the libraries","5b544b54":"## Importing the dataset","b49f6886":"# Encoding categorical data","dfed2b8a":"# Predicting the test data results","fa43791e":"# Training selected model","104effe5":"## Feature Scaling","e7000663":"# Taking care of missing data"}}