{"cell_type":{"58ed50bf":"code","8fbec51e":"code","abbb339a":"code","fd5b3f0b":"code","8dd7399a":"code","c8a836ae":"code","b078ab4b":"code","1648bd9d":"code","dd75a617":"code","22433b36":"code","cde516ae":"code","fda4acef":"code","3eed7243":"code","e31f8748":"code","3899f651":"code","627db61d":"code","56e6a9fa":"code","66ff043e":"code","b48ea3eb":"code","4ba95b50":"code","12270fcc":"code","f5b02b04":"code","cfb655ab":"code","5cc3caf5":"code","5528e38e":"code","e9951696":"code","7f851510":"code","02fbb5a7":"code","19a04728":"code","9f23f76f":"code","466cb290":"code","ad22752c":"code","74b9772a":"code","998d3c35":"code","b8055335":"code","83f6679b":"code","c82279e8":"code","c31f16d2":"code","a66edbf3":"code","f6e18a23":"code","7d0ad873":"code","2a3a680e":"code","2eff2d69":"code","44052fc2":"markdown","d73d2995":"markdown","832e3c08":"markdown","7a0740d4":"markdown","8b363ff3":"markdown","b9cb44ba":"markdown","74a033f4":"markdown","29430877":"markdown","29917b8f":"markdown"},"source":{"58ed50bf":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","8fbec51e":"df = pd.DataFrame(pd.read_csv('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv'))\ndf.head()","abbb339a":"# questions = pd.DataFrame(df.T[0].reset_index(drop=False)).rename(columns={'index': 'question_num', 0: 'question'})\n# for index, row in questions.iterrows():\n#     print(f'-{row.question_num} | {row.question}')","fd5b3f0b":"part_questions = []\nnot_part_questions = []\n\n# [part_questions.append(x.split('_')[0][1:]) for x in df.columns if 'part' in x.lower() and x.split('_')[0][1:] not in part_questions]\n\nfor x in df.columns:\n    if 'part' in x.lower(): \n        if x.split('_')[0][1:] not in part_questions:\n            part_questions.append(x.split('_')[0][1:])\n    else:\n        if x not in not_part_questions and 'other' not in x.lower():\n            not_part_questions.append(x)\n\nprint(part_questions)\nprint(not_part_questions)","8dd7399a":"def quick_bar(q_num, ax):\n    filter_cols = [col for col in df.columns if col.split('_')[0]==f'Q{q_num}']\n    temp_df = df[filter_cols]\n    col_names = [x.split('-')[-1] for x in temp_df.iloc[0]]\n    title = temp_df.iloc[0][filter_cols[0]].split('-')[0]\n    temp_df.columns = col_names\n    temp_df = temp_df.notnull().astype('int')\n    temp_df = temp_df.iloc[1:].fillna(0)\n    temp_df.sum().sort_values(ascending=False).plot.bar(title=title, ax=ax)","c8a836ae":"fig, axs = plt.subplots(nrows=len(part_questions), ncols=1, figsize=(15,200))\nfor i, x in enumerate(part_questions):\n    quick_bar(x, axs[i])\nplt.subplots_adjust(hspace=1)\nplt.show()","b078ab4b":"not_part_questions = []\nfor x in df.columns:\n    if 'part' not in x.lower() and 'other' not in x.lower() and x not in not_part_questions:\n        not_part_questions.append(x)\none_part_df = df[not_part_questions]\none_part_df.head(2)","1648bd9d":"# not good, redo this hist\nage = pd.DataFrame(one_part_df['Q1'][1:])\nage['age'] = age['Q1'].str.split('-').str[0].str.replace('+','').astype('int')\nage['age'].plot.hist(bins=11, grid=True, title='Bad looking and incorrect age range hist')","dd75a617":"one_part_df['Q2'][1:].value_counts().plot.bar(title='Gender')","22433b36":"one_part_df.iloc[1:].groupby(['Q1','Q2']).size().unstack().plot.bar(stacked=True, \n                                                                    figsize=(15,8),\n                                                                    title='Age and gender breakdown')\nplt.tight_layout()","cde516ae":"one_part_df['Q3'][1:].value_counts().sort_values(ascending=False)[:11].plot.bar(title='Top 10 countries')","fda4acef":"# avg age in each country\ntop10 = one_part_df.iloc[1:]['Q3'].value_counts()[:11].index.tolist()\none_part_df.loc[one_part_df.Q3.isin(top10)].groupby(['Q3','Q1']).size().unstack().plot.bar(stacked=True, \n                                                                                           figsize=(15,10),\n                                                                                           title='Country and age breakdown')\nplt.tight_layout()","3eed7243":"one_part_df.iloc[1:].Q4.value_counts().plot.bar(title='Education')","e31f8748":"# avg age in each country\none_part_df.loc[one_part_df.Q3.isin(top10)].groupby(['Q3','Q4']).size().unstack().plot.bar(stacked=True, \n                                                                                           figsize=(15,10),\n                                                                                           title='Country and education breakdown')\nplt.tight_layout()","3899f651":"one_part_df.iloc[1:]['Q5'].value_counts().plot.bar(title='Profession')","627db61d":"index_order = ['I have never written code','< 1 years','1-3 years','3-5 years','5-10 years','10-20 years','20+ years']\none_part_df.Q6.value_counts().reindex(index_order).plot.bar(title='Code exp.')","56e6a9fa":"def quick_bar2(question):\n    q = one_part_df[question]\n    t = q.iloc[0]\n    q.iloc[1:].value_counts().plot.bar(title=t)\nnot_part_questions","66ff043e":"quick_bar2('Q8')","b48ea3eb":"quick_bar2('Q11')","4ba95b50":"quick_bar2('Q13')","12270fcc":"quick_bar2('Q15')","f5b02b04":"quick_bar2('Q20')","cfb655ab":"quick_bar2('Q21')","5cc3caf5":"quick_bar2('Q22')","5528e38e":"quick_bar2('Q23')","e9951696":"quick_bar2('Q26')","7f851510":"quick_bar2('Q28')","02fbb5a7":"quick_bar2('Q33')","19a04728":"quick_bar2('Q35')","9f23f76f":"quick_bar2('Q41')","466cb290":"pbi_df = df.loc[df.Q35=='Microsoft Power BI']\ntab_df = df.loc[df.Q35=='Tableau']\nprint(f'Number of Power BI users: {len(pbi_df)}')\nprint(f'Number of Tableau users: {len(tab_df)}')","ad22752c":"index_order = ['$0 ($USD)','$1-$99','$100-$999','$1000-$9,999','$10,000-$99,999','$100,000 or more ($USD)']\n\ndef compare(question, index_order=[], figsize=(10,5)):\n    \n    if len(index_order) > 0:\n        pbi = pbi_df[question].value_counts().reindex(index_order)\n        tab = tab_df[question].value_counts().reindex(index_order)\n    else:\n        pbi = pbi_df[question].value_counts().sort_values(ascending=False)\n        tab = tab_df[question].value_counts().sort_values(ascending=False)\n\n    pd.concat({\n        'Power BI': pbi, \n        'Tableau': tab\n    }, axis=1).plot.bar(title=df[question][0],figsize=figsize)\n    \n#     plt.tight_layout()\n\ncompare('Q26', index_order)","74b9772a":"index_order = ['0-49 employees','50-249 employees',\n               '250-999 employees','1000-9,999 employees',\n               '10,000 or more employees']\ncompare('Q21', index_order)","998d3c35":"compare('Q20')","b8055335":"index_order = ['0','1-2','3-4','5-9','10-14','15-19','20+']\ncompare('Q22', index_order)","83f6679b":"compare('Q23')","c82279e8":"compare('Q28')","c31f16d2":"compare('Q33')","a66edbf3":"compare('Q41')","f6e18a23":"index_order = ['I do not use machine learning methods','Under 1 year',\n               '1-2 years','2-3 years','3-4 years','4-5 years',\n               '5-10 years','10-20 years','20 or more years']\ncompare('Q15',index_order)","7d0ad873":"index_order = ['Never','Once','2-5 times','6-25 times','More than 25 times']\ncompare('Q13',index_order)","2a3a680e":"compare('Q11')","2eff2d69":"compare('Q8')","44052fc2":"## Gender","d73d2995":"# Functions for quick bar chart generation\n\nTODO: make charts easier to read. Likely by not using subplots.","832e3c08":"### Businesses","7a0740d4":"# Power BI vs. Tableau","8b363ff3":"## \"Part\" questions","b9cb44ba":"## Education and career","74a033f4":"## Country data","29430877":"### Personal exp","29917b8f":"## Age"}}