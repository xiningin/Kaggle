{"cell_type":{"c57f1519":"code","6c34a72f":"code","f338fa59":"code","17549fb3":"code","96cf4aea":"code","7e92b5f9":"code","d8dfc81f":"code","e5a0e328":"code","3624d5bf":"code","62760431":"code","4d9eaf77":"code","375c4816":"code","62577485":"code","3b9fc71d":"code","1688a7ac":"code","7a4d45cd":"code","1116e951":"code","c5365e74":"code","6b9b495b":"code","48dca5ec":"code","8272d8fd":"code","2019fd93":"code","aa892dea":"code","a0f8457e":"code","b5fe64e2":"code","d7dd6416":"code","ef3b3338":"code","a3e55509":"code","f5550fc1":"code","531d1c72":"code","9d87e214":"code","98b10714":"code","1cd30562":"code","9a9fdf97":"code","3aaf9620":"code","f8ce67e3":"code","4e988bdd":"markdown","86a7a71b":"markdown","3a65703e":"markdown","fa23a0e9":"markdown","aadb6e52":"markdown","101d21fd":"markdown","01c8a785":"markdown","d77755ee":"markdown","4e174891":"markdown","9bb604dd":"markdown","522894a7":"markdown"},"source":{"c57f1519":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6c34a72f":"datas = pd.read_csv(\"..\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv\")\n#orjinal ahlini yedekleyelim:\ndatas0 = pd.read_csv(\"..\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv\")\ndatas.head()","f338fa59":"# index 0 dan ba\u015fl\u0131yor idi, de\u011fi\u015ftirelim. Invoice ID kolonu index olsun:\ndatas = datas.set_index(\"Invoice ID\")\ndatas.head()\n","17549fb3":"# kolondaki, 1. kayd\u0131 listele:\ndatas[\"City\"][1]","96cf4aea":"# veya1:\ndatas.City[1]","7e92b5f9":"# veya2:\ndatas.loc[1,[\"City\"]]\n\n# hata verdi.","d8dfc81f":"# belli kolonlar\u0131 listeleyelim:\ndatas[[\"City\",\"Gender\"]]","e5a0e328":"# seri: kolon isminde 1 k\u00f6\u015feli patantez olur:\nprint(type(datas[\"City\"]))\n\n# dataframe: kolon isminde 2 k\u00f6\u015feli patantez olur:\nprint(type(datas[[\"City\"]]))","3624d5bf":"# se\u00e7ilen kolonlar, ilk 5 kay\u0131t i\u00e7in:\n# indeks de\u011fi\u015fti, yeni indekse g\u00f6re aral\u0131\u011f\u0131 vermek laz\u0131j:\ndatas.loc[\"226-31-3081\":\"692-92-5582\", [\"City\", \"Unit price\"]]","62760431":"# slicing and indexing series. Kolon aral\u0131\u011f\u0131:\ndatas.loc[\"226-31-3081\":\"692-92-5582\", \"City\": \"Unit price\"]\n","4d9eaf77":"# reverse slicing:\ndatas.loc[\"226-31-3081\":\"692-92-5582\":-1, \"City\": \"Unit price\"]\n\n# bu \u00e7al\u0131\u015fmad\u0131...","375c4816":"# en soldan, belirtilen lolona kadarv listele:\ndatas.loc[\"226-31-3081\":\"692-92-5582\", \"Total\":]","62577485":"# create boolean series:\n\ndbool = datas.Total > 1000\ndatas[dbool]","3b9fc71d":"# combining filters:\nf1 = datas.Total > 1000\nf2 = datas[\"Unit price\"] > 95\n\ndatas[f1 & f2]","1688a7ac":"# filtering, di\u011fer kolon de\u011ferine g\u00f6re:\ndatas[datas.Total>1000]\n\ndatas.Branch[datas.Total>1000]","7a4d45cd":"# 1-klasik fonksiyon yaz\u0131m\u0131, say\u0131y\u0131 ikiye b\u00f6l\u00fcp, sonucu versin:\n\ndef div(n):\n    return n\/2\n\n# datas tablosundak\u015f, Total kolonundaki de\u011ferlere, bu fonk. uygulas\u0131n:\ndatas.Total.apply(div)","1116e951":"# 2- lambda ile, d,v fonksiyonunu daha k\u0131sa yazal\u0131m:\ndatas.Total.apply(lambda n: n\/2)","c5365e74":"# iki kolonu topla, 3. kolona yazd\u0131r:\ndatas[\"mytotal\"] = datas.Rating * datas.Quantity\ndatas.head()","6b9b495b":"# index imizin ismine bakal\u0131m:\nprint(datas.index.name)","48dca5ec":"# mevcut index ad\u0131n\u0131 de\u011fi\u015ftirelim,\ndatas.index.name = \"myindex\"\ndatas","8272d8fd":"# mevcut index de\u011ferlerini de\u011fi\u015ftirelim, t\u00fcm kay\u0131tlar\u0131nki de\u011fi\u015fir:\n#\u00f6nce kopyalayal\u0131m:\ndatas3 = datas.copy()\ndatas3\n\n# datas3 indeksini 100den ba\u015flatal\u0131m:\ndatas3.index = range(100,1100,1)\ndatas3.head()","2019fd93":"datas = pd.read_csv(\"..\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv\")\ndatas.head()","aa892dea":"# hiyerara\u015fik indeks tan\u0131mlayal\u0131m:\ndatas1 = datas.set_index([\"Gender\",\"City\"])\ndatas1.head(20)","a0f8457e":"# dataframe tan\u0131mlayal\u0131m:\n\ndic= {\"kangrubu\":[\"A\",\"A\",\"B\",\"B\"], \"cinsiyet\":[\"K\",\"E\",\"K\",\"E\"],\n     \"puan\": [10,45,5,9], \"yas\":[15,4,72,65]}\n\ndf = pd.DataFrame(dic)\ndf","b5fe64e2":"# pivot yapal\u0131m:\ndf.pivot(index=\"kangrubu\", columns=\"cinsiyet\", values=\"puan\")","d7dd6416":"# stack:\n\ndf1 = df.set_index([\"kangrubu\",\"cinsiyet\"])\ndf1","ef3b3338":"# unstack-1:\ndf1.unstack(level=0) # 0: kangrubu","a3e55509":"# unstack-2:\ndf1.unstack(level=1) #1:cinsiyet","f5550fc1":"# indexlerin i\u00e7-d\u0131\u015f yerini de\u011fi\u015ftir:\ndf2 = df1.swaplevel(0,1)\ndf2","531d1c72":"df","9d87e214":"# melting: pivotun tersi: di sonras\u0131, di\u011ferleri variable:\npd.melt(df, id_vars=\"kangrubu\", value_vars=[\"puan\",\"yas\"])","98b10714":"df","1cd30562":"# aggregate functions: sum, mean, min, max:\ndf.groupby(\"kangrubu\").sum()\n","9a9fdf97":"df.groupby(\"kangrubu\").max()","3aaf9620":"# \u00e7oklu i\u015flem, sadece istenen kolonlar i\u00e7in:\ndf.groupby(\"kangrubu\")[[\"yas\",\"puan\"]].min()\n","f8ce67e3":"df.info()","4e988bdd":"PIVOTING DATA FRAMES:","86a7a71b":"SLICING FRAMES:","3a65703e":"HIERARCHICAL INDEXING:","fa23a0e9":"\u00d6DEV5-**5. MANUPILATING DATAFRAME WITH PANDAS**","aadb6e52":"STACKING and UNSTACKING DATA FRAME:","101d21fd":"INDEXING DATA FRAMES","01c8a785":"CATEGORICALS AND GROUPBY:","d77755ee":"INDEXING OBJECTS AND LABELED DATA:","4e174891":"TRANSFORMING DATA:","9bb604dd":"MELTING DATA FRAMES:","522894a7":"FILTERING DATA FRAMES:"}}