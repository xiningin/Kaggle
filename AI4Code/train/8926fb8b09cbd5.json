{"cell_type":{"e422acd9":"code","1fc430f3":"code","fadfba2a":"code","223d5c71":"markdown"},"source":{"e422acd9":"\nfrom keras.preprocessing.text import Tokenizer\nfrom keras.layers import Embedding, LSTM, Dense\nfrom keras.models import Sequential\nimport pandas as pd\nimport numpy as np\n\n\ntext = 'It is not the strength of the body but the strength of the spirit. It is useless to meet revenge with revenge it will heal nothing. Even the smallest person can change the course of history. All we have to decide is what to do with the time that is given us. The burned hand teaches best. After that, advice about fire goes to the heart'\n\n# Split text into an array of words\nwords = text.split()\n\n# Make sentences of 4 words each, moving one word at a time\nsentences = []\nfor i in range(4, len(words)):\n  sentences.append(' '.join(words[i-4:i]))\n  \n# Instantiate a Tokenizer, then fit it on the sentences\ntokenizer = Tokenizer()\ntokenizer.fit_on_texts(sentences)\n\n# Turn sentences into a sequence of numbers\nsequences = tokenizer.texts_to_sequences(sentences)\nprint(\"Sentences: \\n {} \\n Sequences: \\n {}\".format(sentences[:5],sequences[:5]))\n\nmodel = Sequential()\n\nvocab_size = len(tokenizer.index_word) + 1\n\n# Add an Embedding layer with the right parameters\nmodel.add(Embedding(input_dim = vocab_size, input_length = 3, output_dim = 8))\n\n# Add a 32 unit LSTM layer\nmodel.add(LSTM(32))\n\n# Add a hidden Dense layer of 32 units and an output layer of vocab_size with softmax\nmodel.add(Dense(32, activation='relu'))\nmodel.add(Dense(vocab_size, activation='softmax'))\nmodel.summary()","1fc430f3":"def predict_text(test_text, model = model):\n    if len(test_text.split()) != 3:\n        print('Text input should be 3 words!')\n        return False\n  \n  # Turn the test_text into a sequence of numbers\n    test_seq = tokenizer.texts_to_sequences([test_text])\n    test_seq = np.array(test_seq)\n  \n  # Use the model passed as a parameter to predict the next word\n    pred = model.predict(test_seq).argmax(axis = 1)[0]\n   \n  # Return the word that maps to the prediction\n    return tokenizer.index_word[pred]","fadfba2a":"predict_text('to do with')","223d5c71":"You're working with this small chunk of The Lord of The Ring quotes stored in the text variable:\n================================================================================================\n It is not the strength of the body but the strength of the spirit. \n It is useless to meet revenge with revenge it will heal nothing. \n Even the smallest person can change the course of history.\n All we have to decide is what to do with the time that is given us. \nThe burned hand teaches best. After that, advice about fire goes to the heart.\n"}}