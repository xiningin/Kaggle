{"cell_type":{"6031f45d":"code","75cc0ef4":"code","12aa6b19":"code","2341b905":"code","9769b7f4":"code","5419738c":"code","aa2bc890":"code","90d9195c":"code","d3b9624c":"code","11d99094":"code","a68d2eb6":"code","1dadc5de":"code","ed1c8eec":"code","0ef5d301":"code","3c794404":"code","cf28d157":"code","52e045f5":"code","3ef7712c":"code","1bec9560":"code","d5986fd2":"code","d4f164f8":"code","b382e369":"code","53a2bc3c":"code","b6a21db1":"code","c8e66088":"code","bfc2fa16":"code","3a6be20f":"code","6352efe1":"code","d4eff7f3":"code","53fd92af":"code","bf125d55":"code","6dfc772b":"code","00b45d11":"code","134d5cea":"code","96e141e4":"code","4b2cb229":"code","1bfa26b1":"code","2731afe9":"code","30cced54":"code","6636e2e5":"code","3d370e6d":"code","18bc66bb":"code","a28dbd3c":"code","e63d9241":"code","62ec2c2f":"code","a39078a5":"code","b7baa078":"code","b48e078a":"code","246b1491":"code","5b5890e8":"code","4af8b9cd":"code","dab2cd6f":"code","f6fa71ce":"code","702ad122":"code","38446922":"markdown","5f918c7c":"markdown","ca5309b9":"markdown","de3294e4":"markdown","5498e708":"markdown","440e3e5a":"markdown","1cac86a2":"markdown","9dcaa845":"markdown","758bea00":"markdown","dbb43369":"markdown"},"source":{"6031f45d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","75cc0ef4":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","12aa6b19":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","2341b905":"train.head()","9769b7f4":"test.head()","5419738c":"train.info()","aa2bc890":"test.info()","90d9195c":"train.isnull().sum()","d3b9624c":"test.isnull().sum()","11d99094":"sns.heatmap(train.isnull(),yticklabels=False,cbar = False,cmap = 'viridis')","a68d2eb6":"sns.heatmap(test.isnull(),yticklabels=False,cbar = False,cmap = 'viridis')","1dadc5de":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data = train)","ed1c8eec":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue = 'Sex',data = train)","0ef5d301":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue = 'Pclass',data = train)","3c794404":"sns.distplot(train['Age'].dropna(),kde = False,color = 'darkred',bins = 40)","cf28d157":"sns.countplot(x= 'SibSp',data=train)","52e045f5":"plt.figure(figsize=(12,7))\nsns.boxplot(x='Pclass',y='Age',data=train)","3ef7712c":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        elif Pclass ==2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","1bec9560":"train['Age'] = train[['Age','Pclass']].apply(impute_age,axis = 1)","d5986fd2":"sns.heatmap(train.isnull(),yticklabels=False,cbar = False,cmap = 'viridis')","d4f164f8":"train.isnull().sum()","b382e369":"test['Age'] = test[['Age','Pclass']].apply(impute_age,axis = 1)","53a2bc3c":"sns.heatmap(test.isnull(),yticklabels=False,cbar = False,cmap = 'viridis')","b6a21db1":"del test['Cabin']\ndel train['Cabin']","c8e66088":"test.isnull().sum()","bfc2fa16":"train.isnull().sum()","3a6be20f":"train.dropna(inplace = True)","6352efe1":"test['Fare'] = test['Fare'].fillna(test['Fare'].median())","d4eff7f3":"train.info()","53fd92af":"test.info()","bf125d55":"sex = pd.get_dummies(train['Sex'],drop_first = True)\nembark = pd.get_dummies(train['Embarked'],drop_first = True)","6dfc772b":"train.drop(['Sex','Embarked','Name','Ticket'],axis = 1,inplace = True)","00b45d11":"train = pd.concat([train,sex,embark],axis = 1)","134d5cea":"train.head()","96e141e4":"sex = pd.get_dummies(test['Sex'],drop_first = True)\nembark = pd.get_dummies(test['Embarked'],drop_first = True)","4b2cb229":"test.drop(['Sex','Embarked','Name','Ticket'],axis = 1,inplace = True)","1bfa26b1":"test = pd.concat([test,sex,embark],axis =1)","2731afe9":"test.head()","30cced54":"train.columns","6636e2e5":"features = ['PassengerId', 'Pclass', 'Age', 'SibSp', 'Parch', 'Fare',\n       'male', 'Q', 'S']","3d370e6d":"X= train[features].copy()","18bc66bb":"X.head()","a28dbd3c":"y = train['Survived']","e63d9241":"y.head()","62ec2c2f":"X_test = test[features]","a39078a5":"X_test.head()","b7baa078":"from sklearn.metrics import accuracy_score\nfrom sklearn.naive_bayes import GaussianNB","b48e078a":"clf = GaussianNB()\nclf.fit(X,y)","246b1491":"predictions = clf.predict(X_test)","5b5890e8":"df = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","4af8b9cd":"df.columns","dab2cd6f":"y_test = df['Survived']","f6fa71ce":"accuracy_score(y_true = y_test, y_pred = predictions)","702ad122":"output = pd.DataFrame({\n    \"PassengerId\": X_test['PassengerId'],\n    \"Survived\": predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")\n","38446922":"**Submission**","5f918c7c":"# Data Cleaning","ca5309b9":"**Checking Null Values**","de3294e4":"# EDA","5498e708":"# Applying Model","440e3e5a":"using get_dummies function which will help in prediction","1cac86a2":"Adding dataset","9dcaa845":"**Imporing Libraries**","758bea00":"**Identifying Null Values with help of heat map**","dbb43369":"preparing data for model"}}