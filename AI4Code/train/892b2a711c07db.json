{"cell_type":{"6967de0b":"code","b3ab1961":"code","64977ae0":"code","4e355e8c":"code","04942074":"code","60b4593c":"code","ee751de2":"code","7b09333e":"code","9297fd50":"code","f668788f":"code","f72ddf99":"code","3c6c640d":"code","239a1c45":"code","74ef04f7":"code","5527890f":"code","2c65a458":"code","f09e6c0b":"code","f6c3aefa":"code","47134d06":"code","c621fc0d":"code","03789e6e":"code","4188ab27":"code","1acbfe5a":"code","59c7ed24":"code","baa37093":"markdown","6506ca98":"markdown","ddf24395":"markdown","0b09c9b3":"markdown","c5d97513":"markdown","c9c49f48":"markdown","95e699f6":"markdown","d2a09808":"markdown","88ae79ef":"markdown","703ceecd":"markdown","028ea0de":"markdown","7cee264c":"markdown","7e9095a0":"markdown","0c0736d6":"markdown"},"source":{"6967de0b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport cv2\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b3ab1961":"# Import Python Packages\n# PyTesseract and Tika-Python for OCR\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport shutil\nimport PIL\nimport os\nfrom os import walk\nfrom shutil import copytree, ignore_patterns\nfrom collections import Counter\nfrom nltk.corpus import stopwords\nfrom wordcloud import WordCloud, STOPWORDS\nfrom PIL import Image\nfrom wand.image import Image as Img\npd.set_option('display.max_columns', 500)\npd.set_option('display.max_colwidth', 500)\n#mueller_report = pd.read_csv('..\/input\/data-science-cheat-sheets\/Interview Questions\/AI Questions.pdf') # one row per line","64977ae0":"# Define helper function for plotting word clouds\ndef wordCloudFunction(df,column,numWords):\n    # adapted from https:\/\/www.kaggle.com\/benhamner\/most-common-forum-topic-words\n    topic_words = [ z.lower() for y in\n                       [ x.split() for x in df[column] if isinstance(x, str)]\n                       for z in y]\n    word_count_dict = dict(Counter(topic_words))\n    popular_words = sorted(word_count_dict, key = word_count_dict.get, reverse = True)\n    popular_words_nonstop = [w for w in popular_words if w not in stopwords.words(\"english\")]\n    word_string=str(popular_words_nonstop)\n    wordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white',\n                          max_words=numWords,\n                          width=1000,height=1000,\n                         ).generate(word_string)\n    plt.clf()\n    plt.imshow(wordcloud)\n    plt.axis('off')\n    plt.show()","4e355e8c":"# Define helper function for plotting word bar graphs\ndef wordBarGraphFunction(df,column,title):\n    # adapted from https:\/\/www.kaggle.com\/benhamner\/most-common-forum-topic-words\n    topic_words = [ z.lower() for y in\n                       [ x.split() for x in df[column] if isinstance(x, str)]\n                       for z in y]\n    word_count_dict = dict(Counter(topic_words))\n    popular_words = sorted(word_count_dict, key = word_count_dict.get, reverse = True)\n    popular_words_nonstop = [w for w in popular_words if w not in stopwords.words(\"english\")]\n    plt.barh(range(50), [word_count_dict[w] for w in reversed(popular_words_nonstop[0:50])])\n    plt.yticks([x + 0.5 for x in range(50)], reversed(popular_words_nonstop[0:50]))\n    plt.title(title)\n    plt.show()","04942074":"# Preview the data folder\ninputFolder = '..\/input\/'\nfor root, directories, filenames in os.walk(inputFolder):\n    for filename in filenames: \n        print(os.path.join(root,filename))\n        \n# Move data to folder with read\/write access\noutputFolder = '\/kaggle\/working\/pdfs\/'\nshutil.copytree(inputFolder,outputFolder,ignore=ignore_patterns('*.db'))\nfor root, directories, filenames in os.walk(outputFolder, topdown=False):\n    for file in filenames:\n        try:\n            shutil.move(os.path.join(root, file), outputFolder)\n        except OSError:\n            pass\nprint(os.listdir(outputFolder))","60b4593c":"# Look at intro page\npdf = os.path.join(outputFolder,'ai4all.pdf[1]')\nwith Img(filename=pdf, resolution=300) as img:\n    img.compression_quality = 99\n    img.convert(\"RGBA\").save(filename='\/kaggle\/working\/ai4all1.jpg') # intro page to preview later","ee751de2":"# Look at intro page\npdf = os.path.join(outputFolder,'50YearsDataScience-1533532686598.pdf[4]')\nwith Img(filename=pdf, resolution=300) as img:\n    img.compression_quality = 99\n    img.convert(\"RGBA\").save(filename='\/kaggle\/working\/50YearsDataScience-15335326865984.jpg') # intro page to preview later","7b09333e":"# Parse a PDF file and convert it to CSV using PyTesseract\nimport pytesseract\npdfimage = Image.open('\/kaggle\/working\/ai4all1.jpg')\ntext = pytesseract.image_to_string(pdfimage)  \ndf = pd.DataFrame([text.split('\\n')])","9297fd50":"# Parse a PDF file and convert it to CSV using PyTesseract\nimport pytesseract\npdfimage4 = Image.open('\/kaggle\/working\/50YearsDataScience-15335326865984.jpg')\ntext = pytesseract.image_to_string(pdfimage)  \ndf = pd.DataFrame([text.split('\\n')])","f668788f":"#codes from Endi Niu @niuddd\nimg = cv2.imread('\/kaggle\/input\/data-science-cheat-sheets\/Images\/coursera-deep-learning.PNG')\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nfig = plt.figure(figsize=(8,8))\nplt.imshow(img)","f72ddf99":"# Plot WordCloud of page 1\nplt.figure(figsize=(15,15))\nwordCloudFunction(df.T,0,10000000)\nplt.figure(figsize=(10,10))\nwordBarGraphFunction(df.T,0,\"Most Common Words on Page 1 of the AI for All\")","3c6c640d":"#codes from Endi Niu @niuddd\nimg = cv2.imread('\/kaggle\/input\/data-science-cheat-sheets\/Docker and Kubernetes\/docker-cheat-sheet.png')\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nfig = plt.figure(figsize=(8,8))\nplt.imshow(img)\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nfig = plt.figure(figsize=(8,8))\nplt.imshow(img)","239a1c45":"#Explore page 4 - Mueller Report. Here I don't know how many pages each Cheat Sheet has (probably 1) \nw, h = pdfimage4.size # crop image\npdfimage4.crop((0, 1240, w, h-1300)) # display exerpt of PDF","74ef04f7":"#codes from Endi Niu @niuddd\nimg = cv2.imread('\/kaggle\/input\/data-science-cheat-sheets\/DevOps\/Ansible-Cheat_Sheet_Edureka.png')\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nfig = plt.figure(figsize=(8,8))\nplt.imshow(img)\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nfig = plt.figure(figsize=(8,8))\nplt.imshow(img)","5527890f":"# PDF to JPG for p4\npdf = os.path.join(outputFolder,'50YearsDataScience-1533532686598.pdf[4]')\nwith Img(filename=pdf, resolution=300) as img:\n    img.compression_quality = 99\n    img.convert(\"RGBA\").save(filename='\/kaggle\/working\/50YearsDataScience-15335326865984.jpg')\npdfimage4 = Image.open('\/kaggle\/working\/50YearsDataScience-15335326865984.jpg')","2c65a458":"# PDF to JPG for p5\npdf = os.path.join(outputFolder,'50YearsDataScience-1533532686598.pdf[5]')\nwith Img(filename=pdf, resolution=300) as img:\n    img.compression_quality = 99\n    img.convert(\"RGBA\").save(filename='\/kaggle\/working\/50YearsDataScience-15335326865985.jpg')\npdfimage5 = Image.open('\/kaggle\/working\/50YearsDataScience-15335326865985.jpg')","f09e6c0b":"# Parse a PDF file and convert it to CSV using PyTesseract (p4)\ntext = pytesseract.image_to_string(pdfimage4)\ndf = pd.DataFrame([text.split('\\n')])\ndf.drop(df.iloc[:, 27:], inplace=True, axis=1)\ndf.drop(df.iloc[:, :3], inplace=True, axis=1)\ndf.columns = range(df.shape[1])","f6c3aefa":"!pip install tika\nimport tika\nfrom tika import parser","47134d06":"#parsed = parser.from_file('\/kaggle\/working\/50YearsDataScience-153353268659854.jpg')","c621fc0d":"#text = parsed[\"content\"]\n#df2 = pd.DataFrame([text.split('\\n')])\n#df2.drop(df2.iloc[:, 1:50], inplace=True, axis=1)\n#df2.drop(df2.iloc[:, 26:], inplace=True, axis=1)\n#df2.columns = range(df2.shape[1])","03789e6e":"#dfcombined = pd.concat([df, df2]) ","4188ab27":"# Page 4-5\n#dfcombined.head() # preview csv of 4","1acbfe5a":"#codes from Endi Niu @niuddd\nimg = cv2.imread('\/kaggle\/input\/data-science-cheat-sheets\/Linux\/Linux.png')\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nfig = plt.figure(figsize=(8,8))\nplt.imshow(img)","59c7ed24":"# Clean up the notebook\n!apt-get install zip # install zip\n!zip -r pdfs.zip \/kaggle\/working\/pdfs\/ # zip up a few files\n!rm -rf pdfs\/* # remove everything else","baa37093":"*Clean up Notebook*  - Another failure: zip not found.   Probably zip went to the same place that Tika. That's tricky.","6506ca98":"Just in case We find files with many pages. The following codes to explore pages 289-291 from the Mueller Report. ","ddf24395":"Coursera DL","0b09c9b3":"DevOps","c5d97513":"Since I got no module Tika, I couldn't parse,combine. Then, NO PDF to CSV for now.","c9c49f48":"Docker and Kubernetes","95e699f6":"Kaggle Notebook Runner: Mar\u00edlia Prata @mpwolke","d2a09808":"Convert Page 8 of PDF to CSV (Method 1 of 2: PyTesseract)","88ae79ef":"My Tika is broken. Therefore I couldn't perform with Tika.","703ceecd":"Convert Page 8 of PDF to CSV (Method 2 of 2: Tika-Python) - I didn't because returned: There's no module TIKA.","028ea0de":"Linux","7cee264c":"#Codes from Paul Mooney https:\/\/www.kaggle.com\/paultimothymooney\/what-is-inside-of-the-mueller-report\/notebook","7e9095a0":"#Convert PDF to CSV","0c0736d6":"#Convert PDF to CSV"}}