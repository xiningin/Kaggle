{"cell_type":{"c7b78b6c":"code","4da1551f":"code","4893aa9e":"code","3c60be36":"code","fb0453e8":"code","49d5cac2":"code","e743b21b":"code","cfa8bcba":"code","d12b49b4":"code","5d84c576":"code","487aed93":"code","88fcd034":"code","c09fb42a":"code","718b3750":"code","5ea84eaa":"code","b1abef06":"code","5e8bf6ce":"code","b5ca3feb":"code","3457a8e5":"markdown","848201bd":"markdown","e133f6d5":"markdown","384a6b8f":"markdown","755ec291":"markdown","a4c2ec14":"markdown","da1e6965":"markdown","22653c4a":"markdown"},"source":{"c7b78b6c":"from tensorflow.compat.v1 import ConfigProto\nfrom tensorflow.compat.v1 import InteractiveSession\n\nconfig = ConfigProto()\nconfig.gpu_options.per_process_gpu_memory_fraction = 0.2\nconfig.gpu_options.allow_growth = True\nsession = InteractiveSession(config=config)","4da1551f":"# import the libraries as shown below\n\nfrom tensorflow.keras.layers import Input, Lambda, Dense, Flatten\nfrom tensorflow.keras.models import Model\n#from tensorflow.keras.applications.resnet152V2 import ResNet152V2\n#from keras.applications.vgg16 import VGG16\nfrom tensorflow.keras.applications.inception_v3 import preprocess_input\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img\nfrom tensorflow.keras.models import Sequential\nimport numpy as np\nfrom glob import glob","4893aa9e":"# re-size all the images to this\n\nIMAGE_SIZE = [224, 224]\n\ntrain_path = '..\/input\/tomato\/null'\nvalid_path = '..\/input\/tomato\/null'","3c60be36":"# Here we will be using imagenet weights\nimport tensorflow\nresnet152V2 =tensorflow.keras.applications.ResNet152V2(input_shape=IMAGE_SIZE + [3], weights='imagenet', include_top=False)","fb0453e8":"# don't train existing weights\nfor layer in resnet152V2.layers:\n    layer.trainable = False","49d5cac2":"# useful for getting number of output classes\nfolders = glob('..\/input\/tomato\/New Plant Diseases Dataset(Augmented)\/train\/*')","e743b21b":"# Flatten the Input\nx = Flatten()(resnet152V2.output)","cfa8bcba":"prediction = Dense(len(folders), activation='softmax')(x)\n\n# create a model object\nmodel = Model(inputs=resnet152V2.input, outputs=prediction)","d12b49b4":"# view the structure of the model\nmodel.summary()","5d84c576":"# Complie the Model\nmodel.compile(\n  loss='categorical_crossentropy',\n  optimizer='adam',\n  metrics=['accuracy']\n)\n","487aed93":"# Use the Image Data Generator to import the images from the dataset\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)\n\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)","88fcd034":"# Make sure you provide the same target size as initialied for the image size\ntraining_set = train_datagen.flow_from_directory('..\/input\/tomato\/New Plant Diseases Dataset(Augmented)\/train',\n                                                 target_size = (224, 224),\n                                                 batch_size = 32,\n                                                 class_mode = 'categorical')","c09fb42a":"test_set = test_datagen.flow_from_directory('..\/input\/tomato\/New Plant Diseases Dataset(Augmented)\/test',\n                                            target_size = (224, 224),\n                                            batch_size = 32,\n                                            class_mode = 'categorical')","718b3750":"# fit the model\nr = model.fit_generator(\n  training_set,\n  validation_data=test_set,\n  epochs=15,\n  steps_per_epoch=len(training_set),\n  validation_steps=len(test_set)\n)","5ea84eaa":"import matplotlib.pyplot as plt","b1abef06":"#Ploting Acuracy & Loss\nimport matplotlib.pyplot as plt\nplt.plot(r.history['accuracy'])\nplt.plot(r.history['val_accuracy'])\nplt.plot(r.history['loss'])\nplt.plot(r.history['val_loss'])\nplt.title(\"Model Accuracy\")\nplt.ylabel(\"Accuracy\")\nplt.xlabel(\"Epoch\")\nplt.legend([\"Accuracy\",\"Validation Accuracy\",\"loss\",\"Validation Loss\"])\nplt.show()","5e8bf6ce":"#Example 1\n\nimport numpy as np\nfrom tensorflow.keras.preprocessing import image\ntest_image = image.load_img('..\/input\/tomato\/New Plant Diseases Dataset(Augmented)\/valid\/Tomato___Bacterial_spot\/01d9fc8d-5083-468d-a583-885f33517cdd___GCREC_Bact.Sp 3422.JPG', target_size = (224, 224))\nimgplot = plt.imshow(test_image)\ntest_image = image.img_to_array(test_image)\ntest_image=test_image\/255\ntest_image = np.expand_dims(test_image, axis = 0)\npreds = model.predict(test_image)\n\npreds = np.argmax(preds, axis=1)\n\nif preds==0:\n  print(\"Tomato - Bacterial Spot\")\nelif preds==1:\n  print(\"Tomato - Early Blight\")\nelif preds==2:\n  print(\"Tomato - Late Blight\")\nelif preds==3:\n  print(\"Tomato - Leaf Mold\")\nelif preds==4:\n  print(\"Tomato - Septoria Leaf Spot\")\nelif preds==5:\n  print(\"Tomato - Spider Mites Two-spotted Spider Mite\")\nelif preds==6:\n  print(\"Tomato - Target Spot\")\nelif preds==7:\n  print(\"Tomato - Tomato_Yellow_Leaf_Curl_Virus\")\nelif preds==8:\n  print(\"Tomato - Tomato Mosaic Virus\")\nelse:\n  print(\"Tomato - Healthy \")","b5ca3feb":"#Example 2\n\nimport numpy as np\nfrom tensorflow.keras.preprocessing import image\ntest_image = image.load_img('..\/input\/tomato\/New Plant Diseases Dataset(Augmented)\/valid\/Tomato___Spider_mites Two-spotted_spider_mite\/00fa99e8-2605-4d72-be69-98277587d84b___Com.G_SpM_FL 1453_flipTB.JPG', target_size = (224, 224))\nimgplot = plt.imshow(test_image)\ntest_image = image.img_to_array(test_image)\ntest_image=test_image\/255\ntest_image = np.expand_dims(test_image, axis = 0)\npreds = model.predict(test_image)\n\npreds = np.argmax(preds, axis=1)\n\nif preds==0:\n  print(\"Tomato - Bacterial Spot\")\nelif preds==1:\n  print(\"Tomato - Early Blight\")\nelif preds==2:\n  print(\"Tomato - Late Blight\")\nelif preds==3:\n  print(\"Tomato - Leaf Mold\")\nelif preds==4:\n  print(\"Tomato - Septoria Leaf Spot\")\nelif preds==5:\n  print(\"Tomato - Spider Mites Two-spotted Spider Mite\")\nelif preds==6:\n  print(\"Tomato - Target Spot\")\nelif preds==7:\n  print(\"Tomato - Tomato_Yellow_Leaf_Curl_Virus\")\nelif preds==8:\n  print(\"Tomato - Tomato Mosaic Virus\")\nelse:\n  print(\"Tomato - Healthy \")","3457a8e5":"### Import VGG16 library","848201bd":"#### Example 1","e133f6d5":"### Dataset retrieved from Google Drive","384a6b8f":"## Testing","755ec291":"### Plot","a4c2ec14":"## Transfer Learning resnet1252V2 using Keras","da1e6965":"## Importing Library","22653c4a":"### Example 2"}}