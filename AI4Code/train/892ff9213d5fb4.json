{"cell_type":{"5af55e5a":"code","05dac1cc":"code","1c88e384":"code","8e5474cc":"code","1156fc2b":"code","e907ce38":"code","cf930a3b":"code","d1bab754":"code","70a719b9":"code","fcd603c3":"code","f491cddc":"code","837a4205":"code","6e0c52b6":"code","d378b091":"code","5f8b8f57":"code","9b8f357a":"markdown"},"source":{"5af55e5a":"#importing libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import PoissonRegressor\nfrom sklearn.pipeline import Pipeline\nfrom sklearn import metrics","05dac1cc":"#fetching data\ndf = pd.read_csv(r\"\/kaggle\/input\/award-competition\/competition_awards_data.csv\",  sep = ',', header= 0 )\ndf.head()","1c88e384":"# number of observations: 200\ndf.shape","8e5474cc":"# checking NA\n# there are no missing values in the dataset\ndf.isnull().values.any()","1156fc2b":"# plotting awards agains Math score\nfig, ax = plt.subplots(figsize=(20,8))\nplt.grid()\nax.set_ylabel(\"Awards\")                                \nax.set_xlabel(\"Math Score\")\nax.scatter( df['Math Score'],df.Awards)\nplt.show()","e907ce38":"from sklearn.model_selection import train_test_split\ntrain,test=train_test_split(df, train_size = .8,random_state =1)","cf930a3b":"print(len(train))\n","d1bab754":"print(len(test))","70a719b9":"# defining X and y for model training and test\nX_train = train['Math Score'].values.reshape(-1, 1)\ny_train = train.Awards\n\nX_train.shape,y_train.shape","fcd603c3":"X_test = test['Math Score'].values.reshape(-1, 1)\ny_test = test.Awards\nX_test.shape,y_test.shape","f491cddc":"# Doing a polynomial regression: Comparing linear, quadratic and cubic fits\n# Pipeline helps you associate two models or objects to be built sequentially with each other, \n# in this case, PoissonRegressor() is the only object\n\npipeline = Pipeline([('model', PoissonRegressor())])\npipeline.fit(X_train, y_train)\ny_pred = pipeline.predict(X_test)\nr2_test = metrics.r2_score(y_test, y_pred)\n\nr2_test","837a4205":"# training performance\ny_pred_train = pipeline.predict(X_train)\nr2_train = metrics.r2_score(y_train, y_pred_train)\nr2_train","6e0c52b6":"# plot predictions and actual values against Math score\n\nfig, ax = plt.subplots(figsize=(20,8))\nplt.grid()\nax.set_xlabel(\"Math Score\")                                \nax.set_ylabel(\"Awards\")\n# train data in blue\nax.scatter(X_train, y_train,color='blue',label=\"Original Train Data\")\nax.plot(X_train, y_pred_train, '.', color='green',label=\"Predicted Train Data\")\n# test data\nax.scatter(X_test, y_test,color='black',label=\"Original Test Data\")\nax.plot(X_test, y_pred, '*', color='red',label=\"Predicted Test Data\")\nax.legend()\nplt.show()","d378b091":"eval = pd.DataFrame({'y_pred': [round(y, 0) for y in y_pred], 'y': y_test}).reset_index()\neval.head()","5f8b8f57":"print('     Frequency table')\neval.groupby(['y', 'y_pred']).agg('count').reset_index().pivot(index='y', columns='y_pred', values='index').fillna(0)","9b8f357a":"# Poisson Regression\n\nWe are buildling a Poisson regression model on the **student awards** dataset. The dataset contains two variables - awards won and math score."}}