{"cell_type":{"7e43cb08":"code","a12d9f1f":"code","d1a254a0":"code","858a6a23":"code","a9a1d195":"code","0ffa9852":"code","742392c2":"code","87813ad7":"code","b79a9921":"code","d4c3c122":"code","ba1427d3":"code","d3089a37":"code","cc182897":"code","cd209535":"code","ff6f32bd":"code","14bda902":"code","7f41beb6":"code","63b548f4":"code","e2eb8af3":"code","494b8c42":"code","20c61ef7":"code","1962c65e":"code","d619fb8f":"code","0abf8190":"code","5235ef8c":"code","8d675338":"code","d88dc1fd":"code","acdaeebc":"code","7685bc30":"code","9508f64d":"code","404ccaf2":"code","57d28dbf":"code","eab3782a":"code","49f74eb8":"code","ae009363":"code","daabe2f3":"markdown","b29ece30":"markdown","0d4d8eec":"markdown","734c41fc":"markdown","5bd94044":"markdown","21161a06":"markdown","61bbe8d8":"markdown","b83244ee":"markdown","b6e8fa69":"markdown","d32b193c":"markdown","726f4840":"markdown","76bf23b7":"markdown","a1fd2a84":"markdown"},"source":{"7e43cb08":"# import libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport pandas_profiling as pp\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a12d9f1f":"#Loading the data\n\ndata=pd.read_csv(\"..\/input\/sales_data_sample.csv\",encoding='unicode_escape')\ndata.shape","d1a254a0":"data.info()","858a6a23":"data.head()","a9a1d195":"# Dropping Unnecessary columns \ntemp=['ADDRESSLINE1','ADDRESSLINE2','POSTALCODE', 'TERRITORY', 'PHONE', 'CITY' , 'STATE','CONTACTFIRSTNAME', 'CONTACTLASTNAME' ]\ndata.drop(temp,axis=1,inplace=True)","0ffa9852":"# Regrouping product code.\ndata['PRODUCTINITIAL'] = data['PRODUCTCODE'].str[:3]\ndata.drop('PRODUCTCODE',axis=1,inplace=True)","742392c2":"# Recheck columns\ndata.info()","87813ad7":"# Let's plot the data to get more insight.\n\nplt.rcParams['figure.figsize'] = [18, 16]\ndata.plot(kind=\"box\",subplots=True,layout=(4,4),sharex=False,sharey=False)\nplt.show()","b79a9921":"plt.rcParams['figure.figsize'] = [18, 16]\ndata.plot(kind=\"density\",subplots=True,layout=(4,4),sharex=False,sharey=False)\nplt.show()","d4c3c122":"# Checking null values\ndata.isnull().sum()","ba1427d3":"plt.rcParams['figure.figsize'] = [4, 4]\nsns.regplot(x=\"YEAR_ID\",y=\"QTR_ID\",data=data)\nplt.show()","d3089a37":"data['STATUS'].value_counts()","cc182897":"sns.countplot(y='STATUS',data=data,hue='YEAR_ID')","cd209535":"sns.countplot(y='STATUS',data=data,hue='QTR_ID')","ff6f32bd":"# Comparing sales for each year(Quaterwise)\n\ndata1=data.groupby(['YEAR_ID','QTR_ID']).agg({'SALES': lambda x: x.sum() })\nprint(data1.info())\nprint(data1.head())","14bda902":"data1.reset_index(inplace=True)\ndata1.head()","7f41beb6":"\nsns.factorplot(y='SALES', x='QTR_ID',data=data1,kind=\"bar\" ,hue='YEAR_ID')","63b548f4":"import warnings\nwarnings.filterwarnings('ignore')","e2eb8af3":"temp=['CUSTOMERNAME', 'ORDERNUMBER', 'ORDERDATE', 'SALES']\nRFM_data=data[temp]\nRFM_data.shape","494b8c42":"RFM_data.head()","20c61ef7":"RFM_data['ORDERDATE'] = pd.to_datetime(RFM_data['ORDERDATE'])","1962c65e":"RFM_data['ORDERDATE'].max()","d619fb8f":"import datetime as dt\nNOW = dt.datetime(2005,5,31)","0abf8190":"RFM_table=RFM_data.groupby('CUSTOMERNAME').agg({'ORDERDATE': lambda x: (NOW - x.max()).days, # Recency\n                                                'ORDERNUMBER': lambda x: len(x.unique()), # Frequency\n                                                'SALES': lambda x: x.sum()})    # Monetary \n\nRFM_table['ORDERDATE'] = RFM_table['ORDERDATE'].astype(int)\n\nRFM_table.rename(columns={'ORDERDATE': 'recency', \n                         'ORDERNUMBER': 'frequency',\n                         'SALES': 'monetary_value'}, inplace=True)","5235ef8c":"RFM_table.head()","8d675338":"quantiles = RFM_table.quantile(q=[0.25,0.5,0.75])\nquantiles\n","d88dc1fd":"# Converting quantiles to a dictionary, easier to use.\nquantiles = quantiles.to_dict()\nquantiles ","acdaeebc":"RFM_Segment = RFM_table.copy()","7685bc30":"# Arguments (x = value, p = recency, monetary_value, frequency, k = quartiles dict)\ndef R_Class(x,p,d):\n    if x <= d[p][0.25]:\n        return 4\n    elif x <= d[p][0.50]:\n        return 3\n    elif x <= d[p][0.75]: \n        return 2\n    else:\n        return 1\n    \n# Arguments (x = value, p = recency, monetary_value, frequency, k = quartiles dict)\ndef FM_Class(x,p,d):\n    if x <= d[p][0.25]:\n        return 1\n    elif x <= d[p][0.50]:\n        return 2\n    elif x <= d[p][0.75]: \n        return 3\n    else:\n        return 4","9508f64d":"RFM_Segment['R_Quartile'] = RFM_Segment['recency'].apply(R_Class, args=('recency',quantiles,))\nRFM_Segment['F_Quartile'] = RFM_Segment['frequency'].apply(FM_Class, args=('frequency',quantiles,))\nRFM_Segment['M_Quartile'] = RFM_Segment['monetary_value'].apply(FM_Class, args=('monetary_value',quantiles,))","404ccaf2":"RFM_Segment['RFMClass'] = RFM_Segment.R_Quartile.map(str) \\\n                            + RFM_Segment.F_Quartile.map(str) \\\n                            + RFM_Segment.M_Quartile.map(str)","57d28dbf":"#Who are my best customers? (BY RFMClass = 444)\nRFM_Segment[RFM_Segment['RFMClass']=='444'].sort_values('monetary_value', ascending=False).head(5)","eab3782a":"#Which customers are at the verge of churning?\n#Customers who's recency value is low\n\nRFM_Segment[RFM_Segment['R_Quartile'] <= 2 ].sort_values('monetary_value', ascending=False).head(5)","49f74eb8":"#Who are lost customers?\n#Customers who's recency, frequency as well as monetary values are low \n\nRFM_Segment[RFM_Segment['RFMClass']=='111'].sort_values('recency',ascending=False).head(5)","ae009363":"#Who are your loyal customers?\n#Customers with high frequency value\n\nRFM_Segment[RFM_Segment['F_Quartile'] >= 3 ].sort_values('monetary_value', ascending=False).head(5)","daabe2f3":"**More Insights.**\n\n* Most of data for year 2003,2004(YEAR_ID). 4th Quater have more sale... 4>1>2>3... \n* According to data, most of sales are with in particular price range. But we have some outliers within 'SALES' and 'QUANTITYORDERED'. \n*  We have skewed variables like 'PRICEEACH','ORDERLINENUMBER'. \n* We have variables with high variance like 'PRICEEACH','ORDERLINENUMBER' and 'MSRP'.","b29ece30":"**Create the RFM Table**\n\n* Given dataset last order date is May 31, 2005, which we will use to calculate recency.","0d4d8eec":"## RFM Analysis","734c41fc":"## Quick Insight\n\nWe have some unnecessary columns 'ADDRESSLINE1','ADDRESSLINE2','POSTALCODE', 'TERRITORY', 'PHONE'. We can drop them.\nWe can discretize data i.e.  Instead of using 'CITY' , 'STATE' can use 'COUNTRY' only. So, we can drop 'CITY' , 'STATE' also.\nWe can regroup column 'PRODUCTCODE' by using only first three character value.\nWe have 'CUSTOMERNAME',  'CONTACTFIRSTNAME' and 'CONTACTLASTNAME'. We can remove 'CONTACTFIRSTNAME' and 'CONTACTLASTNAME'.\n","5bd94044":"Analytics can be categorized at a high level into three distinct types:\n1. **Descriptive Analytics**, which use data aggregation and data mining to provide insight into the past and answer: \u201cWhat has happened?\u201d\n2. **Predictive Analytics**, which use statistical models and forecasts techniques to understand the future and answer: \u201cWhat could happen?\u201d\n3. **Prescriptive Analytics**, which use optimization and simulation algorithms to advice on possible outcomes and answer: \u201cWhat should we do?\u201d\n\nLet's start with Descriptive Analysis, which allow us to learn from past behaviors, and understand how they might influence future outcomes.\n\nNote: We need to be careful about how we segment and target customers. So we will focus on **RFM Analysis**, sophisticated technique to segment their customers\n","21161a06":"## Detailed data Exploration.","61bbe8d8":"RFM_Segment.head()","b83244ee":"* We dont have any duplicates.\n* No missing values. \n* We will look forward data quaterwise. Also Variable 'MONTH_ID' is highly correlated with QTR_ID (\u03c1 = 0.9793). As a result  'MONTH_ID'  should be ignored.\n* We have 92 unique customers for which we will do RFM analysis.\n","b6e8fa69":"**RFM Segmentation**","d32b193c":"**RFM segmentation readily answers these questions for your business\u2026**\n* Who are my best customers?\n* Which customers are at the verge of churning?\n* Who are lost customers that you don\u2019t need to pay much attention to?\n* Who are your loyal customers?\n* Which customers you must retain?\n* Who has the potential to be converted in more profitable customers?\n* Which group of customers is most likely to respond to your current campaign?","726f4840":"** RFM_Grouping**","76bf23b7":"* We have Disputed, In Process, On Hold orders in year 2nd quater, 2005.\n* Also we need clarification whether Resolved means Shipped or not.","a1fd2a84":"\nFor RFM analysis, we need only three columns. 'CUSTOMERNAME', 'ORDERNUMBER', 'ORDERDATE' and 'SALES'"}}