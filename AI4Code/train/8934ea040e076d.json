{"cell_type":{"7f7852e3":"code","e05bd80b":"code","d818ab62":"code","cfc94c6f":"code","b0628270":"code","331ec1e3":"code","d40fee59":"code","9af7f351":"code","571cb543":"code","6fb01358":"code","d84cdb33":"code","d2d29d5e":"code","e876ffa0":"code","3604ebf9":"code","798a6e2b":"code","30e662c6":"code","428ccb30":"code","3d42ba5c":"code","1946e506":"code","7c003d56":"code","43990eae":"code","b0fac0fe":"code","125429d7":"code","919284ff":"code","2b183b13":"code","cf54421b":"code","2674e909":"code","7a959460":"code","ec2b4234":"code","2db7497e":"code","4632d5ec":"code","1a4bfa42":"code","c3c59974":"code","0a74da7d":"code","49688027":"code","617b7086":"code","1b55ece3":"code","77318917":"code","18a7699c":"code","4f21b47f":"code","a9503416":"code","3d5e536b":"code","2aff98d8":"code","80f6f5ff":"code","ddcc0111":"code","ae5cf3c1":"code","c21ada38":"code","0446fc3b":"code","259d5ef7":"code","03bc0702":"code","819ad539":"code","ed3449c4":"code","6ceec3f6":"code","3b941d1d":"code","8a6c55da":"code","6aa02f73":"code","ea2c07cc":"code","13c3cab3":"code","e9351709":"code","7e2d59b1":"code","4456ca7f":"code","c5a61412":"code","e492a8d3":"code","83dec3ff":"code","8efe0649":"code","bca741d0":"code","6578971e":"code","9321d994":"code","68a605c6":"code","c52452f2":"code","93b49245":"code","c534f899":"code","fe817d24":"code","d5a1717f":"code","4e18bd95":"code","fe9f1847":"code","586e4407":"code","bb1466fe":"code","8b9d4a47":"code","7c316d2d":"code","201c7aca":"code","f7a7caff":"code","16137b32":"code","0ed72db6":"code","3189354d":"code","7730de96":"code","20db84e0":"code","015488ce":"code","1146dbfd":"code","30425584":"code","b542d86c":"code","2b285c31":"code","b727ec3b":"code","269dbff3":"code","4091333a":"code","429e93b7":"code","d52f5e3f":"code","43b61cd7":"code","c04ad51f":"code","f5d95541":"code","4c865f8f":"code","130796bf":"code","1c240132":"code","3d68e6b7":"code","a786f9f8":"code","67845280":"code","ee749647":"code","d69f38e9":"code","e0281ab0":"code","f8ab8337":"code","b9dd291f":"code","2d587b70":"code","0d59662d":"code","f85c3551":"code","0ae94c94":"code","0d0bd132":"code","da47836c":"code","21c9245c":"code","a764c15a":"markdown","f7234ff1":"markdown","6ab70934":"markdown","ffd0ba7f":"markdown","36ca05dd":"markdown","8c5d1faa":"markdown","519d88cd":"markdown","44d5b8c7":"markdown","88ded8de":"markdown","f29e8ab7":"markdown","7776fc32":"markdown","659a8c0e":"markdown"},"source":{"7f7852e3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\nimport matplotlib as mpl\nimport seaborn as sns\nimport pylab\ncolor = sns.color_palette()\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\ndf = pd.read_csv(\"..\/input\/multipleChoiceResponses.csv\", encoding = \"ISO-8859-1\")\n# Any results you write to the current directory are saved as output.\n\ndft = df.transpose()\ndfs = df[df.Q7 != 'I am a student']\ntot_count  = 23859\ndf.head()","e05bd80b":"questions = df.iloc[0]\ndf = df[1:]\n\n#questions\ndf = df.replace({'Master\u00e2\u0080\u0099s degree':\"Master's\",'Bachelor\u00e2\u0080\u0099s degree': \"Bachelor's\", 'Doctoral degree':'Doctoral','Some college\/university study without earning a bachelor\u00e2\u0080\u0099s degree':\"Some other degree\",'Professional degree':'Professional','No formal education past high school':'No Education','I prefer not to answer':'Unknown'})\ndf = df.replace({'United States of America':'USA','United Kingdom of Great Britain and Northern Ireland': 'UK & Ireland', 'Iran, Islamic Republic of...':'Iran','Hong Kong (S.A.R.)':'Hong Kong','I do not wish to disclose my location':'Mysterious Location'})\ndf = df.replace({'Computer science (software engineering, etc.)':\"Computer Sci\",'Engineering (non-computer focused)': \"Engineering\", 'Mathematics or statistics':'Math & Stats','A business discipline (accounting, economics, finance, etc.)':\"Buisness\",'Physics or astronomy':'Phy & Astronomy','Information technology, networking, or system administration':'IT & Networking','Medical or life sciences (biology, chemistry, medicine, etc.)':'Medical','Social sciences (anthropology, psychology, sociology, etc.)':\"Social Sci\",'Humanities (history, literature, philosophy, etc.)':'Humanities','Environmental science or geology':'Environmental Sci','I never declared a major':\"No Major\",'Fine arts or performing arts':'Fine Arts'})\n\ndfs = dfs.replace({'Master\u00e2\u0080\u0099s degree':\"Master's\",'Bachelor\u00e2\u0080\u0099s degree': \"Bachelor's\", 'Doctoral degree':'Doctoral','Some college\/university study without earning a bachelor\u00e2\u0080\u0099s degree':\"Some other degree\",'Professional degree':'Professional','No formal education past high school':'No Education','I prefer not to answer':'Unknown'})\ndfs = dfs.replace({'United States of America':'USA','United Kingdom of Great Britain and Northern Ireland': 'UK & Ireland', 'Iran, Islamic Republic of...':'Iran','Hong Kong (S.A.R.)':'Hong Kong','I do not wish to disclose my location':'Mysterious Location'})\ndfs = dfs.replace({'Computer science (software engineering, etc.)':\"Computer Sci\",'Engineering (non-computer focused)': \"Engineering\", 'Mathematics or statistics':'Math & Stats','A business discipline (accounting, economics, finance, etc.)':\"Buisness\",'Physics or astronomy':'Phy & Astronomy','Information technology, networking, or system administration':'IT & Networking','Medical or life sciences (biology, chemistry, medicine, etc.)':'Medical','Social sciences (anthropology, psychology, sociology, etc.)':\"Social Sci\",'Humanities (history, literature, philosophy, etc.)':'Humanities','Environmental science or geology':'Environmental Sci','I never declared a major':\"No Major\",'Fine arts or performing arts':'Fine Arts'})\n\ndft = dft.replace({'Master\u00e2\u0080\u0099s degree':\"Master's\",'Bachelor\u00e2\u0080\u0099s degree': \"Bachelor's\", 'Doctoral degree':'Doctoral','Some college\/university study without earning a bachelor\u00e2\u0080\u0099s degree':\"Some other degree\",'Professional degree':'Professional','No formal education past high school':'No Education','I prefer not to answer':'Unknown'})\ndft = dft.replace({'United States of America':'USA','United Kingdom of Great Britain and Northern Ireland': 'UK & Ireland', 'Iran, Islamic Republic of...':'Iran','Hong Kong (S.A.R.)':'Hong Kong','I do not wish to disclose my location':'Mysterious Location'})\ndft = dft.replace({'Computer science (software engineering, etc.)':\"Computer Sci\",'Engineering (non-computer focused)': \"Engineering\", 'Mathematics or statistics':'Math & Stats','A business discipline (accounting, economics, finance, etc.)':\"Buisness\",'Physics or astronomy':'Phy & Astronomy','Information technology, networking, or system administration':'IT & Networking','Medical or life sciences (biology, chemistry, medicine, etc.)':'Medical','Social sciences (anthropology, psychology, sociology, etc.)':\"Social Sci\",'Humanities (history, literature, philosophy, etc.)':'Humanities','Environmental science or geology':'Environmental Sci','I never declared a major':\"No Major\",'Fine arts or performing arts':'Fine Arts'})\n","d818ab62":"df['Q1'].value_counts()\/tot_count*100","cfc94c6f":"labels = 'Male', 'Prefer not to say', 'Female', 'Prefer to self-describe'\nsizes = [81.436774,1.425039, 16.807075, 0.331112]\ncolors = ['peachpuff', 'green', 'lightcoral', 'royalblue']\nexplode = (0, 0, 0.1, 0)  # explode 1st slice\nfont = {'weight':'normal','size'   : 10} \nplt.rc('font', **font)\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,autopct='%1.1f%%', shadow=True, startangle=140)\n \nplt.axis('equal')\nplt.show()","b0628270":"df11 = df[['Q3','Q1']][df[['Q3','Q1']].Q1 != 'Prefer not to say']\ndf11 = df11[df11.Q1 != 'Prefer to self-describe']\ndfGC = df11.groupby([\"Q3\", \"Q1\"]).size().reset_index()\ndfGC.columns = ['Countries', 'Female', 'Male']\nfor i in range(0,len(dfGC),2):\n    dfGC['Female'][i] = dfGC['Male'][i]\n    dfGC['Male'][i] = dfGC['Male'][i+1]\n\ndfGC = dfGC[dfGC.index % 2 != 1]\ndfGC['Total'] = dfGC['Female'] + dfGC['Male'] \ndfGCn = dfGC.sort_values(['Total'], ascending = False)[:20]\ndfGCn","331ec1e3":"dfGCn = dfGCn.melt('Countries', var_name='Gender',  value_name='Count')[:40]\nax = sns.barplot(x=\"Countries\", y=\"Count\", hue='Gender', data=dfGCn)\nplt.xlabel('Age', fontsize=25)\nplt.ylabel('Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=1.5)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","d40fee59":"df['Q2'].value_counts()\/tot_count*100","9af7f351":"ax = sns.barplot(x=df['Q2'].value_counts().index, y=df['Q2'].value_counts()\/tot_count*100)\nsns.set_style(\"white\")\nplt.xlabel('Age', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=0)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","571cb543":"df21 = df[['Q2','Q1']]\ndfGAP = df21.groupby([\"Q2\", \"Q1\"]).size().reset_index()\ndfGAP.columns = ['Age', 'Female', 'Male']\ndfGAP\nfor i in range(0,len(dfGAP),4):\n    dfGAP['Female'][i] = dfGAP['Male'][i]\n    dfGAP['Male'][i] = dfGAP['Male'][i+1]  \n    \ndfGAP = dfGAP[dfGAP.index % 4 == 0]\ndfGAP['Total'] = dfGAP['Female']+ dfGAP['Male']\ndfGAP['Female'] = dfGAP['Female']\/dfGAP['Total']*100\ndfGAP['Male'] = dfGAP['Male']\/dfGAP['Total']*100\ndfGAP","6fb01358":"sns.set(font_scale=1.5)\nax = dfGAP[['Age', 'Female', 'Male']].set_index('Age').plot(kind='bar', stacked=True)\nplt.xlabel('Age', fontsize= 25)\nplt.ylabel('Users', fontsize=25)\nplt.xticks(rotation=0)\nsns.set(rc={'figure.figsize':(20,12)})\n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","d84cdb33":"df['Q3'].value_counts()\/tot_count*100","d2d29d5e":"x = df['Q3'].value_counts().index\ny = df['Q3'].value_counts()\/tot_count*100\ndf3 = pd.DataFrame(list(zip(x,y)),columns=['Countries', '% Users'])\ndf3 = df3.drop(12)","e876ffa0":"sns.barplot(x = df3['Countries'], y = df3['% Users'])\nplt.xlabel('Countries', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=1.8)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","3604ebf9":"df['Q4'].value_counts()\/tot_count*100","798a6e2b":"x = df['Q4'].value_counts().index\ny = df['Q4'].value_counts()\/tot_count*100\ndf4 = pd.DataFrame(list(zip(x,y)),columns=['Countries', '% Users'])\ndf4","30e662c6":"labels = \"Master's\",\"No Education\",\"Bachelor's\",'Unknown',\"Doctoral\",\"Some degree but not Bachelor's\",'Professional'\nsizes = [45.496458, 0.972379, 29.686911, 1.445995,14.070162, 4.052978, 2.510583]\ncolors = ['peachpuff', 'green', 'lightcoral', 'royalblue','red','blue','lightyellow']\nexplode = (0, 0, 0.1, 0.1,0.1,0.1,0.1)  # explode 1st slice\n \n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,autopct='%1.1f%%', shadow=False, startangle=140)\n \nplt.axis('equal')\nplt.show()","428ccb30":"df41 = df[['Q4','Q1']]\ndfGE = df41.groupby([\"Q4\", \"Q1\"]).size().reset_index()\ndfGE.columns = ['Education', 'Female', 'Male']\nfor i in range(0,len(dfGE),4):\n    dfGE['Female'][i] = dfGE['Male'][i]\n    dfGE['Male'][i] = dfGE['Male'][i+1]    \ndfGE = dfGE[dfGE.index % 4 == 0]\ndfGE","3d42ba5c":"dfGE = dfGE.melt('Education', var_name='Gender',  value_name='Count')\nax = sns.barplot(x=\"Education\", y=\"Count\", hue='Gender', data=dfGE)\nplt.xlabel('Age', fontsize=25)\nplt.ylabel('Users', fontsize=25)\nplt.xticks(rotation=0)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=1.5)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","1946e506":"df41 = df[['Q4','Q1']]\ndfGEP = df41.groupby([\"Q4\", \"Q1\"]).size().reset_index()\ndfGEP.columns = ['Education', 'Female', 'Male']\nfor i in range(0,len(dfGEP),4):\n    dfGEP['Female'][i] = dfGEP['Male'][i]\n    dfGEP['Male'][i] = dfGEP['Male'][i+1]  \n    \ndfGEP = dfGEP[dfGEP.index % 4 == 0]\ndfGEP['Total'] = dfGEP['Female']+ dfGEP['Male']\ndfGEP['Female'] = dfGEP['Female']\/dfGEP['Total']*100\ndfGEP['Male'] = dfGEP['Male']\/dfGEP['Total']*100\ndfGEP","7c003d56":"sns.set(font_scale=1.5)\nax = dfGEP[['Education', 'Female', 'Male']].set_index('Education').plot(kind='bar', stacked=True)\nplt.xlabel('Age', fontsize= 25)\nplt.ylabel('Users', fontsize=25)\nplt.xticks(rotation=0)\nsns.set(rc={'figure.figsize':(20,12)})\n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","43990eae":"df['Q5'].value_counts()\/tot_count*100","b0fac0fe":"x = df['Q5'].value_counts().index\ny = df['Q5'].value_counts()\/tot_count*100\ndf5 = pd.DataFrame(list(zip(x,y)),columns=['Discipline', '% Users'])\ndf5 = df5.replace({'Computer science (software engineering, etc.)':\"Computer Sci\",'Engineering (non-computer focused)': \"Engineering\", 'Mathematics or statistics':'Math & Stats','A business discipline (accounting, economics, finance, etc.)':\"Buisness\",'Physics or astronomy':'Phy & Astronomy','Information technology, networking, or system administration':'IT & Networking','Medical or life sciences (biology, chemistry, medicine, etc.)':'Medical','Social sciences (anthropology, psychology, sociology, etc.)':\"Social Sci\",'Humanities (history, literature, philosophy, etc.)':'Humanities','Environmental science or geology':'Environmental Sci','I never declared a major':\"No Major\",'Fine arts or performing arts':'Fine Arts'})\ndf5","125429d7":"sns.barplot(x = df5['Discipline'], y = df5['% Users'])\nplt.xlabel('Discipline', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","919284ff":"df['Q6'].value_counts()\/tot_count*100","2b183b13":"ax = sns.barplot(x=df['Q6'].value_counts().index, y=df['Q6'].value_counts()\/tot_count*100)\nplt.xlabel('Designation', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","cf54421b":"df['Q7'].value_counts()\/tot_count*100","2674e909":"ax = sns.barplot(x=df['Q7'].value_counts().index, y=df['Q7'].value_counts()\/tot_count*100)\nplt.xlabel('Industry', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","7a959460":"df['Q8'].value_counts()\/tot_count*100","ec2b4234":"ax = sns.barplot(x=df['Q8'].value_counts().index, y=df['Q8'].value_counts()\/tot_count*100)\nplt.xlabel('Experience', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=0)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","2db7497e":"df['Q9'].value_counts()\/tot_count*100","4632d5ec":"ax = sns.barplot(x=df['Q9'].value_counts().index[1:], y=df['Q9'].value_counts()[1:]\/tot_count*100)\nplt.xlabel('Yearly Compensation (in $)', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","1a4bfa42":"df['Q10'].value_counts()\/tot_count*100","c3c59974":"x = df['Q10'].value_counts().index\ny = df['Q10'].value_counts()\/tot_count*100\ndf10 = pd.DataFrame(list(zip(x,y)),columns=['ML Use', '% Users'])\ndf10 = df10.replace({'We are exploring ML methods (and may one day put a model into production)':\"Exploring ML\",'No (we do not use ML methods)': \"Don't Use\", 'We recently started using ML methods (i.e., models in production for less than 2 years)':'Recently started using','I do not know':\"Don't know\",'We have well established ML methods (i.e., models in production for more than 2 years)':'Use well established models','We use ML methods for generating insights (but do not put working models into production)':'Generate Insights'})\ndf10","0a74da7d":"sns.barplot(x = df10['ML Use'], y = df10['% Users'])\nplt.xlabel('ML Use', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","49688027":"q11 = []\nfor i in range(14,21):\n    q11.append(dft.iloc[i].count()\/tot_count*100)\n    \nInd = ['Analyse and Influence','Build, Run models which make product better','Build, Run data used for storing,Analyzing,etc','Build Prototypes','Research','NOTA','Others']\ndf11 = pd.DataFrame(list(zip(Ind,q11)),columns=['Work Role', '% Users'])\ndf11 = df11.sort_values('% Users',ascending=False)\ndf11","617b7086":"ax = sns.barplot(x = df11['Work Role'], y = df11['% Users'])\nplt.xlabel('Work Role', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","1b55ece3":"q13 = []\nfor i in range(29,44):\n    q13.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Jupyter\/IPython','RStudio','PyCharm','Visual Studio Code','nteract','Atom','MATLAB','Visual Studio','Notepad++','Sublime Text','Vim','IntelliJ','Spyder','None','Other' ]\ndf13 = pd.DataFrame(list(zip(Ind,q13)),columns=['IDE', '% Users'])\ndf13 = df13.sort_values('% Users',ascending=False)\ndf13","77318917":"ax = sns.barplot(x = df13['IDE'], y = df13['% Users'])\nplt.xlabel('IDE', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","18a7699c":"q14 = []\nfor i in range(45,56):\n    q14.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Kaggle Kernel','Google Colab','Azure Notebook','Domino Datalab','Google Cloud Datalab','Paperspace','Floydhub','Crestle','JupyterHub\/Binder','None','Other']\ndf14 = pd.DataFrame(list(zip(Ind,q14)),columns=['Notebooks', '% Users'])\ndf14 = df14.sort_values('% Users',ascending=False)\ndf14","4f21b47f":"sns.barplot(x = df14['Notebooks'], y = df14['% Users'])\nplt.xlabel('Notebooks', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","a9503416":"q15 = []\nfor i in range(57,64):\n    q15.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Google Cloud Platform','Amazon Web Services','Microsoft Azure','IBM Cloud','Alibaba Cloud','Not used any Cloud Provider','Other']\ndf15 = pd.DataFrame(list(zip(Ind,q15)),columns=['Cloud Provider', '% Users'])\ndf15 = df15.sort_values('% Users',ascending=False)\ndf15","3d5e536b":"sns.barplot(x = df15['Cloud Provider'], y = df15['% Users'])\nplt.xlabel('Cloud Provider', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","2aff98d8":"q16 = []\nfor i in range(65,83):\n    q16.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Python','R','SQL','Bash','Java','Javascript\/Typescript','Visual Basic\/VBA','C\/C++','MATLAB','Scala','Julia','Go','C#\/.NET','PHP','Ruby','SAS\/STATA','None','Other']\ndf16 = pd.DataFrame(list(zip(Ind,q16)),columns=['Language', '% Users'])\ndf16 = df16.sort_values('% Users',ascending=False)\ndf16","80f6f5ff":"sns.barplot(x = df16['Language'], y = df16['% Users'])\nplt.xlabel('Language', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","ddcc0111":"sns.barplot(x = df16['Language'], y = df16['% Users'])\nplt.xlabel('Language', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","ae5cf3c1":"count = df['Q17'].count()\ndf['Q17'].value_counts()\/count*100","c21ada38":"ax = sns.barplot(x=df['Q17'].value_counts().index, y=df['Q17'].value_counts()\/count*100)\nplt.xlabel('Favorite Language', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","0446fc3b":"count = df['Q18'].count()\ndf['Q18'].value_counts()\/count*100","259d5ef7":"ax = sns.barplot(x=df['Q18'].value_counts().index, y=df['Q18'].value_counts()\/count*100)\nplt.xlabel('Recommended Language', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","03bc0702":"df['Q23'].value_counts()\/tot_count*100","819ad539":"ax = sns.barplot(x=df['Q23'].value_counts().index, y=df['Q23'].value_counts()\/count*100)\nplt.xlabel('Coding Time', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","ed3449c4":"q19 = []\nfor i in range(88,107):\n    q19.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Scikit-Learn','TensorFlow','Keras','PyTorch','Spark MLlib','H2O','Fastai','Mxnet','Caret','Xgboost','mlr','Prophet','randomForest','lightgbm','catboost','CNTK','Caffe','None','Other']\ndf19 = pd.DataFrame(list(zip(Ind,q19)),columns=['Frameworks', '% Users'])\ndf19 = df19.sort_values('% Users',ascending=False)\ndf19","6ceec3f6":"sns.barplot(x = df19['Frameworks'], y = df19['% Users'])\nplt.xlabel('Frameworks', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","3b941d1d":"count = df['Q20'].count()\ndf['Q20'].value_counts()\/count*100","8a6c55da":"ax = sns.barplot(x=df['Q20'].value_counts().index, y=df['Q20'].value_counts()\/count*100)\nplt.xlabel('Most used Framework', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","6aa02f73":"q21 = []\nfor i in range(110,123):\n    q21.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['ggplot2','Matplotlib','Altair','Shiny','D3','Plotly','Bokeh','Seaborn','Geopltlib','Leaflet','Lattice','None','Other']\ndf21 = pd.DataFrame(list(zip(Ind,q21)),columns=['Visualisation Library', '% Users'])\ndf21 = df21.sort_values('% Users',ascending=False)\ndf21","ea2c07cc":"sns.barplot(x = df21['Visualisation Library'], y = df21['% Users'])\nplt.xlabel('Visualisation Library', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","13c3cab3":"count = df['Q22'].count()\ndf['Q22'].value_counts()\/count*100","e9351709":"ax = sns.barplot(x=df['Q22'].value_counts().index, y=df['Q22'].value_counts()\/count*100)\nplt.xlabel('Most used Visualisation Library', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","7e2d59b1":"df['Q25'].value_counts()\/count*100","4456ca7f":"\nax = sns.barplot(x=df['Q25'].value_counts().index, y=df['Q25'].value_counts()\/count*100)\nplt.xlabel('Used ML (Years)', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","c5a61412":"q35 = []\nq35.append(df['Q35_Part_1'].astype('float').dropna().mean())\nq35.append(df['Q35_Part_2'].astype('float').dropna().mean())\nq35.append(df['Q35_Part_3'].astype('float').dropna().mean())\nq35.append(df['Q35_Part_4'].astype('float').dropna().mean())\nq35.append(df['Q35_Part_5'].astype('float').dropna().mean())\nq35.append(df['Q35_Part_6'].astype('float').dropna().mean())\nInd = ['Self-Taught','Online Courses','Work','University','Kaggle Competitions','Other']\n\ndf35 = pd.DataFrame(list(zip(Ind,q35)),columns=['How much spent on what?', '% Users'])\ndf35","e492a8d3":"labels = Ind\nsizes = q35\ncolors = ['peachpuff', 'green', 'lightcoral', 'royalblue','lightgreen','red']\nexplode = (0.1, 0, 0, 0,0,0)  # explode 1st slice\nfont = {'weight':'normal','size'   : 25} \nplt.rc('font', **font)\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,autopct='%1.1f%%', shadow=True, startangle=140)\n \nplt.axis('equal')\nplt.show()","83dec3ff":"df['Q24'].value_counts()\/tot_count*100","8efe0649":"ax = sns.barplot(x=df['Q24'].value_counts().index, y=df['Q24'].value_counts()\/count*100)\nplt.xlabel('Time to Analyse Data', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","bca741d0":"df['Q26'].value_counts()\/count*100","6578971e":"ax = sns.barplot(x=df['Q26'].value_counts().index, y=df['Q26'].value_counts()\/count*100)\nplt.xlabel('Are you a data Scientist?', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","9321d994":"q27 = []\nfor i in range(130,150):\n    q27.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['AWS Elastic Compute Cloud','Google Compute Engine','Elastic Beanstalk','Google App','Google Kubernates','AWS Lambda','Google Cloud Functions','AWS Batch','Azure Virtual Machines','Azure Container Service','Azure Functions','Azure Event Grid','Azure Batch','Azure Kubernates Service','IBM Cloud Virtual Server','IBM Cloud Container Registry','IBM Cloud Kubernates Service','IBM Cloud Foundry','None','Other']\ndf27 = pd.DataFrame(list(zip(Ind,q27)),columns=['Cloud Computing Products', '% Users'])\ndf27 = df27.sort_values('% Users',ascending=False)\ndf27","68a605c6":"sns.barplot(x = df27['Cloud Computing Products'], y = df27['% Users'])\nplt.xlabel('Cloud Computing Products', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","c52452f2":"q28 = []\nfor i in range(151,194):\n    q28.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Amazon Transcribe','Google Cloud Specch-to-text API','Amazon Rekognition','Google Cloud Vision API','Amazon Comprehend','Google Cloud Natural Language API','Amazon Translate','Google Translation API','Amazon Lex','Google Dialogflow Enterprose Edition','Amazon Rekognition Video','Google Cloud Video Intelligence API','Google Cloud AutoML','Amazon Sage Maker','Google Cloud ML Engine','DataRobot','H2O Driverless AI','Domino Datalab','SAS','Dataiku','RapidMiner','Instabase','Algorithmia','Dataversity','Cloudera','Azure ML Studio','Azure ML Workbench','Azure Cortana Intelligence Suite','Azure Bing Speech API','Azure Speaker Recognition API','Azure Computer Vision API','Azure Face API','Azure Video API','IBM Watson Studio','IBM Watson Knowledge Catalog','IBM Watson Assistant','IBM Watson Discovery','IBM Text to Speech','IBM Watson Visual Recognition','IBM Watson ML','Azure Cognitive Services','None','Other']\ndf28 = pd.DataFrame(list(zip(Ind,q28)),columns=['ML Products', '% Users'])\ndf28 = df28.sort_values('% Users',ascending=False)\ndf28","93b49245":"sns.barplot(x = df28['ML Products'][1:], y = df28['% Users'][1:])\nplt.xlabel('ML Products', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","c534f899":"q29 = []\nfor i in range(195,223):\n    q29.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['AWS RD Sevice','AWS Aurora','Google CLoud SQL','Google CLoud Spanner','AWS DynamoDB','Google Cloud Datastore','Google Cloud Bigtable','AWS SimpleDB','Microsoft SQL Server','MySQL','PostgresSQL','SQLite','Oracle Database','Ingres','Microsoft Access','NexusDB','SAP IQ','Google Fusion Tables','Azure Database for MySQL','Azure Cosmos DB','Azure SQL Database','PostgresSQL','IBM Cloud Compose','IBM Cloud Compose SQL','IBM Cloud Compose PostgresSQL','IBM Cloud Db2','None','Other']\ndf29 = pd.DataFrame(list(zip(Ind,q29)),columns=['RDatabase Products', '% Users'])\ndf29 = df29.sort_values('% Users',ascending=False)\ndf29\n","fe817d24":"sns.barplot(x = df29['RDatabase Products'], y = df29['% Users'])\nplt.xlabel('RDatabase Products', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","d5a1717f":"q30 = []\nfor i in range(224,250):\n    q30.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['AWS Elastic MapReduce','AWS Batch','Google Cloud Dataproc','Google Cloud Dataflow','Google Cloud Dataprep','AWS Kinesis','Google Cloud Pub \/ Sub','AWS Athena','AWS Redshift','Google BigQuery','Teradata','Microsoft Analysis Services','Oracle Exadata','Oracle Warehouse Builder','SAP IQ','Snowflake','Databricks','Azure SQL Data Warehouse','Azure HDInsight','Azure Stream Analytics','IBM Infosphere DatStorage','IBM Cloud Analytics','IBM Cloud Streaming Analytics','None','Other']\ndf30 = pd.DataFrame(list(zip(Ind,q30)),columns=['Big Data & Analytics Products', '% Users'])\ndf30 = df30.sort_values('% Users',ascending=False)\ndf30","4e18bd95":"sns.barplot(x = df30['Big Data & Analytics Products'], y = df30['% Users'])\nplt.xlabel('Big Data & Analytics Products', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","fe9f1847":"q31 = []\nfor i in range(250,263):\n    q31.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Audio','Categorical','Genetic','Geospatial','Image','Numerical','Sensor','Tabular','Text','Time Series','Video','Other']\ndf31 = pd.DataFrame(list(zip(Ind,q31)),columns=['Type of Data', '% Users'])\ndf31 = df31.sort_values('% Users',ascending=False)\ndf31","586e4407":"sns.barplot(x = df31['Type of Data'], y = df31['% Users'])\nplt.xlabel('Type of Data', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","bb1466fe":"32","8b9d4a47":"q33 = []\nfor i in range(265,277):\n    q33.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Government Sites','University Research Group','Non-profit Research Groups','Data Aggregation Platform','Collect Own data','Publicly released Data','Google Search','Google Dataset Search','Github','Do not work with public data','Other']\ndf33 = pd.DataFrame(list(zip(Ind,q33)),columns=['Where do you find Data?', '% Users'])\ndf33 = df33.sort_values('% Users',ascending=False)\ndf33","7c316d2d":"sns.barplot(x = df33['Where do you find Data?'], y = df33['% Users'])\nplt.xlabel('Where do you find Data?', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","201c7aca":"fig = plt.figure()\nax1 = fig.add_subplot(211)\nax2 = fig.add_subplot(212)\n\nax1 = sns.distplot(df['Q34_Part_1'].astype('float').dropna(),kde=False, norm_hist=False ,bins=28,ax = ax1)\nax1.set_yticklabels(['{:,.2%}'.format(x\/df['Q34_Part_1'].astype('float').dropna().count()) for x in ax1.get_yticks()])\nax1.set(xlabel='Gathering Data')\nax2 = sns.distplot(df['Q34_Part_2'].astype('float').dropna(),kde=False, norm_hist=False ,bins=28,ax = ax2)\nax2.set_yticklabels(['{:,.2%}'.format(x\/df['Q34_Part_2'].astype('float').dropna().count()) for x in ax2.get_yticks()])\nax2.set(xlabel='Cleaning Data')","f7a7caff":"fig = plt.figure()\nax1 = fig.add_subplot(211)\nax2 = fig.add_subplot(212)\n\nax1 = sns.distplot(df['Q34_Part_3'].astype('float').dropna(),kde=False, norm_hist=False ,bins=28,ax = ax1)\nax1.set_yticklabels(['{:,.2%}'.format(x\/df['Q34_Part_2'].astype('float').dropna().count()) for x in ax1.get_yticks()])\nax1.set(xlabel='Visualizing Data')\nax2 = sns.distplot(df['Q34_Part_4'].astype('float').dropna(),kde=False, norm_hist=False ,bins=28,ax = ax2)\nax2.set_yticklabels(['{:,.2%}'.format(x\/df['Q34_Part_2'].astype('float').dropna().count()) for x in ax2.get_yticks()])\nax2.set(xlabel='Model Selction')","16137b32":"fig = plt.figure()\nax1 = fig.add_subplot(211)\nax2 = fig.add_subplot(212)\n\nax1 = sns.distplot(df['Q34_Part_5'].astype('float').dropna(),kde=False, norm_hist=False ,bins=28,ax = ax1)\nax1.set_yticklabels(['{:,.2%}'.format(x\/df['Q34_Part_2'].astype('float').dropna().count()) for x in ax1.get_yticks()])\nax1.set(xlabel='Model in Production')\nax2 = sns.distplot(df['Q34_Part_6'].astype('float').dropna(),kde=False, norm_hist=False ,bins=28,ax = ax2)\n#ax2.set_yticklabels(['{:,.2%}'.format(x\/df['Q34_Part_2'].astype('float').dropna().count()) for x in ax2.get_yticks()])\nax2.set(xlabel='Find Insights & Communicate with Stakeholders')","0ed72db6":"q36 = []\nfor i in range(291,305):\n    q36.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Udacity','Coursera','edX','DataCamp','DataQuest','Kaggle Learn','Fast.AI','Google Developers','Udemy','TheSchool.AI','Online University Courses','None','Other']\ndf36= pd.DataFrame(list(zip(Ind,q36)),columns=['Data Science Courses', '% Users'])\ndf36 = df36.sort_values('% Users',ascending=False)\ndf36","3189354d":"sns.barplot(x = df36['Data Science Courses'], y = df36['% Users'])\nplt.xlabel('Data Science Courses', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","7730de96":"37","20db84e0":"q38 = []\nfor i in range(307,330):\n    q38.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Twitter','Hacker News','r\/Machine Learning','Kaggle Forums','Fastai Forums','Siraj Raval YouTube Channel','Data Tau News Aggregator','Linear Digressions Podcast','Cloud AI Adventures (YouTube)','FiveThirtyEight.com','ArXiv & Preprints','Journal Publications','FastML Blog','KDnuggets Blog','OReilly Data Newsletter','Partially Derivative Podcast','The Data Skeptic Podcast','Medium Blog Posts','Towards Data Science Blog','Analytics Vidhya Blog','None\/I do not know','Other']\ndf38= pd.DataFrame(list(zip(Ind,q38)),columns=['Favorite Sources', '% Users'])\ndf38 = df38.sort_values('% Users',ascending=False)\ndf38","015488ce":"sns.barplot(x = df38['Favorite Sources'], y = df38['% Users'])\nplt.xlabel('Favorite Sources', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","1146dbfd":"df391 = df['Q39_Part_1'].value_counts()\/df['Q39_Part_1'].count()*100\ndf391","30425584":"labels = ['Slightly better','Much better','Neither better nor worse','Slightly worse','No opinion; I do not know','Much worse']\nsizes = df391\ncolors = ['peachpuff', 'green', 'lightcoral', 'royalblue','lightgreen','red']\nexplode = (0.1, 0, 0, 0,0,0)  # explode 1st slice\nfont = {'weight':'normal','size'   : 25} \nplt.rc('font', **font)\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,autopct='%1.1f%%', shadow=True, startangle=140)\n \nplt.axis('equal')\nplt.show()","b542d86c":"df392 = df['Q39_Part_2'].value_counts()\/df['Q39_Part_2'].count()*100\ndf392","2b285c31":"labels = ['No opinion; I do not know','Slightly better','Neither better nor worse','Much better','Slightly worse','Much worse']\nsizes = df392\ncolors = ['peachpuff', 'green', 'lightcoral', 'royalblue','lightgreen','red']\nexplode = (0.1, 0, 0, 0,0,0)  # explode 1st slice\nfont = {'weight':'normal','size'   : 25} \nplt.rc('font', **font)\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,autopct='%1.1f%%', shadow=True, startangle=140)\n \nplt.axis('equal')\nplt.show()","b727ec3b":"q34 = []\nq34.append(df['Q34_Part_1'].astype('float').dropna().mean())\nq34.append(df['Q34_Part_2'].astype('float').dropna().mean())\nq34.append(df['Q34_Part_3'].astype('float').dropna().mean())\nq34.append(df['Q34_Part_4'].astype('float').dropna().mean())\nq34.append(df['Q34_Part_5'].astype('float').dropna().mean())\nq34.append(df['Q34_Part_6'].astype('float').dropna().mean())\nInd = ['Gathering Data','Cleaning Data','Visualizing Data','Model Selction','Model in Production','Find Insights & Communicate with Stakeholders']\n\ndf34 = pd.DataFrame(list(zip(Ind,q34)),columns=['How much spent on what?', '% Users'])\ndf34","269dbff3":"labels = Ind\nsizes = q34\ncolors = ['peachpuff', 'green', 'lightcoral', 'royalblue','lightgreen','red']\nexplode = (0, 0, 0.1, 0,0,0)  # explode 1st slice\nfont = {'weight':'normal','size'   : 25} \nplt.rc('font', **font)\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,autopct='%1.1f%%', shadow=True, startangle=140)\n \nplt.axis('equal')\nplt.show()","4091333a":"df40 = df['Q40'].value_counts()\/df['Q40'].count()*100\ndf40","429e93b7":"labels = ['Independent projects are much more important than academic achievements ','Independent projects are slightly more important than academic achievements','Independent projects are equally important as academic achievements','No opinion; I do not know','Independent projects are slightly less important than academic achievements','Independent projects are much less important than academic achievements']\nsizes = df40\ncolors = ['peachpuff', 'green', 'lightcoral', 'royalblue','lightgreen','red']\nexplode = (0.1, 0, 0, 0,0,0)  # explode 1st slice\nfont = {'weight':'normal','size'   : 25} \nplt.rc('font', **font)\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,autopct='%1.1f%%', shadow=True, startangle=140)\n \nplt.axis('equal')\nplt.show()","d52f5e3f":"df411 = df['Q41_Part_1'].value_counts()\/df['Q41_Part_1'].count()*100\ndf411","43b61cd7":"labels = ['Very important','Slightly important','No opinion; I do not know','Not at all important']\nsizes = df411\ncolors = ['peachpuff','royalblue','lightgreen','red']\nexplode = (0, 0.1, 0,0)  # explode 1st slice\nfont = {'weight':'normal','size'   : 25} \nplt.rc('font', **font)\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,autopct='%1.1f%%', shadow=True, startangle=140)\n \nplt.axis('equal')\nplt.show()","c04ad51f":"df412 = df['Q41_Part_2'].value_counts()\/df['Q41_Part_2'].count()*100\ndf412","f5d95541":"labels = ['Very important','Slightly important','No opinion; I do not know','Not at all important']\nsizes = df412\ncolors = ['peachpuff','royalblue','lightgreen','red']\nexplode = (0, 0.1, 0,0)  # explode 1st slice\nfont = {'weight':'normal','size'   : 25} \nplt.rc('font', **font)\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,autopct='%1.1f%%', shadow=True, startangle=140)\n \nplt.axis('equal')\nplt.show()","4c865f8f":"df413 = df['Q41_Part_3'].value_counts()\/df['Q41_Part_3'].count()*100\ndf413","130796bf":"labels = ['Very important','Slightly important','No opinion; I do not know','Not at all important']\nsizes = df413\ncolors = ['peachpuff','royalblue','lightgreen','red']\nexplode = (0, 0.1, 0,0)  # explode 1st slice\nfont = {'weight':'normal','size'   : 25} \nplt.rc('font', **font)\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,autopct='%1.1f%%', shadow=True, startangle=140)\n \nplt.axis('equal')\nplt.show()","1c240132":"q42 = []\nfor i in range(336,341):\n    q42.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Revenue \/ Buisness Goals','Accuracy Metrics','Unfair Bias Metrics','Not Applicable','Other']\ndf42= pd.DataFrame(list(zip(Ind,q42)),columns=['How to measure Success?', '% Users'])\ndf42 = df42.sort_values('% Users',ascending=False)\ndf42","3d68e6b7":"sns.barplot(x = df42['How to measure Success?'], y = df42['% Users'])\nplt.xlabel('How to measure Success?', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","a786f9f8":"df['Q43'].value_counts()","67845280":"ax = sns.barplot(x=df['Q43'].value_counts().index, y=df['Q43'].value_counts()\/tot_count*100)\nplt.xlabel('Designation', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","ee749647":"q44 = []\nfor i in range(344,350):\n    q44.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Lack Of Communication','Identifying Unfairly Targeted Groups','Collecting Data on Unfairly Targeted Groups','Identifying and selecting correct Eval. metrics','No difficulty','Never performed this task']\ndf44= pd.DataFrame(list(zip(Ind,q44)),columns=['What Difficulty you face?', '% Users'])\ndf44 = df44.sort_values('% Users',ascending=False)\ndf44","d69f38e9":"sns.barplot(x = df44['What Difficulty you face?'], y = df44['% Users'])\nplt.xlabel('What Difficulty you face?', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","e0281ab0":"q45 = []\nfor i in range(349,356):\n    q45.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Very Imp.(Production Ready Models)','All Models','To determine models worth','Check if model produces required Insights','Initially Exploring new model or dataset','I do not explore & interpret models']\ndf45 = pd.DataFrame(list(zip(Ind,q45)),columns=['When do you explore model predictions?', '% Users'])\ndf45 = df45.sort_values('% Users',ascending=False)\ndf45","f8ab8337":"sns.barplot(x =  df45['When do you explore model predictions?'], y = df45['% Users'])\nplt.xlabel('When do you explore model predictions?', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","b9dd291f":"46","2d587b70":"q47 = []\nfor i in range(356,372):\n    q47.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Examine Individual Model Coefficient','Examine feature correlations','Examine feature importances','Plot decision boundaries','Create partial dependence plots','Dimensionality reduction techniques','Attention mapping\/saliency mapping','Plot predicted vs. actual results','Print out a decision tree','Sensitivity analysis\/perturbation importance','LIME functions','ELI5 functions','SHAP functions','None','Other']\ndf47 = pd.DataFrame(list(zip(Ind,q47)),columns=['When do you explore model predictions?', '% Users'])\ndf47 = df47.sort_values('% Users',ascending=False)\ndf47","0d59662d":"sns.barplot(x =  df47['When do you explore model predictions?'], y = df47['% Users'])\nplt.xlabel('When do you explore model predictions?', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","f85c3551":"q49 = []\nfor i in range(373,386):\n    q49.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Share Code on Github \/ Similar Code Repo','Share Code & Data on Github \/ Similar Code Repo','Share Code, Data & Environment on Hosted Service(Kaggle)','Share Code, Data & Environment using Containers(Docker)','Share Code, Data & Environment on VirtualMachine','Make sure code is well documented','Make sure code is human readable','Define all random seeds','Define relative rather absolute paths','Include file regarding all Dependencies','None\/ I do not make my work easy for others to reproduce',' Other']\ndf49 = pd.DataFrame(list(zip(Ind,q49)),columns=['What you do to make your work easy to reproduce?', '% Users'])\ndf49 = df49.sort_values('% Users',ascending=False)\ndf49","0ae94c94":"sns.barplot(x =  df49['What you do to make your work easy to reproduce?'], y = df49['% Users'])\nplt.xlabel('What you do to make your work easy to reproduce?', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","0d0bd132":"q50 = []\nfor i in range(386,395):\n    q50.append(dft.iloc[i].count()\/tot_count*100)\n\nInd = ['Too Expensive','Too Time-consuming','Too much Tech. Knowledge required','Afraid of other not giving due credit','Not enough Incentives to share my work','Never considered making my work easier to reproduce','None',' Other']\ndf50 = pd.DataFrame(list(zip(Ind,q50)),columns=['What prevents you to make work easier to reuse and reproduce?', '% Users'])\ndf50 = df50.sort_values('% Users',ascending=False)\ndf50","da47836c":"sns.barplot(x =  df50['What prevents you to make work easier to reuse and reproduce?'], y = df50['% Users'])\nplt.xlabel('What prevents you to make work easier to reuse and reproduce?', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 25\nax.yaxis.labelpad = 15","21c9245c":"###############################################################\n###############################################################","a764c15a":"<h1 class=\"title\">\n        Index\n    <\/h1>\n    <div id=\"TOC\">\n        <ul>\n            <li>\n                <a href=\"#introduction\">Gender , Nationality & Education<\/a>\n            <\/li>\n            <li>\n                <a href=\"#first-attempts\">Industry, Job Role, Expereince & Compensation<\/a>\n            <\/li>\n            <li>\n                <a href=\"#1-5\">Work Activities<\/a>\n            <\/li>\n            <li>\n                <a href=\"#6-10\">Tools, Languages, Notebooks...<\/a>\n            <\/li>\n            <li>\n                <a href=\"#11-15\">ML & Visualisation<\/a>\n            <\/li>\n            <li>\n                <a href=\"#16-20\">Products used<\/a>\n            <\/li>\n            <li>\n                <a href=\"#21-25\">Data & ...<\/a>\n            <\/li>\n            <li>\n                <a href=\"#31-35\">Online Plaforms, Media Oulets & More...<\/a>\n            <\/li>\n            <li>\n                <a href=\"#36-40\">Difficulties faced<\/a>\n            <\/li>\n            <li>\n                <a href=\"#41-45\">What Influences Decisions<\/a>\n            <\/li>\n            <li>\n                <a href=\"#46-50\">46-50<\/a>\n            <\/li>\n            <li>\n                <a href=\"#Women Kagglers\">Women Kagglers<\/a>\n            <\/li>\n            <li>\n                <a href=\"#Increase your Compensation\">Increase your Compensation<\/a>\n            <\/li>\n        <\/ul>\n    <\/div>\n    ","f7234ff1":"<div id=\"introduction\">\n        <h2>\n            <a href=\"#TOC\">Gender , Nationality & Education<\/a>\n        <\/h2>\n    <\/div>\nAs most of the responses suggest, Data Science field is currently flooded with males **( ~ 81 %)**  \nAlmost every **1 of 2** respondents have a Master's degree.   \n**30%** have Bachelor's degree & **~14%** have completed their PhD  \nHighest number of people are present in Computer Science field (**~40%**) by a long margin.  \nSecond is Engineering *(non - Computer Science)* with **~16%** respondents  \nMost of the people are below 30 (**~60 %**). And the curve tapers off towards higher age groups. This suggests young people are pulled by better future prospects. Also a pretty high percentage of teens (**~13%**) currently in college are attracted towards data science.","6ab70934":"# **Let's Code**\n","ffd0ba7f":"# Some adjustments\n\nChanged some values to get better visual information\n           \n","36ca05dd":"#################################################################\n#################################################################\n#################################################################","8c5d1faa":"# **Intro**\n\nThis is just the start!! We have scratched the surface of this huge dataset. This project would be continuously updated :)     \nThe purpose of this report is to visualise the hidden insights in the vast survey . I will extensively add new angles and graphs rigorously .  Look out for the space below!!   \nI would sincerely request you to hit the votes button if you like what I am creating. It helps in a great way!! Thank you & Enjoy :) \n","519d88cd":"<div id=\"first-attempts\">\n        <h2>\n            <a href=\"#TOC\">Industry, Job Role, Expereince & Compensation<\/a>\n        <\/h2>\n    <\/div>\n\nThere is a wide array of job profiles where Data Scientists work. However, most of responses come from students, which shows a heightened sense of attractive pull for the youth.   \n**Data Scientist** and **Software Engineer** are 2 leading profiles, followed by **Data Analyst** and **Research Scientist**.  \nAlthough many Industries are using Data Science for better results, it's penetration is not much visible in various Industries as extremely few people are working in fields expect Technology(**~24%**) and Academics(**~12%**)  \nHigh amount of respondents have worked for less than **3** years (**~52%**).     \nThere is a dearth of experienced Data Scientist - less than **12%** people with experience of more **10** years   \nThe Inexperience of respondents is clearly visible in the Yearly Compensation as every **1 in 5** earns **less than 10000 $.**   \nHowever majority of these people may be students who are still in colleges. We will further explore Experience with Compensation very soon.","44d5b8c7":"# **Which IDE you use?**\n**Jupyter \/ IPython notebooks** are fan favorite here, used by almost **60%** of users.   \n**RStudio** comes second on **36%** closely followed by **Notepad++** at **33%**   \nShockingly **32%** people **do not use** any Notebook.  \n**Kaggle Kernel** is used by almost ** 25%** of users.  **JupyterHub\/Binder** comes second on **20%.**    \n**AWS** is used by **1 in every 3** users.  Again we can see** 30%** users **do not use** any cloud platform.    \n**GCP** comes second on **20%**.   \n**Python** emerges as a clear favorite with a whooping **66%** fanbase.  \n**SQL** comes a distant second on **35%** with **R** slipping down further at **28%**.    \n**C\/C++ (18%)**, **Java(16%)**, **Javascript(14%)**, **Bash(11.4%)** and **MATLAB(11%)** are notable mentions.    \nNot surprising enough, **Python** is favorite language **54%** votes.         \nHowever, **R** pips **SQL** to come second on **14%** with **SQL** claiming the third spot at **8%**.    \nBut **Python** recommended by **every 3 out of 4** people voting for it.     \n**R** emerges a clear second on **12.5%** with **SQL** at a meagre **5%**.    ","88ded8de":"# DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD","f29e8ab7":"# DESWS%","7776fc32":"# **Frameworks**\n**Scikit-Learn** is extremely popular used by **every other** Data Scientist.     \n**TensorFlow** is prevalent as well with **42%** votes and **Keras** has **34%**.     votes.   \n**randomForest(25%)**, **Xgboost(23%)**, **Pytorch(16%)** notable mentions    \n  \n**Scikit-Learn** as expected comes 1st with**47%** votes.    \n**TensorFlow** has **15%** votes and **Keras** gets **13%**    votes.   \n   \nThis was rather interesting chart. While only **28%** people used **R** compared to **Python's** **65%**. ggplot2 has risen up like a true star. It showed ggplot2's aesthetics have even python fans attracted towards it.    \n**Matplotlib**  comes 1st with **56%** votes.    \n**Seaborn** grabs second place with **32.59%** votes while **ggplot2** by a small margin is pushed to 3rd spot with **32.49%**  votes.   \n**Matplotlib** is extremely popular used by **every other** Data Scientist.     \n**ggplot2** effortlessly moves past Seaborn with **24%** votes while **Seaborn** has **11%** votes.   \n","659a8c0e":"# **What is ML used for?**\nThere is not much variance in reponse here, still most of the people are Exploring ML and where it can be used to get better results and insights.  \nAlso about **~31%** respondents do not use or know about ML. Still a lot to catch on.\nMost of the people **Analyse results and Influence Business decisions** (**~40%**), second most important role being **Building Prototypes** (**~30%**).   \nEvery **1 in 5** Data Scientist is **Researching** better models and solutions to implement in respective fields"}}