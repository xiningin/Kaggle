{"cell_type":{"692ba47f":"code","cec1cd74":"code","7ba3ddd1":"code","61c3bd76":"code","27aa55a2":"code","a5add559":"code","df855dbd":"code","0f5b10f6":"code","a4851686":"code","17001d80":"code","a8c6fbdd":"code","06165e00":"code","db32dcad":"code","a1cb5f0d":"code","07ee7a9c":"code","3b138c8a":"code","fe6cdb69":"code","3b624594":"code","a75125cf":"code","fb0e60bb":"code","1c81e7b4":"code","a3aa5019":"code","3ccece23":"code","d69c0b6e":"code","66cafa88":"code","32a22949":"code","84d4798d":"markdown","e414ecf7":"markdown","7245d614":"markdown","46195abe":"markdown","f7ab421a":"markdown","b3a17db7":"markdown","f0045466":"markdown"},"source":{"692ba47f":"from IPython.display import Image\nImage(url='https:\/\/images.everydayhealth.com\/images\/heart-health\/heart-failure\/10-essential-facts-about-heart-failure-1440x810.jpg?w=1110')","cec1cd74":"# Import Libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.style.use('fivethirtyeight')\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","7ba3ddd1":"import os\nfor dirname , _ , filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","61c3bd76":"# Read file\npath = '\/kaggle\/input\/heart-failure-prediction\/heart.csv'\ndata = pd.read_csv(path)\ndata.head()","27aa55a2":"# Describe Numerical Data\ndata.describe()","a5add559":"# Describe Categorical Data\ndata.describe(include='O')","df855dbd":"# Check Nulls\ndata.info()","0f5b10f6":"# Ages\nsns.histplot(data=data,x='Age')","a4851686":"# Sex\nsns.histplot(data=data,x='Sex')","17001d80":"data['Sex'].value_counts()","a8c6fbdd":"# Let's see numerical columns\nfig,ax = plt.subplots(2,2,figsize=(12,12))\nplt.subplot(2,2,1)\nsns.histplot(data=data,x='RestingBP',hue='Sex')\nplt.subplot(2,2,2)\nsns.histplot(data=data,x='Cholesterol',hue='Sex')\nplt.subplot(2,2,3)\nsns.histplot(data=data,x='FastingBS',hue='Sex')\nplt.subplot(2,2,4)\nsns.histplot(data=data,x='MaxHR',hue='Sex')\nplt.show()","06165e00":"# Let's see other Categorical columns\nfig,ax = plt.subplots(2,2,figsize=(12,12))\nplt.subplot(2,2,1)\nsns.histplot(data=data,x='ChestPainType',hue='Sex')\nplt.subplot(2,2,2)\nsns.histplot(data=data,x='RestingECG',hue='Sex')\nplt.subplot(2,2,3)\nsns.histplot(data=data,x='ExerciseAngina',hue='Sex')\nplt.subplot(2,2,4)\nsns.histplot(data=data,x='ST_Slope',hue='Sex')\nplt.show()","db32dcad":"# Let's See Output\ndata['HeartDisease'].value_counts()","a1cb5f0d":"# Show Uniques values in categorical columns To Convert it by LabelEncoder\nprint(\"Sex\",data['Sex'].unique())\nprint(\"ChestPainType\",data['ChestPainType'].unique())\nprint(\"RestingECG\",data['RestingECG'].unique())\nprint(\"ExerciseAngina\",data['ExerciseAngina'].unique())\nprint(\"ST_Slope\",data['ST_Slope'].unique())","07ee7a9c":"from sklearn.preprocessing import LabelEncoder\nLB = LabelEncoder()\ndata['Sex'] = LB.fit_transform(data['Sex'])\ndata['ChestPainType'] = LB.fit_transform(data['ChestPainType'])\ndata['RestingECG'] = LB.fit_transform(data['RestingECG'])\ndata['ExerciseAngina'] = LB.fit_transform(data['ExerciseAngina'])\ndata['ST_Slope'] = LB.fit_transform(data['ST_Slope'])","3b138c8a":"data.head()","fe6cdb69":"# Split our Data Into X,y\nX = data.drop(['HeartDisease'],axis=1)\ny = data['HeartDisease']","3b624594":"# balance our data if needed\nfrom imblearn.over_sampling import SMOTE\nms=SMOTE(random_state=1)\nX_balanced , y_balanced = ms.fit_resample(X,y)","a75125cf":"data.head()","fb0e60bb":"data['HeartDisease'].value_counts()","1c81e7b4":"# Train Test Split\nfrom sklearn.model_selection import train_test_split\n\n# X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=2)\nX_train,X_test,y_train,y_test = train_test_split(X_balanced,y_balanced,test_size=0.2,random_state=2)\n\nprint(\"X Train Shape :\",X_train.shape)\nprint(\"y Train Shape :\",y_train.shape)\nprint(\"X Test Shape :\",X_test.shape)\nprint(\"y Test Shape :\",y_test.shape)","a3aa5019":"# Scale the data\nfrom sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler(copy=True, with_mean=True, with_std=True)\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","3ccece23":"# Buitd our model\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.ensemble import RandomForestClassifier\n\nRFC = RandomForestClassifier(\n    n_estimators=1000,\n    criterion='gini', # gini , entropy\n    max_depth=3,\n    random_state=2,\n    verbose=1,\n    n_jobs=-1)\n\nmodel = RFC.fit(X_train,y_train)\n\n\n##############################\n\ny_pred_rf = model.predict(X_test)\n\nscore = accuracy_score(y_test,y_pred_rf)\nprint(\"Score :\",round(score*100,2))","d69c0b6e":"from sklearn.svm import SVC\n\nSVC = SVC(C=0.5, kernel='linear', degree=5 ,max_iter=-1, random_state= 2)\n# {'linear', 'poly', 'rbf', 'sigmoid', 'precomputed'}\n\nmodel = SVC.fit(X_train,y_train)\n\n##############################\n\ny_pred_svc = model.predict(X_test)\n\nscore = accuracy_score(y_test,y_pred_svc)\nprint(\"Score :\",round(score*100,2))","66cafa88":"from xgboost import XGBClassifier\n\nXGB = XGBClassifier(n_estimators=1000,use_label_encoder=False,max_depth=5,learning_rate=0.01,\n                    booster= 'gbtree' ,# gbtree ,gblinear or dart. \n                    gamma=0.1,n_jobs=-1,random_state=2)\n\n\nmodel = XGB.fit(X_train,y_train)\n\n##############################\n\ny_pred_xgb = model.predict(X_test)\n\nscore = accuracy_score(y_test,y_pred_xgb)\nprint(\"Score :\",round(score*100,2))","32a22949":"# Let's Compare our Models\nscores = pd.DataFrame(\n    { \"algorithms\": ['RandomForest','SVC', 'Xgboost'],\n    \"Scores\": [accuracy_score(y_test, y_pred_rf),\n               accuracy_score(y_test, y_pred_svc),\n               accuracy_score(y_test, y_pred_xgb)] }\n)\nplt.figure(figsize=(7,7))\nsns.barplot(x='algorithms', y='Scores', data=scores)","84d4798d":"#### We acuire accuracy 90.69%\n","e414ecf7":"thank god we haven't nulls :)","7245d614":"* as you see about 79% are men  ,we have 725 record for men and 193 record for women","46195abe":"as you see most ages from 40 to 70","f7ab421a":"#### We acuire accuracy 87.25%\n","b3a17db7":"# if you like this kernel vote up ...","f0045466":"#### We acuire accuracy 85.78%\n"}}