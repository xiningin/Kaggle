{"cell_type":{"97aff109":"code","fad02dba":"code","9c808cb9":"code","90257811":"code","be68198d":"code","36cae199":"code","f4d0bc54":"code","30f3337b":"code","479e45fa":"code","9d8d0b3e":"code","f1d13da9":"code","763d477a":"code","82b9f465":"code","7ebde568":"code","89015ed7":"code","7c5bca20":"code","5a5640eb":"code","6369ef0b":"code","4f35d3d1":"code","abedbe9f":"code","5d08c3dd":"code","e684aa1c":"code","962fe843":"code","4cd36544":"code","a4f3599a":"code","4e43bcae":"code","f4f0e419":"code","a232756a":"code","132bf210":"code","861707b5":"markdown","abd2f9ed":"markdown","a24e8a17":"markdown","a9fa5181":"markdown","d26f0e0f":"markdown","910f9e3d":"markdown","c17b9cc0":"markdown","a967f976":"markdown","74d00069":"markdown","4e06da3b":"markdown","d201d03f":"markdown"},"source":{"97aff109":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nfrom sklearn.preprocessing import LabelEncoder\nimport seaborn as sns\n","fad02dba":"cards = pd.read_csv(\"..\/input\/german-credit-card\/Credit.csv\", index_col=0)\ncards.head()","9c808cb9":"cards.describe()\n","90257811":"sns.pairplot(cards)","be68198d":"X= cards[['checkingstatus1','duration','history','purpose','Default','savings','employ','installment','residence','age', 'housing', 'cards','liable', 'tele', 'foreign']]\ny= cards['amount']","36cae199":"import matplotlib.pyplot as plt","f4d0bc54":"fig, ax = plt.subplots(3, 6, figsize=(15, 10))\nfor var, subplot in zip(X, ax.flatten()):\n    sns.boxplot(x=var, y='amount', data=cards, ax=subplot)","30f3337b":"cond_plot = sns.FacetGrid(data=cards, col='purpose', hue='sex', col_wrap=4)\ncond_plot.map(sns.scatterplot, 'history', 'amount');","479e45fa":"fig, ax = plt.subplots(2, 8, figsize=(20, 10))\nfor variable, subplot in zip(X, ax.flatten()):\n    sns.countplot(cards[variable], ax=subplot)\n    for label in subplot.get_xticklabels():\n        label.set_rotation(90)","9d8d0b3e":"sns.jointplot(x=cards['duration'], y=cards['amount']);","f1d13da9":"corr = cards.corr()\n\nfig = px.imshow(corr)\nfig.show()","763d477a":"cards.info()","82b9f465":"from sklearn.preprocessing import OrdinalEncoder\ncheckingstatus1_encoder1 = OrdinalEncoder()\ncards['checkingstatus1'] = checkingstatus1_encoder1.fit_transform(cards[['checkingstatus1']])\ncards['history'] = checkingstatus1_encoder1.fit_transform(cards[['history']])\ncards['purpose'] = checkingstatus1_encoder1.fit_transform(cards[['purpose']])\ncards['savings'] = checkingstatus1_encoder1.fit_transform(cards[['savings']])\ncards['employ'] = checkingstatus1_encoder1.fit_transform(cards[['employ']])\ncards['sex'] = checkingstatus1_encoder1.fit_transform(cards[['sex']])\ncards['housing'] = checkingstatus1_encoder1.fit_transform(cards[['housing']])\ncards['tele'] = checkingstatus1_encoder1.fit_transform(cards[['tele']])\ncards['foreign'] = checkingstatus1_encoder1.fit_transform(cards[['foreign']])\n","7ebde568":"cards.head(100)","89015ed7":"X= cards[['checkingstatus1','duration','history','purpose','amount','savings','employ','installment','residence','age', 'housing', 'cards','liable', 'tele', 'foreign']]\ny= cards['Default']","7c5bca20":"X= cards[['checkingstatus1','duration','history','purpose','amount','savings','employ','installment','residence','age', 'housing', 'cards','liable', 'tele', 'foreign']]\ny= cards['Default']\n\nfrom sklearn.decomposition import PCA\n\npca= PCA (n_components=2)\nX_pca= pca.fit_transform(X)\n\nfig=px.scatter(x=X_pca[:,0], y=X_pca[:, 1], color=y)\nfig.show()\n\n","5a5640eb":"from sklearn.cluster import KMeans\n\nkmeans = KMeans(n_clusters=5, random_state=0).fit(X)\n\nimport plotly.graph_objects as go\n\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(\n    x=X['amount'], \n    y=X['duration'],\n    mode='markers',\n    name='data',\n    marker=dict(color=kmeans.predict(X))\n))\n\nfig.add_trace(go.Scatter(\n    x=kmeans.cluster_centers_.T[2], \n    y=kmeans.cluster_centers_.T[3],\n    mode='markers',\n    name='centroids'\n))\n\n\nfig.update_layout(\n    title=\"Credit Card Risk\",\n    xaxis_title=\"amount\",\n    yaxis_title=\"duration\"\n)\n\nfig.show()\n","6369ef0b":"distortions = []\nK = range(1,10)\nfor k in K:\n    model = KMeans(n_clusters=k)\n    model.fit(X)\n    distortions.append(model.inertia_)\n    \nprint(distortions)","4f35d3d1":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(\n    x=list(K), \n    y=distortions,\n    mode='lines+markers'\n))\n\nfig.update_layout(\n    title=\"M\u00e9todo del codo para encontrar el valor de K adecuado\",\n    xaxis_title=\"K\",\n    yaxis_title=\"distortion\"\n)\n\nfig.show()","abedbe9f":"kmeans.cluster_centers_\n","5d08c3dd":"cards['clusters']=kmeans.labels_\ncards.head(10)","e684aa1c":"cards['clusters'].value_counts()","962fe843":"sns.scatterplot(x=\"amount\", y = \"duration\", hue = \"clusters\", data=cards)","4cd36544":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.30, random_state=0)","a4f3599a":"from sklearn.decomposition import PCA\n\npca = PCA(2)\n\npca.fit(X_train)","4e43bcae":"X_train_pca = pca.transform(X_train)\n\nX_test_pca = pca.transform(X_test)","f4f0e419":"import plotly.express as px\n\nfig = px.scatter(x=X_train_pca[:, 0], y=X_train_pca[:, 1], color=y_train)\nfig.show()","a232756a":"from sklearn.naive_bayes import GaussianNB\nmodel = GaussianNB()\nmodel.fit(X_train, y_train)\n\n","132bf210":"model.score(X_test, y_test)","861707b5":"**3A. Average of all elements that belong to that cluster**","abd2f9ed":"# # Cual es el K mas adecuado ","a24e8a17":"**3B. Clasification to which cluster belongs the data******","a9fa5181":"# # # 4. Grafique los cl\u00fasters utilizando PCA (3 pts)","d26f0e0f":"# # 3. Explique cuales son las caracter\u00edsticas y su importancia para cada cl\u00faster (4 pts)","910f9e3d":"# # # PCA","c17b9cc0":"# 3D. Cluster Clasification of people on ammount debt and month duration","a967f976":"# # # 1. Analice y limpie los datos (3 pts)","74d00069":"Transformar los datos","4e06da3b":"# # 2. Escoga un valor de k y ajuste un modelo de k means, explique porque escogi\u00f3 ese valor (3 pts)","d201d03f":"**3C. Elements pertaining to every cluster**"}}