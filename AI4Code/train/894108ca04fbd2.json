{"cell_type":{"c795e689":"code","3d39e10c":"code","6bcb2041":"code","09392a24":"code","42cda3b1":"code","f358469b":"code","36dd9190":"code","a3ed2d96":"code","293ddb39":"code","7732bcca":"code","f2fa0a3e":"code","eccfc06a":"code","396d61ee":"code","e4e2f557":"code","56fc1c08":"code","cd11e20f":"markdown","e70751f7":"markdown","74250a87":"markdown","513d9831":"markdown"},"source":{"c795e689":"from sklearn.datasets import load_boston","3d39e10c":"import numpy as np\nimport pandas as pd\nimport matplotlib as plt ","6bcb2041":"df = load_boston()\ndf","09392a24":"dataset = pd.DataFrame(df.data)  # Independent features\ndataset.head()","42cda3b1":"dataset.columns = df.feature_names\ndataset.head()","f358469b":"df.target.shape","36dd9190":"dataset['Price'] = df.target\ndataset.head()","a3ed2d96":"X = dataset.iloc[:,:-1] # independent features\ny = dataset.iloc[:,-1] # dependent features","293ddb39":"from sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LinearRegression\n\nlinear_regressor = LinearRegression()\nmse = cross_val_score(linear_regressor, X, y, scoring='neg_mean_squared_error', cv=5)\nmean_mse = np.mean(mse)\nprint(mean_mse)","7732bcca":"from sklearn.linear_model import Ridge\nfrom sklearn.model_selection import GridSearchCV\n\nridge = Ridge()\nparameters = {'alpha':[1e-15, 1e-10, 1e-8, 1e-3, 1e-2, 1, 5, 10, 20, 30, 35, 40, 45, 50, 55, 100]}\nridge_regressor = GridSearchCV(ridge, parameters, scoring='neg_mean_squared_error', cv=5)\nridge_regressor.fit(X, y)\n\nprint(ridge_regressor.best_params_)\nprint(ridge_regressor.best_score_)","f2fa0a3e":"from sklearn.linear_model import Lasso\nfrom sklearn.model_selection import GridSearchCV\n\nlasso = Lasso()\nparameters = {'alpha':[1e-15, 1e-10, 1e-8, 1e-3, 1e-2, 1, 5, 10, 20, 30, 35, 40, 45, 50, 55, 100]}\nlasso_regressor = GridSearchCV(lasso, parameters, scoring='neg_mean_squared_error', cv=5)\nlasso_regressor.fit(X, y)\n\nprint(lasso_regressor.best_params_)\nprint(lasso_regressor.best_score_)","eccfc06a":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)","396d61ee":"prediction_lasso = lasso_regressor.predict(X_test)\nprediction_ridge = ridge_regressor.predict(X_test)","e4e2f557":"import seaborn as sns\n\nsns.distplot(y_test-prediction_lasso)","56fc1c08":"sns.distplot(y_test-prediction_ridge)","cd11e20f":"### Lasso Regression","e70751f7":"### Linear Regression","74250a87":"### Ridge Regression","513d9831":"# Ridge and Lasso Regression Implementation"}}