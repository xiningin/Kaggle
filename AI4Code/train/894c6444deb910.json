{"cell_type":{"12f5b2c9":"code","7e980c41":"code","c8fd09ab":"code","9b052ea8":"code","a791d04b":"code","938d5a89":"code","02904aa4":"code","ae9f3d0a":"code","25c9e8e9":"code","5663aa4c":"code","37eee8e9":"code","278ede9f":"code","9ae286db":"code","2acd5162":"code","7b09aeea":"code","48a78531":"code","713e2f03":"code","80dba9c5":"markdown","448935ac":"markdown","d7d78e28":"markdown"},"source":{"12f5b2c9":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import LogisticRegression","7e980c41":"df=pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ndf","c8fd09ab":"X_=df.drop([\"label\"],axis=1)\ny_=df[\"label\"]","9b052ea8":"X1=X_.to_numpy()\ny1=y_.to_numpy()","a791d04b":"#X=X1.reshape(28,28)\n#y=y1","938d5a89":"X*=X1[56].reshape(28,28)\nplt.imshow(X)","02904aa4":"#from sklearn.model_selection import train_test_split\n#X_train,X_test,y_train,y_test=train_test_split(X1,y1,train_size=0.8)","ae9f3d0a":"import tensorflow as tf\nimport keras\nfrom tensorflow.keras import layers, models ","25c9e8e9":"ann=keras.Sequential([\n                     keras.layers.Flatten(input_shape=(784,)),\n                     layers.Dense(3000,activation=\"relu\"),\n                     layers.Dense(1800,activation=\"relu\"),\n                     layers.Dense(10,activation=\"sigmoid\")\n\n\n]\n)","5663aa4c":"ann.compile(\n            optimizer = \"adam\",\n            loss =\"sparse_categorical_crossentropy\",\n            metrics =[\"accuracy\"]\n\n)\n\nann.fit(X1,y1,epochs=3)","37eee8e9":"w=ann.predict(X_test)\npred=np.argmax(w,axis=1)\npred","278ede9f":"tst=pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")\ntst","9ae286db":"res=ann.predict(tst)\nargmx=np.argmax(res,axis=1)\nrest=pd.DataFrame(argmx,columns=[\"Label\"])\nrest","2acd5162":"sample=pd.read_csv(\"..\/input\/digit-recognizer\/sample_submission.csv\")\nsubmission=sample.drop([\"Label\"],axis=1)\nsubmission","7b09aeea":"submission=pd.concat([submission,rest],axis=1)\nsubmission","48a78531":"submission.to_csv(\"submission.csv\",index=False)\n","713e2f03":"!kaggle competitions submit -c digit-recognizer -f submission.csv -m \"Message\"","80dba9c5":"# splitting data","448935ac":"# Data Exploration","d7d78e28":"# First using ANN model"}}