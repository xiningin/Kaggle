{"cell_type":{"f6a6fa19":"code","8d23c8fe":"code","1da7883b":"code","da3f9275":"code","34895276":"code","c4b388b2":"code","680dd99e":"code","ef955bb4":"code","9390aaac":"code","9d975dad":"code","6a859125":"code","86e3d40c":"code","4913670c":"code","e35fada3":"code","72e850eb":"code","33b96977":"code","55394aa4":"code","baead751":"code","0b889e30":"code","56147706":"markdown","c1921580":"markdown","1e67f3e2":"markdown","7676740c":"markdown","ea039bba":"markdown","b839b235":"markdown","251d96e3":"markdown","5e5b89fd":"markdown","36290363":"markdown","261d348f":"markdown"},"source":{"f6a6fa19":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n","8d23c8fe":"from sklearn.datasets import load_boston","1da7883b":"df = load_boston()","da3f9275":"# Let's check the df\n\ndf","34895276":"# Let's make dataframe out of this data\n\ndata = pd.DataFrame(df.data,columns = df.feature_names)","c4b388b2":"# Let's check the head of the dataframe\n\ndata.head()","680dd99e":"data['PRICE'] = df.target","ef955bb4":"# Let's separate feature variables and target variable\n\nX = data.drop('PRICE',axis = 1)\ny = data['PRICE']","9390aaac":"# Let's check out the shape of our dataframe\n\ndata.shape","9d975dad":"# Let's spit the data into train and test set\n\nfrom sklearn.model_selection import train_test_split\n\nX_train,X_test,y_train,y_test = train_test_split(X,y,\n                                                 test_size = 0.25,\n                                                random_state = 129)\n\n","6a859125":"X_train.shape","86e3d40c":"from sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LinearRegression\n\nlin_regressor=LinearRegression()\nmse=cross_val_score(lin_regressor,X_train,y_train,scoring='neg_mean_squared_error',cv=5)\nmean_mse=np.mean(mse)\nprint(mean_mse)","4913670c":"from sklearn.linear_model import Ridge\nfrom sklearn.model_selection import GridSearchCV\n\nridge=Ridge()\nparameters={'alpha':[1e-15,1e-10,1e-8,1e-3,1e-2,1,5,10,20,30,35,40,45,50,55,100]}\nridge_regressor=GridSearchCV(ridge,parameters,scoring='neg_mean_squared_error',cv=5)\nridge_regressor.fit(X_train,y_train)\n","e35fada3":"# Let's check out the best parameter and the score\n\nprint(ridge_regressor.best_params_)\nprint(ridge_regressor.best_score_)","72e850eb":"from sklearn.linear_model import Lasso\nfrom sklearn.model_selection import GridSearchCV\nlasso=Lasso()\nparameters={'alpha':[1e-15,1e-10,1e-8,1e-3,1e-2,1,5,10,20,30,35,40,45,50,55,100]}\nlasso_regressor=GridSearchCV(lasso,parameters,scoring='neg_mean_squared_error',cv=5)\n\nlasso_regressor.fit(X_train,y_train)\n","33b96977":"# Let's check out the best parameter and best score\n\nprint(lasso_regressor.best_params_)\nprint(lasso_regressor.best_score_)","55394aa4":"#Let's make prediction\n\nprediction_lasso=lasso_regressor.predict(X_test)\nprediction_ridge=ridge_regressor.predict(X_test)","baead751":"import seaborn as sns\n\nsns.distplot(y_test-prediction_lasso)","0b889e30":"import seaborn as sns\n\nsns.distplot(y_test-prediction_ridge)","56147706":"### Basically this notebook shows ridge and lasso regression to overcome the problem of overfitting in regression problems \n\nYou can refer to this amazing blog to know all about various regression techniques\n\n---->https:\/\/www.analyticsvidhya.com\/blog\/2017\/06\/a-comprehensive-guide-for-linear-ridge-and-lasso-regression\/","c1921580":"Here price column is missing in our dataset. Let's add it","1e67f3e2":"## Linear Regression","7676740c":"So our data is having 506 rows and 14 columns","ea039bba":"## Lasso Regression","b839b235":"## Ridge Regression","251d96e3":"### Please give an upvote if you like this notebook","5e5b89fd":"So, here we have array of data , target and feature names","36290363":"Here we are trying to minimize the overfitting problem i.e.,make the mse as close to zero.","261d348f":"### Check this link if you are scratching your head that why did we set scoring  = 'neg_mean_squared_error'\n\n---> https:\/\/stackoverflow.com\/questions\/21443865\/scikit-learn-cross-validation-negative-values-with-mean-squared-error"}}