{"cell_type":{"58b21bfc":"code","acbdfa93":"code","5d50ffee":"code","db5e0f15":"code","6fe6ff51":"code","4af0001f":"code","d3152117":"code","a760540d":"code","4085a269":"code","ab545e0f":"code","2b9f7af8":"code","702894ed":"code","19de78a7":"code","ab3246bf":"code","19a0a6c0":"code","0486bb7c":"code","08bc933e":"code","c3bcf418":"code","3a57a890":"code","d674f043":"code","1ab6e877":"code","61509332":"code","2bb9d20c":"code","2dcfad99":"code","2e3317b4":"code","0c4c018d":"code","41ae1a86":"code","ec4fd9a9":"code","f407bff9":"code","1b63393b":"code","e64f04bc":"code","9c71af21":"code","83a20666":"code","db9f9eaa":"code","89cfc40f":"code","aaafa9fe":"code","6ba265c0":"code","1189da2d":"code","a07e0226":"code","cd2a4b5f":"code","c8fe006f":"code","a0aa4ba3":"code","ffe215b8":"code","1b18043c":"code","32dbc8ac":"code","74f89990":"code","90e7ddb7":"code","2ca26251":"code","ce964fb4":"code","8ac425b6":"code","c11617ae":"code","c2bb3568":"code","27f43083":"code","001072f2":"code","f3ee85af":"code","6cd1a634":"markdown","38ec87e4":"markdown","1423cc13":"markdown","4eef07a2":"markdown","a0c05d6e":"markdown","9a7725b4":"markdown","10ea6196":"markdown","65f022c9":"markdown","294c9a04":"markdown","9ca19c7f":"markdown","efa87e5b":"markdown","67121032":"markdown","b02a94ae":"markdown"},"source":{"58b21bfc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","acbdfa93":"data = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntest_data = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")","5d50ffee":"data.info()","db5e0f15":"data.select_dtypes(exclude=np.number).info()","6fe6ff51":"categorical_data = data.select_dtypes(exclude=np.number)","4af0001f":"categorical_data.isna().sum()[categorical_data.isna().sum() > 0]","d3152117":"data[data['FireplaceQu'].isna()]['SalePrice'].describe()","a760540d":"data[~data['FireplaceQu'].isna()]['SalePrice'].describe()","4085a269":"data[data['PoolQC'].isna()]['SalePrice'].describe()","ab545e0f":"data[~data['PoolQC'].isna()]['SalePrice'].describe()","2b9f7af8":"data[~data['Fence'].isna()]['SalePrice'].describe()","702894ed":"data[data['Fence'].isna()]['SalePrice'].describe()","19de78a7":"data[data['MiscFeature'].isna()]['SalePrice'].describe()","ab3246bf":"data[~data['MiscFeature'].isna()]['SalePrice'].describe()","19a0a6c0":"data[data['Alley'].isna()]['SalePrice'].describe()","0486bb7c":"data[~data['Alley'].isna()]['SalePrice'].describe()","08bc933e":"drop_cols = ['PoolQC', 'Fence','MiscFeature', 'Alley'] # result in no variance in distribution","c3bcf418":"data.drop(columns=drop_cols, inplace=True)\ntest_data.drop(columns=drop_cols, inplace=True)","3a57a890":"data[data['FireplaceQu'].isna()]['Fireplaces'].describe()","d674f043":"data.loc[:,list(data.columns)[57:64]][data['GarageCars']==0]","1ab6e877":"data.loc[:,list(data.columns)[29:38]][data['BsmtQual'].isna()]","61509332":"cols_to_fill = list(categorical_data.isna().sum()[(categorical_data.isna().sum() < 1000) & (categorical_data.isna().sum() > 0)].index)\nfill_dict_cat = dict(zip(cols_to_fill,len(cols_to_fill)*['None']))","2bb9d20c":"data.fillna(fill_dict_cat, inplace=True)\ntest_data.fillna(fill_dict_cat, inplace=True)","2dcfad99":"data.isna().sum()[data.isna().sum() > 0]","2e3317b4":"data.loc[:,data.isna().sum()[data.isna().sum() > 0].index].describe()","0c4c018d":"numeric_data = data.select_dtypes(include=np.number).iloc[:,1:-1]\nnumeric_data","41ae1a86":"from sklearn.preprocessing import MinMaxScaler, StandardScaler\nscaler = MinMaxScaler()\nscaler.fit(numeric_data)","ec4fd9a9":"scaled_numeric_data = pd.DataFrame(scaler.transform(numeric_data), columns=numeric_data.columns)\ndata.loc[:,numeric_data.columns] = scaled_numeric_data","f407bff9":"numeric_test_data = test_data.select_dtypes(include=np.number).iloc[:,1:]\nscaled_numeric_test_data = pd.DataFrame(scaler.transform(numeric_test_data), columns=numeric_test_data.columns)\ntest_data.loc[:,scaled_numeric_test_data.columns] = scaled_numeric_test_data","1b63393b":"data.fillna(0, inplace=True)\ntest_data.fillna(0, inplace=True)","e64f04bc":"target = data['SalePrice']\ndata.drop(['Id','SalePrice'],axis=1, inplace=True)","9c71af21":"Id_test = test_data['Id']\ntest_data.drop(['Id'],axis=1, inplace=True)","83a20666":"combined = pd.concat((data, test_data), axis=0, ignore_index=True)","db9f9eaa":"cat_cols = list(data.select_dtypes(exclude=np.number).columns)","89cfc40f":"for f in cat_cols:\n    df_all_dummy = pd.get_dummies(combined[f], prefix=f)\n    combined = combined.drop([f], axis=1)\n    combined = pd.concat((combined, df_all_dummy), axis=1)","aaafa9fe":"data = combined.iloc[:len(data)]\ntest_data = combined.iloc[len(data):]","6ba265c0":"log_target = np.log(target.values+1)","1189da2d":"X = data.values\nY = log_target","a07e0226":"from sklearn.linear_model import LinearRegression, SGDRegressor, Lasso, Ridge, ElasticNet\nfrom sklearn.svm import LinearSVR, SVR\nfrom sklearn.model_selection import cross_val_score, RepeatedKFold, KFold\n#from sklearn.model_selection import train_test_split\n\n#X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2)","cd2a4b5f":"lin_reg = LinearRegression()\nlin_reg.fit(X, Y)\nlin_reg.score(X, Y)","c8fe006f":"cross_val_score(lin_reg, X, Y, cv=RepeatedKFold(n_splits=4, n_repeats=10),scoring='neg_mean_absolute_error').mean()","a0aa4ba3":"sgd_lin_reg = SGDRegressor(penalty='l2',  alpha=1, max_iter=1000, early_stopping=False, learning_rate='invscaling', eta0=0.01)\ncross_val_score(sgd_lin_reg, X, Y, cv=RepeatedKFold(n_splits=4, n_repeats=10),scoring='neg_mean_absolute_error').mean()","ffe215b8":"ridge_lin_reg = Ridge(alpha=1)\ncross_val_score(ridge_lin_reg, X, Y, cv=RepeatedKFold(n_splits=4, n_repeats=10),scoring='neg_mean_absolute_error').mean()","1b18043c":"lasso_lin_reg = Lasso(alpha=0.0001)\ncross_val_score(lasso_lin_reg, X, Y, cv=RepeatedKFold(n_splits=4, n_repeats=10),scoring='neg_mean_absolute_error').mean()","32dbc8ac":"elastic_lin_reg = ElasticNet(alpha=0.001, l1_ratio=0.001)\ncross_val_score(elastic_lin_reg, X, Y, cv=RepeatedKFold(n_splits=4, n_repeats=10),scoring='neg_mean_absolute_error').mean()","74f89990":"lin_SVR = LinearSVR(max_iter=2000, C=0.1)\ncross_val_score(lin_SVR, X, Y, cv=RepeatedKFold(n_splits=4, n_repeats=10),scoring='neg_mean_absolute_error').mean()","90e7ddb7":"kernel_SVR = SVR(kernel='rbf')\ncross_val_score(kernel_SVR, X, Y, cv=RepeatedKFold(n_splits=4, n_repeats=10),scoring='neg_mean_absolute_error').mean()","2ca26251":"kernel_SVR = SVR(kernel='poly', degree=2)\ncross_val_score(kernel_SVR, X, Y, cv=RepeatedKFold(n_splits=4, n_repeats=10),scoring='neg_mean_absolute_error').mean()","ce964fb4":"kernel_SVR = SVR(kernel='linear')\ncross_val_score(kernel_SVR, X, Y, cv=RepeatedKFold(n_splits=4, n_repeats=10),scoring='neg_mean_absolute_error').mean()","8ac425b6":"lasso_lin_reg.fit(X,Y)","c11617ae":"test_predictions = np.exp(lasso_lin_reg.predict(test_data))","c2bb3568":"submission = pd.DataFrame(Id_test)\nsubmission['SalePrice'] = pd.DataFrame(test_predictions)\nsubmission","27f43083":"submission.set_index('Id', inplace=True)","001072f2":"submission","f3ee85af":"submission.to_csv('lasso.csv')","6cd1a634":"# Categorical data inspection","38ec87e4":"# Scaling & Filling quantitative variables","1423cc13":"# One hot encoding","4eef07a2":"In order to decide on which categorical columns to drop, we check the distribution of target values `SalePrice` when they are present and when they are missing.","a0c05d6e":"The linear regression shows very unrealistic metrics values when using `cross_val_score` althought it shows great explainability for variation in targets using Rsquared.","9a7725b4":"We have settled on using Linear regression model with lasso regularization.","10ea6196":"**different distributions accross `FireplaceQu` so it won't be dropped**","65f022c9":"To make sure that all categories in test and train are encoded we concatenate them untill we finish the one hot encoding step","294c9a04":"# Model selection","9ca19c7f":"**The previous categorical variables have shown no impact on the SalePrice distribution so they will be dropped**","efa87e5b":"For test data","67121032":"# Model submission","b02a94ae":"**Filling missing values**"}}