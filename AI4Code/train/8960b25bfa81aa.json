{"cell_type":{"b17c1b4f":"code","b6c95e78":"code","4b93cedc":"code","4ca43177":"code","07e1d9c1":"code","71a71ed7":"code","99529620":"code","562a70c1":"code","7a472cfe":"code","febfd71f":"code","4696a87b":"code","3531ab5b":"code","b6018df5":"code","98c0975c":"code","b9a97507":"code","4785fa04":"code","ef36c8d1":"code","dc79809e":"code","6b7e5b38":"code","f98711cf":"code","526fe795":"code","0bca70c7":"code","82a089bf":"code","5df78b24":"code","1f4d7f35":"code","89970d0c":"code","c5e75de4":"code","01bacd8c":"code","ef18d97b":"code","b188b8ae":"code","6d55f46b":"code","ffa836ae":"code","f1306bdc":"code","c79e8304":"code","bc30bf79":"code","f247aeb9":"code","627b60e1":"code","eb2fe616":"code","aecb5d49":"code","f01ca21a":"code","5a2e6b2b":"code","aa2e2739":"code","bd4f0794":"code","bcf20b3d":"code","bd6464b6":"code","40d600f0":"code","d44f3bf1":"code","b39bd45a":"code","3b3aff4a":"code","83be5224":"code","fc8c9dc4":"code","1072a74f":"code","7f49d552":"code","f50527a7":"code","4f37778a":"code","bec3cdd3":"code","031d1831":"code","266d40dc":"code","a2509a0f":"code","e9df1a78":"code","91717580":"markdown","58ea7c92":"markdown","9bb5a2c0":"markdown","16fa51f7":"markdown","a8e2c380":"markdown","8220e516":"markdown","6ad983a0":"markdown","0129fcda":"markdown","0cd9e265":"markdown","0b3494b1":"markdown"},"source":{"b17c1b4f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor","b6c95e78":"raw_data = pd.read_csv('..\/input\/graduate-admissions\/Admission_Predict.csv')","4b93cedc":"raw_data.head()","4ca43177":"raw_data.describe(include = 'all')","07e1d9c1":"raw_data.isnull().sum()","71a71ed7":"data_cleaned = raw_data.drop(['Serial No.'], axis = 1)","99529620":"data_cleaned.describe(include = 'all')","562a70c1":"sns.distplot(data_cleaned['GRE Score'])","7a472cfe":"q = data_cleaned['GRE Score'].quantile(0.01)\ndata_1 = data_cleaned[data_cleaned['GRE Score']>q]\ndata_1.describe(include = 'all')","febfd71f":"sns.distplot(data_1['GRE Score'])","4696a87b":"sns.distplot(data_1['TOEFL Score'])","3531ab5b":"q = data_1['TOEFL Score'].quantile(0.01)\ndata_2 = data_1[data_1['TOEFL Score']>q]\ndata_2.describe(include = 'all')","b6018df5":"sns.distplot(data_2['TOEFL Score'])","98c0975c":"data_2.columns.values","b9a97507":"sns.distplot(data_2['University Rating'])","4785fa04":"q = data_2['University Rating'].quantile(0.01)\ndata_3 = data_2[data_2['University Rating']>q]\ndata_3.describe(include = 'all')","ef36c8d1":"sns.distplot(data_3['University Rating'])","dc79809e":"sns.distplot(data_3['SOP'])","6b7e5b38":"q = data_3['SOP'].quantile(0.01)\ndata_4 = data_3[data_3['SOP']>q]\ndata_4.describe(include = 'all')","f98711cf":"sns.distplot(data_4['SOP'])","526fe795":"data_4","0bca70c7":"sns.distplot(data_4['LOR '])","82a089bf":"q = data_4['LOR '].quantile(0.01)\ndata_5 = data_4[data_4['LOR ']>q]\ndata_5.describe(include = 'all')","5df78b24":"sns.distplot(data_5['LOR '])","1f4d7f35":"sns.distplot(data_5['CGPA'])","89970d0c":"q = data_5['CGPA'].quantile(0.01)\ndata_6 = data_5[data_5['CGPA']>q]\ndata_6.describe(include  = 'all')","c5e75de4":"sns.distplot(data_6['CGPA'])","01bacd8c":"sns.distplot(data['Research'])","ef18d97b":"sns.distplot(data_6['Chance of Admit '])","b188b8ae":"q = data_6['Chance of Admit '].quantile(0.01)\ndata_7 = data_6[data_6['Chance of Admit ']>q]\ndata_7.describe(include = 'all')","6d55f46b":"sns.distplot(data_7['Chance of Admit '])","ffa836ae":"data_cleaned = data_7.reset_index(drop = True)","f1306bdc":"data_cleaned.describe(include = 'all')","c79e8304":"f, (ax1,ax2,ax3) = plt.subplots(1,3, sharey=True, figsize=(15,3))\nax1.scatter(data_cleaned['GRE Score'], data_cleaned['Chance of Admit '])\nax1.set_title('Chance of Admit and GRE Score')\nax2.scatter(data_cleaned['TOEFL Score'], data_cleaned['Chance of Admit '])\nax2.set_title('Chance of Admit and TOEFL Score')\nax3.scatter(data_cleaned['CGPA'],data_cleaned['Chance of Admit '])\nax3.set_title('Chance of Admit and CGPA')\n\nplt.show()","bc30bf79":"f, (ax1,ax2,ax3) = plt.subplots(1,3, sharey=True, figsize=(15,3))\nax1.scatter(data_cleaned['University Rating'], data_cleaned['Chance of Admit '])\nax1.set_title('Chance of Admit and University Rating')\nax2.scatter(data_cleaned['SOP'], data_cleaned['Chance of Admit '])\nax2.set_title('Chance of Admit and SOP')\nax3.scatter(data_cleaned['LOR '],data_cleaned['Chance of Admit '])\nax3.set_title('Chance of Admit and Research')\n\nplt.show()","f247aeb9":"data_cleaned = data_cleaned.reset_index(drop = True)","627b60e1":"data_cleaned.describe(include = 'all')","eb2fe616":"targets = data_cleaned['Chance of Admit ']\ninputs = data_cleaned.drop(['Chance of Admit '], axis = 1)","aecb5d49":"#using sklearn.preprocessing -> StandardScaler\nscaler = StandardScaler()\nscaler.fit(inputs)","f01ca21a":"inputs_scaled = scaler.transform(inputs)","5a2e6b2b":"#using sklearn.modelselection -> train_test_split\nx_train,x_test,y_train,y_test = train_test_split(inputs_scaled, targets, test_size = 0.2, random_state = 365)","aa2e2739":"reg = LinearRegression()\nreg.fit(x_train,y_train)","bd4f0794":"y_hat = reg.predict(x_train)","bcf20b3d":"plt.scatter(y_train, y_hat)\nplt.xlabel('Targets(y_train)', size = 10)\nplt.ylabel('Predictions(y_hat)', size = 10)\nplt.show()","bd6464b6":"#Plot For Residuals\nsns.distplot(y_train - y_hat)\nplt.title('Residual PDFs', size =18)","40d600f0":"## R-Squared\nreg.score(x_train,y_train)","d44f3bf1":"reg.intercept_","b39bd45a":"reg.coef_","3b3aff4a":"reg_summary = pd.DataFrame(inputs.columns.values, columns = ['Features'])\nreg_summary['Weights'] = reg.coef_\nreg_summary","83be5224":"y_hat_test = reg.predict(x_test)","fc8c9dc4":"plt.scatter(y_test, y_hat_test, alpha=0.2)\nplt.xlabel('Targets(y_test)', size = 18)\nplt.ylabel('Predictions(y_hat_test)', size = 18)\n\nplt.show()","1072a74f":"df_pf = pd.DataFrame(np.exp(y_hat_test), columns=['Predictions'])\ndf_pf.head()","7f49d552":"df_pf['Target'] = np.exp(y_test)\ndf_pf","f50527a7":"y_test= y_test.reset_index(drop=True)","4f37778a":"y_test.head()","bec3cdd3":"df_pf['Target'] = np.exp(y_test)\ndf_pf","031d1831":"df_pf['Residual'] = df_pf['Target'] - df_pf['Predictions']","266d40dc":"df_pf['Difference'] = np.absolute(df_pf['Residual']\/df_pf['Target']*100)","a2509a0f":"df_pf","e9df1a78":"pd.options.display.max_rows = 999\npd.set_option('display.float_format', lambda x: '% 2f' % x)\ndf_pf.sort_values(by = ['Difference'])","91717580":"## Hello, I am a complete begineer to Data Science\n## Any kind of inputs are welcome as I'd love to learn more!","58ea7c92":"## Scaling the Data","9bb5a2c0":"## Linear Regression Model\n\n## Declaring Inputs and Targets","16fa51f7":"## Exploring the PDFs and trying to achieve a Normal Distribution","a8e2c380":"## Checking OLS Assumptions","8220e516":"## Testing","6ad983a0":"## Creating the Regression","0129fcda":"## Test Train Split","0cd9e265":"## Loading the Data","0b3494b1":"## Finding Weight and Bias"}}