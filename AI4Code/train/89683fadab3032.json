{"cell_type":{"2f5f8eef":"code","c1cf924e":"code","eccedc3c":"code","5a6d07b3":"code","169a3b1c":"code","975e8a98":"code","e8a86880":"code","b44e3d44":"code","36b59cd0":"code","2d9c78aa":"code","e8079c7f":"code","b1fad9d0":"code","77a37eaa":"code","a70abf5d":"code","53a56151":"code","4f0754bb":"code","88dafeef":"code","1d8be5c0":"code","09a6fe17":"code","350340a3":"code","802dd7d1":"code","9dc3d61e":"code","cdeae29d":"code","28ca0830":"code","256d2e53":"code","2819234e":"code","62691463":"code","f69663cb":"code","0c9aa9f2":"code","f6508bb4":"code","775fc677":"code","5227877c":"code","9c3a7aaa":"code","17a29fd2":"code","1dc91a0e":"code","1a683a33":"code","add46bc4":"code","841f265a":"code","834aa197":"code","9d65904d":"code","e5583e9e":"code","bec04951":"code","3163e7aa":"code","8b6dcd67":"code","2151c12b":"code","52c2b8cb":"code","4bd13c15":"code","b2c0620a":"code","c2889226":"code","379349f6":"markdown","6ffe7d7d":"markdown","e418dd9f":"markdown","04921d1e":"markdown","6c7a5d54":"markdown","31dc9b43":"markdown","16bf8e03":"markdown","926a9d36":"markdown","ea33586f":"markdown","76f12e0b":"markdown","90635cc1":"markdown","fb3aa0e7":"markdown","c7be01a6":"markdown","23f13ed9":"markdown","6f4e5a7d":"markdown","0e52797b":"markdown"},"source":{"2f5f8eef":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Gaphics\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport graphviz \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c1cf924e":"df_train = pd.read_csv('..\/input\/train.csv')\ndf_valid = pd.read_csv('..\/input\/valid.csv')\ndf_exemple = pd.read_csv('..\/input\/exemplo_resultado.csv')\ndf_test = pd.read_csv('..\/input\/test.csv')","eccedc3c":"df_train.head()","5a6d07b3":"df_train.describe()","169a3b1c":"df_train.columns","975e8a98":"def correlation_plot(dataframe, method_='spearman'):\n    correlations = dataframe.corr(method=method_)\n\n    fig, ax = plt.subplots(figsize=(25,25))\n    sns.heatmap(correlations, vmax=1.0, center=0, fmt='.2f',\n                    square=True, linewidths=.5, annot=True, cbar_kws={\"shrink\": .90})\n    plt.show();","e8a86880":"y = df_train['default payment next month'].copy()\n# y","b44e3d44":"all_df = pd.concat([df_train, df_valid, df_test], sort=False)","36b59cd0":"all_df","2d9c78aa":"all_df.info()","e8079c7f":"all_df.isna().sum()","b1fad9d0":"correlation_plot(all_df)","77a37eaa":"genre_ohe = pd.get_dummies(all_df['SEX'], prefix='SEX')\ngenre_ohe.info()","a70abf5d":"all_df = pd.concat([all_df, genre_ohe], axis=1)\n\nall_df = all_df.drop(['SEX'], axis=1)","53a56151":"education_ohe = pd.get_dummies(all_df['EDUCATION'], prefix='EDUCATION')\neducation_ohe.info()","4f0754bb":"all_df = pd.concat([all_df, education_ohe], axis=1)\n\nall_df = all_df.drop(['EDUCATION'], axis=1)","88dafeef":"marital_status_ohe = pd.get_dummies(all_df['MARRIAGE'], prefix='MARRIAGE')\nmarital_status_ohe.info()","1d8be5c0":"all_df = pd.concat([all_df, marital_status_ohe], axis=1)\n\nall_df = all_df.drop(['MARRIAGE'], axis=1)","09a6fe17":"all_df.info()","350340a3":"# all_df.isna().sum()","802dd7d1":"# all_df.head()","9dc3d61e":"raw = all_df.copy()","cdeae29d":"correlation_plot(all_df)","28ca0830":"# all_df = all_df.drop(['PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3', 'PAY_AMT4', 'PAY_AMT5', 'PAY_AMT6'], axis=1)\n# all_df = all_df.drop(['LIMIT_BAL','PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3', 'PAY_AMT4', 'PAY_AMT5', 'PAY_AMT6'], axis=1)","256d2e53":"# correlation_plot(all_df)","2819234e":"all_df = all_df.drop(['default payment next month'], axis=1)","62691463":"all_df.info()","f69663cb":"raw.info()","0c9aa9f2":"df_train_clean = all_df.iloc[:21000]\ndf_valid_clean = all_df.iloc[21000:25500]\ndf_test_clean = all_df.iloc[25500:30000]","f6508bb4":"# df_train_clean.isna().sum()\n# df_test_clean.isna().sum()\n# df_valid_clean.isna().sum()","775fc677":"# df_test_clean.info()","5227877c":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import roc_auc_score","9c3a7aaa":"x = df_train_clean","17a29fd2":"X_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state = 0)","1dc91a0e":"param_grid = {\n    'n_estimators': [25, 40, 50],\n    'max_features': ['auto', 'sqrt', 'log2', 0.5],\n    'criterion' :['gini', 'entropy'],\n}\n\n# rfc = RandomForestClassifier(n_estimators=40, min_samples_leaf=3, max_features=0.5, n_jobs=-1, oob_score=True)\nrfc_model = RandomForestClassifier(min_samples_leaf=3, n_jobs=-1)","1a683a33":"# rfc.fit(x, y)\n# rfc.fit(X_train, y_train)\n# CV_rfc = GridSearchCV(estimator=rfc_model, param_grid=param_grid, cv= 10)\n# CV_rfc.fit(X_train, y_train)","add46bc4":"# best_parameters = CV_rfc.best_params_\n# print(\"Best Parameters: {}\".format(best_parameters))","841f265a":"# rf_classifer = RandomForestClassifier(max_features = 0.5, n_estimators = 50, min_samples_leaf=3, n_jobs=-1, \n#                                       oob_score=True, random_state = 0, criterion = 'gini')\n# rf_classifer.fit(X_train, y_train)","834aa197":"# predict_rf = rf_classifer.predict(X_test)\n\n# print(predict)","9d65904d":"# print(roc_auc_score(y_test, predict_rf))","e5583e9e":"# param_grid_dtc = {\n#     'max_leaf_nodes': [25, 50, 75, 100, 150],\n# }\n\n# dtc_model = DecisionTreeClassifier(random_state = 0)\n\n# CV_dtc = GridSearchCV(estimator=dtc_model, param_grid=param_grid_dtc, cv= 10)\n# CV_dtc.fit(X_train, y_train)","bec04951":"# best_parameters_dtc = CV_dtc.best_params_\n# print(\"Best Parameters: {}\".format(best_parameters_dtc))","3163e7aa":"# dt_class = DecisionTreeClassifier(max_leaf_nodes=25)\n# dt_class.fit(X_train, y_train)","8b6dcd67":"# predict_dt = dt_class.predict(X_test)\n# print(roc_auc_score(y_test, predict_dt))","2151c12b":"# final_model = RandomForestClassifier(max_features = 0.5, n_estimators = 50, min_samples_leaf=3, n_jobs=-1, \n#                                      oob_score=True, random_state = 0)\nfinal_model = DecisionTreeClassifier(max_leaf_nodes=25)\nfinal_model.fit(x, y)","52c2b8cb":"df_valid_test_clean = pd.concat([df_valid_clean, df_test_clean], sort=False)\ndf_valid_test_clean.info()","4bd13c15":"predicao = final_model.predict(df_valid_test_clean)\n\n# print(predicao)","b2c0620a":"# result = pd.concat([submission, df_exemple[4500:]], sort=False)\nsubmission = pd.DataFrame({'ID': df_valid_test_clean.ID, 'Default': predicao})\nsubmission.to_csv('submission.csv', index=False)","c2889226":"submission","379349f6":"# An\u00e1lise dos dados","6ffe7d7d":"# Pr\u00e9-processamento","e418dd9f":"# Tratamento dos dados","04921d1e":"### Fazendo testes para observar quais os melhores parametros para se utilizar no Random Forest Classifier","6c7a5d54":"#### Verificando se h\u00e1 valores nulos","31dc9b43":"#### Copiando a coluna de interesse para a variav\u00e9l y, que ser\u00e1 utilizada no treinamento do modelo.","16bf8e03":"## Carrengando os csv","926a9d36":"### Removendo as colunas que possuem menos correla\u00e7\u00e3o com a variavel de interesse.","ea33586f":"### Dividindo o dataset de treino em 70% treinamento e 30% teste.","76f12e0b":"### Fazendo testes para observar quais os melhores parametros para se utilizar no Decision Tree Classifier","90635cc1":"### Categorizando as colunas que possuem caracter\u00edsticas categoricas\n#### Ex: Genero, Nivel de educa\u00e7\u00e3o, etc.","fb3aa0e7":"#### Concatenando os datasets de treino e valida\u00e7\u00e3o para pr\u00e9-processamento dos mesmos.","c7be01a6":"# Final model","23f13ed9":"# Treinamento","6f4e5a7d":"## Separando os datasets para treino, valida\u00e7\u00e3o e teste","0e52797b":"### Fun\u00e7\u00e3o que plota um gr\u00e1fico de correla\u00e7\u00e3o entre as fearures.\n#### Escolhi fazer a fun\u00e7\u00e3o para poder reutiliz\u00e1-la mais de uma vez."}}