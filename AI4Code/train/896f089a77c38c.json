{"cell_type":{"3fbb4d46":"code","d28765f0":"code","9f7cb46c":"code","3fc1f399":"code","2a2d853f":"code","f61d71ef":"code","1707c5a9":"code","3e8089d7":"code","2dff26cb":"code","9fac1eb2":"code","0837b96f":"markdown","ae8682dd":"markdown","e484fdad":"markdown","d9d06450":"markdown","a49e79bd":"markdown","ba0ac780":"markdown","81fd814d":"markdown"},"source":{"3fbb4d46":"\n#Pycaret needs to be installed\n!pip3 install pycaret\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\ntrain = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest  = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\n","d28765f0":"train.head()","9f7cb46c":"test.head()","3fc1f399":"#Importing regression model from PyCaret. For classification,see the notebook mentioned above.\nfrom pycaret.regression import *","2a2d853f":"reg = setup(data = train, \n             target = 'SalePrice',\n             numeric_imputation = 'mean',\n             categorical_features = ['MSZoning','Exterior1st','Exterior2nd','KitchenQual','Functional','SaleType',\n                                     'Street','LotShape','LandContour','LotConfig','LandSlope','Neighborhood',   \n                                     'Condition1','Condition2','BldgType','HouseStyle','RoofStyle','RoofMatl',    \n                                     'MasVnrType','ExterQual','ExterCond','Foundation','BsmtQual','BsmtCond',   \n                                     'BsmtExposure','BsmtFinType1','BsmtFinType2','Heating','HeatingQC','CentralAir',   \n                                     'Electrical','GarageType','GarageFinish','GarageQual','GarageCond','PavedDrive',\n                                     'SaleCondition']  , \n             ignore_features = ['Alley','PoolQC','MiscFeature','Fence','FireplaceQu','Utilities'],\n             feature_selection = True,\n             pca=True,\n             remove_multicollinearity=True,\n             remove_outliers = True,\n             normalize = True,\n             silent = True)","f61d71ef":"#Now lets visualize the results for various models\ncompare_models(sort='RMSE') # because this is the evaluation metric of the competition","1707c5a9":"#selecting the best model\nbest = automl(optimize='rmse')\n\nbest","3e8089d7":"cb = create_model('huber')\ntuned_cb = tune_model(cb)","2dff26cb":"sample=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')","9fac1eb2":"#Let's create the final submission!!\npredictions = predict_model(tuned_cb, data = test)\nsample['SalePrice'] = predictions['Label']\nsample.to_csv('submission.csv',index=False)\nsample.head()","0837b96f":"# Data fields\n\n*Here's a brief version of what you'll find in the data description file.*\n\n* SalePrice - the property's sale price in dollars. This is the target variable that you're trying to predict.\n* MSSubClass: The building class\n* MSZoning: The general zoning classification\n* LotFrontage: Linear feet of street connected to property\n* LotArea: Lot size in square feet\n* Street: Type of road access\n* Alley: Type of alley access\n* LotShape: General shape of property\n* LandContour: Flatness of the property\n* Utilities: Type of utilities available\n* LotConfig: Lot configuration\n* LandSlope: Slope of property\n* Neighborhood: Physical locations within Ames city limits\n* Condition1: Proximity to main road or railroad\n* Condition2: Proximity to main road or railroad (if a second is present)\n* BldgType: Type of dwelling\n* HouseStyle: Style of dwelling\n* OverallQual: Overall material and finish quality\n* OverallCond: Overall condition rating\n* YearBuilt: Original construction date\n* YearRemodAdd: Remodel date\n* RoofStyle: Type of roof\n* RoofMatl: Roof material\n* Exterior1st: Exterior covering on house\n* Exterior2nd: Exterior covering on house (if more than one material)\n* MasVnrType: Masonry veneer type\n* MasVnrArea: Masonry veneer area in square feet\n* ExterQual: Exterior material quality\n* ExterCond: Present condition of the material on the exterior\n* Foundation: Type of foundation\n* BsmtQual: Height of the basement\n* BsmtCond: General condition of the basement\n* BsmtExposure: Walkout or garden level basement walls\n* BsmtFinType1: Quality of basement finished area\n* BsmtFinSF1: Type 1 finished square feet\n* BsmtFinType2: Quality of second finished area (if present)\n* BsmtFinSF2: Type 2 finished square feet\n* BsmtUnfSF: Unfinished square feet of basement area\n* TotalBsmtSF: Total square feet of basement area\n* Heating: Type of heating\n* HeatingQC: Heating quality and condition\n* CentralAir: Central air conditioning\n* Electrical: Electrical system\n* 1stFlrSF: First Floor square feet\n* 2ndFlrSF: Second floor square feet\n* LowQualFinSF: Low quality finished square feet (all floors)\n* GrLivArea: Above grade (ground) living area square feet\n* BsmtFullBath: Basement full bathrooms\n* BsmtHalfBath: Basement half bathrooms\n* FullBath: Full bathrooms above grade\n* HalfBath: Half baths above grade\n* Bedroom: Number of bedrooms above basement level\n* Kitchen: Number of kitchens\n* KitchenQual: Kitchen quality\n* TotRmsAbvGrd: Total rooms above grade (does not include bathrooms)\n* Functional: Home functionality rating\n* Fireplaces: Number of fireplaces\n* FireplaceQu: Fireplace quality\n* GarageType: Garage location\n* GarageYrBlt: Year garage was built\n* GarageFinish: Interior finish of the garage\n* GarageCars: Size of garage in car capacity\n* GarageArea: Size of garage in square feet\n* GarageQual: Garage quality\n* GarageCond: Garage condition\n* PavedDrive: Paved driveway\n* WoodDeckSF: Wood deck area in square feet\n* OpenPorchSF: Open porch area in square feet\n* EnclosedPorch: Enclosed porch area in square feet\n* 3SsnPorch: Three season porch area in square feet\n* ScreenPorch: Screen porch area in square feet\n* PoolArea: Pool area in square feet\n* PoolQC: Pool quality\n* Fence: Fence quality\n* MiscFeature: Miscellaneous feature not covered in other categories\n* MiscVal: $Value of miscellaneous feature\n* MoSold: Month Sold\n* YrSold: Year Sold\n* SaleType: Type of sale\n* SaleCondition: Condition of sale","ae8682dd":"Time for some hyperparameter tuning. You're right, Pycaret does that for us as well!","e484fdad":"# References and Acknowledgements\nhttps:\/\/www.kaggle.com\/kritidoneria\/automl-titanic-using-pycaret\n\nhttps:\/\/pycaret.org\/ (Official Documentation)\n","d9d06450":"This is a very detailed features list,however I'd like you to think of a few more factors that are not present in this data.\nThis helps with critical thinking in Data science\n\n(2008 housing bubble burst for example)","a49e79bd":"Pycaret also allows for model blending like stacking,ensembling etc.For simplicity I shall omit it here. If you do fork this notebook, I highly encourage you to try it.Let's just write the best submission here.","ba0ac780":"**Pycaret Setup**\n\nThis is where magic happens.One line does all of these things:\n\n* I will tell the model to ignore certain features with high cardinality,the target column,and give my session an id.\n* I will also pass categorical features here.\n* I will normalize the data\n* I will pass multicollinearity handling and outlier handling as true so that it takes care of it implicitly\n* I will also experiment with using PCA to reduce dimensionality here and set feature selection to true.\n\nI highly encourage you to look up each of these terms.","81fd814d":"Hi,\nAfter seeing the response to [this notebook](https:\/\/www.kaggle.com\/kritidoneria\/titanic-using-pycaret-100-lines-of-code\/comments) of mine wherein I made an entry for Titanic competition,I am doing a Regression analysis using PyCaret.\nIn this, I'll focus on very basic steps.\n\nSo you have a Kaggle account,what next? What if I tell you you can create your very first submission in less than 100 lines of code?\n\nNo,I'm not talking the usual Linear regression. I'm talking advanced Kaggle concepts like Feature engineering,Blending,Stackimg and Ensembling?\n\nWelcome Pycaret,a low Code library developed by Moez Ali,which helps professional data scientists develop prototypes quickly with very few lines of code.\n\nIt provides a great starting point to rule out what works for your data and what doesn't,so I highly recommend this. In this code, We will read the data and create models and final predictions. I do recommend reading the official documentation while following along,and typing your own code by reading this notebook.\n"}}