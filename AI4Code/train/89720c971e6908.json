{"cell_type":{"1c2dfc0b":"code","675cc257":"code","e67b4ea5":"code","3fe3047d":"code","68fd8a72":"code","febad177":"code","7e4c0a1d":"code","6f879bc8":"code","e9b22051":"code","24251dd9":"code","12a7c9ce":"code","8851d23a":"code","d2ebd297":"code","b70ce4a4":"markdown","c6bb5686":"markdown","ddcd2060":"markdown","9618e6ae":"markdown","c7f452b0":"markdown","e1a8d09c":"markdown","ad54aee6":"markdown","852b5dcf":"markdown","352386f1":"markdown","be094290":"markdown"},"source":{"1c2dfc0b":"%%html\n<iframe src=\"https:\/\/ourworldindata.org\/grapher\/covid-confirmed-cases-since-100th-case?country=CAN+MEX+PAN\" style=\"width: 100%; height: 600px; border: 0px none;\"><\/iframe>","675cc257":"import numpy as np\nimport pandas as pd\nimport plotly.graph_objects as go\nimport plotly.express as px\n# Plotly installation: https:\/\/plot.ly\/python\/getting-started\/#jupyterlab-support-python-35\n\nDATA_FOLDER = \"..\/input\/covid19-global-forecasting-week-3\/\"\nDATA_ALT_FOLDER = \"..\/input\/novel-corona-virus-2019-dataset\/\"","e67b4ea5":"df = pd.read_csv(DATA_FOLDER + \"train.csv\")\ndf[\"Date\"] = pd.to_datetime(df[\"Date\"], format=\"%Y-%m-%d\")\ndf.shape","3fe3047d":"df_alt = pd.read_csv(DATA_ALT_FOLDER + \"time_series_covid_19_confirmed.csv\")\ndf_alt.shape","68fd8a72":"df_country_stats = df.groupby([\"Country_Region\", \"Date\"])[[\"ConfirmedCases\", \"Fatalities\"]].sum().reset_index()\nprint(\"# of Entries:\", df_country_stats.shape[0])\nprint(\"# of Non-Zero Entries:\", df_country_stats[df_country_stats.ConfirmedCases > 0].shape[0])\nprint(\"# of Countries:\", df_country_stats[\"Country_Region\"].nunique())\nprint(\"# of Countries with confirmed cases:\", df_country_stats[df_country_stats.ConfirmedCases > 0][\"Country_Region\"].nunique())\ndf_country_stats.sample(5)","febad177":"# Only keep entries with ConfirmedCases > 0\ndf_country_stats = df_country_stats[df_country_stats.ConfirmedCases > 0].reset_index(drop=True)\ndf_country_stats[df_country_stats[\"Country_Region\"] == \"US\"].tail()","7e4c0a1d":"df_tmp = df_alt.drop([\"Lat\", \"Long\"], axis=1).groupby([\"Country\/Region\"]).sum()\ndf_country_stats_alt = df_tmp.reset_index().melt([\"Country\/Region\"], var_name=\"Date\", value_name=\"ConfirmedCases\")\ndf_country_stats_alt[\"Date\"] = pd.to_datetime(df_country_stats_alt[\"Date\"], format=\"%m\/%d\/%y\")\nprint(\"# of Entries:\", df_country_stats_alt.shape[0])\nprint(\"# of Non-Zero Entries:\", df_country_stats_alt[df_country_stats_alt.ConfirmedCases > 0].shape[0])\nprint(\"# of Countries:\", df_country_stats_alt[\"Country\/Region\"].nunique())\nprint(\"# of Countries with confirmed cases:\", df_country_stats_alt[df_country_stats_alt.ConfirmedCases > 0][\"Country\/Region\"].nunique())\ndf_country_stats_alt.sample(5)","6f879bc8":"# Only keep entries with ConfirmedCases > 0\ndf_country_stats_alt = df_country_stats_alt[df_country_stats_alt.ConfirmedCases > 0].reset_index(drop=True)\ndf_country_stats_alt[df_country_stats_alt[\"Country\/Region\"] == \"US\"].tail()","e9b22051":"df_country_stats_alt.rename({\"Country\/Region\": \"Country_Region\"}, inplace=True, axis=1)\ndf_tmp = df_country_stats_alt[df_country_stats_alt.Date <= \"2020-03-18\"].merge(\n    df_country_stats[df_country_stats.Date <= \"2020-03-18\"], on=[\"Country_Region\", \"Date\"], how=\"inner\"\n)\nnp.array_equal(df_tmp[\"ConfirmedCases_x\"].values.astype(\"int\"), df_tmp[\"ConfirmedCases_y\"].values.astype(\"int\"))\ndf_tmp[df_tmp[\"ConfirmedCases_x\"] != df_tmp[\"ConfirmedCases_y\"]]","24251dd9":"df_country_stats = df_country_stats_alt.rename({\"Country_Region\": \"Country\/Region\"}, axis=1)","12a7c9ce":"SAMPLED_COUNTRIES = [\"Iran\", \"Korea, South\", \"Japan\", \"US\", \"Italy\", \"France\", \"Germany\", \"UK\", \"Spain\"]\n# Reference: https:\/\/plot.ly\/python\/time-series\/\nfig = go.Figure(\n    [\n        go.Scatter(\n            x=df_country_stats[df_country_stats[\"Country\/Region\"] == name]['Date'], \n            y=df_country_stats[df_country_stats[\"Country\/Region\"] == name]['ConfirmedCases'], \n            name=name,\n            mode='lines',\n            line=dict(width=2)\n        ) for name in SAMPLED_COUNTRIES\n    ],\n    layout_title_text=\"Cumulative number of cases in Selected Countries\"\n)\nfig.update_layout(\n    yaxis_type=\"log\",\n    margin=dict(l=20, r=20, t=50, b=20),\n    template=\"plotly_white\")\nfig.show()","8851d23a":"fig = go.Figure(\n    [\n        go.Scatter(\n            x=np.arange(df_country_stats[df_country_stats[\"Country\/Region\"] == name].shape[0]), \n            y=df_country_stats[df_country_stats[\"Country\/Region\"] == name]['ConfirmedCases'], \n            name=name,\n            mode='lines',\n            line=dict(width=2)\n        ) for name in SAMPLED_COUNTRIES\n    ],\n    layout_title_text=\"Cumulative number of cases, by number of days since first case\"    \n)\nfig.update_layout(\n    yaxis_type=\"log\",\n    xaxis_title=\"Day\",\n    margin=dict(l=20, r=20, t=50, b=50),\n    template=\"plotly_white\")\nfig.show()","d2ebd297":"fig = go.Figure(\n    [\n        go.Scatter(\n            x=np.arange(df_country_stats[\n                (df_country_stats[\"Country\/Region\"] == name) & (df_country_stats.ConfirmedCases >= 100)\n            ].shape[0]), \n            y=df_country_stats[\n                (df_country_stats[\"Country\/Region\"] == name) & (df_country_stats.ConfirmedCases >= 100)\n            ]['ConfirmedCases'], \n            mode='lines',\n            name=name,\n            line=dict(width=2)\n        ) for name in SAMPLED_COUNTRIES\n    ],\n    layout_title_text=\"Cumulative number of cases, by number of days since the 100th case\"\n)\nfig.update_layout(\n    yaxis_type=\"log\",\n    xaxis_title=\"Day\",\n    margin=dict(l=20, r=20, t=50, b=50),\n    width=800, height=500,\n    template=\"plotly_white\")\nfig.add_shape(\n    type=\"line\",\n#     xref=\"x\",\n#     yref=\"y\",\n    x0=0,\n    y0=100,\n    x1=45,\n    y1=2262,\n    line=dict(\n        color=\"Grey\",\n        width=1,\n        dash=\"dot\"\n    ),\n)\nfig.add_shape(\n    type=\"line\",\n    x0=0,\n    y0=100,\n    x1=45,\n    y1=51200,\n    line=dict(\n        color=\"Grey\",\n        width=1,\n        dash=\"dot\"\n    ),\n)\nfig.add_shape(\n    type=\"line\",\n    x0=0,\n    y0=100,\n    x1=39.86,\n    y1=1000000,\n    line=dict(\n        color=\"Grey\",\n        width=1,\n        dash=\"dot\"\n    ),\n)\nfig.add_shape(\n    type=\"line\",\n    x0=0,\n    y0=100,\n    x1=26.58,\n    y1=1000000,\n    line=dict(\n        color=\"Grey\",\n        width=1,\n        dash=\"dot\"\n    ),\n)\nfig.add_annotation(\n    xref=\"x\",\n    yref=\"y\",    \n    x=18,\n    y=4.63,\n    showarrow=False,\n    text=\"doubling every 2 days\",\n    textangle=-43,\n    font={\n        \"color\": \"Grey\"\n    }\n)\nfig.add_annotation(\n    xref=\"x\",\n    yref=\"y\",    \n    x=27,\n    y=4.63,\n    showarrow=False,\n    text=\"doubling every 3 days\",\n    textangle=-33,\n    font={\n        \"color\": \"Grey\"\n    }\n)\nfig.add_annotation(\n    xref=\"x\",\n    yref=\"y\",    \n    x=28,\n    y=3.63,\n    showarrow=False,\n    text=\"doubling every 5 days\",\n    textangle=-17,\n    font={\n        \"color\": \"Grey\"\n    }\n)\nfig.add_annotation(\n    xref=\"x\",\n    yref=\"y\",    \n    x=28,\n    y=2.78,\n    showarrow=False,\n    text=\"doubling every 10 days\",\n    textangle=-8,\n    font={\n        \"color\": \"Grey\"\n    }\n)\nfig.show()","b70ce4a4":"## Aggregate to the country level","c6bb5686":"Alternative datset (time series):","ddcd2060":"This is a preliminary work attempting to reproduce the charts by [FT](https:\/\/www.ft.com\/content\/a26fbf7e-48f8-11ea-aeb3-955839e06441) and [Our World In Data](https:\/\/ourworldindata.org\/coronavirus#trajectories-since-the-100th-confirmed-case) (attached below) using Plotly.\n\n(The US data in the [provided data set](https:\/\/www.kaggle.com\/c\/covid19-global-forecasting-week-1\/data) seems weird and does not match data in other charts. I'm not sure if there's a bug in my code or the difference in data collection methods.) (Update: the timeseries data from the [CSSEGISandData \/ COVID-19](https:\/\/github.com\/CSSEGISandData\/COVID-19) Github repo seems more consistent with other sources, so I switched to it(via [this Kaggle dataset](https:\/\/www.kaggle.com\/sudalairajkumar\/novel-corona-virus-2019-dataset\/)). The comparison between the two dataset are also provided in the notebook)","9618e6ae":"## By number of days since 100th case","c7f452b0":"![FT chart](https:\/\/www.ft.com\/__origami\/service\/image\/v2\/images\/raw\/http%3A%2F%2Fcom.ft.imagepublish.upp-prod-us.s3.amazonaws.com%2Febcfb388-6ae3-11ea-800d-da70cff6e4d3?fit=scale-down&quality=highest&source=next&width=1260)","e1a8d09c":"## By calendar dates","ad54aee6":"Updated on April 16","852b5dcf":"## By number of days since first case","352386f1":"### Test consistency","be094290":"Use the alternative source (ConfirmedCases_y):"}}