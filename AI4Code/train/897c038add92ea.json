{"cell_type":{"f533a20c":"code","a95f53e0":"code","5a26f715":"code","4cfaf7bf":"code","34cf4c72":"code","266ab45b":"code","93896d80":"code","3684ffec":"code","cfdb560c":"code","7b9599fc":"code","ef86ac2e":"code","b868f84f":"code","e4fb0d8d":"code","d46e7355":"code","c3011d46":"markdown","be87f8ca":"markdown","9ae30508":"markdown","72638f4e":"markdown","2ea3b08f":"markdown","eeaf68fa":"markdown","809a8a3f":"markdown","35e8f630":"markdown"},"source":{"f533a20c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os, glob, pickle, time, gc, copy, sys\nimport warnings\nfrom tqdm import tqdm\nfrom sklearn import metrics\n\ntqdm.pandas()\nwarnings.filterwarnings('ignore')\npd.set_option('display.max_columns', 100)","a95f53e0":"df_train = pd.read_csv(\"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train_labels.csv\")\nprint('len(df_train): {}'.format(len(df_train)))\nprint(\"df_train['MGMT_value'].mean(): {:.6f}\".format(df_train['MGMT_value'].mean()))\ndf_train.head()","5a26f715":"df_test = pd.read_csv(\"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/sample_submission.csv\")\nprint('len(df_test): {}'.format(len(df_test)))\ndf_test.head()","4cfaf7bf":"df_test = pd.concat([df_test, df_test, df_test, df_test], ignore_index = True)\nprint('len(df_test): {}'.format(len(df_test)))\ndf_test.head()","34cf4c72":"# assume that positive rate of the test data is same with the train data.\nnum_positive = int(len(df_test)*df_train['MGMT_value'].mean())\nprint(\"num_positive: {}\".format(num_positive))","266ab45b":"# make true labels\ny_true = np.zeros(len(df_test))\ny_true[:num_positive] = 1\nprint(\"y_true.mean(): {:.6f}\".format(y_true.mean()))","93896d80":"# make random prediction\ny_pred = np.random.rand(len(df_test))\ny_pred","3684ffec":"# calculate the score\nfrom sklearn import metrics\nscore = metrics.roc_auc_score(y_true, y_pred)\nprint(\"score: {:.6f}\".format(score))","cfdb560c":"from tqdm.auto import tqdm","7b9599fc":"# try random prediction 100000 times.\nscores = []\nfor i in tqdm(range(100000)):\n    np.random.seed(i)\n    y_pred = np.random.rand(len(df_test))\n    score = metrics.roc_auc_score(y_true, y_pred)\n    scores.append(score)\ndf_score = pd.DataFrame(scores, columns=['score'])\ndf_score = df_score.sort_values('score').reset_index(drop=True)\nplt.hist(df_score['score'], bins=10)\nplt.show()\ndf_score.tail()","ef86ac2e":"print(f'(1 random sub) percentile-50 : {np.percentile(scores, 50)}')\nprint(f'(1 random sub) percentile-90 : {np.percentile(scores, 90)}')\nprint(f'(1 random sub) percentile-95 : {np.percentile(scores, 95)}')\nprint(f'(1 random sub) percentile-99 : {np.percentile(scores, 99)}')\nprint(f'(1 random sub) percentile-99.9 : {np.percentile(scores, 99.9)}')\nprint(f'(1 random sub) percentile-99.99 : {np.percentile(scores, 99.99)}')","b868f84f":"import random\n\nscores_2 = []\n\n# pick k random scores randomly from the 1M pool\nfor i in tqdm(range(10000)):\n    random.seed(i)\n    \n    scores_2.append(np.max(random.choices(scores, k=2)))","e4fb0d8d":"print(f'(2 random subs) percentile-50 : {np.percentile(scores_2, 50)}')\nprint(f'(2 random subs) percentile-90 : {np.percentile(scores_2, 90)}')\nprint(f'(2 random subs) percentile-95 : {np.percentile(scores_2, 95)}')\nprint(f'(2 random subs) percentile-99 : {np.percentile(scores_2, 99)}')\nprint(f'(2 random subs) percentile-99.9 : {np.percentile(scores_2, 99.9)}')\nprint(f'(2 random subs) percentile-99.99 : {np.percentile(scores_2, 99.99)}')","d46e7355":"sub = pd.read_csv('\/kaggle\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/sample_submission.csv')\n\n# Fill with random values\nmgmt_values = sub.MGMT_value.values\nmgmt_values = [np.random.random() for _ in mgmt_values]\nsub['MGMT_value'] = mgmt_values\n\n# save\nsub.to_csv('submission.csv',index=False)\nsub.head()","c3011d46":"## Simulate Private score after two allowed all-random submits\n\nPrivate shows the maximum score out of two selected submit.","be87f8ca":"## One submission\n\nWith one all-random submit, the median LB score is 0.5 AUC. ","9ae30508":"# Submit all random\n\nFor fun :)","72638f4e":"The simulations above shows that a score of about 0.65 is almost by chance. Don't believe the public LB score too much. ","2ea3b08f":"# Data loading","eeaf68fa":"# Private LB simulation","809a8a3f":"This is a fork of osciiart's notebook: https:\/\/www.kaggle.com\/osciiart\/public-lb-simulation\n\nI continued the analysis to simulate private score after **two** random-value submits.","35e8f630":"The public test data has only 87 samples and the private test was approx. four times larger.\n\n> The private leaderboard is calculated with approximately 78% of the test data.\n\nWe can multiply the public test set to four times bigger to simulate the private set."}}