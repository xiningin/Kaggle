{"cell_type":{"48c4c20a":"code","8d82b5d2":"code","da22f411":"markdown"},"source":{"48c4c20a":"def largest(l:list)-> list:\n    result = []\n    for i in l:\n        if i > 0: result.append(i)\n    return sum(result), result","8d82b5d2":"largest([8, -1, 3, 4]), largest( [-4, 5, 1, 0])","da22f411":"Good morning! Here's your coding interview problem for today.\n\nThis problem was asked by Facebook.\n\nGiven a circular array, compute its maximum subarray sum in O(n) time. A subarray can be empty, and in this case the sum is 0.\n\nFor example, given [8, -1, 3, 4], return 15 as we choose the numbers 3, 4, and 8 where the 8 is obtained from wrapping around.\n\nGiven [-4, 5, 1, 0], return 6 as we choose the numbers 5 and 1."}}