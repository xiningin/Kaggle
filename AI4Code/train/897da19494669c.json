{"cell_type":{"d5af26ea":"code","14426789":"code","90e74062":"code","f17e4ab6":"code","5ac13d26":"code","40814b5a":"code","ccdbdd2a":"code","0ba5194f":"code","bde57fd6":"code","e3181bb2":"code","64b43e23":"code","62e977e0":"code","da6f7f86":"code","7092bd5b":"code","40fafe46":"code","dc1b9c39":"code","cc96a2e5":"code","2d1491ff":"code","486c0fce":"code","0de4592c":"code","80244ca1":"code","e7d7b239":"code","d39706fc":"code","1f272850":"markdown","01372c4e":"markdown","1d551672":"markdown","379e9757":"markdown"},"source":{"d5af26ea":"from fastai.tabular import *\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","14426789":"path = \"\/kaggle\/input\/titanic\/\"\nbase_path=\"..\/output\"\nBATCH_SIZE=128","90e74062":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\nsubmission = pd.read_csv(\"\/kaggle\/input\/titanic\/gender_submission.csv\")","f17e4ab6":"train.head()","5ac13d26":"test.head()","40814b5a":"#Missing values in training set\nprint(train.isnull().sum())\nprint(train.shape)\n#Missing values in test set\nprint(test.isnull().sum())\nprint(test.shape)","ccdbdd2a":"train.describe(include='all')","0ba5194f":"test = test.fillna({'Fare':0})","bde57fd6":"train['isChild'] = train['Age'].apply(lambda x: True if x <=16 else False)\ntrain['isOld'] = train['Age'].apply(lambda x: True if x >=50 else False)\n\ntest['isChild'] = test['Age'].apply(lambda x: True if x <=16 else False)\ntest['isOld'] = test['Age'].apply(lambda x: True if x >=50 else False)\ntest.head()","e3181bb2":"train[['Last','First']] = train['Name'].str.split(\",\",expand=True)\ntrain[['Title','First']] = train['First'].str.split(\".\",1,expand=True)\n\ntest[['Last','First']] = test['Name'].str.split(\",\",expand=True)\ntest[['Title','First']] = test['First'].str.split(\".\",1,expand=True)\n\ntrain.head(2)","64b43e23":"dep_var = 'Survived'\ncat_names = ['Sex', 'Pclass', 'Embarked','isChild','isOld', 'Last', 'First', 'Title']\ncont_names = ['Age', 'Parch','Fare','SibSp']\nprocs = [FillMissing, Categorify, Normalize]","62e977e0":"data_test = TabularList.from_df(test, cat_names=cat_names, cont_names=cont_names)","da6f7f86":"data = (TabularList.from_df(train, path='.', cat_names=cat_names, cont_names=cont_names, procs=procs)\n                           .split_by_idx(list(range(0,200)))\n                           .label_from_df(cols=dep_var)\n                           .add_test(data_test, label=0)\n                           .databunch())\ndata.show_batch(rows=5)","7092bd5b":"np.random.seed(42)\nlearn = tabular_learner(data, layers=[200,100], metrics=[accuracy])","40fafe46":"learn.lr_find()\nlearn.recorder.plot(suggestion=True)","dc1b9c39":"learn.fit_one_cycle(5, 3e-2)","cc96a2e5":"learn.save('fit_head')","2d1491ff":"learn.load('fit_head');","486c0fce":"learn.unfreeze()\n#learn.lr_find()\n#learn.recorder.plot(suggestion=True)","0de4592c":"learn.fit_one_cycle(2, max_lr=slice(3e-3))","80244ca1":"predictions, *_ = learn.get_preds(DatasetType.Test)\nlabels = np.argmax(predictions, 1)","e7d7b239":"test_id = test['PassengerId']","d39706fc":"# create submission file to submit in Kaggle competition\nsubmission = pd.DataFrame({'PassengerId': test_id, 'Survived': labels})\nsubmission.to_csv('submission.csv', index=False)","1f272850":"# EDA and Pre Proccessing","01372c4e":"There is a null in Fare, lets remove that","1d551672":"# Fastai Tabular V1 Titanic Classification\n\nUse fastai tabular for the titanic dataset with limited preprocessing steps","379e9757":"# Data Bunch"}}