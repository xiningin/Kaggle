{"cell_type":{"bbd70ee1":"code","001cc581":"code","11cdcae2":"code","4e0b8107":"code","46f6c7f7":"markdown","064115c4":"markdown","5a1d4f1b":"markdown","d5d542e1":"markdown","367e0de7":"markdown","def36f28":"markdown"},"source":{"bbd70ee1":"import matplotlib.pyplot as plt\nimport numpy as np\n%matplotlib inline\n\n\n#Bar Chart\n\nx=[\"A\",\"B\" , \"AB\" , \"O\"]\nh=[30,24,8,38]\nfig = plt.figure(figsize=(8,4))\nc=[\"steelblue\",\"orange\",\"green\",\"crimson\"]\nax=fig.add_axes([0,0,1,1])\nax.bar(x,h,color=c,width=0.5)\n\n\nplt.xticks(fontsize =14)\nplt.yticks(fontsize =14)\n\n\n\nax.set_title('Observation Blood Type' , fontsize=14)\nax.set_xlabel('Blood Type' , fontsize=18)\nax.set_ylabel('Number' , fontsize=18)\nax.legend(\"Blood Group\" , loc=2, fontsize=18)\n\nplt.legend()\nplt.show()\n","001cc581":"#Pie Chart\n\nslices=[30,24,8,38]\ntypes=['A','B','AB','O']\ne=(0,0.20,0,0)\n\n\nfig, ax = plt.subplots()\nax.pie(slices,labels =types,autopct='%1.1f%%',textprops={\"fontsize\":14},colors=[\"steelblue\",\"orange\",\"green\",\"crimson\"],radius = 1.9,wedgeprops={\"edgecolor\":\"white\",\"linewidth\":4},explode=e,shadow=True)\n#plt.title(\"\", fontsize=9, loc= 'left')\nplt.show()\n","11cdcae2":"x = [5,7,8,7,2,17,2,9,4,11,12,9,6]\ny = [99,86,87,88,111,86,103,87,94,78,77,85,86]\nplt.grid()\nplt.scatter(x,y,marker=\"X\",c='crimson')\nplt.title('Scatter Plot',fontsize=16)\nplt.xlabel('Horizontal axis',fontsize=12)\nplt.ylabel('Vertical axis',fontsize=12)","4e0b8107":"import pandas as pd\ndata = np.random.normal(170, 10, 300)\n\nplt.hist(data,color=\"lime\", edgecolor=\"white\")\nplt.title(\"Random Numbers\", fontsize =18)\n","46f6c7f7":"<h2>Q1- create bar chart and pie chart for Blood type information<\/h2>","064115c4":"<h2>differences between histograms and bar charts<\/h2>","5a1d4f1b":"<h1 style=\"font-family:verdana;\">Introduction<\/h1>\n<i><h4><b>As goes the well-known saying, \"A picture is worth a thousand words\".<\/b><\/h4><\/i>\n\n<p style=\"font-family:verdana;\">To understand the data contained in this table we will visualize it with various Matplotlib's charts like Bar, Pie chart and histogram <\/p>\n\n<b><h5 style=\"font-color : gray\">This notebook has 3 sections of code  seen below.<\/h5><b>\n<ul><h4>\n    <li>Introduction<\/li>\n    <li>Section 1 - Visualize blood type information of 1,000 people using Bar chart & Pie Charts<\/li>\n<li>Section 2 - Create scatter plot with some data<\/li>\n<li>Section 3 - Create histogram for  300 observations by numpy<\/li>\n<li>differences between histograms and bar charts<\/li>\n    <\/h4><\/ul>\n\n<b>Kindly UPVOTE  if you find the work useful<\/b>\n","d5d542e1":"  \n  <h3>Histograms and bar charts display different types of data<\/h3>\n    \n    \n<p>Histograms visualize quantitative data or numerical data, whereas bar charts display categorical variables.<\/p>\n\nIn most instances, the numerical data in a histogram will be continuous (having infinite values). Attempting to display all possible values of a continuous variable along an axis would be foolish. Instead, the continuous data is grouped into ranges called bins. In the property sales histogram. \n\n<h7>Unlike histograms, bar charts have a finite set of categories<\/h7>\n\n<p>One caveat is when your numerical data is discrete\u2014meaning it\u2019s countable. With discrete data, the distinction between a histogram and a bar chart is less obvious. You could use either. The choice will depend on your purpose and how many discrete values you have. For example, property price is technically a discrete value, but because of the variability and wide range of values, it is easier to treat it as continuous\u2014grouping values into manageable bins.<\/p>\n\n<h3>Histograms and bar charts have different formatting rules<\/h3>\n<p>With bar charts, as with most graphs, there is a fair amount of flexibility regarding format and design. Histograms, on the other hand, are subject to rigid rules. Let\u2019s look at three main areas where bars and histograms have varying formatting constraints.<\/p>","367e0de7":"<h2>Q3- By using the NUMPY library, generate 300 observation that have a normal distribution with an mean of 170 and standard deviation of 10, and then generate a hysotogram.<\/h2>","def36f28":"<h2>Q2- Consider the following observations  create a Scatter Plot<\/h2>"}}