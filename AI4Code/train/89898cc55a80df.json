{"cell_type":{"da10b4d1":"code","38cbf5dd":"code","daf738e6":"code","033dfb8a":"code","e39b989c":"code","2f990ded":"code","5ed3e1a9":"code","2a4664ed":"code","73729015":"code","0cf9bb35":"code","44f537e6":"code","9c3eb5c0":"code","cb52c77b":"code","d1c7afd1":"code","ad81cfb8":"code","3f68a7db":"code","662052a2":"code","d28b38d4":"code","de5c9a15":"code","de604dba":"code","7ecf4eaa":"code","6b26b3c2":"code","8de1bd54":"code","11ebbbf3":"code","a62628ae":"code","07e67764":"code","9c7a730d":"code","eb16f200":"code","f7be7c98":"code","20e13a50":"code","ce855793":"code","4bdb919a":"code","d3b76d2c":"code","7b17147b":"code","8fc34fd0":"code","12b38eb0":"code","878fbeda":"code","332ab792":"code","126eaecf":"code","ce6bd8a0":"code","bdf01560":"code","fb46753f":"code","de06a9e1":"code","0eff50fb":"code","eaf9545a":"code","7be5ef49":"code","1d72a5d9":"code","40962f25":"code","aa5be544":"code","d229318c":"code","53cee4b2":"code","cff507c7":"code","42dffbe2":"code","4ab65ace":"code","d2ccbafd":"code","de90d9ef":"code","62914be3":"code","0cd16554":"code","9ebefe90":"code","3c85ff8d":"code","2abd63bf":"code","85cfb312":"code","d3ab77c9":"code","0a00d06d":"code","711db439":"code","b021fc09":"code","67957f7d":"code","fa8dc728":"code","82e9ef1b":"code","91d3557b":"code","b270417d":"code","486447f5":"markdown","d6b4f493":"markdown","008d105d":"markdown","e53d7b3d":"markdown","6428fecd":"markdown","89b6281c":"markdown","ce321b30":"markdown","bd0e7f6a":"markdown","0c7dd342":"markdown","feb4c5df":"markdown","29a4a1af":"markdown","ef9688e5":"markdown","4bd51a52":"markdown","ffbeb068":"markdown","14599d36":"markdown","c99635f2":"markdown","dbb380e1":"markdown","6fc204f3":"markdown","5553f5bf":"markdown","8ed8abb7":"markdown","46a5c2ea":"markdown","e6723507":"markdown","10957cda":"markdown","da1362e3":"markdown","c6efd016":"markdown","72c68b00":"markdown","53799e25":"markdown","94503491":"markdown","9fa0bf5a":"markdown"},"source":{"da10b4d1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","38cbf5dd":"import numpy as np \nimport pandas as pd\nimport datetime\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n# Plotly Libraris\nimport plotly.express as px\nimport plotly.graph_objects as go\n\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","daf738e6":"student=pd.read_csv(\"\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv\")\ndf=student.copy()\ndf.head()","033dfb8a":"df.info()","e39b989c":"df.describe().T","2f990ded":"df.corr()","5ed3e1a9":"df.rename(columns = {'race\/ethnicity': 'race'}, inplace = True)","2a4664ed":"ax = sns.barplot(x=\"race\", y=\"math score\", data=df)\nplt.ylabel('Math Score')\nplt.xlabel('Race')\nplt.title('Math Score With Race');","73729015":"ax = sns.barplot(x=\"race\", y=\"math score\", hue=\"gender\", data=df,palette='autumn')\nplt.ylabel('Math Score')\nplt.xlabel('Race')\nplt.title('Math Score With Race,Gender');","0cf9bb35":"ax = sns.barplot(x=\"race\", y=\"math score\", hue=\"parental level of education\", data=df,palette='rainbow')\nplt.ylabel('Math Score')\nplt.xlabel('Race')\nplt.title('Math Score With Race,Gender,Parental Level Of Education');","44f537e6":"ax = sns.barplot(x=\"race\", y=\"reading score\", data=df,\n                 linewidth=2.5, facecolor=(1, 1, 1, 0),\n                 errcolor=\".2\", edgecolor=\".2\")\nplt.ylabel('Reading Score')\nplt.xlabel('Race')\nplt.title('Reading Score With Race');","9c3eb5c0":"df_rece_math=df.groupby(by =['race'])['reading score'].mean().to_frame().reset_index().rename(columns={'race':'Race','reading score':'Reading Score'})\n\nfig = go.Figure(go.Bar(\n    y=df_rece_math['Race'],x=df_rece_math['Reading Score'],orientation=\"h\",\n    marker={'color': df_rece_math['Reading Score'], \n    'colorscale': 'sunsetdark'},  \n    text=df_rece_math['Reading Score'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='Mean Reading Score',xaxis_title=\"Race\",yaxis_title=\"Reading Score\",title_x=0.5)\nfig.show()","cb52c77b":"df_rece_math=df.groupby(by =['race'])['reading score'].mean().to_frame().reset_index().rename(columns={'race':'Race','reading score':'Reading Score'})\n\nfig = go.Figure(go.Bar(\n    x=df_rece_math['Race'],y=df_rece_math['Reading Score'],\n    marker={'color': df_rece_math['Reading Score'], \n    'colorscale': 'Viridis'},  \n    text=df_rece_math['Reading Score'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='Mean Reading Score',xaxis_title=\"Race\",yaxis_title=\"Reading Score\",title_x=0.5)\nfig.show()","d1c7afd1":"df_rece_gender_math=df.groupby(by =['race','gender'])['reading score'].mean().to_frame().reset_index().rename(columns={'race':'Race','reading score':'Reading Score'})\n\nfig = px.bar(df_rece_gender_math, x=\"Race\", y=\"Reading Score\",color=\"gender\",barmode=\"group\",\n             \n             )\nfig.update_layout(title_text='Mean Reading Score with Gender',title_x=0.5)\nfig.show()","ad81cfb8":"df_rece_gender_math=df.groupby(by =['race','parental level of education'])['reading score'].mean().to_frame().reset_index().rename(columns={'race':'Race','reading score':'Reading Score'})\n\nfig = px.bar(df_rece_gender_math, x=\"Race\", y=\"Reading Score\",color=\"parental level of education\",barmode=\"group\",\n             \n             )\nfig.update_layout(title_text='Mean Reading Score with Gender',title_x=0.5)\nfig.show()","3f68a7db":"sns.scatterplot(data=df, x=\"math score\", y=\"reading score\")\nplt.ylabel('Reading Score')\nplt.xlabel('Math Score')\nplt.title('Reading Score With Math Score');","662052a2":"sns.scatterplot(data=df, x=\"writing score\", y=\"math score\", hue=\"gender\", style=\"gender\")\nplt.ylabel('Reading Score')\nplt.xlabel('Writing Score')\nplt.title('Reading Score Vs Writing Score With Gender');","d28b38d4":"sns.scatterplot(data=df, x=\"writing score\", y=\"math score\", hue=\"parental level of education\")\nplt.ylabel('Math Score')\nplt.xlabel('Writing Score')\nplt.title('Math Score Vs Writing Score With Parental Level Of Education');","de5c9a15":"fig = px.scatter(df, x='math score', y='writing score')\nfig.update_layout(title='Math Score Vs Writing Score',xaxis_title=\"Math Score\",yaxis_title=\"Writing Score\",title_x=0.5)\nfig.show()","de604dba":"fig = px.scatter(df, x='math score', y='writing score', color='gender')\nfig.update_layout(title='Math Score Vs Writing Score With Gender',xaxis_title=\"Math Score\",yaxis_title=\"Writing Score\",title_x=0.5)\nfig.show()","7ecf4eaa":"fig = go.Figure(data=go.Scatter(x=df['parental level of education'],\n                                y=df['math score'],\n                                mode='markers',\n                                marker_color=df['math score'],\n                                text=df['parental level of education'])) # hover text goes here\n\nfig.update_layout(title='Math Score With Parental Level Of Education',title_x=0.5)\nfig.show()","6b26b3c2":"fig = px.scatter(df, x='math score', y='writing score', color='parental level of education')\nfig.update_layout(title='Math Score Vs Writing Score With Parental Level Of Education',xaxis_title=\"Math Score\",yaxis_title=\"Writing Score\",title_x=0.5)\nfig.show()","8de1bd54":"sns.lineplot(data=df, x=\"math score\", y=\"reading score\")\nplt.ylabel('Reading Score')\nplt.xlabel('Math Score')\nplt.title('Reading Score Vs Math Score ');","11ebbbf3":"sns.lineplot(data=df, x=\"math score\", y=\"reading score\",hue='gender')\nplt.ylabel('Reading Score')\nplt.xlabel('Math Score')\nplt.title('Reading Score Vs Math Score With Gender');","a62628ae":"sns.lineplot(data=df, x=\"math score\", y=\"reading score\", hue=\"race\")\nplt.ylabel('Reading Score')\nplt.xlabel('Math Score')\nplt.title('Reading Score Vs Math Score With Race');","07e67764":"df_rece_gender_reading=df.groupby(by =['race','parental level of education'])['reading score'].mean().to_frame().reset_index().rename(columns={'race':'Race','reading score':'Reading Score'})\n\ndf_groupa=df_rece_gender_reading[df_rece_gender_reading['Race']=='group A']\n\nfig = go.Figure(go.Scatter(x=df_groupa['parental level of education'], y=df_groupa['Reading Score']))\nfig.show()","9c7a730d":"df_rece_gender_reading=df.groupby(by =['race','parental level of education'])['reading score'].mean().to_frame().reset_index().rename(columns={'race':'Race','reading score':'Reading Score'})\n\ndf_groupa=df_rece_gender_reading[df_rece_gender_reading['Race']=='group A']\ndf_groupb=df_rece_gender_reading[df_rece_gender_reading['Race']=='group B']\ndf_groupc=df_rece_gender_reading[df_rece_gender_reading['Race']=='group C']\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=df_groupa['parental level of education'],\n                         y=df_groupa['Reading Score'],\n                    mode='lines+markers',\n                    name='group A'))\nfig.add_trace(go.Scatter(x=df_groupb['parental level of education'],\n                         y=df_groupb['Reading Score'],\n                    mode='lines',\n                    name='group B'))\nfig.add_trace(go.Scatter(x=df_groupc['parental level of education'],\n                         y=df_groupc['Reading Score'],\n                    mode='markers', name='group C'))\n\nfig.show()","eb16f200":"df_rece_gender_reading=df.groupby(by =['race','parental level of education'])['reading score'].mean().to_frame().reset_index().rename(columns={'race':'Race','reading score':'Reading Score'})\n\ndf_groupd=df_rece_gender_reading[df_rece_gender_reading['Race']=='group D']\ndf_groupe=df_rece_gender_reading[df_rece_gender_reading['Race']=='group E']\n\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=df_groupd['parental level of education'],\n                         y=df_groupd['Reading Score'],\n                         name='group D',\n                         line=dict(color='brown', width=4,dash=\"dash\")))\nfig.add_trace(go.Scatter(x=df_groupe['parental level of education'],\n                         y=df_groupe['Reading Score'],\n                         name='group E',\n                         line=dict(color='green', width=4,dash=\"dashdot\")))\n\n\nfig.show()","f7be7c98":"# Race rates according in data \n\nlabels = df.race.value_counts().index\ncolors = ['grey','blue','red','yellow','green']\nexplode = [0.1,0,0,0,0]\nsizes = df.race.value_counts().values\n\n# visual\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Race ',color = 'blue',fontsize = 15);","20e13a50":"\ndf_category=df['gender'].value_counts().to_frame().reset_index().rename(columns={'index':'gender','gender':'count'})\n\n\nfig = go.Figure([go.Pie(labels=df_category['gender'], values=df_category['count'])])\n\nfig.update_traces(hoverinfo='label+percent', textinfo='value+percent', textfont_size=12,insidetextorientation='radial')\n\nfig.update_layout(title=\"Gender Count\",title_x=0.5)\nfig.show()","ce855793":"\ndf_category=df['parental level of education'].value_counts().to_frame().reset_index().rename(columns={'index':'parental level of education','parental level of education':'count'})\n\n\nfig = go.Figure([go.Pie(labels=df_category['parental level of education'], values=df_category['count'],hole=0.3)]) # can change the size of hole \n\nfig.update_traces(hoverinfo='label+percent', textinfo='value+percent', textfont_size=12,insidetextorientation='radial')\n\nfig.update_layout(title=\"Parental Level Of Education Students Count\",title_x=0.5)\nfig.show()","4bdb919a":"df_race=df['race'].value_counts().to_frame().reset_index().rename(columns={'index':'race','race':'count'})\n\ncolors=['cyan','royalblue','blue','darkblue',\"darkcyan\"]\nfig = go.Figure([go.Pie(labels=df_race['race'], values=df_race['count'])])\nfig.update_traces(hoverinfo='label+percent', textinfo='percent+label', textfont_size=15,\n                 marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.update_layout(title=\"Race Students Count\",title_x=0.5)\nfig.show()","d3b76d2c":"df_parental=df['parental level of education'].value_counts().to_frame().reset_index().rename(columns={'index':'parental level of education','parental level of education':'Count'})\ndf_parental\n\nfig = go.Figure(data=[go.Scatter(\n    x=df_parental['parental level of education'], y=df_parental['Count'],\n    mode='markers',\n    marker=dict(\n        color=df_parental['Count'],\n        size=df_parental['Count']*0.3, # Multiplying by 0.3 to reduce size and stay uniform accross all points\n        showscale=True\n    ))])\n\nfig.update_layout(title='Parental Level Of Education',xaxis_title=\"Level Of Education\",yaxis_title=\"Number Of Student\",title_x=0.5)\nfig.show()","7b17147b":"ax = sns.countplot(x=\"gender\", data=df)\nplt.ylabel('Count')\nplt.xlabel('Gender')\nplt.title('Gender Count');","8fc34fd0":"ax = sns.countplot(x=\"gender\", hue='race',data=df,palette='bone')\nplt.ylabel('Count')\nplt.xlabel('Gender')\nplt.title('Gender Count With Race');","12b38eb0":"g = sns.catplot(x=\"gender\", hue=\"race\", col=\"lunch\",\n                data=df, kind=\"count\",\n                height=4, aspect=.7);\n","878fbeda":"ax = sns.swarmplot(x=df[\"math score\"])\nplt.xlabel('Math Score')\nplt.title('Math Score Distribution');","332ab792":"ax = sns.swarmplot(y=\"math score\",x='race',data=df)\nplt.ylabel('Math Score')\nplt.title('Math Score Distribution With Race');","126eaecf":"ax = sns.swarmplot(x=\"race\", y=\"math score\", hue=\"gender\", data=df)\nplt.ylabel('Math Score');\nplt.title('Math Score Distribution With Gender');","ce6bd8a0":"sns.pairplot(df);\n","bdf01560":"sns.pairplot(df, hue=\"gender\");","fb46753f":"sns.pairplot(df, hue=\"gender\", diag_kind=\"hist\");","de06a9e1":"sns.jointplot(data=df, x=\"math score\", y=\"reading score\");\n","0eff50fb":"sns.jointplot(data=df, x=\"math score\", y=\"reading score\", kind=\"reg\");","eaf9545a":"sns.jointplot(data=df, x=\"math score\", y=\"reading score\", kind=\"hex\");","7be5ef49":"ax = sns.pointplot(y=\"math score\", x=\"gender\", data=df,hue='lunch',palette=\"gnuplot\")\nplt.xlabel('Gender')\nplt.ylabel('Math Score');\n","1d72a5d9":"ax = sns.pointplot(x=\"math score\", y=\"gender\", data=df,hue='race',palette=\"ocean\")\nplt.ylabel('Gender')\nplt.xlabel('Math Score');","40962f25":"g = sns.catplot(x=\"gender\", y=\"math score\",\n                hue=\"race\", col=\"lunch\",\n                data=df, kind=\"point\",\n                dodge=True,\n                height=4, aspect=.7);\n","aa5be544":"sns.kdeplot(df['math score'],shade=True,color='LightSeaGreen');\nplt.ylabel('Possibility')\nplt.xlabel('Math Score');","d229318c":"sns.kdeplot(df['reading score'],color='Indigo')\nsns.kdeplot(df['writing score'],color='IndianRed')\nplt.ylabel('Possibility')\nplt.xlabel('Score');","53cee4b2":"sns.kdeplot(df['math score'],df['writing score'])\nplt.ylabel('Writing Score')\nplt.xlabel('Math Score')\nplt.show()","cff507c7":"ax = sns.boxplot(x=df[\"math score\"])\n\nplt.xlabel('Math Score Distributions ')\nplt.show()","42dffbe2":"ax = sns.boxplot(y=\"math score\", x=\"gender\", data=df)\nplt.ylabel('Math Score ')\nplt.xlabel('Gender ')\nplt.title('Math Score Distributions With Gender')\nplt.show()\n","4ab65ace":"ax = sns.boxplot(x=\"gender\", y=\"math score\", hue=\"lunch\",\n                 data=df, linewidth=2.5)\nplt.ylabel('Math Score ')\nplt.xlabel('Gender ')\nplt.title('Math Score Distributions With Gender,Lunch')\nplt.show()","d2ccbafd":"ax = sns.boxplot(data=df, orient=\"h\", palette=\"gist_rainbow\")\nplt.xlabel(' Score ')\nplt.title('Math,Reading And Writing Score Distributions ')\nplt.show()","de90d9ef":"ax = sns.boxplot(x=\"race\", y=\"math score\", data=df)\nax = sns.swarmplot(x=\"race\", y=\"math score\", data=df, color=\".25\")\nplt.xlabel(' Race ')\nplt.ylabel('Math Score ')\nplt.title('Math Score Distributions With Box And Swarm plot ')\nplt.show()","62914be3":"ax = sns.violinplot(x=\"gender\", y=\"math score\", data=df)\nplt.xlabel(' Gender ')\nplt.ylabel('Math Score ')\nplt.title('Math Score Distributions With Gender ')\nplt.show()","0cd16554":"ax = sns.violinplot(x=\"gender\", y=\"math score\", hue=\"race\",\n                    data=df, palette=\"cool\")\nplt.xlabel(' Gender ')\nplt.ylabel('Math Score ')\nplt.title('Math Score Distributions With Gender,Race ')\nplt.show()","9ebefe90":"ax = sns.violinplot(data=df, palette=\"coolwarm\")\nplt.ylabel(' Score ')\nplt.title('Math,Reading And Writing Score Distributions')\nplt.show()","3c85ff8d":"ax=sns.distplot(df[\"math score\"])\nplt.ylabel(' Possibility ')\nplt.xlabel(' Score ')\nplt.title('Math Score Distributions')\nplt.show()\n","2abd63bf":"sns.distplot(df['reading score'], bins = 10, kde = False);\nplt.ylabel(' Count ')\nplt.xlabel(' Score ')\nplt.title('Reading Score Distributions')\nplt.show()\n","85cfb312":"sns.heatmap(df.corr(),annot=True, linewidths=.5,fmt=\"f\", cmap=\"inferno\")\nplt.show()","d3ab77c9":"fig = go.Figure(data=[go.Histogram(x=df['math score'],  # To get Horizontal plot ,change axis \n                                  marker_color=\"DarkOrange\",\n                      xbins=dict(\n                      start=0, #start range of bin\n                      end=100,  #end range of bin\n                      size=10    #size of bin\n                      ))])\nfig.update_layout(title=\"Distribution Of Math Score\",xaxis_title=\"Points\",yaxis_title=\"Counts\",title_x=0.5)\nfig.show()","0a00d06d":"fig = go.Figure(data=[go.Histogram(x=df['math score'],histnorm='probability',\n                                  marker_color=\"orange\")]) # To get Horizontal plot ,change axis \nfig.update_layout(title=\"Distribution of Math Score\",xaxis_title=\"Score\",yaxis_title=\"Possibility\")\nfig.show()","711db439":"fig = go.Figure()\nfig.add_trace(go.Histogram(x=df['math score'],marker_color=\"green\",name=\"Math\"))\nfig.add_trace(go.Histogram(x=df['reading score'],marker_color=\"orange\",name=\"Reading\"))\n#fig.add_trace(go.Histogram(x=df['writing score'],marker_color=\"SaddleBrown\",name=\"Writing\"))\n# Overlay both histograms\nfig.update_layout(barmode='overlay')\n# Reduce opacity to see both histograms\nfig.update_traces(opacity=0.55)\nfig.update_layout(title=\"Distribution Of Math &  Reading Score\",xaxis_title=\"Score\",title_x=0.5,yaxis_title=\"Counts\")\nfig.show()","b021fc09":"fig = go.Figure(go.Box(y=df['reading score'],name=\"Reading Score\")) # to get Horizonal plot change axis \nfig.update_layout(title=\"Distribution of Reading Score\",title_x=0.5)\nfig.show()","67957f7d":"fig = go.Figure()\nfig.add_trace(go.Box(y=df['math score'],\n                     marker_color=\"Maroon\",\n                     boxmean='sd',\n                     name=\"Math Score\"))\nfig.add_trace(go.Box(y=df['reading score'],\n                     boxmean=True,\n                     marker_color=\"Plum\",\n                     name=\"Reading Score\"))\nfig.add_trace(go.Box(y=df['writing score'],\n                     boxpoints='all',\n                     marker_color=\"SandyBrown\",\n                     name=\"Writing Score\"))\nfig.update_layout(title=\"Distribution of Math Reading Writing Score\",title_x=0.5)\nfig.show()","fa8dc728":"fig = go.Figure(data=go.Violin(y=df['math score'],\n                               marker_color=\"Sienna\",\n                               x0='Math score'))\n\nfig.update_layout(title=\"Distribution of Math Score\",title_x=0.5)\nfig.show()","82e9ef1b":"fig = go.Figure()\nfig.add_trace(go.Violin(y=df['math score'],\n                     marker_color=\"Tomato\",\n                     box_visible=True, \n                     name=\"Math Score\"))\n\nfig.add_trace(go.Violin(y=df['reading score'],\n                     marker_color=\"darkcyan\",\n                     meanline_visible=True,\n                     name=\"Reading Score\"))\n\nfig.add_trace(go.Violin(y=df['writing score'],\n                     fillcolor=\"darkblue\",\n                     line_color='black',\n                     opacity=0.6,\n                     name=\"Writing Score\"))\n\nfig.update_layout(title=\"Distribution Of Score\",title_x=0.5)\nfig.show()","91d3557b":"\nfig = px.sunburst(df, path=['gender', 'race','parental level of education',], values='math score',\n                   color=df['math score'],\n                  color_continuous_scale='electric')\nfig.show()","b270417d":"df_all_100=df[(df['math score']==100)&(df['reading score']==100)&(df['writing score']==100)]\n\ncolors=['lightblue','lightpink','lightgreen','yellow','DarkSalmon','Khaki','LightCoral']\n    \nfig = go.Figure(data=[go.Table(header=dict(values=['Gender', 'Race','Parental Level Of Education','Test Preparation Course','Math Score','Reading Score','Writing Score'],\n                                          line_color='white', fill_color='LightSlateGray',\n                                  align='center',font=dict(color='white', size=12)\n                                          ),\n                               \n                 cells=dict( values=[df_all_100['gender'], df_all_100['race'],df_all_100['parental level of education'],df_all_100['test preparation course'],df_all_100['math score'],df_all_100['reading score'],df_all_100['writing score']],\n                           line_color=colors, fill_color=colors,\n                           align='center', font=dict(color='#660033', size=11))\n                              )])\n                      \nfig.show()","486447f5":" # <a id='12'> <font color=\"DarkOrchid\" ><b>12.Swarmplot Plot Seaborn<\/b><\/font><\/a>\n\nDraw a categorical scatterplot with non-overlapping points.","d6b4f493":"# <a id='17'>  <font color=\"LightSlateGray\" ><b>17.Box Plot Seaborn<\/b><\/font><\/a>\nDraw a box plot to show distributions with respect to categories.<br>\n\nA box plot (or box-and-whisker plot) shows the distribution of quantitative data in a way that facilitates comparisons between variables or across levels of a categorical variable <br>","008d105d":"# Table of contents\n\n###  <a href='#1'>1. Importing Libraries and Dataset <\/a> \n###  <a href='#2'>2. Bar Plot Seaborn <\/a> \n###  <a href='#3'>3. Bar Plot Plotly <\/a> \n###  <a href='#4'>4. Scatter Plot Seaborn<\/a> \n###  <a href='#5'>5. Scatter Plot Plotly <\/a>\n###  <a href='#6'>6. Line Plot Seaborn <\/a> \n###  <a href='#7'>7. Line Plot Plotly <\/a> \n###  <a href='#8'>8. Pie Plot Seaborn <\/a>\n###  <a href='#9'>9. Pie Plot Plotly <\/a>\n###  <a href='#10'>10. Bubble Plot Plotly <\/a>\n###  <a href='#11'>11. Count Plot Seaborn <\/a>\n###  <a href='#12'>12. Swarmplot Plot Seaborn <\/a>\n###  <a href='#13'>13. Pairplot Plot Seaborn <\/a>\n###  <a href='#14'>14. Joint Plot Seaborn <\/a>\n###  <a href='#15'>15. Point Plot Seaborn <\/a>\n###  <a href='#16'>16. Kde Plot Seaborn  <\/a>\n###  <a href='#17'>17. Box Plot Seaborn  <\/a>\n###  <a href='#18'>18. Violin Plot Seaborn  <\/a>\n###  <a href='#19'>19. Hist Plot Seaborn  <\/a>\n###  <a href='#20'>20. Heatmap Plot Seaborn  <\/a>\n###  <a href='#21'>21. Histogram Plot Plotly <\/a>\n###  <a href='#22'>22. Box Plot Plotly  <\/a>\n###  <a href='#23'>23. Violin Plot Plotly <\/a>\n###  <a href='#24'>24. Sunburst Plot Plotly  <\/a>\n###  <a href='#25'>25. Tables Plotly  <\/a>\n###  <a href='#26'>26. End Note <\/a>\n\n","e53d7b3d":"# <a id='18'> <font color=\"Magenta\" ><b>18.Violin Plot Seaborn<\/b><\/font><\/a>\n\nDraw a combination of boxplot and kernel density estimate.<br>\n\nA violin plot plays a similar role as a box and whisker plot. It shows the distribution of quantitative data across several levels of one (or more) categorical variables such that those distributions can be compared <br>","6428fecd":"# <a id='24'> <font color=\"RosyBrown\" ><b>24.Sunburst Plot Plotly<\/b><\/font><\/a>\n\n**Purpose** : Displays quantitative representation of many categorical variables by size distribution. <br>","89b6281c":"# <a id='9'> <font color=\"SaddleBrown\" ><b>9. Pie Plot Plotly<\/b><\/font><\/a>\n\nDisplays quantitative representation in pie with label and textinfo.","ce321b30":"# <a id='22'>  <font color=\"Teal\" ><b>22.Box Plot Plotly<\/b><\/font><\/a>\n\n**Purpose** : Display distribution of a continous variable. <br>","bd0e7f6a":"# <a id='16'> <font color=\"GoldenRod\" ><b>16.Kde Plot Seaborn<\/b><\/font><\/a>\n\nPlot univariate or bivariate distributions using kernel density estimation.","0c7dd342":"# <a id='14'> <font color=\"DarkGoldenRod\" ><b>14.Joint Plot Seaborn<\/b><\/font><\/a>\n\nDraw a plot of two variables with bivariate and univariate graphs.","feb4c5df":"# <a id='20'> <font color=\"RebeccaPurple\" ><b>20.Heatmap Plot Seaborn<\/b><\/font><\/a>\n\nPlot rectangular data as a color-encoded matrix. <br>","29a4a1af":"# <a id='5'><font color=\"ForestGreen\" ><b> 5. Scatter Plot Plotly<\/b><\/font> <\/a>\n\n**Purpose** : Relationship between numerical values.","ef9688e5":"# <a id='15'> <font color=\"FireBrick\" ><b>15.Point Plot Seaborn<\/b><\/font><\/a>\n\nShow point estimates and confidence intervals using scatter plot glyphs.","4bd51a52":"# <a id='6'> <font color=\"Fuchsia\" ><b>6. Line Plot Seaborn<\/b><\/font><\/a>\n\nDraw a line plot with possibility of several semantic groupings.<br>\n\nThe relationship between x and y can be shown for different subsets of the data using the hue, size, and style parameters <br>","ffbeb068":"# <a id='11'> <font color=\"IndianRed\" ><b>11.Count Plot Seaborn<\/b><\/font><\/a>\n\nShow the counts of observations in each categorical bin using bars.","14599d36":"# <a id='26'> <font color=\"LIGHTSEAGREEN\" size=+2.5><b> 26. End Note<\/b><\/font> <\/a>\n\nI hope you enjoyed my kernel.If you like this notebook, an <font color=\"DARKCYAN\"><b>Upvote<\/b><\/font> would be great ! :)\n\nI am new with data science. Please <font color=\"GREEN\"><b>comments<\/b><\/font> me your <font color=\"GREEN\"><b>feedbacks<\/b><\/font> to help me improve myself. \n    \nThanks for your time","c99635f2":"# <a id='4'><font color=\"DarkCyan\" ><b> 4. Scatter Plot Seaborn<\/b><\/font><\/a>\n\nDraw a scatter plot with possibility of several semantic groupings. <br> \n\nThe relationship between x and y can be shown for different subsets of the data using the hue, size, and style parameters\n<br> ","dbb380e1":"# <a id='10'> <font color=\"Tomato\" ><b>10.Bubble Plot Plotly<\/b><\/font><\/a>\n\nDisplays quantitative representation highlighting the most occured category with the size of bubble.","6fc204f3":"<font size=\"+2\" color=\"LIGHTSEAGREEN\"><b>My Other Kernels<\/b><\/font><br>\n\n<a href=\"https:\/\/www.kaggle.com\/drfrank\/basketball-players-stats-data-visualisation\" class=\"btn btn-primary\" style=\"color:white;\">Basketball Players Stats Data Visualisation<\/a>\n\n<a href=\"https:\/\/www.kaggle.com\/drfrank\/women-s-football-results-visualization\" class=\"btn btn-primary\" style=\"color:white;\">Women's Football Results Visualization<\/a>\n\n<a href=\"https:\/\/www.kaggle.com\/drfrank\/estonia-disaster-visualization-machine-learning\" class=\"btn btn-primary\" style=\"color:white;\">Estonia Disaster Visualization & Machine Learning<\/a>\n\n<a href=\"https:\/\/www.kaggle.com\/drfrank\/us-police-shootings-data-visualisation\" class=\"btn btn-primary\" style=\"color:white;\">Us Police Shootings Data Visualisation<\/a>\n\n<a href=\"https:\/\/www.kaggle.com\/drfrank\/fish-market-data-visualisation-machine-learning\" class=\"btn btn-primary\" style=\"color:white;\">Fish Market Data Visualisation & Machine Learning<\/a>","5553f5bf":"# <a id='8'> <font color=\"MidnightBlue\" ><b>8. Pie Plot Seaborn<\/b><\/font><\/a>\n\nDisplays quantitative representation in pie","8ed8abb7":"# <a id='2'> <font color=\"purple\" ><b>2. Bar Plot Seaborn<\/b><\/font><\/a>\n\nShow point estimates and confidence intervals as rectangular bars. <br>\n\nA bar plot represents an estimate of central tendency for a numeric variable with the height of each rectangle and provides some indication of the uncertainty around that estimate using error bars. <br>","46a5c2ea":"# <a id='21'><font color=\"SandyBrown\" ><b>21.Histogram Plot Plotly<\/b><\/font><\/a>\n\n**Purpose** : Display distribution of a continous variable. <br>","e6723507":"# <a id='3'><font color=\"Chocolate\" ><b>3. Bar Plot Plotly Seaborn<\/b><\/font> <\/a>\n\n**Purpose** : Displays quantitative representation of a variable.","10957cda":"# <a id='7'><font color=\"HotPink\" ><b>7.Line Plot Plotly<\/b><\/font><\/a>\n\n\nA Line plot can be defined as a graph that displays data as points or check marks above a number line, showing the frequency of each value.","da1362e3":"# <a id='1'> 1. Importing Libraries and Dataset<\/a>","c6efd016":"# <a id='19'> <font color=\"PaleVioletRed\" ><b>19.Hist Plot Seaborn<\/b><\/font><\/a>\nPlot univariate or bivariate histograms to show distributions of datasets. <br>","72c68b00":"## <a id='17'> <font size=\"+2\" color=\"LIGHTSEAGREEN\"><b>Reference<\/b><\/font><br>\n* https:\/\/seaborn.pydata.org\/api.html\n* https:\/\/plotly.com\/python\/\n* https:\/\/stackoverflow.com (for coding problems)\n","53799e25":"# <a id='23'> <font color=\"Tan\" ><b>23.Violin Plot Plotly<\/b><\/font><\/a>\n\n**Purpose** : Display distribution of a continous variable. <br>","94503491":"# <a id='13'> <font color=\"Crimson\" ><b>13.Pairplot Plot Seaborn<\/b><\/font><\/a>\n\nPlot pairwise relationships in a dataset","9fa0bf5a":"# <a id='25'><font color=\"DarkBlue\" ><b> 25.Tables Plotly<\/b><\/font><\/a>\n\n**Purpose** : Display values in table format with each columns and header with different colors <br>"}}