{"cell_type":{"0b5a3362":"code","9833cc29":"code","70bb74b3":"code","d8aa4d9a":"code","c117f25f":"code","0481e0c2":"code","63f83a9d":"code","d8506763":"code","6530f42c":"code","7faacea8":"code","97afeb14":"code","be6d8952":"code","e425d3ed":"code","fdcfdc03":"code","c3f7454b":"code","235212b9":"code","cfedc3eb":"code","a5fac1d1":"code","b7b303b8":"code","3157fe4e":"code","b34b7e27":"code","ec65e3aa":"code","70f5ce2f":"code","9dc223cb":"code","7833ea3a":"code","669d47b7":"code","d8314671":"code","a62e7e89":"code","0c3c5d43":"code","319cb695":"markdown","73909ddb":"markdown","44b3313d":"markdown","12b205b0":"markdown","8a66b92f":"markdown","e9dd0507":"markdown","1e51e360":"markdown","35d3b08b":"markdown","977d4b88":"markdown","48c84e2a":"markdown","f3419a52":"markdown","fc3f7e74":"markdown","091180d2":"markdown"},"source":{"0b5a3362":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #for plotting\nimport seaborn as sns #for plotting\n%matplotlib inline \n\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9833cc29":"df = pd.read_csv('..\/input\/forest\/train.csv')","70bb74b3":"df.head(3)","d8aa4d9a":"df.tail(3)","c117f25f":"df.shape","0481e0c2":"df.describe() # mean median sd all the basic statistic is obseved.","63f83a9d":"df.info()","d8506763":"df.columns","6530f42c":"df.dtypes #datatype of each column is observed and it is seen that all are int type","7faacea8":"df['Cover_Type'].value_counts() # value counts frelated to cover_type","97afeb14":"df[\"Cover_Type\"].value_counts().plot(kind='bar',color='purple') #plotting the value counts\nplt.ylabel(\"occurences\")\nplt.xlabel(\"Cover Type\")","be6d8952":"plt.bar(df['Cover_Type'], df['Elevation']) #plottinfg with cover type and elevation in bar plot and scatter plot.","e425d3ed":"plt.scatter(df['Cover_Type'], df['Elevation'])","fdcfdc03":"#box plot for cover type and elevation\nx=df.groupby('Cover_Type')\nx.boxplot(column='Elevation')","c3f7454b":"x=df.groupby('Cover_Type')\nx.boxplot(column='Aspect') #with Aspect","235212b9":"x=df.groupby('Cover_Type')\nx.boxplot(column='Slope') #with slope","cfedc3eb":"x=df.groupby('Cover_Type')\nx.boxplot(column='Horizontal_Distance_To_Hydrology')","a5fac1d1":"x=df.groupby('Cover_Type')\nx.boxplot(column='Horizontal_Distance_To_Roadways')","b7b303b8":"# Extract column from the dataset to do specific plotting\ncl = df.columns.tolist()","3157fe4e":"for name in cl:\n    if name[0:4] != 'Soil' and name[0:4] != 'Wild' and name != 'Id' and name != 'Cover_Type':\n        plt.figure()\n        sns.distplot(df[name])","b34b7e27":"for name in cl:\n    if name[0:4] != 'Soil' and name[0:4] != 'Wild' and name != 'Id' and name != 'Cover_Type':\n        title = name + ' vs Cover Type'\n        plt.figure()\n        sns.stripplot(df[\"Cover_Type\"],df[name],jitter=True)\n        plt.title(title);","ec65e3aa":"y = [x for x in df.columns.tolist() if \"Soil_Type\" not in x]\ny = [x for x in y if \"Wilderness\" not in x]\ndfnew = df.reindex(columns=y)","70f5ce2f":"dfnew.head(4)","9dc223cb":"cor1=dfnew.corr()\nf, ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(cor1, vmax=.7, square=True);","7833ea3a":"y1 = dfnew.columns.tolist()\nremove_cl = ['Id', 'Slope', 'Aspect', 'Cover_Type']\ny1 = [x for x in y1 if y1 not in remove_cl]\ny1","669d47b7":"plt1=sns.pairplot(df, vars=y1, hue=\"Cover_Type\") #A pairplot plot a pairwise relationships in a dataset.","d8314671":"cwild = [x for x in df.columns.tolist() if \"Wilderness\" in x]\nt = df[cwild].groupby(df['Cover_Type']).sum()\nm = t.T.plot(kind='bar', figsize=(10, 10), legend=True, fontsize=15) #here we cant put scatter plot as we now it need x and y variable\nm.set_xlabel(\"Wilderness_Type\", fontsize=15)\nm.set_ylabel(\"Count\", fontsize=15)\nplt.show()","a62e7e89":"s = np.array(cl)\nst = [item for item in s if \"Soil\" in item]\nfor soil_type in st:\n    print (soil_type, df[soil_type].sum())","0c3c5d43":"z = df[st].groupby(df['Cover_Type']).sum() #plotting the soli type w.r.t cover type\nz.T.plot(kind='barh', stacked=True, figsize=(15,10))","319cb695":"count of each soil type","73909ddb":"pairs of variables give the idea between the cover types. So pair plotting will be done on on the dfnew dataset","44b3313d":"in the above box plot for all 7 types of cover type we can observed the mean, median, quartile w.r.t 1st 5 columns","12b205b0":"we have seen plotting are skewed, So normalization is done w.r.t cover type and thn plot it","8a66b92f":"Now with continous variable we are going to do the plotting. means we are going plot normal univariate distribution for the 1st 10 columns means excluiding Soil, wild, id and cover type columns in cl:","e9dd0507":"in  the above plot we can obsere that the cover type 2 is is in every area.","1e51e360":"cover type 7 is basically found in higher elevation and covr type 3 is found from lowest elevation to a medium elevation.\naspet is same accross all cover type\nslope is also same accross all cover type the average is around 35.\nhorizental distance average for cover type is around 600.\nvertical distance average is 250 to 300\n","35d3b08b":"for find the correlation, heatmap is a good plotting So excluing Soil_type , plotting the heatmap","977d4b88":"overview of the DATA","48c84e2a":"here cover type 5 and 7 can be found in every soil type","f3419a52":"here we see that all the column is related to cover type column so we have to do our all analysis with respect to cover type","fc3f7e74":"work with Wilderness variable","091180d2":"from the diagonal part we can observed that ttehy are highly correlated. darker the color manes highly correaled and lighter the color less correlated"}}