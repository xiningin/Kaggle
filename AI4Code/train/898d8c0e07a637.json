{"cell_type":{"acdc613c":"code","eece6f57":"code","72ffd697":"code","2c922efb":"code","95a2a664":"code","785837be":"code","c0c3665f":"code","26bb6561":"code","7be472a2":"code","6673dc64":"code","8c4bccd5":"code","4fd81dba":"code","8f581060":"code","54bf8f5a":"code","951528c4":"code","c507f8eb":"code","55c8e96f":"code","1bdb952a":"code","b5e5ede9":"code","417b7750":"code","c0b3a6d2":"code","f18ee7ae":"code","147acd8f":"code","57f50aed":"code","1376a65a":"markdown","23810d76":"markdown","ab03dea9":"markdown","0df67f1c":"markdown","28fbaca5":"markdown"},"source":{"acdc613c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport shap\n\nfrom sklearn.datasets import load_boston, load_diabetes\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.tree import DecisionTreeRegressor, plot_tree\nfrom sklearn.metrics import mean_squared_error","eece6f57":"pd.options.display.max_columns = None","72ffd697":"sns.set(font_scale=1.4)\nsns.set_style({'font.family': 'serif',\n               'fontname': 'Times New Roman'})","2c922efb":"boston_data = load_boston()","95a2a664":"boston_df = pd.DataFrame(boston_data['data'], \n                         columns=boston_data['feature_names'])","785837be":"for c in boston_data['feature_names']:\n    boston_df[c] = boston_df[c] \/ np.max(boston_df[c])","c0c3665f":"boston_df['PRICES'] =  boston_data['target']\nboston_df.head()","26bb6561":"boston_df.shape","7be472a2":"X = boston_df.loc[:,'CRIM':'LSTAT'].values\ny = boston_df['PRICES'].values","6673dc64":"X_train, X_test, y_train, y_test = train_test_split(X,\n                                                    y,\n                                                    test_size=0.25,\n                                                    random_state=0)","8c4bccd5":"print('Amostras de treino:')\nprint(f' * X_train: {X_train.shape}')\nprint(f' * y_train: {y_train.shape}')\n\nprint('Amostras de teste:')\nprint(f' * X_test: {X_test.shape}')\nprint(f' * y_test: {y_test.shape}')","4fd81dba":"knn_model = KNeighborsRegressor(n_neighbors=10)\n\nknn_model.fit(X_train, y_train)","8f581060":"print(f'MSE (Treino): {round(mean_squared_error(y_train, knn_model.predict(X_train)), 4)}')\nprint(f'MSE (Teste): {round(mean_squared_error(y_test, knn_model.predict(X_test)), 4)}')","54bf8f5a":"tree_model = DecisionTreeRegressor(criterion='mse',\n                                   max_depth=6,\n                                   min_samples_split=4,\n                                   random_state=0)\n\ntree_model.fit(X_train, y_train)","951528c4":"plt.figure(figsize=(25,10))\n\nax = plot_tree(tree_model,\n               max_depth=3,\n               fontsize=12,\n               feature_names=boston_df.columns[:-1])\n\nplt.show()","c507f8eb":"print(f'MSE (Treino): {round(mean_squared_error(y_train, tree_model.predict(X_train)), 4)}')\nprint(f'MSE (Teste): {round(mean_squared_error(y_test, tree_model.predict(X_test)), 4)}')","55c8e96f":"diabetes_data = load_diabetes()","1bdb952a":"diabetes_df = pd.DataFrame(diabetes_data['data'], \n                           columns=diabetes_data['feature_names'])","b5e5ede9":"diabetes_df['PROGRESSION'] = diabetes_data['target']\ndiabetes_df.head()","417b7750":"diabetes_df.shape","c0b3a6d2":"X = diabetes_df.loc[:,'age':'s6'].values\ny = diabetes_df['PROGRESSION'].values","f18ee7ae":"X_train, X_test, y_train, y_test = train_test_split(X,\n                                                    y,\n                                                    test_size=0.25,\n                                                    random_state=0)","147acd8f":"print('Amostras de treino:')\nprint(f' * X_train: {X_train.shape}')\nprint(f' * y_train: {y_train.shape}')\n\nprint('Amostras de teste:')\nprint(f' * X_test: {X_test.shape}')\nprint(f' * y_test: {y_test.shape}')","57f50aed":"### Continua\u00e7\u00e3o ###","1376a65a":"### 1.1) k-vizinhos mais pr\u00f3ximos (KNN) - Regress\u00e3o\n\n* [KNeighborsRegressor](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neighbors.KNeighborsRegressor.html#sklearn.neighbors.KNeighborsRegressor)","23810d76":"# k-vizinhos mais pr\u00f3ximos (KNN) e \u00c1rvores de regress\u00e3o\n\n* T\u00f3picos abordados:\n    * Problemas de regress\u00e3o em aprendizagem de m\u00e1quina;\n    * Pr\u00e9-processamento de dados;\n    * k-vizinhos mais pr\u00f3ximos (KNN);\n    * \u00c1rvores de regress\u00e3o;\n    * M\u00e9tricas para avalia\u00e7\u00e3o de modelos:\n        * Mean Squared Error (MSE) - Erro Quadr\u00e1tico M\u00e9dio.","ab03dea9":"---\n\n## 2) Base de dados: Diabetes (atividade pr\u00e1tica)","0df67f1c":"## 1) Base de dados: casas de Boston","28fbaca5":"### 1.2) \u00c1rvores de regress\u00e3o\n\n* [DecisionTreeRegressor](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.tree.DecisionTreeRegressor.html)"}}