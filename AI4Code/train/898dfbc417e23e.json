{"cell_type":{"cf603e1e":"code","1deb5dd0":"code","62bd9148":"code","50f9cfb0":"code","7f8039da":"code","76c71857":"code","33b2c744":"markdown","f97a335c":"markdown"},"source":{"cf603e1e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1deb5dd0":"!pip install ludwig","62bd9148":"from ludwig import LudwigModel\nimport yaml\nimport logging\n\ntitanic_yaml = \"\"\"\ninput_features:\n    -\n        name: Pclass\n        type: category\n    -\n        name: Sex\n        type: category\n    -\n        name: Age\n        type: numerical\n        missing_value_strategy: fill_with_mean\n    -\n        name: SibSp\n        type: numerical\n    -\n        name: Parch\n        type: numerical\n    -\n        name: Fare\n        type: numerical\n        missing_value_strategy: fill_with_mean\n    -\n        name: Embarked\n        type: category\n\noutput_features:\n    -\n        name: Survived\n        type: binary\n\"\"\"\n\n# train a model\nmodel_definition = yaml.load(titanic_yaml)\nprint(yaml.dump(model_definition))\nmodel = LudwigModel(model_definition)\ntraining_dataframe = pd.read_csv('..\/input\/train.csv')\nprint(\"training...\")\ntrain_stats = model.train(training_dataframe, logging_level=logging.INFO)\nprint(\"finished training.\\n\")\n\n\n","50f9cfb0":"# obtain predictions\ntest_dataframe = pd.read_csv('..\/input\/test.csv')\nprint(\"predicting...\")\npredictions = model.predict(test_dataframe, logging_level=logging.INFO)\nprint(\"finised predicting\\n\")\nmodel.close()\nprint(predictions.head())","7f8039da":"#make submission\nsubmission_df = test_dataframe\npredictions.Survived_predictions = predictions.Survived_predictions.astype(np.int8)\nsubmission_df['Survived'] = predictions['Survived_predictions']\n","76c71857":"submission_df.head()\nsubmission_df.to_csv('submission.csv', columns=['PassengerId', 'Survived'], index=False)","33b2c744":"[Ludwig](http:\/\/https:\/\/uber.github.io\/ludwig\/) is a relatively new AutoML framework open sourced by Uber.\nLet's see how it does on the Titanic....\nTD;LR it is actually very very easy to work with. Handles automatically or almost automaticall all the missing values and dummies. Very easy to install and configure. This kernel gives about 0.75. It is without any feature engineering","f97a335c":"This submission get ~0.75\nwith a bit of feature engineering you can get it much much higher (see the tutorials)"}}