{"cell_type":{"1f011eac":"code","c9f0c585":"code","c3374eff":"code","a56f8ab1":"code","e022f9dc":"code","f5d5c7eb":"code","d4ec8f9a":"code","8e961e08":"code","583e56fb":"code","b0e7cd81":"code","fdd48ffa":"code","278c8d5e":"code","335e7393":"code","b259f4c2":"code","1f6302d4":"code","f6241bc8":"code","f6eff11d":"code","b7cec18a":"code","e0bf65fc":"code","64080394":"code","073cf371":"code","c7fd6039":"markdown","57a10a68":"markdown","8cac0891":"markdown","0682ab0e":"markdown","c523eb04":"markdown","20383c51":"markdown","1f53684e":"markdown","1757391f":"markdown","8f23a08c":"markdown","7f885b77":"markdown","28cd3293":"markdown"},"source":{"1f011eac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c9f0c585":"import matplotlib.pyplot as plt\nimport seaborn as sns\n","c3374eff":"df = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ndf.head()","a56f8ab1":"df.describe()","e022f9dc":"df.isnull().sum()","f5d5c7eb":"df['Age'].fillna(df['Age'].mean(), inplace=True)\ndf.isnull().sum()","d4ec8f9a":"df.corr()","8e961e08":"ax = plt.figure(figsize=(12,12))\n#sns.scatterplot(df['Cabin'], df['Fare'], hue= df['Survived'])\nsns.barplot(df['Cabin'], df['Fare'], hue= df['Survived'])","583e56fb":"df = df.drop(columns=[\"Cabin\", \"Embarked\", \"Name\", \"Ticket\"])","b0e7cd81":"sns.countplot(df['Sex'], hue=df['Survived'])","fdd48ffa":"f, axes = plt.subplots(1,2, figsize=(12,6))\nsns.barplot(df['Pclass'], df['Fare'], hue=df['Survived'], ax=axes[0])\nsns.scatterplot(df['Pclass'], df['Fare'], hue=df['Survived'], ax=axes[1])","278c8d5e":"sns.heatmap(df.corr(), annot=True)","335e7393":"from sklearn.preprocessing import LabelEncoder\n\ndf['Sex'] = LabelEncoder().fit_transform(df['Sex'])","b259f4c2":"x = df.drop(columns=[\"PassengerId\", \"Survived\"])\ny = df['Survived']","1f6302d4":"from sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier(random_state=3)\nmodel.fit(x, y)","f6241bc8":"df_test = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ndf_test = df_test.drop(columns=[\"Cabin\", \"Embarked\", \"Name\", \"Ticket\"])\ndf_test.head()","f6eff11d":"df_test['Sex'] = LabelEncoder().fit_transform(df_test['Sex'])\ndf_test.isnull().sum()","b7cec18a":"df_test['Age'].fillna(df_test['Age'].mean(), inplace=True)\ndf_test['Fare'].fillna(df_test['Fare'].mean(), inplace=True)\ndf_test.isnull().sum()","e0bf65fc":"pred = model.predict(df_test.drop(columns=['PassengerId']))","64080394":"sns.countplot(df_test['Pclass'], hue=pred)","073cf371":"output = pd.DataFrame({'PassengerId': df_test.PassengerId, 'Survived': pred})\noutput.to_csv('my_submission.csv', index=False)","c7fd6039":"I would be using RandomForestClassifier as my model for this particular datasets.","57a10a68":"As there is null values present in the dataset at different columns such as \"Age\", \"cabin\" and \"Embarked\".We will be replacing this values with some other vaalues like the means of the particular column etc.","8cac0891":"Removing all the columns that are not that much used for training our model.","0682ab0e":"Plotting the heatmap of the corr matrix which is basically a co-relation matrix on the datasets features which gives us the insights of which features are important for our model.","c523eb04":"Visualizing the data of surviours based on there gender to know which class of gender had a maximum of surviours. ","20383c51":"Visualizing the relationship between passenger travel class and the fare on the catergorial based on the surviours or not.","1f53684e":"Transforming the sex column using label encoder that is provied by scikit learn in its preprocessing library.\nlabel encoding is used when we need to encode the non-integres(string) values to a interger or float point","1757391f":"Visualizing the Data to get the insights of the data.","8f23a08c":"Checking for the missing values in the datatset using pandas.Dataframes.isnull() function.","7f885b77":"Looking with the corelation matrix of the dataset expressing the relation between the features","28cd3293":"The sinking of the Titanic is one of the most infamous shipwrecks in history.\n\nOn April 15, 1912, during her maiden voyage, the widely considered \u201cunsinkable\u201d RMS Titanic sank after colliding with an iceberg. Unfortunately, there weren\u2019t enough lifeboats for everyone onboard, resulting in the death of 1502 out of 2224 passengers and crew.\n\nWhile there was some element of luck involved in surviving, it seems some groups of people were more likely to survive than others."}}