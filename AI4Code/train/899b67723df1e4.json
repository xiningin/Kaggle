{"cell_type":{"3a5e0938":"code","48e21ef5":"code","75dd6659":"code","e76451a5":"code","8b9e7bab":"code","b2195cf2":"code","a636acf2":"code","1418542d":"code","5cc8c5ef":"code","916769b9":"code","526b7926":"code","0575c25c":"code","ee519614":"code","903ad437":"code","0e7fb6dd":"code","c1f645dc":"code","eb31c144":"code","012a4246":"code","506bfe2e":"code","635c5ae8":"code","ce10f279":"code","6e3df428":"code","aef57eeb":"code","140c3927":"code","feb20e9d":"code","720e0aa7":"code","989434b0":"code","33c9b9d5":"code","2015e093":"code","caa1d610":"code","02a4f891":"code","5767e721":"code","ec8eb0d7":"code","ea5e36a2":"code","019790cb":"code","4950eda9":"code","2dbb73ed":"code","3563c6a7":"code","09c58923":"code","d162e283":"code","96c4a25b":"code","b231e574":"code","6b001cbf":"code","2c5713df":"code","b1cc2cd2":"code","a69e3b2c":"code","c11b9049":"code","ae03e8a6":"code","40038337":"markdown","d111c7a1":"markdown","fc1192c4":"markdown","9251911f":"markdown","d9848a21":"markdown","58f5f463":"markdown"},"source":{"3a5e0938":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sea","48e21ef5":"df = pd.read_csv(\"..\/input\/titanic\/train.csv\")","75dd6659":"df.shape","e76451a5":"df.head(5)","8b9e7bab":"sea.countplot(x=\"Survived\",data=df)\n","b2195cf2":"sea.countplot(x=\"Survived\",hue=\"Sex\",data=df)","a636acf2":"sea.countplot(x='Survived',hue=\"Pclass\",data=df)","1418542d":"df['Age'].plot.hist()","5cc8c5ef":"df['Fare'].plot.hist(bins=10,figsize=(10,5))","916769b9":"df.info()","526b7926":"sea.countplot(x=\"SibSp\",data=df)","0575c25c":"df.isnull()","ee519614":"df.isnull().sum()","903ad437":"sea.heatmap(df.isnull())","0e7fb6dd":"df.head(5)","c1f645dc":"df.drop(\"Cabin\",axis=True,inplace=True)","eb31c144":"df.head(2)","012a4246":"df.dropna(inplace=True)\n","506bfe2e":"sea.heatmap(df.isnull())","635c5ae8":"df.head(3)","ce10f279":"df['Fare']=(df['Fare']-df['Fare'].min())\/(df['Fare'].max()-df['Fare'].min())\ndf[\"Age\"] = (df[\"Age\"] - df[\"Age\"].mean()) \/ df[\"Age\"].std()","6e3df428":"df[\"Sex\"] = df[\"Sex\"].factorize()[0]\ndf[\"Sex\"]","aef57eeb":"df[\"Embarked\"] = df[\"Embarked\"].factorize()[0]\ndf[\"Embarked\"]","140c3927":"df.head(5)","feb20e9d":"df=df.drop(columns=[\"Ticket\",'Name','PassengerId'])","720e0aa7":"df2=pd.read_csv(\"..\/input\/titanic\/test.csv\")","989434b0":"df2.isnull().sum()","33c9b9d5":"df2","2015e093":"df2.head(3)","caa1d610":"df2.isnull().sum()","02a4f891":"df2.drop(\"Cabin\",axis=1,inplace=True)","5767e721":"df2[\"Age\"]=df2[\"Age\"].fillna(df2[\"Age\"].mean())\ndf2[\"Fare\"]=df2[\"Fare\"].fillna(df2[\"Fare\"].mean())","ec8eb0d7":"df2.isnull().sum()","ea5e36a2":"df2[\"Sex\"] = df2[\"Sex\"].factorize()[0]\ndf2[\"Embarked\"] = df2[\"Embarked\"].factorize()[0]","019790cb":"df2.head()","4950eda9":"df2['Fare']=(df2['Fare']-df2['Fare'].min())\/(df2['Fare'].max()-df2['Fare'].min())\ndf2[\"Age\"] = (df2[\"Age\"] - df2[\"Age\"].mean()) \/ df2[\"Age\"].std()","2dbb73ed":"df2","3563c6a7":"\ndf2.drop(['Name','Ticket','PassengerId'],axis=1,inplace=True)","09c58923":"df2.head(7)","d162e283":"X_train=df.drop(\"Survived\",axis=1)\nY_train=df[\"Survived\"]","96c4a25b":"X_train.isnull().sum()","b231e574":"from sklearn.model_selection import train_test_split\ntrain_x , val_x , train_y,val_y = train_test_split(X_train,Y_train)","6b001cbf":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\n\nfrom sklearn.metrics import accuracy_score","2c5713df":"#Define the models\n\n\nmodel_1 = LogisticRegression(random_state=1)\nmodel_2 = RandomForestClassifier()\nmodel_3 = KNeighborsClassifier()\nmodel_4 = SVC()\nmodel_5 = GaussianNB()\nmodel_6 = DecisionTreeClassifier()\n","b1cc2cd2":"def score_model(models,X_train = train_x, X_val = val_x, y_train = train_y, y_val = val_y):\n    models.fit(X_train, y_train)\n    predictions = models.predict(X_val)\n    return(accuracy_score(y_val, predictions))\nmodels = [model_1,model_2,model_3,model_4,model_5,model_6]\n\nfor i in range(0, len(models)):\n    acc = score_model(models[i])\n    print(\"model {} accuracy {}\".format(i+1,acc))","a69e3b2c":"model_1.fit(train_x,train_y)\npred=model_1.predict(df2)\n","c11b9049":"sub=pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\nsub.head(2)","ae03e8a6":"submit5=pd.DataFrame({\"PassengerId\": sub[\"PassengerId\"],\"Survived\":pred})\nsubmit5.to_csv('submit.csv',index=False)","40038337":"# **Normalization & Standardization**","d111c7a1":"## Analysing data","fc1192c4":"# **Normalization & Standardization**","9251911f":"## Data Wranglling","d9848a21":"# **TEST DATA**","58f5f463":"# **Training Data**"}}