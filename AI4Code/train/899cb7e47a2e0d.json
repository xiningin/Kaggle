{"cell_type":{"4a65c2a4":"code","ed537a6d":"code","3542d111":"code","9de0ccb0":"code","757a60b1":"code","be7c34e0":"code","5144d8d1":"code","f046d7b3":"code","f0406dff":"code","bfabb58c":"code","d99a93dd":"code","d54832e3":"code","0faa5ae5":"code","22bf82f4":"code","a3038717":"code","d81b4560":"code","b0983653":"code","60de789b":"code","adee89fa":"code","31dddea1":"code","c69e929f":"code","65900dbb":"code","0850b84d":"code","44d9a614":"code","781fb6ad":"code","054e4a55":"code","0de59a67":"code","613e80b1":"code","956631eb":"code","667a5923":"code","5b9a2a96":"code","99120ecd":"code","6c49713c":"code","e4435ef1":"code","d415980e":"code","be7e5f51":"code","05d0441e":"code","eefdfe7a":"code","35cb2b89":"markdown"},"source":{"4a65c2a4":"import pandas as pd\nRaMo=pd.read_csv(\"..\/input\/youtube-creator-comparison\/RaMo.csv\")\nAlok=pd.read_csv(\"..\/input\/youtube-creator-comparison\/Alok_Sir.csv\")\nArvind=pd.read_csv(\"..\/input\/youtube-creator-comparison\/Arvind_Sir.csv\")\nPooja=pd.read_csv(\"..\/input\/youtube-creator-comparison\/Pooja_Maam.csv\")\nDhiraj=pd.read_csv(\"..\/input\/youtube-creator-comparison\/Dhiraj_Sir.csv\")\nDeepak=pd.read_csv(\"..\/input\/youtube-creator-comparison\/Deepak_Sir.csv\")\nOmar=pd.read_csv(\"..\/input\/youtube-creator-comparison\/Omar.csv\")\nDivya=pd.read_csv(\"..\/input\/youtube-creator-comparison\/Divya_Maam.csv\")\nSonu_Tyagi=pd.read_csv(\"..\/input\/youtube-creator-comparison\/Sonu_Tyagi_Sir.csv\")\nSrikant=pd.read_csv(\"..\/input\/youtube-creator-comparison\/Srikant_Sir.csv\")\nAshish=pd.read_csv('..\/input\/youtube-creator-comparison\/Ashish.csv')\ndf=pd.read_csv(\"..\/input\/main-data\/Copy of 02_August 2020 - Apttrix YouTube - Table data (1).csv\")\n\n","ed537a6d":"Sonu_Tyagi.info()","3542d111":"RaMo.head()","9de0ccb0":"Avg_Values_RaMo=RaMo.mean(axis=0)\nAvg_Values_Alok=Alok.mean(axis=0)\nAvg_Values_Arvind=Arvind.mean(axis=0)\nAvg_Values_Pooja=Pooja.mean(axis=0)\nAvg_Values_Dhiraj=Dhiraj.mean(axis=0)\nAvg_Values_Deepak=Deepak.mean(axis=0)\nAvg_Values_Omar=Omar.mean(axis=0)\nAvg_Values_Divya=Divya.mean(axis=0)\nAvg_Values_Sonu_Tyagi=Sonu_Tyagi.mean(axis=0)\nAvg_Values_Srikant=Srikant.mean(axis=0)\nAvg_Values_Ashish=Ashish.mean(axis=0)","757a60b1":"Avg_Values_RaMo","be7c34e0":"Avg_Values_Alok","5144d8d1":"Avg_Values_Arvind","f046d7b3":"Avg_Values_Pooja","f0406dff":"Avg_Values_Dhiraj","bfabb58c":"Avg_Values_Deepak\n","d99a93dd":"Avg_Values_Omar","d54832e3":"Avg_Values_Divya","0faa5ae5":"Avg_Values_Sonu_Tyagi","22bf82f4":"Avg_Values_Srikant","a3038717":"Avg_Values_Ashish","d81b4560":"Roopa=df[df['Video title'].str.contains(\"Roopa\",na=False)]","b0983653":"Roopa.to_csv(\"Roopa.csv\")\n","60de789b":"Avg_Values_Roopa=Roopa.mean(axis=0)","adee89fa":"Avg_Values_Roopa\n","31dddea1":"Roopa.info()","c69e929f":"Max_views=Roopa[\"Views\"].max()\nMax_views","65900dbb":"import matplotlib.pyplot as plt, numpy as np","0850b84d":"total_views_august= 6602823","44d9a614":"total_views_ramo = RaMo[\"Views\"].sum()\ntotal_views_ramo","781fb6ad":"total_views_others=Srikant[\"Views\"].sum()+Pooja[\"Views\"].sum()+Divya[\"Views\"].sum()+Ashish[\"Views\"].sum()+Sonu_Tyagi[\"Views\"].sum()+Dhiraj[\"Views\"].sum()+Deepak[\"Views\"].sum()+Roopa[\"Views\"].sum()+Arvind[\"Views\"].sum()+Alok[\"Views\"].sum()","054e4a55":"total_views_others","0de59a67":"total_views_past=total_views_august-(total_views_ramo+total_views_others)","613e80b1":"total_views_past","956631eb":"Teachers=[\"RaMo\",\"Others\",\"Past_Videos\"]\nViews=[total_views_ramo,total_views_others,total_views_past]\nfig=plt.figure(figsize=(15,8))\nplt.pie(Views,labels=Teachers)\ncolors = ( \"orange\", \"cyan\", \"brown\") \n  \n# Wedge properties \nwp = { 'linewidth' : 1, 'edgecolor' : \"green\" } \n  \n# Creating autocpt arguments \ndef func(pct, allvalues): \n    absolute = int(pct \/ 100.*np.sum(allvalues)) \n    return \"{:.1f}%\\n({:d} g)\".format(pct, absolute) \nexplode = (0.1, 0.0, 0.2) \n  \n# Creating plot \nfig, ax = plt.subplots(figsize =(10, 7)) \nwedges, texts, autotexts = ax.pie(Views,\n                                  autopct = lambda pct: func(pct, Views),\n                                  explode = explode,  \n                                  labels = Teachers,\n                                  shadow = True, \n                                  colors = colors, \n                                  startangle = 90, \n                                  wedgeprops = wp, \n                                  textprops = dict(color =\"magenta\"))\nax.legend(wedges, Teachers,\n          title =\"Teachers\",\n          loc =\"center left\", \n          bbox_to_anchor =(1, 0, 0.5, 1)) \n  \nplt.setp(autotexts, size = 12,weight=\"bold\") \nax.set_title(\"Views_Contribution\")\n\nplt.show()","667a5923":"total_subs_ramo = RaMo[\"Subscribers\"].sum()\ntotal_subs_others=Srikant[\"Subscribers\"].sum()+Pooja[\"Subscribers\"].sum()+Divya[\"Subscribers\"].sum()+Ashish[\"Subscribers\"].sum()+Sonu_Tyagi[\"Subscribers\"].sum()+Dhiraj[\"Subscribers\"].sum()+Deepak[\"Subscribers\"].sum()+Roopa[\"Subscribers\"].sum()+Arvind[\"Subscribers\"].sum()+Alok[\"Subscribers\"].sum()\ntotal_subs_august= 139857\ntotal_subs_past=total_subs_august-(total_subs_ramo+total_subs_others)\n\nTeachers=[\"RaMo\",\"Others\",\"Past_Videos\"]\nSubs=[total_subs_ramo,total_subs_others,total_subs_past]\nfig=plt.figure(figsize=(15,8))\nplt.pie(Subs,labels=Teachers)\ncolors = ( \"orange\", \"cyan\", \"brown\") \n  \n# Wedge properties \nwp = { 'linewidth' : 1, 'edgecolor' : \"green\" } \n  \n# Creating autocpt arguments \ndef func(pct, allvalues): \n    absolute = int(pct \/ 100.*np.sum(allvalues)) \n    return \"{:.1f}%\\n({:d} g)\".format(pct, absolute) \nexplode = (0.1, 0.0, 0.2) \n  \n# Creating plot \nfig, ax = plt.subplots(figsize =(10, 7)) \nwedges, texts, autotexts = ax.pie(Subs,\n                                  autopct = lambda pct: func(pct, Subs),\n                                  explode = explode,  \n                                  labels = Teachers,\n                                  shadow = True, \n                                  colors = colors, \n                                  startangle = 90, \n                                  wedgeprops = wp, \n                                  textprops = dict(color =\"blue\"))\nax.legend(wedges, Teachers,\n          title =\"Teachers\",\n          loc =\"center left\", \n          bbox_to_anchor =(1, 0, 0.5, 1)) \n  \nplt.setp(autotexts, size = 9,weight=\"bold\") \nax.set_title(\"Subs Contribution\")\n\nplt.show()","5b9a2a96":"df.dropna()","99120ecd":"Max_Views=df.nlargest(5,[\"Views\"])","6c49713c":"Max_Subs=df.nlargest(5,[\"Subscribers\"])","e4435ef1":"Max_Views","d415980e":" Max_Subs","be7e5f51":" Max_Subs","05d0441e":"Max_Clicks=df.nlargest(5,[\"Impressions click-through rate (%)\"])","eefdfe7a":"Max_Clicks","35cb2b89":"# Data Analysis"}}