{"cell_type":{"e5342d40":"code","a96ff029":"code","29ad9bf9":"code","b6ce611c":"code","9d9d0f45":"code","9148267a":"code","e2a89148":"code","e7611b2d":"code","f86948eb":"code","67d1975d":"code","189cc217":"code","0021bac9":"code","c95e951d":"code","5121bb78":"markdown","f4cd52d0":"markdown","f68b4c0d":"markdown","f15501cf":"markdown","01635866":"markdown","6b854579":"markdown","e0cd8695":"markdown","5d115486":"markdown"},"source":{"e5342d40":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a96ff029":"df = pd.read_csv('..\/input\/buildingdatagenomeproject2\/solar_cleaned.csv')\ndf.head()","29ad9bf9":"labels = []\nvalues = []\nfor col in df.columns:\n    labels.append(col)\n    values.append(df[col].isnull().sum())\n    print(col, values[-1])","b6ce611c":"ind = np.arange(len(labels))\nwidth = 0.9\nfig, ax = plt.subplots(figsize=(12,50))\nrects = ax.barh(ind, np.array(values), color='y')\nax.set_yticks(ind+((width)\/2.))\nax.set_yticklabels(labels, rotation='horizontal')\nax.set_xlabel(\"Count of missing values\")\nax.set_title(\"Number of missing values in each column\")\n#autolabel(rects)\nplt.show()","9d9d0f45":"cols_to_use = ['Bobcat_education_Dylan', 'Bobcat_education_Alissa', 'Bobcat_education_Coleman', 'Bobcat_other_Timothy']\nfig = plt.figure(figsize=(8, 20))\nplot_count = 0\nfor col in cols_to_use:\n    plot_count += 1\n    plt.subplot(4, 1, plot_count)\n    plt.scatter(range(df.shape[0]), df[col].values)\n    plt.title(\"Distribution of \"+col)\nplt.show()","9148267a":"temp_df = df.groupby('Bobcat_education_Dylan')['Bobcat_other_Timothy'].agg('mean').reset_index().sort_values(by='Bobcat_other_Timothy')\ntemp_df.head()","e2a89148":"id_to_use = [0.20, 9.32, 0.03, 0.04, 0.07]\nfig = plt.figure(figsize=(8, 25))\nplot_count = 0\nfor id_val in id_to_use:\n    plot_count += 1\n    plt.subplot(5, 1, plot_count)\n    temp_df = df.loc[df['Bobcat_education_Dylan']==id_val,:]\n    plt.plot(temp_df.timestamp.values, temp_df.Bobcat_other_Timothy.values)\n    plt.plot(temp_df.timestamp.values, temp_df.Bobcat_other_Timothy.cumsum())\n    plt.title(\"Asset ID : \"+str(id_val))","e7611b2d":"temp_df = df.groupby('Bobcat_education_Dylan')['Bobcat_other_Timothy'].agg('mean').reset_index().sort_values(by='Bobcat_other_Timothy')\ntemp_df.tail()","f86948eb":"id_to_use = [26.79, 27.07, 27.18, 27.54, 27.59]\nfig = plt.figure(figsize=(8, 25))\nplot_count = 0\nfor id_val in id_to_use:\n    plot_count += 1\n    plt.subplot(5, 1, plot_count)\n    temp_df = df.loc[df['Bobcat_education_Dylan']==id_val,:]\n    plt.plot(temp_df.timestamp.values, temp_df.Bobcat_other_Timothy.values)\n    plt.plot(temp_df.timestamp.values, temp_df.Bobcat_other_Timothy.cumsum())\n    plt.title(\"Asset ID : \"+str(id_val))","67d1975d":"temp_df = df.groupby('Bobcat_education_Dylan')['Bobcat_other_Timothy'].agg('count').reset_index().sort_values(by='Bobcat_other_Timothy')\ntemp_df.tail()","189cc217":"id_to_use = [0.07, 0.04, 0.06, 0.03, 0.00]\nfig = plt.figure(figsize=(8, 25))\nplot_count = 0\nfor id_val in id_to_use:\n    plot_count += 1\n    plt.subplot(5, 1, plot_count)\n    temp_df = df.loc[df['Bobcat_education_Dylan']==id_val,:]\n    plt.plot(temp_df.timestamp.values, temp_df.Bobcat_other_Timothy.values)\n    plt.plot(temp_df.timestamp.values, temp_df.Bobcat_other_Timothy.cumsum())\n    plt.title(\"Asset ID : \"+str(id_val))","0021bac9":"import plotly.express as px\nfig = px.line(df, x=\"timestamp\", y=\"Bobcat_education_Dylan\", color_discrete_sequence=['darksalmon'], \n              title=\"Bobcat Education Dylan\")\nfig.show()","c95e951d":"fig = px.scatter(df, x=\"timestamp\", y=\"Bobcat_education_Dylan\",color_discrete_sequence=['#4257f5'], title=\"Bobcat Education Dylan\" )\nfig.show()","5121bb78":"#Codes from SRK https:\/\/www.kaggle.com\/sudalairajkumar\/simple-exploration-notebook-5\/notebook","f4cd52d0":"#Bob Dylan - Things Have Changed\n\n#Mr. Jinx and Miss Lucy, they jumped in the lake\/I'm not that eager to make a mistake\n\n#People are crazy and times are strange, I'm locked in tight, I'm out of range,I used to care, but things have #changed","f68b4c0d":"#I apologize to The Authors of the Dataset for using a little poetic license to capture the essence of their work remodeling within a piece of art. ","f15501cf":"<iframe width=\"727\" height=\"409\" src=\"https:\/\/www.youtube.com\/embed\/L9EKqQWPjyo\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>","01635866":"#Take some assets which are present across all the timestamps and see their distribution.","6b854579":"Das War's, Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke","e0cd8695":"#Nothing happened above.","5d115486":"Blue line represents the distribution of `Bobcat_other_Timothy` variable in the given time stamp. Green line represents the cumulative `Bobcat_other_Timothy` value"}}