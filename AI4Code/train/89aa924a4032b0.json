{"cell_type":{"34d045ae":"code","ddd87650":"code","c532c0a3":"code","ece60e44":"code","4e93a326":"code","cbe917b6":"code","acfcb6b1":"code","5163e206":"code","315bf6dd":"code","c55d5e97":"markdown","30ae53a1":"markdown"},"source":{"34d045ae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ddd87650":"data=pd.read_csv(\"..\/input\/heart.csv\")","c532c0a3":"data.head()","ece60e44":"data.info()","4e93a326":"data.isnull().sum()","cbe917b6":"y=data.target   #y de\u011ferini belirledim. Yani predict edece\u011fimiz 1 veya 0 de\u011feri\nx_data =data.drop([\"target\"],axis=1)  #Y de\u011ferim d\u0131\u015f\u0131ndaki t\u00fcm de\u011ferleri train i\u00e7in al dedik.","acfcb6b1":"# Y\u00fcksek de\u011ferlerin b\u00fcy\u00fck de\u011ferlere bask\u0131n gelmemesi i\u00e7in Normalizasyon yapt\u0131k.\nx = (x_data - np.min(x_data)) \/ (np.max(x_data) - np.min(x_data)).values","5163e206":"# Test ve Train olarak datam\u0131z\u0131 2 ye b\u00f6ld\u00fck\n# Train datas\u0131 ile e\u011fitece\u011fiz, test datas\u0131 ile tahminler yapaca\u011f\u0131z.\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)","315bf6dd":"# Logistic Regression Modelimizi Olu\u015fturduk\nfrom sklearn.linear_model import LogisticRegression \nlr=LogisticRegression()\n# Modelimizi train de\u011ferleri ile e\u011fittik.\nlr.fit(x_train,y_train)\n# Ve test datas\u0131ndan gelen sonu\u00e7lar ile ger\u00e7ek sonu\u00e7lar\u0131 kar\u015f\u0131la\u015ft\u0131r\u0131p bir accuracy(do\u011fruluk) skoru bulduk.\nprint(\"Accuracy Score:\",(lr.score(x_test,y_test))) ","c55d5e97":"# Kalp Hastal\u0131\u011f\u0131n\u0131 Binary Classification Algoritmas\u0131 Kullanarak Tahmin Etme\n\n* Datay\u0131 tan\u0131yaca\u011f\u0131z (head,info)\n* Datada temizlenmesi gereken veriler varsa temizleyece\u011fiz.\n* Datay\u0131 ay\u0131rd\u0131\u011f\u0131m\u0131z e\u011fitim k\u00fcmesi ile e\u011fitece\u011fiz.\n* Test i\u00e7in ay\u0131rd\u0131\u011f\u0131m\u0131z datalar\u0131 tahmin edip sonu\u00e7lar\u0131m\u0131z\u0131 kar\u015f\u0131la\u015ft\u0131raca\u011f\u0131z ve tahmin skoru elde edece\u011fiz.","30ae53a1":"# Conclusion\n* Bizim datam\u0131z \"0.85\" oran\u0131nda do\u011fru tahminde bulunuyor diyebiliriz."}}