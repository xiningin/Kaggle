{"cell_type":{"2d5025c8":"code","a148cf5d":"code","279ce80c":"code","39fd1e9b":"code","cb2942e0":"code","402c6bcc":"code","5bfa007a":"code","e4975496":"code","d62de330":"code","a672e5b7":"code","1884be68":"code","6a6d694a":"code","7d54efd7":"code","d562e420":"code","94b7596e":"code","e7e750d0":"code","a2458a0e":"code","685d0a49":"code","8c7564e1":"code","d48315dc":"code","3478c25d":"code","a71a2db4":"code","428eca4c":"markdown","23c0c3eb":"markdown","f3ca0c58":"markdown","57842f3c":"markdown","4d0eabbf":"markdown","99de2f6d":"markdown","fecc63b1":"markdown","2e7ca351":"markdown","e493da0c":"markdown","576e40ae":"markdown","36911d7d":"markdown","aa855fa9":"markdown"},"source":{"2d5025c8":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.preprocessing import LabelEncoder , StandardScaler","a148cf5d":"from sklearn.ensemble import RandomForestClassifier","279ce80c":"train = pd.read_csv('..\/input\/loan-prediction-based-on-customer-behavior\/Training Data.csv')\ntest = pd.read_csv('..\/input\/loan-prediction-based-on-customer-behavior\/Test Data.csv')\nsubmission = pd.read_csv('..\/input\/loan-prediction-based-on-customer-behavior\/Sample Prediction Dataset.csv')","39fd1e9b":"train.head()","cb2942e0":"cat_cols = [\n            'Married\/Single',\n            'House_Ownership',\n            'Car_Ownership',\n            'STATE',\n            'CITY',\n            'Profession'\n    ]\nnum_cols = [\n            'Income',\n            'Age',\n            'Experience',\n            'CURRENT_JOB_YRS',\n            'CURRENT_HOUSE_YRS'\n]","402c6bcc":"train = train.drop(index = [184204]);","5bfa007a":"sns.countplot(x = train['Married\/Single'] , hue = train['Risk_Flag']);","e4975496":"sns.histplot(train['Age']);","d62de330":"print('main values of the age : ' , train['Age'].describe())","a672e5b7":"sns.countplot(train['Car_Ownership'] , hue = train['Risk_Flag']);","1884be68":"sns.countplot(train['House_Ownership'] , hue = train['Risk_Flag']);","6a6d694a":"sns.countplot(train['Experience'] , hue = train['Risk_Flag']);","7d54efd7":"sns.countplot(train['Risk_Flag'])","d562e420":"value_counts = train['Risk_Flag'].value_counts()\nvalue_counts[0] \/ value_counts[1]","94b7596e":"le = LabelEncoder()\ncat_features = [\n                'Married\/Single',\n                'House_Ownership',\n                'Car_Ownership',\n]\nfor col in cat_features:\n  train[col] = le.fit_transform(train[col])\n  train[col] = train[col].astype(int)\n  test[col] = le.fit_transform(test[col])\n  test[col] = test[col].astype(int)","e7e750d0":"train","a2458a0e":"X=train[['Income', 'Age', 'Experience', 'Married\/Single',\n       'House_Ownership', 'Car_Ownership',\n       'CURRENT_JOB_YRS', 'CURRENT_HOUSE_YRS']]\ny=train['Risk_Flag']","685d0a49":"X_train , X_test , y_train , y_test = train_test_split(X , y , train_size = 0.8)\nsmote = SMOTE(sampling_strategy = 0.85)\nX_train, y_train = smote.fit_resample(X_train, y_train)","8c7564e1":"X_train.shape , y_train.shape","d48315dc":"model = RandomForestClassifier(n_estimators= 650 , n_jobs= -1)\nmodel.fit(X_train ,y_train)\ny_pred = model.predict(X_test)","3478c25d":"roc_auc_score(y_test, y_pred)","a71a2db4":"output = pd.DataFrame({'id': X_test.index,\n                       'risk_flag': y_pred})\noutput.to_csv('submission.csv', index=False)","428eca4c":"Let's look at the distribution of the age of the bank's customers","23c0c3eb":"## Division of features into categorical and numeric","f3ca0c58":"the main values of the age of the bank's customers","57842f3c":"Let's look at the distribution of the target variable","4d0eabbf":"## Let's start with visualization","99de2f6d":"Let's look at various combinations of features with the target variable","fecc63b1":"using smote, we generate synthetic data for balancing classes","2e7ca351":"## deleting a client with missing values","e493da0c":"## Modeling ","576e40ae":"## Preprocessing categorial features","36911d7d":"Let's look at how people pay off a loan in a married (not married)","aa855fa9":"Classes are not balanced"}}