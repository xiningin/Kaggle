{"cell_type":{"38833b70":"code","15af5490":"code","65094273":"code","80a444bd":"code","4a737e7a":"code","b8a059b3":"code","1af7502d":"code","6bc50c16":"code","f0306599":"code","e8a524f7":"code","1be06a05":"code","27808649":"code","6d98bfaf":"code","05c7bf7a":"code","d11521e6":"code","e014ffde":"code","8ef1e6b6":"code","08709deb":"code","a6a8e428":"code","16519389":"code","a559b3cf":"code","b41eaa9d":"code","581f3fd5":"code","bdda0f26":"code","49ad9a05":"code","e96062f3":"code","861d75b2":"code","b8c24f83":"code","776cf099":"code","b859f3ad":"code","eaa03b0f":"code","c090119a":"code","09204452":"code","3c788e5c":"code","4450527c":"code","15e45b04":"code","a16992d2":"code","26153949":"code","77e487f1":"code","98b59eb2":"code","29114925":"code","d35151cc":"code","bdb36551":"code","318f4cd9":"code","9a352501":"code","eaf1f9fa":"code","b87e353f":"code","178bf803":"code","ca2cd41d":"code","ad168f90":"code","7108f34b":"code","03d621cf":"code","2e1cdd0c":"code","6d936126":"code","8533541a":"code","9925a5b8":"code","611cbaa8":"code","985ecd8f":"code","13a584ac":"code","46b60c96":"code","7b0624b7":"code","228380f5":"code","807b3e99":"code","ee8cb5a6":"code","5de216ff":"code","d1ba69e6":"code","3906538a":"code","b9da7c90":"code","6bf4577d":"code","67596103":"code","9667c02d":"code","4b37785a":"code","7683fdc3":"code","71a671a7":"code","b2d06763":"code","f9fa4c50":"code","12f350d3":"code","1d399d6e":"code","4d0dcffc":"code","3111d358":"code","3f32cf47":"code","a31794de":"code","777bdfc3":"code","4ce5366d":"code","d0f9e801":"code","e33cfcc8":"code","22f7552c":"code","33c245fc":"code","fccd1c4b":"code","17ad7fef":"code","e95993b1":"code","c0b3156e":"code","ed3c3b14":"code","e51b96d8":"code","54174f09":"code","94a8248e":"code","fb03c80d":"code","3659054d":"code","e113b429":"code","200b1cbc":"code","e6c24941":"code","efe04e53":"code","18d6e35f":"code","076ce391":"code","216f3010":"code","873f2d90":"code","de153478":"code","ef3ead3f":"code","bad65f4a":"code","0f9b0255":"code","4c67e792":"code","a3a33ecd":"code","a546d5e7":"code","f21cc146":"code","ae70b142":"code","53872de4":"code","22fb01a1":"code","5c1a80ba":"markdown","70648421":"markdown","feb8ed35":"markdown","a79b09f0":"markdown","44fbd0b0":"markdown"},"source":{"38833b70":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","15af5490":"df = pd.read_csv('..\/input\/hotel-booking\/hotel_booking.csv')","65094273":"df.head()","80a444bd":"df.isna().sum()","4a737e7a":"def data_clean(df):\n    df.fillna(0 , inplace =True)","b8a059b3":"data_clean(df)","1af7502d":"df.isna().sum()","6bc50c16":"df.columns","f0306599":"list =['adults', 'children', 'babies']\nfor i in list :\n    print('{} has uniquevalues as {}' .format(i,df[i].unique()))","e8a524f7":"pd.set_option('display.max_columns',32)","1be06a05":"filter =(df['children']==0) & (df['adults'] ==0) & (df['babies']==0)\ndf[filter]","27808649":"data = df[~filter]","6d98bfaf":"data.columns","05c7bf7a":"country_wise_data=data[data['is_canceled'] ==0]['country'].value_counts().reset_index()","d11521e6":"country_wise_data.columns=['country' ,'No of guests']","e014ffde":"country_wise_data","8ef1e6b6":"!pip install folium","08709deb":"import folium \nfrom folium.plugins import HeatMap","a6a8e428":"basemap =folium.Map()","16519389":"!pip install plotly","a559b3cf":"import plotly.express as px","b41eaa9d":"map_guest= px.choropleth(country_wise_data,\n                        locations =country_wise_data['country'],\n                        color =country_wise_data['No of guests'],\n                        hover_name =country_wise_data['country'],\n                        title =\"Home country of guests\")","581f3fd5":"map_guest.show()","bdda0f26":"data2= data[data['is_canceled']==0]","49ad9a05":"data2.columns","e96062f3":"plt.figure(figsize=(12,8))\nsns.boxplot(x='reserved_room_type',y='adr',hue ='hotel',data=data2)\nplt.title('Price of room types per night & per person')\nplt.xlabel('Room type')\nplt.ylabel('Price(EUR)')\nplt.legend()\nplt.show()","861d75b2":"data['reserved_room_type']","b8c24f83":"data.columns","776cf099":"data['hotel']","b859f3ad":"data_resort = data[(data['hotel']=='Resort Hotel') & (data['is_canceled']==0)]\ndata_resort","eaa03b0f":"data_city = data[(data['hotel']=='City Hotel') & (data['is_canceled']==0)]\ndata_city","c090119a":"resort_hotel=data_resort.groupby(['arrival_date_month'])['adr'].mean().reset_index()","09204452":"city_hotel=data_city.groupby(['arrival_date_month'])['adr'].mean().reset_index()","3c788e5c":"final =resort_hotel.merge(city_hotel, on='arrival_date_month')","4450527c":"final.columns =['months' ,'price for_resort' ,'price for_city']","15e45b04":"final","a16992d2":"!pip install sorted-months-weekdays","26153949":"!pip install sort-dataframeby-monthorweek","77e487f1":"import sort_dataframeby_monthorweek as sd\n","98b59eb2":"def sort_data(df,colname):\n    return sd.Sort_Dataframeby_Month(df,colname)","29114925":"final =sort_data(final ,'months')","d35151cc":"px.line(final, x='months' ,y=['price for_resort' ,'price for_city'] ,title='room Price per month' )\n","bdb36551":"data.columns","318f4cd9":"data.info()","9a352501":"rush_resort =data_resort['arrival_date_month'].value_counts().reset_index()\nrush_resort.columns = ['months ','rush for resort']\nrush_resort","eaf1f9fa":"rush_city =data_city['arrival_date_month'].value_counts().reset_index()\nrush_city.columns = ['months ','rush for city']\nrush_city","b87e353f":"final_rush = rush_resort.merge(rush_city)\nfinal_rush","178bf803":"final_rush.columns =['month' ,'No guest for resort','No guest for city']\nfinal_rush","ca2cd41d":"final_rush =sort_data(final_rush ,'month')","ad168f90":"px.line(final_rush ,x='month' ,y =['No guest for resort', 'No guest for city'] ,title='no of guests each year')","7108f34b":"data.corr()","03d621cf":"co_relation= data.corr()['is_canceled'].sort_values(ascending=False)","2e1cdd0c":"co_relation","6d936126":"data.groupby('is_canceled')['reservation_status'].value_counts()","8533541a":"list_not = ['days_in_waiting_list','arrival_date_year']","9925a5b8":"num_features=[col for col in data.columns if data[col].dtype!='O' and col not in list_not]","611cbaa8":"data.columns","985ecd8f":"cot_not =['arrival_date_year','booking_changes','assigned_room_type','reservation_status','days_in_waiting_list','country']","13a584ac":"cot_not","46b60c96":"cat_features=[col for col in data.columns if data[col].dtype=='O' and col not in cot_not]","7b0624b7":"cat_features","228380f5":"cat_features","807b3e99":"data_cat=data[cat_features]","ee8cb5a6":"data_cat.head()","5de216ff":"import warnings\nfrom  warnings import filterwarnings\nfilterwarnings('ignore')","d1ba69e6":"data_cat['reservation_status_date'] =pd.to_datetime(data_cat['reservation_status_date'])","3906538a":"data_cat['year'] =data_cat['reservation_status_date'].dt.year\ndata_cat['month'] =data_cat['reservation_status_date'].dt.month\ndata_cat['day'] =data_cat['reservation_status_date'].dt.day","b9da7c90":"data_cat.drop('reservation_status_date',axis=1,inplace=True)","6bf4577d":"data_cat","67596103":"data_cat['cancellation'] =data['is_canceled']","9667c02d":"data_cat","4b37785a":"data_cat.columns","7683fdc3":"cols =data_cat.columns[0:8]","71a671a7":"cols","b2d06763":"for col in cols:\n    dict = data_cat.groupby([col])['cancellation'].mean().to_dict()\n    data_cat[col] =data_cat[col].map(dict)","f9fa4c50":"data_cat.head()","12f350d3":"data_cat.drop(['email','phone-number','credit_card'],axis=1  , inplace=True)","1d399d6e":"data_cat.drop(['name'],axis=1  , inplace=True)","4d0dcffc":"datafram= pd.concat([data_cat, data[num_features]],axis=1)","3111d358":"datafram.drop('cancellation',axis=1,inplace=True)","3f32cf47":"datafram.info()","a31794de":"sns.distplot(datafram['lead_time'])","777bdfc3":"def handel_outlier(col):\n    datafram[col] =np.log1p(datafram[col])","4ce5366d":"handel_outlier('lead_time')","d0f9e801":"sns.distplot(datafram['lead_time'])","e33cfcc8":"sns.distplot(datafram['adr'])","22f7552c":"handel_outlier('adr')","33c245fc":"sns.distplot(datafram['adr'])","fccd1c4b":"datafro_col = [datafram.columns]","17ad7fef":"datafro_col","e95993b1":"# for col in datafro_col :\n#     sns.distplot(datafram[col])    \n#     plt.show()","c0b3156e":"datafram.isna().sum()","ed3c3b14":"datafram.dropna(inplace=True)","e51b96d8":"y = datafram['is_canceled']","54174f09":"x = datafram.drop('is_canceled',axis=1)","94a8248e":"from sklearn.linear_model import Lasso\nfrom sklearn.feature_selection import SelectFromModel","fb03c80d":"feature_sel_model=SelectFromModel(Lasso(alpha=0.005 , random_state=42))","3659054d":"feature_sel_model.fit(x,y)","e113b429":"feature_sel_model.get_support()","200b1cbc":"cols= x.columns","e6c24941":"selected_feature = cols[feature_sel_model.get_support()]","efe04e53":"print('total_features {}' .format(x.shape[1]))\nprint('total_features {}' .format(len(selected_feature)))","18d6e35f":"selected_feature","076ce391":"x = x[selected_feature]\nx.info()","216f3010":"from sklearn.model_selection import train_test_split\nx_train , x_test , y_train ,y_test = train_test_split(x , y , test_size=.3 , random_state=42)","873f2d90":"from sklearn.linear_model import LogisticRegression\n\nlogreg =LogisticRegression(solver='liblinear')","de153478":"logreg.fit(x,y)","ef3ead3f":"y_predict =logreg.predict(x_test)","bad65f4a":"from sklearn.metrics import confusion_matrix ,accuracy_score\n","0f9b0255":"confusion_matrix(y_predict,y_test)","4c67e792":"accuracy_score(y_test , y_predict)","a3a33ecd":"from sklearn.model_selection import cross_val_score\n","a546d5e7":"score=cross_val_score(logreg,x,y,cv=10)","f21cc146":"score.mean()","ae70b142":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier","53872de4":"models = []\nmodels.append(('LogisticRegression',LogisticRegression(solver='liblinear')))\nmodels.append(('Naive bayes' ,GaussianNB()))\nmodels.append(('RandomForest' ,RandomForestClassifier()))\nmodels.append(('Decision Tree ' ,DecisionTreeClassifier()))\nmodels.append (('KNN' ,KNeighborsClassifier()))\n","22fb01a1":"for name , model in models :\n    print(name)\n    model.fit(x_train , y_train)\n    \n    prediction = model.predict(x_test)\n    \n    from sklearn.metrics import confusion_matrix\n    \n    print(confusion_matrix(prediction,y_test))\n    print('\\n')\n    print(accuracy_score(prediction,y_test))\n    print('\\n')","5c1a80ba":"**rush of guests and when hotels hame may guests**","70648421":"**Cleaning the data**","feb8ed35":"**from which country vistors come ?**","a79b09f0":"**price per night over the year**","44fbd0b0":"**How much guests pay per night**"}}