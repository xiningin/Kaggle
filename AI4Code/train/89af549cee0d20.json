{"cell_type":{"a02cc753":"code","1a2d8c6c":"code","7b27f908":"code","175c467c":"code","ad430531":"code","aab3050e":"code","ff6e4736":"code","0c1be8ea":"code","9df03b32":"markdown","ccae2314":"markdown","2c25a839":"markdown","b6ed7460":"markdown","08989946":"markdown","9a801ff7":"markdown"},"source":{"a02cc753":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1a2d8c6c":"import pickle","7b27f908":"objects = []\nwith (open(\"..\/input\/valid-numerai-signals-tickers-stocknewsapi\/relevant_tickers.pkl\", \"rb\")) as openfile:\n    while True:\n        try:\n            objects.append(pickle.load(openfile))\n        except EOFError:\n            break\nprint(objects)            ","175c467c":"def iterunpickle(f):\n    unpickler = pickle.Unpickler(f)\n    try:\n        while True:\n            yield unpickler.load()\n    except EOFError:\n        pass","ad430531":"with open(r'..\/input\/valid-numerai-signals-tickers-stocknewsapi\/relevant_tickers.pkl','rb') as pth:\n    for item in iterunpickle(pth):\n        print(item)","aab3050e":"with open('..\/input\/valid-numerai-signals-tickers-stocknewsapi\/relevant_tickers.pkl', 'rb') as f:\n    dest_object_name = pickle.load(f)","ff6e4736":"print(dest_object_name)","0c1be8ea":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. I am still trying to understand Pickle file' )","9df03b32":"#Snippets from Stack Overflow  https:\/\/stackoverflow.com\/questions\/56554371\/view-data-structures-of-pkl-file","ccae2314":"#Snippet from Stack Overflow   https:\/\/stackoverflow.com\/questions\/35067957\/how-to-read-pickle-file","2c25a839":"![](https:\/\/www.tutorialexample.com\/wp-content\/uploads\/2019\/08\/python-pickle-examples-and-tutorials.png)\nhttps:\/\/www.tutorialexample.com\/best-practice-to-save-and-load-python-object-from-a-file-with-pickle-python-tutorial\/","b6ed7460":"#To load any pickle (.pkl) file into a python object, simply do its opposite, as below:\n\n#By Better Programming https:\/\/medium.com\/better-programming\/dont-fear-the-pickle-using-pickle-dump-and-pickle-load-5212f23dbbce","08989946":"Pickle file\n\nWhat pickle does is that it \u201cserialises\u201d the object first before writing it to file. Pickling is a way to convert a python object (list, dict, etc.) into a character stream. The idea is that this character stream contains all the information necessary to reconstruct the object in another python script.\nhttps:\/\/yasoob.me\/2013\/08\/02\/what-is-pickle-in-python\/#:~:text=What%20pickle%20does%20is%20that,object%20in%20another%20python%20script.\n\n\nI could LOAD Pickle but not DUMP it due to read-only error. ","9a801ff7":"#When Not to Pickle Due to Security Risks\n\nOne important word of warning. There is no processing or interpretation of the Python object as it is pickled or unpickled. It is an extremely lean and efficient process, and therein lies its one risk. It is possible to suffer unintended consequences to your computer or to fall victim to malicious code if you unpickle a file of unknown or untrusted origin. So, while this is generically good advice, I would urge a simple practice with regard to pickle files\u2026 DON\u2019T USE IT EXCEPT FOR YOUR OWN CODE! This simple rule should keep you out of trouble. Go forth and brine!\n\nhttps:\/\/medium.com\/better-programming\/dont-fear-the-pickle-using-pickle-dump-and-pickle-load-5212f23dbbce"}}