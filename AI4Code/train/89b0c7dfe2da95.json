{"cell_type":{"3890cafa":"code","6df2d835":"code","6d4bbaa6":"code","ccd124e4":"code","2eba8300":"code","a7158f6d":"code","01ee645f":"code","1fbf4e38":"code","eb5b2f93":"code","7b12cf5d":"code","9eae5850":"code","cd385903":"markdown","6fdbccf7":"markdown","fa2a9106":"markdown","ee671a70":"markdown"},"source":{"3890cafa":"#For data processing and visualization\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#For Clustering Analysis\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn import metrics\nfrom sklearn import tree\n\n#For Prediction Modelling\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier","6df2d835":"data = pd.read_csv(\"\/kaggle\/input\/crop-recommendation-dataset\/Crop_recommendation.csv\")\ndisplay(data.head())\ndisplay(data.tail())\nprint('Data Shape: ', data.shape)\ndisplay(data.isnull().sum())","6d4bbaa6":"rata = {'Kadar N': ['{:.2f}'.format(data['N'].mean())],\n         'Kadar P': ['{:.2f}'.format(data['P'].mean())],\n         'Kadar K': ['{:.2f}'.format(data['K'].mean())],\n         'Temperatur (C)': ['{:.2f}'.format(data['temperature'].mean())],\n         'Kelembaban (%)': ['{:.2f}'.format(data['humidity'].mean())],\n         'pH': ['{:.2f}'.format(data['ph'].mean())],\n         'Curah Hujan (mm)': ['{:.2f}'.format(data['rainfall'].mean())]}\n\nrata = pd.DataFrame(rata, index=['Rata-Rata'])\ndisplay(rata)","ccd124e4":"a = data[data['N'] > 120]['label'].unique()\nb = data[data['P'] > 100]['label'].unique()\nc = data[data['K'] > 200]['label'].unique()\nd = data[data['temperature'] > 30]['label'].unique()\ne = data[data['temperature'] < 10]['label'].unique()\nf = data[data['humidity'] < 20]['label'].unique()\ng = data[data['ph'] > 8]['label'].unique()\nh = data[data['ph'] < 4]['label'].unique()\ni = data[data['rainfall'] > 200]['label'].unique()\nj = data[data['rainfall'] < 40]['label'].unique()\n\nTanamanDetil = pd.DataFrame({'High Nitrogen':pd.Series(a),'High Phospor':pd.Series(b),\n                             'High Potassium':pd.Series(c),'High Temperature':pd.Series(d),\n                             'Low Temperature':pd.Series(e),'Low Humidity':pd.Series(f),\n                             'High pH':pd.Series(g),'Low pH':pd.Series(h),\n                             'High Rainfall':pd.Series(i),'Low Rainfall':pd.Series(j)})\n\nTanamanDetil = TanamanDetil.replace(np.nan, '-')\n\ndisplay(TanamanDetil)\n","2eba8300":"k=(data[(data['temperature'] < 20) & (data['humidity'] < 40)]['label'].unique())\nl=(data[(data['temperature'] > 28) & (data['humidity'] > 40)]['label'].unique())\nm=(data[(data['rainfall'] > 200)] ['label'].unique())\n\nTanamanMusim = pd.DataFrame({'Winter Crop':pd.Series(k),'Summer Crop':pd.Series(l),'Rainfall Crop':pd.Series(m)})\n\nTanamanMusim = TanamanMusim.replace(np.nan, '-')\n\ndisplay(TanamanMusim)","a7158f6d":"x = data.drop(['label'], axis=1)\ny = data['label']\nfrom sklearn.model_selection import train_test_split\nxtrain, xtest, ytrain, ytest = train_test_split(x,y, test_size=0.5, random_state=42)","01ee645f":"#Support Vector Machine Classifier\nsvcs = SVC()\nsvcs.fit(xtrain,ytrain)\nypred2 = svcs.predict(xtest)\nprint(\"Accuracy Score of svcs:\",accuracy_score(ytest,ypred2))\n\n#Decission Tree Classifier\ndtcs = DecisionTreeClassifier(criterion='entropy',random_state=0)\ndtcs.fit(xtrain,ytrain)\nypred3 = dtcs.predict(xtest)\nprint(\"Accuracy Score of dtcs:\",accuracy_score(ytest,ypred3))\n\n#Random Forest Classifier\nrfcs = RandomForestClassifier(random_state=0)\nrfcs.fit(xtrain, ytrain)\nypred4 = rfcs.predict(xtest)\nprint(\"Accuracy Score of rfcs:\",accuracy_score(ytest,ypred4))","1fbf4e38":"from sklearn.metrics import classification_report\nprint(classification_report(ytest,ypred4))","eb5b2f93":"heatmap = confusion_matrix(ytest, ypred4)\n\nplt.figure(figsize = (15,15))\nsns.heatmap(heatmap, cmap='rocket', annot = True, fmt = 'g')","7b12cf5d":"display(data.head())\ndisplay(data.tail())","9eae5850":"contoh = np.array([[60, 55, 44, 20, 80, 7, 200]])\ncontoh1 = np.array([[83, 45, 60, 28, 70, 7, 150]])\ncontoh2 = np.array([[100, 18, 30, 20, 60, 6, 140]])\nprediction = rfcs.predict(contoh)\nprediction1 = rfcs.predict(contoh1)\nprediction2 = rfcs.predict(contoh2)\nprint(prediction)\nprint(prediction1)\nprint(prediction2)","cd385903":"Karena yang paling besar RFCS kita pakai itu.","6fdbccf7":"Average value for each Parameters\/\/\n\nRata-rata nilai tiap parameter","fa2a9106":"Crop classification based on each conditions\/\/\n\nKlasifikasi tiap tanaman berdasarkan kondisi yang disebutkan","ee671a70":"Bikin Confussion Matrix dari RFCS"}}