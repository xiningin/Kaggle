{"cell_type":{"e63c38a8":"code","96fabaa5":"code","dd553ef4":"code","c013a9f4":"code","148b27e0":"code","305255f4":"code","97fb254c":"code","df5d836c":"code","1d2d7198":"code","35bac719":"code","6f8edd76":"code","5ebd1f21":"code","dc321087":"code","d74fcb43":"code","93b0df94":"code","4e60d9ac":"code","e0292514":"code","cf22dfe0":"code","8362fbc0":"code","6ebf1196":"code","34def87e":"code","6c04ac43":"code","56c5c523":"code","60e1b60e":"code","9ea7ed25":"code","7223a522":"code","df3a8b9a":"code","79cbb2b3":"code","88c9f228":"code","285d37c6":"code","51dcf951":"code","38b0fbff":"code","f5c93be0":"code","493135b6":"code","2e3cf833":"code","ab53bdfc":"code","8d2ed0f8":"code","1635e85d":"markdown","6b9693f9":"markdown","b4f94aad":"markdown","e5e2b49a":"markdown","74eb23aa":"markdown","25597ce6":"markdown","ab1cee14":"markdown","0924fecf":"markdown","06d8b1a9":"markdown","720d3365":"markdown","d633c93e":"markdown","511fadf1":"markdown","2a85392b":"markdown","23d1c8b2":"markdown","add1a97a":"markdown","877f2b61":"markdown","d6ed1b5d":"markdown","c090c596":"markdown","cccf0d73":"markdown","2870ab62":"markdown","88cdd88f":"markdown","76fc5c2b":"markdown","7557b03f":"markdown","5e03205c":"markdown","9185a124":"markdown","ec599b18":"markdown","180bccee":"markdown"},"source":{"e63c38a8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","96fabaa5":"#Importing Seaborn\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","dd553ef4":"#Reading from the CSV File\n\ndf = pd.read_csv(\"..\/input\/insurance.csv\")","c013a9f4":"#Check the header to get a rough idea about the columns and rows\n\ndf.head()","148b27e0":"#Describe the dataframe to know about it's statistics \n\ndf.describe().T","305255f4":"#Obtaining the total rows and columns (Entries)\n\ndf.shape","97fb254c":"#We need to get to know about the data types of columns\n\ndf.info()","df5d836c":"#We are checking for Null values\n\ndf.isna().sum()","1d2d7198":"#We are looking for duplicated rows \n\ndf.duplicated().sum()","35bac719":"#Removing duplicated rows\n\ndf = df.drop_duplicates()\ndf.duplicated().sum()","6f8edd76":"#Checking the dataframe\n\ndf","5ebd1f21":"#Checking the 'Sex' column for any ambiguous\/incorrect entries\n\ndf.sex.unique()","dc321087":"#Checking the 'Region' column for any ambiguous\/incorrect entries\n\ndf.region.unique()","d74fcb43":"#Checking the 'Smoker' column for any ambiguous\/incorrect entries\n\ndf.smoker.value_counts()","93b0df94":"#Replacing 'no' with 0 and 'yes' with 1 in the dataframe\n\ndf.smoker.replace({\"no\":0,\"yes\":1}, inplace=True)","4e60d9ac":"df","e0292514":"#Checking the Correlation between each columns\n\ndf.corr()","cf22dfe0":"#We are using Pairplot to get a visual representation of complete data distribution\n\nsns.pairplot(data=df)","8362fbc0":"#We use regplot to draw a linear regression line between two columns, namely, age & expenses here.\n\nsns.regplot(x=df[\"age\"],y=df[\"expenses\"])","6ebf1196":"#We use scatterplot so that we can include the smoker column, which has high correlation with expenses \n#and see whether it gives any knowledge on the dataframe \n\nsns.scatterplot(x=df[\"bmi\"],y=df[\"expenses\"],hue=df[\"smoker\"])","34def87e":"#We can alter the parameters to get a better visual representation\n\nsns.scatterplot(x=df[\"age\"],y=df[\"expenses\"],hue=df[\"smoker\"])","6c04ac43":"#We will make use of the lmplot to draw two regression lines for the parameters.\n\nsns.lmplot(x=\"bmi\", y=\"expenses\", hue=\"smoker\", data=df)","56c5c523":"#We can make use of swarmplot to better understand the relationship between expenses and smoker columns\n\nsns.swarmplot(x=df[\"smoker\"],y=df[\"expenses\"])","60e1b60e":"#Selecting the categorical columns\n\ndf_categorical_col = df.select_dtypes(exclude=np.number).columns\ndf_categorical_col","9ea7ed25":"#Selecting the numerical columns\n\ndf_numeric_col = df.select_dtypes(include=np.number).columns\ndf_numeric_col","7223a522":"#Get the truth table of each row for the categorical columns\n\ndf_onehot = pd.get_dummies(df[df_categorical_col])","df3a8b9a":"#Viewing the obatined truth table\n\ndf_onehot","79cbb2b3":"#Concatenation of encoded data and existing numerical columns we obtained earlier.\n\ndf_after_encoding = pd.concat([df[df_numeric_col],df_onehot], axis = 1)\ndf_after_encoding","88c9f228":"#Importing necessary libraries for Linear Regression\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score","285d37c6":"#Selecting the 'y' value (Target Data)\n\ny = df_after_encoding[\"expenses\"]","51dcf951":"#Selecting the 'x' value (Coefficients array)\n\nx = df_after_encoding.drop(columns = \"expenses\")","38b0fbff":"#Splitting the dataframe into train & test datasets in 70:30 ratio\n\ntrain_x, test_x, train_y, test_y = train_test_split(x,y,test_size=0.3,random_state=1)","f5c93be0":"#Selecting the model\n\nmodel = LinearRegression()","493135b6":"#We need to draw a best-fit line for our model\n\nmodel.fit(train_x,train_y)","2e3cf833":"#Print the obtained 'c' value\n\nprint(model.intercept_)","ab53bdfc":"#Print the obtained 'x' coefficients value\n\nprint(model.coef_)","8d2ed0f8":"#We are Predicting the target data for our dataset\n\nprint(\"Predicting train data\")\ntrain_predict = model.predict(train_x)\nprint(\"Predicting test data\")\ntest_predict = model.predict(test_x)\n\n#Test using MAE, MSE, RMSE, R^2 Error\nprint(\" \")\nprint(\"MAE\")\nprint(\"Train data: \",mean_absolute_error(train_y,train_predict))\nprint(\"Test data: \",mean_absolute_error(test_y,test_predict))\nprint(\" \")\nprint(\"MSE\")\nprint(\"Train data: \",mean_squared_error(train_y,train_predict))\nprint(\"Test data: \",mean_squared_error(test_y,test_predict))\nprint(\" \")\nprint(\"RMSE\")\nprint(\"Train data: \",np.sqrt(mean_squared_error(train_y,train_predict)))\nprint(\"Test data: \",np.sqrt(mean_squared_error(test_y,test_predict)))\nprint(\" \")\nprint(\"R^2\")\nprint(\"Train data: \",r2_score(train_y,train_predict))\nprint(\"Test data: \",r2_score(test_y,test_predict))","1635e85d":"There are no incorrect\/ambiguous entry in this column","6b9693f9":"We will see the whole distribution of data using different plots","b4f94aad":"We can see that the data given to us does not contain any significant outliers","e5e2b49a":"We will check the accuracy of the model by implementing the following tests.","74eb23aa":"There are no incorrect\/ambiguous entry in this column","25597ce6":"We can see that there is a slight difference in the train and test data for every test. We can say that our model is fairly accurate and can be improved upon performing further changes in the preprocessing of data.","ab1cee14":"We can see that the smoker column has been changed to a numerical one","0924fecf":"Since the smoker column has only two distinct categorical entries, we can simply replace them with 0\/1","06d8b1a9":"We need to split the data into Train and Test datasets for training the model and then testing it to check the accuracy.","720d3365":"As expected, smoker column gives us a rough idea on what is influencing the target data.","d633c93e":"There are no incorrect\/ambiguous entry in this column","511fadf1":"We can perform One hot encoding to convert these categorical data to numerical ones as they are nominal data.","2a85392b":"We need to change the plot and try to include one more parameter which might help us understand the data distribution better.","23d1c8b2":"Now, we need to convert the rest of the categorical columns to numbers.","add1a97a":"The above dataframe does not have any categorical columns and can be further used for developing a model","877f2b61":"We have obtained an encoded truth table for all the 1337 entries. Now we need to concatenate it with other numerical columns. ","d6ed1b5d":"We can infer that there are three categorical columns ","c090c596":"Now, we need to preprocess the categorical data and convert it to useful numbers for our model ","cccf0d73":"We can finally infer that the target data of our dataset is strongly depending on smoker column. Apart from this, the bmi and age column has considerable significance as well.","2870ab62":"There are no null values present in the dataframe","88cdd88f":"Our target data is expenses and we can see that it has high correlation with the smoker column.","76fc5c2b":"Again, we need to refine the parameters","7557b03f":"We have obtained the model formula using which we can predict the target data. ","5e03205c":"This does not give a clear idea as the data is distributed evenly. So, we need to change the parameters.","9185a124":"We will be implementing the Linear Regression model","ec599b18":"* There is one duplicated row.\n* We need to remove it from the dataframe","180bccee":"We need to try to draw a linear line between our target data and the columns which have considerable impact on our target data."}}