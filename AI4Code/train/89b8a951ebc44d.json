{"cell_type":{"8c8ad485":"code","46b53ab5":"code","2006dcc7":"code","ff995643":"code","4a1d176f":"code","89fcfa17":"code","49fdc448":"code","7b6a6ff0":"code","f082d994":"code","a46fda1a":"code","78b24787":"code","eead83f2":"code","4bc32353":"code","c6d65dc1":"code","b17b4e4b":"code","ddc93c53":"code","04595170":"code","7eded0b7":"code","6ec06be8":"code","04877b93":"code","133766fb":"code","a846d965":"code","34fbb705":"code","46a4ba1a":"code","9c32c21d":"code","1d9f1649":"code","4763d91d":"code","b00e3daf":"code","cc719ecb":"code","3e1f89e6":"code","7790604e":"code","b2906e16":"code","5d217dac":"code","ecee8b83":"code","ea1a3ba9":"code","e73377f2":"code","d58dcab7":"code","3a003a5e":"code","7382190c":"code","a133a6ce":"code","7b5b2835":"code","4c23083d":"markdown","fd237730":"markdown","ebfa09a0":"markdown","4a13e32e":"markdown","75668937":"markdown","a066831f":"markdown","74785697":"markdown","53e06635":"markdown","f45823e0":"markdown","2f07ff56":"markdown","b05f6d4b":"markdown","39c79af6":"markdown","35cbb87a":"markdown","4554a526":"markdown","b34d8816":"markdown","e22ee08b":"markdown","a8ae6f95":"markdown","25730079":"markdown","f11914ea":"markdown"},"source":{"8c8ad485":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","46b53ab5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns #for plotting\nfrom pandas.plotting import andrews_curves","2006dcc7":"df = pd.read_csv(\"..\/input\/heart-disease-uci\/heart.csv\")","ff995643":"df.head()","4a1d176f":"df.describe()","89fcfa17":"df.shape","49fdc448":"print('Data Sum of Null Values \\n')\ndf.isnull().sum()","7b6a6ff0":"plt.figure(figsize=(8, 6))\nsns.set(style='whitegrid')\ndf.target.value_counts().plot(kind=\"bar\", color=[\"green\", \"blue\"])\nplt.title(\"Disease vs non-Disesase person\")\nplt.xlabel(\"Sex (0 = female, 1= male)\")\nplt.ylabel(\"Count\")","f082d994":"countFemale = len(df[df.sex == 0])\ncountMale = len(df[df.sex == 1])\nprint(\"Percentage of Female Patients: {:.2f}%\".format((countFemale \/ (len(df.sex))*100)))\nprint(\"Percentage of Male Patients: {:.2f}%\".format((countMale \/ (len(df.sex))*100)))","a46fda1a":"mean = df.mean()\nprint(mean)","78b24787":"median = df.median()\nprint(median)","eead83f2":"max = df.max()\nprint(max)","4bc32353":"df.groupby('target').mean()","c6d65dc1":"df.groupby('target').median()","b17b4e4b":"df.groupby('target').max()","ddc93c53":"corr_matrix = df.corr()\nfig, ax = plt.subplots(figsize=(20, 15))\nax = sns.heatmap(corr_matrix,\n                 annot=True,\n                 fmt=\".2f\",\n                 cmap=\"inferno\"); #bone cmap type\n# plt.title('Heatmap for the Dataset', fontsize = 20)\nbottom, top = ax.get_ylim()\nsns.set(font_scale=1.4)\n# ax.set_ylim(bottom + 0.5, top - 0.5)\n#plt.savefig('Heatmap.pdf')  ","04595170":"import matplotlib as mpl\nfrom matplotlib.pyplot import cm\n\ncg = sns.clustermap(corr_matrix, \n                    #cbar_kws={'label': 'Christmas colorbar'},\n                    \n                    annot=True,\n                    fmt=\".2f\",\n                    cmap =\"inferno\",\n                    figsize=(20,16)); \n\nplt.setp(cg.ax_heatmap.yaxis.get_majorticklabels(), rotation = 0) \nplt.xticks(fontsize = 16)\nplt.yticks(fontsize = 16)\n#sns.set(font_scale=1.7)\nplt.savefig('Heatmap2.png', bbox_inches = \"tight\")  \nplt.show()","7eded0b7":"sns.pairplot(df)\nplt.show()","6ec06be8":"df.hist(figsize= (18,12), layout=(4,4));","04877b93":"pd.crosstab(df.age,df.target).plot(kind=\"bar\",figsize=(20,6),color=['blue', '#ffa600'])\n#plt.title('Heart Disease Frequency for Ages')\nplt.grid(False)\nplt.xlabel('Age', fontsize=12, fontname = 'Times New Roman')\nplt.ylabel('Frequency', fontsize=12, fontname = 'Times New Roman')\nplt.savefig('AgeVsTarget.pdf') \nplt.show()","133766fb":"#firstly find min and max ages\nminAge=min(df.age)\nmaxAge=df.age.max()\nmeanAge=df.age.mean()\nprint('Min Age :',minAge)\nprint('Max Age :',maxAge)\nprint('Mean Age :',meanAge)","a846d965":"young_ages=df[(df.age>=29)&(df.age<40)]\nmiddle_ages=df[(df.age>=40)&(df.age<55)]\nelderly_ages=df[(df.age>55)]\nprint('Young Ages :',len(young_ages))\nprint('Middle Ages :',len(middle_ages))\nprint('Elderly Ages :',len(elderly_ages))","34fbb705":"plt.figure(figsize=(8, 6))\nsns.barplot(x=['young ages','middle ages','elderly ages'],y=[len(young_ages),len(middle_ages),len(elderly_ages)], palette=\"CMRmap\",hue=['Young ages','Middle ages', 'Elderly ages'])\nplt.xlabel('Age Range')\nplt.ylabel('Age Counts')\nplt.title('Ages State in Dataset')\nplt.show()","46a4ba1a":"df.sex.value_counts()","9c32c21d":"size = df['sex'].value_counts()\ncolors = ['blue', 'green']\nlabels = \"Male\", \"Female\"\nexplode = [0, 0.01]\n\nmy_circle = plt.Circle((0, 0), 0.7, color = 'white')\n\n\nplt.rcParams['figure.figsize'] = (7, 7)\nplt.pie(size, colors = colors, labels = labels, shadow = True, explode = explode, autopct = '%.2f%%')\nplt.title('Distribution of Gender', fontsize = 20)\np = plt.gcf()\np.gca().add_artist(my_circle)\nplt.legend()\n\n\ntotal_genders_count=len(df.sex)\nmale_count=len(df[df['sex']==1])\nfemale_count=len(df[df['sex']==0])\nplt.text(1, 1,'Total Genders:\\nMale Count:\\nFemale Count  :')\nplt.text(1.55, 1.15,total_genders_count)\nplt.text(1.55, 1.07,male_count)\nplt.text(1.55, .97,female_count)\n\nplt.show()","1d9f1649":"pd.crosstab(df.sex,df.target).plot(kind=\"bar\",figsize=(15,6),color=['#1CA53B','#AA1111' ])\nplt.title('Heart Disease Frequency for Sex')\nplt.xlabel('Sex (0 = Female, 1 = Male)')\nplt.xticks(rotation=0)\nplt.legend([\"Haven't Disease\", \"Have Disease\"])\nplt.ylabel('Frequency')\nplt.show()","4763d91d":"#As seen, there are 4 types of chest pain.\ndf.cp.value_counts()","b00e3daf":"plt.figure(figsize=(10, 6))\nsns.countplot(df.cp, palette=\"magma_r\")\nplt.xlabel('Chest Pain Type')\nplt.ylabel('Count')\nplt.title('Chest Type vs Count State')\nplt.show()","cc719ecb":"pd.crosstab(df.cp,df.target).plot(kind=\"bar\",figsize=(15,6),color=['#11A5AA','#AA1190' ])\nplt.title('Heart Disease Frequency According To Chest Pain Type')\nplt.xlabel('Chest Pain Type')\nplt.xticks(rotation = 0)\nplt.ylabel('Frequency of Disease or Not')\nplt.show()","3e1f89e6":"pd.crosstab(df.fbs,df.target).plot(kind=\"bar\",figsize=(15,6),color=['#FFC300','#581845' ])\nplt.title('Heart Disease Frequency According To FBS')\nplt.xlabel('FBS - (Fasting Blood Sugar > 120 mg\/dl) (1 = true; 0 = false)')\nplt.xticks(rotation = 0)\nplt.legend([\"Haven't Disease\", \"Have Disease\"])\nplt.ylabel('Frequency of Disease or Not')\nplt.show()","7790604e":"df.thalach.value_counts()[:20]\n#First show 20 rows","b2906e16":"plt.figure(figsize=(12, 6))\nsns.barplot(x=df.thalach.value_counts()[:20].index,y=df.thalach.value_counts()[:20].values)\nplt.xlabel('Thalach')\nplt.ylabel('Count')\nplt.title('Thalach Counts')\nplt.xticks(rotation=45)\nplt.show()","5d217dac":"age_unique=sorted(df.age.unique())\nage_thalach_values=df.groupby('age')['thalach'].count().values\nmean_thalach=[]\nfor i,age in enumerate(age_unique):\n    mean_thalach.append(sum(df[df['age']==age].thalach)\/age_thalach_values[i])","ecee8b83":"#data_sorted=data.sort_values(by='Age',ascending=True)\nplt.figure(figsize=(15,5))\nsns.pointplot(x=age_unique,y=mean_thalach,color='red',alpha=0.8)\nplt.xlabel('Age',fontsize = 15,color='blue')\nplt.xticks(rotation=45)\nplt.ylabel('Thalach',fontsize = 15,color='blue')\nplt.title('Age vs Thalach',fontsize = 15,color='blue')\nplt.grid()\nplt.show()","ea1a3ba9":"plt.figure(figsize=(8,6))\nplt.scatter(x=df.age[df.target==1], y=df.thalach[(df.target==1)]) # c=\"yellow\" for color\nplt.scatter(x=df.age[df.target==0], y=df.thalach[(df.target==0)])\n#plt.title(\"Age vs Max Heart rate\", fontsize=11, fontname = 'Times New Roman')\nplt.legend([\"Disease\", \"Not Disease\"])\nplt.xlabel(\"Age\", fontsize=11, fontname = 'Times New Roman')\nplt.ylabel(\"Maximum Heart Rate\", fontsize=11, fontname = 'Times New Roman')\nplt.savefig('HeartRate vs Age.pdf')\nplt.show()","e73377f2":"pd.crosstab(df.slope,df.target).plot(kind=\"bar\",figsize=(15,6),color=['lightgreen','#FF5733' ])\nplt.title('Heart Disease Frequency for Slope')\nplt.xlabel('The Slope of The Peak Exercise ST Segment ')\nplt.xticks(rotation = 0)\nplt.ylabel('Frequency')\nplt.show()","d58dcab7":"df.thal.value_counts()","3a003a5e":"plt.figure(figsize=(8, 6))\nsns.countplot(df.thal, palette=\"cubehelix_r\")\nplt.show()","7382190c":"df[(df['thal']==1)].target.value_counts()\nplt.figure(figsize=(8, 6))\nsns.barplot(x=df[(df['thal']==1)].target.value_counts().index,y=df[(df['thal']==1)].target.value_counts().values, palette=\"Oranges_r\",hue=['0','1'])\nplt.xlabel('Thal Value')\nplt.ylabel('Count')\nplt.title('Counter for Thal')\nplt.show()","a133a6ce":"plt.figure(figsize=(8,5))\nsns.countplot(df.target, palette=\"Purples_r\")\nplt.xlabel('Target')\nplt.ylabel('Count')\nplt.title('Target Counter 1 & 0')\nplt.show()","7b5b2835":"sns.countplot(df.target,hue=df.sex)\nplt.xlabel('Target')\nplt.ylabel('Count')\nplt.title('Target & Sex Counter 1 & 0')\nplt.show()","4c23083d":"# **Please upvote if it helps you**","fd237730":"# Analysis using Sex","ebfa09a0":"# Analysis using Age","4a13e32e":"# Data Description\n\n **1. age**: The person's age in years\n\n **2. sex**: The person's sex (1 = male, 0 = female)\n\n **3. cp**: Chest pain type \n            * 0: Typical angina: chest pain related decrease blood supply to the heart\n            * 1: Atypical angina: chest pain not related to heart\n            * 2: Non-anginal pain: typically esophageal spasms (non heart related)\n            * 3: Asymptomatic: chest pain not showing signs of disease\n            \n**4. trestbps**: resting blood pressure (in mm Hg on admission to the hospital)\n\n**5. chol**: The person's cholesterol measurement in mg\/dl\n\n**6. fbs**: the perdon's fasting blood sugar > 120 mg\/dl. (1 = true; 0 = false)\n\n**7. restecg**: Resting electrocardiographic results\n\n     0: Nothing to note\n     1: ST-T Wave abnormality\n        * can range from mild symptoms to severe problems\n        * signals non-normal heart beat\n     2: Possible or definite left ventricular hypertrophy\n        * Enlarged heart's main pumping chamber\n        \n**8. thalach**: Maximum heart rate achieved\n\n**9. exang**: Exercise induced angina (1 = yes; 0 = no)\n\n**10. oldpeak**: - ST depression induced by exercise relative to rest looks at stress of heart during excercise unhealthy heart will stress more\n\n**11. slope**: - the slope of the peak exercise ST segment\n    * 0: Upsloping: better heart rate with excercise (uncommon)\n    * 1: Flatsloping: minimal change (typical healthy heart)\n    * 2: Downslopins: signs of unhealthy heart\n    \n**12. ca**: Number of major vessels (0-3) colored by flourosopy\n    * colored vessel means the doctor can see the blood passing through\n    * the more blood movement the better (no clots)\n    \n**13. thal**: Thalium stress result\n    * 1,3: normal\n    * 6: fixed defect: used to be defect but ok now\n    * 7: reversable defect: no proper blood movement when excercising\n    \n**14. target**: Person have disease or not (1=yes, 0=no) (= the predicted attribute)","75668937":"# Thal Analysis\nThalium stress result\n\n* 1,3: normal\n* 6: fixed defect: used to be defect but ok now\n* 7: reversable defect: no proper blood movement when excercising","a066831f":"### Percentage of patients","74785697":"# Analysis Using thalach\nMaximum heart rate achieved","53e06635":"## Making a Heatmap","f45823e0":"# Analysis using Chest Pain Type","2f07ff56":"All correlation values between the data are listed in the previous sections. As a result of this listing, it is aimed to ensure that these properties are used in different places by performing different operations. Thus, the p-value process determines a hypothesis and a hypothesis thesis is presented between each characteristic according to this hypothesis. In this process, after determining the Class property as hypothesis, the relations between all the other properties are checked. This results in a different number for each property. What is important here is that these numbers are not close to 1.00. If the number is close to 1.00 this is very bad.\n\nThe above heat map is to show the correlations amongst the different attributes of the given dataset. The above Heat Map shows that almost all of the features\/attributes given in the dataset are very less correlated with each other. This implies we must include all of the features, as we can only eliminate those features where the correlation of two or more features are very high.\n\nwe observe positive correlation between target and cp, thalach,slope\nand also negative correlation between target and sex, exang,ca,thai,oldpeak","b05f6d4b":"# Analysis Target\nPerson have disease or not (1=yes, 0=no) (= the predicted attribute)","39c79af6":" - Here I use 29-39 as Young age\n\n - 40-54 as Middle age and \n\n - older than 55 as Eardly age","35cbb87a":"# Analysis using slope\nthe slope of the peak exercise ST segment\n\n* 0: Upsloping: better heart rate with excercise (uncommon)\n* 1: Flatsloping: minimal change (typical healthy heart)\n* 2: Downslopins: signs of unhealthy heart","4554a526":"## mean, median & max value of all coulmn ","b34d8816":"In the dataset we have some patient clinical report, We have to predict they have heart disease or not?","e22ee08b":"# Analysis Using fbs\nThe person's fasting blood sugar > 120 mg\/dl. (1 = true; 0 = false)","a8ae6f95":"# Heart disease analysis","25730079":"# Data Visualization","f11914ea":"# Load the data"}}