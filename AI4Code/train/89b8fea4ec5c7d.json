{"cell_type":{"4ee25fa6":"code","0f739ac7":"code","fe04221c":"code","f7c6e6cd":"code","de076a70":"code","cf934e3c":"code","8340baba":"code","e7e3a4e2":"code","fbe04610":"code","7468f34e":"markdown","570d01a9":"markdown","349211fd":"markdown","8aa3723a":"markdown","ac5a6e2c":"markdown"},"source":{"4ee25fa6":"import os\nimport cv2\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","0f739ac7":"ship_dir = '..\/input'\ntrain_image_dir = os.path.join(ship_dir, 'train')\ntest_image_dir = os.path.join(ship_dir, 'test')\nboundaries = pd.read_csv(os.path.join(ship_dir, 'train_ship_segmentations.csv'))\nboundaries.head()","fe04221c":"not_empty = pd.notna(boundaries.EncodedPixels)\nprint(\"{} images(has ships) with {} masks\".format(boundaries[not_empty].ImageId.nunique(), not_empty.sum()))\nprint('{} images(with no ships) in {} total images'.format((~not_empty).sum(), boundaries.ImageId.nunique()))","f7c6e6cd":"# GET IMAGE PATHS\nimage_paths = []\nfor root, dirs, files in os.walk(train_image_dir):\n    for imgname in files:\n        image_paths.append(os.path.join(root, imgname))\nprint(len(image_paths), \"Images found\")\nprint(\"Sample image path:\", image_paths[0])","de076a70":"# PARAMETERS\nMASK_SHAPE = (768, 768)\nSAMPLE_SIZE = 20","cf934e3c":"# Boundaries to MASK per image\ndef rle_to_mask_per_image(boundaries):\n    mask_dict = {}\n    for (imgID, rle) in boundaries.itertuples(index=False):\n        \n        # add new key\n        if imgID not in mask_dict.keys():\n            mask_dict[imgID] = []\n        else:\n            pass\n        \n        # Create empty mask\n        _mask = np.zeros(MASK_SHAPE, dtype=np.uint8)\n        \n        # create mask from boundaries\n        if str(rle) == 'nan':\n            mask_dict[imgID].append(_mask)\n        else:\n            rle = rle.split(' ')\n            for i in range(0, len(rle)-1, 2):\n                _mask = _mask.flatten()\n                # whiten given pixels\n                _mask[int(rle[i]): int(rle[i])+int(rle[i+1])] = 255\n            mask_dict[imgID].append(_mask.reshape(MASK_SHAPE))\n    \n    # merge masks into one mask of single image\n    mask_per_image_dict = {}        \n    for key in mask_dict.keys():\n        # Empty mask for joining all masks\n        mastermask = np.zeros(MASK_SHAPE, dtype=np.uint8)\n        for mask in mask_dict[key]:\n            mastermask |= mask.T\n        mask_per_image_dict[key] = mastermask\n    return mask_per_image_dict","8340baba":"# GET SAMPLE IMAGES AND MASKS\nsample_masks_dict = rle_to_mask_per_image(boundaries.head(SAMPLE_SIZE))","e7e3a4e2":"# SHARPEN IMAGES\nkernel = np.array([[0, -1, 0], [-1, 5, -1], [0, -1, 0]])\ndef sharpen(img):\n    return cv2.filter2D(img, -1, kernel)","fbe04610":"for key in sample_masks_dict.keys():\n    plt.figure(figsize=(15,20))\n    plt.subplot(1,2,1)\n    plt.axis('off')\n    plt.title(\"Image\")\n    img = plt.imread(os.path.join(train_image_dir, key))\n    # Make image sharp if needed\n    #img = sharpen(img)\n    plt.imshow(img)\n    plt.subplot(1,2,2)\n    plt.axis('off')\n    plt.title(\"Mask\")\n    plt.imshow(sample_masks_dict[key], cmap='gray')\n    plt.show()\n    ","7468f34e":"### Check how many images has ships and how many not","570d01a9":"### Convert RLE to Masks","349211fd":"### Get image paths","8aa3723a":"## Visualization","ac5a6e2c":"### Some parameters"}}