{"cell_type":{"061702eb":"code","7a2b21da":"code","d77dc7e8":"code","2cd2b29a":"code","f9d77014":"code","12d96492":"code","d803afe1":"code","024217f1":"code","173a16e6":"markdown","760903bf":"markdown","2e907361":"markdown","719042cc":"markdown","5d9b1d97":"markdown"},"source":{"061702eb":"%%capture\n!pip install autogluon.vision --pre\n!pip install mxnet-cu110","7a2b21da":"import os\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport logging\nlogging.basicConfig(level=logging.INFO)\n# attach logging to console\nlogging.getLogger().addHandler(logging.StreamHandler())","d77dc7e8":"import autogluon.core as ag\nfrom autogluon.vision import ImagePredictor","2cd2b29a":"def fix_root(df, root='\/kaggle\/input\/classify-leaves'):\n    df['image'] = df['image'].apply(lambda x: os.path.join(root, x))\n    return df\n\n# load train data\ntrain_data = fix_root(pd.read_csv('\/kaggle\/input\/classify-leaves\/train.csv'))","f9d77014":"predictor = ImagePredictor(verbosity=1).fit(train_data, time_limit=3600*3, presets='medium_quality_faster_train', hyperparameters={'epochs': 30, 'model': 'resnest50', 'lr': ag.Categorical(0.1, 0.15)}) \nprint(predictor.fit_summary())","12d96492":"test = pd.read_csv('\/kaggle\/input\/classify-leaves\/test.csv')\ntest","d803afe1":"pred_test = predictor.predict(fix_root(test.copy()))\n# save prediction with image id\ny = pd.concat([test, pred_test.to_frame(name='label')], axis=1)\ny.to_csv('submission_test.csv', index=False)\ny","024217f1":"predictor.save('predictor.ag')","173a16e6":"### Step 3: Test","760903bf":"# Enter the competition!\n### Step 1: import autogluon","2e907361":"### Last step: save model and submission file","719042cc":"### Step 0: Install autogluon via pip and import necessary packages \n\nMake sure you select the GPU accelerator","5d9b1d97":"### Step 2: Apply customization to competition data"}}