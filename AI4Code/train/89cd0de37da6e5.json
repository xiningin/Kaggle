{"cell_type":{"31913c70":"code","44b54df3":"code","35663b8d":"code","f97eba0a":"code","77122d2f":"code","8b043e99":"code","95b27669":"code","98f9908a":"code","1eb4a39d":"code","1619f33b":"code","86d9d7ea":"code","b3607021":"code","a8d11d53":"code","e30d350f":"code","e4002345":"code","757369fe":"code","5f79651b":"code","47cf838d":"code","9e485a72":"code","9f546567":"code","d74e47f2":"code","d2f383be":"code","d58be97a":"code","f8cc0779":"code","a7b1f10c":"code","ae950e2d":"code","5fac4830":"code","d24b26f5":"code","9f4c44ac":"code","08e2636f":"markdown","bb8e3843":"markdown","c7d9d4ad":"markdown","4daca9a2":"markdown","9ab0ac2c":"markdown","d391a560":"markdown","d9afbeb2":"markdown","c0d19416":"markdown","70e92701":"markdown"},"source":{"31913c70":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport os\n\nfrom sklearn.model_selection import train_test_split\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","44b54df3":"heart = pd.read_csv(\"..\/input\/heart-failure\/heart_failure.csv\")\nheart.head()","35663b8d":"heart.info()","f97eba0a":"heart.describe()","77122d2f":"heart.isnull()","8b043e99":"heart.isnull().sum()","95b27669":"heart=heart.dropna(axis=0)\n\nheart.drop_duplicates(inplace=True)\n\nsns.heatmap(heart.isnull(),cbar=False,yticklabels=False)","98f9908a":"heart.columns","1eb4a39d":"plt.figure(figsize=(50,50))\nsns.pairplot(data=heart,x_vars=['ejection_fraction','platelets','age','anaemia','creatinine_phosphokinase','diabetes'],y_vars=\"DEATH_EVENT\")","1619f33b":"sns.pairplot(data=heart,x_vars=['high_blood_pressure','platelets','serum_creatinine','serum_sodium','sex','smoking','time'],y_vars=\"DEATH_EVENT\")","86d9d7ea":"c={\"Aggregate_of_all\":(heart[\"age\"]+heart[\"anaemia\"]+heart[\"creatinine_phosphokinase\"]+heart[\"diabetes\"]+heart[\"ejection_fraction\"]+heart[\"high_blood_pressure\"]+\n                heart[\"platelets\"]+heart[\"serum_creatinine\"]+heart[\"serum_sodium\"]+heart[\"sex\"]+heart[\"smoking\"]+heart[\"time\"]),\"Diagnosis (Death_Event)\":heart[\"DEATH_EVENT\"]}\ndata_1 = pd.DataFrame(data=c)\ndata_1.head()","b3607021":"data_1[\"Aggregate_of_all\"]=(data_1[\"Aggregate_of_all\"]-data_1[\"Aggregate_of_all\"].min())\/(data_1[\"Aggregate_of_all\"].max()-data_1[\"Aggregate_of_all\"].min())\n\nsns.scatterplot(data = data_1, x=\"Aggregate_of_all\",y=\"Diagnosis (Death_Event)\",legend='auto')","a8d11d53":"#Plotting Histogram with subplots\nplt.figure(figsize=(100,100))\nsns.set(style=\"darkgrid\")\nplotnumber=1\nfor column in heart:\n    if plotnumber<=13 :\n        ax=plt.subplot(5,6,plotnumber)\n        sns.histplot(heart[column],kde=True)\n        plt.xlabel(column)\n    plotnumber+=1\nplt.show()","e30d350f":"#Plotting Boxplots with subplots\nplt.figure(figsize=(100,100))\nplotnumber=1\nfor column in heart:\n    if plotnumber<=30:\n        ax=plt.subplot(5,6,plotnumber)\n        sns.boxplot(x=heart[column])\n        plt.xlabel(column)\n    plotnumber+=1\nplt.title(\"Distribution\")\nplt.show()","e4002345":"#Plotting the Heatmap for the given data\nplt.figure(figsize=(20,20))\nsns.heatmap(heart.corr(),annot=True)","757369fe":"x = heart[['time','ejection_fraction','serum_creatinine']]\ny = heart[\"DEATH_EVENT\"]\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=2)\n\nx_train.shape","5f79651b":"y_train.shape","47cf838d":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report","9e485a72":"log_reg=LogisticRegression()\n\nlog_reg.fit(x_train,y_train)\nlog_reg_prediction=log_reg.predict(x_test)\n\nConfMatr_1 = confusion_matrix(y_test, log_reg_prediction)\nsns.heatmap(ConfMatr_1,annot=True)","9f546567":"print(\"{}%\".format(accuracy_score(y_test, log_reg_prediction)*100))","d74e47f2":"print(classification_report(y_test,log_reg_prediction))","d2f383be":"from sklearn.neighbors import KNeighborsClassifier","d58be97a":"knn = KNeighborsClassifier(n_neighbors=15)\nknn.fit(x_train,y_train)","f8cc0779":"knn_pred = knn.predict(x_test)","a7b1f10c":"print(\"{}%\".format(accuracy_score(y_test,knn_pred)*100))","ae950e2d":"CM_k=confusion_matrix(y_test,knn_pred)\nsns.heatmap(CM_k,annot=True)","5fac4830":"print(classification_report(y_test,knn_pred))","d24b26f5":"list_1 = list([\"KNN\",\"LogisticRegression\"])\nlist_2 = list([93.3,90])\nsns.barplot(x=list_2,y=list_1,palette=\"Blues_d\")","9f4c44ac":"a={\"KNN\":[\"93.3\"],\"LogisticRegression\":[\"90\"]}\nscore=pd.DataFrame(data=a)\n\nscore","08e2636f":"# Importing Dataset and Understanding the Data","bb8e3843":"# Data Cleaning","c7d9d4ad":"# K-Nearest Neighbors","4daca9a2":"# Data Training","9ab0ac2c":"# Data Normalizing","d391a560":"# Logistic Regression","d9afbeb2":"# Results","c0d19416":"# Distribution of data","70e92701":"## Plotting the fields with Death event to observe it's relationship"}}