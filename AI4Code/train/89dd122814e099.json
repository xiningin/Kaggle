{"cell_type":{"4eca3528":"code","3e73666f":"code","5a254516":"code","897941cd":"code","dc7b00da":"code","b07d0bac":"code","355dd1d5":"code","9ea43ab9":"markdown","8a826178":"markdown"},"source":{"4eca3528":"# Set up feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.sql.ex5 import *\nprint(\"Setup Complete\")","3e73666f":"from google.cloud import bigquery\nimport pandas as pd\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"chicago_taxi_trips\" dataset\ndataset_ref = client.dataset(\"chicago_taxi_trips\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)","5a254516":"table_ref = dataset_ref.table(\"taxi_trips\")\ntable = client.get_table(table_ref)\n\nclient.list_rows(table, max_results=5).to_dataframe()","897941cd":"# Kaggle's solution with DATE\ndate_query = \"\"\"\n               WITH RelevantRides AS\n               (\n                   SELECT EXTRACT(HOUR FROM trip_start_timestamp) AS hour_of_day, \n                          trip_miles, \n                          trip_seconds\n                   FROM `bigquery-public-data.chicago_taxi_trips.taxi_trips`\n                   WHERE trip_start_timestamp > '2017-01-01' AND \n                         trip_start_timestamp < '2017-01-02' AND \n                         trip_seconds > 0 AND \n                         trip_miles > 0\n               )\n               SELECT hour_of_day, \n                      COUNT(1) AS num_trips, \n                      3600 * SUM(trip_miles) \/ SUM(trip_seconds) AS avg_mph\n               FROM RelevantRides\n               GROUP BY hour_of_day\n               ORDER BY hour_of_day\n               \"\"\"\n\n# Set up the query (cancel the query if it would use too much of \n# your quota, with the limit set to 1 GB)\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=5*10**9)\ndate_query_job = client.query(date_query, job_config=safe_config)\n\n# API request - run the query, and return a pandas DataFrame\ndate_result = date_query_job.to_dataframe()\n\n# Prints sum of 70974\nprint(date_result[\"num_trips\"].sum())","dc7b00da":"# My solution with timestamp\ntimestamp_query = \"\"\"\n               WITH RelevantRides AS\n               (\n                   SELECT EXTRACT(HOUR from trip_start_timestamp) AS hour_of_day, trip_miles, trip_seconds\n                   \n                   FROM `bigquery-public-data.chicago_taxi_trips.taxi_trips`\n                   WHERE EXTRACT(DATE from trip_start_timestamp) > '2017-01-01' and \n                         EXTRACT(DATE from trip_start_timestamp) < '2017-01-02' \n                   and trip_seconds > 0 and trip_miles > 0\n               )\n               SELECT hour_of_day, COUNT(hour_of_day) as num_trips, 3600 * SUM(trip_miles) \/ SUM(trip_seconds) AS avg_mph\n               FROM RelevantRides\n               GROUP BY hour_of_day\n               ORDER BY hour_of_day\n               \"\"\"\n\n# Set up the query (cancel the query if it would use too much of \n# your quota, with the limit set to 1 GB)\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=5*10**9)\ntimestamp_query_job = client.query(timestamp_query, job_config=safe_config)\n\n# API request - run the query, and return a pandas DataFrame\ntimestamp_result = timestamp_query_job.to_dataframe()\n\n# Returns Zero\nprint(timestamp_result[\"num_trips\"].sum())","b07d0bac":"#Query for check, DATE approach\n\nquery1 = \"\"\"SELECT trip_start_timestamp AS time_stamp, EXTRACT(HOUR from trip_start_timestamp) AS hour\n            FROM `bigquery-public-data.chicago_taxi_trips.taxi_trips`\n            WHERE trip_seconds > 0 and trip_miles > 0 and\n            trip_start_timestamp > '2017-01-01' AND \n            trip_start_timestamp < '2017-02-01' and\n            EXTRACT(HOUR from trip_start_timestamp) = 5 and\n            EXTRACT(DAY from trip_start_timestamp) = 13\n            ORDER BY time_stamp\n            \"\"\"\n\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=5*10**9)\nquery1_job = client.query(query1, job_config=safe_config)\n\nquery_results = query1_job.to_dataframe()\nprint(query_results.tail(5))","355dd1d5":"#Query for check, timestamp approach\nquery2 = \"\"\"SELECT trip_start_timestamp AS time_stamp, EXTRACT(HOUR from trip_start_timestamp) AS hour\n            FROM `bigquery-public-data.chicago_taxi_trips.taxi_trips`\n            WHERE trip_seconds > 0 and trip_miles > 0 and\n            EXTRACT(DATE from trip_start_timestamp) > '2017-01-01' and \n            EXTRACT(DATE from trip_start_timestamp) < '2017-02-01' and\n            EXTRACT(HOUR from trip_start_timestamp) = 5 and\n            EXTRACT(DAY from trip_start_timestamp) = 13\n            ORDER BY time_stamp\n            \"\"\"\n\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=5*10**9)\nquery2_job = client.query(query2, job_config=safe_config)\n\nquery_results = query2_job.to_dataframe()\nprint(query_results.tail(5))","9ea43ab9":"If results are taken somewhere in the middle of the range, the values obtained by two approach are the same","8a826178":"The timestamp approach returns empty DataFrame for a single day, it does not count from the first day, so we are loosing 50277 values for the range between 2017-01-01 to 2017-01-02. This is exact the difference for our range of intererst in 2017."}}