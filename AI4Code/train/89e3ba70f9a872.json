{"cell_type":{"29135169":"code","e6363ef2":"code","31542bb5":"code","1ceb3533":"code","48373236":"code","dbad1365":"code","22bd86f3":"markdown","603477f7":"markdown","2def6848":"markdown"},"source":{"29135169":"import os\nimport numpy as np # linear algebra\n\nimport matplotlib.pyplot as plt\nimport pydicom\n\nimport pandas as pd","e6363ef2":"def plot_pixel_array(image, figsize=(10,10)):\n    '''\n        param: \n            - image: np.array\n    '''\n    plt.figure(figsize=figsize)\n    plt.imshow(image, cmap=plt.cm.bone)\n    plt.show()\n    \ndef show_dcm_info(patientImg):\n    '''\n        param: \n            - patientImg: header data of dicom file.\n    '''\n    print(\"File Path:\", filePath)\n    print(\"Patient's Gender :\", patientImg.PatientSex)\n    \n    if 'PixelData' in patientImg:\n        rows = int(patientImg.Rows)\n        cols = int(patientImg.Columns)\n        print(\"Image size : {rows:d} x {cols:d}, {size:d} bytes\".format(\n            rows=rows, cols=cols, size=len(patientImg.PixelData)))\n        # Some patient have no pixel spacing value\n        if 'PixelSpacing' in patientImg:\n            print(\"Pixel spacing :\", patientImg.PixelSpacing)","31542bb5":"DIR = '\/kaggle\/input\/vinbigdata-chest-xray-abnormalities-detection'\ntrainPath: list = [(DIR + '\/train\/' + x) for x in os.listdir(DIR + '\/train')]\ntestPath: list = [(DIR + '\/test\/' + x) for x in os.listdir(DIR + '\/test')]\nprint(os.listdir(DIR))","1ceb3533":"sampleId: int = np.random.randint(0, len(trainPath))\ndicom_info = pydicom.dcmread(trainPath[sampleId])\ndicom_array = dicom_info.pixel_array\n\nprint('the number of train set: {}'.format(len(trainPath)))\nprint('the number of test set: {}'.format(len(testPath)))\nprint('Patient #{}'.format(sampleId))\nprint('Type of image:', type(dicom_array))\nprint('Shape of image:', dicom_array.shape)\nplt.figure(figsize=(7, 7))\nplt.imshow(dicom_array, cmap=plt.cm.bone)\nplt.show()","48373236":"df_train = pd.read_csv(DIR + \"\/train.csv\")\nprint('Shape of file csv: {}'.format(df_train.shape))\nprint('Colume name csv: {}'.format(df_train.columns))\nprint(df_train.head(20))\nprint(df_train['image_id'][0])","dbad1365":"i = 1\nnum_to_plot = 2\nfor filePath in trainPath:\n    data_info = pydicom.dcmread(filePath)\n    show_dcm_info(data_info)\n    plot_pixel_array(data_info.pixel_array, (5,5))\n    if i >= num_to_plot:\n        break\n    i += 1","22bd86f3":"## Show information of dataset","603477f7":"## Show some patient information","2def6848":"# Utils function"}}