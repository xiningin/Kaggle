{"cell_type":{"9ad457e5":"code","8f790f2b":"code","118043da":"code","7b472205":"code","c8b1bad4":"code","0657716e":"code","6e85c5f0":"code","207e0b27":"code","7b2efe41":"code","46538c9e":"code","869af169":"code","19a8d717":"code","737dfc39":"code","96c32db8":"code","f2795c1d":"code","8f774686":"code","99c3e02f":"code","0addf6d0":"code","5effccf3":"code","b4373bb3":"markdown","8209511f":"markdown","df6512ab":"markdown","6e6ee196":"markdown","9ce0172f":"markdown","ae4426a0":"markdown","e3be050d":"markdown","6cb05f1c":"markdown","7d9df907":"markdown","dd8c82bb":"markdown"},"source":{"9ad457e5":"import pandas as pd\nimport numpy as np\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly as py\nimport plotly.graph_objs as go\nimport plotly.tools as tools\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud\nimport seaborn as sns \nimport calendar\nimport datetime\ninit_notebook_mode(connected=True)\n","8f790f2b":"path_classified = '..\/input\/olist_classified_public_dataset.csv';\ndf_classified = pd.read_csv(path_classified)\ndf_classified.head()","118043da":"df_classified.describe()","7b472205":"trace1 = go.Histogram(\n    x = df_classified['order_products_value'],\n    name = 'Order Products Value',\n     xbins=dict(\n        start=1.0,\n        end=50,\n        size=0.5\n    ),\n    marker=dict(\n        color='#3CB371'\n    ),\n    opacity=0.75\n)\n\ndata = [trace1]\n\nlayout = go.Layout(\n    title = 'Orders',\n    xaxis = dict (\n        title='Value'\n    ),\n    yaxis = dict (\n        title='Count'\n    ),\n    bargap = 0.2,\n    bargroupgap = 0.1\n)\nfig = go.Figure(data=data, layout=layout)\npy.offline.iplot(fig, filename='histogram')","c8b1bad4":"trace1 = go.Box(\n    name = 'Order Sellers Qty',\n    y = df_classified['order_sellers_qty']\n)\n\ntrace2 = go.Box(\n    name = 'Order Freight Value',\n    y = df_classified['order_freight_value']\n)\n\ntrace3 = go.Box(\n    name = 'Order Products Value',\n    y = df_classified['order_products_value']\n)\ndata = [trace1, trace2, trace3]\npy.offline.iplot(data)","0657716e":"order_by_uf_sorted = df_classified.groupby('customer_state').size().reset_index(name='total_orders')","6e85c5f0":"trace = go.Bar(\n    x = order_by_uf_sorted['customer_state'],\n    y = order_by_uf_sorted['total_orders'],\n    name = 'Orders By UF'\n)\n\ndata = [trace]\nlayout = go.Layout(\n    title='Total Orders by UF',\n    xaxis=dict(\n        title='UF',\n        tickangle=-45,\n        titlefont=dict(\n            size=14,\n            color='rgb(107,107,107)'\n        )\n    ),\n    yaxis=dict(\n        title='Total Orders',\n        titlefont=dict(\n            size=14,\n            color='rgb(107,107,107)'\n        )\n    )\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.offline.iplot(fig, filename='order-by-uf-bar')","207e0b27":"df_problems = df_classified[df_classified.most_voted_class == 'problemas_de_entrega'].groupby(['customer_state']).size().reset_index(name='total')\n","7b2efe41":"trace = go.Bar(\n    x = df_problems['customer_state'],\n    y = df_problems['total']\n)\n\ndata = [trace]\nlayout = go.Layout(\n    title='Delivery Problems By UF',\n    xaxis=dict(\n        title='UF',\n        tickangle=-45,\n        titlefont=dict(\n            size=14,\n            color='rgb(107,107,107)'\n        )\n    ),\n    yaxis=dict(\n        title='Total Problems',\n        titlefont=dict(\n            size=14,\n            color='rgb(107,107,107)'\n        )\n    )\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.offline.iplot(fig, filename='order-by-uf-bar')","46538c9e":"df_happy_clients = df_classified[(df_classified.most_voted_subclass == 'satisfeito') | (df_classified.most_voted_class == 'satisfeito_com_pedido')].groupby(['customer_state']).size().reset_index(name='total')","869af169":"trace = go.Bar(\n    x = df_happy_clients['customer_state'],\n    y = df_happy_clients['total']\n)\n\ndata = [trace]\nlayout = go.Layout(\n    title='Happy Clients By UF',\n    xaxis=dict(\n        title='UF',\n        tickangle=-45,\n        titlefont=dict(\n            size=14,\n            color='rgb(107,107,107)'\n        )\n    ),\n    yaxis=dict(\n        title='Total',\n        titlefont=dict(\n            size=14,\n            color='rgb(107,107,107)'\n        )\n    )\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.offline.iplot(fig, filename='order-by-uf-bar')","19a8d717":"month_names = {1: 'Jan', 2: 'Feb', 3: 'Mar', 4: 'Apr', 5: 'May',\n            6: 'Jun', 7: 'Jul', 8: 'Aug', 9: 'Sep', 10: 'Oct', 11: 'Nov', 12: 'Dec'}\n\npath_public_v2 = '..\/input\/olist_public_dataset_v2.csv';\ndf_public_v2 = pd.read_csv(path_public_v2)\ndf_public_v2['month_code'] = pd.DatetimeIndex(df_public_v2['order_purchase_timestamp']).month\ndf_public_v2['month'] = pd.DatetimeIndex(df_public_v2['order_purchase_timestamp']).month\ndf_public_v2['month'] = df_public_v2['month'].apply(lambda x: month_names[x])\ndf_public_v2['year'] = pd.DatetimeIndex(df_public_v2['order_purchase_timestamp']).year\ndf_public_v2.head()","737dfc39":"path_product_category = '..\/input\/product_category_name_translation.csv';\ndf_product_category = pd.read_csv(path_product_category)","96c32db8":"df_public_v3 = df_public_v2[(df_public_v2.year == 2018)]\ndf_orders_categories = pd.merge(df_public_v3, df_product_category, on ='product_category_name')","f2795c1d":"order_by_category = df_orders_categories.groupby('product_category_name_english').size().reset_index(name='total_orders')\norder_by_category_top10 = order_by_category.sort_values(by='total_orders', ascending=False).head(10)","8f774686":"trace = go.Bar(\n    x = order_by_category_top10.total_orders,\n    y = order_by_category_top10.product_category_name_english,\n    orientation = 'h',\n     marker = dict(\n        color='rgba(50, 171, 96, 0.6)',\n        line=dict(\n            color='rgba(50, 171, 96, 1.0)',\n            width=1),\n    )\n)\n\ndata = [trace]\nlayout = go.Layout(\n    title='Top 10 Categories',\n    xaxis=dict(\n        title='Total Orders',\n        titlefont=dict(\n            size=14,\n            color='rgb(107,107,107)'\n        )\n    ),\n    yaxis=dict(\n        title='Categories',\n        titlefont=dict(\n            size=14,\n            color='rgb(107,107,107)'\n        )\n    ),\n    margin=dict(\n        l=173,\n        r=80,\n        t=100,\n        b=80,\n        pad=0\n\n    )\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.offline.iplot(fig, filename='categories-top10')","99c3e02f":"total_orders_2017 = df_public_v2[df_public_v2.year == 2017].groupby(['month_code','month']).size().reset_index(name='total_orders')\ntotal_orders_2017.sort_values(by='month_code', ascending=True)\n\ntotal_orders_2018 = df_public_v2[df_public_v2.year == 2018].groupby(['month_code','month']).size().reset_index(name='total_orders')\ntotal_orders_2018.sort_values(by='month_code', ascending=True)","0addf6d0":"trace1 = go.Scatter(\n    x = total_orders_2017.month,\n    y = total_orders_2017.total_orders,\n    mode = 'lines+markers',\n    name = '2017'\n)\ntrace2 = go.Scatter(\n    x = total_orders_2018.month,\n    y = total_orders_2018.total_orders,\n    mode = 'lines+markers',\n    name = '2018'\n)\n\nlayout = go.Layout(\n    title='Total Orders By Year',\n    xaxis=dict(\n        title='Months',\n        titlefont=dict(\n            size=14,\n            color='rgb(107,107,107)'\n        )\n    ),\n    yaxis=dict(\n        title='Total Orders',\n        titlefont=dict(\n            size=14,\n            color='rgb(107,107,107)'\n        )\n    )\n)\n\ndata = [trace1, trace2]\n\nfig = go.Figure(data=data, layout=layout)\npy.offline.iplot(fig, filename='total-by-year')","5effccf3":"categories = df_orders_categories.product_category_name_english.unique()\n\nplt.subplots(figsize =(10,10))\nwordcloud = WordCloud(\n                        background_color = 'white',\n                        width = 512,\n                        height = 384\n                        ).generate(\" \".join(categories))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis('off')\nplt.show()\n","b4373bb3":"Creating Dataframe to 2017 and 2018 orders.","8209511f":"Happy Clients by UF","df6512ab":"Creating month and year columns","6e6ee196":"Just simple WordCloud about Categories","9ce0172f":"Boxplot about Qty, Freight and Values of Products","ae4426a0":"Looking for the distribution plot of some orders values","e3be050d":"Delivery problems by UF","6cb05f1c":"Grouping Orders by UF","7d9df907":"Comparing orders between the years 2017 and 2018","dd8c82bb":"Orders by Top 10 Categories"}}