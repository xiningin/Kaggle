{"cell_type":{"7f19f43e":"code","017c6932":"code","9b55350e":"code","e62f335b":"code","551050c1":"code","09a64899":"code","fb52db11":"code","648a7c40":"code","33645a69":"code","57161404":"code","e1325a09":"code","c5bd6caf":"code","0bf1e84c":"code","76d1692c":"code","5dd9bb26":"code","f542b4ea":"code","cf404c5b":"code","893cd55d":"code","e470bee9":"code","05cc1991":"code","066063d9":"code","9d1ed102":"code","6f821593":"code","01132f66":"code","80925e3c":"code","61819b0e":"code","3b163f54":"code","7dd17a27":"code","293613e5":"code","598ca305":"code","38e159ec":"code","ded62fae":"code","38b06daa":"code","a3c16226":"code","19acc0fd":"code","32c04468":"code","ce276e47":"code","ce5c25f1":"code","21fae33f":"code","a0651634":"code","7618de79":"code","9f9a61b3":"code","f2ed979f":"code","411daab3":"code","e2caf703":"code","246c98a2":"code","8622702e":"code","4b4c28a1":"code","a394a84f":"code","a54ff8fc":"code","919f920d":"code","da0cb698":"code","9d54e61b":"code","f65cd86b":"code","9bdef38b":"code","3b983697":"code","81b274ac":"code","3bafb68d":"code","802bcc2d":"code","0baf7b12":"code","1fa5376e":"code","0f0182b9":"code","a8111ae7":"markdown","dfa7cfe0":"markdown","232b580f":"markdown","6288cf44":"markdown","7e5409d3":"markdown","b7a3617d":"markdown","2cb7dda1":"markdown","a18a7bcd":"markdown","c607d114":"markdown","eeacc036":"markdown","2e955efa":"markdown","585ab16c":"markdown","10b41b0a":"markdown","d8750507":"markdown","5bf02392":"markdown","eb2ac7f4":"markdown","632d6610":"markdown","699ad37a":"markdown","7dfac398":"markdown","951a1ee0":"markdown"},"source":{"7f19f43e":"import pandas as pd\nimport numpy as np\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n# kaggle dataset \ud655\uc778","017c6932":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\",)\nprint(train.shape)\ntrain.head()","9b55350e":"test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\nprint(test.shape)\ntest.head()","e62f335b":"train.describe()\n# \ubd84\uc11d\uc758 \ubaa9\uc801\uc740 Survived\ub97c \uc608\uce21\ud558\ub294 \uac83\uc774\uba70, \uc5ec\uae30\uc11c\ub294 \uc0b4\uc558\ub0d0 \uc8fd\uc5c8\ub0d0\uc5d0 \ub530\ub978 0,1\ub85c \ub098\ub268","551050c1":"train.isnull().sum()","09a64899":"test.isnull().sum()","fb52db11":"train['Age'].describe()","648a7c40":"train['Age'] = train['Age'].fillna(train['Age'].mean())\n# Age Column\uc5d0\uc11c \ube48\uac12\uc744 \uadf8\ub0e5 \ud3c9\uade0\uac12\uc73c\ub85c \ub300\ucda9 \ucc44\uc6cc\uc8fc\uc790","33645a69":"test['Age'] = test['Age'].fillna(test['Age'].mean())\n# Test\ub3c4 \ub3d9\uc77c","57161404":"train.isnull().sum()","e1325a09":"round(train['Age'].mode(),0)","c5bd6caf":"test.isnull().sum()","0bf1e84c":"train.isnull().sum() \n# Cabin Null\uc758 \ube44\uc911\uc774 \ub108\ubb34 \ub192\uc74c, \uc804\uccb4\uc758 77%\uc815\ub3c4\uc778\ub370... \uc774\uac74 \ubb58\ub85c \ucc44\uc6cc\ub3c4 \ubb38\uc81c\uac00 \ub420 \uac83 \uac19\uc74c","76d1692c":"train['Cabin'].unique()\n# \uac8c\ub2e4\uac00 \uac12\ub4e4\uc774 \ubb54\uac00 Null \uac12\uc744 \ucc44\uc6b0\uae30 \ub9cc\ub9cc\uce58 \uc54a\uc544\ubcf4\uc784","5dd9bb26":"train = train.drop(['Cabin'],1)\n# \uc774\uac70\ub294 \uadf8\ub0e5 \uc9c0\uc6cc\ubc84\ub9ac\uc790... \ub3c4\uc800\ud788...","f542b4ea":"test = test.drop(['Cabin'],1)\n# train\ub3c4 \uc9c0\uc6e0\uc73c\ub2c8\uae4c test\ub3c4 \uac19\uc774 \uc9c0\uc6cc\uc918\uc57c \ud568 -> \uc548\uc9c0\uc6b0\uba74 \uac00\ub974\uccd0\uc8fc\uc9c0\ub3c4 \uc54a\uc558\ub294\ub370 \uc2dc\ud5d8\ubcf4\uac8c \ud558\ub294 \uaf34","cf404c5b":"train.isnull().sum()\n# \uc798 \uc9c0\uc6cc\uc84c\ub098 \ud655\uc778","893cd55d":"test.isnull().sum()\n# \ud14c\uc2a4\ud2b8\ub3c4 \ud655\uc778","e470bee9":"train.groupby(['Embarked','Pclass'])['Fare'].median()","05cc1991":"train.isnull().sum()","066063d9":"test.isnull().sum()","9d1ed102":"train['Embarked'].value_counts()\n# \ub2e4\uc74c\uc740 Embarked\ub97c \ud574\ubcfc \uc608\uc815, \uc774\uac70\ub294 Train\uc5d0\uc11c 2\uac1c\ub9cc \ube44\uc5b4\uc788\uc73c\ub2c8 \uadf8\ub0e5 \uac00\uc7a5 \ub9ce\uc740 \uac12\uc73c\ub85c \ub123\uc73c\uba74 \ub420\ub4ef","6f821593":"train['Embarked'] = train['Embarked'].fillna('S')\n# fillna -> NA\ub97c \ucc44\uc6cc\ub77c, 'S' \uac12\uc73c\ub85c","01132f66":"train.isnull().sum()\n# \uc798 \ucc44\uc6cc\uc9c4 \uac78 \uc54c \uc218 \uc788\uc74c","80925e3c":"test.isnull().sum()\n# Test\ub294 \ubb50 \uc5c6\uc73c\ub2c8\uae4c Pass!","61819b0e":"train.isnull().sum()","3b163f54":"test.isnull().sum()\n# Test\uc758 Fare\uc5d0 Null\uac12\uc774 1\uac1c\uac00 \uc788\uc74c.....","7dd17a27":"train['Fare'].describe()\n# Fare\ub294 \uc694\uae08\uc5d0 \ub300\ud55c \uac12\uc778\ub370, \uc774\uac83\ub3c4 \ud558\ub098\ub9cc \ube44\uc5b4\uc788\uc73c\ub2c8 \ub300\ucda9 \ud3c9\uade0\uc73c\ub85c \ub584\ub824\ub123\uc790","293613e5":"test['Fare'] = test['Fare'].fillna(test['Fare'].mean())\ntest.isnull().sum() \n# \uc798 \ucc44\uc6cc\uc84c\ub098 \ud655\uc778\ud558\ub294 \uc2b5\uad00\uc744 \uac00\uc9c0\uc790","598ca305":"train['Sex']\n# Male, Female\ub85c \ub418\uc5b4\uc788\ub294\ub370 \uc774\uac74 \uae30\uacc4\ub294 \ubabb\uc77d\uc74c... \ubc14\uafd4\uc918\uc57c\ud568","38e159ec":"train['Sex']=train['Sex'].replace(\"male\",0)\ntrain['Sex']=train['Sex'].replace(\"female\",1)\ntrain['Sex'].head()\n# \ub0a8\uc790\ub294 0 \uc5ec\uc790\ub294 1\ub85c \ubc14\uafd4\uc90c, \uc798 \ubc14\ub00c\uc5c8\ub294\uc9c0 \ud655\uc778","ded62fae":"test['Sex']=test['Sex'].replace(\"male\",0)\ntest['Sex']=test['Sex'].replace(\"female\",1)\ntest['Sex'].head()\n# Test\ub3c4 \ub3d9\uc77c\ud558\uac8c","38b06daa":"train.head()","a3c16226":"train['Name'].unique()[:30]\n# Unique\ub294 \ud574\ub2f9 Column\uc758 \ubcc0\uc218\ub4e4\n# \uc774\uac74 \uc9c0\uae08\uc740 \uc8fd\uc5b4\ub3c4 \ubabb\ud558\uaca0\uc74c...","19acc0fd":"train = train.drop(['Name'],1)\ntrain.head()\n# Train \uc5d0\uc11c Name\uc744 \uc2dc\uc6d0\ud558\uac8c \uc9c0\uc6cc\ubc84\ub9ac\uace0 \ud655\uc778","32c04468":"test = test.drop(['Name'],1)\ntest.head()\n# test \uc5d0\uc11c Name\uc744 \uc2dc\uc6d0\ud558\uac8c \uc9c0\uc6cc\ubc84\ub9ac\uace0 \ud655\uc778","ce276e47":"train.head()","ce5c25f1":"train['Ticket'].unique()[:30]\n# Train Ticket\uc758 \ubcc0\uc218\ub4e4\uc744 \ucd9c\ub825... \uadfc\ub370 \uc774\uac83\ub3c4 \uc22b\uc790\uac00 \uc544\ub2c8\uace0 \ud798\ub4dc\ub124...","21fae33f":"train = train.drop(['Ticket'],1)\ntrain.head()","a0651634":"test = test.drop(['Ticket'],1)\ntest.head()\n# \uc798...\ub0a0\ub838\ub2e4","7618de79":"train['Embarked'].unique()\n# \uc774\uac74 3\uac1c\ubc16\uc5d0 \uc548\ub418\ub2c8\uae4c \ubc14\uafc0 \uc218 \uc788\uaca0\ub2e4... \uc9c1\uc811 \uc2e4\uc2b5 \uc9c4\ud589","9f9a61b3":"train['Embarked']=train['Embarked'].replace(\"S\",0)\ntrain['Embarked']=train['Embarked'].replace(\"C\",1)\ntrain['Embarked']=train['Embarked'].replace(\"Q\",1)\ntrain['Embarked'].head()\n# \ub0a8\uc790\ub294 0 \uc5ec\uc790\ub294 1\ub85c \ubc14\uafd4\uc90c, \uc798 \ubc14\ub00c\uc5c8\ub294\uc9c0 \ud655\uc778","f2ed979f":"test['Embarked']=test['Embarked'].replace(\"S\",0)\ntest['Embarked']=test['Embarked'].replace(\"C\",1)\ntest['Embarked']=test['Embarked'].replace(\"Q\",1)\ntest['Embarked'].head()\n# \ub0a8\uc790\ub294 0 \uc5ec\uc790\ub294 1\ub85c \ubc14\uafd4\uc90c, \uc798 \ubc14\ub00c\uc5c8\ub294\uc9c0 \ud655\uc778","411daab3":"train.head()\n# \uc798 \ubc14\ub010\uac70\uac19\uc740\ub370..","e2caf703":"test.head()\n#\uc774\uac83\ub3c4...","246c98a2":"y = train['Survived']\nX = train.drop(['Survived'],1)","8622702e":"print(X.shape, y.shape)","4b4c28a1":"from sklearn.model_selection import train_test_split\nX_train, X_valid, y_train, y_valid = train_test_split(X,y,random_state=30, test_size =0.3)\n# \uc774\ub7f0 \uc591\uc2dd\uc5d0 \ub123\uc73c\uba74 \uc54c\uc544\uc11c \ub098\ub220\uc9d0, test_size\uc5d0 \ube44\uc728\uc744 \ub123\uc73c\uba74 \uadf8\ub9cc\ud07c Validation\uc73c\ub85c \ub098\ub220\uc9d0","a394a84f":"print(X_train.shape,y_train.shape, X_valid.shape, y_valid.shape)","a54ff8fc":"268\/(623 + 268)\n# \ub300\ub7b5 30%\ub85c \ub098\ub220\uc9d0\uc744 \ud655\uc778","919f920d":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier()\n\n# from lightgbm import LGBMClassifier\n# model = LGBMClassifier()","da0cb698":"model.fit(X_train, y_train)","9d54e61b":"pred_train = model.predict(X_train)\n(pred_train == y_train).mean()","f65cd86b":"pred_train = model.predict(X_valid)\n(pred_train == y_valid).mean()","9bdef38b":"test.isnull().sum()","3b983697":"pred_test = model.predict(test)","81b274ac":"pred_test\n# \uc6b0\ub9ac\uac00 \uc608\uce21\ud55c \uac12\uc774 \uc798 \ub098\uc654\ub098 \ud655\uc778","3bafb68d":"gender_submission = pd.read_csv(\"\/kaggle\/input\/titanic\/gender_submission.csv\")\nprint(gender_submission.shape)\ngender_submission.head()\n# OMR \uce74\ub4dc\ub97c \ucd9c\ub825","802bcc2d":"gender_submission['Survived'] = pred_test\n# gender_submission \uc815\ub2f5\ubd80\ubd84 Survived\uc5d0 \uc6b0\ub9ac\uac00 \uc608\uce21\ud55c pred_test\ub97c \ub123\uc5b4\uc900\ub2e4","0baf7b12":"gender_submission\n# \uc798 \ub4e4\uc5b4\uac14\ub294\uc9c0 \ud655\uc778","1fa5376e":"gender_submission.to_csv(\"gender_submission_final.csv\", index=False)\n# gender_submission \ud30c\uc77c\uc744 \uc800\uc7a5\ud55c\ub2e4.(Output)","0f0182b9":"#=== Decision Tree\uc5d0\uc11c\ub9cc Visualization\uc774 \uac00\ub2a5\ud568 ===#\n!pip install pydotplus\nfrom sklearn.externals.six import StringIO  \nfrom IPython.display import Image  \nfrom sklearn.tree import export_graphviz\nimport pydotplus\ndot_data = StringIO()\nexport_graphviz(model, out_file=dot_data,  \n                filled=True, rounded=True,\n                special_characters=True)\ngraph = pydotplus.graph_from_dot_data(dot_data.getvalue())  \nImage(graph.create_png())","a8111ae7":"## 1-4. Fill NA : Fare","dfa7cfe0":"## 2-3. Convert String --> Integer data : Ticket","232b580f":"1. Train --> X, y \ub85c \ubc14\uafd4\uc900\ub2e4.","6288cf44":"# 2. Feature Engineering\n1. Convert String --> Integer data\n  - Categorical variance\ub97c Machine\uc774 \ubd84\uc11d\ud560 \uc218 \uc788\ub3c4\ub85d \ubcc0\ud615\ud574 \uc90c\n2. Feature\ub4e4\uc744 \uc870\ud569\ud574\uc11c \uc0c8\ub85c\uc6b4 Feature\ub97c \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc74c\n","7e5409d3":"## 2-2. Convert String --> Integer data : Name","b7a3617d":"# [Appendix] Decision Tree Visualization","2cb7dda1":"# 3. Data Splitting\n1. Train --> X, y \ub85c \ubc14\uafd4\uc900\ub2e4.\n1. X, y --> X_train, y_train, X_valid, y_valid\ub85c \ubc14\uafd4\uc900\ub2e4","a18a7bcd":"# 7. Predict","c607d114":"# 8. Submission","eeacc036":"## 2-4. Convert String --> Integer data : Embarked","2e955efa":"# 5. Model Training","585ab16c":"## 1-3. Fill NA : Embarked","10b41b0a":"## 1-2. Fill NA : Cabin","d8750507":"# 6. Evaluation (Cost Function)\n","5bf02392":"# 1. Data Preprocessing\n1. \ube48\uac12(Null) \ucc44\uc6b0\uae30\/\uc9c0\uc6b0\uae30\n2. \uc774\uc0c1\uce58 \uc81c\uac70\n3. \uce58\uc6b0\uce68(Skew) \ubcf4\uc815(Normalization)","eb2ac7f4":"# 0. EDA (Exploratory Data Analysis) \ud0d0\uc0c9\uc801 \ub370\uc774\ud130 \ubd84\uc11d","632d6610":"## 2-1. Convert String --> Integer data : Sex","699ad37a":"## 2-5. Convert String --> Integer data : \ud655\uc778\uc791\uc5c5","7dfac398":"## 1-1. Fill NA : AGE","951a1ee0":"# 4. Modeling\n1. Modeling\uc744 \uc704\ud574\uc11c\ub294 \ud574\ub2f9 \uacfc\uc81c\uc758 \ubaa9\uc801\uc744 \uc815\ud655\ud788 \uc54c\uc544\uc57c \ud568\n2. \ubcf4\ud1b5 Regression(\ucf54\ud305 \ub450\uaed8)\uacfc Classification(\ud488\uc9c8 \ud569\ubd80\ud310\uc815) \uc608\uce21 \ubb38\uc81c\uac00 \uc788\ub294\ub370, \uc5ec\uae30\uc11c\ub294 Classification\uc744 \uc0ac\uc6a9\ud560 \uc608\uc815\uc784"}}