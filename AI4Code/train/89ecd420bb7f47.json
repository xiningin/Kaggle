{"cell_type":{"25d4b313":"code","ca53f972":"code","949113b3":"code","8e1e8409":"code","fe687e85":"code","bd7aa91d":"code","c9d56b72":"code","3d308c55":"code","8a3d9beb":"code","c79fc319":"code","0b04402b":"code","cc717c4d":"code","eec50e8a":"code","a39a6424":"code","8706ab31":"code","27bf542e":"code","1e4186bc":"code","e5cc07d3":"markdown","eec053d2":"markdown"},"source":{"25d4b313":"# Import libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n","ca53f972":"# Load files\ntrain = pd.read_csv('..\/input\/crypto-closing-price-prediction\/train.csv')\ntest = pd.read_csv('..\/input\/crypto-closing-price-prediction\/test.csv')\nss = pd.read_csv('..\/input\/crypto-closing-price-prediction\/sample_submission.csv')","949113b3":"# check data shapes\ntrain.shape, test.shape, ss.shape","8e1e8409":"# Preview train\ntrain.head()","fe687e85":"test.head()","bd7aa91d":"test.dtypes","c9d56b72":"ss.head()","3d308c55":"# Check if there any missing values in train set\nax = train.isna().sum().sort_values().plot(kind = 'barh', figsize = (9, 10))\nplt.title('Percentage of Missing Values Per Column in Train Set', fontdict={'size':15})\nfor p in ax.patches:\n    percentage ='{:,.0f}%'.format((p.get_width()\/train.shape[0])*100)\n    width, height =p.get_width(),p.get_height()\n    x=p.get_x()+width+0.02\n    y=p.get_y()+height\/2\n    ax.annotate(percentage,(x,y))","8a3d9beb":"# Check if there missing values in test set\nax = test.isna().sum().sort_values().plot(kind = 'barh', figsize = (9, 10))\nplt.title('Percentage of Missing Values Per Column in Test Set', fontdict={'size':15})\n\nfor p in ax.patches:\n    percentage ='{:,.1f}%'.format((p.get_width()\/test.shape[0])*100)\n    width, height =p.get_width(),p.get_height()\n    x=p.get_x()+width+0.02\n    y=p.get_y()+height\/2\n    ax.annotate(percentage,(x,y))","c79fc319":"# fill missing values\ntrain = train.fillna(0)\ntest = test.fillna(0)","0b04402b":"# Check for duplicates\ntrain.duplicated().any(), test.duplicated().any()","cc717c4d":"train1=train.drop(['percent_change_24h_rank','volume_24h_rank','social_volume_24h_rank','social_score_24h_rank','medium','youtube','social_volume','percent_change_24h','tweet_sentiment1','tweet_sentiment2'],axis=1)","eec50e8a":"test1=test.drop(['percent_change_24h_rank','volume_24h_rank','social_volume_24h_rank','social_score_24h_rank','medium','youtube','social_volume','percent_change_24h','tweet_sentiment1','tweet_sentiment2'],axis=1)","a39a6424":"# Select main columns to be used in training\nmain_cols = train1.columns.difference(['id', 'close'])\nX = train1[main_cols]\ny = train1.close.astype(float)\n\n# Split data into train and test sets\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.1, random_state=42)","8706ab31":"# Instantiate model\nlm2 = LinearRegression()\n# Fit Model\nlm2.fit(X_train, y_train)\n# Predict\ny_pred = lm2.predict(X_test)","27bf542e":"# Make predictions in test set and prepare submission file\npredictions = lm2.predict(test1[main_cols])\nsub_file = ss.copy()\nsub_file.close = predictions\nsub_file.to_csv('Baseline.csv', index = False)","1e4186bc":"sub_file.head()","e5cc07d3":"# Let's look for missing values","eec053d2":"# Simple Starter Notebook for;\n## Cryptocurrency Closing Price Prediction Challenge\n\n\nCan you predict the closing price for a cryptocurrency? \n\nThe objective of this challenge is to create a machine learning model that will predict closing price for a crypto currency coing. "}}