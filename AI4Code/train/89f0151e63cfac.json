{"cell_type":{"1be9f8cf":"code","35e0651f":"code","81c67aff":"code","b0edd995":"code","1709f071":"code","252c008d":"code","daa07540":"code","96b258b0":"code","74422bbf":"code","d0541278":"code","ef8cd317":"code","713d9127":"code","23765138":"code","01fdb7be":"code","2945b9a2":"code","b7a82444":"code","97343640":"code","5686132d":"code","87f49afa":"code","895c981c":"code","50b1b24f":"code","eb3862d7":"code","391b7731":"code","bfbfeaff":"code","a20abe38":"code","e4a60e93":"code","59bd638d":"code","c0a34a7b":"code","abd87015":"code","9505af30":"code","d294e9a9":"code","0ed3ad73":"code","6c0d1493":"code","aee7bd22":"markdown","e0bae690":"markdown","9a6d19ef":"markdown","ba46c27a":"markdown","87d885a3":"markdown","2aa807ad":"markdown","05cac497":"markdown","c7c1290e":"markdown"},"source":{"1be9f8cf":"import numpy as np\nimport pandas as pd","35e0651f":"data=pd.read_csv('..\/input\/hr-analytics\/HR_comma_sep.csv')\ndata.head()\n","81c67aff":"data.info()","b0edd995":"data.sample(10)","1709f071":"data.describe()","252c008d":"print(data['Department'].value_counts())","daa07540":"print(data['salary'].value_counts())","96b258b0":"table = data.pivot_table(values='satisfaction_level', index='Department', columns='salary', aggfunc=np.count_nonzero)\ntable","74422bbf":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()","d0541278":"left = data[data.left==1]\nleft.shape\n","ef8cd317":"corr = data.corr()\ncorr","713d9127":"sns.set(style='white')\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\nf, ax = plt.subplots(figsize=(13,8))\ncmap = sns.diverging_palette(10,220, as_cmap=True)\nax = sns.heatmap(corr, mask=mask, cmap=cmap, vmax= .5, annot=True, annot_kws= {'size':11}, square=True, xticklabels=True, yticklabels=True, linewidths=.5, \n           cbar_kws={'shrink': .5}, ax=ax)\nax.set_title('Correlation between variables', fontsize=20);","23765138":"retained = data[data.left==0]\nleft.shape","01fdb7be":"data.groupby('left').mean()","2945b9a2":"pd.crosstab(data.salary, data.left).plot(kind='bar') ","b7a82444":"pd.crosstab(data.Department, data.left).plot(kind='bar')","97343640":"subdf = data[['satisfaction_level','average_montly_hours','promotion_last_5years','salary']]\nsubdf.head()","5686132d":"dummies = pd.get_dummies(data.salary, prefix='salary')\ndf3 = pd.concat([subdf, dummies], axis=1)\ndf3.head()","87f49afa":"df4 = df3.drop(['salary', 'salary_high'], axis='columns')\ndf4.head()","895c981c":"X = df4\ny = data.left","50b1b24f":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","eb3862d7":"from sklearn.linear_model import LogisticRegression\nreg = LogisticRegression()\nreg.fit(X_train, y_train)","391b7731":"reg.predict(X_test)","bfbfeaff":"reg.score(X_test, y_test)\nprint(\"Accuracy on Training Set is: \", reg.score(X_train, y_train))\nprint(\"Accuracy on Testing Set is: \", reg.score(X_test, y_test))\n","a20abe38":"from sklearn import metrics\nfrom sklearn import tree\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\n\ny_pred = reg.predict(X_test)\nprint('\\t\\tError Table')\nprint('Mean Absolute Error is: ', metrics.mean_absolute_error(y_test, y_pred))\nprint('Mean Squared Error is: ', metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error is: ', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))\nprint('Root Squared Error is: ', metrics.r2_score(y_test, y_pred))\n","e4a60e93":"from sklearn.ensemble import RandomForestClassifier\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3)\nrandommodel = RandomForestClassifier()\nrandommodel.fit(X_train,y_train)","59bd638d":"print('Random Model Accuracy on train data is:', randommodel.score(X_train, y_train))\nprint('Random Model Accuracy on test data is:', randommodel.score(X_test, y_test))","c0a34a7b":"y_pred = randommodel.predict(X_test)\nprint('\\t\\tError Table')\nprint('Mean Absolute Error       :', metrics.mean_absolute_error(y_test,y_pred))\nprint('Mean Squared Error        :', metrics.mean_squared_error(y_test,y_pred))\nprint('Root Mean Squared Error   :', np.sqrt(metrics.mean_squared_error(y_test,y_pred)))\nprint('Mean Absolute Error       :', metrics.r2_score(y_test,y_pred))","abd87015":"from sklearn import tree\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)\nmodeltree = tree.DecisionTreeClassifier()\nmodeltree.fit(X_train, y_train)","9505af30":"print('Model Accuracy on train data:', modeltree.score(X_train,y_train))\nprint('Model Accuracy on test data :', modeltree.score(X_test,y_test))","d294e9a9":"y_pred = modeltree.predict(X_test)\nprint(\"\\t\\tError Table\")\nprint('Mean Absolute Error     : ', metrics.mean_absolute_error(y_test, y_pred))\nprint('Mean Squared Error      : ', metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error : ', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))\nprint('R Squared Error         : ', metrics.r2_score(y_test, y_pred))","0ed3ad73":"from sklearn.metrics import roc_curve, roc_auc_score\n\n# Getting predicted probabilities\ny_score1 = reg.predict_proba(X_test)[:,1]\ny_score2 = modeltree.predict_proba(X_test)[:,1]\ny_score3 = randommodel.predict_proba(X_test)[:,1]\n# Creating true and false positive rate\nfalse_positive_rate1, true_positive_rate1, threshold1 = roc_curve(y_test, y_score1)\nfalse_positive_rate2, true_positive_rate2, threshold2 = roc_curve(y_test, y_score2)\nfalse_positive_rate3, true_positive_rate3, threshold3 = roc_curve(y_test, y_score3)\n\nreg_roc_auc    = roc_auc_score(y_test, y_score1)\ntree_roc_auc   = roc_auc_score(y_test, y_score2)\nrandom_roc_auc = roc_auc_score(y_test, y_score3)\n\nprint('roc_auc_score for Logistic Regression: ', reg_roc_auc)\nprint('roc_auc_score for DecisionTree: ', tree_roc_auc)\nprint('roc_auc_score for RandomForest: ', random_roc_auc)","6c0d1493":"plt.figure(figsize=(9, 6))\n\n# Plot Logistic Regression ROC\nplt.plot(false_positive_rate1,true_positive_rate1,linestyle= '--',label='Logistic Regression(area = %0.3f)'\n         % reg_roc_auc)\n\n# Plot Decision Tree ROC\nplt.plot(false_positive_rate2,true_positive_rate2,linestyle= '--',label='Decision Tree (area = %0.3f)'\n         % tree_roc_auc)\n\n# Plot Random Forest ROC\nplt.plot(false_positive_rate3,true_positive_rate3,linestyle= '--',label='Random Forest (area = %0.3f)'\n         % random_roc_auc)\n\n#Plotting Base Rate ROC\nplt.plot([0,1], [0,1], linestyle='--', label='Base Rate')\n\nplt.xlim([0.0,1.0])\nplt.ylim([0.0,1.0])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Area Under-Receiving Operating Characteristic Graph')\nplt.legend(loc=\"lower right\")\nplt.show()","aee7bd22":"Using the HR Analytics data set available to find Logistic Regression, Random Forest Model, and Decision Tree and check the accuracy of the model\n\n\nUnderstanding why and when employees are most likely to leave can lead to actions to improve employee retention as well as possibly planning new hiring in advance. This model will help predicting the employee retention in a company usimg different algorithms.","e0bae690":"# Conclusion\n\nThe higher the AUC, the better is the performance of the model at distiniguishing between the positive and negative classes.\n\nFrom the above graph we can see that AUC for Decision Tree ROC curve(Area=97.7%) which is higher than Logistic model(Area=77.5%) and Random Forest model(Area=96.6%)\n\nTo conclude, Decision Tree did a better job in classifying the positive class in the dataset and gives the most accuracy in result.","9a6d19ef":"# Random Forest Classifier Model","ba46c27a":"# Building Decision Tree classifier Model","87d885a3":"# Logistic Regression Model Error Table","2aa807ad":"# Plotting ROC Curve","05cac497":"# Area Under-Receiving Operating Characteristic Curve Evaluation Metric","c7c1290e":"In the most recent many years, having the best machines were sufficient to be serious or to rule a mechanical area. These days, the organization that has more connected with and gainful workers will have a superior possibility of winning business sector rivalry. Therefore, organizations can not lose significant workers and when that starts to happen you need to get why to keep this from occurring. \n\nThe Human Resources Analytics dataset is utilized to clarify the initial phases in the Da way. In this initial segment are introduced to how to get acclimated with the informational collection by playing out the illustrative investigation. Strategies, for example, exploratory Data Analysis (EDA) permit us to introduce the information in a more important manner, applying general measurable techniques and exploratory designs, that permit a less complex translation before the draw in an machine Learning calculations. \n\nThe Human Resources Analytics is a reproduced dataset from Kaggle and the center is to comprehend why the best and most experienced workers are leaving the organization. "}}