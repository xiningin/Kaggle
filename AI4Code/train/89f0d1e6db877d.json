{"cell_type":{"a142c48e":"code","51e7503b":"code","1a4fe517":"code","a4b1ff51":"code","4348f1e3":"code","3c1ebba5":"code","b696fb78":"code","09b666d8":"code","d5bc2691":"code","b583fac7":"code","2fff94a8":"code","e04ef23e":"code","762eecde":"code","45d0f7d5":"code","17e82648":"code","f9a6fc14":"code","dd2acc49":"code","4935ec17":"code","b462fe22":"code","203e143a":"code","e5c1f9e2":"code","ecd503de":"markdown","4c0982e9":"markdown","255e329a":"markdown","e1b72ead":"markdown","c80ffaa4":"markdown","a8d31977":"markdown","6711ca22":"markdown","7bfffaad":"markdown","e5c3a6dd":"markdown","69608ef7":"markdown","a04b3ff6":"markdown"},"source":{"a142c48e":"import pandas as pd\nimport numpy as np\ndf=pd.read_csv(\"..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")","51e7503b":"df.head()","1a4fe517":"df.describe()","a4b1ff51":"import matplotlib.pyplot as plt\n\nfor i in df.keys():\n  df[i].hist()\n  print(i)\n  plt.show()","4348f1e3":"df.info()","3c1ebba5":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(16,10))\nsns.heatmap(df.corr(method='pearson'), annot=True)\n","b696fb78":"df[\"serum_creatinine\"] = np.log(df[\"serum_creatinine\"])\ndf['platelets'] = np.sqrt(df['platelets'])\ndf['creatinine_phosphokinase'] = np.log(df['creatinine_phosphokinase'])","09b666d8":"from scipy.stats import skew\n\nprint(skew(df['serum_creatinine']))\nprint(skew(df['platelets']))\nprint(skew(df['creatinine_phosphokinase'])) ","d5bc2691":"features = ['age', 'creatinine_phosphokinase', \n       'ejection_fraction',  'platelets',\n               'serum_sodium', 'time']\nfrom sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\n\nX_train = sc.fit_transform(X_train[features])\nX_test = sc.fit_transform(X_test[features])\n","b583fac7":"X=df.drop(\"DEATH_EVENT\",axis=1)\ny=df[\"DEATH_EVENT\"]","2fff94a8":"\nfrom sklearn.model_selection import train_test_split\nX_train,X_test, y_train,y_test=train_test_split(X,y,test_size=0.33, shuffle =True,random_state=42)","e04ef23e":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier(criterion= 'gini',\n max_depth= 14,\n  max_features= 'log2',\n   min_samples_leaf= 2,\n    min_samples_split= 2,\n     n_estimators= 130)\nrfc.fit(X_train, y_train)\n","762eecde":"from sklearn.model_selection import cross_val_score \ncv_scores = cross_val_score(rfc,X,y,cv=5)\n","45d0f7d5":"print(cv_scores)","17e82648":"rfc.score(X_test,y_test)","f9a6fc14":"grid={'criterion':['gini','entropy'],\n 'max_depth': [2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20],\n  'max_features': ['auto', 'log2'],\n   'min_samples_leaf': [1, 2, 4,6,7,8,9],\n    'min_samples_split': [2, 5, 10],\n     'n_estimators': [90,100,115,120,130]}\n     ","dd2acc49":"\nfrom sklearn.model_selection import RandomizedSearchCV\nrf_=RandomizedSearchCV(rfc,grid,cv=3,n_jobs=-1,verbose=3)\n","4935ec17":"rf_.fit(X_train,y_train)","b462fe22":"rf_.score(X_test,y_test)","203e143a":"rf_.best_score_","e5c1f9e2":"rf_.best_params_","ecd503de":"## pearson correlation matrix for feature selection and found no two features are higly correlated ","4c0982e9":"## standard scaling for better accuracy","255e329a":"## random forest classifier for better predictions","e1b72ead":"Log transformation for normalizing the skewed data","c80ffaa4":"## got an accuracy of 74%","a8d31977":"Feature scaling for better performance ","6711ca22":"## Checking for any skewed data and normalizing it with log transformation","7bfffaad":"Histograms of each and every feature for checking skewness and outliers\n","e5c3a6dd":"## Hyperparametre tuning for the algorithm and achieved 2% increment in the accuracy score through that","69608ef7":"correlation matrix for feature selection and feature removal but i found no big correlations between the features so i havent removed any\n","a04b3ff6":"## Data preprocessing and analysing"}}