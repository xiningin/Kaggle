{"cell_type":{"5286eb6a":"code","f6d2df99":"code","a9c46820":"code","2f573a72":"code","c0406585":"code","939a3e4d":"code","b9e9f44f":"code","ef6fa6b6":"code","28845216":"code","1b5765e2":"code","5ba26244":"code","96fa1db7":"code","b1571f2f":"code","b85a80a7":"code","3511bb9c":"code","54798a01":"code","6292836e":"code","7c06e868":"code","c96ac122":"code","0bf8c7a0":"code","58821fbe":"code","5aaca2a6":"code","765d12a9":"code","ebaf3ed6":"code","5b0f4ca6":"code","35b89bc3":"code","8cca97bd":"code","190880e4":"code","58a92193":"code","c1ebd064":"code","8ea158a1":"markdown","bedc7c9c":"markdown","60277a81":"markdown","74f5e614":"markdown","0d9a39b3":"markdown","a6ec002b":"markdown","25a55379":"markdown","4c72a57c":"markdown","8d443e28":"markdown","14229183":"markdown","64f85345":"markdown","35a495c0":"markdown","b9b70c0e":"markdown","746a54ab":"markdown","ef146371":"markdown"},"source":{"5286eb6a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nplt.style.use(\"seaborn-whitegrid\") # plt.style.available   yazarsek e\u011fer hangi stilleri kullanabilece\u011fimizi g\u00f6rm\u00fc\u015f oluruz.\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport seaborn as sns\nfrom collections import Counter\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f6d2df99":"test_df=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntrain_df=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\n                     \nTest_PassangerID=test_df[\"PassengerId\"]","a9c46820":"train_df.columns","2f573a72":"train_df.head()","c0406585":"train_df.describe()","939a3e4d":"train_df.info()","b9e9f44f":"def bar_plot(variable):\n    \"\"\"\n    input: variable ex: \"Sex\"\n    output: Bar plot & Value Count\n    \n    \"\"\"\n    #get feature \n    var=train_df[variable]\n    #count number of categorical variable (value \/ sample)\n    varValue=var.value_counts()\n    \n    #visualize\n    plt.figure(figsize=(9,3))\n    plt.bar(varValue.index, varValue)\n    \n    plt.xticks(varValue.index, varValue.index.values)\n    \n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))","ef6fa6b6":"category1=[\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\" ]\nfor c in category1:\n    bar_plot(c)","28845216":"category2=[\"Cabin\", \"Name\",\"Ticket\"]\nfor c in category2:\n    print(\"{}\\n\".format(train_df[c].value_counts()))","1b5765e2":"def plot_hist(variable):\n    plt.figure(figsize=(9,3))\n    plt.hist(train_df[variable],bins=60)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"Distribution with hist\".format(variable))\n    plt.show()","5ba26244":"numericVar=[\"Fare\", \"Age\",\"PassengerId\"]\nfor n in numericVar:\n    plot_hist(n)","96fa1db7":"# Pclass vs Survived\ntrain_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index=False).mean()\n#train_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index=False).mean().sort_values(by=\"Survived\",ascending=False)  \n#you can use last example as below , its give you values by sorting ","b1571f2f":"#Sex vs Survived\ntrain_df[[\"Sex\",\"Survived\"]].groupby([\"Sex\"], as_index=False).mean()\n","b85a80a7":"# SibSp vs Survived\ntrain_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"], as_index=False).mean().sort_values(by=\"Survived\",ascending=False)  \n","3511bb9c":"# Parch vs Survived\ntrain_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"], as_index=False).mean().sort_values(by=\"Survived\",ascending=False)  \n","54798a01":"def detect_outliers(df,feature):\n    outlier_indices=[]\n    for c in feature:\n        # 1st quartile\n        Q1=np.percentile(df[c],25)\n        \n        # 3rd quartile\n        \n        Q3=np.percentile(df[c],75)\n        \n        #IQR\n        IQR=Q3- Q1\n        \n        # Outlier Step\n        \n        outlier_step=IQR* 1.5\n        \n        # Detect Outlier and their \u0130ndences\n        outlier_list_col=df[(df[c]< Q1 -outlier_step) | (df[c]> Q3 + outlier_step)].index\n        # Store \u0130ndences\n        outlier_indices.extend(outlier_list_col)\n        \n    outlier_indices=Counter(outlier_indices)\n    multiple_outliers=list(i for i,v in outlier_indices.items() if v>2)\n                             \n    return multiple_outliers","6292836e":"train_df.loc[detect_outliers(train_df, [\"Age\", \"SibSp\",\"Parch\",\"Fare\"])]","7c06e868":"#drop outliers\ntrain_df=train_df.drop(detect_outliers(train_df, [\"Age\", \"SibSp\",\"Parch\",\"Fare\"]),axis=0).reset_index(drop= True)","c96ac122":"train_df_len=len(train_df)\ntrain_df=pd.concat([train_df, test_df]).reset_index(drop=True)","0bf8c7a0":"train_df.head()","58821fbe":"train_df.columns[train_df.isnull().any()]","5aaca2a6":"train_df.isnull().sum()","765d12a9":"train_df[train_df[\"Embarked\"].isnull()]","ebaf3ed6":"train_df.boxplot(column=\"Fare\", by=\"Embarked\")\nplt.show()","5b0f4ca6":"train_df[\"Embarked\"]=train_df[\"Embarked\"].fillna(\"C\")","35b89bc3":"train_df[train_df[\"Embarked\"].isnull()]","8cca97bd":"train_df[train_df[\"Fare\"].isnull()]","190880e4":"np.mean(train_df[train_df[\"Pclass\"]==3][\"Fare\"])","58a92193":"train_df[\"Fare\"]=train_df[\"Fare\"].fillna(np.mean(train_df[train_df[\"Pclass\"]==3][\"Fare\"]))","c1ebd064":"train_df[train_df[\"Fare\"].isnull()]","8ea158a1":"we have found the mean and fill the nan values with mean price","bedc7c9c":"<a id=\"7\"><\/a><br>\n# Outlier Detection","60277a81":"<a id=\"5\"><\/a><br>\n### Numerical Variable ","74f5e614":"<a id=\"1\"><\/a><br>\n# Load and Check Data","0d9a39b3":"* float64(2) : Fare and Age\n* int64(5)   : Pclass, Sibsp, Parch , PassengerId and Survived\n* object(5)  : Cabin, Embarked , Ticket ,Name and Sex","a6ec002b":"As you can see we filled with C's values to Nan Values.","25a55379":"<a id=\"10\"><\/a><br>\n\n### Filling Missing Value\n\n* Embarked has 2 missing value\n* Fare has only 1\n\n","4c72a57c":"<a id=\"2\"><\/a><br>\n# Variable Description\n\n1. PassengerId : Unique id Number to each Passenger\n1. Survived    : Passenger Survive(1) or Ddied(0)\n1. Pclass      : Passenger Class\n1. Name        : Name\n1. Sex         : Gander of Passengers\n1. Age         : Age of Passengers\n1. SibSp       : Number of Sbilings\/Sqouses\n1. Parch       : Number of Parents\/Children\n1. Ticket      : Ticker Number\n1. Fare        : Amount of monet spent on Ticket\n1. Cabin       : Cabin Category\n1. Embarked    :Part where passengers embarked (C=Cherbourg , Q=Queenstown , S=South)","8d443e28":"<a id=\"3\"><\/a><br>\n# Univariate Variable Analysis\n*Categorical Variable Analysis : Survived , Sex ,Pclass ,Embarked , Cabin , Name , Ticket ,Sibsp and Parch\n    \n*Numerical Variable Analysis : Fare , Age and PassengerId\n","14229183":"now we are checking empty values","64f85345":"<a id=\"4\"><\/a><br>\n### Categorical Variable ","35a495c0":"<a id=\"8\"><\/a><br>\n\n# Missing Value\n\n* Find Missing Value\n* Fill Missing Value","b9b70c0e":"<a id=\"9\"><\/a><br>\n\n### Find Missing Value","746a54ab":"# Introduction \n The Titanic is one of the most notorious ship wrecked \n It was happend in 1912 \nIn 1912 , during its voyoge  titanic sank after colleps with an iceberg.\nA lots of people was dead for this reason :)\n\n<font color=\"blue\">\n    \nContent:\n    \n1. [Load and Check Data](#1)\n    \n2. [Variable Description](#2)\n    \n2.1    *[Univariate Variable Analysis](#3)\n    \n2.1.1      *[Categorical Variable Analysis](#4)\n    \n2.1.2      *[Numerical Variable Analysis](#5)\n    \n3.[Basic Data Analysis](#6)\n    \n4.[Outlier Detection](#7)\n    \n5.[Missing Value](#8)\n    \n5.1. [Find Missing Value](#9)\n    \n5.2. [Fill Missing Value](#10)\n    \n\n\n","ef146371":"<a id=\"6\"><\/a><br>\n\n# Basic Data Analysis\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived"}}