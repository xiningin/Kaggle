{"cell_type":{"d8672863":"code","fa424440":"code","7ecad5de":"code","dca07d43":"code","a5adc5f4":"code","c137a53f":"code","fa193288":"code","f3115757":"code","466ff395":"code","35fb3cef":"code","3d735ab4":"code","3e560fd4":"code","2261d6d9":"code","7e84aaaa":"code","125590a4":"code","08693ade":"code","b31303aa":"code","2ec7012b":"markdown","766b86f8":"markdown","b548e86d":"markdown","972bba5b":"markdown","81ff5224":"markdown"},"source":{"d8672863":"import os\nimport numpy as np\nimport pandas as pd\nimport nltk\n!pip install contractions\nimport contractions\nfrom wordcloud import WordCloud, ImageColorGenerator\nfrom PIL import Image\nimport matplotlib.pyplot as plt","fa424440":"Fake = pd.read_csv(\"..\/input\/fake-and-real-news-dataset\/Fake.csv\")\nReal = pd.read_csv(\"..\/input\/fake-and-real-news-dataset\/True.csv\")\n\nReal.head(n=5)","7ecad5de":"emojis = [\"\\U0001F600\", \"\\U0001F64F\", \"\\U0001F300\", \"\\U0001F5FF\", \"\\U0001F680\", \"\\U0001F6FF\", \"\\U0001F1E0\", \"\\U0001F1FF\", \"\\U00002702\", \"\\U000027B0\", \"\\U000024C2\", \"\\U0001F251\"]\nemojis","dca07d43":"stopWords = nltk.corpus.stopwords.words(\"english\")","a5adc5f4":"token = nltk.tokenize.RegexpTokenizer(r\"\\w+\")","c137a53f":"lemmatizer = nltk.stem.WordNetLemmatizer()","fa193288":"def cleaner(DF,c: str):\n\n    data=[]\n    length=DF.shape[0]\n    i=10\n    \n    col=np.where(DF.columns == c)[0][0]\n    \n    for i, row in enumerate(DF.iterrows()):\n\n        sentence=row[1][col]\n        sentence=sentence.lower().split(\" \")\n        sentence=[word for word in sentence if word not in emojis]\n        sentence=[word for word in sentence if \"http\" not in word and \"https\" not in word and \"@\" not in word]\n        sentence=[contractions.fix(word) for word in sentence]\n        sentence=\" \".join(sentence).lower()\n        sentence=token.tokenize(sentence)\n        sentence=[word for word in sentence if word not in stopWords]\n        sentence=[lemmatizer.lemmatize(word) for word in sentence]\n        sentence=[word.strip() for word in sentence]\n        sentence=[word for word in sentence if not word.isdigit()]\n        sentence=[word for word in sentence if \n                  word != \"rt\" and \n                  word != \"\u00fb_\" and \n                  word != \"amp\" and \n                  word != \" \" and\n                  word != \"\" and\n                  word != \"\u00fb\u00aa\" and\n                  word != \"\u00fb\u00f2\" and\n                  word != \"\u00e5\u00e8\" and\n                  word != \"\u00ec\u00f11\"] \n\n        sentence=[word for word in sentence if len(word) > 1]\n\n        data.extend(sentence)\n        \n        if i % 5000 == 0:\n            print(str(int(round(i\/length*100, 0))) + \" %\")\n        \n    return data","f3115757":"Fake=cleaner(Fake, c=\"text\")\nReal=cleaner(Real, c=\"text\")","466ff395":"All_Data = Real + Fake \nsAll=set(All_Data)\nsFke=set(Fake)\nsRel=set(Real)\njustReal = [i for i in sAll if i not in sFke]\njustFake = [i for i in sAll if i not in sRel]\n\njust = justReal + justFake ","35fb3cef":"def custom_colours(word, font_size, position, orientation, random_state=None, **kwargs):\n    if word in justReal: \n        return \"#70E7A4\"\n    elif word in justFake:\n        return \"#EA5852\"\n    return \"#CCCCCC\"","3d735ab4":"wc=WordCloud(\n    max_words=10000, \n    relative_scaling=1,\n    max_font_size=8,\n    min_font_size=1,\n    min_word_length=1,\n    width=400, height=200,\n    background_color=\"black\"\n    ).generate(\" \".join(just))\nwc.recolor(color_func=custom_colours)\nplt.figure(figsize=(20, 40), dpi=90)\nplt.axis('off')\nplt.imshow(wc, interpolation=\"bilinear\")\nplt.show()","3e560fd4":"colors=np.array(Image.open(\"..\/input\/imagesforkernels\/nlpcover.jpg\"))\ncolors=colors[::5,::5]\nmask = colors.copy()\nmask[mask.sum(axis=2) == 0] = 255\nwidth=colors.shape[1]\nheight=colors.shape[0]\nplt.figure(figsize=(20, 40))\nplt.axis('off')\nplt.imshow(colors)\nplt.show()","2261d6d9":"wc=WordCloud(\n    max_words=3000, \n    relative_scaling=1,\n    max_font_size=20,\n    min_font_size=2,\n    width=width, height=height,\n    background_color=\"white\",\n    mask=mask\n    ).generate(\" \".join(All_Data))\nimage_colors = ImageColorGenerator(colors)\nwc.recolor(color_func=image_colors)\nplt.figure(figsize=(20, 40))\nplt.axis('off')\nplt.imshow(wc, interpolation=\"bilinear\")\nplt.show()","7e84aaaa":"colors=np.array(Image.open(\"..\/input\/imagesforkernels\/palmCart.jpg\"))\nmask = colors.copy()\nmask[mask.sum(axis=2) == 0] = 255\nwidth=colors.shape[1]\nheight=colors.shape[0]\nplt.figure(figsize=(10, 10))\nplt.axis('off')\nplt.imshow(colors)\nplt.show()","125590a4":"wc=WordCloud(\n    max_words=2000, \n    relative_scaling=1,\n    max_font_size=20,\n    min_font_size=5,\n    width=width, height=height,\n    background_color=\"white\",\n    mask=mask\n    ).generate(\" \".join(Fake))\nimage_colors = ImageColorGenerator(colors)\nwc.recolor(color_func=image_colors)\nplt.figure(figsize=(20, 20))\nplt.axis('off')\nplt.imshow(wc, interpolation=\"bilinear\")\nplt.show()","08693ade":"colors=np.array(Image.open(\"..\/input\/imagesforkernels\/kaggle-logo-transparent-300.jpg\"))\nmask = colors.copy()\nmask[mask.sum(axis=2) == 0] = 255\nwidth=colors.shape[1]\nheight=colors.shape[0]\nplt.figure(figsize=(10, 10))\nplt.axis('off')\nplt.imshow(colors)\nplt.show()","b31303aa":"wc=WordCloud(\n    max_words=1000, \n    relative_scaling=0.5,\n    max_font_size=10,\n    min_font_size=2,\n    width=width, height=height,\n    background_color=\"white\",\n    mask=mask\n    ).generate(\" \".join(Fake))\nimage_colors = ImageColorGenerator(colors)\nwc.recolor(color_func=image_colors)\nplt.figure(figsize=(20, 20))\nplt.axis('off')\nplt.imshow(wc, interpolation=\"bilinear\")\nplt.show()","2ec7012b":"\n<p style=\"font-size:14pt\">Color <span style=\"color:#70E7A4;\">green<\/span> indicates that the word is just in the real Data<\/p>\n\n<p style=\"font-size:14pt\">Color <span style=\"color:#EA5852;\">red<\/span> indicates that the word is just in the fake Data<\/p>\n","766b86f8":"<p style=\"font-size:14pt\">Besides the color, you can also define the shape of the Wordcloud. To do this, you can create a mask array.<\/p>","b548e86d":"<p style=\"font-size:14pt\">It is noticeable that the words that appear only in fake news and not in real news are repeated less often overall. Lies therefore differ more from one another than the truth does \ud83e\udd25<\/p>\n\n<p style=\"font-size:14pt\">Now, we load some images to color the wordcloud<\/p>","972bba5b":"<p style=\"font-size:14pt\">The Dataset contains fake and real news data. It can be found <a href=\"https:\/\/www.kaggle.com\/clmentbisaillon\/fake-and-real-news-dataset\">here<\/a>.<\/p>","81ff5224":"<p style=\"font-size:14pt\">This notebook is only about visualizing and creating word clouds. Contrary to what you might think, word clouds are not just a beautiful design element. In fact, they can also be used for analysis, as the size of the words can also represents the frequency. For human perception, they may be even more pleasant than bar charts, which show the frequency of the words appearing in the text. Sometimes it is just a matter of getting a quick impression of the content of the documents.<\/p>"}}