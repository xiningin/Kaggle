{"cell_type":{"2276ef9c":"code","ff2b93b3":"code","882107bf":"code","a96f2404":"code","46affe51":"code","21a43bfe":"code","55da872c":"code","4effffff":"code","1c644604":"code","6a2fafff":"code","615380e6":"code","90f5794f":"code","b43f1b52":"code","b3fd98fe":"code","3550377e":"code","599301a8":"code","c14685f0":"code","064b937b":"code","601a9455":"code","ba009b5b":"code","77efd01e":"code","1a5b6404":"code","9f8ee2f3":"code","ea9767e4":"code","c688f998":"code","b1d12184":"code","15d4d0b6":"code","090b69d4":"code","dc943610":"code","a2cd43db":"markdown","8ceda7a0":"markdown","753912b4":"markdown","0c552e2e":"markdown","cb58a00e":"markdown","558f4d70":"markdown"},"source":{"2276ef9c":"import pandas as pd\nimport numpy as np\n\nimport os \nimport glob\n\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nsns.set(rc={'figure.figsize':(16,8)})\nsns.set(font_scale=1.3)\nplt.style.use('fivethirtyeight')\n\nimport warnings\nwarnings.filterwarnings('ignore')","ff2b93b3":"train = pd.read_csv('..\/input\/optiver-realized-volatility-prediction\/train.csv')\ntest = pd.read_csv('..\/input\/optiver-realized-volatility-prediction\/test.csv')\nsubmission = pd.read_csv('..\/input\/optiver-realized-volatility-prediction\/sample_submission.csv')\n\nbook_train = pd.read_parquet('..\/input\/optiver-realized-volatility-prediction\/book_train.parquet\/stock_id=0')\ntrade_train = pd.read_parquet('..\/input\/optiver-realized-volatility-prediction\/trade_train.parquet\/stock_id=0')\ntrade_test = pd.read_parquet('..\/input\/optiver-realized-volatility-prediction\/trade_test.parquet\/stock_id=0')","882107bf":"train.head()","a96f2404":"test","46affe51":"submission","21a43bfe":"book_train.head()","55da872c":"trade_train.head()","4effffff":"trade_test","1c644604":"def calc_log(vl):\n    return np.log(vl).diff()\n\ndef calc_volatility(vl):\n    return np.sqrt(np.sum(vl**2))\n\ndef calc_dif(data):\n    data['size_spread_1'] = data['ask_size1'] - data['bid_size1']\n    data['size_spread_2'] = data['ask_size2'] - data['bid_size2']\n    data['price_spread_1'] = data['ask_price1'] - data['bid_price1']\n    data['price_spread_2'] = data['ask_price2'] - data['bid_price2']\n    \n    # Volatility Calculation\n    data['wap'] = (data['bid_price1'] * data['ask_size1'] + data['ask_price1'] * data['bid_size1']) \/ (data['bid_size1']+ data['ask_size1'])\n    \n    data.loc[:,'log'] = calc_log(data['wap'])\n    data = data[~data['log'].isnull()]\n    data['volatility'] = calc_volatility(data['log'])    \n    return data","6a2fafff":"book = calc_dif(book_train)","615380e6":"book.head()","90f5794f":"plt.figure(figsize=(18,10))\nsns.heatmap(book.corr(), annot=True, cmap=plt.cm.Blues);","b43f1b52":"book.describe().T.style.bar(subset=['mean'], color='#205ff2')\\\n                            .background_gradient(subset=['std'], cmap='Reds')\\\n                             .background_gradient(subset=['50%'], cmap='coolwarm')","b3fd98fe":"train.describe().T.style.bar(subset=['mean'], color='#205ff2')\\\n                            .background_gradient(subset=['std'], cmap='Reds')\\\n                             .background_gradient(subset=['50%'], cmap='coolwarm')","3550377e":"book_5 = book[book['time_id']==5]\nbook_5.head()","599301a8":"book_exp = trade_train[trade_train['time_id']==5]\nbook_exp.head()","c14685f0":"samples = [\"bid_price1\",\"bid_price2\",\"ask_price1\",\"ask_price2\"]\n\nfor num,a in enumerate(samples):\n    plt.figure(figsize=(18,18))\n   \n    plt.subplot(4,1,num+1)\n    plt.plot(book_5[\"seconds_in_bucket\"],book_5[a])\n    plt.title(a)\nplt.show()\nplt.figure(figsize=(18,6));\n\nfor num,a in enumerate(samples):\n    plt.plot(book_5[\"seconds_in_bucket\"],book_5[a],label=a)\nplt.legend(fontsize=12);","064b937b":"plt.figure(figsize=(18,6))\n\nfor num,a in enumerate(samples):\n    plt.plot(book_5[\"seconds_in_bucket\"],book_5[a],label=a)\n    \nplt.plot(book_exp[\"seconds_in_bucket\"],book_exp[\"price\"],label=\"trade_parquet\",lw=5,color='magenta')\nplt.legend(fontsize=12);","601a9455":"book_5.loc[:,'log_return'] = calc_log(book_5['wap'])\nbook_5 = book_5[~book_5['log_return'].isnull()]","ba009b5b":"fig = px.line(book_5, x=\"seconds_in_bucket\", y=\"log_return\", title='Log return of stock_id_0, time_id_5')\nfig.show()","77efd01e":"volatility = calc_volatility(book_5['log_return'])\nprint(f'Volatility: {volatility}')","1a5b6404":"stock = train.groupby(\"stock_id\")[\"target\"].agg([\"mean\",\"median\",\"std\",\"count\",\"sum\"]).reset_index()\nstock","9f8ee2f3":"result = stock[['stock_id','median']]\nresult = stock.set_index(\"stock_id\")\nresult","ea9767e4":"result = result.to_dict()\nresult[\"median\"][0]","c688f998":"submission","b1d12184":"submission[\"stock_id\"] = [s.split(\"-\")[0] for s in submission[\"row_id\"]]\nsubmission","15d4d0b6":"submission[\"target\"] = [result[\"median\"][int(s)] for s in submission[\"stock_id\"]]\nsubmission","090b69d4":"submission = submission.drop(\"stock_id\",axis=1)\nsubmission","dc943610":"submission.to_csv(\"submission.csv\",index=False)","a2cd43db":"# EDA","8ceda7a0":"# Input Data","753912b4":"# Volatitity","0c552e2e":"The purpose of this competition is to predict volatility in the order book. More precisely, predict your volatility between buy and sell offers and base your buy and sell transactions using these values.","cb58a00e":"# Subset","558f4d70":"# Functions and Statistics"}}