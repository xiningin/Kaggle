{"cell_type":{"0b438ba8":"code","bec2f6ae":"code","db814d3d":"code","c703ba30":"code","1c6fe5b9":"code","5420d117":"code","d1148db3":"code","6310d18d":"code","551c92d9":"code","2303075b":"code","a53af6c2":"code","9083cfc3":"code","0e4ab99f":"code","f128960c":"markdown","daa2eefd":"markdown","1f2f0c8d":"markdown","fde0f3ec":"markdown","8ec0c64e":"markdown","a5136df2":"markdown","0ef76c41":"markdown","aef3d2bf":"markdown","cd1d4d18":"markdown","80afb82d":"markdown","8b2397aa":"markdown","7b75127d":"markdown","b47a3209":"markdown"},"source":{"0b438ba8":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.preprocessing import LabelEncoder\nimport matplotlib.pyplot as plt\nfrom sklearn.tree import export_graphviz\nfrom sklearn import tree\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","bec2f6ae":"iris_dataset = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv', index_col = 0)","db814d3d":"iris_dataset.head()","c703ba30":"iris_dataset.shape","1c6fe5b9":"le = LabelEncoder()\n\niris_dataset_le = iris_dataset \niris_dataset_le.Species = le.fit_transform(iris_dataset_le.Species)\n\nfor col in iris_dataset_le.columns:\n    print(col,':',len(iris_dataset_le[col].unique()),'labels')","5420d117":"iris_dataset_le.head()","d1148db3":"X = iris_dataset_le.iloc[:, 0:4]\ny = iris_dataset_le.iloc[:, -1:]","6310d18d":"y.head()","551c92d9":"X.head()","2303075b":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.8, shuffle=True, random_state=1)","a53af6c2":"dt_module = DecisionTreeClassifier()\ndt_module.fit(X_train, y_train)","9083cfc3":"predictions = dt_module.score(X,y)\nprint(predictions)","0e4ab99f":"fn=['sepal length (cm)','sepal width (cm)','petal length (cm)','petal width (cm)']\ncn=['setosa', 'versicolor', 'virginica']\nfig, axes = plt.subplots(nrows = 1,ncols = 1,figsize = (4,4), dpi=300)\ntree.plot_tree(dt_module,\n               feature_names = fn, \n               class_names=cn,\n               filled = True);\nfig.savefig('imagename.png')","f128960c":"**1. Load dataset**","daa2eefd":"**Below you can take a look how our DecisionTreeClassifier() model splited data between each branch.**","1f2f0c8d":"**6. Here we split iris_dataset_le into features(X) and our target to predict(y).**","fde0f3ec":"**9. Define DecisionTreeClassifier() as dt_module and fit training data.**","8ec0c64e":"**10. Printing predictions.**","a5136df2":"**3. Below we can see that our dataset got 150 rows and 5 columns.**","0ef76c41":"**7. You can see below that spliting went correctly.**","aef3d2bf":"**4. Defining LabelEncoder, and making a copy of dataset called 'iris_dataset_le'. Then we transform 'Species' column which is categorical data(most models including Decision Tree can't deal with categorical data) to numeric values. Lastly we print unique values for each column. We want to focus on 'Species' column as only this one's got categorical data in it.**","cd1d4d18":"**Hi I created this quick tutorial to demonstrate how to apply Decision Tree model to Iris dataset. If it was helpful for you please leave a comment, it would be very appreciated.**","80afb82d":"**8. Splitting training and test data to our model.**","8b2397aa":"**5. As you can see we transform categorical data into numeric values e.g Iris-setosa=0,Iris-versicolor=1 and Iris-virginica=2.**","7b75127d":"**Import necessary libraries and modules.**","b47a3209":"**2. Take a look at data we dealing with.**"}}