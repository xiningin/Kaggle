{"cell_type":{"dafd96a1":"code","285eecef":"code","eb5e8ba1":"code","4cbe5291":"code","6491c559":"code","9bd8ff25":"code","cd0736d5":"code","3573306e":"code","79d7703f":"code","f6b5a8cd":"code","7dd239d7":"code","5ba5886a":"code","5d5205f6":"code","7887f2e4":"code","f1a7be76":"code","ece36a3b":"code","5b0d5b25":"code","dbf28ac2":"code","cea0060a":"code","559120d3":"code","9abaf8b7":"code","6b737371":"code","29195592":"code","cd33cac7":"code","7047e3c6":"code","5daf56ea":"code","b1aa9844":"code","8ab22a1b":"code","4321d8c6":"code","a48f13ec":"code","e22adba3":"markdown","2828dcb4":"markdown","1651fc37":"markdown","e23c5312":"markdown","24f1db42":"markdown","840bbbdb":"markdown"},"source":{"dafd96a1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport math\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","285eecef":"history = pd.read_csv(\"..\/input\/historical_transactions.csv\", low_memory=True)","eb5e8ba1":"history.shape","4cbe5291":"history['purchase_amount'].hist(bins=100)","6491c559":"history['purchase_amount'].plot.box()","9bd8ff25":"history=history[history['purchase_amount']<5000000]","cd0736d5":"history['purchase_amount'].hist()","3573306e":"history[history['purchase_amount']>25000]['purchase_amount'].hist()","79d7703f":"history[history['purchase_amount']<20000]['purchase_amount'].hist()","f6b5a8cd":"history[history['purchase_amount']<2500]['purchase_amount'].hist()","7dd239d7":"history[history['purchase_amount']<500]['purchase_amount'].hist()","5ba5886a":"history[history['purchase_amount']<100]['purchase_amount'].hist()","5d5205f6":"history[history['purchase_amount']<10]['purchase_amount'].hist()","7887f2e4":"history[history['purchase_amount']<1]['purchase_amount'].hist()","f1a7be76":"history[history['purchase_amount']<1].shape","ece36a3b":"history[history['purchase_amount']<1].shape[0]\/history.shape[0]","5b0d5b25":"history[history['purchase_amount']>1]['purchase_amount'].hist()","dbf28ac2":"history[(history['purchase_amount']>1) & (history['purchase_amount']<10)]['purchase_amount'].hist()","cea0060a":"history[(history['purchase_amount']>10) & (history['purchase_amount']<100)]['purchase_amount'].hist()","559120d3":"history[(history['purchase_amount']>100) & (history['purchase_amount']<1000)]['purchase_amount'].hist()","9abaf8b7":"history[(history['purchase_amount']>10000) & (history['purchase_amount']<100000)]['purchase_amount'].hist()","6b737371":"bins = [-1,1,10,100,1000,10000,100000,1000000,10000000]\nhistory['binned_purchase_amount'] = pd.cut(history['purchase_amount'], bins)","29195592":"binned_purchase_amount_cnt = history.groupby(\"binned_purchase_amount\")['binned_purchase_amount'].count().reset_index(name='binned_purchase_amount_cnt')\nbinned_purchase_amount_cnt.columns = ['purchase_amount','binned_purchase_amount_cnt']","cd33cac7":"binned_purchase_amount_cnt['percent']=binned_purchase_amount_cnt['binned_purchase_amount_cnt']*100\/binned_purchase_amount_cnt['binned_purchase_amount_cnt'].sum()","7047e3c6":"binned_purchase_amount_cnt","5daf56ea":"binned_purchase_amount_cnt.plot.bar(y='percent', x='purchase_amount')","b1aa9844":"def log_1(x):\n    return math.copysign(1,x)*math.log(1+abs(x))\n","8ab22a1b":"history['log_purchase_amount']=history['purchase_amount'].apply(lambda x :log_1(x) )","4321d8c6":"history['log_purchase_amount'].hist()","a48f13ec":"history['purchase_amount_outliers'] = 0\nhistory.loc[history['purchase_amount'] >1, 'purchase_amount_outliers'] = 1","e22adba3":"After elimination of that point, we still have outliers in this feature so, in the next few cells, I drew some histograms in order to allocate outliers, fill free to skip them and focus on the block final bolck  when I used **pd.cut **","2828dcb4":"As you can see more than 98% of this distribution still between -1 and 1, we define data outside this interval as  outliers.","1651fc37":"instead of eliminating outliers, it may be useful to score the loyalty of the customer, I create a new feature to distinguish between normal data and outliers.","e23c5312":"As you can see we have outliers in this distribution we can confirm this conclusion by drawing the box plot ","24f1db42":"we have point ( transaction) with purchase amount higer than 6000000. we try to eliminate it ","840bbbdb":"In order to reduce variance and keep the sign of the distribution, I used this transformation : sign(x)*ln(1+abs(x))"}}