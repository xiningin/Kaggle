{"cell_type":{"e943259e":"code","c32a0f5c":"code","a93b08cf":"code","ebc67507":"code","684aa7fa":"code","0f6f98e5":"code","dd1ac4d2":"code","c0816ebc":"code","b35ddb6c":"code","9ee9999b":"code","87213f09":"code","58f6d9cd":"code","ae624b17":"code","37111231":"code","d2e285b2":"code","34196f1d":"code","7bdf93da":"code","0ba525a1":"code","79eb6174":"code","3495d5b1":"code","f368233e":"code","b109870e":"code","987f7862":"code","e6047724":"code","43d43615":"code","3b5f44dd":"code","299a3ae7":"code","1481181a":"code","d29550f1":"code","b6385354":"code","93ab87a2":"code","6d123859":"code","99a62755":"code","2ee3b14b":"code","5da13d47":"code","f2f452ba":"code","d8bb6760":"code","d3c0968e":"code","d55b946c":"code","e4ec332b":"code","6299e8b0":"code","7049380b":"code","3a36c3bf":"code","c1e3a9ed":"code","bb7898a8":"code","cc4c041e":"code","b4f7e57e":"code","6b30f16d":"code","a37f5742":"code","70ec0c48":"code","d358021e":"code","00e2fccd":"code","143c29e5":"code","b9fd2416":"code","92a8989c":"code","e5530176":"code","307d05b3":"code","8c4b4e18":"code","b2b360ef":"code","3ca3389a":"code","40917b4f":"code","1c3b1c5a":"code","3cfb939b":"code","92f889b1":"code","776819fa":"markdown","31048102":"markdown","be477b64":"markdown","abddbe55":"markdown","b3d60446":"markdown","6b851b62":"markdown","79e42dc0":"markdown","382622f5":"markdown","c25fdeab":"markdown","59d7c641":"markdown","0f855187":"markdown","f21cef08":"markdown","b6667aeb":"markdown","fd0c3714":"markdown","13756eb3":"markdown","3fcd08be":"markdown","ed21d2a5":"markdown","3725d9b1":"markdown","510d01c7":"markdown","14d90d1f":"markdown","6b008f3a":"markdown","b9e78f7a":"markdown","9345e8b6":"markdown","2352ec51":"markdown","9a320f15":"markdown","5e8501b0":"markdown","80595088":"markdown","252dad20":"markdown","34295e58":"markdown","3a5292d0":"markdown","88a44261":"markdown","58864389":"markdown","d1ee438a":"markdown","4c32586f":"markdown","ebf4ac46":"markdown","545d1daf":"markdown","1acfdc46":"markdown","ea3c798d":"markdown","0e5a085a":"markdown","937815b5":"markdown","f604cfbb":"markdown","b94db8dc":"markdown","f5d97bd6":"markdown","cbc9b78c":"markdown","d845d17a":"markdown","23b440ba":"markdown","700481fd":"markdown","b24047d3":"markdown","f9c47d7e":"markdown","6068e779":"markdown","946cb081":"markdown","94deaefc":"markdown","fb841192":"markdown","c0abefc8":"markdown","5ad39bc1":"markdown","9812fd6a":"markdown","95d6b3eb":"markdown","651b82b7":"markdown","4208c5be":"markdown","ea343b88":"markdown","33847e61":"markdown","49369700":"markdown","8a7ae469":"markdown","11c625f5":"markdown","81d5dbc9":"markdown","3ea59e2c":"markdown","8f2aed3d":"markdown","80ef44db":"markdown","f9d16fc3":"markdown","81d70d51":"markdown","fbdd603c":"markdown"},"source":{"e943259e":"# import all libraries needed in analysis\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime\n%matplotlib inline","c32a0f5c":"df=pd.read_csv(\"..\/input\/noshowappointments\/KaggleV2-May-2016.csv\") #load dataset anto a dataframe\ndf.head() #shows the first 5 rows of data","a93b08cf":"df.info()","ebc67507":"df.duplicated().sum()","684aa7fa":"df.describe(include=\"all\") #get statistical data about each column","0f6f98e5":"#draw Histogram to show distribution of data for each feature\ndf.hist(figsize=(15,15))\nplt.suptitle('Histograms shows count of each category for different features', fontsize=22);","dd1ac4d2":"#edit the reversed meaning of No show to be positive,\n#0 will mean that patient didn't come to his appointement.\n#1 will mean that patient came to his appointment.\n\ndf[\"No-show\"].replace({\"Yes\":0,\"No\":1},inplace=True)","c0816ebc":"df[\"No-show\"] = pd.to_numeric(df[\"No-show\"]) #change datatype for column to be numeric integer.","b35ddb6c":"df=df.rename(columns={\"No-show\":\"Show_up\"}) #rename column to give positive meaning.","9ee9999b":"df.info() #make sure of that column name changed correctly and also datatype.","87213f09":"df[\"ScheduledDay\"] = pd.to_datetime(df[\"ScheduledDay\"])","58f6d9cd":"df[\"AppointmentDay\"] = pd.to_datetime(df[\"AppointmentDay\"])","ae624b17":"df.info()","37111231":"df.head()","d2e285b2":"df['PatientId'] = df['PatientId'].apply(str)","34196f1d":"df['AppointmentID'] = df['AppointmentID'].apply(str)","7bdf93da":"df.info() #make sure of datatype changed.","0ba525a1":"df.describe(include=\"all\") # check for results","79eb6174":"df[df[\"Age\"]<0] #show colmn with this problem","3495d5b1":"df = df.drop([99832]) #drop the column with index=99832","f368233e":"df[df[\"Age\"]<0] #make sure that row has been dropped","b109870e":"Num_show_up = df[df[\"Show_up\"]==1].count()[\"PatientId\"] #count of patients who showed up on thier appoinments.\nNum_no_show_up = df[df[\"Show_up\"]==0].count()[\"PatientId\"] #count of patients who didn't show up on thier appoinments.","987f7862":"print(Num_show_up,Num_no_show_up)","e6047724":"label_Names = [\"Showed up\", \"Didn't Show up\"]\ndata = [Num_show_up, Num_no_show_up]\n\n\nexplode = (0, 0.15) #only explode the didn't show up slice.\nplt.axis('equal'); #to keep aspect ratio equal to appear as a fine circle.\nplt.pie(data,radius=1.5,shadow=True ,labels = label_Names,explode=explode, startangle=180,autopct='%0.2f%%',textprops = {\"fontsize\":15})\nplt.title(\"Percentage of patients who showed up and who didn't\",y=1.2);\n#autopct to show percentage, 0.2 for two decimal place","43d43615":"x=df.groupby([\"Gender\",\"Show_up\"]).count() #count each gender patients who showed up and who didn't\nx.head()","3b5f44dd":"x[\"PatientId\"].unstack().plot(kind=\"bar\",stacked=False,figsize=(6,6),grid=True) #plot for the grouped dataframe\nplt.title(\"Count of no-show behaviour vs. Gender\") #change title for the plot\nplt.legend([\"Didn't Show up\", \"Showed up\"]); #change legend for each color of data\nplt.ylabel(\"count of patients\")","299a3ae7":"df_Female = df[df[\"Gender\"]==\"F\"] #new dataframe holds female data only.\nNum_F = df_Female[\"PatientId\"].count() #count of all females in data.","1481181a":"df_Female_show = df_Female[df_Female[\"Show_up\"] == 1] #new dataframe holds female who showed up only.\nNum_F_show = df_Female_show[\"Show_up\"].sum() #count of females who showed up on their appointments","d29550f1":"#calculate percentage of females who attend their appointments among all females in the data\nFemale_Show_Percent = round((Num_F_show\/Num_F)*100,2)\nprint(\"Percentage of Females who show up on their appointments is around {}% of all female patients.\".format(Female_Show_Percent))","b6385354":"df_Male = df[df[\"Gender\"]==\"M\"] #new dataframe holds male data only.\nNum_M = df_Male[\"PatientId\"].count() #count of all males in data.","93ab87a2":"df_Male_show = df_Male[df_Male[\"Show_up\"] == 1] #new dataframe holds male who showed up only.\nNum_M_show = df_Male_show[\"Show_up\"].sum() #count of males who showed up on their appointments","6d123859":"#calculate percentage of females who attend their appointments among all females in the data\nMale_Show_Percent = round((Num_M_show\/Num_M)*100,2)\nprint(\"Percentage of Males who show up on their appointments is around {}% of all male patients.\".format(Male_Show_Percent))","99a62755":"df[\"Duration\"] = (df[\"AppointmentDay\"].dt.date) - (df[\"ScheduledDay\"].dt.date) #.dt.date to differ only date part","2ee3b14b":"df[\"Duration\"] = df[\"Duration\"].dt.days #to convert column to numerical column contain number of days","5da13d47":"df.head() #Show the new column","f2f452ba":"df.groupby(\"Show_up\").mean()[\"Duration\"]","d8bb6760":"df.describe(include=\"all\")","d3c0968e":"def dataframe_age(data,column,l1,l2):\n    \"\"\"This function returns a new dataframe from an input dataframe and apply a condition\n    to a certain column to be whithin 2 numerical limits\n    \n    ------------------------------------\n    input:\n    ------\n    data: original data frame that you want to make a supset from it.\n    column: column name in the original data frame that we will apply limit condition to. (Case Sensitive)\n    l1: the lower limit of the column.\n    l2: the higher limit of the column.\n    \n    output:\n    ------\n    a new dataframe with all columns in the original one but only the rows which meet the condition.\n    \"\"\"\n    if l2<l1:\n        l1,l2 = l2,l1\n    return data.query(\"{} <= {} <= {}\".format(l1,column,l2))","d55b946c":"#get dataframes for each age category\nchilds = df.query(\"Age < 18\")\nage_18_24 = dataframe_age(df,\"Age\",18,24)\nage_25_34 = dataframe_age(df,\"Age\",25,34)\nage_35_44 = dataframe_age(df,\"Age\",35,44)\nage_45_54 = dataframe_age(df,\"Age\",45,54)\nage_55_64 = dataframe_age(df,\"Age\",55,64)\nold = df.query(\"Age >= 65\")","e4ec332b":"#calculate mean for each age category\nmean_childs = childs[\"Show_up\"].mean()\nmean_18_24 = age_18_24[\"Show_up\"].mean()\nmean_25_34 = age_25_34[\"Show_up\"].mean()\nmean_35_44 = age_35_44[\"Show_up\"].mean()\nmean_45_54 = age_45_54[\"Show_up\"].mean()\nmean_55_64 = age_55_64[\"Show_up\"].mean()\nmean_old = old[\"Show_up\"].mean()","6299e8b0":"#draw Bar plot for the data\nlocations = [1, 2, 3, 4, 5, 6, 7]\nheights = [mean_childs, mean_18_24, mean_25_34, mean_35_44, mean_45_54, mean_55_64, mean_old]\nlabels = [\"Childs\",\"18-24\",\"25-34\", \"35-44\", \"45-54\", \"55-64\", \"Old\"]\nplt.bar(locations, heights, tick_label=labels)\nplt.title('Average Show_up Vs. Age Categories')\nplt.ylim([0.7,0.9]) #to focus on this spot to feel the change\nplt.xlabel('Age Category')\nplt.ylabel('Average Show_up');","7049380b":"df_SMS=df[df[\"SMS_received\"]==1][\"Show_up\"].mean()\ndf_No_SMS=df[df[\"SMS_received\"]==0][\"Show_up\"].mean()","3a36c3bf":"df_SMS #percentage of people who show up with recieving SMS.","c1e3a9ed":"df_No_SMS #percentage of people who show up without recieving SMS.","bb7898a8":"df_SMS = df.loc[(df[\"SMS_received\"]==1) & (df[\"Age\"] < 18)][\"Show_up\"].mean() #Childs patients who recieved SMS\ndf_No_SMS = df.loc[(df[\"SMS_received\"]==0) & (df[\"Age\"]<18)][\"Show_up\"].mean() #Childs patients who recieved SMS\nprint(\"Show_up percentage with SMS is {}%, while {}%  without SMS.\".format(round(df_SMS*100,2),round(df_No_SMS*100,2)))","cc4c041e":"df_SMS = df.loc[(df[\"SMS_received\"]==1) & (df[\"Age\"] >= 18) & (df[\"Age\"] <=24)][\"Show_up\"].mean() #18-24 who recieved SMS\ndf_No_SMS = df.loc[(df[\"SMS_received\"]==0) & (df[\"Age\"] >= 18) & (df[\"Age\"] <=24)][\"Show_up\"].mean() #18-24 patients who recieved SMS\nprint(\"Show_up percentage with SMS is {}%, while {}%  without SMS.\".format(round(df_SMS*100,2),round(df_No_SMS*100,2)))","b4f7e57e":"df_SMS = df.loc[(df[\"SMS_received\"]==1) & (df[\"Age\"] >= 25) & (df[\"Age\"] <=34)][\"Show_up\"].mean() #25-34 who recieved SMS\ndf_No_SMS = df.loc[(df[\"SMS_received\"]==0) & (df[\"Age\"] >= 25) & (df[\"Age\"] <=34)][\"Show_up\"].mean() #25-34 patients who recieved SMS\nprint(\"Show_up percentage with SMS is {}%, while {}%  without SMS.\".format(round(df_SMS*100,2),round(df_No_SMS*100,2)))","6b30f16d":"df_SMS = df.loc[(df[\"SMS_received\"]==1) & (df[\"Age\"] >= 35) & (df[\"Age\"] <=44)][\"Show_up\"].mean() #35-44 who recieved SMS\ndf_No_SMS = df.loc[(df[\"SMS_received\"]==0) & (df[\"Age\"] >= 35) & (df[\"Age\"] <=44)][\"Show_up\"].mean() #35-44 patients who recieved SMS\nprint(\"Show_up percentage with SMS is {}%, while {}%  without SMS.\".format(round(df_SMS*100,2),round(df_No_SMS*100,2)))","a37f5742":"df_SMS = df.loc[(df[\"SMS_received\"]==1) & (df[\"Age\"] >= 45) & (df[\"Age\"] <=54)][\"Show_up\"].mean() #45-54 who recieved SMS\ndf_No_SMS = df.loc[(df[\"SMS_received\"]==0) & (df[\"Age\"] >= 45) & (df[\"Age\"] <=54)][\"Show_up\"].mean() #18-24 patients who recieved SMS\nprint(\"Show_up percentage with SMS is {}%, while {}%  without SMS.\".format(round(df_SMS*100,2),round(df_No_SMS*100,2)))","70ec0c48":"df_SMS = df.loc[(df[\"SMS_received\"]==1) & (df[\"Age\"] >= 55) & (df[\"Age\"] <=64)][\"Show_up\"].mean() #18-24 who recieved SMS\ndf_No_SMS = df.loc[(df[\"SMS_received\"]==0) & (df[\"Age\"] >= 55) & (df[\"Age\"] <=64)][\"Show_up\"].mean() #18-24 patients who recieved SMS\nprint(\"Show_up percentage with SMS is {}%, while {}%  without SMS.\".format(round(df_SMS*100,2),round(df_No_SMS*100,2)))","d358021e":"df_SMS = df.loc[(df[\"SMS_received\"]==1) & (df[\"Age\"] >=65)][\"Show_up\"].mean() #Childs patients who recieved SMS\ndf_No_SMS = df.loc[(df[\"SMS_received\"]==0) & (df[\"Age\"]>=65)][\"Show_up\"].mean() #Childs patients who recieved SMS\nprint(\"Show_up percentage with SMS is {}%, while {}%  without SMS.\".format(round(df_SMS*100,2),round(df_No_SMS*100,2)))","00e2fccd":"median_duration=df.groupby(\"Show_up\").mean()[\"Duration\"][0]","143c29e5":"df_SMS = df.loc[(df[\"SMS_received\"]==1) & (df[\"Duration\"]<=median_duration)][\"Show_up\"].mean() #Childs patients who recieved SMS\ndf_No_SMS = df.loc[(df[\"SMS_received\"]==0) & (df[\"Duration\"]<=median_duration)][\"Show_up\"].mean() #Childs patients who recieved SMS\nprint(\"Show_up percentage with SMS is {}%, while {}%  without SMS.\".format(round(df_SMS*100,2),round(df_No_SMS*100,2)))","b9fd2416":"df_SMS = df.loc[(df[\"SMS_received\"]==1) & (df[\"Duration\"]>=median_duration)][\"Show_up\"].mean() #Childs patients who recieved SMS\ndf_No_SMS = df.loc[(df[\"SMS_received\"]==0) & (df[\"Duration\"]>=median_duration)][\"Show_up\"].mean() #Childs patients who recieved SMS\nprint(\"Show_up percentage with SMS is {}%, while {}%  without SMS.\".format(round(df_SMS*100,2),round(df_No_SMS*100,2)))","92a8989c":"df.info()","e5530176":"all_count = 110526 #number of data records","307d05b3":"#percentage of people diagnosed with Diabetes\ndiabets_count = df[df[\"Diabetes\"]==1][\"PatientId\"].count()\ndiabetes_percent = round(diabets_count*100\/all_count,2)\nprint(\"Percentage of patients who diagnosed with Diabetes is {}%.\".format(diabetes_percent))","8c4b4e18":"#percentage of people diagnosed with Diabetes\ndiabets_count = df[df[\"Hipertension\"]==1][\"PatientId\"].count()\ndiabetes_percent = round(diabets_count*100\/all_count,2)\nprint(\"Percentage of patients who diagnosed with Hipertension is {}%.\".format(diabetes_percent))","b2b360ef":"#percentage of people diagnosed with Diabetes\ndiabets_count = df[df[\"Alcoholism\"]==1][\"PatientId\"].count()\ndiabetes_percent = round(diabets_count*100\/all_count,2)\nprint(\"Percentage of patients who diagnosed with Alcoholism is {}%.\".format(diabetes_percent))","3ca3389a":"#percentage of people diagnosed with Diabetes\ndiabets_count = df[df[\"Handcap\"]==1][\"PatientId\"].count()\ndiabetes_percent = round(diabets_count*100\/all_count,2)\nprint(\"Percentage of patients who diagnosed with Handcap is {}%.\".format(diabetes_percent))","40917b4f":"#count of patients with alchoholism who show up\nalcohol_show = df.loc[(df[\"Alcoholism\"]==1) & (df[\"Show_up\"]==1)][\"PatientId\"].count() ","1c3b1c5a":"#count of patients with alchoholism who don't show up\nalcohol_No_show = df.loc[(df[\"Alcoholism\"]==1) & (df[\"Show_up\"]==0)][\"PatientId\"].count()","3cfb939b":"#calculate percentages\nalcohol_show_percent = round(alcohol_show*100 \/ all_count,2) \nalcohol_No_show_percent = round(alcohol_No_show*100 \/ all_count,2)","92f889b1":"print(\"Percentage of show ups when patients have alchoholism is {}%, while not show ups is {}%.\".format(alcohol_show_percent,alcohol_No_show_percent))","776819fa":"Now Let's Repeat same steps with Males.","31048102":"### 3 - Edit the \"PatientId\", \"AppointmentID\" Columns' Datatype to be String:","be477b64":"#### Understand Nature of each field in dataset","abddbe55":"***","b3d60446":"\n# Project: Investigate a Dataset [Medical Appointment No Shows]\n\n>(Based on a kaggle dataset)\n![Escape doctors](https:\/\/t3.ftcdn.net\/jpg\/02\/60\/79\/68\/360_F_260796882_QyjDubhDDk0RZXV9z7XBEw9AKnWCizXy.jpg)\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#questions\">Questions to ask<\/a><\/li>\n<li><a href=\"#prep\">Analysis Preparation<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>","6b851b62":"##### Answer:\n>- percentage of Show ups increase with SMS with increasing age.\n>- Percentage of patients who shows up increases when the duration is larger.\n>- we can't be quiet sure of the answer because data doesn't mention the time of sending SMS! maybe this information will show more and may be need to be improved.","79e42dc0":"##### Let's Explore duration effect","382622f5":"**---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**","c25fdeab":"In case of low durations:","59d7c641":"<a id='questions'><\/a>\n## Questions to Ask:\n\n> - What is the percentage of patients who show up on their appointements vs. who don't?\n>- Do certain gender has more commitment to medical schedules than the other one?\n>- Is the duration between regestiration and appointment affect the ability to show up ?\n>- Where is the most appointments take place?\n>- Do older patients more commited to medical schedules than others?\n>- Do patients who recieves SMS to remind them of the appointement more likely to show up?\n>- What is percentage of patients who diagnosed with Diabetes, Hipertension, Alcoholism, and Handcap?\n>- Is alcohol drinking may be a cause of missing out the appointements?\n\n<img align=\"center\" width=\"200\" height=\"200\" src=\"https:\/\/creazilla-store.fra1.digitaloceanspaces.com\/cliparts\/33877\/woman-thinking-clipart-xl.png\">\n\n\n<!-- ![Image of Girl](https:\/\/creazilla-store.fra1.digitaloceanspaces.com\/cliparts\/33877\/woman-thinking-clipart-xl.png) -->","0f855187":"More than 65","f21cef08":"*---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*","b6667aeb":"**---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**","fd0c3714":"<a id='intro'><\/a>\n## Introduction\n>A person makes a doctor appointment, receives all the instructions and no-show. Who to blame?\n\n> ***Data Definition***:\n>- **PatientId:** Identification of a patient that is unique for each person.\n>- **AppointmentID:** Identification of each appointment.\n>- **Gender**: Male or Female.\n>- **AppointmentDay:** The day of the actual appointment, when they have to visit the doctor.\n>- **ScheduledDay:** The day someone called or registered the appointment, this is before appointment of course.\n>- **Age:** How old is the patient.\n>- **Neighbourhood:** Where the appointment takes place.\n>- **Scholarship:** 1 or 0.(this is aprogram in Brazil to support poor people with their cost of living) \n>- **Hipertension:** 1 or 0.\n>- **Diabetes:** 1 or 0.\n>- **Alcoholism:** 1 or 0.\n>- **Handcap:** 1 or 0.\n>- **SMS_received:** 1 or more messages sent to the patient.\n>- **No-show:** \"Yes\" or \"No\". (\"No\" means they showed up on their appointments while \"Yes\" means they didn't!).","13756eb3":"- mmm weired .. I thought that SMS would be effective.\nwe should ivestigate more on age recieving the SMS and ivestigate duration too.","3fcd08be":"### Question 3  (Is the duration between registeration and appointment affect the ability to show up ?)","ed21d2a5":"### Data Cleaning\n><img align=\"right\" width=200 height=200 src=\"https:\/\/cdn4.iconfinder.com\/data\/icons\/big-data-analytics-volume-1\/64\/data-cleaning-512.png\">\nData cleansing or data cleaning is the process of detecting and correcting (or removing) corrupt or inaccurate records from a record set, table, or database and refers to identifying incomplete, incorrect, inaccurate or irrelevant parts of the data and then replacing, modifying, or deleting the dirty or coarse data.\n\n>Data cleansing may be performed interactively with data wrangling tools, or as batch processing through scripting.","3725d9b1":"##### Outcomes:\n> - this graph shows that most women shows up on their appointment and so do men.\n> - we need to calculate the porpotion ber each gender to be able to compare.","510d01c7":"##### Answer:\n> \"JARDIM CAMBURI\" is the most frequent place.","14d90d1f":"##### Answer:\n>- Percentage of patients who show up on their appointments represents 79.8%\n>- Percentage of patients who Don't show up on their appointments represents 20.2%","6b008f3a":"18-24","b9e78f7a":"**---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**","9345e8b6":"***","2352ec51":"### Question 6  (Do patients who recieves SMS to remind them of the appointement more likely to show up?)","9a320f15":"<a id='wrangling'><\/a>\n## Data Wrangling\n\n<img align=\"right\" src=\"https:\/\/lh3.googleusercontent.com\/proxy\/OaLH1VwDZwcsVa6dhz19KI_MJLRIaFzCOKmWISe7KnV865Hkm-G466xliez1VKBPOZ0wmo-pl9JdjFg3k_Ef6TGneLGWCllsvEzyRo-PCTJjfC_XJZ3vQKs\">\n> is the process of transforming and mapping data from one \"raw\" data form into another format with the intent of making it more appropriate and valuable for a variety of downstream purposes such as analytics. The goal of data wrangling is to assure quality and useful data. Data analysts typically spend the majority of their time in the process of data wrangling compared to the actual analysis of the data.\n>(Wikipedia Definition)","5e8501b0":"### Question 5  (Do older patients more commited to medical schedules than others?)","80595088":"**---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**","252dad20":"### Question 4  (Where is the most appointments take place?)","34295e58":"###### Check Duplicates","3a5292d0":"**---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**","88a44261":"**---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**","58864389":"Below 18","d1ee438a":"<a id='conclusions'><\/a>\n## Conclusions\nResults:\n>- Percentage of patients who show up on their appointments represents 79.8%\n>- Percentage of patients who Don't show up on their appointments represents 20.2%\n>- Both genders have same commitment to medical schedules.\n>- Patients Who didn't show up have an average of 15 days between registeration day and their appointments.\n>- Patients Who show up have an average of 8 days between registeration day and their appointments.\n>- As Duration increases, the ability of patients to show up on their appointments decreases.\n>- \"JARDIM CAMBURI\" is the most frequent place.\n>- Older patients are more commited to their appointments' schedules than younger ones.\n\nLimitations:\n>- Source of data should record timing of sending SMS to Patients to better investigate effect of this on Show ups and why it is not effective as much as expected.\n>- Most of the data are categorical which made most of plots are meaningless.\n>- some patients who marked as no show up, in real they may show up but on another day, this is shown on a different record but this will be better noticed and enhance result if recorded that patient has made a rescedule instead of beeing recorded as No show.","4c32586f":"***","ebf4ac46":"**---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**","545d1daf":"**---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**","1acfdc46":"##### Outcomes:\n> - there is only 62299 unique PatientID which means that same person may rescedule their appointment and show up in second or third time!","ea3c798d":"##### Outcomes:\n> - Age has a one or more negative value which makes no sense, so it need to be removed.\n\n    (this may be caused by human error while recording date of birth for some patients, and age might be automatically calculated as the difference between current date and date of birth which resulted in this negative value.)\n\n>- Age variate from -1 to 115 so we have a wide range of ages to investigate.\n\n>- \"Scholarship\", \"Hipertension\", \"Diabetes\", \"Alcoholism\", \"Handcap\", and \"SMS_received\" are encoded in form of zeros and ones, thats why it has type of int64, and appears like a continous data type.\n\n>- gender has 2 unique values \"F\" and \"M\" and the most frequent one is \"F\" which means data have more data on women than men.\n\n>- Show up has 2 unique values \"yes\" or \"No and the most frequent one is \"No\" which means that most of patients show up on their appointements.\n","0e5a085a":"### Question 8  (Is alcohol drinking may be a cause of missing out the appointements?)","937815b5":"### Question 2  (Do certain gender has more commitment to medical schedules than the other one?)","f604cfbb":"<a id='eda'><\/a>\n## Exploratory Data Analysis\n\n\n### Question 1 (What is the percentage of patients who show up on their appointements vs. who don't?)","b94db8dc":"35-44","f5d97bd6":"##### Answer:\n> Yes, older patients are more commited to their appointments' schedules than younger ones.","cbc9b78c":"**---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**","d845d17a":"***","23b440ba":"### 1 - Edit the \"No-show\" Column to be in Positive form instead of Negativity:","700481fd":"### 4 - Remove Row(s) with Negative Age Value(s):","b24047d3":"***","f9c47d7e":"###  General Properties","6068e779":"**---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**","946cb081":"#### Exploring general properties about the data","94deaefc":"##### Outcomes:\n> - AppointmentId and PatientId have no statistical meanings that's why we need to change their datatype into strings.\n> - Age date is right skewed wich means data includes more young patients than old!\n> - Percentage of Alcoholisim and Handcap is extremly low among patients in this dataset.\n> - Percentage of patients who have diabetes and patients who have a scholarship doesn't exceed 5%.\n> - Percentage of patients who have hipertension as around 23% which is noticable.\n> - SMS have been sent to more than 30% of cases.","fb841192":"##### Outcomes:\n> - There is no duplicate rows in this dataset.","c0abefc8":"**---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**","5ad39bc1":"##### Outcomes:\n>- this shows that we have 14 columns in total besides index, and we have 110527 record.\n- None of the data fields have NULL values.\n- Datatype should be changed for both \"ScheduledDay\" and \"AppointmentDay\".\n- patientId is float while it supposed to be an integer.","9812fd6a":"**---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**","95d6b3eb":"25-34","651b82b7":"### Question 7  (What is percentage of patients who diagnosed with Diabetes, Hipertension, Alcoholism, and Handcap?)","4208c5be":"In case of large durations:","ea343b88":"45-54","33847e61":"##### Outcomes:\n> Percentage of patients who shows up increases when the duration is larger.","49369700":"### 2 - Edit the \"ScheduledDay\", and\t\"AppointmentDay\" Columns' Datatype to be Datetime:","8a7ae469":"##### Answer:\n> Both genders have same commitment to medical schedules.","11c625f5":"##### Outcomes:\n> it seems like the percentage of Show ups increase with SMS with increasing age.","81d5dbc9":"**---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**","3ea59e2c":"55-64","8f2aed3d":"##### Answer:\n> it doesn't make them missing the appointments as most of them didn't miss theirs.","80ef44db":"In this Section we need to make segmentation for age to categories:\n\n>below 18, 18-24, 25-34, 35-44, 45-54, 55-64, more than 65.","f9d16fc3":"##### Answer:\n>- Patients Who didn't show up have an average of 15 days between registeration day and their appointments.\n>- Patients Who show up have an average of 8 days between registeration day and their appointments.\n\n>- As Duration increases, the ability of patients to show up on their appointments decreases.","81d70d51":"To answer this question we need to add new column contain the duration between regestiration and appointment","fbdd603c":"<a id='prep'><\/a>\n## Analysis Preparation\n<img align=\"right\" width=\"300\" height=\"300\" src=\"https:\/\/www.pinclipart.com\/picdir\/big\/251-2513361_prepare-initial-green-card-application-clipart.png\">\nin this step we import all needed libraries,\nwe make aliases for easier calling when needed\n> - pandas: a library offers data structures and operations for manipulating numerical tables and time series.\n\n> - Numpy: a library used for working with arrays.\nIt also has functions for working in domain of linear algebra, fourier transform, and matrices.\n\n> - Matplotlib: a plotting library for the Python programming language and its numerical mathematics extension NumPy\n\n> - Seaborn: a data visualization library built on top of matplotlib and closely integrated with pandas data structures in Python."}}