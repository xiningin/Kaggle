{"cell_type":{"15febb7a":"code","6014b02e":"code","b6814ac7":"code","ae06e3bd":"code","57fd7b49":"code","b524bb7f":"code","a50cef5c":"code","0755eac9":"code","d2e0d3b7":"code","dcc568ae":"code","005db006":"code","b1df022b":"code","a49f9d71":"code","8b6af9d9":"code","f5000b19":"code","9bd52e58":"code","24f2ead4":"code","0098495c":"code","683c28da":"code","f599f597":"code","5be56504":"code","8564d177":"code","6873f1da":"markdown","8ffd8074":"markdown","c945d030":"markdown","0a33767d":"markdown"},"source":{"15febb7a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6014b02e":"car_data= pd.read_csv(\"..\/input\/toyotacorollacsv\/ToyotaCorolla.csv\",index_col=0)","b6814ac7":"cars_data=car_data.copy(deep=True)","ae06e3bd":"cars_data.index           #we get no.of rows using index","57fd7b49":"cars_data.columns         #Name of the colums we have ","b524bb7f":"cars_data.shape # we have total 1436 rows and 36 colums","a50cef5c":"cars_data.size #total size of data sets","0755eac9":"cars_data.memory_usage()","d2e0d3b7":"cars_data.head(5) #head gives us first 5 objects as a defult else we can mention the amount of data we need","dcc568ae":"cars_data.dtypes # what are datatypes we have for the objectes","005db006":"cars_data.select_dtypes(exclude=[object]) #here we are selected only the datatype which is int only ","b1df022b":"cars_data.isnull().sum() #Hence we dont have any null vaules we can move ","a49f9d71":"my_tab=pd.crosstab(index=cars_data['Fuel_Type'],columns=\"count\",dropna=True)\nmy_tab","8b6af9d9":"import matplotlib.pyplot as plp\nimport seaborn as sns\n","f5000b19":"sns.set(style=\"darkgrid\")","9bd52e58":"sns.regplot(x=cars_data[\"KM\"],y=cars_data[\"Price\"],fit_reg= True)","24f2ead4":"sns.lmplot(x='Age_08_04',y='Price',data=cars_data,fit_reg=False,hue='Fuel_Type',legend=True)","0098495c":"sns.distplot(cars_data[\"Age_08_04\"])","683c28da":"sns.countplot(x=\"Fuel_Type\",data=cars_data,hue=\"Automatic\")","f599f597":"sns.boxplot(y=cars_data[\"Price\"])","5be56504":"sns.boxplot(x=cars_data[\"Fuel_Type\"],y=\"Price\",hue=\"Automatic\",data=cars_data)","8564d177":"#sns.pairplot(cars_data,kind=\"scatter\",hue=\"Fuel_Type\")","6873f1da":"# Data Visulization of the Data\n*using scatter plot *","8ffd8074":"# Here we learn EDA of The Data and Data Visulization of Data\nusing pandas we read use data and make useful for use to Visulie and understand the data ","c945d030":"Now we done with read the data lets copy the data into Deep Data \n","0a33767d":"# **we now see price vs age**\nusing scattter plot we  can do these\n"}}