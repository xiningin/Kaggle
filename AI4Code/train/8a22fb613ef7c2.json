{"cell_type":{"ed710488":"code","02a6dd1e":"code","de632c88":"code","4a65dd20":"code","73011088":"code","ce71c8d6":"code","fdb7d36d":"code","deccc89a":"code","ea2db175":"code","4698edd0":"code","f0da3c23":"code","16535ec7":"code","6c94815d":"code","0c7e4000":"code","63eca5a3":"code","dff5aec9":"code","e1a85657":"code","b0e08650":"code","5d634003":"code","9ecf0735":"code","f0ca597a":"code","8a34bda3":"code","fa7565f1":"code","3eb863f7":"code","6ff1a274":"code","9af55bef":"code","0cb6575d":"code","1a2ef43a":"code","2f04dda8":"code","bc2f7ee5":"code","7deb1091":"code","47dcc2f8":"code","1b0065b6":"code","d1735c6a":"code","da0c8154":"code","87644bf4":"code","b320f71a":"code","9a49b624":"code","cc9223c3":"code","fdffa5b9":"code","dfe7bbb3":"code","7dc480cf":"code","0f190351":"code","224f1a75":"code","81070404":"code","57764dc0":"code","48995fd7":"code","6e55c924":"markdown","4a69bf07":"markdown","6521b8c9":"markdown","f63c1b8f":"markdown","1978b7e6":"markdown","1d5e103e":"markdown","080861f3":"markdown","7c689968":"markdown","b54a5b1a":"markdown"},"source":{"ed710488":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.offline as py\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","02a6dd1e":"import cv2 as cv\nimport matplotlib.pyplot as plt","de632c88":"IMG_PATH = \"..\/input\/jefferson-county-colorado-open-space-and-trails\/Peaks-to-Plains-Trail-Map.jpeg\"\n\nimgArray = cv.imread(IMG_PATH)","4a65dd20":"plt.imshow(imgArray)\n\nplt.show()","73011088":"df = pd.read_csv('..\/input\/jefferson-county-colorado-open-space-and-trails\/open_space_trails.csv', encoding='utf8')\npd.set_option('display.max_columns', None)\ndf.head()","ce71c8d6":"!pip install pywaffle","fdb7d36d":"difficulty = df[\"TRAIL_DIFFICULTY_RATING\"].value_counts()","deccc89a":"from pywaffle import Waffle\n\nplt.figure(\n    FigureClass=Waffle,\n    rows=5,\n    columns=10,\n    values=difficulty,\n    title={'label': 'Trail Difficulty Distribution', 'loc': 'left'},\n    labels=[\"{}({})\".format(a, b) for a, b in zip(difficulty.index, difficulty) ],\n    # Set the position of the legend\n    legend={'loc': 'upper left', 'bbox_to_anchor': (1, 1)},\n    dpi=100\n)\nplt.show()","ea2db175":"IMG_PATH1 = \"..\/input\/jefferson-county-colorado-open-space-and-trails\/Windy-Saddle-Park-Map.jpeg\"\n\nimgArray1 = cv.imread(IMG_PATH1)","4698edd0":"fig = px.bar(df, \n             x='PARK_NAME', y='MILEAGE', color_discrete_sequence=['#2B3A67'],\n             title='Trail Mileage by Park', text='TRAIL_DIFFICULTY_RATING')\nfig.show()","f0da3c23":"plt.imshow(imgArray1)\n\nplt.show()","16535ec7":"!pip install pycomp","6c94815d":"# Importing libraries\nfrom pycomp.viz.insights import *\n\n# JP rate\ndifficulty_colors = ['crimson', 'darkslateblue', 'cyan']\nplot_donut_chart(df=df, col='TRAIL_DIFFICULTY_RATING',  colors=difficulty_colors,\n                 title='Absolute Total and Percentual Trail Difficulty')","0c7e4000":"import plotly.figure_factory as ff\n\nhead = ff.create_table(df.head())\npy.iplot(head)","63eca5a3":"describe = ff.create_table(df.describe())\npy.iplot(describe)","dff5aec9":"missing_count = pd.DataFrame({'missing': df.isnull().sum().sort_values(ascending=False)})\n\nmissing_count = ff.create_table(missing_count)\npy.iplot(missing_count)","e1a85657":"#https:\/\/www.kaggle.com\/prestonfan\/data-visualization-palmer-archipelago-penguins\/notebook\nfrom sklearn.impute import SimpleImputer\nimputer = SimpleImputer(strategy='most_frequent')\ndf.iloc[:,:] = imputer.fit_transform(df)\n\nhead = ff.create_table(df.head())\npy.iplot(head)","b0e08650":"missing_count = pd.DataFrame({'missing': df.isnull().sum().sort_values(ascending=False)})\n\nmissing_count = ff.create_table(missing_count)\npy.iplot(missing_count)","5d634003":"IMG_PATH2 = \"..\/input\/jefferson-county-colorado-open-space-and-trails\/apex_designated_trail_use_instructions.jpeg\"\n\nimgArray2 = cv.imread(IMG_PATH2)","9ecf0735":"df[categorical_nan].isna().sum()","f0ca597a":"plt.imshow(imgArray2)\n\nplt.show()","8a34bda3":"missing_val_count_by_column = (df.isnull().sum())\nprint(missing_val_count_by_column[missing_val_count_by_column > 0])","fa7565f1":"convertedArray = cv.cvtColor(imgArray, cv.COLOR_BGR2RGB)\n\nplt.subplots(figsize=(15,10))\nplt.imshow(convertedArray);plt.show()","3eb863f7":"from sklearn.preprocessing import LabelEncoder\n\n#fill in mean for floats\nfor c in df.columns:\n    if df[c].dtype=='float16' or  df[c].dtype=='float32' or  df[c].dtype=='float64':\n        df[c].fillna(df[c].mean())\n\n#fill in -999 for categoricals\ndf = df.fillna(-999)\n# Label Encoding\nfor f in df.columns:\n    if df[f].dtype=='object': \n        lbl = LabelEncoder()\n        lbl.fit(list(df[f].values))\n        df[f] = lbl.transform(list(df[f].values))\n        \nprint('Labelling done.')","6ff1a274":"df = pd.get_dummies(df)","9af55bef":"from PIL import Image\n\nimg = Image.open(\"..\/input\/jefferson-county-colorado-open-space-and-trails\/apex_designated_trail_use_instructions.jpeg\")\nimg","0cb6575d":"from sklearn.impute import SimpleImputer\nmy_imputer = SimpleImputer()\ndf_with_imputed_values = my_imputer.fit_transform(df)","1a2ef43a":"!pip install featurewiz","2f04dda8":"from featurewiz import featurewiz","bc2f7ee5":"import torch\nimport fastai\nfrom fastai.tabular.all import *\nfrom fastai.text.all import *\nfrom fastai.vision.all import *\n\nfrom fastai import *\n\n\nprint(f'Notebook last run on {datetime.fromtimestamp(time.time()).strftime(\"%Y-%m-%d, %H:%M:%S UTC\")}')\nprint('Using fastai version ',fastai.__version__)\nprint('And torch version ',torch.__version__)","7deb1091":"TensorTypes = (TensorImage,TensorMask,TensorPoint,TensorBBox)","47dcc2f8":"timg = TensorImage(image2tensor(img))\ntpil = PILImage.create(timg)","1b0065b6":"img = PILImage(PILImage.create(timg).resize((600,400)))\nimg","d1735c6a":"target = 'TRAIL_DIFFICULTY_RATING'","da0c8154":"tpil.resize((64,64))","87644bf4":"feats = featurewiz(df, target, corr_limit=0.7, verbose=0)\nlen(feats)","b320f71a":"from sklearn.ensemble import RandomForestClassifier, RandomForestRegressor\n#RFC = RandomForestRegressor(n_estimators=200, bootstrap=True,\nRFC = RandomForestClassifier(n_estimators=200, bootstrap=True,\n                            oob_score=True, random_state=43)","9a49b624":"preds = [x for x in list(df) if x not in [target]]\nlen(preds)","cc9223c3":"from featurewiz import convert_all_object_columns_to_numeric\ndfx,_ = convert_all_object_columns_to_numeric(df)\ndfx.head()","fdffa5b9":"X = dfx[preds]\ny_map = {'Least Difficult':0,'More Difficult':1}\ny = df[target].map(y_map).values","dfe7bbb3":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.1,random_state=99)\nprint(X_train.shape, y_train.shape)","7dc480cf":"X_train.head()","0f190351":"df_without_missing_values = df.dropna(axis=1)","224f1a75":"from sklearn.model_selection import cross_val_score\nfull = cross_val_score(RFC, X_train, y_train, scoring='accuracy', cv=5, n_jobs=-1, verbose=0)\nprint('Average Cross Validation Accuracy using full set of variables = %0.1f%%' %(\n                        np.mean(full)*100))","81070404":"convertedArray1 = cv.cvtColor(imgArray1, cv.COLOR_BGR2RGB)\n\nplt.subplots(figsize=(15,10))\nplt.imshow(convertedArray1);plt.show()","57764dc0":"#from sklearn.metrics import balanced_accuracy_score\n#print('Balanced Accuracy on Held out Test Data:%0.1f%%' %(100*balanced_accuracy_score(y_test,RFC.fit(X_train,y_train).predict(X_test))))","48995fd7":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#4251f5','#42a7f5','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke was Here.' )","6e55c924":"Jefferson County, is a county located in the U.S. state of Colorado. As of the 2010 census, the population was 534,543, making it the fourth-most populous county in Colorado. The county seat is Golden, and the most populous city is Lakewood.\n\nJefferson County is included in the Denver-Aurora-Lakewood, CO Metropolitan Statistical Area. Located along the Front Range of the Rocky Mountains, Jefferson County is adjacent to the state capital of Denver.\nhttps:\/\/en.wikipedia.org\/wiki\/Jefferson_County,_Colorado","4a69bf07":"#That Piechart above with PyComp by Panini, has more details than the chart below, from where I got the inspiration.\n\n![](https:\/\/www.jeffco.us\/ImageRepository\/Document?documentID=24819)https:\/\/insights.arcgis.com\/#\/view\/707fa5ea6ab94691a0edb5460d1d8ba7","6521b8c9":"![](https:\/\/www.jeffco.us\/ImageRepository\/Document?documentID=10281)https:\/\/www.jeffco.us\/3442\/Trails","f63c1b8f":"#Simple Imputer with Table.","1978b7e6":"#I made two ways of Imputations, even Kaggle Tutorial. Simply didn't work. From now, I commented the rest of the script.","1d5e103e":"![](https:\/\/www.jeffco.us\/ImageRepository\/Document?documentID=10064)https:\/\/www.jeffco.us\/3442\/Trails","080861f3":"#FeatureWiz Codes by RSESHA https:\/\/www.kaggle.com\/rsesha\/new-featurewiz-demo\/notebook","7c689968":"#After I saw that image I remembered that Tables snippets\n#Codes from Preston Fan https:\/\/www.kaggle.com\/prestonfan\/data-visualization-palmer-archipelago-penguins\/notebook","b54a5b1a":"    #PyComp By Thiago Panini  @thiagopanini"}}