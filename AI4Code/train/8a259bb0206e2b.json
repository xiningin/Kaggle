{"cell_type":{"d44a0421":"code","072b0617":"code","b4f31e37":"code","ee63530d":"code","0f83b0cf":"code","916d7099":"code","b4484259":"code","c5be7646":"code","c9923101":"code","f5e75549":"code","8bae41cf":"code","110e749f":"code","c80534ad":"code","c34fe7d5":"code","acf314b7":"code","122bab09":"code","58880f6e":"code","b48d330e":"code","cd1dc5cf":"code","786a1788":"code","115f09d3":"code","171565c3":"code","1ff27f6d":"code","719b2bd7":"code","329f2278":"code","a7e8e394":"code","e46f0c63":"code","19495c65":"markdown","e5b3779e":"markdown","b3f0ae1e":"markdown","ca5b674f":"markdown","9e89edce":"markdown","ba8c2597":"markdown","fad1fc0c":"markdown","93499e66":"markdown"},"source":{"d44a0421":"import pandas as pd\nimport re\nimport nltk\nfrom gensim.models import Word2Vec\nfrom wordcloud import WordCloud,STOPWORDS\nimport matplotlib.pyplot as plt\nfrom nltk.stem import WordNetLemmatizer\nnltk.download('punkt')","072b0617":"df = pd.read_csv(\"..\/input\/data-scientist-job-market-in-the-us\/alldata.csv\")","b4f31e37":"df.head()","ee63530d":"def clean_text(text):\n    text = str(text)\n    text = text.replace(\"\\n\",\" \")\n    return text.lower()","0f83b0cf":"df[\"clean_description\"] = df[\"description\"].apply(clean_text)","916d7099":"sentences = []\nsent_word_sets = []\nfor row in df.iterrows():\n    desc = row[1].clean_description\n    word_tokens = nltk.word_tokenize(desc)\n    sentences.append(word_tokens)\n    sent_word_sets.append(set(word_tokens))","b4484259":"model = Word2Vec(sentences=sentences, vector_size=100, window=5, min_count=10, workers=4)","c5be7646":"possible_words = set()\nsimilar_words = model.wv.most_similar('bachelor', topn=30)\nfor tup in similar_words:\n    possible_words.add(tup[0])\nsimilar_words","c9923101":"similar_words = model.wv.most_similar('masters', topn=30)\nfor tup in similar_words:\n    possible_words.add(tup[0])\nsimilar_words","f5e75549":"similar_words = model.wv.most_similar('phd', topn=30)\nfor tup in similar_words:\n    possible_words.add(tup[0])\nsimilar_words","8bae41cf":"print(possible_words)","110e749f":"# Since the list is much shorter than the list of tokenize descriptions we want checking of word in tokenize description to be O(1)\n# Not a perfect list but will do and handle most used tokens\nbachelor_list = ['bs','b.s','bsc','bs\/ms','bachelor','ba\/bs','b.s.','bs\/ms\/phd','bachelors','ba','bs\/ba','undergraduate']\nmaster_list = ['masters','master','bs\/ms','m.s.','m.s','msc','bs\/ms\/phd','ms','md\/phd','ms\/phd','postgraduate']\nphd_list = ['phd','ph.d.','ph.d','bs\/ms\/phd','md\/phd','ms\/phd','doctoral','postgraduate','doctorate']","c80534ad":"df[\"sent_word_sets\"] = sent_word_sets","c34fe7d5":"def has_qual(word_set,qual_list):\n    for word in qual_list:\n        if word in word_set: #we want this part to be o(1) since qual_list is much shorter than word_set\n            return True\n    return False","acf314b7":"df[\"bachelors\"] = df[\"sent_word_sets\"].apply(lambda x: has_qual(x,bachelor_list))\ndf[\"masters\"] = df[\"sent_word_sets\"].apply(lambda x: has_qual(x,master_list))\ndf[\"phd\"] = df[\"sent_word_sets\"].apply(lambda x: has_qual(x,phd_list))","122bab09":"print(\"Number of jobs with descriptions have bachelor:\",df[\"bachelors\"].sum())\nprint(\"Number of jobs with descriptions have masters:\",df[\"masters\"].sum())\nprint(\"Number of jobs with descriptions have phd:\",df[\"phd\"].sum())","58880f6e":"def get_minimum(hasBsc,hasMsc,hasPhd):\n    \"\"\"\n    returns minimum qualification if any\n    \"\"\"\n    if hasBsc:\n        return \"Bachelors\"\n    \n    elif hasMsc:\n        return \"Masters\"\n    \n    elif hasPhd:\n        return \"Phd\"\n    \n    else:\n        return \"No qualifications stated\"","b48d330e":"df[\"min_qualification\"] = df.apply(lambda x: get_minimum(x.bachelors,x.masters,x.phd),axis=1)","cd1dc5cf":"value_counts = df[\"min_qualification\"].value_counts()\nvalue_counts","786a1788":"print(\"The number jobs that require a minimum of Bachelors are\",value_counts[\"Bachelors\"])\nprint(\"The number jobs that require a minimum of Masters are\",value_counts[\"Masters\"])\nprint(\"The number jobs that require a minimum of Phd are\",value_counts[\"Phd\"])\nprint(\"The number jobs that does not state education require\",value_counts[\"No qualifications stated\"])\nprint(\"The total number of jobs are\",df.shape[0])","115f09d3":"lemmatizer = WordNetLemmatizer()\ndef clean_position(text):    \n    text = re.sub(r\"[^A-Za-z0-9]\", \" \", str(text)).lower()\n    text_tokens = nltk.word_tokenize(text)\n    text_lemmatized = [lemmatizer.lemmatize(word) for word in text_tokens]\n    return \" \".join(text_lemmatized)\n\ndf[\"clean_position\"] = df.position.apply(clean_position)","171565c3":"bsc_string = \" \".join(df[\"clean_position\"][df[\"min_qualification\"]==\"Bachelors\"])\nmsc_string = \" \".join(df[\"clean_position\"][df[\"min_qualification\"]==\"Masters\"])\nphd_string = \" \".join(df[\"clean_position\"][df[\"min_qualification\"]==\"Phd\"])","1ff27f6d":"wordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white', \n                      max_words=100\n                         ).generate(bsc_string)\nplt.clf()\nplt.title(\"Bachelor word cloud\")\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","719b2bd7":"wordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white', \n                      max_words=100\n                         ).generate(msc_string)\nplt.clf()\nplt.title(\"Masters word cloud\")\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","329f2278":"wordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white', \n                      max_words=100\n                         ).generate(phd_string)\nplt.clf()\nplt.title(\"Phd word cloud\")\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","a7e8e394":"df.to_csv(\"output.csv\",index=False)","e46f0c63":"df","19495c65":"# Final comments\nNote that this is a rather rudimentary means of statistical analysis with simple NLP which is by no means accurate.\n\nSince there are no ground truth data this is the best possible means i can come up with.","e5b3779e":"# A note on text cleaning\n\nAs seen above this is a difficult process as there are variations such as `ph.d` and `phd` and `ms\/phd`. Do you replace punctuations with `\" \"` or `\"\"`?","b3f0ae1e":"# Generate word cloud for job title for each qualification","ca5b674f":"Let's find all the similar words using a simple word 2 vec model. Just to make sure we do not miss anything out.","9e89edce":"# Minimum Education for Data Scientist\nThere is a constant debate in the data science field on what the minimum qualification is for data science roles. \n\nLet us find out in this analysis on job description using some simple NLP.\n\nIn this data analysis we need to extract the qualification if any from the text. \n\nThere are 3 main qualifications that we are concerned with mainly: Bachelor, Master and PhD","ba8c2597":"# Number of jobs with description that has degree\nAs long as the word associated with the degree is in the description it will be counted.","fad1fc0c":"# Cleaning and tokenization\nUnfortunately as this is natural language it is not so easy to extract the information as there are many different variations of this data. \n\nLets clean the data and tokenize them!","93499e66":"# Minimum requirement\nif a job description has both bachelors and masters the minimum requirement would be a bachelors.\n\nIf it has masters and phd the minimum requirement would be a masters.\n\nIf it only has Phd the minimum requirement would be a phd"}}