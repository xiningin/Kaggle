{"cell_type":{"ee2871bc":"code","7281afa8":"code","625e0079":"code","74c67899":"code","f8d5a70c":"code","5284d786":"code","1f6b58cd":"code","3e05717e":"code","c230c6b7":"code","99b77f27":"code","f0482a31":"code","29d585fb":"markdown","dd0044c2":"markdown","b530aa13":"markdown","16095d56":"markdown","069771b2":"markdown","9b0497f6":"markdown"},"source":{"ee2871bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot  as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\npd.options.display.max_rows = 1000\npd.options.display.max_columns = 20\n%matplotlib inline\n\nimport os\nprint(os.listdir(\"..\/input\"))\n%config InlineBackend.figure_format ='retina'\n\n\n# Any results you write to the current directory are saved as output.","7281afa8":"train = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')","625e0079":"train.head()","74c67899":"test.head()","f8d5a70c":"print(\"train shape \"+ str(train.shape))\nprint(\"test shape \" + str(test.shape))\nquantitative = [f for f in train.columns if train.dtypes[f] != 'object']\nquantitative.remove('SalePrice')\nquantitative.remove('Id')\nqualitative = [f for f in train.columns if train.dtypes[f] == 'object']","5284d786":"missing = train.isnull().sum()\nmissing = missing[missing > 0]\n# print(\"number of attributes having missing values \" + str(len(missing)))\nmissing.sort_values(inplace=True)\nmissing.plot.bar()","1f6b58cd":"missing = train.isnull().sum()\nmissing = missing[missing > len(train)*0.05]\n# print(\"number of attributes having missing values greter than 5% \" + str(len(missing)))\nmissing.sort_values(inplace=True)\nmissing.plot.bar()","3e05717e":"len(train)","c230c6b7":"import scipy.stats as st\ny = train['SalePrice']\nplt.figure(1); plt.title('Normal')\nsns.distplot(y, kde=True, fit=st.norm)\nplt.figure(2); plt.title('Log Normal')\nsns.distplot(y, kde=True, fit=st.lognorm)\nplt.figure(3); plt.title('Johnson SB')\nsns.distplot(y, kde=True, fit=st.johnsonsb)\nplt.figure(4); plt.title('Johnson SU')\nsns.distplot(y, kde=True, fit=st.johnsonsu)","99b77f27":"sns.set()\ncols = ['SalePrice', 'OverallQual', 'GrLivArea', 'GarageCars', 'TotalBsmtSF', 'FullBath', 'YearBuilt']\nsns.pairplot(train[cols], size = 3)\nplt.show();","f0482a31":"for c in qualitative:\n    train[c] = train[c].astype('category')\n    if train[c].isnull().any():\n        train[c] = train[c].cat.add_categories(['MISSING'])\n        train[c] = train[c].fillna('MISSING')\n\ndef boxplot(x, y, **kwargs):\n    sns.boxplot(x=x, y=y)\n    x=plt.xticks(rotation=90)\nf = pd.melt(train, id_vars=['SalePrice'], value_vars=qualitative)\ng = sns.FacetGrid(f, col=\"variable\",  col_wrap=2, sharex=False, sharey=False, size=5)\ng = g.map(boxplot, \"value\", \"SalePrice\")","29d585fb":"19 attributes have missing values.","dd0044c2":"11 attributes have missing values greter than 5% of training data.","b530aa13":"as we can see on plots, here johnson SU is best fit.","16095d56":"from this plots, we can say that some variables ar more distributed over saleprice values than others.","069771b2":"Total number of attributes equals **81**, of which **36** is quantitative, **43** categorical + Id and SalePrice.\n\n**Quantitative**: 1stFlrSF, 2ndFlrSF, 3SsnPorch, BedroomAbvGr, BsmtFinSF1, BsmtFinSF2, BsmtFullBath, BsmtHalfBath, BsmtUnfSF, EnclosedPorch, Fireplaces, FullBath, GarageArea, GarageCars, GarageYrBlt, GrLivArea, HalfBath, KitchenAbvGr, LotArea, LotFrontage, LowQualFinSF, MSSubClass, MasVnrArea, MiscVal, MoSold, OpenPorchSF, OverallCond, OverallQual, PoolArea, ScreenPorch, TotRmsAbvGrd, TotalBsmtSF, WoodDeckSF, YearBuilt, YearRemodAdd, YrSold\n\n**Qualitative**: Alley, BldgType, BsmtCond, BsmtExposure, BsmtFinType1, BsmtFinType2, BsmtQual, CentralAir, Condition1, Condition2, Electrical, ExterCond, ExterQual, Exterior1st, Exterior2nd, Fence, FireplaceQu, Foundation, Functional, GarageCond, GarageFinish, GarageQual, GarageType, Heating, HeatingQC, HouseStyle, KitchenQual, LandContour, LandSlope, LotConfig, LotShape, MSZoning, MasVnrType, MiscFeature, Neighborhood, PavedDrive, PoolQC, RoofMatl, RoofStyle, SaleCondition, SaleType, Street, Utilities,","9b0497f6":"This plot gives idea about relationship between variables."}}