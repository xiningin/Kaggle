{"cell_type":{"81090dd0":"code","31fbfd7f":"code","52d54a64":"code","14ec376e":"code","654eaf48":"code","480fd9b9":"code","6a4681d3":"code","aeb5170a":"code","a884e2a9":"code","ab455b66":"code","07d283f2":"code","8b120ea0":"code","59e2baac":"code","c593f094":"code","dd5d3a21":"code","33711a83":"code","c3a61188":"code","3ae185ef":"code","a65c4804":"code","b4d8ef56":"code","71ed5e75":"code","7505eb02":"code","5c73e846":"code","b68e0fbf":"code","439bf930":"code","ff13ac7e":"code","88808747":"code","4e74bbfa":"code","8f057852":"code","b0b6d846":"code","68e9681c":"code","4812969a":"code","a6d75f74":"code","8b586064":"code","242bb257":"code","bf743f15":"code","eb2d2c0c":"code","f3029659":"code","b7799777":"code","cbe75be7":"code","32e688a4":"code","2e28f1eb":"markdown","32c42e45":"markdown","96f3caac":"markdown","6537b6d1":"markdown","c525a702":"markdown","6b1941fc":"markdown","6a7e5e11":"markdown","9caca887":"markdown","6e3bbac9":"markdown","d1739164":"markdown","fb2e4aa7":"markdown","a9ba1717":"markdown","40ade2d8":"markdown","d48db463":"markdown","b87aeb17":"markdown","05330739":"markdown","d71c0ce6":"markdown","5d4ee980":"markdown","0fb810c2":"markdown","02a224da":"markdown","87221011":"markdown","2147f4f9":"markdown","1d33ef66":"markdown"},"source":{"81090dd0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns #importing seaborn module \nimport warnings\nfrom collections import Counter\nwarnings.filterwarnings('ignore')  #this will ignore the warnings.it wont display warnings in notebook\n#plt.style.use('fivethirtyeight')\nplt.style.use('ggplot')\nplt.rcParams['figure.figsize']=[6,3]\nplt.rcParams['figure.dpi']=80","31fbfd7f":"data = pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')","52d54a64":"#Missing Values\ndata.isnull().sum()","14ec376e":"data.info()","654eaf48":"data.describe()","480fd9b9":"#Generate Heatmap\ncorrmat = data.corr()\nfig = plt.figure(figsize = (14,9))\nsns.heatmap(corrmat,vmax = 1,square = True,annot = True,vmin = -1)\nplt.show()\n","6a4681d3":"cat_col = ['DEATH_EVENT', 'smoking', 'sex', 'high_blood_pressure', 'diabetes', 'anaemia']\nnum_col = ['age', 'creatinine_phosphokinase', 'ejection_fraction','platelets','serum_creatinine','serum_sodium','time']\n","aeb5170a":"#Categorical Data\nplt.figure(figsize=(8, 24))\ncount = 1\nfor cols in cat_col:\n    plt.subplot(6, 2, count)\n    data[cols].value_counts().plot.pie(explode=[0,0.1],shadow=True,autopct='%1.1f%%')\n    count +=1\n    plt.subplot(6, 2, count)\n    sns.countplot(cols, data=data)\n    count+=1","a884e2a9":"#Numerical Data\nplt.figure(figsize=(18, 24))\ncount = 1\nfor cols in num_col:\n    plt.subplot(7, 2, count)\n    sns.boxplot(x='DEATH_EVENT', y= cols, data= data)\n    count +=1\n    plt.subplot(7, 2, count)\n    sns.distplot(data.loc[data[cols].notna(), cols])\n    count+=1","ab455b66":"#Categorical Variables : Catplot\nfor cols in cat_col:\n    if cols!='DEATH_EVENT':\n        sns.catplot(x=cols,y='DEATH_EVENT',kind='bar',data=data)","07d283f2":"#Catplot smoking+DEATH_EVENT+sex+high_blood_pressure\nsns.catplot(x='smoking',y='DEATH_EVENT',kind='bar',data=data,col='sex',hue='high_blood_pressure')","8b120ea0":"#Catplot smoking+DEATH_EVENT+sex+diabetes\nsns.catplot(x='smoking',y='DEATH_EVENT',kind='bar',data=data,col='sex',hue='diabetes')\n","59e2baac":"#Catplot smoking+DEATH_EVENT+sex+anaemia\nsns.catplot(x='smoking',y='DEATH_EVENT',kind='bar',data=data,col='sex',hue='anaemia')","c593f094":"#Catplot anaemia+DEATH_EVENT+smoking+sex\nsns.catplot(x='anaemia',y='DEATH_EVENT',kind='bar',data=data,col='smoking',hue='sex')\n","dd5d3a21":"#Catplot high_blood_pressure+DEATH_EVENT+smoking+sex\nsns.catplot(x='high_blood_pressure',y='DEATH_EVENT',kind='bar',data=data,col='smoking',hue='sex')\n","33711a83":"#Catplot anaemia+DEATH_EVENT+diabetes+sex\nsns.catplot(x='anaemia',y='DEATH_EVENT',kind='bar',data=data,col='diabetes',hue='sex')\n","c3a61188":"for cols in cat_col:\n    g = sns.FacetGrid(data, col=cols)\n    g = g.map(sns.distplot, \"age\")","3ae185ef":"# Vaariable - creatinine_phosphokinase\nfor cols in cat_col:\n    g = sns.FacetGrid(data, col=cols)\n    g = g.map(sns.distplot, \"creatinine_phosphokinase\")\n#Not much insights as the distribution looks same ","a65c4804":"for cols in cat_col:\n    g = sns.FacetGrid(data, col=cols)\n    g = g.map(sns.distplot, \"ejection_fraction\")\n#Not much insights as the distribution looks same ","b4d8ef56":"for cols in cat_col:\n    g = sns.FacetGrid(data, col=cols)\n    g = g.map(sns.distplot, \"platelets\")\n#Not much insights as the distribution looks same ","71ed5e75":"#serum_creatinine\nfor cols in cat_col:\n    g = sns.FacetGrid(data, col=cols)\n    g = g.map(sns.distplot, \"serum_creatinine\")\n#Not much insights as the distribution looks same ","7505eb02":"#serum_sodium\nfor cols in cat_col:\n    g = sns.FacetGrid(data, col=cols)\n    g = g.map(sns.distplot, \"serum_sodium\")","5c73e846":"#time\nfor cols in cat_col:\n    g = sns.FacetGrid(data, col=cols)\n    g = g.map(sns.distplot, \"time\")","b68e0fbf":"sns.catplot(x='DEATH_EVENT',y='age',data=data,kind='box',hue='sex', col='high_blood_pressure')","439bf930":"sns.catplot(x='DEATH_EVENT',y='creatinine_phosphokinase',data=data,kind='box',hue='sex', col='high_blood_pressure')","ff13ac7e":"sns.catplot(x='DEATH_EVENT',y='ejection_fraction',data=data,kind='box',hue='sex', col='high_blood_pressure')","88808747":"sns.catplot(x='DEATH_EVENT',y='platelets',data=data,kind='box',hue='sex', col='high_blood_pressure')","4e74bbfa":"sns.catplot(x='DEATH_EVENT',y='serum_creatinine',data=data,kind='box',hue='sex', col='high_blood_pressure')","8f057852":"sns.catplot(x='DEATH_EVENT',y='serum_sodium',data=data,kind='box',hue='sex', col='high_blood_pressure')","b0b6d846":"sns.catplot(x='DEATH_EVENT',y='time',data=data,kind='box',hue='sex', col='high_blood_pressure')","68e9681c":"features = num_col\n\n# Detect observations with more than one outlier\ndef outlier_hunt(df):\n    \"\"\"\n    Takes a dataframe df of features and returns a list of the indices\n    corresponding to the observations containing more than 2 outliers. \n    \"\"\"\n    outlier_indices = []\n    \n    # iterate over features(columns)\n    for col in df.columns.tolist():\n        print(\"col\", col)\n        # 1st quartile (25%)\n        Q1 = np.percentile(df[col], 25)\n        print(\"Q1\", Q1)\n        \n        # 3rd quartile (75%)\n        Q3 = np.percentile(df[col],75)\n        print(\"Q3\", Q3)\n        \n        # Interquartile rrange (IQR)\n        IQR = Q3 - Q1\n        #print(\"IQR\", IQR)\n        # outlier step\n        outlier_step = 1.5 * IQR\n        print(\"outlier_step\", outlier_step)\n        \n        # Determine a list of indices of outliers for feature col\n        outlier_list_col = df[(df[col] < Q1 - outlier_step) | (df[col] > Q3 + outlier_step )].index\n        \n        # append the found outlier indices for col to the list of outlier indices \n        outlier_indices.extend(outlier_list_col)\n        \n    # select observations containing more than 2 outliers\n    outlier_indices = Counter(outlier_indices)        \n    multiple_outliers = list( k for k, v in outlier_indices.items() if v > 2 )\n    \n    #print(\"outlier_indices\",outlier_indices)\n    return multiple_outliers   \n\nprint('The dataset contains %d observations with more than 2 outliers' %(len(outlier_hunt(data[features]))))\n","4812969a":"from sklearn.model_selection import train_test_split, cross_val_predict,cross_validate\nFeatures = ['time','ejection_fraction','serum_creatinine']\nx = data[Features]\ny = data[\"DEATH_EVENT\"]\n\n# Train Test split\ntrain_x, test_x,train_y,test_y = train_test_split(x,y, test_size=0.2, random_state=2)\n","a6d75f74":"from sklearn.model_selection import GridSearchCV\nfrom xgboost import XGBClassifier","8b586064":"### Gridsearch for XGB starts #### \nparam_test1 = {\n 'max_depth':[3,5,6,10],\n 'min_child_weight':[3,5,10],\n 'gamma':[0.0, 0.1, 0.2, 0.3, 0.4],\n# 'reg_alpha':[1e-5, 1e-2, 0.1, 1, 10],\n 'subsample':[i\/100.0 for i in range(75,90,5)],\n 'colsample_bytree':[i\/100.0 for i in range(75,90,5)]\n}\n#Creating the classifier\nmodel_xg = XGBClassifier(random_state=2)\ngrid_search = GridSearchCV(model_xg, param_grid=param_test1, cv=5, scoring='recall')\ngrid_search.fit(train_x, train_y)\n\n# make predictions for test data\ny_pred = grid_search.predict(test_x)\npredictions = [round(value) for value in y_pred]","242bb257":"from sklearn.metrics import accuracy_score, confusion_matrix\naccuracy = accuracy_score(test_y, predictions)\nprint(\"XGB Accuracy: %.2f%%\" % (accuracy * 100.0))","bf743f15":"###### confusion matrix  starts ######\ncm_xgb = confusion_matrix(test_y,predictions) \nnames = np.unique(predictions)\nsns.heatmap(cm_xgb, square=True, annot=True, cbar=False,xticklabels=names, yticklabels=names, cmap=\"YlGnBu\" ,fmt='g')\n\nplt.xlabel('Truth')\nplt.ylabel('Predicted')\n###### Confusion matrix ends ########","eb2d2c0c":"from sklearn.neighbors import KNeighborsClassifier\nMisclassified_sample = []\nfor i in range(1, 50):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(train_x,train_y)\n    pred_i = knn.predict(test_x)\n    Misclassified_sample.append((test_y != pred_i).sum())\nprint(\"Misclassified_sample = \", Misclassified_sample)\n","f3029659":"KNN_classifier = KNeighborsClassifier(n_neighbors=11)\n\n# Fitting the values fo X and Y\nKNN_classifier.fit(train_x, train_y)\n\n#Predicting the test values with Model\nprediction =  KNN_classifier.predict(test_x)","b7799777":"#calculating the accuracy\naccuracy_score = accuracy_score(test_y,prediction)\nprint(\"accuracy_score KNN=11 :\",accuracy_score)","cbe75be7":"###### confusion matrix  starts ######\nfrom sklearn.metrics import accuracy_score, confusion_matrix\ncm_knn = confusion_matrix(test_y,prediction) \nnames = np.unique(prediction)\nsns.heatmap(cm_knn, square=True, annot=True, cbar=False,xticklabels=names, yticklabels=names, cmap=\"YlGnBu\" ,fmt='g')\nplt.xlabel('Truth')\nplt.ylabel('Predicted')\n###### Confusion matrix ends ########","32e688a4":"#print misclassified values\nprint(\"Misclassified values for Knn=11:  %d\" % (test_y != prediction).sum())\n","2e28f1eb":"I will use XGBoost to predict.","32c42e45":"Outlier detection and removal","96f3caac":"Univariate Analysis","6537b6d1":"Catplot of DEATH_EVENT+age+sex+HBP for all numericl variables with Type = BOX plot ","c525a702":"KNN","6b1941fc":"* Smoking females have higher probability of having death event irrespective of having anaemia or not than male\n* Non-smoking male\/female having anaemia have equal chances of death event\n* Non-smoking male\/female having no anaemia - male have higher chances of death event than females","6a7e5e11":"* Age of died (55-75) is more than who are alive(50-66)\n* Not much diff for creatinine_phosphokinase in died vs alive\n* Died : ejection_fraction (25-40) was less than alive(35-45) \n* Died : platelets-(200000-310000) is slightly higher than alive (210000-300000)\n* Died : serum_creatinine (1.6-2) higher than alive (1-1.1)\n* Died : serum_sodium (132-138) lower than alive (135-140)\n* Died : time (25-100) way lower than alive (100-210)","9caca887":"Higher values of anemia & High blood pressure means higher death probability.\nSmoking , diabetes & sex have not much effect on death event.","6e3bbac9":"Top three variables by correlation : time (-ve correlation), serum_creatinine (+ve) &\nejection_fraction (-ve)","d1739164":"Lowest number of mis-classified samples is for K=11","fb2e4aa7":"32.1% died, 32.1% smoke,35.1% are female, \n35.1% have HBP,41.8% have diabetes, 43.1% have anaemia\n","a9ba1717":"Not much insights as the distribution looks same ","40ade2d8":"Conclusion : We achieved 95% accuracy with K Nearest Neignbours !!\n\nPlease upvote if you liked my Kernel","d48db463":"We will use only top three columns which have highest correlation with the target variable\n* time (-ve correlation), serum_creatinine (+ve) & ejection_fraction (-ve)  \n","b87aeb17":"\nNo Missing values\n","05330739":"No outliers > 2, hence no need to drop any columns","d71c0ce6":"Calculate Accuracy","5d4ee980":"* Smoking females have higher probability of having death event irrespective of having HBP or not than male\n* Non-smoking male having HBP have lesser chances of death event than nons moking-females\n* Non-smoking male having no HBP have higher chances of death event than non-smoking females with no HBP\n","0fb810c2":"* Non-diabetic male\/female - Irrespective of having anemia or not male have higher chances of death event than females\n* diabetic male\/female - female with no anaemia have lesser chance of death event than males with anaemia\n* diabetic male\/female - female with anaemia have higher chance of death event than males with anaemia \n","02a224da":"* Analyse Numerical variables\n* #num_col = ['age', 'creatinine_phosphokinase', 'ejection_fraction','platelets','serum_creatinine','serum_sodium','time']","87221011":"* Female: Death Event Probability \n* Non-smoking females with anaemia have higher death probablity than non-smoking females with No anaemia \n* smoking females with anaemia have higher death probability than smoking females with No anaemia \n* Male: Death Event Probability \n* Non-smoking males with anaemia have higher death probablity than non-smoking males with No anaemia \n* smoking males with anaemia have higher death probability than smoking males with No anaemia \n","2147f4f9":"* Female: Death Event Probability \n* Non-smoking females with HBP have higher death probablity than non-smoking females with No HBP. \n* smoking females with HBP have lesser death probability  than smoking females with No HBP. \n* Male: Death Event Probability. \n* Non-smoking males with HBP have lesser death probablity than non-smoking males with No HBP. \n* smoking males with HBP have higher death probability  than smoking males with No HBP. ","1d33ef66":"* Female: Death Event Probability \n* Non-smoking females with diabetes have higher death probablity than non-smoking females with No diabetes \n* smoking females with diabetes have higher death probability  than smoking females with No diabetes \n* Male: Death Event Probability \n* Non-smoking males with diabetes have lesser death probablity than non-smoking males with No diabetes \n* smoking males with diabetes have higher death probability  than smoking males with No diabetes "}}