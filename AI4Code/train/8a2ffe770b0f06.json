{"cell_type":{"64b65b4a":"code","efee08d6":"code","7bc60dc4":"code","f16d4526":"code","f044149b":"code","1a831929":"code","fb1ac937":"code","c0de33ac":"code","c7fea84c":"code","0a630b51":"code","81d94e52":"code","c6d48c44":"code","41c20f83":"code","7586dd2a":"code","8ec5388b":"code","13c9a547":"code","aec354e3":"code","2aa6d20a":"code","038e0206":"code","8537eee5":"code","652fda5d":"code","75b3190d":"code","ecbf62f8":"code","0d315c41":"code","95c52ca8":"code","491782d8":"code","62417514":"code","e8234cd3":"code","54e22c7a":"code","1ec4bdd8":"code","333d39b9":"code","47eb05a0":"code","2b392adc":"code","e9d438ad":"code","cdb35c2d":"code","1a38200d":"code","13ccedec":"code","54ef9633":"code","66d9b54b":"code","bb6ccdac":"code","82e325a1":"code","0891f497":"code","d326f32d":"code","9bbba013":"code","ff7b7092":"code","a701c091":"code","eddd4eac":"code","63af92a1":"code","8c50665d":"code","268afd4c":"code","7643a270":"code","595c8567":"code","5a217790":"code","2866b1c3":"code","1aa7e9ea":"code","0327e68b":"code","ffcea750":"code","9df83f7e":"code","0bb72a54":"code","309c13d7":"code","003f464e":"code","7af2b7b7":"code","be1c3663":"code","237303f8":"code","e9877cab":"code","88c34ddc":"code","e35e9c3f":"code","be30cd10":"code","85a85b2b":"code","4f73568e":"code","edb569a2":"code","8648e0a6":"code","f265cb97":"code","f8e053e8":"code","10837243":"markdown","675445a6":"markdown","514717f9":"markdown","a8e2534b":"markdown","03db1359":"markdown","52581353":"markdown","ada99b5d":"markdown","eafadcce":"markdown","836591f5":"markdown","08c43866":"markdown","68634990":"markdown","abf3013f":"markdown","c2788d4f":"markdown","4db75a21":"markdown","6667df16":"markdown","ef554ec2":"markdown","fd4c2234":"markdown","a4bc9487":"markdown","6e01449a":"markdown","45289911":"markdown","49dc863b":"markdown","16957706":"markdown","c6500d9b":"markdown","502042fa":"markdown","9a39b03b":"markdown","23ce9f73":"markdown","1358d927":"markdown","03174abe":"markdown","4d58cd91":"markdown","d82e19ce":"markdown","f1627280":"markdown","4167c83a":"markdown","3514fdb0":"markdown","f7f90c5f":"markdown","d4117542":"markdown","2a844758":"markdown","e8462386":"markdown","becae26f":"markdown","6f3c3143":"markdown","955bc2a9":"markdown","b66b9732":"markdown","30aa0a47":"markdown","32dde43d":"markdown","4ee7cc77":"markdown","a5ea9247":"markdown","bce5fa9b":"markdown","b35d981e":"markdown","c7bc41bd":"markdown","8dce29a6":"markdown","9e827291":"markdown","58bc2344":"markdown","bce55c22":"markdown","7b874543":"markdown","940016d9":"markdown","88c8f24e":"markdown","34933cbc":"markdown","6b34125b":"markdown","1f1c9236":"markdown","c420be10":"markdown","ab5e188f":"markdown","20719ebd":"markdown","619769c4":"markdown","748f119a":"markdown","dc08e333":"markdown","574c1c44":"markdown","3d6982e0":"markdown","8bf81cb5":"markdown","38a9328f":"markdown","a50959f8":"markdown","20b6d657":"markdown","9d93dc60":"markdown","98a26586":"markdown","709bee11":"markdown","9d4620ff":"markdown","a814ddfa":"markdown","d83d4554":"markdown","3c54c057":"markdown","e0400d31":"markdown","32d7b771":"markdown","30d61cd9":"markdown","e1b10b29":"markdown"},"source":{"64b65b4a":"#Data Analysis & Data wrangling\nimport numpy as np\nimport pandas as pd\nimport missingno as mn\nfrom collections import Counter\n\n#Visualization\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style\nimport seaborn as sns\n%matplotlib inline\n\n# setting up plot style \nsns.set_context(\"paper\")\nstyle.use('fivethirtyeight')\n\n# machine learning\nfrom sklearn.preprocessing import OneHotEncoder, LabelEncoder\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier","efee08d6":"import warnings\nwarnings.filterwarnings('ignore')","7bc60dc4":"\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f16d4526":"#Importing the input files\ntitanic_train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntitanic_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","f044149b":"titanic_train.head()","1a831929":"titanic_test.head()","fb1ac937":"#Combining the two dataframes for later use\n\ncombined=titanic_train.append(titanic_test)","c0de33ac":"# Database dimension\nprint(\"Database dimension : \")\nprint(\"Database dimension - titanic_train     :\",titanic_train.shape)\nprint(\"Database dimension - titanic_test      :\",titanic_test.shape)\nprint(\"Database dimension - combined          :\",combined.shape)\n\nprint('\\n')\n\n#Database size\nprint(\"Database size : \")\nprint(\"Database size - titanic_train          :\",titanic_train.size)\nprint(\"Database size - titanic_test           :\",titanic_test.size)\nprint(\"Database size - combined               :\",combined.size)","c7fea84c":"#Database column types\nprint(\"Titanic Train Dataset Info : \")\nprint(titanic_train.info())\nprint(\"_\"* 40)\nprint(\"Titanic Test Dataset Info : \")\nprint(titanic_test.info())","0a630b51":"# Checking the numerical variables in train and test data set\ntitanic_train.describe()","81d94e52":"mn.bar(titanic_train)","c6d48c44":"#Column wise null values in train data set \n#titanic_train.isnull().sum()\nnull_train_perc = pd.DataFrame((titanic_train.isnull().sum())*100\/titanic_train.shape[0]).reset_index()\nnull_train_perc.columns = ['Column Name', 'Null Values Percentage']\nnull_train_value = pd.DataFrame(titanic_train.isnull().sum()).reset_index()\nnull_train_value.columns = ['Column Name', 'Null Values']\nnull_train = pd.merge(null_train_value, null_train_perc, on='Column Name')\nnull_train","41c20f83":"mn.bar(titanic_test)","7586dd2a":"#column wise null values in test data set\nnull_test_perc = pd.DataFrame((titanic_test.isnull().sum())*100\/titanic_test.shape[0]).reset_index()\nnull_test_perc.columns = ['Column Name', 'Null Values Percentage']\nnull_test_value = pd.DataFrame(titanic_test.isnull().sum()).reset_index()\nnull_test_value.columns = ['Column Name', 'Null Values']\nnull_test = pd.merge(null_test_value, null_test_perc, on='Column Name')\nnull_test","8ec5388b":"# checking the correlation among the numeric variables\nplt.figure(figsize = (8,6))\nax= sns.heatmap(titanic_train.corr(), annot = True, cmap=\"RdYlGn\",linewidth =1)\nplt.show()","13c9a547":"sns.countplot(titanic_train['Survived'], palette = 'husl')\nplt.show()","aec354e3":"titanic_train['Survived'].value_counts(normalize=True)","2aa6d20a":"ax = sns.FacetGrid(titanic_train, col='Survived',height = 6, aspect =0.5)\nax.map(sns.distplot, \"Age\")\nplt.show()","038e0206":"ax = sns.kdeplot(titanic_train[\"Age\"][(titanic_train[\"Survived\"] == 0) & (titanic_train[\"Age\"].notnull())], color=\"Red\", shade = True)\nax = sns.kdeplot(titanic_train[\"Age\"][(titanic_train[\"Survived\"] == 1) & (titanic_train[\"Age\"].notnull())], ax =ax, color=\"Green\", shade= True)\nax.set_xlabel(\"Age\")\nax.set_ylabel(\"Frequency\")\nax = ax.legend([\"Not Survived\",\"Survived\"])","8537eee5":"# Overall age distribution of combined test & train database\nax = sns.distplot(combined[\"Age\"], color=\"purple\", label=\"Skewness : %.2f\"%(combined[\"Age\"].skew()))\nax = ax.legend(loc=\"best\")\nplt.show()","652fda5d":"# Overall Fare distribution of combined test & train database\nplt.figure(figsize=(16,6))\nplt.subplot(1,2,1)\nax = sns.distplot(combined[\"Fare\"], color=\"green\", label=\"Skewness : %.2f\"%(combined[\"Fare\"].skew()))\nax = ax.legend(loc=\"best\")\nplt.subplot(1,2,2)\nsns.boxplot(combined[\"Fare\"],color=\"green\")\nplt.show()","75b3190d":"ax = sns.FacetGrid(titanic_train, col='Survived',height = 6, aspect =0.5)\nax.map(sns.distplot, \"Fare\")\nplt.show()","ecbf62f8":"ax = sns.kdeplot(combined[\"Fare\"][(combined[\"Survived\"] == 0) & (combined[\"Fare\"].notnull())], color=\"Red\", shade = True)\nax = sns.kdeplot(combined[\"Fare\"][(combined[\"Survived\"] == 1) & (combined[\"Fare\"].notnull())], ax =ax, color=\"Green\", shade= True)\nax.set_xlabel(\"Age\")\nax.set_ylabel(\"Frequency\")\nax = ax.legend([\"Not Survived\",\"Survived\"])","0d315c41":"plt.figure(figsize = (10,6))\nsns.barplot(x=\"Parch\", y=\"Survived\",data = titanic_train,palette=\"Set2\")\nplt.ylabel(\"Survival Probability\")\nplt.show()","95c52ca8":"plt.figure(figsize = (10,6))\nsns.barplot(x=\"SibSp\", y=\"Survived\",data = titanic_train,palette=\"husl\")\nplt.ylabel(\"Survival Probability\")\nplt.show()","491782d8":"plt.figure(figsize = (15,6))\nplt.subplot(1,2,1)\nsns.barplot(x=\"Sex\", y=\"Survived\",data = titanic_train,palette=\"Set2\")\nplt.ylabel(\"Survival Probability\")\nplt.subplot(1,2,2)\nsns.countplot(\"Sex\",data = titanic_train,palette=\"Set2\")\nplt.show()","62417514":"titanic_train[[\"Sex\",\"Survived\"]].groupby('Sex').agg({\"mean\",\"count\"})","e8234cd3":"plt.figure(figsize = (18,6))\nplt.subplot(1,3,1)\nsns.barplot(x=\"Pclass\", y=\"Survived\",data = titanic_train,palette=\"muted\")\nplt.ylabel(\"Survival Probability\")\nplt.subplot(1,3,2)\nsns.countplot(\"Pclass\",data = titanic_train,palette=\"muted\")\nplt.subplot(1,3,3)\nsns.barplot(x=\"Pclass\", y=\"Survived\",data = titanic_train,hue = \"Sex\",palette=\"muted\")\nplt.ylabel(\"Survival Probability\")\nplt.show()","54e22c7a":"plt.figure(figsize = (18,6))\nplt.subplot(1,3,1)\nsns.barplot(x=\"Embarked\", y=\"Survived\",data = titanic_train,palette=\"Accent\")\nplt.ylabel(\"Survival Probability\")\nplt.subplot(1,3,2)\nsns.countplot(\"Embarked\",data = titanic_train,palette=\"Accent\")\nplt.subplot(1,3,3)\nsns.barplot(x=\"Embarked\", y=\"Survived\",data = titanic_train,hue = \"Pclass\",palette=\"Accent\")\nplt.ylabel(\"Survival Probability\")\nplt.show()","1ec4bdd8":"ax= sns.FacetGrid(data = titanic_train, row = 'Sex', col = 'Pclass', hue = 'Survived',palette = 'husl',height = 4, aspect = 1.4)\nax.map(sns.kdeplot, 'Age', alpha = .75, shade = True)\nplt.legend()","333d39b9":"##Let us analyze the rows which is missing Fare information\ndisplay(combined[combined.Fare.isnull()])","47eb05a0":"##Let us get fare per person\nfor df in [titanic_train, titanic_test, combined]:\n    df['PeopleInTicket']=df['Ticket'].map(combined['Ticket'].value_counts()) # Getting the unique count of tickets\n    df['FarePerPerson']=df['Fare']\/df['PeopleInTicket'] \n\n##Just take the mean fare for the PORT S and the Pclass & fill it. Remember to consider FarePerPerson and not Fare\nprint('Mean fare for this category: ', titanic_train[(titanic_train.Embarked=='S') & (titanic_train.Pclass==3)]['FarePerPerson'].mean())","2b392adc":"#Imputing the fare based on class and embarked location mean\ntitanic_test.loc[titanic_test.Fare.isnull(), ['Fare','FarePerPerson']] = round(titanic_train[(titanic_train.Embarked=='S')& (titanic_train.Pclass==3)\\\n                                                                          & (titanic_train.PeopleInTicket==1)]['Fare'].mean(),1)\ndisplay(titanic_test[titanic_test.Fare.isnull()]) # As the null value in Fare was only in Test dataset","e9d438ad":"display(combined[combined.Embarked.isnull()])","cdb35c2d":"##Groupby Embarked and check some statistics\ntitanic_train[titanic_train.Pclass==1].groupby(['Embarked',\"Pclass\"]).agg({'FarePerPerson': 'mean', 'Fare': 'mean', 'PassengerId': 'count'})","1a38200d":"# Updating the Embarked location for the two missing values\ntitanic_train.loc[titanic_train.PassengerId==62,'Embarked']=\"C\"\ntitanic_train.loc[titanic_train.PassengerId==830,'Embarked']=\"C\"\ndisplay(titanic_train[titanic_train.Embarked.isnull()])","13ccedec":"titanic_train['Title'], titanic_test['Title'] = [df.Name.str.extract(' ([A-Za-z]+)\\.', expand=False) for df in [titanic_train, titanic_test]]","54ef9633":"#Extracting the statistics of Title on Train dataset\ntitanic_train.groupby(['Title', 'Pclass'])['Age'].agg(['mean', 'count'])","66d9b54b":"TitleDict = {\"Capt\": \"Officer\",\"Col\": \"Officer\",\"Major\": \"Officer\",\"Jonkheer\": \"Royalty\", \\\n             \"Don\": \"Royalty\", \"Sir\" : \"Royalty\",\"Dr\": \"Royalty\",\"Rev\": \"Royalty\", \\\n             \"Countess\":\"Royalty\", \"Mme\": \"Mrs\", \"Mlle\": \"Miss\", \"Ms\": \"Mrs\",\"Mr\" : \"Mr\", \\\n             \"Mrs\" : \"Mrs\",\"Miss\" : \"Miss\",\"Master\" : \"Master\",\"Lady\" : \"Royalty\"}","bb6ccdac":"titanic_train['Title'], titanic_test['Title'] = [df.Title.map(TitleDict) for df in [titanic_train, titanic_test]]\n\n##Let us now reprint the groups\ntitanic_train.groupby(['Title', 'Pclass'])['Age'].agg(['mean', 'count'])","82e325a1":"# Checking for Master Title with Age missing\ndisplay(combined[(combined.Age.isnull()) & (combined.Name.str.contains('Master'))])","0891f497":"print(\"Average age for Masters in Pclass 3 : \", round(titanic_train[titanic_train.Name.str.contains('Master')]['Age'].mean(),2))\nprint(\"Maximum age for Masters in Pclass 3 : \", round(combined[combined.Name.str.contains('Master')]['Age'].max(),2))","d326f32d":"#Assigning the max value to the age of passenger with title Master and travelling alone\ntitanic_test.loc[titanic_test.PassengerId==1231,'Age']=14","9bbba013":"for df in [titanic_train, titanic_test]:\n    df.loc[(df.Title=='Miss') & (df.Parch!=0) & (df.PeopleInTicket>1), 'Title']=\"FemaleChild\"\n\n# Extracting the statistics\nprint(titanic_train.groupby(['Pclass','Sex','Title'])['Age'].agg({'mean', 'median', 'count'}))\nprint(\"_\"*60)\nprint(titanic_test.groupby(['Pclass','Sex','Title'])['Age'].agg({'mean', 'median', 'count'}))\n    ","ff7b7092":"# Checking female child with missing age\n\ndisplay(titanic_train[(titanic_train.Age.isnull()) & (titanic_train.Title=='FemaleChild')])\ndisplay(titanic_test[(titanic_test.Age.isnull()) & (titanic_test.Title=='FemaleChild')])","a701c091":"# Creating a lookup table to fill the missing age values\ngrp = titanic_train.groupby(['Pclass','Sex','Title'])['Age'].mean().reset_index()[['Sex', 'Pclass', 'Title', 'Age']]\ngrp","eddd4eac":"# Upfating the missing age based on above lookup table\ndef fill_age(x):\n    return grp[(grp.Pclass==x.Pclass)&(grp.Sex==x.Sex)&(grp.Title==x.Title)]['Age'].values[0]\ntitanic_train['Age'], titanic_test['Age'] = [df.apply(lambda x: fill_age(x) if np.isnan(x['Age']) else x['Age'], axis=1) for df in [titanic_train, titanic_test]]","63af92a1":"# Checking to see if any null value exists\nprint(titanic_train.Age.isnull().sum())\nprint(\"_\"*50)\nprint(titanic_test.Age.isnull().sum())","8c50665d":"#Function to identify outliers\ndef outliers(df, n, features):\n    outlier_indices = []\n    for col in features:\n        Q1 = np.percentile(df[col], 25) # First quartile range\n        Q3 = np.percentile(df[col],75) # Third quartile range\n        IQR = Q3 - Q1\n        outlier_step = 1.5 * IQR\n        outlier_list_col = df[(df[col] < Q1 - outlier_step) | (df[col] > Q3 + outlier_step )].index\n        outlier_indices.extend(outlier_list_col)\n    outlier_indices = Counter(outlier_indices)        \n    multiple_outliers = list( k for k, v in outlier_indices.items() if v > n )\n    return multiple_outliers  ","268afd4c":"# Extracting the outliers IDs\nOutliers_id = outliers(titanic_train, 2, [\"Age\", \"SibSp\", \"Parch\", \"Fare\"])\nprint(Outliers_id,'\\n')\nprint(titanic_train.loc[Outliers_id])","7643a270":"#Dropping the outliers\ntitanic_train = titanic_train.drop(Outliers_id, axis = 0).reset_index(drop=True)\ntitanic_train.shape","595c8567":"plt.figure(figsize = (12,6))\nplt.subplot(1,2,1)\nsns.countplot(titanic_train['Title'], palette = 'Set2')\nplt.subplot(1,2,2)\nsns.barplot(x= \"Title\",y = \"Survived\", data = titanic_train, palette = \"Set2\")\nplt.ylabel(\"Survival Probability\")\nplt.show()","5a217790":"# Checking if test dataset has any null values for Title\ndisplay(titanic_test[(titanic_test.Title.isnull())])","2866b1c3":"titanic_test.loc[titanic_test.PassengerId==1306,'Title']=\"Royalty\"","1aa7e9ea":"for dataset in [titanic_train,titanic_test]:\n    dataset['FamilySize'] = dataset['SibSp'] + dataset['Parch'] + 1\ntitanic_train.head(3)    ","0327e68b":"for dataset in [titanic_train,titanic_test]:\n    dataset['IsAlone'] = 0\n    dataset.loc[dataset['FamilySize'] == 1, 'IsAlone'] = 1\ntitanic_train.head(3)  ","ffcea750":"for dataset in [titanic_train,titanic_test]:\n    dataset[\"Cabin\"] = pd.Series([i[0] if not pd.isnull(i) else 'X' for i in dataset['Cabin'] ])\ntitanic_train[\"Cabin\"].value_counts()    ","9df83f7e":"plt.figure(figsize = (12,5))\nplt.subplot(1,2,1)\nsns.countplot(titanic_train['Cabin'], palette = 'husl',order=['A','B','C','D','E','F','G','T','X'])\nplt.subplot(1,2,2)\nsns.barplot(x= \"Cabin\",y = \"Survived\", data = titanic_train, palette = \"husl\",order=['A','B','C','D','E','F','G','T','X'])\nplt.ylabel(\"Survival Probability\")\nplt.show()","0bb72a54":"for dataset in [titanic_train,titanic_test]:\n    dataset['Age'] = dataset['Age'].astype(int)\n    dataset.loc[ dataset['Age'] <= 16, 'Age'] = 0\n    dataset.loc[(dataset['Age'] > 16) & (dataset['Age'] <= 32), 'Age'] = 1\n    dataset.loc[(dataset['Age'] > 32) & (dataset['Age'] <= 48), 'Age'] = 2\n    dataset.loc[(dataset['Age'] > 48) & (dataset['Age'] <= 64), 'Age'] = 3\n    dataset.loc[ dataset['Age'] > 64, 'Age']=4","309c13d7":"# plotting the data based on new age classification\nplt.figure(figsize = (12,5))\nplt.subplot(1,2,1)\nsns.countplot(titanic_train['Age'], palette = 'husl')\nplt.subplot(1,2,2)\nsns.barplot(x= \"Age\",y = \"Survived\", data = titanic_train, palette = \"husl\")\nplt.ylabel(\"Survival Probability\")\nplt.show()","003f464e":"for dataset in [titanic_train,titanic_test]:\n    dataset.loc[ dataset['Fare'] <= 7.91, 'Fare'] = 0\n    dataset.loc[(dataset['Fare'] > 7.91) & (dataset['Fare'] <= 14.454), 'Fare'] = 1\n    dataset.loc[(dataset['Fare'] > 14.454) & (dataset['Fare'] <= 31), 'Fare']   = 2\n    dataset.loc[ dataset['Fare'] > 31, 'Fare'] = 3\n    dataset['Fare'] = dataset['Fare'].astype(int)    ","7af2b7b7":"# plotting the data based on new age classification\nplt.figure(figsize = (12,5))\nplt.subplot(1,2,1)\nsns.countplot(titanic_train['Fare'], palette = 'husl')\nplt.subplot(1,2,2)\nsns.barplot(x= \"Fare\",y = \"Survived\", data = titanic_train, palette = \"husl\")\nplt.ylabel(\"Survival Probability\")\nplt.show()","be1c3663":"label = LabelEncoder()\nfor dataset in [titanic_train,titanic_test]:    \n    dataset['Sex_Code'] = label.fit_transform(dataset['Sex'])\n    dataset['Embarked_Code'] = label.fit_transform(dataset['Embarked'])\n    dataset['Title_Code'] = label.fit_transform(dataset['Title'])\n    dataset['Cabin_Code'] = label.fit_transform(dataset['Cabin'])\n","237303f8":"#After Label Encoding\ndisplay(titanic_train.head(3))\ndisplay(titanic_test.head(3))","e9877cab":"Features = [\"Survived\",\"Pclass\",\"Age\",\"Fare\",\"FamilySize\",\"Sex_Code\",\"Embarked_Code\",\"Title_Code\",\"Cabin_Code\"]\nFeatures_test = [\"Pclass\",\"Age\",\"Fare\",\"FamilySize\",\"Sex_Code\",\"Embarked_Code\",\"Title_Code\",\"Cabin_Code\"]\ntrain_data = titanic_train[Features]\ntrain_data.head()","88c34ddc":"# Checking the correlation of the features\nplt.figure(figsize = (8,6))\nax= sns.heatmap(train_data.corr(), annot = True, cmap=\"RdYlGn\",linewidth =1)\nplt.show()","e35e9c3f":"y_train = train_data[\"Survived\"]\nX_train = train_data.drop(['Survived'], axis=1)\nX_test = titanic_test[Features_test]\nprint(X_train.shape, y_train.shape, X_test.shape)","be30cd10":"# Logistic Regression\n\nlogreg = LogisticRegression()\nlogreg.fit(X_train, y_train)\nY_pred = logreg.predict(X_test)\nacc_log = round(logreg.score(X_train, y_train) * 100, 2)\nprint (\"Accuracy of the Logistic Regression model : \",acc_log)","85a85b2b":"#Feature importance\ncoeff = pd.DataFrame(X_train.columns)\ncoeff.columns = ['Features_test']\ncoeff[\"Correlation\"] = pd.Series(logreg.coef_[0])\ncoeff.sort_values(by='Correlation', ascending=False)","4f73568e":"# Random Forest\n\nrandom_forest = RandomForestClassifier(n_estimators=100, random_state=22)\nrandom_forest.fit(X_train, y_train)\ny_pred = random_forest.predict(X_test)\nrandom_forest.score(X_train, y_train)\nacc_random_forest = round(random_forest.score(X_train, y_train) * 100, 2)\nprint (\"Accuracy of the Random Forest model : \",acc_random_forest)","edb569a2":"feature_imp = pd.Series(random_forest.feature_importances_,index=Features_test).sort_values(ascending=False)\nfeature_imp","8648e0a6":"sns.barplot(feature_imp.values,feature_imp.index,palette='dark')","f265cb97":"submission = pd.DataFrame({\n        \"PassengerId\": titanic_test[\"PassengerId\"],\n        \"Survived\": y_pred})","f8e053e8":"submission_titanic.to_csv(\"submission.csv\",index=False)","10837243":"<a id=\"data\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            1.2 Data Dictionary :\n            <\/span>   \n        <\/font>    \n<\/h3>","675445a6":"![](https:\/\/i.pinimg.com\/originals\/56\/e7\/14\/56e7141f52bb5e4636fd30f52e98e7f2.jpg)","514717f9":"<p>\n    <span style='font-family:Georgia'>\n      We will fill the missing Title as Mrs. \n    <\/span>\n<\/p>","a8e2534b":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        We have successfully removed 13 lines which contained Outliers. This will improve the data quality of the model. \n    <\/span>    \n<\/div>","03db1359":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>Train data set contains information for 891 passengers, where as test data set contains information for 418 passenger. The list is ~ 59% of the total passenger and crew list who travelled in Titanic.\n    <\/span>    \n<\/div>","52581353":"<a id=\"family\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n           6.2 Family Size Feature\n            <\/span>   \n        <\/font>    \n<\/h3>","ada99b5d":"<a id=\"catvar\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            4.2 Categorical Variables Analysis\n            <\/span>   \n        <\/font>    \n<\/h3>","eafadcce":"<a id=\"modelbuilding\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            7. Model Building\n            <\/span>   \n        <\/font>    \n<\/h2>","836591f5":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        <ul>\n            <li> Pclass is negatively correlated with Fare, which means Fare is higher for Pclass = 1 i.e. Upper class. We need to consider PClass when we impute Fare <\/li>\n            <li> Survival of passengers are again correlated with PClass. Negative value suggested Upper class passengers had higher chances of survival. This may be due to their cabin being located in upper decks from where access to lifeboats were relatively easier.<\/li>       \n        <\/ul>\n         There may be other factors which impact survival, which will be analyzed later after LabelEnconding the categorical variables.     \n    <\/span>    \n<\/div>","08c43866":"<a id=\"modelbuild\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n           7.3 Model Building\n            <\/span>   \n        <\/font>    \n<\/h3>","68634990":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Most of the people have boarded from Southampton, followed by Cherbourg and then Queenstown. The survival rate of passengers from Cherbourg is much higher than Queenstwon or Southampton. Standard distribution is very high for passengers who have boarded from Queenstown and resided in Pclass 1 and 2. \n    <\/span>    \n<\/div>","abf3013f":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        <ul>\n            <li> Middle class men with age between 20 to 40 had higher mortality.<\/li>\n            <li> There is a sharp peak in mortality rate for lower class men with age between 20 to 40<\/li>\n            <li> A higher mortality rate can be seen in upper class men with age over 50 year. <\/li>\n            <li> Relatively higher mortality rate for females with age above 40 in middle and lower class <\/li>           \n        <\/ul>\n    <\/span>    \n<\/div>","c2788d4f":"<a id=\"titlefeature\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n           6.1 Title Feature\n            <\/span>   \n        <\/font>    \n<\/h3>","4db75a21":"<a id=\"ageimpute\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            5.3 Age Imputation\n            <\/span>   \n        <\/font>    \n<\/h3>","6667df16":"<a id=\"featureengineering\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            6. Feature Engineering\n            <\/span>   \n        <\/font>    \n<\/h2>","ef554ec2":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.3 Embarked\n            <\/span>   \n        <\/font>    \n<\/h4>","fd4c2234":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        It clearly shows that passengers with low fare had a higher probability of not surviving\n    <\/span>    \n<\/div>","a4bc9487":"<a id=\"farebin\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n           6.5 Fare Binning\n            <\/span>   \n        <\/font>    \n<\/h3>","6e01449a":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            7.3.2. Random Forest \n            <\/span>   \n        <\/font>    \n<\/h4>","45289911":"<a id=\"finalfeature\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n           7.2 Selecting Features for Final Model\n            <\/span>   \n        <\/font>    \n<\/h3>","49dc863b":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Based on the above graph it is evident that children had better chances of survival. Also with age population of 60 to 80, the survival rate decreases\n    <\/span>    \n<\/div>","16957706":"<a id=\"nullcal\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            3.3 Null Value Calculation\n            <\/span>   \n        <\/font>    \n<\/h3>","c6500d9b":"<p>\n    <span style='font-family:Georgia'>\n        Both the passengers are travelling together as their ticket number is same. They have spent roughtly $40 for each ticket and they travelled in PClass=1\n    <\/span>\n<\/p>","502042fa":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n       As Random Forest Model has better accuracy, we will go ahead with Random-Forest Model. \n    <\/span>    \n<\/div>","9a39b03b":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n       As it clearly shows, the survival probability of children with age less than 16 is highest, where as survival probability of higher age people (category 4) is the lowest. \n    <\/span>    \n<\/div>","23ce9f73":"<a id=\"output\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n           7.4 Output Submission\n            <\/span>   \n        <\/font>    \n<\/h3>","1358d927":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Small families have had higher chances of survival compared to alone (Parch =0) or medium (Parch = 3,4) or large (parch = 5,6) families. The standard deviation for Parch = 3 and Parch = 5 are quite high\n    <\/span>    \n<\/div>","03174abe":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.1.6 SibSP\n            <\/span>   \n        <\/font>    \n<\/h4>","4d58cd91":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        In the train dataset, though the count of males are almost double of count of females, but based on survival rate, probability of females surviving is much higher than males (almost 4 times higher). Thus sex will definitely play important factor in the model\n    <\/span>    \n<\/div>","d82e19ce":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Passengers with many sibligs (>2) had less chances of survival. \n    <\/span>    \n<\/div>","f1627280":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            7.3.1 Logistic Regression\n            <\/span>   \n        <\/font>    \n<\/h4>","4167c83a":"<a id=\"featureanalysis\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            4. Feature Analysis\n            <\/span>   \n        <\/font>    \n<\/h2>","3514fdb0":"<a id=\"outlier\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            5.4 Outlier Treatment\n            <\/span>   \n        <\/font>    \n<\/h3>","f7f90c5f":"<a id=\"python\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            2.1 Import Python Libraries:\n            <\/span>   \n        <\/font>    \n<\/h3>","d4117542":"<a id=\"cabin\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n           6.3 Cabin Feature\n            <\/span>   \n        <\/font>    \n<\/h3>","2a844758":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.1.5 Parch\n            <\/span>   \n        <\/font>    \n<\/h4>","e8462386":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.2 PClass\n            <\/span>   \n        <\/font>    \n<\/h4>","becae26f":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Though count of passergers without cabin are more than 3 times of people who have cabin, the survival rate of people with cabin is much higher. This may be due to the fact the upper class people will be in cabin which is located near the top portion of the ship from where access to lifeboat is easier. Cabin will be an important feature for the model building.  \n    <\/span>    \n<\/div>","6f3c3143":"<p>\n    <span style='font-family:Georgia'>\n        Dr and Rev are not exactly Royalty, but as their numbers are very less, for Age imputation, they are clubbed with Royalty\n    <\/span>\n<\/p>","955bc2a9":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        The train dataset mortality rate of 61.6% of the passengers which is close to the total cases of death of 1502 passengers out of 2224 (~67%). Thus train data imbalance to real situation is negligible. \n    <\/span>    \n<\/div>","b66b9732":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        From here we can see that average age of Master is around 5. Average age of Miss is varying from 29 in Pclass1 to 16 in PClass 3\n    <\/span>    \n<\/div>","30aa0a47":"<p>\n    <span style='font-family:Georgia'>\n        Extracting the title from the Name column. This can be a part of feature engineering, but for now we will include here as this will be a key factor in Age imputation method. \n    <\/span>\n<\/p>","32dde43d":"<div class=\"alert alert-block alert-warning\">\n    <span style='font-family:Georgia'>\n        <b>Strategy :<\/b> <br>\n        We cannot simply use median or mode to impute age as we have seen that the passengers are ranging from children to old. We will use SibSp and Parch information to impute age by categorizing passergers accordingly. Also, we will extract the title of the passengers which will indicate the tentative age\/agegroup of the passenger. <br>\n        We will impute the null value in combined file, but based on the information or stats extracted from titanic_train dataset. This process will be followed to prevent the information leakage from test to train data set.\n    <\/span>\n<\/div>\n    ","4ee7cc77":"<a id=\"warning\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            2.2 Supress Warnings:\n            <\/span>   \n        <\/font>    \n<\/h3>","a5ea9247":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Majority of the rows in Cabin column in null value, which may be due to the fact that those passengers were not assigned to a cabin.   \n    <\/span>    \n<\/div>","bce5fa9b":"<a id=\"intro\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            1. Introduction:\n            <\/span>   \n        <\/font>    \n<\/h2>","b35d981e":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        It seems like there are some outliers in the Fare value, which needs to be treated\n    <\/span>    \n<\/div>","c7bc41bd":"<a id=\"inspect\"><\/a>\n<h3 name='libraries'>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            3.2 Inspect Data Frames\n            <\/span>   \n        <\/font>    \n<\/h3>","8dce29a6":"<p>\n    <span style='font-family:Georgia'>\n        Let's group the titles into distict categories = Mr., Mrs, Master, Miss, Royalty & Officer\n    <\/span>\n<\/p>","9e827291":"<a id=\"import\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            3. Reading & Understanding the data\n            <\/span>   \n        <\/font>    \n<\/h2>","58bc2344":"<p>\n    <span style='font-family:Georgia'>\n       For male child, we have the title Master. But we do not have similar for female children. If we impute age for females without considering this factor, they age mapping will be wrong. We will create Title = Female Child based on Title = Miss, Parch = 0 and PeopleInTicket >0, considering female child will not travel alone without parents. \n    <\/span>\n<\/p>","bce55c22":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.1.2 Survived\n            <\/span>   \n        <\/font>    \n<\/h4>","7b874543":"<p>\n    <span style='font-family:Georgia'>\n      Checking if the person is alone or with a family\n    <\/span>\n<\/p>","940016d9":"<p>\n    <span style='font-family:Georgia'>\n      We have already created the Title feature during the Age imputation method. Let's review the title with survivor status etc. \n    <\/span>\n<\/p>","88c8f24e":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Survival rate of Mrs, Miss, Master and FemaleChild are higher which correlate with actual scenario where female and children were given priority during evacuation. The standard deviation of survival rate of officers seems very high. This may be due to the fact that officers chose to stay at the ship and help coordicate evacution first. Adult males had the least survival rate.   \n    <\/span>    \n<\/div>","34933cbc":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.1.4 Fare\n            <\/span>   \n        <\/font>    \n<\/h4>","6b34125b":"<a id=\"datacleaning\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            5. Data Cleaning\n            <\/span>   \n        <\/font>    \n<\/h2>","1f1c9236":"<a id=\"background\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            1.1 Background :\n            <\/span>   \n        <\/font>    \n<\/h3>","c420be10":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        <b>Numerical Features<\/b> : PassengerId,Age,Fare,SibSp,Parch <br>\n        <b>Categorical Features<\/b> : Pclass,Name,Sex,Embarked \n    <\/span>    \n<\/div>","ab5e188f":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.1.3 Age\n            <\/span>   \n        <\/font>    \n<\/h4>","20719ebd":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Based on the above data, we can say that 8 rows of data where Title is Master is missing age. All are from Pclass = 3. We can replace the Null value with Mean which is around 5.35. This will be applicable except for passenger ID 1231. The passenger's age cannot be imputed with mean value of 5 as the passenger is travelling alone without any Parents or Siblings (Parch and SipSb are 0). We need to impute the age with Max value of Pclass 3, Master title here.\n    <\/span>    \n<\/div>","619769c4":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.1.1 Correlation Matrix\n            <\/span>   \n        <\/font>    \n<\/h4>","748f119a":"<p style=\"text-indent: 25px;\">\n    <span style='font-family:Georgia'>\n        The RMS Titanic sank in the early morning hours of 15 April 1912 in the North Atlantic Ocean, four days into the ship's maiden voyage from Southampton to New York City. The largest ocean liner in service at the time, Titanic had an estimated 2,224 people on board including passengers and crew when she struck an iceberg at around 23:40 (ship's time) on Sunday, 14 April 1912. Her sinking two hours and forty minutes later at 02:20 (ship's time; 05:18 GMT) on Monday, 15 April, resulted in the deaths of 1,502 people, making it one of the deadliest peacetime marine disasters in history.\n        <\/span>\n<\/p>\n<p style=\"text-indent: 25px;\">\n    <span style='font-family:Georgia'>    \n        In accordance with existing practice, Titanic's lifeboat system was designed to ferry passengers to nearby rescue vessels, not to hold everyone on board simultaneously; therefore, with the ship sinking rapidly and help still hours away, there was no safe refuge for many of the passengers and crew. Compounding this, poor management of the evacuation meant many boats were launched before they were completely full. \n        <\/span>\n<\/p>","dc08e333":"<a id=\"input\"><\/a>\n<h3 name='libraries'>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            3.1 Importing the input files\n            <\/span>   \n        <\/font>    \n<\/h3>","574c1c44":"<a id=\"numvar\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            4.1 Numerical Variables Analysis\n            <\/span>   \n        <\/font>    \n<\/h3>","3d6982e0":"<p>\n    <span style='font-family:Georgia'>\n        The analysis will be done on titanic_train data set only\n    <\/span>\n<\/p>","8bf81cb5":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        <b> Cabin <\/b> - has 687 rows which is 77% of the data missing. There is no point trying to fill the data <br>\n        <b> Age <\/b> - has 117 likes which is around 20% of the data missing. Age imputation will be followed in later section <br>\n        <b> embarked <\/b> - has 2 missing values. Data imputation will be followed in later section\n    <\/span>    \n<\/div>","38a9328f":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Age distribution seems to be leaning towards one of the tail end. It may be due to the null values as there is a significant peak at Age =0 for Survivors. Age distribution seems to be different for survivors and non-survivors. Let's map the data without the null values and check if there is any changes in the distribution.  \n    <\/span>    \n<\/div>","a50959f8":"<a id=\"libraries\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            2. Python Libraries:\n            <\/span>   \n        <\/font>    \n<\/h2>","20b6d657":"<a id=\"agebin\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n           6.4 Age Binning\n            <\/span>   \n        <\/font>    \n<\/h3>","9d93dc60":"<a id=\"fareimpute\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            5.1 Fare Imputation\n            <\/span>   \n        <\/font>    \n<\/h3>","98a26586":"<a id=\"embarkimpute\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            5.2. Embarked Imputation\n            <\/span>   \n        <\/font>    \n<\/h3>","709bee11":"<span style='font-family:Georgia'>\n    <table>\n        <tr>\n            <th>Variable<\/th>\n            <th>Key<\/th>\n            <th>Definition<\/th>\n        <\/tr>\n        <tr>\n            <td>survival<\/td>\n            <td>0 = No, 1 = Yes<\/td>\n            <td>Whether the person survived or not<\/td>\n        <\/tr>\n        <tr>\n            <td>pclass<\/td>\n            <td>1 = 1st, 2 = 2nd, 3 = 3rd<\/td>\n            <td>A proxy for socio-economic status (SES)<br>1st = Upper,2nd = Middle,3rd = Lower<\/td>\n        <\/tr>\n        <tr>\n            <td>sex<\/td>\n            <td>male,female<\/td>\n            <td>sex of the passenger<\/td>\n        <\/tr>\n        <tr>\n            <td>Age<\/td>\n            <td>Continuous varivale<\/td>\n            <td>Age in years<\/td>\n        <\/tr>\n        <tr>\n            <td>sibsp<\/td>\n            <td>numeric values<\/td>\n            <td># of siblings \/ spouses aboard the Titanic<br>Sibling = brother, sister, stepbrother, stepsister<br>Spouse = husband, wife<\/td>\n        <\/tr>\n        <tr>\n            <td>parch<\/td>\n            <td>numeric values<\/td>\n            <td># of parents \/ children aboard the Titanic<br> Parent = mother, father <br> Child = daughter, son, stepdaughter, stepson <br>Some children travelled only with a nanny, therefore parch=0 for them<\/td>\n        <\/tr>\n        <tr>\n            <td>ticket<\/td>\n            <td>numeric values<\/td>\n            <td>Ticket number<\/td>\n        <\/tr>\n        <tr>\n            <td>fare<\/td>\n            <td>numeric values<\/td>\n            <td>Passenger fare<\/td>\n        <\/tr>\n        <tr>\n            <td>cabin<\/td>\n            <td>numeric values<\/td>\n            <td>Cabin numberPort of Embarkation<\/td>\n        <\/tr>\n        <tr>\n            <td>embarked<\/td>\n            <td>C = Cherbourg, Q = Queenstown, S = Southampton<\/td>\n            <td>Port of Embarkation<\/td>\n        <\/tr>\n    <\/table>  \n<\/span>\n    ","9d4620ff":"<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            Table of Contents:\n            <\/span>   \n        <\/font>    \n<\/h2>\n<span style='font-family:Georgia'>\n    <ul>\n        <li><a href='#intro'>1. Introduction<\/a><\/li>\n        <ul>\n            <li><a href='#background'>1.1 Background<\/a><\/li>\n            <li><a href='#data'>1.2 Data Dictionary<\/a><\/li>\n        <\/ul>\n        <li><a href='#libraries'>2. Python Libraries<\/a><\/li>\n        <ul>\n            <li><a href='#python'>2.1 Import Python Libraries<\/a><\/li>\n            <li><a href='#warning'>2.2 Supress Warnings<\/a><\/li>\n        <\/ul>\n        <li><a href='#import'>3. Reading & Understanding the data<\/a><\/li>\n        <ul>\n            <li><a href='#import'>3.1 Importing the input files<\/a><\/li>\n            <li><a href='#inspect'>3.2 Inspecting the dataframes<\/a><\/li>\n            <li><a href='#nullcal'>3.3 Null Value Calculation<\/a><\/li>\n        <\/ul>\n        <li><a href='#featureanalysis'>4. Feature Analysis<\/a><\/li>\n        <ul>\n            <li><a href='#numvar'>4.1 Numerical Variables Analysis<\/a><\/li>\n            <li><a href='#catvar'>4.2 Categorical Variables Analysis<\/a><\/li>\n        <\/ul>        \n        <li><a href='#datacleaning'>5. Data Cleaning<\/a><\/li>\n        <ul>\n            <li><a href='#fareimpute'>5.1 Fare Imputation<\/a><\/li>\n            <li><a href='#embarkimpute'>5.2 Embarked Imputation<\/a><\/li>\n            <li><a href='#ageimpute'>5.3 Age Imputation<\/a><\/li>\n            <li><a href='#outlier'>5.4 Outlier Treatment<\/a><\/li>\n        <\/ul> \n        <li><a href='#featureengineering'>6. Feature Engineering<\/a><\/li>\n        <ul>\n            <li><a href='#titlefeature'>6.1 Title Feature<\/a><\/li>\n            <li><a href='#family'>6.2 Family Size Feature<\/a><\/li>\n            <li><a href='#cabin'>6.3 Cabin Feature<\/a><\/li>\n            <li><a href='#agebin'>6.4 Age Binning<\/a><\/li>\n            <li><a href='#farebin'>6.4 Fare Binning<\/a><\/li>\n        <\/ul> \n        <li><a href='#modelbuilding'>7. Model Building<\/a><\/li>\n        <ul>\n            <li><a href='#dataprep'>7.1 Data Preparation<\/a><\/li>\n            <li><a href='#finalfeature'>7.2 Selecting Features for Final Model<\/a><\/li>\n            <li><a href='#modelbuild'>7.3 Model Building<\/a><\/li>\n            <li><a href='#output'>7.4 Output Submission<\/a><\/li>\n        <\/ul>\n    <\/ul>\n<\/span>","a814ddfa":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        We have successfully imputed Fare, Embarked and Age column in both train and test datasets. \n    <\/span>    \n<\/div>","d83d4554":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        The count of Lowerclass passengers are more than double of upper class or middle class passenger. The survival rate of upper class passengers were highest followed by middle and then lower class passenger. The reason may be because upper class passenger cabins were located on top portion of the ship which had easier access to lifeboats. Pclass will be an important feature for model prediction accuracy increase. \n    <\/span>    \n<\/div>","3c54c057":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        From the above table, we can conclude that the passengers embarked from Cherbourg\n    <\/span>    \n<\/div>","e0400d31":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            4.2.1 Sex\n            <\/span>   \n        <\/font>    \n<\/h4>","32d7b771":"<a id=\"dataprep\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n           7.1 Data Preparation\n            <\/span>   \n        <\/font>    \n<\/h3>","30d61cd9":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        <b> Cabin <\/b> - has 327 rows which is 78% of the data missing. There is no point trying to fill the data <br>\n        <b> Age <\/b> - has 86 likes which is around 20.6% of the data missing. Age imputation will be followed in later section <br>\n        <b> Fare <\/b> - has 1 missing value. Data imputation will be followed in later section\n    <\/span>    \n<\/div>","e1b10b29":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n       The higher the fare, the chances of survival goes up significantly.\n    <\/span>    \n<\/div>"}}