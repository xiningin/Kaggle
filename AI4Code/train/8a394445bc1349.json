{"cell_type":{"a8daf201":"code","9292702a":"code","8cde6b78":"code","77f53a08":"code","90ec043d":"code","26a69697":"code","5e97ea49":"code","db3ba938":"code","0c0dc980":"code","72262e4b":"code","bcb2f1a7":"code","38bef37f":"code","d93f9e1f":"code","b5d141ef":"code","2abe1136":"code","dc14d2d2":"code","88ef4e73":"code","89031213":"code","28922e0f":"code","8159726b":"markdown","9ee89c87":"markdown","c1fdbc3b":"markdown"},"source":{"a8daf201":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9292702a":"import pandas as pd\nimport numpy as np\nimport lightgbm as lgb\nfrom sklearn.preprocessing import OneHotEncoder,LabelEncoder\nfrom sklearn.model_selection import KFold, train_test_split\nfrom sklearn.metrics import mean_squared_error\nimport math","8cde6b78":"diam = pd.read_csv(\"..\/input\/diamonds.csv\",index_col=\"Unnamed: 0\")","77f53a08":"onehot = [\"cut\",\"color\",\"clarity\"]","90ec043d":"le = LabelEncoder()\nohe = OneHotEncoder()\nlf = diam[onehot].astype(str).apply(lambda x:le.fit_transform(x))\nsparse = ohe.fit_transform(lf)\nds = pd.DataFrame(sparse.toarray(),index = diam.index)","26a69697":"xdiam = pd.concat([diam,ds],axis=1)","5e97ea49":"xdiam.index = range(len(xdiam))","db3ba938":"f = xdiam.columns","0c0dc980":"f = f[f.isin(onehot)==False].tolist()\nf.remove(\"price\")","72262e4b":"# did I write nmse right?\ndef score(y_true,y_pred):\n    e1 = mean_squared_error(y_true, y_pred)\n    e0 = ((y_true**2).sum())\/len(y_true)\n    nmse = e1\/e0\n    return nmse\n\ndef run_lgb(train_X, train_y, val_X, val_y, params):\n    print(\"lgb\")\n    lgtrain = lgb.Dataset(train_X, label=train_y)\n    lgval = lgb.Dataset(val_X, label=val_y)\n    evals_result = {}\n    model = lgb.train(params, lgtrain, 5000, \n                      valid_sets=[lgtrain, lgval], \n                      early_stopping_rounds=100, \n                      verbose_eval=10, \n                      evals_result=evals_result)\n    return model","bcb2f1a7":"train,test = train_test_split(xdiam,test_size=1000,random_state=42)","38bef37f":"train,valid = train_test_split(train,test_size=1000,random_state=42)\ntrain_X = train[f]\ntrain_y = train[\"price\"]\nval_X = valid[f]\nval_y = valid[\"price\"] \ntest_X = test[f]\ntest_y = test[\"price\"]\n","d93f9e1f":"params = {\n        \"n_jobs\":4,\n        \"num_leaves\":100,\n        \"learning_rate\":0.03,\n        \"verbosity\" : 1\n    }\nparams[\"njob\"] = 4\nparams[\"objective\"] = \"regression\"","b5d141ef":"model = run_lgb(train_X, train_y, val_X, val_y, params)","2abe1136":"pre = model.predict(test_X)","dc14d2d2":"score(test_y,pre)","88ef4e73":"# just_wrote_a_simple_kfold\ndef lgb_kfold(X,y,params,k=10):\n    kf = KFold(n_splits=k)\n    folds = kf.split(X)\n    vp = 0\n    i = 0 \n    xs = 0\n    for train_index,val_index in folds:\n        print(f\"round:{i+1}\")\n        i += 1\n        train_X,train_y = X[train_index],y[train_index]\n        val_X,val_y = X[val_index],y[val_index]\n        lmodel = run_lgb(train_X, train_y, val_X, val_y,params)\n        lp = lmodel.predict(val_X)\n        s = score(val_y,lp)\n        xs += s\n        print(s)\n    \n    vp = vp\/k\n    print(\"average:\"+str(xs\/k))\n    return vp","89031213":"X = np.array(xdiam[f])\ny = xdiam[\"price\"]","28922e0f":"lgb_kfold(X,y,params,k=5)","8159726b":"KFlod:\"Just overfitting pal,don't think too much\"","9ee89c87":"nmse ~0.75 ! I'm so good!\n\n\nno Korra, KFold always tells the truth  \\_(:\u0437\u300d\u2220)\\_","c1fdbc3b":"just playing with data ,literally didn't do anything except run a lightgbm lol"}}