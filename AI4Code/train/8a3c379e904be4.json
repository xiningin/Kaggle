{"cell_type":{"dab59e14":"code","f9afa6ca":"code","14331f14":"code","7cbf3723":"code","d0874ae2":"code","39eabcfe":"code","e251efed":"code","147f6de5":"code","a827d366":"code","059277ee":"code","058fa17c":"code","d56aed2c":"code","477c3585":"code","a8924afe":"code","79639ac3":"code","3f306ca9":"code","6c782d29":"code","c3bc9494":"code","3444f96c":"code","57ebf633":"code","fa14a63f":"code","02d9015f":"code","d88fd8a2":"code","edb1959d":"code","b44f9194":"code","735c8978":"code","2a66caf7":"code","667da10d":"code","ebe80625":"code","bd412be0":"code","a026acda":"code","6fda26aa":"code","f32f9952":"code","a3e1401b":"code","3a453c03":"code","785d8415":"code","9a78ad6f":"code","f74892c4":"code","205a2043":"code","8ca8df97":"code","3dfb18cc":"code","8ee0f0dd":"code","4eb3ca15":"code","a3cd5c70":"code","a480e090":"code","7eebefdd":"code","3dbf3a68":"code","45f0c58a":"code","6914810b":"code","2880e659":"code","7804ff0e":"code","00f51c1c":"code","575bc92e":"code","42ca6964":"code","912485aa":"code","75366b09":"code","6469aa6d":"code","c75b0fef":"code","eaf8528c":"code","171cc529":"code","7d9a14ec":"code","b15d11ce":"code","b1c031cb":"code","5fe637fb":"code","e728e8cc":"code","856ba3cb":"code","5833dbd4":"code","73d14477":"code","e56f1a43":"code","42309f90":"code","bd6a1d70":"code","f6e7ab04":"code","1cd955eb":"code","a150c835":"code","7ac96223":"code","eb25b16b":"code","048a2a50":"code","a7711bd5":"code","0d1e7d1e":"code","6719aaaf":"code","fa8f5742":"code","4a3188ad":"code","25c8a9dc":"code","828ac04b":"code","be632698":"code","263b3ee9":"code","c4587230":"code","4b115917":"code","48e6651e":"code","f4ffae05":"code","1b3b50bb":"code","de4238cc":"code","6a949f98":"code","3db04702":"code","2e370970":"code","85aa20ce":"code","7728398a":"code","50ea911e":"code","b7fa23e1":"code","e2b7abd8":"code","d7dad7c9":"code","e29f07e4":"code","0f3ef92e":"code","f38d6318":"code","44c3485a":"code","04170c33":"code","1d633ec7":"code","eb34cdc8":"code","97fc6d57":"code","c3800fe5":"code","5ac44eb1":"code","82c644d6":"code","770125c1":"code","b0ea741f":"code","9d3cebf3":"code","9a5b8bbc":"code","d1a6cdc3":"code","88541212":"code","29e12918":"code","17cedfbe":"code","0c8ca83b":"code","e642a511":"code","5536bf73":"code","8e6d4335":"code","c175bbae":"code","81e4eaca":"code","fb8cba04":"code","dddfd3d0":"code","bc26da7a":"code","ee706f5d":"code","39ff4d6e":"code","7f290654":"code","672a5895":"code","9541d521":"code","a79110ab":"code","56a20c8c":"code","8b034079":"code","8a9112ea":"code","f979a334":"code","96a29eb9":"code","b6830b4e":"code","3a093501":"code","4b8bd5ab":"code","7eabdff6":"code","8fa289cc":"code","a71e01dc":"code","168c12af":"code","182787ba":"code","5357f3fe":"code","499b33f4":"code","37304f29":"code","8ad6e9ea":"code","412740fc":"code","7bc132fe":"code","96432b92":"code","8b2d3343":"code","3fe7ad39":"code","a078c122":"code","23e8a5e5":"code","c57f58a5":"code","c7c9efc2":"code","5b280a77":"code","02756925":"code","18a1b214":"code","e4fbead9":"code","fd798467":"code","1cbed113":"code","a8dce473":"code","1442e292":"code","26ac49b4":"code","5bcd64ed":"code","57e972e2":"code","1e2c20e4":"code","bc66370c":"code","ae1e1a2c":"code","cf2c737e":"code","113c70d3":"code","cee8823c":"code","99aa868b":"code","c1a81557":"code","1d2afc97":"code","54fd670a":"code","a36ab162":"code","08ede114":"code","c0b96734":"code","16eb7891":"code","8cec6336":"code","4181e2e3":"code","2c88309d":"code","2422b844":"code","d18f7b18":"code","1667ade4":"code","1a167d06":"code","34952f0f":"code","1047337a":"code","cbca2258":"code","eada6d58":"code","979f7ced":"code","7f943abe":"code","73fa4a32":"code","3522789e":"code","15f776b5":"code","1e03568b":"code","b02f1851":"code","d60b2440":"code","8abc20d2":"code","d57570a3":"code","e53490fa":"code","4decd685":"code","0336bee9":"code","570a8e4a":"code","8231dad9":"code","05591021":"code","bf915c59":"code","544b54f7":"code","8a45f247":"code","0087408b":"code","181eb5dc":"code","505695a7":"code","09eefa19":"code","bfd66ec1":"code","012cf153":"code","1b3e8afb":"code","a5bbd8db":"code","b153315e":"code","e2b09819":"code","58af4085":"code","e0cc0a35":"code","278edbd3":"code","cac39b7a":"code","35931c61":"code","60b321a6":"code","e7d64395":"code","42447feb":"code","b9664cd9":"code","6c2866bf":"code","b6d9fa93":"code","b42075fa":"code","49521e72":"code","4178d916":"code","ae97396a":"code","91578c95":"code","f07ba7a5":"code","24178749":"code","3c8a55a7":"code","fcde1dc2":"code","5d2cb19a":"code","0abcf292":"code","cf28c80c":"code","d63e486a":"code","409527f3":"code","4ccc7375":"code","92040bfb":"code","3b841e51":"code","7419bae6":"code","f18d6964":"code","95e239d1":"code","5b01cb0d":"code","08fe471a":"code","20b94daf":"code","0675908d":"code","490504d9":"code","6072303b":"code","f4f85fb8":"code","dd047292":"code","3b094c44":"code","d1a074a4":"code","284dde8b":"code","4b65118a":"code","c0920f7a":"code","e43e6d26":"code","4623f480":"code","94970df6":"code","44129dfd":"code","23d052a7":"code","c76f5bbe":"code","a0e25c0a":"code","a64da5ec":"code","c5d7aa8c":"code","9b633ab8":"code","0526de72":"code","e89afb01":"code","0bf5e3a8":"code","be4b3780":"code","69ab5589":"code","bd5af802":"code","86db0029":"code","a49939bd":"code","d4f1433d":"code","738eb407":"code","4fe30184":"code","8be82786":"markdown","1924f51a":"markdown","1e151bac":"markdown","113f8e35":"markdown","196bbf02":"markdown","f32bb62a":"markdown","7cde72fe":"markdown","91d60404":"markdown","f7afbcb3":"markdown","c3c7de65":"markdown","3db9d7bb":"markdown","85b38ee8":"markdown","221a0b02":"markdown","ce48e020":"markdown","d0d02f90":"markdown","ea90f6a7":"markdown","019876be":"markdown","ea420860":"markdown","22f8e8ef":"markdown","f6b5505c":"markdown","3f371c8b":"markdown","ac944e7a":"markdown","779682ae":"markdown","96a73765":"markdown","98428673":"markdown","e51d36b4":"markdown","191b7ce6":"markdown","398d046f":"markdown","e7e389d6":"markdown","e9361aa9":"markdown","b945cc25":"markdown","ec5ff88e":"markdown","78eda08f":"markdown","07d8168f":"markdown","8836dcfc":"markdown","fe771c63":"markdown","17403358":"markdown","e5e6896c":"markdown","883303ad":"markdown","3e43ade9":"markdown","bba79a40":"markdown","ecb8a29b":"markdown","c258a149":"markdown","8dd4388e":"markdown","95b7bde5":"markdown","0c784de2":"markdown","463473c9":"markdown","7270b6d3":"markdown","016eddac":"markdown","dc9390cd":"markdown","2bbfb5db":"markdown","61250a72":"markdown","cf75cc7b":"markdown","514b0101":"markdown","0632d236":"markdown","f19e38e0":"markdown","9e4e4181":"markdown","d93c4699":"markdown","8a4e53cf":"markdown","ac685063":"markdown","ed6168ad":"markdown","a49ec4c8":"markdown","f36fec89":"markdown","ec3b9ca8":"markdown","eae7b341":"markdown","3e6f48ab":"markdown","4865abfa":"markdown","ea9878bb":"markdown","d2dc5e7f":"markdown","6f3566fd":"markdown","f4fb50ad":"markdown","12a9551b":"markdown","b93ca678":"markdown","b0a488fc":"markdown","7b5a0c7e":"markdown","18f1a845":"markdown","858cade1":"markdown","283ec5bb":"markdown","6fcf66d6":"markdown","c7bf0f22":"markdown","f589162d":"markdown","1db0747a":"markdown","0633a6ee":"markdown","7ccef5d2":"markdown","eab19b5e":"markdown","fac54d5c":"markdown","0f0e2b47":"markdown","f11e4803":"markdown","c468afce":"markdown","34d76bbe":"markdown","39a88b17":"markdown","5ea6f158":"markdown","20bb03bb":"markdown","b0805e53":"markdown","dc657ce7":"markdown","fcfc008a":"markdown","7fcb0acd":"markdown","c582ec9e":"markdown","41394836":"markdown","c895f60e":"markdown","1b94a647":"markdown","609ece20":"markdown","80a3aa4f":"markdown","53feb1b0":"markdown","a356dd47":"markdown","646a0095":"markdown","7cfe30ad":"markdown","e5e49de8":"markdown","27af81fc":"markdown","055cbfe8":"markdown","f950b228":"markdown","c4200567":"markdown","fa06a972":"markdown","58cc32f2":"markdown","a597275b":"markdown","4f898c7b":"markdown","f447b105":"markdown","b8ed65c6":"markdown","2b86bfad":"markdown","f83a20c7":"markdown","f9ab7dbe":"markdown","46bb14ec":"markdown","32d28bc0":"markdown","1bb2a575":"markdown","e584e3e7":"markdown","c034de8b":"markdown","1d03ce36":"markdown","f04a5f59":"markdown","5ed3c7aa":"markdown","889f20ec":"markdown","60b37364":"markdown","64186b1b":"markdown","cfa309f6":"markdown","16f90274":"markdown","9a056dcf":"markdown","568d1b88":"markdown","24be4d78":"markdown","58b1f32c":"markdown","b150d1ee":"markdown","93751c15":"markdown","e953a63b":"markdown","565f9fcc":"markdown","7d1a20eb":"markdown","6f70e5ac":"markdown","168520f5":"markdown","457d5cd0":"markdown","296ef369":"markdown","d7d203b9":"markdown","b74e8a62":"markdown","810f3521":"markdown","556d8e8d":"markdown","1f53bd50":"markdown","de09331a":"markdown","6489a778":"markdown","746b803b":"markdown","a3b46f05":"markdown","df72100b":"markdown","9b3011b5":"markdown","701c1f1d":"markdown","b5776703":"markdown","3af6e968":"markdown","add43e46":"markdown","93da7d82":"markdown","230fda28":"markdown","890f0b02":"markdown","e120986d":"markdown","c6e09340":"markdown","d8f6cdda":"markdown","c6d6b43d":"markdown","12ca2112":"markdown","48dbfe4e":"markdown","aec0f5c4":"markdown","c102614d":"markdown","f3ad17cd":"markdown","dce0d6d6":"markdown","3299b781":"markdown","920adad6":"markdown","6ece96cf":"markdown","0f0279a6":"markdown","6132f0ac":"markdown","f787b8d0":"markdown","094d65a3":"markdown","7f4cb34d":"markdown","b307adc6":"markdown","8f2bc9e7":"markdown","4851cbfc":"markdown","d1fb0f88":"markdown","9a551f85":"markdown","3b913803":"markdown","5fae179c":"markdown","d05d6b15":"markdown","5613183b":"markdown","dfe7cbcd":"markdown","2c83a90f":"markdown","c8c99947":"markdown","802a2d50":"markdown","b94c2e4a":"markdown","5b3c2f79":"markdown","11f1a8b6":"markdown","0348d35c":"markdown","491f5a6a":"markdown","f8c0cd03":"markdown","c3fa035e":"markdown","04b92355":"markdown","abd5262c":"markdown","5b53f7ec":"markdown","a7327043":"markdown","6fe452f4":"markdown","1ab833a8":"markdown","4b677193":"markdown","f6104aa1":"markdown","6fc1c6a6":"markdown","ad9bb9e1":"markdown","8edae75b":"markdown","e69d1816":"markdown","d0ea581e":"markdown","297de0ef":"markdown","9daec614":"markdown","26527065":"markdown","0b68513d":"markdown","c84efee9":"markdown","68ac505d":"markdown","97ba717f":"markdown","e9342d60":"markdown","f5858bd7":"markdown","9340eba6":"markdown","61443d8e":"markdown","e7b5b32c":"markdown","cc24665b":"markdown","d3d66aa8":"markdown","b02510ed":"markdown","6192e5f5":"markdown","38a663cd":"markdown","2b906a0a":"markdown","a09cff53":"markdown","56baf20a":"markdown","c0a06914":"markdown","015a9670":"markdown","4113304d":"markdown","d4ccabcb":"markdown","f0d64bde":"markdown","a47c757e":"markdown","e367dd1e":"markdown","8250f416":"markdown","28229e3b":"markdown","5305c07f":"markdown","2c542c95":"markdown","273749b5":"markdown","ce74d2d8":"markdown","0e080df1":"markdown","ec7abcf8":"markdown","d41c03d5":"markdown","30faba82":"markdown","b28622bc":"markdown","8db547a1":"markdown","95e1d10e":"markdown","8dc66a1b":"markdown","665bc3ea":"markdown","214ec218":"markdown","93b9a7d3":"markdown","95a5260d":"markdown","0d0c19ce":"markdown","4d3fbdd6":"markdown","0b5fa66e":"markdown","ea696454":"markdown","633e8a03":"markdown","adbd9f6d":"markdown","1a72a8a3":"markdown","28cad6cf":"markdown","a19f7f51":"markdown","3826f0f4":"markdown","0f0729a6":"markdown","c39dd07a":"markdown","fd36b9f0":"markdown","8fddc59f":"markdown","14d33004":"markdown","527a1e3a":"markdown","2f733109":"markdown","d54a1b39":"markdown","28a60c96":"markdown","9086a006":"markdown","3977e602":"markdown","4380d290":"markdown","c1675c0f":"markdown","becbb17e":"markdown","688ec721":"markdown","f49a60af":"markdown","64249d14":"markdown","2ce8f20e":"markdown","1e5bc6de":"markdown","37bf32e0":"markdown","14d4b0b8":"markdown","fc21cabb":"markdown","6cdd104d":"markdown","04a95bd4":"markdown","30634822":"markdown","c71c9ab9":"markdown","a7fb9222":"markdown","89af20bf":"markdown","9d91a77a":"markdown","007a66d2":"markdown","108efee3":"markdown","b2575da6":"markdown","e3a8d6c9":"markdown","4a57873f":"markdown","fecda242":"markdown","eab73b21":"markdown","cba345c8":"markdown","23d35184":"markdown","f49bf12b":"markdown","cc45343b":"markdown","a605b034":"markdown"},"source":{"dab59e14":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f9afa6ca":"lamb = pd.read_csv(\"\/kaggle\/input\/meter-sums\/lamb_meter_sums.csv\")\ncrow = pd.read_csv(\"\/kaggle\/input\/meter-sums\/crow_meter_sums.csv\")\nbear = pd.read_csv(\"\/kaggle\/input\/meter-sums\/bear_meter_sums.csv\")\nrobin = pd.read_csv(\"\/kaggle\/input\/meter-sums\/robin_meter_sums.csv\")\npanther = pd.read_csv(\"\/kaggle\/input\/meter-sums\/panther_meter_sums.csv\")\nbobcat = pd.read_csv(\"\/kaggle\/input\/meter-sums\/bobcat_meter_sums.csv\")\nrat = pd.read_csv(\"\/kaggle\/input\/meter-sums\/rat_meter_sums.csv\")\nfox = pd.read_csv(\"\/kaggle\/input\/meter-sums\/fox_meter_sums.csv\")\nshrew = pd.read_csv(\"\/kaggle\/input\/meter-sums\/shrew_meter_sums.csv\")\nmouse = pd.read_csv(\"\/kaggle\/input\/meter-sums\/mouse_meter_sums.csv\")\npeacock = pd.read_csv(\"\/kaggle\/input\/meter-sums\/peacock_meter_sums.csv\")\nhog = pd.read_csv(\"\/kaggle\/input\/meter-sums\/hog_meter_sums.csv\")\ncockatoo = pd.read_csv(\"\/kaggle\/input\/meter-sums\/cockatoo_meter_sums.csv\")\nmoose = pd.read_csv(\"\/kaggle\/input\/meter-sums\/moose_meter_sums.csv\")\ngator = pd.read_csv(\"\/kaggle\/input\/meter-sums\/gator_meter_sums.csv\")\neagle = pd.read_csv(\"\/kaggle\/input\/meter-sums\/eagle_meter_sums.csv\")\nwolf = pd.read_csv(\"\/kaggle\/input\/meter-sums\/wolf_meter_sums.csv\")\nbull = pd.read_csv(\"\/kaggle\/input\/meter-sums\/bull_meter_sums.csv\")","14331f14":"!pip install pmdarima","7cbf3723":"pip install --upgrade pip","d0874ae2":"from scipy.stats import norm\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\nimport seaborn as sns\nfrom statsmodels.tsa.arima_model import ARIMA\n\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n\nimport pmdarima as pm","39eabcfe":"lamb.head()","e251efed":"pp = sns.pairplot(lamb)","147f6de5":"ax = plt.subplot()\n\nax.plot(lamb[\"timestamp\"], lamb[\"Lamb_electricity_sum\"],color = 'limegreen', label = 'electricity')\nlamb[\"Lamb_gas_sum\"].plot(figsize=(25,10), color ='red', label = 'gas')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","a827d366":"lamb = lamb.set_index(\"timestamp\")","059277ee":"lamb_model_data = lamb[[\"Lamb_electricity_sum\", \"Lamb_gas_sum\"]]\ntrain = lamb_model_data.iloc[0:(len(lamb_model_data)-53)].copy()\ntest = lamb_model_data.iloc[len(train):(len(lamb_model_data) -1)].copy()","058fa17c":"plot_acf(train.Lamb_electricity_sum,lags=20)\nplt.show()","d56aed2c":"plot_pacf(train.Lamb_electricity_sum,lags=20)\nplt.show()","477c3585":"t = sm.tsa.adfuller(train.Lamb_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","a8924afe":"decomp = seasonal_decompose(lamb[\"Lamb_electricity_sum\"], period=12)\n\n#change figure size \nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","79639ac3":"smodel = pm.auto_arima(train[\"Lamb_electricity_sum\"], exogenous=train[[\"Lamb_gas_sum\"]],start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","3f306ca9":"mod = sm.tsa.statespace.SARIMAX(endog = train[\"Lamb_electricity_sum\"],exog = sm.add_constant(train[\"Lamb_gas_sum\"]), order=(0,1,1), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","6c782d29":"train[\"Lamb_electricity_sum\"].plot(figsize=(25,10), color=\"orange\")\nmod_fit.fittedvalues.plot()\nplt.show()","c3bc9494":"#predict = model_fit.predict(start = len(train),end = len(train)+len(test)-1,exog = sm.add_constant(test[[\"Lamb_gas_sum\"]]))\npredict = mod_fit.predict(endog=train[\"Lamb_electricity_sum\"],exog = sm.add_constant(test[[\"Lamb_gas_sum\"]]))\ntest['predicted'] = predict.values\ntest.head(5)","3444f96c":"test[\"Lamb_electricity_sum\"].plot(figsize=(25,10),color = 'limegreen')\ntest['predicted'].plot()\nplt.show()","57ebf633":"test['residual'] = abs(test[\"Lamb_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Lamb_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","fa14a63f":"mod_fit.resid.plot(figsize= (10,5))","02d9015f":"crow.head()","d88fd8a2":"pp = sns.pairplot(crow)","edb1959d":"ax = plt.subplot()\n\nax.plot(crow[\"timestamp\"], crow[\"Crow_electricity_sum\"],color = 'limegreen', label = 'electricity')\nax.plot(crow[\"timestamp\"], crow[\"Crow_chilled_sum\"], color = 'blue', label = 'chilled water')\ncrow[\"Crow_hot_sum\"].plot(figsize=(25,10), color ='red', label = 'hot water')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","b44f9194":"crow = crow.set_index(\"timestamp\")","735c8978":"crow_model_data = crow[[\"Crow_electricity_sum\", \"Crow_chilled_sum\", \"Crow_hot_sum\"]]\ntrain = crow_model_data.iloc[0:(len(crow_model_data)-53)].copy()\ntest = crow_model_data.iloc[len(train):(len(crow_model_data) -1)].copy()","2a66caf7":"plot_acf(train.Crow_electricity_sum,lags=20)\nplt.show()","667da10d":"plot_pacf(train.Crow_electricity_sum,lags=20)\nplt.show()","ebe80625":"t = sm.tsa.adfuller(train.Crow_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","bd412be0":"decomp = seasonal_decompose(crow[\"Crow_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","a026acda":"smodel = pm.auto_arima(train[\"Crow_electricity_sum\"], exogenous=train[[\"Crow_chilled_sum\", \"Crow_hot_sum\"]],start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","6fda26aa":"mod = sm.tsa.statespace.SARIMAX(endog = train[\"Crow_electricity_sum\"],exog = sm.add_constant(train[[\"Crow_chilled_sum\", \"Crow_hot_sum\"]]), order=(0,1,0), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","f32f9952":"train[\"Crow_electricity_sum\"].plot(figsize=(25,10), color=\"orange\")\nmod_fit.fittedvalues.plot()\nplt.show()","a3e1401b":"predict = mod_fit.predict(endog=train[\"Crow_electricity_sum\"],exog = sm.add_constant(test[[\"Crow_chilled_sum\", \"Crow_hot_sum\"]]))\ntest['predicted'] = predict.values\ntest.head(5)","3a453c03":"test[\"Crow_electricity_sum\"].plot(figsize=(25,10),color = 'limegreen')\ntest['predicted'].plot()\nplt.show()","785d8415":"test['residual'] = abs(test[\"Crow_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Crow_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","9a78ad6f":"mod_fit.resid.plot(figsize= (10,5))","f74892c4":"bear.head()","205a2043":"pp = sns.pairplot(bear)","8ca8df97":"ax = plt.subplot()\n\nax.plot(bear[\"timestamp\"], bear[\"Bear_electricity_sum\"],color = 'limegreen', label = 'electricity')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 20))\n\n#display legend\nax.legend()","3dfb18cc":"bear = bear.set_index(\"timestamp\")","8ee0f0dd":"bear_model_data = bear[[\"Bear_electricity_sum\"]]\ntrain = bear_model_data.iloc[0:(len(crow_model_data)-53)].copy()\ntest = bear_model_data.iloc[len(train):(len(crow_model_data) -1)].copy()","4eb3ca15":"plot_acf(train.Bear_electricity_sum,lags=20)\nplt.show()","a3cd5c70":"plot_pacf(train.Bear_electricity_sum,lags=20)\nplt.show()","a480e090":"t = sm.tsa.adfuller(train.Bear_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","7eebefdd":"decomp = seasonal_decompose(bear[\"Bear_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","3dbf3a68":"smodel = pm.auto_arima(train[\"Bear_electricity_sum\"],start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","45f0c58a":"mod = sm.tsa.statespace.SARIMAX(endog = train[\"Bear_electricity_sum\"], order=(0,1,0), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","6914810b":"train[\"Bear_electricity_sum\"].plot(figsize=(25,10), color=\"orange\")\nmod_fit.fittedvalues.plot()\nplt.show()","2880e659":"predict = mod_fit.predict(endog=train[\"Bear_electricity_sum\"])\ntest['predicted'] = predict.values\ntest.head(5)","7804ff0e":"test[\"Bear_electricity_sum\"].plot(figsize=(25,10),color = 'limegreen')\ntest['predicted'].plot()\nplt.show()","00f51c1c":"test['residual'] = abs(test[\"Bear_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Bear_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","575bc92e":"mod_fit.resid.plot(figsize= (10,5))","42ca6964":"robin.head()","912485aa":"pp = sns.pairplot(robin)","75366b09":"ax = plt.subplot()\n\nax.plot(robin[\"timestamp\"], robin[\"Robin_electricity_sum\"],color = 'limegreen', label = 'electricity')\nrobin[\"Robin_hot_sum\"].plot(figsize=(25,10), color ='red', label = 'hot water')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","6469aa6d":"robin = robin.set_index(\"timestamp\")","c75b0fef":"robin_model_data = robin[[\"Robin_electricity_sum\", \"Robin_hot_sum\"]]\ntrain = robin_model_data.iloc[0:(len(robin_model_data)-53)].copy()\ntest = robin_model_data.iloc[len(train):(len(robin_model_data) -1)].copy()","eaf8528c":"plot_acf(train.Robin_electricity_sum,lags=20)\nplt.show()","171cc529":"plot_pacf(train.Robin_electricity_sum,lags=20)\nplt.show()","7d9a14ec":"t = sm.tsa.adfuller(train.Robin_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","b15d11ce":"decomp = seasonal_decompose(robin[\"Robin_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","b1c031cb":"smodel = pm.auto_arima(train[\"Robin_electricity_sum\"], exogenous=train[[\"Robin_hot_sum\"]],start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","5fe637fb":"mod = sm.tsa.statespace.SARIMAX(endog = train[\"Robin_electricity_sum\"],exog = sm.add_constant(train[\"Robin_hot_sum\"]), order=(0,1,0), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","e728e8cc":"train[\"Robin_electricity_sum\"].plot(figsize=(25,10), color=\"orange\")\nmod_fit.fittedvalues.plot()\nplt.show()","856ba3cb":"predict = mod_fit.predict(endog=train[\"Robin_electricity_sum\"],exog = sm.add_constant(test[[\"Robin_hot_sum\"]]))\ntest['predicted'] = predict.values\ntest.head(5)","5833dbd4":"test[\"Robin_electricity_sum\"].plot(figsize=(25,10),color = 'limegreen')\ntest['predicted'].plot()\nplt.show()","73d14477":"test['residual'] = abs(test[\"Robin_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Robin_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","e56f1a43":"mod_fit.resid.plot(figsize= (10,5))","42309f90":"panther.head()","bd6a1d70":"pp = sns.pairplot(panther)","f6e7ab04":"ax = plt.subplot()\n\nax.plot(panther[\"timestamp\"], panther[\"Panther_electricity_sum\"],color = 'limegreen', label = 'electricity')\nax.plot(panther[\"timestamp\"], panther[\"Panther_gas_sum\"],color = 'lightpink', label = 'gas')\nax.plot(panther[\"timestamp\"], panther[\"Panther_irrigation_sum\"],color = 'peru', label = 'irrigation')\nax.plot(panther[\"timestamp\"], panther[\"Panther_chilled_sum\"], color = 'blue', label = 'chilled water')\npanther[\"Panther_water_sum\"].plot(figsize=(25,10), color ='darkcyan', label = 'water')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","1cd955eb":"panther = panther.set_index(\"timestamp\")","a150c835":"panther_model_data = panther[[\"Panther_electricity_sum\", \"Panther_gas_sum\", \"Panther_irrigation_sum\", \"Panther_water_sum\", \"Panther_chilled_sum\"]]\ntrain = panther_model_data.iloc[0:(len(panther_model_data)-53)].copy()\ntest = panther_model_data.iloc[len(train):(len(panther_model_data) -1)].copy()","7ac96223":"plot_acf(train.Panther_electricity_sum,lags=15)\nplt.show()","eb25b16b":"plot_pacf(train.Panther_electricity_sum,lags=15)\nplt.show()","048a2a50":"t = sm.tsa.adfuller(train.Panther_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","a7711bd5":"decomp = seasonal_decompose(panther[\"Panther_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","0d1e7d1e":"smodel = pm.auto_arima(train[\"Panther_electricity_sum\"], exogenous=train[[\"Panther_gas_sum\", \"Panther_irrigation_sum\", \"Panther_water_sum\", \"Panther_chilled_sum\"]],start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","6719aaaf":"mod = sm.tsa.statespace.SARIMAX(endog = train[\"Panther_electricity_sum\"],exog = sm.add_constant(train[[\"Panther_gas_sum\", \"Panther_irrigation_sum\", \"Panther_water_sum\", \"Panther_chilled_sum\"]]), order=(0,1,1), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","fa8f5742":"train[\"Panther_electricity_sum\"].plot(figsize=(25,10), color=\"orange\")\nmod_fit.fittedvalues.plot()\nplt.show()","4a3188ad":"predict = mod_fit.predict(endog=train[\"Panther_electricity_sum\"],exog = sm.add_constant(test[[\"Panther_gas_sum\", \"Panther_irrigation_sum\", \"Panther_water_sum\", \"Panther_chilled_sum\"]]))\ntest['predicted'] = predict.values\ntest.head(5)","25c8a9dc":"test[\"Panther_electricity_sum\"].plot(figsize=(25,10),color = 'limegreen')\ntest['predicted'].plot()\nplt.show()","828ac04b":"test['residual'] = abs(test[\"Panther_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Panther_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","be632698":"mod_fit.resid.plot(figsize= (10,5))","263b3ee9":"bobcat.head()","c4587230":"pp = sns.pairplot(bobcat)","4b115917":"ax = plt.subplot()\n\nax.plot(bobcat[\"timestamp\"], bobcat[\"Bobcat_electricity_sum\"],color = 'limegreen', label = 'electricity')\nax.plot(bobcat[\"timestamp\"], bobcat[\"Bobcat_gas_sum\"],color = 'lightpink', label = 'gas')\nax.plot(bobcat[\"timestamp\"], bobcat[\"Bobcat_solar_sum\"],color = 'goldenrod', label = 'solar')\nax.plot(bobcat[\"timestamp\"], bobcat[\"Bobcat_chilled_sum\"], color = 'blue', label = 'chilled water')\nax.plot(bobcat[\"timestamp\"], bobcat[\"Bobcat_hot_sum\"], color = 'red', label = 'hot water')\nbobcat[\"Bobcat_water_sum\"].plot(figsize=(25,10), color ='darkcyan', label = 'water')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","48e6651e":"bobcat = bobcat.set_index(\"timestamp\")","f4ffae05":"bobcat_model_data = bobcat[[\"Bobcat_electricity_sum\", \"Bobcat_gas_sum\", \"Bobcat_solar_sum\", \"Bobcat_water_sum\", \"Bobcat_chilled_sum\", \"Bobcat_hot_sum\"]]\ntrain = bobcat_model_data.iloc[0:(len(bobcat_model_data)-53)].copy()\ntest = bobcat_model_data.iloc[len(train):(len(bobcat_model_data) -1)].copy()","1b3b50bb":"plot_acf(train.Bobcat_electricity_sum,lags=20)\nplt.show()","de4238cc":"plot_pacf(train.Bobcat_electricity_sum,lags=20)\nplt.show()","6a949f98":"t = sm.tsa.adfuller(train.Bobcat_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","3db04702":"decomp = seasonal_decompose(bobcat[\"Bobcat_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","2e370970":"smodel = pm.auto_arima(train[\"Bobcat_electricity_sum\"], exogenous=train[[\"Bobcat_gas_sum\", \"Bobcat_solar_sum\", \"Bobcat_water_sum\", \"Bobcat_chilled_sum\", \"Bobcat_hot_sum\"]],start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","85aa20ce":"mod = sm.tsa.statespace.SARIMAX(endog = train[\"Bobcat_electricity_sum\"],exog = sm.add_constant(train[[\"Bobcat_gas_sum\", \"Bobcat_solar_sum\", \"Bobcat_water_sum\", \"Bobcat_chilled_sum\", \"Bobcat_hot_sum\"]]), order=(0,1,0), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","7728398a":"train[\"Bobcat_electricity_sum\"].plot(figsize=(25,10), color=\"orange\")\nmod_fit.fittedvalues.plot()\nplt.show()","50ea911e":"predict = mod_fit.predict(endog=train[\"Bobcat_electricity_sum\"],exog = sm.add_constant(test[[\"Bobcat_gas_sum\", \"Bobcat_solar_sum\", \"Bobcat_water_sum\", \"Bobcat_chilled_sum\", \"Bobcat_hot_sum\"]]))\ntest['predicted'] = predict.values\ntest.head(5)","b7fa23e1":"test[\"Bobcat_electricity_sum\"].plot(figsize=(25,10),color = 'limegreen')\ntest['predicted'].plot()\nplt.show()","e2b7abd8":"test['residual'] = abs(test[\"Bobcat_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Bobcat_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","d7dad7c9":"mod_fit.resid.plot(figsize= (10,5))","e29f07e4":"rat.head()","0f3ef92e":"pp = sns.pairplot(rat)","f38d6318":"ax = plt.subplot()\n\nax.plot(rat[\"timestamp\"], rat[\"Rat_electricity_sum\"],color = 'limegreen', label = 'electricity')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 20))\n\n#display legend\nax.legend()","44c3485a":"rat = rat.set_index(\"timestamp\")","04170c33":"rat_model_data = rat[[\"Rat_electricity_sum\"]]\ntrain = rat_model_data.iloc[0:(len(rat_model_data)-53)].copy()\ntest = rat_model_data.iloc[len(train):(len(rat_model_data) -1)].copy()","1d633ec7":"plot_acf(train.Rat_electricity_sum,lags=20)\nplt.show()","eb34cdc8":"plot_pacf(train.Rat_electricity_sum,lags=20)\nplt.show()","97fc6d57":"t = sm.tsa.adfuller(train.Rat_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","c3800fe5":"decomp = seasonal_decompose(rat[\"Rat_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","5ac44eb1":"smodel = pm.auto_arima(train[\"Rat_electricity_sum\"],start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","82c644d6":"mod = sm.tsa.statespace.SARIMAX(endog = train[\"Rat_electricity_sum\"], order=(0,1,0), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","770125c1":"train[\"Rat_electricity_sum\"].plot(figsize=(25,10), color=\"orange\")\nmod_fit.fittedvalues.plot()\nplt.show()","b0ea741f":"predict = mod_fit.predict(endog=train[\"Rat_electricity_sum\"])\ntest['predicted'] = predict.values\ntest.head(5)","9d3cebf3":"test[\"Rat_electricity_sum\"].plot(figsize=(25,10),color = 'limegreen')\ntest['predicted'].plot()\nplt.show()","9a5b8bbc":"test['residual'] = abs(test[\"Rat_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Rat_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","d1a6cdc3":"mod_fit.resid.plot(figsize= (10,5))","88541212":"fox.head()","29e12918":"pp = sns.pairplot(fox)","17cedfbe":"ax = plt.subplot()\n\nax.plot(fox[\"timestamp\"], fox[\"Fox_electricity_sum\"],color = 'limegreen', label = 'electricity')\nax.plot(fox[\"timestamp\"], fox[\"Fox_chilled_sum\"], color = 'blue', label = 'chilled water')\nfox[\"Fox_hot_sum\"].plot(figsize=(25,10), color ='red', label = 'hot water')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","0c8ca83b":"fox = fox.set_index(\"timestamp\")","e642a511":"fox_model_data = fox[[\"Fox_electricity_sum\", \"Fox_chilled_sum\", \"Fox_hot_sum\"]]\ntrain = fox_model_data.iloc[0:(len(fox_model_data)-53)].copy()\ntest = fox_model_data.iloc[len(train):(len(fox_model_data) -1)].copy()","5536bf73":"plot_acf(train.Fox_electricity_sum,lags=20)\nplt.show()","8e6d4335":"plot_pacf(train.Fox_electricity_sum,lags=20)\nplt.show()","c175bbae":"t = sm.tsa.adfuller(train.Fox_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","81e4eaca":"decomp = seasonal_decompose(fox[\"Fox_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","fb8cba04":"smodel = pm.auto_arima(train[\"Fox_electricity_sum\"], exogenous=train[[\"Fox_chilled_sum\", \"Fox_hot_sum\"]],start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","dddfd3d0":"mod = sm.tsa.statespace.SARIMAX(endog = train[\"Fox_electricity_sum\"],exog = sm.add_constant(train[[\"Fox_chilled_sum\", \"Fox_hot_sum\"]]), order=(0,1,0), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","bc26da7a":"train[\"Fox_electricity_sum\"].plot(figsize=(25,10), color=\"orange\")\nmod_fit.fittedvalues.plot()\nplt.show()","ee706f5d":"predict = mod_fit.predict(endog=train[\"Fox_electricity_sum\"],exog = sm.add_constant(test[[\"Fox_chilled_sum\", \"Fox_hot_sum\"]]))\ntest['predicted'] = predict.values\ntest.head(5)","39ff4d6e":"test[\"Fox_electricity_sum\"].plot(figsize=(25,10),color = 'limegreen')\ntest['predicted'].plot()\nplt.show()","7f290654":"test['residual'] = abs(test[\"Fox_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Fox_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","672a5895":"mod_fit.resid.plot(figsize= (10,5))","9541d521":"shrew.head()","a79110ab":"pp = sns.pairplot(shrew)","56a20c8c":"ax = plt.subplot()\n\nax.plot(shrew[\"timestamp\"], shrew[\"Shrew_electricity_sum\"],color = 'limegreen', label = 'electricity')\nshrew[\"Shrew_gas_sum\"].plot(figsize=(25,10), color ='lightpink', label = 'gas')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","8b034079":"shrew = shrew.set_index(\"timestamp\")","8a9112ea":"shrew_model_data = shrew[[\"Shrew_electricity_sum\", \"Shrew_gas_sum\"]]\ntrain = shrew_model_data.iloc[0:(len(shrew_model_data)-53)].copy()\ntest = shrew_model_data.iloc[len(train):(len(shrew_model_data) -1)].copy()","f979a334":"plot_acf(train.Shrew_electricity_sum,lags=20)\nplt.show()","96a29eb9":"plot_pacf(train.Shrew_electricity_sum,lags=20)\nplt.show()","b6830b4e":"t = sm.tsa.adfuller(train.Shrew_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","3a093501":"decomp = seasonal_decompose(shrew[\"Shrew_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","4b8bd5ab":"smodel = pm.auto_arima(train[\"Shrew_electricity_sum\"], exogenous=train[[\"Shrew_gas_sum\"]],start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","7eabdff6":"mod = sm.tsa.statespace.SARIMAX(endog = train[\"Shrew_electricity_sum\"],exog = sm.add_constant(train[\"Shrew_gas_sum\"]), order=(0,1,1), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","8fa289cc":"train[\"Shrew_electricity_sum\"].plot(figsize=(25,10), color=\"orange\")\nmod_fit.fittedvalues.plot()\nplt.show()","a71e01dc":"predict = mod_fit.predict(endog=train[\"Shrew_electricity_sum\"],exog = sm.add_constant(test[[\"Shrew_gas_sum\"]]))\ntest['predicted'] = predict.values\ntest.head(5)","168c12af":"test[\"Shrew_electricity_sum\"].plot(figsize=(25,10),color = 'limegreen')\ntest['predicted'].plot()\nplt.show()","182787ba":"test['residual'] = abs(test[\"Shrew_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Shrew_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","5357f3fe":"mod_fit.resid.plot(figsize= (10,5))","499b33f4":"mouse.head(2)","37304f29":"pp = sns.pairplot(mouse)","8ad6e9ea":"ax = plt.subplot()\n\nax.plot(mouse[\"timestamp\"], mouse[\"Mouse_electricity_sum\"],color = 'limegreen', label = 'electricity')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","412740fc":"mouse = mouse.set_index(\"timestamp\")\n\nmouse_model_data = mouse[[\"Mouse_electricity_sum\"]]\ntrain = mouse_model_data.iloc[0:(len(lamb_model_data)-53)].copy()\ntest = mouse_model_data.iloc[len(train):(len(lamb_model_data) -1)].copy()","7bc132fe":"plot_acf(train.Mouse_electricity_sum,lags=20)\nplt.show()","96432b92":"plot_pacf(train.Mouse_electricity_sum,lags=20)\nplt.show()","8b2d3343":"t = sm.tsa.adfuller(train.Mouse_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","3fe7ad39":"decomp = seasonal_decompose(mouse[\"Mouse_electricity_sum\"], period=6)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","a078c122":"smodel = pm.auto_arima(train[\"Mouse_electricity_sum\"], start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","23e8a5e5":"mod = sm.tsa.statespace.SARIMAX(endog = train[\"Mouse_electricity_sum\"], order=(0,1,1), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","c57f58a5":"train[\"Mouse_electricity_sum\"].plot(figsize=(25,10))\nmod_fit.fittedvalues.plot(color = \"red\")\nplt.show()","c7c9efc2":"predict = mod_fit.predict(endog=train[\"Mouse_electricity_sum\"])\ntest['predicted'] = predict.values\ntest.head(5)","5b280a77":"test[\"Mouse_electricity_sum\"].plot(figsize=(25,10))\ntest['predicted'].plot(color = \"red\")\nplt.show()","02756925":"test['residual'] = abs(test[\"Mouse_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Mouse_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","18a1b214":"mod_fit.resid.plot(figsize= (20,5))","e4fbead9":"peacock.head(2)","fd798467":"pp = sns.pairplot(peacock)","1cbed113":"ax = plt.subplot()\n\nax.plot(peacock[\"timestamp\"], peacock[\"Peacock_electricity_sum\"],color = 'limegreen', label = 'electricity')\nax.plot(peacock[\"timestamp\"], peacock[\"Peacock_steam_sum\"],color = 'orchid', label = 'steam')\npeacock[\"Peacock_chilled_sum\"].plot(figsize=(25,10), color ='blue', label = 'chilled water')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","a8dce473":"peacock = peacock.set_index(\"timestamp\")","1442e292":"peacock_model_data = peacock[[\"Peacock_electricity_sum\", \"Peacock_chilled_sum\", \"Peacock_steam_sum\"]]\ntrain = peacock_model_data.iloc[0:(len(peacock_model_data)-53)].copy()\ntest = peacock_model_data.iloc[len(train):(len(peacock_model_data) -1)].copy()","26ac49b4":"plot_acf(train.Peacock_electricity_sum,lags=20)\nplt.show()","5bcd64ed":"plot_pacf(train.Peacock_electricity_sum,lags=20)\nplt.show()","57e972e2":"t = sm.tsa.adfuller(train.Peacock_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","1e2c20e4":"decomp = seasonal_decompose(peacock[\"Peacock_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","bc66370c":"smodel = pm.auto_arima(train[\"Peacock_electricity_sum\"], exogenous=train[[\"Peacock_chilled_sum\", \"Peacock_steam_sum\"]],start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","ae1e1a2c":"endog = train[\"Peacock_electricity_sum\"]\ny = train.drop(\"Peacock_electricity_sum\", axis = 1)\nexog = sm.add_constant(y)\n\nmod = sm.tsa.statespace.SARIMAX(endog = endog ,exog = exog, order=(0,1,0), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","cf2c737e":"train[\"Peacock_electricity_sum\"].plot(figsize=(25,10))\nmod_fit.fittedvalues.plot()\nplt.show()","113c70d3":"predict = mod_fit.predict(endog=train[\"Peacock_electricity_sum\"],exog = sm.add_constant(test[[\"Peacock_chilled_sum\", \"Peacock_steam_sum\"]]))\ntest['predicted'] = predict.values\ntest.head(5)","cee8823c":"test[\"Peacock_electricity_sum\"].plot(figsize=(25,10))\ntest['predicted'].plot(color = \"red\")\nplt.show()","99aa868b":"test['residual'] = abs(test[\"Peacock_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Peacock_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","c1a81557":"mod_fit.resid.plot(figsize= (20,5))","1d2afc97":"hog.head(2)","54fd670a":"pp = sns.pairplot(hog)","a36ab162":"ax = plt.subplot()\n\nax.plot(hog[\"timestamp\"], hog[\"Hog_electricity_sum\"],color = 'limegreen', label = 'electricity')\nax.plot(hog[\"timestamp\"], hog[\"Hog_chilled_sum\"], color = 'blue', label = 'chilled water')\nhog[\"Hog_steam_sum\"].plot(figsize=(25,10), color ='violet', label = 'orchid')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","08ede114":"hog = hog.set_index(\"timestamp\")","c0b96734":"hog_model_data = hog[[\"Hog_electricity_sum\", \"Hog_chilled_sum\", \"Hog_steam_sum\"]]\ntrain = hog_model_data.iloc[0:(len(hog_model_data)-53)].copy()\ntest = hog_model_data.iloc[len(train):(len(hog_model_data) -1)].copy()\n\nendog = train[\"Hog_electricity_sum\"]\ny = train.drop(\"Hog_electricity_sum\", axis = 1)\nexog = sm.add_constant(y)","16eb7891":"plot_acf(train.Hog_electricity_sum,lags=15)\nplt.show()","8cec6336":"plot_pacf(train.Hog_electricity_sum,lags=15)\nplt.show()","4181e2e3":"t = sm.tsa.adfuller(train.Hog_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","2c88309d":"decomp = seasonal_decompose(hog[\"Hog_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","2422b844":"smodel = pm.auto_arima(train[\"Hog_electricity_sum\"], exogenous= exog ,start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","d18f7b18":"mod = sm.tsa.statespace.SARIMAX(endog = endog ,exog = exog, order=(0,1,0), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","1667ade4":"train[\"Hog_electricity_sum\"].plot(figsize=(25,10))\nmod_fit.fittedvalues.plot()\nplt.show()","1a167d06":"predict = mod_fit.predict(endog= endog,exog = exog)\ntest['predicted'] = predict.values\ntest.head(5)","34952f0f":"test[\"Hog_electricity_sum\"].plot(figsize=(25,10))\ntest['predicted'].plot(color = \"red\")\nplt.show()","1047337a":"test['residual'] = abs(test[\"Hog_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Hog_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","cbca2258":"mod_fit.resid.plot(figsize= (20,5))","eada6d58":"cockatoo.head(2)","979f7ced":"pp = sns.pairplot(cockatoo)","7f943abe":"ax = plt.subplot()\n\nax.plot(cockatoo[\"timestamp\"], cockatoo[\"Cockatoo_electricity_sum\"],color = 'limegreen', label = 'electricity')\nax.plot(cockatoo[\"timestamp\"], cockatoo[\"Cockatoo_steam_sum\"],color = 'orchid', label = 'steam')\nax.plot(cockatoo[\"timestamp\"], cockatoo[\"Cockatoo_chilled_sum\"], color = 'blue', label = 'chilled water')\ncockatoo[\"Cockatoo_hot_sum\"].plot(figsize=(25,10), color ='red', label = 'hot water')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","73fa4a32":"cockatoo = cockatoo.set_index('timestamp')","3522789e":"cockatoo_model_data = cockatoo[[\"Cockatoo_electricity_sum\", \"Cockatoo_chilled_sum\", \"Cockatoo_steam_sum\", \"Cockatoo_hot_sum\"]]\ntrain = cockatoo_model_data.iloc[0:(len(cockatoo_model_data)-53)].copy()\ntest = cockatoo_model_data.iloc[len(train):(len(cockatoo_model_data) -1)].copy()\n\nendog = train[\"Cockatoo_electricity_sum\"]\ny = train.drop(\"Cockatoo_electricity_sum\", axis = 1)\nexog = sm.add_constant(y)","15f776b5":"plot_acf(train.Cockatoo_electricity_sum,lags=20)\nplt.show()","1e03568b":"plot_pacf(train.Cockatoo_electricity_sum,lags=20)\nplt.show()","b02f1851":"t = sm.tsa.adfuller(train.Cockatoo_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","d60b2440":"decomp = seasonal_decompose(cockatoo[\"Cockatoo_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","8abc20d2":"smodel = pm.auto_arima(endog, exogenous=exog,start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","d57570a3":"mod = sm.tsa.statespace.SARIMAX(endog = endog ,exog = exog, order=(0,1,0), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","e53490fa":"train[\"Cockatoo_electricity_sum\"].plot(figsize=(25,10))\nmod_fit.fittedvalues.plot()\nplt.show()","4decd685":"predict = mod_fit.predict(endog= endog,exog = exog)\ntest['predicted'] = predict.values\ntest.head(5)","0336bee9":"test[\"Cockatoo_electricity_sum\"].plot(figsize=(25,10))\ntest['predicted'].plot(color = \"red\")\nplt.show()","570a8e4a":"test['residual'] = abs(test[\"Cockatoo_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Cockatoo_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","8231dad9":"mod_fit.resid.plot(figsize= (20,5))","05591021":"moose.head(2)","bf915c59":"pp = sns.pairplot(moose)","544b54f7":"ax = plt.subplot()\n\nax.plot(moose[\"timestamp\"], moose[\"Moose_electricity_sum\"],color = 'limegreen', label = 'electricity')\nax.plot(moose[\"timestamp\"], moose[\"Moose_chilled_sum\"], color = 'blue', label = 'chilled water')\nax.plot(moose[\"timestamp\"], moose[\"Moose_hot_sum\"], color = 'red', label = 'hot water')\nmoose[\"Moose_steam_sum\"].plot(figsize=(25,10), color ='orchid', label = 'steam')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","8a45f247":"moose = moose.set_index(\"timestamp\")","0087408b":"moose_model_data = moose[[\"Moose_electricity_sum\", \"Moose_chilled_sum\", \"Moose_steam_sum\"]]\ntrain = moose_model_data.iloc[0:(len(moose_model_data)-53)].copy()\ntest = moose_model_data.iloc[len(train):(len(moose_model_data) -1)].copy()\n\nendog = train[\"Moose_electricity_sum\"]\ny = train.drop(\"Moose_electricity_sum\", axis = 1)\nexog = sm.add_constant(y)","181eb5dc":"plot_acf(train.Moose_electricity_sum,lags=20)\nplt.show()","505695a7":"plot_pacf(train.Moose_electricity_sum,lags=20)\nplt.show()","09eefa19":"t = sm.tsa.adfuller(train.Moose_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","bfd66ec1":"decomp = seasonal_decompose(moose[\"Moose_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","012cf153":"smodel = pm.auto_arima(endog, exogenous=exog,start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","1b3e8afb":"mod = sm.tsa.statespace.SARIMAX(endog = endog ,exog = exog, order=(0,1,0), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","a5bbd8db":"train[\"Moose_electricity_sum\"].plot(figsize=(25,10))\nmod_fit.fittedvalues.plot()\nplt.show()","b153315e":"predict = mod_fit.predict(endog = endog,exog = exog)\ntest['predicted'] = predict.values\ntest.head(5)","e2b09819":"test[\"Moose_electricity_sum\"].plot(figsize=(25,10))\ntest['predicted'].plot(color = \"red\")\nplt.show()","58af4085":"test['residual'] = abs(test[\"Moose_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Moose_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","e0cc0a35":"mod_fit.resid.plot(figsize= (20,5))","278edbd3":"gator.head(2)","cac39b7a":"pp = sns.pairplot(gator)","35931c61":"ax = plt.subplot()\n\nax.plot(gator[\"timestamp\"], gator[\"Gator_electricity_sum\"],color = 'limegreen', label = 'electricity')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 20))\n\n#display legend\nax.legend()","60b321a6":"gator = gator.set_index(\"timestamp\")","e7d64395":"gator_model_data = gator[[\"Gator_electricity_sum\"]]\ntrain = gator_model_data.iloc[0:(len(gator_model_data)-53)].copy()\ntest = gator_model_data.iloc[len(train):(len(gator_model_data) -1)].copy()\n\nendog = train[\"Gator_electricity_sum\"]","42447feb":"plot_acf(train.Gator_electricity_sum,lags=20)\nplt.show()","b9664cd9":"plot_pacf(train.Gator_electricity_sum,lags=20)\nplt.show()","6c2866bf":"t = sm.tsa.adfuller(train.Gator_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","b6d9fa93":"decomp = seasonal_decompose(gator[\"Gator_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","b42075fa":"smodel = pm.auto_arima(endog,start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","49521e72":"mod = sm.tsa.statespace.SARIMAX(endog = endog, order=(0,1,2), seasonal_order = (1,0,[],52), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","4178d916":"train[\"Gator_electricity_sum\"].plot(figsize=(25,10))\nmod_fit.fittedvalues.plot()\nplt.show()","ae97396a":"predict = mod_fit.predict(endog=endog)\ntest['predicted'] = predict.values\ntest.head(5)","91578c95":"test[\"Gator_electricity_sum\"].plot(figsize=(25,10))\ntest['predicted'].plot(color = \"red\")\nplt.show()","f07ba7a5":"test['residual'] = abs(test[\"Gator_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Gator_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","24178749":"mod_fit.resid.plot(figsize= (20,5))","3c8a55a7":"eagle.head()","fcde1dc2":"pp = sns.pairplot(eagle)","5d2cb19a":"ax = plt.subplot()\n\nax.plot(eagle[\"timestamp\"], eagle[\"Eagle_electricity_sum\"],color = 'limegreen', label = 'electricity')\nax.plot(eagle[\"timestamp\"], eagle[\"Eagle_steam_sum\"],color = 'orchid', label = 'steam')\nax.plot(eagle[\"timestamp\"], eagle[\"Eagle_chilled_sum\"], color = 'blue', label = 'chilled water')\neagle[\"Eagle_hot_sum\"].plot(figsize=(25,10), color ='red', label = 'hot water')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","0abcf292":"eagle = eagle.set_index(\"timestamp\")","cf28c80c":"eagle_model_data = eagle[[\"Eagle_electricity_sum\", \"Eagle_chilled_sum\", \"Eagle_steam_sum\", \"Eagle_hot_sum\"]]\ntrain = eagle_model_data.iloc[0:(len(eagle_model_data)-53)].copy()\ntest = eagle_model_data.iloc[len(train):(len(eagle_model_data) -1)].copy()\n\nendog = train[\"Eagle_electricity_sum\"]\ny = train.drop(\"Eagle_electricity_sum\", axis = 1)\nexog = sm.add_constant(y)","d63e486a":"plot_acf(train.Eagle_electricity_sum,lags=20)\nplt.show()","409527f3":"plot_pacf(train.Eagle_electricity_sum,lags=20)\nplt.show()","4ccc7375":"t = sm.tsa.adfuller(train.Eagle_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","92040bfb":"decomp = seasonal_decompose(eagle[\"Eagle_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","3b841e51":"smodel = pm.auto_arima(endog, exogenous=exog,start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","7419bae6":"mod = sm.tsa.statespace.SARIMAX(endog = endog ,exog = exog, order=(0,1,0), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","f18d6964":"train[\"Eagle_electricity_sum\"].plot(figsize=(25,10))\nmod_fit.fittedvalues.plot()\nplt.show()","95e239d1":"predict = mod_fit.predict(endog=endog,exog = exog)\ntest['predicted'] = predict.values\ntest.head(5)","5b01cb0d":"test[\"Eagle_electricity_sum\"].plot(figsize=(25,10))\ntest['predicted'].plot(color = \"red\")\nplt.show()","08fe471a":"test['residual'] = abs(test[\"Eagle_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Eagle_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","20b94daf":"mod_fit.resid.plot(figsize= (10,5))","0675908d":"wolf.head()","490504d9":"pp = sns.pairplot(wolf)","6072303b":"ax = plt.subplot()\n\nax.plot(wolf[\"timestamp\"], wolf[\"Wolf_electricity_sum\"],color = 'limegreen', label = 'electricity')\nax.plot(wolf[\"timestamp\"], wolf[\"Wolf_gas_sum\"],color = 'lightpink', label = 'gas')\nwolf[\"Wolf_water_sum\"].plot(figsize=(25,10), color ='darkcyan', label = 'water')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","f4f85fb8":"wolf = wolf.set_index(\"timestamp\")","dd047292":"wolf_model_data = wolf[[\"Wolf_electricity_sum\", \"Wolf_gas_sum\", \"Wolf_water_sum\"]]\ntrain = wolf_model_data.iloc[0:(len(wolf_model_data)-53)].copy()\ntest = wolf_model_data.iloc[len(train):(len(wolf_model_data) -1)].copy()\n\nendog = train[\"Wolf_electricity_sum\"]\ny = train.drop(\"Wolf_electricity_sum\", axis = 1)\nexog = sm.add_constant(y)","3b094c44":"plot_acf(train.Wolf_electricity_sum,lags=20)\nplt.show()","d1a074a4":"plot_pacf(train.Wolf_electricity_sum,lags=20)\nplt.show()","284dde8b":"t = sm.tsa.adfuller(train.Wolf_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","4b65118a":"decomp = seasonal_decompose(peacock[\"Peacock_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","c0920f7a":"smodel = pm.auto_arima(endog, exogenous= exog,start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","e43e6d26":"mod = sm.tsa.statespace.SARIMAX(endog = endog ,exog = exog, order=(0,1,1), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","4623f480":"train[\"Wolf_electricity_sum\"].plot(figsize=(25,10))\nmod_fit.fittedvalues.plot()\nplt.show()","94970df6":"predict = mod_fit.predict(endog=endog,exog = exog)\ntest['predicted'] = predict.values\ntest.head(5)","44129dfd":"test[\"Wolf_electricity_sum\"].plot(figsize=(20,8))\ntest['predicted'].plot(color = \"red\")\nplt.show()","23d052a7":"test['residual'] = abs(test[\"Wolf_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Wolf_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","c76f5bbe":"bull.head()","a0e25c0a":"pp = sns.pairplot(bull)","a64da5ec":"ax = plt.subplot()\n\nax.plot(bull[\"timestamp\"], bull[\"Bull_electricity_sum\"],color = 'limegreen', label = 'electricity')\nax.plot(bull[\"timestamp\"], bull[\"Bull_chilled_sum\"], color = 'blue', label = 'chilled water')\nbull[\"Bull_steam_sum\"].plot(figsize=(25,10), color ='orchid', label = 'steam')\n\n#change x axis ticks\nstart, end = ax.get_xlim()\nax.xaxis.set_ticks(np.arange(start, end, 10))\n\n#display legend\nax.legend()","c5d7aa8c":"bull = bull.set_index(\"timestamp\")","9b633ab8":"bull_model_data = bull[[\"Bull_electricity_sum\", \"Bull_chilled_sum\", \"Bull_steam_sum\"]]\ntrain = bull_model_data.iloc[0:(len(bull_model_data)-53)].copy()\ntest = bull_model_data.iloc[len(train):(len(bull_model_data) -1)].copy()\n\nendog = train[\"Bull_electricity_sum\"]\ny = train.drop(\"Bull_electricity_sum\", axis = 1)\nexog = sm.add_constant(y)","0526de72":"plot_acf(train.Bull_electricity_sum,lags=20)\nplt.show()","e89afb01":"plot_pacf(train.Bull_electricity_sum,lags=20)\nplt.show()","0bf5e3a8":"t = sm.tsa.adfuller(train.Bull_electricity_sum, autolag='AIC')\npd.Series(t[0:4], index=['Test Statistic','p-value','Lags Used','Number of Observations Used'])","be4b3780":"decomp = seasonal_decompose(bull[\"Bull_electricity_sum\"], period=12)\n\nfig = plt.figure()\nfig = decomp.plot()\nfig.set_size_inches(15,10)","69ab5589":"smodel = pm.auto_arima(endog, exogenous=exog,start_p=1, start_q=1, d = 1, D = 0, test=\"adf\", \n                       max_p=12, max_q=12, m=52, start_P=0, seasonal = True, trace=True, suppress_warnings=True, stepwise=True\n                      )\n\nsmodel.summary()","bd5af802":"mod = sm.tsa.statespace.SARIMAX(endog = endog ,exog = exog, order=(0,1,1), trend='c')\nmod_fit = mod.fit()\nmod_fit.summary()","86db0029":"train[\"Bull_electricity_sum\"].plot(figsize=(20,8))\nmod_fit.fittedvalues.plot()\nplt.show()","a49939bd":"predict = mod_fit.predict(endog=endog,exog = exog)\ntest['predicted'] = predict.values\ntest.head(5)","d4f1433d":"test[\"Bull_electricity_sum\"].plot(figsize=(20,8))\ntest['predicted'].plot(color = \"red\")\nplt.show()","738eb407":"test['residual'] = abs(test[\"Bull_electricity_sum\"]-test['predicted'])\nMAE = test['residual'].sum()\/len(test)\nMAPE = (abs(test['residual'])\/test[\"Bull_electricity_sum\"]).sum()*100\/len(test)\nprint(\"MAE:\", MAE)\nprint(\"MAPE:\", MAPE)","4fe30184":"mod_fit.resid.plot(figsize= (10,5))","8be82786":"* Looking at the trend graph, there is a cyclic trend each year.\n    * The trend shows increase of electricity usage in the summer months. This may be attributed to longer days in the summer.\n* There seems to be a seasonality component of the data \n* Looking at the residuals, there appears to be randomness in the data ","1924f51a":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","1e151bac":"Wolf corresponds to the buildimgs at University College Dublin located in Dublin, Ireland. ","113f8e35":"**Finding Relationships**","196bbf02":"**Fit Model**","f32bb62a":"**Fit Model**","7cde72fe":"**Train-test Split: first year for training, second year for testing**","91d60404":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","f7afbcb3":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC. ","c3c7de65":"* Looking at the trend graph, there does not seem to be much of a trend throughout each year\n* There seems to be a seasonality component of the data\n* Looking at the residuals, the data does not appear to be fully random. This might be caused from the filling of missing values. ","3db9d7bb":"Mouse corresponds to buildings at Ormand Street Hospital located in London, UK. ","85b38ee8":"**Predict Using Model**","221a0b02":"From the auto arima function, the best model is SARIMAX(0, 1, 0)","ce48e020":"From the graphs, we can see that increases in gas, water and chilled water happen together, but at different magnitudes. Irrigation and electricity usage main relatively steady usage throughout each year. ","d0d02f90":"**Train Model**","ea90f6a7":"**Fit Model**","019876be":"**Fit Model**","ea420860":"**Why is energy forecasting important?**\n\nLong term planning of energy supply-demand needs to satisfy the requirement of sustainable development of the country [[1]](https:\/\/link.springer.com\/article\/10.1007%2Fs12667-016-0203-y#:~:text=Long%2Dterm%20planning%20of%20energy,operations%20of%20the%20supply%20system.). As a result, accurate forecasts are used to know the volume and trend of the future energy consumptions to better schedule and plan the operations of the supply system. This is especially useful in electricity, as it cannot be stored in large amounts and needs constant matching of supply and demand. ","22f8e8ef":"**Fit Model**","f6b5505c":"p-value is not significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is not constant over time","3f371c8b":"* Looking at the trend graph, there seems to be a weak cyclic trend \n    * There seems to be a decrease is usage during the spring\/summer months. This could be attributed to the warmer days during this period. \n* There does not seem to be much of a seasonality component of the data\n* Looking at the residuals, there appears to be randomness in the data","ac944e7a":"**Dickey Fuller's Test**","779682ae":"**Fit Model**","96a73765":"**Train-test Split: first year for training, second year for testing","98428673":"From the graphs, we see that there is not a strong correlation between variables.\n\n* ACF at lags 0, 1 and 2 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0 and 1 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","e51d36b4":"**Train Model**","191b7ce6":"From the auto arima function, the best model is SARIMAX(0, 1, 1)","398d046f":"* Looking at the trend graph, there is a cyclic trend each year.\n    * The trend shows increase of electricity usage in the summer months. This may be attributed to longer days in the summer.\n* There seems to be a seasonality component of the data\n* Looking at the residuals, there appears to be randomness in the data","e7e389d6":"# Bear","e9361aa9":"**Predict Using Model**","b945cc25":"**Predict Using Model**","ec5ff88e":"# Gator","78eda08f":"**Seasonal Decomposition**","07d8168f":"**Finding Relationships**","8836dcfc":"Panther corresponds to the buildings at University of Central Florida located in Orlando, USA.","fe771c63":"**Train-test Split: first year for training, second year for testing**","17403358":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","e5e6896c":"From the graphs, we see that there is not a strong correlation between variables.\n\n* ACF at lags 0 to 4 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0, 1 and 14 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","883303ad":"* Looking at the trend graph, there is a not much of a pattern or trend each year\n* There seems to be a seasonality component of the data\n* Looking at the residuals, there appears to be randomness in the data","3e43ade9":"**Seasonal Decomposition**","bba79a40":"p-value is not significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is not constant over time","ecb8a29b":"**Predict Using Model**","c258a149":"**Train-test Split: first year for training, second year for testing**","8dd4388e":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","95b7bde5":"**Seasonal Decomposition**","0c784de2":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","463473c9":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","7270b6d3":"* Looking at the trend graph, there does not seem to be much of a trend throughout each year\n* There seems to be a seasonality component of the data\n* Looking at the residuals, there appears to be randomness in the data","016eddac":"From the graphs, we see that there is not a strong correlation between variables.\n\n* ACF at lags 0 and 1 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0, 1 and 14 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","dc9390cd":"From the graphs, we see that there is not a strong correlation between variables.\n\n* ACF at lags 0 and 1 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0, 1 and 16 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","2bbfb5db":"**Finding Relationships**","61250a72":"Fox corresponds to the buildings at Arizona State University located in Tempe, USA.","cf75cc7b":"**Train-test Split: first year for training, second year for testing**","514b0101":"From the graphs, we see that there is a strong correlation between variables but the results may not be significant.\n* ACF at lags 0 to 4 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0 and 1 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","0632d236":"From the graphs, we see that there is a not a strong correlation between the variables.\n\n* ACF at lags 0 and 1 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0 and 1 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","f19e38e0":"* Looking at the trend graph, there seems to be a weak cyclic trend throughout the year \n    * There is a decrease in usage in the summer months. This could be attributed to the warmer days during this period. This sugguests that this location does not use electricity for cooling or this location may not have any cooling. \n* There seems to be a seasonality component of the data\n* Looking at the residuals, there appears to be randomness in the data","9e4e4181":"Predictions is similar to the actual trend but exagerated magnitudes.","d93c4699":"**Seasonal Decomposition**","8a4e53cf":"**Train Model**","ac685063":"has no other metric readings other than electricity!","ed6168ad":"**Finding Relationships**","a49ec4c8":"p-value is not significant while checking for stationarity\n\nThis indicates that statistical properities of data, such as standard deviation, mean and variance is not constant over time","f36fec89":"**Dickey Fuller's Test**","ec3b9ca8":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","eae7b341":"# Peacock","3e6f48ab":"**Dickey Fuller's Test**","4865abfa":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","ea9878bb":"From the graphs, we see a relationship betwen steam and hot water usage; as steam usage increases, hot water usage also increases. There is also an inverse relationship between hot water and steam usage and chilled water usage. We see that as steam and hot water usage increases, chilled water decrease. ","d2dc5e7f":"# Crow","6f3566fd":"**Finding Relationships**","f4fb50ad":"From the auto arima function, the best model is SARIMAX(0, 1, 0)","12a9551b":"**Predict Using Model**","b93ca678":"From the graphs, we see that there is not a strong correlation between variables.\n* ACF at lags 0, 1 and 2 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0 and 1 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","b0a488fc":"**Train Model**","7b5a0c7e":"**Predict Using Model**","18f1a845":"# Bull","858cade1":"**Train Model**","283ec5bb":"From the graphs, we see that there is not a strong correlation between variables.\n\n* ACF at lags 0, 1 and 2 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0 and 1 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","6fcf66d6":"**Dickey Fuller's Test**","c7bf0f22":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","f589162d":"**Fit Model**","1db0747a":"# Hog","0633a6ee":"**Dickey Fuller's Test**","7ccef5d2":"Moose corresponds to buildings at Ottawa - City Buildings located in Ottawa, Canada. ","eab19b5e":"**Finding Relationships**","fac54d5c":"**Predict Using Model**","0f0e2b47":"# Future Directions ","f11e4803":"From the auto arima function, the best model is SARIMAX(0, 1, 2) x (1, 0, [], 52)","c468afce":"Eagle buildings locations remain anonymous.","34d76bbe":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","39a88b17":"# Rat","5ea6f158":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","20bb03bb":"Robin corresponds to the buildings at University College London located in London, UK.","b0805e53":"p-value is significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is constant over time","dc657ce7":"**Fit Model**","fcfc008a":"**Finding Relationships**","7fcb0acd":"# Eagle","c582ec9e":"**Dickey Fuller's Test**","41394836":"Bear corresponds to the buildings at University of California - Berkeley located in Berkeley, USA.","c895f60e":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","1b94a647":"**Train-test Split: first year for training, second year for testing**","609ece20":"**Train-tes Split: first year for training, second year for testing**","80a3aa4f":"From the graphs, we can see that hot water and chilled water usage have an inverse relationship; as hot water usage increases, chilled water usage decreases. The pairplot also indicates that steam usage and chilled water usage have an inverse relationship; as steam usage increases, chilled water usage decreases. There is also a linear relationship between hot water usage and steam usage. We can see that an increase in hot water usage also increases steam usage.  ","53feb1b0":"From the graphs, we see a relationship between hot water and steam usage; as hot water usage increases, steam usage increases as well. Additionally, there is an inverse relationship between chilled water usage and hot and steam usage. We see that as hot water and steam usage increases, chilled water usage decreases. Electricity usage stays relatively constant. ","a356dd47":"**Predict Using Model**","646a0095":"From the graphs, we see that there is a not a strong correlation between the variables.\n\n* ACF at lags 0, 1 and 6 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0, 1, 6 and 17 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","7cfe30ad":"* Looking at the trend graph, there seems to be a cyclic trend each year \n    * There is decreased usage of electricity in the spring\/summer months. This could be attributed to the warmer days during this period. \n* There seems to be a seasonality component of the data\n* Looking at the residuals, there appears to be randomness in the data","e5e49de8":"**Fit Model**","27af81fc":"**Train-test Split: first year for training, second year for testing**","055cbfe8":"**ACF PACF**","f950b228":"**ACF PACF**","c4200567":"From the graphs, there is no clear relationship between electricity and gas usage.","fa06a972":"**Finding Relationship**","58cc32f2":"**Train Model**","a597275b":"Bobcat building location remains anonymous.","4f898c7b":"p-value is significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is constant over time","f447b105":"**Seasonal Decomposition**","b8ed65c6":"Lamb corresponds to the buildings at Cardiff - City Buildings located in Cardiff, UK.","2b86bfad":"p-value is not significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is not constant over time","f83a20c7":"From the auto arima function, the best model is SARIMAX(0, 1, 0)","f9ab7dbe":"Rat corresponds to the buildings at Washington DC - City Buildings located in Washington DC, USA.","46bb14ec":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","32d28bc0":"**Predict Using Model**","1bb2a575":"**ACF PACF**","e584e3e7":"**ACF PACF**","c034de8b":"**Train Model**","1d03ce36":"p-value is not significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is not constant over time","f04a5f59":"**Seasonal Decomposition**","5ed3c7aa":"**Seasonal Decomposition**","889f20ec":"* Looking at the trend graph, there does not seem to be much of a trend throughout each year\n* There seems to be a seasonality component of the data\n* Looking at the residuals, there appears to be randomness in the data","60b37364":"p-value is not significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is not constant over time","64186b1b":"**Finding Relationships**","cfa309f6":"**Predict Using Model**","16f90274":"**Train-test Split: first year for training, second year for testing**","9a056dcf":"p-value is significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is constant over time","568d1b88":"**Predict Using Model**","24be4d78":"p-value is significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is constant over time","58b1f32c":"From the auto arima function, the best model is SARIMAX(0, 1, 0)","b150d1ee":"From the auto arima function, the best model is SARIMAX(0, 1, 1)","93751c15":"From the graphs, we can see that the relationship between electricity usage and gas usage is linear, but at different magnitudes; as the electricity usage increase, the gas usage increases as well. ","e953a63b":"**ACF PACF**","565f9fcc":"**ACF PACF**","7d1a20eb":"p-value is significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is constant over time","6f70e5ac":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","168520f5":"**ACF PACF**","457d5cd0":"Hog building location remains anonymous.","296ef369":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","d7d203b9":"* Looking at the trend graph, there does not seem to be much of a trend throughout each year\n* There seems to be a seasonality component of the data\n* Looking at the residuals, there appears to be randomness in the data","b74e8a62":"p-value is not significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is not constant over time","810f3521":"**Predict Using Model**","556d8e8d":"**Seasonal Decomposition**","1f53bd50":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","de09331a":"**Dickey Fuller's Test**","6489a778":"p-value is significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is constant over time","746b803b":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","a3b46f05":"**Finding Relationships**","df72100b":"* Looking at the trend graph, there is a trend each year but of different strengths\n    * The trend shows increase of electricity usage in the summer months. This may be attributed to the warmer days during this period.\n    * This trend is stronger in the first year compared to the second year\n* There seems to be a seasonality component of the data\n* Looking at the residuals, there appears to be randomness in the data","9b3011b5":"**Fit Model**","701c1f1d":"**Predict Using Model**","b5776703":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 15 values will be considered for AFC.\n\n","3af6e968":"From the graphs, there does not seem to be any clear relationships between the types of usages.","add43e46":"**Seasonal Decomposition**","93da7d82":"**Finding Relationships**","230fda28":"From the graphs, we see that there is a not a strong correlation between the variables.\n\n* ACF at lags 0 to 3 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0, 1,13, 18 and 19 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","890f0b02":"**Dickey Fuller's Test**","e120986d":"From the graphs, we see that as electricity usage increase, steam usage increases as well. Chilled water usage does not seem to have a relationship with other meter types.\n\nAdditionally, we see major inconsistent peaks in chilled water usage. This can indicate outliers that were not removed during EDA. ","c6e09340":"**ACF PACF**","d8f6cdda":"From the graphs, there does not seem to be any clear relationships between the types of usages. ","c6d6b43d":"**Seasonal Decomposition**","12ca2112":"From the graph, we can see that there is decreased electricity usage at the start and end of each year.","48dbfe4e":"From the graphs, we see that there is not a strong correlation between variables.\n\n* ACF at lags 0 to 4 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0, 1 ,2 9, 10, 12 and 13 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","aec0f5c4":"**Train Model**","c102614d":"**Train-test Split: first year for training, second year for testing**","f3ad17cd":"Peacock correspond to the buildings at Princeton University located in Princeton, USA.","dce0d6d6":"**Train Model**","3299b781":"**Predict Using Model**","920adad6":"* Looking at the trend graph, there is a trend each year.\n    * The trend shows increase of electricity usage in the fall\/winter months. This may be attributed to the colder days during this period.\n* There seems to be a seasonality component of the data\n* Looking at the residuals, there appears to be randomness in the data","6ece96cf":"**Dickey Fuller's Test**","0f0279a6":"From the graphs, we see that there is not a strong correlation between variables.\n\n* ACF at lags 0 to 3 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at most lags are significant. The rest (lags at 5,14) of the values lie outside of the 95% confidience interval; it may or may not be significant.","6132f0ac":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","f787b8d0":"Considerations: \n* Building characteristics can greatly influence energy consumption [[2]](https:\/\/www.hydroquebec.com\/residential\/customer-space\/electricity-use\/electricity-consumption-factors.html)\n    * Thermal envelope: poorly insulated walls, foundations, roof spaces can cause up to lose of 40% of a building's heat\n    * Air leaks: up to 25% of a building's heat may be escaping through leaks\n    * Doors and windows: the number, size and quality of doors and windows can influence heat lose up to 25%","094d65a3":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model \n\n> start_q = 1: Starting value of 1 for the order of the moving average model \n\n> m = 52: weekly data; the seasonal differencing \n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model \n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons \n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit\n","7f4cb34d":"There does not seem to be any strong relationships between variables. However, the pairplot shows a slight inverse relationship between chilled water usage and steam usage; as chilled water usage increases, steam usage decreases.","b307adc6":"p-value is significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is constant over time","8f2bc9e7":"p-value is not significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is not constant over time","4851cbfc":"**Train Model**","d1fb0f88":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","9a551f85":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","3b913803":"**Seasonal Decomposition**","5fae179c":"p-value is not significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is not constant over time","d05d6b15":"**Train Model**","5613183b":"# Panther","dfe7cbcd":"**ACF PACF**","2c83a90f":"**ACF PACF**","c8c99947":"**Fit Model**","802a2d50":"For the graphs, there is no clear relationship between electricity and hot water usage. Although each meter usage does seem to each have its own yearly trend. ","b94c2e4a":"From the auto arima function, the best model is SARIMAX(0, 1, 0)","5b3c2f79":"# Cockatoo","11f1a8b6":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","0348d35c":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","491f5a6a":"**Train Model**","f8c0cd03":"From the graphs, we see that there is not a strong correlation between variables.\n\n* ACF at lags 0 and 4 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0 and 4 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","c3fa035e":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","04b92355":"**ACF PACF**","abd5262c":"* Looking at the trend graph, there is a cyclic trend each year.\n    * There is increased usage in the winter months. This could be attributed to the colder days during this period. \n* There seems to be a seasonality component of the data\n* Looking at the residuals, there appears to be randomness in the data","5b53f7ec":"Bull corresponds to the buildings at University of Texas - Austin located in Austin, USA.","a7327043":"* Looking at the trend graph, there does not seem to be much of a trend throughout the first year, but linear trend the second year\n    * This could indicate unrepresentative data from data sets. Improper data filling could have occured for this site. \n* There seems to be a seasonality component of the data\n* Looking at the residuals, there appears to be randomness in the data","6fe452f4":"p-value is not significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is not constant over time","1ab833a8":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","4b677193":"**Train-test Split: first year for training, second year for testing**","f6104aa1":"From the graphs, we see that there is a not a strong correlation between the variables.\n\n* ACF at lags 0 ro 3 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0, 1, 5, 6, 17 and 18 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","6fc1c6a6":"**Seasonal Decomposition**","ad9bb9e1":"**Predict Using Model**","8edae75b":"**ACF PACF**","e69d1816":"* Looking at the trend graph, there is no strong trend each year.\n    * The graph shows slightly higher usage in the summer months with may be attributed to the longer days during this period.\n* There seems to be a seasonality component of the data\n* Looking at the residuals, there appears to be randomness in the data","d0ea581e":"From the auto arima function, the best model is SARIMAX(0, 1, 0)","297de0ef":"* Looking at the trend graph, there does not seem to be much of a trend throughout the first year. But a linear trend in the second year.\n    * This could indicate faulty data. \n* There seems to be a seasonality component of the data\n* Looking at the residuals, there appears to be randomness only in the first half of data.","9daec614":"Crow corresponds to the buildings at Carleton University located in Ottawa, Canada.","26527065":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","0b68513d":"# Analysis of Meter Readings per Location","c84efee9":"**Predict Using Model**","68ac505d":"**Dickey Fuller's Test**","97ba717f":"From the auto arima function, the best model is SARIMAX(0, 1, 0)","e9342d60":"**Fit Model**","f5858bd7":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","9340eba6":"**Fit Model**","61443d8e":"From the auto arima function, the best model is SARIMAX(0, 1, 1)","e7b5b32c":"**Train Model**","cc24665b":"**ACF PACF**","d3d66aa8":"**Dickey Fuller's Test**","b02510ed":"**Seasonal Decomposition**","6192e5f5":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 15 values will be considered for AFC.","38a663cd":"**Dickey Fuller's Test**","2b906a0a":"**Dickey Fuller's Test**","a09cff53":"From the graphs, we can see that there is no clear trend throughout the two years.","56baf20a":"**Predict Using Model**","c0a06914":"# Mouse","015a9670":"From the auto arima function, the best model is SARIMAX(0, 1, 0)","4113304d":"**ACF PACF**","d4ccabcb":"From the graphs, we see that there is a correlation between variables but the results may not be significant.\n\n* ACF at lags 0 to 2 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0, 1, 11 and 13 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","f0d64bde":"**ACF PACF**","a47c757e":"From the graph, there does not seem to be any patterns or trends.","e367dd1e":"**Seasonal Decomposition**","8250f416":"**Train-test Split: first year for training, second year for testing**","28229e3b":"**Dickey Fuller's Test**","5305c07f":"**Seasonal Decomposition**","2c542c95":"**Finding Relationships**","273749b5":"**Dickey Fuller's Test**","ce74d2d8":"From the auto arima function, the best model is SARIMAX(0, 1, 1)","0e080df1":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","ec7abcf8":"**ACF PACF**","d41c03d5":"**Finding Relationships**","30faba82":"# Moose","b28622bc":"**Dickey Fuller's Test**","8db547a1":"**Train-test Split: first year for training, second year for testing**","95e1d10e":"**Finding Relationships**","8dc66a1b":"From the auto arima function, the best model is SARIMAX(0, 1, 1)","665bc3ea":"From the graphs, we see that there is not a strong correlation between variables.\n* ACF at lags 0 and 1 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0 and 1 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","214ec218":"**Fit Model**","93b9a7d3":"**Fit Model**","95a5260d":"    \nIdeas: \n* What is the most common type of energy at a location and how does the correspond to our buildings \n* How does each location compare to others in the region\n* Find the main energy type of the location and remodel\n    * We based the assumption that every location is using electricity as primary energy source, which may not be correct.","0d0c19ce":"From the graph, we see that there is decreasing electricity usage at the start and end of each year.","4d3fbdd6":"**Dickey Fuller's Test**","0b5fa66e":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","ea696454":"From the graphs, we see that there is not a strong correlation between variables.\n\n* ACF at lags 0 to 2 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0 and 1 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","633e8a03":"**Train-test Split: first year for traning, second year for testing**","adbd9f6d":"From the graphs, we see that there is not a strong correlation between variables.\n\n* ACF at lag at 0 is significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.\n* PACF at lags 0, 15, 16 and 19 are significant. The rest of the values lie outside of the 95% confidience interval; it may or may not be significant.","1a72a8a3":"**Seasonal Decomposition**","28cad6cf":"**Train Model**","a19f7f51":"**Train Model**","3826f0f4":"Shrew corresponds to the buildings at UK Parliment located in London, UK.","0f0729a6":"**Finding Relationships**","c39dd07a":"For the graphs, we can see that as electricity usage is increasing, chilled water usage is also increasing. Hot water usage has an inverse relationship of electricity and chilled water usage; as hot water usage increases, electricity and chilled water usage decreases. ","fd36b9f0":"**Train Model**","8fddc59f":"**Fit Model**","14d33004":"From the auto arima function, the best model is SARIMAX(0, 1, 1)","527a1e3a":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","2f733109":"# Wolf","d54a1b39":"**Train-test Split: first year for training, second year for testing**","28a60c96":"Cockatoo corresponds to the buildings at Cornell University located in Cornell, USA.","9086a006":"**Finding Relationships**","3977e602":"**Seasonal Decomposition**","4380d290":"From the auto arima function, the best model is SARIMAX(0, 1, 1)","c1675c0f":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","becbb17e":"**ACF PACF**","688ec721":"# Lamb","f49a60af":"What we did:\n* Used cleaned datasets for modelling and predictions (Dataset cleaning can be found in other kernels)\n    * Combined dataset can be found here: https:\/\/www.kaggle.com\/julietian\/combined-all-8-meter-datasets\n* Created Prediction models for electricity consumption per location \n    * With other meter readings as exogenuous variables\n* Explored relationships between each type of meter usage per location\n","64249d14":"From the graphs, there does not seem to be a stong relationship between any variables. However, slight increases in water usage also shows slight increases in electricity usage. ","2ce8f20e":"**Train-test Split: first year for training, second year for testing**","1e5bc6de":"**ACF PACF**","37bf32e0":"**Train-test Split: first year for training, second year for testing**","14d4b0b8":"**Fit Model**","fc21cabb":"ACF becomes more unreliable as lag value increases. There are a total of 52 oberservations in train, the first 20 values will be considered for AFC.","6cdd104d":"From the graphs, we can see an inverse relationship between chilled water and hot water usage; as chilled water usage increases, hot water usage decreases. Electricity usage remains constant. ","04a95bd4":"# Bobcat","30634822":"> start_p = 1: Starting value of 1 for the order\/number of time lages of the auto regressive model\n\n> start_q = 1: Starting value of 1 for the order of the moving average model\n\n> m = 52: weekly data; the seasonal differencing\n\n> start_P = 0: Starting value of 0 for the order of the auto regressive portion of the seasonal model\n\n> seasonal = True: fit to a seasonal model; since energy can vary between seasons\n\n> trace = True: print status on fitting\n\n> stepwise = True: Faster method of fitting all hyper-parameter combinations and is less likely to over fit","c71c9ab9":"Gator building locations remains anonymous.","a7fb9222":"**Finding Relationships**","89af20bf":"**Finding Relationships**","9d91a77a":"From the auto arima function, the best model is SARIMAX(0, 1, 0)","007a66d2":"p-value is significant while checking for stationarity\n\n* This indicates that statistical properities of data, such as standard deviation, mean and variance is constant over time","108efee3":"**Predict Using Model**","b2575da6":"From the auto arima function, the best model is SARIMAX(0, 1, 0)","e3a8d6c9":"# Robin","4a57873f":"**Train Model**","fecda242":"# Fox","eab73b21":"**Train Model**","cba345c8":"**Dickey Fuller's Test**","23d35184":"# Shrew","f49bf12b":"* Looking at the trend graph, there does not seem to be much of a trend throughout each year\n* There seems to be a weak seasonality component of the data \n* Looking at the residuals, there appears to be randomness in the data ","cc45343b":"* Looking at the trend graph, there is a cyclic trend each year \n    * There is increased usage in the summer months. This could be attributed to the longer days during this period.\n* There seems to be a seasonality component of the data\n* Looking at the residuals, there appears to be randomness in the data","a605b034":"**Train-test Split: first year for training, second year for testing**"}}