{"cell_type":{"0ab9743d":"code","208e112a":"code","06e6dac7":"code","0a0fbf6b":"code","491c8ba2":"code","a592e9b2":"code","10335512":"code","ccea7794":"code","a67c5f85":"code","b953ac0a":"code","b281cd00":"code","061fecc9":"code","2955fc88":"code","9f08ad8d":"code","5c271ece":"code","d72bbef3":"code","624cbe8a":"code","be4ad636":"code","a57f1c9f":"code","34a38ed4":"code","9633e9d1":"code","a0fe8916":"code","1b9f1055":"code","cb2dfd79":"code","a84ff855":"code","3dabf937":"code","6446ad7b":"code","d6a3b44d":"markdown","b844a569":"markdown","be359d42":"markdown","60795c81":"markdown","0c85e64d":"markdown","a639540d":"markdown","a0d30714":"markdown","aafffb0e":"markdown","5f804c02":"markdown","5bc08ce3":"markdown","ec86dc0a":"markdown","9b01e40d":"markdown","b6082e3e":"markdown","ad3dc270":"markdown","0a0b0449":"markdown","5ec60096":"markdown","e076df05":"markdown","a8856b26":"markdown","03d6b15f":"markdown"},"source":{"0ab9743d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport folium # plotting library\nfrom folium import plugins\n\nfrom sklearn.cluster import KMeans\nfrom sklearn.decomposition import PCA\n\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\nimport matplotlib.colors as colors\n\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","208e112a":"#\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e19pd\ndf = pd.read_csv('..\/input\/us-weather-events\/US_WeatherEvents_2016-2019.csv') \n\ndf.head()","06e6dac7":"#\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\ndf.info()","0a0fbf6b":"#\u0e40\u0e0a\u0e47\u0e04\u0e14\u0e39\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28\ndf['Type'].value_counts()\n","491c8ba2":"#\u0e40\u0e0a\u0e47\u0e04\u0e14\u0e39\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28\ndf['Severity'].value_counts()","a592e9b2":"\ndf = df[(df['Severity'] != 'UNK') & (df['Severity'] != 'Other')]\n\ndf.head()","10335512":"#\u0e40\u0e0a\u0e47\u0e04\u0e14\u0e39\u0e40\u0e2b\u0e15\u0e38\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e2a\u0e19\u0e32\u0e21\u0e1a\u0e34\u0e19\u0e01\u0e31\u0e1a\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17\u0e02\u0e2d\u0e07\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28\u0e17\u0e35\u0e48\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\ndf_types = df[['AirportCode','Type']]\n\ndf_types.head()","ccea7794":"#\u0e40\u0e0a\u0e47\u0e04\u0e08\u0e33\u0e19\u0e32\u0e19\u0e40\u0e2b\u0e15\u0e38\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28\u0e02\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2a\u0e19\u0e32\u0e21\u0e1a\u0e34\u0e19\ntypes = pd.get_dummies(df_types['Type']) \n\ntypes['AirportCode'] = df_types['AirportCode']\n\ntypes = types.groupby('AirportCode').sum().reset_index()\n\ntypes.head()","a67c5f85":"codes = types[['AirportCode']]\ntypes.drop('AirportCode', axis=1, inplace=True)","b953ac0a":"#Elbow method \ndistortions = [] #\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2d\u0e32\u0e40\u0e23\u0e22\u0e4c\u0e44\u0e27\u0e49\u0e40\u0e01\u0e47\u0e1a\u0e04\u0e48\u0e32\u0e04\u0e27\u0e32\u0e21\u0e04\u0e25\u0e32\u0e14\u0e40\u0e04\u0e25\u0e37\u0e48\u0e2d\u0e19\nK = range(1,20)\nfor k in K: #\u0e27\u0e19\u0e25\u0e39\u0e1b\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32\u0e04\u0e48\u0e32Kmean\n    kmean = KMeans(n_clusters=k, random_state=0, n_init = 50, max_iter = 500)\n    kmean.fit(types) #\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e08\u0e33\u0e25\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e40\u0e23\u0e35\u0e22\u0e19\u0e23\u0e39\u0e49\u0e02\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 types\n    distortions.append(kmean.inertia_) #.inertia_\u0e04\u0e37\u0e2d\u0e04\u0e48\u0e32\u0e1c\u0e25\u0e23\u0e27\u0e21\u0e04\u0e27\u0e32\u0e21\u0e04\u0e25\u0e32\u0e14\u0e40\u0e04\u0e25\u0e37\u0e48\u0e2d\u0e19\u0e01\u0e33\u0e25\u0e31\u0e07\u0e2a\u0e2d\u0e07 (SSE) \u0e02\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e41\u0e1a\u0e48\u0e07\u0e01\u0e25\u0e38\u0e48\u0e21","b281cd00":"#\u0e1e\u0e25\u0e47\u0e2d\u0e15\u0e01\u0e23\u0e32\u0e1f\nplt.figure(figsize=(10,5))\nplt.plot(K, distortions, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Distortion')\nplt.title('The Elbow Method')\nplt.show()","061fecc9":"# run k-means clustering \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e04\u0e48\u0e32 4 \nkmeans = KMeans(n_clusters=4, random_state=0).fit(types)\n\ncodes['cluster'] = kmeans.labels_\ncodes.head()","2955fc88":"#\u0e40\u0e15\u0e23\u0e35\u0e22\u0e21\u0e1a\u0e35\u0e1a\u0e2d\u0e31\u0e14\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 \u0e15\u0e31\u0e14\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e17\u0e35\u0e48\u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e33\u0e04\u0e31\u0e0d\u0e19\u0e49\u0e2d\u0e22\u0e2d\u0e2d\u0e01\u0e44\u0e1b\npca = PCA().fit(types)\npca_types = pca.transform(types)\nprint(\"Variance explained by each component (%): \")\nfor i in range(len(pca.explained_variance_ratio_)):\n      print(\"\\n\",i+1,\"\u00ba:\", pca.explained_variance_ratio_[i]*100)\nprint(\"Total sum (%): \",sum(pca.explained_variance_ratio_)*100)\nprint(\"Explained variance of the first two components (%): \",sum(pca.explained_variance_ratio_[0:1])*100)","9f08ad8d":"c0 = [] #\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2d\u0e32\u0e23\u0e4c\u0e40\u0e23\u0e22\u0e4c\u0e44\u0e27\u0e49\u0e40\u0e01\u0e47\u0e1a\u0e04\u0e48\u0e32 pca_types \nc1 = []\nc2 = []\nc3 = []\n \nfor i in range(len(pca_types)):  #\u0e27\u0e19\u0e25\u0e39\u0e1b\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e0a\u0e47\u0e04\u0e04\u0e48\u0e32 kmeans.labels_[i]\u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19 append \u0e04\u0e48\u0e32 pca_types \u0e40\u0e01\u0e47\u0e1a\u0e44\u0e27\u0e49\u0e43\u0e19\u0e2d\u0e32\u0e23\u0e4c\u0e40\u0e23\u0e22\u0e4c\n    if kmeans.labels_[i] == 0:\n        c0.append(pca_types[i])\n    if kmeans.labels_[i] == 1:\n        c1.append(pca_types[i])\n    if kmeans.labels_[i] == 2:\n        c2.append(pca_types[i])\n    if kmeans.labels_[i] == 3:\n        c3.append(pca_types[i])\n        \n        \nc0 = np.array(c0) #\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e40\u0e01\u0e47\u0e1a\u0e04\u0e48\u0e32\u0e2d\u0e32\u0e23\u0e4c\u0e40\u0e23\u0e22\u0e4c\nc1 = np.array(c1)\nc2 = np.array(c2)\nc3 = np.array(c3)\n\nplt.figure(figsize=(7,7)) #\u0e40\u0e23\u0e34\u0e48\u0e21\u0e1e\u0e25\u0e47\u0e2d\u0e15\u0e01\u0e23\u0e32\u0e1f\nplt.scatter(c0[:,0], c0[:,1], c='red', label='Cluster 0')\nplt.scatter(c1[:,0], c1[:,1], c='blue', label='Cluster 1')\nplt.scatter(c2[:,0], c2[:,1], c='green', label='Cluster 2')\nplt.scatter(c3[:,0], c3[:,1], c='black', label='Cluster 3')\nplt.legend()\nplt.xlabel('PC1')\nplt.ylabel('PC2')\nplt.title('Low dimensional visualization (PCA) - Airports');","5c271ece":"#\u0e41\u0e2a\u0e14\u0e07\u0e15\u0e32\u0e23\u0e32\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28  cluster \u0e41\u0e25\u0e30 \u0e2a\u0e19\u0e32\u0e21\u0e1a\u0e34\u0e19\ntypes['cluster']  = kmeans.labels_\n\ntypes.head()","d72bbef3":"types.groupby('cluster').mean() #\u0e41\u0e2a\u0e14\u0e07\u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\u0e02\u0e2d\u0e07\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28\u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30 cluster","624cbe8a":"#\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28 Cold\nsns.catplot(x='cluster', y='Cold', data=types, kind='bar');","be4ad636":"#\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28 Fog\nsns.catplot(x='cluster', y='Fog', data=types, kind='bar');","a57f1c9f":"#\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28 Rain\nsns.catplot(x='cluster', y='Rain', data=types, kind='bar');","34a38ed4":"#\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28 Snow\nsns.catplot(x='cluster', y='Snow', data=types, kind='bar');","9633e9d1":"#\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28 Storm\nsns.catplot(x='cluster', y='Storm', data=types, kind='bar');","a0fe8916":"latitude = 38.500000\nlongitude = -95.665\n\nmap_USA = folium.Map(location=[latitude, longitude], zoom_start=4)\n\nmap_USA","1b9f1055":"airports = df[['AirportCode', 'LocationLat','LocationLng','City','State']]\n\nairports.head()","cb2dfd79":"number_of_occurences = pd.DataFrame(airports['AirportCode'].value_counts())\nnumber_of_occurences.reset_index(inplace=True)\nnumber_of_occurences.columns = ['AirportCode', 'Count']\nnumber_of_occurences.head()","a84ff855":"number_of_occurences = number_of_occurences.merge(airports.drop_duplicates())\n\nnumber_of_occurences = number_of_occurences.merge(codes)\n\nnumber_of_occurences.head()","3dabf937":"occurences = folium.map.FeatureGroup()\nn_mean = number_of_occurences['Count'].mean()\n\nfor lat, lng, number, city, state in zip(number_of_occurences['LocationLat'],\n                                         number_of_occurences['LocationLng'],\n                                         number_of_occurences['Count'],\n                                         number_of_occurences['City'],\n                                         number_of_occurences['State'],):\n    occurences.add_child(\n        folium.vector_layers.CircleMarker(\n            [lat, lng],\n            radius=number\/n_mean*5, # define how big you want the circle markers to be\n            color='yellow',\n            fill=True,\n            fill_color='blue',\n            fill_opacity=0.6,\n            tooltip = str(number)+','+str(city) +','+ str(state)\n        )\n    )\n\nmap_USA.add_child(occurences)","6446ad7b":"map_clusters = folium.Map(location=[latitude, longitude], zoom_start=4)\n\n# set color scheme for the clusters\nx = np.arange(4)\nys = [i + x + (i*x)**2 for i in range(4)]\ncolors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\nrainbow = [colors.rgb2hex(i) for i in colors_array]\n\n# add markers to the map\nmarkers_colors = []\nfor lat, lng, cluster, city, state in zip(number_of_occurences['LocationLat'], number_of_occurences['LocationLng'],  \n                                            number_of_occurences['cluster'],\n                                         number_of_occurences['City'],\n                                         number_of_occurences['State']):\n    #label = folium.Popup(str(city)+ ','+str(state) + '- Cluster ' + str(cluster), parse_html=True)\n    folium.vector_layers.CircleMarker(\n        [lat, lng],\n        radius=5,\n        #popup=label,\n        tooltip = str(city)+ ','+str(state) + '- Cluster ' + str(cluster),\n        color=rainbow[cluster-1],\n        fill=True,\n        fill_color=rainbow[cluster-1],\n        fill_opacity=0.9).add_to(map_clusters)\n       \nmap_clusters","d6a3b44d":"## 5. Model, predict and solve the problem.","b844a569":"\u0e1e\u0e25\u0e47\u0e2d\u0e15\u0e01\u0e23\u0e32\u0e1f\u0e02\u0e2d\u0e07\u0e04\u0e48\u0e32 cluster \u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28","be359d42":"## 2. Acquire training and testing data\n\n","60795c81":"clean data \u0e42\u0e14\u0e22\u0e01\u0e32\u0e23\u0e01\u0e23\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07 Severity \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 UNK(unknown) \u0e41\u0e25\u0e30 Other \u0e15\u0e31\u0e14\u0e17\u0e34\u0e49\u0e07\u0e44\u0e1b\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e44\u0e21\u0e48\u0e08\u0e33\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e0a\u0e49","0c85e64d":"\u0e2b\u0e32 PCA \u0e0b\u0e36\u0e48\u0e07\u0e04\u0e37\u0e2d PCA \u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e17\u0e35\u0e48\u0e2a\u0e33\u0e04\u0e31\u0e0d\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e2d\u0e49\u0e32\u0e07\u0e2d\u0e34\u0e07\u0e08\u0e32\u0e01\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25","a639540d":"\u0e21\u0e32\u0e14\u0e39 clusters \u0e02\u0e2d\u0e07\u0e40\u0e23\u0e32","a0d30714":"\u0e08\u0e32\u0e01\u0e01\u0e23\u0e32\u0e1f The elbow method \u0e17\u0e33\u0e43\u0e2b\u0e49\u0e44\u0e14\u0e49\u0e04\u0e48\u0e32 Optimal cluster number \u0e2d\u0e22\u0e39\u0e48\u0e17\u0e35\u0e48\u0e04\u0e48\u0e32 4 \u0e2b\u0e23\u0e37\u0e2d \u0e04\u0e48\u0e32 5 \u0e0b\u0e36\u0e48\u0e07\u0e44\u0e14\u0e49\u0e21\u0e32\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e25\u0e32\u0e01\u0e40\u0e2a\u0e49\u0e19\u0e15\u0e23\u0e07\u0e08\u0e32\u0e01\u0e08\u0e38\u0e14\u0e40\u0e23\u0e34\u0e48\u0e21\u0e44\u0e1b\u0e22\u0e31\u0e07\u0e1b\u0e25\u0e32\u0e22\u0e40\u0e2a\u0e49\u0e19\u0e42\u0e04\u0e49\u0e07 \u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19\u0e2b\u0e32\u0e23\u0e30\u0e22\u0e30\u0e08\u0e32\u0e01\u0e40\u0e2a\u0e49\u0e19\u0e15\u0e23\u0e07\u0e15\u0e31\u0e49\u0e07\u0e09\u0e32\u0e01\u0e01\u0e31\u0e1a\u0e40\u0e2a\u0e49\u0e19\u0e42\u0e04\u0e49\u0e07\u0e17\u0e35\u0e48\u0e21\u0e35\u0e23\u0e30\u0e22\u0e30\u0e2b\u0e48\u0e32\u0e07\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14","aafffb0e":"\u0e08\u0e30\u0e40\u0e2b\u0e47\u0e19\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32\u0e2a\u0e19\u0e32\u0e21\u0e1a\u0e34\u0e19\u0e17\u0e35\u0e48\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e25\u0e07\u0e08\u0e2d\u0e14\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e01\u0e47\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e17\u0e32\u0e07\u0e40\u0e2b\u0e19\u0e37\u0e2d\u0e02\u0e2d\u0e07\u0e0a\u0e32\u0e22\u0e1d\u0e31\u0e48\u0e07\u0e15\u0e30\u0e27\u0e31\u0e19\u0e15\u0e01 \u0e41\u0e15\u0e48\u0e17\u0e31\u0e48\u0e27\u0e44\u0e1b\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e04\u0e27\u0e32\u0e21\u0e40\u0e14\u0e37\u0e2d\u0e14\u0e23\u0e49\u0e2d\u0e19\u0e19\u0e49\u0e2d\u0e22\u0e2a\u0e38\u0e14\u0e01\u0e47\u0e08\u0e30\u0e2d\u0e2d\u0e01\u0e2b\u0e48\u0e32\u0e07\u0e08\u0e32\u0e01\u0e0a\u0e32\u0e22\u0e1d\u0e31\u0e48\u0e07\u0e08\u0e32\u0e01\u0e40\u0e2b\u0e15\u0e38\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28","5f804c02":"## 4. Analyze, identify patterns, and explore the data.\n k-Means Clustering\n","5bc08ce3":"\u0e2a\u0e23\u0e38\u0e1b\u0e1a\u0e32\u0e07\u0e17\u0e35\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49 5 \u0e01\u0e25\u0e38\u0e48\u0e21\u0e2d\u0e32\u0e08\u0e40\u0e1b\u0e34\u0e14\u0e40\u0e1c\u0e22\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e32\u0e14\u0e39\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07\u0e40\u0e23\u0e32\u0e44\u0e14\u0e49\u0e14\u0e35\u0e02\u0e36\u0e49\u0e19 clusters 1 \u0e22\u0e31\u0e07\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e44\u0e27\u0e49\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e0a\u0e31\u0e14\u0e40\u0e08\u0e19 \u0e19\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e19\u0e35\u0e49\u0e01\u0e32\u0e23\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e17\u0e35\u0e48\u0e14\u0e35\u0e02\u0e36\u0e49\u0e19\u0e02\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30 clusters \u0e2d\u0e32\u0e08\u0e41\u0e2a\u0e14\u0e07\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e32\u0e40\u0e2b\u0e47\u0e19\u0e16\u0e36\u0e07\u0e04\u0e27\u0e32\u0e21\u0e41\u0e15\u0e01\u0e15\u0e48\u0e32\u0e07\u0e2d\u0e37\u0e48\u0e19\u0e46\u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30 clusters\n","ec86dc0a":"\u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e13\u0e2b\u0e32\u0e08\u0e38\u0e14\u0e02\u0e2d\u0e07\u0e40\u0e2a\u0e49\u0e19\u0e42\u0e04\u0e49\u0e07\u0e17\u0e35\u0e48\u0e21\u0e35\u0e08\u0e33\u0e19\u0e27\u0e19 Cluster \u0e17\u0e35\u0e48\u0e40\u0e2b\u0e21\u0e32\u0e30\u0e2a\u0e21\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e19\u0e31\u0e49\u0e19\u0e42\u0e14\u0e22\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e04\u0e48\u0e32 k \u0e17\u0e35\u0e48\u0e40\u0e2b\u0e21\u0e32\u0e30\u0e2a\u0e21\u0e2b\u0e23\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e04\u0e48\u0e32 Optimal cluster number \u0e08\u0e30\u0e43\u0e0a\u0e49\u0e27\u0e34\u0e18\u0e35 Elbow method","9b01e40d":"\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e41\u0e23\u0e01 \u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e41\u0e1c\u0e19\u0e17\u0e35\u0e48\u0e2a\u0e2b\u0e23\u0e31\u0e10\u0e2d\u0e40\u0e21\u0e23\u0e34\u0e01\u0e32\u0e01\u0e48\u0e2d\u0e19  \u0e41\u0e1c\u0e19\u0e17\u0e35\u0e48\u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07\u0e01\u0e47\u0e08\u0e30\u0e41\u0e2a\u0e14\u0e07\u0e2a\u0e19\u0e32\u0e21\u0e1a\u0e34\u0e19\u0e41\u0e25\u0e30\u0e08\u0e33\u0e19\u0e27\u0e19\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28\u0e17\u0e35\u0e48\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e43\u0e19\u0e2a\u0e19\u0e32\u0e21\u0e1a\u0e34\u0e19\u0e19\u0e31\u0e49\u0e19\u0e41\u0e25\u0e30\u0e08\u0e30\u0e41\u0e2a\u0e14\u0e07\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e32\u0e40\u0e2b\u0e47\u0e19\u0e01\u0e25\u0e38\u0e48\u0e21\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e1c\u0e48\u0e32\u0e19 k-Means","b6082e3e":"## 1. Question and problem definition\n\n\u0e08\u0e32\u0e01\u0e1b\u0e31\u0e0d\u0e2b\u0e32\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28\u0e02\u0e2d\u0e07\u0e2a\u0e2b\u0e23\u0e31\u0e10\u0e2d\u0e40\u0e21\u0e23\u0e34\u0e01\u0e32\u0e17\u0e35\u0e48\u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e41\u0e15\u0e01\u0e15\u0e48\u0e32\u0e07 \u0e17\u0e35\u0e48\u0e2a\u0e48\u0e07\u0e1c\u0e25\u0e15\u0e48\u0e2d\u0e01\u0e32\u0e23\u0e25\u0e07\u0e08\u0e2d\u0e14\u0e02\u0e2d\u0e07\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e1a\u0e34\u0e19 \u0e14\u0e31\u0e49\u0e07\u0e19\u0e31\u0e49\u0e19\u0e40\u0e23\u0e32\u0e08\u0e36\u0e07\u0e2d\u0e22\u0e32\u0e01\u0e08\u0e30\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28\u0e17\u0e35\u0e48\u0e41\u0e15\u0e01\u0e15\u0e48\u0e32\u0e07\u0e02\u0e2d\u0e07\u0e2a\u0e19\u0e32\u0e21\u0e1a\u0e34\u0e19\u0e19\u0e31\u0e49\u0e19\u0e46\u0e14\u0e49\u0e27\u0e22\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e43\u0e2b\u0e49\u0e40\u0e2b\u0e47\u0e19\u0e20\u0e32\u0e1e\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07\u0e2a\u0e20\u0e32\u0e1e\u0e2d\u0e32\u0e01\u0e32\u0e28 \u0e41\u0e25\u0e30\u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e25\u0e07\u0e08\u0e2d\u0e14\u0e02\u0e2d\u0e07\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e1a\u0e34\u0e19\u0e42\u0e14\u0e22\u0e27\u0e34\u0e18\u0e35\u0e02\u0e2d\u0e07Unsupervised Learning\u0e41\u0e1a\u0e1aclustering","ad3dc270":"\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e08\u0e33\u0e19\u0e27\u0e19\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e21\u0e35\u0e02\u0e19\u0e32\u0e14\u0e43\u0e2b\u0e0d\u0e48\u0e01\u0e27\u0e48\u0e32\u0e08\u0e33\u0e19\u0e27\u0e19\u0e04\u0e38\u0e13\u0e2a\u0e21\u0e1a\u0e31\u0e15\u0e34\u0e40\u0e23\u0e32\u0e08\u0e36\u0e07\u0e41\u0e01\u0e49\u0e1b\u0e31\u0e0d\u0e2b\u0e32\u0e08\u0e32\u0e01 5 PC \u0e43\u0e2b\u0e49\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e41\u0e04\u0e48\u0e2a\u0e2d\u0e07 PC \u0e41\u0e23\u0e01\u0e0b\u0e36\u0e48\u0e07\u0e08\u0e30\u0e40\u0e2b\u0e47\u0e19\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32\u0e01\u0e47\u0e22\u0e31\u0e07\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e23\u0e31\u0e01\u0e29\u0e32\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e44\u0e14\u0e49\u0e16\u0e36\u0e07 63% \u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19\u0e16\u0e36\u0e07\u0e25\u0e14\u0e02\u0e19\u0e32\u0e14\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07\u0e40\u0e23\u0e32\u0e21\u0e32\u0e43\u0e0a\u0e49\u0e2a\u0e2d\u0e07 PC \u0e41\u0e23\u0e01\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e43\u0e2b\u0e49\u0e40\u0e2b\u0e47\u0e19\u0e20\u0e32\u0e1e\u0e07\u0e48\u0e32\u0e22\u0e02\u0e36\u0e49\u0e19\n","0a0b0449":"## 6. Visualize, report, and present the problem solving steps and final solution.","5ec60096":"\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e1e\u0e25\u0e47\u0e2d\u0e15\u0e01\u0e23\u0e32\u0e1f cluster 0 \u0e08\u0e30\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e1c\u0e25\u0e01\u0e23\u0e30\u0e17\u0e1a\u0e21\u0e32\u0e01\u0e2a\u0e38\u0e14\u0e08\u0e32\u0e01 snow \u0e41\u0e25\u0e30 cold \u0e41\u0e25\u0e30 cluster 3 rains\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e1c\u0e25\u0e01\u0e23\u0e17\u0e1a\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 ","e076df05":" \u0e08\u0e30\u0e40\u0e2b\u0e47\u0e19\u0e27\u0e48\u0e32 clusters 0 \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e25\u0e38\u0e48\u0e21\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e1c\u0e25\u0e01\u0e23\u0e30\u0e17\u0e1a\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e08\u0e32\u0e01\u0e40\u0e2b\u0e15\u0e38\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e2b\u0e34\u0e21\u0e30\u0e2a\u0e48\u0e27\u0e19\u0e43\u0e2b\u0e0d\u0e48\u0e15\u0e31\u0e49\u0e07\u0e2d\u0e22\u0e39\u0e48\u0e17\u0e32\u0e07\u0e15\u0e2d\u0e19\u0e40\u0e2b\u0e19\u0e37\u0e2d\u0e02\u0e2d\u0e07\u0e2a\u0e2b\u0e23\u0e31\u0e10\u0e2d\u0e40\u0e21\u0e23\u0e34\u0e01\u0e32\u0e43\u0e01\u0e25\u0e49\u0e01\u0e31\u0e1a\u0e41\u0e04\u0e19\u0e32\u0e14\u0e32","a8856b26":"## 3. Wrangle, prepare, cleanse the data","03d6b15f":"\u0e1e\u0e25\u0e47\u0e2d\u0e15\u0e01\u0e23\u0e32\u0e1f\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e17\u0e33 PCA \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07 Model "}}