{"cell_type":{"910dbd5b":"code","a0c907bd":"code","391af321":"code","989fb5b0":"code","a649a2bc":"code","535245ac":"code","4d13ac6b":"code","98be1d7b":"code","bb7eed54":"markdown","4fb03bb2":"markdown","7f5b8b42":"markdown","eef637ac":"markdown","ab71e835":"markdown","55b34ae2":"markdown"},"source":{"910dbd5b":"import os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nfrom PIL import Image","a0c907bd":"dir_input = '\/kaggle\/input\/african-fabric\/africa_fabric'","391af321":"def plot_imgs(item_dir, title=\" \", num_imgs=4):\n    all_item_dirs = os.listdir(item_dir)\n    item_files = [os.path.join(item_dir, file) for file in all_item_dirs][:num_imgs]\n\n    plt.figure(figsize=(10, 10))\n    for idx, img_path in enumerate(item_files):\n        try:\n            plt.subplot(4, 4, idx+1)\n            img = plt.imread(img_path, 0)\n            plt.title(title)\n            plt.imshow(img)\n        except:\n            continue\n    plt.tight_layout()","989fb5b0":"plot_imgs(dir_input, num_imgs=16)","a649a2bc":"def check_size(item_dir):\n    all_item_dirs = os.listdir(item_dir)\n    item_files = [os.path.join(item_dir, file) for file in all_item_dirs]\n    print(\"Number of images: {}\".format(len(all_item_dirs)))\n    \n    for idx, img_path in enumerate(item_files):\n        try:\n            img = Image.open(img_path)\n            width, height = img.size\n            \n            if width==64 or height==64:\n                continue\n            else:\n                print(\"Width: {}, height: {}\".format(width, height))\n        except:\n            continue\n        \n    print(\"All sizes are (64,64)\")","535245ac":"check_size(dir_input)\n#53 imgs on 20 imgs","4d13ac6b":"def createImageGrid(path_images): \n    \n    all_item_dirs = os.listdir(path_images)\n    item_files = [os.path.join(path_images, file) for file in all_item_dirs]\n\n    m, n = 53, 20 \n\n    width = 64\n    height = 64\n\n    # create output image \n    grid_img = Image.new('RGB', (n*width, m*height)) \n\n    # paste images \n    for idx, img_path in enumerate(item_files): \n        try:\n            row = int(idx\/n) \n            col = idx - n*row \n            img = Image.open(img_path)\n            grid_img.paste(img, (col*width, row*height)) \n        except:\n            continue\n\n    return grid_img ","98be1d7b":"plt.figure(figsize=(79.5, 30))\ngrid = createImageGrid(dir_input)\nplt.imshow(grid);","bb7eed54":"Now libraries. For start we will need only `matplotlib` and `PIL` for exploring images and `os` for working with directories. ","4fb03bb2":"Hello. I decided to see what this dataset consists of and if it can be used for a little project. \nLet's start.","7f5b8b42":"We see that there are 1060 images and all of them are (64,64).\nWe can compose them in an image grid. ","eef637ac":"For this I used code from \nhttps:\/\/www.geeksforgeeks.org\/implementing-photomosaics\/","ab71e835":"We can plot some images.","55b34ae2":"We can see that probably all of them have the same size but we will check to be sure. "}}