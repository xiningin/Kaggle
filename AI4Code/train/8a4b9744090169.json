{"cell_type":{"2610d61d":"code","7e0494a6":"code","cc55e41e":"code","79bcb703":"code","b206c35d":"code","44dbe916":"code","976c77b5":"code","63540bb6":"code","d0cb9880":"code","366b0af9":"code","67c2c73b":"code","18fecc6c":"code","1f73f7e2":"code","4c782774":"code","972c12f6":"code","2868aa3c":"code","896745ca":"code","0ff6ba68":"code","35c5155b":"code","2328fad9":"code","36ba32f0":"code","285178b4":"markdown","707a746d":"markdown","b2f67db8":"markdown","c706ce19":"markdown","3b573388":"markdown","bab441ed":"markdown","5af07205":"markdown","f077ada5":"markdown","2108b297":"markdown","50fd00e7":"markdown","223990c3":"markdown"},"source":{"2610d61d":"import numpy as np\nimport pandas as pd\n\nimport plotly.graph_objs as go\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\n\npd.options.display.max_columns = None","7e0494a6":"df = pd.read_csv('\/kaggle\/input\/basketball-players-stats-per-season-49-leagues\/players_stats_by_season_full_details.csv')\ndf = df.drop(['height', 'weight'], axis=1)\ndf.head()","cc55e41e":"df.columns","79bcb703":"missed = pd.DataFrame()\nmissed['column'] = df.columns\npercent = list()\n\nfor col in df.columns:\n    percent.append(round(100* df[col].isnull().sum() \/ len(df), 2))\n    \nmissed['percent'] = percent\nmissed = missed.sort_values('percent')\nmissed = missed[missed['percent']>0]\n\nfig = px.bar(\n    missed, \n    x='percent', \n    y=\"column\", \n    orientation='h', \n    title='Missed values percent for every column (percent > 0)', \n    height=600, \n    width=600\n)\n\nfig.show()","b206c35d":"ds = df['League'].value_counts().reset_index()\n\nds.columns = [\n    'league', \n    'number of samples'\n]\n\nds = ds.sort_values(['number of samples'])\n\nfig = px.bar(\n    ds, \n    x='number of samples', \n    y=\"league\", \n    orientation='h', \n    title='Leagues presented in dataset', \n    height=1000, \n    width=800\n)\n\nfig.show()","44dbe916":"ds = df['Season'].value_counts().reset_index()\n\nds.columns = [\n    'season', \n    'number of samples'\n]\n\nds = ds.sort_values(['number of samples'])\n\nfig = px.bar(\n    ds, \n    x='number of samples', \n    y=\"season\", \n    orientation='h', \n    title='Seasons presented in dataset', \n    height=600, \n    width=600\n)\n\nfig.show()","976c77b5":"ds = df['Stage'].value_counts().reset_index()\n\nds.columns = [\n    'stage', \n    'number of samples'\n]\n\nds = ds.sort_values(['number of samples'])\n\nfig = px.pie(\n    ds, \n    values='number of samples', \n    names=\"stage\",  \n    title='Stages presented in dataset', \n    height=500, \n    width=500\n)\n\nfig.show()","63540bb6":"fig = make_subplots(rows=2, cols=1)\ntraces = [\n    go.Histogram(\n        x=df[col[0]], \n        nbinsx=100, \n        name=col[1]\n    ) \n    for col in \n    [\n        ('GP', 'Games Played'), \n        ('MIN', 'Minutes Played')\n    ]\n]\n\nfor i in range(len(traces)):\n    fig.append_trace(\n        traces[i], \n        (i \/\/ 1) + 1, \n        (i % 1) + 1\n    )\n\nfig.update_layout(\n    title_text='Games played and minutes played distribution',\n    height=900,\n    width=800\n)\n\nfig.show()","d0cb9880":"data = pd.DataFrame()\ndata['number'] = df['FGM'].copy()\ndata['legend'] = 'FGM'\ndata2 = pd.DataFrame()\ndata2['number'] = df['FGA'].copy()\ndata2['legend'] = 'FGA'\ndata = pd.concat([data, data2])","366b0af9":"fig = px.histogram(\n    data, \n    x=\"number\", \n    nbins=200, \n    color = 'legend',\n    title='FGM vs FGA distributions', \n    width=800, \n    height=700\n)\n\nfig.show()","67c2c73b":"data = pd.DataFrame()\ndata['number'] = df['3PM'].copy()\ndata['legend'] = '3PM'\ndata2 = pd.DataFrame()\ndata2['number'] = df['3PA'].copy()\ndata2['legend'] = '3PA'\ndata = pd.concat([data, data2])\n\nfig = px.histogram(\n    data, \n    x=\"number\", \n    nbins=80, \n    color = 'legend',\n    title='3PM vs 3PA distributions', \n    width=800, \n    height=700\n)\n\nfig.show()","18fecc6c":"data = pd.DataFrame()\ndata['number'] = df['FTM'].copy()\ndata['legend'] = 'FTM'\ndata2 = pd.DataFrame()\ndata2['number'] = df['FTA'].copy()\ndata2['legend'] = 'FTA'\ndata = pd.concat([data, data2])\n\nfig = px.histogram(\n    data, \n    x=\"number\", \n    nbins=80, \n    color = 'legend',\n    title='FTM vs FTA distributions', \n    width=800, \n    height=700\n)\n\nfig.show()","1f73f7e2":"fig = px.histogram(\n    df, \n    \"TOV\", \n    nbins=100, \n    title='Number of turnovers distribution', \n    width=800, \n    height=600\n)\n\nfig.show()","4c782774":"fig = px.histogram(\n    df, \n    \"PF\", \n    nbins=100, \n    title='Number of personal fouls distribution', \n    width=800, \n    height=600\n)\n\nfig.show()","972c12f6":"fig = px.histogram(\n    df, \n    \"ORB\", \n    nbins=100, \n    title='Number of offensive rebounds distribution', \n    width=800, \n    height=600\n)\n\nfig.show()","2868aa3c":"fig = px.histogram(\n    df, \n    \"DRB\", \n    nbins=100, \n    title='Number of defensive rebounds distribution', \n    width=800, \n    height=600\n)\n\nfig.show()","896745ca":"fig = px.histogram(\n    df, \n    \"AST\", \n    nbins=100, \n    title='Number of assists distribution', \n    width=800, \n    height=600\n)\n\nfig.show()","0ff6ba68":"fig = px.histogram(\n    df, \n    \"STL\", \n    nbins=100, \n    title='Number of steals distribution', \n    width=800, \n    height=600\n)\n\nfig.show()","35c5155b":"fig = px.histogram(\n    df, \n    \"BLK\", \n    nbins=100, \n    title='Number of blocks distribution', \n    width=800, \n    height=600\n)\n\nfig.show()","2328fad9":"fig = px.histogram(\n    df, \n    \"PTS\", \n    nbins=100, \n    title='Number of points distribution', \n    width=800, \n    height=600\n)\n\nfig.show()","36ba32f0":"ds = df.groupby(['Player', 'nationality'])['Team'].count().reset_index()\nds = ds['nationality'].value_counts().reset_index()\n\nds.columns = [\n    'nationality', \n    'number of samples'\n]\n\nds = ds.sort_values(['number of samples'])\nds = ds.tail(40)\nfig = px.bar(\n    ds, \n    x='number of samples', \n    y=\"nationality\", \n    orientation='h', \n    title='Top 40 nationalities presented in dataset', \n    height=900, \n    width=900\n)\nfig.show()","285178b4":"Let's do the same but for seasons.","707a746d":"Time to check nationalities","b2f67db8":"# TBD","c706ce19":"Now we will do it for FTM (free throws made) and (free throws attempts)","3b573388":"What about leagues that we have?","bab441ed":"Let's see distributions for FGM (Field Goals Made) and FGA (Field Goals Attempts)","5af07205":"And do the same for 3PM (3-points made) and (3-points attempts)","f077ada5":"Let's see how many games per season and minutes per game sportsmen played?","2108b297":"Let's see percent of NaNs for every column.","50fd00e7":"What about stages?","223990c3":"<h1><center>Basketball Players Stats. Extended analysis<\/center><\/h1>\n\n<center><img width=\"800\" height=\"600\" src=\"https:\/\/res.cloudinary.com\/grohealth\/image\/upload\/f_auto,fl_lossy,q_auto\/v1581678662\/DCUK\/Content\/iStock-959080376.jpg\"><\/center>"}}