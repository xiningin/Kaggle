{"cell_type":{"9a555c00":"code","0344ea95":"code","2e38ffdc":"code","351f4461":"code","bfd23b1f":"code","bef7eb63":"code","8da185c5":"code","b5e0f1bd":"code","cc80634f":"code","a1c08b74":"code","70b95973":"code","17f2d29c":"code","ea60794d":"code","fecf19f4":"code","91f28332":"markdown","0dee75ae":"markdown","8402cd7f":"markdown","0f74963f":"markdown","89d6eae6":"markdown","59553b79":"markdown","e6c99b0d":"markdown","4ac73fca":"markdown","adf70e30":"markdown","083db6bb":"markdown","c47a3068":"markdown"},"source":{"9a555c00":"import pandas as pd\nimport os","0344ea95":"data_df = pd.read_csv(\"\/kaggle\/input\/access-to-education-of-disabled-people-in-europe\/education_disbled_eu.csv\")\ncountry_codes_df = pd.read_csv(\"\/kaggle\/input\/iso-country-codes-global\/wikipedia-iso-country-codes.csv\")","2e38ffdc":"data_df.info()","351f4461":"country_codes_df.info()","bfd23b1f":"data_df.head()","bef7eb63":"country_codes_df.head()","8da185c5":"cc_df = country_codes_df[['English short name lower case','Alpha-2 code','Alpha-3 code']]\ncc_df.columns = ['geo_name', 'geo', 'geo_3']\ndata_c_df = data_df.merge(cc_df, how='left')\nprint(data_df.shape, data_c_df.shape)\ndata_c_df.head()","b5e0f1bd":"import plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom plotly import tools\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\ndef genSankey(df,cat_cols=[],value_cols='',title='Sankey Diagram',param={\"height\":1000}):\n    # maximum of 6 value cols -> 6 colors\n    colorPalette = ['#4B8BBE', '#AF2346','#32CD32','#8B008B','#FFD43B','#646464']\n    labelList = []\n    colorNumList = []\n    for catCol in cat_cols:\n        labelListTemp =  list(set(df[catCol].values))\n        colorNumList.append(len(labelListTemp))\n        labelList = labelList + labelListTemp\n        \n    # remove duplicates from labelList\n    labelList = list(dict.fromkeys(labelList))\n    \n    # define colors based on number of levels\n    colorList = []\n    for idx, colorNum in enumerate(colorNumList):\n        colorList = colorList + [colorPalette[idx]]*colorNum\n       \n    # transform df into a source-target pair\n    for i in range(len(cat_cols)-1):\n        if i==0:\n            sourceTargetDf = df[[cat_cols[i],cat_cols[i+1],value_cols]]\n            sourceTargetDf.columns = ['source','target','count']\n        else:\n            tempDf = df[[cat_cols[i],cat_cols[i+1],value_cols]]\n            tempDf.columns = ['source','target','count']\n            sourceTargetDf = pd.concat([sourceTargetDf,tempDf])\n        sourceTargetDf = sourceTargetDf.groupby(['source','target']).agg({'count':'sum'}).reset_index()\n        \n    # add index for source-target pair\n    sourceTargetDf['sourceID'] = sourceTargetDf['source'].apply(lambda x: labelList.index(x))\n    sourceTargetDf['targetID'] = sourceTargetDf['target'].apply(lambda x: labelList.index(x))\n    \n    # creating the sankey diagram\n    data = dict(\n        type='sankey',\n        node = dict(\n          pad = 15,\n          thickness = 20,\n          line = dict(\n            color = \"black\",\n            width = 0.25\n          ),\n          label = labelList,\n          color = colorList\n        ),\n        link = dict(\n          source = sourceTargetDf['sourceID'],\n          target = sourceTargetDf['targetID'],\n          value = sourceTargetDf['count'],\n        )\n      )\n    \n    layout =  dict(\n        title = title,\n        font = dict(\n          size = 10\n        ),\n        height=param[\"height\"]\n    )\n       \n    fig = dict(data=[data], layout=layout)\n    return fig","cc80634f":"agg_df = data_c_df.groupby(['isced97', 'hlth_pb', 'sex', 'age', 'geo'])['value'].sum().reset_index()\nagg_df.sort_values([\"value\"], inplace=True, ascending=False)\nprint(f\"All combinations: {agg_df.shape[0]}\")\nagg_df.head(10)","a1c08b74":"data_agg = agg_df.loc[agg_df.isced97 != \"TOTAL\"]\ndata_agg = data_agg.loc[data_agg.hlth_pb != \"TOTAL\"]\ndata_agg = data_agg.loc[data_agg.sex != \"T\"]\ndata_agg = data_agg.loc[data_agg.age != \"TOTAL\"]","70b95973":"fig = genSankey(data_agg,cat_cols=['hlth_pb', 'sex', 'age','isced97', 'geo'],\\\n                value_cols='value',\n                title='Access to education of disabled people: {Health Problem  -> Sex -> Age Group -> Education Level -> Country}')\niplot(fig, validate=False)","17f2d29c":"fig = genSankey(data_agg,cat_cols=['hlth_pb', 'age','isced97'],\\\n                value_cols='value',\n                title='Access to education of disabled people: {Health Problem  -> Age Group -> Education Level}')\niplot(fig, validate=False)","ea60794d":"fig = genSankey(data_agg,cat_cols=['hlth_pb', 'sex', 'isced97'],\\\n                value_cols='value',\n                title='Access to education of disabled people: {Health Problem  -> Sex -> Education Level}')\niplot(fig, validate=False)","fecf19f4":"fig = genSankey(data_agg,cat_cols=['hlth_pb', 'geo', 'sex', 'age','isced97'],\\\n                value_cols='value',\n                title='Access to education of disabled people: {Health Problem  -> Country -> Sex -> Age Group -> Education Level}')\niplot(fig, validate=False)","91f28332":"### ","0dee75ae":"## Sankey diagram\n","8402cd7f":"# Introduction\n\nWe analyze the access to education for disabled people data. \nWe load also the ISO country codes data, as auxiliary data.  \nUse of Sankey diagrams allows us to show in a single graph the distribution of access to education level per type of disability, age, sex and countries.","0f74963f":"# Analysis preparation\n\n## Load packages","89d6eae6":"Let's remove TOTAL (for isced97, hlth_pb and age) and T (for sex).","59553b79":"## Merge accidents data and country data","e6c99b0d":"### Sankey diagram with type of accidents and country","4ac73fca":"### Visualization function using Sankey diagram","adf70e30":"The country codes used in the asylum dataset correspond to the Alpha-2 codes in the ISO country code data. We will merge twice the two datasets to get as well the English short name countries names.","083db6bb":"# Data exploration\n\n## Glimpse the data","c47a3068":"## Load data"}}