{"cell_type":{"a22dee8e":"code","d023932b":"code","78cb7243":"code","b646976d":"code","7ba265b6":"markdown","fe07f4cc":"markdown"},"source":{"a22dee8e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport random as rdm\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d023932b":"# Monty Hall Game\n\nsmart=False\nn_games=100\n\nsmart_list=[]\nfool_list=[]\n\nfor k in range (2):\n    \n    # Set iterations\n    for j in range(n_games): \n\n        # Set randomly items in the doors\n\n        door_items=pd.DataFrame([rdm.random(),rdm.random(),rdm.random()],['Goat 1','Goat 2','Lambo'],['Values'])\n        door_items=door_items.sort_values(by=['Values'])\n\n        door=pd.DataFrame([door_items.index[0],door_items.index[1],door_items.index[2]],[1,2,3],['Item'])\n\n        #  ontestant choose a door\n\n        chosen_door=round(rdm.uniform(0.5, 3.4))\n\n        # Host open a door with one of the goats\n\n        if door['Item'][chosen_door] != ('Goat 1'):\n            door_open=door.index[door['Item']=='Goat 1']\n        elif door['Item'][chosen_door] != ('Goat 2'):\n                door_open=door.index[door['Item']=='Goat 2']\n\n \n        # Change you initial door?\n\n        # If change the door\n        if smart == True:\n\n            for i in range (len(door)):\n                if (i+1 != chosen_door) and (i+1 != door_open):\n                    chosen_door=i+1\n                    break\n            \n\n        # Time to open the door\n\n        # If have a lambo in the door!!!\n        if door['Item'][chosen_door] == ('Lambo'):\n            if smart==True:\n                smart_list.append('Lambo')\n            else:\n                fool_list.append('Lambo')\n\n        # If not :(    \n        else:\n            if smart==True:\n                smart_list.append('Goat')  \n            else:\n                fool_list.append('Goat')\n\n    # Now try with change the door                \n    smart=True","78cb7243":"# Results\n\ndata={'Lambos':[smart_list.count('Lambo'),fool_list.count('Lambo')],'Iterations':n_games}\nmonty_hall_data=pd.DataFrame(data=data,index=['Changing the door','Keep with the first door'])\nmonty_hall_data","b646976d":"# Graph\n\nplt.figure(figsize=(7,6))\nsns.barplot(x=monty_hall_data.index,y=monty_hall_data['Lambos'])","7ba265b6":"# **Paradoja de Monty Hall**\n\n\n![image.png](attachment:image.png)\n\nVamos a ponernos en contexto:\n\n* El concursante debe elegir una puerta entre tres (todas cerradas); el premio consiste en llevarse lo que se encuentra detr\u00e1s de la elegida.\n* Se sabe con certeza que tras una de ellas se oculta un autom\u00f3vil, y tras las otras dos hay cabras. \n* Una vez que el concursante haya elegido una puerta y comunicado su elecci\u00f3n a los presentes, el presentador, que sabe lo que hay detr\u00e1s de cada puerta, abrir\u00e1 una de las otras dos en la que haya una cabra. \n* A continuaci\u00f3n, le da la opci\u00f3n al concursante de cambiar, si lo desea, de puerta (tiene dos opciones). \n* \u00bfDebe el concursante mantener su elecci\u00f3n original o escoger la otra puerta? \u00bfHay alguna diferencia?\n\n*Lo que se trata de demostrar es la hip\u00f3tesis de Marilyn vos Savant, que dec\u00eda que el cambiar de puerta maximiza tus probabilidades de obtener \u00e9xito, a lo contrario de lo que dec\u00edan muchas personas, como varios f\u00edsicos y matem\u00e1ticos referentes a su \u00e9poca que dec\u00edan que las probabilidades siempre eran las mismas (1\/3). Posteriormente Marilyn demostr\u00f3 c\u00f3mo al cambiar de puerta tus probabilidades de obtener \u00e9xito cambiaba de (1\/3) a (2\/3).*\n","fe07f4cc":"# **An\u00e1lisis**\n\n*Por medio de una sencilla simulaci\u00f3n podemos observar c\u00f3mo al cambiar de puerta aumenta considerablemente las probabilidades de obtener \u00e9xito, esto a simple vista no parece muy l\u00f3gico. Parecer\u00eda que tu probabilidad siempre es de 1\/3, pero esto es verdad siempre y cuando el presentador no abra otra puerta.*\n![image.png](attachment:image.png)\n\nComo se puede observar, al principio todas las puertas tienen 1\/3 de probabilidad esconder un auto, por lo que se puede decir que tu puerta seleccionada tiene 1\/3 de probabilidades de \u00e9xito y las otras dos se reparten el 2\/3 restante. En el momento que abren una puerta mostrando una de las cabras, la puerta no seleccionada absorbe el 1\/3 de la puerta abierta. Entonces tenemos que tu puerta inicial tiene 1\/3 de probabilidades de \u00e9xito, mientras que la otra tiene 2\/3."}}