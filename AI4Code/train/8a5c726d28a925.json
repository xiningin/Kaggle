{"cell_type":{"505e4066":"code","f2380ecb":"code","5fa9f3d4":"code","0e67ce5b":"code","f859d0f4":"code","9ab7facc":"code","e65f2833":"code","64ea48d4":"code","6222bc73":"code","b7d184e9":"code","65d09007":"code","eb77a66e":"code","4e4997e3":"code","c3e74be4":"code","39a0a0d0":"code","df7114fd":"code","c7baede0":"code","fb954e58":"code","ea46e97b":"code","dd4e2896":"code","a3c68d83":"markdown","25166ee7":"markdown","da27d523":"markdown","875b28b4":"markdown","d0b7669c":"markdown","17ccf888":"markdown","b130b5d6":"markdown","f70f3cf4":"markdown","1793ad05":"markdown","4bdedc25":"markdown","ed9c8c13":"markdown","0def1e26":"markdown","3e7a39a0":"markdown","a1ba607f":"markdown"},"source":{"505e4066":"# Imports \nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.gridspec as gridspec","f2380ecb":"data = pd.read_csv('..\/input\/NBA_player_of_the_week.csv', index_col = 'Date', parse_dates = True)\ndata.head()","5fa9f3d4":"unique_heights = data.Height.unique()\nunique_heights.sort()\nunique_heights","0e67ce5b":"unique_weights = data.Weight.unique()\nunique_weights.sort()\nunique_weights","f859d0f4":"print(data.shape)\ndata.Conference.value_counts()","9ab7facc":"data.Conference.isnull().astype(int).plot()\nplt.title('Missing value for conference by award date')\nplt.show()","e65f2833":"max(data[data.Conference.isnull()].index)","64ea48d4":"def clean_heights(height):\n    '''\n    Converts the height column to a common numeric format and unit (cm)\n    '''\n    total_inches = 0\n    \n    # There were initially a mixture of values so this just a try catch \n    if height.find('cm') != -1:\n        return int(height.replace('cm', ''))\n    else:\n        feet = int(height.split('-')[0])\n        inches = int(height.split('-')[1])\n        total_inches += feet * 12\n        total_inches += inches\n\n    return total_inches * 2.54","6222bc73":"data.Height = data.Height.apply(clean_heights)","b7d184e9":"fig, axes = plt.subplots(nrows = 1, ncols = 2, sharey = True, figsize = (12, 4))\nsns.set_style(\"whitegrid\")\n\nplt.sca(axes[0])\nsns.distplot(data.Height, color = '#27ae60')\nplt.title('Distribution of player heights (cm)')\n\nplt.sca(axes[1])\nsns.distplot(data.Weight, color = '#e67e22')\nplt.title('Distribution of player weights (lb)')\nplt.show()","65d09007":"g = sns.jointplot(x=data.Height, y=data.Weight, kind = 'reg', marginal_kws={'color': '#27ae60'})\nplt.setp(g.ax_marg_y.patches, color='#e67e22')\nplt.setp(g.ax_marg_y.lines, color = '#e67e22')\nplt.show()","eb77a66e":"figure = plt.figure(figsize = (10,10))\nsns.scatterplot(x = data.Height, y = data.Weight, hue = data.Position)\nplt.show()","4e4997e3":"g = sns.FacetGrid(data, col = 'Position', col_wrap=4, hue='Position')\ng.map(sns.scatterplot, 'Height', 'Weight')\nplt.subplots_adjust(top=0.9)\ng.fig.suptitle('Heights and Weights of players by position')\nplt.show()","c3e74be4":"data.Player.value_counts().describe()","39a0a0d0":"# Set some plotting parameters\nplt.rcParams['figure.figsize']=(10, 6)\nplt.style.use('fivethirtyeight')\n\nsns.distplot(data.Player.value_counts(), rug = True, color = 'y')\nplt.xlabel('Number of awards for a single player')\nplt.title('Distribution of \"Player of the week\" awards')\nplt.axvline(data.Player.value_counts().max(), color = 'purple')\nplt.annotate(data.Player.value_counts().idxmax(), xy = (61, 0.4), bbox=dict(boxstyle=\"round\", fc=\"none\", ec=\"purple\"), xytext = (-125, 0), textcoords='offset points')\nplt.show()","df7114fd":"data.Player.value_counts().head(10).plot.bar(fontsize = 10)\nplt.title('Players with the most \"Player of the week\" awards')\nplt.xticks(rotation = 45)\nplt.show()","c7baede0":"plt.boxplot(data.Age, vert = False)\nplt.title(\"Distribution of Age of 'Player of the week' winners\")\nplt.xlabel(\"Age of award winner\")\nplt.yticks([])\nplt.show()","fb954e58":"sns.distplot(data.Age)\nplt.title(\"Distribution of Age of 'Player of the week' winners\")\nplt.xlabel(\"Age of award winner\")\nplt.axvline(data.Age.mean(), color = 'red')\nplt.show()","ea46e97b":"lebron = data[data['Player'] == 'LeBron James'].sort_index()\nlebron.groupby('Season').size().plot.bar()\nplt.xticks(rotation = 60)\nplt.title('LeBron James awards by NBA Season')\nplt.show()","dd4e2896":"data['Seasons in league'].value_counts().sort_index().plot.bar()\nplt.xticks(rotation = 'horizontal')\nplt.xlabel('Seasons in the league of winner')\nplt.title('League experience vs. awards given')\nplt.show()","a3c68d83":"A useful type of plot that we can easily achieve here is the facet grid. This creates a plot for each value of a categorical variable. We can use `FacetGrid` and `.map` to create a scatter plot of Height vs. Weight for each position type. As the y and x axis are shared then this makes it slightly simpler to see what is going on when compared to the above plot which is difficult to interpret with so many different position values and points. ","25166ee7":"Firstly we are going to have to read in the data and take a look at the information contained in the *.csv* file that has been provided.  \n\n__Note:__ I'm parsing the date of the award into the primary index here so that it makes it easier to filter if we need to later on. ","da27d523":"We can combine these into a single plot using `jointplot` as below. I have kept the colours of the histograms for consistency. ","875b28b4":"# Visualising NBA players of the week \nThis dataset contains information about which player won the [player of the week award](https:\/\/basketball.realgm.com\/nba\/awards\/by-type\/Player-Of-The-Week\/30) in the NBA each week; it additionally contains information about the players themselves. This could allow us to find relationships between positions, physical characteristics, teams and other variables with the NBA player of the week award. ","d0b7669c":"We can see that we are missing values for the `Conference` column of the data. It is unlikely that I'm going to explore this data alongside the award, but I will have a quick look at the values to see if we can deduce anything related to time and the conference system. ","17ccf888":"We can already note some interesting variables that we be good to investigate and visualise here: position, height and weight. ","b130b5d6":"There were 23 players that won a \"Player of the week\" award when they were in the rookie season. There appears to be a peak with the years in the league, that is very similar in shape to the age. This suggests that there is a physical peak that comes and coincides with experience to mean that you are performing at your best during those 'peak' years. ","f70f3cf4":"It looks as though the latest award that is missing the value for `Conference` is 15th April 2001, every award that has been recorded since that time has a Conference value of either 'East' or 'West'. ","1793ad05":"## Exploring some of the columns\nLet's dive deeper into this data and see if we need to perform any cleaning of the data before we start to visualise the stats. ","4bdedc25":"--- \nI will keep adding to and improving this kernel!  \n\nIf you have any suggestions, or have enjoyed\/learned from this kernel then I would greatly appreciate an upvote or a comment! ","ed9c8c13":"Heights appear to be stored as feet and inches which is going to make it difficult to plot; I will write a function that we can apply to the heights to tranform the metric to cm. ","0def1e26":"Let's visualise this, and find the player that has won the 'Player of the week' award the most throughout the history of the information that we have. ","3e7a39a0":"## Cleaning heights\nLet's write a function that can change the height from being in feet and inches to cms so that we can visualise them on a continuous numeric scale slightly easier.  \n\nA quick [google search](https:\/\/www.google.com\/search?q=inches+to+cm&rlz=1C5CHFA_enGB740GB740&oq=inches+to+&aqs=chrome.0.0j69i57j0l4.1880j1j7&sourceid=chrome&ie=UTF-8) will tell you that one inch equals 2.54cm. Our function will therefore take two steps; translate the feet and inches to just inches, and then convert that into cms using the above ratio. ","a1ba607f":"## Repeat winners \nWe can see here that by looking at the number of wins, the majority of players win the award only a handful of times, with the top players going on to become outliers and win the award more than 10 times throughout their career. "}}