{"cell_type":{"70fa4675":"code","d959efac":"code","4f367dc4":"code","2a6a8832":"code","4afa218f":"code","3d1443f6":"code","84425b99":"code","a6628066":"code","40d9f9f5":"code","d6825b07":"markdown","13317efa":"markdown"},"source":{"70fa4675":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n\nimport os\nimport sys\nimport zipfile\n\nimport numpy as np\nimport pandas as pd\nimport cv2\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm\nfrom PIL import Image\n\n# Any results you write to the current directory are saved as output.","d959efac":"class_map = pd.read_csv(\"..\/input\/bengaliai-cv19\/class_map.csv\")\nsample_submission = pd.read_csv(\"..\/input\/bengaliai-cv19\/sample_submission.csv\")\ntest = pd.read_csv(\"..\/input\/bengaliai-cv19\/test.csv\")\ntrain = pd.read_csv(\"..\/input\/bengaliai-cv19\/train.csv\")","4f367dc4":"os.makedirs('train_images128')","2a6a8832":"!ls","4afa218f":"os.listdir('..\/input\/bengaliai\/256_train\/')","3d1443f6":"folder = '..\/input\/bengaliai\/256_train\/256'\nwidth  = 128\nheight  = 128\n\ndef load_images_from_folder(folder):\n    images = []\n    for filename in os.listdir(folder):\n        img = cv2.imread(os.path.join(folder,filename))\n        dim = (width, height)\n        resized = cv2.resize(img, dim, interpolation = cv2.INTER_AREA)\n        cv2.imwrite(\"\/kaggle\/working\/train_images128\/\" + filename,resized)\n     ","84425b99":"%%time\nload_images_from_folder(folder)","a6628066":"#taken from : https:\/\/www.kaggle.com\/xhlulu\/recursion-2019-load-resize-and-save-images\n\ndef zip_and_remove(path):\n    ziph = zipfile.ZipFile(f'{path}.zip', 'w', zipfile.ZIP_DEFLATED)\n    \n    for root, dirs, files in os.walk(path):\n        for file in tqdm(files):\n            file_path = os.path.join(root, file)\n            ziph.write(file_path)\n            os.remove(file_path)\n    \n    ziph.close()","40d9f9f5":"zip_and_remove('train_images128')","d6825b07":"**i will use dataset of @pestipeti, this one : [bengaliai](https:\/\/www.kaggle.com\/pestipeti\/bengaliai) the dataset is 256x256x3 format and here i will convert them down to 128x128x3 **","13317efa":"# In this notebook i will show how to resize image and save them as output for further training"}}