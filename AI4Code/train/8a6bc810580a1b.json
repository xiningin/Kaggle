{"cell_type":{"cbb99fb3":"code","937dfe68":"code","989204d5":"markdown","34459bb6":"markdown","52efd982":"markdown","fb6908f2":"markdown"},"source":{"cbb99fb3":"import numpy as np\n\ndef leastsquares(x,y):\n    # FIXME","937dfe68":"import matplotlib.pyplot as plt\n\ndef plot(x, y, a):\n    \"\"\" \n          ! DO NOT TOUCH !\n\n          This method plots the 2D point cloud (x,y) in red, \n          and the fitted line (a,b) in orange.\n    \"\"\"\n    plt.plot(x, y, 'o', color='red', markersize=5)\n    xmin = np.min(x)-1\n    xmax = np.max(x)+1\n    ymin = np.min(y)-1\n    ymax = np.max(y)+1    \n    plt.axis([xmin,xmax,ymin,ymax]) # set range to plot\n    xticks = np.arange(xmin, xmax, (xmax-xmin)\/1000.)\n    plt.plot(xticks, a*xticks**2+1, '-', color='orange')\n    \n    plt.grid(True)\n    plt.show()    \n    \nx = np.array([1,2,3,4])\ny = np.array([1,2,5,7])\na = leastsquares(x,y)\nplot(x,y,a)","989204d5":"## 2. Implementierung\nWir schreiben eine kleine Funktion, die unsere L\u00f6sung zur\u00fcckliefert: Gegeben zwei Arrays von Zahlen x und y, berechnen wir a und geben es zur\u00fcck.","34459bb6":"## 2. Kleiner Test\nWir verwenden zun\u00e4chst eine kleine Stichprobe: \n$$(x_1,y_1), ..., (x_4,y_4)\n$$\nTesten Sie Ihre Methode *leastsquares()*, indem Sie sie auf die Daten anwenden und dann Daten und Modell mit der Funktion *plot()* plotten.","52efd982":" # Least Squares\nEin Notebook, um das Fitten eines Modells auf eine Stichprobe zu \u00fcben.","fb6908f2":"## 1. Mathe\n\nWir nehmen Zettel und Stift zur Hand. Gegeben eine bivariate Stichprobe $(x_1,y_1),...,(x_n,y_n)$ und das folgende Modell her:\n$$\n\\mathcal{M}_a(x) = a \\cdot x^2 + 1\n$$\nWir leiten die L\u00f6sung f\u00fcr a her.\n"}}