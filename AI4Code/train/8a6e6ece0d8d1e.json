{"cell_type":{"2af936fa":"code","08735ab0":"code","90bc5258":"code","5d118926":"code","9ea786a5":"code","0c4834e7":"code","9561bab3":"code","e488f838":"code","0470d9ed":"markdown","8032395a":"markdown","338031c5":"markdown","6213caf3":"markdown"},"source":{"2af936fa":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport cv2\nimport os\nprint(os.listdir(\"..\/input\"))\nfrom tqdm import tqdm\n\n# Any results you write to the current directory are saved as output.","08735ab0":"img = cv2.imread(\"..\/input\/cat-image\/download.jpg\", cv2.IMREAD_GRAYSCALE)","90bc5258":"plt.imshow(img, cmap='Greys_r');","5d118926":"img.shape","9ea786a5":"cutoff = 80\ncityid = 0\ncities = np.array([-1, 0, 0]).reshape(1, 3)\nfor i, row in tqdm(enumerate(img)):\n    for j, col in enumerate(row):\n        if col > cutoff:\n            cities = np.concatenate((cities, np.array([cityid, j, img.shape[1] - i]).reshape(1,3)))\n            cityid +=1","0c4834e7":"cities = cities[1:]\ncities = pd.DataFrame(cities)\ncities.columns = ['cityId', 'X', 'Y']","9561bab3":"fig = plt.figure(figsize=(4.8, 3.6) )\nax = fig.gca()\nax.set_facecolor('Black')\nax.set_xticks([])\nax.set_yticks([])\nplt.scatter(cities.X, cities.Y, color='White', marker=\".\", alpha=.1);\n","e488f838":"cities.to_csv('cat.csv')","0470d9ed":"First load the picture. I found it from this link.\n\nhttps:\/\/i.ytimg.com\/vi\/6rdzpvBvCJE\/hqdefault.jpg","8032395a":"The image looks really nice because it is in greyscale, but we will have to set everything to either black or white. For my code below, I am using a value of \"80\" as the cutoff. Might get better results by playing around with this value.","338031c5":"Don't try to submit this file XD","6213caf3":"**Make Your Own Map**\n\nI really like how the list of cities corresponds to a picture. I figured I would try making my own list of cities that forms a picture and share it with Kaggle."}}