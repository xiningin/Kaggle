{"cell_type":{"bcbdd538":"code","4d8d2850":"code","da01ca73":"code","22229ec0":"code","5de74d97":"code","b4c1b165":"code","cb31f13c":"code","1e45e351":"code","fe0abce2":"code","b11de008":"code","fc5c3428":"code","e90e24c6":"code","f3e4e622":"code","b3afe9af":"code","f3f4c163":"code","410ecdab":"code","6059053f":"code","01b7ba22":"code","55314b81":"code","4d6dfe48":"code","f13b48c5":"code","e61e0bcb":"code","fbc268df":"code","feb7c9df":"code","be2a80fb":"code","05df85bc":"code","7512e28e":"code","6361b793":"markdown","40cda1ea":"markdown","3d81ab91":"markdown","1314c6f6":"markdown","9657cf51":"markdown","2f03f26c":"markdown","ad06ee6f":"markdown","e07a494c":"markdown","c32fc6bf":"markdown","b2103395":"markdown","533fd153":"markdown","d8fc046d":"markdown","90f46bfe":"markdown"},"source":{"bcbdd538":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4d8d2850":"uber_sept = pd.read_csv(\"\/kaggle\/input\/uber-pickups-in-new-york-city\/uber-raw-data-sep14.csv\")\nuber_sept.head()","da01ca73":"uber_sept.shape","22229ec0":"uber_sept[\"Date\/Time\"] = uber_sept[\"Date\/Time\"].map(pd.to_datetime)","5de74d97":"uber_sept.head()","b4c1b165":"def getday(date):\n    return date.day\nuber_sept[\"Day\"] = uber_sept[\"Date\/Time\"].map(getday)\nuber_sept.head()","cb31f13c":"uber_sept.tail()","1e45e351":"def getweekday(date):\n    return date.weekday()\nuber_sept[\"Weekday\"] = uber_sept[\"Date\/Time\"].map(getweekday)\n\ndef gethour(date):\n    return date.hour\nuber_sept[\"Hour\"] = uber_sept[\"Date\/Time\"].map(gethour)\nuber_sept.head()","fe0abce2":"uber_sept.tail()\n","b11de008":"from matplotlib import pyplot as plt\nimport seaborn as sns\n","fc5c3428":"plt.hist(uber_sept.Day, bins=30, rwidth=0.9, range=(0.1, 30.1), color=\"#838383\");\nplt.grid()\nplt.xlabel(\"Day of the month\")\nplt.ylabel(\"Frequency of the rides\")\nplt.title(\"Frequency by Day in Sept 2014\");","e90e24c6":"def getCount(rows):\n    return len(rows)\nby_date = uber_sept.groupby(\"Day\").apply(getCount)\nby_date.tail()","f3e4e622":"plt.plot(by_date);","b3afe9af":"plt.bar(range(0,30), by_date);\nplt.grid()","f3f4c163":"dat_sort = by_date.sort_values()\ndat_sort","410ecdab":"plt.figure(figsize=(15,9));\nplt.xlabel(\"Day of the month\")\nplt.ylabel(\"Frequency of the rides\")\nplt.title(\"Frequency by Day in Sept 2014\")\nplt.bar(range(1, 31), dat_sort)\nplt.grid()\nplt.xticks(range(1, 30), dat_sort.index);\n","6059053f":"by_day = uber_sept.groupby(\"Weekday\").apply(getCount)\nby_day.tail()","01b7ba22":"plt.figure(figsize=(8,6));\nplt.xlabel(\"Day of the week\")\nplt.ylabel(\"Frequency of the rides\")\nplt.title(\"Frequency by Day in Sept 2014\")\nplt.xticks(range(7), 'Mon Tue Wed Thur Fri Sat Sun'.split())\nplt.bar(range(7), by_day, color='#cf89fa')\nplt.grid()\n","55314b81":"by_hour = uber_sept.groupby(\"Hour\").apply(getCount)\nby_hour.tail()\n","4d6dfe48":"plt.figure(figsize=(12,6));\nplt.xlabel(\"Hour of the Day\")\nplt.ylabel(\"Frequency of the rides\")\nplt.title(\"Frequency by Day in Sept 2014\")\nplt.xticks(range(1, 25))\nplt.bar(range(1, 25), by_hour, color='#cf87fa')\nplt.grid()\n","f13b48c5":"cross = uber_sept.groupby(\"Weekday Hour\".split()).apply(getCount).unstack()\ncross.tail(10)","e61e0bcb":"sns.set(rc={'figure.figsize':(13,7)})\nsns.heatmap(cross);\n\n#sns.yticks(range=(7),'Mon Tue Wed Thur Fri Sat Sun'.split())","fbc268df":"plt.figure(figsize=(15,9));\nplt.xlabel(\"Latitude in New York City\")\nplt.ylabel(\"Frequency of the rides\")\nplt.title(\"Frequency by Day in Sept 2014\")\nplt.hist(uber_sept[\"Lat\"], bins=100, range=(40.57, 40.89));","feb7c9df":"plt.figure(figsize=(15,9));\nplt.xlabel(\"Longitude in New York City\")\nplt.ylabel(\"Frequency of the rides\")\nplt.title(\"Frequency by Day in Sept 2014\")\nplt.hist(uber_sept[\"Lon\"], bins=100, range=(-74.2, -73.75) );","be2a80fb":"plt.hist(uber_sept[\"Lat\"], bins=100, range=(40.59, 40.87), color='#232323', alpha=0.5)\nplt.twiny()\nplt.hist(uber_sept[\"Lon\"], bins=100, range=(-74.2, -73.75), color='#010101', alpha=0.5);","05df85bc":"plt.hist(uber_sept[\"Lat\"], bins=100, range=(40.59, 40.87), color='green', alpha=0.6, label='Latitude')\nplt.grid()\nplt.legend(loc=\"best\")\nplt.twiny()\nplt.hist(uber_sept[\"Lon\"], bins=100, range=(-74.2, -73.75), color='red', alpha=0.6, label='Longitude')\nplt.grid()\nplt.legend(loc=\"upper left\");","7512e28e":"plt.figure(figsize=(13, 14))\nplt.plot(uber_sept[\"Lat\"], uber_sept[\"Lon\"], '.', ms=0.85, alpha=0.7);\nplt.xlim(40.4, 41.2)\nplt.ylim(-74.5, -73.0);","6361b793":"### Latitude","40cda1ea":"### Longitude","3d81ab91":">  ## Visualization for travel routes in New York through the cross of latitude and longitude","1314c6f6":"> ## Analysis for each day of the month","9657cf51":">  ### Sorting by per day Frequency of the month","2f03f26c":"# Analysis","ad06ee6f":"# Data Preparation","e07a494c":"##   Cross between Weekday and Hour","c32fc6bf":"> ## Heatmap for rush hours on specific days of the week","b2103395":"> # Analysis for each day of the week","533fd153":"> # Analysis by each hour of a day","d8fc046d":"> ### Better Visualization","90f46bfe":"### Cross between Longitude and Latitude"}}