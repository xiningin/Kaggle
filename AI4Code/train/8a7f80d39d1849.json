{"cell_type":{"6e8894b9":"code","1f72cae9":"code","bf98ed2d":"code","ec636875":"code","70996faa":"markdown","2e1f6a33":"markdown"},"source":{"6e8894b9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1f72cae9":"mytupla0=('abc',4,True,5,False,2.5,4,True,\"abc\",4,True,\"abc\")","bf98ed2d":"### regresa True si es una tupla \nisinstance(mytupla0, tuple)\n### otra forma \ntype(mytupla0[0]) is int\ntype(mytupla0[0]) is float \ntype(mytupla0[0]) is str \ntype(mytupla0[0]) is bool","ec636875":"def contador(tup):\n    \"\"\"\n    funci\u00f3n que toma una tupla y cuenta cuantos\n    cuantos reales, enteros, cadenas y l\u00f3gicos \n    tiene. En caso de contener objetos de otro\n    tipo los cuente como otros.\n    \"\"\"\n    enteros=0\n    floats=0 # floats \n    cadenas=0\n    logicos=0\n    otros=0\n    ### recorrer la tupla \n    if(isinstance(tup, tuple)):\n        for i in range(len(tup)):\n            if type(tup[i]) is int:\n                enteros+=1\n            elif type(tup[i]) is float: \n                floats+=1\n            elif type(tup[i]) is str: \n                cadenas+=1\n            elif type(tup[i]) is bool: \n                logicos+=1\n            else:\n                otros+=1\n    else: print(\"Se requiere una tupla \\n\")\n    return(enteros,floats,cadenas,logicos,otros)\n\nprint( contador(mytupla0) )    \nconteo=contador(mytupla0)\nprint(\"En la tupla dada hay %d enteros, %d floats, %d cadenas, %d logicos y %d de otro tipo\"%conteo )","70996faa":"Escribir una funci\u00f3n que reciba una tupla y cuente cuantos reales, enteros, cadenas y l\u00f3gicos tiene. En caso de contener objetos de otro tipo los cuente como otros. ","2e1f6a33":"Como averiguar si es un tipo de objeto "}}