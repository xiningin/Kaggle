{"cell_type":{"a188ae5e":"code","14b4be9f":"code","17f96722":"code","40d75e24":"code","b23c65f6":"code","464d78d3":"code","9f8661f1":"code","7c31f8ec":"code","f91f284c":"code","725fb493":"code","440e3506":"code","5f050c29":"code","3aa8a293":"code","669b7070":"code","5e518720":"markdown","08ba53e1":"markdown","d55d7400":"markdown","ff65df27":"markdown","735373ce":"markdown","492aac90":"markdown","aeb28485":"markdown","501071c5":"markdown","15b9bc68":"markdown","f1eca6ca":"markdown","2df927a6":"markdown","47e8a34e":"markdown","3751eb54":"markdown"},"source":{"a188ae5e":"from IPython.core.display import display, HTML, Javascript\nimport numpy as np\nimport pandas as pd\n%pylab inline\npylab.rcParams['figure.figsize'] = 8, 4","14b4be9f":"html_contents =\"\"\"\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n    <style>\n    .toc h2{\n        color: white;\n        background: #3f4d63;\n        font-weight: 600;\n        font-family: Helvetica;\n        font-size: 23px;\n        padding: 6px 12px;\n        margin-bottom: 2px;\n    }\n    \n    .toc ol li{\n        list-style:none;\n        line-height:normal;\n        }\n     \n    .toc li{\n        background: #235f83;\n        color: white;\n        font-weight: 600;\n        font-family: Helvetica;\n        font-size: 18px;\n        margin-bottom: 2px;\n        padding: 6px 12px;\n    }\n\n    .toc ol ol li{\n        background: #fff;\n        color: #4d4d4d;\n        font-weight: 400;\n        font-size: 15px;\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        margin-top: 0px;\n        margin-bottom: 0px;\n        padding: 3px 12px;\n    } \n    \n    .section_title{\n        background-color: #3f4d63;\n        color: white;\n        font-family: Helvetica;\n        font-size: 25px;\n        padding: 6px 12px;\n        margin-bottom: 5px;\n    }\n    .subsection_title{\n        background: #235f83;\n        color: white;\n        font-family: Helvetica;\n        font-size: 21px;\n        padding: 6px 12px;\n        margin-bottom: 0px;\n    }\n    .sidenote{\n        font-size: 13px;\n        border: 1px solid #d7d7d7;\n        padding: 1px 10px 2px;\n        box-shadow: 1px 1px 2px 1px rgba(0,0,0,0.3);\n        margin-bottom: 3px;\n    }\n    <\/style>\n    <\/head>\n    <body>\n        <div class=\"toc\">\n        \n        <ol> \n        <h2> Table of Contents <\/h2>\n        <li>1. Objective <\/li> \n        <li>2. Assumptions<\/li>\n        <ol>  <div class=\"toc li\">\n            <li>2.1 Capital Cost(CAPEX) <\/li>\n            <li>2.2 Operational Cost(OPEX) <\/li> \n            <li>2.3 Escalation Rates<\/li>\n            <li>2.4 Efficiencies <\/li>            \n            <li>2.5 Project Life <\/li> \n        <\/div><\/ol>\n        <li>3. Calculate Levelised Cost of Energy (LCOE) and Internal Rate of Return (IRR) for the solar project alone;<\/li>\n        <li>4. Calculate the volume weighted average market revenue for the solar project, and compare this against the LCOE <\/li>\n        <li>5. Devise a model that utilises energy storage to shift solar energy to higher price periods,& \n <\/li>\n        <li>6. Calculate new volume weighted average market revenues, compare to changed LCOE (due to storage addition) and new market revenue IRR\u2019s and comment.\n <\/li>\n <li>7. Example of Output Model <\/li>\n        <\/ol>\n        <\/div>\n    <\/body>\n<\/html>\n\"\"\"\n\nHTML(html_contents)","17f96722":"# Import data from .csv file\ndata = pd.read_csv('..\/input\/solar-energy-generation\/solar_generation_energy_price.csv', index_col=0, parse_dates=True, dayfirst=True, usecols=[0,1,2], nrows=8760)\n\nenergy_price = data['Energy Price ($\/MWh)'].values\nsolar_generation = data['Solar Generation (MW)'].values\n","40d75e24":"# data\nunit_cost       = 1.28*10**6 # $\/MW\nconnection_cost = 5000000 # $\nsize            = 100 # MW\ncpi             = 0.025\nr               = 0.09 # discount rate\ndegradation_pv  = 0.005\nyear            = np.arange(1, 21)\ntax             = 0.20\n\n# LCOE calculation\ninit_cost       = size*unit_cost + connection_cost\noper_cost       = 0.02*init_cost\nfirst_year_prod = np.sum(solar_generation) # .csv data\nactual_prod     = np.sum((first_year_prod*(1-degradation_pv)**year)\/(1+r)**year)\nactual_oper_cost = np.sum((oper_cost*(1+cpi)**year)\/(1+r)**year)\n\nLCOE = ((init_cost+actual_oper_cost)\/actual_prod)\/1000 # $\/kWh\nprint('LCOE is %f $'%LCOE)\n","b23c65f6":"# NPV calculation\n\namortisation    = init_cost\/10 # 10 years amortisation are considered\nprofit          = np.sum(energy_price*solar_generation)\nCF10            = np.sum((profit - oper_cost + amortisation)*(1-tax)\/(1+r)**year[0:10]) # 1-10 years\nCF20            = np.sum((profit - oper_cost) * (1-tax)\/(1+r)**year[10:20]) # 11 - 20 years\ncash_flow       = CF10 + CF20\nNPV             = cash_flow - init_cost\n\nprint('NPV is %f $' %NPV)\n","464d78d3":"def npv_func(r): \n    # referenced variables are defined in the NPV calculation \n    CF10            = np.sum((profit - oper_cost + amortisation)*(1-tax)\/(1+r)**year[0:10]) # 1-10 years\n    CF20            = np.sum((profit - oper_cost) * (1-tax)\/(1+r)**year[10:20]) # 11 - 20 years\n    cash_flow       = CF10 + CF20\n    NPV             = cash_flow - init_cost\n    return NPV\n\nimport scipy.optimize\n# Return the roots of the (non-linear) equations defined by func(x) = 0 given a starting estimate.\nIRR = scipy.optimize.fsolve(npv_func, r)\n\nprint('IRR is %f%%'%(IRR*100))\n","9f8661f1":"average_revenue = (profit\/first_year_prod)\/1000 # $\/kWh\n\nprint('The volume weighted average market revenue is %.3f $\/kWh'% average_revenue)\n\nplant_profit = average_revenue - LCOE; # $\/kWh\n\nprint('The difference between the volume weighted average market revenue and the LCOE is %.3f $\/kWh' %plant_profit)\n","7c31f8ec":"def charge_phase(sg,wmax,Wst0,etain):\n    pst     =   max([-sg,-0.3*wmax, (Wst0-wmax)\/(etain)])\n    wst     =   -etain * pst + Wst0\n    pnet    =   -sg - pst\n    return pst, pnet, wst\n","f91f284c":"def discharge_phase(sg,wmax,wmin,Wst0,etaout):\n    pst     =   min([0.3*wmax, etaout*(Wst0-wmin)])\n    wst     =   -pst\/etaout+Wst0\n    pnet    =   -sg - pst\n    return pst, pnet, wst\n","725fb493":"#define functions to calculate volume weighted average market revenue for the PV + STORAGE project\n\ndef get_revenue(Pnet, energy_price):\n    '''Calculate volume weighted average market revenue for the PV + STORAGE project'''\n    profit_pv_sto = np.sum(Pnet * energy_price)\n    first_year_network = np.sum(Pnet)\n    average_revenue_sto = (profit_pv_sto\/first_year_network)\/1000 # $\/kWh\n    return average_revenue_sto\n","440e3506":"# Storage data\n\nStorage_price_unit = 300000 # $\/MWh\nInverter_price = 15000 # $\/MW\nContainer_price = 200000 # for 2 MWh batteries\nConnection_price = 5000000\nPower_factor = 0.3\ndegradation_sto = 0.01\n","5f050c29":"def model(solar_generation, energy_price, wmax, ep_threshold):\n    '''\n        This model sells the energy of the storage only when the energy price is above a certain threshold (discharge phase), \n        otherwise it would take the energy from the PV production (charge phase)\n    '''\n    wmin      =   0.1 * wmax\n    Wst0      =   wmin # initial storage charge (hp: initially charged at 10%)\n    Wst = np.zeros_like(solar_generation)\n    Pnet = np.zeros_like(solar_generation)\n    Pst = np.zeros_like(solar_generation)\n\n    avg_price = np.mean(energy_price)\n\n    for it, sg  in enumerate(solar_generation):\n        eg = energy_price[it]\n        if eg  <   ep_threshold:\n            pst, pnet, wst = charge_phase(sg,wmax,Wst0,etain)\n        else:\n            pst, pnet, wst = discharge_phase(sg,wmax,wmin,Wst0,etaout)\n\n        Wst[it]  =   wst\n        Pnet[it]  =   pnet\n        Pst[it]   =   pst\n        Wst0      =   wst\n    \n    return Wst, Pnet, Pst\n","3aa8a293":"# Storage model depending on storage capacity (wmax) and energy price (ep_threshold)\n\netain     =   0.88 # Storage efficiency - Charge\netaout    =   0.88 # Storage efficiency - Discharge\n\n# energy price thresholds used for the evaluation of the plant performance\nep_threshold_vector = np.linspace(0, 10000, 100)\nwmax_vector = np.linspace(0, 100, 10)\nfor wmax in wmax_vector:\n    avg_rev = []\n    lcoe_vector = []\n    net_profit_vector = []\n    for ep_threshold in ep_threshold_vector:\n        \n        Wst, Pnet, Pst = model(solar_generation, energy_price, wmax, ep_threshold)\n        \n        average_revenue_sto = get_revenue(Pnet, energy_price)\n\n        # LCOE calculation (PV+Storage)\n        if wmax>0:\n            Storage_price = Storage_price_unit * wmax + wmax * Power_factor * Inverter_price + Container_price * wmax * 0.5 + Connection_price\n        else:\n            Storage_price = 0\n        Oper_cost_sto = 0.02 * Storage_price\n        first_year_sto = -np.sum(Pst)\n\n        actual_prod     = np.sum((first_year_prod*(1-degradation_pv)**year)\/(1+r)**year)\n        actual_prod_sto = np.sum((first_year_sto*(1-degradation_sto)**year)\/(1+r)**year)\n        actual_oper_cost_sto = np.sum(((oper_cost + Oper_cost_sto) * (1 + cpi)**year)\/(1 + r)**year)\n\n        LCOE_storage = ((init_cost + Storage_price + actual_oper_cost_sto) \/ (actual_prod + actual_prod_sto)) \/ 1000 # $\/kWh\n\n        #print('The volume weighted average market revenue is %f $\/kWh'% average_revenue_sto)\n        net_profit = average_revenue_sto-LCOE_storage\n        net_profit_vector.append(net_profit)\n        avg_rev.append(average_revenue_sto)\n        lcoe_vector.append(LCOE_storage)\n\n\n    plot(ep_threshold_vector, net_profit_vector, label='wmax = %.0f MW'%wmax)\n    \ngrid()\nlegend()\nxlabel('Energy price threshold ($\/MWh)')\nylabel('Profit ($\/kWh)')\n","669b7070":"wmax = 100\nep_threshold = 100\nWst, Pnet, Pst = model(solar_generation, energy_price, wmax, ep_threshold)\nmodel_data = data.copy()\nmodel_data['Pstorage (MW)'] = Pst\n\nmodel_data.iloc[0:100].plot()\ngrid()\n","5e518720":"#### <div class=\"subsection_title\">2. Assumptions<\/div>\n### Capital Costs (CAPEX):\n* Solar:\n        * \\$1.28\/W installed;\n        * \\$5M connection costs (includes transformers, switch gear, etc.);\n* Storage:\n        * \\$300,000 \/ MWh for batteries installed;\n        * \\$15,000 \/ MW for inverters installed;\n        * \\$200,000 \/ container which houses 2MWh of batteries;\n        * \\$5M connection costs (includes transformers, switch gear, etc.);\n### Operational Costs (OPEX)\n* Solar:\n       * Annual OPEX at 2% of CAPEX\n* Storage:\n       * Annual OPEX at 2% of CAPEX\n### Escalation rates\n* CPI:\n      * 2.5%\n* Discount rate (weighted average cost of capital)\n      * 9%\n### Efficiencies\n* Storage round trip efficiency (Charge \u2013 Discharge): 88%\n* Parasitic loads: Assume none\n* Storage degradation: Assume 1% of capacity per year.\n### Project Life\n* Assume 20 year project life\n* No terminal value","08ba53e1":"For the calculation of the Net Present Value, 10 years of amortisation are considered. This will have an influence on the cash flows and consequently on the NPV. Once calculated the NPV, the Internal Rate of Return of the solar project can be evaluated. This can be seen as the rate of growth a project is expected to generate [1].\n\n","d55d7400":"B) In case of energy price above the threshold, the energy (both of the storage and PV) is sold to the network. The bounds of the storage system during discharging phase have to be verified and therefore Pst(t) is given by the following set of equations:\n\n","ff65df27":"The green trend represents the power charged by the storage (negative values) and the positive values correspond to the energy sale. It is possible to see that the storage is mainly selling energy when the solar generation falls down (orange trend). This implies that the model is selling during the hours of maximum demand and higher prices.","735373ce":"## <div class=\"subsection_title\">4. Calculate the volume weighted average market revenue for the solar project, and compare this against the LCOE<\/div>\n\n<div id=\"DiffVol&LCOE\">\nAs the LCOE indicates the cost of energy produced by the power plant, a comparison with the volume weighted average market revenue would give an idea of the plant profit. In this case, it results to be 2.7 cent\/kWh.\n<\/div>\n","492aac90":"In the previous figure it is possible to see how the profit changes depending on the energy price threshold (x axis) and the storage size, represented in different colors.\n\nThis model shows that the revenue increases with the storage size, as well as the LCOE, which increases faster due to the addition of storage costs. As a result, this model suggests that it is not convenient to utilise an energy storage for this plant.\n\n","aeb28485":"## <div class=\"subsection_title\"> 7. Example output of the model<\/div>\n\n\nThe following figure shows an example of the model created for the storage. A storage capacity of 100 MW is selected, as well as an energy price threshold of 100 $\/MWh.\n\n","501071c5":"The model is defined in order to see how the volume weighted average market revenue and the LCOE change by varying both storage size and energy price threshold. Therefore, in the following steps a function to calculate the revenue and another one to evaluate the LCOE are defined and subsequently used in the model.\n\n","15b9bc68":"## <div class=\"subsection_title\">***3.Calculate Levelised Cost of Energy (LCOE) and Internal Rate of Return (IRR) for the solar project alone;***\n<div id=\"LCOE\">\nThe LCOE measures lifetime costs of the plant divided by energy production over that lifetime, and is a useful parameter to compare different methods of electricity generation. Since the result is an economic assessment of the power plant, many different factors can influence the result and therefore it is important to evaluate every component of the formula. In order to calculate the LCOE for the solar project, the following assumptions have been made:\n\n* Since the maximum production during the first year is about 98 MW (data observed from the imported .csv file), we assume the plant size to be 100 MW;\n* The initial cost, given by the sum of the plant and connection costs, is considered only for the first year;\n* No incentives are available for this plant size (according to the italian regulation of 2017);\n* No disposal costs are evaluated;\n* The degradation factor for the PV modules is assumed to be 0.5 %;\n* A taxation of 20% is considered.\n<\/div>","f1eca6ca":"# <div class=\"section_title\">Solar Energy Generation Price Analysis<\/div>","2df927a6":"The IRR is calculated by means of a function that returns the root of the NPV. The resulting value is the IRR, which equals 19.7%. This means that the solar energy investment is projected to generate a 19.7% return through the life of the solar system.\n\nIn this case, the IRR suggests that the project looks attractive, but one has to take into account the previous consideration and the additional costs that have not been considered in this case (e.g. a disposal cost at the end of the lifetime).\n\n","47e8a34e":"## <div class=\"subsection_title\"> 1. Objective<\/div>\nThe objective is to look at a simplified scenario of solar + storage and assess the relative merits of different levels of storage contribution to the solar plant. An indicative year\u2019s worth of hypothetical solar generation time series and associated wholesale energy market prices are provided in CSV format. Assume that these are representative of the whole project life (term). A list of assumptions are provided below to assist with the calculations.\n\nBased on the provided data and assumptions please:\n<div class=\"sidenote\">\n\n- [Calculate Levelised Cost of Energy (LCOE) and Internal Rate of Return (IRR) for the solar project alone;\n](#LCOE)\n\n- [ Calculate the volume weighted average market revenue for the solar project, and compare this against the LCOE;\n](#DiffVol&LCOE)\n\n- Devise a model that utilises energy storage to shift solar energy to higher price periods\n       a.  Note that degrees of freedom include storage sizes on a MW and MWh basis\n\n- Calculate new volume weighted average market revenues and compare to changed LCOE (due to storage addition) and new market revenue IRR\u2019s and comment.\n<\/div>","3751eb54":"## <div class=\"subsection_title\"> 5. Devise a model that utilises energy storage to shift solar energy to higher price periods,& <\/div>\n## <div class=\"subsection_title\"> 6. Calculate new volume weighted average market revenues, compare to changed LCOE (due to storage addition) and new market revenue IRR\u2019s and comment.<\/div>\nIn order to write down a rule for the storage system, the starting point is to impose the energy balance, between the PV unit, the storage system, and the network. Using a single bus bar model, the elements are described as they were all connected to a single bar:\n\nPpv(t) + Pnet(t) + Pst(t) = 0\n\nPpv(t) is the power provided by the PV unit in [MW];\nPst(t) in [MW] represents the power exchanged with the storage system, and is negative if it's absorbed;\nPnet (t) in [kW] is the variable that represents the power exchanged with the external grid.\nThe goal would be to exploit the storage system to maximise energy sale to the network:\n\nPnet (t) \u2264 0 , \u2200t.\n\nThere are many possibilities to define the model. The idea is to define a model to evaluate the profit that depends on both storage size and energy prices. This model sells the energy of the storage only when the energy price is above a certain threshold (discharge phase), otherwise it would take the energy from the PV production (charge phase).\n\nLet us see how the charge and discharge phases are defined.\n\nA) In case of energy price below the threshold, the storage system can be charged absorbing the energy produced according to its limits.\n\nThe bounds of the storage system have to be verified in terms of maximum power allowed during charging phase (a charge\/discharge power factor of 0.3 is assumed), and in terms of maximum stored energy. So Pst(t) is given by the most restrictive criterion.\n\nMoreover, implementing a cycle within the numerical code, at each time step the storage system is updated with the new state of charge. If the storage reaches its limits, a residual energy in excess would be sold to the network, in order to accomplish the energy balance.\n\nTherefore, the system is described by the following set of equations :\n\n"}}