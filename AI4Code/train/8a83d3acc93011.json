{"cell_type":{"8e9550c3":"code","0731a6d5":"code","bc4d51f4":"code","3fd4e829":"code","9b5bd25e":"code","f2d55bca":"code","056d5381":"code","dc6bda6f":"code","42f003da":"code","e8ff2433":"code","4cb20802":"code","51430335":"code","68d3debd":"code","6b0ddce6":"code","552f9321":"code","5ba01e18":"code","f1fb8257":"code","52e0508a":"code","8ee6c972":"code","9b06e14e":"code","7f834ac3":"code","14e240d9":"code","1c481360":"code","9b102b7c":"code","9504e75e":"code","66dc20e8":"code","57b23cdb":"code","f4e5de25":"code","d47e484d":"code","7310e25d":"code","cede3108":"code","7e882b28":"code","c413e0b5":"code","5453893f":"code","70cf80ab":"code","8ae04f62":"code","05dc5088":"code","210db42c":"code","85f9e66a":"code","a0f83067":"code","894f425c":"code","6870833a":"code","e1c1f31e":"markdown","c9d080aa":"markdown","063b045d":"markdown","6c0fdaec":"markdown","834dc932":"markdown","1cdbcebe":"markdown","af62f5eb":"markdown","82c6307b":"markdown","40e4f970":"markdown","83170258":"markdown","63615687":"markdown","df9ef222":"markdown","c2f2a210":"markdown","5042fb58":"markdown","b62b3ae2":"markdown","1a840efe":"markdown","04c4cbe9":"markdown","2774d840":"markdown","448b4e87":"markdown","50def23d":"markdown","dd01168a":"markdown","1befa4f2":"markdown","2b7406db":"markdown","70755183":"markdown","61a205ec":"markdown","849e076b":"markdown","14e7c175":"markdown","b35ab929":"markdown","61559f9c":"markdown","7bf98a50":"markdown","6b7ecccc":"markdown","95ceb26b":"markdown","e3c04016":"markdown","8159b82e":"markdown"},"source":{"8e9550c3":"! pip install -q rich dabl","0731a6d5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nimport dabl\nfrom scipy.stats import *\n\nfrom IPython.display import HTML\nfrom rich import print as _pprint\nfrom rich.progress import track\nfrom colorama import Fore, Style\n\nwarnings.simplefilter(\"ignore\")\npd.set_option('display.max_columns', 500)\npd.set_option('display.max_rows', 500)\n\nf = open(\"..\/input\/notebookassets\/light_green.css\").read()\nHTML(f\"<style>{f}<\/style>\")","bc4d51f4":"def cprint(string:str, end=\"\\n\"):\n    \"\"\"\n    A little utility function for printing and stuff\n    \"\"\"\n    _pprint(f\"[black]{string}[\/black]\", end=end)\n\ndef set_palette(palette):\n    \"\"\"\n    Function to set the color space\n    \"\"\"\n    sns.set_palette(palette)\n    cmap = plt.get_cmap(palette)\n    colors = [cmap(i) for i in np.linspace(0, 1, 15)]\n    return colors\n\ndef cout(string: str, color=Fore.RED, end=\"\\n\"):\n    \"\"\"\n    Saves some work\n    \"\"\"\n    print(color+string+Style.RESET_ALL, end=end)\n\ndef print_quantile_summary(column:str):\n    \"\"\"\n    Prints Quantile Summary a bit nicely.\n    \"\"\"\n    verbose = column.split(' ')[0].capitalize()\n    cprint(f\"[blue]Some Stats about {verbose} Scores:[\/blue]\", end=\"\")\n\n    print(f\"Maximum Marks achieved in {verbose} were: \", end=\"\")\n    cout(f\"{data[column].max()}\", end=\"\\n\")\n\n    print(f\"Minimum Marks achieved in {verbose} were: \", end=\"\")\n    cout(f\"{data[column].min()}\", end=\"\\n\\n\")\n\n    print(f\"25% Students scored less than \", end=\"\")\n    cout(f\"{int(np.quantile(data[column], 0.25))}\", end=\" \")\n    print(f\"marks in {verbose}\")\n\n    print(f\"50% Students scored less than \", end=\"\")\n    cout(f\"{int(np.quantile(data[column], 0.50))}\", end=\" \")\n    print(f\"marks in {verbose}\")\n\n    print(f\"75% Students scored less than \", end=\"\")\n    cout(f\"{int(np.quantile(data[column], 0.75))}\", end=\" \")\n    print(f\"marks in {verbose}\")\n\ncolors = set_palette(\"winter_r\")","3fd4e829":"data = pd.read_csv(\"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\")\ndata.head()","9b5bd25e":"cprint(f\"[green]Maximum Null values in the dataset: {data.isna().sum().max()}[\/green]\")","f2d55bca":"data.describe()","056d5381":"data.info()","dc6bda6f":"sns.palplot(sns.color_palette('winter_r'))","42f003da":"plt.figure(figsize=(8, 7))\nsns.countplot(data['gender'])\nplt.title(\"Gender Count Plot\", fontdict={'fontsize': 14})\nplt.xlabel(\"Gender\")\nplt.ylabel(\"Count\")\n\nplt.show()","e8ff2433":"labels = data['gender'].value_counts().index.tolist()\nvalues = data['gender'].value_counts().tolist()\n\nplt.figure(figsize=(8, 8))\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\", colors=[colors[0], colors[-1]], shadow=True)\nplt.title(\"Gender Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","4cb20802":"order = data['race\/ethnicity'].value_counts().index.tolist()\n\nplt.figure(figsize=(8, 7))\nsns.countplot(data['race\/ethnicity'], order=order)\nplt.title(\"Race & Ethinicity Plot\", fontdict={'fontsize': 14})\nplt.xlabel(\"Group\")\nplt.ylabel(\"Count\")\n\nplt.show()","51430335":"labels = data['race\/ethnicity'].value_counts().index.tolist()\nvalues = data['race\/ethnicity'].value_counts().tolist()\n\nplt.figure(figsize=(8, 8))\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\", colors=colors, shadow=True)\nplt.title(\"Race & Ethinicity Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","68d3debd":"temp_data = data.copy(deep=True)\ntemp_data['pedu'] = data['parental level of education'].apply(lambda x: x.split(\"'\")[0].upper())\norder = temp_data['pedu'].value_counts().index.tolist()\n\nplt.figure(figsize=(10, 7))\nsns.countplot(temp_data['pedu'], order=order)\nplt.title(\"Parental Education Level Plot\", fontdict={'fontsize': 14})\nplt.xlabel(\"Type of Degree\")\nplt.ylabel(\"Count\")\n\nplt.show()","6b0ddce6":"labels = temp_data['pedu'].value_counts().index.tolist()\nvalues = temp_data['pedu'].value_counts().tolist()\n\nplt.figure(figsize=(8, 8))\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\", colors=colors, shadow=True)\nplt.title(\"Parental Education Level Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","552f9321":"labels = ['Standard Lunch', 'Free Lunch']\nvalues = temp_data['lunch'].value_counts().tolist()\n\nplt.figure(figsize=(8, 8))\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\", colors=['#00ff90', '#00ff15'], shadow=True)\nplt.title(\"Lunch Status Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","5ba01e18":"plt.figure(figsize=(10, 7))\nsns.countplot(temp_data['test preparation course'])\nplt.title(\"Test Prep Course Count Plot\", fontdict={'fontsize': 14})\nplt.xlabel(\"Course Status\")\nplt.ylabel(\"Count\")\n\nplt.show()","f1fb8257":"plt.figure(figsize=(7, 7))\nplt.title(f\"Math Scores Distribution\")\nsns.histplot(data['math score'], stat='density')\nsns.kdeplot(data['math score'], color='blue')\nplt.axvline(data['math score'].mean(), color='red', linestyle='--', linewidth=0.8)\nmin_ylim, max_ylim = plt.ylim()\nplt.text(data['math score'].mean()*1.05, max_ylim*0.96, 'Mean (\u03bc): {:.2f}'.format(data['math score'].mean()))\nplt.xlabel(\"Score\")\nplt.ylabel(\"Density\")\nplt.show()","52e0508a":"print_quantile_summary(\"math score\")","8ee6c972":"plt.figure(figsize=(7, 7))\nplt.title(f\"Reading Scores Distribution\")\nsns.histplot(data['reading score'], stat='density', color=\"#00a9ff\")\nsns.kdeplot(data['reading score'], color='purple')\nplt.axvline(data['reading score'].mean(), color='red', linestyle='--', linewidth=0.8)\nmin_ylim, max_ylim = plt.ylim()\nplt.text(data['reading score'].mean()*0.64, max_ylim*0.96, 'Mean (\u03bc): {:.2f}'.format(data['reading score'].mean()))\nplt.xlabel(\"Score\")\nplt.ylabel(\"Density\")\nplt.show()","9b06e14e":"print_quantile_summary(\"reading score\")","7f834ac3":"plt.figure(figsize=(7, 7))\nplt.title(f\"Writing Scores Distribution\")\nsns.histplot(data['writing score'], stat='density', color=\"magenta\")\nsns.kdeplot(data['writing score'], color='blue')\nplt.axvline(data['writing score'].mean(), color='yellow', linestyle='--', linewidth=0.8)\nmin_ylim, max_ylim = plt.ylim()\nplt.text(data['writing score'].mean()*0.61, max_ylim*0.96, 'Mean (\u03bc): {:.2f}'.format(data['writing score'].mean()))\nplt.xlabel(\"Score\")\nplt.ylabel(\"Density\")\nplt.show()","14e240d9":"print_quantile_summary(\"writing score\")","1c481360":"unq_groups = data['race\/ethnicity'].value_counts().index.tolist()\n\nfe_list = []\nma_list = []\nfe_std = []\nma_std = []\nfor gr in unq_groups:\n    temp_condition = data['race\/ethnicity'] == gr\n    male_cond = data['gender'] == 'male'\n    female_cond = data['gender'] == 'female'\n    ma_list.append(data[temp_condition & male_cond].count().max())\n    fe_list.append(data[temp_condition & female_cond].count().max())\n    fe_std.append(data[temp_condition & female_cond]['gender'].index.values.mean())\n    ma_std.append(data[temp_condition & male_cond]['gender'].index.values.mean())\n    \nwidth = 0.35","9b102b7c":"fig, ax = plt.subplots(figsize=(8, 7))\n\nax.bar(unq_groups, ma_list, width, label='Male', color='blue')\nax.bar(unq_groups, fe_list, width, bottom=ma_list, label='Female', color='aqua')\n\nax.set_ylabel('Count')\nax.set_xlabel('Group')\nax.set_title('Count by Race\/Ethnicity and Gender')\nax.legend()\n\nplt.show()","9504e75e":"unq_groups = temp_data['pedu'].value_counts().index.tolist()\n\nfe_list = []\nma_list = []\nfe_std = []\nma_std = []\nfor gr in unq_groups:\n    temp_condition = temp_data['pedu'] == gr\n    male_cond = temp_data['gender'] == 'male'\n    female_cond = temp_data['gender'] == 'female'\n    ma_list.append(temp_data[temp_condition & male_cond].count().max())\n    fe_list.append(temp_data[temp_condition & female_cond].count().max())\n    fe_std.append(temp_data[temp_condition & female_cond]['gender'].index.values.mean())\n    ma_std.append(temp_data[temp_condition & male_cond]['gender'].index.values.mean())\n    \nwidth = 0.35","66dc20e8":"fig, ax = plt.subplots(figsize=(8, 6))\n\nax.bar(unq_groups, ma_list, width, label='Male', color='blue')\nax.bar(unq_groups, fe_list, width, bottom=ma_list, label='Female', color='magenta')\n\nax.set_ylabel('Count')\nax.set_xlabel('Group')\nax.set_title('Count by Parental Education Level and Gender')\nax.legend()\n\nplt.xticks(rotation=45)\nplt.show()","57b23cdb":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(9, 5))\n\nsns.boxplot(x='gender', y='math score', data=data, ax=ax[0], palette='winter_r')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Gender\")\nax[0].set_ylabel(\"Math Score\")\n\nsns.violinplot(x='gender', y='math score', data=data, ax=ax[1], palette='winter_r')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Gender\")\nax[1].set_ylabel(\"Math Score\", color='w')\n\nfig.suptitle(\"Gender vs Math Score plots\", fontsize=18)\nplt.show()","f4e5de25":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(9, 5))\n\nsns.boxplot(x='gender', y='reading score', data=data, ax=ax[0], palette='gnuplot2_r')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Gender\")\nax[0].set_ylabel(\"Reading Score\")\n\nsns.violinplot(x='gender', y='reading score', data=data, ax=ax[1], palette='gnuplot2_r')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Gender\")\nax[1].set_ylabel(\"Reading Score\", color='w')\n\nfig.suptitle(\"Gender vs Reading Score plots\", fontsize=18)\nplt.show()","d47e484d":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(9, 5))\n\nsns.boxplot(x='gender', y='writing score', data=data, ax=ax[0], palette='tab20')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Gender\")\nax[0].set_ylabel(\"Writing Score\")\n\nsns.violinplot(x='gender', y='writing score', data=data, ax=ax[1], palette='tab20')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Gender\")\nax[1].set_ylabel(\"Writing Score\", color='w')\n\nfig.suptitle(\"Gender vs Writing Score plots\", fontsize=18)\nplt.show()","7310e25d":"average_score = []\nfor _, x in data.iterrows():\n    average_score.append((x['math score'] + x['reading score'] + x['writing score'])\/\/3)\n    \ndata['pedu'] = temp_data['pedu'].tolist()\ndata['average_score'] = average_score\ndata.head()","cede3108":"plt.figure(figsize=(7, 7))\nplt.title(f\"Average Score Distribution\")\nsns.histplot(data['average_score'], stat='density', color=\"pink\")\nsns.kdeplot(data['average_score'], color='blue')\nplt.axvline(data['average_score'].mean(), color='green', linestyle='--', linewidth=1)\nmin_ylim, max_ylim = plt.ylim()\nplt.text(data['average_score'].mean()*0.59, max_ylim*0.96, 'Mean (\u03bc): {:.2f}'.format(data['average_score'].mean()))\nplt.xlabel(\"Score\")\nplt.ylabel(\"Density\")\nplt.show()","7e882b28":"print_quantile_summary('average_score')","c413e0b5":"fig, ax = plt.subplots(nrows=2, ncols=3, figsize=(15, 15))\nfig.suptitle(\"Average Score in comparison to other Scores\", fontsize=19, y=1)\n\nf1 = sns.histplot(data['average_score'], color=\"green\", ax=ax[0, 0], label=\"Average Score\")\nf2 = sns.histplot(data['reading score'], color=\"yellow\", ax=ax[0, 0], label=\"Reading Score\")\nf1 = f1.legend(loc=\"best\")\nf2 = f2.legend(loc=\"best\")\n\nf1 = sns.histplot(data['average_score'], color=\"green\", ax=ax[0, 1], label=\"Average Score\")\nf2 = sns.histplot(data['writing score'], color=\"yellow\", ax=ax[0, 1], label=\"Writing Score\")\nf1 = f1.legend(loc=\"best\")\nf2 = f2.legend(loc=\"best\")\n\nf1 = sns.histplot(data['average_score'], color=\"green\", ax=ax[0, 2], label=\"Average Score\")\nf2 = sns.histplot(data['math score'], color=\"yellow\", ax=ax[0, 2], label=\"Math Score\")\nf1 = f1.legend(loc=\"best\")\nf2 = f2.legend(loc=\"best\")\n\ng1 = sns.kdeplot(data['average_score'], color=\"blue\", shade=True, ax=ax[1, 0], label=\"Average Score\")\ng2 = sns.kdeplot(data['reading score'], color=\"purple\", shade=True, ax=ax[1, 0], label=\"Reading Score\")\ng1 = g1.legend(loc=\"best\")\ng2 = g2.legend(loc=\"best\")\n\ng1 = sns.kdeplot(data['average_score'], color=\"blue\", shade=True, ax=ax[1, 1], label=\"Average Score\")\ng2 = sns.kdeplot(data['writing score'], color=\"purple\", shade=True, ax=ax[1, 1], label=\"Writing Score\")\ng1 = g1.legend(loc=\"best\")\ng2 = g2.legend(loc=\"best\")\n\ng1 = sns.kdeplot(data['average_score'], color=\"blue\", shade=True, ax=ax[1, 2], label=\"Average Score\")\ng2 = sns.kdeplot(data['math score'], color=\"purple\", shade=True, ax=ax[1, 2], label=\"Math Score\")\ng1 = g1.legend(loc=\"best\")\ng2 = g2.legend(loc=\"best\")\n\nax[0, 0].set_title(\"[HISTOGRAM] Average Score vs Reading Score\")\nax[0, 1].set_title(\"[HISTOGRAM] Average Score vs Writing Score\")\nax[0, 2].set_title(\"[HISTOGRAM] Average Score vs Math Score\")\n\nax[1, 0].set_title(\"[DISTRIBUTION] Average Score vs Reading Score\")\nax[1, 1].set_title(\"[DISTRIBUTION] Average Score vs Writing Score\")\nax[1, 2].set_title(\"[DISTRIBUTION] Average Score vs Math Score\")\n\nplt.tight_layout()\nplt.show()","5453893f":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(9, 5))\n\nsns.boxplot(x='gender', y='average_score', data=data, ax=ax[0], palette='gnuplot')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Gender\")\nax[0].set_ylabel(\"Average Score\")\n\nsns.violinplot(x='gender', y='average_score', data=data, ax=ax[1], palette='gnuplot')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Gender\")\nax[1].set_ylabel(\"Average Score\", color='w')\n\nfig.suptitle(\"Gender vs Average Score plots\", fontsize=18)\nplt.show()","70cf80ab":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(11, 5))\n\nsns.boxplot(x='race\/ethnicity', y='average_score', data=data, ax=ax[0], palette='Set3')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Race\")\nax[0].set_ylabel(\"Average Score\")\n\nsns.violinplot(x='race\/ethnicity', y='average_score', data=data, ax=ax[1], palette='Set3')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Race\")\nax[1].set_ylabel(\"Average Score\", color='w')\n\nfig.suptitle(\"Race\/Ethnicity vs Average Score plots\", fontsize=18)\nplt.show()","8ae04f62":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(12, 5))\n\nsns.boxplot(x='pedu', y='average_score', data=data, ax=ax[0], palette='viridis')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Education Level\")\nax[0].set_ylabel(\"Average Score\")\nax[0].tick_params(axis='x', rotation=45)\n\nsns.violinplot(x='pedu', y='average_score', data=data, ax=ax[1], palette='viridis')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Education Level\")\nax[1].set_ylabel(\"Average Score\", color='w')\nax[1].tick_params(axis='x', rotation=45)\n\nfig.suptitle(\"Parental Education Level vs Average Score plots\", fontsize=18)\n\nplt.show()","05dc5088":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(10, 5))\n\nsns.boxplot(x='test preparation course', y='average_score', data=data, ax=ax[0], palette='twilight_shifted')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Course Status\")\nax[0].set_ylabel(\"Average Score\")\nax[0].tick_params(axis='x', rotation=45)\n\nsns.violinplot(x='test preparation course', y='average_score', data=data, ax=ax[1], palette='twilight_shifted')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Course Status\")\nax[1].set_ylabel(\"Average Score\", color='w')\nax[1].tick_params(axis='x', rotation=45)\n\nfig.suptitle(\"Test Preparation Course status vs Average Score plots\", fontsize=18)\n\nplt.show()","210db42c":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(10, 5))\n\nsns.boxplot(x='lunch', y='average_score', data=data, ax=ax[0], palette='Spectral')\nax[0].set_title(\"Box Plot\")\nax[0].set_xlabel(\"Type of Lunch\")\nax[0].set_ylabel(\"Average Score\")\nax[0].tick_params(axis='x', rotation=45)\n\nsns.violinplot(x='lunch', y='average_score', data=data, ax=ax[1], palette='Spectral')\nax[1].set_title(\"Violin Plot\")\nax[1].set_xlabel(\"Type of Lunch\")\nax[1].set_ylabel(\"Average Score\", color='w')\nax[1].tick_params(axis='x', rotation=45)\n\nfig.suptitle(\"Type of Lunch vs Average Score plots\", fontsize=18)\n\nplt.show()","85f9e66a":"dabl.plot(data, target_col='average_score')","a0f83067":"# Make a dataframe for our test\ntests = pd.DataFrame()\n\n# Get the scores from old dataframe\nreading = data['reading score'].values\nwriting = data['writing score'].values\nmath = data['math score'].values\naverage = data['average_score'].values\n\nrlist, wlist, mlist, alist = [], [], [], []\n\n# Make a list of all scores and iteratively calculate the shapiro value\nscores = [('reading', reading, rlist), ('writing', writing, wlist), ('math', math, mlist), ('average', average, alist)]\nfor score in scores:\n    _, prob = shapiro(score[1])\n    if prob > 0.05:\n        score[2].append(\"H0\")\n    else:\n        score[2].append(\"H1\")\n\n    tests[f'{score[0]}_shapiro'] = score[2]\n\ntests.head()","894f425c":"# Get the scores from old dataframe\nreading = data['reading score'].values\nwriting = data['writing score'].values\nmath = data['math score'].values\naverage = data['average_score'].values\n\nrlist, wlist, mlist, alist = [], [], [], []\n\n# Make a list of all scores and iteratively calculate the shapiro value\nscores = [('reading', reading, rlist), ('writing', writing, wlist), ('math', math, mlist), ('average', average, alist)]\n\n# Make a list of all scores and iteratively calculate the d'augstino value\nfor score in scores:\n    _, prob = normaltest(score[1])\n    if prob > 0.05:\n        score[2].append(\"H0\")\n    else:\n        score[2].append(\"H1\")\n\n    tests[f\"{score[0]}_d'augstino\"] = score[2]\n\ntests.head()","6870833a":"cprint(\"[bold green]UNDER WORK!! MORE STUFF IS BEING ADDED REGULARLY[\/bold green]\")","e1c1f31e":"# Exploratory Data Analysis \ud83d\udcca\ud83d\udcc8\n\nLet's now start with EDA on the dataset as we move column by column.","c9d080aa":"## Shapiro-Wilk Test\n\nShapiro-Wilk tests whether a data sample has a Gaussian distribution.\n\nAssumptions:\n* Observations in each sample are independent and identically distributed (iid).\n\nInterpretation:\n* H0: the sample has a Gaussian distribution.\n* H1: the sample does not have a Gaussian distribution.\n\nWe will do this test on `Reading Score`, `Writing Score`, `Math Score` and `Average Score` and then store the results in a dataframe.","063b045d":"## Parental Level of Education \ud83d\udcd4\ud83d\udcd6\n\nLet's move on to this another column which indicates how much educated the parents are of the student.","6c0fdaec":"## Average Score: A New Feature\n\nLet's make a new feature called `average_score` that is made up of the average of all 3 scores of a student.","834dc932":"Below is the Color Palette that I am using in this notebook;","1cdbcebe":"## Gender vs Math Score\n\nLet's now see how gender and math score behave with each other.","af62f5eb":"### Average Score - Histplot and Stats\n\nNow that we have made this new features, let's also see it's distribution and it's stats.","82c6307b":"## D\u2019Agostino\u2019s K^2 Test\n\nTests whether a data sample has a Gaussian distribution.\n\nAssumptions\n\n* Observations in each sample are independent and identically distributed (iid).\n\nInterpretation\n\n* H0: the sample has a Gaussian distribution.\n* H1: the sample does not have a Gaussian distribution.","40e4f970":"## Parental Education vs Gender\n\nNow we observe the trends of Gender column with respect to Parental Education column.","83170258":"## Writing Score \ud83d\udd8a\n\nThis Variable (just like the 2 above) is also a continuous one which represents the ","63615687":"### Parental Level of Education vs Average Score Plots\n\nLet's see the behavior of Parental Level of Education with Average Score.","df9ef222":"### Test Preparation Course vs Average Score\n\nFinally, let's see how completing Test Prep courses help with Average Score of a Student.","c2f2a210":"### Gender vs Average Score\n\nLet's do the same thing as we did above for 3 individual scores but instead with average score.","5042fb58":"<center><h1 style=\"background:#3CB6A3\">In-depth EDA \ud83d\udcca + Testing \ud83d\udcc8 on Student Performance Dataset<\/h1><\/center>\n<br>\n<center><img height=400px width=900px src=\"https:\/\/images.pexels.com\/photos\/4050320\/pexels-photo-4050320.jpeg?cs=srgb&dl=pexels-vlada-karpovich-4050320.jpg&fm=jpg\" \/><\/center>\n<br>\n<center>In this notebook, I have performed In-depth Exploratory Data Analysis, made a new meta-feature and performed even more EDA using that and did some very basic Hypothesis Testing.<\/center>\n<br>\n<center style=\"color:blue\">If you found this notebook helpful, consider leaving an upvote\/comment with thoughts and suggestions!<\/center>","b62b3ae2":"### Average Score in Comparison with Other 3 Scores\n\nSince the `average_score` is the average of the 3 other scores (`math`, `reading` and `writing` scores), it makes sense to see how average score stands on top of the other 3 scores and that which of the other scores had most affect on this new feature.","1a840efe":"As you can see from above, those who have completed the Test Preparation Course tend to have a higher average score than those who haven't.","04c4cbe9":"### Race\/Ethnicity vs Average Score Plots\n\nLet's see the behavior of Race\/Ethnicity with Average Score","2774d840":"## DABL Plot\n\nLet's now use DABL to do automatic plotting by taking `average_score` as our target variable.","448b4e87":"## Reading Score \ud83d\udcd4\n\nSimilar to Math Score column, this is also a Continuous variable which represents the scores in reading exams taken by various students.","50def23d":"As we can see from above, the Students who had Standard lunch tend to score higher than those who didn't had standard lunch.\n\nI guess my grandma was right: A full stomach helps you concentrate!","dd01168a":"## Gender \u2642\u2640\n\nLet's start by looking at the Gender plot. Below you will see 2 plots (a count plot and a pie chart showing gender distributions)","1befa4f2":"# Hypothesis Testing \ud83d\udcc2\n\nLet's now continue our work and start with Hypothesis testing.","2b7406db":"## Gender vs Race\/Ethnicity Plots\n\nLet's start by observing the trends of Gender column with respect to Race\/Ethnicity column.","70755183":"## Math Score \u270f\n\nThis column represents the score in maths achieved my a student in math out of a maximum of 100","61a205ec":"# Introduction  and Imports \ud83d\udcda\ud83e\udd62\n\nWe begin with imports and basic EDA and then we'll move on to advanced EDA and testing!","849e076b":"##  Lunch \ud83c\udf71\ud83c\udf72\n\nThis column represents the category of lunch, a student takes in the school.","14e7c175":"#### What's the NULL value status in the dataset?","b35ab929":"# Index \ud83d\udcd6\n\n* [1. Introduction and Imports](#Introduction--and-Imports-%F0%9F%93%9A%F0%9F%A5%A2)\n* [2. Exploratory Data Analysis](#Exploratory-Data-Analysis-%F0%9F%93%8A%F0%9F%93%88)\n    * [2.1 Gender](#Gender-%E2%99%82%E2%99%80)\n    * [2.2 Race\/Ethnicity](#Race\/Ethinicity-%E2%99%82%E2%99%80)\n    * [2.3 Parental Level of Education](#Parental-Level-of-Education-%F0%9F%93%94%F0%9F%93%96)\n    * [2.4 Lunch](#Lunch-%F0%9F%8D%B1%F0%9F%8D%B2)\n    * [2.5 Test Preparation Course Status](#Test-Preparation-Course-Status-%F0%9F%96%8A%F0%9F%96%8B)\n    * [2.6 Math Score](#Math-Score-%E2%9C%8F)\n    * [2.7 Reading Score](#Reading-Score-%F0%9F%93%94)\n    * [2.8 Writing Score](#Writing-Score-%F0%9F%96%8A)\n* [3. In-depth Exploratory Data Analysis](#In-depth-Exploratory-Data-Analysis-%F0%9F%93%88)\n    * [3.1 Gender vs Race\/Ethnicity Plots](#Gender-vs-Race\/Ethnicity-Plots)\n    * [3.2 Parental Education vs Gender](#Parental-Education-vs-Gender)\n    * [3.3 Gender vs Math Score](#Gender-vs-Math-Score)\n    * [3.4 Gender vs Reading Score](#Gender-vs-Reading-Score)\n    * [3.5 Gender vs Writing Score](#Gender-vs-Writing-Score)\n    * [3.6 Average Score - A New Feature](#Average-Score:-A-New-Feature)\n        * [3.6.1 Average Score - Histplot and Stats](#Average-Score---Histplot-and-Stats)\n        * [3.6.2 Average Score in Comparison with Other 3 Scores](#Average-Score-in-Comparison-with-Other-3-Scores)\n        * [3.6.3 Gender vs Average Score](#Gender-vs-Average-Score)\n        * [3.6.4 Race\/Ethnicity vs Average Score Plots](#Race\/Ethnicity-vs-Average-Score-Plots)\n        * [3.6.5 Parental Level of Education vs Average Score Plots](#Parental-Level-of-Education-vs-Average-Score-Plots)\n        * [3.6.6 Test Preparation Course vs Average Score](#Test-Preparation-Course-vs-Average-Score)\n        * [3.6.7 Lunch vs Average Score](#Lunch-vs-Average-Score)\n* [4. DABL Plot](#DABL-Plot)\n* [5. Testing](#Hypothesis-Testing-%F0%9F%93%82)\n    * [5.1 Shapiro Wilk Test](#Shapiro-Wilk-Test)\n    * [5.2 D\u2019Agostino\u2019s K^2 Test](#D%E2%80%99Agostino%E2%80%99s-K^2-Test)","61559f9c":"## Gender vs Reading Score\n\nSimilarly, let's plot for Gender vs Reading Score.","7bf98a50":"# In-depth Exploratory Data Analysis \ud83d\udcc8\n\nLet's continue with EDA but in more in-depth form!\n\nWe'll start this by going ","6b7ecccc":"## Race\/Ethinicity \u2642\u2640\n\nNow let's look at Race\/Ethinicity of an Individual student here by similarly having 2 plots as above one.\n\nIf you are wondering as to why does the catgories in this table is expressed in terms of vague groups rather than actual names, then the reason is that this topic (race & ethinicity) is a very sensitive one and also so that there is no bias in the modelling or the modeller.","95ceb26b":"### Lunch vs Average Score\n\nDoes the type of chosen lunch have any effect on the Student's Average Score?","e3c04016":"##  Test Preparation Course Status \ud83d\udd8a\ud83d\udd8b\n\nThis column represents the status of the test preparation course taken by students.","8159b82e":"## Gender vs Writing Score\n\nFinally, let's take a look at Gender vs Writing Score"}}