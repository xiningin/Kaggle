{"cell_type":{"e1726d71":"code","ec345bd3":"code","df84b651":"code","84c26458":"code","1d050d46":"code","e41e1e83":"code","765dd058":"code","906bd09a":"code","cc85dfd6":"code","da67e325":"code","899112bb":"code","6b8ae55a":"code","a6d68eab":"code","2bf5b346":"code","72d4ad6a":"code","88f4e10b":"code","10b326e7":"code","4e2e7263":"code","4349f46d":"code","e486c7cc":"code","549d9fd0":"code","e7bcce09":"code","6b6d393f":"code","3dc9b793":"code","2d65b6a9":"code","8272184e":"code","66af7c1e":"code","853115dc":"code","ccc31f06":"code","02645ec5":"code","2dce7568":"code","c8e36e98":"code","1b3b661a":"code","0dcb4aeb":"code","03491e91":"code","7d0cf095":"code","374b0947":"code","1c62f56f":"code","20628c88":"code","abdf4c44":"code","043a3faa":"code","5b9eaa00":"code","87c28ae6":"code","7035d35c":"code","2ff24b9e":"code","73f01ba0":"code","9a94f251":"code","05c3d8a4":"code","d7491f13":"code","b2d53016":"code","01838bbc":"code","e70f079a":"code","32c231aa":"code","57e93de1":"code","86ebcf3f":"code","1abb9bfa":"code","43266792":"code","15c924bd":"code","f469c121":"code","f5ad5a29":"code","4cb56de9":"code","7face3f9":"code","ba8fec03":"code","c7ad3fb7":"markdown","412219ef":"markdown","3f2e8bb4":"markdown","ae42d188":"markdown"},"source":{"e1726d71":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","ec345bd3":"df = pd.read_csv('..\/input\/us-elections-dataset\/usa-2016-presidential-election-by-county.csv', sep = ';')","df84b651":"df","84c26458":"df.info()","1d050d46":"df.shape","e41e1e83":"df.isnull().sum()","765dd058":"df.describe()","906bd09a":"df","cc85dfd6":"df.Votes.sum() # total votes casted in all states","da67e325":"df.County.nunique()  # total no of Counties","899112bb":"df[['Democrats 2016', 'Republicans 2016']].sum() # total votes by party","6b8ae55a":"df.groupby('Votes')['County'].value_counts().sort_values(ascending = False).head()","a6d68eab":"df.groupby('Votes')['State'].value_counts().sort_values(ascending = False).head()","2bf5b346":"df.groupby(['Votes','State'])['Republicans 08 (Votes)'].max().sort_values(ascending = False).head()","72d4ad6a":"df.groupby(['Votes','State'])['Democrats 08 (Votes)'].min().sort_values(ascending = False).head()","88f4e10b":"sns.distplot(df['Democrats 2016'].dropna(), kde=False, bins=20)","10b326e7":"import cufflinks as cf","4e2e7263":"cf.go_offline()","4349f46d":"df['County'].dropna().iplot(kind='bar',)","e486c7cc":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap = 'viridis')","549d9fd0":"df.isnull().sum().sort_values(ascending= False)","e7bcce09":"df.isna().sum().count()","6b6d393f":"df.shape","3dc9b793":"percent_missing = df.isnull().sum() * 100 \/ len(df)","2d65b6a9":"missing_value_df = pd.DataFrame({'column_name': df.columns,\n                                 'percent_missing': percent_missing})","8272184e":"missing_value_df.sort_values('percent_missing', inplace=True, ascending = False)","66af7c1e":"missing_value_df","853115dc":"df.dropna(axis=1,thresh=0.7*len(df), inplace=True) # using a thresh function to get certain range of values to drop","ccc31f06":"df.isnull().sum().max()","02645ec5":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap = 'viridis')","2dce7568":"df.isnull().sum().sort_values(ascending=False)","c8e36e98":"df.fillna(method='ffill', inplace=True )","1b3b661a":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap = 'viridis')","0dcb4aeb":"df","03491e91":"correlated_features = set()\ncorrelation_matrix = df.corr()\n\nfor i in range(len(correlation_matrix.columns)):\n    for j in range(i):\n        if abs(correlation_matrix.iloc[i, j]) > 0.8:\n            colname = correlation_matrix.columns[i]\n            correlated_features.add(colname)","7d0cf095":"correlated_features","374b0947":"df = df[['Asian','At Least High School Diploma','Black','Child.Poverty.living.in.families.below.the.poverty.line',\n        'Democrats 08 (Votes)','Democrats 12 (Votes)','Democrats 2008','Democrats 2012','Graduate Degree',\n        'Nearest County','Poverty.Rate.below.federal.poverty.threshold','Republicans 08 (Votes)',\n         'Republicans 12 (Votes)','Republicans 2008','Republicans 2012','Total Population','Votes',\n        'White','White  Asian','total08','total12','total16', 'Democrats 2016', 'Republicans 2016']]","1c62f56f":"df = df.dropna()","20628c88":"df.head()","abdf4c44":"features = df.drop(columns=['Democrats 2016', 'Republicans 2016'])","043a3faa":"target = df[['Democrats 2016', 'Republicans 2016']]","5b9eaa00":"print(target.shape)\nprint(features.shape)","87c28ae6":"from sklearn.linear_model import LinearRegression\n\nfrom sklearn.model_selection import train_test_split","7035d35c":"X_train, X_test, y_train, y_test = train_test_split( features, target, test_size=0.3, random_state=42)","2ff24b9e":"print(X_test.shape)\nprint(X_train.shape)\nprint(y_test.shape)\nprint(y_train.shape)","73f01ba0":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nnormalised_X_train = scaler.fit_transform(X_train)\nnormalised_X_train = pd.DataFrame(normalised_X_train, columns=X_train.columns)","9a94f251":"normalised_X_train.head()","05c3d8a4":"normalised_X_test = scaler.transform(X_test)\nnormalised_X_test = pd.DataFrame(normalised_X_test, columns=X_test.columns)","d7491f13":"normalised_X_test.head()","b2d53016":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.multioutput import MultiOutputRegressor","01838bbc":"max_depth = 30\nregr_multirf = MultiOutputRegressor(RandomForestRegressor(n_estimators=100,\nmax_depth=max_depth,\nrandom_state=0))\nregr_multirf.fit(normalised_X_train, y_train)\n\nregr_rf = RandomForestRegressor(n_estimators=100, max_depth=max_depth,\nrandom_state=2)\nregr_rf.fit(normalised_X_train, y_train)","e70f079a":"y_multirf = regr_multirf.predict(normalised_X_test)\ny_rf = regr_rf.predict(normalised_X_test)","32c231aa":"y_multirf # comparing the predicted results","57e93de1":"y_test.head() # Original result","86ebcf3f":"from sklearn import metrics","1abb9bfa":"# MAE values\nMAE = metrics.mean_absolute_error(y_test,y_multirf)\nround(MAE,2) # this tell us our model actually predicts an average of 2.76 more or less value which is very impressive ","43266792":"# R Squared values\nr2 = metrics.r2_score(y_test,y_multirf)\nround(r2,2)  # This gives us a better rating of our model that it is actually very impressive, it tells us that \n               #  the regression line has fitted our dataset very well","15c924bd":"# RMSE\nRMSE = np.sqrt(metrics.mean_squared_error(y_test,y_multirf))\nRMSE\n","f469c121":"y_test.describe()","f5ad5a29":"y_multirf = pd.DataFrame(y_multirf)","4cb56de9":"y_multirf.sum() # Republicans emerged winners according to this discription","7face3f9":"sns.jointplot(data = df, x = 'Democrats 2016', y = 'Votes')","ba8fec03":"sns.jointplot(data = df, x = 'Republicans 2016', y = 'Votes')","c7ad3fb7":"IN GENERAL ALL THE METRICS SHOWN HERE GAVE US BETTER RESULT OF OUR MODEL","412219ef":"### Carrying out Recursive Feature Elimination (Feature selection)","3f2e8bb4":"### Training the model","ae42d188":"## Cleaning of Data"}}