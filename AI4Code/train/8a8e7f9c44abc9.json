{"cell_type":{"bbd03375":"code","7cffd2db":"code","3b904974":"code","e27f398b":"code","ee5ca862":"code","53488f70":"code","c6422e2e":"code","a2e1147d":"code","8e3f9d72":"code","73601191":"code","3f647acd":"code","b6dcf1bb":"code","a470ea37":"code","57988033":"code","45dfc350":"code","5961a84c":"code","7c3f8ff6":"code","0f1e14c3":"code","e01a4f4e":"code","28f5775b":"code","697d902a":"code","d8e02117":"code","fa60f6db":"code","4631c02d":"code","d1031b23":"code","79f12cab":"code","43d87d2c":"code","a3932899":"code","cf7a3570":"code","c89b0695":"code","48676116":"code","f34c8dc3":"code","28d57f87":"code","e8fda9dc":"code","56bf3c66":"code","e7f8612f":"code","7d727ad2":"code","17635e06":"code","ba41e0c2":"code","ca1e40e5":"code","1938b925":"code","8a4a301a":"code","420eb030":"code","1c370162":"code","ec84f85d":"code","94c7bdca":"code","b5dd311c":"code","f53a347f":"code","ab16f727":"code","e750c2e2":"code","e0a47550":"code","5d5e2841":"code","d6ad9b4a":"code","b4151727":"code","d5716083":"code","275c4f8a":"code","317edeb9":"code","5ed5bc7e":"code","e530e796":"code","830f91d0":"code","de034559":"code","290293d8":"code","89ae99d5":"code","23a9e58b":"code","58c2c24c":"code","4c1c1e71":"code","29f349f0":"code","15ea2995":"code","6540f0a6":"code","221d45bf":"code","776db9ab":"code","aeccb02f":"code","dae829ef":"code","4d0115c0":"code","29ede660":"code","49ba22f8":"code","4a4cda75":"code","77688f72":"code","f2dc5171":"code","b6d64d6e":"code","ed0bb947":"code","8d81f8d7":"code","63786915":"code","a7eed0c4":"code","1f349af7":"code","c72d9413":"code","f5c8c285":"code","f2349a24":"code","aaacfc3c":"code","94beb88d":"code","25e0cdf4":"markdown","238e88d5":"markdown","236401bf":"markdown"},"source":{"bbd03375":"import numpy as np\nimport pandas as pd\nimport sklearn\nimport matplotlib.pyplot as plt\n%matplotlib inline","7cffd2db":"df = pd.read_csv(\"..\/input\/bluebook-for-bulldozers\/TrainAndValid.csv\", low_memory=False)\ndf.head()","3b904974":"df.info()","e27f398b":"df.isna().sum()","ee5ca862":"fig, ax = plt.subplots(figsize=(10, 6))\nax.scatter(df.saledate[:1000], df.SalePrice[:1000])\nplt.show()","53488f70":"df.SalePrice.plot.hist()\nplt.show()","c6422e2e":"df = pd.read_csv(\"..\/input\/bluebook-for-bulldozers\/TrainAndValid.csv\"\n                ,low_memory=False\n                ,parse_dates=[\"saledate\"])\ndf.head()","a2e1147d":"df.saledate.dtype","8e3f9d72":"df.saledate","73601191":"fig, ax = plt.subplots(figsize=(10,6))\nax.scatter(df.saledate[:1000], df.SalePrice[:1000])\nplt.show()","3f647acd":"df.head()","b6dcf1bb":"df.head().T","a470ea37":"df.saledate.head(20)","57988033":"df.sort_values(by=[\"saledate\"]\n              ,ascending=True\n              ,inplace=True)","45dfc350":"df.saledate.head(20)","5961a84c":"df_temp = df.copy()","7c3f8ff6":"df_temp.head().T","0f1e14c3":"df.saledate.head(20)","e01a4f4e":"df_temp[\"saleYear\"] = df_temp.saledate.dt.year\ndf_temp.saleYear.head()","28f5775b":"df_temp[\"saleMonth\"] = df_temp.saledate.dt.month\ndf_temp.saleMonth.head()","697d902a":"df_temp[\"saleDay\"] = df_temp.saledate.dt.day\ndf_temp.saleDay.head()","d8e02117":"df_temp[\"saleDayOfWeek\"] = df_temp.saledate.dt.dayofweek\ndf_temp.saleDayOfWeek.head()","fa60f6db":"df_temp[\"saleDayOfYear\"] = df_temp.saledate.dt.dayofyear\ndf_temp.saleDayOfYear.head()","4631c02d":"df_temp.drop(\"saledate\",axis=1, inplace=True)","d1031b23":"df_temp.state.value_counts()","79f12cab":"df_temp.info()","43d87d2c":"from sklearn.ensemble import RandomForestRegressor\n\nmodel = RandomForestRegressor(n_jobs=-1\n                             ,random_state=42)","a3932899":"pd.api.types.is_string_dtype(df_temp.UsageBand)","cf7a3570":"for label, content in df_temp.items():\n    if pd.api.types.is_string_dtype(content):\n        df_temp[label] = content.astype(\"category\").cat.as_ordered()\n        \ndf_temp.info()","c89b0695":"df_temp.state.cat.codes","48676116":"df_temp.isna().sum()\/len(df_temp) * 100","f34c8dc3":"for label, content in df_temp.items():\n    if pd.api.types.is_numeric_dtype(content):\n        if pd.isnull(content).sum():\n            print(label)","28d57f87":"for label, content in df_temp.items():\n    if pd.api.types.is_numeric_dtype(content):\n        if pd.isnull(content).sum():\n            df_temp[label+\"_is_missing\"] = pd.isnull(content)\n            df_temp[label]=content.fillna(content.median())","e8fda9dc":"for label, content in df_temp.items():\n    if pd.api.types.is_numeric_dtype(content):\n        if pd.isnull(content).sum():\n            print(label)","56bf3c66":"df_temp.auctioneerID_is_missing.value_counts()","e7f8612f":"df_temp.MachineHoursCurrentMeter_is_missing.value_counts()","7d727ad2":"df_temp.info()","17635e06":"df_temp.isna().sum()","ba41e0c2":"pd.Categorical(df_temp.state).codes","ca1e40e5":"for label, content in df_temp.items():\n    if not pd.api.types.is_numeric_dtype(content):\n        df_temp[label+\"_is_missing\"]=pd.isnull(content)\n        df_temp[label]=pd.Categorical(content).codes + 1","1938b925":"df_temp.isna().sum()","8a4a301a":"model","420eb030":"df_temp.info()","1c370162":"for label, content in df_temp.items():\n    if not pd.api.types.is_numeric_dtype(content):\n        if pd.isnull(content).sum():\n            print(label)","ec84f85d":"%%time\nmodel.fit(df_temp.drop(\"SalePrice\", axis=1), df_temp.SalePrice)","94c7bdca":"model.score(df_temp.drop(\"SalePrice\", axis=1), df_temp.SalePrice)","b5dd311c":"df_temp.head()","f53a347f":"df_temp.saleYear","ab16f727":"df_val = df_temp[df_temp.saleYear == 2012]\ndf_train = df_temp[df_temp.saleYear != 2012]","e750c2e2":"df_val.head()","e0a47550":"df_train.head()","5d5e2841":"len(df_train), len(df_val)","d6ad9b4a":"X_train, y_train = df_train.drop(\"SalePrice\", axis=1), df_train.SalePrice\nX_val, y_val = df_val.drop(\"SalePrice\", axis=1), df_val.SalePrice\n\nX_train.shape, y_train.shape, X_val.shape, y_val.shape","b4151727":"%%time\nmodel.fit(X_train, y_train)","d5716083":"model.score(X_val, y_val)","275c4f8a":"from sklearn.metrics import mean_squared_log_error, r2_score, mean_absolute_error\n\n\ndef rmsle(y_test, y_preds):\n    return np.sqrt(mean_squared_log_error(y_test, y_preds))\n\ndef show_scores(model, X_train, X_valid, y_train, y_valid):\n    train_preds = model.predict(X_train)\n    val_preds = model.predict(X_valid)\n    \n    scores = {\n        \"MAE train\":mean_absolute_error(y_train, train_preds),\n        \"MAE valid\":mean_absolute_error(y_valid, val_preds),\n        \"RMSLE train\":rmsle(y_train, train_preds),\n        \"RMSLE valid\":rmsle(y_valid, val_preds),\n        \"R2 train\":r2_score(y_train, train_preds),\n        \"R2 valid\":r2_score(y_valid, val_preds)\n    }\n    \n    return scores ","317edeb9":"show_scores(model, X_train, X_val, y_train, y_val)","5ed5bc7e":"model.set_params(max_samples=10000)","e530e796":"show_scores(model, X_train, X_val, y_train, y_val)","830f91d0":"%%time\nmodel.fit(X_train, y_train)","de034559":"%%time\nshow_scores(model, X_train, X_val, y_train, y_val)\n#out of the box scores","290293d8":"# %%time\n# from sklearn.model_selection import RandomizedSearchCV, GridSearchCV\n\n# rs_grid = {\n#     \"n_estimators\":np.arange(10,100,10),\n#     \"max_depth\":[None, 3, 5, 10],\n#     \"min_samples_split\":np.arange(2,20,2),\n#     \"min_samples_leaf\":np.arange(1,20,2),\n#     \"max_features\":[0.5, 1, \"sqrt\", \"auto\"],\n#     \"max_samples\":[10_000],\n# }\n\n# rs_model = RandomizedSearchCV(estimator=RandomForestRegressor(random_state=42, n_jobs=-1),\n#                              param_distributions=rs_grid,\n#                              n_iter=1000,\n#                              cv=5,\n#                              verbose=2)","89ae99d5":"# %%time\n# rs_model.fit(X_train, y_train)\n# rs_model.best_params_","23a9e58b":"model","58c2c24c":"model.set_params(max_samples=None)","4c1c1e71":"model.set_params(n_estimators=80, min_samples_split=4, min_samples_leaf=1, max_features=\"auto\", max_depth=None)","29f349f0":"model","15ea2995":"%%time\nmodel.fit(X_train, y_train)\nmodel.score(X_val, y_val)\n","6540f0a6":"show_scores(model, X_train, X_val, y_train, y_val)","221d45bf":"df_test = pd.read_csv(\"..\/input\/bluebook-for-bulldozers\/Test.csv\", low_memory=False, parse_dates=[\"saledate\"])\ndf_test.head()","776db9ab":"df_test.info()","aeccb02f":"df_test.isna().sum()","dae829ef":"def preprocess_data(df):\n    df[\"saleYear\"] = df.saledate.dt.year\n    df[\"saleMonth\"] = df.saledate.dt.month\n    df[\"saleDay\"] = df.saledate.dt.day\n    df[\"saleDayOfWeek\"] = df.saledate.dt.dayofweek\n    df[\"saleDayOfYear\"] = df.saledate.dt.dayofyear\n    \n    df.drop(\"saledate\", axis=1, inplace=True)\n    \n    for label, content in df.items():\n        if pd.api.types.is_string_dtype(content):\n            df[label] = content.astype(\"category\").cat.as_ordered()\n            \n    for label, content in df.items():\n        if not pd.api.types.is_numeric_dtype(content):\n            df[label+\"_is_missing\"]=pd.isnull(content)\n            df[label]=pd.Categorical(content).codes + 1\n            \n        if pd.api.types.is_numeric_dtype(content):\n            if pd.isnull(content).sum():\n                df[label+\"_is_missing\"]=pd.isnull(content)\n                df[label]=content.fillna(content.median())\n    \n    return df","4d0115c0":"df_test = preprocess_data(df_test)","29ede660":"df_test.info()","49ba22f8":"for label, content in df_test.items():\n        if pd.api.types.is_string_dtype(content):\n            print(label)","4a4cda75":"for label, content in df_test.items():\n        if pd.api.types.is_numeric_dtype(content):\n            print(label)","77688f72":"df_test.isna().sum()","f2dc5171":"df_test.head()","b6d64d6e":"df_test.info()","ed0bb947":"X_train.head()","8d81f8d7":"df_test.head()","63786915":"model","a7eed0c4":"set(X_train.columns)-set(df_test.columns)","1f349af7":"df_test[\"auctioneerID_is_missimg\"] = False","c72d9413":"df_test.head()","f5c8c285":"%%time\ntest_preds = model.predict(df_test)","f2349a24":"test_preds","aaacfc3c":"len(test_preds)","94beb88d":"df_preds = pd.DataFrame()\ndf_preds[\"SalesID\"] = df_test[\"SalesID\"]\ndf_preds[\"SalesPrice\"] = test_preds\ndf_preds.to_csv(\".\/output.csv\", index=False)","25e0cdf4":"- n_iter = 1000\n\n{'n_estimators': 80,\n 'min_samples_split': 4,\n 'min_samples_leaf': 1,\n 'max_samples': 10000,\n 'max_features': 'auto',\n 'max_depth': None}","238e88d5":"# Predicting the sales price of bulldozers using Machine Learning.\n\n## 1. Problem Definition\n\n> How well can we predict the future sale price of a bulldozer given its characteristics and previous record of sales.(Regression Problem).\n\n## 2. Data\n\nThe data is used from kaggle's blue book for bulldozers, \nlink: https:\/\/www.kaggle.com\/c\/bluebook-for-bulldozers\/data\n\nThere are three main datasets:\n- Train.csv is the training set, which contains data through the end of 2011.\n- Valid.csv is the validation set, which contains data from January 1, 2012 - April 30, 2012 You make predictions on this set throughout the majority of the competition. Your score on this set is used to create the public leaderboard.\n- Test.csv is the test set, which won't be released until the last week of the competition. It contains data from May 1, 2012 - November 2012. Your score on the test set determines your final rank for the competition.\n\n## 3. Evaluation\n\nThe evaluation metric for this competition is the RMSLE (root mean squared log error) between the actual and predicted auction prices. For more on the evaluation check: https:\/\/www.kaggle.com\/c\/bluebook-for-bulldozers\/overview\/evaluation\n\n## 4. Features\n\n-Variable\tDescription\n-SalesID\t  unique identifier of a particular sale of a machine at auction\n-MachineID\t  identifier for a particular machine;  machines may have multiple sales\n-ModelID\t  identifier for a unique machine model (i.e. fiModelDesc)\n-datasource\t  source of the sale record;  some sources are more diligent about reporting attributes of the machine than others.  Note that a particular datasource may report on multiple auctioneerIDs.\n-auctioneerID\t  identifier of a particular auctioneer, i.e. company that sold the machine at auction.  Not the same as datasource.\n-YearMade\t  year of manufacturer of the Machine\n-MachineHoursCurrentMeter\t  current usage of the machine in hours at time of sale (saledate);  null or 0 means no hours have been reported for that sale\n-UsageBand\t  value (low, medium, high) calculated comparing this particular Machine-Sale hours to average usage for the ---fiBaseModel;  e.g. 'Low' means this machine has less hours given it's lifespan relative to average of fiBaseModel.\n-Saledate\t  time of sale\n-Saleprice\t  cost of sale in USD\n-fiModelDesc\t  Description of a unique machine model (see ModelID); concatenation of fiBaseModel & fiSecondaryDesc & -fiModelSeries & fiModelDescriptor\n-fiBaseModel\t  disaggregation of fiModelDesc\n-fiSecondaryDesc\t  disaggregation of fiModelDesc\n-fiModelSeries\t  disaggregation of fiModelDesc\n-fiModelDescriptor\t  disaggregation of fiModelDesc\n-ProductSize\t  Don't know what this is \n-ProductClassDesc\t  description of 2nd level hierarchical grouping (below ProductGroup) of fiModelDesc\n-State\t  US State in which sale occurred\n-ProductGroup\t  identifier for top-level hierarchical grouping of fiModelDesc\n-ProductGroupDesc\t  description of top-level hierarchical grouping of fiModelDesc\n-Drive_System\tmachine configuration;  typcially describes whether 2 or 4 wheel drive\n-Enclosure\tmachine configuration - does machine have an enclosed cab or not\n-Forks\tmachine configuration - attachment used for lifting\n-Pad_Type\tmachine configuration - type of treads a crawler machine uses\n-Ride_Control\tmachine configuration - optional feature on loaders to make the ride smoother\n-Stick\tmachine configuration - type of control \n-Transmission\tmachine configuration - describes type of transmission;  typically automatic or manual\n-Turbocharged\tmachine configuration - engine naturally aspirated or turbocharged\n-Blade_Extension\tmachine configuration - extension of standard blade\n-Blade_Width\tmachine configuration - width of blade\n-Enclosure_Type\tmachine configuration - does machine have an enclosed cab or not\n-Engine_Horsepower\tmachine configuration - engine horsepower rating\n-Hydraulics\tmachine configuration - type of hydraulics\n-Pushblock\tmachine configuration - option\n-Ripper\tmachine configuration - implement attached to machine to till soil\n-Scarifier\tmachine configuration - implement attached to machine to condition soil\n-Tip_control\tmachine configuration - type of blade control\n-Tire_Size\tmachine configuration - size of primary tires\n-Coupler\tmachine configuration - type of implement interface\n-Coupler_System\tmachine configuration - type of implement interface\n-Grouser_Tracks\tmachine configuration - describes ground contact interface\n-Hydraulics_Flow\tmachine configuration - normal or high flow hydraulic system\n-Track_Type\tmachine configuration - type of treads a crawler machine uses\n-Undercarriage_Pad_Width\tmachine configuration - width of crawler treads\n-Stick_Length\tmachine configuration - length of machine digging implement\n-Thumb\tmachine configuration - attachment used for grabbing\n-Pattern_Changer\tmachine configuration - can adjust the operator control configuration to suit the user\n-Grouser_Type\tmachine configuration - type of treads a crawler machine uses\n-Backhoe_Mounting\tmachine configuration - optional interface used to add a backhoe attachment\n-Blade_Type\tmachine configuration - describes type of blade\n-Travel_Controls\tmachine configuration - describes operator control configuration\n-Differential_Type\tmachine configuration - differential type, typically locking or standard\n-Steering_Controls\tmachine configuration - describes operator control configuration\n\n\n## 5. Modelling\n## 6. Experimentation","236401bf":"- n_iter = 10\n\n{'n_estimators': 30,\n 'min_samples_split': 12,\n 'min_samples_leaf': 5,\n 'max_samples': 10000,\n 'max_features': 'auto',\n 'max_depth': None}\n \n RMSLE: 0.256"}}