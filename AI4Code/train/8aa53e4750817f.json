{"cell_type":{"5a536d48":"code","da26cf7c":"code","b2c88df7":"code","5f5d6cd7":"code","1e433f86":"code","25db01ee":"code","5237b259":"code","6574f1a2":"code","788f14e4":"code","580c99a8":"code","275a8692":"code","7246bf3e":"code","e1b1f4a7":"code","58c02c39":"markdown","cfcf3185":"markdown","9085ff8d":"markdown","2718b8ad":"markdown","35be7965":"markdown","d5cd1a59":"markdown","ccc38787":"markdown","d4076b52":"markdown","b930604e":"markdown","6c984e6f":"markdown","77d81b49":"markdown","75a1b931":"markdown"},"source":{"5a536d48":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","da26cf7c":"path = '..\/input\/'\ntrain_transaction = pd.read_csv(path + 'train_transaction.csv', index_col='TransactionID')\ntest_transaction = pd.read_csv(path + 'test_transaction.csv', index_col='TransactionID')\n\ntrain_identity = pd.read_csv(path + 'train_identity.csv', index_col='TransactionID')\ntest_identity = pd.read_csv(path + 'test_identity.csv', index_col='TransactionID')\n\nsample_submission = pd.read_csv(path + 'sample_submission.csv', index_col='TransactionID')","b2c88df7":"train = train_transaction.merge(train_identity, how='left', left_index=True, right_index=True)\ntest = test_transaction.merge(test_identity, how='left', left_index=True, right_index=True)\n\ny_train = train['isFraud'].copy()\nX_train = train.drop('isFraud', axis=1)\nX_test = test.copy()\n\ndel train, test, train_transaction, train_identity, test_transaction, test_identity","5f5d6cd7":"X_train.shape[0]","1e433f86":"X_test.shape[0]","25db01ee":"X_train.shape[1]","5237b259":"type_count = X_train.dtypes.value_counts()\nsns.barplot(type_count.index.astype('str'), type_count.values, alpha=0.8)\nplt.title('Dataset columns types')\nplt.ylabel('Number of Columns', fontsize=12)\nplt.xlabel('Type', fontsize=12)\nplt.show()","6574f1a2":"X_train.isnull().sum()","788f14e4":"X_train.select_dtypes(['object']).columns","580c99a8":"f, axes = plt.subplots(6, 4, figsize=(24, 30))\n\nobject_type_columns = ['ProductCD','card4','card6','M2','M3','M4','M5','M6','M7','M8','M9','id_12','id_15','id_16',\n                       'id_23','id_27','id_28','id_29','id_34','id_35','id_36','id_37','id_38','DeviceType']\n\nrow, col, index = 0, 0, 0\n\nfor i in range(6):\n    for j in range(4):\n        sns.countplot(x=object_type_columns[index], data=X_train, hue=y_train, ax=axes[i][j])\n        index = index + 1\n\nplt.tight_layout()","275a8692":"product_count = X_train.ProductCD.value_counts()\nsns.barplot(product_count.index, product_count.values, alpha=0.8)\nplt.title('ProductCD frequency')\nplt.ylabel('Frequency', fontsize=12)\nplt.xlabel('ProductCD', fontsize=12)\nplt.show()","7246bf3e":"device_count = X_train.DeviceInfo.value_counts().head()\nsns.barplot(device_count.index, device_count.values, alpha=0.8)\nplt.title('Most common DeviceInfo frequency')\nplt.ylabel('Frequency', fontsize=12)\nplt.xlabel('DeviceInfo', fontsize=12)\nplt.show()","e1b1f4a7":"labels = 'isFraud', 'isNotFraud'\nsizes = [len(y_train[y_train==1]),len(y_train[y_train==0])]\nexplode = (0.2, 0)\ncolors =  ['red','green']\n\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, colors = colors, autopct='%1.2f%%')\nax1.axis('equal')\n\nplt.show()","58c02c39":"#### Count null values","cfcf3185":"#### Dataset columns types","9085ff8d":"#### Distribution of categorical columns","2718b8ad":"#### Number of columns in the dataset","35be7965":"#### Merge data","d5cd1a59":"#### Number of observations in train set","ccc38787":"#### Object type columns","d4076b52":"#### Pie chart of fraud probability","b930604e":"#### Number of observations in test set","6c984e6f":"#### ProductCD frequency","77d81b49":"#### Most common DeviceInfo frequency","75a1b931":"#### Import data"}}