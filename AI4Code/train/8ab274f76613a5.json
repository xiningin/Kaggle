{"cell_type":{"fe2d8fa4":"code","3d63f898":"code","c645db64":"code","098a87b2":"code","b66e2f0a":"code","e76fd8e3":"code","e4850ef4":"code","19427c3e":"code","be97c6d3":"code","e9ed3bc7":"code","cca15f53":"code","f6578dcb":"code","403b6847":"code","ba0496b3":"code","c01684a7":"code","b49d9cff":"code","2502a464":"code","55e2088a":"code","19867844":"code","970e2287":"code","6b227dfb":"code","fb2feea7":"code","64a17f07":"code","4ac196d1":"code","e65f4c55":"code","cf7cbe18":"code","23ea499b":"code","63f672ab":"code","8afeb2b0":"code","8d4627b7":"markdown"},"source":{"fe2d8fa4":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')\n%matplotlib inline\nfrom pandas_datareader.data import DataReader\nfrom datetime import datetime\nimport time","3d63f898":"df=pd.read_csv('..\/input\/g-research-crypto-forecasting\/asset_details.csv')\nprint(df['Asset_Name'].tolist())","c645db64":"# The list of cypto we'll using are:\ncypto_list = ['Bitcoin Cash', 'Binance Coin', 'Bitcoin', 'EOS.IO', \n             'Ethereum Classic', 'Ethereum', 'Litecoin', 'Monero', \n             'TRON', 'Stellar', 'Cardano', 'IOTA', 'Maker', 'Dogecoin']\n\n","098a87b2":"df","b66e2f0a":"df1=pd.read_csv('..\/input\/g-research-crypto-forecasting\/train.csv')\ndf1.head()","e76fd8e3":"crypto_id = dict()\nfor i, j in zip(df['Asset_ID'].tolist(), df['Asset_Name'].tolist()):\n    crypto_id[i]=j","e4850ef4":"df1['Asset_Name'] = [crypto_id[i] for i in df1['Asset_ID'].tolist()]\ndf1['Date'] = [time.ctime(int(i)) for i in df1['timestamp'].tolist()]","19427c3e":"df1.index = df1['Date']\ndf1.head()","be97c6d3":"# Described Dogecoin's stock data\nDogecoin = df1[df1['Asset_Name']=='Dogecoin'].describe()\nDogecoin.describe()","e9ed3bc7":"# Information regarding Dogecoin's stock\nDogecoin.info()","cca15f53":"# To see a historical view of the closing price. Closing price\n# We will check the first 1000 examples for each crypto\n\nplt.figure(figsize=(18, 128))\n\n#plt.subplots_adjust(top=1.25, bottom=1.2)\n\nfor i, crypto in enumerate(cypto_list, 1):\n    plt.subplot(14, 1, i)\n    cypto_df = df1[df1['Asset_Name']==crypto]\n    cypto_df['Close'].plot()\n    plt.ylabel('Close')\n    plt.xlabel(None)\n    plt.title(f\"{cypto_list[i - 1]}\")\n    plt.tight_layout()","f6578dcb":"# To see a historical view of the Volume price. Volume price\n# We will check the first 1000 examples for each crypto\n\nplt.figure(figsize=(18, 128))\n#plt.subplots_adjust(top=1.25, bottom=1.2)\n\nfor i, crypto in enumerate(cypto_list, 1):\n    plt.subplot(14, 1, i)\n    cypto_df = df1[df1['Asset_Name']==crypto]\n    cypto_df['Volume'].plot()\n    plt.ylabel('Volume')\n    plt.xlabel(None)\n    plt.title(f\"{cypto_list[i - 1]}\")\n    plt.tight_layout()","403b6847":"#Moving Average\nma_day = [10, 20, 50]\n\ncrypto = 'Dogecoin'\ncypto_df = df1[df1['Asset_Name']==crypto]\nfor ma in ma_day:\n    column_name = f\"MA for {ma} days\"\n    cypto_df[column_name] = cypto_df['Close'].rolling(ma).mean()","ba0496b3":"print(cypto_df.columns)","c01684a7":"cypto_df.hist(figsize=(24, 24))","b49d9cff":"fig, axes = plt.subplots(nrows=1, ncols=1)\nfig.set_figheight(8)\nfig.set_figwidth(30)\n\ncypto_df[['Close', 'MA for 10 days', 'MA for 20 days', 'MA for 50 days']].plot(ax=axes)\naxes.set_title('Dogecoin')\n\nfig.tight_layout()","2502a464":"# We have used pct_change to find the percent change for each day\ncrypto = 'Dogecoin'\ncypto_df = df1[df1['Asset_Name']==crypto]\n\ncypto_df['Daily Return'] = cypto_df['Close'].pct_change()\n\n# To plot the daily return percentage\nfig, axes = plt.subplots(nrows=1, ncols=1)\nfig.set_figheight(8)\nfig.set_figwidth(30)\n\ncypto_df['Daily Return'].plot(ax=axes, legend=True, linestyle='--', marker='o')\naxes.set_title('Dogecoin')\n\nfig.tight_layout()","55e2088a":"# To get a better view of above chart\nplt.figure(figsize=(18, 128))\n\nfor i, crypto in enumerate(cypto_list, 1):\n    plt.subplot(14, 1, i)\n    crypto_df = df1[df1['Asset_Name']==crypto]\n    crypto_df['Daily Return'] = crypto_df['Close'].pct_change()\n    sns.distplot(crypto_df['Daily Return'].dropna(), bins=100, color='red')\n    plt.ylabel('Daily Return')\n    plt.title(f'{cypto_list[i - 1]}')","19867844":"# I am not sure yet if cypto_list have the same time frame which is clearly not,\n# so I am taking the maximum possible examples from each crypto\n# You need to take samples from the same dates\nclosing_df = pd.DataFrame()\nfor i, crypto in enumerate(cypto_list, 1):\n    crypto_df = df1[df1['Asset_Name']==crypto]\n    closing_df[crypto] = crypto_df['Close'].tolist()[:670497]","970e2287":"closing_df.head()","6b227dfb":"# Making a new DataFrame for returns\ncrypto_rets = closing_df.pct_change()\ncrypto_rets.head()","fb2feea7":"# Comparing Dogecoin to itself should show a perfectly linear relationship\nsns.jointplot('Dogecoin', 'Dogecoin', crypto_rets, kind='scatter', color='seagreen')","64a17f07":"# To compare the daily returns of Dogecoin and Bitcoin\nsns.jointplot('Dogecoin', 'Bitcoin', crypto_rets, kind='scatter')","4ac196d1":"sns.pairplot(crypto_rets, kind='reg')","e65f4c55":"return_fig = sns.PairGrid(crypto_rets.dropna())\n\nreturn_fig.map_upper(plt.scatter, color='purple')","cf7cbe18":"returns_fig = sns.PairGrid(closing_df)\n\nreturns_fig.map_upper(plt.scatter,color='purple')","23ea499b":"# Correlation plot for the daily returns\nsns.heatmap(crypto_rets.corr(), annot=True, cmap='summer')","63f672ab":"# Correlation plot for the closing price\nsns.heatmap(closing_df.corr(), annot=True, cmap='summer')","8afeb2b0":"rets = crypto_rets.dropna()\n\narea = np.pi*20\n\nplt.figure(figsize=(12, 10))\nplt.scatter(rets.mean(), rets.std(), s=area)\nplt.xlabel('Expected return')\nplt.ylabel('Risk')\n\nfor label, x, y in zip(rets.columns, rets.mean(), rets.std()):\n    plt.annotate(label, xy=(x, y), xytext=(50, 50), textcoords='offset points', ha='right', va='bottom', \n                 arrowprops=dict(arrowstyle='-', color='blue', connectionstyle='arc3,rad=-0.3'))","8d4627b7":"# G-Research Crypto Forecasting\n# Test challenge\n## Goal: Use your ML expertise to predict real crypto market data.\n### This notebook mainly focuses on the Time Series Analysis"}}