{"cell_type":{"c86bcab7":"code","a2a1f52f":"code","f71334ce":"code","7ed8d6c1":"code","9bc2c0d8":"code","1385571f":"code","ebf97a90":"code","dbbfa281":"code","00ef9712":"code","c892db94":"code","21679cf9":"code","b33b8ea5":"code","30097af0":"code","de36ee26":"code","fbb6ae4f":"code","e05658d1":"code","e4be1d51":"code","e2f310e7":"code","4f782425":"code","d778b1e9":"code","1d1be39f":"markdown"},"source":{"c86bcab7":"# importing libraries\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","a2a1f52f":"data = pd.read_csv(\"\/kaggle\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")","f71334ce":"data.head()","7ed8d6c1":"data.shape","9bc2c0d8":"data.info()","1385571f":"data.describe()","ebf97a90":"data.isna().sum()","dbbfa281":"# creating X and y\n\nX = data.drop(columns = 'quality')\ny = data['quality']","00ef9712":"# splitting data into training and testing data\n\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.30, random_state = 355)","c892db94":"# scaling our data\n\nfrom sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","21679cf9":"from sklearn.tree import DecisionTreeClassifier\n\nclf = DecisionTreeClassifier()\nclf.fit(X_train, y_train)","b33b8ea5":"y_pred = clf.predict(X_test)","30097af0":"clf.score(X_train, y_train)","de36ee26":"clf.score(X_test, y_test)","fbb6ae4f":"param = {\n    'criterion': ['gini', 'entropy'],\n    'max_depth': range(2, 32, 1),\n    'min_samples_leaf': range(1, 10, 1),\n    'min_samples_split': range(2, 10, 1),\n    'splitter': ['best', 'random']\n}","e05658d1":"from sklearn.model_selection import GridSearchCV\n\ngrid_search = GridSearchCV(estimator=clf, param_grid = param, cv = 5, n_jobs = -1)\ngrid_search.fit(X_train, y_train)","e4be1d51":"# best parameters \n\ngrid_search.best_params_","e2f310e7":"# best score \n\ngrid_search.best_score_","4f782425":"clf = DecisionTreeClassifier(criterion = 'entropy', max_depth = 27, min_samples_leaf = 1, min_samples_split = 2, splitter = 'random')\nclf.fit(X_train, y_train)","d778b1e9":"clf.score(X_test, y_test)","1d1be39f":"## Let's try to increase Accuracy of our model by hyper parameter tuning."}}