{"cell_type":{"dae9b012":"code","6aa3c080":"code","41b77534":"code","e7868786":"code","606e776b":"code","f1864936":"code","5e63df9d":"code","cae47e83":"code","ac9b501b":"code","6d763b24":"code","347ac690":"code","228fe54d":"code","7c32acd1":"code","f6b306c1":"code","1cd43d7d":"code","408cad9f":"code","9076d311":"code","60507602":"code","2c365cd7":"code","395d0c1e":"code","3db059b7":"code","b1f32786":"code","7294f053":"markdown","02b1ad52":"markdown","1c8f4371":"markdown","8ebfb02d":"markdown","51617f6d":"markdown","e4ade042":"markdown","14a53ca3":"markdown","3765e936":"markdown","6de434ac":"markdown","065a3f54":"markdown","45b971ae":"markdown","691c9d98":"markdown","9d7b4a6e":"markdown","7830743b":"markdown","2828725e":"markdown","e35b1f08":"markdown","192d71f2":"markdown","8fe25fc5":"markdown","3edca9e1":"markdown","d4b1fe1e":"markdown","39dad7be":"markdown","737c8531":"markdown","b2deb37f":"markdown","245501c5":"markdown"},"source":{"dae9b012":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6aa3c080":"data=pd.read_csv(\"\/kaggle\/input\/37-years-dollar-rate-for-turkey\/37.year.dollar.rate.for.Turkey.csv\",sep=';')","41b77534":"x = data.Day\ny = data.Rate_Price","e7868786":"x = x.values.reshape(-1,1)\ny= y.values.reshape(-1,1)","606e776b":"import matplotlib.pyplot as plt","f1864936":"plt.scatter(x,y,c=\"gold\",s=3) \nplt.xlabel(\"Rate_Price\")\nplt.ylabel(\"Day\")\nplt.show()","5e63df9d":"from sklearn.linear_model import LinearRegression","cae47e83":"estimateLinear = LinearRegression()\nestimateLinear.fit(x,y)\ny_head_linear=estimateLinear.predict(x)","ac9b501b":"plt.plot(x,y_head_linear,c=\"red\")\nplt.title(\"Linear Regression\")\nplt.show()","6d763b24":"MSE_Linear = 0\nfor i in range(len(y)):\n    MSE_Linear = MSE_Linear + (float(y[i])-float(y_head_linear[i]))**2\nmse_linear_value=MSE_Linear\/len(y)\nprint(\"MSE value of Linear Regression : \",mse_linear_value)\n","347ac690":"from sklearn.preprocessing import PolynomialFeatures","228fe54d":"estimatePolynomial = PolynomialFeatures(degree=3)\nX_new = estimatePolynomial.fit_transform(x)\npolynomial_model = LinearRegression()\npolynomial_model.fit(X_new,y)\ny_head_polynomial=polynomial_model.predict(X_new)","7c32acd1":"plt.plot(x,y_head_polynomial,c=\"green\")\nplt.title(\"Polynomial Regression\")\nplt.show()","f6b306c1":"MSE_polynomial = 0\nfor i in range(len(X_new)):\n    MSE_polynomial = MSE_polynomial + (float(y[i])-float(y_head_polynomial[i]))**2\nmse_polynomial_value=MSE_polynomial\/len(X_new)\nprint(\"3th degrees MSE value of Polynomial Regression \",mse_polynomial_value)","1cd43d7d":"mse_array=[]\nMSE_polynomial = 0","408cad9f":"for a in range(75):\n    estimate_polynomial = PolynomialFeatures(degree=a+1)\n    X_new = estimate_polynomial.fit_transform(x)\n    polynomial_model = LinearRegression()\n    polynomial_model.fit(X_new,y)\n    y_head_polynomial2=polynomial_model.predict(X_new)\n    for i in range(len(X_new)):\n        MSE_polynomial = MSE_polynomial + (float(y[i])-float(y_head_polynomial2[i]))**2\n    mse_polynomial_value=MSE_polynomial\/len(X_new)\n    mse_array.append(mse_polynomial_value)\n    print(a+1,\".degrees error in function:\", mse_polynomial_value)\n    MSE_polynomial = 0","9076d311":"min_value=0\nfor value in range(75):\n    if(mse_array[value]==min(mse_array)):\n        print(\"Minimum value:\",mse_array[value],\" Degree:\",(value+1))\n        min_value=value+1","60507602":"estimate_polynomial_min = PolynomialFeatures(degree=min_value)\nX_new = estimate_polynomial_min.fit_transform(x)\npolynomial_model_min = LinearRegression()\npolynomial_model_min.fit(X_new,y)\ny_head_polynomial_min=polynomial_model_min.predict(X_new)","2c365cd7":"plt.plot(x,y_head_polynomial_min,c=\"blue\")\nplt.title(\"Polynomial Regression (the best degree)\")\nplt.show()","395d0c1e":"plt.plot(x,y_head_linear,c=\"red\")\nplt.plot(x,y_head_polynomial,c=\"green\")\nplt.plot(x,y_head_polynomial_min,c=\"blue\")\nplt.show()","3db059b7":"fig, axs = plt.subplots(2, 2,figsize=(20,10))\n#Table-1    \naxs[0, 0].plot(x,y_head_linear,c=\"red\")\naxs[0, 0].set_title('Linear Regression')\naxs[0, 0].scatter(x,y,c=\"gold\",s=3)\n#Table-2\naxs[0, 1].plot(x,y_head_polynomial,c=\"green\")\naxs[0, 1].set_title('3th degree Polynomial Regression')\naxs[0, 1].scatter(x,y,c=\"gold\",s=3)\n#Table-3\naxs[1, 0].plot(x,y_head_polynomial_min,c=\"blue\")\naxs[1, 0].set_title('Polynomial Regression of the best degree(4)')\naxs[1, 0].scatter(x,y,c=\"gold\",s=3)\n#Table-4 (In the last table, we do it to draw all of them.)\naxs[1, 1].plot(x,y_head_linear,c=\"red\")\naxs[1, 1].plot(x,y_head_polynomial,c=\"green\")\naxs[1, 1].plot(x,y_head_polynomial_min,c=\"blue\")\naxs[1, 1].set_title('Combination of 3 Tables')\naxs[1, 1].scatter(x,y,c=\"gold\",s=3)\nplt.show()\n\n#I entered the axis labels of the tables.\nfor ax in axs.flat:\n    ax.set(xlabel='Day', ylabel='Rate Price')\n\n#I hid the X tags and were able to see the tags for the top graphics\nfor ax in axs.flat:\n    ax.label_outer()\n","b1f32786":"print(\"Real Value:\",y[520],\" Estimated Value:\",y_head_polynomial_min[520])\nprint(\"Difference between real value and estimated value:\",(float(y[520])-float(y_head_polynomial_min[520])))\n","7294f053":"I read to dataset for using","02b1ad52":"I apply the following procedure to show all the tables one by one.","1c8f4371":"# **Linear Regression**\n","8ebfb02d":"I defined to Linear Regression from sklearn library.","51617f6d":"I prepared Linear Regression Table for single table.","e4ade042":"# **Polynomial Regression**","14a53ca3":"I was choosing value 3th degrees.","3765e936":"I used all of values for single table.","6de434ac":"Then I used method of linear regression for estimated new value.","065a3f54":"I found MSE values in Linear Regression.","45b971ae":"Let's show all the visualizations we have done in a single table.","691c9d98":"First I defined to library for visualization.","9d7b4a6e":"Difference between real value and estimated value (for 520th row)","7830743b":"I defined to Polynomial Regression from sklearn library.","2828725e":"I found MSE values in Polynomial Regression","e35b1f08":"I prepared 3th degrees polynomial table for single table","192d71f2":"X and Y values reshape to dimension size because dimension was **(,size)** .","8fe25fc5":"I am modeling the polynomial that gives the best degree (4th degree by our result)","3edca9e1":"I defined for finding MSE values by degree","d4b1fe1e":"Then I used method of polynomial regression for estimated new value by choosed degree.","39dad7be":"I defined x and y.\nX equals to day and Y equals to rate price.","737c8531":"I am modeling the polynomial that gives the best degree table (at single table)","b2deb37f":"I try the first 75 degrees. ","245501c5":"I will find the degree of the smallest error value."}}