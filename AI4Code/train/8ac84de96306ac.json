{"cell_type":{"52a400dc":"code","e3c21602":"code","30d2f92c":"code","8b67e44f":"code","88cc0828":"code","95516ae5":"code","fe69d165":"code","0a063e78":"code","923b3d34":"code","5d513225":"code","4ebf2478":"code","48423ad2":"code","a2bca2fa":"markdown"},"source":{"52a400dc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nimport pandas as pd\nfrom plotly.offline import init_notebook_mode,iplot\ninit_notebook_mode(connected=True)\nimport cufflinks as cf\ncf.go_offline(True)\nimport plotly.express as px\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e3c21602":"class WHS:\n    def __init__(self,name,title):\n        self.name=name\n        self.title=title\n \n    def working(self):\n        self.name.rename(columns={'Dim1':'Sex','First Tooltip':'Life Expectancy'},inplace=True)\n        self.name_Loc_groupby=self.name.groupby(by=['Location','Period'])['Life Expectancy'].mean()\n        self.name_df=pd.DataFrame(self.name_Loc_groupby)\n        self.name_df.rename(columns={'Life Expectancy':self.title},inplace=True)\n        self.name_year_groupby=self.name.groupby(by=['Period'])['Life Expectancy'].mean()\n        pd.DataFrame(self.name_year_groupby)\n        pd.DataFrame(self.name_year_groupby).iplot(kind='bar',title=self.title)\n        self.figure(self.name_df)\n\n    def figure(self,name_df):\n        sorted_values=self.name_df.index.get_level_values(1).sort_values()\n        fig=px.choropleth(data_frame=self.name_df,\n                          locations=self.name_df.index.get_level_values(0),\n                          locationmode='country names',\n                          color=self.name_df[self.title],\n                          animation_frame=sorted_values,\n                          animation_group=sorted_values)\n        fig.update_layout(dict1={'title':self.title})\n        fig.show() ","30d2f92c":"adolescent=pd.read_csv('..\/input\/who-worldhealth-statistics-2020-complete\/adolescentBirthRate.csv')\nwhs=WHS(adolescent,'Adolescent_Birth_Rate')\nwhs.working()","8b67e44f":"Life_Expectancy_Birth=pd.read_csv('..\/input\/who-worldhealth-statistics-2020-complete\/lifeExpectancyAtBirth.csv')\nwhs=WHS(Life_Expectancy_Birth,'Life_Expectancy_At_Birth')\nwhs.working()","88cc0828":"medical_doctors=pd.read_csv('..\/input\/who-worldhealth-statistics-2020-complete\/medicalDoctors.csv')\nwhs=WHS(medical_doctors,'Medical_Doctors')\nwhs.working()","95516ae5":"infant_mortality_rate=pd.read_csv('..\/input\/who-worldhealth-statistics-2020-complete\/infantMortalityRate.csv')\ninfant_mortality_rate['First Tooltip']=infant_mortality_rate['First Tooltip'].apply(lambda x:x.split()[0])\ninfant_mortality_rate['First Tooltip']=infant_mortality_rate['First Tooltip'].apply(lambda x: float(x))\nwhs=WHS(infant_mortality_rate,'Infant_Mortality_Rate')\nwhs.working()","fe69d165":"life_expectancy_at_birth=pd.read_csv('..\/input\/who-worldhealth-statistics-2020-complete\/lifeExpectancyAtBirth.csv')\nwhs=WHS(life_expectancy_at_birth,'Life_Expectancy_At_Birth')\nwhs.working()","0a063e78":"neonatal_mortality_rate = pd.read_csv('..\/input\/who-worldhealth-statistics-2020-complete\/neonatalMortalityRate.csv')\nneonatal_mortality_rate['First Tooltip']=neonatal_mortality_rate['First Tooltip'].apply(lambda x:x.split()[0])\nneonatal_mortality_rate['First Tooltip']=neonatal_mortality_rate['First Tooltip'].apply(lambda x: float(x))\nwhs=WHS(neonatal_mortality_rate,'Neonatal_Mortality_Rate')\nwhs.working()","923b3d34":"nursing_and_midwife=pd.read_csv('..\/input\/who-worldhealth-statistics-2020-complete\/nursingAndMidwife.csv')\nwhs=WHS(nursing_and_midwife,'Nursing_and_Midwife')\nwhs.working()","5d513225":"Birth_Attended_By_Skilled_Personal=pd.read_csv('..\/input\/who-worldhealth-statistics-2020-complete\/birthAttendedBySkilledPersonal.csv')\nwhs=WHS(Birth_Attended_By_Skilled_Personal,'Birth_Attended_By_Skilled_Personal')\nwhs.working()","4ebf2478":"Maternal_Mortality_Ratio=pd.read_csv('..\/input\/who-worldhealth-statistics-2020-complete\/maternalMortalityRatio.csv')\nMaternal_Mortality_Ratio['First Tooltip']=Maternal_Mortality_Ratio['First Tooltip'].apply(lambda x:x.split()[0])\nMaternal_Mortality_Ratio['First Tooltip']=Maternal_Mortality_Ratio['First Tooltip'].apply(lambda x: float(x))\nwhs=WHS(Maternal_Mortality_Ratio,'Maternal_Mortality_Ratio')\nwhs.working()","48423ad2":"under_5_MortalityRate=pd.read_csv('..\/input\/who-worldhealth-statistics-2020-complete\/under5MortalityRate.csv')\nunder_5_MortalityRate['First Tooltip']=under_5_MortalityRate['First Tooltip'].apply(lambda x:x.split()[0])\nunder_5_MortalityRate['First Tooltip']=under_5_MortalityRate['First Tooltip'].apply(lambda x: float(x))\nwhs=WHS(under_5_MortalityRate,'under_5_MortalityRate')\nwhs.working()","a2bca2fa":"Based on the above visualisations,\n1.Life Expectancy at birth - Improved,\n2.Infant_mortality_rate - Have reduced during the course of the year,\n3.Life_Expectancy_at_birth - Improved,\n4.neonatal_mortality_rate - Decreased,\n5.Maternal_Mortality_Ratio - Decreased,\n6.under_5_mortalityrate - Decreased\nBut,\n1.Medical Doctors,\n2.Nursing and Midwife,\n3.Birth attended by skilled person have been reduced. Attention is needed for the better health care system."}}