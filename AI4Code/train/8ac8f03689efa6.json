{"cell_type":{"8cd44236":"code","eea0b1ef":"code","26fdf2b8":"code","2c5bcb30":"code","e9557233":"code","548e1b38":"code","904b2e35":"markdown","e0b8ec95":"markdown","6270bbd8":"markdown","dd888b4f":"markdown","71a76e84":"markdown","c693ed69":"markdown"},"source":{"8cd44236":"import pandas as pd\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score","eea0b1ef":"df = pd.read_csv(\"..\/input\/spambase\/spambase.csv\")\ndf.head()","26fdf2b8":"x=(df.iloc[:,:-1])\ny=(df.iloc[:,-1])","2c5bcb30":"x_train,x_test,y_train,y_test= train_test_split(x,y,test_size = 0.33, random_state = 17)","e9557233":"GaussNB = GaussianNB()\n#fit the model with the training data\nGaussNB.fit(x_train,y_train)\n# predict the target(spam or not) on the test dataset\npredict_test = GaussNB.predict(x_test)\n# Accuracy Score\naccuracy_test_NB = accuracy_score(y_test,predict_test)\nprint(accuracy_test_NB)","548e1b38":"LogisticRegression = LogisticRegression(solver='liblinear', penalty='l1')\n#fit the model with the training data\nLogisticRegression.fit(x_train,y_train)\n# predict the target(spam or not) on the test dataset\npred = LogisticRegression.predict(x_test)\n# Accuracy Score\naccuracy_test_LR = accuracy_score(y_test,pred)\nprint(accuracy_test_LR)","904b2e35":"**1. Import necessary libraries**","e0b8ec95":"**2. Import data**","6270bbd8":"**4. Split the data into training and test set**","dd888b4f":"**3. Declare feature vector and target variable**","71a76e84":"**5. Naive Bayes Classifier**","c693ed69":"**6. logistic Regression Classifier**"}}