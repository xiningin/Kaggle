{"cell_type":{"0bc04cbf":"code","5e6bdf91":"code","48fb252b":"code","db608d19":"code","cc174fa4":"code","21afb231":"code","46271094":"code","f328ea3c":"code","61ea3292":"code","153ee8e7":"markdown","b74282b4":"markdown","c3570564":"markdown","871e6cd7":"markdown","c5e5ad48":"markdown","738aed79":"markdown","1bd45439":"markdown","f88a151e":"markdown","f4814af9":"markdown","f0de481d":"markdown"},"source":{"0bc04cbf":"import matplotlib.pylab as plt\nimport pandas as pd\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import models, layers\nfrom tensorflow.keras.models import Sequential\nimport cv2\nfrom keras.preprocessing.image import ImageDataGenerator","5e6bdf91":"data_dir = 'Dataset'\n\nimport pathlib\ndata_dir = pathlib.Path(data_dir)\nlist(data_dir.glob('*\/*.jpg'))\n\nimage_count = len(list(data_dir.glob('*\/*.jpg')))\nobjects = {\n'Adeno' : list(data_dir.glob('Adeno\/*')),\n'Carcinoma' : list(data_dir.glob('Carcinoma\/*')),\n'Normal' : list(data_dir.glob('Normal\/*'))\n}","48fb252b":"objects_labels = {\n    'Adeno' : 0,\n   'Carcinoma' : 1,\n   'Normal' : 2\n    }\nprint(image_count)","db608d19":"X, y = [], []\n\nfor name, images in objects.items():\n    print(\"Printing...\")\n    for image in images:\n          \n        img = cv2.imread(str(image))\n        \n      \n        try:\n            resized = cv2.resize(img, (128,128))\n            X.append(resized)\n            y.append(objects_labels[name])\n        except:\n            print('skipped')\n            break\n        \nX = np.array(X)\ny = np.array(y)","cc174fa4":"\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1,random_state = 0)\n\nprint(len(X_train), len(X_test),len(y_train), len(y_test))","21afb231":"X_train_scaled = X_train \/ 255\nX_test_scaled = X_test \/ 255","46271094":"model = keras.Sequential([\n    aug,\n    layers.Conv2D(32, (3, 3), padding='same', activation='relu'),\n    layers.MaxPooling2D(pool_size=(2, 2)),\n    \n    layers.Conv2D(32, (3,3), padding='same', activation='relu'),\n    layers.MaxPooling2D(pool_size=(2, 2)),\n    \n    \n    \n    layers.Conv2D(64, (3,3), padding='same', activation='relu'),\n\n    layers.Conv2D(250, (3,3), padding='same', activation='relu'),\n    layers.Conv2D(128, (3,3), padding='same', activation='relu'),\n    layers.AvgPool2D(2, 2),\n    \n    layers.Conv2D(64, (3,3), padding='same', activation='relu'),\n    layers.AvgPool2D(2, 2),\n    \n    layers.Conv2D(256, (2, 2), padding=\"same\", activation=\"relu\"),\n    layers.MaxPooling2D(2, 2),\n    \n\n\n    layers.Flatten(),\n    layers.Dense(32,  activation='relu'),\n    layers.Dropout(0.25),\n    layers.Dense(3, activation='softmax'),\n       \n    ])\n\nmodel.compile(\n    optimizer = 'adam',\n    loss = 'sparse_categorical_crossentropy',\n    metrics = ['accuracy']\n    )","f328ea3c":"hitory = model.fit(X_train_scaled, y_train, epochs = 30)","61ea3292":"model.save('model2.h5')","153ee8e7":"### 9- Saving the model to an H5-File","b74282b4":"### 3- Labeling dataset","c3570564":"### 2- Importing Dataset\n","871e6cd7":"### 8- Training the model","c5e5ad48":"### 4- Putting data into variables","738aed79":"# **Lung cancer Classification**","1bd45439":"### 5- Splitting Data to training and testing","f88a151e":"### 1- Importing used libraries\n","f4814af9":"### 7- Building the CNN","f0de481d":"### 6- Scaling Data"}}