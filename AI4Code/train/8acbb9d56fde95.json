{"cell_type":{"47bf1aed":"code","7f0a8085":"code","aa743d0b":"code","e671440d":"code","4e7f23bb":"code","0e27b3b8":"code","c8cd6ee8":"code","b18dd43f":"code","6f20b257":"code","e3c87d49":"code","3ac2d27e":"code","02adc64e":"code","ec464f46":"code","eed6603c":"code","4886337e":"code","5180ee19":"code","530589b0":"code","6c85bae5":"code","79bf50d0":"code","c25ff7ea":"code","cf508a02":"code","6b313bfa":"code","43e0c7be":"code","237ffac2":"code","06289f84":"code","202e5726":"code","d5eaefbe":"code","8ad5ebd8":"code","92aca554":"code","22c5ea78":"code","a5564b33":"code","175a6257":"markdown","c1a02bf2":"markdown","c92302bf":"markdown","fde4e89a":"markdown","c1111c97":"markdown","257aa9c8":"markdown","c0480b92":"markdown","938fb08c":"markdown","972b9f5e":"markdown","5fba59c1":"markdown"},"source":{"47bf1aed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7f0a8085":"#Importa\u00e7\u00e3o das bibliotecas\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport matplotlib.dates as mdates\nfrom datetime import date, timedelta\nimport statsmodels.api as sm\nimport statsmodels.api as tsa\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels.tsa.arima_model import ARIMA\n\nfrom statsmodels.tsa.arima_model import ARMA\nfrom statsmodels.tsa.stattools import adfuller, arma_order_select_ic\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nfrom statsmodels.tsa.api import ExponentialSmoothing, SimpleExpSmoothing, Holt\nfrom matplotlib.pylab import rcParams\nrcParams['figure.figsize'] = 15, 6\n\nfrom matplotlib import pyplot as plt\n\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom pandas.plotting import register_matplotlib_converters\nregister_matplotlib_converters()\n\nfrom random import random","aa743d0b":"#Importar e apresentar os dados\ncasos = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\ncasos.head()","e671440d":"#Informa\u00e7\u00f5es das vari\u00e1veis\ncasos.info()","4e7f23bb":"#Quantidade de missing values\ncasos.isna().sum()","0e27b3b8":"#Renomear colunas\ncasos = casos.rename(columns={\"ObservationDate\":\"date\", \"Country\/Region\": \"country\", \"Province\/State\": \"state\",\"Confirmed\":\"confirm\", \"Deaths\": \"death\",\"Recovered\":\"recover\"})\ncasos.head()","c8cd6ee8":"#Contagem de casos\ncasos[casos['date'] != casos['Last Update']]['country'].value_counts()","b18dd43f":"#Remover colunas\n#casos.drop(columns=['SNo', 'state'], inplace=True, axis=1)\n#casos.head()","6f20b257":"casos1 = casos[casos['country']=='Brazil']\n\ncasos1.head()","e3c87d49":"#Numero de casos maximos em 1 dia\ncasos1['confirm'].idxmax()","3ac2d27e":"#remover valores 0 da vari\u00e1vel 'confirm' \nzeroConfirmed = casos1[casos1['confirm'] == 0]\ncasos1 = casos1[casos1['confirm'] != 0]","02adc64e":"casos1.shape","ec464f46":"#casos = casos.groupby(\"country\")[['confirm', 'death', 'recover']].sum().reset_index()\n#casos.head()","eed6603c":"#Grafico com a quantidade casos confirmados, recuperados e de mortos por Covid-19.\n\nplt.figure(figsize=(23,10))\nplt.bar(casos1.date, casos1.confirm,label=\"Confirmados\")\nplt.bar(casos1.date, casos1.recover,label=\"Recuperados\")\nplt.bar(casos1.date, casos1.death,label=\"Mortos\")\nplt.xlabel('Data')\nplt.ylabel(\"Contagem\")\nplt.legend(frameon=True, fontsize=10)\nplt.title(\"Casos confirmados, Recuperados e Mortos\",fontsize=30)\nplt.xticks(rotation='vertical')\nplt.show()\n\nax = plt.subplots(figsize=(23,10))\nax=sns.scatterplot(x=\"date\", y=\"confirm\", data=casos1,\n             color=\"black\",label = \"Confirmados\")\nax=sns.scatterplot(x=\"date\", y=\"recover\", data=casos1,\n             color=\"red\",label = \"Recuperados\")\nax=sns.scatterplot(x=\"date\", y=\"death\", data=casos1,\n             color=\"blue\",label = \"Mortos\")\nplt.plot(casos1.date,casos1.confirm,zorder=1,color=\"black\")\nplt.plot(casos1.date,casos1.recover,zorder=1,color=\"red\")\nplt.plot(casos1.date,casos1.death,zorder=1,color=\"blue\")\nplt.legend(frameon=True, fontsize=10)\nplt.title(\"Casos confirmados, Recuperados e Mortos\",fontsize=20)\nplt.xticks(rotation='vertical')\nplt.show()","4886337e":"#Filtrar as colunas \ncasos1.drop(columns=['SNo', 'state', 'death', 'recover', 'Last Update', 'country'], inplace=True, axis=1)\ncasos1.head()","5180ee19":"#Indexando a coluna date para criar a s\u00e9rie temporal.\n\ncasos1.index = casos1['date']\ncasos1.drop('date',inplace=True, axis=1)\ncasos1.head()","530589b0":"#Gr\u00e1fico com o volume de casos confirmados e evolu\u00e7\u00e3o do tempo.\nplt.figure(figsize=(15,6))\nplt.plot(casos1)\nplt.xlabel('Data')\nplt.ylabel('Casos confirmados')\nplt.title('Data vs casos confirmados')\nplt.xticks(rotation='vertical')\nplt.show()","6c85bae5":"mean = casos1.rolling(window=12).mean()\nm_std = casos1.rolling(window=12).std()\n\nori = plt.plot(casos1, color='blue', label='Original')\nmm = plt.plot(mean, color='red',label='M\u00e9dia')\nstd = plt.plot(m_std, color='black', label='Desvio')\nplt.legend(loc='best')\nplt.title('Evolu\u00e7\u00e3o dos casos de coronav\u00edrus')\nplt.xticks(rotation='vertical')\nplt.show()\n\nresult = adfuller(casos1['confirm'])\nprint('ADF Statistic: {}'.format(result[0]))\nprint('p-value: {}'.format(result[1]))\nprint('Critical Values:')\nfor key, value in result[4].items():\n    print('\\t{}: {}'.format(key, value))","79bf50d0":"#Varia\u00e7\u00e3o de casos confirmados durante o periodo de Fevereiro a Abril \nper = np.log(casos1).diff().dropna()\nper.plot()","c25ff7ea":"from statsmodels.graphics.tsaplots import plot_acf\nplot_acf(casos1)","cf508a02":"casos1.shift(1)","6b313bfa":"modelo = ARIMA(casos1, order=(0, 1, 1)).fit()\nprint(modelo.summary())","43e0c7be":"#Previs\u00e3o do Corona V\u00edrus\nfig, ax = plt.subplots(figsize=(8,6))\nfig = modelo.plot_predict(start='02-27-2020', end='04-18-2020', ax=ax)\nplt.title('Previs\u00e3o Corona V\u00edrus')\nplt.ylabel('Confirmados')\nplt.xlabel('Data')\nlegend = ax.legend(loc='upper left')","237ffac2":"#Modelo Naive sem sazonalidade\nnaive = ARIMA(casos1, order=(0, 0, 0))\nnaive = naive.fit()\nprint(naive_treinado.summary())","06289f84":"plt.rcParams.update({'figure.figsize':(9,4)})\nnaive_treinado.plot_predict(start=1,end=220)\nplt.show()","202e5726":"#Modelo naive com sazonalidade\n\nsnaive = ARIMA(casos1, order=(0, 1, 0))\nsnaive = snaive.fit()\nprint(snaive_treinado.summary())","d5eaefbe":"#Treinando o modelo com sazonalidade\nsnaive.plot_predict(start=1,end=230)\nplt.show()","8ad5ebd8":"from statsmodels.tsa.statespace.sarimax import SARIMAX","92aca554":"# Fit the model\nmod = sm.tsa.statespace.SARIMAX(casos1, trend='c', order=(1,1,1))\nres = mod.fit(disp=False)\nprint(res.summary())","22c5ea78":"fig ,ax= plt.subplots(2,1, figsize=(10,7))\nfig=sm.tsa.graphics.plot_acf(casos1, lags=50, ax=ax[0])\nfig=sm.tsa.graphics.plot_pacf(casos1, lags=50, ax=ax[1])\nplt.show()","a5564b33":"mod_sarimax = SARIMAX(casos1, order=(1,1,1), seazonal_order=(1,1,1,4))\nmod_sarimax.fit()\nplt.show()","175a6257":"# Modelo Sarimax","c1a02bf2":"Foi realizado o teste de Augmented Dickey\u2013Fuller (ADCF) para avaliar a n\u00e3o estacionariedade dos dados. \nNeste caso o p-valor foi de 0.99 menor que o valor do teste estatistico e confirma a n\u00e3o estacionariedade dos dados ( hip\u00f3tese nula).","c92302bf":"# An\u00e1lise dos dados","fde4e89a":"# S\u00e9rie Temporal","c1111c97":"A Fun\u00e7\u00e3o de Autocorrela\u00e7\u00e3o (ACF) e a Fun\u00e7\u00e3o de Autocorrela\u00e7\u00e3o Parcial (PACF) s\u00e3o utilizados para saber quantos termos utilizar no treino do modelo e a quantidade de termos que precisaremos informar.","257aa9c8":"# CONCLUS\u00c3O\n\nA an\u00e1lise e estudo dos dados pode ajudar a salvar vidas e a cria\u00e7\u00e3o de politicas p\u00fablicas bem como conscientiza\u00e7\u00e3o da popula\u00e7\u00e3o. Os modelos de s\u00e9rie temporal e an\u00e1lise estatistica dos dados s\u00e3o ferramentas muito \u00fateis nesse cen\u00e1rio.\n\nEntre os modelos usados neste trabalho o melhor modelo foi o Naive, se trata de um modelo simples de previs\u00e3o de  multi-classes.\n\nOs meios de preven\u00e7\u00e3o como isolamento social e higieniza\u00e7\u00e3o pessoal e de superf\u00edcies s\u00e3o as melhores formas de combate a expans\u00e3o de casos e sobrecarga dos sistemas de sa\u00fade. ","c0480b92":"# **INTRODU\u00c7\u00c3O**\n\n Coronav\u00edrus \u00e9 uma fam\u00edlia de v\u00edrus que causam infec\u00e7\u00f5es respirat\u00f3ria e foi descoberto em 31\/12\/19 ap\u00f3s casos registrados na China. Provoca a doen\u00e7a chamada de coronav\u00edrus (COVID-19).\n\nOs sintomas da COVID-19 podem variar de um simples resfriado at\u00e9 uma pneumonia severa.\n A transmiss\u00e3o acontece de uma pessoa doente para outra ou por contato pr\u00f3ximo por meio de: Toque do aperto de m\u00e3o; Got\u00edculas de saliva; Espirro; Tosse; Catarro; Objetos ou superf\u00edcies contaminadas. \n\nCaso o paciente apresente os sintomas,quadro respirat\u00f3rio agudo, caracterizado por sensa\u00e7\u00e3o febril ou febre e  desconforto respirat\u00f3rio\/dificuldade para respirar OU press\u00e3o persistente no t\u00f3rax o profissional de sa\u00fade poder\u00e1 solicitar exame laboratoriais: De biologia molecular (RT-PCR em tempo real) que diagnostica tanto a COVID-19, a Influenza ou a presen\u00e7a de V\u00edrus Sincicial Respirat\u00f3rio (VSR) ou o teste r\u00e1pido Imunol\u00f3gico.\n\nA an\u00e1lise de dados auxilia no entendimento do avan\u00e7o da doen\u00e7a e pode ser utilizada por profissionais de sa\u00fade pois as previs\u00f5es s\u00e3o as \u00fanicas formas de garantir que os hospitais tenham pessoal e recursos suficientes em meio \u00e0 pandemia e  proporcionar uma previs\u00e3o de futuros infectados \u00e0s autoridades para preparar a\u00e7\u00f5es para a prote\u00e7\u00e3o da popula\u00e7\u00e3o s\u00e3 e a\u00e7\u00f5es para os infectados.\n\nO conjunto de dados utilizado neste estudo possui informa\u00e7\u00f5es di\u00e1rias sobre o n\u00famero de casos afetados, mortes e recupera\u00e7\u00e3o do coronav\u00edrus no mundo, por\u00e9m selecionamos os dados para o Brasil.\n\nS\u00e3o dados de s\u00e9ries temporais e, portanto, o n\u00famero de casos em um determinado dia \u00e9 o n\u00famero acumulado e contabilizados a  partir de 22 de janeiro de 2020.","938fb08c":"# Modelo Naive\n","972b9f5e":"# Modelo Arima","5fba59c1":"<div style='text-align:center;Blue:red;font-size:36px;margin:10px'> CORONAV\u00cdRUS<\/div>\n\n\n\nInstitui\u00e7\u00e3o: Centro Universit\u00e1rio IESB\n\nCurso: P\u00f3s Gradua\u00e7\u00e3o Ci\u00eancia de Dados - Campus BSB\/Asa Sul\n\nDisciplina: SOFTWARE PARA USO EM CI\u00caNCIAS DE DADOS\n\nAluna: Adriana Maria Santos Viana"}}