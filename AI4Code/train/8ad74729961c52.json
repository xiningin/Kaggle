{"cell_type":{"9abbfe0a":"code","b378ee00":"code","9bb08ab8":"code","0420c11b":"code","bf21363d":"code","2c7bd4f8":"code","6e9039d9":"code","99868313":"code","8c01eea7":"code","69e1e45b":"code","9e5423f1":"code","fb889855":"code","ab3cfd52":"code","4cba96c4":"code","1b8d46e4":"markdown","0a7d1ec3":"markdown","5b04b208":"markdown","d1a6e4ac":"markdown","a446a7c2":"markdown","ac45ac37":"markdown","463968c3":"markdown","1e1c783d":"markdown","8795eec6":"markdown","2f2d20e5":"markdown","aad1486a":"markdown"},"source":{"9abbfe0a":"# Install Pywedge\n\n!pip install pywedge --quiet","b378ee00":"# Import Pywedge\n\nimport pywedge as pw","9bb08ab8":"# Import dataset - Credit Risk Dataset\n\nimport pandas as pd\ntrain = pd.read_csv('https:\/\/raw.githubusercontent.com\/taknev83\/datasets\/master\/credit_risk_train.csv')\ntest = pd.read_csv('https:\/\/raw.githubusercontent.com\/taknev83\/datasets\/master\/credit_risk_test.csv')","0420c11b":"train.head()","bf21363d":"train.info()","2c7bd4f8":"mc = pw.Pywedge_Charts(train, c=None, y = 'class')","6e9039d9":"charts = mc.make_charts()","99868313":"blm = pw.baseline_model(train, test, c=None, y='class')","8c01eea7":"blm.classification_summary()","69e1e45b":"pph = pw.Pywedge_HP(train, test, c=None, y='class', tracking=True)","9e5423f1":"pip install mlflow==1.12.1 --quiet","fb889855":"pph.HP_Tune_Classification()","ab3cfd52":"!pip install pyngrok --quiet","4cba96c4":"pph.get_tracking_url()","1b8d46e4":"# Call Classification_Summary method for Regression type of tasks\n\nReturns:\n\n* Interactive pre-processing steps\n* User input for test size in train test split\n* Top 10 feature importance using Adaboost regressor\n* Baseline models in 10 different algorithms with metrics\n* Predict selected baseline models on standout test dataset","0a7d1ec3":"# Call HP_Tune_Classification for classification hyperparameter tuning tasks\n\nReturns:\n\n* Interactive widget for inputing various hyperparameters\n* Output tab with tuned model results\n* Predictions on standout test data using tuned model","5b04b208":"# **Pywedge - Classification Demo**\n\n* Interactive Charts\n* Interactive Baseline Models\n* Interactive Hyperparameter Tuning\n* Track Hyperparameters on-the-go!\n\n# [GitHub](https:\/\/github.com\/taknev83\/pywedge) | [Docs](https:\/\/taknev83.github.io\/pywedge-docs\/) | [PyPi](https:\/\/pypi.org\/project\/pywedge\/)\n","d1a6e4ac":"## Call get_tracking method from instantiated class to get MLFLow tracking URL","a446a7c2":"# Call make_charts method from the instantiated class\n","ac45ac37":"## Install mlflow version 1.12.1","463968c3":"# Instantiate Pywedge_HP Class for interactive hyperparameter tuning\n\nArgs:\n\n* train = train dataframe\n* test = test dataframe\n* c = any redundant column to be removed (like ID column etc., at present supports a single column removal, subsequent version will provision multiple column removal requirements)\n* y = target column name as a string\n* tracking = True\/False(Default) #to enable mlflow hyperpameter tracking","1e1c783d":"# Instantiate baseline_model class\nArgs:\n\n* train = train dataframe\n* test = test dataframe\n* c = any redundant column to be removed (like ID column etc., at present supports a single column removal, subsequent version will provision multiple column removal requirements)\n* y = target column name as a string\n* type = Classification(Default) \/ Regression","8795eec6":"# HP_Tune - User Guide:\n* Please enter multiple numerical values as comma seperates values, for eg. in Decision Tree Hyperpameter search space, multiple Max_Depth can be entered as 5, 10, 15 (Use of numpy notation is not yet supported)\n* Use ctrl + click to select multiple\n* Use n_jobs as -1 for faster hyperparameter search\n* The helper page tab provides the relavent estimator's web page for quick reference\n* Hyperparameters can be tracked on-the-go by passing tracking=True & invoke MLFlow user interface from command prompt, more details in the [docs page](https:\/\/taknev83.github.io\/pywedge-docs\/)","2f2d20e5":"# Instantiate Pywedge_Charts\nT\nhe Pywedge_Charts class takes following inputs,\n\nInputs:\n\n* Dataframe\n* c = any redundant column to be removed (like ID column etc., at present supports a single column removal, subsequent version will provision multiple column removal requirements)\n* y = target column name as a string\n\nReturns:\n\nCharts widget","aad1486a":"## Install pyngrok to create a tunnel to access MLFlow User Interface"}}