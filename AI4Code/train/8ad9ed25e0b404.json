{"cell_type":{"16be3817":"code","3a1ed7cb":"code","195a4327":"code","05f5969e":"code","63020c89":"code","fc64f5ad":"code","f68afea1":"code","afd42a3a":"code","9d6b7221":"code","954e404c":"code","4293dc82":"code","523c4090":"code","dc671c0e":"code","d2a427a2":"code","55ec9da9":"code","55d0aadf":"code","2f5ac568":"code","fca44121":"code","06ce5f25":"code","9710d370":"code","89521572":"code","83d3fd5f":"code","c6345494":"code","50d3d5a4":"code","ea07cae8":"code","195213fb":"code","01234f1e":"code","25f7735c":"code","65a82d30":"code","64cb41cf":"code","8c75172a":"code","9c2cf627":"code","4ea7c596":"code","c443c458":"markdown","23936064":"markdown","787b905d":"markdown","2b3f4332":"markdown","ba1ed91a":"markdown"},"source":{"16be3817":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3a1ed7cb":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nimport xgboost\nfrom sklearn.metrics import accuracy_score,confusion_matrix","195a4327":"data=pd.read_csv('\/kaggle\/input\/drug-classification\/drug200.csv')","05f5969e":"data.head(5)","63020c89":"data.Drug.unique()","fc64f5ad":"data.isnull().sum()","f68afea1":"data.shape","afd42a3a":"data.columns","9d6b7221":"sns.violinplot(x=data.BP, y=data.Age, data=data)","954e404c":"sns.boxplot(x=data.Sex, y=data.Age, data=data)","4293dc82":"sns.boxplot(x=data.Cholesterol, y=data.Age, data=data)","523c4090":"sns.countplot(x=data.Sex,data=data)","dc671c0e":"sns.countplot(x=data.Cholesterol,data=data)","d2a427a2":"sns.countplot(x=data.Drug,data=data)","55ec9da9":"lb=LabelEncoder()\ndata.Sex=lb.fit_transform(data.Sex)\ndata.BP=lb.fit_transform(data.BP)\ndata.Cholesterol=lb.fit_transform(data.Cholesterol)","55d0aadf":"data.head(3)","2f5ac568":"BP=data['BP']\nBP_=pd.get_dummies(BP,drop_first=True)\nBP_.head(2)","fca44121":"y=data['Drug']\ny=lb.fit_transform(y)","06ce5f25":"data.drop(['BP','Drug'],axis=1,inplace=True)\n","9710d370":"new=pd.concat([data,BP_],axis=1)","89521572":"sns.heatmap(new.corr(),annot=True,fmt='.1f',linewidths=0.5)","83d3fd5f":"X=new","c6345494":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=.25,shuffle=True)","50d3d5a4":"rf=RandomForestClassifier()\nknn=KNeighborsClassifier()\ndtc=DecisionTreeClassifier()","ea07cae8":"rf.fit(X_train,y_train)\nknn.fit(X_train,y_train)\ndtc.fit(X_train,y_train)","195213fb":"y_1=rf.predict(X_test)\ny_2=knn.predict(X_test)\ny_3=dtc.predict(X_test)\n","01234f1e":"print('accuracy score 1: ',accuracy_score(y_test,y_1))\nprint('accuracy score 2: ',accuracy_score(y_test,y_2))\nprint('accuracy score 3: ',accuracy_score(y_test,y_3))","25f7735c":"cmap1=confusion_matrix(y_test, y_1)\ncmap2=confusion_matrix(y_test, y_2)\ncmap3=confusion_matrix(y_test, y_3)","65a82d30":"sns.heatmap(cmap1,annot=True)\n","64cb41cf":"sns.heatmap(cmap2,annot=True)\n","8c75172a":"sns.heatmap(cmap3,annot=True)\n","9c2cf627":"xGb = xgboost.XGBClassifier()\nxGb.fit(X_train,y_train)\ny_testpred= xGb.predict(X_test)\n","4ea7c596":"cmap1=confusion_matrix(y_test, y_testpred)\nsns.heatmap(cmap1,annot=True)\nprint('Accuracy is: ', accuracy_score(y_test,y_testpred))","c443c458":"# Importing Library and Dataset","23936064":"# Using XGBOOST","787b905d":"# Visualizing for Intuition","2b3f4332":"# Data Preprocessing Steps","ba1ed91a":"# Splitting DATASET"}}