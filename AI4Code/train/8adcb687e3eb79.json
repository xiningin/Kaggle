{"cell_type":{"1de7daa4":"code","b757f661":"code","ef755bd1":"code","bfdebb11":"code","3f157169":"code","cfda2fb4":"code","214911d6":"code","f97ef1b3":"code","1d8d0c92":"code","956e8c0f":"code","d9d5552a":"code","b20aee09":"code","93eb403a":"code","825282d4":"code","e3932521":"code","e9f2aaf9":"code","53b5f687":"code","1b7e16b5":"markdown","b10fdfe6":"markdown","d4813bc0":"markdown","145a77ec":"markdown","97e97450":"markdown","9c6532f8":"markdown","b1890a7f":"markdown","5821fb43":"markdown","7560f494":"markdown","192498f6":"markdown","515ccfc1":"markdown","2040c7f6":"markdown","90a4beab":"markdown","d3d68ff0":"markdown"},"source":{"1de7daa4":"import numpy as np \nimport pandas as pd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nfrom mlxtend.preprocessing import TransactionEncoder\nfrom mlxtend.frequent_patterns import apriori\nfrom mlxtend.frequent_patterns import association_rules\n\nimport mlxtend as ml\nprint('MXTend Version: %s' % ml.__version__)\nprint('Pandas Version: %s' % pd.__version__)\nprint('Numpy Version: %s' % np.__version__)","b757f661":"df = pd.read_csv('..\/input\/datasets-for-appiori\/basket_analysis.csv')\ndf.head()","ef755bd1":"df.drop('Unnamed: 0',axis=1,inplace=True)","bfdebb11":"df.head()","3f157169":"df.info()","cfda2fb4":"apriori(df, min_support=0.15)[1:25]","214911d6":"print(\"Kural Say\u0131s\u0131:\", len(apriori(df, min_support=0.15)))","f97ef1b3":"apriori(df, min_support=0.15, use_colnames=True)[1:25]","1d8d0c92":"frequent_itemsets = apriori(df, min_support=0.15, use_colnames=True)\nrules1 = association_rules(frequent_itemsets, metric=\"confidence\", min_threshold=0.30)","956e8c0f":"print(\"Olu\u015fan Kural Say\u0131s\u0131:\", len(rules1))","d9d5552a":"rules1 = rules1.sort_values(['confidence'], ascending=False)\n\nrules1[1:11]","b20aee09":"rules1[\"antecedent_len\"] = rules1[\"antecedents\"].apply(lambda x: len(x))\nrules1[\"consequents_len\"] = rules1[\"consequents\"].apply(lambda x: len(x))\nrules1[1:6]","93eb403a":"rules2 = association_rules(frequent_itemsets, metric=\"lift\", min_threshold=1)\nrules2 = rules2.sort_values(['lift'], ascending=False)\nrules2[1:6]","825282d4":"rules2[\"antecedent_len\"] = rules2[\"antecedents\"].apply(lambda x: len(x))\nrules2[\"consequents_len\"] = rules2[\"consequents\"].apply(lambda x: len(x))\nrules2[1:6]","e3932521":"rules1[(rules1['antecedent_len'] >= 1) &\n       (rules1['confidence'] >= 0.20) &\n       (rules1['lift'] > 1) ].sort_values(['confidence'], ascending=False)[1:10]","e9f2aaf9":"rules1[rules1['antecedents'] == {'Bread'}].sort_values(['confidence'], ascending=False)[1:10]","53b5f687":"rules1.to_json('.\/rules1.json')\nrules2.to_json('.\/rules2.json')","1b7e16b5":"\u015eimdi de apriori algoritmas\u0131 i\u00e7erisinde use_colnames=True parametresini kullanarak items(\u00fcr\u00fcnler) numaralar\u0131ndan item(\u00fcr\u00fcn) isimlerine ge\u00e7i\u015f yap\u0131yoruz.","b10fdfe6":"Yukar\u0131daki confidence metri\u011fi i\u00e7in yapt\u0131klar\u0131m\u0131z\u0131 di\u011fer metrikler i\u00e7inde yapabiliriz. \u00d6rnek olmas\u0131 ad\u0131na lift metri\u011fi i\u00e7in:","d4813bc0":"Verilen parametre de\u011ferlerine g\u00f6re olu\u015fan Birliktelik Kurallar\u0131 Analizine ait olu\u015fan kurallar\u0131 <code>.json<\/code> olarak olarak export ediyoruz.","145a77ec":"Tablodaki itemset kolonu i\u00e7erisinde yazan rakamlar\u0131 \u00fcr\u00fcnleri (0-15) ifade etmektedir. 0 no\u2019lu \u00fcr\u00fcn Apple, 1 no\u2019lu \u00fcr\u00fcn Bread olarak 14 no\u2019lu \u00fcr\u00fcn ise Yogurt ifade etmektedir.\n<br><br>\n 0   Apple         999 non-null    bool<br> <br>\n 1   Bread         999 non-null    bool<br>  \n 2   Butter        999 non-null    bool<br>  \n...","97e97450":"**Confidence metri\u011fine g\u00f6re (Z-A) 10 Kural:**","9c6532f8":"**Olu\u015fan Kural Setleri i\u00e7in Filtreleme**\n\nFiltre 1: Antecedent item uzunlu\u011fu 1 olan ve Confidence de\u011feri 0.20\u2019ye b\u00fcy\u00fck e\u015fit olan ve Lift de\u011feri 1\u2018den b\u00fcy\u00fck olan ilk 10 kay\u0131t\u0131 g\u00f6relim.","b1890a7f":"Filtre 2: Benzer \u015fekilde Antecedents item ad\u0131 Bread olan ve Confidence metri\u011fine g\u00f6re [Z-A] s\u0131ralanm\u0131\u015f ilk 10 kay\u0131t:","5821fb43":"**Yorum 1:** ID bilgisi 67 olan sat\u0131r\u0131 inceleyecek olursak;\n* Ica Cream ve Butter item\u2019lar\u0131n\u0131n birlikte g\u00f6r\u00fclme olas\u0131l\u0131\u011f\u0131 (support) %21 (0.207) oldu\u011funu,\n* Ice Cream item\u2019\u0131n\u0131n sat\u0131n alan ki\u015filerin (confidence)  %50\u2019inin (0.504878) olas\u0131l\u0131kla  Butter item\u2019\u0131n\u0131da sat\u0131n ald\u0131\u011f\u0131n\u0131,\n* Ice Cream item\u2019\u0131n\u0131n yer ald\u0131\u011f\u0131 al\u0131\u015fveri\u015f sepetlerin de Butter item\u2019\u0131n\u0131n sat\u0131\u015f\u0131 (lift) 1,20 kat artt\u0131\u011f\u0131,\n* Ice Cream ve Butter item\u2019lar\u0131n\u0131n birlikte sat\u0131n al\u0131nmalar\u0131n\u0131n ile birbirlerinden ba\u011f\u0131ms\u0131z olarak sat\u0131n al\u0131nmalar\u0131ndan ne kadar fazla (leverage) 0.03 oldu\u011funu,\n* Ice Cream ve Butter item\u2019lar\u0131n\u0131n birbirleri ile ili\u015fkili (conviction) 1.17 de\u011feri ile oldu\u011funu  s\u00f6yleyebiliriz.\n\n\u015eimdi de antecedents ve consequents k\u0131s\u0131mlar\u0131nda bulunan itemsleri say\u0131lar\u0131n\u0131 toplayal\u0131m ve ilk 5 sat\u0131r\u0131 g\u00f6relim:","7560f494":"**Apriori Analizi Kurallar\u0131**\n* Veri seti tabular veya transactional yap\u0131da olmal\u0131d\u0131r\n* Veriler kategorik olmal\u0131d\u0131r.\n* Verideki de\u011fi\u015fkenlerin y\u00f6nleri in,out veya both olarak tan\u0131mlanmal\u0131d\u0131r.\n\n* **Not:** Veri setini i\u00e7erik aktard\u0131ktan sonra nested list (i\u00e7 i\u00e7e liste) tipinde ise tabular bir yap\u0131ya \u00e7evirmemiz gerekiyor. Bunun i\u00e7in mlxtend mod\u00fcl\u00fc i\u00e7erisinde yer alan preprocessing s\u0131n\u0131f\u0131 i\u00e7erisinde TransactionEncoder fonksiyonunu kullanabilirsiniz. Bizim bu veri setinde bu i\u015fleme ihtiyac\u0131m\u0131z yok.\n\n<code>from mlxtend.preprocessing import TransactionEncoder\nte = TransactionEncoder()\nte_ary = te.fit(df).transform(df)\ndf = pd.DataFrame(te_ary, columns=te.columns_)<\/code>\n\n*TransactionEncoder hakk\u0131nda daha fazla bilgi i\u00e7in: http:\/\/rasbt.github.io\/mlxtend\/user_guide\/preprocessing\/TransactionEncoder\/*","192498f6":"http:\/\/rasbt.github.io\/mlxtend\/<br>\nhttps:\/\/github.com\/rasbt\/mlxtend<br>\nhttps:\/\/pandas.pydata.org\/<br>\nhttps:\/\/www.veribilimiokulu.com\/python-ile-birliktelik-kurallari-analizi-association-rules-analysis-with-python\/<br>","515ccfc1":"Yukar\u0131daki tabloda tekli, ikili ve \u00fc\u00e7l\u00fc itemset\u2019lerin olu\u015ftu\u011fu g\u00f6r\u00fclmektedir. min_support de\u011feri (0.15) de\u011ferini set edip kurallar\u0131 rule setleri olu\u015fturduktan sonra ilgilendi\u011fimiz metri\u011fe g\u00f6re (confidence, lift, conviction ve vd.) Association Rules tablosunu olu\u015fturuyoruz. Burada metric olarak Confidence ve de\u011ferini 0.3 (%30) se\u00e7tik.","2040c7f6":"**Model Olu\u015fturma**<br>\n\n<code>from mlxtend.frequent_patterns import apriori<\/code>\n\n*Apriori hakk\u0131nda daha fazla bilgi i\u00e7in : http:\/\/rasbt.github.io\/mlxtend\/user_guide\/frequent_patterns\/apriori\/*","90a4beab":"**Kural Say\u0131lar\u0131**\n\n<code>from mlxtend.frequent_patterns import association_rules<\/code>\n\n*Association_rules hakk\u0131nda daha fazla bilgi i\u00e7in: http:\/\/rasbt.github.io\/mlxtend\/user_guide\/frequent_patterns\/association_rules\/*","d3d68ff0":"## MARKET BASKET ANALYSIS with Apriori\n\n![](https:\/\/miro.medium.com\/max\/2880\/1*DHfQvlMVBaJCHpYmj1kmCw.png)"}}