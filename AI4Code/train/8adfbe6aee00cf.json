{"cell_type":{"ad01ce76":"code","8a1e472a":"code","26842ef8":"code","f1e2c87e":"code","50e343f9":"code","f48890f5":"code","cb40a388":"code","c824923b":"code","43d4e77d":"code","8dc0fb2f":"code","cedb5ead":"code","ff0636e3":"code","8003c18e":"code","4e8b333b":"code","cccd3b5f":"markdown","8ff4b6e2":"markdown","4b18dbdd":"markdown","202bbc71":"markdown","fad3fbb0":"markdown","68df17c7":"markdown","82f6b438":"markdown"},"source":{"ad01ce76":"import pandas as pd\nimport requests\nimport numpy \nimport matplotlib.pyplot as plt\nimport seaborn as sns","8a1e472a":"url = 'http:\/\/raw.githubusercontent.com\/mwitiderrick\/stockprice\/master\/NSE-TATAGLOBAL.csv'\ndf = pd.read_csv(url)","26842ef8":"df","f1e2c87e":"df1 = df.reset_index()['Close']","50e343f9":"#Let us plot the Close value graph using pyplot\n\nplt.plot(df['Close'])\nplt.show()","f48890f5":"from sklearn.preprocessing import MinMaxScaler\nscaler=MinMaxScaler(feature_range=(0,1))\ndf1=scaler.fit_transform(numpy.array(df1).reshape(-1,1))","cb40a388":"training_size=int(len(df1)*0.65)\ntest_size=len(df1)-training_size\ntrain_data,test_data=df1[0:training_size,:],df1[training_size:len(df1),:1]","c824923b":"def create_dataset(dataset, time_step=1):\n    dataX, dataY = [], []\n    for i in range(len(dataset)-time_step-1):\n        a = dataset[i:(i+time_step), 0]\n        dataX.append(a)\n        dataY.append(dataset[i + time_step, 0])\n        return numpy.array(dataX), numpy.array(dataY)\ntime_step = 100\nX_train, y_train = create_dataset(train_data, time_step)\nX_test, ytest = create_dataset(test_data, time_step)","43d4e77d":"X_train =X_train.reshape(X_train.shape[0],X_train.shape[1] , 1)\nX_test = X_test.reshape(X_test.shape[0],X_test.shape[1] , 1)","8dc0fb2f":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import LSTM","cedb5ead":"model=Sequential()\nmodel.add(LSTM(50,return_sequences=True,input_shape=(100,1)))\nmodel.add(LSTM(50,return_sequences=True))\nmodel.add(LSTM(50))\nmodel.add(Dense(1))\nmodel.compile(loss='mean_squared_error',optimizer='adam')","ff0636e3":"train_predict=model.predict(X_train)\ntest_predict=model.predict(X_test)\ntrain_predict=scaler.inverse_transform(train_predict)\ntest_predict=scaler.inverse_transform(test_predict)","8003c18e":"import math\nfrom sklearn.metrics import mean_squared_error\nmath.sqrt(mean_squared_error(y_train,train_predict))","4e8b333b":"x_input=test_data[341:].reshape(1,-1)\nx_input.shape","cccd3b5f":"### LSTM\n\n#### LSTMs are widely used for sequence prediction problems and have proven to be extremely effective. The reason they work so well is that LSTM can store past important information and forget the information that is not.\n#### LSTM has three gates:\n##### The input gate: The input gate adds information to the cell state,\n##### The forget gate: It removes the information that is no longer required by the model,\n##### The output gate: Output Gate at LSTM selects the information to be shown as output.","8ff4b6e2":"## Stock Market Prediction And Forecasting Using Stacked LSTM\n\n## By: Ishaan Thareja","4b18dbdd":"### Now the timestep value will be 100. Let\u2019s split the data X, Y. In the 0th iteration the first 100 elements goes as your first record and the 101 elements will be put up in the X. The 100 elements will be put up in the Y.","202bbc71":"### Train and Test Split","fad3fbb0":"### LSTM is very sensitive to the scale of the data, Here the scale of the Close value is in a kind of scale, we should always try to transform the value.\n\n### Here we will use min-max scalar to transform the values from 0 to 1.We should reshape so that we can use fit transform.","68df17c7":"### Thank You! ","82f6b438":"### Predict both the X_train and the X_test, now let\u2019s scaler inverse transform because I want to see the root mean square performance.\n\n"}}