{"cell_type":{"f194dc2d":"code","bbf1bee3":"code","f09d70bc":"code","0e3965f4":"code","6edfd1e5":"code","dc41c8ec":"code","4eca712f":"code","70b13296":"code","c79fd942":"code","e6e3307a":"code","1aee9ebc":"code","dfc1a604":"code","2ea52997":"code","2cf076ac":"code","7285fd73":"code","27ce943d":"code","d2e55c0c":"code","c056792a":"code","56c328f5":"code","56010ef8":"code","5f5d5be1":"code","98fc0a7f":"code","230bbf06":"code","c2c77717":"code","e57df514":"code","9b5726eb":"code","dcbf1a89":"code","adb3d731":"code","557bbfa1":"code","ff250fbe":"code","fb04986a":"code","a06bb1c3":"code","079a71a1":"markdown","8c3c2e56":"markdown","48bce16d":"markdown","1349d805":"markdown","7157a852":"markdown","20c70e1e":"markdown","4239fd33":"markdown","d6d50f93":"markdown","fb9a32af":"markdown","689fee8e":"markdown","5b74de86":"markdown"},"source":{"f194dc2d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","bbf1bee3":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","f09d70bc":"df=pd.read_csv('\/kaggle\/input\/wine-quality-dataset\/WineQT.csv')","0e3965f4":"df.head()","6edfd1e5":"df['quality'].unique()","dc41c8ec":"df.info()","4eca712f":"df=df.drop('Id',axis=1)","70b13296":"df.describe()","c79fd942":"fig = plt.figure(figsize=(20, 20))\nax1 = fig.add_subplot(4,3,1)\nax2 = fig.add_subplot(4,3,2)\nax3 = fig.add_subplot(4,3,3)\nax4 = fig.add_subplot(4,3,4)\nax5 = fig.add_subplot(4,3,5)\nax6 = fig.add_subplot(4,3,6)\nax7 = fig.add_subplot(4,3,7)\nax8 = fig.add_subplot(4,3,8)\nax9 = fig.add_subplot(4,3,9)\nax10 = fig.add_subplot(4,3,10)\nax11 = fig.add_subplot(4,3,11)\nsns.violinplot(x='quality', y='fixed acidity', data=df,ax=ax1)\nsns.violinplot(x='quality', y='volatile acidity', data=df,ax=ax2)\nsns.violinplot(x='quality', y='citric acid', data=df,ax=ax3)\nsns.violinplot(x='quality', y='residual sugar', data=df,ax=ax4)\nsns.violinplot(x='quality', y='chlorides', data=df,ax=ax5)\nsns.violinplot(x='quality', y='free sulfur dioxide', data=df,ax=ax6)\nsns.violinplot(x='quality', y='total sulfur dioxide', data=df,ax=ax7)\nsns.violinplot(x='quality', y='density', data=df,ax=ax8)\nsns.violinplot(x='quality', y='pH', data=df,ax=ax9)\nsns.violinplot(x='quality', y='sulphates', data=df,ax=ax10)\nsns.violinplot(x='quality', y='alcohol', data=df,ax=ax11)","e6e3307a":"plt.figure(figsize = (15,8))\nsns.heatmap(df.corr(),annot=True, fmt=\"1.1f\")","1aee9ebc":"sns.pairplot(df, hue=\"quality\")","dfc1a604":"df['quality2'] = [1 if x >= 7 else 0 for x in df['quality']]\ndf=df.drop('quality',axis=1)","2ea52997":"df","2cf076ac":"df=df.drop(['fixed acidity','residual sugar','chlorides','free sulfur dioxide','pH'],axis=1)","7285fd73":"df['quality2'].value_counts()","27ce943d":"pip install pycaret --ignore-installed llvmlite numba","d2e55c0c":"from pycaret.classification import *","c056792a":"exp_clf = setup(df, target = 'quality2',silent=True,session_id=1)","56c328f5":"compare_models()","56010ef8":"ct=create_model('catboost')","5f5d5be1":"plot_model(ct, plot = 'feature')","98fc0a7f":"plot_model(ct, plot = 'confusion_matrix')","230bbf06":"import matplotlib.pyplot as plt\nfrom matplotlib.colors import ListedColormap\n%matplotlib inline\n\nimport tensorflow as tf\n\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Activation, Dropout\nfrom tensorflow.keras.optimizers import SGD\nfrom tensorflow.keras.optimizers import Adam\nfrom keras.utils import np_utils\nfrom keras.callbacks import EarlyStopping \n\nfrom sklearn import datasets\nfrom sklearn import preprocessing\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import plot_confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import StratifiedKFold","c2c77717":"df_X=df.drop(['quality2'],axis=1)\ny=df['quality2']","e57df514":"sc = preprocessing.StandardScaler()\nX_sc = sc.fit_transform(df_X)\n\ndf_X_sc = pd.DataFrame(X_sc,columns=df_X.columns)\ndf_X_sc.head()","9b5726eb":"y_T = np_utils.to_categorical(y) ","dcbf1a89":"X_train, X_test, y_train, y_test = train_test_split(df_X, y_T,\n                                                    test_size=0.2,\n                                                    random_state=0,\n                                                    stratify=y)\n\nX_train, X_eval, y_train, y_eval = train_test_split(X_train, y_train,\n                                                    test_size=0.2,\n                                                    random_state=0,\n                                                    stratify=y_train)","adb3d731":"np.random.seed(0)\ntf.random.set_seed(1)\n\nmodel = Sequential()\nmodel.add(Dense(units=20, activation='relu', input_dim=6))\nmodel.add(Dense(units=10, activation='relu',))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(units=10, activation='relu',))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(units=2, activation='sigmoid'))\nmodel.summary()","557bbfa1":"model.compile(\n    loss='binary_crossentropy',     \n    optimizer=Adam(lr=0.0003),\n    metrics=['accuracy']) ","ff250fbe":"early_stopping = EarlyStopping(patience=30, verbose=0) \n\nhistory = model.fit(X_train, y_train,                  \n                    epochs=500,\n                    batch_size=10,\n                    verbose=1,\n                    validation_data=(X_eval, y_eval),\n                    callbacks=[early_stopping])","fb04986a":"acc = history.history['accuracy']\nval_acc = history.history['val_accuracy']\nloss = history.history['loss']\nval_loss = history.history['val_loss']\nepochs_range = range(len(history.history['val_loss']))\nplt.figure(figsize=(15, 10))\nplt.subplot(1, 2, 1)\nplt.plot(epochs_range, acc, label='Training Binary Accuracy')\nplt.plot(epochs_range, val_acc, label='Validation Binary Accuracy')\nplt.legend(loc='lower right')\nplt.title('Training and Validation Binary Accuracy')\nplt.subplot(1, 2, 2)\nplt.plot(epochs_range, loss, label='Training Loss')\nplt.plot(epochs_range, val_loss, label='Validation Loss')\nplt.legend(loc='upper right')\nplt.title('Training and Validation Loss')\nplt.show()","a06bb1c3":"y_pred = model.predict(X_test)\ny_pred_max = np.argmax(y_pred, axis=1)\n\n_, y_test_acc = np.where(y_test > 0) \n\naccuracy = accuracy_score(y_test_acc, y_pred_max)\nprint('Test Accuracy:', accuracy)","079a71a1":"5.Classification model by Neural Network","8c3c2e56":"I got 90% Accuracy by Catboost.","48bce16d":"4.Calassification model by PyCaret","1349d805":"1.Data importing and preprocessing","7157a852":"There are 6 ranks in quality. So I tried to divide them into ''Good' and 'Bad'.","20c70e1e":"There are 6 ranks in quality.","4239fd33":"* I tried to divide data into 'Good' wine and 'Bad' wine to make binary classification model.\n* If the rank of quality is 7 or more, it is 'Good' :1. And If the rank of quality is 6 or less, it is 'Bad':0.","d6d50f93":"* I tried to reduce the number of features.\n* I droped the features which do not have large gap between ranks in quality, and which also do not have plus or minus 2 or more positive or negative correlation with quality.","fb9a32af":"3.Features engineering","689fee8e":"2.Visualization","5b74de86":"![Provence-red-wine.jpg](attachment:93278774-0740-416f-beaf-2679ba9f86b5.jpg)\n\nimage from https:\/\/www.decanter.com\/wine-reviews-tastings\/wine-panel-tastings\/provence-red-wine-panel-tasting-results-375319\/"}}