{"cell_type":{"0049a5d7":"code","137c45db":"code","3ce35867":"code","6a5843a3":"code","b262d7f4":"code","f4d42ed1":"code","78352e7a":"code","b199f45b":"code","4830ea26":"code","3ed77801":"code","598ed5f1":"code","4fca141f":"code","9cc6e39d":"code","494d7a89":"markdown","909b2cf6":"markdown","040b0c19":"markdown","fcd84f68":"markdown","870e633f":"markdown","1a6501d6":"markdown"},"source":{"0049a5d7":"import warnings\nwarnings.filterwarnings('ignore')","137c45db":"from google.cloud import bigquery\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"stackoverflow\" dataset\ndataset_ref = client.dataset(\"stackoverflow\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)\n\n# Construct a reference to the \"posts_questions\" table\ntable_ref = dataset_ref.table(\"posts_questions\")\n\n# API request - fetch the table\ntable = client.get_table(table_ref)\n\n# Preview the first five lines of the table\nclient.list_rows(table, max_results=5).to_dataframe()","3ce35867":"import bq_helper\nfrom bq_helper import BigQueryHelper\nbq_assistant = BigQueryHelper(\"bigquery-public-data\", \"stackoverflow\")","6a5843a3":"bq_assistant.table_schema(\"posts_questions\")","b262d7f4":"def show_amount_of_data_scanned(query):\n    # dry_run lets us see how much data the query uses without running it\n    dry_run_config = bigquery.QueryJobConfig(dry_run=True)\n    query_job = client.query(query, job_config=dry_run_config)\n    print('Data processed: {} GB'.format(round(query_job.total_bytes_processed \/ 10**9, 3)))","f4d42ed1":"questions_query = \"\"\"\n                    SELECT\n                        EXTRACT(YEAR FROM creation_date) AS Year,\n                        COUNT(*) AS Number_of_Questions,\n                        ROUND(100 * COUNTIF(answer_count > 0) \/ COUNT(*), 2) AS Percent_of_Questions_with_Answers\n                    FROM `bigquery-public-data.stackoverflow.posts_questions`\n                    GROUP BY Year\n                    ORDER BY Year DESC\n                    \"\"\"\nshow_amount_of_data_scanned(questions_query)","78352e7a":"questions_query = \"\"\"\n                    SELECT\n                        EXTRACT(YEAR FROM creation_date) AS Year,\n                        COUNT(*) AS Number_of_Questions,\n                        ROUND(100 * COUNTIF(answer_count > 0) \/ COUNT(*), 2) AS Percent_of_Questions_with_Answers\n                    FROM `bigquery-public-data.stackoverflow.posts_questions`\n                    GROUP BY Year\n                    ORDER BY Year DESC\n                    \"\"\"\nquestions = client.query(questions_query).result().to_dataframe()\nquestions\n","b199f45b":"import pandas as pd\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n# Set the width and height of the figure\nplt.figure(figsize=(10,6))\n\n# Add title\nplt.title(\"Wie viele Fragen auf Stackoverflow wurden beantwortet (Jahresvergleich im Prozent)?\")\n\nsns.barplot(x=questions['Year'], y=questions['Percent_of_Questions_with_Answers'])\n\nplt.ylabel(\"Prozent der beantworteten Fragen\")\nplt.xlabel(\"Jahr\")","4830ea26":"bq_assistant.table_schema(\"posts_answers\")","3ed77801":"answers_query = \"\"\"\n                SELECT\n                   Day_of_Week,\n                   COUNT(*) AS Number_of_Questions,\n                   SUM(within_1h) AS Number_of_Answered_within_1h,\n                   ROUND(100 * SUM(within_1h) \/ COUNT(*), 2) AS Percent_of_Answered_within_1h\n                FROM\n                (\n                    SELECT\n                        EXTRACT(DAYOFWEEK FROM q.creation_date) AS day_of_week,\n                        a.id AS answer_id,\n                        COUNTIF\n                  ((UNIX_SECONDS(a.creation_date)-UNIX_SECONDS(q.creation_date))\/3600 <= 1) AS within_1h\n                    FROM\n                       `bigquery-public-data.stackoverflow.posts_questions` AS q \n                    LEFT JOIN\n                        `bigquery-public-data.stackoverflow.posts_answers` AS a\n                    ON q.id = a.parent_id\n                    GROUP BY answer_id, day_of_week\n                )\n                GROUP BY Day_of_Week\n                ORDER BY Day_of_Week\n                \"\"\"\nanswers = client.query(answers_query).result().to_dataframe()\nanswers","598ed5f1":"# Replase numbers with weekdays\n# Ersetze die Zahlen mit Wochentagen\nanswers = answers.replace({1: \"Sonntag\", 2: \"Montag\", 3: \"Dienstag\", 4: \"Mittwoch\", 5: \"Donnerstag\", 6: \"Freitag\", 7: \"Samstag\"})","4fca141f":"# Take the first row ('Sontag') and move it to the end of the list\n# Nehme die erste Zeile ('Sontag') und schiebe sie zum letzten Platz\n\nidx = answers.index.tolist()\nidx.pop(0)\nanswers = answers.reindex(idx + [0])","9cc6e39d":"# Set the width and height of the figure\nplt.figure(figsize=(10,6))\n\n# Add title\nplt.title(\"An welchem Wochentag wurden die meisten Fragen innerhalb einer Stunde beantwortet?\")\n\nsns.barplot(x=answers['Day_of_Week'], y=answers['Percent_of_Answered_within_1h'])\n\nplt.ylabel(\"Prozent der Fragen beantworteten in der ersten Stunde\")\nplt.xlabel(\"Wochentag\")","494d7a89":"The older the question is, the more likely it has an answer.\n\n*Fazit: je weiter in der Verganenheit die Frage steht, desto wahrscheinlicher ist es, dass es eine Antwort gibt.*","909b2cf6":"All weekdays have almost the same percent of questions answered within 1 hour and only on weekends this number is a bit smaller. \n\n*Fazit: Alle **Werktage sind fast gleich** und am **Wochenende** werden die Fragen ein bischen **langsamer** beantwortet.*","040b0c19":"In the first part of this notebook we'll check the percentage of questions that have been answered over the years on Stack Overflow. In the second part we'll find out which day of the week has most questions answered within an hour. But let's start by importing necessary tools from biquery and bq_helper and looking at the description of columns, I'll comment my work in both English and German.\n\n*Im ersten Teil sehen wir, wie viele Fragen auf Stack Overlow sind beantwortet und machen einen Jahresvergleich. Im zweiten Teil erkunden wir, an welchem Wochentag die meisten Fragen innerhalb einer Stunde beantwortet werden. Aber wir starten mit dem Importieren von Werkzeuge aus bigquery und bq_helper. Unterwegs mache ich Kommentare auf Deutsch und Englisch.*","fcd84f68":"# Part 1 \/ Teil 1\n\n**What is the percentage of questions that have been answered over the years?**\n\n***Wie viele Fragen wurden beantwortet (Jahresvergleich im Prozent)?***","870e633f":"![](https:\/\/images.unsplash.com\/photo-1487058792275-0ad4aaf24ca7?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80)","1a6501d6":"# Part 2 \/ Teil 2\n\n**Which day of the week has most questions answered within an hour?**\n\n***An welchem Wochentag wurden die meisten Fragen innerhalb einer Stunde beantwortet?***"}}