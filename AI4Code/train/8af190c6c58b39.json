{"cell_type":{"38a70ed1":"code","8db225be":"code","3f72c452":"code","189ef20d":"code","74e5d291":"code","e8c5daa4":"code","d3097e01":"code","7fd35c1d":"code","7d4ca3e7":"code","4e818436":"code","5f991525":"code","569b3630":"code","cd076874":"code","dacd163d":"code","e84cb209":"code","8b0bde18":"markdown","30e56baa":"markdown","167630c8":"markdown","7d4ff011":"markdown","d860812c":"markdown","32385c6a":"markdown","4d34bacc":"markdown","78c3ddb2":"markdown","e1ffeb03":"markdown","6b68a624":"markdown"},"source":{"38a70ed1":"from glob import glob\nimport json\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, STOPWORDS\nimport os","8db225be":"dir_list = [\n    '\/kaggle\/input\/CORD-19-research-challenge\/biorxiv_medrxiv\/biorxiv_medrxiv',\n    '\/kaggle\/input\/CORD-19-research-challenge\/comm_use_subset\/comm_use_subset',\n    '\/kaggle\/input\/CORD-19-research-challenge\/custom_license\/custom_license',\n    '\/kaggle\/input\/CORD-19-research-challenge\/noncomm_use_subset\/noncomm_use_subset'\n]\nresults_list = list()\nfor target_dir in dir_list:\n    \n    print(target_dir)\n    \n    for json_fp in glob(target_dir + '\/*.json'):\n\n        with open(json_fp) as json_file:\n            target_json = json.load(json_file)\n\n        data_dict = dict()\n        data_dict['doc_id'] = target_json['paper_id']\n        data_dict['title'] = target_json['metadata']['title']\n\n        abstract_section = str()\n        for element in target_json['abstract']:\n            abstract_section += element['text'] + ' '\n        data_dict['abstract'] = abstract_section\n\n        full_text_section = str()\n        for element in target_json['body_text']:\n            full_text_section += element['text'] + ' '\n        data_dict['full_text'] = full_text_section\n        \n        results_list.append(data_dict)\n        \n    \ndf_results = pd.DataFrame(results_list)\ndf_results.head()        ","3f72c452":"articles=df_results['full_text'].str.lower().values","189ef20d":"Remdesivir=[]\nfor text in articles:\n    for sentences in text.split('.'):\n        if 'remdesivir' in sentences:\n            Remdesivir.append(sentences)          ","74e5d291":"stopwords = set(STOPWORDS)\nwordcloud = WordCloud(stopwords =stopwords, width=1000, height=500).generate(\"+\".join(Remdesivir))\nplt.figure(figsize=(15,8))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","e8c5daa4":"Chloroquine=[]\nfor text in articles:\n    for sentences in text.split('.'):\n        if 'chloroquine' in sentences:\n            Chloroquine.append(sentences)         ","d3097e01":"wordcloud = WordCloud(stopwords =stopwords, width=1000, height=500).generate(\"+\".join(Chloroquine))\nplt.figure(figsize=(15,8))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","7fd35c1d":"hydroxychloroquine=[]\nfor text in articles:\n    for sentences in text.split('.'):\n        if 'hydroxychloroquine' in sentences:\n            hydroxychloroquine.append(sentences)            ","7d4ca3e7":"wordcloud = WordCloud(stopwords =stopwords, width=1000, height=500).generate(\"+\".join(hydroxychloroquine))\nplt.figure(figsize=(15,8))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","4e818436":"lopinavir=[]\nfor text in articles:\n    for sentences in text.split('.'):\n        if 'lopinavir' in sentences:\n            lopinavir.append(sentences)           ","5f991525":"wordcloud = WordCloud(stopwords =stopwords, width=1000, height=500).generate(\"+\".join(lopinavir))\nplt.figure(figsize=(15,8))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","569b3630":"Ritonavir=[]\nfor text in articles:\n    for sentences in text.split('.'):\n        if 'ritonavir' in sentences:\n            Ritonavir.append(sentences)          ","cd076874":"wordcloud = WordCloud(stopwords =stopwords, width=1000, height=500).generate(\"+\".join(Ritonavir))\nplt.figure(figsize=(15,8))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","dacd163d":"interferon_beta=[]\nfor text in articles:\n    for sentences in text.split('.'):\n        if 'interferon-beta' in sentences:\n            interferon_beta.append(sentences) ","e84cb209":"wordcloud = WordCloud(stopwords =stopwords, width=1000, height=500).generate(\"+\".join(interferon_beta))\nplt.figure(figsize=(15,8))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","8b0bde18":"## lopinavir","30e56baa":"## Resources:","167630c8":"### method\nI basically read the datasets, search for exact words and make a worldcloud plot. ","7d4ff011":"## hydroxychloroquine","d860812c":"## interferon_beta","32385c6a":"## Introduction\nBased on [this](http:\/\/www.sciencemag.org\/news\/2020\/03\/who-launches-global-megatrial-four-most-promising-coronavirus-treatments) and some other resources, we know that there is some treatment types that has been using for coronavirus disease. I try to extract those traetments from datasets. All resources can be found below.","4d34bacc":"## Remdesivir","78c3ddb2":"## Chloroquine","e1ffeb03":"## Ritonavir","6b68a624":"* https:\/\/www.cdc.gov\/coronavirus\/2019-ncov\/symptoms-testing\/symptoms.html\n* https:\/\/www.kaggle.com\/iancornish\/drug-data\n* https:\/\/www.youtube.com\/watch?v=S6GVXk6kbcs&lc=z23czv4rezzqspkcnacdp434abyko0xfj3zyelkza01w03c010c\n* https:\/\/www.kaggle.com\/bgoss541\/training-set-labeling-jump-start-umls-linking\n* https:\/\/www.kaggle.com\/danofer\/usp-drug-classification\n* https:\/\/stackoverflow.com\/q\/37470966\n* https:\/\/www.sciencemag.org\/news\/2020\/03\/who-launches-global-megatrial-four-most-promising-coronavirus-treatments#\n* https:\/\/stackoverflow.com\/a\/50737722"}}