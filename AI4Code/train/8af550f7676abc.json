{"cell_type":{"34cbd464":"code","7909e76a":"code","7c3f0ae4":"code","bb6edb44":"code","236a77d4":"code","fec77c4e":"code","a9182cd7":"code","8960dd95":"code","12b71b13":"code","e18ae016":"code","fe258317":"code","b7fbeb78":"code","3ae74000":"code","ac37187c":"code","983603a2":"code","d5a8385a":"code","991cc440":"code","d701db15":"code","445c9cf1":"code","754fea1b":"code","bc446894":"code","902c9e78":"code","be766563":"code","60151b5e":"code","f6e3b0b8":"code","854c32bd":"code","1ff73eb1":"code","daac97f9":"code","eef1628b":"code","e35bd3e0":"code","2bea4d21":"code","6dd7825f":"code","f6d73c1e":"code","949c74a9":"code","27fd4073":"code","8887c8f2":"code","91f3f8e5":"code","cabaf28b":"code","ccfba416":"code","1efff40c":"code","04f555aa":"markdown","0810822b":"markdown","7ad68e4d":"markdown","8d3841d9":"markdown","3184a9fc":"markdown","550e3b91":"markdown"},"source":{"34cbd464":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')","7909e76a":"df = pd.read_csv(\"..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv\")","7c3f0ae4":"df.head()","bb6edb44":"df.shape","236a77d4":"df.info()","fec77c4e":"# 'Name' Top 20 books that have highest sold\nTop_sold = df['Name'].value_counts().iloc[:20]","a9182cd7":"plt.figure(figsize=(8,15))\n\nsns.barplot(x = Top_sold.values , y = Top_sold.index , color='#2a9d8f', alpha=.7)\n\nplt.title('Top 30 books that have highest sold', fontsize=20)\n\nplt.xlabel('Count' , fontsize=15)\nplt.ylabel('Name of The Book' , fontsize=15)\n\nplt.xticks(fontsize=15 )\nplt.yticks(fontsize=15)\nplt.show()","8960dd95":"Top_Authors = [df[df['Name']==x]['Author'].iloc[0] for x in  Top_sold.index]","12b71b13":"# Top_Authors\nTop_sold.values","e18ae016":"plt.figure(figsize=(22,6))\n\nplot = sns.barplot(x = Top_Authors, y =  Top_sold.values , color='#2a9d8f', alpha=.7)\n\n\nfor bar in plot.patches:\n    plot.annotate(\n        format(bar.get_height(), '.2f'),\n        (bar.get_x() + bar.get_width()\/2,\n        bar.get_height()),\n        ha='center', va='center', size=15 , xytext=(0,8),\n        textcoords='offset points'\n    )\n\nplt.title('Top 20 Authors that have the highest number of sold  books', fontsize=20)\n\nplt.xlabel('Count' , fontsize=15)\nplt.ylabel('Author' , fontsize=15)\n\nplt.xticks(fontsize=15 , rotation=90)\nplt.yticks(fontsize=15)\nplt.show()","fe258317":"# Top 20 Authors that have the highest number of published  books\nAuthor = df['Author'].value_counts().iloc[:20]","b7fbeb78":"plt.figure(figsize=(22,6))\n\nplot = sns.barplot(x = Author.index , y = Author.values , color='#2a9d8f', alpha=.7)\n\n\nfor bar in plot.patches:\n    plot.annotate(\n        format(bar.get_height(), '.2f'),\n        (bar.get_x() + bar.get_width()\/2,\n        bar.get_height()),\n        ha='center', va='center', size=15 , xytext=(0,8),\n        textcoords='offset points'\n    )\n\nplt.title('Top 20 Authors that have the highest number of published  books', fontsize=20)\n\nplt.xlabel('Count' , fontsize=15)\nplt.ylabel('Author' , fontsize=15)\n\nplt.xticks(fontsize=15 , rotation=90)\nplt.yticks(fontsize=15)\nplt.show()","3ae74000":"Rating = df['User Rating'].value_counts()","ac37187c":"plt.figure(figsize=(22,6))\n\nplot = sns.barplot(x = Rating.index , y = Rating.values , color='#2a9d8f', alpha=.7 , order=Rating.index)\n\n\nfor bar in plot.patches:\n    plot.annotate(\n        format(bar.get_height(), '.2f'),\n        (bar.get_x() + bar.get_width()\/2,\n        bar.get_height()),\n        ha='center', va='center', size=15 , xytext=(0,8),\n        textcoords='offset points'\n    )\n\nplt.title('User Rating', fontsize=20)\n\nplt.xlabel('Rating' , fontsize=15)\nplt.ylabel('count' , fontsize=15)\n\nplt.xticks(fontsize=15)\nplt.yticks(fontsize=15)\nplt.show()","983603a2":"# Best Books that have highest Reviewer\nBest_B_R = df.sort_values('Reviews', axis=0, ascending=False)[['Name','Reviews']].iloc[:40]\nBest_B_R = Best_B_R[~Best_B_R.duplicated()]","d5a8385a":"plt.figure(figsize=(15,22))\n\nplot = sns.barplot(y = Best_B_R['Name'].values , x = Best_B_R['Reviews'].values , color='#2a9d8f', alpha=.7 , order=Best_B_R['Name'].values)\n\nplt.title('Best Books that have highest Reviewer', fontsize=30)\n\nplt.xlabel('Reviewer' , fontsize=20)\nplt.ylabel('Books' , fontsize=20)\n\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=20)\nplt.show()","991cc440":"# Best Books that have highest Rating\nBest_B_Rating = df.sort_values('User Rating', axis=0, ascending=False)[['Name','User Rating']].iloc[:40]\nBest_B_Rating = Best_B_Rating[~Best_B_Rating.duplicated()]","d701db15":"plt.figure(figsize=(15,22))\n\nplot = sns.barplot(y = Best_B_Rating['Name'].values , x = Best_B_Rating['User Rating'].values , color='#2a9d8f', alpha=.7 , order=Best_B_Rating['Name'].values)\n\nplt.title('Best Books that have highest Rating', fontsize=30)\n\nplt.xlabel('Rating' , fontsize=20)\nplt.ylabel('Books' , fontsize=20)\n\nplt.xticks(fontsize=25)\nplt.yticks(fontsize=25)\nplt.show()","445c9cf1":"# Best Authors that have highest Rating\nBest_A_Rating = df.sort_values('User Rating', axis=0, ascending=False)[['Author','User Rating']].iloc[:40]\nBest_A_Rating = Best_A_Rating[~Best_A_Rating.duplicated()]","754fea1b":"plt.figure(figsize=(22,6))\n\nplot = sns.barplot(x=Best_A_Rating['Author'].values, y=Best_A_Rating['User Rating'].values, color='#2a9d8f', alpha=.7,order= Best_A_Rating['Author'].values)\n\n\nfor bar in plot.patches:\n    plot.annotate(\n        format(bar.get_height(), '.2f'),\n        (bar.get_x() + bar.get_width()\/2,\n        bar.get_height()),\n        ha='center', va='center', size=15 , xytext=(0,8),\n        textcoords='offset points'\n    )\n\nplt.title('Best Authors that have highest Rating', fontsize=20)\n\nplt.xlabel('Authors' , fontsize=15)\nplt.ylabel('count' , fontsize=15)\n\nplt.xticks(fontsize=15, rotation=45)\nplt.yticks(fontsize=15 )\nplt.show()","bc446894":"plt.figure(figsize=(7,5))\n\nsns.boxplot(y=df['Price'])\nplt.title('Price')\nplt.show()","902c9e78":"Year = df['Year'].value_counts()\n\nplt.figure(figsize=(11,6))\n\nplot = sns.barplot(x=Year.index, y=Year.values, color='#2a9d8f', alpha=.7)\n\n\nfor bar in plot.patches:\n    plot.annotate(\n        format(bar.get_height(), '.2f'),\n        (bar.get_x() + bar.get_width()\/2,\n        bar.get_height()),\n        ha='center', va='center', size=15 , xytext=(0,8),\n        textcoords='offset points'\n    )\n\nplt.title('count of Books that published in each year', fontsize=20)\n\nplt.xlabel('Years' , fontsize=15)\nplt.ylabel('count' , fontsize=15)\n\nplt.xticks(fontsize=15)\nplt.yticks(fontsize=15 )\nplt.show()","be766563":"Genre = df['Genre'].value_counts()\n\nplt.figure(figsize=(11,6))\n\nplt.pie(Genre, colors=['#2a9d8f','#264653'],autopct='%1.f%%',  startangle=90, shadow=True ,labels=Genre.index)\n\nplt.title('Genre of Books', fontsize=20 )\n\nplt.show()","60151b5e":"sns.relplot(x = 'User Rating', y = 'Reviews', data = df, kind = 'line', hue = 'Genre',\n            palette = {'Fiction': '#2a9d8f', 'Non Fiction': '#264653'}, linewidth = 3)\n\nplt.title('Relation between User Rating and Reviews with Genre as a hue')\nplt.tight_layout()","f6e3b0b8":"sns.relplot(x = 'User Rating', y = 'Price', data = df, kind = 'line', \n            color ='#2a9d8f' , linewidth = 3)\n\nplt.title('Relation between User Rating and Reviews')\nplt.tight_layout()","854c32bd":"y = np.arange(2009,2020)\nname ,rating ,review,typ,authore,price,year= [],[],[],[],[],[],[]\n\n\nfor i in y:\n    \n    df_y = df[df['Year']==i]\n    d = df_y[df_y['User Rating'] == df_y['User Rating'].max()].sort_values('Reviews',ascending=False).iloc[0]\n    \n    name.append(d['Name'])\n    rating.append(d['User Rating'])\n    review.append(d['Reviews'])\n    typ.append(d['Genre'])\n    authore.append(d['Author'])\n    price.append(d['Price'])\n    year.append(d['Year'])\n    \n\n    \npd.DataFrame(data=[name,authore ,rating ,review ,typ,price,year] , index=['name' ,'authore','rating' ,'review' ,'typ','price','year']).reset_index()","1ff73eb1":"y = np.arange(2009,2020)\nname ,rating ,review,typ,authore,price,year= [],[],[],[],[],[],[]\n\n\nfor i in y:\n    \n    df_y = df[df['Year']==i]\n    d = df_y[df_y['User Rating'] == df_y['User Rating'].min()].sort_values('Reviews',ascending=True).iloc[0]\n    \n    name.append(d['Name'])\n    rating.append(d['User Rating'])\n    review.append(d['Reviews'])\n    typ.append(d['Genre'])\n    authore.append(d['Author'])\n    price.append(d['Price'])\n    year.append(d['Year'])\n    \n\n    \npd.DataFrame(data=[name,authore ,rating ,review ,typ,price,year] , index=['name' ,'authore','rating' ,'review' ,'typ','price','year']).reset_index()","daac97f9":"sns.histplot(df['User Rating'],bins=15, color='#2a9d8f' )\nplt.title(\"User Rating distribution\", fontsize=20)\nplt.show()","eef1628b":"sns.histplot(df['Reviews'],bins=15, color='#2a9d8f' )\nplt.title(\"Reviews Distribution\", fontsize=20)\nplt.show()","e35bd3e0":"d = df['Reviews']\n\nd = d.mask((d - d.mean()).abs() > 2 * d.std())\n\nsns.histplot(d , color='#2a9d8f')\nprint(d.mean())","2bea4d21":"sns.histplot(df['Price']  , color='#2a9d8f')\nplt.title('Price Distribution', fontsize=20)\nprint('Mean is = ',d.mean())\nplt.show()","6dd7825f":"d = df['Price']\n\nd = d.mask((d - d.mean()).abs() > 2 * d.std())\n\nsns.histplot(d , color='#2a9d8f')\n\nprint('Mean is = ',d.mean())\nplt.show()","f6d73c1e":"sns.histplot(x=df['User Rating'], y=df['Price'],hue=df['Genre'], palette=['#264653','#2a9d8f'],)\nplt.title('Distribution of Price with User Rating and hue by Genre',  fontsize=20)\nplt.show()","949c74a9":"mean_year = df.groupby('Year').mean()\n\nmedian_year = df.groupby('Year').median()","27fd4073":"rating = pd.DataFrame( mean_year['User Rating'].values , median_year.index , columns=['mean'])\nrating['median'] = median_year['User Rating'].values","8887c8f2":"\nsns.relplot(data=rating ,kind='line', palette=['#264653','#2a9d8f'] , linewidth = 3)\n\n\nplt.title(\"Mean vs Median of Rating in each year\",fontsize=20)\n\nplt.ylabel('User Rating',fontsize=15)\nplt.xlabel('Year',fontsize=15)\nplt.xticks(fontsize=15)\nplt.yticks(fontsize=15)\nplt.legend(fontsize=15,loc =(1.01,.85))\nplt.show()","91f3f8e5":"price = pd.DataFrame( mean_year['Price'].values , mean_year.index , columns=['mean'])\nprice['median'] = median_year['Price'].values","cabaf28b":"sns.relplot(data=price ,kind='line', palette=['#264653','#2a9d8f'] , linewidth = 3)\n\nplt.title(\"Mean vs Median of Price in each year\",fontsize=20)\n\nplt.ylabel('Price',fontsize=15)\nplt.xlabel('Year',fontsize=15)\nplt.xticks(fontsize=15)\nplt.yticks(fontsize=15)\nplt.legend(fontsize=15, loc=(1.01,.85))\nplt.show()","ccfba416":"sns.scatterplot(x=df['User Rating'], y=df['Reviews'] ,color='#264653')","1efff40c":"sns.scatterplot(x=df['User Rating'], y=df['Price'],color='#264653')","04f555aa":"## Ths Best Book On each year from user rating and Reviews.","0810822b":"There are some outliers so we have to remove this first .","7ad68e4d":"***\n\n# Thanks :)\n**BY : Ahmed Fouad**","8d3841d9":"<div style=\"width:75%; margin:auto\">\n    <h3>Amazon Bestselling Books Analysis & Visualizations<\/h3>\n\n<img  src=\"http:\/\/s3-us-west-2.amazonaws.com\/lndr-landorcom-assets-prd\/app\/uploads\/2018\/05\/22233704\/Amazon-Books_Flickr-Shinya-Suzuki_2-e1527064849416-1160x809.jpg?w=760&fit=max\">\n<\/div>\n\n\n**Dataset on Amazon's Top 50 bestselling books from 2009 to 2019. Contains 550 books, data has been categorized into fiction and non-fiction using Goodreads.**\n\n____________\n<br>","3184a9fc":"There are some outliers so we have to remove this first .","550e3b91":"## Ths Worst book On each year from user rating and Reviews."}}