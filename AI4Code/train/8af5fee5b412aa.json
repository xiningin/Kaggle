{"cell_type":{"c0afaf53":"code","56e9d527":"code","99b6fc7e":"code","bc6f8780":"code","07a6f717":"code","a3be0f0e":"code","9776cacc":"code","d2e01434":"code","3f9a454c":"code","c1007d24":"code","41b5abb7":"code","fd155d09":"code","69e2df3a":"code","6af72b5c":"code","b996e50b":"code","284958a0":"code","e2a1f794":"code","dd18e99e":"code","9609d112":"code","e91dac28":"code","7ab12349":"code","e531b77b":"code","71a040d4":"code","df77daf1":"code","1ec810d3":"code","82b026df":"code","24f556e4":"code","4e9a6454":"code","7441b3f8":"code","c5820d24":"code","99caaa2e":"code","19ca1977":"code","3055d912":"code","a97f87ed":"code","bc378217":"code","6bb9bedf":"code","037b7c24":"code","ddbebfe4":"code","01dab462":"code","97e798f5":"code","224dbcb6":"code","e97323de":"code","2b763f67":"code","00d07150":"code","b39155f3":"code","682f2dd1":"code","47cd76be":"code","f6f630e2":"code","587a881f":"code","d4b2515f":"code","14996bec":"code","ffd43fbf":"code","b66606ca":"code","89da8432":"code","f13426c7":"code","00a17346":"markdown","6f4486ee":"markdown","cb9de027":"markdown","75fab845":"markdown","6b2213c8":"markdown","8983dc14":"markdown","fa177d64":"markdown","ffaf2cd2":"markdown","b877a0b1":"markdown","6945523b":"markdown","0c055b11":"markdown","5e5de291":"markdown","994dfb49":"markdown","10a64a39":"markdown","ddb00a21":"markdown","f0994dab":"markdown","7b106c3d":"markdown","8ee50ac1":"markdown","7618d810":"markdown","1254e7a5":"markdown"},"source":{"c0afaf53":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","56e9d527":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","99b6fc7e":"data=pd.read_csv(\"\/kaggle\/input\/us-accidents\/US_Accidents_May19.csv\")","bc6f8780":"data.head()","07a6f717":"print(data.columns)","a3be0f0e":"data.shape","9776cacc":"data.info()","d2e01434":"data.describe()","3f9a454c":"data.isnull().values.any()","c1007d24":"null=data.isnull().sum()\nnull","41b5abb7":"fig=plt.figure(figsize=(20,4))\nnull.plot(kind='bar',color='green')\nplt.title('List of columns and there Missing Values Count')","fd155d09":"percent_null_values=null\/len(data)*100\npercent_null_values","69e2df3a":"lis=percent_null_values\nfor i in range(len(lis)):\n    if lis[i]>60:\n        del data[lis.index[i]]","6af72b5c":"data.shape","b996e50b":"fig1=plt.figure(figsize=(20,4))\ndata.isnull().sum().plot(kind='bar',color='red')\nplt.title('List of Features after removing Missing Values above 60%')","284958a0":"print(data.iloc[:,0:10].info())\nprint(data.iloc[:,0:10].nunique())","e2a1f794":"#Source column\ndata.Source.value_counts(dropna=False)","dd18e99e":"sns.countplot(data['Source'])","9609d112":"#TMC(Traffic Message Channel)\ndata.TMC.value_counts(dropna=False)","e91dac28":"plt.figure(figsize=(10,4))\ndata.TMC.value_counts(dropna=False).plot(kind='bar',color='orange')","7ab12349":"#Severity \ndata.Severity.value_counts(dropna=False)","e531b77b":"plt.figure(figsize=(10,4))\nsns.countplot(data['Severity'])","71a040d4":"print(data.Start_Time.head())\nprint(data.End_Time.head())","df77daf1":"data['Start_Time']=pd.to_datetime(data['Start_Time'],errors='coerce')\ndata['Start_Time'].head()","1ec810d3":"data['End_Time']=pd.to_datetime(data['End_Time'],errors='coerce')\ndata['End_Time'].head()","82b026df":"data['SYear']=data['Start_Time'].dt.year\ndata['SMonth']=data['Start_Time'].dt.strftime('%b')\ndata['SDay']=data['Start_Time'].dt.day\ndata['SHour']=data['Start_Time'].dt.hour\ndata['SWeekday']=data['Start_Time'].dt.strftime('%a')","24f556e4":"data['EYear']=data['End_Time'].dt.year\ndata['EMonth']=data['End_Time'].dt.strftime('%b')\ndata['EDay']=data['End_Time'].dt.day\ndata['EHour']=data['End_Time'].dt.hour\ndata['EWeekday']=data['End_Time'].dt.strftime('%a')","4e9a6454":"td='Time_Duration(min)'\ndata[td]=round((data['End_Time']-data['Start_Time'])\/np.timedelta64(1,'m'))\ndata[td].head(20)","7441b3f8":"data.info()","c5820d24":"data[td][data[td]<=0]","99caaa2e":"neg_values=data[td]<=0\n\n#set negative values with NAN\ndata[neg_values]=np.nan","19ca1977":"data[neg_values]","3055d912":"data.dropna(subset=[td],axis=0,inplace=True)","a97f87ed":"data.shape","bc378217":"data['Time_Duration(min)'].nunique()","6bb9bedf":"plt.figure(figsize=(16,8))\nsns.boxplot(data['Time_Duration(min)'])","037b7c24":"data.Start_Lat.nunique()","ddbebfe4":"##Start_Lat\nplt.figure(figsize=(10,4))\nplt.hist(data['Start_Lat'])","01dab462":"##Start_Lng\nplt.figure(figsize=(10,4))\nplt.hist(data['Start_Lng'])","97e798f5":"#Distance in miles\ndata['Distance(mi)'].nunique()","224dbcb6":"plt.figure(figsize=(10,4))\nplt.hist(data['Distance(mi)'])","e97323de":"#Description\ndata['Description'].nunique()","2b763f67":"data.isnull().sum()","00d07150":"#Street\ndata['Street'].nunique()","b39155f3":"#Side\ndata['Side'].value_counts()","682f2dd1":"sns.countplot(data['Side'])","47cd76be":"#City\ndata.City.nunique()","f6f630e2":"#Country\ndata['Country'].value_counts()","587a881f":"print(data['State'].nunique())\nprint(data['State'].value_counts())","d4b2515f":"plt.figure(figsize=(16,8))\nsns.countplot(data['State'],palette='Set2')","14996bec":"data.isnull().sum()","ffd43fbf":"##Missing Values Imputation with Most frequently occuring values \ndef fillna(col):\n    col.fillna(col.value_counts().index[0],axis=0,inplace=True)\n    return col\ndata=data.apply(lambda col: fillna(col))","b66606ca":"data.isnull().sum()","89da8432":"data.head()","f13426c7":"plt.figure(figsize=(16,16))\nsns.heatmap(data.corr(),annot=True,cmap='magma')","00a17346":"From above Boxplot we see that there are many outliers..","6f4486ee":"**Data Visualization..**","cb9de027":"Importing important Libraries..\n","75fab845":"Convert Start_Time and End_Time to datetypes","6b2213c8":"**Importing dataset..**","8983dc14":"Extracting Year,Month,Day,Hour and Weekday from Start_time and End_time","fa177d64":"The State that was mostly in the Address Field is 'CA'. Therefore, the Number of accidents that took place in Califorina are high.","ffaf2cd2":"**Removing Features that are having above 60% of Null Values..**","b877a0b1":"From above data analysis we can conclude that the sources of accidents are mainly from MapQuest.. ","6945523b":"Above countplot says that relative side of the street in address field is mostly Right(R)..","0c055b11":"Checking for negative time duration values..","5e5de291":"Calculating time duration of accident in minutes and round them to nearest integer","994dfb49":"**Features of data****","10a64a39":"From above plot we observed that the severity of the accident is less that is delay of traffic is less","ddb00a21":"Dropping Rows of negative time duration values ","f0994dab":"Showing Correlation through Heat Map","7b106c3d":"**Shape of data..**","8ee50ac1":"Above histogram tells that the length of the road extent affected by the accident mostly lies between 0 to 50 miles..","7618d810":"From above count plot the description of event is more from channel 201 and also we can see that there are missing values NA..","1254e7a5":"**Checking Count of Missing Values of all features**"}}