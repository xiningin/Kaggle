{"cell_type":{"2255fd60":"code","84bc5ba8":"code","c3289298":"code","64d67601":"code","ad5c0d37":"code","679f97d9":"code","519ef8ac":"code","8b10350e":"code","4dd665a6":"code","7f16ac4a":"code","a37bb07d":"code","adb70bdc":"code","d4270759":"code","589b3bf2":"code","e71333f3":"code","66541147":"code","e38a7fd4":"code","d8e2bb4a":"code","0fba9227":"code","590a527b":"code","aea3d4a3":"code","c3e66e84":"code","3d0706dc":"markdown","6238d904":"markdown","e1567c89":"markdown","97a2d368":"markdown","6a3ad25e":"markdown"},"source":{"2255fd60":"# more than 80+ features\nimport pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","84bc5ba8":"pd.pandas.set_option('display.max_columns',None)","c3289298":"dataset =pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')","64d67601":"dataset.head()","ad5c0d37":"print(dataset.shape)","679f97d9":"featureswithna=[features for features in dataset.columns if dataset[features].isnull().sum()>1]\nfor feature in featureswithna:\n    print(feature,np.round(dataset[feature].isnull().mean(),4),'%missing values')","519ef8ac":"for feature in featureswithna:\n    data=dataset.copy()\n    data[feature]=np.where(data[feature].isnull(),1,0)\n    data.groupby(feature)['SalePrice'].median().plot.bar()\n    plt.title(feature)\n    plt.show()","8b10350e":"numericalfeatures=[feature for feature in dataset.columns if dataset[feature].dtypes!='O' ]\nprint(len(numericalfeatures))","4dd665a6":"dataset[numericalfeatures].head()","7f16ac4a":"year_feature = [feature for feature in numerical_features if 'Yr' in feature or 'Year' in feature]\n\nyear_feature","a37bb07d":"dataset.groupby('YrSold')['SalePrice'].median().plot()\nplt.xlabel('Year Sold')\nplt.ylabel('Median House Price')\nplt.title(\"House Price vs YearSold\")\n# plt.tight_layout()","adb70bdc":"for feature in year_feature:\n    if feature!='YrSold':\n        data=dataset.copy()\n        data[feature]=data['YrSold']-data[feature]\n        plt.scatter(data[feature],data['SalePrice'])\n        plt.xlabel(feature)\n        plt.ylabel('SalePrice')\n        plt.show()","d4270759":"discrete_feature=[feature for feature in numerical_features if len(dataset[feature].unique())<25 and feature not in year_feature+['Id']]\nprint(\"Discrete Variables Count: {}\".format(len(discrete_feature)))","589b3bf2":"for feature in discrete_feature:\n    data=dataset.copy()\n    data.groupby(feature)['SalePrice'].median().plot.bar()\n    plt.xlabel(feature)\n    plt.ylabel('SalePrice')\n    plt.title(feature)\n    plt.show()","e71333f3":"continuous_feature=[feature for feature in numerical_features if feature not in discrete_feature+year_feature+['Id']]\nprint(\"Continuous feature Count {}\".format(len(continuous_feature)))\n","66541147":"for feature in continuous_feature:\n    data=dataset.copy()\n    data[feature].hist(bins=25)\n    plt.xlabel(feature)\n    plt.ylabel(\"Count\")\n    plt.title(feature)\n    plt.show()","e38a7fd4":"# print(dataset[numerical_features].unique())\n# log normal distribution\nfor feature in continuous_feature:\n    data =dataset.copy()\n    \n    if 0 in data[feature].unique():\n        pass\n    else:\n        data[feature]=np.log(data[feature])\n        data['SalePrice']=np.log(data['SalePrice'])\n        plt.scatter(data[feature],data['SalePrice'])\n        plt.xlabel(feature)\n        plt.ylabel('SalesPrice')\n        plt.title(feature)\n        plt.show()","d8e2bb4a":"for feature in continuous_feature:\n    data=dataset.copy()\n    if 0 in data[feature].unique():\n        pass\n    else:\n        data[feature]=np.log(data[feature])\n        data.boxplot(column=feature)\n#         plt.xlabel(feature)\n        plt.ylabel(feature)\n        plt.title(feature)\n        plt.show()","0fba9227":" categorical_features=[feature for feature in dataset.columns if dataset[feature].dtype=='O']","590a527b":"dataset[categorical_features]","aea3d4a3":"for feature in categorical_features:\n    print('{} {}'.format(feature,len(dataset[feature].unique())))","c3e66e84":"for feature in categorical_features:\n    data=dataset.copy()\n    data.groupby(feature)['SalePrice'].median().plot.bar()\n    plt.xlabel(feature)\n    plt.ylabel('SalePrice')\n    plt.title(feature)\n    plt.show()","3d0706dc":"**Numerical Value**","6238d904":"here we see when nan value are there so thecange in salesprice so they are playing a good role.\n","e1567c89":"Missing values\nAll Numerical Values\nDistribution\nCategorical\n outliers\nRelationship bw independent and dependent feature","97a2d368":"# **Outliers**","6a3ad25e":"# categorical featurea"}}