{"cell_type":{"7a614924":"code","b9766551":"code","d16c3f21":"code","d3ec6842":"code","58e0f3f7":"code","d1203956":"code","aa0a764e":"code","cd9d4188":"code","7867609d":"code","f1a10515":"code","087ae2e6":"code","f592b1f7":"code","5a8e4fd7":"code","d002948a":"code","b316733f":"code","4642f74e":"code","039f8960":"code","bd62440b":"code","3b1d70f1":"code","7a0811c4":"code","d0a794aa":"code","04b39980":"code","f357f487":"code","f18c946e":"code","a1bf8181":"code","b0da7069":"code","cc6cccab":"code","67dc52c7":"code","a7cd0995":"code","ea3abf5a":"code","57b7567b":"code","5330fcf8":"code","2a747991":"code","e990941f":"code","2ded5f62":"code","111d8782":"code","c4a3a2a7":"code","b8f6ecd6":"code","9e739e6e":"code","f0be361a":"code","0fb5d7ad":"code","bf3d4182":"code","d001c0a2":"code","4fa5010e":"code","514c7814":"code","5bfc7340":"code","61b83bd2":"code","23499b57":"code","6f3bfe34":"code","ee38f49c":"code","3a82ce8d":"code","e44469d9":"code","354627a0":"code","dadb9c52":"code","27034103":"code","ba366927":"code","5a1d13a8":"code","95871a9c":"code","a2199978":"code","2c734e94":"code","3d93f59f":"code","9fcf40fb":"code","1d01d51c":"markdown","76d68189":"markdown","95ac587f":"markdown","d66a50af":"markdown","d4238af9":"markdown","51e28f28":"markdown","dc670aef":"markdown","193b37ad":"markdown","12d7c91d":"markdown","e71383bc":"markdown","79e11f8b":"markdown","a65f62fb":"markdown","5b9c89b6":"markdown","19a4e63a":"markdown","3fa17e47":"markdown","79857582":"markdown","b41c7bf6":"markdown","1fec44ac":"markdown","80b90323":"markdown","2ec25f3b":"markdown","c0cbaf79":"markdown","c6075860":"markdown","51eea932":"markdown","ec6eb7e1":"markdown"},"source":{"7a614924":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport matplotlib \nmatplotlib.rcParams[\"figure.figsize\"] = (20,10)","b9766551":"df1 = pd.read_csv(\"..\/input\/bengaluru-house-price-data\/Bengaluru_House_Data.csv\")\ndf1.head()","d16c3f21":"df1.shape","d3ec6842":"df1.columns","58e0f3f7":"df1['area_type'].unique()","d1203956":"df1['area_type'].value_counts()","aa0a764e":"df2 = df1.drop(['area_type','society','balcony','availability'],axis='columns')\ndf2.shape","cd9d4188":"df2.isnull().sum()","7867609d":"df2.shape","f1a10515":"df3 = df2.dropna()\ndf3.isnull().sum()","087ae2e6":"df3.shape","f592b1f7":"df3['bhk'] = df3['size'].apply(lambda x: int(x.split(' ')[0]))\ndf3.bhk.unique()","5a8e4fd7":"def is_float(x):\n    try:\n        float(x)\n    except:\n        return False\n    return True","d002948a":"df3[~df3['total_sqft'].apply(is_float)].head(10)","b316733f":"def convert_sqft_to_num(x):\n    tokens = x.split('-')\n    if len(tokens) == 2:\n        return (float(tokens[0])+float(tokens[1]))\/2\n    try:\n        return float(x)\n    except:\n        return None   ","4642f74e":"df4 = df3.copy()\ndf4.total_sqft = df4.total_sqft.apply(convert_sqft_to_num)\ndf4 = df4[df4.total_sqft.notnull()]\ndf4.head(2)","039f8960":"df4.loc[30]","bd62440b":"(2100+2850)\/2","3b1d70f1":"df5 = df4.copy()\ndf5['price_per_sqft'] = df5['price']*100000\/df5['total_sqft']\ndf5.head()","7a0811c4":"df5_stats = df5['price_per_sqft'].describe()\ndf5_stats","d0a794aa":"df5.location = df5.location.apply(lambda x: x.strip())\nlocation_stats = df5['location'].value_counts(ascending=False)\nlocation_stats","04b39980":"location_stats.values.sum()","f357f487":"len(location_stats[location_stats>10])","f18c946e":"len(location_stats)","a1bf8181":"len(location_stats[location_stats<=10])","b0da7069":"location_stats_less_than_10 = location_stats[location_stats<=10]\nlocation_stats_less_than_10","cc6cccab":"len(df5.location.unique())","67dc52c7":"df5.location = df5.location.apply(lambda x: 'other' if x in location_stats_less_than_10 else x)\nlen(df5.location.unique())","a7cd0995":"df5.head(10)","ea3abf5a":"df5[df5.total_sqft\/df5.bhk<300].head()","57b7567b":"df5.shape","5330fcf8":"df6 = df5[~(df5.total_sqft\/df5.bhk<300)]\ndf6.shape","2a747991":"df6.price_per_sqft.describe()","e990941f":"def remove_pps_outliers(df):\n    df_out = pd.DataFrame()\n    for key, subdf in df.groupby('location'):\n        m = np.mean(subdf.price_per_sqft)\n        st = np.std(subdf.price_per_sqft)\n        reduced_df = subdf[(subdf.price_per_sqft>(m-st)) & (subdf.price_per_sqft<=(m+st))]\n        df_out = pd.concat([df_out,reduced_df],ignore_index=True)\n    return df_out\ndf7 = remove_pps_outliers(df6)\ndf7.shape","2ded5f62":"def plot_scatter_chart(df,location):\n    bhk2 = df[(df.location==location) & (df.bhk==2)]\n    bhk3 = df[(df.location==location) & (df.bhk==3)]\n    matplotlib.rcParams['figure.figsize'] = (15,10)\n    plt.scatter(bhk2.total_sqft,bhk2.price,color='lightcoral',label='2 BHK', s=50)\n    plt.scatter(bhk3.total_sqft,bhk3.price,marker='+', color='darkslategray',label='3 BHK', s=50)\n    plt.xlabel(\"Total Square Feet Area\")\n    plt.ylabel(\"Price (Lakh Indian Rupees)\")\n    plt.title(location)\n    plt.legend()\n    \nplot_scatter_chart(df7,\"Rajaji Nagar\")","111d8782":"def remove_bhk_outliers(df):\n    exclude_indices = np.array([])\n    for location, location_df in df.groupby('location'):\n        bhk_stats = {}\n        for bhk, bhk_df in location_df.groupby('bhk'):\n            bhk_stats[bhk] = {\n                'mean': np.mean(bhk_df.price_per_sqft),\n                'std': np.std(bhk_df.price_per_sqft),\n                'count': bhk_df.shape[0]\n            }\n        for bhk, bhk_df in location_df.groupby('bhk'):\n            stats = bhk_stats.get(bhk-1)\n            if stats and stats['count']>5:\n                exclude_indices = np.append(exclude_indices, bhk_df[bhk_df.price_per_sqft<(stats['mean'])].index.values)\n    return df.drop(exclude_indices,axis='index')\ndf8 = remove_bhk_outliers(df7)\n# df8 = df7.copy()\ndf8.shape","c4a3a2a7":"plot_scatter_chart(df8,\"Rajaji Nagar\")","b8f6ecd6":"import matplotlib\nmatplotlib.rcParams[\"figure.figsize\"] = (20,10)\nplt.hist(df8.price_per_sqft,rwidth=0.8, color = \"brown\")\nplt.xlabel(\"Price Per Square Feet\")\nplt.ylabel(\"Count\")","9e739e6e":"df8.bath.unique()","f0be361a":"plt.hist(df8.bath,rwidth=0.8, color = \"burlywood\")\nplt.xlabel(\"Number of bathrooms\")\nplt.ylabel(\"Count\")","0fb5d7ad":"df8[df8.bath>10]","bf3d4182":"df8[df8.bath>df8.bhk+2]","d001c0a2":"df9 = df8[df8.bath<df8.bhk+2]\ndf9.shape","4fa5010e":"df9.head(2)","514c7814":"df10 = df9.drop(['size','price_per_sqft'],axis='columns')\ndf10.head(3)","5bfc7340":"dummies = pd.get_dummies(df10.location)\ndummies.head(3)","61b83bd2":"df11 = pd.concat([df10,dummies.drop('other',axis='columns')],axis='columns')\ndf11.head()","23499b57":"df12 = df11.drop('location',axis='columns')\ndf12.head(2)","6f3bfe34":"df12.shape","ee38f49c":"X = df12.drop(['price'],axis='columns')\nX.head(3)","3a82ce8d":"X.shape","e44469d9":"y = df12.price\ny.head(3)","354627a0":"len(y)","dadb9c52":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=10)","27034103":"from sklearn.linear_model import LinearRegression\nlr_clf = LinearRegression()\nlr_clf.fit(X_train,y_train)\nlr_clf.score(X_test,y_test)","ba366927":"from sklearn.model_selection import ShuffleSplit\nfrom sklearn.model_selection import cross_val_score\n\ncv = ShuffleSplit(n_splits=5, test_size=0.2, random_state=0)\n\ncross_val_score(LinearRegression(), X, y, cv=cv)","5a1d13a8":"from sklearn.model_selection import GridSearchCV\n\nfrom sklearn.linear_model import Lasso\nfrom sklearn.tree import DecisionTreeRegressor\n\ndef find_best_model_using_gridsearchcv(X,y):\n    algos = {\n        'linear_regression' : {\n            'model': LinearRegression(),\n            'params': {\n                'normalize': [True, False]\n            }\n        },\n        'lasso': {\n            'model': Lasso(),\n            'params': {\n                'alpha': [1,2],\n                'selection': ['random', 'cyclic']\n            }\n        },\n        'decision_tree': {\n            'model': DecisionTreeRegressor(),\n            'params': {\n                'criterion' : ['mse','friedman_mse'],\n                'splitter': ['best','random']\n            }\n        }\n    }\n    scores = []\n    cv = ShuffleSplit(n_splits=5, test_size=0.2, random_state=0)\n    for algo_name, config in algos.items():\n        gs =  GridSearchCV(config['model'], config['params'], cv=cv, return_train_score=False)\n        gs.fit(X,y)\n        scores.append({\n            'model': algo_name,\n            'best_score': gs.best_score_,\n            'best_params': gs.best_params_\n        })\n\n    return pd.DataFrame(scores,columns=['model','best_score','best_params'])\n\nfind_best_model_using_gridsearchcv(X,y)","95871a9c":"def predict_price(location,sqft,bath,bhk):    \n    loc_index = np.where(X.columns==location)[0][0]\n\n    x = np.zeros(len(X.columns))\n    x[0] = sqft\n    x[1] = bath\n    x[2] = bhk\n    if loc_index >= 0:\n        x[loc_index] = 1\n\n    return lr_clf.predict([x])[0]","a2199978":"predict_price('1st Phase JP Nagar',1000, 1, 2)","2c734e94":"predict_price('1st Phase JP Nagar',1450, 4, 4)","3d93f59f":"predict_price('Indira Nagar',1000, 2, 2)","9fcf40fb":"predict_price('Indira Nagar',1500, 5, 5)","1d01d51c":"#### Feature Engineering\n##### Add new feature called price per square feet","76d68189":"It is unusual to have 2 more bathrooms than number of bedrooms in a home","95ac587f":"#### Build a Model Now.......","d66a50af":"##### Drop features that are not required to build our model","d4238af9":"#### Outlier Removal Using Bathrooms Feature","51e28f28":"#### Find best model using GridSearchCV","dc670aef":"##### Explore total_sqft feature","193b37ad":"#### Dimensionality Reduction\nAny location having less than 10 data points should be tagged as \"other\" location. This way number of categories can be reduced by huge amount. Later on when we do one hot encoding, it will help us with having fewer dummy columns","12d7c91d":"#### Outlier Removal Using Standard Deviation and Mean","e71383bc":"Let's check if for a given location how does the 2 BHK and 3 BHK property prices look like","79e11f8b":"#### Use One Hot Encoding For Location","a65f62fb":"#### Outlier Removal Using Business Logic","5b9c89b6":"For below row, it shows total_sqft as 2475 which is an average of the range 2100-2850","19a4e63a":"#### Use K Fold cross validation to measure accuracy of our LinearRegression model","3fa17e47":"Examine locations which is a categorical variable. We need to apply dimensionality reduction technique here to reduce number of locations","79857582":"Based on above charts the data points highlighted in red below are outliers and they are being removed due to remove_bhk_outliers function","b41c7bf6":"#### Data Load: Load banglore home prices into a dataframe","1fec44ac":"Plot same scatter chart again to visualize price_per_sqft for 2 BHK and 3 BHK properties","80b90323":"#### Data Cleaning: Handle NA values","2ec25f3b":"Above shows that total_sqft can be a range (e.g. 2100-2850). For such case we can just take average of min and max value in the range. There are other cases such as 34.46Sq. Meter which one can convert to square ft using unit conversion. I am going to just drop such corner cases to keep things simple","c0cbaf79":"#### Test the model for few properties","c6075860":"### Data Science Regression Project: Predicting Home Prices in Banglore","51eea932":"#### Feature Engineering\n#### Add new feature(integer) for bhk (Bedrooms Hall Kitchen)","ec6eb7e1":"Remove those 2 BHK apartments whose price_per_sqft is less than mean price_per_sqft of 1 BHK apartment"}}