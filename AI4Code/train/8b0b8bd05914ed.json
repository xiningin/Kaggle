{"cell_type":{"79830e3e":"code","03d2f589":"code","722e4083":"code","f5e0a086":"code","10fd51b6":"code","639e61ac":"code","8ed07bfe":"code","02657cfd":"code","2a111a0e":"code","da2f8cb3":"code","2820f6c3":"code","33c6478f":"code","acecd267":"code","4338af12":"code","aa9892d3":"code","2be5b838":"code","94e3cceb":"code","be995417":"code","27dc1250":"code","e742e056":"code","58593627":"code","ce924a41":"code","92c13f66":"code","7b270a80":"code","acdf69a3":"code","096d9b8a":"code","ca8c5498":"code","ca214c93":"code","6172081d":"code","60af2c56":"code","c196e2f0":"code","db7777bf":"code","0d986e92":"code","299e7c7e":"code","7c71ab3c":"code","cb8fdb0b":"code","b40b457a":"code","a223d5ed":"code","56432e3c":"code","11535ecb":"code","446fe834":"code","69daed77":"code","7ebe8cd0":"code","66398d49":"code","1bf513b9":"code","5c832a2d":"code","b4747000":"code","9de6358b":"code","3311d6bd":"code","3baba220":"code","3af384bd":"markdown","fc7d6590":"markdown","0ffba1cd":"markdown","aeb98278":"markdown","ad2a5f61":"markdown","7c365451":"markdown"},"source":{"79830e3e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nimport os","03d2f589":"df = pd.read_csv('..\/input\/data-engineer-jobs\/DataEngineer.csv')\ndf.head()","722e4083":"df.shape","f5e0a086":"df.columns","10fd51b6":"df['Job Title'].value_counts()","639e61ac":"# show top 25 only\ntemp = df['Job Title'].value_counts()\nsns.barplot(x=temp.index[0:25], y=temp[0:25])\nplt.title('Top 25 - Job Title')\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()","8ed07bfe":"df['Salary Estimate'].value_counts()","02657cfd":"# show top 25 only\ntemp = df['Salary Estimate'].value_counts()\nsns.barplot(x=temp.index[0:25], y=temp[0:25])\nplt.title('Top 25 - Salary Estimate')\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()","2a111a0e":"def aux1(i_string):\n    return pd.to_numeric((i_string.split('K')[0]).split('$')[1])\n\ndef aux2(i_string):\n    return pd.to_numeric((i_string.split('K')[1]).split('$')[1])","da2f8cb3":"df['Salary_LoB'] = list(map(aux1, df['Salary Estimate']))\ndf['Salary_UpB'] = list(map(aux2, df['Salary Estimate']))","2820f6c3":"df['Salary_Mid'] = (df['Salary_LoB'] + df['Salary_UpB'])\/2 ","33c6478f":"df.Salary_LoB.hist(bins=25)\nplt.title('Salary Lower Bound (in 1000 USD)')\nplt.show()","acecd267":"df.Salary_LoB.describe()","4338af12":"df.Salary_UpB.hist(bins=25)\nplt.title('Salary Upper Bound (in 1000 USD)')\nplt.show()","aa9892d3":"df.Salary_UpB.describe()","2be5b838":"df.Salary_Mid.hist(bins=25)\nplt.title('Salary Mid Point of range (in 1000 USD)')\nplt.show()","94e3cceb":"df.Salary_Mid.describe()","be995417":"df.Rating.plot(kind='hist')\nplt.title('Rating')\nplt.grid()\nplt.show()","27dc1250":"df['Company Name'].value_counts()","e742e056":"# utility function for text cleaning\ndef chop_name(i_string):\n    return i_string.split('\\n')[0]","58593627":"# show top 25 only\ntemp = df['Company Name'].value_counts()\nsns.barplot(x=list(map(chop_name,temp.index[0:25])), y=temp[0:25])\nplt.title('Top 25 - Company Name')\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()","ce924a41":"# add clean company name as addition column\ndf['Company'] = list(map(chop_name,df['Company Name']))","92c13f66":"df['Headquarters'].value_counts()","7b270a80":"# show top 25 only\ntemp = df['Headquarters'].value_counts()\nsns.barplot(x=temp.index[0:25], y=temp[0:25])\nplt.title('Top 25 - Headquarters')\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()","acdf69a3":"# Size\ndf['Size'] = df['Size'].replace(\"-1\",\"Unknown\") # merge \"-1\" into \"Unknown\"\ndf['Size'].value_counts().plot(kind='bar')\nplt.grid()\nplt.show()","096d9b8a":"df.Founded.plot(kind='hist')\nplt.title('Founded')\nplt.grid()\nplt.show()","ca8c5498":"# show Founded w\/o missings (-1)\ntemp = df.Founded[df.Founded>-1]\nplt.hist(temp,50)\nplt.title('Founded, excluding missing values')\nplt.grid()\nplt.show()","ca214c93":"# Founded summary\ntemp.describe()","6172081d":"# Type of ownership\ndf['Type of ownership'] = df['Type of ownership'].replace(\"-1\",\"Unknown\") # merge \"-1\" into \"Unknown\"\ndf['Type of ownership'].value_counts().plot(kind='bar')\nplt.grid()\nplt.show()","60af2c56":"df['Industry'].value_counts()","c196e2f0":"# show top 25 only\ntemp = df['Industry'].value_counts()\nsns.barplot(x=temp.index[0:25], y=temp[0:25])\nplt.title('Top 25 - Industry')\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()","db7777bf":"df['Sector'].value_counts().plot(kind='bar')\nplt.title('Sector')\nplt.grid()\nplt.show()","0d986e92":"# Revenue\ndf['Revenue'] = df['Revenue'].replace(\"-1\",\"Unknown \/ Non-Applicable\") # merge \"-1\" into \"Unknown...\"\ndf['Revenue'].value_counts().plot(kind='bar')\nplt.title('Revenue')\nplt.grid()\nplt.show()","299e7c7e":"df['Easy Apply'].value_counts().plot(kind='bar')\nplt.title('Easy Apply')\nplt.grid()\nplt.show()","7c71ab3c":"# means by company\ndf_means = df.groupby('Company').mean()\ndf_means.head()","cb8fdb0b":"sel_company = 'Amazon'\ndf_means[df_means.index==sel_company]","b40b457a":"df_temp = df[df.Company==sel_company]\ndf_temp.Salary_Mid.hist()\nplt.title(sel_company)\nplt.show()","a223d5ed":"sel_company = 'Apple'\ndf_means[df_means.index==sel_company]","56432e3c":"df_temp = df[df.Company==sel_company]\ndf_temp.Salary_Mid.hist()\nplt.title(sel_company)\nplt.show()","11535ecb":"sel_company = 'Lockheed Martin'\ndf_means[df_means.index==sel_company]","446fe834":"df_temp = df[df.Company==sel_company]\ndf_temp.Salary_Mid.hist()\nplt.title(sel_company)\nplt.show()","69daed77":"sel_company = 'Google'\ndf_means[df_means.index==sel_company]","7ebe8cd0":"df_temp = df[df.Company==sel_company]\ndf_temp.Salary_Mid.hist()\nplt.title(sel_company)\nplt.show()","66398d49":"stopwords = set(STOPWORDS)\ntext = \" \".join(txt for txt in df['Job Description'])","1bf513b9":"wordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","5c832a2d":"sel_company = 'Apple'\ndf_temp = df[df.Company==sel_company]\ntext = \" \".join(txt for txt in df_temp['Job Description'])\n\nwordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","b4747000":"sel_company = 'Amazon'\ndf_temp = df[df.Company==sel_company]\ntext = \" \".join(txt for txt in df_temp['Job Description'])\n\nwordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","9de6358b":"sel_company = 'Google'\ndf_temp = df[df.Company==sel_company]\ntext = \" \".join(txt for txt in df_temp['Job Description'])\n\nwordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","3311d6bd":"sel_sector = 'Finance'\ndf_temp = df[df.Sector==sel_sector]\ntext = \" \".join(txt for txt in df_temp['Job Description'])\n\nwordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","3baba220":"sel_sector = 'Manufacturing'\ndf_temp = df[df.Sector==sel_sector]\ntext = \" \".join(txt for txt in df_temp['Job Description'])\n\nwordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","3af384bd":"# Job Descriptions","fc7d6590":"> #### A few examples:","0ffba1cd":"### Company specific wordclouds","aeb98278":"### Sector specific wordclouds","ad2a5f61":"### The previous evaluation is actually not very helpful. We extract the lower and upper bounds as numeric values in the following.","7c365451":"### If you are interested look also at my notebook for Data Scientist Jobs:\nhttps:\/\/www.kaggle.com\/docxian\/data-scientist-jobs"}}