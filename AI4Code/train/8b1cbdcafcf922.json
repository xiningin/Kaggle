{"cell_type":{"5e9c4ec4":"code","53d55641":"code","78e5ca34":"code","d3564502":"code","718ab220":"code","24f98492":"code","2df41a4d":"code","dec4a366":"code","6c0b56d6":"code","e7261ea9":"code","e3afd1ff":"code","a21d29b4":"code","07407432":"code","336d2a16":"code","cacab3b2":"code","161a5547":"code","c2c4377c":"code","f6d4abd5":"code","f4736b0b":"code","6c4d6251":"code","235cff8a":"code","6d7325b8":"code","ef64e9f2":"code","4fe3bcd9":"code","ffa4325c":"code","4a95276e":"code","53527144":"code","b427a771":"code","8a580c9c":"code","fb0bb42e":"code","a91b466c":"code","ac9b540c":"code","dd6bcf27":"code","c8e31070":"code","7dafe877":"code","166092eb":"code","03e367ac":"code","7f421d34":"code","a12816cd":"code","bd6e2e81":"code","c7f1625b":"code","26ed88f5":"code","3d3f5205":"code","ed185938":"code","4b8df237":"code","e7a01f88":"code","74f18f03":"code","730d9e0f":"code","1b6d60e6":"code","8226faf1":"markdown","f85584fe":"markdown","db18f6f8":"markdown","fd81279a":"markdown","ad1f46e6":"markdown","c664468f":"markdown","e9e25f33":"markdown","1ae8b47a":"markdown","7cbab1ef":"markdown","cafed285":"markdown","18f7e229":"markdown","32c6b3a7":"markdown","4a7752b8":"markdown","91234e2c":"markdown","3e1a2d6a":"markdown","18301580":"markdown","61c74a64":"markdown","aca367e9":"markdown","8cfb3112":"markdown","c368213b":"markdown","c0439558":"markdown","5914ffff":"markdown","7ec874a4":"markdown","db444c69":"markdown","9e12131a":"markdown","7c457363":"markdown","08b5d9d6":"markdown","ffaa0737":"markdown"},"source":{"5e9c4ec4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","53d55641":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set(rc={'figure.figsize':(16,8)})","78e5ca34":"leads = pd.read_csv('\/kaggle\/input\/telecaller-operations-dataset\/leads.csv', encoding='latin1')\nleads","d3564502":"leads['userId'].nunique()","718ab220":"leads1 = leads.drop(['id', 'userId', 'name', 'phoneNumber'], axis=1)\nleads1","24f98492":"leads1.dtypes","2df41a4d":"leads1['createdAt'] = pd.to_datetime(leads1['createdAt'])\nleads1['receivedAt'] = pd.to_datetime(leads1['receivedAt'])\nleads1.isExternal = leads1.isExternal.astype(int)\nleads1.dtypes","dec4a366":"# leads1['city'].isnull().sum() ## 738 ## 7.44%\n# leads1['city'].nunique() ## 61\nleads1['city'].value_counts().head(10)","6c0b56d6":"# leads1['state'].isnull().sum() ## 1380 ## 13.91%\n# leads1['state'].nunique() ## 20\nleads1['state'].value_counts().head(10)","e7261ea9":"# leads1['source'].isnull().sum() ## 2\n# leads1['source'].nunique() ##108\nleads1['source'].value_counts().head(20)","e3afd1ff":"# leads1['isExternal'].isnull().sum() ## 0\n# leads1['isExternal'].nunique() ##2\nleads1['isExternal'].value_counts(normalize=True)*100","a21d29b4":"leads2 = leads1[['city', 'isExternal', 'source']].groupby(['city','isExternal']).count()\nleads2 = leads2.reset_index()\nleads2 = leads2.pivot(index='city', columns='isExternal', values='source')\ndel leads2.columns.name\nleads2 = leads2.reset_index()\nleads2.columns=['city', 'LeadsByJobAssist', 'LeadsByExternal']","07407432":"leads20 = leads2.sort_values(by='LeadsByJobAssist', ascending=False)\nleads20.reset_index(inplace=True)\n# leads20.to_csv('leads20.csv', index=False)\nleads20.head(10)","336d2a16":"leads21 = leads2.sort_values(by='LeadsByExternal', ascending=False)\nleads21.reset_index(inplace=True)\n# leads21.to_csv('leads21.csv', index=False)\nleads21.head(10)","cacab3b2":"leads3 = leads1[['state', 'isExternal', 'source']].groupby(['state','isExternal']).count()\nleads3 = leads3.reset_index()\nleads3 = leads3.pivot(index='state', columns='isExternal', values='source')\ndel leads3.columns.name\nleads3 = leads3.reset_index()\nleads3.columns=['state', 'LeadsByJobAssist', 'LeadsByExternal']","161a5547":"leads30 = leads3.sort_values(by='LeadsByJobAssist', ascending=False)\n# leads30.to_csv('leads30.csv', index=False)\nleads30.head(10)","c2c4377c":"leads31 = leads3.sort_values(by='LeadsByExternal', ascending=False)\n# leads31.to_csv('leads31.csv', index=False)\nleads31.head(10)","f6d4abd5":"leads1['duration'] = pd.to_timedelta(leads1['createdAt'] - leads1['receivedAt'])\nleads1['duration'] = leads1['duration'].dt.days\nprint(leads1['duration'].max())\nprint(leads1['duration'].min())\nprint(leads1['duration'].mean())\nleads1","f4736b0b":"leads1.drop(['duration'], axis=1, inplace=True)\nleads11 = leads1.copy()","6c4d6251":"leads11['createdAt_day'] = leads11['createdAt'].dt.day\nleads11['createdAt_day'].value_counts()","235cff8a":"leads11['createdAt_hour'] = leads11['createdAt'].dt.hour\nleads11['createdAt_hour'].value_counts()","6d7325b8":"leads11['receivedAt_date'] = leads11['receivedAt'].dt.date\nleads11['receivedAt_date'].value_counts().head(10)","ef64e9f2":"leads11['receivedAt_date'].min()","4fe3bcd9":"leads11['receivedAt_date'].max()","ffa4325c":"leads11['receivedAt_dt_doy'] = pd.to_datetime(leads11['receivedAt'])\nleads11['receivedAt_dt_doy'] = leads11['receivedAt_dt_doy'].dt.dayofyear\n# leads11['receivedAt_dt_doy'].min() ## 43\n# leads11['receivedAt_dt_doy'].max() ## 333","4a95276e":"leads110 = leads11[leads11['isExternal']==0]\nleads111 = leads11[leads11['isExternal']==1]","53527144":"df_time110 = leads110[['receivedAt_dt_doy', 'isExternal']].groupby('receivedAt_dt_doy').count()\ndf_time110.reset_index(inplace=True)","b427a771":"df_time111 = leads111[['receivedAt_dt_doy', 'isExternal']].groupby('receivedAt_dt_doy').count()\ndf_time111.reset_index(inplace=True)","8a580c9c":"df_time11 = leads11[['receivedAt_dt_doy', 'isExternal']].groupby('receivedAt_dt_doy').count()\ndf_time11.reset_index(inplace=True)","fb0bb42e":"df_time110_1 = df_time110[df_time110['isExternal']<151]\nsns.lmplot(y='isExternal', x='receivedAt_dt_doy', data=df_time110_1)","a91b466c":"df_time111_1 = df_time111[df_time111['isExternal']<75]\nsns.lmplot(y='isExternal', x='receivedAt_dt_doy', data=df_time111_1)","ac9b540c":"df_time11_1 = df_time11[df_time11['isExternal']<201]\nsns.lmplot(y='isExternal', x='receivedAt_dt_doy', data=df_time11_1)","dd6bcf27":"telecallers = pd.read_csv('\/kaggle\/input\/telecaller-operations-dataset\/telecallers.csv', encoding='latin1')\ntelecallers","c8e31070":"telecallers = telecallers.drop(['phoneNumber', 'createdAt'], axis=1)\ntelecallers.columns = ['telecallerId', 'telecallerName']\ntelecallers","7dafe877":"lead_calls = pd.read_csv('\/kaggle\/input\/telecaller-operations-dataset\/lead_calls.csv', encoding='latin1')\nlead_calls","166092eb":"lead_calls['id'].nunique()","03e367ac":"lead_calls = pd.merge(telecallers, lead_calls, on='telecallerId', how='inner')\nlead_calls = lead_calls.drop(['id', 'telecallerId'], axis=1)\nlead_calls","7f421d34":"lead_calls['telecallerName'].value_counts()","a12816cd":"lead_calls['createdAt'] = pd.to_datetime(lead_calls['createdAt'])\nlead_calls['calledAt'] = pd.to_datetime(lead_calls['calledAt'])","bd6e2e81":"lead_calls['createdAt_dt_date'] = lead_calls['createdAt'].dt.date\nlead_calls['createdAt_dt_date'].value_counts()","c7f1625b":"lead_calls['createdAt_dt_hour'] = lead_calls['createdAt'].dt.hour\nlead_calls['createdAt_dt_hour'].value_counts()","26ed88f5":"lead_calls.drop(['createdAt_dt_date', 'createdAt_dt_hour', 'createdAt'], axis=1, inplace=True)","3d3f5205":"lead_calls['calledAt_dt_date'] = lead_calls['calledAt'].dt.date\nlead_calls['calledAt_dt_date'].value_counts().head(10)","ed185938":"lead_calls.drop(['calledAt'], axis=1, inplace=True)","4b8df237":"lead_calls['calledAt_dt_date'].min()","e7a01f88":"import datetime\nlead_calls[lead_calls['calledAt_dt_date']>datetime.date(2016, 8, 26)]['calledAt_dt_date'].min()","74f18f03":"lead_calls['calledAt_dt_date'].max()","730d9e0f":"# lead_calls['leadId'].value_counts().value_counts()\nlead_calls['leadId'].value_counts().value_counts(normalize=True)*100","1b6d60e6":"lead_calls","8226faf1":"### Insights 9 Number of leads via job assist is increasing over time\n\n * Assuming maximum number of leads via <b>job assist<\/b> in a day is 150","f85584fe":"## Table 1: Leads","db18f6f8":"### Insights\n * <b>Referrals, API, WhatsApp OptIn Form, Facebook<\/b> are the main sources of leads","fd81279a":"### Insights\n * We have to take <b>city<\/b> name as well while creating data because around <b>7.5 % <\/b> data doesn't have city mensioned\n * Overall We are doing good in <b>Hyderabad, Bangalore, Chennai, Delhi\/NCR, Mumbai, Delhi, Mysore<\/b>\n * But We also need to improve in other cities as well","ad1f46e6":"### Insights 4 Statewise Performance\n\n * We are doing good in <b>Telangana, Karnataka, Tamilnadu, Delhi, Maharashtra<\/b>","c664468f":"### Insights 12 \n1. We have 5 Telecallers in our Company, Those are <b>Amila, Sheeba, Islam, Rakshith, and Manasa<\/b>\n2. All the entries are created in Telecallers Table at the same time i.e, 2019-12-25 at 5:50 AM","e9e25f33":"### Insights\n * We have to take <b>state<\/b> name as well while creating data because around <b>14 %<\/b> data doesn't have state mensioned\n * Overall We are doing good in <b>Telangana, Karnataka, Tamilnadu, Delhi, Maharashta<\/b>\n * But We also need to improve in other states as well","1ae8b47a":"### Feature Selection or Handling\n\n1. Since lead_calls <b>id<\/b> is uniquely identify each row, So we can drop this feature \n2.  <b>telecallerId<\/b> of Lead_calls table is being replaced by <b>telecallerName<\/b> of Telecallers Table, Because we have only few telecallers which can be identified by their name also","7cbab1ef":"### Insights 3 Citywise Improvements\n\n * We need to improve in <b>Bangalore and Mysore<\/b>","cafed285":"### Insights 6 Duration between when lead was received by us and the time of creation of the table enry\n\n * Maximun <b>317 days<\/b>\n * Minimum <b>27 days<\/b>\n * Average <b>162 days<\/b>\n * We need to <b>minimise this duration<\/b>, i.e, we must get the entries in table as early we receive the leads as possible","18f7e229":"### Feature Selection or Handling\n\n1. Since leads id is uniquely identify each row, So we can drop this feature \n2. Since userId is used to refer internal database entry, This can also be dropped.\n3. Similarly Name is not important.\n4. Since phone number is all same in this data, or all different in the original data, It can be dropped.","32c6b3a7":"* <b>We can delete phoneNumber and createdAt from Telecallers table as it is not required as of now<\/b>","4a7752b8":"## Table 3: Lead_Calls","91234e2c":"### Insights 11 Number of overall leads via external source as well as job assist is also increasing over time\n\n * Assuming maximum number of leads via <b>external source and job assist<\/b> in a day is 200","3e1a2d6a":"### Insights 10 Number of leads via external source is also increasing over time\n\n * Assuming maximum number of leads via <b>external source<\/b> in a day is 75","18301580":"### Insights 16 Number of leads called how many times\n* telecallers called only <b>once to 8316<\/b> different leads <b>83.86 % leads<\/b>\n* telecallers called only <b>twice to 969<\/b> different leads <b>9.77 % leads<\/b>\n* telecallers called only <b>thrice to 534<\/b> different leads <b>5.38 % leads<\/b>\n* telecallers called only <b>4 times to 58<\/b> different leads <b>0.58 % leads<\/b>","61c74a64":"## Table 2: Telecallers","aca367e9":"### Handle Datatype and Missing Values\n\n1. find how many missing values are there in city, state, source and isExternal\n2. convert createdAt and receivedAt feature to datetime datatype\n3. convert boolean isExternal into 0 and 1 integer datatype","8cfb3112":"### Insights 5 Statewise Improvements\n\n * We need to improve in <b>Karnataka<\/b>","c368213b":"### Insights 15 time of the call\n\n * Dates are between <b>9 July 2019 to 30 Aug 2020<\/b>\n * Majority of people received on <b>2020-05-01, 2020-04-01, 2020-06-01, 2019-10-10, 2019-08-06, 2019-07-30, 2019-08-13, 2019-08-20, 2019-07-22, 2019-07-19<\/b> respectively","c0439558":"### Insights 8 When the leads was received by us\n\n * Dates are between <b>12 feb 2019 to 29 Nov 2019<\/b>\n * Majority of people received on <b>2019-07-25, 2019-05-01, 2019-04-01, 2019-11-01, 2019-08-01, 2019-07-30, 2019-06-09, 2019-06-08, 2019-08-02, 2019-11-03<\/b> respectively","5914ffff":"### Insights 14 When did entries created in the table\n\n * on 26 Dec 2019 between 17:00 to 19:00","7ec874a4":"### Insights 1\n\n* We have <b>13.58 %<\/b> External leads. This needs to be minimised.\n* We can also have a look from which cities or states these leads coming from, So that We can improve in those cities","db444c69":"### Insights 7 When did entries created in the table\n\n * on 26 Dec 2019 between 17:00 to 19:00","9e12131a":"### Insights 2 Citywise Performance\n\n * We have are doing good in <b>Hyderabad, Bengalore, Chennai, Delhi\/NCR, Mumbai and Delhi<\/b>","7c457363":"### Importing necessary Libraries","08b5d9d6":"### Loading the dataset \n * leads.csv file","ffaa0737":"### Insights 13\n* Calls made by telecallers are <b>not equally distributed<\/b>\n* <b>Sheela has called maximum 8770 times<\/b>, After that <b>Amila 3206 times<\/b>, and <b>few calls were from Rakshith 359<\/b>\n* There is <b>no call made from Islam and Manasa<\/b>, So We can ask them as well to make calls to the leads "}}