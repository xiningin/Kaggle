{"cell_type":{"04bef4fa":"code","1ce0b32f":"code","4121c775":"code","3b46a04d":"code","9ec7349a":"code","4cadfc3b":"code","f50c344a":"code","43e50421":"code","fd8a217b":"code","d512c81f":"code","13c718ae":"code","a6fbea78":"code","5cbd5bf4":"code","2f4ca0c8":"code","a13220d6":"code","f8049110":"code","4ab5a350":"code","71810a46":"code","37226228":"code","c71540c1":"code","c9ffc6b1":"code","3c5d8dbb":"code","d9280f42":"code","43f7c18f":"code","7b1e9ff7":"code","c08a8e4e":"code","e44c4bc9":"code","b7e8a4e8":"code","439e19f6":"code","87a5b7ba":"code","103b2818":"code","d28b4b93":"code","ef80dd08":"code","dc577b89":"code","65b24dfa":"code","ae2e5cd8":"code","08969239":"code","f4dabd11":"code","024edc04":"code","379af7ab":"code","fdb2a53a":"code","3ac21da8":"code","e9424a84":"code","f4cc59e1":"code","dc6c8276":"code","2c9beeef":"code","2f1d37e7":"code","e6966489":"code","0680f8e8":"code","9cdd73e7":"code","cf039b81":"code","0bf5d3db":"code","7d3e95fd":"code","095610a0":"code","ed90f936":"code","31ca2c13":"code","0403547f":"code","bff32dd7":"code","01a1c05f":"code","4421b2c1":"code","20a30dcd":"code","28fe3c83":"code","93f3e49b":"code","f0f088a7":"code","5e9108b8":"code","c4dd195d":"code","9a5f7ebe":"markdown"},"source":{"04bef4fa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1ce0b32f":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nfrom warnings import filterwarnings\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy.stats import norm\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.model_selection import cross_val_score,KFold\nimport plotly.express as px\nfrom sklearn.svm import SVC\nfrom plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)","4121c775":"train_df=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","3b46a04d":"train_df.head()","9ec7349a":"train_df.isnull().sum()","4cadfc3b":"#cabin has more null values. So let's drop cabin column\ntrain_df=train_df.drop(columns=[\"Cabin\"],axis=1)\ntrain_df","f50c344a":"#Also let's drop few more columns which doesn't have any impact in our prediction\ntrain_df=train_df.drop(columns=[\"PassengerId\",\"Name\",\"Ticket\"],axis=1)\ntrain_df","43e50421":"#missing values\ntrain_df.isnull().sum()","fd8a217b":"train_df.groupby(\"Pclass\")[\"Age\"].mean()","d512c81f":"#Now, Let's fill all the missing values to proceed for our analysis\ndef Age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    if pd.isnull(Age):\n        if Pclass==1:\n            return 38.23\n        elif Pclass==2:\n            return 29.87\n        elif Pclass==3:\n            return 25.14\n    else:\n        return Age\n    ","13c718ae":"train_df[\"Age\"]=train_df[[\"Age\",\"Pclass\"]].apply(Age,axis=1)","a6fbea78":"train_df.isnull().sum()","5cbd5bf4":"#let's see the rows with missing values\ntrain_df[train_df.isnull().any(axis=1)]","2f4ca0c8":"train_df.groupby(\"Pclass\")[\"Embarked\"].value_counts()","a13220d6":"impute=SimpleImputer(strategy=\"most_frequent\")\ntrain_df[[\"Embarked\"]]=impute.fit_transform(train_df[[\"Embarked\"]])","f8049110":"x=[\"Pclass-1\",\"Pclass-2\",\"Pclass-3\"]\ny=[38.23,29.87,25.14]\nplt.bar(x,y)\nplt.xlabel(\"PCLASS\")\nplt.ylabel(\"AGE\")\nplt.title(\"Age in different classes\")\nplt.show()","4ab5a350":"plt.style.use(\"seaborn\")\ncolor=plt.cm.ocean(np.linspace(0,2,5))\ntrain_df[\"Survived\"].value_counts().plot.bar(color=color,figsize=(12,8))\nplt.show()","71810a46":"train_df.groupby(\"Sex\")[\"Survived\"].value_counts()","37226228":"plt.style.use(\"seaborn\")\ncolor=plt.cm.ocean(np.linspace(0,2,5))\ntrain_df[\"Sex\"].value_counts().plot.bar(color=color,figsize=(12,8))\nplt.title(\"number of Male and Female\")\nplt.xlabel('SEX')\nplt.ylabel(\"total count\")\nplt.show()","c71540c1":"train_df[\"Embarked\"].value_counts().plot.pie(figsize=(12,8),explode=(0.1,0.1,0.1),autopct=\"%1.2f%%\")\nplt.title(\"Embarked\",fontsize=15)\nplt.show()","c9ffc6b1":"train_df[\"Pclass\"].value_counts().plot.pie(figsize=(12,8),explode=(0.1,0.1,0.1),autopct=\"%1.2f%%\")\nplt.title(\"Percentage of People in different class\",fontsize=15)\nplt.show()","3c5d8dbb":"s=train_df.groupby(\"Sex\")[\"Survived\"].value_counts()\ncolor=plt.cm.ocean(np.linspace(0,2,5))\nx=[\"Female\",\"male\"]\ny=[s[0],s[3]]\nplt.bar(x,y,color=color)\nplt.xlabel('SEX')\nplt.ylabel(\"Survived\")\nplt.show()","d9280f42":"sns.heatmap(train_df.corr(),annot=True)\nplt.show()","43f7c18f":"#To see how age is distributed\ntrain_df[\"Age\"].hist(figsize=(12,8),bins=15)\nplt.show()","7b1e9ff7":"#To see how Fare is distributed\ntrain_df[\"Fare\"].hist(figsize=(12,8),bins=25)\nplt.show()","c08a8e4e":"e=train_df.groupby(\"Embarked\")[\"Fare\"].mean()\ncolor=plt.cm.ocean(np.linspace(0,2,7))\nx=[\"C_Embark\",\"Q_Embark\",\"S_Embark\"]\ny=[e[0],e[1],e[2]]\nplt.bar(x,y,color=color)\nplt.xlabel(\"Embarked\",fontsize=(15))\nplt.ylabel(\"Fare\",fontsize=(15))\nplt.show()","e44c4bc9":"fig=px.sunburst(train_df.groupby([\"Pclass\",\"Sex\",\"Survived\"]).size().reset_index(name=\"count\"),path=[\"Pclass\",\"Sex\",\"Survived\"],values=\"count\",title=\"Count of Survived Based on Pclass and Sex\")\nfig.show()","b7e8a4e8":"sex=pd.get_dummies(train_df[\"Sex\"],drop_first=True)\nEmbark=pd.get_dummies(train_df[\"Embarked\"],drop_first=True)","439e19f6":"train_df=train_df.drop(columns=[\"Sex\",\"Embarked\"],axis=1)","87a5b7ba":"train_df=pd.concat([train_df,sex,Embark],axis=1)","103b2818":"X=train_df.iloc[:,1:].values\ny=train_df.iloc[:,0].values","d28b4b93":"sc=StandardScaler()\nX=sc.fit_transform(X)","ef80dd08":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=100)","dc577b89":"rfc=RandomForestClassifier(max_depth=10,random_state=1)","65b24dfa":"rfc.fit(X_train,y_train)\npred=rfc.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","ae2e5cd8":"cm=confusion_matrix(y_test,pred)\ncm","08969239":"report=classification_report(y_test,pred)\nprint(\"RandomForestClassifier report \\n\",report)","f4dabd11":"ada=AdaBoostClassifier()\nada.fit(X_train,y_train)\npred=ada.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","024edc04":"cm=confusion_matrix(y_test,pred)\ncm","379af7ab":"report=classification_report(y_test,pred)\nprint(\"AdaBoostClassifier report \\n\",report)","fdb2a53a":"classifier = KNeighborsClassifier()\nclassifier.fit(X_train, y_train)\npredict=classifier.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","3ac21da8":"cm=confusion_matrix(y_test,pred)\ncm","e9424a84":"report=classification_report(y_test,pred)\nprint(\"KNeighborsClassifier report \\n\",report)","f4cc59e1":"classifier = SVC()\nclassifier.fit(X_train, y_train)\npredict=classifier.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","dc6c8276":"cm=confusion_matrix(y_test,pred)\ncm","2c9beeef":"report=classification_report(y_test,pred)\nprint(\"SVC report \\n\",report)","2f1d37e7":"classifier = LogisticRegression()\nclassifier.fit(X_train, y_train)\npredict=classifier.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","e6966489":"cm=confusion_matrix(y_test,pred)\ncm","0680f8e8":"report=classification_report(y_test,pred)\nprint(\"Logistic Regression \\n\",report)","9cdd73e7":"model = GaussianNB()\nmodel.fit(X_train, y_train)\ny_model = model.predict(X_test) \npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","cf039b81":"cm=confusion_matrix(y_test,pred)\ncm","0bf5d3db":"report=classification_report(y_test,pred)\nprint(\"GaussianNB \\n\",report)","7d3e95fd":"test=test_df.drop(columns=[\"PassengerId\",\"Name\",\"Ticket\",\"Cabin\"],axis=1)","095610a0":"test","ed90f936":"def Age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    if pd.isnull(Age):\n        if Pclass==1:\n            return 38.23\n        elif Pclass==2:\n            return 29.87\n        elif Pclass==3:\n            return 25.14\n    else:\n        return Age","31ca2c13":"test[\"Age\"]=test[[\"Age\",\"Pclass\"]].apply(Age,axis=1)","0403547f":"sex=pd.get_dummies(test[\"Sex\"],drop_first=True)\nEmbark=pd.get_dummies(test[\"Embarked\"],drop_first=True)","bff32dd7":"test=test.drop(columns=[\"Sex\",\"Embarked\"],axis=1)","01a1c05f":"test=pd.concat([test,sex,Embark],axis=1)","4421b2c1":"test.isnull().sum()","20a30dcd":"test[\"Fare\"]=test[\"Fare\"].fillna(test[\"Fare\"].mean())","28fe3c83":"test=sc.fit_transform(test)","93f3e49b":"y_pred=rfc.predict(test)","f0f088a7":"y_pred","5e9108b8":"output = pd.DataFrame({'PassengerId': test_df.PassengerId, 'Survived': y_pred})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved.\")","c4dd195d":"print(output.head())","9a5f7ebe":"# **If you like my notebook. Don't forget to upvote it.**"}}