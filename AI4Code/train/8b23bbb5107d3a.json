{"cell_type":{"ddc24463":"code","e6e03ad6":"code","2a305613":"code","5519c3af":"code","31149145":"code","b13b49fb":"code","b25b3784":"code","3830abdc":"code","e4e04e9d":"code","4d8fafa7":"code","51ee2b89":"code","0e717f7b":"code","dd42dd3f":"code","255abc2e":"code","9d7f69c5":"code","8add3f8b":"code","a3de095d":"code","5ca50305":"code","78f0e6c6":"code","78e319dc":"code","b6ec33fb":"code","ef1a7d0f":"code","9861aac7":"code","cc59afd7":"code","9996bff3":"code","13505d78":"code","456b8edc":"code","d7d86536":"code","80c96457":"code","45dfa619":"code","0f83b3e6":"markdown","5d1a9389":"markdown","c4be48ed":"markdown","6fd7bc1d":"markdown","6fb640ed":"markdown","0d5b9209":"markdown","972ca471":"markdown","d4855279":"markdown","1454fa4a":"markdown","42df5473":"markdown","58394f80":"markdown"},"source":{"ddc24463":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e6e03ad6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport warnings\nwarnings.simplefilter(\"ignore\")","2a305613":"details = pd.read_csv('\/kaggle\/input\/nba-games\/games_details.csv')\nplayers = pd.read_csv('\/kaggle\/input\/nba-games\/players.csv')\nteams = pd.read_csv('\/kaggle\/input\/nba-games\/teams.csv')\nranking = pd.read_csv('\/kaggle\/input\/nba-games\/ranking.csv')\ngames  = pd.read_csv('\/kaggle\/input\/nba-games\/games.csv')","5519c3af":"games.head()","31149145":"print(games.dtypes)","b13b49fb":"print(\"Tiene\",games.shape[0],\"Filas\", \"y\", games.shape[1],\"Columnas\")","b25b3784":"plt.figure(figsize=(15,8))\nsns.barplot(x=games.columns,y=games.isnull().sum())\nplt.xticks(rotation=90)\nplt.title(\"VALORES FALTANTES\",fontsize=18,fontweight=\"bold\")\nplt.show()","3830abdc":"games.describe()","e4e04e9d":"print(\"Contiene\",games.duplicated().sum(),\"Valores Duplicados\")","4d8fafa7":"def EDA(dataset):\n    print(dataset.dtypes)\n    print(\"\")\n    print(\"\")\n    print(\"Tiene\",dataset.shape[0],\"Filas\", \"y\", dataset.shape[1],\"Columnas\")\n    print(\"\")\n    print(\"\")\n    plt.figure(figsize=(15,8))\n    sns.barplot(x=dataset.columns,y=dataset.isnull().sum())\n    plt.xticks(rotation=90)\n    plt.title(\"VALORES FALTANTES\",fontsize=18,fontweight=\"bold\")\n    plt.show()\n    print(\"\")\n    print(\"\")\n    print(dataset.describe())\n    print(\"\")\n    print(\"\")\n    print(\"Contiene\",dataset.duplicated().sum(),\"Valores Duplicados\")","51ee2b89":"EDA(players)","0e717f7b":"EDA(teams)","dd42dd3f":"EDA(ranking)","255abc2e":"EDA(details)","9d7f69c5":"data_merge= pd.merge(left=ranking,right=teams,left_on=\"TEAM_ID\",right_on=\"TEAM_ID\")\nwins= data_merge.groupby(by=\"NICKNAME\").mean().round()\nwins.sort_values(\"W\",ascending=False,inplace=True)","8add3f8b":"fg1=px.histogram(data_frame=wins ,x=wins.index,y=[\"W\"],title=\"PROMEDIO DE PARTIDOS GANADOS POR EQUIPO\",labels={\"NICKNAME\":\"Nombre Equipo\",\n                                                                               \"value\":\"Partidos Ganados\"})\nfg1.show()","a3de095d":"wins.sort_values(\"L\",ascending=False,inplace=True)\n\nfg2=px.histogram(data_frame=wins ,x=wins.index,y=[\"L\"],title=\"PROMEDIO DE PARTIDOS PERDIDOS POR EQUIPO\",labels={\"NICKNAME\":\"Nombre Equipo\",\n                                                                               \"value\":\"Partidos Perdidos\"})\nfg2.show()","5ca50305":"data_super= pd.merge(left=teams,right=games,left_on=\"TEAM_ID\",right_on=\"HOME_TEAM_ID\")\nteam_wins= data_super.groupby(\"NICKNAME\").sum()\nteam_wins.sort_values(\"HOME_TEAM_WINS\",ascending=False,inplace=True)","78f0e6c6":"plt.figure(figsize=(18,10))\nsns.barplot(x=team_wins.index,y=team_wins[\"HOME_TEAM_WINS\"],)\nplt.xticks(rotation=90)\nplt.title(\"EQUIPOS MAS GANADORES EN CASA\",fontsize=18,fontweight=\"bold\")\nplt.xlabel(\"Nombre Equipo\",fontsize=14)\nplt.ylabel(\"Cantidad de Partidos Ganados\",fontsize=14)\nplt.show()","78e319dc":"jugadores= details.groupby(\"PLAYER_NAME\").sum()","b6ec33fb":"jugadores.head()","ef1a7d0f":"jugadores.columns","9861aac7":"data_player= jugadores[[\"PTS\",\"REB\",\"AST\",\"STL\",\"BLK\"]]","cc59afd7":"data_player.head()","9996bff3":"data_player.rename(columns={\"PTS\":\"Puntos\",\"REB\":\"Rebotes\",\"AST\":\"Asistencias\",\"STL\":\"Robos\",\"BLK\":\"Bloqueos\"},inplace=True)","13505d78":"jugadores.rename(columns={\"FGM\":\"Tiros Anotados\",\"FGA\":\"Tiros Intentados\",\n                          \"FG3M\":\"Tiro 3 Pts Anotados\",\"FG3A\":\"Tiro 3 Pts Intentados\",\"FTM\":\"Tiros Libres Anotados\",\n                         \"FTA\":\"Tiros Libres Intentados\"},inplace=True)","456b8edc":"jugadores.columns","d7d86536":"import plotly.graph_objects as go","80c96457":"def Jugador_comparativo(player1,player2,player3):\n    \n    data= (data_player.index==player1)|(data_player.index==player2)|(data_player.index==player3)\n    \n    transpolar= data_player[data].T\n    categories = transpolar.index\n    \n    c_layout= dict(title=\"GRAFICO ESTADISTICO JUGADOR\")\n    \n    fig = go.Figure(layout=c_layout)\n    \n    fig.add_trace(go.Scatterpolar(r=transpolar[player1],theta=categories,fill=\"toself\",name=player1))\n    \n    fig.add_trace(go.Scatterpolar(r=transpolar[player2],theta=categories,fill=\"toself\",name=player2))\n    \n    fig.add_trace(go.Scatterpolar(r=transpolar[player3],theta=categories,fill=\"toself\",name=player3))\n    \n    columns= [ 'Tiros Anotados', 'Tiros Intentados','Tiro 3 Pts Anotados', 'Tiro 3 Pts Intentados',\n       'Tiros Libres Anotados', 'Tiros Libres Intentados']\n    \n    fig1= px.bar(jugadores[data][columns],title=\"OTRAS ESTADISTICAS\",labels={\"PLAYER_NAME\":\"Nombre Jugador\",\"value\":\"Cantidad\"})\n    \n        \n    fig.show()\n    fig1.show()\n    \n    ","45dfa619":"Jugador_comparativo(\"Kevin Durant\",\"LeBron James\",\"Kobe Bryant\")","0f83b3e6":"### 4. ANALIZANDO LAS ESTADISTICAS DE LOS JUGADORES?","5d1a9389":"### 2. QUE EQUIPO DE LA NBA HA PERDIDO MAS VECES?","c4be48ed":"En la imagen anterior podemos observar como los Spurs de San Antonio es el equipo mas ganador durante la fecha establecida en este dataset que va desde el a\u00f1o 2003 hasta el a\u00f1o 2021 seguido de los Rockets de Houston","6fd7bc1d":"### 3. CANTIDAD DE JUEGOS GANADOS POR EQUIPO EN CONDICION DE LOCAL?","6fb640ed":"# NBA ANALITYCS\n\nEstos dataset contiene informacion estadistica de cada uno de los juegos de las temporadas desde 2003-2021, nos permite identificar los mejores jugadores los equipos mas ganadores, analizar las estadisticas de cada jugador y compararlos entre si, ademas podemos obtener informacion relevante que nos permita crear modelos predictivos sobre los juegos futuros y sus posibles ganadores.","0d5b9209":"# EDA","972ca471":"En este grafico podemos identificar como los miami heats suben en el ranking de los equipos mas ganadores al analizar los juegos ganados como locales y los san antonio spurs se mantienen como lider de equipo mas ganador","d4855279":"Ahora podemos hacernos la pregunta contraria","1454fa4a":"Ahora en este grafico podemos observar que equipos han sido lo mas perdedores durante este tiempo en este caso vemos una clara relacion inversa al grafico anterior en este podemos ver que los lideran los Timberwolves de Minnesota y los Knicks de Nueva York","42df5473":"### 1. QUE EQUIPO DE LA NBA HA GANADO MAS VECES?","58394f80":"Ahora que exploramos uno a uno los dataset podemos comenzar a realizarnos las preguntas necesarias para extraer la informacion mas relevante de estos dataset para tener un analisis detallado de la informacion que contienen los mismos."}}