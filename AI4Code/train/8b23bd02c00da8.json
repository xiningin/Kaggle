{"cell_type":{"8fe3dcb7":"code","449864c2":"code","8cceacae":"code","fa0981d8":"code","64078c16":"code","d6666f01":"code","1ee12932":"code","11bb09ef":"code","8692188b":"code","3698acd2":"code","65aac037":"code","93a3785c":"code","172610f9":"code","fbf8d590":"code","13e3fdf3":"code","0b8e1481":"code","4d6425cb":"code","050d1df2":"code","14032e23":"code","debb8d86":"code","339b4aa4":"code","61315c7d":"code","f4e9b9f2":"code","8f8c806a":"code","d892a33d":"code","bd71529a":"code","07ac7f78":"code","dae4cc84":"code","c2bf5f6d":"code","82a23423":"code","7c3e778b":"code","e324e0a1":"code","32ccfa3a":"code","b6634270":"code","d333ab1c":"code","6dca1979":"markdown","1884bb47":"markdown","1f62f446":"markdown","22edf03f":"markdown","de325e2d":"markdown","18da0f3f":"markdown"},"source":{"8fe3dcb7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","449864c2":"EntriesGender = pd.read_excel(r'\/kaggle\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx')\nTeams = pd.read_excel(r'\/kaggle\/input\/2021-olympics-in-tokyo\/Teams.xlsx')\nAthletes = pd.read_excel(r'\/kaggle\/input\/2021-olympics-in-tokyo\/Athletes.xlsx')\nCoaches = pd.read_excel(r'\/kaggle\/input\/2021-olympics-in-tokyo\/Coaches.xlsx')\nMedals = pd.read_excel(r'\/kaggle\/input\/2021-olympics-in-tokyo\/Medals.xlsx')","8cceacae":"EntriesGender.head(2)","fa0981d8":"EntriesGender.describe()","64078c16":"Teams.head(2)","d6666f01":"Teams.describe()","1ee12932":"Athletes.head(2)","11bb09ef":"Athletes.describe()","8692188b":"Coaches.head(2)","3698acd2":"Coaches.describe()","65aac037":"Medals.head(2)","93a3785c":"Medals.describe()","172610f9":"EntriesGender.head()","fbf8d590":"EntriesGender = EntriesGender.set_index('Discipline')\nEntriesGender = EntriesGender.drop('Total',axis=1)","13e3fdf3":"import matplotlib.pyplot as plt\nEntriesGender.plot(kind='bar',figsize = (20,20))\nplt.ylabel('Number of athletes')\nplt.title(\"Gender Distribution of athletes\")\nplt.show()","0b8e1481":"Athletes.head()","4d6425cb":"Athletes.describe()","050d1df2":"Athletes.count()","14032e23":"Athletes_1= Athletes.drop(labels='Discipline', axis=1).drop_duplicates()\nAthletes_2= Athletes.drop(labels='NOC', axis=1).drop_duplicates()","debb8d86":"NOC_level = Athletes_1.groupby(['NOC']).size().reset_index(name='counts')\nNOC_level.head()","339b4aa4":"plt.figure(figsize=(50,50))\nplt.xticks(rotation=90)\nplt.xlabel('NOC',fontsize=28)\nplt.ylabel('Athlete count',fontsize=28)\nplt.title('Count of athletes at NOC level',fontsize=28)\nplt.stem(NOC_level.NOC, NOC_level.counts, use_line_collection = True)\nplt.show()","61315c7d":"Dis_level = Athletes_2.groupby(['Discipline']).size().reset_index(name='counts')\nDis_level.head()","f4e9b9f2":"plt.figure(figsize=(50,50))\nplt.xticks(rotation=90)\nplt.xlabel('Discipline',size=28)\nplt.ylabel('Athlete count',size=28)\nplt.title('Count of athletes at Discipline level',size=28)\nplt.stem(Dis_level.Discipline, Dis_level.counts, use_line_collection = True)\nplt.show()","8f8c806a":"Coaches.head()","d892a33d":"Coaches.describe()","bd71529a":"Coaches_1= Coaches.drop(labels=['NOC','Event'], axis=1).drop_duplicates()\nCoaches_2= Coaches.drop(labels=['Discipline','Event'], axis=1).drop_duplicates()","07ac7f78":"Disc_level = Coaches_1.groupby(['Discipline']).size().reset_index(name='counts')\nDisc_level.head()","dae4cc84":"Disc_level.plot.bar(x='Discipline', y='counts',figsize=(10,10),color='orange')","c2bf5f6d":"NOC_level = Coaches_2.groupby(['NOC']).size().reset_index(name='counts')\nNOC_level.head()","82a23423":"NOC_level.plot.bar(x='NOC', y='counts',figsize=(15,15),color='green')","7c3e778b":"Pivot = Coaches.pivot_table(values=\"Name\", index=\"Discipline\", columns=\"NOC\", aggfunc=pd.Series.nunique)\nPivot.head(20)","e324e0a1":"Medals.head()","32ccfa3a":"Medals.describe()","b6634270":"Medals_1 = Medals.set_index('Team\/NOC')\nMedals_1 = Medals_1.drop(['Total','Rank','Rank by Total'],axis=1)\nMedals_1.head()","d333ab1c":"Medals_1.plot(kind='bar',figsize = (100,100))\nplt.ylabel('Number of medals',fontsize = 50)\nplt.xlabel('Team\/NOC',fontsize = 50)\nplt.title(\"Medal Distribution of NOC\",fontsize = 50)\nplt.legend(loc=2, prop={'size': 50})\nplt.show()","6dca1979":"**Count of athletes per discipline differs from what we see in the Entries gender table**","1884bb47":"# Gender Distribution across Disciplines","1f62f446":"> **Rhythmic Gymnastics and Artistic swimming have only female athletes!**","22edf03f":"# Medals Distribution","de325e2d":"# Coaches Distribution","18da0f3f":"# Athletes distribution"}}