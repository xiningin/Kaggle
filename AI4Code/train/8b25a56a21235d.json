{"cell_type":{"1d5f95ac":"code","6680916d":"code","98a16e70":"code","65d5db38":"code","07dcbe18":"code","f8416801":"code","98f30a29":"code","b5a15e14":"code","09177323":"code","a8e89e1d":"code","02139ead":"code","fa5cf229":"code","0a9fd7c7":"code","39f69f4b":"code","26936cfc":"code","d258764a":"markdown","d28906cd":"markdown","91568f5f":"markdown","86091b49":"markdown","2dd5c3fa":"markdown","c9cc10d2":"markdown","b19a2c9d":"markdown","d9988dc1":"markdown"},"source":{"1d5f95ac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6680916d":"from matplotlib import pyplot as plt\nimport seaborn as sns","98a16e70":"file = '\/kaggle\/input\/latest-covid19-india-statewise-data\/Latest Covid-19 India Status.csv'\ndf = pd.read_csv(file)","65d5db38":"df.columns","07dcbe18":"df.shape","f8416801":"df.isna().sum()","98f30a29":"df['State\/UTs']","b5a15e14":"plt.style.use('seaborn')\nplt.figure(figsize=(10,10))\nplt.title('Total Cases')\nsns.barplot(data=df,x='Total Cases',y='State\/UTs',color='b')\nplt.show()","09177323":"plt.style.use('seaborn')\nplt.figure(figsize=(10,10))\nplt.title('Active Cases')\nsns.barplot(data=df,x='Active',y='State\/UTs',color='y')\nplt.show()","a8e89e1d":"plt.style.use('seaborn')\nplt.figure(figsize=(10,10))\nplt.title('Discharged')\nsns.barplot(data=df,x='Discharged',y='State\/UTs',color='pink')\nplt.show()","02139ead":"plt.style.use('seaborn')\nplt.figure(figsize=(10,10))\nplt.title('Deaths')\nsns.barplot(data=df,x='Deaths',y='State\/UTs',color='r')\nplt.show()","fa5cf229":"for col in df.columns[1:5]:\n    print(f'Highest {col}')\n    print(df[['State\/UTs',col]][df[col] == df[col].max()])\n    print('\\n')","0a9fd7c7":"for col in df.columns[1:5]:\n    print(f'Least {col}')\n    print(df[['State\/UTs',col]][df[col] == df[col].min()])\n    print('\\n')","39f69f4b":"colors = ['#2ecc71','#3498db','#e74c3c']\nlabels = ['Active','Discharged','Deaths']","26936cfc":"for i in range(36):\n    plt.style.use('fivethirtyeight')\n    plt.figure(figsize=(5,5))\n    plt.title(df.loc[i]['State\/UTs'])\n    plt.pie([df.loc[i]['Active'],df.loc[i]['Discharged'],df.loc[i]['Deaths']],colors=colors,labels=labels,explode=[0,0,0.2],autopct='%0.1f')\n    plt.show()","d258764a":"## Highest Cases","d28906cd":"## Lowest Cases","91568f5f":"## Pie chart of each state","86091b49":"## Deaths (State Wise)","2dd5c3fa":"## States","c9cc10d2":"## Discharged (State Wise) ","b19a2c9d":"\n## Total cases state wise","d9988dc1":"## Active Cases State Wise "}}