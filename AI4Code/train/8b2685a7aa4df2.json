{"cell_type":{"3534f514":"code","898c09bf":"code","0bda0681":"code","87745c98":"code","1b632297":"code","b6e0a93a":"markdown","183b3f8f":"markdown"},"source":{"3534f514":"import pandas as pd\nimport re\nfrom datetime import date\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(font_scale=1.0)","898c09bf":"# count the number of forum Topics that contain the word \"sheet\" in the Title:\nforumTopics_df = pd.read_csv('..\/input\/meta-kaggle\/ForumTopics.csv')\nnumber = forumTopics_df.Title.str.count(\"sheet\", re.I).sum()\nprint(\"Estimated number of cheat sheet posts on kaggle: %i\" % number)","0bda0681":"all_cheat_sheet_Topics = forumTopics_df[forumTopics_df['Title'].str.contains(\"Sheet\", case=False, na=False)]\n\nsizes = []\ndef count(key_word):\n    number_occurences = all_cheat_sheet_Topics.Title.str.count(key_word, re.I).sum()\n    sizes.append(number_occurences)\n    return\n\ntopics = ['python','pandas','matplotlib','scikit','SQL','regex','ML','machine','statistics','learning','science','seaborn','NLP','neural']\nfor word in topics:\n    count(word)\n\nfig1, ax1 = plt.subplots(figsize=(7,7))\nax1.pie(sizes, labels=topics, autopct='%1.0f%%')\nax1.axis('equal')\nax1.legend(labels=['%s: %i' % (l, s  ) for l, s in zip(topics, sizes)],\n          title=\"Subject matter and approx. number of posts\",\n          loc=\"center left\",\n          bbox_to_anchor=(1.2, 0, 0, 1))\nplt.show()","87745c98":"sheet_topics = forumTopics_df[forumTopics_df['Title'].str.contains(\"sheet\", na=False, case=False)].copy()\n\n# add a year column\nsheet_topics['CreationDate'] = pd.to_datetime(sheet_topics['CreationDate'], utc=True)\nsheet_topics['Year'] = sheet_topics['CreationDate'].dt.year\n\nfig, ax = plt.subplots(figsize=(12, 5))\nsns.countplot(x=\"Year\", data=sheet_topics, palette=\"Spectral\")\nplt.ylabel('Number posted')\nplt.title(\"'Cheat sheet' topics published each year (as of %s\" % date.today().strftime(\"%d\/%m\/%Y\") +\")\", fontsize=20)\nplt.show();","1b632297":"interview_topics = forumTopics_df[forumTopics_df['Title'].str.contains(\"interview\", na=False, case=False)].copy()\ninterview_topics['CreationDate'] = pd.to_datetime(interview_topics['CreationDate'], utc=True)\ninterview_topics['Year'] = interview_topics['CreationDate'].dt.year\n\nfig, ax = plt.subplots(figsize=(12, 5))\nsns.countplot(x=\"Year\", data=interview_topics, palette=\"Spectral\")\nplt.ylabel('Number posted')\nplt.title(\"'Interview' topics published each year (as of %s\" % date.today().strftime(\"%d\/%m\/%Y\") +\")\", fontsize=20)\nplt.show();","b6e0a93a":"visualise the subject matter as a $\\pi$-chart:","183b3f8f":"This notebook was created, and made public, only to provide background to a reply I made on a Topic post. Its function is to produce some *very* approximate numbers, and nothing more. "}}