{"cell_type":{"3eb5a3df":"code","4520b26e":"code","b38d1239":"code","e9cea244":"code","b2075348":"code","24d890a6":"code","4fb84de0":"code","76b0cc25":"code","a397af5b":"code","25e75f1c":"code","9f864f5f":"code","4d8a6967":"code","373bc20a":"code","775e0386":"code","ca4b5c2a":"code","5ae11272":"code","c99fd4c7":"code","6b6ce2a5":"code","c39d6c25":"code","80da40df":"code","c1e971fd":"markdown","469693ba":"markdown","af2af569":"markdown","317c3d82":"markdown","88b1620b":"markdown","3a8c8429":"markdown","3832cf4a":"markdown","6ddeaf0a":"markdown","98a0dd08":"markdown","f8d744f8":"markdown","40a7e09b":"markdown","9ddfdac4":"markdown","9200f95f":"markdown","dcd99e64":"markdown","87780e7b":"markdown","61e01cb9":"markdown","45c2abbc":"markdown"},"source":{"3eb5a3df":"import tensorflow as tf\nimport numpy as np\nimport os\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n\nimport tensorflow as tf\nfrom tensorflow import keras\n\nprint(tf.__version__)\nprint(keras.__version__)","4520b26e":"np.random.seed(42)\n\nmpl.rc('axes', labelsize=14)\nmpl.rc('xtick', labelsize=12)\nmpl.rc('ytick', labelsize=12)\n\nPROJECT_ROOT_DIR = \".\"\nCHAPTER_ID = \"ann\"\nIMAGES_PATH = os.path.join(PROJECT_ROOT_DIR, \"images\", CHAPTER_ID)\nos.makedirs(IMAGES_PATH, exist_ok=True)","b38d1239":"def save_fig(fig_id, tight_layout=True, fig_extension=\"png\", resolution=300):\n    path = os.path.join(IMAGES_PATH, fig_id + \".\" + fig_extension)\n    print(\"Saving figure\", fig_id)\n    if tight_layout:\n        plt.tight_layout()\n    plt.savefig(path, format=fig_extension, dpi=resolution)","e9cea244":"fashion_mnist = keras.datasets.fashion_mnist\n(X_train_full, y_train_full), (X_test, y_test) = fashion_mnist.load_data()\n\nprint(X_train_full.shape)\nprint(X_train_full.dtype)","b2075348":"X_valid, X_train = X_train_full[:5000] \/ 255., X_train_full[5000:] \/ 255.\ny_valid, y_train = y_train_full[:5000], y_train_full[5000:]\nX_test = X_test \/ 255.\n\nprint(\"y_train=\",y_train)\nprint(\"X_test.shape=\",X_valid.shape)\nprint(\"X_test.shape=\",X_test.shape)","24d890a6":"plt.imshow(X_train[0], cmap=\"binary\")\nplt.axis('off')\nplt.show()\n\nclass_names = [\"T-shirt\/top\", \"Trouser\", \"Pullover\", \"Dress\", \"Coat\",\n               \"Sandal\", \"Shirt\", \"Sneaker\", \"Bag\", \"Ankle boot\"]\nprint(class_names[y_train[0]])","4fb84de0":"n_rows = 4\nn_cols = 10\nplt.figure(figsize=(n_cols * 1.2, n_rows * 1.2))\nfor row in range(n_rows):\n    for col in range(n_cols):\n        index = n_cols * row + col\n        plt.subplot(n_rows, n_cols, index + 1)\n        plt.imshow(X_train[index], cmap=\"binary\", interpolation=\"nearest\")\n        plt.axis('off')\n        plt.title(class_names[y_train[index]], fontsize=12)\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nsave_fig('fashion_mnist_plot', tight_layout=False)\nplt.show()","76b0cc25":"keras.backend.clear_session()\nnp.random.seed(42)\ntf.random.set_seed(42)","a397af5b":"model = keras.models.Sequential([\n    keras.layers.Flatten(input_shape=[28, 28]),\n    keras.layers.Dense(300, activation=\"relu\"),\n    keras.layers.Dense(100, activation=\"relu\"),\n    keras.layers.Dense(10, activation=\"softmax\")\n])\nprint(model.layers)","25e75f1c":"keras.utils.plot_model(model, \"my_fashion_mnist_model.png\", show_shapes=True)","9f864f5f":"hidden1 = model.layers[1]\nprint(\"hidden1.name=\",hidden1.name)\n\nprint(\"True or False =\",model.get_layer(hidden1.name) is hidden1)\n\nweights, biases = hidden1.get_weights()\nprint(\"weights=\",weights)\nprint(\"weights.shape=\",weights.shape)\nprint(\"biases=\",biases)\nprint(\"biases.shape=\",biases.shape)","4d8a6967":"model.compile(loss=\"sparse_categorical_crossentropy\",\n              optimizer=\"sgd\",\n              metrics=[\"accuracy\"])","373bc20a":"history = model.fit(X_train, y_train, epochs=30,\n                    validation_data=(X_valid, y_valid))","775e0386":"print(\"history.params=\",history.params)\nprint(history.epoch)\nprint(\"history.history.keys()=\",history.history.keys())","ca4b5c2a":"import pandas as pd\n\npd.DataFrame(history.history).plot(figsize=(8, 5))\nplt.grid(True)\nplt.gca().set_ylim(0, 1)\nsave_fig(\"keras_learning_curves_plot\")\nplt.show()","5ae11272":"model.evaluate(X_test, y_test)","c99fd4c7":"X_new = X_test[:3]\ny_proba = model.predict(X_new)\ny_proba.round(2)","6b6ce2a5":"#y_pred = model.predict_classes(X_new) # deprecated\ny_pred = np.argmax(model.predict(X_new), axis=-1)\ny_pred","c39d6c25":"np.array(class_names)[y_pred]","80da40df":"y_new = y_test[:3]\ny_new\n\nplt.figure(figsize=(7.2, 2.4))\nfor index, image in enumerate(X_new):\n    plt.subplot(1, 3, index + 1)\n    plt.imshow(image, cmap=\"binary\", interpolation=\"nearest\")\n    plt.axis('off')\n    plt.title(class_names[y_test[index]], fontsize=12)\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nsave_fig('fashion_mnist_images_plot', tight_layout=False)\nplt.show()","c1e971fd":"# draw sample train images","469693ba":"# 5.4 draw result image ","af2af569":"# draw model ","317c3d82":"# 4.evaluate model","88b1620b":"# import common","3a8c8429":"# 2.model setting","3832cf4a":"# common variables","6ddeaf0a":"# 5.1. predict test data ","98a0dd08":"# common functions","f8d744f8":"# draw keras learning curves plot","40a7e09b":"# 5.3 predict test data -> select result index  -> select result category","9ddfdac4":"# 5.2 predict test data -> select result index ","9200f95f":"# 3.train model","dcd99e64":"# split data (train , validation)","87780e7b":"# draw sample train data","61e01cb9":"# 1.make keras model","45c2abbc":"# make fashion mnist "}}