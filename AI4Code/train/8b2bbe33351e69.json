{"cell_type":{"fe52b086":"code","a11f2c2f":"markdown"},"source":{"fe52b086":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport imageio as iio\nimport tensorflow as tf\nimport scipy as sp  # linear algebra\n\n# import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nfrom keras.applications.densenet import layers\n\noutputFile = \"submission.csv\"\ncsv_file = open(outputFile, \"w\")\ncsv_file.close()\n\nimport os\n\n\ndef match(im):\n    # score1 x1 y1 w1 h1 +...\n    # csv_file.write(\"a,1\\nb,2\\nc,3\")\n    pass\n\n\nfilenames = dir('.\/train_images\/*\/*')\nds = tf.data.TFRecordDataset(\n    filenames, compression_type=None, buffer_size=None, num_parallel_reads=None,\n    name=None\n)\n# Define Sequential model with 3 layers\nmodel = tf.keras.Sequential(\n    [\n        layers.Dense(2, activation=\"relu\", name=\"layer1\"),\n        layers.Dense(3, activation=\"relu\", name=\"layer2\"),\n        layers.Dense(4, name=\"layer3\"),\n    ]\n)\n# Call model on a test input\nx = tf.ones((3, 3))\ny = model(ds)\n\nfor dirname, _, filenames in os.walk('.\/train_images\/'):\n    for dirname1 in filenames:\n        print(dirname + \"\/\" + dirname1)\n        pathname = os.path.join(dirname, dirname1)\n        if pathname[:-4] == \".jpg\":\n            print(\"dir('\" + dirname + \"', '\" + pathname + \"'}\\n\")\n            im = iio.imread(pathname)\n            entries = match(im)\n            # score1 x1 y1 w1 h1 +...\n            # csv_file.write(\"a,1\\nb,2\\nc,3\")\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create\n# a version using \"Save & Run All\" You can also write temporary files to \/kaggle\/temp\/, but they won't be saved\n# outside of the current session\n","a11f2c2f":"> I\u2019m new to OpenCV and I search for a starting point for training CascadeHaar model for object detection. I have true positive (images with the object), negative (background images without the object) and I\u2019ve just download OpenCV for work either on Windows and command line or Python."}}