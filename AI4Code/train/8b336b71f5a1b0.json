{"cell_type":{"de373b39":"code","6020dffd":"code","3d2311f7":"code","b3160d40":"code","2fd97a82":"code","bd785f23":"code","9b54d298":"code","96dd9f1b":"code","3c9708f8":"code","548b89ad":"code","2fab5df0":"code","3ce618c8":"code","0c36f504":"code","77344b14":"code","5833c144":"code","90ff87f7":"code","a4df3584":"markdown","dacc1da5":"markdown","ceec56bb":"markdown","f81504d8":"markdown","a0e04b16":"markdown","7327c571":"markdown","d52a8635":"markdown","19ba09dd":"markdown","f57687ab":"markdown","2cd7a285":"markdown","2a301de0":"markdown"},"source":{"de373b39":"import io\nimport os\nimport signal\nimport subprocess\nfrom subprocess import TimeoutExpired\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom tqdm import tqdm\n\nfrom IPython.html.widgets import interact","6020dffd":"import sys\nsys.path.append('\/kaggle\/input')\n\nfrom kitcoder import make_process, TimeLimitExceed, KitCoder, myplot","3d2311f7":"np.random.seed(0)\nX = sorted(np.random.randint(0, 100, 16))\nprint(X)\n\n# 70\u4ee5\u4e0a\u306e\u6700\u5c0f\u306e\u5024\u3092\u8fd4\u3059\nL, R, M = make_process(X, threshold=70)\n\n@interact(step=(0, len(L)-1, 1))\ndef show(step=0):\n    assert len(L) == len(R) == len(M) == 5\n    l, r, m = L[step], R[step], M[step]\n    myplot(l, r, m, X)\n    if step==4:\n        print(\"answer = {}\".format(X[r]))","b3160d40":"a = [1, 14, 32, 51, 51, 51, 243, 419, 750, 910]\n\ndef isOK(index, key):\n    if a[index] >= key:\n        return True\n    else:\n        return False\n\n\ndef binary_search(key):\n    ng = -1\n    ok = len(a)\n\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) \/\/ 2\n        \n        if isOK(mid, key):\n            ok = mid\n        else:\n            ng = mid\n\n    return ok\n\nprint(\"\u914d\u5217a: {} \u306b\u5bfe\u3057\u3066\".format(a))\nprint(\"{:3} \u4ee5\u4e0a\u3067\u6700\u5c0f\u306e\u6570\u5b57\u306f {} \u756a\u76ee\u306e {}\".format(51, binary_search(51), a[binary_search(51)]))\nprint(\"{:3} \u4ee5\u4e0a\u3067\u6700\u5c0f\u306e\u6570\u5b57\u306f {} \u756a\u76ee\u306e {}\".format(1, binary_search(1), a[binary_search(1)]))\nprint(\"{:3} \u4ee5\u4e0a\u3067\u6700\u5c0f\u306e\u6570\u5b57\u306f {} \u756a\u76ee\u306e {}\".format(910, binary_search(910), a[binary_search(910)]))\n\nprint(\"{:3} \u4ee5\u4e0a\u3067\u6700\u5c0f\u306e\u6570\u5b57\u306f {} \u756a\u76ee\u306e {}\".format(52, binary_search(52), a[binary_search(52)]))\nprint(\"{:3} \u4ee5\u4e0a\u3067\u6700\u5c0f\u306e\u6570\u5b57\u306f {} \u756a\u76ee\u306e {}\".format(0, binary_search(0), a[binary_search(0)]))\ntry:\n    print(\"{:3}\u4ee5\u4e0a\u3067\u6700\u5c0f\u306e\u6570\u5b57\u306f{}\u756a\u76ee\u306e {}\".format(911, binary_search(911), a[binary_search(911)]))\nexcept IndexError:\n    print(\"911\u4ee5\u4e0a\u306e\u6570\u306f\u5b58\u5728\u3057\u307e\u305b\u3093\")","2fd97a82":"a = [1, 14, 32, 51, 51, 51, 243, 419, 750, 910]\nkey = 53\n\ndef isOK(index, key):\n    if :# \u3053\u3053\u306b\u6761\u4ef6\u3092\u5165\u529b\n        return True\n    else:\n        return False\n\ndef binary_search2(key):\n    ng = # \u3053\u3053\u306b\u6570\u5024\u3092\u5165\u529b\n    ok = # \u3053\u3053\u306b\u6570\u5024\u3092\u5165\u529b\n    \n    while abs(ok - ng) > 1:\n        mid = (ok + ng) \/\/ 2\n        \n        if isOK(mid, key):\n            ok = mid\n        else:\n            ng = mid\n\n    return ok\n\nprint(binary_search2(key))","bd785f23":"KC = KitCoder(input_dir=\"..\/input\/binary_search_1\")\ndammy_script = \"\"\"\na = list(map(int, input().split()))\nkey = int(input())\n\ndef isOK(index, key):\n\n\ndef binary_search2(key):\n\n\nprint(binary_search2(key))\n\"\"\"\nKC.judge_cases(dammy_script)","9b54d298":"KC = KitCoder(input_dir=\"..\/input\/binary_search_1\")\ndammy_script = \"\"\"\nfrom bisect import bisect\na = list(map(int, input().split()))\nkey = int(input())\n\nprint(bisect(a, key) - 1)\n\"\"\"\nKC.judge_cases(dammy_script)","96dd9f1b":"KC = KitCoder(input_dir=\"..\/input\/binary_search_2\")\nscript = \"\"\"\nN = int(input())\nK = int(input())\nL = list(map(float, input().split()))\n\ndef isOK(mid):\n    '''\n    hint: \u305d\u308c\u305e\u308c\u306e\u7d10\u306f\u9577\u3055mid\u4ee5\u4e0a\u306e\u90e8\u5206\u3092\u4f55\u500b\u4f5c\u308c\u307e\u3059\u304b?\n    '''\n\nOK = # \u7d76\u5bfe\u306bOK\u306a\u9577\u3055\nNG = # \u7d76\u5bfe\u306bNG\u306a\u9577\u3055\neps = 1e-3\n\nwhile abs(OK - NG) > eps:\n    mid = (OK + NG) \/ 2\n    if isOK(mid):\n        OK = mid\n    else:\n        NG = mid\n\nprint(round((OK*100\/\/1)\/100, 2))\n\"\"\"\nKC.judge_cases(script)","3c9708f8":"text = \"print('Hello World!!')\"\nwith open(\"tmp.py\", \"w\") as f:\n    f.write(text)","548b89ad":"# subprocess\u306b\u3064\u3044\u3066\nsubprocess.run(\"ls\", stdout=subprocess.PIPE)","2fab5df0":"# subprocess\u306b\u3064\u3044\u3066\nsubprocess.run(\"python tmp.py\", stdout=subprocess.PIPE)","3ce618c8":"# KitCoder \u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\n\nclass TimeLimitExceed(Exception):\n    pass\n\nclass KitCoder:\n    def __init__(self,\n                 input_dir=\"\",\n                 time_limit=2):\n        self.input_dir = input_dir\n        self.time_limit = time_limit\n        \n    def make_dammy_input(self, input_):\n        lines = input_.split(\"\\n\")    \n        def dammy_input():\n            return lines.pop(0)\n        return dammy_input\n\n    def make_dammy_print(self, ):\n        file = io.StringIO()\n        def dammy_print(*objects, sep=' ', end='\\n', file=file, flush=False):\n            print(*objects, sep=' ', end='\\n', file=file, flush=False)\n        return dammy_print, file\n    \n    def timehandler(self, signum, frame):\n        raise TimeLimitExceed\n    \n    def judge(self, filename, script):\n        with open(self.input_dir + \"\/\" + filename + \".in\", \"r\") as f:\n            input_case = f.read()\n        with open(self.input_dir + \"\/\" + filename + \".out\", \"r\") as f:\n            judge_case = f.read()\n        dammy_input = self.make_dammy_input(input_case)\n        dammy_print, file = self.make_dammy_print()\n        result = 0 # 0: AC, 1: TLE, 2: WA, 3: RE\n\n        try:\n            signal.signal(signal.SIGALRM, self.timehandler)\n            signal.alarm(self.time_limit)\n            exec(script, {}, {\"input\": dammy_input,\n                                    \"print\": dammy_print})\n            signal.alarm(0)\n        except TimeLimitExceed as e:\n            result = 1\n        except:\n            signal.alarm(0) # \u3053\u308c\u5165\u308c\u306a\u3044\u3068kernel\u304c\u843d\u3061\u308b\n            result = 3\n\n        signal.alarm(0)\n        if (result == 0) and (judge_case != file.getvalue()):\n            result = 2\n        return result\n    \n    def judge_cases(self, raw_script):\n        #########################################\n        script = \"def main(input, print):\\n\"\n        for l in raw_script.split(\"\\n\"):\n            script += \" \"*4 + l + \"\\n\"\n        script += \"main(input, print)\"\n        #########################################\n            \n        file_names = set([file_name.split(\".\")[0] for file_name in os.listdir(self.input_dir)])\n        results = []\n        for file_name in tqdm(file_names):\n            results.append(self.judge(file_name, script))\n        status = max(results)\n        if status == 0:\n            print(\"AC\")\n        elif status == 1:\n            print(\"TLE\")\n        elif status == 2:\n            print(\"WA\")\n        elif status == 3:\n            print(\"RE\")\n","0c36f504":"# exec\u306b\u3064\u3044\u3066\n\n\nb = 3\ntmp = \"\"\"\na = 2\ndef run():\n    print(a)\nrun()\nprint(b)\n\"\"\"","77344b14":"exec(tmp) # \u3053\u308c\u306fglobal\u5909\u6570\u3092\u53c2\u7167\u3057\u3066\u3057\u307e\u3046","5833c144":"exec(tmp, {}, {}) # a\u3082\u53c2\u7167\u3067\u304d\u306a\u304f\u306a\u308b","90ff87f7":"b = 3\ntmp = \"\"\"\ndef main():\n    a = 2\n    def run():\n        print(a)\n    run()\n    print(b)\nmain()\n\"\"\"\n\nexec(tmp, {}, {}) # \u60f3\u5b9a\u901a\u308a\u306e\u52d5\u304d\uff1f","a4df3584":"# \u9023\u7d9a\u5024\u3078\u306e\u62e1\u5f35\n\u4e8c\u5206\u63a2\u7d22\u3067\u306f\u96e2\u6563\u5024\u3060\u3051\u3067\u306a\u304f\u3001\u9023\u7d9a\u5024\u306e\u63a2\u7d22\u3082\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3053\u306e\u5834\u5408\u306f\u3001abs(OK -NG) > 1 \u3092 abs(OK - NG) > eps \u306b\u7f6e\u304d\u63db\u3048\u308b\u3060\u3051\u3067\u7c21\u5358\u306b\u66f8\u3051\u307e\u3059\u3002","dacc1da5":"\u5b9f\u969b\u306b\u87fb\u672c\u306b\u8f09\u3063\u3066\u3044\u308b\u554f\u984c\u3092\u89e3\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nCable Master\n===========\n\u554f\u984c\u6587\n\n\u9577\u3055\u304c\u305d\u308c\u305e\u308c$L_i$\u3067\u3042\u308b\u3088\u3046\u306aN\u672c\u306e\u7d10\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u7d10\u3092\u5207\u3063\u3066\u3001\u540c\u3058\u9577\u3055\u306e\u7d10\u3092K\u672c\u4f5c\u308b\u3068\u304d\u306e\u6700\u9577\u306e\u9577\u3055\u3092\u6c42\u3081\u306a\u3055\u3044\u3002\u7b54\u3048\u306f\u5c0f\u6570\u70b9\u4ee5\u4e0b\u4e8c\u6841\u307e\u3067\u3092\u5207\u308a\u6368\u3066\u3067\u51fa\u529b\u3057\u306a\u3055\u3044\u3002(POJ No.1064)\n\n\u5236\u7d04\n* 1 <= N <= 10000\n* 1 <= K <= 10000\n* 1 <= $L_i$ <= 100000\n\n\u5165\u529b\n\n```\nN\nK\nL1 L2 ... LN\n```\n\n\u5165\u529b\u4f8b\n\n```\n4\n11\n8.02 7.43 4.57 5.39\n```\n\n\n\u51fa\u529b\u4f8b\n\n```\n2.00\n```\n","ceec56bb":"\u4e8c\u5206\u63a2\u7d22\u306e\u5b9f\u88c5\u306f\u3001\u7af6\u30d7\u30ed\u754c\u9688\u3067\u6709\u540d\u306a[\u3081\u3050\u308b\u5f0f\u4e8c\u5206\u63a2\u7d22](https:\/\/twitter.com\/meguru_comp\/status\/697008509376835584)\u3092\u53c2\u8003\u306b\u3059\u308b\u3068\u7c21\u5358\u306b\u66f8\u3051\u307e\u3059\u3002\n\n[\u3051\u3093\u3061\u3087\u3093\u3055\u3093\u306e\u30d6\u30ed\u30b0](https:\/\/qiita.com\/drken\/items\/97e37dd6143e33a64c8c#3-%E3%82%81%E3%81%90%E3%82%8B%E5%BC%8F%E4%BA%8C%E5%88%86%E6%8E%A2%E7%B4%A2%E3%81%AE%E3%81%95%E3%82%89%E3%81%AA%E3%82%8B%E5%88%A9%E7%82%B9)\u306b\u66f8\u3044\u3066\u3042\u308b\u30b3\u30fc\u30c9\u3068\u540c\u3058\u3082\u306e\u3092Python\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046","f81504d8":"ipywidget.interact\u3067\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u53ef\u8996\u5316\u3057\u305f\u3089\u9762\u767d\u305d\u3046\u306b\u601d\u3063\u305f\u306e\u3067\u3001\u624b\u3054\u308d\u306a\u4e8c\u5206\u63a2\u7d22\u3092\u5143\u306b\u6559\u6750\u30c1\u30c3\u30af\u306a\u3082\u306e\u3092\u4f5c\u6210\u3057\u3088\u3046\u3068\u8003\u3048\u305f\u3002\n\n\u30ed\u30fc\u30ab\u30eb\u7528\u306e\u30b8\u30e3\u30c3\u30b8\u30b7\u30b9\u30c6\u30e0\u306fAtCoder\u7528\u306b\u4f5c\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u305d\u308c\u3092\u79fb\u690d\u3059\u308b\u3060\u3051\u3067\u6e08\u3080\u3068\u601d\u3063\u3066\u3044\u305f\u3002","a0e04b16":"\u9577\u305516\u306e\u914d\u5217\u306b\u5bfe\u3057\u30014\u56de\u306e\u64cd\u4f5c\u3067\u5024\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u4e8c\u5206\u63a2\u7d22\u3067\u306f\u3001\u9577\u3055N\u306e\u914d\u5217\u306b\u5bfe\u3057\u3066\u3001$log_2N$\u56de\u306e\u64cd\u4f5c\u3067\u63a2\u3057\u305f\u3044\u5024\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","7327c571":"\u7121\u4e8b\u306bAC\u3068\u51fa\u307e\u3057\u305f\u304b\uff1f\n\nPython\u306b\u306f[bisect](https:\/\/docs.python.jp\/3\/library\/bisect.html#searching-sorted-lists)\u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u3042\u308a\u3001\u914d\u5217\u306b\u5bfe\u3059\u308bupper bound\u3084lower bound\u306fbisect\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u6c42\u3081\u3089\u308c\u307e\u3059\u3002","d52a8635":"\u3067\u306f\u3001\u5b9f\u969b\u306b\u7686\u3055\u3093\u3082\u4e8c\u5206\u63a2\u7d22\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u4e0a\u8a18\u3067\u306f\u3001\u3042\u308b\u5024\u4ee5\u4e0a\u306e\u6700\u5c0f\u306e\u5024\u3092\u63a2\u3057\u307e\u3057\u305f\u304c\u3001\u3042\u308b\u5024\u4ee5\u4e0b\u306e\u6700\u5927\u306e\u5024\u306eindex\u3092\u63a2\u3059\u7248\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306b\u306f\u5fc5\u305a\u8a72\u5f53\u3059\u308b\u5024\u304c\u542b\u307e\u308c\u308b\u306e\u3067\u30b3\u30fc\u30ca\u30fc\u30b1\u30fc\u30b9\u306f\u7121\u8996\u3057\u3066\u69cb\u3044\u307e\u305b\u3093","19ba09dd":"# \u4eca\u56de\u306e\u52d5\u6a5f","f57687ab":"\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u3053\u3068\n* subprocess\u3067python.exe\u304c\u5b9f\u884c\u3067\u304d\u306a\u304b\u3063\u305f\n* \u4ee3\u308f\u308a\u306bexec\u3092\u7528\u3044\u3066\u305d\u308c\u3063\u307d\u304f\u52d5\u304b\u305d\u3046\u3068\u3057\u305f\n* global\u5909\u6570\u304c\u4e0a\u624b\u304f\u6271\u3048\u306a\u304b\u3063\u305f\u3002\u4ed5\u65b9\u306a\u3044\u306e\u3067\u95c7\u306e\u9b54\u8853\u306b\u624b\u3092\u51fa\u3057\u305f\u304c\u3001script\u5185\u306bglobal\u7b49\u3092\u6307\u5b9a\u3059\u308b\u3082\u306e\u304c\u5165\u308b\u3068\u99c4\u76ee\n","2cd7a285":"# \u4e8c\u5206\u63a2\u7d22\u3068\u306f\n\u30bd\u30fc\u30c8\u6e08\u307f\u306e\u914d\u5217\u306b\u5bfe\u3059\u308b\u63a2\u7d22\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4e00\u3064\u3067\u3059\u3002\n\n\u914d\u5217\u306b\u5bfe\u3059\u308b\u3007\u3007\u4ee5\u4e0b\u306e\u6700\u5927\u306e\u5024\u3092\u63a2\u7d22\u3084\u3001\u91cd\u8907\u306e\u306a\u3044\u914d\u5217\u306b\u5bfe\u3057\u3066\u3042\u308b\u5024\u306e\u4f4d\u7f6e\u306e\u7279\u5b9a\u7b49\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n\u63a2\u7d22\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\n\n1. \u914d\u5217\u5168\u4f53\u3092\u63a2\u7d22\u306e\u7bc4\u56f2\u3068\u3057\u307e\u3059\u3002\n2. \u63a2\u7d22\u306e\u7bc4\u56f2\u5185\u306e\u4e2d\u592e\u306e\u8981\u7d20\u3092\u8abf\u3079\u307e\u3059\u3002\n3. \u76ee\u7684\u306e\u30ad\u30fc\u3068\u4e2d\u592e\u306e\u8981\u7d20\u306e\u30ad\u30fc\u304c\u4e00\u81f4\u3059\u308c\u3070\u63a2\u7d22\u3092\u7d42\u4e86\u3057\u307e\u3059\u3002\n4. \u76ee\u7684\u306e\u30ad\u30fc\u304c\u4e2d\u592e\u306e\u30ad\u30fc\u3088\u308a\u3082\u5c0f\u3055\u3051\u308c\u3070\u524d\u534a\u90e8\u5206\u3092\u3001\u5927\u304d\u3051\u308c\u3070\u5f8c\u534a\u90e8\u5206\u3092\u63a2\u7d22\u306e\u7bc4\u56f2\u3068\u3057\u30662.\u3078\u623b\u308a\u307e\u3059\u3002\n\n\u3067\u3059\u3002\u5b9f\u969b\u306b\u52d5\u304f\u3068\u3053\u308d\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002","2a301de0":"\u5f53\u521d\u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068\n* \u30b3\u30fc\u30c9\u306f\u9069\u5f53\u306a\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3066\u304b\u3089subprocess.POPEN()\u3067\u5b9f\u884c"}}