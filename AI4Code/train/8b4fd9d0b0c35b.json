{"cell_type":{"7a1924ef":"code","1368ac24":"code","5041afb6":"code","13b7931f":"code","9a0522af":"code","14a84b35":"code","a2b2c7da":"code","fff07b79":"code","47203922":"markdown","09a53da2":"markdown","9cb426f7":"markdown","429443ba":"markdown","3d6ecb19":"markdown","a8066e27":"markdown","f1fae078":"markdown","401b7de3":"markdown","157ad614":"markdown"},"source":{"7a1924ef":"from sklearn import datasets\nmyiris = datasets.load_iris()\nx = myiris.data\ny = myiris.target\ntype(x)\nx.shape\ntype(y)","1368ac24":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler(feature_range=(0, 1))\nx_scaled = scaler.fit_transform(x)","5041afb6":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x_scaled, y, test_size=0.2, random_state=42)","13b7931f":"from sklearn.neighbors import KNeighborsClassifier","9a0522af":"knn = KNeighborsClassifier(n_neighbors=3)","14a84b35":"knn.fit(x_train, y_train)","a2b2c7da":"y_pred=knn.predict(x_test)","fff07b79":"#Accuracy\nprint('Accuracy = ', knn.score(x_test, y_test))\n\n#Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\nprint('\\nConfusion matrix')\nprint(confusion_matrix(y_test, y_pred))\n\n#Classification Report\nfrom sklearn.metrics import classification_report\nprint('\\nClassification Report')\nprint(classification_report(y_test, y_pred))  ","47203922":"Importing the Iris dataset","09a53da2":"![](http:\/\/)![](http:\/\/)# k-NN classification on Iris flower dataset","9cb426f7":"Instantiating the model with 3 neighbors","429443ba":"Importing the Classifier","3d6ecb19":"Evaluating the model","a8066e27":"Training the model","f1fae078":"Scaling the data using Min-max scalar","401b7de3":"Making predictions on test data","157ad614":"Splitting data into training and testing sets"}}