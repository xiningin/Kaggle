{"cell_type":{"207286cd":"code","ec01e160":"code","c4d45cf3":"code","e9ebbb83":"code","5a2a1f8e":"code","4d0c706e":"code","d88b80f6":"code","e633fd2b":"code","f8396422":"code","90304703":"code","936d1296":"code","fa2e06b9":"code","900216d9":"code","8106142b":"code","12406f88":"code","97b02b30":"code","2c228df7":"code","036983dd":"markdown","9ca02d27":"markdown","8440c41b":"markdown"},"source":{"207286cd":"import urllib.request, json\nimport pandas as pd\nimport random\nimport time\nimport requests","ec01e160":"#parameter and stuff\nfile_name=\"shopee-reviews\" #judul file\nmatch_id = \"1075\" #kode halaman kategori yang tercantum di url\n\n#other parameters\nlimit_product = \"100\" #limit product per request, by default = 50, max = 100\npage_no = \"0\" #halaman ke-berapa yang akan discraping\n\nlimit_review = 30 #limit review per request, by default = 6, max = 50 ","c4d45cf3":"def scrapeProduct(limit, match_id, page_no):\n    \n    df_product = pd.DataFrame()\n    df_rating = pd.DataFrame()\n    \n    url = \"https:\/\/shopee.co.id\/api\/v4\/search\/search_items\"\n    \n    querystring = {\"by\":\"relevancy\",\"limit\":limit,\"match_id\":match_id,\"newest\":page_no,\"order\":\"desc\",\"scenario\":\"PAGE_OTHERS\",\"version\":\"2\"}\n\n    payload = \"\"\n    headers = {\n        \"cookie\": \"REC_T_ID=3cd4a8c4-b8a0-11eb-ac80-b49691342bf6\",\n        \"authority\": \"shopee.co.id\",\n        \"pragma\": \"no-cache\",\n        \"cache-control\": \"no-cache\",\n        \"sec-ch-ua\": \"^\\^\"\n    }\n    \n    url = \"https:\/\/shopee.co.id\/api\/v4\/search\/search_items\"\n\n    response = requests.request(\"GET\", url, data=payload, headers=headers, params=querystring)\n\n    jsondata = json.loads(response.text)\n\n    for product in jsondata['items']:\n        #product data\n        itemid = product['item_basic'][\"itemid\"]\n        shopid = product['item_basic'][\"shopid\"]\n        name = product['item_basic'][\"name\"]\n        currency = product['item_basic'][\"currency\"]\n        stock = product['item_basic'][\"stock\"]\n        ctime = product['item_basic'][\"ctime\"]\n        historical_sold = product['item_basic'][\"historical_sold\"]\n        liked_count = product['item_basic'][\"liked_count\"]\n        view_count = product['item_basic'][\"view_count\"]\n        catid = product['item_basic'][\"catid\"]\n        brand = product['item_basic'][\"brand\"]\n        price = product['item_basic'][\"price\"]\n        price_min = product['item_basic'][\"price_min\"]\n        price_max = product['item_basic'][\"price_max\"]\n        price_min_before_discount = product['item_basic'][\"price_min_before_discount\"]\n        price_max_before_discount = product['item_basic'][\"price_max_before_discount\"]\n        price_before_discount = product['item_basic'][\"price_before_discount\"]\n        has_lowest_price_guarantee = product['item_basic'][\"has_lowest_price_guarantee\"]\n        raw_discount = product['item_basic'][\"raw_discount\"]\n        rating_star = product['item_basic'][\"item_rating\"][\"rating_star\"]\n        show_free_shipping = product['item_basic'][\"show_free_shipping\"]\n        is_preferred_plus_seller = product['item_basic'][\"is_preferred_plus_seller\"]\n        shop_location = product['item_basic'][\"shop_location\"]\n        has_model_with_available_shopee_stock = product['item_basic'][\"has_model_with_available_shopee_stock\"]\n        can_use_cod = product['item_basic'][\"can_use_cod\"]\n        is_on_flash_sale = product['item_basic'][\"is_on_flash_sale\"]\n\n        prod_row = pd.Series([itemid, shopid, name, currency, stock, ctime, historical_sold, liked_count, view_count, catid, brand, price, price_min, price_max, price_min_before_discount, price_max_before_discount, price_before_discount, has_lowest_price_guarantee, raw_discount, rating_star, show_free_shipping, is_preferred_plus_seller, shop_location, has_model_with_available_shopee_stock, can_use_cod, is_on_flash_sale])\n        row_df_prod = pd.DataFrame([prod_row], index = [itemid])\n        df_product = pd.concat([df_product, row_df_prod])\n        \n        #product rating\n        rating_total = product['item_basic'][\"item_rating\"][\"rating_count\"][0]\n        rating_count_1 = product['item_basic'][\"item_rating\"][\"rating_count\"][1]\n        rating_count_2 = product['item_basic'][\"item_rating\"][\"rating_count\"][2]\n        rating_count_3 = product['item_basic'][\"item_rating\"][\"rating_count\"][3]\n        rating_count_4 = product['item_basic'][\"item_rating\"][\"rating_count\"][4]\n        rating_count_5 = product['item_basic'][\"item_rating\"][\"rating_count\"][5]\n        \n        rating_row = pd.Series([itemid, rating_total, rating_count_1, rating_count_2, rating_count_3, rating_count_4, rating_count_5])\n        row_df_rating = pd.DataFrame([rating_row], index = [itemid])\n        df_rating = pd.concat([df_rating, row_df_rating])\n           \n    df_product = df_product.rename(columns={0: \"itemid\",\n                                            1: \"shopid\", \n                                            2: \"name\", \n                                            3: \"currency\", \n                                            4: \"stock\", \n                                            5: \"ctime\", \n                                            6: \"historical_sold\", \n                                            7: \"liked_count\", \n                                            8: \"view_count\", \n                                            9: \"catid\", \n                                            10: \"brand\", \n                                            11: \"price\", \n                                            12: \"price_min\", \n                                            13: \"price_max\", \n                                            14: \"price_min_before_discount\", \n                                            15: \"price_max_before_discount\", \n                                            16: \"price_before_discount\", \n                                            17: \"has_lowest_price_guarantee\", \n                                            18: \"raw_discount\", \n                                            19: \"rating_star\", \n                                            20: \"show_free_shipping\", \n                                            21: \"is_preferred_plus_seller\", \n                                            22: \"shop_location\", \n                                            23: \"has_model_with_available_shopee_stock\", \n                                            24: \"can_use_cod\", \n                                            25: \"is_on_flash_sale\"}, errors=\"raise\")\n\n    df_rating = df_rating.rename(columns={0: \"itemid\", \n                                          1: \"rating_total\", \n                                          2: \"rating_count_1\", \n                                          3: \"rating_count_2\",\n                                          4: \"rating_count_3\",\n                                          5: \"rating_count_4\",\n                                          6: \"rating_count_5\"}, errors=\"raise\")\n    \n    return df_product, df_rating\n    ","e9ebbb83":"df1,df2 = scrapeProduct(limit_product, match_id, page_no)\n\ndf1 = df1.reset_index(drop=True)\ndf2 = df2.reset_index(drop=True)\n\nprint(\"df1\",df1.shape)\nprint(\"df2\",df2.shape)\n","5a2a1f8e":"print(\"DF Product\")\nprint(df1)","4d0c706e":"print(\"DF Rating\")\nprint(df2)","d88b80f6":"def scrapeReview(df_reviews, itemid, shopid, limit):\n    \n    url = \"https:\/\/shopee.co.id\/api\/v2\/item\/get_ratings\"\n    offset = 0\n    keepLoop = True\n    while(keepLoop):\n        querystring = {\"filter\":\"1\",\"flag\":\"1\",\"itemid\": str(itemid),\"limit\": str(limit),\"offset\": str(offset),\"shopid\": str(shopid),\"type\":\"0\"}\n        print(\"\\t\",querystring)\n        response = requests.request(\"GET\", url, params=querystring)\n        jsondata = json.loads(response.text)\n        try:    \n            print(\"\\t API responded with\",len(jsondata['data']['ratings']), \"rating(s)\")\n\n            for i in range(limit):  \n                ratings = None\n                try:\n                    ratings = jsondata['data']['ratings'][i]\n                    review = ratings['comment']\n                    rev_row = pd.Series([itemid, shopid, review])\n                    row_df_rev = pd.DataFrame([rev_row], index = [i+offset])\n                    df_reviews = pd.concat([df_reviews, row_df_rev])\n                except IndexError:\n                    keepLoop = False\n                    break\n\n                    #review data\n\n\n            rand_numb = abs(random.gauss(3, 1))\n            time.sleep(rand_numb)\n            print(\"\\t action delayed for \",rand_numb,\"second\")\n            print(\"\\t scraped [\", len(df_reviews),\"] review(s)\")\n            offset += limit   \n            if(offset>1000): keepLoop = False\n        \n        except TypeError:\n            print(\"Type Error\")\n            keepLoop = False\n    \n    print(\"here\")\n    return df_reviews\n    ","e633fd2b":"def scrapeReviews(df1, limit_review):\n     \n    df3 = pd.DataFrame()\n    df_len = len(df1)\n    delay = 25 #(second) per product\n    sigma = 5\n    \n    for i in range(df_len):\n        print(\"scraping product [\",i,\"\/\",df_len,\"]\")\n        print(\"scraping shop_id \", df1['shopid'][i],\"item_id\",df1['itemid'][i])\n        \n        df3 = scrapeReview(df3, df1['itemid'][i], df1['shopid'][i], limit_review)\n        rand_numb = abs(random.gauss(delay, sigma))\n        print(\"luar\")\n\n    return df3","f8396422":"data_df = pd.read_csv('..\/input\/shopee-scraped-id\/data_shopee_gabungan_shopiditemid.csv')\ndata_df","90304703":"scraping_df = data_df.iloc[100:150]\nscraping_df = scraping_df.reset_index()","936d1296":"df3 = pd.DataFrame()\ndf3 = scrapeReviews(scraping_df, limit_review)","fa2e06b9":"## print(df3.info())\nprint(df3.head)","900216d9":"df3.to_csv(\"\".join((file_name,\"_review.csv\")), index=False)","8106142b":"def scrapeShops(df_shopids):\n    \n    df_shop = pd.DataFrame()\n    \n    base_link = \"https:\/\/shopee.co.id\/api\/v4\/shop\/get_shop_detail?shopid=\"\n    df_len = len(df_shopids)\n\n\n    for n, shopid in enumerate(df_shopids):\n        rand_numb = max(random.gauss(3, 1), 2)\n        time.sleep(rand_numb)\n        print(\"action delayed for \",rand_numb,\"second\")\n        print(\"scraping shop [\",n+1,\"\/\",df_len,\"]\")\n        \n        shop_link = \"\".join((base_link, str(shopid)))\n\n        with urllib.request.urlopen(shop_link) as url:\n            jsondata = json.loads(url.read().decode())\n                \n            shopid = jsondata['data']['shopid']\n            ctime = jsondata['data']['ctime']\n            mtime = jsondata['data']['mtime']\n            country = jsondata['data']['country']\n            is_shopee_verified = jsondata['data']['is_shopee_verified']\n            is_official_shop = jsondata['data']['is_official_shop']\n            rating_normal = jsondata['data']['rating_normal']\n            rating_bad = jsondata['data']['rating_bad']\n            rating_good = jsondata['data']['rating_good']\n            description = jsondata['data']['description']\n            preparation_time = jsondata['data']['preparation_time']\n            cancellation_rate = jsondata['data']['cancellation_rate']\n            shop_location = jsondata['data']['shop_location']\n            rating_star = jsondata['data']['rating_star']\n            has_flash_sale = jsondata['data']['has_flash_sale']\n            name = jsondata['data']['name']\n            item_count = jsondata['data']['item_count']\n            follower_count = jsondata['data']['follower_count']\n            response_rate = jsondata['data']['response_rate']\n            response_time = jsondata['data']['response_time']\n            username = jsondata['data']['account']['username']\n            has_shopee_flash_sale = jsondata['data']['has_shopee_flash_sale']\n            has_in_shop_flash_sale = jsondata['data']['has_in_shop_flash_sale']\n            has_brand_sale = jsondata['data']['has_brand_sale']\n            is_preferred_plus_seller = jsondata['data']['is_preferred_plus_seller']\n\n            shop_row = pd.Series([shopid, ctime, mtime, country, is_shopee_verified, is_official_shop, rating_normal, rating_bad, rating_good, description, preparation_time, cancellation_rate, shop_location, rating_star, has_flash_sale, name, item_count, follower_count, response_rate, response_time, username, has_shopee_flash_sale, has_in_shop_flash_sale, has_brand_sale, is_preferred_plus_seller])\n            row_df = pd.DataFrame([shop_row], index = [shopid])\n            df_shop = pd.concat([df_shop, row_df])\n            \n            print(\"shop [\",name,\"] successfully scraped \\n\")\n            \n    df_shop = df_shop.rename(columns={0: \"shopid\",\n                                      1: \"ctime\", \n                                      2: \"mtime\", \n                                      3: \"country\", \n                                      4: \"is_shopee_verified\", \n                                      5: \"is_official_shop\", \n                                      6: \"rating_normal\", \n                                      7: \"rating_bad\", \n                                      8: \"rating_good\", \n                                      9: \"description\", \n                                      10: \"preparation_time\", \n                                      11: \"cancellation_rate\", \n                                      12: \"shop_location\",\n                                      13: \"rating_star\",\n                                      14: \"has_flash_sale\",\n                                      15: \"name\", \n                                      16: \"item_count\",\n                                      17: \"follower_count\",\n                                      18: \"response_rate\",\n                                      19: \"response_time\",\n                                      20: \"username\",\n                                      21: \"has_shopee_flash_sale\",\n                                      22: \"has_in_shop_flash_sale\",\n                                      23: \"has_brand_sale\",\n                                      24: \"is_preferred_plus_seller\"}, errors=\"raise\")    \n    return df_shop\n        ","12406f88":"df_shopids = df1['shopid'].unique()\nlen(df_shopids)\n\ndf4 = scrapeShops(df_shopids)\n\nprint(\"df4\",df1.shape)","97b02b30":"print(\"DF Shops\")\nprint(df4)","2c228df7":"df1.to_csv(\"\".join((file_name,\"_produk.csv\")), index=False)\ndf2.to_csv(\"\".join((file_name,\"_rating.csv\")), index=False)\ndf3.to_csv(\"\".join((file_name,\"_review.csv\")), index=False)\ndf4.to_csv(\"\".join((file_name,\"_shop.csv\")), index=False)","036983dd":"# Scraping Produk","9ca02d27":"# Sraping Shop","8440c41b":"# Scraping Review"}}