{"cell_type":{"c8d5662f":"code","11e98649":"code","ab764740":"code","105ef6e8":"code","9ca60656":"code","db4bf8da":"code","bee4de41":"code","b064a980":"code","29facc0a":"code","76dc3948":"code","c74830ef":"code","caae2b0c":"code","febe8d11":"code","8d922f0a":"code","32c66508":"code","ffea774e":"code","ca65ce9e":"code","2444ee2e":"code","556ac175":"code","079d7ac8":"code","477ccd2c":"code","29b90608":"code","e83433ef":"code","cb3a19f0":"code","2ea32ff7":"code","5d3a2fa8":"code","a07a3460":"code","aeb1b9a8":"code","ddd41646":"markdown","793a212a":"markdown","4ecf0ed4":"markdown","c9d1761a":"markdown","2c9f1751":"markdown"},"source":{"c8d5662f":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport cv2\nimport os\nfrom PIL import Image\n\nfrom matplotlib.pyplot import imshow\nfrom IPython.display import HTML","11e98649":"img_train_path = os.path.abspath('..\/input\/train')\nimg_test_path = os.path.abspath('..\/input\/test')\ncsv_train_path = os.path.abspath('..\/input\/train.csv')","ab764740":"df = pd.read_csv(csv_train_path)\ndf.head()","105ef6e8":"df['Image_path'] = [os.path.join(img_train_path,whale) for whale in df['Image']]\ndf.head()","9ca60656":"img = Image.open(df['Image_path'][5])\nplt.imshow(img)\nplt.show()","db4bf8da":"len(df)","bee4de41":"df.Id.value_counts().head()","b064a980":"from tqdm import tqdm","29facc0a":"# For color image, shape[1] = 3 \n# For gray image, shape[1] = null\ngray_flag = []\nfor i, row in tqdm(df.iterrows()) : \n    img = Image.open(row['Image_path'])\n    try : \n        if np.array(img.getdata()).shape[1] == 3 :\n            gray_flag.append(True)\n        else : \n            gray_flag.append(\"Error\")\n    except : \n        gray_flag.append(False)    ","76dc3948":"df['is_color'] = gray_flag","c74830ef":"df['is_color'].value_counts().plot(kind='bar') \nplt.xticks(np.arange(2), ['Color', 'Gray'])\nplt.show()\nprint(df['is_color'].value_counts())","caae2b0c":"color_file_path = df[df['is_color'] == True]['Image_path'][1:5]\ngray_file_path = df[df['is_color'] == False]['Image_path'][1:5]","febe8d11":"for file in color_file_path :\n    img = Image.open(file)\n    plt.imshow(img)\n    plt.show()","8d922f0a":"for file in gray_file_path :\n    img = Image.open(file)\n    plt.imshow(img)\n    plt.show()","32c66508":"df[df['is_color'] == True].Id.value_counts().head()","ffea774e":"df[df['is_color'] == False].Id.value_counts().head()","ca65ce9e":"# Proportion of new whale is different\ncolor_df = df[df['is_color'] == True]\ngray_df = df[df['is_color'] == False]\n\nprint(\"Color images\")\nprint(len(color_df[color_df['Id'] == \"new_whale\"]) , '\/' , len(color_df))\nprint(float(len(color_df[color_df['Id'] == \"new_whale\"]) \/ len(color_df)))\n\nprint(\"Gray images\")\nprint(len(gray_df[gray_df['Id'] == \"new_whale\"]) , '\/' , len(gray_df))\nprint(float(len(gray_df[gray_df['Id'] == \"new_whale\"]) \/ len(gray_df)))","2444ee2e":"df.loc [df['Id'] == \"new_whale\", \"new_whale\"] = \"new_whale\" \ndf.loc [df['Id'] != \"new_whale\", \"new_whale\"] = \"other\"","556ac175":"freq_df = df.groupby([\"is_color\",\"new_whale\"])[\"new_whale\"].count().unstack(\"new_whale\")\nfreq_df.plot(kind='bar', figsize=(10,5))\n\nplt.title(\"New whale x Color \")\nplt.xticks(np.arange(2), ['Gray', 'Color'])\nplt.show()","079d7ac8":"color_df.to_csv(\"train_color.csv\", index=False)\ngray_df.to_csv(\"train_gray.csv\", index=False)","477ccd2c":"submission = pd.read_csv(\"..\/input\/sample_submission.csv\")","29b90608":"test_image_paths= [os.path.join(img_test_path, whale) for whale in submission['Image']]","e83433ef":"# For color image, shape[1] = 3 w\n# For gray image, shape[1] = null\ngray_flag_test = []\nfor i, path in tqdm(enumerate(test_image_paths)) : \n    img = Image.open(path)\n    try : \n        if np.array(img.getdata()).shape[1] == 3 :\n            gray_flag_test.append(True)\n        else : \n            gray_flag_test.append(\"Error\")\n    except : \n        gray_flag_test.append(False)    ","cb3a19f0":"test_df = submission.copy()","2ea32ff7":"test_df['is_color'] = gray_flag_test","5d3a2fa8":"freq_df = test_df.groupby([\"is_color\"])[\"is_color\"].count()\nfreq_df.plot(kind='bar', figsize=(10,5))\nplt.xticks(np.arange(2), ['Gray', 'Color'])\nplt.title(\"Color\")\nplt.show()","a07a3460":"color_test_df = test_df[test_df['is_color'] == True]\ngrah_test_df = test_df[test_df['is_color'] == False]","aeb1b9a8":"color_test_df.to_csv(\"test_color.csv\", index=False)\ngrah_test_df.to_csv(\"test_gray.csv\", index=False)","ddd41646":"### Test data","793a212a":"### Training data","4ecf0ed4":"## Separating gray and color image\nThis kernel explores class imbalance between gray and color images. <br>\nThe proportion of \"new whale\" class is considerably different between gray and color images. <br>\nSo, I seperated training and test images according to gray and color images. <br>\nThis kernel could be useful for someone who want to make each model of gray and color images. <br>","c9d1761a":"### Examples of color and gray image","2c9f1751":"### Class distribution "}}