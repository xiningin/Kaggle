{"cell_type":{"851ebfab":"code","f982e4b0":"code","ffcbd2a3":"code","a052f54d":"code","44abb34e":"code","dbc94e28":"code","3c6ac2e1":"code","05d48ce7":"code","44cae11a":"code","66a8f0ec":"code","e0ec6cf5":"code","d654d9d4":"code","ff9dba71":"code","d3e773fb":"code","65172d9d":"code","c5c88e83":"code","1b1b0d37":"code","fec7eba2":"code","ef27ab40":"code","dbea9b93":"code","18c90ecd":"code","30cc7c35":"code","8741f72b":"code","84bd0fe4":"code","42c83c9e":"code","fdeb7dce":"code","434f3b98":"code","3fdff06a":"code","6fe78aaa":"code","5a379bd4":"code","15eaeab3":"code","2e0433fc":"code","09f68eba":"code","037ccdd1":"code","4701ff72":"code","50500fa3":"markdown","e301ebb8":"markdown","87c5dd95":"markdown","5341f3c9":"markdown","40b70d32":"markdown","926efa1f":"markdown","c4053c52":"markdown","feaeb85c":"markdown","446db0cd":"markdown","ecd6ec7c":"markdown","52d8066d":"markdown","07ad6856":"markdown","ffc509ad":"markdown","a7f70605":"markdown","0de5456f":"markdown","a4e5e4c5":"markdown","38077a5a":"markdown","eda91fe0":"markdown","cc340259":"markdown","071aa8bd":"markdown","c94f235a":"markdown","52fa8473":"markdown","7160b142":"markdown","242a966f":"markdown","8b11d5e9":"markdown"},"source":{"851ebfab":"import numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")","f982e4b0":"data = pd.read_csv(\"..\/input\/atividade-3-pmr3508\/train.csv\")\ndata.head()","ffcbd2a3":"data.shape","a052f54d":"corrMatrix = np.array(data.corr())\nfeatures = data.columns.values.tolist()\n\nfig, ax = plt.subplots(figsize=(9,9))\nim = ax.imshow(corrMatrix)\n\nax.set_xticks(np.arange(len(features)))\nax.set_yticks(np.arange(len(features)))\nax.set_xticklabels(features)\nax.set_yticklabels(features)\n\nplt.setp(ax.get_xticklabels(), rotation=45, ha=\"right\",rotation_mode=\"anchor\")\n\nfor i in range(len(features)):\n    for j in range(len(features)):\n        text = ax.text(j,i,round(corrMatrix[i,j],2),ha=\"center\",va=\"center\",color=\"w\",size=18)\n\nax.set_title(\"Matriz de correla\u00e7\u00e3o da base de dados\")\nfig.tight_layout()\nplt.show()","44abb34e":"newData = data.drop([\"Id\",\"latitude\",\"longitude\"],axis=1)","dbc94e28":"newData[\"avg_rooms\"] = newData.total_rooms\/newData.households\nnewData[\"avg_bedrooms\"] = newData.total_bedrooms\/newData.households\nnewData[\"avg_inhabitants\"] = newData.population\/newData.households","3c6ac2e1":"newCorrMatrix = np.array(newData.drop([\"total_rooms\",\"total_bedrooms\",\"population\"],axis=1).corr())\n\nfig, ax = plt.subplots(figsize=(9,9))\nim = ax.imshow(newCorrMatrix)\nfeatures = newData.drop([\"total_rooms\",\"total_bedrooms\",\"population\"],axis=1).columns.values.tolist()\n\nax.set_xticks(np.arange(len(features)))\nax.set_yticks(np.arange(len(features)))\nax.set_xticklabels(features)\nax.set_yticklabels(features)\n\nplt.setp(ax.get_xticklabels(), rotation=45, ha=\"right\",rotation_mode=\"anchor\")\n\nfor i in range(len(features)):\n    for j in range(len(features)):\n        text = ax.text(j,i,round(newCorrMatrix[i,j],2),ha=\"center\",va=\"center\",color=\"w\",size=18)\n\nax.set_title(\"Matriz de correla\u00e7\u00e3o com as features auxiliares\")\nfig.tight_layout()\nplt.show()","05d48ce7":"x = np.array(newData.median_age)[0:1000]\ny = np.array(newData.median_house_value)[0:1000]\nfig, ax = plt.subplots(figsize=(9,9))\nax.scatter(x,y)","44cae11a":"fig, ax = plt.subplots(figsize=(9,9))\nax.hist(np.array(newData.avg_rooms),range=(0,20),color=\"xkcd:aquamarine\")","66a8f0ec":"roomData = newData[(newData.avg_rooms>=7)][(newData.avg_rooms<=20)]\nx = np.array(roomData.avg_rooms)\ny = np.array(roomData.median_house_value)\nfig, ax = plt.subplots(figsize=(9,9))\nax.scatter(x,y,color=\"xkcd:aquamarine\")","e0ec6cf5":"x = np.array(newData.median_income)[0:1000]\ny = np.array(newData.median_house_value)[0:1000]\nfig, ax = plt.subplots(figsize=(9,9))\nax.scatter(x,y,color=\"xkcd:plum\")","d654d9d4":"x = np.array(newData.avg_rooms)\nfig, ax = plt.subplots(figsize=(9,9))\nax.boxplot(x,vert=False)","ff9dba71":"trainData = newData[(newData.avg_rooms<=10)]\nxTrain = trainData.drop([\"median_house_value\"],axis=1)\nyTrain = trainData.median_house_value\nxTrain.head()","d3e773fb":"from sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.model_selection import GridSearchCV","65172d9d":"knn = KNeighborsRegressor()\nknn.get_params()","c5c88e83":"param_grid = {\"n_neighbors\":[i for i in range(1,31)],\"weights\":[\"uniform\",\"distance\"],\"p\":[1,2]}\ngrid = GridSearchCV(knn,param_grid,cv=10)","1b1b0d37":"grid.fit(xTrain,yTrain)\nprint(grid.best_estimator_)\nprint(grid.best_score_)","fec7eba2":"knn = grid.best_estimator_","ef27ab40":"from sklearn.linear_model import Ridge","dbea9b93":"ridge = Ridge()\nridge.get_params()","18c90ecd":"param_grid2 = {\"alpha\":np.linspace(0.5,10.5,101).tolist()} \ngrid2 = GridSearchCV(ridge,param_grid2,cv=10)","30cc7c35":"grid2.fit(xTrain,yTrain)\nprint(grid2.best_estimator_)\nprint(grid2.best_score_)","8741f72b":"ridge = grid2.best_estimator_","84bd0fe4":"from sklearn.linear_model import Lasso","42c83c9e":"lasso = Lasso()\nlasso.get_params()","fdeb7dce":"param_grid3 = {\"alpha\":np.linspace(0.5,5.5,51).tolist(),\"normalize\":[True,False]}\ngrid3 = GridSearchCV(lasso,param_grid3,cv=10)","434f3b98":"grid3.fit(xTrain,yTrain)\nprint(grid3.best_estimator_)\nprint(grid3.best_score_)","3fdff06a":"lasso = grid3.best_estimator_","6fe78aaa":"testRaw = pd.read_csv(\"..\/input\/atividade-3-pmr3508\/test.csv\")\nID_list = testRaw.Id.tolist()\ntestRaw[\"avg_rooms\"] = testRaw.total_rooms\/testRaw.households\ntestRaw[\"avg_bedrooms\"] = testRaw.total_bedrooms\/testRaw.households\ntestRaw[\"avg_inhabitants\"] = testRaw.population\/testRaw.households\ntestData = testRaw.drop([\"Id\",\"latitude\",\"longitude\"],axis=1)\ntestData.head()","5a379bd4":"knn.fit(xTrain,yTrain)\npred_knn = knn.predict(testData).tolist()","15eaeab3":"pd.DataFrame({\"Id\":ID_list,\"median_house_value\":pred_knn}).to_csv(\"pred_knn.csv\",index=False)","2e0433fc":"ridge.fit(xTrain,yTrain)\npred_ridge = ridge.predict(testData).tolist()","09f68eba":"pd.DataFrame({\"Id\":ID_list,\"median_house_value\":pred_ridge}).to_csv(\"pred_ridge.csv\",index=False)","037ccdd1":"lasso.fit(xTrain,yTrain)\npred_lasso = lasso.predict(testData).tolist()","4701ff72":"pd.DataFrame({\"Id\":ID_list,\"median_house_value\":pred_lasso}).to_csv(\"pred_lasso.csv\",index=False)","50500fa3":"Finalmente, visualizamos a rela\u00e7\u00e3o entre a vari\u00e1vel alvo e a feature com a qual apresentou maior correla\u00e7\u00e3o: a renda m\u00e9dia dos habitantes da regi\u00e3o.","e301ebb8":"Buscamos, agora, otimizar os hiperpar\u00e2metros do regressor atrav\u00e9s do m\u00e9todo GridSearch.","87c5dd95":"Criando as mesmas vari\u00e1veis para a base de teste, temos:","5341f3c9":"# Se\u00e7\u00e3o 3: Implementa\u00e7\u00e3o de regress\u00e3o Ridge","40b70d32":"Para o regressor Ridge:","926efa1f":"Vemos acima que podemos retirar quaisquer pontos em que avg_rooms > 10. Logo, a base de dados que ser\u00e1 efetivamente usada para treinar os classificadores \u00e9:","c4053c52":"Curiosamente, o efeito observado \u00e9 o oposto do esperado: uma m\u00e9dia de c\u00f4modos maior que 10 indica um valor mais baixo do lote.","feaeb85c":"Para o regressor kNN:","446db0cd":"Em observa\u00e7\u00f5es n\u00e3o inclu\u00eddas acima, percebemos que h\u00e1 pontos com m\u00e9dia de c\u00f4modos (avg_rooms) muito grande. Para entender quais outliers devemos retirar, podemos visualizar a distribui\u00e7\u00e3o dessa feature com um boxplot:","ecd6ec7c":"# Se\u00e7\u00e3o 5: Tratamento da base de teste","52d8066d":"# Se\u00e7\u00e3o 1: An\u00e1lise da base de dados","07ad6856":"# Se\u00e7\u00e3o 6: Previs\u00e3o","ffc509ad":"# Se\u00e7\u00e3o 4: Implementa\u00e7\u00e3o de regress\u00e3o Lasso ","a7f70605":"N\u00e3o parece haver alguma rela\u00e7\u00e3o n\u00e3o-linear. Contudo, percebemos que a maior parte dos lotes de maior valor tem idade superior a 30 anos.","0de5456f":"Analisemos, agora, os valores t\u00edpicos para a m\u00e9dia de c\u00f4modos e quartos:","a4e5e4c5":"O procedimento utilizado para os dois pr\u00f3ximos regressores ser\u00e1 perfeitamente an\u00e1logo.","38077a5a":"Observamos, com maior detalhe, a depend\u00eancia entre a idade dos lotes e seu valor, escolhendo alguns dos pontos:","eda91fe0":"Para o regressor Lasso:","cc340259":"A \u00fanica vari\u00e1vel que possui correla\u00e7\u00e3o significativa com a vari\u00e1vel alvo \u00e9 median_income (a mediana da renda dos moradores do local), o que n\u00e3o \u00e9 surpreendente. As vari\u00e1veis latitude e longitude (e, claro, ID) n\u00e3o apresentam influ\u00eancia qualquer sobre as outras vari\u00e1veis, logo, n\u00e3o ser\u00e3o utilizadas.","071aa8bd":"A vari\u00e1vel alvo \u00e9 mostrada na \u00faltima coluna (median_house_value). Como primeira an\u00e1lise, buscamos visualizar a correla\u00e7\u00e3o entre as features e a vari\u00e1vel alvo, e tamb\u00e9m entre si.","c94f235a":"Logo, implementamos o regressor que obteve melhor pontua\u00e7\u00e3o.","52fa8473":"\u00c9 razo\u00e1vel supor que uma m\u00e9dia de c\u00f4modos acima da faixa mediana (digamos, acima de 6) ter\u00e1 maior correla\u00e7\u00e3o com o valor do lote.","7160b142":"# Se\u00e7\u00e3o 2: Implementa\u00e7\u00e3o de regress\u00e3o kNN","242a966f":"Vemos, por\u00e9m, que as features que representam o n\u00famero de c\u00f4modos, quartos, habitantes e lotes na regi\u00e3o est\u00e3o fortemente correlacionadas. Podemos, ent\u00e3o, criar vari\u00e1veis adicionais que representem a densidade dessas features, e estudar como se correlacionam com a vari\u00e1vel alvo.","8b11d5e9":"Os valores dos lotes parecem estar artificialmente limitados por $500k. Fora isso, observamos uma depend\u00eancia entre as vari\u00e1veis, embora o n\u00edvel de ru\u00eddo seja alto. Essa ser\u00e1 a vari\u00e1vel mais importante na regress\u00e3o."}}