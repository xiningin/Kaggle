{"cell_type":{"6e0fbace":"code","118af8ed":"code","9a094264":"code","6ae12f62":"code","b8a41141":"code","c23a918d":"code","6e09b184":"code","650dccbe":"code","13118c95":"code","9c27ce29":"code","87a42734":"code","ae0b663d":"code","a9e27731":"code","9f1a3aa6":"code","aca09d8e":"code","071facb8":"code","f6feb65c":"code","39fbe31c":"code","1c5d2844":"code","9c894a6d":"code","49b7abe3":"code","569923e0":"code","539aec49":"code","da2be266":"markdown","6e527ba4":"markdown","e72a7635":"markdown","4c3da0a7":"markdown","c9b51d7a":"markdown"},"source":{"6e0fbace":"#Import the dependencies\nimport numpy as np \nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn import metrics\n","118af8ed":"1 # loading the csv data to panda DataFrame\ngold_data = pd.read_csv(\"..\/input\/gold-price-data\/gld_price_data.csv\")","9a094264":"#print first five rows in the data frame\ngold_data.head()","6ae12f62":"gold_data.tail()","b8a41141":"#number of rows and columns in data frame\ngold_data.shape","c23a918d":"# getting some basic information about data\ngold_data.info()","6e09b184":"#checking the no of missing value\ngold_data.isnull().sum()","650dccbe":"#statistical measures of data\ngold_data.describe()","13118c95":"correlation = gold_data.corr()","9c27ce29":"#constructing a heatmap to undestand the correlation\nplt.figure(figsize = (8,8))\nsns.heatmap(correlation, cbar=True, square=True, fmt='.1f',annot=True, annot_kws={'size':8}, cmap='Blues')","87a42734":"# Correlation Values GlD\nprint(correlation['GLD'])","ae0b663d":"#checking the disturbution of gold price\nsns.displot(gold_data['GLD'],color='green')","a9e27731":"x = gold_data.drop(['Date','GLD'],axis=1)\ny = gold_data['GLD']","9f1a3aa6":"print (x)","aca09d8e":"print (y)","071facb8":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state=2 )","f6feb65c":"regressor = RandomForestRegressor(n_estimators=100)","39fbe31c":"regressor.fit(x_train,y_train)","1c5d2844":"# prediction on test data\ntest_data_prediction = regressor.predict(x_test)","9c894a6d":"print(test_data_prediction)","49b7abe3":"# R square value\nerror_score = metrics.r2_score(y_test, test_data_prediction)\nprint(\"R square  error : \", error_score)","569923e0":"y_test = list(y_test)","539aec49":"plt.plot(y_test, color='blue', label = 'Actual Value')\nplt.plot(test_data_prediction, color='green', label='Predicted Value')\nplt.title('Actual price vs Predicted Price')\nplt.xlabel('Number of Values')\nplt.ylabel('GLD Price')\nplt.legend()\nplt.show","da2be266":"Compare the actual value","6e527ba4":"Splitting Into Training Data and Test Data","e72a7635":"Correlation Types\n\n1 = Positive\n\n2 = Negative","4c3da0a7":"Model Training : Random Forest Model","c9b51d7a":"Model Evaluation"}}