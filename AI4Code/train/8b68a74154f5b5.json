{"cell_type":{"d6019ba1":"code","2a16ee33":"code","6899682b":"code","45182241":"code","d73c2e21":"code","4af4a6a0":"code","53f6bf06":"code","acd7ff82":"code","ea9a3d32":"code","a5584497":"code","818a28c5":"code","f8532994":"code","889e5342":"code","3d3706c1":"code","2a500d53":"code","9a7e9783":"code","904e5c35":"code","e3d8ccbf":"code","64b95d17":"code","ba2fd9e2":"code","2631bdbd":"code","918f9365":"code","59459079":"code","0e26b5bf":"code","181a8b03":"code","8ca363c5":"code","acb41f0b":"code","e3b00c67":"code","06ac41f9":"code","19a49da8":"code","241dc9b9":"code","91df848f":"code","8d274a2f":"code","7373fbb9":"code","13a04f06":"code","1777e38a":"code","98ec1907":"code","afb0b72e":"code","f3fba945":"code","3d9062e4":"code","4ead8684":"code","74494e92":"code","b2e2eabd":"code","907b8612":"code","9378c166":"code","f79cf7cd":"code","4342c231":"code","1a6f3d61":"code","ef3a48df":"code","3ea222df":"code","43774926":"code","06ee9d28":"code","8007ae96":"code","304a8270":"code","0cc3871d":"code","a6a84fe7":"code","912e0ae7":"code","ec6f2b01":"code","253ca0cb":"code","47bfabeb":"code","e93accee":"code","b55d2059":"code","b0ff2377":"code","6f70ad2d":"code","95d6bd85":"code","908d42b6":"code","6ebec530":"code","441f14f6":"code","a9571be0":"code","9419c1a2":"markdown","414c7cf5":"markdown","494190d1":"markdown","71366103":"markdown","7efdc73b":"markdown","c4f51947":"markdown","738d1f33":"markdown","44825e0b":"markdown","2627b9cb":"markdown","7f26420d":"markdown","4432e4f4":"markdown","de253d3d":"markdown","dabe8544":"markdown","309bbae9":"markdown","7079b66c":"markdown","9f42d8e4":"markdown","65eaa155":"markdown","43296c8c":"markdown","bc0975f0":"markdown","90c50a84":"markdown","1b6a88e7":"markdown","85c94445":"markdown","f5b19689":"markdown","4047e9ce":"markdown","53ea551e":"markdown","8281408b":"markdown","e5545ebc":"markdown","d3c6d31a":"markdown","db97eb7e":"markdown","e2ad6839":"markdown","9f195351":"markdown","08a15fb9":"markdown","6c3b7fb8":"markdown","df24139b":"markdown","fcc90617":"markdown","15b06dc3":"markdown","c407c5d2":"markdown","431a4c67":"markdown","5d11ebfe":"markdown","148154ae":"markdown","19d5cbf7":"markdown","75eeed44":"markdown","adde4b29":"markdown","a85bfd21":"markdown","14e7a946":"markdown","f4395935":"markdown","400cd5f7":"markdown","6b95b08e":"markdown","a336ef52":"markdown","5cd4afa0":"markdown","0cfa2f75":"markdown","2857127e":"markdown","da2298ed":"markdown","2b7aae56":"markdown","fed20e10":"markdown","67a03cea":"markdown","11c443cf":"markdown","f412c1c6":"markdown","d5dc60f9":"markdown","8f3c2f44":"markdown","db395143":"markdown","75c08f1b":"markdown","54a95c4a":"markdown","a5c7cf8b":"markdown","59ce961b":"markdown","32ac98d7":"markdown","a27222eb":"markdown","6dd4881d":"markdown","073346a2":"markdown","ee08c8e7":"markdown","b1dbee52":"markdown","b7e3a896":"markdown"},"source":{"d6019ba1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats as stat\n\n%matplotlib inline\nsns.set()\n\n# To avoid Warning message inbetween ...\nimport warnings\nwarnings.filterwarnings('ignore')","2a16ee33":"company_tweet = pd.read_csv('\/kaggle\/input\/tweets-about-the-top-companies-from-2015-to-2020\/Company_Tweet.csv')\ntweet = pd.read_csv('\/kaggle\/input\/tweets-about-the-top-companies-from-2015-to-2020\/Tweet.csv')\ncompany = pd.read_csv('\/kaggle\/input\/tweets-about-the-top-companies-from-2015-to-2020\/Company.csv')\ncompany_value = pd.read_csv('\/kaggle\/input\/values-of-top-nasdaq-copanies-from-2010-to-2020\/CompanyValues.csv')","6899682b":"# Input data files are available in the read-only \"..\/input\/\" directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","45182241":"#Quick Analysis on Dataset : DataTypes, Rows and Columns ,Null values, Unique values ...\ndef quick_analysis(df):\n    print(\"Data info:\")\n    print(df.info())\n    print(\"-------------****----------------\\n\\nData Types:\")\n    print(df.dtypes)\n    print(\"-------------****----------------\\n\\nRows and Columns:\")\n    print(df.shape)\n    print(\"-------------****----------------\\n\\nColumn names:\")\n    print(df.columns)\n    print(\"-------------****----------------\\n\\nNull Values:\")\n    print(df.apply(lambda x: sum(x.isnull()) \/ len(df)))\n    print(\"-------------****----------------\\n\\nUnique values:\")\n    print(df.nunique())\n    print(\"-------------****----------------\\n\\nDescribes:\")\n    print(df.describe())\n    ","d73c2e21":"def get_eda_features(df):\n    #Visual Exploratory Data Analysis (EDA) And Your First Model\n    #EDA on Feature Variables\n    print(list(set(df.dtypes.tolist())))\n    df_object = df.select_dtypes(include=[\"object\"]).copy()\n    df_int = df.select_dtypes(include=['int64']).copy()\n\n    categorical = df_object.columns\n    numerical = df_int.columns\n\n    print(\"Datashape of Object Dataframe:\",df_object.shape)\n    print(\"Datashape of Interger Dataframe:\",df_int.shape)\n    return categorical, numerical","4af4a6a0":"def univariate_analysis(df, categorical, row_num=1, col_num=2):\n    fig,ax = plt.subplots(row_num,col_num, figsize=(20, 5*row_num))\n    for variable,subplot in zip(categorical,ax.flatten()):\n        sns.countplot(df[variable],ax=subplot)\n        for label in subplot.get_xticklabels():\n            label.set_rotation(20)","53f6bf06":"def univariate_analysis_on_numerial(df, numerical, row_num=1,col_num=2):\n    df[numerical].hist(bins=50,figsize=(16 + (2*row_num),20),layout=(8, col_num))","acd7ff82":"def column_distplot(df, column_name, bins=50, describe=True):\n    if describe:\n        print(df[column_name].describe())\n    plt.figure(figsize=(9, 8))\n    sns.distplot(df[column_name], color='g', bins=bins, hist_kws={'alpha': 0.4});","ea9a3d32":"quick_analysis(company)\ncompany.head()","a5584497":"company_categorial, company_numerical = get_eda_features(company)","818a28c5":"company_categorial","f8532994":"company_numerical","889e5342":"univariate_analysis(company, company_categorial, row_num=1, col_num=2)","3d3706c1":"quick_analysis(company_tweet)\ncompany_tweet","2a500d53":"quick_analysis(company_value)\ncompany_value.head()","9a7e9783":"company_value_categorial, company_value_numerical = get_eda_features(company_value)","904e5c35":"company_value_categorial","e3d8ccbf":"company_value_categorial = company_value_categorial.drop(\"day_date\")","64b95d17":"univariate_analysis(company_value, company_value_categorial, row_num=1, col_num=2)","ba2fd9e2":"company_value_numerical","2631bdbd":"column_distplot(company_value, \"volume\")","918f9365":"# For get small data to testing\n# tweet = tweet[:10000]","59459079":"quick_analysis(tweet)\ntweet.head()","0e26b5bf":"tweet_categorial, tweet_numerical = get_eda_features(tweet)","181a8b03":"tweet_categorial","8ca363c5":"tweet['writer'].describe()","acb41f0b":"tweet['body'].str.split().str.len()","e3b00c67":"body_len = tweet['body'].str.split().str.len()\nbody_len.describe()","06ac41f9":"body_len.hist(figsize=(10, 5), bins=30, xlabelsize=8, ylabelsize=8)","19a49da8":"tweet_numerical","241dc9b9":"tweet_numerical = tweet_numerical.drop(['tweet_id'])\n\ntweet_numerical","91df848f":"univariate_analysis_on_numerial(tweet, tweet_numerical)","8d274a2f":"tweet_df = pd.merge(company_tweet , tweet , on=\"tweet_id\", how= \"inner\")\ntweet_df.head(5)","7373fbb9":"company_value.head(5)","13a04f06":"tweet_df[\"total_engangement\"] = tweet_df[\"comment_num\"] + tweet_df[\"retweet_num\"] + tweet_df[\"like_num\"]","1777e38a":"column_distplot(tweet_df, column_name=\"total_engangement\")","98ec1907":"engagement_threshold = 40","afb0b72e":"tweet_df = tweet_df[tweet_df[\"total_engangement\"] > engagement_threshold]","f3fba945":"tweet_df['post_date'] = pd.to_datetime(tweet_df['post_date'], unit='s')","3d9062e4":"tweet_df['day_date'] = pd.to_datetime(tweet_df['post_date'].apply(lambda date: date.date()))","4ead8684":"tweet_df = tweet_df.sort_values(by=\"day_date\")","74494e92":"stock_df = company_value\n\nstock_df['day_date']  = pd.to_datetime(stock_df['day_date'])\n\nstock_df.sample(5)","b2e2eabd":"start_day = min(tweet_df['day_date'])\nprint(f\"Start day: {start_day}\")\n\nend_day = max(tweet_df['day_date'])\nprint(f\"End day: {end_day}\")","907b8612":"stock_df = stock_df[(stock_df['day_date'] >= start_day) & (stock_df['day_date'] <= end_day)]","9378c166":"stock_df = stock_df.sort_values(by=\"day_date\")","f79cf7cd":"tweet_df = tweet_df.drop(['tweet_id', 'post_date', 'comment_num', 'retweet_num', 'like_num'], axis=1)","4342c231":"print(tweet_df.info())\nprint()\ntweet_df.sample(5)","1a6f3d61":"print(stock_df.info())\nprint()\nstock_df.sample(5)","ef3a48df":"import nltk                             \n# from nltk.corpus import twitter_samples                            \n# from nltk.corpus import stopwords \n# from nltk.stem import PorterStemmer\n# from nltk.tokenize import TweetTokenizer  \n\nimport random  \nimport re                     \nimport string\n\n# nltk.download('stopwords')","3ea222df":"tweets = tweet_df[\"body\"]\ntweets","43774926":"def remove_special_character(tweet):\n#     print(tweet)\n    # remove the old style retweet text \"RT\"\n    tweet = re.sub(r'^RT[\\s]+', '', tweet)\n\n    # remove hyperlinks\n    tweet = re.sub(r'https?:\\\/\\\/.*[\\r\\n]*', '', tweet)\n\n    # remove hashtags. only removing the hash # sign from the word\n    tweet = re.sub(r'#', '', tweet)\n\n    # remove single numeric terms in the tweet. \n    tweet = re.sub(r'[0-9]', '', tweet)\n    \n    return tweet","06ee9d28":"tweet_df[\"tweet\"] = tweet_df[\"body\"].apply(lambda tweet: remove_special_character(tweet))","8007ae96":"tweet_df[\"tweet\"] = tweet_df[\"tweet\"].str.lower()","304a8270":"tweet_df[[\"body\", \"tweet\"]].sample(10)","0cc3871d":"!pip install afinn","a6a84fe7":"from afinn import Afinn\nafinn = Afinn()","912e0ae7":"tweet_df['afinn_score'] = tweet_df['tweet'].apply(lambda tweet: afinn.score(tweet))\ntweet_df['afinn_score'].sample(5)","ec6f2b01":"!pip install vaderSentiment","253ca0cb":"from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer\nvanderSentimentAnalyzer = SentimentIntensityAnalyzer()","47bfabeb":"def getVanderScore(tweet):    \n    vs = vanderSentimentAnalyzer.polarity_scores(tweet)\n    score = vs['compound']\n    return score\n\ndef getVanderSentiment(score):    \n    if (score >= 0.05): \n        return \"Positive\"\n    \n    elif (score < 0.05 and score > -0.05):\n        return \"Neutral\"\n    \n    elif (score <= -0.05):    \n        return \"Negative\"\n    \n    return score","e93accee":"tweet_df['vander_score'] = tweet_df['body'].apply(lambda tweet: getVanderScore(tweet))\ntweet_df['vander_sentiment'] = tweet_df['vander_score'].apply(lambda score: getVanderSentiment(score))\ntweet_df[['ticker_symbol', 'day_date', 'vander_score', 'vander_sentiment']].sample(10)","b55d2059":"import time\n\nfor ticker_symbol in tweet_df[\"ticker_symbol\"].unique():\n    \n    company_name = company[company[\"ticker_symbol\"] == ticker_symbol][\"company_name\"].iloc[0]\n    print(f\"Sentiment score of {company_name} company\")\n    sub_tweet_df = tweet_df[tweet_df[\"ticker_symbol\"] == ticker_symbol]\n    \n    column_distplot(sub_tweet_df, column_name=\"afinn_score\", bins=10, describe=False)\n    column_distplot(sub_tweet_df, column_name=\"vander_score\", bins=10, describe=False)\n    plt.show()\n    print(\"\\n\\n--------------\\n\\n\")\n","b0ff2377":"def sentiment_overtime(tweet_df, stock_df, title, score_column_name=\"score\"):\n    print(\"\\n\\n\")\n    fig = plt.figure(figsize=(24,10))\n    ax1 = fig.add_subplot()\n    ax2 = ax1.twinx()\n    \n#     ax1.plot(tweet_df['day_date'], tweet_df[score_column_name], label='Tweets Sentiment')\n    ax1.vlines(tweet_df['day_date'], 0, tweet_df[score_column_name]) \n    ax1.axhline(y=0, color='r', linestyle='-')\n\n    \n    ax2.plot(stock_df['day_date'], stock_df['close_value'], color='orange', label='Stock price')\n    ax2.set_title(\"Effects of \" + title +\" tweets to stock price\")\n    lines, labels = ax1.get_legend_handles_labels()\n    lines2, labels2 = ax2.get_legend_handles_labels()\n    \n    ax1.set_xlabel('Day date')\n    ax1.set_ylabel('Sentiment Afinn score', color=\"blue\")\n    \n    ax2.legend(lines + lines2, labels + labels2, loc=0)\n    \n#     center_y = max(stock_df['close_value']) - min(stock_df['close_value']) \/ 2\n#     print(center_y)\n    \n    plt.show()","6f70ad2d":"ticker_symbols =  tweet_df[\"ticker_symbol\"].unique()","95d6bd85":"def draw_stock_price_with_sentiment(tweet_df, stock_df, start_day, end_day, score_name=\"score\"):\n    for ticker_symbol in ticker_symbols:\n        print(f\"Ticker symbol: {ticker_symbol}\")\n\n        sub_company = company[company[\"ticker_symbol\"] == ticker_symbol][\"company_name\"]\n        if len(sub_company) != 1:\n            continue\n\n        company_name = sub_company.iloc[0]\n    #     print(company_name)\n\n        print(f\"Stock price of {company_name} company with ticker symbol is {ticker_symbol}\")\n\n        sub_tweet_df = tweet_df[tweet_df[\"ticker_symbol\"] == ticker_symbol]\n        sub_tweet_df = sub_tweet_df[(sub_tweet_df[\"day_date\"]>=pd.to_datetime(start_day)) & (sub_tweet_df[\"day_date\"]<=pd.to_datetime(end_day))]\n    #     print(sub_tweet_df[:5])\n        sub_stock_df = stock_df[stock_df[\"ticker_symbol\"] == ticker_symbol]\n        sub_stock_df = sub_stock_df[(sub_stock_df[\"day_date\"]>=pd.to_datetime(start_day)) & (sub_stock_df[\"day_date\"]<=pd.to_datetime(end_day))]\n\n    #     print(sub_stock_df[:5])\n        sentiment_overtime(sub_tweet_df, sub_stock_df, company_name, score_column_name=score_name)","908d42b6":"score_threshold = 5\ntmp_tweet_df = tweet_df[(tweet_df['afinn_score']<=-score_threshold) | (tweet_df['afinn_score']>=score_threshold)]\n# tmp_tweet_df = tweet_df\n\ndraw_stock_price_with_sentiment(tmp_tweet_df, stock_df,start_day= min(stock_df['day_date']), end_day= max(stock_df['day_date']), score_name=\"afinn_score\")\n","6ebec530":"start_day = \"2019-6-1\"\nend_day = \"2020-1-1\"","441f14f6":"score_threshold = 5\ntmp_tweet_df = tweet_df[(tweet_df['afinn_score']<=-score_threshold) | (tweet_df['afinn_score']>=score_threshold)]\ndraw_stock_price_with_sentiment(tmp_tweet_df, stock_df, start_day,end_day, score_name=\"afinn_score\")","a9571be0":"score_threshold = 0.85\ntmp_tweet_df = tweet_df[(tweet_df['vander_score']<=-score_threshold) | (tweet_df['vander_score']>=score_threshold)]\n\n\ndraw_stock_price_with_sentiment(tmp_tweet_df, stock_df, start_day, end_day, score_name=\"vander_score\")","9419c1a2":"**Describtion:**\n","414c7cf5":"There are **4336445** tweets from companies which two column tweet_id and ticket_symbol.\n\n**Attributes:**\n* **tweet_id**: Id of tweet post on Twitter\n* **ticker_symbol**: Symbol of comapany which is same with stock symbol of that company.","494190d1":"### Data Manipulation in the Dataset\nWe will keep two dataset which are **company_value** and **tweet** dataframe. And we will merge **company_tweet** and **tweet** dataframe via *tweet_id* to new dataframe which is **tweet_df** dataframe.\n","71366103":"We just have a \"volume\" column which is numberial type. Let's check to get more information!","7efdc73b":"Currently, we can obtain some information from charts that present stock price with a sentiment score. However, most of them are subjective judgments based on the individual evaluator's analytical ability. So in the future, we need a way to evaluate specific correlations through different measures.\n\nBesides, to achieve an objective assessment, it is also very important to choose an algorithm to calculate the sentiment level through text. Instead of using Afinn and Vander algorithms, we can consider other methods such as XGBoost, Naive Bayes to compare the different results of each method.","c4f51947":"With the above chart, we can see that the volume are skewed right and some outliers lies above ~ $2*10^8$.","738d1f33":"We will plot the histogram of total engagement on tweets and filter the low-impact tweet.","44825e0b":"To obtain high-impact tweets, we will drop rows which has a value less than **engangement_threshold** count. \n\n**engagement_threshold** is a heuristic parameter that we chose.","2627b9cb":"# Preprocessing","7f26420d":"**Attributes:**\n- **ticker_symbol:**\n- **company_name:**","4432e4f4":"We only keep the value of company_value if it is greater than start_day and less than end_day of tweet_df","de253d3d":"Next we will explore the numberial type column of dataset.","dabe8544":"##### Convert to lowercase\nWe will also convert all words to lowercase.","309bbae9":"# Data exploration\n- Visualize\n- Find missing\n- Look for correlations","7079b66c":"#### Afinn algorithm","9f42d8e4":"**Background**  \nInvestor sentiment is considered one of the critical factors to determine an investor's assets in the process of trading or holding. Sentiment can be affected through technical analysis from indicators' signals and fundamental analysis through survey data and market news. With the current development of social networks, it has been contributing directly to investors by postings. Even some companies or celebrities use these tools to manipulate the market and the crowd through their posts which will cause various consequences such as lousy influence and shake the confidence of investors to make the right decision and manage risk effectively. If it is possible to answer questions such as how information or content on social media will affect prices, it will signif icantly help make decisions to minimize risk and prof it optimization.","65eaa155":"#### Tweet dataset","43296c8c":"- We will drop some column which are \"post_date\", \"tweet_id\", \"comment_num\", \"retweet_num\", and \"like_num\". Because we do not use it anymore.","bc0975f0":"![image.png](attachment:cf1ef808-61ff-46b4-a125-e121cf20ed4a.png)","90c50a84":"**Day date**\n\nConverting \"post_date\" in *tweet_df* and \"day_date\" in *company_value* to datetime type","1b6a88e7":"Because we just care about day of post then compare with stock data in day. So we will get create new columne which names \"day_date\".","85c94445":"The \"day_date\" colume is not the categorial type. It is a datetime type. We will convert to datetime type later, but we will drop \"day_date\" colume for now to visulize data first.","f5b19689":"#### Text preprocessing for Body tweet in tweet_df\n\nThere are many text preprocessing which is produced data input for next step such likes Machine learning task.\n* Tokenizing the string\n* Lowercasing\n* Removing stop words and punctuation\n* Stemming\n* Lemmatization\n\nBut in this project, we only use the lowercase processing. Because we will use Affin algorithm which has text processing itself and use the whole sentences to gain sentiment score.","4047e9ce":"We have \"tweet_id\" column in **tweet** dataset which is mapped to \"tweet_id\" in **company_tweet** dataset","53ea551e":"Dataset after cleaning like this:","8281408b":"**Total engangement**\n\nWe suppose that total of comment number, retweet number, and like number shows the impact of that tweet on the community. Because only influential articles can affect the stock price of that company. \n\nSo we will add all total of comment, number, and like to a new column which has a new name **total_engangement**.","e5545ebc":"### Vader Sentiment","d3c6d31a":"Twitter has an impact on the stock market, but it occurs that if your tweet becomes viral, stock prices will rise or fall\u200b","db97eb7e":"We do not visualize the overview of \"writer\" and \"body\" columns likes above due to they are not necessary.\n\nBut there are two information which need to know here. That are:\n- How many writers tweet their posts?\n- What is the average length of the sentences in each post?","e2ad6839":"**Attributes:**\n- **ticker_symbol**:\n- **day_date**:\n- **close_value**:","9f195351":"#### Company tweet","08a15fb9":"stock_df needs to sort by \"day_date\"","6c3b7fb8":"Quick analysis","df24139b":"#### Afinn algorithm","fcc90617":"**Sentiment overtime function**\n\nThis function will plot sentiment score with stock price of a company. It can bring some insight information from chart.","15b06dc3":"#### Company values\nThis dataset is presented price of stock of the companies.","c407c5d2":"**Comments**: Company dataset have 5 companies. The google Inc have two ticket symbol which are GOOG and GOOGL.\n\n\"GOOG and GOOGL are stock ticker symbols for Alphabet (the company formerly known as Google). ... The company created two classes of shares in April 2014. The reason for the split between the two classes of shares was to preserve the control of founders Larry Page and Sergey Brin.\"\n\nRef: https:\/\/www.investopedia.com\/ask\/answers\/052615\/whats-difference-between-googles-goog-and-googl-stock-tickers.asp#:~:text=GOOG%20and%20GOOGL%20are%20stock,company%20formerly%20known%20as%20Google\n","431a4c67":"# References","5d11ebfe":"### Future work","148154ae":"We will ignore \"tweet_id\", \"post_date\" columns.","19d5cbf7":"### Data cleaning","75eeed44":"##### Remove hyperlinks, Twitter marks and styles\n","adde4b29":"## Afinn\nAfinn is the simplest yet popular lexicons used for sentiment analysis developed by Finn \u00c5rup Nielsen. It contains 3300+ words with a polarity score associated with each word. In python, there is an in-built function for this lexicon.","a85bfd21":"**Comments**","14e7a946":"### Draw chart","f4395935":"Set a specific time range","400cd5f7":"# Model Building\n* Choosing model\n* Training model\n* Evaluating result","6b95b08e":"### Load Libraries","a336ef52":"**Abtract**  \nThe development of social networks has made it possible for companies or market makers to control the stock market through their news and postings. Therefore, assessing and analyzing the inf luence of information on social networks on investors will help make decisions and manage risk more eff ectively. In this project, Twitter's sentiment analysis will be exploited to determine how much influence it has on the market prices of the top companies.","5cd4afa0":"* https:\/\/www.kaggle.com\/darrenljw\/how-does-twitter-affect-the-stock-market\n* https:\/\/www.kaggle.com\/redwankarimsony\/nlp-101-tweet-sentiment-analysis-preprocessing\n* https:\/\/www.kaggle.com\/faiqali1\/how-twitter-affects-the-stock-market\/notebook\n* https:\/\/github.com\/you915\/Sentiment-Analysis-of-Twitter-Data-for-predicting-Apple-stock-price","0cfa2f75":"Because there are no any interger variable. So, we do not plot \"Univariate Analysis on: Numerical Variables\"\n\nWe just show categorical variables of Company dataset to obtain overview.","2857127e":"**Problem**  \nThe \"key scientific question\" is \"How does Twitter af f ect the stock market?\"In this project, I will try to f ind tweets showing negative, positive or neutral sentiments about a few companies and check the time series plot of the stock price of the sentiment analyze.\n\nTo classif y the sentiments of the given tweets to determine which tweets are showing a negative, positive or neutral sentiment, I will use VADER-Sentiment-Analysis.Furthermore, I will compare how the price of the company varies after the post was made.","da2298ed":"Because the overview of chart is hard to give us useful information. So we will zoom to in specific time.\n\n","2b7aae56":"#### Company dataset","fed20e10":"### Load the datasets","67a03cea":"# How Twitter affects the Stock Marker","11c443cf":"Before draw chart with Vander score. We will filter all score in range [-0.05, 0.05]. Because we consider the vander score in that range is neutral which is not affect to stock price.","f412c1c6":"With **company_value** and **tweet_df** dataframe, we will join them by \"ticker_symbol\" column with \"post_date\" in **tweet_df** and \"day_date\" in **company_value** correspondingly when analyzing.","d5dc60f9":"#### Tweet dataset","8f3c2f44":"**Attributes**\n- **id**:","db395143":"### Exploratory Data Analysis (EDA)","75c08f1b":"### Discussion\n\nIn general, the prices of shares of the two big companies Microsoft and Tesla are affected by Twitter if they tend to be positive or negative. The remaining 3 stocks of Apple, Amazon and Google have no or very little volatility compared to the news.\n\nThis can be seen on the chart as the popularity of the social network Twitter has affected the value of the stock.\nIf there isn't a lot of engagement or the Twitter page isn't active, Twitter doesn't affect pricing either.","54a95c4a":"# Data analysis\n- Visualize results (Chart, graph)\n- Correlation Matrix : With respect to Depedent variable\n- Analysis results","a5c7cf8b":"# Conclusion\n \n\n","59ce961b":"---------------------","32ac98d7":"**Our approach**\n1. EDA\n2. Preprocessing\n3. Model building\n4. Evaluate and Analysis","a27222eb":"So the average length of the sentences is **X** words.","6dd4881d":"**Team**\n\n* GONG, Ziting\n* HOANG, Xuan Truong\n* Yudai, Yamamoto","073346a2":"We have **X** author with total post is **Y** posts. ","ee08c8e7":"**Objective**  \nThe purpose of analyzing Twitter's influence on market prices is to help individual investors or possibly hedge funds have an accurate view in making their investment decisions.Moreover, if the accuracy of the analysis is high, it is possible to predict the market price, the traps set by the market makers, the kind of negative sentiment when investing, which will bring big prof its and minimize risks.From a more general perspective, with data on the internet such as articles, social networks, news, videos, by data mining we can determine if a piece of writing is positive, negative or neutral. It is also known as opinion mining, giving the opinion or attitude of the speaker, the writer.\n\nSentiment analysis also facilitates businesses such as their marketing campaigns, brands; politics such as determining the consistency between the policies and actions of politicians; the actions of the community such as: predicting dangerous actions that are about to explode.","b1dbee52":"#### Company value dataset","b7e3a896":"#### Vander algorithm"}}