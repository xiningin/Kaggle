{"cell_type":{"7ccd6b39":"code","7c0d50bd":"code","377ef53e":"code","43d12924":"code","6e229b0b":"code","ba130ad9":"code","389fd42c":"code","ec27271d":"code","132ace82":"code","5d1a6391":"code","8d7af671":"code","fd00bd2b":"code","8f5f48e5":"code","55de0497":"code","1e0c2d44":"markdown","c3c26753":"markdown","2fb05d32":"markdown","f50a7305":"markdown","f8f2d104":"markdown","ea3ceefc":"markdown","2e9d5768":"markdown","a7fc7060":"markdown"},"source":{"7ccd6b39":"import numpy as np\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn-white')\nfrom sklearn import metrics\nimport seaborn as sns\nimport pandas as pd\nfrom sklearn.model_selection import StratifiedKFold,KFold\nfrom functools import partial\nfrom sklearn.metrics import accuracy_score,confusion_matrix,classification_report","7c0d50bd":"train_data = '..\/input\/digit-recognizer\/train.csv'\ntest_data = '..\/input\/digit-recognizer\/test.csv'\nsample = '..\/input\/digit-recognizer\/sample_submission.csv'","377ef53e":"digitData = pd.read_csv(train_data)\ndigitData.shape","43d12924":"digitData['label'].unique()","6e229b0b":"cmap = sns.color_palette(\"rocket\", as_cmap=True)\ndigitData.label.value_counts().plot(kind ='bar',cmap = cmap)\nplt.xlabel('Digits')\nplt.ylabel('No. of Values')\nplt.title('Value Counts')\nplt.show()","ba130ad9":"Y = digitData['label']\nX = digitData.drop('label',axis =1).values","389fd42c":"from sklearn.ensemble import RandomForestClassifier","ec27271d":"import optuna\ndef Optimization(trail, X, y):\n    criterion = trail.suggest_categorical(\"criterion\" , ['gini','entropy'])\n    max_depth = trail.suggest_int(\"max_depth\" , 3,15)\n    n_estimators = trail.suggest_int(\"n_estimators\" , 100,600)\n    max_features = trail.suggest_uniform(\"max_features\" , 0.01 , 1.0)\n\n    model = RandomForestClassifier(\n        n_estimators = n_estimators,\n        max_depth = max_depth,\n        max_features = max_features,\n        criterion= criterion\n\n    )\n    skf = StratifiedKFold(n_splits=5, random_state=None, shuffle=False)\n    for train_index, test_index in skf.split(X, y):\n        X_train,X_test = X[train_index],X[test_index]\n        y_train,y_test = y[train_index],y[test_index]\n    \n    model.fit(X_train,y_train)\n    pred = model.predict(X_test)\n    return accuracy_score(y_test,pred)\n    ","132ace82":"optimization_function = partial(\n    Optimization,\n    X=X,\n    y=Y\n)\nstudy = optuna.create_study(direction=\"minimize\")\nstudy.optimize(optimization_function,n_trials = 15)","5d1a6391":"rfc = RandomForestClassifier(criterion = 'gini', max_depth = 13, n_estimators = 332, max_features = 0.34844887659754137)\nrfc.fit(X,Y)","8d7af671":"test_df = pd.read_csv(test_data)\ntest_df.info()","fd00bd2b":"test = test_df.values\npred = rfc.predict(test)","8f5f48e5":"sub = pd.read_csv(sample)\nsub.drop('Label',axis=1,inplace=True)","55de0497":"sub['Label'] = pred\nsub.set_index('ImageId',inplace=True)\nsub.to_csv('newSub1.csv')","1e0c2d44":"    ---------------Loading Data---------------","c3c26753":"    ---------------Simple tutorial with RandomForestClassifier and Optuna---------------","2fb05d32":"    ---------------Training---------------","f50a7305":"    ---------------Using Optuna---------------","f8f2d104":"    ---------------Input Data For the Classification---------------","ea3ceefc":"    ---------------Visualization---------------","2e9d5768":"    ---------------Training Data---------------","a7fc7060":"    ---------------Model---------------"}}