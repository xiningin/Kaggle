{"cell_type":{"318430b6":"code","26b1191a":"code","1194186a":"code","133d2673":"code","cb8d3d69":"code","0c7f943c":"code","1770b608":"code","20d3b6ba":"code","43680a2d":"code","12c18338":"code","01560c83":"code","ea2e8c8e":"code","5b7c8a69":"code","561a401e":"code","fdef85d8":"code","7cfcbd60":"code","4c461a28":"code","801b8c66":"code","78e1efa8":"code","f438a7b9":"code","3723fda2":"code","59026edb":"code","f1b28cd9":"code","5e0b6f6a":"code","1d66f75d":"code","065f80f7":"code","06464345":"code","cbcfb4ac":"code","d7332ac0":"code","90affe0d":"code","637d6420":"code","44281141":"code","dd4a5b7a":"code","76f9ce71":"code","49785c14":"code","504dc0e7":"code","233631dc":"code","5f09838f":"code","82263740":"code","0c360844":"code","5e0e803f":"code","2d0361c2":"code","23e83988":"code","e06d59d5":"code","4b9203d4":"code","f48903e8":"code","dcf37229":"code","51d3ee73":"code","9d6bfcc8":"code","31273efe":"code","c37265dc":"code","bac86ed8":"code","fa174f1a":"code","d8fed206":"code","169d5562":"code","17c73d70":"code","004aa641":"code","0048501b":"code","fd003898":"code","00372b95":"code","856df1aa":"code","9403b529":"code","83368d26":"code","c1e18cc9":"code","7e308774":"code","748fd1e7":"code","6ae451ea":"code","9a04437f":"code","86d87a45":"code","d37d93a8":"code","352136c0":"code","c3614cfb":"code","0857029f":"code","748798a3":"code","ea8a084a":"markdown","14139b27":"markdown","a1efa394":"markdown","2526ab60":"markdown","20455cdd":"markdown","5cc4159d":"markdown","4020f368":"markdown","dee88627":"markdown","1ca302aa":"markdown","2ba58faf":"markdown","d288fed0":"markdown","5ce416f3":"markdown","4faae14b":"markdown","a9e283b7":"markdown","4a324a00":"markdown","632876db":"markdown","c64a3380":"markdown","19a7ea4d":"markdown","ec5cc983":"markdown","40cac205":"markdown","c5781f0a":"markdown","46fbb7b3":"markdown","af086f7d":"markdown","6c9b0123":"markdown","2a9bdd9e":"markdown","43fa4223":"markdown","3b4e294f":"markdown","51c168df":"markdown","15f45f6f":"markdown","b863af16":"markdown","13176296":"markdown","894918ac":"markdown","0e8f9da7":"markdown","23749e7e":"markdown","eb0c89b6":"markdown","6594b2e2":"markdown","b9cc412e":"markdown","df1779bc":"markdown","b0d5af11":"markdown","7ca3f10c":"markdown","b7c5a23e":"markdown","c9b73f99":"markdown","a1078178":"markdown","49204b3f":"markdown","7ba436a5":"markdown","bb11d77f":"markdown","c5093d8e":"markdown","d06b75a4":"markdown","820da711":"markdown","f0e98fa3":"markdown","ed0a095e":"markdown","28fed257":"markdown","5903faab":"markdown","79441f85":"markdown","d4cfc5f4":"markdown","4168ab6a":"markdown","e15443a7":"markdown","b2de9e4c":"markdown","39155fda":"markdown","44937e73":"markdown","085ba003":"markdown"},"source":{"318430b6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport datetime as dt\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","26b1191a":"df_date = pd.DataFrame({'date': ['day1', 'day2', 'day3'], 'Dow': ['0', '1', '2']})\n\ndf_point1= pd.DataFrame({'date': ['day1', 'day1', 'day1'],\n                         'ID': ['1', '2', '3'],\n                         'point': ['10', '20', '30']})\ndf_point2= pd.DataFrame({'date': ['day2', 'day2', 'day2'],\n                         'ID': ['1', '2', '3'],\n                         'point': ['10', '20', '30']})\ndf_point3= pd.DataFrame({'date': ['day3', 'day3', 'day3'],\n                         'ID': ['1', '2', '3'],\n                         'point': ['10', '20', '30']})","1194186a":"canadian_youtube = pd.read_csv(\"..\/input\/youtube-new\/CAvideos.csv\")\nbritish_youtube = pd.read_csv(\"..\/input\/youtube-new\/GBvideos.csv\")\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\")","133d2673":"data_all_moto = pd.read_csv(\"..\/input\/data-all-10\/data_all (10).csv\", parse_dates=['visit_date'])","cb8d3d69":"data = [[10,20],[30,40]] # \u30ea\u30b9\u30c8\ndf = pd.DataFrame(data)\ndf.columns = [\"score\",\"you\"] #\u3042\u3068\u3067\u540d\u79f0\u3092\u3064\u3051\u308b\ndf","0c7f943c":"df_truth = pd.concat(df_list, ignore_index=True)","1770b608":"v_ave_0 = 1\nv_ave_1 = 1\nv_ave_2 = 1\nv_ave_3 = 1\nv_ave_4 = 1\nv_ave_5 = 1\nv_ave_6 = 1\n\ncolumns =[\"v_ave_0\", \"v_ave_1\",\"v_ave_2\",\"v_ave_3\",\"v_ave_4\", \"v_ave_5\",\"v_ave_6\"]\n# [[]]\u306e\u5f62\u5f0f\u3067\u66f8\u304b\u3093\u3068\u3044\u304b\u3093\nv_ave_store = [[v_ave_0,v_ave_1,v_ave_2,v_ave_3,v_ave_4,v_ave_5,v_ave_6]]\nv_ave = pd.DataFrame(v_ave_store, columns=columns)\nv_ave","20d3b6ba":"# \u8996\u8074\u6570\u3068\u3044\u3044\u306d\u306e\u6570\u3092\u639b\u3051\u5408\u308f\u305b\u308b\u95a2\u6570\ndef calc(t):\n    views, likes = t\n    views_likes = views - likes\n    return views_likes","43680a2d":"# british_yotutube\u306e\u4e00\u756a\u53f3\u306e\u5217\u306b\u3001calc\u95a2\u6570\u3092\u304b\u3051\u305f\u5217\u3092\u8ffd\u52a0\u3059\u308b\nbritish_youtube.loc[:,\"views_likes\"] = canadian_youtube[[\"views\",\"likes\"]].apply(calc, axis=1)\nbritish_youtube.head()","12c18338":"canadian_youtube[\"views_likes\"] = canadian_youtube[\"views\"] * canadian_youtube[\"likes\"]\ncanadian_youtube[[\"views_likes\",\"views\",\"likes\"]].head()","01560c83":"canadian_youtube.drop(columns='views')\n# \u8907\u6570\u884c\u3092\u524a\u9664\u3057\u305f\u3044\u5834\u5408\u306f\ncanadian_youtube.drop(['views', 'likes'], axis=1).head()","ea2e8c8e":"left = canadian_youtube.set_index(['title', 'trending_date'])\nright = british_youtube.set_index(['title', 'trending_date'])\n\nleft.join(right, lsuffix='_CAN', rsuffix='_UK').head()","5b7c8a69":"# merge\u3092\u4f7f\u3063\u305f\u65b9\u304c\u3088\u3044\u6c17\u304c\u3059\u308b(join\u3060\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u5834\u5408\u304c\u3042\u3063\u305f)\n# reset_index\u3067index\u3092\u4f5c\u308a\u76f4\u3057\u3066\u30de\u30fc\u30b8\u3059\u308b\u306e\u304c\u3088\u3044\u304b\u3082\ndata_all_unique_all = data_all_unique_all.reset_index(drop=False)\ndate_df_merge = pd.merge(date_df, data_all_unique_all, on=\"index\")","561a401e":"# updf\u306e\u4e0b\u306bdown_df\u304c\u7d50\u5408\u3055\u308c\u308b\ndf_point_all = pd.concat([df_point1, df_point2, df_point3])\ndf_point_all","fdef85d8":"# DataFrame\u306f\u5927\u6587\u5b57\u30fb\u5c0f\u6587\u5b57\u3082\u610f\u8b58\u3057\u3066\u304b\u304f\ndf = pd.DataFrame(data=[[1,2,3],[4,5,6],[7,8,9]], index=[\"A\",\"B\",\"C\"], columns=[\"C1\",\"C2\",\"C3\"])\ndf","7cfcbd60":"from sklearn.datasets import load_iris\n\n# numpy\u914d\u5217\u3092\u4f5c\u6210\u3057\u3066\u8aad\u307f\u8fbc\u307f\niris = load_iris()\niris_df = pd.DataFrame(data = iris.data, columns = iris.feature_names)\niris_df.head()","4c461a28":"type(iris.data)","801b8c66":"data_all = pd.merge(df_date, df_point_all, on='date', how='outer')\ndata_all","78e1efa8":"# 2\u3064\u306eDataFrame\u306b\u3001air_store_id\u3068\u3044\u3046\u7279\u5fb4\u91cf\u304c\u542b\u307e\u308c\u3066\u3044\u308c\u3070\u3001\u4e00\u81f4\u3057\u3066\u3044\u308b\u884c\u3092\u81ea\u52d5\u7684\u306b\u5168\u90e8\u3044\u308c\u3066\u304f\u308c\u308b\nmerge_data = merge_data.merge(air_store_info, on=\"air_store_id\",how=\"left\")\nmerge_data\n# \u8907\u6570\u306e\u30ad\u30fc\u3092\u4f7f\u3063\u305f\u30de\u30fc\u30b8,inner\u306e\u307b\u3046\u304c\u3044\u3044\u304b\u3082\npd.merge(left,rignt, on=[\"key1\",\"key2\"], how=\"outer\")","f438a7b9":"import pandas as pd\n\n#\u30de\u30fc\u30b8\u3059\u308b\u305f\u3081\u306b\u30c0\u30df\u30fc\u3092\u7528\u610f\u3059\u308b\ndf1 = pd.DataFrame({\n    'dummy':[1,1],\n    '\u6027\u5225':['\u7537','\u5973']\n})\n\ndf2 = pd.DataFrame({\n    'dummy':[1,1,1],\n    '\u5e74\u4ee3':['10','20','30']\n})\n\ndf3 = pd.merge(df1, df2, how='outer')\nprint(df3)","3723fda2":"# index\u3092\u632f\u308a\u306a\u304a\u3059\ndata_all = data_all.reset_index()\n# \u30bd\u30fc\u30c8\u3059\u308b\uff08False\uff1a\u964d\u9806\u3000\u5927\u304d\u3044\u5024\u2192\u5c0f\u3055\u3044\u5024\u306e\u9806\uff09\ndata_all.sort_values(by='point', ascending=False)","59026edb":" #\u3042\u3068\u3067\u540d\u79f0\u3092\u5909\u3048\u308b\u65b9\u6cd5\u3001\u3053\u3063\u3061\u306e\u65b9\u304c\u3064\u304b\u3048\u308b\u304b\u3082\ndata_all.columns = [\"point\",\"you\",\"he\",\"she\",\"it\"]\n\n# points\u3092socre\u306b\u5909\u66f4\ndata_all.rename(columns={'point': 'score'})","f1b28cd9":"data_all.it","5e0b6f6a":"train_le = pd.DataFrame()\ntrain_le[\"id\"] = data_all.it\ntrain_le","1d66f75d":"ck = data_all[[\"he\",\"she\",\"it\"]]\nck","065f80f7":"data_all_chose = data_all.iloc[5:,:]\ndata_all_chose","06464345":"reviews.shape","cbcfb4ac":"reviews.describe()","d7332ac0":"# \u7279\u5b9a\u306e\u7279\u5fb4\u91cf\u306e\u8981\u7d04\u3092\u898b\u305f\u3044\u5834\u5408\nreviews.points.describe()","90affe0d":"reviews.points.mean()","637d6420":"reviews.points.dtype","44281141":"reviews.points.astype('float64')","dd4a5b7a":"reviews.taster_name.unique()","76f9ce71":"reviews.taster_name.value_counts()","49785c14":"# Groupby\u3067\u3082\u767b\u5834\u983b\u5ea6\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\nreviews.groupby('taster_name').taster_name.count()","504dc0e7":"reviews.groupby(['country']).price.agg([len, min, max])","233631dc":"countries_reviewed = reviews.groupby(['country', 'province']).description.agg([len])\ncountries_reviewed","5f09838f":"reviews[pd.isnull(reviews.country)]","82263740":"# \u6b20\u640d\u5730\u3092Unknown\u3067\u57cb\u3081\u308b\nreviews.region_2.fillna(\"Unknown\")","0c360844":"# \u6b20\u640d\u5024\u306f\u3001\u305d\u306e\u5e97\u8217\u306e\u5e73\u5747\u6765\u5e97\u8005\u6570\u3067\u57cb\u3081\u308b\nave = 100\nstore = store.fillna(ave)","5e0e803f":"for col in df:\n    print(col)","2d0361c2":"reviews.country + \" - \" + reviews.region_1","23e83988":"# drop=True\u3092\u306a\u304f\u3059\u3068\u3001index\u3092columns\u306b\u8ffd\u52a0\u3059\u308b\u3088\u3046\u306b\u306a\u308b\nid_1_data = id_1_data.reset_index(drop=True)","e06d59d5":"reviews.at[200,\"country\"]","4b9203d4":"reviews['country'][0]","f48903e8":"reviews.loc[0, 'country']","dcf37229":"reviews.rename(index={0: 'firstEntry', 1: 'secondEntry'})","51d3ee73":"df = pd.DataFrame([[1,2,3],[4,5,6]])\ndf.iloc[1,1] = 100\ndf","9d6bfcc8":"val =[[1,2,3],[4,5,6],[1,2,3],[3,5,6],[1,2,3]]\ndf = pd.DataFrame(val, columns =list(\"ACB\"))\n\n# \u91cd\u8907\u3057\u305f\u30c7\u30fc\u30bf\u30ec\u30b3\u2015\u30c9\u3092\u524a\u9664\ndf.drop_duplicates(keep=\"first\",inplace=True)\ndf","31273efe":"reviews.iloc[0]","c37265dc":"reviews.iloc[:, 0]","bac86ed8":"reviews.iloc[[0, 1, 2], 0]","fa174f1a":"print(test_x.id[0])","d8fed206":"reviews.set_index(\"title\").head()","169d5562":"# \u56fd\u306e\u884c\u304c\u30a4\u30bf\u30ea\u30a2\u3067\u3042\u308b\u3082\u306e\u3060\u3051\u62bd\u51fa\u3059\u308b\nreviews.loc[reviews.country == 'Italy'].head()","17c73d70":"# merge_data\u306e\u3046\u3061\u3001visitors\u304c0\u4ee5\u4e0a\u306eDataFrame\u3092train_fit\u3068\u3057\u3066\u4fdd\u5b58\u3059\u308b\ntrain_fit = pd.DataFrame()\ntrain_fit = reviews.loc[reviews.points >= 0]\ntrain_fit.head()","004aa641":"# \u56fd\u304c\u30a4\u30bf\u30ea\u30a2\u3067\u3001\u30dd\u30a4\u30f3\u30c8\u304c90\u4ee5\u4e0a\u306e\u30ef\u30a4\u30f3\nreviews.loc[(reviews.country == 'Italy') & (reviews.points >= 90)].head()","0048501b":"# \u56fd\u304c\u30a4\u30bf\u30ea\u30a2\u3001\u307e\u305f\u306f\u3001\u30dd\u30a4\u30f3\u30c8\u304c90\u4ee5\u4e0a\u306e\u30ef\u30a4\u30f3(pipe\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u3067\u533a\u5207\u308b|)\nreviews.loc[(reviews.country == 'Italy') | (reviews.points >= 90)].head()","fd003898":"# \u30a4\u30bf\u30ea\u30a2or\u30d5\u30e9\u30f3\u30b9\u306e\u30ef\u30a4\u30f3\u306e\u307f\u62bd\u51fa\nreviews.loc[reviews.country.isin(['Italy', 'France'])]","00372b95":"reviews.loc[reviews.price.notnull()]","856df1aa":"reviews['critic'] = 'everyone'\nreviews['critic']","9403b529":"x_lag = pd.DataFrame()\n# 7\u65e5\u524d\u304b\u3089\u66f4\u306b7\u65e5\u524d\u306e\u30c7\u30fc\u30bf\u306e\u5e73\u5747\u3092\u3068\u308b\nx_lag[\"lag7\"] = reviews[\"points\"].shift(7).rolling(window=7).mean()\nx_lag","83368d26":"df = pd.DataFrame({'visitors': [-20, -10, 300, 20, 20],\n                   'visitors_predict': [10, 20, 30, 10, 50],\n                   })\ndf = df.replace([-1, 9, 10], np.nan)\ndf\n\ndf['visitors'] = df['visitors'].where(df['visitors_predict'].isnull() == True, df['visitors_predict'])\ndf","c1e18cc9":"data_all","7e308774":"# month\u304c4\u306e\u3068\u304d\u3001set\u306e\u540d\u79f0\u3092val\u306b\u66f8\u304d\u63db\u3048\u308b\ndata_all.loc[data_all[\"Dow\"] == 4, 'set'] = 'val'\n\n# month\u304c\u6b20\u640d\u5024\u306e\u3068\u304d\u3001set\u306e\u540d\u79f0\u3092val\u306b\u66f8\u304d\u63db\u3048\u308b\ndata_all.loc[data_all['ID'].isnull() == True, 'set'] = 'val'","748fd1e7":"from sklearn.metrics import mean_squared_log_error\nscore = np.sqrt(mean_squared_log_error(va_fit_y, pred))","6ae451ea":"# waring\u304c\u3046\u308b\u3055\u3044\u306e\u3067\u3001with\u306e\u7bc4\u56f2\u5185\u306b\u3042\u308b\u3082\u306e\u306f\u30ef\u30fc\u30cb\u30f3\u30b0\u51fa\u3055\u306a\u3044\u3088\u3046\u306b\u3059\u308b\nimport warnings\nwarnings.resetwarnings()\nwith warnings.catch_warnings():\n    warnings.simplefilter('ignore')","9a04437f":"from tqdm.autonotebook import tqdm\n\nN_DATES = data_all.shape[1]\nd = []\nfor idx in tqdm(range(N_DATES)):\n    u = eval(data_all.iloc[idx, 1])","86d87a45":"data_all[['Dow', 'ID']].to_csv(\"xgb0_submission.csv\", index=False)","d37d93a8":"import datetime as dt\n\n# str\u2192datetime\u5f62\u5f0f\u306b\u5909\u63db\u3057\u3066\u3001\u65e5\u4ed8\u3092\u65e5\u4ed8\u3068\u3057\u3066\u6271\u3048\u308b\u3088\u3046\u306b\u3059\u308b\ndata_all['visit_date'] = pd.to_datetime(data_all['visit_date'])\n#2017\/4\/22\u307e\u3067\u306ftrain\u306e\u30e9\u30d9\u30eb\u3001\u305d\u308c\u4ee5\u964d\u306ftest\u306e\u30e9\u30d9\u30eb\u3092\u3064\u3051\u308b\ndata_all.loc[(data_all['visit_date'] <= dt.datetime(2017,4,22)), 'set'] = 'train'\ndata_all.loc[(data_all['visit_date'] > dt.datetime(2017,4,22)), 'set'] = 'test'\ndata_all","352136c0":"weatherData[\"visit_date\"] = pd.to_datetime(weatherData['visit_date'])\nweatherData['visit_date'] = weatherData['visit_date'].dt.date","c3614cfb":"for i in ind:\n    df_test.loc[i,'latDeg'] = (df_test.loc[i-1,'latDeg'] + df_test.loc[i+1,'latDeg'])\/2\n    df_test.loc[i,'lngDeg'] = (df_test.loc[i-1,'lngDeg'] + df_test.loc[i+1,'lngDeg'])\/2","0857029f":"import gc\ngc.collect()","748798a3":"def back_store_name(txt):\n    id = txt\n    #_\u533a\u5207\u308a\u3067\u53f3\u304b\u30891\u756a\u76ee\u306e\u6587\u5b57\u3092\u5207\u308a\u5206\u3051\u308b\n    txt_split = txt.rsplit(\"_\",1)\n    # \u5207\u308a\u5206\u3051\u305f\u6587\u5b57\u5217\u306e\u3046\u3061\u30010\u756a\u76ee\u3092\u8fd4\u3059\n    return txt_split[0]\n#\u65b0\u3057\u3044\u5217\u306e\u540d\u524d = \u5f15\u6570\u3068\u3057\u3066\u95a2\u6570\u306b\u5165\u308c\u3066\u51e6\u7406\u3059\u308b\u5217\u306e\u540d\u524d\ntest.loc[:,\"air_store_id\"] = test[\"id\"].apply(back_store_name)\ntest.loc[:,\"visit_date\"] = test[\"id\"].apply(back_date_name)\n# test = test.drop(columns = \"id\")\ntest","ea8a084a":"# \u30c7\u30fc\u30bf\u306e\u7d50\u5408(\u7e26\u65b9\u5411)\u2605\u2605\nData combination (vertical direction) \u2605\u2605","14139b27":"# \u533a\u5207\u308a\u6587\u5b57\u306b\u3088\u308b\u5206\u5272\u2605\nSplit by delimiter","a1efa394":"# \u7279\u5fb4\u91cf(\u5217)\u306e\u540d\u524d\u306e\u5909\u66f4\u2605\u2605\nRenamed features (columns) \u2605\u2605\n\u610f\u5916\u3068\u4f7f\u3046","2526ab60":"# \u7279\u5fb4\u91cf\u3069\u3046\u3057\u3092\u7d50\u5408\u3059\u308b\n2\u3064\u306e\u7279\u5fb4\u91cf\u3092\u7d50\u5408\u3059\u308b\u3002submission\u304c\u5e97\u8217ID+\u65e5\u4ed8\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u4fbf\u5229","20455cdd":"\u3042\u308b\u3044\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u308b<br>\nAlternatively, you can also write:","5cc4159d":"# index\u3092\u5909\u66f4\u3059\u308b Change index\n\u307e\u3042\u4f7f\u308f\u3093\u304b\u306a(I wonder if I use it)","4020f368":"# csv\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\nRead csv file","dee88627":"# CSV\u30c7\u30fc\u30bf\u306b\u4fdd\u5b58","1ca302aa":"# \u30c7\u30fc\u30bf\u578b\u3092\u78ba\u8a8d\u3059\u308b\u2605\u2605\nCheck the data type \u2605\u2605<br>\nxgboost\u304c\u52d5\u304b\u306a\u3044\u5834\u5408\u3001\u3053\u306e\u30c7\u30fc\u30bf\u578b\u3092\u78ba\u8a8d\u3059\u308b\u3068\u826f\u3044<br>\nIf xgboost doesn't work, check this data type<br>","2ba58faf":"# \u91cd\u8907\u3057\u305f\u30ec\u30b3\u30fc\u30c9\u3092\u9664\u5916\u3059\u308b\u2605","d288fed0":"# \u8907\u6570\u306e\u7279\u5fb4\u91cf\u3060\u3051\u62bd\u51fa(\u53d6\u308a\u51fa\u3057\u3066)DataFrame\u3068\u3057\u3066\u6301\u305f\u305b\u308b\nExtract (extract) only multiple features and have them as DataFrame","5ce416f3":"# \u6b20\u640d\u5730\u3092Unknown\u3067\u57cb\u3081\u308b","4faae14b":"# \u30e6\u30cb\u30fc\u30af\u30d0\u30ea\u30e5\u30fc\u306e\u4e00\u89a7\u3068\u767b\u5834\u983b\u5ea6\u3092\u898b\u308b","a9e283b7":"# \u6b20\u640d\u5024\u3092\u5e73\u5747\u3067\u57cb\u3081\u308b\n \u203b\u5e73\u5747\u5024\u306f\u5225\u9014\u4f5c\u308b\u5fc5\u8981\u3042\u308a","4a324a00":"# 1\u52176\u884c\u306e\u884c\u5217\u3092\u4f5c\u308b\u5834\u5408\nWhen creating a matrix with 1 column and 6 rows","632876db":"# \u30bd\u30fc\u30c8 sort\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6607\u9806(ascending)\u306b\u306a\u308b\u306e\u3067\u3001ascending=False\u3092\u5165\u308c\u308b<\/br>\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u3001\u6587\u5b57\u5217\u306e\u9577\u3055\u3067\u30bd\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\nThe default is ascending, so enter ascending = False <\/br>\nYou can sort by string length with the following code","c64a3380":"# \u5b9f\u884c\u7d4c\u904e\u306e\u8868\u793a Display of progress\nautonotebook\u306etqdm\u4f7f\u3046\u3068\u3001for\u5206\u306a\u3069\u306e\u51e6\u7406\u4e2d\u306e\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u3092\u8868\u793a\u3067\u304d\u308b<br>\nYou can use tqdm of autonotebook to display the progress bar during processing such as for minutes.","19a7ea4d":"# index\u306b\u540d\u524d\u3092\u4ed8\u3051\u3066\u8ffd\u52a0\u3059\u308b\nName and add index<br>\n\u3064\u304b\u3046\uff1f\u3053\u308c<br>\nDo you use it? this<br>","ec5cc983":"# \u9577\u3055\u3001\u6700\u5927\u3001\u6700\u5c0f\u306e\u60c5\u5831\u3092\u5f97\u308b\nGet length, maximum and minimum information<br>\n\u7d50\u69cb\u4fbf\u5229\u3002contry\u3067\u307e\u3068\u3081\u3066\u3001price\u306elen,min,max\u304c\u6c42\u307e\u308b","40cac205":"# \u7279\u5b9a\u306e\u7279\u5fb4\u91cf(\u30ab\u30e9\u30e0)\u3060\u3051\u3092\u53d6\u308a\u51fa\u3059\nExtract only specific features (columns)","c5781f0a":"# \u7279\u5b9a\u306e\u5217\u306e\u5168\u90e8\u306b\u7279\u5b9a\u306e\u6587\u5b57\u5217\u3092\u4e0e\u3048\u308b\n\u307e\u3042\u3053\u3093\u306a\u3053\u3068\u306f\u3057\u306a\u3044\u3060\u308d\u3046\u3051\u3069<br>\nGive a specific string to all of a specific column<br>\nWell I wouldn't do this","46fbb7b3":"# \u65e5\u4ed8\u60c5\u5831\u3092\u7dad\u6301\u3057\u3066\u8aad\u307f\u8fbc\u3080\nPreserve and read date information <br>\n\u65e5\u4ed8\u60c5\u5831\u3092\u542b\u3080\u30c7\u30fc\u30bf\u3092\u3001\u65e5\u4ed8\u306e\u578b\u3092\u7dad\u6301\u3057\u305f\u307e\u307e\u8aad\u307f\u8fbc\u307f\u305f\u3044\u5834\u5408 <br>\nWhen you want to read data including date information while maintaining the date type","af086f7d":"# If you find it helpful, please Upvote & comment\nIf there is a better way, I would appreciate it if you could let me know in the comments.","6c9b0123":"# \u30ea\u30b9\u30c8\u304b\u3089\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u4f5c\u308b\nCreate a dataframe from a list","2a9bdd9e":"# \u7279\u5b9a\u306e\u6761\u4ef6\u306e\u6642\u3001\u7279\u5fb4\u91cf\u3092\u66f8\u304d\u63db\u3048\u308b\u2605\nRewrite features under specific conditions \u2605","43fa4223":"# \u7279\u5b9a\u306e\u884c\u306b\u304a\u3051\u308b\u7279\u5b9a\u306e\u5217\u306e\u5024\u3092\u62bd\u51fa\u3059\u308b\nExtract values for a particular column in a particular row<br>\nindex=0(0\u884c\u76ee)\u306e\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b","3b4e294f":"# 0\u884c\u76ee\u306eCountry\u3092\u62bd\u51fa\u3059\u308b\nindex\u3068\u306f\u95a2\u4fc2\u306a\u304f\u3001\u884c\u6570\u3067\u6307\u5b9a\u3059\u308b\u3002index\u3092\u7ba1\u7406\u3057\u305f\u65b9\u304c\u3088\u3044\u3002","51c168df":"# \u30e1\u30e2\u30ea\u306e\u81ea\u52d5\u8abf\u6574\u3000Garbage collection\nPython\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u81ea\u52d5\u7684\u306b\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u884c\u3044\u307e\u3059\u3002\n\u901a\u5e38\u306e\u7528\u9014\u3067\u306f\u660e\u793a\u7684\u306b\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u884c\u3046\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u660e\u793a\u7684\u306b\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u884c\u3046\u306b\u306fgc\u30e2\u30b8\u30e5\u30fc\u30eb\u306ecollect\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\nPython will do garbage collection automatically as needed.\nThere is no need for explicit garbage collection for normal use.\nTo explicitly collect garbage, call the collect function of the gc module.","15f45f6f":"# \u30c7\u30fc\u30bf\u306e\u7d50\u5408(\u6a2a\u65b9\u5411)\u2605\u2605\nData combination (horizontal direction) \u2605\u2605 <br>\njoin\u3092\u3064\u304b\u3063\u3066\u6a2a\u65b9\u5411\u306b\u7d50\u5408\u3067\u304d\u308b<br>\njoin\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3068\u304d\u306f\u3001index\u3092\u3064\u3051\u306a\u304a\u3059\u3068\u3046\u307e\u304f\u3044\u304f\u3053\u3068\u304c\u3042\u308b <br>\n\nCan be joined horizontally using join <br>\nIf join doesn't work, reindexing may work","b863af16":"# \u30c7\u30fc\u30bf\u306e\u69cb\u9020\u3092\u78ba\u8a8d\u3059\u308b\nCheck the structure of the data","13176296":"# tabledata\u306e\u4fbf\u5229\u306a\u30b3\u30fc\u30c9\n# Code for table data\nKaggle\u521d\u5fc3\u8005\u306e\u79c1\u304c\u5b66\u3093\u3060\u4f7f\u3048\u305d\u3046\u306a\u30b3\u30fc\u30c9\u307e\u3068\u3081<br>\n\u5168\u4f53\u7684\u306b\u521d\u5fc3\u8005\u4e38\u51fa\u3057\u3067\u3059\u304c\u3001\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\u3002 <br>\nKaggle beginner I learned a summary of usable code <br>\nOverall, it is a beginner's bare, but please forgive me.\n","894918ac":"# Note\ntest_x.drop(columns='id')<br>\n\u3053\u308c\u306f\u30c7\u30fc\u30bf\u306e\u7d50\u5408\u306e\u30b3\u30fc\u30c9\u3060\u304c\u3001\u5909\u66f4\u3057\u305f\u5834\u5408\u3092\u898b\u305b\u3066\u304f\u308c\u3066\u3044\u308b\u3060\u3051\u3067\u66f4\u65b0\u3055\u308c\u3066\u3044\u306a\u3044<br>\ntest_x = test_x.drop(columns='id')<br>\n\u3053\u3046\u66f8\u304b\u306a\u3044\u3068\u3001text_x\u306e\u4e2d\u8eab\u306f\u66f4\u65b0\u3055\u308c\u306a\u3044\u3088<br>\n\ntest_x.drop (columns ='id') <br>\nThis is the data binding code, but it just shows me what I've changed and hasn't been updated. <br>\ntest_x = test_x.drop (columns ='id') <br>\nIf you don't write this, the contents of text_x will not be updated. <br>","0e8f9da7":"# \u4efb\u610f\u306eindex\u306e\u7279\u5fb4\u91cf\u3092\u53d6\u5f97\nGet features of any index<br>\nindex = 200\u306e\u56fd\u540d\u3092\u53d6\u5f97<br>\nget index = 200 country names","23749e7e":"# \u7279\u5fb4\u91cf\u306e\u30ea\u30b9\u30c8\u3092\u8868\u793a\u3059\u308b","eb0c89b6":"\u95a2\u6570\u3092\u4f7f\u308f\u305a\u306b\u66f8\u304f\u5834\u5408\u306f\u3053\u3046\u66f8\u3051\u308b","6594b2e2":"# \u30e9\u30b0\u5909\u6570\u306e\u8ffd\u52a0\n\u76f4\u524d\u306e7\u884c\u5206\u306e\u30c7\u30fc\u30bf\u306e\u5e73\u5747\u3092\u3068\u308b<br>\n\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3067\u3001\u76f4\u524d\u306e\u4f55\u65e5\u304b\u524d\u307e\u3067\u306e\u5024\u306e\u5e73\u5747\u3092\u53d6\u5f97\u3059\u308b\u306e\u306b\u4f7f\u3046\n\nAverage the data for the last 7 rows <br>\nUsed to get the average of the values up to the last few days in time series data","b9cc412e":"# \u524d\u306e\u884c\u3068\u5f8c\u306e\u884c\u306e\u5e73\u5747\u5024\u3092\u3068\u308b","df1779bc":"# 2\u3064\u306e\u914d\u5217\u306e\u7d44\u307f\u5408\u308f\u305b(\u5834\u5408\u306e\u6570)\nCombination of two arrays (number of cases)<br>\n\u914d\u5217A\u3068\u914d\u5217\uff22\u306e\u4e2d\u8eab\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u5834\u5408\u306b\u3067\u304d\u308b\u7d44\u307f\u5408\u308f\u305b\u3092\u5168\u3066\u6d17\u3044\u51fa\u3059<br>\nIdentify all combinations that can be made when the contents of array A and array B are combined.","b0d5af11":"# \u7279\u5b9a\u306e\u7279\u5fb4\u91cf\u3060\u3051\u53d6\u308a\u51fa\u3057\u3066pd.DataFrame\u3068\u3057\u3066\u4fdd\u6301\u3059\u308b\nExtract only specific features and keep them as pd.DataFrame<br>\ntrain_x\u306e\u306a\u304b\u306eair_store_id\u3068\u3044\u3046\u7279\u5fb4\u91cf\u3060\u3051\u629c\u304d\u51fa\u3059\u3002\u65b0\u3057\u3044DataFrame\u306e\u5217\u306e\u540d\u524d\u306fid\u306b\u306a\u308b<br>\nExtract only the feature amount called air_store_id in train_x. The name of the column in the new DataFrame will be id","7ca3f10c":"# \u7279\u5b9a\u306e\u884c\u30fb\u5217\u3092\u66f8\u304d\u63db\u3048\u308b\n1\u884c1\u5217\u306e\u5024\u3092\u66f8\u304d\u63db\u3048\u308b","b7c5a23e":"# \u7279\u5fb4\u91cf\u306e\u5e73\u5747\u3092\u3068\u308b\nTake the average of features","c9b73f99":"# \u6b20\u640d\u5024\u3092\u62bd\u51fa\u3059\u308b\u2605\u2605\nExtract missing values \u2605\u2605<br>\ncountry\u306e\u6b20\u640d\u5730\u3092\u62bd\u51fa\u3059\u308b<br>\nExtract the missing land of country","a1078178":"# \u7279\u5fb4\u91cf\u306e\u524a\u9664(drop)(\u7279\u5b9a\u306e\u5217,columns)\u2605\u2605\nFeature drop (specific columns, columns)","49204b3f":"# \u6761\u4ef6\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u5834\u5408\u306e\u7d5e\u308a\u8fbc\u307f\u65b9\u2605\u2605\nHow to narrow down when there are two or more conditions \u2605\u2605<br>\n\u304b\u3064\u3000\u3068\u3000\u307e\u305f\u306f\u3000\u3067\u66f8\u304d\u65b9\u304c\u9055\u3046\u3002\u7279\u306b\u300c\u307e\u305f\u306f\u300d\u306f\u3061\u3087\u3063\u3068\u304f\u305b\u304c\u3042\u308b<br>\nThe writing style is different between AND and OR Especially \"OR\" has a little habit","7ba436a5":"# \u7279\u5fb4\u91cf\u306e\u8ffd\u52a0 \nAddition of features <br>\n\u65e2\u306b\u3042\u308b\u7279\u5fb4\u91cf\u306e\u639b\u3051\u7b97\u3067\u3001\u65b0\u3057\u3044\u7279\u5fb4\u91cf\u3092\u4f5c\u308b <br>\nCreate a new feature by multiplying the existing features","bb11d77f":"# \u30c7\u30fc\u30bf\u578b\u3092\u5909\u66f4\u3059\u308b\npoints\u306e\u30c7\u30fc\u30bf\u578b\u3092int64\u304b\u3089float64\u306b\u5909\u66f4\u3059\u308b","c5093d8e":"# \u6b20\u640d\u3057\u3066\u306a\u3044\u5024\u3092\u4ed6\u306e\u5217\u306b\u7f6e\u63dbreplace\u3059\u308b\nReplace non-missing value with another column","d06b75a4":"# \u307e\u305f\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u308b\nOr you can write as follows","820da711":"# \u671f\u9593\u3092\u6307\u5b9a\u3057\u3066\u7279\u5fb4\u91cf\u3092\u8ffd\u52a0","f0e98fa3":"# \u30de\u30eb\u30c1index\uff08Multi index\uff09\n\u4e00\u5fdc\u3001\u30de\u30eb\u30c1\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3082\u3067\u304d\u308b\u304c\u3001\u6271\u3044\u304c\u96e3\u3057\u3044\u306e\u3067\u521d\u5fc3\u8005\u5411\u304d\u3067\u306f\u306a\u3044<br>\nFor the time being, multi-indexing is possible, but it is not suitable for beginners because it is difficult to handle.","ed0a095e":"# \u30ef\u30fc\u30cb\u30f3\u30b0\u3092\u6307\u5b9a\u7b87\u6240\u3060\u3051\u6b62\u3081\u308b\nStop the warning only at the specified location","28fed257":"# \u30e6\u30cb\u30fc\u30af\u30d0\u30ea\u30e5\u30fc\u306e\u4e00\u89a7\u3092\u898b\u308b\u2605\n\u3064\u307e\u308a\u3001\u305d\u306e\u7279\u5fb4\u91cf\u306b\u767b\u5834\u3059\u308b\u5024\u3092\u3059\u3079\u3066\u53d6\u308a\u51fa\u3059","5903faab":"# \u30c7\u30fc\u30bf\u306e\u8981\u7d04\u3092\u898b\u308b\nView data summary<br>\n\u6570\u5024\u3067\u8868\u3055\u308c\u308bcolumns\u3060\u3051\u3001\u8981\u7d04\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u308b<br>\nOnly the columns represented by numbers can see the summary<br>","79441f85":"# RMSLE\u3092\u7b97\u51fa\u3059\u308b\nCalculate RMSLE","d4cfc5f4":"# index\u3092\u632f\u308a\u306a\u304a\u3059(\u3064\u3051\u306a\u304a\u3059)\u2605\u2605","4168ab6a":"# \u65e5\u4ed8\u60c5\u5831\u306b\u5909\u63db\nConvert to date information<br>\n\u65e5\u4ed8\u3063\u307d\u3044\u6587\u5b57\u5217\u3092\u3001datetime\u5f62\u5f0f\u306b\u5909\u63db\u3059\u308b","e15443a7":"# \u7279\u5b9a\u306e\u5217\u3092\u53d6\u5f97\u3059\u308b\nGet a specific column","b2de9e4c":"# \u7279\u5b9a\u306e\u884c\u3092\u53d6\u5f97\u3059\u308b\nGet a specific row","39155fda":"# \u6761\u4ef6\u4ed8\u304d\u691c\u7d22\u2605\u2605\u2605\n\u5404\u7279\u5fb4\u91cf\u3092\u7279\u5b9a\u306e\u6761\u4ef6\u3067\u7d5e\u308a\u8fbc\u307f\u8868\u793a\u3059\u308b<br>\ntest,train\u30bb\u30c3\u30c8\u306bset=\"train\"\u3068\u304b\u3064\u3051\u3066\u3001\n\nConditional search \u2605\u2605\u2605<br>\nEach feature is narrowed down and displayed under specific conditions <br>\nI added set = \"train\" to the test and train sets and used it later to separate train and test.","44937e73":"# \u6700\u521d\u306e4\u884c\u3092\u524a\u9664\nDelete the first 4 lines<br>\n\u64cd\u4f5c\u3068\u3057\u3066\u306f\u30015\u884c\u76ee\u4ee5\u964d\u306e\u307f\u3092\u9078\u629e<br>\nSelect only the 5th and subsequent lines as the operation","085ba003":"# \u30c7\u30fc\u30bf\u306e\u7d50\u5408(vlookup\u307f\u305f\u3044\u306a\u6a5f\u80fd)\u2605\u2605\u2605\nData combination (function like vlookup) \u2605\u2605\u2605<br>\n\u8907\u6570\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u3001\u7d50\u5408\u3059\u308b<br>\nair_store_info\u306e\u5e97\u8217ID(air_store_id)\u3054\u3068\u306e\u60c5\u5831\u3092\u3001\u5404\u30c7\u30fc\u30bf\u306b\u8ffd\u52a0\u3059\u308b<br>\n\u4ed6\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u53c2\u7167\u3057\u3066\u3001\u5024\u3092\u5165\u308c\u3066\u3044\u304f\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3084\u308c\u308b<br>\n\u307e\u305f\u3001\u8907\u6570\u306e\u30ad\u30fc\u3092\u3064\u304b\u3063\u305f\u30de\u30fc\u30b8\u3082\u3067\u304d\u308b   \n\nCombine multiple data frames<br>\nAdd information for each store ID (air_store_id) of air_store_info to each data <br>\nYou can refer to other tables and do things like entering values <br>\nYou can also merge using multiple keys"}}