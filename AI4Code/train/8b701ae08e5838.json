{"cell_type":{"b7c5cdbb":"code","88bf8573":"code","849dfd7c":"code","42e20be0":"code","6b75fdbb":"code","948ba1dc":"code","e4bb6692":"code","42eeabbe":"code","dacbc7e3":"code","204f534f":"code","6f20c565":"markdown","4b238e93":"markdown","c23b1440":"markdown","8a650848":"markdown","f1bc5678":"markdown","2472d834":"markdown","7e92c2a2":"markdown","5d783744":"markdown","9ee4d830":"markdown","ebc543d7":"markdown"},"source":{"b7c5cdbb":"#importing necessery libraries for future analysis of the dataset\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler, LabelBinarizer\n\ncsv_file = '..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv'\ndf = pd.read_csv(csv_file)\ndf.info()","88bf8573":"df.isna().sum()","849dfd7c":"df[df.last_review.isna()].number_of_reviews.value_counts()","42e20be0":"# Drop features `name`, `host_name`, `last_review`\ndf.drop(columns=['id', 'host_name', 'last_review', 'host_id', 'name'], inplace=True)\ndf.head()","6b75fdbb":"# Fill NaN value with 0 for feature reviews_per_month\ndf.fillna({'reviews_per_month':0}, inplace=True)\ndf.head()","948ba1dc":"cor = df.corr()\nplt.figure(figsize=(8,6))\nsns.heatmap(cor, annot=True)","e4bb6692":"# Convert catogorical to numeric & check the correlations \nlb = LabelEncoder()\ndf_num = df.copy()\ndf_num['neighbourhood_group_numeric'] = LabelEncoder().fit_transform(df_num['neighbourhood_group'])\ndf_num['room_type_numeric'] = LabelEncoder().fit_transform(df_num['room_type'])\n\ncor = df_num.corr()\nplt.figure(figsize=(8,6))\nsns.heatmap(cor, annot=True)","42eeabbe":"sns.violinplot(data=df[df.price < 250], x='neighbourhood_group', y='price')","dacbc7e3":"from sklearn.model_selection import train_test_split\n\nX = df_num[df_num.price <= 250]\n\nprice = X.price\nX = X.drop(columns=['neighbourhood', 'neighbourhood_group', 'room_type', 'price'])\n\ntmp = X.copy()\nfor f in ['minimum_nights', 'number_of_reviews', 'reviews_per_month', \n          'calculated_host_listings_count', 'availability_365']:\n    tmp[f] = StandardScaler().fit_transform(X[f].values.reshape(-1, 1))\n\nXtrain, Xtest, ytrain, ytest = train_test_split(tmp, price, random_state=3)","204f534f":"from xgboost import XGBRegressor\nfrom sklearn.metrics import mean_squared_error, r2_score\n\nxgb = XGBRegressor(n_estimators=1000, learning_rate=0.05, early_stopping=5, silence=False)\nxgb.fit(Xtrain, ytrain)\nypred = xgb.predict(Xtest)\nprint('RMSE value is', np.sqrt(mean_squared_error(ytest, ypred)))\n","6f20c565":"How disappointing is that, both `neighbourhood_group` and `room_type` have very weak (even negative) correlation with `price`. But at least we can assume that `price` is affected by a combination of multiple factors.","4b238e93":"There are four columns (`name`, `host_name`, `last_review`, `reviews_per_month`) that contain missing values.\n\nThe `host_name` feature is trivial to our purpose of data analysis. Generally, the name of a host has very limited, if not none, impact on other factors such as the `price` or `reviews` on the listing. Therefore we remove this column to keep our dataset slim.\n\nThe `last_review` feature is date. A close observation tells us that each NaN-valued `last_review` corressponds to a NaN-valued review `reviews_per_month` and a zero-valued `number_of_reviews`. Thus it is safe to conclude that the NaN-valued `last_review` is the result of zero review for current listing, then we can simply replace NaN with 0 for feature `reviews_per_months`, and remove `last_review` from the dataset. ","c23b1440":"# 3. Model Building\n\nIn this section, we try Xgboost regression (personal favorite regression model) on our dataset too see how well the performance could be. In our [previous kernel](https:\/\/www.kaggle.com\/xiu0714\/eda-on-nyc-airbnb), we found out that the majority price is under 250 (USD). So we remove listings with a price higher than 250 (USD), and use xgboost regression algorithm to make prediction on the data left. ","8a650848":"Observations, we can see that:\n- There are 48,895 entries\n- Some features have missing values, e.g., 'name', 'last_review', (we will clean and and handle them later).\n- 10 of 16 features are numeric: [`id`, `host_id`, `latitude`, `longitute`, `price`, `minimum_nights`, `number_of_reviews`, `reviews_per_month`, `calculated_host_listings_count`, `availability_365`]\n- 6 of 16 features are categorical: [`name`, `host_name`, `neighbourhood_group`, `neighbourhood`, `room_type`, `last_review`]\n\n\n# 2. Exploring Data\nIn this step we: \n- discard insignificant features: 'name', 'id', 'host_name', 'last_review', 'host_id'\n- replace NaN-valued 'last_review' with 0","f1bc5678":"Generally, normalization is a great choice for numeric features when the value range is large. In the next two code cells, we use `StardardScaler()` to normalize all the numeric features except `neighbourhood_group` and `room_type`, make a splition, and then feed the normalized data into our model.","2472d834":"## Loading Data & Import Libraries","7e92c2a2":"# 1. Overview\n\nThis is a kernel in process and I will be updating the kernel in coming days. Please upvote if you like this work. \n\n<img src=\"http:\/\/git.io\/JTI3m\" width=\"500px\" alt=\"Airbnb NYC\">\n\nIn this notebook, we will:\n- present a simple overview on NYC Airbnb dataset (please refer to [this kernel](https:\/\/www.kaggle.com\/xiu0714\/eda-on-nyc-airbnb) for a full explanatory data analysis),\n- clean and tweak the dataset,\n- build a simple model to make prediction on the host price with Xgboost regressor.\n","5d783744":"\n## Preprocessing Dataset\n\nBy now, we've handled missing and NaN values, removed insignificant columns, our final goal is building a model to make predictions on `price` with remaining features. First of all, we want to decide is there any feature that is strongly correlated with our label `price`. This goal can be achieved with a `corr()` function plus a heatmap.","9ee4d830":"Impressive, such a simple model has achieved a RMSE lower than 36, which is not bad when the price range over 0 to 250. More work on model parameters tweaking and feature engineering could help with decreasing that error value.\n","ebc543d7":"Above correlation map shows that none of our features is strongly correlated with `price`, i.e., no factor is dominating the `price`. However, the `corr()` function considered only the numeric features, we have to manually convert the categorical features (`neighbourhood_group`, `room_type`) into numeric features and repeat the above work."}}