{"cell_type":{"ada626d7":"code","4efc79b3":"code","9fa3aa09":"code","4599d168":"code","5041286b":"code","70a1797b":"code","dbbaa4a1":"code","f4455ed2":"code","6b3bd84f":"code","e8ad65c4":"code","1d97ecae":"code","1d9f8b84":"code","7f5b6d60":"code","f9692364":"code","730f6df1":"code","7fbb44e2":"code","33f3d697":"code","e78eed1a":"code","31acc695":"code","82eeb7fc":"code","7d2b2237":"code","d5e44423":"code","d3047133":"code","010cf5f3":"code","1c57307f":"code","a69ba5ca":"code","bb31687b":"code","63440089":"code","71d897ba":"code","687d10fe":"code","526d6dfc":"code","1b927c44":"code","7a40d4a7":"code","c8b56072":"code","30e1538b":"code","4f1eaf23":"code","2a747d83":"code","c4bf8834":"code","dfa5547a":"code","c52a5102":"code","9639d143":"code","b355716f":"code","b4f52442":"code","acaa59ba":"code","7928840d":"code","904a84b4":"code","8e424bd5":"code","d21c885f":"code","ba448d58":"code","9fe47ad1":"code","81c5c66b":"code","67559f76":"code","b16dffdc":"code","05779993":"code","4725eb9a":"code","6d4444ca":"code","c3b8b7d3":"code","2c7e5acf":"code","512c0e9d":"code","967e0dd0":"code","49c798df":"code","a8d622d6":"code","fe30a8ec":"code","ae61c858":"code","4e5b3b3f":"code","e9a1d009":"code","eaca5cf6":"code","e4e0bfa6":"code","2647487a":"code","1c63b194":"code","7ec9f153":"code","fbfed15e":"code","7a67c4ad":"code","8f656f6b":"code","5d76d270":"code","dae14539":"code","0b2197d6":"code","d4d63396":"code","a2c81d3c":"code","e7b240e2":"code","094d0b98":"code","40043e9e":"code","2fa53b32":"code","726f336b":"code","6a3fa0e8":"markdown","ec23bd9a":"markdown","a0de3e74":"markdown","920ba6e3":"markdown","72371206":"markdown","21faeae1":"markdown","a99fb344":"markdown","4a839b8a":"markdown","af92104f":"markdown","eddc776d":"markdown","02f90b13":"markdown","9ea3ef47":"markdown","b2c59254":"markdown","27c5127a":"markdown","f3f029a8":"markdown","7c3deee2":"markdown","b16df84c":"markdown","8fbe9140":"markdown","b9c6d6d6":"markdown","1fc9be6a":"markdown","0ccef34f":"markdown","060890a0":"markdown","2c06f08e":"markdown","44e11223":"markdown","29741213":"markdown","040a0473":"markdown","ed4d0352":"markdown","50f7850f":"markdown","6351d00e":"markdown","0c6a04aa":"markdown","c3a4284e":"markdown","86b28df0":"markdown","152f9099":"markdown","4100410e":"markdown","a5c08c07":"markdown","8329aed6":"markdown","cb2b68f6":"markdown","fb8370d2":"markdown","152d2341":"markdown","e3a3002e":"markdown","3fa1b0ae":"markdown","26d2303d":"markdown","90cafa7a":"markdown","c671f00e":"markdown","8f9c0d99":"markdown","af4bd269":"markdown","93170cb5":"markdown","952a623d":"markdown","e46872a8":"markdown","daec9507":"markdown","baa9ab91":"markdown","785c18da":"markdown","539be62d":"markdown","436d6b84":"markdown","4d94effa":"markdown","793f3e50":"markdown","67ef1e51":"markdown","930f095b":"markdown","af2f47f5":"markdown","f1115d83":"markdown","e4ea6744":"markdown","37f01a01":"markdown","2d53149f":"markdown","ac245ca0":"markdown","9995201f":"markdown","21fa386d":"markdown","3b6a8460":"markdown","7a067e9f":"markdown","f003b9f8":"markdown","db003989":"markdown","46685135":"markdown","86716b5a":"markdown","b42e3887":"markdown","4802f6eb":"markdown","ac1a33a7":"markdown","88e3024c":"markdown","35e262e4":"markdown","b3bf595b":"markdown","3a438587":"markdown","2cc347c7":"markdown","0b61b9b6":"markdown","5cddd040":"markdown","fad2f92a":"markdown","c47a1733":"markdown","16cd0ad3":"markdown","2e4d2ed9":"markdown","c573e85a":"markdown","461aac14":"markdown","d58546ab":"markdown","146c1bb5":"markdown","81c61b6d":"markdown","a8a8cde7":"markdown","797dbfae":"markdown","aa09d156":"markdown","f51133c9":"markdown","111d77ec":"markdown","36e1c115":"markdown"},"source":{"ada626d7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4efc79b3":"# linear algebra\nimport numpy as np\n# Data processing\nimport pandas as pd\n# Data Visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Ignoring warnings\nimport warnings\nwarnings.filterwarnings('ignore')","9fa3aa09":"data=pd.read_csv(\"..\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv\")","4599d168":"data.head() # viewing data","5041286b":"data.shape","70a1797b":"data.info()     # checking info","dbbaa4a1":"data.isnull().sum()     #Checking for Null Values","f4455ed2":"data.describe()     #Viewing Descriptive Statistics","6b3bd84f":"df=data.copy() # assigning the data to another variable","e8ad65c4":"df['Date'] = pd.to_datetime(df['Date'])\ndf['weekday'] = df['Date'].dt.day_name()\ndf['month'] = df['Date'].dt.month_name()","1d97ecae":"df.set_index('Date', inplace=True)\ndf.head()","1d9f8b84":"plt.figure(figsize=(10,5))\nsns.distplot(df.Rating)\nplt.axvline(x=df.Rating.mean(),label='mean',color='red', linestyle='dotted',lw=4)\nplt.axvline(x=np.percentile(df['Rating'],25),label = 'Q1:25th percentile',color='green', linestyle='dashed',lw=3)\nplt.axvline(x=np.percentile(df['Rating'],75),label = 'Q3:75th percentile:',color='orange', linestyle='dashed',lw=3 )\nplt.legend()\nplt.show()","7f5b6d60":"plt.figure(figsize=(10,5))\nsns.countplot(df.Branch).set_title(\"Count of Branch\")\nplt.xticks(fontsize=10,fontweight='bold')\nplt.show()","f9692364":"df.Branch.value_counts()","730f6df1":"plt.figure(figsize=(6,6))\ndf['Payment'].value_counts().plot.pie(explode=[0.01,0.01,0.01],autopct='%1.1f%%',startangle=60)\nplt.title('Payment used by customer',fontsize=20)\nplt.show()","7fbb44e2":"plt.figure(figsize=(10,5))\ndf['Product line'].value_counts().plot.bar().set_title(\"Product line Sale\",fontsize=13,fontweight='bold')\nplt.xticks(fontsize=13)\nplt.show()","33f3d697":"df.groupby('Product line')['Product line'].count()","e78eed1a":"round(np.corrcoef(df['gross income'], df['Rating'])[1][0],2)","31acc695":"plt.figure(figsize=(10,6))\nsns.heatmap(round(df.corr(),2), annot=True).set_title(\"Corelation heatmap\")\nplt.show()","82eeb7fc":"plt.figure(figsize=(14,6)) \nsns.boxenplot(x=\"Branch\", y = \"Rating\" ,data =df)\nplt.show()","7d2b2237":"df.groupby('Branch')['Rating'].mean()","d5e44423":"plt.figure(figsize=(12,6))\nsns.barplot(x=df['Total'],y=df['Product line'])\nplt.show()","d3047133":"df.groupby('Product line')['Total'].mean().sort_values(ascending=False)","010cf5f3":"plt.figure(figsize=(14,6))\nsns.swarmplot(x= \"Product line\", y = \"Rating\", hue = \"Gender\", data = df).set_title(\"Product sales on the basis of gender\")\nplt.show()","1c57307f":"df.groupby('Product line')['Gender'].value_counts()","a69ba5ca":"fig, axes = plt.subplots(1,2, sharex=True, figsize=(15,5))\nsns.scatterplot(ax=axes[0], x=df['Rating'], y=df['gross income'])\nsns.regplot(ax=axes[1], x=df['Rating'], y=df['gross income'])\nplt.show()","bb31687b":"sns.boxplot(x=df['City'], y=df['gross income'])\nplt.show()","63440089":"df.groupby('City')['gross income'].mean()","71d897ba":"sns.boxplot(x=df['Gender'], y=df['gross income'])\nplt.show()","687d10fe":"df.groupby('Gender')['gross income'].mean()","526d6dfc":"cat=df[[\"Product line\", \"gross income\"]].groupby(['Product line'], as_index=False).sum()\ncat_sort=cat.sort_values(by='gross income', ascending=False)\nplt.figure(figsize=(15,8))\nsns.barplot(x='Product line', y='gross income', data=cat_sort)\nplt.show()","1b927c44":"df.groupby('Product line')['gross income'].sum()","7a40d4a7":"df.groupby(df.index).mean().shape","c8b56072":"plt.figure(figsize=(10,5))\nsns.lineplot(x= df.groupby(df.index).mean().index, y = df.groupby(df.index).mean()['gross income'])\nplt.title(\"Time trend in gross income\")\nplt.show()","30e1538b":"plt.figure(figsize=(12, 5))\nplt.title('Total Monthly transaction by Gender')\nsns.countplot(x='Product line', hue = 'Gender', data=df)\nplt.show()","4f1eaf23":"gender_dummies  = pd.get_dummies(df['Gender'])\ngender_dummies.head()","2a747d83":"df1 = pd.concat([df, gender_dummies], axis = 1)\ndf1.head()","c4bf8834":"fig, axes = plt.subplots(2,1, sharex=True, figsize=(14,8))\nsns.barplot(ax=axes[0], x=df1['Product line'], y=df1['Female']).set_title(\"Spending pattern of Female\")\nsns.barplot(ax=axes[1], x=df1['Product line'], y=df1['Male']).set_title(\"Spending pattern of Male\")\nplt.show()","dfa5547a":"plt.figure(figsize = (12,6))\nx_ticks = [1,2,3,4,5,6,7,8,9,10]\nsns.distplot(df.Quantity).set_title('Products bought by customers')\nplt.xticks(x_ticks)\nplt.show()","c52a5102":"df[['Quantity']]['Quantity'].value_counts()","9639d143":"plt.figure(figsize=(10, 5))\nsns.countplot(df.weekday).set_title('Daily Sales by Day of the Week')\nplt.show()","b355716f":"# We need to extract the hour from the \u2018Date\u2019 variable to do this analysis.\ndf['Time'] = pd.to_datetime(df['Time'])\ndf['Hour'] = (df['Time']).dt.hour\ndf['Hour'].unique()","b4f52442":"plt.figure(figsize=(8,5))\nsns.lineplot(x=df.Hour,  y = df.Quantity).set_title(\"Product Sales per Hour\")\nplt.show()","acaa59ba":"plt.figure(figsize = (10,5))\nx_ticks = [0,1,2,3,4,5,6,7,8,9,10]\nsns.barplot(y = df['Product line'], x = df.Rating).set_title(\"Rating of products\")\nplt.xticks(x_ticks)\nplt.show()","7928840d":"plt.figure(figsize = (12,5))\ny_ticks = [0,1,2,3,4,5,6,7,8,9,10]\nsns.violinplot(x = 'Product line', y = 'Quantity', data=df )\nplt.yticks(ticks=y_ticks)\nplt.show()","904a84b4":"plt.figure(figsize=(20,7))\nsns.barplot(df['City'],df['gross income'],palette='Accent')\nplt.xlabel('City name',fontsize='16')\nplt.xticks(fontsize='16')\nplt.ylabel('Gross income',fontsize='16')\nplt.yticks(fontsize='16')\nplt.show()","8e424bd5":"plt.figure(figsize=(8,6))\nsns.countplot(y ='Product line', hue = \"City\", data = df) \nplt.xlabel('Count')\nplt.show()","d21c885f":"plt.figure(figsize=(10,5))\nsns.countplot(hue=df['Customer type'],x=df['Gender'])\nplt.show()","ba448d58":"#what is the distribution of customer type for each Gender\npd.pivot_table(df , index = 'Customer type' , values = 'Invoice ID' , columns = 'Gender' , aggfunc = 'count')","9fe47ad1":"plt.figure(figsize=(10,5))\nsns.countplot(x=df['Customer type'],hue=df['Product line'])\nplt.show()","81c5c66b":"pd.pivot_table(df , index = 'Customer type' , values = 'Invoice ID' , columns = 'Product line' , aggfunc = 'count')","67559f76":"plt.figure(figsize=(10,5))\nsns.countplot(hue=df['Customer type'],x=df['Branch'])\nplt.show()","b16dffdc":"#what is the distribution of customer type for each branch\npd.pivot_table(df , index = 'Customer type' , values = 'Invoice ID' , columns = 'Branch' , aggfunc = 'count')","05779993":"plt.figure(figsize=(10, 5))\nsns.countplot(df.month).set_title('Maximum Sales by Month')\nplt.show()","4725eb9a":"df.groupby('month')['gross income'].count().sort_values(ascending=False)","6d4444ca":"plt.figure(figsize=(12,6))\nsns.countplot(y=df['Branch'],hue=df['Product line']).set_title(\"Product line sale based on Branch\")\nplt.show()","c3b8b7d3":"df.groupby('Branch')['Product line'].count()","2c7e5acf":"pd.pivot_table(df , index = 'Branch' , values = 'Invoice ID' , columns = 'Product line' , aggfunc = 'count')","512c0e9d":"plt.figure(figsize=(12,6))\nsns.barplot(x=df['Product line'],y=df['cogs']).set_title(\"Highest cogs based on Product line\")\nplt.show()","967e0dd0":"df.groupby('Product line')['cogs'].mean()","49c798df":"branch=df[[\"Branch\", \"gross income\"]].groupby(['Branch'], as_index=False).sum().sort_values(by='gross income', ascending=False)\nplt.figure(figsize=(12,6))\nsns.barplot(x='Branch', y='gross income',data=branch)\nplt.show()","a8d622d6":"pd.pivot_table(df , columns = 'Branch' , aggfunc='sum' , values = 'gross income')","fe30a8ec":"plt.figure(figsize=(12,6))\nsns.regplot(data = df, x = 'gross income', y = 'Unit price').set_title(\"Unit price vs gross income\")\nplt.show()","ae61c858":"# data type conversion\nfrom sklearn.preprocessing import LabelEncoder\n# re processing the data\nfrom sklearn.preprocessing import StandardScaler\n# Splitting the data\nfrom sklearn.model_selection import train_test_split\n# Algorithms\nfrom sklearn.cluster import KMeans","4e5b3b3f":"df1=df.copy() # copying the data ans assigning it to other variable","e9a1d009":"df1.head()","eaca5cf6":"df1.drop(columns=['Invoice ID','Time'],inplace=True) # dropping the columns","e4e0bfa6":"objList = df1.select_dtypes(include = \"object\").columns       # extracting object data type from dataset\nprint (objList)                                  ","2647487a":"### Converting features`m","1c63b194":"le = LabelEncoder()\nfor features in objList:\n    df1[features] = le.fit_transform(df1[features])\ndf1.info()       #Checking Info after LabelEncoding","7ec9f153":"df1.head()         #Viewing Data after LabelEncoding","fbfed15e":"scale = StandardScaler()\nscaleddata = pd.DataFrame(scale.fit_transform(df1), columns=df1.columns)","7a67c4ad":"plt.figure(figsize=(15,8))\nsns.heatmap(df1.corr(),annot=True,cmap=plt.cm.Reds).set_title('Correlation Heatmap.')\nplt.show()","8f656f6b":"# Evaluating the model performance\nmodel = KMeans(n_clusters=4, init=\"k-means++\",random_state=0)\nmodel.fit(df1)","5d76d270":"clusters = model.fit_predict(df1)\nclusters","dae14539":"plt.figure(figsize=(12,6))\nsns.scatterplot(data=df1, x=\"Unit price\", y=\"gross income\", hue= clusters, palette = \"bright\")\ncenters = model.cluster_centers_\n# Plot centers\nplt.scatter(centers[:, 0], centers[:, 1], c='black', s=50, alpha = 0.6)\nplt.xlabel(\"Unit price\")\nplt.ylabel(\"gross income\")\nplt.show()","0b2197d6":"clusters = pd.DataFrame(model.fit_predict(df1), columns=['clusters'])\nrichcustomers = data.loc[clusters['clusters'] == 1]\nnotrichcustomers = data.loc[clusters['clusters'] == 0]","d4d63396":"plt.figure(figsize=(15,5))\nsns.set_palette(['red'])\nsns.countplot(richcustomers['City'])\nplt.show()","a2c81d3c":"plt.figure(figsize=(15,5))\nsns.set_palette(['red'])\nsns.countplot(richcustomers['Product line'])\nplt.show()","e7b240e2":"plt.figure(figsize=(15,5))\nsns.set_palette(['red'])\nsns.countplot(notrichcustomers['Product line'])\nplt.show()","094d0b98":"plt.figure(figsize=(15,5))\nsns.set_palette(['red'])\nsns.distplot(richcustomers['Total'])\nplt.show()","40043e9e":"plt.figure(figsize=(15,5))\nsns.set_palette(['red'])\nsns.distplot(notrichcustomers['Total'])\nplt.show()","2fa53b32":"richcustomers['Date'] = pd.to_datetime(richcustomers['Date'])\nrichcustomers['weekday'] = richcustomers['Date'].dt.day\nplt.figure(figsize=(20,7))\nsns.countplot(richcustomers['weekday'])\nplt.show()","726f336b":"notrichcustomers['Date'] = pd.to_datetime(notrichcustomers['Date'])\nnotrichcustomers['weekday'] = notrichcustomers['Date'].dt.day\nplt.figure(figsize=(20,7))\nsns.countplot(notrichcustomers['weekday'])\nplt.show()","6a3fa0e8":"## Query16: Which hour of the day is the busiest?","ec23bd9a":"## Query20: Customer type basis on Product line","a0de3e74":"## Query10:  What is the relationship between Gender and Gross income?","920ba6e3":"## Query12: Is there any time trend in gross income?","72371206":"The data set contains 1000 entries and 17 Features","21faeae1":"## Univariate analysis","a99fb344":"### Query1: What does the customer rating look like and is it skewed?","4a839b8a":"## Feature Selection","af92104f":"We can see that the mean PerformanceRating of all the employees is 6.9727","eddc776d":"## Query4: Which product line has more sale ?","02f90b13":"##### Gross income is similar for both male and female, though female customers spend a bit higher.","9ea3ef47":"### Query13: What is the spending patterns of females and males and in which category do they spend a lot?","b2c59254":"##### There is not much difference in gross income by cities at an average level. Naypyitaw city has a slightly higher income than Yangon or Mandalay.","27c5127a":"## Comparing the total value of items bought by the wealthy and the thrifters","f3f029a8":"##### Though the rating for 'fashion accessories' and 'food and beverages' is high but quantity purchased is low. Hence, supply for these products need to be increased.","7c3deee2":"## Query22: Which  Month has maximum sales?","b16df84c":"## Plotting the countplot for the customers from each of the cities","8fbe9140":"##### The most popular payment method is EWallet.","b9c6d6d6":"##### There is a high positive correlation between the gross income and total as well as gross income and quantity ","1fc9be6a":"##### Peak is observed at 2 pm of the day. Hence, sales is typically higher in the afternoons.","0ccef34f":"Clearly, what is clearly visible here is that the supermarket gets more visitors during particular days of the month.In the case of the wealthy customers the peak day of all three months is the 19th day of the respective month.In the case of the thrift shoppers, the peak day of each month is the 26th day of the month.","060890a0":"##### As you can see, unit price is positively correlated to cogs with 63% correlation. Another interesting observation is that \u2018Ratings\u2019 hardly has any correlation with any other variables.As is obvious, Quantity and gross income has very high correlation of 70%.","2c06f08e":"##### For the analysis on spending patterns of males and females, we can create create a dummy variable for Gender and concatenate it with the original data.","44e11223":"##### Most of the customers buy 10 quantities","29741213":"## Download the file here : https:\/\/github.com\/PavanKumarReddy-B\/Supermarket-Sales-Data-analysis","040a0473":"We used uni-variate, bi-variate and correlation analysis to perform basic EDA on the supermarket sales data.\n\nTo summarize below are some of the findings\/observations from the data:\n\n* The customer rating is more or less uniform with the mean rating being around 7 and there is no relationship between gross income and customer ratings.\n\n* The data consists of 3 cities\/branches. Though branch A has slightly higher sales than the rest, C i.e. Naypyitaw is the most profitable branch in terms of gross income.\n\n* Fashion accessories and food and beverages are the most sold product in Naypyitaw and these products should be focused on along with electronic accessories.\n\n* The most popular payment method is E-wallet and cash payment is also on the higher side.\n\n* There is no particular time trend that can be observed in gross income.\n\n* At an overall level, \u2018Sports and Travel\u2019 generates highest gross income.\n\n* Gross income is similar for both male and female, though female customers spend a bit higher at the 75th percentile. Females spend on \u2018fashion accessories\u2019 the most and for males surprisingly it is \u2018Health and beauty\u2019. Females also spend more on \u2018Sports and travel\u2019 which generates highest income overall.\n\n* Using the correlation analysis, one interesting observation has emerged that customer ratings is not related to any variable.\n\n* Most of the customers buy 10 quantities and busiest time of the day is afternoon i.e. around 2 pm which records highest sales. Sales is higher on Tuesdays and Saturdays compared to the rest of the week.\n\n* Though the rating for \u2018fashion accessories\u2019 and \u2018food and beverages\u2019 is high but the quantity purchased is low. Hence, supply for these products need to be increased.","ed4d0352":"##### Sales are highest on Saturdays probably because it is the weekend. Interestingly,Tuesdays is a close second.Mondays is the lowest in sales, probably because it is start of the working week.","50f7850f":"We can observe that the data set dosen't contain any null values or NaN.","6351d00e":"## Query15: Which day of the week has maximum sales?","0c6a04aa":"##### Branch C has highest gross income.","c3a4284e":"##### The rating distribution looks uniform and there seems to be no skewness on the left or right side of the distribution. We can plot the mean and the percentiles to show this as well. The red dotted lime is the mean and the green and orange lines indicate the 25th and 75th quartiles respectively.The mean rating is ~7 across products.","86b28df0":"##### There are multiple dates per customers, so we have to summarize the data. We will use date as the index for this and for summarization we will use mean value of the variables. We get 89 rows i.e 89 unique days of data across all customers","152f9099":" #### Importing libraries required for building the model","4100410e":"## Query9: Which City is the most profitable?","a5c08c07":"### Query18: Which city should be chosen for expansion and which products should it focus on?","8329aed6":"## Query25: Which Branch has highest gross icome","cb2b68f6":"##### Rating is similar across products and at around 7.","fb8370d2":"## Query11: Which product line generates most income?","152d2341":"## Query19: Customer type basis on Gender","e3a3002e":"##### Join the Gender dummies with the original data","3fa1b0ae":"## Query23: Which branch has more product line sale","26d2303d":"## Other analysis`","90cafa7a":"## Query14: How many products are bought by customers?","c671f00e":"# Conclusion:","8f9c0d99":"## Query6: Total bill in each product line ?","af4bd269":"### Plot for the gross income and unit price of the items bought","93170cb5":"## Query7: Product sales on the basis of gender","952a623d":"### i) Rating of products","e46872a8":"## Query 26: Finding the relation between Unit price and gross income","daec9507":"##### As you can see from the scatter plot and the trend line which is pretty flat that there is no relationship between gross income of a customer and his rating.","baa9ab91":"## Query2: Is there any difference in aggregate sales across branches?","785c18da":"##### Most of the Females have membership card.","539be62d":"##### Fashion accessories and food and beverages are the most sold product in Naypyitaw and these products should be focused on for expansion along with electronic accessories.","436d6b84":"##### Branch A has more product line sales compared to other two branches. Branch A has more sales from Home and lifestyle product line. Branch c has more sales from Food and beverages,Fashion accessories. Branch B has more sales from Sports and travel, Fashion accessories.","4d94effa":"### Model buliding","793f3e50":"### Clustering the data","67ef1e51":"* There are no corelated variables with Rating. if we choose Rating as a target variable it effects our model performance. \n* So we can't use Supervised Machine Learning Algorithms here. And clearly we get know that this dataset is used for analysis.\n* In order to apply ML model we have to go with Un-Supervised ML. So we are using KMeans Clustering algorithm.","930f095b":"## Correlation analysis","af2f47f5":"# Visualzation","f1115d83":"# Getting the Data set\n\nImporting the data set of Supermarket Sales. which can be downloaded from the link \n https:\/\/www.kaggle.com\/aungpyaeap\/supermarket-sales","e4ea6744":"### Dummy method","37f01a01":"## Query17: Which product line should the supermarket focus on?","2d53149f":"##### Home and lifestyle, Sports and travel has highest cogs.","ac245ca0":"##### Customers with membership card are buying more products from Food and beverages and Non-membership customers are buying more products from Electronic accessories","9995201f":"##### Home and life style, Sports and travel are the highest average sales of product","21fa386d":"##### Naypyitaw city has more rich customers.","3b6a8460":"##### It is obvious that Naypyitaw is the most profitable city, hence the expansion plan should be based on this city.","7a067e9f":"## Query3: Which is the most pouplar payment method used by customers?","f003b9f8":"### Set the Date as the index of the dataset","db003989":"##### Sales are highest in the month of January.","46685135":"### Copying data ","86716b5a":"##### There is not much difference in sales across the 3 branches of A, B and C. The sales in branch A(i.e, Yangon city) is a bit higher than the rest of the branches.","b42e3887":"## Checking what exactly do the wealthy customers and thrifters buy","4802f6eb":"### Corelation heatmap","ac1a33a7":"## Query24: Which Product line has highest cogs","88e3024c":"##### There are more Membership type customers from Branch C.","35e262e4":"##### Gross income is highest in Food and beverages.","b3bf595b":"## Qurey8: Does gross income affect the ratings that the customers provide?","3a438587":"##### People with higher gross incomes seem to be able to afford items of higher unit price.","2cc347c7":"## Query21: Customer type basis on Branch","0b61b9b6":"## Variable transformations","5cddd040":"##### No particular time trend except for some days the gross income is pretty high and some days it is pretty low. Overall it remains at a certain average level.","fad2f92a":"##### Standardization is a another reprocessing tool which transforms all the numerical values (assuming that the whole dataset is just numerical values) into values between -1 and 1. This increases the processing speed and makes using algorithms on the data easier.","c47a1733":"# Introduction\nThe Project Data is Supermarket Sales Analysis. The Supermarket Sales data can be downloaded from the link.\nhttps:\/\/www.kaggle.com\/aungpyaeap\/supermarket-sales\n\nThe growth of supermarkets in most populated cities are increasing and market competitions are also high. The dataset is one of the historical sales of supermarket company which has recorded in 3 different branches for 3 months data. Predictive data analytics methods are easy to apply with this dataset.\n\nAttribute information\n\n 1.Invoice id: Computer generated sales slip invoice identification number,\n 2.Branch: Branch of supercenter (3 branches are available identified by A, B and C),\n 3.City: Location of supercenters,\n 4.Customer type: Type of customers, recorded by Members for customers using member card and Normal for without member        card,\n 5.Gender: Gender type of customer,\n 6.Product line: General item categorization groups - Electronic accessories, Fashion accessories, Food and beverages,        Health and beauty, Home and lifestyle, Sports and travel,\n 7.Unit price: Price of each product in $,\n 8.Quantity: Number of products purchased by customer,\n 9.Tax: 5% tax fee for customer buying,\n 10.Total: Total price including tax,\n 11.Date: Date of purchase (Record available from January 2019 to March 2019), \n 12.Time: Purchase time (10am to 9pm),\n 13.Payment: Payment used by customer for purchase (3 methods are available \u2013 Cash, Credit card and Ewallet),\n 14.COGS: Cost of goods sold,\n 15.Gross margin percentage: Gross margin percentage,\n 16.Gross income: Gross income,\n 17.Rating: Customer stratification rating on their overall shopping experience (On a scale of 1 to 10).","16cd0ad3":"# Importing libraries","2e4d2ed9":"### Individual correlations","c573e85a":"## Query5: Rating distribution in 3 branches","461aac14":"# Applying algorithm and Buliding the model","d58546ab":"##### Fashion accessories, Food and beverages are the most bought products by Female customers. Electronic accessories, Health and beauty are the most bought products by Male customers.","146c1bb5":"##### We can see that the average rating of branch A and C is more than seven and branch B is less than 7.","81c61b6d":"### Visualizing the pair wise correlations","a8a8cde7":"### ii) Quantity purchased by product","797dbfae":"##### Fashion accessories & Food and beverages sales are  bit higher than the rest of the product lines.","aa09d156":"##### Clearly the clustering algorithm (KMeans) is working fine. The wealthy customers pay way more than the thrifters and this can be clearly seen in the distributions.","f51133c9":"# Data Exploration\/ Analysis\n\nExploring the given data(viewing the data,checking info,Checking for null values,Feature Conversion,Correlation etc.)","111d77ec":"## Bivariate analysis","36e1c115":"## Visulazing the model"}}