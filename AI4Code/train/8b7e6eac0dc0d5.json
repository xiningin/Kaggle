{"cell_type":{"df62342c":"code","3fcb0529":"code","75ea96f1":"code","4eca8721":"code","54ec1284":"code","f980a9be":"code","b9edd613":"code","536d9735":"code","d3a0bbd1":"code","971e1f81":"code","a8e0171c":"code","792c4796":"code","4ee0badd":"code","3f9f08c3":"code","b35e0526":"code","b21b091a":"code","0884ed1b":"code","9178e3e0":"code","e03b627f":"code","ffab32be":"code","e7ae54c4":"code","ec29a7ce":"code","b8ea3fe9":"code","ee8d99ea":"markdown","e5a6b43a":"markdown","bcb02f5b":"markdown","a60ca970":"markdown","b995fdea":"markdown","1372230f":"markdown","5352184a":"markdown","20540105":"markdown","7c6d047d":"markdown","c16a133e":"markdown","6fa2834f":"markdown","80b122be":"markdown","73cdb145":"markdown","c4ccd483":"markdown","616b1942":"markdown"},"source":{"df62342c":"import os\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3fcb0529":"import pandas as pd\nimport numpy as np\nimport geopandas as gpd\n\nfrom difflib import SequenceMatcher\nfrom matplotlib import pyplot as plt","75ea96f1":"# child marriages data\ndf = pd.read_csv(filepath_or_buffer='\/kaggle\/input\/global-child-marriage-data\/dataset.csv', encoding='cp1252')\n\n# countries geo data\ngdf = gpd.read_file(filename=gpd.datasets.get_path(dataset='naturalearth_lowres'))","4eca8721":"df.shape","54ec1284":"df.columns = ['name', 'F-15', 'F-18', 'F-ref-year', 'DS-F', 'M-18', 'M-ref-year', 'DS-M']\ndf = df[['name', 'F-15', 'F-18', 'F-ref-year', 'M-18', 'M-ref-year']]\n\ndf['name'] = df['name'].apply(func=lambda x : str(x).split(' (')[0])\n\ndf['F-15'] = df['F-15'].apply(func=lambda x : np.nan if (x == '\u2013' or x == '-') else x)\ndf['F-18'] = df['F-18'].apply(func=lambda x : np.nan if (x == '\u2013' or x == '-') else x)\ndf['M-18'] = df['M-18'].apply(func=lambda x : np.nan if (x == '\u2013' or x == '-') else x)\n\ndf = df.dropna(axis=0)\n\ndf['F-15'] = df['F-15'].astype(dtype='int64')\ndf['F-18'] = df['F-18'].astype(dtype='int64')\ndf['M-18'] = df['M-18'].astype(dtype='int64')\ndf['F-ref-year'] = df['F-ref-year'].astype(dtype='int64')\ndf['M-ref-year'] = df['M-ref-year'].astype(dtype='int64')","f980a9be":"df.head()","b9edd613":"df.dtypes","536d9735":"df.shape","d3a0bbd1":"df['name'].value_counts()","971e1f81":"geo_names = gdf['name'].to_list()\ndf_names = df['name'].to_list()","a8e0171c":"def get_similar_string(string, string_list):\n    name_ratios = {}\n    \n    for i in string_list:\n        dm = SequenceMatcher(None, string, i).ratio()\n        name_ratios[i] = dm\n    \n    name_ratios = dict(sorted(name_ratios.items(), key=lambda v : v[1], reverse=True))\n    similar_string = list(name_ratios.keys())[0]\n    \n    return similar_string","792c4796":"replacements = {\n    \"Bosnia and Herzegovina\" : \"Bosnia and Herz.\",\n    \"Central African Republic\" : \"Central African Rep.\",\n    \"Democratic Republic of the Congo\" : \"Dem. Rep. Congo\",\n    \"Equatorial Guinea\" : \"Eq. Guinea\",\n    \"Eswatini\" : \"eSwatini\",\n    \"Republic of Moldova\" : \"Moldova\",\n    \"Solomon Islands\" : \"Solomon Is.\",\n    \"Tonga\" : \"Togo\",\n    \"Viet Nam\" : \"Vietnam\",\n    \"Dominican Republic\" : \"Dominican Rep.\"\n}\n\nfor (o, r) in replacements.items():\n    df['name'].replace(to_replace=o, value=r, inplace=True)","4ee0badd":"cm_gdf = gpd.GeoDataFrame(\n    pd.merge(left=df, right=gdf, on='name')\n)","3f9f08c3":"cm_gdf.head()","b35e0526":"ax = gdf.plot(color='white', edgecolor='black', figsize=(15, 10))\ncm_gdf.plot(edgecolor='black', ax=ax)\nplt.show()","b21b091a":"def plot_marriages(plot_column, cm_gdf, gdf, show_yearwise=True):    \n    cm_gdf_country = cm_gdf.dissolve(by=['name'], aggfunc='mean')\n    \n    ax = gdf.plot(color='white', edgecolor='black', figsize=(15, 10))\n    cm_gdf_country.plot(column=plot_column, edgecolor='black', legend=True, legend_kwds={'shrink': 0.3}, ax=ax)\n    plt.show()\n    \n    if show_yearwise:\n        if plot_column.startswith('F'):\n            year_col = 'F-ref-year'\n        else:\n            year_col = 'M-ref-year'\n        \n        cm_gy = cm_gdf_country.groupby(by=[year_col]).mean()\n        cm_gy = cm_gy[['F-15', 'F-18', 'M-18']]\n        cm_gy.plot(kind='bar', figsize=(12, 6))\n        plt.show()\n    \n    return None","0884ed1b":"plot_marriages(plot_column='F-15', cm_gdf=cm_gdf, gdf=gdf)","9178e3e0":"plot_marriages(plot_column='F-18', cm_gdf=cm_gdf, gdf=gdf)","e03b627f":"plot_marriages(plot_column='M-18', cm_gdf=cm_gdf, gdf=gdf)","ffab32be":"def plot_marriage_rates_by_year(year, cm_gdf, gdf, plot_column, show_countrywise=True):    \n    if plot_column.startswith('F'):\n        year_col = 'F-ref-year'\n    else:\n        year_col = 'M-ref-year'\n    \n    min_year = cm_gdf[year_col].min()\n    max_year = cm_gdf[year_col].max()\n    \n    if (year < min_year) or (year > max_year):\n        return None\n    \n    cm_year_gdf = cm_gdf[cm_gdf[year_col] == year]\n    \n    ax = gdf.plot(color='white', edgecolor='black', figsize=(15, 10))\n    cm_year_gdf.plot(column=plot_column, edgecolor='black', legend=True, legend_kwds={'shrink': 0.3}, ax=ax)\n    plt.show()\n    \n    if show_countrywise:\n        cm_gdf_country = cm_gdf.dissolve(by=['name'], aggfunc='mean')\n        cm_gy = cm_gdf_country.groupby(by=['name', year_col]).mean()\n        cm_gy = cm_gy.reset_index()\n        cm_gy = cm_gy[['name', 'F-15', 'F-18', 'F-ref-year', 'M-18', 'M-ref-year']]\n        cm_gy = cm_gy[cm_gy[year_col] == year]\n        cm_gy = cm_gy[['name', 'F-15', 'F-18', 'M-18']]\n        cm_gy = cm_gy.set_index(keys=['name'])\n        cm_gy.plot(kind='bar', figsize=(12, 6))\n        plt.show()\n    \n    return None","e7ae54c4":"plot_marriage_rates_by_year(year=2014, cm_gdf=cm_gdf, gdf=gdf, plot_column='F-15')","ec29a7ce":"plot_marriage_rates_by_year(year=2016, cm_gdf=cm_gdf, gdf=gdf, plot_column='F-18')","b8ea3fe9":"plot_marriage_rates_by_year(year=2016, cm_gdf=cm_gdf, gdf=gdf, plot_column='M-18')","ee8d99ea":"**Females married by the age 15**","e5a6b43a":"**Unmatched Countries** - \n\n* Cabo Verde\n* Comoros\n* Democratic People's Republic of Korea\n* Kiribati\n* Lao People's Democratic Republic\n* Maldives\n* Marshall Islands\n* Nauru\n* Samoa\n* Sao Tome and Principe\n* Tuvalu\n* United Republic of Tanzania","bcb02f5b":"### Data Replacements","a60ca970":"**Females married by the age 18**","b995fdea":"### Data Merging","1372230f":"**Females married by the age 18**","5352184a":"**Males married by the age 18**","20540105":"### Data Editing","7c6d047d":"### Data Reading","c16a133e":"**Males married by the age 18**","6fa2834f":"**Females married by the age 15**","80b122be":"### Simple Plot","73cdb145":"### Marriages by Year","c4ccd483":"### `import` Packages","616b1942":"### All Marriages"}}