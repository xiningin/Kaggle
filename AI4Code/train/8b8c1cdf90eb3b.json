{"cell_type":{"ec18e792":"code","582c72b7":"code","39eb46f8":"code","6e1ee6fc":"code","bdaa3179":"code","2f07dd2e":"code","2c24c215":"code","ed54de73":"code","a5f9f36b":"code","20cb4f0b":"code","a0556d6e":"code","a382b158":"code","0189bcc5":"code","da8041c7":"code","f87884fe":"markdown","93013262":"markdown"},"source":{"ec18e792":"# https:\/\/www.kaggle.com\/ricopue\/second-structure-plot-and-info-with-forgi\n# https:\/\/www.kaggle.com\/erelin6613\/openvaccine-rna-visualization\/\n!conda install -y -c bioconda forgi\n!conda install -y -c bioconda viennarna","582c72b7":"import warnings\nwarnings.filterwarnings('ignore')\nimport os\n\n#Basic data manipulation libraries\nimport pandas as pd, numpy as np\nimport math, json, gc, random, os, sys\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom tqdm import tqdm\n\n\n#Deep Learning Libraries\nimport torch\n\n#Library for model evaluation\nfrom sklearn.model_selection import train_test_split, KFold\n\nimport forgi.graph.bulge_graph as fgb\nimport forgi.visual.mplotlib as fvm","39eb46f8":"train = pd.read_json('\/kaggle\/input\/stanford-covid-vaccine\/train.json', lines=True)\ntest = pd.read_json('\/kaggle\/input\/stanford-covid-vaccine\/test.json', lines=True)\nsample_sub = pd.read_csv('\/kaggle\/input\/stanford-covid-vaccine\/sample_submission.csv')\n\ntarget_cols = ['reactivity', 'deg_Mg_pH10', 'deg_pH10', 'deg_Mg_50C', 'deg_50C']\n\ntoken2int = {x:i for i, x in enumerate('().ACGUBEHIMSX')}\n\ndef preprocess_inputs(df, cols=['sequence', 'structure', 'predicted_loop_type']):\n    return np.transpose(\n        np.array(df[cols].applymap(lambda seq: [token2int[x] for x in seq]).values.tolist()),\n        (0, 2, 1))\n\ntrain_inputs = preprocess_inputs(train[train.signal_to_noise > 1])\ntrain_labels = np.array(train[train.signal_to_noise > 1][target_cols].values.tolist()).transpose((0, 2, 1))","6e1ee6fc":"display(train.info())\ndisplay(train.describe())\ndisplay(train.head())","bdaa3179":"train.loc[0]","2f07dd2e":"for col in train.loc[0].index:\n    msg = ''\n    col_type = type(train.loc[0][col])\n    if col_type == str:\n        msg = str(len(train.loc[0][col])) + ' ' + train.loc[0][col]\n    elif col_type == list:\n        msg = 'list.len=' + str(len(train.loc[0][col]))\n    elif type(train.loc[0][col]).__module__ == np.__name__:\n        msg = train.loc[0][col]\n    else:\n        msg = 'others'\n    print('#',col,':',msg)","2c24c215":"def plot_sample(i=None):\n    if i is None:\n        samp = train.sample(1)\n    else:\n        samp = train.loc[i:i]\n    rna = []\n    seq = samp.loc[samp.index[0], 'sequence']\n    struct = samp.loc[samp.index[0], 'structure']\n    bg = fgb.BulgeGraph.from_fasta_text(f'>rna1\\n{struct}\\n{seq}')[0]\n    plt.figure(figsize=[20,15])\n    fvm.plot_rna(bg)","ed54de73":"plot_sample(0)","a5f9f36b":"bpps_1 = np.load('..\/input\/stanford-covid-vaccine\/bpps\/id_00073f8be.npy')","20cb4f0b":"print(bpps_1.shape)\nplt.figure(figsize=[20,20])\nplt.imshow(bpps_1)","a0556d6e":"plt.figure(figsize=[20,5])\n_ = plt.hist(bpps_1.flatten(),log=1,bins=1000)","a382b158":"plt.figure(figsize=[10,10])\nplt.imshow(bpps_1>0)","0189bcc5":"print((bpps_1==0).sum())\nprint(107**2)\nplt.figure(figsize=[20,5])\n_ = plt.hist(np.arcsinh(bpps_1*10**4).flatten(),log=1,bins=250)","da8041c7":"plt.figure(figsize=[20,20])\nplt.imshow(np.arcsinh(bpps_1*10**4))","f87884fe":"# init","93013262":"taken from: https:\/\/www.kaggle.com\/aestheteaman01\/mvan-covid-mrna-vaccine-analysis-notebook-268"}}