{"cell_type":{"6b61d3f4":"code","f2b8ed43":"code","3e46de43":"code","e21fc861":"code","ec8b84ec":"code","7e720f5e":"code","b75f2e57":"code","44b4cd23":"code","29dcdb43":"code","089de385":"code","85496cdd":"code","4262d94f":"code","0303f27c":"code","365a6171":"code","d49f94cb":"code","a28f1179":"code","713670c5":"code","1512dee0":"code","194d86db":"code","c98c06ed":"code","415bfbab":"markdown","c75e7f59":"markdown","23a6b48c":"markdown","dfd455bc":"markdown","5977fa0a":"markdown"},"source":{"6b61d3f4":"# Basic libraries imports\nimport glob         # Library for handling file searching\nimport numpy as np  # Linear algebra library\nimport pandas as pd # Data processing, CSV file I\/O (e.g. pd.read_csv)","f2b8ed43":"# Library for handling graphics\nimport matplotlib.pyplot as plt    # For plotting\nimport matplotlib.ticker as ticker # For handling ticks specifics","3e46de43":"# Standard Machine Learning Libraries\nfrom sklearn.preprocessing import StandardScaler     # Normalization \nfrom sklearn.model_selection import train_test_split # For train\/test split\nfrom sklearn.metrics import r2_score                 # To compute R^2\nfrom sklearn.linear_model import SGDRegressor        # Basic Linear Regressor","e21fc861":"# Lets retrieve the datasets (* symbol means any csv file in the given folder)\nsearch_files = \"..\/input\/traffic-volume-in-brazils-highway-toll-plazas\/volume*.csv\"\nfounded_files = glob.glob(search_files)\n\nprint(\"\\n\".join(founded_files))","ec8b84ec":"# Read each file into a pandas dataframe, finally put them all in a single dataframe\n\ndatabase_list = []\n\nfor file in founded_files:\n    database = pd.read_csv(file,                    # Given file\n                           sep=\";\",                 # Database use \";\" separator\n                           decimal=\",\",             # Brazil number separator\n                           encoding = \"ISO-8859-1\") # Encoding\n    database_list.append(database)\n\ndataset = pd.concat(database_list, ignore_index=True)","7e720f5e":"dataset.head()","b75f2e57":"dataset.dtypes","44b4cd23":"# Handling data (mon-year, e.g., jan-2019)\ndataset[\"mes_ano\"] = pd.to_datetime(dataset[\"mes_ano\"], format='%b-%y')","29dcdb43":"# Number of operators\ndataset[\"Concessionaria\"].unique()","089de385":"# Lets filter the dataset for only Nova Dutra entries\n# Nova Dutra (BR-116) interconnects S\u00e3o Paulo and Rio de Janeiro\n# it is one of the busiest highways.\n\ndataset_dutra = dataset[dataset[\"Concessionaria\"] == \"01.Nova Dutra\"]\ndataset_dutra","85496cdd":"# Lets filter the dataset for only Nova Dutra entries\n# Nova Dutra (BR-116) interconnects S\u00e3o Paulo and Rio de Janeiro\n# it is one of the busiest highways.\n\ndataset_dutra = dataset[dataset[\"Concessionaria\"].str.contains(\"Nova Dutra\")]\ndataset_dutra","4262d94f":"# Lets see what are the categories of fees in this operator\ndataset_dutra[\"Categoria\"].unique()","0303f27c":"# Lets filter category 1 (\"cars\")\ndataset_dutra_cars = dataset_dutra[dataset_dutra[\"Categoria\"].str.contains(\"Categoria 1\")]\ndataset_dutra_cars","365a6171":"# Let's get BR-116, one of the highway that have the highest volume in Brazil\ndataset_dutra_car_br116 = dataset_dutra_cars[dataset_dutra_cars[\"Praca\"].str.contains(\"BR-116\/SP\")]\ndataset_dutra_car_br116","d49f94cb":"# Finally, lets group the data by month\ndataset_br116_month = dataset_dutra_car_br116.groupby([\"mes_ano\"]).sum()\ndataset_br116_month","a28f1179":"# Let's plot the highway volume at every month\nX = dataset_br116_month.index\ny = dataset_br116_month[[\"Volume_total\"]]\n\nplt.xlabel(\"Year\")\nplt.ylabel(\"Number of Vehicles\")\nplt.scatter(X,y)\n\naxis = plt.gca() \nyaxis = axis.get_yaxis()\nyaxis.set_major_formatter(ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\nplt.tight_layout()\n\n# Save fig also\nplt.savefig(\"\/kaggle\/working\/fig1.png\", dpi=300)","713670c5":"# Let's transform the year\/month into month so that we can try to predict the traffic in the next months\ndataset_br116_month[\"month\"] = dataset_br116_month.index.to_period('M') - dataset_br116_month.index[0].to_period('M')\ndataset_br116_month[\"month\"] = dataset_br116_month[\"month\"].apply(lambda x: x.n + 1)","1512dee0":"# Let's plot the highway volume at every month (w.r.t. the number of days)\nX = dataset_br116_month[[\"month\"]]\ny = dataset_br116_month[[\"Volume_total\"]]\n\nplt.xlabel(\"Months\")\nplt.ylabel(\"Number of Vehicles\")\nplt.scatter(X,y)\n\naxis = plt.gca() \nyaxis = axis.get_yaxis()\nyaxis.set_major_formatter(ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\nplt.tight_layout()\n\n# Save fig also\nplt.savefig(\"\/kaggle\/working\/fig2.png\", dpi=300)","194d86db":"# Given X and Y, the goal is to predict how the traffic will behave in the next 24 months\n\nX = dataset_br116_month[[\"month\"]]\ny = dataset_br116_month[[\"Volume_total\"]]","c98c06ed":"# Try out many different regressors, from basic to more advanced ones\n# Linear Regression, MLP, LTSM, etc","415bfbab":"# Preamble","c75e7f59":"# Pre-processing","23a6b48c":"# Processing","dfd455bc":"The available categories (and fees) can be found in the following url\nhttp:\/\/www.novadutra.com.br\/resources\/files\/tolls\/578f39c255bd4a84a9eea8833362d33b_tabela-tarifas-novadutra-2016.pdf\n![Nova Dutra Categories](https:\/\/i.imgur.com\/fRi5TQZ.png)\n","5977fa0a":"# Loading the Dataset"}}