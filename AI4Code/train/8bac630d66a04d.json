{"cell_type":{"41c2f7a7":"code","3079c7bb":"code","693a4cb8":"code","daffd2c0":"code","895bc4f7":"code","34e125dd":"markdown","eda1ef07":"markdown","52dee9c7":"markdown","5a609142":"markdown","ea7540c9":"markdown","4133017d":"markdown"},"source":{"41c2f7a7":"import matplotlib.pyplot as plt\nliste1 = [1,2,3,4,5,10]\nliste2 = [2,3,4,5,6,7]\n\nplt.plot(liste1, liste2)\n\nplt.title(\"Mitt magiske plott\")\nplt.xlabel(\"x-akse\")\nplt.ylabel(\"y-akse\")","3079c7bb":"from datetime import datetime\nimport matplotlib.pyplot as plt\n\ndato_string1 = \"09:00:00 2021-09-24\"\ndato_string2 = \"09-25-2021\"\ndato_string3 = \"2021.09.26 09:00:15\"\ndato_string4 = \"2021\/09\/27 09:00:01\"\ndato_string5 = \"2021-09-28 09:00\"\n\ndato1 = datetime.strptime(dato_string1, \"%H:%M:%S %Y-%m-%d\")\ndato2 = datetime.strptime(dato_string2, \"%m-%d-%Y\")\ndato3 = datetime.strptime(dato_string3, \"%Y.%m.%d %H:%M:%S\")\ndato4 = datetime.strptime(dato_string4, \"%Y\/%m\/%d %H:%M:%S\")\ndato5 = datetime.strptime(dato_string5, \"%Y-%m-%d %H:%M\")\n\nprint(dato1.day, dato1.second)\nprint(dato2.day, dato2.second)\nprint(dato3.day, dato3.second)\nprint(dato4.day, dato4.second)\nprint(dato5.day, dato5.second)\n\nliste = [dato1, dato2, dato3, dato4, dato5]\nliste2 = [1, 5, 10, 20, 30]\n\nplt.figure(figsize=(10, 8), dpi=80)\nplt.plot(liste, liste2)","693a4cb8":"import matplotlib.pyplot as plt\nmarkedsandel = [7.28, 65.98, 11.87, 5.87, 2.34]\nlabels = [\"IE\", \"Chrome\", \"Firefox\", \"Safari\", \"Opera\"]\n\nfig1, ax1 = plt.subplots()\npie = ax1.pie(markedsandel, [0.2, 0.1, 0, 0, 0], labels, ['#ff0000', 'blue', 'green', 'yellow', 'black'])","daffd2c0":"import matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, STOPWORDS\n\nstopwords = set(STOPWORDS)\nfil = open('..\/input\/king-james-bible\/bible.txt')\ninnhold = fil.read()\n\nwordcloud = WordCloud(stopwords=stopwords).generate(innhold)\nfig = plt.figure(figsize=(20,10))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","895bc4f7":"import json\nfrom datetime import datetime\nimport matplotlib.pyplot as plt\n\nfil = open(\"..\/input\/trump-tweets-json\/tweets.json\")\ninnhold = fil.read()\ntweets = json.loads(innhold)\n\ndatoer = []\nretweets = []\n\nfor tweet in tweets:\n    dato = datetime.strptime(tweet[\"date\"], \"%Y-%m-%d %H:%M:%S\")\n    datoer.append(dato)\n    retweets.append(tweet[\"retweets\"])\n\nplt.plot(datoer, retweets)","34e125dd":"# Datetime og imports\n\n1) Bruk `datetime`-modulen (se forelesningsnotatene) til \u00e5 konvertere disse datostringene til `datetime`\n```\n   dato_string1 = \"09:00:00 2021-09-24\"\n   dato_string2 = \"09-25-2021\"\n   dato_string3 = \"2021.09.26 09:00:15\"\n   dato_string4 = \"2021\/09\/27 09:00:01\"\n   dato_string5 = \"2021-09-28 09:00\"\n   \n   dato1 = datetime.strptime(dato_string1, ...)\n```\n\n2) For hver `datetime`, print ut `.year` og `.second`\n\n3) Lag en liste med alle datetimene `liste = [dato1, dato2, dato3, dato4, dato5]`\n\n4) Lag en ny liste med like mange tall som du har datoer\n\n5) Plott datoene mot listen med tall slik at det ser omtrent ut som dette\n\n<img src=\"attachment:d0092580-8fdb-4745-af88-eeef5f2e3fdd.png\" alt=\"drawing\" width=\"400\"\/>\n\n6) Datoene g\u00e5r over hverandre p\u00e5 x-aksen. Bruk google og finn ut hvordan man kan f\u00e5 st\u00f8rre figur (`matplotlib larger plot` f. eks.), og gj\u00f8r dette","eda1ef07":"# Flere grafer\n\n1) s\u00f8k online og finn et datasett som egner seg for plotting med flere grafer. Her er noen forslag (tid p\u00e5 x-aksen i disse):\n\n&nbsp;&nbsp;&nbsp; a) str\u00f8mpriser for 2020 (delt inn i soner)\n   \n&nbsp;&nbsp;&nbsp; b) bilulykker (delt inn i aldersgrupper, type trafikant eller kj\u00f8nn)\n   \nDu kan enten lete p\u00e5 kaggle, eller finne et hos SSB eller norske aviser, og lage variablene selv.\n\n2) lag flere lister med tall fra datasettene over, og plott de (la den samme listen alltid v\u00e6re x-aksen, alts\u00e5 f\u00f8rste argument inn til `plt.plot(x, y)`)\n\n3) gi `label` i `plt.plot(...)`-kommandoen for \u00e5 gi hver graf et navn, og bruk `plt.legend()` for \u00e5 vise navn i figuren\n\n4) bruk google til \u00e5 finne ut hvordan man kan velge farge p\u00e5 grafen\n\n5) bruk google til \u00e5 finne ut hvordan man kan f\u00e5 striplete linjer (linestyle) p\u00e5 grafen (som vist her)\n\n<img src=\"https:\/\/i.stack.imgur.com\/6X1aP.png\" alt=\"drawing\" width=\"300\"\/>\n","52dee9c7":"# Basic plotting\n\n1) lag to lister med tall\n\n2) importer matplotlib slik vi gjorde i forelesningsnotatene\n\n3) plott listene \n\n4) bruk `plt.title()` til \u00e5 gi en tittel\n\n5) bruk `plt.xlabel()` og `plt.ylabel()` til \u00e5 lage aksetekst","5a609142":"# Donald trump tweets\n\n1) Hent datasettet (Add data) Trump tweets json\n\n2) Les inn .json-filen som tekst (bruk `fil.read()`)\n\n3) Importer json-modulen og bruk `json.loads()`-funksjonen til \u00e5 konvertere om innholdet i filen til strukturerte data (kall gjerne variabelen `tweets`)\n\n4) Lag to tomme lister `datoer` og `retweets`\n\n5) Loop over alle tweets og bruk `datetime`-modulen til \u00e5 konvertere `tweet[\"date\"]` til `datetime` og legg til `datoer`-listen du lagde med `datoer.append(...)`\n\n6) Legg ogs\u00e5 til antall retweets til den andre listen\n\n7) Plott retweets som funksjon av dato\n\nInspirasjonskode:\n\n```\nimport json\nfrom datetime import datetime\nimport matplotlib.pyplot as plt\n\nfil = open(\"..\/input\/trump-tweets-json\/tweets.json\")\ninnhold = fil.read()\ntweets = json.loads(innhold)\n\ndatoer = []\nretweets = []\nfor tweet in tweets:\n    dato = datetime.strptime(tweet[\"date\"], \"...\")\n    datoer.append(dato)\n    retweets.append(tweet[\"retweets\"])\n    break # denne stopper for-loopen. Det kan v\u00e6re nyttig mens du lager koden for \u00e5 unng\u00e5 \u00e5 printe ut sykt mye hele tiden\n\nplt.plot(datoer, retweets)\n```\n","ea7540c9":"# Word cloud\n\n1) Kopier koden fra forelesningsnotatene for \u00e5 lage ordsky. Du m\u00e5 nok importere datasettet `kodekurs-samling1` for at koden kj\u00f8rer.\n\n2) Finn et annet datasett p\u00e5 kaggle (jeg har lagt ut blant annet king james bible, men det er mange muligheter) og lag ordsky med denne\n\n3) Hva med en annen tekst? ","4133017d":"# Pie chart\n\n1) finn et datasett online som egner seg for \u00e5 plotte som pie chart (kategorier og et antall). Du kan enten lete p\u00e5 kaggle, eller finne et hos SSB eller norske aviser, og lage variablene selv.\n\n2) lag et enkelt pie chart med dataene\n\n3) s\u00f8k p\u00e5 google og finn ut hvordan man kan *explode* (f\u00e5 en kakebit til \u00e5 stikke ut) slik som her \n\n<img src=\"https:\/\/matplotlib.org\/stable\/_images\/sphx_glr_pie_features_001.png\" alt=\"drawing\" width=\"400\"\/>"}}