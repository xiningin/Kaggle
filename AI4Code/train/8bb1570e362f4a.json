{"cell_type":{"1453ad2a":"code","54296207":"code","f4f3d26e":"code","bbcb9b7a":"code","b9ab7c7b":"code","e8a8896f":"code","581ab594":"code","f3a0f5ed":"code","3d27bd74":"code","5f873b54":"code","1e82a6d0":"code","c9fc35d3":"code","23a49136":"code","9efa1713":"code","44d9700a":"code","e2111556":"code","0137addf":"code","e053e33c":"code","d0342169":"code","1a47b205":"code","ad0e3449":"code","d3c4e2d5":"code","4acedb23":"code","53c60ee9":"code","c4953f93":"code","18407676":"markdown","b3f8e4c7":"markdown","9b8b0ff5":"markdown","d9f4a10e":"markdown","e178ceea":"markdown","73c51315":"markdown","1c475df4":"markdown","5927452c":"markdown","572979f9":"markdown","843e4c36":"markdown","46085c9f":"markdown","4dbdcd79":"markdown"},"source":{"1453ad2a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom tensorflow import keras\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nfrom keras import layers, callbacks","54296207":"train = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ntest = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","f4f3d26e":"print(\"Train shape:\",train.shape,\"\\nTest shape:\",test.shape)","bbcb9b7a":"train.head()","b9ab7c7b":"ytr = train['label']\nxtr = train.drop('label',axis = 1)","e8a8896f":"print(xtr.shape,ytr.shape)","581ab594":"xtr, xval, ytr, yval = train_test_split(xtr, ytr, test_size = 0.27, random_state = 108)","f3a0f5ed":"print('X_tr,y_tr shape',xtr.shape,ytr.shape,'\\nX_val,Y_val shape:',xval.shape,yval.shape)","3d27bd74":"xtr = np.array(xtr).reshape(xtr.shape[0],28,28,1)\/255\nxval = np.array(xval).reshape(xval.shape[0],28,28,1)\/255","5f873b54":"print('X_tr,X_val shape',xtr.shape,xval.shape)","1e82a6d0":"ytr=np.array(pd.get_dummies(ytr))\nyval=np.array(pd.get_dummies(yval))","c9fc35d3":"print('Y_tr,Y_val shape:',ytr.shape,yval.shape)","23a49136":"plt.imshow(xtr[0])\nprint('  0 1 2 3 4 5 6 7 8 9\\n',ytr[0])","9efa1713":"model = keras.Sequential([layers.Conv2D(6,(5,5), activation='relu', input_shape=(28,28,1)),\n                          layers.BatchNormalization(),\n                          layers.MaxPooling2D(pool_size=(2,2)),\n                          layers.Conv2D(16, (5,5), activation='relu'),\n                          layers.BatchNormalization(),\n                          layers.MaxPooling2D(pool_size=(2,2)),\n                          layers.Flatten(),\n                          layers.Dense(128, activation='relu'),\n                          layers.Dropout(0.3),\n                          layers.BatchNormalization(),\n                          layers.Dense(10, activation='softmax')])","44d9700a":"model.compile(optimizer = 'adamax', loss='categorical_hinge', metrics=['accuracy','categorical_accuracy','categorical_crossentropy','categorical_hinge','Recall','Precision'])","e2111556":"call=callbacks.EarlyStopping( min_delta=0.0001, patience=15, verbose=1,restore_best_weights=True)\nmodel.fit(xtr,ytr,validation_data=(xval, yval), epochs=50,callbacks=[call])","0137addf":"test.shape","e053e33c":"test = np.array(test).reshape(test.shape[0],28,28,1)\/255","d0342169":"test.shape","1a47b205":"ypred = model.predict(test)","ad0e3449":"ypred.shape","d3c4e2d5":"pred = []\nfor i in range(len(ypred)):\n    pred.append(list(ypred[i]).index(max(ypred[i])))","4acedb23":"df = pd.DataFrame({'ImageId' : range(1,len(pred)+1),'Label' : pred})","53c60ee9":"df.head()","c4953f93":"df.to_csv('submission.csv',index=False)","18407676":"# Predicting the results","b3f8e4c7":"### Converting Y dataset shape","9b8b0ff5":"# Converting the datasets to the required shape and also normalizing the data","d9f4a10e":"# Splitting dataset\n## into validation sets","e178ceea":"## More than 99% Accuracy","73c51315":"# Building the CNN model","1c475df4":"# Importing datasets and libraries","5927452c":"# Compiling the model","572979f9":"## Ploting sample image from dataset","843e4c36":"# Converting our test dataset","46085c9f":"# Exploring and converting dataset to feed into CNN","4dbdcd79":"# Fitting the model with Training and testing data"}}