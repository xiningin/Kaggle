{"cell_type":{"41c67395":"code","a38191b8":"code","5c435ab5":"code","46b00ee1":"code","58875e70":"code","d4b987b6":"code","7e113fcc":"code","fed1b7de":"code","71f7ff10":"code","8cdd9057":"code","3d5c6ffb":"code","8917fd0f":"code","74b9456e":"code","091945d6":"code","390b4c18":"code","25002b59":"code","6a6d7794":"code","ac9afa2f":"code","02660e72":"code","4ecca1dc":"code","bdee217c":"code","2c935d11":"code","dcc9100f":"code","265a5462":"code","87ac83d8":"code","bd03ad4d":"code","10c9a802":"code","5730035b":"code","fd2faae4":"code","f11ddd0c":"code","eb841219":"code","9815ef1b":"code","cf46c4f5":"code","4421aeb2":"code","78e3a8bc":"code","83169f73":"code","944400ff":"code","ad549281":"code","f40a4df0":"code","5bc14ee4":"code","05f88b55":"code","0a354b7c":"code","ee38b091":"code","34fd447f":"code","f2350bcf":"code","7df3ce19":"code","5fa32d05":"code","b2721ed2":"code","ce8be078":"code","c91029e4":"code","cd86ba13":"code","01c9905e":"code","ec3d4b6d":"code","ba9db42d":"code","f5b60ba3":"code","6b715fef":"code","e5a54317":"code","79210398":"code","97cb7604":"code","caf08187":"code","80a11629":"code","508826c1":"code","e6fe5565":"code","74cd4aa4":"code","077be21e":"code","a29e025a":"markdown","8fbfa138":"markdown","092ceec9":"markdown","1556287d":"markdown","cd3ff052":"markdown","f1065e01":"markdown","7b6857ef":"markdown","7f05261c":"markdown","702de813":"markdown","1ed339c3":"markdown","228894dc":"markdown","3e654181":"markdown","1d565ff9":"markdown","93ad2ffd":"markdown","c34862ec":"markdown","6fcb2617":"markdown","2582b53a":"markdown","b2c4d8f5":"markdown","9a230c24":"markdown","000360d4":"markdown","9aafd06a":"markdown","b884b91b":"markdown","45a32d34":"markdown","82b24dcc":"markdown","7a1dcca1":"markdown","f09e38cd":"markdown","24f608a6":"markdown","742d177e":"markdown","4215af95":"markdown","5cb241ec":"markdown","bc0270d2":"markdown","9f3ba9fc":"markdown","96e2542f":"markdown","7e3198e7":"markdown","93597f50":"markdown"},"source":{"41c67395":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')","a38191b8":"train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","5c435ab5":"train.info()","46b00ee1":"train.sample(5).T","58875e70":"'''\ntrain\u7684\u6570\u636e\u7c7b\u578b\u5206\u4e3a\u4e09\u79cd\uff0c\u5206\u522b\u4e3aint,float64\u4ee5\u53caobject\u3002\u5176\u4e2d\u771f\u6b63\u4e3a\u6570\u503c\u7c7b\u578b\u7684\u5305\u62ecAge\u3001Fare\u3001SibSp,Parch\u56db\u7c7b\u3002\u6309\u7167\u5927\u6570\u5b9a\u5f8b\uff0c\u8d85\u8fc799.7\uff05\u7684\u6570\u636e\u4f1a\u96c6\u4e2d\u5728\uff08mean-3*std,mean+3*std\uff09\u5185\uff0c\n\u56e0\u6b64\uff0c\u6211\u4eec\u9996\u5148\u5bf9\u8bad\u7ec3\u96c6\u4e2dFare\u7279\u5f81\u8fdb\u884c\u5904\u7406\uff0c\u6392\u9664\u5f02\u5e38\u503c\u3002\n\u8fd9\u4e00\u505a\u6cd5\uff0c\u80fd\u591f\u5728\u9002\u91cf\u589e\u52a0\u6a21\u578b\u7684Bias\u7684\u540c\u65f6\uff0c\u5927\u5927\u51cf\u5c11\u6a21\u578b\u7684Variance\uff0c\u63d0\u9ad8\u6211\u4eec\u540e\u7eed\u5efa\u6a21\u7684\u8868\u73b0\u3002\uff08Age\u7684\u7f3a\u5931\u60c5\u51b5\u8f83\u4e3a\u4e25\u91cd,\u6682\u65f6\u4e0d\u8003\u8651\uff09\n'''\nfactor=3\noutlier_feature=['Parch','Fare','SibSp']\nfor i in outlier_feature:\n    mean=train[i].mean()\n    std=train[i].std()\n    upper_limit=mean+3*std\n    lower_limit=mean-3*std\n    condition=(train[i]>upper_limit)|(train[i]<lower_limit)\n    print('outlier numbers:%.2f'%len(train.loc[condition]))#\u67e5\u770b\u5f02\u5e38\u503c\u6570\u91cf\n    print(i+' strip data to original data precent:%.3f'%(len(train.loc[condition])\/len(train)))#\u67e5\u770b\u4e0d\u540c\u7279\u5f81\u7684\u5f02\u5e38\u503c\u6240\u5360\u6bd4\u91cd\n    print('='*40)","d4b987b6":"'''\n\u5bf9train\u8fdb\u884c\u53bb\u9664\u5f02\u5e38\u503c\u5904\u7406\uff0c\u6574\u4f53\u6765\u770b\uff0c\u6240\u6709\u7684\u5f02\u5e38\u503c\u603b\u6570\u9ad8\u8fbe65\u4e2a\uff0c\u7ea6\u5360train\u96c6\u5408\u76847\uff05\u3002\u6b64\u65f6\uff0c\u82e5\u6211\u4eec\u5168\u90e8\u5c06\u7279\u5f81\u7684\u5f02\u5e38\u503c\u53bb\u9664\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd\u6211\u4eec\u7684\u6a21\u578b\u7684\u51c6\u786e\u6027\u3002\n\u6545\u6211\u4eec\u53ea\u8003\u8651\u53bb\u6389Fare\u90e8\u5206\u7684\u5f02\u5e38\u503c\u2014\u2014Fare\u4e0e\u751f\u5b58\u7387\u6700\u4e3a\u76f8\u5173\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u5176\u5f02\u5e38\u503c\u66f4\u5bb9\u6613\u5bf9\u6a21\u578b\u9020\u6210\u6270\u52a8\u3002\n'''\nfactor=3\nmean=train['Fare'].mean()\nstd=train['Fare'].std()\nupper_limit=mean+3*std\nlower_limit=mean-3*std\ncondition=(train['Fare']<=upper_limit)&(train['Fare']>=lower_limit)\ntrain_filtered=train.loc[condition]\ntrain_filtered.info()","7e113fcc":"#\u5408\u5e76\u8bad\u7ec3\u96c6\u4e0e\u6d4b\u8bd5\u96c6\nfull=pd.concat([train_filtered,test],ignore_index=True)\nprint(\"train dataset shape:%s\\ntest dataset shape:%s\\nfull dataset shape:%s\"%(train_filtered.shape,test.shape,full.shape))","fed1b7de":"miss_count=full.isnull().sum()\nprint(miss_count[miss_count.values>0])#\u67e5\u770b\u5408\u5e76\u6570\u636e\u7684\u7f3a\u5931\u60c5\u51b5,\u5171\u6709\u56db\u9879\u7f3a\u5931\uff0c\u5176\u4e2dCabin\u7684\u7f3a\u5931\u60c5\u51b5\u6700\u4e3a\u4e25\u91cd\uff0c\u6709\u8d85\u8fc778\uff05\u7684\u6570\u636e\u9700\u8981\u8865\u5168\u3002","71f7ff10":"train.corr()['Survived'].abs().sort_values(ascending=False)","8cdd9057":"plt.figure(figsize=(12,6))\nplt.subplot()\nsns.heatmap(train.corr(),cmap='hot',annot=True)\nplt.show()","3d5c6ffb":"dump=['PassengerId']\nfull.drop(columns=dump,inplace=True)","8917fd0f":"#\u5206\u6790Embarked\u7684\u7c7b\u578b\nfull.Embarked.value_counts()","74b9456e":"#\u5206\u6790\u4e0a\u8239\u5730\u70b9\u5bf9\u4e8e\u751f\u5b58\u7387\u7684\u5f71\u54cd\nplt.figure(figsize=(14,7))\nplt.subplot(1,2,1)\nsns.countplot(data=full,x='Embarked')\nplt.title('toral Embarked passenager for three position')\nplt.subplot(1,2,2)\ncondition=(train_filtered.Survived==1)\nsurvived_rate=train_filtered.loc[condition,'Embarked'].value_counts()\/train_filtered['Embarked'].value_counts()\nsns.barplot(x=survived_rate.index,y=survived_rate.values)\nplt.title('Suvived rate for different position')\nplt.show()\n#\u4ece\u767b\u8239\u5730\u70b9\u6765\u770b\uff0cS\u5730\u7684\u4e58\u5ba2\u6700\u591a\uff0c\u4f46\u4ece\u751f\u5b58\u7387\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u4eceC\u5730\u767b\u8239\u6700\u6709\u53ef\u80fd\u5b58\u6d3b\u3002","091945d6":"#\u8ba1\u7b97\u6574\u4f53\u751f\u5b58\u7387\nsurvived_rate=len(train_filtered.loc[condition])\/len(train_filtered)\nsurvived_rate","390b4c18":"#\u6574\u4f53\u6765\u770b\uff0cS\u5730\u4e0eQ\u5730\u7684\u751f\u5b58\u7387\u4e0e\u5e73\u5747\u751f\u5b58\u7387\u8f83\u4e3a\u63a5\u8fd1\uff0c\u4f46C\u5730\u5219\u8fdc\u9ad8\u4e8e\u5e73\u5747\u751f\u5b58\u7387\u3002\n#\u67e5\u770bEmbarked\u7f3a\u5931\u7684\u6240\u5728\u884c\u6570\u636e\nfull.loc[full.Embarked.isnull()]","25002b59":"#\u4e24\u8005\u7684Fare\u3001Cabin\u3001Pclass\u3001Survived\u3001Ticket\u9ad8\u5ea6\u4e00\u81f4\uff0c\u6545\u6211\u4eec\u5224\u65ad\u5176\u767b\u9646\u5730\u70b9\u4e5f\u5e94\u5f53\u4e00\u81f4\u3002\ng=sns.FacetGrid(train_filtered,col='Pclass',row='Survived',hue='Sex')\ng.map(sns.countplot,'Embarked',)\ng.add_legend()\ng.set_axis_labels('Embarked','Number of passagers')\n#\u82e5\u4ec5\u4ee5\u4e0a\u8239\u5730\u70b9\u4f17\u6570\u6765\u770b\uff0c\u65e0\u7591\u6211\u4eec\u5e94\u5f53\u9009\u62e9S\u5730\u767b\u8239\uff0c\u4f46\u8003\u8651\u5230\u8fd9\u4e24\u884c\u7f3a\u5931\u4fe1\u606f\u6765\u81eaPclass 1\u8239\u8231\u4ee5\u53ca\u6700\u540e\u751f\u5b58\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u8fdb\u4e00\u6b65\u6316\u6398Embarked\u5730\u70b9\u7684\u53ef\u80fd\u6027\u3002","6a6d7794":"#\u5bf9\u5e94\u4e24\u4f4d\u4e58\u5ba2\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u6765\u81eaPclass 1\uff0c\u6210\u5458\u4e3a\u5973\u6027\uff0c\u4e14\u6700\u540e\u5e78\u5b58\u7684\u6761\u4ef6\u7ea6\u675f\u4e0b\uff0c\u4e58\u5ba2\u6765\u81eaC\u5730\u7684\u53ef\u80fd\u6027\u6700\u5927\uff0c\u6545\u6211\u4eec\u4ee5C\u5730\u8865\u5168\u4fe1\u606f\nfull.Embarked.fillna('C',inplace=True)","ac9afa2f":"#\u67e5\u770b\u4e0eFare\u6700\u4e3a\u76f8\u5173\u7684\u53d8\u91cf\nfull.corr()['Fare'].abs().sort_values()","02660e72":"#\u8865\u5168\u6570\u636e\nfull.Fare.fillna(full[full.Pclass==3]['Fare'].mean(),inplace=True)","4ecca1dc":"#\u67e5\u770bFare\u7279\u5f81\u7684\u6574\u4f53\u5206\u5e03\u60c5\u51b5\nplt.figure(figsize=(18,6))\nplt.subplot(1,2,1)\nsns.histplot(data=full,x='Fare',binwidth=10)\nplt.title('histgram for Fare')\nplt.subplot(1,2,2)\nsns.barplot(data=full,x='Pclass',y='Fare',palette='hot')\nplt.title('Average fare for Pclass')\nplt.show()","bdee217c":"#\u901a\u8fc7\u5de6\u4e0a\u56fe\uff0c\u4e0d\u96be\u770b\u51fa\uff0c\u7edd\u5927\u90e8\u5206\u7968\u4ef7\u5728\u96c6\u4e2d\u5728100\u7f8e\u5143\u4ee5\u5185\uff0c\u5b9e\u9645\u4e0a\uff0c\u901a\u8fc7\u5206\u4f4d\u6570\u67e5\u770b\uff0c\u7ea6\u670990\uff05\u7684\u4e58\u5ba2\uff0c\u7968\u4ef7\u8981\u4f4e\u4e8e100\u7f8e\u5143\u3002\nprint(full['Fare'].quantile([0.25,0.5,0.75,0.90]))\nprint('*'*40)\n#\u8fdb\u4e00\u6b65\u5bdf\u770b\u4e0d\u540cPclass\u7684\u7968\u4ef7\u6781\u9650\nprint(full.groupby('Pclass')['Fare'].max())\nprint('*'*40)\n#\u67e5\u770b\u4e0d\u540cPclass\u7684\u751f\u5b58\u60c5\u51b5\ncondition=train_filtered['Survived']==1\nsurvived_rate_p=train_filtered.loc[condition,'Pclass'].value_counts()\/train_filtered['Pclass'].value_counts()\nprint(survived_rate_p)","2c935d11":"psg_title=full['Name'].str.extract(r'([A-Z][a-z]+\\.)')\nfull['Name']=psg_title[0]\nfull['Name'].value_counts()","dcc9100f":"plt.figure(figsize=(12,6))\nsns.set_style('dark')\nplt.subplot()\nsns.countplot(data=full,x='Name',palette='rainbow')\nplt.tight_layout()\nplt.show()\n#\u6574\u4f53\u6765\u770b\uff0cMr.\/Mrs.\/Miss.\/Master.\u5360\u636e\u4e86Name\u4e2d\u7684\u7edd\u5927\u591a\u6570\u79f0\u8c13\u3002","265a5462":"Civilian=['Mr.','Mrs.','Miss.','Master.','Ms.','Mlle.','Mme.']\nNobility=['Rev.','Dr.','Lady.','Countess.','Don.','Jonkheer.','Col.','Major.','Capt.','Sir.','Dona.']\nfull['Identity']=full['Name'].apply(lambda x : 'Civilian' if x in Civilian else 'Nobility')\nfull.Identity.value_counts()\n#\u6574\u4f53\u6765\u770b\uff0c\u8d35\u65cf\u5728\u6837\u672c\u4e2d\u6240\u5360\u6bd4\u91cd\u8f83\u5c0f\n","87ac83d8":"#\u67e5\u770b\u5e73\u6c11\u4e0e\u8d35\u65cf\u7684\u5e74\u9f84\u5206\u5e03\u4ee5\u53ca\u7968\u4ef7\u60c5\u51b5\uff0c\u6574\u4f53\u6765\u770b\uff0c\u8d35\u65cf\u7684\u5e74\u9f84\u66f4\u5927\uff0c\u5e73\u5747\u7968\u4ef7\u4e5f\u66f4\u9ad8\u3002\nplt.figure(figsize=(12,8))\nsns.set_style('dark')\nplt.subplot(1,2,1)\nsns.violinplot(data=full,y='Age',x='Identity')\nplt.title('Age distribtion for Civilian and Nobility')\nplt.subplot(1,2,2)\nsns.boxplot(data=full,y='Fare',x='Identity')\nplt.title('Fare distribtion for Civilian and Nobility')\nplt.show()","bd03ad4d":"plt.figure(figsize=(16,6))\nplt.subplot(1,2,1)\norder=full['Age'].groupby(full.Name).mean().sort_values().index\nsns.barplot(data=full,x='Name',y='Age',order=order)\nplt.title('Average Age',fontsize=20)\nplt.ylabel('Age',fontsize=20)\nplt.xticks(rotation=60,fontsize=15)\nplt.tight_layout()\n\nplt.subplot(1,2,2)\nsns.barplot(data=full,x='Name',y='Age',order=order)\nplt.title('Aveage Fare',fontsize=20)\nplt.ylabel('Fare',fontsize=20)\nplt.xticks(rotation=60,fontsize=15)\nplt.tight_layout()\nplt.show()","10c9a802":"#\u7edf\u8ba1\u5e73\u6c11\u4e0e\u8d35\u65cf\u7684\u751f\u5b58\u7387\nsurvived_rate=full[full.Survived==1]['Identity'].value_counts()\/full[full['Survived'].notnull()]['Identity'].value_counts()\nsurvived_rate","5730035b":"female_group=['Mrs.','Miss.','Ms.','Mlle.','Mme.']\nfor i in female_group:\n    full.loc[full.Name==i,'Identity']='female_group'\nfull.loc[full.Name=='Mr.','Identity']='Male'\nfull.loc[full.Name=='Master.','Identity']='child'\nfull.Identity.unique()","fd2faae4":"survived_rate=full[full.Survived==1]['Identity'].value_counts()\/full.loc[full.Survived.notnull(),'Identity'].value_counts()\nsurvived_rate","f11ddd0c":"plt.figure(figsize=(18,6))\nplt.subplot(1,4,1)\nsns.set_style('darkgrid')\nsurvived=train_filtered[train_filtered.Survived==1]\nsns.kdeplot(data=survived,x='Age',label='Survived')\nsns.kdeplot(data=train_filtered,x='Age',label='total')\nplt.title('Age dist',fontsize=15)\nplt.legend()\nplt.subplot(1,4,2)\nsns.violinplot(data=train_filtered,y='Age',color='hotpink')\nplt.title('Age dist for psg',fontsize=15)\nplt.subplot(1,4,3)\nsns.violinplot(data=train_filtered[train_filtered.Survived==1],y='Age',color='yellow')\nplt.title('Age dist for survived psg',fontsize=15)\nplt.subplot(1,4,4)\nsns.violinplot(data=train_filtered[train_filtered.Survived==0],y='Age',color='orange')\nplt.title('Age dist for dead psg',fontsize=15)\nplt.show()","eb841219":"#\u67e5\u770b\u4e0d\u540c\u5e74\u9f84\u6bb5\u4e58\u5ba2\u7684\u751f\u5b58\u60c5\u51b5\uff0c\u5176\u4e2d\u5c11\u5e74\u513f\u7ae5\u7684\u751f\u5b58\u7387\u6700\u9ad8\uff0c\u8001\u5e74\u4eba\u7684\u751f\u5b58\u7387\u6700\u4f4e\uff0c\u800c\u5c45\u4e8e\u4e24\u8005\u4e4b\u4e2d\u7684\u4eba\u7fa4\uff0c\u751f\u5b58\u7387\u4e0e\u5e73\u5747\u751f\u5b58\u7387\u8f83\u4e3a\u63a5\u8fd1\u3002\ntrain_filtered['Category']=pd.cut(train_filtered.Age,bins=[0,16,50,100])\nCategory_count=train_filtered[['Category']].value_counts().sort_index()\nsurvived_rate=train_filtered[train_filtered.Survived==1]['Category'].value_counts()\/train_filtered.Category.value_counts()\nsurvived_rate","9815ef1b":"plt.figure()\nplt.subplot()\nsns.barplot(x=survived_rate.index,y=survived_rate.values)\nplt.show()","cf46c4f5":"#\u67e5\u770b\u4e0d\u540c\u4eba\u7fa4\u7684\u6240\u5360\u6bd4\u7387\nplt.figure()\nplt.subplot()\nplt.pie(Category_count,shadow=True,autopct='%.f%%')\nplt.legend(Category_count.index,loc='best')\nplt.tight_layout()\nplt.show()","4421aeb2":"train.corr()['Survived'].abs().sort_values(ascending=False)","78e3a8bc":"full_copy=full#\u590d\u5236\u539f\u6570\u636e\n#\u4ee5Name\u7684\u5747\u503c\u586b\u5145\u5e74\u9f84\u7684\u7f3a\u5931\u90e8\u5206\n#age_mean=full.groupby('Name')['Age'].mean()\n#age_mean\nname_unique=full.Name.unique()\nfor i in name_unique:\n    condition=full.Name==i\n    full.loc[condition,'Age']=full.loc[condition,'Age'].fillna(int(full.loc[condition,'Age'].mean()))","83169f73":"full['Age_Category']=pd.cut(full.Age,bins=[0,16,50,100])#\u5c06\u5e74\u9f84\u6bb5\u5212\u5206\u4e3a0\uff5e16\u5c81\uff0c17\uff5e60\u5c81\uff0c61\uff5e100\u5c81\u3002","944400ff":"train.Cabin.unique()","ad549281":"#\u4ece\u4e2d\u6211\u4eec\u53d1\u73b0\uff0cCain\u7531\u5b57\u6bcd+\u6570\u5b57\u7ec4\u6210\uff0c\u5176\u4e2d\u5b57\u6bcd\u4ee3\u8868Cabin\u4e0d\u540c\u8239\u8231\u5c42\u7ea7\uff0c\u4e5f\u662f\u5f53\u4e2d\u6700\u4e3a\u6709\u7528\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u5c06\u6240\u6709Cabin\u7b49\u7ea7\u63d0\u53d6\u51fa\u6765\uff0c\u4f5c\u4e3aCabin\u7684\u7279\u5f81\u503c\ntrain_cabin=train_filtered[train_filtered.Cabin.notnull()]#Cabin\u4e0d\u4e3a\u7a7a\u7684\u6570\u636e\u96c6\ncabin=train_cabin['Cabin'].str.extract(r'(^[A-Z])')\ntrain_cabin['Cabin']=cabin.values","f40a4df0":"#\u67e5\u770b\u4e0d\u540cCabin\u6240\u5360\u6bd4\u4f8b\u4ee5\u53ca\u4e2a\u6570\nplt.figure(figsize=(16,6))\n\nplt.subplot(1,2,1)\ncabin_order=train_cabin['Cabin'].value_counts().sort_index(ascending=True)\nplt.pie(cabin_order,autopct='%.2f%%',shadow=True)\nplt.legend(cabin_order.index)\n\nplt.subplot(1,2,2)\ncabin_order=train_cabin.Cabin.value_counts().sort_index().index\nsns.countplot(data=train_cabin,x='Cabin',order=cabin_order)\nplt.title('Count of every cabin',fontsize=15)\nplt.ylabel('Count',fontsize=15)\nplt.xlabel('Cabin',fontsize=15)","5bc14ee4":"#\u5047\u8bbe\u68c0\u9a8c\uff1a\n#HO=\u4e58\u5ba2\u7684\u751f\u5b58\u7387\u4e0e\u8239\u8231\u65e0\u5173\uff0c\u5373\u4e0d\u540c\u8239\u8231\u7684\u751f\u5b58\u7387\u7b49\u4e8e\u5168\u4f53\u4e58\u5ba2\u7684\u5e73\u5747\u751f\u5b58\u7387\u3002\n#H1=\u4e58\u5ba2\u7684\u751f\u5b58\u7387\u4e0e\u8239\u8231\u6709\u5173\u3002","05f88b55":"#\u8ba1\u7b97\u4e0d\u540c\u8239\u8231\u7684\u5b9e\u9645\u751f\u5b58\u60c5\u51b5\ncondition=(train_cabin.Survived==1)\nobs_survived=train_cabin[condition]['Cabin'].value_counts().sort_index()\nobs_survived","0a354b7c":"#\u8ba1\u7b97A-T\u8239\u8231\u7684\u5e73\u5747\u9884\u671f\u751f\u5b58\u60c5\u51b5\nexpt_survived_rate=len(train_cabin.loc[condition])\/len(train_cabin)\nexpt_survived_rate","ee38b091":"expt_survived=train_cabin['Cabin'].value_counts()*expt_survived_rate#\u8ba1\u7b97\u4e0d\u540cCabin\u7684\u5e73\u5747\u9884\u671f\u751f\u5b58\u60c5\u51b5\nexpt_survived.sort_index(inplace=True)\nexpt_survived.drop(index='T',inplace=True)#\u4e0d\u540c\u8239\u8231\u7684\u9884\u671f\u751f\u5b58\u60c5\u51b5(\u7531\u4e8eT\u4ec5\u6709\u4e00\u4eba\uff0c\u5c06\u5176\u5254\u9664)\nexpt_survived","34fd447f":"import scipy.stats as stats\nstats.chisquare(f_obs=obs_survived.values,f_exp=expt_survived.values)","f2350bcf":"#\u8ba1\u7b97\u6709\u6709\u8239\u8231\u548c\u65e0\u8239\u8231\u7684\u5b9e\u9645\u751f\u5b58\u60c5\u51b5\nsurvived=full[full.Survived==1]\nsurvived_cabin=len(survived[survived.Cabin.notnull()])\nsurvived_nocabin=len(survived[survived.Cabin.isnull()])\n#\u8ba1\u7b97\u5b9e\u9645\u7684\u751f\u5b58\u7387\nexp_surv_rate=len(full[full.Survived==1])\/len(full[full.Survived.notnull()])\n#\u8ba1\u7b97\u6709\u8239\u8231\u548c\u65e0\u8239\u8231\u7684\u9884\u671f\u751f\u5b58\u60c5\u51b5\uff1a\nexp_survived_cabin=len(train[train.Cabin.notnull()])*exp_surv_rate\nexp_survived_nocabin=len(train.Cabin.isnull())*exp_surv_rate\n#\u5f15\u5165\u5361\u65b9\u62df\u5408\u5ea6\u68c0\u9a8c\nobs=[survived_cabin,survived_nocabin]\nexp=[exp_survived_cabin,exp_survived_nocabin]\nstats.chisquare(f_obs=obs,f_exp=exp)","7df3ce19":"#P\u503c\u6781\u5c0f\uff0c\u539f\u5047\u8bbe\u4e0d\u6210\u7acb\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u6709Cabin\u7684\u6210\u5458\uff0c\u751f\u5b58\u60c5\u51b5\u8f83\u4e3a\u76f8\u4f3c\uff0c\u65e0Cabin\u7684\u6210\u5458\uff0c\u751f\u5b58\u60c5\u51b5\u4e5f\u8f83\u4e3a\u76f8\u4f3c\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06Cabin\u7279\u5f81\u8fdb\u884c\u518d\u6b21\u5904\u7406\uff0c\u5c06\u6709\u8239\u8231\u53f7\u7684\u7edf\u4e00\u4fee\u6539\u4e3ay,\u65e0\u8239\u8231\u53f7\u7684\u7edf\u4e00\u4fee\u6539\u4e3an\u3002\nfull['Cabin']=full['Cabin'].apply(lambda x: 'n' if pd.isna(x) else 'y')","5fa32d05":"full.Pclass.value_counts().sort_index()#\u4e58\u5ba2\u5728Pclass\u7684\u5206\u5e03\u60c5\u51b5","b2721ed2":"#\u786e\u5b9a\u8239\u8231\u4e0e\u7968\u4ef7\u7684\u5173\u7cfb\nplt.figure()\nplt.subplot()\nsns.barplot(data=full,x='Pclass',y='Fare')\nplt.show()\n#\u4ece\u4e0b\u56fe\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u8239\u8231\u4e00\u7684\u7b49\u7ea7\u6700\u9ad8\u3002\u53e6\u5916\uff0c\u4ece\u524d\u6587\u4e2d\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0cPclass\u7279\u5f81\u4e0e\u751f\u5b58\u7684\u76f8\u5173\u7cfb\u6570\u6700\u9ad8\uff0c\u57fa\u672c\u4e0a\uff0c\u6211\u4eec\u5bf9\u4e8ePclass\u7684\u5206\u6790\uff0c\u5df2\u7ecf\u5728\u524d\u8ff0\u5206\u6790\u7968\u4ef7\u65f6\u5b8c\u6210\u3002","ce8be078":"ticket_ncount=full.Ticket.value_counts()\nticket_ncount","c91029e4":"#Tickets\u53d8\u91cf\u8f83\u4e3a\u590d\u6742\uff0c\u6211\u4eec\u8fdb\u4e00\u67e5\u770bTickets\u7684\u53d8\u91cf\uff0c\u6570\u91cf\u4e3a929\u4e2a\uff0c\u8981\u5c11\u4e8e\u6211\u4eec\u6d4b\u8bd5\u96c6\u4e0e\u6570\u636e\u96c6\u4e2d\u7684\u6570\u91cf\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u90e8\u5206\u4e58\u5ba2\u5171\u4eabTicket\nlen(full.Ticket.unique())","cd86ba13":"#\u67e5\u770b\u4e24\u4eba\u53ca\u4e24\u4eba\u4ee5\u4e0a\u5171\u4eab\u7968\u4ef7\u7684\u60c5\u51b5\nticket_num_greater1=ticket_ncount[ticket_ncount.values>1].index\nfull.loc[full.Ticket.isin(ticket_num_greater1),['Survived','Ticket']].sort_values('Ticket').head(20)","01c9905e":"train_ticket_ncount=train_filtered.Ticket.value_counts()\nticket_num_greater3=train_ticket_ncount[train_ticket_ncount.values>3].index\nplt.figure(figsize=(16,6))\nplt.subplot()\nsns.countplot(data=train_filtered.loc[train_filtered.Ticket.isin(ticket_num_greater3)],x='Ticket',hue='Survived')\nplt.xticks(rotation=90)\nplt.title('count plot',fontsize=18)\nplt.legend(loc='upper right',fontsize=15)\nplt.show()","ec3d4b6d":"ticket_num_1 = ticket_ncount[ticket_ncount.values==1].index\nticket_num_1\nfull['Ticket']=full['Ticket'].apply(lambda x: 'single' if x in ticket_num_1 else x)","ba9db42d":"full.info()","f5b60ba3":"full=full.drop(['Name','Age','SibSp'],axis=1)\nfull=pd.get_dummies(full)#\u5c06\u975e\u6570\u503c\u53d8\u91cf\u66f4\u6539\u4e3a\u54d1\u53d8\u91cf","6b715fef":"from sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.preprocessing import StandardScaler\n\n#\u91cd\u65b0\u62c6\u5206\u8bad\u7ec3\u96c6\u53ca\u6d4b\u8bd5\u96c6\ndata=full.loc[full.Survived.notnull()]\nfinal_test=full.loc[full.Survived.isnull()]\nX=data.drop('Survived',axis=1)\ny=data['Survived']\nfinal_test=final_test.drop('Survived',axis=1)\n\n#\u5bf9\u6570\u636e\u8fdb\u884c\u5f52\u4e00\u5316\u5904\u7406\nmms=StandardScaler()\nmms.fit(X)\nX=mms.transform(X)\nfinal_test=mms.transform(final_test)","e5a54317":"#\u4ee5\u4e0b\u90e8\u5206\u4e3a\u5bfc\u5165\u7b97\u6cd5\uff0c\u4ee5\u53ca\u8fdb\u884c\u53c2\u6570\u8c03\u8bd5\uff0c\u8bad\u7ec3\u6a21\u578b\u5305\u62ec\u968f\u673a\u68ee\u6797\u3001\u652f\u6301\u5411\u91cf\u673a\u3001K\u90bb\u8fd1\u3001\u903b\u8f91\u65af\u7279\u56de\u5f52\u3001AdaBoost\u7b49\u3002\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\nrfc=RandomForestClassifier()\nparam_grid={'min_samples_split':[2],'max_samples':[0.5,0.6,0.7,0.8,0.9,1],'max_features':['sqrt'],'n_estimators':[300]}\ngridsearch_rfc=GridSearchCV(rfc,param_grid,cv=5)\ngridsearch_rfc.fit(X,y)","79210398":"from sklearn.svm import SVC\nsvc=SVC()\nparam_grid={'C':[0.001,0.01,0.1,1,10,100],'gamma':[0.01,0.1,1,10,100]}\ngridsearch_svc=GridSearchCV(svc,param_grid=param_grid,cv=5)\ngridsearch_svc.fit(X,y)","97cb7604":"from sklearn.neighbors import KNeighborsClassifier\nKNN=KNeighborsClassifier()\nparam_grid={'n_neighbors':np.arange(3,30)}\ngridsearch_KNN=GridSearchCV(KNN,param_grid=param_grid,cv=5)\ngridsearch_KNN.fit(X,y)","caf08187":"from sklearn.linear_model import LogisticRegression\nlgr=LogisticRegression()\nparam_grid={'C':[0.01,0.1,1,10,100],'max_iter':[10000]}\ngridsearch_lgr=GridSearchCV(lgr,param_grid=param_grid,cv=5)\ngridsearch_lgr.fit(X,y)","80a11629":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nDTC=DecisionTreeClassifier()\nadb=AdaBoostClassifier(DTC,random_state=0)\nparam_grid={'n_estimators':[300],'learning_rate':[0.001,0.01,0.1,1,10]}\ngridsearch_adb=GridSearchCV(adb,param_grid=param_grid,cv=5)\ngridsearch_adb.fit(X,y)","508826c1":"from sklearn.ensemble import ExtraTreesClassifier\nextratree=ExtraTreesClassifier()\nparam_grid={'max_features':[0.5,0.6,0.7,0.8,0.9,1],'max_samples':[0.5,0.6,0.7,0.8,0.9],'n_estimators':[300]}\ngridsearch_extratree=GridSearchCV(extratree,param_grid=param_grid,cv=5)\ngridsearch_extratree.fit(X,y)","e6fe5565":"from sklearn.model_selection import cross_val_score\nmodel=[gridsearch_rfc.best_estimator_,gridsearch_KNN.best_estimator_,gridsearch_svc.best_estimator_,\n       gridsearch_lgr.best_estimator_,gridsearch_extratree.best_estimator_,gridsearch_adb.best_estimator_]\nmodel_mean=[]\nmodel_std=[]\nfor i in model:\n    model_mean.append(cross_val_score(i,X,y,cv=5).mean())\n    model_std.append(cross_val_score(i,X,y,cv=5).std())\nmodel_result=pd.DataFrame({'name':['rfc','KNN','svc','lgr','extratree','adb'],'mean':model_mean,'std':model_std})\nmodel_result","74cd4aa4":"#\u8003\u8651\u5230\u5404\u4e2a\u65b9\u6cd5\u90fd\u6709\u4e00\u5b9a\u7684\u4f18\u52bf\uff0c\u6211\u4eec\u6700\u7ec8\u9009\u62e9VotingClassifier\u8fdb\u884c\u6295\u7968\u9009\u62e9\u3002\nfrom sklearn.ensemble import VotingClassifier\nestimators=[]\nestimators.append(('rfc',gridsearch_rfc.best_estimator_))\nestimators.append(('svc',gridsearch_svc.best_estimator_))\nestimators.append(('KNN',gridsearch_KNN.best_estimator_))\nestimators.append(('lgr',gridsearch_lgr.best_estimator_))\nestimators.append(('extra',gridsearch_extratree.best_estimator_))\nestimators.append(('ada',gridsearch_adb.best_estimator_))\nvc=VotingClassifier(voting='hard',estimators=estimators)\nvc.fit(X,y)\nvc.score(X,y)","077be21e":"ID_test=test['PassengerId']\nprediction=vc.predict(final_test).astype(int)\nprediction_Series=pd.Series(prediction,name='Survived')\nresults=pd.concat([ID_test,prediction_Series],axis=1)\nresults.to_csv('\/kaggle\/working\/submission.csv',index=False)","a29e025a":"\u5230\u6b64\uff0c\u6211\u4eec\u7684\u6570\u636e\u8865\u5168\u4e0e\u521d\u6b65\u5206\u6790\u5df2\u7ecf\u5b8c\u6210\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u5c06\u6570\u636e\u96c6\u518d\u6b21\u62c6\u5206\u4e3atrain\u4ee5\u53catest\u4e24\u90e8\u5206","8fbfa138":"\u5728\u5bf9Name\u8fdb\u884c\u5206\u6790\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u4e0d\u540cName\u6240\u5305\u542b\u7684Title\uff0c\u5bf9\u4e8e\u5e74\u9f84\u6709\u5f88\u5927\u5f71\u54cd\uff08Title\u5f80\u5f80\u53ef\u4ee5\u63ed\u793a\u4e00\u4e2a\u4eba\u7684\u6027\u522b\uff0c\u5a5a\u914d\uff0c\u804c\u4f4d\uff0c\u8fd9\u4e9b\u56e0\u7d20\u5f80\u5f80\u4e0e\u5e74\u9f84\u6709\u8f83\u5f3a\u7684\u5173\u7cfb\uff0c\u56e0\u6b64\u6211\u4eec\u91c7\u7528\u4e0d\u540c\u540d\u79f0\u7684Title\u7684\u5e74\u9f84\u5747\u503c\uff0c\u8865\u5168\u5e74\u9f84\u6570\u636e\uff09","092ceec9":"\u7efc\u5408\u8003\u8651\uff0c\u5e74\u9f84\u5bf9\u751f\u5b58\u60c5\u51b5\u6709\u5f71\u54cd\uff0c\u4f46\u4ece\u4e0d\u540c\u5e74\u9f84\u6bb5\u7684\u4eba\u7fa4\u751f\u5b58\u7387\u6765\u770b\u76f4\uff0c\u8fd9\u4e00\u5f71\u54cd\u6709\u9650\uff0c\u8fd9\u4e00\u70b9\uff0c\u540c\u6837\u53ef\u4ee5\u5728\u76f8\u5173\u7cfb\u6570\u4e2d\u5f97\u5230\u9a8c\u8bc1\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u5c3d\u7ba1\u5e74\u9f84\u7684\u7f3a\u5931\u9879\u8f83\u4e3a\u4e25\u91cd\uff0c\n\u4f46\u5176\u5b9e\u9645\u4e0a\u5bf9\u751f\u5b58\u9884\u6d4b\u7684\u5f71\u54cd\u6709\u9650\u3002","1556287d":"# 1.10\u5bf9\u6570\u636e\u8fdb\u884c\u5f52\u4e00\u5316\u5904\u7406","cd3ff052":"# 1.6\u5bf9\u8239\u8231Cabin\u8fdb\u884c\u5206\u6790\uff1a\u5229\u7528\u5361\u65b9\u62df\u5408\u5ea6\u68c0\u9a8c\uff0c\u5224\u65ad\u4e0d\u540c\u8239\u8231\u7684\u751f\u5b58\u7387\u662f\u5426\u4e0d\u540c\u3002","f1065e01":"Cabin\u7279\u5f81\u7f3a\u5931\u6700\u4e3a\u4e25\u91cd\uff0c\u5148\u89c2\u5bdfCabin\u7684\u6570\u636e\u60c5\u51b5\uff1a","7b6857ef":"\u5728\u65b0\u5206\u7c7b\u4e0b\uff0c\u6210\u5e74\u7537\u6027\u7684\u751f\u5b58\u7387\u6700\u4f4e\uff0c\u5176\u6b21\u4e3a\u8d35\u65cf\u3001\u513f\u7ae5\u53ca\u6210\u5e74\u5973\u6027","7f05261c":"\u521d\u6b65\u6765\u770b\uff0cTicket\u76f8\u540c\u7684\u4eba\uff0c\u751f\u5b58\u7387\u8f83\u4e3a\u4e00\u81f4\u3002\u6211\u4eec\u901a\u8fc7\u56fe\u8868\u8fdb\u4e00\u6b65\u5206\u6790,\u6311\u9009\u51fa\u540c\u4e00\u5f20Ticket\u6210\u5458\u8d85\u8fc73\u4eba\u7684\u751f\u6b7b\u60c5\u51b5\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528train\u7684\u6570\u636e\uff0c\u907f\u514d\u751f\u6b7b\u4e0d\u660e\u7684\u60c5\u51b5\u5bf9\u6211\u4eec\u9020\u6210\u8bef\u5bfc","702de813":"# 1.\u7279\u5f81\u5de5\u7a0b\uff0c\u63d0\u53d6\u6709\u7528\u4fe1\u606f\uff0c\u8865\u5168\u7f3a\u5931\u503c","1ed339c3":"\u901a\u8fc7\u5bf9\u76f8\u5173\u7cfb\u6570\u7684\u67e5\u770b\uff0cPassengerId\u8fd9\u4e00\u7279\u5f81\u5bf9\u751f\u5b58\u7684\u5f71\u54cd\u60c5\u51b5\u51e0\u4e4e\u4e3a0\u3002\u5bf9\u751f\u5b58\u9884\u6d4b\u7684\u610f\u4e49\u4e0d\u5927\uff0c\u76f4\u63a5\u820d\u5f03\u3002","228894dc":"# 1.8\u5206\u6790Ticket\u7279\u5f81","3e654181":"# \u89c2\u5bdf\u6570\u636e\u6574\u4f53\u60c5\u51b5\uff0c\u5305\u62ec\u6570\u636e\u7279\u5f81\u3001\u7c7b\u578b\uff0c\u6570\u636e\u7f3a\u5931\u7b49\u60c5\u51b5\u3002","1d565ff9":"# 1.1\u67e5\u770b\u76f8\u5173\u7cfb\u6570\uff0c\u5224\u65ad\u7edd\u5927\u90e8\u5206\u7279\u5f81\u503c\u4e0e\u751f\u5b58\u60c5\u51b5\u7684\u76f8\u5173\u7cfb\u6570","93ad2ffd":"Sex\u7279\u5f81\u5728Name\u5206\u6790\u4e2d\uff0c\u5df2\u7ecf\u8fdb\u884c\u4e86\u8f83\u5927\u7a0b\u5ea6\u7684\u5206\u6790\uff0c\u6574\u4f53\u6765\u770b\uff0c\u5973\u6027\u7684\u751f\u5b58\u7387\u8981\u8fdc\u9ad8\u4e8e\u7537\u6027\u3002","c34862ec":"# 1.2 \u5bf9\u7279\u5f81Embarked(\u4e0a\u8239\u5730\u70b9)\u7684\u7f3a\u5931\u503c\u8fdb\u884c\u5904\u7406","6fcb2617":"\u7531\u4e8eFare\u76f4\u63a5\u51b3\u5b9a\u4e86\u8239\u8231Pclass\u7684\u7b49\u7ea7\uff0c\u4e24\u8005\u95f4\u5b58\u5728\u5f3a\u76f8\u5173\uff0c\u56e0\u6b64\u6211\u4eec\u7528\u8239\u8231\u7b49\u7ea7\u7684\u5e73\u5747\u7968\u4ef7\u5904\u7406\u7f3a\u5931\u503c\u3002","2582b53a":"\u5c3d\u7ba1\u8d35\u65cf\u4e0e\u5e73\u6c11\u95f4\u7684\u5e74\u9f84\u5206\u5e03\u5b58\u5728\u8f83\u5927\u5dee\u5f02\uff0c\u800c\u4e14\u8d35\u65cf\u7684\u5e73\u5747\u7968\u4ef7\u663e\u7136\u8981\u9ad8\u5e73\u6c11(\u8d35\u65cf\u7684\u6d88\u8d39\u80fd\u529b\u662f\u8981\u9ad8\u4e8e\u5e73\u6c11\u7684\uff09\uff0c\u800c\u7968\u4ef7\u4e0e\u751f\u5b58\u7387\u5b58\u5728\u76f4\u63a5\u5173\u7cfb\u3002\u4e0d\u8fc7\uff0c\u5c06\u59d3\u540d\u90e8\u5206\u5212\u5206\u4e3a\u5e73\u6c11\u4e0e\u8d35\u65cf\u4e24\u79cd\u8eab\u4efd\uff0c\u5bf9\u4e8e\u7814\u7a76\u4e58\u5ba2\u7684\u751f\u5b58\u60c5\u51b5\u662f\u5426\u771f\u7684\u6709\u610f\u4e49\u5462\uff1f\u6211\u4eec\u8fdb\u884c\u8fdb\u4e00\u6b65\u5206\u6790\u3002","b2c4d8f5":"\u6574\u4f53\u6765\u770b\uff0c16\uff0d50\u5c81\u7684\u4eba\u7fa4\u662f\u4e3b\u8981\u4e58\u5ba2\u3002\u5176\u751f\u5b58\u7684\u6982\u7387\u7ea6\u4e3a38%\uff0c\u800c\u5360\u603b\u6570\u768414%\u53ca9%\u7684\u5c11\u5e74\u53ca\u8001\u5e74\u7684\u751f\u5b58\u6982\u7387\u76f8\u8f83\u4e8e\u9752\u58ee\u5e74\u6709\u6240\u4e0a\u5347\u53ca\u4e0b\u964d\u3002","9a230c24":"\u629b\u5f00\u751f\u6b7b\u672a\u77e5\u7684\u60c5\u51b5\uff0c\u4e0d\u96be\u770b\u51fa\uff0c\u5728train\u4e2d\uff0c\u540c\u4e00\u5f20Ticket\u7684\u62e5\u6709\u540c\u751f\u5171\u6b7b\u7684\u60c5\u51b5\u3002\u6545\u6211\u4eec\u5c06\u5305\u542b\u4e24\u540d\u53ca\u4e24\u540d\u4e58\u5ba2\u4ee5\u4e0a\u7684Ticket\u4fdd\u7559\uff0c\u5176\u4f59Ticket\u7edf\u4e00\u66f4\u6539\u4e3a\u2018Single\u2019,\u4ee5\u51cf\u5c11\u53d8\u91cf\u4e2a\u6570\u3002","000360d4":"# 1.7\u5206\u6790Pclass\u7279\u5f81","9aafd06a":"\u4ece\u6536\u96c6\u5230\u7684\u4f17\u591a\u79f0\u8c13\u6765\u770b\uff0c\u4ed6\u4eec\u4e3b\u8981\u63d0\u4f9b\u4e86\u5982\u4e0b\u51e0\u65b9\u9762\u7684\u4fe1\u606f\uff1a\n\n1.\u6027\u522b\n2.\u793e\u4f1a\u5730\u4f4d\n3.\u5e74\u9f84\u6bb5\uff08\u53ef\u4ee5\u7528\u4e8e\u5e2e\u52a9\u9884\u6d4b\u5e74\u9f84\u7f3a\u5931\uff09\n4.\u5a5a\u914d\u4e0e\u5426\uff08\u53ef\u4ee5\u7528\u4e8e\u5e2e\u52a9\u9884\u6d4b\u5e74\u9f84\u7f3a\u5931\uff09\n5.\u56fd\u7c4d\uff08\u5c11\u90e8\u5206\u79f0\u8c13\u4e3a\u6cd5\u8bed\u79f0\u8c13\uff0c\u7edd\u5927\u90e8\u5206\u4e3a\u82f1\u6587\u79f0\u8c13\uff09\n6.\u53d7\u6559\u80b2\u7a0b\u5ea6\uff08\u5982Dr\uff09\n7.\u804c\u4e1a\uff08Col\uff09\n\n\u57fa\u4e8e\u6b64\uff0c\u6211\u4eec\u8003\u8651\u5bf9Name\u90e8\u5206\u8fdb\u884c\u518d\u5206\u7c7b\uff0c\u7531\u4e8e\u6027\u522b\u4e0e\u5e74\u9f84\u5df2\u7ecf\u6709\u4e86\u5bf9\u5e94\u7279\u5f81\u3002\u6211\u4eec\u8003\u8651\u4ee5\u793e\u4f1a\u5730\u4f4d\u4e3a\u57fa\u7840\uff0c\u5efa\u7acb\u4e86\u4e00\u4e2a\u65b0\u7279\u5f81\uff0c\u5206\u7c7b\u4e3a:\n\n1.\u5e73\u6c11\uff0c\u5305\u62ecMr.,Mrs.,Miss.,Master.\uff08\u513f\u7ae5\uff09,Ms.,Mlle.\uff08\u6cd5\u8bed\u5973\u58eb),Mme.\uff08\u6cd5\u8bed\u672a\u5a5a\u5973\u58eb\uff09\n2.\u8d35\u65cf\u3001\u7267\u5e08\u3001\u6559\u6388\u3001\u5b98\u5458\uff08\u8fd9\u56db\u7c7b\u5728\u82f1\u7f8e\u56fd\u5bb6\u4e2d\u90fd\u62e5\u6709\u8f83\u9ad8\u7684\u5730\u4f4d\uff09\uff1a\u5305\u62ecRev.,Dr.,Lady.,Countess.,Don.,Jonkheer.,Col.,Major.,Capt.,Sir.,\n\n","b884b91b":"# 1.3 \u7279\u5f81Fare(\u7968\u4ef7)\u7f3a\u5931\u503c\u8fdb\u884c\u5904\u7406","45a32d34":"\u6574\u4f53\u6765\u770b\uff0c\u7968\u4ef7\u8d8a\u9ad8\uff0c\u4e58\u5ba2\u7684Pclass\u8d8a\u9ad8\uff0c\u800c\u751f\u5b58\u7684\u6982\u7387\u4e5f\u6700\u5927\u3002\u8fd9\u91cc\u7684\u5206\u6790\u7ed3\u679c\u8868\u660e\uff0c\u5728\u6cf0\u5766\u5c3c\u514b\u53f7\u7684\u751f\u5b58\u65b9\u9762\uff0c\u9075\u5faa\u4e86\u5bcc\u4eba\u4f18\u5148\u7684\u4e00\u79cd\u539f\u5219\u3002","82b24dcc":"# 1.9\u5206\u6790Sex\u7279\u5f81","7a1dcca1":"Name\u7279\u5f81\u4e2d\uff0c\u5305\u542b\u4e86\u7279\u5b9a\u7684\u79f0\u8c13\u90e8\u5206\uff0c\u5305\u62ecMr.\u3001Mrs\u7b49\u4fe1\u606f\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u6211\u4eec\u9700\u8981\u5c06\u5176\u63d0\u53d6\u51fa\u6765\u3002","f09e38cd":"\u4ece\u5361\u65b9\u62df\u5408\u5ea6\u7684\u68c0\u9a8c\u6765\u770b\uff0cP\u503c\u4e3a0.8952\uff0c\u8fd9\u4e00P\u503c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u652f\u6301\u539f\u5047\u8bbe\u6210\u7acb\u3002\u5373\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u5728\u6709\u8239\u8231\u53f7\u7684\u60c5\u51b5\u4e0b\uff0c\u8239\u8231\u7684\u4f4d\u7f6e\u4e0e\u751f\u5b58\u7387\u5e76\u6ca1\u6709\u5f88\u5927\u7684\u5173\u8054\u3002","24f608a6":"# 1.4\u63d0\u53d6\u7279\u5f81Name\u5173\u952e\u4fe1\u606f\u5e76\u5206\u6790","742d177e":"\u67e5\u770b\u65b0\u5206\u7c7b\u4e0b\uff0c\u5404\u6210\u5458\u7684\u5b58\u6d3b\u60c5\u51b5","4215af95":"\u4e3a\u4e86\u8fdb\u4e00\u6b65\u9a8c\u8bc1\u6211\u4eec\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u5bf9\u8bad\u7ec3\u96c6\u4e2d\u6309\u5e74\u9f84\u6bb5\u8fdb\u884c\u5206\u7ec4\uff0c\u4ee50\uff5e16\uff0c17\uff5e40\uff0c40\uff5e60\uff0c60\uff5e100\u8fdb\u884c\u5206\u7ec4\uff0c\u5206\u522b\u8ba1\u7b97\u751f\u5b58\u60c5\u51b5\u53ca\u5404\u4e2a\u5e74\u9f84\u6bb5\u4eba\u6570\u6240\u5360\u6bd4\u7387\u3002\u9996\u5148\u8ba1\u7b97\u5404\u4e2a\u5e74\u9f84\u6bb5\u7684\u751f\u5b58\u60c5\u51b5","5cb241ec":"\u4ece\u7edf\u8ba1\u4e0a\u6765\u770b\uff0c\u8d35\u65cf\u7684\u751f\u5b58\u6982\u7387\uff0c\u8981\u4f4e\u4e8e\u5e73\u6c11\uff08\u53ef\u80fd\u662f\u7531\u4e8e\u8d35\u65cf\u7684\u9a91\u58eb\u7cbe\u795e\u6216\u8239\u4e0a\u9ad8\u7ea7\u804c\u5458\u653e\u5f03\u6c42\u751f\u673a\u4f1a\uff09,\u4f46\u5e76\u4e0d\u660e\u663e\u3002\u6b64\u5916\uff0c\u5c06Name\u90e8\u5206\u5212\u5206\u4e3aCivilan\u8fc7\u4e8e\u7b3c\u7edf\uff0c\u51e0\u4e4e\u76f8\u5f53\u4e8e\u6574\u4e2a\u6837\u672c\uff0c\u8fd9\u6837\u7684\u5212\u5206\uff0c\u5e76\u4e0d\u80fd\u5f88\u597d\u5730\u5bf9\u7279\u5f81\u8fdb\u884c\u533a\u5206\uff0c\u6211\u4eec\u8003\u8651\u7b2c\u4e8c\u79cd\u5212\u5206\u65b9\u6cd5\uff0c\u5728\u4fdd\u6301\u8d35\u65cf\u4e0d\u53d8\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u5e73\u6c11\u518d\u5212\u5206\u4e3a\u6210\u5e74\u7537\u6027\uff0c\u6210\u5e74\u5973\u6027\u4ee5\u53ca\u513f\u7ae5\uff08Master\uff09\u3002","bc0270d2":"\u4ece\u4e0b\u56fe\u5de6\u4e00\u7684\u6982\u7387\u5bc6\u5ea6\u5206\u5e03\u56fe\u4e0a\u770b\uff0c\u5e74\u9f84\u5bf9\u4e58\u5ba2\u7684\u751f\u5b58\u7387\u6709\u5f71\u54cd\uff0c\u800c\u4e14\u5f71\u54cd\u4e3b\u8981\u96c6\u4e2d\u5728\u4e24\u70b9\uff1a\u5c11\u5e74\u513f\u7ae5\u7684\u751f\u5b58\u7387\u63d0\u9ad8\uff0c\u9752\u58ee\u5e74\u7684\u751f\u5b58\u7387\u4e0b\u964d,\n\u8001\u5e74\u4eba\u7684\u751f\u5b58\u673a\u7387\u4e0b\u964d\u3002\n\u4e0b\u56fe\u5de6\u4e8c\u81f3\u5de6\u56db\u5206\u522b\u5c55\u793a\u4e86\u4e58\u5ba2\u3001\u751f\u5b58\u4e58\u5ba2\u3001\u6b7b\u4ea1\u4e58\u5ba2\u7684\u5e74\u9f84\u5206\u5e03\u60c5\u51b5\u3002\u5176\u4e2d\u4ece\u5de6\u4e09\u81f3\u5de6\u56db\u5f53\u4e2d\uff0c\u80fd\u591f\u660e\u663e\u53d1\u73b0\u5c11\u5e74\u7684\u751f\u5b58\u7387\u53d8\u9ad8\uff0c\u8001\u5e74\u4eba\u7684\u751f\u5b58\u7387\u4e0b\u964d\u3002","9f3ba9fc":"\u4f46\u6211\u4eec\u4ecd\u672a\u5224\u65ad\uff0c\u6709\u8239\u8231\u53f7\u4e0e\u65e0\u8239\u8231\u53f7\u7684\u751f\u5b58\u6982\u7387\u662f\u5426\u4e0d\u540c\u3002\u6211\u4eec\u518d\u6b21\u5f15\u5165\u5361\u65b9\u62df\u5408\u5ea6\u68c0\u9a8c\nH0\uff1a\u6709\u8239\u8231\u53f7\u4e0e\u65e0\u8239\u8231\u53f7\u7684\u751f\u5b58\u60c5\u51b5\u57fa\u672c\u76f8\u540c\nH1\uff1a\u6709\u8239\u8231\u53f7\u4e0e\u65e0\u8239\u8231\u53f7\u7684\u751f\u5b58\u60c5\u51b5\u4e0d\u540c","96e2542f":"\u4ece\u4e0a\u56fe\u7684\u7ed3\u679c\u6765\u770b\uff0c\u4e0d\u540c\u8239\u8231\u7684\u4e58\u5ba2\u6570\u91cf\u660e\u663e\u5b58\u5728\u4e0d\u540c\u3002\u800c\u4e14\u629b\u5f00T\u7684\u6781\u7aef\u503c\u6765\u770b\uff0c\u4eceA\uff5eF\u4e0d\u540c\u8239\u8231\u7684\u4e58\u5ba2\u5206\u5e03\u7c7b\u4f3c\u4e8e\u6b63\u6001\u5206\u5e03\u3002\n\u6211\u4eec\u521d\u6b65\u5047\u8bbe\u4eceA\uff5eF\u7684\u8239\u8231\uff0c\u4e0e\u4e58\u5ba2\u7968\u4ef7\u3001\u8eab\u4efd\u7b49\u7ea7\u5b58\u5728\u5173\u7cfb\u3002\n\u800c\u7968\u4ef7\u3001\u7b49\u7ea7\u4e0e\u4e58\u5ba2\u751f\u5b58\u4e0e\u5426\uff0c\u62e5\u6709\u4e00\u5b9a\u7684\u76f8\u5173\u6027\u3002\u636e\u6b64\u6211\u4eec\u8ba4\u4e3a\uff0c\u8239\u8231\u5f88\u6709\u53ef\u80fd\u4e0e\u751f\u5b58\u4e0e\u5426\u4e5f\u6709\u4e00\u5b9a\u7a0b\u5ea6\u7684\u76f8\u5173\u6027\u3002\n\u4e3a\u4e86\u8bc1\u660e\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5f15\u5165\u5361\u65b9\u62df\u5408\u5ea6\u68c0\u9a8c\u3002","7e3198e7":"# 1.5\u5bf9\u5e74\u9f84Age\u8fdb\u884c\u5206\u6790","93597f50":"# 2. \u5bfc\u5165\u7b97\u6cd5\uff0c\u4ee5\u53ca\u8fdb\u884c\u53c2\u6570\u8c03\u8bd5\uff0c"}}