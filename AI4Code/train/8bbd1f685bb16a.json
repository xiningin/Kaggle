{"cell_type":{"0c2b22f5":"code","811c535a":"code","e762d8ad":"code","ec6f013e":"code","fc913f42":"code","893a4cbd":"code","f76097d5":"code","75e90ff3":"code","8cae38a8":"code","a1c206ea":"code","f513b867":"code","bc529cb6":"code","eb701d52":"code","f62b6a2d":"code","3ad36bb3":"code","d9ce36ee":"code","16a90496":"code","1d21be9d":"code","7145cf17":"code","e24ad746":"code","7e3279a2":"code","e62b1807":"markdown","1f02127c":"markdown","534c36bf":"markdown","38075686":"markdown","28c85119":"markdown","fa89bbf7":"markdown","c0b1efa1":"markdown","54074738":"markdown","4835e8ab":"markdown","f7e67c70":"markdown","8f768452":"markdown","2d9b0c5d":"markdown","8f0e0865":"markdown","3f9e124c":"markdown","8077d7bf":"markdown","bdab8402":"markdown","0efc4ec4":"markdown","2f57cbee":"markdown","d9ba59e0":"markdown","710d9539":"markdown"},"source":{"0c2b22f5":"import pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport plotly.offline as plt\nimport datetime as dt\nfrom collections import OrderedDict\nimport numpy as np\n\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import LSTM\nfrom keras.layers import Dropout\nfrom keras.preprocessing.sequence import TimeseriesGenerator\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error\nimport math\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error\nfrom pandas.tseries.offsets import DateOffset\n\n","811c535a":"raw_data=pd.read_csv('..\/input\/nepal_raw_data.csv')\ndf_worldWide=pd.read_csv('..\/input\/owid-covid-data.csv')\nrecovered_df=pd.read_csv('..\/input\/nepal_recovered.csv')","e762d8ad":"covid_df_nepal=df_worldWide[df_worldWide['location']=='Nepal']\ncovid_df_nepal=covid_df_nepal[['date','total_tests','total_deaths']]","ec6f013e":"columns=['date','case_number','age','gender','District','Province','total_case']\nraw_data.drop(raw_data.columns.difference(\n    ['Date of diagnosis**','Case No.','Age','Sex','Address\/location','Province','Cumulative total']),1,inplace=True)\nraw_data.columns=columns\nraw_data.District.fillna(raw_data.Province,inplace=True)\nraw_data.date=pd.to_datetime(raw_data.date).dt.strftime('%Y-%m-%d')\nraw_data.case_number=raw_data.case_number.str.split(' ',expand=True)[1]\nprocessed_data_district=raw_data.groupby(by=['date','District'],as_index=False).agg(OrderedDict([('case_number','count'),                                                                         ('Province','last')]))\n#processed_data_district=raw_data[raw_data['Cumulative total']>1]\nprocessed_data_province=processed_data_district.groupby(by=['date','Province'],as_index=False).sum()\n","fc913f42":"raw_data=raw_data[raw_data['total_case']>1]\ndate_wise_case=raw_data.groupby(by='date',as_index=False).agg({'total_case':'last'})\ndate_wise_data=date_wise_case.merge(covid_df_nepal,on=['date'],how='left')\nrecovered_df.date=pd.to_datetime(recovered_df.date).dt.strftime('%Y-%m-%d')\ndate_wise_data=date_wise_data.merge(recovered_df,on=['date'],how='left')\n#will use for prediction\ndata_for_prediction=date_wise_data","893a4cbd":"date_wise_data=date_wise_data[:-1]\n\ndate_wise_data['date']=pd.to_datetime(date_wise_data[\"date\"])\nweeks=date_wise_data[\"date\"].dt.weekofyear\ndate_wise_data.insert(loc=1,column='week_of_year',value=weeks)\n\ndate_wise_data['new_case']=date_wise_data['total_case'].diff()\ndate_wise_data.iloc[0,date_wise_data.columns.get_loc('new_case')]=2\n\ndate_wise_data['new_test']=date_wise_data['total_tests'].diff()\ndate_wise_data.iloc[0,date_wise_data.columns.get_loc('new_test')]=1\n\ndate_wise_data['new_death']=date_wise_data['total_deaths'].diff()\ndate_wise_data.iloc[0,date_wise_data.columns.get_loc('new_death')]=1\n\ndate_wise_data['new_recovered']=date_wise_data['total_recovered'].diff()\ndate_wise_data.iloc[0,date_wise_data.columns.get_loc('new_recovered')]=1\n\ndate_wise_data['new_case']=date_wise_data['new_case'].astype(int)\ndate_wise_data['new_test']=date_wise_data['new_test'].astype(int)\ndate_wise_data['new_death']=date_wise_data['new_death'].astype(int)\ndate_wise_data['new_recovered']=date_wise_data['new_recovered'].astype(int)\n\ndate_wise_data[['growth_factor_confirmed','growth_factor_recovered','growth_factor_deaths']]=date_wise_data[['total_case','total_recovered','total_deaths']].pct_change().add(1)\n\n","f76097d5":"fig1=go.Figure()\nfig1.add_trace(go.Bar(x=date_wise_data.date,y=date_wise_data.total_case,name=\"Confirmed Cases Bar\",\n                     marker=dict(color=\"#cfcedb\")))\nfig1.add_trace(go.Scatter(x=date_wise_data.date,y=date_wise_data.total_case,mode='lines+markers',\n                          line=dict(color=\"#003600\",width=2),\n                          name=\"Confirmed Case Line\"))\nfig1.add_trace(go.Scatter(x=date_wise_data.date,y=date_wise_data.total_case-date_wise_data.total_deaths-date_wise_data.total_recovered,\n                          mode='lines+markers',\n                           line=dict(color=\"#c41696\",width=2),\n                           marker=dict(color=\"#100d3b\"),\n                          name=\"Total Active Case\"))\nfig1.add_trace(go.Scatter(x=date_wise_data.date,y=date_wise_data.total_deaths,\n                          mode='lines+markers',name=\"Death Cases\"))\nfig1.add_trace(go.Scatter(x=date_wise_data.date,y=date_wise_data.total_recovered,\n                          line=dict(color=\"#007600\",width=2),\n                          mode='markers+lines',name=\"Recovered Cases\"))\nfig1.update_layout(title=\"Growth of Different Types of Cases in Nepal\",xaxis_title=\"Date\",yaxis_title=\"Number Of Cases\",legend=dict(x=0,y=1,traceorder=\"normal\"))\nfig1.show() ","75e90ff3":"#Graph For Growth Factor Daily\nfig1=go.Figure()\nx_data=date_wise_data.date\nfig1.add_trace(go.Scatter(x=x_data,y=date_wise_data.growth_factor_confirmed,mode='lines+markers',\n                          line=dict(color=\"#003600\",width=2),\n                          name=\"Confirmed Case\"))\n\nfig1.add_trace(go.Scatter(x=x_data,y=date_wise_data.growth_factor_deaths,\n                          mode='lines+markers',name=\"Death Cases\"))\nfig1.add_trace(go.Scatter(x=x_data,y=date_wise_data.growth_factor_recovered,\n                          line=dict(color=\"#007600\",width=2),\n                          mode='markers+lines',name=\"Recovered Cases\"))\nfig1.update_layout(title=\"Growth Factor of Different Cases\",xaxis_title=\"Date\",yaxis_title=\"Growth Factor\",legend=dict(x=0,y=1,traceorder=\"normal\"))\nfig1.show() ","8cae38a8":"#Graph For New Case Daily\nfig1=go.Figure()\nx_data=date_wise_data.date\nfig1.add_trace(go.Scatter(x=x_data,y=date_wise_data.new_case,mode='lines+markers',\n                          line=dict(color=\"#003600\",width=2),\n                          name=\"Confirmed Case Line\"))\n\nfig1.add_trace(go.Scatter(x=x_data,y=date_wise_data.new_death,\n                          mode='lines+markers',name=\"Death Cases\"))\nfig1.add_trace(go.Scatter(x=x_data,y=date_wise_data.new_recovered,\n                          line=dict(color=\"#007600\",width=2),\n                          mode='markers+lines',name=\"Recovered Cases\"))\nfig1.update_layout(title=\"Daily New Different Cases in Nepal\",xaxis_title=\"Date\",yaxis_title=\"Number Of Cases\",legend=dict(x=0,y=1,traceorder=\"normal\"))\nfig1.show()  ","a1c206ea":"#Daily Test vs Positive Cases\nfig=go.Figure()\nfig1=go.Figure()\nfig=make_subplots(rows=1,cols=2,\n                 subplot_titles=('Each Day\\'s Tests','Each Day\\'s Positive Cases'))\nx_data=date_wise_data.date\nfig.add_trace(go.Bar(x=x_data,y=date_wise_data.new_test,\n                          name=\"Total Tests\"),row=1,col=1,)\n\nfig.add_trace(go.Bar(x=x_data,y=date_wise_data.new_case,\n                         name=\"Positive Tests\"),row=1,col=2,)\nfig1.add_trace(go.Scatter(x=x_data,y=date_wise_data.new_case\/date_wise_data.new_test))\nfig.update_layout(title=\"Tests And Positive Tests in Each Day\",xaxis_title=\"Date after 2nd Case seen \",yaxis_title=\"Number Of Tests\/Cases\",legend=dict(x=0,y=1,traceorder=\"normal\"))\nfig1.update_layout(title=\"Positive Case per Test in Each Day\",xaxis_title=\"Date after 2nd Case seen \",yaxis_title=\"Ratio\",legend=dict(x=0.5,y=1.2,traceorder=\"normal\"))\nfig.show()\nfig1.show()","f513b867":"#pre-process for weekly\ncovid_nepal_df_weekly=date_wise_data.sort_values('date').groupby(by='week_of_year',as_index=False).agg(\n    OrderedDict([('date','last'),\n                 ('total_case','last'),\n                 ('new_case','sum'),\n                 ('total_deaths','last'),\n                 ('new_death','sum'),\n                 ('total_tests','last'),\n                 ('new_test','sum'),\n                 ('total_recovered','last'),\n                 ('new_recovered','sum'),\n    ]))\ncovid_nepal_df_weekly.index = np.arange(1, len(covid_nepal_df_weekly) + 1)","bc529cb6":"fig1=go.Figure()\nx_data=covid_nepal_df_weekly.index\nfig1.add_trace(go.Scatter(x=x_data,y=covid_nepal_df_weekly.total_case,mode='lines+markers',\n                          line=dict(color=\"#003600\",width=2),\n                          name=\"Total Confirmed Case\"))\nfig1.add_trace(go.Scatter(x=x_data,y=covid_nepal_df_weekly.total_case-covid_nepal_df_weekly.total_deaths-covid_nepal_df_weekly.total_recovered,\n                          mode='lines+markers',\n                           line=dict(color=\"#c41696\",width=2),\n                           marker=dict(color=\"#100d3b\"),\n                          name=\"Total Active Case\"))\nfig1.add_trace(go.Scatter(x=x_data,y=covid_nepal_df_weekly.total_deaths,\n                          mode='lines+markers',name=\"Death Cases\"))\nfig1.add_trace(go.Scatter(x=x_data,y=covid_nepal_df_weekly.total_recovered,\n                          line=dict(color=\"#007600\",width=2),\n                          mode='markers+lines',name=\"Recovered Cases\"))\nfig1.update_layout(title=\"Weekly Growth of Different Types of Cases in Nepal\",xaxis_title=\"WeeK (After 2nd Case Seen)\",yaxis_title=\"Number Of Cases\",legend=dict(x=0,y=1,traceorder=\"normal\"))\nfig1.show() ","eb701d52":"fig1=go.Figure()\nx_data=covid_nepal_df_weekly.index\nfig1.add_trace(go.Scatter(x=x_data,y=covid_nepal_df_weekly.new_case,mode='lines+markers',\n                          line=dict(color=\"#003600\",width=2),\n                          name=\"Confirmed Case Line\"))\n\nfig1.add_trace(go.Scatter(x=x_data,y=covid_nepal_df_weekly.new_death,\n                          mode='lines+markers',name=\"Death Cases\"))\nfig1.add_trace(go.Scatter(x=x_data,y=covid_nepal_df_weekly.new_recovered,\n                          line=dict(color=\"#007600\",width=2),\n                          mode='markers+lines',name=\"Recovered Cases\"))\nfig1.update_layout(title=\"Weekly New Cases in Nepal\",xaxis_title=\"Date\",yaxis_title=\"Number Of Cases\",legend=dict(x=0,y=1,traceorder=\"normal\"))\nfig1.show() ","f62b6a2d":"fig=go.Figure()\nfig1=go.Figure()\nfig=make_subplots(rows=1,cols=2,\n                 subplot_titles=('Each Week\\'s Tests','Each Week\\'s Positive Cases'))\nx_data=covid_nepal_df_weekly.index\nfig.add_trace(go.Bar(x=x_data,y=covid_nepal_df_weekly.new_test,\n                          name=\"Total Tests\"),row=1,col=1,)\n\nfig.add_trace(go.Bar(x=x_data,y=covid_nepal_df_weekly.new_case,\n                         name=\"Positive Tests\"),row=1,col=2,)\nfig1.add_trace(go.Scatter(x=x_data,y=covid_nepal_df_weekly.new_case\/covid_nepal_df_weekly.new_test))\nfig.update_layout(title=\"Tests And Positive Tests in each week\",xaxis_title=\"Number Of Weeks after 2nd Case seen \",yaxis_title=\"Number Of Tests\/Cases\",legend=dict(x=0.5,y=1.2,traceorder=\"normal\"))\nfig1.update_layout(title=\"Positive Case per Test in each week\",xaxis_title=\"Number Of Weeks after 2nd Case seen \",yaxis_title=\"Ratio\",legend=dict(x=0.5,y=1.2,traceorder=\"normal\"))\nfig.show()\nfig1.show() ","3ad36bb3":"trace=[]\nprocessed_data_province=processed_data_province[1:]\nfor i,x in enumerate(processed_data_province.Province.unique()):\n    prov_data_each=processed_data_province[processed_data_province['Province']==x].sort_values('date')\n    prov_data_each.case_number=prov_data_each.case_number.cumsum()\n    trace.append(go.Scatter(x=prov_data_each.date,y=prov_data_each.case_number,name=x))\nfig=go.Figure(data=trace)\nfig.update_layout(title=\"Growth of Different Types of Cases in Different Province\",xaxis_title=\"Date\",yaxis_title=\"Number Of Cases\",legend=dict(x=0,y=1,traceorder=\"normal\"))\n","d9ce36ee":"data_for_prediction=data_for_prediction[['date','total_case']]\ndata_for_prediction['new_cases']=data_for_prediction['total_case'].diff()\ndata_for_prediction=data_for_prediction.fillna(1)\ndata_for_prediction.new_cases=data_for_prediction.new_cases.astype('int')\ndata_for_prediction.date=pd.to_datetime(data_for_prediction.date)\ndata_for_prediction.set_index('date',inplace=True)\ndata_for_prediction.drop('total_case',axis=1,inplace=True)","16a90496":"# train=data_for_prediction\n# scaler=MinMaxScaler()\n# scaler.fit(train)\n# train=scaler.transform(train)\n\n# n_input=7\n# n_feature=1\n# generator=TimeseriesGenerator(train,train,length=n_input,batch_size=4)\n# model=Sequential()\n# model.add(LSTM(200,activation='relu',input_shape=(n_input,n_feature)))\n# model.add(Dropout(0.15))\n# model.add(Dense(1))\n# model.compile(optimizer='adam',loss='mse')\n# model.fit_generator(generator,epochs=1000)","1d21be9d":"pred_list=[]\nbatch=train[-n_input:].reshape((1,n_input,n_feature))\nfor i in range(n_input):\n    pred_list.append(model.predict(batch)[0])\n    batch=np.append(batch[:,1:,:],[[pred_list[i]]],axis=1)","7145cf17":"add_dates=[data_for_prediction.index[-1]+DateOffset(days=x) for x in range(0,8)]\nfuture_dates=pd.DataFrame(index=add_dates[1:],columns=data_for_prediction.columns)\ndf_predict=pd.DataFrame(scaler.inverse_transform(pred_list),index=future_dates[-n_input:].index,columns=['Prediction'])\ndf_final=pd.concat([data_for_prediction,df_predict],axis=1)\ndf_final=df_final.reset_index().rename(columns={'index':'date'})","e24ad746":"#prediction for 1 Week\nfig1=go.Figure()\n\nfig1.add_trace(go.Scatter(x=df_final.date,y=df_final.new_cases.cumsum(),mode='lines+markers',\n                          line=dict(color=\"#003600\",width=2),\n                          name=\"Confirmed Case Line\"))\nfig1.add_trace(go.Scatter(x=df_final.date,y=df_final.Prediction.cumsum()+df_final.new_cases.sum(),\n                          mode='markers',name=\"Predictions\"))\n\nfig1.update_layout(title=\"Growth of Confirmed Cases and Prediction for Next Week\",xaxis_title=\"Date\",yaxis_title=\"Number Of Cases\",legend=dict(x=0,y=1,traceorder=\"normal\"))\nfig1.show() ","7e3279a2":"df_final.tail(7)","e62b1807":"**#Weekly Test vs Positive Cases**","1f02127c":"**#Graph For Growth Factor Daily**","534c36bf":"# Analysis Visualization,and Prediction","38075686":"**#pre-process for weekly data**","28c85119":"# *Introduction :*\n\nCoronaviruse is a family of viruses that cause illness such as respiratory diseases or gastrointestinal diseases.Middle East Respiratory Syndrome (MERS-CoV) and Severe Acute Respiratory Syndrome (SARS-CoV) were such severe cases with the world already has faced.\nThe new virus of the coronavirus family SARS-CoV-2 (n-coronavirus) discovered in 2019 in Wuhan.This Virus shows differnt symptoms including fever,coughing,sire throat and shortness of breath.\n\n**In Nepal**, first Case was confirmed on on 23 January 2020 and 2nd case was confirmed after two month on march 23. First case of local transmission was confirmed on April 4 and first death occured on May 14. As of May 23 2020 591 Cases have been confirmed.\nThis NoteBook is an effort to visualize different cases with it's trends inside Nepal only.\n\n**Note**:I will update this notebook continuously with new analysis and prediction.\n","fa89bbf7":"**Imports Library**\n* Pandas\n* Plotly\n* Matplotlib\n* Numpy\n* Keras\n* DateTime\n* Collection","c0b1efa1":"Data according Dates.","54074738":"**#Daily Test vs Positive Cases**","4835e8ab":"Ploting Graph To show Growth of Dirrerent Cases","f7e67c70":"**Please UPVOTE if you Like This NoteBook.****\n\nFollow Me:\n* [Linkedin](https:\/\/www.linkedin.com\/in\/sujan-neupane-b7164411b\/)","8f768452":"**According to province**","2d9b0c5d":"**Prediction for Next Week:**","8f0e0865":"**#Graph For Total Cases Weekly","3f9e124c":"**Sources:**\n* [MOHP](https:\/\/covid19.mohp.gov.np)\n* [PublicHealthData](https:\/\/www.publichealthupdate.com\/a-live-repository-and-dash-board-for-covid-19-in-nepal)\n* [Owid](https:\/\/github.com\/owid\/covid-19-data\/tree\/master\/public\/data)\n\n\n","8077d7bf":"Taking Only Nepal Data from world Data sets","bdab8402":"**#Graph For New Case Weekly","0efc4ec4":"**Predicted Cases for Next Week.**","2f57cbee":"**#Graph For New Case Daily**","d9ba59e0":"Pre-Process and adding to graph","710d9539":"Pre-Process Data"}}