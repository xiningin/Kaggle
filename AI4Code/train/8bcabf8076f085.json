{"cell_type":{"b14b249a":"code","63c532b9":"code","c24135f4":"code","e10fdf2d":"code","1864e607":"code","5e507e4f":"code","237ea352":"code","894589df":"code","0179506d":"code","ca226516":"code","fafd89f6":"code","f3a1ca2e":"code","bc759259":"code","53bdad30":"code","5f8e697a":"code","fc2ba146":"code","afa4f5f5":"code","b87dfb54":"code","b4ca5021":"code","3cc17cc5":"code","c5e1daae":"code","31f0497d":"code","076e59d5":"code","e1cf527a":"code","2402f2ef":"code","3557a358":"code","64baec94":"code","1f867551":"code","36971e87":"code","51398529":"code","53c05ad9":"code","210f37b5":"code","db4058b9":"code","d0bb1eae":"code","b9c59041":"code","7f3ad064":"code","f963aff2":"code","29886ce5":"code","055d5844":"markdown","1744e190":"markdown","cd8528be":"markdown","811c543f":"markdown","db15e767":"markdown","9c8dc9cb":"markdown","8599a6bc":"markdown","c2808162":"markdown"},"source":{"b14b249a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","63c532b9":"import datetime as dt\nimport pandas as pd","c24135f4":"!pip install dataprep","e10fdf2d":"from dataprep.eda import plot, plot_correlation, create_report, plot_missing","1864e607":"df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf","5e507e4f":"plot(df)","237ea352":"create_report(df)","894589df":"plot(df, \"Age\")","0179506d":"plot(df, \"Age\", \"Embarked\")","ca226516":"df = pd.read_csv('..\/input\/titanic\/train.csv')\ndf.head()","fafd89f6":"! pip install Autoviz","f3a1ca2e":"! pip install xlrd","bc759259":"from autoviz.AutoViz_Class import AutoViz_Class\n\nAV = AutoViz_Class()\ndftc = AV.AutoViz(\n    filename='', \n    sep='' , \n    depVar='Embarked', \n    dfte=df, \n    header=0, \n    verbose=1, \n    lowess=False, \n    chart_format='png', \n    max_rows_analyzed=300000, \n    max_cols_analyzed=30\n)","53bdad30":"from pandas_profiling import ProfileReport","5f8e697a":"report = ProfileReport(df)\nreport","fc2ba146":"!pip install sweetviz","afa4f5f5":"import sweetviz as sv","b87dfb54":"advert_report = sv.analyze([df, 'Data'])","b4ca5021":"## define configuration\nPATH_TRAIN = '..\/input\/house-prices-advanced-regression-techniques\/train.csv'\nPATH_TEST = '..\/input\/house-prices-advanced-regression-techniques\/test.csv'\n\nPATH_AUTOGLUON_SUBMISSION = 'submission_autogluon.csv'\nPATH_EVALML_SUBMISSION = 'submission_evalml.csv'\nPATH_FLAML_SUBMISSION = 'submission_flaml.csv'\nPATH_H2OAML_SUBMISSION = 'submission_h2oaml.csv'\nPATH_LAML_SUBMISSION = 'submission_laml.csv'\n\nMAX_MODEL_RUNTIME_MINS = 15\nMAX_MODEL_RUNTIME_SECS = MAX_MODEL_RUNTIME_MINS * 60","3cc17cc5":"## prepare data\nimport gc\nimport os\nimport shutil\nimport datatable as dt\nfrom pathlib import Path\nimport warnings\n\nwarnings.filterwarnings('ignore')\n\ntrain = dt.fread(PATH_TRAIN)[:100000, :]\ntest = dt.fread(PATH_TEST)\n\ntarget = train['SalePrice'].to_numpy().ravel()\ntest_ids = test['Id']\n\ndel train[:, ['Id', 'SalePrice']]\ntest = test[:, train.names]","c5e1daae":"! pip install delayed","31f0497d":"## install packages\n!python3 -m pip install -q \"mxnet<2.0.0\"\n!python3 -m pip install -q autogluon\n!python3 -m pip install -q -U graphviz\n!python3 -m pip install -q scikit-learn==0.24.2","076e59d5":"## import packages\nfrom autogluon.tabular import TabularPredictor","e1cf527a":"## run model\ntrain['SalePrice'] = dt.Frame(target)\n\nmodel_autogluon = TabularPredictor(label='SalePrice')\nmodel_autogluon.fit(train_data=train.to_pandas(), excluded_model_types=['KNN'], time_limit=MAX_MODEL_RUNTIME_SECS)\n\ndel train['SalePrice']","2402f2ef":"## generate predictions\npreds_autogluon = model_autogluon.predict_proba(test.to_pandas())","3557a358":"## create submission\nsubmission = dt.Frame(id=test_ids, target=dt.Frame(preds_autogluon))\nsubmission.head()","64baec94":"## clear memory\nshutil.rmtree('AutogluonModels')\ndel model_autogluon\n\ngc.collect()","1f867551":"## import packages\nimport h2o\nfrom h2o.automl import H2OAutoML","36971e87":"## prepare data\nh2o.init()\n\nh2o_train = h2o.H2OFrame(train.to_pandas())\nh2o_test = h2o.H2OFrame(test.to_pandas())\n\nh2o_train['target'] = h2o.H2OFrame(target).asfactor()","51398529":"## run model\nfeatures = [x for x in h2o_train.columns if x != 'target']\n\nmodel_h2o = H2OAutoML(stopping_metric='AUC', max_runtime_secs=MAX_MODEL_RUNTIME_SECS)\nmodel_h2o.train(x=features, y='target', training_frame=h2o_train)","53c05ad9":"## generate predictions\npreds_h2o = model_h2o.leader.predict(h2o_test).as_data_frame()","210f37b5":"preds_h2o","db4058b9":"## create submission\nsubmission = dt.Frame(id=test_ids, claim=dt.Frame(preds_h2o['predict']))\nsubmission.head()","d0bb1eae":"## install packages\n!python3 -m pip install -q lightautoml\n!python3 -m pip install -q -U torch\n!python3 -m pip install -q -U torchvision","b9c59041":"## import packages\nfrom lightautoml.automl.presets.tabular_presets import TabularAutoML\nfrom lightautoml.tasks import Task","7f3ad064":"## run model\ntrain['target'] = dt.Frame(target)\n\nmodel_laml = TabularAutoML(task = Task('reg'), timeout = MAX_MODEL_RUNTIME_SECS)\nmodel_laml.fit_predict(train_data=train.to_pandas(), roles={'target': 'target'})\n\ndel train['target']","f963aff2":"## generate predictions\npreds_laml = model_laml.predict(test.to_pandas()).data.ravel()","29886ce5":"## create submission\nsubmission = dt.Frame(id=test_ids, claim=preds_laml)\nsubmission.head()","055d5844":"# Work in progress","1744e190":"> # LightAuto ML","cd8528be":"> # Autoviz","811c543f":"> # Data Prep","db15e767":"# SweetViz","9c8dc9cb":"> # H2o AutoML","8599a6bc":"> # AutoGluon ML","c2808162":"> # Pandas Profiling"}}