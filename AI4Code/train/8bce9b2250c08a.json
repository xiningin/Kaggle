{"cell_type":{"92714313":"code","ee76c8a6":"code","e518b8ad":"code","f221be83":"code","724bf1ad":"code","0efb157c":"code","77cd26be":"code","6dcd16fd":"code","635cced4":"code","de1629ae":"code","a75e3186":"code","95e65543":"code","a04face6":"code","ff0a3850":"code","87f25cc9":"code","800735ce":"code","c6ebe177":"code","6b80a053":"code","926d177a":"code","cc40bf21":"code","3ead6b75":"code","8aefef4d":"code","365aa618":"code","daabe809":"code","23a8de0c":"code","0069b1a9":"code","b0eef96e":"code","5bf8ab58":"code","546cee91":"code","0b594063":"code","7553e0b5":"code","2beb0262":"code","0c617751":"code","36d4168f":"code","ebfb3991":"code","5c31ffcc":"code","8a8dcc63":"code","cce79c95":"code","a5b7bb75":"code","af07bf6f":"code","665e6613":"code","cd9c694f":"code","ec892265":"code","84f60df5":"code","1b7e78da":"code","ace76d8a":"code","9f8fcf0a":"code","1aaa566e":"markdown","ebaecce3":"markdown","65a712bc":"markdown","1da6d585":"markdown","c3b013ac":"markdown","f8bd79e7":"markdown","23e81b00":"markdown","ee8c9241":"markdown","94f4c61a":"markdown","5769092d":"markdown","e056686d":"markdown","6c438fca":"markdown","a264475e":"markdown","796aa242":"markdown","3cf0369e":"markdown","6d3d42b0":"markdown","b3b3c5ee":"markdown","86e2f55c":"markdown","41ebf2c7":"markdown","8dc83fb3":"markdown","d069735b":"markdown","e9328183":"markdown","c8e8d313":"markdown","aaac09a8":"markdown","36d90123":"markdown","95b28bc6":"markdown","9b1b05a5":"markdown","bdf61a36":"markdown","a1c6a6f4":"markdown","1c071659":"markdown","8f64dec0":"markdown","b828e2b0":"markdown","5a3e40e6":"markdown","b39765ba":"markdown","aa44460a":"markdown","23d41655":"markdown","e57d0c74":"markdown","a0ecb2ee":"markdown"},"source":{"92714313":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ee76c8a6":"heart_data = pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv');\n\nheart_data.head()","e518b8ad":"heart_data.shape","f221be83":"heart_data.columns","724bf1ad":"import matplotlib.pyplot as plt;\nimport seaborn as sns;\n\n%matplotlib inline\n\nplt.rcParams['figure.figsize'] = (16, 6);\nsns.set_style('dark');","0efb157c":"heart_data.dtypes","77cd26be":"title_params = {\n    'fontsize': 24\n};\n\nlabel_size = 16;\n\ntitle_padding = 10;","6dcd16fd":"colnames_continuous = {\n    'age': 'Age', \n    'platelets': 'Platelets', \n    'serum_creatinine': 'Serum Creatinine', \n    'time': 'Time',\n    'ejection_fraction': 'Ejection Fraction',\n    'serum_sodium': 'Serum Sodium'\n};\n\nfig, axes = plt.subplots(3, 2, figsize=(28, 16));\nfig.tight_layout(h_pad=10);\n\nrow = 0;\ncol = 0;\n\nfor key, val in colnames_continuous.items():\n    if col >= 2:\n        row += 1;\n        col = 0;\n    sns.histplot(x=key, data=heart_data, ax=axes[row, col]);\n    axes[row, col].set_title(val, fontdict=title_params, pad=title_padding);\n    axes[row, col].set_xlabel(key, fontsize=label_size);\n    axes[row, col].set_ylabel('count', fontsize=label_size);\n    col += 1;","635cced4":"colnames = {\n    'anaemia': 'Anaemia', \n    'diabetes': 'Diabetes', \n    'high_blood_pressure': 'High Blood Pressure',\n    'sex': 'Gender',\n    'smoking': 'Smoker'\n};\n\nfor key, val in colnames.items():\n    print(val, '-', heart_data[key].unique());","de1629ae":"gender = {0: 'Female', 1: 'Male'};\nother = {0: 'No', 1: 'Yes'};\n\nheart_data['sex'] = heart_data['sex'].map(gender);\nfor key, val in colnames.items():\n    if not( key == 'sex' ):\n        heart_data[key] = heart_data[key].map(other);","a75e3186":"heart_data.head()","95e65543":"fig, axes = plt.subplots(3, 2, figsize=(24, 24));\nfig.tight_layout(h_pad=10);\n\nrow = 0;\ncol = 0;\n\nfor key, val in colnames.items():\n    if col >= 2:\n        row += 1;\n        col = 0;\n    sns.countplot(x='DEATH_EVENT', hue=key, data=heart_data, ax=axes[row, col]);\n    axes[row, col].set_title(val, fontdict=title_params, pad=title_padding);\n    axes[row, col].set_xlabel('DEATH EVENT', fontsize=label_size);\n    axes[row, col].set_ylabel('count', fontsize=label_size);\n    col += 1;\n\n# delete last plot\nfig.delaxes(axes[row, col]);","a04face6":"heart_data['age'].describe()","ff0a3850":"def agegroup(age):\n    if age <= 51:\n        return 0;\n    elif age > 51 and age <= 60:\n        return 1;\n    else:\n        return 2;\n\nheart_data['agegroup'] = heart_data['age'].map(agegroup);\n\nheart_data['agegroup'].head()","87f25cc9":"heart_data[['DEATH_EVENT', 'agegroup']].groupby('agegroup').mean().sort_values(by='DEATH_EVENT', ascending=False)","800735ce":"sns.countplot(x='DEATH_EVENT', hue='agegroup', data=heart_data);","c6ebe177":"heart_data[['DEATH_EVENT', 'sex']].groupby('sex').mean().sort_values(by='DEATH_EVENT', ascending=False)","6b80a053":"heart_data[['DEATH_EVENT', 'sex', 'smoking', 'agegroup']].groupby(['sex', 'smoking', 'agegroup']).mean()","926d177a":"heart_data['serum_creatinine'].describe()","cc40bf21":"def scp_level(csp):\n    if csp < 0.6:\n        return 0;\n    elif csp >= 0.6 and csp <= 1.3:\n        return 1;\n    else:\n        return 2;\n\nheart_data['scp_level'] = heart_data['serum_creatinine'].map(scp_level);","3ead6b75":"heart_data[['sex', 'scp_level', 'agegroup', 'DEATH_EVENT']].groupby(['sex', 'agegroup', 'scp_level']).mean()","8aefef4d":"heart_data.columns","365aa618":"def csp_normalizer(csp):\n    return (( csp \/ 60 ) + ( csp \/ 400 )) \/ 2;\n\nheart_data['csp_normalized'] = heart_data['creatinine_phosphokinase'].map(csp_normalizer);\n\nheart_data[['creatinine_phosphokinase', 'csp_normalized']].head()","daabe809":"heart_data['csp_normalized'].describe()","23a8de0c":"def csp_level(csp):\n    if csp < 0.3:\n        return 0;\n    elif csp >= 0.3 and csp <= 1.73:\n        return 1;\n    else:\n        return 2;\n\nheart_data['csp_level'] = heart_data['csp_normalized'].map(csp_group);\n\nheart_data['csp_level'].head()","0069b1a9":"heart_data[['sex', 'csp_level', 'agegroup', 'DEATH_EVENT']].groupby(['sex', 'agegroup', 'csp_level']).mean()","b0eef96e":"heart_data['ef_normalized'] = heart_data['ejection_fraction'] \/ 100;\n\nheart_data[['ejection_fraction', 'ef_normalized']].head()","5bf8ab58":"def ef_level(ef):\n    if ef <= 0.3:\n        return 0;\n    elif ef > 0.3 and ef < 0.5:\n        return 1;\n    else:\n        return 2;\n\nheart_data['ef_level'] = heart_data['ef_normalized'].map(ef_level);\n\nheart_data['ef_level'].head()","546cee91":"heart_data[['DEATH_EVENT', 'sex', 'ef_level']].groupby(['sex', 'ef_level']).mean()","0b594063":"def platelets_normalizer(platelets, mean, std):\n    return (platelets - mean) \/ std;\n\nplatelets_mean = heart_data['platelets'].mean()\nplatelets_std = heart_data['platelets'].std();\nheart_data['platelets_normalized'] = heart_data['platelets'].map(lambda x: platelets_normalizer(x, platelets_mean, platelets_std));\n\nheart_data[['platelets', 'platelets_normalized']].head()","7553e0b5":"heart_data['platelets_normalized'].describe()","2beb0262":"def platelets_level(platelets):\n    if platelets < 200_000:\n        return 0;\n    elif platelets >= 200_000 and platelets <= 500_000:\n        return 1;\n    else:\n        return 2;\n\nheart_data['platelets_level'] = heart_data['platelets'].map(platelets_level);\nheart_data['platelets_level'].head()","0c617751":"heart_data[['sex', 'platelets_level', 'DEATH_EVENT']].groupby(['sex', 'platelets_level']).mean()","36d4168f":"# na: sodium symbol\ndef serum_na_normalizer(na, mean, std):\n    return (na - mean) \/ std;\n\nserum_na_mean = heart_data['serum_sodium'].mean();\nserum_na_std = heart_data['serum_sodium'].std();\n\nheart_data['serum_na_normalized'] = heart_data['serum_sodium'].map(lambda x: serum_na_normalizer(x, serum_na_mean, serum_na_std));\n\nheart_data[['serum_sodium', 'serum_na_normalized']].head()","ebfb3991":"def serum_na_level(na):\n    if na < 115:\n        return 0;\n    elif na >= 115 and na <= 500:\n        return 1;\n    else:\n        return 2;\n\nheart_data['serum_na_level'] = heart_data['serum_sodium'].map(serum_na_level);\nheart_data[['serum_sodium', 'serum_na_level']].head()","5c31ffcc":"heart_data['serum_na_level'].value_counts() \/ heart_data.shape[0] * 100","8a8dcc63":"heart_data[['sex', 'serum_na_level', 'DEATH_EVENT']].groupby(['sex', 'serum_na_level']).mean()","cce79c95":"categorical_columns = heart_data.select_dtypes('object').columns;\nprint(categorical_columns);","a5b7bb75":"gender = {\n    'Male': 1,\n    'Female': 0\n};\n\nother = {\n    'Yes': 1,\n    'No': 0\n};\n\nfor idx, cc in enumerate(categorical_columns):\n    if cc == 'sex':\n        heart_data[cc] = heart_data[cc].map(gender);\n    else:\n        heart_data[cc] = heart_data[cc].map(other);\n\nheart_data.head()","af07bf6f":"heart_data.columns","665e6613":"list(colnames_continuous.keys())","cd9c694f":"cols_to_drop = list(colnames_continuous.keys()) + ['creatinine_phosphokinase', 'csp_normalized', 'ef_normalized', 'platelets_normalized', 'serum_na_normalized'];","ec892265":"X = heart_data.drop(cols_to_drop + ['DEATH_EVENT'], axis=1).values;\ny = heart_data['DEATH_EVENT'].values;","84f60df5":"X.shape","1b7e78da":"y.shape","ace76d8a":"from sklearn.ensemble import RandomForestClassifier;","9f8fcf0a":"clf = RandomForestClassifier();\n\nclf.fit(X, y);\nclf.score(X, y)","1aaa566e":"### group by plateletes level and check for heart failure","ebaecce3":"## Observations\n- All remaining variables are binary","65a712bc":"# Normalize blood platelets\n- (x - mean) \/ std","1da6d585":"# Normalize the non binary variables\n- divide percentage values by 100\n- convert non percentage values to percentage and divide by 100","c3b013ac":"## Observations\n- clearly, high levels of serum creatinine contribute to heart disease","f8bd79e7":"### Assign agegroups","23e81b00":"# Normalize creatinine phospokinase\n- find amount produced by each person relative to the average reference range\n- Reference range: [60, 400] IU\/L\n- for instance, if a male produced 75 umol then \n- 75 \/ 230\n- between [0.3, 1.73]\n\n[Source: https:\/\/en.wikipedia.org\/wiki\/Creatine_kinase](https:\/\/en.wikipedia.org\/wiki\/Creatine_kinase)","ee8c9241":"## Observations\n- some correlation between csp levels and death\n- less deaths if csp levels are average in most persons","94f4c61a":"# Remaining columns analysis","5769092d":"### check deaths by agegroup","e056686d":"# RandomForestClassifier model for predicting heart failure","6c438fca":"All columns are numeric","a264475e":"## Observations\n- Most people aged above 60 died of heart attack","796aa242":"# Check distribution\n- age\n- platelets\n- serum_creatinine\n- time","3cf0369e":"# Ejection Fraction\n- Percentage of blood cells leaving heart\n- Normal rate for an adult: >=50%\n- low: [30, 49]%\n- very low: < 30%","6d3d42b0":"# Normalize Serum Sodium\n- (x - mean) \/ std","b3b3c5ee":"## Observations\n- most heart failure caused by extremely low ejection fractions","86e2f55c":"### check if serum na level causes heart failure","41ebf2c7":"#### Creatinine Phosphokinase\nThe reference interval is 0.6\u20131.3 mg\/dL (53\u2013115 \u03bcmol\/L). Measuring serum creatinine is a simple test, and it is the most commonly used indicator of renal function \n\nMales produce approximately 150 \u03bcmol to 200 \u03bcmol of creatinine per kilogram of body weight per 24 h while females produce approximately 100 \u03bcmol\/kg\/24 h to 150 \u03bcmol\/kg\/24 h. In normal circumstances, all this daily creatinine production is excreted in the urine.\n\n[Source: https:\/\/en.wikipedia.org\/wiki\/Creatinine](https:\/\/en.wikipedia.org\/wiki\/Creatinine)","8dc83fb3":"# Serum Sodium\n- Level of serum sodium in the blood mEq\/L\n- The minimum physiological requirement for sodium is between 115 and 500 milligrams per day depending on sweating due to physical activity, and whether the person is adapted to the climate.\n- Normal levels [115, 500]\n\n[Source: https:\/\/en.wikipedia.org\/wiki\/Sodium_in_biology](https:\/\/en.wikipedia.org\/wiki\/Sodium_in_biology)","d069735b":"### group csp into low, medium, and high levels\n- okay levels [0.6, 1.3] for both men and women\n- below and above that is abnormal","e9328183":"## Observations\n- Age is somewhat right skewed\n- Platelets seem to be symettrical with a few outliers\n- Serum Creatinine is right skewed\n- Age has no particular distribution\n- Ejection Fraction imabalanced\n- Serum Sodium left skewed","c8e8d313":"### group by sex, scp levels, age groups and check relation to death","aaac09a8":"### Analyze and group serum_creatinine","36d90123":"## Observations\n- almost all females aged between 40-60 that smoked died of heart disease\n- all males aged less than 51 and most males aged between 51-60 that smoked died of heart disease\n- smoking causes heart disease","95b28bc6":"# convert categorical variables to integers","9b1b05a5":"# Check deaths in relation to the binary variables\n- X axis describes if the person died of heart disease\n- the legend says if the person died of heart disease had \n- some underlying disease, eg. anaemia or habit, eg. smoking","bdf61a36":"# Normalize Ejection Fraction\n- divide by 100%","a1c6a6f4":"## Observations\n- average plateletes levels implies less chances of heart failure","1c071659":"# Number of platelets in blood per liter\n- The number of platelets varies across individuals. The normal physiologic range is 200,000 to 500,000 per microliter of blood. Since they contain receptors for thrombopoietin (the protein that facilitates the maturation of megakaryocytes and release of platelets), a higher number of platelets binds more of the protein. Consequently, there is stimulation for more production of thrombopoietin in the liver and kidneys. This is the basis for the production of more thrombopoietin and, as a result, more platelets in the bloodstream during the blood clotting process.\n\n[Source: https:\/\/en.wikipedia.org\/wiki\/Platelet](https:\/\/en.wikipedia.org\/wiki\/Platelet)","8f64dec0":"### Observations\n- Almost everyone has a normal serum sodium level\n- Almost 32% of deaths in both males and females caused by serum levels","b828e2b0":"### check heart failure by ef level","5a3e40e6":"## Observations\n- most persons are around the age of 60\n- the mean and median have the same value\n- possible to group persons by age [51 <= 60 <= 100","b39765ba":"# Age analysis","aa44460a":"### group by sex, csp levels, age groups and check relation to death","23d41655":"### group serum sodium into low, average, and high","e57d0c74":"# Group different columns and look for information\n- group by gender and check death rate","a0ecb2ee":"## Observations\n- around the same percenage of males and females died of heart attacks\n- try grouping with males and females that smoked"}}