{"cell_type":{"c9dbd25d":"code","72ca5232":"code","66c861d2":"code","fcc3b4de":"code","cc5a6fe1":"code","6099dd6b":"code","d8cf627f":"code","80548901":"code","d45ea92a":"code","8e196f77":"code","eca0cfed":"code","16bf0559":"code","e9c23958":"code","4c0fdd2c":"code","544a61a2":"code","5b21cc25":"code","fb004aa3":"code","1dd5f115":"code","c5787c53":"code","65e4e63c":"code","bf6eadb2":"code","98fabb51":"code","195dac64":"code","c69b5943":"code","d6fc09fd":"code","6cb4ce5e":"code","64819b6b":"code","34260f40":"code","4a78ebed":"code","11e6f3a5":"code","2756276b":"code","c08d5a33":"code","a90e33b5":"code","f5cf22b9":"code","a1bfd1da":"code","b8f0ad9e":"code","4dd891c2":"code","aefb039f":"code","776eedd4":"code","364fe1f8":"code","0ef25fd6":"code","8f3ce78c":"markdown","1f4d5a97":"markdown","9c1e90d5":"markdown","7c1483b9":"markdown","9a7612c1":"markdown","e8c46c35":"markdown","fd474948":"markdown","0460ff82":"markdown","dd49d203":"markdown","86c35c70":"markdown"},"source":{"c9dbd25d":"!pip install pycaret","72ca5232":"import pandas as pd\nimport numpy as np","66c861d2":"train = pd.read_csv('..\/input\/kakr-4th-competition\/train.csv')\ntest = pd.read_csv('..\/input\/kakr-4th-competition\/test.csv')","fcc3b4de":"train","cc5a6fe1":"train.income = (train['income']==('>50K')).astype('int')","6099dd6b":"total = pd.concat([train, test])","d8cf627f":"total","80548901":"total = total.drop(labels=['id', 'fnlwgt', 'education'], axis=1)","d45ea92a":"age_labels = [i for i in range(19)]\nage_bands = [i for i in range(15, 72, 3)] + [90]\ntotal['age_band']= pd.cut(total['age'], bins=age_bands, labels=age_labels)","8e196f77":"total = total.drop('age', axis=1)","eca0cfed":"total.loc[total['workclass'].isin(['Never-worked', 'Without-pay']), 'workclass'] = 'others'","16bf0559":"total","e9c23958":"total['workclass'].unique()","4c0fdd2c":"edu_bands = [0, 1, 5, 8, 10, 12, 13, 14, 16]\nedu_labels = [i for i in range(len(edu_bands)-1)]\ntotal['edu_band']= pd.cut(total['education_num'], bins=edu_bands, labels=edu_labels)","544a61a2":"total=total.drop('education_num', axis=1)","5b21cc25":"total[\"log_capital_gain\"] = total.capital_gain.map(lambda x: np.log(x, where=(x!=0)))","fb004aa3":"total[\"log_capital_loss\"] = total.capital_loss.map(lambda x: np.log(x, where=(x!=0)))","1dd5f115":"total = total.drop(['capital_gain', 'capital_loss'], axis=1)","c5787c53":"workhours_bands = [i for i in range(0, 65, 5)] + [80, 100]\nworkhours_labels = [i for i in range(len(workhours_bands) -1)]\ntotal['workhours_band']= pd.cut(total['hours_per_week'], bins=workhours_bands, labels=workhours_labels)","65e4e63c":"total = total.drop(['hours_per_week'], axis=1)","bf6eadb2":"total.loc[total['relationship'].isin(['Husband', 'Wife']), 'relationship'] = 'Normal'\ntotal.loc[total['relationship'].isin(['Own-child', 'Not-in-family', 'Unmarried', 'Other-relative']), 'relationship'] = 'Abnormal'","98fabb51":"total.loc[total['marital_status'].isin(['Married-AF-spouse', 'Married-civ-spouse']), 'marital_status'] = 'Married_OK'\ntotal.loc[total['marital_status'].isin(['Married-spouse-absent', 'Divorced', 'Never-married', 'Separated', 'Widowed']), 'marital_status']= 'Married_Fail'","195dac64":"total.loc[total['occupation'].isin(['Armed-Forces', 'Priv-house-serv']), 'occupation'] = 'Priv-house-serv'","c69b5943":"total.loc[total['race'].isin(['Amer-Indian-Eskimo', 'Other']), 'race'] = 'Other'","d6fc09fd":"income_01 = ['Outlying-US(Guam-USVI-etc)',\n 'Honduras',\n 'Columbia',\n 'Dominican-Republic',\n 'Mexico',\n 'Guatemala',\n 'Portugal',\n 'Trinadad&Tobago',\n 'Nicaragua',\n 'Peru',\n 'Vietnam',\n 'El-Salvador',]\n\nincome_02 = ['Jamaica',\n 'Haiti',\n 'Puerto-Rico',\n 'Laos',\n 'Thailand',\n 'Ecuador',\n 'Poland',\n 'South',\n 'Ireland',\n 'China',]\n\nincome_03 = ['?']\n\nincome_04 = [\n    'United-States',\n]\nincome_05 = [\n 'Greece',\n 'Scotland',\n 'Cuba',\n 'Hungary',\n 'Hong',\n]\nincome_06 = [\n 'Philippines',\n 'Canada',\n 'England',\n 'Germany',\n 'Italy'\n]\nincome_07 = [\n 'India',\n 'Japan',\n 'France',\n 'Yugoslavia',\n 'Cambodia',\n 'Taiwan',\n 'Iran'\n]","6cb4ce5e":"def convert_country(x):\n    if x in income_01:\n        return 'income_01'\n    elif x in income_02:\n        return 'income_02'\n    elif x in income_03:\n        return 'income_03'\n    elif x in income_04:\n        return 'income_04'\n    elif x in income_05:\n        return 'income_05'\n    elif x in income_06:\n        return 'income_06'\n    elif x in income_07:\n        return 'income_07'","64819b6b":"total['country_bin'] = total['native_country'].apply(convert_country)","34260f40":"total = total.drop(['native_country'], axis = 1)","4a78ebed":"total.columns","11e6f3a5":"features = ['workclass', 'marital_status', 'occupation', 'relationship', 'race',\n       'sex', 'age_band', 'edu_band', 'log_capital_gain',\n       'log_capital_loss', 'workhours_band', 'country_bin']\nlabel = ['income']","2756276b":"from pycaret.classification import *","c08d5a33":"total_carret = total[features + label]","a90e33b5":"total_carret.head()","f5cf22b9":"total_carret['age_band'] = total_carret['age_band'].astype('float')\ntotal_carret['edu_band'] = total_carret['edu_band'].astype('float')\ntotal_carret['workhours_band'] = total_carret['workhours_band'].astype('float')\ntotal_carret['log_capital_gain'] = total_carret['log_capital_gain'].astype('float')\ntotal_carret['log_capital_loss'] = total_carret['log_capital_loss'].astype('float')","a1bfd1da":"train_clean = total_carret[:len(train)]\ntest_clean = total_carret[len(train):]","b8f0ad9e":"train_clean['income'] = train_clean['income'].astype('int')","4dd891c2":"train_clean.head()","aefb039f":"final_model = load_model('..\/input\/model-load\/final201209')\nprediction = predict_model(final_model,test_clean)","776eedd4":"prediction['id'] = np.arange(len(prediction))\nprediction['prediction'] = prediction['Label']","364fe1f8":"prediction = prediction[['id','prediction']]","0ef25fd6":"prediction.to_csv('submission.csv',index=False)","8f3ce78c":"# 10. Native Country","1f4d5a97":"# Features to Model","9c1e90d5":"# 8. Occupations","7c1483b9":"# Captial Gain & Loss","9a7612c1":"# 7. Marital Status & Relationship","e8c46c35":"# Hours Per Week","fd474948":"# Workclass","0460ff82":"# Education Num","dd49d203":"# Age","86c35c70":"# 9. Race"}}