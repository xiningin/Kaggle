{"cell_type":{"4a69af84":"code","891c379e":"code","45ed8592":"code","48b1acc5":"code","54bb37bb":"code","cc0eaa1a":"code","2476ad62":"code","43a27dd7":"code","10d66375":"code","0e8b041c":"code","81cb813e":"code","2fdbd102":"code","46bbe552":"code","1bd9543c":"code","db3b7809":"code","6e46ad56":"code","d8eb8656":"code","751ec578":"code","30d2d7b7":"code","303955f0":"code","9c9a5341":"code","c4f7a590":"code","fdef566c":"code","1c02071a":"code","a8558e44":"code","ce4689cf":"code","7991fba4":"code","8c921d39":"code","cff5764f":"code","ebc54c18":"code","9d6d02a1":"code","25cd4718":"code","ced2eea7":"code","b3565db7":"markdown","0cccf6ea":"markdown","c3fd0a5a":"markdown","dce98dca":"markdown","64c32e8c":"markdown","93a2ea6a":"markdown","097cd3bf":"markdown","04f773c7":"markdown","0f9537d6":"markdown","1ce2a445":"markdown","a5976002":"markdown"},"source":{"4a69af84":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","891c379e":"df= pd.read_csv(\"\/kaggle\/input\/health-care-data-set-on-heart-attack-possibility\/heart.csv\")","45ed8592":"df.head()","48b1acc5":"df.isnull().sum()","54bb37bb":"df.describe()","cc0eaa1a":"def categorize_age(age):\n    if (age>60):\n        return 'S'\n    elif (age>45 and age<=60):\n        return 'MA'\n    elif (age>1 and age<=12):\n        return 'C'\n    elif (age>12 and age<=19):\n        return 'T'\n    elif (age>20 and age<=30):\n        return 'YA'\n    elif (age>=30 and age<=45):\n        return 'A'","2476ad62":"def categorize_sex(sex):\n    if (sex==0):\n        return \"F\"\n    else:\n        return \"M\"","43a27dd7":"df['age_category'] = df['age'].apply(lambda x: categorize_age(x))","10d66375":"df['gender'] = df['sex'].apply(lambda x:categorize_sex(x))","0e8b041c":"df.head()","81cb813e":"df['gender'].value_counts().plot(kind='bar').set_title(\"Total records of Male & Female\")","2fdbd102":"df['gender'].loc[df['target']==1].value_counts().plot(kind='bar').set_title(\"Gender has risk of heart disease\")","46bbe552":"df['gender'].loc[df['target']==0].value_counts().plot(kind='bar').set_title(\"Genders having no risk of heart disease\")","1bd9543c":"df.head()","db3b7809":"df['age_category'].loc[(df['target']==1) & (df['gender']=='M')].value_counts().plot(\n    kind='bar').set_title(\"Age categories having high risk - For Male\")","6e46ad56":"df['age_category'].loc[(df['target']==1) & (df['gender']=='F')].value_counts().plot(\n    kind='bar').set_title(\"Age categories having high risk - For Female\")","d8eb8656":"sns.scatterplot(x='thalach' , y='chol' , data=df , hue='target').set_title(\"Relationship between the cholestrol level and the highest heart rate recorded\")","751ec578":"sns.violinplot(x='cp',y='chol',data=df.loc[df['target']==1] , \n               hue='age_category').set_title(\"Plot for different kind of chest pain's with respect to the cholestrol level & age\")","30d2d7b7":"sns.violinplot(x='gender',y='thalach',data=df.loc[df['target']==1] , hue='age_category').set_title(\"Highest heart rate with respect to the Age Categories\")","303955f0":"sns.distplot(df['thalach'].loc[(df['target']==1) & (df['gender']=='M')],\n             color='r').set_title(\"Distribution for the highest heart rate recorded for Males\")","9c9a5341":"sns.distplot(df['thalach'].loc[(df['target']==1) & (df['gender']=='F')] \n             , color='y').set_title(\"Distribution for the highest heart rate recorded for Females\")","c4f7a590":"sns.countplot(x=\"age_category\" , data=df.loc[(df[\"gender\"]==\"M\") & \n                                             (df[\"exang\"]==1) &\n                                             (df[\"target\"]==1)]).set_title(\"Male category who are in high risk with Exercised induced Angina\")","fdef566c":"sns.countplot(x=\"age_category\" , data=df.loc[(df[\"gender\"]==\"F\") & \n                                             (df[\"exang\"]==1) &\n                                             (df[\"target\"]==1)]).set_title(\"Female category who are in high risk with Exercise induced Angina\")","1c02071a":"sns.distplot(df[\"thalach\"].loc[(df[\"target\"]==1)& (df[\"exang\"]==0) & (df[\"gender\"]==\"M\")]\n            ,color='r').set_title(\"Highest heart rate recorded for Male(Red) & Female(Yellow) (No Risk)\")\nsns.distplot(df[\"thalach\"].loc[(df[\"target\"]==1)& (df[\"exang\"]==0) & (df[\"gender\"]==\"F\")]\n            ,color='y')","a8558e44":"sns.distplot(df[\"thalach\"].loc[(df[\"target\"]==1)& (df[\"exang\"]==1) & (df[\"gender\"]==\"M\")]\n            ,color='r').set_title(\"Highest heart rate recorded for Male(red) & Female(yellow) (High Risk)\")\nsns.distplot(df[\"thalach\"].loc[(df[\"target\"]==1)& (df[\"exang\"]==1) & (df[\"gender\"]==\"F\")]\n            ,color='y')","ce4689cf":"sns.distplot(df[\"thalach\"].loc[(df[\"target\"]==0)& (df[\"exang\"]==1) & (df[\"gender\"]==\"M\")]\n            ,color=\"r\").set_title(\"Highest heart rate recorded for Male(Red) & Female(Yellow) who is Low risk but has Angina\")\nsns.distplot(df[\"thalach\"].loc[(df[\"target\"]==0)& (df[\"exang\"]==1) & (df[\"gender\"]==\"F\")]\n            ,color=\"y\")","7991fba4":"train = df.drop(['target','gender','age_category'],axis=1)","8c921d39":"target=df['target'].values","cff5764f":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import classification_report\n","ebc54c18":"x_train , x_test , y_train, y_test = train_test_split(train,target,test_size=0.1)","9d6d02a1":"print (f\"X Train : {x_train.shape} \\nY Train : {y_train.shape} \\nX Test : {x_test.shape} \\nY Test : {y_test.shape}\")","25cd4718":"classifiers = {\"randomforest\":RandomForestClassifier(),\n              \"xgboost\":XGBClassifier(),\n              \"catboost\":CatBoostClassifier(),\n              \"decisiontree\": DecisionTreeClassifier()\n              }","ced2eea7":"for model_name , model in classifiers.items():\n    print (f\"For : {model_name}\")\n    model.fit(x_train,y_train)\n    prediction = model.predict(x_test)\n    print (f\"Classification Report for : {model_name}\")\n    print (classification_report(y_test,prediction))","b3565db7":"<h2>Summary<\/h2>\n","0cccf6ea":"<h2>Data Preparation<\/h2>\nFor a medical dataset , it's always a good practice to categorize the age so that it gives us better insights and understanding. \n\nI will be categorizing the age based on seniority , middle age ,adult ,  young adult, child , teenager so we can understand the affected age groups\n\n* 'S' - Senior Citizen (Age 60 and above)\n* 'MA' - Middle Aged(45 - 60)\n* 'A' - Adult (30 - 45)\n* 'YA' - Young Adult (20-30)\n* 'T' - Teenager (12-19)\n* 'C' - Child(1-12)\n","c3fd0a5a":"We can see the majority of them are adults and middle aged. There could be many factors that reason's the person to have any sort of heart disease\n\n* Lifestyle of the person\n* Food choices\n* Smoking\n\nand many more.\n","dce98dca":"I will be using various boosting & bagging algorithms such as : \n\n* CatBoost\n* XGBClassifier\n* RandomForestClassifier\n* DecisionTreeClassifier\n\nThe accuracy of these model could be improved with some tuning and other techniques","64c32e8c":"<h3>Thank you! :) Critic's are welcome <\/h3>","93a2ea6a":"This kernel will be divided into 3 sections\n\n* Data preparation\n* Data exploration and visualization\n* Building the model","097cd3bf":"Now let the visualization do all the talking :) . Simple graphs but yet effective","04f773c7":"<h2>Building model<\/h2>","0f9537d6":"We can see that the middle age and adults have chest pain type of 1 and 2 , and the cholestrol level is also higher than average","1ce2a445":"XGBoost performed the best compared to the rest of the models ","a5976002":"<h2>Data Exploration<\/h2>"}}