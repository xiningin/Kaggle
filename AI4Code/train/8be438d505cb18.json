{"cell_type":{"78b41fc7":"code","7fbb033b":"code","4f37ff4a":"code","f3a73fc5":"code","823dfed6":"code","6112be9c":"code","9bf6a756":"code","5b621ace":"code","3e4b0782":"code","811629cc":"code","481932a9":"code","b6fa7c88":"code","9b6fbf67":"code","bd010e92":"code","228287dd":"code","45873a85":"code","28da57ba":"code","0a70f596":"code","3256ed16":"code","fa6a27f1":"code","535884bb":"code","7c3853d0":"code","818bd446":"code","e17a2299":"code","1042f8e8":"code","1fea03e0":"code","e5a1ecef":"code","cddf4a0f":"code","71951692":"code","32c15b89":"code","0e28c1e2":"code","ece7619f":"code","2137fcb0":"code","4eaeb4f0":"code","123661ca":"code","17ed6262":"code","3e06a087":"code","d52bbc2b":"code","64c8021a":"code","e6196490":"code","b19a0fce":"markdown","dc817ed0":"markdown","ff9bf6c0":"markdown","5088ce09":"markdown","a5634713":"markdown","0a6c5c0f":"markdown","533cf56c":"markdown","288dcc82":"markdown","8a3c57e0":"markdown","3b165246":"markdown","1bbd3532":"markdown","fec2f89e":"markdown","f0c235c1":"markdown","167e01f9":"markdown","8b50ff1f":"markdown","41315b56":"markdown","cf0b4357":"markdown","edee1287":"markdown","30878e18":"markdown","4cbecc45":"markdown"},"source":{"78b41fc7":"import numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nimport seaborn as sns","7fbb033b":"Data=pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")\n\nData.rename(columns ={'residual sugar':'residual_sugar'},inplace=True)","4f37ff4a":"Data.head()","f3a73fc5":"Data.info()","823dfed6":"print(\"The Number Of Rows and Columns:\",Data.shape)\nprint(\"Data Size:\",Data.size)","6112be9c":"Data.isnull().sum()","9bf6a756":"Data.describe().T","5b621ace":"sns.countplot(Data['quality']);","3e4b0782":"sns.distplot(Data['quality']);","811629cc":"def plot_corr(Data, size=15):\n    corr = Data.corr()\n    fig, ax = plt.subplots(figsize=(size, size))\n    ax.matshow(corr)\n    plt.xticks(range(len(corr.columns)), corr.columns)\n    plt.yticks(range(len(corr.columns)), corr.columns)","481932a9":"plot_corr(Data)","b6fa7c88":"plt.figure(figsize= (3,3))\nsns.boxplot(x=Data['fixed acidity'],color='orange')\nplt.figure(figsize= (3,3))\nsns.boxplot(x=Data['pH'],color='orange')\nplt.figure(figsize= (3,3))\nsns.boxplot(x=Data['alcohol'],color='orange')\nplt.figure(figsize= (3,3))\nsns.boxplot(x=Data['sulphates'],color='orange')\nplt.figure(figsize= (3,3))\nsns.boxplot(x=Data['citric acid'],color='orange')","9b6fbf67":"Data.skew()","bd010e92":"def func(row):\n    if row[\"quality\"] > 6.5:\n        return(\"Good\")\n    else:\n        return(\"Bad\")\nData[\"quality_change\"]=Data.apply(func,axis=1)\nData.groupby('quality_change')['quality'].sum().plot.pie(autopct='%1.2f%%');","228287dd":"sns.scatterplot(x=Data['pH'],y=Data['alcohol'],hue=Data['quality_change']);","45873a85":"import scipy.stats as stats\n\nH0=\"Alcohol does have an impact on the quality of wine as the P_value is greater than 0.05 :\"\nHa=\"Alcohol does NOT have any significant impact on the quality of wine, as the P_value is less than 0.05 :\"\nGood_quality_Wine_OH=np.array(Data[Data.quality_change =='Good'].alcohol)\nBad_quality_wine_OH=np.array(Data[Data.quality_change =='Bad'].alcohol)\nt, p_value  = stats.ttest_ind(Good_quality_Wine_OH,Bad_quality_wine_OH,axis=0)\np_value\nif p_value < 0.5:\n    print(Ha,format(p_value))\nelse:\n    print(H0,format(p_value))","28da57ba":"Ho=\"Residual Sugars have a significant role in quality of alchohol\"\nHa=\"Residual Sugars do not have significance on the quality of alcohol\" \n\nGood_Quality_Wine_Sugar=np.array(Data[Data.quality_change=='Good'].residual_sugar)\nBad_Quality_Wine_Sugar=np.array(Data[Data.quality_change=='Bad'].residual_sugar)\n\nf_stat,p_value=stats.f_oneway(Good_Quality_Wine_Sugar,Bad_Quality_Wine_Sugar)\nif p_value < 0.05:\n    print(Ha,\"since P_value is less than 0.05 with a value {}:\".format(p_value))\nelse:\n    print(Ho,\"since p_value is greater than 0.05 with a value of:{}\".format(p_value))\n    \nsns.scatterplot(x=Data['alcohol'],y=Data['quality'],hue=Data['residual_sugar']);","0a70f596":"Data_For_Linear=Data.drop(['quality_change'],axis=1)\nData_For_Linear.head()","3256ed16":"X_Linear=Data_For_Linear.drop(['quality'],axis=1)\ny_Linear=Data_For_Linear['quality']","fa6a27f1":"X_Linear_train,X_Linear_test,y_Linear_train,y_Linear_test=train_test_split(X_Linear,y_Linear,test_size=0.3, random_state=1)","535884bb":"from sklearn.linear_model import LinearRegression\nqual_linear=LinearRegression()","7c3853d0":"qual_linear.fit(X_Linear_train,y_Linear_train)","818bd446":"#qual_linear.coef_=pd.DataFrame(qual_linear.coef_,X_Linear.columns,columns=['Coefficients'])\nqual_linear.coef_\nfor idx,col_name in enumerate(X_Linear_train.columns):\n    print(\"The coefficient for {} is {}\".format(col_name,qual_linear.coef_[idx]))","e17a2299":"qual_linear.intercept_","1042f8e8":"Linear_Pred=qual_linear.predict(X_Linear_test)","1fea03e0":"df = pd.DataFrame({\"Actual\": y_Linear_test, \"Predicted\": Linear_Pred})\nTop_25= df.head(25)","e5a1ecef":"Top_25.plot(kind='bar',figsize=(15,10))\nplt.grid(which='major', linestyle='-', linewidth='0.5', color='green')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='black')","cddf4a0f":"qual_linear.score(X_Linear_train,y_Linear_train)","71951692":"qual_linear.score(X_Linear_test,y_Linear_test)","32c15b89":"from sklearn import metrics\n\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_Linear_test,Linear_Pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_Linear_test,Linear_Pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_Linear_test, Linear_Pred)))","0e28c1e2":"Data_for_Logistic=Data.copy()\nData_for_Logistic.drop(['quality'],axis=1,inplace=True)\nData_for_Logistic.head()","ece7619f":"X=Data_for_Logistic.drop(['quality_change'],axis=1)\ny=Data_for_Logistic['quality_change']","2137fcb0":"X_Train,X_test,y_Train,y_test=train_test_split(X,y,test_size=0.3, random_state=1)","4eaeb4f0":"X_test.head()","123661ca":"LOG_REG=LogisticRegression(solver=\"liblinear\")\nLOG_REG.fit(X_Train,y_Train)\n","17ed6262":"for idx, col_name in enumerate(X_Train.columns):\n    print(\"The coefficient for {} is {}\".format(col_name, LOG_REG.coef_[0][idx]))","3e06a087":"LOG_REG.intercept_","d52bbc2b":"y_pred_log=LOG_REG.predict(X_test)\n\nfrom sklearn.metrics import accuracy_score\nprint(accuracy_score(y_pred_log, y_test)*100)","64c8021a":"from sklearn import metrics\ncm=metrics.confusion_matrix(y_test,y_pred_log,labels=[\"Good\", \"Bad\"])\ncm","e6196490":"from sklearn.metrics import classification_report,confusion_matrix,mean_squared_error\n\nprint(classification_report(y_test,y_pred_log))","b19a0fce":"Let's create the confusion matrix ","dc817ed0":"****As we can see , our Linear model has almost done the predictions but it is not that much accurate","ff9bf6c0":"BOX PLOTS to see the outliers","5088ce09":"> **Though we have a accuracy score of 88.54% , In a classification problem, it is better to see the other metrics such as recall, precision,f1 score and ROC to ensure our model is good.","a5634713":"# **From our confusion matrix what we infer :**\n* True  Positives: 15 (These are predicted numbers of good quality wine which were really good)\n* True Negatives: 410 (These are predicted numbers of bad quality wine which were really bad)\n* False Positives: 40 (These are predicted numbers of good quality wine which were really bad or the type 1 error)\n* False Negatives: 15 (These are predicted numbers of bad quality wine which were really good or the type 2 error)\n","0a6c5c0f":"# Lets see the significance of Alcohol in quality of the wine ","533cf56c":"Check for Null values","288dcc82":"Spliting Our data using train_test_spli","8a3c57e0":"Five POINT SUMMARY ","3b165246":"> ****Let's do a linear regression to see the dependency of quality with other variables, For this exercise our variable of interest would be quality and our independent variables would be other attributes other than quality.","1bbd3532":"Check attributes","fec2f89e":"View Data ","f0c235c1":"**Read & Load the file","167e01f9":"Let's see the range of quality","8b50ff1f":"**Now, Lets perform logistic regression on this same dataset, but our goal is to find out with all given parameters if a wine sample is Good or Bad. So, our variable of interest in this scenario is \"quality_chage\" which I added to the dataset based on the quality column from the original data. I am dropiing the quality column here as it may not be required for this model.****","41315b56":"> Adding a column to classify wine quality which can be later used for Logistic Regression","cf0b4357":"****Lets see the correlation between attributes","edee1287":"Planning to further add ROC curve score, Fpr,tpr and AUC etc. Please share your thoughts and valuble comments","30878e18":"****Import Necessary Libraries","4cbecc45":"**Lets calculate the accuracy score for our model**"}}