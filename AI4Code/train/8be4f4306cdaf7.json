{"cell_type":{"17ab46e7":"code","bed0c475":"code","40abb8ec":"code","3d35fb95":"code","3850395a":"code","83244d8c":"code","d91c2e0c":"code","da8e9c8b":"code","fa598b8b":"code","86c0d205":"code","5342d842":"code","b7a90f9d":"code","cf94d686":"code","1a0af1fb":"code","c24cb010":"code","a778fd13":"code","abb82e56":"code","3a564d08":"code","8bdbc3f4":"code","0286919b":"code","3ca51a6b":"code","db694ab2":"code","dfbca46e":"code","ee28731a":"code","82aaa799":"code","6f3c44b8":"code","48fcce32":"code","ae79cf01":"code","a7c109d0":"code","43b00f7a":"code","58c75a0d":"code","7c70609a":"code","85756d8c":"code","62793174":"code","2462bfb1":"code","04bc3255":"code","2c7801fa":"code","ff631751":"code","9339867e":"code","ac5371cd":"code","ed59b881":"code","06f31a55":"code","84b8deaf":"markdown","628c43e4":"markdown","530ec96c":"markdown","9cf9112a":"markdown","964d1fe4":"markdown","cf0abc64":"markdown","180c4b3b":"markdown","7fbb6a86":"markdown","c27ed62d":"markdown","7ab1e0d0":"markdown","c5719605":"markdown","1319b0a9":"markdown","32ecf4b6":"markdown","ef4e948f":"markdown","f9a68ddd":"markdown","fc6acc88":"markdown","688dc7eb":"markdown","7c2efcfb":"markdown","50cfc13e":"markdown","1c53aa58":"markdown","dc4f4cbf":"markdown","7f8eb098":"markdown","9573f6fc":"markdown","52b07e04":"markdown","d463179b":"markdown","d02dfada":"markdown","442f3ac9":"markdown","a56d9de5":"markdown","d7bac1de":"markdown","2ebf1eb7":"markdown","eb261f18":"markdown","09710812":"markdown","c349703a":"markdown"},"source":{"17ab46e7":"import numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport seaborn as sns","bed0c475":"nyc_airbnb = pd.read_csv('\/kaggle\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\n\nnyc_airbnb.head()","40abb8ec":"print(\"The number of records(examples): {}\".format(nyc_airbnb.shape[0]))\nprint(\"The number of columns(features): {}\".format(nyc_airbnb.shape[1]))","3d35fb95":"# checking type of every column in the dataset\nnyc_airbnb.dtypes","3850395a":"print(\"Null values in NYC Airbnb 2019 dataset:\")\n# checking total missing values in each column in the dataset\nnyc_airbnb.isnull().sum()","83244d8c":"# https:\/\/numpy.org\/doc\/1.18\/reference\/generated\/numpy.where.html\n# numpy.where: Return elements chosen from x or y depending on condition.\nnull_names = pd.DataFrame(np.where(nyc_airbnb['name'].isnull())).transpose()\nnull_host_names = pd.DataFrame(np.where(nyc_airbnb['host_name'].isnull())).transpose()\n\nconcat_null_names = pd.concat([null_names, null_host_names], axis=1, ignore_index=True)\nconcat_null_names.columns = ['Null rows in name column', 'Null rows in host_name column']\nconcat_null_names","d91c2e0c":"import missingno as msno\nmissing_value_columns = nyc_airbnb.columns[nyc_airbnb.isnull().any()].tolist()\nprint(\"Missing value columns: {}\".format(missing_value_columns))\nmsno.bar(nyc_airbnb[missing_value_columns], figsize=(15,8), color='#2A3A7E', \n         fontsize=15, labels=True)  # Can switch to a logarithmic scale by specifying log=True","da8e9c8b":"msno.matrix(nyc_airbnb[missing_value_columns], width_ratios=(10, 1),\n            figsize=(20, 8), color=(0, 0, 0), fontsize=12, sparkline=True, labels=True)","fa598b8b":"nyc_airbnb.drop(['last_review'], axis=1, inplace=True)","86c0d205":"nyc_airbnb.drop(['host_name'], axis=1, inplace=True)","5342d842":"nyc_airbnb.head(5)","b7a90f9d":"nyc_airbnb['name'].fillna(value=0, inplace=True)","cf94d686":"nyc_airbnb['reviews_per_month'].fillna(value=0, inplace=True)","1a0af1fb":"nyc_airbnb.isnull().sum()","c24cb010":"# check unique category values\n# find out which neighbourhood_group exist in dataset\nprint('Neighbourhood_group: {}'.format(nyc_airbnb['neighbourhood_group'].unique()))","a778fd13":"# check unique category values\n# find out which neighbourhood exist in dataset\nnyc_airbnb['neighbourhood'].unique()","abb82e56":"nyc_airbnb['neighbourhood'].nunique()","3a564d08":"nyc_airbnb['room_type'].unique()","8bdbc3f4":"nyc_airbnb.sort_values(by='number_of_reviews', ascending=False).head(5)","0286919b":"nyc_airbnb.sort_values(by='reviews_per_month', ascending=False).head(5)","3ca51a6b":"plt.figure(figsize=(15, 8))\nplt.title('Counts of airbnb in neighbourhood group', fontsize=15)\nsns.countplot(x='neighbourhood_group', data=nyc_airbnb, \n              order=nyc_airbnb['neighbourhood_group'].value_counts().index,\n              palette='BuGn_r')","db694ab2":"plt.figure(figsize=(15, 8))\nplt.title('Counts of airbnb in neighbourhood group with room type', fontsize=15)\nsns.countplot(x='neighbourhood_group', data=nyc_airbnb, hue='room_type',\n              palette=\"Set2\")","dfbca46e":"top_neigh = nyc_airbnb['neighbourhood'].value_counts().reset_index().head(10)  # Top 10\ntop_neigh = top_neigh['index'].tolist()  # get top 10 neighbourhood names\n\nplt.figure(figsize=(15, 8))\nplt.title('Top neighbourhoods with room type', fontsize=15)\nviz = sns.countplot(x='neighbourhood', data=nyc_airbnb.loc[nyc_airbnb['neighbourhood'].isin(top_neigh)],\n              hue='room_type', palette='GnBu_d')\nviz.set_xticklabels(viz.get_xticklabels(), rotation=45)","ee28731a":"# check wholde dataset price stats\nnyc_airbnb['price'].describe()","82aaa799":"plt.figure(figsize=(15, 8))\nsns.distplot(nyc_airbnb['price'])","6f3c44b8":"nyc_airbnb['price'].quantile(.98)","48fcce32":"plt.figure(figsize=(15, 8))\nsns.distplot(nyc_airbnb[nyc_airbnb['price'] < 550]['price'])","ae79cf01":"plt.figure(figsize=(15, 8))\nplt.title('Density and distribution of prices for each neighbourhood group', fontsize=15)\nsns.violinplot(x='neighbourhood_group', y='price', \n               data=nyc_airbnb[nyc_airbnb['price'] < 550], palette='Set3')","a7c109d0":"# Brooklyn\nsub_1_brooklyn = nyc_airbnb.loc[nyc_airbnb['neighbourhood_group'] == 'Brooklyn']\nprice_sub_1 = sub_1_brooklyn[['price']]\n\n# Manhattan\nsub_2_manhattan = nyc_airbnb.loc[nyc_airbnb['neighbourhood_group'] == 'Manhattan']\nprice_sub_2 = sub_2_manhattan[['price']]\n\n# Queeens\nsub_3_queens = nyc_airbnb.loc[nyc_airbnb['neighbourhood_group'] == 'Queens']\nprice_sub_3 = sub_3_queens[['price']]\n\n# Staten Island\nsub_4_staten = nyc_airbnb.loc[nyc_airbnb['neighbourhood_group'] == 'Staten Island']\nprice_sub_4 = sub_4_staten[['price']]\n\n# Bronx\nsub_5_bronx = nyc_airbnb.loc[nyc_airbnb['neighbourhood_group'] == 'Bronx']\nprice_sub_5 = sub_5_bronx[['price']]\n\nprice_list_by_group = [price_sub_1, price_sub_2, price_sub_3, price_sub_4, price_sub_5]","43b00f7a":"integ_price_stats_list = []\nneigh_groups = nyc_airbnb['neighbourhood_group'].unique().tolist()\n\nfor price_group, group_name in zip(price_list_by_group, neigh_groups):\n  stats = price_group.describe()  # count \/ mean \/ std \/ 25% \/ 50% \/ 75% \/ max\n  stats = stats.iloc[1:]  # mean \/ std \/ 25% \/ 50% \/ 75% \/ max\n  stats.reset_index(inplace=True)\n  stats.rename(columns={'index': 'Stats', 'price': group_name}, inplace=True)\n  stats.set_index('Stats', inplace=True)\n  integ_price_stats_list.append(stats)\n\nprice_stats_df = pd.concat(integ_price_stats_list, axis=1)\nprice_stats_df","58c75a0d":"cmap = sns.cubehelix_palette(as_cmap=True)\n\nwo_extreme = nyc_airbnb[nyc_airbnb['price'] < 550]\n\nf, ax = plt.subplots()\nf.set_size_inches(20, 10)\npoints = ax.scatter(wo_extreme['latitude'], wo_extreme['longitude'], \n                    c=wo_extreme['price'], cmap=cmap)\nf.colorbar(points)","7c70609a":"plt.figure(figsize=(15, 8))\nsns.scatterplot(data=nyc_airbnb, x='longitude', y='latitude', \n                hue='neighbourhood_group', palette='Set3')","85756d8c":"from sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics","62793174":"nyc_airbnb.drop(['name', 'id'], inplace=True, axis=1)","2462bfb1":"# encodes categorical values\nle = LabelEncoder()\n\nle.fit(nyc_airbnb['neighbourhood_group'])\nnyc_airbnb['neighbourhood_group'] = le.transform(nyc_airbnb['neighbourhood_group'])\n\nle.fit(nyc_airbnb['neighbourhood'])\nnyc_airbnb['neighbourhood'] = le.transform(nyc_airbnb['neighbourhood'])\n\nle.fit(nyc_airbnb['room_type'])\nnyc_airbnb['room_type'] = le.transform(nyc_airbnb['room_type'])\n\nnyc_airbnb.head(5)","04bc3255":"# records with price zero are sorted on top\nnyc_airbnb.sort_values('price', ascending=True, inplace=True)","2c7801fa":"nyc_airbnb = nyc_airbnb[11:-6]","ff631751":"lm = LinearRegression()","9339867e":"X = nyc_airbnb.drop(['price', 'longitude'], inplace=False, axis=1)\ny = nyc_airbnb['price']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=101)\n\nlm.fit(X_train, y_train)","ac5371cd":"predictions = lm.predict(X_test)","ed59b881":"# Evaluated metrics\n\nmae = metrics.mean_absolute_error(y_test, predictions)\nmse = metrics.mean_squared_error(y_test, predictions)\nrmse = np.sqrt(metrics.mean_squared_error(y_test, predictions))\nr2 = metrics.r2_score(y_test, predictions)\n\nprint('MAE (Mean Absolute Error): %s' %mae)\nprint('MSE (Mean Squared Error): %s' %mse)\nprint('RMSE (Root mean squared error): %s' %rmse)\nprint('R2 score: %s' %r2)","06f31a55":"# Avtual vs predicted values\n\nerror = pd.DataFrame({'Actual Values': np.array(y_test).flatten(), 'Predicted Values': predictions.flatten()})\nerror.head(10)","84b8deaf":"Also, `host_name` column contains actual person names, which might be sensible data.","628c43e4":"### 3. Top neighbourhoods with  room type","530ec96c":"Integrates all individual stats into dataframe.","9cf9112a":"## Exploring data","964d1fe4":"## 1. Preparing Data","cf0abc64":"### Wrangling and cleaning data","180c4b3b":"## Predictions","7fbb6a86":"## Notes\n\nThese codes are originated from below kernels:\n\n* https:\/\/www.kaggle.com\/dgomonov\/data-exploration-on-nyc-airbnb\n* https:\/\/www.kaggle.com\/mpanfil\/nyc-airbnb-data-science-ml-project\n\nBased on these, original code will be added more and more.","c27ed62d":"**Checking dataset size**\n\nThe dataset has 48,895 records and 16 features","7ab1e0d0":"`neighbourhood` column has 221 categories.","c5719605":"Especially, there are many missing reviews (`last_review`, `reviews_per_month`).\n\nNumbers of missing values of them are same (10052), which needs to be inspected. There are possibility that missing values are in the same row.\n\nIn fact, we can see that review related column are not significant and not difficult to handle.\n\n* **last_review**: The date last review was uploaded. If there were no reivews for the, date will simply missing. This column seems to be insignificant thus could be dropped in data cleansing time.\n\n* **reviews_per_month**: This column means review rate for month. We can easily replace NaN values with 0.0. \n","1319b0a9":"**Dropping columns**","32ecf4b6":"The dataset has five `neighbourhood_gruop` categories, which are `Brooklyn`, `Manhattan`, `Queens`, `Staten Island`, `Bronx`.","ef4e948f":"### Load data","f9a68ddd":"**Inspecting name column null values**","fc6acc88":"After dropping two columns(`host_name`, `last_review`), dataset has still null values. Replacing all NaN values with zero seems to make sense.","688dc7eb":"The column `last_review` seems to be insignificant for exploration and prediction.","7c2efcfb":"### Host location distribution","50cfc13e":"### 1. Counts of airbnb in neighbourhood group\n","1c53aa58":"**Checking column dtype**\n\nThe columns which have numerical values are as follows:\n\n`latitude`, `longitude`, `price`, `minimum_nights`, `number_of_reviews`, `reviews_per_month`, `calculated_host_listings_count`, `availability_365`","dc4f4cbf":"There seems to be that most of airbnb in NYC are in `Manhattan` and `Brooklyn`","7f8eb098":"**Missing data visualization with `missingno`**\n\n- `msno.bar` is a simple visualization of nullity by column.\n\n- Bar chart shows total records and bar itself representsnon-missing values, thus we could see the how much the nullity of certain column by space.\n\n- Each bar has label which is non-missing values on top of the chart.","9573f6fc":"### Import packages","52b07e04":"### Observe data","d463179b":"Let's examine detail stats by neighbourhood group for better understanding.","d02dfada":"**Checking null values**\n\nThe folling columns have null values:\n\n`name`, `host_name`, `last_review`, `reviews_per_month`","442f3ac9":"### 4. Price distribution by negihbourhood group","a56d9de5":"### Top reviewed","d7bac1de":"## Visualization","2ebf1eb7":"### 2. Counts of airbnb in neighbourhood group with room type","eb261f18":"### Checking categorical values\n\nAs we see above, we could find out three categorical columns, which are `neighbourhood_group`, `neighbourhood` and `room_type`.\n\n`neighbourhood_group` and `neighbourhood` columns have informative area data.\n\nThe data could be utilized for analyzing data based on `neighbourhood`. Also, checking unique values in categorical values could help understanding of data.","09710812":"**Handling NaN values**","c349703a":"The `room_type` are `Private room`, `Entire home\/apt` and `Shared room`."}}