{"cell_type":{"0e96478f":"code","e05a6646":"code","1f942bb2":"code","a8a92b0c":"code","e780f561":"code","143b40e1":"code","b8bfc7be":"code","d659da3a":"code","5574238f":"code","8ec525bb":"code","4c2b08ef":"code","20a661e9":"code","3768c432":"code","bfcece09":"markdown","5ff21a71":"markdown","ff62b94f":"markdown","9b4b2bb1":"markdown","cf00615d":"markdown","d7e39f4b":"markdown","cfdf55f6":"markdown","152e72fd":"markdown","08f4d101":"markdown"},"source":{"0e96478f":"#Importing the required modules\nimport numpy as np \nimport pandas as pd \nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n","e05a6646":"df=pd.read_csv(\"..\/input\/googleplaystore.csv\")\nprint(df.columns)\nprint(\"=\"*80)\nprint(df.head())","1f942bb2":"print(df['Category'].unique())\nprint(\"=\"*80)\nprint(df['Type'].unique())\nprint(\"=\"*80)\nprint(df['Content Rating'].unique())\nprint(\"=\"*80)\nprint(df['Genres'].unique())","a8a92b0c":"df.drop('Genres',axis=1,inplace=True)\ndf = df.drop(df[ df['Category'] == '1.9' ].index, axis=0)","e780f561":"data=df.drop_duplicates(subset=['App'])\ndata.info()","143b40e1":"data['Rating'].fillna(0)\ndata['Content Rating'].fillna(method='ffill')\ndata['Current Ver'].fillna(1)\ndata['Android Ver'].fillna(method='bfill')\ndata['Type'].fillna('Free')\npass","b8bfc7be":"#print(df['Type'].unique())\ndata.info()","d659da3a":"sns.set_context({\"figure.figsize\": (20, 5)})\nc=sns.countplot(x=\"Category\",data=data, palette = \"Set3\",order=reversed(data['Category'].value_counts().index))\nc.set_xticklabels(c.get_xticklabels(), rotation=-65, ha=\"left\")\nc.set_yticklabels(c.get_yticklabels(), rotation=0, ha=\"right\") #just to check\nplt.title('Count of app in different category',size = 40)","5574238f":"data.groupby('Category').mean()['Rating'].plot(\"barh\",figsize=(10,13),title =\"Rating in difft Category\");","8ec525bb":"#print(data.groupby(\"Category\").mean().max())\n\nsdf=data.groupby(\"Category\").mean()\nsdf['Cat']=sdf.index\n\nprint(\"The category which got the Max rating :\",sdf['Rating'].idxmax())\nprint(\"The category which got the Min rating :\",sdf['Rating'].idxmin())\n\nsx=sdf.loc[sdf['Rating'].idxmax()]               #This will retunr entire row of the max value\nsi=sdf.loc[sdf['Rating'].idxmin()] \n\n#print(type(sx))                   #Series\n\nprint(\"Mean rating for\",sdf['Rating'].idxmax(),\"is : \",sx['Rating'])\nprint(\"Mean rating for\",sdf['Rating'].idxmin(),\"is :\",si['Rating'])\n\n\n#df[df['Rating'] == df['Rating'].max()]       #This one will list all rows that have max Rating","4c2b08ef":"sns.set_context({\"figure.figsize\": (20, 5)})\nc=sns.countplot(x=\"Content Rating\",hue='Type',data=data, palette = \"Set1\",order=reversed(data['Content Rating'].value_counts().index))\nc.set_xticklabels(c.get_xticklabels(), rotation=0, ha=\"right\")\nplt.title('Apps by there content ratings',size = 40)","20a661e9":"data['Installs']=data['Installs'].apply(lambda x : str(x).replace('+',''))\ndata['Installs']=data['Installs'].apply(lambda x : str(x).replace(',',''))\nprint(data['Installs'].unique())\n","3768c432":"data.groupby('Installs')['Rating'].mean().plot(\"barh\",figsize=(10,13),title =\"Rating vs Installs\");","bfcece09":"**From above it seems like there are some Null values also in the data**","5ff21a71":"**The apps which have moderate installs have less rating compared to the max and min installs. Observe the pattern \"C\"  in the grapch**","ff62b94f":"**Deleting duplicate values from 'App' column if any**","9b4b2bb1":"**Replacing ** '+'** and ** ',' ** from the Installs columns**","cf00615d":"**From above it seems the ratings of all the app are near about same only.**\n\n**Let see which category has got the max and min ratings**","d7e39f4b":" **DATING category have the least and  EVENTS have the max rating**","cfdf55f6":"**There is one numeric value in Category and also Genre column details seems same to Category**","152e72fd":"**Most of the apps belong to the Category of Family with games being the second.**\n1.  In the above plotting if you ommit 'reversed' than the plot will be in decresing order and omitting order will result in no sequence.\n2. You can also change the colour of the plot by changing the values of the palette Set (1 -3) with 1 being dark and 3 being light**\n3. https:\/\/seaborn.pydata.org\/generated\/seaborn.countplot.html","08f4d101":"**Most of the apps belongs to the categoy of 'Everyone' and are freely avilable **"}}