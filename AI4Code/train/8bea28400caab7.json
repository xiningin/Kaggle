{"cell_type":{"87d7c8e8":"code","947a4e95":"code","5e0e307b":"code","9b821bb3":"code","77dd0591":"code","c18e1c16":"code","5145ed14":"code","fdc36466":"code","7d730fc0":"code","f906f811":"code","36b7c49c":"code","379c3e8b":"code","e3ba6e90":"code","b9950056":"code","0665bdd6":"code","02852b27":"code","b48f145b":"code","cde6226b":"code","79ffb03f":"code","32e47a3a":"code","1e0c8266":"code","5fb903b8":"markdown","406d09eb":"markdown","eaba1309":"markdown","3d1ebbd8":"markdown","a91f75d2":"markdown","1a58da3d":"markdown","62645e2d":"markdown"},"source":{"87d7c8e8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","947a4e95":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","5e0e307b":"df = pd.read_csv('\/kaggle\/input\/youtube-new\/USvideos.csv')","9b821bb3":"df.head()","77dd0591":"df.describe()","c18e1c16":"df.isnull().sum()","5145ed14":"plt.figure(figsize=(10,9))\nsns.jointplot(x='dislikes',y='likes',data=df[['likes','dislikes']])","fdc36466":"df.groupby('channel_title').mean().head(5)","7d730fc0":"dados = df[['channel_title','views','likes','dislikes','comment_count']]","f906f811":"dados.groupby('channel_title').mean().head(5)","36b7c49c":"canais = dados.groupby('channel_title').mean().head(5)","379c3e8b":"data_obs = pd.DataFrame(canais)","e3ba6e90":"data_obs.reset_index(inplace=True)","b9950056":"data_obs","0665bdd6":"plt.figure(figsize=(10,6))\ndata_obs.plot(kind='bar')","02852b27":"correlacao = data_obs[['likes','dislikes','views','comment_count']].corr()","b48f145b":"correlacao","cde6226b":"sns.heatmap(correlacao,annot=True)","79ffb03f":"sns.distplot(data_obs['views'],bins=10)","32e47a3a":"sns.distplot(data_obs['comment_count'],bins=10)","1e0c8266":"sns.distplot(data_obs['likes'],bins=10)","5fb903b8":"# 1. **Introduction**\n\nHello everyone. in this dataframe we're going to analisys the data video statistics from Youtube.\n\nFrist, we're gonna start importing the libraries.\n","406d09eb":"* Well we get to the end of it. We realize the people those watch the videos don't necessarily press the like button.\nThe number of viewers is much more high than the likes and dislikes.","eaba1309":"* A correlation between likes, dislikes, views and coments.","3d1ebbd8":"* Below, we can see a relation between likes and dislikes.\n* The number of likes is much more than dislikes, lets see more.","a91f75d2":"* Lets visualize if there is some null data.\n\n* Well,there is a few ones...but for this analitys its not a relevant data. Lets continue.","1a58da3d":"* For now on, the basic idea is turn the top five channels into a Dataframe and work on it.","62645e2d":"* Here, I agroup a top five youtube more famous channels."}}