{"cell_type":{"57dd626d":"code","8ef0d4f3":"code","f305f9f8":"code","787739d8":"code","c7dc19fc":"code","1388b1e5":"code","c85db5ca":"code","521a7090":"code","446d3426":"code","9f40d3b4":"code","19fee987":"markdown"},"source":{"57dd626d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8ef0d4f3":"df_train = pd.read_csv('..\/input\/titanic\/train.csv')","f305f9f8":"sns.heatmap(df_train.isnull())","787739d8":"sns.set_style('whitegrid')\nsns.countplot(x = 'Survived' , data = df_train , hue = 'Pclass')","c7dc19fc":"sns.distplot(df_train['Age'].dropna() , kde = False)","1388b1e5":"df_train['Fare'].hist(bins = 20 , figsize = (10,4))","c85db5ca":"sns.boxplot(x = 'Pclass' , y = 'Age' , data = df_train)","521a7090":"def agecal(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        elif Pclass == 2 :\n            return 29\n        else:\n            return 24\n    else:\n        return Age","446d3426":"df_train['Age'] = df_train[['Age','Pclass']].apply(agecal,axis = 1)","9f40d3b4":"sns.heatmap(df_train.isnull())","19fee987":"**Visualizing Data**"}}