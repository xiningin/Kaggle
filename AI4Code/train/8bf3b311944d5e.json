{"cell_type":{"15eb2467":"code","7e383b74":"code","ffd66eb4":"code","5e7f9e39":"code","db449678":"code","b6c1567a":"code","d72003f9":"markdown","0f4278b4":"markdown","ecc52b81":"markdown","7cf4527e":"markdown","48744b60":"markdown","d23e681b":"markdown"},"source":{"15eb2467":"import numpy as np\nimport time\nimport os\nimport pandas as pd\n\nfrom tensorflow.keras.applications.resnet50 import decode_predictions, ResNet50\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator, load_img\n\n# from inaccel.keras.applications.resnet50 import decode_predictions, ResNet50\n# from inaccel.keras.preprocessing.image import ImageDataGenerator, load_img","7e383b74":"model = ResNet50(weights='imagenet')","ffd66eb4":"test_filenames = os.listdir(\"..\/input\/dog-breed-identification\/test\")\ntest_df = pd.DataFrame({\n    'filename': test_filenames\n})","5e7f9e39":"images = ImageDataGenerator().flow_from_dataframe(\n    test_df, \n    \"..\/input\/dog-breed-identification\/test\", \n    x_col='filename',\n    y_col=None,\n    class_mode=None,\n    target_size=(224, 224),\n    batch_size=64\n)","db449678":"begin = time.monotonic()\npredictions = model.predict(images, workers=16)\nend = time.monotonic()\n\nprint('Duration for', len(predictions), 'images: %.3f sec' % (end - begin))\nprint('FPS on GPU: %.3f' % (len(predictions) \/ (end - begin)))","b6c1567a":"from IPython.display import Image, display\n\nmost_likely_labels = decode_predictions(predictions, top=3)\n\nfor i, img_path in enumerate(test_filenames[0:3]):\n    display(Image('..\/input\/dog-breed-identification\/test\/' + img_path))\n    print(most_likely_labels[i])","d72003f9":"# Faster Classification with ResNet50\n\nAs deep learning workloads getting bigger, specialized hardware units were developed or adapted from existing products to **accelerate tasks like training and inference**.\n\nKaggle, tried to make users' life easier, providing free access to two types of accelerators(GPUs and TPUs) except the standard CPU. Another option that gets a lot of attention and research, but it isn't yet available here, is the [FPGAs](https:\/\/inaccel.com\/).\n\nThis notebook shows how to classify images using the native Keras or **InAccel's Keras-like framework** in order to increase performance. With this modified Keras API, we can take advantange of FPGA acceleration, while developing a Machine Learning Workflow the same way as before.\n\nSince, there are no FPGA resources here, you can execute the same accelerated example on [Inaccel Studio](https:\/\/labs.inaccel.com:8000\/), an open platform that lets **professionals**, **students** and **researchers** develop accelerated applications from their browsers, with **free access to FPGAs**.\n\nFor this experiment we used 10 thousand images of the dog-breed-verification\/test dataset and the pretrained on IMageNet ResNet50 Keras model.\nThe following runtime screenshots show the performance of the classification, measuring FPS(Frames\/Images per Second) on the three hardware units.\n\n![cpuFPS.png](attachment:cpuFPS.png)\n![gpuFPS.png](attachment:gpuFPS.png)\n![fpgaFPS.png](attachment:fpgaFPS.png)\n\nWe notice that the FPGA accelerated solution processes more than 2000 Images per Second and achieves **170x speedup compared to CPU-only and 6.5x compared to the Kaggle offered GPU(P100) execution**.","0f4278b4":"## Conclusion\n\nTo learn more about Accelerated Machine Learning, be sure to check out:\n\n* [Inaccel Cloud](https:\/\/labs.inaccel.com:8000\/)\n* [Github](https:\/\/github.com\/inaccel)\n* [Docs](https:\/\/docs.inaccel.com\/)\n* [Blog](https:\/\/inaccel.com\/blog\/)","ecc52b81":"Now, it's time to feed the model with the images and predict their class.\n\nWe also measure the performance as the number of Images processed Per Second.","7cf4527e":"Then we create an Image Generator for batch predictions","48744b60":"## Accuracy Check\n\nFinally, we load some random images and plot them to check that the predictions are accurate.","d23e681b":"Firstly, we import the necessary libraries and load the pretrained ResNet50 model.\n\nFor FPGA acceleration comment `tensorflow.keras` imports and comment out `inaccel.keras`."}}