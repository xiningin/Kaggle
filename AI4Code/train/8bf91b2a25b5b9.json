{"cell_type":{"675c739d":"code","4a551b86":"code","a8173c67":"code","b0a29c01":"code","cc8d32b1":"code","c88cb891":"code","3ffb2eb8":"code","86c9f1ea":"code","a78ae6f9":"code","1ff01e61":"code","6544619e":"code","f6d47814":"code","1bfe5c23":"code","18c51c21":"code","7dcb9101":"code","2e4666ad":"code","73af934c":"code","8f83689d":"code","d4623190":"code","5cb8d2d6":"code","2d747f63":"code","360542bd":"code","b25912e5":"code","2b4fdeff":"code","68e9b1ff":"code","07b94d2d":"code","79643f98":"code","b1457b2a":"code","f7ac9f5d":"code","b5609b92":"markdown","74caae36":"markdown","fd60567d":"markdown","c74a6568":"markdown","8324feb0":"markdown"},"source":{"675c739d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4a551b86":"import nltk\nimport re\nfrom nltk.corpus import stopwords","a8173c67":"nltk.download('stopwords')","b0a29c01":"import tensorflow as tf\n\nfrom tensorflow.keras.layers import Embedding\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.preprocessing.text import one_hot\nfrom tensorflow.keras.layers import LSTM\nfrom tensorflow.keras.layers import Dense","cc8d32b1":"df=pd.read_csv(\"..\/input\/fake-news\/train.csv\")","c88cb891":"df.head()","3ffb2eb8":"df = df.dropna()","86c9f1ea":"# Get the independent variable\nX = df.drop('label',axis=1)","a78ae6f9":"X.shape","1ff01e61":"# Get the dependent variable\ny = df['label']\ny.shape","6544619e":"# vocab size\nvoc_size = 5000","f6d47814":"messages = X.copy()","1bfe5c23":"messages['title'][1]","18c51c21":"messages.reset_index(inplace=True)","7dcb9101":"# Dataa preprocessing \n### Dataset Preprocessing\nfrom nltk.stem.porter import PorterStemmer\nps = PorterStemmer()\ncorpus = []\nfor i in range(0, len(messages)):\n#     print(i)\n    review = re.sub('[^a-zA-Z]', ' ', messages['title'][i])\n    review = review.lower()\n    review = review.split()\n    \n    review = [ps.stem(word) for word in review if not word in stopwords.words('english')]\n    review = ' '.join(review)\n    corpus.append(review)","2e4666ad":"# corpus","73af934c":"onehot_repr=[one_hot(words,voc_size)for words in corpus] \n# onehot_repr","8f83689d":"sent_length = 20\nembedded_docs=pad_sequences(onehot_repr,padding='pre',maxlen=sent_length)\nprint(embedded_docs)","d4623190":"embedded_docs[0]","5cb8d2d6":"## Creating model\nembedding_vector_features=40\nmodel=Sequential()\nmodel.add(Embedding(voc_size,embedding_vector_features,input_length=sent_length))\nmodel.add(LSTM(100))\nmodel.add(Dense(1,activation='sigmoid'))\nmodel.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])\nprint(model.summary())","2d747f63":"len(embedded_docs),y.shape","360542bd":"import numpy as np\nX_final=np.array(embedded_docs)\ny_final=np.array(y)","b25912e5":"X_final.shape,y_final.shape","2b4fdeff":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X_final, y_final, test_size=0.33, random_state=42)","68e9b1ff":"### Finally Training\nmodel.fit(X_train,y_train,validation_data=(X_test,y_test),epochs=10,batch_size=64)","07b94d2d":"\nfrom tensorflow.keras.layers import Dropout\n## Creating model\nembedding_vector_features=40\nmodel=Sequential()\nmodel.add(Embedding(voc_size,embedding_vector_features,input_length=sent_length))\nmodel.add(Dropout(0.3))\nmodel.add(LSTM(100))\nmodel.add(Dropout(0.3))\nmodel.add(Dense(1,activation='sigmoid'))\nmodel.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])","79643f98":"y_pred=model.predict_classes(X_test)","b1457b2a":"from sklearn.metrics import confusion_matrix\nconfusion_matrix(y_test,y_pred)","f7ac9f5d":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test,y_pred)","b5609b92":"# Model Training","74caae36":"# One hot Representation","fd60567d":"# Embedding Representation","c74a6568":"# Performance Metrics and Accuracy","8324feb0":"# Adding Dropout"}}