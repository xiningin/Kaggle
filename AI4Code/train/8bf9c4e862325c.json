{"cell_type":{"72968e68":"code","5f9a9c60":"code","aa2e236a":"code","8070d229":"code","968ee07e":"code","23d5dc09":"code","c1f1423d":"code","11702ce3":"code","ce52fe9d":"markdown","5b8c4c08":"markdown","ad899428":"markdown","414f6979":"markdown","5907a1e3":"markdown"},"source":{"72968e68":"Soil_Types = [\n'1 Cathedral family - Rock outcrop complex, extremely stony.',\n'2 Vanet - Ratake families complex, very stony.',\n'3 Haploborolis - Rock outcrop complex, rubbly.',\n'4 Ratake family - Rock outcrop complex, rubbly.',\n'5 Vanet family - Rock outcrop complex complex, rubbly.',\n'6 Vanet - Wetmore families - Rock outcrop complex, stony.',\n'7 Gothic family.',\n'8 Supervisor - Limber families complex.',\n'9 Troutville family, very stony.',\n'10 Bullwark - Catamount families - Rock outcrop complex, rubbly.',\n'11 Bullwark - Catamount families - Rock land complex, rubbly.',\n'12 Legault family - Rock land complex, stony.',\n'13 Catamount family - Rock land - Bullwark family complex, rubbly.',\n'14 Pachic Argiborolis - Aquolis complex.',\n'15 unspecified in the USFS Soil and ELU Survey.',\n'16 Cryaquolis - Cryoborolis complex.',\n'17 Gateview family - Cryaquolis complex.',\n'18 Rogert family, very stony.',\n'19 Typic Cryaquolis - Borohemists complex.',\n'20 Typic Cryaquepts - Typic Cryaquolls complex.',\n'21 Typic Cryaquolls - Leighcan family, till substratum complex.',\n'22 Leighcan family, till substratum, extremely bouldery.',\n'23 Leighcan family, till substratum - Typic Cryaquolls complex.',\n'24 Leighcan family, extremely stony.',\n'25 Leighcan family, warm, extremely stony.',\n'26 Granile - Catamount families complex, very stony.',\n'27 Leighcan family, warm - Rock outcrop complex, extremely stony.',\n'28 Leighcan family - Rock outcrop complex, extremely stony.',\n'29 Como - Legault families complex, extremely stony.',\n'30 Como family - Rock land - Legault family complex, extremely stony.',\n'31 Leighcan - Catamount families complex, extremely stony.',\n'32 Catamount family - Rock outcrop - Leighcan family complex, extremely stony.',\n'33 Leighcan - Catamount families - Rock outcrop complex, extremely stony.',\n'34 Cryorthents - Rock land complex, extremely stony.',\n'35 Cryumbrepts - Rock outcrop - Cryaquepts complex.',\n'36 Bross family - Rock land - Cryumbrepts complex, extremely stony.',\n'37 Rock outcrop - Cryumbrepts - Cryorthents complex, extremely stony.',\n'38 Leighcan - Moran families - Cryaquolls complex, extremely stony.',\n'39 Moran family - Cryorthents - Leighcan family complex, extremely stony.',\n'40 Moran family - Cryorthents - Rock land complex, extremely stony.'\n]","5f9a9c60":"import pandas as pd\n\ndata = pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/train.csv')\ndata = data.drop(3403875, axis = 0) #I dropped the row with the Target Value = 5\n\nX = data.iloc[:,1:-2] #data without the id and target columns\n\nSoil = [col for col in X.columns if 'Soil' in col] #Soil Type Columns\nNon_Soil = [col for col in X.columns if ('Soil' in col) == False] #Other Columns\n\nY = data['Cover_Type'] #Target Column\n\nWords_Phrases = ['Cry', 'Crya', 'Cryaquo','extremely stony', 'rubbly', 'very stony','Rock outcrop complex',\n          'Typic Cryaquolls', 'Leighcan family' ,'Leighcan', 'Cryaquolls','warm', 'Rock',\n          'Cryaquepts', 'stony', 'Moran', 'Como','Catamount', 'Vanet' ,'Typic', 'land',\n          'outcrop', 'complex', 'Granile', 'bouldery', 'Bullwark' , 'Legault', 'family']\n#Words\/Phrases that will be searched in the Soil Type description\n\nfor Information in Words_Phrases:\n    data[Information] = 0 #This will be the binary feature for each Word\/Phrase\n    \n    Type_Number = [] #This list will include all the Soil Type Numbers that contain the Word\/Phrase in its description.\n\n    \n    for i in range(0,40):\n        if Information in Soil_Types[i]: #If the information is found in each of the Soil Type's description,\n            Type_Number.append(i+1) #The Soil Type Number will be added to the list (+1 because of index values)\n    \n    for i in Type_Number:\n        data[Information] = data[Information] + data['Soil_Type' + str(i)] #This adds up all the Soil Type Presences for the Word\/Phrase.\n    \n    data[Information] = 1 * (data[Information] > 0)\n    #I think the Soil Types are supposed to be mutually exclusive, but it didn't happen in this generated dataset? This code basically makes all the overlapping cases to '1'.","aa2e236a":"from xgboost import XGBClassifier\n\nClassifier = XGBClassifier(learning_rate = 0.5, n_estimators = 20,  #XGB Classifier\n            tree_method = 'gpu_hist', predictor =  'gpu_predictor',\n              objective = 'multi:softmax', eval_metric = 'mlogloss')","8070d229":"from sklearn.model_selection import cross_val_score\n\nscores = []\ncolumns = []\n\n#(1) Just the Non-Soil Columns\nX_1 = data[Non_Soil]\nscore_1 = cross_val_score(Classifier, X_1, Y, cv = 2)\nscore_1 = round(sum(score_1)\/2,5)\nscores.append(score_1)\ncolumns.append('Just the Non-Soil')","968ee07e":"#(2) Non_Soil and Soil Columns (basically the given data)\nX_2 = data[Non_Soil + Soil]\nscore_2 = cross_val_score(Classifier, X_2, Y, cv = 2)\nscore_2 = round(sum(score_2)\/2,5)\nscores.append(score_2)\ncolumns.append('Non_Soil and Soil')","23d5dc09":"#(3) Non_Soil and Each of the 10 of the Information Columns\nWords_Phrases_10 = ['Leighcan','Rock','stony','Moran','Catamount','Bullwark','Cry','rubbly','family','complex']\n\nfor Information in Words_Phrases_10:\n    X_3 = data[Non_Soil + [Information]]\n    score_3 = cross_val_score(Classifier, X_3, Y, cv = 2)\n    score_3 = round(sum(score_3)\/2,5)\n    scores.append(score_3)\n    columns.append('Non_Soil + ' + Information)","c1f1423d":"#(4) Non_Soil Columns and 10 of the information columns\nX_4 = data[Non_Soil + Words_Phrases]\nscore_4 = cross_val_score(Classifier, X_4, Y, cv = 2)\nscore_4 = round(sum(score_4)\/2,5)\nscores.append(score_4)\ncolumns.append('Non_Soil and 10')","11702ce3":"pd.DataFrame({'Validation Scores':scores}, index = columns)","ce52fe9d":"##### In the [data page](https:\/\/www.kaggle.com\/c\/forest-cover-type-prediction\/data), we see the following description on **Soil Types**:","5b8c4c08":"We can see that the description of Soil Types contains information such as **'extremely stony', 'Leighcan, 'Rock'**,\nthat is contained in multiple columns.\n\nIn the following, **binary features** representing\nthe presence of at least one Soil Type that includes a\n**given word\/phrase** in its description are created.","ad899428":"I didn't run it in this notebook, but **Non_Soil + Soil + 10 information columns** gave me higher score than (1), (2), (3), or (4).","414f6979":"Now, we can check if each of the Information column increases the validation score.\n\nIn this notebook, I'll use XGBClassifier with learning rate = 0.5, n_estimators = 20, and CV-folds = 2.","5907a1e3":"In the following, Validation scores for each of the following will be computed:\n\n**(1) Just the Non_Soil Columns**\n\n**(2) Non_Soil and Soil Columns (basically the given data)**\n\n**(3) Non_Soil Columns and each of the 10 of the information columns**\n\n'Leighcan', 'Rock', 'stony', 'Moran', 'Catamount',\n'Bullwark', 'Cry', 'rubbly', 'family', 'complex'\n\nYou can try out other columns as well. In this notebook, I will use the above 10.\n\n**(4) Non_Soil Columns and 10 of the information columns**"}}