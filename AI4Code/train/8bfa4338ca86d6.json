{"cell_type":{"2a5fbc66":"code","59e22fd5":"code","253396a2":"code","9a66fca7":"code","e86e6064":"code","3d2fabf0":"code","2ee51210":"code","81fe0672":"code","fb274dc6":"code","2204b784":"code","39bd8cee":"code","6d4f1170":"code","6f9c9ddb":"code","3c71daaa":"code","2b3e99e2":"code","ea293262":"markdown","6f463831":"markdown","38d977d9":"markdown","5e718675":"markdown","730efb17":"markdown","5b4e22e5":"markdown","7a185fb3":"markdown","563a63a7":"markdown","c5b08e97":"markdown"},"source":{"2a5fbc66":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\n\n# set seed for reproducibility\nnp.random.seed(0) ","59e22fd5":"#import Computation Libraries\nimport pandas as pd\nimport numpy as np\n\nfrom scipy.stats import ttest_ind # just the t-test from scipy.stats\nfrom scipy.stats import probplot \n\n#import Visualization Libraries\nimport matplotlib.pyplot as plt\nimport pylab\nimport seaborn as sns","253396a2":"#read women shoe prices csv\nshoes = pd.read_csv(\"\/kaggle\/input\/womens-shoes-prices\/7210_1.csv\")","9a66fca7":"shoes.shape","e86e6064":"shoes.sample(5)","3d2fabf0":"shoes[\"midprices\"]=(shoes[\"prices.amountMax\"]+shoes[\"prices.amountMin\"])\/2","2ee51210":"# plot a qqplot to check normality. If the varaible is normally distributed, most of the points \n# should be along the center diagonal.\nprobplot(shoes[\"midprices\"], dist=\"norm\", plot=pylab)","81fe0672":"pink= shoes[shoes.colors ==\"Pink\"]\nnotpink=shoes[shoes.colors!=\"Pink\"]","fb274dc6":"ttest_ind(pink.midprices,notpink.midprices,equal_var=False)","2204b784":"plt.hist(shoes['midprices'], alpha=0.5, label='cold')","39bd8cee":"shoesreduced = shoes[shoes.midprices < 300]\n\nentries_removed = shoes.shape[0] - shoesreduced.shape[0]\n\nprint(\"Removed shoes that are under 300: %d \\n\" % entries_removed)\n","6d4f1170":"shoes = shoes[shoes.midprices < 300]","6f9c9ddb":"plt.hist(shoes['midprices'], alpha=0.5, label='cold')","3c71daaa":"# plot a qqplot to check normality. If the varaible is normally distributed, most of the points \n# should be along the center diagonal.\nprobplot(shoes[\"midprices\"], dist=\"norm\", plot=pylab)","2b3e99e2":"pink= shoes[shoes.colors ==\"Pink\"]\nnotpink=shoes[shoes.colors!=\"Pink\"]\n\nttest_ind(pink.midprices,notpink.midprices,equal_var=False)","ea293262":"introduce a new column for average prices for the min price and max price","6f463831":"let's see if there is a difference if we limit to the price of the shoes to under 500.","38d977d9":"The graph now is closer to the straight line - which is more closer to a normal distribution curve.","5e718675":"Let's try something else","730efb17":"Following on the tutorial from carrying out a t-test to estimate whether there is a signifcant difference between hot and cold cereal and the level of potassium [here](https:\/\/www.kaggle.com\/richieone13\/cereal-ttest-python\/edit).\n\nWe now experiment to test whether there is a signifcant in **pink shoes and normal shoes in terms of their price.**\n\nAs for any t-test, the null hypothesis we assume there is not any significant unless there is otherwise.","5b4e22e5":"Here states that there is a significant difference for pink shoes and non pink shoes as the p value is very small","7a185fb3":"There are are a few outliers especially for the higher spectrum of shoe prices as expected","563a63a7":"notice there are nulls but we are not interested in these columns for now so we ignored for the readability of this notebook","c5b08e97":"the p- value is still under 0.01 which shows there is significant that pink shoes are different price to other shoes"}}