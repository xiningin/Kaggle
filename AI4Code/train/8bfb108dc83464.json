{"cell_type":{"099892c2":"code","6c54f7b2":"code","680098fb":"code","aa8cad54":"code","42c85190":"markdown","0c126919":"markdown","549ec0e2":"markdown","7b84f9a8":"markdown","244fb6b3":"markdown"},"source":{"099892c2":"import numpy as np \nimport pandas as pd ","6c54f7b2":"sub = pd.read_csv('\/kaggle\/input\/tabular-playground-series-apr-2021\/sample_submission.csv')","680098fb":"sub1 = pd.read_csv('..\/input\/tpsaprensemble\/tps04-sub-003.csv') \nsub2 = pd.read_csv('..\/input\/lightautoml-interpretable-model-autowoe\/AutoWoE_submission_combo.csv') \nsub3 = pd.read_csv('..\/input\/tps-apr2021-catboost-run-pseudo-label\/submission_pseudo_test.csv') \nsub4 = pd.read_csv('..\/input\/tps-apr-2021-pseudo-labeling-voting-ensemble\/voting_submission.csv')","aa8cad54":"res = (2*sub1['Survived'] + sub2['Survived'] + sub3['Survived'] + 2*sub4['Survived'])\/6\nsub.Survived = np.where(res > 0.5, 1, 0).astype(int)\n\nsub.to_csv(\"submission.csv\", index = False)\nsub['Survived'].mean()","42c85190":"## Submit","0c126919":"## Load libraries","549ec0e2":"## Don't forget to upvote this and previous author's notebook","7b84f9a8":"## Read data","244fb6b3":"## Kudos to these notebooks\n\n1. https:\/\/www.kaggle.com\/remekkinas\/ensemble-learning-meta-classifier-for-stacking\n2. https:\/\/www.kaggle.com\/gomes555\/tps-apr2021-catboost-run-pseudo-label\n3. https:\/\/www.kaggle.com\/alexryzhkov\/lightautoml-interpretable-model-autowoe\n4. https:\/\/www.kaggle.com\/hiro5299834\/tps-apr-2021-pseudo-labeling-voting-ensemble"}}