{"cell_type":{"4769d4ce":"code","918e0e82":"code","05dd5813":"code","c6a0dc43":"code","67ea20cb":"code","1d224bd3":"code","2451ad8f":"code","9ad7b9bb":"code","fb9b9b5b":"code","1b44027b":"code","32d01b22":"code","63513bcc":"code","79cbdbfb":"code","80589cc5":"code","8da4a9fb":"code","e4251284":"code","ea8d3c2c":"code","065a39c1":"code","da82b862":"code","1108cb50":"code","55ac819e":"code","0443193e":"code","6fbeabb4":"code","1e8bb510":"code","9d90da08":"code","7548c652":"code","fa57f474":"code","cf6f4f99":"code","eb26b091":"code","c1677a7c":"code","bd1e9c87":"code","bd539cc2":"code","330318ac":"code","3a23bcb9":"code","85b8e2c6":"code","24ccc6f1":"markdown","bf730980":"markdown","3d344b62":"markdown","a32fe114":"markdown","d62b1f78":"markdown","2f782412":"markdown","cf8a3b84":"markdown","b1085f1a":"markdown","73006a42":"markdown","6ffb8ed2":"markdown","9176c423":"markdown","197f1bb6":"markdown","21f93da5":"markdown","c9a27506":"markdown","b50fbd1b":"markdown","db0be018":"markdown","e824ea79":"markdown","0f869e52":"markdown","80878ac2":"markdown","1c03c2c4":"markdown","135d7c99":"markdown","cd93eaa7":"markdown","a416d493":"markdown","8675eb1f":"markdown","80c8782b":"markdown","2b280890":"markdown"},"source":{"4769d4ce":"import pandas as pd\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns","918e0e82":"train_df = pd.read_csv('..\/input\/titanic\/train.csv');train_df","05dd5813":"train_df.info()","c6a0dc43":"train_df.isnull().sum()","67ea20cb":"#Age \uceec\ub7fc \ucc44\uc6b0\uae30\r\nage_mean = train_df['Age'].mean()\r\nprint('Age \uceec\ub7fc\uc758 \ud3c9\uade0\uac12 : ', np.round(age_mean, 1))\r\ntrain_df['Age'].fillna(age_mean, inplace=True)\r\n\r\n#Cabin \uceec\ub7fc drop\r\ntrain_df.drop('Cabin', axis = 1, inplace= True)\r\n\r\nprint('\uacb0\uce21\uce58 \uc81c\uac70 \ud6c4 \ud655\uc778 =>', train_df.isnull().sum())","1d224bd3":"#Embarked \uceec\ub7fc \ucd5c\ube48\uac12 \ud655\uc778\r\ntrain_df['Embarked'].value_counts()","2451ad8f":"train_df['Embarked'].fillna('S', inplace=True)\r\ntrain_df.isnull().sum()","9ad7b9bb":"#Survived \uceec\ub7fc\uc5d0\uc11c 0\uc740 \uc0ac\ub9dd, 1\uc740 \uc0dd\uc874\r\n\r\n#\uc0dd\uc874\ud55c \uc0ac\ub78c\ub4e4\ub9cc \ucd94\ucd9c\r\nsurvived_df = train_df[train_df['Survived'] == 1]\r\nprint(survived_df['Sex'].value_counts())\r\nfig, ax = plt.subplots(1, 1, figsize = (8, 6))\r\nsns.countplot(x = 'Sex', data = survived_df, edgecolor = 'black')","fb9b9b5b":"train_df['Age'].describe()","1b44027b":"survived_df['Age'].describe()","32d01b22":"unsurvived_df = train_df[train_df['Survived'] == 0]\r\nunsurvived_df['Age'].describe()","63513bcc":"survived_df_men = survived_df[survived_df['Sex'] == 'male']\r\nsurvived_df_men['Age'].describe()","79cbdbfb":"#Age \uac12 \uc885\ub958\uac00 \ub9ce\uae30 \ub54c\ubb38\uc5d0 \ubc94\uc704\ubcc4\ub85c \ubd84\ub958\ud574 \uce74\ud14c\uace0\ub9ac \uac12\uc744 \ud560\ub2f9\r\n# 0 ~ 5 : Baby, 6 ~ 12 : Child, 13 ~ 18 : Teenager, 19 ~ 25 : Student, 26 ~ 35 : Young Adult, 36 ~ 60 : Adult, 61 ~ : Elderly\r\n\r\n#\uc785\ub825 age\uc5d0 \ub530\ub77c \uad6c\ubd84 \uac12\uc744 \ubc18\ud658\ud558\ub294 \ud568\uc218 \uc124\uc815. DataFrame\uc758 apply lambda \uc2dd\uc5d0 \uc0ac\uc6a9.\r\ndef get_category(age):\r\n    cat = ''\r\n    if age <= -1: cat = 'Unknown'\r\n    elif age <= 5: cat = 'Baby'\r\n    elif age <= 12: cat = 'Child'\r\n    elif age <= 18: cat = 'Teenager'\r\n    elif age <= 25: cat = 'Student'\r\n    elif age <= 35: cat = 'Young Adult'\r\n    elif age <= 60: cat = 'Adult'\r\n    else : cat = 'Elderly'\r\n\r\n    return cat\r\n\r\n\r\n#\ub9c9\ub300\uadf8\ub798\ud504\uc758 \ud06c\uae30 figure\ub97c \ub354 \ud06c\uac8c \uc124\uc815\r\nplt.figure(figsize=(10, 6))\r\n\r\n#X\ucd95\uc758 \uac12\uc744 \uc21c\ucc28\uc801\uc73c\ub85c \ud45c\uc2dc\ud558\uae30 \uc704\ud55c \uc124\uc815\r\ngroup_names = ['Unknown', 'Baby', 'Child', 'Teenager', 'Student', 'Young Adult', 'Adult', 'Elderly']\r\n\r\n#lambda \uc2dd\uc5d0 \uc704\uc5d0\uc11c \uc0dd\uc131\ud55c get_category() \ud568\uc218\ub97c \ubc18\ud658\uac12\uc73c\ub85c \uc9c0\uc815.\r\n#get_category(X)\ub294 \uc785\ub825\uac12\uc73c\ub85c 'Age'\uce7c\ub7fc \uac12\uc744 \ubc1b\uc544\uc11c \ud574\ub2f9\ud558\ub294 cat \ubc18\ud658\r\ntrain_df['Age_cat'] = train_df['Age'].apply(lambda x : get_category(x))\r\nsns.barplot(x = 'Age_cat', y = 'Survived', hue = 'Sex', data = train_df, order=group_names)\r\ntrain_df.drop('Age_cat', axis= 1, inplace=True)","80589cc5":"#Pclass\uc5d0 \ub530\ub978 \uc0dd\uc874 \uc5ec\ubd80 \ucc28\uc774\r\n\r\n#Pclass -> 1 = 1\ub4f1\uae09 \uc120\uc2e4, 2 = 2\ub4f1\uae09 \uc120\uc2e4, 3 = 3\ub4f1\uae09 \uc120\uc2e4\r\nprint('Total Pclass count :\\n', train_df['Pclass'].value_counts())\r\nprint('\uc0dd\uc874\ud55c \uc0ac\ub78c\ub4e4\uc758 Pclass count :\\n', survived_df['Pclass'].value_counts())","8da4a9fb":"sns.countplot(x = 'Pclass', data = survived_df)","e4251284":"print('\ud615\uc81c\uc790\ub9e4, \ubc30\uc6b0\uc790 \uc218 count\\n', train_df['SibSp'].value_counts())\r\nprint('\ubd80\ubaa8, \uc790\uc2dd \uc218 count\\n', train_df['Parch'].value_counts())","ea8d3c2c":"fig, ax = plt.subplots(figsize = (18, 10), ncols=2)\r\nsns.countplot(x = 'SibSp', data = survived_df, palette='Set1', ax = ax[0])\r\nsns.countplot(x = 'Parch', data = survived_df, palette='Set2', ax = ax[1])","065a39c1":"survived_df['SibSp'].value_counts()\/train_df['SibSp'].value_counts()","da82b862":"survived_df['Parch'].value_counts()\/train_df['Parch'].value_counts()","1108cb50":"test_df = pd.read_csv('..\/input\/titanic\/test.csv');test_df","55ac819e":"test_df.info()","0443193e":"#Age \uceec\ub7fc \ucc44\uc6b0\uae30\r\nage_mean = test_df['Age'].mean()\r\nprint('Age \uceec\ub7fc\uc758 \ud3c9\uade0\uac12 : ', np.round(age_mean, 1))\r\ntest_df['Age'].fillna(age_mean, inplace=True)\r\n\r\n#Cabin \uceec\ub7fc drop\r\ntest_df.drop('Cabin', axis = 1, inplace= True)\r\n\r\n#Fare \uceec\ub7fc \ucc44\uc6b0\uae30\r\nfare_mean = test_df['Fare'].mean()\r\ntest_df['Fare'].fillna(fare_mean, inplace=True)\r\n\r\nprint('\uacb0\uce21\uce58 \uc81c\uac70 \ud6c4 \ud655\uc778 =>', test_df.isnull().sum())","6fbeabb4":"train_df.drop(['PassengerId', 'Name', 'Ticket'], axis = 1,inplace=True)\r\ntest_df.drop(['PassengerId', 'Name', 'Ticket'], axis = 1, inplace=True)","1e8bb510":"#\uc778\ucf54\ub529 \uc801\uc6a9 \ud568\uc218 \ub9cc\ub4e4\uae30\r\ndef get_dummies(column, train_df, test_df):\r\n    train_dummies = pd.get_dummies(train_df[column])\r\n    test_dummies = pd.get_dummies(test_df[column])\r\n\r\n    train_df.drop(column, axis = 1, inplace = True)\r\n    test_df.drop(column, axis = 1, inplace = True)\r\n\r\n    train_df = train_df.join(train_dummies)\r\n    test_df = test_df.join(test_dummies)\r\n\r\n    return train_df, test_df","9d90da08":"train_df, test_df = get_dummies('Sex', train_df, test_df)\r\ntrain_df, test_df = get_dummies('Embarked', train_df, test_df)","7548c652":"train_df.head()","fa57f474":"test_df.head()","cf6f4f99":"#\ud559\uc2b5, \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc14b \uc900\ube44\r\nX_train = train_df.drop('Survived', axis = 1)\r\ny_train = train_df['Survived']\r\nX_test = test_df","eb26b091":"X_test","c1677a7c":"#\ud544\uc694 \ubaa8\ub4c8 import\r\nfrom sklearn.tree import DecisionTreeClassifier\r\nfrom sklearn.linear_model import LogisticRegression\r\nfrom sklearn.neighbors import KNeighborsClassifier\r\nfrom sklearn.ensemble import RandomForestClassifier\r\nfrom sklearn.ensemble import GradientBoostingClassifier\r\nfrom sklearn.ensemble import VotingClassifier\r\nfrom xgboost import XGBClassifier","bd1e9c87":"rf_clf = RandomForestClassifier(n_estimators= 100)\r\nrf_clf.fit(X_train, y_train)\r\npred = rf_clf.predict(X_test)\r\nnp.round(rf_clf.score(X_train, y_train), 2)","bd539cc2":"#Boosting : GBM, XGBoost, LightGBM \uc801\uc6a9 \ud574\ubcf4\uae30\r\n\r\n#GBM \r\ngb_clf = GradientBoostingClassifier()\r\ngb_clf.fit(X_train, y_train)\r\npred = gb_clf.predict(X_test)\r\nnp.round(gb_clf.score(X_train, y_train), 2)","330318ac":"#XGBoost\r\nxgb_wrapper = XGBClassifier(n_estimators = 400, learning_rate = 0.1, max_depth = 3)\r\nxgb_wrapper.fit(X_train, y_train)\r\nnp.round(xgb_wrapper.score(X_train, y_train), 2)","3a23bcb9":"test_df = pd.read_csv('..\/input\/titanic\/test.csv')","85b8e2c6":"submission = pd.DataFrame({\r\n        \"PassengerId\": test_df[\"PassengerId\"],\r\n        \"Survived\": pred\r\n    })\r\nsubmission.to_csv('titanic.csv', index=False)","24ccc6f1":"* Baggingd\uc758 \ub300\ud45c\uc801\uc778 \uc54c\uace0\ub9ac\uc998 : \ub79c\ub364 \ud3ec\ub808\uc2a4\ud2b8(\ud2b8\ub9ac \uae30\ubc18)\r\n* \uacb0\uc815 \ud2b8\ub9ac\uc758 \uacfc\uc801\ud569 \ubb38\uc81c\ub97c \uc5b4\ub290\uc815\ub3c4 \ud574\uacb0\ud574\uc90c","bf730980":"##\uacb0\uce21\uce58 \ucc98\ub9ac \ubc29\ubc95##\r\n\uacb0\uce21\uce58\ub97c \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc740 \ud06c\uac8c 2\uac00\uc9c0\uac00 \uc788\ub2e4.\r\n* \ucc44\uc6b0\uae30 - \ud3c9\uade0\uac12, \uc911\uc559\uac12, \uc608\uce21 \uae30\ubc95 \ub4f1\ub4f1\r\n* \uc81c\uac70\ud558\uae30(drop() \uba54\uc11c\ub4dc)\r\n\r\n\uc774\ubc88 \ub370\uc774\ud130\uc5d0\uc11c\ub294 Age \uceec\ub7fc\uc740 \ud3c9\uade0\uc73c\ub85c \ucc44\uc6b0\uace0, Cabin \uceec\ub7fc\uc740 891\uac1c\uc758 \ub85c\uc6b0 \uc218\uc5d0\uc11c 70%\uac00 \ub118\ub294 \ube44\uc728\uc774 \uacb0\uce21\uce58\uc774\ubbc0\ub85c \uc81c\uac70, \ud0d1\uc2b9 \ud56d\uad6c \uceec\ub7fc\uc778 Embarked \uceec\ub7fc\uc740 \ucd5c\ube48\uac12\uc73c\ub85c \ucc44\uc6b0\uae30","3d344b62":"Voting\uc73c\ub85c \ud558\ub824\uace0 \ud588\uc73c\ub098 \uce90\uae00\uc548\uc5d0\uc11c \uc790\uafb8 \uc5d0\ub7ec\uac00 \ub098\ub294 \ubc14\ub78c\uc5d0 \uadf8\ub0e5 \uac1c\ubcc4 \uc54c\uace0\ub9ac\uc998\uc73c\ub85c \uc801\uc6a9\ud558\uae30, \uc870\ub9cc\uac04 \ud574\uacb0\ud574\uc11c \ub2e4\uc2dc \uc5c5\ub85c\ub4dc\ud560 \uac83","a32fe114":"* \uacb0\uce21\uac12\uc740 \uc0dd\uc874\ud55c \uc0ac\ub78c\ub9cc \ucd94\ucd9c\ud588\uc744\ub54c \uc0dd\uc874\ud558\uc9c0 \ubabb\ud55c \uc0ac\ub78c\uc740 \ucd94\ucd9c\ub418\uc9c0 \uc54a\uc558\uc73c\ubbc0\ub85c \uadf8 \uac12\uc774 \uc5c6\uc5b4\uc9d0\r\n* => \uacb0\uce21\uac12\uc740 \uc0dd\uc874\ub960 0%\r\n* 0\uba85\uc778 \uc0ac\ub78c\uc744 \uc81c\uc678\ud558\uace0\ub294 \ud655\ub960\uc774 \uc810\uc810 \ub0ae\uc544\uc9c0\ubbc0\ub85c \uc5b4\ub290\uc815\ub3c4 \uc0dd\uc874 \uc5ec\ubd80\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\ub294 \uac83\uc73c\ub85c \ubcf4\uc784","d62b1f78":"\uc22b\uc790\ub85c \ubcfc \ub550 \ubcc4\ucc28\uc774\uac00 \uc5c6\uc5b4 \ubcf4\uc600\uc9c0\ub9cc, \ud655\uc2e4\ud788 \ub0a8\uc131\uc758 \uacbd\uc6b0 \uc5ec\uc131\ubcf4\ub2e4 \ub098\uc774\uc5d0 \ub530\ub77c \uc0dd\uc874 \uc5ec\ubd80\uc5d0 \ucc28\uc774\uac00 \uc788\ub294 \uac83\uc73c\ub85c \ubcf4\uc784\r\n\r\n* \uc544\uc9c1 \uc0dd\uac01\ud558\uc9c0 \ubabb\ud55c \uceec\ub7fc\ub4e4 : Pclass, sibsp, parch, ticket, fare\r\n* Pclass(\uc120\uc2e4\ub4f1\uae09) -> \uc120\uc2e4\ub4f1\uae09\uc740 \uace7 \uc7ac\ub825 \ub610\ub294 \uc2e0\ubd84\uc758 \ucc28\uc774\uc774\ubbc0\ub85c \uc120\uc2e4\ub4f1\uae09\uc5d0 \ub530\ub77c \uc0dd\uc874\uc5ec\ubd80\uc5d0\ub3c4 \ucc28\uc774\uac00 \uc788\uc744\uac83\uc73c\ub85c \ubcf4\uc784\r\n* sibsp(\ud615\uc81c\uc790\ub9e4, \ubc30\uc6b0\uc790\uc758 \uc22b\uc790), parch(\ubd80\ubaa8, \uc544\uc774\uc758 \uc22b\uc790) -> \uc0dd\uc874 \uc2dc \uc9c0\ucf1c\uc57c\ud560 \uc0ac\ub78c\ub4e4\uc774 \uc788\ub294 \uac83\uacfc \uc5c6\ub294 \uac83\uc5d0\ub3c4 \ucc28\uc774\uac00 \uc788\uc744\uac83\uc73c\ub85c \uc0dd\uac01\ub428","2f782412":"train \ub370\uc774\ud130\uc640 \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \uc804\ucc98\ub9ac \uc9c4\ud589","cf8a3b84":"\ubd84\ub958\uc758 \ub2e4\uc591\ud55c \uba38\uc2e0\ub7ec\ub2dd \uc54c\uace0\ub9ac\uc998\r\n* Bayes \ud1b5\uacc4\uc640 \uc0dd\uc131 \ubaa8\ub378\uc5d0 \uae30\ubc18\ud55c \ub098\uc774\ube0c \ubca0\uc774\uc988(Naive Bayes)\r\n* \ub3c5\ub9bd\ubcc0\uc218\uc640 \uc885\uc18d\ubcc0\uc218\uc758 \uc120\ud615 \uad00\uacc4\uc5d0 \uae30\ubc18\ud55c \ub85c\uc9c0\uc2a4\ud2f1 \ud68c\uadc0(Logistic Regression)\r\n* \ub370\uc774\ud130 \uade0\uc77c\ub3c4\uc5d0 \ub530\ub978 \uaddc\uce59 \uae30\ubc18\uc758 \uacb0\uc815 \ud2b8\ub9ac(Decision Tree)\r\n* \uac1c\ubcc4 \ud074\ub798\uc2a4 \uac04\uc758 \ucd5c\ub300 \ubd84\ub958 \ub9c8\uc9c4\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \ucc3e\uc544\uc8fc\ub294 \uc11c\ud3ec\ud2b8 \ubca1\ud130 \uba38\uc2e0(Support Vector Machine)\r\n* \uadfc\uc811 \uac70\ub9ac\ub97c \uae30\uc900\uc73c\ub85c \ucd5c\uc18c \uadfc\uc811(Nearest Neighbor) \uc54c\uace0\ub9ac\uc998\r\n* \uc2ec\uce35 \uc5f0\uacb0 \uae30\ubc18\uc758 \uc2e0\uacbd\ub9dd(Neural Network)\r\n* \uc11c\ub85c \ub2e4\ub978(\ub610\ub294 \uac19\uc740) \uba38\uc2e0\ub7ec\ub2dd \uc54c\uace0\ub9ac\uc998\uc744 \uacb0\ud569\ud55c \uc559\uc0c1\ube14(Ensemble)\r\n","b1085f1a":"\uacb0\uce21\uce58 \ucc98\ub9ac\uac00 \uc644\ub8cc\ub418\uc5c8\uace0, \uba38\uc2e0\ub7ec\ub2dd \uc54c\uace0\ub9ac\uc998\uc5d0 \ubd88\ud544\uc694\ud55c \uceec\ub7fc\ub4e4\uc744 \uc81c\uac70\r\n* \uc0dd\uc874\uc790\uc758 \uc0dd\uc874 \uc5ec\ubd80\uc640 'PassengerId', 'Name', 'Ticket' \uceec\ub7fc\ub4e4\uc758 \uc815\ubcf4\ub294 \ubb34\uad00\ud574 \ubcf4\uc784 <- \uceec\ub7fc drop\r\n* \ub610\ud55c, \uba38\uc2e0\ub7ec\ub2dd \uc54c\uace0\ub9ac\uc998\uc740 \ubb38\uc790\uc5f4 \uac1d\uccb4\ub97c \ud5c8\uc6a9\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c \ubb38\uc790\uc5f4 \uac1d\uccb4\ub294 \uc778\ucf54\ub529\uc774 \ud544\uc694\ud568\r\n* Titanic \ub370\uc774\ud130 \ubb38\uc790\uc5f4 \uceec\ub7fc : 'Sex', 'Embarked' <- \uc778\ucf54\ub529 \uc801\uc6a9\uc774 \ud544\uc694","73006a42":"\uacb0\uce21\uce58 \ucc98\ub9ac\uac00 \uc644\ub8cc, EDA \uc2dc\uc791\r\n* EDA\ub97c \uc2dc\uc791\ud558\uae30 \uc804 \uc5ec\ub7ec \uac00\uc124\uc744 \uc138\uc6b0\uace0 \uae30\uc220\ud1b5\uacc4\ub7c9 \ud639\uc740 \uc2dc\uac01\ud654\ub97c \ud1b5\ud574 \ud655\uc778\r\n* '\ubcf4\ud1b5 \uc7ac\ub09c \uc0ac\uace0\uc2dc \ub178\uc57d\uc790\uc640 \uc5b4\ub9b0\uc774, \uc5ec\uc131\uc744 \uba3c\uc800 \uad6c\ud558\uac8c \ub418\ubbc0\ub85c \uc131\ubcc4\uacfc \ub098\uc774\uac00 \uc0dd\uc874 \uc5ec\ubd80\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\uc744\uae4c?'\r\n* => \uba3c\uc800, value_counts()\ub97c \ud1b5\ud574 \uc218\uce58\ub85c \ud655\uc778\ud574 \ubcfc \uc218 \uc788\ub2e4\r\n* => \uc870\uae08 \ub354 \uba85\ud655\ud558\uace0 \ubcf4\uae30 \uc88b\uac8c \ud558\ub824\uba74 \uc2dc\uac01\ud654","6ffb8ed2":"* \ud3c9\uade0 \ub098\uc774\uc758 \ucc28\uc774\ub294 2\ubc16\uc5d0 \ub098\uc9c0 \uc54a\uc74c -> \ud3c9\uade0\uc758 \ucc28\uc774\uac00 2\ub77c\uc11c \uc5bc\ub9c8 \ucc28\uc774\ub098\uc9c0 \uc54a\uc544\ubcf4\uc774\uc9c0\ub9cc \uc2e4\uc81c\ub85c\ub294 \uadf8\ub807\uc9c0 \uc54a\uc744 \uc218 \uc788\uc74c\r\n* '\ub0a8\uc131\uc758 \uc0ac\ub9dd\ube44\uc728\uc774 \ub192\uc558\uc73c\ubbc0\ub85c \ub0a8\uc131\uc758 \ub098\uc774\uc5d0 \ub530\ub978 \uc0ac\ub9dd\ube44\uc728\uc740 \ub2e4\ub974\uc9c0 \uc54a\uc744\uae4c?'\r\n* \uc774\ub97c \ud655\uc778\ud558\uae30 \uc704\ud574 Survived_df\uc5d0\uc11c \ub0a8\uc131\ub4e4\ub9cc \ub530\ub85c \ucd94\ucd9c","9176c423":"* \uac00\uc871 \uc218\uac00 \uac00\uc7a5 \uc801\uc740 \uc0ac\ub78c\uc774 \uc0dd\uc874\ud55c \uc0ac\ub78c\uc774 \ub9ce\uc9c0\ub9cc, \uc774\ub294 \uc804\uccb4 \ub370\uc774\ud130\uc5d0\uc11c\ub3c4 \uac00\uc871 \uc218\uac00 \ubcc4\ub85c \uc5c6\ub294 \uc0ac\ub78c\uc774 \ud6e8\uc52c \ub9ce\uc740 \uc22b\uc790\uc774\ubbc0\ub85c count\ub97c \ud558\ub294\uac74 \ubb34\uc758\ubbf8\ud574\ubcf4\uc784","197f1bb6":"Cabin \uceec\ub7fc\uc5d0\ub3c4 NaN\uac12\ub4e4\uc774 \uc788\ub294 \uac83\uc73c\ub85c \ubd24\uc744\ub54c \uc804\ucc98\ub9ac\uac00 \ud544\uc694\ud574 \ubcf4\uc784\r\n* info \uba54\uc11c\ub4dc\ub97c \ud1b5\ud574\uc11c \ud655\uc778","21f93da5":"\ucd1d 12\uac1c\uc758 \uceec\ub7fc\uacfc 891\uac1c\uc758 row\ub85c \uad6c\uc131\ub41c DataFrame \uac1d\uccb4\r\n\r\n* EDA\ub97c \uc2e4\uc2dc\ud558\uae30\uc804\uc5d0 info \uba54\uc11c\ub4dc\ub97c \ud1b5\ud574 \ub370\uc774\ud130\ub97c \ub4e4\uc5ec\ub2e4 \ubcfc \ud544\uc694\uac00 \uc788\ub2e4.","c9a27506":"\ud544\uc694 \ubaa8\ub4c8 \uc784\ud3ec\ud2b8 (\uc0ac\uc774\ud0b7\ub7f0\uc740 \ub098\uc911\uc5d0 \uc784\ud3ec\ud2b8\ud560 \uac83)\r\n\r\n-\ud0c0\uc774\ud0c0\ub2c9 \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\r\n* Kaggle\uc5d0\uc11c \ubd88\ub7ec\uc628 \ud0c0\uc774\ud0c0\ub2c9 \ub370\uc774\ud130 \ud3f4\ub354\uc5d0\ub294 gender_submission, test, train \ub370\uc774\ud130\uac00 \uc788\ub2e4.\r\n* test \ub370\uc774\ud130\ub294 \ub098\uc911\uc5d0 \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378\uc744 \ub9cc\ub4e0 \ub4a4 \uc131\ub2a5 \ud3c9\uac00\uc5d0 \uc4f0\uc774\ubbc0\ub85c \uc8fc\ub85c train \ub370\uc774\ud130 (\ud559\uc2b5 \ub370\uc774\ud130)\ub97c \uac00\uc9c0\uace0 \ub370\uc774\ud130 \uc804\ucc98\ub9ac\ub97c \ud558\uace0 EDA\ub97c \uc2e4\uc2dc\ud55c \ub4a4 \ubaa8\ub378\ub9c1\uc744 \ud55c\ub2e4.","b50fbd1b":"\uc22b\uc790\ub4e4\ub85c\ub9cc\uc740 \ubcc4\ub85c \ucc28\uc774\uac00 \ub098\uc9c0 \uc54a\uc544\ubcf4\uc774\ub2c8 \uc2dc\uac01\ud654\ub97c \uc9c4\ud589\r\n* Age\uc758 \uc885\ub958\uac00 \ub9ce\uc73c\ubbc0\ub85c \ubc94\uc704\ubcc4\ub85c \ubd84\ub958\ud574 \uce74\ud14c\uace0\ub9ac \uac12\uc744 \ud560\ub2f9","db0be018":"* describe() \uba54\uc11c\ub4dc\ub97c \ud1b5\ud574 \uc0dd\uc874\uc790\uc640 \ube44\uc0dd\uc874\uc790\uc758 \ub098\uc758 \ud3c9\uade0\uc5d0 \ucc28\uc774\uac00 \uc788\ub294\uc9c0 \ud655\uc778","e824ea79":"'S'\uac00 \uac00\uc7a5 \ub9ce\uc774 \ub098\uc628 \uac83\uc73c\ub85c \ubcf4\uc784","0f869e52":"= > 1\ub4f1\uae09 \uc120\uc2e4 \uc0ac\ub78c\ub4e4\uc758 \uc0dd\uc874 \ud655\ub960\uc774 \ub354 \ub192\uc740 \uac83\uc744 \ubcf4\uc784. \uc870\uae08 \ub354 \uba85\ud655\ud558\uac8c \ubcf4\uae30 \uc704\ud574 \uc2dc\uac01\ud654","80878ac2":"\ub300\ubd80\ubd84\uc758 \uceec\ub7fc\uc5d0\ub294 \uacb0\uce21\uce58\uac00 \uc5c6\uc9c0\ub9cc Age, Cabin, Embarked \uceec\ub7fc\uc5d0\ub294 \uacb0\uce21\uce58\uac00 \uc874\uc7ac\ud55c\ub2e4.\r\n\r\n* \uacb0\uce21\uce58\ub97c \ud655\uc778\ud558\ub294 \ubc29\ubc95\uc740 info\uba54\uc11c\ub4dc\ub97c \ud1b5\ud574 RangeIndex(row\uc218) - \uac01 \uceec\ub7fc\uc758 Non-Null Count\ub97c \ud574\ub3c4 \ub418\uc9c0\ub9cc DATA.isnull().sum()\uc744 \ud1b5\ud574 \uc870\uae08 \ub354 \uba85\ud655\ud788 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.","1c03c2c4":"Reference \r\n* \ud30c\uc774\uc36c \uba38\uc2e0\ub7ec\ub2dd \uc644\ubcbd\uac00\uc774\ub4dc(\uad8c\ucca0\ubbfc) - \uc704\ud0a4\ubd81\uc2a4","135d7c99":"### \ub098\uc758 \uccab Kaggle - \ud0c0\uc774\ud0c0\ub2c9 \uc0dd\uc874\uc790 \uc608\uce21 EDA ###","cd93eaa7":"## \uba38\uc2e0\ub7ec\ub2dd \uc54c\uace0\ub9ac\uc998 \uc801\uc6a9 ##\r\n\r\n* feature, target \ubcc0\uc218 \ub098\ub204\uae30\r\n* train(\ud559\uc2b5) \ub370\uc774\ud130, test(\ud3c9\uac00) \ub370\uc774\ud130 \ub098\ub204\uae30\r\n* \ud53c\ucc98\ub4e4 \uac00\uacf5\ud558\uae30 -> \ubb38\uc790\uc5f4 \uac1d\uccb4 \uc778\ucf54\ub529, Null \ucc98\ub9ac, \uc54c\uace0\ub9ac\uc998\uc5d0 \ubd88\ud544\uc694\ud55c \uc18d\uc131 \uc81c\uac70 \ub4f1\ub4f1\r\n---------------------------------------------------------------------\r\n* Titanic\ub370\uc774\ud130\ub294 \uc774\ubbf8 train(\ud559\uc2b5) \ub370\uc774\ud130\uc640 test(\ud3c9\uac00) \ub098\ub204\uc5b4\uc838 \uc788\uc73c\ubbc0\ub85c \uc0ac\uc774\ud0b7\ub7f0\uc758 \ubaa8\ub4c8\uc744 \ub530\ub85c \uc0ac\uc6a9\ud560 \ud544\uc694X\r\n* \uc54c\uace0\ub9ac\uc998\uc744 \uc801\uc6a9\ud558\uae30 \uc804, \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc14b\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc804\ucc98\ub9ac\uac00 \ud544\uc694\ud55c\uc9c0 \ud655\uc778","a416d493":"\uc559\uc0c1\ube14 \ubc29\ubc95\uc744 \uc801\uc6a9\ud574\ubcf4\uae30\r\n* \uc559\uc0c1\ube14 \ud559\uc2b5\uc758 \uc720\ud615 : Voting, Bagging, Boosting \ub4f1\ub4f1\r\n* Voting : Logistic Regression, KNN, DecisionTree \uc801\uc6a9\ud574\ubcf4\uae30(\uc18c\ud504\ud2b8 \ubcf4\ud305)\r\n* Bagging : RandomForest \uc801\uc6a9 \ud574\ubcf4\uae30\r\n* Boosting : GBM, XGBoost \uc801\uc6a9 \ud574\ubcf4\uae30 \r\n","8675eb1f":"\uba38\uc2e0\ub7ec\ub2dd \uc54c\uace0\ub9ac\uc998\uc5d0 \uc801\uc6a9\ud560 \ub370\uc774\ud130 \uac00\uacf5 \uc644\ub8cc\r\n* train\ub370\uc774\ud130\uc5d0\uc11c \uc54c\uace0\ub9ac\uc998\uc5d0 target\uc774 \ub420 'Survived'\uceec\ub7fc\uacfc feature\uac00 \ub420 \ub098\uba38\uc9c0 \uceec\ub7fc\ub4e4\uc744 \ub530\ub85c \ubd84\ub9ac\ud560 \ud544\uc694\uac00 \uc788\uc74c","80c8782b":"* \ud615\uc81c\uc790\ub9e4, \ubc30\uc6b0\uc790, \ubd80\ubaa8, \uc790\uc2dd\uc758 \uc218\uc5d0 \ub530\ub978 \uc0dd\uc874 \uc5ec\ubd80 \ud655\uc778\r\n* \uba3c\uc800, \uac01\uac01\uc758 \uceec\ub7fc\ub4e4\uc758 \uc815\ubcf4\ub97c \ud655\uc778\ud560 \ud544\uc694\uac00 \uc788\ub2e4","2b280890":"=> \uc131\ubcc4\uc740 \uc0dd\uc874 \uc5ec\ubd80\uc5d0 \uc601\ud5a5\uc744 \ub07c\uce60 \uac83\uc73c\ub85c \ubcf4\uc784\r\n\r\n* \ub2e4\uc74c \uac00\uc124\uc778 \ub098\uc774\uac00 \uc0dd\uc874 \uc5ec\ubd80\uc5d0 \uc601\ud5a5\uc744 \ub07c\uce58\ub294\uc9c0 \ud655\uc778"}}