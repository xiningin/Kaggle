{"cell_type":{"ce82f5cf":"code","998b23a1":"code","dab3a57a":"code","d552da33":"code","3b5b07d3":"code","158d1459":"code","60f4b260":"code","95acbe1e":"code","bff9a0cf":"code","e58f02cc":"code","8c92cf9c":"code","ad7dd403":"code","db0cbc3e":"code","3173b717":"code","8d8e75c2":"code","2acb41d9":"code","a742c2ca":"code","26308a6e":"code","7d296ea8":"code","5c204d00":"code","6477f617":"code","16d55126":"code","96ff52e2":"code","39721ece":"code","26220ef5":"code","82ce0104":"code","920445c3":"code","15b0df1a":"code","43c4b87b":"code","feffe868":"code","e5086ae1":"code","ee89d797":"code","603e0eb7":"code","9555f025":"code","65ca0f96":"code","b00fcc34":"code","dd5c4276":"code","c632ea5c":"code","53f06f9d":"code","dfbd578f":"code","9d40a2b6":"code","e2d38a28":"code","cfb84ade":"markdown","7d353fe6":"markdown","1ede3385":"markdown","d1ba1d58":"markdown","169c139e":"markdown","a36adf1a":"markdown","36a0499f":"markdown","adb0f0d4":"markdown","5f2a992e":"markdown","142a8ec3":"markdown","9f8bbd55":"markdown"},"source":{"ce82f5cf":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","998b23a1":"pd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)","dab3a57a":"import os\nprint(os.listdir(\"..\/input\"))","d552da33":"df = pd.read_csv('..\/input\/preprocessed-house-price-pred-adv-regg-tech\/preprocessed_houseprice_dataframe.csv')\ndf.head(3)","3b5b07d3":"df.shape","158d1459":"column_names = df.columns\nprint(column_names)","60f4b260":"train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\nprint(train.shape)\nprint(test.shape)","95acbe1e":"num_features = ['MSSubClass','LotFrontage','LotArea','OverallQual','OverallCond','MasVnrArea','BsmtFinSF1','BsmtFinSF2',\n                'BsmtUnfSF','TotalBsmtSF','1stFlrSF','2ndFlrSF','LowQualFinSF','GrLivArea','BsmtFullBath','BsmtHalfBath',\n                'FullBath','HalfBath','BedroomAbvGr','KitchenAbvGr','TotRmsAbvGrd','Fireplaces','GarageYrBlt','GarageCars',\n                'GarageArea','WoodDeckSF','OpenPorchSF','EnclosedPorch','3SsnPorch','ScreenPorch','PoolArea','MiscVal']","bff9a0cf":"plt.figure(figsize = (25,20))\nfor i in range(len(num_features)):\n    plt.subplot(8,4,i+1)\n    ax = sns.distplot(df[num_features[i]])\n    ax.legend([\"skewness:{:.2f}\".format(df[num_features[i]].skew())], fontsize = \"xx-large\")","e58f02cc":"for i in num_features:\n    df[i] = np.log(df[i]+1)","8c92cf9c":"plt.figure(figsize = (25,20))\nfor i in range(len(num_features)):\n    plt.subplot(8,4,i+1)\n    ax = sns.distplot(df[num_features[i]])\n    ax.legend([\"skewness:{:.2f}\".format(df[num_features[i]].skew())], fontsize = \"xx-large\")","ad7dd403":"SalePrice = np.log(train['SalePrice']+1)","db0cbc3e":"X_train = df[:len(train)]\nX_test = df[len(train):]\ny_train = SalePrice\nprint(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)","3173b717":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nsc.fit(X_train)","8d8e75c2":"X_train_sc = sc.transform(X_train)\nX_test_sc = sc.transform(X_test)","2acb41d9":"X_train_sc","a742c2ca":"X_train_sc =  pd.DataFrame(X_train_sc, columns = column_names)\nX_test_sc =  pd.DataFrame(X_test_sc, columns = column_names)","26308a6e":"X_train_sc.head(3)","7d296ea8":"from sklearn.model_selection import KFold, cross_val_score\nfrom sklearn.metrics import make_scorer, r2_score","5c204d00":"def test_model(model, X_train = X_train, y_train = y_train):\n    cv = KFold(n_splits = 3, shuffle = True, random_state = 45)\n    r2 = make_scorer(r2_score)\n    r2_val_score = cross_val_score(model, X_train, y_train, cv = cv, scoring = r2)\n    score = [r2_val_score.mean()]\n    return score","6477f617":"#scaled function\ndef test_model_sc(model, X_train = X_train_sc, y_train = y_train):\n    cv = KFold(n_splits = 3, shuffle = True, random_state = 45)\n    r2 = make_scorer(r2_score)\n    r2_val_score = cross_val_score(model, X_train, y_train, cv = cv, scoring = r2)\n    score_sc = [r2_val_score.mean()]\n    return score_sc","16d55126":"import sklearn.linear_model as linear_model\nLR = linear_model.LinearRegression()\ntest_model(LR)","96ff52e2":"test_model_sc(LR)","39721ece":"#ridge\nLRRidge = linear_model.Ridge()\ntest_model(LRRidge)","26220ef5":"test_model_sc(LRRidge)","82ce0104":"#lasso\nLRLasso = linear_model.Lasso()\ntest_model(LRLasso)","920445c3":"test_model_sc(LRLasso)","15b0df1a":"#svm\nfrom sklearn.svm import SVR\nsvr_reg = SVR(kernel = 'rbf')\ntest_model(svr_reg)","43c4b87b":"test_model_sc(svr_reg)","feffe868":"#decision tree\nfrom sklearn.tree import DecisionTreeRegressor\ndt_reg = DecisionTreeRegressor()\ntest_model(dt_reg)","e5086ae1":"test_model_sc(dt_reg)","ee89d797":"#random forest\nfrom sklearn.ensemble import RandomForestRegressor\nrf_reg = RandomForestRegressor(n_estimators = 1000)\ntest_model(rf_reg)","603e0eb7":"test_model_sc(rf_reg)","9555f025":"#bagging and boosting\nfrom sklearn.ensemble import BaggingRegressor, GradientBoostingRegressor\nbr_reg = BaggingRegressor(n_estimators = 1000)\ngbr_reg = GradientBoostingRegressor(n_estimators = 1000, learning_rate = 0.1, loss = 'ls')","65ca0f96":"test_model(br_reg)","b00fcc34":"test_model(gbr_reg)","dd5c4276":"#xgboost\nimport xgboost\nxgb_reg = xgboost.XGBRegressor()\ntest_model(xgb_reg)","c632ea5c":"test_model_sc(xgb_reg)","53f06f9d":"LRRidge.fit(X_train, y_train)\ny_pred = np.exp(LRRidge.predict(X_test)).round(2)\ny_pred","dfbd578f":"submit_test2 = pd.concat([test['Id'], pd.DataFrame(y_pred)], axis = 1)\nsubmit_test2.columns = ['Id', 'SalePrice']\nsubmit_test2.shape","9d40a2b6":"submit_test2.to_csv('submit_test2.csv', index = False)","e2d38a28":"#checking correlation\nplt.figure(figsize = (16,5))\nax = sns.barplot(train.corrwith(train.SalePrice).index, train.corrwith(train.SalePrice))\nax.tick_params(labelrotation = 90)","cfb84ade":"# House price pred. Adv regg Techniques","7d353fe6":"### Loading dataset","1ede3385":"Your Best Entry \nYour submission scored 14843.86639, which is an improvement of your previous score of 16071.39575. Great job!\n3292","d1ba1d58":"## Cross Validation","169c139e":"### Splitting dataset","a36adf1a":"### Reducing skewness","36a0499f":"## feature engg","adb0f0d4":"### Importing lib","5f2a992e":"### Models","142a8ec3":"### Scaling features","9f8bbd55":"## ridge model building"}}