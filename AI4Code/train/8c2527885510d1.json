{"cell_type":{"a3d09759":"code","fc367fb4":"code","6ed8cee2":"code","ee3b20ae":"code","d4f6f453":"code","370214aa":"code","8c2dbb99":"code","13ecde45":"code","93e86093":"code","bf7afd87":"code","50b082e8":"code","b44e4fcb":"code","55a23986":"code","d2bba862":"code","15329932":"code","7ed74279":"code","ad40b32b":"code","c30fe2fa":"code","2b0daae8":"code","2ef42416":"code","8e3c7f7f":"code","14b60640":"code","e7d115d4":"code","330e1a9e":"code","1d151d9e":"code","ad155e70":"code","608a1d28":"code","0dbba2b2":"code","2120b86a":"code","ab1c23e6":"code","252552af":"code","8e69511a":"code","e3d01ea4":"markdown","976f90f6":"markdown","73289ed9":"markdown","41031d29":"markdown","08bcc054":"markdown","be6eaaeb":"markdown","5b33dc5b":"markdown","b7fab2b5":"markdown","491a4a44":"markdown","f4a62a29":"markdown"},"source":{"a3d09759":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fc367fb4":"#Importing necessary libraries for analysis and visualization\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\nfrom textblob import TextBlob\n\nfrom wordcloud import WordCloud\nfrom sklearn.feature_extraction.text import ENGLISH_STOP_WORDS\n\nimport re\nimport nltk\nnltk.download('words')\nwords = set(nltk.corpus.words.words())","6ed8cee2":"df=pd.read_csv('..\/input\/trumps-legacy\/Trumps Legcy.csv')\ndf.head()","ee3b20ae":"#Checking for any null values\ndf.isna().sum()","d4f6f453":"#Exploring the dataframe\ndf.describe()","370214aa":"device= pd.DataFrame(df.device.value_counts().reset_index().head(10))\ndevice.head()","8c2dbb99":"fig = px.bar(device, x='index', y='device', title='Top 10 devices used for tweets', \n             template=\"plotly_dark\",\n            labels=dict(index=\"Device Used\", device=\"Number of Tweets\"),\n            )\nfig.update_traces(marker_color='#fcba03')\nfig.show()","13ecde45":"##Exploring the data type of the dataframe\ndf.info()","93e86093":"#Converting the datetime type\ndf['date']= pd.to_datetime(df['date'])\ndf.info()","bf7afd87":"##Extracting the Year, Month and Day from the datetime column\n\ndf['year']= df['date'].dt.year\ndf['weekday'] = df['date'].dt.day_name()\ndf['month']= df['date'].dt.month_name()\ndf.head()","50b082e8":"##Explroing the number of tweets per year by Donald Trump\n\nyear_tweet= df.groupby('year')['text'].count().reset_index()\nfig = px.bar(year_tweet, x='year', y='text', title= \"Number of Tweets in each year\",\n            template=\"plotly_dark\",\n            labels=dict(year=\"Year\", text=\"Number of Tweets\"),\n            )\nfig.update_traces(marker_color='#fcba03')\nfig.show()","b44e4fcb":"## Number of tweets in month over all these years by Donal Trump.\n\nmonth_tweet= df.groupby('month')['text'].count().reset_index()\nfig = px.bar(month_tweet, x='month', y='text', title= \"Combined Tweets by Month(2009- 2021)\",\n            template=\"plotly_dark\",\n            labels=dict(month=\"Month\", text=\"Number of Tweets\"),\n            )\nfig.update_traces(marker_color='#fcba03')\nfig.show()","55a23986":"## Trump's favourite day for tweets.\n\nday_tweet= df.groupby('weekday')['text'].count().reset_index()\nfig = px.bar(day_tweet, x='weekday', y='text',\n            title= \"Combined Tweets by Day(2009- 2021)\",\n            template=\"plotly_dark\",\n            labels=dict(weekday=\"Week Day\", text=\"Number of Tweets\"),\n            )\nfig.update_traces(marker_color='#fcba03')\nfig.show()","d2bba862":"liked_check = df.sort_values(by=['favorites'], ascending=False).head(20)\nliked_check.head()","15329932":"tweet_timeline= df.groupby(['year'])['text'].count().reset_index()\nfig = px.line(tweet_timeline, x=\"year\", y=\"text\", title='Trumps tweet activity over the years',\n              template=\"plotly_dark\",\n              labels=dict(year=\"Year\", text=\"Number of Tweets\"),\n            )\nfig.update_traces(marker_color='#fcba03')\n\nfig.show()","7ed74279":"trump_fav= df.groupby(['text'])['id'].count().nlargest(6).reset_index()\ntrump_fav.head()","ad40b32b":"fig = px.bar(trump_fav, x='text', y='id', title=\"Trump Tweeting a Tweet more than 6 times \",\n            template=\"plotly_dark\",\n            labels=dict(text=\"Tweet\", id=\"Number of times Tweeted\"),\n            )\nfig.update_traces(marker_color='#fcba03')\n\n\nfig.show()","c30fe2fa":"##Cleaning the tweets\ndef cleaner(tweet):\n    tweet = re.sub(\"@[A-Za-z0-9]+\",\"\",tweet) #Remove @ sign\n    tweet = re.sub(r\"(?:\\@|http?\\:\/\/|https?\\:\/\/|www)\\S+\", \"\", tweet) #Remove http links\n    tweet = \" \".join(tweet.split())\n    \n    tweet = tweet.replace(\"#\", \"\").replace(\"_\", \" \") #Remove hashtag sign but keep the text\n   \n    return tweet\ndf['text']= df['text'].map(lambda x: cleaner(x))","2b0daae8":"#Removing garbage words and the words which doesn't have any meaning from the above word cloud\nmy_stop_words = ENGLISH_STOP_WORDS.union(['https', 'http','t', 'realDonaldTrump', 'RT', 'amp'])","2ef42416":"# from wordcloud import WordCloud\nplt.figure(figsize = (8, 8)) \n# Create and generate a word cloud image \nmy_cloud = WordCloud(background_color='white', stopwords=my_stop_words).generate(' '.join(df['text']))\n\n# Display the generated wordcloud image\nplt.imshow(my_cloud, interpolation='bilinear') \nplt.axis(\"off\")\n\n# Don't forget to show the final image\nplt.show()","8e3c7f7f":"pakistan= (df.text.str.count('Pakistan').sum())\nmexico= (df.text.str.count('Mexico').sum())\nindia= (df.text.str.count('India').sum())\nnkorea=(df.text.str.count('North Korea').sum())","14b60640":"countries=['Pakistan', 'Mexico', 'India', 'North Korea']\n\nfig = go.Figure([go.Bar(x=countries, y=[pakistan, mexico, india,nkorea ])])\nfig.show()","e7d115d4":"## Define a function which can be applied to calculate the score for the whole dataset\n\ndef senti(x):\n    return TextBlob(x).sentiment  \n\ndf['senti_score'] = df['text'].apply(senti)\n\ndf.senti_score.head()","330e1a9e":"## Our Sentiment Analyser of Text Blob can be made more accurate through feature engineering. \n## Here I choose values based on some initial analysis of the tweets and the type of sentiment it gives.\n\nsentiment=[]\n\nfor i in range(len(df['text'])):\n    if df['senti_score'][i][0] >= 0.2:\n        sentiment.append('Positive')\n    elif df['senti_score'][i][0] <= -0.05:\n        \n        sentiment.append('Negative')\n    else:\n        sentiment.append('None')","1d151d9e":"df['sentiment']= sentiment\ndf.sample(5)","ad155e70":"df1= df.groupby(\"sentiment\")[\"id\"].count().reset_index()\ndf1.head()","608a1d28":"fig = px.pie(df1, values='id', names='sentiment', title=\"Trump's Overall Sentiment in Tweets\",color= 'sentiment',\n            \n            color_discrete_map={'Positive':'green',\n                                 'Negative':'red',\n                                 'None':'black'})\nfig.show()","0dbba2b2":"df2= df[df['year'] >= 2016]\ndf2.sample(5)","2120b86a":"df2= df2.groupby(\"sentiment\")[\"id\"].count().reset_index()\n\nfig = px.pie(df2, values='id', names='sentiment', title=\"Trump's Sentiment in Tweets after Presidential Campaign\",color= 'sentiment',\n            \n            color_discrete_map={'Positive':'green',\n                                 'Negative':'red',\n                                 'None':'black'})\nfig.show()","ab1c23e6":"pakistan = df[df['text'].str.contains('Pakistan', case=False, na=False)]\ndf_pak= pakistan.groupby(\"sentiment\")[\"id\"].count().reset_index()\n\nfig = px.pie(df_pak, values='id', names='sentiment', title=\"Trump's Sentiment in Tweets about Pakistan\",color= 'sentiment',\n            \n            color_discrete_map={'Positive':'green',\n                                 'Negative':'red',\n                                 'None':'black'})\nfig.show()","252552af":"mexico = df[df['text'].str.contains('Mexico', case=False, na=False)]\ndf_mexico= mexico.groupby(\"sentiment\")[\"id\"].count().reset_index()\n\nfig = px.pie(df_mexico, values='id', names='sentiment', title=\"Trump's Sentiment in Tweets about Mexico\",color= 'sentiment',\n            \n            color_discrete_map={'Positive':'green',\n                                 'Negative':'red',\n                                 'None':'black'})\nfig.show()","8e69511a":"korea = df[df['text'].str.contains('North Korea', case=False, na=False)]\ndf_korea= korea.groupby(\"sentiment\")[\"id\"].count().reset_index()\n\nfig = px.pie(df_korea, values='id', names='sentiment', title=\"Trump's Sentiment in Tweets about North Korea\",color= 'sentiment',\n            \n            color_discrete_map={'Positive':'green',\n                                 'Negative':'red',\n                                 'None':'black'})\nfig.show()","e3d01ea4":"## Top 10 Devices Used for Tweets by Donald Trump","976f90f6":"## TRUMP's personal favourite tweet","73289ed9":"## Applying WordCloud on the dataset","41031d29":"## Trump's Sentiment About the countries mentioned:","08bcc054":"##  Sentiment Analysis of Trump Tweets","be6eaaeb":"## How many times Countries have  been discussed","5b33dc5b":"## Trump's Tweet Sentiment After Presidential Campain till he remained active on Twitter.","b7fab2b5":"### Now the most liked tweets of trump","491a4a44":"#### Note: Scroll through the bar to see the tweet","f4a62a29":"## Tweets timeline"}}