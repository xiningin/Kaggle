{"cell_type":{"669eba44":"code","478c0593":"code","9ec18023":"code","66b768c2":"code","11d7e23d":"code","918d986d":"code","e9bdc987":"code","bbe0f3e8":"code","8ef21bf1":"code","dcf7d5d1":"markdown","73ee8f92":"markdown","5035ca1a":"markdown","26b5016e":"markdown","3da3eafc":"markdown","899b3806":"markdown"},"source":{"669eba44":"import numpy as np\nimport pandas as pd \nimport os\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.ensemble import GradientBoostingRegressor\n\nimport xgboost","478c0593":"SEED = 42\nEARLY_STOP_NUM = 5 \nDATA_NUM = 10000 # row number \nCOL_NUM = 5 #column number ","9ec18023":"np.random.seed(SEED)\nX = np.random.rand(DATA_NUM, COL_NUM) - 0.5\ny = 3*X[:, 0]**2 + 0.05 * np.random.randn(DATA_NUM)\nX_test = np.random.rand(DATA_NUM, COL_NUM) - 0.5 + 2 * 3\n\nX = pd.DataFrame(X)\ny = pd.DataFrame(y)\nX_test = pd.DataFrame(X_test)","66b768c2":"X[:5]","11d7e23d":"y[:5]","918d986d":"X_train, X_val, y_train, y_val = train_test_split(X, y, random_state=SEED)","e9bdc987":"xgb_reg = xgboost.XGBRegressor(random_state=SEED)\nxgb_reg.fit(X_train, y_train,eval_set=[(X_val, y_val)], early_stopping_rounds=EARLY_STOP_NUM)\ny_pred = xgb_reg.predict(X_val)\nval_error = mean_squared_error(y_val, y_pred)  \nprint(\"Validation MSE:\", val_error)         ","bbe0f3e8":"# import module we'll need to import our custom module\nfrom shutil import copyfile\n\n# copy our file into the working directory (make sure it has .py suffix)\ncopyfile(src = \"..\/input\/shuffle-split-oof-py\/function_shufflesplit_oof.py\", dst = \"..\/working\/function_shufflesplit_oof.py\")\n\nfrom function_shufflesplit_oof import *","8ef21bf1":"NFOLD = 5\npred_test = shuffleSplitOOF(NFOLD,X,y,X_test,xgb_reg,mean_squared_error)\npred_test[:10]","dcf7d5d1":"# import libraries","73ee8f92":"# split train set and validation set","5035ca1a":"# make data","26b5016e":"# Regression OOF ","3da3eafc":"# global variables","899b3806":"# get best xgb model "}}