{"cell_type":{"7357b132":"code","13707764":"code","9fc9ae47":"code","3ad0a7d5":"code","62c9df1a":"code","2fe16391":"code","2aca0031":"code","61fcca9d":"code","a9d5a5a3":"code","116a72d9":"code","7cbbd009":"code","6c16b92c":"code","4799a940":"code","9af7b3d4":"code","034c5325":"code","3a133580":"code","a7c98bde":"markdown"},"source":{"7357b132":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nfrom xgboost import plot_importance\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom matplotlib.pyplot import subplots\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","13707764":"df_stroke = pd.read_csv(\"..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")","9fc9ae47":"df_stroke.head()","3ad0a7d5":"df_stroke = df_stroke.dropna()","62c9df1a":"sns.countplot(x=\"heart_disease\", data=df_stroke)","2fe16391":"sns.distplot(df_stroke['avg_glucose_level'])","2aca0031":"df_stroke = df_stroke.drop('ever_married', axis=1)\ndf_stroke = df_stroke.drop('id', axis=1)","61fcca9d":"df_stroke = df_stroke.drop('gender',axis=1)\ndf_stroke = df_stroke.drop('work_type', axis=1)\ndf_stroke = df_stroke.drop('smoking_status', axis=1)\ndf_stroke = df_stroke.drop('Residence_type', axis=1)","a9d5a5a3":"stroke = pd.get_dummies(df_stroke)","116a72d9":"y = stroke['stroke']\nX = stroke.drop('stroke', axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=11)","7cbbd009":"print(X_train.shape, X_test.shape)","6c16b92c":"stroke.head()","4799a940":"xgb = XGBClassifier(n_estimatiors=500, learning_rate=0.1, max_depth=4)\nxgb.fit(X_train, y_train)\nxgb_pred = xgb.predict(X_test)","9af7b3d4":"accuracy_score(y_test, xgb_pred)","034c5325":"xgb = XGBClassifier(n_estimator=400, learning_rate=0.1, max_depth=3)\nevals = [(X_test, y_test)]\nxgb.fit(X_train, y_train, early_stopping_rounds=3, eval_metric=\"logloss\", eval_set=evals, verbose=1)","3a133580":"fig, ax = subplots()\nplot_importance(xgb, ax=ax)","a7c98bde":"age, avg_glucose_level\uc774 \uac00\uc7a5 \ud070 \uc601\ud5a5\uc744 \ub07c\uce58\ub294 \uac83\uc73c\ub85c \ud655\uc778"}}