{"cell_type":{"12252120":"code","00cad82e":"code","62b28640":"code","21b1082e":"code","f2e18c5f":"code","e2ad7747":"code","1cb3c9d1":"code","fd7b114a":"code","b0368da5":"code","806e1ea2":"code","3732cf60":"code","5e45b401":"code","2d502ff1":"code","8025f7af":"code","4e9109ea":"code","f9d2f713":"code","c67f1cb8":"code","a5fe627a":"code","f9ae5be5":"code","af7bd855":"code","c9c797fa":"code","2a29f91d":"markdown","a12655f1":"markdown","50ba7e80":"markdown","91b80c8a":"markdown","f6be210a":"markdown","56301f25":"markdown"},"source":{"12252120":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","00cad82e":"#\u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438\nimport bq_helper\nfrom bq_helper import BigQueryHelper\nimport plotly.express as px\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nfrom plotly import graph_objects as go","62b28640":"#\u0438\u0437\u043c\u0435\u043d\u0438\u043c \u043e\u043f\u0446\u0438\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0442\u0430\u0431\u043b\u0438\u0446\npd.set_option('max_colwidth', 1000)\npd.set_option('max_columns', 50)","21b1082e":"#\u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043e\u0431\u044a\u0435\u043a\u0442 BigQueryHelper\nbq_assistant = BigQueryHelper(\"bigquery-public-data\", \"chicago_crime\")\n#\u0438\u0437\u0443\u0447\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435\ndisplay(bq_assistant.list_tables())\ndisplay(bq_assistant.table_schema(\"crime\"))\ndisplay(bq_assistant.head(\"crime\", num_rows=3))","f2e18c5f":"#\u043d\u0430\u043f\u0438\u0448\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0441 \u0431\u0438\u0442\u0430\u043c\u0438 \u0438 \u0434\u0430\u0442\u0430\u043c\u0438\nQUERY = \"\"\"\n        SELECT beat, date\n        FROM `bigquery-public-data.chicago_crime.crime`\n        \"\"\"\ndisplay(bq_assistant.estimate_query_size(QUERY))\ndf = bq_assistant.query_to_pandas_safe(QUERY)\n#\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ndf.head()","e2ad7747":"#\u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043c \u0447\u0430\u0441\u044b \u0438\u0437 \u043a\u0430\u0436\u0434\u043e\u0439 \u0434\u0430\u0442\u044b\ndf['hour'] = pd.DatetimeIndex(df['date']).hour\n#\u0432\u044b\u0447\u0438\u0441\u043b\u0438\u043c, \u0432 \u043a\u0430\u043a\u0438\u0435 \u0447\u0430\u0441\u044b \u043e\u043f\u0430\u0441\u043d\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u043f\u043e\u044f\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u043d\u0430 \u0443\u043b\u0438\u0446\u0430\u0445 \u0427\u0438\u043a\u0430\u0433\u043e\ndangerous_hours = df.groupby('hour',as_index=False).agg({'date':'count'}).sort_values(by='date', ascending=False)\n#\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ndangerous_hours","1cb3c9d1":"#\u043d\u0430\u043f\u0438\u0448\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0447\u0430\u0442\u043e\u0433\u043e \u0433\u0440\u0430\u0444\u0438\u043a\u0430\ndef barplot_constructor(data, x, y, title, x_ax, y_ax):\n    fig = px.bar(data, x=x, y=y, title=title, labels={x:x_ax,y:y_ax})\n    fig.show()","fd7b114a":"#\u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443\nbarplot_constructor(dangerous_hours,'hour','date','\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439 \u043f\u043e \u0447\u0430\u0441\u0430\u043c','\u0427\u0430\u0441','\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043e\u0432\u0435\u0440\u0448\u0430\u0435\u043c\u044b\u0445 \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439')","b0368da5":"#\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0432\u043e\u0441\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b \u0434\u043b\u044f \u043f\u0430\u0442\u0440\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\ntable = pd.DataFrame(columns=('interval','total_crimes'))\ntotal_crimes = 0\nfor interval in range(0,12):\n    hour1 = interval\n    hour2 = interval+1\n    hour3 = interval+2\n    hour4 = interval+12\n    hour5 = interval+13\n    hour6 = interval+14\n    if interval == 10:\n        hour6 = interval-10\n    if interval == 11:\n        hour5 = interval-11\n        hour6 = interval-10\n    for hour in (hour1,hour2,hour3,hour4,hour5,hour6):\n        total_crimes += dangerous_hours.loc[hour]['date']\n    table.loc[interval,'interval'] = str(hour1)+':00-'+str(hour3)+':59',str(hour4)+':00-'+str(hour6)+':59'\n    table.loc[interval,'total_crimes'] = total_crimes\ndisplay(table.sort_values(by='total_crimes',ascending=False))","806e1ea2":"#\u0441\u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c \u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0447\u0430\u0441\u0430\u043c \u043f\u0430\u0442\u0440\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0440\u0430\u0437\u0434\u0435\u043b\u0435\npatrol_hours = df.query('hour in [11,12,13,23,0,1]')\n#\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\npatrol_hours.groupby('hour',as_index=False).agg({'beat':'count'})","3732cf60":"#\u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0441\u0432\u043e\u0434\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0447\u0438\u0441\u043b\u0430 \u0441\u043e\u0432\u0435\u0440\u0448\u0430\u0435\u043c\u044b\u0445 \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0431\u0438\u0442\u0435 \u0432 \u043a\u0430\u0436\u0434\u044b\u0439 \u0447\u0430\u0441 \u043f\u0430\u0442\u0440\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\nbeats_pivot = patrol_hours.pivot_table(index='beat',columns='hour',values='date',aggfunc='count')\n#\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\nbeats_pivot","5e45b401":"#\u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0443\u044e \u0441\u0432\u043e\u0434\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0432 \u0432\u0438\u0434\u0435 \u0442\u0435\u043f\u043b\u043e\u0432\u043e\u0439 \u043a\u0430\u0440\u0442\u044b\nfig_dims = (25, 30)\nfig, ax = plt.subplots(figsize=fig_dims)\nsns.heatmap(data=beats_pivot, ax=ax)","2d502ff1":"#\u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a 50 \u0441\u0430\u043c\u044b\u0445 \u043e\u043f\u0430\u0441\u043d\u044b\u0445 \u0440\u0430\u0439\u043e\u043d\u043e\u0432 \u0432 \u0447\u0430\u0441\u044b \u043f\u0430\u0442\u0440\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\ntop50_beats = patrol_hours.groupby('beat').agg({'date':'count'}).sort_values(by='date',ascending=False).head(50)","8025f7af":"#\u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443\nplt.subplots(figsize=(15,10))\ntop50_beats['date'].plot(kind='barh',grid=True,ax=plt.subplot(111))\nplt.show()","4e9109ea":"#\u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0437 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 50 \u0441\u0430\u043c\u044b\u0445 \u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u0440\u0430\u0439\u043e\u043d\u043e\u0432\ntop50_beats = top50_beats.reset_index()\ntop50_beats_list = top50_beats['beat'].to_numpy()\n#\u0432\u044b\u0432\u043e\u0434\ndisplay(top50_beats_list)","f9d2f713":"#\u043d\u0430\u043f\u0438\u0448\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439 \u043f\u043e \u0442\u0438\u043f\u0430\u043c\nQUERY = \"\"\"\n        SELECT primary_type, COUNT(unique_key)\n        FROM `bigquery-public-data.chicago_crime.crime`\n        GROUP BY primary_type\n        \"\"\"\ndisplay(bq_assistant.estimate_query_size(QUERY))\ncrimes_by_types = bq_assistant.query_to_pandas_safe(QUERY)\ncrimes_by_types = crimes_by_types.rename(columns={'f0_':'crimes_number'})\n#\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ncrimes_by_types","c67f1cb8":"#\u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439\ncrimes_list = crimes_by_types['primary_type'].to_numpy()\n#\u0432\u044b\u0432\u043e\u0434\ndisplay(crimes_list)","a5fe627a":"#\u0432\u0440\u0443\u0447\u043d\u0443\u044e \u0440\u0430\u0441\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439 \u043d\u0430 \u0442\u0435, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u043e\u0442\u0435\u0440\u043f\u0435\u0432\u0448\u0438\u043c \u043d\u0430\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0432\u0440\u0435\u0434, \u0438 \u0442\u0435, \u0433\u0434\u0435 \u044d\u0442\u043e\u0433\u043e \u043d\u0435\u0442\ncrimes_with_violence = ('CRIM SEXUAL ASSAULT','BATTERY','KIDNAPPING','OFFENSE INVOLVING CHILDREN','ASSAULT','WEAPONS VIOLATION','HOMICIDE',\n                           'SEX OFFENSE','CRIMINAL SEXUAL ASSAULT','HUMAN TRAFFICKING','PUBLIC INDECENCY','DOMESTIC VIOLENCE')\ncrimes_without_violence = ('THEFT', 'DECEPTIVE PRACTICE', 'CRIMINAL TRESPASS', 'NARCOTICS', 'OTHER OFFENSE', 'ARSON', 'BURGLARY', 'ROBBERY', 'MOTOR VEHICLE THEFT', \n                          'INTERFERENCE WITH PUBLIC OFFICER','STALKING', 'PUBLIC PEACE VIOLATION', 'CRIMINAL DAMAGE','OBSCENITY', 'GAMBLING', 'LIQUOR LAW VIOLATION',\n                           'NON-CRIMINAL (SUBJECT SPECIFIED)','INTIMIDATION', 'OTHER NARCOTIC VIOLATION','PROSTITUTION', 'CONCEALED CARRY LICENSE VIOLATION',\n                           'NON-CRIMINAL','RITUALISM','NON - CRIMINAL')","f9ae5be5":"#\u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u043e\u0442\u043c\u0435\u0442\u043a\u0438 \u043e \u0442\u043e\u043c, \u043d\u0443\u0436\u043d\u043e \u043b\u0438 \u0434\u043e\u0441\u0442\u0430\u0432\u0430\u0442\u044c \u043e\u0440\u0443\u0436\u0438\u0435 \u043f\u0440\u0438 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u0442\u0438\u043f\u0435 \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u043d\u0435\u043d\u0438\u044f\nfor i in range(len(crimes_by_types)):\n    if crimes_by_types.loc[i,'primary_type'] in crimes_with_violence:\n        crimes_by_types.loc[i,'violent'] = True\n    else:\n        crimes_by_types.loc[i,'violent'] = False\n#\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\ncrimes_by_types","af7bd855":"#\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438 \u0434\u043e\u043b\u044e \u0436\u0435\u0441\u0442\u043e\u043a\u0438\u0445 \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439\nviolent_crimes = crimes_by_types.groupby('violent',as_index=False).agg({'crimes_number':'sum'})\n#\u0432\u044b\u0432\u043e\u0434\ndisplay(violent_crimes)\nprint(\"\u0414\u043e\u043b\u044f \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439 \u0441 \u043f\u0440\u0438\u0447\u0438\u043d\u0435\u043d\u0438\u0435\u043c \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043d\u0430\u0441\u0438\u043b\u0438\u044f \u0436\u0435\u0440\u0442\u0432\u0435: {:.2%}\"\\\n                                                              .format((violent_crimes.query('violent==True')['crimes_number']\/sum(violent_crimes['crimes_number']))[1]))","c9c797fa":"#\u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443\nfig = go.Figure(data=[go.Pie(labels=violent_crimes['violent'], values=violent_crimes['crimes_number'], title='\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439 \u043f\u043e \u043f\u0440\u0438\u0447\u0430\u0441\u0442\u043d\u043e\u0441\u0442\u0438 \u043a \u0436\u0435\u0441\u0442\u043e\u043a\u0438\u043c')])\nfig.show()","2a29f91d":"\u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043c\u044b \u0432\u044b\u044f\u0441\u043d\u0438\u043b\u0438, \u0447\u0442\u043e \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043e\u043f\u0430\u0441\u043d\u044b\u043c\u0438 \u0440\u0430\u0439\u043e\u043d\u0430\u043c\u0438 \u0432 \u0447\u0430\u0441\u044b \u043f\u0430\u0442\u0440\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f: 421, 423, 624, 1112, 1533, 511, 1522, 823, 414, 1834, 621, 2533, 1532, 612, 825, 713, 522, 1531,  512, 321, 1831, 631, 1011, 1121, 712, 1122, 122, 832, 831, 1523, 513, 312, 623, 632, 2534, 324, 523, 725, 1132, 1133, 611, 813, 1524, 412, 2532, 323, 613, 524, 835, 834. \u041d\u0430 \u043d\u0430\u0448 \u0432\u0437\u0433\u043b\u044f\u0434, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043c\u0430\u0448\u0440\u0443\u0442 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u0434\u0430\u043d\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438.","a12655f1":"\u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u043c \u043a \u0432\u044b\u0432\u043e\u0434\u0443, \u0447\u0442\u043e \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u043c \u0434\u043b\u044f \u043f\u0430\u0442\u0440\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0440\u0435\u0436\u0438\u043c \u043f\u0430\u0442\u0440\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f: \u0441 11:00 \u0434\u043e 13:59 \u0438 \u0441 23:00 \u0434\u043e 01:59.","50ba7e80":"# **\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043c\u0430\u0440\u0448\u0440\u0443\u0442**","91b80c8a":"\u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043c\u044b \u043f\u0440\u0438\u0448\u043b\u0438 \u043a \u0432\u044b\u0432\u043e\u0434\u0443, \u0447\u0442\u043e \u0432 27,5% \u0441\u043b\u0443\u0447\u0430\u0435\u0432 \u0440\u043e\u0431\u043e\u0442\u0443-\u043f\u043e\u043b\u0438\u0446\u0435\u0439\u0441\u043a\u043e\u043c\u0443 \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u043e\u0440\u0443\u0436\u0438\u0435. \u0421\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u043f\u0440\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0438, \u0447\u0442\u043e \u0440\u043e\u0431\u043e\u0442 \u043c\u043e\u0436\u0435\u0442 \u043d\u0435\u0441\u0442\u0438 \u0442\u043e\u043b\u044c\u043a\u043e 10 \u0435\u0434\u0438\u043d\u0438\u0446 \u0440\u0430\u0441\u0445\u043e\u0434\u043d\u044b\u0445 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432, \u0446\u0435\u043b\u0435\u0441\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043d\u0430\u0440\u0443\u0447\u043d\u0438\u043a\u0438 \u0438 \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u044b \u0432 \u043f\u0440\u043e\u043f\u043e\u0440\u0446\u0438\u0438 7 \u043d\u0430 3.","f6be210a":"# **\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0442\u0430\u0446\u0438\u044e \u0440\u0430\u0441\u0445\u043e\u0434\u043d\u044b\u043c\u0438 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430\u043c\u0438**","56301f25":"# **\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0432\u0440\u0435\u043c\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0438 \u043a\u043e\u043d\u0446\u0430 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u043e\u0432 \u043f\u0430\u0442\u0440\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f**"}}