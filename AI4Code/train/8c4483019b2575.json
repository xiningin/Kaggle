{"cell_type":{"7a3f55a9":"code","fda82574":"code","9939d77a":"code","28c06271":"code","14de6554":"code","68f5c71f":"code","1304c580":"code","90734b8b":"code","bfb8c722":"code","63f0b5ec":"code","c60e69d8":"code","5a266d5a":"code","fb0f7674":"code","32e8bf63":"code","49c60a50":"code","2df89e03":"code","e0f0f9f7":"code","17701f95":"code","c17edbbe":"code","af0fca88":"code","207edb4b":"code","c94548b8":"code","80dd89af":"code","9611b736":"code","c1290262":"code","1d25be3e":"code","4ebe6b85":"code","1d275b33":"code","cc60a09c":"code","0e2e635e":"code","cc9a4245":"code","d2aa8f12":"code","0d14b875":"code","2b17d453":"code","46faddae":"code","b9ec5142":"code","48661920":"code","5be56f99":"code","0484f1af":"code","6721b47e":"code","99296149":"code","7a6e8b76":"code","45b5a979":"code","97a716fc":"code","58f47b72":"code","d5f3eff3":"code","387d4611":"code","9b3bdb6a":"code","c286ab36":"code","9de037d2":"code","7b15f581":"code","42efb136":"markdown","11f16be7":"markdown","ebe95cd9":"markdown","75a55c10":"markdown","93227d12":"markdown","e4746420":"markdown","b786c8d1":"markdown","4663847d":"markdown","4f942d18":"markdown","bd8176e5":"markdown","9bd84064":"markdown","ac9c6044":"markdown","8c0c21ec":"markdown","794b52d3":"markdown","47fd7275":"markdown","caa687e3":"markdown"},"source":{"7a3f55a9":"!pip install tensorflow-gpu","fda82574":"pip install chart_studio","9939d77a":"!nvidia-smi","28c06271":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px\nimport chart_studio.plotly as py\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.colors import n_colors\nfrom plotly.subplots import make_subplots\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler,MinMaxScaler,LabelEncoder\nfrom sklearn.datasets import load_wine\n\n\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers","14de6554":"wine = pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")","68f5c71f":"wine.head()","1304c580":"wine.isnull().sum","90734b8b":"wine.describe()","bfb8c722":"wine.info()","63f0b5ec":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'fixed acidity', data = wine)","c60e69d8":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'volatile acidity', data = wine)","5a266d5a":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'citric acid', data = wine)","fb0f7674":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'residual sugar', data = wine)","32e8bf63":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'chlorides', data = wine)","49c60a50":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'free sulfur dioxide', data = wine)","2df89e03":"corr = wine.corr()\nfig = plt.figure(figsize = (14,8))\nax = fig.add_subplot(111)\ncax = ax.matshow(corr,cmap='coolwarm', vmin=-1, vmax=1)\nfig.colorbar(cax)\nticks = np.arange(0,len(wine.columns),1)\nax.set_xticks(ticks)\nplt.xticks(rotation=90)\nax.set_yticks(ticks)\nax.set_xticklabels(wine.columns)\nax.set_yticklabels(wine.columns)\nplt.show()","e0f0f9f7":"plt.figure(figsize = (14,8))\ncorr = wine.corr()\nsns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values)","17701f95":"fig = px.imshow(wine)\nfig.show()","c17edbbe":"fig = plt.figure(figsize = (10,6))\nsns.heatmap(wine,cmap='plasma')","af0fca88":"plt.figure(figsize=(12,8))\nsns.distplot(wine,bins=30);","207edb4b":"##Making Quality Data Segmentation we're going to make our data in two categories 0-->bad and 1 --->good in wines\n\nbins = (2,6.5,8)\n\ngroup_names = ['bad','good']\nwine['quality'] = pd.cut(wine['quality'],bins = bins, labels=group_names)","c94548b8":"## encoding the values as binary on the basis of data segmentation\nencode = LabelEncoder()","80dd89af":"wine['quality'] = encode.fit_transform(wine['quality'])","9611b736":"wine['quality'].value_counts()","c1290262":"sns.countplot(wine['quality'])","1d25be3e":"fig = go.Figure(data=[go.Pie(labels=wine['quality'], values=wine['quality'])])\nfig.show()\n\nprint(wine.quality.value_counts())","4ebe6b85":"fig = px.pie(wine, values='alcohol', names='pH')\nfig.show()","1d275b33":"wine.head()","cc60a09c":"wine.quality.unique()","0e2e635e":"wine.shape","cc9a4245":"X = wine.iloc[:,:-1]\ny = wine.iloc[:,-1]","d2aa8f12":"X","0d14b875":"y","2b17d453":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.30,random_state=0)","46faddae":"scaler =  MinMaxScaler()\nX_train=scaler.fit_transform(X_train)\nX_test=scaler.fit_transform(X_test)","b9ec5142":"print(f\"Values of X_train after Normalization {X_train}\")\nprint(\"<-------------------------------------------------------------->\")\nprint(f\"Values of X_test after Normalization {X_test}\")","48661920":"y_train.value_counts()","5be56f99":"y_test.value_counts()","0484f1af":"y_train = y_train.to_numpy()","6721b47e":"y_test = y_test.to_numpy()","99296149":"y_train","7a6e8b76":"y_test","45b5a979":"my_model = tf.keras.models.Sequential([\n  tf.keras.layers.Dense(156,activation='relu'),\n  tf.keras.layers.Dropout(0.30),\n  tf.keras.layers.Dense(116,activation='sigmoid'),\n  tf.keras.layers.Dense(200,activation='relu'),\n  tf.keras.layers.Dropout(0.40),\n  tf.keras.layers.Dense(156,activation='softmax')\n])","97a716fc":"optimiser = tf.keras.optimizers.Adam()\nmy_model.compile (optimizer= optimiser, loss='sparse_categorical_crossentropy', metrics = ['accuracy'])","58f47b72":"X_train.shape","d5f3eff3":"X_train","387d4611":"history = my_model.fit(X_train, y_train,validation_split=0.33, epochs=300, batch_size=16)","9b3bdb6a":"my_model.evaluate(X_test, y_test)","c286ab36":"my_predict = my_model.predict(X_test)\nmy_predict","9de037d2":"np.round(my_predict)","7b15f581":"# list all data in history\nprint(history.history.keys())\n# summarize history for accuracy\nfig = plt.figure(figsize = (10,6))\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()\n# summarize history for loss\nplt.figure(figsize = (10,6))\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()","42efb136":"# Objective\n\nThe aim of this kernel is provide all essential Knowledege to a beginners on **How to build their first Artificial Neural Nets using Tensorflow and Keras?**.In this kernel I am using **Red Wine Quality Dataset** to predict the quality of the wine.\n\nThis kernel is the first part of the Neural Network,on further moving I am going to discuss about various Architecture of the Neural Networks used in Computer Vision and NLP.\n\nPART 1 - <font color=\"blue\">You are on it<\/font><br>\nPART 2 - <font color=\"orange\">Convolutional Neural Network - Comming Soon!!<\/font><br>","11f16be7":"<font size=\"+3\" color=purple ><b> <center><u>Predicting Red Wine Quality Using Neural Nets<\/u><\/center><\/b><\/font>","ebe95cd9":"![image.jpg](attachment:image.jpg)","75a55c10":"## What is Next \u23ed ?\n\n### CNN\n\n<img src=\"https:\/\/media.giphy.com\/media\/YPyrKWNq2FAGaw8QBv\/giphy.gif\">","93227d12":"<font size=\"+2\" color=orange ><b> <center><u>I hope you like \u2764 this kernel, if yes Upvote!!<\/u><\/center><\/b><\/font>","e4746420":"## **Exploratory data analysis**","b786c8d1":"## **Data Visualization**","4663847d":"## Building a Neural Network Using Keras","4f942d18":"### **Segmenting and Encoding the Wine Quality Column Data**","bd8176e5":"## About the Dataset\n\n### **Red Wine Quality**\n\n>The two datasets are related to red and white variants of the Portuguese \"Vinho Verde\" wine. For more details, consult the reference [Cortez et al., 2009]. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).\n\n>These datasets can be viewed as **classification or regression tasks**. The classes are ordered and not balanced (e.g. there are much more normal wines than excellent or poor ones).\n\n*This dataset is also available from the UCI machine learning repository, https:\/\/archive.ics.uci.edu\/ml\/datasets\/wine+quality*\n\n### **What we need to Predict?**\n\n>In this Dataset we need to **predict the quality of the wine based on various features like fixed acidity, volatile acidity, citric acid, residual sugar, density, pH and many more**.\n\n>The quality of the wine has been **graded between 3 to 8 i.e (3,4,5,6,7,8)** as the range increases the quality of the wine increses but we need to do a **Data Segmentation or we need to club them together in a certain range on the basis of bins in Histogram** Plot so I am using a certain intervals and encoding the values which are in the range of (3,6.5] as 0 which is bad quality of wine and (6.5,8] as 1 which is good quality of wine.\n\n**So, lets move further and Import our necessary libraries**\n \n\n","9bd84064":"## Split the Data into Train and Test","ac9c6044":"<img src=\"https:\/\/media.giphy.com\/media\/xSi0vyq0FI6Os\/giphy.gif\">","8c0c21ec":"## **Read Dataset**\n\n**Kaggle Dataset** : [Red Wine Quality](https:\/\/www.kaggle.com\/uciml\/red-wine-quality-cortez-et-al-2009)","794b52d3":"## Feature Scaling","47fd7275":"## **Importing Libraries**","caa687e3":"### From the above count:\n\n1. Their are 1382 Zero's which depicts the bad wine quality\n2. Their are 217 Ones which depicts the good wine quality\n\n>As from the above analysis their are more bad quality wine then good"}}