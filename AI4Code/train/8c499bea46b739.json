{"cell_type":{"691cfb3c":"code","4567fde9":"code","ba759800":"code","1e4558ad":"code","d2dbf38b":"code","b6cb5b13":"code","16024e45":"code","5e862578":"code","1538921c":"code","7a45256e":"code","3489b068":"code","14039491":"code","333fa0cd":"code","e0a8619f":"code","69ec8475":"code","83a38fe0":"code","ebd389fa":"code","8aa84187":"code","5ac1ce4e":"code","62fc4985":"code","dcb36bfe":"code","7c71b79d":"code","908ae7c9":"code","3317ce45":"code","c2557d70":"code","0804723f":"code","01e5d35a":"code","f499d9ea":"code","8fecf474":"code","f55ca133":"code","dec537ff":"code","1f7eb936":"code","4fedfcd0":"code","29cf2f31":"code","73ee7cda":"code","1d3db7d5":"code","5657fe42":"code","a92db09f":"code","19c857ea":"code","abb7c851":"code","9b1eaf6e":"code","ab4721bb":"code","2513c5b6":"code","429fd22b":"code","7e8d788e":"code","2be6e1fd":"code","147754ac":"code","3ed7bb4f":"code","79d43696":"code","5a8c0052":"code","c8b25e14":"code","22da3c24":"code","319f73eb":"code","5f7227fe":"code","855c1bac":"code","228c0904":"code","5a0b0aa6":"code","cbd183ef":"code","ca98a914":"code","e8c84b1c":"code","d3894d4b":"code","b225c017":"code","05d78a49":"code","4affcc8c":"code","e999ab5d":"code","6a889837":"code","745428f0":"code","b8c473ac":"code","f38886a7":"code","bcbeee9e":"code","e1b74062":"code","9d6d5f71":"code","1fc8ba15":"code","d3a852bf":"code","3c0216e6":"code","9cbe49ee":"code","d333c5cb":"code","cb8f741b":"code","f15d3536":"code","6056485d":"code","5b61a86a":"code","94f6380f":"code","0bc03102":"code","3a028678":"code","91988b4f":"code","280b25ee":"code","fa10f7b4":"code","ea12f12b":"code","fcdb8bbb":"code","25a68204":"code","58560a70":"code","69cee654":"code","a7b40142":"code","c67fdde9":"code","5ee1ceb9":"code","e26ab236":"code","1d94d11a":"code","808878de":"code","2be3fbef":"code","d05bb262":"code","adc98990":"code","7a008cc6":"code","de6cf4df":"code","30aeff96":"code","058144a8":"code","3c48214f":"code","97292aad":"code","4b9704cf":"code","476eceaa":"code","f003ea20":"code","b4417cc4":"code","1e48349a":"code","eb848bd3":"code","821e7a72":"code","04a2804a":"code","ed3b834d":"code","7a963daa":"code","f0f8eb79":"code","7573c427":"code","bcd9601a":"code","3c5d2bcd":"code","47a1dc63":"code","e2b540ae":"code","8e6beab2":"code","8d625ff8":"code","becdaffc":"code","8ded5d1f":"code","06adfe9d":"code","90b420ed":"code","fe369c92":"code","f178c555":"code","4a66eace":"code","8a0790bb":"code","90b8fd23":"code","64cb1e7e":"code","4016229e":"code","ce245efa":"code","3aabc4ab":"code","03577ee2":"code","7f1d10d9":"code","397003c6":"code","fa1bad32":"code","060600d1":"code","eb848ca8":"code","fc8989e4":"code","abdf524a":"code","4d56b0e6":"code","d33fd006":"code","ff9b3163":"code","c3651653":"code","7f9d6d9e":"code","896b3154":"code","640cef66":"code","c8604a7b":"code","79c81c69":"code","eab49cb0":"markdown","3ae09f0f":"markdown","ac18b27a":"markdown","143685a2":"markdown","8ebdbe86":"markdown","2188913f":"markdown","95fe1dd0":"markdown","dfb5445c":"markdown","6f3dc983":"markdown","0c8a869f":"markdown","1b929479":"markdown","1b76d11d":"markdown","935cdfb8":"markdown","59c7bfb9":"markdown","249b6682":"markdown","1e6c263b":"markdown","31b711ef":"markdown","26760932":"markdown","db71c80c":"markdown","cfb08ec4":"markdown","3dc4b319":"markdown","4e78bf3e":"markdown","fdd46310":"markdown","fb81aa0a":"markdown","dad612f1":"markdown","07656431":"markdown","4e98c7b2":"markdown","4062ce0d":"markdown","01f935ee":"markdown","6970055a":"markdown","3a282305":"markdown","54715ed0":"markdown","7ccf46c8":"markdown","72f404a3":"markdown","c0ad0f87":"markdown","1ebf9075":"markdown","a127ed59":"markdown","0682b097":"markdown","8cb84fcc":"markdown","1d7caf08":"markdown","8fb691c9":"markdown","dcd1927a":"markdown","9a3194ff":"markdown","f1f85bbc":"markdown","196d3f3f":"markdown","3943dea3":"markdown","f361453f":"markdown","b33023af":"markdown","a72cac4d":"markdown","fdc9e410":"markdown","dfe46c46":"markdown","f7bbcf2a":"markdown","4641d0e2":"markdown","d2e11c4f":"markdown","98422f56":"markdown"},"source":{"691cfb3c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","4567fde9":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ba759800":"# Local\n# df = pd.read_csv('Data\/train.csv',date_parser=True)\n# Kaggle\ndf = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/train.csv',date_parser=True)","1e4558ad":"df.head()","d2dbf38b":"df","b6cb5b13":"df.isnull().sum()","16024e45":"df.info()","5e862578":"df['date_time'] = pd.to_datetime(df['date_time'])","1538921c":"df.info()","7a45256e":"df","3489b068":"plt.figure(figsize=(20,10))\nplt.title('Plot of carbon monoxide over time')\nsns.lineplot(data=df,x='date_time', y = 'target_carbon_monoxide');","14039491":"plt.figure(figsize=(20,10))\nplt.title('Plot of Benzene over time')\nsns.lineplot(data=df,x='date_time', y = 'target_benzene');","333fa0cd":"plt.figure(figsize=(20,10))\nplt.title('Plot of Nitrogen Oxides over time')\nsns.lineplot(data=df,x='date_time', y = 'target_nitrogen_oxides');","e0a8619f":"plt.figure(figsize=(20,20))\nsns.heatmap(data=df.corr(), annot=True)","69ec8475":"sns.pairplot(data=df)","83a38fe0":"df.columns","ebd389fa":"X = df.drop(['target_carbon_monoxide','target_benzene', 'target_nitrogen_oxides','date_time'],axis=1)\ny_target_carbon_monoxide = df['target_carbon_monoxide']\ny_target_benzene = df['target_benzene']\ny_target_nitrogen_oxides = df['target_nitrogen_oxides']","8aa84187":"from sklearn.model_selection import train_test_split\n","5ac1ce4e":"from sklearn.preprocessing import StandardScaler\n","62fc4985":"from sklearn.linear_model import Ridge\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVR, LinearSVR\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom xgboost import XGBRegressor, XGBRFRegressor\n","dcb36bfe":"def fit_and_score(models, X_train, X_test, y_train, y_test):\n    np.random.seed(42)\n    \n    model_scores = {}\n    \n    for name, model in models.items():\n        model.fit(X_train,y_train)\n        model_scores[name] = model.score(X_test,y_test)\n\n    model_scores = pd.DataFrame(model_scores, index=['Score']).transpose()\n    model_scores = model_scores.sort_values('Score')\n        \n    return model_scores","7c71b79d":"models = {'Ridge' : Ridge(),\n         'Lasso': Lasso(),\n         'ElasticNet': ElasticNet(),\n         'KNeighborsRegressor': KNeighborsRegressor(),\n         'SVR': SVR(),\n         'DecisionTreeRegressor': DecisionTreeRegressor(),\n         'RandomForestRegressor':RandomForestRegressor(),\n         'GradientBoostingRegressor': GradientBoostingRegressor(),\n         'AdaBoostRegressor': AdaBoostRegressor(),\n        'XGBRegressor': XGBRegressor(objective='reg:squarederror'),\n        'XGBRFRegressor': XGBRFRegressor(objective='reg:squarederror')\n         }","908ae7c9":"X_train_1, X_test_1, y_train_1, y_test_1 = train_test_split(X, y_target_carbon_monoxide, test_size=0.3, random_state=42)","3317ce45":"baseline_model_scores_carbon_monoxide = fit_and_score(models, X_train_1, X_test_1, y_train_1, y_test_1)","c2557d70":"baseline_model_scores_carbon_monoxide","0804723f":"plt.figure(figsize=(20,10))\nsns.barplot(data=baseline_model_scores_carbon_monoxide.T)\nplt.title('Baseline Model Accuracy Score for target_carbon_monoxide')\nplt.xticks(rotation=90);","01e5d35a":"X_train_2, X_test_2, y_train_2, y_test_2 = train_test_split(X, y_target_benzene, test_size=0.3, random_state=42)","f499d9ea":"baseline_model_scores_target_benzene = fit_and_score(models, X_train_2, X_test_2, y_train_2, y_test_2)","8fecf474":"baseline_model_scores_target_benzene","f55ca133":"plt.figure(figsize=(20,10))\nsns.barplot(data=baseline_model_scores_target_benzene.T)\nplt.title('Baseline Model Accuracy Score for target_carbon_monoxide')\nplt.xticks(rotation=90);","dec537ff":"X_train_3, X_test_3, y_train_3, y_test_3 = train_test_split(X, y_target_nitrogen_oxides, test_size=0.3, random_state=42)","1f7eb936":"baseline_model_scores_target_nitrogen_oxides = fit_and_score(models, X_train_3, X_test_3, y_train_3, y_test_3)","4fedfcd0":"baseline_model_scores_target_nitrogen_oxides","29cf2f31":"baseline_model_scores_carbon_monoxide","73ee7cda":"baseline_model_scores_target_benzene","1d3db7d5":"baseline_model_scores_target_nitrogen_oxides","5657fe42":"X_train_2, X_test_2, y_train_2, y_test_2 = train_test_split(X, y_target_benzene, test_size=0.3, random_state=42)","a92db09f":"from sklearn.model_selection import RandomizedSearchCV\nfrom warnings import filterwarnings","19c857ea":"filterwarnings('ignore')","abb7c851":"def randomesearch_cv_scores(models, params, X_train, X_test, y_train, y_test):\n    np.random.seed(42)\n    \n    model_rs_scores = {}\n    model_rs_best_param = {}\n    \n    for name, model in models.items():\n        rs_model = RandomizedSearchCV(model,\n                                    param_distributions=params[name],\n                                    scoring='neg_mean_squared_log_error',\n                                      n_iter=20,\n                                    n_jobs=-2,\n                                    cv=5,\n                                    verbose=2)\n        \n        rs_model.fit(X_train,y_train)\n\n        model_rs_scores[name] = rs_model.score(X_test,y_test)\n        model_rs_best_param[name] = rs_model.best_params_\n\n    model_rs_scores = pd.DataFrame(model_rs_scores, index=['neg_mean_squared_log_error'])\n    model_rs_scores = model_rs_scores.transpose().sort_values('neg_mean_squared_log_error')\n        \n    return model_rs_scores, model_rs_best_param","9b1eaf6e":"models = {'RandomForestRegressor': RandomForestRegressor(),\n         'GradientBoostingRegressor': GradientBoostingRegressor()}\nparams = {'RandomForestRegressor': {},\n          'GradientBoostingRegressor': {}\n         }","ab4721bb":"model_baseline_scores_target_benzene, model_baseline_best_param_target_benzene = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_2,\n                                                               X_test_2, \n                                                               y_train_2, \n                                                               y_test_2)","2513c5b6":"model_baseline_scores_target_benzene","429fd22b":"model_baseline_best_param_target_benzene","7e8d788e":"models = {'RandomForestRegressor': RandomForestRegressor(),\n         'GradientBoostingRegressor': GradientBoostingRegressor()}\nparams = {'RandomForestRegressor': {'n_estimators': [50,100,200,300,500],\n                                'max_depth': [None, 2,4,10,20],\n                                'min_samples_split':[2,4,10,20],\n                                'min_samples_leaf': [1,2,5,10,20],\n                                'max_features': ['auto','sqrt', 'log2'],\n                                'max_leaf_nodes': [None, 2,4,10,20],\n                                'bootstrap': [True, False],\n                                'oob_score': [True, False],\n                                'ccp_alpha': [0.0,0.01,0.001]\n                                },\n          'GradientBoostingRegressor': {'loss': ['ls','lad','huber','quantile'],\n                                       'learning_rate': [0.01,0.1,0.2,0.5,1],\n                                       'n_estimators': [50,100,200,300,500],\n                                       'criterion': ['friedman_mse','mse'],\n                                       'min_samples_split':[2,0.2,0.5],\n                                        'min_samples_leaf': [1,0.2,0.5],\n                                        'max_depth': [None, 2,4,10,20],\n                                        'max_features': ['auto','sqrt', 'log2'],\n                                        'alpha': [0.1,0.2,0.5,0.9,1],\n                                        'max_leaf_nodes': [None, 2,4,10,20],\n                                        'ccp_alpha': [0.0,0.01,0.001]\n                                       }\n         }","2be6e1fd":"model_rs_scores_target_benzene_1, model_rs_best_param_target_benzene_1 = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_2,\n                                                               X_test_2, \n                                                               y_train_2, \n                                                               y_test_2)","147754ac":"model_rs_scores_target_benzene_1","3ed7bb4f":"model_rs_best_param_target_benzene_1","79d43696":"models = {'RandomForestRegressor': RandomForestRegressor()}\nparams = {'RandomForestRegressor': {'n_estimators': [45,50,55],\n                                'max_depth': [9,10,11,12,15],\n                                'min_samples_split':[3,4,5,6],\n                                'min_samples_leaf': [3,4,5,6,7],\n                                'max_features': ['log2'],\n                                'max_leaf_nodes': [None],\n                                'bootstrap': [True],\n                                'oob_score': [True],\n                                'ccp_alpha': [0.001,0.005,0.009]\n                                },\n         }","5a8c0052":"model_rs_scores_target_benzene_2, model_rs_best_param_target_benzene_2 = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_2,\n                                                               X_test_2, \n                                                               y_train_2, \n                                                               y_test_2)","c8b25e14":"model_rs_scores_target_benzene_2","22da3c24":"model_rs_best_param_target_benzene_2","319f73eb":"params = {'RandomForestRegressor': {'n_estimators': [42,43,44,45,46,47,48],\n                                'max_depth': [11],\n                                'min_samples_split':[3],\n                                'min_samples_leaf': [3],\n                                'max_features': ['log2'],\n                                'max_leaf_nodes': [None],\n                                'bootstrap': [True],\n                                'oob_score': [True],\n                                'ccp_alpha': [0.0009,0.001,0.002,0.003]\n                                },\n         }","5f7227fe":"model_rs_scores_target_benzene_3, model_rs_best_param_target_benzene_3 = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_2,\n                                                               X_test_2, \n                                                               y_train_2, \n                                                               y_test_2)","855c1bac":"model_rs_scores_target_benzene_3","228c0904":"model_rs_best_param_target_benzene_3","5a0b0aa6":"params = {'RandomForestRegressor': {'n_estimators': [47],\n                                'max_depth': [11],\n                                'min_samples_split':[3],\n                                'min_samples_leaf': [3],\n                                'max_features': ['log2'],\n                                'max_leaf_nodes': [None],\n                                'bootstrap': [True],\n                                'oob_score': [True],\n                                'ccp_alpha': [0,0.0001,0.0005,0.0009]\n                                },\n         }","cbd183ef":"model_rs_scores_target_benzene_4, model_rs_best_param_target_benzene_4 = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_2,\n                                                               X_test_2, \n                                                               y_train_2, \n                                                               y_test_2)","ca98a914":"model_rs_scores_target_benzene_4","e8c84b1c":"model_rs_best_param_target_benzene_4","d3894d4b":"from sklearn.metrics import mean_squared_log_error","b225c017":"target_benzene_model = RandomForestRegressor(oob_score=4,\n                                             n_estimators=47,\n                                             min_samples_split=3,\n                                             min_samples_leaf=3,\n                                             max_leaf_nodes=None,\n                                             max_features='log2',\n                                             max_depth=11,\n                                             ccp_alpha=0,\n                                             bootstrap=True )\ntarget_benzene_model.fit(X_train_2, y_train_2)","05d78a49":"y_pred_target_benzene = target_benzene_model.predict(X_test_2)","4affcc8c":"msle = mean_squared_log_error(y_test_2, y_pred_target_benzene)","e999ab5d":"msle","6a889837":"print(f'Root mean square long error: {np.sqrt(msle)}')","745428f0":"X = df.drop(['target_carbon_monoxide','target_nitrogen_oxides','date_time'],axis=1)\ny_target_carbon_monoxide = df['target_carbon_monoxide']\ny_target_nitrogen_oxides = df['target_nitrogen_oxides']","b8c473ac":"models = {'Ridge' : Ridge(),\n         'Lasso': Lasso(),\n         'ElasticNet': ElasticNet(),\n         'KNeighborsRegressor': KNeighborsRegressor(),\n         'SVR': SVR(),\n         'DecisionTreeRegressor': DecisionTreeRegressor(),\n         'RandomForestRegressor':RandomForestRegressor(),\n         'GradientBoostingRegressor': GradientBoostingRegressor(),\n         'AdaBoostRegressor': AdaBoostRegressor(),\n        'XGBRegressor': XGBRegressor(objective='reg:squarederror'),\n        'XGBRFRegressor': XGBRFRegressor(objective='reg:squarederror')\n         }","f38886a7":"X_train_1, X_test_1, y_train_1, y_test_1 = train_test_split(X, y_target_carbon_monoxide, test_size=0.3, random_state=42)","bcbeee9e":"baseline_model_scores_carbon_monoxide = fit_and_score(models, X_train_1, X_test_1, y_train_1, y_test_1)","e1b74062":"baseline_model_scores_carbon_monoxide","9d6d5f71":"plt.figure(figsize=(20,10))\nsns.barplot(data=baseline_model_scores_carbon_monoxide.T)\nplt.title('Baseline Model Accuracy Score for target_carbon_monoxide')\nplt.xticks(rotation=90);","1fc8ba15":"X_train_3, X_test_3, y_train_3, y_test_3 = train_test_split(X, y_target_nitrogen_oxides, test_size=0.3, random_state=42)","d3a852bf":"baseline_model_scores_target_nitrogen_oxides = fit_and_score(models, X_train_3, X_test_3, y_train_3, y_test_3)","3c0216e6":"baseline_model_scores_target_nitrogen_oxides","9cbe49ee":"plt.figure(figsize=(20,10))\nsns.barplot(data=baseline_model_scores_carbon_monoxide.T)\nplt.title('Baseline Model Accuracy Score for target_nitrogen_oxides')\nplt.xticks(rotation=90);","d333c5cb":"models = {'XGBRegressor': XGBRegressor()}\nparams = {'XGBRegressor': {},\n         }","cb8f741b":"model_base_scores_target_carbon_monoxide, model_base_best_param_target_carbon_monoxide_ = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_1,\n                                                               X_test_1, \n                                                               y_train_1, \n                                                               y_test_1)","f15d3536":"model_base_scores_target_carbon_monoxide","6056485d":"model_base_best_param_target_carbon_monoxide_","5b61a86a":"models = {'XGBRegressor': XGBRegressor()}\nparams = {'XGBRegressor': {'eta': [0.1,0.3,0.5,0.9,1],\n                          'gamma': [0,1,5,10,100,500],\n                          'max_depth': [2,6,10,20,50],\n                          'min_child_weight': [0,1,5,10,20,50],\n                          'max_delta_step': [0,1,5,10,20,50],\n                          'lamda': [0,1],\n                          'alpha':[0,1],\n                          },\n         }","94f6380f":"model_rs_scores_target_carbon_monoxide_1, model_rs_best_param_target_carbon_monoxide_1 = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_1,\n                                                               X_test_1, \n                                                               y_train_1, \n                                                               y_test_1)","0bc03102":"model_rs_scores_target_carbon_monoxide_1","3a028678":"model_rs_best_param_target_carbon_monoxide_1","91988b4f":"params = {'XGBRegressor': {'eta': [0.1,0.01,0.05],\n                          'gamma': [1,2,3],\n                          'max_depth': [15,20,25,30],\n                          'min_child_weight': [30,40,50,70,100],\n                          'max_delta_step': [0],\n                          'lamda': [1],\n                          'alpha':[1],\n                          },\n         }","280b25ee":"model_rs_scores_target_carbon_monoxide_2, model_rs_best_param_target_carbon_monoxide_2 = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_1,\n                                                               X_test_1, \n                                                               y_train_1, \n                                                               y_test_1)","fa10f7b4":"model_rs_scores_target_carbon_monoxide_2","ea12f12b":"model_rs_best_param_target_carbon_monoxide_2","fcdb8bbb":"params = {'XGBRegressor': {'eta': [0.03,0.04,0.05,0.06,0.07,0.08,0.09],\n                          'gamma': [1],\n                          'max_depth': [15,20,25],\n                          'min_child_weight': [25,30,35],\n                          'max_delta_step': [0],\n                          'alpha':[1],\n                          },\n         }","25a68204":"model_rs_scores_target_carbon_monoxide_3, model_rs_best_param_target_carbon_monoxide_3 = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_1,\n                                                               X_test_1, \n                                                               y_train_1, \n                                                               y_test_1)","58560a70":"model_rs_scores_target_carbon_monoxide_3","69cee654":"model_rs_best_param_target_carbon_monoxide_3","a7b40142":"params = {'XGBRegressor': {'eta': [0.08,0.09],\n                          'gamma': [1],\n                          'max_depth': [14,15,16,17,18,19],\n                          'min_child_weight': [28,29,30,31,32,33,34],\n                          'max_delta_step': [0],\n                          'alpha':[1],\n                          },\n         }","c67fdde9":"model_rs_scores_target_carbon_monoxide_4, model_rs_best_param_target_carbon_monoxide_4 = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_1,\n                                                               X_test_1, \n                                                               y_train_1, \n                                                               y_test_1)","5ee1ceb9":"model_rs_scores_target_carbon_monoxide_4","e26ab236":"model_rs_best_param_target_carbon_monoxide_4","1d94d11a":"target_carbon_monoxide_model = XGBRFRegressor(min_child_weight=30,\n                                              max_depth=16,\n                                              max_delta_step=0,\n                                             gamma=1,\n                                                eta=0.09,\n                                             alpha=1)\ntarget_carbon_monoxide_model.fit(X_train_1, y_train_1)","808878de":"y_pred_target_carbon_monoxide = target_carbon_monoxide_model.predict(X_test_1)","2be3fbef":"msle = mean_squared_log_error(y_test_1, y_pred_target_carbon_monoxide)","d05bb262":"msle","adc98990":"print(f'Root mean square long error: {np.sqrt(msle)}')","7a008cc6":"X = df.drop(['target_nitrogen_oxides','date_time'],axis=1)\ny_target_nitrogen_oxides = df['target_nitrogen_oxides']","de6cf4df":"models = {'Ridge' : Ridge(),\n         'Lasso': Lasso(),\n         'ElasticNet': ElasticNet(),\n         'KNeighborsRegressor': KNeighborsRegressor(),\n         'SVR': SVR(),\n         'DecisionTreeRegressor': DecisionTreeRegressor(),\n         'RandomForestRegressor':RandomForestRegressor(),\n         'GradientBoostingRegressor': GradientBoostingRegressor(),\n         'AdaBoostRegressor': AdaBoostRegressor(),\n        'XGBRegressor': XGBRegressor(objective='reg:squarederror'),\n        'XGBRFRegressor': XGBRFRegressor(objective='reg:squarederror')\n         }","30aeff96":"X_train_3, X_test_3, y_train_3, y_test_3 = train_test_split(X, y_target_nitrogen_oxides, test_size=0.3, random_state=42)","058144a8":"baseline_model_scores_target_nitrogen_oxides = fit_and_score(models, X_train_3, X_test_3, y_train_3, y_test_3)","3c48214f":"baseline_model_scores_target_nitrogen_oxides","97292aad":"plt.figure(figsize=(20,10))\nsns.barplot(data=baseline_model_scores_carbon_monoxide.T)\nplt.title('Baseline Model Accuracy Score for target_nitrogen_oxides')\nplt.xticks(rotation=90);","4b9704cf":"models = {'RandomForestRegressor': RandomForestRegressor()}\nparams = {'RandomForestRegressor': {}\n         }","476eceaa":"model_base_scores_target_nitrogen_oxides, model_base_best_param_target_nitrogen_oxides = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_3,\n                                                               X_test_3, \n                                                               y_train_3, \n                                                               y_test_3)","f003ea20":"model_base_scores_target_nitrogen_oxides","b4417cc4":"models = {'RandomForestRegressor': RandomForestRegressor()}\nparams = {'RandomForestRegressor': {'n_estimators': [50,100,200,300,500],\n                                'max_depth': [None, 2,4,10,20],\n                                'min_samples_split':[2,4,10,20],\n                                'min_samples_leaf': [1,2,5,10,20],\n                                'max_features': ['auto','sqrt', 'log2'],\n                                'max_leaf_nodes': [None, 2,4,10,20],\n                                'bootstrap': [True, False],\n                                'oob_score': [True, False],\n                                'ccp_alpha': [0.0,0.01,0.001]\n                                }\n         }","1e48349a":"model_rs_scores_target_nitrogen_oxides_1, model_rs_best_param_target_nitrogen_oxides_1 = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_3,\n                                                               X_test_3, \n                                                               y_train_3, \n                                                               y_test_3)","eb848bd3":"model_rs_scores_target_nitrogen_oxides_1","821e7a72":"model_rs_best_param_target_nitrogen_oxides_1","04a2804a":"params = {'RandomForestRegressor': {'n_estimators': [90,100,110],\n                                'max_depth': [None, 2,3],\n                                'min_samples_split':[8,9,10,11],\n                                'min_samples_leaf': [1],\n                                'max_features': ['sqrt'],\n                                'max_leaf_nodes': [None],\n                                'bootstrap': [True],\n                                'oob_score': [False],\n                                'ccp_alpha': [0.01,0.02,0.009]\n                                }\n         }","ed3b834d":"model_rs_scores_target_nitrogen_oxides_2, model_rs_best_param_target_nitrogen_oxides_2 = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_3,\n                                                               X_test_3, \n                                                               y_train_3, \n                                                               y_test_3)","7a963daa":"model_rs_scores_target_nitrogen_oxides_2","f0f8eb79":"model_rs_best_param_target_nitrogen_oxides_2","7573c427":"params = {'RandomForestRegressor': {'n_estimators': [105,110,115],\n                                'max_depth': [None],\n                                'min_samples_split':[9],\n                                'min_samples_leaf': [1],\n                                'max_features': ['sqrt'],\n                                'max_leaf_nodes': [None],\n                                'bootstrap': [True],\n                                'oob_score': [False],\n                                'ccp_alpha': [0,0.0001,0.007,0.008,0.009]\n                                }\n         }","bcd9601a":"model_rs_scores_target_nitrogen_oxides_3, model_rs_best_param_target_nitrogen_oxides_3 = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_3,\n                                                               X_test_3, \n                                                               y_train_3, \n                                                               y_test_3)","3c5d2bcd":"model_rs_scores_target_nitrogen_oxides_3","47a1dc63":"model_rs_best_param_target_nitrogen_oxides_3","e2b540ae":"params = {'RandomForestRegressor': {'n_estimators': [114,115,120,125],\n                                'max_depth': [None],\n                                'min_samples_split':[9],\n                                'min_samples_leaf': [1],\n                                'max_features': ['sqrt'],\n                                'max_leaf_nodes': [None],\n                                'bootstrap': [True],\n                                'oob_score': [False],\n                                'ccp_alpha': [0.008]\n                                }\n         }","8e6beab2":"model_rs_scores_target_nitrogen_oxides_4, model_rs_best_param_target_nitrogen_oxides_4 = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_3,\n                                                               X_test_3, \n                                                               y_train_3, \n                                                               y_test_3)","8d625ff8":"model_rs_scores_target_nitrogen_oxides_4","becdaffc":"model_rs_best_param_target_nitrogen_oxides_4","8ded5d1f":"params = {'RandomForestRegressor': {'n_estimators': [123,125,130,135],\n                                'max_depth': [None],\n                                'min_samples_split':[9],\n                                'min_samples_leaf': [1],\n                                'max_features': ['sqrt'],\n                                'max_leaf_nodes': [None],\n                                'bootstrap': [True],\n                                'oob_score': [False],\n                                'ccp_alpha': [0.008]\n                                }\n         }","06adfe9d":"model_rs_scores_target_nitrogen_oxides_5, model_rs_best_param_target_nitrogen_oxides_5 = randomesearch_cv_scores(models,\n                                                                params,\n                                                               X_train_3,\n                                                               X_test_3, \n                                                               y_train_3, \n                                                               y_test_3)","90b420ed":"model_rs_scores_target_nitrogen_oxides_5","fe369c92":"model_rs_best_param_target_nitrogen_oxides_5","f178c555":"target_nitrogen_oxides_model = RandomForestRegressor(oob_score=False,n_estimators=125,\n                                                     min_samples_split=9,\n                                                     min_samples_leaf=1,\n                                                     max_leaf_nodes=None,\n                                                     max_features='sqrt',\n                                                     max_depth=None,\n                                                     ccp_alpha=0.008,\n                                                     bootstrap=True)\ntarget_nitrogen_oxides_model.fit(X_train_3,y_train_3)","4a66eace":"y_pred_target_nitrogen_oxides = target_nitrogen_oxides_model.predict(X_test_3)","8a0790bb":"msle = mean_squared_log_error(y_test_3, y_pred_target_nitrogen_oxides)","90b8fd23":"msle","64cb1e7e":"print(f'Root mean square long error: {np.sqrt(msle)}')","4016229e":"df","ce245efa":"def get_preds(df):\n    X = df.drop(['date_time'], axis=1)\n    \n    preds_benzene = target_benzene_model.predict(X)\n    df['target_benzene'] = preds_benzene\n    \n    X = df.drop(['date_time'], axis=1)\n    preds_carbon_monoxide = target_carbon_monoxide_model.predict(X)\n    df['target_carbon_monoxide'] = preds_carbon_monoxide\n    \n    df = df[['date_time','deg_C', 'relative_humidity', 'absolute_humidity', \n           'sensor_1', 'sensor_2','sensor_3',\n           'sensor_4','sensor_5','target_carbon_monoxide','target_benzene']]\n    \n    X = df.drop(['date_time'], axis=1)\n    preds_nitrogen_oxides = target_nitrogen_oxides_model.predict(X)\n    df['target_nitrogen_oxides'] = preds_nitrogen_oxides\n    \n    df = df[['date_time','deg_C', 'relative_humidity', 'absolute_humidity', \n           'sensor_1', 'sensor_2','sensor_3',\n           'sensor_4','sensor_5','target_carbon_monoxide','target_benzene', 'target_nitrogen_oxides']]\n    \n    return df","3aabc4ab":"testing_df = df.drop(['target_carbon_monoxide','target_benzene', 'target_nitrogen_oxides'], axis=1)","03577ee2":"testing_df","7f1d10d9":"testing_df = get_preds(testing_df)","397003c6":"testing_df","fa1bad32":"df","060600d1":"feat_importances_target_benzene_model = pd.DataFrame(target_benzene_model.feature_importances_, index=X_train_2.columns)","eb848ca8":"feat_importances_target_benzene_model","fc8989e4":"plt.figure(figsize=(20,10))\nplt.xticks(rotation=90)\nplt.title('Feature Importances')\nsns.barplot(data= feat_importances_target_benzene_model.sort_values(0).T);","abdf524a":"feat_importances_target_carbon_monoxide_model = pd.DataFrame(target_carbon_monoxide_model.feature_importances_, index=X_train_1.columns)","4d56b0e6":"plt.figure(figsize=(20,10))\nplt.xticks(rotation=90)\nplt.title('Feature Importances')\nsns.barplot(data= feat_importances_target_carbon_monoxide_model.sort_values(0).T);","d33fd006":"feat_importances_target_nitrogen_oxides_model = pd.DataFrame(target_nitrogen_oxides_model.feature_importances_, index=X_train_3.columns)","ff9b3163":"plt.figure(figsize=(20,10))\nplt.xticks(rotation=90)\nplt.title('Feature Importances')\nsns.barplot(data= feat_importances_target_nitrogen_oxides_model.sort_values(0).T);","c3651653":"test_data = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jul-2021\/test.csv\")\ntest_data","7f9d6d9e":"test_data_preds = get_preds(test_data)","896b3154":"test_data_preds","640cef66":"test_data_preds.columns","c8604a7b":"test_data_preds=test_data_preds.drop(['deg_C','relative_humidity','absolute_humidity',\n                       'sensor_1','sensor_2','sensor_3','sensor_4','sensor_5'],axis=1)","79c81c69":"# test_data_preds.to_csv('submission.csv',index=False)","eab49cb0":"## Baseline model with target_benzene and target_carbon_monoxide as an input","3ae09f0f":"#### RS Model 4","ac18b27a":"#### BaseLine Model 1","143685a2":"Since the target_benzene had better scores we will use will on that first by trying to tune the hyperparams.\n1. RandomForestRegressor \t0.975238\n2. GradientBoostingRegressor \t0.976005","8ebdbe86":"# 5. Modelling","2188913f":"we will use the hyperparam of RS 4","95fe1dd0":"### target_carbon_monoxide_model","dfb5445c":"we will turn the hyper params of:\nRandomForestRegressor 0.902264","6f3dc983":"#### RS Model 1","0c8a869f":"### RS Model 3","1b929479":"## Baseline Models and Scores","1b76d11d":"## Import Models","935cdfb8":"### Summary of Baseline modeling ","59c7bfb9":"### target_nitrogen_oxides","249b6682":"Kaggle competitions are incredibly fun and rewarding, but they can also be intimidating for people who are relatively new in their data science journey. In the past, we've launched many Playground competitions that are more approachable than our Featured competitions and thus, more beginner-friendly.\n\nIn order to have a more consistent offering of these competitions for our community, we're trying a new experiment in 2021. We'll be launching month-long tabular Playground competitions on the 1st of every month and continue the experiment as long as there's sufficient interest and participation.\n\nThe goal of these competitions is to provide a fun, and approachable for anyone, tabular dataset. These competitions will be great for people looking for something in between the Titanic Getting Started competition and a Featured competition. If you're an established competitions master or grandmaster, these probably won't be much of a challenge for you. We encourage you to avoid saturating the leaderboard.\n\nFor each monthly competition, we'll be offering Kaggle Merchandise for the top three teams. And finally, because we want these competitions to be more about learning, we're limiting team sizes to 3 individuals.\n\nThe dataset is used for this competition is based on a real dataset, but has synthetic-generated aspects to it. The original dataset deals with predicting air pollution in a city via various input sensor values (e.g., a time series).\n\nGood luck and have fun!\n\nFor ideas on how to improve your score, check out the Intro to Machine Learning and Intermediate Machine Learning courses on Kaggle Learn.","1e6c263b":"## Baseline model with target_benzene as an input","31b711ef":"### target_nitrogen_oxides Hyperparam Tuning","26760932":"### target_nitrogen_oxides","db71c80c":"#### RS Model 3","cfb08ec4":"### Baseline RandomForestRegressor and GradientBoostingRegressor target_benzene","3dc4b319":"## Data Exploration","4e78bf3e":"#### RS Model 4","fdd46310":"# 3. Evalutation\n\nSubmissions are evaluated using the mean column-wise root mean squared logarithmic error.\n\nThe final score is the mean of the RMSLE over all columns, in this case, 3.\n\n## Submission File\n\nFor each ID in the test set, you must predict a probability for the TARGET variable. The file should contain a header and have the following format:\n\n    date_time,target_carbon_monoxide,target_benzene,target_nitrogen_oxides\n    2011-01-01 01:00:00,2.0,10.0,300.0\n    2011-01-01 02:00:00,2.0,10.0,300.0\n    2011-01-01 03:00:00,2.0,10.0,300.0\n    etc.\n","fb81aa0a":"We will use the RS 4 model of the RandomForestRegressor as it is performing the best","dad612f1":"## target_benzene Hyperparam tuning","07656431":"### target_carbon_monoxide","4e98c7b2":"#### RS Model 2","4062ce0d":"#### BaseLine Model 1","01f935ee":"1. Problem definition\n2. Data\n3. Evaluation\n4. Features\n5. Modelling\n6. Putting it all together","6970055a":"we will go with RS 5 model as the hyper params for it provide a better score","3a282305":"#### RS Model 1","54715ed0":"### RS target_benzene model 1","7ccf46c8":"## Evalution of target_carbon_monoxide model","72f404a3":"# 4. Features\n\n## Input \/ Features\n\n1. date_time\n2. deg_C\n3. relative_humidity\n4. absolute_humidity\n5. sensor_1\n6. sensor_2\n7. sensor_3\n8. sensor_4\n9. sensor_5\n\n## Output \/ Label\n10. target_carbon_monoxide\n11. target_benzene\n12. target_nitrogen_oxides","c0ad0f87":"### target_nitrogen_oxides_model","1ebf9075":"### target_benzene","a127ed59":"### RS Model 4","0682b097":"## Evalution of target_benzene model","8cb84fcc":"### target_carbon_monoxide","1d7caf08":"# Feature importances","8fb691c9":"# 2. Data\n\n##Files\n\n    * train.csv - the training data, including the weather data, sensor data, and values for the 3 targets\n    \n    * test.csv - the same format as train.csv, but without the target value; your task is to predict the value for each of these targets.\n    * sample_submission.csv - a sample submission file in the correct format.\n","dcd1927a":"target_carbon_monoxide baseline for:\nXGBRegressor \t0.901986","9a3194ff":"#### RS Model 5","f1f85bbc":"### target_benzene_model","196d3f3f":"# 1. Problem Definition\n\nIn this competition you are predicting the values of air pollution measurements over time, based on basic weather information (temperature and humidity) and the input values of 5 sensors.\n\nThe three target values to you to predict are: target_carbon_monoxide, target_benzene, and target_nitrogen_oxides","3943dea3":"# 6. Putting all together","f361453f":"# TPS Jul 2021","b33023af":"## Evalution of target_nitrogen_oxides model","a72cac4d":"#### RS Model 2","fdc9e410":"### target_nitrogen_oxides","dfe46c46":"#### RS Model 3","f7bbcf2a":"### RS target_benzene model 2","4641d0e2":"## Submission","d2e11c4f":"## Standard Imports","98422f56":"### target_carbon_monoxide Hyperparam Tuning"}}