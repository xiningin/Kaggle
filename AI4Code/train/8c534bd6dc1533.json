{"cell_type":{"03c921d5":"code","b94c7b90":"code","f3131d0d":"code","95edffc7":"code","6d8937a7":"code","bc073bb8":"code","cf018078":"code","5cb54947":"code","ed659e7a":"code","64892c20":"code","bd0a959a":"code","2baa6421":"markdown","5a58cfc2":"markdown","d8582a7f":"markdown","6f21fb56":"markdown","487d20fb":"markdown","9d66457d":"markdown","250d54b8":"markdown","dc236279":"markdown"},"source":{"03c921d5":"import pandas as pd\ndf = pd.read_pickle('..\/input\/preprocessingdata1\/df.pkl')","b94c7b90":"df.info()","f3131d0d":"X_train = df[df.date_block_num < 33].drop(['item_cnt_month'], axis=1)\nY_train = df[df.date_block_num < 33]['item_cnt_month']\nX_valid = df[df.date_block_num == 33].drop(['item_cnt_month'], axis=1)\nY_valid = df[df.date_block_num == 33]['item_cnt_month']\nX_test = df[df.date_block_num == 34].drop(['item_cnt_month'], axis=1)\ndel df","95edffc7":"from xgboost import XGBRegressor\nfrom xgboost import plot_importance\n\nxgb_model = XGBRegressor(\n    n_estimators=300,\n    max_depth = 10,\n    min_child_weight=1, \n    colsample_bytree=0.8, \n    subsample=0.8, \n    eta=0.1,\n#     tree_method='gpu_hist',\n    seed=42)\nxgb_model.fit(X_train, \n              Y_train, \n              eval_metric=\"rmse\", \n              eval_set=[(X_train, Y_train), (X_valid, Y_valid)], \n              verbose=True, \n              early_stopping_rounds=30)","6d8937a7":"from sklearn.ensemble import RandomForestRegressor\nrf_model = RandomForestRegressor(n_estimators=50, max_depth=7, random_state=0, n_jobs=-1)\nrf_model.fit(X_train, Y_train)","bc073bb8":"feature_name = X_train.columns.tolist()\nxgb_Y_valid = xgb_model.predict(X_valid[feature_name]).clip(0, 20)\nrf_Y_valid = rf_model.predict(X_valid[feature_name]).clip(0, 20)\n\nxgb_Y_test = xgb_model.predict(X_test[feature_name]).clip(0, 20)\nrf_Y_test = rf_model.predict(X_test[feature_name]).clip(0, 20)","cf018078":"valid_df = pd.DataFrame(rf_Y_valid, columns=['rf'])\nvalid_df['xgbm'] = xgb_Y_valid\nvalid_df.head(20)","5cb54947":"test_df = pd.DataFrame(rf_Y_test, columns=['rf'])\ntest_df['xgbm'] = xgb_Y_test\ntest_df.head(20)","ed659e7a":"from sklearn.linear_model import Ridge\nridge_model = Ridge(alpha=1.0)\nridge_model.fit(valid_df, Y_valid)","64892c20":"final_ridge_predictions = ridge_model.predict(test_df).clip(0, 20)","bd0a959a":"test = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv')\nstack_submission = pd.DataFrame({\n    \"ID\": test.index, \n    \"item_cnt_month\": final_ridge_predictions \n})\n\n\nstack_submission.to_csv('stack_submission.csv', index=False)\n\nstack_submission.head(10)","2baa6421":"**using ridge regression model for second model**","5a58cfc2":"**get valid, test predict value of two model**","d8582a7f":"**train randomforest model**","6f21fb56":"# Stacking model\n**A simple notebook to train a stacking model**","487d20fb":"**see two output of models**","9d66457d":"**train xgb model**","250d54b8":"# preprocessingData","dc236279":"**output the stack model submission**"}}