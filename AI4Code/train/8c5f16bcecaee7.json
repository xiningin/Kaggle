{"cell_type":{"d4365423":"code","30548c60":"code","78d8319b":"code","5b9a4e06":"code","59f744d5":"code","d7863c90":"code","f2de40de":"code","efb40ddc":"code","792b6a20":"code","491fc0a5":"code","6554ffa6":"code","50a40040":"code","03bc6123":"code","563ad3a1":"code","98a1d990":"code","bf82e4e2":"code","d2f8b339":"code","8558a322":"code","a29fd2b1":"code","867edb52":"code","73d5898f":"code","19fbb3bd":"code","1b369f70":"code","a7456ac2":"code","e80da745":"code","396a3d4a":"code","d246e1c9":"code","658a8946":"code","b481b5b9":"code","7073a13b":"code","6660511d":"code","bd4f9922":"code","4011723e":"code","8ab6306f":"code","a6a8b9d1":"code","2dcb1006":"code","c04fdb5b":"code","cd47035d":"code","4980e809":"code","0106a156":"code","986e17a4":"code","a32a1f8f":"code","fca226dc":"code","9ecaafe5":"code","4cdd96fc":"code","b565edc1":"code","3428a6d8":"code","dd2b9371":"markdown","ccf7c717":"markdown","0b946225":"markdown","e8ecd4e6":"markdown","113c59b5":"markdown","adccb4fe":"markdown","ad839b05":"markdown","c30d190f":"markdown","e0e04c40":"markdown","b54f5e91":"markdown","e89005e1":"markdown","27c02d56":"markdown","d10e7e44":"markdown","a5d37f78":"markdown","dc04efc8":"markdown","2e531a11":"markdown","358d41da":"markdown","38c032fc":"markdown","4e9273ce":"markdown","f5c49f5e":"markdown","d86b3413":"markdown","bc6b74dd":"markdown","6b9f64fd":"markdown","db66dc8c":"markdown","56813498":"markdown","b6ca1b8f":"markdown","630a050a":"markdown","5d20a53b":"markdown","3c48f68b":"markdown","9c2437d6":"markdown"},"source":{"d4365423":"%%time\nimport pandas as pd\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.ensemble import RandomForestClassifier","30548c60":"%%time\nimport os\nprint(os.listdir(\"..\/input\"))\n# Any results you write to the current directory are saved as output.\n\ndf_train = pd.read_csv('..\/input\/train.csv')\ndf_test = pd.read_csv('..\/input\/test.csv')\n\n","78d8319b":"df_train.isnull().sum()","5b9a4e06":"df_train.head(2)","59f744d5":"df_test.isnull().sum()","d7863c90":"df_test.head(2)","f2de40de":"df_train.hist()","efb40ddc":"df_test.hist()","792b6a20":"plt.figure(figsize=(12,5))\nplt.title(\"Distribution of sales - for each item, date and store\")\nax = sns.distplot(df_train['sales'])","491fc0a5":"df_train.date  = pd.to_datetime(df_train.date, format='%Y-%m-%d')","6554ffa6":"df_train['year'] = df_train.date.dt.year\ndf_train['month']=df_train.date.dt.month\ndf_train['day']=df_train.date.dt.day","50a40040":"\ndf_test.date  = pd.to_datetime(df_test.date, format='%Y-%m-%d')\ndf_test['year'] = df_test.date.dt.year\ndf_test['month']=df_test.date.dt.month\ndf_test['day']=df_test.date.dt.day","03bc6123":"df_train['year']=df_train['year'].astype('category')\ndf_train['month']=df_train['month'].astype('category')\ndf_train['day']=df_train['day'].astype('category')\ndf_train['store']=df_train['store'].astype('category')\ndf_train['item']=df_train['item'].astype('category')\ndf_train['sales']=df_train['sales'].astype('category')","563ad3a1":"df_train=df_train.drop(columns='date',axis=1)","98a1d990":"df_train.dtypes","bf82e4e2":"y=pd.DataFrame()\ny['sales']=df_train['sales']\ndf_train=df_train.drop(columns='sales',axis=1)","d2f8b339":"df_train.head(2)","8558a322":"clf = RandomForestClassifier(max_depth=2, random_state=0) ","a29fd2b1":"x=df_train.iloc[:,0:5]   #Splitting input features","867edb52":"clf=clf.fit(x,y)    #Training with RF ","73d5898f":"for name, importance in zip(df_train.columns, clf.feature_importances_):     \n    print(name, \"=\", importance)\n\n    ","19fbb3bd":"features =df_train.columns\nimportances =clf.feature_importances_ \nindices = np.argsort(importances)\n \nplt.title('Feature Importances')\nplt.barh(range(len(indices)), importances[indices], color='g')\nplt.yticks(range(len(indices)), features[indices]) \nplt.xlabel('Relative Importance') \nplt.show()\n","1b369f70":"\ndf_train1=pd.read_csv('..\/input\/train.csv')\npd.value_counts(df_train1.sales).plot(kind='bar', title='Sales distribution');","a7456ac2":"df_train1.head(2)","e80da745":"#converting into date format\ndf_train1.date  = pd.to_datetime(df_train1.date, format='%Y-%m-%d')\ndf_train1['year'] =df_train1.date.dt.year\ndf_train1['month']=df_train1.date.dt.month\ndf_train1['day']=df_train1.date.dt.day","396a3d4a":"# Let us understand the sales data distribution across the stores\nstore_df = df_train1.copy()\nsales_pivoted_df = pd.pivot_table(store_df, index='store', values=['sales','date'], columns='item', aggfunc=np.mean)\n# Pivoted dataframe\ndisplay(sales_pivoted_df)","d246e1c9":"sales_pivoted_df = pd.pivot_table(store_df, index='store', values=['sales','date'], columns='item', aggfunc=np.mean)\nsales_pivoted_df.plot(figsize=(12,12));","658a8946":"pivoted = pd.pivot_table(df_train1, values='sales' , columns='month', index='day')\npivoted","b481b5b9":"pivoted = pd.pivot_table(df_train1, values='sales' , columns='month', index='day')\npivoted.plot(figsize=(12,12));","7073a13b":"df_train1.sales.hist(bins=100, figsize=(14,3))\nplt.xlabel('Sales distribution')\nplt.title('Histogram');","6660511d":"df_train1.store.hist(bins=100, figsize=(14,3))\nplt.xlabel('Sales distribution')\nplt.title('Histogram');","bd4f9922":"df_train1['store'].value_counts()","4011723e":"\n\ndf_raw = pd.read_csv('..\/input\/train.csv', parse_dates=['date'], index_col=['date'])\n#loading training data","8ab6306f":"df_raw.head() #displaying training data head","a6a8b9d1":"date_sales = df_raw.drop(['store','item'], axis=1).copy() ","2dcb1006":"date_sales.get_ftype_counts()","c04fdb5b":"date_sales.head()","cd47035d":"y = date_sales['sales'].resample('MS').mean() #MS-month starting date\n","4980e809":"y['2013':]","0106a156":"y.plot(figsize=(16,5));\nplt.xlabel('Sales ')\nplt.title('Month average sales');","986e17a4":"df_tr1= pd.read_csv('..\/input\/train.csv', parse_dates=['date']) #loading training data","a32a1f8f":"df_tr1.head() #displaying head of traing data","fca226dc":"df_tr1.date  = pd.to_datetime(df_tr1.date, format='%Y-%m-%d')\ndf_tr1['year'] = df_tr1.date.dt.year\ndf_tr1['month']=df_tr1.date.dt.month\ndf_tr1['day']=df_tr1.date.dt.day","9ecaafe5":"df_tr1.groupby('store')['sales'].mean().plot(figsize=(16,5));\nplt.xlabel('Store names ')\n\nplt.title('Total sales average store with respect to stores');","4cdd96fc":"plt.plot(df_tr1.year, df_tr1['sales'],color='lightgreen')\nplt.title('Sales with respect to year')\nplt.ylabel('Sales');\nplt.show()","b565edc1":"sales = df_tr1[['sales']]\nsales.plot(figsize=(20,10), linewidth=5, fontsize=20)\nplt.xlabel('Year ', fontsize=20);\nplt.ylabel('Sales', fontsize=20);","3428a6d8":"sns.lmplot(x='month', y='sales', fit_reg=False, data=df_tr1);","dd2b9371":"### Loading datasets","ccf7c717":"#### Training set","0b946225":"### Unique value counts- store","e8ecd4e6":"### Date splitting","113c59b5":"#### Testing  set histogram","adccb4fe":"### Pivot_table distribution","ad839b05":"### Histogram -Sales distribution","c30d190f":"#### Training data","e0e04c40":"df_tr1.sales.plot(style='m.',kind='kde')\nplt.show()","b54f5e91":"#### pivot_table","e89005e1":"##### Checking type of every columns","27c02d56":"###### dropping store and item columns","d10e7e44":"### Monthly sales distibution","a5d37f78":"### Loading libraries","dc04efc8":"### Moving average","2e531a11":"### Converting into categorical columns","358d41da":"### Missing values imputation","38c032fc":"### Modelling","4e9273ce":"### Total sales average store with respect to stores","f5c49f5e":"#### Testing data","d86b3413":"### Histogram","bc6b74dd":"### Distribution of sales - for each item, date and store","6b9f64fd":"### Sales distributions","db66dc8c":"###### Splitting date column","56813498":"### Feature importance","b6ca1b8f":"### Sales with respect to year","630a050a":"### starting date of month and  sale visualization","5d20a53b":"#### Training data","3c48f68b":"### Pivot table month distributions","9c2437d6":"#### Modelling with  Random forest classifier"}}