{"cell_type":{"8498adbe":"code","563b10e4":"code","ee55bdf4":"code","101bc266":"code","96dbf3ac":"code","3252de7c":"code","8c0e0074":"code","8b8c7f82":"markdown","603ca852":"markdown","8f9cd42e":"markdown","1674d59b":"markdown","c1ba9e0e":"markdown","d63fb77a":"markdown","e147f92b":"markdown","52627510":"markdown"},"source":{"8498adbe":"categories = ['alt.atheism', 'soc.religion.christian',\n             'comp.graphics', 'sci.med']\nfrom sklearn.datasets import fetch_20newsgroups\ntrain_b = fetch_20newsgroups(subset='train',\n   categories=categories, shuffle=True, random_state=42)\ntest_b = fetch_20newsgroups(subset='test',\n   categories=categories, shuffle=True, random_state=42)\n\nprint('size of training set: %s' % (len(train_b['data'])))\nprint('size of validation set: %s' % (len(test_b['data'])))\nprint('classes: %s' % (train_b.target_names))\n\nx_train = train_b.data\ny_train = train_b.target\nx_test = test_b.data\ny_test = test_b.target","563b10e4":"pip install ktrain","ee55bdf4":"import ktrain\nfrom ktrain import text\nMODEL_NAME = 'distilbert-base-uncased'\nt = text.Transformer(MODEL_NAME, maxlen=500, class_names=train_b.target_names)\ntrn = t.preprocess_train(x_train, y_train)\nval = t.preprocess_test(x_test, y_test)\nmodel = t.get_classifier()\nlearner = ktrain.get_learner(model, train_data=trn, val_data=val, batch_size=6)","101bc266":"learner.fit_onecycle(8e-5, 4)","96dbf3ac":"learner.validate(class_names=t.get_classes())","3252de7c":"predictor = ktrain.get_predictor(learner.model, preproc=t)","8c0e0074":"predictor.predict('Jesus Christ is the central figure of Christianity.')","8b8c7f82":"# Text Classification with Hugging Face Transformers in ktrain\n\n## We have using sklearn dataset for document classification\n### we are using 4 categories for demostration purpose\n\n### ['alt.atheism', 'soc.religion.christian','comp.graphics',[](http:\/\/)'sci.med']","603ca852":"### Note :\n\nNote that x_train and x_test are the raw texts that look like this:\n\nx_train = ['I hate this movie.', 'I like this movie.']\nThe labels are arrays in one of the following forms:\n\n### string labels\ny_train = ['negative', 'positive']\n### integer labels\ny_train = [0, 1]  # labels must start from 0 if in integer format\n### multi or one-hot encoded labels\ny_train = [[1,0], [0,1]]","8f9cd42e":"# STEP 2: Train Model","1674d59b":"### We will select the BERT model we want to use \n\n### we will using the preprocessing function to treat train and test data \n\n### get_classifier() will download the BERT model if not available\n\n### finally - we create a learner by giving a suitable batch size","c1ba9e0e":"# STEP 1: Preprocess Data and Build a Transformer Model","d63fb77a":"## We will be using Ktrain + TF2.0 for model building","e147f92b":"# STEP 4: Make Predictions on New Data in Deployment","52627510":"# STEP 3: Evaluate\/Inspect Model"}}