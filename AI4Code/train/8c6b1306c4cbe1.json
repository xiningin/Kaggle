{"cell_type":{"1de3ee59":"code","22a3a5bc":"code","c81f1144":"code","3728c4fc":"code","fb562354":"code","3f93c159":"code","f1f68b88":"code","bc246d6b":"code","2c77383e":"code","eed4da63":"code","eb4e165b":"code","37f0a561":"code","8a416fce":"code","4fdb8076":"code","86f8d01e":"code","190761fc":"code","e090e057":"code","82629586":"code","5a6bd4ee":"code","047d67f5":"code","4caeb486":"markdown","dcf36c04":"markdown","46f873af":"markdown","9bdea423":"markdown","96bdad83":"markdown","8b90d5b5":"markdown","4ed6b3eb":"markdown","63230a6e":"markdown","b4bf7f9f":"markdown","5a1cb480":"markdown","c36458bd":"markdown","67f1a766":"markdown","4a35c6f5":"markdown","aa6a8dde":"markdown"},"source":{"1de3ee59":"\n\nimport numpy as np \nimport pandas as pd \nimport re\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.graph_objects as go\n!pip install pywaffle\n!pip install --upgrade pip\n!pip install squarify\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","22a3a5bc":"df = pd.read_csv('..\/input\/google-play-store-apps\/googleplaystore.csv')\ndf.Installs = df.Installs.str.replace('+' , '')\ndf.Installs = df.Installs.str.replace(',' , '')\ndf.dropna(inplace = True) \n \n\n\n#dropping duplicates\ndf = df.drop_duplicates(subset='App', keep=\"first\")\n\ndf.Installs = df.Installs.astype('float').astype('int')\ndf.head(5)\n","c81f1144":"df1 = df.groupby(['Category'])['Installs'].sum().sort_values(ascending = False).reset_index()\n\n\n","3728c4fc":"from pywaffle import Waffle\nsns.set_context(\"notebook\")\n\nfig = plt.figure(\n    FigureClass=Waffle, \n    rows=10, \n    columns = 24,\n    figsize = (20, 10),\n    values=df1.Installs\/1000000000, \n    labels= list(df1.Category),\n    legend={'loc': 'upper left', 'bbox_to_anchor': (1.05, 1)},\n    starting_location='NW'\n    \n)\nfig.set_facecolor('#EEEEEE')\n#plt.title('Installations Distribution of Categories', size = 20)\nplt.show()\n ","fb562354":"dfp = df.groupby(['Category'])['Installs'].sum().sort_values(ascending = False).reset_index()\n\n\ncategory = list(dfp.Category)\ninstalls = list(dfp.Installs)\n\nfig= go.Figure(go.Treemap(\n    \n    labels =  category,\n    parents=[\"\"]*len(category),\n    values =  installs,\n    textinfo = \"label+percent entry\"\n))\nfig.update_layout(\n    autosize=False,\n    width= 800,\n    height=800,)\n\nfig.show()","3f93c159":"df1.Installs = df1.Installs\/1000000000# converting into billions\ndf2 = df1.head(15)\nplt.figure(figsize = (14,10))\nsns.set_context(\"talk\")\nsns.set_style(\"darkgrid\")\n\n\nax = sns.barplot(x = 'Installs' , y = 'Category' , data = df2 )\nax.set_xlabel('No. of Installations in Billions')\nax.set_ylabel('')\nax.set_title(\"Most Popular Categories in Play Store\", size = 20)\n","f1f68b88":"df3 = df1.tail(15)\nsns.set_context(\"talk\")\n\nplt.figure(figsize = (14,10))\nax = sns.barplot(x = 'Installs' , y = 'Category' , data = df3 )\nax.set_xlabel('No. of Installations in Billions')\nax.set_ylabel('')\nax.set_title(\"Least Popular Categories in Play Store\", size = 20)\n","bc246d6b":"dfa = df.groupby(['Category' ,'App'])['Installs'].sum().reset_index()\n\ndfa = dfa.sort_values('Installs', ascending = False)\n\ndftop = dfa[dfa.Installs == 1000000000 ]\n\n\ndftop.style.set_properties(**{'background-color': 'black',\n                            'color': 'lawngreen',\n                            'border-color': 'white'})","2c77383e":"size = df.groupby(['Category','App'])['Size'].sum().sort_values(ascending = False).reset_index()\n\n# #dropping varies with device\nsize = size[size.Size!='Varies with device']\n#size['new'] = size['Size'].str.extract('(\\w)', expand=True) \n\n\nsize[['n', 'k']] = size.Size.str.extract('([^a-zA-Z]+)([a-zA-Z]+)', expand=True) #extracting numbers and data size \nsize['k'] = size['k'].map({'M': 1000, 'k': 1}) #renmaing k and m \nsize.Size = size.Size.str.replace('+' , '')\nsize.Size = size.Size.str.replace(',' , '')\nsize.dropna(inplace = True) \nsize.n = size.n.astype('float')\nsize['truesize'] = size.n * size.k\n\nsize = size[['Category','App', 'truesize']]   #truesize is in KB\n\nsize = size.sort_values('truesize', ascending = False)\n\nlargesize = size[size.truesize == 100000.0]\n\nlargesize.style.set_properties(**{'background-color': 'black',\n                            'color': 'lawngreen',\n                            'border-color': 'white'})","eed4da63":"largesize.App.unique()","eb4e165b":"sns.set_context(\"talk\")\n\nplt.figure(figsize = (14,10))\n\nax = sns.distplot(size['truesize'])\nax.set_xlabel('App size in KB')\nax.set_title('App Size Distribution')\n","37f0a561":"plt.figure(figsize=(13,10), dpi= 80)\nsns.set_context(\"notebook\")\nax = sns.boxplot(x='truesize', y='Category', data= size , notch=False)\nax.set_title('App Size Distribution ' , size = 20)","8a416fce":"apps = ['GAME', 'COMMUNICATION', 'TOOLS', 'PRODUCTIVITY', 'SOCIAL',\n       'PHOTOGRAPHY','FAMILY', 'VIDEO_PLAYERS' ]","4fdb8076":"dfa.Installs = dfa.Installs\/1000000","86f8d01e":"sns.set_context(\"poster\")\nsns.set_style(\"darkgrid\")\n\nplt.figure(figsize=(40,30))\n\nfor i,app in enumerate(apps):\n    df2 = dfa[dfa.Category == app]\n    df3 = df2.head(5)\n    plt.subplot(4,2,i+1)\n    sns.barplot(data= df3,x= 'Installs' ,y='App' )\n    plt.xlabel('Installation in Millions')\n    plt.ylabel('')\n    plt.title(app,size = 20)\n    \nplt.tight_layout()\nplt.subplots_adjust(hspace= .3)\nplt.show()","190761fc":"\ncolumns = [ 'TRAVEL_AND_LOCAL','NEWS_AND_MAGAZINES','ENTERTAINMENT', 'BOOKS_AND_REFERENCE',\n            'PERSONALIZATION', 'SHOPPING', 'HEALTH_AND_FITNESS', 'SPORTS']\n\nsns.set_context(\"poster\")\nsns.set_style(\"darkgrid\")\n\nplt.figure(figsize=(40,30))\n\nfor i,column in enumerate(columns):\n    df2 = dfa[dfa.Category == column]\n    df3 = df2.head(5)\n    plt.subplot(4,2,i+1)\n    sns.barplot(data= df3,x= 'Installs' ,y='App' )\n    plt.xlabel('Installation in Millions')\n    plt.ylabel('')\n    plt.title(column,size = 20)\n    \nplt.tight_layout()\nplt.subplots_adjust(hspace= .3)\nplt.show()","e090e057":"\nmapps = ['BUSINESS', 'LIFESTYLE', 'MAPS_AND_NAVIGATION', 'FINANCE','WEATHER', 'EDUCATION', 'FOOD_AND_DRINK', 'DATING']\n\nsns.set_context(\"poster\")\nsns.set_style(\"darkgrid\")\n\nplt.figure(figsize=(40,30))\n\nfor i,mapp in enumerate(mapps):\n    df2 = dfa[dfa.Category == mapp]\n    df3 = df2.head(5)\n    plt.subplot(4,2,i+1)\n    sns.barplot(data= df3,x= 'Installs' ,y='App' )\n    plt.xlabel('Installation in Millions')\n    plt.ylabel('')\n    plt.title(mapp,size = 20)\n    \nplt.tight_layout()\nplt.subplots_adjust(hspace= .3)\nplt.show()","82629586":"\nsapps = [ 'ART_AND_DESIGN', 'HOUSE_AND_HOME', 'AUTO_AND_VEHICLES',\n        'COMICS', 'MEDICAL', 'PARENTING', 'BEAUTY',\n       'EVENTS']\n\nsns.set_context(\"paper\")\nsns.set_style(\"darkgrid\")\n\nplt.figure(figsize=(30,30))\n\nfor i,sapp in enumerate(sapps):\n    df2 = dfa[dfa.Category == sapp]\n    df3 = df2.head(5)\n    plt.subplot(4,2,i+1)\n    ax =sns.barplot(data= df3,x= 'Installs' ,y='App' )\n    plt.xlabel('Installation in Millions')\n    plt.ylabel('')\n    plt.title(sapp,size = 20)\n    \nplt.tight_layout()\nplt.subplots_adjust(hspace= .3)\nplt.show()","5a6bd4ee":"rating = df.groupby(['Category','Installs', 'App'])['Rating'].sum().sort_values(ascending = False).reset_index()\n\ntoprating = rating[rating.Rating == 5.0]\n\ntoprating","047d67f5":"plt.figure(figsize=(13,10), dpi= 80)\nsns.set_context(\"notebook\")\nax = sns.boxplot(x='Rating', y='Category', data= rating , notch=False)\n\nax.set_title('Distribution of App Ratings' , size = 20)\n","4caeb486":"# **List of Apps which has the largest size** (**100 MB**)\n\nHungry Shark Evolution , Car Crash III Beam DH Real Damage Simulator 2018 ,Miami crime simulator ,Stickman Legends: Shadow Wars\n\nMini Golf King - Multiplayer Game ,The Walking Dead: Our World    **(Category \"GAME')**\n\nTalking Babsy Baby: Baby Games    **(Category Lifestyle)**\n\nDraft Simulator for FUT 18  , Ultimate Tennis     **(Category SPORT)**\n\nGangster Town: Vice District , SimCity BuildIt  **(Category Family)**\n\nNavi Radiography Pro       **(Category Medical)**\n       \nVi Trainer      **(Category Health & Fitness)**\n\n\nPost Bank  **(Category Finance)**","dcf36c04":"**Top 5 most installed Apps in Each Category**","46f873af":"Installation Distribution by Categories","9bdea423":"# Apps with largest Number of Installations","96bdad83":"**List of Apss which has 1 billion + installations** \n\nGoogle ,Google Drive, Google Chrome  Fast  Secure , Google+ ,Google Photos ,Google Play Games ,Google Play Books ,Google News ,Hangouts\n\nGmail ,Google Street View ,Google Play Movies & TV ,Maps - Navigate & Explore , YouTube  **(Apps owned by Google)**\n\nFacebook ,WhatsApp Messenger , Instagram ,Messenger \u2013 Text and Video Chat for Free **(Apps owned by Facebook)**\n\nSkype - free IM & video calls  **(owned by Microsoft)**\n       \nSubway Surfers  **(owned by SYBO GAMES)**\n       \n","8b90d5b5":"# **Inference: **","4ed6b3eb":"**Percentage Distribution**","63230a6e":" **With almost 14  Billion Installations **GAME** is the most popular Category in Google App store**","b4bf7f9f":"# **Conclusion**","5a1cb480":"# **Objectives**\n\n1.To find the Most Popular Category.\n\n2.To find the App with largest num of installs.\n\n3.to find the App with largest size .\n","c36458bd":"**There are 271 Apps Which have 5.0 rating**","67f1a766":"1  'GAME ' is the Most Popular Category with almost 14 billion Installations.\n\n2  There are 20 Apps which have installed for than 1 billion times. out of these  14 are owned by google ittself and 4 are owned by Facebook.\n\n3  There are  14 Apps with largest size of 100 mb , out of those 6 are from 'GAME' Category","4a35c6f5":"** Out of all the categories \"GAME\" has the most number of Installations. Number of Installations is directly proportional to the popularity of the App , hence Games is the most popular Category **","aa6a8dde":"The reason why google app installation are higher is they are preinstalled in all of the androids."}}