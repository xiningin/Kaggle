{"cell_type":{"f6770cea":"code","feac7458":"code","28131675":"code","caea9868":"code","f243702b":"code","62884ac6":"code","0f5acfb9":"code","f9555555":"code","1d6bada1":"code","38ee12cc":"code","141ba4ea":"code","67e668df":"code","219806ff":"code","38765df8":"code","f0db95da":"code","e74d3734":"code","2e076b7e":"code","b5751704":"code","84c9205a":"code","949ae66d":"code","c658ba85":"code","c24cd868":"markdown"},"source":{"f6770cea":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","feac7458":"covid=pd.read_csv('\/kaggle\/input\/covid19-in-india\/covid_19_india.csv')","28131675":"covid.head()","caea9868":"covid.info()","f243702b":"covid.isnull().sum()","62884ac6":"covid.head()","0f5acfb9":"df = covid.loc[(covid['State\/UnionTerritory'] == 'Kerala')]","f9555555":"df.head(10)","1d6bada1":"import seaborn as sns","38ee12cc":"sns.countplot(x='ConfirmedIndianNational',data=df)","141ba4ea":"import plotly.offline as py\nimport plotly.graph_objs as go","67e668df":"Cured_chart = go.Scatter(x=df['Date'], y=df['Cured'], name= 'Cured Rate')\nDeaths_chart = go.Scatter(x=df['Date'], y=df['Deaths'], name= 'Deaths Rate')\npy.iplot([Cured_chart,Deaths_chart])","219806ff":"df1=df[['Confirmed']]\ndf1 = df1.values","38765df8":"train_size = int(len(df1) * 0.80)\ntest_size = len(df1) - train_size\ntrain, test = df1[0:train_size,:], df1[train_size:len(df1),:]\nprint(len(train), len(test))","f0db95da":"def create_dataset(dataset, look_back=1):\n    dataX, dataY = [], [] \n    for i in range(len(dataset)-look_back-1):\n        a = dataset[i:(i+look_back), 0]\n        dataX.append(a)\n        dataY.append(dataset[i + look_back, 0])\n    return np.array(dataX), np.array(dataY)","e74d3734":"look_back = 2\ntrainX, trainY = create_dataset(train, look_back=look_back)\ntestX, testY = create_dataset(test, look_back=look_back)\n#trainX","2e076b7e":"from sklearn.linear_model import LinearRegression\nmodel=LinearRegression()","b5751704":"model.fit(trainX,trainY)","84c9205a":"predict1=model.predict(testX)","949ae66d":"df = pd.DataFrame({'Actual': testY.flatten(), 'Predicted': predict1.flatten()})\ndf","c658ba85":"df.plot(kind='bar',figsize=(16,10))","c24cd868":"##### Taking only Kerala State"}}