{"cell_type":{"715c1063":"code","bb157977":"code","9fe9bcd5":"code","5c5afaed":"code","2f7ca8a8":"code","39bed025":"code","e96195fa":"code","1957a740":"code","9ae939ba":"code","ffb687ef":"code","4b113f93":"code","f06a0f64":"code","0911dd58":"markdown","e4eeeb84":"markdown","2c076b54":"markdown","25984c4a":"markdown","8909f00a":"markdown","b5e8a930":"markdown","8b4375a3":"markdown","3acd952b":"markdown","d19a894b":"markdown","b26a748d":"markdown","74bab0ae":"markdown","8cf1d4d1":"markdown","68515e96":"markdown"},"source":{"715c1063":"import pandas as pd","bb157977":"df = pd.read_csv('..\/input\/adult.data.csv')\ndf.head()","9fe9bcd5":"# You code here\ndf['sex'].value_counts()","5c5afaed":"# You code here\nresult = df[(df['sex'] == 'Female')]['age'].mean()\n\nprint(f'Our result is {result}')","2f7ca8a8":"# You code here\ngerman_citizens = df[(df['native-country'] == 'Germany')]['native-country'].value_counts()\nlength = len(df.index)\n\nprint(f\"The percentage is of german citizens is {german_citizens \/ length * 100}\")","39bed025":"# You code here\nimport math as m\n\nsmall_pp = df[(df['salary'] == '>50K')]['age'].mean()\n\nsumm = 0\n\nfor i in df.index:\n    if df['salary'][i] == '>50K':\n        summ += (df['age'][i] - small_pp)**2\n\nsigma = m.sqrt(summ \/ len(df.index))\n\nprint(f\"Our result is {sigma}\")","e96195fa":"# You code here\n\ndf[(df['salary'] == '>50K')]['education'].value_counts()\n\n#The answer is no ","1957a740":"# You code here\nmax_aie_age = df[(df['race'] == 'Amer-Indian-Eskimo')]['age'].max()\nprint(\"Max age is \", max_aie_age)\n\ncolumns_to_show = ['sex', 'race']\n\ndf.groupby(['age'])[columns_to_show].describe()","9ae939ba":"# You code here\n\n#df[(df['marital-status'] == startswith('Married'))]['marital-status'].value_counts()\nmarried = 0\nno_married = 0\nfor ind in df.index:\n    if df['salary'][ind] == '>50K':\n        if df['marital-status'][ind].startswith('Married'):\n            married += 1\n        else:\n            no_married += 1\n    \n    \npopulation = len(df.index)\n        \n        \nprint(f\"Married is {married} and no-married is {no_married}\")\n\nprint(f\"Married population is {married \/ population} and no-married population is {no_married \/ population}\")\n","ffb687ef":"df['marital-status'].value_counts()","4b113f93":"# You code here\n\nmax_result = df['hours-per-week'].max()\nnr_of_person = 0\nnr_of_person_50k = 0\n\n\nfor i in df.index:\n    if df['hours-per-week'][i] == max_result:\n        nr_of_person += 1\n        if df['salary'][i] == '>50K':\n            nr_of_person_50k += 1\n            \n\nprint('max_result',max_result)\nprint(\"nr_of_person\",nr_of_person)\nprint(\"nr_of_person_50k\",nr_of_person_50k)\nprint(f\"The percentage is {nr_of_person_50k \/ nr_of_person}\")","f06a0f64":"# You code here\n\nmy_list = []\n\nsome_list = list(df['native-country'].unique())\n\nfor i in range(len(some_list)):\n    my_list.append(df[(df['native-country'] == some_list[i])]['hours-per-week'].mean())\n    \nprint('my_list',my_list)\nprint(\"some_list\",some_list)","0911dd58":"**3. What is the percentage of German citizens (*native-country* feature)?**","e4eeeb84":"**8. Among whom is the proportion of those who earn a lot (>50K) greater: married or single men (*marital-status* feature)? Consider as married those who have a *marital-status* starting with *Married* (Married-civ-spouse, Married-spouse-absent or Married-AF-spouse), the rest are considered bachelors.**","2c076b54":"<center>\n<img src=\"https:\/\/habrastorage.org\/files\/fd4\/502\/43d\/fd450243dd604b81b9713213a247aa20.jpg\">\n    \n## [mlcourse.ai](mlcourse.ai) \u2013 Open Machine Learning Course \n\n<center>Author: [Yury Kashnitskiy](http:\/\/yorko.github.io) <br>\nTranslated and edited by [Sergey Isaev](https:\/\/www.linkedin.com\/in\/isvforall\/), [Artem Trunov](https:\/\/www.linkedin.com\/in\/datamove\/), [Anastasia Manokhina](https:\/\/www.linkedin.com\/in\/anastasiamanokhina\/), and [Yuanyuan Pao](https:\/\/www.linkedin.com\/in\/yuanyuanpao\/) <br>All content is distributed under the [Creative Commons CC BY-NC-SA 4.0](https:\/\/creativecommons.org\/licenses\/by-nc-sa\/4.0\/) license.","25984c4a":"**6. Is it true that people who earn more than 50K have at least high school education? (*education \u2013 Bachelors, Prof-school, Assoc-acdm, Assoc-voc, Masters* or *Doctorate* feature)**","8909f00a":"**9. What is the maximum number of hours a person works per week (*hours-per-week* feature)? How many people work such a number of hours, and what is the percentage of those who earn a lot (>50K) among them?**","b5e8a930":"**In this task you should use Pandas to answer a few questions about the [Adult](https:\/\/archive.ics.uci.edu\/ml\/datasets\/Adult) dataset. (You don't have to download the data \u2013 it's already here). Choose the answers in the [web-form](https:\/\/docs.google.com\/forms\/d\/1uY7MpI2trKx6FLWZte0uVh3ULV4Cm_tDud0VDFGCOKg). This is a demo version of an assignment, so by submitting the form, you'll see a link to the solution .ipynb file.**","8b4375a3":"**2. What is the average age (*age* feature) of women?**","3acd952b":"Unique values of all features (for more information, please see the links above):\n- `age`: continuous.\n- `workclass`: Private, Self-emp-not-inc, Self-emp-inc, Federal-gov, Local-gov, State-gov, Without-pay, Never-worked.\n- `fnlwgt`: continuous.\n- `education`: Bachelors, Some-college, 11th, HS-grad, Prof-school, Assoc-acdm, Assoc-voc, 9th, 7th-8th, 12th, Masters, 1st-4th, 10th, Doctorate, 5th-6th, Preschool.\n- `education-num`: continuous.\n- `marital-status`: Married-civ-spouse, Divorced, Never-married, Separated, Widowed, Married-spouse-absent, Married-AF-spouse.\n- `occupation`: Tech-support, Craft-repair, Other-service, Sales, Exec-managerial, Prof-specialty, Handlers-cleaners, Machine-op-inspct, Adm-clerical, Farming-fishing, Transport-moving, Priv-house-serv, Protective-serv, Armed-Forces.\n- `relationship`: Wife, Own-child, Husband, Not-in-family, Other-relative, Unmarried.\n- `race`: White, Asian-Pac-Islander, Amer-Indian-Eskimo, Other, Black.\n- `sex`: Female, Male.\n- `capital-gain`: continuous.\n- `capital-loss`: continuous.\n- `hours-per-week`: continuous.\n- `native-country`: United-States, Cambodia, England, Puerto-Rico, Canada, Germany, Outlying-US(Guam-USVI-etc), India, Japan, Greece, South, China, Cuba, Iran, Honduras, Philippines, Italy, Poland, Jamaica, Vietnam, Mexico, Portugal, Ireland, France, Dominican-Republic, Laos, Ecuador, Taiwan, Haiti, Columbia, Hungary, Guatemala, Nicaragua, Scotland, Thailand, Yugoslavia, El-Salvador, Trinadad&Tobago, Peru, Hong, Holand-Netherlands.   \n- `salary`: >50K,<=50K","d19a894b":"4-5. What are the mean and standard deviation of age for those who earn more than 50K per year (*salary* feature) and those who earn less than 50K per year?","b26a748d":"**7. Display age statistics for each race (*race* feature) and each gender (*sex* feature). Use *groupby()* and *describe()*. Find the maximum age of men of *Amer-Indian-Eskimo* race.**","74bab0ae":"# <center> Assignment #1 (demo)\n## <center>  Exploratory data analysis with Pandas\n","8cf1d4d1":"**10. Count the average time of work (*hours-per-week*) for those who earn a little and a lot (*salary*) for each country (*native-country*). What will these be for Japan?**","68515e96":"**1. How many men and women (*sex* feature) are represented in this dataset?** "}}