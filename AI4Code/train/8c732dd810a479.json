{"cell_type":{"031e7a3e":"code","58e81d5c":"code","573856a7":"code","75269aac":"code","e9f350e1":"code","d3cb2136":"code","017a5698":"code","ff97d151":"code","61beda87":"code","9235afd6":"code","328be4ef":"code","5b0577c1":"code","0be93696":"code","c2ce12c7":"code","ded2e28e":"code","7acb010b":"code","d9004893":"code","53abe750":"code","896b743f":"code","76953a2d":"code","a77272cd":"code","6a5fcc43":"code","8f83968c":"code","239e3dc4":"code","b7040f6e":"code","6f43b684":"code","ae031076":"code","cd82ee3f":"code","0ef315cb":"code","2211f3e9":"code","b97df1d0":"code","5433be0d":"code","9f4f8526":"code","ef707bd1":"markdown","c96b4482":"markdown"},"source":{"031e7a3e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","58e81d5c":"data = pd.read_csv('..\/input\/pokemon.csv')","573856a7":"data.columns","75269aac":"data = pd.read_csv('..\/input\/pokemon.csv')\ndata.set_index(\"#\", inplace = True)\ndata.head()","e9f350e1":"data = pd.read_csv('..\/input\/pokemon.csv')\ndata.set_index([\"#\",\"Name\"], inplace=True, append = True, drop =False)\ndata.head()","d3cb2136":"data = pd.read_csv('..\/input\/pokemon.csv')\ndata.set_index([\"#\",\"Name\"], inplace=True, append = False, drop =True)\ndata.head()","017a5698":"data = pd.read_csv('..\/input\/pokemon.csv')\ndata[\"Defense\"][5]\n# you may use this code incase\ndata.Defense[5]","ff97d151":"data.loc[5,[\"Defense\"]]","61beda87":"data[[\"Attack\",\"Defense\",\"HP\"]]\ndata.tail(10)","9235afd6":"# Difference between selecting columns: series and dataframes\nprint(type(data[\"Speed\"])) #Series\nprint(type(data[[\"Speed\"]])) #DataFrame","328be4ef":"# select all columns for rows of index values 0 and 10\ndata.loc[[0, 10], :]","5b0577c1":"data.loc[5,['Type 1','Type 2','HP']]\n#only Type 1,Type 2, HP value for 5. row","0be93696":"data.loc[1:5,'Type 1':'Speed']","c2ce12c7":"data.loc[[1,5,7,10],'Speed']","ded2e28e":"data.loc[1:20,:'Defense']","7acb010b":"value = data.Attack > 160\n#print(value)\ndata[value]","d9004893":"#Now use two filter\nfilter_one = data.Legendary == True\nfilter_two = data.Attack > 160\ndata[filter_one & filter_two]\n\n","53abe750":"data.Name[data.Attack<25]","896b743f":"def f(n):\n    return n+50\ndata.Defense.apply(f)","76953a2d":"data.Defense.apply(lambda n:n\/5)","a77272cd":"data['New_Column'] = data.Attack+data.Defense\ndata.head()","6a5fcc43":"print(data.index.name)","8f83968c":"data.index.name=\"index\"\ndata.head(8)","239e3dc4":"data_new = data.copy()\ndata_new.index = range(0,1600,2)\ndata_new.head()","b7040f6e":"dic = {\"color\":[\"red\",\"green\",\"blue\",\"pink\"],\"mean\":[\"k\u0131rm\u0131z\u0131\",\"ye\u015fil\",\"mavi\",\"pembe\"],\"year\":[\"1994\",\"1950\",\"1985\",\"2000\"]}\ndf = pd.DataFrame(dic)\ndf","6f43b684":"df.pivot(index = \"year\",columns = \"color\",values = \"mean\")","ae031076":"a = df.set_index([\"color\",\"mean\"])\na","cd82ee3f":"a.unstack(level=0)","0ef315cb":"a.unstack(level=1)","2211f3e9":"b = a.swaplevel(0,1)\nb","b97df1d0":"pd.melt(a,id_vars=\"year\",value_vars=[\"color\",\"mean\"])\n","5433be0d":"data.groupby(\"HP\").mean().head()\n","9f4f8526":"data.groupby(\"HP\").Speed.max().head()","ef707bd1":"Pandas set_index() is a method to set a List, Series or Data frame as index of a Data Frame.\n\nSYNTAX\n\nDataFrame.set_index(keys, drop=True, append=False, inplace=False, verify_integrity=False)\n\nPARAMETERS\n\nkeys: Column name or list of column name.\n\ndrop: Boolean value which drops the column used for index if True.\n\nappend: Appends the column to existing index column if True.\n\ninplace: Makes the changes in the dataframe if True.\n\nverify_integrity: Checks the new index column for duplicates if True.\n\n[https:\/\/www.geeksforgeeks.org\/python-pandas-dataframe-set_index\/](http:\/\/)\n\n","c96b4482":"We can select specific ranges of our data in both the row and column directions using either label or integer-based indexing.\n\nloc: indexing via labels or integers\n\niloc: indexing via integers"}}