{"cell_type":{"cd60612d":"code","8171be67":"code","29407fee":"code","7368a035":"code","6b5f742e":"code","4762591b":"code","72a38bec":"code","c2ce7105":"code","72cdd4fa":"code","9bedca8d":"code","44b6af5e":"code","7a32cd35":"code","b280b25f":"code","0864ecf5":"code","696442ee":"code","09a4de4f":"code","6c3b7bc2":"code","e4a7c708":"code","68b8b72c":"code","e1a80214":"code","0622febf":"code","5842a2dc":"code","091faada":"code","43827347":"code","5d4e3434":"code","acefb249":"markdown","2a658a07":"markdown","a2d38535":"markdown","e059b27c":"markdown","e2fec52e":"markdown","0d0577a4":"markdown","6b0215dd":"markdown","886a1adf":"markdown","a8c21d74":"markdown","b3eb4c8b":"markdown","579072aa":"markdown","31aa720b":"markdown"},"source":{"cd60612d":"import numpy as np \nimport pandas as pd\nimport matplotlib\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline \nfrom wordcloud import WordCloud, STOPWORDS\nfrom nltk.sentiment import SentimentIntensityAnalyzer\nfrom textblob import TextBlob\nimport warnings\nwarnings.simplefilter(\"ignore\")","8171be67":"data_df = pd.read_csv(\"..\/input\/reddit-netflix\/NetflixBestOf_reddit.csv\")","29407fee":"data_df.head()","7368a035":"data_df.info()","6b5f742e":"def missing_data(data):\n    total = data.isnull().sum()\n    percent = (data.isnull().sum()\/data.isnull().count()*100)\n    tt = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n    types = []\n    for col in data.columns:\n        dtype = str(data[col].dtype)\n        types.append(dtype)\n    tt['Types'] = types\n    return(np.transpose(tt))","4762591b":"missing_data(data_df)","72a38bec":"def show_wordcloud(data, title=\"\"):\n    text = \" \".join(t for t in data.dropna())\n    stopwords = set(STOPWORDS)\n    stopwords.update([\"t\", \"co\", \"https\", \"amp\", \"U\", \"fuck\", \"fucking\"])\n    wordcloud = WordCloud(stopwords=stopwords, scale=4, max_font_size=50, max_words=500,background_color=\"black\").generate(text)\n    fig = plt.figure(1, figsize=(16,16))\n    plt.axis('off')\n    fig.suptitle(title, fontsize=20)\n    fig.subplots_adjust(top=2.3)\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.show()","c2ce7105":"show_wordcloud(data_df['title'], title = 'Prevalent words in titles')","72cdd4fa":"show_wordcloud(data_df['body'], title = 'Prevalent words in post bodies')","9bedca8d":"# borrowed from https:\/\/www.kaggle.com\/pashupatigupta\/sentiments-transformer-vader-embedding-bert\nsia = SentimentIntensityAnalyzer()\ndef find_sentiment(post):\n    if sia.polarity_scores(post)[\"compound\"] > 0:\n        return \"Positive\"\n    elif sia.polarity_scores(post)[\"compound\"] < 0:\n        return \"Negative\"\n    else:\n        return \"Neutral\"       ","44b6af5e":"def plot_sentiment(df, feature, title):\n    counts = df[feature].value_counts()\n    percent = counts\/sum(counts)\n\n    fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12, 5))\n\n    counts.plot(kind='bar', ax=ax1, color='green')\n    percent.plot(kind='bar', ax=ax2, color='blue')\n    ax1.set_ylabel(f'Counts : {title} sentiments', size=12)\n    ax2.set_ylabel(f'Percentage : {title} sentiments', size=12)\n    plt.suptitle(f\"Sentiment analysis: {title}\")\n    plt.tight_layout()\n    plt.show()","7a32cd35":"data_df['title_sentiment'] = data_df['title'].apply(lambda x: find_sentiment(x))\nplot_sentiment(data_df, 'title_sentiment', 'Title')","b280b25f":"show_wordcloud(data_df.loc[data_df['title_sentiment']=='Positive', 'title'], title = 'Prevalent words in titles (Positive sentiment)')","0864ecf5":"show_wordcloud(data_df.loc[data_df['title_sentiment']=='Negative', 'title'], title = 'Prevalent words in titles (Negative sentiment)')","696442ee":"show_wordcloud(data_df.loc[data_df['title_sentiment']=='Neutral', 'title'], title = 'Prevalent words in titles (Neutral sentiment)')","09a4de4f":"df = data_df.loc[~data_df.body.isna()]\ndf['body_sentiment'] = df['body'].apply(lambda x: find_sentiment(x))\nplot_sentiment(df, 'body_sentiment', 'Body')","6c3b7bc2":"show_wordcloud(df.loc[df['body_sentiment']=='Positive', 'body'], title = 'Prevalent words in body (Positive sentiment)')","e4a7c708":"show_wordcloud(df.loc[df['body_sentiment']=='Negative', 'body'], title = 'Prevalent words in body (Negative sentiment)')","68b8b72c":"show_wordcloud(df.loc[df['body_sentiment']=='Neutral', 'body'], title = 'Prevalent words in body (Neutral sentiment)')","e1a80214":"def find_sentiment_polarity_textblob(post):\n    blob = TextBlob(post)\n    polarity = 0\n    for sentence in blob.sentences:\n        polarity += sentence.sentiment.polarity\n    return polarity\n\ndef find_sentiment_subjectivity_textblob(post):\n    blob = TextBlob(post)\n    subjectivity = 0\n    for sentence in blob.sentences:\n        subjectivity += sentence.sentiment.subjectivity\n    return subjectivity","0622febf":"data_df['title_sentiment_polarity'] = data_df['title'].apply(lambda x: find_sentiment_polarity_textblob(x))\ndata_df['title_sentiment_subjectivity'] = data_df['title'].apply(lambda x: find_sentiment_subjectivity_textblob(x))","5842a2dc":"def plot_sentiment_textblob(df, feature, title):\n    polarity = df[feature+'_sentiment_polarity']\n    subjectivity = df[feature+'_sentiment_subjectivity']\n\n    fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12, 5))\n\n    polarity.plot(kind='kde', ax=ax1, color='magenta')\n    subjectivity.plot(kind='kde', ax=ax2, color='green')\n    ax1.set_ylabel(f'Sentiment polarity : {title}', size=12)\n    ax2.set_ylabel(f'Sentiment subjectivity: {title}', size=12)\n    plt.suptitle(f\"Sentiment analysis (polarity & subjectivity): {title}\")\n    plt.tight_layout()\n    plt.show()","091faada":"plot_sentiment_textblob(data_df, \"title\", 'Title')","43827347":"df['body_sentiment_polarity'] = df['body'].apply(lambda x: find_sentiment_polarity_textblob(x))\ndf['body_sentiment_subjectivity'] = df['body'].apply(lambda x: find_sentiment_subjectivity_textblob(x))","5d4e3434":"plot_sentiment_textblob(df, \"body\", 'Body')","acefb249":"### Body","2a658a07":"# Analysis preparation\n\nWe initialize the packages that we will use in the analysis.","a2d38535":"# Sentiment analysis\n\n## With nltk SentimentIntensityAnalyzer","e059b27c":"Body of posts is missing in approximatively half of the data.","e2fec52e":"# Introduction\n\nThe primary purpose of [\/r\/NetflixBestOf](https:\/\/www.reddit.com\/r\/NetflixBestOf\/) is to shitpost about Breaking Bad. Reposts are not only allowed, but are encouraged to some extent. The front page of this subreddit is meant to be a living representation of quality content on Netflix and you might see the same submissions multiple times. The mods are leaving it up to the community to utilize downvotes if they feel that reposts are too excessive. We do not link to other subreddits\n\n<center><img src=\"https:\/\/www.technobezz.com\/files\/uploads\/2020\/06\/reddit-4.pngg\" width=600><\/img><\/center>\n\n### Inspiration comes from Gabriel Preda Analysis https:\/\/www.kaggle.com\/gpreda\/wallstreetbets-reddit-posts-analysis. Thanks to give him credits. \ud83d\udc4f","0d0577a4":"We also look to things like data quality, for example missing data.","6b0215dd":"### Title","886a1adf":"We read and glimpse the data.","a8c21d74":"# Data visualization\n\n\nWe will use wordclouds to identify the most frequent words in the titles and body of the posts.\n\nFor understanding some of the frequent used terms, it will be useful to consult this resource: [r\/subredditoftheday stats](https:\/\/subredditstats.com\/r\/subredditoftheday)\n\nSome examples (from the resource mentioned above):  \npersonajes (4486.1)\ndetalles (4306.6)\nciencia (4306.6)\nwell-made (3588.8)\nencapsulated (3588.8)\nsimmilar (3588.8)\nmindhunter (3400)\naward-winning (3076.2)\ndise\u00f1o (3076.2)\nre-watched (2691.6)\nsensationalism (2153.3)\nwelll (2153.3)\njammies (2153.3)\nbioweapon (2153.3)\nxrays (2153.3)\nmightily (2153.3)\nartifical (2153.3)\ngritted (2153.3)\neleventh (2153.3)\n|7 (2153.3)\nconspicuously (2153.3)","b3eb4c8b":"## Title","579072aa":"## Body","31aa720b":"## With TextBlob"}}