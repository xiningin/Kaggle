{"cell_type":{"b4dccada":"code","64a8242c":"code","653445b7":"code","525b5a29":"code","263091c7":"code","51209c19":"code","ec8e403d":"code","f20ba75b":"code","a6b828a6":"code","50aee03d":"code","7f6bd443":"code","9c92506a":"code","0d198fec":"code","d10541ab":"markdown","5f537103":"markdown","38372521":"markdown","296bea06":"markdown","1022dba4":"markdown","efaab1c2":"markdown","3665ef58":"markdown"},"source":{"b4dccada":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","64a8242c":"train_df = pd.read_csv('\/kaggle\/input\/1056lab-airbnb-price-predction\/train.csv', index_col=0)\ntrain_df","653445b7":"test_df = pd.read_csv('\/kaggle\/input\/1056lab-airbnb-price-predction\/test.csv', index_col=0)\ntest_df","525b5a29":"df = pd.concat([train_df.drop('price', axis=1), test_df])\ndf","263091c7":"df = pd.concat([df, pd.get_dummies(df['neighbourhood_group'])], axis=1)\ndf = df.drop('neighbourhood_group', axis=1)\ndf","51209c19":"df = pd.concat([df, pd.get_dummies(df['neighbourhood'])], axis=1)\ndf = df.drop('neighbourhood', axis=1)\ndf","ec8e403d":"df = pd.concat([df, pd.get_dummies(df['room_type'])], axis=1)\ndf = df.drop('room_type', axis=1)\ndf","f20ba75b":"df = df.drop(['name', 'host_id', 'host_name','last_review', 'reviews_per_month'], axis=1)\ndf","a6b828a6":"nrow, ncol = train_df.shape\nprice_df = train_df[['price']]\ntrain_df = df[:nrow]\ntrain_df = pd.concat([train_df, price_df], axis=1)\ntrain_df","50aee03d":"nrow, ncol = train_df.shape\ntest_df = df[nrow:]\ntest_df","7f6bd443":"import lightgbm as lgb\nX = train_df.drop(['price'], axis=1).to_numpy()\ny = train_df['price'].to_numpy()\nparams = {                                                                                               \n    'boosting_type': 'gbdt',                                                                             \n    'objective': 'regression_l2',                                                                           \n    'metric': 'l2', \n    'num_leaves': 35,        #\u6728\u306e\u5206\u5c90\u306e\u6570\n    'num_iterations':120,    #\u6728\u306e\u6570\n    'learning_rate': 0.05,   #\u5b66\u7fd2\u7387                                                                            \n    'feature_fraction': 1.0,   #\u30c7\u30fc\u30bf\u306e\u7279\u5fb4\u91cf\u306e *100%\u4f7f\u7528\u3059\u308b                                                                           \n    'bagging_fraction': 0.8,                                                                             \n    'bagging_freq': 5,\n     'lambda_l2': 2\n}     \ntrain_data_set = lgb.Dataset(X, y)\ngbm =  lgb.train(params,train_data_set)\n","9c92506a":"X = test_df.to_numpy()\n\np = gbm.predict(X)","0d198fec":"submit_df = pd.read_csv('\/kaggle\/input\/1056lab-airbnb-price-predction\/sampleSubmission.csv')\nsubmit_df['price'] = p\nsubmit_df.to_csv('submission.csv', index=False)","d10541ab":"# Preprocessing","5f537103":"Concatinating the traing data without `price` and the test data in order to preprocess.","38372521":"# Learning a model and predicting","296bea06":"Splitting into training and test.","1022dba4":"Selecting features","efaab1c2":"# Reading the data","3665ef58":"Making dummy variables."}}