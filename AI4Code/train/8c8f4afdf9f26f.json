{"cell_type":{"94657dc4":"code","f9e05e7e":"code","e9d808cd":"code","32da3cc1":"code","82a6b9d3":"code","c4eb736c":"code","371e5142":"code","eb9343bf":"code","e3ff4ba5":"code","44359a29":"code","7c24fb82":"code","ae0703ec":"code","3dc078e7":"code","f8b6195b":"code","f8a6c4f7":"markdown","ab7e0af4":"markdown","04d9cb49":"markdown","0ab94ad8":"markdown","20ff2629":"markdown","b34a72f1":"markdown","fc924a0e":"markdown","739c84a9":"markdown","7fce8995":"markdown","69250e72":"markdown","5ebee39e":"markdown","86c7fdfd":"markdown","e76fcc08":"markdown","eb425c5c":"markdown"},"source":{"94657dc4":"# Importing Libraries\nimport numpy as np\nimport pandas as pd\n%matplotlib inline\nimport matplotlib.pyplot as plt\n","f9e05e7e":"# Loading Dataset\ndf = pd.read_csv('..\/input\/tsf-datasets\/student_scores.csv')","e9d808cd":"df.head()","32da3cc1":"df.describe()","82a6b9d3":"df.isnull().sum()","c4eb736c":"plt.scatter(df['Hours'], df['Scores'], color = 'red')\nplt.title('Hours vs Percentage(%)')\nplt.xlabel('Hours Studied')\nplt.ylabel(\"Percentage Score(%)\")\nplt.show()\n","371e5142":"x = df.iloc[:, :-1].values\ny = df.iloc[:, 1].values\n","eb9343bf":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 0)\n","e3ff4ba5":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nmodel.fit(x_train, y_train)\nprint(\"Model Trained!\")\n","44359a29":"line = model.coef_*x + model.intercept_\nplt.scatter(x, y, color = 'red')\nplt.plot(x, line)\nplt.show()\n","7c24fb82":"print(x_test)\ny_pred = model.predict(x_test)\n","ae0703ec":"df1 = pd.DataFrame({'Actual' : y_test, 'Predicted' : y_pred})\ndf1\n","3dc078e7":"\nhrs = [[3.7]]\npredict = model.predict(hrs)\nprint(\"No. of Hours = {}\".format(hrs))\nprint(\"Predicted Score = {}\".format(predict[0]))\n","f8b6195b":"from sklearn import metrics\nprint('Mean Absolute Error(MAE) :', metrics.mean_absolute_error(y_test, y_pred))\nprint('Mean Squared Error(MSE) :', metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error(RMSE) :', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))\n","f8a6c4f7":"# Importing Libraries","ab7e0af4":"# Training the Model","04d9cb49":"# Making Predictions","0ab94ad8":"# Evaluating the model using Error Parameters","20ff2629":"# Loading Dataset","b34a72f1":"# Task 1: Prediction using Supervised ML\nIn this task, we have to develop a model to predict the percentage of marks a student is expected to score based on the number of hours he\/she studied. This is implemented using Simple Linear Regression involving 2 variables.\n","fc924a0e":"# Actual vs Predicted data Comparison","739c84a9":"# Testing the model with Custom data","7fce8995":"# Preparing the data for Training","69250e72":"# Author : Abhishek Joshi\n    Data Science & Business Analytics Intern (Batch - Feb'21)","5ebee39e":"# Plotting the score distribution","86c7fdfd":"# Splitting Data into Training and Testing sets","e76fcc08":"# Plotting the Regression Line","eb425c5c":"# Checking for Null values in the dataset"}}