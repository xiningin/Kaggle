{"cell_type":{"520913c1":"code","f344fcd4":"code","d78a39e0":"code","e6705a56":"code","604cfbd7":"code","c024be96":"code","d68e6f3c":"code","47353019":"code","5603e516":"markdown","35360bd5":"markdown","e2aaf0fc":"markdown","f4e5833a":"markdown"},"source":{"520913c1":"import numpy as np\nimport pandas as pd\n\nfrom pathlib import Path\ndata_path_benchmark = Path('\/kaggle\/input\/covid19-benchmarks\/')\ndata_path_competition = Path('\/kaggle\/input\/covid19-global-forecasting-week-4\/')\ndata_path_actuals = Path('\/kaggle\/input\/covid19-models-raw-data')\n\n# import os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\nimport matplotlib.pyplot as plt","f344fcd4":"train = pd.read_csv(data_path_actuals \/ 'actuals.csv', index_col='Id')\nwk4_test = pd.read_csv(data_path_competition \/ 'test.csv', index_col='ForecastId')\n\nwk4_preds_fatalities = pd.read_csv(data_path_benchmark \/ 'wk4_preds_fatalities_selected_deduped.csv', index_col='ForecastId')\n\nihme_cols = ['location_name', 'date', 'deaths_mean','deaths_lower', 'deaths_upper']\nihme_1 = pd.read_csv(data_path_benchmark \/ 'ihme_2020_04_13.csv')[ihme_cols]\nihme_2 = pd.read_csv(data_path_benchmark \/ 'ihme_2020_04_16.csv')[ihme_cols]\n\nlanl_cols = ['dates', 'q.50', 'state']\nlanl_1 = pd.read_csv(data_path_benchmark \/ 'lanl_2020_04_12.csv')[lanl_cols]\nlanl_2 = pd.read_csv(data_path_benchmark \/ 'lanl_2020_04_15.csv')[lanl_cols]","d78a39e0":"states = [\n  'Alabama','Alaska','Arizona','Arkansas','California','Colorado',\n  'Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois',\n  'Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland',\n  'Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana',\n  'Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York',\n  'North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania',\n  'Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah',\n  'Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming']","e6705a56":"def plot_fatalities(state):\n\n    fig = plt.figure(figsize=(12,8))\n    ax = plt.axes()\n    \n    # to help with ylim\n    max_preds = []\n\n    # Actual\n    select = (train['Country_Region']=='US') & (train['Province_State']==state)\n    ids = train.loc[select].index.tolist()\n    dates = train.loc[select, 'Date'].values\n    data = train.loc[ids, 'Fatalities'].values\n    plt.plot(dates, data, c='k', label='Actual', linewidth=4)\n    max_preds.append(data[-1])\n\n    # LANL 1\n    lanl_ids = lanl_1['state'] == state\n    dates = lanl_1.loc[lanl_ids, 'dates'].values\n    data = lanl_1.loc[lanl_ids, 'q.50'].values\n    plt.plot(dates, data, label=f'LANL (Apr 12)', c='g', alpha=0.5, linestyle='--')\n    max_preds.append(data[-1])\n    \n    # IHME 1\n    ihme_ids = ihme_1['location_name'] == state\n    dates = ihme_1.loc[ihme_ids, 'date'].values.tolist()\n    data = ihme_1.loc[ihme_ids, 'deaths_mean'].cumsum().values.tolist()\n    start = dates.index('2020-03-15')\n    dates = dates[start:]\n    data = data[start:]\n    plt.plot(dates, data, label=f'IHME (Apr 13)', alpha=0.5, c='b', linestyle='--')\n    max_preds.append(data[-1])\n\n#     # Kaggle Median\n    select = (wk4_test['Country_Region']=='US') & (wk4_test['Province_State']==state)\n    ids = wk4_test.loc[select].index.tolist()\n    dates = wk4_test.loc[select, 'Date'].tolist()\n    data = wk4_preds_fatalities.loc[ids].quantile(0.5, axis=1).values\n#     plt.plot(dates[13:], data[13:], c='r', linestyle='--', label=f'Kaggle Median (Apr 14)') # predictions start on 13th row\n    max_preds.append(data[-1])\n\n    # Top four Week 3 teams\n    subs = ['15210308.csv', '15210199.csv', '15208266.csv', '15210154.csv']\n    data = wk4_preds_fatalities.loc[ids, subs].quantile(0.5, axis=1).values\n    plt.plot(dates[13:], data[13:], c='r', label=f'Kaggle Top 4 Teams (Apr 14)') # predictions start on 13th row\n    max_preds.append(data[-1])\n    \n    # LANL 2\n    lanl_ids = lanl_2['state'] == state\n    dates = lanl_2.loc[lanl_ids, 'dates'].values\n    data = lanl_2.loc[lanl_ids, 'q.50'].values\n    plt.plot(dates, data, label=f'LANL (Apr 15)', c='g')\n    max_preds.append(data[-1])\n    \n    # IHME 2\n    ihme_ids = ihme_1['location_name'] == state\n    dates = ihme_2.loc[ihme_ids, 'date'].values.tolist()\n    data = ihme_2.loc[ihme_ids, 'deaths_mean'].cumsum().values.tolist()\n    start = dates.index('2020-03-15')\n    dates = dates[start:]\n    data = data[start:]\n    plt.plot(dates, data, label=f'IHME (Apr 16)', c='b')\n    max_preds.append(data[-1])\n    \n\n    \n    fig.autofmt_xdate()\n    ax.set_xlim(('2020-04-01', '2020-05-31'))\n    ax.grid(False)\n    plt.xticks(rotation=90)\n    plt.title(f'{state} Fatalities (Cumulative)\\n', fontsize=20)\n\n    ylim = int(np.ceil(max(max_preds) \/ 100.0)) * 100 # round up to nearest 100\n    ax.set_ylim(0, ylim)\n    plt.legend(fontsize=14, loc=2)\n    plt.show()","604cfbd7":"plot_fatalities('Wyoming')","c024be96":"plot_fatalities('Texas')","d68e6f3c":"plot_fatalities('Ohio')","47353019":"for state in states:\n    plot_fatalities(state)","5603e516":"# Plots of all states","35360bd5":"While I was comparing the fatality forecasts from the Kaggle [COVID19 Global Forecasting (Week 4)](https:\/\/www.kaggle.com\/c\/covid19-global-forecasting-week-4\/overview\/description) competition to other models (IHME and LANL), I observed a high degree of variability around which model performed best at the US state livel; it appeared fairly random which model was doing best for each state.\n\nThe key factor for a model's short-term performance was how current the model training data was. A model that had three extra days of training data tended to out-perform other models, or even the same model that was trained three days prior. This strongly suggest these models are missing important dynamics of COVID-19 spread, or that the dynamics are non-linear to a degree that makes long-term prediction nearly impossible.\n\n### Key Takeaways:\n* The performance of models in the short term depends heavily on the last few days of training data (see Wyoming, Texas, and Ohio examples below)\n* It's very difficult say which model is \"best\" at this point (although, the Kaggle models and LANL appear to be more robust)\n* The ability of these models to accurately predict weeks in the future is doubtful, except perhaps within an order of magnitude.\n\n\n### Data Used for Benchmarks\n\nThe data for this notebook contains 3 sets of model:\n1. Two sets of IHME predictions made on April 13 and April 16 2020.\n2. Two sets of LANL predictions made on April 12 and April 15, 2020.\n3. Week 4 of the Kaggle competition selected predictions, made on April 14, 2020.\n\nFor the IHME and LANL prediction, I plot them in the same color, with the previous date using dashed lines.\n\nFor the Kaggle predictions, I inculde the median of all selected submissions (solid red), as well as the predictions from the top 4 teams that did well in the Week 3 competition (thus suggesting they are stronger models).","e2aaf0fc":"## How 3 days drastically changed an IHME prediction\n\nWyoming is a very clear instance of what a small bump can do to the IMHE predictions. The blue dashed line is the prediction on April 13. Becaues the actuals saw a step change increase (albeit relatively small), the IHME model drasically changes it's forecast (blue solid line) when the model was updated 3 days later on April 16.\n\nTexas shows the opposite behavior. Three days of new data, and the IHME predictions are reduced by over a factor of 2x.\n\nAnd finally, Ohio is an example where the April 16 IHME data appears to be doing the best, but it's easy to see that having the latest data gives it an advantage compared to the other models.","f4e5833a":"# All COVID-19 Models Are Wrong: Are any of them useful?"}}