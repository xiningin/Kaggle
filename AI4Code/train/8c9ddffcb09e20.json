{"cell_type":{"3afe97ef":"code","64b4dce5":"code","b3f7d2eb":"code","32c3450a":"code","266c6cd0":"code","e810fd38":"code","97d14bc8":"code","c5e20d9e":"code","e9e5252b":"code","78c4bc9f":"code","0bf732dc":"code","cb694638":"code","c39a6857":"code","1c39ec2f":"code","41bb8250":"code","015c1b5e":"code","6289b2fc":"code","5f175f04":"code","f6982d77":"code","762b4322":"code","b8541eb9":"code","511eb9eb":"code","26a36ff0":"code","355a0afa":"code","8e18b619":"code","6e4655ad":"code","6374838c":"code","93fac155":"code","5a0c6cbc":"code","bd132e8a":"code","5ce23ddc":"code","60d72c69":"code","23a5a3af":"code","3e9514b8":"code","27767cf9":"code","2662bb36":"code","1b4f4de1":"code","86ae02f0":"code","276c4aea":"code","ed876b05":"code","850caaf1":"code","abba0ec2":"code","86683694":"code","539f6019":"code","01f2544c":"code","647f84bc":"code","f46d1517":"code","9ca592ca":"code","8a2cccdd":"code","74b5ba84":"code","1394e214":"code","1e282f90":"code","e720b823":"code","7289d9e3":"code","d21b3592":"code","0ea0405e":"code","e53ee1f9":"code","06ac6fe5":"code","abdb452b":"code","1bae34dd":"code","4f60d2ec":"code","9f55eb08":"code","27fb51db":"code","7e1952e3":"code","b6eda376":"code","ca376d3d":"code","ad559df3":"code","704e6de3":"code","08ff6f37":"code","4d915e10":"code","f27f1752":"code","eed63400":"code","03f939a8":"code","8f3fd9b8":"code","000b6725":"code","7f5396c7":"code","adb05fa7":"code","80887b82":"code","6d7b8898":"code","ad97e3ef":"code","fbcc7e45":"code","6eebba42":"code","7518ecdc":"code","298d0bc5":"code","b47b6eee":"code","bf5b23b2":"code","75deeefe":"code","b421efec":"code","d014f842":"code","bf217ff7":"code","1eb046b6":"code","153bfbe1":"code","73ba5e86":"code","484cac7c":"code","28915c0e":"code","c5d1db99":"code","8901b567":"code","f6531bcf":"code","05760647":"code","94680b66":"code","8e4b71ce":"markdown","154cc930":"markdown","b756c876":"markdown","069dabea":"markdown","454b569f":"markdown","67c096c0":"markdown","7e1a25c7":"markdown","34e11621":"markdown","f92ed53d":"markdown","bb44ebda":"markdown","fa393c03":"markdown","d9b9fd12":"markdown","a4381ca4":"markdown","3720be50":"markdown","245a2727":"markdown","f2a55250":"markdown","c8f90638":"markdown","a89c1d83":"markdown","1dadcc75":"markdown","6bd80b53":"markdown","a1f77d25":"markdown","e0537c92":"markdown","de2e76a4":"markdown"},"source":{"3afe97ef":"1 + 5","64b4dce5":"4 * 4\n","b3f7d2eb":"16 \/ 4","32c3450a":"2 ** 4","266c6cd0":"4 % 2","e810fd38":"5 % 2","97d14bc8":"(2 + 3) * (5 + 5)","c5e20d9e":"# Can not start with number or special characters\nname_of_var = 2","e9e5252b":"x = 2\ny = 3","78c4bc9f":"z = x + y","0bf732dc":"z","cb694638":"'single quotes'","c39a6857":"\"double quotes\"","1c39ec2f":"\" wrap lot's of other quotes\"","41bb8250":"x = 'hello'","015c1b5e":"print(x)","6289b2fc":"num = 12\nname = 'Sam'","5f175f04":"print('My number is: {one}, and my name is: {two}'.format(one=num,two=name))","f6982d77":"print('My number is: {}, and my name is: {}'.format(num,name))","762b4322":"[1,2,3]","b8541eb9":"['hi',1,[1,2]]","511eb9eb":"my_list = ['a','b','c']","26a36ff0":"my_list.append('d')","355a0afa":"my_list","8e18b619":"my_list[0]","6e4655ad":"my_list[1]","6374838c":"my_list[1:]","93fac155":"my_list[:1]","5a0c6cbc":"my_list[0] = 'NEW'","bd132e8a":"my_list","5ce23ddc":"nest = [1,2,3,[4,5,['target']]]","60d72c69":"nest[3]","23a5a3af":"nest[3][2]","3e9514b8":"nest[3][2][0]","27767cf9":"d = {'key1':'item1','key2':'item2'}","2662bb36":"d","1b4f4de1":"d['key1']","86ae02f0":"True and False","276c4aea":"True or False","ed876b05":"t = (1,2,3)","850caaf1":"t[0]","abba0ec2":"t[0] = 'NEW'","86683694":"{1,2,3}","539f6019":"{1,2,3,1,2,1,2,3,3,3,3,2,2,2,1,1,2}","01f2544c":"1 > 2","647f84bc":"1 < 2","f46d1517":"1 >= 1","9ca592ca":"1 <= 4","8a2cccdd":"1 == 1","74b5ba84":"'hi' == 'bye'","1394e214":"(1 > 2) and (2 < 3)","1e282f90":"(1 > 2) or (2 < 3)","e720b823":"(1 == 2) or (2 == 3) or (4 == 4)","7289d9e3":"if 1 < 2:\n    print('Yep!')","d21b3592":"if 1 < 2:\n    print('first')\nelse:\n    print('last')","0ea0405e":"if 1 > 2:\n    print('first')\nelse:\n    print('last')","e53ee1f9":"if 1 == 2:\n    print('first')\nelif 3 == 3:\n    print('middle')\nelse:\n    print('Last')","06ac6fe5":"seq = [1,2,3,4,5]","abdb452b":"for item in seq:\n    print(item)","1bae34dd":"for item in seq:\n    print('Yep')","4f60d2ec":"for jelly in seq:\n    print(jelly+jelly)","9f55eb08":"i = 1\nwhile i < 5:\n    print('i is: {}'.format(i))\n    i = i+1","27fb51db":"range(5)","7e1952e3":"for i in range(5):\n    print(i)","b6eda376":"list(range(5))","ca376d3d":"x = [1,2,3,4]","ad559df3":"out = []\nfor item in x:\n    out.append(item**2)\nprint(out)","704e6de3":"[item**2 for item in x]","08ff6f37":"def my_func(param1='default'):\n    \"\"\"\n    Docstring goes here.\n    \"\"\"\n    print(param1)","4d915e10":"my_func","f27f1752":"my_func()","eed63400":"my_func('new param')","03f939a8":"my_func(param1='new param')","8f3fd9b8":"def square(x):\n    return x**2","000b6725":"out = square(2)","7f5396c7":"print(out)","adb05fa7":"def times2(var):\n    return var*2","80887b82":"times2(2)","6d7b8898":"lambda var: var*2","ad97e3ef":"seq = [1,2,3,4,5]","fbcc7e45":"map(times2,seq)","6eebba42":"list(map(times2,seq))","7518ecdc":"list(map(lambda var: var*2,seq))","298d0bc5":"filter(lambda item: item%2 == 0,seq)","b47b6eee":"list(filter(lambda item: item%2 == 0,seq))","bf5b23b2":"st = 'hello my name is Sam'","75deeefe":"st.lower()","b421efec":"st.upper()","d014f842":"st.split()","bf217ff7":"tweet = 'Go Sports! #Sports'","1eb046b6":"tweet.split('#')","153bfbe1":"tweet.split('#')[1]","73ba5e86":"d","484cac7c":"d.keys()","28915c0e":"d.items()","c5d1db99":"lst = [1,2,3]","8901b567":"lst.pop()","f6531bcf":"lst","05760647":"'x' in [1,2,3]","94680b66":"'x' in ['x','y','z']","8e4b71ce":"# Data types\n\n### Numbers","154cc930":"# list comprehension","b756c876":"# Comparison Operators","069dabea":"# Strings\n","454b569f":"# methods","67c096c0":"# Dictionaries","7e1a25c7":"# Logic Operators","34e11621":"# for Loops","f92ed53d":"# map and filter","bb44ebda":"# lambda expressions","fa393c03":"# Tuples ","d9b9fd12":"# Printing\n","a4381ca4":"\n\n\n\nThis notebook will just go through the basic topics in order:\n\n* Data types\n    * Numbers\n    * Strings\n    * Printing\n    * Lists\n    * Dictionaries\n    * Booleans\n    * Tuples \n    * Sets\n* Comparison Operators\n* if, elif, else Statements\n* for Loops\n* while Loops\n* range()\n* list comprehension\n* functions\n* lambda expressions\n* map and filter\n* methods","3720be50":"# Booleans","245a2727":"# Sets","f2a55250":"# Thanks !! ;)","c8f90638":"# range()","a89c1d83":"# functions","1dadcc75":"# Lists","6bd80b53":"# Python Crash Course For Data Science Beginners\n\nIf there are any recommendations\/changes you would like to see in this notebook, please leave a comment. Any feedback\/constructive criticism would be genuinely appreciated. \n\n**This notebook is always a work in progress. So, please stay tuned for more to come.**\n\nIf you like this notebook or find this notebook helpful, Please feel free to **UPVOTE** and\/or **leave a comment**.","a1f77d25":"# while Loops","e0537c92":"# Variable Assignment","de2e76a4":"# if,elif, else Statements"}}