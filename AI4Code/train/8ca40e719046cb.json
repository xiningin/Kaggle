{"cell_type":{"b567d4d0":"code","dbc9e823":"code","846772b6":"code","5a8b19a9":"code","308e4760":"code","79df2b2c":"code","0ad0c161":"code","4679c0db":"code","670b6aea":"code","c5f1f071":"code","8169402b":"code","77dcf5a3":"code","fdeb0037":"code","3fc3d96f":"code","b4573d7b":"code","b0cac78e":"code","506926a7":"code","63f2adb9":"code","c6663d00":"markdown","ccabbd61":"markdown","89ad4be6":"markdown","a58d9717":"markdown","157f8c60":"markdown"},"source":{"b567d4d0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns \npd.set_option('display.max_columns', None)\n#pd.set_option('display.max_rows', None)\n\n\ntrain=pd.read_csv('..\/input\/titanic\/train.csv')\ntest=pd.read_csv('..\/input\/titanic\/test.csv')","dbc9e823":"train.head()","846772b6":"plt.figure(figsize=(14,5))\ntarget_values = train['Survived'].value_counts()\nsns.barplot(x=target_values.index, y=target_values.values,linewidth=1.5, facecolor='blue',\n                 errcolor=\".2\", edgecolor=\".2\")\nplt.title(\"Target unique values\", fontdict={'fontsize':20})\nplt.show()","5a8b19a9":"test.shape,train.shape","308e4760":"train[train['Survived']==0].shape,train[train['Survived']==1].shape\n","79df2b2c":"train.describe()","0ad0c161":"k = 10\nf,ax = plt.subplots(figsize=(11, 11))\ncols = train.corr().nlargest(k, 'Survived')['Survived'].index\ncm = np.corrcoef(train[cols].values.T)\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","4679c0db":"train.isnull().sum()","670b6aea":"y=train.pop('Survived')\nid_=train.pop('PassengerId')\nid_test=test.pop('PassengerId')","c5f1f071":"\nsampling_strategy = { 1: 342, 0: 342}\nfrom imblearn.under_sampling import RandomUnderSampler\nrus = RandomUnderSampler(sampling_strategy=sampling_strategy,random_state=42, replacement=True)# fit predictor and target variable\ntrain, y = rus.fit_resample(train, y)","8169402b":"for i,f in enumerate(train.columns):\n\n    if (np.str(train[f].dtype)=='category')|(train[f].dtype=='object'): \n        df_comb = pd.concat([train[f],train[f]],axis=0)\n        df_comb,_ = df_comb.factorize(sort=True)\n        train[f] = df_comb[:len(train)].astype('int16')","77dcf5a3":"for i,f in enumerate(test.columns):\n\n    if (np.str(test[f].dtype)=='category')|(test[f].dtype=='object'): \n        df_comb = pd.concat([test[f],test[f]],axis=0)\n        df_comb,_ = df_comb.factorize(sort=True)\n        test[f] = df_comb[:len(test)].astype('int16')","fdeb0037":"train=train.fillna(train.mean())\ntest=test.fillna(test.mean())","3fc3d96f":"train.head()","b4573d7b":"from catboost import CatBoostClassifier\nmodel = CatBoostClassifier()\nmodel.fit(train, y)","b0cac78e":"from sklearn.model_selection import cross_val_score\n\nscore = cross_val_score(model, train, y)","506926a7":"print('model Score', round(score.mean() * 100, 2).astype(str) + '%')\n#76\n#83.05%","63f2adb9":"sub = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nsub['Survived'] =model.predict(test)\nsub.to_csv(\"submission.csv\",index=False)\nsub.head()","c6663d00":"\n\n* [1. EDA](#1.)\n* [2. Processing](#2.)\n* [3. train](#3.)\n* [4. sub](#4.)\n\n\n","ccabbd61":"\n<a id=\"4.\"><\/a>\n## 4. submission","89ad4be6":"<a id=\"1.\"><\/a>\n## 1. EDA","a58d9717":"\n<a id=\"3.\"><\/a>\n## 3. train","157f8c60":"\n<a id=\"2.\"><\/a>\n## 2. Processing"}}