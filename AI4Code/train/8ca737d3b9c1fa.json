{"cell_type":{"a7bc65a2":"code","054d1ad2":"code","8df4e217":"code","4586ccd2":"code","eb7d1ebe":"code","95f29069":"code","998b724f":"code","98a999fa":"code","5d690ac4":"code","634333c5":"code","f98dcb22":"code","cc79af73":"code","dbccd438":"code","89da80b0":"code","83475f03":"code","b336869c":"code","10e9e4e6":"code","334e353a":"code","264ffa52":"code","6e382bab":"code","9f9abcfd":"code","db37c0f4":"code","d67b5486":"code","30c2b3b4":"code","7a6e683d":"code","a733ac3d":"code","cc01bd4f":"code","07503800":"code","0a0fb7f9":"code","3a5201b0":"code","78456a4a":"code","175b7af4":"code","4b27078e":"code","eaf7e5ac":"code","10eecdb5":"code","ed5a8e57":"code","e9b61d45":"code","4bdc37a4":"markdown","827dc24d":"markdown","b7c58c3e":"markdown","ec7b478c":"markdown","09431f43":"markdown","9da97067":"markdown","0e7ea550":"markdown","d9892faf":"markdown","a99f7df6":"markdown","650d2731":"markdown","7e8b9772":"markdown","ba00fc6a":"markdown","f8fc7744":"markdown","a8ec3a52":"markdown","7be1c1a2":"markdown","5442ffa1":"markdown","8a85f033":"markdown","50f287bd":"markdown","708744c0":"markdown","ec311bdc":"markdown","a6c231dd":"markdown"},"source":{"a7bc65a2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","054d1ad2":"pip install plotly","8df4e217":"import warnings\n\nwarnings.filterwarnings(\"ignore\")","4586ccd2":"df = pd.read_csv('\/kaggle\/input\/pokemon-challenge\/pokemon.csv')","eb7d1ebe":"df","95f29069":"df.info()","998b724f":"df.Generation.unique()","98a999fa":"generation1 = df[df[\"Generation\"] == 1]\ngeneration2 = df[df[\"Generation\"] == 2]\ngeneration3 = df[df[\"Generation\"] == 3]\ngeneration4 = df[df[\"Generation\"] == 4]\ngeneration5 = df[df[\"Generation\"] == 5]\ngeneration6 = df[df[\"Generation\"] == 6]","5d690ac4":"generation1","634333c5":"indexs1 = generation1.index\nindexs2 = generation2.index\nindexs3 = generation3.index\nindexs4 = generation4.index\nindexs5 = generation5.index\nindexs6 = generation6.index","f98dcb22":"generation1[\"Row\"] = indexs1\ngeneration2[\"Row\"] = indexs2\ngeneration3[\"Row\"] = indexs3\ngeneration4[\"Row\"] = indexs4\ngeneration5[\"Row\"] = indexs5\ngeneration6[\"Row\"] = indexs6","cc79af73":"generation1","dbccd438":"import plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\n\n\ntrace1 = go.Scatter( x = generation1.Row,\n                     y = generation1.Attack,\n                     mode = \"lines+markers\",\n                     name = \"Attacks\",\n                     marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                     text = generation1.Name)\ntrace2 = go.Scatter( x = generation1.Row,\n                     y = generation1.Defense,\n                     mode = \"lines+markers\",\n                     name = \"Defense\",\n                     marker = dict(color = 'rgba(80, 26, 80, 0.2)'),\n                     text = generation1.Name)\ndata = [trace1,trace2]\nlayout = dict(title = 'Attack vs Defense of First Generation Pokemons', xaxis = dict(title = 'First Generation Pokemons',ticklen=5,zeroline=False))\nfig = dict(data = data, layout = layout)\niplot(fig)","89da80b0":"trace1 = go.Scatter( x = generation2.Row,\n                     y = generation2.Attack,\n                     mode = \"lines+markers\",\n                     name = \"Attacks\",\n                     marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                     text = generation2.Name)\ntrace2 = go.Scatter( x = generation2.Row,\n                     y = generation2.Defense,\n                     mode = \"lines+markers\",\n                     name = \"Defense\",\n                     marker = dict(color = 'rgba(80, 26, 80, 0.2)'),\n                     text = generation2.Name)\ndata = [trace1,trace2]\nlayout = dict(title = 'Attack vs Defense of Second Generation Pokemons', xaxis = dict(title = 'Second Generation Pokemons',ticklen=5,zeroline=False))\nfig = dict(data = data, layout = layout)\niplot(fig)","83475f03":"trace1 = go.Scatter( x = generation3.Row,\n                     y = generation3.Attack,\n                     mode = \"lines+markers\",\n                     name = \"Attacks\",\n                     marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                     text = generation3.Name)\ntrace2 = go.Scatter( x = generation3.Row,\n                     y = generation3.Defense,\n                     mode = \"lines+markers\",\n                     name = \"Defense\",\n                     marker = dict(color = 'rgba(80, 26, 80, 0.2)'),\n                     text = generation3.Name)\ndata = [trace1,trace2]\nlayout = dict(title = 'Attack vs Defense of Third Generation Pokemons', xaxis = dict(title = 'Third Generation Pokemons',ticklen=5,zeroline=False))\nfig = dict(data = data, layout = layout)\niplot(fig)","b336869c":"generation1","10e9e4e6":"legendary_generation1 = generation1[generation1[\"Legendary\"] == True]\nlegendary_generation1","334e353a":"trace1 = go.Bar( x = legendary_generation1.Name,\n                 y = legendary_generation1.Attack,\n                 name = \"Attacks\",\n                 marker = dict(color = 'rgba(255, 174, 255, 0.5)'),\n                 text = legendary_generation1.Name)\ntrace2 = go.Bar( x = legendary_generation1.Name,\n                 y = legendary_generation1.Defense,\n                 name = \"Defense\",\n                 marker = dict(color = 'rgba(255, 255, 128, 0.5)'),\n                 text = legendary_generation1.Name)\ndata = [trace1, trace2]\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data = data, layout=layout)\niplot(fig)","264ffa52":"df","6e382bab":"number_of_generation1 = df[df[\"Generation\"]==1].count(axis=1)\nnumber_of_generation2 = df[df[\"Generation\"]==2].count(axis=1)\nnumber_of_generation3 = df[df[\"Generation\"]==3].count(axis=1)\nnumber_of_generation4 = df[df[\"Generation\"]==4].count(axis=1)\nnumber_of_generation5 = df[df[\"Generation\"]==5].count(axis=1)\nnumber_of_generation6 = df[df[\"Generation\"]==6].count(axis=1)","9f9abcfd":"number_of_generation1 = len(number_of_generation1)\nnumber_of_generation2 = len(number_of_generation2)\nnumber_of_generation3 = len(number_of_generation3)\nnumber_of_generation4 = len(number_of_generation4)\nnumber_of_generation5 = len(number_of_generation5)\nnumber_of_generation6 = len(number_of_generation6)","db37c0f4":"new_df = pd.DataFrame(np.array([[number_of_generation1,number_of_generation2,number_of_generation3,number_of_generation4,number_of_generation5,number_of_generation6]]))","d67b5486":"new_df","30c2b3b4":"new_df = new_df.T","7a6e683d":"new_df","a733ac3d":"new_df.rename(index={0:'First Generation',1:'Second Generation',2:'Third Generation',3:'Fourth Generation',4:'Fifth Generation',5:'Sixth Generation'},inplace=True)","cc01bd4f":"new_df","07503800":"new_df.rename(columns={0:'Numbers'},inplace=True)","0a0fb7f9":"new_df","3a5201b0":"from plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\n\npie1 = (new_df.Numbers)\nlabels = [x for x in new_df.index.values]\nfig = {\n     \"data\":[\n         {\n             \"values\":pie1,\n             \"labels\":labels,\n             \"domain\":{\"x\":[0, .5]},\n             \"name\":\"Number of Pokemons Generations\",\n             \"hoverinfo\":\"label+percent+name\",\n             \"hole\": .3,\n             \"type\": \"pie\"\n         },\n         \n     ],\n    \"layout\":{\n        \"title\":\"Pokemons Generation Numbers\",\n        \"annotations\": [\n            {\n                \"font\":{\"size\":20},\n                \"showarrow\":False,\n                \"text\": \"Number of Pokemons\",\n                \"x\": 0.20,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","78456a4a":"legendary_generation1","175b7af4":"legendary_generation2 = generation2[generation2[\"Legendary\"] == True]\nlegendary_generation3 = generation3[generation3[\"Legendary\"] == True]\nlegendary_generation4 = generation4[generation4[\"Legendary\"] == True]\nlegendary_generation5 = generation5[generation5[\"Legendary\"] == True]\nlegendary_generation6 = generation6[generation6[\"Legendary\"] == True]","4b27078e":"legendary_generation3","eaf7e5ac":"trace1 = go.Scatter3d( x = legendary_generation3.Attack,\n                       y = legendary_generation3.Speed,\n                       z = legendary_generation3.Defense,\n                       mode = 'markers',\n                       marker=dict(\n                             size = 10,\n                             color = 'rgb(255,0,0)',\n                       )\n                     )\ndata = [trace1]\nlayout = go.Layout( margin=dict( l=0,\n                                 r=0,\n                                 b=0,\n                                 t=0\n                               )\n                  )\nfig = go.Figure(data=data,layout=layout)\niplot(fig)","10eecdb5":"import plotly.graph_objs as go\n\ntrace1 = go.Scatter( x = generation1.Row,\n                     y = generation1.Attack,\n                     mode = \"markers\",\n                     name = \"First Generation\",\n                     marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                     text = generation1.Name)\ntrace2 = go.Scatter( x = generation2.Row,\n                     y = generation2.Attack,\n                     mode = \"markers\",\n                     name = \"Second Generation\",\n                     marker = dict(color = 'rgba(255, 128, 2, 0.8)'),\n                     text = generation2.Name)\ntrace3 = go.Scatter ( x = generation3.Row,\n                      y = generation3.Attack,\n                      mode = \"markers\",\n                      name = \"Third Generation\",\n                      marker = dict(color = 'rgba(0, 255, 200, 0.8)'),\n                      text = generation3.Name)\ndata = [trace1,trace2,trace3]\nlayout = dict(title = 'Top 3 Pokemon Generations Comparing Attacks',\n              xaxis = dict(title = 'Rows',ticklen=5,zeroline=False),\n              yaxis = dict(title = 'Attacks',ticklen=5,zeroline=False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","ed5a8e57":"import matplotlib.pyplot as plt\nfrom wordcloud import WordCloud","e9b61d45":"plt.subplots(figsize = (8,8))\nwordcloud = WordCloud( background_color = 'white',\n                       width = 512,\n                       height = 384,\n                     ).generate(\" \".join(legendary_generation3.Name))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","4bdc37a4":"## Thanks for interest my kernel. If i made mistake please give your knowledge with comment box. And if your adding like to my kernel i will be happy for you. Take care everyone! Enjoying :)))","827dc24d":"<a id=\"1\"><\/a> <br>\n## First \u0130mports Library","b7c58c3e":"<a id=\"5\"><\/a> <br>\n## Detecting Classes to Dataset","ec7b478c":"## My name is Murat Kara. I am a pharmacolog but when i was universty class 3, i payed attention to software programming. Then i decided to start learning. However i noticed that i should studyed software engineering but my conditions not gived permission about studying software department. Then i decide, after i finished pharmacy department, i promised myself to learn software programming. Now i studying data science and i am realy realy enjoy with this software programming part. Now i want to show my data science kernel about plotly library for visualization pokemon dataset. Of course i have lots of mistakes but please give your interpretation about your data science knowledge, and i developing myself for data science. Before starting i want to say thank you to DATAI TEAM for lectures. Lets Started!","09431f43":"# Hello Everyone!","9da97067":"<a id=\"6\"><\/a> <br>\n## Adding rows to Dataset(Because when i want to start comparing pokemons features i use Pokemons rows for graphs)","0e7ea550":"<a id=\"7\"><\/a> <br>\n## Now starting first comparing about First Generation Pokemons to Attack's and Defense","d9892faf":"<a id=\"14\"><\/a> <br>\n## And of course, good visualization is so important, lets use worldcloud for good visualization(using third generation legendary pokemons)","a99f7df6":"<a id=\"9\"><\/a> <br>\n## Detecting legendary pokemons to first generation","650d2731":"## And comparing second and third generation(Attack's and Defense)","7e8b9772":"<a id=\"2\"><\/a> <br>\n## And \u0130mporting Dataset","ba00fc6a":"<a id=\"12\"><\/a> <br>\n## Now using 3d scatter for Third Generation Legendary Pokemons(Attack's,Speed's and Defense)","f8fc7744":"<a id=\"10\"><\/a> <br>\n<a id=\"8\"><\/a> <br>\n## And comparing First Generation Legendary pokemons(Attack's and Defense) with barplot","a8ec3a52":"# (Explanation)","7be1c1a2":"# (Conclusion)\n","5442ffa1":"<a id=\"4\"><\/a> <br>\n## Taking knowledge to Datase","8a85f033":"## Now i can compared fourth,fifth and sixth generation pokemon's about attack's and defenses, but i guess this is enough because i want to check different tools plotly library ","50f287bd":"<a id=\"11\"><\/a> <br>\n## Now i want show you number of First,Second,Third,Fourth.. generation pokemons numbers(Using Piechart)","708744c0":"(Content)\n* [\u0130mpoting Library](#1)\n* [\u0130mpoting Data](#2)\n* [Checking Dataset](#3)\n* [Taking knowledge to Dataset](#4)\n* [Detecting Classes to Dataset](#5)\n* [Adding rows to Dataset](#6)\n* [Comparing First Generation Pokemons to Attack's and Defense](#7)\n* [Comparing First Generation Legendary pokemons(Attack's and Defense) With Barplot](#8)\n   \n   **[Detecting legendary pokemons to first generation](#9)\n   \n   **[First Generation Legendary pokemons(Attack's and Defense) with barplot](#10)\n\n\n* [Comparing First,Second,Third,Fourth.. generation pokemons numbers(Using Piechart)](#11)\n* [Using 3d scatter for Third Generation Legendary Pokemons(Attack's,Speed's and Defense)](#12)\n* [Comparing first three generation pokemons attack's(using marker plot)](#13)\n* [WordCloud Tool](#14)","ec311bdc":"<a id=\"3\"><\/a> <br>\n## Checking Dataset","a6c231dd":"<a id=\"13\"><\/a> <br>\n## And Comparing first three generation pokemons attack's(using marker plot)"}}