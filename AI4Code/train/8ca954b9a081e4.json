{"cell_type":{"ad782b0b":"code","91d2c082":"code","2ff04450":"code","b9a04a9f":"code","fe1a1a22":"code","1b995b4b":"code","a334e93d":"code","9c57fc24":"code","06375fdb":"code","2dfb4512":"code","ff981ceb":"code","7d7b9507":"code","9616315e":"code","7db8cf4a":"code","bc043cf9":"code","758ef343":"code","bea90656":"code","133999fb":"code","a6f609e3":"code","e16f2bf5":"code","c004ce74":"code","d8d0b5db":"code","b296438b":"code","0da26629":"code","252f3fc2":"code","ced67235":"code","d40735c4":"code","0e30add7":"code","a9415999":"code","1989749f":"code","c7a7d61e":"code","1a1c9069":"code","132f2cd9":"code","e2d33eee":"code","a5a9d324":"code","cbd919d1":"code","fd2c4ff1":"code","1871d9e3":"code","60c99ff1":"code","b48ac337":"code","eeabc797":"code","3bdc6585":"code","73984ca1":"code","ed0e37f5":"code","3e61f1e7":"code","6a3bcc90":"code","15201825":"code","0625e22a":"code","c295efa0":"code","f66a57f5":"code","63a93c84":"code","4b1388f5":"code","db98d136":"code","b06e2a59":"code","2efa44e2":"code","9c7545a9":"code","ea06f6bc":"code","59b82783":"code","2125f439":"code","405fbbcf":"code","8b3fcb88":"code","c6a760e4":"code","9077020c":"code","31499a79":"code","1a20d7d8":"code","aea8239e":"code","e829efe3":"code","d71430ce":"code","f9b02874":"code","0047451a":"code","5d67a69f":"code","cea74d28":"code","cc015201":"code","59898dfa":"code","7a291a3e":"code","d3433a4d":"code","05cb1105":"code","b4408ff2":"code","1cda118c":"code","f8ab8ab7":"code","e1a8ae6d":"code","99bc6bb1":"code","66fbc1fb":"code","0a8a7337":"code","e363eaf1":"code","49ba2fd5":"code","105ed8fd":"code","96a8cc6d":"code","b361f1c3":"code","de99af4f":"code","b5e0d0c2":"code","707a47e1":"code","80558149":"code","a04a65ff":"code","f6896818":"code","85ab3459":"code","151f8eab":"code","5f64a7c5":"code","433fe60b":"code","0be20321":"code","11073b98":"code","84afea73":"code","e54b63a7":"code","3ce42c81":"code","569f699e":"code","fe99f49a":"code","9879da25":"code","e7d69dfe":"code","0e279e4f":"code","f16b9287":"code","a5275e42":"code","a0546b2c":"code","138f6625":"code","494abe79":"code","1f328010":"code","8c37dc6d":"code","ef3375b6":"code","9220aa64":"code","d7d5e118":"code","fac86a24":"code","35782b36":"code","0b63fcb8":"code","d752475c":"code","79b31ddb":"code","f4d41875":"code","b93ff78a":"code","c1b77dd4":"code","e3a6441c":"code","44bbccf8":"code","665694a5":"code","438ac952":"code","7efe2a06":"code","9d99f1c3":"code","a5a9c5b2":"code","4f4d3cda":"code","e511d6c1":"code","c72ea7ea":"code","aa5ff23f":"code","bd6b9433":"code","5de3caa3":"code","71dd7452":"code","1f9a30d9":"code","2a708e47":"code","8cd641f3":"code","ca33c5a4":"code","b76a94fc":"code","9abf53b9":"code","a5e7b576":"code","5837805f":"code","1d5c9dda":"code","99d74378":"code","ce8e88bf":"code","71aebd76":"code","624d1f0f":"code","de88c187":"code","9d9c4c8a":"code","c21b3f81":"code","8ec75697":"code","9365370c":"code","c08ca62c":"code","9317fa68":"code","aba44df2":"code","eab482f6":"code","6ab76d6e":"code","2ecbf4d4":"code","39995685":"code","88f3d8d7":"code","72f63ab6":"code","298cc0a0":"code","5162d48b":"code","97beb9fd":"code","27a86d40":"code","94487e4f":"code","4effcff5":"code","4147b123":"code","eb881e84":"code","9eb8483c":"code","ac88f326":"code","2fe250a2":"code","6e11c6d3":"code","354699df":"code","3d761adf":"code","aa4a8567":"code","b1130690":"code","c6610ab9":"code","0f1ca6c3":"code","979117c6":"code","6a8deb8e":"code","e15621e3":"code","ab0de177":"code","1ba4083f":"code","6c877f7f":"code","23c55319":"code","c9956a13":"markdown","d9b032a1":"markdown","51be1962":"markdown","3b185233":"markdown","48f3aa5e":"markdown","b2bdbdda":"markdown","d02de73a":"markdown","7f12250b":"markdown","57e95e36":"markdown","d3836c2d":"markdown","27dc37d5":"markdown","9df659e4":"markdown","cfaac21b":"markdown","f69d4dae":"markdown","a89fd95c":"markdown","40670bf9":"markdown","4bf9307b":"markdown","4cfa9504":"markdown","ad16ead2":"markdown","2ff4c17b":"markdown","c642b0b2":"markdown","07036b87":"markdown","7eb5d8df":"markdown","9c1c93b3":"markdown","4138b202":"markdown","b8696bec":"markdown","c0eb587c":"markdown","c460fc66":"markdown"},"source":{"ad782b0b":"import pandas as pd\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns","91d2c082":"import os\nprint(os.listdir(\"..\/input\"))","2ff04450":"df=pd.read_csv('..\/input\/hotel-booking-demand\/hotel_bookings.csv')\r\ndf.head()","b9a04a9f":"df.shape","fe1a1a22":"df.columns","1b995b4b":"df.isnull().values.any()","a334e93d":"df.isnull().sum()","9c57fc24":"# Replace missing values:\r\n# agent: If no agency is given, booking was most likely made without one.\r\n# company: If none given, it was most likely private.\r\n# rest schould be self-explanatory.","06375fdb":"df.fillna(0,inplace=True)","2dfb4512":"df.isnull().sum()","ff981ceb":"df['meal'].value_counts()","7d7b9507":"df['children'].unique()","9616315e":"df['adults'].unique()","7db8cf4a":"df['babies'].unique()","bc043cf9":"### seems to have some dirtiness in data as Adults,babies & children cant be zero at a same time ","758ef343":"df.shape","bea90656":"len(df[df['adults']==0])","133999fb":"filter=(df['children']==0) & (df['adults']==0) & (df['babies']==0)\r\ndf[filter]","a6f609e3":"### Visualise Entire Dataframe where adult,children & babies are 0","e16f2bf5":"pd.set_option('display.max_columns',32)","c004ce74":"filter=(df['children']==0) & (df['adults']==0) & (df['babies']==0)\r\ndf[filter]","d8d0b5db":"data=df[~filter]","b296438b":"data.shape","0da26629":"data.head()","252f3fc2":"resort = data[(data[\"hotel\"] == \"Resort Hotel\") & (data[\"is_canceled\"] == 0)]\r\ncity = data[(data[\"hotel\"] == \"City Hotel\") & (data[\"is_canceled\"] == 0)]","ced67235":"resort.shape","d40735c4":"city.shape","0e30add7":"resort.head()","a9415999":"labels=resort['country'].value_counts().index\r\nvalues=resort['country'].value_counts()","1989749f":"import plotly.graph_objs as go\r\nfrom plotly.offline import iplot\r\nimport plotly.express as px","c7a7d61e":"trace=go.Pie(labels=labels, values=values,\r\n               hoverinfo='label+percent', textinfo='value'\r\n               )","1a1c9069":"iplot([trace])","132f2cd9":"country_wise_data=data[data['is_canceled']==0]['country'].value_counts().reset_index()\r\ncountry_wise_data.columns=['country','No of guests']\r\ncountry_wise_data","e2d33eee":"import folium\r\nfrom folium.plugins import HeatMap","a5a9d324":"basemap=folium.Map()","cbd919d1":"country_wise_data.dtypes","fd2c4ff1":"# show on map\r\nmap_guest = px.choropleth(country_wise_data,\r\n                    locations=country_wise_data['country'],\r\n                    color=country_wise_data['No of guests'], \r\n                    hover_name=country_wise_data['country'], \r\n                    title=\"Home country of guests\")\r\nmap_guest.show()","1871d9e3":"data.head()","60c99ff1":"data2=data[data['is_canceled']==0]","b48ac337":"# boxplot:\r\nplt.figure(figsize=(12, 8))\r\nsns.boxplot(x=\"reserved_room_type\",\r\n            y=\"adr\",\r\n            hue=\"hotel\",\r\n            data=data2)\r\nplt.title(\"Price of room types per night and person\", fontsize=16)\r\nplt.xlabel(\"Room type\", fontsize=16)\r\nplt.ylabel(\"Price [EUR]\", fontsize=16)\r\nplt.legend(loc=\"upper right\")\r\nplt.ylim(0, 600)\r\nplt.show()","eeabc797":"data_resort=resort[resort['is_canceled']==0]","3bdc6585":"data_city=city[city['is_canceled']==0]","73984ca1":"data_resort.head()","ed0e37f5":"resort_hotel=data_resort.groupby(['arrival_date_month'])['adr'].mean().reset_index()\r\nresort_hotel","3e61f1e7":"city_hotel=data_city.groupby(['arrival_date_month'])['adr'].mean().reset_index()\r\ncity_hotel","6a3bcc90":"final=resort_hotel.merge(city_hotel,on='arrival_date_month')\r\nfinal.columns=['month','price_for_resort','price_for_city_hotel']\r\nfinal","15201825":" !pip install sort_dataframeby_monthorweek\r\n\r\n## Dependency package needs to be installe### pip install sorted-months-weekdays","0625e22a":"import sort_dataframeby_monthorweek as sd","c295efa0":"final=sd.Sort_Dataframeby_Month(df=final,monthcolumnname='month')\r\nfinal","f66a57f5":"px.line(final, x='month', y=['price_for_resort','price_for_city_hotel'], title='Room price per night over the Months')","63a93c84":"''' \r\nsns.lineplot(x = \"month\", y=\"price_for_resort\", data=final,label='Resort')\r\nsns.lineplot(x = \"month\", y=\"price_for_city_hotel\", data=final,label='City_hotel')\r\nplt.title(\"Room price per night and person over the year\", fontsize=16)\r\nplt.xlabel(\"Month\", fontsize=16)\r\nplt.xticks(rotation=45)\r\nplt.ylabel(\"Price [EUR]\", fontsize=16)\r\nplt.legend()\r\nplt.show()\r\n'''","4b1388f5":"data.head()","db98d136":"plt.figure(figsize = (15,10))\r\nsns.boxplot(x = \"market_segment\", y = \"stays_in_week_nights\", data = data, hue = \"hotel\", palette = 'Set1');\r\n","b06e2a59":"px.pie(data,names=data['meal'].value_counts().index,values=data['meal'].value_counts().values,hole=0.5)","2efa44e2":"data.groupby(['hotel','meal']).agg({'meal':'count'}).unstack()","9c7545a9":"plt.figure(figsize=(8,5))\r\nsns.countplot(x='total_of_special_requests', data=data, palette = 'ocean_r')\r\nplt.title('Total Special Request')","ea06f6bc":"data.head()","59b82783":"pivot=data.groupby([ 'total_of_special_requests', 'is_canceled']).agg({'total_of_special_requests':'count'}).rename(columns={'total_of_special_requests':'count'}).unstack()\r\npivot","2125f439":"pivot.plot(kind='bar')","405fbbcf":"data_resort.head()","8b3fcb88":"rush_resort=data_resort['arrival_date_month'].value_counts().reset_index()\r\nrush_resort.columns=['month','no of guests']\r\nrush_resort","c6a760e4":"rush_city=data_city['arrival_date_month'].value_counts().reset_index()\r\nrush_city.columns=['month','no of guests']\r\nrush_city","9077020c":"final_rush=rush_resort.merge(rush_city,on='month')\r\nfinal_rush.columns=['month','no of guests in resort','no of guest in city hotel']\r\nfinal_rush","31499a79":"final_rush=sd.Sort_Dataframeby_Month(df=final_rush,monthcolumnname='month')\r\nfinal_rush","1a20d7d8":"final_rush.dtypes","aea8239e":"final_rush.columns","e829efe3":"px.line(data_frame=final_rush, x='month', y=['no of guests in resort','no of guest in city hotel'], title='Total no of guests per Months')","d71430ce":"filter=data['is_canceled']==0\r\nclean_data=data[filter]","f9b02874":"clean_data.head()","0047451a":"clean_data[\"total_nights\"] = clean_data[\"stays_in_weekend_nights\"] + clean_data[\"stays_in_week_nights\"]","5d67a69f":"clean_data.head()","cea74d28":"stay=clean_data.groupby(['total_nights','hotel']).agg('count').reset_index()\r\nstay=stay.iloc[:,0:3]\r\nstay.head()","cc015201":"stay=stay.rename(columns={'is_canceled':'Number of stays'})\r\nstay.head()","59898dfa":"plt.figure(figsize=(20, 8))\r\nsns.barplot(x = \"total_nights\", y = \"Number of stays\" , hue=\"hotel\",\r\n            hue_order = [\"City Hotel\", \"Resort Hotel\"], data=stay)","7a291a3e":"clean_data['market_segment'].value_counts()","d3433a4d":"# pie plot\r\nfig=px.pie(clean_data,\r\n             values=clean_data['market_segment'].value_counts().values,\r\n             names=clean_data['market_segment'].value_counts().index,\r\n             title=\"Bookings per market segment\")\r\nfig.update_traces(rotation=-90, textinfo=\"percent+label\")\r\nfig.show()","05cb1105":"clean_data.head()","b4408ff2":"plt.figure(figsize=(20, 10))\r\nsns.barplot(x=\"market_segment\",\r\n            y=\"adr\",\r\n            hue=\"reserved_room_type\",\r\n            data=clean_data,\r\n            ci=\"sd\",\r\n            errwidth=1,\r\n            capsize=0.1)","1cda118c":"cancel=data[data['is_canceled']==1]","f8ab8ab7":"rh_cancelations = cancel[cancel[\"hotel\"] == \"Resort Hotel\"][\"is_canceled\"].sum()\r\nch_cancelations = cancel[cancel[\"hotel\"] == \"City Hotel\"][\"is_canceled\"].sum()","e1a8ae6d":"rh_cancelations","99bc6bb1":"ch_cancelations","66fbc1fb":"### convert entire stats into percentage\r\npx.pie(values=[11120,33079],names=[rh_cancelations,ch_cancelations])","0a8a7337":"data.head()","e363eaf1":"cancellation=data[data['is_canceled']==1]\r\ncancellation.head()","49ba2fd5":"cancellation['hotel'].unique()","105ed8fd":"cancel_month=data.groupby(['arrival_date_month','hotel']).agg('count').reset_index()\r\ncancelled=cancel_month.iloc[:,0:3]","96a8cc6d":"cancelled","b361f1c3":"cancelled=cancelled.rename(columns={'is_canceled':'no of cancellations'})\r\ncancelled","de99af4f":"final=sd.Sort_Dataframeby_Month(cancelled,'arrival_date_month')\r\nfinal","b5e0d0c2":"plt.figure(figsize=(12, 8))\r\nsns.barplot(x = \"arrival_date_month\", y = \"no of cancellations\" , hue=\"hotel\",\r\n            hue_order = [\"City Hotel\", \"Resort Hotel\"], data=final)","707a47e1":"import pandas as pd\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns","80558149":"import os\nprint(os.listdir(\"..\/input\"))","a04a65ff":"\r\ndf=pd.read_csv(..\/input\/hotel-booking-demand\/hotel_bookings.csvv')\r\ndf.head()","f6896818":"def data_clean(col):\r\n    col.fillna(0,inplace=True)\r\n    #print(df.isnull().sum())","85ab3459":"data_clean(df['agent'])","151f8eab":"data_clean(df['company'])","5f64a7c5":"df=df[df['children'].notna()]","433fe60b":"df.isna().sum()","0be20321":"df['country'].replace('nan','other',inplace=True)","11073b98":"df['country'].unique()","84afea73":"filter=(df['children']==0) & (df['adults']==0) & (df['babies']==0)\r\ndf[filter]","e54b63a7":"df=df[~filter]","3ce42c81":"df.shape","569f699e":"cat_features=[col for col in df.columns if df[col].dtype == 'O']","fe99f49a":"cat_features","9879da25":"df['reservation_status_date']=pd.to_datetime(df['reservation_status_date'])","e7d69dfe":"df['res_year']=df['reservation_status_date'].dt.year\r\ndf['res_month']=df['reservation_status_date'].dt.month\r\ndf['res_day']=df['reservation_status_date'].dt.day","0e279e4f":"def meal(x):\r\n    if x in ('BB'):\r\n        return 'BB'\r\n    elif x in ('HB'):\r\n        return 'HB'\r\n    elif x in ('SC'):\r\n        return 'SC'\r\n    else:\r\n        return 'other'  ","f16b9287":"df['MEAL']=df['Meal'].apply(meal)","a5275e42":"def ms(x):\r\n    if x in ('Online TA'):\r\n        return 'Online TA'\r\n    elif x in ('Groups'):\r\n        return 'Groups'\r\n    elif x in ('Offline TA\/TO'):\r\n        return 'Offline TA\/TO'\r\n    else:\r\n        return 'other'","a0546b2c":"df['MARKET_SEGMENT']=df['Market_segment'].apply(ms)","138f6625":"def AR(x):\r\n    if x in ('A'):\r\n        return 'A'\r\n    elif x in ('D'):\r\n        return 'D'\r\n    elif x in ('E'):\r\n        return 'E' \r\n    else:\r\n        return 'other'","494abe79":"df['ASSIGNED_ROOM_TYPE']=df['Assigned_room_type'].apply(AR)\r\n","1f328010":"def CT(x):\r\n    if x in ('Transient'):\r\n        return 'Transient'\r\n    elif x in ('Transient-Party'):\r\n        return 'Transient-Party'\r\n    else:\r\n        return 'other'","8c37dc6d":"df['CUSTOMER_TYPE']=df['Customer_type'].apply(CT)","ef3375b6":"df.head()","9220aa64":"data=df","d7d5e118":"data.drop(['Meal','Market_segment',\nAassigned_room_type',Ccustomer_type','reservation_status','reservation_status_date','distribution_channel','reserved_room_type'],axis=1,inplace=True)","fac86a24":"pd.set_option('display.max_columns',35)","35782b36":"data.head()","0b63fcb8":"cat_features=[col for col in data.columns if data[col].dtype == 'O']","d752475c":"cat_features","79b31ddb":"num_features=[col for col in data.columns if data[col].dtype != 'O']","f4d41875":"numerical_features=data[num_features]","b93ff78a":"numerical_features","c1b77dd4":"y=numerical_features['is_canceled']\r\nx=numerical_features.drop('is_canceled',axis=1)","e3a6441c":"feature_sel_model = SelectFromModel(Lasso(alpha=0.005, random_state=0)) # remember to set the seed, the random state in this function\r\nfeature_sel_model.fit(x,y)","44bbccf8":"feature_sel_model.get_support()","665694a5":"cols=x.columns","438ac952":"selected_feat = cols[(feature_sel_model.get_support())]","7efe2a06":"selected_feat","9d99f1c3":"selected_feat.shape","a5a9c5b2":"num_features","4f4d3cda":"data.shape","e511d6c1":"data=data[data['country'].notna()]","c72ea7ea":"data['country'].unique()","aa5ff23f":"data.head()","bd6b9433":"from sklearn.preprocessing import LabelEncoder","5de3caa3":"lb = LabelEncoder()\r\ndata.iloc[:,0]=lb.fit_transform(data.iloc[:,0])\r\nlb1 = LabelEncoder()\r\ndata.iloc[:,4]=lb1.fit_transform(data.iloc[:,4])\r\nlb2 = LabelEncoder()\r\ndata.iloc[:,17]=lb2.fit_transform(data.iloc[:,17])\r\nlb3 = LabelEncoder()\r\ndata.iloc[:,27]=lb3.fit_transform(data.iloc[:,27])\r\nlb4 = LabelEncoder()\r\ndata.iloc[:,28]=lb4.fit_transform(data.iloc[:,28])\r\nlb5 = LabelEncoder()\r\ndata.iloc[:,29]=lb5.fit_transform(data.iloc[:,29])\r\nlb6 = LabelEncoder()\r\ndata.iloc[:,30]=lb6.fit_transform(data.iloc[:,30])","71dd7452":"lb7 = LabelEncoder()\r\ndata.iloc[:,12]=lb7.fit_transform(data.iloc[:,12])","1f9a30d9":"data.head()","2a708e47":"data.shape","8cd641f3":"categorical_features=df[cat_features]","ca33c5a4":"categorical_features","b76a94fc":"\"\"\"for col in cat_features:\r\n    if col in data.columns:\r\n        i=data.columns.get_loc(col)\r\n       data.iloc[:,i]=data.apply(lambda i:le.fit_transform(data[i]))#,axis=0,result_type='expand') \"\"\"","9abf53b9":"sns.distplot(data['lead_time'])","a5e7b576":"import numpy as np\r\n\r\ndef handle_outlier(col):\r\n    data[col]=np.log1p(data[col])","5837805f":"handle_outlier('lead_time')","1d5c9dda":"sns.distplot(data['lead_time'])","99d74378":"sns.distplot(data['adr'])","ce8e88bf":"handle_outlier('adr')","71aebd76":"sns.distplot(data['adr'])","624d1f0f":"## separate dependent & independent features\r\n","de88c187":"data.head()","9d9c4c8a":"from sklearn.linear_model import Lasso\r\nfrom sklearn.feature_selection import SelectFromModel","c21b3f81":"np.any(np.isnan(data))","8ec75697":"data.dropna(inplace=True)","9365370c":"np.all(np.isfinite(data))","c08ca62c":"data.head()","9317fa68":"data.shape","aba44df2":"numerical_features.columns","eab482f6":"numerical_features.shape","6ab76d6e":"selected_feat.shape","2ecbf4d4":"selected_feat","39995685":"data.shape","88f3d8d7":"numerical_features.columns","72f63ab6":"num_features=data[num_features]","298cc0a0":"data.head()","5162d48b":"data.drop(columns=['stays_in_weekend_nights','adults','children','babies','is_repeated_guest','arrival_date_week_number','arrival_date_year','arrival_date_day_of_month'],axis=1,inplace=True)","97beb9fd":"data.drop(columns=['arrival_date_week_number','arrival_date_year','arrival_date_day_of_month'],axis=1,inplace=True)","27a86d40":"num_features.shape","94487e4f":"df1=pd.DataFrame(numerical_features)","4effcff5":"categorical_features","4147b123":"df2=pd.DataFrame(categorical_features)","eb881e84":"final=pd.concat([numerical_features],[categorical_features])","9eb8483c":"data.shape","ac88f326":"data.head()","2fe250a2":"y=data['is_canceled']\r\nx=data.drop('is_canceled',axis=1)","6e11c6d3":"from sklearn.model_selection import train_test_split\r\nx_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.75,random_state=0)","354699df":"from sklearn.linear_model import LogisticRegression\r\nlogreg=LogisticRegression()\r\nlogreg.fit(x_train,y_train)","3d761adf":"y_pred=logreg.predict(x_test)","aa4a8567":"from sklearn.metrics import confusion_matrix\r\ncm=confusion_matrix(y_test,y_pred)\r\ncm","b1130690":"from sklearn.metrics import accuracy_score\r\nscore=accuracy_score(y_test,y_pred)\r\nscore","c6610ab9":"from sklearn.model_selection import cross_val_score\r\nscore=cross_val_score(logreg,x,y,cv=10)","0f1ca6c3":"score","979117c6":"score.mean()","6a8deb8e":"#fit naive bayes\r\nfrom sklearn.naive_bayes import GaussianNB\r\nfrom sklearn.linear_model import LogisticRegression\r\nfrom sklearn.neighbors import KNeighborsClassifier\r\nfrom sklearn.ensemble import RandomForestClassifier\r\nfrom sklearn.tree import DecisionTreeClassifier","e15621e3":"### classifier models\r\nmodels = []\r\nmodels.append(('LogisticRegression', LogisticRegression()))\r\nmodels.append(('Naive Bayes',GaussianNB()))\r\nmodels.append(('RandomForest', RandomForestClassifier()))\r\nmodels.append(('Decision Tree', DecisionTreeClassifier()))\r\nmodels.append(('KNN', KNeighborsClassifier(n_neighbors = 5)))","ab0de177":"for name, model in models:\r\n    print(name)\r\n    model.fit(x_train, y_train)\r\n    \r\n    # Make predictions.\r\n    predictions = model.predict(x_test)\r\n\r\n    # Compute the error.\r\n    from sklearn.metrics import confusion_matrix\r\n    print(confusion_matrix(predictions, y_test))\r\n\r\n    from sklearn.metrics import accuracy_score\r\n    print(accuracy_score(predictions,y_test))\r\n    print('\\n')","1ba4083f":"data.columns","6c877f7f":"data.shape","23c55319":"data['company'].unique()","c9956a13":"#### Conclusion-->> \n    Around 55% of bookings do not have any special requests","d9b032a1":"#### conclusion \n    For the City hotel the relative number of cancelations is around 40 % throughout the year.\n    For the Resort hotel it is highest in the summer and lowest during the winter.","51be1962":"## Where do the guests come from?","3b185233":"### Conclusion\n     The City hotel has more guests during spring and autumn, when the prices are also highest.\n    In July and August there are less visitors, although prices are lower.\n\n    Guest numbers for the Resort hotel go down slighty from June to September, which is also when the prices are highest.\n    Both hotels have the fewest guests during the winter.","48f3aa5e":"#### https:\/\/www.kaggle.com\/marcuswingen\/eda-of-bookings-and-ml-to-predict-cancelations","b2bdbdda":"## Analyse Special Request done by Cuustomers\u00b6","d02de73a":"## Which month have the highest number of cancellations?","7f12250b":"#### Both hotels have different room types and different meal arrangements. Seasonal factors are also important. So the prices vary a lot. Since no currency information is given, but Portugal is part of the European Monetary Union, I assume that all prices are in EUR.","57e95e36":"## How many bookings were cancelled?","d3836c2d":"## Which are the most busy month or in which months Guests are high?","27dc37d5":"#### Conclusion-->>\n    Below the donut pie graph shows the meal categories. There is a big difference in the Bed&Breakfast category and the others. Almost 80% of bookings reserved for Bed&Breakfast.","9df659e4":"### Hotel Booking Cancellation Prediction using Power BI, finding most important parameter(categorical column) for the contribution in booking cancellation","cfaac21b":"## Bookings by market segment","f69d4dae":"#### After cleaning, separate Resort and City hotel","a89fd95c":"## How long do people stay at the hotels?","40670bf9":"#### This figure shows the average price per room, depending on its type and the standard deviation. Note that due to data anonymization rooms with the same type letter may not necessarily be the same across hotels.","4bf9307b":"#### People from all over the world are staying in these two hotels. Most guests are from Portugal and other countries in Europe","4cfa9504":"#### Conclusion-->>\n    It can be seen that most of the groups are normal distributed, some of them have high skewness. Looking at the distribution, most people do not seem to prefer to stay at the hotel for more than 1 week. But it seems normal to stay in resort hotels for up to 12-13 days\n    It is obvious that when people go to resort hotels, they prefer to stay more.","ad16ead2":"## Distribution of Nights Spent at Hotels by Market Segment and Hotel Type","2ff4c17b":"## How does the price per night vary over the year?","c642b0b2":"#### now we will observe over here is month column is not in order, & if we will visualise we will get improper conclusion\n#### so very first we have to provide right hierarchy to the month column","07036b87":"## How much do guests pay for a room per night?","7eb5d8df":"##  price per night (ADR) and person based on booking and room","9c1c93b3":"### Conclusion-->> This clearly shows that the prices in the Resort hotel are much higher during the summer (no surprise here)., The price of the city hotel varies less and is most expensive during spring and autumn.","4138b202":"## Simplify your analysis on the basis of differen types of hotels & meals","b8696bec":"## Home country of Guests, perform Spatial Analysis","c0eb587c":"#### Conclusion-->> \n    This graph is about the relationship between special requests and cancellation booking status. Nearly half bookings without any special requests have been cancelled and another half of them have not been canceled.","c460fc66":"## Analysing Preference of Guests, what they basically Prefer?"}}