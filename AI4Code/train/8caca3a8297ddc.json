{"cell_type":{"9b74878f":"code","cc3cf3aa":"code","c41ade07":"markdown"},"source":{"9b74878f":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport pytz\nfrom datetime import datetime\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# Maricopa County just came in\n# more ohio\ntz = pytz.timezone('est')\nnow = datetime.now().astimezone(tz)\ndt_string = now.strftime('%Y-%m-%d %I:%M %p')\nprint(\"Last Run:\", dt_string)\n\ndfs = pd.read_html(\n    'https:\/\/alex.github.io\/nyt-2020-election-scraper\/battleground-state-changes.html')\n\ndef plot_df(df, states=None):\n    state = df.columns[0][0]\n    state = state.split('  Total Votes')[0]\n    #print(state)\n    if state not in states:\n        return\n    df.columns = [pair[1] for pair in df.columns]\n    #print(df.columns)\n    df = df.sort_values('Timestamp', ascending=False).reset_index()\n    #df = df.dropna()\n    lead = df['In The Lead'].values[0]\n    #reporting = df['Precincts Reporting'].values[0]\n    df['Change'] = pd.to_numeric(np.abs(df['Change']))\n    \n    df.loc[df['In The Lead'] == 'Trump', 'Vote Margin Trump'] = \\\n        df.loc[df['In The Lead'] == 'Trump']['Vote Margin']\n    df.loc[df['In The Lead'] == 'Biden', 'Vote Margin Trump'] = \\\n        -df.loc[df['In The Lead'] == 'Biden']['Vote Margin']\n\n    df['Votes Remaining (est.)'] = df['Votes Remaining (est.)'].replace('Unknown',np.nan)\n    df['Votes Remaining (est.)'] = pd.to_numeric(df['Votes Remaining (est.)'])\n    fig = px.scatter(df,\n                     template='ggplot2',\n                     y='Vote Margin Trump',\n                     x='Votes Remaining (est.)',\n                     size='Change',\n                     title=f'{state} - {lead} in the lead',\n                     color_discrete_sequence=['darkblue','blue'],\n                     range_y=(df['Vote Margin Trump'].min() - 10000,\n                              df['Vote Margin'].max() + 10000),\n               trendline=\"ols\",\n                    trendline_color_override='grey')\n    fig.add_shape(type=\"line\",\n                    x0=0, y0=0, x1=df['Votes Remaining (est.)'].max(), y1=0,\n                                        opacity=1,\n                  line=dict(\n                      color=\"indianred\",\n                      dash=\"dot\",\n                      width=5,\n                  ),\n                 )\n    fig['layout']['xaxis']['autorange'] = \"reversed\"\n    fig.update_layout(hovermode='x unified')\n    fig.show()\n    \nfor df in dfs:\n    plot_df(df.copy(),\n           states=['Georgia (EV: 16)',\n                   'Pennsylvania (EV: 20)'])","cc3cf3aa":"for df in dfs:\n    plot_df(df.copy(),\n           states=[\n                     'Arizona (EV: 11)',\n                     'Nevada (EV: 6)',\n           ])","c41ade07":"# US 2020 Battleground State Plots\n\n## Remaining Votes vs. Leading Candidate's Vote Differential\n\n[1] Reference: https:\/\/alex.github.io\/nyt-2020-election-scraper\/battleground-state-changes.html"}}