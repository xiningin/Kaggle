{"cell_type":{"ff98fa3c":"code","3944b474":"code","57d1b96e":"code","92dcc335":"code","362c48eb":"code","aed485be":"code","cd244382":"code","da7f48a1":"code","abff2f02":"code","1ba67632":"code","9a5b5990":"code","df3c990b":"code","cb358c24":"code","9ca76f55":"code","3b1f61dc":"code","764903dc":"code","4555065a":"code","9f90c7df":"code","a2ca6101":"code","b69cbe67":"code","d172dfe1":"code","00dce094":"code","1a010a03":"code","cf6e2cb8":"code","749a8d0c":"code","1e631932":"code","5c90544a":"code","9462be42":"code","0c137e2a":"code","f1743fa8":"code","f1ac598f":"code","c8bb21d2":"code","584898c4":"code","06e49877":"code","87cd9dc4":"markdown","dba391fa":"markdown","cbeaca42":"markdown","85f41750":"markdown","00d63d46":"markdown","c61a04e5":"markdown","bdeac171":"markdown","dd427113":"markdown","e7486b09":"markdown","1486110b":"markdown"},"source":{"ff98fa3c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn\nimport sklearn.utils\n\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom sklearn import metrics\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.cluster import DBSCAN","3944b474":"market_data = pd.read_csv('..\/input\/123qweasd\/Mall_Customers.csv')","57d1b96e":"market_data.info()","92dcc335":"market_data.describe()","362c48eb":"market_data.tail()","aed485be":"market_data['Gender'].value_counts(normalize = True)*100","cd244382":"market_data.isnull().sum()","da7f48a1":"#Encoding object into binary values ...\nmarket_data['Gender']=market_data['Gender'].map({'Male':1,'Female':0})","abff2f02":"market_data = market_data.drop(['CustomerID'] , axis = 1)","1ba67632":"market_data.head()","9a5b5990":"X = market_data.drop(['Gender','Age'] , axis = 1)\nX = X.values\nX","df3c990b":"sc = StandardScaler()\nX = sc.fit_transform(X)\nX","cb358c24":"sns.catplot(x = \"Gender\" , kind = \"count\" , data = market_data)\n# 0 = Male\n# 1 = Female","9ca76f55":"sns.displot(market_data , x = \"Age\" , kind = \"kde\" , hue = \"Gender\" )\n# 0 = Male\n# 1 = Female","3b1f61dc":"sns.catplot(x = \"Age\" , y = \"Annual Income (k$)\" , hue = \"Gender\" , kind = \"point\" , data = market_data , height = 5 , aspect = 4 )","764903dc":"sns.relplot(x=\"Age\", y=\"Spending Score (1-100)\", hue=\"Annual Income (k$)\", data=market_data)","4555065a":"sns.relplot(x=\"Annual Income (k$)\", y=\"Spending Score (1-100)\" , hue = \"Age\" , data = market_data , style = \"Gender\" )","9f90c7df":"t_corr = market_data.corr()\nplt.figure(figsize=(6,6))\nsns.heatmap(t_corr, annot=True, annot_kws={'size':12}, cmap='Greens' )","a2ca6101":"# Within Cluster Sum of Squares (WCSS) :\n# WCSS is the sum of squared distance between each point and the centroid in a cluster.\nwcss = []\nfor i in range(1, 21):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)\n    kmeans.fit(X)\n    wcss.append(kmeans.inertia_)","b69cbe67":"plt.plot(range(1, 21), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()\n# 5 seems to be good choice!","d172dfe1":"wcss","00dce094":"kmeans = KMeans(n_clusters = 5, init = 'k-means++', random_state = 42)\ny_kmeans = kmeans.fit_predict(X)","1a010a03":"kmeans.cluster_centers_.shape","cf6e2cb8":"y_kmeans","749a8d0c":"plt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')\nplt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')\nplt.scatter(X[y_kmeans == 3, 0], X[y_kmeans == 3, 1], s = 100, c = 'purple', label = 'Cluster 4')\nplt.scatter(X[y_kmeans == 4, 0], X[y_kmeans == 4, 1], s = 100, c = 'pink', label = 'Cluster 5')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'cyan', label = 'Centroids')\nplt.title('Clusters of customers')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","1e631932":"db = DBSCAN(eps=0.4,min_samples=8).fit(X)","5c90544a":"labels = db.labels_","9462be42":"labels","0c137e2a":"n_clusters_ = len(set(labels)) - (1 if -1 in labels else 0)\nn_noise_ = list(labels).count(-1)","f1743fa8":"core_samples_mask = np.zeros_like(db.labels_, dtype=bool)\ncore_samples_mask[db.core_sample_indices_] = True","f1ac598f":"print('Estimated number of clusters: %d' % n_clusters_)","c8bb21d2":"print('Estimated number of noise points: %d' % n_noise_)","584898c4":"# Black removed and is used for noise instead.\nunique_labels = set(labels)\ncolors = [plt.cm.Spectral(each)\n          for each in np.linspace(0, 1, len(unique_labels))]\nfor k, col in zip(unique_labels, colors):\n    if k == -1:\n        # Black used for noise.\n        col = [0, 0, 0, 1]\n\n    class_member_mask = (labels == k)\n\n    xy = X[class_member_mask & core_samples_mask]\n    plt.plot(xy[:, 0], xy[:, 1], 'o', markerfacecolor=tuple(col),\n             markeredgecolor='k', markersize=14)\n\n    xy = X[class_member_mask & ~core_samples_mask]\n    plt.plot(xy[:, 0], xy[:, 1], 'o', markerfacecolor=tuple(col),\n             markeredgecolor='k', markersize=6)\n\nplt.title('Estimated number of clusters: %d' % n_clusters_)\nplt.show()","06e49877":"# M.Hossein Hashemi","87cd9dc4":"## Train the Model (Clustering)","dba391fa":"# K-means","cbeaca42":"<div class=\"alert alert-block alert-success\">\n    <h1 align=\"center\">Machine Learning in Python<\/h1>\n    <h3 align=\"center\">Mini Project2 - Clustering<\/h3>\n<\/div>","85f41750":"## Importing the libraries","00d63d46":"<img src = \"https:\/\/miro.medium.com\/max\/5760\/1*_SRbz8535-CxPzo6IL9pBA.png\" width=80%>","c61a04e5":"## EDA","bdeac171":"## Strorytelling - Visualization","dd427113":"## Load and Prepare Data","e7486b09":"# DBSCAN","1486110b":"## Data Preprocessing"}}