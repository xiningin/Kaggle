{"cell_type":{"ad726f93":"code","860712e9":"code","5688a52c":"code","a36090e2":"code","58d21d1c":"code","b91ef373":"code","90c1a2e3":"code","2881ab1a":"code","6149de19":"code","19c77b69":"code","167ba51f":"code","57540bc9":"markdown","60d847f3":"markdown","f78a1998":"markdown","1d26b49d":"markdown","3c626b25":"markdown"},"source":{"ad726f93":"%matplotlib inline\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.metrics import log_loss, accuracy_score, confusion_matrix\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error # \u56de\u5e30\u554f\u984c\u306b\u304a\u3051\u308b\u6027\u80fd\u8a55\u4fa1\u306b\u95a2\u3059\u308b\u95a2\u6570\nfrom  sklearn.metrics import accuracy_score, precision_recall_fscore_support, confusion_matrix # \u56de\u5e30\u554f\u984c\u306b\u304a\u3051\u308b\u6027\u80fd\u8a55\u4fa1\u306b\u95a2\u3059\u308b\u95a2\u6570\n\nimport seaborn as sns\n\nimport datetime # \u65e5\u4ed8\u51e6\u7406\u7528","860712e9":"df_projects_all = pd.read_csv(\"..\/input\/kickstarter-projects\/ks-projects-201801.csv\",header=0)","5688a52c":"# \u30c7\u30fc\u30bf\u3092\u51fa\u529b\ndisplay(df_projects_all.head(20))\ndf_projects_all.describe()\n\n\nprint(\"state contest\")\nprint(df_projects_all['state'].unique())\nprint(df_projects_all['state'].value_counts())","a36090e2":"# \u76f8\u95a2\u4fc2\u6570\u3092\u78ba\u8a8d\ndf_projects_all.corr()","58d21d1c":"# \u76f8\u95a2\u4fc2\u6570\u3092\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u306b\u3057\u3066\u53ef\u8996\u5316\nsns.heatmap(df_projects_all.corr())\nplt.show()","b91ef373":"# \u8981\u7d20\u306e\u53d6\u308a\u51fa\u3057\nx = df_projects_all[['goal', 'usd_goal_real']].values\n# goal\u3068usd_goal_real\u306f\u540c\u3058\u610f\u5473\u306a\u306e\u3067\u4e0d\u9069\n\nprint(x)\n\n# \u30b0\u30e9\u30d5\u306e\u78ba\u8a8d\ndf_projects_all.plot.scatter(x='goal', y='usd_goal_real')","90c1a2e3":"# \u76ee\u7684\u5909\u6570\ny = df_projects_all['state']\n\nprint(y)\n\n# failed\u3068successful\u3092\u6570\u5024\u5316\ny = y.map({'failed':0, 'successful':1, 'canceled':0, 'live':0, 'undefined':0, 'suspended':0})\nprint(y)\n\ny = y.values","2881ab1a":"clf = SGDClassifier(loss='log', penalty='none', max_iter=10000, fit_intercept=True, random_state=1234, tol=1e-3)\nclf.fit(x, y)\n\n# \u91cd\u307f\u3092\u53d6\u5f97\u3057\u3066\u8868\u793a\nw0 = clf.intercept_[0]\nw1 = clf.coef_[0, 0]\n#w2 = clf.coef_[0, 1]\n#w3 = clf.coef_[0, 2]\n#w4 = clf.coef_[0, 3]\n#w5 = clf.coef_[0, 4]\n#print('w0 = {:.3f}, w1 = {:.3f}, w2 = {:.3f}, w3 = {:.3f}, w4 = {:.3f}, w5 = {:.3f}'.format(w0, w1, w2, w3, w4, w5))\nprint('w0 = {:.3f}, w1 = {:.3f}'.format(w0, w1))","6149de19":"# \u30e9\u30d9\u30eb\u3092\u4e88\u6e2c\ny_est = clf.predict(x)\n\n# \u5bfe\u6570\u5c24\u5ea6\u3092\u8868\u793a\nprint('\u5bfe\u6570\u5c24\u5ea6 = {:.3f}'.format(- log_loss(y, y_est)))\n\n# \u6b63\u7b54\u7387\u3092\u8868\u793a\nprint('\u6b63\u7b54\u7387 = {:.3f}%'.format(100 * accuracy_score(y, y_est)))","19c77b69":"# \u30e9\u30d9\u30eb\u3092\u4e88\u6e2c\ny_pred = clf.predict(x)\n\n# \u6b63\u7b54\u7387\u3092\u8a08\u7b97\naccuracy =  accuracy_score(y, y_pred)\nprint('\u6b63\u7b54\u7387\uff08Accuracy\uff09 = {:.3f}%'.format(100 * accuracy))\n\n# Precision, Recall, F1-score\u3092\u8a08\u7b97\nprecision, recall, f1_score, _ = precision_recall_fscore_support(y, y_pred)\n\n# \u30ab\u30c6\u30b4\u30ea\u300csuccessful\u300d\u306b\u95a2\u3059\u308bPrecision, Recall, F1-score\u3092\u8868\u793a\nprint('\u9069\u5408\u7387\uff08Precision\uff09 = {:.3f}%'.format(100 * precision[0]))\nprint('\u518d\u73fe\u7387\uff08Recall\uff09 = {:.3f}%'.format(100 * recall[0]))\nprint('F1\u5024\uff08F1-score\uff09 = {:.3f}%'.format(100 * f1_score[0]))","167ba51f":"# \u4e88\u6e2c\u5024\u3068\u6b63\u89e3\u306e\u30af\u30ed\u30b9\u96c6\u8a08\nconf_mat = pd.DataFrame(confusion_matrix(y, y_est), \n                        index=['\u6b63\u89e3 = successful', '\u6b63\u89e3 = failed and other'], \n                        columns=['\u4e88\u6e2c = failed and other', '\u4e88\u6e2c = successful'])\nconf_mat","57540bc9":"###  Scikit-learn\u3092\u7528\u3044\u3066\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30","60d847f3":"### \u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\uff08\u5168\u4f53\uff09","f78a1998":"### \u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\uff08\u4f7f\u3046\u3082\u306e\uff09","1d26b49d":"### \u5168\u4f53\u30c7\u30fc\u30bf\u306e\u78ba\u8a8d","3c626b25":"### \u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8"}}