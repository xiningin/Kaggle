{"cell_type":{"c211dcb7":"code","81eadade":"code","dd9acef1":"code","1f2d18a2":"code","4e678b76":"code","844d9ba9":"code","4cf1b338":"code","db66bfa0":"code","6a93f103":"code","edabad26":"code","15d42343":"code","368f720e":"code","b3fdc7cf":"code","1b4d23bd":"code","e5a9f352":"code","0ba6b0ad":"code","4e78af79":"code","8aec1dab":"code","f7107980":"code","f274aa21":"code","816f5dd6":"code","6359e24a":"code","48f14c94":"code","f4bdb043":"code","24a27144":"code","94787cc1":"code","5acbd56a":"code","45efba4a":"code","8079d1b0":"code","dbd9d3e8":"code","f85461bb":"code","abb6b089":"code","6a12fb0d":"code","6b54c90c":"code","ec307686":"code","82ec4bd8":"code","3457f7cb":"code","185c4476":"code","c0205a62":"code","b282c226":"code","cb74b150":"code","7d5a356c":"code","e3a872a4":"code","2aa6b954":"code","6e6ab949":"code","1da5af93":"code","d299c9cf":"code","71df58ab":"code","cd0ad32a":"code","d96ed043":"code","ede8fe23":"code","3d64ba58":"code","e1f0bad8":"code","86710fbf":"code","47daa2df":"code","e90512e0":"code","30ff58dc":"code","52f89575":"code","86c8ab0d":"code","9f908bbc":"code","2230a07a":"code","c534926d":"code","1e4148b8":"code","1c380791":"code","8d8ce68a":"code","9eedb619":"code","4ab2df51":"code","fdd060fc":"code","0bba7e4a":"code","82d519c9":"code","d59ffed4":"code","a18b1ebd":"code","796f132c":"code","8df55560":"code","8ba193b6":"code","6e262810":"code","8c27d892":"code","3e2753fc":"code","72e49917":"code","a3c60c6a":"code","aa9e201f":"code","58738038":"code","a23bea00":"code","5da69808":"code","8f3564c8":"code","320d1631":"code","8f77e1dd":"code","bed8ab00":"code","39c2460b":"code","16f988a9":"code","68001517":"code","528590d7":"code","e1b09639":"code","a4061bf3":"code","ab733893":"code","1d867cba":"code","bb18275a":"code","14659cfc":"code","c2d77aeb":"code","8f3eb56f":"code","f5144efc":"code","55e2ff84":"code","3baebcdf":"code","ca7f75d8":"code","df685253":"code","bc72684f":"code","5918e0b1":"code","534c1cb0":"code","bdf6835a":"code","1fdac5c7":"code","f580b786":"code","48e972fd":"code","99d5ad88":"code","15b15fe9":"code","0a4349e2":"code","5ac267e1":"code","aa08e377":"code","3aa94322":"code","c8946189":"code","8d732478":"code","e96be75f":"code","4df9f9b0":"code","e43881a5":"code","9e130024":"code","3d2285e5":"code","575545c0":"code","b36bc3b3":"code","145e6e89":"code","33b24ed2":"code","e680bcc5":"code","6430e9e3":"code","9e00dacb":"code","49f9eeb0":"code","d28ecc23":"code","5b3580e3":"code","d25083bc":"code","e69c7143":"code","9e0b20e2":"code","db421cb1":"code","240b3d66":"code","a1a2b98b":"code","7c1fc58b":"code","558e13de":"code","a81d1cc5":"code","5cd56709":"code","d525ad81":"code","c64e30da":"code","56b5bc9b":"code","503316ac":"code","6fb36284":"markdown","e616ee4e":"markdown","904ca69d":"markdown","6abe38af":"markdown","b7741e99":"markdown","f76bb87b":"markdown","5b2c7da5":"markdown","1a81814f":"markdown","fa6f52a6":"markdown","02f728a1":"markdown","f120f210":"markdown","0c746b53":"markdown","42b4f5b8":"markdown","4d653468":"markdown","3bfba174":"markdown","766567c3":"markdown","0ae5510a":"markdown","6d051e55":"markdown","ebcf0a68":"markdown","75521201":"markdown","1d7f27c5":"markdown","8a789e6b":"markdown","2015933e":"markdown","17b27a83":"markdown","fe98edbc":"markdown","c1edadae":"markdown","2a3f7a37":"markdown","a7832d3a":"markdown","c0a884bd":"markdown","50304c72":"markdown","05910b0c":"markdown","b6658546":"markdown","0ceb2705":"markdown","211a0593":"markdown","50e180a4":"markdown","31ee6f93":"markdown","0552fa68":"markdown","41b700db":"markdown","5a21b2bc":"markdown","1d0a6809":"markdown","a925caa3":"markdown","2bc2be3f":"markdown","f51efa0f":"markdown","f41ba7c3":"markdown","640d9258":"markdown","5f113600":"markdown","25a43897":"markdown","41240a8e":"markdown","fa68df56":"markdown","6f2cfb4e":"markdown","4c08eae9":"markdown","5aa31123":"markdown","3338ad73":"markdown","c9c2c80e":"markdown","bc241acb":"markdown","6474053a":"markdown","ef42b9e8":"markdown","f918af2b":"markdown","b9285fb1":"markdown","2de53ebc":"markdown","2a135f43":"markdown","d1f4e901":"markdown","63c215e1":"markdown","8b37fe93":"markdown","089a6442":"markdown","a3147da2":"markdown","010d8321":"markdown","986c281c":"markdown","0079252c":"markdown","0579ef91":"markdown","253b111b":"markdown","c8b07de3":"markdown","46bc1cb4":"markdown","5a740776":"markdown","44af10b4":"markdown","e6a3528e":"markdown","53a224f5":"markdown","c0c4d515":"markdown","e83777a1":"markdown","da44954d":"markdown","79378692":"markdown","c99c5679":"markdown","8e0050d4":"markdown","dc9cf5a7":"markdown","a248dd12":"markdown","68ff3e6d":"markdown","eaf88f0a":"markdown","5ae1665f":"markdown","4a82624b":"markdown","b5cf3e00":"markdown","8ddd373a":"markdown","da376d1d":"markdown","ce273a3d":"markdown","bc89f4eb":"markdown","8551eb18":"markdown","f58730b8":"markdown","4884e569":"markdown","3e96cd8c":"markdown","dfc9f2ec":"markdown","64806404":"markdown","666eb310":"markdown","47a1745e":"markdown","96c56e79":"markdown","fa1659b2":"markdown","4988f123":"markdown","78dccd21":"markdown","a45d698a":"markdown","18d86944":"markdown","4906e053":"markdown","b234b844":"markdown","0972626f":"markdown","57e3275c":"markdown","097988a5":"markdown","1cacd9dc":"markdown","a1756adf":"markdown","d34db905":"markdown","8b2ad73d":"markdown","ca089b87":"markdown","e8efa03c":"markdown","26767659":"markdown","79359919":"markdown","d196623f":"markdown","3b987071":"markdown","b0b5316e":"markdown","e69e02c9":"markdown","f3570fa1":"markdown","6846fc00":"markdown","a7e2dfc9":"markdown","dc691a6f":"markdown","3eaacc85":"markdown","10dab8ef":"markdown","4cba98e6":"markdown","f66a8453":"markdown","0d7d6b52":"markdown","6bc19c47":"markdown","f97d7bef":"markdown"},"source":{"c211dcb7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","81eadade":"import pandas\nimport pandas as pd\nimport numpy\nimport numpy as np\nimport random as rn\nimport functools\nimport re\n\nimport warnings\nwarnings.filterwarnings('ignore')","dd9acef1":"# for i in range(105, 132):\n#     print(f'* [{i}. XY](#{i})  ')","1f2d18a2":"import pandas\nimport pandas as pd\nimport numpy\nimport numpy as np\nimport random as rn\nimport functools\nimport re","4e678b76":"print('Task 1:')  \nprint(pd.__version__)","844d9ba9":"print('Task 2:')\ndtype = [('Col1','int32'), ('Col2','float32'), ('Col3','float32')]\nvalues = numpy.zeros(20, dtype=dtype)\nindex = ['Row'+str(i) for i in range(1, len(values)+1)]\n\ndf = pandas.DataFrame(values, index=index)\nprint(df)\n\ndf = pandas.DataFrame(values)\nprint(df)","4cf1b338":"print('Task 3:')\ndf = pandas.read_csv('..\/input\/datasets-for-pandas\/data1.csv', sep=';', header=None)\nprint(df.iloc[:4]) # 0 - 4 = 5 values","db66bfa0":"print('Task 4:')\nvalues = np.random.randint(2, 10, size=4)\nprint(values)","6a93f103":"print('Task 5:')\ndf = pd.DataFrame(np.random.randint(0, 100, size=(3, 2)), columns=list('xy'))\nprint(df)","edabad26":"print('Task 6:')\ndf = pd.DataFrame(np.random.randint(0, 100, size=(2, 4)), columns=['A', 'B', 'C', 'D'])\nprint(df)","15d42343":"print('Task 7:')\nvalues = np.random.randint(5, size=(2, 4))\nprint(values)\nprint(type(values))","368f720e":"print('Task 8:')\ndf = pd.DataFrame(np.random.randint(0, 100, size=(3, 5)), columns=['Toronto', 'Ottawa', 'Calgary', 'Montreal', 'Quebec'])\nprint(df)","b3fdc7cf":"print('Task 9:')  \ndtype = [('One','int32'), ('Two','int32')]\nvalues = np.zeros(3, dtype=dtype)\nindex = ['Row'+str(i) for i in range(1, 4)]\n\ndf = pandas.DataFrame(values, index=index)\nprint(df)","1b4d23bd":"print('Task 10:')  \ndtype = [('Science','int32'), ('Maths','int32')]\nvalues = np.zeros(3, dtype=dtype)\n\n#print(type(dtype))\n#values = np.random.randint(5, size=(3, 2))\n#print(values)\n#index = ['Row'+str(i) for i in range(1, 4)]\n\ndf = pandas.DataFrame(values, index=index)\nprint(df)","e5a9f352":"print('Task 11:')  \n\ncsv = pd.read_csv('..\/input\/datasets-for-pandas\/uk-500.csv')\nprint(csv.head())","0ba6b0ad":"print('Task 12:')  \n#df = df.from_csv(path, header, sep, index_col, parse_dates, encoding, tupleize_cols, infer_datetime_format)\ndf = pd.read_csv('..\/input\/datasets-for-pandas\/uk-500.csv')\nprint(df.head())","4e78af79":"print('Task 13:') \ndf = pandas.read_csv('..\/input\/datasets-for-pandas\/data1.csv', sep=',')\nprint(df.shape) \n#print(df[2:14])\nprint(df.iloc[0:4,0:2])\n#print(df[df.columns[0]])","8aec1dab":"print('Task 14:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)\n\nprint(df.iloc[::2, 0:3])    ","f7107980":"print('Task 15:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)\nprint(df) \ndf['total'] = df.sum(axis=1)\n\nprint(df)","f274aa21":"print('Task 16:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)\nprint(df) \n\ndf = df[df.science > 50]\nprint(df)","816f5dd6":"print('Task 17:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)\nprint(df) \n\ndf = df.query('science > 45')\nprint(df)","6359e24a":"print('Task 18:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\", skiprows=[5])\nprint(df.shape)\nprint(df)","48f14c94":"print('Task 19:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\", skiprows=[1, 5, 7])\nprint(df.shape)\n#print(df) \n\n#df = df[df[[1]] > 45]\nprint(df)","f4bdb043":"print('Task 20:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)\nprint(df) \n\n#df = df[int(df.columns[2]) > 45]\nprint(df)\nprint(type(df.columns[2]))","24a27144":"print('Task 21:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\", skiprows=[0])\nprint(df.shape)\nprint(df) \n\n#df = df[int(df.columns[2]) > 45]\n#print(df)\nprint(df.columns[2])","94787cc1":"print('Task 22:')\nfrom io import StringIO\n\ns = \"\"\"\n        1, 2\n        3, 4\n        5, 6\n    \"\"\"\n\ndf = pd.read_csv(StringIO(s), header=None)\n\nprint(df.shape)\nprint(df)","5acbd56a":"print('Task 23:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)\ndf['sum'] = df.sum(axis=1)\ndf['max'] = df.max(axis=1)\ndf['min'] = df.min(axis=1)\ndf['average'] = df.mean(axis=1).astype(int)\nprint(df)","45efba4a":"def apply_math_special(row):\n    return (row.maths * 2 + row.language \/ 2 + row.history \/ 3 + row.science) \/ 4                \n\nprint('Task 24:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)\ndf['sum'] = df.sum(axis=1)\ndf['max'] = df.max(axis=1)\ndf['min'] = df.min(axis=1)\ndf['average'] = df.mean(axis=1).astype(int)\ndf['math_special'] = df.apply(apply_math_special, axis=1).astype(int)\nprint(df)","8079d1b0":"def pass_one_subject(row):\n    if(row.maths > 34):\n        return 'Pass'\n    if(row.language > 34 and row.science > 34):\n        return 'Pass'\n    \n    return 'Fail'                \n\nprint('Task 25:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)   \n\ndf['pass_one'] = df.apply(pass_one_subject, axis=1)\nprint(df)","dbd9d3e8":"print('Task 26:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/abc2.csv', sep=',', encoding = \"utf-8\")\nprint(df.shape)   \nprint(df)\ndf.fillna(df.mean(), inplace=True)\n\n#df['pass_one'] = df.apply(pass_one_subject, axis=1)\nprint(df)","f85461bb":"print('Task 27:')\ndf = pd.DataFrame(np.random.rand(10, 5))\ndf.iloc[0:3, 0:4] = np.nan # throw in some na values\nprint(df)\ndf.loc[:, 'test'] = df.iloc[:, 2:].sum(axis=1)\nprint(df)","abb6b089":"print('Task 28:') \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/score.csv', sep=',', encoding = \"ISO-8859-1\")\nprint(df.shape) ","6a12fb0d":"print('Task 29:') \ndf = pd.DataFrame(np.random.rand(3,4), columns=list(\"ABCD\"))\nprint(df.shape)   \nprint(df)\ndf.fillna(df.mean(), inplace=True)\n\nprint(df)","6b54c90c":"print('Task 30:')  \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/data1.csv', sep=';') \nprint(df[-4:])","ec307686":"print('Task 31:')\nseries1 = pd.Series([i \/ 100.0 for i in range(1,6)])\nprint(series1)\ndef CumRet(x,y):\n    return x * (1 + y)\ndef Red(x):\n    return functools.reduce(CumRet,x,1.0)\ns2 = series1.expanding().apply(Red)\n# s2 = series1.expanding().apply(Red, raw=True) # is not working\nprint(s2)","82ec4bd8":"print('Task 32:')  \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/data1.csv', sep=';') \nprint(df[2:4])","3457f7cb":"print('Task 33:')  \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/data1.csv', sep=';') \nprint(df[-4:-1])","185c4476":"print('Task 34:')  \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/data1.csv', sep=';') \nprint(df.iloc[1:9])","c0205a62":"print('Task 35:')  \ndf = pandas.read_csv('\/kaggle\/input\/datasets-for-pandas\/data1.csv', sep=';')","b282c226":"print('Task 36:')  \ndef xrange(x):\n    return iter(range(x))\n\nrnd_1  =  [ rn.randrange ( 1 , 20 )  for  x  in  xrange ( 1000 )] \nrnd_2  =  [ rn.randrange ( 1 , 20 )  for  x  in  xrange ( 1000 )] \nrnd_3  =  [ rn.randrange ( 1 , 20 )  for  x in  xrange ( 1000 )] \ndate  =  pd . date_range ( '2012-4-10' ,  '2015-1-4' )\nprint(len(date))\ndata  =  pd . DataFrame ({ 'date' : date ,  'rnd_1' :  rnd_1 ,  'rnd_2' :  rnd_2 ,  'rnd_3' :  rnd_3 })\n\ndata.head()","cb74b150":"print('Task 37:')\nbelow_20 = data[data['rnd_1'] < 20]    \nprint(below_20)","7d5a356c":"print('Task 38:') \ndef xrange(x):\n    return iter(range(x))\nrnd_1  =  [ rn.randrange ( 1 , 20 )  for  x  in  xrange ( 1000 )] \nrnd_2  =  [ rn.randrange ( 1 , 20 )  for  x  in  xrange ( 1000 )] \nrnd_3  =  [ rn.randrange ( 1 , 20 )  for  x in  xrange ( 1000 )] \ndate  =  pd . date_range ( '2012-4-10' ,  '2015-1-4' )\nprint(len(date))\ndata  =  pd . DataFrame ({ 'date' : date ,  'rnd_1' :  rnd_1 ,  'rnd_2' :  rnd_2 ,  'rnd_3' :  rnd_3 })\nbelow_20 = data[data['rnd_1'] < 20]\nten_to_20 = data[(data['rnd_1'] >= 5) & (data['rnd_1'] < 10)]\n#print(ten_to_20)","e3a872a4":"print('Task 39:')      \ndate  =  pd . date_range ( '2018-08-01' ,  '2018-08-15' )\ndate_count = len(date)\n\ndef fill_rand(start, end, count):\n    return [rn.randrange(1, 20 ) for x in xrange( count )]\n\nrnd_1 = fill_rand(1, 20, date_count) \nrnd_2 = fill_rand(1, 20, date_count) \nrnd_3 = fill_rand(1, 20, date_count)\n#print(len(date))\ndata  =  pd . DataFrame ({ 'date' : date ,  'rnd_1' :  rnd_1 ,  'rnd_2' :  rnd_2 ,  'rnd_3' :  rnd_3 })\n#print(len(date))\nten_to_20 = data[(data['rnd_1'] >= 15) & (data['rnd_1'] < 20)]\nprint(ten_to_20)","2aa6b954":"print('Task 40:')      \ndate  =  pd . date_range ( '2018-08-01' ,  '2018-08-15' )\ndate_count = len(date)\n\ndef fill_rand(start, end, count):\n    return [rn.randrange(1, 20 ) for x in xrange( count )]\n\nrnd_1 = fill_rand(1, 20, date_count) \nrnd_2 = fill_rand(1, 20, date_count) \nrnd_3 = fill_rand(1, 20, date_count)\n\ndata  =  pd . DataFrame ({ 'date' : date ,  'rnd_1' :  rnd_1 ,  'rnd_2' :  rnd_2 ,  'rnd_3' :  rnd_3 })\n\nten_to_20 = data[(data['rnd_1'] >= 15) & (data['rnd_1'] < 33)]\nprint(ten_to_20)","6e6ab949":"print('Task 41:')  \ndate  =  pd . date_range ( '2018-08-01' ,  '2018-08-15' )\ndate_count = len(date)\n\ndef xrange(x):\n    return iter(range(x))\n\ndef fill_rand(start, end, count):\n    return [rn.randrange(1, 20 ) for x in xrange( count )]\n\nrnd_1 = fill_rand(1, 20, date_count) \nrnd_2 = fill_rand(1, 20, date_count) \nrnd_3 = fill_rand(1, 20, date_count)\n\ndata  =  pd . DataFrame ({ 'date' : date ,  'rnd_1' :  rnd_1 ,  'rnd_2' :  rnd_2 ,  'rnd_3' :  rnd_3 })\nfilter_loc = data.loc[ 2 : 4 ,  [ 'rnd_2' ,  'date' ]]\nprint(filter_loc)","1da5af93":"print('Task 42:')\ndate_date = data.set_index( 'date' ) \nprint(date_date.head())","d299c9cf":"print('Task 43:') \ndf = pd.DataFrame({\n    'a' : [1,2,3,4], \n    'b' : [9,8,7,6],\n    'c' : [11,12,13,14]\n})\nprint(df) \n\nprint('changing on one column')\n# Change columns\ndf.loc[df.a >= 2,'b'] = 9\nprint(df)","71df58ab":"print('Task 44:')  \nprint('changing on multipe columns')\ndf.loc[df.a > 2,['b', 'c']] = 45\nprint(df)","cd0ad32a":"print('Task 45:')  \nprint(df)\ndf_mask = pd.DataFrame({\n    'a' : [True] * 4, \n    'b' : [False] * 4,\n    'c' : [True, False] * 2\n})\nprint(df.where(df_mask,-1000))","d96ed043":"print('Task 46:')\nprint(df)  \ndf['logic'] = np.where(df['a'] > 5, 'high', 'low')\nprint(df)","ede8fe23":"print('Task 47:')\nmarks_df = pd.DataFrame({\n    'Language' : [60, 45, 78, 4], \n    'Math' : [90, 80, 23, 60],\n    'Science' : [45, 90, 95, 20]\n});\nprint(marks_df)\nmarks_df['language_grade'] = np.where(marks_df['Language'] >= 50, 'Pass', 'Fail')\nmarks_df['math_grade'] = np.where(marks_df['Math'] >= 50, 'Pass', 'Fail')\nmarks_df['science_grade'] = np.where(marks_df['Science'] >= 50, 'Pass', 'Fail')\nprint(marks_df)","3d64ba58":"print('Task 48:')  \nmarks_df = pd.DataFrame({\n    'Language' : [60, 45, 78, 4], \n    'Math' : [90, 80, 23, 60],\n    'Science' : [45, 90, 95, 20]\n});\nprint(marks_df)\nmarks_df_passed_in_language = marks_df[marks_df.Language >=50 ]\nprint(marks_df_passed_in_language)","e1f0bad8":"print('Task 49:')  \nmarks_df_passed_in_lang_math = marks_df[(marks_df.Language >=50) & (marks_df.Math >= 50)]\nprint(marks_df_passed_in_lang_math)","86710fbf":"print('Task 50:')  \nmarks_df_passed_in_lang_and_sc = marks_df.loc[(marks_df.Language >=50) & (marks_df.Science >= 50)]\nprint(marks_df_passed_in_lang_and_sc)","47daa2df":"print('Task 51:')\nstars = {\n    'age' : [31, 23, 65, 50],\n    'movies' : [51, 23, 87, 200],\n    'awards' : [42, 12, 4, 78]\n    }\nstar_names = ['dhanush', 'simbu', 'kamal', 'vikram']\nstars_df = pd.DataFrame(data=stars, index=[star_names])\nprint(stars_df)","e90512e0":"print('Task 52:')  \nprint(stars_df.iloc[1:3])","30ff58dc":"print('Task 53:')  \nnumbers = pd.DataFrame({\n        'one' : [10, 50, 80, 40],\n        'two' : [2, 6, 56, 45]\n    },\n    index = [12, 14, 16, 18])\nprint(numbers)\n\nprint('label between 12 and 16')\nprint(numbers.loc[12:16])\n\nprint('index between 1 and 3')\nprint(numbers.iloc[1:3])","52f89575":"print('Task 54:') \nstars = {\n    'age' : [31, 23, 65, 50],\n    'movies' : [51, 23, 87, 200],\n    'awards' : [42, 12, 4, 78]\n    }\nstar_names = ['dhanush', 'simbu', 'kamal', 'vikram']\nstars_df = pd.DataFrame(data=stars, index=[star_names])\nnumbers = pd.DataFrame({\n        'one' : [10, 50, 80, 40],\n        'two' : [2, 6, 56, 45]\n    },\n    index = [12, 14, 16, 18])\nprint(numbers)","86c8ab0d":"print('Task 55:')\n\nage_movies_25 = stars_df[(stars_df.movies > 25 ) & (stars_df.age > 25)]  \nprint(age_movies_25)","9f908bbc":"print('Task 56:')  \ncustom_stars = stars_df[stars_df.age.isin([31, 65])]\nprint(custom_stars)","2230a07a":"print('Task 57:')  \nprint(numbers)\nprint(numbers[~( (numbers.one > 45) & (numbers.two < 50) )])","c534926d":"print('Task 58:')\ndef GrowUp(x):\n    avg_weight =  sum(x[x['size'] == 'series1'].weight * 1.5)\n    avg_weight += sum(x[x['size'] == 'M'].weight * 1.25)\n    avg_weight += sum(x[x['size'] == 'L'].weight)\n    avg_weight \/= len(x)\n    return pd.Series(['L',avg_weight,True], index=['size', 'weight', 'adult'])\n\nanimals_df = pd.DataFrame({'animal': 'cat dog cat fish dog cat cat'.split(),\n                   'size': list('SSMMMLL'),\n                   'weight': [8, 10, 11, 1, 20, 12, 12],\n                   'adult' : [False] * 5 + [True] * 2})\n\ngb = animals_df.groupby(['animal'])\n\nexpected_df = gb.apply(GrowUp)\nprint(expected_df)","1e4148b8":"print('Task 59:')\nweights = animals_df.groupby(['weight']).get_group(20)  \nprint(weights)","1c380791":"print('Task 60:')\nsides_df = pd.DataFrame({\n    'a' : [1, 1, 2, 4],\n    'b' : [2, 1, 3, 4]\n    })  \nprint(sides_df)\nsource_cols = sides_df.columns\nprint(source_cols)\nnew_cols = [str(x)+\"_side\" for x in source_cols]\nside_category = {\n    1 : 'North',\n    2 : 'East',\n    3 : 'South', \n    4 : 'West'\n    }\nsides_df[new_cols] = sides_df[source_cols].applymap(side_category.get)\nprint(sides_df)","8d8ce68a":"print('Task 61:')  \ndf = pd.DataFrame({'A' : [1, 1, 2, 2], 'B' : [1, -1, 1, 2]})\nprint(df)\n\ngb = df.groupby('A')\n\ndef replace(g):\n    mask = g < 0\n    g.loc[mask] = g[~mask].mean()\n    return g\n\ngbt = gb.transform(replace)\n\nprint(gbt)","9eedb619":"print('Task 62:') \nmarks_df = pd.DataFrame({\n    'Language' : [60, 45, 78, 4], \n    'Math' : [90, 80, 23, 60],\n    'Science' : [45, 90, 95, 20]\n});\nprint(marks_df)\nmarks_df_passed_in_lang_or_sc = marks_df.loc[(marks_df.Language >=50) | (marks_df.Science >= 50)]\nprint(marks_df_passed_in_lang_or_sc)","4ab2df51":"print('Task 63:')  \nmarks_df['passed_one_subject'] = 'Fail' \nmarks_df.loc[(marks_df.Language >=50) , 'passed_one_subject'] = 'Pass'\nprint(marks_df)","fdd060fc":"print('Task 64:')  \ndf = pd.DataFrame({\n    \"a\": np.random.randint(0, 100, size=(5,)), \n    \"b\": np.random.randint(0, 70, size=(5,))\n})\nprint(df)\npar = 65\nprint('with argsort')\ndf1 = df.loc[(df.a-par).abs().argsort()]\nprint(df1)\n\nprint(df.loc[(df.b-2).abs().argsort()])","0bba7e4a":"print('Task 65:')  \nstars = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"movies\": [2, 3, 90, 45, 34, 2] \n})\nprint(stars.loc[(stars.age - 50).abs().argsort()])","82d519c9":"print('Task 66:')  \nprint(stars.loc[(stars.age - 17).abs().argsort()])","d59ffed4":"print('Task 67:')\nstars = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"movies\": [22, 33, 90, 75, 34, 2] \n})  \nprint(stars)\nprint('Young and more movies acted')\nyoung = stars.age < 30    \nmore_movies = stars.movies > 30\nyoung_more = [young, more_movies]\nyoung_more_Criteria = functools.reduce(lambda x, y : x & y, young_more)\nprint(stars[young_more_Criteria])","a18b1ebd":"print('Task 68:')  \nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8] \n})  \nprint(employees)\nprint('Young, Higher Salary, and Higher Position')\nyoung = employees.age < 30\nhigh_salary = employees.salary > 60\nhigh_position = employees.grade > 6\nyoung_salary_position = [young, high_salary, high_position]\nyoung_salary_position_Criteria = functools.reduce(lambda x, y : x & y, young_salary_position)\nprint(employees[young_salary_position_Criteria])","796f132c":"print('Task 69:')  \nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8] \n})  \nprint(employees)\nemployees.rename(columns={'age': 'User Age', 'salary': 'Salary 2018'}, inplace=True)\nprint(employees)","8df55560":"print('Task 70:')  \nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8] \n})  \nprint(employees)\nemployees['group'] = pd.Series(np.random.randn(len(employees)))\nprint(employees)","8ba193b6":"print('Task 71:')  \nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8] \n})  \nprint(employees)\nemployees['group'] = pd.Series(np.random.randn(len(employees)))\nprint(employees)\nemployees.drop(employees.columns[[0]], axis=1, inplace = True)\nprint(employees)","6e262810":"print('Task 72:')  \nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8] \n})  \nprint(employees)\nemployees['group'] = pd.Series(np.random.randn(len(employees)))\nprint(employees)\nemployees.drop(employees.columns[[1, 2]], axis=1, inplace = True)\nprint(employees)","8c27d892":"print('Task 73:')  \nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8],\n    \"group\" : [1, 1, 2, 2, 2, 1] \n    \n})  \nprint(employees)\nemployees.drop(employees.columns[[0, len(employees.columns)-1]], axis=1, inplace = True)\nprint(employees)","3e2753fc":"print('Task 74:')  \nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8],\n    \"group\" : [1, 1, 2, 2, 2, 1] \n    \n})  \nprint(employees)\ngroup = employees.pop('group')\nprint(employees)\nprint(group)","72e49917":"print('Task 75:')  \n# df = pd.DataFrame.from_items([('A', [1, 2, 3]), ('B', [4, 5, 6]), ('C', [7,8, 9])], orient='index', columns=['one', 'two', 'three'])\n# print(df) # throwing error","a3c60c6a":"print('Task 76:')\nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8],\n    \"group\" : [1, 1, 2, 2, 2, 1] \n    \n})  \nprint(employees)  \nemployees_list1 = list(employees.columns.values) \nemployees_list2 = employees.values.tolist()\n#employees_list = list(employees)\nprint(employees_list1)\nprint(employees_list2)","aa9e201f":"print('Task 77:')\nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8],\n    \"group\" : [1, 1, 2, 2, 2, 1] \n    \n})  \nprint(employees)  \nemployees_list2 = employees.values.tolist()\nprint(employees_list2)\nprint(type(employees_list2))\nprint(len(employees_list2))","58738038":"print('Task 78:')\nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8],\n    \"group\" : [1, 1, 2, 2, 2, 1] \n    \n})  \nprint(employees)  \nemployees_list2 = employees.values\nprint(employees_list2)\nprint(type(employees_list2))\nprint(employees_list2.shape)","a23bea00":"print('Task 79:')\nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8],\n    \"group\" : [1, 1, 2, 2, 2, 1] \n    \n})  \nprint(employees)  \nemployees_list2 = map(list, employees.values)\nprint(employees_list2)\nprint(type(employees_list2))","5da69808":"print('Task 80:')\nemployees = pd.DataFrame({\n    \"age\": [17, 50, 24, 45, 65, 18], \n    \"salary\": [75, 33, 90, 175, 134, 78],\n    \"grade\" : [7, 8, 9, 2, 7, 8],\n    \"group\" : [1, 1, 2, 2, 2, 1] \n    \n})  \nprint(employees)  \nemployees_list2 = list(map(list, employees.values))\nprint(employees_list2)\nprint(type(employees_list2))","8f3564c8":"print('Task 81:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)\nusers.drop_duplicates('id', inplace=True, keep='last')\nprint(users)","320d1631":"print('Task 82:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)\nusers1 = users[['id', 'city']]\nprint(users1)","8f77e1dd":"print('Task 83:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n}) \nprint(users)\ncolumns = ['id', 'count']\nusers1 = pd.DataFrame(users, columns=columns)\nprint(users1)","bed8ab00":"print('Task 84:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)    \nusers1 = users.iloc[0:2, 1:3]\nprint(users1)","39c2460b":"print('Task 85:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)    \nfor index, row in users.iterrows():\n    print(row['city'], \"==>\", row['count'])","16f988a9":"print('Task 86:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)    \nfor row in users.itertuples(index=True, name='Pandas'):\n    print(getattr(row, 'city'))\n    \nfor row in users.itertuples(index=True, name='Pandas'):\n    print(row.count)","68001517":"print('Task 87:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)    \nfor i, row in users.iterrows():\n    for j, col in row.iteritems():    \n        print(col)","528590d7":"print('Task 88:')  \npointlist = [\n                {'points': 50, 'time': '5:00', 'year': 2010}, \n                {'points': 25, 'time': '6:00', 'month': \"february\"}, \n                {'points':90, 'time': '9:00', 'month': 'january'}, \n                {'points_h1':20, 'month': 'june'}\n            ]\nprint(pointlist)\npointDf = pd.DataFrame(pointlist)\nprint(pointDf)\n\npointDf1 = pd.DataFrame.from_dict(pointlist)\nprint(pointDf1)","e1b09639":"print('Task 89:')\ndf = pd.DataFrame(np.random.randn(10,6))\n# Make a few areas have NaN values\ndf.iloc[1:3,1] = np.nan\ndf.iloc[5,3] = np.nan\ndf.iloc[7:9,5] = np.nan\nprint(df)\ndf1 = df.isnull()\nprint(df1)","a4061bf3":"print('Task 90:')  \ndf = pd.DataFrame(np.random.randn(10,6))\n# Make a few areas have NaN values\ndf.iloc[1:3,1] = np.nan\ndf.iloc[5,3] = np.nan\ndf.iloc[7:9,5] = np.nan\nprint(df)\nprint(df.isnull().sum())\nprint(df.isnull().sum(axis=1))\nprint(df.isnull().sum().tolist())","ab733893":"print('Task 91:')  \ndf = pd.DataFrame(np.random.randn(10,6))\n# Make a few areas have NaN values\ndf.iloc[1:3,1] = np.nan\ndf.iloc[5,3] = np.nan\ndf.iloc[7:9,5] = np.nan\nprint(df)\nprint(df.isnull().sum(axis=1))","1d867cba":"print('Task 92:')  \ndf = pd.DataFrame(np.random.randn(10,6))\n# Make a few areas have NaN values\ndf.iloc[1:3,1] = np.nan\ndf.iloc[5,3] = np.nan\ndf.iloc[7:9,5] = np.nan\nprint(df)\nprint(df.isnull().sum().tolist())","bb18275a":"print('Task 93:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)\n\n# below line throws error\n# users1 = users.reindex_axis(['city', 'count', 'id'], axis=1)\n# print(users1)\n\nusers2 = users.reindex(columns=['city', 'id', 'count'])\nprint(users2)","14659cfc":"print('Task 94:')\nnumbers = pd.DataFrame({\n    \"id\": [1, 2, 3, 4, 5, 6], \n    \"number\": [10, 20, 30, 30, 23, 12]\n    \n})  \nprint(numbers)\nnumbers.drop(numbers.index[[0, 3, 5]], inplace=True)\nprint(numbers)","c2d77aeb":"print('Task 95:')  \nnumbers = pd.DataFrame({\n    \"id\": [1, 2, 3, 4, 5, 6], \n    \"number\": [10, 20, 30, 30, 23, 12]\n    \n}, index=['one', 'two', 'three', 'four', 'five', 'six'])  \nprint(numbers)\nnumbers1 = numbers.drop(['two','six'])\nprint(numbers1)\nnumbers2 = numbers.drop('two')\nprint(numbers2)","8f3eb56f":"print('Task 96:')\ncats = animals_df.groupby(['animal']).get_group('cat')\nprint(cats)","f5144efc":"print('Task 97:')  \nx = numpy.array([\n                    [ 1,  2,  3,  4,  5],\n                    [ 6,  7,  8,  9, 10],\n                    [11, 12, 13, 14, 15],\n                    [16, 17, 18, 19, 20]\n                ]\n    )\nprint(x)\nprint(x[::2])","55e2ff84":"print('Task 98:')  \nx = numpy.array([\n                    [ 1,  2,  3,  4,  5],\n                    [ 6,  7,  8,  9, 10],\n                    [11, 12, 13, 14, 15],\n                    [16, 17, 18, 19, 20]\n                ]\n    )\nprint(x)\nprint(x[:, 1::2])","3baebcdf":"print('Task 99:')  \n\nx = numpy.array([\n                    [ 1,  2,  3,  4,  5],\n                    [ 6,  7,  8,  9, 10],\n                    [11, 12, 13, 14, 15],\n                    [16, 17, 18, 19, 20]\n                ]\n    )\nprint(x)\nprint(x[::2, 1::2])","ca7f75d8":"print('Task 100:')  \nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)\nusers.drop_duplicates('id', inplace=True)\nprint(users)","df685253":"print('Task 101:')  \nusers = pd.DataFrame({\n    \"name\": ['kevin', 'james', 'kumar', 'kevin', 'kevin', 'james'], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \nprint(users)\nusers.drop_duplicates('name', inplace=True, keep='last')\nprint(users)\nusers1 = users.drop_duplicates('name', keep=False)\nprint(users1)","bc72684f":"print('Task 102:')\nanimals_df1 = animals_df.groupby('animal').apply(lambda x: x['size'][x['weight'].idxmax()])\nprint(animals_df1)","5918e0b1":"print('Task 103:')  \ndf = pd.DataFrame(np.random.randn(6,1), index=pd.date_range('2013-08-01', periods=6, freq='B'), columns=list('A'))\nprint(df)\ndf.loc[df.index[3], 'A'] = np.nan\nprint(df)","534c1cb0":"print('Task 104:')\ndf1 = df.reindex(df.index[::-1]).ffill()\nprint(df1)","bdf6835a":"print('Task 105:')\nanimals_df = pd.DataFrame({'animal': 'cat dog cat fish dog cat cat'.split(),\n                   'size': list('SSMMMLL'),\n                   'weight': [8, 10, 11, 1, 20, 12, 12],\n                   'adult' : [False] * 5 + [True] * 2})\nprint(animals_df)","1fdac5c7":"# 106. Change columns\nprint('Task 106:')\n\nusers = pd.DataFrame({\n    \"name\": ['kevin', 'james', 'kumar', 'kevin', 'kevin', 'james'], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa']\n}) \n\nprint('Before changing columns : ')\nprint(users)\n\n# change columns\nusers_new = users.rename({'name': 'first_name', 'city': 'current_city'}, axis = 1)\n\nprint('\\nAfter changing columns : ')\nprint(users_new)","f580b786":"# 107. Match with isin function\n\nprint('Task 107:')\n\nusers = pd.DataFrame({\n    \"name\": ['kevin', 'james', 'kumar', 'kevin', 'kevin', 'james'], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa']\n}) \n\nprint('Original Dataframe:')\nprint(users)\n\nprint('\\nFinding `Montreal` in by using isin function :')\n\nusers.isin(['Montreal']).any()","48e972fd":"# 108. Finding specific items by using `isin` function\n\nprint('Task 108:')\n\nusers = pd.DataFrame({\n    \"name\": ['kevin', 'james', 'kumar', 'kevin', 'kevin', 'james'], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa']\n}) \n\nprint('Original Dataframe: ')\nprint(users)\n\nprint('\\nFinding `Montreal` in using isin and stack them: ')\nprint(users[users.isin(['Montreal'])].stack())","99d5ad88":"# 109. Exclude specific matching\n\nprint('Task 109:')\n\nusers = pd.DataFrame({\n    \"name\": ['kevin', 'james', 'kumar', 'kevin', 'kevin', 'james'], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa']\n}) \n\nprint('Original Dataframe: ')\nprint(users)\n\nprint('\\nExcluding `Montreal` in using isin and stack them: ')\nprint(users[~users.isin(['Montreal'])].stack())","15b15fe9":"# 110. Apply a custom function on multiple columns\n\nprint('Task 110:')\n\namounts = pd.DataFrame({\n    \"CIBC\": [200, 4200, 300, 300], \n    \"TD\": [1200, 800, 4000, 2000]\n})\n\nprint('Original Dataframe: ')\nprint(amounts)\n\ndef get_total_amount(x):\n    \n    # if the amount is less than 500, skip it\n    total_amount = 0\n    \n    if(x['CIBC'] > 499):\n        total_amount += x['CIBC']\n        \n    if(x['TD'] > 499):\n        total_amount += x['TD']\n    \n    return total_amount\n\namounts['Total'] = amounts.apply(get_total_amount, axis = 1)\n\nprint('Dataframe after applying the custom function: ')\nprint(amounts)","0a4349e2":"# 111. iterrows as tuples\n\nprint('Task 111:')\n\nusers = pd.DataFrame({\n    \"id\": [1, 1, 2, 2, 3, 3], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \n\nprint(users)  \n\nprint('\\nIterate rows as tuples:')\nfor row in users.itertuples():\n    print(row)","5ac267e1":"# 112. Dataframe with NaN\n\nprint('Task 112:')\n\ndf = pd.DataFrame(np.nan, index = [0, 1, 2], columns = ['A', 'B', 'C'])\n\nprint(df)","aa08e377":"# 113. Simple Dataframe with NaN\n\nprint('Task 113:')\n\ndf = pd.DataFrame([np.nan] * 5)\n\nprint(df)","3aa94322":"# 114. Pandas and Date with Range\n\nprint('Task 114:')\n\nimport datetime as dt\n\npd.np.random.seed(0)\n\ndf = pd.DataFrame({\n     \"date\" : [dt.date(2012, x, 1) for x in range(1, 11)]\n})\n\nprint(df)","c8946189":"# 115. Pandas and Numpy Repeat\n\nprint('Task 115:')\n\ndf = pd.DataFrame({\n     \"entry\" : np.repeat(3, 7) # Repeat the number for 7 times\n})\n\nprint(df)","8d732478":"# 116. read_sql in Pandas\n\nprint('Task 116:')\n\nimport sqlite3 as sql\n\nconn = sql.connect('\/kaggle\/input\/rj-sample-datasets\/sample.db')\n\ndemo_df = pd.read_sql('SELECT ID, NAME FROM DEMO', conn)\n\nprint(demo_df)\n\n# Note: online sqlite https:\/\/sqliteonline.com\/","e96be75f":"# 117. Get a single value by iat\n\nprint('Task 117:')\n\ndf = pd.DataFrame(np.random.randint(0, 100, size = (7, 2)), columns = list('ab'))\n\nprint('\\nOriginal Dataframe:')\nprint(df)\n\nval = df.iat[3, 1]\n\nprint('\\nGetting value at 3rd row and first col:')\nprint(val)","4df9f9b0":"# 118. Get last n elements\n\nprint('Task 118:')\n\ndf = pd.DataFrame(np.random.randint(0, 100, size = (7, 2)), columns = list('ab'))\n\nprint('\\nOriginal Dataframe:')\nprint(df)\n\ntail_df = df.tail(3)\n\nprint('\\nLast 3 rows:')\nprint(tail_df)","e43881a5":"# 119. Add data one by one by using loc function\n\ndf = pd.DataFrame(columns = ['rows', 'cols', 'time taken'])\n\ndf.loc['Dataset1 - Dask'] = (1000, 20, 10)\ndf.loc['Dataset1 - Pandas'] = (1000, 20, 15)\n\ndf","9e130024":"!pip install country_converter","3d2285e5":"# 120. Convert country in Dataframe \n\nimport country_converter as coco\nimport pandas as pd\n\ndf = pd.DataFrame({'code': ['IN', 'USA', 'BR', 'CAN']})\n\nprint('Before:')\nprint(df)\n\ndf['country'] = df.code.apply(lambda x: coco.convert(names = x, to = 'name_short', not_found = None))\n\nprint('\\nAfter:')\nprint(df)","575545c0":"# 121. Group by multiple columns\n\ndf = pd.read_csv('..\/input\/datasets-for-pandas\/uk-500.csv')\n\ndf.groupby(['county', 'first_name']).sum().sample(5)","b36bc3b3":"# 122. Compare two dataframes\n\ndf1 = pd.DataFrame({\n    'a' : [1,2,3], \n    'b' : [9,8,7]\n})\n\ndf2 = pd.DataFrame({\n    'a' : [1,1,3], \n    'b' : [12,8,12]\n})\n\nprint(df1.compare(df2))","145e6e89":"# 123. Difference between datetime by only seconds or dates\n\ndf1 = pd.to_datetime('2020-10-14 14:52:21')\ndf2 = pd.to_datetime('2020-10-18 15:58:10')\n\ndelta = (df2 - df1)\n\nprint('days   : ', delta.days)\nprint('seconds: ', delta.seconds)","33b24ed2":"# 124. Get dates and delta days in Dataframe\n\nentries_count = 6\n\ndate_series = pd.Series(pd.date_range('2020-09-01', periods = entries_count, freq = 'D'))\n\ndf = pd.DataFrame({'entry_date': date_series})\n\nprint(df)","e680bcc5":"# 125. Get dates and delta days in Dataframe\n\nentries_count = 5\n\ndate_series = pd.Series(pd.date_range('2020-09-01', periods = entries_count, freq = 'D'))\n\ntime_delta_series = pd.Series([pd.Timedelta(days = i) for i in range(entries_count)])\n\ndf = pd.DataFrame({'entry_date': date_series, 'delta_days': time_delta_series})\n\nprint(df)","6430e9e3":"# 126. Date addition with time delta\n\nentries_count = 3\n\ndate_series = pd.Series(pd.date_range('2020-09-01', periods = entries_count, freq = 'D'))\n\ntime_delta_series = pd.Series([pd.Timedelta(days = i) for i in range(entries_count)])\n\ndf = pd.DataFrame({'entry_date': date_series, 'delta_days': time_delta_series})\n\nprint('\\nBefore:')\nprint(df)\n\n\ndf['new_entry_date'] = df['entry_date'] + df['delta_days']\nprint('\\nAfter:')\nprint(df)\n\nprint('\\nData types:')\nprint(df.dtypes)","9e00dacb":"# 127. Converting Pandas innner list to numpy array without the word `list`\n\ns = pd.Series([[1, 2, 3], np.array([1, 2, 3])])\n    \nprint('Original Series:')\nprint(s)  \n\narr = np.array(s)\nprint('\\nSeries to Array:')\nprint(arr)\n\nprint('\\nAfter converting inner elements to list:')\nx = np.array(s[:].tolist())\nprint(x)\n\n# Source: https:\/\/stackoverflow.com\/questions\/64089218\/how-to-convert-data-frame-pandas-into-list-in-numpy-without-word-list-in-array","49f9eeb0":"# 128. Append series to existing Dataframe\n\ndf = pd.DataFrame([1, 3, 4, 5], columns=[\"id\"])\ndf.set_index(\"id\")\nprint('Before:')\nprint(df)\n\nmarks = pd.Series([79, 20, 45, 99])\ndf[\"marks\"] = marks\nprint('\\nAfter:')\nprint(df)","d28ecc23":"# 129. Cumulative sum with group by with multiple values\n\ndf = pd.DataFrame({\n    'City': ['Toronto', 'Toronto', 'Toronto', 'Montreal', 'Montreal', 'Montreal', 'New York', 'Toronto', 'New York', 'New York'], \n    'Year': [2020, 2020, 2018, 2018, 2018, 2012, 2012, 2012, 2016, 2018], \n    'Points': [1000, 2000, 3000, 3000, 2000, 1500, 1500, 500, 500, 300]\n})\n\nprint('Before:')\nprint(df)\n\ndf.sort_values(['City', 'Year'], inplace=True)\nprint('\\nAfter Sorting:')\nprint(df)\n\ndf['Points_cum'] = df.groupby(['City', 'Year'])['Points'].cumsum()\nprint('\\nAfter Cumulative Sum:')\nprint(df)","5b3580e3":"# 130. Clean URL in Pandas String (remove string after specific item)\n\ndf = pd.DataFrame({\n    'url': ['https:\/\/www.abc.com\/page\/2\/unit234', 'https:\/\/www.abc.com\/page\/3\/unit34', 'https:\/\/www.abc.com\/page\/4\/unit89']\n})\n\nprint('Original:')\nprint(df)\n\ndf['url'] = df['url'].str.replace('\\\/unit.*', '\/', regex=True)\nprint('\\nAfer removing unit and future chars:')\nprint(df)","d25083bc":"# 131. Find any matching value\n\nprint('Task 131:')\n\nusers = pd.DataFrame({\n    \"name\": ['kevin', 'james', 'kumar', 'kevin', 'kevin', 'james'], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa']\n}) \n\nprint('Original Dataframe:')\nprint(users)\n\nprint('\\nFinding `Montreal` in any cell :')\nprint(users[users.eq('Montreal').any(1)])","e69c7143":"# 132. Add prefix on column lables\n\nimport pandas as pd\nimport numpy as np\n\nnp.random.seed(34)\n\ndf = pd.DataFrame(np.random.rand(30, 5)).add_prefix(\"feature_\")\ndf[\"year\"] = np.repeat([\"2012\", \"2013\", \"2014\"], 10)\n\nprint(df.head())\nprint(len(df))","9e0b20e2":"# 133. Set values on where condition\n\ndf = pd.DataFrame({'city': ['Toronto', 'Toronto', 'Montreal', 'Montreal', 'Montreal'], 'Year': [2017, 2018, 2019, 2020, 2021]})\n\nprint('Original;')\nprint(df)\n\ndf['airport'] = None\ndf['airport'] = np.where(df['city'] == 'Toronto', {'airport_count': 2}, df['airport'])\n\nprint('\\nAfter:')\nprint(df)","db421cb1":"# 134. Flatten Dictionary to Dataframe\n\nd = {\n    \"country\" : {\n        \"canada\": {\n            \"code\": 'CA',\n            \"city\": {\n                \"name\": \"Toronto\",\n                \"population\": \"6M\"\n            }\n        }\n    }\n}\n\ndf = pd.json_normalize(d)\n\nprint(df)","240b3d66":"# 135. Using transform\n\ndf = pd.DataFrame({\n        'ID': [1, 2, 2, 3, 3, 4, 4],\n        'Value': [10, 5, 5, 10, 4, 11, 12]\n    })\n\ndf['Count'] = df.groupby('ID')['Value'].transform('count')\nprint(df)","a1a2b98b":"# 136. Summing all elements\n\ndf = pd.DataFrame({\n        'ID': [1, 2, 2, 3, 3, 4, 4],\n        'Value': [10, 5, 5, 10, 4, 11, 12]\n    })\n\nsum1 = df.stack().sum()\nprint(sum1)\n\nsum2 = df.to_numpy().sum()\nprint(sum2)","7c1fc58b":"# 137. Combine multiple CSV files by using Dask\n\nimport dask.dataframe as dd\n\ndf = dd.read_csv('\/kaggle\/input\/rj-sample-datasets\/transaction-*.csv')\n\ndf = df.compute() \n\ndf.columns = ['Date', 'Description', 'Spent']\n\ndf.head(2)","558e13de":"# 138. Separate Elements into Bins\n\ndf = pd.DataFrame({'number': np.random.randint(1, 100, 5)}) \nprint('Original:')\nprint(df)\n\ndf['bins'] = pd.cut(x = df['number'], bins = [1, 20, 40, 60, 80, 100]) \nprint('\\nAfter pandas cut:')\nprint(df)","a81d1cc5":"# 139. Encode the object as enumerated or categorical\n\ncodes, uniques = pd.factorize(['TO', 'NY', 'CA', 'MNT', 'CA', 'NY'], sort = True)\n\nprint(codes)\nprint(uniques)","5cd56709":"# 140. \n\n\ndf = pd.read_csv(\"\/kaggle\/input\/rj-sample-datasets\/sample-transaction.csv\", names = ['date', 'description', 'spent'])\n\n# df\n\nbins = np.linspace(min(df['spent']), max(df['spent']), 4)\n# print(bins)\ngroupNames = [\"low\", \"med\", \"high\"]\n\ndf['spentGroup'] = pd.cut(df['spent'], bins, labels = groupNames, include_lowest = True)\nprint(df)","d525ad81":"# 141. Simple result table with Pandas\n\nresults = pd.DataFrame(columns = ['Accuracy'])\n\nresults.loc['Random Classifier'] = 98.893\nresults.loc['KNN'] = 99.343\n\nresults","c64e30da":"# 142. isin with multiple conditions\n\ndf = pd.DataFrame([\n        ['LEhOc7XSE0','2020', '03', 'car'],\n        ['LEhOc7XSE0','2020', '03', 'truck'],\n        ['LEhOc7XSE0','2020', '03', 'bike'],\n        ['LEhOc7XSE0','2020', '03', 'insurance'],\n        ['LEhOc7XSE0','2020', '03', 'inspection'],\n        ['iXC5AfJMox','2020', '04', 'car'],\n        ['iXC5AfJMox','2020', '04', 'truck'],\n        ['iXC5AfJMox','2020', '04', 'inspection'],\n        ['XpLLAySojz','2020', '01', 'bike'],\n    ], columns=['order_id','year', 'month', 'item_type'])\nprint('Original:')\nprint(df)\n\ndf['bike_or_car'] = df['item_type'].isin({'bike', 'car'})\nprint('\\nAfter:')\nprint(df)\n\n# source: https:\/\/stackoverflow.com\/questions\/64248872\/python-pandas-count-columns-with-multiple-conditions-and-groupby","56b5bc9b":"# 143. String to Pandas with python engine and separator\n\nfrom io import StringIO\nimport pandas as pd\n\ndata = '''            student       science   maths  history\n0     David       90          100  89\n20    Kevin       98          97  90\n'''\ndf = pd.read_csv(StringIO(data), sep='\\s\\s+', engine='python')\n\nprint(df)\n\n# source: https:\/\/stackoverflow.com\/questions\/64268344\/pandas-consolidate-two-rows-in-one","503316ac":"# 144.\n\ndef get_unique_items(df):\n    \n    # how many cols are there\n    cols = df.columns\n    cols_count = len(df.columns)\n    # print(cols_count)\n\n    unique_max_count = 0\n    for _col in cols:\n#         print(_col)\n        current_col_unique_values = list(df[_col].unique())\n        list_len = len(current_col_unique_values) \n        \n        if(list_len > unique_max_count):\n            unique_max_count = list_len\n    \n    # list of each_cols and unique values\n    col_unique_values = {}\n    \n    for _col in cols:\n#         print(_col)\n        current_col_unique_values = list(df[_col].unique())\n        list_len = len(current_col_unique_values) \n        \n        fill_count = 0\n        if(list_len < unique_max_count):\n            fill_count = unique_max_count - list_len\n            \n            for _ in range(fill_count):\n                current_col_unique_values.append('-')\n        \n        col_unique_values[_col] = current_col_unique_values\n        \n    df_new = pd.DataFrame(col_unique_values)\n    \n    return df_new\n\nusers = pd.DataFrame({\n    \"name\": ['kevin', 'james', 'kumar', 'kevin', 'kevin', 'james'], \n    \"city\": ['Toronto', 'Montreal', 'Calgary', 'Montreal', 'Montreal', 'Ottawa'],\n    \"count\" : [7, 8, 9, 2, 7, 8] \n    \n}) \n\nunique_user_items = get_unique_items(users)\n\nunique_user_items","6fb36284":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"59\"><\/a>\n        <font><b>Task 59:<\/b><\/font>\n        <br><br>\n        Group by single column\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","e616ee4e":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"109\"><\/a>\n        <font><b>Task 109:<\/b><\/font>\n        <br><br>\n        Exclude specific matching\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","904ca69d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"33\"><\/a>\n        <font><b>Task 33:<\/b><\/font>\n        <br><br>\n        Last 4th to 1st\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","6abe38af":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"117\"><\/a>\n        <font><b>Task 117:<\/b><\/font>\n        <br><br>\n        Get a single value by iat\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","b7741e99":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"13\"><\/a>\n        <font><b>Task 13:<\/b><\/font>\n        <br><br>\n        First 4 rows and 2 columns of CSV\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","f76bb87b":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"75\"><\/a>\n        <font><b>Task 75:<\/b><\/font>\n        <br><br>\n        DataFrame.from_items\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","5b2c7da5":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"38\"><\/a>\n        <font><b>Task 38:<\/b><\/font>\n        <br><br>\n        Filter between 5 and 10 on col 1\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","1a81814f":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"2\"><\/a>\n        <font><b>Task 2:<\/b><\/font>\n        <br><br>\n        Create Numpy Array\n        <br>\n        Create three columns with Zero values\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","fa6f52a6":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"8\"><\/a>\n        <font><b>Task 8:<\/b><\/font>\n        <br><br>\n        Create Random integer between 0 to 100 with 10 itmes (2 rows, 5 columns)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","02f728a1":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"26\"><\/a>\n        <font><b>Task 26:<\/b><\/font>\n        <br><br>\n        Fill with average\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","f120f210":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"65\"><\/a>\n        <font><b>Task 65:<\/b><\/font>\n        <br><br>\n        argsort with stars        \n        <br>old stars (near by 50 age) argsort\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","0c746b53":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"130\"><\/a>\n        <font><b>Task 130:<\/b><\/font>\n        <br><br>\n        Clean URL in Pandas String (remove string after specific item)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","42b4f5b8":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"35\"><\/a>\n        <font><b>Task 35:<\/b><\/font>\n        <br><br>\n        Loc - iloc - ix - at - iat\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","4d653468":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"115\"><\/a>\n        <font><b>Task 115:<\/b><\/font>\n        <br><br>\n        Pandas and Numpy Repeat\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","3bfba174":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"100\"><\/a>\n        <font><b>Task 100:<\/b><\/font>\n        <br><br>\n        Drop duplicates\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","766567c3":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"131\"><\/a>\n        <font><b>Task 131:<\/b><\/font>\n        <br><br>\n        Find any matching value\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","0ae5510a":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"121\"><\/a>\n        <font><b>Task 121:<\/b><\/font>\n        <br><br>\n        Group by multiple columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","6d051e55":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"1\"><\/a>\n        <font><b>Task 1:<\/b><\/font>\n        <br><br>\n        Check Pandas Version\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","ebcf0a68":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"82\"><\/a>\n        <font><b>Task 82:<\/b><\/font>\n        <br><br>\n        Selecting multiple columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","75521201":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"34\"><\/a>\n        <font><b>Task 34:<\/b><\/font>\n        <br><br>\n        iloc position slice\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","1d7f27c5":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"29\"><\/a>\n        <font><b>Task 29:<\/b><\/font>\n        <br><br>\n        Fill with average\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","8a789e6b":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"23\"><\/a>\n        <font><b>Task 23:<\/b><\/font>\n        <br><br>\n        New columns as max of other columns\n        <br>float to int used\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","2015933e":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"55\"><\/a>\n        <font><b>Task 55:<\/b><\/font>\n        <br><br>\n        Row label selection\n        <br>Age is above 25 and movies above 25\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","17b27a83":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"48\"><\/a>\n        <font><b>Task 48:<\/b><\/font>\n        <br><br>\n        Get passed grades\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","fe98edbc":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"79\"><\/a>\n        <font><b>Task 79:<\/b><\/font>\n        <br><br>\n        Pandas rows to map\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","c1edadae":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"50\"><\/a>\n        <font><b>Task 50:<\/b><\/font>\n        <br><br>\n        Students passed in Language and Science\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","2a3f7a37":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"60\"><\/a>\n        <font><b>Task 60:<\/b><\/font>\n        <br><br>\n        Creating new Columns using Applymap\n        <br>Sides & applymap\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","a7832d3a":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"4\"><\/a>\n        <font><b>Task 4:<\/b><\/font>\n        <br><br>\n        Create Random integer between 2 to 10 with 4 items\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","c0a884bd":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"58\"><\/a>\n        <font><b>Task 58:<\/b><\/font>\n        <br><br>\n        Apply custom function\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","50304c72":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"15\"><\/a>\n        <font><b>Task 15:<\/b><\/font>\n        <br><br>\n        New columns as sum of all\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","05910b0c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"21\"><\/a>\n        <font><b>Task 21:<\/b><\/font>\n        <br><br>\n        Skip rows\n        <br>Note:\n        <br>df[[1]] doesn't work in Pandas updated version (need to double check)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","b6658546":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"119\"><\/a>\n        <font><b>Task 119:<\/b><\/font>\n        <br><br>\n        Add data one by one by using loc function\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","0ceb2705":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"111\"><\/a>\n        <font><b>Task 111:<\/b><\/font>\n        <br><br>\n        iterrows as tuples\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","211a0593":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"78\"><\/a>\n        <font><b>Task 78:<\/b><\/font>\n        <br><br>\n        XPandas rows to array \n\n        <br>Note: as_matrix is deprecatedYZ\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","50e180a4":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"108\"><\/a>\n        <font><b>Task 108:<\/b><\/font>\n        <br><br>\n        Finding specific items by using `isin` function\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","31ee6f93":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"118\"><\/a>\n        <font><b>Task 118:<\/b><\/font>\n        <br><br>\n        Get last n elements\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","0552fa68":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"91\"><\/a>\n        <font><b>Task 91:<\/b><\/font>\n        <br><br>\n        Sum of all nan rowwise\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","41b700db":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"107\"><\/a>\n        <font><b>Task 107:<\/b><\/font>\n        <br><br>\n        Match with isin function\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","5a21b2bc":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"97\"><\/a>\n        <font><b>Task 97:<\/b><\/font>\n        <br><br>\n        Get the the odd row\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","1d0a6809":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"41\"><\/a>\n        <font><b>Task 41:<\/b><\/font>\n        <br><br>\n        Custom method and xrnage on dataframe\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","a925caa3":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"54\"><\/a>\n        <font><b>Task 54:<\/b><\/font>\n        <br><br>\n        Stars with names\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","2bc2be3f":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"22\"><\/a>\n        <font><b>Task 22:<\/b><\/font>\n        <br><br>\n        String to Dataframe\n        <br>Note:\n        <br>df[[1]] doesn't work in Pandas updated version (need to double check)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","f51efa0f":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"99\"><\/a>\n        <font><b>Task 99:<\/b><\/font>\n        <br><br>\n        Odd rows and even columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","f41ba7c3":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"44\"><\/a>\n        <font><b>Task 44:<\/b><\/font>\n        <br><br>\n        Change multiple columns based on one column values\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","640d9258":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"93\"><\/a>\n        <font><b>Task 93:<\/b><\/font>\n        <br><br>\n        Change the order of columns\n\n        Note:\n            FutureWarning: '.reindex_axis' is deprecated and will be removed in a future version \n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","5f113600":"<font color=\"blue\" size=+1.5><b>Check out my other kernels<\/b><\/font>\n\n<table style=\"font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif;border-collapse: collapse;width: 100%;\">\t\n  <tr>\n    <th style=\"border: 1px solid #ddd;padding: 8px; padding-top: 12px;padding-bottom: 12px;text-align: left;background-color: #2987E7;color: white;\">Notebook<\/th>\n    <th style=\"border: 1px solid #ddd;padding: 8px; padding-top: 12px;padding-bottom: 12px;text-align: left;background-color: #2987E7;color: white;\">Tags<\/th>\n  <\/tr>\n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/reviews-with-nlp-wip\">Amazon Alexa Reviews with NLP<\/a> <\/td>\n    <td style=\"text-align: left\">NLP, Spacy<\/td>\n  <\/tr>\n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/sof-questions-eda-and-visual\">SOF Questions - EDA and Visual<\/a> <\/td>\n    <td style=\"text-align: left\">Data Visual, Plotly<\/td>\n  <\/tr>\n  <tr>\n    <td style=\"background-color: #f2f2f2;text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/netflix-visualization-plotly-plots-treemap\">Netflix - Visualization, Plotly, Plots, and Treemap<\/a> <\/td>\n    <td style=\"background-color: #f2f2f2;text-align: left\">Data Visual, Data Cleaning, Plotly<\/td>\n  <\/tr>\n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/prediction-with-various-algorithms\">Prediction with various Algorithms<\/a> <\/td>\n    <td style=\"text-align: left\">Random Forest, Logistic Regression<\/td>\n  <\/tr>\n  <tr>\n    <td style=\"background-color: #f2f2f2;text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/eda-and-visualization\">EDA and Visualization<\/a> <\/td>\n    <td style=\"background-color: #f2f2f2;text-align: left\">Data Cleaning, Data Visual<\/td>\n  <\/tr>\n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/job-analysis-eda-visual\">Job Analysis - EDA and Visual<\/a> <\/td>\n    <td style=\"text-align: left\">Data Visual, EDA, Plotly<\/td>\n  <\/tr>   \n  <tr>\n    <td style=\"background-color: #f2f2f2;text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/estonia-disaster-visualization\">Estonia Disaster - Visualization<\/a> <\/td>\n    <td style=\"background-color: #f2f2f2;text-align: left\">Data Visual, EDA, Data Cleaning<\/td>\n  <\/tr>\n    \n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/pandas-dundas-challenge-100\" >Pandas 100+ exercises collection<\/a><\/td>\n    <td style=\"text-align: left\">Pandas, Data Manipulation<\/td>\n  <\/tr>   \n  <tr>\n    <td style=\"background-color: #f2f2f2;text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/prediction-with-various-algorithms\">Credit Card Fraud - Prediction with various algorithms<\/a><\/td>\n    <td style=\"background-color: #f2f2f2;text-align: left\">Various ML Algorithms<\/td>\n  <\/tr>  \n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/linear-equations-real-time\">Linear Equations - Real Time<\/a> <\/td>\n    <td style=\"text-align: left\">Linear Equation<\/td>\n  <\/tr>  \n<\/table>\n\n","25a43897":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"81\"><\/a>\n        <font><b>Task 81:<\/b><\/font>\n        <br><br>\n        Drop duplicates\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","41240a8e":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"101\"><\/a>\n        <font><b>Task 101:<\/b><\/font>\n        <br><br>\n        Drop all duplicates\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","fa68df56":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"49\"><\/a>\n        <font><b>Task 49:<\/b><\/font>\n        <br><br>\n        Students passed in Language and Math\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","6f2cfb4e":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"85\"><\/a>\n        <font><b>Task 85:<\/b><\/font>\n        <br><br>\n        Iterating rows\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","4c08eae9":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"80\"><\/a>\n        <font><b>Task 80:<\/b><\/font>\n        <br><br>\n        Pandas rows to map\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","5aa31123":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"47\"><\/a>\n        <font><b>Task 47:<\/b><\/font>\n        <br><br>\n        Student Marks (Pass or Fail)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","3338ad73":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"7\"><\/a>\n        <font><b>Task 7:<\/b><\/font>\n        <br><br>\n        2D array with random between 0 and 5\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","c9c2c80e":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"84\"><\/a>\n        <font><b>Task 84:<\/b><\/font>\n        <br><br>\n        Row and Column Slicing\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","bc241acb":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"77\"><\/a>\n        <font><b>Task 77:<\/b><\/font>\n        <br><br>\n        Pandas rows to list\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","6474053a":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"126\"><\/a>\n        <font><b>Task 126:<\/b><\/font>\n        <br><br>\n        Date addition with time delta\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","ef42b9e8":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"61\"><\/a>\n        <font><b>Task 61:<\/b><\/font>\n        <br><br>\n        Replacing some values with mean of the rest of a group\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","f918af2b":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"105\"><\/a>\n        <font><b>Task 105:<\/b><\/font>\n        <br><br>\n        Column reset Nan\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","b9285fb1":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"122\"><\/a>\n        <font><b>Task 122:<\/b><\/font>\n        <br><br>\n        Compare two dataframes\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","2de53ebc":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"94\"><\/a>\n        <font><b>Task 94:<\/b><\/font>\n        <br><br>\n        Drop multiple rows\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","2a135f43":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"9\"><\/a>\n        <font><b>Task 9:<\/b><\/font>\n        <br><br>\n        3 rows, 2 columns in pandas\n        <br>\n        1st column = random between 10 to 20\n        <br>\n        2nd column = random between 80 and 90\n        <br>\n        3rd column = random between 40 and 50 \n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","d1f4e901":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"37\"><\/a>\n        <font><b>Task 37:<\/b><\/font>\n        <br><br>\n        Filter with the value comparison\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","63c215e1":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"120\"><\/a>\n        <font><b>Task 120:<\/b><\/font>\n        <br><br>\n        Convert country in Dataframe\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","8b37fe93":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"62\"><\/a>\n        <font><b>Task 62:<\/b><\/font>\n        <br><br>\n        Students passed in Language or Science (any one subject)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","089a6442":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"98\"><\/a>\n        <font><b>Task 98:<\/b><\/font>\n        <br><br>\n        Get the even columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","a3147da2":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"66\"><\/a>\n        <font><b>Task 66:<\/b><\/font>\n        <br><br>\n        Argsort with actors\n\n        <br>young stars (near by 17)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","010d8321":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"20\"><\/a>\n        <font><b>Task 20:<\/b><\/font>\n        <br><br>\n        Select Column by Index\n        <br>\n        <br>Note:\n        <br>df[[1]] doesn't work in Pandas updated version (need to double check)\n        <br>\n        New columns as sum of all\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","986c281c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"124\"><\/a>\n        <font><b>Task 124:<\/b><\/font>\n        <br><br>\n        Get dates and delta days in Dataframe\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","0079252c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"90\"><\/a>\n        <font><b>Task 90:<\/b><\/font>\n        <br><br>\n        Sum of all nan\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","0579ef91":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"95\"><\/a>\n        <font><b>Task 95:<\/b><\/font>\n        <br><br>\n        Drop multiple rows by row name\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","253b111b":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"116\"><\/a>\n        <font><b>Task 116:<\/b><\/font>\n        <br><br>\n        read_sql in Pandas\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","c8b07de3":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"10\"><\/a>\n        <font><b>Task 10:<\/b><\/font>\n        <br><br>\n        Fill Random Science and Math Marks\n        <br><br>\n        (has some bugs in it)\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>\n","46bc1cb4":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"24\"><\/a>\n        <font><b>Task 24:<\/b><\/font>\n        <br><br>\n        New columns as max of other columns\n<br>float to int used\n<br>Math is considered more, so double the marks for maths\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","5a740776":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"72\"><\/a>\n        <font><b>Task 72:<\/b><\/font>\n        <br><br>\n        Drop multiple columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","44af10b4":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"128\"><\/a>\n        <font><b>Task 128:<\/b><\/font>\n        <br><br>\n        Append series to existing Dataframe\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","e6a3528e":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"43\"><\/a>\n        <font><b>Task 43:<\/b><\/font>\n        <br><br>\n        Change columns based on other columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","53a224f5":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"88\"><\/a>\n        <font><b>Task 88:<\/b><\/font>\n        <br><br>\n        List of Dictionary to Dataframe\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","c0c4d515":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"14\"><\/a>\n        <font><b>Task 14:<\/b><\/font>\n        <br><br>\n        Show even rows and first three columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","e83777a1":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"39\"><\/a>\n        <font><b>Task 39:<\/b><\/font>\n        <br><br>\n        Filter between 15 to 20\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","da44954d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"96\"><\/a>\n        <font><b>Task :<\/b><\/font>\n        <br><br>\n        Get group\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","79378692":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"51\"><\/a>\n        <font><b>Task 51:<\/b><\/font>\n        <br><br>\n        Loc with Label oriented slicing\n<br>possible error:\n<br>pandas.errors.UnsortedIndexError\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","c99c5679":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"19\"><\/a>\n        <font><b>Task 19:<\/b><\/font>\n        <br><br>\n        Skip multiple rows\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","8e0050d4":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"57\"><\/a>\n        <font><b>Task 57:<\/b><\/font>\n        <br><br>\n        inverse opeartor\n         <br>!( above one.45 and below two.50 )\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","dc9cf5a7":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"113\"><\/a>\n        <font><b>Task 113:<\/b><\/font>\n        <br><br>\n        Simple Dataframe with NaN\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","a248dd12":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"\"><\/a>\n        <font><b>Task 63:<\/b><\/font>\n        <br><br>\n        possible errors:\n        <br>TypeError: 'Series' objects are mutable, thus they cannot be hashed\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","68ff3e6d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"127\"><\/a>\n        <font><b>Task 127:<\/b><\/font>\n        <br><br>\n        Converting Pandas innner list to numpy array without the word `list`\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","eaf88f0a":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"67\"><\/a>\n        <font><b>Task 67:<\/b><\/font>\n        <br><br>\n        Binary operators\n\n        <br>Stars with\n\n        <br>younger than 19 - very young\n\n        <br>more movies acted**\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","5ae1665f":"To do:\n\n* Clean up some buggy exercises\n* Remove duplicate exercises\n* Add more documentation","4a82624b":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"32\"><\/a>\n        <font><b>Task 32:<\/b><\/font>\n        <br><br>\n        Get 3 and 4th row\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","b5cf3e00":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"83\"><\/a>\n        <font><b>Task 83:<\/b><\/font>\n        <br><br>\n        Selecting multiple columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","8ddd373a":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"11\"><\/a>\n        <font><b>Task 11:<\/b><\/font>\n        <br><br>\n        CSV to DatRaframe (from_csv)\n        <br>\n        Note: from_csv is Deprecated since version 0.21.0: Use pandas.read_csv() instead.\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","da376d1d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"86\"><\/a>\n        <font><b>Task 86:<\/b><\/font>\n        <br><br>\n        Iterating tuples\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","ce273a3d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"36\"><\/a>\n        <font><b>Task 36:<\/b><\/font>\n        <br><br>\n        Random data\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","bc89f4eb":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"28\"><\/a>\n        <font><b>Task 28:<\/b><\/font>\n        <br><br>\n        Unicode issue and fix\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","8551eb18":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"69\"><\/a>\n        <font><b>Task 69:<\/b><\/font>\n        <br><br>\n        Rename columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","f58730b8":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"30\"><\/a>\n        <font><b>Task 30:<\/b><\/font>\n        <br><br>\n        Last 4 rows\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","4884e569":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"5\"><\/a>\n        <font><b>Task 5:<\/b><\/font>\n        <br><br>\n        Create Random integer between 0 to 100 \n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>\n","3e96cd8c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"64\"><\/a>\n        <font><b>Task 64:<\/b><\/font>\n        <br><br>\n        argsort\n        <br>Select rows with data closest to certain value using argsort\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","dfc9f2ec":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"27\"><\/a>\n        <font><b>Task 27:<\/b><\/font>\n        <br><br>\n        New columns as sum of all\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","64806404":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"53\"><\/a>\n        <font><b>Task 53:<\/b><\/font>\n        <br><br>\n        Label between numbers\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","666eb310":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"71\"><\/a>\n        <font><b>Task 71:<\/b><\/font>\n        <br><br>\n        Drop a column\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","47a1745e":"**Final Notes:**\n\nI am adding things still. You can come back and check for more information.\n\nAlso, if you **like my notebook**, <font style=\"color:blue;size:14px;\">please upvote it<\/font> as it will motivate me to come up with better approach in the upcoming notebooks.","96c56e79":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"73\"><\/a>\n        <font><b>Task 73:<\/b><\/font>\n        <br><br>\n        Drop first and last column\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","fa1659b2":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"125\"><\/a>\n        <font><b>Task 125:<\/b><\/font>\n        <br><br>\n        Get dates and delta days in Dataframe\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","4988f123":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"106\"><\/a>\n        <font><b>Task 106:<\/b><\/font>\n        <br><br>\n        Change columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","78dccd21":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"70\"><\/a>\n        <font><b>Task 70:<\/b><\/font>\n        <br><br>\n        Add a new column\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","a45d698a":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"102\"><\/a>\n        <font><b>Task 103:<\/b><\/font>\n        <br><br>\n        Missing Data:\n        Make A'th 3rd coulmn Nan\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","18d86944":"### Extras","4906e053":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"129\"><\/a>\n        <font><b>Task 129:<\/b><\/font>\n        <br><br>\n        Cumulative sum with group by with multiple values\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","b234b844":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"68\"><\/a>\n        <font><b>Task 68:<\/b><\/font>\n        <br><br>\n        Young, Higher Salary, and Higher Position\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","0972626f":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"6\"><\/a>\n        <font><b>Task 6:<\/b><\/font>\n        <br><br>\n        Create Random integer between 2 to 10 with 4 columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","57e3275c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"40\"><\/a>\n        <font><b>Task 40:<\/b><\/font>\n        <br><br>\n        15 to 33\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","097988a5":"\n<a id=\"top\"><\/a>\n\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n\n<font color=\"teal\" size=+1><b>Content List<\/b><\/font>\n    \n* [1. Check Pandas Version](#1)\n* [2. Create Numpy Array: Create three columns with Zero values](#2)\n* [3. iLoc in Pandas : Print first five rows](#3)\n* [4. Create Random integer between 2 to 10 with 4 items](#4)\n* [5. Create Random integer between 0 to 100](#5)\n* [6. Create Random integer between 2 to 10 with 4 columns](#6)\n* [7. 2D array with random between 0 and 5](#7)\n* [8. Create Random integer between 0 to 100 with 10 itmes (2 rows, 5 columns)](#8)\n* [9. 3 rows, 2 columns in pandas](#9)\n* [10. Fill Random Science and Math Marks](#10)\n* [11. CSV to DatRaframe (from_csv)](#11)\n* [12. CSV to Dataframe (from_csv)](#12)\n* [13. First 4 rows and 2 columns of CSV](#13)\n* [14. Show even rows and first three columns](#14)\n* [15. New columns as sum of all](#15)\n* [16. Delete Rows of one column where the value is less than 50](#16)\n* [17. Delete with Query](#17)\n* [18. Skip single row](#18)\n* [19. Skip multiple rows](#19)\n* [20. Select Column by Index](#20)\n* [21. Skip rows](#21)\n* [22. String to Dataframe](#22)\n* [23. New columns as max of other columns](#23)\n* [24. New columns as max of other columns](#24)\n* [25. New columns as max of other columns](#25)\n* [26. Fill with average](#26)\n* [27. New columns as sum of all](#27)\n* [28. Unicode issue and fix](#28)\n* [29. Fill with average](#29)\n* [30. Last 4 rows](#30)\n* [31. Expanding Apply](#31)\n* [32. Get 3 and 4th row](#32)\n* [33. Last 4th to 1st](#33)\n* [34. iloc position slice](#34)\n* [35. Loc - iloc - ix - at - iat](#35)\n* [36. Random data](#36)\n* [37. Filter with the value comparison](#37)\n* [38. Filter between 5 and 10 on col 1](#38)\n* [39. Filter between 15 to 20](#39)\n* [40. Filter between 15 to 33](#40)\n* [41. Custom method and xrnage on dataframe](#41)\n* [42. Set index with date column](#42)\n* [43. Change columns based on other columns](#43)\n* [44. Change multiple columns based on one column values](#44)\n* [45. Pandas Mask](#45)\n* [46. Check high or low comparing the column against 5](#46)\n* [47. Student Marks (Pass or Fail)](#47)\n* [48. Get passed grades](#48)\n* [49. Students passed in Language and Math](#49)\n* [50. Students passed in Language and Science](#50)\n* [51. Loc with Label oriented slicing](#51)\n* [52. iloc with positional slicing](#52)\n* [53. Label between numbers](#53)\n* [54. Stars with names](#54)\n* [55. Row label selection Age is above 25 and movies above 25](#55)\n* [56. Stars in in certain ages](#56)\n* [57. Inverse opeartor !( above one.45 and below two.50 )](#57)\n* [58. Apply custom function](#58)\n* [59. Group by single column](#59)\n* [60. Creating new Columns using Applymap Sides & applymap](#60)\n* [61. Replacing some values with mean of the rest of a group](#61)\n* [62. Students passed in Language or Science (any one subject)](#62)\n* [63. possible errors: TypeError: 'Series' objects are mutable, thus they cannot be hashed](#63)\n* [64. argsort Select rows with data closest to certain value using argsort](#64)\n* [65. argsort with stars](#65)\n* [66. Argsort with actors - young stars (near by 17)](#66)\n* [67. Binary operators - Stars with - younger than 19 - very young](#67)\n* [68. Young, Higher Salary, and Higher Position](#68)\n* [69. Rename columns](#69)\n* [70. Add a new column](#70)\n* [71. Drop a column](#71)\n* [72. Drop multiple columns](#72)\n* [73. Drop first and last column](#73)\n* [74. Delete by pop function](#74)\n* [75. DataFrame.from_items](#75)\n* [76. Pandas to list](#76)\n* [77. Pandas rows to list](#77)\n* [78. Pandas rows to array](#78)\n* [79. Pandas rows to map](#79)\n* [80. Pandas rows to map](#80)\n* [81. Drop duplicates](#81)\n* [82. Selecting multiple columns](#82)\n* [83. Selecting multiple columns](#83)\n* [84. Row and Column Slicing](#84)\n* [85. Iterating rows](#85)\n* [86. Iterating tuples](#86)\n* [87. Iterating rows and columns](#87)\n* [88. List of Dictionary to Dataframe](#88)\n* [89. Is Null](#89)\n* [90. Sum of all nan](#90)\n* [91. Sum of all nan rowwise](#91)\n* [92. Sum of all nan as list](#92)\n* [93. Change the order of columns](#93)\n* [94. Drop multiple rows](#94)\n* [95. Drop multiple rows by row name](#95)\n* [96. Get group](#96)\n* [97. Get the the odd row](#97)\n* [98. Get the even columns](#98)\n* [99. Odd rows and even columns](#99)\n* [100. Drop duplicates](#100)\n* [101. Drop all duplicates](#101)\n* [102. Basic group by](#102)\n* [103. Missing Data: Make A'th 3rd coulmn Nan](#103)\n* [104. Reindex](#104)   \n* [105. Column reset Nan](#105)  \n* [105. XY](#105)  \n* [106. XY](#106)  \n* [107. Match with isin function](#107)  \n* [108. Finding specific items by using `isin` function](#108)  \n* [109. Exclude specific matching](#109)  \n* [110. Apply a custom function on multiple columns](#110)  \n* [111. iterrows as tuples](#111)  \n* [112. Dataframe with NaN](#112)  \n* [113. Simple Dataframe with NaN](#113)  \n* [114. Pandas and Date with Range](#114)  \n* [115. Pandas and Numpy Repeat](#115)  \n* [116. read_sql in Pandas](#116)  \n* [117. Get a single value by iat](#117)  \n* [118. Get last n elements](#118)  \n* [119. Add data one by one by using loc function](#119)  \n* [120. Convert country in Dataframe](#120)  \n* [121. Group by multiple columns](#121)  \n* [122. Compare two dataframes](#122)  \n* [123. Difference between datetime by only seconds or dates](#123)  \n* [124. Get dates and delta days in Dataframe](#124)  \n* [125. Get dates and delta days in Dataframe](#125)  \n* [126. Date addition with time delta](#126)  \n* [127. Converting Pandas innner list to numpy array without the word `list`](#127)  \n* [128. Append series to existing Dataframe](#128)  \n* [129. Cumulative sum with group by with multiple values](#129)  \n* [130. Clean URL in Pandas String (remove string after specific item)](#130)  \n* [131. Find any matching value](#131)      ","1cacd9dc":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"17\"><\/a>\n        <font><b>Task 17:<\/b><\/font>\n        <br><br>\n        Delete with Query\n        <br>Note: Query doesn't work if your column has space in it\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","a1756adf":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"114\"><\/a>\n        <font><b>Task 114:<\/b><\/font>\n        <br><br>\n        Pandas and Date with Range\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","d34db905":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"46\"><\/a>\n        <font><b>Task 46:<\/b><\/font>\n        <br><br>\n        Check high or low comparing the column against 5\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","8b2ad73d":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"3\"><\/a>\n        <font><b>Task 3:<\/b><\/font>\n        <br><br>\n        iLoc in Pandas\n        <br>\n        Print first five rows\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","ca089b87":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"42\"><\/a>\n        <font><b>Task 42:<\/b><\/font>\n        <br><br>\n        Set index with date column\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","e8efa03c":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"102\"><\/a>\n        <font><b>Task 102:<\/b><\/font>\n        <br><br>\n        Basic group by\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","26767659":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"76\"><\/a>\n        <font><b>Task 76:<\/b><\/font>\n        <br><br>\n        Pandas to list\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","79359919":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"16\"><\/a>\n        <font><b>Task 16:<\/b><\/font>\n        <br><br>\n        Delete Rows of one column where the value is less than 50\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","d196623f":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"104\"><\/a>\n        <font><b>Task 104:<\/b><\/font>\n        <br><br>\n        reindex\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","3b987071":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"25\"><\/a>\n        <font><b>Task 25:<\/b><\/font>\n        <br><br>\n        New columns as max of other columns\n<br>35 marks considered as pass \n<br>If the student fails in math, consider fail\n<br>If the student passes in language and science, consider as pass\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","b0b5316e":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"52\"><\/a>\n        <font><b>Task 52:<\/b><\/font>\n        <br><br>\n        iloc with positional slicing\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","e69e02c9":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"12\"><\/a>\n        <font><b>Task 12:<\/b><\/font>\n        <br><br>\n        CSV to Dataframe (from_csv\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","f3570fa1":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"31\"><\/a>\n        <font><b>Task 31:<\/b><\/font>\n        <br><br>\n        Expanding Apply\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","6846fc00":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"110\"><\/a>\n        <font><b>Task 110:<\/b><\/font>\n        <br><br>\n        Apply a custom function on multiple columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","a7e2dfc9":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"123\"><\/a>\n        <font><b>Task 123:<\/b><\/font>\n        <br><br>\n        Difference between datetime by only seconds or dates\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","dc691a6f":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"92\"><\/a>\n        <font><b>Task 92:<\/b><\/font>\n        <br><br>\n        Sum of all nan as list\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","3eaacc85":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"18\"><\/a>\n        <font><b>Task 18:<\/b><\/font>\n        <br><br>\n        Skip single row\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","10dab8ef":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"74\"><\/a>\n        <font><b>Task 74:<\/b><\/font>\n        <br><br>\n        Delete by pop function\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","4cba98e6":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"112\"><\/a>\n        <font><b>Task 112:<\/b><\/font>\n        <br><br>\n        Dataframe with NaN\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","f66a8453":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"87\"><\/a>\n        <font><b>Task 87:<\/b><\/font>\n        <br><br>\n        Iterating rows and columns\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","0d7d6b52":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"56\"><\/a>\n        <font><b>Task 56:<\/b><\/font>\n        <br><br>\n        Stars in in certain ages\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> ","6bc19c47":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"45\"><\/a>\n        <font><b>Task 45:<\/b><\/font>\n        <br><br>\n        Pandas Mask\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div>","f97d7bef":"<div style=\"\">\n    <div style=\"float: left; width: 80%;\">\n        <a id=\"89\"><\/a>\n        <font><b>Task 89:<\/b><\/font>\n        <br><br>\n        NaN values\n    <\/div>\n    <div style=\"float: right;\">\n        <a href=\"#top\" class=\"btn btn-primary btn-sm\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Top\">Go to Top<\/a>\n    <\/div>\n    <br style=\"clear: left;\" \/>\n<\/div> "}}