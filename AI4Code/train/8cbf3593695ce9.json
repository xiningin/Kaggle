{"cell_type":{"5d4e6540":"code","796badc4":"code","04224167":"code","769ee712":"code","1c56098e":"code","32e8a7fe":"code","06f4f024":"code","1973bcb0":"code","6d86a1df":"code","7d6a297a":"code","964dda8c":"code","6a662aa0":"code","75abc5e3":"code","c819dea7":"code","d1d269d6":"code","86d0a059":"code","b2f83d5f":"code","f2996fbe":"code","80efcb1e":"code","925a72ab":"code","83f55b7b":"code","ef84c636":"code","b295c83b":"code","d5dfbc0d":"code","1375466e":"code","998d7635":"code","dd8c1439":"code","1c49a81c":"code","ec40bf43":"code","ebcca980":"code","b52e57f8":"code","ee56fc00":"code","d3f9e282":"code","9c19e368":"code","ed6e6322":"code","494daf2e":"code","a5369130":"code","e3ab090c":"code","add8d367":"code","0dcab92f":"code","cda91ff1":"code","59a55973":"code","f27821c9":"code","5c7b3503":"markdown","eae4fb09":"markdown","682205f1":"markdown"},"source":{"5d4e6540":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom subprocess import check_output\nprint(check_output([\"ls\",\"..\/input\"]).decode(\"utf8\"))\n\n#import os\n#print(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","796badc4":"#read data\ndata = pd.read_csv(\"..\/input\/data.csv\")","04224167":"data.head()","769ee712":"#data.Positioning.value_counts()","1c56098e":"data.info()","32e8a7fe":"# Create new dataframe for player overall\nplayer_overall = pd.DataFrame({\"Player_Name\":data.Name,\"Player_Overall\":data.Overall})\nnew_index = (player_overall['Player_Overall'].sort_values(ascending=False)).index.values\nplayer_overall=player_overall.reindex(new_index)\nplayer_overall=player_overall.head(50)\n\n# visualisation data\nplt.figure(figsize=(15,10))\nsns.barplot(x = player_overall['Player_Name'],y = player_overall['Player_Overall'])\nplt.xticks(rotation = 75)\nplt.xlabel(\"Player_Name\")\nplt.ylabel(\"Player_Overall\")\nplt.show()","06f4f024":"\n#data.head()","1973bcb0":"#data.Nationality.value_counts()","6d86a1df":"# Player Overalls by Country\ncountry_list = list(data.Nationality.unique())\ncountry_overall = []\ncountry_list10 = []\n\n# setting and sorting dataframe overall by countries\nfor i in country_list:\n    x = data[data[\"Nationality\"]==i]\n    overall_rate = sum(x.Overall)\/len(x)\n    country_overall.append(overall_rate)\n    country_list10.append(len(x))\ndata_country = pd.DataFrame({\"country_list\":country_list,\"country_overall\":country_overall})\ndata_country1 = pd.DataFrame({\"country_list\":country_list,\"country_overall\":country_overall,\"country_count\":country_list10})\ndata_country1 = data_country1[data_country1.country_count>20]\nnew_index = (data_country1[\"country_overall\"].sort_values(ascending=False)).index.values\ndata_country1=data_country1.reindex(new_index)\ndata_country1 = data_country1.head(40)\n#data_country1 = data_country.head(int(len(data_country)\/4))\n\n# visualisation\nplt.figure(figsize=(15,10))\nsns.barplot(x = \"country_list\",y = \"country_overall\",data=data_country1)\nplt.xticks(rotation=75)\nplt.xlabel(\"country_list\")\nplt.ylabel(\"country_overall\")\nplt.title(\"30 countries with the hig\")","7d6a297a":"data_country1.head(10)","964dda8c":"#40 countries with the highest number of players\ncountry_count = Counter(data.Nationality)\nmost_common_countries = country_count.most_common(40)\nx,y = zip(*most_common_countries)\nx,y = list(x),list(y)\n\n#visualisation\n\nplt.figure(figsize=(15,10))\nsns.barplot(x = x,y = y,palette=sns.cubehelix_palette(len(x)))\nplt.xticks(rotation=80)\nplt.xlabel(\"Countries\")\nplt.ylabel(\"Player counts\")\nplt.title(\"Most Commont 40 Countries in FIFA19\")","6a662aa0":"# list_clubs_40 = ['FC Barcelona',\n#  'Real Madrid',\n#  'Juventus',\n#  'Paris Saint-Germain',\n#  'Manchester City',\n#  'FC Bayern M\u00fcnchen',\n#  'Manchester United',\n#  'Liverpool',\n#  'Napoli',\n#  'Arsenal',\n#  'Milan',\n#  'Inter',\n#  'Chelsea',\n#  'Atl\u00e9tico Madrid',\n#  'Tottenham Hotspur',\n#  'Roma',\n#  'Borussia Dortmund',\n#  'FC Porto',\n#  'AS Monaco',\n#  'Ajax',\n#  'PSV',\n#  'VfL Wolfsburg',\n#  'Shakhtar Donetsk',\n#  'Leicester City',\n#  'RB Leipzig',\n#  'OGC Nice',\n#  'Toronto FC',\n#  'Galatasaray SK',\n#  'Fenerbah\u00e7e SK',\n#  'Be\u015fikta\u015f JK',\n#  'Real Betis',\n#  'Olympique de Marseille',\n#  'RC Celta',\n#  'Shakhtar Donetsk',\n#  'Lokomotiv Moscow',\n#  'LA Galaxy',\n#  'New York City FC',\n#  'Atlanta United',\n#  'Guangzhou Evergrande Taobao FC',\n#  'Shanghai SIPG FC']","75abc5e3":"list_clubs_33 = ['FC Barcelona',\n 'Real Madrid',\n 'Juventus',\n 'Paris Saint-Germain',\n 'Manchester City',\n 'FC Bayern M\u00fcnchen',\n 'Manchester United',\n 'Liverpool',\n 'Napoli',\n 'Arsenal',\n 'Milan',\n 'Inter',\n 'Chelsea',\n 'Atl\u00e9tico Madrid',\n 'Tottenham Hotspur',\n 'Roma',\n 'Borussia Dortmund',\n 'FC Porto',\n 'AS Monaco',\n 'Ajax',\n 'PSV',\n 'VfL Wolfsburg',\n 'Shakhtar Donetsk',\n 'Leicester City',\n 'RB Leipzig',\n 'OGC Nice',\n 'Galatasaray SK',\n 'Fenerbah\u00e7e SK',\n 'Be\u015fikta\u015f JK',\n 'Real Betis',\n 'Olympique de Marseille',\n 'RC Celta']","c819dea7":"# Overalls according to club\nclub_overall = []\n\nfor i in list_clubs_33:\n    x = data[data.Club==i]\n    club_overall.append(sum(x.Overall)\/len(x))\n\n# Sorting\nsorted_club_overall = pd.DataFrame({\"Clubs\":list_clubs_33,\"Club_overall\":club_overall})\nnew_index = (sorted_club_overall[\"Club_overall\"].sort_values(ascending=False)).index.values\nsorted_club_overall = sorted_club_overall.reindex(new_index)\n\n#Visualization\nplt.figure(figsize=(20,10))\nsns.barplot(x = sorted_club_overall[\"Clubs\"],y = sorted_club_overall[\"Club_overall\"])\nplt.xticks(rotation=80)\nplt.xlabel(\"Clubs\")\nplt.ylabel(\"Average Overalls\")\nplt.title(\"Percentage of 33 Clubs' Overall of Players\")","d1d269d6":"# Ages according to club\nclub_age = []\n\nfor i in list_clubs_33:\n    x = data[data.Club==i]\n    club_age.append(sum(x.Age)\/len(x))\n\n# Sorting\nsorted_club_age = pd.DataFrame({\"Clubs\":list_clubs_33,\"Ages\":club_age})\nnew_index = (sorted_club_age[\"Ages\"].sort_values(ascending=True)).index.values\nsorted_club_age = sorted_club_age.reindex(new_index)\n\n#Visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x = sorted_club_age[\"Clubs\"],y = sorted_club_age[\"Ages\"])\nplt.xticks(rotation=80)\nplt.xlabel(\"Clubs\")\nplt.ylabel(\"Average Overalls\")\nplt.title(\"Percentage of 33 Clubs' Ages of Players\")","86d0a059":"#Close warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# 40 Clubs according to body types\ndata_body = data[[\"Club\",\"Nationality\",\"Body Type\"]]\ndata_body[\"Body Type\"].replace([\"PLAYER_BODY_TYPE_25\"],\"Normal\",inplace=True)\ndata_body[\"Body Type\"].replace([\"Shaqiri\"],\"Stocky\",inplace=True)\ndata_body[\"Body Type\"].replace([\"Courtois\"],\"Normal\",inplace=True)\ndata_body[\"Body Type\"].replace([\"Messi\"],\"Normal\",inplace=True)\ndata_body[\"Body Type\"].replace([\"Neymar\"],\"Normal\",inplace=True)\ndata_body[\"Body Type\"].replace([\"C. Ronaldo\"],\"Normal\",inplace=True)\ndata_body[\"Body Type\"].replace([\"Akinfenwa\"],\"Stocky\",inplace=True)\n\n# Adding three columns according to body types\n\ndata_body[\"Normal_body\"] = [1 if i == \"Normal\" else 0 for i in data[\"Body Type\"]]\ndata_body[\"Lean_body\"] = [1 if i == \"Lean\" else 0 for i in data[\"Body Type\"]]\ndata_body[\"Stocky_body\"] = [1 if i == \"Stocky\" else 0 for i in data[\"Body Type\"]]\n\n# Added three lists for each of body types\n\nNormal_body = []\nLean_body = []\nStocky_body = []\n\nfor i in list_clubs_33:\n    x = data_body[data_body.Club==i]\n    Normal_body.append(sum(x.Normal_body)\/len(x))\n    Lean_body.append(sum(x.Lean_body)\/len(x))\n    Stocky_body.append(sum(x.Stocky_body)\/len(x))\n\n# Visualization\n\nf,ax=plt.subplots(figsize = (9,12))\nsns.barplot(x = Normal_body,y = list_clubs_33,color=\"red\",alpha = 0.6,label = \"Normal_Body\")\nsns.barplot(x = Lean_body,y = list_clubs_33,color=\"blue\", alpha = 0.5,label = \"Lean_Body\")\nsns.barplot(x = Stocky_body,y = list_clubs_33,color=\"cyan\",alpha = 0.6,label = \"Stock_Body\")\n\nax.legend(loc = \"upper right\",frameon = True)\nax.set(xlabel=\"Percentage of Body Types\",ylabel=\"Clubs\",title = \"Percentage of Clubs' Players of Body Type\")\nplt.show()","b2f83d5f":"#sorted_club_age.head()\n","f2996fbe":"#sorted_club_overall.head()","80efcb1e":"# Club Overall vs Club Age of each club\nsorted_club_age[\"Ages\"] = sorted_club_age[\"Ages\"]\/max(sorted_club_age[\"Ages\"])\nsorted_club_overall[\"Club_overall\"] = sorted_club_overall[\"Club_overall\"]\/max(sorted_club_overall[\"Club_overall\"])\ndata = pd.concat([sorted_club_age,sorted_club_overall[\"Club_overall\"]],axis = 1)\ndata.sort_values(\"Club_overall\",inplace=False)\n\n#visualization\nplt.subplots(figsize =(20,10))\nsns.pointplot(x = \"Clubs\",y = \"Ages\",data=data,color=\"red\",alpha=0.5)\nsns.pointplot(x = \"Clubs\",y = \"Club_overall\",data=data,color=\"lime\",alpha = 0.8)\nplt.xticks(rotation=90)\nplt.text(20,0.99,'Club Ages',color='red',fontsize = 25,style = 'italic')\nplt.text(20,0.96,'Club Overalls',color='lime',fontsize = 25,style = 'italic')\nplt.xlabel('Clubs',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('Club Ages vs Club Overalls',fontsize = 20,color='blue')\nplt.grid()","925a72ab":"# joint kernel density\ng = sns.jointplot(data.Club_overall,data.Ages,kind=\"kde\",size=7)\nplt.savefig(\"graph.png\")\nplt.show()","83f55b7b":"# you can change parameters of joint plot\ng = sns.jointplot(\"Club_overall\",\"Ages\",data=data,size=5,ratio=3,color=\"red\")","ef84c636":"data_new = pd.read_csv(\"..\/input\/data.csv\")","b295c83b":"data_new.head()","d5dfbc0d":"data_new['Preferred Foot'].value_counts()","1375466e":"#Players according to Preferred Foot\nlabels = data_new['Preferred Foot'].value_counts().index\ncolors = [\"red\",\"green\"]\nexplode=[0,0]\nsizes = data_new['Preferred Foot'].value_counts().values\n# visualisation\nplt.figure(figsize=(6,6))\nplt.pie(sizes,explode=explode,labels=labels,colors=colors,autopct=\"%1.1f%%\")\nplt.title(\"Players Accroding to Foots\",color = \"blue\",fontsize=15)","998d7635":"data_new['Body Type'].value_counts()","dd8c1439":"#Players according to International Reputation\ndata_new[\"Body Type\"].replace([\"PLAYER_BODY_TYPE_25\"],\"Normal\",inplace=True)\ndata_new[\"Body Type\"].replace([\"Shaqiri\"],\"Stocky\",inplace=True)\ndata_new[\"Body Type\"].replace([\"Courtois\"],\"Normal\",inplace=True)\ndata_new[\"Body Type\"].replace([\"Messi\"],\"Normal\",inplace=True)\ndata_new[\"Body Type\"].replace([\"Neymar\"],\"Normal\",inplace=True)\ndata_new[\"Body Type\"].replace([\"C. Ronaldo\"],\"Normal\",inplace=True)\ndata_new[\"Body Type\"].replace([\"Akinfenwa\"],\"Stocky\",inplace=True)\n\nlabels = data_new['Body Type'].value_counts().index\nexplode = [0,0,0]\nsizes = data_new['Body Type'].value_counts().values\ncolors = [\"red\",\"green\",\"blue\"]\n# visalization\nplt.figure(figsize=(7,7))\nplt.pie(sizes,labels=labels,colors=colors,explode=explode,autopct=\"%1.1f%%\")\nplt.title(\"Players According to Body Type\",color = \"blue\",fontsize=15)","1c49a81c":"data.head()","ec40bf43":"# Show the results of a linear regression within each dataset\nsns.lmplot(\"Club_overall\",\"Ages\",data=data)\nplt.show","ebcca980":"# cubehelix plot\nsns.kdeplot(data.Club_overall,data.Ages,shade=True,cut = 3)\nplt.show()","b52e57f8":"# Use cubehelix to get a custom sequential palette\npal = sns.cubehelix_palette(2, rot=-.5,dark=.4)\nsns.violinplot(data=data,palette=pal,inner=\"points\")\nplt.show()","ee56fc00":"data.corr()","d3f9e282":"f,ax = plt.subplots(figsize = (5,5))\nsns.heatmap(data.corr(),annot=True,linewidths=0.5,linecolor=\"red\",fmt = '.2f',ax = ax)\nplt.show()","9c19e368":"data_new.head()","ed6e6322":"data_new[\"Body Type\"].value_counts()","494daf2e":"# Plot the orbital period with horizontal boxe\nplt.figure(figsize=(12,6))\nsns.boxplot(x = \"Preferred Foot\",y = \"Overall\",hue='Body Type',data=data_new,palette=\"PRGn\")\nplt.show()","a5369130":"# swarm plot\nsns.swarmplot(x = \"Preferred Foot\",y = \"Overall\",hue=\"Body Type\",data=data_new)\nplt.show()","e3ab090c":"data.head()","add8d367":"# Pair plot\nsns.pairplot(data)\nplt.show()","0dcab92f":"# Foot properties\n#data_new.Position.value_counts()\nplt.figure(figsize=(10,6))\nsns.countplot(data_new.Position,order=data_new.Position.value_counts().index)\n#sns.countplot(data_new['Preferred Foot'])\nplt.xticks(rotation=90)\nplt.title(\"Position\",color=\"blue\",fontsize=15)","cda91ff1":"data_new.head()","59a55973":"#Jersey number\nplayer_number = data_new['Jersey Number'].value_counts()\n#visualization\nplt.figure(figsize=(10,7))\nsns.barplot(x = player_number[:1].index,y = player_number[:1].values)\nplt.xlabel(\"Number of Jersey Number\")\nplt.ylabel(\"Numbers\")\nplt.title(\"Jersey Numers\",color=\"blue\",fontsize=15)","f27821c9":"# Ages of Players\nabove25 = [ \"above25\" if i>25 else \"equal25\" if i==25 else \"below25\" for i in data_new.Age]\ndf = pd.DataFrame({\"Age\":above25})\nsns.countplot(x = df.Age)\nplt.ylabel(\"Number of Players Age\")\nplt.title(\"Age of Players\",color=\"blue\",fontsize=15)","5c7b3503":"## Information about data","eae4fb09":"## Analysis!","682205f1":"FIFA game is the most popular football game in the world. 90 percent of gamers (me too :) ) are playing FIFA game. I analyized FIFA19 data."}}