{"cell_type":{"8ff193dd":"code","ac0a061a":"code","7709d547":"code","f568c213":"code","ffe52a62":"code","bc61ff70":"code","c6345e42":"code","2abd2938":"code","e7c3da08":"code","c64a71ce":"code","2c135f5c":"code","853b8bfd":"code","21bc4e26":"code","b1e2b89b":"code","083073bf":"code","eba5ec2d":"code","241692ef":"code","f76c1087":"markdown","7b713a2f":"markdown","bea09be8":"markdown","5543184d":"markdown","87df0285":"markdown","d37fc7c8":"markdown","6fbb5bd7":"markdown","fe845314":"markdown","de4658a2":"markdown"},"source":{"8ff193dd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ac0a061a":"3*(7+2)","7709d547":"z = 5\/2\nz","f568c213":"s='abc'\nx=\"abc\"\nprint(s==x)","ffe52a62":"height = 1.79\nweight = 68.7\nprint(\"Height : \",height)\nprint(\"Weight : \",weight)","bc61ff70":"# Calculate BMI\nbmi = weight\/height ** 2\nprint(\" BMI : \", bmi)","c6345e42":"x,y=2,3\nprint(\"x,y : \",x,y)","2abd2938":"a=[1,2,3] \nb=a  # b now references waht a references\na.append(4)\nprint(\"a,b :\",a,b) # see both a and b show the same result\nb.append(5)\nprint(\"a,b :\",a,b) # see both a and b show the same result\n","e7c3da08":"x = 3\ny = x\nprint(\"x,y : \", x,y)\ny = 4 # This assignment created a new reference for y\nprint(\"x,y : \", x,y)","c64a71ce":"x=\"Hassan\"\ny=x\nprint(\"x,y : \", x,y)\ny=\"Amin\"\nprint(\"x,y : \", x,y)\na=''\nb=''\na=[1,2,3]\nb=a\nprint(\"a,b : \", a,b)\nb=['a','b','c'] # Assignment creates a new reference\nprint(\"a,b : \", a,b)\na=b\nb.append(4) # Append makes changes in place without creating a new reference\nprint(\"a,b : \", a,b)\n\n# Printing types of variables\nprint(\"Type of a,b,x,y\", type(a),type(b),type(x),type(y))","2c135f5c":"fam = ['liz',123,'emma', 134,'john',546]\nprint(fam)\nprint(fam[3])\nprint(fam[-2])\nprint(fam[-3])\n\n# List Slicing\nprint(fam[2:4]) # \nprint(fam[2:])\nprint(fam[:4])\n\n","853b8bfd":"fam = ['liz',123,'emma', 134,'john',546]\nprint(fam)\n# Changing list elements\nfam[-1] = 777\nprint(fam)\nfam[0:2]=['fiz',444]\nprint(fam)\n","21bc4e26":"fam = ['liz',123,'emma', 134,'john',546]\nprint(fam)\nfam_ext = fam + ['nano',666]\nprint(fam_ext)\ndel(fam_ext[-1])\nprint(fam_ext)","b1e2b89b":"def my_function():\n  print(\"Hello from a function\")\n\nmy_function()\n","083073bf":"def my_function(fname):\n  print(fname + \" Refsnes\")\n\nmy_function(\"Emil\")\nmy_function(\"Tobias\")\nmy_function(\"Linus\")\n","eba5ec2d":"def my_function(country = \"Norway\"):\n  print(\"I am from \" + country)\n\nmy_function(\"Sweden\")\nmy_function(\"India\")\nmy_function()\nmy_function(\"Brazil\")\n","241692ef":"def my_function(x):\n  return 5 * x\n\nprint(my_function(3))\nprint(my_function(5))\nprint(my_function(9))\n","f76c1087":"**Understanding Variable Assignment for Simple Types**","7b713a2f":"**Basic Operations in Python**","bea09be8":"**Adding\/Removing Elements from List**","5543184d":"**List Processing Basics**","87df0285":"**Understanding Variable Assignment for Lists, Dictionaries and User Defined Types**","d37fc7c8":"## Note\n\nPlease share, upvote and comment to help me create and share more content for the community.\nThank you all.","6fbb5bd7":"**Understanding References**","fe845314":"**Multiple Assignments**","de4658a2":"**Python Functions**"}}