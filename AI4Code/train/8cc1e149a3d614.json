{"cell_type":{"4abd0b77":"code","f05c73ea":"code","b83b9573":"code","1d68bb84":"code","590f4508":"code","5fa6c4ff":"code","b8319d46":"code","1bbe479e":"code","98c4fef3":"code","0fe598c5":"code","df4d54ba":"code","0cbc9926":"code","9dcffad4":"code","06b0bf91":"code","8368355b":"code","fd628128":"code","d0768d42":"code","bd5d075d":"code","27a2df49":"code","0c77ebf5":"code","296aab95":"markdown"},"source":{"4abd0b77":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib. pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f05c73ea":"gender_df = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\ntitanic_df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","b83b9573":"gender_df.head()","1d68bb84":"gender_df.describe()","590f4508":"titanic_df.head(10)","5fa6c4ff":"titanic_df.info()","b8319d46":"titanic_df.describe()","1bbe479e":"titanic_df.isnull().sum()","98c4fef3":"titanic_df.shape","0fe598c5":"plt.rcParams['figure.figsize'] = (8, 6)\nsns.countplot(titanic_df['Embarked'])","df4d54ba":"print(\"Survived Passengers is only \",titanic_df['Survived'].value_counts()[1], ' passengers')\nplt.rcParams['figure.figsize'] = (8, 6)\nsns.countplot(titanic_df['Survived'])\nplt.title(\"No. of Survivors\")\nplt.show()","0cbc9926":"female_survived = titanic_df[titanic_df['Sex'] == 'female']['Survived'].sum()\/titanic_df[titanic_df['Sex'] == 'female']['Sex'].value_counts()\nmale_survived = titanic_df[titanic_df['Sex'] == 'male']['Survived'].sum()\/titanic_df[titanic_df['Sex'] == 'male']['Sex'].value_counts()\nprint(\"Percentage of Male survivors: \",\"{:.2f}\".format(male_survived[0]*100))\nprint(\"That means out of \",titanic_df['Sex'].value_counts()[0],\" Males only \",titanic_df[titanic_df['Survived']==1]['Sex'].value_counts()[1], \" Males Survived\")\n\nprint(\"\\n\")\nprint(\"Percentage of Female survivors: \",\"{:.2f}\".format(female_survived[0]*100))\nprint(\"That means out of \",titanic_df['Sex'].value_counts()[1],\" Females only \",titanic_df[titanic_df['Survived']==1]['Sex'].value_counts()[0], \" Females Survived\")\n\nplt.rcParams['figure.figsize'] = (8, 6)\nsns.barplot(x='Sex',y='Survived',data=titanic_df)\nplt.title(\"Number of Surviver with respect to Sex\")\nplt.ylabel(\"Surviver Percentage\")\nplt.ylim()\nplt.show()","9dcffad4":"df = titanic_df[titanic_df['Survived']==1]\nprint(\"Female Survived: \",df['Sex'].value_counts()[0], \"\\nMale Survived: \",df['Sex'].value_counts()[1])\nplt.rcParams['figure.figsize'] = (8, 6)\nsns.countplot(df['Sex'])\nplt.title(\"No. of Survivors w.r.t Male and Female\")\nplt.show()","06b0bf91":"first_class = titanic_df[titanic_df['Pclass'] == 1]['Survived'].sum()\/titanic_df[titanic_df['Pclass'] == 1]['Pclass'].sum()\nsecond_class = titanic_df[titanic_df['Pclass'] == 2]['Survived'].sum()\/titanic_df[titanic_df['Pclass'] == 2]['Pclass'].value_counts()\nthird_class = titanic_df[titanic_df['Pclass'] == 3]['Survived'].sum()\/titanic_df[titanic_df['Pclass'] == 3]['Pclass'].value_counts()","8368355b":"print(\"Percentage of passengers survived from First Class: \",\"{:.2f}\".format(first_class*100))\nprint(\"That means out of \",titanic_df[titanic_df['Pclass'] == 1]['Pclass'].sum(),\" First Class passengers only \",titanic_df[titanic_df['Pclass'] == 1]['Survived'].sum(),\" Survived\")\nprint(\"Out \",titanic_df[titanic_df['Pclass'] == 1]['Survived'].sum(),\": \",df[df['Pclass']==1]['Sex'].value_counts()[0],\" where female and \",df[df['Pclass']==1]['Sex'].value_counts()[1], \"male\")\n\nprint(\"\\nPercentage of passengers survived from Second Class: \",\"{:.2f}\".format(second_class[2]*100))\nprint(\"That means out of \",titanic_df[titanic_df['Pclass'] == 2]['Pclass'].value_counts()[2],\" Second Class passengers only \",titanic_df[titanic_df['Pclass'] == 2]['Survived'].sum(),\" Survived\")\nprint(\"Out \",titanic_df[titanic_df['Pclass'] == 2]['Survived'].sum(),\": \",df[df['Pclass']==2]['Sex'].value_counts()[0],\" where female and \",df[df['Pclass']==2]['Sex'].value_counts()[1], \"male\")\n\nprint(\"\\nPercentage of passengers survived from Third Class: \",\"{:.2f}\".format(third_class[3]*100))\nprint(\"That means out of \",titanic_df[titanic_df['Pclass'] == 3]['Pclass'].value_counts()[3],\" Third Class passengers only \",titanic_df[titanic_df['Pclass'] == 3]['Survived'].sum(),\" Survived\")\nprint(\"Out \",titanic_df[titanic_df['Pclass'] == 3]['Survived'].sum(),\": \",df[df['Pclass']==3]['Sex'].value_counts()[0],\" where female and \",df[df['Pclass']==3]['Sex'].value_counts()[1], \"male\")\n\n\nplt.rcParams['figure.figsize'] = (8, 6)\nsns.barplot(x=titanic_df['Pclass'],y=titanic_df['Survived'],hue=titanic_df['Sex'])\n\nplt.show()","fd628128":"plt.rcParams['figure.figsize'] = (8, 6)\nsns.barplot(x='Embarked',y='Survived',data=titanic_df)\nplt.show()","d0768d42":"copy = titanic_df['Age']\ncopy.dropna(inplace=True)\nprint(\"Check Out the Distribution of Age\")\nsns.distplot(copy)\nplt.show()","bd5d075d":"print(\"Mean of Age: \",titanic_df['Age'].mean()),print(\"Median of Age: \",titanic_df['Age'].median())","27a2df49":"titanic_df[\"Age\"].fillna(titanic_df[\"Age\"].median(),inplace=True)\ntitanic_df[\"Embarked\"].fillna(\"S\", inplace = True)\nsurvived_ages = titanic_df[titanic_df.Survived == 1][\"Age\"].dropna()\nnot_survived_ages = titanic_df[titanic_df.Survived == 0][\"Age\"].dropna()\nplt.subplot(1, 2, 1)\nsns.distplot(survived_ages, kde=False)\nplt.axis([0, 100, 0, 100])\nplt.title(\"Survived\")\nplt.ylabel(\"Proportion\")\nplt.subplot(1, 2, 2)\nsns.distplot(not_survived_ages, kde=False)\nplt.axis([0, 100, 0, 100])\nplt.title(\"Didn't Survive\")\nplt.subplots_adjust(right=1.7)\nplt.show()","0c77ebf5":"sns.pairplot(titanic_df)\nplt.show()","296aab95":"It has right skewness so we will replace NaN with Median of this distribution "}}