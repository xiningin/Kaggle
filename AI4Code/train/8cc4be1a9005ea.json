{"cell_type":{"b306aca7":"code","4da56730":"code","d33de145":"code","aa95ec7d":"code","34bc6045":"code","363bbbcf":"code","7ca4c33e":"code","a0809244":"code","e18ba258":"code","e46183e5":"code","cf9f0724":"code","00f4b8bc":"code","3bb3e890":"code","f4f383fe":"code","24439a65":"code","303f7873":"code","5cb4a07c":"code","3e878981":"code","be615eb6":"code","9d907fd2":"markdown","ac469fc8":"markdown"},"source":{"b306aca7":"# read data \nimport os\nfiles = os.listdir('..\/input')\nprint(files)","4da56730":"# import pandas and read data \nimport pandas as pd \ndf = pd.read_csv('..\/input\/' + files[0], encoding=\"ISO-8859-1\")","d33de145":"df.describe()","aa95ec7d":"df.head()","34bc6045":"# Check occurances per year\ndf.groupby('Year').size().describe()","363bbbcf":"# Check formatting of lyrics\ndf['Lyrics'].loc[0]","7ca4c33e":"# Add wordcount column \ndf['Wordcount'] = df['Lyrics'].str.split().str.len()","a0809244":"# Convert to lowercase\ndf['Lyrics'] = df['Lyrics'].str.lower()","e18ba258":"# Drop nan\ndf = df.dropna()","e46183e5":"# Import matplotlib\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()","cf9f0724":"# Define words of interest\nsubs_s = 'weed|heroine|cocaine|drugs|marihuana|splif|smack'\nalco_s = 'beer|wine|whiskey|alcohol|booze|wodka|moonshine'\nreli_s = 'god|jesus|lord|heaven|bible|christ|jerusalem|church'\nsex_s = 'sex|suck|penis|pussy|ass|cunt|dick'","00f4b8bc":"# Relative wordcount for certain topics per year\nsubs = df.groupby('Year').apply(lambda x: x['Lyrics'].str.count(subs_s).sum() \/ x['Wordcount'].sum())\nalco = df.groupby('Year').apply(lambda x: x['Lyrics'].str.count(alco_s).sum() \/ x['Wordcount'].sum())\nreli = df.groupby('Year').apply(lambda x: x['Lyrics'].str.count(reli_s).sum() \/ x['Wordcount'].sum())\nsex_ = df.groupby('Year').apply(lambda x: x['Lyrics'].str.count(sex_s).sum() \/ x['Wordcount'].sum())","3bb3e890":"fig = plt.figure()\nax = fig.add_subplot(111)\nax.plot(subs, 'g', label='Drugs')\nax.plot(alco, 'b', label='Alcohol')\nax.plot(reli, 'y', label='Religion')\nax.plot(sex_, 'r', label='Sex')\nax.set_yticklabels(['{:,.2%}'.format(x) for x in ax.get_yticks()])\nlegend = ax.legend()","f4f383fe":"# Count relative number of songs containing reference to a certain topic \nsubs = df.groupby('Year').apply(lambda x: x['Lyrics'].str.contains(subs_s).sum() \/ x.shape[0])\nalco = df.groupby('Year').apply(lambda x: x['Lyrics'].str.contains(alco_s).sum() \/ x.shape[0])\nreli = df.groupby('Year').apply(lambda x: x['Lyrics'].str.contains(reli_s).sum() \/ x.shape[0])\nsex_ = df.groupby('Year').apply(lambda x: x['Lyrics'].str.contains(sex_s).sum() \/ x.shape[0])","24439a65":"fig = plt.figure()\nax = fig.add_subplot(111)\nax.plot(subs, 'g', label='Drugs')\nax.plot(alco, 'b', label='Alcohol')\nax.plot(reli, 'y', label='Religion')\nax.plot(sex_, 'r', label='Sex')\nax.set_yticklabels(['{:,.2%}'.format(x) for x in ax.get_yticks()])\nlegend = ax.legend()","303f7873":"# Create heatmaps\nkeys_long = [subs_s, alco_s, reli_s, sex_s]\nindex = []\ndata_oc, data_wc = [], []\nfor keys_short in keys_long: \n    keys = keys_short.split('|')\n    for key in keys: \n        key = ' ' + key + ' '\n        index.append(key)\n        data_oc.append(df.groupby('Year').apply(lambda x: x['Lyrics'].str.contains(key).sum() \/ x.shape[0] * 100))\n        data_wc.append(df.groupby('Year').apply(lambda x: x['Lyrics'].str.count(key).sum() \/ x['Wordcount'].sum()  * 100))\nheatmap_df_oc = pd.DataFrame(data_oc, index=index, columns=df.groupby('Year').groups.keys())\nheatmap_df_wc = pd.DataFrame(data_wc, index=index, columns=df.groupby('Year').groups.keys())","5cb4a07c":"fig = plt.figure(figsize=(20,10))\nax1 = fig.add_subplot(121)\nax1 = sns.heatmap(heatmap_df_oc, ax=ax1, cmap='viridis', cbar_kws = {'format': '%.2f%%'})\nax1.set_title('Percentage of songs containing a word')\nax2 = fig.add_subplot(122)\nax2.set_title('Percentage of overall word occurance in a year')\nax2 = sns.heatmap(heatmap_df_wc, ax=ax2, cmap='viridis', cbar_kws = {'format': '%.2f%%'})","3e878981":"# Print a selection of artists containing the word ass\nprint(list(df.loc[df['Lyrics'].str.contains(' ass ')]['Artist'].sort_values().unique()[:30]))","be615eb6":"# Print a selection of artists containing the word god\nprint(list(df.loc[df['Lyrics'].str.contains(' god ')]['Artist'].sort_values().unique()[:30]))","9d907fd2":"# Billboard top 100 word occurance","ac469fc8":"This notebook contains an analysis of all the lyrics of the Billboard top 100 over the last semi-century. Not contain a lot of markdown, just code and analysis. Sorry for that... However, check out the cool heatmaps at the end. They're pretty neat. Notice the rise of hip-hop in the Billboard top 100, and their preference for the word 'ass', and other words related to sex. "}}