{"cell_type":{"8eed3f03":"code","23428dcc":"code","9ab5b30b":"code","34115945":"code","8f244740":"code","972d3cc9":"markdown","063f17ab":"markdown","ff722962":"markdown","99343d9f":"markdown","600e9681":"markdown","9ad482a0":"markdown"},"source":{"8eed3f03":"import numpy as np\nimport pandas as pd\nimport re\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\n# Select relevant columns and rename\nsales = pd.read_csv('..\/input\/video-game-sales-with-ratings\/Video_Games_Sales_as_at_22_Dec_2016.csv',\n                   usecols = ['Name','Platform','Year_of_Release','Genre','Publisher','NA_Sales'])\nsales.columns = ['name', 'system', 'year', 'genre', 'publisher', 'sales']\n\n# Drop NAs\nsales.dropna(inplace = True)\n# Drop null sales\nsales.query('sales > 0', inplace = True)\n# Re-encode 'year' as int32\nsales.year = sales.year.astype('int32')\n\n# Log-transform sales and compare distributions\nsales['log_sales'] = np.log(sales.sales + 1)\nsales[['sales', 'log_sales']].hist(figsize = (12, 4), bins = 50)","23428dcc":"# Select Nintendo systems\nnintendo = ['NES','SNES','GB','GC','N64','GBA']\nsales = sales.query('system in @nintendo')\n\n# Group by year of release and platform (MultiIndex) to compute sum of log NA sales accordingly\ngroup_sales = sales.groupby(['year', 'system']).sum().log_sales\n\n# Unstack group_sales and set NAs to zero\ntidy = group_sales.unstack().fillna(0)\ntidy.plot(figsize = (12, 6))","9ab5b30b":"pd.crosstab(sales.year, columns = 'number games').plot.bar(y = 'number games', figsize = (12, 6))","34115945":"# Group by year of release and platform (MultiIndex) to compute median of log NA sales accordingly\ngroup_sales = sales.groupby(['year', 'system']).median().log_sales\n\n# Unstack group_sales and set NAs to zero\ntidy = group_sales.unstack().fillna(0)\ntidy.plot(figsize = (12, 6))","8f244740":"NUM_PUB = 5 # number of publishers to be displayed\n\ngenreByPub = pd.crosstab(sales.publisher, sales.genre)\ntopFive = genreByPub.sum(axis = 1).sort_values(ascending = False).index[:NUM_PUB]\n\n# Horizontal barplot\ngenreByPub.loc[topFive].plot.barh(figsize = (8, 12), grid = True, legend = 'reverse')","972d3cc9":"To this point our sales record from North America comprises both physical and digital copies, which manifestly sell differently - in short, digital copies sell faster and for less. Because we are retrogaming geeks, we will turn our attention to the good old cartridge and select some of the oldest Nintendo systems, i.e. Nintendo Entertainment System (NES), Super NES (SNES), Game Boy (GB, presumably includes Color), GameCube (GC), Nintendo64 (N64) and Game Boy Advance (GBA).\n<img src=\"https:\/\/media.gamestop.com\/i\/gamestop\/10152452\/Tetris\" width=\"400\">\nAfter filtering the aforementioned systems, we can then extract the sum of the log-scaled sales per system and year. A quick glance from the unstacked `groupby` object clearly aligns with the periods each of these systems took the spotlight.","063f17ab":"These trends are nonetheless quite erratic, potentially becase of few titles that sell extremely well in certain years, e.g. Tetris, Super Mario, Pok\u00e9mon, Zelda. A drop in prices and an increase in purchasing power could also help explain the increase in overall game sales over time. \n\nAdditionally, it would be nice to monitor the number of games released yearly.","ff722962":"Retrogaming is not dead - it is inside those of us who used to blow dust off cartridges. In virtue of my long-lived passion for the Nintendo franchises I binged on playing from my original Game Boy, I decided to use this dataset to explore a couple of insights regarding sales of classic Nintendo systems. I have been using R for the last five years and I am now on the course to increasing my Python fluency.\n\n- Cartridge sales from pre-2008 Nintendo systems in North America\n- Genre-specializing publishers\n\n# Pre-2009 Nintendo sales in North America\n\nThis initial analysis focusses on computing and displaying the total game sales dynamics of classic Nintendo systems in North America. Firstly, we will import part of the CSV dataset, rename the columns, exclude NA-ridden entries and zero-valued sales - some games may sell exclusively overseas - and re-encode the variable `year`, which annoyingly is expressed as `float64`, into `int32`. Next, we log-scale sales (expressed as millions of units) to reduce the skewness in the overall sales distribution, the corrective effect of which is shown below (distribution of sales before and after log-scaling on the left- and right-hand side, respectively).","99343d9f":"Repeat the above analysis, using the median of the log-sales instead of summing over. This way we avoid the bias stemming from the disproportion over the years shown above.","600e9681":"# Genre-specializing publishers\n\nThis dataset could also serve well in determining what genres different game publishers explore the most. This is an extremely simple exercise that only requires a contigency table and comparing the relative proportions across all such publishers, to this end using `pd.crosstab` on `sales` and `genre`. Moreover, for the sake of visualization we might want to select the few top publishers that overall sold the most, e.g. top five. We can again leverage the `pandas` plotting methods to easily derive an horizontal barplot.","9ad482a0":"Unsurprisingly, Electronic Arts, a renowned maker of titles in football, soccer, basketball, and other sports clearly focus on that genre, while releases from Activision and Nintendo are predominantly centred on the action and platform genres, respectively. Stay tuned for more updates to this kernel!\n\nFor more information on retrogaming including tips for tutorials, mods, sales, merch and a lot more check out the community page [The Retro Future Facebook page](https:\/\/www.facebook.com\/groups\/TheRetroFuture)."}}