{"cell_type":{"ddbf139c":"code","474fad42":"code","6884d02e":"code","1538a7a1":"code","224bc632":"code","a26cc3a3":"code","370be828":"code","94c7970b":"code","c922d587":"code","37b6500f":"code","1b7c4b59":"code","36157b7c":"code","e1ca2115":"code","cefa2e9a":"code","bb906833":"code","71641c04":"code","c4b4686e":"code","56e4a599":"code","829ed94f":"code","3c9dc701":"code","aa5b2685":"code","dc9a8847":"code","ab08e13a":"code","56676f6e":"code","afcccffd":"code","e812855b":"code","d4e3abce":"code","f87a8923":"code","6e59ec1d":"code","a81c0098":"code","58b01e00":"markdown","fc688ae1":"markdown","b6789512":"markdown","473e83a0":"markdown","c16c50a1":"markdown","b2563ca9":"markdown","05e601bb":"markdown"},"source":{"ddbf139c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport plotly as py\nimport cufflinks as cf\nimport plotly.graph_objects as go\nfrom plotly.offline import iplot\npy.offline.init_notebook_mode(connected=True)\ncf.go_offline\n\nplt.rcParams['figure.figsize'] = [12,6]\nplt.rcParams['figure.dpi'] = 70\nsns.set_theme(style='white')\nsns.set_palette(palette='viridis')","474fad42":"worldcups = pd.read_csv('..\/input\/fifa-world-cup\/WorldCups.csv')\nplayers = pd.read_csv('..\/input\/fifa-world-cup\/WorldCupPlayers.csv')\nmatches = pd.read_csv('..\/input\/fifa-world-cup\/WorldCupMatches.csv')","6884d02e":"worldcups.head()","1538a7a1":"matches.dropna(subset=['Year'], inplace=True)","224bc632":"matches['Home Team Name'].value_counts()","a26cc3a3":"#replacing country strings\nmatches['Home Team Name'] = matches['Home Team Name'].str.replace('rn\">', '') #do not exist in worldcups df\nmatches['Away Team Name'] = matches['Away Team Name'].str.replace('rn\">', '')","370be828":"#replacing country strings for Germany FR\nmatches['Home Team Name'] = matches['Home Team Name'].str.replace(' FR', '')\nmatches['Away Team Name'] = matches['Away Team Name'].str.replace(' FR', '')\nworldcups['Winner'] = worldcups['Winner'].str.replace(' FR', '')\nworldcups['Runners-Up'] = worldcups['Runners-Up'].str.replace(' FR', '')\nworldcups['Third'] = worldcups['Third'].str.replace(' FR', '')\nworldcups['Fourth'] = worldcups['Fourth'].str.replace(' FR', '')","94c7970b":"winner = worldcups['Winner'].value_counts()\nwinner","c922d587":"second = worldcups['Runners-Up'].value_counts()\nsecond","37b6500f":"third = worldcups['Third'].value_counts()\nthird","1b7c4b59":"#combine dataframes from 3 previously created\nteams = pd.concat([winner, second, third], axis = 1)\nteams.fillna(0, inplace=True)\nteams.astype(int)\nteams.reset_index(inplace=True)\nteams","36157b7c":"#melt into singular dataframe for seaborn visualization\nteams_tidy = pd.melt(teams, id_vars='index', var_name='result', value_name='counts')\nteams_tidy","e1ca2115":"g = sns.barplot(data=teams_tidy, x = 'index', y = 'counts', hue = 'result')\ng.set_xticklabels(g.get_xticklabels(), rotation=90);","cefa2e9a":"#create 2 dataframes with home\/away countries and goals\nhome = matches[['Home Team Name', 'Home Team Goals']].dropna()\naway = matches[['Away Team Name', 'Away Team Goals']].dropna()","bb906833":"#renaming columns\nhome.columns = ['Countries', 'Goals']\naway.columns = home.columns","71641c04":"#total goals per country as seperate values\ngoals = home.append(away, ignore_index=True)","c4b4686e":"#create aggregated df with total goals per (unique) country, sorted decending\ngoals = goals.groupby('Countries').sum().sort_values(by = 'Goals', ascending=False)","56e4a599":"#plotting all countries by number of goals\ng = sns.barplot(data=goals, x = goals.index, y = 'Goals', palette='viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90);","829ed94f":"#plotting the top 20 countries with most goals scored\ngoals_top20 = goals.iloc[:20]\ng = sns.barplot(data=goals_top20, x = goals_top20.index, y = 'Goals', palette='viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90);","3c9dc701":"worldcups.head()","aa5b2685":"worldcups['Attendance'] = worldcups['Attendance'].str.replace('.','')","dc9a8847":"worldcups['Attendance'] = worldcups['Attendance'].astype(int)","ab08e13a":"fig, ax = plt.subplots(figsize = (10, 5))\nsns.despine(right = True)\ng = sns.barplot(x = 'Year', y = 'Attendance', data = worldcups, palette='viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation = 80)\ng.set_title('Attendance per Year')\n\n#======================\nfig, ax = plt.subplots(figsize = (10, 5))\nsns.despine(right = True)\ng = sns.barplot(x = 'Year', y = 'QualifiedTeams', data = worldcups, palette='viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation = 80)\ng.set_title('Qualified Teams per Year')\n\n#======================\nfig, ax = plt.subplots(figsize = (10, 5))\nsns.despine(right = True)\ng = sns.barplot(x = 'Year', y = 'GoalsScored', data = worldcups, palette='viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation = 80)\ng.set_title('Goals Scored by Teams per Year')\n\n#======================\nfig, ax = plt.subplots(figsize = (10, 5))\nsns.despine(right = True)\ng = sns.barplot(x = 'Year', y = 'MatchesPlayed', data = worldcups, palette='viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation = 80)\ng.set_title('Matches Played by Teams per Year')\n\n\n\nplt.show()","56676f6e":"home = matches.groupby(['Year', 'Home Team Name'])['Home Team Goals'].sum()\naway = matches.groupby(['Year', 'Away Team Name'])['Away Team Goals'].sum()","afcccffd":"goals = pd.concat([home, away], axis = 1)\ngoals.fillna(0, inplace = True)\ngoals['Goals'] = goals['Home Team Goals'] + goals['Away Team Goals']\ngoals = goals.drop(labels = ['Home Team Goals', 'Away Team Goals'], axis = 1)\ngoals","e812855b":"goals = goals.reset_index()","d4e3abce":"goals.columns = ['Year', 'Country', 'Goals']\ngoals = goals.sort_values(by = ['Year', 'Goals'], ascending=[True, False])\ngoals","f87a8923":"top5 = goals.groupby('Year').head(5)\ntop5.head(10)","6e59ec1d":"x, y = goals['Year'].values, goals['Goals'].values","a81c0098":"data = []\n\nfor team in top5['Country'].drop_duplicates().values:\n    year = top5[top5['Country'] == team]['Year']\n    goal = top5[top5['Country'] == team]['Goals']\n    \n    data.append(go.Bar(x = year, y = goal, name = team))\n    \nlayout = go.Layout(barmode = 'stack', title = 'Top 5 Teams with Most Goals', showlegend = False)\n\nfig = go.Figure(data = data, layout = layout)\nfig.show()","58b01e00":"**Goals per Team per Worldcup**","fc688ae1":"Inspiration: https:\/\/www.udemy.com\/course\/complete-data-visualization-in-python\/","b6789512":"**Goals per Country**","473e83a0":"**Most World Cup Wins**","c16c50a1":"**Attendance, Number of Teams, Goals, Matches per World Cup**","b2563ca9":"Work in progress..","05e601bb":"**Data Cleaning**"}}