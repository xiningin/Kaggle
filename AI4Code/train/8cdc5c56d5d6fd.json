{"cell_type":{"7659f1d2":"code","33f80567":"code","c144bec8":"code","d0453de3":"code","9a640037":"code","06dc2723":"code","a4ed1f0f":"code","93c7650e":"code","64b4b86a":"code","24f004a6":"code","e38ed7b9":"code","82921042":"code","6098d05e":"code","bb90f175":"code","ad9a6752":"code","17502df3":"code","aceb7836":"code","6e5c3a7e":"code","c2986fde":"code","4995096e":"code","7b108682":"code","316a460a":"code","052da32e":"code","12b88be0":"code","2a893b93":"code","671525b0":"code","8f95455b":"code","cc3d0768":"code","b159953a":"code","0925d0de":"code","ec83ef73":"code","fe854bdc":"code","47c7197b":"code","fb052097":"code","9d2c2e68":"code","c1cc1809":"code","f14afcc6":"code","669ad9c1":"code","32ee059b":"code","6aeda2a4":"code","0d4eb635":"code","e4931b25":"code","a8193904":"code","6416f5d6":"code","8dae6149":"code","2a0e091d":"code","ebebc1fb":"markdown","ee53b460":"markdown","0fd56408":"markdown","70271d18":"markdown","4234893f":"markdown","b0b5782c":"markdown","5f7245fc":"markdown","ca340bdf":"markdown","7a6c0bfd":"markdown","e77e6615":"markdown","eea6aaaa":"markdown","fbd802cc":"markdown","7ce6a4d9":"markdown","a08cfbb5":"markdown","5b07faf5":"markdown","dd85253b":"markdown","50183f4a":"markdown","c14ef136":"markdown","6e62d0b5":"markdown","c62ca0a9":"markdown","124fec09":"markdown","f8e56b22":"markdown","c6e2fabd":"markdown","d384f8b4":"markdown","af2c4b22":"markdown","2d153208":"markdown","2c6c153a":"markdown","7faab68e":"markdown","b298053f":"markdown","2560f9d6":"markdown","667e0aed":"markdown","949bb2d9":"markdown","9ba69da6":"markdown"},"source":{"7659f1d2":"import pandas as pd\nimport numpy as np\n\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport seaborn as sns\n\nfrom imblearn.over_sampling import SMOTE\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.feature_selection import SelectKBest, f_classif, chi2\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import roc_curve, roc_auc_score\nfrom sklearn.metrics import accuracy_score, classification_report","33f80567":"data = pd.read_csv('\/kaggle\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')\n\ndata.head()","c144bec8":"data.describe()","d0453de3":"fig_age = go.Figure()\n\nfig_age.add_trace(go.Histogram(x=data['age'],\n                               marker_color='#6a6fff'))\n\nfig_age.update_layout(\n    title_text='Age Distribution',\n    xaxis_title_text='Age',\n    yaxis_title_text='Count', \n    bargap=0.05, \n    template = 'plotly_dark',\n    width=750, \n    height=600\n)\n\nfig_age.show()","9a640037":"normal = data[data['anaemia']==0]\n\nanemia = data[data['anaemia']==1]","06dc2723":"colors= ['#7eff5e', '#ff5e79']\n\nlabels = ['Normal', 'Anemia']\n\nvalues = [len(normal[normal['DEATH_EVENT'] == 1]), \n          len(anemia[anemia['DEATH_EVENT'] == 1])]\n\nfig_anemia = go.Figure()\n\nfig_anemia.add_trace(go.Pie(labels=labels, values=values,\n                            hole=.4, marker_colors=colors))\n\nfig_anemia.update_layout(\n    title_text='Total number of deaths - Anemia',\n    template = 'plotly_dark',\n    width=750, \n    height=600\n)\n\nfig_anemia.show()","a4ed1f0f":"normal_cpk_level = data[(data['creatinine_phosphokinase'] >= 10) & \n                        (data['creatinine_phosphokinase'] <= 120)]\n\nabnormal_cpk_level = data[(data['creatinine_phosphokinase'] < 10) | \n                          (data['creatinine_phosphokinase'] > 120)]","93c7650e":"fig_creatinine = go.Figure()\n\nfig_creatinine.add_trace(go.Histogram(x=data['creatinine_phosphokinase'],\n                                      marker_color='#6a6fff'))\n\nfig_creatinine.update_layout(\n    title_text='Creatinine Phosphokinase Distribution',\n    xaxis_title_text='Creatinine Phosphokinase (mcg\/L)',\n    yaxis_title_text='Count', \n    bargap=0.05, \n    template = 'plotly_dark',\n    width=750, \n    height=600\n)\n\nfig_creatinine.show()","64b4b86a":"fig_creatinine = go.Figure()\n\nfig_creatinine.add_trace(go.Box(y=data['creatinine_phosphokinase'], \n                                name='Box', marker_color='#6a6fff'))\n\nfig_creatinine.update_layout(\n    title_text='Creatinine Phosphokinase BoxPlot',\n    yaxis_title_text='Creatinine Phosphokinase (mcg\/L)', \n    template = 'plotly_dark',\n    width=750, \n    height=600\n)\n\nfig_creatinine.show()","24f004a6":"colors = ['#7eff5e', '#ff5e79']\n\nlabels = ['CPK Normal Level', 'CPK Abnormal Level']\n\nvalues = [len(normal_cpk_level[normal_cpk_level['DEATH_EVENT'] == 1]),\n          len(abnormal_cpk_level[abnormal_cpk_level['DEATH_EVENT'] == 1])]\n\nfig_creatinine = go.Figure()\n\nfig_creatinine.add_trace(go.Pie(labels=labels, values=values, \n                                hole=.4, marker_colors=colors))\n\nfig_creatinine.update_layout(\n    title_text='Total number of deaths - CPK',\n    template = 'plotly_dark',\n    width=750, \n    height=600\n)","e38ed7b9":"normal = data[data['diabetes']==0]\n\ndiabetes = data[data['diabetes']==1]","82921042":"colors = ['#7eff5e', '#ff5e79']\n\nlabels = ['Normal', 'Diabetes']\n\nvalues = [len(normal[normal['DEATH_EVENT'] == 1]), \n          len(diabetes[diabetes['DEATH_EVENT'] == 1])]\n\nfig_diabetes = go.Figure()\n\nfig_diabetes.add_trace(go.Pie(labels=labels, values=values,\n                              hole=.4, marker_colors=colors))\n\nfig_diabetes.update_layout(\n    title_text='Total number of deaths - Diabetes',\n    bargap=0.05, \n    template = 'plotly_dark',\n    width=750, height=600)\n","6098d05e":"normal_ejection_fract = data[data['ejection_fraction'] >= 55]\n\nreduced_ejection_fract = data[data['ejection_fraction'] <= 50]\n\nborderline_ejection_fract = data[(data['ejection_fraction'] < 55) & \n                                 (data['ejection_fraction'] > 50)]","bb90f175":"fig_eject_fract = go.Figure()\n\nfig_eject_fract.add_trace(go.Histogram(x=data['ejection_fraction'],\n                                      marker_color='#6a6fff'))\n\nfig_eject_fract.update_layout(\n    title_text='Ejection Fraction Distribution',\n    xaxis_title_text='Ejection fraction (%)',\n    yaxis_title_text='Count', \n    bargap=0.05, \n    template = 'plotly_dark',\n    width=750, height=600\n)\n\nfig_eject_fract.show()","ad9a6752":"colors = ['#7eff5e', '#ff5e79', '#fddb3a']\n\nlabels = ['Normal Ejection Fraction', 'Reduced Ejection Fraction', \n          'Borderline Ejection Fraction ']\n\nvalues = [len(normal_ejection_fract[normal_ejection_fract['DEATH_EVENT']==1]),\n          len(reduced_ejection_fract[reduced_ejection_fract['DEATH_EVENT']==1]),\n          len(borderline_ejection_fract[borderline_ejection_fract['DEATH_EVENT']==1])]\n\nfig_eject_fract = go.Figure()\n\nfig_eject_fract.add_trace(go.Pie(labels=labels, values=values,\n                         hole=.4, marker_colors=colors))\n\nfig_eject_fract.update_layout(\n    title_text='Total number of deaths - Ejection Fraction',\n    template = 'plotly_dark',\n    width=750, \n    height=600\n)","17502df3":"normal_blood_pressure = data[data['high_blood_pressure'] == 0]\n\nhigh_blood_pressure = data[data['high_blood_pressure'] == 1]","aceb7836":"color = ['#7eff5e', '#ff5e79']\n\nlabels = ['Normal Blood Pressure', 'High Blood Pressure']\n\nvalues = [len(normal_blood_pressure[normal_blood_pressure['DEATH_EVENT'] == 1]), \n          len(high_blood_pressure[high_blood_pressure['DEATH_EVENT'] == 1])]\n\nfig_pressure = go.Figure()\n\nfig_pressure.add_trace(go.Pie(labels=labels, values=values,\n                             hole=.4, marker_colors=colors))\n\nfig_pressure.update_layout(\n    title_text='Total number of deaths - Blood Pressure',\n    bargap=0.05, \n    template = 'plotly_dark',\n    width=750, \n    height=600\n)","6e5c3a7e":"normal_platelets_level = data[(data['platelets'] >= 150000) & (data['platelets'] <= 450000)]\n\nabnormal_platelets_level = data[(data['platelets'] < 150000) | (data['platelets'] > 450000)]","c2986fde":"fig_platelets = go.Figure()\n\nfig_platelets.add_trace(go.Histogram(x=data['platelets'], \n                                      marker_color='#6a6fff'))\n\nfig_platelets.update_layout(\n    title_text='Platelets Distribution',\n    xaxis_title_text='Platelets (kiloplatelets\/mL)',\n    yaxis_title_text='Count', \n    bargap=0.05, \n    template = 'plotly_dark',\n    width=750, height=600\n)\n\nfig_platelets.show()","4995096e":"colors = ['#7eff5e', '#ff5e79']\n\nlabels = ['Normal Platelets Level', 'Abnormal Platelets Level']\n\nvalues = [len(normal_platelets_level[normal_platelets_level['DEATH_EVENT']==1]),\n          len(abnormal_platelets_level[abnormal_platelets_level['DEATH_EVENT']==1])]\n\nfig_platelets = go.Figure()\n\nfig_platelets.add_trace(go.Pie(labels=labels, values=values, \n                         hole=.4, marker_colors=colors))\n\nfig_platelets.update_layout(\n    title_text='Total number of deaths - Platelets',\n    template = 'plotly_dark',\n    width=750, \n    height=600\n)\n\nfig_platelets.show()","7b108682":"normal_range_creatinine = data[(data['serum_creatinine'] >= 0.7) & (data['serum_creatinine'] <= 1.2)]\n\nout_range_creatinine = data[(data['serum_creatinine'] < 0.7) | (data['serum_creatinine'] > 1.2)]","316a460a":"fig_creatinine = go.Figure()\n\nfig_creatinine.add_trace(go.Histogram(x=data['serum_creatinine'], \n                                      marker_color='#6a6fff'))\n\nfig_creatinine.update_layout(\n    title_text='Serum Creatinine Distribution',\n    xaxis_title_text='Serum Creatinine(mg\/dL)',\n    yaxis_title_text='Count', \n    bargap=0.05, \n    template = 'plotly_dark',\n    width=750, height=600\n)\n\nfig_creatinine.show()","052da32e":"colors = ['#7eff5e', '#ff5e79']\n\nlabels = ['Normal Creatinine Level', 'Abnormal Creatinine Level']\n\nvalues = [len(normal_range_creatinine[normal_range_creatinine['DEATH_EVENT']==1]),\n          len(out_range_creatinine[out_range_creatinine['DEATH_EVENT']==1])]\n\nfig_creatinine = go.Figure()\n\nfig_creatinine.add_trace(go.Pie(labels=labels, values=values, \n                         hole=.4, marker_colors=colors))\n\nfig_creatinine.update_layout(\n    title_text='Total number of deaths - Creatinine',\n    template = 'plotly_dark',\n    width=750, \n    height=600\n)\n\nfig_creatinine.show()","12b88be0":"normal_sodium_level = data[(data['serum_sodium'] >= 135) & (data['serum_sodium'] <= 145)]\nabnormal_sodium_level = data[(data['serum_sodium'] < 135) | (data['serum_sodium'] > 145)]","2a893b93":"fig_sodium = go.Figure()\n\nfig_sodium.add_trace(go.Histogram(x=data['serum_sodium'], \n                                  marker_color='#6a6fff'))\n\nfig_sodium.update_layout(\n    title_text='Serum Sodium Distribution',\n    xaxis_title_text='Serum Sodium (mEq\/L)',\n    yaxis_title_text='Count', \n    bargap=0.05, \n    template = 'plotly_dark',\n    width=750, height=600\n)\n\nfig_sodium.show()","671525b0":"colors = ['#7eff5e', '#ff5e79']\n\nlabels = ['Normal Sodium Level', 'Abnormal Sodium Level']\n\nvalues = [len(normal_sodium_level[normal_sodium_level['DEATH_EVENT']==1]),\n          len(abnormal_sodium_level[abnormal_sodium_level['DEATH_EVENT']==1])]\n\nfig_sodium = go.Figure()\n\nfig_sodium.add_trace(go.Pie(labels=labels, values=values, \n                         hole=.4, marker_colors=colors))\n\nfig_sodium.update_layout(\n    title_text='Total number of deaths - Sodium',\n    template = 'plotly_dark',\n    width=750, \n    height=600\n)\n\nfig_sodium.show()","8f95455b":"colors = ['#013766', '#bc4558']\n\nlabels = ['Male', 'Female']\n\nvalues = [len(data[(data['DEATH_EVENT'] == 1) & (data['sex'] == 1)]), \n          len(data[(data['DEATH_EVENT'] == 1) & (data['sex'] == 0)])]\n\nfig_sex = go.Figure()\n\nfig_sex.add_trace(go.Pie(labels=labels, values=values, \n                         hole=.4, marker_colors=colors))\n\nfig_sex.update_layout(\n    title_text='Total number of deaths - Sex',\n    template = 'plotly_dark',\n    width=750, \n    height=600\n)\n\nfig_sex.show()","cc3d0768":"labels = ['Smokers', 'No smokers']\n\nvalues = [len(data[(data['DEATH_EVENT'] == 1) & (data['smoking'] == 1)]), \n          len(data[(data['DEATH_EVENT'] == 1) & (data['smoking'] == 0)])]\n\nfig_smoking = go.Figure()\n\nfig_smoking.add_trace(go.Pie(labels=labels, values=values,\n                            hole=.4))\n\nfig_smoking.update_layout(\n    title_text='Total number of deaths - Smoking',\n    template = 'plotly_dark',\n    width=750, \n    height=600\n)\n\nfig_smoking.show()","b159953a":"fig_time = go.Figure()\n\nfig_time.add_trace(go.Histogram(x=data['time'], \n                                marker_color='#6a6fff'))\n\nfig_time.update_layout(\n    title_text='Time Distribution',\n    xaxis_title_text='Time (days)',\n    yaxis_title_text='Count', \n    bargap=0.05, \n    template = 'plotly_dark',\n    width=750, \n    height=600\n)\n\nfig_time.show()","0925d0de":"survived = data[data['DEATH_EVENT'] == 0]\n\ndead = data[data['DEATH_EVENT'] == 1]","ec83ef73":"fig_target = go.Figure()\n\nfig_target.add_trace(go.Histogram(x=survived['DEATH_EVENT'], \n                                  name='Survived'))\n\nfig_target.add_trace(go.Histogram(x=dead['DEATH_EVENT'], \n                                  name='No Survived'))\n\nfig_target.update_layout(\n    yaxis_title_text='Count', \n    bargap=0.05, \n    template = 'plotly_dark',\n    width=750, \n    height=600\n)\n\nfig_target.show()","fe854bdc":"sns.pairplot(data, hue='DEATH_EVENT')","47c7197b":"fig_corr = px.imshow(data.corr(), color_continuous_scale='peach')\n\nfig_corr.update_layout(\n    title={\n        'text': \"Features correlation\",\n        'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'}, \n    template = 'plotly_dark',\n    width=750, \n    height=600\n)\n\nfig_corr.show()","fb052097":"numerical_features = ['age', 'creatinine_phosphokinase', 'ejection_fraction',\n                      'platelets', 'serum_creatinine', 'serum_sodium',\n                      'time']\n\ncategorical_features = ['anaemia', 'diabetes', 'high_blood_pressure',\n                        'sex', 'smoking']\n\nnumerical_selector = SelectKBest(f_classif, k=4)\n\ncategorical_selector =  SelectKBest(chi2, k=1)\n\nX_numerical = numerical_selector.fit_transform(data[numerical_features], \n                                                  data['DEATH_EVENT'])\n\nX_categorical = categorical_selector.fit_transform(data[categorical_features],\n                                                    data['DEATH_EVENT'])\n\nprint('Numerical features selected:', data[numerical_features].columns[numerical_selector.get_support()].to_list())\n\nprint('Categorical features selected:', data[categorical_features].columns[categorical_selector.get_support()].to_list())","9d2c2e68":"X_selected = data[['age', 'ejection_fraction', 'serum_creatinine', 'time', \n                   'high_blood_pressure']]\n\ny = data['DEATH_EVENT']","c1cc1809":"X_train, X_test, y_train, y_test = train_test_split(X_selected, y, \n                                                    test_size = 0.2, \n                                                    stratify = y)","f14afcc6":"scaler = StandardScaler()\n\nX_train_scaled = scaler.fit_transform(X_train)\n\nX_test_scaled = scaler.transform(X_test)","669ad9c1":"rfc_parameters = {'n_estimators' : [10, 20, 50, 100],\n                  'criterion' : ['gini', 'entropy'],\n                  'max_depth' : [3, 5, 7, 9, 10]\n                 }\n\ngrid_search_rfc = GridSearchCV(estimator = RandomForestClassifier(), \n                           param_grid = rfc_parameters,\n                           cv = 10,\n                           n_jobs = -1)\n\ngrid_search_rfc.fit(X_train_scaled, y_train)\n\nrfc = grid_search_rfc.best_estimator_\n\ny_pred_rfc = rfc.predict(X_test_scaled)\n\nrfc_accuracy = accuracy_score(y_test, y_pred_rfc)\n\nrfc_cv_score = cross_val_score(rfc, X_selected, y, cv=10).mean()","32ee059b":"print(classification_report(y_test, y_pred_rfc))","6aeda2a4":"knn_parameters = {'n_neighbors' : [i for i in range(1, 40)]}\n\ngrid_search_knn = GridSearchCV(estimator = KNeighborsClassifier(), \n                           param_grid = knn_parameters,\n                           cv = 10,\n                           n_jobs = -1)\n\ngrid_search_knn.fit(X_train_scaled, y_train)\n\nknn = grid_search_knn.best_estimator_\n\ny_pred_knn = knn.predict(X_test_scaled)\n\nknn_accuracy = accuracy_score(y_test, y_pred_knn)\n\nknn_cv_score = cross_val_score(knn, X_selected, y, cv=10).mean()","0d4eb635":"print(classification_report(y_test, y_pred_knn))","e4931b25":"no_skill = [0 for _ in range(len(y_test))]\n\nrfc_probs = rfc.predict_proba(X_test_scaled)\n\nrfc_probs = rfc_probs[:, 1]\n\nknn_probs = knn.predict_proba(X_test_scaled)\n\nknn_probs = knn_probs[:, 1]","a8193904":"rfc_auc = roc_auc_score(y_test, rfc_probs)\n\nknn_auc = roc_auc_score(y_test, knn_probs)\n\nprint('(RFC) ROC AUC score:', rfc_auc)\n\nprint('(KNN) ROC AUC score:', knn_auc)","6416f5d6":"ns_fpr, ns_tpr, a =  roc_curve(y_test, no_skill)\n\nrfr_fpr, rfr_tpr, a =  roc_curve(y_test, rfc_probs)\n\nknn_fpr, knn_tpr, a =  roc_curve(y_test, knn_probs)","8dae6149":"fig_auc = go.Figure()\n\nfig_auc.add_trace(go.Scatter(x=ns_fpr, y=ns_tpr, mode='lines',line_dash='dot', \n                             name = 'No Skill (AUC = 0.5)'))\n\nfig_auc.add_trace(go.Scatter(x=rfr_fpr, y=rfr_tpr, mode='lines', \n                             name=('RFC (AUC = %f)' %rfc_auc)))\n\nfig_auc.add_trace(go.Scatter(x=knn_fpr, y=knn_tpr, mode='lines', \n                             name=('KNN (AUC = %f)' %knn_auc)))\n\nfig_auc.update_layout(xaxis_title = 'False Positive Rate', \n                      yaxis_title='True Positive Rate', \n                      width=700, height=500)\n\nfig_auc.show()","2a0e091d":"models = [('RFC', rfc_accuracy, rfc_cv_score), \n          ('KNN', knn_accuracy, knn_cv_score)]\n\nmodel_comparasion = pd.DataFrame(models, columns=['Model', 'Accuracy Score', 'CV Score'])\n\nmodel_comparasion.head()","ebebc1fb":"### K-Nearest Neighbors","ee53b460":"## Sex","0fd56408":"### Evaluating AUC score","70271d18":"### Comparing models with AUC","4234893f":"## Creatinine phosphokinase\n\nThe Creatine phosphokinase (CPK) is an enzyme found mainly in the heart, brain, and skeletal muscle and may indicate some type of injury to these muscles\n\n**CPK normal value:** \n\n- 10 - 120 micrograms per liter (mcg\/L)\n\n\n**Abnormal values can indicates:**\n- Brain injury or stroke\n- Convulsions\n- Delirium tremens\n- Dermatomyositis or polymyositis\n- Electric shock\n- Heart attack*\n- Inflammation of the heart muscle (myocarditis)\n- Lung tissue death (pulmonary infarction)\n- Muscular dystrophies\n- Myopathy\n\n\nFor more information acess: [CPK](https:\/\/www.ucsfbenioffchildrens.org\/tests\/003503.html)","b0b5782c":"###  Random Forest Classifier","5f7245fc":"## With AUC","ca340bdf":"## Death event","7a6c0bfd":"## Defining variables","e77e6615":"## Ejection fraction\nEjection fraction is a measurement of the percentage of blood leaving your heart each time it contracts.\n\nThe ejection fraction is usually measured only in the left ventricle (LV).\n\n- An LV ejection fraction of 55 percent or higher is considered normal.\n- An LV ejection fraction of 50 percent or lower is considered reduced.\n- An LV ejection fraction between 50 and 55 percent is usually considered \"borderline.\"\"\n\nSome things that may cause a reduced ejection fraction are:\n\n- Weakness of the heart muscle, such as cardiomyopathy\n- Heart attack that damaged the heart muscle\n- Heart valve problems\n- Long-term, uncontrolled high blood pressure\n\nFor more information acess: [Ejection fraction](https:\/\/www.mayoclinic.org\/ejection-fraction\/expert-answers\/faq-20058286#:~:text=The%20ejection%20fraction%20is%20usually,or%20higher%20is%20considered%20normal.)","eea6aaaa":"## Age","fbd802cc":"### Defining False Positive and True Positive rates","7ce6a4d9":"## Serum creatinine\n\nCan indicate whether your kidneys are working properly. \n\n**Normal range:** 0.7 to 1.2 (mg\/dL)\n\n[\"Beware the rising creatinine level\"](https:\/\/doi.org\/10.1054\/jcaf.2003.10)","a08cfbb5":"## With DataFrame","5b07faf5":"## Platelets\n\nPlatelets are parts of the blood that helps the blood clot.\n\n**Normal number of platelets**: 150.000 to 400.000\n\n[\"Platelets and Cardiovascular Disease\"](https:\/\/www.ahajournals.org\/doi\/pdf\/10.1161\/01.CIR.0000086897.15588.4B)","dd85253b":"## Serum sodium\n\nA sodium blood test is a routine test that allows your doctor to see how much sodium is in your blood. \n\n**Normal range:**  135 to 145 mEq\/L","50183f4a":"# Libraries","c14ef136":"## Correlation","6e62d0b5":"# Data Analysis","c62ca0a9":"<h1><center>Heart Failure Prediction<\/center><\/h1>\n<h3><center>\"I'm tired of working\"<\/center><\/h3>\n<center><img src='https:\/\/sinahealthtour.com\/wp-content\/uploads\/2019\/07\/Untitled-1.jpg'><\/center>\n\n\n# Summary\n\n- [Libraries](#Libraries)\n\n- [Data](#Data)\n\n- [Data Analysis](#Data-Analysis)\n\n- [Data Preparation](#Data-preparation)\n\n- [Machine Learning Models](#Machine-Learning-Models)\n\n- [Comparing models](#Comparing-models)","124fec09":"## Anemia \n\nA condition in which the blood doesn't have enough healthy red blood cells.\n\n[\"Anemia, or a low hemoglobin level in the blood, is often linked to heart disease because the heart has to work harder to pump more blood and oxygen through the body.\"](https:\/\/www.everydayhealth.com\/heart-health\/anemia.aspx#:~:text=Anemia%27s%20Impact%20on%20Heart%20Health&text=People%20who%20are%20anemic%20are,compared%20to%20those%20without%20anemia.)","f8e56b22":"## Death event - Pairplot\n","c6e2fabd":"# Data preparation","d384f8b4":"# Comparing models","af2c4b22":"## High blood pressure\n\nIs a common condition in which the long-term force of the blood against your artery walls is high enough that it may eventually cause health problems, such as heart disease.\n\n[\"How High Blood Pressure Can Lead to Heart Failure\"](https:\/\/www.heart.org\/en\/health-topics\/high-blood-pressure\/health-threats-from-high-blood-pressure\/how-high-blood-pressure-can-lead-to-heart-failure#:~:text=Heart%20failure%2C%20a%20condition%20where,risk%20of%20developing%20heart%20failure.)","2d153208":"## Feature selection\n\nI'll use two differents tests to select six features for our models:\n\n- ANOVA test for numerical features\n\n- Chi2 test for categorical features","2c6c153a":"## Time","7faab68e":"## Standardzing the data","b298053f":"## Diabetes\n\nIs a chronic, metabolic disease characterized by elevated levels of blood glucose (or blood sugar), which leads over time to serious damage to the heart, blood vessels, eyes, kidneys and nerves. \n\n[\"Diabetes and heart failure are linked; treatment should be too.\"](https:\/\/www.heart.org\/en\/news\/2019\/06\/06\/diabetes-and-heart-failure-are-linked-treatment-should-be-too#:~:text=People%20who%20have%20Type%202,a%20risk%20factor%20for%20diabetes.)","2560f9d6":"### Defining probabilities","667e0aed":"## Smoking","949bb2d9":"# Machine Learning Models","9ba69da6":"# Data"}}