{"cell_type":{"01063245":"code","5abfdf5a":"code","6ae5ebeb":"code","84920285":"code","88dd068d":"code","2101aef4":"code","1e680943":"code","941275c7":"code","9743e98c":"code","2d2e3e06":"code","ede49cf8":"code","7829dce3":"code","a7f6a137":"code","5655cfb5":"code","cce12b43":"code","6eb24402":"code","56eb6991":"code","4af1098f":"code","c239561c":"code","5bb38cf2":"code","9031b92d":"code","400feded":"code","761da1b4":"code","0a7365bc":"code","bf8c2d0e":"code","182c8d6f":"code","dcaa7b98":"code","9fcd546a":"code","21cacff5":"code","6efd6a0f":"code","7a922dba":"markdown","c28ae6bf":"markdown","56d32b90":"markdown","45e58e1b":"markdown","465fe96c":"markdown","1e8f448f":"markdown","09f8ae5a":"markdown","27fdb26d":"markdown","5080a7d1":"markdown","a3d47b18":"markdown","e5a6c1ec":"markdown","86af6731":"markdown"},"source":{"01063245":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5abfdf5a":"train_data = pd.read_csv('\/kaggle\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv')\ntrain_data","6ae5ebeb":"train_data.describe()","84920285":"train_data.info()","88dd068d":"from pandas_profiling import ProfileReport\n","2101aef4":"report = ProfileReport(train_data)\n","1e680943":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","941275c7":"targets = train_data.target.value_counts()\n\nplt.figure(figsize=[3,4])\nsns.barplot(x= targets.index, y= targets.values)\nplt.show()","9743e98c":"features_to_plot = [\"city_development_index\", \"training_hours\"]\nplt.figure(figsize = [15, 17])\nn = 1\nfor f in features_to_plot:\n    plt.subplot(4,2,n)\n    sns.histplot(x= f, hue = \"target\", alpha = 1, multiple = 'stack', data = train_data, bins= 10) \n    plt.title(\"ditsebution of target  by {} \".format(f))\n    plt.legend(['Not Looking for a job change', ' Looking for a job change'])\n    sns.despine()\n    n+=1\nplt.tight_layout()\nplt.show()","2d2e3e06":"to_plot = ['relevent_experience', 'enrolled_university', 'education_level','major_discipline', 'company_size', 'company_type', 'last_new_job']\n\nplt.figure(figsize = [15, 17])\nn = 1\nfor f in to_plot:\n    plt.subplot(4,2,n)\n    sns.countplot(x= train_data[f][train_data.target == 1], alpha = 1) \n    plt.title(\"countplot of people looking for a job change by {}\".format(f))\n    sns.despine()\n    n+=1\nplt.tight_layout()\nplt.show()","ede49cf8":"print(train_data.isnull().values.any())","7829dce3":"print(train_data.isnull().sum())","a7f6a137":"def cleanNaN(dfA):\n  for col in dfA.columns.to_list():\n    if str(dfA[col].dtype) == 'object':\n        dfA[col] = dfA[col].fillna('unknown')\n    else:\n        dfA[col] = dfA[col].fillna(dfA.mean())\n  return dfA","5655cfb5":"train_data = cleanNaN(train_data)\nprint(train_data.isnull().sum())","cce12b43":"print(train_data.target.value_counts())","6eb24402":"stayed = train_data[train_data.target == 1]\nleft   = train_data[train_data.target == 0].sample(4800)\ntrain_data = pd.concat([stayed, left], axis= 0)\nprint(train_data.shape)","56eb6991":"print(train_data.target.value_counts())\n","4af1098f":"from sklearn import preprocessing","c239561c":"categorical = ['city','relevent_experience','gender' , 'enrolled_university', 'education_level','major_discipline', 'last_new_job', 'experience', 'company_size', 'company_type']\nencoder = preprocessing.LabelEncoder()\nfor f in categorical:\n    train_data[f] = encoder.fit_transform(train_data[f])\ntrain_data.info()","5bb38cf2":"print(train_data.isnull().sum())","9031b92d":"from sklearn.model_selection import train_test_split","400feded":"train = train_data.drop(columns=['enrollee_id','target'])\ntarget = train_data.target","761da1b4":"scaler = preprocessing.MinMaxScaler()","0a7365bc":"train = scaler.fit_transform(train.to_numpy())","bf8c2d0e":"X_train,X_test, Y_train, Y_test = train_test_split(train, target, test_size=0.1, random_state=9, shuffle = True )","182c8d6f":"from sklearn.linear_model import LogisticRegression","dcaa7b98":"regressor = LogisticRegression()","9fcd546a":"regressor.fit(X_train, Y_train)\npredictions= regressor.predict(X_test)\n","21cacff5":"from sklearn.metrics import roc_auc_score,f1_score,accuracy_score,classification_report\nprint(f\"Roc-Auc score: {roc_auc_score(Y_test,predictions)},f1_score: {f1_score(Y_test,predictions)},Accuracy: {accuracy_score(Y_test,predictions)}\")\nprint(classification_report(Y_test,predictions))","6efd6a0f":"from sklearn.model_selection import cross_val_score,StratifiedKFold        # lets validate our val_accuracy\nskfold = StratifiedKFold(n_splits=3, random_state=42,shuffle=True)\nscores=cross_val_score(regressor,X_test,Y_test,cv=skfold)\nprint(\"best score:{:.3f}\".format(np.mean(scores)))    ","7a922dba":"In this plot we can see that our data is unbalanced, the number of people willing to leave thier jobs is way smaller than the number of people not looking to change jobs.","c28ae6bf":"**Spliting our dataset**","56d32b90":"# Handling missing values","45e58e1b":"# balancig our dataset","465fe96c":"# Let's begin by loading our dataset and see how it looks","1e8f448f":"# Plotting our data ","09f8ae5a":"# Final thoughts\n\n- People with relevant experience are more willing to take the new job.\n- People who never enrolled in a college class are more willing to take the new job.\n- By far Graduates, STEM majors and people working in a Pvt ltd are more willing to find a new job.\n\n\nThank you for reading this notebook, please upvote it and leave a comment.","27fdb26d":"**handling categorical features**","5080a7d1":"# Preparing our data for modeling","a3d47b18":"**plotting the number of people looking for a job change against evry feature**","e5a6c1ec":"Here we can see that that people living in a city with a development index around 0.65 and 0.9 are more willing to find a new job. (fig 1)\n\nwe can see also that people with less training hours are more willing to change thier jobs. (fig 2)","86af6731":"# Modle building"}}