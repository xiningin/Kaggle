{"cell_type":{"0349569e":"code","57b37fcf":"code","54259e22":"code","eeec3d06":"code","59c4aaf3":"code","fad46fa6":"code","7a1596aa":"code","224c8d27":"code","4420dd47":"code","99394296":"code","92eb0c1a":"code","3e4d486a":"code","84b29659":"code","a8f2da8e":"code","1ba125e2":"code","780eb90e":"code","e835da5b":"code","6b198990":"code","d1b606ef":"code","432bd448":"code","a1f66c54":"code","19bc134e":"code","3c197671":"code","f89cec7f":"code","b771a5ab":"code","6dd7f945":"code","42f594ea":"code","84766b9d":"code","66c6a8d7":"code","8688633d":"code","557a89be":"code","78c16f83":"code","aeedc0fd":"code","70c07338":"code","a604e478":"code","bae9f4b6":"code","9171a56b":"code","fc88fadf":"code","5e3e2c2c":"code","30f7e8ab":"markdown","887a933d":"markdown","d7094f80":"markdown","ae4cd5b5":"markdown","6f614006":"markdown","1acec269":"markdown","2d8ba3fc":"markdown","f04875a7":"markdown","c18fadff":"markdown","0e720830":"markdown","6df73ec8":"markdown","252c4b96":"markdown","b7e2e6b0":"markdown","4e0e438e":"markdown","ed31ffa7":"markdown","d1cc3efe":"markdown","04ca6701":"markdown","0b1bd9f0":"markdown","19dccc81":"markdown","7f1809f9":"markdown","f27bc23f":"markdown","bc0acf6d":"markdown","d0db07b1":"markdown","cc7e2e25":"markdown","81cf8f16":"markdown","cee99b6f":"markdown","4e054dfd":"markdown"},"source":{"0349569e":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","57b37fcf":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n!pip install factor_analyzer\nfrom factor_analyzer import FactorAnalyzer as Fa","54259e22":"data=pd.read_csv(\"\/kaggle\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")","eeec3d06":"data.head()\ndf=data.copy()\ndf","59c4aaf3":"serial_num = pd.RangeIndex(start=1, stop=len(df.index) + 1, step=1)\ndf['No.'] = serial_num\ndf","fad46fa6":"df=df.iloc[:,[12,0,1,2,3,4,5,6,7,8,9,10,11]]\ndf","7a1596aa":"df_c=df.copy()\nfrom sklearn.preprocessing import MinMaxScaler\nmm=MinMaxScaler()\nmm.fit(df_c.iloc[:,1:])\nmm_result=mm.transform(df_c.iloc[:,1:])\ndf_mm=pd.DataFrame(mm_result)\ndf_mm","224c8d27":"dfno=df[\"No.\"]\ndf_n=pd.concat([dfno,df_mm], axis=1)\ndf_n","4420dd47":"list=[\"No.\",\"fixed acidity\",\"volatile acidity\",\"citric acid\",\"residual sugar\",\"chlorides\",\"free sulfur dioxide\",\n          \"total sulfur dioxide\",\"density\",\"pH\",\"sulphates\",\"alcohol\",\"quality\"]\ndf_n.columns=list\ndf_n","99394296":"fa = Fa(n_factors=3, rotation=None)\nfa.fit(df_n.iloc[:,1:])\nfactor_analyzer_result=pd.DataFrame(fa.loadings_)\nfa_columns_list=[\"factor_1\", \"factor_2\", \"factor_3\"]\nfactor_analyzer_result.columns=fa_columns_list\nfact_check=factor_analyzer_result.T\nfact_check","92eb0c1a":"fc_list=[\"fixed acidity\",\"volatile acidity\",\"citric acid\",\"residual sugar\",\"chlorides\",\"free sulfur dioxide\",\n          \"total sulfur dioxide\",\"density\",\"pH\",\"sulphates\",\"alcohol\",\"quality\"]\nfact_check.columns=fc_list\nfact_check","3e4d486a":"import seaborn as sns\nsns.scatterplot(data=df,x=\"fixed acidity\", y=\"free sulfur dioxide\", hue=\"fixed acidity\")","84b29659":"sns.scatterplot(data=df,x=\"volatile acidity\", y=\"free sulfur dioxide\", hue=\"volatile acidity\")","a8f2da8e":"df.corr()","1ba125e2":"sns.scatterplot(data=df,x=\"quality\", y=\"alcohol\", hue=\"quality\")","780eb90e":"sns.scatterplot(data=df,x=\"volatile acidity\", y=\"alcohol\", hue=\"quality\")","e835da5b":"x=df.iloc[:,[1,2,6]]\nx","6b198990":"y=data.iloc[:,[11]]\ny","d1b606ef":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=123)","432bd448":"import xgboost as xgb\nxgbm = xgb.XGBRegressor(max_depth=50)\nxgbm.fit(x_train, y_train)\nmodel_score=xgbm.score(x_train, y_train)\nif model_score < 0.5 :\n    print(\"Score:\",model_score,\"That means linear Regression model doesn't work.\")\nelse:\n    print(\"Score:\",model_score,\"That means linear Regression model works.\")","a1f66c54":"y_pred=xgbm.predict(x_test)","19bc134e":"prediction=pd.DataFrame(np.round(y_pred))\npred_column=[\"prediction\"]\nprediction.columns=pred_column\ny_test=pd.DataFrame(y_test)\ntest_column=[\"Correct Label\"]\ny_test.columns=test_column\ny_test=y_test.reset_index()\ny_test=y_test.iloc[:,[1]]\nsubmit_df=pd.concat([y_test,prediction], axis=1)\nsubmit_df","3c197671":"submit_df","f89cec7f":"x=np.array(submit_df.iloc[:,0])\ny=np.array(submit_df.iloc[:,1])\nfig, ax = plt.subplots(figsize = (10,5))\nax.scatter(x,y, label =\"correct label and prediction\")\nx_dot=np.arange(50)\ny_dot=np.arange(50)\nax.plot(x_dot,y_dot)\nax.set(xlabel ='correct label', ylabel='prediction', xlim=(2,10), ylim=(2,10))\nax.legend()","b771a5ab":"x=np.array(df_c.iloc[:,[1,2,3,4,5,6,7,8,9,10,11]])\ny=np.array(df_c.iloc[:,[12]])\nfrom sklearn.model_selection import train_test_split\nx_train2,x_test2,y_train2,y_test2=train_test_split(x,y,test_size=0.3,random_state=123)","6dd7f945":"import xgboost as xgb\nxgbm = xgb.XGBRegressor(max_depth=50)\nxgbm.fit(x_train2, y_train2)\nmodel_score=xgbm.score(x_train2, y_train2)\nif model_score < 0.5 :\n    print(\"Score:\",model_score,\"That means linear Regression model doesn't work.\")\nelse:\n    print(\"Score:\",model_score,\"That means linear Regression model works.\")","42f594ea":"y_pred2=xgbm.predict(x_test2)","84766b9d":"prediction=pd.DataFrame(np.round(y_pred2))\npred_column=[\"prediction\"]\nprediction.columns=pred_column\ny_test2=pd.DataFrame(y_test2)\ntest_column=[\"Correct Label\"]\ny_test2.columns=test_column\ny_test2=y_test2.reset_index()\ny_test2=y_test2.iloc[:,[1]]\nsubmit_df2=pd.concat([y_test2,prediction], axis=1)\nsubmit_df2","66c6a8d7":"x=np.array(submit_df2.iloc[:,0])\ny=np.array(submit_df2.iloc[:,1])\nfig, ax = plt.subplots(figsize = (10,5))\nax.scatter(x,y, label =\"correct label and prediction\")\nx_dot=np.arange(50)\ny_dot=np.arange(50)\nax.plot(x_dot,y_dot)\nax.set(xlabel ='correct label', ylabel='prediction', xlim=(2,10), ylim=(2,10))\nax.legend()","8688633d":"#import libraries\nfrom tensorflow import keras as kr\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,BatchNormalization,Activation,Dropout\nfrom tensorflow.keras.optimizers import Adam","557a89be":"x=np.array(df_c.iloc[:,[1,2,3,4,5,6,7,8,9,10,11]])\ny=np.array(df_c.iloc[:,[12]])\nfrom sklearn.model_selection import train_test_split\nx_train3,x_test3,y_train3,y_test3=train_test_split(x,y,test_size=0.3,random_state=123)","78c16f83":"np.unique(y_train3)","aeedc0fd":"x_train = x_train3.astype('float32')\/255\ny_train = y_train3.astype('float32')\nx_test = x_test3.astype('float32')\/255\ny_train = kr.utils.to_categorical(y_train3, 9)\ny_test  = kr.utils.to_categorical(y_test3,9)","70c07338":"model3 = Sequential()\nmodel3.add(Dense(512, input_dim=x_train3.shape[1], activation='relu'))\nmodel3.add(Dense(256, activation='relu'))\nmodel3.add(Dense(128, activation='relu'))\nmodel3.add(Dense(64, activation='relu'))\nmodel3.add(Dense(32, activation='relu'))\nmodel3.add(Dropout(0.5))\nmodel3.add(Dense(9, activation='sigmoid'))\nmodel3.compile(optimizer='adam',loss='categorical_crossentropy', metrics=['accuracy'])\nmodel3.summary()","a604e478":"#model fitting\ndl_result1=model3.fit(x_train, y_train,batch_size=50, epochs=100)","bae9f4b6":"#Evaluate the deep learning model by using one metric, accuracy.\nmetrics = ['accuracy']\n#show the evaluation result by using matoplot.\nplt.figure(figsize=(10, 5))\n#Use \"For Loop\".\nfor i in range(len(metrics)):\n    metric = metrics[i]\n    #set subplots to show the result\n    plt.subplot(1, 2, i+1)\n    #Titles of subplots is \"accuracy\"\n    plt.title(metric) \n    plt_result1 = dl_result1.history[metric] \n    #plot it\n    plt.plot(plt_result1, label='Deep Learning model') \n    plt.legend() \nplt.show()","9171a56b":"prediction=model3.predict(x_test)","fc88fadf":"np.argmax(prediction[1])","5e3e2c2c":"np.argmax(y_test[1])","30f7e8ab":"### Ummm...wrong thought.","887a933d":"### Now there are 3 factors. We have 3 types of wine.\n### 1. \"fixed acidity x factor1\" is high.\n### 2. \"volatile acidity x factor2\" is high. \"free sulfur dioxide x factor2\" is mid.\n### 3. free sulfur dioxide x factor3\" is high.","d7094f80":"## I wanna change the order of df.columns","ae4cd5b5":"## So I wanna pick out 3 valuee, <font color=\"red\">\"fixed acidity\",\"volatile acidity\",\"free sulfur dioxide\"<\/font>.","6f614006":"## Just wanna try \"factor analyzer\" and stuff like that.","1acec269":"## Load Wine Dataset into Factor Analyzer and show the loading result  ","2d8ba3fc":"## I guess scales of each column are different. So I wanna scale them by using MinMax Scaler. ","f04875a7":"## Almost, but I can't say perfect.","c18fadff":"## Split data and adopt hold-out method","0e720830":"### Thanks for reading my notebook. I just wanted to try Factor Analyzer and I could make it!","6df73ec8":"###  BTW, can deep learning model solve this theme? I'm not sure, but try it.","252c4b96":"<HR>","b7e2e6b0":"## Now is the time for Machine Learning","4e0e438e":"## Name columns","ed31ffa7":"## This dataset doesn's have name of index. So I wanna name it.","d1cc3efe":"# Those works! ","04ca6701":"## Load Wine Dataset","0b1bd9f0":"### It's better a little bit, but it's still a wild guess.","19dccc81":"<pre>\nNow I know 3 things.  \n1. \"fixed acidity x factor1\" is high.\n2. \"volatile acidity x factor2\" is high. \"free sulfur dioxide x factor2\" is mid.\n3. free sulfur dioxide x factor3\" is high.\n<\/pre>","7f1809f9":"### Thanks again. I just wanted to try Factor Analyzer. In the view point, I could make it!","f27bc23f":"### By the way, I'm a bit interested in the column \"quality\".\n### I wanna check correlation with quality by using corr() function.","bc0acf6d":"## import libraries and install factor_analyzer by using pip","d0db07b1":"\n### The correlation between \"quality\" and \"alcohol\" is 0.47. ","cc7e2e25":"Ummm...deep learning model doesn't work well in this case.\nHowever I wanna check ","81cf8f16":"# Could I predict the grade of wine by using the 3 factors?","cee99b6f":"\n### Better than the first model?\n<HR>","4e054dfd":"## Now I could get info that some values are over 0.6 or something. So I wanna plot the result and prove the factor works visually."}}