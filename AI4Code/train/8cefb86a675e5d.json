{"cell_type":{"1c932df7":"code","0fc90f17":"code","1993cace":"code","9ec5a445":"code","2ac690bc":"code","ef3f621c":"code","bf66d94f":"code","3250c09f":"code","3af2756e":"code","5f81d215":"code","67d8302a":"code","ea027293":"code","af7232f3":"code","15d088df":"code","01664da1":"code","65540663":"code","cc86c487":"code","a7036ca3":"code","35c615c0":"code","590ff2a6":"code","e4010895":"code","a71fd983":"code","2de6e7c7":"code","f142ac27":"code","94c8f012":"markdown","fd2c1a3a":"markdown","0ae56b58":"markdown","854a7ed5":"markdown","3ea0c067":"markdown","91e26485":"markdown","152b9010":"markdown","198e9039":"markdown","8e1defd4":"markdown","ec0c98ab":"markdown","1e7edb21":"markdown","78e31ce9":"markdown","d2cfb4c5":"markdown","8f9e6c1d":"markdown","211c20e5":"markdown","846548fa":"markdown","82c9cd83":"markdown"},"source":{"1c932df7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0fc90f17":"import sqlite3\nimport pandas as pd \nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt","1993cace":"# Create your connection.\ncnx = sqlite3.connect('..\/input\/soccer\/database.sqlite')\ndf = pd.read_sql_query(\"SELECT * FROM Player_Attributes\", cnx)","9ec5a445":"df.head()","2ac690bc":"df.shape","ef3f621c":"df.columns","bf66d94f":"features = [\n       'potential', 'crossing', 'finishing', 'heading_accuracy',\n       'short_passing', 'volleys', 'dribbling', 'curve', 'free_kick_accuracy',\n       'long_passing', 'ball_control', 'acceleration', 'sprint_speed',\n       'agility', 'reactions', 'balance', 'shot_power', 'jumping', 'stamina',\n       'strength', 'long_shots', 'aggression', 'interceptions', 'positioning',\n       'vision', 'penalties', 'marking', 'standing_tackle', 'sliding_tackle',\n       'gk_diving', 'gk_handling', 'gk_kicking', 'gk_positioning',\n       'gk_reflexes']","3250c09f":"target = ['overall_rating']","3af2756e":"df = df.dropna()","5f81d215":"X = df[features]","67d8302a":"y = df[target]","ea027293":"X.iloc[2]","af7232f3":"y","15d088df":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=324)","01664da1":"regressor = LinearRegression()\nregressor.fit(X_train, y_train)","65540663":"y_prediction = regressor.predict(X_test)\ny_prediction","cc86c487":"y_test.describe()","a7036ca3":"RMSE = sqrt(mean_squared_error(y_true = y_test, y_pred = y_prediction))","35c615c0":"print(RMSE)","590ff2a6":"regressor = DecisionTreeRegressor(max_depth=20)\nregressor.fit(X_train, y_train)","e4010895":"y_prediction = regressor.predict(X_test)\ny_prediction","a71fd983":"y_test.describe()","2de6e7c7":"RMSE = sqrt(mean_squared_error(y_true = y_test, y_pred = y_prediction))","f142ac27":"print(RMSE)","94c8f012":"#  **~ Decision Tree Regressor: Fit a new regression model to the training set**","fd2c1a3a":"# **~ Linear Regression: Fit a model to the training set**","0ae56b58":"**Let us also display our target values:**","854a7ed5":"**Specifying the Prediction Target**","3ea0c067":"# Reading data from the Database into Pandas.","91e26485":"**Declaring the Columns which I have to use as Features.**","152b9010":"# Split the Dataset into Training and Test Datasets","198e9039":"**For comparision: What is the mean of the expected target value in test set ?**","8e1defd4":"# Evaluate Linear Regression Accuracy using Root Mean Square Error","ec0c98ab":"**Performing Prediction using Linear Regression Model**","1e7edb21":"# Importing Required Libraries.","78e31ce9":"**Extract Features and Target ('overall_rating') Values into Separate Dataframes**","d2cfb4c5":"# Data Cleaning.","8f9e6c1d":"**Inspecting a typical row from our features:**","211c20e5":"**Evaluate Decision Tree Regression Accuracy using Root Mean Square Error**","846548fa":"**What is the mean of the expected target value in test set ?**","82c9cd83":"**Perform Prediction using Decision Tree Regressor**"}}