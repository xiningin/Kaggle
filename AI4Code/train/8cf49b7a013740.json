{"cell_type":{"d5f597dd":"code","0cd620ab":"code","e5748b91":"code","b93308e5":"code","d68ccb02":"code","db4f1bcb":"code","6ce1a4ca":"markdown","c874410e":"markdown","6d351177":"markdown","a5ba2d95":"markdown"},"source":{"d5f597dd":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom collections import Counter\nfrom wordcloud import WordCloud, STOPWORDS\nimport os\nimport re","0cd620ab":"OTHER_DATA_PATH = '..\/input\/cityofla\/CityofLA\/Additional data'\nsample_csv = pd.read_csv(OTHER_DATA_PATH+'\/'+'sample job class export template.csv')\nsample_csv.head()","e5748b91":"# Helpful Functions\n\ndef append_data(list_name, data_to_append):\n    if data_to_append:\n        list_name.append(data_to_append)\n    else:\n        list_name.append('')\n    return None\n\ndef get_job_class_no(file_lines):\n    job_class_no = re.search('Class Code (\\d+)', file_lines)\n    if job_class_no:\n        job_class_nos.append(job_class_no.group(1))\n    else:\n        job_class_nos.append('')\n    return None\n\ndef get_job_duty(file_lines):\n    job_duty = re.search('DUTIES(\\W+)(.*\\n)', file_lines)\n    if job_duty:\n        try:\n            job_duties.append(str(job_duty.group(0).split('\\n')[2]))\n        except Exception as e:\n            job_duty = re.search('Duties include:[^.]*', file_lines)\n            job_duties.append(job_duty.group(0).split(': ')[1])\n    else:\n        job_duties.append('')\n    return None\n\ndef get_open_dates(file_lines):\n    open_date = re.search('Open Date:[^.](.*\\n)', file_lines)\n    if open_date:\n        open_dates.append(open_date.group(0).split(':')[1].lstrip().rstrip('\\n'))\n    else:\n        open_dates.append('')\n    return None\n","b93308e5":"DATA_PATH = '..\/input\/cityofla\/CityofLA\/Job Bulletins'\n\nstructured_data = pd.DataFrame()\ncol_names = ['FILE_NAMES', 'JOB_TITLE', 'JOB_CLASS_NO', 'JOB_DUTIES']\n\njob_titles = []\nfile_names = []\njob_class_nos = []\njob_duties = []\nopen_dates = []\n\nfor index, file_name in enumerate(os.listdir(DATA_PATH)):\n    with open(DATA_PATH+'\/'+file_name, encoding = \"ISO-8859-1\") as f:\n        file_lines = f.read()\n        file_names.append(file_name)\n        job_title = file_lines.split('\\n')[0]\n        append_data(job_titles, job_title)\n        get_job_class_no(file_lines)       \n        get_job_duty(file_lines)        \n        get_open_dates(file_lines) \n#         get_annual_salary(file_lines)","d68ccb02":"def make_data():\n    structured_data = pd.DataFrame()\n    structured_data['FILE_NAMES'] = file_names\n    structured_data['JOB_TITLE'] = job_titles\n    structured_data['JOB_CLASS_NO'] = job_class_nos\n    structured_data['JOB_DUTIES'] = job_duties\n    structured_data['OPEN_DATES'] = open_dates\n    return structured_data","db4f1bcb":"structured_data = make_data()\nstructured_data.head()","6ce1a4ca":"### Generating File","c874410e":"\n### This is a work in progress and more will come here!!","6d351177":"This is the sample file containing the a sample of the structured data.","a5ba2d95":"### Objective\nThis notebook is an initiative to make a structured csv file from the unstructured data (text files) using regex.<br><br>\n<u><b>The task here is:<\/b><br><\/u>\n    - To find relevant information from different text files using text processing methods (like regex).\n    - And then arranging them in an efficient way into csv file.\n    \n<b>Following information has been included in the structured data:<\/b><br>\n1) FILE_NAMES<br>\n2) JOB_TITLE <br>\n3) JOB_CLASS_NO <br>\n4) JOB_DUTIES<br>\n5) OPEN_DATES<br>"}}