{"cell_type":{"d76cb95f":"code","854531e9":"code","efaf5047":"code","e8abb45d":"code","be0c615a":"code","b563f557":"code","27373c5e":"code","05809d0d":"code","bdc106cd":"code","d8cf4fee":"code","39a103c2":"markdown","18e72ccb":"markdown","8a83c996":"markdown","acbd326e":"markdown","ec29ef58":"markdown","0bc088db":"markdown"},"source":{"d76cb95f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#safe\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","854531e9":"nyc_data = pd.read_csv('\/kaggle\/input\/new-york-city-airbnb-open-data\/listings.csv')\n\nnyc_df = pd.read_csv('..\/input\/d\/dgomonov\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\n\n","efaf5047":"features = ['id', 'name', 'host_id', 'host_name', 'neighbourhood_group_cleansed', 'neighbourhood_cleansed', 'latitude', 'longitude', 'room_type', 'price', 'minimum_nights', 'number_of_reviews', 'reviews_per_month', 'calculated_host_listings_count', 'availability_365']\nnyc_data_filtered = nyc_data[features]\n\nnyc_df_filtered = nyc_df[features]\n","e8abb45d":"# Missing Values\nnyc_data_filtered.isnull().any()","be0c615a":"nyc_data_filtered.isnull().any()","b563f557":"sizes = nyc_data_filtered['neighbourhood_group_cleansed'].value_counts()\nlabels = nyc_data_filtered['neighbourhood_group_cleansed'].value_counts().index\nplt.figure(figsize=(16,9))\nplt.title('Neighbourhood Group Cleansed')\nplt.pie(x=sizes, labels=labels, shadow=True, autopct='%1.1f%%')\nplt.show()","27373c5e":"x = nyc_data_filtered['longitude']\ny = nyc_data_filtered['latitude']\nhue = nyc_data_filtered['neighbourhood_group_cleansed']\nplt.figure(figsize=(16,9))\nplt.title('Map of the Neighbourhood Group Cleansed')\nsns.scatterplot(x=x, y=y,hue=hue)\nplt.show()","05809d0d":"sns.set_theme(style=\"darkgrid\")\nplt.figure(figsize=(16,8))\nplt.title(\"Room Type\")\nsns.countplot(x='room_type', data=nyc_data_filtered, palette=\"muted\")\nplt.show()","bdc106cd":"sns.set_theme(style=\"darkgrid\")\nplt.figure(figsize=(16,8))\nplt.title(\"Room Type on Neighbourhood Group\")\nsns.countplot(x='neighbourhood_group_cleansed', hue='room_type', data=nyc_data_filtered, palette=\"muted\")\nplt.show()","d8cf4fee":"plt.figure(figsize=(13,7))\n\nplt.title(\"Map of Price Distribution\")\n\nax = nyc_data[nyc_data.price<500].plot(kind='scatter',x='longitude',y='latitude',label='availability_365',c='price', cmap=plt.get_cmap('jet'),colorbar=True,alpha=0.4)\n\nax.legend()\n\nplt.ioff()\n\nplt.show()","39a103c2":"As we can see from the pie chart above, Airbnb listings in New York are close to Manhattan.","18e72ccb":"\n\n    #### Room Type\n\nLet's see the type of room.\n","8a83c996":"### Loading the Data","acbd326e":"\nExploring and Visualizing\n\nLet's explore and visualize our filtered data, so we can better understand the correlation between the features.\n\n    #### Neighbourhood Group Cleansed\n","ec29ef58":"\u2014 Neighbourhood Group Price Distribution","0bc088db":"Let's see now, the room type for a neighbourhood group.\n"}}