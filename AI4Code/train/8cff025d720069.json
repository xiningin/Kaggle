{"cell_type":{"443a9a5b":"code","fd484776":"code","d9e42f27":"code","79f4c080":"code","526dd387":"code","df5bcdf1":"code","95c21dc1":"code","75670ea7":"code","34f339b3":"code","ca29bb2f":"code","1705bbfd":"code","ad2c7805":"code","a951bcd9":"code","a98390e1":"code","b0daa538":"markdown","8014a374":"markdown","3804ca87":"markdown","e4ad33f4":"markdown","712480a6":"markdown","d037e4ff":"markdown"},"source":{"443a9a5b":"import warnings\nwarnings.filterwarnings('ignore')\nimport os\nimport gc\nimport pickle\nimport numpy as np\nimport pandas as pd\nimport random as rn\nimport matplotlib.pyplot as plt\n\nfrom tqdm import tqdm\nfrom datetime import datetime","fd484776":"test = pd.read_csv('..\/input\/ashrae-energy-prediction\/test.csv', index_col=0, parse_dates = ['timestamp'])\nbuilding = pd.read_csv('..\/input\/ashrae-energy-prediction\/building_metadata.csv', usecols=['site_id', 'building_id'])","d9e42f27":"test.describe()","79f4c080":"test = test.merge(building, left_on = \"building_id\", right_on = \"building_id\", how = \"left\")","526dd387":"submission_base = pd.read_csv('..\/input\/ashrae-kfold-lightgbm-without-leak-1-08\/submission.csv', index_col=0)","df5bcdf1":"submission = submission_base.copy()","95c21dc1":"submission.describe()","75670ea7":"site_0 = pd.read_csv('..\/input\/new-ucf-starter-kernel\/submission_ucf_replaced.csv', index_col=0)\nsubmission.loc[test[test['site_id']==0].index, 'meter_reading'] = site_0['meter_reading']\ndel site_0\ngc.collect()","34f339b3":"with open('..\/usr\/lib\/ucl_data_leakage_episode_2\/site1.pkl', 'rb') as f:\n    site_1 = pickle.load(f)\nsite_1 = site_1[site_1['timestamp'].dt.year > 2016]","ca29bb2f":"t = test[['building_id', 'meter', 'timestamp']]\nt['row_id'] = t.index\nsite_1 = site_1.merge(t, left_on = ['building_id', 'meter', 'timestamp'], right_on = ['building_id', 'meter', 'timestamp'], how = \"left\")\nsite_1 = site_1[['meter_reading_scraped', 'row_id']].set_index('row_id').dropna()\nsubmission.loc[site_1.index, 'meter_reading'] = site_1['meter_reading_scraped']\ndel site_1\ngc.collect()","1705bbfd":"site_2 = pd.read_csv('..\/input\/asu-buildings-energy-consumption\/asu_2016-2018.csv', parse_dates = ['timestamp'])\nsite_2 = site_2[site_2['timestamp'].dt.year > 2016]","ad2c7805":"t = test[['building_id', 'meter', 'timestamp']]\nt['row_id'] = t.index\nsite_2 = site_2.merge(t, left_on = ['building_id', 'meter', 'timestamp'], right_on = ['building_id', 'meter', 'timestamp'], how = \"left\")\nsite_2 = site_2[['meter_reading', 'row_id']].set_index('row_id').dropna()\nsubmission.loc[site_2.index, 'meter_reading'] = site_2['meter_reading']\ndel site_2\ngc.collect()","a951bcd9":"site_4 = pd.read_csv('..\/input\/ucb-data-leakage-site-4\/site4.csv')","a98390e1":"submission.to_csv('submission.csv')","b0daa538":"* Site 0\n# \n# Thanks [@yamsam](https:\/\/www.kaggle.com\/yamsam\/) and his great kernel.\n# \n# https:\/\/www.kaggle.com\/yamsam\/new-ucf-starter-kernel","8014a374":"* Site 2\n# \n# Thanks [@pdnartreb](https:\/\/www.kaggle.com\/pdnartreb) and his great dataset.\n# \n# https:\/\/www.kaggle.com\/pdnartreb\/asu-buildings-energy-consumption","3804ca87":"I used a public kernel from .fit_%.(https:\/\/www.kaggle.com\/aitude) as example.\n# \n# https:\/\/www.kaggle.com\/aitude\/ashrae-kfold-lightgbm-without-leak-1-08\n# \n# **Replace this part with yours.**","e4ad33f4":"**Unfortunately**\n# this is another leaked data\n# Thanks for the https:\/\/www.kaggle.com\/wuliaokaola\/ashrae-maybe-this-can-make-public-lb-some-useful\n# @Jonny Lee,This is where had been forked","712480a6":"* Site 1\n# \n# Thanks [@mpware](https:\/\/www.kaggle.com\/mpware) and his great kernel.\n# \n# https:\/\/www.kaggle.com\/mpware\/ucl-data-leakage-episode-2\n#","d037e4ff":"This is include site0 & site1 & asu & site 4"}}