{"cell_type":{"3ae94193":"code","fd149794":"code","e469f16c":"code","29539d1c":"code","ddb3c545":"code","c5cc19c8":"code","439c566e":"code","7b5c2ea2":"code","df34d302":"code","d1cd53f9":"code","cbcede19":"code","51245112":"code","840a29f4":"code","b49c6da3":"code","dfc17107":"code","a75f009d":"code","2c7e8071":"code","2d796800":"code","c2316afc":"code","2777abac":"code","d2064ff5":"markdown","14e6e98e":"markdown","1751a458":"markdown","deb0d0a8":"markdown","72c5f706":"markdown","96282c7c":"markdown","fa0c9b7d":"markdown","68b9d32c":"markdown","d654c98f":"markdown","e51927fe":"markdown","3d332d27":"markdown","1c8fc914":"markdown","02776e86":"markdown","2c758d65":"markdown","c6323a51":"markdown","3f6cc9ec":"markdown"},"source":{"3ae94193":"conda install openpyxl","fd149794":"import pandas as pd\nimport openpyxl","e469f16c":"# Data was edited in Excel: 2 header rows were compressed into 1 (Question and Response)\n\ndata = pd.read_excel(\"..\/input\/survey-monkey-df\/Survey Monkey Output Editable.xlsx\", sheet_name=\"Edited_Data\")\n# Specify sheet with sheet_name=\n\ndata","29539d1c":"# Some datasets take time to import, so here is a copy in case we need to backtrack \"Safety Copy\"\n\ndata_a = data.copy() # data_a will be the primary table for analysis\ndata_a","ddb3c545":"data_a.columns \n# List of columns","c5cc19c8":"# Dropping blank columns: Make list of columns to drop then data.drop(columns=list)\n# Removing demographic information except for Respondent ID\n\ndrop_col = ['Start Date - ', 'End Date - ', 'Email Address - ', 'First Name - ', 'Last Name - ', 'Custom Data 1 - ']\ndata_a = data_a.drop(columns=drop_col)","439c566e":"data_a","7b5c2ea2":"# Make list of columns of demographic info to exclude from pivot: id_var=\n# List of values to pivot (questions) val var\n\nid_var = list(data_a.columns)[:8] # Columns 0-7 indexed\nval_var = list(data_a.columns)[8:] # Columns 8-end indexed (questions)","df34d302":"# Unpivoting (melting, transform to long)\n# Keeping first 7 columns fixed and unpivoting columns of questions\n\ndata_melted = data_a.melt(id_vars=id_var, value_vars=val_var, var_name=\"Question + SubQuestion\", value_name=\"Answer\")","d1cd53f9":"data_melted","cbcede19":"# On excel file, import sheet \"Question\": long df made of all questions + subquestions (used for joining)\n\nquestions_im = pd.read_excel(\"..\/input\/survey-monkey-df\/Survey Monkey Output Editable.xlsx\", sheet_name=\"Question\")\nquestions_im","51245112":"# Safety Copy as above\n\nquestions = questions_im.copy()\nquestions","840a29f4":"# I only want the columns \"Question\" and \"Question + SubQuestion\" to join with the Melted table\n\nquestions = questions.drop(columns=[\"Raw Question\", \"Raw SubQuestion\", \"SubQuestion\"])","b49c6da3":"questions","dfc17107":"# Joining question sheet with melted data (Left Join on Questions)\n# Purpose of Join: Since the table is melted, we can add a column that maps back to the original question for each response\n\ndata_joined = pd.merge(left=data_melted, right=questions, how=\"left\", left_on=\"Question + SubQuestion\", right_on=\"Question + SubQuestion\")\nprint(\"Original Data:\", len(data_melted)) \nprint(\"Merged Data:\", len(data_joined)) # Verification: Number of columns in joined df must = number of columns in df1 (original df melted)\n\ndata_joined","a75f009d":"# Aggregation: Add total number of respondents, taking sum or count\n# Create new df, removing NA in Answer, then .groupby\n\nresp = data_joined[data_joined[\"Answer\"].notna()]\nresp = resp.groupby(\"Question\")[\"Respondent ID - \"].nunique().reset_index()\n\nresp.rename(columns={\"Respondent ID - \":\"Respondents\"}, inplace=True) # Renaming to not duplicate column name\nresp","2c7e8071":"# Join grouped df to joined df\n# Adding number of respondents column to overall dataset (value will repeat for each question)\n\ndata_joined_2 = pd.merge(left=data_joined, right=resp, how=\"left\", left_on=\"Question\", right_on=\"Question\")\nprint(\"Original Data:\", len(data_joined)) \nprint(\"Merged Data:\", len(data_joined_2))\ndata_joined_2","2d796800":"# Aggregation and Join: How many people answered a question with the same answer = Same Answer column\n\neq_answ = data_joined # [data_merged[\"Answer\"].notna()] # Did not need to remove NA so code has been commented out.\neq_answ = eq_answ.groupby([\"Question + SubQuestion\", \"Answer\"])[\"Respondent ID - \"].nunique().reset_index()\neq_answ.rename(columns={\"Respondent ID - \":\"Same Answer\"}, inplace=True) # Output column default named Respondent ID, renaming for clarity\neq_answ","c2316afc":"# Join Three: Adding Same Answer grouped df to overall df\n\ndata_joined_3 = pd.merge(left=data_joined_2, right=eq_answ, how=\"left\", left_on=[\"Question + SubQuestion\", \"Answer\"], right_on=[\"Question + SubQuestion\", \"Answer\"])\n\n# Fill in NA with 0\ndata_joined_3[\"Same Answer\"].fillna(0, inplace=True)\nprint(\"Original Data:\", len(data_joined_2)) \nprint(\"Merged Data:\", len(data_joined_3))\ndata_joined_3","2777abac":"# Final df complete, renaming columns for ease\n# Assigning the final data to the output of the project.\n\noutput = data_joined_3.copy()\noutput.rename(columns={\"Respondent ID - \":\"Respondent ID\", \"Identify which division you work in. - Response\":\"Division Primary\", \"Identify which division you work in. - Other (please specify)\":\"Division Secondary\", \"Which of the following best describes your position level? - Response\":\"Position\", \"Which generation are you apart of? - Response\":\"Generation\", \"Please select the gender in which you identify. - Response\":\"Gender\", \"Which duration range best aligns with your tenure at your company? - Response\":\"Tenure\", \"Which of the following best describes your employment type? - Response\":\"Employment Type\"}, inplace=True)\noutput","d2064ff5":"**Fun Fact: Now we also know there are 688 unique responses.**","14e6e98e":"## Another Aggregation + Join","1751a458":"**Respondents column added = Aggregation and Join Successful**","deb0d0a8":"# Question: What was the total number of respondents for each question?","72c5f706":"## Data Aggregation\n\nFor this, we will need to create a separate table to aggregate (sum) the parameters and group them.","96282c7c":"Desired table obtained, now we can join this to the overall dataset.","fa0c9b7d":"## Data Melting\n\nNow we can melt the data by unpivoting the question columns while keeping demogrpahic info fixed.\nMelting = unpivoting, transforming wide to long, etc.","68b9d32c":"## Data Processing\nRemoving unwanted columns.","d654c98f":"## Importing the Data\n\nGiven: Excel sheet of raw (wide) data.\n\nEdited_Data is the final form of the data to use.\n\nA Questions sheet was made, listing all questions and subquestions vertically","e51927fe":"## Joining Data\n\nNow we can join the Question sheet with the Melted Data for further analysis.\nThis will allow us to map each response to the original question using the Question + SubQuestion column as the primary key.","3d332d27":"## Questions asked by business\n\n* What was the original quesiton for each sub-response?\n* What was the total number of responses for each question?\n* How many people responded the same for each question?","1c8fc914":"# Question: What was the original quesiton for each sub-response?","02776e86":"# Survey Monkey Data Transformation\n\nPresented with: Wide Dataset with unique Resp IDs and 30 Questions (some containing \"subquestions\" within) and optional answers (respondents don't answer every question)\n\nOutput: Long Data set showing unpivoted Questions + Subquestions and a row for each response, plus aggregated data columns\n\nWide Table => Long Table","2c758d65":"**The final column \"Question\" is the mapping column = Join Successful**","c6323a51":"# Question: How many people answered the same for each question?","3f6cc9ec":"**Table transformed from 198 rows to 17,028 rows = Melt Successful**"}}