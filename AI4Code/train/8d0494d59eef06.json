{"cell_type":{"461c80c0":"code","0f7885de":"code","3af3aa3d":"code","8705ab5b":"code","bbec75d2":"code","62cac189":"code","562e43f6":"code","09d0673d":"code","1218e6c9":"code","7878f07d":"code","735e5383":"code","19d72c5b":"code","b6368509":"code","d62dc19f":"code","caebfb0d":"code","d99a786d":"code","0442f150":"code","296efdb1":"code","b31f33d2":"markdown","d335d5b0":"markdown"},"source":{"461c80c0":"import pandas as pd\nimport numpy as np\nimport os\nimport ast\nimport shutil\nimport glob\nimport cv2 as cv\nfrom tqdm import tqdm\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split","0f7885de":"train_path=\"..\/input\/siim-covid19-resized-to-256px-jpg\/train\"\nBATCH_SIZE=32\nEPOCHS=50\nIMG_SIZE=256","3af3aa3d":"df=pd.read_csv(\"..\/input\/siim-covid19-detection\/train_image_level.csv\")\ndf['image_label']=df.label.apply(lambda x: x.split(\" \")[0])\ndf['id']=df['id'].apply(lambda x: x.split(\"_\")[0])\ndf['filepath']=df['id'].apply(lambda x: train_path+'\/' +x+'.jpg')\ndf.head()","8705ab5b":"#Trying a sample image\nplt.imshow(plt.imread(df.filepath[0]))","bbec75d2":"%cd ..\/\nos.makedirs('\/kaggle\/tmp',exist_ok=True)","62cac189":"%cd tmp","562e43f6":"meta_df=pd.read_csv(\"..\/input\/siim-covid19-resized-to-256px-jpg\/meta.csv\")\ntrain_df=meta_df[meta_df.split=='train']\ntrain_df.drop(columns=['split'],inplace=True)\ntrain_df.columns=['id','dim0','dim1']\ntrain_df.head()","09d0673d":"df=df.merge(train_df,on='id',how='left')\ndf.head(5)","1218e6c9":"df_train,df_valid=train_test_split(df,test_size=0.3,random_state=42, stratify=df.image_label.values)\ndf_train.loc[:,\"split\"]='train'\ndf_valid.loc[:,\"split\"]='valid'\n\ndf=pd.concat([df_train,df_valid]).reset_index(drop=True)\n\ndf.head()","7878f07d":"pwd","735e5383":"os.makedirs('covid\/images\/train',exist_ok=True)\nos.makedirs('covid\/images\/valid',exist_ok=True)\n\nos.makedirs('covid\/labels\/train',exist_ok=True)\nos.makedirs('covid\/labels\/valid',exist_ok=True)","19d72c5b":"ls covid\/images\/","b6368509":"pwd","d62dc19f":"df.head()","caebfb0d":"for i in tqdm(range(len(df))):\n    x=df.loc[i]\n    if x.split==\"train\":\n        shutil.copyfile(f'..\/input\/siim-covid19-resized-to-256px-jpg\/train\/{x.id}.jpg',f'\/kaggle\/tmp\/covid\/images\/train\/{x.id}.jpg')\n    else:\n         shutil.copyfile(f'..\/input\/siim-covid19-resized-to-256px-jpg\/train\/{x.id}.jpg',f'\/kaggle\/tmp\/covid\/images\/valid\/{x.id}.jpg')\n        ","d99a786d":"!git clone https:\/\/github.com\/ultralytics\/yolov5  # clone repo\n%cd yolov5\n# Install dependencies\n%pip install -qr requirements.txt  # install dependencies","0442f150":"%cd \/kaggle\/tmp","296efdb1":"import yaml\ndata_yaml=dict(\ntrain='\/kaggle\/tmp\/covid\/images\/train',\nval='\/kaggle\/tmp\/covid\/images\/valid',\nnc=2,\nnames=['none','opacity'])\n\nwith open('\/kaggle\/tmp\/yolov5\/data\/data.yaml','w') as outfile:\n    yaml.dump(data_yaml,outfile,default_flow_style=True)","b31f33d2":"# Covid detection using yolov5","d335d5b0":"# Train validation split"}}