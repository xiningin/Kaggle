{"cell_type":{"cc060821":"code","1ed3bfac":"code","b9213df9":"code","3b08b1c4":"code","279ea0cf":"code","4f3c9217":"code","919544e2":"code","e5cc888c":"code","8e69e3f3":"code","090d4375":"code","aa57c287":"code","054a033e":"code","bd26ab32":"code","481ce027":"code","528ab6ed":"code","7fffecfd":"code","7fcd59be":"code","40c7a436":"code","80f62165":"code","4762a31b":"code","25a33988":"code","671bb2f0":"code","0fa4ba7c":"code","6cc81f4d":"code","acbee210":"code","e714ce9f":"markdown","205ee897":"markdown","ba33c7a7":"markdown","21fc040d":"markdown","e82c9e9a":"markdown","3992633d":"markdown","d97ef4e9":"markdown","8cc15477":"markdown","2b0ed172":"markdown","8358b5a0":"markdown","e5463a46":"markdown","f86141df":"markdown","83320824":"markdown","32229f25":"markdown","048a4784":"markdown","cac0a932":"markdown","97c7fc72":"markdown","7ec6699c":"markdown","8b507bac":"markdown"},"source":{"cc060821":"!pip install chart_studio","1ed3bfac":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport os\nimport chart_studio.plotly as py  # plot package\nimport chart_studio.plotly\nimport numpy as np # linear algebra\nimport pandas as pd  # data-table package built upon numpy\nimport pycountry # lookup package for ISO-codes for countries of this blue, blue planet\nfrom plotly.offline import iplot, init_notebook_mode  #iplot is for plotting into a jupyter\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b9213df9":"suspected_cases = pd.read_csv('\/kaggle\/input\/meningococcal-meningitis-countrywise-data\/Number of suspected meningitis cases reported.csv')\nsuspected_deaths = pd.read_csv('\/kaggle\/input\/meningococcal-meningitis-countrywise-data\/Number of suspected meningitis deaths reported.csv')\nepidemic_districts = pd.read_csv('\/kaggle\/input\/meningococcal-meningitis-countrywise-data\/Number of meningitis epidemic districts.csv')","3b08b1c4":"suspected_cases.head()","279ea0cf":"suspected_deaths.head()","4f3c9217":"epidemic_districts.head()","919544e2":"suspected_cases.shape","e5cc888c":"suspected_deaths.shape","8e69e3f3":"epidemic_districts.shape","090d4375":"def clean_df(df):\n    \"\"\"\n     - change here the year as the row index, and drop the \"Country\" row which has the year\n     - change the index as int\n     - reverse years ascending\n     - replace \"Not applicable\" and \"No data\" values with NaN\n     - change dtype to numeric\n     - fill in NaN's with existing Data (interpolate \"pad\")  \n    \"\"\"\n    df = df.T\n    df.columns = df.iloc[0]\n    df = df.iloc[1:]\n    df.index = df[\"Country\"]\n    df = df.drop(\"Country\", 1)\n    df.index.names = ['Year']\n    df.index = np.array(df.index).astype(int)\n    df.columns.names = [\"Country\"]\n    df = df.sort_index()\n    \n    \n    df = df.replace(\"Not applicable\", \"NaN\")\n    df = df.replace(\"No data\", \"NaN\")\n    \n    df = df.apply(pd.to_numeric, errors='coerce')\n    df = df.interpolate(\"pad\")\n    return df","aa57c287":"suspected_cases = pd.read_csv('\/kaggle\/input\/meningococcal-meningitis-countrywise-data\/Number of suspected meningitis cases reported.csv')\nsuspected_deaths = pd.read_csv('\/kaggle\/input\/meningococcal-meningitis-countrywise-data\/Number of suspected meningitis deaths reported.csv')\nepidemic_districts = pd.read_csv('\/kaggle\/input\/meningococcal-meningitis-countrywise-data\/Number of meningitis epidemic districts.csv')","054a033e":"suspected_cases = clean_df(suspected_cases)\nsuspected_deaths = clean_df(suspected_deaths)\nepidemic_districts = clean_df(epidemic_districts)","bd26ab32":"suspected_cases","481ce027":"fig, axes = plt.subplots(1,3, figsize=(25, 10), dpi=200)\nsuspected_cases.plot.area(ax=axes[0], legend=True).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))\nsuspected_deaths.plot.area(ax=axes[1], legend=True).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))\nepidemic_districts.plot.area(ax=axes[2], legend=True).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))\naxes[0].set_title('suspected cases')\naxes[1].set_title('suspected deaths')\naxes[2].set_title('epidemic districs')\nplt.tight_layout()","528ab6ed":"fig, axes = plt.subplots(1,3, figsize=(30,15), dpi=100)\nsuspected_cases.sum().plot.pie(y=\"Country\", ax=axes[0])\nsuspected_deaths.sum().plot.pie(y=\"Country\", ax=axes[1])\nepidemic_districts.sum().plot.pie(y=\"Country\", ax=axes[2])\naxes[0].set_title('suspected cases')\naxes[1].set_title('suspected deaths')\naxes[2].set_title('epidemic districs')\naxes[0].set_ylabel('') # remove None\naxes[1].set_ylabel('') \naxes[2].set_ylabel('')\nplt.tight_layout()","7fffecfd":"fig, axes = plt.subplots(3,1, figsize=(15,30), dpi=100)\nsuspected_deaths.plot.barh(ax=axes[0], rot=0).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))\naxes[0].set_title('suspected_deaths')\nsuspected_cases.plot.barh(ax=axes[1], rot=0).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))\naxes[1].set_title('suspected_cases')\nepidemic_districts.plot.barh(ax=axes[2], rot=0).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))\naxes[2].set_title('epidemic_districts')\nplt.tight_layout()","7fcd59be":"fig, axes = plt.subplots(3,1, figsize=(12,15), dpi=100)\nsuspected_deaths.plot.box(ax=axes[0], rot=90).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))\naxes[0].set_title('suspected_deaths')\nsuspected_cases.plot.box(ax=axes[1], rot=90).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))\naxes[1].set_title('suspected_cases')\nepidemic_districts.plot.box(ax=axes[2], rot=90).legend(loc='center left',bbox_to_anchor=(1.0, 0.5))\naxes[2].set_title('epidemic_districts')\nplt.tight_layout()","40c7a436":"def lookup(countries):\n    result = []\n    for i in range(len(countries)):\n        try:\n            result.append(pycountry.countries.get(name=countries[i]).alpha_3)\n        except:\n            try:\n                result.append(pycountry.countries.get(official_name=countries[i]).alpha_3)\n            except:\n                result.append('undefined')\n    return result","80f62165":"countries = suspected_deaths.T.index.values\ncodes=lookup(countries)\nsuspected_deaths = suspected_deaths.T\nsuspected_deaths[\"Codes\"] = codes\nsuspected_deaths=suspected_deaths[~suspected_deaths.Codes.isin(['undefined'])]","4762a31b":"countries = suspected_cases.T.index.values\ncodes=lookup(countries)\nsuspected_cases = suspected_cases.T\nsuspected_cases[\"Codes\"] = codes\nsuspected_cases=suspected_cases[~suspected_cases.Codes.isin(['undefined'])]","25a33988":"countries = epidemic_districts.T.index.values\ncodes=lookup(countries)\nepidemic_districts = epidemic_districts.T\nepidemic_districts[\"Codes\"] = codes\nepidemic_districts=epidemic_districts[~epidemic_districts.Codes.isin(['undefined'])]","671bb2f0":"def get_data_layout_map(df_, cbar_label='sum over previous years', title_plot='epidemic_district'):\n    df = pd.DataFrame(df_.iloc[:,:-1].sum(axis=1))\n    df.columns = ['sum']\n    df[\"Codes\"] = df_.iloc[:,-1]\n\n    data = [ dict(\n        type = 'choropleth',\n        locations = df['Codes'],\n        z = df['sum'],\n        text = df.index,\n       colorscale = [[0,\"rgb(5, 10, 172)\"],[0.35,\"rgb(40, 60, 190)\"],[0.5,\"rgb(70, 100, 245)\"], \\\n                     [0.6,\"rgb(90, 120, 245)\"],[0.7,\"rgb(106, 137, 247)\"],[1,\"rgb(220, 220, 220)\"]],\n       autocolorscale = False,\n       reversescale = True,\n        marker = dict(\n           line = dict (\n               color = 'rgb(180,180,180)',\n               width = 0.5\n           ) ),\n        colorbar = dict(\n           autotick = False,\n           title = cbar_label),\n    ) ]\n\n\n    layout = dict(\n        title = title_plot,\n        geo = dict(\n            showframe = False,\n            showcoastlines = False,\n            projection = dict(\n                type = 'Mercator'\n            )\n        )\n    )\n    return data, layout","0fa4ba7c":"data, layout = get_data_layout_map(epidemic_districts, cbar_label='sum over previous years', title_plot='epidemic_districts 2003-2014')\nfig = dict( data=data, layout=layout )\niplot(fig, validate=False)","6cc81f4d":"data, layout = get_data_layout_map(suspected_cases, cbar_label='sum over previous years', title_plot='suspected_cases 2009-2014')\nfig = dict( data=data, layout=layout )\niplot(fig, validate=False)","acbee210":"data, layout = get_data_layout_map(suspected_deaths, cbar_label='sum over previous years', title_plot='suspected_deaths 1965-2014')\nfig = dict( data=data, layout=layout )\niplot(fig, validate=False)","e714ce9f":"Please upvote if this notebook was helpful for you :) ","205ee897":"The given dataset consists of time series data separated by years for different countries for the Meningococcal disease. It is provided by the WHO. \n\nThe diseasse has a high mortality rate untreated, but is vaccine preventable. https:\/\/en.wikipedia.org\/wiki\/Meningococcal_disease\nIt is most dominant in developing countries, where the fatality rate is between 10 and 20 percent. \n\nThe bacteria is harming the meninges - which are the membranes that envelop the brain and spinal chord. The central nervous system is thus affected. Survivors suffer usually permanent brain damage. \n\nWhen patients are diagnosed, large dose of antibiotics are provided. But it takes several days such that the toxin is neutralized from the body. ","ba33c7a7":"![grafik.png](attachment:grafik.png)","21fc040d":"The following plots repeat the same data analysis, just showing the distribution for each year and each country as a bar and boxplot.","e82c9e9a":"In general this analysis shows that there should be high caution and help to provide medical aid in the sub-Sahara countries to prevent outbreaks similar to 1996 and 2009. ","3992633d":"The upper picture shows the Nacterium meningitis (taken from https:\/\/www.123rf.com\/stock-photo\/meningococcal.html?sti=nung36zbs8z7jqkqrq|)","d97ef4e9":"Well indeed there is a huge spike right at 1996. At the years of 2009-2010 is also a smaller spike. The epidemic districs and suspected cases plots show indeed that in these years epidmic took place! ","8cc15477":"The number of countries is in the suspected_deaths table different to the other epidemic district and suspected_cases tables. Also the data points collected (indicated by the \"Country\" row) shows differences between the tables. ","2b0ed172":"First have a look at the dataframes:","8358b5a0":"This looks already cleaner :) Now let's start with some visualization","e5463a46":"### How do suspected cases \/ deaths and epidemic distric counts look with respect to time? ","f86141df":"### Let's have a look at the cumulative sum distribution of cases and show them color-coded","83320824":"Thanks to: https:\/\/www.kaggle.com\/fiordilatte\/2017-happiness-world-map :) ","32229f25":"### How does the cumulative sum look for the country wise distribution? ","048a4784":"Well, indeed we can see that there the is something like an African Meningitis belt https:\/\/en.wikipedia.org\/wiki\/African_meningitis_belt. \nUnfortunately children are most likely to be affected. In 2009 more than 90000 cases were reported in genere, which points out to a large inequality in the medical standards between countries. \nIn the US 2011 there were only 800 reported cases.","cac0a932":"### Meningococcal disease ","97c7fc72":"Well here we see that the most affected countries were from 2009 Sudan, Sout-Sudan, Nigeria and Senegal. \nFrom the suspected deaths there is a more broad distribution across countries. This measurements started 1965. So different epidemics are captured. There does not seem be one general hotspot with most suspected deaths throughout this time period (1965-2014). ","7ec6699c":"Now let's clean the data s.t. all missing values are represented as NaN's, the datatype is changed to numberic. \nFor this analysis it seems easiest to have the columns as countries and rows as ascending years. \n\nA very important step is the handling of NaN values. Here I use the interpolation method of pandas \"pad\" https:\/\/pandas.pydata.org\/pandas-docs\/stable\/user_guide\/missing_data.html. It is a forward filling method that simply replaces preceeding values. \nThe dataset consists of a lot of NaN's, so it is seems for some rows tricky to do a linear or polynomial interpolation. ","8b507bac":"The dataset is expected to show a significant spike in 2009-2010. Almost 1000 people died in the epidemic outbreak https:\/\/en.wikipedia.org\/wiki\/2009%E2%80%932010_West_African_meningitis_outbreak. Nigeria was here the most affected country. \n\nThe deadliest outbreak however happened in 1996 with over 10000 killed https:\/\/www.who.int\/csr\/don\/1996_03_01b\/en\/. "}}