{"cell_type":{"6c757ece":"code","d6ea99fe":"code","25b8c92a":"code","bdb20eee":"code","1ac0231f":"code","bee394eb":"code","d9ce334c":"code","c71436e3":"code","380fc1ea":"code","a03bef4c":"code","d2fd4942":"code","0931002b":"code","55b2d547":"code","a60611f6":"code","8b500bb0":"code","6e8d5eb3":"code","71b745f9":"code","dd2a9523":"code","385b84e6":"code","159b3508":"code","f43264c6":"code","dd2184b0":"code","4715c6c6":"code","504e72e1":"code","51b61434":"code","4767b479":"code","1d03aec1":"code","39e992d2":"code","a89c858f":"code","17746a5c":"code","87e5536b":"code","19561067":"code","78c63f90":"code","87793817":"code","faf12cb8":"code","6d5fa356":"code","8e1edad5":"code","63f00ea0":"code","73075f14":"code","847883c9":"code","d51172ee":"code","eb44a33c":"code","5fafe4b2":"code","db12ee07":"code","180d710f":"code","3526f8ee":"code","d142550a":"code","f60dbe48":"code","65e87985":"code","67c25154":"code","08d2f96e":"code","038aa29a":"code","b5adc4d5":"code","ad17c833":"code","456c4d5a":"code","0ab608c5":"code","411529b7":"code","0723d1f5":"code","4eb446f3":"code","e5bb9bad":"code","06356dbd":"markdown","d9b07666":"markdown","53c4b21c":"markdown","8ee0a1e5":"markdown","406d1765":"markdown","da3d4d53":"markdown","85d511f6":"markdown","29e818cf":"markdown","3cd72413":"markdown","195a10e7":"markdown","190c01a6":"markdown","fecc4868":"markdown","e3a1faa9":"markdown","3aefdd15":"markdown","7a11259b":"markdown","524ec6b0":"markdown","6be6f0a8":"markdown","14deee7d":"markdown"},"source":{"6c757ece":"import numpy as np\nimport pandas as pd","d6ea99fe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","25b8c92a":"df = pd.read_csv(\"..\/input\/worldhappinessreport2021\/world-happiness-report-2021.csv\")\ndf","bdb20eee":"df1 = df[['Country name', 'Regional indicator', 'Ladder score',\n       'Logged GDP per capita', 'Social support', 'Healthy life expectancy',\n       'Freedom to make life choices', 'Generosity',\n       'Perceptions of corruption']].copy()\ndf1.set_index('Country name', inplace=True)\ndf1","1ac0231f":"df1.shape","bee394eb":"df1.head()","d9ce334c":"df1.tail()","c71436e3":"df1.sample(3)","380fc1ea":"df1.info()","a03bef4c":"df1.describe()","d2fd4942":"df1.isnull().sum()","0931002b":"df1.columns","55b2d547":"df1.index","a60611f6":"df['Regional indicator'].value_counts()","8b500bb0":"df1.loc[['Germany','Ethiopia','Peru','Chad','Japan'], ['Freedom to make life choices', 'Healthy life expectancy']]","6e8d5eb3":"df1.head(1)","71b745f9":"df1.iloc[[25,52,65,145], [1,7]]","dd2a9523":"filt = (df1['Regional indicator']=='Central and Eastern Europe')& (df1['Perceptions of corruption']>0.9)\n\ndf1.loc[filt,'Ladder score']","385b84e6":"filt = (df1['Regional indicator']=='Sub-Saharan Africa') | (df1['Healthy life expectancy']<50)\ndf1.loc[filt,'Ladder score']","159b3508":"filt = (df1['Regional indicator']=='Western Europe') | (df1['Perceptions of corruption']>=0.66)\ndf1.loc[~filt,['Regional indicator','Ladder score','Perceptions of corruption']].sample(7)","f43264c6":"# to add new column \n\nnew = np.random.rand(149)\n\n","dd2184b0":"df1['new'] = new","4715c6c6":"df1","504e72e1":"# to drop column\ndf1.drop('new',axis=1, inplace=True)\ndf1","51b61434":"# to add row\nnew_row= df1.loc['Germany']\nnew_row","4767b479":"new_row.name='New_name'","1d03aec1":"df1= df1.append(new_row)\ndf1","39e992d2":"df1.drop('New_name', axis=0, inplace=True)\ndf1","a89c858f":"df1.reset_index(inplace=True)\ndf1","17746a5c":"#set_index\n\ndf1.reset_index(inplace=True)","87e5536b":"df1.index","19561067":"df1.set_index('Country name', inplace=True)\ndf1","78c63f90":"#reset_index","87793817":"#set_index","faf12cb8":"#sort_index\n","6d5fa356":"#df2\n\ndf2= df1.copy()\ndf2","8e1edad5":"df2['Social support'].apply(np.square)","63f00ea0":"# Update the ladder score of  of Afghanistan as South_Asia","73075f14":"#### Be carefull about the following error !!!!\n\ndf2.loc['Afghanistan']['Ladder score']=8.654","847883c9":"df2.loc['Afghanistan']","d51172ee":"df2.loc['Afghanistan','Ladder score'] = 7.678\n","eb44a33c":"df2.loc['Afghanistan']","5fafe4b2":"df2['Healthy life expectancy'].head()","db12ee07":"df2['Healthy life expectancy'].apply(np.square)","180d710f":"df2['Healthy life expectancy'].head()","3526f8ee":"df2['Healthy life expectancy'].describe()","d142550a":"def long_life(life):\n    if life >= 69.6:\n        return 'Long Life expectancy'\n    elif life > 64.992799  and life <69.6:\n        return 'Longer than normal expectancy'\n    elif life  > 59.802000  and life  <= 64.992799:\n        return 'Normal life expectancy'\n    else:\n        return 'Lower life expectancy'","f60dbe48":"df2['Explained Healthy life expectancy']= df2['Healthy life expectancy'].apply(long_life)","65e87985":"df2.rename(index={'United States':'United States of America'},inplace=True)","67c25154":"df1.loc['United States','Healthy life expectancy']","08d2f96e":"df2.loc['United States of America','Explained Healthy life expectancy']","038aa29a":"df2['Healthy life expectancy']=df2['Explained Healthy life expectancy'].replace({'Longer than normal expectancy':'Life is short'}, inplace=True)\ndf2.loc['United States of America','Explained Healthy life expectancy']","b5adc4d5":"# Use a group by Regional indicator  to view the mean scores of the happiness(Ladder score)\n\n# What can we say \n# Can we say that happiness differ by Regional indicator as the mean happiness score for one region is higher than others","ad17c833":"df1.columns","456c4d5a":"df2['Regional indicator'].value_counts()","0ab608c5":"df2['Regional indicator'].value_counts(normalize=True)","411529b7":"df2.index","0723d1f5":"df1.groupby(['Regional indicator'])","4eb446f3":"df2.groupby(['Regional indicator']).get_group('Middle East and North Africa').mean()","e5bb9bad":"df2.groupby(['Regional indicator']).get_group('Middle East and North Africa')","06356dbd":"#### Exercise (slicing, loc & iloc):\n\n-Germany, Ethiopia, Peru, Chad, Japan.  Freedom to make life choices, Healthy life expectancy","d9b07666":"### Update & Modify Rows\n\n`to update one row` --> df1.loc[2, ['last','email']] = ['Smith', 'JohnSmith@email.com']\n\n\n`to update multiple rows` : We have several options:\n\n######  First is the basic one: df['email']= df['email'].str.lower()\n\n#####  Advance Options:\n`Apply` : Works both on series (one column) and dataframes. But mostly use with series\n######  Apply on series --> df['email'].apply(len) <-- it gives the length of the email on the email column(e-mail series)\n\n`Replace` : Works like map, but keeps the not defined values intact. df['first_name'].replace{'chris':'Mike','jane':'Angela'} <-- John keeps its value.","53c4b21c":"#### Reading From CSV","8ee0a1e5":"#### Exercise:Conditional Filtering\n\n- Let's **randomly** bring 7 countries with their 'Regional indicator','Ladder score','Perceptions of corruption' scores\n\n- Condition : Those countries are not in Western Europe **or** their 'Perceptions of corruption' scores are not bigger than 0.66\n    \n","406d1765":"#### Exercise:Conditional Filtering\n\n- Let's bring the Happiness score from the countries where in Central and Easter  Europe countries \n- **and** where perceptions of corruption higher than 0.9\n    \n","da3d4d53":"#### **Apply**","85d511f6":"### **Exercise**","29e818cf":"### **Today's Agenda**:\n#### **Adding and Dropping Columns and Rows**  \n#### **Index methods**   \n#### **Update & Modify Rows**   \n#### **Groupby**   \n#### **Missing Data**   \n\n\n\n","3cd72413":"### Groupby","195a10e7":"##### **value_counts()**","190c01a6":"Based on the our dataset's 'Healthy life expectancy' scores, lets make a new column with the name of **'Explained Healthy life expectancy'** with the new values which should consist of:\n- Let's think 'Healthy life expectancy''s mean score as our threshold. \n-If 'Healthy life expectancy' is equal and greater than 75% of the 'Healthy life expectancy' score of the dataset , it should be written **''Long Life expectancy'**\n-If 'Healthy life expectancy' less than 75% of the 'Healthy life expectancy' score of the dataset but bigger than our threshold, it should be written **'Longer than normal expectancy'**\n--If 'Healthy life expectancy' equal or less than our threshold but bigger than 25% of the 'Healthy life expectancy' score of the dataset, it should be written **'Normal life expectancy'**\n--If 'Healthy life expectancy' equal or less than 25% of the 'Healthy life expectancy' score of the dataset, it should be written **'Lower life expectancy'**\n--Since We have projects with United states make sure that United States should be written as **'United States of America'**\n","fecc4868":"# **PANDAS**","e3a1faa9":"### **Adding and Dropping Columns and Rows**\n\n##### -To add column to df  --> df[new column name] = values\n##### -To drop column from df --> df.drop('column name', axis = 1, inplace=True)\n##### -To add row to df  --> df.append(row)\n##### -To drop row from df --> df.drop('row name', axis = 0)\n\n","3aefdd15":"**Exercise** : We are working as a Data Scientist at an internationally well-known infrastructure company, \nwhich makes projects all over the world. Right now, our company's focus areas are: 'Southeast Asia' and 'South Asia'.\n\nIn the first place, our boss wants us to prepare a descriptive report on the institutional integrity and citizens to trust their governments to see whether it is worthed to start a project idea to invest huge amount of money and time to those regions.\n\nWe are preparing a descriptive report for our boss, who does not have much knowledge of statistics or reading statistical results. As data scientists, we should prepare something concise and understandable.\n\nLet's start with the following steps:\n\n-First, decide on which variable would be a good choice to work on \n\n-Second give our boss both numbers and also kind of explanatory side (like we did before)\n\n-Make a comparison between two regions in the text \n\n-Our report should contain \n\n--overall regions, \n\n--'Southeast Asia' and 'South Asia'\n\n--variable and modified version of the variable\n\n","7a11259b":"#### Exercise:Conditional Filtering\n\n- Let's bring the Happiness score from the countries where in Sub-Saharan Africa countries \n- **or** countries where Healthy life expectancy'lower than 50\n    \n","524ec6b0":"### **Variables**\n\n-**Ladder score** - Happiness score or subjective well-being. This is the national average response to the question of life evaluations.\n\n**Question:** Please imagine a ladder, with steps numbered from 0 at the bottom to 10 at the top. The top of the ladder represents the best possible life for you and the bottom of the ladder represents the worst possible life for you. On which step of the ladder would you say you personally feel you stand at this time?\nLogged GDP per capita - The GDP-per-capita time series from 2019 to 2020 using countryspecific forecasts of real GDP growth in 2020.\n\n-**Social support** - Is the national average of the binary responses (either 0 or 1) to the GWP question \u201cIf you were in trouble, do you have relatives or friends you can count on to help you whenever you need them, or not.\n\n-**Healthy life expectancy** - Healthy life expectancies at birth are based on the data extracted from the World Health Organization\u2019s (WHO) Global Health Observatory data repository (Last updated: 2020-09-28)\n\n-**Freedom to make life choices** - Is is the national average of responses to the GWP question \u201cAre you satisfied or dissatisfied with your freedom to choose what you do with your life?\n\n-**Generosity** - Generosity is the residual of regressing national average of response to the GWP question \u201cHave you donated money to a charity in the past month?\u201d on GDP per capita.\n\n-**Perceptions of corruption** - The measure is the national average of the survey responses to two questions in the GWP: \u201cIs corruption widespread throughout the government or not\u201d and \u201cIs corruption widespread within businesses or not?\u201d","6be6f0a8":"#### **Replace**","14deee7d":"### Conditional Filtering"}}