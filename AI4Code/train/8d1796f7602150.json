{"cell_type":{"b7f2609d":"code","ff9d1b06":"code","1b490e5c":"code","56533c96":"code","819efbb4":"code","a352a5b2":"code","2f674bd3":"code","593713fa":"code","0e58f863":"code","4002e280":"code","ad7a7307":"code","0f46f74d":"code","0e2a7d4c":"code","b59c3c86":"code","abaf0c0d":"markdown","bb146b7e":"markdown","19d0dc8a":"markdown","5e47965f":"markdown","343bed90":"markdown","62c2d991":"markdown"},"source":{"b7f2609d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport re\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas_profiling\nfrom pandas.plotting import scatter_matrix\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ff9d1b06":"df=[]\ncol_list = ['title', 'views', 'likes']\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        if filename.endswith('.csv'):\n            df1=pd.DataFrame(pd.read_csv(os.path.join(dirname, filename),header=0,usecols=col_list))\n            df1['country']=filename[:2]\n            \n            df.append(df1)\ntrain=pd.concat(df,axis=0,ignore_index=True)","1b490e5c":"train.shape,train.isna().sum()\ntrain.head(100)","56533c96":"train.describe()","819efbb4":"train.corr()","a352a5b2":"sns.heatmap(train.corr(),annot=True)","2f674bd3":"figure=plt.figure(figsize=(10,10))\nscatter_matrix(train)\nplt.show()\n#plt.title('Scatterplot matrix')\n#plt.legend()","593713fa":"figure=plt.figure(figsize=(10,10))\nsns.regplot(x='views',y='likes',data=train)\nplt.title('Correlation between views and likes')","0e58f863":"countrywise=pd.DataFrame(train.groupby(by=['country']).sum())\n#countrywise.h\ncountrywise.index","4002e280":"#plt.subplots(1,2)\nsns.barplot(x=countrywise.index,y=countrywise['likes'])\nplt.show()\nsns.barplot(x=countrywise.index,y=countrywise['views'])\nplt.show()","ad7a7307":"titlewise=pd.DataFrame(train.groupby(by=['title']).sum())\ntitlewise.sort_values(by=['views','likes'],ascending=False,inplace=True)\n#titlewise.head()","0f46f74d":"titlewise[titlewise['views']==titlewise['views'].max()]\n","0e2a7d4c":"titlewise[titlewise['likes']==titlewise['likes'].max()]","b59c3c86":"sns.barplot(x=titlewise.index[:10],y=titlewise.likes[:10])\nplt.xticks(rotation=90)","abaf0c0d":"The above plot shows linear relationship between views and likes ","bb146b7e":"Let's see countriwise likes count ","19d0dc8a":"From above result it can be concluded , views and likes are correlated . Lets visualize top 10 songs ","5e47965f":"We can clearly see that , views and likes are positively correlated. As views on perticular video increase there are high changes that video will get more likes.  \nlets verify it . For that I am creating a Dataframe to know which video has more views and will see if that video has highest likes or not .","343bed90":"Let's visualize countrywise views abd likes ","62c2d991":"Let's concat all the csv files in a single dataframe for analysis. "}}