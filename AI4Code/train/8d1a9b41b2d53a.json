{"cell_type":{"42e2e317":"code","8ec1c8c4":"code","66d23354":"code","cc8392b7":"code","975099c6":"code","72c4ea49":"code","20ccda9e":"code","428e2987":"code","29a24213":"code","1dd9e699":"code","d734fb7a":"code","272b30da":"code","0020040f":"code","1f80f942":"code","bd7fbbcc":"code","33bb55d2":"code","ce200908":"markdown","2d1a841c":"markdown","ef7f3294":"markdown"},"source":{"42e2e317":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8ec1c8c4":"import matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sns\nimport geopandas as gpd\nimport squarify    # pip install squarify (algorithm for treemap)\nfrom mpl_toolkits.basemap import Basemap\nimport folium","66d23354":"import json\n\nfrom bokeh.io import output_file, show\nfrom bokeh.models import GeoJSONDataSource\nfrom bokeh.plotting import figure\nfrom bokeh.sampledata.sample_geojson import geojson","cc8392b7":"df = pd.read_csv('..\/input\/singapore-postal-code-to-latlon\/SG_postal.csv')\ndf.head()","975099c6":"df.columns","72c4ea49":"x= df['street_name'].value_counts()\nx.head(15)","20ccda9e":"plt.style.use('default')\nsns.set_style(\"dark\")\n\ndef plot_count(feature, df, size=1):\n    f, ax = plt.subplots(1,1, figsize=(6*size,8))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:10], palette='Set2', edgecolor='k')\n    g.set_title(\"Number and percentage of postal codes by Area\",fontsize=15)\n    g.set_ylabel(\"Number of postal codes\", fontsize=12)\n    g.set_xlabel(\"Street Name\", fontsize=13)\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show() ","428e2987":"plot_count(\"street_name\", df, size=4)","29a24213":"# lat, long extreme(boundary) values\nBBox=[103.5785, 104.1028, 1.1556, 1.4800]","1dd9e699":"#import map layer extracted based on the lat and long values\nla_map = plt.imread('..\/input\/singapore-map\/map (1).png')\n\nfig, ax = plt.subplots(figsize = (18,10))\nax.scatter(df.lon,df.lat, zorder=2, alpha= 0.6, c='orange',edgecolors='r', s=30)\nax.set_title('Singapore Postal Codes', fontsize=20)\nax.set_xlim(BBox[0],BBox[1])\nax.set_ylim(BBox[2],BBox[3])\nax.imshow(la_map, zorder=1, extent=BBox,aspect='auto')\nplt.show()","d734fb7a":"df_codes = gpd.read_file('..\/input\/singapore-postal-code-to-latlon\/SG_postal.csv')\ndf_codes","272b30da":"# Your code here: Create the GeoDataFrame\ndf = gpd.GeoDataFrame(df_codes, geometry=gpd.points_from_xy(df_codes[\"lon\"].astype('float32'), df_codes[\"lat\"].astype('float32')) )\n\n# Your code here: Set the CRS to {'init': 'epsg:4326'}\ndf.crs = {'init': 'epsg:4326'}\ndf.head()","0020040f":"singapore = gpd.read_file('..\/input\/singapore-shp\/gadm36_SGP_1.shp')\nsingapore.head()","1f80f942":"ax = singapore.plot(figsize=(20,20), color='lightgray', linestyle='-', edgecolors='k')\ndf.plot(ax=ax, markersize=5)\n","bd7fbbcc":"singapore1 = gpd.read_file('..\/input\/singapore-geojson\/national-map-polygon-geojson.geojson')\nsingapore1.head()","33bb55d2":"ax = singapore1.plot(figsize=(20,20), color='lightgray', linestyle='-', edgecolors='k')\ndf.plot(ax=ax, markersize=5, color='orange', alpha=0.6)","ce200908":"### **3. Using GeoPandas to plot postal codes by Area(street_name)**","2d1a841c":"### **2. Plotting Singapore Postal Codes**","ef7f3294":"### **1. Number and percentage of postal codes by Area**"}}