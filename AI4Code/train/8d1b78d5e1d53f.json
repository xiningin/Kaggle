{"cell_type":{"7136d32d":"code","68546cf0":"code","876a7da8":"code","b615b3f6":"code","9307e2f3":"code","e9f62e65":"code","a3100f8f":"code","54368ad4":"code","666ee074":"code","b6a72694":"markdown","a6271cc1":"markdown"},"source":{"7136d32d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","68546cf0":"from sklearn.naive_bayes import MultinomialNB\nfrom sklearn.linear_model import LogisticRegression\nimport sklearn","876a7da8":"import pandas as pd\ndf=pd.read_csv(\"\/kaggle\/input\/multiclass-classification-data-for-turkish-tc32\/ticaret-yorum.csv\")\ndf=df.sample(df.shape[0])\ndf.head()","b615b3f6":"df.shape","9307e2f3":"df.category.nunique()","e9f62e65":"df.category.value_counts()","a3100f8f":"from sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics import classification_report","54368ad4":"vectorizer = TfidfVectorizer()\nX = vectorizer.fit_transform(df.text)","666ee074":"data_labels=df.category\nmodels_name = [\"Multi NB\", \"LR\" ]\n#models = [ MultinomialNB(alpha=1.0, class_prior=None, fit_prior=True), LogisticRegression()]\nmodels = [ MultinomialNB(alpha=1.0, class_prior=None, fit_prior=True)]\nfor j in range(len(models)):\n print(models_name[j]+ \" \")\n predicted = sklearn.model_selection.cross_val_predict(models[j], X, data_labels , cv=4)\n acc=sklearn.metrics.accuracy_score(data_labels, predicted)    \n print(classification_report(data_labels, predicted))\n print(\"***\")","b6a72694":"# Baseline Algorithm with Naive Bayes","a6271cc1":"# Multi Class Classification Dataset for Turkish \n## Benchmark dataset for Turkish text classification\n* It contians 430K lines, 32 categories\n* Each category roughly has 13K comments  \n* Data is collected from Turkish web sites\n* the data contains the comments of the products and product categories\n* Baseline algoritm , Naive Bayes gets %86 F1 score  as follows"}}