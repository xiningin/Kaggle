{"cell_type":{"64e6796a":"code","c0c9f9d2":"code","47910422":"code","c4e763e2":"code","09e55e74":"code","f4af5280":"code","143f56f7":"code","e5839e11":"code","3104c76e":"code","44d568f7":"code","6bbe0df1":"code","b22f183a":"code","02bbfb1e":"code","9adfc04d":"code","e37f1411":"code","fe12bf5a":"code","bca1b108":"code","5c4f5729":"code","fd2eacfe":"code","4669c1da":"code","c05f1645":"code","80ab6f0f":"markdown","327f8e58":"markdown","8cea7ff6":"markdown","011dc93c":"markdown","4198b2f5":"markdown","2bf00eb6":"markdown","1a46c5a1":"markdown","2967f842":"markdown","d000f565":"markdown","7b32394d":"markdown","d9284391":"markdown","8f039224":"markdown","1c97bcf2":"markdown","7d08c39c":"markdown"},"source":{"64e6796a":"\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns #visualization tool\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n# Any results you write to the current directory are saved as output.","c0c9f9d2":"data=pd.read_csv('..\/input\/globalterrorismdb_0718dist.csv',encoding='ISO-8859-1')","47910422":"data.info()","c4e763e2":"data.corr().head()","09e55e74":"data.columns","f4af5280":"data.rename(columns={'iyear':'Year','imonth':'Month','iday':'Day','country_txt':'Country','region_txt':'Region','attacktype1_txt':'AttackType','target1':'Target','nkill':'Killed','nwound':'Wounded','summary':'Summary','gname':'Group','targtype1_txt':'Target_type','weaptype1_txt':'Weapon_type','motive':'Motive'},inplace=True)\ndata.head()","143f56f7":"data.isnull().sum()","e5839e11":"data1=data[['Year','Month','Day','Country','Region','city','latitude','longitude','AttackType','Killed','Wounded','Target','Summary','Group','Target_type','Weapon_type','Motive']]\ndata1.head()","3104c76e":"#correlation map\nf,ax = plt.subplots(figsize=(25, 18))\nsns.heatmap(data1.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","44d568f7":"data['Group'].value_counts().head(11)","6bbe0df1":"data1['Country'].value_counts().head()","b22f183a":"data1['Region'].value_counts().head()","02bbfb1e":"print('Maximum people killed in an attack are: ',data1['Killed'].max(),'\\nCountry:',data1.loc[data1['Killed'].idxmax()].Country)\nprint('Minimum people killed in an attack are: ',data1['Killed'].min(),'\\nCountry:',data1.loc[data1['Killed'].idxmin()].Country)\n","9adfc04d":"#Line Plot\ndata1.Killed.plot(kind='line',color='g',label='Killed',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata1.Wounded.plot(color = 'r',label = 'Wounded',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","e37f1411":"# Scatter Plot \ndata1.plot(kind='scatter', x='Killed', y='Wounded',alpha = 0.5,color = 'red')\nplt.xlabel('Killed')              # label = name of label\nplt.ylabel('Wounded')\nplt.title('Killed Wounded Scatter Plot')            # title = title of plot\nplt.show()","fe12bf5a":"data1.Killed.plot(kind = 'hist',bins = 13,range= (0,13))\n#plt.clf()\nplt.show()","bca1b108":"#Number Of Terrorist Activities By Region\nplt.subplots(figsize=(17,7))\nsns.countplot('Region',data=data,palette='PRGn',edgecolor=sns.color_palette('dark',7),order=data['Region'].value_counts().index)\nplt.xticks(rotation=30)\nplt.title('Number Of Terrorist Activities By Region')\nplt.show()","5c4f5729":"terror_region=pd.crosstab(data.Year,data.Region)\nterror_region.plot(color=sns.color_palette('Set2',12))\nfig=plt.gcf()\nfig.set_size_inches(17,7)\nplt.show()","fd2eacfe":"#Number Of Terrorist Activities Each Year\nplt.subplots(figsize=(17,7))\nsns.countplot('Year',data=data, palette='gist_heat_r',edgecolor=sns.color_palette('dark',7))\nplt.xticks(rotation=90)\nplt.title('Number Of Terrorist Activities Each Year')\nplt.show()","4669c1da":"plt.subplots(figsize=(18,6))\nsns.barplot(data['Country'].value_counts()[:15].index,data['Country'].value_counts()[:15].values,palette='YlOrBr_r')\nplt.title('Top Affected Countries')\nplt.show()","c05f1645":"sns.barplot(data['Group'].value_counts()[1:15].values,data['Group'].value_counts()[1:15].index,palette=('BrBG_r'))\nplt.xticks(rotation=90)\nfig=plt.gcf()\nfig.set_size_inches(10,8)\nplt.title('Terrorist Groups with Highest Terror Attacks')\nplt.show()","80ab6f0f":"**Data arrangement for make process**","327f8e58":"### First five region with Highest Terrorist Attacks","8cea7ff6":"## Most effective terrorist groups","011dc93c":"**Data arrange for see data clearly**","4198b2f5":"**Find total 'NaN' value each features**","2bf00eb6":"## Terrorist activity by region","1a46c5a1":"## Terrorist activity by country","2967f842":"  ## Getting Data  \n  \n Some situation we should use encoding method.Otherwise we can not call data","d000f565":"**Correlation Map**","7b32394d":"## Some Analysis","d9284391":"### First five country with Highests Terrorist Attacks","8f039224":"### The 10 most effective terrorist groups . (Except  unknown groups)","1c97bcf2":"# Simply Data Analysis for  Global Terrorism","7d08c39c":"**First 5 data relationship correlation**"}}