{"cell_type":{"f3a9782f":"code","08285adb":"code","a475a835":"code","e092beec":"code","0a48811a":"code","1fc70ba0":"code","a75b8027":"code","2e89e4fc":"code","206e0c13":"code","da66e2b3":"code","82089c1b":"code","a7e1d957":"code","7de62a66":"code","7a935850":"code","14fd10a6":"code","c9a3ae54":"code","175ce56e":"code","bea9b6de":"code","186debb2":"code","6480d3ff":"code","b9535a5c":"code","dca12555":"markdown","e6703797":"markdown","1b034b4b":"markdown","2c8e9178":"markdown","cad3f927":"markdown","1fda49a4":"markdown","2b907c91":"markdown","63b0414c":"markdown","0129dd6b":"markdown","3257b2bd":"markdown","013458e3":"markdown","fb968613":"markdown","f736a562":"markdown","c45c0390":"markdown","29fdf633":"markdown","06e3b219":"markdown","cbbecadc":"markdown","19facc87":"markdown","cbb21073":"markdown","0019a765":"markdown","90a5b744":"markdown","f800ed39":"markdown"},"source":{"f3a9782f":"import warnings\nwarnings.filterwarnings('ignore')\n\nimport numpy as np, pandas as pd\nimport matplotlib.pyplot as plt, seaborn as sns\nimport matplotlib.gridspec as gridspec\n%matplotlib inline","08285adb":"inp0 = pd.read_csv(\"..\/input\/finance-accounting-courses-udemy-13k-course\/udemy_output_All_Finance__Accounting_p1_p626.csv\")","a475a835":"#glance at the columns and types of the data\ninp0.info()","e092beec":"#glance at the data\ninp0.head()","0a48811a":"inp0.drop([\"id\",\"url\",\"discount_price__currency\",\"price_detail__currency\",\"is_wishlisted\"],axis = 1,inplace = True)\ninp0.drop([\"discount_price__price_string\",\"price_detail__price_string\"],axis = 1,inplace = True)\ninp0.drop('created',axis = 1, inplace = True)","1fc70ba0":"mis_val = 100*inp0.isnull().sum()\/inp0.shape[0]\nmis_val = mis_val.reset_index(name = 'Mis_perc')\n\nplt.figure(figsize = [8,5])\nplt.barh(mis_val['index'], mis_val['Mis_perc'])\na = np.arange(0,12,2)\nb = [\"{}%\".format(i) for i in a]\nplt.xticks(a,b)\nplt.xlabel(\"$Percentage of Missing Values$\")\nplt.ylabel(\"$Attributes in dataset$\")\nplt.title(\"Missing Values comparision across attribues\")\nplt.show()","a75b8027":"inp0.price_detail__amount.fillna(value = 0, inplace = True)\n\ninp0['Discount'] = 100*(inp0['price_detail__amount'] - inp0[\"discount_price__amount\"])\/inp0['price_detail__amount'] if inp0[\"discount_price__amount\"] is not np.nan else np.nan","2e89e4fc":"inp0['PublishedYear'] = inp0.published_time.apply(lambda x: x[:4])\ninp0['PublishedMonth'] = inp0.published_time.apply(lambda x: x[5:7])\ninp0.drop('published_time',axis = 1, inplace = True)","206e0c13":"fig = plt.figure(figsize = [10,6])\ngs = gridspec.GridSpec(3,3)\nf_ax1 = fig.add_subplot(gs[0, :])\nplt.sca(f_ax1)\nsns.boxplot(x = 'num_subscribers',data = inp0)\nplt.title(\"Distribution for number of subscribers\")\nf_ax2 = fig.add_subplot(gs[1:,:])\nplt.sca(f_ax2)\nsns.distplot(inp0['num_subscribers'],bins = 100, hist_kws = {\"edgecolor\":\"white\"})\nplt.ylabel('density')\nplt.show()","da66e2b3":"inp0[inp0.num_subscribers > 150000][\"title\"]","82089c1b":"inp0.is_paid.value_counts(normalize = True).plot.pie(figsize = [5,5], explode = [0.2,0.] )\nplt.show()","a7e1d957":"fig = plt.figure(figsize = [10,6])\ngs = gridspec.GridSpec(3,3)\nf_ax1 = fig.add_subplot(gs[0, :])\nplt.sca(f_ax1)\nsns.boxplot(x = 'avg_rating',data = inp0)\nplt.title(\"Distribution for average rating\")\nf_ax2 = fig.add_subplot(gs[1:,:])\nplt.sca(f_ax2)\nsns.distplot(inp0['avg_rating'],bins = 10, hist_kws = {\"edgecolor\":\"white\"})\nplt.ylabel('density')\nplt.show()","7de62a66":"fig = plt.figure(figsize = [10,6])\ngs = gridspec.GridSpec(3,3)\nf_ax1 = fig.add_subplot(gs[0, :])\nplt.sca(f_ax1)\nsns.boxplot(x = 'num_reviews',data = inp0)\nplt.title(\"Distribution for number of reviews\")\nf_ax2 = fig.add_subplot(gs[1:,:])\nplt.sca(f_ax2)\nsns.distplot(inp0['num_reviews'],bins = 100, hist_kws = {\"edgecolor\":\"white\"})\nplt.ylabel('density')\nplt.show()","7a935850":"fig = plt.figure(figsize = [10,6])\ngs = gridspec.GridSpec(3,3)\nf_ax1 = fig.add_subplot(gs[0, :])\nplt.sca(f_ax1)\nsns.boxplot(x = 'price_detail__amount',data = inp0)\nplt.title(\"Distribution for price of the courses\")\nf_ax2 = fig.add_subplot(gs[1:,:])\nplt.sca(f_ax2)\nsns.distplot(inp0['price_detail__amount'],bins = 50, hist_kws = {\"edgecolor\":\"white\"})\nplt.ylabel('density')\nplt.show()","14fd10a6":"fig = plt.figure(figsize = [10,6])\ngs = gridspec.GridSpec(3,3)\nf_ax1 = fig.add_subplot(gs[0, :])\nplt.sca(f_ax1)\nsns.boxplot(x = 'Discount',data = inp0)\nplt.title(\"Distribution for Discount percentages\")\nplt.show()","c9a3ae54":"inp0.PublishedYear.value_counts().plot.barh(figsize = [8,4])\nplt.title('Count of the courses published')\nplt.show()","175ce56e":"inp0.PublishedMonth.value_counts().plot.barh(figsize = [8,4],width = 0.5)\nplt.title('Count of the courses published')\nplt.show()","bea9b6de":"res = inp0[['num_subscribers','avg_rating','num_reviews','num_published_lectures','price_detail__amount','Discount']].corr()\n\nsns.heatmap(res, annot = True, cmap = 'RdYlGn')\nplt.show()","186debb2":"def q5(x):\n    return np.quantile(x,0.05)\ndef q90(x):\n    return np.quantile(x,0.9)","6480d3ff":"fig = plt.figure(figsize = [10,10])\ngs = gridspec.GridSpec(2,2)\nf_ax1 = fig.add_subplot(gs[0, 0])\nplt.sca(f_ax1)\nsns.boxplot(x = 'is_paid',y = 'avg_rating',data = inp0)\nplt.title(\"Rating for paid and free courses\")\nf_ax2 = fig.add_subplot(gs[0,1])\nplt.sca(f_ax2)\nsns.boxplot(x = 'is_paid', y = 'num_published_lectures', data = inp0)\nplt.title(\"Number of lectures for free and paid lectures\")\nf_ax3 = fig.add_subplot(gs[1,0])\nsns.barplot(x = 'is_paid', y = 'avg_rating', data = inp0, estimator = q5)\nplt.title(\"5th Quantile Rating for paid and free courses\")\nf_ax4 = fig.add_subplot(gs[1,1])\nsns.barplot(x = 'is_paid',y = 'num_published_lectures', data = inp0, estimator = q90)\nplt.title(\"90th Quantile Lectures for paid and free courses\")\nplt.show()","b9535a5c":"inp0['lec_cat'] = pd.qcut(inp0.num_published_lectures, q = [0, .25, .75, 1], labels = ['low','medium','high'])\n\nfig = plt.figure(figsize = [11,10])\ngs = gridspec.GridSpec(2,2)\nax1 = fig.add_subplot(gs[0,0])\nplt.sca(ax1)\nsns.boxplot(x = 'lec_cat', y = 'avg_rating', data = inp0)\nax2 = fig.add_subplot(gs[0,1])\nplt.sca(ax2)\nsns.boxplot(x = 'lec_cat', y = 'price_detail__amount', data = inp0)\nf_ax3 = fig.add_subplot(gs[1,0])\nsns.barplot(x = 'lec_cat', y = 'avg_rating', data = inp0, estimator = q5)\nplt.title(\"5th Quantile Rating for lecture categories\")\nplt.show()","dca12555":"## Number of courses published per years\n\nThere courses published increases gradually with maximum number published is in `2018` and `2020`","e6703797":"### Discount\n\nThe discount on the courses ranging from `40%` to `95%`","1b034b4b":"### Average Rating\n\nThe average rating for most of the courses span from around `2.7` to `5`. A pattern can be observed from the distribution plot that people mostly rate when they like the course expalins why more mass is concentrated towards rights and there is also quite a number of ratings at 0. We can draw a conclusion that people tend to rate when they like(towards higher rating) or hate the course(towards low rating)","2c8e9178":"## Univariate Analysis\n\nIn this segment we will study the behaviours of the single variables\n\n#### Number of Subscribers\n\nThe number of subscribers span from `0` to almost `370000` with the median `533`","cad3f927":"### More to Come!\n\n### This is my first python notebook, please support, thanks","1fda49a4":"As the number of lectures increases the rating usually increases","2b907c91":"Most popular courses with more than 150k subscribers are","63b0414c":"### Adding Year and Month Columns","0129dd6b":"Average rating are usually better for free courses and number of lectures are high for the paid courses","3257b2bd":"## Data Cleaning\n\n### Removing the redundent columns\n\nRemoving the columsn id, url, discount_price_currency, price_detail_currency as they are not usefull to our further analysis","013458e3":"# Udemy Finance courses - EDA","fb968613":"## Number of courses published per month\n\nThe maximum number of courses are published during April, May during the holidays, and the least number of courses published during christmas","f736a562":"Dealing with the missing values in 6 columns and upon closer inspection we can see that where ever the course is freely available  `price_detail_amount`, `discount_price_amount` columns contains null values and when there is no discount offered on the course the last three columns shows null. So, we will fill the price column with 0\n\nAnd creating a column Discount, which gives the percentage of the discount","c45c0390":"## Importing Modules and Data","29fdf633":"### Number of reviews\n\nNumber of reviews like number of subscribers is highly skewed with minimum at `0`, maximum at `78k` and median is `24`","06e3b219":"### Correlation between variables","cbbecadc":"We observe that there is high correlation between number of reviews and number of subscribers and as the price for a course goes up we observe that the discount is also goes usually up","19facc87":"### Prices for the Courses\n\nThere are 96.3% paid courses, the distribution of the prices is shown below. The price ranges from the `0` to `12800` with the median value `3200` rupees","cbb21073":"#### Paid vs Free\n\nOut of total courses we can notice that most of them (`96.3`) are paid","0019a765":"### Binning the number of lectures to low, medium, high","90a5b744":"Inspecting the data frame and looking at the data types","f800ed39":"### Number of Missing values"}}