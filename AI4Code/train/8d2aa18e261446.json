{"cell_type":{"9526decf":"code","0bb1b525":"code","ed99bf6f":"code","bba60906":"code","7e4a9935":"code","7671e8cd":"code","61c1a510":"code","68ee00de":"code","001c341e":"code","b8fa737a":"code","1db26392":"markdown","559b96e7":"markdown","aa946855":"markdown","086575ce":"markdown","bc8ea1d4":"markdown","448c312c":"markdown","e092ab4c":"markdown"},"source":{"9526decf":"import tensorflow.keras as keras\nfrom keras.applications import *\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom keras import layers\nfrom tensorflow.keras.layers import Dense, Dropout, Flatten\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Dropout\nfrom tensorflow.keras.layers import BatchNormalization\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom keras.optimizers import Adam, SGD, RMSprop\nfrom tensorflow.keras.callbacks import History\nimport matplotlib.pyplot as plt\nimport numpy as np","0bb1b525":"datagen = ImageDataGenerator(\n    rescale = 1.0\/255,\n    shear_range=0.2,\n    zoom_range=0.2,\n    horizontal_flip = True,\n    validation_split=0.1\n)\n\nbatch_size = 32\nnum_classes = 2\nimage_size = 150","ed99bf6f":"train_generator = datagen.flow_from_directory(\n    '..\/input\/colorectal-cancer\/data\/train',\n    target_size = (image_size, image_size),\n    batch_size = batch_size,\n    class_mode = 'binary',\n    subset='training'\n)\n\ndev_generator = datagen.flow_from_directory(\n    '..\/input\/colorectal-cancer\/data\/test',\n    target_size = (image_size, image_size),\n    batch_size = batch_size,\n    class_mode = 'binary',\n    subset='validation'\n)","bba60906":"sample = train_generator.next();\nplt.imshow(sample[0][0])\ntrain_generator.reset()","7e4a9935":"INIT_LR = 0.001\nepochs=2","7671e8cd":"model = Sequential()\nmodel.add(Conv2D(64,(3,3)\n        ,input_shape=(image_size,image_size,3)\n        ,activation='relu'))\n\nmodel.add(Conv2D(64,(3,3)\n        ,input_shape=(image_size,image_size,3)\n        ,activation='relu'))\n\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n#model.add(Dropout(0.25))\n\nmodel.add(Conv2D(128,(3,3)\n        ,input_shape=(image_size,image_size,3)\n        ,activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n#model.add(Dropout(0.2))\n\nmodel.add(Conv2D(128,(3,3)\n        ,input_shape=(image_size,image_size,3)\n        ,activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n#model.add(Dropout(0.3))\n\nmodel.add(Conv2D(256,(3,3)\n        ,input_shape=(image_size,image_size,3)\n        ,activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n#model.add(Dropout(0.3))\n\nmodel.add(Conv2D(512,(3,3)\n        ,input_shape=(image_size,image_size,3)\n        ,activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.2))\n\nmodel.add(Flatten())\nmodel.add(Dense(256,activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(Dropout(0.1))\nmodel.add(Dense(1,activation='sigmoid'))\n\n#model.compile(loss='binary_crossentropy',\n #             optimizer= 'SGD',\n  #            metrics=['accuracy'])\nmodel.summary()","61c1a510":"opt = tf.keras.optimizers.Adam(0.0001)\nmodel.compile(optimizer=opt,loss='binary_crossentropy', metrics=['accuracy'])\n","68ee00de":"history=model.fit(\n    train_generator,\n    epochs=20,\n    validation_data=dev_generator)","001c341e":"metrics = history.history\n\nplt.subplot(211)\n\nplt.plot(metrics['acc'],color='blue')\nplt.plot(metrics['val_acc'],color='green')\n\nplt.subplot(212)\n\nplt.plot(metrics['loss'],color='yellow')\nplt.plot(metrics['val_loss'],color='red')","b8fa737a":"model_json = model.to_json()\nwith open(\"model.json\", \"w\") as json_file:\n    json_file.write(model_json)","1db26392":"# Colorectal Classification using CNN\n\nThis kernel is a demonstration of using CNN with keras on tensorflow to classify if an image of a cell has Malaria or not.","559b96e7":"### Visualize\nLet us inspect an image from the dataset.","aa946855":"### Input Data\nUsing `flow_from_directory` from keras lets us easily import the images into our script. It automatically lables the images according to the folder names.","086575ce":"### Define the Model\nThe model is as follows.","bc8ea1d4":"### Data Augmentation\nHere, I use `ImageDataGenerator` from keras.","448c312c":"### Visualize the results","e092ab4c":"### Time to Train!"}}