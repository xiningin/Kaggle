{"cell_type":{"05757076":"code","c4cc1079":"code","e41687b1":"code","be224c52":"code","73f427d9":"code","8e2e10bd":"code","5a66a568":"code","7324833f":"code","cc9a74a3":"code","d21c41ec":"code","fbdc5cf0":"code","fbfa5762":"code","3165d9fa":"code","3878c64b":"code","12f6cd61":"code","b5ed9455":"code","2827368e":"markdown","0ea65c3d":"markdown","3ca6d8fb":"markdown","5133fcbb":"markdown","44f92a89":"markdown","c6487e3f":"markdown","a2a2f528":"markdown","2f4a1b31":"markdown","41fb8b8e":"markdown","0fa717db":"markdown","30964215":"markdown"},"source":{"05757076":"# importing the necessary libraries\/packages.\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression","c4cc1079":"# Reading the data.\n\nlocation = \"..\/input\/graduate-admissions\/Admission_Predict.csv\"\ndata = pd.read_csv(location)\ndata","e41687b1":"# Checking if our data has null values or NAN's.\n\ndata.isnull().any()","be224c52":"# Checking the data type of all the columns.\n\ndata.dtypes","73f427d9":"# Replacing the whitespaces with underscore to prevent errors while processing data.\n\ndata.columns = data.columns.str.replace(\" \", \"_\")\ndata.columns","8e2e10bd":"# Plotting the graph between GRE_Score and Chance_of_Admit_.\n\nplt.figure(figsize=[10,10])\nsns.regplot(x=data[\"GRE_Score\"], y=data[\"Chance_of_Admit_\"])\nplt.title(\"Graph showing chances of admission VS GRE scores\")","5a66a568":"# Plotting the graph between TOEFL_Score and Chance_of_Admit_.\n\nplt.figure(figsize=[10,10])\nsns.regplot(x=data[\"TOEFL_Score\"], y=data[\"Chance_of_Admit_\"])\nplt.title(\"Graph showing chances of admission VS TOEFL Score\")","7324833f":"# Checking the University_Rating column. \n\ndata[\"University_Rating\"].describe()","cc9a74a3":"# Plotting the graph between University_Rating and Chance_of_Admit_.\n\ndata_uni_rank = data.groupby(\"University_Rating\", as_index=False).Chance_of_Admit_.mean()\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=data_uni_rank[\"University_Rating\"], y=data_uni_rank[\"Chance_of_Admit_\"])\nplt.title(\"Graph showing chance of admission VS University rating\", size=15)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.xlabel(\"University_Rating\", size=20)\nplt.ylabel(\"Chance_of_Admit_\", size=20)","d21c41ec":"# Plotting the graph between SOP and Chance_of_Admit_.\n\ndata_SOP = data.groupby(\"SOP\",as_index=False).Chance_of_Admit_.mean()\n\nplt.figure(figsize=(13,8))\nsns.lineplot(data = data_SOP[\"SOP\"])\nplt.title(\"Graph showing chance of admission VS SOP rating\", size=15)\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.xlabel(\"Chance_of_Admit_\", size=15)\nplt.ylabel(\"SOP rating\", size=15)","fbdc5cf0":"# Plotting the graph between LOR and Chance_of_Admit_.\n\nplt.figure(figsize=(13,8))\nsns.regplot(x = data[\"LOR_\"], y = data[\"Chance_of_Admit_\"])\nplt.title(\"Graph showing chance of admission VS LOR rating\", size=15)\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.xlabel(\"LOR rating\", size=15)\nplt.ylabel(\"Chance_of_Admit_\", size=15)","fbfa5762":"# Plotting the graph between CGPA and Chance_of_Admit_.\n\nplt.figure(figsize=(13,8))\nsns.regplot(x = data[\"CGPA\"], y = data[\"Chance_of_Admit_\"])\nplt.title(\"Graph showing chance of admission VS CGPA\", size=15)\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.xlabel(\"CGPA\", size=15)\nplt.ylabel(\"Chance_of_Admit_\", size=15)","3165d9fa":"# Checking the Research column.\n\ndata[\"Research\"].describe()","3878c64b":"# Plotting the graph between Research and Chance_of_Admit_.\n\nplt.figure(figsize=(13,8))\nsns.barplot(x=data[\"Research\"], y=data[\"Chance_of_Admit_\"])\nplt.title(\"Graph showing chance of admission VS research\", size=15)\nplt.xticks(size=15)\nplt.yticks(size=15)\nplt.xlabel(\"research(1 is yes, 0 is none)\", size=15)\nplt.ylabel(\"Chance_of_Admit_\", size=15)","12f6cd61":"# Distributing the data into X and y variable. \n\ny = data[\"Chance_of_Admit_\"]\ny = (y*100).astype(int)\n\nX = data.drop(\"Chance_of_Admit_\", axis=1)\nX = X.astype(int)\n\n# Splitting the data into training and testing data.\n\ntrain_X, test_X, train_y, test_y = train_test_split(X, y, test_size=0.2)","b5ed9455":"# Defining the model.\n\nmodel = LinearRegression(copy_X=True, fit_intercept=True, n_jobs=200, normalize=True)\n\n# Fitting the model with training data.\n\nmodel.fit(train_X, train_y)\n\n# Checking the accuracy of our model.\n\nmodel.score(test_X, test_y)*100","2827368e":"# Data Cleaning","0ea65c3d":"# SOP rating and Chance of Admit","3ca6d8fb":"# Graduate_admission analysis and prediction with LinearRegression.\n\n\nThe summary of this kernel:\n\n* Data Cleaning\n\n* GRE Score and Chance of Admit\n\n* TOEFL Score and Chance of Admit  \n\n* University Rating and Chance of Admit\n\n* SOP rating and Chance of Admit\n\n* LOR rating and Chance of Admit\n\n* CGPA and Chance of Admit\n\n* Research experience and Chance of Admit\n\n* Predictions with LinearRegression","5133fcbb":"# University Rating and Chance of Admit","44f92a89":"# CGPA and Chance of Admit","c6487e3f":"# LOR rating and Chance of Admit","a2a2f528":"# Predictions with LinearRegression","2f4a1b31":"If you like my kernel please **UPVOTE**. This encourages me to share more of my work. \n\n","41fb8b8e":" # GRE Score and Chance of Admit","0fa717db":"# Research experience and Chance of Admit","30964215":"#  TOEFL Score and Chance of Admit "}}