{"cell_type":{"879524d2":"code","2af57d8c":"code","84bfc62f":"code","89e2ae93":"code","5d23d4b6":"code","f250c9d7":"code","bda335f7":"code","9ca7c125":"code","6adbcc31":"code","0ded0046":"code","85d23040":"code","4b6e41b9":"code","53554e0e":"code","3a6adaa6":"code","c71e2c47":"code","8d25a613":"code","8e3c972f":"code","a4a8d360":"code","a0cabad4":"code","4fb55ff0":"code","0202cede":"code","5c6fa927":"code","b48e822e":"code","ffe3f9c1":"code","efbff963":"code","26053f60":"code","5dcfd553":"code","64727acb":"code","ecb97589":"code","159d3410":"code","3ecb903d":"code","4d33e3ea":"code","178bebeb":"code","59717c8b":"code","2661bbb3":"code","8ef3f428":"markdown"},"source":{"879524d2":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()","2af57d8c":"#dataset with some mistakes fixed\/removed\ndf = pd.read_csv('\/kaggle\/input\/video-game-speedrun-and-tas-world-record-times\/f_dataset.csv')\ndf.drop('Unnamed: 0',axis=1,inplace=True)\ndf","84bfc62f":"#coding time, age and nb_of_runs to categorical variables\n#nb_of_runs\ndf['Unpopular'] = df['nb_of_runs'].apply(lambda x: 1 if x<=3 else 0)\ndf['Somehow_Popular'] = df['nb_of_runs'].apply(lambda x: 1 if x>3 and x<=7 else 0)\ndf['Popular'] = df['nb_of_runs'].apply(lambda x: 1 if x>7 and x<=19 else 0)\ndf['Very_Popular'] = df['nb_of_runs'].apply(lambda x: 1 if x>19 else 0)\n\n#age\ndf['Young'] = df['nb_of_runs'].apply(lambda x: 1 if x<=21 else 0)\ndf['Somehow_Old'] = df['nb_of_runs'].apply(lambda x: 1 if x>21 and x<=28 else 0)\ndf['Old'] = df['nb_of_runs'].apply(lambda x: 1 if x>28 and x<=31 else 0)\ndf['Very_Old'] = df['nb_of_runs'].apply(lambda x: 1 if x>31 else 0)\n\ndf","89e2ae93":"print(\"TAS times (in seconds) repartition :\")\ndf.TAS_time.describe()","5d23d4b6":"sns.histplot(data=df,x='TAS_time')","f250c9d7":"print('WR times (in seconds) repartition :')\ndf.time.describe()","bda335f7":"sns.histplot(data=df,x='time')","9ca7c125":"print('time difference (in seconds) repartition :')\ndf.time_difference.describe()","6adbcc31":"sns.histplot(data=df,x='time_difference')","0ded0046":"print('% of time difference repartition :')\ndf['%_of_difference'].describe()","85d23040":"sns.histplot(data=df,x='%_of_difference')","4b6e41b9":"sns.histplot(data=df,x='%_of_difference',hue='Unpopular')","53554e0e":"sns.histplot(data=df,x='%_of_difference',hue='Somehow_Popular')","3a6adaa6":"sns.histplot(data=df,x='%_of_difference',hue='Popular')","c71e2c47":"sns.histplot(data=df,x='%_of_difference',hue='Very_Popular')","8d25a613":"print('Game ages (in years) repartition :')\ndf['age'].describe()","8e3c972f":"sns.histplot(data=df,x='age')","a4a8d360":"df['main_platform'].describe()","a0cabad4":"#  Compute the correlation matrix\ncorr = df.corr()\n\n# Generate a mask for the upper triangle\nmask = np.triu(np.ones_like(corr, dtype=bool))\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(11, 9))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(230, 20, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","4fb55ff0":"sns.jointplot(x=\"time\", y=\"TAS_time\", data=df, kind='reg')","0202cede":"sns.regplot(x=df[df['Very_Popular'] == 1]['time'], y=df[df['Very_Popular'] == 1]['TAS_time'])","5c6fa927":"sns.regplot(x=df[df['Popular'] == 1]['time'], y=df[df['Popular'] == 1]['TAS_time'])","b48e822e":"sns.regplot(x=df[df['Somehow_Popular'] == 1]['time'], y=df[df['Somehow_Popular'] == 1]['TAS_time'])","ffe3f9c1":"sns.regplot(x=df[df['Unpopular'] == 1]['time'], y=df[df['Unpopular'] == 1]['TAS_time'])","efbff963":"sns.regplot(x=df[df['time'] < 1000]['time'], y=df[df['time'] < 1000]['TAS_time'])","26053f60":"df['time'].describe()","5dcfd553":"#coding time to a categorical variable\ndf['Short'] = df['time'].apply(lambda x: 1 if x<=664.833 else 0)\ndf['Somehow_Long'] = df['time'].apply(lambda x: 1 if x>664.833 and x<=1226 else 0)\ndf['Long'] = df['time'].apply(lambda x: 1 if x>1226 and x<=2315 else 0)\ndf['Very_Long'] = df['time'].apply(lambda x: 1 if x>2315 else 0)\n\ndf","64727acb":"sns.regplot(x=df[ (df['Very_Popular'] == 1) & (df['Short'] == 1) ]['time'], y=df[ (df['Very_Popular'] == 1) & (df['Short'] == 1) ]['TAS_time'])","ecb97589":"sns.regplot(x=df[ (df['Popular'] == 1) & (df['Short'] == 1) ]['time'], y=df[ (df['Popular'] == 1) & (df['Short'] == 1) ]['TAS_time'])","159d3410":"sns.regplot(x=df[ (df['Somehow_Popular'] == 1) & (df['Short'] == 1) ]['time'], y=df[ (df['Somehow_Popular'] == 1) & (df['Short'] == 1) ]['TAS_time'])","3ecb903d":"sns.regplot(x=df[ (df['Unpopular'] == 1) & (df['Short'] == 1) ]['time'], y=df[ (df['Unpopular'] == 1) & (df['Short'] == 1) ]['TAS_time'])","4d33e3ea":"sns.regplot(x=df[ (df['Very_Popular'] == 1) & (df['Somehow_Long'] == 1) ]['time'], y=df[ (df['Very_Popular'] == 1) & (df['Somehow_Long'] == 1) ]['TAS_time'])","178bebeb":"sns.regplot(x=df[ (df['Popular'] == 1) & (df['Somehow_Long'] == 1) ]['time'], y=df[ (df['Popular'] == 1) & (df['Somehow_Long'] == 1) ]['TAS_time'])","59717c8b":"sns.regplot(x=df[ (df['Somehow_Popular'] == 1) & (df['Somehow_Long'] == 1) ]['time'], y=df[ (df['Somehow_Popular'] == 1) & (df['Somehow_Long'] == 1) ]['TAS_time'])","2661bbb3":"sns.regplot(x=df[ (df['Unpopular'] == 1) & (df['Somehow_Long'] == 1) ]['time'], y=df[ (df['Unpopular'] == 1) & (df['Somehow_Long'] == 1) ]['TAS_time'])","8ef3f428":"It seems separating short games from longer ones will allow us to make better predictions."}}