{"cell_type":{"1d57a3e7":"code","e0a67012":"code","ea42e73c":"code","9ad33122":"code","6dc7918b":"code","ae31e55b":"code","3cb84ce2":"code","e4f24577":"code","85431f2b":"code","81cfb17d":"code","91404e3a":"code","69a75b38":"code","32788b1a":"code","a67cf02f":"code","fe9ff1dc":"code","e815bf1a":"code","ef8c279a":"code","58c4b0b2":"code","b73e2913":"code","28f529b4":"code","fb72d1f2":"code","b41c8fbc":"code","8360da61":"code","40e41e7a":"code","8ef2e699":"code","960a5c9e":"code","e5bba02b":"code","c7bdead5":"code","12198440":"code","46655fcf":"code","6564641e":"code","1f3efeab":"code","39740986":"code","649fbe6e":"code","3ed8e119":"code","4545713d":"code","43fd8758":"code","2f1018d4":"code","0a3506c7":"code","1840cc9b":"code","0b65d982":"markdown","a137a858":"markdown","94c232c7":"markdown","7c30e8b7":"markdown","36f51e05":"markdown"},"source":{"1d57a3e7":"import numpy as np\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\npd.set_option(\"display.max_columns\",None)\nsns.set(rc={'figure.figsize':(12,8)})","e0a67012":"df_train = pd.read_csv('..\/input\/covid19-global-forecasting-week-5\/train.csv')\ndf_test = pd.read_csv('..\/input\/covid19-global-forecasting-week-5\/test.csv')\nprint(df_train.shape)\nprint(df_test.shape)","ea42e73c":"df_train","9ad33122":"df_test","6dc7918b":"df_train.info()","ae31e55b":"# check missing value\nmissing_value_train = df_train.isnull()\nsns.heatmap(data=missing_value_train,center=1)","3cb84ce2":"df_train['Country_Region'].value_counts()","e4f24577":"df_train['Province_State'].groupby(df_train[\"Country_Region\"]).value_counts()","85431f2b":"df_train[\"Target\"].value_counts()","81cfb17d":"xx=df_train[\"TargetValue\"].groupby(df_train[\"Target\"]).sum()\nprint(xx)\n#xx.plot.pie(autopct='%.1f%%',radius=1.2)\nplt.pie(xx,autopct='%.1f%%',radius=1.2,labels=df_train[\"Target\"].unique())\nplt.legend()","91404e3a":"sns.histplot(data=df_train['Weight'])","69a75b38":"sns.lineplot(data=df_train[\"Population\"])","32788b1a":"qq=df_train[\"Country_Region\"].value_counts().head(15)\nsns.barplot(x=qq,y=qq.index)","a67cf02f":"qq=df_train[\"Province_State\"].value_counts().head(60)\nsns.barplot(x=qq,y=qq.index)","fe9ff1dc":"qq=df_train[\"County\"].value_counts().head(50)\nsns.barplot(x=qq,y=qq.index)","e815bf1a":"largest_df = df_train.groupby(\"Country_Region\",as_index=False)[\"TargetValue\"].sum()\nlargest_df = largest_df.nlargest(10,\"TargetValue\")\ntrend_df = df_train.groupby([\"Date\",\"Country_Region\"],as_index=False)[\"TargetValue\"].sum()\nlineplot_df = pd.merge(trend_df,largest_df,how=\"inner\",on=\"Country_Region\")\nlineplot_df.rename(columns={\"Country_Region\":\"country\",\"TargetValue_x\":\"cases\"},inplace=True)","ef8c279a":"lineplot_df[\"Date\"]=pd.to_datetime(lineplot_df[\"Date\"])\nsns.lineplot(data=lineplot_df,x=\"Date\",y=\"cases\",hue=\"country\",style=\"country\")","58c4b0b2":"df_train=df_train.drop(columns=['Id','County','Province_State','Country_Region'])\ndf_test=df_test.drop(columns=['ForecastId','County','Province_State','Country_Region'])","b73e2913":"df_train.head()","28f529b4":"df_test.head()","fb72d1f2":"print(df_test.isnull().sum())\nprint(df_train.isnull().sum())","b41c8fbc":"df_train[\"Date\"]=pd.to_datetime(df_train[\"Date\"])\ndf_test[\"Date\"]=pd.to_datetime(df_test[\"Date\"])","8360da61":"df_train[\"day\"]=df_train[\"Date\"].dt.day\ndf_train[\"month\"]=df_train[\"Date\"].dt.month\ndf_train[\"dayofweek\"]=df_train[\"Date\"].dt.dayofweek\ndf_test[\"day\"]=df_test[\"Date\"].dt.day\ndf_test[\"month\"]=df_test[\"Date\"].dt.month\ndf_test[\"dayofweek\"]=df_test[\"Date\"].dt.dayofweek","40e41e7a":"df_train=df_train.drop(columns=[\"Date\"])\ndf_test=df_test.drop(columns=[\"Date\"])","8ef2e699":"df_train.head()","960a5c9e":"from sklearn.preprocessing import OrdinalEncoder\nencoder_train=OrdinalEncoder()\nencoder_test=OrdinalEncoder()\ndf_train[\"Target\"]=encoder_train.fit_transform(df_train[[\"Target\"]])\ndf_test[\"Target\"]=encoder_test.fit_transform(df_test[[\"Target\"]])","e5bba02b":"print(encoder_train.categories_)\nprint(encoder_test.categories_)","c7bdead5":"from sklearn.model_selection import train_test_split\ntarget=df_train[[\"TargetValue\"]]\ndf_train=df_train.drop(columns=[\"TargetValue\"])\nx_train,x_test,y_train,y_test=train_test_split(df_train,target,test_size=0.2,random_state=24)","12198440":"###polynomial regression###\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.pipeline import Pipeline\n\npoly_fea=PolynomialFeatures(degree=6)\nx_train_poly=poly_fea.fit_transform(x_train)\npoly_reg=LinearRegression()\npipe=Pipeline([(\"scale\",MinMaxScaler()),(\"poly_reg\",poly_reg)])\npipe.fit(x_train_poly,y_train)\nprediction=pipe.predict(poly_fea.transform(x_test))","46655fcf":"plt.figure(figsize=(12,8))\nplt.plot(y_test,y_test,color='red')\nplt.scatter(y_test,prediction)\nplt.xlabel('y test',fontsize=15)\nplt.ylabel('prediction',fontsize=15)\nplt.title('Polynomial Regression',fontsize=14)\nplt.show()","6564641e":"from sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nprint(r2_score(y_test,prediction))\nprint(np.sqrt(mean_squared_error(y_test,prediction)))","1f3efeab":"###random forest###\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.ensemble import RandomForestRegressor\n\nmodel=RandomForestRegressor(n_jobs=-1)\nmodel.set_params(n_estimators=200)\npipe=Pipeline([(\"scaler\",MinMaxScaler()),(\"ran_forest\",model)])\n\npipe.fit(x_train,y_train)\nprediction=pipe.predict(x_test)","39740986":"plt.figure(figsize=(12,8))\nplt.plot(y_test,y_test,color='red')\nplt.scatter(y_test,prediction)\nplt.xlabel('y test',fontsize=15)\nplt.ylabel('prediction',fontsize=15)\nplt.title('Random Forest Regressor',fontsize=14)\nplt.show()","649fbe6e":"from sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nprint(r2_score(y_test,prediction))\nprint(np.sqrt(mean_squared_error(y_test,prediction)))","3ed8e119":"df_test.index.name='Id'\ndf_test","4545713d":"df_test_prediction=pipe.predict(df_test)\ndf_test_prediction","43fd8758":"pred_list=[int(x) for x in df_test_prediction]\noutput=pd.DataFrame({'Id':df_test.index, 'TargetValue':pred_list})\noutput","2f1018d4":"a=output.groupby(['Id'])['TargetValue'].quantile(q=0.05).reset_index()\nb=output.groupby(['Id'])['TargetValue'].quantile(q=0.5).reset_index()\nc=output.groupby(['Id'])['TargetValue'].quantile(q=0.95).reset_index()\na.columns=['Id','q0.05']\nb.columns=['Id','q0.5']\nc.columns=['Id','q0.95']\na=pd.concat([a,b['q0.5'],c['q0.95']],1)\na['Id'] =a['Id']+ 1\na","0a3506c7":"sub=pd.melt(a, id_vars=['Id'], value_vars=['q0.05','q0.5','q0.95'])\nsub['variable']=sub['variable'].str.replace(\"q\",\"\", regex=False)\nsub['ForecastId_Quantile']=sub['Id'].astype(str)+'_'+sub['variable']\nsub['TargetValue']=sub['value']\nsub=sub[['ForecastId_Quantile','TargetValue']]\nsub.reset_index(drop=True,inplace=True)\nsub","1840cc9b":"sub.to_csv(\"submission.csv\",index=False)","0b65d982":"**Submission**","a137a858":"**Wuhan Virus forecasting**","94c232c7":"**ML models**","7c30e8b7":"**EDA**","36f51e05":"**Preprocessing**"}}