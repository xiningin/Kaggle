{"cell_type":{"d65646dd":"code","d6e0774b":"code","1abee722":"code","7f1eb5fb":"code","5b0f2c4b":"code","e4385997":"code","af2405b1":"code","5ee9449a":"code","b5cd9a89":"code","c2126c7e":"code","55b744f0":"code","1d2acba9":"code","6a7b6c21":"code","761dc537":"code","cbb287d3":"code","0c16badf":"code","a57b5ba0":"code","6f9cba6b":"code","89b0d72d":"code","afc28936":"code","65308e2e":"markdown"},"source":{"d65646dd":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/updated-netflix-stock-price-all-time\/netflix.csv')\nnetflix.head()","d6e0774b":"netflix=netflix[['Date','Close']]\nnetflix.head()","1abee722":"netflix.info()","7f1eb5fb":"!pip install pycaret-ts-alpha","5b0f2c4b":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","e4385997":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","af2405b1":"netflix = netflix.asfreq('d')\nnetflix.index","5ee9449a":"netflix.head()","b5cd9a89":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","c2126c7e":"data=netflix.Close\ndata","55b744f0":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","1d2acba9":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","6a7b6c21":"## Create a model manually\nmodel = exp.create_model(\"arima\")\nmodel","761dc537":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","cbb287d3":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","0c16badf":"tuned_model = exp.tune_model(model,optimize = 'MAPE')\ntuned_model","a57b5ba0":"exp.predict_model(tuned_model)","6f9cba6b":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","89b0d72d":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","afc28936":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","65308e2e":"# "}}