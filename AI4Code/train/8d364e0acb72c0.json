{"cell_type":{"0bddda1d":"code","8ef81c84":"code","f0de677b":"code","edc33638":"code","fb8192e7":"code","730a1793":"code","9f6afa1a":"code","970e0167":"code","1ab4af43":"code","128ebef8":"code","c3a2be3a":"code","08ec6a8a":"code","07f56a55":"code","2bce4cd6":"code","677adcf2":"code","8f4cf670":"code","b708c1f7":"code","1131b869":"markdown","0738c0aa":"markdown","08555623":"markdown"},"source":{"0bddda1d":"import numpy as np\nimport pandas as pd\nimport random\nimport category_encoders as ce\n\nfrom sklearn.metrics import classification_report, accuracy_score, confusion_matrix\nfrom sklearn.metrics import plot_confusion_matrix\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import ShuffleSplit\nfrom sklearn.model_selection import StratifiedKFold\n\nfrom sklearn.ensemble import RandomForestRegressor\n\n#from sklearn.linear_model import LogisticRegression\n#from xgboost import XGBClassifier\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt","8ef81c84":"data0 = pd.read_csv('..\/input\/iris\/Iris.csv')\ndata0[0:2].T","f0de677b":"print(data0['Species'].unique())","edc33638":"data2=pd.get_dummies(data0, columns=['Species'])\ndata2","fb8192e7":"n=len(data0)\nprint(n)\nN=list(range(n))\nrandom.shuffle(N)","730a1793":"print(data2.columns.tolist())","9f6afa1a":"data2.info()","970e0167":"dataX=data2.drop(['Id','Species_Iris-setosa','Species_Iris-versicolor','Species_Iris-virginica'],axis=1)\ndataY=data2['Species_Iris-versicolor']","1ab4af43":"dataX=np.array(dataX)\ndataY=np.array(dataY)","128ebef8":"trainX=dataX[N[0:(n\/\/10)*1]]\ntestX=dataX[N[(n\/\/10)*1:]]\ntrainY=dataY[N[0:(n\/\/10)*1]]\ntestY=dataY[N[(n\/\/10)*1:]]","c3a2be3a":"X = trainX\ny = trainY","08ec6a8a":"clf = RandomForestRegressor()","07f56a55":"ss = ShuffleSplit(n_splits=5,train_size=0.5,test_size =0.5,random_state=0) \n\nfor train_index, test_index in ss.split(X): \n    X_train, X_test = X[train_index], X[test_index]\n    Y_train, Y_test = y[train_index], y[test_index]\n    clf.fit(X_train, Y_train) \n    print(clf.score(X_test, Y_test))","2bce4cd6":"PRED=clf.predict(testX)\nprint(PRED[0:10])\nANS=testY\nprint(ANS[0:10])","677adcf2":"PRED","8f4cf670":"ANS","b708c1f7":"from sklearn.metrics import roc_curve,roc_auc_score\nfpr, tpr, thresholds = roc_curve(ANS, PRED, drop_intermediate=False)\n\nplt.figure(figsize = (8,6))\nplt.plot(fpr, tpr, marker='o')\nplt.title('ROC curve')\nplt.xlabel('FPR: False positive rate')\nplt.ylabel('TPR: True positive rate')\nplt.grid()","1131b869":"# Modeling","0738c0aa":"# Data Preparation","08555623":"# Evaluation"}}