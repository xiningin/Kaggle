{"cell_type":{"1c5af142":"code","87cf120d":"code","001f706f":"code","d1eb8b3a":"code","ad4d9763":"code","fd85995d":"code","f1932c5e":"markdown","6d02bd83":"markdown","1afae83e":"markdown"},"source":{"1c5af142":"# Function: enrich_dataset_with_time(enr_dataset, enr_date_field, *arg)\n#   Add following new features to the input dataframe\n#   - date_new: input date is written as pandas date\n#   - year: only year extracted from date\n#   - month: only month extracted from date\n#   - day: only day extracted from date\n#   - week_day: 1:monday, 2:tuesday, 3:wednesday, ... , 6:saturday, 7:sunday\n#   - week_of_year: from 1 to 52\n#   - is_weekend: 1:weekend, 0:not weekend\n#   - is_working_day: 1:working day, 0:not working day (it means weekend or holiday)\n#   - is_holiday: 1:holiday, 0:not holiday\n#   - is_first_work_day: 1:first working day of the month, 0:not first working day\n#   - is_last_work_day: 1:last working day of the month, 0:not last working day\n# Input: \n#   - pandas dataframe (enr_dataset)\n#   - name of the column which has date (enr_date_field), source of all new features\n#   - list (enr_holidays), optional, if you feed it working days will be updated and is_holiday feature will be added\n# Output:\n#   - pandas dataframe, the same dataset with new columns\n# Sample Calling:\n#   holidays = [\"2011-1-1\", \"2011-1-4\", \"2011-1-6\", \"2013-7-6\", \"2012-1-2\"]\n#   enrich_dataset_with_time(dataset, \"date_column\", holidays)\n\ndef enrich_dataset_with_time(enr_dataset, enr_date_field, *arg):\n    \n    d = pd.DatetimeIndex(enr_dataset[enr_date_field])\n    c = \"date_new\"\n    \n    enr_dataset[c] = d.date\n    enr_dataset[\"year\"] = d.year\n    enr_dataset[\"month\"] = d.month\n    enr_dataset[\"day\"] = d.day\n    enr_dataset[\"week_day\"] = d.weekday + 1\n    enr_dataset[\"week_of_year\"] = d.weekofyear\n    enr_dataset[\"is_weekend\"] = 0\n    enr_dataset[\"is_working_day\"] = 1\n    enr_dataset.loc[enr_dataset[\"week_day\"] == 6, \"is_weekend\"] = 1\n    enr_dataset.loc[enr_dataset[\"week_day\"] == 7, \"is_weekend\"] = 1\n    enr_dataset.loc[enr_dataset[\"week_day\"] == 6, \"is_working_day\"] = 0\n    enr_dataset.loc[enr_dataset[\"week_day\"] == 7, \"is_working_day\"] = 0\n\n    if len(arg) == 1:\n        enr_holidays = pd.DataFrame(arg[0], columns=[c])\n        enr_holidays[c] = pd.DatetimeIndex(enr_holidays[c]).date\n        enr_holidays[\"is_holiday\"] = 1\n        enr_dataset = pd.merge(enr_dataset, enr_holidays, how='left', on=[c, c])\n        enr_dataset[\"is_holiday\"].fillna(0, inplace=True)\n        enr_dataset[\"is_holiday\"] = enr_dataset[\"is_holiday\"].astype(\"int\")\n        enr_dataset.loc[enr_dataset[\"is_holiday\"] == 1, \"is_working_day\"] = 0\n\n    temp = enr_dataset[enr_dataset[\"is_working_day\"] == 1]    \n    temp = pd.DataFrame(temp.groupby([\"year\", \"month\"]).agg(\"min\").reset_index()[c])\n    temp[\"is_first_work_day\"] = 1\n    enr_dataset = pd.merge(enr_dataset, temp, how='left', on=[c, c])\n    enr_dataset[\"is_first_work_day\"].fillna(0, inplace=True)\n    enr_dataset[\"is_first_work_day\"] = enr_dataset[\"is_first_work_day\"].astype(\"int\")\n\n    temp = enr_dataset[enr_dataset[\"is_working_day\"] == 1]    \n    temp = pd.DataFrame(temp.groupby([\"year\", \"month\"]).agg(\"max\").reset_index()[c])\n    temp[\"is_last_work_day\"] = 1\n    enr_dataset = pd.merge(enr_dataset, temp, how='left', on=[c, c])\n    enr_dataset[\"is_last_work_day\"].fillna(0, inplace=True)\n    enr_dataset[\"is_last_work_day\"] = enr_dataset[\"is_last_work_day\"].astype(\"int\")\n\n    return enr_dataset\n    ","87cf120d":"import pandas as pd","001f706f":"dataset = pd.read_csv('..\/input\/dataset_time_series.csv')\ndataset.head()","d1eb8b3a":"a = enrich_dataset_with_time(dataset, \"date_column\")\na.head()","ad4d9763":"holidays = [\"2011-1-1\", \"2011-1-4\", \"2011-1-6\", \"2013-7-6\", \"2012-1-2\"]","fd85995d":"b = enrich_dataset_with_time(dataset, \"date_column\", holidays)\nb.head()","f1932c5e":"This notebook contains one function: enrich_dataset_with_time.\n\nThe function enriches time series datasets with the new features. ","6d02bd83":"### Abstract","1afae83e":"## Adding New Features for Time Series"}}