{"cell_type":{"fbc98dc5":"code","3375926f":"code","61bf3937":"code","95a4871d":"code","350ec9f4":"code","4fa33cc5":"code","4d172ea3":"code","1b4caabb":"code","f1b01443":"code","e69e1bd2":"code","9a86461f":"code","fd37a64a":"code","5a29978c":"code","59bc3fa3":"code","da2322a3":"code","1e92b83d":"code","9e5b924f":"code","ba4e7ec5":"code","ccbf842b":"code","984d60bd":"code","87403b8c":"code","35a79ba6":"code","06a2796b":"code","8daa4638":"code","d43676c6":"code","2d73dac0":"code","da0c3ef0":"code","5cc63d77":"code","d5cfef35":"code","3856f80e":"code","b6b9ee5d":"code","63a370a1":"code","ec1b5e51":"code","833215fd":"code","dbf36239":"code","49aa88e8":"code","70a6436c":"code","5439f9e4":"code","6aa951a0":"code","3f046fbd":"code","f804c549":"code","6652e3e4":"code","fe4c0da7":"code","54951ce5":"code","0b6b62d1":"code","75458c39":"code","c36f1081":"code","27533ece":"code","08fe7632":"code","36676adc":"code","77121fc0":"code","5586de1d":"code","e747c051":"code","95dc784e":"code","b37d2a96":"code","eacd5f26":"code","4d8eb1da":"code","0fa004b5":"code","a76076a0":"code","a5ea2fff":"code","bf2ad02c":"code","abe43659":"code","e8a44d1d":"code","fbdb4a02":"code","b867932e":"code","573e7e1f":"code","245d29fe":"markdown","957401f5":"markdown","9f2741ad":"markdown","3e448ced":"markdown","3382595b":"markdown","37a24dde":"markdown","5c883b39":"markdown","15b855b7":"markdown","3daa53b7":"markdown","59377240":"markdown","80fb8dbd":"markdown","f3ed5d54":"markdown","53c3895b":"markdown","a2c5e4a9":"markdown","966a808f":"markdown","95dfd989":"markdown","b99c6192":"markdown","619f6567":"markdown","52517788":"markdown","17485436":"markdown","a43286d1":"markdown","2c499280":"markdown","e5132960":"markdown","d18a160f":"markdown","d5afc432":"markdown","8860bb14":"markdown","21c2af48":"markdown","b420c888":"markdown","3c551d9d":"markdown","e1b0361c":"markdown","240adf33":"markdown","3805b37b":"markdown","8e8dc1f4":"markdown","53556302":"markdown","185a9d2b":"markdown","56c8a612":"markdown","b1b29d29":"markdown","f832f45e":"markdown","b54eb1cf":"markdown","7e9345df":"markdown","d1c5d10e":"markdown"},"source":{"fbc98dc5":"# \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438\nimport os\nimport numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn import metrics\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom datetime import datetime, timedelta\nfrom textblob import TextBlob  # \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0442\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043e\u0442\u0437\u044b\u0432\u043e\u0432\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u043a\u043e\u043c\u0444\u043e\u0440\u0442\u043d\u043e\u0433\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0442\u0430\u0431\u043b\u0438\u0446\npd.set_option('max_colwidth', 120)\npd.set_option('display.width', 500)\npd.set_option('display.max_rows', 40)\npd.set_option('display.max_columns', 50)\n\n# \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0444\u0430\u0439\u043b\u043e\u0432 \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3375926f":"# \u0424\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c RANDOM_SEED, \u0447\u0442\u043e\u0431\u044b \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u044b \u0431\u044b\u043b\u0438 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u043c\u044b \u0434\u043b\u044f \u0432\u0441\u0435\u0445!\nRANDOM_SEED = 42","61bf3937":"def creatre_columns_NAN(data, list_columns):\n    \"\"\"\u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u043e\u0434\u0430\u0451\u0442\u0441\u044f \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0438 \u0414\u0424, \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0441 \u043d\u0443\u043b\u044f\u043c\u0438 \u0438 \u0435\u0434\u0438\u043d\u0438\u0446\u0430\u043c\u0438,\n    \u0433\u0434\u0435 1 - \u0432 \u043c\u0435\u0441\u0442\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\"\"\"\n    data_Nan = pd.DataFrame()\n    for i in list_columns:\n        data_Nan[i+'_is_NAN'] = pd.isna(data[i]).astype('uint8')\n    return data_Nan","95a4871d":"def IQR_for_column(column):\n    \"\"\"\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u0432\u0430\u0440\u0442\u0438\u043b\u0438, \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u043b\u044f \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432, \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e IQR \u0438 \n    \u0441\u0447\u0438\u0442\u0430\u0435\u0442 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 (\u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u0432 %)\"\"\"\n    perc25 = data[column].quantile(0.25)\n    perc75 = data[column].quantile(0.75)\n    IQR = perc75 - perc25\n    min_out = perc25 - 1.5*IQR\n    max_out = perc75 + 1.5*IQR\n    anomaly = len(data[data[column] > max_out]) + \\\n        len(data[data[column] < min_out])\n    print(\n        '25-\u0439 \u043f\u0435\u0440\u0446\u0435\u043d\u0442\u0438\u043b\u044c: {} |'.format(perc25),\n        '75-\u0439 \u043f\u0435\u0440\u0446\u0435\u043d\u0442\u0438\u043b\u044c: {} |'.format(perc75),\n        \"IQR: {} | \".format(IQR),\n        \"\u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432: [{}, {}].\".format(min_out, max_out))\n    print(\"\u0412\u044b\u0431\u0440\u043e\u0441\u043e\u0432, \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e IQR: {} | {:2.2%}\".format(\n        anomaly, anomaly\/len(data)))","350ec9f4":"DATA_DIR = '\/kaggle\/input\/sf-dst-restaurant-rating\/'\ndf_train = pd.read_csv(DATA_DIR+'\/main_task.csv')\ndf_test = pd.read_csv(DATA_DIR+'kaggle_task.csv')\nsample_submission = pd.read_csv(DATA_DIR+'\/sample_submission.csv')","4fa33cc5":"df_train.info()\ndisplay(df_train.sample(3))\nprint(\"\u0420\u0430\u0437\u043c\u0435\u0440 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: {}\".format(df_train.shape))","4d172ea3":"df_test.info()\ndisplay(df_test.sample(3))\nprint(\"\u0420\u0430\u0437\u043c\u0435\u0440 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u0434\u043b\u044f \u0441\u0430\u0431\u043c\u0438\u0442\u0430: {}\".format(df_test.shape))","1b4caabb":"sample_submission.info()\nsample_submission.head(5)","f1b01443":"# \u0414\u043b\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0442\u0440\u0435\u0439\u043d \u0438 \u0442\u0435\u0441\u0442 \u0432 \u043e\u0434\u0438\u043d \u0434\u0430\u0442\u0430\u0441\u0435\u0442\ndf_train['sample'] = 1  # \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u0442\u0440\u0435\u0439\u043d\ndf_test['sample'] = 0  # \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u0442\u0435\u0441\u0442\ndf_test['Rating'] = 0  # \u0432 \u0442\u0435\u0441\u0442\u0435 \u0443 \u043d\u0430\u0441 \u043d\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f Rating, \u043c\u044b \u0435\u0433\u043e \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u043f\u043e \u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u043a\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043d\u0443\u043b\u044f\u043c\u0438\n\ndata = df_test.append(df_train, sort=False).reset_index(drop=True)  # \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c","e69e1bd2":"data.info()\ndisplay(data.sample(3))\nprint(\"\u0420\u0430\u0437\u043c\u0435\u0440 \u043e\u0431\u0449\u0435\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430: {}\".format(data.shape))","9a86461f":"# \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0433\u0434\u0435 \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0438 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b\nprint(\"\u0414\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432 \u043d\u0430\u0439\u0434\u0435\u043d\u043e:\", data.duplicated(keep=False).sum())\nprint(\"\u041f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u043d\u0430\u0439\u0434\u0435\u043d\u043e:\", data.isnull().sum().sum())\n\n# \"\u041c\u0430\u0442\u0440\u0438\u0446\u0430\" \u0441 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u043c\u0438 \u0434\u043b\u044f \u043d\u0430\u0433\u043b\u044f\u0434\u043d\u043e\u0439 \u043e\u0446\u0435\u043d\u043a\u0438\nplt.subplots(figsize=(12, 7))\nsns.heatmap(data.isnull())","fd37a64a":"# C\u043e\u0437\u0434\u0430\u0451\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0434\u0440\u0443\u0433\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438, \u043e\u0442\u043c\u0435\u0447\u0430\u044e\u0449\u0438\u0435 \u043c\u0435\u0441\u0442\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\nlist_columns_with_Nan = ['Number of Reviews',\n                         'Cuisine Style', 'Price Range', 'Reviews']\n\n# \u0421\u043e\u0445\u0440\u0430\u043d\u0438\u043c \u0438\u0445 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0414\u0424, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043c \u043a data \u043f\u0435\u0440\u0435\u0434 \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c\ncolumns_NAN = creatre_columns_NAN(data, list_columns_with_Nan)\ncolumns_NAN","5a29978c":"data.drop(['Restaurant_id', 'URL_TA'], axis = 1, inplace=True)  ","59bc3fa3":"data['ID_TA'].sample(5)","da2322a3":"# \u0423\u0434\u0430\u043b\u0438\u043c \u0441\u0438\u043c\u0432\u043e\u043b \"d\" \u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 ID_TA\ndata['ID_TA'] = data['ID_TA'].apply(lambda x:x[1:])","1e92b83d":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432 \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0430\u043c\nsns.set(font_scale=1.3)\nplt.subplots(figsize=(20, 12))\nplt.xticks(ticks=range(0, 7501, 500))\nplt.title('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432 \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0430\u043c')\nsns.countplot(y=\"City\",\n              data=data,\n              order=data.City.value_counts().index,\n              color='royalblue')\nplt.xlabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432')\nplt.ylabel('\u0413\u043e\u0440\u043e\u0434')","9e5b924f":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0430\u043c \u0441\u043e \u0441\u0440\u0435\u0434\u043d\u0438\u043c\u0438 \u0438 \u043c\u0435\u0434\u0438\u0430\u043d\u043d\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u0437\u0430\u043c\u0435\u043d\u044b \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\ndata_city_mean = data.groupby('City').mean().round()\n#data_city_median = data.groupby('City').median()\ndata_city_max = data.groupby('City').max(1)\ndata_city_mean","ba4e7ec5":"data['Cuisine Style'].sample(5)","ccbf842b":"data['Cuisine Style'].fillna('[]', inplace=True)\ndata['Cuisine Style'] = data['Cuisine Style'].apply(\n    lambda x: str(x).replace('[', '').replace(']', '').replace(\"'\", '').replace(' ', '').replace('\"', ''))\ndata['Cuisine Style'] = data['Cuisine Style'].apply(lambda x: x.split(','))\ndata['Number_of_kitchen'] = data['Cuisine Style'].apply(lambda x: len(x))\n\n# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 IQR-\u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443\nIQR_for_column('Number_of_kitchen')","984d60bd":"sns.set(font_scale=1.4)\nplt.figure(figsize=(14, 6))\nplt.xticks(ticks=range(1, 25, 1))\nplt.title('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u043a\u0443\u0445\u043e\u043d\u044c')\nplt.xlabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0443\u0445\u043e\u043d\u044c')\nplt.ylabel('\u0427\u0438\u0441\u0442\u043e \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432')\nsns.histplot(data['Number_of_kitchen'], discrete=True, color='royalblue')","87403b8c":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0432\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u0435\u0435 \u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u043a\u0443\u0445\u043e\u043d\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u043e\u0441\u044c\u043c\u0438\nsns.set(font_scale=1.4)\nplt.figure(figsize=(14, 6))\nplt.xticks(ticks=range(1, 25, 1))\nplt.title('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u043a\u0443\u0445\u043e\u043d\u044c > 8')\nplt.xlabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0443\u0445\u043e\u043d\u044c')\nplt.ylabel('\u0427\u0438\u0441\u0442\u043e \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432')\nsns.histplot(data[data['Number_of_kitchen']>=9]['Number_of_kitchen'], discrete=True, color='royalblue')","35a79ba6":"print('\u0412\u0441\u0435\u0433\u043e \u0443 {} \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432 ({:.2%}) \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0430 \u0446\u0435\u043d\u043e\u0432\u0430\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f'.format(\n    data['Price Range'].isnull().sum(), \n    data['Price Range'].isnull().sum()\/len(data)))","06a2796b":"data['Price Range'].value_counts()","8daa4638":"data['Price Range'] = data['Price Range'].apply(\n    lambda x: 1 if x == '$' else 2 if x == '$$ - $$$' else 3 if x == '$$$$' else x)","d43676c6":"# \u0417\u0430\u043c\u0435\u043d\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043d\u0430 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0430\u043c (\u043e\u043a\u0440\u0443\u0433\u043b\u0438\u043c \u0434\u043e 2 \u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u044f\u0442\u043e\u0439)\ndata.loc[data['Price Range'].isnull(), 'Price Range'] = data.groupby('City').transform('mean').round(2)\ndata.groupby('City').mean()['Price Range']","2d73dac0":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432 \u043f\u043e \u0446\u0435\u043d\u0435\nsns.set(font_scale=1.25)\nplt.figure(figsize=(16, 7))\nplt.xticks(ticks=range(0, 30000, 2000))\nsns.countplot(y=data['Price Range'], color='royalblue', orient='v')\nplt.xlabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432')\nplt.ylabel('\u0426\u0435\u043d\u043e\u0432\u0430\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f')","da0c3ef0":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043d\u0438\u0435 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432 \u043f\u043e \u0440\u0430\u043d\u0433\u0443\nsns.set(font_scale=1.3)\nplt.subplots(figsize=(20, 7))\nsns.histplot(data['Ranking'], color='royalblue')\nplt.ylabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432')","5cc63d77":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e Ranking \u0442\u043e\u043f 10-\u0442\u0438 \u0433\u043e\u0440\u043e\u0434\u043e\u0432\nfor x in (data['City'].value_counts())[0:10].index:\n    data['Ranking'][data['City'] == x].hist(bins=100, figsize=(16,5))","d5cfef35":"# \u0421\u043e\u0437\u0434\u0430\u0451\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0441 \u043d\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0430\u043c \u0440\u0430\u043d\u0433\u043e\u043c \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432\ndata['Ranking_NORM'] = data[['City', 'Ranking']].apply(\n    lambda x: x[1]\/data_city_max.Ranking[x[0]], axis=1)","3856f80e":"# \u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043d\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c\u0443 Ranking \u0442\u043e\u043f 10-\u0442\u0438 \u0433\u043e\u0440\u043e\u0434\u043e\u0432\nfor x in (df_train['City'].value_counts())[0:10].index:\n    data['Ranking_NORM'][data['City'] == x].hist(bins=150, figsize=(16, 5))","b6b9ee5d":"print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0435 Number of Reviews: {}'.format(\n    data['Number of Reviews'].isnull().sum()))","63a370a1":"# \u0417\u0430\u043c\u0435\u043d\u0438\u043c \u043d\u0430 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u0432 \u0433\u043e\u0440\u043e\u0434\u0435\ndata['Number of Reviews'] = data[['City', 'Number of Reviews']].apply(\n    lambda x: data_city_mean['Number of Reviews'].to_dict()[x[0]] if pd.isna(x[1]) else x[1], axis=1)\n\nIQR_for_column('Number of Reviews')\n\n# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u043e\u0442\u0437\u044b\u0432\u043e\u0432\nsns.set(font_scale=1.3)\nplt.subplots(figsize=(20, 7))\nsns.histplot(data['Number of Reviews'], color='royalblue')\nplt.ylabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432')","ec1b5e51":"data['log Number of Reviews'] = np.log(data['Number of Reviews'] + 1)\nIQR_for_column('log Number of Reviews')\nsns.set(font_scale=1.3)\nplt.subplots(figsize=(20, 7))\nsns.histplot(data['log Number of Reviews'], color='royalblue')\nplt.ylabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432')","833215fd":"def change_reviews(data, df_columns):\n    \"\"\" \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u0414\u0424 \u0438 \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0441 \u043e\u0442\u0437\u044b\u0432\u0430\u043c\u0438.\n    \u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043d\u043e\u0432\u044b\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0432 \u0414\u0424:\n    Review_1 - c \u0442\u0435\u043a\u0441\u0442\u043e\u043c \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043e\u0442\u0437\u044b\u0432\u0430;\n    Review_2 - \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u0442\u0437\u044b\u0432\u0430;\n    How_long_ago_1 - \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0434\u043d\u0435\u0439 \u043d\u0430\u0437\u0430\u0434 \u043d\u0430\u043f\u0438\u0441\u0430\u043d \u043f\u0435\u0440\u0432\u044b\u0439 \u043e\u0442\u0437\u044b\u0432;\n    How_long_ago_2 - \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0434\u043d\u0435\u0439 \u043d\u0430\u0437\u0430\u0434 \u043d\u0430\u043f\u0438\u0441\u0430\u043d \u0432\u0442\u043e\u0440\u043e\u0439 \u043e\u0442\u0437\u044b\u0432;\n    Day1_2 - \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u0432 \u0434\u043d\u044f\u0445 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0438 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u0442\u0437\u044b\u0432\u0430;\n    Day_of_week_1 - \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043e\u0442\u0437\u044b\u0432\u0430;\n    Day_of_week_2 - \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u0442\u0437\u044b\u0432\u0430;\n    Month_1 - \u043c\u0435\u0441\u044f\u0446 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043e\u0442\u0437\u044b\u0432\u0430;\n    Month_2 - \u043c\u0435\u0441\u044f\u0446 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u0442\u0437\u044b\u0432\u0430\"\"\"\n    df_columns.fillna('[[], []]', inplace=True)\n    data['Two_reviews'] = df_columns.apply(lambda x: x.split('],')[0].split(\"',\"))\n    # \u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0434\u0432\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0441 \u0442\u0435\u043a\u0441\u0442\u0430\u043c\u0438 \u043e\u0442\u0437\u044b\u0432\u043e\u0432\n    data['Review_1'] = data['Two_reviews'].apply(lambda x: x[0])\n    data['Review_2'] = data['Two_reviews'].apply(lambda x: x[-1])\n    data['Review_1'] = data['Review_1'].apply(\n        lambda x: x.replace('[', '').replace(\"'\", '').replace('\"', ''))\n    data['Review_2'] = data['Review_2'].apply(\n        lambda x: x.replace('[', '').replace(\"'\", '').replace('\"', ''))\n    data.drop('Two_reviews', axis=1, inplace=True)\n\n    # \u0423\u0434\u0430\u043b\u0438\u043c \u043f\u043e\u0432\u0442\u043e\u0440\u044b, \u0435\u0441\u043b\u0438 \u043e\u0442\u0437\u044b\u0432 \u0431\u044b\u043b \u043e\u0434\u0438\u043d \u0438 \u043e\u043d \u043f\u0440\u043e\u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u043b\u0441\u044f \u0432 \u0441\u0442\u043e\u043b\u0431\u0435\u0446 Review_2\n    data['Review_2'] = data[['Review_2', 'Review_1']].apply(\n        lambda x: '' if x[0] == x[1] else x[0], axis=1)\n\n    # \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0434\u0430\u0442\u0430\u043c\u0438\n    data['Days_reviews'] = df_columns.apply(\n        lambda x: x.split('],')[-1].split(\"',\"))\n    data['Day_1'] = data['Days_reviews'].apply(lambda x: x[0])\n    data['Day_2'] = data['Days_reviews'].apply(lambda x: x[-1])\n    data['Day_1'] = data['Day_1'].apply(\n        lambda x: x.replace('[', '').replace(\"'\", '').replace(']', '').replace(' ', '').replace('\"', ''))\n    data['Day_2'] = data['Day_2'].apply(\n        lambda x: x.replace('[', '').replace(\"'\", '').replace(']', '').replace(' ', '').replace('\"', ''))\n    data.drop('Days_reviews', axis=1, inplace=True)\n\n    # \u0423\u0434\u0430\u043b\u0438\u043c \u0432\u0442\u043e\u0440\u0443\u044e \u0434\u0430\u0442\u0443 (\u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442 \u043f\u0435\u0440\u0432\u043e\u0439), \u0435\u0441\u043b\u0438 \u043e\u0442\u0437\u044b\u0432 \u0431\u044b\u043b \u0432\u0441\u0435\u0433\u043e \u043e\u0434\u0438\u043d\n    data['Day_2'] = data[['Day_2', 'Review_2']].apply(\n        lambda x: '' if x[1] == '' else x[0], axis=1)\n\n    # \u041f\u0435\u0440\u0435\u0432\u0435\u0434\u0451\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442 datetime.strptime \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u044b\n    data['Day_1'] = data['Day_1'].apply(lambda x: x if len(\n        x) == 0 else datetime.strptime(x, '%m\/%d\/%Y'))\n    data['Day_2'] = data['Day_2'].apply(lambda x: x if len(\n        x) == 0 else datetime.strptime(x, '%m\/%d\/%Y'))\n\n    # C\u043e\u0437\u0434\u0430\u0451\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0438, \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0435 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0434\u043d\u0435\u0439 \u043d\u0430\u0437\u0430\u0434 \u0431\u044b\u043b\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u043e\u0442\u0437\u044b\u0432\u044b\n    data['How_long_ago_1'] = (datetime.today() - data['Day_1'])\n    data['How_long_ago_2'] = datetime.today() - data['Day_2']\n    data['How_long_ago_1'] = data['How_long_ago_1'].apply(lambda x: x.days)\n    data['How_long_ago_2'] = data['How_long_ago_2'].apply(lambda x: x.days)\n    # \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0442\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u043d\u0430 \u0441\u0440\u0435\u0434\u043d\u0435\u0435\n    data['How_long_ago_1'].fillna(\n        round(data['How_long_ago_1'].mean()), inplace=True)\n    data['How_long_ago_2'].fillna(\n        round(data['How_long_ago_2'].mean()), inplace=True)\n\n    # \u0421\u043e\u0437\u0434\u0430\u0451\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0441 \u0440\u0430\u0437\u043d\u0438\u0446\u0435\u0439 \u0432 \u0434\u0430\u0442\u0430\u0445 \u043e\u0442\u0437\u044b\u0432\u043e\u0432\n    data['Day1_2'] = abs(data['Day_1'] - data['Day_2'])\n    data['Day_1'] = data['Day_1'].fillna(0)\n    data['Day_2'] = data['Day_2'].fillna(0)\n    data['Day1_2'] = data['Day1_2'].apply(lambda x: x.days)\n    data['Day1_2'] = data['Day1_2'].fillna(0)\n\n    # \u0421\u043e\u0437\u0434\u0430\u0451\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0441 \u0434\u043d\u044f\u043c\u0438 \u043d\u0435\u0434\u0435\u043b\u0438 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u0438 \u043c\u0435\u0441\u044f\u0446\u044b\n    data['Day_of_week_1'] = data['Day_1'].apply(\n        lambda x: 0 if x == 0 else x.strftime('%A'))\n    data['Day_of_week_2'] = data['Day_2'].apply(\n        lambda x: 0 if x == 0 else x.strftime('%A'))\n    data['Month_1'] = data['Day_1'].apply(\n        lambda x: 0 if x == 0 else x.strftime('%m'))\n    data['Month_2'] = data['Day_2'].apply(\n        lambda x: 0 if x == 0 else x.strftime('%m'))\n\n    # \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438\n    data.drop('Day_1', axis=1, inplace=True)\n    data.drop('Day_2', axis=1, inplace=True)\n    data.drop('Reviews', axis=1, inplace=True)","dbf36239":"change_reviews(data, data['Reviews'])","49aa88e8":"data.sample(5)","70a6436c":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a, \u0433\u0434\u0435 \u043f\u043e \u043e\u0441\u0438 y - \u043f\u0440\u043e\u0448\u0435\u0434\u0448\u0438\u0435 \u0434\u043d\u0438 \u043e\u0442 \u043e\u0442\u0437\u044b\u0432\u0430, \u0430 \u043f\u043e x - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u0432 \u044d\u0442\u0438 \u0434\u043d\u0438.\n# \u0410 \u0434\u0435\u043d\u044c, \u043a\u043e\u0433\u0434\u0430 \u0431\u044b\u043b\u043e \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043e \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c\nfig, ax = plt.subplots()\nx = data['How_long_ago_1'].value_counts().iloc[1:]\ny = data['How_long_ago_1'].value_counts().iloc[1:].index\nfig.set_figwidth(20)\nfig.set_figheight(10)\nax.scatter(x, y, s = 3)\nax.set_title('\u041f\u0435\u0440\u0432\u044b\u0439 \u043e\u0442\u0437\u044b\u0432')\nax.set_xlabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u0437\u044b\u0432\u043e\u0432')\nax.set_ylabel('\u041f\u0440\u043e\u0448\u043b\u043e \u0434\u043d\u0435\u0439 \u043e\u0442 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0442\u0437\u044b\u0432\u043e\u0432')","5439f9e4":"data[data['How_long_ago_1'] == data['How_long_ago_1'].max()]","6aa951a0":"data.at[47913, 'How_long_ago_1'] = data['How_long_ago_1'].mean()\ndata.at[47913, 'Day_of_week_1'] = 0","3f046fbd":"fig, ax = plt.subplots()\nx = data['How_long_ago_2'].value_counts().iloc[1:]\ny = data['How_long_ago_2'].value_counts().iloc[1:].index\nfig.set_figwidth(20)\nfig.set_figheight(10)\nax.scatter(x, y, s = 3)\nax.set_title('\u0412\u0442\u043e\u0440\u043e\u0439 \u043e\u0442\u0437\u044b\u0432')\nax.set_xlabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u0437\u044b\u0432\u043e\u0432')\nax.set_ylabel('\u041f\u0440\u043e\u0448\u043b\u043e \u0434\u043d\u0435\u0439 \u043e\u0442 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0442\u0437\u044b\u0432\u043e\u0432')","f804c549":"data['Review_1'] = data['Review_1'].apply(lambda x: TextBlob(x).polarity)\ndata['Review_2'] = data['Review_2'].apply(lambda x: TextBlob(x).polarity)","6652e3e4":"data.sample(3)","fe4c0da7":"# \u0421\u043e\u0437\u0434\u0430\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441 \u0433\u043e\u0440\u043e\u0434\u0430\u043c\u0438 \u0438 \u0438\u0445 \u043f\u043b\u043e\u0449\u0430\u0434\u044c\u044e (\u0432 \u043a\u0432. \u043a\u043c)\ncity_square = {'Paris': 105.4, 'Stockholm': 188, 'London': 1572, 'Berlin': 891.68, 'Munich': 310.71, 'Oporto': 41.66,\n               'Milan': 181.67, 'Bratislava': 368, 'Vienna': 414.75, 'Rome': 1287.36, 'Barcelona': 101.3, 'Madrid': 607,\n               'Dublin': 318, 'Brussels': 32.61, 'Zurich': 91.88, 'Warsaw': 517, 'Budapest': 525.14, 'Copenhagen': 86.40,\n               'Amsterdam': 219.4, 'Lyon': 47.87, 'Hamburg': 755.09, 'Lisbon': 100.05, 'Prague': 500, 'Oslo': 454,\n               'Helsinki': 213.8, 'Edinburgh': 118, 'Geneva': 15.93, 'Ljubljana': 163.8, 'Athens': 412,\n               'Luxembourg': 51.47, 'Krakow': 327}\ndata['\u0421ity square'] = data['City'].apply(lambda x: city_square[x])","54951ce5":"# \u0421\u043e\u0437\u0434\u0430\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441 \u0433\u043e\u0440\u043e\u0434\u0430\u043c\u0438 \u0438 \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u0435\u043c \u0432 \u043d\u0438\u0445 (\u0432 \u0442\u044b\u0441. \u0447\u0435\u043b\u043e\u0432\u0435\u043a)\npopulation_in_the_\u0441ity = {'Paris': 2148, 'Stockholm': 961, 'London': 8908, 'Berlin': 3644, 'Munich': 1471, 'Oporto': 237,\n                          'Milan': 1378, 'Bratislava': 437, 'Vienna': 1897, 'Rome': 2870, 'Barcelona': 1664, 'Madrid': 3266,\n                          'Dublin': 1173, 'Brussels': 179, 'Zurich': 428, 'Warsaw': 1790, 'Budapest': 1752, 'Copenhagen': 615,\n                          'Amsterdam': 872, 'Lyon': 506, 'Hamburg': 1841, 'Lisbon': 505, 'Prague': 1301, 'Oslo': 673,\n                          'Helsinki': 655, 'Edinburgh': 488, 'Geneva': 200, 'Ljubljana': 284, 'Athens': 664,\n                          'Luxembourg': 115, 'Krakow': 779}\ndata['Population'] = data['City'].apply(lambda x: population_in_the_\u0441ity[x])","0b6b62d1":"# \u0421\u0442\u043e\u043b\u0431\u0435\u0446 - \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0440\u0430\u043d\u0433\u0430 \u043a \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044e\ndata['Rank\/Population'] = data['Ranking_NORM'] \/ data['Population']","75458c39":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443, \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u043d\u0430 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0432 \u0433\u043e\u0440\u043e\u0434\u0435 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043e\u0434\u0438\u043d \u043e\u0442\u0437\u044b\u0432 \ndata['Population\/Number of Reviews'] = data['Population'] \/ data['Number of Reviews']","c36f1081":"dummy_city = pd.get_dummies(data.City) # \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c dummy-\u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0433\u043e\u0440\u043e\u0434\u043e\u0432\ndata = pd.concat([data, dummy_city], axis=1)","27533ece":"dummy_day_1 = pd.get_dummies(data['Day_of_week_1'])  # \u0414\u0435\u043b\u0430\u0435\u043c \u0434\u0430\u043c\u043c\u0438-\u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0434\u043d\u0435\u0439 \u043d\u0435\u0434\u0435\u043b\u0438 \u0434\u043b\u044f \u043e\u0442\u0437\u044b\u0432\u043e\u0432\ndummy_day_2 = pd.get_dummies(data['Day_of_week_2'])\ndummy_day = dummy_day_1 + dummy_day_2\ndata = pd.concat([data, dummy_day], axis=1).drop([0], axis = 1)","08fe7632":"# \u0414\u0435\u043b\u0430\u0435\u043c \u0434\u0430\u043c\u043c\u0438-\u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043c\u0435\u0441\u044f\u0446\u0435\u0432 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0438\u0445 \u0432 \u0441\u0435\u0437\u043e\u043d\u044b \u0433\u043e\u0434\u0430\ndummy_season_1 = pd.get_dummies(data['Month_1'])\ndummy_season_2 = pd.get_dummies(data['Month_2'])\ndummy_season = dummy_season_1 + dummy_season_2\ndata['Winter_reviews'] =  dummy_season['12'] + dummy_season['01'] + dummy_season['02']\ndata['Spring_reviews'] =  dummy_season['03'] + dummy_season['04'] + dummy_season['05']\ndata['Summer_reviews'] =  dummy_season['06'] + dummy_season['07'] + dummy_season['08']\ndata['Autumn_reviews'] =  dummy_season['09'] + dummy_season['10'] + dummy_season['11']","36676adc":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0441 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u043c\u0438\ndata = pd.concat([data, columns_NAN], axis=1)","77121fc0":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0441 \u043f\u043e\u043b\u0438\u043d\u043e\u043c\u0438\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0438 \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f \u0433\u043e\u0440\u043e\u0434\u0430\npf = PolynomialFeatures(2)\npoly_city = pf.fit_transform(data[['\u0421ity square', 'Population']])\npoly_city = pd.DataFrame(poly_city, columns=[\n                         '1', '\u0421ity square', 'Population', '\u0421ity square^2', '\u0421ity square_Population', 'Population^2'])\n\n# \u0423\u0434\u0430\u043b\u0438\u043c \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b \u0438 \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0439 \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \"1\"\npoly_city.drop(['\u0421ity square', '1', 'Population'], axis=1, inplace=True)\ndata = pd.concat([data, poly_city], axis=1)","5586de1d":"data.sample(3)","e747c051":"# \u0423\u0434\u0430\u043b\u0438\u043c \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b (\u0442\u0443\u0442 \u044f \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043b, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0435\u043d\u044c\u0448\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 MAE \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c)\ndata = data.drop(['City', 'Cuisine Style', 'Ranking', 'Day_of_week_1', 'Day_of_week_2',\n                  'Month_1', 'Month_2', '\u0421ity square', 'Population', 'Reviews_is_NAN', \n                  'Number of Reviews', '\u0421ity square_Population', 'London', 'Population^2'], axis = 1)","95dc784e":"data.sample(5)","b37d2a96":"sns.set(font_scale=0.75)\nplt.subplots(figsize=(25, 20))\nsns.heatmap(data.drop(['sample'], axis=1).corr(), annot=True, fmt='.2f', linewidths=0.1, cmap=\"coolwarm\")","eacd5f26":"# \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u044b\u0434\u0435\u043b\u0438\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f\ntrain_data = data.query('sample == 1').drop(['sample'], axis=1)\ntest_data = data.query('sample == 0').drop(['sample'], axis=1)\n\ny = train_data.Rating.values              # \u043d\u0430\u0448 \u0442\u0430\u0440\u0433\u0435\u0442\nX = train_data.drop(['Rating'], axis=1)\n\n# \u0420\u0430\u0437\u0434\u0435\u043b\u0438\u043c \u043d\u0430 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0443\u044e \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, random_state=RANDOM_SEED)\ntest_data.shape, train_data.shape, X.shape, X_train.shape, X_test.shape","4d8eb1da":"# \u0421\u043e\u0437\u0434\u0430\u0451\u043c \u043c\u043e\u0434\u0435\u043b\u044c (\u041d\u0410\u0421\u0422\u0420\u041e\u0419\u041a\u0418 \u041d\u0415 \u0422\u0420\u041e\u0413\u0410\u0415\u041c, \u0437\u0430\u0434\u0430\u043d\u044b \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c\u0438 \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044f)\nmodel = RandomForestRegressor(n_estimators=100, verbose=1, n_jobs=-1, random_state=RANDOM_SEED)","0fa004b5":"# \u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c \u043d\u0430\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445\nmodel.fit(X_train, y_train)\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043e\u0431\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0430 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432 \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435.\n# \u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e y_pred\ny_pred = model.predict(X_test)","a76076a0":"# \u041e\u043a\u0440\u0443\u0433\u043b\u0438\u043c \u0434\u043e 0.5 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0430\ny_pred = (y_pred * 2).round()\/2\ny_pred","a5ea2fff":"# \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f (y_pred) \u0441 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u043c\u0438 (y_test), \u0438 \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043e\u043d\u0438 \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f\nprint('MAE:', metrics.mean_absolute_error(y_test, y_pred))","bf2ad02c":"# \u0432 RandomForestRegressor \u0435\u0441\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0441\u0430\u043c\u044b\u0435 \u0432\u0430\u0436\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438\nplt.rcParams['figure.figsize'] = (12, 7)\nfeat_importances = pd.Series(model.feature_importances_, index=X.columns)\nfeat_importances.nlargest(20).plot(kind='barh')","abe43659":"test_data.sample(10)","e8a44d1d":"test_data = test_data.drop(['Rating'], axis=1)","fbdb4a02":"sample_submission","b867932e":"predict_submission = model.predict(test_data)\npredict_submission = (predict_submission * 2).round()\/2\npredict_submission","573e7e1f":"sample_submission['Rating'] = predict_submission\nsample_submission.to_csv('submission.csv', index=False)\nsample_submission.head(10)","245d29fe":"\u042f\u0432\u043d\u044b\u0445 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u0434\u043b\u044f \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u0442\u0437\u044b\u0432\u0430 \u043d\u0435 \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u0442\u0441\u044f","957401f5":"\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0441\u043e\u0431\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0441\u043a\u043e\u0431\u043a\u0430\u0445 \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432\u0438\u0434\u044b \u043a\u0443\u0445\u043e\u043d\u044c \u0432 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0435. \n\u0423\u0434\u0430\u043b\u0438\u043c \u0441\u043a\u043e\u0431\u043a\u0438 \u0438 \u043a\u0430\u0432\u044b\u0447\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043a\u043e\u0435-\u0433\u0434\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0442\u0441\u044f. \u0420\u0430\u0437\u043e\u0431\u044a\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u043f\u043e \u0437\u0430\u043f\u044f\u0442\u044b\u043c \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u0438 \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0435\u0433\u043e \u0434\u043b\u0438\u043d\u0443 - \u044d\u0442\u043e \u0438 \u0431\u0443\u0434\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0443\u0445\u043e\u043d\u044c \u0432 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0435. \u0415\u0441\u043b\u0438 \u043d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445, \u0442\u043e \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0438\u043c, \u0447\u0442\u043e \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0432\u0438\u0434","9f2741ad":"## Ranking","3e448ced":"## ID_TA","3382595b":"\u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 1, 2 \u0438\u043b\u0438 3 \u0441\u043e\u043e\u0442\u0432\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0441\u0440\u0435\u0434\u043d\u0438\u0435 \u0446\u0435\u043d\u044b \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0430\u043c","37a24dde":"\u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0443 \u043d\u0430\u0441 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u043e\u0447\u0438\u0441\u0442\u043a\u0438 \u0438 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438.","5c883b39":"\u0412 [\u044d\u0442\u043e\u043c \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0438](https:\/\/www.kaggle.com\/c\/sf-dst-restaurant-rating\/leaderboard) \u043d\u0430\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u043e\u0438\u0442 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430 \u0432 TripAdvisor\n\n\n\u041f\u043e \u0445\u043e\u0434\u0443 \u0437\u0430\u0434\u0430\u0447\u0438:\n* \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0438\u043b\u0438\n* \u0421\u0434\u0435\u043b\u0430\u0435\u043c \u043f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \n* \u041f\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0441 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 (Nan)\n* \u0421\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 (Feature Engineering) \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u0441\u043f\u043e\u0441\u043e\u0431\u0430\u043c\u0438\n* \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u0440\u043e\u0441\u0442\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0430 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430\n\n\u041f\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435\u043b\u044c\u0437\u044f \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438-\u043e\u0431\u044a\u0435\u043a\u0442\u044b. \u041a\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044f - \u0432\u0441\u0435 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0433\u043e. \u0442. \u0435. \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0430 \u043d\u0430 EDA \u0438 Feature Engineering.","15b855b7":"# \u0422\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437","3daa53b7":"# \u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438","59377240":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0435\u0449\u0435 \u0440\u0430\u0437 \u043d\u0430 \u0442\u0435\u043f\u043b\u043e\u0432\u0443\u044e \u043a\u0430\u0440\u0442\u0443 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432","80fb8dbd":"## City","f3ed5d54":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0444\u0430\u0439\u043b\u044b, \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0447\u0442\u043e \u0438\u0437 \u0441\u0435\u0431\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442","53c3895b":"\u0423 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u043f\u0440\u0438\u0447\u0438\u043d\u044b, \u043d\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043d\u0443\u0436\u043d\u043e \u043b\u0438\u0431\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c, \u043b\u0438\u0431\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0438\u0437 \u043d\u0430\u0431\u043e\u0440\u0430 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e. \u041d\u043e \u0441 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u043c\u0438 \u043d\u0443\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0432\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c, **\u0434\u0430\u0436\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u0430\u0436\u043d\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c!**   \n\u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0435\u0440\u0435\u0434 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439 NAN \u043b\u0443\u0447\u0448\u0435 \u0432\u044b\u043d\u0435\u0441\u0435\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430 \u043a\u0430\u043a \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a ","a2c5e4a9":"\u041f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u0434\u0435\u0441\u044f\u0442\u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0445 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e:\n\n- Restaurant_id \u2014 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430 \/ \u0441\u0435\u0442\u0438 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432;\n- City \u2014 \u0433\u043e\u0440\u043e\u0434, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d;\n- Cuisine Style \u2014 \u043a\u0443\u0445\u043d\u044f \u0438\u043b\u0438 \u043a\u0443\u0445\u043d\u0438, \u043a \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043d\u0435\u0441\u0442\u0438 \u0431\u043b\u044e\u0434\u0430, \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u043c\u044b\u0435 \u0432 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0435;\n- Ranking \u2014 \u043c\u0435\u0441\u0442\u043e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0439 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d \u0441\u0440\u0435\u0434\u0438 \u0432\u0441\u0435\u0445 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432 \u0441\u0432\u043e\u0435\u0433\u043e \u0433\u043e\u0440\u043e\u0434\u0430 (\u0440\u0430\u043d\u0433);\n- Rating \u2014 \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430 \u043f\u043e \u0434\u0430\u043d\u043d\u044b\u043c TripAdvisor (\u0438\u043c\u0435\u043d\u043d\u043e \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c);\n- Price Range \u2014 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u0446\u0435\u043d \u0432 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0435;\n- Number of Reviews \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043e \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0435;\n- Reviews \u2014 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0434\u0432\u0443\u0445 \u043e\u0442\u0437\u044b\u0432\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u0441\u0430\u0439\u0442\u0435 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430;\n- URL_TA \u2014 URL \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430 \u043d\u0430 TripAdvisor;\n- ID_TA \u2014 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 TripAdvisor.","966a808f":"\u0414\u043b\u044f \u0442\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0442\u0435\u043a\u0441\u0442\u0430 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e \u043f\u0440\u043e\u0441\u0442\u0443\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 TextBlob. \u0412 \u043e\u0441\u043d\u043e\u0432\u0435 \u0435\u0451 \u0440\u0430\u0431\u043e\u0442\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0431\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u0430\u043c \u043f\u043e \u043e\u0442\u0437\u044b\u0432\u0430\u043c \u043a \u0444\u0438\u043b\u044c\u043c\u0430\u043c. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e \u0432 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u0435 \u043e\u0442 -1 \u0434\u043e 1, \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0449\u0435\u0435 \u0442\u043e\u043d\u0430\u043b\u044c\u043d\u0443\u044e \u043e\u043a\u0440\u0430\u0441\u043a\u0443 (-1 \u0434\u043b\u044f \u043d\u0435\u0433\u0430\u0442\u0438\u0432\u043d\u043e\u0439, 0 \u0434\u043b\u044f \u043d\u0435\u0439\u0442\u0440\u0430\u043b\u044c\u043d\u043e\u0439 \u0438 1 \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u043e\u0437\u0438\u0442\u0438\u0432\u043d\u043e\u0439.","95dfd989":"\u0418\u043c\u0435\u0435\u043c \u0434\u0432\u0430 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430: \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0438\u0439 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439. \u0414\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430 \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f (\u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432). \u041d\u0430 \u043e\u0441\u043d\u043e\u0432\u0430y\u0438\u0438 \u043e\u0431\u0443\u0449\u0430\u044e\u0449\u0435\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 (df_train) \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0438 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0430 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u0430 \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0438\u0437 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 (df_test). \nsample_submission - \u044d\u0442\u043e \u043f\u0440\u0438\u043c\u0435\u0440 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0438\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u043e\u0442\u0432\u0435\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043d\u0430 Kaggle. \n\u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043e\u0446\u0435\u043d\u043a\u0438 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f MAE (\u0441\u0440\u0435\u0434\u043d\u044f\u044f \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430), \u0442.\u0435. \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u0430\u043a \u0431\u043e\u043b\u0435\u0435 \u043d\u0438\u0437\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435","b99c6192":"\u0412 \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0433\u043e\u0440\u043e\u0434\u0430\u0445 \u0431\u043e\u043b\u044c\u0448\u0435 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d\u043e\u0432, \u0437\u043d\u0430\u0447\u0438\u0442 Ranking \u0443 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043e\u0447\u0435\u043d\u044c \u0432\u044b\u0441\u043e\u043a\u0438\u0439. \n\u041d\u0443\u0436\u043d\u043e \u043d\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0430\u043c, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0435 \u0431\u044b\u043b\u043e \u043e\u0448\u0438\u0431\u043e\u043a. ","619f6567":"\u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u043e\u0436\u043d\u0430\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438. \u041f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c '[[], []]'\n\n\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0442\u0438\u043f\u043e\u043c str, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043d\u0430 \u0434\u0432\u0435 \u0447\u0430\u0441\u0442\u0438 - \u0441\u0430\u043c\u0438 \u043e\u0442\u0437\u044b\u0432\u044b \u0438 \u0434\u0430\u0442\u044b. \u042d\u0442\u0438 \u0447\u0430\u0441\u0442\u0438 \u043d\u0443\u0436\u043d\u043e \u0432 \u0441\u0432\u043e\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0435\u0449\u0451 \u043d\u0430 \u0434\u0432\u0435 \u0447\u0430\u0441\u0442\u0438, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0434\u0432\u0430 \u0441\u0442\u043e\u043b\u0431\u0446\u0430 \u0441 \u0441\u0430\u043c\u0438\u043c \u0442\u0435\u043a\u0441\u0442\u043e\u043c \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u0438 \u0434\u0432\u0430 \u0441\u0442\u043e\u043b\u0431\u0446\u0430 \u0441 \u0434\u0430\u0442\u0430\u043c\u0438 \u044d\u0442\u0438\u0445 \u043e\u0442\u0437\u044b\u0432\u043e\u0432. \u041e\u0441\u0442\u0430\u0432\u0438\u043c \u043f\u0443\u0441\u0442\u044b\u0435 \u043e\u0442\u0437\u044b\u0432\u044b, \u0435\u0441\u043b\u0438 \u0438\u0445 \u043d\u0435\u0442. \u0412 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0442\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437. \n\n\u0418\u0437 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0441 \u0434\u0430\u0442\u0430\u043c\u0438 \u0432\u044b\u0442\u0430\u0449\u0438\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u043d\u044f\u0445 \u043d\u0435\u0434\u0435\u043b\u0438, \u043c\u0435\u0441\u044f\u0446\u0435, \u0440\u0430\u0437\u043d\u0438\u0446\u0435 \u0432 \u0434\u043d\u044f\u0445 \u043c\u0435\u0436\u0434\u0443 \u043e\u0442\u0437\u044b\u0432\u0430\u043c\u0438, \u0430 \u0442\u0430\u043a \u0436\u0435 \u043a\u0430\u043a \u0434\u0430\u0432\u043d\u043e \u0431\u044b\u043b\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u043e\u0442\u0437\u044b\u0432\u044b. \u0412\u0441\u0435 \u044d\u0442\u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0437\u0430\u0432\u0435\u0440\u043d\u0451\u043c \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u0434\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u043a\u043e\u043c\u0444\u043e\u0440\u0442\u043d\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043b\u0435\u0435","52517788":"# import","17485436":"# Predict TripAdvisor Rating","a43286d1":"## Cuisine Style","2c499280":"\u0421\u043e\u0433\u043b\u0430\u0441\u043d\u043e IQR \u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u0435\u0441\u0442\u044c 126 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 (\u043a\u0443\u0445\u043e\u043d\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u043e\u0441\u044c\u043c\u0438), \u043e\u0434\u043d\u0430\u043a\u043e \u043f\u0440\u0438 \u0431\u043e\u043b\u0435\u0435 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u043c \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u044f \u043d\u0435 \u043c\u043e\u0433\u0443 \u043e\u0442\u043d\u0435\u0441\u0442\u0438 \u0438\u0445 \u043a \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u043c","e5132960":"\u041d\u0435 \u0434\u043e \u043a\u043e\u043d\u0446\u0430 \u044f\u0441\u043d\u043e, \u0447\u0442\u043e \u0437\u0430 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440. \u0423\u0434\u0430\u043b\u044f\u0442\u044c \u043f\u043e\u043a\u0430 \u043d\u0435 \u0431\u0443\u0434\u0435\u043c","d18a160f":"\u0412\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u0435\u0435 \u0438\u0437\u0443\u0447\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0434\u0430\u0442\u0430\u043c (\u0434\u043d\u044f\u043c, \u043f\u0440\u043e\u0441\u0448\u0435\u0434\u043d\u0438\u043c \u043f\u043e\u0441\u043b\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u043e\u0432)","d5afc432":"# \u041e\u0431\u0437\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445","8860bb14":"# \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u044b","21c2af48":"\u041e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u043d\u0438\u0437\u043a\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439. \u0411\u043e\u043b\u0435\u0435 10% \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u0441\u043e\u0433\u043b\u0430\u0441\u0442\u043d\u043e IQR. \u041b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0447\u0442\u043e\u0431\u044b \u0441\u0433\u043b\u0430\u0434\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0438 \u0442\u0435\u043c \u0441\u0430\u043c\u044b\u043c \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0430\u043d\u043e\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439","b420c888":"\u0412\u0441\u0435\u0433\u043e 31 \u0433\u043e\u0440\u043e\u0434. \u0412 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044e \u0438 \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u044d\u0442\u0438\u0445 \u0433\u043e\u0440\u043e\u0434\u043e\u0432. \u0421\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0430\u043c, \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432","3c551d9d":"# \u0418\u0442\u043e\u0433\u0438 \u0438 \u0432\u044b\u0432\u043e\u0434\u044b","e1b0361c":"\u041d\u0435\u043b\u044c\u0437\u044f \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u044f\u0432\u043d\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u044b \u0441 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 Rating. \u041c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0442\u0430\u043a \u0436\u0435 \u0441\u0438\u043b\u044c\u043d\u043e \u043d\u0435 \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u044e\u0442\u0441\u044f.  \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u0441\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u044b \u043f\u0440\u0438 \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438.","240adf33":"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u043c\u0435\u0442\u043d\u043e \u0443\u043b\u0443\u0447\u0448\u0438\u043b\u043e\u0441\u044c, \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043b\u043e\u0441\u044c. \u041e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u0432\u0441\u0435\u0433\u043e 18 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e IQR","3805b37b":"# \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438 \u0430\u043d\u0430\u043b\u0438\u0437 (EDA)","8e8dc1f4":"## Number of Reviews","53556302":"# Submission","185a9d2b":"\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0431\u0443\u0434\u0435\u043c \"\u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u043e\" \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0430. \n\u0421\u0435\u0439\u0447\u0430\u0441 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0438\u0437\u0443\u0447\u0438\u043c \u043a\u0430\u0436\u0434\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a. \n\n\u041a\u043e\u043b\u043e\u043d\u043a\u0438 Restaurant_id \u0438 URL_TA \u043d\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u044b, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u043e\u0436\u043d\u043e \u0441\u0440\u0430\u0437\u0443 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u044d\u0442\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438","56c8a612":"# Feature Engineering","b1b29d29":"## Price Range","f832f45e":"## \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 NAN ","b54eb1cf":"\u041e\u0434\u0438\u043d \u0434\u0435\u043d\u044c \u043e\u0447\u0435\u043d\u044c \u0441\u0438\u043b\u044c\u043d\u043e \u0432\u044b\u0431\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0438\u0437 \u043e\u0431\u0449\u0435\u0439 \u043a\u0430\u0440\u0442\u0438\u043d\u044b. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0448\u0438\u0431\u043a\u0430 \u0432 \u0434\u0430\u043d\u043d\u044b\u0445, \u0438 \u043e\u0442\u0437\u044b\u0432 \u0431\u044b\u043b \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d \u043d\u0435 \u043f\u043e\u0447\u0442\u0438 17 \u043b\u0435\u0442 \u043d\u0430\u0437\u0430\u0434. \u0417\u0430\u043c\u0435\u043d\u0438\u043c \u043d\u0430 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u0441\u0442\u043e\u043b\u0431\u0446\u0435, \u0430 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438 \u043d\u0430 0.","7e9345df":"\u0412\u0441\u0435 \u0443\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442 - \u0433\u043e\u0442\u043e\u0432\u0438\u043c Submission \u043d\u0430 \u043a\u0430\u0433\u043b","d1c5d10e":"## Reviews"}}