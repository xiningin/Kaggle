{"cell_type":{"ccf29a8b":"code","236292e8":"code","4d8b68d9":"code","dcadfe5e":"code","1713440d":"code","c38178e3":"code","3e35c2aa":"code","f0687835":"code","f5b45128":"code","0adfdfd7":"code","8e3b990f":"code","5ff49fc9":"code","3da86e7b":"code","d4cbec56":"code","04fe902e":"markdown","7998eb3d":"markdown","3197169d":"markdown","562f72d7":"markdown","9b40ad6e":"markdown","001a6438":"markdown","8804d028":"markdown","a94f3c49":"markdown"},"source":{"ccf29a8b":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport re \nimport seaborn as sns\nimport os\nprint(os.listdir(\"..\/input\"))\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n# Any results you write to the current directory are saved as output.","236292e8":"pd.set_option('max_columns', None)\ndf = pd.read_csv(\"..\/input\/fifa-18-demo-player-dataset\/CompleteDataset.csv\", index_col=0)\n\nfootballers = df.copy()\nfootballers['Unit'] = df['Value'].str[-1]\nfootballers['Value (M)'] = np.where(footballers['Unit'] == '0', 0, \n                                    footballers['Value'].str[1:-1].replace(r'[a-zA-Z]',''))\nfootballers['Value (M)'] = footballers['Value (M)'].astype(float)\nfootballers['Value (M)'] = np.where(footballers['Unit'] == 'M', \n                                    footballers['Value (M)'], \n                                    footballers['Value (M)']\/1000)\nfootballers = footballers.assign(Value=footballers['Value (M)'],\n                                 Position=footballers['Preferred Positions'].str.split().str[0])","4d8b68d9":"footballers.head(100)","dcadfe5e":"df = footballers['Nationality'].value_counts()\n\niplot([\n    go.Choropleth(\n    locationmode='country names',\n    locations=df.index.values,\n    text= df.index,\n    z=df.values\n    )\n])","1713440d":"sns.lmplot(x='Value', y='Overall',hue='Position',\n          data=footballers.loc[footballers['Position'].isin(['ST', 'RW','LW'])],\n          fit_reg=False)","c38178e3":"sns.lmplot(x='Value', y='Overall', markers=['o','x','*'], hue='Position',\n          data=footballers.loc[footballers['Position'].isin(['ST','RW','LW'])],\n          fit_reg=False)","3e35c2aa":"f = (footballers\n         .loc[footballers['Position'].isin(['ST','GK'])]\n        .loc[:,['Value', 'Overall','Aggression','Position']]\n    )\nf= f[f[\"Overall\"] >= 80]\nf  = f[f[\"Overall\"] < 85]\nf['Aggression'] = f['Aggression'].astype(float)\n\nsns.boxplot(x=\"Overall\", y=\"Aggression\", hue='Position', data=f)","f0687835":"f = (\n   footballers.loc[:,['Acceleration','Aggression','Agility','Balance','Ball control']]\n    .applymap(lambda v: int(v) if str.isdecimal(v) else np.nan)\n    .dropna()\n).corr()\n\nsns.heatmap(f, annot=True)","f5b45128":"from pandas.plotting import parallel_coordinates\n\nf = (\n   footballers.iloc[:, 12:17]\n       .loc[footballers['Position'].isin(['ST','GK'])]\n       .applymap(lambda v: int(v) if str.isdecimal(v) else np.nan)\n       .dropna()\n)\nf['Position'] = footballers['Position']\nf = f.sample(200)\n\nparallel_coordinates(f, 'Position')","0adfdfd7":"pokemon = pd.read_csv(\"..\/input\/pokemon\/Pokemon.csv\", index_col=0)\npokemon.head(100)","8e3b990f":"sns.lmplot(x='Attack', y='Defense', hue='Legendary', markers=['x','o'],\n          data=pokemon,\n          fit_reg=False)","5ff49fc9":"sns.boxplot(x=\"Generation\",y=\"Total\",hue='Legendary',data=pokemon)","3da86e7b":"p = (\n   pokemon.loc[:, ['HP','Attack','Defense','Sp. Atk','Sp. Def','Speed']]\n       \n         \n).corr()\n\nsns.heatmap(p,annot=True)","d4cbec56":"p = (\n    pokemon[(pokemon['Type 1'].isin(['Fighting','Psychic']))]\n .loc[:, ['Type 1', 'Attack','Sp. Atk', 'Defense','Sp. Def']]\n)\n\nparallel_coordinates(p,'Type 1')","04fe902e":"We can pass markers to function to tell the difference between different positions in our plots.","7998eb3d":"# Exercises","3197169d":"## Grouped box plot\nWith grouping we can ask questions like: do Strikers have higher aggression than goalkeepers.","562f72d7":"## Heatmap\nThis will allows us to plot correlation between different points in the dataset.","9b40ad6e":"## Multivariate Scatter Plots\n\nWe can use visual variables to distinguish different data elements. Below we will try and see which type of offensive players get paid most. ","001a6438":"Parallel coordinates help us tell the difference between classes in the data. Above we see that strikers are rated higher than goalies in the associated variables.","8804d028":"# Summarization\n\nSummarization allows us to plot many dataset features.","a94f3c49":"# Parallel Coordinates\nThis provides an alternative way to visualize data across many variables."}}