{"cell_type":{"480136c4":"code","5518ff2f":"code","d7832fb7":"code","c23822a5":"code","b2a37788":"code","96d8cae3":"code","ff03dbbf":"code","55b404ef":"code","a13af63b":"code","e4332285":"code","c7e91435":"code","0f475b49":"code","6ab8c2e0":"markdown","d8b3bd96":"markdown","c225d40f":"markdown","68322f15":"markdown","72d327fa":"markdown","6bea49a2":"markdown","8e678172":"markdown","7b0e4a8b":"markdown","6987a248":"markdown","07d4881a":"markdown","b661750c":"markdown","dbc7b26e":"markdown","a58b4351":"markdown"},"source":{"480136c4":"\nimport numpy as np \nimport pandas as pd \n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","5518ff2f":"db = pd.read_csv('\/kaggle\/input\/musicfeatures\/data.csv')\ndb.head()","d7832fb7":"print(db.info())\nprint(db.shape)","c23822a5":"db['label'].value_counts() #the genres are equally represented","b2a37788":"db1 = db.iloc[:,1:29]\ndb1.info()","96d8cae3":"from sklearn.decomposition import PCA\npca = PCA(n_components = 3)\ndb_pca = pca.fit_transform(db1)","ff03dbbf":"pca.explained_variance_ratio_","55b404ef":"principalDf = pd.DataFrame(data = db_pca\n             , columns = ['principal component 1', 'principal component 2','principal component 3' ])","a13af63b":"finalDf = pd.concat([principalDf, db['label']], axis = 1)\nfinalDf.head()","e4332285":"import plotly.express as px\nfig = px.scatter(db_pca, x = 0, y = 1, color = finalDf['label'])\nfig.show()","c7e91435":"fig = px.scatter_3d(db_pca, x = 0, y = 1, z = 2, color = finalDf['label'])\nfig.show()","0f475b49":"loadings = pca.components_.T * np.sqrt(pca.explained_variance_)\nfeatures = db1.columns\n\nfig = px.scatter(db_pca, x=0, y=1, color= finalDf['label'])\n \nfor i, feature in enumerate(features):\n    fig.add_shape(\n        type='line',\n        x0=0, y0=0,\n        x1=loadings[i, 0],\n        y1=loadings[i, 1]\n    )\n    fig.add_annotation(\n        x=loadings[i, 0],\n        y=loadings[i, 1],\n        ax=0, ay=0,\n        xanchor=\"center\",\n        yanchor=\"bottom\",\n        text=feature,\n    )\nfig.show()","6ab8c2e0":"Now I will keep only the numeric ones:","d8b3bd96":"Not bad, it gets 98% from the first component.","c225d40f":"Rolloff, spectral_centroid, bandwidth seem to be the most important.","68322f15":"Now having a look at the loadings to better understand the weights of the original variables to the components:","72d327fa":"# 3D Representation","6bea49a2":"Let's test PCA, firstly with 3 components:","8e678172":"Let's see what type are the variables and if we have NAs:","7b0e4a8b":"**Let's have a look at a Principal Component Analysis using a 2D and 3D representation:**","6987a248":"The data I'm testing PCA on is information about different features of song extracts from multiple genres:","07d4881a":"# 2D Representation with loadings","b661750c":"Now let's check how much of a variance we're explaining:","dbc7b26e":"*(beautiful code I've found on the plotly page)*","a58b4351":"# 2D Representation"}}