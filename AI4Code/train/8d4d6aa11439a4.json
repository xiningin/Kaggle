{"cell_type":{"9c42d6ff":"code","8ccc3a8d":"code","721d233a":"code","77a7b188":"code","6cda46cb":"code","7d7dce3e":"code","d2630101":"code","0999aa6d":"code","a2f729fd":"code","bcf205be":"code","3d955740":"code","1f3a17f4":"code","2fcb7065":"code","b7ba280e":"code","becb913c":"code","a684af6d":"code","2bf8c676":"markdown","3fce8357":"markdown"},"source":{"9c42d6ff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","8ccc3a8d":"# \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\ntrain = pd.read_csv('..\/input\/application_train.csv')\ntest = pd.read_csv('..\/input\/application_test.csv')\n\ntrain.shape, test.shape, ","721d233a":"# \u5217\u540d\u3092\u8868\u793a\ntrain.columns","77a7b188":"# \u521d\u3081\u306e5\u884c\u3092\u8868\u793a\ntrain.head()","6cda46cb":"# \u5404\u5217\u306e\u30c7\u30fc\u30bf\u306e\u578b\u3092\u8868\u793a\ntrain.dtypes","7d7dce3e":"# target\u306e0\u30681\u3092\u30ab\u30a6\u30f3\u30c8\ntrain['TARGET'].value_counts()","d2630101":"# EXT\u304c\u542b\u307e\u308c\u308btrain\u306e\u5217\u3092\u30ea\u30b9\u30c8\u3067\u8868\u793a\n[col for col in train.columns if 'EXT' in col ]","0999aa6d":"# y\u306ftrain\u306eTARGET\u5217\ny = train['TARGET']\n\n# train\u3068test\u306e3\u5217\u3060\u3051\u3092\u62bd\u51fa\ntrain = train.loc[:, ['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3']]\ntest = test.loc[:, ['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3']]","a2f729fd":"# train\u306e\u521d\u3081\u306e5\u884c\u3092\u8868\u793a\ndisplay(train.head())\n\n# test\u306e\u521d\u3081\u306e5\u884c\u3092\u8868\u793a\ndisplay(test.head())","bcf205be":"# \u30e9\u30a4\u30d6\u30e9\u30ea\u306eimport\nfrom sklearn.model_selection import train_test_split\nimport lightgbm as lgb\nfrom sklearn import metrics","3d955740":"# train\u30920.8:0.2\u306b\u5206\u5272\nX_train, X_test, y_train, y_test = train_test_split(train, y, test_size=0.2, random_state=42)","1f3a17f4":"# \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\ngbm = lgb.LGBMClassifier(objective='binary',\n                         metric='auc',\n                        )\n\n# \u5b66\u7fd2\ngbm.fit(X_train, y_train,\n        eval_set = [(X_test, y_test)],\n        early_stopping_rounds=50,\n        verbose=5)\n\n# X_test\u3092\u63a8\u8ad6\ny_pred = gbm.predict_proba(X_test, num_iteration=gbm.best_iteration_)    ","2fcb7065":"y_pred","b7ba280e":"# test\u30c7\u30fc\u30bf\u3092\u63a8\u8ad6\ntarget = gbm.predict_proba(test, num_iteration=gbm.best_iteration_)[:,1]\n\n# \u30b5\u30f3\u30d7\u30eb\u30b5\u30d6\u30df\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\nsample_submit = pd.read_csv('..\/input\/sample_submission.csv')\n\n# \u30b5\u30f3\u30d7\u30eb\u30b5\u30d6\u30df\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306eTARGET\u3092target\u306b\u3059\u308b\nsample_submit['TARGET'] = target","becb913c":"sample_submit.head()","a684af6d":"# sample_submit\u3092simple_light_gbm.csv\u3068\u3057\u3066\u66f8\u304d\u51fa\u3057\nsample_submit.to_csv('simple_light_gbm.csv', index=False)","2bf8c676":"* [\uff1c\u5b9f\u8df5\uff1e\u306f\u3058\u3081\u3066\u306eKaggle\u4f53\u9a13\u8a18 \\- kurupical\u306e\u30d6\u30ed\u30b0](http:\/\/kurupical.hatenablog.com\/entry\/2018\/09\/10\/221420)\n* [validation\u7b49\u306b\u3064\u3044\u3066\u306e\u30c4\u30a4\u30fc\u30c8](https:\/\/twitter.com\/currypurin\/status\/1147841378040205314)","3fce8357":"# \u53c2\u8003"}}