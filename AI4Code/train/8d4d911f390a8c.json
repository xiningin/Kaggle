{"cell_type":{"8ee652a8":"code","ad8502e4":"code","7d698439":"code","c21516c2":"code","8ab72c7a":"code","c449f851":"code","8334ae5f":"code","26f30c4d":"code","631a5717":"code","7b8f7f9c":"code","cec60f0f":"code","b6766f7a":"code","8a80b99d":"code","7c5d1296":"code","8141ee1b":"markdown","215a4dbc":"markdown","bb1db2b4":"markdown","70b7e61e":"markdown","dbd42a94":"markdown","6f3bfea8":"markdown","65f9e62f":"markdown","e323b6ee":"markdown","1dff145c":"markdown","8f253654":"markdown","003fb385":"markdown"},"source":{"8ee652a8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import load_breast_cancer\nfrom sklearn.model_selection import train_test_split\nplt.style.use('ggplot')\n\n# Breast cancer dataset for classification\ndata = load_breast_cancer()\nprint (data.feature_names)\nprint (data.target_names)\n","ad8502e4":"df = pd.read_csv('..\/input\/data.csv')\ndf.head()","7d698439":"df.info()","c21516c2":"df.drop(df.columns[[-1, 0]], axis=1, inplace=True)\ndf.info()","8ab72c7a":"print (\"Total number of diagnosis are \", str(df.shape[0]), \", \", df.diagnosis.value_counts()['B'], \"Benign and Malignant are\",\n       df.diagnosis.value_counts()['M'])","c449f851":"df.describe()","8334ae5f":"featureMeans = list(df.columns[1:11])","26f30c4d":"import seaborn as sns\ncorrelationData = df[featureMeans].corr()\nsns.pairplot(df[featureMeans].corr(), diag_kind='kde', size=2);","631a5717":"plt.figure(figsize=(10,10))\nsns.heatmap(df[featureMeans].corr(), annot=True, square=True, cmap='coolwarm')\nplt.show()","7b8f7f9c":"bins = 12\nplt.figure(figsize=(15,15))\nplt.subplot(3, 2, 1)\nsns.distplot(df[df['diagnosis']=='M']['radius_mean'], bins=bins, color='green', label='M')\nsns.distplot(df[df['diagnosis']=='B']['radius_mean'], bins=bins, color='red', label='B')\nplt.legend(loc='upper right')\nplt.subplot(3, 2, 2)\nsns.distplot(df[df['diagnosis']=='M']['texture_mean'], bins=bins, color='green', label='M')\nsns.distplot(df[df['diagnosis']=='B']['texture_mean'], bins=bins, color='red', label='B')\nplt.legend(loc='upper right')\nplt.subplot(3, 2, 3)\nsns.distplot(df[df['diagnosis']=='M']['perimeter_mean'], bins=bins, color='green', label='M')\nsns.distplot(df[df['diagnosis']=='B']['perimeter_mean'], bins=bins, color='red', label='B')\nplt.legend(loc='upper right')\nplt.subplot(3, 2, 4)\nsns.distplot(df[df['diagnosis']=='M']['area_mean'], bins=bins, color='green', label='M')\nsns.distplot(df[df['diagnosis']=='B']['area_mean'], bins=bins, color='red', label='B')\nplt.legend(loc='upper right')\nplt.subplot(3, 2, 5)\nsns.distplot(df[df['diagnosis']=='M']['concavity_mean'], bins=bins, color='green', label='M')\nsns.distplot(df[df['diagnosis']=='B']['concavity_mean'], bins=bins, color='red', label='B')\nplt.legend(loc='upper right')\nplt.subplot(3, 2, 6)\nsns.distplot(df[df['diagnosis']=='M']['symmetry_mean'], bins=bins, color='green', label='M')\nsns.distplot(df[df['diagnosis']=='B']['symmetry_mean'], bins=bins, color='red', label='B')\nplt.legend(loc='upper right')\nplt.tight_layout()\nplt.show()","cec60f0f":"X = df.loc[:,featureMeans]\ny = df.loc[:, 'diagnosis']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)","b6766f7a":"from sklearn.naive_bayes import GaussianNB\n\nnbclf = GaussianNB().fit(X_train, y_train)\npredicted = nbclf.predict(X_test)\nprint('Breast cancer dataset')\nprint('Accuracy of GaussianNB classifier on training set: {:.2f}'.format(nbclf.score(X_train, y_train)))\nprint('Accuracy of GaussianNB classifier on test set: {:.2f}'.format(nbclf.score(X_test, y_test)))","8a80b99d":"from sklearn import metrics\n\nprint(\"Classification report for classifier %s:\\n%s\\n\"\n      % (nbclf, metrics.classification_report(y_test, predicted)))\nprint(\"Confusion matrix:\\n%s\" % metrics.confusion_matrix(y_test, predicted))","7c5d1296":"from sklearn.neighbors import KNeighborsClassifier\n\nclf = KNeighborsClassifier()\nclf.fit(X_train, y_train)\nprediction = clf.predict(X_test)\n\nprint('Breast cancer dataset')\nprint('Accuracy of GaussianNB classifier on training set: {:.2f}'.format(clf.score(X_train, y_train)))\nprint('Accuracy of GaussianNB classifier on test set: {:.2f}'.format(clf.score(X_test, y_test)))\n\nprint(\"\\n Classification report for classifier %s:\\n%s\\n\"\n      % (clf, metrics.classification_report(y_test, prediction)))\nprint(\"Confusion matrix:\\n%s\" % metrics.confusion_matrix(y_test, prediction))","8141ee1b":"# Displaying the target names in the dataset","215a4dbc":"# Pairplot is too big and complicated to understand . Lets try a heatmap","bb1db2b4":"#  Lets find the correlation between columns","70b7e61e":"# Plotting the distribution of each type of diagnosis for some of the mean features.","dbd42a94":"# Our dataset already contains the mean values of all the columns ","6f3bfea8":"# Information about the dataset - Total 33 columns\/features and no null entries","65f9e62f":"# Remove the last column .i.e the 33rd one as it is not needed","e323b6ee":"# Lets start applying Machine Learning Models","1dff145c":"# Lets know how many values for malignant and for benign type of cancer","8f253654":"# From the given information of the breast cancer dataset , we need to classify whether it is a malignant cancer or benign cancer","003fb385":"# Display first few rows of the dataset"}}