{"cell_type":{"6905f222":"code","899ff65a":"code","8e2cc22b":"code","c73161f2":"code","ce58decd":"code","7f67f6e7":"code","d91400e4":"code","21f862ae":"code","c9c474e2":"code","f474bdf3":"code","234dc9a8":"code","3e313d57":"code","e3886431":"code","bccc110f":"code","68f9e2e1":"code","0b3b7d07":"code","cc180a62":"code","38541905":"code","c79b5915":"code","162a6a4d":"code","4f9612e7":"code","5a39ca31":"code","2cf6755d":"code","fd567cb6":"code","d9213468":"code","41beac04":"code","2a2f7b26":"code","8dfeede6":"code","b0030d29":"code","48eb6b27":"code","44ccd4e9":"code","efc30cdf":"markdown","ff71e015":"markdown","7ed1c4fb":"markdown","a2ae0e46":"markdown","e529dbfd":"markdown","bfe39eba":"markdown","08970a22":"markdown","70ed5e91":"markdown","56d9e61d":"markdown","a21c3d04":"markdown","1b79290c":"markdown","128a299a":"markdown","f981cb2c":"markdown","015a39f0":"markdown","b1b54eba":"markdown","19cc108a":"markdown","0c8cf168":"markdown","6efc1568":"markdown","1e04a4da":"markdown","59197df2":"markdown","dbf53789":"markdown","bee53240":"markdown","53de2d24":"markdown","5253a0b8":"markdown","58b3cdb5":"markdown","b07eb0d5":"markdown","a515984e":"markdown","b9c8e0fa":"markdown","418cca61":"markdown","77fed474":"markdown","826be767":"markdown","df02a957":"markdown","67eb566f":"markdown"},"source":{"6905f222":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport geopandas as gpd\nimport statsmodels.formula.api as smf \nimport datetime\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","899ff65a":"# Import data as dataframe vacc\nvacc = pd.read_csv(\"\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv\")\n\n# Dropping the columns source name & source website as they are not relevant to the study\nvacc.drop(['source_name','source_website'], inplace=True, axis=1)","8e2cc22b":"# Dropping columns with no \"total vaccinations\" value\nvacc = vacc.drop(vacc[vacc.total_vaccinations.isna()].index)","c73161f2":"# Find out how many unique countries have started vaccinations\nprint(str(len(vacc[vacc.total_vaccinations > 0].country.value_counts())) + \" countries have started vaccinations\")","ce58decd":"# Find out which countries started vaccinations earliest\nvacc['date'] = pd.to_datetime(vacc['date'], utc=True)\nvacc_start = vacc.loc[vacc[vacc.total_vaccinations > 0].groupby('country')['date'].idxmin()].sort_values('date')\nvacc_start.head(5)","7f67f6e7":"# Find out which countries have most recently started vaccinations\nvacc_start.tail(5)","d91400e4":"# Cumulative distribution of vaccination start dates\nevents = pd.Series(vacc_start.date.value_counts())\nevents.index = pd.to_datetime(events.index)\nevents.sort_index(inplace=True)\n\nplt.plot(events.cumsum())\nplt.xticks(rotation=90)\nplt.title('Cumulative Frequency of Countries that have Started Vaccinations')\nplt.xlabel('Date')\nplt.ylabel('Number of Countries')\nplt.show()","21f862ae":"countries = gpd.read_file(gpd.datasets.get_path(\"naturalearth_lowres\"))\ncountries['score'] = 0\n\ncountries['score'] = np.where(countries.iso_a3.isin(vacc_start.iso_code), 1, 0)\n\ncountries.plot(column='score',legend=True, legend_kwds={'label': \"Covid-19 Vaccine Started\",'orientation': \"horizontal\"})\nplt.show()","c9c474e2":"vacc_total = vacc.loc[vacc.groupby('country')['total_vaccinations'].idxmax()].sort_values('total_vaccinations',ascending=False)\nprint(\"To date, there have been a total of \", vacc_total.total_vaccinations.sum()\/1000000, \" Million vaccinations adminstered\")","f474bdf3":"print(vacc_total.iloc[0].country, \" has administered the most vaccines, with \", vacc_total.iloc[0].total_vaccinations\/1000000, \" Million vaccinations to date\")","234dc9a8":"# Plot out which countries have performed most vaccinations in descending order\nplt.figure(figsize=(10, 4)) \nplt.bar(vacc_total.country[0:20], vacc_total.total_vaccinations[0:20])\nplt.xticks(rotation=90)\nplt.title('Top 20 Countries by Total Vaccinations')\nplt.xlabel('Country')\nplt.ylabel('Total Vaccinations (x 10Million)')\nplt.show()\n","3e313d57":"countries = gpd.read_file(gpd.datasets.get_path(\"naturalearth_lowres\"))\n\ncountries = countries.merge(vacc_total[['iso_code', 'total_vaccinations']], how = 'left',\n                left_on = 'iso_a3', right_on = 'iso_code').drop('iso_code', axis=1)\n\nfig, ax = plt.subplots(1, 1,figsize=(10,10))\n\ncountries.plot(column='total_vaccinations',legend=True,ax=ax, \n               legend_kwds={'label': \"Number of Covid-19 Vaccinations Administered\",'orientation': \"horizontal\"}, \n               missing_kwds={\"color\": \"lightgrey\"})\nplt.show()","e3886431":"vacc_total = vacc.loc[vacc.groupby('country')['total_vaccinations_per_hundred'].idxmax()].sort_values('total_vaccinations_per_hundred',ascending=False)\nprint(vacc_total.iloc[0].country, \" with \", vacc_total.iloc[0].total_vaccinations_per_hundred, \" vaccines administered per 100 population, to date\")","bccc110f":"# Find out which countries have performed most vaccinations with respect to their populations \n\nplt.figure(figsize=(10, 4)) \nplt.bar(vacc_total.country[0:20], vacc_total.total_vaccinations_per_hundred[0:20])\nplt.xticks(rotation=90)\nplt.title('Top 20 Countries by Total Vaccinations per 100 Population')\nplt.xlabel('Country')\nplt.ylabel('Total Vaccinations per 100 Population')\nplt.show()","68f9e2e1":"countries = gpd.read_file(gpd.datasets.get_path(\"naturalearth_lowres\"))\n\ncountries = countries.merge(vacc_total[['iso_code', 'total_vaccinations_per_hundred']], how = 'left',\n                left_on = 'iso_a3', right_on = 'iso_code').drop('iso_code', axis=1)\n\nfig, ax = plt.subplots(1, 1,figsize=(10,10))\n\ncountries.plot(column='total_vaccinations_per_hundred',legend=True,ax=ax, legend_kwds={'label': \"Number of Covid-19 Vaccinations Administered\",'orientation': \"horizontal\"},missing_kwds={\"color\": \"lightgrey\"})\nplt.show()","0b3b7d07":"vacc_total = vacc.loc[vacc.groupby('country')['total_vaccinations'].idxmax()].sort_values('total_vaccinations',ascending=False)\nvacc_total = pd.concat((vacc_total,vacc_total[\"vaccines\"].str.split(\", \", expand = True)),axis=1)\n\nvacc_types = vacc_total.iloc[:,13:].apply(pd.Series.value_counts).sum(axis=1).sort_values(ascending=False)\n\nprint(\"The most popular vaccine is \", vacc_types.index[0], \" with \", int(vacc_types[0]), \" countries using it\")","cc180a62":"plt.bar(vacc_types.index, vacc_types)\nplt.xticks(rotation=90)\nplt.title('Most Popular Vaccines')\nplt.xlabel('Vaccine')\nplt.ylabel('Number of Countries')\nplt.show()\n","38541905":"# How many vaccines is each country using\n\nvacc_total['vacc_brands'] = vacc_total.iloc[:,-5:].apply(lambda x: (5 - x.isnull().sum()), axis='columns')\nvacc_total = vacc_total.sort_values('vacc_brands',ascending=False)\nplt.figure(figsize=(20, 4)) \nplt.bar(vacc_total.country, vacc_total.vacc_brands)\nplt.xticks(rotation=90)\nplt.title('Total Number of Vaccine Brands Used')\nplt.xlabel('Country')\nplt.ylabel('Number of Brands')\nplt.show()\n","c79b5915":"vacc_total = vacc.loc[vacc.groupby('country')['total_vaccinations'].idxmax()].sort_values('total_vaccinations',ascending=False)\nvacc_total = pd.concat((vacc_total,vacc_total[\"vaccines\"].str.split(\", \", expand = True)),axis=1)\n\nvacc_types = vacc_total.iloc[:,13:].apply(pd.Series.value_counts).sum(axis=1).sort_values(ascending=False)\n\nframe = { 'number_of_countries': vacc_types } \nresult = pd.DataFrame(frame) \nresult['number_sold'] = 0\n\n\nfor index, row in vacc_total.iterrows():\n    if(row.iloc[-1] is None):\n        if(row.iloc[-2] is None):\n            if(row.iloc[-3] is None):\n                if(row.iloc[-4] is None):\n                    result.loc[row.iloc[-5],'number_sold'] = result.loc[row.iloc[-5],'number_sold'] + row.total_vaccinations\n                else:\n                    result.loc[row.iloc[-4],'number_sold'] = result.loc[row.iloc[-4],'number_sold'] + (1\/2*row.total_vaccinations)\n                    result.loc[row.iloc[-5],'number_sold'] = result.loc[row.iloc[-5],'number_sold'] + (1\/2*row.total_vaccinations)\n            else: \n                result.loc[row.iloc[-3],'number_sold'] = result.loc[row.iloc[-3],'number_sold'] + (1\/3*row.total_vaccinations)\n                result.loc[row.iloc[-4],'number_sold'] = result.loc[row.iloc[-4],'number_sold'] + (1\/3*row.total_vaccinations)\n                result.loc[row.iloc[-5],'number_sold'] = result.loc[row.iloc[-5],'number_sold'] + (1\/3*row.total_vaccinations)\n        else: \n            result.loc[row.iloc[-2],'number_sold'] = result.loc[row.iloc[-2],'number_sold'] + (1\/4*row.total_vaccinations)\n            result.loc[row.iloc[-3],'number_sold'] = result.loc[row.iloc[-3],'number_sold'] + (1\/4*row.total_vaccinations)\n            result.loc[row.iloc[-4],'number_sold'] = result.loc[row.iloc[-4],'number_sold'] + (1\/4*row.total_vaccinations)\n            result.loc[row.iloc[-5],'number_sold'] = result.loc[row.iloc[-5],'number_sold'] + (1\/4*row.total_vaccinations)\n    else:\n        result.loc[row.iloc[-1],'number_sold'] = result.loc[row.iloc[-1],'number_sold'] + (1\/5*row.total_vaccinations)\n        result.loc[row.iloc[-2],'number_sold'] = result.loc[row.iloc[-2],'number_sold'] + (1\/5*row.total_vaccinations)\n        result.loc[row.iloc[-3],'number_sold'] = result.loc[row.iloc[-3],'number_sold'] + (1\/5*row.total_vaccinations)\n        result.loc[row.iloc[-4],'number_sold'] = result.loc[row.iloc[-4],'number_sold'] + (1\/5*row.total_vaccinations)\n        result.loc[row.iloc[-5],'number_sold'] = result.loc[row.iloc[-5],'number_sold'] + (1\/5*row.total_vaccinations)\n        \nresult = result.sort_values('number_sold',ascending=False)\nplt.figure(figsize=(10, 4)) \nplt.bar(result.index, result.number_sold)\nplt.xticks(rotation=90)\nplt.title('Approximate Quantity of Each Vaccine Used')\nplt.xlabel('Vaccine Brand')\nplt.ylabel('Quantity Vaccinated (x 10M)')\nplt.show()\n\n","162a6a4d":"us_stats = vacc[vacc.country == 'United States']\n\nplt.figure(figsize=(10, 4)) \nplt.plot(us_stats.date, us_stats.daily_vaccinations)\nplt.xticks(rotation=90)\nplt.title('Daily number of vaccinations administered in USA')\nplt.xlabel('Date')\nplt.ylabel('Number of Vaccinations (x 1M)')\nplt.show()","4f9612e7":"us_stats = vacc[vacc.country == 'United States']\n\nplt.figure(figsize=(10, 4)) \nplt.plot(us_stats.date, us_stats.total_vaccinations)\nplt.xticks(rotation=90)\nplt.title('Total number of vaccinations administered in USA')\nplt.xlabel('Date')\nplt.ylabel('Total Vaccinations (x 10M)')\nplt.show()\n","5a39ca31":"us_stats_sliced = us_stats.loc[:,['total_vaccinations','date']]\nus_stats_sliced.head(5)","2cf6755d":"us_stats_sliced[\"t\"] = (us_stats_sliced['date'] - us_stats_sliced.date.iloc[0]).dt.days + 1\nus_stats_sliced[\"t_squared\"] = us_stats_sliced[\"t\"]*us_stats_sliced[\"t\"]\nus_stats_sliced[\"log\"] = np.log(us_stats_sliced[\"t\"])\nus_stats_sliced[\"exp\"] = np.log(us_stats_sliced[\"total_vaccinations\"])\nus_stats_sliced[\"sqrt\"] = np.sqrt(us_stats_sliced[\"t\"])","fd567cb6":"Train = us_stats_sliced.iloc[0:int(np.floor(0.8*len(us_stats_sliced))),:]\nTest = us_stats_sliced.iloc[int(np.floor(0.8*len(us_stats_sliced))):,:]","d9213468":"# Testing trend on linear model\nlinear_model = smf.ols('total_vaccinations ~ t', data=Train).fit()\npred_linear =  pd.Series(linear_model.predict(pd.DataFrame(Test['t'])))\nrmse_linear = np.sqrt(np.mean((np.array(Test['total_vaccinations'])-np.array(pred_linear))**2))\n\n# Testing trend on exponential model\nExp = smf.ols('exp ~ t', data=Train).fit()\npred_Exp = pd.Series(Exp.predict(pd.DataFrame(Test['t'])))\nrmse_Exp = np.sqrt(np.mean((np.array(Test['total_vaccinations'])-np.array(np.exp(pred_Exp)))**2))\n\n# Testing trend on quadratic model\nQuad = smf.ols('total_vaccinations ~ t + t_squared',data=Train).fit()\npred_Quad = pd.Series(Quad.predict(Test[[\"t\",\"t_squared\"]]))\nrmse_Quad = np.sqrt(np.mean((np.array(Test['total_vaccinations'])-np.array(pred_Quad))**2))\n\n# Testing trend on log model\nLog = smf.ols('total_vaccinations ~ log',data=Train).fit()\npred_Log = pd.Series(Log.predict(pd.DataFrame(Test[[\"log\"]])))\nrmse_Log = np.sqrt(np.mean((np.array(Test['total_vaccinations'])-np.array(pred_Log))**2))\n\n# Testing trend on sqrt model\nSqrt = smf.ols('total_vaccinations ~ sqrt',data=Train).fit()\npred_Sqrt = pd.Series(Sqrt.predict(pd.DataFrame(Test[[\"sqrt\"]])))\nrmse_Sqrt = np.sqrt(np.mean((np.array(Test['total_vaccinations'])-np.array(pred_Sqrt))**2))","41beac04":"data = {\"MODEL\":pd.Series([\"rmse_linear\",\"rmse_Exp\",\"rmse_Quad\",\"rmse_Log\",\"rmse_Sqrt\"]),\"RMSE_Values\":pd.Series([rmse_linear,rmse_Exp,rmse_Quad,rmse_Log,rmse_Sqrt])}\ntable_rmse=pd.DataFrame(data)\ntable_rmse","2a2f7b26":"Quad.summary()","8dfeede6":"# Preparation of input data for model prediction\n\n#us_stats_sliced.t.iloc[-1]\n\n\nt_data = pd.Series(list(range(us_stats_sliced.t.iloc[-1] + 1, us_stats_sliced.t.iloc[-1] + 150)))\n\nt_squared_data = t_data*t_data\n\npred_x = pd.DataFrame({'t':t_data, 't_squared':t_squared_data})","b0030d29":"# Prediction of when US will achieve herd immunity, where the first occurrence of total vaccination > 464m is identified\n\npred_y = Quad.predict(pred_x)\ndays_after = (pred_y > 464000000).idxmax() + 1 # to offset the first index of 0\nherd_date = us_stats.iloc[-1].date + datetime.timedelta(days=int(days_after))\n\nprint(\"The earliest date that the US will be able to achieve herd immunity is \", herd_date)","48eb6b27":"pred_y.index = pd.to_datetime(pred_y.index + 1, unit='D',origin=pd.Timestamp(us_stats.iloc[-1].date.tz_localize(None)))","44ccd4e9":"plt.figure(figsize=(10, 4)) \nplt.plot(us_stats_sliced.date, us_stats_sliced.total_vaccinations, label=\"Current Vaccinations\")\nplt.plot(pred_y.index, pred_y,'--', label=\"Predicted Vaccinations\")\nplt.plot(herd_date,pred_y[herd_date.tz_localize(None)], 'go', label=\"Point of Herd Immunity\")\nplt.legend(loc=\"upper left\")\nplt.xticks(rotation=90)\nplt.title('Total number of vaccinations administered in USA')\nplt.xlabel('Date')\nplt.ylabel('Total Vaccinations (x 100M)')\nplt.show()","efc30cdf":"# Adoption of Covid-19 Vaccines\n\nWe first look at the number of countries that have started the vaccination program","ff71e015":"First, we will look at the vaccination trend in the United States","7ed1c4fb":"Which countries are the most recent to start vaccinations?","a2ae0e46":"# Welcome to my First Notebook!\nIn this notebook, we will look at some statistics & predictions on Covid-19 Vaccinations in the following categories:\n\n1. Adoption of Covid-19 Vaccines\n    * Number of countries who have started vaccinations\n    * Early adopters of vaccination\n    * Most recent countries to begin vaccinations\n    * Trendline of vaccination adoption over time\n    * Visualization of this data on a geoplot\n2. Scale of Vaccination across Countries\n    * Total number of vaccines to date\n    * Countries with the most number of total vaccinations\n    * Countries with the highest number of vaccinations per 100 population\n3. Vaccine Popularity\n    * Most popular vaccines across countries (used in most countries)\n    * Most popular vaccines (absolute quantity of vaccines used)\n4. Predictions\n    * When can herd immunity be achieved in the US?\n5. Final Words & Considerations\n","e529dbfd":"# Final Words & Considerations\nNote that this prediction is done based on the current vaccination rate in the US, it does not take into consideration external factors such as the vaccine supply chain and vaccination capacity (manpower, facilities, etc.) in the US that may hit peak capacity in the future","bfe39eba":"Daily Vaccinations in the US","08970a22":"The RMSE scores are tabulated below:","70ed5e91":"# Predictions\n\nThis section will be focused on the United States as it has the most complete data in the dataset. However it may be replicated for any other country as desired\n\nIn this section, our main goal is to predict when we can expect the United States to administer enough vaccines to achieve herd immunity\n\nBased on studies being done, WHO is unable to determine the vaccination rate required for herd immunity of Covid-19. [WHO Article](https:\/\/www.who.int\/news-room\/q-a-detail\/herd-immunity-lockdowns-and-covid-19#:~:text=The%20percentage%20of%20people%20who,among%20those%20who%20are%20vaccinated.)\n\nOn the other hand, John Hopkins School for Public Health indicates that the vaccination rate required is approximately 70%. Thus, we will use this as the benchmark. [JHSPH Study](https:\/\/www.jhsph.edu\/covid-19\/articles\/achieving-herd-immunity-with-covid19.html)","56d9e61d":"Geomap of countries that have started covid-19 vaccinations, in terms of total number of vaccinations administered","a21c3d04":"From the chart above, it is obvious that the number of countries using each vaccine does not add up to the number of countries that have started vaccinations. This is because some countries are using more than 1 type of vaccine. \n\nThis leads us to wonder, which countries are using more than 1 type of vaccine, and how many are they using?","1b79290c":"Geomap of countries that have started covid-19 vaccinations, in terms of number of vaccinations administered per 100 population","128a299a":"For sake of simplicity, we will create a new dataframe containing only the 'date' and 'total_vaccinations' columns","f981cb2c":"We then plot the predictions in order to visualize it on top of the initial data","015a39f0":"How do the other vaccines fare in terms of popularity around the world?","b1b54eba":"What are the top 20 countries in terms of number of vaccines administered per 100 population?","19cc108a":"Based on the RMSE scores, the best model to predict the cumulative vaccinations in the US is the quadratic model. The details of the quadratic model built is summarized below:","0c8cf168":"Using this model, we will now attempt to predict when the US will be able to achieve herd immunity\n\nCurrent population in the US is 332m. \n\nTo achieve 70% vaccination rate for herd immunity, 70% * 332m = 232m of the population would need to be vaccinated\n\nSince each person requires 2 doses, the total number of vaccinations would need to be **> 464m**","6efc1568":"We will start with data preparation for this problem. We will convert all the dates into as the value 't', representing days since vaccinations started in the US","1e04a4da":"How have the cumulative number of countries adopting covid-19 vaccinations evolved over time?\nHow is this trend?","59197df2":"# Scale of Vaccination across Countries\n\nWhat is the total number of vaccinations done to date?","dbf53789":"# Vaccine Popularity\n\nWhich is the most popular vaccines around the world? This is quantified in terms of the number of countries it is being used in","bee53240":"Which countries started vaccinations first?","53de2d24":"From this, it can be observed that there is an exponential growth of vaccinations in the US","5253a0b8":"Since our main focus of this study is with regards to total vaccinations being administered, we will drop the rows where is data is not available","58b3cdb5":"Geoplot of countries that have started vaccinations","b07eb0d5":"Various models are built & trained to fit the data. Each of the RMSE scores are recorded for tabulation later.\n\nThe models tested here are:\n* Linear\n* Exponential\n* Quadratic\n* Log\n* Sqrt","a515984e":"The adjusted R-squared value for the model is very high, indicating that it is a good fit for the data. Besides that, the P value of t_squared < 0.005 shows that it is a good predictor of the total vaccinations","b9c8e0fa":"In terms of vaccine sales and absolute number of vaccines being administered, which brands are most popular?\n\nNote that for countries that purchase more than 1 type of vaccine, the total purchases are assumed to be split evenly among the types of vaccines used\n","418cca61":"Which countries have administered the most number of vaccines?","77fed474":"What are the top 20 countries in terms of total number of vaccines administered?","826be767":"We partition the data into train & test in 80:20 ratio","df02a957":"The above study shows that the United States has administered the most vaccines thus far, however their population is also large, and it will take awhile before most of the population is vaccinated. To study vaccinations on a different angle, we also wonder which countries has vaccinated most of their population.\n\nThus, we will study which countries have administered the most number of vaccines per capita? \n\nNote that since each person requires 2 doses on average, we expect a fully vaccinated country to have 200 vaccinations per 100 population\n","67eb566f":"Cumulative Vaccinations in the US"}}