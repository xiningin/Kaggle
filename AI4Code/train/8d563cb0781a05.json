{"cell_type":{"6a3f3d79":"code","dc921e6a":"code","af40fc09":"code","f8fd02dd":"code","a8dc395f":"code","db696607":"code","1c48e7b3":"code","dcc56f77":"code","b83bc689":"code","66da634f":"code","67735e66":"code","7f2b762d":"code","289f2f53":"code","7731474f":"code","ff0b9163":"code","c0a0ef60":"code","43a3925b":"code","f293cdc4":"code","637be5d7":"code","b5e5ec38":"code","bdf0b61a":"code","60af42e8":"code","b1d43d5f":"code","a1016e58":"code","e2beed0c":"code","ec083b6c":"code","1f69c76e":"code","9379ed5d":"code","cfb5f54c":"code","ff84c3e2":"code","090ae8f2":"code","b0c23178":"code","870a38d9":"code","f0cf9081":"code","c18cecc6":"code","d01fb563":"code","9877e673":"code","a1d5d6ec":"code","c7390f94":"code","582ce447":"code","7cc8f8a4":"code","eeaa94ae":"code","24782fee":"code","f04fd39c":"code","89894e59":"code","1ff35d91":"code","1f354983":"code","899dcc3b":"code","2acb5d42":"code","f0d0a455":"code","9166860d":"code","a3ea4fed":"code","ba2b7391":"code","f36337f3":"code","958aa370":"code","720eaa96":"code","9a124939":"code","a79e6609":"markdown","69bef370":"markdown","83ab0afb":"markdown","591794d4":"markdown","d1716c4e":"markdown"},"source":{"6a3f3d79":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","dc921e6a":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\n\nimport xgboost \n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\n\nfrom sklearn.metrics import accuracy_score,confusion_matrix,classification_report\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\npd.set_option('display.max_columns',None)","af40fc09":"dataset = pd.read_csv('..\/input\/telecom-users-dataset\/telecom_users.csv')","f8fd02dd":"dataset.columns","a8dc395f":"dataset.sort_values('Unnamed: 0')","db696607":"dataset = dataset.drop(['Unnamed: 0','customerID'],axis=1)","1c48e7b3":"dataset.isnull().sum()","dcc56f77":"dataset","b83bc689":"dataset.info()","66da634f":"dataset.describe(include='all')","67735e66":"numerical_features = [feat for feat in dataset.columns if dataset[feat].dtype!='O']\nnumerical_features","7f2b762d":"for feat in numerical_features:\n    print(feat,',','Unique :', len(dataset[feat].unique()))","289f2f53":"categorical_features = [feat for feat in dataset.columns if feat not in numerical_features and feat not in ['TotalCharges']+['Churn']]\ncategorical_features","7731474f":"for feat in categorical_features:\n    print(feat,',','Unique :', len(dataset[feat].unique()))","ff0b9163":"for feat in numerical_features:\n    \n    plt.figure(figsize=(9,6))\n    plt.style.use('ggplot')\n    dataset.groupby('Churn')[feat].count().plot.bar()\n    plt.xlabel('Churn',fontsize=12)\n    plt.ylabel(feat,fontsize=12)\n    plt.show()","c0a0ef60":"for feat in numerical_features:\n    \n    plt.figure(figsize=(9,6))\n    plt.style.use('ggplot')\n    dataset.groupby('Churn')[feat].mean().plot.bar()\n    plt.xlabel('Churn',fontsize=12)\n    plt.ylabel(feat,fontsize=12)\n    plt.show()","43a3925b":"for feat in categorical_features:\n    \n    plt.figure(figsize=(9,6))\n    plt.style.use('ggplot')\n    dataset.groupby('Churn')[feat].count().plot.bar()\n    plt.xlabel('Churn',fontsize=12)\n    plt.ylabel(feat,fontsize=12)\n    plt.show()","f293cdc4":"plt.figure(figsize=(10,7))\nsns.heatmap(dataset.corr(),annot=True)","637be5d7":"for feat in numerical_features:\n\n    plt.figure(figsize=(9,6))\n    plt.style.use('ggplot')\n    sns.histplot(data=dataset,x=dataset[feat],color='red',kde=True)\n    plt.xlabel('Churn',fontsize=12)\n    plt.ylabel(feat,fontsize=12)\n    plt.show()","b5e5ec38":"for feat in numerical_features:\n    data =dataset.copy()\n    if 0 in data[feat].unique():\n        pass\n    else:\n        data[feat] = np.log(data[feat])\n        \n        data.boxplot(column=feat)\n    ","bdf0b61a":"dataset[categorical_features]","60af42e8":"df =dataset.copy()","b1d43d5f":"df[categorical_features]","a1016e58":"encoding_feature = [feat for feat in categorical_features + ['Churn']]\nencoding_feature","e2beed0c":"from sklearn.preprocessing import LabelEncoder\nfor feat in encoding_feature:\n    le = LabelEncoder()\n    df[feat]= le.fit_transform(df[feat])","ec083b6c":"df","1f69c76e":"dataset = df.copy()","9379ed5d":"dataset","cfb5f54c":"plt.figure(figsize=(15,10))\nsns.heatmap(dataset.corr(),annot=True)","ff84c3e2":"dataset","090ae8f2":"X = dataset.drop(['Churn','TotalCharges'],axis=1)","b0c23178":"y = dataset['Churn']","870a38d9":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","f0cf9081":"from sklearn.linear_model import Lasso\nfrom sklearn.feature_selection import SelectFromModel","c18cecc6":"select_best_feat = SelectFromModel(Lasso(alpha=.001,random_state=101))","d01fb563":"select_best_feat.fit(X,y)","9877e673":"select_best_feat.get_support()","a1d5d6ec":"selected_feat = X.columns[(select_best_feat.get_support())]","c7390f94":"selected_feat","582ce447":"X_train= X_train[selected_feat]","7cc8f8a4":"X_test= X_test[selected_feat]","eeaa94ae":"scaler = StandardScaler()","24782fee":"X_train_scaled = scaler.fit_transform(X_train)","f04fd39c":"X_test_scaled =  scaler.fit_transform(X_test)","89894e59":"key = ['LogisticRegression','KNeighborsClassifier','SVC','RandomForestClassifier','AdaBoostClassifier','XGBClassifier']\nvalue = [LogisticRegression(),KNeighborsClassifier(),SVC(),RandomForestClassifier(),AdaBoostClassifier(),xgboost.XGBClassifier()]\n\nmodel = dict(zip(key,value))\nmodel","1ff35d91":"predictions = []\n\nfor i,k in model.items():\n    model = k\n    model.fit(X_train_scaled,y_train)\n    pred = model.predict(X_test_scaled)\n    score = accuracy_score(y_test,pred)\n    predictions.append(score)\n    print(i,score,'\\n')","1f354983":"error_rate =[]\nfor i in range(1,100):\n    knn= KNeighborsClassifier(n_neighbors=i,algorithm = 'ball_tree')\n    knn.fit(X_train,y_train)\n    knn_pred = knn.predict(X_test)\n    \n    error_rate.append(np.mean(knn_pred!= y_test))","899dcc3b":"error_rate","2acb5d42":"plt.figure(figsize=(15,10))\nplt.plot(range(1,100),error_rate,marker='o')\nplt.xlabel('range(1,50)')\nplt.ylabel('errorRate')\nplt.xticks(list(range(0, 100, 5)), fontsize=12)\n\nplt.show()\n\n","f0d0a455":"knn2= KNeighborsClassifier(n_neighbors=29, algorithm = 'ball_tree')\nknn2.fit(X_train,y_train)\nknn_pred2 = knn2.predict(X_test)","9166860d":"accuracy_score(y_test,knn_pred2)","a3ea4fed":"ada = AdaBoostClassifier(base_estimator=LogisticRegression(),\n    n_estimators=1000,\n    learning_rate=.1,\n    algorithm='SAMME.R')","ba2b7391":"ada.fit(X_train,y_train)","f36337f3":"ada.predict(X_test)","958aa370":"accuracy_score(y_test,ada.predict(X_test))","720eaa96":"\nmodel_svc=SVC(C=100,kernel='rbf').fit(X_train,y_train)\ny_pred=model_svc.predict(X_test)\nprint(model_svc)\n\n","9a124939":"accuracy_score(y_test,y_pred)","a79e6609":"# LogisticRegression\n","69bef370":"# SVC\n","83ab0afb":"# KNeighborsClassifier\n","591794d4":"# All Models Accuracy Score","d1716c4e":"# train_test_split"}}