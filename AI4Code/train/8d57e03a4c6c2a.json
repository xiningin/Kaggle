{"cell_type":{"3e8a3e0b":"code","138f4298":"code","c481280e":"code","0f948f0d":"code","9b01c9de":"code","613b2cff":"code","54263bd9":"code","9ddd2bd6":"code","d62f1e76":"code","08f0d95e":"code","c246fe33":"code","55ebe4ac":"code","1660daae":"code","8a09cc46":"code","ccc732ee":"code","230fbb8a":"code","b8af0226":"code","1f80cdb9":"code","01d4e63a":"code","0206cf5a":"code","ec5c2b62":"code","f9ab0ccd":"markdown","e629013e":"markdown","fe45595d":"markdown","9e234ba6":"markdown","214a3075":"markdown","20fad1c5":"markdown","9f20af44":"markdown"},"source":{"3e8a3e0b":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","138f4298":"training_set = pd.read_csv(\"..\/input\/titanic\/train.csv\")\nx = training_set.iloc[:,[2,4,5,6,7,9,11]].values\ny = training_set.iloc[:,1].values\n\ntest_set = pd.read_csv(\"..\/input\/titanic\/test.csv\")\nx_test = test_set.iloc[:,[1,3,4,5,6,8,10]].values","c481280e":"print(x)","0f948f0d":"print(y)","9b01c9de":"print(x_test)","613b2cff":"from sklearn.impute import SimpleImputer\nimp = SimpleImputer(missing_values = np.nan, strategy = \"most_frequent\")\nx = imp.fit_transform(x)\nx_test = imp.transform(x_test)","54263bd9":"print(x)","9ddd2bd6":"print(x_test)","d62f1e76":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nx[:,1] = le.fit_transform(x[:,1])\nx_test[:,1] = le.transform(x_test[:,1])","08f0d95e":"print(x)","c246fe33":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [6])],remainder='passthrough')\nx = np.array(ct.fit_transform(x))\nx_test = np.array(ct.transform(x_test))","55ebe4ac":"print(x)","1660daae":"print(x_test)","8a09cc46":"from sklearn.preprocessing import StandardScaler, MinMaxScaler\nsc = StandardScaler()\nx[:,[5,8]] = sc.fit_transform(x[:,[5,8]])\nx_test[:,[5,8]] = sc.transform(x_test[:,[5,8]])","ccc732ee":"print(x)","230fbb8a":"print(x_test)","b8af0226":"from sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier(n_estimators = 300, random_state =0)\nclassifier.fit(x,y)","1f80cdb9":"y_pred = classifier.predict(x_test)","01d4e63a":"print(y_pred)","0206cf5a":"passenger = test_set.iloc[:,0].values\npassenger = passenger.reshape(len(passenger), 1)\ny_pred = y_pred.reshape(len(y_pred), 1)\npredictions = np.concatenate((passenger, y_pred), axis = 1)\nprint(predictions)","ec5c2b62":"Predictions = pd.DataFrame(predictions, columns=['PassengerId', 'Survived'])\nPredictions.to_csv('predictions.csv', index=False)","f9ab0ccd":"## Take Care Of Missing Data","e629013e":"# Titanic","fe45595d":"## Importing the libraries","9e234ba6":"## Training the model on the Training set","214a3075":"## Feature Scaling","20fad1c5":"## Encode Categorical Data","9f20af44":"## Importing the dataset"}}