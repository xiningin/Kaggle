{"cell_type":{"1bd38526":"code","997d1247":"code","e29a5ae6":"code","1d4ee070":"code","7ab35a14":"code","342cc112":"code","153d65a9":"code","66ef86bd":"code","9d648d97":"code","ec369cdb":"code","8ece6004":"code","221eb164":"code","1a238d1c":"markdown","630643fe":"markdown","e3f960df":"markdown","003b5211":"markdown","54975bcf":"markdown"},"source":{"1bd38526":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","997d1247":"train_path = \"..\/input\/ventilator-pressure-prediction\/train.csv\"\ntest_path = \"..\/input\/ventilator-pressure-prediction\/test.csv\"\nsample_sub = \"..\/input\/ventilator-pressure-prediction\/sample_submission.csv\"","e29a5ae6":"# Loading the data\ntrain_data = pd.read_csv(train_path)\ntest_data = pd.read_csv(test_path) ","1d4ee070":"# First 10 rows of train_data\ntrain_data.head(10)","7ab35a14":"# Checking for missing values & size of the data\nprint(f\"Rows in training data : {train_data.shape[0]}\")\nprint(f\"Rows in test data : {test_data.shape[0]}\")\nprint(f\"Columns in train_data : {train_data.columns.tolist()}\")\nprint(\"Target column: pressure\\n\")\n\nprint(f\"Missing values in train data\\n{train_data.isna().sum().to_frame()}\\n\")\nprint(f\"Missing values in test data\\n{test_data.isna().sum().to_frame()}\\n\")\n","342cc112":"# Taking 1 ventilation cycle \nventilation_cycle = train_data[train_data['breath_id']==3]\nprint(f\"Unique value counts in each time stamp\\n{ventilation_cycle.nunique()}\\n\")","153d65a9":"def draw_1_cycle(ventilation_cycle):\n    v_id = ventilation_cycle[ventilation_cycle.u_out==1].id.values[0]\n    plt.figure(figsize=(18, 5))\n    \n    for col in ventilation_cycle.columns:\n        if col==\"id\":\n            continue\n        plt.plot(ventilation_cycle['id'], ventilation_cycle[col], label=col)\n        \n    l = ventilation_cycle.max().values\n    l.sort()\n    plt.vlines(x = v_id, ymin = 0.1, ymax = l[-2], linestyles=\"dotted\", color=\"grey\")\n    plt.legend(loc = 'best')\n    plt.title(\"Visualization of one ventilation cycle(~3s)\")\n    plt.show()","66ef86bd":"# Dotted line represent the open of exploratory valve\nfor i in range(1, 20, 4):\n    draw_1_cycle(train_data[train_data['breath_id']==i])","9d648d97":"# diff_u_in : Difference of u_in after each time_step\ntrain_data['diff_u_in1'] = train_data['u_in'] - train_data.groupby('breath_id')['u_in'].shift(1).fillna(0)\ntrain_data['diff_u_in2'] = train_data['u_in'] - train_data.groupby('breath_id')['u_in'].shift(2).fillna(0)\n\ntrain_data['R*C'] = train_data['R'] * train_data['C']\ntrain_data['u_in_cumsum'] = train_data['u_in'].groupby(train_data['breath_id']).cumsum()\ntrain_data['u_in_cumsum_diff'] = train_data['u_in_cumsum'] - train_data.groupby('breath_id')['u_in_cumsum'].shift(1).fillna(0)\ntrain_data['u_in_cumsumXu_out'] = train_data['u_in_cumsum'] * (-1*train_data['u_out'] + 1)\ntrain_data['u_inX_u_out'] = train_data['u_in'] * (-1*train_data['u_out'] + 1)\n\ntrain_data['time_step_diff'] = train_data['time_step'] - train_data.groupby('breath_id')['time_step'].shift(1).fillna(0)\ntrain_data['change_in_p'] = (train_data['u_in_cumsum_diff'] \/ train_data['time_step_diff']) * train_data['R']","ec369cdb":"# Graph of pressure, diff_u_in\nplt.figure(figsize=(18, 5))\nplt.plot(train_data['id'][:80], train_data['diff_u_in1'][:80], c='r', label='diff_u_in1')\nplt.plot(train_data['id'][:80], train_data['diff_u_in2'][:80], c='g', label='diff_u_i2')\nplt.plot(train_data['id'][:80], train_data['u_in_cumsum'][:80], c='y', label='u_in_cumsum')\n\nplt.plot(train_data['id'][:80], train_data['pressure'][:80], c='b', label='pressure')","8ece6004":"#print(f\"count of breath id in each ventilation cycle : {train_data['breath_id'].value_counts().unique()}\")","221eb164":"# Changing to time series data\n#train_data = train_data.values.reshape(-1, 80, train_data.shape[-1])\n#print(f\"Shape of reshaped training data : {train_data.shape}\")","1a238d1c":"# **Data Analysis**","630643fe":"# **DATA VISUALIZATION**","e3f960df":"**FEATURE ENGINEERING**","003b5211":"# **Importing packages**","54975bcf":"The values of C & R are constant in each ventilation cycle"}}