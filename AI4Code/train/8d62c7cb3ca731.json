{"cell_type":{"ac117f65":"code","869d2288":"code","dde17854":"code","c74368ca":"code","c1a36ad3":"code","1945b347":"code","a3534022":"code","6aa1e50c":"code","87fe2540":"code","b19540c3":"code","6b0ca3a9":"code","853ef48c":"code","6fe6f051":"code","c0a5d336":"code","68c019e5":"code","5f99b79d":"code","e2b309ce":"code","df1b7e7b":"code","849b1383":"markdown","6643286c":"markdown","d4917be5":"markdown","197ce7e1":"markdown","fac7e573":"markdown","a20c0269":"markdown","3bbc8541":"markdown","c5be363f":"markdown","629539a8":"markdown","8f616237":"markdown","54dcb367":"markdown","9325a8d9":"markdown","b5bbb3ff":"markdown","e7e63b4b":"markdown"},"source":{"ac117f65":"#import general libraries\nimport numpy as np\nimport pandas as pd\nimport warnings\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nwarnings.simplefilter(\"ignore\")","869d2288":"#import modelling libraries\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score","dde17854":"iris = pd.read_csv('..\/input\/iris\/Iris.csv', low_memory=False)","c74368ca":"iris.head()","c1a36ad3":"iris.describe","1945b347":"iris.isnull().sum()","a3534022":"# Drop id column\n\niris.drop('Id', axis = 1, inplace = True)","6aa1e50c":"# Check to see changes\n\niris.head()","87fe2540":"iris['Species'].unique()","b19540c3":"mapping = {'Iris-setosa':0, 'Iris-versicolor':1, 'Iris-virginica':2}","6b0ca3a9":"iris['Species'].replace(mapping, inplace = True)","853ef48c":"iris.head()","6fe6f051":"# Check data types\n\niris.dtypes","c0a5d336":"x = iris.drop('Species', axis = 1)\ny = iris['Species']\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 42)","68c019e5":"def model_trainer(data, models):\n    x_train, x_test, y_train, y_test = data\n    for model in models:\n        model.fit(x_train, y_train)\n        preds = model.predict(x_test)\n        accuracy = accuracy_score(y_test, preds)\n        print(f'Model: {model}, Accuracy: {accuracy}')","5f99b79d":"# define the data\n\ndata = (x_train, x_test, y_train, y_test)\n\n# define the models\n\nsvc = SVC()\nrfc = RandomForestClassifier()\ndtc = DecisionTreeClassifier()\n\nmodels = [svc, rfc, dtc]","e2b309ce":"model_trainer(data = data, models = models)","df1b7e7b":"modelapp = svc\nSepalLength = float(input('Enter the sepal length (cm): '))\nSepalWidth = float(input('Enter the sepal width (cm): '))\nPetalLength = float(input('Enter the petal length (cm): '))\nPetalWidth = float(input('Enter the petal width (cm): '))\n\npredicted = modelapp.predict([[SepalLength, SepalWidth, PetalLength, PetalWidth]])\nif predicted == 0:\n    output = 'Iris-setosa'\nelif predicted == 1:\n    output = 'Iris-versicolor'\nelse:\n    output = 'Iris-virginica'\n\nprint('')\nprint(f'The flower is an {output}')","849b1383":"Get a basic description of the dataset's columns to understand the information it holds.","6643286c":"As species is our target column, we need to make sure it holds unique values.","d4917be5":"Let's create a function for model training.","197ce7e1":"# Modeling","fac7e573":"Train the models and evaluate the performance","a20c0269":"# Prediction Application to determine the species of a flower based on features","3bbc8541":"Access the dataset","c5be363f":"Split the data","629539a8":"Lets use the SVC model","8f616237":"**Define the parameters**","54dcb367":"Check if there are any null values.","9325a8d9":"View data sample","b5bbb3ff":"Next, we shall replace the species column with the mapping column which now represents the species as numbers.","e7e63b4b":"We can see 3 unique species.\n\nFor model development, lets map the species to numerical values.\n\ni.e setosa: 0, versicolor: 1, virginica: 2"}}