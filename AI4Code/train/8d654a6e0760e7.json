{"cell_type":{"1c8caa88":"code","a076f738":"code","4e5f6aa6":"code","1ff29867":"code","10ae0b2e":"code","03b4c0ed":"code","3b44b1c7":"code","ccfe50ea":"code","f94639cf":"code","ab7c347e":"markdown"},"source":{"1c8caa88":"alexmodel_path = '..\/input\/plant-diseases-classification-using-alexnet\/AlexNetModel.hdf5'","a076f738":"# Arquitetura do modelo \u00e0 ser carregado os pesos\n# Importing Keras libraries and packages\nfrom keras.models import Sequential\nfrom keras.layers import Convolution2D\nfrom keras.layers import MaxPooling2D\nfrom keras.layers import Flatten\nfrom keras.layers import Dense\nfrom keras.layers import Dropout\nfrom keras.layers.normalization import BatchNormalization\n\ndef load_alexmodel(filepath):\n    # Initializing the CNN\n    classifier = Sequential()\n\n    # Convolution Step 1\n    classifier.add(Convolution2D(96, 11, strides = (4, 4), padding = 'valid', input_shape=(224, 224, 3), activation = 'relu'))\n\n    # Max Pooling Step 1\n    classifier.add(MaxPooling2D(pool_size = (2, 2), strides = (2, 2), padding = 'valid'))\n    classifier.add(BatchNormalization())\n\n    # Convolution Step 2\n    classifier.add(Convolution2D(256, 11, strides = (1, 1), padding='valid', activation = 'relu'))\n\n    # Max Pooling Step 2\n    classifier.add(MaxPooling2D(pool_size = (2, 2), strides = (2, 2), padding='valid'))\n    classifier.add(BatchNormalization())\n\n    # Convolution Step 3\n    classifier.add(Convolution2D(384, 3, strides = (1, 1), padding='valid', activation = 'relu'))\n    classifier.add(BatchNormalization())\n\n    # Convolution Step 4\n    classifier.add(Convolution2D(384, 3, strides = (1, 1), padding='valid', activation = 'relu'))\n    classifier.add(BatchNormalization())\n\n    # Convolution Step 5\n    classifier.add(Convolution2D(256, 3, strides=(1,1), padding='valid', activation = 'relu'))\n\n    # Max Pooling Step 3\n    classifier.add(MaxPooling2D(pool_size = (2, 2), strides = (2, 2), padding = 'valid'))\n    classifier.add(BatchNormalization())\n\n    # Flattening Step\n    classifier.add(Flatten())\n\n    # Full Connection Step\n    classifier.add(Dense(units = 4096, activation = 'relu'))\n    classifier.add(Dropout(0.4))\n    classifier.add(BatchNormalization())\n    classifier.add(Dense(units = 4096, activation = 'relu'))\n    classifier.add(Dropout(0.4))\n    classifier.add(BatchNormalization())\n    classifier.add(Dense(units = 1000, activation = 'relu'))\n    classifier.add(Dropout(0.2))\n    classifier.add(BatchNormalization())\n    classifier.add(Dense(units = 38, activation = 'softmax'))\n\n    classifier.load_weights(filepath)\n    return classifier\n","4e5f6aa6":"classifier = load_alexmodel(alexmodel_path)","1ff29867":"classifier","10ae0b2e":"li = ['Apple___Apple_scab', 'Apple___Black_rot', 'Apple___Cedar_apple_rust', 'Apple___healthy', 'Blueberry___healthy', 'Cherry_(including_sour)___Powdery_mildew', 'Cherry_(including_sour)___healthy', 'Corn_(maize)___Cercospora_leaf_spot Gray_leaf_spot', 'Corn_(maize)___Common_rust_', 'Corn_(maize)___Northern_Leaf_Blight', 'Corn_(maize)___healthy', 'Grape___Black_rot', 'Grape___Esca_(Black_Measles)', 'Grape___Leaf_blight_(Isariopsis_Leaf_Spot)', 'Grape___healthy', 'Orange___Haunglongbing_(Citrus_greening)', 'Peach___Bacterial_spot', 'Peach___healthy', 'Pepper,_bell___Bacterial_spot', 'Pepper,_bell___healthy', 'Potato___Early_blight', 'Potato___Late_blight', 'Potato___healthy', 'Raspberry___healthy', 'Soybean___healthy', 'Squash___Powdery_mildew', 'Strawberry___Leaf_scorch', 'Strawberry___healthy', 'Tomato___Bacterial_spot', 'Tomato___Early_blight', 'Tomato___Late_blight', 'Tomato___Leaf_Mold', 'Tomato___Septoria_leaf_spot', 'Tomato___Spider_mites Two-spotted_spider_mite', 'Tomato___Target_Spot', 'Tomato___Tomato_Yellow_Leaf_Curl_Virus', 'Tomato___Tomato_mosaic_virus', 'Tomato___healthy']\nprint(li)","03b4c0ed":"!wget https:\/\/crop-protection-network.s3.amazonaws.com\/articles\/Common-rust-Daren-Mueller-20.jpg -O corn_rust.jpg","3b44b1c7":"# predicting an image\nfrom keras.preprocessing import image\nimport numpy as np\nimport matplotlib.pyplot as plt\nimage_path = \"corn_rust.jpg\"\nnew_img = image.load_img(image_path, target_size=(224, 224))\nimg = image.img_to_array(new_img)\nimg = np.expand_dims(img, axis=0)\nimg = img\/255","ccfe50ea":"img_class = classifier.predict_classes(img).squeeze()\nimg_probs = classifier.predict_proba(img).squeeze()\nimg_prob = img_probs[img_class]\nclass_name = li[img_class]","f94639cf":"# Compare\nplt.figure(figsize = (4,4))\nplt.imshow(new_img)\nplt.axis('off')\nplt.title(f'{class_name} {img_prob:.2f}')\nplt.show()","ab7c347e":"## Inference"}}