{"cell_type":{"1ae31d82":"code","b671feab":"code","8c4e99b3":"code","d0bf9375":"code","4c417567":"code","13514e61":"code","0009044b":"code","6e8c87c1":"code","6c0e78f9":"code","ffb83826":"code","c1c6a54c":"code","714a3863":"code","4586848a":"code","4cd2baae":"code","6df68ddc":"code","718d73ee":"code","e5cbd289":"code","8e413df6":"code","5b51a7c2":"code","0a1a50da":"code","9aa7a323":"code","814e666d":"code","26f762e6":"code","f7283cc6":"code","e4e8efdd":"code","102c3caf":"code","f7836b58":"code","14c19704":"code","0ff31e11":"markdown","53b3c87c":"markdown","c01c5513":"markdown","0b255b94":"markdown","05a3ed4e":"markdown"},"source":{"1ae31d82":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b671feab":"import pandas as pd\ndf = pd.read_csv(\"\/kaggle\/input\/titanic-traindata\/train.csv\", usecols=[\"Age\", \"Fare\", \"Survived\"])\ndf.head()","8c4e99b3":"df['Age'].hist(bins=50)","d0bf9375":"## Arbitrary values\n## It should be more frequently present","4c417567":"df=pd.read_csv(\"\/kaggle\/input\/trainhouse\/train-house.csv\", usecols=[\"BsmtQual\", \"FireplaceQu\", \"GarageType\", \"SalePrice\"])\ndf.head()\n","13514e61":"df.isnull().sum()","0009044b":"df.isnull().mean().sort_values(ascending=True)","6e8c87c1":"df.groupby(['BsmtQual'])['BsmtQual'].count().sort_values(ascending=False).plot.bar()","6c0e78f9":"df['BsmtQual'].value_counts().plot.bar()","ffb83826":"df['GarageType'].value_counts().plot.bar()","c1c6a54c":"df['FireplaceQu'].value_counts().plot.bar()","714a3863":"def impute_nan(df, variable):\n    most_frequent_category=df[variable].value_counts().index[0]\n    df[variable].fillna(most_frequent_category, inplace=True)","4586848a":"for feature in ['BsmtQual', 'FireplaceQu', 'GarageType']:\n    impute_nan(df,feature)","4cd2baae":"df.isnull().mean()","6df68ddc":"df=pd.read_csv(\"\/kaggle\/input\/trainhouse\/train-house.csv\", usecols=[\"BsmtQual\", \"FireplaceQu\", \"GarageType\", \"SalePrice\"])\ndf.head()\n","718d73ee":"import numpy as np\ndf['BsmtQual_Var'] = np.where(df['BsmtQual'].isnull(),1,0)","e5cbd289":"df.head()","8e413df6":"frequent=df['BsmtQual'].mode()[0]","5b51a7c2":"df['BsmtQual'].fillna(frequent, inplace=True) ","0a1a50da":"df.head()","9aa7a323":"df['FireplaceQu_Var'] = np.where(df['FireplaceQu'].isnull(),1,0)\nfrequent=df['FireplaceQu'].mode()[0]\ndf['FireplaceQu'].fillna(frequent, inplace=True) ","814e666d":"df.head()","26f762e6":"df=pd.read_csv(\"\/kaggle\/input\/trainhouse\/train-house.csv\", usecols=[\"BsmtQual\", \"FireplaceQu\", \"GarageType\", \"SalePrice\"])\ndf.head()\n\n","f7283cc6":"def impute_nan(df, variable):\n    df[variable+ \"newvar\"]=np.where(df[variable].isnull(), 'Missing' , df[variable])","e4e8efdd":"for feature in ['BsmtQual', 'FireplaceQu', 'GarageType']:\n    impute_nan(df,feature)","102c3caf":"df.head()","f7836b58":"df=df.drop(['BsmtQual', 'FireplaceQu', 'GarageType'], axis=1)","14c19704":"df.head()","0ff31e11":"## Arbitrary Value Imputation\n\nThis technique was derived from Kaggle competetion.\n\nIt consists of replacing NAN by an arbitrary value ","53b3c87c":"### Adding a variable to capture NAN","c01c5513":"### Replacing Function\n","0b255b94":"### How to handle categorical missing values\n\n#### Frequent Category Impututatiom","05a3ed4e":"### Suppose if you have more frequent categories, we just replace NAN with a new category"}}