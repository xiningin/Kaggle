{"cell_type":{"3c21aadb":"code","53f6428d":"code","74a59a69":"code","53af805b":"code","ab89a783":"code","c4e00e93":"code","98e4d6da":"code","25724d40":"code","f00e775a":"code","8985d439":"code","8fadf1cf":"code","271cecf1":"code","7e2fa742":"code","147b3b6d":"code","ebd75ebe":"code","127898cd":"code","1cf1ed28":"code","dbd185d4":"code","81d95d9d":"code","8d2e84fb":"code","17e33d5b":"code","17552c70":"code","07c645ea":"markdown","8cf877d3":"markdown","01373efd":"markdown","ecdb8ad6":"markdown","135e08a4":"markdown","38555f09":"markdown","6ca9093a":"markdown","ba319b78":"markdown","c760a148":"markdown","c1411280":"markdown","19a3ff6a":"markdown","110fb510":"markdown","9a536754":"markdown","118a7e21":"markdown","ef39e114":"markdown","efd5afc6":"markdown","c46d9d75":"markdown","cefaa614":"markdown","d7a1c3c3":"markdown"},"source":{"3c21aadb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","53f6428d":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nsns.set(font_scale=1.4)\nfontsize=15\nbold=\"bold\"","74a59a69":"framingham = pd.read_csv(\"..\/input\/heart-disease-prediction-using-logistic-regression\/framingham.csv\")\nframingham","53af805b":"#checking correlation\ncorr = framingham.corr()\nmatrix = np.triu(corr)\n\nplt.figure(figsize=(18, 10))\nsns.heatmap(data=corr, annot=True, mask=matrix, cmap=plt.cm.Blues)\nplt.show()","ab89a783":"framingham.info()","c4e00e93":"framingham.TenYearCHD.value_counts()","98e4d6da":"framingham.isna().sum()","25724d40":"framingham.dropna(inplace=True)\nframingham.reset_index(drop=True, inplace=True)","f00e775a":"framingham","8985d439":"framingham.isna().sum()","8fadf1cf":"X = framingham.iloc[:, :-1].values\ny = framingham.iloc[:, -1].values\nprint(X.shape,\"\\n\",y.shape)","271cecf1":"from sklearn.model_selection import train_test_split\n\nXtrain, Xtest, ytrain, ytest = train_test_split(X, y, test_size=0.25, random_state=1)\nprint(Xtrain.shape, \"\\n\", ytrain.shape, \"\\n\", Xtest.shape)","7e2fa742":"from sklearn.preprocessing import StandardScaler\n\nsc = StandardScaler()\nXtrain = sc.fit_transform(Xtrain)\nXtest = sc.fit_transform(Xtest)","147b3b6d":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix, accuracy_score\n\nclassifier = LogisticRegression(random_state=0)\nclassifier.fit(Xtrain, ytrain)\ny_pred = classifier.predict(Xtest)","ebd75ebe":"cm = confusion_matrix(ytest, y_pred)\naccuracy = accuracy_score(ytest, y_pred)\nprint(\"Confusition_matrix \\n\", cm, \"\\n \\nAccuracy\", accuracy*100)","127898cd":"label_0 = framingham.loc[framingham.TenYearCHD == 0,:]\nlabel_1 = framingham.loc[framingham.TenYearCHD == 1,:]","1cf1ed28":"label_1.shape[0]\/label_0.shape[0]","dbd185d4":"from sklearn.metrics import plot_confusion_matrix\n\nfig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(16, 8))\nax1.grid(False)\nax2.grid(False)\narguments = {\"estimator\": classifier, \"X\": Xtest, \"y_true\": ytest, \"cmap\": plt.cm.Blues}\ndisp1 = plot_confusion_matrix(**arguments, ax=ax1)\ndisp2 = plot_confusion_matrix(**arguments, ax=ax2, normalize=\"true\")\nplt.show()","81d95d9d":"fig, ax = plt.subplots(figsize=(8, 8))\nax.grid(False)\nax.set_title(\"Confusion Matrix\", fontsize=fontsize, fontweight=bold)\nplot_confusion_matrix(classifier, Xtest, ytest, ax=ax, cmap=plt.cm.Blues)\nplt.show()","8d2e84fb":"from sklearn.metrics import average_precision_score\n# T\u00ednh precision trung b\u00ecnh qua c\u00e1c ng\u01b0\u1ee1ng\n\ny_score = classifier.decision_function(Xtest) # C\u1ee5 n\u00e0y t\u00ednh kho\u1ea3ng c\u00e1ch gi\u1eefa si\u00eau ph\u1eb3ng c\u1ee7a l\u1edbp k\u1ebft qu\u1ea3 v\u00e0 \u0111i\u1ec3m data \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o.\naverage_precision = average_precision_score(ytest, y_score, pos_label=1)","17e33d5b":"from sklearn.metrics import plot_precision_recall_curve\n# Compute precision-recall pairs for different probability thresholds and plot.\n\nfig, ax = plt.subplots(figsize=(15, 7))\ndisp = plot_precision_recall_curve(classifier, Xtest, ytest, color=\"navy\", ax=ax)\ndisp.ax_.set_title('2-class Precision-Recall curve: '\n                   'AP={0:0.2f}'.format(average_precision), fontweight=bold)\ndisp.ax_.grid(True)\ndisp.ax_.legend(fontsize=16)\nplt.show()","17552c70":"from sklearn.metrics import RocCurveDisplay, roc_curve, plot_roc_curve\n\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\nplt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n\n# fpr, tpr, _ = roc_curve(ytest, y_score, pos_label=1)\n# roc_display = RocCurveDisplay(fpr=fpr, tpr=tpr).plot(ax=ax)\ndisp = plot_roc_curve(classifier, Xtest, ytest, color=\"darkgreen\", ax=ax)\n# remembering asign pos_label for plot\ndisp.ax_.grid(True)\ndisp.ax_.legend(fontsize=15)\ndisp.ax_.set_title(\"s\u1ef1 thay \u0111\u1ed5i c\u1ee7a TPR, FPR theo c\u00e1c s\u1ef1 t\u0103ng d\u1ea7n ng\u01b0\u1ee1ng\", fontweight=\"bold\")\nplt.show()","07c645ea":"### **Training with defaults parameter**","8cf877d3":"#### Bi\u1ec3u \u0111\u1ed3 tr\u00ean c\u00f3 AUC = 0.72 c\u00f3 \u00fd ngh\u0129a l\u00e0 m\u00f4 h\u00ecnh c\u00f3 th\u1ec3 ph\u1ea7n lo\u1ea1i \u0111\u01b0\u1ee3c Positive v\u00e0 Negative nh\u01b0ng v\u1eabn c\u00f2n l\u1ed7i (FP, FN).\n\n### **C\u00e1c m\u1ee9c \u00fd ngh\u0129a c\u1ee7a AUC:**\n#### + *AUC = 1*: M\u00f4 h\u00ecnh ph\u00e2n lo\u1ea1i r\u1ea1ch r\u00f2i gi\u1eefa 2 l\u1edbp. Kh\u00f4ng c\u00f3 l\u1ed7i (FN, FP).\n#### + *AUC = 0.5*: Tr\u01b0\u1eddng h\u1ee3p t\u1ec7 nh\u1ea5t, m\u00f4 h\u00ecnh kh\u00f4ng ph\u00e2n bi\u1ec7t \u0111\u01b0\u1ee3c 2 l\u1edbp.\n#### + *AUC ~ 0*: M\u00f4 h\u00ecnh ph\u00e2n lo\u1ea1i ng\u01b0\u1ee3c.\n\n### **K\u1ebft lu\u1eadn**\n#### + D\u1ef1a v\u00e0o bi\u1ec3u \u0111\u1ed3 ta c\u00f3 th\u1ec3 ch\u1ecdn ng\u01b0\u1ee1ng ph\u00f9 h\u1ee3p cho b\u00e0i to\u00e1n.(TPR, FPR)\n#### + AUC gi\u00fap ta x\u00e1c \u0111i\u1ec7u hi\u1ec7u su\u1ea5t m\u00f4 h\u00ecnh.","01373efd":"### **Gi\u00e1 tr\u1ecb AP (Average Precision)**\n\n#### - AP l\u00e0 m\u1ed9t gi\u00e1 tr\u1ecb \u0111\u00e1nh gi\u00e1 chung \u0111\u01b0\u1eddng c\u1ee7a ch\u00fang ta. (N\u00f3 gi\u1ed1ng AUC c\u1ee7a ROC)\n#### - AP c\u00e0ng g\u1ea7n 1 th\u00ec Precision v\u00e0 Recall c\u00e0ng \u1ed5n \u0111\u1ecbnh.\n#### - C\u00f3 th\u1ec3 hi\u1ec3u AP nh\u01b0 \u0111\u1ed9 ch\u00ednh x\u00e1c trung b\u00ecnh c\u1ee7a m\u00f4 h\u00ecnh. ","ecdb8ad6":"### **<span style=\"color:green\"> When to Use ROC vs. Precision-Recall Curves? <\/span>**\n\n#### + ROC curves n\u00ean d\u00f9ng khi s\u1ed1 l\u01b0\u1ee3ng nh\u00e3n gi\u1eefa c\u00e1c l\u1edbp g\u1ea7n nh\u01b0 b\u1eb1ng nhau.\n#### + Precision-Recall curves n\u00ean d\u00f9ng khi s\u1ed1 l\u01b0\u1ee3ng nh\u00e3n gi\u1eefa c\u00e1c l\u1edbp l\u1ec7ch t\u1eeb trung b\u00ecnh \u0111\u1ebfn l\u1ec7ch cao.","135e08a4":"### **Scaling data**","38555f09":"#### *C\u00f4ng th\u1ee9c*\n<math xmlns=\"http:\/\/www.w3.org\/1998\/Math\/MathML\" display=\"block\">\n  <mtext>AP<\/mtext>\n  <mo>=<\/mo>\n  <munder>\n    <mo data-mjx-texclass=\"OP\">&#x2211;<\/mo>\n    <mi>n<\/mi>\n  <\/munder>\n  <mo stretchy=\"false\">(<\/mo>\n  <msub>\n    <mi>R<\/mi>\n    <mi>n<\/mi>\n  <\/msub>\n  <mo>&#x2212;<\/mo>\n  <msub>\n    <mi>R<\/mi>\n    <mrow data-mjx-texclass=\"ORD\">\n      <mi>n<\/mi>\n      <mo>&#x2212;<\/mo>\n      <mn>1<\/mn>\n    <\/mrow>\n  <\/msub>\n  <mo stretchy=\"false\">)<\/mo>\n  <msub>\n    <mi>P<\/mi>\n    <mi>n<\/mi>\n  <\/msub>\n<\/math>","6ca9093a":"| **<h3>Gi\u00e1 tr\u1ecb tr\u00ean confusion maxtrix<\/h3>**                        | **<h3>T\u1ec9 l\u1ec7 tr\u00ean confusion matrix<\/h3>**\n|--------------------------------------------------------------------|----------------------------------\n|**TP** = 11, c\u00f3 11 ng\u01b0\u1eddi \u0111\u01b0\u1ee3c d\u1ef1 \u0111o\u00e1n b\u1ecb b\u1ec7nh l\u00e0 ch\u00ednh x\u00e1c.         |**TPR** = TP\/(TP + FN)  , T\u1ec9 l\u1ec7 ng\u01b0\u1eddi \u0111\u01b0\u1ee3c d\u1ef1 \u0111o\u00e1n c\u00f3 b\u1ec7nh tr\u00ean t\u1ed5ng s\u1ed1 ng\u01b0\u1eddi c\u00f3 b\u1ec7nh th\u1ef1c t\u1ebf. (l\u1edbn t\u1ed1t)\n|**FP** = 7, c\u00f3 7 ng\u01b0\u1eddi \u0111\u01b0\u1ee3c d\u1ef1 \u0111o\u00e1n b\u1ecb b\u1ec7nh l\u00e0 sai.                 |**FPR** = FP\/(FP + TN)  , T\u1ec9 l\u1ec7 ng\u01b0\u1eddi \u0111\u01b0\u1ee3c d\u1ef1 \u0111o\u00e1n c\u00f3 b\u1ec7nh nh\u01b0ng th\u1ef1c t\u1ebf kh\u00f4ng c\u00f3 b\u1ec7nh tr\u00ean t\u1ed5ng s\u1ed1 ng\u01b0\u1eddi kh\u00f4ng c\u00f3 b\u1ec7nh. (nh\u1ecf t\u1ed1t)\n|**TN** = 773, c\u00f3 773 ng\u01b0\u1eddi \u0111\u01b0\u1ee3c d\u1ef1 \u0111o\u00e1n kh\u00f4ng b\u1ecb b\u1ec7nh l\u00e0 ch\u00ednh x\u00e1c. |**TNR** = TN\/(TN + FP)  , T\u1ec9 l\u1ec7 ng\u01b0\u1eddi \u0111\u01b0\u1ee3c d\u1ef1 \u0111o\u00e1n kh\u00f4ng c\u00f3 b\u1ec7nh tr\u00ean t\u1ed5ng s\u1ed1 ng\u01b0\u1eddi th\u1ef1c t\u1ebf ko c\u00f3 b\u1ec7nh. (l\u1edbn t\u1ed1t)\n|**FN** = 123, c\u00f3 123 ng\u01b0\u1eddi \u0111\u01b0\u1ee3c d\u1ef1 \u0111o\u00e1n kh\u00f4ng b\u1ecb b\u1ec7nh l\u00e0 sai.       |**FNR** = FN\/(FN + TP)  , T\u1ec9 l\u1ec7 ng\u01b0\u1eddi \u0111\u01b0\u1ee3c d\u1ef1 \u0111o\u00e1n kh\u00f4ng c\u00f3 b\u1ec7nh nh\u01b0ng sai th\u1ef1c t\u1ebf tr\u00ean t\u1ed5ng s\u1ed1 ng\u1eeboi c\u00f3 b\u1ec7nh th\u1ef1c t\u1ebf. (nh\u1ecf t\u1ed1t)","ba319b78":"# Model Building","c760a148":"precision = 11 \/ (11 + 7) = 61%\n\nrecall = 11 \/ (123 + 11) = 8.2%","c1411280":"#### **Confusition matrix**\n#### + C\u00f3 773 true positive (S\u1ed1 ng\u01b0\u1eddi d\u1ef1 \u0111o\u00e1n ch\u00ednh x\u00e1c c\u00f3 b\u1ec7nh)\n#### + C\u00f3 11 true negative (S\u1ed1 ng\u01b0\u1eddi \u0111\u01b0\u1ee3c d\u1ef1 \u0111o\u00e1n ch\u00ednh x\u00e1c kh\u00f4ng c\u00f3 b\u1ec7nh)","19a3ff6a":"### \u0110\u00e1nh gi\u00e1 m\u00f4 h\u00ecnh tr\u00ean ROC_AUC","110fb510":"### **==> K\u1ebft lu\u1eadn:** *Ch\u1ec9 s\u1ed1 false c\u00e0ng nh\u1ecf c\u00e0ng t\u1ed1t, ch\u1ec9 s\u1ed1 true c\u00e0ng l\u1edbn c\u00e0ng t\u1ed1t.*","9a536754":"### **Simple evaluation**","118a7e21":"### **Get X, y data from dataframe**","ef39e114":"### **Splitting trainset, testset**","efd5afc6":"### **\u0110\u00e1nh gi\u00e1 m\u00f4 h\u00ecnh b\u1eb1ng Precision v\u00e0 Recall**\n\n#### **Precision:** T\u1ef7 l\u1ec7 d\u1ef1 \u0111o\u00e1n \u0111\u00fang tr\u00ean t\u1ed5ng s\u1ed1 d\u1ef1 \u0111o\u00e1n c\u1ee7a Positive.(Ng\u01b0\u1eddi c\u00f3 b\u1ec7nh)\n#### **Recall:** T\u1ef7 l\u1ec7 d\u1ef1 \u0111o\u00e1n \u0111\u00fang tr\u00ean t\u1ed5ng s\u1ed1 ng\u01b0\u1eddi b\u1ec7nh th\u1ef1c t\u1ebf. (C\u0169ng l\u00e0 TPR)\n\n### **Wrap Up:** *2 t\u1ef7 l\u1ec7 tr\u00ean \u0111\u1ec1u n\u1eb1m trong kho\u1ea3ng [0:1], ch\u00fang n\u00ean \u0111\u01b0\u1ee3c c\u00e2n b\u1eb1ng v\u1edbi nhau v\u00ec n\u1ebfu m\u1ed9t trong 2 t\u1ef7 l\u1ec7 nh\u1ecf h\u01a1n nhi\u1ec1u so v\u1edbi c\u00e1i c\u00f2n l\u1ea1i th\u00ec m\u00f4 h\u00ecnh kh\u00f4ng c\u00f3 \u00fd ngh\u0129a*\n\n#### **Ex:** \n#### + N\u1ebfu Precision cao ngh\u0129a l\u00e0 s\u1ed1 ng\u01b0\u1eddi m\u00ecnh d\u1ef1 \u0111o\u00e1n b\u1ecb b\u1ec7nh \u0111\u00fang nhi\u1ec1u, khi \u0111\u00f3 n\u1ebfu Recall th\u1ea5p th\u00ec ngh\u0129a l\u00e0 m\u00ecnh ch\u1ec9 d\u1ef1 \u0111o\u00e1n \u0111\u00fang ph\u1ea7n nh\u1ecf s\u1ed1 ng\u01b0\u1eddi b\u1ec7nh tr\u00ean th\u1ef1c t\u1ebf.\n#### + N\u1ebfu Recall cao ngh\u0129a l\u00e0 \u0111\u00e3 d\u1ef1 ch\u00ednh x\u00e1c s\u1ed1 ng\u01b0\u1eddi b\u1ec7nh tr\u00ean th\u1ef1c t\u1ebf cao, khi \u0111\u00f3 n\u1ebfu Precision th\u1ea5p suy ra m\u00f4 h\u00ecnh \u0111\u00e3 d\u1ef1 \u0111o\u00e1n nh\u1ea7m r\u1ea5t nhi\u1ec1u ng\u01b0\u1eddi kh\u00f4ng b\u1ecb b\u1ec7nh th\u00e0nh b\u1ecb b\u1ec7nh. M\u00f4 h\u00ecnh tr\u1edf n\u00ean v\u00f4 ngh\u0129a. Ki\u1ec3u nh\u01b0 c\u00e2u n\u00f3i \"Em tin ch\u1eafc c\u1ea3 th\u1ebf gi\u1edbi n\u00e0y c\u0169ng c\u00f3 ng\u01b0\u1eddi y\u00eau anh.\" ","c46d9d75":"### **Precision Recall**","cefaa614":"### **\u0110\u00e1nh gi\u00e1 c\u1ee5 th\u1ec3 h\u01a1n tr\u00ean Confusion Matrix**","d7a1c3c3":"# **Preprocessing data**"}}