{"cell_type":{"36290d8b":"code","bcafe28d":"code","984176b9":"code","25e45140":"code","7aa76f8c":"code","cc586d96":"code","a5f4b16b":"code","ff6f2897":"code","889e5469":"code","e05d8420":"markdown"},"source":{"36290d8b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bcafe28d":"train = pd.read_csv(\"\/kaggle\/input\/30-days-of-ml\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/30-days-of-ml\/test.csv\")\nsubmission = pd.read_csv(\"\/kaggle\/input\/30-days-of-ml\/sample_submission.csv\")","984176b9":"train.head()","25e45140":"test.describe()","7aa76f8c":"train.columns","cc586d96":"y = train.target\ntrain.drop(['target', 'id'], axis = 1, inplace = True)\ntest.drop(['id'], axis = 1, inplace = True)\ntrain.head()","a5f4b16b":"print(\"Train shape: \", train.shape, \"\\nTest shape: \", test.shape)","ff6f2897":"from sklearn.preprocessing import OrdinalEncoder\ncat_cols = [col for col in train.columns if 'cat' in col]\n\nX = train.copy()\nX_test = test.copy()\nenc = OrdinalEncoder()\nX[cat_cols] = enc.fit_transform(train[cat_cols])\nX_test[cat_cols] = enc.transform(test[cat_cols])\nX.head()","889e5469":"import seaborn as sns\nsns.pairplot(train)","e05d8420":"Created Some variables and addressed the given data\n* Train\n* Test\n* Submission"}}