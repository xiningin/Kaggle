{"cell_type":{"fc9e0f5e":"code","ccfe8d61":"code","9ae199d5":"code","d1726326":"code","2a6ee42a":"code","fbc2f245":"code","b6234832":"code","c1061fc9":"code","f5cbb356":"code","afd143c5":"code","0fab5966":"code","2dbbd494":"code","9e8780f7":"code","c2456f96":"code","94e91159":"markdown","ca6d4e48":"markdown","764acc1f":"markdown"},"source":{"fc9e0f5e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nfrom fastai.vision import *\n\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=UserWarning, module=\"torch.nn.functional\")","ccfe8d61":"#Check the folder where images are kept\npath = Path('\/kaggle\/input\/flowers-recognition\/flowers\/flowers\/')\npath.ls()","9ae199d5":"#Set the 5 output classes\nclasses = ['sunflower','tulip','rose','dandelion','daisy']","d1726326":"#Preparing the data bunch object which holds the image data\n#define the batch size\nbs = 16\n\n#lets do some data augmentation\n#tfms = get_transforms(do_flip=False)\n\ndata = ImageDataBunch.from_folder(path, train=\".\", valid_pct=0.2,\n        ds_tfms=get_transforms(), size=224, bs=bs, num_workers=4).normalize(imagenet_stats)","2a6ee42a":"data.show_batch(rows=3, figsize=(7,8))","fbc2f245":"#lets recheck the classes\ndata.classes","b6234832":"#lets check the stats\ndata.classes, data.c, len(data.train_ds), len(data.valid_ds)","c1061fc9":"#define the model \n#Make sure you have the internet switch in kaggle on to download the model\nlearn = cnn_learner(data, models.resnet50, metrics=[error_rate, accuracy], model_dir='\/output\/model\/')","f5cbb356":"#Lets find the correct range for learning rate\nlearn.lr_find()\nlearn.recorder.plot()","afd143c5":"#Lets train the model for 8 cycles\nlearn.fit_one_cycle(8)","0fab5966":"#saving the model \nlearn.save('stage-1-50')","2dbbd494":"learn.unfreeze()","9e8780f7":"#Lets see if we can fine tune it a bit\nlearn.fit_one_cycle(3, max_lr=slice(1e-5,1e-3))","c2456f96":"learn.save('stage-2-50')","94e91159":"### Preparing the data","ca6d4e48":"### Lets train the Resnet50 Model","764acc1f":"### View the data\n"}}