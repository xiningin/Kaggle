{"cell_type":{"e384e677":"code","e871194d":"code","ae20f626":"code","14ae6e37":"code","90479494":"code","b7b61c9d":"code","764fe560":"code","8c437b7b":"code","9fc5ad81":"code","e72da55a":"code","fba82408":"code","70655d89":"markdown"},"source":{"e384e677":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e871194d":"data=pd.read_csv('..\/input\/pokemon-challenge\/pokemon.csv')","ae20f626":"data.info()","14ae6e37":"#aras\u0131ndaki ili\u015fkiyi excel format\u0131ndaki gibi g\u00f6sterir.\ndata.corr()","90479494":"#correlation map e\u011fer aralar\u0131nda +1 de\u011feri varsa do\u011fru orant\u0131l\u0131r.-1 de\u011feri varsa ters orant\u0131l\u0131r. 0 de\u011feri ise ili\u015fkileri yoktur demektir.\n#figsize g\u00f6r\u00fcnen tablonun b\u00fcy\u00fckl\u00fc\u011f\u00fc,yazmazsak default olarak gelir.\nf,ax=plt.subplots(figsize=(18,18))\nsns.heatmap(data.corr(),annot=True, linewidths=.5,fmt='.1f', ax=ax)\n#annot say\u0131lar\u0131n g\u00f6r\u00fcn\u00fcp g\u00f6r\u00fcnmemesi,linewidths kareler aras\u0131 \u00e7izgi kal\u0131nl\u0131\u011f\u0131, fmt .1 noktadan sonra 1 basamak g\u00f6sterir.\nplt.show()","b7b61c9d":"#()parantez i\u00e7ine say\u0131 yaz\u0131lmazsa defult olarak ile 5 de\u011fer gelir.\ndata.head()","764fe560":"#datam\u0131z\u0131n kolon isimlerini g\u00f6sterir.\ndata.columns","8c437b7b":"#alpha saydaml\u0131k x eksesi pokemonlar y ekseni h\u0131z ve defans \u00f6zellikleri\ndata.Speed.plot(kind='line', color='g',label='Speed', linewidth=1, alpha=0.5,grid=True, linestyle=':')\ndata.Defense.plot(color='r', label='Defense', linewidth=1, alpha=0.5,grid=True, linestyle='-.')\nplt.legend(loc='upper right')\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.title('Line Plot')\nplt.show()","9fc5ad81":"data.plot(kind='scatter', x='Attack', y='Defense',alpha = 0.5,color = 'red')\nplt.xlabel('Attack')              # label = name of label\nplt.ylabel('Defence')\nplt.title('Attack Defense Scatter Plot')   ","e72da55a":"# Histogram\n# bins = number of bar in figure\ndata.Speed.plot(kind = 'hist',bins = 50,figsize = (12,12))\nplt.show()","fba82408":"# clf() = cleans it up again you can start a fresh\ndata.Speed.plot(kind = 'hist',bins = 50)\nplt.clf()\n# We cannot see plot due to clf()","70655d89":"Matplotlib datay\u0131 g\u00f6rselle\u015ftirmeye yarar.\nLine plot e\u011fer x ekseni zamanda daha iyidir.\nScatter ise iki variable aras\u0131nda ili\u015fki (correlation) olup olmad\u0131\u011f\u0131n\u0131 g\u00f6stermek i\u00e7in kullan\u0131l\u0131r.\nHistogram datan\u0131n s\u0131kl\u0131\u011f\u0131n\u0131 yani frekans\u0131n\u0131 g\u00f6stermek i\u00e7ib kullan\u0131r\u0131z."}}