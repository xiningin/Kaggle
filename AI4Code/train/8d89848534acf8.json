{"cell_type":{"8bcd5d24":"code","9e0965e0":"code","435b6f3c":"code","32770caa":"code","793c2c3d":"code","b14e9cda":"code","f61f313c":"code","a1abab8b":"code","5a53bf2a":"code","0531c8d6":"code","d2bb6c65":"code","03d022f4":"code","f7451332":"code","12c341f9":"code","baccc130":"code","469fd538":"code","19736023":"code","e4efbc64":"code","054a27c4":"code","21014c92":"code","53aac656":"code","ddec0b57":"code","27f65818":"code","759bf81e":"code","4e91dcf4":"code","22a8d0b8":"code","e9856bb2":"code","cc2d95ba":"code","444d7af0":"code","d0cae09e":"code","996e1587":"code","095cfe2a":"code","c272d399":"code","e9bc6066":"code","4b052f55":"code","c6e7267b":"code","e35cd2e8":"code","b0077a56":"code","45000753":"code","dff3fc71":"code","5fa6cabc":"code","2c92fd0a":"markdown","63536fdc":"markdown","12705fde":"markdown","7cfbb14b":"markdown","26198a1b":"markdown","7c98acb4":"markdown","f3b49d7e":"markdown","b316371c":"markdown","324fe332":"markdown","cdd1e21f":"markdown","474113a0":"markdown","3e8d188d":"markdown","7f2a7ce0":"markdown","adc27a49":"markdown","7ff6fb92":"markdown","296a0ce7":"markdown","33329774":"markdown","1206226b":"markdown","b97b562f":"markdown","3ab7033f":"markdown","3e869538":"markdown","c8dbba1b":"markdown","a2cc0db9":"markdown","65def998":"markdown","3883cd09":"markdown","bc23bd6b":"markdown","35317ccc":"markdown","c0d57c2f":"markdown","555e012f":"markdown","f9db39d8":"markdown"},"source":{"8bcd5d24":"!pip install --upgrade plotly\n!pip install chart_studio\n!pip install cufflinks\n!pip install folium","9e0965e0":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport cufflinks as cf\nimport plotly.express as px\nimport folium","435b6f3c":"from plotly import __version__\nimport plotly.graph_objs as go \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot","32770caa":"from plotly.subplots import make_subplots","793c2c3d":"from plotly import __version__\nimport plotly.graph_objs as go \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot","b14e9cda":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","f61f313c":"cr = pd.read_csv(\"\/kaggle\/input\/crimes-in-boston\/crime.csv\",encoding='latin1')","a1abab8b":"cr.head()","5a53bf2a":"cr.info()","0531c8d6":"cr.isnull().sum()","d2bb6c65":"cr[\"SHOOTING\"].fillna(\"N\", inplace = True)","03d022f4":"cr.Lat.replace(-1, None, inplace=True)\ncr.Long.replace(-1, None, inplace=True)","f7451332":"cr.apply(pd.Series.nunique)","12c341f9":"cr.drop_duplicates(subset=\"INCIDENT_NUMBER\", inplace=True)","baccc130":"cr.info()","469fd538":"#For sorting weekdays in correct order a key is created\nm = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]","19736023":"#The data of total crime values\ncrimes_per_year = pd.DataFrame(data=cr['YEAR'].value_counts().reset_index().values, columns=[\"YEAR\",\"CRIME COUNT\"]).sort_values('YEAR').reset_index(drop=True)\ncrimes_per_month = pd.DataFrame(data=cr['MONTH'].value_counts().reset_index().values, columns=[\"MONTH\",\"CRIME COUNT\"]).sort_values('MONTH').reset_index(drop=True)\ncrimes_per_day = pd.DataFrame(data=cr['DAY_OF_WEEK'].value_counts().reset_index().values, columns=[\"DAY\",\"CRIME COUNT\"])\ncrimes_per_day[\"DAY\"] = pd.Categorical(crimes_per_day['DAY'], categories=m, ordered=True)\ncrimes_per_day = crimes_per_day.sort_values('DAY').reset_index(drop=True)\ncrimes_per_hour = pd.DataFrame(data=cr['HOUR'].value_counts().reset_index().values, columns=[\"HOUR\",\"CRIME COUNT\"]).sort_values('HOUR').reset_index(drop=True)\ncrimes_per_district = pd.DataFrame(data=cr['DISTRICT'].value_counts().reset_index().values, columns=[\"DISTRICT\",\"CRIME COUNT\"])\ncrimes_per_street = pd.DataFrame(data=cr['STREET'].value_counts().reset_index().values, columns=[\"STREET\",\"CRIME COUNT\"]).sort_values('CRIME COUNT',ascending=False).reset_index(drop=True).head(50)","e4efbc64":"#Data for total crime counts for each UCR Parts\nucr_year = pd.DataFrame(data =(cr.groupby([\"YEAR\",\"UCR_PART\"]).count()[['INCIDENT_NUMBER']]).reset_index().values, columns=[\"YEAR\",\"UCR_PART\",\"CRIME COUNT\"]).sort_values('YEAR').reset_index(drop=True)\nucr_month = pd.DataFrame(data =(cr.groupby([\"MONTH\",\"UCR_PART\"]).count()[['INCIDENT_NUMBER']]).reset_index().values, columns=[\"MONTH\",\"UCR_PART\",\"CRIME COUNT\"]).sort_values('MONTH').reset_index(drop=True)\nucr_day = pd.DataFrame(data =(cr.groupby([\"DAY_OF_WEEK\",\"UCR_PART\"]).count()[['INCIDENT_NUMBER']]).reset_index().values, columns=[\"DAY\",\"UCR_PART\",\"CRIME COUNT\"]).sort_values('DAY').reset_index(drop=True)\nucr_day[\"DAY\"] = pd.Categorical(ucr_day['DAY'], categories=m, ordered=True)\nucr_day = ucr_day.sort_values('DAY').reset_index(drop=True)\nucr_hour = pd.DataFrame(data =(cr.groupby([\"HOUR\",\"UCR_PART\"]).count()[['INCIDENT_NUMBER']]).reset_index().values, columns=[\"HOUR\",\"UCR_PART\",\"CRIME COUNT\"]).sort_values('HOUR').reset_index(drop=True)\nucr_district = pd.DataFrame(data =(cr.groupby([\"DISTRICT\",\"UCR_PART\"]).count()[['INCIDENT_NUMBER']]).reset_index().values, columns=[\"DISTRICT\",\"UCR_PART\",\"CRIME COUNT\"])\nucr_street = pd.DataFrame(data =(cr.groupby([\"STREET\",\"UCR_PART\"]).count()[['INCIDENT_NUMBER']]).reset_index().values, columns=[\"STREET\",\"UCR_PART\",\"CRIME COUNT\"]).sort_values('CRIME COUNT',ascending=False).reset_index(drop=True).head(50)","054a27c4":"offense_code_count = pd.DataFrame(cr['OFFENSE_CODE_GROUP'].value_counts().reset_index().values, columns=[\"OFFENSE_CODE_GROUP'\",\"CRIME COUNT\"])","21014c92":"fig = make_subplots(\n    rows=2, cols=3,specs=[[{\"type\": \"scatter\"}, {\"type\": \"scatter\"},{\"type\": \"scatter\"}],[{\"type\": \"scatter\"},{\"type\": \"bar\"}, {\"type\": \"bar\"}]],\n    subplot_titles=(\"Number of crimes per year\", \"Number of crimes per month\", \"Number of crimes per day\", \"Number of crimes per hour\",\"Number of crimes per district\",\"Number of crimes per streets (For highest 50 value)\"))\n# Add traces\nfig.add_trace(go.Scatter(x=crimes_per_year[\"YEAR\"], y=crimes_per_year[\"CRIME COUNT\"]), row=1, col=1)\nfig.add_trace(go.Scatter(x=crimes_per_month[\"MONTH\"], y=crimes_per_month[\"CRIME COUNT\"]), row=1, col=2)\nfig.add_trace(go.Scatter(x=crimes_per_day[\"DAY\"], y=crimes_per_day[\"CRIME COUNT\"]), row=1, col=3)\nfig.add_trace(go.Scatter(x=crimes_per_hour[\"HOUR\"], y=crimes_per_hour[\"CRIME COUNT\"]), row=2, col=1)\nfig.add_trace(go.Bar(x=crimes_per_district[\"DISTRICT\"], y=crimes_per_district[\"CRIME COUNT\"]), row=2, col=2)\nfig.add_trace(go.Bar(x=crimes_per_street[\"STREET\"], y=crimes_per_street[\"CRIME COUNT\"]), row=2, col=3)\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Year\", row=1, col=1)\nfig.update_xaxes(title_text=\"Month\", range=[0, 13], row=1, col=2)\nfig.update_xaxes(title_text=\"Day\", row=1, col=3)\nfig.update_xaxes(title_text=\"Hour\",row=2, col=1)\nfig.update_xaxes(title_text=\"District\", row=2, col=2)\nfig.update_xaxes(title_text=\"Street\", row=2, col=3)\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Crime Count\", row=1, col=1)\nfig.update_yaxes(title_text=\"Crime Count\",row=1, col=2)\nfig.update_yaxes(title_text=\"Crime Count\", row=1, col=3)\nfig.update_yaxes(title_text=\"Crime Count\", row=2, col=1)\nfig.update_yaxes(title_text=\"Crime Count\", row=2, col=2)\nfig.update_yaxes(title_text=\"Crime Count\", row=2, col=3)\n# Update title\nfig.update_layout(showlegend=False,title_text=\"Distributions of Total Number of Crimes Between 2015-2018\", height=900)\nfig.show()","53aac656":"fig1 = px.line(ucr_year, x='YEAR', y=\"CRIME COUNT\", color=\"UCR_PART\",title='Yearly chages in number of crimes in UCR categories')\nfig1.show()","ddec0b57":"fig2= px.line(ucr_month, x='MONTH', y=\"CRIME COUNT\", color=\"UCR_PART\",title='Monthly chages in number of crimes in UCR categories')\nfig2.show()","27f65818":"fig3 = px.line(ucr_day, x='DAY', y=\"CRIME COUNT\", color=\"UCR_PART\",title='Daily chages in number of crimes in UCR categories')\nfig3.show()","759bf81e":"fig4 = px.line(ucr_hour, x='HOUR', y=\"CRIME COUNT\", color=\"UCR_PART\",title='Hourly chages in number of crimes in UCR categories')\nfig4.show()","4e91dcf4":"fig = make_subplots(\n    rows=1, cols=2,specs=[[{\"type\": \"pie\"}, {\"type\": \"pie\"}]],\n    subplot_titles=(\"Number of crimes per year\",\"Number of crimes for UCR Parts\"))\n\nfig.add_trace(go.Pie(labels=crimes_per_year['YEAR'], values=crimes_per_year['CRIME COUNT'], textinfo='label+percent',pull=[0, 0, 0.1, 0]), row=1, col=1)\nfig.add_trace(go.Pie(labels=ucr_year['UCR_PART'], values=crimes_per_year['CRIME COUNT'], textinfo='label+percent',pull=[0, 0, 0.1, 0]), row=1, col=2)\n\nfig.update_layout(showlegend=False,title_text=\"Distribution percentages of Total Number of Crimes Between 2015-2018\", height=500)\nfig.show()","22a8d0b8":"df = pd.DataFrame(data =(cr.groupby([\"YEAR\",\"UCR_PART\",'OFFENSE_CODE_GROUP']).count()[['INCIDENT_NUMBER']]).reset_index().values, columns=[\"YEAR\",\"UCR_PART\",'OFFENSE_CODE_GROUP',\"CRIME COUNT\"])\nfig = px.sunburst(df, path=['YEAR', 'UCR_PART', 'OFFENSE_CODE_GROUP'], values='CRIME COUNT')\n\nfig.show()","e9856bb2":"ucr_offense = pd.DataFrame(data =(cr.groupby([\"UCR_PART\",\"OFFENSE_CODE_GROUP\"]).count()[['INCIDENT_NUMBER']]).reset_index().values, columns=[\"UCR_PART\",\"OFFENSE_CODE_GROUP\",\"CRIME COUNT\"]).sort_values('UCR_PART').reset_index(drop=True)\nucr_offense['all'] = 'all'\nfig = px.treemap(ucr_offense, path=['all', 'UCR_PART', 'OFFENSE_CODE_GROUP'], values='CRIME COUNT',color='CRIME COUNT',color_continuous_scale='RdBu')\nfig.show()","cc2d95ba":"df = ucr_offense.sort_values('CRIME COUNT',ascending=False).reset_index(drop=True)\nfig = px.bar(df.head(25),x = \"OFFENSE_CODE_GROUP\", y =\"CRIME COUNT\",color=\"UCR_PART\",)\nfig.update_layout(\n    title_text='Top 25 Crimes in Boston', # title of plot\n    xaxis_title_text='Offense Code Group', # xaxis label\n    yaxis_title_text='Count', # yaxis label\n    barmode='stack', xaxis={'categoryorder':'total descending'}\n)\nfig.show()","444d7af0":"df = ucr_offense.sort_values('CRIME COUNT',ascending=False).reset_index(drop=True)\nfig = px.bar(df.tail(25),x = \"OFFENSE_CODE_GROUP\", y =\"CRIME COUNT\",color=\"UCR_PART\",)\nfig.update_layout(\n    title_text='Least Committed 25 Crimes in Boston', # title of plot\n    xaxis_title_text='Offense Code Group', # xaxis label\n    yaxis_title_text='Count', # yaxis label\n    barmode='stack', xaxis={'categoryorder':'total ascending'}\n)\nfig.show()","d0cae09e":"ucr_offense[ucr_offense['CRIME COUNT']< 1000].sort_values('CRIME COUNT').reset_index(drop=True)","996e1587":"other = df[25:].sum()[['CRIME COUNT']]\ntop25 = df[:25].sum()[['CRIME COUNT']]\nprint(f'''Count of total crimes - Top25 {other}\nCount of most commited 25 crimes {top25}''')","095cfe2a":"labels = ['Top 25','Other crimes']\nvalues = [258035,24428]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, textinfo='label+percent',insidetextorientation='radial')])\nfig.show()","c272d399":"plt.subplots(figsize=(11,6))\nsns.scatterplot(x='Lat',\n                y='Long',\n                hue='DISTRICT',\n                alpha=0.1,\n                data=cr)\nplt.legend(loc=2)","e9bc6066":"crime_loc = pd.DataFrame(data =(cr.groupby(['DISTRICT',\"Lat\",\"Long\",\"OFFENSE_CODE_GROUP\"]).count()[['INCIDENT_NUMBER']]).reset_index().values,columns=['DISTRICT',\"Lat\",\"Long\",\"OFFENSE_CODE_GROUP\",\"CRIME COUNT\"])","4b052f55":"fig = px.scatter(crime_loc[crime_loc['Lat']!=-1], x=\"Lat\", y=\"Long\", animation_frame=\"OFFENSE_CODE_GROUP\", animation_group=\"CRIME COUNT\",\n            color=\"DISTRICT\",width=800, height=500)\n\nfig[\"layout\"].pop(\"updatemenus\") \nfig.show()","c6e7267b":"crime_loc[crime_loc['Long']!=-1][crime_loc['Lat']!=-1]","e35cd2e8":"fig = px.scatter(crime_loc[crime_loc['Long']!=-1][crime_loc['Lat']!=-1], x=\"Lat\", y=\"Long\",color ='DISTRICT', facet_col=\"OFFENSE_CODE_GROUP\", facet_col_wrap=10,\n              facet_row_spacing=0.05, \n              facet_col_spacing=0.05, \n              height=950, width=1800,\n              title=\"Distributions of offences over city\")\nfig.for_each_annotation(lambda a: a.update(text=a.text.split(\"=\")[-1]))\n#fig.update_yaxes(showticklabels=True)\nfig.update_xaxes(range=[42.25, 42.4])\nfig.update_yaxes(range = [-71.2, -71])\nfig.show()","b0077a56":"location = pd.DataFrame(data =(cr.groupby([\"Lat\",\"Long\"]).count()[['INCIDENT_NUMBER']]).reset_index().values, columns=[\"Lat\",\"Long\",\"CRIME COUNT\"])\nx,y = location['Long'], location['Lat']\nfig = px.density_mapbox(location,lat=\"Lat\",lon=\"Long\",z=\"CRIME COUNT\",radius=10,center=dict(lat=42.357791, lon=-71),zoom = 10,mapbox_style=\"stamen-terrain\",height=500,width=800)\nfig.show()","45000753":"cr1 = pd.read_csv(\"\/kaggle\/input\/crimes-in-boston\/crime.csv\",encoding='latin1')\n\ntmp = cr1.groupby('INCIDENT_NUMBER')['YEAR'].count().sort_values(ascending = False)\ntmp = pd.DataFrame({'INCIDENT_NUMBER': tmp.index, 'NUM_RECORDS': tmp.values})\nseriousCrimes = cr.merge(tmp[tmp['NUM_RECORDS'] > 2 ], on = 'INCIDENT_NUMBER', how = 'inner')\nseriousCrimes = seriousCrimes[['Lat','Long','OFFENSE_CODE_GROUP']].dropna()","dff3fc71":"from folium.plugins import MarkerCluster\nimport folium.plugins as plugins\nf = folium.Figure(width=800, height=500)\nboston_map = folium.Map(location = [seriousCrimes['Lat'].mean(), \n                                  seriousCrimes['Long'].mean()], \n                      zoom_start = 11).add_to(f)\n\nincidents=folium.map.FeatureGroup()\n#creating a Marker for each point. \nincidents2=plugins.MarkerCluster().add_to(boston_map)\nfor lat,lon,label in zip(seriousCrimes.Lat,seriousCrimes.Long,seriousCrimes.OFFENSE_CODE_GROUP):\n    folium.Marker(location=[lat,lon],icon=None,popup=label).add_to(incidents2)\n\nboston_map.add_child(incidents2)\n\nboston_map","5fa6cabc":"print(f\"Possible places and times for next crime(Top 5 places and times):\\n\\nDistricts:\\n{crimes_per_district.head()['DISTRICT']}\\n\\nStreets:\\n{crimes_per_street.head()['STREET']}\\n\\nMonth:\\n{crimes_per_month.sort_values('CRIME COUNT',ascending=False).head()['MONTH'].reset_index(drop=True)}\\n\\nDay:\\n{crimes_per_day.sort_values('CRIME COUNT',ascending=False).head()['DAY'].reset_index(drop=True)}\\n\\nHour:\\n{crimes_per_hour.sort_values('CRIME COUNT',ascending=False).head()['HOUR'].reset_index(drop=True)}\")","2c92fd0a":"Top 25 crimes constitute 91.4% of the total crimes. The probability of occurrence of the next crime is higher in this category. ","63536fdc":"For convenience in visulization and compresion main data frame (cr = crime.csv) is organized in different forms.","12705fde":"* How has crime changed over the years?\n\n  Crime number is the hghest in 2017 and lowest in 2015. There is a significant decrese in the crime numbers in 2018. \n  However, the records begin in June 22, 2015 and continue to October 3, 2018. So there are 6 missing months in 2015 and 3 months for 2018. So, the significant decrease in this year is most probably cause by these missing values.\n\n\n","7cfbb14b":"The Records begin in June 22, 2015 and continue to October 3, 2018. So, there are missing months in 2015 and 2018.\n\nColumn names and missing data counts were checked.","26198a1b":"# Analysis Based on Crime Types","7c98acb4":"Before showing the crime distribution on the map, the districts were represented with different colors to indicate their area and location in Boston. As can be seen, the areas were the crimes are higher most likely in the center of the city. The districts with lower crime rates are also the outmost areas.","f3b49d7e":"# General Analysis","b316371c":"In general 31.6% of the crimes belong to UCR part three and committed in 2017. ","324fe332":"As it can be seen the data has 17 columns and 327820 entiries. To take a close look at the columns with null values, count null values.","cdd1e21f":"To see exacly how many crimes were commited markers were added in the Boston map.","474113a0":"There is a significant difference between Top 25 crimes and least committed 25 crimes. From the graph 'Least Committed 25 Crimes in Boston' we can see that some crimes categories has value lower than 100. To see the over all situation crimes with lower occurancey than 1000 is printed.","3e8d188d":"The most and least committed crimes were found and cathegorized according to UCR parts.","7f2a7ce0":"Data frame has 280156 different incidents under 4 main UCR categories for 12 district and for 4 years. Incident numbers indicates that there are dubicated values in my data.Dublicated values are deleted.","adc27a49":"# Conclusions","7ff6fb92":"36 different crime occured less than 1000 time in 4 years. So, it is possible that certain grup of crimes is the majority.\n\nTop 25 crime count is compared total crime count.","296a0ce7":"Python and it's libraies pandas and numpy are used for organizing the data set and for calculations. Different kinds of plots are used for convenience in analysis and for visualization. For this reason plotly and follium are used.","33329774":"From the figure 'Distributions of Total Number of Crimes Between 2015-2018' following inferences can be made;\n\n* Yearly:\n\nThe is a drastic increase in crime rate between 2015-2016. It can be seen that in 2017 crime count is slightly higher than 2016. Most likely the reason is missing months in 2015 and 2018.\n\n* Monthly: \n\nThe crime count varies thorugh year between 2015-2018.In spring and summer periods crime count is relatively high compare to winter sesion. 7th,8th and 9th months (July, August and September) are the top three months of the year for crime counts. \n\n* Daily:\n\nThere is also a variation in the crime numbers during a week. Crime numbers see the bottom in the weekends where they have the highest value in Friday. Except Friday, there is no significant difference in the crime number during the weekdays. \n\n* Hourly:\n\n'Number of crimes per hour' graph shows hourly changes in crime rate. Crime number changes a lot throughout the day.It has the highest values between 10 am - 8 pm and lowest values between 1 am - 7 am.\n\n* District\n\nThere is no homogenous distribution of crime between districts. The first five district has almost twofold crimes compare to rest of the districts. \n\n* Street\n\nChange in the crime number between streets are much more higher compare districts. Most of the streets the crime rate is under 1000 for a year. The Washingthon street has the hisghest crime number. \n\n","1206226b":"The figures below show the distribution of different crimes over Boston. However it is also possibleto see that some locations are mislabeled. We can see district points are overlapping with each other. ","b97b562f":"# **Introduction**","3ab7033f":"\n* What can you say about the distribution of different offenses over the city?\n\n\nThere is no homogeneous distribution over the city. Crimes are most likey committed in the central areas. ","3e869538":"\n* Is it possible to predict where or when a crime will be committed?\n\nIt is possible to next crime occur near the city center where the districs with higher crime rates are located. Also, next crime might occur in the summer months, during day time because most of the crimes happend at that times. So, if we assume that next crimes follow the same pattern with the ones from 2015-2018, we can preapere a list for where and where will next crime committed.\n","c8dbba1b":"The data is provided in csv format. It is imported and read by using pandas.","a2cc0db9":"The data has 6 colums with missing values. For shooting colums missing values are replaced with N to indicate there is no shooting. For missing location informations in Lat and Long column colums missing values are replaced with -1. These location values neglected during analysis.","65def998":"It is posible to create a safe environment by analyzing the crime records. Finding connections between places and dates with the crimes, helps us to understand where or when will the next crime happend.\n\nThe aim of this project is to investigate if there is such a connection in the Boston crime data and answer following questions:\n\nHow has crime changed over the years?\nIs it possible to predict where or when a crime will be committed?\nWhat can you say about the distribution of different offenses over the city?\nThe project incudes seven sections:\n\nIntroduction\nSet Up\nData\nGeneral Analysis\nAnalysis Based on Crime Types\nAnalysis Based on Crime Locations\nConclusions\nEach section includes explanations of 'What has been done?\" and \"What did we obtain by doing this?\". At the last section, Conclusion, there is a summary of all analysis with the questions answered.","3883cd09":"# Set Up","bc23bd6b":"# Analysis Based on Location","35317ccc":"Number of unique entries were found for each column.","c0d57c2f":"After seeing the general trend in crimes, now different crime types are also considered. To categorize crimes different offense codes and groups are used in the data frame. The most general one between these categories is the UCR Parts. Now take a look in the crime numbers in UCR Parts to see if they follow the same trend with the general one. \n","555e012f":"# Data","f9db39d8":"It can be seen from the figures below that all the UCR parts follow the general trend but minor changes occur in Part One crimes. Crimes cathegorized under \"Other\" doesn't change much between 2015-2018. \nWhen compare to other UCR parts, Part One type crime rates vary less monthly and weekly.\nNo matter when or where Part three is the most committed crime part among all. "}}