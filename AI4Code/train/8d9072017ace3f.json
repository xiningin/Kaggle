{"cell_type":{"2a1c02af":"code","a00a5469":"code","04435088":"code","cf548115":"code","1ce18616":"code","c03accbc":"code","3746bf77":"code","a3500536":"code","8bdad99b":"code","dbf0c84a":"markdown","da34f526":"markdown","8e2ed9c2":"markdown","dbbbdeac":"markdown","48cce9ce":"markdown","68fbef2c":"markdown","97687406":"markdown"},"source":{"2a1c02af":"import numpy as np\nimport pandas as pd","a00a5469":"# read income data\ngame = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/games.csv')\nplayer = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/players.csv')\nplay = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/plays.csv')\n\ntracking2018 = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2018.csv')\ntracking2019 = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2019.csv')\ntracking2020 = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2020.csv')\n\ntracking = tracking2018\ntracking.append(tracking2019)\ntracking.append(tracking2020)\n\nPFF = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/PFFScoutingData.csv')","04435088":"import math\npunt = pd.merge(play[play.specialTeamsPlayType=='Punt'],\n                 game,\n                 how = \"inner\", on = 'gameId')\nkickoff = pd.merge(play[play.specialTeamsPlayType=='Kickoff'],\n                 game,\n                 how = \"inner\", on = 'gameId')\n\n# function to determine nearest receiver\ndef nearest_to_ball(_x,_y,_team,_gameId,_playId):\n    global tracking\n    subplay = tracking[(tracking.playId ==_playId) & (tracking.gameId ==_gameId)\n                       &(tracking.team==_team)]\n    subplay = subplay.reset_index()\n    min_dist=170**2\n    playerId=0\n    for i in range(len(subplay)):\n        if ((subplay['x'][i]-_x)**2+(subplay['y'][i]-_y)**2)<min_dist:\n            min_dist= ((subplay['x'][i]-_x)**2+(subplay['y'][i]-_y)**2)\n            playerId= subplay['nflId'][i]\n    return playerId","cf548115":"#punt muffed\npunt_muffed = punt[punt.specialTeamsResult == 'Muffed']\npunt_muffed = pd.merge(punt_muffed[['gameId', 'playId', 'possessionTeam','homeTeamAbbr','visitorTeamAbbr']],\n                  tracking[(tracking.team == 'football') & (tracking.event=='punt_muffed')],\n                  how = 'inner', on = ['gameId','playId']                 \n                 )\npunt_muffed = punt_muffed[['gameId', 'playId', 'possessionTeam','homeTeamAbbr','visitorTeamAbbr','x','y']]\n\n#kickoff muffed\nkickoff_muffed = kickoff[kickoff.specialTeamsResult == 'Muffed']\nkickoff_muffed = pd.merge(kickoff_muffed[['gameId', 'playId', 'possessionTeam','homeTeamAbbr','visitorTeamAbbr']],\n                  tracking[(tracking.team == 'football') & (tracking.event=='punt_muffed')],\n                  how = 'inner', on = ['gameId','playId']                 \n                 )\nkickoff_muffed = kickoff_muffed[['gameId', 'playId', 'possessionTeam','homeTeamAbbr','visitorTeamAbbr','x','y']]","1ce18616":"nearest_nflid = []\nfor i in range(len(punt_muffed)):\n    if punt_muffed['possessionTeam'][i]==punt_muffed['visitorTeamAbbr'][i]:\n        nearest_nflid.append(nearest_to_ball(punt_muffed['x'][i],punt_muffed['y'][i],\n                                             \"home\",punt_muffed['gameId'][i],punt_muffed['playId'][i]))\n    elif punt_muffed['possessionTeam'][i]==punt_muffed['homeTeamAbbr'][i]:\n        nearest_nflid.append(nearest_to_ball(punt_muffed['x'][i],punt_muffed['y'][i],\n                                             \"away\",punt_muffed['gameId'][i],punt_muffed['playId'][i]))\n    else:\n        pass\np_cnt = np.ones(len(punt_muffed))\nk_cnt = np.zeros(len(punt_muffed))\npunt_muffed = pd.concat([punt_muffed,\n                    pd.DataFrame(nearest_nflid, columns = ['nflId']),\n                    pd.DataFrame(p_cnt,columns=['punt_cnt']),\n                    pd.DataFrame(k_cnt, columns=['kickoff_cnt'])\n                   ],\n                  axis=1)\npunt_muffed.head(5)\n","c03accbc":"nearest_nflid = []\nfor i in range(len(kickoff_muffed)):\n    if kickoff_muffed['possessionTeam'][i]==kickoff_muffed['visitorTeamAbbr'][i]:\n        nearest_nflid.append(nearest_to_ball(kickoff_muffed['x'][i],kickoff_muffed['y'][i],\n                                             \"home\",kickoff_muffed['gameId'][i],kickoff_muffed['playId'][i]))\n    elif kickoff_muffed['possessionTeam'][i]==kickoff_muffed['homeTeamAbbr'][i]:\n        nearest_nflid.append(nearest_to_ball(kickoff_muffed['x'][i],kickoff_muffed['y'][i],\n                                             \"away\",kickoff_muffed['gameId'][i],kickoff_muffed['playId'][i]))\n    else:\n        pass\np_cnt = np.zeros(len(kickoff_muffed))\nk_cnt = np.ones(len(kickoff_muffed))\nkickoff_muffed = pd.concat([kickoff_muffed,\n                    pd.DataFrame(nearest_nflid, columns = ['nflId']),\n                    pd.DataFrame(p_cnt,columns=['punt_cnt']),\n                    pd.DataFrame(k_cnt, columns=['kickoff_cnt'])\n                   ],\n                  axis=1)\nkickoff_muffed.head(5)","3746bf77":"muffed = punt_muffed\nmuffed.append(kickoff_muffed)\n\nmuffed['total'] = muffed['punt_cnt']+muffed['kickoff_cnt']","a3500536":"pp = pd.merge(muffed, player, how='inner', on ='nflId')\npp= pp[['nflId','punt_cnt','kickoff_cnt','total','displayName','Position']]\n\nimport seaborn as sns\nax = sns.displot(data=pp[['Position']],x=\"Position\", binwidth=5, \n                 #hue=\"specialTeamsResult\", \n                 multiple=\"stack\")\nax.set(title='Muffed by position')","8bdad99b":"pp[['displayName','total']].groupby(['displayName']).sum('total').sort_values(by = 'total', ascending=False)","dbf0c84a":"# III. Results","da34f526":"Blunders on punt","8e2ed9c2":"May be there is a weak link.","dbbbdeac":"![ooops](https:\/\/billswire.usatoday.com\/wp-content\/uploads\/sites\/65\/2021\/01\/USATSI_15479143.jpg?w=1000&h=600&crop=1)","48cce9ce":"We want to estimate ability to catch the ball (for opponent receiver)\n\n# I. Collect the data","68fbef2c":"# II. Determine player\nWho was the nearest to ball","97687406":"Blunders on kickoff"}}