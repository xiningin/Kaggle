{"cell_type":{"c1eb9d99":"code","5900bf75":"code","4ce77f37":"code","e4093520":"code","06435f75":"code","7ced8139":"code","01445c79":"code","6fd80d79":"code","e507053b":"code","e3038c5a":"code","9d446860":"code","35e3eec8":"markdown","0c910f80":"markdown","dcf7b6e2":"markdown","2f7f88ec":"markdown","c7204c77":"markdown"},"source":{"c1eb9d99":"# Importar librerias utiles para la manipulacion y visualizacion de data\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# importing functools for reduce()\nimport functools\n# importing operator for operator functions\nimport operator","5900bf75":"# Importar datos de archivo train.csv\ntrain = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\n\nfigsize_rect=(13,7) # dimensiones para graficos en formato rectangular\nfigsize_sqr=(10, 10) # dimensiones para graficos en formato cuadrado\n\nmpl.rcParams['font.size'] = 15\nmpl.rcParams['axes.labelsize'] = 15\nmpl.rcParams['lines.linestyle'] = '-'\nmpl.rcParams['lines.color'] = '#1372B2'\nmpl.rcParams[\"legend.title_fontsize\"] = 16\ncolors = ['#1372B2', \"#F19917\",'#F76413','#2B6B85','#359CAE']","4ce77f37":"plt.figure(figsize=figsize_sqr)\nfrequencyToMszoning = train.groupby('MSZoning')['MSZoning'].count()\nfrequencyToMszoning.plot(kind='pie', autopct='%1.f%%', textprops=dict(color=\"#fff\"), colors = colors, fontsize=18)\nlegend = (\n    'Commercial', 'Floating Village Residential', 'Residential High Density', 'Residential Low Density',\n    'Residential Medium Density')\nplt.legend(labels=legend,\n           title=\"General zoning classification of the sale\",\n           loc=\"center left\",\n           bbox_to_anchor=(1, 0, 0.5, 1))\nplt.draw()","e4093520":"plt.figure(figsize=figsize_rect)\nfrequencyToMszoning.plot(kind='bar')\nplt.ylabel(\"Frequency\")\nplt.draw()","06435f75":"plt.figure(figsize=figsize_sqr)\nfrequencyToFireplaces = train.groupby('Fireplaces')['Fireplaces'].count()\nfrequencyToFireplaces.plot(kind='pie', autopct='%1.f%%', textprops=dict(color=\"#000\"), colors = colors, fontsize=18)\nlegend = ('0', '1', '2', '3')\nplt.legend(labels=legend,\n           title=\"Number of fireplaces\",\n           loc=\"center left\",\n           bbox_to_anchor=(1, 0, 0.5, 1))\nplt.draw()","7ced8139":"plt.figure(figsize=figsize_rect)\nfrequencyToFireplaces.plot(kind='bar')\nplt.ylabel(\"Frequency\")\nplt.draw()","01445c79":"plt.figure(figsize=figsize_rect)\nyearToPrice = train.groupby('BedroomAbvGr')['BedroomAbvGr'].count().plot.line(figsize=figsize_rect, marker='o')\nplt.xlabel('Bedrooms above grade')\nplt.ylabel('Frequency')\nplt.draw()","6fd80d79":"x = train.sort_values(by=['TotRmsAbvGrd'])['TotRmsAbvGrd'].tolist()\nfrequencies = train.groupby('TotRmsAbvGrd')['TotRmsAbvGrd'].count().tolist()\ny = functools.reduce(operator.add, [list(range(1, n + 1)) for n in frequencies])\nplt.figure(figsize=figsize_rect)\nmarker_size = 40\nplt.scatter(x, y, marker_size)\nplt.ylabel(\"Frequency\")\nplt.xlabel(\"Total rooms above grade\")\nplt.draw()","e507053b":"plt.figure(figsize=figsize_rect)\nplt.hist(train.SalePrice, bins=15, rwidth=0.99)\nplt.xlabel(\"Sale Price\")\nplt.ylabel(\"Frequency\")\nplt.draw()","e3038c5a":"plt.show() # Mostrar graficos","9d446860":"def get_outliers(attr):\n    list_data = train[attr].tolist()\n    Q1, Q3 = np.quantile(list_data, [0.25, 0.75])\n    IQR = Q3 - Q1\n    lower_bound = Q1 - 1.5 * IQR\n    upper_bound = Q3 + 1.5 * IQR\n    return [num for num in list_data if num < lower_bound or num > upper_bound]\n\n\nprint(get_outliers('SalePrice'))  # Mediciones atipicas en la variable GarageArea\nprint(get_outliers('TotRmsAbvGrd'))  # Mediciones atipicas en la variable LotArea","35e3eec8":"# 3.10. Realice un histograma de frecuencia relativa para cualquiera de las variables.","0c910f80":"# 3.8. Realice una gr\u00e1fica de pastel y una gr\u00e1fica de barras para cualquier variable cuantitativa (libre elecci\u00f3n).","dcf7b6e2":"# 3.7. Realice una gr\u00e1fica de pastel y una gr\u00e1fica de barras para cualquier variable categ\u00f3rica (libre elecci\u00f3n).","2f7f88ec":"# 3.11. Detectar mediciones at\u00edpicas en los datos.","c7204c77":"# 3.9. Realice gr\u00e1ficas de l\u00ednea y unas gr\u00e1ficas de puntos para dos variables cuantitativas (libre elecci\u00f3n)."}}