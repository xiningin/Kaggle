{"cell_type":{"e6bc8c46":"code","da43a6b4":"code","0fec9074":"code","ae6a0f7b":"code","581c953d":"code","0540181f":"code","d76b3a97":"code","d6a78b45":"code","b5662133":"code","ae74f691":"code","94a04a50":"code","689303aa":"code","93daddfd":"markdown","09b713c6":"markdown"},"source":{"e6bc8c46":"%reset -sf","da43a6b4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n        \nimport collections\nimport matplotlib.pyplot as plt\nfrom pandas.plotting import scatter_matrix","0fec9074":"PREDS_NPY_PATH1 = \"\/kaggle\/input\/week6-open-tpu-aug\/xlm-roberta.npy\"\nPREDS_NPY_PATH2 = \"\/kaggle\/input\/week4\/transformers-preds.npy\"\ntest_preds = np.load(PREDS_NPY_PATH1)\ntest_preds2 = np.load(PREDS_NPY_PATH2)\n\ntest_preds = (0.5*test_preds + 0.5*test_preds2)\ntest_preds_original = test_preds.copy()\ntest_class = np.argmax(test_preds,axis=1)","ae6a0f7b":"test_class = np.argmax(test_preds,axis=1)\nax = scatter_matrix(pd.DataFrame(test_preds), alpha=1, figsize=(9, 9), diagonal='kde', c=test_class)\nfor i in range(5):\n    for j in range(5):\n        ax[i,j].set_xlim(0.0,1.0)\n        if i != j:\n            ax[i,j].set_ylim(0.0,1.0)\nplt.show()","581c953d":"plt.scatter(test_preds[:,3], test_preds[:,4], alpha=0.1, s=0.1, c=test_class)\nplt.gca().plot(np.linspace(*plt.gca().get_xlim()), np.linspace(*plt.gca().get_xlim()), color=\"red\")\nplt.show()","0540181f":"target_distirbution = [0.11388, 0.02350, 0.06051, 0.39692, 0.40519]\n\ndef scale_by_power(ratio):\n    return np.argmax(np.power(test_preds_original, ratio), axis=1)\n\ndef scale_by_multiply(ratio):\n    return np.argmax(np.multiply(test_preds_original, ratio), axis=1)\n\nmodification_function = scale_by_power  # change this if you want\n\ndef calc_class_share(test_class):\n    c = collections.Counter(test_class)\n    return [c[clf]\/len(test_preds) for clf in range(5)]\n\ndef loss(ratio):\n    test_class = modification_function(ratio)\n    class_share = calc_class_share(test_class)\n    loss = [abs(x-y) for x,y in zip(class_share, target_distirbution)]\n    return sum(loss)\n\nfrom scipy.optimize import minimize\nres = minimize(loss, [1,1,1,1,1], method=\"Nelder-Mead\")\nres.fun, res.x  # loss","d76b3a97":"test_class = modification_function(res.x)\ncalc_class_share(test_class)","d6a78b45":"calc_class_share(modification_function([1,1,1,1,1]))","b5662133":"# test_class = np.argmax(test_preds,axis=1)\nax = scatter_matrix(pd.DataFrame(test_preds), alpha=1, figsize=(9, 9), diagonal='kde', c=test_class)\nfor i in range(5):\n    for j in range(5):\n        ax[i,j].set_xlim(0.0,1.0)\n        if i != j:\n            ax[i,j].set_ylim(0.0,1.0)\nplt.show()","ae74f691":"test = pd.read_csv(\"\/kaggle\/input\/student-shopee-code-league-sentiment-analysis\/test.csv\")\ntest['rating'] = test_class + 1\n# test.loc[test['rating'] == 5, 'rating'] = 4\ntest[['review_id', 'rating']].to_csv(\"submission.csv\", index=False)","94a04a50":"!head submission.csv","689303aa":"collections.Counter(test['rating'])","93daddfd":"# Prediction adjustment","09b713c6":"# Prediction visualisation"}}