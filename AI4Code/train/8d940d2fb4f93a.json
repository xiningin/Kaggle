{"cell_type":{"f6d6ef08":"code","83805558":"code","aed812d9":"code","d1b91ce7":"code","2f903427":"code","01c2f317":"code","17044d37":"code","ae55e4b0":"code","fb1ea739":"code","4faeb2ee":"code","508fae55":"code","df7eab23":"code","96794df7":"code","d3ad2f2c":"code","c692f72a":"code","cf644a15":"code","323bc29f":"code","3c73f7a5":"code","01c410b5":"code","0f1ae860":"code","ffed512c":"code","0dabd19d":"code","653760d9":"code","c0454e4f":"code","3699f510":"code","ba1b6b76":"code","5b84355b":"markdown","38ee1aed":"markdown","37ea1497":"markdown","8a084e49":"markdown"},"source":{"f6d6ef08":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pprint import pprint\nfrom statistics import mean\nimport textwrap","83805558":"# Load the questions dataset\nquestions = pd.read_csv(\"\/kaggle\/input\/lok-sabha-questions\/questions_flattened.csv\")","aed812d9":"# General information\nquestions.info()","d1b91ce7":"# Each row stands for a \"question\". Check out the first 5 rows\nquestions.head()","2f903427":"# Check number of rows and columns\nprint(f\"There are {questions.shape[0]} rows and {questions.shape[1]} columns in this dataset\")","01c2f317":"# But these are not all unique questions. Check how many unique questions were presented\nprint(f\"A total of {questions.contents.unique().shape[0]} unique questions were asked in the Lok Sabha from {questions.date.min()} to {questions.date.max()}\")","17044d37":"# Quick pretty print function to help with the formatting of a question\n\ndef pprint_question(question, width=80):\n    if question.type=='STARRED':\n        print(f\"*Q.{question['id']}\", end=\"\")\n    else:\n        print(f\"Q.{question['id']}\", end=\"\")\n    print(question['date'].rjust(width, ' '))\n    print(f\"By: {question['from']}\")\n    print(\"\")\n    print(question['topic'].center(width, ' '))\n    print(\"\")\n    contents = question['contents']\n    contents = contents.replace('(a)','\\n(a)').replace('(b)','\\n(b)').replace('(c)','\\n(c)').replace('(d)','\\n(d)').\\\n                        replace('(e)','\\n(e)').replace('(f)','\\n(f)').replace('(g)','\\n(g)').replace('(h)','\\n(h)')\n    contents_lines = contents.splitlines()\n    for line in contents_lines:\n        print(textwrap.fill(line, width=width))\n\n\n# Printing the first question\npprint_question(questions.iloc[0])","ae55e4b0":"# Let's find out which MPs have been asking the most number of questions\nquestions_member_wise = questions.groupby('from')['from'].agg(['count']).sort_values('count', ascending=False).reset_index()\nquestions_member_wise.columns = ['MP', 'Number of Questions']\nquestions_member_wise","fb1ea739":"# Let's get some statistics on who asked the longest and shortest questions in the ongoing session\nquestions['Question Length'] = questions.contents.apply(len)\nquestions_length_wise = questions.sort_values('Question Length')[['from', 'id', 'date', 'type', 'topic', 'contents', 'Question Length']]\nquestions_length_wise","4faeb2ee":"# What did these questions look like? Here's the shortest\npprint_question(questions_length_wise.iloc[0])","508fae55":"# And the longest one\npprint_question(questions_length_wise.iloc[-1])","df7eab23":"# Would be nice to see which MPs are more verbose and which ones more terse on average\ndef count_average_agg(q):\n    names = {\n        'Number of Questions': q.id.count(),\n        'Average Question Length': q['Question Length'].mean()\n    }\n    return pd.Series(names, index=['Number of Questions', 'Average Question Length'])\n\nquestions.groupby('from').apply(count_average_agg).reset_index().sort_values('Average Question Length', ascending=False)","96794df7":"# Let's find out which state's MPs have been the most active\nquestions_state_wise = questions.groupby('state')['state'].agg(['count']).sort_values('count', ascending=False).reset_index()\nquestions_state_wise.columns = ['State', 'Number of Questions']\nplt.figure(figsize=(15, 5))\nplt.title('State-wise distribution of questions')\nsns.barplot(x='State', y='Number of Questions', data=questions_state_wise)\nplt.xticks(rotation=90)\nplt.show()","d3ad2f2c":"# Are bigger states therefore more \"active\" in asking questions in the Lok Sabha?\n# Not quite. Recall that not each state has an equal number of representatives in the Lok Sabha.\n# Let's try to calculate the activity score of a state as : Number of questions from the state \/ Number of constituencies in the state\n\n# Load members state, constituency info\nmembers = pd.read_csv(\"\/kaggle\/input\/lok-sabha-questions\/members.csv\")\n\n# Find number of members from each State\nstate_counts = members.groupby('State')['State'].count().to_dict()\n\n# Map state_counts to questions_state_wise\nquestions_state_wise['Number of MPs'] = questions_state_wise['State'].map(state_counts)\n\n# Check out state wise questions now\nquestions_state_wise.head()","c692f72a":"questions_state_wise['State MP Activity Score'] = questions_state_wise['Number of Questions'] \/ questions_state_wise['Number of MPs']\nquestions_state_wise.head()","cf644a15":"# Let's finally find out which state's MPs have been the most active\nquestions_state_wise = questions_state_wise.sort_values('State MP Activity Score', ascending=False)\nplt.figure(figsize=(15, 5))\nplt.title('MP Activity Scores across States')\nsns.barplot(x='State', y='State MP Activity Score', data=questions_state_wise)\nplt.xticks(rotation=90)\nplt.show()","323bc29f":"# What's up with Andaman and Nicobar Islands?\nquestions[questions['state']=='Andaman and Nicobar Islands'][['id', 'from', 'to', 'topic']]","3c73f7a5":"# Considering the political affiliation of the MPs, how many questions were contributed by members from a particular party?\nquestions_party_wise = questions.groupby('party')['party'].agg(['count']).sort_values('count', ascending=False).reset_index()\nquestions_party_wise.columns = ['Political Party', 'Number of Questions']\nplt.figure(figsize=(15, 5))\nplt.title('Party-wise distribution of questions')\nsns.barplot(x='Political Party', y='Number of Questions', data=questions_party_wise)\nplt.xticks(rotation=90)\nplt.show()","01c410b5":"# This graph isn't surprising. Need to formulate a Party MP Activity Score for better insights\n# Find number of members from each Party\nparty_counts = members.groupby('Party')['Party'].count().to_dict()\n\n# Map party_counts to questions_party_wise\nquestions_party_wise['Number of MPs'] = questions_party_wise['Political Party'].map(party_counts)\n\n# Check out party wise questions now\nquestions_party_wise.head()","0f1ae860":"# Calculate Party MP Activity Score\nquestions_party_wise['Party MP Activity Score'] = questions_party_wise['Number of Questions'] \/ questions_party_wise['Number of MPs']\n\n# Let's finally find out which party's MPs have been the most active\nquestions_party_wise = questions_party_wise.sort_values('Party MP Activity Score', ascending=False)\nplt.figure(figsize=(15, 5))\nplt.title('MP Activity Scores across Political Parties')\nsns.barplot(x='Political Party', y='Party MP Activity Score', data=questions_party_wise)\nplt.xticks(rotation=90)\nplt.show()","ffed512c":"# Collect all questions\nquestions_sunil = questions[questions['from'].str.contains('Sunil') & questions['from'].str.contains('Kumar')][['from', 'to', 'topic', 'contents']]\nquestions_sunil","0dabd19d":"# Grouping these by 'from'\nquestions_sunil_wise = questions_sunil.groupby('from')['from'].agg(['count']).sort_values('count', ascending=False).reset_index()\nquestions_sunil_wise.columns = ['Member of Parliament', 'Number of Questions']\nplt.figure(figsize=(15, 10))\nplt.title('Distribution of Lok Sabha questions across members named Shri Sunil Kumar')\nsns.barplot(x='Member of Parliament', y='Number of Questions', data=questions_sunil_wise)\nplt.show()","653760d9":"# Here's a helper function for visualization of issues\nfrom wordcloud import WordCloud, STOPWORDS\n\n# change the value to black\ndef black_color_func(word, font_size, position,orientation,random_state=None, **kwargs):\n    return(\"hsl(0,100%, 1%)\")\n\nstopwords = set(STOPWORDS)\nstopwords.update([\"India\", \"Indian\", \"Bharat\", \"Fund\", \"Scheme\", \"Project\", \"Ka\"])\n\ndef create_topic_wordcloud(questions):\n    text = \" \".join(topic for topic in questions.topic.tolist())\n    wordcloud = WordCloud(stopwords=stopwords, background_color=\"white\", width=3000, height=2000, max_words=400).generate(text)\n    # set the word color to black\n    wordcloud.recolor(color_func = black_color_func)\n    # set the figsize\n    plt.figure(figsize=[15,10])\n    # plot the wordcloud\n    plt.imshow(wordcloud, interpolation=\"bilinear\")\n    # remove plot axes\n    plt.axis(\"off\")","c0454e4f":"create_topic_wordcloud(questions[questions.party=='Indian National Congress'])\nplt.savefig('1.png')","3699f510":"create_topic_wordcloud(questions[questions.party=='Bharatiya Janata Party'])\nplt.savefig('2.png')","ba1b6b76":"questions[questions.state=='Uttarakhand'].groupby('from').agg('count')","5b84355b":"## The curious case of Shri Sunil Kumars\n* Mapping the Asking Member to an actual Member of Parliament was a difficult task. For e.g., consider the following names:\n  - Shri Sunil Kumar Singh\n  - Shri S.K. Singh\n  - Shri Sunil Singh\n  - *Singh, Shri Sunil Kumar*\n  - Singh, Sunil Kumar\n  - Singh, Sunil K.\n* These are all valid ways to write a name. Which one do we stick to? I choose to go with the full name approach with Last Name, First Name. Fuzzy-matching of Indian names was a difficult task, but it worked out well, thanks mostly to [thefuzz](https:\/\/github.com\/seatgeek\/thefuzz).\n* Btw, interestingly, we currently have *FIVE* Shri Sunil Kumar's as MPs:\n\n\n| Member Name | Party | Constituency |\n| --- | --- | --- |\n| Mondal, Shri Sunil Kumar | All India Trinamool Congress\t| Bardhaman Purba (SC)(West Bengal) |\n| Singh, Shri Sunil Kumar\t| Bharatiya Janata Party\t| Chatra (Jharkhand) |\n| Soni, Shri Sunil Kumar\t| Bharatiya Janata Party\t| Raipur (Chhattisgarh) |\n| Sunil Kumar Pintu, Shri\t| Janata Dal (United)\t| Sitamarhi (Bihar) |\n| Kumar, Shri Sunil\t| Janata Dal (United)\t| Valmiki Nagar (Bihar) |\n\n* Would be interesting to see how all the Shri Sunil Kumars stack up against each other","38ee1aed":"Let's contrast the topics raised by MPs from BJP and INC. Get word clouds for both.","37ea1497":"Check out the [description](https:\/\/github.com\/sammitjain\/loksabha-questions) for some more context about the datasets. I'm choosing to go with the flattened version for this notebook.","8a084e49":"Let's see what a question looks like with proper formatting."}}