{"cell_type":{"c70057b4":"code","15f5c028":"code","8140c326":"code","399c902a":"code","33e8be6d":"code","4800f9c6":"code","1eed15ed":"markdown","cb2d4ad3":"markdown","35fa3003":"markdown","d188fced":"markdown","07c64c7e":"markdown","20863590":"markdown","77316c9f":"markdown"},"source":{"c70057b4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","15f5c028":"# read the data\ninput_data = pd.read_csv(\"\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv\")\ninput_data.describe()","8140c326":"input_data.head()","399c902a":"# split data\nfrom sklearn.model_selection import train_test_split\nimport xgboost as xgb\n\ny = input_data.Outcome\nX = input_data.drop(\"Outcome\", axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.8)","33e8be6d":"# use xgboost and fit the model\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import StratifiedKFold, GridSearchCV\n\nmodel = XGBClassifier(use_label_encoder=False, verbosity=0)\n\n# set parameters to be searched\nparams = {'learning_rate': np.arange(0.01, 0.1, 0.02),\n          'n_estimator': np.arange(100, 1000, 200)}\n\n# demonstrate grid search\nfolds = StratifiedKFold(n_splits=5, shuffle=True)\ngscv = GridSearchCV(estimator=model, param_grid=params, cv=folds, scoring='f1')\ngscv.fit(X_train, y_train)\nprint(\"Best Parameters: \", gscv.best_params_)","4800f9c6":"# evaluate the model on test set\nfrom sklearn.metrics import classification_report\n\nmy_model = gscv.best_estimator_\npredictions = my_model.predict(X_test)\nprint(classification_report(y_test, predictions))","1eed15ed":"# Introduction\nThis is my first data science project with kaggle. Using the Pima Indian Diabates dataset, I will make a classification model that predicts whether the patients have diabates or not.\n\nI used ScikitLearn and XGBoost libraries to preprocess the data, perform the grid search, and evaluate the model with various metrics.","cb2d4ad3":"# Training and Prediction\nAs of the model selection, I used `XGBClassifier` since this is a classic logistic regression problem. Also demonstrated the grid search with `sklearn.GridSearchCV` to find the best hyperparameters. ","35fa3003":"Since there are only numerical features and no missing values, there is no need to perform encoding and to deal with missing values.","d188fced":"# Conclusion\nIn this notebook, I used ScikitLearn and XGBoost to make a prediction model of diabates. Things to improve includes model selection, feature engineering, etc.","07c64c7e":"Taking a first glance at the data, it has only numerical features and the data size is not large (768 x 7).","20863590":"Lastly, I performed the model evaluation with various metrics using `sklearn.metrics.classification_report`.","77316c9f":"# Prepare the dataset"}}