{"cell_type":{"9ce228a7":"code","ccad4960":"code","5230d943":"code","6cc1f99c":"code","571c9728":"code","bbc36cad":"code","09785386":"code","59e43f24":"code","6b32b7ed":"code","a9e4d544":"code","da8759b2":"code","d87e6004":"code","10269f5c":"code","b2237061":"code","68adf330":"code","3a7519ac":"markdown","e51e7273":"markdown","ee6afb3b":"markdown","adad1189":"markdown","32bb87ea":"markdown","e6a4a713":"markdown","7374a4cb":"markdown"},"source":{"9ce228a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ccad4960":"data = pd.read_csv('\/kaggle\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\ndata.head()","5230d943":"data.drop(['id', 'name', 'host_name', 'last_review'], axis='columns', inplace=True)\ndata['reviews_per_month'] = data['reviews_per_month'].fillna(value=0.0)\ndata.isna().sum()","6cc1f99c":"data.head()","571c9728":"fig, axes = plt.subplots(1, 2, figsize=(15, 5))\naxes = axes.flat\nsns.barplot(x=data['room_type'].value_counts().index, y=data['room_type'].value_counts(), ax=axes[0]);\naxes[0].set(xlabel='Room type', ylabel='Number of Listings', title='Number of Listings per room type');\nsns.stripplot(x='room_type', y='price', data=data, ax=axes[1]);\naxes[1].set(xlabel='Room type', ylabel='Price', title='Prices of Listings per room type');","bbc36cad":"fig, axes = plt.subplots(2, 2, figsize=(15, 12))\naxes = axes.flat\nsns.barplot(x=data['neighbourhood_group'].value_counts().index, y=data['neighbourhood_group'].value_counts(), ax=axes[0]);\naxes[0].set(xlabel='Neighbourhood Group', ylabel='Number of Listings', title='Number of listings per neighbourhood group');\nsns.stripplot(x='neighbourhood_group', y='price', data=data, ax=axes[1]);\naxes[1].set(xlabel='Neighbourhood Group', ylabel='Price', title='Prices of listings per neighbourhood group');\nsns.stripplot(x='neighbourhood_group', y='number_of_reviews', data=data, ax=axes[2]);\naxes[2].set(xlabel='Neighbourhood Group', ylabel='number_of_reviews', title='Number of Reviews of Listings per neighbourhood');\nfig.delaxes(axes[-1])","09785386":"fig, axes = plt.subplots(1, 2, figsize=(15, 5))\naxes = axes.flat\nsns.barplot(x=data['neighbourhood_group'].value_counts().index, y=data['neighbourhood_group'].value_counts(), ax=axes[0]);\naxes[0].set(xlabel='Neighbourhood Group', ylabel='Number of Listings', title='Number of Listings per neighbourhood');\nsns.stripplot(x='neighbourhood_group', y='reviews_per_month', data=data, ax=axes[1]);\naxes[1].set(xlabel='Neighbourhood Group', ylabel='reviews_per_month', title='Reviews per month of Listings per neighbourhood');","59e43f24":"highest_listings_per_host = data['host_id'].value_counts()[data['host_id'].value_counts() > 50]\nfig = plt.figure(figsize=(10, 7))\nax = sns.barplot(x=highest_listings_per_host.index, y=highest_listings_per_host);\nax.set(xlabel='host_id', ylabel='Number of Listings');\nplt.xticks(rotation=90);","6b32b7ed":"# Collect info on number of reviews per host (using host_id as identifier)\nhosts_most_reviews = data['number_of_reviews'].groupby(by=data['host_id']).sum().sort_values(ascending=False)\n# hosts_most_reviews = hosts_most_reviews[hosts_most_reviews]\nhosts_most_reviews = hosts_most_reviews.reset_index()\n\n# Get number of listings of each host_id\ns = data.loc[data['host_id'].isin(hosts_most_reviews['host_id'])]\nnum_listings_hosts_most_reviews = s['host_id'].value_counts()\n\n# Collect into a Dataframe\nhost_info = pd.DataFrame({\n    'host_id': hosts_most_reviews['host_id'].sort_values(),\n    'num_listings': list(num_listings_hosts_most_reviews.sort_index()),\n    'num_reviews': hosts_most_reviews.sort_values(by='host_id')['number_of_reviews']\n})\nhost_info = host_info.sort_values(by='num_reviews', ascending=False)\nhost_info = host_info.loc[(host_info['num_reviews'] > 1000) & (host_info['num_listings'] < 300)]\n\n\nfig, axes = plt.subplots(2, 1, figsize=(15, 7), sharex=True)\naxes = axes.flat\nsns.barplot(x='host_id', y='num_reviews', data=host_info, ax=axes[0]);\nsns.barplot(x='host_id', y='num_listings', data=host_info, ax=axes[1])\nplt.xticks(rotation=90);","a9e4d544":"fig, axes = plt.subplots(2, 2, figsize=(15, 10))\nsns.scatterplot(x='minimum_nights', y='price', data=data, ax=axes.flat[0]);\nsns.scatterplot(x='availability_365', y='price', data=data, ax=axes.flat[1]);\nsns.scatterplot(x='number_of_reviews', y='price', data=data, ax=axes.flat[2]);\nsns.scatterplot(x='reviews_per_month', y='price', data=data, ax=axes.flat[3]);","da8759b2":"mean_p = data['price'].groupby(data['neighbourhood']).mean()\nmedian_p = data['price'].groupby(data['neighbourhood']).median()\ntotal_num_reviews = data['number_of_reviews'].groupby(data['neighbourhood']).sum()\nmean_num_reviews = data['number_of_reviews'].groupby(data['neighbourhood']).mean()\ndata_neighbourhood = pd.DataFrame({'neighbourhood': mean_p.index,\n                                       'mean_price': mean_p.values,\n                                       'median_price': median_p.values,\n                                       'total_num_reviews': total_num_reviews.values})\ndata_neighbourhood.head()","d87e6004":"mean_p = data['price'].groupby(data['neighbourhood_group']).mean()\nmedian_p = data['price'].groupby(data['neighbourhood_group']).median()\ntotal_num_reviews = data['number_of_reviews'].groupby(data['neighbourhood_group']).sum()\nmean_num_reviews = data['number_of_reviews'].groupby(data['neighbourhood_group']).mean()\navg_reviews_per_month = data['reviews_per_month'].groupby(data['neighbourhood_group']).mean()\ndata_neighbourhood_group = pd.DataFrame({'neighbourhood_group': mean_p.index,\n                                       'mean_price': mean_p.values,\n                                       'median_price': median_p.values,\n                                       'total_num_reviews': total_num_reviews.values,\n                                        'avg_reviews_per_month': avg_reviews_per_month.values})\ndata_neighbourhood_group","10269f5c":"fig, axes = plt.subplots(3, 1, figsize=(10, 20))\nsns.barplot(x='neighbourhood_group', y='mean_price', data=data_neighbourhood_group, ax=axes.flat[0]);\nsns.barplot(x='neighbourhood_group', y='median_price', data=data_neighbourhood_group, ax=axes.flat[1]);\nsns.barplot(x='neighbourhood_group', y='total_num_reviews', data=data_neighbourhood_group, ax=axes.flat[2]);","b2237061":"d_num_reviews = pd.DataFrame(data['number_of_reviews'].groupby(data['minimum_nights']).sum())\nd_num_reviews = d_num_reviews.rename(columns={'number_of_reviews': 'total_num_reviews'})\nd_reviews_per_month = pd.DataFrame(data['reviews_per_month'].groupby(data['minimum_nights']).sum())\nd_reviews_per_month = d_reviews_per_month.rename(columns={'reviews_per_month':'total_reviews_per_month'})\neval_duration_of_stay = d_num_reviews.join(d_reviews_per_month)\nsubset_eval_duration_of_stay = eval_duration_of_stay.iloc[:15]","68adf330":"fig, axes = plt.subplots(1, 2, figsize=(15, 5));\nsns.barplot(x=subset_eval_duration_of_stay.index, y=subset_eval_duration_of_stay.total_num_reviews, ax=axes.flat[0]);\nsns.barplot(x=subset_eval_duration_of_stay.index, y=subset_eval_duration_of_stay.total_reviews_per_month, ax=axes.flat[1]);","3a7519ac":"## Observing preference of rooms with minimum number of nights","e51e7273":"### Number of listings and prices of each type of room and rooms in different neighbourhoods","ee6afb3b":"## Hosts with the most number of listings","adad1189":"## EDA","32bb87ea":"## Which host has the most number of reviews and listings?","e6a4a713":"## Data Preparation\n\n### Missing data and unnecessary columns","7374a4cb":"Based solely on the number of reviews and reviews per month, it seems as though most guests prefer taking rooms with the shortest possible requirement on minimum nights. It's possible that guests prefer the flexibility and prefer not being bound by a longer stay. It could also potentially indicate the preferred duration of stay of the guests, however more data would be needed to definitively conclude this."}}