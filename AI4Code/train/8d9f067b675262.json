{"cell_type":{"5c4774a3":"code","012c8fdb":"code","619da67e":"code","54aee0a5":"code","5528fe98":"code","6dae19db":"code","e1029be0":"code","1017e28f":"code","3cc144c1":"code","325e089c":"code","05db0b48":"code","8564cbe7":"code","45f2a84d":"code","4624a00f":"code","0efe7997":"code","34fda6a1":"code","eb433f4a":"code","8fc644b5":"code","b7f8ab2c":"markdown","72439224":"markdown","576908c4":"markdown","4abbc26f":"markdown","20894056":"markdown","97af6243":"markdown","6b16065c":"markdown","1effabb7":"markdown","62404137":"markdown","cc6707d2":"markdown","5b077abe":"markdown","978dc601":"markdown","aba6de22":"markdown","e874e2ca":"markdown","fe967591":"markdown","ad1da3b2":"markdown","48cd6371":"markdown","498a5146":"markdown","3e6a3b3d":"markdown","1fd660fc":"markdown","29b6c395":"markdown","ed251840":"markdown","f22a6b89":"markdown"},"source":{"5c4774a3":"import numpy as np\nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","012c8fdb":"company = pd.read_csv('..\/input\/values-of-top-nasdaq-copanies-from-2010-to-2020\/Company.csv')\ntweet_id = pd.read_csv('..\/input\/tweets-about-the-top-companies-from-2015-to-2020\/Company_Tweet.csv')\ntweet = pd.read_csv('..\/input\/tweets-about-the-top-companies-from-2015-to-2020\/Tweet.csv')\ncompany_value = pd.read_csv('..\/input\/values-of-top-nasdaq-copanies-from-2010-to-2020\/CompanyValues.csv')\n\ncompany.head()","619da67e":"tweet.head()","54aee0a5":"tweet_id.head()","5528fe98":"company_value['day_date'] = pd.to_datetime(company_value[\"day_date\"]).dt.strftime('%d-%m-%Y')\ncompany_value['day_date'] = pd.to_datetime(company_value[\"day_date\"])\ncompany_value.head()","6dae19db":"tweets = pd.merge(tweet_id , tweet , on=\"tweet_id\", how= \"inner\")\ntotal = tweets[\"comment_num\"] + tweets[\"retweet_num\"] + tweets[\"like_num\"]\ntweets[\"Date\"] = pd.to_datetime(tweets['post_date'],unit='s').dt.strftime('%d-%m-%Y')\ntweets[\"total_engangement\"] = total\ntweets.head()","e1029be0":"tweets = tweets.loc[tweets[\"total_engangement\"] > 200]\ntweets = tweets.sort_values([\"total_engangement\"] , ascending = False)\ntweets.head()","1017e28f":"!pip install vaderSentiment\n\n# creating a function for measuring the sentiments\n\ndef getSentiment(body):\n    \n    from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer\n    analyzer = SentimentIntensityAnalyzer()\n    \n    assert body is not None\n    vs = analyzer.polarity_scores(body)\n    score = vs['compound']\n    \n    if (score >= 0.05): \n        return \"Positive\"\n    \n    elif (score < 0.05 and score > -0.05):\n        return \"Neutral\"\n    \n    elif (score <= -0.05):    \n        return \"Negetive\"\n    \n    print(score)","3cc144c1":"tweets['Sentiment'] = tweets['body'].apply(lambda x: getSentiment(x))\ntweets.head()","325e089c":"tweets = tweets.loc[tweets[\"Sentiment\"] != \"Neutral\"]\ntweets.head(15)","05db0b48":"# Defining a general function for graphs to avoid having to write the same code over again.\nimport seaborn as sns\ndef getGraph(stock , date , daysBefore, daysAfter ):\n    \n    import datetime\n\n    date = pd.to_datetime(date)\n    \n    start1 = date - datetime.timedelta(days=daysBefore)\n\n    \n    end1 = date + datetime.timedelta(days=daysAfter)\n    \n    temp = company_value\n    \n    temp = temp.loc[company_value[\"ticker_symbol\"]  == stock]\n    temp = temp.loc[temp[\"day_date\"] > start1]\n    temp = temp.loc[temp[\"day_date\"] < end1]\n    \n\n    from matplotlib.pyplot import figure\n    import matplotlib.pyplot as plt\n\n    figure(figsize=(16, 10))\n    #sns.set_style(\"tik\")\n    plt.xlabel(\"Date\" , fontsize = 18)\n    plt.ylabel(f\"{stock} company_value\" , fontsize = 18)\n    sns.lineplot(\n    data = temp,\n        x = 'day_date',\n        y = 'open_value',\n        color = 'green' , \n    )\n\n    sns.lineplot(\n    data = temp,\n        x = 'day_date',\n        y = 'close_value', \n        color = 'red'\n    )\n    plt.axvline(x=date , color = '#42E3BB')\n    \n    plt.legend(labels=[\"Day Open\",\"Day Close\" , \"Date Posted\" ],fontsize = 16)","8564cbe7":"tweets[:6][[\"ticker_symbol\" ,\"Sentiment\" , \"Date\"]]","45f2a84d":"getGraph('AAPL' , '9-12-2015' , 20,  150)","4624a00f":"getGraph('AMZN' , '03-01-2017' , 20, 150 )","0efe7997":"getGraph('TSLA' , '23-07-2018' , 20, 150 )","34fda6a1":"getGraph('AMZN', '16-06-2017' , 20, 150 )","eb433f4a":"getGraph('AAPL', '24-06-2015' , 20, 150 )","8fc644b5":"getGraph('TSLA' ,'23-10-2018' , 20, 150 )","b7f8ab2c":"# Twitter's impact on stock market prices","72439224":"## Data Preview","576908c4":"Then, the `Neutral` values were dropped since they had no impact on stock market prices.","4abbc26f":"## Key Takeaways \n\n* Out of the 6 most popular tweets only 2 (33%) had an effect on the stock market. \n\n* Both tweets had a negative sentiment towards Tesla Inc. but the stock prices varied each time.\n\n* Twitter has an impact on stock market prices.","20894056":"## TSLA (Tesla INC)\n### 23-10-2018","97af6243":"## AAPL (Apple INC) \n### 09-03-2015","6b16065c":"## AMZN (Amazon.com)\n### 03-01-2017","1effabb7":"`tweet_id` and `tweet` data sets were merged using inner join, to create one data frame containg Tweets and their IDs. Then, a column `total_engagement` was added to calculate the total engagement on each tweet.","62404137":"This graph shows that the prices of Tesla INC went down as the tweet was made and continued to go down for the following few days.","cc6707d2":"## AMZN (Amazon.com)\n### 16-06-2017","5b077abe":"This graph shows tha Apple's stock prices remained unchanged by the tweet, however the trend over 150 days had its ups and downs.","978dc601":"## TSLA (Tesla INC)\n### 23-07-2018","aba6de22":"This graph shows that Tesla's stock prices went high as the tweet was made and this trend carried on for the following few days before the prices dropped and then rocketed again. ","e874e2ca":"#### Note\n\nTo keep the notebook concise, only the top 6 tweets were visualized. However, visualizing more tweets against company value will reveal further insights.","fe967591":"## APPL (Apple INC)\n### 24-06-2015","ad1da3b2":"## Sentiment Analysis\n\nThis was done using the VADER Sentiment Analysis. VADER is a lexicon and rule-based sentiment analysis tool that is specifically attuned to sentiments expressed on social media.\n\nA sentiment function was defined which calculated the sentiments of each tweet as `Neutral`, `Negative`, and `Positive` and added a column containing these values.","48cd6371":"This graph shows that the prices of Amazon.com stocks slightly went up after the tweet was made but the trend over 150 days remained constant.","498a5146":"## Data Collection \n\nThese data sets, which contain the **Values of Top NASDAQ Companies from 2010 to 2020** and **Tweets about the Top Companies from 2015 to 2020**, were made available by a kaggle contributor [here](https:\/\/www.kaggle.com\/omermetinn\/values-of-top-nasdaq-copanies-from-2010-to-2020) and [here](https:\/\/www.kaggle.com\/omermetinn\/tweets-about-the-top-companies-from-2015-to-2020) \n\nWhere:\n\n* AAPL = Apple\n* AMZN = Amazon.com\n* GOOGL = Google INC\n* MSFT = Microsoft\n* TSLA = Tesla INC","3e6a3b3d":"This graph shows that Amazon.com's stock prices rocketed up as the tweet was made but this was due to the general trend through 150 days. Hence, the tweet had little to no affect on the prices.","1fd660fc":"## Further Analysis\n\nThe `company_value` after the top 6 Tweets was then plotted against the `post_date` of corresponding tweets, to identify any correlation among them. ","29b6c395":"This graphs shows that there was not much difference in the price of Apple stocks when the tweet was made. Prices slightly went up and then dropped back.","ed251840":"## Summary\n\nTwitter has an impact on stock market prices which varies from company to company. The sentiment of tweets does not define if the stock prices will go high or low, however, a huge fluctuation is noticed each time a sentimental tweet is made regarding Tesla Inc.","f22a6b89":"## Filtering tweets\n\nThe tweets were then filtered to eleminate the less impactful ones as measured by their engagement, assuming that tweets which had over 200 engagements were impactful. Listed from higest to lowest engagements."}}