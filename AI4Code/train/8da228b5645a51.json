{"cell_type":{"3b0af2b9":"code","5dc70338":"code","f4c5a49c":"code","7ea0bf02":"code","3d5323dc":"code","86e4ec24":"code","1bcecae0":"code","6da1c42d":"code","f0a056df":"code","b680f22c":"code","fae7d7fe":"code","763e82a1":"code","a715d7a1":"code","935b4aab":"code","3cef75d7":"markdown","1b9833cf":"markdown","e3b573ac":"markdown","d4cebf4e":"markdown","d2adced4":"markdown","c84d65db":"markdown","3db719da":"markdown","d39d95af":"markdown","e268f0c4":"markdown","9dde9c1f":"markdown","8f20ee03":"markdown","8c86e17f":"markdown","8935d4d6":"markdown","f8d90d2e":"markdown","8cf7f6eb":"markdown","58dfab8d":"markdown"},"source":{"3b0af2b9":"!python -m pip install snap-stanford\nimport snap\n","5dc70338":"# https:\/\/snap.stanford.edu\/snappy\/index.html - various simple examples given here\n# https:\/\/snap.stanford.edu\/snappy\/doc\/tutorial\/index-tut.html - examples by topic\n# https:\/\/snap.stanford.edu\/snappy\/doc\/reference\/index-ref.html - docs topic by topic\n","f4c5a49c":"G = snap.TUNGraph.New() # Create UNoriented graph \n#G2 = snap.TNGraph.New() # Created DIRECTED graph\nG.AddNode(1) # Add nodes \nG.AddNode(2)\nG.AddNode(3)\nG.AddNode(4)\nG.AddEdge(1,2)\nG.AddEdge(2,3)\nG.AddEdge(3,4)\nG.AddEdge(4,1)\n\nprint(G.GetNodes(), G.GetEdges() )    \n\nsnap.PrintInfo(G,'Test Graph','graph_info.txt') # https:\/\/snap.stanford.edu\/snappy\/doc\/reference\/PrintInfo.html\n# Creates basic info on graph - numbers of edges, nodes, etc... I do not see how to make it print to screen\n","7ea0bf02":"snap.DrawGViz(G, snap.gvlDot, \"Gsmall_grid5x3.png\", \"Grid 5x3\") # Save image to png\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimg = mpimg.imread('Gsmall_grid5x3.png')\nplt.imshow(img)\nplt.show()","3d5323dc":"print(G.GetNodes(), G.GetEdges() )    ","86e4ec24":"G.IsEdge(1,2), G.IsEdge(1,3) ","1bcecae0":"for n in G.Nodes():\n  print(n.GetDeg() ) \n","6da1c42d":"  for n in G.Nodes():\n    NodeVec = snap.TIntV()\n    snap.GetNodesAtHop(G, n.GetId(), 1, NodeVec, False) # Get neigbours of current node # https:\/\/snap.stanford.edu\/snappy\/doc\/reference\/GetNodesAtHop.html\n","f0a056df":"Graph = snap.GenRndGnm(snap.PNGraph, 1000, 10000) # https:\/\/en.wikipedia.org\/wiki\/Erd%C5%91s%E2%80%93R%C3%A9nyi_model\n\n","b680f22c":"# generate a Preferential Attachment graph on 1000 nodes and node out degree of 3\nG8 = snap.GenPrefAttach(1000, 3) # https:\/\/en.wikipedia.org\/wiki\/Barab%C3%A1si%E2%80%93Albert_model\n# generate a network using Forest Fire model\nG6 = snap.GenForestFire(1000, 0.35, 0.35)","fae7d7fe":"GraphClustCoeff = snap.GetClustCf (G, -1) # https:\/\/snap.stanford.edu\/snappy\/doc\/reference\/GetClustCf.html\nprint(\"Clustering coefficient: %f\" % GraphClustCoeff)\n","763e82a1":"NIdCCfH = snap.TIntFltH()\nsnap.GetNodeClustCf(G, NIdCCfH) # https:\/\/snap.stanford.edu\/snappy\/doc\/reference\/GetNodeClustCf.html\nfor item in NIdCCfH:\n    print(item, NIdCCfH[item])\n","a715d7a1":"Graph = snap.GenRndGnm(snap.PNGraph, 1000, 10000) # Erdos-Renyi graph \nCfVec = snap.TFltPrV()\nCf = snap.GetClustCf(Graph, CfVec, -1) # https:\/\/snap.stanford.edu\/snappy\/doc\/reference\/GetClustCf1.html\nprint(\"Average Clustering Coefficient: %f\" % (Cf[0]))\nprint(\"Coefficients by degree:\\n\") \nfor pair in CfVec:\n    print(\"degree: %d, clustering coefficient: %f\" % (pair.GetVal1(), pair.GetVal2()))","935b4aab":"# generate a Preferential Attachment graph on 1000 nodes and node out degree of 3\nG8 = snap.GenPrefAttach(1000, 3)\n# vector of pairs of integers (size, count)\nCntV = snap.TIntPrV()\n# get distribution of connected components (component size, count)\nsnap.GetWccSzCnt(G8, CntV)\n# get degree distribution pairs (degree, count)\nsnap.GetOutDegCnt(G8, CntV)\n# vector of floats\nEigV = snap.TFltV()\n# get first eigenvector of graph adjacency matrix\nsnap.GetEigVec(G8, EigV)\n# get diameter of G8\nsnap.GetBfsFullDiam(G8, 100)\n# count the number of triads in G8, get the clustering coefficient of G8\nsnap.GetTriads(G8)\nsnap.GetClustCf(G8)","3cef75d7":"## Erdos Renyi Gnm","1b9833cf":"## Clustering coefficient vector for all nodes ","e3b573ac":"# Clustering coef","d4cebf4e":"# Create Graph: create, AddNode, AddEdge","d2adced4":"## Globabl clustering coef - average over nodes","c84d65db":"## Get clustering coefficients aggregated by degrees","3db719da":"# Plot graph to png and show it","d39d95af":"Notebook shows various examples\/functions how to work with SNAP graph library \nhttps:\/\/snap.stanford.edu\/snappy\/index.html","e268f0c4":"# Nodes and Edges number","9dde9c1f":"## Preferential Attachment, Forest Fire","8f20ee03":"# Iterate over nodes and GetDeg  for node","8c86e17f":"# Create different types of graphs","8935d4d6":"# Get neigbours of node - GetNodesAtHop","f8d90d2e":"# Links to helpful docs","8cf7f6eb":"# G.IsEdge(v1,v2) - check is there an edge between nodes v1,v2","58dfab8d":"# Connected components"}}