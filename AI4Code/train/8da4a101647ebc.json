{"cell_type":{"7429703e":"code","876d7f5f":"code","c3a4c2e5":"code","91fc1f39":"code","c8890662":"code","63817305":"code","cd65ff08":"code","56cc01ad":"code","439a53f5":"code","50a6aa01":"code","1418a3e3":"code","f2040666":"code","3f44aa39":"code","408b700d":"code","09b18d0f":"code","a62c9a01":"code","d957f657":"code","5dc310a2":"code","fd4241fa":"code","50ea9eac":"code","675b7a95":"markdown"},"source":{"7429703e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","876d7f5f":"import warnings\nwarnings.filterwarnings('ignore')\n\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.layers import Input, Dense\n\nimport tensorflow as tf\n#tf.logging.set_verbosity(tf.logging.ERROR)\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom tensorflow.keras.datasets import mnist\nimport numpy as np","c3a4c2e5":"(x_train, _), (x_test, _) = mnist.load_data()","91fc1f39":"x_train = x_train.astype('float32') \/ 255\nx_test = x_test.astype('float32') \/ 255","c8890662":"print(x_train.shape, x_test.shape)","63817305":"x_train[0]","cd65ff08":"x_train = x_train.reshape((len(x_train), np.prod(x_train.shape[1:])))\nx_test = x_test.reshape((len(x_test), np.prod(x_test.shape[1:])))","56cc01ad":"print(x_train.shape, x_test.shape)","439a53f5":"print(len(x_train[0]))\nprint(x_train[0].shape)","50a6aa01":"encoding_dim = 32","1418a3e3":"input_image = Input(shape= (784,))","f2040666":"encoder = Dense(encoding_dim, activation = 'relu')(input_image)","3f44aa39":"decoder = Dense(784, activation = 'sigmoid')(encoder)","408b700d":"model = Model(inputs = input_image,outputs = decoder)","09b18d0f":"model.summary()","a62c9a01":"model.compile(optimizer = 'adadelta', loss = 'binary_crossentropy')","d957f657":"model.fit(x_train,x_train, epochs=200, batch_size = 256, shuffle = True, validation_data = (x_test, x_test))","5dc310a2":"reconstructed_images = model.predict(x_test)","fd4241fa":"n = 7\nplt.figure(figsize=(20, 4))\nfor i in range(n):\n    ax = plt.subplot(1, n, i+1)\n    plt.imshow(x_test[i].reshape(28, 28))\n    plt.gray()\n    ax.get_xaxis().set_visible(False)\n    ax.get_yaxis().set_visible(False)\nplt.show()","50ea9eac":"n = 7\nplt.figure(figsize=(20, 4))\nfor i in range(n):\n    ax = plt.subplot(2, n, i + n + 1)\n    plt.imshow(reconstructed_images[i].reshape(28, 28))\n    plt.gray()\n    ax.get_xaxis().set_visible(False)\n    ax.get_yaxis().set_visible(False)\n\nplt.show()","675b7a95":"**CHAPTER - 11 -- Hands-on On Deep Learning**"}}