{"cell_type":{"6fb2a447":"code","2f14d24f":"code","5a91fbd5":"code","8c5665ac":"code","fb713a9c":"code","17f59215":"code","ee22dce9":"code","549c177b":"code","14be35fb":"code","2977828b":"code","4207ec14":"code","1fe306c4":"code","96d97972":"code","3df1db25":"code","c49224ee":"code","70abc323":"code","f6396c40":"code","cd4de7b1":"code","59fac849":"code","f6175dbf":"code","fed48c54":"code","ff00fdf1":"code","49af9aa2":"code","79046e21":"markdown","3de19687":"markdown","db8fbe90":"markdown","7f197e58":"markdown","76bd9f5c":"markdown","565a39d0":"markdown","6a967f6d":"markdown","e88a42cc":"markdown","ecd0149d":"markdown","d9e15229":"markdown","7748c3fe":"markdown","de2c0dc7":"markdown","81cf9ec9":"markdown","0f35c71f":"markdown","f4288742":"markdown"},"source":{"6fb2a447":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","2f14d24f":"train_data = pd.read_csv(\"..\/input\/train.csv\")","5a91fbd5":"train_data.head","8c5665ac":"train_data.describe()","fb713a9c":"train_data.head()","17f59215":"train_data.tail()","ee22dce9":"import seaborn as sns","549c177b":"train_data.groupby(['MSZoning']).mean()['SalePrice'].reset_index()","14be35fb":"zone_sale_data = train_data.groupby(['MSZoning']).mean()['SalePrice'].reset_index()","2977828b":"sns.barplot(x='MSZoning', y='SalePrice', hue='MSZoning', data=zone_sale_data)","4207ec14":"sns.scatterplot(x='MSZoning', y='SalePrice', hue='SalePrice', data=zone_sale_data)","1fe306c4":"year_sale_price = train_data[['YearBuilt', 'SalePrice']]","96d97972":"year_sale_price.head()","3df1db25":"sns.boxplot(x='SalePrice', y='YearBuilt', data=year_sale_price)","c49224ee":"train_data.groupby(['YearBuilt']).mean()['SalePrice'].head().reset_index()","70abc323":"mean_year_sale = train_data.groupby(['YearBuilt']).mean()['SalePrice'].reset_index()","f6396c40":"sns.scatterplot(x='YearBuilt', y='SalePrice', hue='YearBuilt', data=mean_year_sale)","cd4de7b1":"houseStyle_zone_sale = train_data.groupby(['HouseStyle', 'MSZoning']).mean()['SalePrice'].reset_index()\nhouseStyle_zone_sale","59fac849":"sns.barplot(x='HouseStyle', y='SalePrice', data=houseStyle_zone_sale)","f6175dbf":"sns.barplot(x='MSZoning', y='SalePrice', hue='HouseStyle', data=houseStyle_zone_sale)","fed48c54":"def getNewHouseStyle(x) :\n    return x + ' Apartment';\n\ntrain_data['NewHouseStyle'] = train_data['HouseStyle'].map(lambda x : getNewHouseStyle(x))\n\ntrain_data.head()","ff00fdf1":"binning_home_style = train_data.groupby(['HouseStyle', 'NewHouseStyle']).mean()['SalePrice'].reset_index() \nbinning_home_style","49af9aa2":"sns.barplot(x='HouseStyle', y='SalePrice', hue='NewHouseStyle', data=binning_home_style)","79046e21":"#### Data Visualization - Scatter Chart","3de19687":"#### Data Visualization - Box Chart","db8fbe90":"# Binning in Pandas\n\nBinning :- To create a new meaning column based on existinf coloumn.\n","7f197e58":"#### Data visualization - Scatter Chart","76bd9f5c":"# Display last five row of dataframe","565a39d0":"#### Get average sale price based on HouseStyle and MSZoning","6a967f6d":"# Describe dataframe","e88a42cc":"#### Get sales price zone wise ","ecd0149d":"# Data Exploration","d9e15229":"#### Get sale price corresponding years","7748c3fe":"# Display first five row of dataframe","de2c0dc7":"# Read from CSV file","81cf9ec9":"#### Install seaborn library for data visualization","0f35c71f":"#### Data visualization - Bar Chart","f4288742":"# Some operation with dataframe "}}