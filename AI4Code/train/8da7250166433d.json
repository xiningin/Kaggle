{"cell_type":{"e01f7124":"code","a4018731":"code","9ccd6e45":"code","81ffa5e5":"code","f29442db":"code","e0c7f09d":"code","8633957b":"code","888bea12":"code","2aaa3a0e":"code","cfea87eb":"code","c42d8209":"code","077b8fca":"markdown","1a1c0e4e":"markdown","9f41b807":"markdown","bb5e5867":"markdown","4cb30f67":"markdown","03a02ebe":"markdown"},"source":{"e01f7124":"# installing datatable\n!pip install ..\/input\/python-datatable\/datatable-0.11.0-cp37-cp37m-manylinux2010_x86_64.whl","a4018731":"## importing packages\nimport datatable as dt\nimport pandas as pd\n\nfrom datatable.models import Ftrl\nfrom sklearn.metrics import roc_auc_score\n\nimport riiideducation","9ccd6e45":"## reading data\ntrain = dt.fread(\"..\/input\/riiid-train-data-multiple-formats\/riiid_train.jay\")\nquestions = dt.fread(\"..\/input\/riiid-test-answer-prediction\/questions.csv\")","81ffa5e5":"## viewing train data\ntrain","f29442db":"## viewing questions data\nquestions","e0c7f09d":"## merging questions metadata with train data\nquestions.key = \"question_id\"\ntrain.names = {\"content_id\": \"question_id\"}\n\ntrain = train[dt.f.content_type_id == 0, :]\ntrain = train[:, :, dt.join(questions)]","8633957b":"## preparing train and validation data\ntrain_features = [\"user_id\", \"question_id\", \"prior_question_elapsed_time\"]\nquestion_features = [\"bundle_id\", \"part\", \"tags\"]\n\ntarget = train[:, \"answered_correctly\"]\ntrain = train[:, train_features + question_features]\n\nX_train, X_valid = train[:90000000, :], train[90000000:, :]\ny_train, y_valid = target[:90000000, :], target[90000000:, :]","888bea12":"## building and validating FTRL model\nmodel_ftrl = Ftrl() # you can set hyper-parameters with: model_ftrl = Ftrl(alpha = 0.005, nepochs = 1)\n\nmodel_ftrl.fit(X_train, y_train, X_validation=X_valid, y_validation=y_valid)\ny_pred = model_ftrl.predict(X_valid)\n    \nprint(f\"Validation AUC: {roc_auc_score(y_valid.to_numpy(), y_pred.to_numpy())}\")","2aaa3a0e":"## rebuilding FTRL model on entire dataset\nmodel_ftrl = Ftrl()\n\nmodel_ftrl.fit(train, target)","cfea87eb":"## initializing test environment\nenv = riiideducation.make_env()\niter_test = env.iter_test()","c42d8209":"## inferencing and incremental learning\nprev_test = pd.DataFrame()\n\nfor (current_test, current_prediction_df) in iter_test:\n\n    # extracting previous batch's targets\n    prev_target = eval(current_test[\"prior_group_answers_correct\"].iloc[0])\n\n    # incremental learning of FTRL model\n    if prev_test.shape[0] > 0:\n        prev_test[\"target\"] = prev_target\n        X_prev_test = dt.Frame(prev_test[prev_test.content_type_id == 0].rename(columns = {\"content_id\": \"question_id\"})[train_features + [\"target\"]])\n        X_prev_test = X_prev_test[:, :, dt.join(questions)]\n\n        y_prev_test = X_prev_test[:, \"target\"]\n        X_prev_test = X_prev_test[:, train_features + question_features]\n\n        model_ftrl.fit(X_prev_test, y_prev_test)\n\n    # inferencing of current batch\n    X_test = dt.Frame(current_test[current_test.content_type_id == 0].rename(columns = {\"content_id\": \"question_id\"})[train_features])\n    X_test = X_test[:, :, dt.join(questions)]\n    X_test = X_test[:, train_features + question_features]\n    current_prediction_df.answered_correctly = model_ftrl.predict(X_test).to_numpy().ravel()\n    env.predict(current_prediction_df)\n\n    # retaining current batch data for next batch\n    prev_test = current_test.copy(deep = True)\n","077b8fca":"## FTRL Model\nDatatable can be directly used to build an FTRL model. Documentation: https:\/\/datatable.readthedocs.io\/en\/latest\/manual\/ftrl.html\n\nFor this baseline notebook, all the default hyper-parameters are used. Tuning the hyper-parameters can improve the model's performance. Training the model on the entire dataset takes less than 20 seconds!","1a1c0e4e":"## Data Preparation\nFor this baseline notebook only **6 features** are used. Exploring and creating more features will certainly improve the score.\n\nThe first **90M** rows are used for training and rest for validation as a convenient choice though this might not be the most optimal validation strategy.\n","9f41b807":"## Inferencing and Incremental Learning\nOne of the great advantages of FTRL is the ability to perform **incremental learning**. What this really means is for every batch of newly available training data the model weights can be fine-tuned.\n\nSince this is precisely how the test data will be made available from the API, we could easily perform inferencing and then incremental learning of each batch of new data that becomes available.","bb5e5867":"## Loading data\nUsing the .jay format of the training data is the best option for datatable. It is available as a **Kaggle Dataset** [here](https:\/\/www.kaggle.com\/rohanrao\/riiid-train-data-multiple-formats).\n","4cb30f67":"## Scope of improvement\nWhile the notebook provides a baseline workflow for building an **incremental FTRL model**, there is a lot of scope for improving it. Here are some ideas (and there can be more) worth exploring:\n\n* Choose a good validation dataset that leads to stability\n* Create more features that can work well with FTRL\n* Tune [hyper-parameters of FTRL](https:\/\/datatable.readthedocs.io\/en\/latest\/manual\/ftrl.html#ftrl-model-parameters)\n* Blend multiple FTRL models or ensemble with models of other types","03a02ebe":"## FTRL (Follow The Regularized Leader)\n![FTRL.png](attachment:FTRL.png)\n\n**FTRL** is an online learning algorithm used for binary classification tasks. It became popular in the advertisement domain showing great results in CTR (Click Through Rate: Predicting if a user will click on an ad) problems with its incremental learning strategy.\n\nRead more about FTRL: https:\/\/static.googleusercontent.com\/media\/research.google.com\/en\/\/pubs\/archive\/41159.pdf\n\nThis notebook provides a **baseline FTRL model** using datatable. Datatable reads the entire dataset very fast as shown [here](https:\/\/www.kaggle.com\/rohanrao\/riiid-with-blazing-fast-rid). It has the **FTRL model inbuilt** which runs extremely fast as well, so it is convenient to use them together.\n"}}