{"cell_type":{"de100a9a":"code","12d97b48":"code","4866e108":"code","d0fa878c":"code","389e8e7e":"code","6d114ab4":"code","d3454b0c":"code","d414c0b4":"code","4acdfa6a":"code","a44e12c6":"code","1389a87d":"code","23d0aed6":"code","c4c1929f":"code","be570155":"code","d1019718":"code","c190a4b3":"code","081f59df":"code","49a5ea4e":"code","05c51f2d":"code","55adfcf3":"code","29042794":"code","35dcf23e":"code","d76748e8":"code","19cdce1c":"code","14dbac61":"code","66681b71":"code","c04daeb2":"code","79c8702d":"code","6f3f44c1":"markdown","3819ecee":"markdown","4145c26f":"markdown","85e7b1e9":"markdown","346a1693":"markdown","e626b37d":"markdown","4e189dde":"markdown","55e5cac4":"markdown","cd341a1f":"markdown","5f7a8fb9":"markdown","0848019e":"markdown","0d6e0ce6":"markdown","adf17ee9":"markdown","7dc8342b":"markdown","8d17a1e1":"markdown","fea477ee":"markdown","ce60c214":"markdown","48e199a7":"markdown","af49f5a0":"markdown","2a0679a3":"markdown","4c917f89":"markdown","02959bb7":"markdown","937af78b":"markdown","cc857fe7":"markdown","132ee9c5":"markdown","6e2741d7":"markdown","63c8be4b":"markdown","6bc53673":"markdown"},"source":{"de100a9a":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport math\n\nfrom sklearn.model_selection import train_test_split, RandomizedSearchCV, GridSearchCV\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom scipy.stats import randint\nfrom sklearn.metrics import accuracy_score, precision_score, classification_report, plot_confusion_matrix, roc_curve, auc\n\nimport warnings \nwarnings.filterwarnings('ignore')\n\n%matplotlib inline","12d97b48":"data = pd.read_csv(\"..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")\ndata.head()","4866e108":"data.info()","d0fa878c":"data.describe()","389e8e7e":"data.isnull().sum()","6d114ab4":"val_counts = data[\"output\"].value_counts()\nno_heart_attack = (val_counts[0] \/ data.shape[0]) * 100\nheart_attack = (val_counts[1] \/ data.shape[0]) * 100\n\nprint(f\"Heart Attack: {math.floor(heart_attack)}%\")\nprint(f\"No Heart Attack: {math.ceil(no_heart_attack)}%\")\n\nprint()\n\nsns.barplot(x = [\"No Heart Attack\", \"Heart Attack\"], y = [no_heart_attack, heart_attack])\nplt.show()","d3454b0c":"ax = plt.figure(figsize = (9,5))\nsns.countplot(\n    data=data,\n    x = \"sex\",\n    hue=\"output\",\n)\nplt.title(\"Distribution of Gender w.r.t Heart Attack\")\nplt.show()","d414c0b4":"val_counts = data.groupby(\"sex\")[\"output\"].value_counts()\nmale_heart_attack_percentage = (val_counts[1][1] \/ (val_counts[1][1]+val_counts[1][0])) * 100\nfemale_heart_attack_percentage = (val_counts[0][1] \/ (val_counts[0][1]+val_counts[0][0])) * 100\n\nprint(f\"Male heart Attack: {male_heart_attack_percentage}%\")\nprint(f\"Female heart Attack: {female_heart_attack_percentage}%\")","4acdfa6a":"plt.figure(figsize = (9,5))\nx = [\"Male\",\"Female\"]\ny = [male_heart_attack_percentage,female_heart_attack_percentage]\nplt.barh(x, y)\n  \nfor index, value in enumerate(y):\n    plt.text(value, index,\n             str(value)[:4]+\"%\")\n\nplt.title(\"Gender vs Heart Attack\")\nplt.show()","a44e12c6":"plt.figure(figsize = (9,5))\nsns.countplot(\n    data=data,\n    x = \"exng\",\n    hue=\"output\",\n)\nplt.title(\"Distribution of Exercise Induced Angina w.r.t Heart Attack\")\nplt.show()","1389a87d":"exang_val_counts = data.groupby(\"exng\")[\"output\"].value_counts()\nexang_heart_attack_percentage = (exang_val_counts[1][1] \/ (exang_val_counts[1][1]+exang_val_counts[1][0])) * 100\nno_exang_heart_attack_percentage = (exang_val_counts[0][1] \/ (exang_val_counts[0][1]+exang_val_counts[0][0])) * 100\n\nprint(f\"Exang heart Attack: {exang_heart_attack_percentage}%\")\nprint(f\"No Exang heart Attack: {no_exang_heart_attack_percentage}%\")\n\nplt.figure(figsize = (9,5))\nx = [\"Exang\",\"No Exang\"]\ny = [exang_heart_attack_percentage,no_exang_heart_attack_percentage]\nplt.barh(x, y)\n  \nfor index, value in enumerate(y):\n    plt.text(value, index,\n             str(value)[:4]+\"%\")\n\nplt.title(\"Exercise Induced Angina vs Heart Attack\")\nplt.show()","23d0aed6":"plt.figure(figsize = (9,5))\nsns.countplot(\n    data=data,\n    x = \"cp\",\n    hue=\"output\",\n)\nplt.title(\"Distribution of Chest Pain w.r.t Heart Attack\")\nplt.show()","c4c1929f":"cp_val_counts = data.groupby(\"cp\")[\"output\"].value_counts()\n\nx = []\ny = []\n\nfor i in range(4):\n    temp_per = (cp_val_counts[i][1] \/ (cp_val_counts[i][1]+cp_val_counts[i][0])) * 100\n    x.append(\"CP_\"+str(i))\n    y.append(temp_per)\n    print(f\"CP_{i} Heart Attack Percentage: {temp_per}%\")\n    \nprint()\n\nplt.figure(figsize = (9,5))\nplt.barh(x[::-1], y[::-1])\n  \nfor index, value in enumerate(y[::-1]):\n    plt.text(value, index,\n             str(value)[:4]+\"%\")\n\nplt.title(\"Chest Pain vs Heart Attack\")\nplt.show()","be570155":"plt.figure(figsize = (9,5))\nsns.countplot(\n    data=data,\n    x = \"fbs\",\n    hue=\"output\",\n)\nplt.title(\"Distribution of Fasting Blood Sugar w.r.t Heart Attack\")\nplt.show()","d1019718":"fbs_val_counts = data.groupby(\"fbs\")[\"output\"].value_counts()\nfbs_heart_attack_percentage = (fbs_val_counts[1][1] \/ (fbs_val_counts[1][1]+fbs_val_counts[1][0])) * 100\nno_fbs_exang_heart_attack_percentage = (fbs_val_counts[0][1] \/ (fbs_val_counts[0][1]+fbs_val_counts[0][0])) * 100\n\nprint(f\"FBS heart Attack: {exang_heart_attack_percentage}%\")\nprint(f\"No FBS heart Attack: {no_exang_heart_attack_percentage}%\")\n\nprint()\n\nplt.figure(figsize = (9,5))\nx = [\"FBS\",\"No FBS\"]\ny = [fbs_heart_attack_percentage,no_fbs_exang_heart_attack_percentage]\nplt.barh(x, y)\n  \nfor index, value in enumerate(y):\n    plt.text(value, index,\n             str(value)[:4]+\"%\")\n\nplt.title(\"Fasting Blood Sugar(FBS) vs Heart Attack\")\nplt.show()","c190a4b3":"plt.figure(figsize = (9,5))\nsns.countplot(\n    data=data,\n    x = \"restecg\",\n    hue=\"output\",\n)\nplt.title(\"Distribution of Resting Electrocardiographic Results w.r.t Heart Attack\")\nplt.show()\n\nrestecg_val_counts = data.groupby(\"restecg\")[\"output\"].value_counts()\n\nx = []\ny = []\n\nfor i in range(3):\n    temp_per = (restecg_val_counts[i][1] \/ (restecg_val_counts[i][1]+restecg_val_counts[i][0])) * 100\n    x.append(\"RESTECG_\"+str(i))\n    y.append(temp_per)\n    print(f\"RESTECG_{i} Heart Attack Percentage: {temp_per}%\")\n    \nprint()\n\nplt.figure(figsize = (9,5))\nplt.barh(x[::-1], y[::-1])\n  \nfor index, value in enumerate(y[::-1]):\n    plt.text(value, index,\n             str(value)[:4]+\"%\")\n\nplt.title(\"Resting Electrocardiographic Results vs Heart Attack\")\nplt.show()","081f59df":"ax = plt.figure(figsize = (9,5))\nsns.histplot(\n    data=data,\n    x = \"age\",\n    hue=\"output\",\n    binwidth=2\n)\nplt.title(\"Distribution of Age w.r.t Heart Attack\")\nplt.show()","49a5ea4e":"continuous_var_cols = [\"age\", \"trtbps\", \"chol\", \"thalachh\", \"oldpeak\", \"output\"]\n\nsns.pairplot(data[continuous_var_cols], hue=\"output\")\nplt.show()","05c51f2d":"for col in continuous_var_cols[:-1]:\n    plt.figure(figsize = (9,5))\n    sns.histplot(\n        data=data,\n        x = col,\n        hue=\"output\",\n        binwidth=2,\n        kde=True\n    )\n    plt.title(f\"Distribution of {col.upper()} w.r.t Heart Attack\")\n    plt.show()\n    print()","55adfcf3":"corr_matrix = data[continuous_var_cols].corr()\n\nplt.figure(figsize=(11,7))\nsns.heatmap(corr_matrix, center=0, annot=True)\nplt.title(\"Correlation among Attributes\")\nplt.show()","29042794":"# Splitting the data into train and test\n\nX = data.drop(columns=['output'])\ny = data['output']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 24)\nprint(f\"Train Data: {X_train.shape}, {y_train.shape}\")\nprint(f\"Test Data: {X_test.shape}, {y_test.shape}\")","35dcf23e":"all_models = {\n    \"LogisticRegressionModel\": LogisticRegression(),\n    \"RandomForestModel\": RandomForestClassifier(random_state = 18),\n    \"XGBoostClassifier\": XGBClassifier(random_state = 18, ),\n    \"KNeighborsClassifier\": KNeighborsClassifier(n_neighbors=15),\n    \"SVMClassifier\": SVC(),\n    \"DecisionTreeClassifier\":DecisionTreeClassifier(),\n    \"AdaBoostClassifier\":AdaBoostClassifier(base_estimator=RandomForestClassifier(random_state=18))\n}\n\nmodel_names = []\nmodel_scores = []\n\nfor model_name in all_models:\n    pipeline = make_pipeline(StandardScaler(), all_models[model_name])\n    pipeline.fit(X_train, y_train)\n    predictions = pipeline.predict(X_test)\n    accuracy = accuracy_score(y_test, predictions)\n    model_names.append(model_name)\n    model_scores.append(accuracy * 100)\n    print(f\"{model_name} got {str(accuracy*100)[:5]}% Accuracy.\")\n\nplt.figure(figsize = (9,5))\nplt.barh(model_names, model_scores)\n  \nfor index, value in enumerate(model_scores):\n    plt.text(value, index,\n             str(value)[:4]+\"%\")\n\nplt.title(\"Models vs Accuracy\")\nplt.show()","d76748e8":"param_dist={'max_depth':[3,5,7,10,None],\n              'n_estimators':[10,50,100,150,200,250,300,400,500],\n              'max_features':randint(1,15),\n               'criterion':['gini','entropy'],\n               'bootstrap':[True,False],\n               'min_samples_leaf':randint(1,15),\n              }","19cdce1c":"train_x = StandardScaler().fit_transform(X_train)","14dbac61":"rf_classifier = RandomForestClassifier(n_jobs = -1, random_state = 18)\nsearch_clfr = RandomizedSearchCV(rf_classifier, param_distributions = param_dist, n_jobs=-1, n_iter = 100, cv = 5)\nsearch_clfr.fit(train_x, y_train)","66681b71":"params = search_clfr.best_params_\nscore = search_clfr.best_score_\nprint(params)\nprint(score)\nsearch_clfr.best_estimator_","c04daeb2":"final_rf_model = RandomForestClassifier(bootstrap=False, max_depth=10, max_features=2,\n                       min_samples_leaf=7, n_jobs=-1, random_state=18)\nprediction_pipeline = make_pipeline(StandardScaler(), final_rf_model)\nprediction_pipeline.fit(X_train, y_train)","79c8702d":"prediction = prediction_pipeline.predict(X_test)\nprint(f\"Accuracy: {accuracy_score(y_test, prediction)*100}\")\nprint(f\"Precision: {precision_score(y_test, prediction)}\")\n\nclass_probabilities = prediction_pipeline.predict_proba(X_test)\npreds = class_probabilities[:, 1]\n\nfpr, tpr, threshold = roc_curve(y_test, preds)\nroc_auc = auc(fpr, tpr)\n\nprint(f\"AUC for our classifier is: {roc_auc}\")\n\nprint()\n\n# Plotting the ROC\nplt.figure(figsize = (9,7))\nplt.title('Receiver Operating Characteristic')\nplt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)\nplt.legend(loc = 'lower right')\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')\nplt.show()\n\nprint()\n\nfig, ax = plt.subplots(figsize=(11, 7))\nplot_confusion_matrix(pipeline, X_test, y_test, ax=ax)\nplt.grid(False)\nplt.title(\"Confusion Matrix\")\nplt.show()","6f3f44c1":"<b>Checking the distribution of Chest Pain with respect to Heart Disease<\/b>","3819ecee":"<div align=\"center\">\n\n# Heart Attack Extensive EDA, Visualizations and Prediction\n<\/div>","4145c26f":"<b>Observation: <\/b>People with age between 50-70 years are more prone to Heart Attack.","85e7b1e9":"<b>Checking the distribution of Fasting Blood Sugar with respect to Heart Disease<\/b>","346a1693":"From the above models we can see that Random Forest Classifier performs better than other model. So, let us go ahed with RandomForestClassifier.","e626b37d":"## Building a Predictive Model","4e189dde":"<ul>\n    <li>RESTECG_0: normal<\/li>\n    <li>RESTECG_1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)<\/li>\n    <li>RESTECG_2: showing probable or definite left ventricular hypertrophy by Estes' criteria<\/li>\n<\/ul>\n<b>Observation: <\/b>People with RESTECG 1 are more pronne to heart attack follwed by RESTECG 0 and RESTECG 2.","55e5cac4":"## Exploratory Data Analysis","cd341a1f":"<b>Observation: <\/b>There is no much difference between people with FBS and people without FBS. There is a little difference of 4.9%","5f7a8fb9":"### Plots for columns with Continuous values","0848019e":"### Checking the Data Distribution","0d6e0ce6":"<b>Checking Correlation Among Attributes<\/b>","adf17ee9":"<b>Observation: <\/b>The Heart attack percentage for females is 75% and for males is around 45% i.e. Females have more chances for having Heart Attack.","7dc8342b":"<b>Checking the distribution of Exercise Induced Angina (exng) with respect to Heart Disease<\/b>","8d17a1e1":"### Optimizing Random Forest Classifier","fea477ee":"## Exploring the Data","ce60c214":"## Conclusion\n\nAfter extensive exploratory data analysis (EDA) and experimenting with variety of classification models, these were the observations:\n\n1. The Heart attack percentage for females is 75% and for males is around 45% i.e. Females have more chances for having Heart Attack.\n2. People having Exercise Induced Angina have an heart attack percentage of 23.2% where as people with no Exercise Induced Angina have an heart attack percentage of 69.6%. Therefore people with Exercise Induced Angina have less chances of getting heart attack.\n3. People with chest pain type 1 (atypical angina) are more prone to heart attack.\n4. People with RESTECG 1 are more pronne to heart attack follwed by RESTECG 0 and RESTECG 2.\n5. People with less age has higher chances of Heart Attack.\n6. People with age between 50-70 years are more prone to Heart Attack.\n7. Out of all the experimented classification models Random Forest Classifier performed better than other models with an AUC of 0.942 and accuracy of 90.16% and precision of 0.86\n\n<table>\n    <tr>\n        <th>Metrics<\/th>\n        <th>Random Forest Classifier<\/th>\n    <\/tr>\n    <tr>\n        <th>Accuracy<\/th>\n        <td>90.16%<\/td>\n    <\/tr>\n    <tr>\n        <th>Precision<\/th>\n        <td>0.86<\/td>\n    <\/tr>\n    <tr>\n        <th>AUC<\/th>\n        <td>0.942<\/td>\n    <\/tr>\n<\/table>\n<br\/>\n\n<div align=\"center\">\n<b>PLEASE DO UPVOTE IF YOU LIKED THIS NOTEBOOK<\/b>\n<\/div>","48e199a7":"### Checking for best baseline model","af49f5a0":"<ul>\n    <li>Value 0: typical angina<\/li>\n    <li>Value 1: atypical angina<\/li>\n    <li>Value 2: non-anginal pain<\/li>\n    <li>Value 3: asymptomatic<\/li>\n<\/ul>\n<br\/>\n<b>Observation: <\/b> People with chest pain type 1 (atypical angina) are more prone to heart attack when compared to other chest pain categories.","2a0679a3":"<b>Checking the distribution of Sex with respect to Heart Disease<\/b>","4c917f89":"<b>Observation: <\/b>In the above plot we can see that no two columns are highly correlated. Hence there is no need of feature elimination for columns with continous data.","02959bb7":"## Bivariate Analysis","937af78b":"<b>Checking the distribution of Age with respect to Heart Disease<\/b>","cc857fe7":"<b>Checking the distribution of resting electrocardiographic results with respect to Heart Disease<\/b>","132ee9c5":"<b>Distribution plot for all columns with continuous variables<\/b>","6e2741d7":"<b>Observation: <\/b>Hear Attack percentage is 54 and No Heart Attack percentage is 46. So, the dataset is balanced and there is no need to balance the data.","63c8be4b":"<b>Observation: <\/b>From the above data we can see that the people having Exercise Induced Angina have an heart attack percentage of 23.2% where as people with no Exercise Induced Angina have an heart attack percentage of 69.6%. Therefore people with Exercise Induced Angina have less chances of getting heart attack.","6bc53673":"### Plots for columns with categorical values"}}