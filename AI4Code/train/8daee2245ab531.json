{"cell_type":{"d93eb6bf":"code","c3a68997":"code","95270edf":"code","c3f930b8":"code","58641688":"code","fb1bf224":"code","f6868cce":"code","32ee4e8f":"code","9e8b6b61":"code","0cc32f2c":"code","a9b30bc0":"code","155e7382":"code","fb09d00a":"code","f4c3ac17":"code","e257c1fe":"code","65c068e4":"code","2458cd44":"code","9473099d":"code","c744e9f2":"code","43c18aec":"code","fdb6dca2":"code","56f909c7":"code","49696ea9":"code","6baf4960":"code","bca271da":"markdown","17cfbf9e":"markdown","393a6923":"markdown"},"source":{"d93eb6bf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport matplotlib.pyplot as plt # plotting\nimport seaborn as sn # plotting\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c3a68997":"df=pd.read_excel('\/kaggle\/input\/web-analytics\/WebsiteData.xlsx')\ndf","95270edf":"fig, ax = plt.subplots()\ndf['Gender'].value_counts().plot(ax=ax, kind='bar')","c3f930b8":"fig, ax = plt.subplots()\ndf['Location'].value_counts().plot(ax=ax, kind='bar')","58641688":"fig, ax = plt.subplots()\ndf['Ethnicity'].value_counts().plot(ax=ax, kind='bar')","fb1bf224":"fig, ax = plt.subplots()\ndf['Language'].value_counts().plot(ax=ax, kind='bar')","f6868cce":"fig, ax = plt.subplots()\ndf['Affinity Category'].value_counts().plot(ax=ax, kind='bar')","32ee4e8f":"fig, ax = plt.subplots()\ndf['New vs Exisitng'].value_counts().plot(ax=ax, kind='bar')","9e8b6b61":"fig, ax = plt.subplots()\ndf['Traffic Source'].value_counts().plot(ax=ax, kind='bar')","0cc32f2c":"df[['Age']].plot(kind='hist',bins=[0,20,40,60,80,100],rwidth=0.8)\nplt.show()","a9b30bc0":"df[['Engagement']].plot(kind='hist',bins=[0,20,40,60,80,100],rwidth=0.8)\nplt.show()","155e7382":"#One hot encoding of categorical data\ndfe = pd.get_dummies(df)\ndfe","fb09d00a":"#Establishing correlation\ncorrMatrix = dfe.corr()\nplt.figure(figsize = (40,40))\nax=sn.heatmap(corrMatrix, annot=True)\nplt.show()","f4c3ac17":"upper = corrMatrix.where(np.triu(np.ones(corrMatrix.shape), k=1).astype(np.bool))\ns = upper.unstack()","e257c1fe":"#Establishing strong positive correlations\nso = s.sort_values(kind=\"quicksort\")\nsodf=pd.Series.to_frame(so)\npsodf=sodf.loc[0.0285<sodf[0]]\npsodf=psodf.loc[sodf[0]<1]\npsodf","65c068e4":"#Establishing strong negative correlations\nnsodf=sodf.loc[-0.027>sodf[0]]\nnsodf=nsodf.loc[sodf[0]>-0.1]\nnsodf","2458cd44":"sn.regplot(data=df.sample(n=1000),x ='Age', y='Engagement')","9473099d":"sn.swarmplot(x=\"Gender\", y=\"Engagement\", data=df)","c744e9f2":"sn.swarmplot(x=\"Location\", y=\"Engagement\", data=df)","43c18aec":"sn.swarmplot(x=\"Ethnicity\", y=\"Engagement\", data=df)","fdb6dca2":"sn.swarmplot(x=\"Language\", y=\"Engagement\", data=df)","56f909c7":"sn.swarmplot(x=\"Affinity Category\", y=\"Engagement\", data=df)","49696ea9":"sn.swarmplot(x=\"New vs Exisitng\", y=\"Engagement\", data=df)","6baf4960":"sn.swarmplot(x=\"Traffic Source\", y=\"Engagement\", data=df)","bca271da":"# ABOUT THE DATA\nI generated this data randomly, using Excel's INDEX, RANDBETWEEN and COUNTA functions. For instance, to generate the gender columns, I used the command =INDEX(J$3:J$4,RANDBETWEEN(1,COUNTA(J$3:J$4)),1), where J3 and J4 contain male and female. A similar formula extension was applied across all columns. ","17cfbf9e":"# TWO DIMENSIONAL EDA","393a6923":"# ONE DIMENSIONAL EDA"}}