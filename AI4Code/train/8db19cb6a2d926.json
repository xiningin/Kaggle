{"cell_type":{"5cde803a":"code","a201e34b":"code","8fdac841":"code","34972092":"code","1f891141":"code","5bdb11cf":"code","3406199d":"markdown","e43d9d83":"markdown","37f1cac0":"markdown"},"source":{"5cde803a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a201e34b":"#Read data into dataframe\ndf = pd.read_csv('..\/input\/nyse\/prices-split-adjusted.csv')\ndf.head()","8fdac841":"# The dataframe for one stock is just the larger dataframe filtered for that one stock\nwltw = df.query('symbol == \"WLTW\"')\n\n# Make a list of closing prices for the stock\nclosingWLTW = list(wltw['close'])\nwltw.head(100)","34972092":"# Set up variables to count the different types of combinations of closing prices.\n# upup means a stock closed up two days in a row\n\nupup = 0\nupdown = 0\ndownup = 0\ndowndown = 0\n\n# Iterate through the list of closing prices and check the amount of times the stock displayed each combination\nfor i in range(2,len(closingWLTW)):\n    if closingWLTW[i] > closingWLTW[i-1]:\n        if closingWLTW[i-1] > closingWLTW[i-2]:\n            upup += 1\n        else:\n            downup += 1\n    else:\n        if closingWLTW[i-1] < closingWLTW[i-2]:\n            downdown += 1\n        else:\n            updown += 1\n            \nprint('upup:', upup, 'updown:', updown, 'downup:', downup, 'downdown', downdown)","1f891141":"# A list of all the tickers to iterate through\ntickers = list(df.symbol.unique())\n\n\n# Make a list of dataframes where each dataframe represents one ticker\nlist_df = []\n\nfor n,g in df.groupby('symbol'):\n    list_df.append(g)","5bdb11cf":"# Similar for the single stock case\nupup = 0\nupdown = 0\ndownup = 0\ndowndown = 0\n\nfor i in list_df:\n    closingPrices = list(i['close'])\n    for i in range(2,len(closingPrices)):\n        if closingPrices[i] > closingPrices[i-1]:\n            if closingPrices[i-1] > closingPrices[i-2]:\n                upup += 1\n            else:\n                downup += 1\n        else:\n            if closingPrices[i-1] < closingPrices[i-2]:\n                downdown += 1\n            else:\n                updown += 1\n            \nprint('upup:', upup, 'updown:', updown, 'downup:', downup, 'downdown', downdown)","3406199d":"If wldw goes up, it's next move is likely up again, if it goes down, it's next move is likely up.\n\nNext step is checking all other stocks.","e43d9d83":"Testing impact of momentum for one stock:","37f1cac0":"If a stock closes up one day, it is slightly more likely to close up the next day too.\n\nIf a stock closes down one day, it is more likely to close up the next day.\n\nThis is an extremely basic way to track momentum, and doesn't take into consideration the size of the difference in closing prices which would play a big role in performance. It also only looks at data from at most 2010-2016, and less if the data isn't available (companies listed after 2010)."}}