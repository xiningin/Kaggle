{"cell_type":{"38b9dca4":"code","923f5be8":"code","5fab00e5":"code","1927c432":"code","21f3a064":"code","71502b3a":"code","0dd86156":"code","b65d74cf":"code","62ce9550":"code","f7cf3ee4":"code","1bd1a540":"code","7b3211c7":"code","c237984a":"code","aa0a5240":"code","6bc29824":"code","f0bfe5fa":"code","a1dd206b":"code","32b2c636":"code","5f1d704f":"code","4e6c6383":"code","6d1e733f":"code","0e005917":"code","232341a2":"code","22943deb":"markdown","9ead7531":"markdown","fd685a98":"markdown","bff681fd":"markdown","2022c110":"markdown","d478d94c":"markdown","39f4f4ce":"markdown","680d2abe":"markdown","2c8c1b0e":"markdown","1f9353ea":"markdown","7148dbd2":"markdown","c411cffc":"markdown","63574cc7":"markdown","0eef9735":"markdown","22944993":"markdown","249efd8f":"markdown","b0500a88":"markdown","7681a883":"markdown","065ad9f2":"markdown","d1dd257d":"markdown","0b4b57e0":"markdown","3de67d92":"markdown"},"source":{"38b9dca4":"import os","923f5be8":"print(\"There are following directories and files in this dataset\")\nprint(*list(os.listdir(\"..\/input\/cassava-leaf-disease-classification\")),sep = \"\\n\")","5fab00e5":"import glob\ntrain_images_jpg_format = glob.glob('..\/input\/cassava-leaf-disease-classification\/train_images\/*.jpg')\nlen(train_images_jpg_format)","1927c432":"import pandas as pd\n\nimport fastai\nfrom fastai.vision.all import *\n","21f3a064":"path = Path('..\/input\/cassava-leaf-disease-classification')\nimage_path = Path('..\/input\/cassava-leaf-disease-classification\/train_images')\ntraining_data_file = Path('..\/input\/cassava-leaf-disease-classification\/train.csv')\nsample_submission_file = Path('..\/input\/cassava-leaf-disease-classification\/sample_submission.csv')","71502b3a":"train_df = pd.read_csv(training_data_file)","0dd86156":"print(\"Size of Training data \\n\", train_df.shape)\nprint(\"----------------------------------------------------------\")\nprint(\"\\nFirst few samples of data are \\n\",train_df.head())","b65d74cf":"train_df['label'].value_counts()\n","62ce9550":"train_df_output_3 = train_df[train_df['label']==3].sample(frac=0.196,random_state=111)\ntrain_df_output_3.shape","f7cf3ee4":"new_df = pd.concat([train_df[train_df['label']==0],train_df[train_df['label']==1],train_df[train_df['label']==2],train_df_output_3,train_df[train_df['label']==4]]).reset_index(drop=True)\nnew_df.shape","1bd1a540":"image_data_loader = ImageDataLoaders.from_df(new_df, path=image_path,\n                               seed=42, fn_col=0, \n                               label_col=1, \n                               item_tfms=Resize(128), \n                               batch_tfms=aug_transforms(flip_vert=True, max_warp=0.), \n                               bs=128, val_bs=None, shuffle_train=True)","7b3211c7":"image_data_loader.device","c237984a":"image_data_loader.show_batch()","aa0a5240":"learn = cnn_learner(image_data_loader, resnet34, metrics=error_rate)","6bc29824":"learn.fine_tune(2,freeze_epochs = 4)","f0bfe5fa":"learn.fit_one_cycle(4,slice(1e-5,1e-3))","a1dd206b":"test_image_files = Path('..\/input\/cassava-leaf-disease-classification\/test_images')","32b2c636":"image_data_loader_test = image_data_loader.test_dl(get_image_files(test_image_files))","5f1d704f":"_,_,results = learn.get_preds(dl = image_data_loader_test, with_decoded = True)","4e6c6383":"sub = pd.read_csv(sample_submission_file)\nsub.head()","6d1e733f":"sub['label'] = results","0e005917":"sub.head()","232341a2":"sub.to_csv('my_submission_file.csv', index=False)","22943deb":"****Let us print the dataset","9ead7531":"Let us join the inputs selected from both the categories and call it a \"new_df\".","fd685a98":"****We will now count the number of images in the following directories:","bff681fd":"# Choosing the data for model training","2022c110":"We will select all the training data which has the output category as \"1\",\"2\",\"4\" and 0.196 % of training data which has the output category as \"3\" to have equal number of inputs with the same category of output.","d478d94c":"Make the predictions using our trained model called \"**learn**\".\n* Ignoring the first two outputs from the model, let us take our final result stored in variable \"**predictions**\"","39f4f4ce":"# Trainnig the image recognizer model","680d2abe":"Let us train the model for 2 epochs","2c8c1b0e":"# Selecting a subset of data for training purpose","1f9353ea":"Let us create a **ImageDataLoader** of our test data set","7148dbd2":"Defining the variables and assigning the paths for **test dataset**","c411cffc":"> # Bring it on -  Test data !!","63574cc7":"# Creating the image data loader","0eef9735":"**Import Pandas** - For data analysis \n**Import Fastai** - For training of deep learning model and predictions.\n\n**Note**: We are using Fastai version 2 (Not previous version of Fastai- which is version 1).\n\n","22944993":"# Importing necessary libraries","249efd8f":"# Analysing the data\n","b0500a88":"Let us print the number of data samples with each output category","7681a883":"We create a CNN (convolutional neural network) with the following specific details:\n\n* What data we want to train it on? <\/br> Our data to be used for training is \"image_data_loader\"\n\n* Which architecture to use? <\/br> We are using Resnet34\n\n* what metric to use for our training evaluation? <\/br> We have specified it as \"error_rate\"","065ad9f2":"Let us check the device type of our \"ImageDataLoader\" to make sure that we are using \"GPU\"","d1dd257d":"# Understanding the dataset","0b4b57e0":"Let us check few random images from our ImageDataLoader's batch to make sure that images and labels appears correctly in it.","3de67d92":"# Defining the variables and assigning the paths for this notebook"}}