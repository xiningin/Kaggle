{"cell_type":{"fc49e4f9":"code","5ed5cfb6":"code","760da5a4":"code","e1cef2c9":"code","3bb425ee":"code","58cc3328":"code","e9edfc53":"code","81686e89":"code","4b8c7642":"code","c2c4439d":"code","90ec02b3":"code","4e0619f4":"code","095a89ef":"code","f4309749":"code","49e6c26f":"code","d68fe380":"markdown","ba801129":"markdown","bf0d80cc":"markdown","325325aa":"markdown","5c692230":"markdown","0f426df8":"markdown","5181f41b":"markdown","1dc451a0":"markdown","8cc46293":"markdown","4d0d15f2":"markdown","14f8e223":"markdown","9484c439":"markdown","b3cefe1a":"markdown"},"source":{"fc49e4f9":"import pandas as pd\nimport numpy as np","5ed5cfb6":"df = pd.read_csv(\"..\/input\/hotel-booking\/hotel_booking.csv\")\ndf","760da5a4":"df.info()","e1cef2c9":"a = df.shape\nprint(\"The dataset has {} rows\".format(a[0]))","3bb425ee":"columns = list(df.columns)\ni = 0\ni2 = 0\nj=0\nsummation = 0\nwhile i<len(columns):\n    n = df[columns[i]].isna().sum()\n    if n>j:\n        j= n\n        i2 = i\n    else:\n        pass\n    i+=1\n    summation = summation + n\ntotal = df.shape[0]*df.shape[1]\npercentage = np.round(summation\/total,2)\nprint('The Dataset has {} missing values. {} Percent of Data are missed!'.format(summation,percentage))\nmost_missed = columns[i2]\nprint(\"The Column '{}' has the most missing values\".format(most_missed))","58cc3328":"df.drop(\"company\", axis = 1 , inplace = True)","e9edfc53":"s= df['country'].value_counts()","81686e89":"s.head()","4b8c7642":"adr=df['adr'].idxmax()\ndf['name'][adr]","c2c4439d":"final_mean= np.round(df[\"adr\"].mean(),2)\nfinal_mean","90ec02b3":"df['days']= df['stays_in_weekend_nights']+df['stays_in_week_nights']\nmean_days= np.round(df[\"days\"].mean(),2)\nmean_days","4e0619f4":"filtered_df = df[df['total_of_special_requests']==5]\nfiltered_df[['name', 'email']]","095a89ef":"def family_extractor(name):\n    list_name =name.split()\n    return list_name[-1]\n    \n\ndf['Family'] = df['name'].apply(family_extractor)\ndf['Family'].value_counts().head()","f4309749":"df[\"total_num_child\"]= df['children']+df['babies']\ndf.sort_values('total_num_child', ascending=False)[['name','total_num_child']]","49e6c26f":"def code_extractor(num):\n    code= num.split('-')\n    return code[0]\ndf['code']=df['phone-number'].apply(code_extractor)\ndf['code'].value_counts().head(3)","d68fe380":"# Number of Rows","ba801129":"# Special Request = 5","bf0d80cc":"# List of persons with the most children","325325aa":"# *Read The Dataset*","5c692230":"# Extract The Tel Codes","0f426df8":"# ADR Mean","5181f41b":"# Days of Stay Mean","1dc451a0":"# Missing Data Finder","8cc46293":"# Basic Information about the dataset","4d0d15f2":"# Delete Company Column","14f8e223":"# Name of the person who has the greatest ADR","9484c439":"# 5 most frequent families","b3cefe1a":"# Top 5 countries"}}