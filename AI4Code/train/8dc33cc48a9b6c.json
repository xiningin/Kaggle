{"cell_type":{"a03dde25":"code","13b6b142":"code","0cfc1aa6":"code","386ec60a":"code","a649716e":"code","a5903891":"code","013a463a":"code","61265203":"code","0166b942":"code","98cb61aa":"code","e12b8470":"code","4cb8ec2e":"code","3ee1f104":"code","9f06a0d0":"code","48646312":"code","bb886b09":"code","671cc0eb":"code","11f06ad6":"code","f31ef0ab":"code","e86f62ab":"markdown","0523b0de":"markdown","a5a52bda":"markdown","75c3d033":"markdown","62ed96a5":"markdown","923936cf":"markdown","a89dd941":"markdown","013f658d":"markdown","bd6cfea3":"markdown","ccdb7a33":"markdown","f01f63c6":"markdown","1426ee6b":"markdown","dc944c4a":"markdown","cbc8d14f":"markdown","379427da":"markdown","d7391fea":"markdown","1203dc76":"markdown","152328c4":"markdown","d550b955":"markdown","3bef9946":"markdown","df5a5766":"markdown","517a9b90":"markdown"},"source":{"a03dde25":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","13b6b142":"path = '..\/input\/data-tkl'\ndf=pd.read_csv(f'{path}\/Q15.csv')\ndf.tail()\nimport warnings\nwarnings.filterwarnings('ignore')\nimport seaborn as sns\nimport matplotlib.pylab as plt\nplt.style.use('seaborn-dark-palette')","0cfc1aa6":"from sklearn.linear_model import LinearRegression\nfrom plotnine import *\nimport matplotlib.pylab as pylab\nfrom statsmodels.regression.linear_model import OLS","386ec60a":"X=np.array(df[['K','L']].values)\ny=np.array(df.Y)\nimport statsmodels.api as sma\nx=sma.add_constant(X)\nmodel=sma.OLS(y,x)\nresults=model.fit()\nprint('\\nOLS\u7ebf\u6027\u6a21\u578b\u56de\u5f52R_square: \\n',results.rsquared)\nprint('\\nOLS\u7ebf\u6027\u6a21\u578b\u56de\u5f52R_adj: \\n',results.rsquared_adj)\n#print('\\nOLS\u7ebf\u6027\u56de\u5f52\u7ed3\u679c\uff1a\\n',results.summary())","a649716e":"#fig, ax = plt.subplots(5,2, figsize=(12, 16), facecolor='#f7f7f7')\nresid=pd.DataFrame(results.resid,columns=['resid'])\ndf_resid=pd.concat([df,resid],axis=1)\ndf_resid.tail()\ndf_plot=df_resid[['resid','K','L']]\n#fig,ax=plt.subplots(1,2,figsize=(10,6))\n\n(\nggplot(df_plot,aes(x='L',y='resid'))#\n+ geom_point(alpha = 0.5, size = 2)\n+theme(legend_position='none')+stat_smooth(color='blue')\n#+ggtitle('Linear Regression of Tax versus GDP')\n)\n\n","a5903891":"def reset_ramsey(res, degree=5):\n    '''Ramsey's RESET specification test for linear models\n\n    This is a general specification test, for additional non-linear effects\n    in a model.\n\n\n    Notes\n    -----\n    The test fits an auxiliary OLS regression where the design matrix, exog,\n    is augmented by powers 2 to degree of the fitted values. Then it performs\n    an F-test whether these additional terms are significant.\n\n    If the p-value of the f-test is below a threshold, e.g. 0.1, then this\n    indicates that there might be additional non-linear effects in the model\n    and that the linear model is mis-specified.\n\n\n    References\n    ----------\n    http:\/\/en.wikipedia.org\/wiki\/Ramsey_RESET_test\n\n    '''\n    order = degree + 1\n    k_vars = res.model.exog.shape[1]\n    #vander without constant and x:\n    y_fitted_vander = np.vander(res.fittedvalues, order)[:, :-2] #drop constant\n    exog = np.column_stack((res.model.exog, y_fitted_vander))\n    res_aux = OLS(res.model.endog, exog).fit()\n    #r_matrix = np.eye(degree, exog.shape[1], k_vars)\n    r_matrix = np.eye(degree-1, exog.shape[1], k_vars)\n    #df1 = degree - 1\n    #df2 = exog.shape[0] - degree - res.df_model  (without constant)\n    return res_aux.f_test(r_matrix) #, r_matrix, res_aux","013a463a":"reset_ramsey(results, degree=5)","61265203":"df_new=np.log(df[['Y','K','L']])\ndf_new.tail()\nX=np.array(df_new[['K','L']].values)\ny=np.array(df_new.Y)\nimport statsmodels.api as sma\nx=sma.add_constant(X)\nmodel=sma.OLS(y,x)\nresults=model.fit()\n#print('\\nOLS\u7ebf\u6027\u56de\u5f52\u7ed3\u679c\uff1a\\n',results.summary())\nprint('\\nOLS\u7ebf\u6027\u6a21\u578b\u56de\u5f52R_square: \\n',results.rsquared)\nprint('\\nOLS\u7ebf\u6027\u6a21\u578b\u56de\u5f52R_adj: \\n',results.rsquared_adj)","0166b942":"#fig, ax = plt.subplots(5,2, figsize=(12, 16), facecolor='#f7f7f7')\nresid=pd.DataFrame(results.resid,columns=['resid'])\ndf_resid=pd.concat([df,resid],axis=1)\ndf_resid.tail()\ndf_plot=df_resid[['resid','K','L']]\n#fig,ax=plt.subplots(1,2,figsize=(10,6))\n\nsns.set_style(\"darkgrid\")\n#sns.jointplot(x=df_plot[\"resid\"],y=df_plot[\"K\"], kind='scatter')\n#sns.jointplot(x=df_plot[\"resid\"],y=df_plot[\"L\"], kind='scatter')\n\n(\nggplot(df_plot,aes(x='L',y='resid'))#\n+ geom_point(alpha = 0.5, size = 2)\n+theme(legend_position='none')+stat_smooth(color='blue')\n#+ggtitle('Linear Regression of Tax versus GDP')\n)","98cb61aa":"reset_ramsey(results, degree=5)","e12b8470":"path = '..\/input\/question2'\ndf=pd.read_csv(f'{path}\/Q2.csv')","4cb8ec2e":"df_new=df.copy()\ndf_new['Y']=np.log(df_new['Y'])\ndf_new['X']=np.log(df_new['X'])\ndf_new.rename(columns={\"\u5e8f\u53f7\":\"\u5e74\u4efd\"},inplace=True)\ndf_new.tail()","3ee1f104":"X=np.array(df_new['X'].values)\ny=np.array(df_new.Y)\nimport statsmodels.api as sma\nx=sma.add_constant(X)\nmodel=sma.OLS(y,x)\nresults=model.fit()\nprint('\\nOLS\u7ebf\u6027\u6a21\u578b\u56de\u5f52R_square: \\n',results.rsquared)\nprint('\\nOLS\u7ebf\u6027\u6a21\u578b\u56de\u5f52R_adj: \\n',results.rsquared_adj)\nprint('\\nOLS\u7ebf\u6027\u56de\u5f52\u7ed3\u679c\uff1a\\n',results.summary())","9f06a0d0":"import statsmodels\nstatsmodels.stats.diagnostic.acorr_breusch_godfrey(results,nlags=5)","48646312":"df_new2=df_new.diff()\ndf_new2.drop(index=0,axis=0,inplace=True)\ndf_new2.head()\nX=np.array(df_new2['X'].values)\ny=np.array(df_new2.Y)\nimport statsmodels.api as sma\nx=sma.add_constant(X)\nmodel=sma.OLS(y,x)\nresults_robust=model.fit()\n#print('\\nOLS\u7ebf\u6027\u6a21\u578b\u56de\u5f52R_square: \\n',results.rsquared)\n#print('\\nOLS\u7ebf\u6027\u6a21\u578b\u56de\u5f52R_adj: \\n',results.rsquared_adj)\n#print('\\nOLS\u7ebf\u6027\u56de\u5f52\u7ed3\u679c\uff1a\\n',results.summary())\nstatsmodels.stats.diagnostic.acorr_breusch_godfrey(results_robust,nlags=5)","bb886b09":"from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nprint(plot_pacf(df_new['Y'],lags=15))","671cc0eb":"new = results.get_robustcov_results(cov_type='HAC',maxlags=1,use_correction=True, use_t=True)\nprint (new.summary())","11f06ad6":"from statsmodels.regression.linear_model import GLS\nX=np.array(df_new[['X']].values)\ny=np.array(df_new.Y)\nx=sma.add_constant(X)\nols_resid = sma.OLS(y, x).fit().resid\nres_fit = sma.OLS(ols_resid[1:], ols_resid[:-1]).fit()\nrho = res_fit.params\nfrom scipy.linalg import toeplitz\norder = toeplitz(np.arange(34))\nsigma = rho**order","f31ef0ab":"model=sma.GLS(y,x,sigma=sigma)\nresults=model.fit()\nprint('\\nGLS\u7ebf\u6027\u6a21\u578b\u56de\u5f52R_square: \\n',results.rsquared)\nprint('\\nGLS\u7ebf\u6027\u6a21\u578b\u56de\u5f52R_adj: \\n',results.rsquared_adj)\nprint('\\nGLS\u7ebf\u6027\u56de\u5f52\u7ed3\u679c\uff1a\\n',results.summary())","e86f62ab":"\u97e9\u8001\u5e08\u597d\uff0c\u6211\u8fd9\u8fb9\u6709\u4e2a\u95ee\u9898\u60f3\u8bf7\u6559\u4e0b\uff1a\n\n\u6211\u770b\u4e0b\u6765\u611f\u89c9\u5f02\u65b9\u5dee\u6027\u548c\u5e8f\u5217\u76f8\u5173\u6027\u662f\u4e24\u79cd\u5f88\u76f8\u4f3c\u7684\u95ee\u9898\uff0c\u4e0d\u7ba1\u662f\u4ea7\u751f\u7684\u540e\u679c\u8fd8\u662f\u5904\u7406\u7684\u529e\u6cd5\uff0c\u6211\u60f3\u8bf7\u60a8\u770b\u4e0b\u6211\u7684\u7406\u89e3\u6709\u6ca1\u6709\u95ee\u9898\uff1a\n\n\u5f02\u65b9\u5dee\u6027\u8003\u8651\u7684\u662f $\\mu_i$ \u548c $X_{ik}$ \u4e4b\u95f4\u7684\u5173\u7cfb\n\n\u5e8f\u5217\u76f8\u5173\u6027\u8003\u8651\u7684\u662f $\\mu_i$ \u548c $\\mu_j$\u4e4b\u95f4\u7684\u76f8\u5173\u6027\n\n\u7136\u540e\u4e24\u8005\u5f71\u54cd\u7684\u7ed3\u679c\u90fd\u662f E($\\mu$$\\mu'$) \u8fd9\u4e2a\u534f\u65b9\u5dee\u77e9\u9635\uff0c\u5e76\u4e0d\u5f71\u54cd\u65e0\u504f\u6027\u5bf9\u5417\uff1f","0523b0de":"### \u8ba1\u91cf\u7ecf\u6d4e\u5b66\u7b2c\u4e09\u6b21\u4f5c\u4e1a\n* \u9093\u7fd5\u8dc3\n* \u5b66\u53f7\uff1a3170102112\n* \u7edf\u8ba11701","a5a52bda":"#### \u53ef\u4ee5\u53d1\u73b0\u53c2\u6570\u4f30\u8ba1\u91cf\u6ca1\u6709\u5dee\u5f02\uff0c\u4f46\u662f\u6807\u51c6\u5dee\u5b58\u5728\u5dee\u5f02\uff0c\u91c7\u7528\u7a33\u5065\u6807\u51c6\u8bef\u6cd5\u4f30\u8ba1\u51fa\u6765\u7684\u53c2\u6570\u6807\u51c6\u5dee\u8981\u5927\u4e8eOLS\u4f30\u8ba1\u7684\u53c2\u6570\u6807\u51c6\u5dee\n\u7a33\u5b9a\u6807\u51c6\u8bef\u65b9\u6cd5\u514b\u670d\u5e8f\u5217\u76f8\u5173\u7684\u539f\u7406\uff1a\n* \u539f\u6a21\u578b\u4f30\u8ba1\u6807\u51c6\u5dee\u7684\u65b9\u6cd5\u662f\u57fa\u4e8e\u534f\u65b9\u5dee\u77e9\u9635\u4e3a $\\sigma^2 I$\n* \u7a33\u5b9a\u6807\u51c6\u8bef\u65b9\u6cd5\u662f\u8003\u8651\u5230\u4e86\u534f\u65b9\u5dee\u77e9\u9635\u5e76\u4e0d\u518d\u662f\u5bf9\u89d2\u77e9\u9635\uff0c\u800c\u662f\u4e00\u4e2a\u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635\uff0c\u4e3a $\\sigma^2 \\Omega$\n\n\u6545\u5bf9\u539f\u59cb\u6a21\u578b\u6807\u51c6\u5dee\u4f30\u8ba1\u7684\u65b9\u6cd5\u4f5c\u51fa\u4e86\u4fee\u6b63\uff0c\u4f7f\u68c0\u9a8c\u7ed3\u679c\u66f4\u4e3a\u53ef\u9760\u3002\n\n\u800c\u5e8f\u5217\u76f8\u5173\u5bf9\u6700\u5c0f\u4e8c\u4e58\u6cd5\u7684\u5f71\u54cd\u4ec5\u4ec5\u4e3a\u6709\u6548\u6027\uff0c\u5bf9\u65e0\u504f\u6027\u5e76\u6ca1\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u4e24\u79cd\u65b9\u6cd5\u5f97\u5230\u7684\u53c2\u6570\u4f30\u8ba1\u503c\u662f\u76f8\u540c\u7684","75c3d033":"#### P200,Q2","62ed96a5":"#### \u5e8f\u5217\u76f8\u5173\u7a33\u5065\u6807\u51c6\u8bef\u6cd5\uff1a","923936cf":"#### (1) \u5f53\u8bbe\u5b9a\u6a21\u578b\u4e3a$lnY_t=\\beta_0+\\beta_1 lnX_t+\\mu_t$ \u65f6\uff0c\u662f\u5426\u5b58\u5728\u5e8f\u5217\u76f8\u5173","a89dd941":"### P150\uff0c Question 13:\n(1) \u5bf9\u4e0a\u8ff0\u6a21\u578b\u8fdb\u884cOLS\u4f30\u8ba1\uff1b\u8bd5\u95ee\u8be5\u6a21\u578b\u5b58\u5728\u5185\u751f\u89e3\u91ca\u53d8\u91cf\u95ee\u9898\u5417\uff1f\n\n\u5224\u65ad\u6a21\u578b\u662f\u5426\u5b58\u5728\u5185\u751f\u89e3\u91ca\u53d8\u91cf\u95ee\u9898\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u6cd5\uff1a \n* \u753bY-X\u6563\u70b9\u56fe\uff0c\u89c2\u6d4b\u89e3\u91ca\u53d8\u91cf $X_i$ \u4e0e\u968f\u673a\u5e72\u6270\u9879 $\\mu_i$ \u4e4b\u95f4\u662f\u5426\u5b58\u5728\u8089\u773c\u80fd\u8bc6\u522b\u7684\u7ebf\u6027\u6216\u8005\u975e\u7ebf\u6027\u5173\u7cfb\n* Hausman-test: \u82e5\u62d2\u7edd\u539f\u5047\u8bbe\uff0c\u5219\u7531 $Y_i$~$\\mu_i$, $Y_i$~$\\nu_i$, $\\nu_i$~$X_i$, \u53ef\u4ee5\u63a8\u51fa$X_i$~$\\mu_i$ \u5b58\u5728\u76f8\u5173\u6027\n* RESET-test: \u82e5\u62d2\u7edd\u539f\u5047\u8bbe\uff0c\u5219\u8bf4\u660e\u5b58\u5728 $\\hat{Y_i}$ \u7684\u67d0\u5e42\u6b21\u9879\u524d\u7684\u7cfb\u6570\u4e0d\u4e3a0\uff0c\u800c $\\hat{Y_i}$ \u4e0e $X_i$ \u6709\u5173\uff0c\u5373\u53ef\u8bf4\u660e\u5b58\u5728\u7531\u4e8e\u9057\u6f0f\u53d8\u91cf\u800c\u5bfc\u81f4\u7684\u5185\u751f\u6027\u95ee\u9898\n* 2SLS\uff1a \u53ef\u4ee5\u75282SLS\u4e0eOLS\u5206\u522b\u5bf9\u6570\u636e\u505a\u56de\u5f52\uff0c\u89c2\u6d4b\u7cfb\u6570\u662f\u5426\u5b58\u5728\u663e\u8457\u5dee\u5f02\n\n(2) \u5982\u679c\u8ba4\u5b9a\u4eba\u5747\u53ef\u652f\u914d\u6536\u5165 $X_1$ \u662f\u5185\u751f\u53d8\u91cf\uff0c\u9009\u62e92005\u5e74\u4eba\u5747\u53ef\u652f\u914d\u6536\u5165 $Z_1$ \u4ee5\u53ca\u4eba\u5747\u653f\u5e9c\u6d88\u8d39\u652f\u51fa $Z_2$ \u4e3a\u5de5\u5177\u53d8\u91cf\uff0c\u5bf9\u4e0a\u8ff0\u6a21\u578b\u8fdb\u884c2SLS\n\n* Step 1: $X_1$ \u5bf9\u4e24\u4e2a\u5de5\u5177\u53d8\u91cf $Z_1$, $Z_2$ \u8fdb\u884c\u56de\u5f52\uff1a\n$\\hat{X_i}=\\hat{\\alpha_0}+\\hat{\\alpha_1}Z_{i1}+\\hat{\\alpha_2}Z_{i2}$\n\n* Step 2: \u4ece\u7b2c\u4e00\u6b65\u5f97\u5230 $\\hat{X_1}$ \u4f5c\u4e3a\u89e3\u91ca\u53d8\u91cf\uff0c\u518d\u8fdb\u884c\u4e00\u6b21OLS\u56de\u5f52\n$Y_i=\\beta_0+\\beta_1\\hat{X_1}+\\beta_2X_2+\\mu_i$\n\n(3) \u80fd\u9009\u53d6 $Z_1$ \u4ee5\u53ca $Z_2$ \u4f5c\u4e3a $X_1$ \u7684\u5de5\u5177\u53d8\u91cf\u5417\uff1f\u5982\u4f55\u68c0\u9a8c\u5b83\u4eec\u7684\u5916\u751f\u6027\uff1f\n* \u4e0d\u80fd\u3002\u867d\u7136\u8fd9\u4e24\u4e2a\u5de5\u5177\u53d8\u91cf\u786e\u5b9e\u548c $X_1$ \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u76f8\u5173\u6027\uff0c\u4f46\u662f\u76f8\u6bd4\u4e4b\u4e0b $Z_1$ , $Z_2$ \u4e0e $X_2$ \u4e4b\u95f4\u7684\u76f8\u5173\u6027\u66f4\u9ad8\uff0c\u56e0\u4e3a\u90fd\u662f2005\u5e74\u7684\u6570\u636e\uff0c\u6240\u4ee5\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5171\u7ebf\u6027\u95ee\u9898\u3002\u53e6\u5916\uff0c $Z_1$ \u548c $Z_2$ \u548c $\\mu_i$ \u4e4b\u95f4\u7684\u76f8\u5173\u6027\u4e0d\u4e3a0\u3002\n* \u53ef\u4ee5\u91c7\u7528\u201c\u8fc7\u5ea6\u8bc6\u522b\u7ea6\u675f\u68c0\u9a8c\u201d \u6765\u68c0\u9a8c\u4ed6\u4eec\u7684\u5916\u751f\u6027\n\n(4) \u68c0\u9a8c $X_1$ \u7684\u5916\u751f\u6027\n\n* \u4e0e(1)\u4e2d\u6240\u5217\u7684\u65b9\u6cd5\u76f8\u540c","013f658d":"\u9996\u5148\u662f\u5bf9\u7ebf\u6027\u6a21\u578b\u8fdb\u884c\u68c0\u9a8c\uff1a\n\n$Y_i=\\beta_0+\\beta_1K_i+\\beta_2L_i+\\mu_i$","bd6cfea3":"RESET_Ramsey\u68c0\u9a8c\u540e\u7684p-value\u5f88\u5c0f\uff0c\u8bf4\u660e\u62d2\u7edd\u539f\u5047\u8bbe\uff0c\u5373\u539f\u6a21\u578b\u8bbe\u5b9a\u5b58\u5728\u504f\u8bef","ccdb7a33":"\u63a5\u4e0b\u6765\u5bf9\u53cc\u5bf9\u6570\u6a21\u578b\u8fdb\u884c\u68c0\u9a8c\uff1a\n\n$lnY_i=lnA+\\alpha lnK+\\beta lnL+\\mu lne$","f01f63c6":"\u63a5\u4e0b\u6765\u5bf9\u6a21\u578b\u8f93\u5165\u53d8\u91cf\u8fdb\u884c\u4e00\u9636\u5dee\u5206\uff0c\u82e5\u4e00\u9636\u5dee\u5206\u540e\u7684L-M Test\u7ed3\u679c\u4e3a\u63a5\u53d7\u539f\u5047\u8bbe\uff0c\u8bf4\u660e\u539f\u6a21\u578b\u53ea\u5b58\u5728\u4e00\u9636\u5e8f\u5217\u76f8\u5173","1426ee6b":"#### \u4ecePACF_plot\u4e2d\u4e5f\u53ef\u770b\u51fa\u539f\u6a21\u578b\u53ea\u5b58\u5728\u4e00\u9636\u5e8f\u5217\u76f8\u5173","dc944c4a":"RESET_Ramsey\u68c0\u9a8c\u540e\u7684p-value\u4e3a0.28\uff0c\u8bf4\u660e\u63a5\u53d7\u539f\u5047\u8bbe\uff0c\u5373\u539f\u6a21\u578b\u8bbe\u5b9a\u4e0d\u5b58\u5728\u504f\u8bef","cbc8d14f":"#### \u73b0\u5728\u5bf9\u4e00\u9636\u5dee\u5206\u540e\u7684\u5e8f\u5217\u8fdb\u884cL-M Test\uff0cp-value\u4e3a0.278\uff0c\u53ef\u5f97\u5230\u76f4\u52305\u9636\uff0c\u4e0d\u5b58\u5728\u5e8f\u5217\u76f8\u5173\uff0c\u5219\u53ef\u77e5\u539f\u6a21\u578b\u53ea\u5b58\u5728\u4e00\u9636\u5e8f\u5217\u76f8\u5173","379427da":"#### Relation Between 'L' and residual","d7391fea":"#### (3) \u82e5\u6a21\u578b\u5b58\u5728\u5e8f\u5217\u76f8\u5173\uff0c\u8bd5\u7528\u5e7f\u4e49\u6700\u5c0f\u4e8c\u4e58\u6cd5\u4f30\u8ba1\u539f\u6a21\u578b(GLS)","1203dc76":"#### (2) \u91c7\u7528\u666e\u901a\u6700\u5c0f\u4e8c\u4e58\u6cd5\u548c\u7a33\u5b9a\u6807\u51c6\u8bef\u65b9\u6cd5\u5206\u522b\u4f30\u8ba1\u6a21\u578b\uff0c\u6bd4\u8f83\u53c2\u6570\u4f30\u8ba1\u91cf\u7684\u5dee\u5f02\u548c\u4ed6\u4eec\u7684\u6807\u51c6\u5dee\u7684\u5dee\u5f02\uff0c\u5e76\u8bf4\u660e\u7a33\u5b9a\u6807\u51c6\u8bef\u65b9\u6cd5\u514b\u670d\u5e8f\u5217\u76f8\u5173\u540e\u679c\u7684\u539f\u7406","152328c4":"#### L-M test:","d550b955":"### P151, Q15\n\n\u56e0\u4e3a\u8fd9\u662f\u7531\u4e8e\u6a21\u578b\u7684\u51fd\u6570\u5047\u8bbe\u51fa\u73b0\u504f\u8bef\uff0c\u53ef\u4ee5\u4ece\u5f88\u591a\u65b9\u9762\u6765\u68c0\u9a8c\uff1a\n* $R^2$ \u548c $R_{adj}^2$ \u7684\u6570\u503c\uff0c\u54ea\u4e2a\u6570\u503c\u9ad8\u54ea\u4e2a\u6a21\u578b\u8bbe\u5b9a\u66f4\u6b63\u786e\n* \u753b\u6b8b\u5dee\u548c\u81ea\u53d8\u91cfX\u7684\u5173\u7cfb\u56fe\uff0c\u5982\u679c\u6a21\u578b\u5b58\u5728\u8bbe\u5b9a\u504f\u8bef\uff0c\u6b8b\u5dee\u5e8f\u5217\u5f80\u5f80\u4f1a\u8868\u73b0\u51fa\u67d0\u79cd\u6709\u89c4\u5f8b\u7684\u53d8\u5316\u7279\u5f81\n* RESET \u68c0\u9a8c\uff0c\u5982\u679c\u4e00\u4e2a\u6a21\u578b\u8bbe\u5b9a\u6b63\u786eRESET \u68c0\u9a8c\u540e\u5e94\u8be5\u4e0d\u62d2\u7edd\u539f\u5047\u8bbe(\u4e0d\u8fc7\u53ea\u662f\u5fc5\u8981\u6761\u4ef6)\n\n\u4e0b\u8ff0\u7a0b\u5e8f\u8fdb\u884c\u4e86\u4e24\u79cd\u6a21\u578b\u7684\u6bd4\u8f83\uff0c\u53cc\u5bf9\u6570\u6a21\u578b\u4e09\u79cd\u60c5\u51b5\u4e0b\u90fd\u4f18\u4e8e\u7ebf\u6027\u6a21\u578b\uff0c\u56e0\u6b64\u53cc\u5bf9\u6570\u6a21\u578b\u5373\u539f\u6a21\u578b\u8bbe\u5b9a\u66f4\u6b63\u786e\n* \u53cc\u5bf9\u6570\u6a21\u578b\u7684 $R_{adj}^2$ \u548c $R^2$ \u6bd4\u7ebf\u6027\u6a21\u578b\u90fd\u9ad8\n* \u53cc\u5bf9\u6570\u6a21\u578b\u7684\u6b8b\u5dee\u4e0d\u5b58\u5728\u660e\u663e\u7684\u6709\u89c4\u5f8b\u7279\u5f81\uff0c\u7ebf\u6027\u5b58\u5728\n* \u7ebf\u6027\u6a21\u578bRamset-Test\u62d2\u7edd\u539f\u5047\u8bbe\uff0c\u53cc\u5bf9\u6570\u6a21\u578b\u63a5\u53d7\u539f\u5047\u8bbe","3bef9946":"#### \u7531 D.W. Statistics= $2(1-\\rho)$, \u4e14Durbin-Watson=0.281\u53ef\u5f97\uff0c$\\rho$ =0.8595, \u5b58\u5728\u8f83\u5927\u7684\u4e00\u9636\u5e8f\u5217\u76f8\u5173\u3002\u5e76\u4e14\u7531n=34,\u5dee\u8868\u53ef\u5f97 $d_L$ =1.39>0.281\uff0c\u8868\u660e\u5b58\u5728\u4e00\u9636\u5e8f\u5217\u76f8\u5173","df5a5766":"#### Relation Between 'L' and residual\n","517a9b90":"#### L-M Test\u53ef\u5f97p-value\u4e3a0.00012,\u8bf4\u660e\u76f4\u52305\u9636\uff0c\u5b58\u5728\u5e8f\u5217\u76f8\u5173\uff0c\u8fd9\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a1\u9636\u5c31\u5df2\u7ecf\u5b58\u5728\u4e86\u81ea\u76f8\u5173"}}