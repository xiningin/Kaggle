{"cell_type":{"3804e645":"code","827d024d":"code","4153389e":"code","5465445a":"code","507d14eb":"code","a0fb8240":"code","ba7ba9d5":"code","593be8b0":"code","f0ef18d8":"code","4afce94c":"code","10641028":"code","c536da31":"code","74b424fd":"code","3f4819af":"code","8bcd66d3":"markdown","faac2d5f":"markdown","63a6b004":"markdown"},"source":{"3804e645":"import pandas as pd\nimport numpy as np\nimport cv2\nimport os\nimport re\nimport shutil\nfrom tqdm import tqdm\nfrom zipfile import ZipFile\n\nfrom PIL import Image\n\nimport albumentations as A\nfrom albumentations.pytorch.transforms import ToTensorV2\n\nimport torch\nimport torchvision\n\nfrom torchvision.models.detection.faster_rcnn import FastRCNNPredictor\nfrom torchvision.models.detection import FasterRCNN\nfrom torchvision.models.detection.rpn import AnchorGenerator\n\nfrom torch.utils.data import DataLoader, Dataset\nfrom torch.utils.data.sampler import SequentialSampler\n\nfrom matplotlib import pyplot as plt\n\nDIR_INPUT = '\/kaggle\/input\/global-wheat-detection'\nDIR_TRAIN = f'{DIR_INPUT}\/train'\nDIR_TEST = f'{DIR_INPUT}\/test'","827d024d":"train_df = pd.read_csv(f'{DIR_INPUT}\/train.csv')\ntrain_df.shape","4153389e":"train_df['x'] = -1\ntrain_df['y'] = -1\ntrain_df['w'] = -1\ntrain_df['h'] = -1","5465445a":"def expand_bbox(x):\n    r = np.array(re.findall(\"([0-9]+[.]?[0-9]*)\", x))\n    if len(r) == 0:\n        r = [-1, -1, -1, -1]\n    return r","507d14eb":"train_df[['x', 'y', 'w', 'h']] = np.stack(train_df['bbox'].apply(lambda x: expand_bbox(x)))\ntrain_df.drop(columns=['bbox'], inplace=True)\ntrain_df['x'] = train_df['x'].astype(np.float)\ntrain_df['y'] = train_df['y'].astype(np.float)\ntrain_df['w'] = train_df['w'].astype(np.float)\ntrain_df['h'] = train_df['h'].astype(np.float)","a0fb8240":"train_df.head()","ba7ba9d5":"train_df['x_center'] = train_df['x'] + train_df['w']\/2.0","593be8b0":"train_df.head()","f0ef18d8":"train_df['y_center'] = train_df['y'] + train_df['h']\/2.0","4afce94c":"train_df.head()","10641028":"image_ids = train_df['image_id'].unique()\nvalid_ids = image_ids[-665:]\ntrain_ids = image_ids[:-665]","c536da31":"valid_df = train_df[train_df['image_id'].isin(valid_ids)]\ntrain_df = train_df[train_df['image_id'].isin(train_ids)]","74b424fd":"def generate_txt_file(dataframe):\n    folder = \"Hello\"\n    DIR_PATH = folder + \".zip\"\n    zipObj = ZipFile(DIR_PATH, 'w')\n    for i in tqdm(range(len(dataframe))):\n        label = DIR_PATH + dataframe.iloc[i]['image_id'] + \".txt\"\n        f = open(label, \"w\")\n        line = \"{} {} {} {} {}\\n\".format(0, dataframe.iloc[i]['x_center'], dataframe.iloc[i]['y_center'], dataframe.iloc[i]['w'], dataframe.iloc[i]['h'])\n        f.write(line)\n        f.close()\n        zipObj.write(label)  \n    \n    zipObj.close()","3f4819af":"generate_txt_file(train_df)","8bcd66d3":"Generate train path list","faac2d5f":"https:\/\/www.kaggle.com\/pestipeti\/pytorch-starter-fasterrcnn-train","63a6b004":"# Create the Model"}}