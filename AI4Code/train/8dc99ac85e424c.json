{"cell_type":{"910d735f":"code","c40e02c5":"code","74116347":"code","4d625d36":"code","752bab15":"code","55c03f50":"code","aa769e0c":"code","d8476a9b":"code","bb206e75":"code","70125a9e":"code","0b053740":"code","19c14253":"code","4fdee5f5":"code","1a99d899":"code","ef9590af":"code","a9a23c1f":"code","c447aca3":"code","9e0685b3":"code","7d77899d":"code","051be7db":"code","596bac57":"code","89676af7":"code","340c7b02":"code","50ab8b3e":"code","953ff665":"code","bf654f6b":"markdown","24d6236b":"markdown","2bce95f2":"markdown","8e759328":"markdown","db191406":"markdown","14a1f2e9":"markdown","d077f6a7":"markdown","662871e8":"markdown","dee6ee38":"markdown","ee870d88":"markdown","25b7bd4e":"markdown"},"source":{"910d735f":"#Import pandas to convert list to data frame\n\nimport pandas as pd\nimport numpy as np\nimport requests\nfrom pandas_profiling import ProfileReport\n\nimport urllib.request\n\n#import the beatiful soup functions to parse the data\nfrom bs4 import BeautifulSoup","c40e02c5":"URL = \"http:\/\/gbsnote.com\/slc-result-history-nepal\/\"\n#query the website\npage = requests.get(url = URL)\n\n#parse the html and store in Beautiful soup format\nsoup = BeautifulSoup(page.text)","74116347":"soup.title.string","4d625d36":"#find all links\n\nall_links = soup.find_all(\"a\")\nfor link in all_links:\n    pass\n    #print(link.get(\"href\"))\n","752bab15":"#find all tables\nall_tables = soup.find('table')\n#print(all_tables)","55c03f50":"#Generate lists\n\nA = []\nB = []\nC = []\nD = []\n\nfor row in all_tables.findAll(\"tr\"):\n    cells = row.findAll('td')\n    \n    #Only extract table body\n    if(len(cells) == 4):\n        A.append(cells[0].find(text = True))\n        B.append(cells[1].find(text = True))\n        C.append(cells[2].find(text = True))\n        D.append(cells[3].find(text = True))","aa769e0c":"df = pd.DataFrame()\n\ndf['Year(BS)'] = A\ndf['Total Appeared'] = B\ndf['Total Passed'] = C\ndf['Pass Percentage'] = D\n","d8476a9b":"truedf = df[1:]\ntruedf['Pass Percentage'] = truedf['Pass Percentage'].str.replace('%', '')\ntruedf['Year(BS)'] = truedf['Year(BS)'].str.replace('\\n', '0')","bb206e75":"truedf.to_csv('slc.csv', encoding='utf-8', index=False)","70125a9e":"#Read in data\nfeatures = pd.read_csv('slc.csv')","0b053740":"type(features['Year(BS)'])","19c14253":"features.mean()","4fdee5f5":"#Replacing zero value of year\npast = 0\nvalue = 0\nfor value in (features['Year(BS)']):\n    #print(past)\n    if(value != 0):\n        past = value\n    else:\n        nextval = past+1\n        features.replace(value,nextval)\n        break\nprint(nextval)","1a99d899":"finalfea = features.replace(value,nextval)\nfinalfea.to_csv('slcfinal.csv', encoding='utf-8', index=False)","ef9590af":"finalfea.head()","a9a23c1f":"profile = ProfileReport(finalfea, title='Pandas Profiling Report', html={'style':{'full_width':True}})","c447aca3":"profile.to_notebook_iframe()","9e0685b3":"finalfea.describe()","7d77899d":"from plotly.offline import iplot, init_notebook_mode\nimport cufflinks as cf\ncf.go_offline()\nprint( cf.__version__)","051be7db":"finalfea_process = finalfea[['Year(BS)','Total Appeared', 'Total Passed']].set_index('Year(BS)')\nfinalfea.iplot(x='Year(BS)', y=['Total Appeared', 'Total Passed'], kind='bar',xTitle='Year(BS)')","596bac57":"import matplotlib.pyplot as plt","89676af7":"finalfea.iplot(x= 'Year(BS)',y = 'Pass Percentage',xTitle='Year(BS)', yTitle='Pass Percentage')","340c7b02":"finalfea.iplot(x= 'Year(BS)',y = 'Total Appeared',xTitle='Year(BS)', yTitle='Total Appeared')","50ab8b3e":"finalfea.iplot(x= 'Year(BS)',y = 'Total Passed',xTitle='Year(BS)', yTitle='Total Passed')","953ff665":"finalfea.iplot(x= 'Year(BS)',y = ['Total Appeared','Total Passed'],xTitle='Year(BS)')","bf654f6b":"**Year VS Total Appeared and Total Passed**","24d6236b":"**BarPlot Year(BS), Total Appeared and TotalPassed**","2bce95f2":"**(3) Preprocess the data**\n\n**Data Analyzing starts**","8e759328":"**Plot Year(BS) and Total Appeared**","db191406":"**(4) Data Visualization**","14a1f2e9":"**Webscraping and Analyzing data\nFor that purpose we are going to use SLC result data**\n\n**Steps we are going to follow**\n\n* Query the website\n* Extract the required data\n* Preprocess the data\n* Data Visualization","d077f6a7":"**(2) Extract the required data**","662871e8":"**Plot Year(BS) and Total Passed**","dee6ee38":"**(1) Query the website**","ee870d88":"**See HTML page nested structure\nprint(soup.prettify())**","25b7bd4e":"**Plot Year(BS) and Pass Percentage**"}}