{"cell_type":{"0d96a842":"code","99e4a37d":"code","19b1ef28":"code","f12e66da":"code","aa2fccb1":"code","abe5f14a":"code","15e30142":"code","e8759dd4":"code","9e119cdc":"code","b7c3abb3":"code","781468bf":"code","40ab6234":"markdown","4656683a":"markdown","7d1222fc":"markdown"},"source":{"0d96a842":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","99e4a37d":"import pandas as pd\nfrom PIL import Image\nimport numpy as np\nimport os\nfrom sklearn.neighbors import KNeighborsClassifier","19b1ef28":"#!pip install py7zr\nimport py7zr\nwith py7zr.SevenZipFile('\/kaggle\/input\/cifar-10\/train.7z', mode='r') as z:\n    z.extractall(path='\/kaggle\/working')","f12e66da":"train_labels = pd.read_csv('\/kaggle\/input\/cifar-10\/trainLabels.csv')\ntrain_images = pd.DataFrame(columns = ['id','pixel_array','label'])\n\ntest_labels = pd.read_csv('\/kaggle\/input\/cifar-10\/sampleSubmission.csv')\ntest_images = pd.DataFrame(columns = ['id','pixel_array','label'])","aa2fccb1":"base_path = '\/kaggle\/working\/train\/'\nr = '.png'\nimg_a = []\nfor i in range(0,50000):\n    img = Image.open(base_path + str(i+1) + r)\n    arr = np.array(img)\n    arr = arr.ravel()\n    train_images = train_images.append([{ 'id':train_labels['id'].iloc[i],'pixel_array': arr, 'label':train_labels['label'].iloc[i]}])","abe5f14a":"rm -r \/kaggle\/working\/train","15e30142":"with py7zr.SevenZipFile('\/kaggle\/input\/cifar-10\/test.7z', mode='r') as z:\n    z.extractall(path='\/kaggle\/working')","e8759dd4":"base_path = '\/kaggle\/working\/test\/'\nr = '.png'\nimg_a = []\nfor i in range(0,300000):\n    img = Image.open(base_path + str(i+1) + r)\n    arr = np.array(img)\n    arr = arr.ravel()\n    test_images = test_images.append([{ 'id':test_labels['id'].iloc[i],'pixel_array': arr, 'label':test_labels['label'].iloc[i]}])","9e119cdc":"rm -r \/kaggle\/working\/test","b7c3abb3":"knnc = KNeighborsClassifier(n_neighbors=3,algorithm = 'brute').fit(np.vstack(train_images['pixel_array']),train_images['label'])\ntest_images['predict_labels'] = knnc.predict(np.vstack(test_images['pixel_array']))","781468bf":"from sklearn.metrics import accuracy_score\naccuracy_score(test_images['label'],test_images['predict_labels'])","40ab6234":"# **Unzipping the train.7z file and storing kaggle\/working\/train folder**","4656683a":"**Converting Image to Pixel array using numpy\n .ravel() - is used to flatten the array resulting 1-D array**","7d1222fc":"* ** Creating the DataFrame for test, train**\n* **train_labels,test_labels will give information of target label for each image in test and train datasets based on id as index**"}}