{"cell_type":{"22f25df0":"code","a81a2743":"code","bc96635d":"code","78516282":"code","7ec984d8":"code","f9ce7783":"code","74e80b81":"code","dc685407":"code","284b083f":"code","fe77d191":"code","01d6873d":"code","c51bdc4b":"code","f571b3c8":"code","32369253":"code","914eabc2":"code","34983ff3":"code","44dd311b":"code","199ae313":"code","7659fbba":"code","071638dd":"code","d6e9521d":"code","6a76bed6":"code","fb769cb0":"code","48a9eff9":"code","c217834f":"code","8e2bc8c2":"code","80752838":"code","8dafbff4":"code","cb58b021":"code","de8b7782":"code","0c9d9929":"code","87e83848":"code","e445f10f":"code","21684c63":"code","f932eedc":"code","4edfb84a":"code","19efad35":"code","4b2a2c70":"code","a193fa3b":"code","93a15200":"code","3417fb51":"code","ebf8f55b":"code","3d05bcb3":"code","5d98de3f":"code","29c2bc66":"code","eb774a8c":"code","c77d9e12":"code","4f6926c9":"code","71e7b43b":"code","90da6cc8":"code","d4f1ec5a":"code","a9f648a4":"code","2c19c7b0":"code","59ef7dd4":"code","97551f69":"code","2d8e25be":"code","c1073e52":"code","3c079251":"code","516f57d6":"code","0fd1ce4c":"code","907f10a7":"code","90a29f2d":"code","e8f55cab":"code","79e91fe0":"code","70046a10":"code","1039081a":"code","b77fb397":"markdown","31b0adbb":"markdown","ecac53b5":"markdown","d8e5de8f":"markdown","69cecb3d":"markdown","2133215b":"markdown","fd3cccc7":"markdown","4a9af183":"markdown","0f040daf":"markdown","b7ec789d":"markdown","c934023c":"markdown","4808905c":"markdown","204fe325":"markdown","09b04283":"markdown","27a160ff":"markdown","7483c3f5":"markdown","071e2389":"markdown","a1c61c49":"markdown","4a10cb2e":"markdown","408e5927":"markdown","f299b8d4":"markdown","d669ca1b":"markdown","dc9325e9":"markdown","bf22df4a":"markdown","4f2627dd":"markdown","4f1506f5":"markdown","c66c0162":"markdown","7b5d03c9":"markdown","1a5c7cc2":"markdown","7f24864c":"markdown","32597979":"markdown","1998dcda":"markdown","e0354697":"markdown","b1156df9":"markdown","22bd5a3e":"markdown","e61dbb53":"markdown","d07ba7c7":"markdown"},"source":{"22f25df0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a81a2743":"import matplotlib.pyplot as plt\n\nplt.style.use(\"seaborn-dark-palette\")\nplt.rcParams.update({'font.size': 22})\ndefault_fig_size = (25,10)\nsub_fig_size = (25,25)\n\n#importing plotly and cufflinks in offline mode\nimport cufflinks as cf\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.offline\ncf.go_offline()\ncf.set_config_file(offline=False, world_readable=True)","bc96635d":"import os\nimport re\nfrom datetime import datetime\n\nsource_dir = \"\/kaggle\/input\/jhucovid19\/csse_covid_19_data\/csse_covid_19_daily_reports\"\nget_date_regex = re.compile(r\"(?P<month>\\d{0,2})-(?P<day>\\d{1,2})-(?P<year>\\d{4})\\.csv$\", re.IGNORECASE)\n\ncol_renames ={\n    \"Country_Region\": \"Country\",\n    \"Country\/Region\": \"Country\",\n    \"Province_State\": \"State\",\n    \"Province\/State\": \"State\",\n    \"Last Update\": \"Last_Update\",\n    \"Latitude\":\"Lat\",\n    \"Longitude\":\"Long\",\n    \"Long_\":\"Long\",\n}\n\nnew_covid_df = pd.DataFrame()\nfor file_name in os.listdir(source_dir):\n    result = get_date_regex.search(file_name)\n    if result:\n        file_date = datetime(int(result['year']), int(result['month']), int(result['day']))\n        new_csv_df = pd.read_csv(f'{source_dir}\/{file_name}')\n        new_csv_df['Date'] = file_date\n        new_csv_df.rename(columns=col_renames, inplace=True)\n        new_covid_df = new_covid_df.append(new_csv_df, ignore_index=True, sort=True)\n        \nnew_covid_df.sort_values('Date', ascending=True, inplace=True)\nnew_covid_df.Country.replace('China', 'Mainland China', inplace=True)\nnew_covid_df.Country.replace('UK', 'United Kindgdom', inplace=True)\nnew_covid_df = new_covid_df[((new_covid_df.Country == \"Australia\") & (~new_covid_df.State.isin(['From Diamond Princess', 'External territories', 'Jervis Bay Territory']))) | (new_covid_df.Country != 'Australia')]","78516282":"#Select Datasource\ncovid_df = new_covid_df.sort_values('Date')","7ec984d8":"#Create Daily new figures from totals\ncovid_df['Daily'] = covid_df.groupby(['State', 'Country'])['Confirmed'].diff().fillna(0)\n\n#Create Fatality to Case Ratio from totals\ncovid_df['FatalRatio'] = covid_df.Deaths \/ covid_df.Confirmed\ncovid_df['FatalRatio'].fillna(0, inplace=True)","f9ce7783":"#Get NSW Data\nnsw_data_path = '\/kaggle\/input\/nsw-health-data-covid19'","74e80b81":"nsw_local_df = pd.read_csv(f'https:\/\/data.nsw.gov.au\/data\/dataset\/aefcde60-3b0c-4bc0-9af1-6fe652944ec2\/resource\/21304414-1ff1-4243-a5d2-f52778048b29\/download\/covid-19-cases-by-notification-date-and-postcode-local-health-district-and-local-government-area.csv')\n\nnsw_age_df = pd.read_csv(f'https:\/\/data.nsw.gov.au\/data\/dataset\/3dc5dc39-40b4-4ee9-8ec6-2d862a916dcf\/resource\/24b34cb5-8b01-4008-9d93-d14cf5518aec\/download\/covid-19-cases-by-notification-date-and-age-range.csv')\n\nnsw_source_df = pd.read_csv(f'https:\/\/data.nsw.gov.au\/data\/dataset\/c647a815-5eb7-4df6-8c88-f9c537a4f21e\/resource\/2f1ba0f3-8c21-4a86-acaf-444be4401a6d\/download\/covid-19-cases-by-notification-date-and-likely-source-of-infection.csv')\n\nausmapinfo = pd.read_csv('\/kaggle\/input\/australian-postcodes\/australian_postcodes.csv')\nausmapinfo = ausmapinfo.groupby('postcode').agg({\n                             'locality': ' | '.join, \n                             'long':'first',\n                             'lat':'first'}).reset_index()\nnsw_local_df = pd.merge(nsw_local_df, ausmapinfo, on='postcode', how='left')","dc685407":"aus_state = \"New South Wales\"","284b083f":"base_layout = go.Layout(\n    legend=dict(orientation=\"h\"),\n    margin={\"r\":0,\"t\":40,\"l\":0,\"b\":0},\n    title={\n        'y':0.95,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'\n        }\n    )","fe77d191":"title=f'Sydney COVID-19 Confirmed Cases Map'\nlayout = base_layout.update(title_text=title)","01d6873d":"#Prepare Sydney Metro Cases\nnswmastermap = nsw_local_df[nsw_local_df.long != 0.000000]\nnswmastermap = nswmastermap[nswmastermap['postcode'].between(2000, 2234)]\nnswmastermap['short_local'] = nswmastermap['locality'].str.split('|').str.get(0)\nnswmastermap = nswmastermap.groupby('locality').agg({'locality':'count', 'short_local':'first','long':'first','lat':'first'}).rename(columns={'locality':'Count'}).reset_index()","c51bdc4b":"#Map Sydney Metro Cases\nfig = px.scatter_mapbox(nswmastermap, lat=\"lat\", lon=\"long\", hover_name=\"short_local\", hover_data=[\"Count\"],\n                        color_discrete_sequence=[\"red\"], zoom=9, height=500, size=\"Count\",size_max=25)\n\nfig.update_layout(margin={\"r\":0,\"t\":20,\"l\":0,\"b\":0})\nmtype = \"stamen-terrain\"\nfig.update_layout(mapbox_style=mtype)\nfig.update_layout(layout)\nfig.show()","f571b3c8":"title=f'{aus_state} COVID-19 Confirmed Cases Map'\nlayout = base_layout.update(title_text=title)","32369253":"#Prepare NSW Cases\nnswmastermap = nsw_local_df[nsw_local_df.long != 0.000000]\nnswmastermap = nswmastermap.groupby('lga_name19').agg({'lga_name19':'count','long':'first','lat':'first'}).rename(columns={'lga_name19':'Count'}).reset_index()","914eabc2":"#Map NSW Cases\nfig = px.scatter_mapbox(nswmastermap, lat=\"lat\", lon=\"long\", hover_name=\"lga_name19\", hover_data=[\"Count\"],\n                        color_discrete_sequence=[\"red\"], zoom=5, height=500, size=\"Count\",size_max=15)\n\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nmtype = \"stamen-terrain\"\nfig.update_layout(mapbox_style=mtype)\nfig.update_layout(layout)\nfig.show()","34983ff3":"title=f'{aus_state} COVID-19 Total Confirmed Cases'\nlayout = base_layout.update(title_text=title)","44dd311b":"covid_df[(covid_df.Country == \"Australia\") & (covid_df.State == aus_state)].groupby(['Date', 'State']).Confirmed.max().unstack().iplot(kind='bar', layout=layout)","199ae313":"aus_state = \"New South Wales\"\n\ntitle=f'{aus_state} COVID-19 Daily Confirmed Cases'\nlayout = base_layout.update(title_text=title)","7659fbba":"covid_df[(covid_df.Country == \"Australia\") & (covid_df.State == aus_state)].groupby(['Date', 'State']).Daily.max().unstack().iplot(kind='bar', layout=layout)","071638dd":"title=f'{aus_state} COVID-19 Total Recovered Cases'\nlayout = base_layout.update(title_text=title)","d6e9521d":"covid_df[(covid_df.Country == \"Australia\") & (covid_df.State == aus_state)].groupby(['Date', 'State']).Recovered.max().unstack().iplot(kind='bar', layout=layout)","6a76bed6":"title=f'{aus_state} COVID-19 Confirmed Cases By Age'\nlayout = base_layout.update(title_text=title)","fb769cb0":"nsw_age_df['age_group'] = pd.Categorical(nsw_age_df['age_group'], categories=['AgeGroup_0-4', 'AgeGroup_5-9', 'AgeGroup_10-14', 'AgeGroup_15-19', 'AgeGroup_20-24', 'AgeGroup_25-29', 'AgeGroup_30-34', 'AgeGroup_35-39', 'AgeGroup_40-44', 'AgeGroup_45-49', 'AgeGroup_50-54', 'AgeGroup_55-59',\n       'AgeGroup_60-64', 'AgeGroup_65-69', 'AgeGroup_70+'])","48a9eff9":"fig = px.histogram(nsw_age_df.sort_values(by='age_group'), x=\"age_group\", labels={'age_group':'Age Groups'})\nfig.update_layout(layout)\nfig.show()","c217834f":"title=f'{aus_state} COVID-19 Confirmed Cases By Likley Source of Infection'\nlayout = base_layout.update(title_text=title)","8e2bc8c2":"fig = px.histogram(nsw_source_df, x='likely_source_of_infection', labels={'likely_source_of_infection':'Likely Source of Infection'})\nfig.update_layout(layout)\nfig.show()","80752838":"title=f'{aus_state} COVID-19 Cumulative Fatality to Case Ratio'\nlayout = base_layout.update(title_text=title)\nlayout = layout.update(legend=dict(orientation=\"h\"))","8dafbff4":"covid_df[(covid_df.Country == \"Australia\") & (covid_df.State == aus_state)].groupby(['Date', 'State']).FatalRatio.max().unstack().iplot(kind='line', layout=layout)","cb58b021":"title=f'Australia COVID-19 Total Confirmed Cases'\nlayout = base_layout.update(title_text=title)","de8b7782":"covid_df[(covid_df.Country == \"Australia\")].groupby(['Date', 'State']).Confirmed.max().unstack().iplot(kind='bar', layout=layout)","0c9d9929":"title=f'Australia COVID-19 Daily Confirmed Cases'\n\nlayout = base_layout.update(title_text=title, barmode='stack')","87e83848":"covid_df[(covid_df.Country == \"Australia\")].groupby(['Date', 'State']).Daily.max().unstack().iplot(kind='bar', layout=layout)","e445f10f":"title=f'Australia COVID-19 Total Confirmed Cases by State'\nftitle={\n        'text': title,\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'\n}","21684c63":"covid_df[(covid_df.Country == \"Australia\")].groupby(['Date', 'State']).max().Confirmed.unstack().iplot(kind='bar', subplots=True, subplot_titles=True, showlegend=False, title=ftitle)","f932eedc":"title=f'Australia COVID-19 Daily Confirmed Cases by State'\nftitle={\n        'text': title,\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'\n}","4edfb84a":"covid_df[(covid_df.Country == \"Australia\")].groupby(['Date', 'State']).max().Daily.unstack().iplot(kind='bar', subplots=True, subplot_titles=True, showlegend=False, title=ftitle)","19efad35":"title=f'Australia COVID-19 Cumulative Fatality to Case Ratio'\nlayout = base_layout.update(title_text=title)","4b2a2c70":"country_sums = covid_df[covid_df.Country.isin(['Australia'])].groupby(['Date', 'Country'])['Deaths', 'Confirmed'].sum()\ncountry_rations = country_sums.Deaths \/ country_sums.Confirmed\ncountry_rations.unstack().iplot(kind='line', layout=layout)","a193fa3b":"title=f'Australia COVID-19 Cumulative Fatality to Case Ratio by State'\nlayout = base_layout.update(title_text=title)","93a15200":"aus_sums = covid_df[(covid_df.Country == \"Australia\")].groupby(['Date', 'State'])['Deaths', 'Confirmed'].sum()\naus_rations = aus_sums.Deaths \/ aus_sums.Confirmed\naus_rations.unstack().iplot(kind='line', layout=layout)","3417fb51":"DFactor=1\/0.034","ebf8f55b":"title = f'Australia Spread between: Expected Cases (Death Rate) vs Reported Confirmed Cases'\n\nftitle={\n        'text': title,\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'\n}","3d05bcb3":"Ecovid_df = covid_df.copy()\nEcovid_df['Estimated Cases from Deaths'] =  Ecovid_df['Deaths'] * DFactor\nEcovid_df[Ecovid_df.Country.isin(['Australia'])].groupby(['Date']).agg({'Confirmed':'sum', 'Estimated Cases from Deaths':'sum'}).iplot(kind='spread', title=ftitle)","5d98de3f":"import numpy as np\nimport pandas as pd\nfrom fbprophet import Prophet\nfrom math import e\n\ndef prophet_log_predict(in_df, days_ahead, date_col='ds', y_col='y', log_base=10, changepoint_prior_scale=0.1, mcmc_samples=150):\n  in_df = in_df.copy()\n  #Convert to log\n  in_df[y_col] = (np.log(in_df[y_col]) \/ np.log(log_base)).replace([np.inf, -np.inf], np.nan)\n\n  #Prep col names\n  in_df.rename(columns={date_col:'ds', y_col:'y'}, inplace=True)\n\n  #Create Model\n  model = Prophet(changepoint_prior_scale=changepoint_prior_scale, mcmc_samples=mcmc_samples)\n  model.fit(in_df)\n\n  #Make Predictions\n  future = model.make_future_dataframe(periods=days_ahead)\n  forecast = model.predict(future)\n\n  #Create output dataframe\n  out_df = pd.DataFrame()\n  out_df[date_col] = forecast['ds']\n\n  #Convert back from log and attach to output df\n  out_df[y_col] = log_base**forecast['yhat']\n  \n  return out_df\n\n","29c2bc66":"pdf = covid_df[(covid_df.Country == \"Australia\")][['Date', 'Confirmed']].groupby(['Date']).Confirmed.sum().to_frame().reset_index()\npdf.rename(columns={'Date':'ds', 'Confirmed':'y'}, inplace=True)","eb774a8c":"pre_res = prophet_log_predict(pdf, 10)","c77d9e12":"title=f'Australia COVID-19 Case Prediction (Prophet)'\nlayout = base_layout.update(title_text=title)","4f6926c9":"pre_res.iplot(x='ds', layout=layout)","71e7b43b":"from datetime import datetime\nrestrict_date = datetime(2020, 4, 9)\npastdf = pdf[pdf.ds < restrict_date]\n\nd_pred = (datetime.today() - restrict_date).days","90da6cc8":"no_res = prophet_log_predict(pastdf, d_pred)","d4f1ec5a":"title=f'Australia COVID-19 Case Prediction - Before Restrictions (Prophet)'\nlayout = base_layout.update(title_text=title)","a9f648a4":"no_res.iplot(x='ds', layout=layout)","2c19c7b0":"comb = pd.DataFrame()\ncomb['ds'] = no_res['ds']\ncomb['Restricted (Actuals)'] = pre_res.y\ncomb['Unrestricted (Prediction)'] = no_res.y","59ef7dd4":"title=f'Australia COVID-19 Case Prediction - No Restrictions (Prophet) and Actuals'\nlayout = base_layout.update(title_text=title)","97551f69":"comb.iplot(x='ds', layout=layout)","2d8e25be":"scope_countries = ['US', 'Mainland China', 'Italy', 'Spain', 'United Kingdom', 'Germany']","c1073e52":"title = f'COVID-19 Confirmed Cases in {\", \".join(scope_countries)}'\n\nlayout = base_layout.update(title_text=title, barmode='group')","3c079251":"covid_df[covid_df.Country.isin(scope_countries)].groupby(['Date', 'Country']).Confirmed.sum().unstack().iplot(kind='bar', layout=layout)","516f57d6":"title = f'COVID-19 Fatal Cases in {\", \".join(scope_countries)}'\n\nlayout = base_layout.update(title_text=title, barmode='group')","0fd1ce4c":"covid_df[covid_df.Country.isin(scope_countries)].groupby(['Date', 'Country']).Deaths.sum().unstack().iplot(kind='bar', layout=layout)","907f10a7":"title = f'COVID-19 Cumulative Fatality to Case Ratio in {\", \".join(scope_countries)}'\n\nlayout = base_layout.update(title_text=title, barmode='group')","90a29f2d":"country_sums = covid_df[covid_df.Country.isin(scope_countries)].groupby(['Date', 'Country'])['Deaths', 'Confirmed'].sum()\ncountry_rations = country_sums.Deaths \/ country_sums.Confirmed\ncountry_rations.unstack().iplot(kind='line', layout=layout)","e8f55cab":"import plotly.graph_objects as go\n\nwrld_df = covid_df.copy()\nwrld_df['CLoc'] = wrld_df['State'].str.cat(wrld_df['Country'], join='outer', sep=', ').fillna(wrld_df['Country'])\n\nwrld_df = wrld_df[(wrld_df.Date == wrld_df['Date'].max())].groupby('CLoc').agg({'Confirmed':'sum', 'Lat':'mean', 'Long':'mean'}).reset_index()\n\n\nscale = 100\nfig = go.Figure(data=go.Scattergeo(\n        lon = wrld_df['Long'],\n        lat = wrld_df['Lat'],\n        text = wrld_df[['CLoc','Confirmed']],\n        hoverinfo = 'text',\n        mode = 'markers',\n        marker_sizemode = 'area',\n        marker_color = 'crimson',\n        marker_size = wrld_df['Confirmed']\/scale,\n        ))\n\ntitle=f'World Map of Current Confirmed Cases'\nftitle={\n        'text': title,\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'\n}\n\nfig.update_layout(\n        margin={\"r\":0,\"t\":20,\"l\":0,\"b\":0},\n        title = ftitle,\n        geo_scope='world',\n        geo_landcolor = \"rgb(229, 229, 229)\",\n        geo_countrycolor = \"white\" ,\n        geo_coastlinecolor = \"white\",\n        geo_showcoastlines = True,\n        geo_showcountries = True,\n    )\nfig.show()","79e91fe0":"title = f'Global Spread between: Expected Cases (Death Rate) vs Reported Confirmed Cases'\n\nftitle={\n        'text': title,\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'\n}","70046a10":"DFactor=1\/0.034\nEcovid_df = covid_df.copy()\nEcovid_df['Estimated Cases from Deaths'] =  Ecovid_df['Deaths'] * DFactor\nEcovid_df.groupby(['Date']).agg({'Confirmed':'sum', 'Estimated Cases from Deaths':'sum'}).iplot(kind='spread', title=ftitle)","1039081a":"for country in scope_countries:\n    title = f'{country} Expected Cases vs Reported Confirmed Cases'\n\n    ftitle={\n            'text': title,\n            'y':0.9,\n            'x':0.5,\n            'xanchor': 'center',\n            'yanchor': 'top'\n    }\n    Ecovid_df = covid_df.copy()\n    Ecovid_df['Estimated Cases from Deaths'] =  Ecovid_df['Deaths'] * DFactor\n    Ecovid_df[Ecovid_df.Country.isin([country])].groupby(['Date']).agg({'Confirmed':'sum', 'Estimated Cases from Deaths':'sum'}).iplot(kind='spread', title=ftitle)","b77fb397":"Peaks are in the 70+ and late 20's","31b0adbb":"Smaller states with low case counts are more erratic and harder ro draw conclusions from but as above the trend roughtly matches NSW for Australia as a whole.","ecac53b5":"Looking ok, curve flattening from about Mar 28 perhaps","d8e5de8f":"Definatly looking like a downward trend in new case numbers when looking at the daily total after Mar 25.\n\nAssume this would be related to the restrictions inplace perhaps from 6 days prior due to the incubation lag.\n\nThis needs further investigation.","69cecb3d":"To be discussed","2133215b":"Globally this shows that the death rate is rising as time goes on. This could be an indicator of strain on the medical system of heavily affected countires.","fd3cccc7":"---","4a9af183":"# Australia Trends","0f040daf":"Itialy still has a higher death rate by far than Spain.\n\nTesting rates might need to be looked at to determine if there are different rates of fataility or different rates of untracked infection?","b7ec789d":"* More details on tracking turning point to restrictions and\/or other factors\n* More comparision with other countries\n* LSTM or VAR to make some predictions\n* Try to make whatif predictions, e.g. what if restriction X was applied\n* Estimate untested cases","c934023c":"I suspect numbers are too low to draw accurate conclusions from this, but the downward trend could indicate health care preparedness getting better over time?","4808905c":"# Spread Graphs: Expected Cases (Death Rate) vs Reported Confirmed Cases","204fe325":"# Setup Dataset","09b04283":"# Sydney & NSW Confirmed Case Maps","27a160ff":"---","7483c3f5":"Similar to the Australia Graph, Using the fatality rate as reported [here](https:\/\/www.msn.com\/en-us\/health\/health-news\/what-the-official-covid-19-mortality-rate-actually-means\/ar-BB10O0Dx) to estimate what the expected number of cases should be given how many deaths have occured.\n\nThis does not attempt to explain any discrepency as there are many factors such as\n* Testing rate\n* Population Age\n* Urbanisation\n* Health care Standards\n* Weather\/Temprature\n* Economy\n* Many more\n\nI will try to incorperare and explan these over time","071e2389":"# TODO","a1c61c49":"# NSW Timeline Trends","4a10cb2e":"# Basic Predictions","408e5927":"This looks like recoveries are probably not reported or tracked correctly?","f299b8d4":"# NSW Demographics & Infection Source","d669ca1b":"Looks like the initial very high death rate in WA skewed the australis totals up, WA and NSW seem to be the biggest influence on the Australia overal rate trend.\nWA and NSW also had first deaths recorded earlier than other states.","dc9325e9":"China showing basically no new cases for a while.\n\nUS looking like its continuing up at the typical 3-5 day doubling rate... needs further investigation.\n\nWhile Italy had a head start on Spain, Spain is heading up at a steeper slope and looks to have overtaken Italy on Apr 4. Possibly harsher restrictions in Itialy can explan this?","bf22df4a":"Using the above fatality rate as reported [here](https:\/\/www.msn.com\/en-us\/health\/health-news\/what-the-official-covid-19-mortality-rate-actually-means\/ar-BB10O0Dx) to estimate what the expected number of cases should be given how many deaths have occured.\n\nThis does not attempt to explain any discrepency as there are many factors such as\n* Testing rate\n* Population Age\n* Urbanisation\n* Health care Standards\n* Weather\/Temprature\n* Economy\n* Many more\n\nI will try to incorperare and explan these over time","4f2627dd":"Australia as awhole tracking similar to NSW. This makes sense due to NSW making the bulk of confirmed cases.","4f1506f5":"---","c66c0162":"**Based on existing data point using FB Prophet to predict the future cases for Australia**","7b5d03c9":"Pretty much Obligitory for this kind of data.\nNothing to groundbreaking to see but looks pretty nice.","1a5c7cc2":"# Global Trends","7f24864c":"# NSW Trends","32597979":"![](https:\/\/health.mil\/-\/media\/Images\/MHS\/Photos\/COVID-19.ashx?h=407&la=en&mw=720&w=720&hash=332EAD54CFF5B415044711D1F966B399F05E032CA7CFA38CC61CB42EA88753AE)","1998dcda":"---","e0354697":"# NSW Fataility Rates","b1156df9":"All states roughly tracking the same.","22bd5a3e":"This shows Australia has many more reported cases than expected from the current amount of deaths. (Essentially the death rate is lower than expected)\nThis could indicate many things including: Good health care standars, high testing rates etc.\n\nIn future I will use the testing rates as a factor for this.","e61dbb53":"Higher and longer spike than NSW although a similar trend is visable.","d07ba7c7":"The US actually shows slightly more cases than expected (a sign of lower death rate).\nThis will need further analasys as the assumption is that the testing rates are low in the US and this seems unusual.\n**Update**: US data has recently swapped to a more expected case."}}