{"cell_type":{"ae2cc428":"code","68951d4c":"code","a42dcf12":"code","bdb57ab1":"code","0388b500":"code","c3f68df9":"code","8f8f05f7":"code","f48f9b96":"code","bd01345c":"code","31dcddf4":"code","2e00000c":"code","5767265d":"code","5e989e71":"code","4671f5ab":"code","9845e6b4":"code","bc476da4":"code","06b8abcd":"code","19ba3f42":"code","0c47caf1":"code","e917f0c2":"code","5888f952":"code","8053da56":"code","a7aa51a1":"code","449581fa":"code","41be9ebe":"code","c0ee27b9":"code","0491085e":"code","f608b5e0":"code","ee5986df":"code","c6e41be5":"code","edfc253e":"code","b3fa0910":"code","0ea0bfbf":"code","7962c3e6":"markdown","bbb55332":"markdown","9c1a6282":"markdown","2ada8744":"markdown","39e80870":"markdown","b20df2f7":"markdown","d7483eba":"markdown","667aaaa5":"markdown","d27aac2d":"markdown","5e3bac9b":"markdown","2683c039":"markdown","62cf8d06":"markdown","2806fa9c":"markdown","b52eeeeb":"markdown","e71ce331":"markdown","25e07841":"markdown","96e4a5aa":"markdown","ba2083d1":"markdown","5076e2f3":"markdown"},"source":{"ae2cc428":"liste=[-698,-500,97]\ndef ikili(x,y): #\u00f6nce 3 say\u0131dan ilk ikisini kar\u015f\u0131la\u015ft\u0131r\u0131yorum.Bunu da ikili fonksiyonumla ger\u00e7ekle\u015ftiriyorum.\n    if x>y:\n        buyuk=x\n    else:\n        buyuk=y\n    return buyuk\ndef uclu(liste):\n    c=ikili(liste[0],liste[1]) #ilk iki de\u011ferden b\u00fcy\u00fck olan\u0131 bir de\u011fi\u015fkene atay\u0131p\n    sonuc=ikili(liste[2],c) #son de\u011feri de o de\u011fi\u015fkenle kar\u015f\u0131la\u015ft\u0131r\u0131yorum.\n    return sonuc\n\nuclu(liste)","68951d4c":"max(liste)#k\u0131sayol","a42dcf12":"#listedeki t\u00fcm de\u011ferleri toplam de\u011fi\u015fkeni ile topluyorum\n# toplam de\u011fi\u015fkeni 0 oldu\u011fundan listedeki t\u00fcm elemanlar toplanm\u0131\u015f oluyor.\ndef topla(a):\n    toplam = 0 \n    for i in range(len(a)):\n        toplam = a[i] + toplam\n    return toplam","bdb57ab1":"liste=[15,32,65,98,256,325]\nprint(topla(liste))\ntopla([1,2,3])","0388b500":"sum(liste)#k\u0131sayol","c3f68df9":"#listedeki t\u00fcm de\u011ferleri carp de\u011fi\u015fkeni ile \u00e7arp\u0131yorum\n# carp de\u011fi\u015fkeni 1 oldu\u011fundan listedeki t\u00fcm elemanlar \u00e7arp\u0131lm\u0131\u015f oluyor.\ndef carpma(a):\n    carp=1\n    for i in range(len(a)):\n        carp=carp*a[i]\n    return carp","8f8f05f7":"carpma([8, 2, 3, -1, 7])","f48f9b96":"def degistir(str):\n    return str[::-1]","bd01345c":"degistir(\"1234abcd\")","31dcddf4":"#istenilen x say\u0131sana kadar d\u00f6ng\u00fcye al\u0131yorum(x dahil de\u011fil) i ba\u015flang\u0131\u00e7ta s\u0131f\u0131r oldu\u011fundan i+1 diyerek \n# 1'den ba\u015flam\u0131\u015f oluyorum b\u00f6ylelikle x de dahil olmu\u015f oluyor.(\u00f6rnekle a\u00e7\u0131klayay\u0131m.)\nfor i in range(3):\n    print(i+1)","2e00000c":"def faktoriyel(x):\n    if x>0:\n        a=1\n        for i in range(x): \n            a*=(i+1)\n    else:\n        a=print(\"negatif say\u0131 girdiniz,pozitif bir say\u0131 giriniz.\")\n    return a","5767265d":"print(faktoriyel(5))\nprint(faktoriyel(9))\nfaktoriyel(-5)","5e989e71":"def kontrol(x,y,z):\n    c=\"Evet o aral\u0131ktad\u0131r.\"\n    if x<z and x>y:\n        c\n    elif x>z and x<y:\n        c\n    else:\n        c=\"Girdi\u011finiz say\u0131 o aral\u0131kta de\u011fildir.\"\n    return c","4671f5ab":"print(kontrol(5,1,300))\nkontrol(5,6,20)","9845e6b4":"def sayac(str):\n    a=0\n    b=0\n    for i in range(len(str)):\n        if str[i]==str[i].lower(): # bir de\u011ferin kendisi, o de\u011ferin k\u00fc\u00e7\u00fck harflisine e\u015fitse de\u011fer k\u00fc\u00e7\u00fck harfle yaz\u0131lm\u0131\u015ft\u0131r.\n            a+=1\n        else:\n            b+=1\n    print(f\"metinde bulunan k\u00fc\u00e7\u00fck harf say\u0131s\u0131 {a}\")\n    print(f\"metinde bulunan b\u00fcy\u00fck harf say\u0131s\u0131 {b}\")","bc476da4":"sayac(\"For d\u00f6ng\u00fcleri belirli say\u0131da i\u015flemlerin tekrarlanmas\u0131 i\u00e7in kullan\u0131lan d\u00f6ng\u00fclerdir. For d\u00f6ng\u00fcleri ba\u015flang\u0131\u00e7 ve biti\u015f de\u011ferleri aras\u0131nda art\u0131m miktar\u0131na g\u00f6re istenilen say\u0131da tekrar yapar.\")","06b8abcd":"#setler benzersiz de\u011ferleri g\u00f6sterir.Tekrar eden ifadelere yer vermez.\ndef benzersiz(a):\n    a=set(a)\n    return list(a)","19ba3f42":"benzersiz([1,1,1,2,3,2,3,6,3,5])","0c47caf1":"#Bir asal say\u0131 sadece kendisine ve 1'e b\u00f6l\u00fcn\u00fcr bu y\u00fczden bir liste olu\u015fturdum girilen say\u0131lar\u0131n b\u00f6lenlerini\n# bu listeye ekledim e\u011fer listede iki de\u011fer varsa asald\u0131r de\u011filse de\u011fildir.\ndef asal_kontrol(x):\n    a=[]\n    for i in range(x):\n        if x%(i+1)==0:\n            a.append(i+1)\n    if len(a)==2:\n        C=print(f\"{x}  ASAL SAYIDIR.\")\n    else:\n        C=print(f\"{x}  ASAL SAYI DE\u011e\u0130LD\u0130R.\")\n    return C","e917f0c2":"# en k\u00fc\u00e7\u00fck asal say\u0131 2'dir.\n#asal say\u0131lar:[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89 ve 97]\nasal_kontrol(11)\nasal_kontrol(1)\nasal_kontrol(2)\nasal_kontrol(67)\n","5888f952":"#range a'ya kadar oldu\u011fu i\u00e7in say\u0131n\u0131n kendisi b\u00f6lenlere dahil de\u011fil.Soru da bizden bunu istiyor,say\u0131n\u0131n \n# t\u00fcm b\u00f6lenlerini listeye ekliyorum.\n# B\u00f6lenlerin oldu\u011fu listedeki t\u00fcm de\u011ferleri sum ile topluyor say\u0131ya e\u015fit mi diye sorguluyorum.\ndef sayi(a):\n    bolen=[]\n    for i in range(1,a):\n        if a%i==0:\n            bolen.append(i)\n    if sum(bolen)==a:\n        c=print(f\"{a} m\u00fckemmel say\u0131d\u0131r\")\n    else:\n        c=print(f\"{a} m\u00fckemmel say\u0131 de\u011fildir\")\n    return c","8053da56":"sayi(28)\nsayi(496)\nsayi(8128)\nsayi(51)","a7aa51a1":"#reverse tersten yazd\u0131r demek biz alfabetik s\u0131raya uygun \u015fekilde yazd\u0131rs\u0131n istedi\u011fimiz i\u00e7in \n# reverse'e false diyoruz.\ndef s\u0131ralama(str):\n    str.sort(reverse=False) \n    return str","449581fa":"k=[\"green\",\"red\",\"yellow\",\"black\",\"white\"]\nprint(s\u0131ralama(k))\ns\u0131ralama([\"istanbul\",\"ankara\",\"bursa\"])","41be9ebe":"def  kare():\n    y=list(range(0,31)) #0'dan 31'e kadar (31 dahil de\u011fil) bir liste olu\u015fturduk.\n    c=list(map(lambda x:x**2,y)) #map ile t\u00fcm de\u011ferlere eri\u015ftik lambda ile de karesini ald\u0131k\n    return c\nkare()","c0ee27b9":"def fibonacci(n):\n    a = [1, 1] * 100  # \u0130lk iki de\u011feri 1 oldu\u011fundan b\u00f6yle bir liste olu\u015fturdum.(toplam uzunlu\u011fu 200 )\n    for i in range(198):  # a[i+2]'den 198+2=200 oldu\u011fundan 198 e kadar\n        a[i + 2] = a[i] + a[i + 1]\n    liste = []\n    for i in range(len(a)):\n        if a[i] < n: #Girilen say\u0131ya(n) kadar yazd\u0131r\u0131ls\u0131n istendi\u011fi i\u00e7in \n            liste.append(a[i])\n    return liste","0491085e":"print(fibonacci(58))\nfibonacci(159865)","f608b5e0":"def donusum(C=\" \", F=\" \"):\n    if C != \" \":\n        F = float(C) * 9 \/ 5 + 32\n        a=print(F)\n    else:\n        C = (float(F) - 32) * 5 \/ 9\n        a=print(C)\n    return a","ee5986df":"donusum(C=32)\ndonusum(F=32)","c6e41be5":"#Girilen string ifade tersinden yaz\u0131ld\u0131\u011f\u0131ndaki ifadeye de e\u015fitse palindromik'tir. \u00f6rnek:yapay,kazak,makam\ndef palindromik_mi(str):\n    if str == str[::-1]:\n        c=f\"{str} bir palindromik kelimedir.\"\n    else:\n        c=f\"{str} bir palindromik kelime de\u011fildir.\"\n    return c","edfc253e":"print(palindromik_mi(\"yapay\"))\npalindromik_mi(\"mum\")","b3fa0910":"def bosluk_sayisi(str):\n    a = []\n    for i in str.split(\" \"):#girilen string de\u011feri split ile bo\u015flukla ay\u0131r\u0131yorum.\n        a.append(i) #bo\u015flukla ayr\u0131lan de\u011ferleri a listesine ekliyorum\n    return f\"Verilen c\u00fcmlede {len(a) - 1} adet bo\u015fluk vard\u0131r.\" #bo\u015flukla ayr\u0131ld\u0131klar\u0131 i\u00e7in a'n\u0131n eleman say\u0131s\u0131n\u0131n 1 eks\u011fi bize bo\u015fluk say\u0131s\u0131n\u0131 verir.","0ea0bfbf":"print(bosluk_sayisi(\"Liste anlay\u0131\u015flar\u0131 harikad\u0131r \u00e7\u00fcnk\u00fc daha az kod sat\u0131r\u0131 gerektirirler, daha kolay anla\u015f\u0131l\u0131rlar ve genellikle for d\u00f6ng\u00fcs\u00fcnden daha h\u0131zl\u0131d\u0131rlar.\"))\nprint(bosluk_sayisi(\"bak bak bak\"))\nbosluk_sayisi(\"bak bak bak \")","7962c3e6":"### 7. Bir dizedeki b\u00fcy\u00fck harflerin ve k\u00fc\u00e7\u00fck harflerin say\u0131s\u0131n\u0131 hesaplayan bir Python i\u015flevi yaz\u0131n.","bbb55332":"https:\/\/www.w3resource.com\/ ve hackerrank'ten fonksiyonlarla ilgili buldu\u011fum sorular\u0131 kendi \u00e7\u00f6z\u00fcmlerimle payla\u015fmak istedim.","9c1a6282":"### 5. Bir say\u0131n\u0131n fakt\u00f6riyelini (negatif olmayan bir tam say\u0131) hesaplamak i\u00e7in bir Python i\u015flevi yaz\u0131n. ","2ada8744":"### 11.Bir listenin i\u00e7indeki elemanlar\u0131 alfabetik s\u0131raya g\u00f6re s\u0131ralay\u0131n.","39e80870":"### 1. \u00dc\u00e7 elemanl\u0131 bir listedeki en b\u00fcy\u00fck de\u011ferin fonksiyonlar yard\u0131m\u0131yla bulunmas\u0131.","b20df2f7":"### 9. Parametre olarak bir say\u0131 alan ve say\u0131n\u0131n asal olup olmad\u0131\u011f\u0131n\u0131 kontrol eden bir Python i\u015flevi yaz\u0131n. ","d7483eba":"### 12. De\u011ferleri 1 ile 30 aras\u0131ndaki say\u0131lar\u0131n karesi oldu\u011fu bir liste yazd\u0131r\u0131n.","667aaaa5":"### 13. Verilen x say\u0131s\u0131na kadar fibonacci dizilerini yazd\u0131r\u0131n\n### 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987","d27aac2d":"###  8. Bir liste alan ve ilk listenin benzersiz unsurlar\u0131n\u0131 i\u00e7eren yeni bir liste d\u00f6nd\u00fcren bir Python i\u015flevi yaz\u0131n.","5e3bac9b":"### 4. Bir dizeyi ters \u00e7evirmek i\u00e7in bir Python program\u0131 yaz\u0131n.","2683c039":"### 14.Celsius de\u011feri girilirse fahrenheit de\u011ferini veren; fahrenheit de\u011feri girilirse celsius de\u011ferini veren bir fonksiyon yaz\u0131n\u0131z.","62cf8d06":"### 10. Bir say\u0131n\u0131n m\u00fckemmel olup olmad\u0131\u011f\u0131n\u0131 kontrol etmek i\u00e7in bir Python i\u015flevi yaz\u0131n. \n### Wikipedia'ya g\u00f6re: Say\u0131 teorisinde, m\u00fckemmel bir say\u0131, uygun pozitif b\u00f6lenlerinin toplam\u0131na e\u015fit olan pozitif bir tamsay\u0131d\u0131r, yani say\u0131n\u0131n kendisini hari\u00e7 tutan pozitif b\u00f6lenlerinin toplam\u0131d\u0131r.\n### \u00d6rnek  : \u0130lk m\u00fckemmel say\u0131 6'd\u0131r, \u00e7\u00fcnk\u00fc 1, 2 ve 3 onun uygun pozitif b\u00f6lenleridir ve 1 + 2 + 3 = 6. E\u015fit olarak, 6 say\u0131s\u0131 t\u00fcm pozitif b\u00f6lenlerinin toplam\u0131n\u0131n yar\u0131s\u0131na e\u015fittir: (1 + 2 + 3 + 6) \/ 2 = 6. Bir sonraki m\u00fckemmel say\u0131 28 = 1 + 2 + 4 + 7 + 14't\u00fcr. Bunu 496 ve 8128 m\u00fckemmel say\u0131lar\u0131 izler.","2806fa9c":"### 6-Bir say\u0131n\u0131n belirli bir aral\u0131kta olup olmad\u0131\u011f\u0131n\u0131 kontrol etmek i\u00e7in bir Python i\u015flevi yaz\u0131n.","b52eeeeb":"### 2. Listedeki t\u00fcm say\u0131lar\u0131 toplamak i\u00e7in bir Python i\u015flevi yaz\u0131n.","e71ce331":"### 16.Verilen c\u00fcmledeki bo\u015fluklar\u0131 sayan bir program yaz\u0131n.","25e07841":"### 3. Bir listedeki t\u00fcm say\u0131lar\u0131 \u00e7arpmak i\u00e7in bir Python i\u015flevi yaz\u0131n.","96e4a5aa":"# **FONKS\u0130YONLARLA \u0130LG\u0130L\u0130 ALI\u015eTIRMALAR**","ba2083d1":"### 15. Kullan\u0131c\u0131n\u0131n girdi\u011fi bir kelimenin palindromik kelime olup olmad\u0131\u011f\u0131n\u0131 test eden bir kod yaz\u0131n. \u00d6rne\u011fin kullan\u0131c\u0131 kelime olarak 'yapay' girdi\u011finde program \u00e7\u0131kt\u0131 olarak 'yapay palindromik bir kelimedir' \u015feklinde g\u00f6sterecek","5076e2f3":"![image.png](attachment:68b43800-d7d8-4fd5-9288-2e5e6d5dc69e.png)"}}