{"cell_type":{"7caff07b":"code","e6d4e0c1":"code","0172066e":"code","bcabdf39":"code","492a7447":"code","2a3e794a":"code","ac83a0de":"code","ec16d710":"code","8fb8ddf1":"code","58d3e668":"code","4d628aed":"code","275a5176":"code","c4766b57":"code","cf6a5744":"code","376cf7d4":"code","3935bba0":"code","4e589352":"code","2a50d61a":"code","44dd786e":"code","4a38591d":"code","b5bf583d":"code","9ba60716":"code","174eceb7":"code","d467f95f":"code","773211d8":"code","b473da2b":"code","6c21c1d5":"code","0534e141":"code","319fae5c":"code","5742dc7a":"code","de36c1ba":"code","846e4e0d":"code","48324b96":"code","2eca1de8":"code","8c7bdd1d":"markdown","14589a24":"markdown","56fafb6e":"markdown","4e785ddf":"markdown","7bf6551e":"markdown","0f2b996b":"markdown","126f0522":"markdown","c2f72d28":"markdown","b031b5ee":"markdown","5090cad9":"markdown","99044787":"markdown","d80c3a83":"markdown","e72a2070":"markdown","d9360d7a":"markdown"},"source":{"7caff07b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\n\nimport sklearn\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import scale\nimport sklearn.metrics as sm\nfrom sklearn import datasets\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, accuracy_score, confusion_matrix\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.decomposition import PCA\nfrom sklearn.metrics import roc_curve, auc\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import svm\nfrom sklearn.ensemble import RandomForestClassifier","e6d4e0c1":"Emp = pd.read_csv('..\/input\/INX_Future_Inc_Employee_Performance_CDS_Project2_Data_V1.8.csv')\nEmp.head()","0172066e":"Emp.dtypes.index","bcabdf39":"Emp['Attrition'].value_counts()","492a7447":"Emp.groupby('Attrition').mean()","2a3e794a":"Emp.groupby('EmpDepartment').mean()","ac83a0de":"%matplotlib inline\nimport matplotlib.pyplot as plt\npd.crosstab(Emp.EmpDepartment,Emp.Attrition).plot(kind='bar')\nplt.title('Department wise Attrition')\nplt.xlabel('Department')\nplt.ylabel('Attrition')\nplt.savefig('department_bar_chart')","ec16d710":"table=pd.crosstab(Emp.PerformanceRating, Emp.Attrition)\ntable.div(table.sum(1).astype(float), axis=0).plot(kind='bar', stacked=True)\nplt.title('Stacked Bar Chart of Performance Rating vs Attrition')\nplt.xlabel('Performance Rating')\nplt.ylabel('Proportion of Employees')\nplt.savefig('PerfRating_bar_chart')","8fb8ddf1":"pd.crosstab(Emp.EmpDepartment,Emp.PerformanceRating).plot(kind='bar')\nplt.title('Department wise Performance rating')\nplt.xlabel('Department')\nplt.ylabel('Performance Rating')\nplt.savefig('department_bar_chart')","58d3e668":"num_bins = 20\n\nEmp.hist(bins=num_bins, figsize=(20,15))\nplt.savefig(\"Emp_histogram_plots\")\nplt.show()","4d628aed":"Emp.drop(['EmpNumber','Gender','EducationBackground','MaritalStatus','EmpDepartment','EmpJobRole','BusinessTravelFrequency','Attrition'], axis=1, inplace=True)\nEmp.head()","275a5176":"Emp1=pd.read_csv('INX_Future_Inc_Employee_Performance_CDS_Project2_Data_V1.8.csv')\nEmp1=Emp1.drop('EmpNumber', axis=1)\nEmp1.head()","c4766b57":"INX=pd.get_dummies(Emp1,drop_first=True)\nINX.head()","cf6a5744":"INX.columns.values","376cf7d4":"INX_Emp = pd.merge(Emp,INX)\nINX_Emp","3935bba0":"INX_Emp.columns.values","4e589352":"Emp_vars=INX.columns.values.tolist()\ny=['PerformanceRating']\nX=[i for i in Emp_vars if i not in y]","2a50d61a":"from sklearn.feature_selection import RFE\nfrom sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()\nrfe = RFE(model, 20)\nrfe = rfe.fit(INX[X], INX[y])\nprint(rfe.support_)\nprint(rfe.ranking_)","44dd786e":"x=INX.drop('PerformanceRating',axis=1)","4a38591d":"y=INX.loc[:,['PerformanceRating']]","b5bf583d":"x_train,x_test,y_train,y_test =train_test_split(x,y, test_size = 0.3, random_state = 20)","9ba60716":"rf_model =  RandomForestClassifier(random_state = 10)\nrf_model.fit(x_train,y_train)","174eceb7":"y_pred=rf_model.predict(x_test)","d467f95f":"print(accuracy_score(y_test,y_pred))","773211d8":"LogReg = LogisticRegression()\nLogReg.fit(x_train,y_train)","b473da2b":"LogReg.score(x_train,y_train)","6c21c1d5":"y_pred = LogReg.predict(x_test)\nprint(y_test)\nprint(y_pred)","0534e141":"accuracy_score(y_test,y_pred)","319fae5c":"tree = DecisionTreeClassifier(random_state=0)","5742dc7a":"tree.fit(x_train,y_train)","de36c1ba":"print(\"Accuracy on training set: %f\" % tree.score(x_train, y_train))\nprint('\\n'\"Accuracy on test set: %f\" % tree.score(x_test, y_test))","846e4e0d":"from sklearn.metrics import accuracy_score\nsvc_linear = svm.SVC(kernel='linear',C=1)\n\nsvc_linear.fit(x_train, y_train)\npredicted= svc_linear.predict(x_test)\ncnf_matrix = confusion_matrix(y_test, predicted)\nprint(cnf_matrix)\nprint(accuracy_score(y_test,predicted))","48324b96":"from sklearn import model_selection\nfrom sklearn.model_selection import cross_val_score\nkfold = model_selection.KFold(n_splits=10, random_state=7)\nmodelCV = RandomForestClassifier()\nscoring = 'accuracy'\nresults = model_selection.cross_val_score(modelCV, x_train, y_train, cv=kfold, scoring=scoring)\nprint(\"10-fold cross validation average accuracy: %.3f\" % (results.mean()))","2eca1de8":"feature_labels = np.array(['Age', 'DistanceFromHome', 'EmpEducationLevel',\n       'EmpEnvironmentSatisfaction', 'EmpHourlyRate', 'EmpJobInvolvement',\n       'EmpJobLevel', 'EmpJobSatisfaction', 'NumCompaniesWorked',\n       'EmpLastSalaryHikePercent', 'EmpRelationshipSatisfaction',\n       'TotalWorkExperienceInYears', 'TrainingTimesLastYear',\n       'EmpWorkLifeBalance', 'ExperienceYearsAtThisCompany',\n       'ExperienceYearsInCurrentRole', 'YearsSinceLastPromotion',\n       'YearsWithCurrManager', 'Gender_Male',\n       'EducationBackground_Life Sciences',\n       'EducationBackground_Marketing', 'EducationBackground_Medical',\n       'EducationBackground_Other',\n       'EducationBackground_Technical Degree', 'MaritalStatus_Married',\n       'MaritalStatus_Single', 'EmpDepartment_Development',\n       'EmpDepartment_Finance', 'EmpDepartment_Human Resources',\n       'EmpDepartment_Research & Development', 'EmpDepartment_Sales',\n       'EmpJobRole_Data Scientist', 'EmpJobRole_Delivery Manager',\n       'EmpJobRole_Developer', 'EmpJobRole_Finance Manager',\n       'EmpJobRole_Healthcare Representative',\n       'EmpJobRole_Human Resources', 'EmpJobRole_Laboratory Technician',\n       'EmpJobRole_Manager', 'EmpJobRole_Manager R&D',\n       'EmpJobRole_Manufacturing Director',\n       'EmpJobRole_Research Director', 'EmpJobRole_Research Scientist',\n       'EmpJobRole_Sales Executive', 'EmpJobRole_Sales Representative',\n       'EmpJobRole_Senior Developer', 'EmpJobRole_Senior Manager R&D',\n       'EmpJobRole_Technical Architect', 'EmpJobRole_Technical Lead',\n       'BusinessTravelFrequency_Travel_Frequently',\n       'BusinessTravelFrequency_Travel_Rarely', 'OverTime_Yes',\n       'Attrition_Yes'])\nimportance = rf_model.feature_importances_\nfeature_indexes_by_importance = importance.argsort()\nfor index in feature_indexes_by_importance:\n    print('{}-{:.2f}%'.format(feature_labels[index], (importance[index] *100.0)))","8c7bdd1d":"### Logistic Regression","14589a24":"### Support Vector Machine","56fafb6e":"### Decision Tree","4e785ddf":"-Based on the above data it is evident that Development, Human Resources and Research & Development are the top employee performing departments\n-We do not include Data Science in the analysis as they are comparatatively very small department vs. others in terms of number of employees","7bf6551e":"### Random Forest ","0f2b996b":"### Feature Selection","126f0522":"### Creating Dummy Variables for Categorical Variables","c2f72d28":"### Feature Importance for Random Forest Model","b031b5ee":"### Histogram of variables","5090cad9":"According to our Random Forest model, the above shows the most important features which influence performance of employees, in ascending order.","99044787":"### Cross Validation","d80c3a83":"### Data Visualisation","e72a2070":"The average accuracy remains very close to the Random Forest model accuracy; hence, we can conclude that the model generalizes well.","d9360d7a":"### Data Preprocessing & Data Exploration"}}