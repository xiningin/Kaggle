{"cell_type":{"6f03c475":"code","e3b52c3e":"code","cab2dce9":"code","9f300321":"code","7249c9a7":"code","0cd7f083":"code","ea7a49ce":"code","81e39b88":"code","882ab310":"code","cc644275":"code","af67d1e9":"code","5daf878a":"code","e630ab28":"code","5a162faa":"code","c8b51427":"code","12215f3c":"code","30b857c2":"code","6d324ae8":"code","ef5a2a3e":"code","7106f3e6":"code","cdcf56dd":"code","4b4df82b":"code","9ff4d875":"code","ab4897d7":"code","ac957d35":"code","d12afae4":"code","cfeb61fe":"markdown","018197f7":"markdown","094e15e2":"markdown","8219c46a":"markdown","5823b91b":"markdown","7c2f4bc5":"markdown","56574503":"markdown","7d7c4c5c":"markdown","01d02f82":"markdown","c0bd9e9a":"markdown","34c00866":"markdown"},"source":{"6f03c475":"import numpy as np\nimport pandas as pd\nimport scipy\nimport sklearn","e3b52c3e":"from sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import OneHotEncoder","cab2dce9":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_validate","9f300321":"df_train = pd.read_csv('\/kaggle\/input\/cat-in-the-dat\/train.csv', index_col='id')\ndf_test = pd.read_csv('\/kaggle\/input\/cat-in-the-dat\/test.csv', index_col='id')","7249c9a7":"sample_submission = pd.read_csv('\/kaggle\/input\/cat-in-the-dat\/sample_submission.csv', index_col='id')","0cd7f083":"binvar = ['bin_' + str(i) for i in range(1,5)]\nordvar = ['ord_' + str(i) for i in range(6)]\nnomvar = ['nom_' + str(i) for i in range(10)]\ndmvar  = ['day', 'month']","ea7a49ce":"df_work = df_train.copy()\ny_train = df_work['target'].copy()\ndf_work = pd.concat([df_work.drop('target', axis = 1), df_test])","81e39b88":"df_work.drop('bin_0', inplace=True, axis=1)","882ab310":"df_work['bin_3'] = df_work['bin_3'].map({'F':0, 'T':1})\ndf_work['bin_4'] = df_work['bin_4'].map({'N':0, 'Y':1})","cc644275":"df_work['ord_0'] = df_work['ord_0'] - 1","af67d1e9":"ord1dict = {'Novice':0, 'Contributor':1, 'Expert':2, 'Master':3, 'Grandmaster':4}\ndf_work['ord_1'] = df_work['ord_1'].map(ord1dict)","5daf878a":"ord2dict = {'Freezing':0, 'Cold':1, 'Warm':2, 'Hot':3, 'Boiling Hot':4, 'Lava Hot':5}\ndf_work['ord_2'] = df_work['ord_2'].map(ord2dict)","e630ab28":"oe = OrdinalEncoder(categories='auto')\ndf_work[ordvar[3:]] = oe.fit_transform(df_work[ordvar[3:]])\nfor var, cl in zip(ordvar[3:], oe.categories_):\n    print(var)\n    print(cl)","5a162faa":"df_work[ordvar] = StandardScaler().fit_transform(df_work[ordvar])","c8b51427":"df_work[nomvar[5:]].nunique()","12215f3c":"df_work['nom_5'] = df_work['nom_5'].str[4:]\ndf_work['nom_6'] = df_work['nom_6'].str[3:]\ndf_work['nom_7'] = df_work['nom_7'].str[3:]\ndf_work['nom_8'] = df_work['nom_8'].str[3:]\ndf_work['nom_9'] = df_work['nom_9'].str[3:]","30b857c2":"df_work[nomvar[5:]].nunique()","6d324ae8":"enc = OneHotEncoder(categories = 'auto', dtype = 'float64', drop = 'first')\nnom_matrix = enc.fit_transform(df_work[nomvar])\ndf_work.drop(nomvar, inplace=True, axis=1)","ef5a2a3e":"enc = OneHotEncoder(categories='auto', dtype = 'float64', drop = 'first')\ndm_matrix = enc.fit_transform(df_work[dmvar])\ndf_work.drop(dmvar, inplace=True, axis=1)","7106f3e6":"df_work.columns","cdcf56dd":"df_work_sprs =scipy.sparse.hstack([nom_matrix,\n                                   scipy.sparse.coo_matrix(df_work).astype('float64'),\n                                   dm_matrix]).tocsr()\ndisplay(df_work_sprs)","4b4df82b":"X_train = df_work_sprs[:y_train.shape[0]]\nX_test = df_work_sprs[y_train.shape[0]:]","9ff4d875":"%%time\n\nC = 0.12\n\nclf = LogisticRegression(C=C, solver='lbfgs', max_iter=1000, verbose=0, n_jobs=-1)\n\n\nscore = cross_validate(clf, X_train, y_train, cv=3, scoring=\"roc_auc\")\nmean = score['test_score'].mean()\nprint(score['test_score'])\nprint('C =', C, f'{mean:.8f}')","ab4897d7":"%%time\n\nclf = LogisticRegression(C=C, solver='lbfgs', max_iter=1000, verbose=0, n_jobs=-1)\nclf.fit(X_train, y_train)","ac957d35":"y_preds = clf.predict_proba(X_test)[:,1]","d12afae4":"sample_submission['target'] = y_preds\nsample_submission.to_csv('submission.csv')","cfeb61fe":"# Definitely there is something covered in nom vars 5 - 9 but I didn't get it. Still cutting some letters works for me","018197f7":"# Cross-validation","094e15e2":"# Bin vars","8219c46a":"# One hot encoding nomvars & dmvars","5823b91b":"# Note: Use C-ordered arrays or CSR matrices containing 64-bit floats for optimal performance;\n#       any other input format will be converted (and copied).","7c2f4bc5":"# Training","56574503":"# Nom vars","7d7c4c5c":"# Creating submission file","01d02f82":"# Ord vars","c0bd9e9a":"# Read data","34c00866":"# Scaling ord vars"}}