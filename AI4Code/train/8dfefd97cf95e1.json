{"cell_type":{"77e7a1e7":"code","58921b87":"code","6bd5ae35":"code","39bebb01":"code","c592bc73":"code","3b173a91":"code","51f4ca9e":"code","107b1eda":"code","17575055":"code","02fc57e7":"code","a1a51ec7":"code","a2f0a3fb":"code","43d81e76":"code","aa300f8d":"code","b8b711b0":"code","d0b03c40":"code","156c086f":"code","8c38c36f":"code","93fd60fe":"code","4a25add0":"code","f280eed0":"markdown","1778b357":"markdown","87663876":"markdown","f8505b98":"markdown","122e8773":"markdown","65eb88ed":"markdown"},"source":{"77e7a1e7":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('dark_background')","58921b87":"df = pd.read_csv('..\/input\/weather-dataset-rattle-package\/weatherAUS.csv')\ndf.head()","6bd5ae35":"df.describe()","39bebb01":"df.shape","c592bc73":"df.info()","3b173a91":"df = df.drop([\"Evaporation\",\"Sunshine\",\"Cloud9am\",\"Cloud3pm\",\"Location\", \"Date\"], axis =1)\ndf.head()","51f4ca9e":"df = df.dropna(axis = 0)\ndf.shape","107b1eda":"df.columns","17575055":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndf['WindGustDir'] = le.fit_transform(df['WindGustDir'])\ndf['WindDir9am'] = le.fit_transform(df['WindDir9am'])\ndf['WindDir3pm'] = le.fit_transform(df['WindDir3pm'])\ndf['RainToday'] = le.fit_transform(df['RainToday'])\ndf['RainTomorrow'] = le.fit_transform(df['RainTomorrow'])","02fc57e7":"x = df.drop(['RainTomorrow'], axis = 1)\ny = df['RainTomorrow']","a1a51ec7":"x.head()","a2f0a3fb":"plt.figure(figsize = (8,8))\nsns.scatterplot(x = 'MaxTemp', y = 'MinTemp', hue = 'RainTomorrow' , palette = 'inferno',data = df)","43d81e76":"plt.figure(figsize = (8,8))\nsns.scatterplot(x = 'Humidity9am', y = 'Temp9am', hue = 'RainTomorrow' , palette = 'inferno',data = df)","aa300f8d":"plt.figure(figsize = (8,8))\nsns.heatmap(df.corr())","b8b711b0":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y, test_size = 0.2)","d0b03c40":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score","156c086f":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()\nlr.fit(x_train,y_train)\npredictions = lr.predict(x_test)\nprint(confusion_matrix(y_test, predictions))\nprint(classification_report(y_test, predictions))\nprint(accuracy_score(y_test, predictions))","8c38c36f":"from sklearn.tree import DecisionTreeClassifier\ndt = DecisionTreeClassifier()\ndt.fit(x_train,y_train)\npredictions = dt.predict(x_test)\nprint(confusion_matrix(y_test, predictions))\nprint(classification_report(y_test, predictions))\nprint(accuracy_score(y_test, predictions))","93fd60fe":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier()\nrf.fit(x_train,y_train)\npredictions = rf.predict(x_test)\nprint(confusion_matrix(y_test, predictions))\nprint(classification_report(y_test, predictions))\nprint(accuracy_score(y_test, predictions))","4a25add0":"import xgboost as xgb\nxgb = xgb.XGBClassifier()\nxgb.fit(x_train, y_train)\npred = xgb.predict(x_test)\nprint('acc',accuracy_score(y_test,pred))\nprint('f1',classification_report(y_test,pred))\nprint('matrix',confusion_matrix(y_test,pred))","f280eed0":"# Logistic Regression","1778b357":"# Decision Tree","87663876":"# Heatmap","f8505b98":"# Import Statements","122e8773":"# XGBoost Classifier","65eb88ed":"# Random Forest Classifier"}}