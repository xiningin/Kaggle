{"cell_type":{"f44b7d4f":"code","c292e589":"code","f9087e1e":"code","280f3f3b":"code","93fb0c13":"code","3dde19eb":"code","563096e2":"code","4061b83f":"code","4ddfa71b":"code","e9109ef1":"code","29a3a979":"code","ed218fac":"code","3ae08f30":"code","4d6d05cb":"code","3377ddd1":"code","2d0ca067":"code","d5643687":"code","e0f7192d":"code","3c340a34":"code","1b41bdb2":"code","f94751f8":"code","6de043d4":"code","f20513f3":"code","bc443795":"code","a05c5731":"code","e0a6a1a2":"code","83595fcb":"code","03ee0aa5":"code","47022b14":"code","cb3ab918":"code","79eed090":"code","0fe14d74":"code","4f6ac974":"code","e874dc03":"code","0b99ad26":"code","2d7bfd30":"code","4c94f1e7":"code","f5e15fcb":"code","952dc745":"code","3bc43df9":"code","49df6b24":"code","95d7b79b":"code","18a5ca53":"code","f97db99d":"code","1676e255":"code","2c77c458":"code","30a3d704":"code","30c89ebe":"code","715013e7":"code","0c87829a":"code","d065b844":"code","d94ae938":"code","5079e4ce":"code","a78e09ad":"code","d3a866be":"code","80729c6a":"code","dfa0cdb9":"code","ee3e93aa":"code","2a967abd":"code","2bd97fe7":"code","b892350e":"code","114a2925":"code","519679d3":"code","feb1f606":"code","b76eac94":"code","5db39017":"code","fda2a627":"code","5d079d5f":"code","b7ec91ff":"code","fadec8b0":"code","dd6d3b08":"code","aeecb651":"code","b365431c":"code","f1d9d66a":"code","f7fe418c":"markdown","a0e729ff":"markdown","bdc483b3":"markdown","126f7263":"markdown","7da2dcc9":"markdown","e2e50a71":"markdown","333826b3":"markdown","032160dc":"markdown","337dd1bb":"markdown","0788766a":"markdown","a9187ed3":"markdown","8730d62f":"markdown","f3e0506b":"markdown","aad14dc5":"markdown","0f5d435b":"markdown","65d5114f":"markdown","5b3c0a09":"markdown","8d8ca33d":"markdown","3a013438":"markdown","728e92e5":"markdown"},"source":{"f44b7d4f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","c292e589":"df = pd.read_csv(\"..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")","f9087e1e":"df.head(2)","280f3f3b":"len(df)","93fb0c13":"df.info()","3dde19eb":"df.isna().sum()","563096e2":"df['output'].unique()","4061b83f":"len(df[df['sex']==1])","4ddfa71b":"len(df[df['sex']==0])","e9109ef1":"df.corr()['output'].sort_values()[:-1]","29a3a979":"df.describe()","ed218fac":"96\/303","3ae08f30":"sns.histplot(data=df,x='output',kde=True)","4d6d05cb":"sns.countplot(data=df , x = 'cp', hue ='output')","3377ddd1":"from sklearn.model_selection import train_test_split","2d0ca067":"X = df.drop('output',axis=1)\ny = df['output']","d5643687":"X.head()","e0f7192d":"df['thall'].nunique()","3c340a34":"X_dummies = pd.get_dummies(data=X , columns=['sex','cp','fbs','restecg','exng','slp','caa','thall'] , drop_first=True)","1b41bdb2":"len(X_dummies.columns)","f94751f8":"X_dummies.head(2)","6de043d4":"X_train, X_test, y_train, y_test = train_test_split(X_dummies, y, test_size=0.3, random_state=42)","f20513f3":"from sklearn.preprocessing import StandardScaler","bc443795":"sc = StandardScaler()","a05c5731":"X_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","e0a6a1a2":"from sklearn.linear_model import LogisticRegression","83595fcb":"lr = LogisticRegression(fit_intercept=True,random_state=42)","03ee0aa5":"lr.fit(X_train,y_train)","47022b14":"lr_pred = lr.predict(X_test)","cb3ab918":"from sklearn.metrics import classification_report,confusion_matrix,f1_score","79eed090":"print(classification_report(y_test,lr_pred))\nprint('\\n')\nprint(confusion_matrix(y_test,lr_pred))\nprint('\\n')\nprint(f1_score(y_test,lr_pred))","0fe14d74":"from sklearn.model_selection import cross_val_score","4f6ac974":"lr_accuracies = cross_val_score(lr , X_test , y_test , cv = 41)\nprint(lr_accuracies.mean())","e874dc03":"from sklearn.neighbors import KNeighborsClassifier","0b99ad26":"knn = KNeighborsClassifier(n_neighbors=30)","2d7bfd30":"knn.fit(X_train,y_train)","4c94f1e7":"knn_pred = knn.predict(X_test)","f5e15fcb":"print(confusion_matrix(y_test,knn_pred))\nprint('\\n')\nprint(classification_report(y_test,knn_pred))","952dc745":"Accuracy = []\nfor i in range(1,41):\n    knn = KNeighborsClassifier(i)\n    knn.fit(X_train,y_train)\n    knn_pred = knn.predict(X_test)\n    knn_accuracies = cross_val_score(knn , X_test , y_test , cv = 41)\n    knn_accuracy_i = knn_accuracies.mean()\n    Accuracy.append(knn_accuracy_i)","3bc43df9":"knn_df = pd.DataFrame({'Neighbours': np.arange(1,41) , 'Accuracy': Accuracy})","49df6b24":"sns.scatterplot(data=knn_df , x = 'Neighbours',y='Accuracy')","95d7b79b":"knn_df[knn_df['Accuracy']==knn_df['Accuracy'].max()]","18a5ca53":"knn = KNeighborsClassifier(14)\nknn.fit(X_train,y_train)\nknn_pred = knn.predict(X_test)\nprint(confusion_matrix(y_test,knn_pred))\nprint('\\n')\nprint(classification_report(y_test,knn_pred))","f97db99d":"knn_accuracies = cross_val_score(knn , X_test , y_test , cv = 41)\nprint(knn_accuracies.mean())","1676e255":"from sklearn.svm import SVC","2c77c458":"svc = SVC()","30a3d704":"svc.fit(X_train,y_train)","30c89ebe":"svc_pred = svc.predict(X_test)","715013e7":"print(confusion_matrix(y_test,svc_pred))\nprint('\\n')\nprint(classification_report(y_test,svc_pred))","0c87829a":"from sklearn.model_selection import GridSearchCV","d065b844":"params = {'C': [10000,100000,1000000] , 'gamma': [0.000001 , (10**-7) , (10**-8)]}","d94ae938":"grid = GridSearchCV(SVC() , param_grid = params , verbose= 3 , cv=10)","5079e4ce":"grid.fit(X_train,y_train)","a78e09ad":"grid.best_params_","d3a866be":"grid.best_score_","80729c6a":"svc = SVC(C = 1e06 , gamma= 1e-07)","dfa0cdb9":"svc.fit(X_train,y_train)","ee3e93aa":"svc_pred = svc.predict(X_test)","2a967abd":"print(confusion_matrix(y_test,svc_pred))\nprint('\\n')\nprint(classification_report(y_test,svc_pred))","2bd97fe7":"svc_accuracies = cross_val_score(svc , X_test , y_test , cv = 41)\nprint(svc_accuracies.mean())","b892350e":"from sklearn.ensemble import RandomForestClassifier","114a2925":"rf = RandomForestClassifier(n_estimators=500,random_state=0 , max_depth=5)","519679d3":"rf.fit(X_train,y_train)","feb1f606":"rf_pred = rf.predict(X_test)","b76eac94":"print(confusion_matrix(y_test,rf_pred))\nprint('\\n')\nprint(classification_report(y_test,rf_pred))","5db39017":"rf_accuracies = cross_val_score(rf , X_test , y_test , cv = 41)\nprint(rf_accuracies.mean())","fda2a627":"from catboost import CatBoostClassifier","5d079d5f":"cb = CatBoostClassifier(iterations=1000 , random_state=0 , loss_function='Logloss' , depth=5)","b7ec91ff":"cb.fit(X_train,y_train , eval_set=(X_test,y_test) , plot=True)","fadec8b0":"cb_pred = cb.predict(X_test)","dd6d3b08":"print(confusion_matrix(y_test,cb_pred))\nprint('\\n')\nprint(classification_report(y_test,cb_pred))","aeecb651":"cb_accuracies = cross_val_score(cb , X_test , y_test , cv = 40)\nprint(cb_accuracies.mean())","b365431c":"knn = KNeighborsClassifier(14)\nknn.fit(X_train,y_train)\nknn_pred = knn.predict(X_test)\nprint(confusion_matrix(y_test,knn_pred))\nprint('\\n')\nprint(classification_report(y_test,knn_pred))","f1d9d66a":"knn_accuracies = cross_val_score(knn , X_test , y_test , cv = 41)\nprint(knn_accuracies.mean())","f7fe418c":"# CV ON SVC PERFORMED WORST AMONG LOGISTIC REGRESSION AND KNN","a0e729ff":"# 2) KNN","bdc483b3":"# CV Accuracy","126f7263":"# 1) LOGISTIC REGRESSION","7da2dcc9":"# RANDOM FOREST ALMOST LIKE LOGISTIC REGRESSION (LOGISTIC REGRESSION 4 MORE CORRECT VALUES THAN RF)..TILL NOW KNN SEEMS TO BE THE BEST FIT","e2e50a71":"# KNN WITH K==14 IS BETTER THAN LOGISTIC REGRESSION WITH A CV ACCURACY OF 86.99%","333826b3":"# implementing the best knn model with k=14","032160dc":" # 3) SVC","337dd1bb":"# SURPRISINGLY CATBOOST PERFORMED WORST OF ALL MODELS WITH ONLY 78.33% CV ACCURACY","0788766a":"# the dataset's target variable distribution is around 70%-30% (70% of all values being 1)","a9187ed3":"# MEAN ACCURACY IS 86.99% OUT OF 41 CV FOLDS","8730d62f":"# TEST TRAIN SPLIT","f3e0506b":"# I guess depending on the data 0 means Female and 1 means male. ","aad14dc5":"# USING GRID SEARCH CV","0f5d435b":"# LET'S APPLY CLASSIFICATION MODELS AND ASSESS THEIR ACCURCACY\/ F1 METRIC","65d5114f":"# EDA","5b3c0a09":"# 4) RANDOM FOREST","8d8ca33d":"# creating dummies","3a013438":"# HENCE, THE BEST MODEL IS KNN","728e92e5":"# 4) CATBOOST"}}