{"cell_type":{"46c1b4ee":"code","ccb0d78f":"code","8d7ee58f":"code","676a662e":"code","31512157":"code","c857786b":"code","451cb968":"code","f3a41b5a":"code","56a66d43":"code","a3864454":"code","8a6740d0":"markdown","2e2f45f4":"markdown","a84cb62d":"markdown"},"source":{"46c1b4ee":"import pandas as pd\nimport numpy as np\npd.set_option(\"display.max_columns\",30)\nfrom sklearn.decomposition import PCA # dimensionality reduction\nfrom sklearn.cluster import AgglomerativeClustering\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# import KMeans\n\nimport scipy.cluster.hierarchy as sch\nfrom sklearn.cluster import KMeans","ccb0d78f":"LEADS_data = pd.read_csv(\"..\/input\/logistics-ease-across-different-states-india-2021\/Leads Report 2021 Numeric Data.csv\")\n\nLEADS_data = LEADS_data.set_index(\"State wise scores of individual parameters\")\nLEADs_Final_score = LEADS_data['Final Score']\nLEADS_data = LEADS_data.drop(columns='Final Score')\n\nLEADS_data.head()","8d7ee58f":"LEADS_data.info()","676a662e":"LEADS_data.describe()","31512157":"pca = PCA(n_components=2)\nprincipalComponents = pca.fit_transform(LEADS_data)\nprincipalDf = pd.DataFrame(data = principalComponents\n             , columns = ['PCA1', 'PCA2'],index=LEADS_data.index)\n\nsns.scatterplot(x=principalDf.PCA1,y=principalDf.PCA2)","c857786b":"# create dendrogram\nfigure,ax = plt.subplots(1,1,figsize=(15,9))\ndendrogram = sch.dendrogram(sch.linkage(LEADS_data, method='complete'),labels=LEADS_data.index,ax=ax)\n# create clusters\nhc = AgglomerativeClustering(n_clusters=4, affinity = 'euclidean', linkage = 'ward')\n# save clusters for chart\ny_hc = hc.fit_predict(LEADS_data)","451cb968":"wcss = []\nfor i in range(2, 20):\n    kmeans = KMeans(n_clusters=i, init='k-means++', max_iter=300, n_init=10, random_state=0)\n    kmeans.fit(LEADS_data)\n    wcss.append(kmeans.inertia_)\nplt.plot(range(2, 20), wcss)\nplt.title('Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","f3a41b5a":"kmeans = KMeans(n_clusters=8)\nkmeans.fit(LEADS_data)\n\nLEADS_data['kmeans8_pred'] = kmeans.predict(LEADS_data)","56a66d43":"from sklearn.decomposition import PCA\npca = PCA(n_components=2)\nprincipalComponents = pca.fit_transform(LEADS_data)\nprincipalDf = pd.DataFrame(data = principalComponents\n             , columns = ['PCA1', 'PCA2'],index=LEADS_data.index)\n\nsns.scatterplot(x=principalDf.PCA1,y=principalDf.PCA2,hue=LEADS_data.kmeans8_pred,palette='Reds')","a3864454":"LEADS_data['kmeans8_pred'].sort_values()","8a6740d0":"## K Means Clustering","2e2f45f4":"## Hierarchial Clustering","a84cb62d":"## Prinicipal Components to Visualize data"}}