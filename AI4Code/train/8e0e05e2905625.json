{"cell_type":{"6ffa9fc2":"code","7c9ad5c1":"code","aa2196c4":"code","a9bdbb81":"code","919d236a":"code","11eccb98":"code","d5f407f8":"code","9686352e":"code","80da4da0":"code","b080b250":"code","e7b8a791":"code","4f089503":"code","9110b180":"code","3b841556":"code","a23008b7":"code","f6aab188":"code","8f544664":"code","5ee98607":"code","8e81ee1f":"code","e389f628":"code","1449ce19":"code","0422cd34":"code","5cc8c997":"code","fc1ffb6b":"code","b31b829f":"code","10102bf1":"markdown","afa33ac8":"markdown","68156ebc":"markdown","d9181ba6":"markdown","5a3fcf42":"markdown","07078023":"markdown","21caaf49":"markdown","473a400a":"markdown","d0255fcd":"markdown","80983383":"markdown"},"source":{"6ffa9fc2":"import numpy as np\nimport pandas as pd\nimport os\n\nimport cv2\nimport json\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nfrom PIL import Image\n\nfrom wordcloud import WordCloud\n\nimport warnings\nwarnings.filterwarnings(action='ignore')","7c9ad5c1":"path = '..\/input\/'","aa2196c4":"train = pd.read_csv(path+'train.csv')\ntest = pd.read_csv(path+'test.csv')\nclass_ = pd.read_csv(path+'class.csv')","a9bdbb81":"train.head()","919d236a":"test.head()","11eccb98":"class_.head()","d5f407f8":"train.info()","9686352e":"test.info()","80da4da0":"class_.info()","b080b250":"def image_show(path, row=0, train_data=True):\n    if train_data:\n        img_name = train.iloc[row, 0]\n        img = np.asarray(Image.open(path + \"train\/\" + img_name))\n    else:\n        img_name = test.iloc[row, 0]\n        img = np.asarray(Image.open(path + \"test\/\" + img_name))\n    plt.imshow(img)        \n    plt.show()\n    \ndef image_object_show(path, row, train_data=True):\n    if train_data:\n        img_name, x, y, w, h = train.iloc[row, 0], train.iloc[row, 1], train.iloc[row, 2], train.iloc[row, 3], train.iloc[row, 4]\n        img = np.asarray(Image.open(path + \"train\/\" + img_name))\n        cv2.rectangle(img,(x,y),(x+w,y+h),(0,255,0),2)\n    else:\n        img_name, x, y, w, h = test.iloc[row, 0], test.iloc[row, 1], test.iloc[row, 2], test.iloc[row, 3], test.iloc[row, 4]\n        img = np.asarray(Image.open(path + \"test\/\" + img_name))\n        cv2.rectangle(img,(x,y),(x+w,y+h),(0,255,0),2)\n    plt.imshow(img)        \n    plt.show()","e7b8a791":"image_show(path, 0)","4f089503":"image_show(path, 150)","9110b180":"image_object_show(path, 0)","3b841556":"image_object_show(path, 150)","a23008b7":"train = pd.merge(train, class_, how='left', left_on='class', right_on='id')\ntrain['company'] = train['name'].apply(lambda x: x.split(' ')[0])\ntrain['year'] = train['name'].apply(lambda x: x.split(' ')[-1])","f6aab188":"text = ''\nfor name in train['company']:\n    text += ' ' + name\n\nwordcloud = WordCloud(max_font_size=50, width=600, height=300, background_color='white').generate(text)\nplt.figure(figsize=(15,8))\nplt.imshow(wordcloud)\nplt.title(\"Company WordCloud\", fontsize=40, color='red')\nplt.axis(\"off\")\nplt.show() ","8f544664":"plt.figure(figsize=(20, 8))\nsns.countplot(train['year'])\nplt.show()","5ee98607":"height = []\nwidth = []\nfor i in range(len(train)):\n    img = np.asarray(Image.open(path + \"train\/\" + train.iloc[i, 0]))\n    height.append(img.shape[0])\n    width.append(img.shape[1])","8e81ee1f":"plt.subplots(1, 2, figsize=(20, 6))\n\nplt.subplot(1, 2, 1)\nsns.distplot(height)\nplt.title('Height Distribution')\n\nplt.subplot(1, 2, 2)\nsns.distplot(width)\nplt.title('Widht Distribution')\nplt.show()","e389f628":"temp = np.argmax(height)\nimage_show(path, temp)\nprint('maximum height picture \\nheight : {}'.format(height[temp]))","1449ce19":"temp = np.argmax(width)\nimage_show(path, temp)\nprint('maximum width picture \\nwidth : {}'.format(width[temp]))","0422cd34":"temp = np.argmin(height)\nimage_show(path, temp)\nprint('minimum height picture \\nheight : {}'.format(height[temp]))","5cc8c997":"temp = np.argmin(width)\nimage_show(path, temp)\nprint('minimum width picture \\nwidth : {}'.format(width[temp]))","fc1ffb6b":"temp = np.argmax(np.array(height) * np.array(width))\nimage_show(path, temp)\nprint('maximum picture \\nhight : {}, width : {}'.format(height[temp], width[temp]))","b31b829f":"temp = np.argmin(np.array(height) * np.array(width))\nimage_show(path, temp)\nprint('minimum picture \\nhight : {}, width : {}'.format(height[temp], width[temp]))","10102bf1":"## Data Check - Image","afa33ac8":"# **<a id='1'>Introduction<\/a>**\n\n\n#### **Competition background**\n\uc6b0\ub9ac\uac00 \uc0b4\uba74\uc11c \uac16\uace0 \uc2f6\uc740\uac8c \uc5ec\ub7ec \uac00\uc9c0\uac00 \uc788\uc9c0\ub9cc, \uc9d1 \ub2e4\uc74c\uc73c\ub85c \ubcf4\ud1b5 \uc790\ub3d9\ucc28 \uc77c \uac83\uc785\ub2c8\ub2e4. \uc6b0\ub9ac \uc8fc\uc704\uc5d0\uc11c \ud754\ud788 \ubcfc \uc218 \uc788\uace0, \ud3b8\ub9ac\ud55c \uad50\ud1b5 \uc218\ub2e8 \uc911\uc5d0 \ud558\ub098\uc785\ub2c8\ub2e4. \uc804 \uc138\uacc4\uc801\uc73c\ub85c \uadf8 \uc218\ub294 \ubb34\ub824 10\uc5b5\ub300\uac00 \ub118\uace0, \uadf8 \uc885\ub958\ub294 \uc218\ubc31, \uc218\ucc9c \uac00\uc9c0 \uc774\uc0c1 \ub41c\ub2e4\uace0 \ud569\ub2c8\ub2e4.\n\n\ud558\uc9c0\ub9cc, \uc774\ub807\uac8c \ub9ce\uc740 \ucc28\uc885\uc744 \uad6c\ubcc4\ud558\ub294 \uac83\uc740 \uc0ac\ub78c\uc77c\uc9c0\ub77c\ub3c4 \uc27d\uc9c0\uac00 \uc54a\uc740\ub370\uc694. \ub9cc\uc57d, \uadf8\ub9bc\ub9cc \ubcf4\uace0 \uc790\ub3d9\ucc28\uc758 \ubaa8\ub378(Class)\uc744 \uc27d\uac8c \uc608\uce21\ud560 \uc218 \uc788\ub2e4\uba74 CCTV\ub098 \ube14\ub799\ubc15\uc2a4 \uc18d\uc758 \ucc28\ub7c9\uc744 \uc790\ub3d9\uc73c\ub85c \ubd84\ub958, \uac10\uc9c0\ud574\uc11c \ubc94\uc8c4\uc608\ubc29\uc5d0 \ub3c4\uc6c0\uc744 \uc904 \uc218 \uc788\ub294 \ub4f1 \ub2e4\uc591\ud55c \uacf3\uc5d0 \uc720\uc775\ud558\uac8c \uc0ac\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n\uc774\ubc88 \ucef4\ud398\ud2f0\uc158\uc5d0\uc11c\ub294, \uc790\ub3d9\ucc28 \uc774\ubbf8\uc9c0 \ub370\uc774\ud130\uc14b\uc744 \ud65c\uc6a9\ud558\uc5ec \uc774\ubbf8\uc9c0\uc5d0 \ud574\ub2f9\ud558\ub294 \ucc28\uc885(Class)\uc774 \uacfc\uc5f0 \ubb34\uc5c7\uc778\uc9c0 \uc608\uce21\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\n#### **Evaluation**\n\uc774\ubc88 \ucef4\ud398\ud2f0\uc158\uc758 \ud3c9\uac00\uc9c0\ud45c(Metric)\uc740 F1 score \uc785\ub2c8\ub2e4.\n\n#### **Timeline**\n'19.06.14 ~ '19.08.17\n\n#### **Data**\n- train.csv - Train \uc14b\uc758 \uc774\ubbf8\uc9c0 \ud30c\uc77c\uba85, \ubc14\uc6b4\ub529\ubc15\uc2a4 \uc88c\ud45c, \ucc28\uc885\uc815\ubcf4\n- test.csv - Test \uc14b\uc758 \uc774\ubbf8\uc9c0 \ud30c\uc77c\uba85, \ubc14\uc6b4\ub529\ubc15\uc2a4 \uc88c\ud45c, \ucc28\uc885\uc815\ubcf4\n- submission.csv - Test\uc14b\uacfc \ub300\uc751\ub418\ub294 \uc81c\ucd9c \ud30c\uc77c\n- class.csv - \ub370\uc774\ud130 \uc14b\uc758 class \uceec\ub7fc\uacfc \ub300\uc751\ub418\ub294 \ucc28\uc885\uc758 \ub808\uc774\ube14\n- train.zip - Train \uc774\ubbf8\uc9c0 \ud30c\uc77c\n- test.zip - Test \uc774\ubbf8\uc9c0 \ud30c\uc77c","68156ebc":"2012\ub144\uacfc 2007\ub144\uc2dd\uc774 \uac00\uc7a5 \ub9ce\uc740 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","d9181ba6":"## Image","5a3fcf42":"\uc5ec\ub7ec\uac00\uc9c0 \ud68c\uc0ac\uac00 \ubcf4\uc785\ub2c8\ub2e4.\n\nChevrolet\uac00 \uac00\uc7a5 \ud070 \uac83\uc73c\ub85c \ubcf4\uc544 \ub9ce\uc740 \ucc28\ub7c9\uc774 train data\uc5d0 \uc874\uc7ac\ud558\ub294 \ub4ef \ud569\ub2c8\ub2e4. \uadf8 \uc678\uc5d0\ub3c4 BMW, Benz, Audi \ub4f1\uc774 \ubcf4\uc785\ub2c8\ub2e4.","07078023":"# **<a id='3'>Data Exploration<\/a>**\n\n## Text","21caaf49":"<h1><center><font size=\"6\">\uc790\ub3d9\ucc28 \uc774\ubbf8\uc9c0 \ub370\uc774\ud130\uc14b\uc744 \uc774\uc6a9\ud55c \uc790\ub3d9\ucc28 \ucc28\uc885 \ubd84\ub958<\/font><\/center><\/h1>\n\n\n<h2><center><font size=\"4\">2019 3rd ML month with KaKR<\/font><\/center><\/h2>\n<h3><center><font size=\"2\">\uce90\uae00 \ucf54\ub9ac\uc544\uc640 \ud568\uaed8\ud558\ub294 3rd ML \ub300\ud68c<\/font><\/center><\/h3>\n\n<br>\n\n# **<a id='0'>Content<\/a>**\n\n- <a href='#1'>Introduction<\/a>  \n- <a href='#2'>Load Package and Data Check<\/a>\n- <a href='#3'>Data Exploration<\/a>","473a400a":"## Data Check - Text","d0255fcd":"to be continue...","80983383":"# **<a id='2'>Load Package and Data Check<\/a>**\n\n## Load Package"}}