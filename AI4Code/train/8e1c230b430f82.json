{"cell_type":{"7b400c60":"code","c9950799":"code","26311d62":"code","6c887551":"code","d9906727":"code","afb513fb":"code","315e4942":"code","730809a7":"code","d7ec7662":"code","d6c8ebe4":"code","349b0eaa":"code","f8f869bb":"code","e5acd28a":"code","a63d84fb":"code","42406df0":"code","da334e5d":"code","ff40eeb0":"code","9856700d":"code","b38e55c3":"code","fd2de21d":"code","7e87dbb8":"code","3c2ed74f":"code","2814e23b":"code","c2da791a":"code","af938c48":"code","f758f7af":"code","11dea6b4":"code","9fb56832":"code","2e3e8491":"code","9f7e7d63":"code","acf1c2ba":"code","370df27a":"markdown","562bb313":"markdown","44dd9c0c":"markdown","16e32c38":"markdown","14e75c83":"markdown","36fb6b0c":"markdown"},"source":{"7b400c60":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c9950799":"import matplotlib.pyplot as plt\nimport seaborn as sns","26311d62":"import warnings\nwarnings.filterwarnings('ignore')","6c887551":"df=pd.read_csv('\/kaggle\/input\/machine-predictive-maintenance-classification\/predictive_maintenance.csv')","d9906727":"df.head()","afb513fb":"df.info()","315e4942":"df['Type'].unique()","730809a7":"df['Failure Type'].unique()","d7ec7662":"df['Target'].unique()","d6c8ebe4":"df.groupby('Failure Type')['UDI'].count().plot.bar()","349b0eaa":"df.groupby(['Type','Failure Type'])['UDI'].count().plot.bar()","f8f869bb":"df.groupby('Failure Type')['Air temperature [K]'].mean().plot.bar()","e5acd28a":"df.groupby('Failure Type')['Process temperature [K]'].mean().plot.bar()","a63d84fb":"df.groupby('Failure Type')['Rotational speed [rpm]'].mean().plot.bar()","42406df0":"df.groupby('Failure Type')['Torque [Nm]'].mean().plot.bar()","da334e5d":"df.groupby('Failure Type')['Tool wear [min]'].mean().plot.bar()","ff40eeb0":"plt.figure(figsize = (15,8))\nsns.heatmap(df.corr(),annot=True, fmt=\"1.1f\")","9856700d":"pip install pycaret --ignore-installed llvmlite numba","b38e55c3":"from pycaret.classification import *","fd2de21d":"df1=df.drop(['Failure Type'],axis=1)","7e87dbb8":"exp_clf = setup(df1, target = 'Target',silent=True,session_id=1)","3c2ed74f":"dt = create_model('dt')","2814e23b":"plot_model(dt)","c2da791a":"plot_model(dt, plot = 'confusion_matrix') ","af938c48":"interpret_model(dt)","f758f7af":"df1=df.drop('Target', axis=1)","11dea6b4":"exp_clf2 = setup(df1, target = 'Failure Type',silent=True,session_id=1)","9fb56832":"dt = create_model('dt')","2e3e8491":"plot_model(dt)","9f7e7d63":"plot_model(dt, plot = 'confusion_matrix') ","acf1c2ba":"interpret_model(dt)","370df27a":"1) Data Preprocessing","562bb313":"2) Visualization","44dd9c0c":"Let's go into the details.","16e32c38":"# 1. Objective\n* I tried to find how I can classify 6 patterns which includes 'No Failure', 'Power Failure', 'Tool Wear Failure','Overstrain Failure', 'Random Failures', 'Heat Dissipation Failure'.","14e75c83":"# 2. Insight\n* By PyCaret, I found that Decision Tree Classifier may be the best. So I used it for prediction model.\n![image.png](attachment:16380d31-b7d4-480e-beec-b10c9f89a17c.png)!\n\n* First, I tried the Binary classification\u3000in which I can classify 'Failure' or 'No Failure' and its accuracy is 98.1%\n\n![__results___30_0.png](attachment:b32fd807-639e-45f7-99a5-be74b87cf65b.png)\n\n\n* Next, I tried the multiple classification in which I can classify 6 patterns which includes 'No Failure', 'Power Failure', 'Tool Wear Failure','Overstrain Failure', 'Random Failures','Heat Dissipation Failure'.\n\n![__results___36_0.png](attachment:3ce2cbc2-9fb0-448f-9a48-a5da3bd789a1.png)\n\n* In multiple classification model, I got 97.8% accuracy. In each classes, there are some difference about what the important factoers is.\n\n![image.png](attachment:b64d57f4-9666-440e-b667-8215017dbde0.png)","36fb6b0c":"3) Classification by PyCaret"}}