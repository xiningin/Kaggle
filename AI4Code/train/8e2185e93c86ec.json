{"cell_type":{"9d4d2e0f":"code","aef78d77":"code","058961b7":"code","829282c9":"code","fdf26c42":"code","f89f0f93":"code","4a28ae05":"code","5590d9d2":"code","290ad53f":"code","e5d64dac":"markdown"},"source":{"9d4d2e0f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aef78d77":"data=pd.read_csv('\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv')","058961b7":"data.info()","829282c9":"data['App'].unique()","fdf26c42":"data['Size'].unique()","f89f0f93":"data['Size'] = data.Size.replace(\"Varies with device\",np.nan)\ndata['Size'] = data.Size.str.replace(\"M\",\"000\") # All size values became the kilobyte type.\ndata['Size'] = data.Size.str.replace(\"k\",\"\")\ndata['Size']=data.Size.str.replace(\",\",\"\")\ndata['Size']=data.Size.str.replace(\"+\",\"\")\ndata['Size'] =data['Size'].astype(float)\ndata['Size'].dtypes","4a28ae05":"App_name=data['App'].unique()\nSize_name=[]\nfor i in App_name:\n    x=data[data['App']==i]\n    x=x.dropna()\n    if len(x)!=0:\n        size=sum(x.Size)\/len(x)\n        Size_name.append(size)\n    else:\n        size=sum(x.Size)\n        Size_name.append(size)\n\ndata_app_size=pd.DataFrame({'App':App_name,'Size':Size_name})","5590d9d2":"sorted_data=data_app_size.reindex(data_app_size.Size.sort_values(ascending=False).index.values)\nsorted_data_1=sorted_data.head(30)","290ad53f":"plt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data_1.App,y=sorted_data.Size,color='g')\nplt.xticks(rotation=90)\nplt.xlabel(\"App Name\")\nplt.ylabel(\"Size\")\nplt.title(\"App vs Size\")\nplt.show()","e5d64dac":"The app with largest size: Navi Radiography Pro"}}