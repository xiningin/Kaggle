{"cell_type":{"c21a6567":"code","3051bfde":"code","0d51c97d":"code","4296d0ab":"code","5566c0a0":"code","6d69da3a":"code","c0f57260":"code","21da8a3c":"code","e2e9a814":"code","1b00efcc":"code","63c1a37a":"code","d9a5bde2":"code","0ba6a916":"code","1645956e":"code","d84ddd2f":"code","52653c84":"code","dfc0d055":"code","094bcefd":"code","9083c221":"code","b8cf65cb":"code","8fb2985a":"code","cfc05ea4":"code","b3d8571b":"code","218d4b31":"code","c5da94c9":"code","4a181c73":"code","b93a90b8":"code","c2fddec7":"code","cc727d20":"code","d4096d3d":"code","930e0fba":"code","8c5dad2f":"code","e9ae8fc5":"code","3b6ba5b2":"code","ea2eedbd":"code","d5cbbadd":"code","eb0ff4b8":"code","28b185d9":"code","d14bc315":"code","19b4f337":"code","d6302a88":"markdown","4695063f":"markdown","d0e04ce0":"markdown","3215f35d":"markdown","d6fef034":"markdown","7d43618b":"markdown","1bf33d22":"markdown","089a8d32":"markdown","bbe793c2":"markdown","f7de070b":"markdown","a11ccb97":"markdown","2dcc07b0":"markdown","76b9bc2b":"markdown","b77fc8e7":"markdown","d1c4dff8":"markdown","4cf33c8d":"markdown","9346703d":"markdown","d1492f6a":"markdown","6c8a5d6e":"markdown","82a9bd05":"markdown","deec88e8":"markdown","1331cceb":"markdown","f42ed4c2":"markdown","b53ede20":"markdown","0fbb2994":"markdown","f5215bd8":"markdown","fa999157":"markdown"},"source":{"c21a6567":"import numpy as np\nimport pandas as pd\n\nimport plotly\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","3051bfde":"df = pd.read_csv(\"..\/input\/london-bike-sharing-dataset\/london_merged.csv\")","0d51c97d":"df.head()","4296d0ab":"df.duplicated().value_counts()","5566c0a0":"df.isnull().sum()","6d69da3a":"fig = px.bar(x= df['season'].value_counts().index, y=df['season'].value_counts().values, \n             title='Seasons', labels={'y':'Count', 'x':'Seasons'})\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","c0f57260":"df.season.value_counts()","21da8a3c":"weekend = df.groupby('is_weekend')['cnt'].mean().reset_index().rename(columns={'is_weekend': 'Weekend', 'cnt':'Number of Bike Shared'}, )\nweekend['Weekend']= weekend['Weekend'].replace({0: 'Weekday', 1:'Weekend'})\n\nfig = px.bar(weekend, x='Weekend', y= 'Number of Bike Shared', color='Weekend', )\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","e2e9a814":"fig = px.pie(df, values=df['weather_code'].value_counts().values, \n             names= ['Clear', 'Scattered Clouds', 'Broken Clouds', 'Cloudy' 'Rain', 'Rain With Thunderstorm', 'Snowfall', 'Freezing Fog'])\nfig.show()","1b00efcc":"df[\"timestamp\"] = pd.to_datetime(df[\"timestamp\"])","63c1a37a":"df = df.set_index(\"timestamp\")","d9a5bde2":"df.head()","0ba6a916":"# We can use strftime() function to get year, month, day, weekday and hour of the index.\n\ndf[\"year_month\"] = df.index.strftime('%Y-%m')\ndf[\"year\"] = df.index.year\ndf[\"month\"] = df.index.month\ndf[\"day_of_month\"] = df.index.day\ndf[\"day_of_week\"] = df.index.weekday\ndf[\"hour\"] = df.index.hour\ndf.head()","1645956e":"fig = px.imshow(df.corr(), title=\"Correlation Heat Map\")\nfig.show()","d84ddd2f":"fig = px.imshow(df.corr()[[\"cnt\"]], title=\"Correlation Heat Map\")\nfig.show()","52653c84":"fig = px.bar(y=df.corr()[\"cnt\"].index, x= df.corr()[\"cnt\"].values, title=\"Correlation (CNT)\",\n            labels={\"y\": \"Variables\", \"x\":\"Values\"})\nfig.update_layout(yaxis={'categoryorder':'total descending'})\nfig.show()","dfc0d055":"fig = go.Figure(data=go.Scatter(x=df.index, y=df[\"cnt\"]))\nfig.update_layout(title=\"Bike Shares Over Time\", xaxis_title=\"Date\", yaxis_title=\"Count of Bike Shares\")\nfig.show()","094bcefd":"df[df[\"cnt\"]>7000]","9083c221":"# In 2015-07-09 and 2015-08-06 count of a new bike shares increases. There must be something about those days.\n# This is a great example of getting information great insights by visualization.","b8cf65cb":"year_month = df.groupby(\"year_month\").sum().reset_index()","8fb2985a":"fig = go.Figure(data=go.Scatter(x=year_month[\"year_month\"], y=year_month[\"cnt\"]))\nfig.update_layout(title=\"Bike Shares by Month\", xaxis_title=\"Date\", yaxis_title=\"Count of Bike Shares\")\nfig.show()","cfc05ea4":"# As expected, in summer bike shares is increasing. Let's see this relation better by different plot.","b3d8571b":"px.line(df.groupby(\"month\").mean(), x=df.groupby(\"month\").mean().index, y=df.groupby(\"month\").mean()[\"cnt\"])","218d4b31":"px.bar(df.groupby(\"month\").mean(), x=df.groupby(\"month\").mean().index, y=df.groupby(\"month\").mean()[\"cnt\"])","c5da94c9":"# In those two plots, we can clearly see the bike share difference by months. Bike share leans to increase in summer.","4a181c73":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=df[df[\"is_holiday\"] == 0].groupby([\"hour\"]).mean()[[\"cnt\"]].index,\n                        y=df[df[\"is_holiday\"] == 0].groupby([\"hour\"]).mean()[[\"cnt\"]][\"cnt\"],\n                        name=\"Not Holiday\"))\n\nfig.add_trace(go.Scatter(x=df[df[\"is_holiday\"] == 1].groupby([\"hour\"]).mean()[[\"cnt\"]].index,\n                        y=df[df[\"is_holiday\"] == 1].groupby([\"hour\"]).mean()[[\"cnt\"]][\"cnt\"],\n                        name=\"Holiday\"))\n\nfig.update_layout(title=\"Bike Shares in Holidays By Hour\",\n                 xaxis_title=\"Hour\", yaxis_title=\"Count of Bike Shares\")\nfig.show()","b93a90b8":"# We can clearly see that when it is not holiday, bike shares tends to increase 8AM and 7PM.\n# This means people use bikes when going to work. ","c2fddec7":"# Also difference by seasons plot confirms our conclusion. People tends to use bikes more when it is spring.","cc727d20":"day_of_week = df.groupby(\"day_of_week\").sum()[[\"cnt\"]]\nday_of_week[\"days\"] = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\",\"Friday\", \"Saturday\", \"Sunday\"]\nday_of_week = day_of_week.set_index(\"days\")\n\n\nfig = px.bar(x=day_of_week.index, y=day_of_week[\"cnt\"],\n            color=day_of_week.index, title=\"Bike Shares by Day\",\n            labels={\"x\": \"Days\", \"y\":\"Count of Bike Shares\"})\nfig.show()","d4096d3d":"# People use bike in weekdays more than weekends.","930e0fba":"fig = go.Figure()\n\nfor i in range(0,4):\n    fig.add_trace(go.Scatter(x=df[df[\"season\"] == i].groupby([\"day_of_week\"]).mean()[[\"cnt\"]].index,\n                            y=df[df[\"season\"] == i].groupby([\"day_of_week\"]).mean()[[\"cnt\"]][\"cnt\"]))\n\n\nfig.update_layout(title=\"Bike Shares in Seasons By Hour\",\n                 xaxis_title=\"Day of Week\", yaxis_title=\"Count of Bike Shares\")\nfig.show()","8c5dad2f":"day_of_month = df.groupby(\"day_of_month\").mean()[[\"cnt\"]].astype(\"int\")\n\nfig = px.line(x=day_of_month.index, y=day_of_month.cnt, title=\"Bike Shares by Day of Month\",\n             labels={\"x\":\"Day of Month\", \"y\": \"Count of Bike Shares\"})\nfig.show()","e9ae8fc5":"df.groupby(\"year\").mean()[[\"cnt\"]]\n\nfig = px.bar(x=df.groupby(\"year\").mean()[[\"cnt\"]].index, y=df.groupby(\"year\").mean()[[\"cnt\"]][\"cnt\"],\n            title=\"Bike Share by Year\",\n            labels={\"y\":\"Count of Bike Shares\", \"x\":\"Year\"})\nfig.show()","3b6ba5b2":"# It does seem like in 2017 bike share dropped heavily. But that is not true. Because our data does not contain\n# all information about 2017. This plot may dislead us.","ea2eedbd":"fig = px.histogram(df,x=\"season\",y=\"cnt\", color=\"season\")\nfig.show()","d5cbbadd":"# We can clearly see from this plot that people use bike most in summer.","eb0ff4b8":"holiday = df.groupby('is_holiday')['cnt'].mean().reset_index().rename(columns={'is_holiday': 'Holiday', 'cnt':'Number of Bike Shared'}, )\nholiday['Holiday']= holiday['Holiday'].replace({0: 'Normal Day', 1:'Holiday'})\n\nfig = px.bar(holiday, x='Holiday', y= 'Number of Bike Shared', color='Holiday', )\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","28b185d9":"# People use bikes in weekdays more than in weekends. Before we saw that in 7AM and also in 5PM bike usage increase.\n# This addresses that people use bike when going to work and also when coming back to their home.","d14bc315":"fig = px.scatter(x=df[\"t1\"], y=df[\"hum\"], color=df[\"season\"])\nfig.show()","19b4f337":"fig = px.scatter(x=df[\"t1\"], y=df[\"wind_speed\"], color=df[\"season\"])\nfig.show()","d6302a88":"### What about correlation between bike shares and hours? It would be great to see the difference when it is a holiday too right! Let's plot  bike shares by hours.","4695063f":"### It is time to plot bike shares by year and by seasons.","d0e04ce0":"### It is time to plot bike shares by months and year_of_month to understand the correlation between bike shares and months.","3215f35d":"### Let's transform `timestamp` column to `datetime` in type, and set it as index.","d6fef034":"## See if there are any dublicated or NaN values","7d43618b":"### Now it is time to make feature engineering. Let's extract new columns (day of the week, day of the month, hour, month, season, year etc.) by using new index.","1bf33d22":"### Plot bike shares by day of month","089a8d32":"### Everything seems perfect. Now, let's visualize the correlation with a heatmap.","bbe793c2":"- There are days with unusually high count of a new bike shares. Let's find out which days are they.","f7de070b":"### Now it is time to plot bike shares over time with lineplot.","a11ccb97":"- Values almost equal as expected.","2dcc07b0":"### Now let's check *`is_holiday`* column.","76b9bc2b":"### Now, look at *`weather_code`* column.","b77fc8e7":"We have come to an end of another great analysis. It was really enjoyable for me. It was a pleasure to work with this dataset for me. I would like to thank dataset contibutor for this data. I hope you enjoyed too. If you liked my EDA on this dataset, feel free to check my other notebooks as well. Looking forward for your feedback. Thanks a lot.\n\nHave a great day.","d1c4dff8":"# Now, let's dive into our data.","4cf33c8d":"### For more clear understanding, let's visualize the correlation of the target variable and the other features with barplot","9346703d":"### Let's plot bike shares by day of week to understand better.","d1492f6a":"### Let's see the difference by seasons.","6c8a5d6e":"### Seems like season column distributed normally. Let's check value counts of this column for more clear info.","82a9bd05":"# Let's start with importing essential libraries.","deec88e8":"### Now, let's visualize the distribution of bike shares by weekday\/weekend with barplot","1331cceb":"- As expected highly 'not a holiday' distribution. Most likely *`is_weekend`* column is also in the same situation. Let's check.","f42ed4c2":"- Not a single missing value! PERFECT!","b53ede20":"### Visualize the continuous variables with scatterplot","0fbb2994":"#### We understand that the count of a new bike shares(*`cnt`*) column has a positive correlation with *`t1`*, *`t2`* and *`hour`* columns. Also *`hum`* column, which gives information about humidity in percentage, has a fairly high negative correlation with *`cnt`*.","f5215bd8":"## Now, Let's plot the distribution of various discrete features such as season, holiday, weekend and weathercode.","fa999157":"### For better understanding, let's see the correlation between our target variable which is *`cnt`* and the others."}}