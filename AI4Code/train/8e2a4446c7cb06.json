{"cell_type":{"98594350":"code","8813a47b":"code","ed81d0d5":"code","5d566cbe":"code","7a697c9b":"code","77de86fc":"code","1f097ba0":"code","f9ce8b46":"code","d5fe35f5":"code","a91a9470":"code","ee5c4e14":"code","621c43b1":"code","286d37b3":"code","2938143d":"code","c17de5aa":"code","e9093263":"code","9db93051":"code","1d93fb28":"code","4acb6985":"code","2b2138e1":"code","dd445c27":"code","562b9d8e":"code","52311ffe":"code","1e0d0fa5":"code","8fb54264":"code","1be85e16":"code","e3ae7a10":"code","53cb5e7d":"code","6a18a2c2":"code","c68e3ac3":"code","807019be":"code","fcb56da3":"code","a0da096a":"code","3bccf412":"code","ec03cdb8":"code","6946bec3":"markdown","63a1f174":"markdown","9e0a0c86":"markdown","4d312c55":"markdown","15fa2a97":"markdown","c6a5dae5":"markdown","7475611b":"markdown","fe54e07c":"markdown","4fbc6605":"markdown","d1b0b96a":"markdown","c0a686c6":"markdown","b0710ea5":"markdown","be6498e3":"markdown","7613194c":"markdown","37225dff":"markdown","4a37f320":"markdown","b2b8e17e":"markdown","b1dbc855":"markdown","ddf40d52":"markdown","90623887":"markdown","e5780c5c":"markdown","ef0a8524":"markdown","44e5715e":"markdown","39ec7876":"markdown","781a3356":"markdown","ad365fb2":"markdown"},"source":{"98594350":"import os\nimport sys","8813a47b":"# if you don't want the data to be downladed from kaggle assign the correct data path here\ndata_dir = None","ed81d0d5":"if data_dir is not None:\n    pass\nelif os.path.isdir('\/kaggle'):\n    data_dir = '..\/input'\n    assert(os.path.isdir(data_dir))\nelse:\n    script_dir = os.getcwd()\n    data_dir = os.path.join(script_dir, 'sf-bay-area-bike-share')\n\nif os.path.isdir(data_dir):\n    print(f\"Using existing data directory {data_dir}\")\nelse:\n    print(f\"Data directory {data_dir} not found. Need to download from kaggle\")\n    if 'google.colab' in sys.modules and not os.path.isfile(os.path.expanduser('~\/.kaggle\/kaggle.json')):\n        import google.colab\n        print(\"Upload your kaggle.json\")\n        google.colab.files.upload()\n        !mkdir -p ~\/.kaggle\n        !mv kaggle.json ~\/.kaggle\/\n        !chmod 600 ~\/.kaggle\/kaggle.json\n    try:\n        import kaggle\n    except:\n        !pip install kaggle\n    !kaggle datasets download -d benhamner\/sf-bay-area-bike-share\n    !mkdir -p \"$data_dir\"\n    !unzip -d \"$data_dir\" sf-bay-area-bike-share.zip\n\nif not os.path.isdir(data_dir):\n    raise ValueError(f\"Data directory {data_dir} still not found. Ensure correct kaggle setup.\")","5d566cbe":"station_csv = os.path.join(data_dir, 'station.csv')\nstatus_csv = os.path.join(data_dir, 'status.csv')\ntrip_csv = os.path.join(data_dir, 'trip.csv')\nweather_csv = os.path.join(data_dir, 'weather.csv')","7a697c9b":"!pip install -q numpy pandas matplotlib folium","77de86fc":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport folium\nimport folium.plugins","1f097ba0":"station = pd.read_csv(station_csv, index_col='id', parse_dates=['installation_date'])\nstation.info()","f9ce8b46":"trip = pd.read_csv(trip_csv,\n                   index_col='id',\n                   usecols=['id', 'duration', 'start_date', 'start_station_id', 'end_date', 'end_station_id', 'bike_id', 'subscription_type'],\n                   parse_dates=['start_date', 'end_date'],\n                   infer_datetime_format=True,\n                   dtype={'duration': np.uint32, 'start_station_id': np.uint8, 'end_station_id': np.uint8, 'bike_id': np.uint16},\n                   true_values=['Subscriber'],\n                   false_values=['Customer'],\n                   )\ntrip.info()","d5fe35f5":"# Uh oh\n# status_size = 1000000\n# status = pd.read_csv(status_csv,\n#                      index_col='time',\n#                      parse_dates=['time'],\n#                      infer_datetime_format=True,\n#                      dtype={'station_id': np.uint8, 'bikes_available': np.uint8, 'docks_available': np.uint8},\n#                      low_memory=True,\n#                      memory_map=True,\n#                      nrows=status_size,\n#                      )\n# status.info()\n# print(status.describe())","a91a9470":"station.head()","ee5c4e14":"station.dock_count.describe()","621c43b1":"station.dock_count.hist(bins=18)","286d37b3":"(station.installation_date.min(), \n station.installation_date.max(), \n station.installation_date.max() - station.installation_date.min())","2938143d":"station.installation_date.hist(bins=24, xrot=90);","c17de5aa":"station.groupby('city').size().plot.bar(title=\"Number of stations per city\");","e9093263":"station.groupby('city').agg({'dock_count': 'sum'}).plot.bar(title=\"Numbe of docks per city\");","9db93051":"station_hm = station.loc[:, ['lat', 'long']].copy()\nstation_hm.loc[:, 'dock_count_norm'] = (station.dock_count - station.dock_count.min()) \/ (station.dock_count.max() - station.dock_count.min())\n\nstation_map = folium.Map(location=[station.lat.mean(), station.long.mean()], zoom_start=10)\nfolium.plugins.HeatMap(station_hm.values.tolist()).add_to(station_map)\n#station_map.save(os.path.join(data_dir, 'station_map.html'))\nstation_map","1d93fb28":"trip.head()","4acb6985":"trip.duration.describe()","2b2138e1":"print(\"Trip duration quantiles\")\ntrip.duration.quantile([0.5, 0.9, 0.99, 0.999, 0.9999, 1]).apply(\n    lambda x: pd.Series({\"minutes\": x\/60, \"hours\": x\/3600, \"days\": x\/86400}))","dd445c27":"fig, ax = plt.subplots(ncols=2, figsize=(15, 5))\nfor (quantile, axis) in zip([0.95, 0.99], ax):\n    f=(trip[trip.duration < trip.duration.quantile(quantile)].duration \/ 60).hist(log=True, bins=100, ax=axis)\n    f.set(title=f\"Trips by duration ({quantile} quantile)\", xlabel=\"duration (minutes)\", ylabel=\"number of trips\")","562b9d8e":"long_rent_threshold_days = 0.5\nlong_rent=trip[trip.duration > 86400*long_rent_threshold_days]\n(long_rent.duration\/3600).describe()","52311ffe":"hist, bins = np.histogram(long_rent.duration\/86400, np.geomspace(long_rent_threshold_days, 200, num=51))\nfig,ax = plt.subplots()\nax.bar(range(len(hist)),hist,width=1) \n#ax.set_yscale(\"log\")\nax.set_xticks(range(0, len(hist)+1, 5));\nax.set_xticklabels(np.round(bins[::5]).astype(np.int), rotation=90);\nax.set_title(\"Long bike rents (at least 12 hours)\")\nax.set_xlabel(\"rent duration (days)\")\nax.set_ylabel(\"number of rents\");","1e0d0fa5":"start_station=station.rename(columns=lambda s: f'ss_{s}')\nend_station=station.rename(columns=lambda s: f'es_{s}')\ntrip_station = trip.join(start_station, on='start_station_id').join(end_station, on='end_station_id')\n\nintercity_trips=trip_station[trip_station.ss_city != trip_station.es_city]\nprint(\"Number of intercity rents:\", len(intercity_trips.index))\nintercity_trips = intercity_trips[intercity_trips.duration < 12*3600]\nprint(\"Number of intercity trips (rents shorter than 12 hours):\", len(intercity_trips.index))","8fb54264":"(intercity_trips.duration \/ 3600).hist(log=True, bins=100).set(\n    title=f\"Intercity trips by duration\", xlabel=\"duration (hours)\", ylabel=\"number of trips\");","1be85e16":"(intercity_trips.duration\/60).describe()","e3ae7a10":"intercity_trips.groupby(['ss_city', 'es_city']).size().unstack().fillna(0)","53cb5e7d":"intercity_hm=intercity_trips.groupby(['start_station_id', 'ss_lat', 'ss_long']).size().reset_index().rename(columns={0: 'count'})\nintercity_hm = intercity_hm[intercity_hm['count'] > 5]\nintercity_hm.loc[:, 'count_norm'] = intercity_hm['count'] \/ intercity_hm['count'].max()\n\nstation_map2 = folium.Map(location=[intercity_hm.ss_lat.mean(), intercity_hm.ss_long.mean()], zoom_start=12)\nfolium.plugins.HeatMap(intercity_hm[['ss_lat', 'ss_long', 'count_norm']].values.tolist()).add_to(station_map2)\nfor _, row in intercity_hm.iterrows():\n    number_icon = folium.plugins.BeautifyIcon(\n        text_color='#000', border_color='transparent',\n        background_color='transparent', number=row['count'],\n        inner_icon_style='font-size:12px;padding-top:-5px;')\n    folium.Marker(location=[row['ss_lat'], row['ss_long']],\n                  popup=folium.Popup('station #{}, trips: {}'.format(int(row['start_station_id']), row['count'])),\n                  icon=number_icon).add_to(station_map2)\nstation_map2","6a18a2c2":"trip_station.groupby('ss_city').size().plot.bar(logy=True).set(title=\"Numbe of trips per city\", xlabel='');","c68e3ac3":"(trip_station.groupby('ss_city').size() \/ \n station.groupby('city').agg({'dock_count': 'sum'}).dock_count).plot.bar().set(\n    title=\"Efficiency: number of trips per dock installed\", xlabel=''#, ylabel='as'\n);","807019be":"group_trip=trip.groupby(['start_date', 'start_station_id', 'end_date', 'end_station_id']).size()\ngroup_hist=np.histogram(group_trip.values, bins=np.arange(1,group_trip.max()+2))","fcb56da3":"fig, ax = plt.subplots()\nplt.bar(x=group_hist[1][:-1], height=group_hist[0]) #, bins=group_hist[1])\nax.set_yscale('log')\nax.set_title('trips by group size')\nax.set_xlabel('group size')\nax.set_ylabel('number of trips')\nfor (y, x) in list(zip(*group_hist)):\n    ax.text(x, y+1, str(y), horizontalalignment='center', verticalalignment='bottom', fontsize=12)","a0da096a":"df1=group_trip[group_trip<=4].reset_index().rename(columns={0: \"group_size\"})\ndf2=df1.groupby(['group_size', 'start_station_id']).agg({'group_size': 'count'}).rename(columns={'group_size': 'group_count'})\ndf_count=df1.groupby('group_size').agg({'group_size': 'count'}).rename(columns={'group_size': 'total_group_count'})\ndf3=df2.reset_index().join(df_count, on='group_size')\ndf3['station_group_ratio'] = df3['group_count'] \/ df3['total_group_count']\ndf4=df3.drop(columns=['group_count', 'total_group_count']).set_index(['start_station_id', 'group_size']).unstack().fillna(0)\ndf4.columns=df4.columns.droplevel()","3bccf412":"df4.loc[:, 1].plot.bar(figsize=(20, 10)).set(\n    title='Station popularity among single riders', xlabel='station id', ylabel='rider ratio');","ec03cdb8":"df4.loc[:, 2:4].plot.bar(figsize=(20, 10), stacked=True).set(\n    title='Station popularity among group riders', xlabel='station id', ylabel='rider ratio');","6946bec3":"Indeed, most intercity trips are between Palo Alto and Mountain View with trips between Palo Alto and Redwood City is a distant second. We can visualize the stations on a map and show number of trips originating at the station.","63a1f174":"## Station installation time","9e0a0c86":"No surprises here, but how efficient is bike stations allocation? Let's normalize number of trips by number of bike docks installed in the city.","4d312c55":"How stations are used by inidividual riders?","15fa2a97":"Almost all stations are installed on August-September of 2013.","c6a5dae5":"## Station installation place","7475611b":"Nope, still the same picture. Speaking of which, let's visualize stations on the map (using station size for density).","fe54e07c":"Most people ride alone. There are, however, 16K trips of pairs and even a trip of seven people!","4fbc6605":"## Trips by city and efficiency","d1b0b96a":"# Init","c0a686c6":"Most of the stations are in San Francisco. Maybe these are small stations, so the total capacity per city is not as high?","b0710ea5":"San Francisco stations used more, as expected. How is station popularity distributed among groups of 2-4 people?","be6498e3":"## Longer rents\nSome bike rents are too long to be a single trip. Let's take a look on rents longer than 12 hours.","7613194c":"---","37225dff":"## Station size\nin terms of number of docks","4a37f320":"## Trip duration","b2b8e17e":"Not only San Francisco has most bikes deployed, but each bike makes much more trips on average than in other cities.","b1dbc855":"Trip duration has a very long tail. Let's see its quantiles and plot a distribution.","ddf40d52":"## Inter-city trips\nAre there any people who ride bike between cities?","90623887":"While San Francisco domitnates here as well, station popularity amoung groups differ from that of single riders.","e5780c5c":"Among the longer rented bikes 75% is returned within 24 hours and almost all within a week.","ef0a8524":"## Pedalling together\nAre there people who travel together by bike? Let's find how many people start and finish bike trip together. (We do not count here people who start\/finish not on the same minute, though)","44e5715e":"# Trips","39ec7876":"Median intercity trip is below half an hour. Probably most of them are between neighboring cities.","781a3356":"# Load data","ad365fb2":"# Stations"}}