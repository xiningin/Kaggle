{"cell_type":{"018656d0":"code","51189fb4":"code","72c95101":"code","7d23e3ec":"code","70731ee0":"code","c961b48e":"code","364dec8e":"code","79b5d7f2":"code","1681f396":"code","cf71cfb2":"code","f4a5d91c":"code","c4f54dcc":"code","0271ddba":"code","e3bec47b":"code","a040377e":"code","c91a9380":"code","8315da33":"code","8c4032d0":"code","1120ab16":"code","08d813fa":"code","2b4b1fe3":"code","c2b1a996":"code","7abf641c":"code","c01c3b83":"code","3108bda7":"code","0710b840":"code","038cd22d":"code","7ad59578":"code","47880bb8":"code","84944d5d":"code","01a6f084":"code","ccab490e":"markdown","b2376825":"markdown","f747a15c":"markdown","0d66fdf3":"markdown","18414eb2":"markdown","fff4c70e":"markdown","b392245e":"markdown","79ab2199":"markdown","e59de74a":"markdown","7ac8750f":"markdown"},"source":{"018656d0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport geopandas as gpd\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","51189fb4":"data = pd.read_csv(\"\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\")\npd.set_option(\"display.max_columns\",400)\nprint(data.shape)\ndata.head()","72c95101":"questions = data.iloc[0,:]","7d23e3ec":"columns = data.columns","70731ee0":"new_columns = []\nfor column in columns:\n    if \"Part\" in column:\n        splitted = questions[column].split(\"-\")\n        choosen = splitted[2]\n        new_columns.append(choosen.lstrip().rstrip()) \n    else:\n        new_columns.append(questions[column])\n        \nprint(new_columns)","c961b48e":"cnt = 0\nfor column in new_columns:\n    if \"Other\" in column:\n        print(column)\n        cnt += 1\n        \nprint(cnt)","364dec8e":"# List for substiuting qustions whose choice was Other\nother_sub = [\"Programming_Language\",\"IDE\",\"Notebook\",\"Hardware\",\"Vis_Lib\",\"ML_Framework\",\"ML_Alg\",\"Computer_Vision\",\"NLP\",\"Activity\",\"CC_Platform\",\"CC_Product\",\n            \"DS_Product\",\"ML_Product\",\"BigData_Products\",\"BI_Products\",\"AutoML_Tools_1\",\"AutoML_Tools_2\",\"ML_Manage\",\"Share\",\"Course_Platform\",\"Media_Src\",\"CC_Platform_Familiar\",\n            \"CC_Prod_Familiar\",\"DS_Prod_Familiar\",\"ML_Manage_Familiar\",\"BigData_Familiar\",\"BI_Tools_Familiar\",\"AutoML_Category_Familiar\",\"AutoML_Tool_Familiar\",\n            \"Specific_Tool_Familiar\"]","79b5d7f2":"print(len(other_sub))","1681f396":"# If the column has \"Other\", the item from the list corresponding to i is selected and \"_Other\" is added. It is then appended to change_column list\ni = 0\nchange_column = []\nfor column in new_columns:\n    if \"Other\" in column:\n        name = other_sub[i] + \"_Other\"\n        change_column.append(name)\n        i += 1\n    else:\n        change_column.append(column)\n        \nprint(change_column)","cf71cfb2":"# Creating a Copy of the dataset and changing the column names\nnew_data = data.copy()\nnew_data.columns = change_column","f4a5d91c":"new_data.head()","c4f54dcc":"# Since None is also a choice, There are multiple columns named None\n# I now replace None the same way I replaced Other\nnew_data[\"None\"]","0271ddba":"for it in new_data[\"No \/ None\"].iloc[0,:]:\n    print(it)","e3bec47b":"# This list is used for replacing None\nnone_sub = [\"Programming_Language\",\"IDE\",\"Notebook\",\"Hardware\",\"Vis_Lib\",\"ML_Framework\",\"ML_Alg\",\"Computer_Vision\",\"NLP\",\"CC_Platform\",\"BigData_Products\",\"BI_Products\",\"Course_Platform\",\"Media_Src\",\"CC_Platform_Familiar\",\n            \"CC_Prod_Familiar\",\"ML_Manage_Familiar\",\"BigData_Familiar\",\"BI_Tools_Familiar\",\"AutoML_Category_Familiar\",\"AutoML_Tool_Familiar\",\n            \"Specific_Tool_Familiar\"]\n\nno_none_sub = [\"CC_Product\",\"DS_Product\",\"ML_Manage\",\"AutoML_Tools_1\",\"AutoML_Tools_2\",\"ML_Manage_Familiar\",\"Specific_Tool_Familiar\"]","a040377e":"new_data_columns = new_data.columns","c91a9380":"i = 0\nj = 0\nnew_data_column_change = []\nfor column in new_data_columns:\n    if column == \"None\":\n        name = none_sub[i] + \"_None\"\n        new_data_column_change.append(name)\n        i += 1\n    elif column == \"No \/ None\":\n        name = no_none_sub[j] + \"_None\"\n        new_data_column_change.append(name)\n        j += 1\n    else:\n        new_data_column_change.append(column)\nprint(i)\nprint(j)","8315da33":"new_data.columns = new_data_column_change","8c4032d0":"len(new_data_column_change)","1120ab16":"new_data.head()","08d813fa":"questions = new_data.drop(0,axis = 0,inplace = True)","2b4b1fe3":"new_data.head(2)","c2b1a996":"new_data.rename(columns = {\"Duration (in seconds)\":\"Duration\",\n                          \"What is your age (# years)?\":\"Age\",\n                          \"What is your gender? - Selected Choice\":\"Gender\",\n                          \"In which country do you currently reside?\":\"Country\",\n                          \"What is the highest level of formal education that you have attained or plan to attain within the next 2 years?\":\"Education_Level\",\n                          \"Select the title most similar to your current role (or most recent title if retired): - Selected Choice\":\"Role\",\n                          \"For how many years have you been writing code and\/or programming?\":\"Programming_Experience\",\n                          \"What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice\":\"Language_Recommended\",\n                          \"What type of computing platform do you use most often for your data science projects? - Selected Choice\":\"Computing_Platform\",\n                          \"Approximately how many times have you used a TPU (tensor processing unit)?\":\"TPU_Usage\",\n                          \"For how many years have you used machine learning methods?\":\"ML_Experience\",\n                          \"General purpose image\/video tools (PIL, cv2, skimage, etc)\":\"General_Img_Tools\",\n                          \"Image segmentation methods(U\":\"Image_Segmentation\",\n                          \"Object detection methods (YOLOv3, RetinaNet, etc)\":\"Object_Detection\",\n                          \"Image classification and other general purpose networks (VGG, Inception, ResNet, ResNeXt, NASNet, EfficientNet, etc)\":\"Img_Classification\"},\n               inplace = True)","7abf641c":"new_data.head(2)","c01c3b83":"fig = px.pie(values = new_data[\"Gender\"].value_counts(),names = new_data[\"Gender\"].unique(),title = \"Gender Distribution\")\nfig.show()","3108bda7":"fig = px.pie(values = new_data[\"Age\"].value_counts(),names = new_data[\"Age\"].unique(),title = \"Age Distribution\")\nfig.show()","0710b840":"personal_info = new_data.iloc[:,:7]\nprogramming_languages = new_data.iloc[:,7:20].copy()\nprogramming_languages.head(2)","038cd22d":"programming_languages[\"Programming_Language_None\"] = programming_languages[\"Programming_Language_None\"].map({\"None\":\"Yes\",np.nan:\"No\"})\nprogramming_languages[\"Programming_Language_Other\"] = programming_languages[\"Programming_Language_Other\"].map({\"Other\":\"Yes\",np.nan:\"No\"})","7ad59578":"languages = list(programming_languages.columns)\nlanguages.pop()\nlanguages.pop()\nfor language in languages:\n    programming_languages[language] = programming_languages[language].map({language:\"Yes\",np.nan:\"No\"})\nprogramming_languages.head(2)","47880bb8":"responses = new_data.shape[0]\nlanguages_count = []\nlanguages = list(programming_languages.columns)\nfor language in languages:\n    languages_count.append(sum(programming_languages[language] == \"Yes\")) # Adding the Yes count of each language to a list\nlanguages_count","84944d5d":"fig = px.pie(values = languages_count,names = languages,title = \"Programming Languages Used\")\nfig.show()","01a6f084":"age_values = personal_info[\"Age\"].unique()\nfor a_age in age_values:\n    temp = programming_languages[personal_info[\"Age\"] == a_age]\n    languages_count = []\n    for language in languages:\n        languages_count.append(sum(temp[language] == \"Yes\")) # Adding the Yes count of each language to a list\n    fig = px.pie(values = languages_count,names = languages,title = \"Programming Languages Used by people belonging to age category \" + a_age)\n    fig.show()","ccab490e":"# Changing Column Names\n\nThe column name does not give a proper info. The questions to which the column answers is given as the first row in the dataset. Using this row we can change the column names to be more understandable and easy to use.","b2376825":"***Further Steps to be done:***\n* More EDA to be Done\n* To find information from the visualisations and Data","f747a15c":"### Changing Column names which have are part of a question\n\nMany questions which have multiple choice are split into parts based on the choices. So if the column contains the String \"Part\" it means that it is a choice to a question. So if the string \"Part\" is present in the column name, I am splitting the corresponding question with \"-\" as seperator. The third string in the splitted list has the choice that corresponds to that column. So that string is taken, unwanted spaces in the front and back are removed and added to the new_columns list for further changes.\n\n- For example: The question is of the form : \"What programming languages do you use on a regular basis? - (Select all that apply) - Python\"  \nSplitting it on \"-\" gives \" Python\". Unwanted white spaces is striped using lstrip() and rstrip().","0d66fdf3":"*Now Lets see which language is famous among each age group*","18414eb2":"***More than 33% of the respondents use Python.***   ","fff4c70e":"Regardless of the age group, Python is the famous language among them.  \nIn the age group of 18-21 and 22-24 R is not as widely used as Python.","b392245e":"***About 80 percent of the respondents are Male ML & DS Enthusiasts***.","79ab2199":"### **Visualizing**","e59de74a":"### If you have liked the work done so for, Please Upvote to show your appreciation\n### Feel free to leave comments on any improvements to be done or if I had done any thing wrong.","7ac8750f":"***Changing Columns whose choice is others to format QuestionKeyword_Other.***  \n***That is if the question is \"What programming languages do you use on a regular basis? - (Select all that apply) - Other\", I change it to Programming_Language_Other.***"}}