{"cell_type":{"4e4e88e9":"code","3b297073":"code","316baa21":"code","e6a7feae":"code","fa308f43":"code","767bc316":"code","57755a9f":"code","18f53154":"code","bb6a3f0b":"code","141ab1d1":"code","5226e118":"code","76a6f89b":"markdown","d96b8707":"markdown","1e3f31d9":"markdown","f7613368":"markdown","f6bb6e3c":"markdown","e5b61813":"markdown","ac2a4df7":"markdown"},"source":{"4e4e88e9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3b297073":"import pandas as pd\nimport datetime\nfrom datetime import datetime as dt\nimport numpy as np","316baa21":"d1=datetime.date.today()\nd1","e6a7feae":"print('current year: ',d1.strftime(\"%Y\"))\nprint('month of year: ',d1.strftime(\"%B\"))\nprint('weak no.: ',d1.strftime(\"%W\"))\nprint('weakday: ',d1.strftime(\"%w\"))\nprint('day of year: ',d1.strftime(\"%j\"))\nprint(' Day of the month: ',d1.strftime(\"%d\"))\nprint('Day of week: ',d1.strftime(\"%A\"))","fa308f43":"s = pd.Series(input(\"Input datetime : \"))\nprint(\"String Date:\")\nprint(s)\nr = pd.to_datetime(pd.Series(s))\ndf = pd.DataFrame(r)\nprint(\"Original DataFrame (string to datetime):\")\nprint(df)","767bc316":"from datetime import datetime, timedelta\na_date = pd.datetime.now().date()\ndays = timedelta(5)\n\nnew_date = a_date - days\n#Subtract 5 days from a_date\n\n\nprint(a_date,new_date)","57755a9f":"import datetime","18f53154":"print(\n    datetime.datetime.fromtimestamp(\n        int(input(\"Sample Unix timestamp string\"))\n    ).strftime('%Y-%m-%d %H:%M:%S')\n)","bb6a3f0b":"DoB = pd.Series([\"07Sep59\",\"01Jan55\",\"15Dec47\",\"11Jul42\"])\nDoB = DoB.str[:-2]+'19'+DoB.str[-2:]\npd.to_datetime(DoB,format='%d%b%Y')","141ab1d1":"d1=pd.to_datetime(input('date in formet like YYYY-MM-DD ')).strftime('%Y-%m-%b')\nd1=datetime.strptime(d1, '%Y-%m-%b').date()\nd2=pd.to_datetime(input('date in formet like YYYY-MM-DD ')).strftime('%Y-%m-%b')\nd2=datetime.strptime(d2, '%Y-%m-%b').date()\n\nday=d2-d1\nprint(day.days)","5226e118":"A=pd.to_datetime(input('date in formet like 15Dec1989 ')).strftime('%A, %d %b %Y')\nA","76a6f89b":"***** 1. Write a Python script to display the\n* * a. Current date and time\n* * b. Current year\n* * c. Month of year\n* * d. Week number of the year\n* * e. Weekday of the week\n* * f. Day of year\n* * g. Day of the month\n* * h. Day of week****","d96b8707":"5. Convert the below Series to pandas datetime :\n\nDoB = pd.Series([\"07Sep59\",\"01Jan55\",\"15Dec47\",\"11Jul42\"])\n\nMake sure that the year is 19XX not 20XX","1e3f31d9":"6. Write a Python program to get days between two dates","f7613368":"3. Write a Python program to subtract five days from current date.\n\nCurrent Date : 2015-06-22\n\n5 days before Current Date : 2015-06-17","f6bb6e3c":"7. Convert the below date to datetime and then change its display format using the .dt module\n\nDate = \"15Dec1989\"\n\nResult : \"Friday, 15 Dec 98\"","e5b61813":"4. Write a Python program to convert unix timestamp string to readable date.\n\nSample Unix timestamp string : 1284105682\n\nExpected Output : 2010-09-10 13:31:22","ac2a4df7":"2. Write a Python program to convert a string to datetime.\nSample String : Jan 1 2014 2:43PM\n\nExpected Output : 2014-07-01 14:43:00"}}