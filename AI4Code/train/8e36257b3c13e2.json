{"cell_type":{"d935f977":"code","29bf4652":"code","ffb39afa":"markdown"},"source":{"d935f977":"from fastai.tabular.all import *\nimport ubiquant","29bf4652":"model = torch.load('..\/input\/ubiquant-models-public\/fullmodel60.pth').cuda().eval()\nftrs = [f'f_{i}' for i in range(300)]\nenv = ubiquant.make_env()  \niter_test = env.iter_test()\nfor (test_df, sub_df) in iter_test:\n    data = torch.tensor(test_df[ftrs].to_numpy(), dtype=torch.float).cuda()\n    with torch.no_grad():\n        preds = model([], data)\n    sub_df['target'] = preds.view(-1).cpu().numpy()\n    env.predict(sub_df) ","ffb39afa":"This is continuation of the training notebook here: https:\/\/www.kaggle.com\/slawekbiel\/fast-fastai-training\/\n\nThe only difference is that I train on the full data rather than the first 80%, see [discussion here](https:\/\/www.kaggle.com\/c\/ubiquant-market-prediction\/discussion\/302286) for why that matters for LB score."}}