{"cell_type":{"ddecf878":"code","831388b3":"code","6a9955b4":"code","3f12fccc":"code","69a06ad5":"code","12911a1a":"code","0697c642":"code","fa5b3986":"code","0ba31745":"code","a674de33":"code","390089f1":"code","c61ba25b":"code","e4a359a2":"code","29b78472":"code","176e88c5":"code","3c5b1455":"code","31ee27c3":"code","de0545ea":"code","7c81aafa":"code","e18f0a34":"code","785f0b63":"code","5bd368c7":"code","35bdd6fc":"code","e6b4524f":"code","dc1a5898":"code","e7d16d6f":"code","77d9647f":"code","78c1ec87":"code","bb4f3685":"code","b584f2d3":"code","0f11d2e1":"code","2ad5d97a":"code","300a0483":"code","0e65634d":"code","2e0bc866":"code","7bfbef24":"code","49c73101":"code","960ff81b":"code","5d5f956c":"code","11091f5f":"code","b9158de5":"code","5333b9b6":"code","45dcd344":"code","bfa5c945":"code","26999e58":"code","097065c7":"code","eb558e88":"code","39dbb906":"code","dff413ec":"code","5d9b8901":"code","2610612c":"code","3410cfbc":"code","517a437d":"code","eda12f6f":"code","05b3cc84":"code","4428f377":"code","4a0e5c1c":"code","fe904a15":"code","7a5e578c":"code","80fc3100":"code","da65d5b0":"code","dffe4477":"code","1735856c":"markdown","c10f10dd":"markdown","5ea76c29":"markdown","c6a82710":"markdown","a7b69638":"markdown","45278f16":"markdown","7adda4c5":"markdown","22588ade":"markdown","19a19508":"markdown","ed6f9c58":"markdown","2b2832ac":"markdown","ee96771e":"markdown","acdbb33d":"markdown","5be5f804":"markdown"},"source":{"ddecf878":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","831388b3":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","6a9955b4":"df = pd.read_csv('\/kaggle\/input\/heart-failure-prediction\/heart.csv')","3f12fccc":"df.info()","69a06ad5":"df.describe()","12911a1a":"df.head()","0697c642":"sns.pairplot(df,hue='HeartDisease', palette= 'coolwarm')","fa5b3986":"sns.heatmap(df.corr(),annot=True)\n##MaxHR & Oldpeak are most correlated to HeartDisease","0ba31745":"##Age\nplt.figure(figsize=(20,7))\nsns.countplot(data=df,x='Age')","a674de33":"##Sex\nplt.figure(figsize=(20,7))\nsns.countplot(data=df,x='Sex', hue= 'HeartDisease')","390089f1":"##ChestPainType\nplt.figure(figsize=(20,7))\nsns.countplot(data=df,x='Sex', hue= 'ChestPainType')","c61ba25b":"##RestingBP\nplt.figure(figsize=(30,10))\nsns.countplot(data=df,x='RestingBP',hue='HeartDisease')","e4a359a2":"##FastingBS\nplt.figure(figsize=(30,10))\nsns.countplot(data=df,x='FastingBS',hue='HeartDisease')","29b78472":"##RestingECG\nplt.figure(figsize=(30,10))\nsns.countplot(data=df,x='RestingECG',hue='HeartDisease')","176e88c5":"##MaxHR\nfig, ax = plt.subplots(figsize=(30, 10))\nsns.countplot(data=df,x='MaxHR',hue='HeartDisease', ax=ax)\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\nplt.show()","3c5b1455":"##ExerciseAngina\nsns.countplot(data=df,x='ExerciseAngina',hue='HeartDisease')","31ee27c3":"##Oldpeak\nfig, ax = plt.subplots(figsize=(20, 10))\nsns.countplot(data=df,x='Oldpeak',hue='HeartDisease', ax=ax)\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\nplt.show()","de0545ea":"##ST_Slope\nsns.countplot(data=df,x='ST_Slope',hue='HeartDisease')","7c81aafa":"##HeartDisease\nsns.countplot(data=df,x='HeartDisease')","e18f0a34":"df.isnull().sum()\n##no missing values","785f0b63":"cat_feats = ['Sex','ChestPainType','RestingECG','ExerciseAngina','ST_Slope']","5bd368c7":"##transforming categorical features using dummy variables\ndummy_data = pd.get_dummies(data=df,columns=cat_feats,drop_first=True)","35bdd6fc":"dummy_data.info()","e6b4524f":"dummy_data.head()","dc1a5898":"from sklearn.preprocessing import StandardScaler","e7d16d6f":"scaler = StandardScaler()","77d9647f":"scaler.fit(dummy_data.drop('HeartDisease',axis=1))","78c1ec87":"scaled_features = scaler.transform(dummy_data.drop('HeartDisease',axis=1))","bb4f3685":"##getting columns names without the column HeartDisease\ndf_names = dummy_data.drop(dummy_data.filter(regex='HeartDisease').columns, axis=1).columns\ndf_names","b584f2d3":"df_final = pd.DataFrame(scaled_features,columns=df_names)\ndf_final.head()","0f11d2e1":"from sklearn.model_selection import train_test_split","2ad5d97a":"X = df_final\ny = df['HeartDisease']","300a0483":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","0e65634d":"from sklearn.neighbors import KNeighborsClassifier","2e0bc866":"knn = KNeighborsClassifier(n_neighbors=1)","7bfbef24":"knn.fit(X_train,y_train)","49c73101":"pred = knn.predict(X_test)","960ff81b":"from sklearn import metrics\nfrom sklearn.metrics import classification_report,confusion_matrix,accuracy_score","5d5f956c":"print(confusion_matrix(y_test,pred))","11091f5f":"print(classification_report(y_test,pred))","b9158de5":"pred!= y_test","5333b9b6":"error_rate = []\n\nfor i in range (1,40):\n        \n        knn = KNeighborsClassifier(n_neighbors=i)\n        knn.fit(X_train,y_train)\n        pred_i = knn.predict(X_test)\n        error_rate.append(np.mean(pred_i != y_test))","45dcd344":"plt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', marker='o',\n         markerfacecolor='red', markersize=10)\nplt.title('Error Rate vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')","bfa5c945":"# NOW WITH K=14\nknn = KNeighborsClassifier(n_neighbors=14)\n\nknn.fit(X_train,y_train)\npred = knn.predict(X_test)\n\nprint('WITH K=14')\nprint('\\n')\nprint(confusion_matrix(y_test,pred))\nprint('\\n')\nprint(classification_report(y_test,pred))","26999e58":"from sklearn.tree import DecisionTreeClassifier","097065c7":"dtree = DecisionTreeClassifier()","eb558e88":"dtree.fit(X_train,y_train)","39dbb906":"pred_tree = dtree.predict(X_test)","dff413ec":"print(classification_report(y_test,pred_tree))","5d9b8901":"print(confusion_matrix(y_test,pred_tree))","2610612c":"from sklearn.ensemble import RandomForestClassifier","3410cfbc":"rfc = RandomForestClassifier(n_estimators=600)","517a437d":"rfc.fit(X_train,y_train)","eda12f6f":"pred_forest = rfc.predict(X_test)","05b3cc84":"print(classification_report(y_test,pred_forest))","4428f377":"print(confusion_matrix(y_test,pred_forest))","4a0e5c1c":"from sklearn.linear_model import LogisticRegression","fe904a15":"logmodel = LogisticRegression()","7a5e578c":"logmodel.fit(X_train,y_train)","80fc3100":"pred_log = logmodel.predict(X_test)","da65d5b0":"print(classification_report(y_test,pred_log))","dffe4477":"print(confusion_matrix(y_test,pred_log))","1735856c":"# Predicting Heart Disease using Logistic Regression","c10f10dd":"# DATA VISUALISATION","5ea76c29":"# **Feature Selection**","c6a82710":"KNN and Random Forest Classifier have the highest accuracy of 86%","a7b69638":"# Predicting Heart Disease Using KNN","45278f16":"# Predicting Heart Disease using a Decision Tree Model","7adda4c5":"**Feature Scaling**","22588ade":"Create a for loop that trains various KNN models with different k values, then keep track of the error_rate for each of these models with a list.","19a19508":"**Choosing a K Value using the elbow method** ","ed6f9c58":"# PREPROCESSING","2b2832ac":"# Predicting Heart Disease using Random Forest Classifier","ee96771e":"**Categorical Feature**","acdbb33d":"# DATA EXPLORATION","5be5f804":"**Retrain with new K value**"}}