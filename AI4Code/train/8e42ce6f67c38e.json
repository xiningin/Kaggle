{"cell_type":{"fe7f24c9":"code","276aea2d":"code","937c0358":"code","33cb3017":"code","801b6cd2":"code","da686a5c":"code","b45df183":"code","e46a835a":"code","ebb599ae":"code","708b3312":"code","0c740123":"code","4f48eb74":"code","89a1f22a":"code","713e047a":"code","7b319ac8":"code","fafa4474":"code","3769729b":"code","0de107ba":"code","92dbb946":"code","a8325a1e":"code","aecea7e2":"code","95f5d8e9":"code","96457b8e":"code","b1bc6216":"code","42493aa3":"code","5a2aefe8":"code","832de71b":"code","24a51e84":"code","d8685eab":"code","fc7cef1a":"code","4a4391cb":"code","d227e463":"code","ab672858":"code","6213716c":"code","bc04905c":"code","4e514d94":"code","db511b0f":"code","8d6e1d84":"code","b526508c":"code","fa3203fd":"code","d7d18dc9":"markdown","efe384ab":"markdown","3429c30c":"markdown","ac8beeec":"markdown","1eaf8a17":"markdown","f1ddab19":"markdown"},"source":{"fe7f24c9":"\nimport os\nfrom os import listdir\nimport pandas as pd\nimport numpy as np\nimport glob\nimport tqdm\nfrom typing import Dict\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n\n!pip install chart_studio\nimport plotly.express as px\nimport chart_studio.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot\nimport cufflinks\ncufflinks.go_offline()\ncufflinks.set_config_file(world_readable=True, theme='pearl')\n\n\nfrom colorama import Fore, Back, Style\n\nimport seaborn as sns\nsns.set(style=\"whitegrid\")\n\n\nimport pydicom\n\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nplt.style.use('fivethirtyeight')\nplt.show()\n\n# import os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","276aea2d":"train_df=pd.read_csv('..\/input\/osic-pulmonary-fibrosis-progression\/train.csv')\ntrain_df.head()\n\n","937c0358":"test_df=pd.read_csv('..\/input\/osic-pulmonary-fibrosis-progression\/test.csv')\ntest_df.head()","33cb3017":"train_df.shape","801b6cd2":"test_df.shape","da686a5c":"train_df.isnull().sum()","b45df183":"test_df.isnull().sum()","e46a835a":"print(Fore.YELLOW +\"Total Patients in Train set: \",Style.RESET_ALL,train_df['Patient'].count())\nprint(Fore.BLUE+\"total patients in test data:\", Style.RESET_ALL,test_df['Patient'].count())","ebb599ae":"list(os.listdir(\"..\/input\/osic-pulmonary-fibrosis-progression\"))","708b3312":"IMAGE_PATH = \"..\/input\/osic-pulmonary-fibrosis-progressiont\/\"\n\ntrain_df = pd.read_csv('..\/input\/osic-pulmonary-fibrosis-progression\/train.csv')\ntest_df = pd.read_csv('..\/input\/osic-pulmonary-fibrosis-progression\/test.csv')\n\nprint(Fore.YELLOW + 'Training data shape: ',Style.RESET_ALL,train_df.shape)\ntrain_df.head(5)\n","0c740123":"train_df.groupby(['SmokingStatus']).count()['Sex'].to_frame()\n","4f48eb74":"test_df.groupby(['SmokingStatus']).count()['Sex'].to_frame()","89a1f22a":"print(Fore.YELLOW + 'Train Set !!')\nprint(train_df.info())\nprint('-------------')\nprint(Fore.WHITE + 'Test Set !!')\nprint(test_df.info())","713e047a":"print(Fore.YELLOW + \"The total patient ids are\",Style.RESET_ALL,f\"{train_df['Patient'].count()},\", Fore.BLUE + \"from those the unique ids are\", Style.RESET_ALL, f\"{train_df['Patient'].value_counts().shape[0]}.\")\n","7b319ac8":"train_patient_id = set(train_df['Patient'].unique())\ntest_patient_id = set(test_df['Patient'].unique())\n\ntrain_patient_id.intersection(test_patient_id)","fafa4474":"columns=train_df.keys()\ncolumns=list(columns)\nprint(columns)","3769729b":"train_df['Patient'].value_counts().max()","0de107ba":"test_df['Patient'].value_counts().max()","92dbb946":"np.quantile(train_df['Patient'].value_counts(), 0.75) - np.quantile(test_df['Patient'].value_counts(), 0.25)\n","a8325a1e":"print(np.quantile(train_df['Patient'].value_counts(), 0.95))\nprint(np.quantile(test_df['Patient'].value_counts(), 0.95))","aecea7e2":"files=folders=0\n\npath = \"\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/train\"\n\nfor _, dirnames, filenames in os.walk(path):\n  # ^ this idiom means \"we won't be using this value\"\n    files += len(filenames)\n    folders += len(dirnames)\n#print(Fore.YELLOW +\"Total Patients in Train set: \",Style.RESET_ALL,train_df['Patient'].count())\nprint(Fore.YELLOW +f'{files:,}',Style.RESET_ALL,\"files\/images, \" + Fore.BLUE + f'{folders:,}',Style.RESET_ALL ,'folders\/patients')","95f5d8e9":"files = []\nfor _, dirnames, filenames in os.walk(path):\n  # ^ this idiom means \"we won't be using this value\"\n    files.append(len(filenames))\n\nprint(Fore.YELLOW +f'{round(np.mean(files)):,}',Style.RESET_ALL,'average files\/images per patient')\nprint(Fore.BLUE +f'{round(np.max(files)):,}',Style.RESET_ALL, 'max files\/images per patient')","96457b8e":"patient_df = train_df[['Patient', 'Age', 'Sex', 'SmokingStatus']].drop_duplicates()\npatient_df.head()","b1bc6216":"train_dir = '..\/input\/osic-pulmonary-fibrosis-progression\/train\/'\ntest_dir = '..\/input\/osic-pulmonary-fibrosis-progression\/test\/'\n\npatient_ids = os.listdir(train_dir)\npatient_ids = sorted(patient_ids)\n\n#Creating new rows\nno_of_instances = []\nage = []\nsex = []\nsmoking_status = []\n\nfor patient_id in patient_ids:\n    patient_info = train_df[train_df['Patient'] == patient_id].reset_index()\n    no_of_instances.append(len(os.listdir(train_dir + patient_id)))\n    age.append(patient_info['Age'][0])\n    sex.append(patient_info['Sex'][0])\n    smoking_status.append(patient_info['SmokingStatus'][0])\n\n#Creating the dataframe for the patient info    \npatient_df = pd.DataFrame(list(zip(patient_ids, no_of_instances, age, sex, smoking_status)), \n                                 columns =['Patient', 'no_of_instances', 'Age', 'Sex', 'SmokingStatus'])\nprint(patient_df.info())\npatient_df.head()","42493aa3":"patient_df['SmokingStatus'].value_counts()\n","5a2aefe8":"patient_df['SmokingStatus'].value_counts().iplot(kind='bar',\n                                              yTitle='Counts', \n                                              linecolor='black', \n                                              opacity=0.7,\n                                              color='blue',\n                                              theme='pearl',\n                                              bargap=0.5,\n                                              gridcolor='white',\n                                              title='Distribution of the SmokingStatus column in the Unique Patient Set')","832de71b":"train_df['Weeks'].value_counts().head()\n","24a51e84":"train_df['Weeks'].value_counts().iplot(kind='barh',\n                                      xTitle='Counts(Weeks)', \n                                      linecolor='black', \n                                      opacity=0.7,\n                                      color='#FB8072',\n                                      theme='pearl',\n                                      bargap=0.2,\n                                      gridcolor='white',\n                                      title='Distribution of the Weeks in the training set')\n","d8685eab":"fig = px.scatter(train_df, x=\"Weeks\", y=\"Age\", color='Sex')\nfig.show()","fc7cef1a":"train_df['FVC'].iplot(kind='hist',\n                      xTitle='Lung Capacity(ml)', \n                      linecolor='black', \n                      opacity=0.8,\n                      color='#FB8072',\n                      bargap=0.5,\n                      gridcolor='white',\n                      title='Distribution of the FVC in the training set')","4a4391cb":"fig = px.scatter(train_df, x=\"FVC\", y=\"Percent\", color='Age')\nfig.show()","d227e463":"fig = px.scatter(train_df, x=\"FVC\", y=\"Age\", color='Sex')\nfig.show()","ab672858":"fig = px.scatter(train_df, x=\"FVC\", y=\"Weeks\", color='SmokingStatus')\nfig.show()","6213716c":"fig = px.scatter(train_df, x=\"Age\", y=\"Percent\", color='SmokingStatus')\nfig.show()","bc04905c":"patient = train_df[train_df.Patient == 'ID00228637202259965313869']\nfig = px.line(patient, x=\"Weeks\", y=\"Percent\", color='SmokingStatus')\nfig.show()","4e514d94":"plt.figure(figsize=(16, 6))\nsns.kdeplot(patient_df.loc[patient_df['Sex'] == 'Male', 'Age'], label = 'Male',shade=True)\nsns.kdeplot(patient_df.loc[patient_df['Sex'] == 'Female', 'Age'], label = 'Female',shade=True)\nplt.xlabel('Age (years)'); plt.ylabel('Density'); plt.title('Distribution of Ages');","db511b0f":"patient_df['Sex'].value_counts().iplot(kind='bar',\n                                          yTitle='Count', \n                                          linecolor='black', \n                                          opacity=0.7,\n                                          color='blue',\n                                          theme='pearl',\n                                          bargap=0.8,\n                                          gridcolor='white',\n                                          title='Distribution of the Sex column in Patient Dataframe')","8d6e1d84":"plt.figure(figsize=(16, 6))\na = sns.countplot(data=patient_df, x='SmokingStatus', hue='Sex')\n\nfor p in a.patches:\n    a.annotate(format(p.get_height(), ','), \n           (p.get_x() + p.get_width() \/ 2., \n            p.get_height()), ha = 'center', va = 'center', \n           xytext = (0, 4), textcoords = 'offset points')\n\nplt.title('Gender split by SmokingStatus', fontsize=16)\nsns.despine(left=True, bottom=True);","b526508c":"def plot_pixel_array(dataset, figsize=(5,5)):\n    plt.figure(figsize=figsize)\n    plt.grid(False)\n    plt.imshow(dataset.pixel_array, cmap='gray') # cmap=plt.cm.bone)\n    plt.show()","fa3203fd":"\nimdir = \"\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/train\/ID00123637202217151272140\"\nprint(\"total images for patient ID00123637202217151272140: \", len(os.listdir(imdir)))\n\n# view first (columns*rows) images in order\nfig=plt.figure(figsize=(12, 12))\ncolumns = 4\nrows = 5\nimglist = os.listdir(imdir)\nfor i in range(1, columns*rows +1):\n    filename = imdir + \"\/\" + str(i) + \".dcm\"\n    ds = pydicom.dcmread(filename)\n    fig.add_subplot(rows, columns, i)\n    plt.imshow(ds.pixel_array, cmap='gray')\nplt.show()","d7d18dc9":"# fvc vs percent","efe384ab":"# **patient counts**","3429c30c":"#   no of patients and images in training folder.\n","ac8beeec":"# fvc vs age","1eaf8a17":"# distribution over ages\n","f1ddab19":"# creating individual dataframe\n"}}