{"cell_type":{"8eaa68b7":"code","162e05f8":"code","a71b1890":"code","ed85ea9e":"code","ba726364":"code","80d4d190":"code","62f0cf03":"code","a68d14c4":"code","dcf95951":"code","83b8e61e":"code","4430aefb":"code","db1e936d":"code","6f5ac7ae":"code","f0be60cf":"code","22086f11":"markdown","00b19794":"markdown","673aae5d":"markdown","18b3d305":"markdown","0345b9ac":"markdown","840dcfef":"markdown"},"source":{"8eaa68b7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","162e05f8":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","a71b1890":"df = pd.read_csv('\/kaggle\/input\/narcissistic-personality-inventory-test\/NPI\/data.csv')\ndf.head()","ed85ea9e":"df.shape","ba726364":"df.info()","80d4d190":"df.isna().sum()","62f0cf03":"fig = make_subplots(rows=1 , cols=2,\n                    subplot_titles=['Age Distribution', 'Elapse Distribution'])\n\nfig.add_traces(go.Histogram(x = df['age'],\n                            ),1,1)\n\nfig.add_traces(go.Histogram(x = df['elapse']),1,2)\n\n\nfig.update_layout(margin={'b':0,'l':0,'r':0,},\n                 paper_bgcolor='rgb(248, 248, 255)',\n                 plot_bgcolor='rgb(248, 248, 255)',\n                 title={'font':{\n                             'family':'monospace',\n                             'size':22,\n                             'color': 'grey',\n                             },'text':'Outliers Detection',\n                        'x':0.50,'y':0.9},\n                 showlegend=False)\n\nfig.show()","a68d14c4":"df = df[df['age']<100]\ndf = df[df['elapse']<2000]","dcf95951":"data = df[1:]\n\nnpi_score = data.iloc[:,0]\n\navg_score = (npi_score).mean()\nmale_score = (npi_score[data.iloc[:,42]==1].mean())\nfemale_score = (npi_score[data.iloc[:,42]==2].mean())\nother_score = (npi_score[data.iloc[:,42]==3].mean())\nnone_score = (npi_score[data.iloc[:,42]==0].mean())\n\ngender_count = df.iloc[:,42].value_counts()\nlabels1 = ['Male','Female','Other','None']\nvalues1 = gender_count\n\nlabels = ['Male','Female','Other','None']\nvalues = (avg_score,male_score,female_score,other_score,none_score)","83b8e61e":"fig = make_subplots(rows=1 , cols=2,\n                    specs=[[{'type':'domain'}, {'type':'bar'}]],\n                    subplot_titles=['Gender Distribution', 'AVG.Score Of Gender'])\n\nfig.add_traces(go.Pie(labels = labels1,\n                      values = values1,\n                      hole =.5,\n                      textinfo='label+percent',\n                      marker = dict(colors=px.colors.qualitative.Pastel2)),1,1)\n\nfig.add_traces(go.Bar(x = labels,\n                      y = values,\n                      text = values,\n                      marker=dict(color=values, colorscale='purples'),\n                      textposition='outside',\n                      texttemplate=('%{text:.4s}')))\n\nfig.add_annotation(text='Gender',xref=\"paper\", yref=\"paper\",\n                   x=0.20, y=0.5, \n                   showarrow=False,\n                   font=dict(size=16,color='grey'))\n\nfig.update_layout(margin={'b':0,'l':0,'r':0,},\n                 paper_bgcolor='rgb(248, 248, 255)',\n                 plot_bgcolor='rgb(248, 248, 255)',\n                 title={'font':{\n                             'family':'monospace',\n                             'size':22,\n                             'color': 'grey',\n                             },'text':'Men or Women highest NPI?',\n                        'x':0.50,'y':0.9},\n                 showlegend=False)\n\nfig.show()","4430aefb":"fig = px.scatter(x=df['age'],\n                 y=df['score'],\n                 size=df['score'],\n                 color=df['score'],\n                 trendline='ols',\n                 trendline_color_override='red')\n\nfig.update_traces(marker=dict(color='lightblue',line=dict(color='steelblue',width=1)))\n\nfig.update_layout(margin={'b':0,'l':0,'r':0,},\n                 paper_bgcolor='rgb(248, 248, 255)',\n                 plot_bgcolor='rgb(248, 248, 255)',\n                 title={'font':{\n                             'family':'monospace',\n                             'size':22,\n                             'color': 'grey',\n                             },'text':'Is there a correlation between age and NPI score?',\n                        'x':0.50,'y':0.9},\n                 showlegend=False)\nfig.show()","db1e936d":"print(np.corrcoef(df['age'],df['score']))","6f5ac7ae":"fig = px.scatter(x=df['elapse'],\n                 y=df['score'],\n                 size=df['score'],\n                 color=df['score'],\n                 trendline='ols',\n                 trendline_color_override='red')\n\nfig.update_traces(marker=dict(color='lightyellow',line=dict(color='teal',width=1)))\n\nfig.update_layout(margin={'b':0,'l':0,'r':0,},\n                 paper_bgcolor='rgb(248, 248, 255)',\n                 plot_bgcolor='rgb(248, 248, 255)',\n                 title={'font':{\n                             'family':'monospace',\n                             'size':22,\n                             'color': 'grey',\n                             },'text':'Is there a correlation between elapse and NPI score?',\n                        'x':0.50,'y':0.9},\n                 showlegend=False)\nfig.show()","f0be60cf":"print(np.corrcoef(df['score'],df['elapse']))","22086f11":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:black;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n\n<p style=\"padding: 10px;\n              color:white;\n              text-align:center;\">\n                            Outliers Detection\n              \n<\/p>\n<\/div>","00b19794":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:black;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n\n<p style=\"padding: 10px;\n              color:white;\n              text-align:center;\">\n                            Removing Outliers\n              \n<\/p>\n<\/div>","673aae5d":"**Female score higher.**","18b3d305":"*there is close to no correlation.*","0345b9ac":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:black;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n\n<p style=\"padding: 10px;\n              color:white;\n              text-align:center;\">\n                            EDA\n              \n<\/p>\n<\/div>","840dcfef":"*It has a negative correlation*"}}