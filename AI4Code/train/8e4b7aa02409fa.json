{"cell_type":{"8bfc381f":"code","4ce73201":"code","57a7d29a":"code","705b6fe7":"code","5c488747":"code","de8aeb7e":"code","2e1fac7b":"code","5f5f74e0":"markdown","ea44f21e":"markdown","a82e8618":"markdown","5ba9386e":"markdown","17d19195":"markdown","4d125e38":"markdown","7d929141":"markdown"},"source":{"8bfc381f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4ce73201":"from datetime import datetime\n\ndf_temp=pd.read_csv('\/kaggle\/input\/corona-virus-report\/covid_19_clean_complete.csv')\ntemps=pd.read_csv('\/kaggle\/input\/avg-temps-feb20\/temps.csv')\narrivals = pd.read_csv(\"\/kaggle\/input\/popstats\/arrivals.csv\")\npop_density = pd.read_csv(\"\/kaggle\/input\/popstats\/pop_density.csv\")\nctr_fr=[\"China\",\"Korea, Rep.\",\"United States\",\"Hong Kong SAR, China\",\"United Kingdom\",\"Russian Federation\",\"Iran, Islamic Rep.\"]\nctr_to=[\"Mainland China\",\"South Korea\",\"US\",\"Hong Kong\",\"UK\",\"Russia\",\"Iran\"]\npop_density=pop_density.replace(ctr_fr,ctr_to)\narrivals=arrivals.replace(ctr_fr,ctr_to)\n\ndf=pd.merge(df_temp, temps, how='inner', left_on='Country\/Region', right_on='Country')\ndf=pd.merge(df, pop_density, how='inner', left_on='Country\/Region', right_on='Country')\ndf=pd.merge(df, arrivals, how='inner', left_on='Country\/Region', right_on='Country')\n# Lets list all countries in the document\ncountries=df[\"Country\/Region\"].unique()\ndf['Date'] = pd.to_datetime(df['Date'], format='%m\/%d\/%y')\ndf.arrivals_2018=df.arrivals_2018\/df.arrivals_2018.max()\n","57a7d29a":"import matplotlib.pyplot as plt\nfrom pylab import *\nfrom scipy.optimize import curve_fit\ndef func(x, a, b):\n    return a*np.exp(b*x)\ncountries=['Mainland China' ,'Thailand', 'Japan', 'South Korea' ,'US',\n 'Hong Kong' ,'Singapore' ,'Vietnam','France' , 'Malaysia' ,'Canada',\n 'Australia' ,'Germany', 'Finland' ,'Philippines', 'Italy', 'UK', 'Russia',\n 'Sweden', 'Spain', 'Belgium', 'Iran' ,'Lebanon', 'Algeria' ,'Croatia','Switzerland',\n 'Austria' ,'Israel', 'Brazil','Greece', 'Norway', 'Romania', 'Denmark', 'Estonia', 'Netherlands', 'New Zealand',\n  'Ireland' , 'Indonesia']\ndf['growth_rate']=0\ndf['nber_days']=0\nlt=0\nfor ctr in countries:\n    lt=lt+1\n    country=(df[(df[\"Country\/Region\"]==ctr) & (df[\"Confirmed\"]>1)]).groupby(\"Date\").Confirmed.sum()\n    n=country.shape[0]\n    a=np.arange(n)\n    popt, pcov = curve_fit(func, a, country, [1,-1])\n    #plt.plot(a,func(a,*popt),color=\"red\",alpha=0.9)\n    #print(\"Growth rate for \"+ctr+\"=\"+str(np.exp(popt[1])))\n    df.loc[df[\"Country\/Region\"] == ctr, 'growth_rate'] = np.exp(popt[1])\n    df.loc[df[\"Country\/Region\"] == ctr, 'nber_days'] = n\n    plt.subplot(10,4,lt)\n\n    plt.plot(a,country)\n    plt.title(ctr)\n    plt.xticks(rotation='vertical')\n    plt.plot(a,func(a,*popt),color=\"red\",alpha=0.9)\nplt.subplots_adjust(bottom=0.1)\n\nplt.show()    ","705b6fe7":"ctr=\"Mainland China\"\ncountry=(df[(df[\"Country\/Region\"]==ctr) & (df[\"Confirmed\"]>1)]).groupby(\"Date\").Confirmed.sum()\nn=country.shape[0]\na=np.arange(n)\npopt, pcov = curve_fit(func, a, country, [1,1])\nprint(\"Growth rate for \"+ctr+\"=\"+str(np.exp(popt[1])))\ndf.loc[df[\"Country\/Region\"] == ctr, 'growth_rate'] = np.exp(popt[1])\ndf.loc[df[\"Country\/Region\"] == ctr, 'nber_days'] = n\nplt.plot(a,country)\nplt.title(ctr)\nplt.xticks(rotation='vertical')\nplt.plot(a,func(a,*popt),color=\"red\",alpha=0.9)\n\nplt.show()    ","5c488747":"df2=df[(df.growth_rate>0) & (df.nber_days>10)].groupby('Country\/Region', as_index=False).mean()\n\nimport statsmodels.api as sm\nresults = sm.OLS(df2.growth_rate,sm.add_constant(df2.temp_feb)).fit()\nprint(results.summary())\nfig, axes= plt.subplots(nrows=1, ncols=1,figsize=(16,13))\nplt.scatter(df2.temp_feb,df2.growth_rate)\nplt.plot(df2.temp_feb,results.params[0]+results.params[1]*df2.temp_feb)\nplt.title(\"Temperatures vs Growth Rate\")\nfor i in range(0,df2.shape[0]):\n    plt.annotate(df2.loc[i,\"Country\/Region\"],[df2.loc[i,\"temp_feb\"],df2.loc[i,\"growth_rate\"]])\nplt.show()","de8aeb7e":"fig, axes= plt.subplots(nrows=1, ncols=1,figsize=(15,15))\nplt.scatter(df2.arrivals_2018,df2.growth_rate)\nresults = sm.OLS(df2.growth_rate,sm.add_constant(df2.arrivals_2018)).fit()\nplt.plot(df2.arrivals_2018,results.params[0]+results.params[1]*df2.arrivals_2018)\nplt.title(\"Tourism influx (in 2018) vs Growth Rate\")\nfor i in range(0,df2.shape[0]):\n    plt.annotate(df2.loc[i,\"Country\/Region\"],[df2.loc[i,\"arrivals_2018\"],df2.loc[i,\"growth_rate\"]])\nplt.show()\n\n\nfig, axes= plt.subplots(nrows=1, ncols=1,figsize=(15,15))\nplt.scatter(df2.pop_density_2018,df2.growth_rate)\nresults = sm.OLS(df2.growth_rate,sm.add_constant(df2.pop_density_2018)).fit()\nplt.plot(df2.pop_density_2018,results.params[0]+results.params[1]*df2.pop_density_2018)\nplt.title(\"Population density (in 2018) vs Growth Rate\")\nfor i in range(0,df2.shape[0]):\n    plt.annotate(df2.loc[i,\"Country\/Region\"],[df2.loc[i,\"pop_density_2018\"],df2.loc[i,\"growth_rate\"]])\nplt.show()\n\n\n","2e1fac7b":"df2=df[(df.growth_rate>0) & (df.nber_days>10)].groupby('Country\/Region', as_index=False).mean()\nimport statsmodels.api as sm\nresults = sm.OLS(df2.growth_rate,sm.add_constant(df2[['temp_feb','arrivals_2018']])).fit()\nfig, axes= plt.subplots(nrows=1, ncols=1,figsize=(15,15))\nplt.scatter(y=df2.growth_rate,x=results.predict())\nplt.plot([0.9,1.6],[0.9,1.6],color=\"red\")\nplt.title(\"Predicted vs. observed\")\nplt.xlabel(\"Model Predictions\")\nplt.ylabel(\"Actuals\")\nfor i in range(0,df2.shape[0]):\n    plt.annotate(df2.loc[i,\"Country\/Region\"],[results.predict()[i],df2.loc[i,\"growth_rate\"]])\nplt.show()\nprint(results.summary())","5f5f74e0":"Let's load our two files and merge them, total number of cases times series broken down by country and region and average temperatures in each country in February. The data comes from the World Bank website and Kaggle (references to be updated)","ea44f21e":"Let's fit a simple exponential model, a.exp(bx) to the data and plot the results, even though in some cases like Singapore, a linear model seems more appropriate. We'll store the growth rate for each country and the number of days sincce the start of the outbreak","a82e8618":"It looks like there is some relationship between temperatures and spread, with every additional degree in temperature reducing the spread rate of the virus by a bit less than 1% ","5ba9386e":"China doesn't look right, let's fit the model again but different starting values","17d19195":"Let's fit a model for growth rate against tourism and temperature","4d125e38":"> Let's try adding population density and influx of tourists in the model to see the impact on the rate of spread, let's plot each one first","7d929141":"# Coronavirus: does it spread faster in colder weather?\n\n![Image from WebMD](https:\/\/img.webmd.com\/dtmcms\/live\/webmd\/consumer_assets\/site_images\/article_thumbnails\/news\/2020\/01_2020\/coronavirus_1\/1800x1200_coronavirus_1.jpg?resize=*:350px)"}}