{"cell_type":{"94c4b241":"code","61b1985b":"code","0a5405b3":"code","9b497941":"code","1448d357":"code","eae8b82a":"code","731fdbb3":"code","d7e7a806":"code","c86eaa83":"code","5d3198e0":"code","52a2b169":"code","02ad9f45":"code","d6350ea0":"code","73b20727":"code","e24be9c8":"code","2ce653c6":"code","e604621d":"code","18e9afb9":"code","20ebcedc":"code","bc8e75aa":"code","aa93feb2":"code","b5716065":"markdown","a2a25492":"markdown","e4642b84":"markdown","45395b75":"markdown","2d5da8b4":"markdown","16171989":"markdown","375e40e3":"markdown","d92cb4c2":"markdown","0886368d":"markdown","a5cb87cf":"markdown","8951d0c0":"markdown","8e9ecc3a":"markdown","137e4374":"markdown","3431fe9e":"markdown","0db9a067":"markdown"},"source":{"94c4b241":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","61b1985b":"train = pd.read_csv(\"\/kaggle\/input\/rossmann-store-sales\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/rossmann-store-sales\/test.csv\")\nstore = pd.read_csv(\"\/kaggle\/input\/rossmann-store-sales\/store.csv\")\n\ntrain.head()","0a5405b3":"train = pd.merge(train, store, on = \"Store\", how = \"left\")\ntest_data = pd.merge(test, store, on = \"Store\", how = \"left\")\n\ntrain.head()","9b497941":"date = train[\"Date\"]\ndate = pd.DataFrame(date)\ndate[\"Date\"] = pd.to_datetime(date[\"Date\"])\n\ny = []\ni = 0\nwhile i < 1017210:\n    x = date[\"Date\"][i].month\n    y.append(x)\n    i += 1\n","1448d357":"y = pd.DataFrame(y, columns = [\"Month\"])\ny[\"Month\"].value_counts()\n\ntrain[\"Month\"] = y[\"Month\"]\n\ny = []\ni = 0\nwhile i < 1017210:\n    x = date[\"Date\"][i].year\n    y.append(x)\n    i += 1","eae8b82a":"y = pd.DataFrame(y, columns = [\"Year\"])\ny[\"Year\"].value_counts()\ntrain[\"Year\"] = y[\"Year\"]\n\ny = []\ni = 0\nwhile i < 1017210:\n    x = date[\"Date\"][i].day\n    y.append(x)\n    i += 1","731fdbb3":"y = pd.DataFrame(y, columns = [\"Day\"])\ntrain[\"Day\"] = y[\"Day\"]\naylar = pd.pivot_table(train, values='Sales', index = [\"Month\"],\n                        aggfunc=np.sum)\n\naylar[\"Month\"] = [1,2,3,4,5,6,7,8,9,10,11,12]\n\nimport seaborn as sns\n\nsns.barplot(y = \"Sales\", x = \"Month\", data = aylar)","d7e7a806":"ornek_magaza = train.loc[train[\"Store\"] == 13]","c86eaa83":"x = ornek_magaza.loc[ornek_magaza[\"Month\"] == 3].sum()\ny = ornek_magaza.loc[ornek_magaza[\"Month\"] == 11].sum()\n\nprint(\"=======================mart ay\u0131=======================\", x, \"\\n\", \"=======================kas\u0131m ay\u0131=======================\",y)","5d3198e0":"magaza = pd.pivot_table(train, values = \"Open\", index = [\"Store\"], aggfunc = np.sum)\nmax(magaza[\"Open\"])","52a2b169":"magaza = magaza.loc[magaza[\"Open\"] == 942]\n\nhep_acik = pd.DataFrame()\n\nfor i in magaza.index:\n    magazalar = train.loc[train[\"Store\"] == i]\n    hep_acik = pd.concat([hep_acik, magazalar], axis = 0)\n\naylar = pd.pivot_table(hep_acik, values = \"Sales\", index = [\"Month\"], aggfunc = np.sum)\n\naylar[\"Month\"] = [1,2,3,4,5,6,7,8,9,10,11,12]\n\nsns.barplot(x = \"Month\", y = \"Sales\", data = hep_acik)","02ad9f45":"g\u00fcnler = pd.pivot_table(hep_acik, values = \"Sales\", index = [\"DayOfWeek\"], aggfunc = np.sum)\n\ng\u00fcnler[\"Day\"] = [\"P.tesi\", \"Sal\u0131\", \"\u00c7ar\u015famba\", \"Per\u015fembe\", \"Cuma\", \"C.tesi\", \"Pazar\"]\n\nsns.barplot(x = \"Day\", y = \"Sales\", data = g\u00fcnler)","d6350ea0":"train = train.loc[train[\"Open\"] == 1]\ntrain[\"g\u00fcnl\u00fck_ort\"] = train[\"Sales\"] \/ train[\"Customers\"]\n\ntrain.head()","73b20727":"train[\"CompetitionMonths\"] = 12 * (train.Year - train.CompetitionOpenSinceYear) + (train.Month - train.CompetitionOpenSinceMonth)\ntrain[\"CompetitionMonths\"] = train[\"CompetitionMonths\"].replace(24187, 0)\n\neksiler = train.loc[train[\"CompetitionMonths\"] > 24000]\ntrain = train.loc[train[\"CompetitionMonths\"] < 24000]\n\neksiler[\"CompetitionMonths\"] = 0\ntrain = pd.concat([train, eksiler], axis = 0)","e24be9c8":"train.head()","2ce653c6":"train = train.replace(np.nan, 0)\n\ndel train[\"Date\"]\ndel train[\"CompetitionOpenSinceMonth\"]\ndel train[\"CompetitionOpenSinceYear\"]\ndel train[\"Open\"]\n\ntrain.loc[train['StoreType'] == 'a', 'StoreType'] = '1'\ntrain.loc[train['StoreType'] == 'b', 'StoreType'] = '2'\ntrain.loc[train['StoreType'] == 'c', 'StoreType'] = '3'\ntrain.loc[train['StoreType'] == 'd', 'StoreType'] = '4'\ntrain['StoreType'] = train['StoreType'].astype(float)\n\ntrain.loc[train['Assortment'] == 'a', 'Assortment'] = '1'\ntrain.loc[train['Assortment'] == 'b', 'Assortment'] = '2'\ntrain.loc[train['Assortment'] == 'c', 'Assortment'] = '3'\ntrain['Assortment'] = train['Assortment'].astype(float)\n\ntrain.loc[train['StateHoliday'] == 'a', 'StateHoliday'] = '1'\ntrain.loc[train['StateHoliday'] == 'b', 'StateHoliday'] = '2'\ntrain.loc[train['StateHoliday'] == 'c', 'StateHoliday'] = '3'\ntrain['StateHoliday'] = train['StateHoliday'].astype(float)\n\ntrain[\"PromoInterval\"].value_counts()\ntrain.loc[train['PromoInterval'] == 'Jan,Apr,Jul,Oct', 'PromoInterval'] = '1'\ntrain.loc[train['PromoInterval'] == 'Feb,May,Aug,Nov', 'PromoInterval'] = '2'\ntrain.loc[train['PromoInterval'] == 'Mar,Jun,Sept,Dec', 'PromoInterval'] = '3'\ntrain['PromoInterval'] = train['PromoInterval'].astype(float)\n\ntrain.isnull().sum()","e604621d":"train.head()","18e9afb9":"df = train.copy()\ndel df[\"Sales\"]\ny = pd.DataFrame(train[\"Sales\"])\nx = df\n\n\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.33, random_state = 42)","20ebcedc":"from xgboost import XGBRegressor\n\nxgb = XGBRegressor()\nxgb.fit(x_train, y_train)\nxgb_tahmin = xgb.predict(x_test)","bc8e75aa":"from sklearn.metrics import r2_score, mean_squared_error\nprint(\"R^2 Skoru :\", round(r2_score(y_test , xgb_tahmin), 4))\nprint(\"Hata Kareler Ortalamas\u0131: \", round(np.sqrt(mean_squared_error(y_test , xgb_tahmin))))","aa93feb2":"print(\"Te\u015fekk\u00fcrler!\")","b5716065":"En fazla sat\u0131\u015f\u0131n oldu\u011fu ay mart olarak g\u00f6z\u00fckmekte buna kar\u015f\u0131n temmuz ay\u0131ndan sonra sat\u0131\u015f rakamlar\u0131 \u00e7ok ciddi bir \u015fekilde d\u00fc\u015fm\u00fc\u015f g\u00f6z\u00fck\u00fcyor. Bunun nedenini anlamak i\u00e7in herhangi bir ma\u011fazay\u0131 se\u00e7ip sadece o ma\u011fazan\u0131n bilgileri incelenebilir.","a2a25492":"\u015eimdi ise her m\u00fc\u015fterinin o ma\u011fazaya ne kadar hesap \u00f6dedi\u011fini bulal\u0131m. Burada belki baz\u0131 g\u00fcnler gelen m\u00fc\u015fteri say\u0131lar\u0131 di\u011fer g\u00fcnlerden fazla olabilir ama belkide bu m\u00fc\u015fteriler ortalama daha az \u00fccret \u00f6deyebilirler veya tam tersi g\u00fcn i\u00e7erisinde az say\u0131da m\u00fc\u015fteri gelip daha fazla \u00fccret \u00f6demi\u015f olabilirler her g\u00fcn i\u00e7in m\u00fc\u015fteri ba\u015f\u0131na ortalama \u00f6denen \u00fccreti bularak dataya yeni bir de\u011fi\u015fken ekleyebiliriz.","e4642b84":"Yukar\u0131daki \u00e7\u0131kt\u0131da ayn\u0131 ma\u011fazan\u0131n mart ve kas\u0131m aylar\u0131 t\u00fcm bilgileri var sat\u0131\u015f rakam\u0131 mart ay\u0131 i\u00e7in 384.621 iken kas\u0131m ay\u0131 i\u00e7in 122.826 yani yukar\u0131daki grafik gibi. Bunun nedeni olarak en belirgin \u00f6zellik \"open\" de\u011fi\u015fkeni olarak g\u00f6z\u00fck\u00fcyor mart ay\u0131nda toplamda (y\u0131llar i\u00e7in) a\u00e7\u0131k olma g\u00fcn say\u0131s\u0131 77 iken kas\u0131m ay\u0131nda ise bu say\u0131 25'tir. Yani sat\u0131\u015f adedinin azl\u0131\u011f\u0131 ma\u011fazan\u0131n kapal\u0131 olmas\u0131ndan kaynaklanmaktad\u0131r.","45395b75":"Data haz\u0131rland\u0131 \u015fimdi data \u00fczerinden \u00e7e\u015fitli k\u0131r\u0131l\u0131mlar bulmaya \u00e7al\u0131\u015fabiliriz.\n\n\u00d6nce sat\u0131\u015f rakam\u0131n\u0131n aylara g\u00f6re nas\u0131l davrand\u0131\u011f\u0131n\u0131 g\u00f6rmek istiyorum. Sat\u0131\u015flarda belki bir \u00e7e\u015fit mevsimsellik olabilir (yazlar\u0131 veya k\u0131\u015flar\u0131 sat\u0131\u015flar\u0131n artmas\u0131 azalmas\u0131 gibi) Asl\u0131nda Rossmann bir ila\u00e7 ma\u011fazas\u0131d\u0131r bu sebeple bizim sat\u0131\u015flar\u0131m\u0131z \u00e7o\u011funlukla medikal \u00fcr\u00fcnler olacakt\u0131r yani hap, \u015furup, vitaminler vs gibi bu sebeple k\u0131\u015f aylar\u0131 lehine bir mevsimsellik olabilir.","2d5da8b4":"Modelleme","16171989":"\u015eimdi data da bulunan bo\u015f sat\u0131rlar\u0131 0 ile de\u011fi\u015ftirip data da bulunan harf de\u011ferleri say\u0131sal de\u011ferlere d\u00f6n\u00fc\u015ft\u00fcrerek modellemeye haz\u0131r hale getirelim.","375e40e3":"Rossmann Store Sales datas\u0131 ile farkl\u0131 7 \u00fclkede bulunan 1115 farkl\u0131 d\u00fckkan i\u00e7in sat\u0131\u015f rakamlar\u0131 mevcuttur. Amac\u0131m\u0131z her farkl\u0131 d\u00fckkan\u0131n belirli bir d\u00f6nem sonunda ne kadarl\u0131k bir sat\u0131\u015f yapaca\u011f\u0131n\u0131 tahmin etmektir.\n\nData i\u00e7erisinde bulunan de\u011fi\u015fkenler ile ilgili bilgiler a\u015fa\u011f\u0131daki gibidir:\n\nId --> \u0130ndex\n\nStore --> Tekil ma\u011faza numaras\u0131\n\nSales --> G\u00fcnl\u00fck ciro\n\nCustomers --> G\u00fcn i\u00e7erinde ma\u011fazaya gelen m\u00fc\u015fteri say\u0131s\u0131\n\nOpen --> Ma\u011fazan\u0131n o g\u00fcn i\u00e7in a\u00e7\u0131k veya kapal\u0131 oldu\u011fu bilgisi. (1 = a\u00e7\u0131k, 0 = kapal\u0131)\n\nStateHoliday --> O g\u00fcn i\u00e7in bulundu\u011fu \u00fclkenin tatil g\u00fcn\u00fc olup olmad\u0131\u011f\u0131 ( a = resmi tatil, b = paskalya tatili, c = Y\u0131lba\u015f\u0131, 0 = tatil de\u011fil)\n\nSchoolHoliday --> Okul tatili.\n\nStoreType --> a = basit \u00fcr\u00fcnler, b = ekstra \u00fcr\u00fcnler, c = en fazla \u00e7e\u015fidin oldu\u011fu \u00fcr\u00fcnler.\n\nCompetitionDistance --> En yak\u0131n rakip ma\u011fazan\u0131n uzakl\u0131\u011f\u0131\n\nCompetitionOpenSince(Month\/Year) --> En yak\u0131n rakip ma\u011fazan\u0131n a\u00e7\u0131l\u0131\u015f y\u0131l ve ay\u0131.\n\nPromo --> O g\u00fcnde ma\u011fazan\u0131n promosyon \u00fcr\u00fcn\u00fc olup olmad\u0131\u011f\u0131.\n\nPromo2 --> Ma\u011fazan\u0131n promosyona kat\u0131l\u0131p kat\u0131lmad\u0131\u011f\u0131.\n\nPromo2Since(Year\/Week) --> E\u011fer Promo2 1 ise Promo2'ye ba\u015flad\u0131\u011f\u0131 y\u0131l ve y\u0131l\u0131n haftas\u0131.\n\nPromoInterval --> Promo2'nin ba\u015flad\u0131\u011f\u0131 aylar.","d92cb4c2":"Evet art\u0131k aylara g\u00f6re daha ger\u00e7ek sonu\u00e7lar elde ettik. Burada ger\u00e7ekten de k\u0131\u015f aylar\u0131nda sat\u0131\u015flar\u0131n daha fazla artt\u0131\u011f\u0131 g\u00f6z\u00fckmekte yani bir bak\u0131ma mevsimsellik bulunmakta. \u015eimdi g\u00fcnlere g\u00f6re ayn\u0131 ma\u011fazalar\u0131n sat\u0131\u015f rakamlar\u0131n\u0131 bulal\u0131m.","0886368d":"Yukar\u0131da yapt\u0131\u011f\u0131m\u0131z i\u015flem a\u00e7\u0131k g\u00fcn say\u0131lar\u0131n\u0131 g\u00f6steren ma\u011fazalar\u0131n pivotu. En fazla a\u00e7\u0131k olma g\u00fcn say\u0131s\u0131 ise 942. Burada yapmak istedi\u011fim \u015fey e\u015fit say\u0131da a\u00e7\u0131k g\u00fcn say\u0131s\u0131 olan ma\u011fazalara bak\u0131p yeni grafik \u00e7izdirmek bunun i\u00e7inde tatiller hari\u00e7 s\u00fcrekli a\u00e7\u0131k olan ma\u011fazalar\u0131 se\u00e7mek daha do\u011fru olabilir. Bu ma\u011fazalar\u0131n a\u00e7\u0131k g\u00fcn say\u0131lar\u0131 ise 942 olarak g\u00f6z\u00fckmekte. \u015eimdi a\u00e7\u0131k g\u00fcn say\u0131s\u0131 942 oln ma\u011fazalar\u0131 se\u00e7ip bunlar\u0131n aylara ve g\u00fcnlere g\u00f6re grafiklerini \u00e7izelim.","a5cb87cf":"Data olarak elimizde 3 farkl\u0131 kaynak var bunlardan ilki train datas\u0131. Train datas\u0131nda g\u00fcnl\u00fck olarak her ma\u011fazan\u0131n sat\u0131\u015f, m\u00fc\u015fteri, tarih, tatil gibi bilgileri mevcut ikinci data test datas\u0131. Test datas\u0131da t\u0131pk\u0131 train datas\u0131ndaki bilgileri bar\u0131nd\u0131r\u0131yor (hedef de\u011fi\u015fken Sales hari\u00e7). Son olarak store datas\u0131 ise rakip ma\u011faza bilgileri, promosyon bilgileri gibi de\u011fi\u015fkenleri i\u00e7eriyor ilk olarak datalar\u0131m\u0131z\u0131 y\u00fckleyelim.","8951d0c0":"E\u011fer sadece a\u00e7\u0131k ma\u011fazalar ile ayn\u0131 grafi\u011fi \u00e7izdirirsek daha ger\u00e7ek sonu\u00e7lara ula\u015fabiliriz. Ayn\u0131 zamanda sat\u0131\u015f tahminleri i\u00e7inde a\u00e7\u0131k ma\u011fazalar\u0131 g\u00f6z \u00f6n\u00fcne almak daha iyi olacakt\u0131r \u00e7\u00fcnk\u00fc e\u011fer ma\u011faza kapal\u0131 ise sat\u0131\u015f\u0131 otomatik olarak 0 olacakt\u0131r.","8e9ecc3a":"Rossmann Store Sales \u00d6rne\u011fi\n\nMerhaba, bu \u00e7al\u0131\u015fma sayfas\u0131nda Rossmann Store Sales datas\u0131 ile ilgili yeni bir \u00e7\u00f6z\u00fcm \u00f6rne\u011fini payla\u015f\u0131yorum. Konu hakk\u0131ndaki yorumlar\u0131n\u0131z benim i\u00e7in \u00f6nemlidir.\n\nBaz\u0131 k\u0131s\u0131mlar da g\u00f6r\u00fc\u015f eksikli\u011fi veya dolayl\u0131 yoldan gidilmi\u015f olabilir yeni olan t\u00fcm \u00f6nerilere a\u00e7\u0131\u011f\u0131m umar\u0131m bu \u00f6rnek \u00e7al\u0131\u015fma sizin i\u00e7in faydal\u0131 olur.","137e4374":"G\u00fcnlerde P.tesi, Cuma ve Pazar g\u00fcnleri sat\u0131\u015flar\u0131n artt\u0131\u011f\u0131 g\u00f6z\u00fck\u00fcyor.","3431fe9e":"\u015eimdi ilgili ma\u011fazan\u0131n rakebet etti\u011fi ma\u011fazan\u0131n ay say\u0131s\u0131n\u0131 bulal\u0131m bu sat\u0131\u015flar \u00fczerine etkisi olan bir de\u011ferdir. Rakip bir ma\u011fazan\u0131n a\u00e7\u0131l\u0131\u015f\u0131 sat\u0131\u015flar\u0131 d\u00fc\u015f\u00fcren bir etkiye sahip.","0db9a067":"Train ve store datas\u0131n\u0131 birle\u015ftirmek analizi tek bir data \u00fczerinden yapmam\u0131z\u0131 sa\u011flayacak ayn\u0131 \u015fekilde \u015fimdiden test datas\u0131na eklemek tahmin i\u015fleminde kolayl\u0131k sa\u011flayacakt\u0131r."}}