{"cell_type":{"151d1157":"code","7db0b0d4":"code","74294f4b":"code","98e641ac":"code","69ce449a":"code","f1bec87a":"markdown","eaf653d8":"markdown","88bc143e":"markdown"},"source":{"151d1157":"# Imports\nimport pandas as pd\nfrom datetime import date, timedelta\nimport folium\nfrom folium import Marker\nfrom folium.plugins import MarkerCluster\nimport math\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Population Data\npopulationData = pd.read_csv('\/kaggle\/input\/2019-census-us-population-data-by-state\/2019_Census_US_Population_Data_By_State_Lat_Long.csv')\n\n# Get the most recent date for filtering\nfreshDate = date.today() - timedelta(days=1)\nfreshDate = date.strftime(freshDate,\"%Y%m%d\")\nfreshDate = freshDate[0:4] + \"-\" + freshDate[4:6] + \"-\" + freshDate[6:8]\n\n# Vaccination data, for most recent date\nvaccinationData = pd.read_csv('https:\/\/raw.githubusercontent.com\/owid\/covid-19-data\/master\/public\/data\/vaccinations\/us_state_vaccinations.csv')\nvaccinationByLocation = vaccinationData.loc[(vaccinationData.date == freshDate)][[\"location\", \"people_vaccinated\"]]\n\n# Vaccination and population data\nvaccinationAndPopulationByLocation = pd.merge(populationData, vaccinationByLocation, left_on='STATE',right_on='location').drop(columns=\"location\")\n\n# Calculate percentage vaccinated by state\nvaccinationAndPopulationByLocation[\"percent_vaccinated\"] = vaccinationAndPopulationByLocation[\"people_vaccinated\"] \/ vaccinationAndPopulationByLocation[\"POPESTIMATE2019\"]\n\nvaccinationAndPopulationByLocation","7db0b0d4":"# Calculate the total percent vaccinated in the US\npercentageTotal = vaccinationAndPopulationByLocation[\"people_vaccinated\"].sum() \/ vaccinationAndPopulationByLocation[\"POPESTIMATE2019\"].sum()\nprint('Percentage Vaccinated in the US: {}%'.format(round(percentageTotal*100, 2))) ","74294f4b":"# Create the map\nv_map = folium.Map(location=[42.32,-71.0589], tiles='cartodbpositron', zoom_start=4) \n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in vaccinationAndPopulationByLocation.iterrows(): \n    if not math.isnan(row['long']) and not math.isnan(row['lat']):\n        mc.add_child(Marker(location=[row['lat'], row['long']],\n                            tooltip=str(round(row['percent_vaccinated']*100, 2))+\"%\"))\nv_map.add_child(mc)\n\n# Display the map\nv_map","98e641ac":"from folium import Choropleth, Circle, Marker\nimport geopandas as gdf\nv_map2 = folium.Map(location=[42.32,-71.0589], tiles='cartodbpositron', zoom_start=4) \n\nstates=gdf.read_file(\"..\/input\/us-states-cartographic-boundary-shapefiles\/cb_2016_us_state_500k.shp\")\ncovidVaccine = gdf.GeoDataFrame(vaccinationAndPopulationByLocation, geometry=gdf.points_from_xy(vaccinationAndPopulationByLocation.long, vaccinationAndPopulationByLocation.lat))\ncovidVaccine=covidVaccine.set_crs(\"EPSG:4269\")\ncov=gdf.sjoin(covidVaccine, states, how=\"right\", op='intersects').dropna().reset_index()","69ce449a":"cov.plot(column='percent_vaccinated', cmap='OrRd',legend=True)","f1bec87a":"# Your turn\n\nHere are some ideas for how you might improve on the work here:\n- In Kaggle's [Geospatial Analysis course](https:\/\/www.kaggle.com\/learn\/geospatial-analysis), you learn how to use folium to create many different types of interactive maps.  How might you use this data to instead create a choropleth map?\n- In case you would like to work with more data sources,\n  - The Centers for Disease Control and Prevention (CDC) in the US releases daily vaccine data and has a vaccination progress tracker on its [COVID Data Tracker site](https:\/\/covid.cdc.gov\/covid-data-tracker\/#vaccinations).\n  - NBC News has a [vaccine tracker](https:\/\/www.nbcnews.com\/health\/health-news\/map-covid-19-vaccination-tracker-across-u-s-n1252085) as well which is quite well done.\n  \nOnce you have created your own extension of this work, let us know about it in the comments!","eaf653d8":"# Introduction\n\nIt can be a troubling time, but we do have hope on the horizon, with the news we get daily about vaccines. Multiple companies are releasing and getting their vaccines approved; we may  soon see a path forward. \n\nUsing the robust toolset provided by Kaggle, I'll show you how to create an interactive map to track, for each state, the percentage of inhabitants that have been vaccinated against COVID-19.  \n\nTo get started, if you haven't already, make your own copy of this notebook by clicking on the **[Copy and Edit]** button in the top right corner. \n\nThis notebook is an example of a project that you can create based on what you'd learn from taking Kaggle's [Geospatial Analysis course](https:\/\/www.kaggle.com\/learn\/geospatial-analysis).\n\n# US Vaccine Tracker\n\nWe'll use two datasets.  \n\n- The first dataset has the total number of inhabitants of each state, along with latitude and longitude data for each state's capital city.  This dataset is pulled from the 2019 US Census, and I've uploaded it [here](https:\/\/www.kaggle.com\/peretzcohen\/2019-census-us-population-data-by-state).\n- The second dataset contains a recent estimate for the total number of people that have been vaccinated in each state.  This [vaccine dataset](https:\/\/github.com\/owid\/covid-19-data\/blob\/master\/public\/data\/vaccinations\/us_state_vaccinations.csv) is drawn from [Our World In Data](https:\/\/ourworldindata.org\/), who update their vaccine datasets from the CDC quite regularly.  Every time you run this notebook, you'll use the most recent version of their data.\n\nIn the next code cell, we load and preprocess the data.  As output, you'll see the total percent of the population that has been vaccinated in the US, along with a preview of the Pandas DataFrame that we'll use to make the tracker.","88bc143e":"The next code cell uses the data to create a tracker, with one marker for each state.  You can click on the markers to see the percentage of the population that has been vaccinated."}}