{"cell_type":{"808ae320":"code","aea536c8":"code","dfdd110c":"code","800f07a7":"code","275ecb58":"code","a564898a":"code","e494d4ea":"code","94fdd3cb":"code","e39439b5":"code","5a040e8a":"code","183bb1f6":"code","df2b6172":"code","ceae60e9":"code","0c8882d2":"code","2dba3e97":"code","321261ff":"code","3acd94d8":"code","dac440ca":"code","0cecc5e5":"code","c4dd115a":"code","7d59b304":"code","f99fe06a":"code","156ac43f":"code","e03cb7d9":"code","2c37f8d7":"code","dd35d8d1":"code","56033e01":"code","efb10c61":"code","d0d82955":"code","13acafa0":"code","ff1c0c08":"code","f5ada366":"code","b51b84c8":"code","e5251a6f":"code","ec028061":"code","31a6cdcb":"code","081c1b97":"code","b115f8f8":"code","2ac4572d":"code","a2458233":"code","4e667d19":"code","30d287d5":"markdown","4297bc50":"markdown","56e668f3":"markdown","2fe87afd":"markdown","3b8f77e8":"markdown","b1672fa5":"markdown","2196d2e7":"markdown","8bd1d0df":"markdown","d76476ea":"markdown","74136882":"markdown","fd3e2688":"markdown","da044b31":"markdown","87964cff":"markdown","171c3bc1":"markdown","c93fa9b9":"markdown","815354ee":"markdown","cf75a6fd":"markdown","df599f37":"markdown","f8a6cda5":"markdown","f31b1ffe":"markdown","dee0a511":"markdown","4e10d010":"markdown","740770fa":"markdown","2a1bf98e":"markdown","4d107485":"markdown","6ce3f95b":"markdown","8ef98ba0":"markdown","74e24454":"markdown","5c9607c9":"markdown","1dedecb6":"markdown","f762ffc1":"markdown","ee20400a":"markdown","784aaaa3":"markdown","f3533d56":"markdown","358b3d91":"markdown","f3acc866":"markdown","8eaefc03":"markdown","81029d36":"markdown","74a7c7db":"markdown","65148bea":"markdown","cbe17240":"markdown","f54ee318":"markdown","2027845e":"markdown","fef6a576":"markdown","9c5807c7":"markdown","6cd01353":"markdown","a677791f":"markdown","b1dc2fcc":"markdown"},"source":{"808ae320":"# data analysis and wrangling\nimport pandas as pd\nfrom pandas_datareader import data\nimport numpy as np\nimport random as rnd\nimport datetime\n\n# visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_style('whitegrid')\n%matplotlib inline\n\n# plotly\nimport plotly\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport cufflinks as cf\ncf.go_offline()\n\n# web scraping\nimport requests\nimport bs4\nimport csv\nimport json \nimport re\nfrom io import StringIO","aea536c8":"# (The data ranges from 10\/22\/2010 - 10\/16\/2020)\n\n# Company List and SEC Form \ncompany_list = pd.read_csv('..\/input\/warren-buffett-us-stock-companies\/Company List.csv',sep=';')\nsec_form = pd.read_csv('..\/input\/warren-buffett-us-stock-companies\/SEC Form 13F.csv',sep=';')\n\n# Remote Data Access\n# set the start date and end date\nstart = datetime.datetime(2010,10,22)\nend = datetime.datetime(2020,10,16)\n\n# set each stock to be a separate dataframe\n# Company Stocks List\nGSPC = data.DataReader(\"^GSPC\", 'yahoo', start, end)\nAMZN = data.DataReader(\"AMZN\", 'yahoo', datetime.datetime(2007,10,22), end)\nAXP = data.DataReader(\"AXP\", 'yahoo', start, end)\nAAPL = data.DataReader(\"AAPL\", 'yahoo', datetime.datetime(2007,10,22), end)\nAXTA = data.DataReader(\"AXTA\", 'yahoo', start, end)\nBAC = data.DataReader(\"BAC\", 'yahoo', datetime.datetime(2007,10,22), end)\nBK = data.DataReader(\"BK\", 'yahoo', start, end)\nGOLD = data.DataReader(\"GOLD\", 'yahoo', start, end)\nBIIB = data.DataReader(\"BIIB\", 'yahoo', start, end)\nCHTR = data.DataReader(\"CHTR\", 'yahoo', start, end)\nKO = data.DataReader(\"KO\", 'yahoo', datetime.datetime(2007,10,22), end)\nCOST = data.DataReader(\"COST\", 'yahoo', start, end)\nDVA = data.DataReader(\"DVA\", 'yahoo', start, end)\nGM = data.DataReader(\"GM\", 'yahoo', start, end)\nGL = data.DataReader(\"GL\", 'yahoo', start, end)\nJNJ = data.DataReader(\"JNJ\", 'yahoo', start, end)\nJPM = data.DataReader(\"JPM\", 'yahoo', start, end)\nKHC = data.DataReader(\"KHC\", 'yahoo', datetime.datetime(2007,10,22), end)\nKR = data.DataReader(\"KR\", 'yahoo', start, end)\nLBTYA = data.DataReader(\"LBTYA\", 'yahoo', start, end)\nLBTYK = data.DataReader(\"LBTYK\", 'yahoo', start, end)\nLILA = data.DataReader(\"LILA\", 'yahoo', start, end)\nLILAK = data.DataReader(\"LILAK\", 'yahoo', start, end)\nLSXMA = data.DataReader(\"LSXMA\", 'yahoo', start, end)\nLSXMK = data.DataReader(\"LSXMK\", 'yahoo', start, end)\nMTB = data.DataReader(\"MTB\", 'yahoo', start, end)\nMA = data.DataReader(\"MA\", 'yahoo', start, end)\nMDLZ = data.DataReader(\"MDLZ\", 'yahoo', start, end)\nMCO = data.DataReader(\"MCO\", 'yahoo', start, end)\nPNC = data.DataReader(\"PNC\", 'yahoo', start, end)\nPG = data.DataReader(\"PG\", 'yahoo', start, end)\nRH = data.DataReader(\"RH\", 'yahoo', start, end)\nSIRI = data.DataReader(\"SIRI\", 'yahoo', start, end)\nSNOW = data.DataReader(\"SNOW\", 'yahoo', start, end)\nSPY = data.DataReader(\"SPY\", 'yahoo', start, end)\nSTNE = data.DataReader(\"STNE\", 'yahoo', start, end)\nSTOR = data.DataReader(\"STOR\", 'yahoo', start, end)\nSU = data.DataReader(\"SU\", 'yahoo', start, end)\nSYF = data.DataReader(\"SYF\", 'yahoo', start, end)\nTEVA = data.DataReader(\"TEVA\", 'yahoo', start, end)\nUSB = data.DataReader(\"USB\", 'yahoo', start, end)\nUPS = data.DataReader(\"UPS\", 'yahoo', start, end)\nVOO = data.DataReader(\"VOO\", 'yahoo', start, end)\nVRSN = data.DataReader(\"VRSN\", 'yahoo', start, end)\nV = data.DataReader(\"V\", 'yahoo', start, end)\nWFC = data.DataReader(\"WFC\", 'yahoo', start, end)\n\n# Berkshire Hathaway Stocks\nBRKA = data.DataReader(\"BRK-A\", 'yahoo', start, end)\nBRKB = data.DataReader(\"BRK-B\", 'yahoo', start, end)","dfdd110c":"company_list","800f07a7":"company_list.info()","275ecb58":"sec_form.head()","a564898a":"AMZN.head()","e494d4ea":"# Removing $ sign and spaces \ncols = ['Holdings', 'Market Price', 'Value', 'Stake']\n\n# Company List (Table)\ncompany_list[cols] = company_list[cols].replace({'\\$': '', ' ': '', '%': '', ',': ''}, regex=True)","94fdd3cb":"company_list.drop(company_list.tail(1).index,inplace=True)","e39439b5":"# company_list dataframe\nfor x in cols:\n    company_list[x] = company_list[x].astype(float)","5a040e8a":"company_list_stocks = [AMZN,AXP,AAPL,AXTA,BAC,BK,GOLD,BIIB,CHTR,KO,COST,DVA,GM,GL,JNJ,JPM,KHC,KR,LBTYA,LBTYK,LILA,LILAK,LSXMA,\n                       LSXMK,MTB,MA,MDLZ,MCO,PNC,PG,RH,SIRI,SNOW,SPY,STNE,STOR,SU,SYF,TEVA,USB,UPS,VOO,VRSN,V,WFC]\n\ntickers = ['AMZN','AXP','AAPL','AXTA','BAC','BK','GOLD','BIIB','CHTR','KO','COST','DVA','GM','GL','JNJ','JPM','KHC','KR',\n           'LBTYA','LBTYK','LILA','LILAK','LSXMA','LSXMK','MTB','MA','MDLZ','MCO','PNC','PG','RH','SIRI','SNOW','SPY','STNE',\n           'STOR','SU','SYF','TEVA','USB','UPS','VOO','VRSN','V','WFC']\n\ntickers2 = ['BRKA','BRKB']\n\ncompany_stocks = pd.concat(company_list_stocks, axis=1, keys=tickers)\n\nberkshire_hathaway = pd.concat([BRKA, BRKB], axis=1, keys=tickers2)\n\n# Set the column name levels:\ncompany_stocks.columns.names = ['Stock Ticker','Stock Info']\ncompany_stocks.head()","183bb1f6":"berkshire_hathaway.columns.names = ['Stock Ticker','Stock Info']\nberkshire_hathaway.head()","df2b6172":"fig = go.Figure()\nfig.add_trace(go.Pie(values=company_list['Holdings'],labels=company_list['Symbol'], hole=.3, pull=[0, 0, 0, 0, 0.1]))\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(height=700)\nfig.show()","ceae60e9":"order_value = company_list[['Symbol', 'Value']].sort_values('Value', ascending=False)\n\nfigure = px.bar(order_value, y=order_value['Symbol'], x=order_value['Value'], color='Symbol', \n                title='Bar Chart - Value per Company of Warren Buffett Portfolio')\nfigure.update_layout(showlegend=False)\nfigure.show()","0c8882d2":"order_value['Percentage'] = round((order_value['Value'] \/ order_value['Value'].sum()) * 100,2)\norder_value[['Symbol','Percentage']].head(7).style.background_gradient(cmap='Blues').hide_index()","2dba3e97":"company_list[['Symbol', 'Stake']].sort_values('Stake', ascending=False).head(5).style.background_gradient(cmap='Greens').hide_index()","321261ff":"top5_stake = company_list[['Symbol', 'Stake']].sort_values('Stake', ascending=False).head(5)\n\nfigure = px.bar(top5_stake, y=top5_stake['Symbol'], x=top5_stake['Stake'], color='Symbol', \n                title='Bar Chart - Top 5 Stakes per Company of Warren Buffett Portfolio')\nfigure.update_layout(showlegend=False)\nfigure.show()","3acd94d8":"returns = pd.DataFrame()\n\nfor tick in tickers:\n    returns[tick + ' Return'] = company_stocks[tick]['Close'].pct_change()\n    \nreturns['BRKA Return'] = BRKA['Close'].pct_change()\nreturns['BRKB Return'] = BRKB['Close'].pct_change()\nreturns['GSPC Return'] = GSPC['Close'].pct_change()","dac440ca":"monthly_returns = pd.DataFrame()\n\nfor tick in tickers:\n    monthly_returns[tick + ' Return'] = company_stocks[tick]['Close'].resample('M').ffill().pct_change()\n    \nmonthly_returns['BRKA Return'] = BRKA['Close'].resample('M').ffill().pct_change()\nmonthly_returns['BRKB Return'] = BRKB['Close'].resample('M').ffill().pct_change()\nmonthly_returns['GSPC Return'] = GSPC['Close'].resample('M').ffill().pct_change()","0cecc5e5":"yearly_returns = pd.DataFrame()\n\nfor tick in tickers:\n    yearly_returns[tick + ' Return'] = company_stocks[tick]['Close'].resample('Y').ffill().pct_change()\n    \nyearly_returns['BRKA Return'] = BRKA['Close'].resample('Y').ffill().pct_change()\nyearly_returns['BRKB Return'] = BRKB['Close'].resample('Y').ffill().pct_change()\nyearly_returns['GSPC Return'] = GSPC['Close'].resample('Y').ffill().pct_change()","c4dd115a":"cumulative_returns = pd.DataFrame()\n\nfor tick in tickers:\n    cumulative_returns[tick + ' Return'] = (returns[tick + ' Return'] + 1).cumprod()\n    \ncumulative_returns['BRKA Return'] = (returns['BRKA Return'] + 1).cumprod()\ncumulative_returns['BRKB Return'] = (returns['BRKB Return'] + 1).cumprod()\ncumulative_returns['GSPC Return'] = (returns['GSPC Return'] + 1).cumprod()","7d59b304":"yearly_cumulative_returns = pd.DataFrame()\n\nfor tick in tickers:\n    yearly_cumulative_returns[tick + ' Return'] = (yearly_returns[tick + ' Return'] + 1).cumprod()\n    \nyearly_cumulative_returns['BRKA Return'] = (yearly_returns['BRKA Return'] + 1).cumprod()\nyearly_cumulative_returns['BRKB Return'] = (yearly_returns['BRKB Return'] + 1).cumprod()\nyearly_cumulative_returns['GSPC Return'] = (yearly_returns['GSPC Return'] + 1).cumprod()","f99fe06a":"best_yearly_cum = yearly_cumulative_returns.loc['2020-12-31'].sort_values(ascending=False).head(10)\nfigure = px.bar(best_yearly_cum, title='Best Yearly Cumulative Returns in 2020', \n                labels={'value':'Yearly Cumulative Returns', 'index':'Stocks'})\nfigure.update_layout(showlegend=False)\nfigure.show()","156ac43f":"returns.std().sort_values(ascending=False).plot(kind='bar', color='green', figsize=(16,6))\nplt.ylabel('Standard Deviation', fontsize=15)\nplt.title('Daily Stocks Standard Deviation', fontsize=18)\nsns.despine()","e03cb7d9":"yearly_returns.std().sort_values(ascending=False).plot(kind='bar', color='green', figsize=(16,6))\nplt.ylabel('Standard Deviation', fontsize=15)\nplt.title('Yearly Stocks Standard Deviation', fontsize=18)\nsns.despine()","2c37f8d7":"returns_2020 = returns.loc['2020-01-01':'2020-12-31'].std().head(10).sort_values(ascending=False)\nfigure = px.bar(returns_2020, title='Most Volatile Stocks 2020', \n                labels={'value':'Standard Deviation', 'index':'Stocks'})\nfigure.update_layout(showlegend=False)\nfigure.show()","dd35d8d1":"fig, axes = plt.subplots(2, 2,figsize=(15,10))\nsns.distplot(returns.loc['2020-01-01':'2020-12-31']['AXP Return'], color='green', bins=50, ax=axes[0,0])\nsns.distplot(returns.loc['2020-01-01':'2020-12-31']['BAC Return'], color='blue', bins=50, ax=axes[0,1])\nsns.distplot(returns.loc['2020-01-01':'2020-12-31']['AXTA Return'], color='orange', bins=50, ax=axes[1,0])\nsns.distplot(returns.loc['2020-01-01':'2020-12-31']['GOLD Return'], color='purple', bins=50, ax=axes[1,1])\nsns.despine()\naxes[0,0].set(xlabel='Standard Deviation', ylabel='Returns', title='American Express')\naxes[0,1].set(xlabel='Standard Deviation', ylabel='Returns', title='Bank of America')\naxes[1,0].set(xlabel='Standard Deviation', ylabel='Returns', title='Axalta Coating Systems')\naxes[1,1].set(xlabel='Standard Deviation', ylabel='Returns', title='Barrick Gold')","56033e01":"sns.set(style=\"whitegrid\", font_scale=1)\nplt.figure(figsize=(15,15))\nplt.title('Pearson Correlation Matrix',fontsize=25)\nsns.heatmap(company_stocks.xs(key='Adj Close', axis=1, level='Stock Info').corr(),linewidths=0.1,\n            square=True,cmap=\"GnBu\",linecolor='w', annot=False, cbar_kws={\"shrink\": .7})","efb10c61":"sns.clustermap(company_stocks.xs(key='Adj Close', axis=1, level='Stock Info').corr(), cmap='coolwarm', figsize=(15,15),\n              linewidths=0.1, linecolor='w')","d0d82955":"\"\"\"\nurl_profile = 'https:\/\/finance.yahoo.com\/quote\/{}\/profile?p={}'\n\nstock = ['AMZN','AXP','AAPL','AXTA','BAC','BK','GOLD','BIIB','CHTR','KO','COST','DVA','GM','GL','JNJ','JPM','KHC','KR',\n         'LBTYA','LBTYK','LILA','LILAK','LSXMA','LSXMK','MTB','MA','MDLZ','MCO','PNC','PG','RH','SIRI','SNOW','SPY','STNE',\n         'STOR','SU','SYF','TEVA','USB','UPS','VOO','VRSN','V','WFC']\n\n# Create the csv file\nf = open('stock_profile.csv', 'w', encoding='utf-8')\n\n# First line of the csv file.\nheaders = 'Name;Symbol;Sector;Industry;Num_Employees\\n'\nf.write(headers)  \n\ncount = 0\nfor i in range(0,45):\n    \n    response = requests.get(url_profile.format(tickers[i], tickers[i]))\n    soup = bs4.BeautifulSoup(response.text, 'html.parser')\n\n    pattern = re.compile(r'\\s--\\sData\\s--\\s')\n    script_data = soup.find('script', text=pattern).contents[0]\n\n    start = script_data.find('context')-2 # Beginning\n    json_data = json.loads(script_data[start:-12]) # End\n    \n    longName = json_data['context']['dispatcher']['stores']['QuoteSummaryStore']['quoteType']['longName']\n    symbol = json_data['context']['dispatcher']['stores']['QuoteSummaryStore']['quoteType']['symbol']\n    \n    # Since SPY and VOO are not stocks they have a different profile page.\n    if count == 33 or count == 41:\n        sector = 'NaN'\n        industry = 'NaN'\n        fullTimeEmployees = 'NaN'\n    else:    \n        sector = json_data['context']['dispatcher']['stores']['QuoteSummaryStore']['assetProfile']['sector']\n        industry = json_data['context']['dispatcher']['stores']['QuoteSummaryStore']['assetProfile']['industry']\n\n        if 'fullTimeEmployees' in json_data['context']['dispatcher']['stores']['QuoteSummaryStore']['assetProfile'].keys():  \n            fullTimeEmployees = str(json_data['context']['dispatcher']['stores']['QuoteSummaryStore']['assetProfile']['fullTimeEmployees'])\n        else:\n            fullTimeEmployees = 'NaN'\n    \n    # Let's write the data into the file.\n    f.write(longName.replace(',',' ') + ';' + symbol + ';' + sector + ';' + industry + ';' + fullTimeEmployees + '\\n')\n    \n    count += 1\n    print(count)\n    \nprint('Finish')\nf.close()\n\"\"\"","13acafa0":"# Load the new file\nstock_profile = pd.read_csv('..\/input\/warren-buffett-us-stock-companies\/stock_profile.csv',sep=';')\n\n# Drop Mutual Funds\nstock_profile.drop(index=33 ,axis=0, inplace=True)\nstock_profile.drop(index=41 ,axis=0, inplace=True)","ff1c0c08":"stock_profile['Num_Employees'] = stock_profile['Num_Employees'].fillna(10851)\nstock_profile","f5ada366":"fig = px.sunburst(stock_profile, path=['Sector', 'Industry','Symbol'], height=800)\nfig.update_layout(title={\n    'text': \"Sectors and Industries of Warren Buffett Portfolio\",\n    'y':0.97,\n    'x':0.5,\n    'xanchor': 'center',\n    'yanchor': 'top'},\n    showlegend=False)\nfig.show()","b51b84c8":"company_list2 = company_list[['Symbol', 'Value']]\n\n# Drop SPY and VOO\ncompany_list2.drop(index=33 ,axis=0, inplace=True)\ncompany_list2.drop(index=41 ,axis=0, inplace=True)\n\ncompany_list3 = pd.merge(company_list2,stock_profile,how='inner',on='Symbol')\n\ncompany_list3.drop(columns='Name', inplace=True)","e5251a6f":"fig = px.sunburst(company_list3, path=['Sector', 'Industry','Symbol'], values='Value', height=800)\nfig.update_layout(title={\n    'text': \"Sectors and Industries of Warren Buffett Portfolio\",\n    'y':0.97,\n    'x':0.5,\n    'xanchor': 'center',\n    'yanchor': 'top'},\n    showlegend=False)\nfig.show()","ec028061":"sns.set(style=\"whitegrid\", font_scale=1)\nfig, axes = plt.subplots(2, 2,figsize=(15,10))\n\nsns.lineplot(data=yearly_cumulative_returns.loc['2011-12-31':'2020-12-31']['BRKA Return'], color='blue', lw=2, ax=axes[0,0])\nsns.scatterplot(data=yearly_returns.loc['2011-12-31':'2020-12-31']['BRKA Return'], color='blue', ax=axes[0,1])\n\nsns.lineplot(data=yearly_cumulative_returns.loc['2011-12-31':'2020-12-31']['GSPC Return'], color='orange', lw=2, ax=axes[1,0])\nsns.scatterplot(data=yearly_returns.loc['2011-12-31':'2020-12-31']['GSPC Return'], color='orange', ax=axes[1,1])\n\nsns.despine()\n\naxes[0,0].set(xlabel='Years', ylabel='Cumulative Returns', title='Berkshire Hathaway Class A')\naxes[0,1].set(xlabel='Years', ylabel='Returns', title='Berkshire Hathaway Class A')\naxes[1,0].set(xlabel='Years', ylabel='Cumulative Returns', title='S&P 500')\naxes[1,1].set(xlabel='Years', ylabel='Returns', title='S&P 500')","31a6cdcb":"BRKA['Adj Close'].loc['2010-11-01':'2020-09-30'].iplot(fill=True,colors=['green'], ax=axes[0])\nGSPC['Adj Close'].loc['2010-11-01':'2020-09-30'].iplot(fill=True,colors=['blue'], ax=axes[1])","081c1b97":"fig = make_subplots(rows=3, cols=2)\n\ntrace0 = go.Histogram(x=returns.loc['2019-01-01':'2020-12-31']['AAPL Return'], nbinsx=50, name=\"AAPL\")\ntrace1 = go.Histogram(x=returns.loc['2019-01-01':'2020-12-31']['KO Return'], nbinsx=50, name=\"KO\")\ntrace2 = go.Histogram(x=returns.loc['2019-01-01':'2020-12-31']['BAC Return'], nbinsx=50, name=\"BAC\")\ntrace3 = go.Histogram(x=returns.loc['2019-01-01':'2020-12-31']['AXP Return'], nbinsx=50, name=\"AXP\")\ntrace4 = go.Histogram(x=returns.loc['2019-01-01':'2020-12-31']['KHC Return'], nbinsx=50, name=\"KHC\")\ntrace5 = go.Histogram(x=returns.loc['2019-01-01':'2020-12-31']['MCO Return'], nbinsx=50, name=\"MCO\")\n\nfig.append_trace(trace0, 1, 1)\nfig.append_trace(trace1, 1, 2)\nfig.append_trace(trace2, 2, 1)\nfig.append_trace(trace3, 2, 2)\nfig.append_trace(trace4, 3, 1)\nfig.append_trace(trace5, 3, 2)\n\nfig.update_layout(title_text='Stocks Returns (2019 - 2020)')\n\nfig.show()","b115f8f8":"AMZN.loc['2010-01-01':'2020-12-31']['Adj Close'].ta_plot(study='sma', periods=[13,21,55])","2ac4572d":"# Bank of America Candlestick Chart\nfig = go.Figure(data=[go.Candlestick(x=BAC.index,\n                open=BAC['Open'],\n                high=BAC['High'],\n                low=BAC['Low'], \n                close=BAC['Close'])\n                ])\n\nfig.update_layout(\n    title='Bank of Amercia Stock Price',\n    yaxis_title='BAC Stock',\n    shapes = [dict(\n        x0='2009-01-20', x1='2009-01-20', y0=0, y1=1, xref='x', yref='paper', line_width=2),\n             dict(\n        x0='2007-12-01', x1='2007-12-01', y0=0, y1=1, xref='x', yref='paper', line_width=2)],\n    annotations=[dict(\n        x='2009-01-20', y=0.95, xref='x', yref='paper',\n        showarrow=False, xanchor='left', text='President Obama Took Office'), \n                 dict(\n        x='2007-12-01', y=0.1, xref='x', yref='paper',\n        showarrow=False, xanchor='right', text='Subprime Mortgage Crisis')]\n)\n\nfig.show()","a2458233":"AAPL.loc['2010-01-01':'2020-01-01']['Adj Close'].ta_plot(study='boll',periods=14, title='Bollinger Bands')","4e667d19":"# Citigroup OHLC Chart\nfig = go.Figure(data=go.Ohlc(x=KO.index,\n                    open=KO['Open'],\n                    high=KO['High'],\n                    low=KO['Low'],\n                    close=KO['Close']))\n\nfig.update_layout(\n    title='Coca-Cola Stock Price',\n    yaxis_title='KO Stock',\n    shapes = [dict(\n        x0='2009-01-20', x1='2009-01-20', y0=0, y1=1, xref='x', yref='paper', line_width=2),\n             dict(\n        x0='2007-12-01', x1='2007-12-01', y0=0, y1=1, xref='x', yref='paper', line_width=2)],\n    annotations=[dict(\n        x='2009-01-20', y=0.95, xref='x', yref='paper',\n        showarrow=False, xanchor='left', text='President Obama Took Office'), \n                 dict(\n        x='2007-12-01', y=0.1, xref='x', yref='paper',\n        showarrow=False, xanchor='right', text='Subprime Mortgage Crisis')]\n)\n\nfig.show()","30d287d5":"## 5.6 OHLC Charts\n\n### OHLC Charts - Coca-Cola Stock Price\nDocumentation: [OHLC Charts in Python](https:\/\/plotly.com\/python\/ohlc-charts\/)\n\nThe OHLC chart (for open, high, low and close) is a style of financial chart describing open, high, low and close values for a given x coordinate (most likely time). The tip of the lines represent the low and high values and the horizontal segments represent the open and close values. Sample points where the close value is higher (lower) then the open value are called increasing (decreasing). By default, increasing items are drawn in green whereas decreasing are drawn in red.\n\nYou can find more information [here.](https:\/\/www.investopedia.com\/terms\/o\/ohlcchart.asp) \n\n<img src=\"http:\/\/www.saturn.network\/blog\/content\/images\/2019\/01\/ohcl.png\" width=\"300\" height=\"300\"\/>\n\n* Warren Buffett bought more than `$1` billion of Coca-Cola (KO) shares in 1988, an amount equivalent to 6.2% of the company, making it the largest position in his portfolio at the time.\n* It remains one of Berkshire Hathaway's biggest holdings today, as of October 2019, holding the number three spot.\n* The stock market crash of 1987 had created attractive valuations, as all types of stocks were sold off with little regard to fundamentals. \n* After the stock market crash, Coca-Cola stock had been hit hard along with so many other companies.\n* Buffett & Co. determined it was a good company, had great value, could withstand competition, and was poised to recover.","4297bc50":"## 5.2 Histograms Charts\n\n### Histograms - Stocks Returns\nWe can also use plotly to show histograms. In this case we are showing the return of the stocks with the highest value in the portfolio from 2019 to 2020. You can interact with the charts by clicking and dragging.\n\n* We can see that the behavior regarding the distribution in returns is quite similar between the 6 companies.\n* In the majority the return is centered between -0.1 and 0.1.\n* However, there are exceptions like KHC and AXP that reach 0.2\n\nDocumentation:[Histograms in Python](https:\/\/plotly.com\/python\/histograms\/)","56e668f3":"## Feedback\n* **Your feedback is much appreciated**\n* **<b><font color='green'>Please UPVOTE if you LIKE this notebook<\/font><\/b>**\n* **Comment if you have any doubts or you found any errors in the notebook**","2fe87afd":"## 3.4 Stocks Pearson Correlation Matrix\nWe use the [Pearson correlation coefficient](https:\/\/en.wikipedia.org\/wiki\/Pearson_correlation_coefficient#:~:text=In%20statistics%2C%20the%20Pearson%20correlation,between%20%2B1%20and%20%E2%88%921.) to examine the strength and direction of the linear relationship between two continuous variables.\n\nThe correlation coefficient can range in value from \u22121 to +1. The larger the absolute value of the coefficient, the stronger the relationship between the variables. For the Pearson correlation, an absolute value of 1 indicates a perfect linear relationship. A correlation close to 0 indicates no linear relationship between the variables. \n\nThe sign of the coefficient indicates the direction of the relationship. If both variables tend to increase or decrease together, the coefficient is positive, and the line that represents the correlation slopes upward. If one variable tends to increase as the other decreases, the coefficient is negative, and the line that represents the correlation slopes downward.\n\nLet's create a heatmap of the correlation between the stocks Adj Close Price.","3b8f77e8":"### Bar Chart - Yearly Stocks Standard Deviation \nIf we plot the same data but with the yearly returns, the riskiest stocks are RH, GOLD, STNE and BAC. ","b1672fa5":"<a id=\"ch6\"><\/a>\n# 6. Predictions and Conclusion\n---\n## 6.1 Investment Recommendations","2196d2e7":"### Bar Chart - Daily Stocks Standard Deviation \n\n***Which stock would you classify as the riskiest over the entire time period?***\n* Looking the daily returns the riskiest stocks are STNE, SNOW, LILAK and RH. ","8bd1d0df":"### Bar Chart - Best Yearly Cumulative Returns in 2020","d76476ea":"## 5.4 Candlestick Charts\n\n### Candlestick Chart - Bank of America Stock Price\n\nDocumentation: [Candlestick Charts in Python](https:\/\/plotly.com\/python\/candlestick-charts\/)\n\nThe candlestick chart is a style of financial chart describing open, high, low and close for a given x coordinate (most likely time). The boxes represent the spread between the open and close values and the lines represent the spread between the low and high values. Sample points where the close value is higher (lower) then the open value are called increasing (decreasing). By default, increasing candles are drawn in green whereas decreasing are drawn in red.\n\nYou can learn more about Candlestick Charts [here.](https:\/\/www.investopedia.com\/trading\/candlestick-charting-what-is-it\/#:~:text=in%20candlestick%20charts.-,Candlestick%20Components,close%20of%20that%20day's%20trading.)\n\n* President Obama took office on Jan. 20, 2009. [(More information here)](https:\/\/www.investopedia.com\/ask\/answers\/101314\/where-was-dow-jones-when-obama-took-office.asp)\n* The [subprime mortgage crisis](https:\/\/en.wikipedia.org\/wiki\/Subprime_mortgage_crisis) had a mayor part in the decline of prices.\n* Markets had little confidence in the economy and the future was uncertain.\n* The banking sector in general declining by 30%.\n* Bank of America Corporation (BAC) dropped 29%.\n* The S&P 500 and the Nasdaq took similar hits on inauguration day, dropping 5.3% and 5.8%, respectively.\n* Warren Buffett bought a large number of shares of BAC in 2011. ","74136882":"### Sunburst Chart - Sectors and Industries by Value of Warren Buffett Portfolio\nNow we can see the sectors and industries in relation to the value of the companies. We can notice a big change in the importance of the sectors. \n\nThe previous graph gave the impression that financial services was the largest sector, however, the technology sector is the largest due to the large investment that Berkshire Hathaway has in Apple.\n\nIn any case, the financial services sector continues to be quite important in the portfolio, occupying second place.","fd3e2688":"Remove spaces, % and $ sign from `company_list` dataframe. ","da044b31":"### Bar Chart - Most Volatile Stocks 2020","87964cff":"## 5.5 Bollinger Band Charts\n\n### Bollinger Band Chart - Apple Stock Price\nA [Bollinger Band](https:\/\/www.fidelity.com\/learning-center\/trading-investing\/technical-analysis\/technical-indicator-guide\/bollinger-bands#:~:text=Bollinger%20Bands%20are%20envelopes%20plotted,Period%20and%20Standard%20Deviations%2C%20StdDev.) is a technical analysis tool defined by a set of trendlines plotted two standard deviations (positively and negatively) away from a simple moving average (SMA) of a security's price, but which can be adjusted to user preferences.\n\n* When the bands tighten during a period of low volatility, it raises the likelihood of a sharp price move in either direction.\n* When the bands separate by an unusual large amount, volatility increases and any existing trend may be ending.\n* Prices have a tendency to bounce within the bands' envelope, touching one band then moving to the other band. You can use these swings to help identify potential profit targets.\n\nUse `.ta_plot(study='boll')` to create a Bollinger Band Plot for Apple.\n\n* Berkshire bought its first 10 million Apple shares in May 2016.","171c3bc1":"### Line and Scatter Plot Chart - Annual Total Returns (BRKA and GSPC)\nIn the line charts we can see the yearly cumulative returns from Berkshire Hathaway and the S&P500. The scatterplot shows the yearly return.","c93fa9b9":"## 3.5 Stocks Cluster Map \nNow we can use the same correlation of above to plot a [clustermap.](https:\/\/seaborn.pydata.org\/generated\/seaborn.clustermap.html) ","815354ee":"Remove the last row of the `company_list` dataframe. ","cf75a6fd":"### Daily Returns DataFrame\nNow we are going to create a new empty DataFrame called returns. This dataframe will contain the returns for each stock. \n\nReturns are typically defined by:\n\n$$r_t = \\frac{p_t - p_{t-1}}{p_{t-1}} = \\frac{p_t}{p_{t-1}} - 1$$\n\nWe can use pandas `pct_change()` method on the Close column to create a column representing this return value. Then we can create a for loop and for each Stock Ticker creates a returns column and set's it as a column in the returns DataFrame.\n\nOur first value has NaN because you can not get a percent return on the very first day because there is nothing in the past to compare it to.","df599f37":"<hr\/>\n\n# EDA - Warren Buffett US Stock Companies\n### **[by Tomas Mantero](https:\/\/www.kaggle.com\/tomasmantero)**\n<hr\/>\n\n### Table of Contents\n* **1. [Introduction](#ch1)**\n* **2. [Data preparation](#ch2)**\n    * 2.1 Load Data\n    * 2.2 Check Features\n    * 2.3 Clean Dataframes\n    * 2.4 Concatenate The Stock Dataframes\n* **3. [Exploratory Data Analysis](#ch3)**\n    * 3.1 Warren Buffett Portfolio\n    * 3.2 New Return Dataframes\n    * 3.3 Standard Deviation\n    * 3.4 Stocks Pearson Correlation Matrix\n    * 3.5 Stocks Cluster Map\n* **4. [Web Scraping Yahoo Finance](#ch4)**\n    * 4.1 Sector, Industry and Number of Employees\n    * 4.2 Load New Data\n    * 4.3 Sunburst Charts Sectors and Industries\n* **5. [Financial Charts](#ch5)**\n    * 5.1 Line Charts\n    * 5.2 Histograms Charts\n    * 5.3 Moving Averages Charts\n    * 5.4 Candlestick Charts\n    * 5.5 Bollinger Band Charts\n    * 5.6 OHLC Charts\n* **6. [Predictions and Conclusion](#ch6)**\n    * 6.1 Investment Recommendations\n* **7. [References](#ch7)**","f8a6cda5":"## 2.2 Check Features \nFirst, check the data frames features to see if there is any problem in the data load.","f31b1ffe":"## 3.1 Berkshire Hathaway Portfolio\n\n### Pie Chart - Holdings per Company of Warren Buffett Portfolio\n* The top 5 holdings in Berkshire Hathaway portfolio are:\n    - Bank of America Corp\n    - Apple Inc\n    - The Coca-Cola Company\n    - Kraft Heinz Co\n    - American Express Company","dee0a511":"## 2.3 Clean Dataframes","4e10d010":"<a id=\"ch4\"><\/a>\n# 4. Web Scraping Yahoo Finance - Stocks Profile\n---\n## 4.1 Sector, Industry and Number of Employees\nWe are going to make a new datafram with all the companies from Warren Buffett porfolio. We are going to make a list with all the companies and their Sector, Industry and Number of Employees.\n\nTo quickly take this information we are going to do a web scraping in yahoo finance.\n\nFirst, select the url from the profile page of the stock. Then replace the stock symbols with curly brackets. This will allow us to insert whatever symbol we want with string formatting.","740770fa":"***Company List***\n-\t**Name:** Name of the company. \n-\t**Symbol:** Ticker symbol of the company. \t\n-\t**Holdings:** Number of shares.\n-\t**Market Price:** Current price at which a stock can be purchased or sold. (10\/18\/20)\n-\t**Value:** (Holdings * Market Price).  \n-\t**Stake:** The amount of stocks an investor owns from a company. ","2a1bf98e":"### Bar Chart - Top 5 Stakes per Company of Warren Buffett Portfolio\n* Stake is the amount of stocks an investor owns from a company. \n* The biggest stake of Warren Buffett portfolio is 28.6% in Davita. \n* This means that Berkshire Hathaway owns 28.6% of DVA. \n* Kraft Heinz is in second place with 26.6% and American Express in third with 18.8%.\n* Liberty Sirius XM Group Series C and Liberty Sirius XM Group Series A come in fourth and fifth place respectively.","4d107485":"### Dist Plot - 2020 AXP, BAC, AXTA and GOLD Standard Deviation","6ce3f95b":"### Monthly Returns DataFrame","8ef98ba0":"## 2.1 Load Data\nThere are two ways to load the data. The first is to simply read the csv files. The second is to use pandas dataerder which allows you to read stock information directly from the internet. In this case we will use Yahoo Finance. \n\n**Documentation: [Remote Data Access](https:\/\/pandas-datareader.readthedocs.io\/en\/latest\/remote_data.html)**","74e24454":"Let's fill in the missing values by looking the companies on wikipedia.\n\n* Barrick Gold Corporation (GOLD): 18421\n* The Liberty SiriusXM Group (LSXMA): 6667\n* The Liberty SiriusXM Group (LSXMK): 6667\n* StoneCo Ltd. (STNE): 3000\n* Visa Inc. (V): 19500\n* Mean: 10851","5c9607c9":"\n## 3.2 New Return Dataframes","1dedecb6":"### Line Chart - Berkshire Hathaway vs S&P500\nThese charts show the Adj Close price over time of Berkshire Hathaway Class A and the S&P500. \n\nYou can interact with the charts by clicking and dragging.","f762ffc1":"### Cumulative Returns\nTo calculate the cumulative returns we will use the `cumprod()` function.\n\nDocumentation: [pandas.DataFrame.cumprod()](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.cumprod.html)","ee20400a":"<a id=\"ch7\"><\/a>\n# 7. References\n---\n\n* [Yahoo Finance](https:\/\/finance.yahoo.com\/) | Profile Stock Data\n* [SEC EDGAR](https:\/\/www.sec.gov\/edgar\/searchedgar\/companysearch.html) | Company Filings\n* [NASDAQ](https:\/\/www.nasdaq.com\/) | Historical Quotes\n* [Financial Terms Dictionary](https:\/\/www.investopedia.com\/financial-term-dictionary-4769738) | Comprehensive financial terms dictionary with over 13,000 finance and investment definitions.\n* [Fidelity](https:\/\/fundresearch.fidelity.com\/mutual-funds\/summary\/316390681) | Mutual Funds Examples","784aaaa3":"## 4.3 Sunburst Charts - Sectors and Industries\n\n### Sunburst Chart - Sectors and Industries of Warren Buffett Portfolio \nThe sunburst chart is ideal for displaying hierarchical data. Sunburst plots visualize hierarchical data spanning outwards radially from root to leaves. The root starts from the center and children are added to the outer rings.\n\nThe chart describe the relationship between 'Sector' and 'Industry'. You can click on the 'Sector' in the chart below to expand or contract it. \n\n* The Financial Service Sector is the biggest in Berkshire Hathaway portfolio. It include 13 companies. \n* The biggest industries are also in the financial service sector, which are Credit Services, Banks\u2014Diversified and Banks\u2014Regional.\n* The second largest sector is Communication Services.\n\n[Sunburst Charts in Python](https:\/\/plotly.com\/python\/sunburst-charts\/)\n","f3533d56":"Every company file has the same structure with the same columns: \n-\t**Date:** It is the date on which the prices were recorded.\n-\t**Close\/Last:** Is the last price at which a stock trades during a regular trading session.\n-\t**Volume:** Is the number of shares that changed hands during a given day.\n-\t**Open:** Is the price at which a stock started trading when the opening bell rang.\n-\t**High:** Is the highest price at which a stock traded during the course of the trading day.\n-\t**Low:** Is the lowest price at which a stock traded during the course of the trading day.\n- **Adj Close:** The adjusted closing price factors in corporate actions, such as stock splits, dividends, and rights offerings.\n\n<img src=\"https:\/\/analyzingalpha.com\/assets\/images\/posts\/2020-04-17-bar-chart-ohlc.png\" alt=\"Bar Chart OHLC\" width=\"300\" height=\"300\"\/>","358b3d91":"## 3.3 Stock Standard Deviation\nLet's take a look at the standard deviation of the returns.\n\n**[Standard Deviation](https:\/\/en.wikipedia.org\/wiki\/Standard_deviation):** Is a measure of the amount of variation or dispersion of a set of values. A low standard deviation indicates that the values tend to be close to the mean of the set, while a high standard deviation indicates that the values are spread out over a wider range.\n\nStandard deviation is the statistical measure of market volatility, measuring how widely prices are dispersed from the average price. If prices trade in a narrow trading range, the standard deviation will return a low value that indicates low volatility. Conversely, if prices swing wildly up and down, then standard deviation returns a high value that indicates high volatility.\n\n**Basically, standard deviation rises as prices become more volatile. As price action calms, standard deviation heads lower.**","f3acc866":"### Imports","8eaefc03":"### Yearly Cumulative Returns","81029d36":"Finally, convert the numbers, which are as strings, to floats.","74a7c7db":"<a id=\"ch5\"><\/a>\n# 5. Financial Charts\n---\n## 5.1 Line Charts","65148bea":"<a id=\"ch2\"><\/a>\n# 2. Data preparation\n---","cbe17240":"### Bar Chart - Value per Company of Warren Buffett Portfolio\n* Warren Buffett lagers position is Apple Inc. \n* Apple makes up 49.29% of Berkshire Hathaway portfolio and they own 119 Billion dollars worth of apple stock. \n* The second biggest stock of Berkshire Hathaway portfolio is Bank of America Corp, which is the biggest bank in America. \n* Bank of America makes up 10.33% of Berkshire Hathaway portfolio and the total value of this position is 25 Billion dollars. \n* Warren Buffett has been buying BAC for a long time. He started back in 2011 when the bank was struggling after the financial crisis. \n* The third biggest stock is Coca-Cola Company, which makes up 8.26% of Warren Buffett portfolio. He started investing in Coca-Cola in 1989. The value of this position is 20 Billion dollars.","f54ee318":"***SEC Form 13F***\n\n**Name of Issuer, Title of Class, CUSIP Number, Market Value, Amount and Type of Security, Investment Discretion (Sole, Shared-Defined, Shared-Other), Other Managers, Voting Authority.**\n\nYou can find detail information of each column in the SEC [General Instructions Form 13F](https:\/\/www.sec.gov\/pdf\/form13f.pdf) in page 5. ","2027845e":"## 2.4 Concatenate The Stock Dataframes\n\nWe are going to concatenate the stock dataframes together to a single data frame called `company_stocks`. This will help us to have better control over the dataframes and it will allow us to analyze it together.\n\nWe will also create an aditional dataframe called `berkshire_hathaway` with Class A stock (BRK-A) and Class B stock (BRK-B).\n\nLet's create a list of the ticker symbols (as strings) in alphabetical order.","fef6a576":"## 4.2 Load New Data","9c5807c7":"<a id=\"ch1\"><\/a>\n# 1. Introduction\n---\nIn this notebook we will be analyzing the companies that make up Warren Buffett's portfolio. We will analyze their behaviors over the past few years, as well as their behaviors during the COVID-19 Pandemic.\n\nWe will try to determine new trends that can help investors make more informed decisions.\n\nThis Notebook follows five main parts:\n\n* The data preparation\n* The exploratory data analysis\n* The web scraping\n* The financial charts\n* The Predictions and Conclusions\n\n<img src=\"https:\/\/wallpapercave.com\/wp\/wp3746394.jpg\" width=\"500\" height=\"500\"\/>\n<br>\n\n*Note: The analysis of Warren Buffett's portfolio was conducted on October 16, 2020. It is possible that when you read this notebook there are a couple of outdated data, anyway, I will try to keep the notebook updated.*","6cd01353":"### Yearly Returns DataFrame","a677791f":"<a id=\"ch3\"><\/a>\n# 3. Exploratory Data Analysis\n---\n\n[Exploratory data analysis](https:\/\/en.wikipedia.org\/wiki\/Exploratory_data_analysis) is an approach to analyze data sets to summarize their main characteristics, often with visual methods. In this case we are going to visualize and analyze the historical data of these stocks and try to find relevant information.\n\nWe will also analyze the stock portfolio to see which are the most relevant companies and which are the most profitable. \n\nI encourage you to check out the documentation on [Multi-Level Indexing](http:\/\/pandas.pydata.org\/pandas-docs\/stable\/advanced.html) and [Using .xs](http:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.DataFrame.xs.html), since we will be using it a lot.","b1dc2fcc":"## 5.3 Moving Averages Charts\n\n### Simple Moving Averages - Amazon Stock Price\nA [Simple Moving Average (SMA)](https:\/\/www.investopedia.com\/terms\/s\/sma.asp) calculates the average of a selected range of prices, usually closing prices, by the number of periods in that range. Is a technical indicator that can aid in determining if an asset price will continue or if it will reverse a bull or bear trend.\n\nUse `.ta_plot(study='sma')` to create a Simple Moving Averages plot of Amazon. You can interact with the charts by clicking and dragging.\n\n* Berkshire started buying stock in the cloud-computing and e-commerce giant in the first quarter of 2019.\n* The company bought 483,300 shares of Amazon at the time. But Berkshire owned 537,300 shares as of the end of its second quarter. \n* This was a very good investment, since at the end of 2019 the price of AMZN was approximately `$1,500` and now it is at `$3,300.`\n* This means a return of 220% in almost one year, which is approximately `$967,140,000.`\n* Amazon\u2019s revenues increased from `$136` billion in 2016 to `$281` billion in 2019, mainly driven by the contribution of Retail revenue from the North America segment.\n* An improvement in net income margin from 1.7% in 2016 to 4.1% in 2019 helped net income swell 137% over the period."}}