{"cell_type":{"de4308f4":"code","d393375a":"code","8fd99f70":"code","1c9101bb":"code","bbefb992":"code","8b17649e":"code","b3970585":"code","10cbd417":"code","f700e9fd":"code","d28458eb":"code","e1504461":"code","ca134815":"code","31706c2e":"code","b560e70a":"markdown","4d543353":"markdown","9f07e1e6":"markdown","b63d4d48":"markdown","118304a2":"markdown","9af93169":"markdown","ab58c282":"markdown"},"source":{"de4308f4":"#import library\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import OneHotEncoder, LabelEncoder, StandardScaler","d393375a":"dt_train = pd.read_csv('..\/input\/coronaviruscovid19-canada\/cases.csv')\nprint('Training data shape is {}'.format(dt_train.shape))","8fd99f70":"dt_train.head(3)","1c9101bb":"drop_col = []\nfor col in dt_train.columns:\n    if dt_train[col].value_counts().iloc[0] \/ len(dt_train[col].dropna()) > 0.9:\n        drop_col.append(col)\ndrop_col","bbefb992":"#number of unique categories\nfor col_name in dt_train.columns:\n    print(col_name, dt_train[col_name].nunique())","8b17649e":"dt_train.drop(['case_id', 'provincial_case_id', 'case_source'], axis = 1, inplace = True)\ndt_train.head(3)","b3970585":"dt_columns = dt_train.columns.tolist()\nfig = plt.figure(figsize=(32,32))\nfor index,col in enumerate(dt_columns):\n    plt.subplot(4,4,index+1)\n    sns.countplot(x = dt_train[dt_columns].iloc[:,index], data = dt_train[dt_columns])\nfig.tight_layout(pad=1.0)","10cbd417":"#find null values percentages\nnull_percentage = dt_train.isnull().sum().sort_values(ascending = False)\/dt_train.shape[0]\nprint(null_percentage)","f700e9fd":"del_list = []\nfill_list = []\ntrain_columns = dt_train.columns.tolist()\nfor col in train_columns:\n    if null_percentage[col] >0.75:\n        del_list.append(col)\n    else:\n        fill_list.append(col)\ndel_list","d28458eb":"dt_train.drop(del_list, axis = 1, inplace = True)\ndt_train.sample(3)","e1504461":"#simplify this step, fill with a value\ndt_train['method_note'] = dt_train['method_note'].fillna(10000)\ndt_train.isnull().sum().sort_values(ascending = False)","ca134815":"#label incoder\ndt_train= dt_train.apply(lambda series: pd.Series(\n    LabelEncoder().fit_transform(series[series.notnull()]),\n    index=series[series.notnull()].index))\ndt_train.head(3)","31706c2e":"dt_train.to_csv('..\/..\/kaggle\/working\/Try_dataset_aftercleanning.csv', header=True, index=False)","b560e70a":"Since they are all categorical variable, draw raw graphs","4d543353":"<a id=\"1\"><\/a>\n1.prepare data","9f07e1e6":"# Simple data cleaning, Canada Covid-19\n### Jupyter notebook author: Tao Shan\n1. [prepare data](#1) \n2. [explore data](#2)\n3. [null value and data engineering](#3)\n4. [predicting model and submit solution](#4)","b63d4d48":"Since case_id , provincial_case_id and case_source are useless, drop them.","118304a2":"<a id=\"2\"><\/a>\n2.explore data","9af93169":"Since some of the values (not reported) is more than 90%, should be deleted ","ab58c282":"<a id=\"3\"><\/a>\n3. null value and data engineering"}}