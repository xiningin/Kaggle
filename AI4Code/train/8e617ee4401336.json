{"cell_type":{"2568c62e":"code","1c1f5718":"code","e3e9ae9e":"code","4972fd23":"code","f69a60b3":"code","5557629c":"code","7440cde2":"code","fa725a74":"code","13049fe5":"code","071c9e59":"code","8442f29c":"code","ddd03fab":"code","4f540248":"code","d36e1b79":"code","af57c7b7":"code","3df2fcc4":"code","c50629af":"code","b2851f7c":"code","a5857108":"code","d7b0ad85":"code","004d394a":"markdown","a2ab85f9":"markdown","00f32b56":"markdown","51979806":"markdown","1d9ff38a":"markdown","f65d1649":"markdown","b720e551":"markdown","721c9014":"markdown","3410a366":"markdown","01e26c67":"markdown","c786487e":"markdown","42d26362":"markdown","d3d40d3c":"markdown","71049546":"markdown","5f488f3e":"markdown","ce2ac729":"markdown","dc7bf795":"markdown","17ed65ab":"markdown","55b7168b":"markdown","dc575f4a":"markdown","c6debf90":"markdown"},"source":{"2568c62e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1c1f5718":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport pylab as pl\nimport numpy as np\n\n%matplotlib inline","e3e9ae9e":"df = pd.read_csv(\"..\/input\/fuelconsumption\/FuelConsumption_file.csv\")\ndf.head()","4972fd23":"df.drop(\"Unnamed: 0\", axis = 1, inplace = True)\ndf.head()","f69a60b3":"df.describe()","5557629c":"df.shape","7440cde2":"df.dtypes","fa725a74":"# check the missing value\ndf.isnull().sum()","13049fe5":"import missingno as msno","071c9e59":"msno.matrix(df)","8442f29c":"fuel = df[[\"ENGINESIZE\",\"CYLINDERS\",\"FUELCONSUMPTION_COMB\",\"CO2EMISSIONS\"]]\nfuel.head()","ddd03fab":"vizual = fuel\nvizual.hist()\nplt.show()","4f540248":"plt.scatter(fuel.FUELCONSUMPTION_COMB, fuel.CO2EMISSIONS, color = \"blue\")\nplt.xlabel(\"Fuel Consumption\")\nplt.ylabel(\"Emission\")\nplt.show()","d36e1b79":"plt.scatter(fuel.ENGINESIZE, fuel.CO2EMISSIONS, color = \"blue\")\nplt.xlabel(\"Engine Size\")\nplt.ylabel(\"Emission\")\nplt.show()","af57c7b7":"plt.scatter(fuel.CYLINDERS, fuel.CO2EMISSIONS, color = \"blue\")\nplt.xlabel(\"Cylinders\")\nplt.ylabel(\"Emission\")\nplt.show()","3df2fcc4":"msk = np.random.rand(len(df)) < 0.7\ntrain = fuel[msk]\ntest = fuel[~msk]","c50629af":"plt.scatter(train.ENGINESIZE, train.CO2EMISSIONS, color = \"red\")\nplt.xlabel(\"Engine Size\")\nplt.ylabel(\"Emission\")\nplt.show()","b2851f7c":"from sklearn import linear_model\nregr = linear_model.LinearRegression()\ntrain_x = np.asanyarray(train[[\"ENGINESIZE\"]])\ntrain_y = np.asanyarray(train[[\"CO2EMISSIONS\"]])\nregr.fit(train_x, train_y)\n\nprint(regr.coef_)\nprint(regr.intercept_)","a5857108":"plt.scatter(train.ENGINESIZE, train.CO2EMISSIONS,  color='blue')\nplt.plot(train_x, regr.coef_[0][0]*train_x + regr.intercept_[0], '-r')\nplt.xlabel(\"Engine size\")\nplt.ylabel(\"Emission\")","d7b0ad85":"from sklearn.metrics import r2_score\n\ntest_x = np.asanyarray(test[['ENGINESIZE']])\ntest_y = np.asanyarray(test[['CO2EMISSIONS']])\ntest_y_ = regr.predict(test_x)\n\nprint(\"MAE:\", np.mean(np.absolute(test_y_- test_y)))\nprint(\"MSE:\", np.mean((test_y_ - test_y)**2))\nprint(\"R2-score:\", r2_score(test_y_ , test_y))","004d394a":"## Modelling\nUsing the scikit-learn Package ","a2ab85f9":"## Evaluation\ncompare the actual values and \npredicted values to calculate the accuracy of a regression model","00f32b56":"Dataset Link : \"https:\/\/www.nrcan.gc.ca\/sites\/www.nrcan.gc.ca\/files\/oee\/files\n\/csv\/Original_1995-1999_Fuel_Consumption_Ratings_(2-cycle).csv\"","51979806":"Before going to the Model Development, Check whether there is missing value in the data set. ","1d9ff38a":"+ CYLINDERS VS CO2EMISSIONS","f65d1649":"### Objectives:\n+ Using Scikit-Learn to implement Simple Linear Regression\n+ The Dataset Used : Fuel Consumption and CO2 Emission of cars\n+ Split Data into training and testing Set\n+ Create a Model Using Training Set\n+ Evaluate Model Using Test Set\n+ Use Model to Predict Unknown Value","b720e551":"Drop the Column Unnamed: 0","721c9014":"Coefficient and Intercept in the simple \nlinear regression, are the parameters of the fit line","3410a366":"+ Train Data Distribution","01e26c67":"+ ENGINESIZE VS CO2EMISSIONS","c786487e":"+ MAE: It is the mean of the absolute value of the errors\n+ MSE: mean of the squared error\n+ RMSE: R-squared is not error, but is a popular \n  metric for accuracy of your model. It represents how close the data     are to the fitted regression line. The higher the R-squared, the       better the model fits your data. Best possible score is 1.0 and it     can be negative.","42d26362":"#### Data Exploration","d3d40d3c":"To visualize whether there is some missing values in the data set.\nit can be done with the help of \"missingno\" package in pandas","71049546":"Selecting Some Features to Explore","5f488f3e":"## Output Plot","ce2ac729":"Plotting Each Features VS Emission\n+ FUELCONSUMPTION_COMB VS CO2EMISSIONS","dc7bf795":"Import Required Python Packages","17ed65ab":" ### Creating Train and Test Dataset\nTrain\/Test Split involves splitting the \ndataset into training and testing sets respectively, \nwhich are mutually exclusive.\n","55b7168b":"# Simple Linear Regression Algorithm","dc575f4a":"### Loading Data","c6debf90":"Plot Visualization(Histogram) of all Feature"}}