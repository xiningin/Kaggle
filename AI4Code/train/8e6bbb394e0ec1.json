{"cell_type":{"4f5f27ea":"code","aa2e2fa0":"code","d16ef407":"code","3f0a61f7":"code","39fcc9dd":"code","714454c7":"code","f008f112":"code","567b94fd":"code","c0911280":"code","ae488470":"code","7d2d4ddd":"code","d5a2ee29":"code","ad255d46":"code","4ce405ed":"code","2467df91":"code","213bf04b":"code","db492a5d":"code","c3818063":"code","81c467c3":"code","17b2cfc5":"code","081748ea":"code","fc73df25":"code","1f9ba174":"code","385da1a9":"code","29f480ca":"markdown","1d822f74":"markdown","71337c06":"markdown","e5cbf9f2":"markdown","b87c3702":"markdown","9d7b25c2":"markdown","7f59aa72":"markdown"},"source":{"4f5f27ea":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot  as plt\nimport seaborn as sb\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aa2e2fa0":"df = pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')","d16ef407":"df.head()","3f0a61f7":"df.info()","39fcc9dd":"df.duplicated().sum()","714454c7":"df.drop('Unnamed: 0', axis=1, inplace=True)\n'Unnamed: 0' in df.columns","f008f112":"df.drop('Loaned From', axis=1, inplace=True)\n'Loaned From' in df.columns","567b94fd":"df.dropna(axis=0, inplace=True)\ndf.info()\n\n# ID (object)\n# Value, Wage (int64)\n# Joined, Contract Valid Until (dtime)\n# Height, Weight (int64)","c0911280":"df.ID = df.ID.astype('object')\ndf.ID.dtype","ae488470":"df.Value.value_counts()","7d2d4ddd":"df['Value'] = df['Value'].str[1:]\ndf.Value.value_counts()","d5a2ee29":"for index,row in df.iterrows():\n    if row.Value.endswith('M'):\n        df.loc[index,'Value'] = int(float(df.loc[index,'Value'][:-1]) * 1000000)\n    else:\n        df.loc[index,'Value'] = int(float(df.loc[index,'Value'][:-1]) * 1000)\n        \ndf.Value.value_counts()","ad255d46":"df['Wage'] = df['Wage'].str[1:]\ndf.Wage.value_counts()","4ce405ed":"for index,row in df.iterrows():\n    df.loc[index,'Wage'] = int(float(df.loc[index,'Wage'][:-1]) * 1000)\n        \ndf.Wage.value_counts()","2467df91":"df['Joined'] = df['Joined'].astype('datetime64[ns]')\ndf['Contract Valid Until'] = df['Contract Valid Until'].astype('datetime64[ns]')\ndf.info()","213bf04b":"df.Height.value_counts()","db492a5d":"def parse_ht(ht):\n    # format: 7' 0.0\"\n    ht_ = ht.split(\"'\")\n    ft_ = float(ht_[0])\n    in_ = float(ht_[1].replace(\"\\\"\",\"\"))\n    return (12*ft_) + in_\n\ndf['Height'] = df[\"Height\"].apply(lambda x:parse_ht(x)).astype('int64')\ndf.rename(columns={'Height': 'Height in inches'}, inplace=True)\ndf['Height in inches']","c3818063":"df['Weight'] = df['Weight'].str[:-3]\ndf.rename(columns={'Weight': 'Weight in lbs'}, inplace=True)\ndf['Weight in lbs']","81c467c3":"import seaborn as sb\n\nsb.boxplot(df.Age);","17b2cfc5":"(df.Age > 38).sum()\n\n# 12 ouliers","081748ea":"# drop oultiers\n\ndf = df[df.Age <= 38]\n(df.Age > 38).sum()","fc73df25":"sb.histplot(df.Wage, bins=25);","1f9ba174":"g = sb.PairGrid(data = df, vars = ['Wage', 'Weight in lbs', 'Age'])\ng.map_diag(plt.hist)\ng.map_offdiag(plt.scatter)\n","385da1a9":"g = sb.PairGrid(data = df, vars = ['Wage', 'Weight in lbs', 'Height in inches','Overall'])\ng.map_diag(plt.hist)\ng.map_offdiag(plt.scatter)\n","29f480ca":"There is a huge discrimination between the wages of the players leading to so many outliers.","1d822f74":"### 1) What is the distribution of the ages of the players in the dataset?","71337c06":"there is an inverse relationship between wage and weight and there realationship between age and wage is normally distributed and there is no relationship between age and weight","e5cbf9f2":"The distribution of wages is extremely right tailed.\n\nLets look at the outliers","b87c3702":"### 2) Are the wages of the players normally distributed?","9d7b25c2":"The median of Ages is about 25, with 25% of the players aging ~21 and below, 75% aging ~28 and below, and some very old players aging ~39 years old which the plot classified as outliers.","7f59aa72":"overall relate directly to wage and inversly to weight height is normally distributed with wage"}}