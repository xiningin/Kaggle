{"cell_type":{"ec366fb9":"code","160cd28e":"code","6e03aad2":"code","7521e869":"code","adc62b0a":"code","07ff34cb":"code","32413788":"code","ac9c8626":"code","45d817e8":"code","c7a8903c":"code","a378c5db":"code","ab2834bc":"code","31cbaf99":"code","d39182c0":"code","344df3fa":"code","eb65b04c":"code","f4fa5bbd":"code","d30a1d27":"code","6c22a5ee":"code","873a3689":"code","dfa70606":"code","ceaae90b":"markdown","c48b1228":"markdown","4450e6a3":"markdown","54e1dc5e":"markdown","e300ca9c":"markdown","7642ab2e":"markdown","1e4ca694":"markdown","0a53736e":"markdown","5a230139":"markdown","48b6d6ea":"markdown","6d998d53":"markdown","0ae06166":"markdown","49ced98d":"markdown","31052a01":"markdown","870a1295":"markdown","c274e376":"markdown","134bc328":"markdown","c3f31a91":"markdown","5de70f18":"markdown","791743c1":"markdown"},"source":{"ec366fb9":"import os\nimport re\nimport time\nimport warnings\n\n# Data Manipulation Libraries\nimport pandas as pd\nimport numpy as np\n\n# Data Vizualization libraries\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\n\nwarnings.filterwarnings(\"ignore\")","160cd28e":"red = [\"#4f000b\",\"#720026\",\"#ce4257\",\"#ff7f51\",\"#ff9b54\"]\nbo = [\"#6930c3\",\"#5e60ce\",\"#0096c7\",\"#48cae4\",\"#ade8f4\",\"#ff7f51\",\"#ff9b54\",\"#ffbf69\"]\npink = [\"#aa4465\",\"#dd2d4a\",\"#f26a8d\",\"#f49cbb\",\"#ffcbf2\",\"#e2afff\",\"#ff86c8\",\"#ffa3a5\",\"#ffbf81\",\"#e9b827\",\"#f9e576\"]","6e03aad2":"#reading csv file\nsurvey_df =  pd.read_csv(\"..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\")\nsurvey_df.head(6)","7521e869":"fig = go.Figure(\n    data=[\n        go.Table(\n        header=dict(\n                values=[\"Question Number \/ Sections \/ Parts\", \"Description\"],\n                fill_color=bo[2],\n                line_color='white',\n                align='center'\n        ),\n        cells=dict(\n                values=[\n                    [i.replace('_',\" \") for i in survey_df.columns[1:]],\n                    survey_df.iloc[0,1:]\n                ],\n                fill_color=bo[4],\n                line_color='white',\n                align='left'\n            )\n        )\n    ]\n)\nfig.update_layout(\n    title = dict(\n        text = 'Questions Asked in Survey 2021',\n        font_size = 25,\n    ),\n    title_x=0.5,\n    paper_bgcolor='rgba(0,0,0,0)',\n    plot_bgcolor='rgba(0,0,0,0)'\n)\nfig.show()","adc62b0a":"interested_cols = [\n    'Q1','Q2','Q3','Q4','Q5','Q6',\n    'Q15',\n    'Q20','Q21','Q22','Q23',\n    'Q25'\n]\ndf = survey_df.iloc[1:,1:][interested_cols]\ndf.columns = [\n    'age','gender','country','edubg','profression','yrofexpc',\n    'yrofexpml',\n    'empindustry', 'companysize', 'empdsw', 'empdiml',\n    'compensation'\n]\nprint(\"Size of DataFrame: \", df.shape)\ndf.head()","07ff34cb":"from sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.decomposition import PCA\nfrom sklearn.manifold import TSNE\n\n\nle = LabelEncoder()\n\nfor col in df.columns:\n    df[col] = df[col].fillna('Unknown')\n    df[col] = le.fit_transform(df[col])\n\n# PCA\npipe2 = Pipeline(\n    [\n        ('scaler', StandardScaler()), \n#         ('tsne', TSNE(n_components=2, verbose=1, perplexity=46, n_iter=550)),\n        ('pca', PCA(2))\n    ]\n)\ndf_pca = pd.DataFrame(pipe2.fit_transform(df))\n# df_pca.head()\n\n# TSNE\npipe = Pipeline(\n    [\n        ('scaler', StandardScaler()), \n        ('tsne', TSNE(n_components=2, verbose=1, perplexity=46, n_iter=550)),\n#         ('pca', PCA(2))\n    ]\n)\ndf_r = pd.DataFrame(pipe.fit_transform(df))\n\n# df_r.head()","32413788":"fig, ax = plt.subplots(1,2,figsize=(20, 9))\n\n# plt.figure(figsize=(10,8))\nsns.scatterplot(\n    x=df_pca.iloc[:,0], y=df_pca.iloc[:,1],\n    data=df,\n    legend=\"full\",\n    ax=ax[0]\n)\nax[0].set_title(\"PCA\")\n\nsns.scatterplot(\n    x=df_r.iloc[:,0], y=df_r.iloc[:,1],\n    data=df,\n    legend=\"full\",\n    ax=ax[1]\n)\nax[1].set_title(\"TSNE\")","ac9c8626":"from sklearn.cluster import SpectralClustering\n\ndef no_of_cluster(df, title):\n    w=[]\n    e=[]\n    for i in range(1,10):\n        k=SpectralClustering(n_clusters=i)\n        k.fit_predict(df)\n        e.append(k.inertia_)\n        w.append(i)\n    plt.figure(figsize=(8,5))\n    plt.plot(w,e,'bo-')\n    plt.title(f\"Optimum number of Clusters for SpectralClustering - {title}\")\nno_of_cluster(df_pca, \"PCA\")\nno_of_cluster(df_r, \"TSNE\")","45d817e8":"model_pca = SpectralClustering(n_clusters=3, random_state=50)\nmodel_pca.fit(df_pca)\n\nmodel_tsne = SpectralClustering(n_clusters=3, random_state=50)\nmodel_tsne.fit(df_r)","c7a8903c":"fig, ax = plt.subplots(1,2,figsize=(20, 9))\n\nax[0].scatter(df_pca.iloc[:,0], df_pca.iloc[:,1], c=model_pca.labels_, alpha=0.3)\nax[0].set_title(\"PCA\")\n\nax[1].scatter(df_r.iloc[:,0], df_r.iloc[:,1], c=model_tsne.labels_, alpha=0.3)\nax[1].set_title(\"TSNE\")","a378c5db":"fig, ax = plt.subplots(2,2,figsize=(20, 18))\n\n# PCA\nax[0,0].scatter(df_pca.iloc[:,0],df_pca.iloc[:,1],c=model_pca.labels_, alpha=0.3)\nsns.scatterplot(\n    x=df_pca.iloc[:,0], y=df_pca.iloc[:,1],\n    hue=survey_df.iloc[1:,1:]['Q5'],\n    data=df,\n    legend=\"full\",\n    ax=ax[0,1]\n)\nax[0,1].set_title(\"PCA\")\n\n# TSNE\nax[1,0].scatter(df_r.iloc[:,0],df_r.iloc[:,1],c=model_tsne.labels_, alpha=0.3)\nsns.scatterplot(\n    x=df_r.iloc[:,0], y=df_r.iloc[:,1],\n    hue=survey_df.iloc[1:,1:]['Q5'],\n    data=df,\n    legend=\"full\",\n    ax=ax[1,1]\n)\nax[1,1].set_title(\"TSNE\")\n\n# Plot legend outside of plot\nax[0,1].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nax[1,1].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","ab2834bc":"fig, ax = plt.subplots(2,2,figsize=(20, 18))\n\n# PCA\nax[0,0].scatter(df_pca.iloc[:,0],df_pca.iloc[:,1],c=model_pca.labels_, alpha=0.3)\nsns.scatterplot(\n    x=df_pca.iloc[:,0], y=df_pca.iloc[:,1],\n    hue=survey_df.iloc[1:,1:]['Q2'],\n    data=df,\n    legend=\"full\",\n    ax=ax[0,1]\n)\nax[0,1].set_title(\"PCA\")\n\n# TSNE\nax[1,0].scatter(df_r.iloc[:,0],df_r.iloc[:,1],c=model_tsne.labels_, alpha=0.3)\nsns.scatterplot(\n    x=df_r.iloc[:,0], y=df_r.iloc[:,1],\n    hue=survey_df.iloc[1:,1:]['Q2'],\n    data=df,\n    legend=\"full\",\n    ax=ax[1,1]\n)\nax[1,1].set_title(\"TSNE\")\n\n# Plot legend outside of plot\nax[0,1].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nax[1,1].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","31cbaf99":"fig, ax = plt.subplots(2,2,figsize=(20, 18))\n\n# PCA\nax[0,0].scatter(df_pca.iloc[:,0],df_pca.iloc[:,1],c=model_pca.labels_, alpha=0.3)\nsns.scatterplot(\n    x=df_pca.iloc[:,0], y=df_pca.iloc[:,1],\n    hue=survey_df.iloc[1:,1:]['Q6'],\n    data=df,\n    legend=\"full\",\n    ax=ax[0,1]\n)\nax[0,1].set_title(\"PCA\")\n\n# TSNE\nax[1,0].scatter(df_r.iloc[:,0],df_r.iloc[:,1],c=model_tsne.labels_, alpha=0.3)\nsns.scatterplot(\n    x=df_r.iloc[:,0], y=df_r.iloc[:,1],\n    hue=survey_df.iloc[1:,1:]['Q6'],\n    data=df,\n    legend=\"full\",\n    ax=ax[1,1]\n)\nax[1,1].set_title(\"TSNE\")\n\n# Plot legend outside of plot\nax[0,1].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nax[1,1].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","d39182c0":"fig, ax = plt.subplots(2,2,figsize=(20, 18))\n\n# PCA\nax[0,0].scatter(df_pca.iloc[:,0],df_pca.iloc[:,1],c=model_pca.labels_, alpha=0.3)\nsns.scatterplot(\n    x=df_pca.iloc[:,0], y=df_pca.iloc[:,1],\n    hue=survey_df.iloc[1:,1:]['Q15'],\n    data=df,\n    legend=\"full\",\n    ax=ax[0,1]\n)\nax[0,1].set_title(\"PCA\")\n\n# TSNE\nax[1,0].scatter(df_r.iloc[:,0],df_r.iloc[:,1],c=model_tsne.labels_, alpha=0.3)\nsns.scatterplot(\n    x=df_r.iloc[:,0], y=df_r.iloc[:,1],\n    hue=survey_df.iloc[1:,1:]['Q15'],\n    data=df,\n    legend=\"full\",\n    ax=ax[1,1]\n)\nax[1,1].set_title(\"TSNE\")\n\n# Plot legend outside of plot\nax[0,1].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nax[1,1].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","344df3fa":"fig, ax = plt.subplots(2,2,figsize=(20, 18))\n\n# PCA\nax[0,0].scatter(df_pca.iloc[:,0],df_pca.iloc[:,1],c=model_pca.labels_, alpha=0.3)\nsns.scatterplot(\n    x=df_pca.iloc[:,0], y=df_pca.iloc[:,1],\n    hue=survey_df.iloc[1:,1:]['Q25'],\n    data=df,\n    legend=\"full\",\n    ax=ax[0,1]\n)\nax[0,1].set_title(\"PCA\")\n\n# TSNE\nax[1,0].scatter(df_r.iloc[:,0],df_r.iloc[:,1],c=model_tsne.labels_, alpha=0.3)\nsns.scatterplot(\n    x=df_r.iloc[:,0], y=df_r.iloc[:,1],\n    hue=survey_df.iloc[1:,1:]['Q25'],\n    data=df,\n    legend=\"full\",\n    ax=ax[1,1]\n)\nax[1,1].set_title(\"TSNE\")\n\n# Plot legend outside of plot\nax[0,1].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nax[1,1].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","eb65b04c":"# PCA\npipe24 = Pipeline(\n    [\n        ('scaler', StandardScaler()), \n#         ('tsne', TSNE(n_components=2, verbose=1, perplexity=46, n_iter=550)),\n        ('pca', PCA(3))\n    ]\n)\ndf4_pca = pd.DataFrame(pipe24.fit_transform(df))\n# df_pca.head()\n\n# TSNE\n# pipet = Pipeline(\n#     [\n#         ('scaler', StandardScaler()), \n#         ('tsne', TSNE(n_components=3, verbose=1, perplexity=104, n_iter=550)),\n# #         ('pca', PCA(2))\n#     ]\n# )\n# df4_r = pd.DataFrame(pipet.fit_transform(df))","f4fa5bbd":"fig, ax = plt.subplots(3,3,figsize=(20, 9))\nfig.suptitle('PCA components')\n\nfor i in range(3):\n    for j in range(3):\n        if i!=j:\n            sns.scatterplot(\n                x=df4_pca.iloc[:,i], y=df4_pca.iloc[:,j],\n                data=df,\n                legend=\"full\",\n                ax=ax[i,j]\n            )\n            ax[i,j].set_title(f\"{i} vs {j}\")","d30a1d27":"no_of_cluster(df4_pca, \"PCA\")","6c22a5ee":"model4_pca = SpectralClustering(n_clusters=3, random_state=70)\nmodel4_pca.fit(df4_pca)","873a3689":"fig = plt.figure(figsize = (10, 10))\nax = plt.axes(projection =\"3d\")\n\nax.scatter3D(\n    df4_pca.iloc[:,0], \n    df4_pca.iloc[:,1], \n    df4_pca.iloc[:,2], \n    c=model4_pca.labels_, \n    alpha=0.3\n)\nplt.title(\"Visualizing clusters in 3D\")","dfa70606":"fig = plt.figure(figsize = (10, 10))\nax = plt.axes(projection =\"3d\")\nax.scatter3D(\n    df4_pca.iloc[:,0], \n    df4_pca.iloc[:,1], \n    df4_pca.iloc[:,2], \n    c=le.fit_transform(survey_df.fillna('Unknown').iloc[1:,1:]['Q25']), \n    alpha=0.3\n)","ceaae90b":"### Seems like 2 dimension aren't enough to carve out good difference between clusters.\n- It is all mixed up and cluttered\n- Lets now try with increasing the number of components to 3 or 4 and observe the differences.","c48b1228":"# Comparing TSNE and PCA","4450e6a3":"# Imports","54e1dc5e":"# Dimensionality Reduction with TSNE and PCA","e300ca9c":"# Visualizing the cluster mappings","7642ab2e":"# Data Preprocessing","1e4ca694":"## Experience in Machine Learning","0a53736e":"## Compensation","5a230139":"## Profession based distribution","48b6d6ea":"# Training the Spectral Clustering Model","6d998d53":"## Gender based Distribution","0ae06166":"To find the optimal number of clusters, let's have a look at the above elbow plots for PCA and TSNE. The points 3 and 4 looks good enough, but yet 3 seems to be a bit more stable.","49ced98d":"# Questions Asked","31052a01":"# Finding Optimal Number of Clusters","870a1295":"# Reading the data","c274e376":"# To be continued...\n\n#### Upvote if you find it interesting. Do not forget to drop suggestions in comments below.","134bc328":"## Coding Experience","c3f31a91":"Only found the above 12 columns looks quite decent which may add some meaning to identified clusters. All the above fields are categorical. I haven't included the multiple choice questions yet as I wasn't really sure about those and including didn't make any sense.","5de70f18":"- Since all the features selected are categorical visualizing directly would yield much, it will look like a grid with different color balls placed at the intersections. So now lets reduce the number of dimensions to 2 components: it will be easy visualize, will take less time to train, and find the why more number of components are required.\n\n- PCA is usually used to reduce the dimension of datasets which are very large, whereas TSNE is used to reduce the dimensions of the dataset which has a very large number of features. Although, we are aware about this will still give it a try and find what comes up.\n\n#### Let's START","791743c1":"# Reducing Dimensionality to 3 components"}}