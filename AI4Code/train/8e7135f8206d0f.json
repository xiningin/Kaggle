{"cell_type":{"a9972745":"code","9ba05531":"code","ed6117e7":"code","2ccb88b4":"code","ecfda07a":"code","760d26e2":"code","06148f6d":"code","a91df02d":"code","307a8482":"code","a7a8eb30":"code","a813069f":"code","f5c8cc94":"code","592f0cf1":"code","4e24e4a0":"code","d07688a1":"code","f2d36a2b":"code","e23e3013":"code","4df8d246":"code","c86c3265":"code","34487d37":"code","6bec64bf":"code","a947b3a0":"code","027c262a":"code","d66759fd":"code","a305dafc":"code","601ed02a":"code","e1538a49":"code","dcf9c7c2":"markdown","8400227f":"markdown","c9acc0f2":"markdown","e151a644":"markdown","41efc1bb":"markdown","c156efde":"markdown","7d30bc67":"markdown","7fe8a067":"markdown","83200a3b":"markdown","571a3ffb":"markdown","2e457398":"markdown","441c7b24":"markdown","2156d164":"markdown","c6a00e3a":"markdown","04052fc4":"markdown","92234542":"markdown","72fb56ae":"markdown","bd3d973e":"markdown","6a8b9ceb":"markdown","ff08cee3":"markdown","774761ce":"markdown","fe7e54b1":"markdown","e7bf9981":"markdown","3e1c6842":"markdown","6b09e556":"markdown","15a16cc5":"markdown","49aae289":"markdown","c6a06ff8":"markdown","744dcc99":"markdown","ef750168":"markdown","55893625":"markdown","897fefb1":"markdown","35f4ba87":"markdown","e31cc07b":"markdown","0acff7a7":"markdown","948da7a7":"markdown","2aba3988":"markdown","0f398af8":"markdown","93dbefe7":"markdown","d822d8ed":"markdown","804da350":"markdown","87f4cb27":"markdown","2edd39a9":"markdown","27c48650":"markdown","2fb94d9d":"markdown","4fe872b3":"markdown","1e1b0722":"markdown","af858688":"markdown","4bc7944b":"markdown","a0d59acf":"markdown"},"source":{"a9972745":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt\nfrom collections import Counter\nfrom xgboost import XGBClassifier\nfrom sklearn.svm import LinearSVC, SVC\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import roc_auc_score, f1_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score, train_test_split\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9ba05531":"df = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')\ndf.head()","ed6117e7":"df['sex'] = np.where(df['sex']==1, 'male', 'female')\ndf['cp'] = np.where(df['cp']==0, 'typical angina', np.where(df['cp']==1, 'atypical angina',\n    np.where(df['cp']==2, 'non-anginal pain', np.where(df['cp']==3, 'asymptomatic', 0))))\ndf['fbs'] = np.where(df['fbs']==1, 'true', 'false')\ndf['restecg'] = np.where(df['restecg']==0, 'normal', 'abnormal')\ndf['exng'] = np.where(df['exng']==1, 'yes', 'no')","2ccb88b4":"def barplot(data, x, y, hue):\n    fig, ax = plt.subplots(1, 1, figsize=(15, 10))\n    sns.barplot(data=data, x=x, y=y, hue=hue)\n    plt.show()\n    \ndef pie(data, x, y):\n    count = Counter(data)\n    count = pd.DataFrame({x:count.keys(), y:count.values()})\n    fig = px.pie(count, x, y)\n    fig.update_layout(legend_title=dict(text=x))\n    fig.show()\n    \ndef bars(data, x, y):\n    count = Counter(data)\n    count = pd.DataFrame({x:count.keys(), y:count.values()}).sort_values(by=x)\n    fig = px.bar(count, x, y)\n    fig.update_layout(legend_title=dict(text=x))\n    fig.show()\n    \ndef scatter(x, y):\n    data = pd.DataFrame({x:df[x], y:df[y]})\n    fig = px.scatter(data, x, y, color=df['output'])\n    fig.show()","ecfda07a":"pie(df['sex'], 'Sex', 'Number of patients')","760d26e2":"pie(df['cp'], 'Chest pain type', 'Number of patients')","06148f6d":"pie(df['fbs'], 'Fasting blood sugar over 120 mg\/dl', 'Number of patients')","a91df02d":"pie(df['restecg'], 'Resting electrocardiographic results', 'Number of patients')","307a8482":"pie(df['exng'], 'Exercise induced angina', 'Number of patients')","a7a8eb30":"pie(df['caa'], 'Number of major blood vessels coloured by colonoscopy', 'Number of patients')","a813069f":"pie(df['thall'], 'Thal', 'Number of patients')","f5c8cc94":"px.treemap(df, path=['sex', 'cp'], color='output')","592f0cf1":"px.treemap(df, path=['sex', 'exng'], color='output')","4e24e4a0":"px.treemap(df, path=['restecg', 'cp'], color='output')","d07688a1":"px.sunburst(df, path=['fbs', 'exng'], color='output')","f2d36a2b":"px.sunburst(df, path=['fbs', 'restecg'], color='output')","e23e3013":"bars(df['age'], 'Age', 'Number of patients')","4df8d246":"bars(df['trtbps'], 'Resting blood pressure', 'Number of patients')","c86c3265":"bars(df['chol'], 'Serum cholesterol', 'Number of patients')","34487d37":"bars(df['thalachh'], 'Maximum heart rate', 'Number of patients')","6bec64bf":"bars(df['oldpeak'], 'ST depression', 'Number of patients')","a947b3a0":"cols = [['sex', 'oldpeak', 'exng'], ['restecg', 'oldpeak', 'exng'], ['sex', 'thalachh', 'cp'],\n        ['cp', 'chol', 'thall'], ['slp', 'trtbps', 'caa'], ['output', 'oldpeak', 'caa']]\n\nfor i in cols:\n    barplot(data=df, x=i[0], y=i[1], hue=i[2])","027c262a":"cols = [['trtbps', 'age'], ['chol', 'age'], ['thalachh', 'age'], ['oldpeak', 'age'],\n       ['chol', 'trtbps'], ['thalachh', 'trtbps'], ['oldpeak', 'trtbps'],\n       ['oldpeak', 'chol'], ['thalachh', 'chol'], ['oldpeak', 'thalachh']]\n\nfor col in cols:\n    scatter(col[0], col[1])","d66759fd":"df = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')\nX = df.drop('output', axis=1)\ny = df['output']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","a305dafc":"fig, ax = plt.subplots(1, 1, figsize=(15, 10))\nsns.heatmap(X.corr(), annot=True)\nplt.show()","601ed02a":"model_scores = []\ncross_val_scores = []\nroc_auc_scores = []\nf1_scores = []\n\nfor model in [LinearSVC(dual=True), RandomForestClassifier(), LogisticRegression(),\n              XGBClassifier(use_label_encoder=False, eval_metric='logloss')]:\n    model.fit(X_train, y_train)\n    y_pred = model.predict(X_test)\n    \n    scores = [model.score(X_test, y_test), cross_val_score(model, X_test, y_test).mean(),\n             roc_auc_score(y_test, y_pred), f1_score(y_test, y_pred)]\n    \n    for score in scores:\n        print(score)\n        \n    print('')\n    \n    model_scores.append(scores[0])\n    cross_val_scores.append(scores[1])\n    roc_auc_scores.append(scores[2])\n    f1_scores.append(scores[3])","e1538a49":"model_names = ['Linear SVC', 'Random Forest', 'Logistic Regression', 'XGBoost']\nscore_names = ['Model score', 'Cross validation score', 'ROC AUC score', 'F1 score']\nscores = [model_scores, cross_val_scores, roc_auc_scores, f1_scores]\n\nfor score in scores:\n    score_name = score_names[scores.index(score)]\n    data = pd.DataFrame({'Model':model_names, score_name:score})\n    fig = px.bar(data, 'Model', score_name, color=score_name)\n    fig.show()","dcf9c7c2":"# Thal","8400227f":"<img src=\"https:\/\/miro.medium.com\/max\/1000\/1*qHbAsMNmdWQJkzm2SUA-8w.jpeg\" width=\"600px\"\/>","c9acc0f2":"As the results of the models are shown below, we can see that the XGBoost classifier predicts this dataset the best.","e151a644":"# Cholesterol","41efc1bb":"# Heart Attack EDA & Classification","c156efde":"Now we switch our sights over to barplots which compare the various categories by stacking the columns next to each other.","7d30bc67":"# Maximum heart rate","7fe8a067":"Finally, we can compare the LinearSVC, Random Forest and XGBoost models to classify our data.","83200a3b":"# Fasting blood sugar over 120 mg\/dl","571a3ffb":"# ST depression induced by exercise relative to rest","2e457398":"# Sex and Chest pain","441c7b24":"Secondly, we visualise the number of different chest pains, seeing that chest pain type 0 affects almost half of our patients.","2156d164":"# Age","c6a00e3a":"## Thank you for reading this notebook.\n## If you enjoyed my notebook and found it helpful, please give it an upvote and provide feedback, as it would help me make more of these.","04052fc4":"Now we compare the resting electrocardiographic (ECG) results with the chest pains, seeing that the abnormal ECG results have a higher chance of heart attack than the normal ones.","92234542":"# Resting blood pressure","72fb56ae":"Firstly, we create a pie chart for the sex of the patients which tells us that the majority of them are male.","bd3d973e":"The resting blood pressure seems rather sporadic, however the most common cases are in the rbs of 120, 130 and 140.","6a8b9ceb":"# Evaluating models","ff08cee3":"Here we compare fasting blood sugar (fbs) and exercise induced angina, seeing that having a fbs under 120 mg\/dl gives you a slightly higher chance of getting a heart attack.","774761ce":"Furthermore, we see that most of the serum cholesterol is between 200 and 300.","fe7e54b1":"Furthermore, we check out the frequency of the four thal types, seeing that more than half of it is by thal 2.","e7bf9981":"# Resting electrocardiographic results","3e1c6842":"# Major blood vessels coloured","6b09e556":"Then, we scatter 10 pairs of variables and use the target to determine their classifiability.","15a16cc5":"Here we use a treemap to analyse the sex and chest pains. We can conclude that women have a higher chance of getting heart attacks, typical anginas are the chest pain types which have the lowest chance of heart attacks, while non-anginal pain has the highest.","49aae289":"# Scatterplots","c6a06ff8":"# Fasting blood sugar and Exercise Induced Angina","744dcc99":"Next, we visualise that most of the patients do not have exercise induced angina.","ef750168":"Now we visualise the three electrocardiographic results, showing that an almost even divide is split between 0 and 1, with type 2 being less than 2 percent.","55893625":"# Sex and Exercise Induced Angina","897fefb1":"# Exercise induced angina","35f4ba87":"Hello! Welcome to my heart attack notebook where we will be visualising the different features of this dataset and creating a predictor which will predict the attack.","e31cc07b":"### Description of features\n* **age** - age of patient\n* **sex** - sex of patient (1=male, 0=female)\n* **cp** - chest pain type (4 values)\n* **trtbps** - resting blood pressure\n* **chol** - serum cholestoral in mg\/dl\n* **fbs** - fasting blood sugar > 120 mg\/dl (1=true, 0=false)\n* **restecg** - resting electrocardiographic results (values 0,1,2)\n* **thalachh** - maximum heart rate achieved\n* **exng** - exercise induced angina (1=yes, 0=no)\n* **oldpeak** - ST depression induced by exercise relative to rest\n* **slp** - the slope of the peak exercise ST segment\n* **caa** - number of major vessels (0-3) colored by flourosopy\n* **thal** - 3 = normal; 6 = fixed defect; 7 = reversable defect\n* **output** - heart attack or not","0acff7a7":"# Sex","948da7a7":"Then, we check out the whether the fasting blood sugar is over 120 mg\/dl. We can conclude that the vast majority of patients do not have it over 120 mg\/dl.","2aba3988":"Next, we analyse sex and exercise induced angina. Strangely enough, the data seems to tell us that not having an exercise induced angina gives you a higher chance of getting a heart attack than having one.","0f398af8":"Next, as preparation for the classifiers, we visualise the correlation of the different variables. The heatmap we see below shows promising results, as it tells us that the columns have no real correlation, which indicates that there are not any redundancies.","93dbefe7":"Subsequently, we now see that over half of the people have no major blood vessels coloured by colonoscopy.","d822d8ed":"# Comparative barplots","804da350":"<img src=\"https:\/\/cdn-images-1.medium.com\/max\/1200\/1*aDIf-jrD5Ikrfcjsnmdebw.jpeg\" width=\"400px\"\/>","87f4cb27":"Finally, we compare the FBS with the Resting ECG.","2edd39a9":"# Predicting data with models","27c48650":"# Correlation","2fb94d9d":"# Chest pain type","4fe872b3":"Now, as we move onto bar charts, we can see that the average age for the patients is in their 50s.","1e1b0722":"Most of the people have no or close to no ST depression incuded by exercise relative to rest.","af858688":"Afterwards, we take a look at the maximum heart rate, seeing that most cases occur after the value of 140.","4bc7944b":"# Resting ECG and Chest pains","a0d59acf":"# Fasting blood sugar and Rest ECG"}}