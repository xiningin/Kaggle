{"cell_type":{"c4a4fb80":"code","5ce05c6c":"code","8f94389d":"code","139cce51":"code","fd3bc984":"code","adf349d8":"code","d884b01a":"code","5af0f112":"code","6b28e01a":"code","225e87d5":"code","dd3da39e":"code","628b04e1":"code","b2e8b3c4":"code","d2a80ac8":"code","a7ac3716":"code","d6feb88b":"code","249cee9d":"code","ba8a7036":"code","2971a53f":"code","7b324a2b":"code","69f3ed1c":"code","050b7ab5":"code","6217bc6a":"code","b4dad0ca":"markdown","eb64d9b4":"markdown","366ef9ed":"markdown","4efe426f":"markdown","b12b105f":"markdown","6cd85952":"markdown","d885bf79":"markdown"},"source":{"c4a4fb80":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5ce05c6c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split as trn\nfrom sklearn.preprocessing import LabelEncoder\nimport os","8f94389d":"df = pd.read_csv(\"..\/input\/drug-classification\/drug200.csv\")\nprint (df.columns.tolist())","139cce51":"df.head(10)","fd3bc984":"dataframe_int = df.copy()\n\n# Membuat objek yang bernama encoder\nencoder = LabelEncoder()\ncategorical_data = ['Sex','BP','Cholesterol','Drug']\nfor kolom in categorical_data:\n    dataframe_int[kolom] = encoder.fit_transform(df[kolom])\n","adf349d8":"dataframe_int.head()","d884b01a":"data = dataframe_int.drop('Drug',axis=1)\nlabel = dataframe_int['Drug']","5af0f112":"data.head()","6b28e01a":"x_train, x_test, y_train, y_test = trn(data,label,test_size=15,random_state=42,stratify=label)","225e87d5":"print(x_train.shape,y_train.shape)\nprint(x_test.shape,y_test.shape)","dd3da39e":"from sklearn.svm import SVC\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.svm import LinearSVC #classifier SVM\nfrom sklearn.metrics import classification_report, confusion_matrix","628b04e1":"model = SVC(gamma='scale')\nmodel.fit(x_train,y_train)\nprediction = model.predict(x_test)","b2e8b3c4":"prediction","d2a80ac8":"model.score(x_test,y_test)","a7ac3716":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nscaled_X_train = scaler.fit_transform(x_train)\nscaled_X_test = scaler.transform(x_test)","d6feb88b":"knn = KNeighborsClassifier(n_neighbors=1, p=2 )","249cee9d":"knn.fit(scaled_X_train,y_train)","ba8a7036":"pred_k = knn.predict(scaled_X_test)\npred_k","2971a53f":"knn.predict_proba(scaled_X_test)","7b324a2b":"from sklearn.metrics import classification_report, confusion_matrix","69f3ed1c":"print(confusion_matrix(y_test,pred_k))","050b7ab5":"print(classification_report(y_test,pred_k))","6217bc6a":"from sklearn.metrics import accuracy_score\naccuracy= accuracy_score(y_test, pred_k)\naccuracy","b4dad0ca":"memisahkan data menjadi 2 data yaitu data latihan dan data tes dengan modul Sklearn","eb64d9b4":"# **Melakukan Split Model**","366ef9ed":"# **KNN**","4efe426f":"Karena pada kasus ini kita ingin memprediksi data yang ada pada kolom Drug, maka kita pisahkan antara data tersebut menjadi 2 data","b12b105f":"# **SVM**","6cd85952":"# **Memisahkan Data**","d885bf79":"**Merubah Data Menjadi Numerik**"}}