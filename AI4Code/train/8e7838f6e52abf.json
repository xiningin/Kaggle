{"cell_type":{"13a9c598":"code","8e1d4c67":"code","7c9f6175":"code","7f3b3bcc":"code","23f450f7":"code","fc0f8dbb":"code","9cb5c029":"code","b782c11c":"code","f5aa24a3":"code","56ddb212":"code","b2fbd8e1":"code","b8a67cc5":"code","90042a93":"code","18fd620e":"code","967b7e49":"code","2b505c95":"code","0bdf712b":"code","76699ad1":"code","365247bf":"code","c8e4c966":"code","3f93657c":"code","9e554593":"code","09b688fe":"code","0f87b287":"code","a155e4ee":"code","6128f028":"code","0d04486c":"code","8248f49f":"code","06373973":"code","c3cc89a0":"code","3a6528e5":"code","b8038016":"code","c9951eed":"code","4d1dc6d1":"code","39642730":"code","3cec3a0d":"code","c510c6a5":"code","c46c1b12":"code","1fef81b2":"code","518f0f3d":"code","0c46ee8e":"code","b5a45efb":"code","5a452513":"code","7cefcbea":"code","b35f4bef":"code","9131c871":"code","8398deb5":"code","32d0fde8":"code","2ca25631":"code","db7065a5":"code","4ae52302":"code","c0cf7a68":"code","bb4c6103":"code","c3f40938":"code","d39992a2":"code","df6abb94":"code","d74b1f96":"code","0dccd79f":"code","75955346":"code","7cafb9d6":"code","db042231":"code","2f7bc480":"code","ff8772df":"code","6244260d":"code","1e5bd5d1":"code","0e73b1f2":"code","7a4a8d7e":"code","08dd6c82":"code","67416207":"code","125a4f86":"code","4ac8411d":"code","37fe108f":"code","b8093780":"code","01501347":"code","99186b9a":"code","f25a5eb7":"code","86ecf247":"code","4de3f2da":"code","d53bf1ad":"code","4ae242a2":"code","d6f75737":"code","c23ffedb":"code","1bf494ca":"code","55191776":"code","e8185e67":"code","227f2fb4":"code","3577ee3c":"code","aa1d022d":"code","82945234":"code","ae9804e1":"code","9d8bd578":"code","221f7c05":"code","53998371":"code","9fc16333":"code","af31ad25":"code","73b4bff5":"code","688d89e9":"code","44b574f1":"code","fe603902":"code","93eb8099":"code","f6a56c2e":"code","ef8312df":"code","f68a5b1c":"code","b0ebdb1b":"code","d999fe5b":"code","4e1734ff":"code","959aa61f":"code","9070bfe3":"code","9ea6cbb3":"code","fc96fbb3":"code","8feaab73":"code","19e54583":"code","ae43371e":"code","34ee01cf":"code","3e1d20fc":"code","b3d5eb51":"code","af7e3d3a":"code","00873ad0":"code","023983f3":"code","9b11bc63":"code","4beebdaf":"code","7f87ed4f":"code","b9808a30":"code","65f5d619":"code","d57a907a":"code","78651748":"code","b027cc17":"code","b140e158":"code","57a394e1":"code","850681fc":"code","3ae12f7f":"code","4a7b59d9":"code","bd95d4a6":"code","bda12823":"code","5210d399":"code","7a5cfe00":"code","05bd60b1":"code","51a849b2":"code","ba56d439":"code","cb741a12":"code","3a2250cb":"code","e244db73":"code","00b82798":"code","2e27c5b6":"code","cf875c86":"code","f312594f":"code","47e6c669":"code","ecf87f54":"code","66e36b44":"code","424d14d4":"code","2c0f58fb":"code","d38e4fb3":"code","a5f80f60":"code","be339f48":"code","448c645a":"code","b99ecf2d":"code","a2935481":"code","f06910e2":"code","9489445b":"code","692e3210":"code","7c30073a":"code","7dfcf526":"code","2aa04c10":"code","13dc9cbe":"code","39aa29e3":"code","1ce5a49f":"code","c6e1d13d":"code","bb8f199f":"code","38063ba0":"code","b5aab60c":"code","2fc87f8d":"code","6c128aa9":"code","e796782a":"code","6d1567e2":"code","71e2cdb5":"code","07ff5fcc":"code","8ffd6363":"code","a62b5a47":"code","e8528e65":"code","c327d133":"code","ccb0ab2a":"code","4a65f172":"code","6e5b3c6e":"code","89d3ac33":"code","bc964fae":"code","50591d51":"code","42354adb":"code","e32fa8f1":"code","cac0fa1a":"code","b3369e3e":"code","d1ff6a40":"code","b2244c39":"code","7111685d":"code","ab9004fd":"code","ba2703ff":"code","157432c6":"code","709e15ac":"code","af47d657":"code","423cc9fb":"code","07ef672d":"code","5ec69900":"code","64eaf72f":"code","256e7513":"code","a136d007":"code","71299ff2":"code","b7bdbc36":"code","9af721ef":"code","d7888c97":"code","fdfd1998":"code","4c7b44f5":"code","56de91cf":"code","550a4577":"code","a58deb9c":"code","5016d5b3":"code","1a483006":"code","233d73f0":"code","3f67c7fc":"code","8087a006":"code","cd8b229d":"code","e7017a9b":"code","507051a2":"code","a3150acd":"code","8c0ba833":"code","03bf1641":"code","6d2fab5c":"code","e03bb09b":"code","2338362c":"code","ea72896d":"markdown","df774134":"markdown","99ec2e3f":"markdown","9ad1561e":"markdown","286bee19":"markdown","c217827e":"markdown","6678c8a3":"markdown","f8c3ce84":"markdown","262cf816":"markdown","66a5501f":"markdown","9b2167d3":"markdown","8a025320":"markdown","f83e90d0":"markdown","112bb509":"markdown","5d05eac9":"markdown","fb0727d7":"markdown","4435c5cd":"markdown","eccc3ba8":"markdown","4c4ebf6d":"markdown","cbcfd7e3":"markdown","e472fbc6":"markdown","e82d29f9":"markdown","af042cff":"markdown","342f05fe":"markdown","10122fd9":"markdown","baaa2bcf":"markdown","a4c42681":"markdown","8cfcb50d":"markdown","596d7676":"markdown","948d3345":"markdown","e4d8a6a9":"markdown","9a377a81":"markdown","cc526cc1":"markdown","78a30219":"markdown","d5467eca":"markdown","768b071f":"markdown","bb754d87":"markdown","0d5d3006":"markdown","5404d683":"markdown","af85257a":"markdown","ffc7af5d":"markdown","d6033fbe":"markdown","5830c021":"markdown","8c0552dd":"markdown","19c6b029":"markdown","f599a535":"markdown","27c24f1a":"markdown","0c790487":"markdown","1cb02599":"markdown","0dba5e95":"markdown","a6b92916":"markdown","a5a52ec2":"markdown","43c317aa":"markdown","6ae4359e":"markdown","5adf1f50":"markdown","96117af7":"markdown","58d914dd":"markdown","99c3a09d":"markdown","c68d4674":"markdown","d1be9459":"markdown","54c86d49":"markdown","4c83ba37":"markdown","1aafa9fa":"markdown","122b3628":"markdown","d687434e":"markdown","a741c61c":"markdown","5d46da8c":"markdown","8f37998f":"markdown","5612223a":"markdown","2d27a6e3":"markdown","7d732130":"markdown","9f49347b":"markdown","03bdad58":"markdown","df6038a7":"markdown","281a9a4c":"markdown","92c0c9e2":"markdown","aa399f84":"markdown","5e8f0ac7":"markdown","a8ecb32c":"markdown","6e844046":"markdown","ade6d6ba":"markdown","59bdbc3d":"markdown","141fac0f":"markdown","58f89147":"markdown","5c4abd95":"markdown","57f8afea":"markdown","e792ee02":"markdown","5f81a8d7":"markdown","42f01572":"markdown","86470b99":"markdown","abf1dc6a":"markdown","b3a6c634":"markdown"},"source":{"13a9c598":"# Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')","8e1d4c67":"# Importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","7c9f6175":"# visulaisation\nfrom matplotlib.pyplot import xticks\n%matplotlib inline","7f3b3bcc":"# Data display coustomization\npd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)","23f450f7":"lead = pd.read_csv(r\"\/kaggle\/input\/lead-scoring-dataset\/Lead Scoring.csv\")\nlead.head()","fc0f8dbb":"word=pd.read_excel(r\"\/kaggle\/input\/lead-scoring-dataset\/Leads Data Dictionary.xlsx\")\nword.head()","9cb5c029":"pd.set_option('display.max_colwidth', -1)\nword.drop('Unnamed: 0',inplace=True,axis=1)\nword.columns = word.iloc[1]\nword = word.iloc[2:]\nword.reset_index(drop=True, inplace=True)\nword.head(len(word))","b782c11c":"lead_dub = lead.copy()\n\n# Checking for duplicates and dropping the entire duplicate row if any\nlead_dub.drop_duplicates(subset=None, inplace=True)\nlead_dub.shape","f5aa24a3":"lead.shape","56ddb212":"lead.shape","b2fbd8e1":"lead.info()","b8a67cc5":"lead.describe()","90042a93":"# As we can observe that there are select values for many column.\n#This is because customer did not select any option from the list, hence it shows select.\n# Select values are as good as NULL.\n\n# Converting 'Select' values to NaN.\nlead = lead.replace('Select', np.nan)\nlead.head()","18fd620e":"lead.isnull().sum()","967b7e49":"round(100*(lead.isnull().sum()\/len(lead.index)), 2)","2b505c95":"# we will drop the columns having more than 60% NA values.\nlead = lead.drop(lead.loc[:,list(round(100*(lead.isnull().sum()\/len(lead.index)), 2)>60)].columns, 1)","0bdf712b":"round(100*(lead.isnull().sum()\/len(lead.index)), 2)","76699ad1":"#dropping Lead Number and Prospect ID since they have all unique values\n\nlead.drop(['Prospect ID', 'Lead Number'], 1, inplace = True)","365247bf":"lead.head()","c8e4c966":"# Lead Quality: Indicates the quality of lead based on the data and intuition the the employee who has been assigned to the lead","3f93657c":"lead['Lead Quality'].value_counts()\n","9e554593":"lead['Lead Quality'].describe()","09b688fe":"plt.figure(figsize = (10,5))\nax= sns.countplot(lead['Lead Quality'])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nplt.show()","0f87b287":"# As Lead quality is based on the impression employee & the lead, \n#if anything is left blank we can impute 'Not Sure' in NaN safely.\n\nlead['Lead Quality'] = lead['Lead Quality'].replace(np.nan, 'Not Sure')\n","a155e4ee":"plt.figure(figsize = (10,5))\nax= sns.countplot(lead['Lead Quality'])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nplt.show()","6128f028":"# Asymmetrique Activity Index  |\n# Asymmetrique Profile Index   \\   An index and score assigned to each customer\n# Asymmetrique Activity Score  |    based on their activity and their profile\n# Asymmetrique Profile Score   \\","0d04486c":"fig, axs = plt.subplots(2,2, figsize = (10,9))\nplt1 = sns.countplot(lead['Asymmetrique Activity Index'], ax = axs[0,0])\nfor p in plt1.patches:\n    plt1.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt2 = sns.violinplot(lead['Asymmetrique Activity Score'], ax = axs[0,1])\nplt3 = sns.countplot(lead['Asymmetrique Profile Index'], ax = axs[1,0])\nfor p in plt3.patches:\n    plt3.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt4 = sns.violinplot(lead['Asymmetrique Profile Score'], ax = axs[1,1])\nplt.tight_layout()","8248f49f":"# There is too much variation in thes parameters so its not reliable to impute any value in it. \n# 45% null values means we need to drop these columns.","06373973":"lead = lead.drop(['Asymmetrique Activity Index','Asymmetrique Activity Score',\n                  'Asymmetrique Profile Index','Asymmetrique Profile Score'],1)","c3cc89a0":"round(100*(lead.isnull().sum()\/len(lead.index)), 2)","3a6528e5":"# City","b8038016":"lead.City.value_counts()\n","c9951eed":"lead.City.describe()","4d1dc6d1":"plt.figure(figsize = (10,5))\nax= sns.countplot(lead['City'])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nplt.show()","39642730":"# Around 57.8% of the data available  is Mumbai so we can impute Mumbai in the missing values.","3cec3a0d":"lead['City'] = lead['City'].replace(np.nan, 'Mumbai')","c510c6a5":"plt.figure(figsize = (10,5))\nax= sns.countplot(lead['City'])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nplt.show()","c46c1b12":"# Specailization","1fef81b2":"lead.Specialization.describe()","518f0f3d":"lead.Specialization.value_counts()","0c46ee8e":"plt.figure(figsize = (10,5))\nax= sns.countplot(lead['Specialization'])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nplt.show()","b5a45efb":"# It maybe the case that lead has not entered any specialization if his\/her option is not availabe on the list,\n#  may not have any specialization or is a student.\n# Hence we can make a category \"Others\" for missing values. \n","5a452513":"lead['Specialization'] = lead['Specialization'].replace(np.nan, 'Others')","7cefcbea":"plt.figure(figsize = (10,5))\nax= sns.countplot(lead['Specialization'])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nplt.show()","b35f4bef":"round(100*(lead.isnull().sum()\/len(lead.index)), 2)","9131c871":"# Tags","8398deb5":"lead.Tags.describe()","32d0fde8":"lead.Tags.value_counts()","2ca25631":"plt.figure(figsize = (10,5))\nax= sns.countplot(lead['Tags'])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nplt.show()","db7065a5":"# Blanks in the tag column may be imputed by 'Will revert after reading the email'.","4ae52302":"lead['Tags'] = lead['Tags'].replace(np.nan, 'Will revert after reading the email')","c0cf7a68":"plt.figure(figsize = (10,5))\nax= sns.countplot(lead['Tags'])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nplt.show()","bb4c6103":"# What matters most to you in choosing a course","c3f40938":"lead['What matters most to you in choosing a course'].describe()","d39992a2":"lead['What matters most to you in choosing a course'].value_counts()","df6abb94":"plt.figure(figsize = (10,5))\nax= sns.countplot(lead['What matters most to you in choosing a course'])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","d74b1f96":"# Blanks in the this column may be imputed by 'Better Career Prospects'.","0dccd79f":"lead['What matters most to you in choosing a course'] = lead['What matters most to you in choosing a course'].replace(np.nan, 'Better Career Prospects')","75955346":"plt.figure(figsize = (10,5))\nax= sns.countplot(lead['What matters most to you in choosing a course'])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","7cafb9d6":"# Occupation","db042231":"lead['What is your current occupation'].describe()","2f7bc480":"lead['What is your current occupation'].value_counts()","ff8772df":"plt.figure(figsize = (10,5))\nax= sns.countplot(lead['What is your current occupation'])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","6244260d":"# 86% entries are of Unemployed so we can impute \"Unemployed\" in it.","1e5bd5d1":"lead['What is your current occupation'] = lead['What is your current occupation'].replace(np.nan, 'Unemployed')","0e73b1f2":"plt.figure(figsize = (10,5))\nax= sns.countplot(lead['What is your current occupation'])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","7a4a8d7e":"# Country","08dd6c82":"lead['Country'].describe()","67416207":"lead['Country'].value_counts()","125a4f86":"plt.figure(figsize = (10,5))\nax= sns.countplot(lead['Country'])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","4ac8411d":"# Country is India for most values so let's impute the same in missing values.\nlead['Country'] = lead['Country'].replace(np.nan, 'India')","37fe108f":"plt.figure(figsize = (10,5))\nax= sns.countplot(lead['Country'])\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","b8093780":"round(100*(lead.isnull().sum()\/len(lead.index)), 2)","01501347":"lead.isnull().sum()","99186b9a":"# Rest missing values are under 1.5% so we can drop these rows.\nlead.dropna(inplace = True)","f25a5eb7":"round(100*(lead.isnull().sum()\/len(lead.index)), 2)","86ecf247":"lead.isnull().sum()","4de3f2da":"data_retailed= len(lead)* 100 \/ len(lead_dub)\nprint(\"{} % of original rows is available for EDA\".format(round(data_retailed,2)))","d53bf1ad":"lead.shape","4ae242a2":"# Converted is the target variable, Indicates whether a lead has been successfully converted (1) or not (0).","d6f75737":"Converted = round((sum(lead['Converted'])\/len(lead['Converted'].index))*100,2)\n\nprint(\"We have almost {} %  Converted rate\".format(Converted))\n\n","c23ffedb":"plt.figure(figsize = (10,5))\nax= sns.countplot(x = \"Lead Origin\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","1bf494ca":"plt.figure(figsize = (20,5))\nax= sns.countplot(x = \"Lead Source\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","55191776":"lead['Lead Source'] = lead['Lead Source'].replace(['google'], 'Google')\nlead['Lead Source'] = lead['Lead Source'].replace(['Click2call', 'Live Chat', 'NC_EDM', 'Pay per Click Ads', 'Press_Release',\n  'Social Media', 'WeLearn', 'bing', 'blog', 'testone', 'welearnblog_Home', 'youtubechannel'], 'Others')","e8185e67":"plt.figure(figsize = (10,5))\nax= sns.countplot(x = \"Lead Source\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","227f2fb4":"plt.figure(figsize = (20,5))\nplt.subplot(1,2,1)\nax= sns.countplot(x = \"Do Not Email\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.subplot(1,2,2)\nax= sns.countplot(x = \"Do Not Call\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","3577ee3c":"lead['TotalVisits'].describe(percentiles=[0.05,.25, .5, .75, .90, .95, .99])","aa1d022d":"plt.figure(figsize = (10,5))\nsns.violinplot(lead['TotalVisits'])\nplt.show()","82945234":"# As we can see there are a number of outliers in the data.\n# We will cap the outliers to 95% value for analysis.","ae9804e1":"percentiles = lead['TotalVisits'].quantile([0.05,0.95]).values\nlead['TotalVisits'][lead['TotalVisits'] <= percentiles[0]] = percentiles[0]\nlead['TotalVisits'][lead['TotalVisits'] >= percentiles[1]] = percentiles[1]","9d8bd578":"plt.figure(figsize = (10,5))\nsns.violinplot(lead['TotalVisits'])\nplt.show()","221f7c05":"plt.figure(figsize = (10,5))\nsns.violinplot(y = 'TotalVisits', x = 'Converted', data = lead)\nplt.show()","53998371":"lead['Total Time Spent on Website'].describe()","9fc16333":"plt.figure(figsize = (10,5))\nsns.violinplot(lead['Total Time Spent on Website'])\nplt.show()","af31ad25":"plt.figure(figsize = (10,5))\nsns.violinplot(y = 'Total Time Spent on Website', x = 'Converted', data = lead)\nplt.show()","73b4bff5":"lead['Page Views Per Visit'].describe()","688d89e9":"plt.figure(figsize = (10,5))\nsns.violinplot(lead['Page Views Per Visit'])\nplt.show()","44b574f1":"# As we can see there are a number of outliers in the data.\n# We will cap the outliers to 95% value for analysis.","fe603902":"percentiles = lead['Page Views Per Visit'].quantile([0.05,0.95]).values\nlead['Page Views Per Visit'][lead['Page Views Per Visit'] <= percentiles[0]] = percentiles[0]\nlead['Page Views Per Visit'][lead['Page Views Per Visit'] >= percentiles[1]] = percentiles[1]","93eb8099":"plt.figure(figsize = (10,5))\nsns.violinplot(lead['Page Views Per Visit'])\nplt.show()","f6a56c2e":"plt.figure(figsize = (10,5))\nsns.violinplot(y = 'Page Views Per Visit', x = 'Converted', data = lead)\nplt.show()","ef8312df":"lead['Last Activity'].describe()","f68a5b1c":"lead['Last Activity'].value_counts()","b0ebdb1b":"plt.figure(figsize = (25,5))\nax= sns.countplot(x = \"Last Activity\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","d999fe5b":"# Let's keep considerable last activities as such and club all others to \"Other_Activity\"\nlead['Last Activity'] = lead['Last Activity'].replace(['Had a Phone Conversation', 'View in browser link Clicked', \n                                                       'Visited Booth in Tradeshow', 'Approached upfront',\n                                                       'Resubscribed to emails','Email Received', 'Email Marked Spam'],\n                                                      'Other_Activity')","4e1734ff":"plt.figure(figsize = (10,5))\nax= sns.countplot(x = \"Last Activity\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","959aa61f":"lead.Country.describe()","9070bfe3":"lead.Country.value_counts()","9ea6cbb3":"plt.figure(figsize = (25,5))\nax= sns.countplot(x = \"Country\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","fc96fbb3":"lead.Specialization.describe()","8feaab73":"lead.Specialization.value_counts()","19e54583":"lead['Specialization'] = lead['Specialization'].replace(['Others'], 'Other_Specialization')","ae43371e":"plt.figure(figsize = (25,5))\nax= sns.countplot(x = \"Specialization\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","34ee01cf":"lead['What is your current occupation'].describe()","3e1d20fc":"lead['What is your current occupation'].value_counts()","b3d5eb51":"lead['What is your current occupation'] = lead['What is your current occupation'].replace(['Other'], 'Other_Occupation')","af7e3d3a":"plt.figure(figsize = (10,5))\nax= sns.countplot(x = \"What is your current occupation\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","00873ad0":"lead['What matters most to you in choosing a course'].describe()","023983f3":"lead['What matters most to you in choosing a course'].value_counts()","9b11bc63":"plt.figure(figsize = (10,5))\nax= sns.countplot(x = \"What matters most to you in choosing a course\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","4beebdaf":"lead.Search.describe()","7f87ed4f":"lead.Search.value_counts()","b9808a30":"plt.figure(figsize = (10,5))\nax= sns.countplot(x = \"Search\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","65f5d619":"lead.Magazine.describe()","d57a907a":"lead.Magazine.value_counts()","78651748":"plt.figure(figsize = (10,5))\nax= sns.countplot(x = \"Magazine\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","b027cc17":"lead['Newspaper Article'].describe()","b140e158":"lead['Newspaper Article'].value_counts()","57a394e1":"plt.figure(figsize = (10,5))\nax= sns.countplot(x = \"Newspaper Article\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","850681fc":"lead['X Education Forums'].describe()","3ae12f7f":"lead['X Education Forums'].value_counts()","4a7b59d9":"plt.figure(figsize = (10,5))\nax= sns.countplot(x = \"X Education Forums\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","bd95d4a6":"lead['Newspaper'].describe()","bda12823":"lead['Newspaper'].value_counts()","5210d399":"plt.figure(figsize = (10,5))\nax= sns.countplot(x = \"Newspaper\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","7a5cfe00":"lead['Digital Advertisement'].describe()","05bd60b1":"lead['Digital Advertisement'].value_counts()","51a849b2":"plt.figure(figsize = (10,5))\nax= sns.countplot(x = \"Digital Advertisement\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","ba56d439":"lead['Through Recommendations'].describe()","cb741a12":"lead['Through Recommendations'].value_counts()","3a2250cb":"plt.figure(figsize = (10,5))\nax= sns.countplot(x = \"Through Recommendations\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","e244db73":"lead['Receive More Updates About Our Courses'].describe()","00b82798":"lead['Receive More Updates About Our Courses'].value_counts()","2e27c5b6":"plt.figure(figsize = (10,5))\nax= sns.countplot(x = \"Receive More Updates About Our Courses\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","cf875c86":"lead.Tags.describe()","f312594f":"lead.Tags.value_counts()","47e6c669":"plt.figure(figsize = (30,6))\nax= sns.countplot(x = \"Tags\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","ecf87f54":"# Let's keep considerable last activities as such and club all others to \"Other_Activity\"\nlead['Tags'] = lead['Tags'].replace(['In confusion whether part time or DLP', 'in touch with EINS','Diploma holder (Not Eligible)',\n                                     'Approached upfront','Graduation in progress','number not provided', 'opp hangup','Still Thinking',\n                                    'Lost to Others','Shall take in the next coming month','Lateral student','Interested in Next batch',\n                                    'Recognition issue (DEC approval)','Want to take admission but has financial problems',\n                                    'University not recognized'], 'Other_Tags')","66e36b44":"plt.figure(figsize = (20,6))\nax= sns.countplot(x = \"Tags\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","424d14d4":"lead['Lead Quality'].describe()","2c0f58fb":"lead['Lead Quality'].value_counts()","d38e4fb3":"plt.figure(figsize = (10,6))\nax= sns.countplot(x = \"Lead Quality\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","a5f80f60":"lead['Update me on Supply Chain Content'].describe()","be339f48":"lead['Update me on Supply Chain Content'].value_counts()","448c645a":"plt.figure(figsize = (10,6))\nax= sns.countplot(x = \"Update me on Supply Chain Content\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","b99ecf2d":"lead['Get updates on DM Content'].describe()","a2935481":"lead['Get updates on DM Content'].value_counts()","f06910e2":"plt.figure(figsize = (10,6))\nax= sns.countplot(x = \"Get updates on DM Content\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","9489445b":"lead['I agree to pay the amount through cheque'].describe()","692e3210":"lead['I agree to pay the amount through cheque'].value_counts()","7c30073a":"plt.figure(figsize = (10,6))\nax= sns.countplot(x = \"I agree to pay the amount through cheque\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","7dfcf526":"lead['A free copy of Mastering The Interview'].describe()","2aa04c10":"lead['A free copy of Mastering The Interview'].value_counts()","13dc9cbe":"plt.figure(figsize = (10,6))\nax= sns.countplot(x = \"A free copy of Mastering The Interview\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","39aa29e3":"lead.City.describe()","1ce5a49f":"lead.City.value_counts()","c6e1d13d":"plt.figure(figsize = (10,6))\nax= sns.countplot(x = \"City\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","bb8f199f":"lead['Last Notable Activity'].describe()","38063ba0":"lead['Last Notable Activity'].value_counts()","b5aab60c":"plt.figure(figsize = (20,6))\nax= sns.countplot(x = \"Last Notable Activity\", hue = \"Converted\", data = lead)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.xticks(rotation = 90)\nax.set_yscale('log')\nplt.show()","2fc87f8d":"lead = lead.drop(['What matters most to you in choosing a course','Search',\n                  'Magazine','Newspaper Article','X Education Forums','Newspaper',\n           'Digital Advertisement','Through Recommendations','Receive More Updates About Our Courses',\n                  'Update me on Supply Chain Content',\n           'Get updates on DM Content','I agree to pay the amount through cheque',\n                  'A free copy of Mastering The Interview','Country'],1)","6c128aa9":"print(\"Original Columns {} % Retained\".format(round((100* len(lead.columns)\/len(lead_dub.columns)),2)))","e796782a":"print(\"Original Data {} % Retained\".format(round((len(lead) * \n                                                     len(lead.columns))*100\/(len(lead_dub.columns)*len(lead_dub)),2)))","6d1567e2":"lead.shape","71e2cdb5":"lead.head()","07ff5fcc":"# List of variables to map\n\nvarlist =  ['Do Not Email', 'Do Not Call']\n\n# Defining the map function\ndef binary_map(x):\n    return x.map({'Yes': 1, \"No\": 0})\n\n# Applying the function to the housing list\nlead[varlist] = lead[varlist].apply(binary_map)\nlead.head()","8ffd6363":"# Creating a dummy variable for some of the categorical variables and dropping the first one.\ndummy1 = pd.get_dummies(lead[['Lead Origin', 'Lead Source', 'Last Activity', 'Specialization','What is your current occupation',\n                              'Tags','Lead Quality','City','Last Notable Activity']], drop_first=True)\ndummy1.head()","a62b5a47":"# Adding the results to the master dataframe\nlead = pd.concat([lead, dummy1], axis=1)\nlead.head()","e8528e65":"lead = lead.drop(['Lead Origin', 'Lead Source', 'Last Activity', 'Specialization',\n                  'What is your current occupation','Tags','Lead Quality','City','Last Notable Activity'], axis = 1)\nlead.head()","c327d133":"lead.shape","ccb0ab2a":"from sklearn.model_selection import train_test_split\n\n# Putting feature variable to X\nX = lead.drop(['Converted'], axis=1)","4a65f172":"X.head()","6e5b3c6e":"X.shape","89d3ac33":"# Putting response variable to y\ny = lead['Converted']","bc964fae":"y.head()","50591d51":"# Splitting the data into train and test\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=70)","42354adb":"X_train.head()","e32fa8f1":"X_train.shape","cac0fa1a":"X_test.head()","b3369e3e":"X_test.shape","d1ff6a40":"y_train.head()","b2244c39":"y_train.shape","7111685d":"y_test.head()","ab9004fd":"y_test.shape","ba2703ff":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\n\nX_train[['TotalVisits','Total Time Spent on Website','Page Views Per Visit']] = scaler.fit_transform(X_train[['TotalVisits','Total Time Spent on Website','Page Views Per Visit']])\n\nX_train.head()","157432c6":"X_train[['TotalVisits','Total Time Spent on Website','Page Views Per Visit']] = scaler.transform(X_train[['TotalVisits','Total Time Spent on Website','Page Views Per Visit']])\n\nX_train.head()","709e15ac":"# Checking the Converted Rate\nConverted = round((sum(lead['Converted'])\/len(lead['Converted'].index))*100,2)\nprint(\"We have almost {} %  Converted rate after successful data manipulation\".format(Converted))","af47d657":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import accuracy_score\nmodel = GaussianNB()","423cc9fb":"# fit the model with the training data\nmodel.fit(X_train,y_train)","07ef672d":"# predict the target on the train dataset\npredict_train = model.predict(X_train)\npredict_train","5ec69900":"trainaccuracy = accuracy_score(y_train,predict_train)\nprint('accuracy_score on train dataset : ', trainaccuracy)","64eaf72f":"# Check for the VIF values of the feature variables. \nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\n# Create a dataframe that will contain the names of all the feature variables and their respective VIFs\nvif = pd.DataFrame()\nvif['Features'] = X_train.columns\nvif['VIF'] = [variance_inflation_factor(X_train.values, i) for i in range(X_train.shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif.tail()","256e7513":"features_to_remove = vif.loc[vif['VIF'] >= 4.99,'Features'].values\nfeatures_to_remove = list(features_to_remove)\nprint(features_to_remove)","a136d007":"X_train = X_train.drop(columns=features_to_remove, axis = 1)\nX_train.head()","71299ff2":"X_test = X_test.drop(columns=features_to_remove, axis = 1)\nX_test.head()","b7bdbc36":"# fit the model with the training data\nmodel.fit(X_train,y_train)","9af721ef":"# predict the target on the train dataset\npredict_train = model.predict(X_train)\npredict_train","d7888c97":"accuracytrain = accuracy_score(y_train,predict_train)\nprint('accuracy_score on train dataset : ', accuracytrain)","fdfd1998":"# Check for the VIF values of the feature variables. \nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\n# Create a dataframe that will contain the names of all the feature variables and their respective VIFs\nvif = pd.DataFrame()\nvif['Features'] = X_train.columns\nvif['VIF'] = [variance_inflation_factor(X_train.values, i) for i in range(X_train.shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","4c7b44f5":"from sklearn import metrics\n# Confusion matrix \nconfusion = metrics.confusion_matrix(y_train, predict_train )\nprint(confusion)","56de91cf":"TP = confusion[1,1] # true positive \nTN = confusion[0,0] # true negatives\nFP = confusion[0,1] # false positives\nFN = confusion[1,0] # false negatives","550a4577":"# Let's see the sensitivity of our model\ntrainsensitivity= TP \/ float(TP+FN)\ntrainsensitivity","a58deb9c":"# Let us calculate specificity\ntrainspecificity= TN \/ float(TN+FP)\ntrainspecificity","5016d5b3":"# Calculate false postive rate - predicting Converted when customer does not have Converted\nprint(FP\/ float(TN+FP))","1a483006":"# Positive predictive value \nprint (TP \/ float(TP+FP))","233d73f0":"# Negative predictive value\nprint(TN \/ float(TN+ FN))","3f67c7fc":"def draw_roc( actual, probs ):\n    fpr, tpr, thresholds = metrics.roc_curve( actual, probs,\n                                              drop_intermediate = False )\n    auc_score = metrics.roc_auc_score( actual, probs )\n    plt.figure(figsize=(5, 5))\n    plt.plot( fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score )\n    plt.plot([0, 1], [0, 1], 'k--')\n    plt.xlim([0.0, 1.0])\n    plt.ylim([0.0, 1.05])\n    plt.xlabel('False Positive Rate or [1 - True Negative Rate]')\n    plt.ylabel('True Positive Rate')\n    plt.title('Receiver operating characteristic example')\n    plt.legend(loc=\"lower right\")\n    plt.show()\n\n    return None\n","8087a006":"draw_roc(y_train,predict_train)","cd8b229d":"#Using sklearn utilities for the same","e7017a9b":"from sklearn.metrics import precision_score, recall_score\nprecision_score(y_train,predict_train)","507051a2":"recall_score(y_train,predict_train)","a3150acd":"# predict the target on the test dataset\npredict_test = model.predict(X_test)\nprint('Target on test data\\n\\n',predict_test)","8c0ba833":"confusion2 = metrics.confusion_matrix(y_test, predict_test )\nprint(confusion2)","03bf1641":"# Let's check the overall accuracy.\ntestaccuracy= accuracy_score(y_test,predict_test)\ntestaccuracy","6d2fab5c":"# Let's see the sensitivity of our lmodel\ntestsensitivity=TP \/ float(TP+FN)\ntestsensitivity","e03bb09b":"# Let us calculate specificity\ntestspecificity= TN \/ float(TN+FP)\ntestspecificity","2338362c":"# Let us compare the values obtained for Train & Test:\nprint(\"Train Data Accuracy    :{} %\".format(round((trainaccuracy*100),2)))\nprint(\"Train Data Sensitivity :{} %\".format(round((trainsensitivity*100),2)))\nprint(\"Train Data Specificity :{} %\".format(round((trainspecificity*100),2)))\nprint(\"Test Data Accuracy     :{} %\".format(round((testaccuracy*100),2)))\nprint(\"Test Data Sensitivity  :{} %\".format(round((testsensitivity*100),2)))\nprint(\"Test Data Specificity  :{} %\".format(round((testspecificity*100),2)))","ea72896d":"# Plotting the ROC Curve","df774134":"### Converting some binary variables (Yes\/No) to 1\/0","99ec2e3f":"## Data Preparation","9ad1561e":"- Most entries are 'No'. No Inference can be drawn with this parameter.","286bee19":"## Digital Advertisement","c217827e":"Now we will take care of null values in each column one by one.\n","6678c8a3":"The NaN, in this case, is interpretted as no correlation between the two variables.","f8c3ce84":"- 'Not Sure' is a mixed emotion, it may be Interested or Not Interested. Depend upon the mood of customer,their requirement & content of the communication, Lead can be conveted into a customer.\n- 'Worst' Lead Quality brings less business ","262cf816":"- Most entries are 'No'. No Inference can be drawn with this parameter.","66a5501f":"**To improve overall lead conversion rate, we need to focus more on improving lead converion of API and Landing Page Submission origin and generate more leads from Lead Add Form.**","9b2167d3":"- 'Will revert after reading the email' is a mixed emotion, it may be Interested or Not Interested. Depend upon the mood of customer, their requirement & content of the email, Lead can be conveted into a customer.\n- 'Closed by Horizon', 'Lost to EINS' are positive tag for Lead\n- 'Invalid number', 'wrong number given','Not doing further education'& 'Interested  in full time MBA' are negative tag ","8a025320":"- Google and Direct traffic generates maximum number of leads.\n- Conversion Rate of reference leads and leads through welingak website is high.","f83e90d0":"- Most entries are 'No'. No Inference can be drawn with this parameter.","112bb509":"## Do Not Email & Do Not Call","5d05eac9":"- All entries are 'No'. No Inference can be drawn with this parameter.","fb0727d7":"- All entries are 'No'. No Inference can be drawn with this parameter.","4435c5cd":"- API and Landing Page Submission have 30-35% conversion rate but count of lead originated from them are considerable.\n- Lead Add Form has more than 90% conversion rate but count of lead are not very high.\n- Lead Import are very less in count.","eccc3ba8":"- Leads spending more time on the weblise are more likely to be converted.","4c4ebf6d":"Now Data is free from all missing value  and we can start with the analysis ","cbcfd7e3":"### Lead Origin","e472fbc6":"## Data Inspection","e82d29f9":"# Model Building","af042cff":"## Duplicate Check","342f05fe":"- Working Professionals going for the course have high chances of joining it.\n- Unemployed leads are the most in numbers but has around 30-35% conversion rate.","10122fd9":"## What matters most to you in choosing a course","baaa2bcf":"## Lead Source","a4c42681":"- Most entries are 'No'. No Inference can be drawn with this parameter.","8cfcb50d":"Making predictions on the test set","596d7676":"## Univariate Analysis","948d3345":"- Most of the lead have their Email opened as their last activity.\n- Conversion rate for leads with last activity as SMS Sent is almost 62%.","e4d8a6a9":"## Occupation","9a377a81":"# Naive Bayes","cc526cc1":"- Most entries are 'No'. No Inference can be drawn with this parameter.","78a30219":"# VIF","d5467eca":"- Median for converted and not converted leads are the same.","768b071f":"- Most entries are 'No'. No Inference can be drawn with this parameter.","bb754d87":"## Problem Statement","0d5d3006":"- All entries are 'No'. No Inference can be drawn with this parameter.","5404d683":"- 'SMS Sent' is strong symbol for positive lead ","af85257a":"## City","ffc7af5d":"## Update me on Supply Chain Content","d6033fbe":"### Converted","5830c021":"### Data Loading","8c0552dd":"## Page views per visit","19c6b029":"**Website should be made more engaging to make leads spend more time.**","f599a535":"- Median for converted and unconverted leads is the same.","27c24f1a":"# Lead Scoring ","0c790487":"# Feature Scaling","1cb02599":"- 'A free copy of Mastering The Interview' doesn't play role in decision making. ","0dba5e95":"## Newspaper Article","a6b92916":"- All entries are 'No'. No Inference can be drawn with this parameter.","a5a52ec2":"\nBased on the univariate analysis we have seen that many columns are not adding any information to the model, hence we can drop them for frther analysis","43c317aa":"An education company named X Education sells online courses to industry professionals. On any given day, many professionals who are interested in the courses land on their website and browse for courses. \n\n \n\nThe company markets its courses on several websites and search engines like Google. Once these people land on the website, they might browse the courses or fill up a form for the course or watch some videos. When these people fill up a form providing their email address or phone number, they are classified to be a lead. Moreover, the company also gets leads through past referrals. Once these leads are acquired, employees from the sales team start making calls, writing emails, etc. Through this process, some of the leads get converted while most do not. The typical lead conversion rate at X education is around 30%. \n\n \n\nNow, although X Education gets a lot of leads, its lead conversion rate is very poor. For example, if, say, they acquire 100 leads in a day, only about 30 of them are converted. To make this process more efficient, the company wishes to identify the most potential leads, also known as \u2018Hot Leads\u2019. If they successfully identify this set of leads, the lead conversion rate should go up as the sales team will now be focusing more on communicating with the potential leads rather than making calls to everyone. A typical lead conversion process can be represented using the following funnel:\n\n\nLead Conversion Process - Demonstrated as a funnel\nAs you can see, there are a lot of leads generated in the initial stage (top) but only a few of them come out as paying customers from the bottom. In the middle stage, you need to nurture the potential leads well (i.e. educating the leads about the product, constantly communicating etc. ) in order to get a higher lead conversion.\n\n \n\nX Education has appointed you to help them select the most promising leads, i.e. the leads that are most likely to convert into paying customers. The company requires you to build a model wherein you need to assign a lead score to each of the leads such that the customers with higher lead score have a higher conversion chance and the customers with lower lead score have a lower conversion chance. The CEO, in particular, has given a ballpark of the target lead conversion rate to be around 80%.\n\n \n\nData\nYou have been provided with a leads dataset from the past with around 9000 data points. This dataset consists of various attributes such as Lead Source, Total Time Spent on Website, Total Visits, Last Activity, etc. which may or may not be useful in ultimately deciding whether a lead will be converted or not. The target variable, in this case, is the column \u2018Converted\u2019 which tells whether a past lead was converted or not wherein 1 means it was converted and 0 means it wasn\u2019t converted. You can learn more about the dataset from the data dictionary provided in the zip folder at the end of the page. Another thing that you also need to check out for are the levels present in the categorical variables. Many of the categorical variables have a level called 'Select' which needs to be handled because it is as good as a null value (think why?).","6ae4359e":"- Focus should be more on the Specialization with high conversion rate.","5adf1f50":"## I agree to pay the amount through cheque","96117af7":"- Most values are 'India' , we can tell core business is coming from India market ","58d914dd":"The shape after running the drop duplicate command is same as the original dataframe.\n\nHence we can conclude that there were zero duplicate values in the dataset.","99c3a09d":"## Tags","c68d4674":"## Search","d1be9459":"All entries are 'No'. No Inference can be drawn with this parameter.","54c86d49":"**They have potential to make business from US, Middle East & Europe**","4c83ba37":"It is a classification technique based on Bayes\u2019 theorem with an assumption of independence between predictors. In simple terms, a Naive Bayes classifier assumes that the presence of a particular feature in a class is unrelated to the presence of any other feature.","1aafa9fa":"**Nothng conclusive can be said on the basis of Total Visits.**","122b3628":"## Lead Quality","d687434e":"**Nothing can be said specifically for lead conversion from Page Views Per Visit**","a741c61c":"# Precision and Recall","5d46da8c":"## A free copy of Mastering The Interview","8f37998f":"# Exploratory Data Analytics","5612223a":"## Country","2d27a6e3":"# VIF","7d732130":"## X Education Forums","9f49347b":"Data Dictionary","03bdad58":"- Most entries are 'Better Career Prospects'. No Inference can be drawn with this parameter.","df6038a7":"## Data Cleaning","281a9a4c":"## Goals","92c0c9e2":"## Last Notable Activity","aa399f84":"## Receive More Updates About Our Courses","5e8f0ac7":"## **Results**","a8ecb32c":"## Data Preparation","6e844046":"## Total Visits","ade6d6ba":"**To improve overall lead conversion rate, focus should be on improving lead converion of olark chat, organic search, direct traffic, and google leads and generate more leads from reference and welingak website.**","59bdbc3d":"- Most leads are from mumbai with around 30% conversion rate.","141fac0f":"## Last Activity","58f89147":"## Total time spent on website","5c4abd95":"This are few field where human psychology, consumer behavior & business understanding overpowers the statistic interpretation of the data ","57f8afea":"## Through Recommendations","e792ee02":"## Get updates on DM Content","5f81a8d7":"## Magazine","42f01572":"There are quite a few goals for this case study.\n\n\nBuild a model to assign a lead score between 0 and 100 to each of the leads which can be used by the company to target potential leads. A higher score would mean that the lead is hot, i.e. is most likely to convert whereas a lower score would mean that the lead is cold and will mostly not get converted.\nThere are some more problems presented by the company which your model should be able to adjust to if the company's requirement changes in the future so you will need to handle these as well. ","86470b99":"## Specialization","abf1dc6a":"# Final Observation:","b3a6c634":"## Newspaper"}}