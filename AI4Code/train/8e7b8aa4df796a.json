{"cell_type":{"9538e564":"code","ee1e8ec1":"code","91b6cc58":"code","1fef1691":"code","2ed7158f":"code","c0c1a0fd":"code","0118486a":"code","416daa66":"code","d2193ebb":"code","7b7303f5":"code","1d522c12":"code","da1f592d":"code","0209825f":"code","fadd5347":"code","c69d2e92":"code","2a8c2728":"code","f9ab20b8":"code","5ff1a318":"code","11831ae9":"code","87ae74ef":"markdown","aac16496":"markdown","d3cd9c4a":"markdown","af627a80":"markdown","6b4bef1a":"markdown","10e86ad3":"markdown","dd9144f4":"markdown"},"source":{"9538e564":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ee1e8ec1":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\ntrain = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","91b6cc58":"print('The size of the tranin data: ' + str(train.shape))\nprint('The size of the test data: ' + str(test.shape))","1fef1691":"data = pd.concat([train, test], sort = False)","2ed7158f":"print('The ratio of the survivavility: ' + str(train['Survived'].mean()))","c0c1a0fd":"print('Is there null value index into train data?: ' + str(train['Survived'].isnull().sum())) \nprint('And, is there any unique value other than 0 or 1?: ' + str(train['Survived'].unique()))","0118486a":"import folium","416daa66":"# Mean latitude\/longitude between 3 ports is picked by center.\nsea_route = folium.Map(location=[51, -5.76], zoom_start=6)\n\n# I have a little knowledge around there, and got choice them from some good references.\nfolium.Marker([50.892239,-1.3981697], popup='Southampton<br><i>10 April 1912<\/i>').add_to(sea_route)\nfolium.Marker([49.646042,-1.618031], popup='Cherbuorg<br><i>10 April 1912<\/i>').add_to(sea_route)\nfolium.Marker([51.853955,-8.2997997], popup='Queenstown<br><i>11 April 1912<\/i>').add_to(sea_route)\n\nsea_route","d2193ebb":"print(\"Embarked is only three port or not?: \" + str(train['Embarked'].unique()))\nprint(\"And, is there null value?: \" + str(train['Embarked'].isnull().sum()))","7b7303f5":"train['Embarked'].value_counts()","1d522c12":"# Null value cells will be changed by the major attribute.\ntrain['Embarked'].fillna('S', inplace=True)","da1f592d":"train['Survived'].groupby(train['Embarked']).mean()","0209825f":"# Counting for each embarking ports\nsns.countplot(train['Embarked'], hue=train['Survived'])","fadd5347":"train['Pclass'].isnull().sum()","c69d2e92":"# Let me focus on passenger's social level (?) based on their ticket rank.\nsns.countplot(train['Embarked'], hue=train['Pclass'])","2a8c2728":"# Before heatmap making, drop impossible features.\ntrain_heat = train.copy()\ntrain_heat.drop(['Name', 'Ticket', 'Cabin', 'PassengerId', 'Age'], 1, inplace=True)\ntrain_heat.head()","f9ab20b8":"train_heat['Sex'].unique()","5ff1a318":"train_heat['Sex'].replace(['male', 'female'], [0, 1], inplace=True)\ntrain_heat['Embarked'].replace( ['S', 'C', 'Q'], [0, 1, 2], inplace=True )\ntrain_heat.head()","11831ae9":"plt.figure(figsize=(14, 12))\nsns.heatmap(\n    train_heat.astype(float).corr()\n    , linewidths=0.1\n    , square=True\n    , linecolor='white'\n    , annot=True\n    , cmap='YlGn'\n)\nplt.show()","87ae74ef":"Let me combine the two dataframe before pre-processing","aac16496":"### Correlation against \"Survived\"","d3cd9c4a":"Well, Many passengers from Cherbuorg port had higher ranked ticket rather than S or Q.\nOther words, It speculated that their survivavility has more relationship against \"Pclass\" than \"Embarked\".\n\nKeep this speculation above, check the overall correlation by \"Survived\" using with heatmap.","af627a80":"1. It looks like passengers from Cherbuorg got higher possivility of alive any other Embarked.\nBut, why?","6b4bef1a":"Hm, It means that the top 3 correlation features are \"Sex\", \"Pclass\", and \"Fare\".","10e86ad3":"## Exploratory data analysis\nFirst, let me check the ratio of \"Dead or Alive\".","dd9144f4":"### Visualization of the Embarkation\nReffered from http:\/\/gisdatascience.com\/spatial-data-visualization-in-python, titanic embarked ports are visualized on geo map."}}