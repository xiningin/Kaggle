{"cell_type":{"4beee217":"code","92ffc322":"code","d08883e7":"code","fdc69184":"code","59fb54ed":"code","a9f794e0":"code","4e9828af":"code","7cb96983":"code","14efcddf":"code","12b079bc":"code","5d00259f":"code","d3f9e9b8":"code","0f08c9ed":"code","588c0c22":"code","f16c1d1c":"code","609ed87a":"code","7c2976c0":"code","6e766b07":"code","cac18bc2":"code","7f2e644f":"code","1d28957a":"code","965b9b15":"code","ad4c7c67":"code","edd1f032":"code","b0097e78":"code","7248691d":"code","0f57230d":"code","524d5599":"code","99fc3bb8":"code","5db3bef3":"code","dcb73108":"code","5392ab6f":"code","224e58c1":"code","d2d394dc":"code","4c331a4d":"code","5d9c0098":"code","d4a69c16":"code","50f59808":"code","f0a7df39":"code","6a5a14b3":"code","18cf8207":"code","24fede8e":"code","988d1f32":"code","046a35d9":"code","c163811b":"code","c8d064b6":"markdown","6cf51c45":"markdown","d998b67a":"markdown","d59a4add":"markdown","626d1f03":"markdown","cc17d5ff":"markdown","475d0685":"markdown","f02b98a7":"markdown","4c3fa9c6":"markdown","a9e0a83c":"markdown","c51693e7":"markdown","5393e837":"markdown","cefa5cb0":"markdown"},"source":{"4beee217":"# !pip install pandasql\n# !pip install plotly==4.8.1","92ffc322":"from collections import defaultdict\nimport matplotlib.pyplot as plt\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom pandasql import sqldf\nimport plotly.graph_objects as go\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\npysqldf = lambda q: sqldf(q, globals())","d08883e7":"keywords_dict = defaultdict(set)\nkeywords_dict['viral_shedding_stool'] = { \n      'feces',\n      'fecal',\n      'stool',\n      'faecal'}","fdc69184":"journal_impact_dict = {'BMJ': 27.604, \n 'Nature': 21.126,\n 'Lancet': 59.102,\n 'Science': 41.063,\n 'J Med Virol': 2.373,\n 'J. med. virol': 2.373,\n 'JAMA': 51.273,\n 'Int J Infect Dis': 3.538, \n 'Crit Care': 6.7, \n 'Sci Rep': 4.011, \n 'J Infect': 4.603, \n 'N Engl J Med': 70.670, \n 'Information Processing and Management of Uncertainty in Knowledge-Based Systems': 1,\n 'Lancet Infect Dis': 27.516,\n 'Travel Med Infect Dis': 3.42,\n 'Dermatol Ther': 3.810,\n 'J Am Acad Dermatol': 7.102, \n 'Med Hypotheses': 1.322, \n 'Sci Total Environ': 5.589,\n 'Advances in Information Retrieval': 1,\n 'Advances in Knowledge Discovery and Data Mining': 1,\n 'Clin Infect Dis': 9.117,\n 'Intensive Care Med': 18.967,\n 'Head Neck': 2.442, \n 'Clin. infect. dis': 9.117, \n 'Infect Control Hosp Epidemiol': 3.084, \n 'Bull Acad Natl Med': 1, \n 'New Scientist': 1, \n 'Gastroenterology': 20.877, \n 'J Clin Virol': 2.950, \n 'Psychiatry Res': 3.917, \n 'JMIR Public Health Surveill':5.175, \n 'Radiology': 7.608,\n 'Viruses': 3.8111, \n 'Infection control and hospital epidemiology':3.084,\n 'Brain Behav Immun': 6.306, \n 'Artificial Intelligence Applications and Innovations':1,\n 'The New England journal of medicine': 70.670,\n 'Scientific reports': 4.011,\n 'Lancet Respir Med': 22.992, \n 'Circulation': 23.054, \n 'MMW Fortschr Med': 1,\n 'Ann Intern Med': 19.315, \n 'Diabetes Metab Syndr': 3.319, \n 'Responsible Design, Implementation and Use of Information and Communication Technology':1,\n 'Asian J Psychiatr':2.030,\n 'Emerg Microbes Infect': 6.212,\n 'Int J Surg': 3.158, \n 'PLoS One': 2.776, \n 'Anesth Analg': 3.827}","59fb54ed":"meta_df = pd.read_csv(\"\/kaggle\/input\/CORD-19-research-challenge\/metadata.csv\")","a9f794e0":"meta_df['publish_time'] = pd.to_datetime(meta_df['publish_time'])","4e9828af":"meta_df['abstract_clean'] = meta_df.apply(lambda x: x.abstract if (\n                                            x.abstract==x.abstract and len(x.abstract) > 5) else \n                                                                  x.title, axis=1)","7cb96983":"pr_sources = ['Medline', 'PMC', 'Elsevier', 'WHO']\nmeta_df['peer_review_source'] = meta_df.source_x.apply(lambda x: True if any(\n                                                    [(pr_source in x) for pr_source in pr_sources]) \n                                                       else False)","14efcddf":"meta_df['journal_impact'] = meta_df.journal.apply(lambda x: journal_impact_dict.get(x))","12b079bc":"meta_df['year'] = meta_df.publish_time.dt.year","5d00259f":"meta_df['viral_shedding_stool'] = meta_df.abstract_clean.apply(lambda x: \n                                        any([(keyword in str(x)) for keyword in keywords_dict['viral_shedding_stool']]))","d3f9e9b8":"max_time = \"\"\"(SELECT MAX(publish_time) FROM meta_df \n                WHERE viral_shedding_stool = TRUE AND peer_review_source = TRUE and publish_time <= date('now'))\"\"\"\npr_source = \"AND peer_review_source = TRUE\"\npr_source_false = \"AND peer_review_source = FALSE\"\npr_monthly_sql = \"\"\"\n    SELECT \n        *\n    FROM (\n        SELECT\n            \"viral_shedding\" category,\n            DENSE_RANK() OVER(ORDER BY journal_impact DESC) rank,\n            STRFTIME(\"%m\/%d\/%Y\", DATE({max_time}, '-27 day')) || \" - \" || STRFTIME(\"%m\/%d\/%Y\",{max_time}) date_range, \n            STRFTIME(\"%m\/%d\/%Y\",publish_time) publish_time,\n            \"<a href='\"|| substr(url, 1, instr(url, ';') - 1) || \"'>\" || title || \"<\/a>\" title, \n            abstract abstract, \n            journal || \" (\" || ROUND(journal_impact,2) || \")\" journal\n          FROM \n              meta_df \n          WHERE \n              publish_time BETWEEN \n                DATE({max_time},'-27 day') \n                AND\n                {max_time}\n              AND\n              viral_shedding_stool = TRUE\n              {pr_source}\n    )\n    WHERE \n        rank <= 20 \n  ORDER BY \n     rank ASC\n\"\"\"\npr_YTD_sql = \"\"\"\n        SELECT \n        *\n        FROM \n        (\n        SELECT\n            \"viral_shedding\" category, \n            DENSE_RANK() OVER(ORDER BY journal_impact DESC) rank,\n           (SELECT \n               STRFTIME(\"%m\/%d\/%Y\", MIN(publish_time)) \n               FROM meta_df \n               WHERE year = 2020 ) || \" - \" || \n               (SELECT \n               STRFTIME(\"%m\/%d\/%Y\", MAX(publish_time)) \n               FROM meta_df \n               WHERE year = 2020 AND publish_time <= date('now')) date_range, \n            STRFTIME(\"%m\/%d\/%Y\",publish_time) publish_time,\n            \"<a href='\"|| substr(url, 1, instr(url, ';') - 1) || \"'>\" || title || \"<\/a>\" title, \n            abstract abstract, \n            journal || \" (\" || ROUND(journal_impact,2) || \")\" journal\n        FROM \n            meta_df \n        WHERE \n            viral_shedding_stool = TRUE\n            AND \n            year = 2020 \n            {pr_source}\n        )\n        WHERE \n            rank <= 20\n      ORDER BY \n        rank ASC\n\"\"\"\n\nlast_28_days_pr_dataset = pysqldf(pr_monthly_sql.format(max_time=max_time, pr_source = pr_source))\nlast_28_days_dataset = pysqldf(pr_monthly_sql.format(max_time=max_time, pr_source =pr_source_false))\nytd_dataset = pysqldf(pr_YTD_sql.format(pr_source = pr_source))","0f08c9ed":"fig = go.Figure(data=[go.Table(\n                columnwidth = [40*1.5,80*1.5,100*1.5,250*1.5,70*1.5], \n                header=dict(values=['Rank', 'Publish Time', 'Title + Link', 'Abstract', 'Journal (I-Factor)']),\n                 cells=dict(values=[ytd_dataset['rank'],\n                                    ytd_dataset.publish_time, \n                                    ytd_dataset.title, \n                                    ytd_dataset.abstract, \n                                    ytd_dataset.journal])\n                        )\n                     ])\nfig.update_layout(\n    title=\"Most Notable COVID-19 Papers YTD ({})\".format(ytd_dataset.date_range.iloc[0,])\n)\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            buttons=list([\n                dict(\n                    args=[\"category\", \"viral_shedding\"],\n                    label=\"Viral Shedding\",\n                    method=\"restyle\"\n                ),\n            ]),\n            direction=\"down\",\n            pad={\"r\": 10, \"t\": 10},\n            showactive=True,\n            x=0.15,\n            xanchor=\"left\",\n            y=1.065,\n            yanchor=\"top\"\n        ),\n    ]\n)\n\n# Add annotation\nfig.update_layout(\n    annotations=[\n        dict(text=\"Paper Category:\", showarrow=False,\n        x=0, y=1.05, yref=\"paper\", align=\"left\")\n    ]\n)\n\nfig.update_layout(\n    height=1000,\n)\n\nfig.show()","588c0c22":"fig = go.Figure(data=[go.Table(\n                columnwidth = [40*1.5,80*1.5,100*1.5,250*1.5,70*1.5], \n                header=dict(values=['Rank', 'Publish Time', 'Title + Link', 'Abstract', 'Journal (I-Factor)']),\n                 cells=dict(values=[last_28_days_pr_dataset['rank'],\n                                    last_28_days_pr_dataset.publish_time, \n                                    last_28_days_pr_dataset.title, \n                                    last_28_days_pr_dataset.abstract, \n                                    last_28_days_pr_dataset.journal])\n                        )\n                     ])\nfig.update_layout(\n    title=\"Most Notable COVID-19 Papers, last 28 days ({})\".format(last_28_days_dataset.date_range.iloc[0,])\n)\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            buttons=list([\n                dict(\n                    args=[\"category\", \"viral_shedding\"],\n                    label=\"Viral Shedding\",\n                    method=\"restyle\"\n                ),\n            ]),\n            direction=\"down\",\n            pad={\"r\": 10, \"t\": 10},\n            showactive=True,\n            x=0.15,\n            xanchor=\"left\",\n            y=1.065,\n            yanchor=\"top\"\n        ),\n    ]\n)\n# Add annotation\nfig.update_layout(\n    annotations=[\n        dict(text=\"Paper Category:\", showarrow=False,\n        x=0, y=1.05, yref=\"paper\", align=\"left\")\n    ]\n)\n\nfig.update_layout(\n    height=1000,\n)\n\nfig.show()","f16c1d1c":"fig = go.Figure(data=[go.Table(\n                columnwidth = [40*1.5,80*1.5,100*1.5,250*1.5,70*1.5], \n                header=dict(values=['Rank', 'Publish Time', 'Title + Link', 'Abstract', 'Journal']),\n                 cells=dict(values=[last_28_days_dataset['rank'],\n                                    last_28_days_dataset.publish_time, \n                                    last_28_days_dataset.title, \n                                    last_28_days_dataset.abstract, \n                                    last_28_days_dataset.journal])\n                        )\n                     ])\nfig.update_layout(\n    title=\"Most Notable COVID-19 Papers (not necessarily peer reviewed), last 28 days ({})\".format(last_28_days_dataset.date_range.iloc[0,])\n)\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            buttons=list([\n                dict(\n                    args=[\"category\", \"viral_shedding\"],\n                    label=\"Viral Shedding\",\n                    method=\"restyle\"\n                ),\n            ]),\n            direction=\"down\",\n            pad={\"r\": 10, \"t\": 10},\n            showactive=True,\n            x=0.15,\n            xanchor=\"left\",\n            y=1.065,\n            yanchor=\"top\"\n        ),\n    ]\n)\n# Add annotation\nfig.update_layout(\n    annotations=[\n        dict(text=\"Paper Category:\", showarrow=False,\n        x=0, y=1.05, yref=\"paper\", align=\"left\")\n    ]\n)\n\nfig.update_layout(\n    height=1000,\n)\n\nfig.show()","609ed87a":"meta_df['publish_time_month_year'] = pd.to_datetime(meta_df.publish_time).dt.to_period('M')","7c2976c0":"meta_df.query(\"publish_time_month_year > '1970-01'\").publish_time_month_year.value_counts().sort_index().plot()","6e766b07":"meta_df.query(\"publish_time_month_year > '2001-01' and publish_time_month_year < '2020-06'\").publish_time_month_year.value_counts().sort_index().plot()","cac18bc2":"meta_df.query(\"publish_time_month_year >= '2019-11' and publish_time_month_year <= '2020-06'\").publish_time_month_year.value_counts().sort_index().plot()","7f2e644f":"meta_df.query(\"publish_time >= '2019-11-01' and publish_time <= '2020-06-01'\").publish_time.value_counts().sort_index().plot(figsize=(10,8))","1d28957a":"meta_df.query(\"publish_time_month_year >= '2019-01' and publish_time_month_year <= '2019-12'\").publish_time_month_year.value_counts().sort_index().plot()","965b9b15":"meta_df.query(\"publish_time >= '2019-01-01' and publish_time <= '2019-02-01'\").publish_time.value_counts().sort_index().plot(figsize=(10,8))","ad4c7c67":"meta_df.source_x.value_counts().iloc[::-1].plot.barh(figsize=(10,8))","edd1f032":"meta_df.journal.nunique()","b0097e78":"meta_df.query(\"publish_time >= '2010-01-01'\").journal.nunique()","7248691d":"meta_df.query(\"publish_time >= '2010-01-01'\").journal.value_counts().head(20).sum()\/meta_df.query(\"publish_time >= '2010-01-01'\").shape[0]","0f57230d":"meta_df.journal.value_counts().head(10)","524d5599":"meta_df['abstract_len'] = meta_df.abstract.str.len()","99fc3bb8":"meta_df['abstract_len'].describe()","5db3bef3":"meta_df['abstract_len'].hist()","dcb73108":"meta_df['abstract_words'] = meta_df.abstract.apply(lambda x: len(str(x).split(' ')))","5392ab6f":"meta_df['abstract_words'].describe()","224e58c1":"meta_df.query('abstract_words >1 ')['abstract_words'].describe()","d2d394dc":"meta_df.query(\"publish_time >= '2020-01-01'\")['abstract_words'].describe()","4c331a4d":"meta_df.query(\"publish_time >= '2020-01-01' and abstract_words <10\").shape[0]\/\\\nmeta_df.query(\"publish_time >= '2020-01-01'\").shape[0]","5d9c0098":"meta_df.query(\"publish_time >= '2010-01-01' and abstract_words < 400\")['abstract_words'].hist()","d4a69c16":"meta_df.query(\"publish_time >= '2010-01-01' and abstract_words < 400\")['abstract_words'].value_counts().head(5)","50f59808":"meta_df.query(\"publish_time >= '2010-01-01' and abstract_words < 10\")['abstract_words'].value_counts()","f0a7df39":"21856\/100000","6a5a14b3":"meta_df.query(\"abstract_words ==7\").abstract.head()","18cf8207":"print(meta_df.query(\"publish_time >= '2010-01-01'\").shape[0])\nprint(meta_df.shape[0])","24fede8e":"wordcloud_abstract = WordCloud(background_color=\"white\").generate(' '.join(meta_df.query(\"publish_time >= '2019-10-01'\").abstract.astype(str)))\n","988d1f32":"plt.figure(figsize = (10,10))\nplt.imshow(wordcloud_abstract, interpolation='bilinear')\nplt.axis(\"off\")","046a35d9":"wordcloud_titles = WordCloud(background_color=\"white\").generate(' '.join(meta_df.query(\"publish_time >= '2019-10-01'\").title.astype(str)))","c163811b":"plt.figure(figsize = (10,10))\nplt.imshow(wordcloud_titles, interpolation='bilinear')\nplt.axis(\"off\")","c8d064b6":"(Spike in January is from papers with publishing time of \"2020\" (no specific date) that getted mapped to 2020-01-01 ","6cf51c45":"Add relevant columns ... ","d998b67a":"Viral Shedding Mappings were manually curated by looking at example papers\/insights on competition homepage. ","d59a4add":"**Summary of insights**:\n- **When were papers published?**: Papers go back to 2003. Prior to 2020, there were two peaks in publication volume: between 2003 and 2009 annual research peaked around 2006, and between 2010 and 2019 annual research peaked in 2015 and 2016.\n    - Some papers do not have a MM-DD-YYYY date and are just tagged with time \u201c2020\u201d. _That is why, in addition to a view of the best papers for the past 28 days, I also include a year-to-date view so those papers aren't included._ \n- **Abstracts:** About 20% of papers since 2010 don\u2019t have an abstract. In fact, that goes up to 33% for 2020 papers. That\u2019s a lot ... _That is why in my ETL I replace abstracts of length less than 5 with the paper title._ (`abstract_clean`). \n    - The distribution of Abstract character length is not normal. When you exclude papers with no abstract, it skews right.  \n- **Number of articles**: 100.1K since 2010, 136k overall\n- **Journals**: There are 15,612 unique journals in the dataset, 13,223 from papers published on or after 2010\n    - Of the post-2009 papers, the journals with the most publications are PLoS One and BioRxiv. The top 20 journals account for 10.7% of papers in this time period \u2014 in other words, there is a very long tail here. \n    - Even when only looking at papers from 2020, the top 50 journals by paper count only account for 17.2% of 2020 papers","626d1f03":"# Introduction \n\nFor this notebook, I took an analytics approach to get insights for COVID-19 experts\/stakeholders who want to see recent relevant papers to review for different COVID-19 sub-topics. \n\nTo rank papers, I used [the impact factor](https:\/\/en.wikipedia.org\/wiki\/Impact_factor) of journals, and created a list of keywords to flag for sub-topics. \n\nThis notebook is a proof-of-concept. Possible next steps include: \n- Using Mechanical Turk to expand out journal impact factor labels (current labels only cover ~17% of 2020 papers)\n- Create more keyword mappings or use deep learning techniques to classify for more sub-topics (currently only one sub-topic labeled, viral sheddings)\n- Use cloud services to run this notebook either daily or whenever the underlying dataset is updated\n- Using analytics or deep learning techniques to populate other desired columns to then feed into reporting, such as median days after onset for COVID-19 presence detected, material, method, study types, etc. \n- Compare paper rankings with Kaggle's [current insights dashboard](https:\/\/app.powerbi.com\/view?r=eyJrIjoiODg5ODk5ZGEtYTViMy00ODAzLThiNzMtNWY2MjM5ZWUyNzU3IiwidCI6ImRjMWYwNGY1LWMxZTUtNDQyOS1hODEyLTU3OTNiZTQ1YmY5ZCIsImMiOjEwfQ%3D%3D), survey medical\/research experts to see which ranking is more insightful \n\nI would love to hear your feedback on what would make this better! Email me at zthomas.nc@gmail.com or find me on [Twitter](https:\/\/twitter.com\/zach_i_thomas). Kudos to Jake Thomas (Duke Medicine '23) for providing feedback on this notebook from the perspective of a medical\/research stakeholder. ","cc17d5ff":"# EDA","475d0685":"# Dashboards","f02b98a7":"# Sample Viral Shedding Insights\nSee the [Dashboard](https:\/\/www.kaggle.com\/zthomas\/material-studies-summary-analytics-approach?scriptVersionId=36477272#Dashboards) section of this notebook.\n- **According to papers from journals with the high impact factors**, SARS-CoV-2 may be detectable 50%-59% of the time in stool using PCR ([source](https:\/\/www.ncbi.nlm.nih.gov\/pubmed\/32125362\/), [source](https:\/\/doi.org\/10.1136\/bmj.m1443)). SARS-CoV-2 may be present in stool samples longer than in respiratory and serum samples ([source](https:\/\/doi.org\/10.1136\/bmj.m1443)).\n- **According to papers pubished in the last 28 days**, patients with COVID-19 have persistent alterations in the fecal microbiome at the time of hospitalization compared to controls ([source](https:\/\/www.ncbi.nlm.nih.gov\/pubmed\/32442562\/)). A study in Italy showed that SARS-CoV-2 RNA could be detected in waste waters in samples collected a few days after the first notified Italian case of the disease ([source](https:\/\/doi.org\/10.1016\/j.scitotenv.2020.139652)). \n- **According to papers pubished in the last 28 days that may not be peer-reviewed**, wastewater surveillance could serve as a data source for COVID-19 detection in countries like Pakistan ([source](https:\/\/www.medrxiv.org\/content\/10.1101\/2020.06.03.20121426v2)). According to a study of 12 patients in India, both symptomatic and asymptomatic patients could be positive for the SARS-CoV-2 genome in their fecal component ([source](https:\/\/www.medrxiv.org\/content\/10.1101\/2020.05.26.20113167v1)).","4c3fa9c6":"# Library Import\/Install ","a9e0a83c":"# Dashboard Pipeline","c51693e7":"# Load Data, Feature Engineering ","5393e837":"Journal Impact scores were found with Google Search. A service like Mechanical Turk could be used to obtain a more complete dataset of Impact Scores (the journals below represent about 17% of papers published in 2020).","cefa5cb0":"# Define Mappings"}}