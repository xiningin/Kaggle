{"cell_type":{"0bd80e63":"code","adfda966":"code","6b162af7":"code","7de0eb69":"markdown","8c431d75":"markdown","085820fa":"markdown"},"source":{"0bd80e63":"import tensorflow.keras as keras\nimport sys\nimport pickle as cPickle\nfrom tensorflow.keras.datasets import mnist\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout, Flatten\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D\nfrom tensorflow.keras import backend as K\nimport matplotlib.pyplot as plt\nimport gzip\n\nnum_classes = 10\nepochs = 20\n \n# \u0440\u0430\u0437\u043c\u0435\u0440\u044b \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438\nimg_rows, img_cols = 28, 28\n \n# \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\n(x_train, y_train), (x_test, y_test) = mnist.load_data()","adfda966":"if K.image_data_format() == 'channels_first':\n\tx_train = x_train.reshape(x_train.shape[0], 1, img_rows, img_cols)\n\tx_test = x_test.reshape(x_test.shape[0], 1, img_rows, img_cols)\n\tinput_shape = (1, img_rows, img_cols)\nelse:\n\tx_train = x_train.reshape(x_train.shape[0], img_rows, img_cols, 1)\n\tx_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1)\n\tinput_shape = (img_rows, img_cols, 1)\n \nx_train = x_train.astype('float32')\nx_test = x_test.astype('float32')\nx_train \/= 255\nx_test \/= 255\nprint('x_train shape:', x_train.shape)\nprint(x_train.shape[0], 'train samples')\nprint(x_test.shape[0], 'test samples')\n","6b162af7":"# \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0432 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438\ny_train = keras.utils.to_categorical(y_train, num_classes)\ny_test = keras.utils.to_categorical(y_test, num_classes)\n\n#\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c\nmodel = Sequential()\n#\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043b\u043e\u0438\nmodel.add(Flatten())\nmodel.add(Dense(200, activation='relu'))\nmodel.add(Dense(num_classes, activation='softmax'))\n \n\nmodel.compile(loss=keras.losses.categorical_crossentropy,\n          \toptimizer=keras.optimizers.Adadelta(),\n          \tmetrics=['accuracy'])\n\n\nhistory = model.fit(x_train, y_train,\n      \tbatch_size=128,\n          epochs=epochs,\n      \tverbose=1,\n          validation_data=(x_test, y_test)) \n\nscore = model.evaluate(x_test, y_test, verbose=0)\nprint('Test loss:', score[0])\nprint('Test accuracy:', score[1])\nplt.figure(figsize=(20,10))\nplt.plot(history.history['loss'])\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_loss'])\nplt.plot(history.history['val_accuracy'])\nplt.legend(['loss', 'accuracy', 'val_loss', 'val_accuracy'])\nplt.title('Loss')\nplt.xlabel('epoch')","7de0eb69":"2. \u041f\u043e\u0431\u0443\u0434\u0443\u0432\u0430\u0442\u0438 \u0431\u0430\u0433\u0430\u0442\u043e\u0448\u0430\u0440\u043e\u0432\u0438\u0439 \u043f\u0435\u0440\u0446\u0435\u043f\u0442\u0440\u043e\u043d \u0437\u0430\u0441\u043e\u0431\u0430\u043c\u0438 \u0431\u0456\u0431\u043b\u0456\u043e\u0442\u0435\u043a\u0438 keras \u0437 \u0440\u0456\u0437\u043d\u043e\u044e \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044e \u0448\u0430\u0440\u0456\u0432.\n3. \u041f\u0440\u043e\u0432\u043e\u0434\u044f\u0447\u0438 \u043e\u0431\u0447\u0438\u0441\u043b\u044e\u0432\u0430\u043b\u044c\u043d\u0456 \u0435\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0438 \u0432\u0438\u0437\u043d\u0430\u0447\u0438\u0442\u0438 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u0438\u0439 \u043d\u0430\u0431\u0456\u0440 \u0433\u0456\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0456\u0432 \u043d\u0435\u0439\u0440\u043e\u043d\u043d\u043e\u0457 \u043c\u0435\u0440\u0435\u0436\u0456.\n4. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u0432\u0441\u0456\u0445 \u043e\u0431\u0447\u0438\u0441\u043b\u044e\u0432\u0430\u043b\u044c\u043d\u0438\u0445 \u0435\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0456\u0432 \u043d\u0430\u0432\u0435\u0441\u0442\u0438 \u0443 \u0437\u0432\u0456\u0442\u0456. \n","8c431d75":"**\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0456 \u0437\u0430\u043f\u0438\u0442\u0430\u043d\u043d\u044f**\n1. \u0412 \u0447\u043e\u043c\u0443 \u0440\u0456\u0437\u043d\u0438\u0446\u044f \u0444\u0443\u043d\u043a\u0446\u0456\u0439 \u0430\u043a\u0442\u0438\u0432\u0430\u0446\u0456\u0457 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u0447 \u0440\u0435\u0433\u0440\u0435\u0441\u0456\u0457 \u0442\u0430 \u043a\u043b\u0430\u0441\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0457?\n2. \u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0448\u0442\u0443\u0447\u043d\u043e\u0433\u043e \u043d\u0435\u0439\u0440\u043e\u043d\u0443.\n3. \u0429\u043e \u0442\u0430\u043a\u0435 \u0433\u0456\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 \u043d\u0435\u0439\u0440\u043e\u043d\u043d\u043e\u0457 \u043c\u0435\u0440\u0435\u0436\u0456?\n\n**\u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0456**\n1. \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0430\u043a\u0442\u0438\u0432\u0430\u0446\u0438\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435\u0439\u0440\u043e\u043d\u0430 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0432\u0437\u0432\u0435\u0448\u0435\u043d\u043d\u043e\u0439 \u0441\u0443\u043c\u043c\u044b \u0432\u0445\u043e\u0434\u043e\u0432 \u0438 \u043f\u043e\u0440\u043e\u0433\u043e\u0432\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n2. \u0432\u0443\u0437\u043e\u043b \u0448\u0442\u0443\u0447\u043d\u043e\u0457 \u043d\u0435\u0439\u0440\u043e\u043d\u043d\u043e\u0457 \u043c\u0435\u0440\u0435\u0436\u0456, \u0449\u043e \u0454 \u0441\u043f\u0440\u043e\u0449\u0435\u043d\u043e\u044e \u043c\u043e\u0434\u0435\u043b\u043b\u044e \u043f\u0440\u0438\u0440\u043e\u0434\u043d\u043e\u0433\u043e \u043d\u0435\u0439\u0440\u043e\u043d\u0430. \u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u043d\u043e, \u0448\u0442\u0443\u0447\u043d\u0438\u0439 \u043d\u0435\u0439\u0440\u043e\u043d \u0437\u0430\u0437\u0432\u0438\u0447\u0430\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442\u044c \u044f\u043a \u0434\u0435\u044f\u043a\u0443 \u043d\u0435\u043b\u0456\u043d\u0456\u0439\u043d\u0443 \u0444\u0443\u043d\u043a\u0446\u0456\u044e \u0432\u0456\u0434 \u0454\u0434\u0438\u043d\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0443 \u2014 \u043b\u0456\u043d\u0456\u0439\u043d\u043e\u0457 \u043a\u043e\u043c\u0431\u0456\u043d\u0430\u0446\u0456\u0457 \u0432\u0441\u0456\u0445 \u0432\u0445\u0456\u0434\u043d\u0438\u0445 \u0441\u0438\u0433\u043d\u0430\u043b\u0456\u0432. \u0426\u044e \u0444\u0443\u043d\u043a\u0446\u0456\u044e \u043d\u0430\u0437\u0438\u0432\u0430\u044e\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0456\u0454\u044e \u0430\u043a\u0442\u0438\u0432\u0430\u0446\u0456\u0457 \u0430\u0431\u043e \u0444\u0443\u043d\u043a\u0446\u0456\u0454\u044e \u0441\u043f\u0440\u0430\u0446\u044c\u043e\u0432\u0443\u0432\u0430\u043d\u043d\u044f, \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u043b\u044c\u043d\u043e\u044e \u0444\u0443\u043d\u043a\u0446\u0456\u0454\u044e. \u041e\u0442\u0440\u0438\u043c\u0430\u043d\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u043e\u0441\u0438\u043b\u0430\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \u0454\u0434\u0438\u043d\u0438\u0439 \u0432\u0438\u0445\u0456\u0434. \u0422\u0430\u043a\u0456 \u0448\u0442\u0443\u0447\u043d\u0456 \u043d\u0435\u0439\u0440\u043e\u043d\u0438 \u043e\u0431'\u0454\u0434\u043d\u0443\u044e\u0442\u044c \u0432 \u043c\u0435\u0440\u0435\u0436\u0456 \u2014 \u0437'\u0454\u0434\u043d\u0443\u044e\u0442\u044c \u0432\u0438\u0445\u043e\u0434\u0438 \u043e\u0434\u043d\u0438\u0445 \u043d\u0435\u0439\u0440\u043e\u043d\u0456\u0432 \u0437 \u0432\u0445\u043e\u0434\u0430\u043c\u0438 \u0456\u043d\u0448\u0438\u0445. \u0428\u0442\u0443\u0447\u043d\u0456 \u043d\u0435\u0439\u0440\u043e\u043d\u0438 \u0442\u0430 \u043c\u0435\u0440\u0435\u0436\u0456 \u0454 \u043e\u0441\u043d\u043e\u0432\u043d\u0438\u043c\u0438 \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0456\u0434\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043d\u0435\u0439\u0440\u043e\u043a\u043e\u043c\u043f'\u044e\u0442\u0435\u0440\u0430\n3. \u0446\u0435 \u043e\u0431\u0447\u0438\u0441\u043b\u044e\u0432\u0430\u043b\u044c\u043d\u0456 \u0441\u0438\u0441\u0442\u0435\u043c\u0438, \u043d\u0430\u0442\u0445\u043d\u0435\u043d\u0456 \u0431\u0456\u043e\u043b\u043e\u0433\u0456\u0447\u043d\u0438\u043c\u0438 \u043d\u0435\u0439\u0440\u043e\u043d\u043d\u0438\u043c\u0438 \u043c\u0435\u0440\u0435\u0436\u0430\u043c\u0438, \u0449\u043e \u0441\u043a\u043b\u0430\u0434\u0430\u044e\u0442\u044c \u043c\u043e\u0437\u043e\u043a \u0442\u0432\u0430\u0440\u0438\u043d.","085820fa":"1. \u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u044e\u0447\u0438 \u0431\u0456\u0431\u043b\u0456\u043e\u0442\u0435\u043a\u0443 keras \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0438\u0442\u0438 \u043d\u0430\u0431\u0456\u0440 \u0434\u0430\u043d\u0438\u0445 MNIST."}}