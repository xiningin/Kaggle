{"cell_type":{"768f37b7":"code","28994fb0":"code","35f1d3f8":"code","2217d61e":"code","d394b322":"code","1dbdee99":"code","a6a35dd2":"code","d7f64bb9":"markdown","efc6319f":"markdown","ef764c70":"markdown","3f511b26":"markdown","1b53ecd7":"markdown","fe61bfc1":"markdown","e21a4ebd":"markdown"},"source":{"768f37b7":"import pandas as pd\nimport re # helps with separating strings with multiple delimiters","28994fb0":"def import_showdown_usage_stats(filepath=\"..\/input\/gen8-vgc-december-series-7-usage-stats\", filename=\"2021-01\"):\n    \"\"\"\n    Imports the VGC series usage stats from Pokemon Showdown\n    \n    Inputs:\n    - filepath: string of the path to the file\n    - filename: string of the file name WITHOUT the extension - assumes txt\n    \n    Returns a dataframe with the Pokemon, the raw counts for usage, and the percentage of teams it is used on ordered by most used. \n    \"\"\"\n    # importing data, delimiting by pipe, skipping first few rows, defining our own column names, and only importing the necessary columns\n    usage_df = pd.read_csv(f\"{filepath}\/{filename}.txt\", sep=\"|\",skiprows=5,names=[\"rank\",\"pokemon\",\"count\",],usecols=[1,2,4])\n    # drop any NaNs we find\n    usage_df.dropna(inplace=True)\n    # changing data type of the columns\n    for k, v in {\"rank\":int,\"pokemon\":str,\"count\":int}.items():\n        usage_df[k] = usage_df[k].astype(v)\n    # fixing leading\/trailing white spaces\n    usage_df[\"pokemon\"] = usage_df[\"pokemon\"].str.strip()\n    \n    # getting the overall number of battles for percentage\n    usage_file = open(f\"{filepath}\/{filename}.txt\",\"r\")\n    n = re.split(\"\\n| \",usage_file.readline())[3]\n    # adding in percentage column\n    usage_df[\"n\"] = int(n)\n    usage_df[\"percent\"] = usage_df[\"count\"] \/ int(n)\n    \n    return usage_df.set_index(\"pokemon\")","35f1d3f8":"usage = {}\nmonths = [\"2020-11\",\"2020-12\",\"2021-01\"]\nfor file in months:\n    usage[file] = import_showdown_usage_stats(filename=file)\n    \nfor key, df in usage.items():\n    print(key,\"\\n\", df.head())","2217d61e":"import numpy as np","d394b322":"def get_combined(usage_dict):\n    \"\"\"\n    Combines dataframes from the monthly usage statistics housed in the dictionary\n    \n    Inputs:\n    - usage_dict: dictionary of usage dataframes indexed by month\n    \n    Returns a dataframe with the information from each of the monthly dataframes combined.    \n    \"\"\"\n    combined_df = pd.concat([df for df in usage.values()],axis=0,join='outer')\n    aggregated_df = combined_df.groupby(combined_df.index).agg(sum)\n    # dropping rank and percent because they don't mean anything now\n    aggregated_df.drop([\"rank\",\"percent\"],axis=1,inplace=True)\n    # sorting and redefining rank\n    aggregated_df.sort_values(\"count\",ascending=False,inplace=True)\n    aggregated_df[\"rank\"] = np.arange(1,len(aggregated_df)+1,1)\n    # getting percent back\n    aggregated_df[\"n\"] = max(aggregated_df[\"n\"]) # overwriting n with total\n    aggregated_df[\"percent\"] = (aggregated_df[\"count\"]\/aggregated_df[\"n\"]).astype(float)\n    \n    return aggregated_df","1dbdee99":"combined_df = get_combined(usage)\ncombined_df.head()","a6a35dd2":"last_month_df = usage[months[-1]]\nrestricted_mons = last_month_df[last_month_df.index.isin([\"Mewtwo\",\"Lugia\",\"Ho-oh\",\"Groudon\",\"Kyogre\",\"Rayquaza\"\n                                                         \"Dialga\",\"Palkia\",\"Giratina\",\"Reshiram\",\"Zekrom\",\"Kyurem\",\n                                                         \"Xerneas\",\"Yveltal\",\"Zygarde\"])]\nrestricted_mons","d7f64bb9":"With the function defined above to help us import and process the text-formatted files, we can produce four sets of dataframes to work with:\n1. November Usage Stats - first month of Series 7\n2. December Usage Stats\n3. January Usage Stats - last month of Series 7\n4. Combined Usage Stats","efc6319f":"## Importing Raw Showdown Data\nThe Showdown data is a \"cute\" format that needs to be coaxed into a proper dataframe. The data columns are more or less split by the pipe (`|`) symbol so we can use that as our delimiter. Then we skip the first few rows, define our own column names, and use specific columns that contain the more interesting data. Again, you can view the raw format [here](https:\/\/www.smogon.com\/stats\/2020-12\/gen8vgc2021-0.txt) as an example.","ef764c70":"## Monthly Usage Stats \nFor these data, we simply import them, convert them to dataframes, and then save their output.","3f511b26":"## Combined Usage Stats\nThe combined usage stats might be of use, but take them with a grain of salt: the meta is constantly evolving to counteract new threats that are then counteracted themselves. Be weary of looking at these summary data.\n\nWe will need the `numpy` library to help generate a list for us.","1b53ecd7":"Now we create a function to help us combined data from all the monthly dataframes we generated before.","fe61bfc1":"# Pre-Processing\nThe purpose of this notebook is to highlight how to import the usage data from Pokemon Showdown and save in a more Pandas-friendly output.\n\nThe dataframes created here are also provided as CSV files in the database.","e21a4ebd":"### Note on Combined Usage Data\nShowdown allowed restricted Pokemon (for the upcoming series) prior to Series 8 being released for the cartridge game. Therefore, the last month of data and the combined dataframe have restricted Pokemon included.\n\nThis pattern is likely to continue for future VGC development so only the first two months of data should be considered."}}