{"cell_type":{"dcf9bc8b":"code","b76a5662":"code","3a79e47f":"code","ca8b243a":"code","b8c17da1":"code","e736277a":"code","d150c594":"code","5c3210bf":"code","bd0b86be":"code","f0dee530":"code","50ad2153":"code","4f5c061e":"code","e407be77":"code","32cde65e":"code","747e56ea":"code","df3bd76e":"code","e584ec1a":"code","038f9ef4":"code","361b1119":"code","a3f3bf7b":"code","9120b962":"code","e9bb7f70":"code","d471269c":"code","d115a146":"code","3deb6f0b":"code","c0d36cd4":"code","c51b228a":"code","1a06ef2b":"code","7f260d34":"code","1f9d3d96":"code","70a8cdfd":"code","5ee6e8f7":"code","950c472f":"code","dfa6ff75":"code","3146e46b":"code","82df30e4":"code","60ea17e0":"code","d38f3d90":"code","06fda680":"code","92439893":"code","6511ea71":"code","9c109b24":"code","b0f755ee":"code","0191519d":"code","806c5af5":"code","6bc50e49":"code","a1528dac":"code","11888ae8":"code","f1c6a07b":"code","6c2b3eb6":"markdown","2b09c7bd":"markdown","5c6eb401":"markdown","85ff749a":"markdown","777976bc":"markdown","e5e511a1":"markdown","5c7394e3":"markdown","0cd0e383":"markdown","6f5ceacb":"markdown","3b3e8847":"markdown","9ffdd74a":"markdown","c17c6839":"markdown","aa7ed12b":"markdown","e067f7de":"markdown","8eec3206":"markdown","5aa61cde":"markdown","42276f1d":"markdown","0649e7e0":"markdown","3543b52b":"markdown","156b4b9e":"markdown"},"source":{"dcf9bc8b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport seaborn as sns \nimport matplotlib.pyplot as plt\nfrom collections import Counter\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b76a5662":"median_house_hold_in_come = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\n\npercentage_people_below_poverty_level = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\n\npercent_over_25_completed_highSchool = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\n\nshare_race_city = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/ShareRaceByCity.csv', encoding=\"windows-1252\")\n\nkill = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/PoliceKillingsUS.csv', encoding=\"windows-1252\")","3a79e47f":"percentage_people_below_poverty_level.head()","ca8b243a":"percentage_people_below_poverty_level.info()\n# Geographic Area = Eyaletlerin isimleri\n# City = Eyaletlerin \u015fehrileri\n# poverty_rate = yoksuluk oranlar\u0131","b8c17da1":"percentage_people_below_poverty_level.poverty_rate.value_counts()  \n# yoksulluk oran\u0131 bilinmeyen \u015fehirlerimiz var\n# yoksulluk oran\u0131 s\u0131f\u0131r olan \u015fehirlerimiz var","e736277a":"percentage_people_below_poverty_level[\"Geographic Area\"].unique()\n# .unique() ile orjnal s\u0131ralamada verileri d\u00f6nd\u00fcrd\u00fck","d150c594":"percentage_people_below_poverty_level.poverty_rate.replace([\"-\"],0.0,inplace = True)\n# '-' olan 201 tane ifademiz var. S\u0131f\u0131r de\u011feri ile de\u011fi\u015ftirdik\n\npercentage_people_below_poverty_level.poverty_rate = percentage_people_below_poverty_level.poverty_rate.astype(float)\n# poverty_rate(yoksulluk oran\u0131) s\u00fctunu object veri tipinde , biz onun float olmas\u0131n\u0131 istedik\n\narea_list = list(percentage_people_below_poverty_level[\"Geographic Area\"].unique()) \n# Geographic Area s\u00fctununu liste haline getirdik\n\narea_poverty_ratio = []\n\nfor i in area_list:\n    x = percentage_people_below_poverty_level[percentage_people_below_poverty_level[\"Geographic Area\"] == i]\n    area_poverty_rate = sum(x.poverty_rate)\/len(x) # x.poverty_rate toplam\u0131n\u0131 kelime say\u0131s\u0131na b\u00f6l\n    # yukar\u0131daki kodu verimizin s\u0131ral\u0131 olmas\u0131n\u0131 b\u00fcy\u00fckten k\u00fc\u00e7\u00fc\u011fe s\u0131ral\u0131 olmas\u0131n\u0131 istedi\u011fimiz i\u00e7in yapt\u0131k\n    area_poverty_ratio.append(area_poverty_rate)  \n    \ndata = pd.DataFrame({\"area_list\":area_list,\"area_poverty_ratio\":area_poverty_ratio})\n# data de\u011fi\u015fkenimize iki adet yeni olu\u015fturud\u011fumuz kolon atad\u0131k  \nnew_index = (data[\"area_poverty_ratio\"].sort_values(ascending=False)).index.values\n# new_index de\u011fi\u015fkenimize \"area_poverty_ratio\" kolonuna g\u00f6re b\u00fcy\u00fckten k\u00fc\u00e7\u00fc\u011fe s\u0131ralama yapt\u0131rd\u0131k\nsorted_data = data.reindex(new_index)\n# reindex: iste\u011fe ba\u011fl\u0131 doldurma ile yeni dizine uygun hale getirir\n\n\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data[\"area_list\"],y=sorted_data[\"area_poverty_ratio\"])\n# x ekseni i\u00e7in eyalet isimleri , y ekseni i\u00e7in eyaletlerin de\u011ferleri yer al\u0131r\nplt.xticks(rotation= 0) # her s\u00fctun alt\u0131ndaki yaz\u0131n\u0131n duru\u015f \u015fekli\nplt.xlabel(\"States\")\nplt.ylabel(\"Poverty Rate\")\nplt.title(\"Poverty Rate Given States\")\nplt.show()","5c3210bf":"kill.head()","bd0b86be":"kill.name.value_counts()\n# tk tk ismiyle  bir veri 49 kere tekrar etmi\u015f\n# ger\u00e7ek bir isimlendirme olmad\u0131\u011f\u0131 i\u00e7in analize dahil etmiyoruz","f0dee530":"# most common 15 name or surname of killed people \n# En yayg\u0131n 15 isim veya \u00f6ld\u00fcr\u00fclen ki\u015filerin soyad\u0131\n\nseparate = kill.name[kill.name != \"TK TK\"].str.split()\n# split(): default de\u011feri bo\u015fluklardan kelime kelime ay\u0131rma i\u015flemi yapar\na,b = zip(*separate) \n# * ile anzip yaparak ay\u0131rma i\u015flemi yapt\u0131k\n# a isim , b soyisim i\u00e7in\nname_list = a+b\n# a+b yaparak isim ve soyisi s\u00fctunlar\u0131n\u0131 alt alta birle\u015ftirdik\nname_count = Counter(name_list)\n#counter fonksiyonu ile hangi isimden ka\u00e7 adet kullan\u0131ld\u0131\u011f\u0131n\u0131 analiz ettik\nmost_common_names = name_count.most_common(15)\n# .most_common(15)  : en \u00e7ok kullan\u0131lan 15 isimi \u00e7\u0131kart\u0131yoruz\nx,y = zip(*most_common_names)\n# *most_common_names de\u011fi\u015fkeni i\u00e7indedki verileride anzip yap\u0131yorum ve x,y b\u00e7l\u00fcyorum\nx,y = list(x),list(y)\n# x ve y yi liste haline getiriyorum\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=x,y=y,palette = sns.cubehelix_palette(len(x),reverse = True))\n# cubehelix_palette: Bu, do\u011frusal olarak azalan (veya artan) parlakl\u0131\u011fa sahip bir renk haritas\u0131 olu\u015fturur. \n# Bu, siyah beyaz yazd\u0131r\u0131ld\u0131\u011f\u0131nda veya renk k\u00f6r\u00fc biri taraf\u0131ndan g\u00f6r\u00fcnt\u00fclendi\u011finde bilgilerin korunaca\u011f\u0131 anlam\u0131na gelir\n# Renkler default olarak geliyor \n# len(x): len fonksiyonu ile x de\u011feri i\u00e7indeki eleman say\u0131s\u0131 kadar dikd\u00f6rtgen olu\u015ftu\nplt.xlabel(\"Name or Surname of killed people\")\nplt.ylabel(\"Frequency\")\nplt.title(\"most common 15 name or surname of killed people\")\nplt.show()","50ad2153":"percent_over_25_completed_highSchool.head()\n# percent_completed_hs :  liseden mezun olma oran\u0131 ","4f5c061e":"percent_over_25_completed_highSchool.percent_completed_hs.value_counts()\n# 197 adet '-' var, bunlar\u0131 de\u011fi\u015ftirece\u011fiz ilk olarak","e407be77":"# High school graduation rate of the population that is older than 25 in states\n\npercent_over_25_completed_highSchool.percent_completed_hs.replace([\"-\"],0.0,inplace = True)\npercent_over_25_completed_highSchool.percent_completed_hs = percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\narea_list = list(percent_over_25_completed_highSchool[\"Geographic Area\"].unique())\narea_highschool = []\nfor i in  area_list:\n    x = percent_over_25_completed_highSchool[percent_over_25_completed_highSchool[\"Geographic Area\"] == i]\n    area_highschool_rate = sum(x.percent_completed_hs)\/len(x)\n    # oran\u0131 topla , kelimenin uzunlu\u011funa b\u00f6l \n    area_highschool.append(area_highschool_rate)\n    \n# sorting    \ndata = pd.DataFrame({\"area_list\":area_list,\"area_highschool_ratio\":area_highschool})\nnew_index = (data[\"area_highschool_ratio\"].sort_values(ascending= False)).index.values\nsorted_data2 = data.reindex(new_index)\n# visualizaztion\nplt.figure(figsize=(15,10))\nax = sns.barplot(x=sorted_data2[\"area_list\"], y=sorted_data2[\"area_highschool_ratio\"])\nplt.xticks(rotation=0)\nplt.xlabel(\"States\")\nplt.ylabel(\"High school Graduate Rate\")\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\")\nplt.show()","32cde65e":"share_race_city.head()\n","747e56ea":"share_race_city.info()","df3bd76e":"share_race_city[\"share_asian\"].value_counts()","e584ec1a":"# Percentage of state's population according to races that are black,white,native american, asian and hispanic\n# Siyah, beyaz, K\u0131z\u0131lderili, Asya ve \u0130spanyol \u0131rklar\u0131na g\u00f6re eyalet n\u00fcfusunun y\u00fczdesi \n\nshare_race_city.replace([\"-\"],0.0,inplace=True)\nshare_race_city.replace([\"(X)\"],0.0,inplace=True)\nshare_race_city.loc[:,[\"share_white\",\"share_black\",\"share_native_american\",\"share_asian\",\"share_hispanic\"]] = share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)\narea_list= list(share_race_city[\"Geographic area\"].unique())\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\n\nfor i in area_list:\n    x = share_race_city[share_race_city[\"Geographic area\"] == i]\n    share_white.append(sum(x.share_white)\/len(x))  # \n    share_black.append(sum(x.share_black)\/len(x))\n    share_native_american.append(sum(x.share_native_american)\/len(x))\n    share_asian.append(sum(x.share_asian)\/len(x))\n    share_hispanic.append(sum(x.share_hispanic)\/len(x))\n\n# visualization\n\nf,ax = plt.subplots(figsize = (9,15))\nsns.barplot(x=share_white,y=area_list,color=\"green\",alpha=0.5,label=\"White\")  #  alpha : saydaml\u0131k \nsns.barplot(x=share_black,y=area_list,color=\"blue\",alpha=0.7,label=\"African American\")\nsns.barplot(x=share_native_american,y=area_list,color=\"cyan\",alpha=0.6,label=\"Native American\")\nsns.barplot(x=share_asian,y=area_list,color=\"yellow\",alpha=0.6,label=\"Asian\")\nsns.barplot(x=share_hispanic,y=area_list,color=\"red\",alpha=0.6,label=\"Hispanic\")\n\nax.legend(loc=\"lower right\",frameon = True) # sa\u011f altta kutunun nerde konumland\u0131r\u0131laca\u011f\u0131n\u0131 ve saydam olmamas\u0131 i\u00e7in ise True yap\u0131yoruz\nax.set(xlabel=\"Percentage of Races\",ylabel=\"States\",title=\"Percentage of State's Population According to Races\")\nplt.show()","038f9ef4":"sorted_data2","361b1119":"# high school graduation rate vs Poverty rate of each state\n# lise mezuniyet oran\u0131 ve her eyaletin yoksulluk oran\u0131 \n\n# a\u015fa\u011f\u0131daki kod par\u00e7as\u0131nda say\u0131lar\u0131 normalize ettik \n# neden normalize ettik ; \u00e7\u00fcnk\u00fc say\u0131lar aras\u0131nda b\u00fcy\u00fck farklar var ise g\u00f6rselle\u015ftirme s\u0131ras\u0131nda anlams\u0131z g\u00f6r\u00fcnt\u00fc olu\u015fabilir\n#t\u00fcm de\u011fereleri i\u00e7inded bulunan en b\u00fcy\u00fck de\u011fere b\u00f6lerek 0 ile 1 aras\u0131nda say\u0131 de\u011ferleri elde ettik\n# bunlar\u0131 kar\u015f\u0131la\u015ft\u0131rmak daha iyi bir sonu\u00e7 yakalamam\u0131za neden olacakt\u0131r\nsorted_data[\"area_poverty_ratio\"] = sorted_data[\"area_poverty_ratio\"]\/max(sorted_data[\"area_poverty_ratio\"])\nsorted_data2[\"area_highschool_ratio\"] = sorted_data2[\"area_highschool_ratio\"]\/max(sorted_data2[\"area_highschool_ratio\"])\n\n# concat ile iki s\u00fctunu yan yana birle\u015ftirdim\ndata = pd.concat([sorted_data,sorted_data2[\"area_highschool_ratio\"]],axis=1) \ndata.sort_values(\"area_poverty_ratio\",inplace= True)\n\n\n# visualize\n\nf,ax = plt.subplots(figsize=(20,10))\n\n# data = data ; birle\u015ftirdi\u011fimiz iki s\u00fctunun de\u011fi\u015fkeninden bahsediyoruz , sns.pointplot bunu kendisi anl\u0131yor\n# x ve y i\u00e7in hangi kolonlar\u0131 kullanaca\u011f\u0131m\u0131z\u0131 belirtiyoruz\nsns.pointplot(x=\"area_list\",y=\"area_poverty_ratio\",data=data,color=\"lime\",alpha=0.8)\nsns.pointplot(x=\"area_list\",y=\"area_highschool_ratio\",data=data,color=\"red\",alpha=0.8)\n\n\nplt.text(40,0.6,\"high_school graduate ratio\",color=\"red\",fontsize=17,style=\"italic\")\nplt.text(40,0.55,\"poverty ratio\",color=\"lime\",fontsize=18,style=\"italic\")\nplt.xlabel(\"States\",fontsize = 15,color=\"blue\")\nplt.ylabel(\"Values\",fontsize = 15,color=\"blue\")\nplt.title(\"High School Graduate  VS  Poverty Rate\",fontsize=20,color=\"blue\")\nplt.grid()","a3f3bf7b":"g = sns.jointplot(data=data,x=\"area_poverty_ratio\", y=\"area_highschool_ratio\",kind=\"kde\",height=5)\n\n# data.area_poverty_ratio x ekseni\n# data.area_highschool_ratio y eksini\n# height=7 \u015feklin b\u00fcy\u00fckl\u00fc\u011f\u00fc\nplt.show()","9120b962":"g = sns.jointplot(\"area_poverty_ratio\",\"area_highschool_ratio\",data=data,height=5,ratio=3,color=\"r\")\n# ratio = 3 ; \nplt.show()","e9bb7f70":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# Show the results of a linear regression within each dataset\nsns.lmplot(x=\"area_poverty_ratio\",y=\"area_highschool_ratio\",data=data)\nplt.show()","d471269c":"sns.kdeplot(data.area_poverty_ratio,data.area_highschool_ratio, shade= True,cut=3)\nplt.show()","d115a146":"# Show each distribution with both violins and points\n# Use cubehelix to get a custom sequential palette\n\npal = sns.cubehelix_palette(2,rot=-.5,dark=.3)\nsns.violinplot(data=data,palette=pal,inner=\"points\")\nplt.show()","3deb6f0b":"data.corr()","c0d36cd4":"f,ax = plt.subplots(figsize = (5,5))\nsns.heatmap(data.corr(), annot = True, linewidths=0.5, linecolor = \"red\", fmt = \".1f\", ax=ax)\nplt.show()","c51b228a":"sns.pairplot(data)\nplt.show()","1a06ef2b":"kill.head(10)","7f260d34":"kill.race.head(15) \n# race: \u00f6len ki\u015finin \u0131rk\u0131","1f9d3d96":"kill.race.value_counts()\n# W = white \n# B = black\n# H = hispanic\n# A = asian\n# N = native\n# O = other","70a8cdfd":"# Race rates according in kill data \n# \u0131raklar\u0131n \u00f6ld\u00fcr\u00fclme oran\u0131 \n\nkill.race.dropna(inplace=True)\nlabels = kill.race.value_counts().index  # index : \u0131rklar\u0131n belirtildi\u011fi harfler\ncolors = [\"grey\",\"blue\",\"red\",\"yellow\",\"green\",\"brown\"] \nexplode = [0,0,0,0,0,0]\nsizes = kill.race.value_counts().values #values : \u0131rklar\u0131n ald\u0131\u011f\u0131 de\u011ferler\n\n# visual\nplt.figure(figsize=(7,7))\nplt.pie(sizes,explode=explode,labels=labels,colors=colors,autopct=\"%1.1f%%\")\n# autopct=\"%1.1f%%\" bir tane ondal\u0131kl\u0131 k\u0131s\u0131mdan g\u00f6ster demek\nplt.title(\"Killed People According to Races\",color=\"blue\",fontsize=15)\nplt.legend()\nplt.show()","5ee6e8f7":"kill.head()","950c472f":"kill.manner_of_death.unique()","dfa6ff75":"sns.boxplot(x=\"gender\", y=\"age\",hue=\"manner_of_death\",data=kill,palette=\"PRGn\")\nplt.show()","3146e46b":"kill.head()","82df30e4":"sns.swarmplot(x=\"gender\",y=\"age\",hue=\"manner_of_death\",data=kill)\nplt.show()","60ea17e0":"kill.gender.value_counts()","d38f3d90":"# kill properties\n# Manner of death\n# \u00f6lenlerin cinsiyeti\nsns.countplot(kill.gender)\n\nplt.title(\"gender\",color=\"blue\",fontsize =15)\nplt.show()","06fda680":"# kill weapon \n# kullan\u0131lan silahlar\narmed = kill.armed.value_counts()\nprint(armed)","92439893":"# the way people are killed\n# insanlar\u0131n \u00f6ld\u00fcr\u00fclme \u015fekli\nplt.figure(figsize=(10,7))\nsns.barplot(x=armed[:7].index,y=armed[:7].values)\nplt.ylabel(\"Number of Weapon\")\nplt.xlabel(\"Weapon Types\")\nplt.title(\"Kill weapon\", color=\"blue\",fontsize=15)\nplt.show()","6511ea71":"# age of killed people \n# \u00f6ld\u00fcr\u00fclen insanlar\u0131n ya\u015f\u0131\nabove25 = [\"above25\" if i >= 25 else \"below25\"  for i in kill.age]\ndf = pd.DataFrame({\"age\":above25})\nsns.countplot(x=df.age)\nplt.ylabel(\"number of killed people\")\nplt.title(\"Age of killed people\",color = \"blue\", fontsize=15)\nplt.show()","9c109b24":"# Race of killed people \n# \u00d6ld\u00fcr\u00fclen insanlar\u0131n \u0131rk\u0131\nsns.countplot(data=kill , x=\"race\")\nplt.title(\"Race of killed people\",color =\"blue\",fontsize=15)\nplt.show()","b0f755ee":"# most dangerous cities\n# en tehlikeli \u015fehirler\ncity = kill.city.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=city[:12].index,y=city[:12].values)\nplt.xticks(rotation=45)\nplt.title(\"Most dangerous cities\",color=\"blue\",fontsize=15)\nplt.show()","0191519d":"# most dangerous states\n# en tehlikeli eyalet\n\nstate = kill.state.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=state[:20].index,y=state[:20].values)\nplt.title(\"Most dangerous state\",color=\"blue\",fontsize=15)\nplt.show()","806c5af5":"# Having mental ilness or not for killed people \n# \u00d6len insanlar i\u00e7in ak\u0131l hastal\u0131\u011f\u0131na sahip olmak veya olmamak\n\nsns.countplot(kill.signs_of_mental_illness)\nplt.xlabel(\"Mental illness\")\nplt.ylabel(\"Number of Mental illness\")\nplt.title(\"Having mental illness or not\",color=\"blue\",fontsize=15)\nplt.show()","6bc50e49":"# Threat types\n# Tehdit t\u00fcrleri\n\nsns.countplot(kill.threat_level)\nplt.xlabel(\"Threat Types\")\nplt.title(\"Threat types\",color=\"blue\",fontsize=15)\nplt.show()","a1528dac":"# Flee Types \n# Ka\u00e7ma T\u00dcrleri\n\nsns.countplot(kill.flee)\nplt.xlabel(\"Flee Types\")\nplt.title(\"Flee types\",color=\"blue\",fontsize=15)\nplt.show()","11888ae8":"# Having body cameras or not for police\n# Polis i\u00e7in v\u00fccut kameras\u0131 olan veya olmayan\n\nsns.countplot(kill.body_camera)\nplt.xlabel(\"Having Body Cameras\")\nplt.title(\"Having body cameras or not on Police\",color=\"blue\",fontsize=15)\nplt.show()","f1c6a07b":"# Kill number from states in kill data\n\nsta = kill.state.value_counts().index[:10]\nsns.barplot(x=sta,y=kill.state.value_counts().values[:10])\nplt.show()","6c2b3eb6":"## Swarm Plot ","2b09c7bd":"<a id = \"1\" ><\/a>   \n# 1. Read Datas (Veri Okuma)","5c6eb401":"## Join Plot","85ff749a":"## Violin Plot","777976bc":"<a id = \"6\" ><\/a>   \n# 6. High School Graduation Rate vs Poverty Rate Of Each State\n# (Lise Mezuniyet Oran\u0131 \u0130le Her Eyaletin Yoksulluk Oran\u0131)\n","e5e511a1":"## Pair Plot","5c7394e3":"* manner_of_death\t= nas\u0131l \u00f6ld\u00fcr\u00fcld\u00fc\u011f\u00fc\n* armed = neyle \u00f6ld\u00fcr\u00fcld\u00fc\u011f\u00fc\n* age= \u00f6lenin ya\u015f\u0131 \n* gander = \u00f6elenin cinsiyeti\n* race = \u00f6lenin \u0131rk\u0131 \n* city = ya\u015fad\u0131\u011f\u0131 \u015fehir \n* state = bulundu\u011fu eyalet\n* signs_of_mental_illness = psikolojik hastal\u0131\u011f\u0131 var m\u0131\n* threat_level = tehlike seviyesi \n* flee = \u00f6len ki\u015fi \u00f6lmeden \u00f6nce ka\u00e7m\u0131\u015f m\u0131\n* body_camera = v\u00fccut kameras\u0131 var m\u0131 ","0cd0e383":"<a id=\"8\" ><\/a>\n# 8. Different Types Of Visualizations About Those Who Have Been Killed\n# \u00d6ld\u00fcr\u00fclenlerle ilgili farkl\u0131 g\u00f6rselle\u015ftirme t\u00fcrleri","6f5ceacb":"<a id = \"3\" ><\/a>   \n# 3. Most Common 15 Name or Surname of Killed People\n# (En yayg\u0131n \u00d6len 15 ki\u015finin Ad\u0131 veya Soyad\u0131)","3b3e8847":"<a id = \"7\" ><\/a>   \n# 7. Race Rates According In Kill Data \n# Irklar\u0131n \u00d6ld\u00fcr\u00fclme Oran\u0131\n\n## Pie Chart","9ffdd74a":"<a id = \"5\" ><\/a>   \n# 5. Percentage of State's Population According To Races That Are Black,White,Native American, Asian And Hispanic\n# (Siyah, Beyaz, K\u0131z\u0131lderili, Asyal\u0131 ve \u0130spanyol Irklara G\u00f6re Eyalet N\u00fcfus Y\u00fczdesi )\n","c17c6839":"## Kde Plot","aa7ed12b":"<a id = \"4\" ><\/a>   \n\n# 4. High School Graduation Rate Of The Population That Is Older Than 25 In States\n# (Eyalette 25 Ya\u015f \u00dcst\u00fc N\u00fcfusun Lise Mezuniyet Oran\u0131)\n   \n","e067f7de":"# INTRODUCTION\n\n1. [Read Datas](#1)\n2. [Poverty Rate Of Each State](#2)\n3. [Most Common 15 Name Or Surname Of Killed People](#3)\n4. [High School Graduation Rate Of The Population That Is Older Than 25 In States](#4)\n5. [Percentage Of State's Population According To Races That Are Black,White,Native American, Asian And Hispanic](#5)\n6. [High School Graduation Rate Vs Poverty Rate Of Each State](#6)\n    \n    * [Race Rates According In Kill Data ](#7)\n    * [Different Types Of Visualizations About Those Who Have Been Killed](#8)\n\n","8eec3206":"## Lm Plot","5aa61cde":"## Heatmap","42276f1d":"### Point Plot\n","0649e7e0":"<a id = \"2\" ><\/a>   \n# 2. Poverty rate of each state\n# (Her eyaletin yoksulluk oran\u0131)","3543b52b":"## Count Plot\n","156b4b9e":"## Box Plot"}}