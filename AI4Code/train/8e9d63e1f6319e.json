{"cell_type":{"764dd406":"code","44889f9c":"code","dbc1abdb":"code","89e621b0":"code","13dc4d87":"code","ed10fb63":"code","06636a13":"code","df2f6758":"markdown","bd453905":"markdown","a5c81ea9":"markdown","ef6fcdd5":"markdown","243647a6":"markdown","9c5e4b72":"markdown"},"source":{"764dd406":"# Install:\n# Kaggle environments.\n!git clone https:\/\/github.com\/Kaggle\/kaggle-environments.git\n!cd kaggle-environments && pip install .\n\n# GFootball environment.\n!apt-get update -y\n!apt-get install -y libsdl2-gfx-dev libsdl2-ttf-dev\n\n# Make sure that the Branch in git clone and in wget call matches !!\n!git clone -b v2.3 https:\/\/github.com\/google-research\/football.git\n!mkdir -p football\/third_party\/gfootball_engine\/lib\n\n!wget https:\/\/storage.googleapis.com\/gfootball\/prebuilt_gameplayfootball_v2.3.so -O football\/third_party\/gfootball_engine\/lib\/prebuilt_gameplayfootball.so\n!cd football && GFOOTBALL_USE_PREBUILT_SO=1 pip3 install .","44889f9c":"%%writefile submission.py\nfrom kaggle_environments.envs.football.helpers import *\n\n@human_readable_agent\ndef agent(obs):\n    return Action.Top","dbc1abdb":"# Set up the Environment.\nfrom kaggle_environments import make\nenv = make(\"football\", configuration={\"save_video\": True, \"scenario_name\": \"11_vs_11_kaggle\", \"running_in_notebook\": True})\noutput = env.run([\"\/kaggle\/working\/submission.py\", \"\/kaggle\/working\/submission.py\"])[-1]\nprint('Left player: reward = %s, status = %s, info = %s' % (output[0]['reward'], output[0]['status'], output[0]['info']))\nprint('Right player: reward = %s, status = %s, info = %s' % (output[1]['reward'], output[1]['status'], output[1]['info']))\nenv.render(mode=\"human\", width=800, height=600)","89e621b0":"import pandas as pd\n\nlog = pd.DataFrame(env.steps).rename({0: \"left_team\", 1: \"right_team\"}, axis=1)","13dc4d87":"def print_boundaries(team):\n    max_y, min_y = -1, 1\n    for step in range(3000):\n        ball_y = log[team][step]['observation']['players_raw'][0]['ball'][1]\n        min_y = min(min_y, ball_y)\n        max_y = max(max_y, ball_y)\n\n    print(f\"{team} y in [{round(min_y, 3)}, {round(max_y, 3)}]\")","ed10fb63":"print_boundaries(\"left_team\")","06636a13":"print_boundaries(\"right_team\")","df2f6758":"## Install required files","bd453905":"Picture with coordinate orientation is in this [topic](https:\/\/www.kaggle.com\/c\/google-football\/discussion\/188220). It's easy to prove with several game steps and correspondings ball positions from the video above.","a5c81ea9":"[Starter notebook](https:\/\/www.kaggle.com\/devanshu125\/starter-notebook) have said, that y coordinate is `-1 <= y <= 1`. That's correct mathemically, but practically it may break all your strategies, cause y approximately is `-0.436 <= y <= 0.436`. The proof is below.","ef6fcdd5":"## Problem Description","243647a6":"## Proof","9c5e4b72":"## Naive Bot\n\nThe next bot is convenient to determine **y** boundaries."}}