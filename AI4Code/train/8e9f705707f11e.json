{"cell_type":{"65f08b36":"code","88ee1469":"code","fa22e0e4":"code","0f4848ca":"code","4d65a6cb":"code","ad1d501d":"code","a2f2f78e":"code","773fb25b":"code","cf9ff664":"code","df885be2":"code","5007d9a7":"code","c452fb13":"code","872699d0":"code","f5777d52":"code","a2e92fe9":"code","f9c30163":"code","40b05bf0":"code","abc4a8bb":"code","db680f11":"code","980c0fa3":"code","63885716":"code","0351820e":"code","78a63f1b":"code","795127ea":"code","09751245":"code","ea479ab8":"code","0604afa3":"code","259565a8":"code","4909a5e3":"code","5aaffe11":"code","5c9de5aa":"code","2fa8f18d":"code","81dfe54c":"code","92961b2c":"code","59601831":"code","21fce84a":"code","6f5b211c":"code","6d9f08a0":"code","c3e3451a":"code","02accb31":"code","3e3e229b":"code","2a12e924":"code","a1288572":"markdown","7a38b49b":"markdown","56dc405a":"markdown","d10aef08":"markdown","38fdaa2e":"markdown","7ce6e1fa":"markdown","211020c7":"markdown","09934da9":"markdown","4d35c6a2":"markdown","e2fcc7bc":"markdown","74e7ad2a":"markdown","797d7a96":"markdown","b6b31467":"markdown","e5124d0f":"markdown","c130e76e":"markdown","0ae4d7a4":"markdown","61250d29":"markdown","d5d9e426":"markdown","dc85e638":"markdown","3b7599d5":"markdown","36d21604":"markdown","63ed42d5":"markdown","555b3faa":"markdown","5b490ab0":"markdown"},"source":{"65f08b36":"import numpy as np\nimport pandas as pd\nimport os","88ee1469":"# visualization\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","fa22e0e4":"#from sklearn.cross_validation import train_test_split\nimport matplotlib.pyplot as plt\n\n# 1.3 Class for applying multiple data transformation jobs\nfrom sklearn.compose import ColumnTransformer as ct\n# 1.4 Scale numeric data\nfrom sklearn.preprocessing import StandardScaler as ss\n# 1.5 One hot encode data--Convert to dummy\nfrom sklearn.preprocessing import OneHotEncoder as ohe\n# 1.6 for data splitting\nfrom sklearn.model_selection import train_test_split","0f4848ca":"from sklearn import linear_model\nimport statsmodels.api as sm","4d65a6cb":"df = pd.read_csv('..\/input\/crime.csv', encoding='ISO-8859-1')","ad1d501d":"df.shape","a2f2f78e":"df.columns","773fb25b":"df.isnull().sum()","cf9ff664":"df.columns.values","df885be2":"IN_vc = df.INCIDENT_NUMBER.value_counts()\nIN_vc.head(10)\nIN_vc.index[0]","5007d9a7":"df.loc[df.INCIDENT_NUMBER == IN_vc.index[0]].count()\ndf.loc[df.INCIDENT_NUMBER == IN_vc.index[0]]\n#Incident number should have been unique but it is not. Intuitive?! looking closely at the top-of-list ID?\n#Multiple counts(13) of offense in single event are recorded under a single Incident Number!","c452fb13":"IN_unq = df.INCIDENT_NUMBER.nunique()\nIN_unq #290156 unique INCIDENT_NUMBERs","872699d0":"IN_nonunq = (df.shape[0] - df.INCIDENT_NUMBER.nunique())\nIN_nonunq #37664 INCIDENT_NUMBERs which are not unique","f5777d52":"OC_vc = df.OFFENSE_CODE.value_counts()\nOC_vc.head()","a2e92fe9":"len(df['OFFENSE_CODE'].unique()) #222 unique offence codes","f9c30163":"high_OC = df.loc[df.OFFENSE_CODE == OC_vc.index[0]]\n#high_OC.groupby('DISTRICT').agg('sum')\nhigh_OC.DISTRICT.value_counts() #Distribution of cases of highest offense by district\n#How do other high offence cases stack-up in these districts?","40b05bf0":"sns.countplot(\"DISTRICT\", hue=\"YEAR\", data = df)\n#Looking at how the INCIDENT_NUMBERs are distributed across DISTRICTs by year\n#Notice that years 2016 and 2017 are peak years and \n#graphs for these 2 years are mostly flat","abc4a8bb":"sns.countplot(\"DISTRICT\", hue=\"YEAR\", data = high_OC)\n#Now looking at distribution of INCIDENT_NUMBERs for highest OFFENSE_CODE \n# and their distribution across DISTRICTs by year\n#Notice the following:\n# (i) years 2016 and 2017 are no longer the peak years and \n# (ii) graphs show a *spike* in years 2017 for high OC","db680f11":"df['DISTRICT'].unique()\n#12 unique districts","980c0fa3":"df['REPORTING_AREA'].unique()\nRA_vc=df['REPORTING_AREA'].value_counts()\nlen(df['REPORTING_AREA'].unique())\n#880 unique reporting areas... could be useful for grouping by geographical boundary","63885716":"df['OCCURRED_ON_DATE'] = pd.to_datetime(df['OCCURRED_ON_DATE'])","0351820e":"df['OCCURRED_ON_DATE'].describe","78a63f1b":"df['YEAR'].unique()","795127ea":"df['MONTH'].unique()","09751245":"df['DAY_OF_WEEK'].unique()","ea479ab8":"df['HOUR'].unique()","0604afa3":"df['SHOOTING'].value_counts()","259565a8":"sns.countplot(\"DISTRICT\", hue=\"SHOOTING\", data = df)\n#Looking at how the SHOOTINGs are distributed across DISTRICTs\n#Notice that DISTRICTS B2, C11 and B3 have the highest occurence of SHOOTING","4909a5e3":"sns.catplot(x=\"DISTRICT\",       \n            hue=\"YEAR\",      \n            col=\"SHOOTING\", \n            data=df,\n            kind=\"count\"\n            )\n#the above Graph now looking at occurences of SHOOTING, year-wise across DISTRICTs\n#Notice the peaks in YEAR 2017. What happened sudenly and how it went down drastically in 2018","5aaffe11":"sns.catplot(x=\"YEAR\",       \n            hue=\"DAY_OF_WEEK\",      \n            col=\"SHOOTING\", \n            data=df,\n            kind=\"count\"\n            )\n#looking at occurences of SHOOTING, year-wise and day-wise\n#What happens suddenly on Saturdays??\n#Notice the drop in shootings on Sunday in 2018. \n#Caused the drop in occurences for 2018 as observed above?","5c9de5aa":"sns.catplot(x=\"HOUR\",       \n            hue=\"SHOOTING\",      \n            col=\"YEAR\", \n            data=df,\n            kind=\"count\"\n            )\n#looking at occurences of SHOOTING, hourly and year-wise\n#Notice the increase in late-evenings\/nights shootings in 2017.\n#Also notice drop in same occurences for 2018.\n#So the drop in occurences of SHOOTINGs in 2018 seem to be caused by effectively reducing the\n#occurences in late hours and especially on Saturdays by law enforcement authorities.","2fa8f18d":"df['SHOOTING'].fillna(0, inplace = True)\n\ndf['SHOOTING'] = df['SHOOTING'].map({\n    0: 0,\n    'Y':1\n})","81dfe54c":"#df_shooting = df.loc[df['SHOOTING'] == 1]\ndf_shooting = df.loc[df['SHOOTING'] == 1]\ndf_shooting.shape #1055 occurences of shooting should be captured here","92961b2c":"df_loc_shooting = df_shooting[['Lat','Long']]\ndf_loc_shooting = df_loc_shooting.dropna()\n\ndf_loc_shooting = df_loc_shooting.loc[(df_loc_shooting['Lat']>40) & (df_loc_shooting['Long'] < -60)]  \n\ndf_shooting_x = df_loc_shooting['Long']\ndf_shooting_y = df_loc_shooting['Lat']\n\n# Custom the inside plot: options are: \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d\n#sns.jointplot(df_shooting_x, df_shooting_y, kind='scatter')\nsns.jointplot(df_shooting_x, df_shooting_y, kind='hex')\n#sns.jointplot(df_shooting_x, df_shooting_y, kind='kde')","59601831":"df[['Lat','Long']].describe()","21fce84a":"df_loc = df[['Lat','Long']]\ndf_loc = df_loc.dropna()\n\ndf_loc = df_loc.loc[(df_loc['Lat']>40) & (df_loc['Long'] < -60)]  ","6f5b211c":"df_loc_x = df_loc['Long']\ndf_loc_y = df_loc['Lat']\n\n\ncolors = np.random.rand(len(df_loc_x))\n\nplt.figure(figsize=(20,20))\nplt.scatter(df_loc_x, df_loc_y,c=colors, alpha=0.5)\nplt.show()","6d9f08a0":"#### 5.3. Overlaying Lat, Long With Shooting Data","c3e3451a":"plt.figure(figsize=(30,30))\nplt.scatter(df_loc_x, df_loc_y,c=colors, alpha=0.5)\nplt.scatter(df_shooting_x, df_shooting_y, c='r', marker=\"X\", alpha=1)\nplt.show()\n#Overlaying the scatterplot with shooting locations in Red\n#The central districts appear more prone to shootings in comparison to suburbs","02accb31":"#### 5.4. JointPlots of Lat, Long and Shooting Data","3e3e229b":"# Custom the inside plot: options are: \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d\nsns.jointplot(df_loc_x, df_loc_y, kind='scatter')\nsns.jointplot(df_shooting_x, df_shooting_y, kind='hex')\n#sns.jointplot(df_loc_x, df_loc_y, kind='hex')\n#sns.jointplot(df_loc_x, df_loc_y, kind='kde')","2a12e924":"# 14.2 Extract requisite dataset\n#df_pairs = df.iloc[ : , [0, 6, 8, 9, 10, 14, 15]]\ndf_pairs = df.iloc[ : , [0, 8, 9, 10]]\n\n# 14.3 Plot now\n#sns.pairplot(df_pairs, x_vars=['YEAR','MONTH','DAY_OF_WEEK'], y_vars='INCIDENT_NUMBER', kind = 'count')\n#sns.pairplot(df_pairs, hue = 'SHOOTING', kind = 'scatter', vars=['YEAR','MONTH','DAY_OF_WEEK','Lat','Long'])\n#sns.pairplot(df_pairs, hue = 'SHOOTING', kind = 'scatter')","a1288572":"### 4.1. INCIDENT_NUMBER\n\nNumber for incident. This indicator is **difficult** for visualization, modeling and other research. \nIt is a unique ID though and may be of some value in uniquely identifying incidents\/count. Keeping it for now.","7a38b49b":"\n#### 5.2. Lat, Long","56dc405a":"### Inspiration\n\n1. How have crime patterns changed over the years?\n2. Which areas of the city have improved their law enforcement over this time span?\n3. Is it possible to estimate what lead to increase \/ decrease in crime graphs over the years?\n4. Which areas are more prone to violent crime?","d10aef08":"### 4.5. DISTRICT\n\nDistrict. I will use it for reaearch, modeling and visualization.","38fdaa2e":"# 2. Read data","7ce6e1fa":"# 1. Import","211020c7":"**Data**:  https:\/\/www.kaggle.com\/ankkur13\/boston-crime-data\n\nThis is a dataset containing records from the new crime incident report system, which includes a reduced set of fields focused on capturing the type of incident as well as when and where it occurred.","09934da9":"### 4.6. REPORTING_AREA","4d35c6a2":"### 4.12. SHOOTING","e2fcc7bc":"\n#### 5.5. PairPlots to see crime patterns by year and day of the week","74e7ad2a":"# Crimes in Boston\n## More than 2,60,760 crimes in Boston (2015- 2018)","797d7a96":"### 4.10. DAY_OF_WEEK","b6b31467":"### 4.2. OFFENSE_CODE\n\nCode for offence. Maybe, useful for statistics research and modeling.","e5124d0f":"### 4.11. HOUR","c130e76e":"![](https:\/\/www.techemergence.com\/wp-content\/uploads\/2017\/11\/ai-for-crime-prevention-and-detection-5-current-applications.png)","0ae4d7a4":"## *This is an alpha work in Visualization.*","61250d29":"### Content\n\n1. Import\n2. Read data\n3. Function\n4. First data research\n5. Visualization","d5d9e426":"### 4.9. MONTH","dc85e638":"### 4.8. YEAR","3b7599d5":"### 5.1. SHOOTING","36d21604":"# 3. See data","63ed42d5":"### Conclusions\n1. See visualizations for the graphical analysis of what may have caused increase in crime rate and how the law enforcement agencies have acted to bring it in check","555b3faa":"# 5. Visualization","5b490ab0":"### 4.7. OCCURRED_ON_DATE"}}