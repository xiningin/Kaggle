{"cell_type":{"cd141bb1":"code","8fb96acf":"code","1692579e":"code","98361464":"code","2403f700":"code","d24d12e8":"code","3ffca3d5":"code","227a28a3":"code","bad5236b":"code","3a81aba6":"code","bb965d67":"code","ddd32c95":"code","1a11c8b8":"code","09f3e465":"code","65b62933":"code","d570c22b":"code","186e59e7":"code","8a456c54":"code","ccd05dd0":"code","475a26ee":"code","e29ba293":"code","d6e60c93":"code","466c0cc2":"code","4223a16c":"code","f6f72c56":"code","3b96640b":"code","80c08ce0":"code","63932674":"code","69a2e498":"code","7a0be52c":"code","df1a575c":"code","5178bd0e":"markdown","b024d93c":"markdown","7e11707b":"markdown","87aebcb6":"markdown","59ff9977":"markdown","eed0397a":"markdown","d9463faa":"markdown","47d46883":"markdown","d43463eb":"markdown","8dfbe8cd":"markdown","d56cc165":"markdown","fe599585":"markdown","335f7d08":"markdown","149b5893":"markdown","54c4ff8d":"markdown","c1a6649b":"markdown","36283cd0":"markdown","366b5d82":"markdown","5452d9a2":"markdown","f9f6da39":"markdown","be2fc490":"markdown","7ced697a":"markdown","1d32bcf8":"markdown","9a6bf12d":"markdown","bbd75e10":"markdown","14429663":"markdown"},"source":{"cd141bb1":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport missingno as msno\nimport plotnine as p9\n\nplt.rcParams[\"figure.figsize\"] = (15,7)","8fb96acf":"X_train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\nX_test = pd.read_csv(\"..\/input\/titanic\/test.csv\")","1692579e":"display(X_train)\ndisplay(X_test)","98361464":"# Remove PassengerId and Name as they are uninformative\nX_train.drop([\"PassengerId\", 'Name'], axis = 1, inplace = True)\nX_test.drop([\"PassengerId\",\"Name\"], axis = 1, inplace = True)","2403f700":"# Checking for any duplicated values\nprint(X_train.duplicated().sum())\nprint(X_test.duplicated().sum())","d24d12e8":"# Drop Duplicates\nX_train.drop_duplicates(inplace = True)\nX_test.drop_duplicates(inplace = True)","3ffca3d5":"# View null counts\nprint(X_train.isnull().sum(), '\\n')\nprint(X_test.isnull().sum())","227a28a3":"msno.heatmap(X_train);","bad5236b":"msno.heatmap(X_test)","3a81aba6":"# Drop cabin column as it has too many null values\nX_train.drop(\"Cabin\", axis =1, inplace = True)\nX_test.drop(\"Cabin\", axis =1, inplace = True)","bb965d67":"# Fill age column with mean\nX_train['Age'].fillna(X_train['Age'].mean(), inplace=True)\nX_test['Age'].fillna(X_test['Age'].mean(), inplace=True)","ddd32c95":"# Check for remaining nulls\nX_train.isnull().sum()\nX_test.isnull().sum()","1a11c8b8":"# One row is not that significant so I dropped it\nX_train.dropna(inplace = True)\nX_test.dropna(inplace = True)","09f3e465":"# No nulls remain\nX_train.isnull().sum()\nX_test.isnull().sum()","65b62933":"sns.histplot(X_train['Age'], color = '#2596be', kde = True, alpha = 0.1);\nplt.title(\"Distribution of Ages\\n\", size =20, loc = 'left')\nsns.despine()","d570c22b":"sns.histplot(X_train['Fare'], color = '#2596be', kde = True, alpha = 0.1);\nplt.title(\"Distribution of Ticket Fares\\n\", size =20, loc = 'left')\nsns.despine()","186e59e7":"plt.title(\"Sex Counts\\n\", size =20, loc = 'left')\nsns.despine()\nax = X_train.Sex.value_counts().plot(kind = 'bar', color = '#2596be');\nplt.xticks(rotation=0, size = 15)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2, p.get_height()), \n       ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', size = 15)","8a456c54":"X_train['Survived'].replace({0: 'No', 1:'Yes'}, inplace = True)\nax = X_train.Survived.value_counts().plot(kind = 'bar', color = '#2596be');\n\nplt.title(\"How Many Survived?\\n\", size =20, loc = 'left')\nsns.despine()\nplt.xticks(rotation=0, size = 15)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2, p.get_height()), \n       ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', size = 15)","ccd05dd0":"X_train.replace({'C': 'Cherbourg', 'Q':'Queenstown', 'S': 'Southampton'}, inplace = True)\n\nax = X_train.Embarked.value_counts().plot(kind = 'bar', color = '#2596be');\n\nplt.title(\"Port of Embarkation\\n\", size =20, loc = 'left')\nsns.despine()\nplt.xticks(rotation=0, size = 15)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2, p.get_height()), \n       ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', size = 15)","475a26ee":"plt.title(\"Did Age Affect Someone's chance of Survival?\\n\", size =20, loc = 'left')\nsns.despine()\nplt.xticks(rotation=0, size = 15)\nmypal = sns.color_palette(\"ocean\", 0) + sns.color_palette(\"ocean_r\", 4)\nsns.boxplot(x = 'Survived', y = 'Age', data = X_train, palette = mypal); ","e29ba293":"from statsmodels.graphics.mosaicplot import mosaic\n\nprops={}\nprops[('female','Yes')]={'facecolor':'#3b89ac', 'edgecolor':'white'}\nprops[('female','No')]={'facecolor':'#3b89ac', 'edgecolor':'white'}\nprops[('male','Yes')]={'facecolor':'#003851','edgecolor':'white'}\nprops[('male','No')]= {'facecolor':'#003851','edgecolor':'white'}\n\nax = mosaic(data=X_train, index=['Sex', 'Survived'], properties = props);","d6e60c93":"plt.title(\"Did Sex Affect the Chance of Survival?\\n\\n\", size =20, loc = 'left')\nsns.despine()\nplt.xticks(rotation=0, size = 15)\n\nax = sns.countplot(x ='Survived', data = X_train, hue = 'Sex', palette = 'ocean')\nplt.legend(title = 'Sex', frameon = False, fontsize = 15, title_fontsize =15)\n\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2, p.get_height()), \n       ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', size = 15)","466c0cc2":"plt.title(\"Did the Ticket Fare Affect the Chance of Survival?\\n\", size =20, loc = 'left')\nsns.despine(top = False, bottom = True)\nplt.yticks(rotation=0, size = 12)\nplot = sns.boxplot(y = 'Survived', x = 'Fare', data=X_train, palette = mypal, orient = 'h');\nplot.xaxis.set_ticks_position(\"top\")\nplot.xaxis.set_label_position('top')","4223a16c":"from statsmodels.graphics.mosaicplot import mosaic\n\nprops={}\nprops[('Middle','Yes')]={'facecolor':'#3b89ac', 'edgecolor':'white'}\nprops[('Middle','No')]={'facecolor':'#3b89ac', 'edgecolor':'white'}\nprops[('Upper','Yes')]={'facecolor':'#003851','edgecolor':'white'}\nprops[('Upper','No')]= {'facecolor':'#003851','edgecolor':'white'}\nprops[('Lower','Yes')]={'facecolor':'#002535','edgecolor':'white'}\nprops[('Lower','No')]= {'facecolor':'#002535','edgecolor':'white'}\n\nmosaic(data=X_train, index=['Pclass', 'Survived'], properties = props);","f6f72c56":"plt.title(\"Did Ticket Class Affect the Chance of Survival?\\n\", size =20, loc = 'left')\nsns.despine()\nplt.xticks(rotation=0, size = 15)\nplt.yticks(rotation=0, size = 12)\n\nX_train.Pclass = X_train.Pclass.replace({1:\"Upper\", 2:\"Middle\", 3:\"Lower\"})\norder = pd.crosstab(X_train.Survived, X_train.Pclass).sort_values('Survived', ascending=False).index\n\nax = sns.countplot(x ='Survived', data = X_train, hue = 'Pclass', palette = 'ocean', order = order)\n\nplt.legend(title = 'Ticket Class', frameon = False, fontsize = 15, title_fontsize =15)\n\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.0f'), (p.get_x() + p.get_width() \/ 2, p.get_height()), \n       ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points', size = 15)","3b96640b":"#Create subplots\nfig, ax = plt.subplots(1,2, sharey=False)\nfig.set_size_inches(15, 10)\n\n# To order the bars\norder1 = pd.crosstab(X_train.Survived[X_train.Survived == 'No'], X_train.SibSp).sort_values('Survived', ascending=False).index\norder2 = pd.crosstab(X_train.Survived[X_train.Survived == 'Yes'], X_train.SibSp).sort_values('Survived', ascending=False).index\n\n# Countplots\nax1 = sns.countplot(y ='Survived', orient = 'h', data = X_train[X_train.Survived == 'No'], hue = 'SibSp', palette = 'ocean_r', order = order1, ax = ax[0])\nax2 = sns.countplot(y ='Survived', orient = 'h', data = X_train[X_train.Survived == 'Yes'], hue = 'SibSp', palette = 'ocean_r', order = order2, ax = ax[1])\n\n# Change scale to log scale\nax1.set(xscale=\"log\");\nax2.set(xscale=\"log\");\n\n# Add legends\nax1.legend(title = '    Number of \\nSiblings\/Spouses', frameon = False, fontsize = 15, title_fontsize =15, loc=(1.1, 0.71))\nax2.legend(title = '    Number of \\nSiblings\/Spouses', frameon = False, fontsize = 15, title_fontsize =15, loc=(1.1, 0.8))\n\n# Set suplots titles\nax[0].set_title(\"\\nDied\", loc = 'left', size = 15)\nax[1].set_title(\"\\nSurvived\", loc = 'left', size = 15)\n\n# Add main title\nfig.suptitle(\"Did the Number of Siblings\/Spouses Affect Chances of Survival?\", x = '0.333', size = 20)\n\n# Remove border\nsns.despine(top = False, bottom = True)\n\n# Change axis ticks and label positions \nax1.xaxis.set_ticks_position(\"top\")\nax1.xaxis.set_label_position('top')\n\nax2.xaxis.set_ticks_position(\"top\")\nax2.xaxis.set_label_position('top')\n\nfig.tight_layout()","80c08ce0":"#Create subplots\nfig, ax = plt.subplots(1,2, sharey=False)\nfig.set_size_inches(15, 10)\nfig.subplots_adjust(hspace=.5)\n\norder1 = pd.crosstab(X_train.Survived[X_train.Survived == 'No'], X_train.Parch).sort_values('Survived', ascending=False).index\norder2 = pd.crosstab(X_train.Survived[X_train.Survived == 'Yes'], X_train.Parch).sort_values('Survived', ascending=False).index\n\nax1 = sns.countplot(y ='Survived', orient = 'h', data = X_train[X_train.Survived == 'No'], hue = 'Parch', palette = 'ocean_r', order = order1, ax = ax[0])\nax2 = sns.countplot(y ='Survived', orient = 'h', data = X_train[X_train.Survived == 'Yes'], hue = 'Parch', palette = 'ocean_r', order = order2, ax = ax[1])\n\nax1.set(xscale=\"log\");\nax2.set(xscale=\"log\");\n\nax2.legend(title = '    Number of \\nParents\/Children', frameon = False, fontsize = 15, title_fontsize =15, loc=(1.1, 0.8))\n# ax1.legend([],[], frameon = False)\nax1.legend(title = '    Number of \\nParents\/Children', frameon = False, fontsize = 15, title_fontsize =15, loc=(1.1, 0.72))\n\nax[0].set_title(\"\\nDied\", loc = 'left', size = 15)\nax[1].set_title(\"\\nSurvived\", loc = 'left', size = 15)\n\nfig.suptitle(\"Did the Number of Parents\/Children Affect Chances of Survival?\", x = 0.333,size = 20)\nsns.despine(top = False, bottom = True)\n\nax1.xaxis.set_ticks_position(\"top\")\nax1.xaxis.set_label_position('top')\n\nax2.xaxis.set_ticks_position(\"top\")\nax2.xaxis.set_label_position('top')\n\nfig.tight_layout()","63932674":"plt.title(\"Did Age & Sex Affect the Chance of Survival?\\n\", size =20, loc = 'left')\n\nax = sns.violinplot(x = 'Age', y = 'Survived', hue = 'Sex', data = X_train, orient = 'h', split = True, palette = mypal);\n\nsns.despine(top = False, bottom = True)\nplt.yticks(rotation=0, size = 13)\nax.xaxis.set_ticks_position(\"top\")\nax.xaxis.set_label_position('top')","69a2e498":"def countplot(x, **kwargs):\n    sns.countplot(x=x, **kwargs)\n\ng = sns.FacetGrid(X_train, col=\"Sex\", hue = 'Survived', height = 6, aspect = 1.5, palette = 'ocean');\ng.fig.suptitle(\"Sex, Number of Sublings\/Spouses & Survival\",size = 25);\ng.map(sns.countplot, \"SibSp\");\nplt.rcParams['font.size'] = 15\ng.add_legend();","7a0be52c":"plt.title(\"Did Ticket Fare & Sex Affect the Chance of Survival?\\n\", size =20, loc = 'left')\n\nax = sns.violinplot(x = 'Fare', y = 'Survived', hue = 'Sex', data = X_train, orient = 'h', split = True, palette = mypal);\n\nsns.despine(top = False, bottom = True)\nplt.yticks(rotation=0, size = 15)\nax.xaxis.set_ticks_position(\"top\")\nax.xaxis.set_label_position('top')","df1a575c":"g = sns.catplot(x=\"Fare\", y=\"Survived\", row=\"Pclass\",\n                kind=\"box\", orient=\"h\", height = 3, aspect = 4,\n                data=X_train.query(\"Fare > 0\"), palette = mypal, sharex = True);\n\ng.fig.suptitle(\"Ticket Fare, Passenger Class & Survival\", x = 0.29, size = 20);\n\nsns.despine(top = False, bottom = True)\ng.set_yticklabels(rotation=0, size = 12)\ng.set(xscale=\"log\");\ng.tight_layout()","5178bd0e":"From the barplot above:\n\n* No one with 5 or 8 siblings survived.","b024d93c":"***Sex, SibSp & Survival***","7e11707b":"***Did Age Affect Someone's Chance of Survival?***","87aebcb6":"## ***Bivariate Data Analysis***","59ff9977":"From the boxplots above:\n\n* People from lower class had similar median fare paid, however there's higher fare variance among who those who didn't survive.\n* For middle class, the median fare is vastly different, those who didn't survive paid the lowest, while on average those who survived paid higher.\n* For upper class, the ranges of fares paid differed as well,those who didn't survive paid lower fares on average, however among who survived they paid higher on average.","eed0397a":"## ***Visualizing Missing Values***","d9463faa":"***Did The Fare Paid Affect Who Survived?***","47d46883":"***Sex, Ticket Fare & Survival***","d43463eb":"## ***Univariate Data Analysis***","8dfbe8cd":"***Age, Sex & Survival***","d56cc165":"***Parch & Survival***","fe599585":"***Ticket Fare, Pclass & Survival***","335f7d08":"From the boxplot above:\n\n* The median fare paid for survivors was higher than the fare paid by non survivors, this could mean that afluency attributed to survival.","149b5893":"From the mosaic plot and the barplot above:\n\n* From the survivors the majority were females.\n* Around 74% of females survived compared to 18.6% of males.","54c4ff8d":"From the graph above, it's apparent that:\n\n* The median age for survivors and non survivors, were almost the same.\n\nSo I don't think age attributed to someone's chance of survival.","c1a6649b":"From the stacker barplot above:\n\n* The number of males without siblings\/spouses who didn't survive was higher than the number of males without siblings\/spouses who did.\n* It can be seen that the higher the number of siblings\/spouses for men, the less they survived.\n* Females mostly survived with or without siblings\/spouses, however similar to males, some females with 3 or 4 sibsp didn't survive.","36283cd0":"From the mosaic and barplot above:\n\n* Passenger class seems to be correlated with survival, as the upper class had the highest survival rates, compares to lower and middle class.","366b5d82":"## ***Multivariate Data Analysis***","5452d9a2":"***PClass & Survival***","f9f6da39":"From the violinplot above:\n\n* The median age for male and female survivors and non survivors was similar.\n* The distribution of female survivors was larger than male surviors.\n* While sex can be an attribute to predict survival, however age is not.","be2fc490":"## ***Read & View Data***","7ced697a":"## ***Data Cleaning***","1d32bcf8":"From the violinplot above:\n\n* As figured from previous graphs, people who paid higher fare tended to survive more.\n* The distribution of females survived is a bit skewed, with higher variance.","9a6bf12d":"From the barplot above:\n\n* No one with 4 or 6 parents\/children survived.","bbd75e10":"***SibSp and Survival***","14429663":"***Did Sex Affect the Chance of Survival?***"}}