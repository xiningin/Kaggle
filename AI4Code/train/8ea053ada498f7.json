{"cell_type":{"0737e579":"code","193a344b":"code","95be0f1f":"code","a52989bc":"code","2817ecf4":"code","b960b853":"code","46c80f87":"code","ed0c49a8":"code","78ecd748":"code","727aa7d5":"markdown","220dfb32":"markdown","3059586e":"markdown","008c824e":"markdown","b61b9399":"markdown","cd113daf":"markdown","84138d94":"markdown","f8d7de20":"markdown","e2ada044":"markdown","e2a85c9f":"markdown","934ab202":"markdown","a94789a2":"markdown"},"source":{"0737e579":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\nimport plotly.figure_factory as ff\nimport plotly.express as px\n\n%matplotlib inline","193a344b":"def ensembling(main, support, coeff): \n    \n    suba  = main.copy() \n    subav = suba.values\n       \n    subb  = support.copy()\n    subbv = subb.values    \n           \n    ense  = main.copy()    \n    ensev = ense.values  \n \n    for i in range (len(main)):\n        \n        pera = subav[i, 1]\n        perb = subbv[i, 1]\n        per = (pera * coeff) + (perb * (1.0 - coeff))   \n        ensev[i, 1] = per\n        \n    ense.iloc[:, 1] = ensev[:, 1]  \n    \n    ###############################    \n    X  = suba.iloc[:, 1]\n    Y1 = subb.iloc[:, 1]\n    Y2 = ense.iloc[:, 1]\n    \n    plt.style.use('seaborn-whitegrid') \n    plt.figure(figsize=(9, 9), facecolor='lightgray')\n    plt.title(f'\\nE N S E M B L I N G\\n')   \n      \n    plt.scatter(X, Y1, s=1.5, label='Support')    \n    plt.scatter(X, Y2, s=1.5, label='Generated')\n    plt.scatter(X, X , s=0.1, label='Main(X=Y)')\n    \n    plt.legend(fontsize=12, loc=2)\n    #plt.savefig('Ensembling_1.png')\n    plt.show()     \n    ###############################   \n    ense.iloc[:, 1] = ense.iloc[:, 1].astype(float)\n    hist_data = [subb.iloc[:, 1], ense.iloc[:, 1], suba.iloc[:, 1]] \n    group_labels = ['Support', 'Ensembling', 'Main']\n    \n    fig = ff.create_distplot(hist_data, group_labels, bin_size=.2, show_hist=False, show_rug=False)\n    fig.show()   \n    ###############################       \n    \n    return ense      ","95be0f1f":"path0 = '..\/input\/tps-785318\/TPS_785318.csv' \n\nsub785318 = pd.read_csv(path0)","a52989bc":"path1 = '..\/input\/tps-785254\/TPS8_785254.csv' \n\nsub785254 = pd.read_csv(path1)","2817ecf4":"path2 = '..\/input\/tps8-785237\/TPS8_785237.csv' \n\nsub785237 = pd.read_csv(path2)","b960b853":"hist_data = [sub785318.loss, sub785254.loss, sub785237.loss]  \n\ngroup_labels = ['Public Score: 7.85318', 'Public Score: 7.85254', 'Public Score: 7.85237']\n    \nfig = ff.create_distplot(hist_data, group_labels, bin_size=.2, show_hist=False, show_rug=False) \n\nfig.show()","46c80f87":"sub1 = ensembling(sub785254, sub785318, 0.40)\n\nsub2 = ensembling(sub785237,      sub1, 0.60)","ed0c49a8":"sub1.to_csv(\"submission1.csv\",index=False)\nsub2.to_csv(\"submission2.csv\",index=False)\n!ls","78ecd748":"sub2p = sub2.copy()\nsub2p['loss'] = sub2p['loss'] + 0.02\n\nsub2p.to_csv(\"submission2p.csv\",index=False)","727aa7d5":"<div class=\"alert alert-success\">  \n<\/div>","220dfb32":"<div class=\"alert alert-success\">  \n<\/div>","3059586e":"<div class=\"alert alert-success\">  \n<\/div>","008c824e":"## This is just for amusement","b61b9399":"<div class=\"alert alert-success\">  \n<\/div>","cd113daf":"<div class=\"alert alert-success\">  \n<\/div>","84138d94":"<div class=\"alert alert-success\">\n    <h1 align=\"center\">If you find this work useful, please don't forget upvoting :)<\/h1>\n<\/div>","f8d7de20":"## Thanks to:\n\n#### We thank all those who made their notebooks public. We especially wanted to thank the following people; With the release of their great notebooks, they made it possible for us to learn from their solutions as well as use the results of their notebooks.\n\n- #### @hiro5299834\n- #### @alexryzhkov\n- #### @pourchot\n- #### @oxzplvifi\n\n","e2ada044":"<div class=\"alert alert-success\">  \n<\/div>","e2a85c9f":"<div>\n    <h1 align=\"center\">Smart Ensembling<\/h1>    \n    <h1 align=\"center\">Tabular Playground Series - Aug 2021<\/h1> \n<\/div>","934ab202":"# This is a copy of TPS8 - Smart Ensembling by Somayyeh Gholami.\n\n# see https:\/\/www.kaggle.com\/somayyehgholami\/2-tps8-smart-ensembling\n\n# I made a one cell change (the work and credit belong to Somayyeh)","a94789a2":"<div class=\"alert alert-success\">  \n<\/div>"}}