{"cell_type":{"c984939f":"code","2c96f884":"code","ea48fcba":"code","d5e11dc1":"code","3b549a8a":"markdown","b4053ab7":"markdown"},"source":{"c984939f":"REPLAY_PATH = 'https:\/\/www.kaggleusercontent.com\/episodes\/7225044.json'","2c96f884":"import urllib.request, json \nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation, PillowWriter \n%matplotlib notebook","ea48fcba":"def animate(i):\n    global replay, reward, board\n    plt.cla()\n    #plt.style.use(\"ggplot\")\n    \n    selectedAgent = replay[i][0]['action']\n    atari = replay[i][0]['reward'] - reward\n    reward = replay[i][0]['reward']\n    \n    if atari > 0:\n        board[\n            board.shape[0] - (board[:,selectedAgent] > 0).sum() - 1,\n            selectedAgent,\n            1 # green\n        ] = 255\n    else:\n        board[\n            board.shape[0] - (board[:,selectedAgent] > 0).sum() - 1,\n            selectedAgent,\n            0 #red\n        ] = 255\n\n    plt.imshow(board)\n","d5e11dc1":"with urllib.request.urlopen(REPLAY_PATH) as url:\n    replay = json.loads(url.read().decode())['steps']\n    \nboard = np.zeros((60,100,3), dtype=np.uint8)\nreward = 0\n\nfig = plt.figure(figsize=(12,6))\nani = FuncAnimation(fig, animate, interval=50, frames=2000, repeat=False)\n\n# Feel free to comment this out to just render to browser interactively\nwriter = PillowWriter(fps=50)  \nani.save(\"7225050.gif\", writer=writer)  \n\nplt.show()","3b549a8a":"People have already done a lot of good work. This is my attempt to create a better visualization than whatever we already have for video playback.\n\nGo the the LB and download your bot's playback (or link to it), then drop in the json file here to see it animated.\n\n- x-axis is bandit number\n- y-axis is YOUR (whichever bandit was downloaded's) pulls\n- green = atari!\n<img src='https:\/\/www.kaggleusercontent.com\/kf\/49312289\/eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..NJCQO3tDhWr1vLcu5Nc2tw.KLm2F-aMQmXKGYoMD5pc8oyJJiWG0jkAqtCnvEJuYRPRhApxVG_yQfaUIFhvnXCf_qAedtHzcy72_HPgcVNZ7x4Hmwo5BQoMhUQXNYxwTdqFnpVkRtvdqIcYO5PKjLmjE_yVhZ_Q41JfJsOSGnBqDBGdyY6n23corjpmTHpUY_hQpnMEP0T1ZBUs8n_h4KfoIN4EscE0I5z2-_V94e3H6d2cMmYBgGjBSPUpMqT3uzWwBGR9JracjMdwR0WtpXem6NGSJu7YtYdwdhd23tOZ_Qs9Qy2gR-nLByOrYdi7DlC3MvrOBAPaW2zyBbs-7B1pScwpNHzh54OtcIh1vvCGfx93G3HfU6Xu3NVFNJeVPJEuq2w2oxo27WUzqQ4P8iZXH8b3PSf-zBLgO54aSp2gWJJWm3j5abmOeink7Tfz0_2yf8E9bOzM-78P8l_xjzb1hJV_7Rg9Vd3a7lwbC_MVHI7ZzFPXBg1KuqbNX2rkzea1DzYOKVXUQ4fH8EKMnMQtcZx9npVaes86jBR5_qZntB783kVnc9SR0VLj61ntwxfQC0WygtWk7adKa5KAZZ-zToHr8NcG57_BDo8eQMF8mPhEen3IZ-pcgKFgHmsrznLWCOD8MR14VTB1Jeg8EWu1.rLh_HSDN4qQKPcwLlSFrcA\/7225050.gif' \/>\n\nRoom for improvement by the real viz masters. You might want to download it and run it locally so that it animates real-time rather than batch updates through Kaggle kernel.\n\nGL!","b4053ab7":"# Animate my Santa"}}