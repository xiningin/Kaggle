{"cell_type":{"67803bf5":"code","80074e29":"code","d950a15e":"code","02b000eb":"code","54e00fb0":"code","0359414d":"code","cb3dac24":"code","cd4f0daf":"code","71651f36":"code","16bc30d1":"code","31b8bdeb":"code","276632d8":"code","7fb6da5f":"code","3b57a4db":"code","63b7e9d7":"code","7de87b78":"code","0b310cd0":"code","2af3ed72":"markdown","d6256926":"markdown","aaa4c26f":"markdown","7ed5e69b":"markdown","d3c76db6":"markdown","d48ee140":"markdown","aa5725e1":"markdown","d8f1b628":"markdown","40fab082":"markdown","3d025742":"markdown","2d7f557b":"markdown","a756348c":"markdown","4a98643d":"markdown","95a63eeb":"markdown","4147fbaf":"markdown","a825ddae":"markdown","d34f11ab":"markdown","53e9d76f":"markdown","5374fb20":"markdown","00ee5fdc":"markdown","6344070c":"markdown","c03707e1":"markdown"},"source":{"67803bf5":"import pandas as pd\nimport seaborn as sns\nfrom learntools.advanced_pandas.indexing_selecting_assigning import *\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option(\"display.max_rows\", 5)","80074e29":"\nreviews.head()","d950a15e":"check_q1(pd.DataFrame())","02b000eb":"reviews['description']","54e00fb0":"reviews['description'][0]","0359414d":"reviews.iloc[0]","cb3dac24":"reviews['description'][0:10]","cd4f0daf":"reviews.loc[[1,2,3,5,8]]","71651f36":"reviews[['country','province','region_1','region_2']].loc[[0,1,10,100]]","16bc30d1":"reviews[['country','variety']].iloc[0:100]","31b8bdeb":"reviews[reviews['country']=='Italy']","276632d8":"reviews[reviews['region_2'].notnull()]\n","7fb6da5f":"reviews.points","3b57a4db":"reviews.points[0:1000]","63b7e9d7":"reviews.tail(1000)['points']","7de87b78":"reviews[reviews['country']=='Italy']['points']","0b310cd0":"reviews[(reviews['country'].isin(['Italy','France']) & (reviews['points']>=90))]['country']","2af3ed72":"The remaining exercises are visual.","d6256926":"# Introduction\n\nMost projects requiring selecting specific values from a `DataFrame` or `Series`. You will work on that skill here using the [Wine Reviews dataset](https:\/\/www.kaggle.com\/zynicide\/wine-reviews). \n\n# Relevant Resources\n* **[Quickstart to indexing and selecting data](https:\/\/www.kaggle.com\/residentmario\/indexing-and-selecting-data\/)** \n* [Indexing and Selecting Data](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/indexing.html) section of pandas documentation\n* [Pandas Cheat Sheet](https:\/\/assets.datacamp.com\/blog_assets\/PandasPythonForDataScience.pdf)\n\n\n","aaa4c26f":"**Exercise 3**: Select the first row of data (the first record) from `reviews`. Hint: from this exercise onwards I strongly recommend using `loc` or `iloc`.","7ed5e69b":"# Exercises","d3c76db6":"**Exercise 12**: <!--What is the distribution of reviews scores for the last 1000 wines in the dataset?--> Select the `points` column for the last 1000 wines.","d48ee140":"**Exercise 4**: Select the first 10 values from the `description` column in `reviews`. Hint: format your output as a `pandas` `Series`.","aa5725e1":"# Set Up\nRun the following cell to load your data and some utility functions","d8f1b628":"**Exercise 6**: Select the `country`, `province`, `region_1`, and `region_2` columns of the records with the `0`, `1`, `10`, and `100` index positions. In other words, generate the following `DataFrame`:\n\n![](https:\/\/i.imgur.com\/FUCGiKP.png)","40fab082":"**Exercise 14**: Who produces more above-averagely good wines, France or Italy? Select the `country` column, but only  when said `country` is one of those two options, _and_ the `points` column is greater than or equal to 90.\n\nYour output should look roughly like this:\n```\n119       France\n120        Italy\n           ...  \n129969    France\n129970    France\nName: country, Length: 15840, dtype: object\n```","3d025742":"**Exercise 5**: Select the records with the `1`, `2`, `3`, `5`, and `8` row index positions. In other words, generate the following`DataFrame`:\n\n![](https:\/\/i.imgur.com\/sHZvI1O.png)","2d7f557b":"**Exercise 9**: Select wines whose `region_2` is not `NaN`.","a756348c":"For the first set of questions, if you use `check_qN` on your answer, and your answer is right, a simple `True` value will be returned.\n\nFor the second set of questions, using this function to check a correct answer will present you will an informative graph!\n\nIf you get stuck, use `answer_qN` function to print the answer outright.","4a98643d":"**Exercise 8**: Select wines made in `Italy`. Hint: `reviews.country` equals what?","95a63eeb":"Look at an overview of your data by running the following line","4147fbaf":"## Keep going\n\nMove on to the [**Summary functions and maps workbook**](https:\/\/www.kaggle.com\/kernels\/fork\/599524).","a825ddae":"**Exercise 13**: <!--What is the distribution of reviews scores for wines made in Italy?--> Select the `points` column, but only for wines made in Italy.","d34f11ab":"**Exercise 1**: Select the `description` column from `reviews`.","53e9d76f":"**Exercise 11**: <!--What is the distribution of reviews scores for the first 1000 wines in the dataset?--> Select the `points` column for the first 1000 wines.","5374fb20":"**Exercise 2**: Select the first value from the description column of `reviews`.","00ee5fdc":"**Exercise 7**: Select the `country` and `variety` columns of the first 100 records. \n\nHint: you may use `loc` or `iloc`. When working on the answer this question and the several of the ones that follow, keep the following \"gotcha\" described in the [reference](https:\/\/www.kaggle.com\/residentmario\/indexing-selecting-assigning-reference) for this tutorial section:\n\n> `iloc` uses the Python stdlib indexing scheme, where the first element of the range is included and the last one excluded. So `0:10` will select entries `0,...,9`. `loc`, meanwhile, indexes inclusively. So `0:10` will select entries `0,...,10`.\n\n> [...]\n\n> ...[consider] when the DataFrame index is a simple numerical list, e.g. `0,...,1000`. In this case `df.iloc[0:1000]` will return 999 entries, while `df.loc[0:1000]` return 1000 of them! To get 1000 elements using `iloc`, you will need to go one higher and ask for `df.iloc[0:1001]`.","6344070c":"# Checking Answers\n\nYou can check your answers in each of the exercises that follow using the  `check_qN` function provided in the code cell above (replacing `N` with the number of the exercise). For example here's how you would check an incorrect answer to exercise 1:","c03707e1":"**Exercise 10**: <!--What is the distribution of wine ratings assigned by Wine Magazine?--> Select the `points` column."}}