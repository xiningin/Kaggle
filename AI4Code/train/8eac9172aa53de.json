{"cell_type":{"16c32600":"code","096fa8c5":"code","624be16a":"code","74cb90b8":"code","831a0cb0":"code","db10f352":"code","ded8f6fd":"code","d3d699a7":"code","536a4376":"code","60649513":"code","b705e67a":"code","e18a8276":"code","f3c6e8c0":"code","97d9d5fe":"code","95decbed":"code","0acf169c":"code","093f7eb2":"code","a48ec4d2":"code","22a5f4db":"code","ad6f058b":"code","ac5b20d5":"code","563e07c6":"code","9a5368e7":"code","1128c4f0":"code","5f83aa43":"code","63c144bf":"code","319a7b42":"code","ce3500b1":"code","dfe631da":"code","c7e4252b":"code","9e231d7a":"code","d0059d22":"code","0f7c5396":"code","ea332826":"code","06c43190":"code","6afa3750":"code","30767df3":"code","e1697cfa":"code","c23c837c":"code","78fa42e8":"code","7312e8ac":"code","5c16d71b":"code","0d3bf2ed":"code","c0194283":"code","1ff13842":"code","f054a950":"code","0c57c477":"code","1bbaa62e":"code","1b89436c":"code","e0703a01":"code","80cab5ec":"code","8638dbbe":"code","ccf8e8d6":"code","06364247":"code","1ee1c8a4":"markdown","4ca83e25":"markdown","16e152c1":"markdown","5643d6ea":"markdown","4280890f":"markdown","26d933f1":"markdown","de3217c2":"markdown","20d706f2":"markdown","cefb4e62":"markdown","5524a4e6":"markdown","67b1333d":"markdown","789b3337":"markdown","741da24d":"markdown","81e1af01":"markdown","9f7d3105":"markdown","7a78c503":"markdown"},"source":{"16c32600":"import numpy as np\nimport pandas as pd \nimport numpy\nimport matplotlib.pyplot as plt\nimport geopy.distance\nimport seaborn as sns\nimport geopandas as gpd\nfrom shapely.geometry import Point\n","096fa8c5":"OD_2017 = pd.read_csv('..\/input\/OD_2017.csv', low_memory=False, index_col=0);\nStations_2017 = pd.read_csv('..\/input\/Stations_2017.csv', low_memory=False);\nElevation = pd.read_csv('..\/input\/POINT_DATA.csv', low_memory=False);\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\n","624be16a":"OD_2017.head()\n","74cb90b8":"Stations_2017.head()","831a0cb0":"Elevation.head()","db10f352":"Elevation.columns =['longitude','latitude','elevation']\nElevation.head()","ded8f6fd":"#Add column\nStations_2017['elevation'] = 'e'","d3d699a7":"#Work with copy of data\nStations_2017_Elevations= Stations_2017.copy()\nStations_2017_Elevations.head()","536a4376":"for index, row in Stations_2017.iterrows(): \n    latitude = str(row['latitude'])\n    longitude = str(row['longitude'])\n    query = Elevation.query('longitude < '+longitude+' + 0.0001 & longitude > '+longitude+' - 0.0001 & latitude < '+latitude+' + 0.0001 & latitude > '+latitude+' - 0.0001')\n   \n    rows, cols = query.shape\n    if(rows ==1):\n        Stations_2017.loc[index, 'elevation'] = query['elevation'].iloc[0]","60649513":"Stations_2017.head(10)","b705e67a":"Stations_2017.query('elevation == \"e\"')","e18a8276":"Stations_2017.to_csv(path_or_buf='Stations_2017_elevations.csv')","f3c6e8c0":"Stations_2017_Elevations= pd.read_csv('..\/input\/Stations_2017_elevations_with_manually_added_missing_elevations.csv', low_memory=False,encoding = \"cp1252\");","97d9d5fe":"#new Elevations with missing values added\nStations_2017_Elevations.head(100)","95decbed":"Stations_2017_Elevations.isnull().sum()\n","0acf169c":"plt.figure(figsize=(15,5));\nplt.subplot(1,2,1);\nStations_2017_Elevations['elevation'].plot.hist(bins=40);\nplt.xlabel('Elevation');\n","093f7eb2":"df_complete = OD_2017.sort_values(by = ['start_station_code'])\nStations_2017_Elevations.sort_values(by = ['code'])\n\ndf_complete = pd.merge(df_complete, Stations_2017_Elevations,  how='left', left_on = 'start_station_code', right_on = 'code')","a48ec4d2":"df_complete.head(100)","22a5f4db":"df_complete.rename(columns={'latitude': 'latitude_start', 'longitude': 'longitude_start','elevation': 'elevation_start','name': 'name_start', 'is_public': 'is_public_start'}, inplace=True)","ad6f058b":"df_complete.drop(columns=['code'],axis=1, inplace=True)\ndf_complete.head()","ac5b20d5":"df_complete.loc[df_complete['end_station_code'] == 'Tabletop (RMA)']","563e07c6":"# Remove data that doesn't match rest of data\ndf_complete = df_complete[df_complete.end_station_code !='Tabletop (RMA)']","9a5368e7":"#cast data to number\ndf_complete[\"end_station_code\"] = pd.to_numeric(df_complete[\"end_station_code\"]) ","1128c4f0":"df_complete_end_elevation = pd.merge(df_complete, Stations_2017_Elevations,  how='left', left_on = 'end_station_code', right_on = 'code')","5f83aa43":"df_complete_end_elevation.head()","63c144bf":"df_complete_end_elevation.rename(columns={'latitude': 'latitude_end', 'longitude': 'longitude_end','name': 'name_end','elevation': 'elevation_end','name': 'name_end', 'is_public': 'is_public_end'}, inplace=True)","319a7b42":"df_complete_end_elevation.drop(columns=['code'],axis=1, inplace=True)\ndf_complete_end_elevation.head()","ce3500b1":"df_complete_end_elevation['elevation_difference'] = df_complete_end_elevation.apply(lambda row: row.elevation_end - row.elevation_start, axis=1)\ndf_complete_end_elevation.head(5)","dfe631da":"#df_complete_end_elevation['distance_between_stations'] = df_complete_end_elevation.apply(lambda row: geopy.distance.distance((row.latitude_start,row.longitude_start), (row.latitude_end ,row.longitude_end)), axis=1)\ndf_complete_end_elevation.shape","c7e4252b":"row = df_complete_end_elevation.iloc[1]\ndistance = geopy.distance.distance((row.latitude_start,row.longitude_start), (row.latitude_end ,row.longitude_end))\nprint(distance)","9e231d7a":"df_distances = pd.DataFrame(columns=['distance'])\ndf =df_complete_end_elevation.iloc[0:5]\ndf\n","d0059d22":"#Takes 40 minutes to calculate on my laptop, no need to run as dataset with distance values are loaded later on\n\n#for index, row in df_complete_end_elevation.iterrows():\n#    df_complete_end_elevation.set_value(index,'distance',geopy.distance.distance((row.latitude_start,row.longitude_start), (row.latitude_end ,row.longitude_end)))\n#    if(index%10000==0):\n#        print(index)\n#        \n#df_complete_end_elevation.head(10)\n","0f7c5396":"#df_complete_end_elevation.to_csv('complete_data_elevations_and_distance.csv')","ea332826":"df_bixi = pd.read_csv('..\/input\/complete_data_elevations_and_distance.csv', low_memory=False);\n","06c43190":"df_bixi.info()","6afa3750":"# change object distance with end km to float\ndf_bixi['distance'] = df_bixi['distance'].astype(str).str[:-3].astype(float)","30767df3":"df_bixi.info()","e1697cfa":"\ndf_bixi.head()","c23c837c":"plt.figure(figsize=(20,10));\nplt.subplot(1,2,1);\ndf_bixi['distance'].plot.hist(bins=40)\nplt.xlabel('Distance Km');\n\n\nplt.subplot(1,2,2);\ndf_bixi['elevation_difference'].plot.hist(bins=100)\nplt.xlabel('Elevation Difference (m)');","78fa42e8":"\nfig = plt.figure(figsize=(10,10));\nax = fig.gca()\nax.set_xticks(numpy.arange(0, 30, 2))\nax.set_yticks(numpy.arange(-50, 50, 2))\nplt.grid()\nplt.boxplot(df_bixi['elevation_difference'], 0, '')\n\n","7312e8ac":"df_bixi.describe()","5c16d71b":"df_bixi.median()","0d3bf2ed":"df_bixi[df_bixi['elevation_difference'] <0 ].count()","c0194283":"#show data about elevation on specific days and times\ndf_bixi['start_date'] = pd.to_datetime(OD_2017['start_date'])\ndf_bixi['end_date'] = pd.to_datetime(OD_2017['end_date'])\ndf_bixi[['start_date', 'end_date']].dtypes","1ff13842":"plt.figure(figsize=(15,5));\ndf_bixi['duration_sec'].plot.hist(bins=100);\nplt.xlabel('Duration');","f054a950":"\n\nplt.subplot(1,2,1);\ndf_bixi.groupby('is_member').mean()['elevation_difference'].plot(kind='bar', color='#1f77b4');\nplt.title('Mean Elevation Difference');","0c57c477":"df_bixi['weekday'] = df_bixi.start_date.dt.dayofweek\ndf_bixi['hour'] = df_bixi.start_date.dt.hour\ndf_bixi['month'] = df_bixi.start_date.dt.month\ndf_bixi['daynum'] = df_bixi.start_date.dt.dayofyear","1bbaa62e":"plt.figure(figsize=(15,5));\nplt.subplot(1,3,1);\ndf_bixi.groupby('weekday').count()['duration_sec'].plot(kind='bar', color='#1f77b4');\n\nplt.subplot(1,3,2);\ndf_bixi.groupby('hour').count()['duration_sec'].plot(kind='bar', color='#1f77b4');\n\nplt.subplot(1,3,3);\ndf_bixi.groupby('month').count()['duration_sec'].plot(kind='bar', color='#1f77b4');","1b89436c":"dfp = df_bixi.pivot_table(columns='hour',index='weekday', aggfunc=np.mean)['elevation_difference'];\nplt.figure(figsize=(18,5));\nplt.title('Pivot table: Mean Elevation Difference');\nplt.imshow(dfp,interpolation='none');\nhours = range(24);\nhourlabels = map(lambda x: str(x)+'h',hours);\ndays = range(7);\ndaylabels = ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'];\nplt.xticks(hours,hourlabels,rotation=90);\nplt.yticks(days,daylabels);\nplt.colorbar();","e0703a01":"dfp = df_bixi.pivot_table(columns='hour',index='weekday', aggfunc=np.mean)['distance'];\nplt.figure(figsize=(18,5));\nplt.title('Pivot table: Trip Distance (km)');\nplt.imshow(dfp,interpolation='none');\nhours = range(24);\nhourlabels = map(lambda x: str(x)+'h',hours);\ndays = range(7);\ndaylabels = ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'];\nplt.xticks(hours,hourlabels,rotation=90);\nplt.yticks(days,daylabels);\nplt.colorbar();","80cab5ec":"Stations_2017_Elevations['Coordinates']  = list(zip(Stations_2017_Elevations.longitude, Stations_2017_Elevations.latitude))","8638dbbe":"Stations_2017_Elevations['Coordinates'] = Stations_2017_Elevations['Coordinates'].apply(Point)","ccf8e8d6":"gdf = gpd.GeoDataFrame(Stations_2017_Elevations, geometry='Coordinates')\nprint(gdf.head())\ngdf.plot()\n","06364247":"vmin, vmax = -10, 100\n\nax = gdf.plot(column='elevation', colormap='hot', vmin=vmin, vmax=vmax)\n\n# add colorbar\nfig = ax.get_figure()\ncax = fig.add_axes([0.9, 0.1, 0.03, 0.8])\nsm = plt.cm.ScalarMappable(cmap='hot', norm=plt.Normalize(vmin=vmin, vmax=vmax))\n# fake up the array of the scalar mappable. Urgh...\nsm._A = []\nfig.colorbar(sm, cax=cax)\n","1ee1c8a4":"## Rename end station longitudes ","4ca83e25":"# Merge Station data with bixi trip data","16e152c1":"# Analysis","5643d6ea":"# Analysis","4280890f":"# Missing Values\nAs we can see there are multiple missing values. I will therefore get these elevations manually by using https:\/\/www.freemaptools.com\/elevation-finder.htm","26d933f1":"# Full Data Set Loaded from previous run","de3217c2":"# 1) Questions\nHow does the elevation of bixi stations influence trips and how does the date\/time come into play?\n","20d706f2":"# Calculate Elevation Distance between start and end station","cefb4e62":"## Rename columns","5524a4e6":"# Check if there are any missing values","67b1333d":"# Import Code","789b3337":"# Combining the data from the elevation coordinates with bixi station coordinates\n\nThe coordinates elevation data doesn't match the coordinates in the bixi data exactly so we take the closest data point and asociate it with that one","741da24d":"# Analysis:\nIt seems that on Friday afternoons and Saturday nights, when people go out, they take bixis downhill. Most likely from the plateau down. \nThe term Lazy Sunday seems to fit well too as all day the average is around -4 meters in elevation.","81e1af01":"# Cleaning the Code\nRenaming columns and removing redundant columns","9f7d3105":"# Check the shape of the Data","7a78c503":"\n# Create Columns For Distance Traveled and Elevation Variation\n\n"}}