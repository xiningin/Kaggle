{"cell_type":{"9bc3c4ba":"code","20a3190f":"code","f354f144":"code","6cef8a61":"code","e5c9c76f":"code","08e44c5c":"code","f38f93d5":"code","36101ec0":"code","19f543d1":"code","3ec0bdcb":"code","6dc46c0c":"code","1dcb34f3":"code","9add1ecd":"code","9e6382bd":"code","2b92e614":"code","2829f284":"code","2be273ca":"code","59bb5dc2":"code","bc45408d":"code","82df6954":"markdown"},"source":{"9bc3c4ba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","20a3190f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt \nfrom sklearn import datasets","f354f144":"datadict = datasets.load_breast_cancer()\ndatadict.keys()","6cef8a61":"pd.DataFrame?","e5c9c76f":"breastDF= pd.DataFrame(datadict['data'],columns=datadict['feature_names'])","08e44c5c":"breastDF['target']= datadict['target']","f38f93d5":"breastDF.head(5)","36101ec0":"#explore data\nbreastDF.info()","19f543d1":"#Explore data\nbreastDF.describe()","3ec0bdcb":"#check on data\n\n#missing data\nbreastDF.isnull().sum()","6dc46c0c":"#How many malignant and benign are in the dataset\nbreastDF['target'].value_counts().plot.barh()\nplt.title('Distribution of malignant(0) and benign(1) tumor')\nplt.xlabel('Count')\nplt.ylabel('Diagnosis')","1dcb34f3":"#Explore the correlation between first 10th features and diagnosis\n\nfigure, axes = plt.subplots(nrows=10, ncols=1,figsize=(5,35))\n\nfor i,ax in zip(breastDF.columns[:10],axes):\n\n    ax.hist(breastDF[breastDF['target']==0][i],bins=30,label='Malignant',alpha=0.7)\n    ax.hist(breastDF[breastDF['target']==1][i],bins=30,label='Benign',alpha=0.7)\n\n    \n    ax.set_xlabel(i)\n    ax.legend()\n","9add1ecd":"#Start logistic linear predictive model\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression","9e6382bd":"train_test_split?","2b92e614":"#Train Test Split\nX_train, X_test, y_train, y_test = train_test_split(breastDF.drop('target',axis=1), breastDF['target'], test_size=0.3, random_state=42)","2829f284":"model= LogisticRegression()\nmodel.fit(X_train,y_train)","2be273ca":"predictY=model.predict(X_test)","59bb5dc2":"#Evaluation\nacc= np.mean(y_test==predictY)","bc45408d":"print('model accuracy =',np.round(acc*100),2)","82df6954":"Seems there is a correlation between the large mean values of (radius, perimeter, area, compactness, concavity, concave pint, and symmetry) and malignant."}}