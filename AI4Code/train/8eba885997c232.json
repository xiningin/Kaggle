{"cell_type":{"2c5f0ed0":"code","fb44ec7a":"code","ff899e77":"code","44ddb05c":"code","eebae7fd":"code","8e261f33":"code","127de171":"code","272f10b5":"code","923e6d0f":"code","e920971f":"code","d10eb0c5":"code","3ac06a34":"code","c1065236":"code","6289f853":"code","eb923cbf":"code","e2dee4df":"code","b0000abe":"code","31166759":"code","328cc8b7":"code","d718917d":"code","4978b04d":"code","f9bfe725":"code","bd81fc5f":"code","7d17433b":"code","94fcc68a":"code","9f50272b":"code","bbac1b75":"code","ee1320c4":"code","f446e748":"code","994a01fc":"code","8fad61ab":"code","f1774879":"code","9b2365bc":"code","7878ec1f":"code","613bdddd":"markdown","6dcf645d":"markdown","cd6451b1":"markdown","393e6cf5":"markdown","df768dfa":"markdown","aa28280d":"markdown","fb4aba50":"markdown","ef5b5037":"markdown","1c746386":"markdown","7ddaa348":"markdown","20ac331e":"markdown","9aa5fc68":"markdown","69f77f3a":"markdown","b006ae6a":"markdown","27a64e75":"markdown","5096783c":"markdown","33510d44":"markdown","bf9aef39":"markdown","4d5048c8":"markdown","586be4fe":"markdown","1e585999":"markdown","347e4cc4":"markdown","c582b5fd":"markdown","1b6e4863":"markdown","550a827d":"markdown","bb2fb12f":"markdown","3543fecc":"markdown"},"source":{"2c5f0ed0":"import re, string, unicodedata, random\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nfrom plotly.offline import init_notebook_mode, iplot\n\nfrom collections import Counter\nfrom itertools import chain\n\nfrom nltk import word_tokenize, sent_tokenize\nfrom nltk.corpus import stopwords\n\nfrom wordcloud import WordCloud","fb44ec7a":"STOPWORDS = stopwords.words('portuguese')\n\nblind = {\n    \"<empty>\": \"\",\n}","ff899e77":"def color_func(word, font_size, position, orientation, random_state=None,\n                    **kwargs):\n    COLORS = ['#b58900', '#cb4b16', '#dc322f', \n          '#d33682', '#6c71c4', '#268bd2', '#2aa198', '#859900']\n    return COLORS[random.randint(0, len(COLORS)-1)]\n\ndef convert(x):\n  x = str(x)\n  return f'{x[:4]}-{x[4:]}'\n\ndef re_sub(text, pattern, repl):\n    return re.sub(pattern, repl, text)\n\n\ndef remove_non_ascii(text):\n    new_tokens = []\n    tokens = text.split()\n    \n    for token in tokens:\n        token = unicodedata.normalize('NFKD', token).encode('ascii', 'ignore').decode('utf-8', 'ignore')\n        new_tokens.append(token)\n    \n    return ' '.join(new_tokens)\n\n\ndef remove_punctuation(text):\n    tokens = [c for c in text if c not in string.punctuation]\n                \n    return ''.join(tokens)\n\n\ndef strip_text(text):\n    return text.strip()\n\n\ndef remove_stopwords(text):\n    tokens = text.split()\n    tokens = [token for token in tokens if token not in STOPWORDS]\n                \n    return ' '.join(tokens)\n\n\ndef normalize_serie(text):\n    text = text.lower()\n    text = remove_stopwords(text)\n    text = remove_non_ascii(text)\n    \n    text = re_sub(text, r\"https?:\\\/\\\/\\S+\\b|www\\.(\\w+\\.)+\\S*\", blind[\"<empty>\"])\n    text = re_sub(text, r\"\\b(\\w*rt\\w*)\\b\", blind[\"<empty>\"])\n    text = re_sub(text, r\"\\b(\\w*jairbolsonaro\\w*)\\b\", blind[\"<empty>\"])\n    text = re_sub(text, r\"\\b(k+)\\b\", blind[\"<empty>\"])\n    text = re_sub(text, r\"\\b(\\d+)\\b\", blind[\"<empty>\"])\n    \n    text = strip_text(text)\n    text = remove_punctuation(text)\n\n    return text","44ddb05c":"f = '\/kaggle\/input\/bolsonaros-200-days-as-president-on-twitter\/jairbolsonaro.csv'","eebae7fd":"df = pd.read_csv(f, date_parser=['created_at'])","8e261f33":"df.head()","127de171":"df.info()","272f10b5":"df['YearMonth'] = pd.to_datetime(df['created_at']).apply(lambda x: int(f'{x.year}{x.month}'))","923e6d0f":"res = df.groupby('YearMonth')['id'].count()\nprint(res)","e920971f":"X = tuple(map(convert, res.index))\nY = res.values\n\nfig = go.Figure(data=[go.Scatter(x=X, y=Y, text=Y)])\nfig.update_layout(title='Tweets per month - @jairbolsonaro', \n                  xaxis_title='Month', yaxis_title='Tweets')\n\nfig.show()","d10eb0c5":"idx_retweet_count = df.groupby('YearMonth')['retweet_count'].transform(max) == df['retweet_count']\nx = df[idx_retweet_count]['YearMonth'].apply(convert)\n\nretweet_count = df[idx_retweet_count]['retweet_count']\nhovertext = df[idx_retweet_count]['text']\n\nfig = go.Figure(data=[go.Bar(\n    x=x, \n    y=retweet_count,\n    text=retweet_count,\n    textposition='auto',\n    hovertext=hovertext,\n  )\n])\n\nfig.update_layout(title='Tweets most retweeted per month - @jairbolsonaro')\n\nfig.show()","3ac06a34":"idx_favorite_count = df.groupby('YearMonth')['favorite_count'].transform(max) == df['favorite_count']\n\nfavorite_count = df[idx_favorite_count]['favorite_count']\nhovertext = df[idx_favorite_count]['text']\n\nfig = go.Figure(data=[go.Bar(\n    x=x, \n    y=favorite_count,\n    text=favorite_count,\n    textposition='auto',\n    hovertext=hovertext,\n  )\n])\n\nfig.update_layout(title='Tweets most favorited per month - @jairbolsonaro')\n\nfig.show()","c1065236":"temp = df[['YearMonth', 'favorite_count', 'retweet_count']\n          ].groupby(['YearMonth'], as_index=False).sum()\n\nfig = go.Figure(\n    data=[\n      go.Bar(name='Retweet', x=x, y=temp['retweet_count'], \n             text=temp['retweet_count'], textposition='auto'),\n      go.Bar(name='Favorite', x=x, y=temp['favorite_count'], \n             text=temp['favorite_count'], textposition='auto')\n])\n\nfig.update_layout(title='Retweets <i>vs<\/i> Favorite tweets - @jairbolsonaro', barmode='group')\nfig.show()","6289f853":"regex_mention = r'(@\\w+)'\ndf['mentions'] = df.text.apply(lambda x: ' '.join(re.findall(regex_mention, x)))","eb923cbf":"mentions = df[['mentions', 'YearMonth']].loc[df.mentions.str.contains('@')].groupby('YearMonth', as_index=False).count().sort_values(by='YearMonth')\n\nfig = go.Figure(data=go.Bar(name='Mentions', x=x, y=mentions['mentions'], \n                            text=mentions['mentions'], textposition='auto'))\nfig.update_layout(title='Tweets that mention some user - @jairbolsonaro')\nfig.show()","e2dee4df":"rts = df.loc[df.text.str.contains('RT ')].groupby('YearMonth', as_index=False).count().sort_values(by='YearMonth')['id'].values\nfig = go.Figure(data=go.Bar(name='Mentions', x=x, y=rts, \n                            text=rts, textposition='auto'))\nfig.update_layout(title='Retweets per Month - @jairbolsonaro')\nfig.show()","b0000abe":"not_rts = Y - rts\n\nfig = go.Figure(\n    data=[\n         go.Bar(name='Tweets', x=x, y=not_rts, text=not_rts, textposition='auto'),\n         go.Bar(name='RT', x=x, y=rts, text=rts, textposition='auto'),\n])\n\nfig.update_layout(title='Tweets composition per month - @jairbolsonaro', \n                  barmode='stack')\n\nfig.show()","31166759":"df['Hour'] = pd.to_datetime(df['created_at']).apply(lambda x: int(x.hour))","328cc8b7":"hours = df[['Hour', 'id']].groupby('Hour', as_index=False).count().sort_values(by='Hour')\n\nfig = go.Figure(\n      data=[go.Bar(x=hours['Hour'], y=hours['id'], \n                   text=hours['id'], textposition='auto')\n      ],\n)\n\nfig.update_layout(title='Tweet Frequency by hour - @jairbolsonaro')\nfig.show()","d718917d":"df['WeekDay'] = pd.to_datetime(df['created_at']).apply(lambda x: x.strftime('%w'))","4978b04d":"weekdays = df[['WeekDay', 'id']].groupby('WeekDay', as_index=False).count().sort_values(by='WeekDay')\ndays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday',]\n\nfig = go.Figure(data=[go.Bar(x=days, y=weekdays['id'], text=weekdays['id'], textposition='auto')])\nfig.update_layout(title='Tweet Frequency by weekday - @jairbolsonaro')\n\nfig.show()","f9bfe725":"months_week = df[['YearMonth', 'WeekDay', 'id']].groupby(['YearMonth', 'WeekDay'], as_index=False).count()\n  \nfig = go.Figure()\n\nfig.add_scatter(\n    x=months_week['YearMonth'].apply(convert), \n    y=months_week['WeekDay'].apply(lambda x: days[int(x)]), mode='markers+text', \n    marker_color=[\n                  '#b58900', '#cb4b16', '#dc322f', \n                  '#d33682', '#6c71c4', '#268bd2', \n                  '#2aa198',\n                ] * len(x),\n    # text=months_week['id'],\n    marker=dict(size=months_week['id'] * .7)\n)\n\nfig.update_layout(title='Tweets frenquency by weekday per Month - @jairbolsonaro')\n\nfig.show()","bd81fc5f":"months_week = df[['WeekDay', 'Hour', 'id']].groupby(['WeekDay', 'Hour'], as_index=False).count()\n  \nfig = go.Figure()\n\nfig.add_scatter(\n    x=months_week['Hour'], y=months_week['WeekDay'].apply(lambda x: days[int(x)]), \n    mode='markers+text', text=months_week['id'],\n    marker=dict(size=months_week['id'])\n)\n\nfig.update_layout(title='Tweets frenquency by hour per Weekday - @jairbolsonaro')\n\nfig.show()","7d17433b":"all_mentions = []\nfor year in X:\n  \n  mentions = []\n  mentions_ = df.loc[\n                    (df.YearMonth == int(year.replace('-', ''))) \n                    & (df.mentions != '')\n                    & (df.text.str.contains('RT ') == False)\n                  ]['mentions'].values\n\n  for m in mentions_:\n    for mention in m.split():\n      mentions.append(mention)\n  \n  all_mentions.append(mentions)","94fcc68a":"counter = []\nfor mentions in all_mentions:\n  counter.append(Counter(mentions))","9f50272b":"mentions = []\nsaved_mention = ['@jairbolsonaro']\n\nfor co in counter:\n  for mention in list(co.most_common()):\n    values = []\n    name = mention[0]\n    \n    if name.lower() in saved_mention:\n      continue\n    \n    for co in counter:\n      if name in chain(*co.most_common()):\n        for mention in list(co.most_common()):\n          if mention[0] == name:\n            values.append(mention[1])\n      else:\n        values.append(0)\n\n    if sum(values) > 1 and name.lower() not in saved_mention:\n      mentions.append((name, values, sum(values)))\n      saved_mention.append(name.lower())\n        \nmentions = sorted(mentions)","bbac1b75":"fig = go.Figure()\n\nfor mention in mentions:\n  fig.add_trace(go.Scatter(x=x, y=mention[1], name=mention[0], mode='lines'))\n\nfig.update_layout(title='Mentions per month - @jairbolsonaro',)\n\nfig.show()","ee1320c4":"all_mentions = []\nfor year in X:\n  \n  mentions = []\n  mentions_ = df.loc[\n                    (df.YearMonth == int(year.replace('-', ''))) \n                    & (df.mentions != '')\n                    & (df.text.str.contains('RT '))\n                  ]['mentions'].values\n\n  for m in mentions_:\n    for mention in m.split():\n      mentions.append(mention)\n  \n  all_mentions.append(mentions)","f446e748":"counter = []\nfor mentions in all_mentions:\n  counter.append(Counter(mentions))","994a01fc":"mentions = []\nsaved_mention = ['@jairbolsonaro']\n\nfor co in counter:\n  for mention in list(co.most_common()):\n    values = []\n    name = mention[0]\n    \n    if name.lower() in saved_mention:\n      continue\n    \n    for co in counter:\n      if name in chain(*co.most_common()):\n        for mention in list(co.most_common()):\n          if mention[0] == name:\n            values.append(mention[1])\n      else:\n        values.append(0)\n\n    if sum(values) > 1 and name.lower() not in saved_mention:\n      mentions.append((name, values, sum(values)))\n      saved_mention.append(name.lower())\n        \nmentions = sorted(mentions)","8fad61ab":"fig = go.Figure()\n\nfor mention in mentions:\n  fig.add_trace(go.Scatter(x=x, y=mention[1], name=mention[0], mode='lines'))\n\nfig.update_layout(title='Mentions per month - @jairbolsonaro',)\n\nfig.show()","f1774879":"df['normalized'] = df['text'].apply(normalize_serie)","9b2365bc":"wordcloud = WordCloud(\n    width=3000,\n    height=2000,\n    background_color='#073642',\n    collocations=False,\n    \n).generate(' '.join(df['normalized'].values))","7878ec1f":"fig = plt.figure(\n    figsize=(20, 15),\n    facecolor='k',\n    edgecolor='k'\n)\n\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.imshow(wordcloud.recolor(color_func=color_func, random_state=3),\n           interpolation=\"bilinear\")\nplt.show()","613bdddd":"## Witch people were mentioned?","6dcf645d":"### In 2019:\n1. In this case, the [same tweet](http:\/\/t.co\/THbGVEbasE) has the most favorites votes.","cd6451b1":"# Who is\nJair Messias Bolsonaro born 21 March 1955. He's a Brazilian politician and retired military officer who has been the 38th president of Brazil since 1 January 2019. He served in the country's Chamber of Deputies, representing the state of Rio de Janeiro, between 1991 and 2018. He was elected president as a member of the conservative Social Liberal Party, before leaving them to found the party Alliance for Brazil. [[1]](https:\/\/en.wikipedia.org\/wiki\/Jair_Bolsonaro)","393e6cf5":"## What is the frequency of tweets per month?","df768dfa":"# The Dataset\n\nThe dataset contains tweets from [@jairbolsonaro](https:\/\/twitter.com\/jairbolsonaro) as president of Brazil, from 1 January 2019 to 31 December 2019. There are 2.551 tweets that contains 5 variables, are they: id, text, retweet_count, favorite_count and created_at. The variables were explained by [Twitter's API](https:\/\/developer.twitter.com\/en\/docs\/tweets\/data-dictionary\/overview\/tweet-object).","aa28280d":"## Were there more tweets than retweets?","fb4aba50":"## WordCloud","ef5b5037":"### Describe the dataset\n\n\nThe dataset contains 5 variables, are they: id, text, retweet_count, favorite_count and create_at.","1c746386":"### In 2019:\n1. The tweets that had more than 30k of retweets were posted by [@realDonaldTrump](https:\/\/twitter.com\/realDonaldTrump). [[2]](https:\/\/en.wikipedia.org\/wiki\/Donald_Trump)\n1. Although October was the month with the largest number of tweets, the twitter with more RT was [this](http:\/\/t.co\/THbGVEbasE), about the [\u2018This will not stick\u2019: Brazilian president lashes out over alleged links to left-wing politician\u2019s killing](https:\/\/www.washingtonpost.com\/nation\/2019\/10\/30\/jair-bolsonaro-marielle-franco-murder-link\/).","7ddaa348":"## Which was the frequency of tweets by weekday of month?","20ac331e":"> October 2019 had the most tweets posts over the first year.","9aa5fc68":"## How many tweets that mention some user?","69f77f3a":"All variables are filled, don't existing any null objects.","b006ae6a":"# Exploratory Data Analysis (EDA)\n\n1. [What is the frequency of tweets per month?](#What-is-the-frequency-of-tweets-per-month?)\n1. [Which tweet was most favorited per month?](#Which-tweet-was-most-favorited-per-month?)\n1. [Was there a most retweet or favorited tweet per month?](#Was-there-a-most-retweet-or-favorited-tweet-per-month?)\n1. [How many tweets that mention some user?](#How-many-tweets-that-mention-some-user?)\n1. [How many tweets were retweets?](#How-many-tweets-were-retweets?)\n1. [Were there more tweets than retweets?](#Were-there-more-tweets-than-retweets?)\n1. [Which was the frequency of tweets by hour per day?](#Which-was-the-frequency-of-tweets-by-hour-per-day?)\n1. [Which was the frequency of tweets by weekday?](#Which-was-the-frequency-of-tweets-by-weekday?)\n1. [Which was the frequency of tweets by weekday of month?](#Which-was-the-frequency-of-tweets-by-weekday-of-month?)\n1. [Which was the frequency of tweets by hour per weekday?](#Which-was-the-frequency-of-tweets-by-hour-per-weekday?)\n1. [Which people were retweets?](#Which-people-were-retweets?)\n1. [Witch people were mentioned?](#Witch-people-were-mentioned?)","27a64e75":"# Jair Bolsonaro (@jairbolsonaro) - Tweets Staticts","5096783c":"## Was there a most retweet or favorited tweet per month?","33510d44":"### Imports and declarations","bf9aef39":"\n## Which was the frequency of tweets by hour per weekday?","4d5048c8":"This graph shows a visualization of the sum of favorite_count and retweet_count during the year.","586be4fe":"## How many tweets were retweets?","1e585999":"## Which tweet was most retweeted per month?","347e4cc4":"### Grouping by month\n\nIn order to facilitate grouping, I separated the tweets by month\/year, that will facility the data collection over the next few years.","c582b5fd":"# Sections\n\nThe notebook is ordering by sections on the left menu. Below the graphs there are some described facts about the data, please consider reading these.","1b6e4863":"## Which was the frequency of tweets by weekday?","550a827d":"## Which people the retweets came from?","bb2fb12f":"## Which tweet was most favorited per month?","3543fecc":"## Which was the frequency of tweets by hour per day?"}}