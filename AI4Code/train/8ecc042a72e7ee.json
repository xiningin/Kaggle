{"cell_type":{"19971fc9":"code","a141b74c":"code","889bd5d0":"code","abbaa489":"code","a988f1d7":"code","3eb6860b":"code","ac7135b7":"code","f829303e":"code","8af4efc6":"code","b5ab7fa2":"code","bc376d3e":"code","1e2b9248":"code","ca3fb0b7":"code","9140a30f":"code","1dee0352":"code","09cca76a":"code","c6227cca":"code","0c28dd66":"code","6865dfc3":"code","e3ed793f":"code","d549b46c":"code","84be0228":"code","333141d7":"code","bc90f110":"code","2cbc724d":"markdown","e63f055f":"markdown","3989c4cd":"markdown","5963091b":"markdown","80ca8c3b":"markdown","0e8333b4":"markdown","a6064cad":"markdown","4ff8387f":"markdown"},"source":{"19971fc9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a141b74c":"df = pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')","889bd5d0":"arsenal_data = df.loc[df['Club'] == 'Arsenal']","abbaa489":"arsenal_data","a988f1d7":"arsenal_data.columns","3eb6860b":"def extract_value_from(Value):\n    out = Value.replace('\u20ac', '')\n    if 'M' in out:\n        out = float(out.replace('M', ''))*1000000\n    elif 'K' in Value:\n        out = float(out.replace('K', ''))*1000\n    return float(out)","ac7135b7":"arsenal_data['Value'] = arsenal_data['Value'].apply(lambda x: extract_value_from(x))","f829303e":"plt.figure(figsize = (10,10))\nsns.distplot(arsenal_data['Value'], kde = False, bins = 10)","8af4efc6":"print('Squad value: ', sum(arsenal_data['Value']),' \u20ac')","b5ab7fa2":"arsenal_data.rename(columns={'Club Logo':'Club_Logo'}, inplace=True)","bc376d3e":"import matplotlib.pyplot as plt","1e2b9248":"from IPython.display import Image, HTML\n\ndef path_to_image_html(path):\n    return '<img src=\"'+ path + '\" style=max-height:124px;\"\/>'","ca3fb0b7":"HTML(arsenal_data.sort_values('Overall', ascending = False).to_html(escape=False ,\n                                                          formatters=dict(Photo=path_to_image_html,Flag=path_to_image_html,\n                                                                         Club_Logo=path_to_image_html)))","9140a30f":"GK = arsenal_data[arsenal_data['Position'] == 'GK']","1dee0352":"HTML(GK.sort_values('Overall', ascending = False).to_html(escape=False ,\n                                                          formatters=dict(Photo=path_to_image_html,Flag=path_to_image_html,\n                                                                         Club_Logo=path_to_image_html)))","09cca76a":"arsenal_data['Position'].value_counts()","c6227cca":"CB = arsenal_data[(arsenal_data['Position'] == 'CB') | (arsenal_data['Position'] == 'RCB')]\n\nHTML(CB.sort_values('Overall', ascending = False).to_html(escape=False ,\n                                                          formatters=dict(Photo=path_to_image_html,Flag=path_to_image_html,\n                                                                         Club_Logo=path_to_image_html)))","0c28dd66":"RB = arsenal_data[(arsenal_data['Position'] == 'RB') | (arsenal_data['Position'] == 'RWB')]\n\nHTML(RB.sort_values('Overall', ascending = False).to_html(escape=False ,\n                                                          formatters=dict(Photo=path_to_image_html,Flag=path_to_image_html,\n                                                                         Club_Logo=path_to_image_html)))","6865dfc3":"RB = arsenal_data[(arsenal_data['Position'] == 'LB') | (arsenal_data['Position'] == 'LWB')]\n\nHTML(RB.sort_values('Overall', ascending = False).to_html(escape=False ,\n                                                          formatters=dict(Photo=path_to_image_html,Flag=path_to_image_html,\n                                                                         Club_Logo=path_to_image_html)))","e3ed793f":"DM = arsenal_data[(arsenal_data['Position'] == 'CDM') | (arsenal_data['Position'] == 'LDM') | (arsenal_data['Position'] == 'RDM')]\n\nHTML(DM.sort_values('Overall', ascending = False).to_html(escape=False ,\n                                                          formatters=dict(Photo=path_to_image_html,Flag=path_to_image_html,\n                                                                         Club_Logo=path_to_image_html)))","d549b46c":"CM = arsenal_data[(arsenal_data['Position'] == 'CM') | (arsenal_data['Position'] == 'LCM') | (arsenal_data['Position'] == 'RCM')]\n\nHTML(CM.sort_values('Overall', ascending = False).to_html(escape=False ,\n                                                          formatters=dict(Photo=path_to_image_html,Flag=path_to_image_html,\n                                                                         Club_Logo=path_to_image_html)))","84be0228":"AM = arsenal_data[(arsenal_data['Position'] == 'CAM') | (arsenal_data['Position'] == 'LAM') | (arsenal_data['Position'] == 'RAM')]\n\nHTML(AM.sort_values('Overall', ascending = False).to_html(escape=False ,\n                                                          formatters=dict(Photo=path_to_image_html,Flag=path_to_image_html,\n                                                                         Club_Logo=path_to_image_html)))","333141d7":"WF = arsenal_data[(arsenal_data['Position'] == 'LM') | (arsenal_data['Position'] == 'RM')| (arsenal_data['Position'] == 'RW')| (arsenal_data['Position'] == 'LW')]\n\nHTML(WF.sort_values('Overall', ascending = False).to_html(escape=False ,\n                                                          formatters=dict(Photo=path_to_image_html,Flag=path_to_image_html,\n                                                                         Club_Logo=path_to_image_html)))","bc90f110":"CF = arsenal_data[(arsenal_data['Position'] == 'CF') | (arsenal_data['Position'] == 'ST')]\n\nHTML(CF.sort_values('Overall', ascending = False).to_html(escape=False ,\n                                                          formatters=dict(Photo=path_to_image_html,Flag=path_to_image_html,\n                                                                         Club_Logo=path_to_image_html)))","2cbc724d":"# Midfielder","e63f055f":"# Squad Value","3989c4cd":"### Of course, Leno is a new star here.","5963091b":"# Forwards\n*Included LM and RM (I count them as winger)","80ca8c3b":"# Arsenal\n\n![](https:\/\/www.arsenal.com\/sites\/default\/files\/styles\/large_16x9\/public\/images\/emirartes.jpg?itok=RywBtVph)\n\n## In this kernel, we will show the best Arsenal lineup based on FIFA 19 and potential buy","0e8333b4":"# Defender","a6064cad":"A bit worried since they only have 3 LBs (and currently they had Saka and Tierney in 2020)","4ff8387f":"# Goalkeeper"}}