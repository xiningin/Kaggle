{"cell_type":{"234ccab2":"code","5ef8c1f7":"code","bfe33038":"code","edec9b0d":"code","904e076e":"code","bf19043d":"code","52357d8d":"code","292576d0":"code","c1f9c467":"code","9d5cea25":"code","eb0135e3":"code","c1395c39":"code","c98113ef":"code","5e1b2711":"code","91a16357":"code","7032a46f":"code","22374700":"code","fe1ba7d3":"code","a4f33e95":"code","402a0aef":"code","99c4b478":"code","569af4b0":"code","1495b0ad":"code","e4bd73f8":"code","0b13c050":"code","d4a02f02":"code","4bb25070":"code","4934db3b":"code","149e95d2":"code","874a9d42":"code","8cf0a81b":"code","c80db338":"code","2c40c7ec":"code","6783f986":"code","eee4a03b":"code","5b4b974e":"code","72a00f67":"code","f6791e58":"code","765b2faa":"markdown","b75716e4":"markdown","0dc8345e":"markdown","8d464af5":"markdown","9d3a9362":"markdown","d89942b1":"markdown","97f4f776":"markdown","2fc6f9bd":"markdown","0533782d":"markdown","18f14f3d":"markdown","5a5b6b74":"markdown","1ad8ec8e":"markdown","3deeae39":"markdown","5aa8ebd2":"markdown","e024e62a":"markdown"},"source":{"234ccab2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport warnings\nwarnings.filterwarnings('ignore') \nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.\n","5ef8c1f7":"# Read datas\nmedian_house_hold_in_come = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\npercentage_people_below_poverty_level = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\npercent_over_25_completed_highSchool = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\nshare_race_city = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/ShareRaceByCity.csv', encoding=\"windows-1252\")\nkill = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PoliceKillingsUS.csv', encoding=\"windows-1252\")\n\n","bfe33038":"percentage_people_below_poverty_level.head()","edec9b0d":"percentage_people_below_poverty_level.info()","904e076e":"percentage_people_below_poverty_level['Geographic Area'].unique()","bf19043d":"percentage_people_below_poverty_level.poverty_rate.replace(['-'],0.0, inplace=True)\npercentage_people_below_poverty_level.poverty_rate=percentage_people_below_poverty_level.poverty_rate.astype(float)\n#percentage_people_below_poverty_level.info()\narea_list = list(percentage_people_below_poverty_level['Geographic Area'].unique())\narea_poverty_ratio = []\nfor i in area_list:\n    x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']==i]\n    area_poverty_rate = sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_poverty_ratio':area_poverty_ratio})\nnew_index = (data['area_poverty_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['area_poverty_ratio'])\nplt.xticks(rotation= 45)\nplt.xlabel('States')\nplt.ylabel('Poverty Rate')\nplt.title('Poverty Rate Given States')","52357d8d":"kill.name.value_counts()","292576d0":"# Most common 15 Name or Surname of killed people\nseparate = kill.name[kill.name != 'TK TK'].str.split() \na,b = zip(*separate)                    \nname_list = a+b                         \nname_count = Counter(name_list)         \nmost_common_names = name_count.most_common(15)  \nx,y = zip(*most_common_names)\nx,y = list(x),list(y)\n# \nplt.figure(figsize=(15,10))\nax= sns.barplot(x=x, y=y,palette = sns.cubehelix_palette(len(x)))\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name or Surname of killed people')\n\n","c1f9c467":"percent_over_25_completed_highSchool.info()","9d5cea25":"# High school graduation rate of the population that is older than 25 in states\npercent_over_25_completed_highSchool.percent_completed_hs.replace(['-'],0.0,inplace = True)\npercent_over_25_completed_highSchool.percent_completed_hs = percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\narea_list = list(percent_over_25_completed_highSchool['Geographic Area'].unique())\narea_highschool = []\n\nfor i in area_list:\n    x = percent_over_25_completed_highSchool[percent_over_25_completed_highSchool['Geographic Area']==i]\n    area_highschool_rate = sum(x.percent_completed_hs)\/len(x)\n    area_highschool.append(area_highschool_rate)\n#sorting\ndata = pd.DataFrame({'area_list': area_list,'area_highschool_ratio':area_highschool})\nnew_index = (data['area_highschool_ratio'].sort_values(ascending=True)).index.values\nsorted_data2 = data.reindex(new_index)\n#visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['area_highschool_ratio'])\nplt.xticks(rotation=90)\nplt.xlabel('States')\nplt.ylabel('High School Graduate Rate')\nplt.title('Percentage of Given States Population Above 25 that Has Graduated High School')\n","eb0135e3":"share_race_city.head()","c1395c39":"share_race_city.info()","c98113ef":"# Percentage of state's population according to races that are black,white,native american, asian and hispanic\nshare_race_city.replace(['-'],0.0,inplace = True)\nshare_race_city.replace(['(X)'],0.0,inplace = True)\nshare_race_city.loc[:,['share_white', 'share_black','share_native_american', 'share_asian', 'share_hispanic']]=share_race_city.loc[:,['share_white', 'share_black','share_native_american', 'share_asian', 'share_hispanic']].astype(float)\narea_list=list(share_race_city['Geographic area'].unique())\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\nfor i in area_list:\n    x=share_race_city[share_race_city['Geographic area']==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black)\/len(x))\n    share_native_american.append(sum(x.share_native_american)\/len(x))\n    share_asian.append(sum(x.share_asian)\/len(x))\n    share_hispanic.append(sum(x.share_hispanic)\/len(x))\n#visualization\nf, ax=plt.subplots(figsize = (9,15))\nsns.barplot(x=share_white, y=area_list, color='green', alpha=0.5, label='White')\nsns.barplot(x=share_black, y=area_list, color='blue', alpha=0.7, label='Black')\nsns.barplot(x=share_native_american, y=area_list, color='cyan', alpha=0.7, label='Native_american')\nsns.barplot(x=share_asian, y=area_list, color='yellow', alpha=0.7, label='Asian')\nsns.barplot(x=share_hispanic, y=area_list, color='red', alpha=0.7, label='Hispanic')\nax.legend(loc='lower right', frameon=True)\nax.set(xlabel='Percentage of Races', ylabel='States', title='Percentage of States Population According to Races')\n","5e1b2711":"# high school graduation rate vs Poverty rate of each state\nsorted_data['area_poverty_ratio']=sorted_data['area_poverty_ratio']\/max(sorted_data['area_poverty_ratio'])\nsorted_data2['area_highschool_ratio']=sorted_data2['area_highschool_ratio']\/max(sorted_data2['area_highschool_ratio'])\ndata=pd.concat([sorted_data,sorted_data2['area_highschool_ratio']], axis=1)\ndata.sort_values('area_poverty_ratio', inplace=True)\n\n#visualize\nf,ax1=plt.subplots(figsize=(20,10))\nsns.pointplot( x='area_list',y='area_poverty_ratio', data=data, color='lime', alpha=0.8)\nsns.pointplot( x='area_list',y='area_highschool_ratio', data=data, color='red', alpha=0.8)\nplt.text(40,0.6,'area highschool ratio',color=\"red\", fontsize=18,style='italic')\nplt.text(40,0.65,'area poverty ratio',color=\"lime\", fontsize=18,style='italic')\nplt.xlabel('States', fontsize=18,color=\"blue\")\nplt.ylabel('Values', fontsize=18,color=\"blue\")\nplt.title('High school graduation rate vs Poverty rate')\nplt.grid()","91a16357":"#visualize\nf,ax1=plt.subplots(figsize=(20,10))\nsns.pointplot(x='area_poverty_ratio',y='area_highschool_ratio', data=data, color='lime', alpha=0.8)\nplt.xlabel('Area poverty ratio', fontsize=18,color=\"blue\")\nplt.ylabel('Area highschool ratio', fontsize=18,color=\"blue\")\nplt.title('High school graduation rate vs Poverty rate')\nplt.grid()","7032a46f":"data.head()","22374700":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# joint kernel density\n# pearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n# If it is zero, there is no correlation between variables\n# Show the joint distribution using kernel density estimation \n\ng=sns.jointplot(data.area_poverty_ratio, data.area_highschool_ratio, kind=\"kde\",size=7,fill=True)\nplt.savefig('graph.png')\nplt.show()","fe1ba7d3":"\ng=sns.jointplot('area_poverty_ratio', 'area_highschool_ratio', data=data,size=5, ratio=3, color=\"r\")\nplt.savefig('graph.png')\nplt.show()","a4f33e95":"#kill.race.head()\nkill.race.value_counts()","402a0aef":"\n# Race rates according in kill data \nkill.race.dropna(inplace=True)\nlabels=kill.race.value_counts().index\ncolors=['blue','gray','red','green','yellow','brown']\nexplode=[0,0,0,0,0,0]\nsizes=kill.race.value_counts().values\n\n#visual\nplt.figure(figsize=(7,7))\nplt.pie(sizes, explode=explode,labels=labels,colors=colors,autopct='%1.1f%%')\nplt.title('Killed People According to Races',color='blue', fontsize=15)\n","99c4b478":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n\nsns.lmplot('area_poverty_ratio', 'area_highschool_ratio', data=data)\nplt.show()","569af4b0":"plt.figure(figsize = (10,10))\nsns.kdeplot(data.area_poverty_ratio, data.area_highschool_ratio, shade=True, cut=3)\nplt.show()","1495b0ad":"pal = sns.cubehelix_palette(2, rot=-.5, dark=.3)\nsns.violinplot(data=data, palette=pal,inner=\"points\")\nplt.show()","e4bd73f8":"f,ax=plt.subplots(figsize=(5,5))\nsns.heatmap(data.corr(), annot=True,linewidth=.5,linecolor='red',fmt='.1f', ax=ax)\nplt.show()","0b13c050":"sns.boxplot(x=\"gender\",y=\"age\",hue=\"manner_of_death\", data=kill, palette=\"PRGn\")\nplt.show()","d4a02f02":"sns.swarmplot(x=\"gender\",y=\"age\",hue=\"manner_of_death\", data=kill)\nplt.show()","4bb25070":"sns.pairplot(data)\nplt.show()","4934db3b":"sns.countplot(kill.gender)\nplt.show()","149e95d2":"# kill weapon\narmed = kill.armed.value_counts()\n#print(armed)\nplt.figure(figsize=(10,7))\nsns.barplot(x=armed[:7].index,y=armed[:7].values)\nplt.ylabel('Number of Weapon')\nplt.xlabel('Weapon Types')\nplt.title('Kill weapon',color = 'blue',fontsize=15)\n","874a9d42":"#age of killed people\nabove25=['above25' if i>=25 else 'below25' for i in kill.age]\ndf=pd.DataFrame({'age':above25})\nsns.countplot(x=df.age)\nplt.ylabel('Number of Killed People')\nplt.title('Age of killed people',color = 'blue',fontsize=15)\nplt.show()","8cf0a81b":"#Race of killed people\nsns.countplot(data=kill, x='race')\nplt.title('Race of killed people',color = 'blue',fontsize=15)\nplt.show()","c80db338":"#Most dangerous city\ncity = kill.city.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=city[:12].index,y=city[:12].values)\nplt.xticks(rotation=45)\nplt.title('Most dangerous cities',color = 'blue',fontsize=15)","2c40c7ec":"#Most dangerous states\nstates=kill.state.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=states[:12].index,y=states[:12].values)\nplt.title('Most dangerous states', color='red',fontsize=12)\nplt.show()","6783f986":"# Having mental ilness or not for killed people\nsns.countplot(kill.signs_of_mental_illness)\nplt.xlabel('Sign of mental illness')\nplt.ylabel('Number of Mental illness')\nplt.title('Having mental ilness or not for killed people', color='green',fontsize=12)\nplt.show()","eee4a03b":"#Threat types\nsns.countplot(kill.threat_level)\nplt.title('Threat types')\nplt.xlabel('threat level')\nplt.show()","5b4b974e":"#Flee types\nsns.countplot(kill.flee)\nplt.title('Flee Types', color='red', fontsize=12)\nplt.xlabel('Flee type')\n\n","72a00f67":"# Having body cameras or not for police\nsns.countplot(kill.body_camera)\nplt.title('Having body cameras or not for police')\nplt.xlabel('Body camera')\nplt.show()","f6791e58":"# Kill numbers from states in kill data\nstate=kill.state.value_counts()\nsns.barplot(x=state[:10].index,y=state[:10].values)","765b2faa":"## Box plot\n\nWe visualise manner of death with respect to gender and age by using box plot.\nManner of death shows class.\n\nmanner of death(olum sekli) : ates edilerek, ates edilerek ve sok tabancasiyla\n\ngender: cinsiyet\n\nage: yas\n\nPlot the orbital period with horizontal boxes","b75716e4":"## Kde Plot\n\nKernel density estimate","0dc8345e":"## Lm Plot\n\nVisualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code is ilustrated as belows.","8d464af5":"## Bar plot of Most common 15 Name or Surname of killed people","9d3a9362":"## Seaborn Tutorial\nThis codes are based on Seaborn tutorial which is written bt DATAI Team.\n(https:\/\/www.kaggle.com\/kanncaa1\/seaborn-tutorial-for-beginners)\nIn this notebook, we sudied on fatal police shooting in the US.\nWe give some examples using seaborn\n\n1. Bar Plot\n\n a. Poverty Rate Given States\n \n b. Most common 15 Name or Surname of killed people\n \n c. Percentage of Given States Population Above 25 that Has Graduated High School\n \n d. Percentage of States Population According to Races\n\n2. Point Plot\n\n a. High school graduation rate vs Poverty rate of each state\n\n3. Joint Plot\n\n a. High school graduation rate vs Poverty rate of each state \n \n4. Pie Chart\n\n a. Race rates according in kill data \n\n5. Lm Plot\n\n a. High school graduation rate vs Poverty rate of each state \n\n6. Kde Plot\n \n a. High school graduation rate vs Poverty rate of each state \n\n7. Violin Plot\n\n a. High school graduation rate vs Poverty rate of each state \n\n8. Heatmap\n\n a. High school graduation rate vs Poverty rate of each state \n\n9. Box Plot\n\n a. Manner of death with respect to gender and age \n \n10. Swarm Plot\n\n a. Manner of death with respect to gender and age \n\n11. Pair Plot\n\n a. High school graduation rate vs Poverty rate of each state \n\n12. Count Plot\n\n a. Kill gender\n \n b. Kill weapon\n\n","d89942b1":"## Joint Plot","97f4f776":"## Pie Chart\n\nThe pie chart is given for race rates according in kill data. We use matplot library","2fc6f9bd":"## Violin Plot","0533782d":"## Point plot","18f14f3d":"## Heatmap\nWe use heatmap to show correlation between values.\nIt is also known as correlation map.\n\nWe visualize high school graduation rate vs Poverty rate of each state with different style of seaborn code below.","5a5b6b74":"## Pair Plot\n\nIt shows both histogram and scatter plot.","1ad8ec8e":"## Bar plot","3deeae39":"## Count Plot","5aa8ebd2":"## Read data\n\nFirst, we need to read data. To do this, we use pandas library.","e024e62a":"## Swarm Plot\n\nWe use this plot type to classification data."}}