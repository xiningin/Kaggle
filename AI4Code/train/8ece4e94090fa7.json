{"cell_type":{"53a7691a":"code","6bbc7253":"code","2dcb7139":"code","2c8ae0f7":"code","8f31ee85":"code","4d1be048":"code","b8a9316f":"code","ea687f6c":"code","dd5598e6":"code","b6df26d8":"code","4a679576":"code","d7bc6577":"code","d9058f7c":"code","1cf64863":"code","02ced2b8":"code","246713a8":"code","9c51bafd":"code","04a26b61":"code","05986ab2":"code","236ebc57":"code","dfaf0ebd":"code","eee6f0e4":"code","8fbd88e1":"code","eeb66677":"code","b0282b45":"code","c8f88389":"code","6c96062d":"code","65c4d6ed":"code","425f7de6":"code","f74d7b70":"code","d565fd63":"code","8e8253f0":"code","a23af26d":"code","9d84dac6":"code","c14d8531":"code","954d8668":"code","334c10d5":"code","e2a65fae":"code","0f493c21":"code","98f809b2":"code","f9f07c88":"code","e1ee381c":"code","d809de53":"code","88cfdff9":"code","2d327b45":"code","33bfaeff":"code","ca18e047":"code","696bbab8":"code","9f757ba8":"code","734f15fa":"code","97368cf3":"code","17b52022":"code","add99716":"code","59531437":"code","27c030c1":"code","57355c09":"code","0fa8fc11":"code","913e0d1e":"code","a488c72e":"code","f628196a":"code","807b4787":"code","c03d2fe8":"code","04f522c9":"code","00c48742":"code","331e22cd":"code","2f1dc9cf":"code","8c8c66e3":"code","e7e83e07":"code","48109ad4":"code","c9c61f3e":"code","9cd56fac":"code","9d67798a":"code","aac1710e":"code","be34b1aa":"code","39dbf7dd":"code","2e927ad4":"code","519521b2":"code","f39765b9":"code","83c1ce50":"code","517a0daa":"code","5c21d9bb":"code","53126270":"code","acf5148c":"code","fb0314e1":"code","1f65b3fa":"code","0eec0c50":"code","4a6bd23c":"code","84352971":"code","a752824b":"code","e328d640":"code","c1f55529":"code","ae793fb5":"code","f541de52":"code","1c165c73":"code","2300cad5":"code","89f1c28f":"code","37720825":"code","698ad7cc":"code","ecc81006":"code","c8a5f310":"code","a6f830ea":"code","9d001c00":"code","d50b4490":"code","2dd6c25a":"code","d070e3b1":"code","bde177d2":"code","723239b3":"code","b2a479b2":"code","3373a15b":"code","2547352a":"code","e497ef84":"code","8e4d1d73":"code","042000db":"code","9022de61":"code","b576e98f":"code","6b7ee877":"code","2102f74d":"code","df645a2b":"code","74a54430":"code","37f0ff43":"code","4f0c92e9":"code","c17079e3":"code","c7a105af":"code","8abca03f":"code","b88d09c5":"code","81e502f3":"code","d443c355":"code","683e9899":"code","17c8adda":"code","97822225":"code","905d3af3":"code","7102e9a7":"code","63402330":"code","f49c7066":"code","16c3a4d9":"code","88e68f26":"code","a71589ef":"code","05c5331c":"code","064b303a":"code","36d1ecbf":"code","168891d1":"code","87bd6eb0":"code","b4e7e79a":"code","4b40470d":"code","edc689fd":"code","7a1b2215":"code","777bff81":"code","81fff349":"code","ca4bf4a8":"code","40a277cf":"code","285983fb":"code","e13e62d1":"code","3f68d1c3":"code","fb62288e":"code","c84425dd":"markdown","b6fadb5e":"markdown","3162bf7a":"markdown","9dd46943":"markdown","8525b407":"markdown","332cdeb6":"markdown","48a67946":"markdown","22a375c8":"markdown","2643953e":"markdown","fa5e6115":"markdown","809faa76":"markdown","aec238d2":"markdown","2fbf296f":"markdown","7f717b3c":"markdown","3f180f08":"markdown","31d41b72":"markdown","ca4a2dc6":"markdown","314e4144":"markdown","01061269":"markdown","563364be":"markdown","18c08fdd":"markdown","8f7e1751":"markdown","1ab8a5b4":"markdown","3e89cc06":"markdown","aa6efdbd":"markdown","48b77ae2":"markdown","f7c084b3":"markdown","e885ba7b":"markdown","5d85a492":"markdown","e829e13d":"markdown","28592cdf":"markdown","7ff52277":"markdown","7ed9053c":"markdown","55ba9430":"markdown","9297b9be":"markdown","627a8691":"markdown","7179bf3c":"markdown","631771b4":"markdown","b6a6705a":"markdown","07c9ad02":"markdown","5accbb54":"markdown","d3e7f716":"markdown","a03954bf":"markdown","883a1e50":"markdown","61ad0ccf":"markdown","3cb856f9":"markdown","3bac2766":"markdown","981964c5":"markdown","c68aa443":"markdown","f791f136":"markdown","b443e9d9":"markdown","e27fc0bc":"markdown","2815395e":"markdown","1fb7f0ef":"markdown","5ddfe716":"markdown","a855055a":"markdown","b5f1ef95":"markdown","5ff399a0":"markdown","657464e9":"markdown","d52d2752":"markdown","d14feb42":"markdown","eb34c128":"markdown","4fe563e4":"markdown","820e74a8":"markdown","057f8e08":"markdown","ef1ab788":"markdown","7171c7e6":"markdown","95ac981b":"markdown","e95c25e0":"markdown","ed2ca88e":"markdown","e00510bb":"markdown","cb238bd4":"markdown","d6ec0aa3":"markdown","7bd4c186":"markdown","3ca3cb10":"markdown","6a9d0a1b":"markdown","41bd13a7":"markdown","94a05a61":"markdown","539965a1":"markdown","049bc874":"markdown"},"source":{"53a7691a":"#Print out Hello World in Python\n\nprint('Hello World')","6bbc7253":"#Exponential(**)\nprint(2 ** 2)\nprint(2 ** 3)\nprint(4 ** 2)\nprint(4 ** 4)","2dcb7139":"#Remainder\/Modulus(%). Ouputs the remainder of a division\nprint(4 % 2) \nprint(5 % 2)\nprint(8 % 3)\nprint(7 % 4)","2c8ae0f7":"#Division\nprint(4 \/ 2) \nprint(5 \/ 2)\nprint(8 \/ 3)\nprint(7 \/ 4)","8f31ee85":"#Multiplication(*)\nprint(4 * 2) \nprint(5 * 2)\nprint(8 * 3)\nprint(7 * 4)","4d1be048":"#Addition (+)\nprint(4 + 2) \nprint(5 + 2)\nprint(8 + 3)\nprint(7 + 4)","b8a9316f":"#Subtraction (-)\nprint(4 - 2) \nprint(5 - 2)\nprint(8 - 3)\nprint(7 - 4)","ea687f6c":"#string variables uses single or double quotation mark to store string\nfood = 'Rice & Beans'\ncategory = 'Food'\ningredient = 'Maggi and Salt'\n\n#Now we can output our variables\nprint(food)\nprint(category)\nprint(ingredient)","dd5598e6":"#Integers are numbers and they do not require quotqtion when storing them\na = 1\nb = 2\nc = 4\n\n#Now we can output our variables\nprint(a)\nprint(b)\nprint(c)","b6df26d8":"#Floats are point numbers and they do not require quotqtion when storing them\nab_c = 1.7\nb29 = 2.567\ncGrade = 4.453\n\n#Now we can output our variables\nprint(ab_c)\nprint(b29)\nprint(cGrade)","4a679576":"#Boolean essentially stores True or False. They are used to check validity of something\nisMale = True\nisBobrisky = False\n\n#Now we can output our variables\nprint(isMale)\nprint(isBobrisky)","d7bc6577":"print('Make Up Tutorial')","d9058f7c":"print('Make Up \\nTutorial') # \"\\n\" inserted will push \"Tutorial\" into another line","1cf64863":"# without escape(\\) gives error\nprint('Python is a 'Good' programming language')","02ced2b8":"# with escape\nprint('Python is a \\'Good\\'  programming language')","246713a8":"# We can also do it by combining single and double quote\nprint(\"Python is a 'Good'  programming language\")","9c51bafd":"name = 'Demola'\nsex = 'Male'\nfood = 'Amala'\nprint('My Name is ' + name )\nprint(name + ' ' + ' is a ' + sex)\nprint('And my best food is ' + food)","04a26b61":"plan = 'ai saturday meetUp'\n# to get the length of a string. \"len()\" function counts whitespaces too\nprint(len(plan))","05986ab2":"#Converting  string to lowercase\nprint(plan.lower())","236ebc57":"#Convert to uppercase\nprint(plan.upper())","dfaf0ebd":"#we can also check if its all lower or upper case\nprint(plan.islower()) # will return false because we have a capital letter in our string","eee6f0e4":"print(plan.isupper()) #also returns false because not letters in the string is upper case","8fbd88e1":"# We are going to chain two functions here, first(\"upper()\") is to convert it to uppercase and the second (\"isupper\") checks if the string is  Uppercase\nprint(plan.upper().isupper())","eeb66677":"ingredient = 'Curry'","b0282b45":"#Let's get the first letter in the variable above\nprint(ingredient[0])","c8f88389":"print(ingredient[3])","6c96062d":"#let's get the index \"y\" in Curry\nprint(ingredient.index(\"y\"))","65c4d6ed":"print(ingredient.index(\"C\"))","425f7de6":"#using a parameter like \"K\" that is not part of the \"Curry\" string throws error\nprint(ingredient.index(\"K\"))","f74d7b70":"#replace the first letter the variable \"ingredient\"\nprint(ingredient.replace(\"C\", \"K\")) #Replace function takes two parameters. First the original letter and second the new letter to replace it with","d565fd63":"num = 5","8e8253f0":"#let's convert variable num to a string\nprint(str(num))","a23af26d":"print('My favourite number is ' + str(num))","9d84dac6":"#Returns error if we do not convert to string first\nprint('My favourite number is ' + num)","c14d8531":"#getting absolute value of a number\nprint(abs(-5.78))","954d8668":"#Power function\nprint(pow(4, 2)) #takes two parameter. it means 4 raise to the power of 2","334c10d5":"#getting maximum number \nprint(max(2, 5, 3, 4, 1))","e2a65fae":"#getting minimum number \nprint(min(2, 5, 3, 4, 1))","0f493c21":"#round function rounds a number with decimals to whole number\n\nprint(round(5.6745))\n\nprint(round(4.123))","98f809b2":"from math import * #This is how we import a module. The code is simply saying import all codes in math module","f9f07c88":"#floor function outputs a number without the decimal points\nprint(floor(3.456))\n\nprint(floor(4.567))","e1ee381c":"#Ceil function rounds the decimal numbers up\nprint(ceil(3.456))\n\nprint(ceil(4.567))","d809de53":"#sqrt function outputs the square root of a number\nprint(sqrt(25))\n\nprint(sqrt(144))","88cfdff9":"#use the input() function and type in a prompt whenever its executed\n\ninput('What is your name? ') #\"What is your name?\" is the prompt describing what the user to do","2d327b45":"name = input('What is your name? ')\nprint('Hello ' + name + '!')","33bfaeff":"name = input('What is your name?')\nage = input('How old are you?')\nprint('Hello ' + name + '! You are ' + age)","ca18e047":"#first we will create variables\nnum1 = input('Enter a number: ')\nnum2 = input('Enter another number: ')\n\n\n#lastly, we will multiply and output our result. By default, inputs from users comes as a string. So we need to convert it into a number usting float() function\nresult = float(num1) * float(num2)\nprint(result)","696bbab8":"#first we need to create variables to prompt inputs from users\ncolor = input('Enter a color: ')\nplural_noun = input('Enter a Plural Noun: ')\ncelebrity = input('Enter a celebrity name: ')\n\n#Outputs of inputs from users to fill in blank spaces\nprint('Roses are ' + color)\nprint(plural_noun + ' are blue')\nprint('I love ' + celebrity)","9f757ba8":"# let make a list of foods\nfood = ['Rice', 'Beans', 'Yam', 'Potatoes']\n\nprint(food)","734f15fa":"#we can also refer to element with their index and output them\nprint(food[0])\n\nprint(food[3])\n\nprint(food[1])","97368cf3":"# we can also access index from the back of the list using negative sign\nprint(food[-1])\n\nprint(food[-2])","17b52022":"#we can also group-select list\n\nprint(food[2:]) #this will print the last elements of the list. \"2:\" means print element with index 2 and above","add99716":"#This will output element in index \"0\" & \"1\" and exclude \"2\"\nprint(food[0:2])","59531437":"#Let's replace element with the name \"Yam\" with \"Cocoyam\"\nfood[2] = \"Cocoyam\"\n\nprint(food)","27c030c1":"#more replacement. Using list element to replace  another list element\nfood[0] = food[-1]\n\nprint(food)","57355c09":"#Deleting an element in a list\ndel food[-1]\n\nprint(food)","0fa8fc11":"jackpot_num = [23, 45, 24, 55, 76, 88, 90]\nsurname = ['John', 'Jacob', 'Travota', 'James']","913e0d1e":"#let's add the surname list to jackpot_num list\nsurname.extend(jackpot_num)\n\nprint(surname)","a488c72e":"#adding individual element to the end of a list\njackpot_num.append(\"Number\")\n\nprint(jackpot_num)","f628196a":"#insert function adds elemnt to a specified index\njackpot_num.insert(1, 'B-29') \n\nprint(jackpot_num)","807b4787":"#deleting element\njackpot_num.remove(\"Number\")\nprint(jackpot_num)","c03d2fe8":"#More on deleting element. Pop function removes element from the end of a list\njackpot_num.pop()\nprint(jackpot_num)","04f522c9":"#checking index of element\nprint(jackpot_num.index(23)) #get the index of the first element in a list\n\nprint(jackpot_num.index('B-29'))\n","00c48742":"# we can also copy a list\n\njackpot = jackpot_num.copy()\n\nprint(jackpot)","331e22cd":"coordinates = (2, 5, 7)\n\nprint(coordinates)","2f1dc9cf":"#access tuple by index \nprint(coordinates[-1])\n\nprint(coordinates[1])","8c8c66e3":"#trying to change tuple element gives an error (they are immutable)\ncoordinates[1] = 2\n\nprint(coordinates)","e7e83e07":"#now let's write a function that greets us\ndef greeting():\n    print('Hello')\n    print('Good Day')\n    print('Enjoy your day')","48109ad4":"greeting()","c9c61f3e":"def greeting(name):\n    print('Hello ' + name)\n    print('Good Day ' + name)\n    print('Enjoy your day ' + name)\n    \n    \n\n#Now let's call the function with a parameter\ngreeting(\"demola\")","9cd56fac":"def hello(name, sex, age):\n    print('My name is ' + name + ', A ' + sex + ' and i am ' + age +' years old!' )\n\n    \n#call the function with name, sex & age\nhello('Adaobi', 'Female', '21')","9d67798a":"def square(num):\n    return num ** num \n\n#call the function \nsquare(3)\n","aac1710e":"def cube(digit):\n    return digit * digit * digit\n    print('Thanks for the calculation')  #This line of code wil not be execute\n    \n    \n\n#call the function\ncube(2)","be34b1aa":"def cube(digit):\n    print('Thanks for the calculation')\n    return digit * digit * digit\n\n#call the function    \ncube(2)","39dbf7dd":"#Assuming we have rice in the kitchen\n\n#let's create a boolean variable to check our condition\nis_rice_at_home = True\n\n#if statement below\nif is_rice_at_home:\n    print('Yeah!!  There is rice at home')","2e927ad4":"#No rice in the Kitchen\nis_rice_at_home = False\n\n\n#if statement\nif is_rice_at_home:\n    print('Yeah!!  There is rice at home')","519521b2":"#No rice in the Kitchen but we can cook beans instead\nis_rice_at_home = False\n\n\n#if statement\nif is_rice_at_home:\n    print('Yeah!!  There is rice at home')\nelse:\n    print('No rice in the Kitchen, but we can cook Beans!')","f39765b9":"#Another example with multiple condition. \nis_male = True\nis_tall = True\n\n#check multiple condition\nif is_male or is_tall:\n    print('You are a Male OR Tall OR Both')\nelse: \n    print('You are neither a Male nor Tall')\n","83c1ce50":"is_male = False\nis_tall = True\n\n#check multiple condition\nif is_male or is_tall:\n    print('You are a Male OR Tall OR Both')\nelse: \n    print('You are neither a Male nor Tall')","517a0daa":"is_male = False\nis_tall = False\n\n#check multiple condition\nif is_male or is_tall:\n    print('You are a Male OR Tall OR Both')\nelse: \n    print('You are neither a Male nor Tall')\n","5c21d9bb":"is_male = True\nis_tall = True\n\n#check multiple condition\nif is_male and is_tall:\n    print('You are a Male AND You are Tall')\nelse: \n    print('You are either not male or not tall or both')\n","53126270":"is_male = False\nis_tall = True\n\n#check multiple condition\nif is_male and is_tall:\n    print('You are a Male AND You are Tall')\nelse: \n    print('You are either not male or not tall or both')","acf5148c":"is_male = False\nis_tall = True\n\n#check multiple condition\nif is_male and is_tall:\n    print('You are a Male AND You are Tall')\n    \nelif is_male and not is_tall:\n    print('You are a short Male')\n\nelif not is_male and is_tall:\n    print('You are not Male, but you are tall')\n    \nelse: \n    print('You are  not male or tall')","fb0314e1":"is_male = True\nis_tall = False\n\n#check multiple condition\nif is_male and is_tall:\n    print('You are a Male AND You are Tall')\n    \nelif is_male and not is_tall:\n    print('You are a short Male')\n\nelif not is_male and is_tall:\n    print('You are not Male, but you are tall')\n    \nelse: \n    print('You are  not male or tall')","1f65b3fa":"def max_number(num1, num2, num3):\n    if num1 >= num2 and num1 >= num3:\n        return 'The maximum number is: ', num1\n    \n    elif num2 >= num1 and num2 >= num3:\n        return 'The maximum number is: ', num2\n    else: \n        return 'The maximum number is: ', num3","0eec0c50":"#Now let's call the function\nmax_number(5, 6, 10)","4a6bd23c":"max_number(26, 3, 15)","84352971":"max_number(5, 44, 10)","a752824b":"pet_name = input('Type in your pet namr: ')\n\nif pet_name == 'Sisqo':\n    print('My pet\\'s name is Sisqo')\nelif pet_name == 'Skippo':\n    print('My pet\\'s name is Skippo')\nelse:\n    print('Type in your pet name')","e328d640":"pet_name = input('Type in your pet namr: ')\n\nif pet_name == 'Sisqo':\n    print('My pet\\'s name is Sisqo')\nelif pet_name == 'Skippo':\n    print('My pet\\'s name is Skippo')\nelse:\n    print('Type in your pet name')","c1f55529":"pet_name = input('Type in your pet namr: ')\n\nif pet_name == 'Sisqo':\n    print('My pet\\'s name is Sisqo')\nelif pet_name == 'Skippo':\n    print('My pet\\'s name is Skippo')\nelse:\n    print('Type in your pet name')","ae793fb5":"#first we will create a variable and convert it to a number since input by default converts it's input to a string\nnum1 = float(input('Enter first number: '))\n\n#lets also get the operator\noperator = input('Enter Operator: ')\n\nnum2 = float(input('Enter second number: '))\n\n#Now we will write condition statement to figure out the kind of operations users want\nif operator == '+':\n    print(num1 + num2)\n\nelif operator == '-':\n    print(num1 - num2)\n    \nelif operator == '*':\n    print(num1 * num2)\n\nelif operator == '**':\n    print(num1 ** num2)\n    \nelif operator == '\/':\n    print(num1 \/ num2)\n    \nelse: \n    print('Invalid Operator!!')\n","f541de52":"#lets create a dictionary that converts month\nmonth_conversion = {\n    'Jan': 'January',\n    'Feb': 'February',\n    'Mar': 'March',\n    'Apr': 'April',\n    'May': 'May',\n    'Jun': 'June',\n    'Jul': 'July',\n    'Aug': 'August',\n    'Sep': 'September',\n    'Oct': 'October',\n    'Nov': 'November',\n    'Dec': 'December'\n}\n\nprint(month_conversion)","1c165c73":"#Accessing dictionary using square bracket\nprint(month_conversion['Jan'])","2300cad5":"print(month_conversion['Mar'])","89f1c28f":"#Accessing dictionary using get() function\nprint(month_conversion.get('Nov'))","37720825":"print(month_conversion.get('Mow'))","698ad7cc":"# we can also print out a default value when the specified key is not valid \n\nprint(month_conversion.get('Mow', 'Not a valid key, Please enter a valid key'))","ecc81006":"alpha = {1:'a', 2:'b', 3:'c', 4:'d'}\nprint(alpha)","c8a5f310":"a = 1\n\nwhile a < 10:\n    print(a)\n    a = a + 1  #This line of code tells python to keep adding \"1\" to \"a\" value until the condition is met","a6f830ea":"# Better way of writing the  while loop\nb = 1\nwhile b < 6: #as long as this condition is true, it will keep looping over the code below\n    print(b)\n    b +=1   #this is the same thing as \"a = a + 1\"","9d001c00":"#Guessing game code\n\nsecret_word = 'Lion'\nguess =''\nguess_count = 0\nguess_limit = 3\nout_of_guess = False\n\nwhile guess != secret_word and not out_of_guess:\n    if guess_count <  guess_limit:\n        guess = input('Guess a word : ')\n        guess_count += 1\n    \n    else: \n        out_of_guess = True\n\n        \nif out_of_guess:\n    print('Out of Guess: YOU LOSE!')\n\nelse:\n    print('You win')\n    ","d50b4490":"#Let's run the game again but with right word\n\nsecret_word = 'Lion'\nguess =''\nguess_count = 0\nguess_limit = 3\nout_of_guess = False\n\nwhile guess != secret_word and not out_of_guess:\n    if guess_count <  guess_limit:\n        guess = input('Guess a word : ')\n        guess_count += 1\n    \n    else: \n        out_of_guess = True\n\n        \nif out_of_guess:\n    print('Out of Guess: YOU LOSE!')\n\nelse:\n    print('You win')","2dd6c25a":"#Example to print out all the letters in a string\n\nfor letters in 'Rice & Beans':\n    print(letters)\n","d070e3b1":"#Example: Looping through an array\n\nname = ['David', 'James', 'Jim', 'Janet', 'Skibo']\n\nfor index in name:\n    print(index)","bde177d2":"#Example: using a dictionary\nmonth_in_a_year = {\n    'jan': 'january',\n    'feb': 'february',\n    'mar': 'march',\n    'apr': 'april',\n    'may': 'may'\n}\n\nfor month in month_in_a_year:\n    print(month)","723239b3":"# to get the values in a dictionary. We will use a values() function\nmonth_in_a_year = {\n    'jan': 'january',\n    'feb': 'february',\n    'mar': 'march',\n    'apr': 'april',\n    'may': 'may'\n}\n\nfor month in month_in_a_year.values():\n    print(month)","b2a479b2":"#Example: Iterating over ranges of number\n\nfor index in range(5):\n    print(index)","3373a15b":"#More on range\nfor index in range(4, 9):\n    print(index)","2547352a":"#Examples: More on loops\n\nfor index in range(5):\n    if index == 0:\n        print('First Index')\n    elif index == 2:\n        print('Third Index')\n    else:\n        print(index)","e497ef84":"def expo(base_num, power_num):\n    result = 1\n    for index in range(power_num):\n        result = result * base_num\n    return result\n\n\n#call the function\nexpo(4, 3)","8e4d1d73":"#Example: List\nnest =[\n    [1, 2, 3], \n    [4, 5, 6], \n    [7, 8, 9], \n    [0]\n]\n\nprint(nest)","042000db":"#lets get 1\nprint(nest[0][0])","9022de61":"#lets get 4\nprint(nest[1][0])","b576e98f":"#lets get 9\nprint(nest[2][2])","6b7ee877":"#get the nest variable row\nfor row in nest:\n    print(row)","2102f74d":"#Now let us print the column in each of the printed rows above\nfor row in nest:\n    print(row)\n    for col in row:\n        print(col)","df645a2b":"def translator(phrase):\n    translation = ''\n    for letter in phrase:\n        if letter.lower() in 'aeiou':\n            if letter.isupper():\n                translation = translation + 'G'\n            else:\n                translation = translation + 'g'\n        else:\n            translation = translation + letter\n    return translation","74a54430":"#Now lets call the function\nprint(translator(input('Enter a phrase: ')))","37f0ff43":"#this is a comment\n#print('Hello')","4f0c92e9":"\"\"\"This is also a multiline \ncomment using a double quote thrice\n\"\"\"","c17079e3":"'''\nthis a multi-line\ncomment with \nsingle quote\n'''","c7a105af":"# Example: convert a user input into a number\n\nnumber = int(input('Enter a number: '))\nprint(number)","8abca03f":"#Assuming we break the rule and didn't enter a number\nnumber = int(input('Enter a number: '))\nprint(number)\n","b88d09c5":"#Now lets modify the program above\ntry:\n    number = int(input('Enter a number: '))\n    print(number)\nexcept:\n    print('Invalid Input!!')","81e502f3":"#We can also make our code better by catch or excepting our error\ntry:\n    value = 10\/0\n    number = int(input('Enter a number: '))\n    print(number)\nexcept ZeroDivisionError as err:\n    print(err)\nexcept ValueError:\n    print('Invalid Input')","d443c355":"#This open() fuction takes the path to the file we want to open\n\nfile = open('..\/input\/ariba.txt', 'r+') ","683e9899":"# We can check if the file is readable\nfile.readable()","17c8adda":"#output the content of the file\nfile.read()","97822225":"#Read the content of the file one by one using readline() function\nfile.readline()","905d3af3":"#Reading all the content in a loop at once using readlines()\nfile.readlines()","7102e9a7":"#We can close the file\nfile.close()","63402330":"file = open('..\/input\/ariba.txt', 'a') #change the mode to append 'a'","f49c7066":"#adding to the file\nfile.write('Materials Management')","16c3a4d9":"file.close()","88e68f26":"new_file = open('..\/new.html', 'w')\nnew_file.write('<div> Hello Mr HTML <\/div> \\n <p> It is a good day to Code<\/p>')\nnew_file.close()","a71589ef":"print((open('new.html', 'r+')).readlines())","05c5331c":"from random import randint\n\nrand_num = randint(0, 10) #generates a random number within the range of 0 and 10\nprint(rand_num)","064b303a":"print(randint(25, 45))","36d1ecbf":"#First let's model  a student class\nclass Student:\n    def __init__(self, name, sex, department, gpa, is_on_probation):\n        self.name = name\n        self.sex = sex\n        self.department = department\n        self.gpa = gpa\n        self.is_on_probation = is_on_probation\n        ","168891d1":"#Create an Object for a student (John and Zainab)\nstudent_1 = Student('John', 'Male', 'Civil Engineering', 3.95, False )\n    \nstudent_2 = Student('Zainab', 'Female', 'Medicine', 4.59, False)","87bd6eb0":"print(student_1.department)\n\nprint(student_1.name)\n\n#accessing student 2\nprint(student_2.department)\n\nprint(student_2.sex)","b4e7e79a":"#Create a variable for the questions\nquestions = [\n    'What colour are apples? \\n (a) Red\/Green \\n (b) Purple \\n (c) Orange \\n\\n',\n    'What colour are bananas? \\n (a) Teal \\n (b) Magenta \\n (c) Yellow \\n\\n',\n    'What colour are strawberries? \\n (a) Yellow \\n (b) Red \\n (c) Blue \\n\\n'\n]\n\n#To keep tract of the question, answer and scores, we need to use a class\n\nclass Quiz:\n    def __init__(self, prompt, answer):\n        self.prompt = prompt\n        self.answer = answer\n","4b40470d":"#Now we can create our quiz questions for users using the quiz class\n\nquiz_question = [\n    Quiz(questions[0], 'a'),\n    Quiz(questions[1], 'c'),\n    Quiz(questions[2], 'b')\n]","edc689fd":"#now we can create a function to ask the questions and also check if the answer is correct\ndef run_quiz(quiz_question):\n    score = 0\n    for quiz in quiz_question:\n        answer = input(quiz.prompt)\n        if answer == quiz.answer :\n            score +=1\n    print('You got ' + str(score) + '\/' + str(len(quiz_question)) + ' correct')","7a1b2215":"#now let's run the quiz by calling the function\nrun_quiz(quiz_question)","777bff81":"# a function to check if student is on dean list if the gpa is greater than 4.0 \nclass Student:\n    def __init__(self, name, sex, department, gpa, is_on_probation):\n        self.name = name\n        self.sex = sex\n        self.department = department\n        self.gpa = gpa\n        self.is_on_probation = is_on_probation\n        \n    def on_dean_list(self):\n        if self.gpa >= 4.0:\n            print('Student is ON Dean\\'s list')\n        else:\n            print('Student is NOT on Dean\\'s list')\n        ","81fff349":"student_3 = Student('Racheal', 'Female', 'Business Administration', 3.45, False)\n\nstudent_4 = Student('Micheal', 'Male', 'Architecture', 4.89, False)","ca4bf4a8":"#test if student is on dean's list\nprint(student_3.on_dean_list())","40a277cf":"print(student_4.on_dean_list())","285983fb":"class Lecturer(Student): \n    def __init__(self, faculty, position, sex, name):\n        self.faculty = faculty\n        self.poeistion = position\n        Student.sex = sex\n        Student.name = name\n        ","e13e62d1":"#Now let's define lecturers\n\nlecturer_1 = Lecturer('Engineering', 'Professor',  'Male', 'John Traversy')","3f68d1c3":"print(lecturer_1.name)","fb62288e":"print(lecturer_1.sex)","c84425dd":"We can create a new line inside a string using \" \\n \"","b6fadb5e":"The code above will execute the print statement because an if statement checks if the condition stated is true.\n\nAssuming there is no Rice in the kitchen and and we change our boolean variable to be False","3162bf7a":"Using an invalid key a dictionay will return 'None'","9dd46943":"lets make our condition more dynamic by giving the program what to execute if the condition is not met. We can achieve  this using the **if else statement**\n\n#### IF ELSE statement ","8525b407":"#### IF statement \nIn IF statement we check if a condition is true, if it is, we do something and if it's not true we will skip it or do another thing.\n\nNow let's code if statement","332cdeb6":"We can also use comparison operator on strings\n","48a67946":"**def __init__(self)** statement is used in a class to map out properties and methods a class should have. Its essentially defines what a student is.\n\n**self** is a class instance and it refers to the Object created at a particular instance.\n\nRemember that a class is like a plan\/blueprint for creating an object. So we can now create a Student Profile using our Class Blueprint above","22a375c8":"## Iteration and Looping in Python\nLooping in python allows us to loop through a block of code repeatedly.\n\n###### While Loops\n","2643953e":"The code will still execute if we change one of the condition to false. This is becuase the stated condition is either one or both condition is true","fa5e6115":"Getting Index of a string\n\nPython counts from a Zero(0) upward as suppose from a One(1) upward","809faa76":"##### Variables and Data Types in Python\n**Variables** in python are like containers in the kitchen for storing maggi, salt, palm oil e.t.c. They are used for storing data values in computer memory. Storing data in variables allows flexibility in our program. Going back to our kitchen example, we can easily replace the content of a Container storing maggi with salt or crayfish. Variable in programming gives this flexibilty of replacement too.\n\nRules in Naming Variables\n* It **can** be only one word e.g a, b, z e.t.c\n* It **can't** begin with a number e.g 123guy, 2morow\n* It **can** use only letters, numbers(inbetweeen or at the end) and underscore character e.g rice, be3n, _tomorrow e.t.c\n* No space is allowed inbetween variable names e.g rice and beans, ground nut\n**Generally, a good variable name describe the data type it contains.**\n\n**Data Types** are like the maggi, salt, palm oil e.t.c stored inside the container.\n\nTypes of Data Types\n* String Data Type: are texts & statement\n* Integers Data Type: are whole numbers\n* Float Data Type: are point numbers\n* Boolean Data Type: represent True or False\n\nWith this brief intro, we can code :)","aec238d2":"## Classes and Object  in Python\nIn construction, an architect produces a **Plan or Blueprint** that civil engineers or builders follows in implemeenting a structural buildings.\n\nIn programming, classes are like blueprint\/plan to produce Object(like buildings). Classes and Object makes our program powerful and dynamic.\n\nClasses and Object are used to represent real-world datas.\n\nVariables in Object are called Properties and Functions in python are called Methods.\n\nAssuming we want to write a program representing a School in python, we can use Class and Object to implement all the sections in a school.\n\n","2fbf296f":"We can also get the index of the letters directly using python in-built \"index()\" function ","7f717b3c":"Assuming we want to put a quotation mark in a string, we need to escape it with a backslash **\"\\\"**. This tells python to execute the string as a whole.","3f180f08":"Another function example with more parameters","31d41b72":"Writing a New File","ca4a2dc6":"Dictionary also takes integers as key ","314e4144":"The else statement will execute if one or both the condition is False","01061269":"##### Functions with Parameters\nParameters are piece of infos we give to our function to execute.\n\nlet's modify our function above","563364be":"How about we modify the above program alittle bit","18c08fdd":"But if we change both condition to False, then it will not execute the IF statement but execute the ELSE statement instead ","8f7e1751":"**Working with Python in-built function for Numbers(Integers & Float)**","1ab8a5b4":"## Modules in Python\nModules are collection of codes we can input into our program to make it more functional. We can also create a module ourself and use in other program. To read more and access other python modules check out [Modules](https:\/\/docs.python.org\/3\/py-modindex.html)\n\nNow let's work with a python module called randint that generates random numbers","3e89cc06":"**Modules** are collection of precompiled functions and variables that we can use in our program. They are like a Cabinet for storing food stuffs and other ingredient and we can use them whenever we want to cook.\n\nInother to get access to this more inbuilt number based functions, we need to import the **Math** module","aa6efdbd":"###### Math Operators in Python\nPython follows the popular **BODMAS** rule. Operators include:\n* Exponential (**)\n* Remainder\/Modulus (%)\n* Division (\/)\n* Multiplication (*)\n* Addition (+)\n* Subtraction (-)\n\nMath operation example in python\n","48b77ae2":"Chaining function in string\n\nIt involves combination of functions","f7c084b3":"###### For Loop\nThis is probably the most common type of loop in any programming language. It can be use to iterate over any elements of an array, dictionary e.t.c\n\nFor loop takes in a variable and loop over a collection","e885ba7b":"Common number related functions","5d85a492":"Now we can two more student and test if they're on dean's list or not\n","e829e13d":"## Python Basics\n\n##### Expression and Math Operators in Python\nPython Output is done using the **print()** function. Now lets write our first program.","28592cdf":"## Functions in Python\nFunction is a collection of codes that perform a specific task. Generally, function helps us to structure and breakdown to our code. We are already familiar with print(), input(), str() functions used above, we can also write our own function.\n\n","7ff52277":"For the print statement to run above, it has to come before the return statement","7ed9053c":"**Working with Python in-built function for string**","55ba9430":"## Nesting in Python\nNesting is simply embedding a collection of element inside another collection","9297b9be":"**Concatinating String**","627a8691":"##### Functions with Return Statement\nReturn statement are used to get information from a function.\n\nNow let's write a function that returns the square of a number","7179bf3c":"## Conditions in Python\nConditions in python are like checks carried out before executing a code. For example, we need to check the kitchen and confirm if rice is available, before we can cook rice or opt for beans instead.","631771b4":"# Python \nAccording to [StackOverflow](https:\/\/insights.stackoverflow.com\/survey\/2018\/) survey, Python is considered as one of the fastest growing programming language. Python is an [Open Source](https:\/\/en.wikipedia.org\/wiki\/Open-source_software) programming language and works across all platform. Get [Python](http:\/\/python.org\/downloads\/) if youve'nt installed it yet.\n\nThis notebook gives a refresh for experience programmer and an intro to **Python Programing Language** for newbies. \n\nWithout much stories, lets dive straight in","b6a6705a":"## Dictionary\nDictionary is a collection of many value like a **List** but with different kind of indexes. Dictionary allows a **key-value** pair. It works like a normal dictionary which has a word(key) and a definition(value).\n\nWe define dictionary using angle bracket \"{}\"\n\nIn a dictionary, the value on the left is KEY, the value on the right is the VALUE and colon(:) is used to assign a VALUE to a KEY. We seperate multiple values in dictionary using comma(,). The KEY in a dictionary must be unique","07c9ad02":"A code inside a function needs to be indented for python to consider it as codes inside the function.\n\nfor the function above to execute, we need to call the function ","5accbb54":"Fortunately, python allows multiple condition in programs using \"OR\" & \"AND\"","d3e7f716":"## Comment in Python\nComments are vital parts of a code. It help us remember our code and also help other developer reviewing our code understand what that part of code is meant to do\n\nComment in Python is either number sign (#this is a comment) for a line or tripple single or double quote (\"\"\" this is a comment\"\"\") for multi-line comment ","a03954bf":"Other functions","883a1e50":"The code above will not give any output becuasethe if condition is not met.","61ad0ccf":"###### Getting Input from a User\nPython provides a function that allows us to get input from a user, store it as a variable and perform other functions with the input. Input function makes our program interactive ","3cb856f9":"Now we can access each infos of a student","3bac2766":"Any code inputed after the **return** statement in a function will not run.\n\nlet's see an example","981964c5":"###### Project: Building a Guesing Game\nThis game involves us specifying a secret word and the user interacts with the program by guessing the secret word. The user has  a limit of 3 times, if the user guesses more than 3 times then they have lost the game","c68aa443":"The condition above checks if either one or both of the condition above is true before it execute.","f791f136":"###### Project: Multiple Choice Quiz\nThis game allows user to answer quizzes, keep track of the scores and output the final score.","b443e9d9":"### Inheritance in Python Class\nInheritance in python involves a Class  inheriting methods(function) and properties(variables) from another Class.\n\nUsing Student Class above, we can create another class for Lecturers that inherit some of the properties of the Student Class.\n\nThis is done by passing the class we want to inherit from as a parameter. So we will inherit the property of Name and Sex from the Student Class. ","e27fc0bc":"The code above accepts 3 parameters num1, num2 & num3.\n\nThe first if statement checks if **num1** is greater than or equal to either **num2** and **num3**. If the condition is true, then it will return **num1** as the maximum number\n\nThe second elif statement checks if **num2** is greater than or equal to either **num1** and **num3**. If the condition is true, then it will return **num2** as the maximum number\n\nThe third else statement returns **num3** if both conditions above are not met","2815395e":"The code throws an error becuase  the user entered letters as suppose to a number which will break our program. Inother to prevent breaking our program python provides a **TRY EXCEPT Block** for handling such cases ","1fb7f0ef":"###### Project: Mad Libs Game\nMad Libs is a game where one player prompts another player input a list of words to fill in a blank space. Learn more about [Mad Libs Game](https:\/\/en.wikipedia.org\/wiki\/Mad_Libs)","5ddfe716":"We can make our program more dynamic with multiple if conditions using the **IF ELIF & ELSE statement** \n\n#### IF ELIF ELSE statement ","a855055a":"## Exception Handling in Python\nPython let us handle error that may inder our program from running","b5f1ef95":"###### Project: Building a Better Calculator","5ff399a0":"###### Working with strings\nWe can concatenate(add) strings and also use built in python function on string variables.\n\nExamples","657464e9":"Just like strings and numbers, python also provides in-built functions to work with list","d52d2752":"Python also  allows us to write new file and also append to an existing file\n\nAppend","d14feb42":"Python provides alot of built in functions to work with string. Check them out on [Python Inbuilt Function](https:\/\/docs.python.org\/3\/library\/functions.html)","eb34c128":"We can also modify a list element","4fe563e4":"### Comparison using Operators in Conditions\nOperators in python are:\n\n* '=='   **Equal to**\n* '!='   **Not equal to**\n* '<'    **Less than**\n* '>'    **Greater than**\n* '<='   **Less than or equal to**\n* '>='   **Greater than or equal to**\n\nTo illustrate this operators better, we will create a function that accepts user input and tells us the maximum number ","820e74a8":"## Reading External File in Python\nPython provides functins for reading, closing and editing  files.\n\nIt is a good practice to close the file after opening or working on it.","057f8e08":"Now let's create a simple program to ask for user's name and and also say Hello","ef1ab788":"###### Project: Basic Calculator\n\nThe calculator gets two number from user, multiply and outputs the result","7171c7e6":"Assuming we want both of our condition to be TRUE before the code execute. We can do this using the \"AND\" operator","95ac981b":"###### Project: Build A Translator\nThe translator simply transform a vowel in any given string to a letter 'g'","e95c25e0":"**PS:** we need to indent our code properly","ed2ca88e":"Converting numbers to string help us concantenate strings with numbers","e00510bb":"###### Nested For loop\nPython permits nesting of loop inside another loop.\n\nUsing the nest variable above","cb238bd4":"Extend Function adds a list to another list","d6ec0aa3":"We can access dictionary values in different ways via it's  key","7bd4c186":"## Installing Third-Party Modules and Library in Python\nPython has a huge community of developers constantly working on libraries and modules. we can simply google what we are trying to do and there's a  possibility that someone have developed a module or library for that already\n\n###### Installing Modules & Libraries in Python \nPython uses a Package manager known as **PIP** which helps us install, manage, update and delete modules & libraries. To install a module\/library:\n\n1. Click the START button in your computer \n2. Type in \"CMD\" in the search bar\n3. Click the cmd program\n4. Type in the library\/module you want to install \nAssuming we want to install  a module named \"Python-docx\".\n\nJust type in **\"pip install python-docx\"**\n\nTo delete **pip uninstall python-docx**\n\nMost third party modules installed on python are stored in a folder name **Site-Packages**.\n\n\n","3ca3cb10":"Python has in-built function to change variable data types","6a9d0a1b":"**Exponent Function using Loop**","41bd13a7":"### List\nA list  is a value that contains multiple value in an ordered an ordered sequence. List uses square brackets \"[ ]\". List accepts all data types","94a05a61":"### Tuples \nTuples are type of data structure similar to a list. Tuples are created using bracket \"()\". \n\nTuples are immutable(cannot be changed or modify)","539965a1":"Assuming we want to get individual number in a nested list. We can access it by [row][column]\n\n[row] is the horzontal list index\n\n[column] is the vertical lisyt index","049bc874":"#### Object Function\nObject Function are also known as method, it's basically including a function in our class.\n\nLet's modify Student class created earlier and have a function embed in it"}}