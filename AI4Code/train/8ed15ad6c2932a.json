{"cell_type":{"ce0b8a3b":"code","4e2c2153":"code","f9af803c":"code","fda3d4be":"code","c1866c6d":"code","e02a2d11":"code","ca2194d8":"code","c68ea604":"code","f14dc0cb":"code","21da6e96":"code","f4156da6":"code","0eff933a":"code","ec021a90":"code","7df402cb":"code","c3b1553e":"code","76a3158b":"code","41cf0e80":"code","dd1f06dc":"code","08fa9c2b":"code","b05cbe74":"code","a9f01b7e":"code","aa12dfa0":"code","600a6d6b":"markdown","c859f16e":"markdown"},"source":{"ce0b8a3b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4e2c2153":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pylab as plt\n%matplotlib inline\nimport plotly.express as px\nimport plotly.offline as py\nimport plotly.graph_objs as go\npy.init_notebook_mode()\nfrom fbprophet import Prophet","f9af803c":"data = pd.read_csv(\"..\/input\/covid19-global-forecasting-week-2\/train.csv\")\ndata_1=data\ndata","fda3d4be":"data.info()","c1866c6d":"data.shape","e02a2d11":"data.columns","ca2194d8":"top_cases=data.groupby('Country_Region')['ConfirmedCases'].max().sort_values(ascending=False).to_frame()\ntop_cases=top_cases\ntop_cases.style.background_gradient(cmap='Reds')","c68ea604":"data=data.groupby([\"Date\"])['ConfirmedCases'].sum().to_frame()\ndata=data.reset_index()","f14dc0cb":"fix=px.bar(data,x=\"Date\",y='ConfirmedCases',color=\"ConfirmedCases\")\nfix.show()","21da6e96":"fig=py.iplot([go.Scatter(\n    x=data['Date'],\n    y=data['ConfirmedCases'])])           ","f4156da6":"data.columns=['ds','y']\nm = Prophet(interval_width=0.95)\nm.fit(data)\nfuture = m.make_future_dataframe(periods=28)\nforecast = m.predict(future)\nforecast[['ds','yhat','yhat_lower','yhat_upper']].tail()","0eff933a":"d=m.plot(forecast)\n","ec021a90":"d1=m.plot_components(forecast)","7df402cb":"forecast\ndat=np.array(forecast[\"yhat\"])\nlen(dat)","c3b1553e":"data_1=data_1.groupby([\"Date\"])['Fatalities'].sum().to_frame()\ndata_1=data_1.reset_index()\ndata_1","76a3158b":"fix=px.bar(data_1,x=\"Date\",y='Fatalities',color='Fatalities')\nfix.show()","41cf0e80":"data_1.columns=['ds','y']\nm = Prophet(interval_width=0.95)\nm.fit(data_1)\nfuture = m.make_future_dataframe(periods=28)\nforecast = m.predict(future)\nforecast[['ds','yhat','yhat_lower','yhat_upper']].tail()","dd1f06dc":"d=m.plot(forecast)","08fa9c2b":"d1=m.plot_components(forecast)","b05cbe74":"dat_1=np.array(forecast[\"yhat\"])\nlen(dat_1)   \nds=np.array(forecast['ds'])\nlen(ds)","a9f01b7e":"data=pd.DataFrame({'ConfirmedCases':dat,'Fatalities':dat_1})\ndata.index.name='ForecastId'\ndata=data.reset_index()\ndata","aa12dfa0":"data.to_csv('submission.csv',index=False )","600a6d6b":"TIMESERIES_MODEL","c859f16e":" data visualization"}}