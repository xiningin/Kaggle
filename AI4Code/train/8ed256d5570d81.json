{"cell_type":{"f452ef3e":"code","d9ce665f":"code","e4c7d178":"code","92619ca7":"code","6237a0dc":"code","61f4cc39":"markdown","c281d3ed":"markdown","c5d5e09a":"markdown","7afa567e":"markdown","ab459a34":"markdown","948ea9a7":"markdown"},"source":{"f452ef3e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d9ce665f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom IPython.display import display\ndt= pd.read_csv('..\/input\/freeFormResponses.csv')[0:10].fillna(0)\ndisplay(dt)\n","e4c7d178":"import nltk\nimport itertools as it\nfrom operator import itemgetter\n#nltk.download('stopwords')\nfrom nltk.corpus import stopwords\nstop_words= (stopwords.words('english'))\nl=['','-','None','I','Use','No','Dont','\"Dont','\"I','Software','Tools','Nothing','+','Student','Custom','Not']\nstop_words.extend(l)\n#print(stop_words)\n#print(len(stop_words))\ndt= pd.read_csv('..\/input\/freeFormResponses.csv')[1:].fillna(0)\nX= dt.iloc[:,1:2].values\nListData=[]\nfor each in X:\n   # print(each)\n    if str(each).find(',') >0 :\n        repStr=str(each).replace('[','').replace(']','').replace(\"'\",'').split(\",\")\n    elif str(each).find('\/') > 0 :\n        repStr=str(each).replace('[','').replace(']','').replace(\"'\",'').split(\"\/\")\n        \n    else:\n        repStr= str(each).replace('[','').replace(']','').replace(\"'\",'').split(' ')\n    #print(type(str(each)),repStr[0])\n    for each in repStr:\n        #print(each)\n        if each != '0':\n            #print(each)\n            if each not in stop_words: \n                ListData.append(each.lower().title().strip())\n#print(ListData)\nDataStorage=dict()\nDataList=[]\nfor each in ListData:\n    if each not in DataStorage.keys():\n        DataStorage[each]=(ListData.count(each))\nDataList = sorted(DataStorage.items(),key=itemgetter(1),reverse=True)\n#print(DataList)\ncleanedDataList=[]\nindexList=[]\nfor each in DataList:\n    if each[0] not in stop_words:\n        cleanedDataList.append(each[1])\n        indexList.append(each[0])\n#print(cleanedDataList)  \n\ncleanedDataFrame=pd.DataFrame(cleanedDataList[0:10],index= indexList[0:10],columns=['Data_Analysis_tool_used'])\n#print(indexList)\ndisplay(cleanedDataFrame)\nplt.figure(figsize=(16,8))\nsns.barplot(x=indexList[0:10],y=cleanedDataList[0:10],palette='rocket')\nplt.ylabel('Total_no_Students_used')\nplt.title('Top 10 Students usage of Analytics Tool Usage ')\nplt.show()\nplt.figure(figsize=(16,8))\nplt.pie(cleanedDataList[0:10],labels=indexList[0:10],explode=(0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05),shadow=True,autopct='%.2f')\nplt.show()\n","92619ca7":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom IPython.display import display\ndt= pd.read_csv('..\/input\/multipleChoiceResponses.csv').fillna(0)\n#display(dt)\n#print(dt.columns[3])\nfinalList1=[]\nfinalList2=[]\nAge=pd.Series(dt.iloc[1:,3].values)\n#Age=dt['What is your age (# years)?']\nProgramTaken = pd.Series(dt.iloc[1:,84].values)\n#ProgramTaken = dt['What specific programming language do you use most often? - Selected Choice']\nAgeList=[]\nProgramList=[]\nfor each in Age:\n    AgeList.append(each)\nSetAgeList= set(AgeList)\nprint(SetAgeList)\nfor each in ProgramTaken:\n    ProgramList.append(each)\nsetProgramList = set(ProgramList)\nprint(set(ProgramList))\n#print(ProgramList,AgeList)\nAgeWithProgramZipped = list(zip(AgeList,ProgramList))\n#print(AgeWithProgramZipped)\nfor each in SetAgeList:\n    strNew=''\n    for elem in AgeWithProgramZipped:\n        if each == elem[0]:\n            #print(elem[0],elem[1])\n            if strNew =='':\n                strNew= str(elem)\n            else:\n                strNew = strNew + '::' + str(elem)\n    finalList1.append(strNew)\n#print(finalList1) \ndictProgram=dict()\nindexFinal=[]\nk=0\nfrom operator import itemgetter\npaletteColors= ['Accent','Blues','BuGn', 'Dark2', 'gist_heat','inferno','mako','nipy_spectral','ocean','pink','vlag', 'winter']\nmatColors=['yellowgreen', 'gold', 'lightskyblue', 'lightcoral','aliceblue','chartreuse','chocolate','darkgrey','violet','darkorange','crimson','darkgoldenrod']\nfor each in finalList1:\n    listk=[]\n    #print(each)\n    listTemp= each.split('::')\n    for each in listTemp:\n        listk.append(each.split(\",\")[1].replace(\"'\",'').replace(')','').replace(\"'\",'').strip())\n    #print(\"listk:\",listk) \n    temp=0\n    for each in setProgramList:\n        dictProgram[each]=listk.count(each)\n    #print(sorted(dictProgram.items(),key=itemgetter(1),reverse=True)[0:12])\n    kList = sorted(dictProgram.items(),key=itemgetter(1),reverse=True)[0:12]\n    index=[]\n    nameOfLang=[]\n    for each in kList:\n        #print(each)\n        nameOfLang.append(each[0])\n        index.append(each[1])\n    plt.figure(figsize=(18,6))\n    sns.barplot(x=nameOfLang,y= index,palette=paletteColors[k])\n    plt.xlabel('For ' + list(SetAgeList)[k] +'years')\n    plt.ylabel('Frequency of Language Used')\n    plt.title('Language Frequency in respective ages')\n    k+=1\n    plt.show()\n    plt.figure(figsize=(18,6))\n    plt.pie(index,labels=nameOfLang,explode=(0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05),shadow=True,autopct='%.2f')\n    plt.show()\n    indexFinal.append(index)\ndataFrameNet = pd.DataFrame(indexFinal,columns = nameOfLang,index=list(SetAgeList))         \ndisplay(dataFrameNet)     ","6237a0dc":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom IPython.display import display\ndt= pd.read_csv('..\/input\/multipleChoiceResponses.csv').fillna(0)\n#display(dt)\n#print(dt.columns[3])\nfinalList1=[]\nfinalList2=[]\nProfession = pd.Series(dt.iloc[1:,7].values)\n#Profession=dt['Select the title most similar to your current role (or most recent title if retired): - Selected Choice']\nProgramTaken =pd.Series(dt.iloc[1:,84].values)\n#ProgramTaken = dt['What specific programming language do you use most often? - Selected Choice']\nProfessionList=[]\nProgramList=[]\nfor each in Profession:\n    ProfessionList.append(str(each))\nSetProfessionList= set(ProfessionList)\nprint(SetProfessionList)\nfor each in ProgramTaken:\n    ProgramList.append(str(each))\nsetProgramList = set(ProgramList)\nprint(set(ProgramList))\n#print(ProgramList,AgeList)\nProfessionWithProgramZipped = list(zip(ProfessionList,ProgramList))\n#print(AgeWithProgramZipped)\nfor each in SetProfessionList:\n    strNew=''\n    for elem in ProfessionWithProgramZipped:\n        if each == elem[0]:\n            #print(elem[0],elem[1])\n            if strNew =='':\n                strNew= str(elem)\n            else:\n                strNew = strNew + '::' + str(elem)\n    finalList1.append(strNew)\n#print(finalList1) \ndictProgram=dict()\nindexFinal=[]\nk=0\nfrom operator import itemgetter\npaletteColors= ['Accent','Blues','BuGn', 'Dark2', 'gist_heat','inferno','mako','nipy_spectral','ocean','pink','vlag', 'winter']\nmatColors=['yellowgreen', 'gold', 'lightskyblue', 'lightcoral','aliceblue','chartreuse','chocolate','darkgrey','violet','darkorange','crimson','darkgoldenrod']\nfor each in finalList1:\n    listk=[]\n    #print(each)\n    listTemp= each.split('::')\n    for each in listTemp:\n        listk.append(each.split(\",\")[1].replace(\"'\",'').replace(')','').replace(\"'\",'').strip())\n    #print(\"listk:\",listk) \n    temp=0\n    for each in setProgramList:\n        dictProgram[each]=listk.count(each)\n    #print(sorted(dictProgram.items(),key=itemgetter(1),reverse=True)[0:12])\n    kList = sorted(dictProgram.items(),key=itemgetter(1),reverse=True)[0:12]\n    index=[]\n    nameOfLang=[]\n    for each in kList:\n        #print(each)\n        nameOfLang.append(each[0])\n        index.append(each[1])\n    plt.figure(figsize=(18,6))\n    sns.barplot(x=nameOfLang,y= index,palette='spring')\n    plt.xlabel('For ' + list(SetProfessionList)[k])\n    plt.ylabel('Frequency of Language Used')\n    plt.title('Language Frequency in respective professions')\n    k+=1\n    plt.show()\n    plt.figure(figsize=(18,6))\n    plt.pie(index,labels=nameOfLang,explode=(0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05),shadow=True,autopct='%.2f')\n    plt.show()\n    indexFinal.append(index)\ndataFrameNet = pd.DataFrame(indexFinal,columns = nameOfLang,index=list(SetProfessionList))         \ndisplay(dataFrameNet)     ","61f4cc39":"# Analysis 2:\nThis is to find out what age group finds which programming language most suitable and worked on it","c281d3ed":"#Here 0 means those people who have denied to write their professions.\nThis analysis is to give an idea which profession uses which language the most and which language is in the uprising.\nClearly Python is the standout performer and i think for data analysis, it is moving in a rapid pace","c5d5e09a":"# This Analysis basically gathers its data from two Columns:Age and 'What specific programming language do you use most often? - Selected Choice'\nWhat i have done over here is analysed which age group is inclined to which programming language and which programing language is gaining popularity in that age bar .\nThis will eventually help us gather information regarding the popularity of certain language and lacking ability of the other language.","7afa567e":"# Analysis 3:\nNow i am going to analyse the freuency and usage of programming language among different professions.\nIt will be interesting as it will unfold what occupation majorly deals with what kind of language. Thus giving information of companies best practices","ab459a34":"#This proves that students favour Python as the most valuable and wide-ranged data analysis toll to work upon.\nOver the years , Python has been the crux platform for solving various real-life problems involving a wide range of datas. \nHenceforth, usage of Python should be incorporated in daily life. Although Matlab is though second on the list, so is SQL and R.\nThese technologies are emerging and may soon provide alternate routes of dealing with categorical and numerical variables","948ea9a7":"# Analysis 1:\n#This  first analysis is to know how which tools are common and frequently used by professionals and students for data analysis"}}