{"cell_type":{"b3f9e4df":"code","86b6d95b":"code","2a504e7b":"code","b09b9d7a":"code","06679665":"code","0ae18618":"code","8c41ad38":"code","7a386ac3":"code","6c18e5e7":"code","694f9973":"code","ec17682d":"code","2ba81036":"code","28d4db30":"code","26be8ab9":"code","603d0509":"code","49c89ac6":"code","f4e7edd5":"code","fd654d86":"code","0d197b36":"code","35c5c872":"code","c69df045":"code","41f80b78":"code","cf9e10e9":"code","d63c8e08":"code","074579d6":"code","ee1fd8d4":"code","ff71d846":"code","8d27698e":"code","c5d9fa6a":"code","1e4405e9":"code","e139ed34":"code","14435c44":"code","75a28366":"code","3d3a186f":"code","29a53b46":"code","daad657d":"code","bff3a5aa":"code","cd513af1":"code","a6038cc9":"code","97f69fd2":"code","0cd461d0":"code","f2926f01":"code","919555e5":"code","8fc43fec":"code","bec55cb4":"code","823db1d5":"markdown"},"source":{"b3f9e4df":"import numpy as np\nimport pandas as pd\nimport seaborn as sns","86b6d95b":"train_raw_data=pd.read_csv('..\/input\/titanic\/train.csv')\ntest_raw_data=pd.read_csv('..\/input\/titanic\/test.csv')","2a504e7b":"trainrow=train_raw_data.shape[0]\ntestrow=test_raw_data.shape[0]\ny_train=train_raw_data['Survived'].copy()\ntrain_raw_data=train_raw_data.drop(['Survived'],1)","b09b9d7a":"combine=pd.concat([train_raw_data,test_raw_data])\ncombine.head()","06679665":"print(combine.shape)\nprint(train_raw_data.shape)\nprint(test_raw_data.shape)","0ae18618":"combine.isnull().sum()","8c41ad38":"#here we can se only three features has missing data\n#Emabarked lets replace it with most frequent data\ncombine['Embarked']=combine['Embarked'].fillna(combine['Embarked'].value_counts().index[0])","7a386ac3":"combine['Cabin']=combine['Cabin'].fillna('U')\ncombine['Cabin'].value_counts()\ncombine['Cabin']=combine['Cabin'].astype(str).str[0]\ncombine.head()","6c18e5e7":"combine.loc[combine['Fare'].isnull()]","694f9973":"#fare depend on Pclass,Sex, and age\ncombine['Fare']=combine['Fare'].fillna(combine.loc[(combine['Pclass']==3) & (combine['Sex']==\"male\") & (combine['Age']<65) & (combine['Age']>55)].dropna()['Fare'].mean())","ec17682d":"combine.head()","2ba81036":"passengerids=test_raw_data['PassengerId']\ncombine=combine.drop(['PassengerId','Ticket'],1)","28d4db30":"combine.head()","26be8ab9":"combine['familysize']=combine['SibSp']+combine['Parch']+1\ncombine.head()","603d0509":"combine['Title'] = combine.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\ncombine.head()","49c89ac6":"combine.Title.unique()","f4e7edd5":"combine['Title'].value_counts()","fd654d86":"# combine['Title']=combine['Title'].map({\"Mr\":0,\"Miss\":1,\"Mrs\":2,\"Master\":3,\"Dr\":3,\"Rev\":3,\"Major\":3,\"Col\":3,\"Mlle\":3,\"Don\":3,\"Jonkheer\":3,\"Countess\":3,\"Sir\":0,\"Capt\":3,\"Mme\":2,\"Lady\":1,\"Ms\":0,\"Dona\":3})\n# combine.head()","0d197b36":"combine=combine.drop(['Name'],1)\ncombine.head()","35c5c872":"combine=combine.drop(['SibSp','Parch'],1)\ncombine.head()","c69df045":"combine['Sex']=combine['Sex'].map({'male':0,'female':1})\ncombine.head()","41f80b78":"print(combine.Pclass.unique())\nprint(combine.Sex.unique())","cf9e10e9":"for i in range(0,2):\n    for j in range(0,3):\n        print(i,j+1)\n        temp_dataset=combine[(combine['Sex']==i) &  (combine['Pclass']==j+1)]['Age'].dropna()\n        print(temp_dataset)\n        #print(str(temp_dataset.median())+\"  \"+str(i)+\"  \"+str(j+1))\n        combine.loc[(combine.Age.isnull()) & (combine.Sex==i) & (combine.Pclass==j+1),'Age']=int(temp_dataset.median())","d63c8e08":"combine.isnull().sum()","074579d6":"combine.head()","ee1fd8d4":"combine_checkpoint=combine.copy()\ncombine.head()","ff71d846":"combine=combine_checkpoint.copy()\ncombine.head()","8d27698e":"combine['Age_Band']=pd.cut(combine['Age'],5)\ncombine['Age_Band'].unique()","c5d9fa6a":"combine.loc[(combine['Age']<=16.136),'Age']=1\ncombine.loc[(combine['Age']>16.136) & (combine['Age']<=32.102),'Age']=2\ncombine.loc[(combine['Age']>32.102) & (combine['Age']<=48.068),'Age']=3\ncombine.loc[(combine['Age']>48.068) & (combine['Age']<=64.034),'Age']=4\ncombine.loc[(combine['Age']>64.034) & (combine['Age']<=80.),'Age']=5\ncombine['Age'].unique()","1e4405e9":"combine=combine.drop(['Age_Band'],1)","e139ed34":"combine['Fare_Band']=pd.cut(combine['Fare'],3)\ncombine['Fare_Band'].unique()","14435c44":"combine.loc[(combine['Fare']<=170.776),'Fare']=1\ncombine.loc[(combine['Fare']>170.776) & (combine['Fare']<=314.553),'Fare']=2\ncombine.loc[(combine['Fare']>314.553) & (combine['Fare']<=513),'Fare']=3\ncombine=combine.drop(['Fare_Band'],1)","75a28366":"combine['Fare'].value_counts()","3d3a186f":"combine=pd.get_dummies(columns=['Pclass','Sex','Cabin','Embarked','Title','Age','Fare'],data=combine)\ncombine.head()","29a53b46":"x_train=combine.iloc[:trainrow]\nx_test=combine.iloc[trainrow:]","daad657d":"from sklearn.preprocessing import StandardScaler","bff3a5aa":"scaler=StandardScaler()\nscaler.fit(x_train)\nx_scaled_train=scaler.transform(x_train)\nx_scaled_train","cd513af1":"x_scaled_test=scaler.transform(x_test)\nx_scaled_test","a6038cc9":"from sklearn.linear_model import LogisticRegression\nreg=LogisticRegression()\nreg.fit(x_scaled_train,y_train)\nprint(reg.score(x_scaled_train,y_train))\ny_pred=reg.predict(x_scaled_test)\ny_pred","97f69fd2":"from xgboost import XGBClassifier\nxgb=XGBClassifier()\nxgb.fit(x_scaled_train,y_train,early_stopping_rounds=5, \n             eval_set=[(x_scaled_train, y_train)], \n             verbose=False)\nprint(xgb.score(x_scaled_train,y_train))\ny_pred=xgb.predict(x_scaled_test)","0cd461d0":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier(random_state=4,n_estimators=500,warm_start=True,max_depth=6,min_samples_leaf=2,max_features='sqrt')\nrfc.fit(x_scaled_train,y_train)\nprint(rfc.score(x_scaled_train,y_train))\ny_pred=rfc.predict(x_scaled_test)","f2926f01":"# from sklearn.neighbors import KNeighborsClassifier\n# classifier = KNeighborsClassifier(n_neighbors = 2)\n# classifier.fit(x_scaled_train,y_train)\n# print(classifier.score(x_scaled_train,y_train))\n# y_pred=classifier.predict(x_scaled_test)","919555e5":"passengerids.head()","8fc43fec":"submission = pd.DataFrame({\n        \"PassengerId\": passengerids,\n        \"Survived\": y_pred\n    })\nsubmission","bec55cb4":"submission.to_csv('submission1.csv', index=False)","823db1d5":"\n<h1>Check out my other Notebooks<\/h1><font size='4'>\n<a href=\"https:\/\/www.kaggle.com\/vishalvanpariya\/top-5-on-leaderboard\" target=\"_blank\">House Price<\/a><br>\n<a href=\"https:\/\/www.kaggle.com\/vishalvanpariya\/data-explanation-titanic\" target=\"_blank\">Titanic EDA<\/a><br>\n<a href=\"https:\/\/www.kaggle.com\/vishalvanpariya\/nlp-for-beginners\" target=\"_blank\">NLP<\/a><br><font>\n<a href=\"https:\/\/www.kaggle.com\/vishalvanpariya\/basic-visualization-for-beginners\" target=\"_blank\">Basic Visualization<\/a><br><font>"}}