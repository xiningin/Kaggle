{"cell_type":{"afad44d7":"code","427f43b4":"code","b7278773":"code","eb6d8b8a":"code","923df7d1":"code","6ad0f778":"code","3c81d2f0":"code","cb9ace01":"code","f39cfa1e":"code","a3a25f19":"code","2967b80e":"code","9d2baec4":"code","7d356546":"code","b40c8805":"code","ec284b7b":"code","ba0fcf76":"code","42428167":"code","c0aeb330":"code","7b715b48":"code","92ae4d34":"code","5aed3fcd":"code","8c7220d0":"code","9e36f1cb":"code","6e27c691":"code","09226d67":"code","17fa12d4":"code","7d5ac904":"code","bae03d78":"code","e36e71fd":"code","d6913acc":"code","37907523":"code","4bb2499b":"code","24defb99":"code","5cdf740d":"code","b8fbd2cf":"code","76df9f36":"code","800df560":"code","0339b642":"code","1502e633":"code","5a0718dd":"code","a854b52f":"code","4c0d8d3b":"code","89261a0f":"code","0d4c0893":"code","156dd5ef":"code","5e4c5457":"code","3df1f45a":"code","53949c7f":"code","efe775c8":"code","52f5d38c":"code","eb6bf2d2":"code","972dac94":"code","63c7e6d5":"code","2bcba86f":"code","152e69b3":"code","bcd11600":"code","b5c4aac1":"code","cd9c3b16":"code","33b0ca1a":"code","d9a4d6c5":"code","3d78aa7c":"code","1a24020e":"code","bb6d464b":"code","ab4e6f2b":"code","a19111b1":"code","a48a0c2c":"markdown","b56462e1":"markdown","dc819f75":"markdown"},"source":{"afad44d7":"\n\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set()\n\n\n# Read dataset\n# Next, we'll load the Iris flower dataset, which is in the \"..\/input\/\" directory\nimport pandas as pd\niris = pd.read_csv(\"..\/input\/iris-dataset\/Iris.csv\", index_col=0)\n# the iris dataset is now a Pandas DataFrame\n#df = pd.read_csv('C:\\\\Users\\\\mhass14\\\\Downloads\\\\Iris.csv')\niris.head()\npokemon = pd.read_csv(\"..\/input\/pokemon-dataset\/Pokemon.csv\",encoding = 'latin-1',index_col=0)\n#pokemon.head()\ntips = pd.read_csv(\"..\/input\/tips-dataset\/tips.csv\")\ntips.head()","427f43b4":"# Recommended way for Scatterplot\nsns.lmplot(x='PetalWidthCm', y='SepalWidthCm', data=iris)","b7278773":"sns.jointplot(x=\"PetalWidthCm\", y=\"SepalWidthCm\", data=iris)","eb6d8b8a":"# One piece of information missing in the plots above is what species each plant is\n# We'll use seaborn's FacetGrid to color the scatterplot by species\nsns.FacetGrid(iris, hue=\"Species\", height=5) \\\n   .map(plt.scatter, \"PetalWidthCm\", \"SepalWidthCm\") \\\n   .add_legend()","923df7d1":"#SeaBorn\n#Here is some of the functionality that seaborn offers:\n\n#We can examine relationships between multiple variables.\n#We can show observations or aggregate statistics for categorical variables.\n#We have Options for visualizing univariate or bivariate distributions and for comparing them between subsets of data.\n#Automatic estimation and plotting of linear regression models for different kinds dependent variables\n\n#Seaborn aims to make visualization a central part of exploring and understanding data.\n#Its dataset-oriented plotting functions operate on dataframes and arrays.\n\n#Uni-Variate: Bar(Nominal categorical data), Line(Ordinal categorical), Area Chart and Histogram(Interval Data)\n#Bi-Variate: Scatter and Hex Plot, Stacked Line Bivariate Line Chart","6ad0f778":"#tips = pd.read_csv(\"\/axp\/buanalytics\/csriskadv\/dev\/mhass14\/visualization\/tips.csv\")\n#tips.head(20)","3c81d2f0":"tips.shape","cb9ace01":"tips[tips['time']=='Lunch']['day'].value_counts().plot.bar()","f39cfa1e":"(tips[tips['time']=='Dinner']['day'].value_counts()\/len(tips)).plot.bar()\n#This tells us that people go out for dinner on mostly saturday and sunday.\n","a3a25f19":"tips['day'].value_counts().plot.bar()","2967b80e":"(tips[tips['time']=='Lunch']['day'].value_counts()\/len(tips)).plot.bar()","9d2baec4":"tips[tips['time']=='Lunch']['day'].value_counts().plot.bar()","7d356546":"tips[tips['smoker']=='Yes']['day'].value_counts().plot.bar()","b40c8805":"tips[tips['smoker']=='No']['day'].value_counts().plot.bar()","ec284b7b":"tips[tips['time']=='Lunch']['size'].value_counts().sort_index().plot.bar()","ba0fcf76":"tips[tips['time']=='Dinner']['size'].value_counts().sort_index().plot.bar()","42428167":"tips[tips['time']=='Lunch']['day'].value_counts()","c0aeb330":"len(tips)","7b715b48":"tips['day'].value_counts()","92ae4d34":"tips['day'].value_counts().plot.line()","5aed3fcd":"tips['total_bill'].plot.hist()\n#histograms have one major shortcoming (the reason for our 200$ caveat earlier).\n#Because they break space up into even intervals, they don't deal very well with skewed data","8c7220d0":"tips.plot.hexbin(x='total_bill',y='tip',gridsize=20)","9e36f1cb":"tips.plot.scatter(x='total_bill',y='tip')","6e27c691":"tips['size'].plot.bar(stacked=True)","09226d67":"sns.countplot(tips['day'])","17fa12d4":"sns.kdeplot(tips.query('tip < 1').total_bill)","7d5ac904":"sns.kdeplot(tips.total_bill)","bae03d78":"sns.boxplot(\n    x='day',\n    y='total_bill',\n    data=tips)","e36e71fd":"sns.violinplot(\n    x='day',\n    y='total_bill',data=tips)","d6913acc":"#We draw a faceted scatter plot with multiple semantic variables.\n\n##This particular plot shows the relationship between five variables in the tips dataset.\n##Three are numeric, and two are categorical.\n##Two numeric variables (total_bill and tip) determined the position of each point on the axes,\n#and the third (size) determined the size of each point.\n##One categorical variable(col<->time) split the dataset onto two different axes (facets),\n#and the other(hue<->smoker) determined the color(hue) and shape(style) of each point.\n\nsns.relplot(x=\"total_bill\", y=\"tip\", col=\"time\",\n            hue=\"smoker\", style=\"smoker\", size=\"size\",\n            data=tips)","37907523":"sns.FacetGrid(tips, hue=\"smoker\", height=5) \\\n   .map(plt.scatter, \"total_bill\", \"tip\") \\\n   .add_legend()","4bb2499b":"sns.jointplot(x=\"tip\", y=\"total_bill\", data=tips)","24defb99":"# Recommended way for Scatterplot\nsns.lmplot(x='total_bill', y='tip', data=tips)","5cdf740d":"#We draw a faceted scatter plot with multiple semantic variables.\n\n##This particular plot shows the relationship between five variables in the tips dataset.\n##Three are numeric, and two are categorical.\n##Two numeric variables (total_bill and tip) determined the position of each point on the axes,\n#and the third (size) determined the size of each point.\n##One categorical variable(col<->time) split the dataset onto two different axes (facets),\n#and the other(hue<->smoker) determined the color(hue) and shape(style) of each point.\n\nsns.relplot(x=\"total_bill\", y=\"tip\", col=\"time\",\n            hue=\"smoker\", style=\"smoker\", size=\"size\",\n            data=tips)","b8fbd2cf":"sns.relplot(x=\"total_bill\", y=\"tip\", col=\"time\",\n            hue=\"smoker\", size=\"size\", style=\"smoker\",\n            facet_kws=dict(sharex=False),\n            kind=\"line\",legend=\"full\", data=tips,height=10)","76df9f36":"#Often we are interested in the average value of one variable as a function of other variables.\n#Many seaborn functions can automatically perform the statistical estimation that is neccesary to answer these questions:\n\nsns.relplot(x=\"total_bill\", y=\"tip\", col=\"time\",\n            hue=\"smoker\", style=\"smoker\",\n            kind=\"line\", data=tips)","800df560":"#Statistical estimation in seaborn goes beyond descriptive statisitics. For example,\n#it is also possible to enhance a scatterplot to include a linear regression model (and its uncertainty) using lmplot() \nsns.lmplot(x=\"total_bill\", y=\"tip\", col=\"time\", hue=\"smoker\",\n           data=tips)","0339b642":"##Standard scatter and line plots visualize relationships between numerical variables,\n#but many data analyses involve categorical variables.\n#There are several specialized plot types in seaborn that are optimized for visualizing this kind of data.\n#They can be accessed through catplot().\n#Similar to relplot(), the idea of catplot() is that it exposes a common dataset-oriented API that generalizes over different representations of the relationship between one numeric variable and one (or more) categorical variables.\nsns.catplot(x=\"day\", y=\"total_bill\", hue=\"smoker\",\n            kind=\"box\", data=tips,col='time',height=5)","1502e633":"#Alternately, you could use kernel density estimation to represent the underlying distribution that the points are sampled\n#from:\nsns.catplot(x=\"day\", y=\"total_bill\", hue=\"smoker\",\n            kind=\"bar\", data=tips,col='time')","5a0718dd":"t_s = tips[(tips['day']=='Thur') & (tips['smoker']=='Yes')]\nt_ns = tips[(tips['day']=='Thur') & (tips['smoker']=='No')]","a854b52f":"t_ns['tip'].describe()","4c0d8d3b":"t_s['tip'].describe()","89261a0f":"#We could show the only mean value and its confidence interval \nsns.catplot(x=\"day\", y=\"tip\", hue=\"smoker\",\n            kind=\"box\", data=tips)","0d4c0893":"tips.shape","156dd5ef":"tips.head()","5e4c5457":"import matplotlib.pyplot as plt\nf, axes = plt.subplots(1, 2, sharey=True, figsize=(6, 4))\nsns.boxplot(x=\"day\", y=\"tip\", data=tips, ax=axes[1])\nsns.scatterplot(x=\"total_bill\", y=\"tip\", hue=\"day\", data=tips, ax=axes[0])","3df1f45a":"axes[0]","53949c7f":"iris.head()","efe775c8":"sns.jointplot(x=\"SepalLengthCm\", y=\"PetalLengthCm\", data=iris)","52f5d38c":"#pairplot(), takes a broader view, showing all pairwise relationships and the marginal distributions,\n#optionally conditioned on a categorical variable :\n#By default, this function will create a grid of Axes such that each variable in data will by shared in the y-axis across a single row and in the x-axis across a single column.\n#The diagonal Axes are treated differently,\n#drawing a plot to show the univariate distribution of the data for the variable in that column.\nsns.pairplot(data=iris, hue=\"Species\", kind ='scatter',height=2)","eb6bf2d2":"g = sns.catplot(x=\"total_bill\", y=\"day\", hue=\"time\",\n                height=3.5, aspect=1.5,\n                kind=\"box\", legend=False, data=tips);\ng.add_legend(title=\"Meal\")\ng.set_axis_labels(\"Total bill ($)\", \"\")\ng.set(xlim=(0, 60), yticklabels=[\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"])\ng.despine(trim=True)\ng.fig.set_size_inches(6.5, 3.5)\ng.ax.set_xticks([5, 15, 25, 35, 45, 55], minor=True);\nplt.setp(g.ax.get_yticklabels(), rotation=30)","972dac94":"sns.distplot(tips['total_bill'], hist=True, rug=False, kde=False)","63c7e6d5":"sns.distplot(tips['tip'], hist=True, rug=True, kde=True)","2bcba86f":"sns.lineplot(x=\"total_bill\", y=\"tip\",\n             hue=\"smoker\", style=\"smoker\",\n             data=tips,size='size')","152e69b3":"##### ","bcd11600":"sns.lmplot(x='Attack', y='Defense', data=pokemon)","b5c4aac1":"#Seaborn does not have dedicated scatterplot, this functions is plotting and fitting a regression line.\nsns.lmplot(x='total_bill', y='tip', data=tips,\n           fit_reg=False, # No regression line\n           hue='smoker')   # Color by evolution stage\n\n# Tweak using Matplotlib\nplt.ylim(0, None)\nplt.xlim(0, None)","cd9c3b16":"sns.boxplot(data=tips)","33b0ca1a":"tips.describe()","d9a4d6c5":"# Set theme\nsns.set_style('whitegrid')\n \n# Violin plot\n#They show the distribution (through the thickness of the violin) instead of only the summary statistics.\nsns.violinplot(x='day', y='total_bill', data=tips)","3d78aa7c":"plt.figure(figsize=(10,6))\n\nsns.violinplot(x='day', y='total_bill', data=tips, inner=None)\nsns.swarmplot(x='day', y='total_bill', data=tips,color='k', # Make points black\n              alpha=0.7) # and slightly transparent)","1a24020e":"cor = tips.corr()\n# Heatmap\nsns.heatmap(cor)","bb6d464b":"c = tips.corr","ab4e6f2b":"cor","a19111b1":"# Density Plot\nsns.kdeplot(tips.total_bill, tips.tip)","a48a0c2c":"**Jointplot** - Draw a plot of two variables with bivariate and univariate graphs.","b56462e1":"### Understanding the data\nIn order to start building useful models, we need to understand the underlying dataset.\nEffective data visualization is the most important tool for getting this done.\n\n#Accessing Data with Pandas - https:\/\/www.kaggle.com\/sohier\/tutorial-accessing-data-with-pandas\/\n#Selecting and Filtering - https:\/\/www.kaggle.com\/dansbecker\/selecting-and-filtering-in-pandas\n","dc819f75":"A **scatter plot** (also called a scatterplot, scatter graph, scatter chart, scattergram, or scatter diagram) is a type of plot or mathematical diagram using Cartesian coordinates to display values for typically two variables for a set of data. If the points are coded (color\/shape\/size), one additional variable can be displayed. The data are displayed as a collection of points, each having the value of one variable determining the position on the horizontal axis and the value of the other variable determining the position on the vertical axis."}}