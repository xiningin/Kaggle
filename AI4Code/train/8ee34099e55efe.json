{"cell_type":{"fa179db9":"code","155c910b":"code","761ad033":"code","38324070":"code","0f5c9ab3":"code","aa11a8f5":"code","325ff4e2":"code","2b4b80f7":"code","c4014cc5":"code","ebdb6a1a":"code","1faf8d4c":"code","63c9ef62":"code","bd25cae4":"code","8337f337":"code","9f787a3e":"code","eb673d4c":"markdown","fe4bb362":"markdown","60b35fdf":"markdown","91df19c1":"markdown"},"source":{"fa179db9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","155c910b":"from sklearn.datasets import load_iris\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split","761ad033":"#Loading the iris data\ndata = load_iris()\n#print(data)\nprint('Classes to predict: ', data.target_names)","38324070":"#Extracting data attributes\nX = data.data\n### Extracting target\/ class labels\ny = data.target\n\nprint('Number of examples in the data:', X.shape[0])","0f5c9ab3":"print(X)","aa11a8f5":"#First four rows in the variable 'X'\nX[:4]\n","325ff4e2":"#Using the train_test_split to create train and test sets.\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 47, test_size = 0.20)\nprint(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","2b4b80f7":"#Importing the Decision tree classifier from the sklearn library.\nfrom sklearn.tree import DecisionTreeClassifier\nclf = DecisionTreeClassifier(criterion = 'entropy')","c4014cc5":"#Training the decision tree classifier. \nclf.fit(X_train, y_train)","ebdb6a1a":"#Predicting labels on the test set.\ny_pred =  clf.predict(X_test)\nprint(y_pred)","1faf8d4c":"#Importing the accuracy metric from sklearn.metrics library\n\nfrom sklearn.metrics import accuracy_score\nprint('Accuracy Score on train data: ', accuracy_score(y_true=y_train, y_pred=clf.predict(X_train)))\nprint('Accuracy Score on test data: ', accuracy_score(y_true=y_test, y_pred=y_pred))\n","63c9ef62":"clf = DecisionTreeClassifier(criterion='entropy', min_samples_split=50)\nclf.fit(X_train, y_train)\nprint('Accuracy Score on train data: ', accuracy_score(y_true=y_train, y_pred=clf.predict(X_train)))\nprint('Accuracy Score on the test data: ', accuracy_score(y_true=y_test, y_pred=clf.predict(X_test)))","bd25cae4":"from sklearn import tree\ntree.plot_tree(clf)","8337f337":"#Decision making in decision tree\n\ntext_representation = tree.export_text(clf)\n\nprint(text_representation)\n\n","9f787a3e":"import graphviz\n# DOT data\ndot_data = tree.export_graphviz(clf, out_file=None, \n                                filled=True)\n\n# Draw graph\ngraph = graphviz.Source(dot_data, format=\"png\") \ngraph","eb673d4c":"**Overfitting**:Here learning system tightly fits the given training data so much that it would be inaccurate in predicting the outcomes of the untrained data.","fe4bb362":"**Dealing with overfitting: min_samples_split**\n\ndefault min_samples_split=2\n\nThis means if you've 1 sample left in a node, you cannot split further\n\nWhen it gets really deep in depth, it overfits your data\n\nIf you increase your min_samples_split value\n\nYou would decrease the depth of your tree\n\nThis is because you would run out of samples to split\n\nThis would reduce overfitting","60b35fdf":"![image.png](attachment:a2c50eca-1082-4ad5-9933-ada2831d521e.png)","91df19c1":"The scikit-learn dataset library already has the iris dataset. You can either use the dataset from the source or import it from the scikit-learn dataset library."}}