{"cell_type":{"47fc3a60":"code","3357d005":"code","abe8fa8d":"code","5a674662":"code","a0a593b3":"code","b23ce7ad":"code","9828ed88":"code","137f4d8b":"code","4e2053cb":"code","77be6a36":"code","14b1982a":"code","afb2e085":"code","9fb8aa4f":"code","45df7c78":"code","514e0903":"markdown","9e2efc31":"markdown","117392ee":"markdown","ec04e3b3":"markdown","6f43257f":"markdown"},"source":{"47fc3a60":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport sys\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport warnings\n   \nif not sys.warnoptions:\n    warnings.simplefilter(\"ignore\")\n    \nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\n\n","3357d005":"train_data=pd.read_csv('..\/input\/titanic\/train.csv')\ntest_data=pd.read_csv('..\/input\/titanic\/test.csv')\ngen_sub=pd.read_csv('..\/input\/titanic\/gender_submission.csv')","abe8fa8d":"train_data.info()\ntest_data.info()","5a674662":"drops=['PassengerId', 'Name', 'Ticket', 'Fare', 'Cabin']\ntrain=train_data.drop(drops, axis=1)\ntest=test_data.drop(drops, axis=1)","a0a593b3":"train['Embarked']=train['Embarked'].fillna(value='S')\ntrain['Age']=train['Age'].fillna(value=train['Age'].mean())\ntest['Age']=test['Age'].fillna(value=test['Age'].mean())\n\ntest.info()\ntrain.info()","b23ce7ad":"train['Family']= train['SibSp'] + train['Parch']\ntest['Family']= test['SibSp'] + test['Parch']\ntrain_fin=train.drop(['SibSp','Parch'], axis=1)\ntest_fin=test.drop(['SibSp','Parch'], axis=1)\n                        ","9828ed88":"le = LabelEncoder()\n\ntrain_fin['Sex'] = le.fit_transform(train_fin['Sex'])\ntrain_fin['Embarked'] = le.fit_transform(train_fin['Embarked'])\n\ntest_fin['Sex'] = le.fit_transform(test_fin['Sex'])\ntest_fin['Embarked'] = le.fit_transform(test_fin['Embarked'])\ntrain_fin.head()\n\n","137f4d8b":"X_train = train_fin.drop(axis=1, columns=['Survived'])\nY_train = train_fin.loc[:, ['Survived']]","4e2053cb":"x_train, x_test, y_train, y_test = train_test_split(X_train, Y_train, random_state=42)","77be6a36":"rfc = RandomForestClassifier()\nrfc.fit(x_train, y_train)\npred = rfc.predict(x_test)\naccuracy_score(pred, y_test)","14b1982a":"rfc = RandomForestClassifier(n_estimators=95, max_depth=5, random_state=42)\nrfc.fit(X_train, Y_train)\npred = rfc.predict(test_fin)\naccuracy_score(pred, gen_sub.loc[:, ['Survived']])","afb2e085":"submission = pd.DataFrame({\n    'PassengerId': test_data['PassengerId'], \n    'Survived': pred\n    })","9fb8aa4f":"submission.to_csv('submission.csv', index=False)","45df7c78":"pd.read_csv('submission.csv')","514e0903":"test\/fitting","9e2efc31":"Add missing vars","117392ee":"Remove unneccessary vars","ec04e3b3":"Encode some vars","6f43257f":"combine siblings and parents"}}