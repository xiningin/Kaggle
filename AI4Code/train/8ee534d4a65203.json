{"cell_type":{"03598ba9":"code","244d5a4a":"code","9a807d28":"code","dbaa5d79":"code","4ae02515":"code","06a823ed":"code","1756dd51":"code","ab6029c4":"code","415bc2ea":"code","af1ff3bc":"code","36a14192":"code","af665a06":"code","c32239ca":"code","013b0614":"code","edc7fabc":"code","6d63fccf":"code","58d22048":"code","703dd54f":"code","5067e31b":"code","002e0b02":"code","6cf0a04f":"code","a4fc18b9":"code","27878cc9":"code","38094853":"markdown","1c49f320":"markdown","ac30da0e":"markdown","fc6942a1":"markdown","fd0c7c45":"markdown","19feae5c":"markdown"},"source":{"03598ba9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_theme()","244d5a4a":"df = pd.read_csv('\/kaggle\/input\/fraud-detection-example\/fraud_dataset_example.csv')\ndf","9a807d28":"df.isna().sum()","dbaa5d79":"df.info()","4ae02515":"object_cols = df.dtypes == 'object'\ndata_cols = list(object_cols[object_cols].index)\ndata_cols","06a823ed":"numeric_cols = (df.dtypes != 'object')\ndata_num = list(numeric_cols[numeric_cols].index)\ndata_num","1756dd51":"sns.countplot(df.dtypes.map(str))","ab6029c4":"df.type= df.type.str.strip().str.lower()","415bc2ea":"df.describe()","af1ff3bc":"f = plt.figure(figsize=(17,5))\n\nax = f.add_subplot(121)\nsns.distplot(df.amount)\n\nax = f.add_subplot(122)\nsns.distplot(df.oldbalanceOrg)","36a14192":"f = plt.figure(figsize=(17,5))\n\nax = f.add_subplot(121)\nsns.distplot(df.newbalanceOrig)\n\nax = f.add_subplot(122)\nsns.distplot(df.oldbalanceDest)","af665a06":"sns.countplot(df.type)","c32239ca":"f = plt.figure(figsize=(17,5))\n\nax = f.add_subplot(121)\nsns.countplot(df.isFraud)\n\nax = f.add_subplot(122)\nsns.countplot(df.isFlaggedFraud)","013b0614":"sns.heatmap(df.corr(), annot=True)","edc7fabc":"df_group = df.groupby('type')['isFraud'].sum().plot(kind='bar')\ndf_group","6d63fccf":"from sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.preprocessing import StandardScaler, OrdinalEncoder, OneHotEncoder\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.ensemble import RandomForestClassifier","58d22048":"num_col_train = ['step', 'type', 'nameOrig', 'nameDest', 'isFlaggedFraud', 'isFraud']\nnum_col_train","703dd54f":"X = df[['amount', 'oldbalanceOrg', 'newbalanceOrig', 'oldbalanceDest','newbalanceDest']]\ny = df.isFraud\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=42)","5067e31b":"X_train.columns","002e0b02":"numeric_pipeline = Pipeline([\n    ('scaling', StandardScaler())\n])\n\ncategoric_pipeline = Pipeline([\n    ('encode', OrdinalEncoder())\n])\n\npreprocessor = ColumnTransformer([\n    ('numeric', numeric_pipeline, ['amount', 'oldbalanceOrg', 'newbalanceOrig', 'oldbalanceDest', 'newbalanceDest']),\n#     ('categoric', categoric_pipeline, ['type'])\n])\n\npipeline = Pipeline([\n    ('pre', preprocessor),\n    ('algo', RandomForestClassifier(random_state=42))\n])","6cf0a04f":"parameter = {\n    'algo__n_estimators':[100,200, 350, 500], \n    'algo__min_samples_leaf':[2, 10, 30]\n}","a4fc18b9":"model = GridSearchCV(pipeline, parameter, cv=3, n_jobs=-1, verbose=1)\nmodel.fit(X_train, y_train)","27878cc9":"print(model.score(X_train, y_train)), print(model.score(X_test, y_test))","38094853":"**Bivariant Analysis**","1c49f320":"**Univariant Analysis**","ac30da0e":"### **Exploratory Data Analysis**","fc6942a1":"### **Modeling**","fd0c7c45":"- fraud data with no fraud is not balanced\n\n- The Flaggedfraud only has a value of 0, so we delete the column to make it easier for the model to find predictions","19feae5c":"### **Check Missing Value**"}}