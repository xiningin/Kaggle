{"cell_type":{"4624a779":"code","fad134da":"code","2680f531":"code","370afc20":"code","c993c9ec":"code","0e7458ce":"code","74f3dab6":"code","5d42ae0c":"code","da1e393e":"code","7ce0937f":"code","37ddfbbb":"code","ebede4db":"code","2cb8cc85":"code","c699e28f":"code","1157473e":"code","3953ff58":"code","75804e58":"code","73a54481":"code","71b47c00":"code","9144b239":"code","a75354b5":"code","2b02dc94":"code","dcc5e804":"markdown"},"source":{"4624a779":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nhousing_data = pd.read_csv('\/kaggle\/input\/housesalesprediction\/kc_house_data.csv')","fad134da":"housing_data.head()","2680f531":"import datetime\ncurrent_time = datetime.datetime.now()\nhousing_data[\"age\"] = current_time - pd.to_datetime(housing_data[\"date\"])\nhousing_data[\"age\"] = housing_data[\"age\"].dt.days","370afc20":"features = [\n    u'age',  u'bedrooms', u'bathrooms', u'sqft_living', u'sqft_lot', u'waterfront', u'view', u'condition', u'grade',\n    u'sqft_above', u'sqft_basement', u'sqft_living15', u'sqft_lot15'\n]\nx = housing_data[features]\ny = housing_data[\"price\"]","c993c9ec":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x, y, test_size=0.2, random_state=3)","0e7458ce":"from sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(x_train, y_train)","74f3dab6":"accuracy = regressor.score(x_test, y_test)\n\"Accuracy: {}%\".format(int(round(accuracy * 100)))","5d42ae0c":"y_pred = regressor.predict(x_test)\nfrom sklearn import metrics\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","da1e393e":"#To retrieve the intercept:\nprint(regressor.intercept_)\n#For retrieving the slope:\nprint(regressor.coef_)","7ce0937f":"import matplotlib.pyplot as plt","37ddfbbb":"plt.scatter(x_test['age'], y_test, color='gray')\nplt.plot(x_test['age'], y_pred, color='red')\nplt.show()","ebede4db":"housing_data.shape","2cb8cc85":"housing_data.describe()","c699e28f":"housing_data.isnull().any()","1157473e":"x1 = x\ny1 = y","3953ff58":"import seaborn as seabornInstance\nplt.figure(figsize=(15,10))\nplt.tight_layout()\nseabornInstance.distplot(housing_data[\"price\"])","75804e58":"X_train, X_test, y_train, y_test = train_test_split(x1, y1, test_size=0.2, random_state=0)","73a54481":"regressor = LinearRegression()  \nregressor.fit(X_train, y_train)","71b47c00":"coeff_df = pd.DataFrame(regressor.coef_, x1.columns, columns=['Coefficient'])  \ncoeff_df","9144b239":"y_pred = regressor.predict(X_test)\ndf = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\ndf1 = df.head(25)\nprint(df1)","a75354b5":"df1.plot(kind='bar',figsize=(10,8))\nplt.grid(which='major', linestyle='-', linewidth='0.5', color='green')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='black')\nplt.show()","2b02dc94":"print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","dcc5e804":"Let's look into features one by one. Given date format is not useful for us. So, calculating the age of house for better analysis. Creating another column `age`."}}