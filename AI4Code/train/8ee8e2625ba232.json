{"cell_type":{"8b26b152":"code","ced6a177":"code","155b0945":"code","87fb2312":"code","f3889bdd":"code","c3603225":"code","611f3174":"code","f3250a9b":"code","b0897d75":"code","105bc6a4":"code","2bb0f0ee":"code","6a4d762a":"code","79a7e964":"code","c29f4e4d":"code","7c2f903b":"code","b663b89c":"code","483c1a86":"code","d7a3591e":"markdown","cf6e97ba":"markdown","f9d6ade8":"markdown","5532ea6c":"markdown","0154111b":"markdown","87f6daf2":"markdown","6e0b5bfb":"markdown","b430e2ac":"markdown","025bbdd5":"markdown","c862fbc8":"markdown","5125de0b":"markdown","51c97d57":"markdown","4fac92ba":"markdown"},"source":{"8b26b152":"#Import libraries\nimport pandas as pd\nimport numpy as np\nimport os\nimport ast\nimport seaborn as sns\nimport cv2\nfrom matplotlib import animation, rc\nimport matplotlib.pyplot as plt\n%matplotlib inline\nrc('animation', html='jshtml')","ced6a177":"train = pd.read_csv('..\/input\/tensorflow-great-barrier-reef\/train.csv')\ntest = pd.read_csv('..\/input\/tensorflow-great-barrier-reef\/test.csv')","155b0945":"train.head()","87fb2312":"train.tail()","f3889bdd":"test.head()","c3603225":"test.tail()","611f3174":"train.info()","f3250a9b":"test.info()","b0897d75":"print(train.duplicated().sum())\nprint(test.duplicated().sum())","105bc6a4":"train['annotations_list'] = train['annotations'].apply(lambda x: ast.literal_eval(x))","2bb0f0ee":"plt.figure(figsize=(15, 15))\nplt.title(\"Number Of Frames Containing X Starfish\")\nstarfish_count = sns.countplot(x = train['annotations_list'].apply(lambda x: len(x)))\nstarfish_count.bar_label(starfish_count.containers[0])","6a4d762a":"video_count = sns.countplot(x = train['video_id'])\nvideo_count.bar_label(video_count.containers[0])\nplt.title(\"Number Of Frames For Each Video ID\")","79a7e964":"for i in train['video_id'].unique():\n    plt.figure(figsize=(10, 10))\n    plt.title(\"Number of Starfish In Each Frame of Video \" + str(i))\n    temp = train[train['video_id'] == i]\n    starfish_count_vid = sns.countplot(x = temp['annotations_list'].apply(lambda x: len(x)))\n    starfish_count_vid.bar_label(starfish_count_vid.containers[0])\n    plt.show()","c29f4e4d":"train['temp'] = list(zip(train.video_id, train.sequence))\nsns.countplot(x = train['temp'])\nplt.xticks(rotation = 90)","7c2f903b":"def createVideo(video_id, num_frames, start_frame):\n    video = []\n    directory = ('..\/input\/tensorflow-great-barrier-reef\/train_images\/video_' + str(video_id) + '\/')\n    for i in range(num_frames):\n        image = cv2.imread(directory + str(start_frame + i) + '.jpg', 1)\n        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n        temp = train[(train['video_id'] == video_id) & (train['video_frame'] == start_frame + i)].iloc[0]\n        starfish_box = temp.annotations_list\n        for j in starfish_box:\n            x0, y0, x1, y1 = (j['x'], j['y'], j['x'] + j['width'], j['y'] + j['height'])\n            cv2.rectangle(image, (x0, y0), (x1, y1), (255,0,0), 3)\n        video.append(image)\n    return video","b663b89c":"def showVideo(video_array):\n    fig = plt.figure(figsize=(9, 9))\n    plt.axis('off')\n    im = plt.imshow(video_array[0])\n    def animate_func(i):\n        im.set_array(video_array[i])\n        return [im]\n    return animation.FuncAnimation(fig, animate_func, frames = len(video_array), interval = 1000 \/\/ 24)","483c1a86":"video_array = createVideo(video_id = 0, num_frames = 100, start_frame = 0)\nshowVideo(video_array)","d7a3591e":"Welcome to the first of a series of notebooks on the TensorFlow Great Barrier Reef Competition. This first notebook will be an EDA with animations to get a better idea of how to process\/display the data.","cf6e97ba":"With this out of the way, we can proceed to head to the videos themselves.","f9d6ade8":"We see here that video 0 doesn't contain that many starfish, while videos 1 and 2 contain significantly more. In addition, video 0 will have a starfish on screen for longer than videos 1 and 2.","5532ea6c":"Lastly, we can see that there are 20 different sequences of videos, with the most coming from sequences 8503, 29859, 37114, and 60754. Of special note is that those sequences are from video IDs 1 and 2, primarily; video 0 instead contains more evenly distributed sets of sequences. ","0154111b":"UPDATE 1\/1\/22: Added in sequence countplot. ","87f6daf2":"Next time, we proceed with a baseline model. See you then!","6e0b5bfb":"# Introduction","b430e2ac":"Credit to Diego Gomez for the inspiration: https:\/\/www.kaggle.com\/diegoalejogm\/great-barrier-reefs-eda-with-animations","025bbdd5":"Displaying a few countplots to see distributions:","c862fbc8":"We can see here that most entries are empty, but a few frames have 1 starfish, and potentially as much as 18. ","5125de0b":"It's roughly an equal distribution of frames between the videos, with video_id 2 earning the plurality of them.","51c97d57":"# Part 1. EDA","4fac92ba":"We can see that all data is present and singular. However, note that the annotations are provided in string format. We need to use ast to convert to arrays."}}