{"cell_type":{"6487abaa":"code","c3f40625":"code","6374ab2a":"code","31d4dd79":"code","b76dbf8a":"code","c5377a60":"code","a97bb677":"code","9deee7b1":"code","3a9bd4a7":"code","4f194b22":"code","6201c956":"code","90e82b3d":"code","884b6751":"code","ed115e34":"code","8b2dd677":"code","8fda7742":"code","48719050":"code","1fed485f":"code","1549a0f6":"code","5631a9c5":"code","106a6bb0":"code","d96708b6":"code","90964512":"code","8603f3f5":"code","d026b949":"code","fcb58414":"code","1a956b08":"code","238aaaff":"code","8937792e":"code","689bb882":"code","30706431":"code","0ab8eb2d":"code","3f792b7d":"code","da036445":"markdown","379a5990":"markdown","2ff4bea4":"markdown","13ca8f1d":"markdown","bf871543":"markdown","01836ddf":"markdown"},"source":{"6487abaa":"import pandas as pd\nimport tensorflow as tf\nfrom tensorflow.keras.layers import Embedding\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.preprocessing.text import one_hot\nfrom tensorflow.keras.layers import LSTM\nfrom tensorflow.keras.layers import Dense","c3f40625":"data = pd.read_csv('..\/input\/fake-news\/fake_train.csv')","6374ab2a":"data.head()","31d4dd79":"# Droping the NAN Values\ndata = data.dropna()","b76dbf8a":"# Independent features\nX = data.drop('label',axis=1)","c5377a60":"# Dependent features\ny = data['label']","a97bb677":"X.shape","9deee7b1":"y.shape","3a9bd4a7":"# Vocabulary size\nvoc_size = 5000","4f194b22":"messages = X.copy()","6201c956":"messages.reset_index(inplace=True)","90e82b3d":"import nltk\nimport re\nfrom nltk.corpus import stopwords","884b6751":"nltk.download('stopwords')","ed115e34":"# Dataset Preprocessing\nfrom nltk.stem.porter import PorterStemmer\nps = PorterStemmer()\ncorpus = []\nfor i in range(0, len(messages)):\n    print(i)\n    review = re.sub('[^a-zA-Z]', ' ', messages['title'][i])\n    # lowering words in the particular sentences.\n    review = review.lower()\n    review = review.split()\n    \n    review = [ps.stem(word) for word in review if not word in stopwords.words('english')]\n    review = ' '.join(review)\n    corpus.append(review)","8b2dd677":"corpus","8fda7742":"onehot_repr=[one_hot(words,voc_size)for words in corpus] ","48719050":"onehot_repr","1fed485f":"sent_length = 20\nembedded_docs = pad_sequences(onehot_repr,padding='pre',maxlen=sent_length)\nprint(embedded_docs)","1549a0f6":"embedded_docs[0]","5631a9c5":"# Creating the model\nembedding_vector_features = 40\nmodel = Sequential()\nmodel.add(Embedding(voc_size,embedding_vector_features,input_length = sent_length))\nmodel.add(LSTM(100))\nmodel.add(Dense(1,activation='sigmoid'))\nmodel.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])","106a6bb0":"model.summary()","d96708b6":"import numpy as np","90964512":"X_final = np.array(embedded_docs)\ny_final = np.array(y)","8603f3f5":"X_final.shape","d026b949":"y_final.shape","fcb58414":"from sklearn.model_selection import train_test_split","1a956b08":"X_train, X_test, y_train, y_test = train_test_split(X_final, y_final, test_size=0.33, random_state=42)","238aaaff":"model.fit(X_train,y_train,validation_data = (X_test,y_test), epochs = 10,batch_size = 64)","8937792e":"y_pred = model.predict_classes(X_test)","689bb882":"from sklearn.metrics import confusion_matrix","30706431":"confusion_matrix(y_test,y_pred)","0ab8eb2d":"from sklearn.metrics import accuracy_score","3f792b7d":"accuracy_score(y_test,y_pred)","da036445":"# EMBEDDING REPRESENTATION","379a5990":"# ONE HOT REPRESENTATION","2ff4bea4":"# IMPORTING THE LIBRARIES","13ca8f1d":"# MODEL TRAINING","bf871543":"# PERFORMANCE METRICS AND ACCURACY","01836ddf":"# IMPORTING THE DATASET"}}