{"cell_type":{"e2b5926d":"code","b4ac752c":"code","5b8d5705":"code","1050d4c3":"code","8811eb0d":"code","e51d9010":"code","4900ed15":"code","ac3463d9":"code","9f2df6e9":"code","d1a5fd66":"code","a0dc65d9":"code","887217b8":"code","f7eafdea":"code","52fffdfc":"code","d9a48dfe":"code","c7c2042d":"code","302b1f63":"code","2bed817f":"code","809527e8":"code","b8e34e4d":"code","87bded64":"code","1d8b744e":"code","69779b86":"code","b17a0071":"code","45764f51":"code","cc0f8091":"code","7ddb585a":"code","aff0f845":"markdown"},"source":{"e2b5926d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport math\nimport gdelt as gd\n\nimport matplotlib.pyplot as plt","b4ac752c":"gs = gd.gdelt(version=2)","5b8d5705":"df=gs.Search(date=['2019 04 01','2019 04 03'],table='gkg',output='df',normcols=True)","1050d4c3":"def checkFloatNan(x):   \n    if type(x).__name__ == 'float':\n        return math.isnan(x)\n    else:\n        return False        \n    ","8811eb0d":"df['IsThemeNaN'] = df['themes'].apply(checkFloatNan)\n\ndf = df[df['IsThemeNaN']==False][['gkgrecordid', 'date', 'sourcecollectionidentifier', 'sourcecommonname',\n       'documentidentifier', 'counts', 'v2counts', 'themes', 'v2themes',\n       'locations', 'v2locations', 'persons', 'v2persons', 'organizations',\n       'v2organizations', 'v2tone', 'dates', 'gcam', 'sharingimage',\n       'relatedimages', 'socialimageembeds', 'socialvideoembeds', 'quotations',\n       'allnames', 'amounts', 'translationinfo', 'extras']]","e51d9010":"df.head()","4900ed15":"df.shape","ac3463d9":"print(df['sourcecollectionidentifier'].value_counts())\n\nprint('1 = WEB')","9f2df6e9":"df['sourcecommonname'].value_counts()[:5]#Web Domain names","d1a5fd66":"df['documentidentifier'][:5]#Complete Urls","a0dc65d9":"df['documentidentifier'][:1][0]","887217b8":"print(df[~df['counts'].isnull()]['counts'][2:5].reset_index(drop=True)[0])\nprint('-------------')\nprint(df[~df['v2counts'].isnull()]['v2counts'][2:5].reset_index(drop=True)[0])","f7eafdea":"df['themes'][0].split(';')","52fffdfc":"df['v2themes'][0].split(';')#CharOffset","d9a48dfe":"print(df[~df['locations'].isnull()]['locations'].reset_index(drop=True)[0])\nprint('-----------------')\nprint(df[~df['v2locations'].isnull()]['v2locations'].reset_index(drop=True)[0])","c7c2042d":"print(df[~df['persons'].isnull()]['persons'][:5].reset_index(drop=True)[0])\nprint('--------------')\nprint(df[~df['v2persons'].isnull()]['v2persons'][:5].reset_index(drop=True)[0])#Char Offset","302b1f63":"print(df[~df['organizations'].isnull()]['organizations'].reset_index(drop=True)[0])\nprint('----------------')\nprint(df[~df['v2organizations'].isnull()]['v2organizations'].reset_index(drop=True)[0])#Char Offset","2bed817f":"df['v2tone'].reset_index(drop=True)[0]#between -10 and +10,Positive Score 0-100,Negative Score 0- 100,Polarity score,Ref Den,Ref Den,Word Count.","809527e8":"df['sharingimage'].reset_index(drop=True)[1]#image","b8e34e4d":"df[~df['relatedimages'].isnull()]['relatedimages'].reset_index(drop=True)[0]","87bded64":"df[~df['socialimageembeds'].isnull()]['socialimageembeds'].reset_index(drop=True)[0]","1d8b744e":"df[~df['socialvideoembeds'].isnull()]['socialvideoembeds'].reset_index(drop=True)[0]","69779b86":"df[~df['quotations'].isnull()]['quotations'].reset_index(drop=True)[0]#OFfset|length|verb|Actual Quote","b17a0071":"df[~df['allnames'].isnull()]['allnames'].reset_index(drop=True)[0]#names#offset","45764f51":"df[~df['amounts'].isnull()]['amounts'].reset_index(drop=True)[0]#Amount,object,offset","cc0f8091":"df[~df['translationinfo'].isnull()]['translationinfo']#blank for documents originally in English\n#SRCLC. This is the Source Language Code,ENG. This is a textual citation string that indicates the engine(","7ddb585a":"df['extras'].reset_index(drop=True)[1]#XML","aff0f845":"Documentation -http:\/\/data.gdeltproject.org\/documentation\/GDELT-Global_Knowledge_Graph_Codebook-V2.1.pdf "}}