{"cell_type":{"889714bb":"code","621463fa":"code","95b215a4":"code","a960ea05":"code","01b9cf68":"code","723fad55":"code","95e8556c":"code","2497da92":"code","b813d18c":"code","f10ecc06":"code","e903876a":"code","36e4d813":"code","e3e1f395":"code","03edf8c1":"markdown"},"source":{"889714bb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","621463fa":"#Importing required packages.\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestClassifier\n#from sklearn.svm import SVC\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\n%matplotlib inline","95b215a4":"#Loading dataset\nrwine = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')\n#Let's check how the data is distributed\nrwine.head()","a960ea05":"#knowing number of features and data size\nrow,col=rwine.shape\nprint(row,\",\",col)","01b9cf68":"#Data Information \nrwine.info()\n# There is no null values, and no categorical data","723fad55":"#knowing the number of red wine quality classes\nrwine['quality'].value_counts()","95e8556c":"#Making binary classificaion for the target by dividing wine as g for good and b for bad.\n#Dividing wine as good and bad by giving the limit for the quality\nbins = (2, 5.5, 8)\ngroups = ['b', 'g']\nrwine['quality'] = pd.cut(rwine['quality'], bins = bins, labels = groups)","2497da92":"L_quality = LabelEncoder()\nrwine['quality'] = L_quality.fit_transform(rwine['quality'])\nrwine['quality'].value_counts()","b813d18c":"#Using Pearson Correlation\nplt.figure(figsize=(12,10))\ncor = rwine.corr()\nsns.heatmap(cor, annot=True, cmap=plt.cm.Reds)\nplt.show()","f10ecc06":"#Correlation with output variable\ncor_target = abs(cor[\"quality\"])\n#Selecting highly correlated features\nrelevant_features = cor_target[cor_target>0.2]\nrelevant_features","e903876a":"rwine=rwine.filter(items=['volatile acidity', 'citric acid','sulphates','alcohol','quality'])\nrwine.head()","36e4d813":"X = rwine.drop('quality', axis = 1)\ny = rwine['quality']\n##Train and Test splitting of data \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)","e3e1f395":"#Applying Standard scaling to get optimized result\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.fit_transform(X_test)\nrfc = RandomForestClassifier()\nrfc.fit(X_train, y_train)\npred_rfc = rfc.predict(X_test)\n#Let's see how our model performed\nprint(classification_report(y_test, pred_rfc))","03edf8c1":"## Features Selection"}}