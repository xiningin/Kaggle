{"cell_type":{"e6cb936f":"code","7050a62d":"code","76f34de0":"code","22459809":"code","e3343119":"code","acbda51e":"code","af8c3fea":"code","1b8c8670":"code","7c71b382":"code","7434dc9c":"code","671b0e18":"code","844f7e87":"code","a3a1b393":"code","e9f33eee":"code","75a83182":"code","97c634dd":"code","b68f17a1":"code","b5241a74":"code","b86193b0":"code","20ab1388":"code","c4c9bae7":"markdown","33b34720":"markdown","73794d16":"markdown","dda4ee0b":"markdown","2f3e8fd7":"markdown","3ef18d7d":"markdown","9dd7f50a":"markdown","8ac347b2":"markdown","74328333":"markdown","0e613c60":"markdown"},"source":{"e6cb936f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7050a62d":"import os\nimport json\nimport shutil\nfrom PIL import Image","76f34de0":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.callbacks import ReduceLROnPlateau\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.applications import MobileNetV2\nfrom tensorflow.keras.applications.resnet import preprocess_input\nfrom tensorflow.keras.metrics import Precision, Recall\n\nprint(f'tf version - {tf.__version__}')","22459809":"IMAGE_PATH = '..\/input\/plant-pathology-small-images150x150\/train_imgs'","e3343119":"train = pd.read_csv('..\/input\/plant-pathology-2021-fgvc8\/train.csv')\ntrain","acbda51e":"Image.open(os.path.join('..\/input\/plant-pathology-2021-fgvc8\/train_images', train[train.labels == 'rust'].image.iloc[0]))","af8c3fea":"Image.open(os.path.join('..\/input\/plant-pathology-2021-fgvc8\/train_images', train[train.labels == 'scab frog_eye_leaf_spot'].image.iloc[0]))","1b8c8670":"len(train.labels.unique())","7c71b382":"train.labels.value_counts()","7434dc9c":"CLASSES = train['labels'].unique().tolist()\nBATH_SIZE = 128\nEPOCH = 1","671b0e18":"data_generator = ImageDataGenerator(\n    validation_split=0.15,\n)","844f7e87":"train_data_loader = data_generator.flow_from_dataframe(\n    train,\n    directory=IMAGE_PATH,\n    classes=CLASSES,\n    x_col=\"image\",\n    y_col=\"labels\",\n    target_size=(150, 150),\n    subset='training'\n)","a3a1b393":"val_data_loader = data_generator.flow_from_dataframe(\n    train,\n    directory=IMAGE_PATH,\n    classes=CLASSES,\n    x_col=\"image\",\n    y_col=\"labels\",\n    target_size=(150, 150),\n    subset='validation'\n)","e9f33eee":"dict_classes = train_data_loader.class_indices","75a83182":"base = tf.keras.applications.DenseNet169(\n                    weights='..\/input\/keras-pretrained-imagenet-weights\/densenet169_imagenet_1000_no_top.h5',\n                    include_top=False, \n                    pooling='avg', \n                    input_shape=(150, 150, 3))\n\nmodel = Sequential()\nmodel.add(base)\nmodel.add(layers.Dense(12, activation='softmax'))","97c634dd":"model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy', 'Precision', 'Recall'])\nmodel.summary()","b68f17a1":"history = model.fit(train_data_loader, \n          validation_data=val_data_loader, \n          batch_size=BATH_SIZE, epochs=EPOCH)","b5241a74":"test_dir = '\/kaggle\/input\/plant-pathology-2021-fgvc8\/test_images\/'\ntest_df = pd.DataFrame()\ntest_df['image'] = os.listdir(test_dir)\n\ntest_set = data_generator.flow_from_dataframe(dataframe=test_df,\n                                    directory=test_dir,\n                                    x_col=\"image\",\n                                    y_col=None,\n                                    batch_size=64,\n                                    seed=42,\n                                    shuffle=False,\n                                    class_mode=None,\n                                    target_size=(150,150))\n\npred = model.predict(test_set).tolist()\n\nfor i in range(len(pred)):\n    pred[i] = np.argmax(pred[i])\n\n    \ndef get_key(val):\n    for key, value in dict_classes.items():\n        if val == value:\n            return key\n        \n\nfor i in range(len(pred)):\n    pred[i] = get_key(pred[i])","b86193b0":"test_df['labels'] = pred\ntest_df","20ab1388":"test_df.to_csv('submission.csv', index=False)","c4c9bae7":"\u041c\u043d\u043e\u0433\u0438\u0435 \u043f\u0440\u0435\u0434\u043e\u0431\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u043e\u0431\u0443\u0447\u0430\u043b\u0438\u0441\u044c \u043d\u0430 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 ImageNet, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 14,197,122 \u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a - \u044d\u0442\u043e \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0437\u043c\u0435\u0447\u0430\u043d\u043d\u044b\u0445 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435\u043c, \u043e\u0442\u043d\u043e\u0441\u044f\u0449\u0438\u0445\u0441\u044f \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u043a 22 \u0442\u044b\u0441\u044f\u0447\u0430\u043c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439. \u041f\u0440\u043e\u0432\u043e\u0434\u0438\u043b\u0441\u044f \u00ab\u041a\u0440\u0443\u043f\u043d\u043e\u043c\u0430\u0441\u0448\u0442\u0430\u0431\u043d\u044b\u0439 \u043a\u043e\u043d\u043a\u0443\u0440\u0441 \u0432\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u043d\u0438\u044f ImageNet\u00bb (ILSVRC2013). ILSVRC \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u043e\u0434\u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e ImageNet \u0438\u0437 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e 1000 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 1000 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439.\n\n<img src='https:\/\/avatars.mds.yandex.net\/get-zen_doc\/127510\/pub_5c33ad37c906e200abbace3b_5c33adfbe5e73b00aad095a1\/scale_1200'>","33b34720":"## ResNet'15\n\n\u0414\u043e \u044d\u0442\u043e\u0433\u043e \u0431\u043e\u0440\u043e\u043b\u0438\u0441\u044c \u0441 \u0437\u0430\u0442\u0443\u0445\u0430\u044e\u0449\u0438\u043c\u0438 \u0433\u0440\u0430\u0434\u0438\u0435\u043d\u0442\u0430\u043c\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0430 \u0441\u0447\u0435\u0442 \u0432\u0432\u043e\u0434\u0430 \u0434\u0440\u0443\u0433\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0430\u043a\u0442\u0438\u0432\u0430\u0446\u0438\u0438.\n\n\u0427\u0442\u043e\u0431\u044b \u043f\u0440\u0435\u043e\u0434\u043e\u043b\u0435\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443 \u0437\u0430\u0442\u0443\u0445\u0430\u044e\u0449\u0438\u0445 \u0433\u0440\u0430\u0434\u0438\u0435\u043d\u0442\u043e\u0432, Microsoft \u0432\u0432\u0435\u043b\u0430 \u0433\u043b\u0443\u0431\u043e\u043a\u0443\u044e \u00ab\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u0443\u044e\u00bb \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f.\n\n<img src='https:\/\/drive.google.com\/uc?export=view&id=1RGJQl4-SmysYbAqwcy8Lm5qEPbiebZOO'>\n\n\u0421\u043c\u044b\u0441\u043b:\n\n$y = f(x) + x $<br>\n$dy = df(x) + 1 $<br>\n<h3>$\\frac{dL}{dx} = \\frac{dL}{dy} \\frac{dy}{dx} = \\frac{dL}{dy}(df(x) + 1 )$<\/h3><br>\n\n\u0422\u043e \u0435\u0441\u0442\u044c \u0433\u0440\u0430\u0434\u0438\u0435\u043d\u0442\u044b \u0432\u0441\u0451 \u0440\u0430\u0432\u043d\u043e \u0431\u0443\u0434\u0443\u0442 \u043f\u0440\u043e\u0442\u0435\u043a\u0430\u0442\u044c \u0434\u0430\u043b\u044c\u0448\u0435 \u0432 \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u043e\u043c \u0432\u0438\u0434\u0435.\n\n\n\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 (shortcut connections, residual connections) \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u044e\u0442 \u043e\u0434\u0438\u043d \u0438\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u043b\u043e\u0435\u0432 \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442 \u0441\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u0432.\n\n<img src='https:\/\/drive.google.com\/uc?export=view&id=1JcQDIjA-97L2xs3o-JD4SWBld9J0OMW-'>\n\n\u0415\u0449\u0435 \u043e\u0434\u043d\u0430 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u044c ResNet, \u0447\u0442\u043e \u0432 \u043a\u043e\u043d\u0446\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0432\u044f\u0437\u043d\u044b\u0435 \u0441\u043b\u043e\u0438, \u043f\u0440\u0438\u0447\u0438\u043d\u0430 \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u0443\u0436\u0435 \u0438 \u0442\u0430\u043a \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0441\u043b\u043e\u0436\u043d\u0430\u044f \u043d\u0435\u0439\u0440\u043e\u043d\u043d\u0430\u044f \u0441\u0435\u0442\u044c, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0443\u0436\u0435 \u0438 \u0442\u0430\u043a \u043c\u043e\u0433\u043b\u0430 \u0440\u0435\u0448\u0438\u0442\u044c\u0441\u044f \u0437\u0430\u0434\u0430\u0447\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0431\u044b\u0447\u043d\u0430 \u043f\u0435\u0440\u0435\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043f\u043e\u043b\u043d\u043e\u0441\u0432\u044f\u0437\u043d\u044b\u0439 \u0441\u043b\u043e\u0439.","73794d16":"\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u044d\u0442\u043e\u0439 \u0441\u0435\u0442\u0438 \u043f\u0440\u0438\u0434\u0443\u043c\u0430\u043b\u0438 \u0441\u043f\u043e\u0441\u043e\u0431, \u0447\u0442\u043e\u0431\u044b \u0433\u0440\u0430\u0434\u0438\u0435\u043d\u0442\u044b \u043d\u0435 \u0437\u0430\u0442\u0443\u0445\u0430\u043b\u0438: \u0432\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u043d\u0430 \u043f\u0440\u043e\u0442\u044f\u0436\u0435\u043d\u0438\u0438 \u0432\u0441\u0435\u0439 \u0441\u0435\u0442\u0438, \u0447\u0442\u043e\u0431\u044b \u043a\u043e\u0433\u0434\u0430 \u0433\u0440\u0430\u0434\u0438\u0435\u043d\u0442 \u043e\u0442 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u044b\u0445\u043e\u0434\u0430 \u043d\u0430\u0447\u0438\u043d\u0430\u043b \u0437\u0430\u0442\u0443\u0445\u0430\u0442\u044c, \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u043b\u0441\u044f \u0433\u0440\u0430\u0434\u0438\u0435\u043d\u0442 \u0441\u043e \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0432\u044b\u0445\u043e\u0434\u0430.\n\n<img src='https:\/\/drive.google.com\/uc?export=view&id=1q3oJXpwGStYit5Ii13DIsexVqxwIjyjE'>","dda4ee0b":"<img src='https:\/\/drive.google.com\/uc?export=view&id=1qqbZ6iWZaD6LMjuIJ85mBGYpBwi0w-HL'>","2f3e8fd7":"\u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0441\u043b\u043e\u0435\u0432 \u0441\u0432\u0435\u0440\u0442\u043a\u0438 \u0438 \u043f\u0443\u043b\u0438\u043d\u0433\u0430\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435.png](attachment:ee67c98c-0cd5-4b45-a50b-1850d90cdb65.png)","3ef18d7d":"## LeNet'98\n\n\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 LeNet5:\n\n- \u0421\u0432\u0451\u0440\u0442\u043e\u0447\u043d\u0430\u044f \u043d\u0435\u0439\u0440\u043e\u0441\u0435\u0442\u044c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0449\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0438\u0437 \u0442\u0440\u0451\u0445 \u0441\u043b\u043e\u0451\u0432: \u0441\u043b\u043e\u0438 \u0441\u0432\u0451\u0440\u0442\u043a\u0438 (convolution), \u0441\u043b\u043e\u0438 \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pooling) \u0438 \u0441\u043b\u043e\u0438 \u043d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0441\u0442\u0438 (non-linearity) \u2013> \u0441 \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u041b\u0435\u043a\u0443\u043d\u0430 \u044d\u0442\u043e, \u043f\u043e\u0436\u0430\u043b\u0443\u0439, \u043e\u0434\u043d\u0430 \u0438\u0437 \u0433\u043b\u0430\u0432\u043d\u044b\u0445 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0435\u0439 \u0433\u043b\u0443\u0431\u043e\u043a\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043a \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u043c.\n- \u041f\u043e\u0434\u0432\u044b\u0431\u043e\u0440\u043a\u0430 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0443\u0441\u0440\u0435\u0434\u043d\u0435\u043d\u0438\u044f \u043a\u0430\u0440\u0442.\n- \u041d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0441\u0442\u044c \u0432 \u0432\u0438\u0434\u0435 \u0433\u0438\u043f\u0435\u0440\u0431\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0442\u0430\u043d\u0433\u0435\u043d\u0441\u0430 \u0438\u043b\u0438 \u0441\u0438\u0433\u043c\u043e\u0438\u0434.\n- \u0424\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0432 \u0432\u0438\u0434\u0435 \u043c\u043d\u043e\u0433\u043e\u0441\u043b\u043e\u0439\u043d\u043e\u0439 \u043d\u0435\u0439\u0440\u043e\u0441\u0435\u0442\u0438.\n\n<img src='https:\/\/drive.google.com\/uc?exoprt=view&id=1pPe1aBh7ySg89cxbWEZ07iabvvXABUxd'>","9dd7f50a":"## AlexNet'12\n\n\u0412 AlexNet \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0439 LeNet \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0432 \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u0431\u043e\u043b\u0435\u0435 \u043a\u0440\u0443\u043f\u043d\u0443\u044e \u043d\u0435\u0439\u0440\u043e\u0441\u0435\u0442\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u0430 \u0438\u0437\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u043e\u0436\u043d\u044b\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0438 \u0438\u0445 \u0438\u0435\u0440\u0430\u0440\u0445\u0438\u0438. \u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438:\n\n- \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u043b\u043e\u043a\u043e\u0432 ReLU \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0441\u0442\u0435\u0439.\n- \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 max pooling, \u0447\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u044d\u0444\u0444\u0435\u043a\u0442\u043e\u0432 \u0443\u0441\u0440\u0435\u0434\u043d\u0435\u043d\u0438\u044f average pooling.\n\n\u041d\u0430 \u0432\u0445\u043e\u0434 \u0438\u0434\u0443\u0442 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 224\u0445224, \u0435\u0441\u0442\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u043d\u0435 \u0432\u0441\u0435 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u0442\u0430\u043a\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0441\u0436\u0430\u0442\u044c \u0438\u0445 \u0434\u043e \u043d\u0443\u0436\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430.\n\n<img src='https:\/\/drive.google.com\/uc?export=view&id=1sjEftFGiJ50-m3VevamktVznsx6bY3Yw' width=700>","8ac347b2":"<img src='https:\/\/media.proglib.io\/wp-uploads\/2018\/06\/2.gif'>","74328333":"## VGG'14\n\u0412 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u0432 \u041e\u043a\u0441\u0444\u043e\u0440\u0434\u0435 VGG-\u0441\u0435\u0442\u044f\u0445 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0441\u0432\u0451\u0440\u0442\u043e\u0447\u043d\u043e\u043c \u0441\u043b\u043e\u0435 \u0432\u043f\u0435\u0440\u0432\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u043b\u0438 \u0444\u0438\u043b\u044c\u0442\u0440\u044b 3\u04453 \u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043b\u0438 \u044d\u0442\u0438 \u0441\u043b\u043e\u0438 \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441\u0432\u0451\u0440\u0442\u043e\u043a.\n\n\u0412\u043c\u0435\u0441\u0442\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c\u044b\u0445 \u0432 AlexNet \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432 9\u04459 \u0438 11\u044511 \u0441\u0442\u0430\u043b\u0438 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u0431\u043e\u043b\u0435\u0435 \u043c\u0435\u043b\u043a\u0438\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u0442\u0430\u0440\u0430\u043b\u0438\u0441\u044c \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0430\u0432\u0442\u043e\u0440\u044b LeNet. \u041d\u043e \u0431\u043e\u043b\u044c\u0448\u0438\u043c \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u043c VGG \u0441\u0442\u0430\u043b\u0430 \u043d\u0430\u0445\u043e\u0434\u043a\u0430, \u0447\u0442\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0432\u0451\u0440\u0442\u043e\u043a 3\u04453, \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0451\u043d\u043d\u044b\u0445 \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c, \u043c\u043e\u0433\u0443\u0442 \u044d\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u043a\u0440\u0443\u043f\u043d\u044b\u0435 \u0441\u0432\u0435\u0440\u0442\u043a\u0438, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 5\u04455 \u0438\u043b\u0438 7\u04457.\n\n\u041a\u0430\u0441\u043a\u0430\u0434 \u0438\u0437 \u0434\u0432\u0443\u0445 \u0441\u0432\u0435\u0440\u0442\u043e\u043a 3\u04453 \u0440\u0430\u0432\u0435\u043d \u0441\u0432\u0435\u0440\u0442\u043a\u0435 5\u04455, \u043d\u043e \u0441 \u043c\u0435\u043d\u044c\u0448\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432.\n(5\u04455 = 25 + 1 = 26; 3x3 + 3x3 + 2 = 20)\n\n<img src='https:\/\/drive.google.com\/uc?export=view&id=1GvrtEDocJ3xp9RKqgQu0-JnyTssqZhzV'>","0e613c60":"## GoogLeNet\n\n\u042d\u0442\u0430 \u0441\u0435\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 Inception \u0431\u043b\u043e\u043a\u0438. \u042d\u0442\u043e \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044f \u0441\u0432\u0451\u0440\u0442\u043e\u0447\u043d\u044b\u0445 \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432 1\u04451, 3\u04453 \u0438 5\u04455. \u041d\u043e \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0441\u0432\u0451\u0440\u0442\u043e\u0447\u043d\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432 1\u04451 \u0434\u043b\u044f \u0443\u043c\u0435\u043d\u044c\u0448\u0435\u043d\u0438\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043a\u0430\u043d\u0430\u043b\u043e\u0432 \u043f\u0435\u0440\u0435\u0434 \u043f\u043e\u0434\u0430\u0447\u0435\u0439 \u0432 \u0431\u043e\u043b\u0435\u0435 \u00ab\u0434\u043e\u0440\u043e\u0433\u0438\u0435\u00bb \u0441\u0432\u0435\u0440\u0442\u043e\u0447\u043d\u044b\u0435 \u0431\u043b\u043e\u043a\u0438. \u041e\u0431\u044b\u0447\u043d\u043e \u044d\u0442\u0443 \u0447\u0430\u0441\u0442\u044c \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442 bottleneck. \u0412\u043c\u0435\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0432\u0435\u0440\u0442\u043a\u0438 5\u04455 \u043d\u0430 \u043d\u0430\u0448\u0435\u043c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438, \u043c\u043e\u0436\u0435\u043c \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0439\u0442\u0438\u0441\u044c \u0441\u0432\u0435\u0440\u0442\u043a\u043e\u0439 1\u04451 \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u0432 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u043d\u0430\u043b\u043e\u0432, \u0430 \u0437\u0430\u0442\u0435\u043c \u043f\u043e \u043d\u0438\u043c \u043f\u0440\u043e\u0439\u0442\u0438\u0441\u044c \u0441\u0432\u0435\u0440\u0442\u043a\u043e\u0439 5\u04455, \u0432\u0435\u0440\u043d\u0443\u0432 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u043d\u0430\u043b\u043e\u0432. \u041e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0431\u0443\u0434\u0435\u0442 \u043c\u0435\u043d\u044c\u0448\u0435, \u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0431\u0443\u0434\u0435\u0442 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439.\n\n<img src='https:\/\/drive.google.com\/uc?export=view&id=1hgoTi6d-pdRPHgnfVGssQIQXBUdrkWrk'>"}}