{"cell_type":{"2d77262b":"code","9d35a50a":"code","d3467aa3":"code","ec5c6b9c":"code","b291f9bf":"code","56159445":"code","c791d6f8":"code","9ec59a5d":"code","d33bbf7b":"markdown","030d9cd8":"markdown","29844913":"markdown","9021e1e0":"markdown","9ad0dcfd":"markdown","78825f07":"markdown","8c2e7ae6":"markdown","9a5b4b6b":"markdown","4f80b86b":"markdown"},"source":{"2d77262b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9d35a50a":"import numpy as np\nimport math as m\nimport matplotlib.pyplot as plt","d3467aa3":"image=plt.imread('..\/input\/image-to-work-on\/blur.jpeg')\nimage0= np.copy(image)\nprint(\"Image Shape :\",image.shape)\nprint(\"Image Dimensions :\", image.ndim)\nprint(\"Image Datatype :\", image.dtype)\nplt.imshow(image)","ec5c6b9c":"print(\"Size of image :\", image.shape[0],\"x\", image.shape[1])\n#Taking co-ordinates\nprint('Enter the left corner and side of the square')\nlc,side=int(input()), int(input())\n#image1 = np.zeros((image.shape[0],image.shape[1],image.shape[2]),dtype = image.dtype)\nimage1= np.copy(image)\nimage1[lc:lc+side,lc:lc+side]=[255,0,0]\nplt.figure()\nplt.imshow(image)\nplt.figure()\nplt.imshow(image1)","b291f9bf":"print(\"Size of image :\", image.shape[0],\"x\", image.shape[1])\n#Taking co-ordinates\nprint(\"Enter the centre coordinate and radius\")\nc,r = int(input()),int(input())\nimage2= np.copy(image)\nfor i in range(r):    \n    for angle in range(0,360):\n        image2[int(c+r*m.sin(m.radians(angle))),int(c+r*m.cos(m.radians(angle)))]=[255,0,0]\n    r=r-1\nplt.figure()\nplt.imshow(image)    \nplt.figure()\nplt.imshow(image2)","56159445":"print(\"Size of image :\", image.shape[0],\"x\", image.shape[1])\n#Taking co-ordinates\nprint('Enter the left corner, side and width of the square')\nl,s,t=int(input()),int(input()),int(input())\nimage3=np.copy(image)\nimage3[l:l+t,l:l+s]=[255,0,0]\nimage3[l:l+s,l:l+t]=[255,0,0]\nimage3[l+s:l+s+t,l:l+s+t]=[255,0,0]\nimage3[l:l+s,l+s:l+s+t]=[255,0,0]\nplt.figure()\nplt.imshow(image)\nplt.figure()\nplt.imshow(image3)","c791d6f8":"# print(\"Size of image :\", image.shape[0],\"x\", image.shape[1])\n#Taking co-ordinates\nprint('Enter the centre, radius and thickness of the circle')\nc,r,t = int(input()),int(input()),int(input())\nimage4=np.copy(image)\nfor i in range(t):    \n    for angle in range(0,360):\n        image4[int(c+r*m.sin(m.radians(angle))),int(c+r*m.cos(m.radians(angle)))]=[255,0,0]\n    r=r-1\nplt.figure()\nplt.imshow(image)\nplt.figure()\nplt.imshow(image4)","9ec59a5d":"print(\"Size of image :\", image.shape[0],\"x\", image.shape[1])\nr,c,rgb=image.shape[0],image.shape[1],image.shape[2]\nimage5=np.zeros((c,r,rgb),dtype=image.dtype)\nfor i in range(r):\n    for j in range(c):\n        image5[j][r-i-1]=image[i][j]\n\n        \nr,c,rgb=image5.shape\nimage6=np.zeros((c,r,rgb),dtype=image5.dtype)    \nfor i in range(r):\n  for j in range(c):\n    image6[j][r-1-i]=image5[i][j]\nplt.imshow(image6)","d33bbf7b":"# Creating a hollow square with inputed thickness on an image","030d9cd8":"# Importing Libraries","29844913":"# Creating a hollow square with inputed thickness on an image","9021e1e0":"# Reading the image and showing it on the screen","9ad0dcfd":" # ****PLAYING WITH MATRICES****\nAs per my understanding, basics are the most important to master. T show that my basics in python are clear and strong, I have completed this assignment\/project to start my journey with Computer Vision.","78825f07":"# Rotating the image by 180 degrees","8c2e7ae6":"**The project has been completed without the use of OpenCV**","9a5b4b6b":"# Creating a filled square in an image","4f80b86b":"# Creating a filled circle in an image"}}