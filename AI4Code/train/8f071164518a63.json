{"cell_type":{"c8617d52":"code","a428d589":"code","f5f7c5c6":"code","94185a1c":"code","0add3ec2":"code","09e5c699":"code","13e7e747":"code","962e8cf9":"code","632757f9":"code","39f86390":"code","a64f77b9":"code","259f4ecb":"code","e9ddac8b":"code","bed3a2ac":"code","c805ae23":"code","92b41bf7":"code","157e8a39":"code","dd7ca1cb":"code","bd69048d":"code","108f3859":"code","3ce177d6":"code","157159c0":"code","e7096c5f":"code","11820e44":"code","a349a2d7":"code","1165a724":"code","809d17cb":"code","c25bac6c":"code","2743d757":"code","bf1bd5a0":"code","e09e7a54":"code","1bbfbfe0":"code","af8b889e":"code","ec4f2538":"code","59e8161c":"code","53e2f14a":"code","8e59d5d6":"code","8d4b55c7":"code","2f4f09f5":"code","bd651cee":"code","68f4a0e6":"code","690ae128":"code","b9604a3b":"code","08ef5257":"code","ef8a0c40":"code","e394c3c7":"code","a599d61c":"code","5674ddaf":"markdown","93995a8e":"markdown","ac62e6ba":"markdown","9130989c":"markdown","9f3e7fb4":"markdown","07ae789a":"markdown","0c72e18d":"markdown","86e02612":"markdown","950e0983":"markdown","c22397eb":"markdown","8c0aef38":"markdown","bd4da8e2":"markdown","4dd63056":"markdown","9558adb5":"markdown","bf02ca88":"markdown","b61345f3":"markdown","d21a7c53":"markdown"},"source":{"c8617d52":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")","a428d589":"df = pd.read_csv(\"..\/input\/insurance\/insurance.csv\")","f5f7c5c6":"df.head()","94185a1c":"df.describe().T","0add3ec2":"df.isnull().sum()","09e5c699":"df.info()","13e7e747":"df.columns","962e8cf9":"categorical = ['sex','smoker', 'region']","632757f9":"def bar_plot(variable):\n    # get feature\n    var = df[variable]\n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize = (10,5))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()","39f86390":"for c in categorical:\n    bar_plot(c)","a64f77b9":"numerical = ['age', 'bmi', 'children', 'charges']","259f4ecb":"def plot_hist(variable):\n    plt.figure(figsize = (10,5))\n    plt.hist(df[variable], bins = 20)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","e9ddac8b":"for c in numerical:\n    plot_hist(c)","bed3a2ac":"plt.subplots(figsize=(8,8))\nsns.heatmap(df.corr(), annot =True);","c805ae23":"# bmi seems to have correlation with charges (0.2)\n# age seems to have correlation with charges (0.3)","92b41bf7":"df[[\"sex\",\"charges\"]].groupby([\"sex\"], as_index = False).mean().sort_values(by=\"charges\",ascending = False)","157e8a39":"g = sns.catplot(x = \"sex\", y = \"charges\", data = df, kind = \"bar\", height = 6)\ng.set_ylabels(\"charges\")\nplt.show()","dd7ca1cb":"sns.FacetGrid(df,hue = \"sex\",height = 5).map(sns.kdeplot, \"charges\", shade = True ).add_legend();","bd69048d":"df[[\"smoker\",\"charges\"]].groupby([\"smoker\"], as_index = False).mean().sort_values(by=\"charges\",ascending = False)","108f3859":"g = sns.catplot(x = \"smoker\", y = \"charges\", data = df, kind = \"bar\", height = 6)\ng.set_ylabels(\"charges\")\nplt.show()","3ce177d6":"sns.FacetGrid(df,hue = \"smoker\",height = 5).map(sns.kdeplot, \"charges\", shade = True ).add_legend();","157159c0":"df[[\"region\",\"charges\"]].groupby([\"region\"], as_index = False).mean().sort_values(by=\"charges\",ascending = False)","e7096c5f":"g = sns.catplot(x = \"region\", y = \"charges\", data = df, kind = \"bar\", height = 6)\ng.set_ylabels(\"charges\")\nplt.show()","11820e44":"# region seems not effective","a349a2d7":"df[[\"children\",\"charges\"]].groupby([\"children\"], as_index = False).mean().sort_values(by=\"charges\",ascending = False)","1165a724":"g = sns.catplot(x = \"children\", y = \"charges\", data = df, kind = \"bar\", height = 6)\ng.set_ylabels(\"charges\")\nplt.show()","809d17cb":"sns.FacetGrid(df,hue = \"children\",height = 5).map(sns.kdeplot, \"charges\", shade = True ).add_legend();","c25bac6c":"df.head()","2743d757":"df[\"region\"] = df[\"region\"].astype(\"category\")\ndf = pd.get_dummies(df, columns=[\"region\"])\ndf.head()","bf1bd5a0":"df[\"sex\"] = df[\"sex\"].astype(\"category\")\ndf = pd.get_dummies(df, columns=[\"sex\"])\ndf.head()","e09e7a54":"df[\"smoker\"] = df[\"smoker\"].astype(\"category\")\ndf = pd.get_dummies(df, columns=[\"smoker\"])\ndf.head()","1bbfbfe0":"sns.boxplot(x = df[\"bmi\"]);","af8b889e":"Q1 = df[\"bmi\"].quantile(0.25)\nQ3 = df[\"bmi\"].quantile(0.75)\nIQR = Q3 - Q1\nalt_sinir = Q1 - 1.5*IQR\nust_sinir = Q3 + 1.5*IQR\n((df[\"bmi\"] < alt_sinir) | (df[\"bmi\"] > ust_sinir))\nayk\u0131r\u0131_ust = ((df[\"bmi\"] > ust_sinir))\nayk\u0131r\u0131_alt = ((df[\"bmi\"] < alt_sinir))","ec4f2538":"df[\"bmi\"][ayk\u0131r\u0131_ust].index","59e8161c":"df[\"bmi\"][ayk\u0131r\u0131_alt].index","53e2f14a":"df = df.drop(df[\"bmi\"][ayk\u0131r\u0131_ust].index,axis = 0)","8e59d5d6":"df.head()","8d4b55c7":"sns.boxplot(x = df[\"bmi\"]);","2f4f09f5":"df.info()","bd651cee":"from sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\nfrom sklearn.preprocessing import scale\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn import model_selection\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn import neighbors\nfrom sklearn.svm import SVR","68f4a0e6":"y = df[\"charges\"]\nX = df.drop([\"charges\"], axis = 1)\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.3,random_state = 42)","690ae128":"X.head()","b9604a3b":"y.head()","08ef5257":"print(\"X_train shape:\", X_train.shape)\nprint(\"X_test shape:\", X_test.shape)\nprint(\"y_train shape:\", y_train.shape)\nprint(\"y_test shape:\", y_test.shape)","ef8a0c40":"def resultsML (df, y, alg):\n    model = alg().fit(X_train, y_train)\n    y_pred = model.predict(X_test)\n    RMSE = np.sqrt(mean_squared_error(y_test, y_pred))\n    model_name = alg.__name__\n    print(model_name, \"Model Test Error :\", RMSE)\n    return","e394c3c7":"models = [GradientBoostingRegressor,\n          RandomForestRegressor, DecisionTreeRegressor,\n          MLPRegressor, KNeighborsRegressor, SVR]","a599d61c":"for i in models:\n    resultsML (df, \"charges\", i)","5674ddaf":"# Visualization","93995a8e":"## smoker - charges","ac62e6ba":"## bmi","9130989c":"## sex","9f3e7fb4":"## Train\/Test Split","07ae789a":"## smoker","0c72e18d":"## region - charges","86e02612":"# Variable Description","950e0983":"## Categorical Variables","c22397eb":"## region","8c0aef38":"## sex - charges","bd4da8e2":"<a id = \"1\"><\/a>\n# Load and Check Data","4dd63056":"## Results","9558adb5":"# Feature Engineering","bf02ca88":"## Numerical Variables","b61345f3":"# Modelling","d21a7c53":"## children - charges"}}