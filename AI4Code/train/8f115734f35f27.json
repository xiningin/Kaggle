{"cell_type":{"0a20c3e8":"code","db4554e9":"code","1c35126a":"code","b198ae47":"code","d908dfff":"code","5e19dfb1":"markdown","02989e44":"markdown"},"source":{"0a20c3e8":"from google.cloud import bigquery\nclient = bigquery.Client()","db4554e9":"correct_query = \"\"\"\n                SELECT u.id AS id,\n                    MIN(q.creation_date) AS q_creation_date,\n                    MIN(a.creation_date) AS a_creation_date\n                FROM `bigquery-public-data.stackoverflow.users` AS u\n                    FULL JOIN `bigquery-public-data.stackoverflow.posts_answers` AS a\n                        ON u.id = a.owner_user_id \n                    LEFT JOIN `bigquery-public-data.stackoverflow.posts_questions` AS q\n                        ON q.owner_user_id = u.id\n                WHERE u.creation_date >= '2019-01-01' and u.creation_date < '2019-02-01'\n                GROUP BY id\n                \"\"\"\n\ncorrect_result = client.query(correct_query).to_dataframe()\ncorrect_result.count(axis=0)","1c35126a":"another_correct_query = \"\"\"\n                        SELECT u.id AS id,\n                            MIN(q.creation_date) AS q_creation_date,\n                            MIN(a.creation_date) AS a_creation_date\n                        FROM `bigquery-public-data.stackoverflow.users` AS u\n                            LEFT JOIN `bigquery-public-data.stackoverflow.posts_answers` AS a\n                                ON u.id = a.owner_user_id \n                            LEFT JOIN `bigquery-public-data.stackoverflow.posts_questions` AS q\n                                ON q.owner_user_id = u.id\n                        WHERE u.creation_date >= '2019-01-01' and u.creation_date < '2019-02-01'\n                        GROUP BY id\n                        \"\"\"\n\nanother_correct_result = client.query(another_correct_query).to_dataframe()\nanother_correct_result.count(axis=0)","b198ae47":"incorrect_query = \"\"\"\n                  SELECT u.id AS id,\n                      MIN(q.creation_date) AS q_creation_date,\n                      MIN(a.creation_date) AS a_creation_date\n                  FROM `bigquery-public-data.stackoverflow.posts_questions` AS q\n                      FULL JOIN `bigquery-public-data.stackoverflow.posts_answers` AS a\n                          ON q.owner_user_id = a.owner_user_id\n                      RIGHT JOIN `bigquery-public-data.stackoverflow.users` AS u\n                          ON q.owner_user_id = u.id\n                  WHERE u.creation_date >= '2019-01-01' and u.creation_date < '2019-02-01'\n                  GROUP BY id\n                  \"\"\"\n\nincorrect_result = client.query(incorrect_query).to_dataframe()\nincorrect_result.count(axis=0)","d908dfff":"sum(correct_result.q_creation_date.isnull() & correct_result.a_creation_date.notnull())","5e19dfb1":"### What went wrong?\n\nIn the incorrect query, all users who have not yet asked a question will have a missing entry in the \"a_creation_date\" column (even if they have asked an answer!).  This accounts for the 5643 extra missing entries in the result returned by the incorrect query:","02989e44":"### Why?\nLet's look at a visual example of what went wrong with the query in `incorrect_query`.  Notice that the user with ID 3 is an example of a user who provided an answer, but didn't ask a question.\n\n![tut1_plots_you_make](https:\/\/i.imgur.com\/5Xf5TzG.png)"}}