{"cell_type":{"e809acf3":"code","26352b81":"code","10f063cf":"code","4a8e9fb0":"code","cebade3c":"code","5778eefa":"code","6b7ad2e2":"code","bd874f14":"code","55df1524":"code","33003928":"code","c5120795":"code","4c316f6c":"code","1b24578e":"code","495354be":"code","77f2fe2a":"code","c9c56da0":"code","ad6f099f":"code","8c83aa67":"code","a0d14c71":"code","c6124a77":"code","9b31e66a":"code","587b21c2":"code","cb43ae6c":"code","459a96b0":"code","f7d595fa":"code","4bb0a4d6":"code","cdd44ddb":"code","8624a8d9":"code","72066961":"code","f7fb673e":"code","3ea3c22d":"markdown","fba3c3c4":"markdown","5427414e":"markdown","4820c035":"markdown","12268ca1":"markdown","23dd19c8":"markdown","17457029":"markdown","b02d934f":"markdown"},"source":{"e809acf3":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","26352b81":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n","10f063cf":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\n\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\n\nfrom sklearn.metrics import confusion_matrix , classification_report, roc_curve, auc","4a8e9fb0":"ds = pd.read_csv('\/kaggle\/input\/hotel-booking-demand\/hotel_bookings.csv')\nds","cebade3c":"ds.isnull().sum()","5778eefa":"ds.dropna(axis = 0, subset=['country', 'children'], inplace=True)\nmoa = ds['agent'].mean()\nds['agent'].fillna(value=moa, axis=0, inplace=True)\nds.fillna(method='pad', inplace=True)\nds.dropna(inplace=True, subset=['company'])\nds.isnull().sum()","6b7ad2e2":"ds.info()","bd874f14":"plt.hist(ds['hotel'], bins = 3, edgecolor = 'k')\nplt.title('Hotel Name', fontsize = 20)","55df1524":"plt.bar(['0','1'], ds['is_canceled'].value_counts(), edgecolor = 'k', color = 'orange')\nplt.title('Is_Canceled', fontsize = 20)","33003928":"plt.bar(['BB', 'HB', 'FB', 'SC', 'Undefined'], ds['meal'].value_counts(), edgecolor = 'k', color = 'green')\nplt.title('Meals', fontsize = 20)","c5120795":"a = ds['country'].value_counts()\na = a[: 6]\n\n#plt.hist(a , bins = 20, edgecolor = 'k', color = 'gray')\n#plt.title('Country', fontsize = 10)\nplt.bar(['PRT','GBR','FRA','ESP','DEU','ITA'], a, color = 'red', edgecolor = 'k')\nplt.title('Top 6 Countries', fontsize = 20)","4c316f6c":"plt.barh(['Corporate', 'Direct', 'Online TA', 'Offline TA\/TO','Complementary', 'Groups', 'Aviation'], ds['market_segment'].value_counts(), color = 'red', edgecolor = 'k')\nplt.title('Market Segment', fontsize = 20)","1b24578e":"plt.bar(['Check-Out','Canceled','No-Show'], ds['reservation_status'].value_counts(), color = 'pink', edgecolor = 'k')\nplt.title('Reservation Status', fontsize = 20)","495354be":"from sklearn.preprocessing import LabelEncoder\n\nhotel = LabelEncoder()\narrival_date_month = ()\nmeal = LabelEncoder()\ncountry = LabelEncoder()\nmarket_segment = LabelEncoder()\ndistribution_channel = LabelEncoder()\nreserved_room_type = LabelEncoder()\nassigned_room_type = LabelEncoder()\ndeposit_type = LabelEncoder()\ncustomer_type = LabelEncoder()\nreservation_status = LabelEncoder()\nreservation_status_date = LabelEncoder()","77f2fe2a":"ds['hotel_n'] = hotel.fit_transform(ds['hotel'])\n\nds['arrival_date_month_n'] = hotel.fit_transform(ds['arrival_date_month'])\n\nds['meal_n'] = hotel.fit_transform(ds['meal'])\n\nds['country_n'] = hotel.fit_transform(ds['country'])\n\nds['market_segment_n'] = hotel.fit_transform(ds['market_segment'])\n\nds['distribution_channel_n'] = hotel.fit_transform(ds['distribution_channel'])\n\nds['reserved_room_type_n'] = hotel.fit_transform(ds['reserved_room_type'])\n\nds['assigned_room_type_n'] = hotel.fit_transform(ds['assigned_room_type'])\n\nds['deposit_type_n'] = hotel.fit_transform(ds['deposit_type'])\n\nds['customer_type_n'] = hotel.fit_transform(ds['customer_type'])\n\nds['reservation_status_n'] = hotel.fit_transform(ds['reservation_status'])\n\nds['reservation_status_date_n'] = hotel.fit_transform(ds['reservation_status_date'])","c9c56da0":"ds.drop(['hotel','arrival_date_month','meal','country','market_segment','distribution_channel','reserved_room_type','assigned_room_type','deposit_type','customer_type','reservation_status','reservation_status_date'], axis = 1, inplace=True)\nds.info()","ad6f099f":"ds.shape","8c83aa67":"ds['hotel_n'].value_counts()","a0d14c71":"ds_0 = ds[ds['hotel_n'] == 0]\nds_1 = ds[ds['hotel_n'] == 1]\n\nds_0.shape , ds_1.shape","c6124a77":"ds_0 = ds_0.sample(ds_1.shape[0])\nds = ds_0.append(ds_1, ignore_index=True)\nds.shape","9b31e66a":"ds['hotel_n'].value_counts()","587b21c2":"x = ds.drop('hotel_n', axis = 1)\ny = ds['hotel_n']","cb43ae6c":"from sklearn.feature_selection import VarianceThreshold\nfrom sklearn.model_selection import train_test_split\n\n\nfilter = VarianceThreshold()\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2)","459a96b0":"x_train = filter.fit_transform(x_train)\nx_test = filter.transform(x_test)\n\nx_train.shape , x_test.shape","f7d595fa":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\n\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.fit_transform(x_test)\n\ny_train = y_train.to_numpy()\ny_test = y_test.to_numpy()","4bb0a4d6":"xg = XGBClassifier()\nxg.fit(x_train,y_train)\nxg.score(x_test, y_test)","cdd44ddb":"rf = RandomForestClassifier()\nrf.fit(x_train,y_train)\nrf.score(x_test, y_test)","8624a8d9":"y_pred = xg.predict(x_test)\n\ncm = confusion_matrix(y_test, y_pred)\ncm","72066961":"plt.figure(figsize=(7,5))\nsns.heatmap(cm,annot=True)\nplt.xlabel('Predicted')\nplt.ylabel('truth')","f7fb673e":"print(classification_report(y_test,y_pred))","3ea3c22d":"# **Classification of Hotel Classes (Resort Hotel, City Hotel)**","fba3c3c4":"# Removing Constant","5427414e":"# Data Preprocessing","4820c035":"# EDA","12268ca1":"# Standardizing and converting into Numpy array","23dd19c8":"# ML Models","17457029":"# Confusion Matrix\n","b02d934f":"# Data Balancing"}}