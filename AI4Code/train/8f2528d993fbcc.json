{"cell_type":{"50085831":"code","c3eb7534":"code","3e6a50cc":"code","3cd3aeff":"code","5d5c3b76":"code","31659887":"code","656820f3":"code","227ea2b3":"code","d481c484":"code","2439501c":"code","dcd5389f":"code","4c9545a2":"code","77f66fee":"code","09631f0a":"code","66dd312b":"code","448616e1":"code","321dfde0":"code","5ec6db42":"code","f01aae5e":"code","7c5bdfb6":"code","2f50fea4":"code","8b23079a":"code","5f778d18":"code","e68dce25":"code","254db03e":"code","bf3a8f34":"code","1d7f6dd1":"code","e643582c":"code","0e91c61a":"code","e193dfcb":"markdown","152068eb":"markdown","9d734e93":"markdown","da7fc86a":"markdown","53bea45f":"markdown","d0b66cec":"markdown","a1ce2f55":"markdown","e218cab4":"markdown","00c1457b":"markdown"},"source":{"50085831":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c3eb7534":"df = pd.read_csv(\"..\/input\/creditcardfraud\/creditcard.csv\")","3e6a50cc":"df.head()","3cd3aeff":"print(df.columns)","5d5c3b76":"df.shape","31659887":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import RobustScaler","656820f3":"np.unique(df[\"Class\"])","227ea2b3":"sns.countplot(df['Class'])  #Dataset is highly imbalanced","d481c484":"df['Class'].value_counts() ","2439501c":"#### SCALING PROCESS ###\n\nrb = RobustScaler()\ndf_scaled = rb.fit_transform(df)","dcd5389f":"df_scaled = pd.DataFrame(data= df_scaled,columns= ['Time', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10',\n       'V11', 'V12', 'V13', 'V14', 'V15', 'V16', 'V17', 'V18', 'V19', 'V20',\n       'V21', 'V22', 'V23', 'V24', 'V25', 'V26', 'V27', 'V28', 'Amount',\n       'Class'])","4c9545a2":"df_scaled.head() # Now the dataset is scaled ","77f66fee":"fig, axes = plt.subplots(8,4, figsize=(20, 12))\naxes = axes.flatten()\n\nfor ax,i in zip(axes,df_scaled.iloc[:30].columns):\n    sns.kdeplot(data= df_scaled.iloc[:30][i], ax=ax, fill=True,warn_singular=False)\nplt.show()","09631f0a":"s,ax = plt.subplots(8,4,figsize = (12,30))\nax = ax.flatten()\nfor i,ax in zip(df_scaled.iloc[:,:30].columns,ax):\n      sns.boxplot(data= df_scaled.iloc[:30][i], ax=ax)\nplt.show()","66dd312b":"X =df_scaled.iloc[:,:30]   #FEATURES THAT WILL HELP THE CLASSIFICATION PROCESS\ny = df_scaled['Class']   #TARGET VARIABLE TO BE USED FOR CLASSIFICATION","448616e1":"from sklearn.model_selection import train_test_split\n","321dfde0":"X_train,X_test,y_train,y_test = train_test_split(X, y, test_size=0.2, random_state=42) # splitting data into training and testing sets in ratio 80:20","5ec6db42":"import tensorflow as tf\nimport keras\nfrom tensorflow.keras.layers import Dense,Activation,BatchNormalization,Dropout,Input,Multiply,Concatenate,Add,Conv1D\nfrom tensorflow.keras.models import Sequential,Model\ntf.random.set_seed(100)","f01aae5e":"X_train.shape","7c5bdfb6":"def create_model():\n    x_input = Input(shape=(X_train.shape[1],))\n#     model.add(Conv1D(32, 2, activation=relu, input_shape = X_train[0].shape))\n#     model.add(BatchNormalization())\n#     model.add(Dropout(0.2))\n    x1 = Dense(100,activation='relu' )(x_input)\n    x2 = Dense(128, activation='relu')(x1)\n    x3 = Dense(256,activation='relu' )(x2)\n    z2 = Dense(100,activation='relu')(x3)\n    z31 = BatchNormalization()(z2) \n    z31 = Dropout(0.3)(z31)\n\n    \n    x4 =  Dense(128,activation='relu')(z31)\n    x5 =  Dense(64,activation='relu')(x4)\n    z32 = BatchNormalization()(x5)\n    z32 = Dropout(0.3)(z32)\n\n    x6 =  Dense(32,activation='relu')(z32)\n    \n    x_output = Dense(units=1,activation='sigmoid')(x6)\n    model = Model(inputs=x_input, outputs=x_output,name='Model')\n    return model\n","2f50fea4":"model = create_model()\nmodel.summary()\n","8b23079a":"from tensorflow.keras.utils import plot_model\nplot_model(model,  to_file='TPS_Model.png', show_shapes=True,show_layer_names=True)\n","5f778d18":"from sklearn.utils.class_weight import compute_class_weight\nweights = compute_class_weight('balanced', np.unique(y_train), y_train)\ncw = dict(zip(np.unique(y_train), weights))\nprint(cw)\n","e68dce25":"model.compile(optimizer='adam',loss='binary_crossentropy', metrics=['accuracy']) \nmodel.fit(X_train,y_train, batch_size =100 , class_weight = cw , epochs=50, validation_data= (X_test,y_test))\n","254db03e":"pd.DataFrame(model.history.history).plot()","bf3a8f34":"y_test.shape","1d7f6dd1":"preds  = model.predict(X_test)\npredictions = preds.copy()\npredictions[predictions <= 0.8] = 0\npredictions[predictions > 0.8] = 1\n","e643582c":"\nfrom sklearn.metrics import confusion_matrix , classification_report\n\ncm = pd.DataFrame(data= confusion_matrix(y_test, predictions, labels=[0, 1]),index=[\"NO-FRAUD\", \"FRAUD\"],\ncolumns=[\"NO_FRAUD\", \"FRAUD\"])\nimport seaborn as sns\nsns.heatmap(cm,annot=True,fmt=\"d\")","0e91c61a":"print(classification_report(y_test,predictions))","e193dfcb":"DATA SET IS HIGHLY IMBALANCED AS ONE CLASS IS HAVING VALUES 284315 AND OTHER JUST 492 , WE WILL TACKLE THIS PROBLEM DURING DEEP LEARNING PART","152068eb":"To solve ML problems , it is desired that features follow Normal\/gaussian  PDF curves","9d734e93":"ASSIGINING WEIGHTS TO BOTH THE CLASSES TO MAKE THEM BALANCED","da7fc86a":"OUTLIER \/ ANOMALY DETECTION","53bea45f":"CREATING A DEEP LEARNING MODEL","d0b66cec":"**DATA VISUALIZATION AND PRE-PROCESSING**","a1ce2f55":"PERFORMANCE EVALUATION OF NEURAL NETWORK MODEL","e218cab4":"WITH ABOVE DATA VISUALISATION WE GOT THE INFERENCE THAT ALMOST ALL FEATURES ARE SHOWING NORMAL PDF AND HAVE A FEW OUTLIER VALUES...\nTHIS IS BECAUSE OF OUR ROBUST-SCALER THAT NOT ONLY DOES THE SCALING BUT ALSO TACKLES OUTLIER VALUES CROSSING AND 25 AND 75 QUANTILE","00c1457b":"Now since our data is scaled , its time to split it into trainnig and testing "}}