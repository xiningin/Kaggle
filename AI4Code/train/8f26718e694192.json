{"cell_type":{"be37d0d1":"code","1862c7ec":"code","fd68fbf3":"code","0337b423":"code","ebb0f1cd":"code","415b1094":"code","026798a7":"code","f7dc046b":"code","ef80577e":"code","17638fec":"code","c764fd49":"code","5e5da61d":"code","d75a3d20":"code","13a370a7":"code","92891548":"code","b5f669e8":"code","835eeee3":"code","31d28ed9":"code","da05db52":"code","d89ab902":"code","df8c437b":"code","4f912013":"code","26dabe29":"code","34fc1e97":"code","e9718e64":"code","ac69d094":"code","c5c0d8bf":"code","481e5c70":"code","48bc91fd":"code","783bae5f":"code","b87f034d":"code","d006641a":"code","12a44160":"code","d15959b8":"code","4e7bd0cb":"code","5f6378e2":"code","c4a6c1a2":"code","41fd9b11":"code","773b4949":"code","8626ec4a":"code","0458135a":"code","30d91848":"code","3f930d1b":"code","0f2026b3":"code","1c453fe9":"code","dd02b16b":"code","29e31581":"code","b2f1c210":"code","434fb5a4":"markdown","c0a78a7f":"markdown","4e77a654":"markdown","a49b7866":"markdown","30fa0e6f":"markdown","22e96382":"markdown","77c119bf":"markdown","dba4f9b4":"markdown","1114a386":"markdown","ede3331f":"markdown","03e05393":"markdown","a26e5292":"markdown","4860885d":"markdown","aa55d15b":"markdown","c0befafb":"markdown","a5197790":"markdown","3bcc00eb":"markdown","0fd8c4de":"markdown","05d04f4b":"markdown","280626a4":"markdown","ed912e52":"markdown","4f3b63ed":"markdown","cfd7b492":"markdown","9f52ca0e":"markdown","75ef33d7":"markdown"},"source":{"be37d0d1":"import numpy as np\nimport pandas as pd\nimport nltk\nimport os\n\n# Plot\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nimport warnings","1862c7ec":"def resumetable(df):\n    print(f\"Dataset Shape: {df.shape}\")\n    summary = pd.DataFrame(df.dtypes,columns=['dtypes'])\n    summary = summary.reset_index()\n    summary['Name'] = summary['index']\n    summary = summary[['Name','dtypes']]\n    summary['Missing'] = df.isnull().sum().values    \n    summary['Uniques'] = df.nunique().values\n    summary['First Value'] = df.loc[0].values\n    summary['Second Value'] = df.loc[1].values\n    summary['Third Value'] = df.loc[2].values\n    return summary","fd68fbf3":"#Loading Cities response\ndf_ct_full_2018 = pd.read_csv(\"..\/input\/cdp-unlocking-climate-solutions\/Cities\/Cities Responses\/2018_Full_Cities_Dataset.csv\")\ndf_ct_full_2019 = pd.read_csv(\"..\/input\/cdp-unlocking-climate-solutions\/Cities\/Cities Responses\/2019_Full_Cities_Dataset.csv\")\ndf_ct_full_2020 = pd.read_csv(\"..\/input\/cdp-unlocking-climate-solutions\/Cities\/Cities Responses\/2020_Full_Cities_Dataset.csv\")","0337b423":"# Dataset_Corporates\ndf_cl_2018 = pd.read_csv(\"..\/input\/cdp-unlocking-climate-solutions\/Corporations\/Corporations Disclosing\/Climate Change\/2018_Corporates_Disclosing_to_CDP_Climate_Change.csv\")\ndf_cl_2019 = pd.read_csv(\"..\/input\/cdp-unlocking-climate-solutions\/Corporations\/Corporations Disclosing\/Climate Change\/2019_Corporates_Disclosing_to_CDP_Climate_Change.csv\")\ndf_cl_2020 = pd.read_csv(\"..\/input\/cdp-unlocking-climate-solutions\/Corporations\/Corporations Disclosing\/Climate Change\/2020_Corporates_Disclosing_to_CDP_Climate_Change.csv\")","ebb0f1cd":"# Cities Responses\n# concatenating\ndf = [df_ct_full_2018, df_ct_full_2019, df_ct_full_2020]\ndf_ct = pd.concat(df)","415b1094":"# resetting the index\ndf_ct = df_ct.reset_index()","026798a7":"resumetable(df_ct)","f7dc046b":"# Corporations Disclosing\n# concatenating\ndf = [df_cl_2018, df_cl_2019, df_cl_2020]\ndf_cl = pd.concat(df)","ef80577e":"# resetting the index\ndf_cl = df_cl.reset_index()","17638fec":"resumetable(df_cl)","c764fd49":"group = df_ct.groupby('Year Reported to CDP').size()\ngroup.sort_values(ascending = False)","5e5da61d":"plt.figure(figsize=(15, 8))\n\nfreq = len(df_ct)\n\nsns.set_palette(\"pastel\")\n\ng = sns.countplot(df_ct['Year Reported to CDP'])\ng.set_xlabel('Year', fontsize = 15)\ng.set_ylabel(\"Count\", fontsize = 15)\n\nfor p in g.patches:\n    height = p.get_height()\n    g.text(p.get_x() + p.get_width() \/ 2., height + 3,\n          '{:1.2f}%'.format(height \/ freq * 100),\n          ha = \"center\", fontsize = 18)","d75a3d20":"group = df_ct.groupby('CDP Region').size()\ngroup.sort_values(ascending = False)","13a370a7":"plt.figure(figsize=(18, 8))\n\nfreq = len(df_ct)\n\nsns.set_palette(\"pastel\")\n\ng = sns.countplot(df_ct['CDP Region'], order = df_ct['CDP Region'].value_counts().index)\ng.set_xlabel('Region', fontsize = 15)\ng.set_ylabel(\"Count\", fontsize = 15)\n\nfor p in g.patches:\n    height = p.get_height()\n    g.text(p.get_x() + p.get_width() \/ 2., height + 3,\n          '{:1.2f}%'.format(height \/ freq * 100),\n          ha = \"center\", fontsize = 18)","92891548":"features = [\"CDP Region\", 'Year Reported to CDP']\ncm = sns.light_palette(\"red\", as_cmap = True)\npd.crosstab(df_ct[features[0]], df_ct[features[1]]).style.background_gradient(cmap = cm)","b5f669e8":"group = df_ct.groupby('Country').size()\ngroup.sort_values(ascending = False)","835eeee3":"city_count = df_ct['Country'].value_counts()\ncity_count_10 = city_count[:10,]\ncity_count_10","31d28ed9":"plt.figure(figsize=(18, 8))\n\nfreq = len(df_ct)\n\nsns.set_palette(\"pastel\")\n\ng = sns.barplot(city_count_10.index, city_count_10.values)\ng.set_title('Top 10 Country', fontsize = 15)\ng.set_xlabel('Region', fontsize = 15)\ng.set_ylabel(\"Count\", fontsize = 15)\nplt.xticks(rotation = 90)\n\nfor p in g.patches:\n    height = p.get_height()\n    g.text(p.get_x() + p.get_width() \/ 2., height + 3,\n          '{:1.2f}%'.format(height \/ freq * 100),\n          ha = \"center\", fontsize = 18)","da05db52":"group_ct = df_ct.groupby('Organization').size()\ngroup_ct.sort_values(ascending = False)","d89ab902":"ct_count = df_ct['Organization'].value_counts()\nct_count_10 = ct_count[:10,]\nct_count_10","df8c437b":"plt.figure(figsize=(18, 8))\n\nfreq = len(df_ct)\n\nsns.set_palette(\"pastel\")\n\ng = sns.barplot(ct_count_10.index, ct_count_10.values)\ng.set_title('Top 10 City', fontsize = 15)\ng.set_xlabel('City', fontsize = 15)\ng.set_ylabel(\"Count\", fontsize = 15)\nplt.xticks(rotation=90)\n\nfor p in g.patches:\n    height = p.get_height()\n    g.text(p.get_x() + p.get_width() \/ 2., height + 3,\n          '{:1.2f}%'.format(height \/ freq * 100),\n          ha = \"center\", fontsize = 18)","4f912013":"cities_6_2 = df_ct[df_ct['Question Number'] == '6.2'].rename(columns={'Organization': 'City'})\n\ncities_6_2['Response Answer'] = df_ct['Response Answer'].fillna('No Response')\n\ncities_6_2.head()","26dabe29":"df_import = pd.read_csv('..\/input\/countries-iso-codes\/country_codes.csv').rename(columns={'COUNTRY': 'country'})","34fc1e97":"df_import","e9718e64":"countries = df_import['country'].unique().tolist()\nNumber_of_countries = len(countries)\nprint(countries)\nprint(\"\\nTotal countries df_import present: \",Number_of_countries)","ac69d094":"countries = cities_6_2['Country'].unique().tolist()\nNumber_of_countries = len(countries)\nprint(countries)\nprint(\"\\nTotal countries CDP_6.2 present: \",Number_of_countries)","c5c0d8bf":"rename = {\n    'United States of America': 'United States',\n    'United Kingdom of Great Britain and Northern Ireland': 'United Kingdom',\n    'Venezuela (Bolivarian Republic of)': 'Venezuela',\n    'Bolivia (Plurinational State of)': 'Bolivia',\n    'China, Hong Kong Special Administrative Region': 'Hong Kong',\n    'Taiwan, Greater China': 'Taiwan',\n    'Viet Nam': 'Vietnam',\n    'Democratic Republic of the Congo': 'Congo, Democratic Republic of the',\n    'Russian Federation': 'Russia',\n    'Republic of Korea': 'Korea, South',\n    \"C\u00f4te d'Ivoire\": \"Cote d'Ivoire\",\n    'United Republic of Tanzania': 'Tanzania',\n    'Republic of Moldova': 'Moldova',\n    'Chile': 'Chile'    \n}\n\ncities_6_2['re_country'] = cities_6_2['Country'].map(rename)\ncities_6_2['re_country'] = cities_6_2['re_country'].fillna(cities_6_2['Country'])","481e5c70":"countries_year = cities_6_2.groupby(['Year Reported to CDP',\n                                     'CDP Region',\n                                     're_country'])['City'].count().to_frame()\ncountries_year = countries_year.reset_index().rename(columns={'Year Reported to CDP': 'Year',\n                                                              're_country': 'country'})","48bc91fd":"countries_year = pd.merge(countries_year, df_import, how='inner', on = 'country')","783bae5f":"df = countries_year\nfig = px.scatter_geo(df, locations=\"CODE\", color=\"CDP Region\", \n                     hover_name=\"country\", size=\"City\",\n                     animation_frame=\"Year\", projection=\"natural earth\")\nfig.show()","b87f034d":"countries_total = cities_6_2.groupby(['CDP Region','re_country'])['City'].count().to_frame()\ncountries_total = countries_total.reset_index().rename(columns={'re_country': 'country'})","d006641a":"countries_total = pd.merge(countries_total, df_import, how='inner', on = 'country')","12a44160":"df = countries_total\nfig = px.scatter_geo(df, locations=\"CODE\", color=\"CDP Region\",\n                     hover_name=\"country\", size=\"City\",\n                     projection=\"natural earth\")\nfig.show()","d15959b8":"cities_6_2.dropna(subset=['Question Name'], axis=0, inplace = True)","4e7bd0cb":"Response = cities_6_2['Question Name']","5f6378e2":"Response_summary = \" \".join(s for s in Response)","c4a6c1a2":"stopwords=nltk.corpus.stopwords.words('english')","41fd9b11":"wordcloud = WordCloud(stopwords=stopwords,\n                      background_color='white', width=1600,                            \n                      height=800).generate(Response_summary)","773b4949":"fig, ax = plt.subplots(figsize=(16,8))       \n\nax.imshow(wordcloud, interpolation='bilinear') \nax.set_axis_off()\n\nplt.imshow(wordcloud)              \nwordcloud.to_file('rafael.png',);","8626ec4a":"Response = cities_6_2['Response Answer']","0458135a":"Response_summary = \" \".join(s for s in Response)","30d91848":"stopwords=nltk.corpus.stopwords.words('english', 'portuguese')","3f930d1b":"wordcloud = WordCloud(stopwords=stopwords,\n                      background_color='white', width=1600,                            \n                      height=800).generate(Response_summary)","0f2026b3":"fig, ax = plt.subplots(figsize=(16,8))       \n\nax.imshow(wordcloud, interpolation='bilinear') \nax.set_axis_off()\n\nplt.imshow(wordcloud)              \nwordcloud.to_file('rafael.png',);","1c453fe9":"df_cl.groupby('country').size()","dd02b16b":"plt.figure(figsize=(12, 5))\n\nfreq = len(df_cl)\n\nsns.set_palette(\"pastel\")\n\ng = sns.countplot(df_cl['country'])\ng.set_xlabel('Country', fontsize = 15)\ng.set_ylabel(\"Count\", fontsize = 15)\n\nfor p in g.patches:\n    height = p.get_height()\n    g.text(p.get_x() + p.get_width() \/ 2., height + 3,\n          '{:1.2f}%'.format(height \/ freq * 100),\n          ha = \"center\", fontsize = 18)","29e31581":"df_cl.groupby('survey_year').size()","b2f1c210":"plt.figure(figsize=(12, 5))\n\nfreq = len(df_cl)\n\nsns.set_palette(\"pastel\")\n\ng = sns.countplot(df_cl['survey_year'])\ng.set_xlabel('Survey year', fontsize = 15)\ng.set_ylabel(\"Count\", fontsize = 15)\n\nfor p in g.patches:\n    height = p.get_height()\n    g.text(p.get_x() + p.get_width() \/ 2., height + 3,\n          '{:1.2f}%'.format(height \/ freq * 100),\n          ha = \"center\", fontsize = 18)","434fb5a4":"### Total cities collaborate in partnership with companies in your city in sustainability projects","c0a78a7f":"* Cities Responses Data ","4e77a654":"Year Reported to CDP","a49b7866":"### Cities Responses","30fa0e6f":"### Word Cloud for Response Answer","22e96382":"### Question\n* 6.2 Does your city collaborate in partnership with businesses in your city on sustainability projects?","77c119bf":"Reference:\n\nhttps:\/\/www.kaggle.com\/callumr22\/cdp-starter-notebook","dba4f9b4":"It is important to check that the names of the countries in the two databases are the same.","1114a386":"### To be continued...","ede3331f":"### Word Cloud for Question Name","03e05393":"Year","a26e5292":"* Corporations Disclosing\n\nCountry","4860885d":"### Importing Libraries","aa55d15b":"Region","c0befafb":"Organization","a5197790":"Checking country names","3bcc00eb":"Country","0fd8c4de":"CDP Region by Year Reported to CDP","05d04f4b":"# Exploratory analysis","280626a4":"# Loading Data","ed912e52":"### Added data\nImport a database to use the Code variable to build the map.","4f3b63ed":"### Corporations Disclosing","cfd7b492":"### Joining Climate Change Data.","9f52ca0e":"Joining the CDP database with df_import.","75ef33d7":"### Number of cities collaborate in partnership with businesses in your city on sustainability projects per year"}}