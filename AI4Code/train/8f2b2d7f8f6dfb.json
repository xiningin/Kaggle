{"cell_type":{"720a8264":"code","ed895ff7":"code","6131ef60":"code","e2727a99":"code","b7fb08a0":"code","a8e261b2":"code","f081b2bd":"code","103ad456":"code","f7d3b246":"code","94eb84e4":"markdown","39dfeacd":"markdown","6088a9af":"markdown","5ae3af01":"markdown","a34d7cf6":"markdown","4dcea815":"markdown","5e3d4ee5":"markdown"},"source":{"720a8264":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nimport tensorflow as tf\nfrom tensorflow.keras import datasets, layers, models\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ed895ff7":"train = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntest = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","6131ef60":"x_train = train.iloc[:, 1:]\ny_train = train.iloc[:, 0]\nx_test = test\n\nx_train = x_train.values.reshape(len(x_train), 28, 28, 1)\nx_test = x_test.values.reshape(len(x_test), 28, 28, 1)","e2727a99":"fig_rows = 5\nfig_cols = 5\n\nfig1 = plt.figure(figsize = (2*fig_rows, 2*fig_cols))\n\nfor i in range(fig_rows*fig_cols):\n    fig1.add_subplot(fig_rows, fig_cols, i+1)\n    plt.imshow(x_train[i])\n    plt.axis('off')\n    plt.title(y_train[i], color = 'r')","b7fb08a0":"x_training, x_validation, y_training, y_validation = train_test_split(x_train, y_train, test_size = 0.2)","a8e261b2":"model = models.Sequential()\nmodel.add(layers.Conv2D(28, (1, 1), activation='relu', input_shape=(28, 28, 1)))\nmodel.add(layers.MaxPooling2D((2, 2)))\nmodel.add(layers.Conv2D(64, (3, 3), activation='relu'))\nmodel.add(layers.MaxPooling2D((2, 2)))\nmodel.add(layers.Conv2D(64, (3, 3), activation='relu'))\nmodel.add(layers.Flatten())\nmodel.add(layers.Dense(64, activation='relu'))\nmodel.add(layers.Dense(10))","f081b2bd":"model.compile(optimizer='adam', loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), metrics=['accuracy'])\nhistory = model.fit(x_training, y_training, epochs=10, validation_data=(x_validation, y_validation))","103ad456":"pred = model.predict(x_test)\nplt.imshow(x_test[1])\nlabel = np.argmax(pred, axis=-1)    \nlabel","f7d3b246":"submission = pd.DataFrame()\nsubmission['ImageId'] = range(1,len(label)+1,1)\nsubmission['Label'] = list(label)\nsubmission.to_csv('submission.csv', index = False)","94eb84e4":"# Data Preprocessing","39dfeacd":"# Model Training (CNN)","6088a9af":"# Classfication","5ae3af01":"Reference: https:\/\/www.tensorflow.org\/tutorials\/images\/cnn","a34d7cf6":"# Submission","4dcea815":"# Data Visualization","5e3d4ee5":"# Import"}}