{"cell_type":{"dd2464dc":"code","83285cd2":"code","d7b86cd7":"code","d36d7aa0":"code","9e7aff6d":"code","f12d2e0e":"code","02e47077":"code","0a5a55aa":"code","d2c45715":"code","af93d8c3":"code","eb30133a":"code","fa138a2b":"code","874366f7":"code","51a6defb":"code","6a556d5b":"code","5fa0dbcf":"code","9a2b2cd1":"code","0749b939":"code","27aff8d2":"code","f2cc7fb1":"code","812dc4f4":"code","fc2b284b":"code","83df584a":"code","ef248afe":"code","e351a601":"code","d00b1998":"code","6e8b7535":"code","2422fa8c":"code","b5a1c19d":"code","861fda21":"code","40a2a4fc":"code","3a3b0d29":"code","9b70cb58":"code","6f4a00f1":"code","b703ad8f":"markdown","1172b66d":"markdown","e4d4597b":"markdown","c716c0bf":"markdown","2e4a5921":"markdown","49df53b5":"markdown","38031bbf":"markdown","83eb865c":"markdown","68d02813":"markdown","42b750ec":"markdown","a9a6236a":"markdown","60a2495d":"markdown","160fb267":"markdown","c16ecfe4":"markdown","06ae9058":"markdown","63aaf4a0":"markdown","6c782b7c":"markdown","a35012a6":"markdown","3f7264e8":"markdown","dd0e5324":"markdown"},"source":{"dd2464dc":"#general data work\nimport numpy as np\nimport pandas as pd\nimport datetime as dt\nfrom datetime import date, timedelta\n\n#visuals\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py","83285cd2":"# Load the data \n\ndatasets = pd.read_csv('\/kaggle\/input\/meta-kaggle\/Datasets.csv', low_memory=False)\ndataset_versions = pd.read_csv('\/kaggle\/input\/meta-kaggle\/DatasetVersions.csv')\ndataset_tags = pd.read_csv('\/kaggle\/input\/meta-kaggle\/DatasetTags.csv')\nusers = pd.read_csv('\/kaggle\/input\/meta-kaggle\/Users.csv')\ntags = pd.read_csv('\/kaggle\/input\/meta-kaggle\/Tags.csv')","d7b86cd7":"# work with time formats\ndatasets['CreationDate'] = pd.to_datetime(datasets['CreationDate'] )\n\n# extract year\ndatasets['Year_uploaded'] = datasets['CreationDate'].dt.year","d36d7aa0":"#plotting a number of datasets uploaded year by year\nupload_years = datasets.groupby('Year_uploaded')['Id'].count().sort_values(ascending = False).head(6).reset_index()\n\nx = upload_years['Year_uploaded']\ny = upload_years['Id']\n\nfig = go.Figure(data=[go.Bar(x=x, y=y,text=y,textposition='auto')])\nfig.update_layout(title_text='Kaggle Datasets Upload (year-by-year)', title_x=0.5)\nfig.update_yaxes(title='Number of Datasets')\n\nfig.show()","9e7aff6d":"#Total number of datasets \ntotal_datasets = datasets[\"Id\"].count()\nprint('Total number of datasets:',total_datasets)\n\n#number of upvoted datasets (1+ upvote)\nupvoted_datasets = len(datasets[ datasets['TotalVotes'] > 0])\nprint('The number of datasets with  1+ upvotes:', upvoted_datasets)\n\n#number of highly upvoted datasets (10+ upvotes)\nupvoted_datasets_10 = len(datasets[ datasets['TotalVotes'] > 10])\nprint('The number of datasets with  10+ upvotes:', upvoted_datasets_10)\n\n#number of datasets with 1 to 10 upvotes)\none_to_ten_upvotes = upvoted_datasets - upvoted_datasets_10\nprint('The number of datasets with 1 to 10 upvotes:', one_to_ten_upvotes)\n\n#number of datasets with no upvotes)\ntotal_no_upvotes = total_datasets - upvoted_datasets\nprint('The number of datasets with 0 upvotes:', total_no_upvotes)","f12d2e0e":"#making a donut chart for the dataset upvotes\nlabels = ['Datasets with 1 to 10 upvotes', 'Datasets with 10+ upvotes', 'Datasets with no upvotes']\nvalues = [one_to_ten_upvotes, upvoted_datasets_10, total_no_upvotes]\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, title = \"UPVOTES\", hole=.6)])\nfig.update_layout(title_text=\"Overview of the datasets' upvotes\")\nfig.show()","02e47077":"#upvotes & views correlation on a scatter plot\nfig = px.scatter(datasets, x=\"TotalViews\", y=\"TotalVotes\", trendline=\"ols\")\nfig.update_layout(title_text='Dataset Views and Upvotes', title_x=0.5)\nfig.show()","0a5a55aa":"#upvotes & downloads correlation on a scatter plot\nfig = px.scatter(datasets, x=\"TotalDownloads\", y=\"TotalVotes\", trendline=\"ols\")\nfig.update_layout(title_text='Dataset Downloads and Upvotes', title_x=0.5)\nfig.show()","d2c45715":"#upvotes & kernels correlation on a scatter plot\nfig = px.scatter(datasets, x=\"TotalKernels\", y=\"TotalVotes\", trendline=\"ols\")\nfig.update_layout(title_text='Dataset Kernels and Upvotes', title_x=0.5)\nfig.show()","af93d8c3":"#data prep & merging\ndataset_tags['Number_of_tags_used'] = dataset_tags.groupby(['DatasetId'])['Id'].transform('count')\ndatasets.insert(2, 'Number_of_tags_used', datasets['Id'].map(dataset_tags.drop_duplicates('DatasetId').set_index('DatasetId')['Number_of_tags_used']))\n#converting all NaN values into zeros\ndatasets['Number_of_tags_used'] = datasets['Number_of_tags_used'].fillna(0)\n#renaming cols\ndatasets['Number_of_tags_used'] = datasets['Number_of_tags_used'].replace({0: '0 tags', 1: '1 tags', 2: '2 tags', 3: '3 tags', 4: '4 tags', 5: '5 tags', 6: '6 tags', 7: '7 tags', 8: '8 tags', 9: '9 tags', 10: '10 tags', 11: '11 tags', 12: '12 tags', 13: '13 tags'})","eb30133a":"#bar plotting the number of tags in a datasets across all Kaggle datasets\ntags = datasets.groupby('Number_of_tags_used')['Id'].count().sort_values(ascending = False).reset_index()\n\nx = tags['Number_of_tags_used']\ny = tags['Id']\n\nfig = go.Figure(data=[go.Bar(x=x, y=y,text=y,textposition='auto')])\nfig.update_layout(title_text='Number of tags used across all datasets on Kaggle (total)', title_x=0.5, width=880)\nfig.update_yaxes(title='Number of Datasets')\nfig.show()","fa138a2b":"#bar plotting the number of tags in datasets by the average upvotes achieved\ntags_votes = datasets.groupby('Number_of_tags_used')['TotalVotes'].mean().sort_values(ascending = False).reset_index().round(1)\n\nx = tags_votes['Number_of_tags_used']\ny = tags_votes['TotalVotes']\n\nfig = go.Figure(data=[go.Bar(x=x, y=y,text=y,textposition='auto')])\n\nfig.update_traces(marker_color='rgb(46, 137, 162)', opacity=1)\n\nfig.update_layout(title_text='Number of tags used on a dataset and the average Upvotes', title_x=0.5, width=880)\nfig.update_yaxes(title='Average Upvotes')\nfig.show()","874366f7":"#data prep & merging\ndatasets.insert(2, 'LicenseName', datasets['Id'].map(dataset_versions.drop_duplicates('DatasetId').set_index('DatasetId')['LicenseName']))","51a6defb":"#horizontal bar plotting the dataset license types by popularity on Kaggle\nlicenses = datasets.groupby('LicenseName')['Id'].count().sort_values(ascending = True).reset_index()\n\nx = licenses['Id']\ny = licenses['LicenseName']\n\nfig = go.Figure(data=[go.Bar(x=x, y=y,text=x,orientation='h',textposition='auto')])\nfig.update_layout(title_text='Popular license types across all Kaggle datasets', title_x=0.5, width = 1100, height = 1500)\nfig.update_xaxes(title='Number of datasets')\nfig.update_yaxes(title='')\n\nfig.show()","6a556d5b":"#horizontal bar plotting the dataset licenses by the average upvotes\nlicenses_votes = datasets.groupby('LicenseName')['TotalVotes'].mean().sort_values(ascending = True).reset_index().round(1)\n\nx = licenses_votes['TotalVotes']\ny = licenses_votes['LicenseName']\n\nfig = go.Figure(data=[go.Bar(x=x, y=y,text=x,orientation='h',textposition='auto')])\n\nfig.update_traces(marker_color='rgb(46, 137, 162)', opacity=1)\n\nfig.update_layout(title_text='License types that have the most average upvotes', title_x=0.5, width = 1200, height = 1500)\nfig.update_xaxes(title='Average Upvotes')\nfig.update_yaxes(title='')\n\nfig.show()","5fa0dbcf":"#data prep & merging\ndatasets.insert(2, 'Subtitle', datasets['Id'].map(dataset_versions.drop_duplicates('DatasetId').set_index('DatasetId')['Subtitle']))\ndatasets.insert(2, 'Description', datasets['Id'].map(dataset_versions.drop_duplicates('DatasetId').set_index('DatasetId')['Description']))\n\n#rename all elements in \"Subtitle\" col into 2 categories\ndatasets.loc[datasets['Subtitle'].notnull(), 'Subtitle'] = 'Subtitle Exists'\ndatasets.loc[datasets['Subtitle'].isnull(), 'Subtitle'] = 'No Subtitle'\n\n#rename all elements in \"Description\" col into 2 categories\ndatasets.loc[datasets['Description'].notnull(), 'Description'] = 'Description Exists'\ndatasets.loc[datasets['Description'].isnull(), 'Description'] = 'No Description'\n","9a2b2cd1":"#plotting the number of datasets with Subtitle\nsubtitles = datasets.groupby('Subtitle')['Id'].count().sort_values(ascending = False).reset_index().round(1)\nx = subtitles['Subtitle']\ny = subtitles['Id']\n\nfig = go.Figure(data=[go.Bar(x=x, y=y,text=y,textposition='auto')])\n\nfig.update_traces(marker_color='rgb(151, 174, 186)', marker_line_color='rgb(8,48,107)', marker_line_width=1.5, opacity=1)\n\nfig.update_layout(title_text='Subtitles across all Kaggle Datasets', title_x=0.5)\nfig.update_xaxes(title='')\nfig.update_yaxes(title='Number of Datasets')\n\nfig.show()","0749b939":"#plotting a number of datasets with Description\ndescriptions = datasets.groupby('Description')['Id'].count().sort_values(ascending = False).reset_index().round(1)\nx = descriptions['Description']\ny = descriptions['Id']\n\nfig = go.Figure(data=[go.Bar(x=x, y=y,text=y,textposition='auto')])\n\nfig.update_traces(marker_color='rgb(151, 174, 186)', marker_line_color='rgb(8,48,107)', marker_line_width=1.5, opacity=1)\n\nfig.update_layout(title_text='Descriptions across all Kaggle Datasets', title_x=0.5)\n\nfig.update_xaxes(title='')\nfig.update_yaxes(title='Number of Datasets')\n\nfig.show()","27aff8d2":"#box plotting the existence of a subtitle on a dataset and its upvotes\nfig = px.box(datasets, x=\"Subtitle\", y=\"TotalVotes\")\nfig.update_layout(title_text='Subtitle existence in a dataset and its Upvotes (total)', title_x=0.5)\nfig.show()","f2cc7fb1":"#box plotting the existence of a description on a dataset and its upvotes\nfig = px.box(datasets, x=\"Description\", y=\"TotalVotes\")\nfig.update_layout(title_text='Description existence in a dataset and its Upvotes (total)', title_x=0.5)\nfig.show()","812dc4f4":"#data prep & merging\nversions_num = dataset_versions.groupby('DatasetId')['VersionNumber'].max().reset_index()\ndatasets.insert(2, 'Number_of_dataset_versions', datasets['Id'].map(versions_num.drop_duplicates('DatasetId').set_index('DatasetId')['VersionNumber']))\n\n#converting all NaN values into one\ndatasets['Number_of_dataset_versions'] = datasets['Number_of_dataset_versions'].fillna(1)","fc2b284b":"#number of the dataset versions & upvotes correlation on a scatter plot\n\nfig = px.scatter(datasets, x='Number_of_dataset_versions', y=\"TotalVotes\", trendline=\"ols\")\nfig.update_layout(title_text='Number of dataset versions and Upvotes', title_x=0.5)\nfig.show()","83df584a":"#correlation coeff between number of versions and upvotes\ndata = [\n    go.Heatmap(\n        z= datasets[['TotalVotes', 'Number_of_dataset_versions']].corr().values,\n        x=datasets[['TotalVotes', 'Number_of_dataset_versions']].columns.values,\n        y=datasets[['TotalVotes', 'Number_of_dataset_versions']].columns.values,\n        colorscale='viridis',\n        reversescale = False,\n        opacity = 1.0 )\n]\n\nlayout = go.Layout(\n    title='Correlation: number of dataset versions and upvotes',\n    xaxis = dict(ticks='', nticks=36),\n    yaxis = dict(ticks='' ),\n    width = 800, height = 600)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='labelled-heatmap')\n","ef248afe":"#create a new col for the days age since dataset creation\ndatasets['Today'] = dt.datetime.now().date()\ndatasets['Today'] = pd.to_datetime(datasets['Today'])\ndatasets['Dataset_age_days'] = (datasets['Today'] - datasets['CreationDate']).dt.days\n\n#dropping today col\ndatasets = datasets.drop(['Today'], axis=1)","e351a601":"#number of days dataset stays on Kaggle & its upvotes correlation on a scatter plot\n\nfig = px.scatter(datasets, x='Dataset_age_days', y='TotalVotes', trendline=\"ols\")\nfig.update_layout(title_text='Dataset age (days) and Upvotes', title_x=0.5)\nfig.show()","d00b1998":"#bar plotting the average upvotes and the dataset creation by years\nyears = datasets.groupby('Year_uploaded')['TotalVotes'].mean().reset_index().round(2)\n\nx = years['Year_uploaded']\ny = years['TotalVotes']\n\nfig = go.Figure(data=[go.Bar(x=x, y=y,text=y,textposition='auto')])\n\nfig.update_traces(marker_color='rgb(46, 137, 162)', opacity=1)\n\nfig.update_layout(title_text='Datasets uploaded by years and their average Upvotes', title_x=0.5)\nfig.update_xaxes(title='Year uploaded')\nfig.update_yaxes(title='Average Upvotes')\n\nfig.show()","6e8b7535":"#data prep & merging\ndatasets.insert(2, 'Author_tier', datasets['CreatorUserId'].map(users.drop_duplicates('Id').set_index('Id')['PerformanceTier']))\n#dropping all nan values\ndatasets['Author_tier'] = datasets['Author_tier'].fillna(0)\n#renaming cols\ndatasets['Author_tier'] = datasets['Author_tier'].replace({0: 'Novice', 1: 'Contributor', 2: 'Expert', 3: 'Master', 4: 'Grandmaster', 5: 'Kaggle Team'})","2422fa8c":"#bar plotting the distribution of users' performance tiers across all Kaggle datasets\nuser_tiers = datasets.groupby('Author_tier')['Id'].count().sort_values(ascending = False).reset_index().round(1)\n\nx = user_tiers['Author_tier']\ny = user_tiers['Id']\n\nfig = go.Figure(data=[go.Bar(x=x, y=y,text=y,textposition='auto')])\nfig.update_layout(title_text='Author performance tiers across all Kaggle datasets (totals)', title_x=0.5)\nfig.update_yaxes(title='Number of Datasets')\n\nfig.show()","b5a1c19d":"#donut chart for the distribution of datasets across users' performance tiers\nlabels = user_tiers['Author_tier']\nvalues = user_tiers['Id']\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, title = \"TIERS\", hole=.6)])\nfig.update_layout(title_text='User performance tiers across all Kaggle datasets (percentage)', height = 650)\nfig.show()","861fda21":"#bar plotting author tiers and the average upvotes\nuser_tiers_upvotes = datasets.groupby('Author_tier')['TotalVotes'].mean().sort_values(ascending = True).reset_index().round(1)\n\nx = user_tiers_upvotes['Author_tier']\ny = user_tiers_upvotes['TotalVotes']\n\nfig = go.Figure(data=[go.Bar(x=x, y=y,text=y,textposition='auto')])\nfig.update_layout(title_text='Dataset author tier and the average Upvotes', title_x=0.5)\nfig.update_yaxes(title='Average Upvotes')\n\nfig.show()","40a2a4fc":"#data prep & merging\ndatasets.insert(2, 'Title', datasets['Id'].map(dataset_versions.drop_duplicates('DatasetId').set_index('DatasetId')['Title']))","3a3b0d29":"# getting the top upvoted datasets in 2020\nupvoted_2020 = datasets[['Title', 'TotalVotes', 'Year_uploaded']].sort_values(by='TotalVotes', ascending = False)\nupvoted_2020 = upvoted_2020[upvoted_2020['Year_uploaded']==2020]\nupvoted_2020 = upvoted_2020.drop(['Year_uploaded'], axis=1)\nupvoted_2020.head(20).reset_index(drop=True)","9b70cb58":"# getting the top upvoted datasets in 2019\nupvoted_2019 = datasets[['Title', 'TotalVotes', 'Year_uploaded']].sort_values(by='TotalVotes', ascending = False)\nupvoted_2019 = upvoted_2019[upvoted_2019['Year_uploaded']==2019]\nupvoted_2019 = upvoted_2019.drop(['Year_uploaded'], axis=1)\nupvoted_2019.head(20).reset_index(drop=True)","6f4a00f1":"# getting the top upvoted datasets in 2018\nupvoted_2018 = datasets[['Title', 'TotalVotes', 'Year_uploaded']].sort_values(by='TotalVotes', ascending = False)\nupvoted_2018 = upvoted_2018[upvoted_2018['Year_uploaded']==2018]\nupvoted_2018 = upvoted_2018.drop(['Year_uploaded'], axis=1)\nupvoted_2018.head(20).reset_index(drop=True)","b703ad8f":"### Inspiration\n\nA large number of datasets are uploaded on Kaggle daily. However, not all of them are actually getting noticed and upvoted.\n\nThe first goal of this notebook is to find out what attributes might bring additional upvotes for a dataset on Kaggle. The second goal is to potentially help\u00a0in improving the overall quality of the uploaded datasets by Kagglers.\n\n#### This notebook content: \n\n* [1. General statistical overview of the Kaggle datasets](#section-one)\n* [2. Correlation between the number of views\/downloads\/kernels and the upvotes](#section-two)\n* [3. Dataset usability rating and the upvotes](#section-three)\n- [3.1 Tags](#subsection-one)  \n- [3.2 Licenses](#subsection-two)\n- [3.3 Description & subtitle](#subsection-three)\n* [4. Number of dataset versions and the upvotes](#section-four)\n* [5. Dataset age and the upvotes](#section-five)\n* [6. Dataset author performance tier and the upvotes](#section-six)\n* [7. Hyped topics and the upvotes](#section-seven)\n* [Conclusion](#section-eight)","1172b66d":"#### Top 20 upvoted datasets uploaded in 2019:","e4d4597b":"#### Top 20 upvoted datasets uploaded in 2020:","c716c0bf":"It seems that there is no correlation between the number of dataset versions and the upvotes. That looks fair as datasets aren't like kernels' code that always has some room for improvement. Once the good dataset created - it can stay untouched for a while getting the upvotes over time as more and more Kagglers use it for their kernels\n\n<a id=\"section-five\"><\/a>\n### 5. Dataset age and the upvotes\n\nIs there a correlation between how long the dataset stays on Kaggle and its upvotes?","2e4a5921":"<a id=\"section-one\"><\/a>\n### 1. General statistical overview of the Kaggle datasets\n\n*Important note:* all datasets in the Meta Kaggle are public. There is no access to private datasets on Kaggle and it does make sense. \n\nThe very first dataset was uploaded to Kaggle in 2015. Since then the number of datasets was increasing dramatically year by year as follows:\n","49df53b5":"On the above graph it is exactly the opposite: the higher the author tier - the better average upvotes are. That is expected because more experienced authors create better datasets and have more followers. Not absolutly clear how these two variables influence each other.\n\n<a id=\"section-seven\"><\/a>\n### 7. Hyped topics and the upvotes\n\nBy looking at the datasets search page, sometimes it seems that the most upvoted datasets on Kaggle are usually on hyped\/hot topics (COVID19 etc). Let's look at the most upvoted datasets uploaded in the last 3 years and check if that is correct.","38031bbf":"Dataset uploads significantly rose year by year (especially in 2020) and this is expected as the machine learning related disciplines became more popular recently and the number of Kaggle activities grew as a result. \n\nLet's see other statistics:","83eb865c":"Seems like there is a correlation between the existence of a tag on a dataset and the average upvotes the dataset obtains. Datasets with 0 tags on a dataset actually have the least average upvotes even though\u00a0there are many more datasets on Kaggle with no tags. \n\nThe number of tags used is also somewhat correlated to average upvotes with the highest mean being at 13 tags. \n\nSo the obvious conclusion here is to put at least a couple of tags on a dataset in order to attract views and probably get some upvotes.\n\n<a id=\"subsection-two\"><\/a>\n#### 3.2 License\n\nIs there a correlation between the existence of license type on a dataset and its upvotes?","68d02813":"As seen, 59% of all datasets uploaded on Kaggle aren't getting any votes at all and only 8% of datasets are getting more than 10 votes. \n\nGenerally, the better quality of a dataset, the more upvotes it has. There are some factors that potentially influence the number of dataset upvotes. I am going to look closer at these. \n\n<a id=\"section-two\"><\/a>\n### 2. Correlation between the number of views\/downloads\/kernels and the upvotes","42b750ec":"Most of the datasets are uploaded by novices. Now let's see who gets the most of the average upvotes:","a9a6236a":"As seen most of the datasets on Kaggle don't have any tags (34k). Also, only a few datasets have more than 8 tags. Let's now see how the number of dataset tags affects the average number of upvotes.","60a2495d":"There is pretty much a linear dependency between the number of upvotes and the number of downloads\/views\/kernels related to this dataset. However, that might mean at least 2 things:\n\n- on the one hand, if the dataset author creates its own kernels and does something in order to get as many views on their dataset as possible, that might potentially bring some additional upvotes\n- on the other hand, this can be a \"[reverse causality](https:\/\/www.statisticshowto.com\/reverse-causality\/#:~:text=Reverse%20causality%20means%20that%20X,exposure%20causes%20the%20risk%20factor.)\" issue. Better quality datasets with upvotes - get more views, they're downloaded frequently and more Kagglers make kernels on them as a result\n\nSo I will try to find some other dataset quality variables\u00a0\n\n<a id=\"section-three\"><\/a>\n### 3. Dataset usability rating and the upvotes\n\nThe usability rating is assigned to a dataset based on certain criteria and has a range from 1 (lowest) to 10 (highest). The usability rating was recently introduced on Kaggle and unfortunately, the Meta Kaggle dataset does not contain any values on it. \n\nHowever, the rating is calculated in some way and it depends on the information categories that are filled out by the dataset author. The more categories are filled out - the higher the rating. \u00a0\n\nThe main categories are *Tags, License, Description, Subtitle*\n\n<a id=\"subsection-one\"><\/a>\n####    3.1 Tags \n\nIs there a correlation between the existence of tags on a dataset and its upvotes?","160fb267":"#### Top 20 upvoted datasets uploaded in 2018:","c16ecfe4":"Doesn't seem very much correlated, but if I look into the average dataset upvotes by years uploaded, the picture is a bit different:","06ae9058":"It is clear that most of the datasets on Kaggle don't have descriptions and subtitles on them. Let's now see how the existence of description\/subtitle affects the number of upvotes","63aaf4a0":"As seen, datasets with descriptions and subtitles achieve more upvotes in total. Even though\u00a0the majority of the datasets on Kaggle don't have both description and subtitle. Seems legit as from the usability and quality standpoints it is good to put a subtitle and description for a dataset, so other kagglers can see more details about it in a convenient way.\n\nThe obvious conclusion here is to definitely put a description & a subtitle when uploading a dataset to Kaggle in order to make it decent and get more upvotes. \n\nIn general, seems like all dataset usability categories affect the upvotes, and thus it is better to treat it seriously and document the dataset well if the upvotes needed. \n\n<a id=\"section-four\"><\/a>\n### 4. Number of dataset versions and the upvotes\n\nThe assumption: datasets that are frequently updated (have more versions) - achieve more upvotes. In order to see it, I will get the maximum number of versions from a dataset_versions table and will try to see if this is the case.","6c782b7c":"Interesting that \"Reddit API\" datasets have the most average upvotes and there are only 40+ datasets with that license. The \"Unknown\" or no license datasets get the least average upvotes besides the fact that there are many more datasets with the \"Uknown\" license on Kaggle.\n\nSeems like license specifying has a dependency on the average upvotes, and it is better to at least put some license type when uploading the dataset and not leaving it blank. It also looks fair enough because better quality datasets are made by more professional and responsible kagglers who usually specify the license.\u00a0\n\n<a id=\"subsection-three\"><\/a>\n#### 3.3 Description & subtitle\n\nIs there a correlation between the existence of the dataset description & subtitle and its upvotes?\n\nIn order to do that I first insert the subtitles & descritptions into the datasets dataframe and then convert the values as follows: \n- if there is a text element in the subtitle\/descritption col, that would be \"subtitle\/descritption exists\" \n- if there is a null value in the subtitle\/descritption col, that would be \"no subtitle\/descritption\" ","a35012a6":"In 2020, COVID-19 related datasets actually had the most upvotes, but for other years the dataset topics are well distributed across various themes. So probably in order to obtain the upvotes, the dataset can be of any theme as long as it is good in terms of quality and usability.\n\n<a id=\"section-eight\"><\/a>\n### Conclusion\n\n- There is a strong correlation between the number of upvotes and the number of kernels\/downloads\/views associated with that dataset. However, the way they affect each other isn't 100% clear\n \n- The average number of upvotes for datasets with at least 1 tag is higher than the average number of upvotes for datasets without tags. Also the more tags - the higher the average upvotes number. \n\u00a0\n- The average number of upvotes for datasets with a specified license type is higher than the average number of upvotes for datasets without the license. \n\n- The average number of upvotes for datasets with both description and subtitle is higher than the average number of upvotes for datasets without any of these. \n\n- There is no correlation between the number of upvotes and the number of dataset updates\n\u00a0\n- There is no direct correlation between the number of days the dataset stays on Kaggle and the upvotes. However, the average number of upvotes for older datasets is higher\u00a0(most likely because there were too many datasets with low upvotes uploaded recently)\n \n- The average number of upvotes for datasets that were uploaded by the authors with higher performance tiers is higher than the authors with lower tiers\n\n- Popular topics are quite well distributed across the most upvoted datasets in the last 3 years\n\nIt is really difficult to create a popular dataset, that is noticed and upvoted by Kagglers. Nearly 60% of uploaded datasets aren't getting any upvotes and only 8% of datasets achieve more than 10 upvotes.\n\nViews, kernels, and downloads are correlated to upvotes. So potentially it's a good idea to add a few kernels to your dataset and try to attract some views to it.\n\nIn terms of dataset usability, it is strongly advised to add tags, license type, description, and subtitles for more upvotes.\n\nFrequently updating your dataset isn't really helpful in terms of upvotes. Although, if the dataset is of good quality - it might gain some additional upvotes with time. \n\nProbably it doesn't really matter if the dataset topic is currently on hype or not. More important is the quality and usability of a dataset and this tends to be more valued on Kaggle.\u00a0","3f7264e8":"At the beginning of this notebook, it was shown that more and more datasets are uploaded on Kaggle every year. From the last figure, it is seen that the older datasets on average are getting more upvotes over time. \n\nAt first glance it looks like the longer it takes for a dataset to stay on Kaggle, the more average upvotes it gets. On the other hand, it might not be the case because so many users just upload datasets of any quality waiting for upvotes and the quantity of uploads is increasing dramatically as a result (especially in 2020). However, quantity isn't equal to quality and probably older datasets were much better quality-wise than most of the new ones. That might be the reason on why on average older datastes get better upvotes: fewer & better quality vs. many with the worse quality.\n\nMy guess would be: if the dataset is of a good usability standard and quality, it would still have a high chance of obtaining more upvotes over time.\u00a0\n\n<a id=\"section-six\"><\/a>\n### 6. Dataset author performance tier and the upvotes\n\nDoes the performance tier of the dataset author affect the number of upvotes?\n\nThere are 6 tiers on Kaggle and the way they presented in the user table is as follows:\n\n0 - Novice\n\n1 - Contributor\n\n2 - Expert \n\n3 - Master\n\n4 - Grandmaster \n\n6 - Kaggle Team\n\nLet's see how they generally distributed over the Kaggle datasets:","dd0e5324":"The unknown - means the author hasn't specified a license for a dataset and left it blank. As seen, most of the datasets on Kaggle do not have the license mentioned and this is expected. Let's now see what license types have the most upvotes on average"}}