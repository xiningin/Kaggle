{"cell_type":{"6cf3ef2c":"code","30a51eb9":"code","bb422169":"code","c1f74a17":"code","9a6ef240":"code","be6dec58":"code","f3cf9110":"code","391d67d0":"code","69667f14":"code","790dde80":"code","712737d5":"code","1cf6ae15":"code","bd1c5b70":"code","76a511ca":"code","db6de1e1":"code","5ec0917f":"code","c03a3641":"code","1c59c1fe":"code","87344d4b":"code","24521051":"code","9d7980d3":"code","51bca330":"code","b0956e1d":"code","39df625f":"code","9466a644":"code","84c98e07":"code","f01a2129":"code","c24bb3f8":"code","6afc9ffb":"code","c0a19ff7":"code","6af18b6c":"code","b8ac0cf1":"markdown","d0e40fb9":"markdown"},"source":{"6cf3ef2c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","30a51eb9":"filepath ='\/kaggle\/input\/60k-stack-overflow-questions-with-quality-rate\/data.csv'\ndf = pd.read_csv(filepath)","bb422169":"df.head()","c1f74a17":"df.shape","9a6ef240":"df.dtypes","be6dec58":"df['Tags']","f3cf9110":"df['Tags'] = df['Tags'].apply(lambda x:x.replace('><',','))\ndf['Tags'] = df['Tags'].apply(lambda x:x.replace('>',''))\ndf['Tags'] = df['Tags'].apply(lambda x:x.replace('<',''))\n","391d67d0":"df.head()","69667f14":"def split_count(val):\n    z=[]\n    for i in range(len(val)):\n        z.extend(val[i].split(','))\n    return z    \n        ","790dde80":"df1['Tags']","712737d5":"top_tags = split_count(df['Tags'])","1cf6ae15":"top_tags = pd.DataFrame(top_tags,columns=['top'])\ntop_tags['top'].value_counts().nlargest(10)","bd1c5b70":"import plotly.express as px\nimport seaborn as sns\nimport matplotlib. pyplot as plt\n%matplotlib inline ","76a511ca":"px.bar(top_tags['top'].value_counts().nlargest(20),labels='counts')\n","db6de1e1":"df['Y'].value_counts()","5ec0917f":"df1 = df[df['Y']=='HQ'].reset_index().drop(['index'],axis  =1)\ndf2 = df[df['Y']=='LQ_CLOSE'].reset_index().drop(['index'],axis  =1)\ndf3 = df[df['Y']=='LQ_EDIT'].reset_index().drop(['index'],axis  =1)","c03a3641":"df1.head()","1c59c1fe":"split_count(df1['Tags'])","87344d4b":"top_tags = pd.DataFrame(top_tags,columns=['top'])\ntop_tags['top'].value_counts().nlargest(10)","24521051":"top_20_hq = pd.DataFrame(split_count(df1['Tags']),columns=['val'])\ntop_20_hq['val'].value_counts().nlargest(20)","9d7980d3":"px.bar(top_20_hq['val'].value_counts().nlargest(20))","51bca330":"top_20_lq_close = pd.DataFrame(split_count(df2['Tags']),columns=['val'])\ntop_20_lq_close['val'].value_counts().head(20)","b0956e1d":"px.bar(top_20_lq_close['val'].value_counts().head(20))","39df625f":"top_20_lq_edit = pd.DataFrame(split_count(df3['Tags']),columns=['val'])\ntop = top_20_lq_edit['val'].value_counts().head(20)\ntop","9466a644":"px.bar(top_20_lq_edit['val'].value_counts().head(20))","84c98e07":"top.values.tolist()","f01a2129":"top.index.tolist()","c24bb3f8":"import plotly.graph_objects as go","6afc9ffb":"def donut_plot(val):\n    fig  =go.Figure(data=[go.Pie(labels =val.index.tolist(),values = val.values.tolist(), hole = 0.3)])\n    fig.show()","c0a19ff7":"donut_plot(top_20_hq['val'].value_counts().nlargest(20))","6af18b6c":"fig  =go.Figure(data=[go.Pie(labels =top.index.tolist(),values = top.values.tolist(), hole = 0.3)])\nfig.show()","b8ac0cf1":"### Here we'll see the percentage distributio of Top 20 tags highest occuring with LQ Edit","d0e40fb9":"### Here we'll see the percentage distributio of Top 20 tags highest occuring with HQ values"}}