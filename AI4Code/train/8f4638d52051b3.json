{"cell_type":{"1280bfb6":"code","5e95628c":"code","4d71bf4a":"code","eb384248":"code","551cad73":"code","ffa6badf":"code","9ba505ae":"code","e732b63e":"code","a1624bb5":"code","f53c00fa":"code","e669e10c":"markdown","fb74a938":"markdown","93269eee":"markdown","d506ca7f":"markdown","1ddc64f4":"markdown","2e0b27df":"markdown","f2583dee":"markdown","99aa84fa":"markdown"},"source":{"1280bfb6":"import pandas as pd\nimport numpy as np\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense","5e95628c":"df = pd.read_csv(\"..\/input\/regression-with-neural-networking\/concrete_data.csv\")\ndf.head()","4d71bf4a":"df.isnull().sum()","eb384248":"df_columns = df.columns","551cad73":"pred = df[df_columns[df_columns!=\"Strength\"]]\ntarg = df[\"Strength\"]","ffa6badf":"targ.head()","9ba505ae":"pred_normal = ((pred - pred.mean())\/pred.std())\npred_normal.head()","e732b63e":"n_cols = pred_normal.shape[1]","a1624bb5":"def regression_model():\n    model = Sequential()\n    model.add(Dense(50,activation = \"relu\",input_shape = (n_cols,)))\n    model.add(Dense(50,activation =\"relu\"))\n    model.add(Dense(50,activation =\"relu\"))\n    model.compile(optimizer = \"adam\", loss = \"mean_squared_error\")\n    \n    return model","f53c00fa":"model = regression_model()\nmodel.fit(pred_normal,targ,validation_split = 0.3, epochs = 100, verbose = 1)","e669e10c":"# Normalizing Feature Set","fb74a938":"# <center> Regression Model using Neural Networking <\/center>\n<center>Authored by: Pratham Tripathi<\/center>\n\n- Regression is a type of supervised machine learning algorithm used to predict a continuous label. The goal is to produce a model that represents the 'best fit' to some observed data, according to an evaluation criterion.\n- In this Notebook, you will learn how to perform regression using Keras and Deep Learning. You will learn how to train a Keras neural network for regression and continuous value prediction, specifically in the context of Concrete Strength Prediction.","93269eee":"# Reading the data","d506ca7f":"# Feature And Target Set","1ddc64f4":"# Training And Testing the Neural Network","2e0b27df":"# Importing Libraries","f2583dee":"# Linear Regression Model\n- ## With 1 Input and 2 Hidden layers","99aa84fa":"# Checking data for NaN Values"}}