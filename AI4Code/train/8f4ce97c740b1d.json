{"cell_type":{"0cd0286a":"code","ed1d7018":"code","cdd990b9":"code","2300f7fd":"code","4a52f637":"code","9a54dfda":"code","32cec0cd":"code","b99ce658":"code","d21921b9":"code","effc0ed8":"code","ac7ab879":"code","a7546348":"code","12bd96d0":"code","ab9a3449":"code","a3ffa2e1":"code","29b70c0e":"code","8f551eab":"code","0160e0a6":"code","5dcb0f94":"code","74429e40":"code","b959a687":"code","a1322572":"code","7e0457e1":"code","0e34de6e":"code","48b36548":"code","3f54de76":"code","364af58a":"code","20a0f72b":"markdown","f833f8f0":"markdown"},"source":{"0cd0286a":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport random","ed1d7018":"df = pd.read_csv('\/kaggle\/input\/health-care-data-set-on-heart-attack-possibility\/heart.csv')\ndf = df.sample(frac=1).reset_index(drop=True)\ndf.head()","cdd990b9":"plt.scatter(df['age'],df['target'])","2300f7fd":"cross_sex = pd.crosstab(df['sex'],df['target'])\nplt.bar(['0','1'],cross_sex[0])\nplt.bar(['0','1'],cross_sex[1])","4a52f637":"cross_cp = pd.crosstab(df['cp'],df['target'])\nprint(cross_cp)\nplt.bar(['0','1','2','3'],cross_cp[0])\nplt.bar(['0','1','2','3'],cross_cp[1])","9a54dfda":"fig,ax = plt.subplots(figsize=(12,8))\nsns.violinplot(x='target',y='trestbps',data=df,ax=ax)","32cec0cd":"fig,ax = plt.subplots(figsize=(12,8))\nsns.violinplot(x='target',y='chol',data=df,ax=ax)","b99ce658":"fig,ax = plt.subplots(figsize=(12,8))\nsns.violinplot(x='target',y='thalach',data=df,ax=ax)","d21921b9":"fig,ax = plt.subplots(figsize=(12,8))\nsns.violinplot(x='target',y='oldpeak',data=df,ax=ax)","effc0ed8":"ax = plt.axes(projection='3d')\nax.view_init(40, 20)\nplt.figure(figsize=(10,8))\nax.scatter3D(df['age'],df['trestbps'],df['target'])","ac7ab879":"cross_fbs = pd.crosstab(df['fbs'],df['target'])\nplt.bar(['0','1'],cross_fbs[1])\nplt.bar(['0','1'],cross_fbs[0])","a7546348":"cross_restecg = pd.crosstab(df['restecg'],df['target'])\nprint(cross_restecg)\nplt.bar(['0','1','2'],cross_restecg[0])\nplt.bar(['0','1','2'],cross_restecg[1])","12bd96d0":"cross_exang = pd.crosstab(df['exang'],df['target'])\nprint(cross_exang)\nplt.bar([\"0\",'1'],cross_exang[0])\nplt.bar([\"0\",'1'],cross_exang[1])","ab9a3449":"cross_slope = pd.crosstab(df['slope'],df['target'])\nprint(cross_slope)\nplt.bar(['0','1','2'],cross_slope[0])\nplt.bar(['0','1','2'],cross_slope[1])","a3ffa2e1":"df['ca'].loc[df['ca'] == 4] = 0\ncross_ca = pd.crosstab(df['ca'],df['target'])\nprint(cross_ca)\nplt.bar(['0','1','2','3'],cross_ca[0])\nplt.bar(['0','1','2','3'],cross_ca[1])","29b70c0e":"thal_unique,thal_count = np.unique(df['thal'],return_counts=True)\nprint(thal_unique,thal_count)","8f551eab":"df['thal'].loc[(df['thal'] != 0) & (len(df['thal'].unique()) == 4)] -=1","0160e0a6":"thal_unique,thal_count = np.unique(df['thal'],return_counts=True)\nprint(thal_unique,thal_count)","5dcb0f94":"\ncross_thal = pd.crosstab(df['thal'],df['target'])\nprint(cross_thal)\nplt.bar(['0','1','2'],cross_thal[0])\nplt.bar(['0','1','2'],cross_thal[1])","74429e40":"fig,ax = plt.subplots(figsize=(14,10))\nsns.heatmap(df.astype(int).corr(),ax=ax,annot=True,robust=True)","b959a687":"y = df['target']\ndf.drop('target',inplace=True,axis=1)","a1322572":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score, classification_report,confusion_matrix\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neural_network import MLPClassifier","7e0457e1":"X = df","0e34de6e":"X.drop(['age'],inplace=True,axis=1)\nX_train,X_test,y_train,y_test = train_test_split(X,y)","48b36548":"Lr = LogisticRegression(C=100,max_iter=1000)\nLr.fit(X_train,y_train)\nLr_predict = Lr.predict(X_test)\nLr_score = Lr.score(X_test,y_test)\nLr_report = classification_report(y_test,Lr_predict)\nLr_conf_mat = confusion_matrix(y_test,Lr_predict)\nprint(Lr_conf_mat) \nprint(Lr_report)\nprint(\"Accuracy:\",Lr_score*100) ","3f54de76":"Nn = MLPClassifier()\nNn.fit(X_train,y_train)\nNn_predict = Nn.predict(X_test)\nNn_score = Nn.score(X_test,y_test)\nNn_conf_mat = confusion_matrix(y_test,Nn_predict)\nNn_report = classification_report(y_test,Nn_predict)\nprint(Nn_conf_mat)\nprint(Nn_report)\nprint(\"Accuracy:\",Nn_score*100)","364af58a":"Rf = RandomForestClassifier()\nRf.fit(X_train,y_train)\nRf_predict = Nn.predict(X_test)\nRf_conf_mat = confusion_matrix(y_test,Rf_predict)\nRf_score = Rf.score(X_test,y_test)\nRf_report = classification_report(y_test,Rf_predict)\nprint(Rf_conf_mat)\nprint(Rf_report)\nprint(\"Accuracy:\",Rf_score*100)","20a0f72b":"df['thal'] had 3 values according to the description \nthal: 0 = normal; 1 = fixed defect; 2 = reversable defect\n,but on checking for unique values it had 4 values","f833f8f0":"Assuming it was an error with the dataset I corrected it by substracting 1 from each row of that column"}}