{"cell_type":{"d465e266":"code","43f44add":"code","bb248ad5":"code","95b916b5":"code","2db4ed9a":"code","6a615e79":"code","38f9f210":"code","3934e8b4":"code","333dd09e":"code","cced5657":"code","3345201c":"code","bf080cd0":"code","ddd250f2":"code","074d9ca2":"code","67b9233d":"code","ed5a508c":"code","5358120f":"code","a58d6239":"code","ff59c6f1":"code","46280108":"code","bceb589d":"code","42738063":"code","84369759":"code","06c573d6":"code","7d9564e6":"code","ed0ad190":"code","1153de5d":"code","7410382f":"markdown","090e5c65":"markdown","155c6225":"markdown","415bc4bb":"markdown","1e5c7fc7":"markdown","3a78f047":"markdown"},"source":{"d465e266":"##Importing libraries\nimport numpy as np\nimport pandas as pd\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')","43f44add":"# We load the data of 50 startups in a DataFrame\ndf = pd.read_csv('..\/input\/startups-dataset\/50_Startups.csv')\n\n# We print some information about fifty_startups\nprint('df is of type:', type(df))\nprint('df has shape:', df.shape)","bb248ad5":"df","95b916b5":"df.head()","2db4ed9a":"df.tail()","6a615e79":"df.info()","38f9f210":"##Checking total null values in each column\ndf.isnull().sum()","3934e8b4":"## Making a copy so that the actual does not get modified and dropping any row that has all null values\ndf1 = df.copy()\ndf1.dropna(axis = 0, how = 'all', inplace =True)","333dd09e":"## Checking if the condition in the above cell has led to any change in the total number of null values\ndf1.isnull().sum()","cced5657":"df1['State'].value_counts()","3345201c":"## Using the mode to handle the missing values in the State column\ndf1['State'] = df1['State'].fillna(df1['State'].mode()[0])","bf080cd0":"df1","ddd250f2":"fig, ax =plt.subplots(figsize =(10, 6))\nsns.boxplot(df1.Profit)","074d9ca2":"fig, ax =plt.subplots(figsize =(10, 6))\nsns.distplot(df1.Profit)","67b9233d":"df1['Profit'] = df1['Profit'].fillna(df1['Profit'].mean())","ed5a508c":"df1","5358120f":"## For the rest of the columns, forward fill seems appropriate\ndf1.fillna(method ='ffill', axis = 0, inplace=True)","a58d6239":"df1","ff59c6f1":"df1.isnull().sum()","46280108":"## To check the correlation\ndf1.corr()","bceb589d":"sns.heatmap(df1.corr())","42738063":"## Here the relationship between R&D Spend and Profit is considered. \nsns.jointplot(x='R&D Spend',y='Profit',data=df1,kind='hex')","84369759":"sns.jointplot(x='Marketing Spend',y='Profit',data=df,kind='reg')","06c573d6":"sns.pairplot(df1)","7d9564e6":"sns.barplot(x='State',y='Profit',data=df1)","ed0ad190":"sns.boxplot(x=\"State\", y=\"Profit\", data=df,palette='rainbow')","1153de5d":"fig, (ax1, ax2, ax3) = plt.subplots(1, 3, sharey=True, figsize=(15, 5))\n\nax1.bar(df1.State, df1[\"R&D Spend\"])\nax1.set_title('R&D Spend Vs States')\n\nax2.bar(df1.State, df1[\"Administration\"])\nax2.set_title('Administration Spend Vs States')\n\nax3.bar(df1.State, df1[\"Marketing Spend\"])\nax3.set_title('Marketing Spend Vs States')\n\nplt.setp(ax1.xaxis.get_majorticklabels(), rotation=90)\nplt.setp(ax2.xaxis.get_majorticklabels(), rotation=90)\nplt.setp(ax3.xaxis.get_majorticklabels(), rotation=90)\nplt.show()","7410382f":"Here, the bar plot displays that startups in Florida make the highest profits while those in California make the least.","090e5c65":"This gives an estimation of how much the startups in each state spend on different departments","155c6225":"The boxplots of the different states against profits depict that the startups in California make profits in a wider range but the startups in Florida cover a higher range of profits. Also the median value of all the startups lie in the range between 100000 to 123000.","415bc4bb":"Around 100000 to 120000 profit is made when R&D Spendings are between 75000 to 90000","1e5c7fc7":"Using the Pair Plot can be helpful to understand how R&D Spend, Administration and Marketing Spend influences the Profit of the fifty startups.","3a78f047":"The correlation between R&D Spend and Profit is higher compared to Marketing Spend and Profit.  "}}