{"cell_type":{"b741ad10":"code","7e724b1e":"code","a706a68c":"code","65604267":"code","504d1c03":"code","e18cbd7c":"code","e4b6e67d":"code","416a7d3e":"code","4a4817ed":"code","3c49ac48":"code","e611b594":"code","0bc81e4d":"code","b3671317":"code","a2ae9a5d":"code","624edda4":"code","85ba3e98":"code","2b36f21c":"code","5a7b24c8":"code","0443f70f":"code","f9357e75":"code","87277298":"code","05bec2f1":"markdown","539f0427":"markdown","38f0b2a5":"markdown","33ecc7ea":"markdown","678c0fc8":"markdown","86af2207":"markdown"},"source":{"b741ad10":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7e724b1e":"data=pd.read_csv('..\/input\/world-happiness\/2016.csv')","a706a68c":"data.info()","65604267":"#correlation map\nf,ax=plt.subplots(figsize=(10,10))\nsns.heatmap(data.corr(),annot=True,linewidths=.5,fmt='.2f',ax=ax,center=0) \n","504d1c03":"data.head()","e18cbd7c":"#str.replace=change column names without brackest and space\ndata.columns = data.columns.str.strip().str.replace('(', '').str.replace(')', '').str.replace(' ', '')\n","e4b6e67d":"data.head()","416a7d3e":"data.columns","4a4817ed":"#line plot \n\n#kind=kind of plot ,color=color of plot,label=label we draw,linewidth=width of line\n#alpha=transparency,grid=is there grid(boolean),linestyle= shape of the line showing the label we have drawn\ndata.HappinessScore.plot(kind='line',color='r',label='HappinessScore',linewidth=1,alpha=0.5,grid=True,linestyle='-')\ndata.LowerConfidenceInterval.plot(kind='line',color='g',label='LowerConfidenceInterval',linewidth=1,alpha=0.5,grid=True,linestyle='-')\ndata.UpperConfidenceInterval.plot(kind='line',color='b',label='UpperConfidenceInterval',linewidth=1,alpha=0.5,grid=True,linestyle='-')\ndata.EconomyGDPperCapita.plot(kind='line',color='purple',label='EconomyGDPperCapita',linewidth=1,alpha=0.5,grid=True,linestyle='-')\ndata.Family.plot(kind='line',color='c',label='Family',linewidth=1,alpha=0.5,grid=True,linestyle='-')\ndata.HealthLifeExpectancy.plot(kind='line',color='m',label='HealthLifeExpectancy',linewidth=1,alpha=0.5,grid=True,linestyle='-')\ndata.Freedom.plot(kind='line',color='y',label='Freedom',linewidth=1,alpha=0.5,grid=True,linestyle='-')\n\n\nplt.legend(loc='upper right') #legend=show label name into plot\nplt.xlabel('x axis')          #label=name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')        #title =title of plot\nplt.figure(figsize=(10,20))","3c49ac48":"#scatter plot \n\n#1st plot\n# x=Freedom,  y=HappinessScore\ndata.plot(kind='scatter',x='Freedom',y='HappinessScore',alpha=0.5,color='r')\nplt.xlabel('Freedom')          #label=name of label\nplt.ylabel('HappinessScore')\nplt.title('Freedom-HappinessScore  Scatter Plot')        #title =title of plot\n\n#2nd plot\n# x=Freedom,  y=HappinessScore\ndata.plot(kind='scatter',x='EconomyGDPperCapita',y='HappinessScore',alpha=0.5,color='m')\nplt.xlabel('EconomyGDPperCapita')          #label=name of label\nplt.ylabel('HappinessScore')\nplt.title('EconomyGDPperCapita-HappinessScore Scatter Plot')        #title =title of plot","e611b594":"#alternative scatter plot\nplt.scatter(data.Freedom,data.HappinessScore,alpha=0.5,color='c')","0bc81e4d":"#Histogram\n\n#bins=number of bar in figure\n#fizgsize =size of figure\ndata.HappinessScore.plot(kind='hist',bins=50 ,figsize=(7,7),color='m')","b3671317":"data[np.logical_and(data['HappinessScore']>7.501,data['Freedom']>0.57)]","a2ae9a5d":"#this is the same as above 'logical_and' control\ndata[(data['HappinessScore']>7.501) & (data['Freedom']>0.57)]","624edda4":"data[np.logical_or(data['HappinessScore']>7.501,data['Freedom']>0.57)]","85ba3e98":"#this is the same as  above 'logical_or' control\ndata[(data['HappinessScore']>7.501) | (data['Freedom']>0.57)]","2b36f21c":"#Stay in loop if condition(i is not equal 5) is true\ni=0\nwhile (i !=5):\n    print ('i:',i)\n    i+=1\nprint('i is equal 5')   ","5a7b24c8":"#Stay in loop if condition(i is not equal 5) is true\nlis=[1,2,3,4,5]\nfor i in lis:\n    print('i is:',i)\n","0443f70f":"#Get index and value of List\n#Enumerate index and value of list\n#index : value = 0:1 , 1:2 , 2:3 , 3:4 , 4:5\nfor index,value in enumerate(lis): # get index of list and value of list\n    print(index,\" : \", value)\n","f9357e75":"#Get key and value of Dictionaries\n#We can use for loop to achive key and value of dictionary.\n#We learnt key and value at dictionary part.\n\ndictionary={'spain':'madrid','france':'paris'}\n\nfor key,value in dictionary.items():\n    print(key,\" : \",value)\n    ","87277298":"#For pandas we can achieve index and value\nfor index,value in data[['HappinessScore']][0:5].iterrows():\n    print(index,\" : \",value)","05bec2f1":"# Get rid of the comma and space in the column name\n","539f0427":" # Logic Control\n","38f0b2a5":"# MATPLOTLIB\n\n### line plot is better when x axis is time \n### scatter plot is better when there is correlation between two variables\n### Histogram is better when we need to distrubition of numericak data.\n","33ecc7ea":"# While and For loops","678c0fc8":"In this part,you learn:\n* how to import csv file\n* How to get rid of the comma and space in the column name\n* correlation map\n* plotting line,scatter and histogram\n* basic dictionary features\n* basic pandas features like filtering that is actually something always used and main for being data scientist\n* while and for loops\n* Get index and value of list,dictionary,data","86af2207":"# INTRODUCTION TO PYTHON\n"}}