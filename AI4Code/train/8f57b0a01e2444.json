{"cell_type":{"8053cb41":"code","417bb222":"code","b9462d25":"code","bbd29658":"code","ce5c694f":"code","0fde7b74":"code","adf4a1f7":"code","eaa5f2fa":"code","24a0c44d":"code","ce47a678":"code","da514a7f":"code","7614acd3":"code","a527ad4d":"code","3cef7021":"code","36f53235":"code","3d47d710":"code","422bdcaa":"code","3d964ff8":"code","ae46b824":"code","9ff52359":"code","9616874b":"code","c24f9e0d":"code","dcb59cf6":"markdown","b6b44b29":"markdown","045b6f6a":"markdown","b8ef03d2":"markdown","5ddf07a1":"markdown","ea46309b":"markdown","5d9fcf69":"markdown","5a846acb":"markdown"},"source":{"8053cb41":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","417bb222":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics","b9462d25":"df=pd.read_csv('..\/input\/vehicle-dataset-from-cardekho\/car data.csv')","bbd29658":"df.head()","ce5c694f":"df.info()","0fde7b74":"df.describe()","adf4a1f7":"print(df.Fuel_Type.unique())\nprint(df.Year.unique())","eaa5f2fa":"dfnew=df.drop(['Selling_Price'],axis=1)\ndfnew\ndfnew=dfnew.drop(['Car_Name'],axis=1)\ndfnew\ndfnew['current_yr']=2020\ndfnew\ndfnew['no_yrs']=dfnew['current_yr']-dfnew['Year']\ndfnew=dfnew.drop(['Year','current_yr'],axis=1)\ndfnew\ndfnew=pd.get_dummies(dfnew,drop_first=True)\ndfnew","24a0c44d":"sns.set()\nplt.plot(df.Selling_Price,df.Kms_Driven,'-')\nsns.scatterplot(data=df,x=df.Kms_Driven,y=df.Selling_Price,hue='Fuel_Type')","ce47a678":"a=df.corr()\na\nb=a.index\nz=sns.heatmap(a,annot=True,cmap=\"RdYlGn\")","da514a7f":"plt.plot(df.Selling_Price,df.Present_Price)","7614acd3":"sns.scatterplot(data=df,x=df.Selling_Price,y=df.Present_Price,hue='Fuel_Type')","a527ad4d":"y=df.Selling_Price","3cef7021":"model=ExtraTreesRegressor()\nmodel.fit(dfnew,y)","36f53235":"model.feature_importances_","3d47d710":"check=pd.Series(model.feature_importances_,index=dfnew.columns)\ncheck.nlargest(6).plot(kind='barh')\nplt.show()","422bdcaa":"xtrain,xtest,ytrain,ytest=train_test_split(dfnew,y)\nprint(xtrain.shape)\nprint(xtest.shape)\nprint(ytrain.shape)\nprint(ytest.shape)\nprint(df.shape)","3d964ff8":"model=LinearRegression()","ae46b824":"check=model.fit(xtrain,ytrain)\npredictions=check.predict(xtest)","9ff52359":"sns.distplot(ytest-predictions)","9616874b":"plt.scatter(ytest,predictions)","c24f9e0d":"print('MAE:', metrics.mean_absolute_error(ytest, predictions))\nprint('MSE:', metrics.mean_squared_error(ytest, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(ytest, predictions)))","dcb59cf6":"getting a brief idea of the data(feature engineering)","b6b44b29":"**Now lets gets a intuition about feature importance**********","045b6f6a":"upper graph depicts gausian distribution","b8ef03d2":"**reading the dataset**","5ddf07a1":"**IMPORTING ALL THE NECESSARY LIBRARIES ******","ea46309b":"visualizing the data to get a more indepth understanding","5d9fcf69":"**Now lets train the model....**","5a846acb":"**so their are not null values**"}}