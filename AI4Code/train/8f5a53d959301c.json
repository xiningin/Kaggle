{"cell_type":{"0a31e4ce":"code","83a50722":"code","734296d6":"code","99004361":"code","bd6a4c8b":"code","288d8d2c":"code","90e25424":"code","7184c3cb":"code","1d4e77d1":"code","723b8ff0":"code","87fab29c":"code","bed3f466":"code","48355de1":"code","8c816c15":"code","61de6194":"code","d70bec06":"code","58327bd9":"code","b9fb75a8":"code","29ab4390":"code","824bc60f":"code","c9001eb2":"code","ab6d5b91":"code","63e35d68":"code","7f17025f":"code","6c1e3197":"markdown","76636ddb":"markdown","095b0f66":"markdown","e9088e65":"markdown"},"source":{"0a31e4ce":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","83a50722":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LinearRegression,LogisticRegression","734296d6":"data=pd.read_csv(\"\/kaggle\/input\/dissolved-oxygen-prediction-in-river-water\/train.csv\")\ndata.head()","99004361":"data.info()","bd6a4c8b":"null_columns=list(data.columns[data.isna().sum()>100])\ndata.drop(null_columns,axis=1,inplace=True)","288d8d2c":"null_columns=list(data.columns[data.isna().sum()>100])\ndata.drop(null_columns,axis=1,inplace=True)","90e25424":"data","7184c3cb":"data.isnull().sum()","1d4e77d1":"print(\"Columns with missing values:\",(data.isna().sum(axis=0)!=0).sum())\nprint(\"Rows with missing values:\",(data.isna().sum(axis=1)!=0).sum())      ","723b8ff0":"data.dropna(axis=0,inplace=True)","87fab29c":"data.isna().sum().sum()","bed3f466":"data","48355de1":"data.drop('Id',axis=1,inplace=True)","8c816c15":"data","61de6194":"y=data['target']\nX=data.drop('target',axis=1)","d70bec06":"print(X)\nprint(y)","58327bd9":"scaler=StandardScaler()\nX=scaler.fit_transform(X)\npd.DataFrame(X)","b9fb75a8":"X_train,X_test,y_train,y_test=train_test_split(X,y,train_size=0.7)\nmodel=LinearRegression()\nmodel.fit(X_train,y_train)\nmodel_R2=model.score(X_test,y_test)","29ab4390":"print(\"Model R2 Score:\",model_R2)","824bc60f":"y.mean()","c9001eb2":"y_new=pd.qcut(y,q=2,labels=[0,1])","ab6d5b91":"X_train,X_test,y_train,y_test=train_test_split(X,y_new,train_size=0.7)","63e35d68":"model=LogisticRegression()\nmodel.fit(X_train,y_train)\nmodel_acc=model.score(X_test,y_test)","7f17025f":"print(\"Model Accuracy:\",model_acc)","6c1e3197":"**Training Regression**","76636ddb":"**New Problem :Predicting High or Low Dissolving oxygen**","095b0f66":"Splitting Dataset ","e9088e65":"Missing values\n"}}