{"cell_type":{"3d1148de":"code","99cc47dd":"code","4c1c67f0":"code","1cc283f8":"code","776dacae":"code","94b01486":"code","d40bb518":"code","eea1c7d7":"code","db64ab92":"code","f23a0396":"code","80c31759":"code","b23074c5":"code","824a04b4":"code","37c43b01":"code","830c7a99":"code","09d3c37c":"code","17c62736":"code","45571583":"code","57a0217f":"code","f9df52b0":"code","c802f952":"code","6d9f5ea7":"code","ca326879":"code","8d8f28a4":"code","11284c4b":"markdown","3b581393":"markdown","1b03e9ff":"markdown","47f3381a":"markdown","dd001c04":"markdown","aabc3fa8":"markdown","94a98f96":"markdown","33c91e6e":"markdown","a70e7cce":"markdown","9f29ffbb":"markdown","ac132c69":"markdown"},"source":{"3d1148de":"\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# plotly\n# import plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","99cc47dd":"\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# plotly\n# import plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","4c1c67f0":"#pip install plotly==3.10.0","1cc283f8":"times_data = pd.read_csv(\"\/kaggle\/input\/world-university-rankings\/timesData.csv\")","776dacae":"times_data","94b01486":"times_data.info()","d40bb518":"times_data.head(9)","eea1c7d7":"# prepare data frame\ndf = times_data.iloc[:100,:]\n\n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n\n# Creating trace1\ntrace1 = go.Scatter(\n                    x = df.world_rank,\n                    y = df.citations,\n                    mode = \"lines\",\n                    name = \"citations\",\n                    marker = dict(color = 'rgba(16, 86, 40, 0.8)'),\n                    text= df.university_name)\n# Creating trace2\ntrace2 = go.Scatter(\n                    x = df.world_rank,\n                    y = df.teaching,\n                    mode = \"lines+markers\",\n                    name = \"teaching\",\n                    marker = dict(color = 'rgba(100, 10, 2, 0.8)'),\n                    text= df.university_name)\ndata = [trace1, trace2]\nlayout = dict(title = 'Citation and Teaching vs World Rank of Top 100 Universities',\n              xaxis= dict(title= 'World Rank',ticklen= 5,zeroline= False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","db64ab92":"# prepare data frames\ndf2014 = times_data[times_data.year ==2014].iloc[:100,:]\ndf2015 = times_data[times_data.year ==2015].iloc[:100,:]\ndf2016 = times_data[times_data.year ==2016].iloc[:100,:]\n\ntrace1 = go.Scatter(x= df2014.world_rank,\n                   y= df2014.citations,\n                   mode = \"markers\",\n                   name = \"2014\",\n                   marker = dict(color= 'rgba(255,128,255,0.8)'),\n                   text= df2014.university_name)\n# creating trace2\n \ntrace2 = go.Scatter(x=df2015.world_rank,\n                    y=df2015.citations,\n                    mode = \"markers\",\n                    name = \"2015\",\n                    marker = dict(color= 'rgba(255,255,128,0.8)'),\n                    text= df2015.university_name)\n\n# creating trace3\ntrace3 = go.Scatter(x=df2016.world_rank,\n                   y=df2016.citations,\n                   mode = \"markers\",\n                   name = \"2016\",\n                   marker = dict(color= 'rgba(0,255,200,0.8)'),\n                   text = df2016.university_name)\n\ndata = [trace1,trace2,trace3]\nlayout= dict(title= 'Citations vs world rank of top 100 univerities with 2014,2015,2016 years',\n            xaxis = dict(title= 'World Rank', ticklen=5,zeroline=False), \n            yaxis= dict(title='Citations', ticklen=5, zeroline= False))\nfig= dict(data=data, layout=layout)\niplot(fig)","f23a0396":"df2014 = times_data[times_data.year == 2014].iloc[:3,:]\n\ntrace1 = go.Bar(x=df2014.university_name,\n               y= df2014.citations,\n               name=\"citations\",\n               marker= dict(color='rgba(255,174,200,0.8)',line =dict(color='rgb(0,0,0)',width=1.5)),text= df2014.country)\n\ntrace2 = go.Bar(x= df2014.university_name,\n               y= df2014.teaching,\n               name =\"teaching\",\n               marker = dict(color= 'rgba(0,0,100,0.5)',line=dict(color='rgb(0,0,0)',width=1.5)),text=df2014.country)\ndata = [trace1,trace2]\n                \nlayout = go.Layout(barmode=\"group\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","80c31759":"df2014= times_data[times_data.year==2014].iloc[:3,:]\n\nx= df2014.university_name\ntrace1= {\n    'x': x,\n    'y': df2014.citations,\n    'name':'citations',\n    'type':'bar'\n};\ntrace2={\n    'x': x,\n    'y': df2014.teaching,\n    'name':'teaching',\n    'type':'bar'\n};\ndata = [trace1,trace2];\nlayout={\n    'xaxis':{'title': 'Top 3 universities'},\n    'barmode': 'relative',\n    'title':'citations and teaching of top 3 universities in 2014'\n};\n\nfig= go.Figure(data=data,layout = layout)\niplot(fig)","b23074c5":"df2016 = times_data[times_data.year == 2016].iloc[:7,:]\npie1 = df2016.num_students\npie1_list = [float(each.replace(',','.')) for each in df2016.num_students]\nlabels = df2016.university_name\n\n#figure\nfig = {\n    \"data\":[\n        {\n            \"values\":pie1_list,\n            \"labels\":labels,\n            \"domain\":{\"x\": [0,.5]},\n            \"name\":\"Number of Students Rates\",\n            \"hoverinfo\":\"label+percent+name\",\n            \"hole\": .3,\n            \"type\": \"pie\"\n        },],\n    \"layout\": {\n        \"title\": \"Universities Number of Students rates\",\n        \"annotations\": [\n            { \"font\": {\"size\": 20},\n            \"showarrow\": False,\n            \"text\": \"Number of Students\",\n            \"x\": 0.20,\n            \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","824a04b4":"df2016.head(20)","37c43b01":"df2016.info()","830c7a99":"#data preparation\ndf2016 = times_data[times_data.year == 2016].iloc[:20,:]\nnum_students_size = [float(each.replace(',','.')) for each in df2016.num_students]\ninternational_color = [float(each) for each in df2016.international]\ndata = [\n    {\n        'x': df2016.world_rank,\n        'y': df2016.teaching,\n        'mode': 'markers',\n        'marker': {\n            'color': international_color,\n            'size': num_students_size,\n            'showscale': True\n        },\n        \"text\": df2016.university_name\n    }\n]\niplot(data)","09d3c37c":" times_data\n    ","17c62736":"# prepare data\n\nx2011 = times_data.student_staff_ratio[times_data.year == 2011]\nx2012 = times_data.student_staff_ratio[times_data.year == 2012]\ntrace1 = go.Histogram(\n    x=x2011,\n    opacity = 0.75,\n    name = \"2011\",\n    marker = dict(color = 'rgba(171,50,96,0.6)'))\ntrace2 = go.Histogram(\n    x=x2012,\n    opacity = 0.75,\n    name= \"2012\",\n    marker=dict(color='rgba(112,50,100,0.6)'))\n\ndata = [trace1,trace2]\nlayout = go.Layout(barmode='overlay',\n                   title = 'students-staff ratio in 2011 and 2012',\n                   xaxis=dict(title= 'students-staff ratio'),\n                   yaxis=dict(title='Count'),\n)\nfig= go.Figure(data=data, layout=layout)\niplot(fig)","45571583":"#data preparation\n\nx2011 = times_data.country[times_data.year==2011]\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(background_color = 'white',\n                     width =512,\n                     height=384).generate(\" \".join(x2011))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\nplt.show()","57a0217f":"x2015 = times_data[times_data.year ==2015]\nx2015","f9df52b0":"#data preparation\n\nx2015 = times_data[times_data.year ==2015]\n\ntrace0 = go.Box(y=x2015.total_score, name='total score of universities in 2015', marker=dict(color='rgb(12,12,140)'))\ntrace1 = go.Box(y=x2015.research, name='research of universities in 2015', marker=dict(color='rgb(12,128,128)'))\n\ndata = [trace0,trace1]\niplot(data)","c802f952":"import plotly.figure_factory as ff\n\ndataf = times_data[times_data.year ==2015]\ndata2015 = dataf.loc[:,[\"research\", \"international\", \"total_score\"]]\ndata2015[\"index\"] = np.arange(1,len(data2015)+1)\n\nfig = ff.create_scatterplotmatrix(data2015, diag='box', index='index', colormap='Portland', colormap_type='cat',height=700,width=700)\niplot(fig)","6d9f5ea7":"trace1 = go.Scatter(x=dataf.world_rank, y=dataf.teaching, name=\"teaching\", marker=dict(color='rgba(16,112,2,0.8)'))\ntrace2 = go.Scatter(x=dataf.world_rank, y=dataf.income, xaxis='x2', yaxis='y2',name=\"income\", marker=dict(color='rgba(160,112,20,0.8)') )\ndata=[trace1,trace2]\nlayout = go.Layout(xaxis2=dict(domain=[0.6, 0.95],anchor='y2'), yaxis2=dict(domain=[0.6,0.95],anchor='x2'), title='Income and Teaching vs World Rank of Universities')\n\nfig= go.Figure(data=data, layout=layout)\niplot(fig)","ca326879":"trace1 = go.Scatter3d(x=dataf.world_rank, y= dataf.research, z=dataf.citations, mode='markers', marker=dict(size=10,color='rgb(255,0,0)'))\ndata= [trace1]\nlayout = go.Layout(margin=dict(l=0,r=0,b=0,t=0))\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","8d8f28a4":"trace1 = go.Scatter(\n    x=dataf.world_rank,\n    y=dataf.research,\n    name = \"research\"\n)\ntrace2 = go.Scatter(\n    x=dataf.world_rank,\n    y=dataf.citations,\n    xaxis='x2',\n    yaxis='y2',\n    name = \"citations\"\n)\ntrace3 = go.Scatter(\n    x=dataf.world_rank,\n    y=dataf.income,\n    xaxis='x3',\n    yaxis='y3',\n    name = \"income\"\n)\ntrace4 = go.Scatter(\n    x=dataf.world_rank,\n    y=dataf.total_score,\n    xaxis='x4',\n    yaxis='y4',\n    name = \"total_score\"\n)\ndata = [trace1, trace2, trace3, trace4]\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0, 0.45]\n    ),\n    yaxis=dict(\n        domain=[0, 0.45]\n    ),\n    xaxis2=dict(\n        domain=[0.55, 1]\n    ),\n    xaxis3=dict(\n        domain=[0, 0.45],\n        anchor='y3'\n    ),\n    xaxis4=dict(\n        domain=[0.55, 1],\n        anchor='y4'\n    ),\n    yaxis2=dict(\n        domain=[0, 0.45],\n        anchor='x2'\n    ),\n    yaxis3=dict(\n        domain=[0.55, 1]\n    ),\n    yaxis4=dict(\n        domain=[0.55, 1],\n        anchor='x4'\n    ),\n    title = 'Research, citation, income and total score VS World Rank of Universities'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","11284c4b":"# Pie Charts","3b581393":"# Scatter Matrix Plots","1b03e9ff":"# Bubble Charts\n\n* Example: University world rank (first 20) vs teaching score with number of students(size) and international score(color) in 2016","47f3381a":"# Box Plots","dd001c04":"# Word Cloud\n\n","aabc3fa8":"# Inset Plots","94a98f96":"# 3D Scatter Plot with Colorscaling","33c91e6e":"# Multiple Subplots","a70e7cce":"# Histogram\n\nLets look at histogram of student-staff ratio in 2011 and 2012 years","9f29ffbb":"# Bar Charts","ac132c69":"# Scatter"}}