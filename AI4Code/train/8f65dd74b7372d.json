{"cell_type":{"80c360b2":"code","d51f5e50":"code","0bc6beae":"code","5b5380c2":"code","857bb070":"code","f5753794":"code","46e65eb8":"code","ff876637":"code","8f239b0a":"code","48d08f70":"code","a16c2fd6":"code","51685d82":"code","f8179989":"code","c01d460d":"code","d9d182b2":"code","443cd51d":"code","bbb8ae3e":"code","742bbbdc":"code","e3d6b3c1":"code","ae0ba5be":"code","117837b9":"code","96f2c512":"code","444094cd":"code","e970a089":"code","9948c55f":"code","65e36c11":"code","97816f40":"code","a30b4814":"code","9532339c":"code","a0669c32":"code","2da8877d":"code","13a4a953":"code","b67260c0":"code","a2cf54fc":"code","be5f0ac5":"code","e670d084":"code","27e15534":"code","9612019c":"code","0c378398":"code","690b1623":"code","d8abc1a5":"code","21a9f4a1":"code","6bb4d225":"code","1df1b4b9":"markdown","377e2f47":"markdown","0771706f":"markdown","4451220b":"markdown","fd88f8e2":"markdown","4a5995bd":"markdown","5a7ed0ec":"markdown","785f2788":"markdown","a28c4a58":"markdown","055ccc77":"markdown","874c2e99":"markdown","68d587c8":"markdown","808ba130":"markdown","3ea7eecc":"markdown","bccefafb":"markdown","036c693e":"markdown","18c7b5cc":"markdown","6a2dba27":"markdown","c7437633":"markdown","2a667c07":"markdown","69c03d93":"markdown","17fa0c82":"markdown","f8056006":"markdown","3b83ff9f":"markdown","da5133a1":"markdown","3caa7f5c":"markdown","c679acb3":"markdown","88931a5c":"markdown","556700d5":"markdown","e217aed9":"markdown","701111f0":"markdown","6672be76":"markdown","e386ef45":"markdown","4b3e2f2a":"markdown"},"source":{"80c360b2":"import os\n\nimport pandas as pd\n\n# Ploting\nimport seaborn as sns\nimport matplotlib.pyplot as plt","d51f5e50":"def read_csv(file_path):\n    '''return data frame of csv file from the  file path'''\n    try:\n        df = pd.read_csv(file_path, na_values=[\"n\/a\",\"null\", 'NaN', ' ', \"na\", \"undefined\"])\n        return df\n    except:\n        print(\"Error: File doesn't Exist\")\n        return None\n\n\ndef null_percentage(df, df_name=''):\n    '''\n    Display Total Null percentage of the Data Frame\n    '''\n\n    number_of_rows, number_of_columns = df.shape\n    df_size = number_of_rows * number_of_columns\n\n    null_size = (df.isnull().sum()).sum()\n    percentage = round((null_size \/ df_size) * 100, 2)\n    print(f\"{df_name} Data Frame contain null values of { percentage }%\")\n\n\ndef get_column_with_many_null(df):\n    '''\n    Return List of Columns which contain more than 30% of null values\n    '''\n    df_size = df.shape[0]\n    \n    columns_list = df.columns\n    bad_columns = []\n    \n    for column in columns_list:\n        null_per_column = df[column].isnull().sum()\n        percentage = round( (null_per_column \/ df_size) * 100 , 2)\n        \n        if(percentage > 30):\n            bad_columns.append(column)\n    \n    return bad_columns\n\n\ndef clean_district(df):\n    '''Fill Null Values with Mode of the column in district'''\n    df = df.copy()\n    # columns with more than 30% null value\n    bad_columns = get_column_with_many_null(df)\n    \n    df = df[df['state'].notna()] # data frame with state value.\n    \n    for col in bad_columns:\n        the_mode = df[col].mode()[0]\n        df[col] = df[col].fillna(the_mode)\n    return df\n\n\ndef clean_product(df):\n    '''Return Data frame with Not null Sector(s)'''\n    return df[df['Sector(s)'].notna()]","0bc6beae":"## Ploting\ndef bar_plot(df, x_col, y_col, title=''):\n    plt.figure(figsize=(20, 7))\n    sns.barplot(data = df, x=x_col, y=y_col)\n    plt.title(title, size=20)\n    plt.xticks(rotation=75, fontsize=14)\n    plt.yticks( fontsize=14)\n    plt.xlabel(x_col, fontsize=16)\n    plt.ylabel(y_col, fontsize=16)\n    plt.show()\n    \ndef count_plot(df, col, title, hue=None):\n    plt.figure(figsize=(20, 7))\n    sns.countplot(data = df, y=col, hue=hue, order=df[col].value_counts().index)\n    plt.title(title, size=20)\n    plt.xticks(rotation=75, fontsize=14)\n    plt.yticks( fontsize=14)\n    plt.xlabel(col, fontsize=16)\n    plt.ylabel(\"Count\", fontsize=16)\n    plt.show()\n    \ndef pie_plot(df, col, title=''):\n    count = df[col].value_counts()\n    plt.figure(figsize=(20, 7))\n    plt.pie(list(count), labels=count.index, autopct='%1.2f%%')\n    plt.title(title, size=20)\n    plt.show()\n    \n    \ndef time_plot(df, x_col, y_col, title=''):\n    plt.figure(figsize=(20, 7))\n    sns.lineplot(data=df, x=x_col, y=y_col)\n    plt.title(title, size=20)\n    plt.xticks(rotation=75, fontsize=14)\n    plt.yticks( fontsize=14)\n    plt.xlabel(x_col, fontsize=16)\n    plt.ylabel(y_col, fontsize=16)\n    plt.show()","5b5380c2":"district_df = read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv')\nproduct_df = read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv')","857bb070":"null_percentage(district_df, 'District')\nnull_percentage(product_df, 'Product')","f5753794":"district_null_columns = get_column_with_many_null(district_df)\nproduct_null_columns = get_column_with_many_null(product_df)\n\nprint(\"District Columns With Null Value more than 30%\")\nprint(district_null_columns)\nprint()\nprint(\"Product Columns With Null Value more than 30%\")\nprint(product_null_columns)","46e65eb8":"district_df = clean_district(district_df)\nproduct_df = clean_product(product_df)","ff876637":"district_df.head()","8f239b0a":"# what schools do we have in Illinois\nIllinois = district_df[district_df['state'] == 'Illinois']\nIllinois","48d08f70":"count_plot(district_df, 'state', 'State Distribution')","a16c2fd6":"count_plot(district_df, 'locale', 'Local Distribution')\n# pie_plot(district_df, 'locale', 'Local Distribution')","51685d82":"count_plot(district_df, 'pct_black\/hispanic', 'Black\/Hispanic Distribution', hue='locale')","f8179989":"count_plot(district_df, 'pct_free\/reduced', \"Free or Reduced Distribution\")","c01d460d":"count_plot(district_df, 'county_connections_ratio', 'Connection Ratio')","d9d182b2":"count_plot(district_df, 'pp_total_raw', 'Total Expenditure')","443cd51d":"product_df.head()","bbb8ae3e":"result = product_df[product_df['Provider\/Company Name'] == 'Google LLC']\nresult.head()","742bbbdc":"# count_plot(product_df, 'Product Name', 'Most Visited Urls')\nresult = product_df['Provider\/Company Name'].value_counts()\nresult = result.head(10)\ntop_providers = pd.DataFrame({'Company': result.index, 'Count': result})\nbar_plot(top_providers, \"Count\", \"Company\", title='Top 10 Providers\/Companies')","e3d6b3c1":"product_df['Sector(s)'].value_counts()\ncount_plot(product_df, 'Sector(s)', 'Sector distribution')","ae0ba5be":"def separate(text):\n    main, sub = text.split('-')[0],text.split('-')[1:] \n    main = main.strip()\n    if type(sub) is list:\n        sub = ' '.join(sub)\n    sub = sub.strip()\n    return main\n\nproduct_df['Primary Essential Function'].value_counts()\ncheck_product_pdf = product_df.copy()\ncheck_product_pdf['Function'] = check_product_pdf['Primary Essential Function'].apply(separate)\ncheck_product_pdf.head()","117837b9":"pie_plot(check_product_pdf, 'Function', 'Most Used Functionalities')","96f2c512":"def get_school_engagement(school_id):\n    '''\n    Return district data frame if shcool id is present.\n    '''\n    if(f\"{school_id}.csv\" in directories):\n        file_path = f\"{engagement_path}\/{school_id}.csv\"\n        school = read_csv(file_path)\n        return school\n    else:\n        print(f\"{school_id} : Data Not found\")\n        return None\n\n    \ndef get_avilable_district_engaement_files():\n    '''\n    Return list of engagement files, which are present in the district list\n    '''\n    total_districts = [str(x) for x in list(district_df.district_id)]\n\n    files = []\n    for file in directories:\n        file_name = file.split('.')[0]\n        if(file_name in total_districts):\n\n            files.append(file)\n            \n    return files\n\n\ndef merge_engagement_files():\n    files = get_avilable_district_engaement_files()\n    \n    engagement_df_files = []\n    for file in files:\n        school_id = int(file.split('.')[0])\n        \n        df = get_school_engagement(school_id)\n        df['district_id'] = school_id\n        \n        engagement_df_files.append(df)\n        \n    return pd.concat(engagement_df_files)\n    ","444094cd":"engagement_path = '..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data'\ndirectories = os.listdir(engagement_path)\n\nIllinois_school_id = '8815' # school found in Illinois\nillinois_school = get_school_engagement(Illinois_school_id)\nillinois_school.head()","e970a089":"files = get_avilable_district_engaement_files()\nprint(f'Total Files in the engagement: {len(directories)}')\nprint(f'Total Files from districts : {len(files)}')\nprint(files)\n    \n","9948c55f":"concated_engagement = merge_engagement_files()\nconcated_engagement.head()","65e36c11":"print(f\"Total Shape of our Data set is {concated_engagement.shape}\")","97816f40":"# Null Percentage\nnull_percentage(concated_engagement)\nconcated_engagement.isnull().sum()","a30b4814":"null_removed_enagement = concated_engagement.dropna().copy()\nnull_percentage(null_removed_enagement)","9532339c":"null_removed_enagement['time'] = pd.to_datetime(null_removed_enagement['time'])","a0669c32":"result = null_removed_enagement.groupby('time').agg({'engagement_index': 'mean', 'pct_access': 'mean', 'lp_id': 'count'}).\\\n            reset_index()\n\ntime_plot(result, \"time\", \"engagement_index\", title='Engagement Over Time')","2da8877d":"time_plot(result, \"time\", \"pct_access\", title='Percentage of Access Over Time')","13a4a953":"general_df = pd.merge(null_removed_enagement, product_df, left_on='lp_id', right_on='LP ID' )","b67260c0":"general_df = pd.merge(general_df, district_df, left_on='district_id', right_on='district_id' )","a2cf54fc":"general_df.head()","be5f0ac5":"#Do we have null values ? \nnull_percentage(general_df)","e670d084":"result = general_df.groupby(['locale', 'Product Name']).agg({'time': 'count'})\nresult = result.reset_index()\n\ndef per_local(locale):\n    local  =  result[result['locale'] == locale]\n    \n    new_df = pd.DataFrame({\"Product Name\": local['Product Name'], \"time\": local['time']})\n    top_10 = new_df.sort_values(by='time', ascending=False).head(10)\n    bar_plot(top_10, \"Product Name\", \"time\", title=f'Top Used application In {locale}')\n    \n\nfor local in result.locale.unique():\n    per_local(local)","27e15534":"def calculate_engagement(col):\n    result = general_df.groupby([col]).agg({'engagement_index': 'mean'})\n    result = result.reset_index()\n    return result","9612019c":"result = calculate_engagement('locale')\nresult","0c378398":"# import plotly.express as px\n# # pie_plot(result, '')\n# fig = px.bar_polar(result, r=\"engagement_index\", theta=\"locale\", \n#             color_discrete_sequence= px.colors.sequential.thermal)\n# fig.show()\nbar_plot(result, \"locale\", \"engagement_index\", title=f'Engagement Index per each locale')\n","690b1623":"general_df['pct_black\/hispanic'].value_counts()","d8abc1a5":"majority = general_df[general_df['pct_black\/hispanic'].apply(lambda x: x in ['[0.6, 0.8[', '[0.8, 1['])]\nmajority.head()","21a9f4a1":"majority_engagement = calculate_engagement('state')\nbar_plot(majority_engagement, \"state\", \"engagement_index\", title=f'Engagement Index per each State On Majority black and hispanish')","6bb4d225":"majort_count = general_df.groupby('state').agg({'time':'count'})\nmajort_count = majort_count.reset_index()\nmajort_count = majort_count.sort_values(by='time', ascending=False)\n\n\nbar_plot(majort_count, \"state\", \"time\", title=f'Engagement Index per each State On Majority black and hispanish')","1df1b4b9":"<h2 style='padding:15px;font-size:20px; background-color:#5956D6; color:#fff'>EDA ( Exploratory Data Analysis )<\/h2>","377e2f47":"<h2 style='padding:15px;font-size:20px; background-color:#5956D6; color:#fff'>Insight About District DataFrame<\/h2>","0771706f":"<h2 style='padding:15px;font-size:20px; background-color:#5956D6; color:#fff'>General Overview<\/h2>\n\n- **What datas are we going to use for analysis ?** \n    - **engagement_data** : each file represent data from school district, the 4-digit number file name represent district_id\n    - **products_info.csv** : file includes information about the characteristics of the top 372 products with most users in 2020.\n    - **districts_info.csv** : file includes information about the characteristics of school districts, including data from NCES and FCC.\n\n\n- **How are some of  the datas collected ?** \n    - The Engagement datasets were collected from ChromeExtention on students activity over LearnPlatform. The extension collects page load events of over 10K education technology products in our product library, including websites, apps, web apps, software programs, extensions, ebooks, hardwares, and services used in educational institutions. The engagement data have been aggregated at school district level, and each file represents data from one school district.\n\n     ","4451220b":"#### Important Modules","fd88f8e2":"Most null values are from the engagement_index. but since our data set is much larger than our null values, we can drop the null values for our current analysis.","4a5995bd":"The top 3 school district are Connecticut, Utah and Massachusets","5a7ed0ec":"So for this case i will take values more than 50% and we see how the engaement is compare to the rest. where black and hispanish are the minorities","785f2788":"Do we have columns with more than 30% Null Values?\nThis kind of columsn might not have good help for our analysis.","a28c4a58":"<h2 style='padding:15px;font-size:20px; background-color:#5956D6; color:#fff'>Insight About Products DataFrame<\/h2>","055ccc77":"which product was used mostly on diffrent locales?","874c2e99":"Amost all the values in this column are similar except 1 value, we might consider droping this column","68d587c8":"Most of our Data are from suborb","808ba130":"Merge All the dataset into one dataset","3ea7eecc":"What Products of Google does the Students use?","bccefafb":"From the Above we say the engagement of district 8815 from state of Illinois. But to get the sense of the total engagement we need to merge add districts together and get the general overview.\n\nBut before we do that, we need to make sure the states we have are actually the district we are going to merge. so we need to filter only the districts we have on our clened dataset.","036c693e":"Which States are predominantly black and spanic and how does it affect the engagement ? ","18c7b5cc":"<h1 style='padding:30px; background-color:#5956D6; color:#fff; text-align:center;border-radius:15px'>COVID19 Impact on Digital Learning<\/h1>\n\n<center><img src=\"https:\/\/assets.euromoneydigital.com\/dims4\/default\/e321b24\/2147483647\/strip\/true\/crop\/780x355+0+0\/resize\/800x364!\/quality\/90\/?url=http%3A%2F%2Feuromoney-brightspot.s3.amazonaws.com%2F50%2Fc4%2Fa213aa9d88223ccedf894858cdd4%2Fcorona-digital-780.jpg\"><\/center>\n\n","6a2dba27":"The Engagement is reduced from the 6th month to the 8th month, This is due to the school ends on this period and students are their break, and return to school on september","c7437633":"Rural Areas are highly engaged than the others. does it mean being on a rural area increase the online engagement. it could be the case since most schools are outside rural areas and this could be the better means to education.","2a667c07":"Most Places Provide from 20% - 40% of Aid for their students, and some school provide aid more than that. It seems Most students get Aid In some way from the school. it could be a free lunch or payment.","69c03d93":"Reading Dataset Files","17fa0c82":"Lets us examine the school engagement in one school to get the feeling of the data","f8056006":"<h2 style='padding:15px;font-size:20px; background-color:#5956D6; color:#fff'>Welcome<\/h2>\nI higly appriciate you are taking the time to read this notebook. \nIn this Notebook we are going to analysize the impact of covid19 on the digital educational system.\n\n* What is covid ( just incase ) ? \n\nCoronavirus disease 2019 (COVID-19) is an infectious disease caused by the novel coronavirus,\nSARS-CoV-2, that appeared in late 2019. It is predominantly a respiratory illness that can affect\nother organs. People with COVID-19 have reported a wide range of symptoms, ranging from\nmild symptoms to severe illness. Symptoms may appear 2 to 14 days after exposure to the virus.\nSymptoms may include: fever or chills; cough; shortness of breath; fatigue; muscle and body\naches; headache; new loss of taste or smell; sore throat; congestion or runny nose; nausea or\nvomiting; diarrhea. [source](https:\/\/www.fda.gov\/media\/144637\/download#:~:text=Coronavirus%20disease%202019%20(COVID,or%20vomiting%3B%20diarrhea.)\n\n* Little Background About the company\n\nEducation technology company **LearnPlatform** was founded in 2014 with a mission to expand equitable access to education technology for all students and teachers. LearnPlatform\u2019s comprehensive edtech effectiveness system is used by districts and states to continuously improve the safety, equity, and effectiveness of their educational technology. LearnPlatform does so by generating an evidence basis for what\u2019s working and enacting it to benefit students, teachers, and budgets.\n\n* Ok, then what ? \nWell, The core questions we expect to answer are \n1. what does digital learning look like in 2020? \n2. how is digital learning affected by\n    - District Demography\n    - BroadBand Access\n    - State\/National Plocies","3b83ff9f":"What is the State of digital learning in 2020 ? \n\nThis question mainly want to answer the students online activity and engagement over the internet and the products on year of 2020.","da5133a1":"The Above graphs show one thig, Arizona got the smalles count of record but the largets engagement, on the contrary most of the data is cron connecticut but the engagement is low. so may be cunneticut is not suitable for black online education.","3caa7f5c":"<h2 style='padding:15px;font-size:20px; background-color:#5956D6; color:#fff'>Wroking on Engagement Dataset<\/h2>","c679acb3":"<h2 style='padding:15px;font-size:20px; background-color:#5956D6; color:#fff'>NoteBook Structure and Flow<\/h2>\n\n1. **EDA (Exploratory Data Analysis)** : this is not directly related to the project but it will help us to explore the dataset more indepath. Also we can clean out the empty values which might affect our anslysis. \n","88931a5c":"To get more insights and analyise more data we could merge the product data with our cleaned engagement data. Thi will provide us larget data set to explore and gain insights.","556700d5":"The above graph shows the most used functionalities of the websites,\n- LC :-> Learning and Curiculum\n- CM :-> Class Room Management\n- SDO :-> School and District Operation\n","e217aed9":"#### Helper functions","701111f0":"Clean Up The Data","6672be76":"NUL percentage of district and product datas","e386ef45":"Most States have a very similar application usage, Google is Leading the role.\nBut on town there is an activity on Netflix.\n\nNow what does the engagement value tell us about each state ?","4b3e2f2a":"<h2 style='padding:15px; color:#fff; background-color:#5956D6'>Engagement<\/h2>\n\nHow the engagement of digital learning relates to factors such as district demographics, broadband access, and state\/national level policies and events."}}