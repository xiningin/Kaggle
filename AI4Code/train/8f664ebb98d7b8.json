{"cell_type":{"56228236":"code","60daa90c":"code","3e39b71c":"code","d39702a4":"code","beedea9a":"code","e234a2f2":"code","b0a6e648":"code","eaeefa1a":"code","d3203114":"code","b2bd52a5":"code","d3b99954":"code","aae33239":"code","58ca1b4f":"code","a8658e1c":"code","983264a7":"code","92fb3d64":"code","d5027bcb":"code","a11208e7":"code","b8ef2751":"code","768c5a75":"code","e109135c":"code","125e6611":"markdown","ea9a7320":"markdown","a0ce98d0":"markdown","55609012":"markdown","a44586a6":"markdown","8fca0260":"markdown","c4f43eee":"markdown","eab578dc":"markdown","662cd49d":"markdown","5460cabf":"markdown","1724fa83":"markdown"},"source":{"56228236":"import numpy as np\nimport pandas as pd\nimport matplotlib\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport os\nimport re\nimport warnings\nimport io\nimport requests\n\n\nplt.style.use(\"seaborn-notebook\")\nfrom matplotlib.ticker import StrMethodFormatter\nfrom sklearn.preprocessing import MinMaxScaler,StandardScaler,LabelBinarizer","60daa90c":"train_data=pd.read_csv('..\/input\/titanic\/train.csv')\ntest_data=pd.read_csv('..\/input\/titanic\/test.csv')\ntrain_data.head()","3e39b71c":"train_data.columns.tolist()","d39702a4":"gender_data=pd.read_csv('..\/input\/titanic\/gender_submission.csv')\ngender_data.head()","beedea9a":"women=train_data.loc[train_data.Sex=='female']['Survived']\nrate_women=sum(women)\/len(women)\nrate_women","e234a2f2":"men=train_data.loc[train_data.Sex=='male']['Survived']\nrate_men=sum(men)\/len(men)\nrate_men","b0a6e648":"data=[train_data,test_data]\nfor dataset in data:\n    mean=train_data['Age'].mean()\n    std=test_data['Age'].std()\n    is_null=dataset['Age'].isnull().sum()\n    rand_int=np.random.randint(mean-std,mean+std,size=is_null)\n    age_slice=dataset['Age'].copy()\n    age_slice[np.isnan(age_slice)]=rand_int\n    dataset['Age']=age_slice\n    dataset['Age']=dataset['Age'].astype(int)","eaeefa1a":"survived='survived'\nnot_survived='not survived'\nfig,axes=plt.subplots(nrows=1,ncols=2,figsize=(16,8))\nwomen=train_data[train_data['Sex']=='female']\nmen=train_data[train_data['Sex']=='male']\nax=sns.distplot(women[women['Survived']==1].Age.dropna(),bins=18,label=survived,ax=axes[0],kde=False,color='green')\nax=sns.distplot(women[women['Survived']==0].Age.dropna(),bins=18,label=not_survived,ax=axes[0],kde=False,color=\"red\")\nax.legend()\nax=ax.set_title('Female')\nax=sns.distplot(men[men['Survived']==1].Age.dropna(),bins=18,label='Survived',ax=axes[1],kde=False,color='red')\nax=sns.distplot(men[men['Survived']==0].Age.dropna(),bins=18,label='not survived',ax=axes[1],kde=False,color='green')\nax.legend()\nax=ax.set_title('Male')","d3203114":"df=pd.read_csv('..\/input\/titanic\/train.csv')\nfig=px.scatter_3d(df,x=\"Name\",z='Age',y='Sex',color='Sex')\nfig.show()","b2bd52a5":"sns.barplot(x='Pclass',y='Survived',data=train_data)","d3b99954":"plt.rc('xtick',labelsize=14)\nplt.rc('ytick',labelsize=14)\n\nplt.figure()\nfig=train_data.groupby('Survived')['Pclass'].plot.hist(histtype='bar',alpha=0.8)\nplt.legend(('Died','Survived'),fontsize=12)\nplt.xlabel('Pclass',fontsize=18)","aae33239":"embarked_mode=train_data['Embarked'].mode()\ndata=[train_data,test_data]\nfor dataset in data:\n    dataset['Embarked']=dataset['Embarked'].fillna(embarked_mode)","58ca1b4f":"FacetGrid=sns.FacetGrid(train_data,row='Embarked',size=4.5,aspect=1.6)\nFacetGrid.map(sns.pointplot,'Pclass','Survived','Sex',order=None,hue_order=None)\nFacetGrid.add_legend()","a8658e1c":"sns.set(style='darkgrid')\nsns.countplot(x='Survived',data=train_data,hue=\"Embarked\",palette='Set1')","983264a7":"data=[train_data,test_data]\nfor dataset in data:\n    dataset['relatives']=dataset['SibSp']+dataset['Parch']\n    dataset.loc[dataset['relatives']>0,'travelled_alone']='No'\n    dataset.loc[dataset['relatives']==0,'travelled_alone']='Yes'\naxes=sns.factorplot('relatives','Survived',data=train_data,aspect=2.5,)","92fb3d64":"df = pd.read_csv(\"..\/input\/titanic\/train.csv\")\nfig = px.histogram(df, x=\"SibSp\", y=\"Parch\", color=\"Sex\", marginal=\"rug\",\n                   hover_data=df.columns)\nfig.show()","d5027bcb":"train_data.head(10)","a11208e7":"df = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\n\nfor template in [\"plotly_dark\"]:\n    fig = px.scatter(df,\n                     x=\"PassengerId\", y=\"Survived\", color=\"Survived\",\n                     log_x=True, size_max=20,\n                     template=template, title=\"Survived or Died?\")\n    fig.show()\n","b8ef2751":"from sklearn.ensemble import RandomForestClassifier\n\ny=train_data['Survived']\n\nfeatures=['Pclass','Sex','SibSp','Parch']\nX=pd.get_dummies(train_data[features])\nX_test=pd.get_dummies(test_data[features])\n \nmodel=RandomForestClassifier(n_estimators=1000,max_depth=3,random_state=0)\nmodel.fit(X,y)\npredictions=model.predict(X_test)","768c5a75":"y_pred=pd.DataFrame({'PassengerId':test_data['PassengerId'],'Survived':predictions})\ny_pred.to_csv('\/kaggle\/working\/predictions.csv',index=False)","e109135c":"y_pred.head()","125e6611":"**You are more likely to survive if you travel with 1 to 3 relatives than 0 or more than 3 relatives","ea9a7320":"# Age","a0ce98d0":"**you have higher chance of surviving if you have first class ticket than second or third class","55609012":"**younger you are more likey to survive","a44586a6":"**Woman and children are more likely to survive since they are first to board resuce boats.","8fca0260":"# Survived or Dead","c4f43eee":"# Relatives","eab578dc":"# Class","662cd49d":"# Gender","5460cabf":"**This shows the output whether they had survived or not.1 shows survived or 0 shows dead","1724fa83":"# Embark"}}