{"cell_type":{"9131ad4b":"code","8b942f6c":"code","4aba2840":"code","dfcb28a9":"code","f1c94fb6":"code","f8e29afb":"code","3e092d36":"code","922ca238":"code","7f2933ad":"code","7dc4623f":"code","fcf1e7a2":"code","22b16def":"code","bccb4b58":"code","92fa1812":"code","a1153513":"code","94ecff91":"code","05b75bd7":"code","36a19981":"code","baee3a9c":"code","6b3448f1":"code","04604383":"code","52f4b114":"code","3c8f5985":"code","5b5405f8":"code","3bb642a3":"code","1bd67db1":"code","85067131":"code","ef95a745":"code","1d074d63":"code","c3f092c9":"code","d4d7218e":"code","854ad35a":"code","3230a539":"code","72e76348":"code","ae1a9152":"code","030f05ca":"code","dfaad6ea":"code","e5437849":"code","d006444a":"code","5b3650b6":"code","34e4c314":"code","e81987f9":"code","99791091":"code","a06907a0":"code","64f1ee31":"code","be2eb046":"code","f124d9f4":"code","ae5eaeb5":"code","f1213a12":"code","0878c204":"code","61e4b291":"markdown","05a2cb37":"markdown","86ae6292":"markdown","2f1be1e3":"markdown","1fe59aa8":"markdown","dfcb710c":"markdown","a6fb1d76":"markdown","ac8753c0":"markdown","8e35dc06":"markdown","6bd3679a":"markdown","48c487ed":"markdown","552343c3":"markdown","040f7761":"markdown","6bed93eb":"markdown","8639de27":"markdown","808f8773":"markdown","41c161f1":"markdown","27e20d39":"markdown","9309e13e":"markdown","9d6af96b":"markdown","6db96cbb":"markdown","51e366d3":"markdown","99c31a4a":"markdown","11398143":"markdown","44b5e212":"markdown","11542dbf":"markdown","d236ca65":"markdown","0e737365":"markdown","61b93f56":"markdown","0c85f45f":"markdown","b88a4c71":"markdown","0f005640":"markdown","db9330bf":"markdown","5379e9b2":"markdown","43af2904":"markdown","33df182e":"markdown","2bd343e8":"markdown","59b8e4d3":"markdown"},"source":{"9131ad4b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8b942f6c":"# Imports\n\nimport pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt","4aba2840":"#read csv file into notebook\ndataset = pd.read_csv(\"\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv\")","dfcb28a9":"#make a copy - incase we need the original dataset\ndataset_ = dataset.copy()\ndataset_","f1c94fb6":"dataset_.info()","f8e29afb":"dataset_.describe()","3e092d36":"# Mean Student Score\n\nstudent_score = (dataset_[\"math score\"] + dataset_[\"reading score\"] + dataset_[\"writing score\"])\/3\nstudent_score","922ca238":"dataset_[\"student score\"] = round(student_score, 2)","7f2933ad":"grade_class = []\nfor index, row in dataset_.iterrows():\n    if row[7] <= 34:\n        grade_class.append(\"Fail\")\n    elif row[7] >= 35 and row[7] < 50:\n        grade_class.append(\"Pass\")\n    elif row[7] >= 50 and row[7] < 60:\n        grade_class.append(\"Second Class Lower\")\n    elif row[7] >= 60 and row[7] < 75:\n        grade_class.append(\"Second Class Upper\")\n    elif row[7] >= 75 :\n        grade_class.append(\"First class\")\n    ","7dc4623f":"dataset_[\"grade class\"] = grade_class","fcf1e7a2":"dataset_.head(15)","22b16def":"dataset_.to_csv(\"Studentdataperformance2.csv\")","bccb4b58":"plt.figure(figsize=(10, 5))\n#plt.subplots()\nf = sns.distplot(dataset_[\"student score\"], kde = True)\ndisplay(np.std(dataset_[\"student score\"]))\nplt.title(\"Distribution of Student Average Score\", fontsize = 12 )\nsns.despine()\n","92fa1812":"# Male Students Average score distribution\nplt.figure(figsize=(10, 5))\nsns.distplot(dataset_[dataset_[\"gender\"] == \"male\"][\"student score\"], kde = True)\nplt.title(\"Distribution of Male Student Average Score\", fontsize = 12 )\n\nsns.despine()\nplt.show()\n","a1153513":"# Female Students Average score distribution\nplt.figure(figsize=(10, 5))\nsns.distplot(dataset_[dataset_[\"gender\"] == \"female\"][\"student score\"], kde = True)\nplt.title(\"Distribution of Female Student Average Score\", fontsize = 12 )\n\nsns.despine()\nplt.show()","94ecff91":" df = dataset_[\"grade class\"].value_counts()","05b75bd7":"fd = (df\/1000)*100","36a19981":"lab = dataset_[\"grade class\"].unique()","baee3a9c":"# Bar chart\n\nlabels = lab\nvalues = fd\nexplode = (0,0.1,0,0,0)\n\nfg1, ax1 = plt.subplots()\nax1.pie(fd, labels = labels, explode = explode, autopct = \"%1.1f%%\", shadow = True, startangle = 90)\nax1.axis(\"equal\")\nplt.title(\"Distribution of Student by Grade\", fontsize = 12 )\n\nplt.show()","6b3448f1":"#Map showing relationship between Gender and grade class\nhue = ['First class', 'Second Class Upper', 'Second Class Lower', 'Pass',\n       'Fail']\nplt.figure(figsize=(12, 5))\n\nsns.catplot(x=\"gender\", kind = \"count\", hue = \"grade class\", hue_order = hue, data = dataset_)\nplt.title(\"Student Grade distribution by gender\", fontsize = 12 )\nplt.show()\n","04604383":"racc = [\"group A\", \"group B\", \"group C\", \"group D\", \"group E\"]\nplt.figure(figsize=(10, 5))\n\nsns.countplot(\"race\/ethnicity\", data = dataset_, order = racc)\nplt.title(\"Student Ethicity\/Race\", fontsize = 12 )\n\nsns.despine()","52f4b114":"#Map showing relationship between race\/ethnicity and grade class\nrac = ['First class', 'Second Class Upper', 'Second Class Lower', 'Pass',\n       'Fail']\nracc = [\"group A\", \"group B\", \"group C\", \"group D\", \"group E\"]\n\nplt.figure(figsize=(10, 10))\nsns.catplot(x=\"race\/ethnicity\", kind = \"count\", order = racc, hue = \"grade class\", hue_order = rac, data = dataset_)\nplt.title(\"Ethinicity\/Grade\", fontsize = 12 )\n\nplt.show()","3c8f5985":"dataset_[\"parental level of education\"].value_counts()","5b5405f8":"par = [\"master's degree\", \"bachelor's degree\", \"associate's degree\", \n       \"some college\", \"high school\", \"some high school\"]\nsa = sns.countplot(\"parental level of education\", data = dataset_, order = par)\nplt.title(\"Parental Education Level\", fontsize = 12 )\n\nplt.xticks(rotation =90)\nsns.despine()","3bb642a3":"#Map showing relationship between race\/ethnicity and grade class\nrac = ['First class', 'Second Class Upper', 'Second Class Lower', 'Pass',\n       'Fail']\nracc = [\"group A\", \"group B\", \"group C\", \"group D\", \"group E\"]\n\nplt.figure(figsize=(20, 5))\n\nsns.catplot(x=\"parental level of education\", kind = \"count\", \n            order = par, hue = \"grade class\", hue_order = rac, data = dataset_)\nplt.xticks(rotation=90)\nplt.title(\"Performance by Parental Education Level\", fontsize = 12 )\nplt.show()","1bd67db1":"dataset_[\"test preparation course\"].value_counts()","85067131":"data = dataset_[\"test preparation course\"].value_counts()\nlabels = [\"none\", \"completed\"]\nexplode = (0,0.1)\n\nplt.pie(data, labels = labels , explode = explode, radius = 2,\n        autopct = \"%1.1f%%\", shadow = True, startangle = 90)\n\n#plt.title(\"Test Preparation \", fontsize = 12 )\n\n\nplt.show()","ef95a745":"rac = ['First class', 'Second Class Upper', 'Second Class Lower', 'Pass',\n       'Fail']\n#racc = [\"group A\", \"group B\", \"group C\", \"group D\", \"group E\"]\n\nsns.catplot(x=\"test preparation course\", kind = \"count\",\n            hue = \"grade class\", hue_order = rac, data = dataset_)\nplt.title(\"Performance by Test Prep\", fontsize = 12 )\n\nplt.xticks(rotation=90)\nplt.show()","1d074d63":"dataset_[\"lunch\"].value_counts()","c3f092c9":"\nsa = sns.countplot(\"lunch\", data = dataset_)\nplt.xticks(rotation =90)\nsns.despine()","d4d7218e":"rac = ['First class', 'Second Class Upper', 'Second Class Lower', 'Pass',\n       'Fail']\n#racc = [\"group A\", \"group B\", \"group C\", \"group D\", \"group E\"]\n\nsns.catplot(x=\"lunch\", kind = \"count\",\n            hue = \"grade class\", hue_order = rac, data = dataset_)\n\nplt.title(\"Performance by Lunch\", fontsize = 12 )\n\nplt.xticks(rotation=90)\nplt.show()","854ad35a":"sns.catplot(x=\"lunch\", kind = \"count\",\n            hue = \"test preparation course\", data = dataset_)\nplt.title(\"Lunch\/Test Preparation\", fontsize = 12 )\n\nplt.xticks(rotation=90)\nplt.show()","3230a539":"pd.crosstab(dataset_[\"lunch\"], dataset_[\"gender\"])","72e76348":"#rac = ['First class', 'Second Class Upper', 'Second Class Lower', 'Pass',\n       #'Fail']\n#racc = [\"group A\", \"group B\", \"group C\", \"group D\", \"group E\"]\n\nsns.catplot(x=\"lunch\", kind = \"count\",\n            hue = \"gender\", data = dataset_)\nplt.title(\"Gender\/Lunch\", fontsize = 12 )\n\nplt.xticks(rotation=90)\nplt.show()","ae1a9152":"_data = dataset_[\"gender\"], dataset_[\"math score\"], dataset_[\"reading score\"], dataset_[\"writing score\"]","030f05ca":"_data = pd.DataFrame(_data)","dfaad6ea":"newdata = _data.T\nnewdata","e5437849":"new = newdata.sort_values(by = \"gender\", ascending = False)","d006444a":"new","5b3650b6":"#convert the test scores to float\nnew[\"math score\"] = pd.to_numeric(new[\"math score\"], downcast = \"float\")\nnew[\"reading score\"] = pd.to_numeric(new[\"reading score\"], downcast = \"float\")\nnew[\"writing score\"] = pd.to_numeric(new[\"writing score\"], downcast = \"float\")","34e4c314":"new = new.groupby(by=\"gender\").mean()","e81987f9":"new","99791091":"new.plot(kind = \"bar\")\nplt.title(\"Gender\/Test Score\", fontsize = 12 )\n","a06907a0":"dataset_.head()","64f1ee31":"tes = dataset_[\"test preparation course\"], dataset_[\"math score\"], dataset_[\"reading score\"], dataset_[\"writing score\"]\ntest = pd.DataFrame(tes).T","be2eb046":"#convert the test scores to float\ntest[\"math score\"] = pd.to_numeric(test[\"math score\"], downcast = \"float\")\ntest[\"reading score\"] = pd.to_numeric(test[\"reading score\"], downcast = \"float\")\ntest[\"writing score\"] = pd.to_numeric(test[\"writing score\"], downcast = \"float\")","f124d9f4":"test = test.groupby(by=\"test preparation course\").mean()","ae5eaeb5":"test","f1213a12":"test.plot(kind=\"bar\")\nplt.title(\"Test Prep\/Test Score\", fontsize = 12 )\n","0878c204":"#END","61e4b291":"#### Classification of students by grade class","05a2cb37":"#### Performance by Test Preparation Course","86ae6292":"## Further Analysis ","2f1be1e3":"#### Race\/Ethnicity","1fe59aa8":"#### Performance by Race\/Ethnicity and Grade Class","dfcb710c":"### Gender","a6fb1d76":"If we assume that it is the the rich kids who have standard lunch, then we can say a reasonable number of the rich kids didn't complete the test preparation course","ac8753c0":"This indicates that Group C performs better compared to other groups","8e35dc06":"#### Performance by Lunch","6bd3679a":"### Lunch","48c487ed":"64.2% of students didn't take any test preparation courses and only 35.8% completed the test preparation course.","552343c3":"### Gender & Lunch","040f7761":"Classification\n\nA = 75 - 100 = First class\nB = 60 - 74 = Second Class Upper\nC = 50 - 59 = Second Class Lower\nD = 35 - 49 = Pass\nE = 0 - 34 = Fail","6bed93eb":"### Classifying students into Grade Class","8639de27":"### Lunch & Test Preparation Course","808f8773":"Students whose parents have an associate degree and attended some college have the best overall performance","41c161f1":"## Introduction","27e20d39":"Between the Male & Female distribution, we can see that a higher number of female Students are more distributed towards the higher average score.","9309e13e":"#### Distribution of Student Average Score (Overall Average Performance)","9d6af96b":"This Shows the female gender has more First Class students compared to make and almost same amount of Second Class Upper students","6db96cbb":"This shows the Average student performance is inclined toward 40-80","51e366d3":"## Imports & Basic EDA","99c31a4a":"### Test Preparation course and Test Scores","11398143":"## Other Analysis","44b5e212":"#### Test Preparation Course","11542dbf":"#### Distribution of Student Score by Gender","d236ca65":"#### Lunch","0e737365":"### Gender & Test Scores","61b93f56":"# Student Performance Analysis & Visualization","0c85f45f":"Let's look at how each variable affect the overall performance of students","b88a4c71":"### Parental Level of Education","0f005640":"#### Performance by Parental Level of Education and Grade Class","db9330bf":"This analysis is aimed at providing insight on the student on how different features affects student grade and performance. Keep Up!","5379e9b2":"#### Parental Level of Education","43af2904":"### Race\/Ethnicity","33df182e":"### Test Preparation Course","2bd343e8":"Worthy to note that none of the students who completed the test preparation course failed.","59b8e4d3":"### Calculating Mean Student Score"}}