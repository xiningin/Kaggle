{"cell_type":{"da855bc8":"code","5725c4e2":"code","0ddf257f":"code","e545fd7a":"code","ee9c2918":"code","6ab791a4":"code","6cc14892":"code","5a294bac":"code","b79792d4":"code","5e18e347":"code","4b2d9f30":"code","ae3ab0ca":"code","c696a975":"code","9a9c7476":"code","0e282e22":"code","3042225f":"code","f9ae96b5":"code","7a60967d":"code","11bfbb77":"code","44e627bd":"code","0bbc5806":"code","91979a51":"code","81e3793f":"code","b043f691":"code","da5bab5f":"code","4b2d971d":"code","498f7184":"code","afb3d1f8":"code","c8664271":"code","6825741c":"code","79755b40":"code","8e73d92f":"code","48ef3387":"code","b7bf4214":"code","48d1cfef":"code","190ba0a2":"code","f12f7675":"code","8d0659f9":"code","b09c2385":"code","73909f4c":"code","693901b4":"code","1754ba52":"code","9044c044":"code","fa5891f3":"code","94a58a8d":"code","15a369a6":"code","bfe334ff":"code","2bc8a4e8":"code","e465e60d":"code","7fa07891":"code","ad9535de":"code","5121105f":"code","5976a184":"code","31a1a6b9":"code","a23db813":"code","e84e5728":"code","266be5a4":"markdown","381448e7":"markdown","b1090a81":"markdown","d2d0a54e":"markdown","008aae13":"markdown","e347edb1":"markdown","9dd45a91":"markdown","582b3e89":"markdown","d4ac1a8e":"markdown","a8726a61":"markdown","7ccc2a3a":"markdown","576a927f":"markdown","90049b16":"markdown","f350b6d5":"markdown","e152d627":"markdown","177cf4da":"markdown","65397608":"markdown","84ed872c":"markdown","b7455926":"markdown","9f7b9313":"markdown","de7cf463":"markdown","a23eedeb":"markdown","2148cb00":"markdown","aca28143":"markdown","aba96fe9":"markdown","7f05dc10":"markdown","df178656":"markdown","03fd74ff":"markdown","f67fb032":"markdown","7c3715af":"markdown","93405308":"markdown","84964c94":"markdown","d2982b5b":"markdown","dc35e2e2":"markdown","47dd6d64":"markdown"},"source":{"da855bc8":"import numpy as np\nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5725c4e2":"df = pd.read_csv(\"\/kaggle\/input\/active-nba-players-10-year-injury-history\/Injury_History.csv\")\n\ndf.head()","0ddf257f":"df.info()","e545fd7a":"df[\"Name\"] = df[\"Name\"].astype(\"str\")\ndf[\"Team\"] = df[\"Team\"].astype(\"str\")\ndf[\"Position\"] = df[\"Position\"].astype(\"str\")\ndf[\"Notes\"] = df[\"Notes\"].astype(\"str\")\ndf[\"Date\"] = df[\"Date\"].apply(pd.to_datetime)\n\ndf.info()","ee9c2918":"df.head()","6ab791a4":"df['Date'] = df[\"Date\"].dt.strftime('%d-%m-%Y')\n\ndf.head()","6cc14892":"df.describe()","5a294bac":"df[\"Notes\"].value_counts()","b79792d4":"df[df[\"Name\"] == \"Paul George\"]","5e18e347":"df[\"Name\"].value_counts()","4b2d9f30":"df[\"Position\"].value_counts()","ae3ab0ca":"df[\"Position\"] = df[\"Position\"].replace({'PG':'G','SG':'G','SF':'F','PF':'F'})","c696a975":"import matplotlib.pyplot as plt\n\nplt.figure(figsize=(12,8))\n\ndf.groupby('Position')['Notes'].count().plot(kind=\"pie\",autopct='%1.0f%%', pctdistance=1.1, labeldistance=1.2)","9a9c7476":"plt.figure(figsize=(15,10))\n\ndf.groupby('Team')['Notes'].count().plot(kind=\"pie\",autopct='%1.0f%%', pctdistance=1.1, labeldistance=1.25)","0e282e22":"df['Date'] = pd.to_datetime(df['Date'])\nplt.figure(figsize=(12,8))\n\nmonths = ['January', 'February', 'March', 'April',\n          'May', 'June', 'July', 'August',\n          'September', 'October', 'November', 'December']\n\ndf.groupby(df[\"Date\"].dt.strftime(\"%B\"))[\"Notes\"].count().reindex(months).plot(kind=\"bar\")","3042225f":"plt.figure(figsize=(12,8))\n\ndf.groupby(df[\"Date\"].dt.strftime(\"%Y\"))[\"Notes\"].count().plot(kind=\"bar\")","f9ae96b5":"df[\"Ankle\"] = df[\"Notes\"].str.contains(\"ankle\").astype(\"int\")\ndf[\"Hamstring\"] = df[\"Notes\"].str.contains(\"hamstring\").astype(\"int\")\ndf[\"Shoulder\"] = df[\"Notes\"].str.contains(\"shoulder\").astype(\"int\")\ndf[\"Knee\"] = df[\"Notes\"].str.contains(\"knee\").astype(\"int\")\n\ndf.head()","7a60967d":"\ndf_inj = df[[\"Position\",\"Ankle\",\"Hamstring\",\"Shoulder\",\"Knee\"]]\n\n\nconditions = [\n    df_inj[\"Ankle\"] == 1,\n    df_inj[\"Hamstring\"] == 1,\n    df_inj[\"Shoulder\"] == 1,\n    df_inj[\"Knee\"] == 1    \n]\n\ncategories = [\"Ankle\",\"Hamstring\",\"Shoulder\",\"Knee\"]\n\ndf_inj[\"Injury\"] = np.select(conditions, categories)\n\ndf_inj.drop([\"Ankle\"], axis=1, inplace=True)\ndf_inj.drop([\"Hamstring\"], axis=1, inplace=True)\ndf_inj.drop([\"Shoulder\"], axis=1, inplace=True)\ndf_inj.drop([\"Knee\"], axis=1, inplace=True)\n\ndf_inj[\"Injury\"] = df_inj[\"Injury\"].replace({\"0\":\"Other\"})\n\ndf_inj.head(20)\n\n\n","11bfbb77":"df_inj[\"Injury\"].value_counts()","44e627bd":"import seaborn as sns\n\nsns.set_theme(style=\"whitegrid\")\n\nplt.figure(figsize=(12,8))\nax = sns.countplot(x=\"Injury\", data=df_inj, hue=\"Position\")","0bbc5806":"df.head()","91979a51":"df.drop([\"Ankle\"], axis=1, inplace=True)\ndf.drop([\"Hamstring\"], axis=1, inplace=True)\ndf.drop([\"Shoulder\"], axis=1, inplace=True)\ndf.drop([\"Knee\"], axis=1, inplace=True)\n\ndf.head()","81e3793f":"df2 = pd.read_csv(\"\/kaggle\/input\/202122-nba-season-active-nba-players\/active_players_2.csv\")\n\ndf2.head()","b043f691":"df.head()","da5bab5f":"df2 = df2[[\"Name\",\"Age\",\"Height_i\",\"Weight\",\"College\",\"Salary\"]]\n\ndf_f = pd.merge(df, df2, how= \"left\", on=[\"Name\"])\n\ndf_f = df_f[[\"Name\",\"Position\",\"Age\", \"Height_i\", \"Weight\", \"Team\", \"Salary\", \"College\", \"Date\", \"Notes\"]]\n\ndf_f.head()","4b2d971d":"df_u = df_f.drop_duplicates(subset=[\"Name\"], keep=\"first\")\n\ndf_u.reset_index(inplace=False)\n\ndf_u.head()","498f7184":"df_u.shape","afb3d1f8":"df_u.describe()","c8664271":"plt.figure(figsize=(12,8))\ndf_u.groupby(\"Age\")[\"Notes\"].count().plot(kind=\"bar\", color=\"red\")","6825741c":"df_u[df_u[\"Age\"]==41]","79755b40":"plt.figure(figsize=(12,8))\ndf_u.groupby(\"Height_i\")[\"Notes\"].count().plot(kind=\"bar\")","8e73d92f":"weight_plot = sns.FacetGrid(df_u, height = 10)\nweight_plot.map(plt.hist,\"Weight\",bins = 20, color = \"green\")","48ef3387":"df_f[\"Salary\"] = df_f[\"Salary\"] \/ 1000000\ndf_u[\"Salary\"] = df_u[\"Salary\"] \/ 1000000\n\n\ndf_u.head()","b7bf4214":"salary_plot = sns.FacetGrid(df_u, height = 10)\nsalary_plot.map(plt.hist,\"Salary\",bins = 20, color = \"orange\")","48d1cfef":"df_f[\"College\"].value_counts()","190ba0a2":"df_u[\"College\"].value_counts()","f12f7675":"df_f.head()","8d0659f9":"df_f[\"Count\"] = df_f.groupby(\"Name\")[\"Name\"].transform(\"count\")\n\ndf_f.head()","b09c2385":"df_f = df_f.drop_duplicates(subset=[\"Name\"], keep=\"first\")\n\ndf_f.drop([\"Salary\"], axis=1, inplace=True)\ndf_f.drop([\"Date\"], axis=1, inplace=True)\ndf_f.drop([\"Notes\"], axis=1, inplace=True)\n\ndf_f.head()","73909f4c":"from sklearn.preprocessing import LabelEncoder\nlabel = LabelEncoder()\n\ndf_f[\"Position\"] = df_f[\"Position\"].astype(\"str\")\ndf_f[\"Team\"] = df_f[\"Team\"].astype(\"str\")\n\n\ndf_f[\"position_code\"] = label.fit_transform(df_f[\"Position\"])\ndf_f[\"team_code\"] = label.fit_transform(df_f[\"Team\"])\n\n\ndf_f.drop([\"Position\"], axis=1, inplace=True)\ndf_f.drop([\"Team\"], axis=1, inplace=True)\ndf_f.drop([\"College\"], axis=1, inplace=True)\ndf_f.drop([\"Name\"], axis=1, inplace=True)\n\n\n","693901b4":"df_f.head()","1754ba52":"plt.figure(figsize=(16,10))\n\ncorr = df_f.corr()\nax = sns.heatmap(\n    corr,\n    vmin=-1, vmax=1, center=0,\n    cmap=sns.diverging_palette(20, 220, n=200),\n    square=True\n)\nax.set_xticklabels(\n    ax.get_xticklabels(),\n    rotation=45,\n    horizontalalignment='right'\n)\n\nplt.show()","9044c044":"y = df_f[\"Count\"]\n\nX = df_f.drop([\"Count\"], axis=1)","fa5891f3":"y.reset_index(drop=True, inplace=True)\n\ny.head()","94a58a8d":"X.reset_index(drop=True, inplace=True)\n\n\nX.head()","15a369a6":"y.shape","bfe334ff":"X.shape","2bc8a4e8":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)\n","e465e60d":"from sklearn.linear_model import LinearRegression\n\nLR = LinearRegression()\n\nLR.fit(X_train,y_train)","7fa07891":"y_prediction =  LR.predict(X_test)\ny_prediction","ad9535de":"from sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\n\nscore=r2_score(y_test,y_prediction)\nprint(\"r2 score is\", score)\nprint(\"mean_sqrd_error is \",mean_squared_error(y_test,y_prediction))\nprint(\"root_mean_squared error of is \",np.sqrt(mean_squared_error(y_test,y_prediction)))\n","5121105f":"LR.intercept_","5976a184":"LR.coef_","31a1a6b9":"coefficients = pd.concat([pd.DataFrame(X.columns),pd.DataFrame(np.transpose(LR.coef_))], axis = 1)\ncoefficients","a23db813":"sns.regplot(x=y_test, y=y_prediction, ci=None, color=\"r\")","e84e5728":"res = pd.DataFrame()\nres[\"actual\"] = y_test\nres[\"pred\"] = y_prediction\nres.head(15)\n","266be5a4":"With boolean masking, we can look for a specific player's injury records.\n\nIn this example, we can see Paul George's injury records from 2010 to 2020 as he had many injury updates.","381448e7":"Changed the date to day-month-year format.","b1090a81":"Changing Salary to million dollars to have a better plot.","d2d0a54e":"The distribution is similar to a bimodal distribution.","008aae13":"The distributions is close to a normal distribution other than the 34 year olds.\n\nLet's find the 41 year old player.","e347edb1":"From this bar graph graph, we can see that May, June, July, August and September has the least amount of injury updates.\n\nUsually the regular NBA season starts mid-October and finishes mid-April. From mid-April to mid-June the NBA playoffs take place. Only 16 teams from 30 remains in the playoffs which shows the reason why the numbers decline starting from April.\n\nIt seems like with the start of the season in mid-October, the players are not quite warmed up and ready for NBA action. Even though there are no matches played in first weeks of the month, the injury update number is still a bit high.\n\nThe NBA All-Star break is usually mid-February. This might be the reason why the highest number of injury reports happen as the players wants to show their performances to fight for a spot in the all-star roster.\n\nMarch is also a critical month to secure a place in the NBA playoffs and we can see that the number of injury updates increase substantially after February. The teams force their best players to play very high minutes to get the best result in playoff matchups.","9dd45a91":"Our multiple linear regression equation is:\n\ny = -61.98 + 3.92*age - 5.17*height + 0.07*weight + 0.44*position_code - 0.11*team_code","582b3e89":"There is a negative correlation between weight and position since centers are heavier.\n\nAge and Count has a correlation as it was explained before.","d4ac1a8e":"Dropping the injury columns.","a8726a61":"Using linear regression to predict the injury counts","7ccc2a3a":"We have done data analysis on teams, positions, dates and notes. To do further analysis, let's import a new dataset.\n\nThe active players dataset is a dataset that I have prepared by using the information on ESPN. It also includes Age, Height, Weight, College and Salary as in 2021.","576a927f":"We have 344 player left in the unique player dataframe.","90049b16":"Creating a new df named df_u to see unique entries of players.\nDropping the duplicate names to have players with 1 unique entry.","f350b6d5":"According to this dataset, the amount of injury updates has increased gradually over the years. This reason to that might be the fact that players these days are resting more and doing load management to stay healthy until the playoffs. Another reason could be that the creator of the \"NBA Injuries from 2010 to 2020\" dataset has included more data from these years.\n\nThe reason why the amount of updates have plummeted right after gradually increasing until 2019 is that the 2020 NBA season was suspended on March 11 because of the pandemic. The season resumed on July 30.","e152d627":"Creating a new column named Count to have the amount of injury updates a player has.","177cf4da":"Our target variable y is the Count column since we are going to predict a player's amount of injuries.","65397608":"We can see that there are 7 positions. Since there are forwards (F) and guards(G) that has no specific position, we can convert other specific positions to general positions.\n\nPG, SG --> G\n\nSF,PF --> F","84ed872c":"The weight distribution is right skewed.","b7455926":"The datatypes are changed accordingly.","9f7b9313":"From this line of code we can see the most common injury notes. They are mostly about the IL spot's status.","de7cf463":"The last 2 outputs look correlated as colleges sending more players to the NBA would result in more injury updates. So, it would not be correct to say that player's from Kentucky or Duke are more prone to injuries. They have more injury updates since they are the colleges that sends the most players to the NBA.","a23eedeb":"Let's try to look for certain injury types such as ankle, harmstring, achilles, shoulder, knee.\n\nCreating new columns to map the injury type as True and False, later changed to 1 and 0.","2148cb00":"Let's look at the distribution of the teams.","aca28143":"There are 344 unique NBA players who are actively playing in the 2021-22 NBA season.\n\nThese 344 players have 9280 injury updates.\n\nThere are 30 NBA teams as expected.\n\nOnly 1552 notes are unique from the 9280.","aba96fe9":"Height_i column represents the player's height in inches but it is represented with a dot to be an integer. This way it would be easier to analyze.\n\nSalary is player's salary as US Dollars on 2021.\n\nWeight is represented in lbs.","7f05dc10":"As we saw earlier, most of the injury updates were about the changes in the IL spot. Therefore, the injury types that we are looking for are much less than the \"other\" injury types.\n\nBear in mind that the percentages of the positions\n- F : 40%\n- G : 39%\n- C : 21%\n\nFrom the countplot above, we can see that there are nothing out of the ordinary. The distribution is as expected. We can say that forwards face less hamstring injuries than guards but because the sample size is only 198, it might not be a solid guess.","df178656":"From this pie chart, we can see how the total injury updates are distributed.\n\nForwards and Guards have almost the same amount of injury updates, as it is more than the Center's. ","03fd74ff":"Let's check back our main dataframe.","f67fb032":"Checking our predictions vs the actual scores.","7c3715af":"The salary distribution is right skewed and it shows the income inequeality in the NBA.","93405308":"Players with most injury updates.","84964c94":"We have Name, Team and Position as common columns for these datasets. Let's try to merge them into a one dataset.","d2982b5b":"Creating a sub dataframe to work on our injury types.\n\nCreating a new column named \"Injury\" to map the type of the injury. Injuries other than ankle, hamstring, shoulder and knee are mapped as Other.","dc35e2e2":"It seems like Lakers, Nets and Clippers have the most amount of injury updates.","47dd6d64":"There are no null values in our dataset."}}