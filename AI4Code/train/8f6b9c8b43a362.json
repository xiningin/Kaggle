{"cell_type":{"98d08b24":"code","12239181":"code","09c62679":"code","2e86c0d9":"code","62596d7a":"code","f434dd8b":"code","334a9ea3":"code","8b61acec":"code","a90fd8fc":"code","6c59e15e":"code","c43c3416":"code","a964f9ee":"code","5750b16c":"code","ce52522e":"code","97bb7fd4":"code","831b4583":"code","25bc2fa2":"code","dbee5988":"code","128240f7":"code","c0943f02":"code","ae740890":"markdown","75c2ea4d":"markdown","1eaf58b1":"markdown","c46fad82":"markdown","8e7e77a5":"markdown","2b331e2a":"markdown","f7147ae5":"markdown","44c3d461":"markdown","4fc76ac5":"markdown","8590edee":"markdown","a2b636dc":"markdown","888100a8":"markdown"},"source":{"98d08b24":"# import necessary libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly_express as px\n\nimport plotly.io as pio\n# to save plotly interactive plots as html files","12239181":"# importing two datasets, one contains data for mutiple years while other contains data for the year 2021\n# we will later merge the datasets\n\ndf_allyears = pd.read_csv('..\/input\/world-happiness-report-2021\/world-happiness-report.csv')\n\ndf_2021 = pd.read_csv('..\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv')","09c62679":"print(f\"Dataset contains : {len(df_allyears)} rows\\n\")\ndf_allyears.head(3)","2e86c0d9":"# lets check what all year's data do we have in this dataset\ndf_allyears['year'].unique()\n# df_allyears['Country name'].nunique()","62596d7a":"# checking if there are any null values\n\ndef check_null(df):\n    for col in df.columns:\n        values = np.mean(df[col].isnull())\n        print(f'{col} --- \\t{values}% null values')\n        \ncheck_null(df_allyears)","f434dd8b":"# checking datatypes\n\ndf_allyears.dtypes","334a9ea3":"# lets bring in the second dataset so we can merge the two\nprint(f'Dataset contains : {len(df_2021)} rows\\n')\ndf_2021.head(3)","8b61acec":"# before we specify the columns we want, we will add a new column 'year' so that we can add it during merge\n\ndf_2021['Year'] = 2021\n\n# specifying the columns we want in the dataframe\ndf_allyears.columns\n\ndf_2021 = df_2021[['Country name', 'Regional indicator', 'Year', 'Ladder score', 'Logged GDP per capita',\n                   'Social support', 'Healthy life expectancy',\n                   'Freedom to make life choices', 'Generosity',\n                    'Perceptions of corruption',]]\n\ndf_2021.head(3)","a90fd8fc":"# lets check if df_2021 contains any null values\n\ncheck_null(df_2021)","6c59e15e":"# before we merge, let's rename columns on both df's for ease of merging\n\ndf_allyears.rename(columns={'Country name': 'Country', 'year': 'Year', 'Life Ladder': 'Score',\n                        'Healthy life expectancy at birth': 'Healthy life expectancy',\n                        'Log GDP per capita': 'GDP score', 'Freedom to make life choices': 'Freedom'}, \n                         inplace=True)\n\ndf_2021.rename(columns={'Country name': 'Country', 'Ladder score': 'Score', 'Regional indicator': 'Region',\n                       'Logged GDP per capita': 'GDP score', 'Freedom to make life choices': 'Freedom'},\n                        inplace=True)","c43c3416":"# merging\n\n# I could not find a better way to update the region values, hence I will be creating a merge\n# just to get the region values for all the countries\n\ntemp_reg = pd.merge(df_allyears, df_2021, how='outer', on='Country')['Region']\ndf_allyears['Region'] = temp_reg\n\neda_happy = pd.merge(df_allyears, df_2021, how='outer',\n                     on=['Country', 'Year', 'Score', 'GDP score','Social support',\n                        'Healthy life expectancy', 'Freedom', 'Generosity', \n                        'Perceptions of corruption', 'Region'])\n","a964f9ee":"# rearranging columns\n\nr_list = ['Region', 'Country', 'Year', 'Score', 'GDP score', 'Social support', 'Healthy life expectancy', 'Freedom',\n         'Generosity', 'Perceptions of corruption', 'Positive affect', 'Negative affect']\n\neda_happy = eda_happy[r_list]\n\neda_happy.head(3)","5750b16c":"# to create a choropleth graph we need country codes\n# Luckily in our previously done project : Plastic Pollution we have country codes\n# lets merge these codes to our eda_happy dataset\n\ncon_codes = pd.read_csv('..\/input\/plastic-datasets\/per-capita-plastic-waste-vs-gdp-per-capita.csv')\n\ncon_codes.rename(columns={'Entity': 'Country'}, inplace=True)\ncon_codes = con_codes[['Country', 'Code']].drop_duplicates()\n\nprint(con_codes.head(3))\n\neda_happy = pd.merge(eda_happy, con_codes, how='left', on='Country')\neda_happy.sort_values(by='Year', inplace=True)","ce52522e":"# since we have missing score values for most of the countries for the years 2005 & 2006,\n# we will be mapping from 2007 to see the change in levels for all the countries.\n# Though, if you want to see the levels from 2005, you can change the dataframe parameter to : eda_happy\n\neda_mapping = eda_happy[(eda_happy['Year'] != 2005) &  (eda_happy['Year'] != 2006)]\n\npx.choropleth(eda_mapping, locations='Code', color='Score', hover_name='Country',\n             animation_frame='Year', color_continuous_scale=px.colors.sequential.Plasma,\n             projection='natural earth', title=\"Happiness Levels in Countries From 2007 - 2021\",\n             template='seaborn', range_color=[2, 7])\n    \n# figure.update_layout(paper_bgcolor = '#2e3141', font_color='white')","97bb7fd4":"np.mean(eda_happy['Score'])\n# if we round this score we will get 5","831b4583":"%matplotlib inline\n# To see the top 10 highest and lowest countries we need to create plot data differently\n\ntop_happy = eda_happy.groupby('Country', as_index=False)['Score'].mean().sort_values(\n    by='Score',ascending=False)[:10]\ntop_unhappy = eda_happy.groupby('Country', as_index=False)['Score'].mean().sort_values(\n    by='Score', ascending=True)[:10]\n\nplt.style.use('seaborn')\nplt.figure(2, figsize=(12,8))\nsns.barplot(data=top_happy, x='Score', y='Country', palette='Blues_d')\nplt.xlabel('Score',fontsize=14, fontweight='bold')\nplt.ylabel('Country', fontsize=14, fontweight='bold')\nplt.title('Top 10 highest happiness scored countries', fontsize=16, fontweight='bold')\nplt.xticks(fontsize=11)\nplt.yticks(fontsize=11)\n\n# fig = plt.gcf()\nplt.show()\n# fig.savefig('top10happy.jpg')\n","25bc2fa2":"%matplotlib inline\n\nplt.style.use('seaborn')\nplt.figure(3, figsize=(12,8))\nsns.barplot(data=top_unhappy, x='Score', y='Country', palette='Reds_r_d')\nplt.xlabel('Score',fontsize=14, fontweight='bold')\nplt.ylabel('Country', fontsize=14, fontweight='bold')\nplt.title('Top 10 lowest happiness scored countries', fontsize=16, fontweight='bold')\nplt.xlim(0,8)\nplt.xticks(fontsize=11)\nplt.yticks(fontsize=11)\n\n# plt.axes.grid(color='white')\n# ax = plt.gca()\n# ax.set_facecolor(\"#2e3141\")\n\n# fig = plt.gcf()\nplt.show()\n# fig.savefig('top10unhappyt.jpg', bbox_inches='tight')","dbee5988":"# creating correlation matrix to see which factors contributes the most to happiness levels\nhappy_corr = eda_happy.corr()","128240f7":"plt.figure(figsize=(12,8))\nplt.style.use('seaborn')\nsns.heatmap(happy_corr, annot=True)\nplt.xticks(fontsize=11, fontstyle='normal')\nplt.yticks(fontsize=11, fontstyle='normal')\nplt.title(\"Factor's Correlation with Happiness Score\", fontsize=14, fontweight='bold')\n\n# fig = plt.gcf()\nplt.show()\n# fig.savefig('happy_corr.jpg', bbox_inches=\"tight\")","c0943f02":"# for this we need to remove any null values\n\ngdp_map = eda_happy.dropna()\nfigure = px.scatter(gdp_map, x='GDP score', y='Healthy life expectancy', color='Region',\n          template='plotly_white', hover_name='Country',\n          animation_group='Country')\n\nfigure.update_layout(plot_bgcolor='#2e3141', paper_bgcolor='#2e3141', legend_font_color='lightgray',\n                    font_color='lightgray')\n","ae740890":"### From the above graph we can see that Denmark has the highest mean happiness level scores throughtout all the years\nWe'll see what were the contributors that led to this!","75c2ea4d":"<i>Looks like there are missing values in some of the columns but since the missing values are <b>less than 1% <\/b>of the total column values we can move forward.<\/i>","1eaf58b1":"<ul>Before we continue further, lets check the mean score.<br>\n    <li>Any country above the mean score will be considered happy or progressing.<\/li>\n    <li>Any country Below the mean score will be considered unhappy or struggling.<\/li><\/ul>","c46fad82":"## <i>Exploratory Data Analysis - Happiness<\/i><br>\n### This dataset has been taken from [Kaggle](https:\/\/www.kaggle.com\/).<br>\n\nWe will be performing data cleaning, preparation and visualization on the [World Happiness Report](https:\/\/www.kaggle.com\/ajaypalsinghlo\/world-happiness-report-2021) dataset.<br>\n\n<b>The focus of this study will be to see:<\/b><br>\n<ul>\n    <li>How happiness score of countries in a region looks like over a period of time?<\/li>\n    <li>Which countries were the top highest and lowest according to mean score of all the years?<\/li>\n    <li>What are the main criterias defining happiness?<\/li>\n    <li>If countries have imporved or worsen over a period of time, and if they did, what were the factors leading to a change in the level?<\/li>","8e7e77a5":"### It is observed that as the GDP per capita of a country increases, the healthy life expectancy of that country increases as well.\n\n#### As seen in our first geo graph, most of the countries in The Sub-Saharan African region has a low GDP score and thus a low healthy life expectancy.","2b331e2a":"Looks like this dataset contains more columns than the one with mutiple years.<br>\nWe will have to delete the extra columns as these are only present for 2021 and not all years.<br>\n\nNote : It can be seen that columns ( Positive affect & Negative affect) are not present in df_2021.","f7147ae5":"### It seems that, <i>GDP per capita score<\/i>, <i>Healthy life expectancy<\/i> & <i> Social Support<\/i> of a country, are the main factors contributing to the overall happiness level!\n\n##### Surprisingly, GDP score and Healthy life expectancy are most closely related! Let's see how!","44c3d461":"### From the above graph we can see that South Sudan has the lowest mean happiness level scores throughtout all the years\nWe'll see what were the contributors that led to this!","4fc76ac5":"#### It is observed that most of the countries\/states present in North American & ANZ and the  Western European regions have maintained a high levels of happiness throughtout many years\nWe will see what were the factors leading to this!\n\n#### Similarly, it can be observed that most of the countries present in Sub-Saharan African, Asian & Southeast Asian regions have happiness levels fluctuating between low to medium. Indicating a lower score happiness score throughout many years.\nWe will see what were the factors leading to this!","8590edee":"<b>Great!<\/b> All columns are filled to the trim!","a2b636dc":"## <i>Conclusion :<\/i> \n<ul>\n    <li>The most important factors leading to an increase in the happiness levels of any country are the <b>GDP per capita of that entity<\/b>, the <b>social support<\/b> it has and the <b>healthy life expectancy<\/b> of that country.<\/li><br>\n    <li>Other factors that contribute in an overall good happiness score are <b>Freedom<\/b> & <b>Positive Affectivity<\/b><\/li><br>\n<i>Although, all of these criterias are interrelated.<\/i><br>\n\nThus most of the countries in the affected regions, such as Sub-Saharan Afria, South Asia & some countries in the Latin American Region must focus on the GDP score and how to improve health of its citizens.<br>This will in return increase the positive affectivity in its citizens, thus increasing social support and contributing to an overall higher happiness level.<br>\n\nWhile on the other hand, it is observed, countries having a progressive increase in its GDP score, such a Singapore in the Southeast Asian region have an increasing healthy life expectany throughout multiple years.<br>\nThese also include most of the countries present in the Western European Region.","888100a8":"<b>Great!<\/b> now our dataset is ready!"}}