{"cell_type":{"5eb5cb09":"code","fc47b657":"code","0893f285":"code","8823d9a1":"code","9f7b278b":"code","7b865171":"code","6f9414f7":"code","dbeed321":"code","6d60229b":"code","0c6b63e0":"code","a0dada7d":"code","99bcccae":"markdown","864b251d":"markdown","6518e602":"markdown","b20ea600":"markdown"},"source":{"5eb5cb09":"!pip install mtcnn","fc47b657":"import cv2\nfrom mtcnn import MTCNN\nimport matplotlib.pyplot as plt","0893f285":"# load MTCNN model\ndetector = MTCNN()","8823d9a1":"# read image \nimg = plt.imread(\"..\/input\/input-images\/facemask1.jpg\") # better than cv2.imread for face detection\n\n# use MTCNN model to detect faces\nfaces = detector.detect_faces(img)","9f7b278b":"# find bounding box of each face (with confidence>90%)\nbbox = []\nfor face in faces:\n    box = face['box'] # x,y,w,h\n    print(box)\n    keypoints= face['keypoints']\n    print(keypoints)\n    confidence= face['confidence']\n    print(confidence)\n    print()\n    if confidence>=0.9: # check confidence > 90%\n        bbox.append(box)","7b865171":"# draw box for detected face on image\nfor box in bbox:\n    x,y,w,h = box\n\n    cv2.rectangle(img, (x,y), (x+w,y+h), (0,255,0), 2) # draw box, thickness=2\n\nplt.imshow(img)\nplt.show()","6f9414f7":"import numpy as np\nimport tensorflow.keras as keras","dbeed321":"# load FaceMask-CNN model\nmodel = keras.models.load_model('\/kaggle\/input\/facemask-model\/facemask_cnn.h5')","6d60229b":"labels = ['With Mask', 'No Mask']","0c6b63e0":"for box in bbox:\n    # get coordinate\n    x,y,w,h = box\n    \n    # get region of interest\n    roi = img[y:y+h, x:x+w]             # get face image\n    roi = cv2.resize(roi,(96,96))       # opencv resize to 96x96\n    \n    # show roi\n    plt.imshow(roi)\n    plt.show()\n    \n    # normalized data & reshape it\n    x_test = roi\/255.0                  # convert to floating point\n    x_test = x_test.reshape(-1,96,96,3) # reshape for model input\n    \n    # mask detection\n    preds = model.predict(x_test)\n    maxindex = int(np.argmax(preds))\n    txt = labels[maxindex]\n    acc = str(int(preds[0][maxindex] * 100))+'%'\n    \n    # draw box for detected face on image\n    cv2.rectangle(img, (x,y), (x+w,y+h), (0,255,0), 2) # draw box, thickness=2\n    cv2.putText(img, txt, (x,y), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (255,0,0), 2) # font scale=0.5, thickness=2\n    cv2.putText(img, acc, (x,y+h), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (255,0,0), 2) # font scale=0.5, thickness=2\n    \n# save image\nplt.imsave('.\/detected.jpg', img)","a0dada7d":"# display detected image\nfrom IPython.display import Image\nImage('.\/detected.jpg')","99bcccae":"## Face Detection : MTCNN","864b251d":"### display bounding box","6518e602":"# Face Mask Detection","b20ea600":"## Mask Detection : [FaceMask-CNN](https:\/\/kaggle.com\/rkuo2000\/facemask-cnn)"}}