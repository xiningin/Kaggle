{"cell_type":{"baf88289":"code","1886698a":"code","a616e671":"code","a7d4c7e8":"code","ec871526":"code","243e8c3a":"code","206e519b":"code","2b7b45dc":"code","387630a9":"code","8db311da":"markdown","49d8782c":"markdown","25736484":"markdown","2b450740":"markdown","d5628a19":"markdown","6506fd79":"markdown"},"source":{"baf88289":"def vector_sum(x, y):\n    assert len(x) == len(y)\n    return [_x + _y for _x, _y in zip(x, y)]","1886698a":"x = [1, 2, 3]\ny = [8, 1, 2]\nanswer = vector_sum(x, y)\nprint(answer)  # => [9, 3, 5]","a616e671":"def matrix_sum(X, Y):\n    assert len(X) == len(Y)\n    return [vector_sum(x_v, y_v) for x_v, y_v in zip(X, Y) ]\n\nX = [[1, 2, 3],\n     [4, 5, 6]]\nY = [[8, 1, 2],\n     [-1, 0, -2]]\nanswer = matrix_sum(X, Y)\nprint(answer)  # => [[9, 3, 5], [3, 5, 4]]","a7d4c7e8":"def dot(x_v, y_v):\n    assert len(x_v) == len(y_v)\n    return sum([x * y for x, y in zip(x_v, y_v)])","ec871526":"def matrix_vector_product(X, y):\n    return [dot(x_v, y) for x_v in X]","243e8c3a":"X = [[1, 2, 3],\n     [4, 5, 6]]\ny = [8, 1, 2]\nanswer = matrix_vector_product(X, y)\nprint(answer)  # => [16, 49]","206e519b":"def trans(Y):\n    return [[Y[i][j] for i in range(len(Y))] for j in range(len(Y[0]))]","2b7b45dc":"def matrix_product(X, Y):\n    Yt = trans(Y)\n    return [matrix_vector_product(X, y) for y in Yt]\n\nX = [[1, 2, 3],\n     [4, 5, 6]]\nY = [[8, 1],\n     [-1, 0],\n     [0, 1]]\nanswer = trans(matrix_product(X, Y))\nprint(answer)  # => [[6, 4], [27, 10]]","387630a9":"def matrix_transpose(X):\n    return trans(X)\n\nX = [[1, 2, 3],\n     [4, 5, 6]]\nanswer = matrix_transpose(X)\nprint(answer)  # => [[1, 4], [2, 5], [3, 6]]\n","8db311da":"## \u554f5.1 (\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u304a\u3051\u308b\u30d9\u30af\u30c8\u30eb\u30fb\u884c\u5217\u306e\u8a08\u7b97)","49d8782c":"## \u884c\u5217 X \u3068\u30d9\u30af\u30c8\u30eb y \u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u306e\u7a4d Xy \u3092\u8fd4\u3059\u95a2\u6570\u3092\u66f8\u3044\u3066\u4e0b\u3055\u3044\u3002","25736484":"#### 2\u3064\u306e\u884c\u5217 X, Y \u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u306e\u7a4d XY \u3092\u8fd4\u3059\u95a2\u6570\u3092\u66f8\u3044\u3066\u4e0b\u3055\u3044\u3002","2b450740":"#### 2\u3064\u306e\u884c\u5217 X, Y \u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u306e\u548c X+Y \u3092\u8fd4\u3059\u95a2\u6570\u3092\u66f8\u3044\u3066\u4e0b\u3055\u3044\u3002\u30b3\u30fc\u30c9\u306f\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002","d5628a19":"#### \u591a\u5206Bad Code","6506fd79":"#### 2\u3064\u306e\u30d9\u30af\u30c8\u30eb x, y \u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u306e\u548c x+y \u3092\u8fd4\u3059\u95a2\u6570\u3092\u66f8\u3044\u3066\u4e0b\u3055\u3044\u3002\u30b3\u30fc\u30c9\u306f\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002"}}