{"cell_type":{"d18ad072":"code","dc82596a":"code","b9b71485":"code","83539072":"code","5fceb9b3":"code","a07528ae":"code","facd6c6d":"code","ef22054b":"code","7a020471":"code","1274fadf":"code","7a8b91f0":"code","dd26b06a":"code","afd66ddd":"code","426fa565":"code","0d9fda2d":"code","a198eb8b":"code","45bb71d1":"code","4d540c93":"code","37a3cc35":"code","6579ded9":"code","4e7947f0":"code","787c4257":"code","2d8ad046":"code","1e054754":"code","7d1525e6":"code","7a7b836c":"code","621521b7":"code","9ab09e47":"code","6ce70a26":"code","be5104ac":"code","4d670db4":"code","092765e7":"code","55c96c14":"code","1025e3a7":"code","2b8c9e87":"code","79e58964":"code","ef323517":"code","451f0f7c":"code","af9b03aa":"markdown","7ed43553":"markdown","7521564b":"markdown","2abe0838":"markdown","9b7108bb":"markdown","a3e83a25":"markdown","4b3eded6":"markdown","151c5208":"markdown","dac16c11":"markdown","3711aad2":"markdown","da9ae70d":"markdown","2a10506f":"markdown","0e0c0137":"markdown","46186c19":"markdown","2cae33a2":"markdown","3d54e320":"markdown","271a4486":"markdown"},"source":{"d18ad072":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.style.use('seaborn-whitegrid')\nimport seaborn as sns","dc82596a":"df_train = pd.read_csv('..\/input\/ipl-2020-player-performance\/Training.csv')\nmatch2020 = pd.read_csv('..\/input\/ipl-2020-player-performance\/Matches IPL 2020.csv')\nprevious_match = pd.read_csv('..\/input\/ipl-2020-player-performance\/Matches IPL 2008-2019.csv')\n\ndf_train.head()","b9b71485":"match2020.head()","83539072":"previous_match.shape","5fceb9b3":"# Check if there are any null values\nprevious_match.isna().sum()","a07528ae":"# Total seasons in the dada\nprevious_match.season.unique()","facd6c6d":"\nfig_dims=(20,4)\nplt.subplots(figsize=fig_dims)\nsns.countplot(x= previous_match['season'],data= previous_match)\nplt.show()","ef22054b":"fig_dims=(25,7)\nsns.set(font_scale=1.4)\nplt.subplots(figsize=fig_dims)\nsns.countplot(x=previous_match[\"city\"], data= previous_match, order=previous_match.city.value_counts().iloc[:10].index)","7a020471":"fig_dims=(20,7)\nsns.set(font_scale=1.4)\nsns.set_style(\"white\")\nplt.subplots(figsize=fig_dims)\nsns.countplot(x=previous_match[\"winner\"],palette=\"rocket\", data= previous_match, order=previous_match.winner.value_counts().iloc[:5].index)","1274fadf":"Best_player = df_train.nlargest(5, ['Total Points'])\n\nfig_dims=(27,7)\n\nplt.subplots(figsize=fig_dims)\nplt.bar(Best_player['Id'], Best_player['Total Points'], color='orange')","7a8b91f0":"sns.countplot(x=\"player_of_match\", data= previous_match, palette=\"rocket\",\n              order= previous_match.player_of_match.value_counts().iloc[:3].index)\nplt.show()","dd26b06a":"Best_player = df_train.nlargest(5, ['Batting_Points'])\n\nfig_dims=(27,7)\n\nplt.subplots(figsize=fig_dims)\nplt.bar(Best_player['Id'], Best_player['Batting_Points'], color='pink')","afd66ddd":"# importing the dataset containing players who is going to play in IPL 2020\nplayers =  pd.read_csv('..\/input\/ipl-2020-player-performance\/IPL 2020 Squads.csv', encoding='windows-1254')\nplayers","426fa565":"df_train.head()","0d9fda2d":"# Clean the id column to extract player's name and create a seprate column for the number of match of that player.\ndf_train['player'] = df_train['Id']\ndf_train['number'] = df_train['Id']\nfor i in range(0, len(df_train)):\n    df_train['player'][i] = df_train['Id'][i].split(\"_\")[-1]\n    df_train['number'][i] = int(df_train['Id'][i].split('_')[:1][0])","a198eb8b":"df_train.head()","45bb71d1":"# Check number of matches of each player\ndf_train['player'].value_counts()","4d540c93":"df = pd.DataFrame()\ndf['match_number'] = df_train['number']\ndf['player'] = df_train['player']\ndf['total_score'] = df_train['Total Points']\n","37a3cc35":"df = df.groupby(['player', 'match_number'], axis=0, as_index=False).sum()\ndf.index = df['player']\ndf.drop('player', axis=1, inplace=True)\ndf\n","6579ded9":"df['total_score'].plot(figsize=(20,10))","4e7947f0":"## create dataset for every shop and visualize sales trend\n\nmatch1 = df[df.match_number==1]['total_score'].sort_index(ascending=True)\nmatch2 = df[df.match_number==2]['total_score'].sort_index(ascending=True)\nmatch3 = df[df.match_number==3]['total_score'].sort_index(ascending=True)\nmatch4 = df[df.match_number==4]['total_score'].sort_index(ascending=True)","787c4257":"fig,(ax1,ax2,ax3,ax4) = plt.subplots(4,figsize=(12,13))\nmatch1.plot(ax=ax1)\nmatch2.plot(ax=ax2)\nmatch3.plot(ax=ax3)\nmatch4.plot(ax=ax4)\nplt.show()","2d8ad046":"#Training and testing data\n\ntrain_df = df.groupby('player').apply(lambda x: x.iloc[1:-1])\ntest_df = df.groupby('player').tail(1)\ntest_df","1e054754":"test_naive = test_df.copy()\ntest_naive['forecast'] = train_df['total_score'][len(train_df)-1]","7d1525e6":"import sklearn\nfrom sklearn.metrics import mean_squared_error\n\nscore = mean_squared_error(test_df['total_score'],test_naive['forecast'])\n\nresults = pd.DataFrame({'model':['naive model'],'mean squared error':round(score,2)})","7a7b836c":"results","621521b7":"#simp_mov_avg = test.copy()\nwindow = 5\nsimp_mov_avg = train_df['total_score'].rolling(window).mean()","9ab09e47":"simp_avgmov = test_df.copy()\nsimp_avgmov['forecast'] = simp_mov_avg[-1]\nsimp_avgmov['forecast']","6ce70a26":"score_simp_mov_avg = mean_squared_error(test_df['total_score'],simp_avgmov['forecast']) ## calculate score\n\nresults3 = pd.DataFrame({'model':['simple average model'],'mean squared error':round(score_simp_mov_avg,2)})\nresults = pd.concat([results,results3])","be5104ac":"results","4d670db4":"from statsmodels.tsa.holtwinters import ExponentialSmoothing\n\nmodel_exp = ExponentialSmoothing(np.asarray(train_df['total_score']) ,seasonal_periods= 10 ,trend='additive', seasonal=None)\nmodel_fit_exp = model_exp.fit(smoothing_level=0.2, smoothing_slope=0.01, optimized=False)\nparams = model_fit_exp.params\nhes_test = test_df.copy()\nhes_test['forecast'] = model_fit_exp.forecast(559)\nhes_test['forecast'].abs() ","092765e7":"pred_df = pd.read_csv('..\/input\/ipl-2020-player-performance\/sample_submission.csv')\n\npred_df['player'] = pred_df['Id']\npred_df['number'] = pred_df['Id']\nfor i in range(0, len(pred_df)):\n    pred_df['player'][i] = pred_df['Id'][i].split(\"_\")[-1]\n    pred_df['number'][i] = int(pred_df['Id'][i].split('_')[:1][0])\n    \ndf = pd.DataFrame()\ndf['match_number'] = pred_df['number']\ndf['player'] = df_train['player']\ndf","55c96c14":"df = df.groupby(['player', 'match_number'], axis=0, as_index=False).sum()\ndf.index = df['player']\ndf.drop('player', axis=1, inplace=True)\ndf","1025e3a7":"hes_test = df.copy()\nhes_test['forecast'] = model_fit_exp.forecast(1279)\ns= hes_test['forecast'].abs() \ns","2b8c9e87":"df = pd.DataFrame()\ndf['match_number'] = pred_df['number']\ndf['player'] = df_train['player']\ndf = df.groupby(['player', 'match_number'], axis=0, as_index=False).sum()\ndf['id'] = pred_df['number']\nfor i in range(len(df)):\n    df['id'][i] = df['match_number'][i].astype('str')+ str('_') + df['player'][i]","79e58964":"df['Total Points'] = s\ndf=df.sort_values(by= ['match_number'])\ndf","ef323517":"sub = pd.DataFrame()\nsub['id'] = df['id']\nsub['Total Points'] = df['Total Points']\nsub","451f0f7c":"sub.to_csv('My_score_forecast.csv', index=False)","af9b03aa":"### Hence Successfully forecasted IPL 2020 player's scores.\n\n#### If my notebook helped you please Upvote \ud83d\ude03","7ed43553":"create one column containing the forecast now let's calculate their rmse and mape check our prediction.","7521564b":"This shows most of the matches were held in Mumbai\n\n### **Let's see which team won most of the matches**\n","2abe0838":"We can see there are few null values in the dataset","9b7108bb":"### Top 3 players based on number of man of matches awarded","a3e83a25":"## Naive Method\nlet's start with the naive method where prediction is the last match's player's score.","4b3eded6":"### Performing EDAs to get insights of data","151c5208":"Plot shows that the maximum number of matches were played in 2013\n\n### **FINDING OUT THE CITIES WHERE MOST MATCHES HAVE BEEN HELD**","dac16c11":"### Simple Moving Average Method\nsimple moving average method In this method, the forecasts are generally calculated using the average of the time-series data in the moving window considered. The window of the past observations in the time series data keeps moving, and hence the average values keep changing. This helps in forecasting values at every step in the dataset. older score values have less impact in case of predicting futures score and recent score have more impact on future score.","3711aad2":"## Preparing data to train the model that can forecast player's score based on his previous scores","da9ae70d":"**We can clearly see Mumbai Indian won most of the matches**\n\n### Let's see which of the players have highest total points","2a10506f":"### preparing dataset for submission","0e0c0137":"### Holt's exponential smoothing technique\nHolt's exponential smoothing technique forecasts the level and trend of the time series data. Now the forecast equation is a function of both level and trend.\nThis method also captures the trend with level to predict or forecast future values\n\nhere, y(t+1) = l(t) + b(t)\n\ny(t+1) is the forecast of t+1 time period which is a function of level of 't' time period and trend of 't' time period\n\nl(t) = ay(t) + (1-a)(l(t-1)+b(t-1)) we already know that a is the smoothning level parameter\n\nand b(t) = beta(l(t)-l(t-1)) + (1-beta)(b(t-1) 'beta' is a smoothning trend parameter also know as smoothning slope in statsmodels package\n\nwe can tune this parameter to make a better prediction.","46186c19":"### Top 5 batting score","2cae33a2":"### Number of matches played in each season","3d54e320":"# IPL \ud83c\udfcf\ud83e\udd47\n\n### **The Indian Premier League (IPL) is a professional Twenty20 cricket league in India contested during March or April and May of every year by eight teams representing eight different cities in India.The league was founded by the Board of Control for Cricket in India (BCCI) in 2008. The IPL has an exclusive window in ICC Future Tours Programme.**\n\n\n####                    Let's import the required packages","271a4486":"### Read the data"}}