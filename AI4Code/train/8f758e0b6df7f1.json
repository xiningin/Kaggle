{"cell_type":{"75ad0c2d":"code","f112e8c3":"code","e1e984a5":"code","6258d4fa":"code","2fd4e840":"code","72cc841b":"code","19fd5e35":"code","34bd5f07":"code","554b2e30":"code","bedca937":"code","b04f391b":"code","f0da452d":"code","cd8ab120":"code","a5e7ef41":"code","6729e05a":"code","22469e53":"code","ca590f5a":"code","d0038f82":"code","d0d5e411":"code","7e737dd1":"code","3b1a0f2c":"code","71f712f3":"code","269192a3":"code","256b5cc9":"code","60a93643":"code","eae6675f":"code","7c44ea0c":"code","f400f6fa":"code","171bd075":"code","06b5a2d3":"code","113ceefb":"code","0e7c245d":"code","4156d677":"code","292eaa78":"code","f4d614eb":"code","765f2ab4":"code","0c9fad32":"code","0ee1a777":"code","a1151b82":"code","2f823d1a":"code","e62d2384":"code","8f3b1af5":"code","b75d08f8":"code","6fccad56":"code","e905f2ec":"code","79493388":"code","db4ada80":"code","d1519411":"code","020135dd":"markdown","69a6b321":"markdown","eee900de":"markdown","4e8c932b":"markdown","b8dc533a":"markdown","b912e0bd":"markdown","d633f9a1":"markdown","cdb2de80":"markdown","81ea943e":"markdown","f8391da6":"markdown","a514cb3c":"markdown","6ef29dc7":"markdown","883c79d5":"markdown","5d2556a5":"markdown","fa1b5190":"markdown","bc7b9b0f":"markdown","6ca50413":"markdown","b473658f":"markdown","39c61d9b":"markdown","e01dca62":"markdown","77f6b404":"markdown","1ddb33f0":"markdown","3cb0e980":"markdown","3c22f5a1":"markdown","7d8d3e96":"markdown","53381606":"markdown","f8092bc0":"markdown","1a16d046":"markdown","64d27b5a":"markdown","bf94c7fd":"markdown","a27b14f2":"markdown","866f63dd":"markdown","648b0cca":"markdown","896d4c0a":"markdown","7aa92d9a":"markdown","a4997562":"markdown","a006f30f":"markdown","eae9e791":"markdown","d4f536d7":"markdown","77d4fbcf":"markdown","0b79dcb4":"markdown","e175d2ba":"markdown","3cec28f4":"markdown","e238fbae":"markdown","f8194552":"markdown","09e49a6c":"markdown","f358ba57":"markdown","941cacae":"markdown","9f825cde":"markdown","7f585904":"markdown"},"source":{"75ad0c2d":"import cv2\nimport math\nimport numpy as np\nimport scipy as sp\nimport pandas as pd\n\nimport glob \nfrom PIL import Image, ImageDraw\nimport matplotlib.pyplot as plt\n\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport plotly.figure_factory as ff","f112e8c3":"train_df = pd.read_csv('..\/input\/gwd-clean-train\/original_train.csv')\nclean_df = pd.read_csv('..\/input\/gwd-clean-train\/new_train_0805.csv')","e1e984a5":"train_image_path = \"..\/input\/global-wheat-detection\/train\/\"\ntest_image_path = \"..\/input\/global-wheat-detection\/test\/\"","6258d4fa":"train_df.head()","2fd4e840":"clean_df.head()","72cc841b":"train_df['image_id'].nunique()","19fd5e35":"clean_df['image_id'].nunique()","34bd5f07":"def show_box(df, image_id, color='red'):\n    df = df.where(df['image_id']== image_id)\n    df = df.dropna(axis='rows')\n    arr = df[\"bbox\"].to_numpy()\n\n    image = cv2.imread(f'{train_image_path}\/{image_id}.jpg')\n    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n    for box in arr:\n        box=box[1:-1]\n        xmin,ymin,width,height= box.split(\",\")\n \n        xmin = int(float(xmin))\n        ymin= int(float(ymin)) \n        width = int(float(width))\n        height= int(float(height))\n\n        xmax = xmin + width\n        ymax = ymin + height\n        \n        color_tuple = (255,0,0)\n        if color == 'blue':\n            color_tuple = (0,0,255)\n            \n        image = cv2.rectangle(image,(xmin,ymin), (xmax,ymax),color_tuple,3)\n        \n        img = Image.fromarray(image)\n    return img","554b2e30":"fig, ax = plt.subplots(1, 1, figsize=(16, 8))\n    \nax.imshow(show_box(train_df, '41c0123cc'))","bedca937":"fig, ax = plt.subplots(1, 1, figsize=(16, 8))\n    \nax.imshow(show_box(clean_df, '41c0123cc', 'blue'))","b04f391b":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '41c0123cc'))\nax[1].imshow(show_box(clean_df, '41c0123cc', 'blue'))","f0da452d":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '2cc75e9f5'))\nax[1].imshow(show_box(clean_df, '2cc75e9f5', 'blue'))","cd8ab120":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'c01a58fdb'))\nax[1].imshow(show_box(clean_df, 'c01a58fdb', 'blue'))","a5e7ef41":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'c631c7fdb'))\nax[1].imshow(show_box(clean_df, 'c631c7fdb', 'blue'))","6729e05a":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '61ff5cdc2'))\nax[1].imshow(show_box(clean_df, '61ff5cdc2', 'blue'))","22469e53":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'c6d94be4c'))\nax[1].imshow(show_box(clean_df, 'c6d94be4c', 'blue'))","ca590f5a":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '8bad19780'))\nax[1].imshow(show_box(clean_df, '8bad19780', 'blue'))","d0038f82":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '4cbb2b7bd'))\nax[1].imshow(show_box(clean_df, '4cbb2b7bd', 'blue'))","d0d5e411":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'fade0e053'))\nax[1].imshow(show_box(clean_df, 'fade0e053', 'blue'))","7e737dd1":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '9a30dd802'))","3b1a0f2c":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'b53afdf5c'))","71f712f3":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'd96205316'))\nax[1].imshow(show_box(clean_df, 'd96205316', 'blue'))","269192a3":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'dc7c60052'))","256b5cc9":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '6106eefbc'))","60a93643":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '83842ec14'))\nax[1].imshow(show_box(clean_df, '83842ec14', 'blue'))","eae6675f":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '42e6efaaa'))\nax[1].imshow(show_box(clean_df, '42e6efaaa', 'blue'))","7c44ea0c":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'fc6860020'))","f400f6fa":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '9780d64f5'))","171bd075":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '49c3e4f6e'))\nax[1].imshow(show_box(clean_df, '49c3e4f6e', 'blue'))","06b5a2d3":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '409a8490c'))\nax[1].imshow(show_box(clean_df, '409a8490c', 'blue'))","113ceefb":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'd7a02151d'))\nax[1].imshow(show_box(clean_df, 'd7a02151d', 'blue'))","0e7c245d":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'b53afdf5c'))","4156d677":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'a1321ca95'))","292eaa78":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'a36608629'))","f4d614eb":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '5ec31deb1'))\nax[1].imshow(show_box(clean_df, '5ec31deb1', 'blue'))","765f2ab4":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '834690a35'))\nax[1].imshow(show_box(clean_df, '834690a35', 'blue'))","0c9fad32":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'f5f5a9d30'))\nax[1].imshow(show_box(clean_df, 'f5f5a9d30', 'blue'))","0ee1a777":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'd8cae4d1b'))","a1151b82":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'd067ac2b1'))\nax[1].imshow(show_box(clean_df, 'd067ac2b1', 'blue'))","2f823d1a":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '69e509038'))\nax[1].imshow(show_box(clean_df, '69e509038', 'blue'))","e62d2384":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'f24698e88'))\nax[1].imshow(show_box(clean_df, 'f24698e88', 'blue'))","8f3b1af5":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '4b4f6de9b'))\nax[1].imshow(show_box(clean_df, '4b4f6de9b', 'blue'))","b75d08f8":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '91c7fb84e'))","6fccad56":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '7d5af5b74'))","e905f2ec":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '7c659d49a'))\nax[1].imshow(show_box(clean_df, '7c659d49a', 'blue'))","79493388":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, 'd60e832a5'))\nax[1].imshow(show_box(clean_df, 'd60e832a5', 'blue'))","db4ada80":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '595709e55'))\nax[1].imshow(show_box(clean_df, '595709e55', 'blue'))","d1519411":"fig, ax = plt.subplots(1, 2, figsize=(16, 8))\n    \nax[0].imshow(show_box(train_df, '893938464'))\nax[1].imshow(show_box(clean_df, '893938464', 'blue'))","020135dd":"> a wrong bbox in left side. about `(253.0, 684.0)`","69a6b321":"I'm going to show images with bbox.\n\n`red`: train.csv\n<\/br>\n\n\n`blue`: clean train.csv\n\nYou can see wrong bbox. - Only visible to good people :)\n- I recommend viewing the image in a larger view.","eee900de":"> a wrong bbox in left side. about `(322.0, 626.0)`","4e8c932b":"> remove images in clean data","b8dc533a":"> a wrong bbox in left side. about `(13.0, 431.0)`","b912e0bd":"> a wrong bbox in left side. about `(272.0, 0.0)`","d633f9a1":"> a wrong bbox in left side. about `(102.0, 268.0)`","cdb2de80":"> a wrong bbox in left side. about `(37.0, 84.0)`","81ea943e":"This looks pretty good.\n\nBut there is a wheat head that is `not labeled`. A hub box that I removed is for this.","f8391da6":"<img src='https:\/\/www.cs.usask.ca\/images\/news\/2020\/wheatdetection.png' width=\"768\">\n<h1><center>Global Wheat Detection EDA for BBox<\/center><h1>","a514cb3c":"> a wrong bbox in left side. about `(602.0, 131.0)`","6ef29dc7":"> a wrong bbox in left side. about `(721.0, 768.0)`","883c79d5":"And I removed this bbox as below(`blue`). ","5d2556a5":"## <a name=\"Wheat Detection\">About this EDA \ud83d\udcd7<\/a>\n\nIn this competition, there are some wrong bbox and unlabeled wheat heads.\n- Hug bbox\n- Too small bbox\n- Wrong target(e.g. ladybug)\n- etc.\n\nI cleaned data in my way. \n\nAlthough this competition is over,I think it will help someone. \nI decided to share this results.\nLater, you can just download **clean_df.csv** in my public dataset.\n\n**[Update]** Clean BBox Dataset for Wheat Detection is [this](http:\/\/www.kaggle.com\/piantic\/gwd-clean-train).\nAnd I added this dataset!\n\nIf you feel this was something new and fresh, and it added some value to you, please consider <font color='orange'>upvoting<\/font>, it motivates to keep writing good kernels. \ud83d\ude04","fa1b5190":"> a wrong bbox in left side. about `(116.0, 177.0)`","bc7b9b0f":"> a wrong bbox in left side. about `(479.0, 813.0)`","6ca50413":"In this image, there is a hub bbox colored `red`.","b473658f":"> a wrong bbox in left side. about `(0.0, 153.0)`","39c61d9b":"> remove images in clean data","e01dca62":"> a wrong bbox in left side. about `(243.0, 633.0)`","77f6b404":"I decide to choose 2nd way mainly.\n\n\nAnd I removed image when unmarked wheat heads appeared too much.\n- This is very subjective. So, it may be different from your opinion.","1ddb33f0":"# <a id='importing'>Importing the necessary libraries <\/a> ","3cb0e980":"> remove images in clean data","3c22f5a1":"> remove images in clean data","7d8d3e96":"> remove images in clean data","53381606":"## If this kernel is useful, <font color='orange'>please upvote<\/font>!\n- I hope everyone has a good something in this competition!","f8092bc0":"> two wrong bbox in left side. about `(31.0, 393.0), (952.0, 729.0)`","1a16d046":"> a wrong bbox in left side. about `(526.0, 531.0)`","64d27b5a":"> a wrong bbox in left side. about `(322.0, 626.0)`","bf94c7fd":"> a wrong target bbox in left side. about `(633.0, 421.0)`","a27b14f2":"# Visualizing images","866f63dd":"> remove images in clean data","648b0cca":"> a wrong bbox in left side. about `(545.0, 798.0)`","896d4c0a":"> a wrong bbox in left side. about `(325.0, 62.0)`","7aa92d9a":"# <a id='reading'>Cleaning the train.csv <\/a>\nThere are several ways for cleaning. Generally,\n1. remove images have something wrong in train data : `simple`, `but inefficient`\n\n2. remove wrong bbox in images : `it seems good`, but `unmarked wheat heads is appeared.`\n\n3. remove wrong bbox and add new bbox in images : `best I think`, `but need doman knowledge & a lot of resources.`\n\n4. etc.","a4997562":"> a wrong bbox in left side. about `(493.0, 533.0)`","a006f30f":"> remove images in clean data","eae9e791":"> a wrong bbox in left side. about `(499.0, 677.0)`","d4f536d7":"> a wrong bbox in left side. about `(753.0, 768.0)`","77d4fbcf":"# <a id='reading'>Reading the train.csv <\/a>\n- train_df : `train.csv`(original)\n- clean_df : `clean train.csv`","0b79dcb4":"> a wrong bbox in left side. about `(590.0, 419.0)`","e175d2ba":"## Unique image_ids","3cec28f4":"> a wrong bbox in left side. about `(149.0, 1.0)`","e238fbae":"> a wrong bbox in left side. about `(712.0, 217.0)`","f8194552":"> remove images in clean data","09e49a6c":"All explanations are over.\n\nLet's start visualization for clean bbox.\n- left side : `red` - train.csv\n- right side :`blue` - clean train.csv","f358ba57":"> remove images in clean data","941cacae":"> remove images in clean data","9f825cde":"> You can see `a ladybug` in left side. about `(713.0, 634.0)`","7f585904":"> remove images in clean data"}}