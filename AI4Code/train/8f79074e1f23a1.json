{"cell_type":{"0ce2a42a":"code","c9afebbd":"code","f5507767":"code","c94f4540":"code","e91da738":"code","b4ad99cd":"code","60801872":"code","53907a6e":"code","779a0e7c":"code","97160edb":"code","2583907f":"code","bd9bbf93":"code","dd15a68b":"code","6e6a1be5":"code","a28b1231":"code","ba14a26b":"code","6a84973f":"code","e26dd5ab":"code","d672f9ea":"code","e94e9274":"code","bdc954a8":"code","da2dd1c4":"code","7b7b0313":"code","1152c473":"code","d17ab882":"code","edb809e5":"code","6fde3e06":"code","327dc1aa":"code","a2e9e886":"code","1225f814":"code","a5d2ab77":"code","5697915c":"code","d0f730fe":"code","261d252c":"code","e5094ec7":"code","1d812d81":"markdown","5fc9ac40":"markdown","53418cb1":"markdown","f43e94b1":"markdown","6d37ae20":"markdown","4ed99e01":"markdown","a5fa3471":"markdown","52e2f96f":"markdown","31ae8bc9":"markdown","32eb3fff":"markdown","6b1774e6":"markdown","34ca43ec":"markdown","a6a2f808":"markdown","a839098b":"markdown","bb570f10":"markdown"},"source":{"0ce2a42a":"# importing all necessary libraries\nimport pandas as pd\nimport numpy as np\nfrom datetime import date\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import StrMethodFormatter\nimport seaborn as sns\nimport plotly.express as px\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport pycountry\nimport plotly.graph_objects as go","c9afebbd":"# Reading the dataset\ncoronaVirus_df =  pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\",index_col='ObservationDate', parse_dates=['ObservationDate'])\ncoronaVirus_df.tail()","f5507767":"coronaVirus_df.shape","c94f4540":"coronaVirus_df.isnull().values.any()","e91da738":"coronaVirus_df.isnull().sum()","b4ad99cd":"#replacing null values in Province\/State with Country names\ncoronaVirus_df['Province\/State'].fillna(coronaVirus_df['Country\/Region'], inplace=True)","60801872":"coronaVirus_df.drop(['SNo'], axis=1, inplace=True)","53907a6e":"coronaVirus_df.head()","779a0e7c":"#creating new columns for date, month and time which would be helpful for furthur computation\ncoronaVirus_df['year'] = pd.DatetimeIndex(coronaVirus_df['Last Update']).year\ncoronaVirus_df['month'] = pd.DatetimeIndex(coronaVirus_df['Last Update']).month\ncoronaVirus_df['date'] = pd.DatetimeIndex(coronaVirus_df['Last Update']).day\ncoronaVirus_df['time'] = pd.DatetimeIndex(coronaVirus_df['Last Update']).time","97160edb":"coronaVirus_df.head()","2583907f":"coronaVirus_df.rename(columns={\"Country\/Region\": \"Country\", \"Province\/State\": \"State\"} , inplace=True)","bd9bbf93":"# A look at the different cases - confirmed, death and recovered\nprint('Globally Confirmed Cases: ',coronaVirus_df['Confirmed'].sum())\nprint('Global Deaths: ',coronaVirus_df['Deaths'].sum())\nprint('Globally Recovered Cases: ',coronaVirus_df['Recovered'].sum())","dd15a68b":"coronaVirus_df[['Confirmed', 'Deaths', 'Recovered']].sum().plot(kind='bar', color = '#007bcc')","6e6a1be5":"Recovered_percent = (coronaVirus_df['Recovered'].sum() \/ coronaVirus_df['Confirmed'].sum()) * 100\nprint(\"% of people recovered from virus: \",Recovered_percent)\n\nDeath_percent = (coronaVirus_df['Deaths'].sum()\/coronaVirus_df['Confirmed'].sum()) * 100\nprint(\"% of people died due to virus:\", Death_percent)\n","a28b1231":"import plotly.graph_objects as go\ngrouped_multiple = coronaVirus_df.groupby(['ObservationDate']).agg({'Confirmed': ['sum']})\ngrouped_multiple.columns = ['Confirmed ALL']\ngrouped_multiple = grouped_multiple.reset_index()\nfig = go.Figure()\nfig.update_layout(template='plotly_dark')\nfig.add_trace(go.Scatter(x=grouped_multiple['ObservationDate'], \n                         y=grouped_multiple['Confirmed ALL'],\n                         mode='lines+markers',\n                         name='Confirmed',\n                         line=dict(color='red', width=2)))\nfig.show()","ba14a26b":"# Total Number Of countries which are affected by the virus\n\ncountries= coronaVirus_df['Country'].unique()\ntotal_countries= len(countries)\nprint('Total countries affected:',total_countries)\nprint('Countries affected are:',countries)","6a84973f":"# Number of confirmed cases reported Country wise\n\nglobal_confirmed_cases = coronaVirus_df.groupby('Country').sum().Confirmed\nglobal_confirmed_cases.sort_values(ascending=False)","e26dd5ab":"global_death_cases = coronaVirus_df.groupby('Country').sum().Deaths\nglobal_death_cases.sort_values(ascending=False)","d672f9ea":"global_recovered_cases = coronaVirus_df.groupby('Country').sum().Recovered\nglobal_recovered_cases.sort_values(ascending=False)","e94e9274":"#plotting graphs for total Confirmed, Death and Recovery cases\nplt.rcParams[\"figure.figsize\"] = (12,9)\nax1 = coronaVirus_df[['month','Confirmed']].groupby(['month']).sum().plot()\nax1.set_ylabel(\"Total Number of Confirmed Cases\")\nax1.set_xlabel(\"month\")\n\n#ax2 = coronaVirus_df[['date','Deaths', 'Recovered']].groupby(['date']).sum().plot()\n#ax2.set_ylabel(\"Recovered and Deaths Cases\")\n#ax2.set_xlabel(\"date\")","bdc954a8":"# Let's look the various Provinces\/States affected\n\ndata_countryprovince = coronaVirus_df.groupby(['Country','State']).sum()\ndata_countryprovince.sort_values(by='Confirmed',ascending=False)","da2dd1c4":"# Top Affected countries\n\ntop_affected_countries = global_confirmed_cases.sort_values(ascending=False)\ntop_affected_countries.head(5)","7b7b0313":"# Finding countries which are relatively safe due to less number of reported cases\ntop_unaffected_countries = global_confirmed_cases.sort_values(ascending=True)\ntop_unaffected_countries.head(5)","1152c473":"#Mainland China\nChina_data = coronaVirus_df[coronaVirus_df['Country']=='Mainland China']\nChina_data","d17ab882":"x = China_data.groupby('State')['Confirmed'].sum().sort_values().tail(15)","edb809e5":"x.plot(kind='barh', color='#86bf91')\nplt.xlabel(\"Confirmed case Count\", labelpad=14)\nplt.ylabel(\"State\", labelpad=14)\nplt.title(\"Confirmed cases count in China states\", y=1.02);","6fde3e06":"US_data = coronaVirus_df[coronaVirus_df['Country']=='US']\nUS_data","327dc1aa":"x = US_data.groupby('State')['Confirmed'].sum().sort_values(ascending=False).tail(20)\nx","a2e9e886":"x.plot(kind='barh', color='#86bf91')\nplt.xlabel(\"Confirmed case Count\", labelpad=14)\nplt.ylabel(\"States\", labelpad=14)\nplt.title(\"Confirmed cases count in US states\", y=1.02);","1225f814":"India_data = coronaVirus_df[coronaVirus_df['Country']=='India']\nIndia_data","a5d2ab77":"# Using plotly.express\nimport plotly.express as px\n\nimport pandas as pd\n\nfig = px.line(coronaVirus_df, x='Last Update', y='Confirmed')\nfig.show()","5697915c":"\nfig = px.line(coronaVirus_df, x='Last Update', y='Deaths')\nfig.show()","d0f730fe":"import pandas as pd\nimport plotly.graph_objects as go\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(\n                x=coronaVirus_df['date'],\n                y=coronaVirus_df['Confirmed'],\n                name=\"Confirmed\",\n                line_color='deepskyblue',\n                opacity=0.8))\n\nfig.add_trace(go.Scatter(\n                x=coronaVirus_df['date'],\n                y=coronaVirus_df['Recovered'],\n                name=\"Recovered\",\n                line_color='dimgray',\n                opacity=0.8))\n\nfig.add_trace(go.Scatter(\n                x=coronaVirus_df['date'],\n                y=coronaVirus_df['Deaths'],\n                name=\"Deaths\",\n                line_color='red',\n                opacity=0.8))\n\n# Use date string to set xaxis range\nfig.update_layout(xaxis_range=['2020-01-22','2020-03-10'],\n                  title_text=\"Cases over time\")\nfig.show()","261d252c":"import pandas as pd\nimport plotly.graph_objects as go\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(\n                x=coronaVirus_df['date'],\n                y=coronaVirus_df['Recovered'],\n                name=\"Recovered\",\n                line_color='deepskyblue',\n                opacity=0.8))\n\nfig.add_trace(go.Scatter(\n                x=coronaVirus_df['date'],\n                y=coronaVirus_df['Deaths'],\n                name=\"Deaths\",\n                line_color='red',\n                opacity=0.8))\n\n# Use date string to set xaxis range\nfig.update_layout(xaxis_range=['2020-01-22 00:00:00','2020-03-10 23:59:59'],\n                  title_text=\"Recovered vs Deaths over time in China\")\nfig.show()","e5094ec7":"import pandas as pd\nimport plotly.graph_objects as go\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(\n                x=coronaVirus_df.time,\n                y=coronaVirus_df['Confirmed'],\n                name=\"Confirmed\",\n                line_color='deepskyblue',\n                opacity=0.8))\n\n# Use date string to set xaxis range\nfig.update_layout(xaxis_range=['2020-01-31','2020-02-03'],\n                  title_text=\"Confirmed Cases over time\")\nfig.show()","1d812d81":"### Recovery % vs Death % across the globe\n\nLet's check recovered% and death% across the globe","5fc9ac40":"## Time Series Analysis\n\nIt is important to understand correlation of time and cases reported. ","53418cb1":"## Exploratory Data Analysis\n\nLet's perform EDA on the dataset.","f43e94b1":"Above list are unaffected countries which means that relative to other countries, there are very less number of cases reported. These countries should take all measures to prevent spreading the virus.","6d37ae20":"![](http:\/\/)It is seen that total of 8786836 confirmed cases have been reported, 5591523 deaths have been confirmed and 23938502 people have sucessfully fought the virus and are showing signs of recovery. The data is from 22nd Jan to 4th March 2020. \n\nIt is important to analyze latest scenario as per the last update so that we can predict numbers in future. ","4ed99e01":"### Coronavirus spread in India","a5fa3471":"1. > ### ****Geographical Distribution in India and US ****\n\n> Now let's understand distribution of virus in US population","52e2f96f":"### Geographical Widespread of CoronaVirus\n\nUsing the given data, Here are few questions which we are going to answer\n1. Total number of countries whch are affected by the virus\n2. Number of confirmed, recovered, deaths cases reported Country wise\n2. Number of confirmed cases reported State\/Province wise\n3. Top 5 Affected Countries\n4. Top 5 countries which are unaffected.\n5. Distribution of virus in India and US population. ","31ae8bc9":"Checking missing values and transforming data","32eb3fff":"## Exploratory Data Analysis on Corona Virus\n\n## What is a Corona Virus? \n\nAs listed on WHO website, Coronaviruses (CoV) are a large family of viruses that cause illness ranging from the common cold to more severe diseases such as Middle East Respiratory Syndrome (MERS-CoV) and Severe Acute Respiratory Syndrome (SARS-CoV). A novel coronavirus (nCoV) is a new strain that has not been previously identified in humans.  \n\nCommon signs of infection include respiratory symptoms, fever, cough, shortness of breath and breathing difficulties. In more severe cases, infection can cause pneumonia, severe acute respiratory syndrome, kidney failure and even death. \n\n## Objective: \n\nSince we see that outbreak of Corona Virus is increasing Day by day, we can explore trends from the given data and try to predict future. \n\n## Dataset Source: https:\/\/www.kaggle.com\/sudalairajkumar\/novel-corona-virus-2019-dataset\n\n","6b1774e6":"> ### Latest Update on number of confirmed, reported and deaths across the globe****\n\nWe are trying to analyze number of cases reported.","34ca43ec":"## References\n\nhttps:\/\/www.kaggle.com\/sudalairajkumar\/novel-corona-virus-2019-dataset\n\nhttps:\/\/www.who.int\/health-topics\/coronavirus\n\nhttps:\/\/plot.ly\/python\/time-series\/\n\nhttps:\/\/plot.ly\/python\/bubble-maps\/#base-map-configuration\n\nhttps:\/\/towardsdatascience.com\/basic-time-series-manipulation-with-pandas-4432afee64ea\n\nhttps:\/\/en.wikipedia.org\/wiki\/Coronavirus\n\n","a6a2f808":"### Plotting cases confirmed in China","a839098b":"### Data Cleaning and Transformation\n\n1. Check for missing values and filling missing values\n2. Change data type for Last Update column and modify other columns if required. \n3. Remove 'Sno' column as it is not required. ","bb570f10":"As of now this is our EDA. We need to predict future cases and build models which will be coming soon. "}}