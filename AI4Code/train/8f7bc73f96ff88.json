{"cell_type":{"6da566e7":"code","0e2f1509":"code","34aff772":"code","e50562df":"code","ae459249":"code","3bf90069":"code","eeb88b2c":"code","aa3ada4c":"code","2bef72c1":"code","e7edbd33":"code","9f5f4645":"code","e5b809eb":"code","919f0e43":"code","3a8ed806":"code","52fb3407":"code","b701dddb":"code","5bc577c2":"code","769f31cc":"code","4a647208":"code","07a714e6":"code","8df24ba6":"markdown","fd770163":"markdown","34998184":"markdown","b952fc04":"markdown","5adaed1b":"markdown","436da5e2":"markdown"},"source":{"6da566e7":"!pip install lightautoml -q","0e2f1509":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\npd.set_option('display.max_rows', 150)\npd.set_option('display.max_columns', 500)\npd.set_option('display.max_colwidth', None)\npd.set_option('display.float_format', lambda x: '%.2f' % x)\n\nsns.set(rc={'figure.figsize':(16,8)})\nsns.set(font_scale=1.3)\nplt.style.use('fivethirtyeight')\n\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\n\nfrom lightautoml.automl.presets.tabular_presets import TabularAutoML, TabularUtilizedAutoML\nfrom lightautoml.tasks import Task\nfrom lightautoml.report.report_deco import ReportDeco","34aff772":"train = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/test.csv')","e50562df":"train.head()","ae459249":"train.describe().T.style.bar(subset=['mean'], color='#205ff2')\\\n                            .background_gradient(subset=['std'], cmap='Reds')\\\n                             .background_gradient(subset=['50%'], cmap='coolwarm')","3bf90069":"# Function to calculate percentage\n\ndef plt_percente(plot, feature):\n    total= len(feature)\n    for p in plot.patches:\n        percentage = \"{:.1f}%\".format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() \/ 2 - 0.05\n        y = p.get_y() + p.get_height()\n        ax.annotate(percentage, (x,y), size=12, rotation=45)\n    plt.show()","eeb88b2c":"# Calculating the percentage of target variables \n\nfig, ax = plt.subplots(figsize=(16, 8))\n\nax.bar(train[\"loss\"].value_counts().sort_index().index,\n              train[\"loss\"].value_counts().sort_index().values,\n              edgecolor=\"black\")\n\nax.set_title(\"Target distribution\", fontsize=20, pad=15)\nax.set_ylabel(\"Amount of values\", fontsize=14, labelpad=15)\nplt_percente(ax, train.loss)\nplt.show();","aa3ada4c":"# Distribution of variables\n\ncolumns = train.columns[1:101]\nplt.subplots(figsize=(16,150))\nlength = len(columns)\n\nfor i, j in zip(columns, range(length)):\n    fig = plt.subplot((length\/2), 3, j+1)\n    plt.subplots_adjust(wspace=.2, hspace=.5)\n    sns.histplot(x=train[i], color='orange',edgecolor='black')\n    sns.histplot(x=test[i], color='green',edgecolor='black')\n    fig.legend(labels=('Train','Test'))","2bef72c1":"from sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\n\nfrom lightautoml.automl.presets.tabular_presets import TabularAutoML, TabularUtilizedAutoML\nfrom lightautoml.tasks import Task\nfrom lightautoml.report.report_deco import ReportDeco","e7edbd33":"def rmse(y_true, y_pred, **kwargs):\n    return mean_squared_error(y_true, y_pred, squared = False, **kwargs)","9f5f4645":"THREADS = 12\nFOLDS = 10\nRANDOM = 42\nSIZE = 0.2\nTIMEOUT = 3600\nTARGET = 'loss'","e5b809eb":"df_train, df_test = train_test_split(train, test_size=SIZE, stratify=train[TARGET],\n                                    random_state=RANDOM)","919f0e43":"task = Task('reg',)","3a8ed806":"roles = {'target':TARGET, 'drop':['id']}","52fb3407":"lgb_params = {\n    'metric': 'RMSE',\n    'lambda_l1': 1e-07, \n    'lambda_l2': 2e-07, \n    'num_leaves': 42, \n    'feature_fraction': 0.55, \n    'bagging_fraction': 0.9, \n    'bagging_freq': 3, \n    'min_child_samples': 19,\n    'num_threads': 12\n}\n\ncb_params = {\n    'num_trees': 7000, \n    'od_wait': 1200, \n    'learning_rate': 0.02, \n    'l2_leaf_reg': 64, \n    'subsample': 0.83, \n    'random_strength': 17.17, \n    'max_depth': 8, \n    'min_data_in_leaf': 10, \n    'leaf_estimation_iterations': 3,\n    'loss_function': 'RMSE',\n    'eval_metric': 'RMSE',\n    'bootstrap_type': 'Bernoulli',\n    'leaf_estimation_method': 'Newton',\n    'random_seed': 42,\n    \"thread_count\": 12\n}","b701dddb":"%%time\nautoml = TabularAutoML(task = task, \n                       timeout = TIMEOUT,\n                       cpu_limit = THREADS,\n                       reader_params = {'n_jobs': THREADS, 'cv': FOLDS, 'random_state': RANDOM},\n                       general_params = {'use_algos': [['lgb', 'cb']]},\n                       lgb_params = {'default_params': lgb_params, 'freeze_defaults': True}, \n                       cb_params = {'default_params': cb_params, 'freeze_defaults': True}, \n                       verbose = 2 \n                      )\n\npred_ = automl.fit_predict(df_train, roles = roles)","5bc577c2":"pred = automl.predict(test)","769f31cc":"submission = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/sample_submission.csv')","4a647208":"submission[TARGET] = pred.data[:, 0]","07a714e6":"submission.to_csv('submission1.csv', index = False)","8df24ba6":"<a id=\"1\"><\/a>\n# <p style=\"font-family:newtimeroman; font-size:160%;\">Definition<\/p>\n<p style=\"font-family:newtimeroman; font-size:130%;\">The dataset is used for this competition is synthetic, but based on a real dataset and generated using a CTGAN. The original dataset deals with calculating the loss associated with a loan defaults. Although the features are anonymized, they have properties relating to real-world features.<\/p> defaults. Although the features are anonymized, they have properties relating to real-world features.","fd770163":"<p style=\"font-family:newtimeroman; font-size:130%;\">Some variables have a very high standard deviation.<\/p>","34998184":"<a id=\"3\"><\/a>\n# <p style=\"font-family:newtimeroman; font-size:160%;\">LightAutoML<\/p>","b952fc04":"<a id=\"2\"><\/a>\n# <p style=\"font-family:newtimeroman; font-size:160%;\">EAD<\/p>","5adaed1b":"<p style=\"font-family:newtimeroman; font-size:130%;\">Analyzing the graph shows that some variables have outlier values and others have spaced values, which may not be good for the models.<\/p>","436da5e2":"<a id=\"inicio\"><\/a>\n- [1 Definition](#1)\n- [2 EDA](#2)\n- [3 LightAutoML](#3)\n"}}