{"cell_type":{"effb5d90":"code","f11015ae":"code","ed1a544a":"code","6ea93b21":"code","828137b6":"code","381d61fa":"code","a9b08bd3":"code","7401a393":"code","f5701951":"code","699ca4f6":"code","73fcded2":"code","6062de4b":"code","89b66f29":"code","835863a2":"code","91fa2aeb":"code","d85e719e":"code","34bfb0a3":"code","adfdfa40":"code","70481cdc":"code","8e5bee32":"code","6285b7df":"code","730b8d50":"code","81222bea":"code","273ff35d":"code","b4833a9b":"code","fd7fb9bd":"code","6b362801":"code","09163487":"code","6206d632":"code","af765551":"code","3b1a1c4c":"code","787d5fac":"code","09aa5373":"code","40fbb2cf":"code","cb67f265":"code","2fa4cbf0":"code","5dfeee32":"code","9abc0cd0":"code","c37ea71a":"code","fda0e6c3":"code","6315c33a":"code","5de535cb":"code","3428ac6b":"code","b86c68e2":"code","7e5ed9d3":"code","b01e9257":"code","13ec45b5":"code","654d83ea":"code","63e31289":"code","31d2eb2c":"code","6b5a9330":"code","823d90ea":"code","e11a957b":"code","e2166695":"code","6573bd27":"code","2a270318":"code","193798a4":"code","26319d80":"code","6161a650":"code","8a83df8f":"code","9b7cd40e":"code","37b81f88":"code","ecb25476":"code","34c0b8ab":"code","e8d9ed72":"code","c8e5bf0d":"markdown","1aec9457":"markdown","27eace6a":"markdown","08f2eac5":"markdown","8a385d4b":"markdown","801923b6":"markdown"},"source":{"effb5d90":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns","f11015ae":"data = pd.read_csv(\"..\/input\/mlexam\/traindata_SJC.csv\")\ndata_test=pd.read_csv(\"..\/input\/mlexam\/testdata_SJC.csv\")","ed1a544a":"data.head()","6ea93b21":"data.shape","828137b6":"data.info()","381d61fa":"data_test.info()","a9b08bd3":"data['MaritalStatus'].fillna(data['MaritalStatus'].mode()[0],inplace = True)\ndata[\"WeeklyWages\"].fillna(data[\"WeeklyWages\"].mean(),inplace = True)\ndata[\"HoursWorkedPerWeek\"].fillna(data[\"WeeklyWages\"].mean(),inplace = True)\ndata_test['MaritalStatus'].fillna(data_test['MaritalStatus'].mode()[0],inplace = True)","7401a393":"data=data.drop(['DateReported','DateTimeOfAccident'],axis=1)\ndata_test=data_test.drop(['DateReported','DateTimeOfAccident'],axis=1)","f5701951":"data.info()","699ca4f6":"data.isnull()","73fcded2":"data.info()","6062de4b":"data.isnull().sum().count()","89b66f29":"data_test.isnull().sum().count()","835863a2":"data.shape","91fa2aeb":"data.describe()","d85e719e":"data.info()","34bfb0a3":"numdf=data.select_dtypes(exclude=object)\nnumdf.columns","adfdfa40":"sns.boxplot(data=numdf.drop([\"InitialIncurredCalimsCost\",\"UltimateIncurredClaimCost\"],axis=1))\nplt.xticks(rotation=90)\nplt.rcParams[\"figure.figsize\"] = [10,10]","70481cdc":"data_test['WeeklyWages']=pd.cut(data['WeeklyWages'],bins=3, labels=['Low','Medium','High']).astype('object')\ndata_test['Age']=pd.cut(data['Age'],bins=3, labels=['Low','Medium','High']).astype('object')\ndata['WeeklyWages']=pd.cut(data['WeeklyWages'],bins=3, labels=['Low','Medium','High']).astype('object')\ndata['Age']=pd.cut(data['Age'],bins=3, labels=['Low','Medium','High']).astype('object')","8e5bee32":"sns.heatmap(numdf.corr())","6285b7df":"sns.pairplot(data=numdf,diag_kind='kde')","730b8d50":"data.info()","81222bea":"data[\"Gender\"].value_counts().plot.bar()\nplt.rcParams[\"figure.figsize\"] = [5,5]","273ff35d":"data[\"MaritalStatus\"].value_counts().plot.bar()\nplt.rcParams[\"figure.figsize\"] = [5,5]","b4833a9b":"sns.catplot(data=data,col=\"MaritalStatus\",y='UltimateIncurredClaimCost',kind=\"violin\")","fd7fb9bd":"sns.catplot(data=data,col=\"Gender\",y='UltimateIncurredClaimCost',kind=\"violin\")","6b362801":"import sklearn.preprocessing as pre","09163487":"le=pre.LabelEncoder()\nsc=pre.StandardScaler()","6206d632":"df_label=data.copy()\ndf_label.shape\ndf_label_test=data_test.copy()","af765551":"cat_df=data.select_dtypes(include=\"object\")\ncat_df1=data_test.select_dtypes(include=\"object\")","3b1a1c4c":"cat_df","787d5fac":"for x in cat_df.columns:\n    df_label[x]=le.fit_transform(df_label[x])","09aa5373":"for x in cat_df.columns:\n    df_label_test[x]=le.fit_transform(df_label_test[x])","40fbb2cf":"df_label.shape","cb67f265":"df_label","2fa4cbf0":"import sklearn.preprocessing as pre\nimport sklearn.model_selection as ms","5dfeee32":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.inspection import permutation_importance\nimport shap\nfrom matplotlib import pyplot as plt","9abc0cd0":"# df_label1=df_label.drop([\"ClaimNumber\",\"ClaimDescription\",\"UltimateIncurredClaimCost\",\"HoursWorkedPerWeek\"],axis=1)\n# X = pre.minmax_scale(df_label1)\n# y= df_label['UltimateIncurredClaimCost']\n# X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=123456)","c37ea71a":"df_label_test1=df_label_test.drop([\"ClaimNumber\",\"ClaimDescription\",\"HoursWorkedPerWeek\"],axis=1)\nX_test = pre.minmax_scale(df_label_test1)\n","fda0e6c3":"df_label1=df_label.drop([\"ClaimNumber\",\"ClaimDescription\",\"UltimateIncurredClaimCost\",\"HoursWorkedPerWeek\"],axis=1)\nX_train = pre.minmax_scale(df_label1)\ny_train= df_label['UltimateIncurredClaimCost']","6315c33a":"dtr = DecisionTreeRegressor( random_state=123456)\ndtr.fit(X_train, y_train)","5de535cb":"importance=dtr.feature_importances_\nimportance","3428ac6b":"for i,v in enumerate(importance):\n    print(\"Feature: %0d, Score : %0.5f\" %(i,v))","b86c68e2":"sorted_idx = dtr.feature_importances_.argsort()\nplt.bar(df_label1.columns[sorted_idx], dtr.feature_importances_[sorted_idx])\nplt.xlabel(\"CART Classification Feature Importance\")\nplt.xticks(rotation=90)\nplt.ylim(0,0.01)\nplt.tick_params(axis='x', which='major', labelsize=12,length=10)\nplt.rcParams[\"figure.figsize\"] = [20,20]","7e5ed9d3":"list_feature=df_label1.columns[sorted_idx].tolist()\nlist_feature","b01e9257":"import sklearn.preprocessing as pre\nimport sklearn.model_selection as ms\nimport sklearn.linear_model as lm\nimport xgboost as xg\nfrom sklearn.ensemble import RandomForestRegressor \nfrom sklearn.metrics import mean_squared_error","13ec45b5":"xgb= xg.XGBRegressor(max_depth=8,min_child_weight=20,eta=0.8,subsample=1,colsample_bytree=1,objective='reg:linear',n_jobs=4,random_state=123,n_estimators=5)","654d83ea":"lasso=lm.Lasso(alpha=0.9, fit_intercept=True, normalize=False, precompute=False, copy_X=True, max_iter=10000, tol=0.0001, warm_start=False, positive=False, random_state=12345, selection='random')\n","63e31289":"ridge=lm.Ridge(alpha=1.0, fit_intercept=True, normalize=False, copy_X=True, max_iter=None, tol=0.001, solver='auto', random_state=None)","31d2eb2c":"rfr=RandomForestRegressor(n_estimators=10,random_state=1234)","6b5a9330":"#lasso\nlasso.fit(X_train,y_train)\n#  test_score=lasso.score(X_test,y_test)\ntrain_score=lasso.score(X_train,y_train)\ny_pred_lasso=lasso.predict(X_test) \n# print(\"\\nThe train score is:\" ,train_score)","823d90ea":"#xgboost\nxgb.fit(X_train,y_train)\n#test_score=xgb.score(X_test,y_test)\ntrain_score=xgb.score(X_train,y_train)\ny_pred_xgb=xgb.predict(X_test)\n#print(\"\\nThe test score is:\" ,test_score)\nprint(\"\\nThe train score is:\" ,train_score)","e11a957b":"#random forest\nrfr.fit(X_train,y_train)\n#test_score=xgb.score(X_test,y_test)\ntrain_score=rfr.score(X_train,y_train)\ny_pred_rfr=rfr.predict(X_test)\n#print(\"\\nThe test score is:\" ,test_score)\nprint(\"\\nThe train score is:\" ,train_score)","e2166695":"#ridge\nridge.fit(X_train,y_train)\n#test_score=xgb.score(X_test,y_test)\ntrain_score=ridge.score(X_train,y_train)\ny_pred_ridge=ridge.predict(X_test)\n#print(\"\\nThe test score is:\" ,test_score)\nprint(\"\\nThe train score is:\" ,train_score)","6573bd27":"#grid search for linear regression hyper parameter tuning","2a270318":"lr1=lm.LinearRegression()","193798a4":" params = {\"fit_intercept\":[True,False],\n    \"normalize\":[True,False],\n    \"copy_X\":[True,False],\n    \"n_jobs\":[2,3,4,5,6,7,8]}\nparams","26319d80":"grid=ms.GridSearchCV(lr1,params)","6161a650":"grid.fit(X_train,y_train)","8a83df8f":"pd.DataFrame(grid.cv_results_)","9b7cd40e":"grid.best_params_","37b81f88":"grid.best_score_","ecb25476":"lr=lm.LinearRegression(copy_X=True,fit_intercept=True,n_jobs=2,normalize=False)","34c0b8ab":"lr.fit(X_train,y_train)\n# test_score=lr.score(X_test,y_test)\ntrain_score=lr.score(X_train,y_train)\ny_pred_lr=lr.predict(X_test)\n#print(\"\\nThe test score is:\" ,test_score)\nprint(\"\\nThe train score is:\" ,train_score)","e8d9ed72":"df_csv=pd.read_csv(\"..\/input\/mlexam\/sample_submission_csv.csv\")\ndf_csv[\"UltimateIncurredClaimCost\"]=y_pred_xgb\ndf_csv.to_csv(\"Sample Submission_xgb.csv\", index = False)","c8e5bf0d":"## DATA VISUALISATION","1aec9457":"## FEATURE SELECTION","27eace6a":"## DATA ENCODING ","08f2eac5":"## CHECKING FOR MISSING VALUES","8a385d4b":"## PREPROCESSING : MISSING VALUE TREATMENT","801923b6":"## HYPER PARAMETER TUNING AND MODELLING"}}