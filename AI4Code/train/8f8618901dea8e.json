{"cell_type":{"34d4855e":"code","4a3eba55":"code","05229b07":"code","ba27e003":"code","bcd6e0c0":"code","925b98b0":"code","4dc6e9b0":"code","4a928e63":"code","5f1a62a2":"code","d5b53971":"code","ee1327cb":"code","a1c23f40":"code","a04dfe92":"code","2cbafaa2":"code","587f43d1":"code","3c1501c7":"code","cf921b93":"code","fb907192":"code","b8db4704":"code","84d0368d":"code","8afd30b1":"code","319666f5":"code","0ab455d5":"code","ea1cd5e8":"code","863d73e2":"code","54717647":"code","c4c4bd13":"code","24a850cf":"code","53a30098":"code","b957943b":"code","4c891692":"code","12581a79":"code","d992e064":"code","fc238d5b":"code","165966e2":"code","f2a41615":"code","6b947ea5":"code","7efdeca6":"code","6c24835d":"code","5c5279fb":"code","d7daea22":"code","e9fd42a9":"code","f6924ec3":"code","4263152f":"code","6ad30296":"code","a8217d6e":"code","ff7e42fa":"code","b829c442":"code","c3a61fe9":"code","de38bf43":"code","d0307982":"code","bd27af56":"code","85f30b34":"code","57d44cb6":"code","b785bcbd":"code","d0d6c368":"code","21639add":"code","78070d02":"code","768163d8":"code","58c7e900":"code","e664ecf2":"code","9d2a942a":"code","0e701a12":"code","40f59ec3":"code","fb437148":"code","b9cbc760":"code","cae0af3b":"code","b8b4e88a":"code","725869e3":"code","24aeb3ca":"code","d303fd30":"code","5250d986":"code","37c0de0a":"code","313a875d":"code","2f1213c3":"code","04b896bb":"code","dcec4f10":"code","fb7479ed":"markdown","f4ad8cd0":"markdown","ef99f7d4":"markdown","8b0c103a":"markdown","578836f0":"markdown","80281555":"markdown","eab97212":"markdown","4eadf78b":"markdown","e2a150eb":"markdown","ad84e0a7":"markdown","646b52f3":"markdown","411fa61d":"markdown","0262efc7":"markdown","ddd17382":"markdown","c9516274":"markdown","d78b54ca":"markdown","713187d0":"markdown","889ee2a2":"markdown","2785e002":"markdown","498e8ff4":"markdown","4afae2f2":"markdown","10e0d271":"markdown","dc251117":"markdown","d648e6c7":"markdown","266c8b7f":"markdown","ac5dc506":"markdown","c8acea72":"markdown","bd11292e":"markdown","b53e8a6e":"markdown","080d3ccc":"markdown","c75e7a2d":"markdown","7752a949":"markdown","1d5eaa2c":"markdown","604f3666":"markdown","084d1c19":"markdown","c2e94891":"markdown","3e18a6f9":"markdown","af488036":"markdown","49116f6a":"markdown","de0008c6":"markdown","7e12e711":"markdown","fb4a5064":"markdown","83d3a217":"markdown","30a459d9":"markdown","a3b4e47a":"markdown","324c6f70":"markdown","7a0ff37f":"markdown","74b1ed32":"markdown","9b74ab39":"markdown","d70a7396":"markdown","23704fb0":"markdown","2d706057":"markdown","ec13591f":"markdown","8d47a2a9":"markdown","fc3586ac":"markdown","07de44af":"markdown","3171fdea":"markdown"},"source":{"34d4855e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport warnings\nwarnings.filterwarnings('ignore')\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4a3eba55":"from sklearn.preprocessing import MinMaxScaler\nfrom sklearn.cluster import KMeans #Clustering\nfrom sklearn.decomposition import PCA #Dimension Reduction\n\nimport plotly.express as px #Interactive Plots\nimport plotly.graph_objs as pgo #Interactive Plots\nfrom plotly.subplots import make_subplots #Interactive Plots\n\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud\n\nfrom collections import Counter\n\nimport random\nfrom math import floor","05229b07":"main_df = pd.read_csv('..\/input\/spotify-dataset-19212020-160k-tracks\/data.csv')\nmain_df.info()","ba27e003":"main_df.drop(['key','mode','year','explicit'],axis=1).describe().transpose().sort_index()","bcd6e0c0":"main_df.head()","925b98b0":"main_df.tail()","4dc6e9b0":"# Set release date a index and turn it into time series in order to fix dates without month and day components\nmain_df.set_index('release_date',inplace=True)\nmain_df.index = pd.to_datetime(main_df.index)\nmain_df.head()","4a928e63":"# year interval\nprint(\"Oldest Record\")\nprint(main_df.iloc[0])","5f1a62a2":"print(\"Most Recent Record\")\nprint(main_df.iloc[-1])","d5b53971":"#Change duration from milliseconds to seconds \nmain_df['duration'] = main_df['duration_ms'].apply(lambda x:round(x\/1000))\nmain_df.drop('duration_ms',axis=1,inplace=True)","ee1327cb":"main_df.drop(['key','mode','year','explicit'],axis=1).describe().transpose().sort_index()","a1c23f40":"#Pearson Correlation Table\nmain_corr_df = main_df.drop(['key','mode','year','explicit'],axis=1).corr(method='pearson')\nfig = px.imshow(main_corr_df,title=\"Song Feautures Pearson Correrlation Heatmap\",width=750,height=500,labels={'color':\"correlation\"})\nfig.show()","a04dfe92":"def plot_corr(feature_1,feature_2,title):\n    corr_df = main_df[[feature_1,feature_2]]\n    corr_df[\"feature_1_interval\"] = pd.cut(main_df[feature_1],np.arange(0,1,0.0001),labels=[f\"{feature_1}_{i}\" for i in range(1,10000)])\n    corr_df = corr_df.groupby(\"feature_1_interval\").median()\n    plot = px.scatter(corr_df,x=feature_1, y=feature_2,trendline=\"ols\",trendline_color_override=\"red\")\n    plot.update_traces(marker=dict(size=5,color='rgba(30, 215, 96, .9)',\n                                  line=dict(width=1)),\n                      selector=dict(mode='markers'))\n    plot.update_layout(title_text=title)\n\n    plot.show()","2cbafaa2":"#Popularity vs Acousticness\nplot_corr(\"acousticness\",\"popularity\",\"Popularity vs Acousticness\")","587f43d1":"#Popularity vs Energy\nplot_corr(\"energy\",\"popularity\",\"Popularity vs Energy\")","3c1501c7":"#Number of entries over the years\nfig = px.bar(main_df[\"id\"].groupby(pd.Grouper(freq=\"Y\")).count(),labels={\n                     \"release_date\": \"Release Year\",\n                     \"value\": \"Number of tracks\"})\nfig.update_layout(height=600, width=1200, title_text=\"Number of Tracks Over Years\")\n\nfig.show()","cf921b93":"#Average Duration over the years in seconds\nfig = px.bar(main_df[\"duration\"].groupby(pd.Grouper(freq=\"Y\")).mean(),labels={\n                     \"release_date\": \"Release Year\",\n                     \"value\": \"Track Duration (sec)\"})\nfig.update_layout(height=600, width=1200, title_text=\"Track Duration Over Years\")\n\nfig.show()","fb907192":"#Longest track\nmain_df[main_df['duration']==main_df['duration'].max()].iloc[0]","b8db4704":"#Shortest Track\nmain_df[main_df['duration']==main_df['duration'].min()].iloc[0]","84d0368d":"# Pause tracks\n\nmain_df[main_df['loudness']==-60]","8afd30b1":"key_mapping = {0:\"C\",1:\"C\u266f\",2:\"D\",3:\"D\u266f\",4:\"E\",5:\"F\",6:\"F\u266f\",7:\"G\",8:\"G\u266f\",9:\"A\",10:\"A\u266f\",11:\"B\"}\nkey_counts_df = pd.DataFrame(main_df[\"key\"].value_counts())\nkey_counts_df['key_names'] = key_counts_df.index.to_series().map(key_mapping)\n\nkey_labels = key_counts_df['key_names'].values\nkey_values = key_counts_df['key'].values\n\nmode_mapping = {0:\"Minor\",1:\"Major\"}\nmode_counts_df = pd.DataFrame(main_df[\"mode\"].value_counts())\nmode_counts_df['mode_names'] = mode_counts_df.index.to_series().map(mode_mapping)\n\nmode_labels = mode_counts_df['mode_names'].values\nmode_values = mode_counts_df['mode'].values\n\nfig = make_subplots(rows=1, cols=2,specs=[[{\"type\": \"pie\"}, {\"type\": \"pie\"}]])\n\nfig.add_trace(\n    pgo.Pie(labels=key_labels, values=key_values),row=1, col=1)\n\nfig.add_trace(\n    pgo.Pie(labels=mode_labels, values=mode_values),row=1, col=2)\n\nfig.update_traces(textposition='inside', textinfo='percent+label')\n\n\nfig.update_layout(height=600, width=1200, title_text=\"Keys and Modes\")\nfig.show()","319666f5":"genre_df = pd.read_csv(\"..\/input\/spotify-dataset-19212020-160k-tracks\/data_by_genres.csv\")\ngenre_df.info()","0ab455d5":"genre_df['duration'] = genre_df['duration_ms'].apply(lambda x:round(x\/1000))\ngenre_df.drop('duration_ms',axis=1,inplace=True)\ngenre_df.drop(['genres','key','mode'],axis=1).describe().transpose().sort_index()","ea1cd5e8":"genre_df.head()","863d73e2":"genre_df.tail()","54717647":"# Missing Data\ngenre_df[genre_df['genres']==\"[]\"]","c4c4bd13":"genre_df = genre_df[genre_df['genres']!=\"[]\"]","24a850cf":"#Number of genres\nprint(f\"Number of unique genres : {genre_df['genres'].nunique()}\")","53a30098":"#Most popular genres\nprint(\"Most popular genres\")\ngenre_df.sort_values(\"popularity\",ascending=False).head()","b957943b":"print(\"Least popular genres\")\ngenre_df.sort_values(\"popularity\",ascending=False).tail()","4c891692":"print(\"Shortest Durations\")\ngenre_df.sort_values(\"duration\",ascending=False).head(10)","12581a79":"print(\"Longest Durations\")\ngenre_df.sort_values(\"duration\",ascending=False).tail(10)","d992e064":"genre_df[genre_df[\"duration\"]>280].head()","fc238d5b":"key_mapping = {0:\"C\",1:\"C\u266f\",2:\"D\",3:\"D\u266f\",4:\"E\",5:\"F\",6:\"F\u266f\",7:\"G\",8:\"G\u266f\",9:\"A\",10:\"A\u266f\",11:\"B\"}\ngenre_key_counts_df = pd.DataFrame(genre_df[\"key\"].value_counts())\ngenre_key_counts_df['key_names'] = genre_key_counts_df.index.to_series().map(key_mapping)\n\nkey_labels = genre_key_counts_df['key_names'].values\nkey_values = genre_key_counts_df['key'].values\n\nmode_mapping = {0:\"Minor\",1:\"Major\"}\ngenre_mode_counts_df = pd.DataFrame(genre_df[\"mode\"].value_counts())\ngenre_mode_counts_df['mode_names'] = genre_mode_counts_df.index.to_series().map(mode_mapping)\n\nmode_labels = genre_mode_counts_df['mode_names'].values\nmode_values = genre_mode_counts_df['mode'].values\n\nfig = make_subplots(rows=1, cols=2,specs=[[{\"type\": \"pie\"}, {\"type\": \"pie\"}]])\n\nfig.add_trace(\n    pgo.Pie(labels=key_labels, values=key_values),row=1, col=1)\n\nfig.add_trace(\n    pgo.Pie(labels=mode_labels, values=mode_values),row=1, col=2)\n\nfig.update_traces(textposition='inside', textinfo='percent+label')\n\n\nfig.update_layout(height=600, width=1200, title_text=\"Keys and Modes in Genres\")\nfig.show()","165966e2":"print(\"Most Popular minor genres\")\ngenre_df.query(\"mode==0\").sort_values(\"popularity\",ascending=False).head(10)","f2a41615":"genre_names_text = \" \".join(genre_df['genres'].tolist()).split(\" \")\ncolumn_names = [\"word\",\"count\"]\nmost_common_words_in_genres_df = pd.DataFrame([dict(zip(column_names,word_count)) for word_count in Counter(genre_names_text).most_common(30)])","6b947ea5":"fig = px.bar(most_common_words_in_genres_df.sort_values(\"count\"),x=\"count\",y=\"word\",labels={\n                     \"word\": \"Word in Genres\",\n                     \"count\": \"Word Frequency\"},orientation='h')\nfig.update_layout(height=600, width=1100, title_text=\"Most Common Words in Genre Names\")\n\nfig.show()","7efdeca6":"plt.subplots(figsize = (21,10))\n\nwordcloud = WordCloud(background_color='black',\n                      width = 2800,\n                      height = 1024,\n                      prefer_horizontal=1,\n                      relative_scaling=1,\n                      colormap = 'Greens').generate(\" \".join(most_common_words_in_genres_df[\"word\"].tolist()))\n\nplt.imshow(wordcloud)\nplt.axis('off') \nplt.show()","6c24835d":"pop_df = genre_df[genre_df[\"genres\"].str.contains(\"pop\")].sort_values(\"popularity\").tail(10)\nindie_df = genre_df[genre_df[\"genres\"].str.contains(\"indie\")].sort_values(\"popularity\").tail(10)\nrock_df = genre_df[genre_df[\"genres\"].str.contains(\"rock\")].sort_values(\"popularity\").tail(10)\nmetal_df = genre_df[genre_df[\"genres\"].str.contains(\"metal\")].sort_values(\"popularity\").tail(10)\n\nfig = make_subplots(rows=2, cols=2,subplot_titles=('Pop', 'Indie', 'Rock','Metal'))\n\nfig.add_trace(pgo.Bar(x=pop_df['popularity'],y=pop_df['genres'], orientation='h', marker_color='pink'),\n              1, 1)\n\nfig.add_trace(pgo.Bar(x=indie_df['popularity'],y=indie_df['genres'], orientation='h', marker_color='green'),\n              1, 2)\n\nfig.add_trace(pgo.Bar(x=rock_df['popularity'],y=rock_df['genres'], orientation='h', marker_color='red'),\n              2, 1)\n              \nfig.add_trace(pgo.Bar(x=metal_df['popularity'],y=metal_df['genres'], orientation='h', marker_color='black'),\n              2, 2)\n\n\nfig.update_layout(height=600,width=1600,showlegend=False,bargap=0.3,title_text='Most Popular Subgenres',)\nfig.show()","5c5279fb":"scaler = MinMaxScaler()\nnumeric_genre_df = genre_df.drop([\"mode\",\"genres\",\"key\",\"popularity\"],axis=1)\nscaled_genre_df = pd.DataFrame(scaler.fit_transform(numeric_genre_df.values),columns=numeric_genre_df.columns)\nscaled_genre_df[\"genres\"] = genre_df[\"genres\"]\nscaled_genre_df.drop(\"genres\",axis=1).keys()","d7daea22":"pca = PCA()\npca.fit(scaled_genre_df.drop(\"genres\",axis=1))\nfig = pgo.Figure()\nfig.add_trace(pgo.Scatter(x=[i for i in range(1,11)], y=pca.explained_variance_ratio_.cumsum(),\n                    mode='lines+markers',\n                    name='lines+markers'))\n\nfig.update_layout(title=\"Explained Variance by Components\",\n                   xaxis_title='Number of Components',\n                   yaxis_title='Cumulative Explained Variance',\n                  yaxis_zeroline=False, xaxis_zeroline=False)\nfig.show()","e9fd42a9":"pca = PCA(n_components=4)\npca.fit(scaled_genre_df.drop(\"genres\",axis=1))\n\npca_comp_df = pd.DataFrame(data = pca.components_,\n                           columns =scaled_genre_df.drop(\"genres\",axis=1).columns.values,\n                           index = ['Component 1','Component 2','Component 3','Component 4'])\npca_comp_df","f6924ec3":"fig = px.imshow(pca_comp_df,title=\"Components' Relations with Features\",width=750,height=500,labels={'color':\"correlation\"})\nfig.show()","4263152f":"inertias = []\nfor k in range(1,40):\n    kmeans = KMeans(n_clusters=k,init='k-means++',random_state=42)\n    kmeans.fit(pca.transform(scaled_genre_df.drop([\"genres\"],axis=1)))\n    inertias.append(kmeans.inertia_)\n    \nfig = px.line(x=range(1,40), y=inertias)\nfig.update_layout(title='Elbow of the Genres',\n                   xaxis_title='Number of Clusters',\n                   yaxis_title='Inertia')\nfig.show()","6ad30296":"kmeans = KMeans(n_clusters=20,init='k-means++',random_state=42)\nkmeans.fit(pca.transform(scaled_genre_df.drop(\"genres\",axis=1)))\nscaled_genre_df[\"cluster\"] = kmeans.labels_","a8217d6e":"scaled_genre_df.head(10)","ff7e42fa":"scaled_genre_df.keys()","b829c442":"scaled_genre_df[scaled_genre_df[\"cluster\"] == 14]","c3a61fe9":"artists_df= pd.read_csv('..\/input\/spotify-dataset-19212020-160k-tracks\/data_w_genres.csv')\nartists_df.info()","de38bf43":"years = main_df.year.unique()\ntop_artists_each_year = [main_df.query('year==@year').sort_values(\"popularity\",ascending=False).iloc[0] for year in years]\ntop_artists_each_year_df = pd.DataFrame(top_artists_each_year)\ntop_artists_each_year_df['artists'] = top_artists_each_year_df['artists'].apply(lambda x:x.replace(\"[\",\"\").replace(\"]\",\"\").replace(\"'\",\"\"))\ntop_artists_each_year_df['genres'] = [artists_df[artists_df.artists.str.contains(artists.split(\",\")[0])][\"genres\"].iloc[0].replace(\"[\",\"\").replace(\"]\",\"\") for artists in top_artists_each_year_df[\"artists\"].values]","d0307982":"fig = px.scatter(top_artists_each_year_df, x=\"year\", y=\"popularity\",hover_data=['artists','name'])\nfig.update_traces(mode='markers', marker_line_width=2,marker=dict(size=10,color='rgba(30, 215, 96, .9)'))\nfig.update_layout(title=\"Most Popular Artists and Songs Each Year\")\nfig.show()","bd27af56":"fig = px.bar(artists_df.sort_values(\"count\",ascending=False).head(30),x=\"count\",y=\"artists\",labels={\n                     \"artists\": \"Artists\",\n                     \"count\": \"Number of Tracks\"},orientation='h',hover_data=['genres'])\nfig.update_layout(height=600, width=1100, title_text=\"Most Productive Artists\",yaxis={'categoryorder':'total ascending'})\n\nfig.show()","85f30b34":"decade_df = main_df.resample(rule='10A').mean()\ndecade_df.index = [f\"{date_index-1}'s\" for date_index in decade_df.index.year]\ndecade_df","57d44cb6":"trends_df = decade_df.drop([\"explicit\",\"key\",\"mode\",\"year\",\"tempo\",\"popularity\",\"duration\",\"loudness\"],axis=1)\nfig = px.line(trends_df, x=trends_df.index, y=trends_df.columns)\nfig.update_layout(title=\"Song Features' Trends over Decades (between 0-1) \",\n                   xaxis_title='Decade',\n                   yaxis_title='Feature Value ')\nfig.show()","b785bcbd":"main_w_genres_df = pd.read_csv('..\/input\/spotify-dataset-19212020-160k-tracks\/data.csv')\nmain_w_genres_df[\"artists\"] = main_w_genres_df.artists.apply(lambda x:x.replace(\"[\",\"\").replace(\"]\",\"\").replace(\"'\",\"\").split(\",\"))\nmain_w_genres_df = main_w_genres_df.explode('artists')\nmain_w_genres_df = pd.merge(main_w_genres_df,artists_df[[\"artists\",\"genres\"]],on='artists',how='inner')\nmain_w_genres_df.set_index('release_date',inplace=True)\nmain_w_genres_df.index = pd.to_datetime(main_w_genres_df.index)\ngenre_df = main_w_genres_df.drop([\"artists\"],axis=1).drop_duplicates()\ndecade_popularity = pd.DataFrame()\nmost_popular_genres = [\"pop\",\"indie\",\"rock\",\"metal\",\"rap\",\"jazz\"]\nfor genre in most_popular_genres:\n    genre_decade_df = genre_df[genre_df.genres.str.contains(genre)].resample(rule='10A').mean()\n    genre_decade_df.index = [f\"{floor(date_index\/10)*10}'s\" for date_index in genre_decade_df.index.year]\n    decade_popularity[genre] = genre_decade_df[\"popularity\"]\ndecade_popularity.fillna(0,inplace=True)","d0d6c368":"fig = px.line(decade_popularity, x=decade_popularity.index, y=decade_popularity.columns)\nfig.update_layout(title=\"Genre Popularity over Decades\",\n                   xaxis_title='Decade',\n                   yaxis_title='Popularity')\nfig.show()","21639add":"psy_rock_df = main_w_genres_df[main_w_genres_df[\"genres\"].str.contains(\"psychedelic rock\")].drop_duplicates().sort_values(\"popularity\")\npsy_rock_df['duration'] = psy_rock_df['duration_ms'].apply(lambda x:round(x\/1000))\npsy_rock_df.drop('duration_ms',axis=1,inplace=True)\npsy_rock_df.info()","78070d02":"psy_rock_df.drop(['key','mode','year','explicit'],axis=1).describe().transpose().sort_index()","768163d8":"psy_years = psy_rock_df.year.unique()\npsy_top_artists_each_year = [psy_rock_df.query('year==@year').sort_values(\"popularity\",ascending=False).iloc[0] for year in psy_years]\npsy_top_artists_each_year_df = pd.DataFrame(psy_top_artists_each_year)\nfig = px.scatter(psy_top_artists_each_year_df, x=\"year\", y=\"popularity\",\n                 hover_data=['artists','name','genres'])\nfig.update_traces(mode='markers', marker_line_width=2,marker=dict(size=10,color='rgba(30, 215, 96, .9)'))\nfig.update_layout(title=\"Most Popular Artists and Songs Each Year\")\nfig.show()","58c7e900":"fig = px.bar(artists_df[artists_df[\"genres\"].str.contains(\"psychedelic rock\")].sort_values(\"popularity\").sort_values(\"count\",ascending=False).head(30),x=\"count\",y=\"artists\",labels={\n                     \"artists\": \"Artists\",\n                     \"count\": \"Number of Tracks\"},orientation='h',hover_data=['genres'])\nfig.update_layout(height=600, width=1100, title_text=\"Most Productive Artists\",yaxis={'categoryorder':'total ascending'})\n\nfig.show()","e664ecf2":"beach_df = psy_rock_df[psy_rock_df[\"artists\"]==\"The Beach Boys\"].sort_values(\"popularity\",ascending=False).head(10)\nbeatle_df = psy_rock_df[psy_rock_df[\"artists\"]==\"The Beatles\"].sort_values(\"popularity\",ascending=False).head(10)\nwho_df =  psy_rock_df[psy_rock_df[\"artists\"]==\"The Who\"].sort_values(\"popularity\",ascending=False).head(10)\npink_df = psy_rock_df[psy_rock_df[\"artists\"]==\"Pink Floyd\"].sort_values(\"popularity\",ascending=False).head(10)\ndoors_df = psy_rock_df[psy_rock_df[\"artists\"]==\"The Doors\"].sort_values(\"popularity\",ascending=False).head(10)\nhendrix_df = psy_rock_df[psy_rock_df[\"artists\"]==\"Jimi Hendrix\"].sort_values(\"popularity\",ascending=False).head(10)\nzappa_df = psy_rock_df[psy_rock_df[\"artists\"]==\"Frank Zappa\"].sort_values(\"popularity\",ascending=False).head(10)\njanis_df = psy_rock_df[psy_rock_df[\"artists\"]==\"Janis Joplin\"].sort_values(\"popularity\",ascending=False).head(10)","9d2a942a":"fig = px.bar(beach_df,x=\"popularity\",y=\"name\",labels={\n                     \"popularity\": \"Popularity\",\n                     \"name\": \"Song Name\"},orientation='h',hover_data=['genres'])\nfig.update_layout(height=600, width=1100, title_text=\"The Beach Boys\",yaxis={'categoryorder':'total ascending'})\n\nfig.show()","0e701a12":"beach_df.drop([\"explicit\",\"key\",\"mode\",\"year\"],axis=1).describe().transpose().sort_index()","40f59ec3":"fig = px.bar(beatle_df,x=\"popularity\",y=\"name\",labels={\n                     \"popularity\": \"Popularity\",\n                     \"name\": \"Song Name\"},orientation='h',hover_data=['genres'])\nfig.update_layout(height=600, width=1100, title_text=\"The Beatles\",yaxis={'categoryorder':'total ascending'})\n\nfig.show()","fb437148":"beatle_df.drop([\"explicit\",\"key\",\"mode\",\"year\"],axis=1).describe().transpose().sort_index()","b9cbc760":"fig = px.bar(who_df,x=\"popularity\",y=\"name\",labels={\n                     \"popularity\": \"Popularity\",\n                     \"name\": \"Song Name\"},orientation='h',hover_data=['genres'])\nfig.update_layout(height=600, width=1100, title_text=\"The Who\",yaxis={'categoryorder':'total ascending'})\n\nfig.show()","cae0af3b":"who_df.drop([\"explicit\",\"key\",\"mode\",\"year\"],axis=1).describe().transpose().sort_index()","b8b4e88a":"fig = px.bar(pink_df,x=\"popularity\",y=\"name\",labels={\n                     \"popularity\": \"Popularity\",\n                     \"name\": \"Song Name\"},orientation='h',hover_data=['genres'])\nfig.update_layout(height=600, width=1100, title_text=\"Pink Floyd\",yaxis={'categoryorder':'total ascending'})\n\nfig.show()","725869e3":"pink_df.drop([\"explicit\",\"key\",\"mode\",\"year\"],axis=1).describe().transpose().sort_index()","24aeb3ca":"fig = px.bar(doors_df,x=\"popularity\",y=\"name\",labels={\n                     \"popularity\": \"Popularity\",\n                     \"name\": \"Song Name\"},orientation='h',hover_data=['genres'])\nfig.update_layout(height=600, width=1100, title_text=\"The Doors\",yaxis={'categoryorder':'total ascending'})\n\nfig.show()","d303fd30":"doors_df.drop([\"explicit\",\"key\",\"mode\",\"year\"],axis=1).describe().transpose().sort_index()","5250d986":"fig = px.bar(hendrix_df,x=\"popularity\",y=\"name\",labels={\n                     \"popularity\": \"Popularity\",\n                     \"name\": \"Song Name\"},orientation='h',hover_data=['genres'])\nfig.update_layout(height=600, width=1100, title_text=\"Jimi Hendrix\",yaxis={'categoryorder':'total ascending'})\n\nfig.show()","37c0de0a":"hendrix_df.drop([\"explicit\",\"key\",\"mode\",\"year\"],axis=1).describe().transpose().sort_index()","313a875d":"fig = px.bar(janis_df,x=\"popularity\",y=\"name\",labels={\n                     \"popularity\": \"Popularity\",\n                     \"name\": \"Song Name\"},orientation='h',hover_data=['genres'])\nfig.update_layout(height=600, width=1100, title_text=\"Janis Joplin\",yaxis={'categoryorder':'total ascending'})\n\nfig.show()","2f1213c3":"janis_df.drop([\"explicit\",\"key\",\"mode\",\"year\"],axis=1).describe().transpose().sort_index()","04b896bb":"fig = px.bar(zappa_df,x=\"popularity\",y=\"name\",labels={\n                     \"popularity\": \"Popularity\",\n                     \"name\": \"Song Name\"},orientation='h',hover_data=['genres'])\nfig.update_layout(height=600, width=1100, title_text=\"Frank Zappa\",yaxis={'categoryorder':'total ascending'})\n\nfig.show()","dcec4f10":"zappa_df.drop([\"explicit\",\"key\",\"mode\",\"year\"],axis=1).describe().transpose().sort_index()","fb7479ed":"<a id=\"7\"><\/a>\n## Psychedelic Rock\nLet's see the names in my favorite genre!","f4ad8cd0":"On average, the duration of the tracks are around 3 to 4 minutes. Let's see the most extreme outliers. Here is the longest track","ef99f7d4":"<center><img src=\"https:\/\/1000logos.net\/wp-content\/uploads\/2017\/08\/Spotify-Logo.png\" alt=\"Italian Trulli\" width=\"170\" height=\"220\"><\/center><center><h1> Spotify Descriptive and Exploratory Data Analysis<\/h1><\/center>\n\n","8b0c103a":"<a id=\"7.5\"><\/a>\n<center><h2>The Who<\/h2><\/center>\n<center><img src=\"https:\/\/www.rollingstone.com\/wp-content\/uploads\/2018\/06\/rs-230674-the-who.jpg\" alt=\"The Who\" width=\"600\" height=\"600\"><\/center>","578836f0":"The name of the track is \"Pause Track\" and  it has -60 loudness and no tempo? Yes! Turns out there is such thing called a \"Pause Track\", which is a silent track in between songs that is recorded to vinly records in order the seperate a song from another song or seperate a group of songs from another group. Here are a few more Pause Tracks on this dataset.","80281555":"<a id=\"6.1\"><\/a>\n### Song Features' Trends over Decades","eab97212":"Apperantly, with only four components, we can cover %90 of the space. Let's try to see the relation of these components with dataset features. Here are the correlations and a heat map to visualize.","4eadf78b":"<a id=\"4\"><\/a>\n\n## Genre Based Analysis\n In this part, I will try to analyze the genre dataset and try to understand characterisctics of these genres. Let's take a look at the data first.\n ","e2a150eb":"It seems that component 1 covers mainly energy, while component 2 covers heavily instrumentalness and valence. It seems that component 3 and 4 have similar nature, while 4 covers more with valence and liveness. Let's try to classify the genres using these 4 components. First, I will try to find the appropriate cluster number by using the dear old elbow method.","ad84e0a7":"The most recent entry is the piece called \"Improvisations\" by Roger Fly. That's what I call a cool ending!","646b52f3":"We have 3232 genres and sub-genres in this dataset. Again for a better readabilty, I will convert the duration_ms metric to duration in seconds. ","411fa61d":"While there are low energy songs that are not highly popular, high energy songs are almost always welcomed by listeners. However, these indications are insufficient for a definite conclusion. ","0262efc7":"<a id=\"2\"><\/a>\n## Basis for Exploratory Data Analysis\n In this section, we'll briefly take a look at the features of the dataset, highlighting a few of them in order to have a better understanding for the rest of the analysis. It contains various features of a song both in technical perspective such as tempo, key, loudness, and also historical records such as release date, popularity. Dataset owner Yaman already has clear definitions for these features, and further details can be always found on [Spotify API documentation](https:\/\/developer.spotify.com\/documentation\/web-api\/reference\/tracks\/get-audio-features\/). In order to access them a bit more practically, I will present these definitions and their scales here.\n\n<a id=\"2.1\"><\/a>\n### <u>Feature Definitions<\/u>\n\n**1.\t<u>artists<\/u>:** The list of artists of the song.\n\n**2.\t<u>danceability<\/u>:** Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.\n\n**3.\t<u>duration_ms<\/u>:** The duration of the track in milliseconds.\n\n**4.\t<u>energy<\/u>:** Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy. (Float)\n\n**5.\t<u>explicit<\/u>:** The content item is explicit and the user\u2019s account is set to not play explicit content.\nAdditional reasons may be added in the future. Note: If you use this field, make sure that your application safely handles unknown values.\n\n**7.\t<u>instrumentalness<\/u>:** Predicts whether a track contains no vocals. \u201cOoh\u201d and \u201caah\u201d sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly \u201cvocal\u201d. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.\n\n**8.\t<u>key<\/u>:** The key the track is in. Integers map to pitches using standard Pitch Class notation . E.g. 0 = C, 1 = C\u266f\/D\u266d, 2 = D, and so on.\n\n**9.\t<u>liveness<\/u>:** Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.\n\n**10. <u>loudness<\/u>:** The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typical range between -60 and 0 db.\n\n**11. <u>mode<\/u>:** Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.\n\n**12. <u>name<\/u>:** Name of the song.\n\n**13. <u>popularity<\/u>:** The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.\nThe popularity of a track is a value between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.\nGenerally speaking, songs that are being played a lot now will have a higher popularity than songs that were played a lot in the past. Duplicate tracks (e.g. the same track from a single and an album) are rated independently. Artist and album popularity is derived mathematically from track popularity. Note that the popularity value may lag actual popularity by a few days: the value is not updated in real time.\n\n**14. <u>release_date<\/u>:** The date the album was first released, for example \u201c1981-12-15\u201d. Depending on the precision, it might be shown as \u201c1981\u201d or \u201c1981-12\u201d.\n\n**15. <u>speechiness<\/u>:** Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.\n\n**16. <u>tempo<\/u>:** The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.\n\n**17. <u>valence<\/u>:** A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).\n\n**18. <u>year<\/u>:** Year information extracted from release_date.\n\n**19. <u>genres<\/u>:** A list of the genres used to classify the album. For example: \u201cProg Rock\u201d , \u201cPost-Grunge\u201d. (If not yet classified, the array is empty.)\n","ddd17382":"<a id=\"4.5\"><\/a>\n### Dimension Reduction and Genre Clustering\n\nIn this part, I will investigate which these audio features distinguish genres and try to cluster them. By doing so, we can question if genres with similar audio features are indeed related to each other. First, let's see how many components we need to cover the majority of this vector space. ","c9516274":"<a id=\"4.1\"><\/a>\n### Genre Popularity\nLet's see the most popular genres and least popular genres","d78b54ca":"<a id=\"4.3\"><\/a>\n### Keys and Modes\nNow let's see the keys and modes in this genre dataset","713187d0":"<a id=\"4.2\"><\/a>\n### Genre Durations\nThe genres with longest durations and shortest durations on average.","889ee2a2":"We can see that in terms of acousticness, 0.05 is the sweet spot for popularity. It might be a slight indication that users are looking for more uplifting songs on Spotify, since increase in acousticness follows decrease in popularity. How about energy?","2785e002":"[The End of the Year: 2015, Pt. 1 - Continuous DJ Mix](https:\/\/open.spotify.com\/track\/3fQCeki8H8Up3KMIkXU6GD) is 89 minutes long! If you're having party and you don't have time for a playlist, B-Max is there for you. Let's see the the track with shortest duration.","498e8ff4":"<a id=\"7.10\"><\/a>\n<center><h2>Janis Joplin<\/h2><\/center>\n<center><img src=\"https:\/\/www.musicconnection.com\/wp-content\/uploads\/2020\/09\/Janis-Book-Cover.jpg\" alt=\"Janis Joplin\" width=\"600\" height=\"600\"><\/center>","4afae2f2":"<a id=\"6.2\"><\/a>\n### Genres' popularity changes over the decades\n\nLet's see how genres effected by these changes in sound.","10e0d271":"Surprisingly the cluster number is fairly low. Let's choose our k as 20. ","dc251117":"<a id=\"4.4\"><\/a>\n### Genre Names and Sub-genres\nLet's try o identify the genres by their names. I will simply try to look for the word frequency in genres and see which main genre appears the most.","d648e6c7":"<a id=\"5.2\"><\/a>\n### Most Productive Artists\nHere are the most hardworking artists. Just look at Uruguayan violinist Francisco Canaro! Breathing in emotions, breathing out music.","266c8b7f":"The oldest entry is the song called \"Keep A Song In Your Soul\" by Mamie Smith. Such a lovely beginning. [Keep a song in your soul](https:\/\/open.spotify.com\/track\/0cS0A1fUEUd1EW3FcF8AEI) friends!","ac5dc506":"# Table of Contents\n\n1. [Introduction](#1)\n2. [Basis for Exploratory Data Analysis](#2)\n    - [Feature Definitions](#2.1)\n3. [Feature Analysis](#3)\n    - [Correlations](#3.1)\n    - [Number of Tracks and Average Track Durations Over Years](#3.2)\n    - [Keys and Mode](#3.3)\n4. [Genre Based Analysis](#4)\n    - [Genre Populartity](#4.1)\n    - [Genre Durations](#4.2)\n    - [Keys and Modes](#4.3)\n    - [Genre Names and Sub-genres](#4.4)\n    - [Dimension Reduction and Genre Classification](#4.5)\n5. [Artist Based Analysis](#5)\n    - [Most Popular Artists](#5.1)\n    - [Most Productive Artists](#5.2)\n6. [Decade Based Analysis](#6)\n    - [Song Features' Trends over Decades](#6.1)\n    - [Genres' popularity changes over the decades](#6.2)\n7. [Psychedelic Rock](#7)\n    - [Most Popular Psychedelic Artists and Songs Each Year](#7.1)\n    - [Most Productive Psychedelic Artists and Songs Each Year](#7.2)\n    - [The Beach Boys](#7.3)\n    - [The Beatles](#7.4)\n    - [The Who](#7.5)\n    - [Pink Floyd](#7.6)\n    - [The Doors](#7.7)\n    - [Jimi Hendrix](#7.8)\n    - [Frank Zappa](#7.9)\n    - [Janis Joplin](#7.10)\n8. [Conclusion](#8)\n ","c8acea72":"<a id=\"7.6\"><\/a>\n<center><h2>Pink Floyd<\/h2><\/center>\n<center><img src=\"https:\/\/www.rollingstone.com\/wp-content\/uploads\/2018\/06\/pink-floyd-syd-interview-ad5dbc74-49f4-4f2d-8e13-0f56c285fcc4.jpg?resize=1800,1200&w=1800\" alt=\"Pink Floyd\" width=\"600\" height=\"600\"><\/center>","bd11292e":"Let's take a look at cluster 14 as an example and see if these genres are indeed really close to each other.","b53e8a6e":"<a id=\"6\"><\/a>\n## Decade Based Analysis\nNow, let's see how these audio features changed over the years and we'll also take a look at genre popularity changes over the decades.","080d3ccc":"We can see that most of them are in between 0 and 1, except *duration_ms*, *loudness*, *popularity* and *tempo*. The nature of these metrics are clearly defined on feature definitions section. Let us take a sneak peak to the dataset.","c75e7a2d":"<a id=\"3.3\"><\/a>\n\n### Keys and Mode\n\nLet's see the most used keys and the most popular mode of the dataset.","7752a949":"<a id=\"1\"><\/a>\n## Introduction\n[Spotify](https:\/\/www.spotify.com\/) is an audio streaming application that needs no introduction. Over the span of 14 years, it has reached 286 million **active users** and 130 million **premium subscriptions**. An average user listens to Spotify for 25 hours in a month, 44% of the users dance with their souls through this app on a **daily basis**. These statistics clearly suggest that for a significant part of the world, Spotify is the go to address for the music.\n\nIn this notebook, I will try to , list the most popular artists, investigate the kinds of music we are listening to the most and genre behaviours over the years while questioning the genre definitions. For this analysis, I will use [Spotify Dataset 1921-2020](https:\/\/www.kaggle.com\/yamaerenay\/spotify-dataset-19212020-160k-tracks) that contains over 160 thousand tracks, gathered by fellow Kaggler [Yamac Eren AY](https:\/\/www.kaggle.com\/yamaerenay), using [Spotify Public API](https:\/\/developer.spotify.com\/documentation\/web-api\/). If you're curious about popular songs and artists, general reasons behind Spotify usages, learn what a stop track is (I didn't know it before), and genre definitions, this might be an enjoyable notebook for you.\n\n\n","1d5eaa2c":"Notice that genres like \"abstract\", \"432hz\" indicate that Spotify not only consists songs but also background sounds which fairly popular too. Spotify can really put you into the mood you wish to be in.","604f3666":"These results clearly indicates the audio features of a song does not put it to a spesific genre. Although arab electronic and vintage swing tracks have similar technical features, these two genres do not considered as close to each other by authorites. My conclsuion from this analysis is that, genre definitions are a lot more cultural and philosophical than technical.","084d1c19":"We have a major dominance on the mode and C-G-D-A are the most popular keys here. ","c2e94891":"In with the rap, out with the jazz!","3e18a6f9":"Let's see how these numeric metrics distributed.","af488036":"We have one unnamed genre which I will remove from the dataset.","49116f6a":"<a id=\"3\"><\/a>\n## Feature Analysis\n\nIn this section, we'll look at the correlations between the features and try to understand which of them might have an effect on the popularity. Addition to that, we'll see the number of tracks released on each year, average duration changes over the years, and most popular keys among these songs.\n\n<a id=\"3.1\"><\/a>\n### Correlations\nLet's see the correlations between continous metrics","de0008c6":"We have less entries for the years prior then 1950. This could be strictly related with the production numbers in those years.","7e12e711":"<a id=\"7.1\"><\/a>\n### Most Popular Psychedelic Artists and Songs Each Year","fb4a5064":"To make it more readable, I will change the *duration_ms* to *duration* while changing it from milliseconds to seconds.","83d3a217":"Let's set the index of the dataset as release_date, since we'll analyze the trends and changes through time.","30a459d9":"<a id=\"3.2\"><\/a>\n\n### Number of Tracks and Average Track Durations Over Years\n","a3b4e47a":"<a id=\"5\"><\/a>\n## Artist Based Analysis\nHere we will see the most popular artists for each year and their hit songs. We'll also check which artists are the most hardworking ones over the years by using artists dataset.","324c6f70":"*pop*, *indie*, *rock* and *metal* are the most frequent ones. Let's look at the sub-genres of these genres and see their popularity.","7a0ff37f":"<a id=\"7.4\"><\/a>\n<center><h2>The Beatles<\/h2><\/center>\n<center><img src=\"https:\/\/www.rollingstone.com\/wp-content\/uploads\/2018\/06\/rs-7349-20121003-beatles-1962-624x420-1349291947.jpg?resize=1800,1200&w=1800\" alt=\"The Beatles\" width=\"600\" height=\"600\"><\/center>","74b1ed32":"There are obvious correlations between some of the features by definition such as, acousticness and loudness, acousticness and energy and so on, which are not unexpected. What's interesting is the correlation between energy(or in acousticness) and popularity. Let's see them in more detail. ","9b74ab39":"<a id=\"7.7\"><\/a>\n\n<center><h2>The Doors<\/h2><\/center>\n<center><img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/6\/60\/Doors_electra_publicity_photo.JPG\" alt=\"The Doors\" width=\"600\" height=\"600\"><\/center>","d70a7396":"Here are the most popular genres in minor","23704fb0":"<a id=\"8\"><\/a>\n## Conclusion\nSpotify is becoming a music authority every single day as a medium where \"success metrics\" of the music industry, if you believe in them, can be clearly observed. Moreover, it also presents hidden or forgotten gems to users like myself who like to discover beautiful pieces and more silent stories. One thing we can say for certain is that Spotify is responsible for the majority of people's mood each day. It is the most popular medium to choose when we users need a break from the outside world, or when we want to party and socialize with others. The best friend of humankind found its way in Spotify to keep shaping our lives. In this study, we've seen many popular artists and songs. Learned that back in the 50s and 60s, even tracks on the vinyl records took a break, unlike most of us in these fast-paced days. Genres are not only defined by their audio similarities and structures but mostly by their cultural effects and artists' philosophical views. \n\nThank you for your time dear Kaggler and big thanks to [Yamac Eren AY](https:\/\/www.kaggle.com\/yamaerenay) for this beautiful dataset. Keep kaggling with music and with curiosity.","2d706057":"<a id=\"7.2\"><\/a>\n### Most Productive Psychedelic Artists and Songs Each Year","ec13591f":"<a id=\"5.1\"><\/a>\n### Most Popular Artists\nHere are the most popular artists and songs. Which one is your favourite?","8d47a2a9":"Apparently, the sounds were much more acoustic back then and now they are much more energetic.","fc3586ac":"<a id=\"7.8\"><\/a>\n<center><h2>Jimi Hendrix<\/h2><\/center>\n<center><img src=\"https:\/\/ychef.files.bbci.co.uk\/976x549\/p0278f0f.jpg\" alt=\"Jimi Hendrix\" width=\"600\" height=\"600\"><\/center>","07de44af":"<a id=\"7.9\"><\/a>\n<center><h2>Frank Zappa<\/h2><\/center>\n<center><img src=\"https:\/\/i.imgur.com\/QaLceJZ.jpg\" alt=\"Frank Zappa\" width=\"600\" height=\"600\"><\/center>","3171fdea":"<a id=\"7.3\"><\/a>\n<center><h2>The Beach Boys<\/h2><\/center>\n<center><img src=\"https:\/\/www.rollingstone.com\/wp-content\/uploads\/2020\/05\/BeachBoys.jpg?resize=1800,1200&w=1800\" alt=\"The Beach Boys\" width=\"600\" height=\"600\"><\/center>\n\n"}}