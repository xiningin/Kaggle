{"cell_type":{"8528dc9a":"code","bc0f6795":"code","3f918d65":"code","9430c99a":"code","ea8fb991":"code","7589fd5c":"code","bb28635b":"code","5acebdea":"code","88a00b16":"code","bd2ac15f":"code","b9e66fd3":"code","5cfb7a9c":"code","97a93a71":"code","f06c7bc0":"code","04a3f6af":"code","83de57fe":"code","e5a88a89":"markdown","0ebc9eab":"markdown","84504eeb":"markdown"},"source":{"8528dc9a":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport matplotlib.animation as animation\nfrom IPython.display import HTML","bc0f6795":"import os\nprint(os.listdir(\"..\/input\"))","3f918d65":"matches = pd.read_csv(\"..\/input\/ipldata\/matches.csv\")\nmatches.head()","9430c99a":"usecols=['date', 'winner']\nwinners = matches[usecols]\nwinners.head()","ea8fb991":"winners['date'] =pd.to_datetime(winners['date'])\nwinners = winners.sort_values(by='date')\nwinners.head()","7589fd5c":"winners = winners.reset_index(drop=True)\nwinners.head()","bb28635b":"# Get the cumulative counts.\ncounts = pd.get_dummies(winners['winner']).cumsum()\n\n# Rename the count columns as appropriate.\n#counts = counts.rename(columns=lambda col: col+'_count')\n\n# Join the counts to the original df.\nwinners = winners.join(counts)\n\nwinners.head(15)","5acebdea":"del winners['winner']\nwinners.head()","88a00b16":"winners[\"id\"] = winners.index\ndf = pd.melt(winners, id_vars=['id','date'], var_name='name', value_name='value')\ndf.head(20)","bd2ac15f":"df = df.sort_values(by='date')\ndf.head(20)","b9e66fd3":"df.date = df.date.astype(str)\ndf.head()","5cfb7a9c":"df.tail()","97a93a71":"dates = df.date.unique().tolist()\ndates[0:5]","f06c7bc0":"dates[-5:-1]","04a3f6af":"fig, ax = plt.subplots(figsize=(15, 8))\n\ndef draw_barchart(current_date):\n    dff = df[df['date'].eq(current_date)].sort_values(by='value', ascending=True).tail(5)\n    ax.clear()\n    ax.barh(dff['name'], dff['value'])\n    dx = dff['value'].max() \/ 200\n    for i, (value, name) in enumerate(zip(dff['value'], dff['name'])):\n        ax.text(value-dx, i,     name,           size=14, weight=600, ha='right', va='bottom')\n        ax.text(value+dx, i,     f'{value:,.0f}',  size=14, ha='left',  va='center')\n    ax.text(1, 0.4, current_date, transform=ax.transAxes, color='#777777', size=46, ha='right', weight=800)\n    ax.xaxis.set_major_formatter(ticker.StrMethodFormatter('{x:,.0f}'))\n    ax.xaxis.set_ticks_position('top')\n    ax.tick_params(axis='x', colors='#777777', labelsize=12)\n    ax.set_yticks([])\n    ax.margins(0, 0.01)\n    ax.grid(which='major', axis='x', linestyle='-')\n    ax.set_axisbelow(True)\n    ax.text(0, 1.15, 'The most successful teams in IPL from 2008 to 2019',\n            transform=ax.transAxes, size=24, weight=600, ha='left', va='top')\n    plt.box(False)\n    \ndraw_barchart('2008-04-18')","83de57fe":"fig, ax = plt.subplots(figsize=(15, 8))\nanimator = animation.FuncAnimation(fig, draw_barchart, frames = dates )\nHTML(animator.to_jshtml())\n# or use animator.to_html5_video() or animator.save() ","e5a88a89":"Run below cell `draw_barchart(2018)` draws barchart for `year=2018`","0ebc9eab":"### Reading & Transforming Data","84504eeb":"# Bar Chart Race in Python with Matplotlib\n\nInspiration & Source : https:\/\/colab.research.google.com\/github\/pratapvardhan\/notebooks\/blob\/master\/barchart-race-matplotlib.ipynb#scrollTo=sLZ1E6X7xLQg\n\n![gif](https:\/\/pratapvardhan.com\/img\/b\/bar-chart-race-2.gif)"}}