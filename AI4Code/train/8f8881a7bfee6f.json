{"cell_type":{"1c3be7c5":"code","7b9d00b8":"code","9c9fd016":"code","aa6f3c21":"code","9107f75c":"code","6ab00c20":"code","20135776":"code","6e7ced9f":"code","8d5547e8":"code","67b4f8f3":"code","356a4be4":"code","94dfbdbb":"code","a5f9b64b":"code","3c81f250":"code","7dde5008":"code","044973e5":"code","927826d3":"code","19a70e89":"code","3356e4c0":"code","37cdb233":"code","2ab7da8a":"code","a5cc5889":"code","fa1c96ae":"code","0c937e3c":"code","a58d7007":"code","cecbcdcc":"code","c5996b60":"code","a1a1cc94":"code","c869b145":"code","dbb53934":"code","72fa3a0b":"code","d1c38bad":"code","0d9d5ab9":"code","d1ba63ff":"code","af6b0d76":"code","b8e7c383":"code","1e5a3368":"code","6596923b":"code","a331be66":"code","03920a19":"markdown","4b00461a":"markdown","7b85621d":"markdown","bf0b0d65":"markdown","ff8f8e67":"markdown","5582c7c7":"markdown","ec373482":"markdown","9502548a":"markdown","c4c4e7ed":"markdown","00cd2ee1":"markdown","225b3111":"markdown","84edc40a":"markdown","ab3a2a38":"markdown","a6bc6fe8":"markdown","9c433ceb":"markdown","6281798c":"markdown","efae1b2d":"markdown","cc2b54cf":"markdown","1372e926":"markdown","8104abb7":"markdown","52f29c7e":"markdown","d3e9a265":"markdown","b3fb3898":"markdown","845e20d0":"markdown","55636123":"markdown"},"source":{"1c3be7c5":"import datetime as dt\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings # Uyar\u0131lar\nwarnings.filterwarnings(\"ignore\")\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","7b9d00b8":"online_retail = pd.read_csv(\"..\/input\/online-retail-ii-uci-two-peroid\/online_retail_II_2010_2011.csv\", sep=\";\")\ndf = online_retail.copy()\ndf.head()","9c9fd016":"def check_df(dataframe):\n    print(\"################ Shape ####################\")\n    print(dataframe.shape)\n    print(\"############### Columns ###################\")\n    print(dataframe.columns)\n    print(\"############### Types #####################\")\n    print(dataframe.dtypes)\n    print(\"############### Head ######################\")\n    print(dataframe.head())\n    print(\"############### Tail ######################\")\n    print(dataframe.tail())\n    print(\"############### Describe ###################\")\n    print(dataframe.describe().T)\n\ncheck_df(df)","aa6f3c21":"df.isnull().sum()","9107f75c":"df.dropna(inplace=True)\ndf.isnull().sum()","6ab00c20":"# Analizimizde sat\u0131n almalarla ilgileniyoruz.Bu nedenle iade i\u015flemleri veriden \u00e7\u0131kard\u0131k.\n\ndf = df[~df[\"Invoice\"].str.contains(\"C\", na=False)]\ndf.shape","20135776":"# Ayk\u0131r\u0131 G\u00f6zlemler\n\ndef outlier_thresholds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.01)\n    quartile3 = dataframe[variable].quantile(0.99)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit\n\ndef replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit\n\nreplace_with_thresholds(df, \"Quantity\")\nreplace_with_thresholds(df, \"Price\")","6e7ced9f":"cat_cols = [col for col in df.columns if df[col].dtypes ==\"O\"]\ncat_but_car = [col for col in df.columns if df[col].nunique() > 100 and df[col].dtypes == \"O\"]\ncat_cols = [col for col in cat_cols if col not in cat_but_car]\ncat_cols\n","8d5547e8":"def cat_summary(dataframe, col_name, plot=False):\n    print(pd.DataFrame({col_name: dataframe[col_name].value_counts(),\n                        \"Ratio\": 100 * dataframe[col_name].value_counts() \/ len(dataframe)}))\n    print(\"##########################################\")\n    if plot:\n        fig_dims = (15, 5)\n        fig, ax = plt.subplots(figsize=fig_dims)\n        sns.countplot(x=dataframe[col_name], data=dataframe)\n        plt.xticks(rotation = 45, ha = 'right')\n        plt.show()\n\ncat_summary(df, \"Country\", plot=True)","67b4f8f3":"num_cols = [col for col in df.columns if df[col].dtypes != 'O' and col not in \"Customer ID\"]\nnum_cols","356a4be4":"def num_summary(dataframe, numerical_col, plot=False):\n    quantiles = [0.05, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 0.95, 0.99]\n    print(dataframe[numerical_col].describe(quantiles).T)\n\n    if plot:\n        dataframe[numerical_col].hist(bins=20)\n        plt.xlabel(numerical_col)\n        plt.title(numerical_col)\n        plt.show()\n\nfor col in num_cols:\n    num_summary(df, col, plot=True)","94dfbdbb":"# e\u015fsiz \u00fcr\u00fcn say\u0131s\u0131\ndf[\"StockCode\"].nunique()","a5f9b64b":"# hangi \u00fcr\u00fcnden ka\u00e7ar adet al\u0131nm\u0131\u015f ?\ndf_product = df.groupby(\"StockCode\").agg({\"Quantity\":\"count\"})\ndf_product.reset_index(inplace=True)\ndf_product","3c81f250":"# en \u00e7ok al\u0131nan 10 \u00fcr\u00fcn\ntop_pr= df_product.sort_values(by=\"Quantity\",ascending=False).head(10)\n\nsns.barplot(x=\"StockCode\", y=\"Quantity\",data=top_pr)\nplt.show()","7dde5008":"# fatura bas\u0131na d\u00fcsen toplam fiyat\u0131 veri setin ekleme\ndf[\"TotalPrice\"] = df[\"Price\"] * df[\"Quantity\"]","044973e5":"# recency hesab\u0131 i\u00e7in analiz tarihinin belirlenmesi\ndf[\"InvoiceDate\"] = pd.to_datetime(df[\"InvoiceDate\"])\ndf[\"InvoiceDate\"].max()\ntoday_date = dt.datetime(2011, 12, 11)","927826d3":"# rfm metriklerini olu\u015fturma\nrfm = df.groupby(\"Customer ID\").agg({\"InvoiceDate\": lambda Inv\u0131iceDate: (today_date- Inv\u0131iceDate.max()).days,\n                                    \"Invoice\": lambda Invoice: Invoice.nunique(),\n                                    \"TotalPrice\": lambda TotalPrice: TotalPrice.sum()})\n\nrfm.columns = [\"recency\",\"frequency\",\"monetary\"]\nrfm.describe().T","19a70e89":"# monetary yani \u00f6denen toplam paran\u0131n min de\u011feri 0 i\u015flem yap\u0131lm\u0131\u015f para giri\u015fi olmam\u0131\u015f\n# bunlar\u0131 veriden \u00e7\u0131kar\u00f6al\u0131y\u0131m\n\nrfm = rfm[rfm[\"monetary\"] > 0]\nrfm.describe().T","3356e4c0":"# recency_score\nrfm[\"recency_score\"] = pd.qcut(rfm['recency'], 5, labels=[5, 4, 3, 2, 1])\n# frequency_score\nrfm[\"frequency_score\"] = pd.qcut(rfm[\"frequency\"].rank(method=\"first\"), 5, labels=[1, 2, 3, 4, 5])\n# monetary_score\nrfm[\"monetary_score\"] = pd.qcut(rfm[\"monetary\"], 5, labels=[1, 2, 3, 4, 5])\n\n# hepsinden olu\u015fan RFM Scoru\nrfm[\"RFM_SCORE\"] = (rfm[\"recency_score\"].astype(str) + rfm[\"frequency_score\"].astype(str))\nrfm.head(10)","37cdb233":"seg_map = {\n    r'[1-2][1-2]': 'hibernating',\n    r'[1-2][3-4]': 'at_Risk',\n    r'[1-2]5': 'cant_loose',\n    r'3[1-2]': 'about_to_sleep',\n    r'33': 'need_attention',\n    r'[3-4][4-5]': 'loyal_customers',\n    r'41': 'promising',\n    r'51': 'new_customers',\n    r'[4-5][2-3]': 'potential_loyalists',\n    r'5[4-5]': 'champions'\n}\nrfm['segment'] = rfm['RFM_SCORE'].replace(seg_map, regex=True)\nrfm.head(10)\n","2ab7da8a":"# Segmentlere g\u00f6re RFM ortalama ve s\u0131kl\u0131k de\u011ferlerini gruplayal\u0131m\nrfm[[\"segment\", \"recency\", \"frequency\", \"monetary\"]].groupby(\"segment\").agg([\"mean\", \"count\"])\n","a5cc5889":"sgm= rfm[\"segment\"].value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=sgm.index,y=sgm.values)\nplt.xticks(rotation=45)\nplt.title('Customer Segments',color = 'blue',fontsize=15)\nplt.show()","fa1c96ae":"labels = rfm[\"segment\"].value_counts().index\ncolors = ['grey','blue','red','yellow','green','brown']\nsizes = rfm[\"segment\"].value_counts().values\n\n# visual\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=None, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Customer Segments',color = 'blue',fontsize = 15)\nplt.show()","0c937e3c":"!pip install Lifetimes","a58d7007":"from sqlalchemy import create_engine\nimport datetime as dt\nimport pandas as pd\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom lifetimes import BetaGeoFitter\nfrom lifetimes import GammaGammaFitter\nfrom lifetimes.plotting import plot_period_transactions\nfrom sklearn.preprocessing import MinMaxScaler\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","cecbcdcc":"cltv_df = df.groupby('Customer ID').agg({'InvoiceDate': [lambda date: (date.max() - date.min()).days,\n                                                         lambda date: (today_date - date.min()).days],\n                                         'Invoice': lambda num: num.nunique(),\n                                         'TotalPrice': lambda TotalPrice: TotalPrice.sum()})\n\n\ncltv_df.columns = cltv_df.columns.droplevel(0)\ncltv_df.columns = ['recency', 'T', 'frequency', 'monetary']\ncltv_df.head()","c5996b60":"# monetary de\u011ferini toplam totalPrice olarak hesaplam\u0131\u015ft\u0131k.\n# bu a\u015famada moneary de\u011ferini sat\u0131n alma ba\u015f\u0131na ortalama kazan\u00e7 olarak ifade edece\u011fiz\ncltv_df[\"monetary\"] = cltv_df[\"monetary\"] \/ cltv_df[\"frequency\"]\n\n# monetary nin s\u0131f\u0131rdan b\u00fcy\u00fck olanlar\u0131n\u0131n se\u00e7elimesi\ncltv_df = cltv_df[cltv_df[\"monetary\"] > 0]\n\n# BGNBD i\u00e7in recency ve T'nin haftal\u0131k cinsten ifade edilmesi\ncltv_df[\"recency\"] = cltv_df[\"recency\"] \/ 7\ncltv_df[\"T\"] = cltv_df[\"T\"] \/ 7\n\n# frequency nin 1 den b\u00fcy\u00fck olanlar\u0131n\u0131n se\u00e7ilmesi\ncltv_df = cltv_df[(cltv_df['frequency'] > 1)]\ncltv_df.head()","a1a1cc94":"bgf = BetaGeoFitter(penalizer_coef=0.001)\nbgf.fit(cltv_df['frequency'],\n        cltv_df['recency'],\n        cltv_df['T'])","c869b145":"# 1 haftal\u0131k beklenen sat\u0131n alma (transection)\ncltv_df[\"expected_purc_1_week\"] = bgf.predict(1,\n                                               cltv_df['frequency'],\n                                               cltv_df['recency'],\n                                               cltv_df['T'])\n\ncltv_df.sort_values(\"expected_purc_1_week\", ascending=False).head(10)","dbb53934":"# 1 ayl\u0131k beklenen sat\u0131n alma\ncltv_df[\"expected_purc_1_month\"] = bgf.predict(4,\n                                               cltv_df['frequency'],\n                                               cltv_df['recency'],\n                                               cltv_df['T'])\n\ncltv_df.sort_values(\"expected_purc_1_month\", ascending=False).head(10)","72fa3a0b":"ggf = GammaGammaFitter(penalizer_coef=0.01)\nggf.fit(cltv_df['frequency'], cltv_df['monetary'])","d1c38bad":"cltv_df[\"expected_average_profit\"] = ggf.conditional_expected_average_profit(cltv_df['frequency'],\n                                                                             cltv_df['monetary'])\n\ncltv_df.sort_values(\"expected_average_profit\", ascending=False).head(20)","0d9d5ab9":"cltv = ggf.customer_lifetime_value(bgf,\n                                   cltv_df['frequency'],\n                                   cltv_df['recency'],\n                                   cltv_df['T'],\n                                   cltv_df['monetary'],\n                                   time=6,  # 6 ayl\u0131k\n                                   freq=\"W\",  # T'nin frekans bilgisi.\n                                   discount_rate=0.01)","d1ba63ff":"# ID indexte bunu indexten \u00e7\u0131karal\u0131m\ncltv = cltv.reset_index()\n# ana tablom ile tahmin de\u011ferleri tablosunu birle\u015ftiriyorum\ncltv_final = cltv_df.merge(cltv, on=\"Customer ID\", how=\"left\")\n# azalan \u015fekilde s\u0131ralayal\u0131m\ncltv_final.sort_values(by=\"clv\", ascending=False).head(10)","af6b0d76":"# 1 ayl\u0131k CLTV hesaplayal\u0131m:\ncltv_1 = ggf.customer_lifetime_value(bgf,\n                                   cltv_df['frequency'],\n                                   cltv_df['recency'],\n                                   cltv_df['T'],\n                                   cltv_df['monetary'],\n                                   time=1,  # 1 ayl\u0131k\n                                   freq=\"W\",  # T'nin frekans bilgisi\n                                   discount_rate=0.01)\n\ncltv_1.head()\ncltv_1= cltv_1.reset_index()\ncltv_1 = cltv_df.merge(cltv_1, on=\"Customer ID\", how=\"left\")\ncltv_1.sort_values(by=\"clv\", ascending=False).head(10)\n","b8e7c383":"# 12 ayl\u0131k CLTV hesaplayal\u0131m:\n\ncltv_12 = ggf.customer_lifetime_value(bgf,\n                                   cltv_df['frequency'],\n                                   cltv_df['recency'],\n                                   cltv_df['T'],\n                                   cltv_df['monetary'],\n                                   time=12,  # 1 ayl\u0131k\n                                   freq=\"W\",  # T'nin frekans bilgisi\n                                   discount_rate=0.01)\n\ncltv_12.head()\ncltv_12 = cltv_12.reset_index()\ncltv_12 = cltv_df.merge(cltv_12, on=\"Customer ID\", how=\"left\")\ncltv_12.sort_values(by=\"clv\", ascending=False).head(10)\n","1e5a3368":"# clv tahminlerinin 0-1 aral\u0131\u011f\u0131na normalize edilmesi\nscaler = MinMaxScaler(feature_range=(0, 1))\nscaler.fit(cltv_final[[\"clv\"]])\ncltv_final[\"scaled_clv\"] = scaler.transform(cltv_final[[\"clv\"]])\n\ncltv_final.sort_values(by=\"scaled_clv\", ascending=False).head()","6596923b":"# M\u00fc\u015fterilerin Segmentlere Ayr\u0131lmas\u0131\ncltv_final[\"segment\"] = pd.qcut(cltv_final[\"scaled_clv\"], 4, labels=[\"D\", \"C\", \"B\", \"A\"])\ncltv_final.head()\n\ncltv_final.head()\n","a331be66":"# segnmentlerin incelenmesi\ncltv_final.groupby(\"segment\").agg({\"count\", \"mean\", \"sum\"})","03920a19":"### De\u011fi\u015fkenler\n* InvoiceNo: Fatura numaras\u0131. Her i\u015fleme yani faturaya ait e\u015fsiz numara. C ile ba\u015fl\u0131yorsa iptal edilen i\u015flem.\n* StockCode: \u00dcr\u00fcn kodu. Her bir \u00fcr\u00fcn i\u00e7in e\u015fsiz numara.\n* Description: \u00dcr\u00fcn ismi\n* Quantity: \u00dcr\u00fcn adedi. Faturalardaki \u00fcr\u00fcnlerden ka\u00e7ar tane sat\u0131ld\u0131\u011f\u0131n\u0131 ifade etmektedir.\n* InvoiceDate: Fatura tarihi ve zaman\u0131.\n* UnitPrice: \u00dcr\u00fcn fiyat\u0131 (Sterlin cinsinden)\n* CustomerID: E\u015fsiz m\u00fc\u015fteri numaras\u0131\n* Country: M\u00fc\u015fterinin ya\u015fad\u0131\u011f\u0131 \u00fclke.\n","4b00461a":"#### N\u00fcmerik De\u011fi\u015fken Analizi","7b85621d":"### Veri Seti Hikayesi\n* Veri seti  01\/12\/2009 - 09\/12\/2011 tarihleri aras\u0131ndaki sat\u0131\u015flar\u0131n\u0131 i\u00e7eriyor.\n* Bu projede 2010-2011 y\u0131llar\u0131 aras\u0131 incelenecektir.\n* Bu \u015firketin \u00fcr\u00fcn katalo\u011funda hediyelik e\u015fyalar yer almaktad\u0131r.\n* \u015eirketin m\u00fc\u015fterilerinin b\u00fcy\u00fck \u00e7o\u011funlu\u011fu kurumsal m\u00fc\u015fterilerdir.\n","bf0b0d65":"### K\u00fct\u00fcphaneler","ff8f8e67":"### GAMMA-GAMMA Modelinin Kurulmas\u0131\n* Bu modelle ama\u00e7 average ptofiti yani i\u015flem ba\u015f\u0131na ortalama kar\u0131 olas\u0131l\u0131ksal olarak modellemek","5582c7c7":"#### Segmentlerin G\u00f6rselle\u015ftirilmesi","ec373482":"##### Kategorik De\u011fi\u015fken Analizi","9502548a":"## Veriyi Anlama","c4c4e7ed":"### Veri \u00d6ni\u015fleme","00cd2ee1":"### Life Time Veri Yap\u0131s\u0131n\u0131n Haz\u0131rlanmas\u0131\n* recency: m\u00fc\u015fterinin kendi \u00f6zelinde son al\u0131sverisi ile ilk al\u0131sverisi aras\u0131ndaki fark\n* T: m\u00fc\u015fterinin \u015firketteki ya\u015f\u0131\n* frequency: tekrar eden toplam sat\u0131n alma say\u0131s\u0131\n* monetary_value: sat\u0131n alma ba\u015f\u0131na ortalama kazan\u00e7\n","225b3111":"### BG-NBD ve GG modeli ile CLTV'nin \u00e7arp\u0131\u015ft\u0131r\u0131lmas\u0131\n","84edc40a":"# CLTV Prediction","ab3a2a38":"* recency: bug\u00fcn ile m\u00fc\u015fterinin en son sat\u0131n alma tarihi aras\u0131ndaki fark, g\u00fcn cinsinden\n* frequency: m\u00fc\u015fterinin al\u0131\u015fveri\u015f s\u0131kl\u0131\u011f\u0131\n* monetary: m\u00fc\u015fterinin \u00f6dedi\u011fi toplam para\n","a6bc6fe8":"#### CLTV Tahminlerine G\u00f6re M\u00fc\u015fterilerin Segmentlere Ayr\u0131lmas\u0131","9c433ceb":"### \u0130\u015f Problemi\nBir e-ticaret \u015firketi sat\u0131\u015f ve pazarlama faaliyetleri i\u00e7in roadmap belirlemek istemektedir.\u015eirketin orta uzun vadeli plan yapabilmesi i\u00e7in var olan m\u00fc\u015fterilerin gelecekte \u015firkete sa\u011flayacaklar\u0131 potansiyel de\u011ferin tahmin edilmesi gerekmektedir.","6281798c":"* \u0130ncelendi\u011finde kar getirisi en y\u00fcksek olan ki\u015fiden daha fazla al\u0131sveris yapan biri daha az kar getirmi\u015f.Burada terslik var demek ki sadece buraya g\u00f6re bir cltv pred. yapamam bu iki modeli \u00e7arp\u0131st\u0131rmam gerek.\n","efae1b2d":"#### RFM Skorlar\u0131n\u0131n Olu\u015fturulmas\u0131","cc2b54cf":"# RFM ile M\u00fc\u015fteri Segmentasyonu\n![](https:\/\/blog.hubspot.com\/hubfs\/what%20is%20customer%20segmentation.jpg)","1372e926":"### \u0130\u015f Problemi\nBir e-ticaret \u015firketi m\u00fc\u015fterilerini segmentlere ay\u0131r\u0131p bu segmentlere g\u00f6re\npazarlama stratejileri belirlemek istiyor.\n\u00d6rne\u011fin \u015firket i\u00e7in \u00e7ok kazan\u00e7l\u0131 olan m\u00fc\u015fterileri elde tutmaki\u00e7in farkl\u0131 kampanyalar, yeni m\u00fc\u015fteriler i\u00e7in farkl\u0131 kampanyalar d\u00fczenlenmek istenmektedir.\n","8104abb7":"### BG-NBD Modelinin Kurulmas\u0131\n* Bu modelle amac\u0131m sat\u0131n alma say\u0131s\u0131n\u0131 olas\u0131l\u0131ksal olarak tahmin etmek","52f29c7e":"#### RFM Skorlar\u0131na G\u00f6re M\u00fc\u015fterilerin Segmentlere Ayr\u0131lmas\u0131","d3e9a265":"### RFM Metriklerinin Haz\u0131rlanmas\u0131","b3fb3898":"### K\u00fct\u00fcphaneler","845e20d0":"* 1 ayl\u0131k ve 12 ayl\u0131k tahminlere bak\u0131ld\u0131\u011f\u0131nda ayn\u0131 m\u00fc\u015fterilerin iki durumda da clv tahminlerinin y\u00fcksek oldu\u011funu g\u00f6r\u00fcyorum.\n* Sadece baz\u0131 m\u00fc\u015fteriler yer de\u011fi\u015ftirmi\u015f,ama \u00e7ok fazla fark yok.\n* Yani m\u00fc\u015fteriler 12 ay i\u00e7inde al\u0131sveris al\u0131skalnl\u0131klar\u0131n\u0131 ayn\u0131 \u015fekilde devam ettirmi\u015f.\n","55636123":"### Ke\u015fif\u00e7i Veri Analizi"}}