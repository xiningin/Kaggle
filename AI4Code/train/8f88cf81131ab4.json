{"cell_type":{"fac6fca4":"code","98685091":"code","ddf0e222":"code","0f895a52":"code","8e85192b":"code","30c9a946":"code","a3fd454c":"code","85e00a5e":"code","f0e404d7":"code","91af0c5b":"code","4f27f52b":"code","aea8b301":"code","8d035cca":"code","e0274699":"code","f0638ec1":"code","f7130cc0":"code","330752bf":"code","3aaf740f":"code","392e5fc6":"code","b19fb484":"code","9a741e9e":"code","70022980":"code","26b4ec1d":"code","c5a5e3af":"code","6f656a74":"code","b743ef1a":"code","8e353457":"code","734268e9":"code","0cbd4aa4":"code","4d75b038":"code","2de09d8f":"code","d9dad3e0":"code","d1190efc":"code","7ed37c74":"code","7329bfc7":"code","7d6bb602":"code","384c006b":"code","65ccb939":"code","420fe003":"code","5dcc15a5":"code","38ea7b8e":"code","285b946b":"code","5021b150":"code","b8df850f":"code","92e95a46":"code","26353808":"code","ffdafbe8":"code","cb5cf350":"code","a1ca9e50":"markdown","e5fe290b":"markdown","3a784683":"markdown","086c0048":"markdown","063446fc":"markdown","067c50f1":"markdown","4ff0a166":"markdown","70750928":"markdown","1f2d7b14":"markdown","42f4ff88":"markdown","98505bab":"markdown","05c5952c":"markdown","03a42a56":"markdown","b0d2c366":"markdown","64eae4e1":"markdown","6f7731a7":"markdown","2d0145db":"markdown","af41bd87":"markdown","f9996387":"markdown","afc8e878":"markdown","68c7a2c4":"markdown","975f299b":"markdown","3412a8cd":"markdown","00b234e6":"markdown","9b7b1c9a":"markdown","b9c03c93":"markdown","1ff44cd5":"markdown","af6946fd":"markdown","cef97892":"markdown","4eccbf9e":"markdown"},"source":{"fac6fca4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","98685091":"data = pd.read_csv('\/kaggle\/input\/data-analyst-jobs\/DataAnalyst.csv')\ndata.head()","ddf0e222":"data.drop([data.columns[0]], axis='columns',inplace=True)","0f895a52":"data.shape","8e85192b":"columns = data.columns\ncolumns","30c9a946":"data.info()","a3fd454c":"data.isnull().sum()","85e00a5e":"plt.figure(figsize=(20,3))\nsns.heatmap(data.isnull(), cmap='Greys_r', cbar=False)\nplt.yticks([])\nplt.xticks(rotation=60);","f0e404d7":"data[columns[0]].value_counts()","91af0c5b":"df = data[columns[0]].value_counts()\ndf = df.to_frame().reset_index()\ndf.rename(columns={'index': 'Job Title', 'Job Title': 'Count'}, inplace=True)\ndf","4f27f52b":"sns.set_style('darkgrid')\nplt.figure(figsize=(10,5))\nchart = sns.barplot(\n    data = df.head(10),\n    x='Job Title',\n    y ='Count',\n    palette = 'Set1'\n)\nchart = chart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation = 45, \n    horizontalalignment = 'right',\n    fontweight = 'light',\n)\nplt.show()\nplt.show()","aea8b301":"from wordcloud import WordCloud, STOPWORDS\ntext = ' '.join(data['Job Title'])\nstopwords = set(STOPWORDS)\nwc = WordCloud(background_color='black', stopwords=stopwords).generate(text)\nplt.figure(figsize=(20,8))\nplt.title('Job Title', fontsize=20)\nplt.axis('off')\nplt.imshow(wc)\nplt.show()","8d035cca":"data[columns[1]].value_counts()","e0274699":"def minsalary(salaryrange):\n  import re\n  temp = re.findall(r'\\d+', salaryrange)\n  if len(temp) == 1:\n    return -1\n  return temp[0]\ndef maxsalary(salaryrange):\n  import re\n  temp = re.findall(r'\\d+', salaryrange)\n  if len(temp) == 1:\n    return -1\n  return temp[1]\n\nindex = np.arange(2253)\ndf = pd.DataFrame(index=index)\ndata['min_salary'] = data[columns[1]].apply(minsalary).astype('int')\ndata['max_salary'] = data[columns[1]].apply(maxsalary).astype('int')\ndf","f0638ec1":"plt.figure(figsize=(12,6))\nax = plt.gca()\nsns.distplot(data['max_salary'], ax = ax, bins=50)\nsns.distplot(data['min_salary'], ax=ax)\nplt.show()","f7130cc0":"df = data.groupby(['Job Title'])['max_salary'].mean().sort_values(ascending=False)\ndf = df.reset_index()\ndf.rename(columns={'max_salary':'average max salary'}, inplace=True)","330752bf":"plt.figure(figsize=(18,6))\nchart = sns.barplot(\n    data=df.head(15),\n    x='Job Title',\n    y='average max salary',\n    palette='Set2')\nchart = chart.set_xticklabels(\n    chart.get_xticklabels(),\n    rotation=60,\n    horizontalalignment='right',\n    fontweight='light'\n)\nplt.xlabel('Job Title',size=12)\nplt.ylabel('Average Max Salary',size=12)\nplt.show()\n\n# chart = sns.barplot(\n#     data = df.head(10),\n#     x='Job Title',\n#     y ='Count',\n#     palette = 'Set1'\n# )\n# chart = chart.set_xticklabels(\n#     chart.get_xticklabels(), \n#     rotation = 45, \n#     horizontalalignment = 'right',\n#     fontweight = 'light',\n# )","3aaf740f":"df = data.groupby(['Job Title'])['min_salary'].mean().sort_values()\ndf = df.reset_index()\ndf.rename(columns={'min_salary':'average min salary'}, inplace=True)\n#df.rename(columns={'max_salary':'average max salary'}, inplace=True)","392e5fc6":"df","b19fb484":"plt.figure(figsize=(12,6))\nchart = sns.barplot(\n    data=df.head(10),\n    x='Job Title',\n    y='average min salary',\n    palette='Set3'\n)\nchart = chart.set_xticklabels(\n    chart.get_xticklabels(),\n    rotation=60,\n    horizontalalignment = 'right',\n    fontweight='light'\n)\nplt.xlabel('Job Title', size=12)\nplt.ylabel('Average Min Salary', size=12)\nplt.title('Top 10 Job Title with least Average Min Salary', size=12)\nplt.show()","9a741e9e":"data.replace('-1', np.nan, inplace=True)\ndata.replace(-1, np.nan, inplace=True)\ndata.replace(-1.0, np.nan, inplace=True);","70022980":"df = data[['Job Title', 'min_salary', 'max_salary']].groupby(['Job Title']).max().sort_values(by=['max_salary'],ascending=False)","26b4ec1d":"df = df.reset_index()","c5a5e3af":"# df.head(10).plot(kind='bar', stacked=True)\nplt.figure(figsize=(18,6))\nax = plt.gca()\nchart = sns.barplot(data=df.head(10),x='Job Title', y='max_salary', ax=ax, color='r')\nsns.barplot(data=df.head(10),x='Job Title', y='min_salary', ax=ax, color='b')\nchart = chart.set_xticklabels(\n    chart.get_xticklabels(),\n    rotation=60,\n    horizontalalignment='right',\n    fontweight='light'\n)\nplt.show()","6f656a74":"text = \" \".join(data['Job Description'])\nstopwords=set(STOPWORDS)\nwc = WordCloud(stopwords=stopwords).generate(text)\n\nplt.figure(figsize=(16,8))\nplt.title('Job Description')\nplt.axis('off')\nplt.imshow(wc);","b743ef1a":"data.head()","8e353457":"data['Rating'].describe()","734268e9":"df = data['Rating'].value_counts()","0cbd4aa4":"df = df.reset_index()\ndf.rename(columns={'index':'Ratings', 'Rating':'Count'}, inplace=True)\ndf.sort_values(by=['Ratings'], ascending=False, inplace=True, axis=0)","4d75b038":"plt.figure(figsize=(18,6))\nchart = sns.barplot(data=df,\n                    x='Ratings',\n                    y='Count',\n                    palette='Set3')\nplt.show()","2de09d8f":"data['Company Name'].head()","d9dad3e0":"def propername(companyname):\n  try:\n    import re\n    temp = re.findall(r'.*', companyname)\n    return temp[0]\n  \n  except:\n    return -1\n\ndata['Company Name'] = data[columns[4]].apply(propername)","d1190efc":"data['Company Name'].value_counts()","7ed37c74":"data['Location'].value_counts()","7329bfc7":"data['City'] = data[columns[5]].apply(lambda x:x.split(',')[0])\ndata['State'] = data[columns[5]].apply(lambda x: x.split(' ')[-1])","7d6bb602":"data.head()","384c006b":"df = data['State'].value_counts().reset_index()\ndf.rename(columns={'index':'State', 'State':'Count'}, inplace=True)","65ccb939":"plt.figure(figsize=(18,6))\nchart = sns.barplot(data=df,\n                    x='State',\n                    y='Count',\n                    palette='Set2')\nchart = chart.set_xticklabels(\n    chart.get_xticklabels(),\n    rotation=60,\n    horizontalalignment='center',\n    fontweight='light'\n)\nplt.xlabel('State', size=13)\nplt.ylabel('Count', size=13)\nplt.show()","420fe003":"df = data['City'].value_counts().sort_values(ascending=False).reset_index().head(15)\ndf.rename(columns={'index':'City', 'City':'Count'}, inplace=True)","5dcc15a5":"plt.figure(figsize=(18,6))\nchart = sns.barplot(data=df,\n                    x='City',\n                    y='Count',\n                    palette='Set2')\nchart = chart.set_xticklabels(\n    chart.get_xticklabels(),\n    rotation=60,\n    horizontalalignment='center',\n    fontweight='light'\n)\nplt.xlabel('City', size=13)\nplt.ylabel('Count', size=13)\nplt.show()","38ea7b8e":"df = data.groupby(['City'])['max_salary'].mean().sort_values(ascending=False).reset_index()","285b946b":"def boxplot(df, x, y, n, i=16):\n  plt.figure(figsize=(i,6))\n  chart = sns.barplot(data=df.head(n),\n                      x=x,\n                      y=y,\n                      palette='Set2')\n  chart = chart.set_xticklabels(\n      chart.get_xticklabels(),\n      rotation=60,\n      horizontalalignment='right',\n      fontweight='light'\n  )\n  plt.xlabel(x, size=13)\n  plt.ylabel('Average '+y, size=13)\n  plt.show()\n\nboxplot(df, 'City', 'max_salary', 25, 25)","5021b150":"text = \" \".join(data['City'])\nwc = WordCloud(stopwords=stopwords).generate(text)\n\nplt.figure(figsize=(16,8))\nplt.title('Job Description')\nplt.axis('off')\nplt.imshow(wc);","b8df850f":"data['Industry'].value_counts()","92e95a46":"df = data.groupby(['Industry'])['max_salary'].mean().sort_values(ascending=False).reset_index()\nboxplot(df, 'Industry', 'max_salary', 15)","26353808":"df = data.groupby(['Industry'])['min_salary'].mean().sort_values(ascending=True).reset_index()\nboxplot(df, 'Industry', 'min_salary', 15)","ffdafbe8":"df = data.groupby(['Sector'])['max_salary'].mean().sort_values(ascending=False).reset_index()\nboxplot(df, 'Sector', 'max_salary', 15)","cb5cf350":"df = data.groupby(['Sector'])['min_salary'].mean().sort_values(ascending=True).reset_index()\nboxplot(df, 'Sector', 'min_salary', 15)","a1ca9e50":"> ## Industries","e5fe290b":"> ## Ratings","3a784683":">> ### Top 15 Sector with lowest average minimum salary","086c0048":">> ### Cleaning the columns Company Name by removing Rating","063446fc":">> ## bar plot of salary of top 10 Job Title with highest maximum salary","067c50f1":"> ### Top 15 Job Title with average maximum salary","4ff0a166":"> ## Sector","70750928":" One null in comapany name","1f2d7b14":">> ### Top 10 cities with highest average max salary","42f4ff88":"> ## Job Describtion","98505bab":">>> ### lets convert -1, '-1', -1.0 to Nan.","05c5952c":">> divide the salary column into max salarya and min salary","03a42a56":"# start exploring columns\n1. Job Title","b0d2c366":">> * Min salary distribution is a bit right skewed\n>> * While Max salary distribution is normal distribution.","64eae4e1":"> * ## For Top 10 **Job Titles**, plot 'Job Title' vs 'Count' ","6f7731a7":">  ## Max and Min Salary distribution.","2d0145db":"## 2. Salary","af41bd87":">> ### Top 15 sectors with maximum average maximim salary","f9996387":">> ## Top 10 Job Title with least Average Min Salary","afc8e878":"\n* we can see one value as -1. Which means ```isnull()``` ignored -1 i.e. null value in this columns.","68c7a2c4":">> ### Dividing the Location into state and city","975f299b":"> * ## Word Cloud of Job Titles","3412a8cd":">> ### plotting 'State' vs 'Count' i.e. number of jobs in that state.","00b234e6":">> ### Word Cloud of cities","9b7b1c9a":">> * I thought may be we can diffrentiate the data on the basis of diffrent Job Title. But it can't be helpfull as there are 1272 unique titles.","b9c03c93":"> ## Location","1ff44cd5":">> ### plotting'City' vs 'Count' i.e. number of jobs in that city, for top 15 cities.","af6946fd":"> ## Company Name","cef97892":">> ### Top 15 Industries with average maximun salary","4eccbf9e":">> ### Top 15 Industries with lowest minimum salary"}}