{"cell_type":{"fdd09c17":"code","92dcc2b6":"code","73b7d780":"code","7fb07108":"code","5b0bf242":"code","a40cd19b":"code","aaf22f50":"code","35dd7cc9":"code","18f838de":"markdown"},"source":{"fdd09c17":"%%time\nimport sys\n!cp -f ..\/input\/rapids\/rapids.21.06 \/opt\/conda\/envs\/rapids.tar.gz\n!cd -f \/opt\/conda\/envs\/ && tar -xzvf rapids.tar.gz\nsys.path = [\"\/opt\/conda\/envs\/rapids\/lib\"] + [\"\/opt\/conda\/envs\/rapids\/lib\/python3.7\"] + [\"\/opt\/conda\/envs\/rapids\/lib\/python3.7\/site-packages\"] + sys.path\n!cp -f \/opt\/conda\/envs\/rapids\/lib\/libxgboost.so \/opt\/conda\/lib\/","92dcc2b6":"# Importing core libraries\nimport numpy as np\nimport pandas as pd\nfrom time import time\nimport os\nimport pprint\nimport joblib\nfrom functools import partial\n\n# Suppressing warnings because of skopt verbosity\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Regressors\nimport lightgbm as lgb\n\n# Model selection\nfrom sklearn.model_selection import KFold, StratifiedKFold\n\n# Metrics\nfrom sklearn.metrics import mean_squared_error\n\n# Data processing\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.preprocessing import OneHotEncoder\n\n# \nimport cudf, cuml\nimport cupy as cp\nfrom cuml.manifold import TSNE, UMAP\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import ylim, xlim\n%matplotlib inline","73b7d780":"# Loading data \nX = pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/train.csv\")\nX_test = pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/test.csv\")","7fb07108":"# Preparing data as a tabular matrix\ny = X.target\nX = X.set_index('id').drop('target', axis='columns')\nX_test = X_test.set_index('id')","5b0bf242":"tsne = TSNE(n_components=2, perplexity=50, n_neighbors=50)\nprojection_2D = tsne.fit_transform(X)","a40cd19b":"plt.figure(figsize=(15, 15))\nplt.scatter(projection_2D[:,0], projection_2D[:,1],\n            c=y.values, \n            edgecolor='none',\n            alpha=0.80, \n            s=10)\nplt.axis('off')\nplt.show();","aaf22f50":"umap = UMAP(n_components=2, n_neighbors=50)\nprojection_2D = umap.fit_transform(X)","35dd7cc9":"plt.figure(figsize=(15, 15))\nplt.scatter(projection_2D[:, 0], projection_2D[:, 1],\n            c=y, \n            edgecolor='none', \n            alpha=0.80, \n            s=10)\nplt.axis('off')\nplt.show();","18f838de":"# T-SNE & UMAP\nT-SNE (https:\/\/lvdmaaten.github.io\/tsne\/) and UMAP (https:\/\/github.com\/lmcinnes\/umap) are two technicalities, often used by data scientists, that allow to project multivariate data into lower dimensions. They are often used to find clusters in data. I used the fast t-SNE and UMAP implementations offered by Rapids (they require GPU access). "}}