{"cell_type":{"2e87afe2":"code","b0f738ca":"code","c1396ee5":"code","fa04f486":"code","06cf7e8c":"code","1bcc5b92":"code","061e2942":"code","34a1a9ea":"code","25fdfe61":"code","18be026b":"code","9e44c7c1":"code","86b234eb":"markdown","6bcbf2c3":"markdown","9f0179a6":"markdown"},"source":{"2e87afe2":"import numpy as np\nimport pandas as pd\nfrom scipy.stats import norm\nfrom scipy import integrate\nimport itertools \nimport pylab as plt\nimport datetime\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\nfrom plotly import tools\nimport plotly.offline as py\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport math\nimport re\nimport h2o\nfrom h2o.estimators.random_forest import H2ORandomForestEstimator\nfrom h2o.grid.grid_search import H2OGridSearch","b0f738ca":"dataset = pd.read_csv(\"..\/input\/nfl-big-data-bowl-2020\/train.csv\", low_memory=False)","c1396ee5":"def feet_inch_to_cm(height_fi):\n    foot = 30.48\n    inch = 2.54\n    return int(height_fi.split('-')[0]) * foot + int(height_fi.split('-')[1]) * inch","fa04f486":"dataset = dataset[dataset['NflId']==dataset['NflIdRusher']][['GameId', 'PlayId', 'PlayerHeight', 'PlayerWeight', 'PlayerBirthDate', 'PlayerCollegeName', 'Yards']]\ndataset['Age']=2019 - pd.DatetimeIndex(dataset['PlayerBirthDate']).year\ndataset['PlayerHeight_cm']= dataset['PlayerHeight'].apply(feet_inch_to_cm)\ndataset['PlayerWeight_kg']= dataset['PlayerWeight']*0.453592","06cf7e8c":"dataset=dataset[['GameId', 'PlayId', 'PlayerCollegeName', 'Yards', 'Age', 'PlayerHeight_cm', 'PlayerWeight_kg']].reset_index(drop=True)","1bcc5b92":"h2o.init()\ntrain = h2o.H2OFrame(dataset)","061e2942":"# # GBM hyperparameters\n# gbm_params1 = {'ntrees': [300,500,700],\n#                 'max_depth': [1, 2, 3,4],\n#                 'min_rows': [2,5,10]}\n\n# # Train and validate a cartesian grid of GBMs\n# gbm_grid1 = H2OGridSearch(model=H2ORandomForestEstimator,\n#                           grid_id='gbm_grid1',\n#                           hyper_params=gbm_params1)\n# gbm_grid1.train(x=['PlayerCollegeName', 'Age', 'PlayerHeight_cm', 'PlayerWeight_kg'], y='Yards',\n#                 training_frame=train,\n#                 seed=1)\n# gbm_gridperf1 = gbm_grid1.get_grid(sort_by='mae')\n# gbm_gridperf1","34a1a9ea":"model = H2ORandomForestEstimator(ntrees=300, max_depth=3, min_rows=2, nfolds=10, seed = 1, keep_cross_validation_predictions=True)\n\n# Train model\nmodel.train(x=['PlayerCollegeName', 'Age', 'PlayerHeight_cm', 'PlayerWeight_kg'], y='Yards', training_frame=train)\ncv_predictions = model.cross_validation_holdout_predictions()\ntrain = train.as_data_frame().join(cv_predictions.as_data_frame())","25fdfe61":"model.varimp(True)","18be026b":"train.head()","9e44c7c1":"plt.figure(figsize=[20,10])\ntrain['Yards'].hist(bins=90, label='Test Set')\ntrain['predict'].hist(bins=90, label='Predictions')\nplt.legend(loc='upper right')","86b234eb":"From the histogram below, it looks like rusher characteristics do have some information gain, but the variance is not anywhere near that of the dataset.\nWe used the output of this model as a feature in a final model, which did result in an almost insignificant improvement of CRPS.","6bcbf2c3":"# Replacing rusher characteristics with 1 number\n\nHere we aimed to create a submodel only on a few rusher player characteristics to examine if they indeed can have a significant information gain on the problem outcome. But more importantly, we want to look at the variance of the yards prediction of this submodel compred to that of the whole dataset.\n\nWe use CV10 in order to get predictions for each entry in the training set, rather than splitting on a train and test.","9f0179a6":"### Player physical traits model - replace PlayerHeight, PlayerWeight, PlayerBirthDate, PlayerCollegeName by 1 continuous variable"}}