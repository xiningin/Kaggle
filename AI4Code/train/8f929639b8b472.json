{"cell_type":{"1b48ccff":"code","6e1f3cdf":"code","e68b6b92":"code","f84201be":"code","431e3e55":"code","3bda8327":"code","46fb48c4":"code","f50ced4b":"code","f2e9154c":"code","1102393e":"code","dc247b58":"code","b999495a":"code","9f4240e5":"code","09f24a6e":"code","8734b496":"code","25b33a65":"code","94083140":"code","db96209c":"code","6c3555cc":"code","7f52d2b6":"code","dc79a985":"code","1e2f3e8b":"code","8165997d":"code","f53dd3f6":"code","b3a4bcc9":"code","7570c743":"code","efcf73e7":"code","2fa9d4b6":"code","2dec9ed0":"code","3310c0ef":"code","600bebf5":"code","963b9713":"code","e70e137e":"code","aa852278":"code","8df75bb7":"code","aa0e922c":"markdown","22fed35b":"markdown","40fad3f3":"markdown","bca8e259":"markdown","f3302f0b":"markdown","746a09c5":"markdown","6c0933f3":"markdown","c236b330":"markdown","a071cc9a":"markdown","b0f75a8f":"markdown","9afc3f0c":"markdown","02e4cbbc":"markdown","703e863b":"markdown","f9b59d58":"markdown","ae759e44":"markdown","d5e83864":"markdown","77a54842":"markdown","3a132444":"markdown"},"source":{"1b48ccff":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom cuml.preprocessing import train_test_split\nimport cudf\nfrom cuml.ensemble import RandomForestRegressor\nfrom cuml.linear_model import LinearRegression\nfrom cuml.neighbors import KNeighborsRegressor\nfrom cuml.metrics import mean_squared_error\nfrom sklearn.model_selection import cross_val_score","6e1f3cdf":"train = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-feb-2021\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-feb-2021\/test.csv\")\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/sample_submission.csv')","e68b6b92":"# we deleted the id columns beacuse it was unnecessary\ntrain = train.drop(['id'] , axis  =1)\ntest = test.drop(['id'] , axis  =1)","f84201be":"train.tail(3)","431e3e55":"test.tail(3)","3bda8327":"sample_submission.tail(3)","46fb48c4":"train.describe()","f50ced4b":"train.describe(exclude= 'number')","f2e9154c":"train.isnull().sum()","1102393e":"test.isnull().sum()","dc247b58":"corr = train.corr()\ncorr.style.background_gradient(cmap='Blues')","b999495a":"plt.figure(figsize=(15,8))\nsns.boxplot(data = train)","9f4240e5":"Q1 = train[\"target\"].quantile(0.25)\n\nQ3 = train[\"target\"].quantile(0.75)\n\nIQR = Q3 - Q1\n\nLower_Fence = Q1 - (1.5 * IQR)\n\ntrain = train.drop(train[train['target'] < Lower_Fence].index)\ntrain","09f24a6e":"plt.figure(figsize=(15,8))\nsns.boxplot(data = train)","8734b496":"le = LabelEncoder()\ncolumns = ['cat0', 'cat1', 'cat2', 'cat3', 'cat4', 'cat5', 'cat6', 'cat7', 'cat8','cat9']\nfor i in columns:\n    train[i] = le.fit_transform(train[i].astype(str))\n\ntrain.head()","25b33a65":"le2 = LabelEncoder()\ncolumns = ['cat0', 'cat1', 'cat2', 'cat3', 'cat4', 'cat5', 'cat6', 'cat7', 'cat8','cat9']\nfor i in columns:\n    test[i] = le2.fit_transform(test[i].astype(str))\n\ntest.head()","94083140":"# convert from pandas to cudf to use gpu\ntrain = cudf.DataFrame(train).astype(np.float32)\ntest = cudf.DataFrame(test).astype(np.float32)","db96209c":"x = train.drop('target', axis=1)\ny = train.target\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=2)","6c3555cc":"def baseline_model(n_preds, pred):\n    # just predict the average\n    return cudf.Series([pred for n in range(n_preds)])\n\n# make baseline preds\nbaseline_preds = baseline_model(len(y_test), np.mean(y_train)).astype(np.float32)","7f52d2b6":"mean_squared_error(y_true=y_test,y_pred=baseline_preds,squared=False)","dc79a985":"lr = LinearRegression()\nlr.fit(x_train, y_train)\nlr_preds = lr.predict(x_test)","1e2f3e8b":"mean_squared_error(y_true=y_test,y_pred=lr_preds,squared=False)","8165997d":"from sklearn.model_selection import GridSearchCV\n\np_grid = {'fit_intercept': [True, False],\n          'normalize': [True, False]}\n\ngrid = GridSearchCV(lr, p_grid)\ngrid.fit(x_train , y_train)","f53dd3f6":"grid.best_params_","b3a4bcc9":"lr = LinearRegression(fit_intercept = True, normalize = False)\nlr.fit(x_train, y_train)\nlr_preds = lr.predict(x_test)","7570c743":"mean_squared_error(y_true=y_test,y_pred=lr_preds,squared=False)","efcf73e7":"#from cuml.ensemble import RandomForestRegressor\n#est = [1000 , 1200]\n#depth = [7 , 9 , 12 , 14 , 16]\n\n#for e in est:\n#    for d in depth:\n#        for s in range(2):\n#            rfr2 = RandomForestRegressor(n_estimators = e , max_depth = d)\n#            rfr2.fit(x_train, y_train)\n#            rfr2_preds = rfr2.predict(x_test).astype(np.float64)\n#            print(mean_squared_error(y_true=y_test,y_pred=rfr2_preds,squared=False) , ' est: ',e , ' depth: ' , d)","2fa9d4b6":"rfr = RandomForestRegressor()\nrfr.fit(x_train, y_train)\nrfr_preds = rfr.predict(x_test)","2dec9ed0":"mean_squared_error(y_true=y_test,y_pred=rfr_preds,squared=False)","3310c0ef":"rfr = RandomForestRegressor(n_estimators = 1000 , max_depth = 12)\nrfr.fit(x_train, y_train)\nrfr_preds = rfr.predict(x_test)","600bebf5":"mean_squared_error(y_true=y_test,y_pred=rfr_preds,squared=False)","963b9713":"knn = KNeighborsRegressor()\nknn.fit(x_train , y_train)\nknn_preds = knn.predict(x_test)","e70e137e":"mean_squared_error(y_true=y_test,y_pred=knn_preds,squared=False)","aa852278":"test_preds = rfr.predict(test).astype(np.float64)\ntest_preds","8df75bb7":"sample_submission = cudf.DataFrame(sample_submission)\nsample_submission['target'] = test_preds\nsample_submission.to_csv('submission.csv', index=False)","aa0e922c":"#### Baseline Model","22fed35b":"#### Linear Regression","40fad3f3":"#### Remove the outliers","bca8e259":"The models were facing some problems working with float64 in GPU that only accepts float32, so we converted of the columns types to **float32** ","f3302f0b":"#### Encode the data","746a09c5":"# TPS Feb 2021\nStarter Notebook\n\n## Deleverables\n1. EDA\n    - What's going on?\n    - Show me the data...\n2. Model\n    - Baseline...\n    - Simple...\n    - Evaluation...\n    - Improvement...\n3. RAPIDS Bonus\n    - Apply RAPIDS ([Starter Notebook](https:\/\/www.kaggle.com\/tunguz\/tps-feb-2021-rapids-starter))\n    - Replace pandas with cuDF & sklearn with cuML\n    \n    \n#### Troubleshooting\n- [Data](https:\/\/www.kaggle.com\/c\/tabular-playground-series-feb-2021\/data)\n- [Overview](https:\/\/www.kaggle.com\/c\/tabular-playground-series-feb-2021\/overview)\n- [RF Starter Notebook](https:\/\/www.kaggle.com\/warobson\/tps-feb-2021-rf-starter)\n- [ML repo on GitHub](https:\/\/github.com\/gumdropsteve\/intro_to_machine_learning)\n- [Most simple RAPIDS Notebook submission](https:\/\/www.kaggle.com\/warobson\/simple-rapids-live) (Has stuff like `train_test_split()` with cuml..)\n    \n","6c0933f3":"##### GridSearchCV","c236b330":"#### Libraries","a071cc9a":"### Modeling","b0f75a8f":"#### Random Forest Model","9afc3f0c":"### Prepare the data ","02e4cbbc":"#### Split the data","703e863b":"### Load Data","f9b59d58":"As shown in the graph on the target there are outliers below the minimum value, so we decided to drop them ","ae759e44":"#### Linear Regression","d5e83864":"### EDA","77a54842":"### Submission","3a132444":"#### KNN "}}