{"cell_type":{"b8d06881":"code","4eb5369e":"code","4682d17b":"code","3de37e00":"code","b127b439":"code","e6d13feb":"code","aa0813a7":"code","c3d13777":"code","e9b9e5a5":"code","66de8930":"code","6ca5bb93":"code","180d267b":"code","9cddb6d5":"code","0d84f86e":"code","c91742a9":"code","2916ba07":"code","103a770a":"code","5f029234":"code","a512c0fb":"code","c507e4ed":"code","41522a32":"code","db58c173":"code","3b6ca49f":"code","7fce91a3":"code","a5914dae":"code","13a45949":"code","07286d5e":"code","53a272a2":"code","e79ba4b3":"code","08ee7cc4":"code","2d6700de":"code","7beac57d":"code","7c75fa83":"code","b8107856":"code","d95f1dcd":"code","4016a816":"code","3fa30125":"code","a1475444":"markdown","6eeec8d2":"markdown","ba75f3dd":"markdown","30a62ce1":"markdown","cbcefe0f":"markdown","36b4a2ae":"markdown","6560f60f":"markdown","96a8da18":"markdown","90a2ca18":"markdown","3cc93555":"markdown","cd948ad4":"markdown"},"source":{"b8d06881":"from fastai import *\nfrom fastai.collab import *\nfrom fastai.tabular import *","4eb5369e":"user,item,title = 'userId','movieId','title'","4682d17b":"path = untar_data(URLs.ML_SAMPLE)\npath","3de37e00":"ratings = pd.read_csv(path\/'ratings.csv')\nratings.head()","b127b439":"data = CollabDataBunch.from_df(ratings, seed=42)","e6d13feb":"y_range = [0,5.5]","aa0813a7":"learn = collab_learner(data, n_factors=50, y_range=y_range)","c3d13777":"learn.fit_one_cycle(3, 5e-3)","e9b9e5a5":"path=Path('..\/input\/')","66de8930":"ratings = pd.read_csv(path\/'u.data', delimiter='\\t', header=None,\n                      names=[user,item,'rating','timestamp'])\nratings.head()","6ca5bb93":"movies = pd.read_csv(path\/'u.item',  delimiter='|', encoding='latin-1', header=None,\n                    names=[item, 'title', 'date', 'N', 'url', *[f'g{i}' for i in range(19)]])\nmovies.head()","180d267b":"len(ratings)","9cddb6d5":"rating_movie = ratings.merge(movies[[item, title]])\nrating_movie.head()","0d84f86e":"data = CollabDataBunch.from_df(rating_movie, seed=42, pct_val=0.1, item_name=title)","c91742a9":"data.show_batch()","2916ba07":"y_range = [0,5.5]","103a770a":"learn = collab_learner(data, n_factors=40, y_range=y_range, wd=1e-1)","5f029234":"learn.lr_find()\nlearn.recorder.plot(skip_end=15)","a512c0fb":"learn.fit_one_cycle(5, 5e-3)","c507e4ed":"learn.save('dotprod')","41522a32":"learn.load('dotprod');","db58c173":"learn.model","3b6ca49f":"g = rating_movie.groupby(title)['rating'].count()\ntop_movies = g.sort_values(ascending=False).index.values[:1000]\ntop_movies[:10]","7fce91a3":"movie_bias = learn.bias(top_movies, is_item=True)\nmovie_bias.shape","a5914dae":"mean_ratings = rating_movie.groupby(title)['rating'].mean()\nmovie_ratings = [(b, i, mean_ratings.loc[i]) for i,b in zip(top_movies,movie_bias)]","13a45949":"item0 = lambda o:o[0]","07286d5e":"sorted(movie_ratings, key=item0)[:15]","53a272a2":"sorted(movie_ratings, key=lambda o: o[0], reverse=True)[:15]","e79ba4b3":"movie_w = learn.weight(top_movies, is_item=True)\nmovie_w.shape","08ee7cc4":"movie_pca = movie_w.pca(3)\nmovie_pca.shape","2d6700de":"fac0,fac1,fac2 = movie_pca.t()\nmovie_comp = [(f, i) for f,i in zip(fac0, top_movies)]","7beac57d":"sorted(movie_comp, key=itemgetter(0), reverse=True)[:10]","7c75fa83":"sorted(movie_comp, key=itemgetter(0))[:10]","b8107856":"movie_comp = [(f, i) for f,i in zip(fac1, top_movies)]","d95f1dcd":"sorted(movie_comp, key=itemgetter(0), reverse=True)[:10]","4016a816":"sorted(movie_comp, key=itemgetter(0))[:10]","3fa30125":"idxs = np.random.choice(len(top_movies), 50, replace=False)\nidxs = list(range(50))\nX = fac0[idxs]\nY = fac2[idxs]\nplt.figure(figsize=(15,15))\nplt.scatter(X, Y)\nfor i, x, y in zip(top_movies[idxs], X, Y):\n    plt.text(x,y,i, color=np.random.rand(3)*0.7, fontsize=11)\nplt.show()","a1475444":"## Interpretation","6eeec8d2":"Here's [some benchmarks](https:\/\/www.librec.net\/release\/v1.3\/example.html) on the same dataset for the popular Librec system for collaborative filtering. They show best results based on RMSE of 0.91, which corresponds to an MSE of `0.91**2 = 0.83`.","ba75f3dd":"## Movielens 100k","30a62ce1":"Let's try with the full Movielens 100k data dataset, available from http:\/\/files.grouplens.org\/datasets\/movielens\/ml-100k.zip","cbcefe0f":"### Setup","36b4a2ae":"`collab` models use data in a `DataFrame` of user, items, and ratings.","6560f60f":"That's all we need to create and train a model:","96a8da18":"### Movie weights","90a2ca18":"## Collaborative filtering example","3cc93555":"[Lesson Video Link](https:\/\/course.fast.ai\/videos\/?lesson=4)\n\n[Lesson resources and updates](https:\/\/forums.fast.ai\/t\/lesson-4-official-resources-and-updates\/30317)\n\n[Lesson chat](https:\/\/forums.fast.ai\/t\/lesson-4-in-class-discussion\/30318\/12)\n\n[Further discussion thread](https:\/\/forums.fast.ai\/t\/lesson-4-advanced-discussion\/30319)\n\nNote: This is a mirror of the FastAI Lesson 4 Nb. \nPlease thank the amazing team behind fast.ai for creating these, I've merely created a mirror of the same here\nFor complete info on the course, visit course.fast.ai","cd948ad4":"### Movie bias"}}