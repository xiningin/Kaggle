{"cell_type":{"ec382662":"code","320224f7":"code","ddc3ffbc":"code","0b049222":"code","5781cd95":"code","6cd40ca2":"code","00fb9f17":"code","c8dc8a49":"code","43a07b87":"code","eff6c258":"code","e30a6298":"code","ee60e1d7":"code","693b8f1f":"code","539e1324":"code","89f7d662":"code","096b7c82":"code","3df34304":"code","6b9a8e7a":"code","e49564e5":"code","0ced7e39":"code","9f229eeb":"code","34cc9353":"code","9c597895":"code","003bc0d6":"code","fd5b626a":"code","ce5c7412":"code","d9bed63a":"code","5936f4d6":"code","01e35f31":"code","d969ebdc":"code","5fc7a12b":"code","874a65d3":"code","cceb1a47":"code","08f5cf7b":"code","544370ad":"code","12b504cf":"code","f65fcc63":"code","f387adaf":"code","f4d368cb":"code","4835b5fb":"code","536b40ef":"code","ca3fb181":"code","2a5c66ef":"code","e73e5d2e":"code","cb70495c":"code","b2540b15":"code","0e08095f":"code","a0052afa":"code","5e5b3359":"code","02b51fc2":"code","e66995f5":"code","49af34fa":"code","3e85b121":"code","8f560248":"code","daa3d4e4":"markdown","da3708dd":"markdown","b5c51123":"markdown","03f23fdd":"markdown","4dc7c1af":"markdown","4e3cb269":"markdown","271b689a":"markdown","fa9c2617":"markdown","f7807ae0":"markdown","73580954":"markdown","7617cc75":"markdown","012983e2":"markdown","5ffaabf2":"markdown","d5c7e9d4":"markdown","d0574644":"markdown","f74aeefe":"markdown","dc6925a7":"markdown","2b53daf3":"markdown","424c03cc":"markdown","7c306b49":"markdown","00653776":"markdown","04475da5":"markdown","857a4523":"markdown","1351f186":"markdown","ab21ca97":"markdown","059eb6d5":"markdown","6b1f366f":"markdown","ee76d9c1":"markdown","87397051":"markdown","c87eaf98":"markdown","99189d90":"markdown","faa4d5a6":"markdown","40b2606c":"markdown","c1d593db":"markdown","72c2c151":"markdown","6e5dec82":"markdown","7b97d7fb":"markdown","4509ce52":"markdown","b587d423":"markdown","865c0a45":"markdown","ccb00def":"markdown"},"source":{"ec382662":"import numpy as np \nimport pandas as pd\n%matplotlib inline\nimport matplotlib as mp \nimport matplotlib.pyplot as plt \nimport matplotlib.image as mpimg\nimport seaborn as sns ","320224f7":"airbnb_data = pd.read_csv('..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\nairbnb_data.head()","ddc3ffbc":"airbnb_data.shape","0b049222":"airbnb_data.info()","5781cd95":"airbnb_data.drop(['name', 'host_name', 'last_review', 'host_id'], axis=1, inplace= True)\nairbnb_data.head()","6cd40ca2":"airbnb_data.describe()","00fb9f17":"airbnb_data.fillna({'reviews_per_month': 0}, inplace=True)","c8dc8a49":"airbnb_data.isnull().sum()","43a07b87":"airbnb_data.duplicated().sum()","eff6c258":"airbnb_data.neighbourhood_group.unique()","e30a6298":"airbnb_data.neighbourhood_group.value_counts()","ee60e1d7":"sns.set_theme(style=\"darkgrid\")\nplt.figure(figsize=(10,6))\nsns.countplot(x='neighbourhood_group', data= airbnb_data)\nplt.title('Airbnb Borough Listings')","693b8f1f":"plt.figure(figsize=(10,6))\nsns.scatterplot(data= airbnb_data, x= 'longitude', y= 'latitude', hue='neighbourhood_group')\nplt.title('Map showing listings in NYC boroughs')","539e1324":"airbnb_data.room_type.value_counts()","89f7d662":"plt.figure(figsize=(10,6))\nsns.countplot(x='room_type', data=airbnb_data)\nplt.title('Airbnb listings in NYC by room type')","096b7c82":"data_room_type_borough = airbnb_data.groupby(['neighbourhood_group', 'room_type'])\ndata_room_type_borough.size()","3df34304":"plt.figure(figsize=(10,6))\nsns.countplot(hue='room_type', x='neighbourhood_group', data=airbnb_data, palette='Set2')\nplt.title('Listings in NYC boroughs by room type')","6b9a8e7a":"plt.figure(figsize=(10, 6))\nsns.scatterplot(data= airbnb_data, x='longitude', y='latitude', hue='room_type', palette='Set2')\nplt.title('Airbnb listings in NYC by room type')","e49564e5":"plt.figure(figsize=(10,6))\nsns.boxplot(data = airbnb_data, x='neighbourhood_group', y='availability_365')\nplt.title('Room availability in each borough')","0ced7e39":"plt.figure(figsize=(10, 6))\nsns.scatterplot(data= airbnb_data, x='longitude', y='latitude', hue='availability_365')\nplt.title('Airbnb listings by year-round room availability')","9f229eeb":"plt.figure(figsize=(10,6))\nsns.histplot(data=airbnb_data, x='price')\nplt.title('Listings price distribution')","34cc9353":"plt.figure(figsize=(10, 6))\nsns.boxplot(data = airbnb_data, x='neighbourhood_group', y='price')\nplt.title('Listing Price quartiles of each borough')","9c597895":"airbnb_data[airbnb_data['price'] > 1000].count()","003bc0d6":"airbnb_data.drop(airbnb_data[airbnb_data['price'] > 1000].index, inplace=True)\nairbnb_data.count()","fd5b626a":"plt.figure(figsize=(10,6))\nsns.histplot(data=airbnb_data[airbnb_data['price'] <= 500], x='price')\nplt.title('Listings price distribution')","ce5c7412":"plt.figure(figsize=(10,6))\nsns.boxplot(data = airbnb_data, x='neighbourhood_group', y='price')\nplt.title('Listing Price quartiles of each borough')","d9bed63a":"borough_mean_prices = airbnb_data.groupby('neighbourhood_group')['price'].mean().reset_index()","5936f4d6":"borough_mean_prices","01e35f31":"plt.figure(figsize=(10,6))\nsns.barplot(data=borough_mean_prices, x='neighbourhood_group', y='price')\nplt.title('Mean prices of listings in NYC by borough')","d969ebdc":"price_by_room_type = airbnb_data.groupby('room_type')['price'].mean().reset_index()\nprice_by_room_type","5fc7a12b":"plt.figure(figsize=(10,6))\nsns.barplot(data=price_by_room_type, x='room_type', y='price')\nplt.show('Mean prices of listing by availanle room type')","874a65d3":"airbnb_data['minimum_nights'].describe()","cceb1a47":"airbnb_data[airbnb_data['minimum_nights'] > 30]['minimum_nights'].count()","08f5cf7b":"airbnb_data.loc[ airbnb_data['minimum_nights'] > 30, 'minimum_nights' ] = 30","544370ad":"plt.figure(figsize=(10,6))\nsns.histplot(x='minimum_nights', data=airbnb_data)\nplt.title('Distribution of listings by minimum nights stay requirement')","12b504cf":"plt.figure(figsize=(10,6))\nsns.scatterplot(x='minimum_nights', y='price', data=airbnb_data)\nplt.title('Price v Minimum nights stay')","f65fcc63":"airbnb_data['minimum_nights'].corr(airbnb_data['price'])","f387adaf":"plt.figure(figsize=(10,6))\nsns.scatterplot(x='availability_365', y='price', data= airbnb_data)\nplt.title('Price v Year round room availability')","f4d368cb":"airbnb_data['availability_365'].corr(airbnb_data['price'])","4835b5fb":"airbnb_data.info()","536b40ef":"airbnb_data.drop(columns=['neighbourhood'], inplace=True)","ca3fb181":"\nfinal_prep_data = pd.get_dummies(airbnb_data, columns=['neighbourhood_group', 'room_type'], prefix = ['ng', 'rt'])\n\nfinal_prep_data.head()","2a5c66ef":"final_prep_data.columns","e73e5d2e":"from sklearn.model_selection import train_test_split\n\nX = final_prep_data[[col for col in list(final_prep_data.columns) if col != 'price'] ]\ny = final_prep_data['price']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state= 42)","cb70495c":"from sklearn.linear_model import LinearRegression\n\nlinear_reg = LinearRegression()\nlinear_reg.fit(X_train, y_train)\n\npredictions = linear_reg.predict(X_test)\npredictions","b2540b15":"actual_values = y_test.values\nactual_values","0e08095f":"from sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import mean_absolute_error\n\nmea = mean_absolute_error(y_test, predictions)\n\nmse = mean_squared_error(y_test, predictions)\nrmse = np.sqrt(mse)\n\nprint('The root mean squared error is: ', rmse)","a0052afa":"print('The mean absolute error is: ', mea)","5e5b3359":"from sklearn.metrics import r2_score\n\nr2 = r2_score(y_test, predictions)\n\nprint('The R^2 value is: ', r2)","02b51fc2":"from sklearn.ensemble import RandomForestRegressor\nforest_reg = RandomForestRegressor()\nforest_reg.fit(X_train, y_train)\n\npredictions = forest_reg.predict(X_test)\npredictions","e66995f5":"actual_values = y_test.values \nactual_values","49af34fa":"mae = mean_absolute_error(y_test, predictions)\nlmse = mean_squared_error(y_test, predictions)\n\nrmse = np.sqrt(lmse)\nprint('The mean absolute error is: ', mae)","3e85b121":"print('The root mean squared error is: ', rmse)","8f560248":"r2_score_random_forest = r2_score(y_test, predictions)\nprint('The R^2 value is: ', r2_score_random_forest)","daa3d4e4":"Minimum nights policy of rentals","da3708dd":"Dataset shape","b5c51123":"Let us explore the types of rooms available","03f23fdd":"## EDA Visualization of Data","4dc7c1af":"## Preparing data for machine learning algorithms","4e3cb269":"#### Some observations\n\n- An R^2 value of 0.33 indicates that 33% of the 'price' variance can be explained by the X attributes we took in our independent variable, for ex: 'latitude', 'longitude', 'neighbourhood_group',etc.\n\n- This is far from the best model to accurately predict rental prices and powerful models such as a Random forest regressor can be used. In the next version of this notebook, I will include a random forest model and see how it compares to our linear model\n","271b689a":" Drop columns that reveal personal information like 'name', 'host_name' and 'last_review'","fa9c2617":"Predicting values with our trained model","f7807ae0":"All categorical\/object attributes are converted to numeric indivcator variables. We now extract test and training sets from this encoded dataframe.","73580954":"Now calculating the degree of error in this model","7617cc75":"#### Some Observations\n\n- A random forest model gives a R^2 value of 0.46. This means that around 47% of the 'price' variance can be explained by all the x variables or attributes.\n\n- This is quite an improvement from the 33% we got with our linear model.\n\n- The accuracy of this model can be improved further with hyperparameter tuning with GridSearchCV or RandomizedSearchCV","012983e2":"A clear pattern between year-round room availability and listing location is not seen.","5ffaabf2":"Manhattan has the highest number of airbnb listings, closely followed by Brooklyn, and then Queens and Bronx. Staten Island has the least listings.","d5c7e9d4":"Analysis of listing prices","d0574644":"Creating a simple linear regression model and training it with test splits.","f74aeefe":"Import libraries needed in this notebook","dc6925a7":"## Loading Data","2b53daf3":"Almost every borough has more entire home\/apartments than private and shared rooms, except Brooklyn, where there are private room listings than apartment\/entire home.","424c03cc":"Overview of the dataset","7c306b49":"Replace null values in 'reviews_per_month' with 0","00653776":"Let us compare these types by borough","04475da5":"Removing outliers in prices","857a4523":"## Using a random forest model","1351f186":"Measuring errors","ab21ca97":"Manhattan is the most expensive place to rent an airbnb in NYC while Bronx is the most most inexpensive.","059eb6d5":"We see that 'minimum_nights' and 'availability_365' have a somewhat positive correlation with 'price'","6b1f366f":"Notice that most of the rooms rented are entire home\/apartment type followed by private type, and only a small number are shared.","ee76d9c1":"We need to remove outliers from this data as there is no way a rental can have a minimum stay requirement of 1250 nights!","87397051":"Remove all listings with a price greater than 1000USD. These values are outliers and skew the data.","c87eaf98":"Boroughs of NYC","99189d90":"## Creating a simple linear regression model ","faa4d5a6":"Calculating the R^2 value of our model","40b2606c":"Let us now see how the room_type affects the price of a listing","c1d593db":"Boxplot showing quartile data of room availability in each borough","72c2c151":"The number of airbnb listings in these boroughs are:","6e5dec82":"We are dropping the column 'neighbourhood' for simplicity ","7b97d7fb":"Load the dataset and convert it to a pandas dataframe","4509ce52":"Availability of rooms","b587d423":"We create a dummy categorical set containing encoded values. Numerical data is unchanged","865c0a45":"Impressive! We now have zero null and duplicated values in our data","ccb00def":"The average price of an entire home\/apt rental is the highest of the three at 194 USD followed by that of a private room, and then a shared room at 67 USD"}}