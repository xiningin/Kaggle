{"cell_type":{"873aa212":"code","ce6587d9":"code","6672a547":"code","13aa85da":"code","9008e1ee":"code","1d65d99f":"code","ea1cd207":"code","a2ab5f16":"code","6bc44aef":"code","7363365d":"code","a9a0a967":"code","8776ea91":"code","fbf47601":"code","4e37933e":"code","7273d1c2":"code","2eaf1867":"code","3547816e":"code","9b8edab8":"code","7aaaf3f0":"code","949fca25":"code","8f447dcf":"code","282eca12":"code","b891c25a":"code","5a6d01b5":"code","064ae302":"code","900f6c87":"code","2da8579b":"markdown","f29c8715":"markdown","d6d8e928":"markdown","1c29ab3b":"markdown","43516167":"markdown","044154d7":"markdown","754a2e09":"markdown"},"source":{"873aa212":"import pandas as pd\nimport numpy as np\ndf = pd.read_csv('\/kaggle\/input\/red-wine-dataset\/wineQualityReds.csv',index_col=0)\ndf.head()","ce6587d9":"!ls \/kaggle\/input\/wine-dataset","6672a547":"colnames = ['y','Alcohol', 'Malic acid', 'Ash', 'Alcalinity of ash', 'Magnesium', 'Total phenols', 'Flavanoids', 'Nonflavanoid phenols', 'Proanthocyanins', 'Color intensity', 'Hue', 'OD280\/OD315 of diluted wines', 'Proline']\ndf = pd.read_csv('\/kaggle\/input\/wine-dataset\/wine_data.csv',index_col=None,header=None)\ndf.columns = colnames\ndf.head()","13aa85da":"y = df.iloc[:,0]\nX = df.iloc[:,1:]","9008e1ee":"print(y.unique(),y.mean())","1d65d99f":"df.y.hist()","ea1cd207":"df.plot.scatter(x='Alcalinity of ash',y='Total phenols',c='y',cmap='Accent',alpha=0.6)","a2ab5f16":"import seaborn as sns\ng=sns.PairGrid(df,hue='y')\ng.map_diag(sns.histplot)\ng.map_offdiag(sns.scatterplot,cmap='Accent',alpha=0.6)\ng.add_legend(title=\"\", adjust_subtitles=True);","6bc44aef":"dftrain = df[['Proline','Color intensity','y']]\ndftrain.plot.scatter(x='Proline',y='Color intensity',c='y',cmap='Accent')","7363365d":"from sklearn.neighbors import KNeighborsClassifier","a9a0a967":"X = dftrain[['Proline','Color intensity']]\ny = dftrain.y","8776ea91":"clf = KNeighborsClassifier(n_neighbors=5)\nclf.fit(X,y)","fbf47601":"yhat = clf.predict(X)","4e37933e":"from sklearn.metrics import accuracy_score\naccuracy_score(yhat,y)","7273d1c2":"Xarr = X.values\nyarr = y.values","2eaf1867":"clf = KNeighborsClassifier(n_neighbors=5)\nclf.fit(Xarr,yarr)","3547816e":"#Erstelle ein Gitter von Datenpunkten\nx_min, x_max = Xarr[:, 0].min() - 1, Xarr[:, 0].max() + 1\ny_min, y_max = Xarr[:, 1].min() - 1, Xarr[:, 1].max() + 1\n\nxx, yy = np.meshgrid(np.linspace(x_min, x_max,100 ), np.linspace(y_min, y_max, 100))","9b8edab8":"# Erstelle f\u00fcr jeden Gitterpunkt eine Vorhersage\nZ = clf.predict(np.c_[xx.ravel(), yy.ravel()])\nZ = Z.reshape(xx.shape)","7aaaf3f0":"import matplotlib.pyplot as plt\nplt.contourf(xx, yy, Z, alpha=0.4)\nplt.scatter(Xarr[:, 0], Xarr[:, 1], c=y, s=20, edgecolor=\"k\")","949fca25":"yhat = clf.predict(Xarr)\naccuracy_score(yhat,y)","8f447dcf":"X.describe()","282eca12":"Xneu = (X-X.mean())\/X.std()","b891c25a":"Xarr = Xneu.values","5a6d01b5":"clf = KNeighborsClassifier(n_neighbors=5)\nclf.fit(Xarr,yarr)","064ae302":"#Erstelle ein Gitter von Datenpunkten\nx_min, x_max = Xarr[:, 0].min() - 1, Xarr[:, 0].max() + 1\ny_min, y_max = Xarr[:, 1].min() - 1, Xarr[:, 1].max() + 1\n\nxx, yy = np.meshgrid(np.linspace(x_min, x_max,100 ), np.linspace(y_min, y_max, 100))\n# Erstelle f\u00fcr jeden Gitterpunkt eine Vorhersage\nZ = clf.predict(np.c_[xx.ravel(), yy.ravel()])\nZ = Z.reshape(xx.shape)\nimport matplotlib.pyplot as plt\nplt.contourf(xx, yy, Z, alpha=0.4)\nplt.scatter(Xarr[:, 0], Xarr[:, 1], c=y, s=20, edgecolor=\"k\")","900f6c87":"yhat = clf.predict(Xarr)\naccuracy_score(yhat,y)","2da8579b":"Die obigen Klassengrenzen sind ung\u00fcnstig, unnat\u00fcrlich. Dies, weil die zwei Mermale unterschiedlich skaliert sind:","f29c8715":"# Visualisierung der Klassengrenzen\nDer folgende code zeigt die Klassengrenzen unseres kNN-Klassifikators sowie die Trainingsdaten an.","d6d8e928":"**Aufgabe:** \nWelcher Wert von n_neighbors ist wohl der beste?","1c29ab3b":"# Klassengrenzen nach Normalisierung","43516167":"# Feature Selection und Feature Engineering\nIm Folgenden schr\u00e4nken wir uns der Einfachheit halber auf zwei Merkmale ein: ","044154d7":"# KNN-Klassifikation","754a2e09":"# Statistiken \u00fcber Serien\nEine pd.Series ist eine 1-dimensionale Datenreihe, wie z.B. jede Spalte.  \n**\u00dcbung:** Suchen Sie Pandas Methoden, um von einer Series einen Mittelwert, eine Standardabweichung, das Maximum und den Median zu berechnen."}}