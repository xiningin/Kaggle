{"cell_type":{"84b58941":"code","b2142255":"code","bd5a68dc":"code","e0a68956":"code","6b064c78":"code","4102f6bf":"code","3c0bbff5":"code","0b4218f4":"code","410b2c35":"code","b48dc3ae":"code","ec8315f3":"code","0ae9b105":"code","0fda60e1":"code","ebee4960":"code","2fa07477":"code","4eb9575b":"code","d362cb96":"code","2ead0802":"code","b481ddfa":"code","99baa731":"code","167203fb":"code","80fddb2d":"markdown","32a7e0ca":"markdown"},"source":{"84b58941":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b2142255":"data = pd.read_csv(\"\/kaggle\/input\/terrorism-in-turkey-19962017\/TableOfTurkey.csv\")\ndata.head(5)","bd5a68dc":"data.info()","e0a68956":"data.columns","6b064c78":"data.corr()","4102f6bf":"f,ax = plt.subplots(figsize=(14, 14))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","3c0bbff5":"data.columns\nplt.scatter(data.Year,data.Killed, color=\"red\", alpha=0.5)","0b4218f4":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata.Year.plot(kind = 'line', color = 'g',label = 'Year',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.Wounded.plot(color = 'b',label = 'Wounded',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","410b2c35":"data.plot(kind=\"scatter\", x=\"Year\", y=\"Wounded\", alpha=0.5,color=\"blue\")\nplt.xlabel('Year')\nplt.ylabel('Wounded')","b48dc3ae":"data.Year.plot(kind=\"hist\", bins=50,figsize=(12,12), color=\"green\")\nplt.show()","ec8315f3":"data.Year.plot(kind = 'hist',bins = 50)","0ae9b105":"dictionary = {'Ankara' : '\u00c7ankaya', '\u0130zmir' : 'Kar\u015f\u0131yaka'}\nprint(dictionary.keys())\nprint(dictionary.values())","0fda60e1":"dictionary['\u0130stanbul'] = \"Taksim\"\nprint(dictionary)\ndictionary['Ankara'] = \"Ke\u00e7i\u00f6ren\"\nprint(dictionary)\ndel dictionary['\u0130stanbul']\nprint(dictionary)\nprint('Ankara' in dictionary)\ndictionary.clear()\nprint(dictionary)","ebee4960":"#del dictionary","2fa07477":"series = data[\"Wounded\"]\nprint(type(series))\ndata_frame = data[[\"Wounded\"]]\nprint(type(data_frame))","4eb9575b":"print(7 > 3)\nprint(7!=3)\n# Boolean operators\nprint(True and False)\nprint(True or False)","d362cb96":"x = data['Year']>2000\ndata[x]","2ead0802":"data[np.logical_and(data['Year']>2000, data['Target_type']==\"Military\")]","b481ddfa":"data[(data['Year']>2000) & (data['Wounded']==5.0)]","99baa731":"i=0\nwhile i != 10:\n    print(\"i is : \", i)\n    i +=1\nprint(i, \"is equal to 10\")","167203fb":"list = [2,4,6,8]\nfor i in list:\n    print(\"i is : \", i)\nprint('')\n\nfor index, value in enumerate(list):\n    print(index,\" : \",value)\nprint('')  \n\ndictionary = {'Ankara' : '\u00c7ankaya', '\u0130zmir' : 'Kar\u015f\u0131yaka'}\nfor key,value in dictionary.items():\n    print(key,\" : \",value)\nprint(\"\")    \n\nfor index,value in data[['Wounded']][0:1].iterrows():\n    print(index,\" : \",value)","80fddb2d":"1. INTRODUCTION TO PYTHON","32a7e0ca":"DICTIONARY"}}