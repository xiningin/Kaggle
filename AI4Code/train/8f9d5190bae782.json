{"cell_type":{"f5bb062d":"code","5475b469":"code","b4d366d9":"code","952933bb":"code","022934d3":"markdown","3aea8c04":"markdown"},"source":{"f5bb062d":"!pip install autoviz\nimport numpy as np\nimport pandas as pd \nfrom autoviz.AutoViz_Class import AutoViz_Class\nAV = AutoViz_Class()","5475b469":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b4d366d9":"df = pd.read_csv('..\/input\/buildingdatagenomeproject2\/solar_cleaned.csv')\ndf.head()","952933bb":"df = AV.AutoViz(filename=\"\",sep=',', depVar='Bobcat_education_Dylan', dfte=df, header=0, verbose=2, \n                 lowess=False, chart_format='svg', max_rows_analyzed=150000, max_cols_analyzed=30)","022934d3":"Das War's, Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke ","3aea8c04":"#AutoViz: A New Tool for Automated Visualization, Written on December 28th, 2019 by Dan Roth.\n\nIt is not hard to see how helpful automated visualization can be. Within moments, the library is capable of generating highly informational plots and provides many pathways of potential expansion for a data scientist's modeling or analysis pipeline. AutoViz is meant to be integrated within a systematic iterative process. Exploratory data analysis (EDA) can be effectively initiated with AutoViz; features can be selected based on the tool's analysis and then the data can be repeatedly processed for automatic visualization. Once strong visualizations are generated, a data scientist can now jump into modeling or communicating the data with a well informed analysis. It is surprising that automated visualization options are so sparse given its many conceivable uses as an objective and practical tool, but AutoViz thankfully fulfills this role to great effect. Now let's get some visualizations going!https:\/\/danrothdatascience.github.io\/datascience\/autoviz.html"}}