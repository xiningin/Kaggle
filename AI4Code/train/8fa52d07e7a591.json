{"cell_type":{"123e2958":"code","2bc8fd66":"code","6c24aa42":"code","ace09486":"code","4b7543ac":"code","081f69b3":"code","6d76e5a4":"code","1fb7ad6b":"code","1a605a01":"code","d1524fe5":"code","1aa1d0dd":"code","963b81a8":"code","c1f6e3b6":"code","5a05fcd7":"code","9eed6425":"code","366ddae5":"code","55ce976b":"code","9addedb1":"code","0e52a1ce":"code","4a74c191":"markdown","1cd984fa":"markdown"},"source":{"123e2958":"import pandas as pd\nimport numpy as np\nimport xgboost as xgb","2bc8fd66":"train= pd.read_csv('..\/input\/train.csv')\ntest=pd.read_csv('..\/input\/test.csv')","6c24aa42":"# \ud6c8\ub828 \ub370\uc774\ud130\uc758 \ub370\uc774\ud130 \ud06c\uae30\ub97c \ud655\uc778\ntrain.shape","ace09486":"train.head()","4b7543ac":"# \ubcc0\uc218\ubcc4 \ub370\uc774\ud130 \ubc0f \ud0c0\uc785 \ud655\uc778\nfor col in train.columns:\n    print('{}\\n'.format(train[col].head()))","081f69b3":"train.info()","6d76e5a4":"#\uc218\uce58\ud615 \ubcc0\uc218 \uc0b4\ud3b4\ubcf4\uae30\nnum_cols = [col for col in train.columns if train[col].dtype in ['int64','float64']]\ntrain[num_cols].describe()","1fb7ad6b":"# \ubc94\uc8fc\ud615 \ubcc0\uc218 \uc0b4\ud3b4\ubcf4\uae30\ncat_cols = [col for col in train.columns if train[col].dtype in ['O']]\ntrain[cat_cols].describe()","1a605a01":"# \ubc94\uc8fc\ud615 \ubcc0\uc218\uc758 \uace0\uc720\uac12 \ucd9c\ub825\nfor col in cat_cols:\n    uniq = np.unique(train[col].astype(str))\n    print('-'*50)\n    print('# col {}, n_uniq {}, uniq {}'.format(col,len(uniq), uniq))","d1524fe5":"import matplotlib\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\nimport seaborn as sns","1aa1d0dd":"# \ubcc0\uc218\ub97c \ub9c9\ub300 \uadf8\ub798\ud504\ub85c \uc2dc\uac01\ud654\ud558\uae30\nskip_cols = ['PassengerId','Name']\nfor col in train.columns:\n    \n    # PassengerId\uc640 Name\uc740 \uc758\ubbf8\uac00 \uc5c6\uc73c\ubbc0\ub85c \uc0dd\ub7b5\ud55c\ub2e4\n    if col in skip_cols:\n        continue\n    \n    print('-'* 50)\n    print('col: ', col)\n    \n    f, ax = plt.subplots(figsize=(20,15))\n    sns.countplot(x=col, data=train, alpha=0.5)\n    plt.show()","963b81a8":"np.random.seed(2019)\n\n# \ub370\uc774\ud130 \uc804\ucc98\ub9ac\n\n# train data\uc640 test data\uc758 \ud1b5\ud569\ndf= pd.concat([train,test],sort=False)\n\n# \ud559\uc2b5\uc5d0 \uc774\uc6a9\ud560 feature \ub2f4\uae30\nfeatures = []\n\n# \ubc94\uc8fc\ud615 \ubcc0\uc218 label encoding\ncategorical_cols = ['Sex','Cabin','Embarked']\n\nfor col in categorical_cols:\n    df[col],_= df[col].factorize(na_sentinel=-99)\n\nfeatures += categorical_cols\n\n# Survied test \ub370\uc774\ud130\ub294 \uc6b0\uc120 -1\ub85c \ucc44\uc6b4\ub2e4\ndf['Survived'].fillna(-1, inplace= True)\n\n# \uc218\uce58\ud615 \ubcc0\uc218 \uc804\ucc98\ub9ac\n# \uacb0\uce21\uce58\ub97c \ubaa8\ub450 -99\ub85c \ub300\uccb4\ud55c\ub2e4\ndf.fillna(-99, inplace =True)\n\nfeatures += ['Pclass','Age','SibSp','Parch','Fare']","c1f6e3b6":"features","5a05fcd7":"# xgboost \ubaa8\ub378 \ud559\uc2b5\nparam = {\n    'booster': 'gbtree',\n    'max_depth': 8,\n    'nthread':4,\n    'objective':'binary:hinge',\n    'silent':1,\n    'eval_metric':'error',\n    'eta':0.1,\n    'min_child_weight':10,\n    'colsample_bytree':0.8,\n    'colsample_bylevel':0.9,\n    'seed':2019,\n}","9eed6425":"# train\uacfc test\ub97c \ud1b5\ud569\ud588\ub358 df \uc5d0\uc11c \ub2e4\uc2dc \ubd84\ub9ac\ud55c\ub2e4\n\ndtrn= df[:891]\ndtest=df[891:]\n\nX_trn= dtrn.as_matrix(columns=features)\nY_trn= dtrn.as_matrix(columns=['Survived'])\ndtrn = xgb.DMatrix(X_trn, label=Y_trn, feature_names=features)","366ddae5":"watch_list = [(dtrn,'train')]\nmodel= xgb.train(param,dtrn,num_boost_round=1000, evals=watch_list, early_stopping_rounds=20)","55ce976b":"# \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \uac12 \uc608\uce21\nX_test= dtest.as_matrix(columns=features)\ndtst=xgb.DMatrix(X_test, feature_names=features)\npred_tst= model.predict(dtst)","9addedb1":"psgId=np.array(dtest['PassengerId'].tolist())\n\nresult=np.stack((psgId, pred_tst), axis=-1)\n\nresult=result.astype(int)\n\nfinal_result = pd.DataFrame(result, columns=['PassengerId','Survived'])","0e52a1ce":"final_result.to_csv('.\/submission.csv',index=False)","4a74c191":"# \ub370\uc774\ud130 \ubd84\uc11d","1cd984fa":"# \ubaa8\ub378 \uc0dd\uc131"}}