{"cell_type":{"fed5f5d2":"code","304d482d":"code","8ce2f074":"code","3c850b19":"code","650ffa00":"code","dfb480aa":"code","fd63b9b0":"code","e3302fd1":"code","f8ece442":"code","3b5454d0":"code","c46ab2a2":"code","7a74d6ba":"code","3cbfa93d":"code","0252f7be":"code","b99901f0":"code","ef17e519":"code","594dc3b3":"code","808d650a":"code","27d0cee6":"code","a62bbd71":"code","16924341":"code","6713e6f9":"code","cd3db76c":"code","01f5368b":"code","078a5188":"code","840dc5ab":"code","cb5fdfed":"markdown","ffc2d1d0":"markdown","c8011d5c":"markdown","dc9b2233":"markdown","29a9440f":"markdown","f025682f":"markdown","c0073886":"markdown","eeb88747":"markdown","a5094d9d":"markdown","fcefdd77":"markdown"},"source":{"fed5f5d2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","304d482d":"pip install openpyxl","8ce2f074":"pip install xlrd","3c850b19":"import datetime as dt\nimport pandas as pd\npd.set_option('display.max_columns', None)\n# pd.set_option('display.max_rows', None)\n# pd.set_option('display.float_format', lambda x: '%.5f' % x)\n","650ffa00":"#Online Retail II excelindeki 2010-2011 verisini okutup olu\u015fturdu\u011funuz dataframe\u2019in kopyas\u0131n\u0131 olu\u015ftural\u0131m ve head alal\u0131m.\ndf_ = pd.read_excel(\"..\/input\/online-retail-ii-data-set-from-ml-repository\/online_retail_II.xlsx\", sheet_name=\"Year 2010-2011\")\ndf = df_.copy()\ndf.head()","dfb480aa":"# Veri setinin betimsel istatistiklerini inceleyelim.\ndf.describe([0.25,0.75,0.99]).T","fd63b9b0":"# 3. Veri setinde eksik g\u00f6zlem var m\u0131? Varsa hangi de\u011fi\u015fkende ka\u00e7 tane eksik g\u00f6zlem va bunlara g\u00f6z atal\u0131m.\ndf.isnull().sum()\n","e3302fd1":"df.info()","f8ece442":"# Eksik g\u00f6zlemleri veri setinden \u00e7\u0131kartal\u0131m burada \u2018inplace=True\u2019parametresini kullanal\u0131m.\ndf.dropna(inplace=True)\n","3b5454d0":"#E\u015fsiz \u00fcr\u00fcn say\u0131m\u0131za bakal\u0131m.\ndf[\"StockCode\"].nunique() # 4070\ndf[\"Description\"].nunique() # 4223","c46ab2a2":"#Hangi \u00fcr\u00fcnden ka\u00e7ar tane vard\u0131r?\ndf[\"Description\"].value_counts().head()","7a74d6ba":"# En \u00e7ok sipari\u015f edilen 5 \u00fcr\u00fcn\u00fc \u00e7oktan aza do\u011fru s\u0131ralayal\u0131m.\ndf.groupby(\"Description\").agg({\"Quantity\": \"sum\"}).sort_values(\"Quantity\", ascending=False).head()","3cbfa93d":"#Faturalardaki \u2018C\u2019 iptal edilen i\u015flemleri g\u00f6stermektedir. \u0130ptal edilen i\u015flemleri veri setinden \u00e7\u0131kartal\u0131m.\ndf = df[~df[\"Invoice\"].str.contains(\"C\", na=False)]","0252f7be":"# Fatura ba\u015f\u0131na elde edilen toplam kazanc\u0131 ifade eden \u2018TotalPrice\u2019 ad\u0131nda bir de\u011fi\u015fken olu\u015ftural\u0131m \u015fimdi de.\ndf[\"TotalPrice\"] = df[\"Quantity\"] * df[\"Price\"]","b99901f0":"df.head()","ef17e519":"df = df[df[\"TotalPrice\"] > 0]\n\ndf.head()","594dc3b3":"#M\u00fc\u015fteri \u00f6zelinde Recency, Frequency ve Monetary metriklerini groupby, agg ve lambda ile hesaplayal\u0131m.\n\ndf[\"InvoiceDate\"].max() # Timestamp('2011-12-09 12:50:00')\n\nanaliz_tarihi = dt.datetime(2011, 12, 11)\n\n\ndf.groupby('Customer ID').agg({'InvoiceDate': lambda date: (analiz_tarihi - date.max()).days,\n                                'Invoice': lambda num: num.nunique(),\n                                'TotalPrice': lambda TotalPrice: TotalPrice.sum()})\n\n\nrfm = df.groupby('Customer ID').agg({'InvoiceDate': lambda date: (analiz_tarihi - date.max()).days,\n                                     'Invoice': lambda num: num.nunique(),\n                                     'TotalPrice': lambda TotalPrice: TotalPrice.sum()})\n\n\nrfm.head()\n\nrfm.columns = ['recency', 'frequency', 'monetary']\n# rfm = rfm[rfm[\"monetary\"] > 0]\n\nrfm.head()","808d650a":"#Olu\u015fturdu\u011funuz metriklerin isimlerini recency, frequency ve monetary olarak de\u011fi\u015ftirelim.\nrfm[\"recency_score\"] = pd.qcut(rfm['recency'], 5, labels=[5, 4, 3, 2, 1])\nrfm[\"frequency_score\"] = pd.qcut(rfm['frequency'].rank(method=\"first\"), 5, labels=[1, 2, 3, 4, 5])\nrfm[\"monetary_score\"] = pd.qcut(rfm['monetary'], 5, labels=[1, 2, 3, 4, 5])\n\nrfm.head()","27d0cee6":"# Frekans skorunu hesaplarken kulland\u0131\u011f\u0131m\u0131z rank first nas\u0131l \u00e7al\u0131\u015fmakta bunu g\u00f6relim \n\na = pd.DataFrame([1,1,1,2,4,10])\na.columns =[\"a\"]\na\na[\"label\"] = pd.qcut(a[\"a\"].rank(method=\"first\"),3,labels=[1,2,3])\na\n\n\nrfm[\"recency_score\"].value_counts()\npd.crosstab(rfm['frequency'],rfm[\"frequency_score\"])\n\n\nrfm[\"RF_SCORE\"] = (rfm['recency_score'].astype(str) +\n                    rfm['frequency_score'].astype(str))\n\n\nrfm.head()","a62bbd71":"# RFM isimlendirmesi seg_map yard\u0131m\u0131 ile skorlar\u0131 segmentlere \u00e7evirelim\nseg_map = {\n    r'[1-2][1-2]': 'hibernating',\n    r'[1-2][3-4]': 'at_Risk',\n    r'[1-2]5': 'cant_loose',\n    r'3[1-2]': 'about_to_sleep',\n    r'33': 'need_attention',\n    r'[3-4][4-5]': 'loyal_customers',\n    r'41': 'promising',\n    r'51': 'new_customers',\n    r'[4-5][2-3]': 'potential_loyalists',\n    r'5[4-5]': 'champions'\n}\n\n","16924341":"rfm['segment'] = rfm['RF_SCORE'].replace(seg_map, regex=True)\nrfm.head()","6713e6f9":"rfm[[\"segment\", \"recency\", \"frequency\", \"monetary\"]].groupby(\"segment\").agg([\"mean\", \"count\"])\n","cd3db76c":"new_df = pd.DataFrame()\nnew_df[\"loyal_customers\"] = rfm[rfm[\"segment\"] == \"loyal_customers\"].index\nnew_df.head()","01f5368b":"rfm.head()\nrfm.reset_index(inplace=True)\nrfm.sort_values(\"monetary\", ascending=False, inplace=True)\nrfm.monetary.sum()*80\/100","078a5188":"sonuc = 0","840dc5ab":"for i in range(len(rfm)):\n    sonuc = sonuc + rfm.loc[i,\"monetary\"]\n    if sonuc > rfm.monetary.sum()*80\/100:\n        break\nprint(\"Toplam monetary de\u011feri: \" , rfm.monetary.sum())\nprint(f\"En y\u00fcksek monetary de\u011ferine sahip {i} g\u00f6zlem ile  {int(sonuc)} monetary de\u011ferine ula\u015f\u0131l\u0131yor\")\nprint(f\"Bu de\u011fer, toplam monetary de\u011ferinin {round(sonuc\/rfm.monetary.sum(),2)}'l\u0131k k\u0131sm\u0131na tekab\u00fcl ediyor.\")\nprint()\nprint(f\"Bu de\u011fere ilk {round(i\/rfm.monetary.shape[0],2)} g\u00f6zlemde ula\u015f\u0131l\u0131yor.\")\nprint(f\"PARETO -> {round(sonuc\/rfm.monetary.sum(),2)} monetary : {round((i\/rfm.shape[0]),2)} g\u00f6zlem.\")","cb5fdfed":"![](http:\/\/camo.githubusercontent.com\/a144d0cfd2c98ff1025197cb623bae64bfe3b188c0817afffa9a521a73df096a\/68747470733a2f2f6d69726f2e6d656469756d2e636f6d2f6d61782f393331322f312a61514c4f646175352d4a7634714753315233416941412e706e67)","ffc2d1d0":"* Bir e-ticaret \u015firketi m\u00fc\u015fterilerini segmentlere ay\u0131r\u0131p bu segmentlere g\u00f6re pazarlama stratejileri belirlemek istiyoruz.**\n* \u015eirket, ortak davran\u0131\u015flar sergileyen m\u00fc\u015fteri segmentleri \n\u00f6zelinde pazarlama \u00e7al\u0131\u015fmalar\u0131 yapman\u0131n gelir art\u0131\u015f\u0131 \nsa\u011flayaca\u011f\u0131n\u0131 d\u00fc\u015f\u00fcnmektedir.\n* \u00d6rne\u011fin \u015firket i\u00e7in \u00e7ok kazan\u00e7l\u0131 olan m\u00fc\u015fterileri elde tutmak \ni\u00e7in farkl\u0131 kampanyalar, yeni m\u00fc\u015fteriler i\u00e7in farkl\u0131 \nkampanyalar d\u00fczenlenmek istenmektedir.\n**M\u00fc\u015fterileri RFM y\u00f6ntemi ile segmentlere ay\u0131rmal\u0131y\u0131z.****","c8011d5c":"**RFM Skorlar\u0131n\u0131n Olu\u015fturul\u0131m ve Tek Bir De\u011fi\u015fkene \u00c7evrilim**","dc9b2233":"**De\u011fi\u015fkenler**\n* nvoiceNo \u2013 Fatura Numaras\u0131 \n**E\u011fer bu kod C ile ba\u015fl\u0131yorsa i\u015flemin iptal edildi\u011fini ifade eder.**\n* StockCode \u2013 \u00dcr\u00fcn kodu\n*Her bir \u00fcr\u00fcn i\u00e7in e\u015fsiz numara.*\n* Description \u2013 \u00dcr\u00fcn ismi\n* Quantity \u2013 \u00dcr\u00fcn adedi\n**Faturalardaki \u00fcr\u00fcnlerden ka\u00e7ar tane sat\u0131ld\u0131\u011f\u0131n\u0131 ifade etmektedir.**\n* InvoiceDate \u2013 Fatura tarihi\n* UnitPrice \u2013 Fatura fiyat\u0131 (Sterlin)\n* CustomerID \u2013 E\u015fsiz m\u00fc\u015fteri numaras\u0131\n* Country \u2013 \u00dclke ismi","29a9440f":"**Champions**\n* Recency si en d\u00fc\u015f\u00fck olan yani en son sat\u0131n alma s\u00fcrelerinin ortalamas\u0131 en d\u00fc\u015f\u00fck olan m\u00fc\u015fteri grubudur.\n* Al\u0131\u015fveri\u015f s\u0131kl\u0131\u011f\u0131 en fazla olan yani frequency si en y\u00fcksek olan m\u00fc\u015fteri grubudur.\n* En fazla geliri sa\u011flayan, monetary si en y\u00fcksek olan m\u00fc\u015fteri grubudur.\n* Yeni \u00fcr\u00fcn tan\u0131t\u0131m\u0131nda bu grup odak olabilir.\n* \u00d6demeye isteklidirler, bu y\u00fczden sat\u0131\u015flar\u0131 art\u0131rmak i\u00e7in indirimli fiyatlar\u0131 bu gruba sunmayabiliriz.\n* \u00d6deme konusunda \u00e7ekinmiyorlar, kdv de\u011feri y\u00fcksek \u00fcr\u00fcnleri \u00f6nerebiliriz. Bir \u00fcr\u00fcn\u00fcn en iyisini almak isteyeceklerdir.\n\n\n**Can't Loose**\n* Al\u0131\u015fveri\u015f s\u0131kl\u0131\u011f\u0131 y\u00fcksek (Frequency)\n* Sa\u011flad\u0131 gelir y\u00fcksek (Monetary)\n* \u00c7ok uzun s\u00fcre \u00f6nce al\u0131\u015fveri\u015f yapm\u0131\u015f.\n* Eskiden s\u0131k s\u0131k al\u0131\u015fveri\u015f yaparlard\u0131 geri d\u00f6nd\u00fcrmek \u00f6nemli.\n* \u0130ndirim teklifleri geri d\u00f6nmelerinde etkili olabilir.\n* \u00d6nerilen \u00fcr\u00fcnleri onlara g\u00f6re ki\u015file\u015ftirmek i\u015fe yarayabilir.\n\n\n**Loyal Customers**\n* Ortalama recency de\u011ferleri\n* Al\u0131\u015fveri\u015f yapma s\u0131kl\u0131\u011f\u0131 frequency 6.\n* Sa\u011flad\u0131\u011f\u0131 gelir y\u00fcksek.\n* \u00dcr\u00fcnlerle ilgili geri d\u00f6n\u00fc\u015f al\u0131nabilir, memnuniyelerine g\u00f6re kaybedilip kaybedilmeme durumu g\u00f6zlenir ve olumsuz d\u00f6n\u00fc\u015fler i\u00e7in \u00e7\u00f6z\u00fcm bulunabilir.\n* Bu m\u00fc\u015fterilerin de\u011ferli oldu\u011funu onlara hissettirmek gerekir. Hediyeler g\u00f6nderilebilir.","f025682f":"**RFM Skorlar\u0131n\u0131n Segment Olarak Tan\u0131mlayal\u0131m**","c0073886":"*Thank you for reading. I am waiting for your feedback.*","eeb88747":"# Customer Segmentation using RFM","a5094d9d":"**Bundan sonra RFM metriklerini hesaplayal\u0131m....**","fcefdd77":"# PARETO"}}