{"cell_type":{"a66fe7fb":"code","0cad9d38":"code","7b2fdc0a":"code","cc83c301":"code","84adfb79":"code","3351a6f0":"code","6ac7c982":"code","0e19d8b7":"code","6832504f":"code","17d1b3fb":"code","ecc132a6":"code","b560d98a":"code","f29d0db0":"code","19a403a1":"markdown","4c18a292":"markdown","75b1df54":"markdown","caa9ece7":"markdown","1d991308":"markdown","03095e1f":"markdown","74235a92":"markdown","97dc857e":"markdown"},"source":{"a66fe7fb":"import numpy as np\nimport os\nimport tensorflow as tf\nimport matplotlib.pyplot as plt","0cad9d38":"train_datagen = tf.keras.preprocessing.image.ImageDataGenerator(\n        rescale=1.\/255,\n        shear_range=0.2,\n        zoom_range=0.2,\n        horizontal_flip=True)\n\ntrain_generator = train_datagen.flow_from_directory(\n        '..\/input\/intel-image-classification\/seg_train\/seg_train\/',\n        target_size=(150,150),\n        batch_size=256,\n        class_mode='categorical',\n        shuffle=True)","7b2fdc0a":"test_datagen = tf.keras.preprocessing.image.ImageDataGenerator(rescale=1.\/255)\n\ntest_generator = test_datagen.flow_from_directory(\n        '..\/input\/intel-image-classification\/seg_test\/seg_test\/',\n        target_size=(150,150),\n        batch_size=256,\n        class_mode='categorical',\n        shuffle=False)","cc83c301":"model = tf.keras.models.Sequential([\n    tf.keras.layers.Input((150,150,3)),\n    tf.keras.applications.ResNet50V2(include_top=False,weights='imagenet',input_shape=(150,150,3)),\n    tf.keras.layers.GlobalAveragePooling2D(),\n    tf.keras.layers.Dense(128,activation='relu'),\n    tf.keras.layers.Dense(128,activation='relu'),\n    tf.keras.layers.Dense(128,activation='relu'),\n    tf.keras.layers.Dense(6,activation='softmax'),\n])\nprint(model.summary())\n","84adfb79":"model.compile(optimizer=tf.keras.optimizers.Adam(0.0001),loss='categorical_crossentropy',metrics=['accuracy'])\nmodel.fit(train_generator,epochs=5,validation_data=test_generator)","3351a6f0":"labels = {0 : 'Buildings',\n          1 : 'Forest',\n          2 : 'Glacier',\n          3 : 'Mountain',\n          4 : 'Sea',\n          5 : 'Street'}\n\nlabels","6ac7c982":"def predict(path) :\n    img = tf.keras.preprocessing.image.load_img(path,target_size=(150,150))\n    img = tf.keras.preprocessing.image.img_to_array(img)\n    img = img \/ 255.0\n    img = np.array([img])\n    pred = labels[np.argmax(model.predict(img))]\n    plt.imshow(img.reshape(150,150,3))\n    plt.title(pred)","0e19d8b7":"predict('..\/input\/intel-image-classification\/seg_pred\/seg_pred\/10021.jpg')","6832504f":"predict('..\/input\/intel-image-classification\/seg_pred\/seg_pred\/103.jpg')","17d1b3fb":"predict('..\/input\/intel-image-classification\/seg_pred\/seg_pred\/10100.jpg')","ecc132a6":"predict('..\/input\/intel-image-classification\/seg_pred\/seg_pred\/10397.jpg')","b560d98a":"predict('..\/input\/intel-image-classification\/seg_pred\/seg_pred\/1048.jpg')","f29d0db0":"predict('..\/input\/intel-image-classification\/seg_pred\/seg_pred\/10477.jpg')","19a403a1":"# Performing Image Augmentation and Generating Training Set","4c18a292":"# Creating a Dictionary representing the labels and its corresponding values","75b1df54":"# Various Predictions and its Corresponding Images","caa9ece7":"# Generating Test Set","1d991308":"# Creating the Model","03095e1f":"# Compiling and Fitting the Model to Training set","74235a92":"# Importing required Libraries","97dc857e":"# Helper function for visualizing the predictions"}}