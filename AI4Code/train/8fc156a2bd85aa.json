{"cell_type":{"bc82d2f0":"code","c47e0993":"code","a36af0b8":"code","8fa495ed":"code","74099116":"code","5a924921":"code","d64562c4":"code","d4ab8eaa":"code","8da881ef":"code","31f9f604":"code","7d0c0dda":"code","03cad484":"markdown","a118094c":"markdown","ea40624a":"markdown","31b1655a":"markdown","a21dfa2c":"markdown","ab5ef4bd":"markdown"},"source":{"bc82d2f0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c47e0993":"#Importing Libraries\n\nimport csv\nimport seaborn as sns\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","a36af0b8":"#Import Data File i.e. \"HouseSalesPrediction.csv\"\n\ndf = pd.read_csv(\"\/kaggle\/input\/housesalesprediction\/kc_house_data.csv\") \n\n#Confirming if loaded correctly in dataframe\n\ndf.head(5)\n","8fa495ed":"#Checking if there is no Null data\n\ndf.isnull().sum()","74099116":"#Creating Correlation Matrix\n\ncorrelation_matrix = df.corr() \n  \nf, ax = plt.subplots(figsize =(9, 8)) \nsns.heatmap(correlation_matrix, ax = ax, cmap =\"YlGnBu\", linewidths = 0.1)\n","5a924921":"#Setting up input & output variables\n\nX = df[['price','bedrooms']].values\ny = df['sqft_living'].values","d64562c4":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=100)\n\n#Validating data output\n\nprint(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","d4ab8eaa":"#Import LinearRegression module\n\nfrom sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\noutput_model = model.fit(X_train, y_train)\n\n#Check Output Model\n\noutput_model\n\n","8da881ef":"#Predict the test result set\n\ny_predictor = model.predict(X_test)\n\n#Print Prediction\n\nprint (y_predictor)\n","31f9f604":"#Import Metrics\n\nfrom sklearn.metrics import mean_squared_error, r2_score\ncoef = mean_squared_error(y_test, y_predictor)\nr2 = r2_score(y_test, y_predictor)\n\n#Print Output\n\nprint (\"Mean Squared Error is:\", coef)\nprint (\"R Squared is:\", r2)\n","7d0c0dda":"#Generating Graph\n\nsns.scatterplot(y_test , y_predictor)","03cad484":"**Data Preprocessing**","a118094c":"**Finding: ** By looking at above matrix, we understand that \"price\" and \"bedrooms\" has strong positive correlation ","ea40624a":"**Evaluation**","31b1655a":"**Model Testing**","a21dfa2c":"**Train & Test Data**","ab5ef4bd":"**Model Training**"}}