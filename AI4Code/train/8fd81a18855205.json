{"cell_type":{"1dc88ba5":"code","517e8199":"code","da453466":"code","2ca11845":"code","6d3dcd57":"code","f9856f2d":"code","b47d776e":"code","2910dad6":"code","9836e913":"code","7715ae0d":"code","47fe73d4":"code","25077715":"code","c5873378":"code","b1624550":"code","94d9f47b":"code","61b9c65f":"code","27f83b57":"code","e5da8178":"markdown","4e025005":"markdown","f071d94b":"markdown","519f5419":"markdown"},"source":{"1dc88ba5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport warnings #disable warnings\nwarnings.filterwarnings('ignore') \n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","517e8199":"vgsales = pd.read_csv(\"..\/input\/vgsales.csv\")","da453466":"vgsales.head()","2ca11845":"# ** Show the counts of observations in each categorical bin using bars.\nsns.countplot(vgsales.Genre)\nplt.xticks(rotation=45)\nplt.show()","6d3dcd57":"#mean sales for each genre\ngenreList = list(vgsales.Genre.unique())      # create a list using unique values of Genre\neusales = []       # empty lists\nnasales = []\njpsales = []\nothersales = []\nglobalsales = []\nfor i in genreList:\n    x = vgsales[vgsales['Genre']==i]      # find means of sales for each genre\n    eusales.append(sum(x.EU_Sales)\/len(x))\n    jpsales.append(sum(x.JP_Sales)\/len(x))\n    nasales.append(sum(x.NA_Sales)\/len(x))\n    othersales.append(sum(x.Other_Sales)\/len(x))\n    globalsales.append(sum(x.Global_Sales)\/len(x))\ndataframe1 = pd.DataFrame({'genreList': genreList,'eusales':eusales,'nasales':nasales,'jpsales':jpsales,'othersales':othersales,'globalsales':globalsales}) # create dictionary, turn it to dataframe\nnew_index = (dataframe1['globalsales'].sort_values(ascending=False)).index.values # sort values ,ascending=False : sort by decreasing\nfinal1 = dataframe1.reindex(new_index) # put sorted index in new_index","f9856f2d":"# ** Show point estimates and confidence intervals as rectangular bars.\nplt.figure(figsize=(15,10))\nsns.barplot(x=final1['genreList'], y=final1['globalsales'])\nplt.xticks(rotation= 0)\nplt.xlabel('Genres')\nplt.ylabel('Global Sales')","b47d776e":"# horizontal bar plot\nplt.figure(figsize=(15,10))\nsns.barplot(x=\"eusales\",y=\"genreList\",data=final1,label=\"EU Sales\",color=\"cyan\",alpha=0.6)\nsns.barplot(x=\"jpsales\",y=\"genreList\",data=final1,label=\"JP Sales\",color=\"gold\",alpha=0.79)\nsns.barplot(x=\"nasales\",y=\"genreList\",data=final1,label=\"NA Sales\",color=\"pink\",alpha=0.5)\nsns.barplot(x=\"othersales\",y=\"genreList\",data=final1,label=\"Other Sales\",color=\"green\",alpha=0.7)\nsns.barplot(x=\"globalsales\",y=\"genreList\",data=final1,label=\"Global Sales\",color=\"lightgrey\",alpha=0.4)\nplt.xlabel(\"Sales\")\nplt.ylabel(\"Genres\")\nplt.legend()\nplt.show()","2910dad6":"#point plot\nplt.figure(figsize=(15,10)) #create a (15,10) frame for plot \nsns.pointplot(x=\"genreList\",y=\"eusales\",color='magenta',alpha=0.6,data=final1) #alpha=opacity, data= dataframe that i use (final1)\nsns.pointplot(x=\"genreList\",y=\"nasales\",color='navy',alpha=0.6,data=final1)\nplt.grid()\nplt.xlabel(\"Genres\")\nplt.ylabel(\"Values\")\nplt.title(\"Europe Sales - North America Sales\")\nplt.text(3,0.4,'EU Sales',color='magenta',fontsize = 17,style = 'normal') # 3,0.4 is where text put in\nplt.text(3,0.38,'NA Sales',color='navy',fontsize = 17,style = 'normal')\nplt.xticks(rotation=0) #rotation of column's uniques \nplt.show()","9836e913":"# ** Draw a plot of two variables with bivariate and univariate graphs.\nsns.jointplot(final1.eusales, final1.nasales,kind=\"kde\", height=7)\nplt.show()","7715ae0d":"# ** Plot data and regression model fits across a FacetGrid.\nsns.lmplot(x=\"eusales\",y=\"nasales\",data=final1)\nplt.show()  \n# the line on middle shows optimum value","47fe73d4":"# ** Fit and plot a univariate or bivariate kernel density estimate.\nsns.kdeplot(final1.jpsales,final1.nasales,shade=True,cut=3)\nplt.show()","25077715":"# ** Draw a combination of boxplot and kernel density estimate.\nplt.figure(figsize=(15,10))\npal = sns.cubehelix_palette(9, rot=-0.99, dark=0.4)  # sets colors, can find different palettes in net\nsns.violinplot(data=final1,palette=pal,inner=\"points\") # \"innner=points\" shows inner points, =>can change to box, quartile, stick, None\nplt.show()","c5873378":"final1.corr() #correlation","b1624550":"# ** Plot rectangular data as a color-encoded matrix.\nplt.figure(figsize=(15,10))\nsns.heatmap(final1.corr(),annot=True,linewidths=.5,fmt=\".3f\") #annot=True > shows the numbers that are in middle of the rectangles\nplt.show()  # linewidths=.5 > thickness of lines between rectangles, fmt=\".1f\" > shows one digit after point (.3f shows 3 digits) ","94d9f47b":"# ** Draw a box plot to show distributions with respect to categories.\nplt.figure(figsize=(15,10))\nsns.boxplot(x=vgsales[\"Year\"],y=vgsales[\"Genre\"],palette=\"PuBuGn_r\")\nplt.show()","61b9c65f":"# ** Draw a categorical scatterplot with non-overlapping points.\nplt.figure(figsize=(15,10))\nsns.swarmplot(x=vgsales[\"Year\"],y=vgsales[\"Platform\"],palette=\"PuBuGn_r\")\nplt.show()","27f83b57":"# ** Plot pairwise relationships in a dataset.\nsns.pairplot(final1)\nplt.show()","e5da8178":"** Explanations have taken via [Seaborn's official website](https:\/\/seaborn.pydata.org\/)","4e025005":"* In North America, games are generally more discounted (NA population is less than EU population). \n* Common: Strategy and adventure games have less sales than other genres.\n","f071d94b":"* Most of the games in the dataset published between 2005-2010\n* Most discounted genre, a big amount of platform games published at 2005\/nearly 2005\n* Least discounted genre, a big amount of adventure games published at 2010\/nearly 2010","519f5419":"* Most globally discounted game genre is platform (also in North America). \n* When it comes to other and Europe sales, shooter games have more sales. \n* Japan mostly makes discount to role-playing games."}}