{"cell_type":{"ce3e9b4b":"code","8893537f":"code","831baaef":"code","0b32cca9":"code","11970a1c":"code","1f329b35":"code","7962d5a7":"code","5f75d953":"code","2566ee35":"code","a3eaef58":"code","5afb823e":"code","336f289e":"code","6738b3b0":"code","dbbb1a25":"code","d07d188b":"code","7cf84035":"code","2a6c0923":"markdown"},"source":{"ce3e9b4b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8893537f":"train_data = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/train.csv\")\nprint(\"done\")","831baaef":"train_data.describe()","0b32cca9":"train_data.head(10)","11970a1c":"import matplotlib.pyplot as plt\n","1f329b35":"x_train = train_data.drop('label',axis=1)\nx_train.head()","7962d5a7":"y_train =train_data['label']\ny_train","5f75d953":"y_train[0]","2566ee35":"x= 555\n\nimage = x_train.loc[x,:]\nplottable_image = np.reshape(image.values, (28, 28))\nplt.imshow(plottable_image, cmap='gray_r')\nplt.title('label of image is{}'.format(y_train[x]))\n","a3eaef58":"#bulding model \n\nimport tensorflow as tf\nfrom tensorflow.keras.optimizers import RMSprop\n\n","5afb823e":"from keras.utils.np_utils import to_categorical\nx_train =x_train\/255.0\ny_train=y_train\/255.0\nx_train =np.array(x_train).reshape(-1,28,28,1)\ny_train = to_categorical((y_train), num_classes = 10)\n","336f289e":"model = tf.keras.models.Sequential([\n \n      tf.keras.layers.Conv2D(64,(3,3),activation ='relu',input_shape=(28,28,1)),\n        tf.keras.layers.MaxPooling2D(2,2),\n        tf.keras.layers.MaxPooling2D(2, 2),\n        tf.keras.layers.Conv2D(64, (3,3), activation='relu'),\n        tf.keras.layers.MaxPooling2D(2,2),\n        tf.keras.layers.Flatten(),\n        tf.keras.layers.Dense(128, activation='relu'),\n        tf.keras.layers.Dense(10, activation='softmax')\n])\n\nmodel.compile(optimizer='adam', loss='categorical_crossentropy' , metrics=['acc'],epochs =10)\nprint('done')\n","6738b3b0":"model.fit(x_train ,y_train,epochs=10)","dbbb1a25":"test_data =pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/test.csv\")\ntest_data.head()\n\ntest_data=test_data \/255.0\n","d07d188b":"res=model.predict(test_data)\nres =np.argmax(res,axis =1 )\n","7cf84035":"submissions=pd.DataFrame({\"ImageId\": list(range(1,len(res)+1)),\n                         \"Label\":res})\nsubmissions.to_csv(\"elgendy.csv\", index=False, header=True)\nsubmissions","2a6c0923":"train_data.isnull().sum()"}}