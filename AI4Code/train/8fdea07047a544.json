{"cell_type":{"db77872d":"code","f1530234":"code","7b99a6b3":"code","74c35d45":"code","a1323cfb":"code","fd624668":"code","2ee77418":"code","c051d661":"code","1f3a3288":"code","52c747e9":"code","bdfc63a1":"code","9d1377a6":"code","bc76e3da":"code","2d9b7fc5":"code","de69acbf":"code","9e071b98":"code","e37abe4a":"code","b21c8684":"code","d55bdf77":"code","ec35ce69":"code","0fc14b0e":"code","c1a0e741":"code","72de5050":"code","61b3c61a":"markdown","3572d610":"markdown","e622c13d":"markdown","effc0e27":"markdown","dd06cd89":"markdown","98e4ed70":"markdown","c660629b":"markdown","b3cf789a":"markdown","753b02a9":"markdown","f9c34bfa":"markdown","b7c5cf73":"markdown"},"source":{"db77872d":"import numpy as np\nimport pandas as pd","f1530234":"train = pd.read_csv('..\/input\/pubg-finish-placement-prediction\/train_V2.csv')\ntest = pd.read_csv('..\/input\/pubg-finish-placement-prediction\/test_V2.csv')","7b99a6b3":"train.head()","74c35d45":"task_1 = train[['heals','killPlace']]\ntask_1.head()","a1323cfb":"import seaborn as sns\nfrom matplotlib import pyplot as plt\nplt.figure(figsize=(3,3))\nsns.heatmap(task_1.corr() , annot=True)\n","fd624668":"sns.jointplot(x='DBNOs' , y='killPlace' , data=train )","2ee77418":"sns.jointplot(x='assists' , y='killPlace' , data=train )","c051d661":"sns.jointplot(x='revives' , y='killPlace' , data=train )","1f3a3288":"feature = train.corr()\nfeature","52c747e9":"feature['killPlace'].abs().sort_values(ascending=False).head(6)","bdfc63a1":"train.isnull().sum()","9d1377a6":"train['winPlacePerc'] = train['winPlacePerc'].fillna(train['winPlacePerc'].mean())\ntrain.isnull().sum()","bc76e3da":"test.isnull().sum()","2d9b7fc5":" x_train = train[['killStreaks','kills','damageDealt','walkDistance']].values\n x_test = test[['killStreaks','kills','damageDealt','walkDistance']].values\n y_train = train['killPlace'].values\n    ","de69acbf":"x_train","9e071b98":"from sklearn.preprocessing import StandardScaler\nsc_x = StandardScaler()\nx_train = sc_x.fit_transform(x_train)\nx_test = sc_x.fit_transform(x_test)","e37abe4a":"from sklearn import tree \n\nClassifier = tree.DecisionTreeClassifier(criterion = 'entropy',\n                                        random_state = 0)\nClassifier.fit(x_train,y_train)","b21c8684":"y_train_pred = Classifier.predict(x_train)","d55bdf77":"from sklearn import metrics\n\nmetrics.accuracy_score(y_train,y_train_pred)","ec35ce69":"metrics.confusion_matrix(y_train,y_train_pred)","0fc14b0e":"prediction = Classifier.predict(x_test)","c1a0e741":"submission = pd.DataFrame({'killPlace':prediction})\n\n#Visualize the first 5 rows\nsubmission.head()","72de5050":"filename = 'PUBG_Rank_Predictions_1.csv'\n\nsubmission.to_csv(filename,index=False)\n\nprint('Saved file: ' + filename)","61b3c61a":"Above HeatMAp clearly specify that heals are negatively corelated with probability 0.39\n<hr>","3572d610":"<hr>","e622c13d":"3 . Reviving impact on Kill Place","effc0e27":"<h2> Building Up the Model By applying Feature Engineering<\/h2>","dd06cd89":"1. Knocking impact on KillPlace","98e4ed70":"<h2>Second Task : effect of Knocking (DBNO), Assisting or Reviving on Winning Percentage<\/h2>","c660629b":"<hr>\n<h2> First Task : Does Healing improve the chance of Winning<\/h2>\n","b3cf789a":"**Problem Got Fixed**","753b02a9":"<h3>Top 5 Features that is mostly co-related with killPlace:<\/h3>\n <ol>\n    <li>killStreaks     0.810516<\/li>\n    <li>kills           0.730498<\/li>\n    <li>winPlacePerc    0.719069<\/li>\n    <li>damageDealt     0.677398<\/li>\n    <li>walkDistance    0.590236<\/li>\n  <\/ol>  ","f9c34bfa":"Only one Feature that have one Null Value i.e.,winPlacePerc\n<h4>Fix it<\/h4>","b7c5cf73":"2. Assisting impact on Kill Place"}}