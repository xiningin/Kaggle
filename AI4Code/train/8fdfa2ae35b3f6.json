{"cell_type":{"29655856":"code","cf024ace":"code","58b3971f":"code","7d87935b":"code","581c1105":"code","2fb2df46":"code","23f38bd2":"code","62e9ad65":"code","0179e0b9":"code","dc1e4c68":"code","d3f3111a":"code","c7f8c02c":"code","e6ec021e":"code","6c881504":"code","d99cc005":"code","f2ae8598":"code","d8f56379":"code","15fd9946":"markdown","ac2058f5":"markdown","018e1900":"markdown","27ce1f1e":"markdown","7be31756":"markdown","3bdd6097":"markdown","3f44f0fc":"markdown","c9954e0f":"markdown","d733365f":"markdown","2f7cc172":"markdown","e86855a4":"markdown"},"source":{"29655856":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# import os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))","cf024ace":"data_pokemon = pd.read_csv('..\/input\/pokemon-challenge\/pokemon.csv')\ndata_pokemon.head()","58b3971f":"data_pokemon.columns","7d87935b":"data_pokemon = data_pokemon.drop(\"#\", axis=1)\ndata_pokemon.head()","581c1105":"data_pokemon.corr()","2fb2df46":"#Corelation Map\nf,ax= plt.subplots(figsize=(10,10))\nsns.heatmap(data_pokemon.corr(),annot=True,linewidths=.5,fmt='.1f',ax=ax)\nplt.show()","23f38bd2":"data_pokemon.Speed.plot(kind='line',color='g',label='Speed',linewidth=1,alpha=0.5,grid=True,linestyle=':')\ndata_pokemon.Defense.plot(kind='line',color='r',label='Defense',linewidth=1,alpha=0.5,grid=True,linestyle='-')\nplt.show()","62e9ad65":"#SCATTER PLOT\ndata_pokemon.plot(kind='scatter',x='Attack',y='Defense',alpha=0.5,color='b')\nplt.xlabel('Attack')\nplt.ylabel('Defense')\nplt.title('Attack-Defense Scatter Plot')\nplt.show()","0179e0b9":"#HISTOGRAM\ndata_pokemon.Speed.plot(kind='hist',bins=50,figsize=(10,10),grid=True)\nplt.show()\n#plt.clf()  clear plt","dc1e4c68":"#Dictionary Yap\u0131s\u0131\n\ndictionary={'spain':'madrid','usa':'vegas'}\nprint(dictionary.keys())\nprint(dictionary.values())","d3f3111a":"dictionary['spain']= \"barcelona\"\ndictionary['france']=\"paris\" #add new entry\n#del dictionary['france']\n#dictionary.clear()\n#del dictionary \nfor key,value in dictionary.items():\n    print(key,\" : \", value)","c7f8c02c":"#Seriler ve DataFrame Kavram\u0131\nseri=data_pokemon['Defense']\nseri.head()","e6ec021e":"dataframe=data_pokemon[['Defense']]\ndataframe.head()\n#type(dataframe)","6c881504":"x= data_pokemon.Defense>200\nx","d99cc005":"data_pokemon[np.logical_and(data_pokemon.Defense>200,data_pokemon.Attack>100)]","f2ae8598":"data_pokemon[(data_pokemon.Defense>200)&(data_pokemon.Attack>100)]","d8f56379":"data_pokemon[x]","15fd9946":"1. ***Pokemon data setimizi tan\u0131ml\u0131yoruz. Data Setimizin kolonlar\u0131n\u0131 ve \u00f6rnek verilerini inceliyoruz.***","ac2058f5":"Defense kolonunda spesifik filtreleme yapabiliriz","018e1900":"# #Dictionary Yap\u0131s\u0131\n","27ce1f1e":"> **# Ne kadar 1'e yak\u0131nsa o kadar do\u011fru orant\u0131l\u0131d\u0131r.**","7be31756":"# #Corelation Map","3bdd6097":"# #SCATTER PLOT","3f44f0fc":"**Data setimizin Column adlar\u0131n\u0131 ve tiplerini \u00f6\u011freniyoruz**","c9954e0f":"# #Seriler ve DataFrame Kavram\u0131","d733365f":"> **Buradan Attack ile Defens aras\u0131nda k\u0131smen do\u011fru bir orant\u0131 oldu\u011funu s\u00f6yleyebiliriz.**","2f7cc172":"**Zaten indexli bir iekilde gelece\u011finden \"#\" kolonunu siliyorum.**","e86855a4":"# #HISTOGRAM"}}