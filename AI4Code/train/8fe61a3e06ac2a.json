{"cell_type":{"eda745c4":"code","7b9885f2":"code","dc678a88":"code","10020b3a":"code","1608cf52":"code","df58d142":"code","3dba3497":"code","b5e3c7df":"markdown","13fc2758":"markdown","f7515f88":"markdown"},"source":{"eda745c4":"import warnings\nwarnings.filterwarnings('ignore')\nimport os\nimport matplotlib.pyplot as plt\nfrom matplotlib.image import imread as mread\nimport numpy as np\nfrom skimage import color\nimport pandas as pd\nfrom skimage.transform import resize as reimgsize\nfrom keras.layers import Conv2D, MaxPooling2D\nfrom keras.layers import Flatten, Dense\nfrom keras.models import Sequential\nimport cv2 as cv","7b9885f2":"def show_image(image,title=\"Image\",cmap_type='gray'):\n    plt.imshow(image,cmap=cmap_type)\n    plt.title(title)\n    plt.axis('off')\n    plt.show()\ncat,i,decat={},0,[]\n\nfor c in \"_0123456789ABCEFGHJKLNPQRSTUXYZ\":\n    decat.append(c)\n    cat[c]=i\n    i+=1\nprint(cat)","dc678a88":"cwd='\/kaggle\/input\/gestures'\nx,y=[],[]\nfor folder,_,files in os.walk(cwd):\n    for file in files:\n        if folder[-1]!='I':\n            x.append(mread(os.path.join(folder,file)))\n            y.append(cat[folder[-1]])\n    print(\"Done\",folder)\nX=np.array(x)\nX.resize(len(x),50,50,1)\nfrom keras.utils import np_utils\nY = np_utils.to_categorical(y)","10020b3a":"y[-10:-1]","1608cf52":"from keras import optimizers\nfrom keras.models import Sequential\nfrom keras.layers import Dense,Dropout,Flatten\nfrom keras.layers.convolutional import Conv2D,MaxPooling2D\nfrom keras.utils import np_utils,plot_model","df58d142":"model=Sequential()\nmodel.add(Conv2D(16,(2,2),input_shape=(50,50,1),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2), strides=(2, 2), padding='same'))\nmodel.add(Conv2D(32, (3,3), activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(3, 3), strides=(3, 3), padding='same'))\nmodel.add(Conv2D(64, (5,5), activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(5, 5), strides=(5, 5), padding='same'))\nmodel.add(Flatten())\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.2))\n#model.add(Dense(144, activation='relu'))\n#model.add(Dropout(0.2))\nmodel.add(Dense(31,activation='softmax'))\n#sgd = optimizers.SGD(lr=1e-2)\nmodel.compile(loss='categorical_crossentropy', optimizer='rmsprop', metrics=['accuracy'])\nmodel.fit(X,Y,epochs=3,validation_split=0.01)\n","3dba3497":"model.save('gestures.h5')\nplot_model(model, to_file='model_plot.png', show_shapes=True, show_layer_names=True)","b5e3c7df":"****preparing TRAINING datasets for LETTERS****","13fc2758":"1. **Importing Required Libraries**","f7515f88":"**A VIEW of training datasets**"}}