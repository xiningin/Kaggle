{"cell_type":{"e164a417":"code","0590603d":"code","24694321":"code","71a0d9d6":"code","ced1a70a":"code","4aad10d1":"code","9779d535":"code","4dc548c8":"code","afdc6e85":"code","ec71570c":"code","ecf1e212":"code","8485aa89":"code","20a14cd8":"code","dcbd486e":"code","ee10063c":"code","d79dba0d":"code","22dcee62":"code","c9f2aed1":"code","4e29fca8":"code","648ebd67":"code","60e0abeb":"code","4e9d6086":"code","13e2bfdb":"code","9705d2db":"code","628a813c":"code","e4b0d1f6":"code","8038b145":"code","3a5d5da6":"code","3b60ec84":"code","d659a861":"code","b4630c02":"code","82bcae62":"code","51ada2f9":"code","8ce95b81":"code","558809a0":"code","1cc59696":"code","3183c90e":"code","f8bbb52f":"code","54b856e9":"code","c1c3a706":"code","25df5321":"code","8d887b7b":"code","287e7423":"code","4fd1cf19":"markdown","577b372b":"markdown","f0a15733":"markdown","3ebb2dcd":"markdown","55488730":"markdown","7bcf686c":"markdown","a0920dd2":"markdown","6f25be0c":"markdown","9393c938":"markdown","9d1a1d3e":"markdown","167429ac":"markdown","ce123936":"markdown","7787bfeb":"markdown","744db330":"markdown","ce8edaac":"markdown","324891a1":"markdown","02ef45c5":"markdown","a36b027b":"markdown","bedfb733":"markdown","a5177acd":"markdown","32c9dfbc":"markdown","6d3dc9c0":"markdown"},"source":{"e164a417":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport random as rnd\nfrom random import seed\nfrom random import gauss\n\nimport seaborn as sns#Understanding my variables\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# machine learning\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0590603d":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntrain_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")","24694321":"train_data.shape","71a0d9d6":"test_data.shape","ced1a70a":"train_data.columns","4aad10d1":"test_data.columns","9779d535":"train_data.head()","4dc548c8":"test_data.head()","afdc6e85":"graphshow_traindata = train_data.drop(['PassengerId'], axis=1)\nplt.figure(figsize=(10,10))\nsns.lineplot(data=graphshow_traindata)","ec71570c":"test_data.isnull().values.sum()","ecf1e212":"train_data.isnull().values.sum()","8485aa89":" test_data.columns[test_data.isna().any()].tolist()","20a14cd8":" train_data.columns[train_data.isna().any()].tolist()","dcbd486e":"test_data.nunique(axis=0)","ee10063c":"train_data.nunique(axis=0)","d79dba0d":"sns.countplot('Survived',data=train_data)\nplt.show()","22dcee62":"train_data.describe().apply(lambda s: s.apply(lambda x: format(x, 'f')))","c9f2aed1":"train_data.describe(include=['O'])","4e29fca8":"test_data.describe().apply(lambda s: s.apply(lambda x: format(x, 'f')))","648ebd67":"test_data.describe(include=['O'])","60e0abeb":"corr = train_data.corr()# plot the heatmap\nsns.heatmap(corr, xticklabels=corr.columns, yticklabels=corr.columns, annot=True, cmap=sns.diverging_palette(220, 20, as_cmap=True))","4e9d6086":"sns.pairplot(train_data)","13e2bfdb":"train_data['Age'].plot(kind='hist', bins=20, figsize=(12,6), facecolor='grey',edgecolor='black')","9705d2db":"train_data['Pclass'].plot(kind='hist', bins=5, figsize=(2,2), facecolor='grey',edgecolor='black') ","628a813c":"train_data['Fare'].plot(kind='hist', bins=20, figsize=(10,5), facecolor='grey',edgecolor='black')","e4b0d1f6":"firstclass = train_data.loc[train_data.Pclass == 1][\"Survived\"]\nrate_firstclass = sum(firstclass)\/len(firstclass)\n\n\n\nsecondclass = train_data.loc[train_data.Pclass == 2][\"Survived\"]\nrate_secondclass = sum(secondclass)\/len(secondclass)\n\n\n\nthirdclass = train_data.loc[train_data.Pclass == 3][\"Survived\"]\nrate_thirdclass = sum(thirdclass)\/len(thirdclass)\n\nprint(\"% of First class who survived:\", rate_firstclass)\nprint(\"% of Second class who survived:\", rate_secondclass)\nprint(\"% of First class who survived:\", rate_thirdclass)","8038b145":"pd.crosstab([train_data.Pclass],train_data.Survived,margins=True).style.background_gradient('Greens')","3a5d5da6":"embarkedq = train_data.loc[train_data.Embarked == \"Q\"][\"Survived\"]\nrate_embarkedq = sum(embarkedq)\/len(embarkedq)\n\nembarkeds = train_data.loc[train_data.Embarked == \"S\"][\"Survived\"]\nrate_embarkeds = sum(embarkeds)\/len(embarkeds)\n\nembarkedc = train_data.loc[train_data.Embarked == \"C\"][\"Survived\"]\nrate_embarkedc = sum(embarkedc)\/len(embarkedc)\n\nprint(\"% of Queenstown passengers who survived:\", rate_embarkedq)\nprint(\"% of Cherbourg passengers who survived:\", rate_embarkeds)\nprint(\"% of Southampton passengers who survived:\", rate_embarkedc)","3b60ec84":"pd.crosstab([train_data.Embarked],train_data.Survived,margins=True).style.background_gradient('Greens')","d659a861":"women = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\n\n\nmen = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"% of women who survived:\", rate_women)\n\nprint(\"% of men who survived:\", rate_men)","b4630c02":"pd.crosstab([train_data.Sex,train_data.Survived],train_data.Pclass,margins=True).style.background_gradient(cmap='Greens')","82bcae62":" train_data.columns[train_data.isna().any()].tolist()","51ada2f9":"g = sns.FacetGrid(train_data, col='Survived')\ng.map(plt.hist, 'Age', bins=20)","8ce95b81":"sns.violinplot(\"Sex\",\"Age\", hue=\"Survived\", data=train_data,split=True)","558809a0":"sns.violinplot(\"Pclass\",\"Age\", hue=\"Survived\", data=train_data,split=True)","1cc59696":"grid = sns.FacetGrid(train_data, row='Embarked', height=2.2, aspect=1.6)\ngrid.map(sns.pointplot, 'Pclass', 'Survived', 'Sex')\ngrid.add_legend()","3183c90e":"age_guess = train_data[\"Age\"].mean()\ntrain_data[\"Age\"].fillna(age_guess, inplace = True)\ntest_data[\"Age\"].fillna(age_guess, inplace = True)\ntrain_data.Age.unique()","f8bbb52f":"mostCommonPort = train_data.Embarked.dropna().mode()[0]\ntrain_data[\"Embarked\"].fillna(mostCommonPort, inplace = True)\ntest_data[\"Embarked\"].fillna(mostCommonPort, inplace = True)","54b856e9":"train_data = train_data.drop(['Ticket', 'Cabin'], axis=1)\ntest_data = test_data.drop(['Ticket', 'Cabin'], axis=1)","c1c3a706":"y = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"Embarked\", \"Age\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nX.shape, y.shape, X_test.shape","25df5321":"rdm_Forest = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nrdm_Forest.fit(X, y)\npredictionsForest = rdm_Forest.predict(X_test)","8d887b7b":"decision_tree = DecisionTreeClassifier()\ndecision_tree.fit(X, y)\npredictionsDecisionTree = decision_tree.predict(X_test)","287e7423":"output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictionsDecisionTree})\noutput.to_csv('my_submission_DecisionTree.csv', index=False)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictionsForest})\noutput.to_csv('my_submission_Forest.csv', index=False)\nprint(\"Your submission was successfully saved!\")","4fd1cf19":"The graph above depicts the distribution of ticket classes in the training set, revealing that third-class ticket holders were the most common passengers onboard. ","577b372b":"The data available includes;\n\u2022\tPassenger Id\n\u2022\tWhether they survived\n\u2022\tWhat ticket class they held\n\u2022\tName\n\u2022\tSex\n\u2022\tAge\n\u2022\tThe number of siblings\/spouses they had onboard\n\u2022\tThe number of parents\/children they had onboard\n\u2022\tTicket number\n\u2022\tPassenger fare\n\u2022\tCabin number\n\u2022\tWhich port they embarked\n","f0a15733":"We can confirm our assumption that passengers who were female were more likely to survive as the survival rate of 74% compared to the male survival rate of 18% shows an incredibly strong correlation between Sex being female and Survival.","3ebb2dcd":"A total of 891 samples were used in the training dataset. This is equivalent to 40% of all the passengers on the Titanic. The test dataset includes 418 samples, or nearly 19% of all passengers","55488730":"This graph confirms our assumption that children were more likely to survive, as a large number of passengers under the age of 5 survived. It also confirmed that we will want to complete Age to remove null values as it is likely correlated to survival.","7bcf686c":"Embarked contained the options of \u2018Q\u2019,\u2019C\u2019 or \u2018S\u2019. The datasets were only missing 2 values of Embarked and so they will be replaced by the most common port.","a0920dd2":"The above violin graph shows the correlation between Pclass, Age and Survival. We can see that the survival rate of children under the age of 10 was good irrespective of ticket class. ","6f25be0c":"There is a strong correlation between survival and passengers with Embarked as \u2018S\u2019, it shows us that 55% of passengers who embarked from Southampton ended up surviving. Due to the strong correlation between this and survival it should be included in our model. It also confirms our assumption that we should complete Embarked to remove null values.","9393c938":"We can classify the data as categorical or numerical by previewing the data in both datasets. This will help us better understand how the data is used and begin to consider how it should be visualised.\n* Categorical: \nSurvived, Sex and Embarked are all categorical. While Pclass is made up of numerical values \tthe context behind it means it will be classified as ordinal.\n* Numerical:\nAge and Fare are both continuous variables whereas SibSp and Parch are discrete variables. But all of them are classed as numerical.\nTicket is a mix of numeric and alphanumeric, Cabin is alphanumeric.\n* Errors or missing values:\nWhile checking data it is important to know if there are any missing or incorrect values.\n","9d1a1d3e":"By correlating Sex and Age we can see that survival rate for children was high across both genders, and that the majority of passengers were between 20-40 and the survival rate for this group was reasonably high but was higher for females. This confirms our assumptions that children and women had a better rate of survival and that we should use Sex and Age in our model.","167429ac":"There are 414 missing values in the test dataset and 866 in the training dataset, as shown above. These will have to be found, then corrected or removed.\nAge, Fare, Cabin, and Embarked are the columns in the datasets that have missing values.\nBecause there are so many ways to display names, such as using middle names, different titles, and brackets, it is possible that the Name feature will contain errors while looking at the dataset samples.\n","ce123936":"The graph above shows the distribution of age in the training set, showing that the majority of passengers were between the ages of 20-40. And that there was a reasonable number of young children under the age of 5 onboard as well.","7787bfeb":"In the test dataset there are 86 missing Age values, 1 missing Fare value and 327 missing Cabin values.\n \nThere are only 714 Age values in the training dataset, which means there are 177 missing values. There are also 687 Cabin values missing and 2 Embarked values missing.\nWe can get some early insights by looking at the data distribution.\n* Numerical Distribution:\nThe mean of Survived allows us to see what percentage of the training set survived the sinking. It shows to be 38% this is slightly higher than the actual percentage of the survival \trate of 32%.\nWe can see that >75% of passengers in the training dataset did not travel with Parents or Children.\nWe can also see that Fares had a great range, meaning the cost varied greatly.\nThere are also a small number of elderly passengers, with the eldest being 80.\n* Categorical Distribution:\nWe can see that male passengers accounted for 577 out of 891 samples, or 65% of all passengers.\nBoth the tickets and the cabin have shared values, with the tickets having 210 and the cabin having 57. This could indicate that tickets and cabins were shared by families or other groups.\n","744db330":"Due to their high rates of missing and repeated values the Ticket and Cabin features will be dropped based on our assumptions.","ce8edaac":"I used two different predictive models, Random Forest, and Decision Tree as these are popular choices for classification and regression. After running them both I found that the Random Forest model had the higher score. The Random Forest Model scored 0.78229 while the Decision Tree Model scored 0.73684.","324891a1":"We can see strong correlation between Pclass and Survival. The training dataset has a 62% survival rate for passengers with first class tickets. This confirms our assumption that passengers who held a higher ticket class were more likely to survive and informs us that this feature should be included in our model.","02ef45c5":"The dataset that will be referred to in this document is the Titanic Survival Dataset.\n\u201cThe sinking of the Titanic is one of the most infamous shipwrecks in history.\nOn April 15, 1912, during her maiden voyage, the widely considered \u201cunsinkable\u201d RMS Titanic sank after colliding with an iceberg. Unfortunately, there weren\u2019t enough lifeboats for everyone onboard, resulting in the death of 1502 out of 2224 passengers and crew.\nWhile there was some element of luck involved in surviving, it seems some groups of people were more likely to survive than others.\u201d \n\nThe death of 1502 out of 2224 passengers means that in this event there was only 722 survivors, this gives a survival rate of approximately 32%\nFirst, we must understand what information is available to use in the dataset.\n","a36b027b":"This graph showing the correlation between Sex, Pclass, Embarked and survival shows a few interesting points. It confirms that females had a higher rate of survival than men when Embarked from Q or S but shows a lower survival rate than men when Embarked at C. It also confirms our assumption that higher class passengers had a higher chance of survival except for males embarked at Q. These exceptions could be due to number of things including the layout of cabins in the boat or a correlation between Pclass and Embarked rather than a direct link to Survival. ","bedfb733":"Option 2 was my first choice. However, after doing some more research, I discovered that this method would introduce random noise into the model. I decided that this was not the best course of action because it would not benefit the situation and could even be detrimental.\n \nI created option 1 and ran the model using each one independently. I discovered that not only did option 1 not introduce random noise, but it also gave a higher prediction accuracy overall.\n","a5177acd":"Now, to make sense of the data and to utilise it in an efficient and correct manner we must look at the correlation between them and survival.\n\nFirst, we will make some assumptions based on the data analysis so far and the description of the problem.\n\n* \u2022\tWe will want to complete Age to remove null values as it is likely correlated to survival.\n* \u2022\tWe will want to complete Embarked to remove null values as it likely correlated to survival.\n* \u2022\tThe ticket may be discarded because it contains a high proportion of duplicates and there is no evidence that it correlates with survival.\n* \u2022\tCabin may be removed from the training and test datasets because it contains many null values.\n* \u2022\tPassengerId could be removed from the training dataset because it has no bearing on survival.\n* \u2022\tBecause the name feature does not directly contribute to survival, it may be removed.\n* \u2022\tPassengers who were female were more likely to survive.\n* \u2022\tPassengers who held a higher ticket class were more likely to survive.\n* \u2022\tChildren were more likely to survive.\n","32c9dfbc":"As seen above, most passenger fares were under 50, but a small percentage paid up to 512.","6d3dc9c0":"I came up with two different techniques for completing the Age feature.\n1.\tReplacing all null values with the mean of age (approximately 30).\n2.\tReplacing null values with random values calculated using the mean and standard deviation.\n"}}