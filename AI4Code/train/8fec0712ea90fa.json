{"cell_type":{"ea2e3a5b":"code","95788e90":"code","9c03574c":"code","6e66c592":"code","af671a5d":"code","13c0fc2f":"code","008f92c1":"code","1b226695":"markdown","b9282c34":"markdown","ad04fc2b":"markdown"},"source":{"ea2e3a5b":"!pip install target_encoding\n# https:\/\/github.com\/KirillTushin\/target_encoding","95788e90":"from target_encoding import TargetEncoderClassifier\nfrom target_encoding import TargetEncoder\n\nfrom sklearn.datasets import load_breast_cancer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score\n\n\nX, y = load_breast_cancer(return_X_y=True)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\nenc = TargetEncoder()\nnew_X_train = enc.transform_train(X=X_train, y=y_train)\nnew_X_test = enc.transform_test(X_test)\n\nrf = RandomForestClassifier(n_estimators=100, random_state=42)\nrf.fit(X_train, y_train)\npred = rf.predict_proba(X_test)[:,1]\nprint('without target encoding', roc_auc_score(y_test, pred))\n\nrf.fit(new_X_train, y_train)\npred = rf.predict_proba(new_X_test)[:,1]\nprint('with target encoding', roc_auc_score(y_test, pred))\n\nenc = TargetEncoderClassifier()\nenc.fit(X_train, y_train)\npred = enc.predict_proba(X_test)[:,1]\nprint('target encoding classifier', roc_auc_score(y_test, pred))","9c03574c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom target_encoding import TargetEncoder, TargetEncoderClassifier\nfrom sklearn.model_selection import StratifiedKFold, cross_val_score\nfrom sklearn.metrics import roc_auc_score\n\nimport os\nprint(os.listdir(\"..\/input\"))","6e66c592":"train=pd.read_csv(\"..\/input\/train.csv\").drop(\"ID_code\",axis=1)\ntest=pd.read_csv(\"..\/input\/test.csv\").drop(\"ID_code\",axis=1)\n\nX = train.drop('target', axis=1)\ny = train.target\n\nsample_submission = pd.read_csv('..\/input\/sample_submission.csv')\ncv = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)","af671a5d":"enc = TargetEncoderClassifier(alpha=100, max_unique=25, used_features=170)\nscore = cross_val_score(enc, X, y, scoring='roc_auc', cv=cv)\nprint(score.mean(), score.std())","13c0fc2f":"enc = TargetEncoderClassifier(alpha=100, max_unique=25, used_features=170)\nenc.fit(X, y)\npred = enc.predict_proba(test)[:,1]","008f92c1":"sample_submission['target'] = pred\nsample_submission.to_csv('submission.csv', index=False)","1b226695":"### This package gives you the opportunity to use a Target mean Encoding in different ways.","b9282c34":"## Use in competition","ad04fc2b":"### Example of usage"}}