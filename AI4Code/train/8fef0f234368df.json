{"cell_type":{"b8c2c20d":"code","d57d38bf":"code","52c3b08b":"code","322915df":"code","605345fd":"code","3540b0ad":"code","2036670a":"code","042623c9":"code","e03bbfc4":"code","329be3a0":"code","76e3af10":"code","5e26f4dc":"code","953856d0":"code","804a5222":"code","235b82c6":"code","f599eff9":"code","ea615ecd":"code","37e61066":"code","bcad7938":"code","3b7d33ef":"code","2f760093":"code","b1e18041":"code","2474d446":"code","c99282fe":"code","aa5bf28a":"code","81709dc4":"code","e8507e6d":"code","be57f448":"code","17788038":"code","347de471":"code","28d4f8ba":"code","006c0474":"code","08d4f319":"code","9c894d79":"code","0b1bc021":"code","77513f26":"code","cd78eb73":"code","c4b12dba":"code","eff9822b":"code","8810e338":"code","61b64e8a":"code","3a6f4f2c":"code","c42671d8":"code","211b0848":"code","bcfdca70":"code","7a5bd0b9":"code","d8a2f89d":"code","bd6b6566":"code","470954a9":"code","dc6c6428":"code","86f38518":"code","b4705549":"code","2175d93a":"code","dc145715":"markdown","82bf2929":"markdown","2846d0ec":"markdown","c039f0d8":"markdown","ff5b98b9":"markdown","7905638b":"markdown","60577df1":"markdown","d50b8415":"markdown","ae0b2266":"markdown"},"source":{"b8c2c20d":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport altair as alt \nimport plotly as pt\nfrom wordcloud import WordCloud, STOPWORDS as stopwords\nfrom PIL import Image\n%matplotlib inline","d57d38bf":"Heart = np.array(Image.open(\"..\/input\/heartred\/heart.png\"))\nHeart","52c3b08b":"def transform_format(val):\n    if val == 0:\n        return 255\n    else:\n        return val","322915df":"transformed_Heart = np.ndarray((Heart.shape[0],Heart.shape[1]), np.int32)\n\nfor i in range(len(Heart)):\n    transformed_Heart[i] = list(map(transform_format, Heart[i]))","605345fd":"transformed_Heart","3540b0ad":"df=pd.read_csv(\"..\/input\/heart-failure-prediction\/heart.csv\",encoding=\"utf-8\",engine=\"python\");df","2036670a":"df1=df[df[\"HeartDisease\"]==1]\nsns.countplot(x=\"ST_Slope\",data=df1);plt.show()","042623c9":"sns.categorical.violinplot(x=\"ST_Slope\",y=\"Oldpeak\",data=df1,hue=\"ChestPainType\")","e03bbfc4":"sns.categorical.boxenplot(x=\"ExerciseAngina\",y=\"Cholesterol\",data=df1,hue=\"ChestPainType\",palette='Spectral')","329be3a0":"df2=df1[[\"RestingBP\",\"Cholesterol\",\"MaxHR\"]]\ncolor=\"purple\"\nfor i in df2.columns:\n        df2[i].plot.hist(color=color)\n        plt.title(\"Histogram for \"+ str(i))\n        plt.show()","76e3af10":"s1=df[df[\"HeartDisease\"]==1].groupby(\"Age\").count().iloc[:,:1]\nsource = pd.DataFrame({\n    'a': s1.index,\n    'b': s1[\"Sex\"]\n})\n\nalt.Chart(source).mark_bar().encode(\n    x='a',\n    y='b'\n).properties(width=800)","5e26f4dc":"alt.Chart(df[df[\"HeartDisease\"]==1]).mark_bar(\n    cornerRadiusTopLeft=3,\n    cornerRadiusTopRight=3\n).encode(\n    x='Age',\n    y='count()',\n    color='ChestPainType'\n).properties(width=800)","953856d0":"alt.Chart(df[df[\"HeartDisease\"]==1]).mark_bar().encode(\n    alt.X(\"FastingBS\", bin=True),\n    y='count()',\n    row=\"Sex\"\n).properties(width=300,height=200)","804a5222":"bar = alt.Chart(df[df[\"HeartDisease\"]==1]).mark_bar().encode(\n    x=alt.X('RestingBP', bin=True),\n    y='count()'\n)\n\nrule =alt.Chart(df[df[\"HeartDisease\"]==1]).mark_rule(color='firebrick').encode(\n    x='mean(RestingBP)',\n    size=alt.value(5)\n)\nbar + rule","235b82c6":"df.head(5)","f599eff9":"df.tail(10)","ea615ecd":"columns_A = df.dtypes.keys().tolist()\ncolumns_B = df.dtypes.values.tolist()\ndataframe=pd.DataFrame({\"A\":columns_A,\"B\":columns_B});\nprint(dataframe)\ncount_dtypes=dataframe.groupby(\"B\").count()\ncount_dtypes","37e61066":"index_of_objects=list(dataframe.where(dataframe[\"B\"]==\"object\" ).dropna().A)\nfor i in index_of_objects:\n    print(df.groupby(i).count()[\"HeartDisease\"])","bcad7938":"colors_selected=[\"red\",\"peru\",\"green\"]\ncolor_list=[]\nchestpain_list=df[df[\"HeartDisease\"]==1].groupby([\"Sex\",\"ChestPainType\"]).count()[\"Age\"]\nfor i in chestpain_list.values:\n    if i == chestpain_list.values.max():\n        color=\"red\"\n    elif i == chestpain_list.values.min():\n        color=\"green\"\n    else:\n        color=\"peru\"\n        \n    color_list.append(color)\n    \ncolor_list","3b7d33ef":"chestpain_list","2f760093":"chestpain_list.plot.bar(color=color_list,title=\"No. of patients grouped in ChestPaintype and Sex\");plt.show()","b1e18041":"import plotly.graph_objects as go\ncolors = color_list\n\nfig = go.Figure(data=[go.Pie(labels=chestpain_list.index.tolist(),\n                             values=chestpain_list.tolist())])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.show()","2474d446":"import plotly.express as px\nfig = px.scatter(df[df[\"HeartDisease\"]==1], x=\"MaxHR\", y=\"Cholesterol\", color=\"ChestPainType\", marginal_y=\"violin\",\n           marginal_x=\"box\", trendline=\"ols\", template=\"simple_white\")\nfig.show()","c99282fe":"def text(dataframe):\n    lista=dataframe.keys().to_list()\n    add_string=\"\"\n    for i in lista:\n        add_string+=i     \n    return add_string\n    \ntext(df)","aa5bf28a":"text=text(df)","81709dc4":"wc = WordCloud(background_color=\"white\", mask=transformed_Heart,\n               stopwords=stopwords, contour_width=3, contour_color='red',max_font_size=30)\n\n# Generate a wordcloud\nwc.generate(text)\n\n# store to file\nwc.to_file(\"heart_mark.png\")\n\n# show\nplt.figure(figsize=[8,4])\nplt.imshow(wc, interpolation='nearest')\nplt.axis(\"off\")\nplt.show()","e8507e6d":"df.columns","be57f448":"df.shape","17788038":"df.info()","347de471":"df.describe()","28d4f8ba":"df.corr().style.highlight_min(color=\"red\",axis=0)","006c0474":"plt.figure(figsize=(15,8))\nsns.heatmap(df.corr(), vmin=-1, vmax=1,center=0,annot=True, fmt=\"f\", linewidths=1,cmap=\"rainbow_r\"\n           ,cbar_kws={\"orientation\": \"horizontal\"})\nplt.title(\"Correlation table among variables\");plt.show()","08d4f319":"sns.boxplot(x=\"Age\",y=\"Sex\",data=df,hue=\"HeartDisease\");plt.title(\"heart diseases as per sex among different ages\");plt.show()","9c894d79":"col=[\"pink\",\"red\"]\ndf1=df.groupby(\"Sex\").count()[\"HeartDisease\"].plot.bar(color=col,title=\"count of patient divided among sex\");plt.show()","0b1bc021":"sns.pairplot(data=df,hue=\"HeartDisease\",diag_kind=\"hist\", markers=[\"o\", \"s\"]);plt.show()","77513f26":"label=df.groupby(\"ChestPainType\").count()[\"HeartDisease\"].keys().tolist()","cd78eb73":"data=df.groupby(\"ChestPainType\").count()[\"HeartDisease\"].values.tolist()","c4b12dba":"data = data\nlabels = label\nplt.figure(facecolor=\"lightblue\",edgecolor=\"grey\",dpi=120)\n\n#define Seaborn color palette to use\ncolors = sns.color_palette('Set2',4)\n\n#create pie chart\nplt.pie(data, labels = labels, colors = colors, autopct='%.0f%%',explode=[0.1,0.1,0.2,0.1])\nplt.title(\"ChestPinType Count among Patients\")\nplt.show()","eff9822b":"plt.figure(figsize=(15,8))\nsns.set_style(\"darkgrid\")\nplt.subplot(221)\ndf[\"MaxHR\"][df[\"HeartDisease\"]==0].plot.hist(color=\"green\",bins=30);plt.title(\"Histogram of Max HeartRATE display among Non heart patients\")\nplt.subplot(222)\ndf[\"MaxHR\"][df[\"HeartDisease\"]==1].plot.hist(color=\"red\",bins=30);plt.title(\"Histogram of Max HeartRATE display among heart patients\")\nplt.subplot(223)\ndf[\"RestingBP\"][df[\"HeartDisease\"]==0].plot.hist(color=\"green\",bins=30);plt.title(\"Histogram of RestingBP display among Non heart patients\")\nplt.subplot(224)\ndf[\"RestingBP\"][df[\"HeartDisease\"]==1].plot.hist(color=\"red\",bins=30);plt.title(\"Histogram of RestingBP display among heart patients\")\nplt.show()","8810e338":"sns.set_style(\"ticks\")\nsns.jointplot(x=\"Age\",y=\"MaxHR\",hue=\"ExerciseAngina\",data=df,palette=\"Accent\")\nplt.grid(True);\nplt.show()","61b64e8a":"df[df[\"HeartDisease\"]==1].groupby(\"ExerciseAngina\").count()[\"HeartDisease\"].plot.barh(color=[\"red\",\"yellow\"],title=\"Patients with heart disease do heart excerice or not\")\nplt.show()","3a6f4f2c":"df[df[\"HeartDisease\"]==0].groupby(\"ExerciseAngina\").count()[\"HeartDisease\"].plot.barh(color=[\"green\",\"lightblue\"],title=\"Patients with no heart disease do heart excerice or not\")\nplt.show()","c42671d8":"n = list(df.groupby(\"ST_Slope\").count()[\"HeartDisease\"].keys())\ns = list(df.groupby(\"ST_Slope\").count()[\"HeartDisease\"].values)\nline = plt.bar(n,s,color=[\"olive\",\"lightblue\",\"lightgreen\"])\nplt.xlabel('different ST_slope')\nplt.ylabel(\"Count of Patients\")\n\nfor i in range(len(s)):\n    plt.annotate(str(s[i]), xy=(n[i],s[i]), ha='center', va='bottom')\n\nplt.show()","211b0848":"disease_status=[df[df[\"HeartDisease\"]==0].count()[\"Age\"],df[df[\"HeartDisease\"]==1].count()[\"Age\"]]","bcfdca70":"disease_label=[\"No Heart Disease\",\"Yes heart Disease\"]","7a5bd0b9":"plt.pie(disease_status, colors=[\"peru\",\"red\"], labels=disease_label,\n        autopct='%1.1f%%', pctdistance=0.8,\n        explode=[0,0.1])\n  \n# draw circle\ncentre_circle = plt.Circle((0, 0), 0.70, fc='white')\nfig = plt.gcf()\n  \n# Adding Circle in Pie chart\nfig.gca().add_artist(centre_circle)\n  \n# Adding Title of chart\nplt.title('How many have got heart disease and how many not?')\n\nplt.legend(disease_label, loc=\"center\")\n# Displaing Chart\nplt.show()","d8a2f89d":"source = df\n\nbase = alt.Chart(source)\n\nxscale = alt.Scale(domain=(df[\"MaxHR\"].min(),df[\"MaxHR\"].max()))\nyscale = alt.Scale(domain=(df[\"Cholesterol\"].min(),df[\"Cholesterol\"].max()))\n\narea_args = {'opacity': .3, 'interpolate': 'step'}\n\npoints = base.mark_circle().encode(\n    alt.X('MaxHR', scale=xscale),\n    alt.Y('Cholesterol', scale=yscale),\n    color='HeartDisease',\n)\n\ntop_hist = base.mark_area(**area_args).encode(\n    alt.X('MaxHR',\n          # when using bins, the axis scale is set through\n          # the bin extent, so we do not specify the scale here\n          # (which would be ignored anyway)\n          bin=alt.Bin(maxbins=20, extent=xscale.domain),\n          stack=None,\n          title=''\n         ),\n    alt.Y('count()', stack=None, title=''),\n    alt.Color('HeartDisease'),\n).properties(height=60)\n\nright_hist = base.mark_area(**area_args).encode(\n    alt.Y('Cholesterol',\n          bin=alt.Bin(maxbins=20, extent=yscale.domain),\n          stack=None,\n          title='',\n         ),\n    alt.X('count()', stack=None, title=''),\n    alt.Color('HeartDisease'),\n).properties(width=60)\n\ntop_hist & (points | right_hist)","bd6b6566":"alt.Chart(df[df[\"HeartDisease\"]==1]).mark_boxplot().encode(\n    x='ChestPainType',\n    y='MaxHR'\n).properties(width=800,height=200)","470954a9":"alt.Chart(source).mark_point().encode(\n    alt.X('mean(Cholesterol)', scale=alt.Scale(zero=False)),\n    y='RestingECG',\n    color='HeartDisease',\n    facet=alt.Facet('ChestPainType', columns=2),\n).properties(\n    width=400,\n    height=200,\n)","dc6c6428":"alt.Chart(df[df[\"HeartDisease\"]==1]).transform_density(\n    'Cholesterol',\n    as_=['Cholesterol', 'density'],\n    extent=[0,df[\"Cholesterol\"].max()],\n    groupby=['Sex']\n).mark_area(orient='horizontal').encode(\n    y='Cholesterol',\n    color='Sex',\n    x=alt.X(\n        'density:Q',\n        stack='center',\n        impute=None,\n        title=None,\n        axis=alt.Axis(labels=False, values=[0],grid=False, ticks=True),\n    ),\n    column=alt.Column(\n        'Sex',\n        header=alt.Header(\n            titleOrient='bottom',\n            labelOrient='bottom',\n            labelPadding=0,\n        ),\n    )\n).properties(\n    width=100\n).configure_facet(\n    spacing=0\n).configure_view(\n    stroke=None\n).properties(width=200,height=200)","86f38518":"alt.Chart(df[df[\"HeartDisease\"]==1]).mark_rect().encode(\n    alt.X('RestingBP', bin=alt.Bin(maxbins=80)),\n    alt.Y('Cholesterol', bin=alt.Bin(maxbins=40)),\n    alt.Color('mean(Cholesterol)', scale=alt.Scale(scheme='greenblue'))\n)","b4705549":"from bokeh.plotting import figure, output_file, show","2175d93a":"#ChestPainType\tRestingBP\tCholesterol\tFastingBS\tRestingECG\tMaxHR\ncolormap = {'Normal': 'red', 'ST': 'green', 'LVH': 'blue'}\ncolors = [colormap[x] for x in df[df[\"HeartDisease\"]==1]['RestingECG']]\n\np = figure(title = \"Resting ecg catergorization using scatterplot\")\np.xaxis.axis_label = 'RestingBP'\np.yaxis.axis_label = 'MaxHR'\n\np.circle(df[df[\"HeartDisease\"]==1 ][\"RestingBP\"], df[df[\"HeartDisease\"]==1][\"MaxHR\"],\n         color=colors, fill_alpha=0.2, size=10)\nshow(p)","dc145715":"hEATMAP doesn't show any straight relation among the variables.","82bf2929":"Age is also a desciding factor among the heart disease patients.","2846d0ec":"Male with chestpaintype(\"ASY\") are highest in number and accounts 69.5% percent of the total cases ,Male suffered More chest pain cases than female in heartdisease.","c039f0d8":"male got admitted more bcoz of heart disease according to data.","ff5b98b9":"58 year age group is most affected to heart disease","7905638b":"shows most people do their exercises ","60577df1":"Median of Cholesterol and MaxHR found high and low respectively in Chestpaintype (ASY)\n\nHigh Median of Cholesterol and Low MaxHR directly relates to heart disease cases.","d50b8415":"Men don't do recommended fasting while women do","ae0b2266":"58 year old patients have No TA chestpaintype patient  and other chestpaintype are high in number."}}