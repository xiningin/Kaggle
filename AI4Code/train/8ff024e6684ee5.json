{"cell_type":{"ea15056c":"code","f420fbb0":"code","15def596":"code","4836e8d7":"code","d36b876e":"code","9df58418":"code","ef4f1e5d":"code","554397a7":"code","864eb7a6":"code","fc745f9b":"code","b540bc3c":"code","5660cdb4":"code","4e7a307a":"code","115065b2":"code","06ff79ee":"code","2ebb19d1":"code","ba0d7222":"code","d99fc00b":"code","c170423b":"code","d747e6c0":"code","3323718d":"code","abcc1948":"code","2589c0d4":"code","70c651d0":"code","4c7b04fc":"code","851948ea":"code","1c685a2f":"code","d67d0b8a":"code","7e1a2c48":"code","d23c71e9":"code","d01098fd":"code","a6f6bed7":"code","2c7c58cd":"code","5afee172":"code","18083da8":"code","e59a893e":"code","7429071f":"code","70f51362":"code","fc51caf7":"code","fc5438f1":"code","b0dce834":"code","2aac2133":"code","58b33c31":"code","973584fb":"code","1e17ade2":"code","2d1a7ecf":"code","678310fa":"code","fb4ce1d1":"code","63aca250":"code","464c0cb4":"code","295a35c1":"code","e95972ab":"code","adda58de":"code","35cc849e":"code","bde11e0c":"code","74968968":"code","87ea9986":"code","48628486":"code","b6ac0a5e":"code","a6a906fe":"code","9fd5a07d":"code","776d4a0a":"code","e4e7640f":"code","34f2d66d":"code","03633b02":"code","a2d5a8be":"code","995ce1e8":"code","618d688c":"code","2601fc81":"code","45bb1d97":"code","ea82ccb5":"code","344314f4":"code","548035a5":"code","28ad913f":"code","1939eca9":"code","49e79d64":"code","3ac5c3b2":"code","af447086":"code","a38e7d12":"code","c8d15d8a":"code","40d859c2":"code","f5f7e27b":"code","dbdaaa0e":"code","b0d6c7a5":"code","be39839f":"code","eefcb723":"code","33e7b5e0":"code","c043e3d2":"markdown","89c35df4":"markdown","9a762d8d":"markdown","037353d2":"markdown","02a6d1e1":"markdown","5a68dba0":"markdown","8693d92f":"markdown","2fd5d441":"markdown","46fb3a75":"markdown","4eaca442":"markdown","cfd5b7db":"markdown","d281d9d9":"markdown","2f2e69f5":"markdown","dad82e86":"markdown","83407251":"markdown","895f0cbd":"markdown","ed2b7916":"markdown","905c76f9":"markdown","5443f313":"markdown"},"source":{"ea15056c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\npd.set_option('plotting.backend','matplotlib')","f420fbb0":"train = pd.read_csv('..\/input\/titanic-dataset-dinesh369\/titanic_train.csv')","15def596":"train.head()","4836e8d7":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","d36b876e":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train,palette='RdBu_r')","9df58418":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Sex',data=train,palette='RdBu_r')","ef4f1e5d":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Pclass',data=train,palette='rainbow')","554397a7":"sns.histplot(train['Age'].dropna(),kde=False,color='darkred',bins=30)","864eb7a6":"train['Age'].hist(bins=30,color='darkred',alpha=0.7)","fc745f9b":"sns.countplot(x='SibSp',data=train)","b540bc3c":"train['Fare'].hist(color='green',bins=40,figsize=(8,4))","5660cdb4":"from plotly.offline import download_plotlyjs,init_notebook_mode,iplot,plot\ninit_notebook_mode(connected=True)","4e7a307a":"import cufflinks as cf\ncf.go_offline()","115065b2":"train.head()","06ff79ee":"train['Fare'].iplot(kind='hist',bins=30,color='green')","2ebb19d1":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass',y='Age',data=train,palette='winter')","ba0d7222":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age","d99fc00b":"train['Age'] = train[['Age','Pclass']].apply(impute_age,axis=1)","c170423b":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","d747e6c0":"train.drop('Cabin',axis=1,inplace=True)","3323718d":"train.head()","abcc1948":"train.dropna(inplace=True)","2589c0d4":"train.info()","70c651d0":"sex = pd.get_dummies(train['Sex'],drop_first=True)\nembark = pd.get_dummies(train['Embarked'],drop_first=True)","4c7b04fc":"train.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","851948ea":"train = pd.concat([train,sex,embark],axis=1)","1c685a2f":"train.head(10)","d67d0b8a":"from sklearn.model_selection import train_test_split","7e1a2c48":"X_train, X_test, y_train, y_test = train_test_split(train.drop(['Survived','PassengerId'],axis=1), \n                                                    train['Survived'], test_size=0.33, \n                                                    random_state=42)","d23c71e9":"from sklearn.linear_model import LogisticRegression","d01098fd":"logmodel = LogisticRegression(max_iter=300)\nlogmodel.fit(X_train,y_train)","a6f6bed7":"predictions = logmodel.predict(X_test)\n","2c7c58cd":"from sklearn.metrics import classification_report,accuracy_score","5afee172":"print('Logistic Regression accuracy:',round(accuracy_score(y_test,predictions)*100),'%')","18083da8":"print(classification_report(y_test,predictions))","e59a893e":"testset=pd.read_csv('..\/input\/titanic-dataset-dinesh369\/titanic_test.csv')\ntestset.head()","7429071f":"sns.heatmap(testset.isnull(),yticklabels=False,cbar=False,cmap='viridis')","70f51362":"testset.drop('Cabin',axis=1,inplace=True)","fc51caf7":"sns.heatmap(testset.isnull(),yticklabels=False,cbar=False,cmap='viridis')","fc5438f1":"plt.figure(figsize=(12,6))\nsns.boxplot(x='Pclass',y='Age',data=testset,palette='winter')","b0dce834":"def inpute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 42\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age","2aac2133":"testset['Age'] = testset[['Age','Pclass']].apply(inpute_age,axis=1)","58b33c31":"testset.isnull().sum()","973584fb":"testset[testset['Fare'].isna()]","1e17ade2":"avgc3fare=testset.loc[(testset['Pclass']==3) & (testset['Embarked']=='S')]\navgc3faree=round(np.mean(avgc3fare['Fare']),2)\navgc3faree","2d1a7ecf":"testset.fillna(avgc3faree,inplace=True)","678310fa":"testset.isnull().sum()","fb4ce1d1":"ytestset=testset.drop(['Name','Ticket','PassengerId'],axis=1).copy()","63aca250":"ytestset.head()","464c0cb4":"ytest1=pd.get_dummies(data=ytestset,prefix=['Sex','Embarked'],columns=['Sex','Embarked'],drop_first=True)","295a35c1":"ytest1.head()","e95972ab":"testpred=logmodel.predict(ytest1)","adda58de":"len(testpred)","35cc849e":"final=pd.DataFrame(testpred,index=testset['PassengerId'],columns=['survived'])","bde11e0c":"final.head()","74968968":"sns.histplot(data=final['survived'])","87ea9986":"#final.to_csv('submissiondi.csv',index=True)","48628486":"from imblearn.combine import SMOTETomek","b6ac0a5e":"X=train.drop(['Survived','PassengerId'],axis=1)\ny=train['Survived']","a6a906fe":"os=SMOTETomek(random_state=42)","9fd5a07d":"xos,yos=os.fit_resample(X,y)","776d4a0a":"sns.countplot(y)","e4e7640f":"sns.countplot(yos)","34f2d66d":"from sklearn.preprocessing import MinMaxScaler","03633b02":"sc=MinMaxScaler()\nxos=sc.fit_transform(xos.values)\nytest1=sc.transform(ytest1)","a2d5a8be":"from xgboost import XGBClassifier","995ce1e8":"from sklearn.model_selection import RandomizedSearchCV","618d688c":"params={\n \"learning_rate\"    : [0.05, 0.10, 0.15, 0.20, 0.25, 0.30 ] ,\n \"max_depth\"        : [ 3, 4, 5, 6, 8, 10, 12, 15,16,17,18],\n \"min_child_weight\" : [ 1, 3, 5, 7,9,11,13,15],\n \"gamma\"            : [ 0.0, 0.1, 0.2 , 0.3, 0.4,0.5,0.6],\n \"colsample_bytree\" : [ 0.3, 0.4, 0.5 , 0.7,0.8 ]    \n}","2601fc81":"classifier=XGBClassifier()","45bb1d97":"search=RandomizedSearchCV(classifier,param_distributions=params,n_iter=10,scoring='roc_auc',n_jobs=-1,cv=5,verbose=3)","ea82ccb5":"trainX,testX,trainy,testy=train_test_split(xos,yos,test_size=0.3,random_state=0)","344314f4":"search.fit(trainX,trainy)","548035a5":"search.best_estimator_","28ad913f":"search.best_params_","1939eca9":"model=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=0.8, gamma=0.3, gpu_id=-1,\n              importance_type='gain', interaction_constraints='',\n              learning_rate=0.1, max_delta_step=0, max_depth=6,\n              min_child_weight=3, missing=None, monotone_constraints='()',\n              n_estimators=100, n_jobs=2, num_parallel_tree=1, random_state=0,\n              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1,\n              tree_method='exact', validate_parameters=1, verbosity=None)","49e79d64":"model.fit(trainX,trainy)","3ac5c3b2":"pred2=model.predict(testX)","af447086":"from sklearn.metrics import classification_report,confusion_matrix","a38e7d12":"cm=confusion_matrix(testy,pred2)\ncr=classification_report(testy,pred2)\nprint(f\"{cm}\\n{cr}\")","c8d15d8a":"search.fit(xos,yos)","40d859c2":"search.best_estimator_","f5f7e27b":"model2=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=0.8, gamma=0.1, gpu_id=-1,\n              importance_type='gain', interaction_constraints='',\n              learning_rate=0.25, max_delta_step=0, max_depth=15,\n              min_child_weight=5, missing=None, monotone_constraints='()',\n              n_estimators=100, n_jobs=2, num_parallel_tree=1, random_state=0,\n              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1,\n              tree_method='exact', validate_parameters=1, verbosity=None)","dbdaaa0e":"model2.fit(xos,yos)","b0d6c7a5":"pred3=model2.predict(ytest1)","be39839f":"final2=pd.DataFrame(pred3,index=testset['PassengerId'],columns=['survived'])","eefcb723":"final2.head()","33e7b5e0":"final2.to_csv('submission1.csv')","c043e3d2":"### <font color='red'><u>Logistic Regression<\/u><\/font>","89c35df4":"___\n___\n#   <center><font color=\"red\" style=\"font-family:courier;  background: linear-gradient(to top right, #ccffee 20%, #b3ffb3 70%)\">Titanic-Machine Learning from Disaster<\/font><\/center>\n\n*I am going to work with the [Titanic Data Set from Kaggle](https:\/\/www.kaggle.com\/c\/titanic). This is a very famous data set and very often is a student's first step in machine learning!*\n\n*We'll be trying to predict a classification- survival or deceased.\nLet's begin the understanding of implementing Logistic Regression in Python for classification.*\n\n\n## <font color=\"red\"><u>Import Libraries<\/u><\/font>\n*Let's import some libraries to get started!*","9a762d8d":"*let's begin exploratory data analysis by start cheching for the missing values*","037353d2":"___\n## <font color=\"red\"><u>Data Cleaning<\/u><\/font>\n*We want to fill in missing age data instead of just dropping the missing age data rows. One way to do this is by filling in the mean age of all the passengers (imputation).\nHowever we can be smarter about this and check the average age by passenger class. For example:*\n","02a6d1e1":"*Roughly 20 percent of the Age data is missing. The proportion of Age missing is likely small enough for reasonable replacement with some form of imputation. Looking at the Cabin column, it looks like we are just missing too much of that data to do something useful with at a basic level. We'll probably drop this later, or change it to another feature like \"Cabin Known: 1 or 0\"*\n\n*Let's continue on by visualizing some more of the data!*","5a68dba0":"*importing titanic_test.csv and checking head*","8693d92f":"____\n### <font color=\"red\"><u>Cufflinks for plots<\/u><\/font>\n___\n ","2fd5d441":"### <center><font color=\"red\">by Dinesh<\/font><\/center>","46fb3a75":"###  <font color='red'><u>Converting Categorical Features<\/u><\/font>","4eaca442":"## <font color='red'><u>Training and Predicting<\/u><\/font>","cfd5b7db":"*We can see the wealthier passengers in the higher classes tend to be older, which makes sense. We'll use these average age values to impute based on Pclass for Age.*","d281d9d9":"## <font color='red'><u>Exploratory Data Analysis<\/u><\/font>\n\n*Let's begin some exploratory data analysis! We'll start by checking out missing data!*\n\n### <font color='red'><u>Missing Data<\/u><\/font>\n\n*We can use seaborn to create a simple heatmap to see where we are missing data!*","2f2e69f5":"## <font color='red'><u>Exploratory Data Analysis<\/u><\/font> ","dad82e86":"## <font color='red'><u>Evaluation<\/u><\/font>","83407251":"## <font color='red'><u>Prediction with the created model<\/u><\/font> ","895f0cbd":"*Now apply that function!*","ed2b7916":"\n\n## <font color='red'><u>Using the model<\/u><\/font> ","905c76f9":"## <font color='red'><u>The Data<\/u><\/font>\n\n<i>Let's start by reading in the titanic_train.csv file into a pandas dataframe.<\/i>","5443f313":"*Now let's check that heat map again!*"}}