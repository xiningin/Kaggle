{"cell_type":{"2ed3db38":"code","1a59b845":"code","72d727a5":"code","75bd4740":"code","9ad9db4a":"code","bb2016ad":"code","09da82ac":"code","5fcb03db":"code","85a7e151":"code","a4c10989":"code","e30e8d25":"code","b87d0cda":"code","892264d8":"code","4fa991cb":"code","9fa32dec":"code","0a9750fb":"code","81d78a57":"code","31aa7e8a":"code","e947849e":"code","854a2e28":"code","94fedfa2":"code","951c39f1":"code","f93ca014":"code","1d5d9a57":"code","c8437f26":"code","f6043fe9":"code","0d17f532":"code","282e4257":"code","e32c49b2":"code","85734e33":"code","2f376ea1":"markdown","ee54e21d":"markdown","41cedef1":"markdown","46b0f4e2":"markdown","860f8414":"markdown","db334dbb":"markdown","bcfd2cee":"markdown","d60a4f65":"markdown"},"source":{"2ed3db38":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)\n\ndefault_path = '..\/input\/'","1a59b845":"!ls ..\/input","72d727a5":"train_df = pd.read_csv(default_path+'sales_train.csv')\nitems_df = pd.read_csv(default_path+'items.csv')\ntest_df = pd.read_csv(default_path+'test.csv')\n\n","75bd4740":"print(train_df.shape, test_df.shape)","9ad9db4a":"train_df.head()","bb2016ad":"sns.boxplot(y = 'item_cnt_day', data = train_df)","09da82ac":"train_df = train_df.drop_duplicates()\ntrain_df[train_df.duplicated()]","5fcb03db":"train_df = train_df[train_df['item_cnt_day'] < 1100]\ntrain_df['date'] = pd.to_datetime(train_df['date'], format='%d.%m.%Y')","85a7e151":"train_df.info()","a4c10989":"train_df.tail()","e30e8d25":"# Impute all the new item_id in test set as 0\ndataset = train_df.pivot_table(index=['item_id', 'shop_id'],values=['item_cnt_day'], columns='date_block_num', fill_value=0,aggfunc=np.sum)\ndataset = dataset.reset_index()","b87d0cda":"dataset.describe()","892264d8":"dataset.tail()","4fa991cb":"test_df.head()","9fa32dec":"dataset = pd.merge(test_df, dataset, on=['item_id', 'shop_id'], how='left')\ndataset = dataset.fillna(0)\ndataset.head()","0a9750fb":"dataset = dataset.drop(['shop_id', 'item_id', 'ID'], axis=1)\ndataset.head()","81d78a57":"X_train = np.expand_dims(dataset.values[:, :-1], axis=2)\ny_train = dataset.values[:, -1:]\n\nX_test = np.expand_dims(dataset.values[:, 1:], axis=2)\nprint(X_train.shape, y_train.shape, X_test.shape)","31aa7e8a":"dataset.values.shape","e947849e":"dataset.values[:,:-1].shape","854a2e28":"from keras.models import Sequential\nfrom keras.layers import LSTM, Dense, Dropout","94fedfa2":"model = Sequential()\nmodel.add(LSTM(units=64, input_shape=(33,1)))\nmodel.add(Dropout(0.3))\nmodel.add(Dense(1))\n\nmodel.compile(loss='mse',\n              optimizer='adam',\n              metrics=['mean_squared_error'])\n\nmodel.summary()","951c39f1":"from keras.callbacks import EarlyStopping\n\ncallbacks_list=[EarlyStopping(monitor=\"val_loss\",min_delta=.001, patience=3,mode='auto')]\n\nhistory = model.fit(X_train, y_train, batch_size=4096, epochs=25,callbacks=callbacks_list)\n\n","f93ca014":"#plt.plot(history.history['loss'], label= 'loss(mse)')\nplt.plot(np.sqrt(history.history['mean_squared_error']), label= 'training RMSE')\nplt.legend(loc=1)","1d5d9a57":"pred = model.predict(X_train)\n\npred = pred.clip(0, 20)","c8437f26":"print(y_train.shape)\nprint(pred.shape)","f6043fe9":"from sklearn.metrics import mean_squared_error\nimport math\n\n# calculate root mean squared error\ntrainScore = math.sqrt(mean_squared_error(y_train, pred[:,0]))\nprint('Train Score: %.2f RMSE' % (trainScore))\n","0d17f532":"LSTM_prediction = model.predict(X_test)","282e4257":"LSTM_prediction = np.round(LSTM_prediction,2)","e32c49b2":"LSTM_prediction = LSTM_prediction.clip(0, 20)","85734e33":"submission = pd.DataFrame({'ID': test_df['ID'], 'item_cnt_month': LSTM_prediction.ravel()})\nsubmission.to_csv('submission.csv',index=False)","2f376ea1":"### Reshape the training set as time series","ee54e21d":"### Prepare the test set","41cedef1":"### Outliers","46b0f4e2":"### LSTM Model","860f8414":"### Define the LSTM input","db334dbb":"### Duplicates","bcfd2cee":"### Data Overview","d60a4f65":"reference: https:\/\/www.kaggle.com\/kcbighuge\/predicting-sales-with-a-nested-lstm"}}