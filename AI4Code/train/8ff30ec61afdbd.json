{"cell_type":{"a264f991":"code","6e768585":"code","96b6f763":"code","9baa8a4c":"code","2841dacb":"code","210a7827":"code","d4773b0a":"code","a37622fb":"markdown","e0433fcf":"markdown","d7742066":"markdown","17f2a33c":"markdown","498a87a3":"markdown","cad3926e":"markdown"},"source":{"a264f991":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport requests\nimport json\nimport numpy as np\nimport pandas as pd\n\nmundo = requests.get('https:\/\/raw.githubusercontent.com\/johan\/world.geo.json\/master\/countries.geo.json')\ngeo_mundo = json.loads(mundo.content)\n","6e768585":"data_confirmed = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_global.csv')\ndeaths_data = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_global.csv')\nrecoveries_df = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_recovered_global.csv')","96b6f763":"data_confirmed = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_confirmed_global.csv')\n\nultima_fecha_cl = data_confirmed.columns\nultima_fecha_cl= ultima_fecha_cl[-1]\n\n\ndata_confirmed.loc[data_confirmed['Country\/Region'] == 'US', \"Country\/Region\"] = 'United States of America'\n\ndata_confirmed.loc[data_confirmed['Country\/Region'] == 'US', \"Country\/Region\"] = 'United States of America'\ndata_confirmed.loc[data_confirmed['Country\/Region'] == 'Congo (Kinshasa)', \"Country\/Region\"] = 'Democratic Republic of the Congo'\n\n#AGREGAR French Guiana COMO PAIS Y NO PROVICNCIA DE FRANCIA PERO SE SUMAR A EL TOTAL DE FRANCIA IGUAL\ndata_confirmed = data_confirmed.append({'Country\/Region':'French Guiana',ultima_fecha_cl: int(data_confirmed[data_confirmed['Province\/State']=='French Guiana'][ultima_fecha_cl])}, ignore_index=True)\n\ndata_confirmed.loc[data_confirmed['Country\/Region'] == \"Cote d'Ivoire\", \"Country\/Region\"] = 'Ivory Coast'\ndata_confirmed.loc[data_confirmed['Country\/Region'] == 'Congo (Brazzaville)', \"Country\/Region\"] = 'Republic of the Congo'\ndata_confirmed.loc[data_confirmed['Country\/Region'] == 'Tanzania', \"Country\/Region\"] = 'United Republic of Tanzania'\ndata_confirmed.loc[data_confirmed['Country\/Region'] == 'Korea, South', \"Country\/Region\"] = 'South Korea'\n\nd = data_confirmed.groupby(['Country\/Region']).sum()\n\npaises = data_confirmed['Country\/Region'].drop_duplicates()\npaises = sorted(paises)\n\ndata_mundo_mapa = pd.DataFrame({'Country': paises,'Casos':d[ultima_fecha_cl]})\ndata_mundo_mapa.head()","9baa8a4c":"recoveries_df = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_recovered_global.csv')\n\nultima_fecha_cl = deaths_data.columns\nultima_fecha_cl= ultima_fecha_cl[-1]\n\n\nrecoveries_df.loc[recoveries_df['Country\/Region'] == 'US', \"Country\/Region\"] = 'United States of America'\n\nrecoveries_df.loc[recoveries_df['Country\/Region'] == 'US', \"Country\/Region\"] = 'United States of America'\nrecoveries_df.loc[recoveries_df['Country\/Region'] == 'Congo (Kinshasa)', \"Country\/Region\"] = 'Democratic Republic of the Congo'\n\n#AGREGAR French Guiana COMO PAIS Y NO PROVICNCIA DE FRANCIA PERO SE SUMAR A EL TOTAL DE FRANCIA IGUAL\nrecoveries_df = recoveries_df.append({'Country\/Region':'French Guiana',ultima_fecha_cl: int(data_confirmed[data_confirmed['Province\/State']=='French Guiana'][ultima_fecha_cl])}, ignore_index=True)\n\nrecoveries_df.loc[recoveries_df['Country\/Region'] == \"Cote d'Ivoire\", \"Country\/Region\"] = 'Ivory Coast'\nrecoveries_df.loc[recoveries_df['Country\/Region'] == 'Congo (Brazzaville)', \"Country\/Region\"] = 'Republic of the Congo'\nrecoveries_df.loc[recoveries_df['Country\/Region'] == 'Tanzania', \"Country\/Region\"] = 'United Republic of Tanzania'\nrecoveries_df.loc[recoveries_df['Country\/Region'] == 'Korea, South', \"Country\/Region\"] = 'South Korea'\n\n\n\nd2 = recoveries_df.groupby(['Country\/Region']).sum()\n\npaises = recoveries_df['Country\/Region'].drop_duplicates()\npaises = sorted(paises)\nv = d2[ultima_fecha_cl].apply(str)\n\ndata_mundo_mapa_rec = pd.DataFrame({'Country': paises,'Recuperados':v})\ndata_mundo_mapa_rec.head()","2841dacb":"deaths_data = pd.read_csv('https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_time_series\/time_series_covid19_deaths_global.csv')\n\n\nultima_fecha_cl = deaths_data.columns\nultima_fecha_cl= ultima_fecha_cl[-1]\n\n\ndeaths_data.loc[deaths_data['Country\/Region'] == 'US', \"Country\/Region\"] = 'United States of America'\n\ndeaths_data.loc[deaths_data['Country\/Region'] == 'US', \"Country\/Region\"] = 'United States of America'\ndeaths_data.loc[deaths_data['Country\/Region'] == 'Congo (Kinshasa)', \"Country\/Region\"] = 'Democratic Republic of the Congo'\n\n#AGREGAR French Guiana COMO PAIS Y NO PROVICNCIA DE FRANCIA PERO SE SUMAR A EL TOTAL DE FRANCIA IGUAL\ndeaths_data = deaths_data.append({'Country\/Region':'French Guiana',ultima_fecha_cl: int(data_confirmed[data_confirmed['Province\/State']=='French Guiana'][ultima_fecha_cl])}, ignore_index=True)\n\ndeaths_data.loc[deaths_data['Country\/Region'] == \"Cote d'Ivoire\", \"Country\/Region\"] = 'Ivory Coast'\ndeaths_data.loc[deaths_data['Country\/Region'] == 'Congo (Brazzaville)', \"Country\/Region\"] = 'Republic of the Congo'\ndeaths_data.loc[deaths_data['Country\/Region'] == 'Tanzania', \"Country\/Region\"] = 'United Republic of Tanzania'\ndeaths_data.loc[deaths_data['Country\/Region'] == 'Korea, South', \"Country\/Region\"] = 'South Korea'\n\n\n\nd2 = deaths_data.groupby(['Country\/Region']).sum()\n\npaises = deaths_data['Country\/Region'].drop_duplicates()\npaises = sorted(paises)\n\ndata_mundo_mapa_death = pd.DataFrame({'Country': paises,'Fallecidos':d2[ultima_fecha_cl]})\ndata_mundo_mapa_death.head()","210a7827":"data_cd = pd.merge(data_mundo_mapa, data_mundo_mapa_death, on='Country')\ndata_cdr =  pd.merge(data_cd, data_mundo_mapa_rec, on='Country')\ndata_cdr.head()","d4773b0a":"import plotly.graph_objects as go\nfig = go.Figure(go.Choroplethmapbox(geojson=geo_mundo, locations=data_cdr.Country, z=data_cdr.Casos,\n                                    colorscale=\"Viridis\", zmin=0, zmax=100000,\n                                    featureidkey=\"properties.name\",\n                                    colorbar = dict(thickness=20, ticklen=3),\n                                    marker_opacity=0.2, marker_line_width=0,  \n                                    text=data_cdr['Fallecidos'],\n                                      hovertemplate = '<b>Country<\/b>: <b>'+data_cdr['Country']+'<\/b>'+\n                                            '<br><b>Cases <\/b>: %{z}<br>'+\n                                            '<b>Deceased: <\/b>:%{text}<br>'+\n                                            '<b>Recovered<\/b>: <b>'+data_cdr['Recuperados']  ))\n\nfig.update_layout(mapbox_style=\"carto-positron\",\n                  mapbox_zoom=1,height=700,mapbox_center = {\"lat\": 0, \"lon\": 0})\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","a37622fb":"# Accumulated cases","e0433fcf":"<center><a href=\"https:\/\/covid19-chile-an.herokuapp.com\"><img src=\"https:\/\/i.ibb.co\/PZpHtpz\/dashf.png\" alt=\"dashf\" border=\"0\"><\/a><\/center>\n\n\n\n\n\n\n### Todo el trabajo sera implementado como pagina web(analisis en detalle del COVID19 en Chile ), alojada en heroku: https:\/\/covid19-chile-an.herokuapp.com\n### All work will be implemented as a web page(detailed analysis of COVID19 in Chile), hosted on heroku(: https:\/\/covid19-chile-an.herokuapp.com","d7742066":"# World map: accumulated, recovered and deceased cases","17f2a33c":"# Recovered cases","498a87a3":"# World Map: COVID-19 + WEB PAGE","cad3926e":"# Accumulated deceased"}}