{"cell_type":{"69cd65d3":"code","1a4d6313":"code","ecc055c0":"code","f60ed6b3":"code","bcb7bd2b":"code","3cc49e55":"code","59c493ea":"code","da1781d2":"code","f34830a2":"code","9d2120ce":"code","e2b1d1b7":"code","c1615550":"code","7c775a0d":"code","480d3166":"code","a3dac732":"code","1b6b3787":"code","daa92945":"code","0cbc7e5d":"code","61599ef7":"code","e7cd80d3":"code","b27b611f":"code","a02662f8":"code","1bfdef72":"code","1f2979ba":"code","00bb9f7f":"code","1e09f645":"code","6632c7c2":"code","9f9a7be1":"code","1496ba9e":"code","0f89f1d7":"code","84dcf18b":"code","5961f195":"markdown","53414b40":"markdown","487ab3ea":"markdown","899c2707":"markdown","c62ac5ff":"markdown","8666ec66":"markdown","2baeb7e2":"markdown","6d5c6dc0":"markdown","69554585":"markdown","7d6608c7":"markdown"},"source":{"69cd65d3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1a4d6313":"df=pd.read_csv(\"..\/input\/advertising\/advertising.csv\")\ndf=df.iloc[:,1:]","ecc055c0":"df.head()","f60ed6b3":"df.tail()","bcb7bd2b":"df.info()","3cc49e55":"df.corr()","59c493ea":"fig,ax=plt.subplots(ncols=2,nrows=2,figsize=(16,12))\nlist_col=list(df.columns)\ncolor=[\"#DC143C\",\"#008000\",\"#4169E1\",\"#FFA500\"]\ncol=0\nfor i in range(2):\n    for j in range(2):\n        sns.distplot(df[list_col[col]],ax=ax[i][j],kde=False,color=color[col],bins=30)\n        col+=1","da1781d2":"fig,ax=plt.subplots(ncols=2,nrows=2,figsize=(16,12))\ncol=0\nfor i in range(2):\n    for j in range(2):\n        sns.kdeplot(df[list_col[col]],ax=ax[i][j],color=color[col],shade=True)\n        col+=1","f34830a2":"fig,ax=plt.subplots(ncols=3,nrows=1,figsize=(16,5))\ncol=0\nfor i in range(3):\n    sns.kdeplot(df[list_col[i]],df[\"sales\"],ax=ax[i],color=color[i],shade=True)\n    col+=1","9d2120ce":"fig,ax=plt.subplots(ncols=3,nrows=1,figsize=(16,5))\ncol=0\nfor i in range(3):\n    sns.scatterplot(data=df,x=list_col[i],y=\"sales\",ax=ax[i],color=color[i],s=80)\n    col+=1","e2b1d1b7":"fig,ax=plt.subplots(ncols=3,nrows=1,figsize=(16,5))\ncol=0\nfor i in range(3):\n    sns.regplot(data=df,x=list_col[i],y=\"sales\",ax=ax[i],scatter_kws={\"s\":80},color=color[i],line_kws={\"lw\":5,\"color\":color[-1]})","c1615550":"plt.figure(figsize=(16,6))\nfor i in range(3):\n    sns.scatterplot(data=df,x=list_col[i],y=\"sales\",s=80,color=color[i])","7c775a0d":"plt.figure(figsize=(16,6))\nfor i in range(3):\n    sns.regplot(data=df,x=list_col[i],y=\"sales\",scatter_kws={\"s\":80},color=color[i],line_kws={\"lw\":5})\n\nplt.xlim(-10,300)","480d3166":"sns.pairplot(df,kind=\"reg\",aspect=1.8,height=1.8)","a3dac732":"from sklearn.model_selection import train_test_split,GridSearchCV,cross_val_score\nfrom sklearn.metrics import r2_score,mean_squared_error,mean_absolute_error\nfrom xgboost import XGBRegressor","1b6b3787":"X=df.drop([\"sales\"],axis=1)\nY=df[\"sales\"]\n\nX_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=0)","daa92945":"print(Y_train.shape,Y_test.shape)","0cbc7e5d":"xgb_model=XGBRegressor().fit(X_train,Y_train)","61599ef7":"r2_score(Y_train,xgb_model.predict(X_train))","e7cd80d3":"mae=mean_absolute_error(Y_train,xgb_model.predict(X_train))\nmse=mean_squared_error(Y_train,xgb_model.predict(X_train))\nrmse=np.sqrt(mse)\n\nprint(\"Mean Absolute Error (MAE) : \",mae)\nprint(\"Mean Squared Error (MSE)  :\",mse)\nprint(\"Mean Squared Error (MSE)  :\",rmse)","b27b611f":"mae=mean_absolute_error(Y_test,xgb_model.predict(X_test))\nmse=mean_squared_error(Y_test,xgb_model.predict(X_test))\nrmse=np.sqrt(mse)\n\nprint(\"Mean Absolute Error (MAE) : \",mae)\nprint(\"Mean Squared Error (MSE)  :\",mse)\nprint(\"Mean Squared Error (MSE)  :\",rmse)","a02662f8":"Importance=pd.DataFrame({\"Importance\":xgb_model.feature_importances_},index=X_train.columns)\nImportance.plot.barh(color=color[-1])","1bfdef72":"xgb_model","1f2979ba":"xgb_params={\"colsample_bytree\":[0.2,0.4,0.8,1],\n           \"n_estimators\":[100,200,500,1000],\n           \"max_depth\":[2,4,6],\n           \"learning_rate\":[0.01,0.1,0.3,0.5]}","00bb9f7f":"xgb_cv=GridSearchCV(xgb_model,xgb_params,cv=5,n_jobs=-1,verbose=2).fit(X_train,Y_train)","1e09f645":"xgb_cv.best_params_","6632c7c2":"xgb_model=XGBRegressor(colsample_bytree=1,learning_rate=0.01,max_depth=4,n_estimators=1000).fit(X_train,Y_train)","9f9a7be1":"r2_score(Y_train,xgb_model.predict(X_train))","1496ba9e":"mae=mean_absolute_error(Y_train,xgb_model.predict(X_train))\nmse=mean_squared_error(Y_train,xgb_model.predict(X_train))\nrmse=np.sqrt(mse)\n\nprint(\"Mean Absolute Error (MAE) : \",mae)\nprint(\"Mean Squared Error (MSE)  :\",mse)\nprint(\"Mean Squared Error (MSE)  :\",rmse)","0f89f1d7":"mae=mean_absolute_error(Y_test,xgb_model.predict(X_test))\nmse=mean_squared_error(Y_test,xgb_model.predict(X_test))\nrmse=np.sqrt(mse)\n\nprint(\"Mean Absolute Error (MAE) : \",mae)\nprint(\"Mean Squared Error (MSE)  :\",mse)\nprint(\"Mean Squared Error (MSE)  :\",rmse)","84dcf18b":"Importance=pd.DataFrame({\"Importance\":xgb_model.feature_importances_},index=X_train.columns)\nImportance.plot.barh(color=color[-1])","5961f195":"# Train Error","53414b40":"# Test,Train and Create XGBoost Model","487ab3ea":"# Load and Check Data","899c2707":"![](https:\/\/www.advotisa.com\/wp-content\/uploads\/2019\/05\/ad-agency-blog-pic.jpg)","c62ac5ff":"# Feature \u0130mportance","8666ec66":"# Model Tuning","2baeb7e2":"# ADVERTISING XGBOOST MODEL","6d5c6dc0":"# Import Module","69554585":"# Data Visualization","7d6608c7":"# Test Error"}}