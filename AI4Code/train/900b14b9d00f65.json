{"cell_type":{"94eb935b":"code","ea063ce6":"code","8ad79aa3":"code","23935e6a":"code","3f48eb9d":"code","2e9b73a3":"code","aede06d7":"code","7854eb38":"code","8a70babc":"code","8e539f9f":"code","91f5c190":"code","f1f67273":"code","13608f6e":"code","f178537c":"code","3c4920ee":"code","48261e0a":"code","1d08f973":"code","4c6eaf08":"code","2d4b6c26":"code","37b99d77":"code","93eaecc8":"markdown","c5f8990a":"markdown"},"source":{"94eb935b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ea063ce6":"#reading data\ndata = pd.read_csv('..\/input\/fifa-20-complete-player-datasets\/FIFAdatas.csv')","8ad79aa3":"# taking a look at the data\ndata.describe()","23935e6a":"# still looking at the dataframe\ndata.shape","3f48eb9d":"# checking if this df has duplicated values\ndata.duplicated()","2e9b73a3":"# dropping all duplicated\ndata = data.drop_duplicates()","aede06d7":"data.head()","7854eb38":"# by taking a look at the data we noticed that we have to fix some strings like coluns Age, Wage and Value\n# lets first  adjust column Age\ndata.info()","8a70babc":"# converting age to float\n# thanks to Samrat rai for helping me with this proccess\ndef Age_num(df_age):\n    try:\n        age = float(df_age[2:-2])\n    except ValueError:\n        age = NaN\n    return age   \ndata['Age_Num'] = data['Age'].apply(Age_num)\nprint(data['Age_Num'])","8e539f9f":"# now we have to fix wage and value\ndef extract_wages(x):\n    out = x.replace('\u20ac','')\n    if 'K' in out:\n        out = float(out.replace('K',''))*1000\n    elif 'M' in out:\n        out = float(out.replace('M',''))*100000\n    return float(out)","91f5c190":"# applying the function for Wage\ndata['Wage_num'] = data['Wage'].apply(lambda x: extract_wages(x))\ndata.head()","f1f67273":"# applying for Value\ndata['Value_num'] = data['Value'].apply(lambda x: extract_wages(x))\ndata.head()","13608f6e":"# let's check which position values the most\n\nfig = plt.figure(figsize = (10,5))\nplt.plot(data.groupby('Position')['Value_num'].mean().sort_values(ascending = False),'--bo')\nplt.xlabel('Positions')\nplt.ylabel('Mean of value')\nplt.title('Value by positions')","f178537c":"#testing boxplot\n# lets check the wage's distribuition by position\n# we can see a lot of outliers, probably for cristiano ronaldo, messi and neymar\n# for the other positions we can consider per exemplo: Virgil van Dijk\ndata.boxplot(column = 'Wage_num', by = 'Position');\nplt.title('Wage by positions')\nplt.suptitle('')\nplt.grid('')","3c4920ee":"# checking which players have most wage\n# it's strange because we see players that don't usually appear so much in midia, neymar and CR7 are one of those, and San\u00e9 is a bench player\ndata.sort_values(by = 'Wage_num', ascending= False).head()","48261e0a":"# checking the top 8 teams with the higher overall rating\nfig = plt.figure(figsize = (12,10));\nax = fig.add_axes([0.1, .1, 1, 0.4]);\nplt.plot(data.groupby('Team')['Overall'].mean().sort_values(ascending = False).head(8),'-o');\nplt.title('Overall dos tops 8 times do FIFA 20', fontsize = 16, color = 'w')\nplt.xlabel('Clubes', fontsize = 14, color = 'w')\nplt.ylabel('Overall', fontsize=  14, color = 'w')","1d08f973":"# again we see something strange, really Real Sociedad ? It's a good team but probably their data may be weird. Let's check\ndata[data['Team'] == 'Real Sociedad']","4c6eaf08":"#lets plot only teams that at least have more than 3 players listed\ncounts_team = data['Team'].value_counts().sort_values(ascending = False)\ncounts_team[counts_team >= 3]\n\ngroup_by_filter = pd.DataFrame(data[data['Team'].isin(counts_team[counts_team >3].index)].groupby('Team')['Overall'].mean().sort_values(ascending = False))\n","2d4b6c26":"# first line is in index, we have to reset\ngroup_by_filter = group_by_filter.reset_index()","37b99d77":"# In this graphic we see which teams has higher overall ratings\nfig = plt.figure(figsize = (12,10));\nplt.bar(x = group_by_filter['Team'], height = group_by_filter['Overall'],\n        color = 'blue',\n        width = 0.8,\n        alpha = 0.6,\n        edgecolor = 'black')\nplt.title('Top clubes com o maior overall',fontsize = 24, color = 'w');\n\nplt.xlabel('Clubes',fontsize = 16, color = 'w');\nplt.ylabel('Overall',fontsize = 16, color = 'w');\n","93eaecc8":"We absolut understand that central forwards players have more popularity between the others, and this reflects by their market value.","c5f8990a":"Guys this is my first kernel playing with Python.\n\nPlease, any comments or tips would be awesome! \n\nThanks, please enjoy this EDA."}}