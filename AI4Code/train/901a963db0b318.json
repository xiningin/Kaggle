{"cell_type":{"42a77331":"code","a2aa9cf9":"code","2265b806":"code","ee69bfae":"code","1ebd7a32":"code","6f78ba4f":"code","62c11042":"code","9eda56ce":"code","0abca4c3":"code","1908bae1":"code","fb594b1b":"code","d59091df":"code","e44b8163":"code","d912f38b":"code","59c71601":"code","8683c951":"code","495ab2f3":"markdown","9ed735e3":"markdown","5f6472b2":"markdown"},"source":{"42a77331":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport time\nimport csv\n# Data processing, metrics and modeling\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split, StratifiedKFold,KFold\nfrom datetime import datetime\nfrom sklearn.metrics import precision_score, recall_score, confusion_matrix, accuracy_score, roc_auc_score, f1_score, roc_curve, auc,precision_recall_curve\nfrom sklearn import metrics\nfrom sklearn import preprocessing\nfrom sklearn.linear_model import LinearRegression\n# Suppr warning\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport itertools\nfrom scipy import interp\n# Plots\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom matplotlib import rcParams\nfrom matplotlib import cm\n#import ggridges\n# Any results you write to the current directory are saved as output.\nimport seaborn as sns\nimport statsmodels.api as sm\n# Any results you write to the current directory are saved as output.\nimport pandas_profiling\nimport geopandas as gpd\nfrom shapely.geometry import Point, Polygon\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.basemap import Basemap\n\nimport plotly.graph_objects as go","a2aa9cf9":"df = pd.read_csv(r'\/kaggle\/input\/housesalesprediction\/kc_house_data.csv')","2265b806":"df.get_dtype_counts()","ee69bfae":"pandas_profiling.ProfileReport(df)","1ebd7a32":"x = np.array(df['price']).reshape((-1,1))\ny = np.array(df['yr_built'])\nprint(x)\nprint(y)","6f78ba4f":"model = LinearRegression()\nmodel.fit(x,y)\nmodel = LinearRegression().fit(x,y)","62c11042":"r_sq = model.score(x,y)\nprint('coefficient of determination:', r_sq)","9eda56ce":"print('intercept:', model.intercept_)","0abca4c3":"print('slope:', model.coef_)","1908bae1":"new_model = LinearRegression().fit(x, y.reshape((-1, 1)))\nprint('intercept:', new_model.intercept_)","fb594b1b":"print('slope:', new_model.coef_)","d59091df":"y_pred = model.predict(x)\nprint('predicted response:', y_pred, sep='\\n')","e44b8163":"x = np.array(df['price']).reshape((-1,1))\ny = np.array(df['view'])\nprint(x)\nprint(y)\n\nmodel = LinearRegression()\nmodel.fit(x,y)\nmodel = LinearRegression().fit(x,y)\n\nr_sq = model.score(x,y)\nprint('coefficient of determination:', r_sq)\n\nprint('intercept:', model.intercept_)\n\nprint('slope:', model.coef_)\n\ny_pred = model.predict(x)\nprint('predicted response:', y_pred, sep='\\n')","d912f38b":"x = np.array(df['price']).reshape((-1,1))\ny = np.array(df['bedrooms'])\nprint(x)\nprint(y)\n\nmodel = LinearRegression()\nmodel.fit(x,y)\nmodel = LinearRegression().fit(x,y)\n\nr_sq = model.score(x,y)\nprint('coefficient of determination:', r_sq)\n\nprint('intercept:', model.intercept_)\n\nprint('slope:', model.coef_)\n\ny_pred = model.predict(x)\nprint('predicted response:', y_pred, sep='\\n')","59c71601":"x = np.array(df['price']).reshape((-1,1))\ny = np.array(df['sqft_above'])\nprint(x)\nprint(y)\n\nmodel = LinearRegression()\nmodel.fit(x,y)\nmodel = LinearRegression().fit(x,y)\n\nr_sq = model.score(x,y)\nprint('coefficient of determination:', r_sq)\n\nprint('intercept:', model.intercept_)\n\nprint('slope:', model.coef_)\n\ny_pred = model.predict(x)\nprint('predicted response:', y_pred, sep='\\n')","8683c951":"df['text'] = df['zipcode'].astype(str)+ ',' + df['price'].astype(str)\n\nfig = go.Figure(data=go.Scattergeo(\n        lon = df['long'],\n        lat = df['lat'],\n        text = df['text'],\n        mode = 'markers',\n        marker_color = df['price'],\n        ))\n\nfig.update_layout(\n        title = 'King County House Prices by Location',\n        geo_scope='usa',\n    )\nfig.show()","495ab2f3":"This section moves into a Linear Regression for several variables compared to Price. It can be seen that 'sqft_above' has a coefficient of determination of .35","9ed735e3":"Data Description and Details Section","5f6472b2":"Zoom in on the map to see individual locations."}}