{"cell_type":{"228ebbd0":"code","7ded0c85":"code","9ff9bfe1":"code","0904d4c8":"code","c42e748f":"code","15ba7dce":"code","455c05d5":"code","93ae3693":"code","2ef69bd1":"code","93d2459f":"code","1d8facca":"code","ae56b9be":"code","8cb8c2eb":"code","720c9573":"code","2e3ac35f":"code","e1d89ee6":"code","6f01bf5b":"code","b660e8bc":"code","937b4f03":"code","47dd5db1":"code","b353b853":"code","3d213a2b":"code","3ddf8789":"code","c7ebeb94":"markdown"},"source":{"228ebbd0":"#Loading the required libraries\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')","7ded0c85":"#Loading the Iris DataSet\n\ndf_iris = pd.read_csv('..\/input\/iris\/Iris.csv')\ndf_iris = df_iris.drop(labels = 'Id', axis = 1)\ndf_iris.head()","9ff9bfe1":"#Counting data for each species\n\ndf_iris['Species'].value_counts()","0904d4c8":"#Visualizing the same using a pie plot\n\ndf_iris['Species'].value_counts().plot.pie(explode=[0.1,0.1,0.1],autopct='%1.1f%%',shadow=True,figsize=(10,8))","c42e748f":"#Checking the structure of the dataframe\ndf_iris.info()","15ba7dce":"#checking if there are any null values in the dataset\ndf_iris.isnull().sum()","455c05d5":"df_iris.plot(kind = 'scatter',x = 'SepalLengthCm',y = 'SepalWidthCm')\nplt.title('Scatter plot for SepalLenght Vs. SepalWidth')\nplt.xlabel('Sepal Length')\nplt.ylabel('Sepal Width')\nplt.grid()\nplt.show()","93ae3693":"df_iris.plot(kind = 'scatter',x = 'PetalLengthCm',y = 'PetalWidthCm')\nplt.title('Scatter plot for PetalLenght Vs. PetalWidth')\nplt.xlabel('Petal Length')\nplt.ylabel('Petal Width')\nplt.grid()\nplt.show()","2ef69bd1":"#plotting the same visualization that is seen above using seaborn library\n#we will use a jointplot to show the scatter along with the histogram.\n\nplt.figure(figsize = (10,7),dpi = 100)\nsns.jointplot(x = 'SepalLengthCm',y = 'SepalWidthCm',data = df_iris,size = 5)\nplt.title('Joint plot for SepalLenght Vs. SepalWidth')\nplt.xlabel('Sepal Length')\nplt.ylabel('Sepal Width')\nplt.grid()\nplt.show()","93d2459f":"plt.figure(figsize = (10,7), dpi = 100)\nsns.jointplot(x = 'PetalLengthCm',y = 'PetalWidthCm',data = df_iris,size = 5)\nplt.title('Joint plot for PetalLenght Vs. PetalWidth')\nplt.xlabel('Petal Length')\nplt.ylabel('Petal Width')\nplt.grid()\nplt.show()","1d8facca":"#The above scatter plots do not distinguish between the species\n#Using a scatterplot from the seaborn library with hue for species we can distinguish the species for the same\n\nplt.figure(figsize = (7,5), dpi = 100)\nsns.scatterplot(x = 'SepalLengthCm',y = 'SepalWidthCm',hue = 'Species',data = df_iris)\nplt.xlabel('Sepal Length')\nplt.ylabel('Sepal Width')\nplt.grid()\nplt.show()","ae56b9be":"plt.figure(figsize = (7,5), dpi = 100)\nsns.scatterplot(x = 'PetalLengthCm',y = 'PetalWidthCm',hue = 'Species',data = df_iris)\nplt.xlabel('Petal Length')\nplt.ylabel('Petal Width')\nplt.grid()\nplt.show()","8cb8c2eb":"#Visualizing the individual values for each species\n#A boxplot helps in visualizing the outliers, median, IQR values,min & max values\nsns.boxplot(x = 'Species',y = 'SepalLengthCm',data = df_iris)","720c9573":"sns.boxplot(x = 'Species',y = 'SepalWidthCm',data = df_iris)","2e3ac35f":"sns.boxplot(x = 'Species',y = 'PetalLengthCm',data = df_iris)","e1d89ee6":"sns.boxplot(x = 'Species',y = 'PetalWidthCm',data = df_iris)","6f01bf5b":"#to visualize the individual values with a histogram like feature use the violin plot\n\nsns.violinplot(x = 'Species',y = 'SepalLengthCm',data = df_iris)","b660e8bc":"sns.violinplot(x = 'Species',y = 'SepalWidthCm',data = df_iris)","937b4f03":"sns.violinplot(x = 'Species',y = 'PetalLengthCm',data = df_iris)","47dd5db1":"sns.violinplot(x = 'Species',y = 'PetalWidthCm',data = df_iris)","b353b853":"#To visualize bivariate relation between each pair in the data set use pairplot function from the seaborn library.\n\nsns.pairplot(df_iris,hue = 'Species')","3d213a2b":"#To visualize the correlation between 2 pairs we can use the heatmap function from the seaborn library\n#first we have to generate the correlation matrix and then pass that to the heatmap function.\n\nx = df_iris.corr()\nx","3ddf8789":"sns.heatmap(x)","c7ebeb94":"*In this notebook I will be implementing diffrent visualization techniques on the Iris DataSet.*"}}