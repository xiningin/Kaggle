{"cell_type":{"dfabf7c4":"code","88245c67":"code","ef882df5":"markdown","4994d2d0":"markdown","df3eb941":"markdown"},"source":{"dfabf7c4":"from sympy import symbols, diff, solve\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n'''\n\u7ebf\u6027\u56de\u5f52\u62df\u5408wx+b\u76f4\u7ebf\uff1b\n\n\u6700\u5c0f\u4e8c\u4e58\u6cd5\u6307\u7684\u662f\u4f18\u5316\u6c42\u89e3\u8fc7\u7a0b\u662f\u901a\u8fc7\u5bf9\u7ecf\u9a8c\u8bef\u5dee\uff08\u6b64\u5904\u662f\u5747\u5e73\u65b9\u8bef\u5dee\uff09\u6c42\u504f\u5bfc\u5e76\u4ee4\u5176\u4e3a0\u4ee5\u89e3\u7684w\u548cb\uff1b\n'''\n\n# \u6570\u636e\u96c6 D X\u4e3a\u7236\u4eb2\u8eab\u9ad8\uff0cY\u4e3a\u513f\u5b50\u8eab\u9ad8\nX = np.array([1.51, 1.64, 1.6, 1.73, 1.82, 1.87])\ny = np.array([1.63, 1.7, 1.71, 1.72, 1.76, 1.86])\n\n# \u6784\u9020\u7b26\u53f7\nw,b = symbols('w b',real=True)\n\n# \u5b9a\u4e49\u7ecf\u9a8c\u8bef\u5dee\u8ba1\u7b97\u516c\u5f0f\uff1a(1\/N)*sum(yi-(w*xi+b))^2)\nRDh = 0\nfor xi,yi in zip(X,y):\n    RDh += (yi - (w*xi+b))**2\nRDh = RDh \/ len(X)\n\n# \u5bf9w\u548cb\u6c42\u504f\u5bfc\uff1a\u6c42\u504f\u5bfc\u7684\u7ed3\u679c\u662f\u5f97\u5230\u4e24\u4e2a\u7ed3\u679c\u4e3a0\u7684\u65b9\u7a0b\u5f0f\neRDHw = diff(RDh,w)\neRDHb = diff(RDh,b)\n\n# \u6c42\u89e3\u8054\u7acb\u65b9\u7a0b\u7ec4\nans = solve((eRDHw,eRDHb),(w,b))\nw,b = ans[w],ans[b]\nprint('\u4f7f\u5f97\u7ecf\u9a8c\u8bef\u5deeRDh\u53d6\u5f97\u6700\u5c0f\u503c\u7684\u53c2\u6570\u4e3a\uff1a'+str(ans))\n\nplt.scatter(X,y)\nx_range = [min(X)-0.1,max(X)+0.1]\ny_range = [w*x_range[0]+b,w*x_range[1]+b]\nplt.plot(x_range,y_range)\n\nplt.show()","88245c67":"import numpy as np\nimport matplotlib.pyplot as plt\n\nrnd = np.random.RandomState(3)  # \u4e3a\u4e86\u6f14\u793a\uff0c\u91c7\u7528\u56fa\u5b9a\u7684\u968f\u673a\n\n'''\n\u5355\u53d8\u91cf\u7ebf\u6027\u56de\u5f52\u6700\u5c0f\u4e8c\u4e58\u6cd5\u7684\u77e9\u9635\u5b9e\u73b0\uff1a\u77e9\u9635\u5b9e\u73b0\u7684\u4f18\u52bf\u5728\u4e8enumpy\u672c\u8eab\u652f\u6301\u4f2a\u9006\uff1b\n\n\u5176\u5b9e\u5c31\u662f\u5bf9\u4e8e\u8bef\u5dee\u5e73\u65b9\u548c\u7684\u77e9\u9635\u5f62\u5f0f\u5bf9\u4e8eW\u6c42\u5bfc\u5e76\u4ee4\u5176\u4e3a0\uff0c\u5f97\u5230w_hat = (X^T*X)^-1*X^T*Y\uff0c\u5176\u4e2d(X^T*X)^-1*X^T\u79f0\u4e3a\u4f2a\u9006\uff08pseudo inverse\uff0c\u5373\u51fd\u6570pinv\uff09\n\n\u56e0\u6b64\u53ef\u4ee5\u7701\u7565\u4e2d\u95f4\u5927\u91cf\u7684\u6784\u9020\u7ecf\u9a8c\u8bef\u5dee\u3001\u89e3\u504f\u5bfc\u65b9\u7a0b\u7ec4\u7b49\u6b65\u9aa4\uff1b\n'''\n\nclass LinearRegression(object):\n    def __init__(self,X,y):\n        ones = np.ones(X.shape[0]).reshape(-1,1) # 1\u7528\u4e8e\u8ba1\u7b97b\n        self.X = np.hstack((ones,X))\n        self.y = y\n\n    def train(self):\n        # \u6ce8\u610f\uff0c\u867d\u7136\u4e00\u822c\u60c5\u51b5\u4e0b\u4e0b\u9762\u4e8c\u8005\u662f\u7b49\u4ef7\u7684\uff0c\u4f46\u662f\u5728\u77e9\u9635\u65e0\u6cd5\u6c42\u9006\u6216\u67d0\u4e9b\u5176\u4ed6\u60c5\u51b5\u4e0b\u65f6\uff0c\u4e8c\u8005\u5e76\u4e0d\u76f8\u7b49\n        # \u76f8\u5bf9\u800c\u8a00\u4f2a\u9006\u5b9a\u4e49\u66f4\u52a0\u5bbd\u6cdb\uff0c\u7528\u5904\u66f4\u5e7f\uff0c\u56e0\u6b64\u53ef\u4ee5\u7684\u60c5\u51b5\u4e0b\u5efa\u8bae\u4f7f\u7528\u4f2a\u9006\n        # self.w = np.linalg.inv(self.X.T @ self.X) @ self.X.T @ self.y\n        self.w = np.linalg.pinv(self.X) @ self.y\n        self.w = self.w.reshape(-1)\n        self.w,self.b = self.w[1:],self.w[0]\n        return self.w,self.b\n\n    def predict(self,x):\n        return self.w.dot(x)+self.b\n\n    def get(self):\n        return self.X,self.y,self.w,self.b\n\nif __name__ == '__main__':\n    X0 = np.array([1.51,1.64,1.6,1.73,1.82,1.87]).reshape(-1,1)\n    y = np.array([1.63,1.7,1.71,1.72,1.76,1.86])\n\n    model = LinearRegression(X=X0,y=y)\n    w,b = model.train()\n    print(f'\u6700\u5c0f\u4e8c\u4e58\u6cd5\u7684\u77e9\u9635\u65b9\u5f0f\u7ed3\u679c\u4e3a\uff1aw={w} b={b}')\n    print(model.predict(np.array([X0[0]])))\n    \n    plt.scatter(X0,y)\n    plt.plot([min(X0),max(X0)],[model.predict(min(X0)),model.predict(max(X0))])\n    plt.show()","ef882df5":"\u7cfb\u5217\u6587\u7ae0\u76ee\u5f55\uff1a\n- [\u611f\u77e5\u673a](https:\/\/www.cnblogs.com\/helongBlog\/p\/14874578.html)\n- [\u7ebf\u6027\u56de\u5f52](https:\/\/www.cnblogs.com\/helongBlog\/p\/14875327.html)\n- [\u975e\u7ebf\u6027\u95ee\u9898](https:\/\/www.cnblogs.com\/helongBlog\/p\/14875344.html)\n- [\u591a\u9879\u5f0f\u56de\u5f52](https:\/\/www.cnblogs.com\/helongBlog\/p\/14892200.html)\n- [\u5cad\u56de\u5f52](https:\/\/www.cnblogs.com\/helongBlog\/p\/14885713.html)\n\n\u5982\u679c\u8bf4\u611f\u77e5\u673a\u662f\u6700\u6700\u6700\u7b80\u5355\u7684\u5206\u7c7b\u7b97\u6cd5\uff0c\u90a3\u4e48\u7ebf\u6027\u56de\u5f52\u5c31\u662f\u6700\u6700\u6700\u7b80\u5355\u7684\u56de\u5f52\u7b97\u6cd5\uff0c\u6240\u4ee5\u8fd9\u4e00\u7bc7\u6211\u4eec\u5c31\u4e00\u8d77\u6765\u5feb\u6d3b\u7684\u7528\u4e24\u79cd\u59ff\u52bf\u624b\u64b8\u7ebf\u6027\u56de\u5f52\u5427\uff1b\n\n## \u7b97\u6cd5\u4ecb\u7ecd\n\n\u7ebf\u6027\u56de\u5f52\u901a\u8fc7\u8d85\u5e73\u9762\u62df\u5408\u6570\u636e\u70b9\uff0c\u7ecf\u9a8c\u8bef\u5dee\u4e00\u822c\u4f7f\u7528MSE\uff08\u5747\u5e73\u65b9\u8bef\u5dee\uff09\uff0c\u4f18\u5316\u65b9\u6cd5\u4e3a**\u6700\u5c0f\u4e8c\u4e58\u6cd5**\uff0c\u7b97\u6cd5\u5982\u4e0b\uff1a\n1. \u5047\u8bbe\u8f93\u5165\u6570\u636e\u4e3aX\uff0c\u8f93\u51fa\u4e3aY\uff0c\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u8fd9\u91cc\u7684\u6570\u636e\u70b9\u4e3a\u4e00\u7ef4\u6570\u636e\uff08\u66f4\u597d\u53ef\u89c6\u5316\uff0c\u5904\u7406\u65b9\u5f0f\u6ca1\u533a\u522b\uff09\uff1b\n2. MSE\u516c\u5f0f\u4e3a\uff1a$\\frac{1}{N}\\sum_{i=1}^{N}(w*x_i+b-y_i)^2$\uff1b\n3. \u6700\u5c0f\u4e8c\u4e58\u6cd5\uff1a\u6700\u5c0f\u6307\u7684\u662f\u76ee\u6807\u662f**min**\uff0c\u4e8c\u4e58\u6307\u7684\u5c31\u662fMSE\u4e2d**\u8bef\u5dee\u7684\u4e8c\u6b21\u65b9**\uff0c\u516c\u5f0f\u4e3a\uff1a$ min\\frac{1}{N}\\sum_{i=1}^{N}(w*x_i+b-y_i)^2 $\uff1b\n4. \u7531\u4e8e\u76ee\u6807\u662f\u67e5\u627e\u62df\u5408\u6700\u597d\u7684\u8d85\u5e73\u9762\uff0c\u56e0\u6b64\u4f9d\u7136\u5b9a\u4e49\u53d8\u91cf**w**\u548c**b**\uff1b\n5. \u5bf9\u4e8ew\u548cb\u7684\u6c42\u89e3\u6709**\u4e24\u79cd**\u65b9\u5f0f\uff1a\n    1. \u5217\u51fa\u6700\u5c0f\u5316\u7684\u516c\u5f0f\uff0c\u5229\u7528\u4f18\u5316\u6c42\u89e3\u5668\u6c42\u89e3\uff1a\n        1. \u57fa\u4e8e\u5df2\u77e5\u7684X\u3001Y\uff0c\u672a\u77e5\u7684w\u3001b\u6784\u5efaMSE\u516c\u5f0f\uff1b\n        2. \u5b9a\u4e49\u6700\u5c0f\u5316MSE\u7684\u76ee\u6807\u51fd\u6570\uff1b\n        3. \u5229\u7528\u6c42\u89e3\u5668\u76f4\u63a5\u6c42\u89e3\u4e0a\u8ff0\u51fd\u6570\u5f97\u5230\u65b0\u7684w\u548cb\uff1b\n    2. \u5bf9\u7ecf\u9a8c\u8bef\u5dee\u51fd\u6570\u6c42\u504f\u5bfc\u5e76\u4ee4\u5176\u4e3a0\u63a8\u5bfc\u51fa**w**\u548c**b**\u7684\u89e3\u6790\u89e3\uff1a\n        1. \u57fa\u4e8e\u6700\u5c0f\u5316MSE\u7684\u4f18\u5316\u95ee\u9898\u53ef\u4ee5\u76f4\u63a5\u63a8\u5bfc\u51faw\u548cb\u7684\u8ba1\u7b97\u65b9\u6cd5\uff1b\n        2. \u57fa\u4e8e\u63a8\u5bfc\u51fa\u7684\u8ba1\u7b97\u65b9\u6cd5\u76f4\u63a5\u8ba1\u7b97\u6c42\u89e3\uff1b\n\n## \u5229\u7528\u6c42\u89e3\u5668\u6c42\u89e3\n\u5229\u7528\u6c42\u89e3\u5668\u6c42\u89e3\u53ef\u4ee5\u770b\u4f5c\u5c31\u662f\u4e2a\u5217\u516c\u5f0f\u7684\u8fc7\u7a0b\uff0c\u628a\u5df2\u77e5\u7684\u6570\u636eX\u548cY\uff0c\u672a\u77e5\u7684\u53d8\u91cfw\u548cb\u5b9a\u4e49\u597d\uff0c\u6784\u5efa\u51faMSE\u7684\u516c\u5f0f\uff0c\u7136\u540e\u4e22\u5230\u6c42\u89e3\u5668\u76f4\u63a5\u5bf9w\u548cb\u6c42\u504f\u5bfc\u5373\u53ef\uff0c\u76f8\u5bf9\u6765\u8bf4\u4ee3\u7801\u7e41\u7410\uff0c\u4f46\u662f\u8fc7\u7a0b\u66f4\u7b80\u5355\uff0c\u6ca1\u6709\u4efb\u4f55\u6570\u5b66\u63a8\u5bfc\uff1b\n\n### \u4ee3\u7801\u5b9e\u73b0\n#### \u521d\u59cb\u5316\u6570\u636e\u96c6\n```python\nX = np.array([1.51, 1.64, 1.6, 1.73, 1.82, 1.87])\ny = np.array([1.63, 1.7, 1.71, 1.72, 1.76, 1.86])\n```\n#### \u5b9a\u4e49\u53d8\u91cf\u7b26\u53f7\n\u6240\u8c13\u53d8\u91cf\u6307\u7684\u5c31\u662f\u90a3\u4e9b\u9700\u8981\u6c42\u89e3\u7684\u90e8\u5206\uff0c\u6b21\u6570\u5c31\u662f\u8d85\u5e73\u9762\u7684w\u548cb\uff1b\n```python\nw,b = symbols('w b',real=True)\n```\n#### \u5b9a\u4e49\u7ecf\u9a8c\u8bef\u5dee\u51fd\u6570MSE\n```python\nRDh = 0\nfor xi,yi in zip(X,y):\n    RDh += (yi - (w*xi+b))**2\nRDh = RDh \/ len(X)\n```\n#### \u5b9a\u4e49\u6c42\u89e3\u51fd\u6570\n\u6b64\u5904\u5c31\u662f\u5bf9w\u548cb\u6c42\u504f\u5bfc\uff1b\n```python\neRDHw = diff(RDh,w)\neRDHb = diff(RDh,b)\n```\n#### \u6c42\u89e3w\u548cb\n```python\nans = solve((eRDHw,eRDHb),(w,b))\nw,b = ans[w],ans[b]\n```\n\n### \u5b8c\u6574\u4ee3\u7801","4994d2d0":"## \u6700\u540e\n\n\u5bf9\u4e8e\u7b97\u6cd5\u7684\u5b66\u4e60\uff0c\u4e00\u5b9a\u7684\u6570\u5b66\u77e5\u8bc6\u662f\u5fc5\u8981\u7684\uff0c\u5bf9\u4e8e\u516c\u5f0f\u7684\u63a8\u5bfc\u53ef\u4ee5\u8ba9\u6211\u4eec\u5bf9\u4e8e\u7b97\u6cd5\u5185\u90e8\u8fd0\u884c\u903b\u8f91\u6709\u66f4\u6df1\u7684\u4e86\u89e3\uff1b","df3eb941":"## \u63a8\u5bfc\u516c\u5f0f\u6c42\u89e3\n\u4e0e\u5229\u7528\u4f18\u5316\u5668\u6c42\u89e3\u7684\u533a\u522b\u5728\u4e8e\u9488\u5bf9$min\\frac{1}{N}\\sum_{i=1}^{N}(w*x_i+b-y_i)^2$\u5bf9$w$\u548c$b$\u6c42\u504f\u5bfc\u5e76\u4ee4\u5176\u4e3a0\uff0c\u5e76\u63a8\u5bfc\u51fa**w**\u548c**b**\u7684\u8ba1\u7b97\u516c\u5f0f\u662f\u81ea\u5df1\u63a8\u5bfc\u7684\uff0c\u8fd8\u662f\u7531\u4f18\u5316\u5668\u5b8c\u6210\u7684\uff0c\u4e8b\u5b9e\u4e0a\u5982\u679c\u81ea\u5df1\u63a8\u5bfc\uff0c\u90a3\u4e48\u6700\u7ec8\u4ee3\u7801\u5b9e\u73b0\u4e0a\u4f1a\u975e\u5e38\u7b80\u5355\uff08\u63a8\u5bfc\u8fc7\u7a0b\u4e0d\u4f1a\u51fa\u73b0\u5728\u4ee3\u7801\u4e2d\uff09\uff1b\n### w\u548cb\u7684\u6c42\u89e3\u516c\u5f0f\u63a8\u5bfc\n\n\u9996\u5148\uff0c\u6211\u4eec\u7684\u4f18\u5316\u76ee\u6807\u4e3a\uff1a\n$$\nmin \\frac{1}{N}\\sum_{i=1}^{N}(w*x_i+b-y_i)^2\n$$\n\u53bb\u9664\u516c\u5f0f\u4e2d\u65e0\u5173\u7684\u5e38\u91cf\u90e8\u5206\uff1a\n$$\nmin \\sum_{i=1}^{N}(w*x_i+b-y_i)^2\n$$\n\u7531\u4e8e\u4e00\u822cw\u662f\u5411\u91cf\uff0c\u800cb\u4e3a\u6807\u91cf\uff0c\u56e0\u6b64\u901a\u5e38\u4f1a\u5c06w\u548cb\u7ec4\u6210[w b]\uff0cx\u53d8\u4e3a[x 1]\u6765\u7edf\u4e00\u5904\u7406w\u548cb\uff0c\u8c03\u6574\u540e\u5982\u4e0b\uff1a\n$$\n\\sum_{i=1}^{N}(wx_i^T-y_i)^2\n$$\n\u4e0a\u5f0f\u628a\u5e73\u65b9\u62c6\u5f00\u6709\uff1a\n$$\n\\sum_{i=1}^{N}(ww^Tx_ix_i^T-2wx_i^Ty_i+y_i^2)\n$$\n\u5bf9\u4e8ew\uff08\u6ce8\u610f\u6b64\u65f6w\u4e3a\u539fw\u548cb\u7684\u7ec4\u5408\uff09\u6c42\u504f\u5bfc\u8fc7\u7a0b\u5982\u4e0b\uff1a\n$$\n\\begin{equation*}\n\\begin{split}\n\\frac{\\partial \\sum_{i=1}^{N}(ww^Tx_ix_i^T-2wx_i^Ty_i+y_i^2)}{\\partial w} &= 2w^Tx_ix_i^T-2x_i^Ty_i \\\\\n                                                         &= 0 \\\\\n\\end{split}\n\\end{equation*}\n$$\n\u4e0a\u5f0f\u53d8\u5f62\u540e\u6709\uff1a\n$$\n2w^Tx_ix_i^T - 2x_i^Ty_i = 0 \\\\\nw^Tx_ix_i^T = x_i^Ty_i \\\\\nw^T = (x_ix_i^T)^{-1}x_i^Ty_i\n$$\n\n\u7531\u4e8e\u6b64\u5904\u7684w\u5176\u5b9e\u662fw\u548cb\u7684\u7ec4\u5408\uff0c\u56e0\u6b64\u901a\u8fc7\u8fd9\u4e00\u6b21\u63a8\u5bfc\u5c31\u5f97\u5230\u4e86w\u548cb\u4e24\u4e2a\u6c42\u89e3\u65b9\u6cd5\uff1b\n\n\n### \u4ee3\u7801\u5b9e\u73b0\n#### \u6784\u9020\u6570\u636e\u96c6\n```python\nX = np.array([1.51,1.64,1.6,1.73,1.82,1.87]).reshape(-1,1)\ny = np.array([1.63,1.7,1.71,1.72,1.76,1.86])\n```\n#### \u4e3aX\u589e\u52a0\u5143\u7d20\u5168\u4e3a1\u7684\u4e00\u5217\u7528\u4e8e\u548cb\u7684\u8ba1\u7b97\n```python\nones = np.ones(X.shape[0]).reshape(-1,1)\nX = np.hstack((ones,X))\n```\n#### \u901a\u8fc7\u6c42\u89e3\u516c\u5f0f\u6c42\u89e3w\u548cb\n```python\nw = np.linalg.inv(self.X.T @ self.X) @ self.X.T @ self.y\nw,b = w[1:],w[0]\n```\n\n### \u5b8c\u6574\u4ee3\u7801\n\u5b8c\u6574\u4ee3\u7801\u5bf9\u4e8e\u6c42\u89e3\u90e8\u5206\u4f7f\u7528\u7684\u662f\u4f2a\u9006\u800c\u4e0d\u662f\u9006\uff0c\u539f\u56e0\u5728\u4e8e\u6c42\u89e3\u516c\u5f0f\u4e2d\u6b63\u597d\u6784\u9020\u4e86\u4f2a\u9006\uff0c\u800c\u4f2a\u9006\u9002\u7528\u6027\u5f3a\u4e8e\u9006\u8fd0\u7b97\uff0c\u56e0\u6b64\u4f7f\u7528\u4f2a\u9006\u4ee3\u66ff\u9006\uff1b"}}