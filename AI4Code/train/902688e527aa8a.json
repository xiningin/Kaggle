{"cell_type":{"b2f2e3c0":"code","227bad36":"code","64b2ae4d":"code","15c2648c":"code","9fbe3045":"code","a18113b8":"code","221f853e":"code","1297680d":"code","496c8d6c":"code","cff46b6b":"code","14895267":"code","b2bc5c13":"code","09a3f122":"code","1de3ca74":"code","d8222ce6":"code","96f34cd3":"code","82b88336":"code","75cf753b":"code","72e83ecc":"code","c2db87e9":"code","0ec9245a":"code","e45b45ee":"code","b33d8806":"code","22caec95":"code","0825503c":"code","499a530d":"code","1c4d4026":"code","b1289a1e":"code","cf52552f":"code","1c948ad2":"markdown","21dffdc5":"markdown","6066560f":"markdown","650858b6":"markdown","b1387a91":"markdown","82eb6b01":"markdown","8ff59a54":"markdown","537b3799":"markdown","fbb90b43":"markdown","e2e5683c":"markdown","6d767c03":"markdown","e1873d47":"markdown","ce070ec3":"markdown","c3b60ec0":"markdown","099a0c39":"markdown","50d07c93":"markdown","5c7abbc8":"markdown","48573750":"markdown","d7123fe2":"markdown","ac951c4d":"markdown","a743c04e":"markdown","3734b099":"markdown","30ba9656":"markdown"},"source":{"b2f2e3c0":"%config Completer.use_jedi = False\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.decomposition import PCA\nimport numpy as np\nimport matplotlib.pyplot as plt \nfrom sklearn.manifold import MDS\nfrom sklearn import preprocessing\nfrom sklearn.manifold import TSNE\nfrom sklearn.cluster import KMeans\nfrom sklearn.model_selection import train_test_split\nimport time","227bad36":"genes_names = pd.read_csv(\"..\/input\/genesdata\/genes.csv\")\nlabels = np.load(\"..\/input\/genesdata\/y.npy\")\nDataMatrix = np.load(\"..\/input\/genesdata\/X.npy\")\nlabels = pd.DataFrame(labels)\nDataMatrix = pd.DataFrame(DataMatrix)\n\nprint(\"[INFO] number of genes {}\".format(genes_names.shape[0]))\nprint(\"[INFO] number of cells  in Data Matrix {}\".format(DataMatrix.shape[0]))\nprint(\"[INFO] number of genes in Data Matrix {}\".format(DataMatrix.shape[1]))\n\n\n\n","64b2ae4d":"DataMatrix[0].describe()","15c2648c":"sns.displot(data=DataMatrix[0], kind='hist',height=4)","9fbe3045":"# Log Transform\nTransformedData = np.log2(DataMatrix+1)\nTransformedData[0].describe()","a18113b8":"TransformedData.shape","221f853e":"sns.displot(data=TransformedData[0], kind='hist',height=4)","1297680d":"# StandardizedData\n\n# scalar = preprocessing.StandardScaler()\n# DataMatrix = scalar.fit_transform(DataMatrix)\n# TransformedData = scalar.fit_transform(TransformedData)","496c8d6c":"# PCA on unProcessed Data\n\npca = PCA()\npca.fit(DataMatrix)\n# Variance Explained by 1st Component\nVariance1stcomp = pca.explained_variance_ratio_[0]\nprint(\"Unprocessed Data : Variance Explained By 1st Principle  Component {} \".format(Variance1stcomp))\n\ncompo = [i+1 for i in range(DataMatrix.shape[0])]\ncdf = np.cumsum(pca.explained_variance_ratio_)\n\n\nplt.plot(compo,cdf,label=\"cdf\")\nplt.xlabel(\"Components\")\nplt.ylabel(\"Variance Explained\")\nplt.title(\"Variance Explained vs Number of Componenet for Unprocessed Data\")\nplt.legend()\nplt.show()\n","cff46b6b":"# PCA on Log Transformed Data\npca_log = PCA()\npca_log.fit(TransformedData)\nVariane_log_1stComp = pca_log.explained_variance_ratio_[0]\nprint(\"Log Transformed Data : Variance Explained By 1st Principle  Component {} \".format(Variane_log_1stComp))\n\ncompo = [i+1 for i in range(DataMatrix.shape[0])]\ncdf = np.cumsum(pca_log.explained_variance_ratio_)\n\n\nplt.plot(compo,cdf,label=\"cdf\")\nplt.xlabel(\"Components\")\nplt.ylabel(\"Variance Explained\")\nplt.title(\"Variance Explained vs Number of Componenet for Log Transformed Data\")\nplt.legend()\nplt.show()\n","14895267":"# Plotting PCA Components applied on Non Transformed Data\npca_NonTransformed = pca.transform(DataMatrix)\nplt.scatter(pca_NonTransformed[:,0],pca_NonTransformed[:,1])\nplt.title(\"PCA on Non Transformed Data\")","b2bc5c13":"# Plotting PCA Components applied on Log Transformed Data\npca_log_transformed = pca_log.transform(TransformedData)\nprint(pca_log_transformed.shape)\nplt.scatter(pca_log_transformed[:,0],pca_log_transformed[:,1])\nplt.title(\"PCA on Log Transformed Data\")\n","09a3f122":"embedding = MDS(n_components=2)\nmds_non_transformed = embedding.fit_transform(DataMatrix)\n# plotting first two component\nplt.scatter(mds_non_transformed[:,0],mds_non_transformed[:,1] )\nplt.title(\"MDS on Non Transformed Data\")","1de3ca74":"embedding = MDS(n_components=2)\nmds_log_transformed = embedding.fit_transform(TransformedData)\n# plotting first two component\nplt.scatter(mds_log_transformed[:,0],mds_log_transformed[:,1] )\nplt.title(\"MDS on Log Transformed Data\")","d8222ce6":"Transformed_embedded = TSNE(n_components=2)\ntsne_non_transformation = Transformed_embedded.fit_transform(DataMatrix)\n\nplt.scatter(tsne_non_transformation[:,0],tsne_non_transformation[:,1])\nplt.title(\"TSNE on Non Transformed Data random Initialization\")","96f34cd3":"Transformed_embedded = TSNE(n_components=2,init='pca')\ntsne_non_transformation = Transformed_embedded.fit_transform(DataMatrix)\n\nplt.scatter(tsne_non_transformation[:,0],tsne_non_transformation[:,1])\nplt.title(\"TSNE on Non Transformed Data pca Initialization\")","82b88336":"Transformed_embedded = TSNE(n_components=2, init='pca')\ntsne_transformation = Transformed_embedded.fit_transform(TransformedData)\n\nplt.scatter(tsne_transformation[:,0],tsne_transformation[:,1])\nplt.title(\"TSNE on Log Transformed Data\")","75cf753b":"print(tsne_transformation.shape)","72e83ecc":"pca = PCA(n_components=50)\nTransformed_50 = pca.fit_transform(TransformedData)\n\n\nkmeans = KMeans(n_clusters=3, random_state=0).fit(Transformed_50)\nplt.scatter(Transformed_50[:,0], Transformed_50[:,1], c=kmeans.labels_)\n","c2db87e9":"kmeans_mds = KMeans(n_clusters=2, random_state=0).fit(mds_log_transformed[:,:50])\nplt.scatter(mds_log_transformed[:,0], mds_log_transformed[:,1], c=kmeans_mds.labels_)\n","0ec9245a":"kmeans_tsne = KMeans(n_clusters=3, random_state=0).fit(tsne_transformation[:,:50])\nplt.scatter(tsne_transformation[:,0], tsne_transformation[:,1], c=kmeans_tsne.labels_)\n","e45b45ee":"num_clusters = [i for i in range(1,7)]\nwgss =[]\nfor count in num_clusters:\n    kmeans = KMeans(n_clusters=count, random_state=0).fit(Transformed_50)\n    wgss.append(kmeans.inertia_)\n    \n\n    ","b33d8806":"plt.plot(num_clusters, wgss)","22caec95":"print(\"4 looks like a good choice and corosponding WGSS ( with in group sum of square) is {} \".format(wgss[3]))","0825503c":"PCS = [10,20,50,100,250,500]\n\nTransfomed_top_pca = TSNE()\n(fig, subplots) = plt.subplots(3, 2, figsize=(15, 8))\n\nsubplots = subplots.flatten()\nprint(len(subplots))\n# skipping 1st(image) and last ( pawpularity score) column we want to plot the histogram for binary features\n\nfor idx, _c in enumerate(PCS):\n    pca = PCA(n_components=_c)\n    Transformed_pcs = pca.fit_transform(TransformedData)\n    ax = subplots[idx]\n    t0 = time.time()\n    tsnepcatoppcs = Transfomed_top_pca.fit_transform(Transformed_pcs[:,:_c])\n    t1 = time.time()\n    ax.set_title(\"PCA =%d\" % _c)\n    ax.scatter(tsnepcatoppcs[:,0], tsnepcatoppcs[:,1])\n    ax.axis('tight')\n    \nplt.show()\n    \n    \n    ","499a530d":"pca = PCA(n_components=50)\nTransformed_pcs = pca.fit_transform(TransformedData)","1c4d4026":"perplexities = [2,5,10,30, 50, 100, 200,500]\n\n(fig, subplots) = plt.subplots(4, 2, figsize=(15, 8))\n\nsubplots = subplots.flatten()\nprint(len(subplots))\n# skipping 1st(image) and last ( pawpularity score) column we want to plot the histogram for binary features\n\nfor idx, _c in enumerate(perplexities):\n    \n    Transfomed_top50_pca = TSNE(perplexity=_c)\n    ax = subplots[idx]\n    t0 = time.time()\n    tsnepcatoppcs = Transfomed_top50_pca.fit_transform(Transformed_pcs)\n    t1 = time.time()\n    ax.set_title(\"Perplexity =%d\" % _c)\n    ax.scatter(tsnepcatoppcs[:,0], tsnepcatoppcs[:,1])\n    ax.axis('tight')\n    \nplt.show()\n","b1289a1e":"steps = [250,350, 500,  750, 800, 1000, 2500,5000]\n\n(fig, subplots) = plt.subplots(4, 2, figsize=(15, 15))\n\nsubplots = subplots.flatten()\nprint(len(subplots))\n# skipping 1st(image) and last ( pawpularity score) column we want to plot the histogram for binary features\n\nfor idx, _c in enumerate(steps):\n    \n    Transfomed_top50_pca = TSNE(n_iter=_c)\n    ax = subplots[idx]\n    t0 = time.time()\n    tsnepcatoppcs = Transfomed_top50_pca.fit_transform(Transformed_pcs)\n    t1 = time.time()\n    ax.set_title(\"steps =%d\" % _c)\n    ax.scatter(tsnepcatoppcs[:,0], tsnepcatoppcs[:,1])\n    ax.axis('tight')\n    \nplt.show()\n","cf52552f":"\nPCS = [10,20,50,100,250,350,500]\n\nTransfomed_top_pca = TSNE()\n(fig, subplots) = plt.subplots(4, 2, figsize=(15, 15))\n\nsubplots = subplots.flatten()\nprint(len(subplots))\n# skipping 1st(image) and last ( pawpularity score) column we want to plot the histogram for binary features\n\nfor idx, _c in enumerate(PCS):\n    pca = PCA(n_components=_c)\n    Transformed_pcs = pca.fit_transform(TransformedData)\n    ax = subplots[idx]\n    t0 = time.time()\n    kmeans = KMeans(n_clusters=4, random_state=0).fit(Transformed_pcs)\n    t1 = time.time()\n    ax.set_title(\"PCA =%d\" % _c)\n    ax.scatter(Transformed_pcs[:,0], Transformed_pcs[:,1],  c=kmeans.labels_)\n    ax.axis('tight')\n    \nplt.show()\n    ","1c948ad2":"## T-sne Number of Iteration\nWe might get diffrent result based on number of iteration we will run our algorithm","21dffdc5":"# K-means on PCA Transformed Data","6066560f":"## T-sne with Number of PCs (Principal Componenet used for Analysis)","650858b6":"# K-means on MDS Data","b1387a91":"\n\n<a id=\"mds\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h1 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#50aa50; border:0; color:white' role=\"tab\" aria-controls=\"home\">\n<center>Multi Dimensional Scaling<\/center><\/h1>\n","82eb6b01":"In this project, we will analyze a **single-cell RNA-seq dataset**, with the goal of unveiling hierarchical structure and discovering important genes. The datasets provided are all different subsets of a larger single-cell RNA-seq dataset, compiled by the **Allen Institute**. This data contains cells from the mouse neocortex, a region in the brain which governs higher-level functions such as perception and cognition.\n\nThe single-cell RNA-seq data comes in the form of a counts matrix, where\n\neach row corresponds to a cell\n\nDue to the presence of genes with extremely high magnitudes of expression in only a few cells, it is common to apply a log-transform to the data, that is, to apply the transform .each column corresponds to the **normalized transcript compatibility count (TCC) of an equivalence class of short RNA sequences, rescaled to units of counts per million.** You can think of the TCC entry at location  of the data matrix as the level of expression of the -th gene in the -th cell.","8ff59a54":"<a id=\"elbow\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h1 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#50aa50; border:0; color:white' role=\"tab\" aria-controls=\"home\">\n<center>ELBOW<\/center><\/h1>","537b3799":"## T-sne Perplexity\nPerplexity tells about how to balance between global and local structure of data.\nWe will analyse the structure of plots for different range of perplexities .","fbb90b43":"K-means on TSNE","e2e5683c":"This is Extremely High Dimensional  data, let's use PCA technique to transfer the data into low dimensional space to do more meaningful visualization and classfication task. ","6d767c03":"### K-means effect on number of PCS ","e1873d47":"\n\n<a id=\"tsne\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h1 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#50aa50; border:0; color:white' role=\"tab\" aria-controls=\"home\">\n<center>T-SNE<\/center><\/h1>","ce070ec3":"<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h1 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#50aa50; border:0; color:white' role=\"tab\" aria-controls=\"home\" ><center>Contents<\/center><\/h1>","c3b60ec0":"We will use log-transformed data projected onto the top  50 PC's","099a0c39":"### Log Transformation\nDue to the presence of genes with extremely high magnitudes of expression in only a few cells, it is common to apply a log-transform to the data.","50d07c93":"<a id=\"dataset-overview\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h1 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#50aa50; border:0; color:white' role=\"tab\" aria-controls=\"home\">\n<center>Dataset Overview<\/center><\/h1>","5c7abbc8":"1. [Dataset Overview](#dataset-overview)  \n2. [Dataset Transformation](#transform)\n3. [Principal Component Analysis](#pca)\n4. [Multi Dimensional Scaling](#mds)\n5. [T-SNE](#tsne)\n6. [KMeans Clustering](#kmeans)\n7. [ELBOW](#elbow)\n8. [Hyperparameter Tuning T-sne](#tsne_tunning)","48573750":"<a id=\"kmeans\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h1 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#50aa50; border:0; color:white' role=\"tab\" aria-controls=\"home\" ><center>KMeans Clustering<\/center><\/h1>\n   ","d7123fe2":"## Some possible choice of Hyper parameters for visulization are\n\n1. Number of PCs (Principal Componenet used for Analysis)\n\n2. T-SNE perplexity\n\n3. T-SNE learning rate\n\n4. T-SNE early exaggeration\n\n5. T-SNE initialization\n\n6. T-SNE number of iterations\/convergence tolerance\n\n","ac951c4d":"1. The hyper-parameter choices used in data analysis techniques can have a large impact on the inferences made. \n2. Finding the best choice of parameter such as perplexity in T-SNE or the number of clusters can be an ambiguous problem.\n3. We will now investigate the sensitivity of ou results to changes in these hyper-parameters, with the goal of understanding how your conclusions may vary depending on these choices.","a743c04e":"\n<a id=\"pca\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h1 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#50aa50; border:0; color:white' role=\"tab\" aria-controls=\"home\">\n<center>Principal Component Analysis<\/center><\/h1>\n","3734b099":"<a id=\"transform\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h1 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#50aa50; border:0; color:white' role=\"tab\" aria-controls=\"home\">\n<center>Dataset Transformation<\/center><\/h1>","30ba9656":"\n\n<a id=\"tsne_tunning\"><\/a>\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h1 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:#50aa50; border:0; color:white' role=\"tab\" aria-controls=\"home\">\n<center>Hyperparameter Tuning T-sne<\/center><\/h1>"}}