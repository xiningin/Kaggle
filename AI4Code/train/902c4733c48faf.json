{"cell_type":{"c89be198":"code","002b91fc":"code","63edd87f":"code","8a6fe610":"code","5826c1cf":"code","92e03f47":"code","6c8f27bd":"code","89cc564f":"code","10fc6b46":"code","279a42a8":"code","67f9f2bf":"code","f0002f1e":"code","98363b0e":"code","2b3b3465":"code","e6f233f2":"code","59a2133c":"code","651f79c7":"code","30be2a0a":"code","d81b9459":"code","c56e0e77":"code","0fd4482f":"code","20075621":"code","a1e271fb":"code","ffc95308":"markdown","67bb41dd":"markdown","cebe9a5c":"markdown","17424b16":"markdown","1de4e99e":"markdown","8b9e44b6":"markdown","353c4ef5":"markdown","7de942f0":"markdown","59a1dd86":"markdown","c4cd8d25":"markdown","ce4a98db":"markdown","13628d11":"markdown"},"source":{"c89be198":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","002b91fc":"#Data Analysis\nimport pandas as pd\nimport numpy as np\n#Data Visualisation\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')","63edd87f":"#Data Imputing\ndata=pd.read_csv('..\/input\/imdb-5000-movie-dataset\/movie_metadata.csv')\ndata.head(5)","8a6fe610":"print('Number of rows:',data.shape[0])\nprint('Number of columns:',data.shape[1])","5826c1cf":"data.info()","92e03f47":"#check for null values\n(data.isnull().sum()\/len(data)*100)","6c8f27bd":"data.duplicated().any()","89cc564f":"data=data.drop_duplicates()\ndata.shape","10fc6b46":"data['title_year'].value_counts().reset_index().sort_values(by='title_year',ascending=False).head(5)","279a42a8":"plt.figure(figsize=(20,5))\nsns.set(style='dark')\nsns.countplot(data['title_year'].sort_values(ascending=False))\nplt.xticks(rotation=90)\nplt.show()","67f9f2bf":"len(data[data['imdb_score']>=9])","f0002f1e":"plt.figure(figsize=(10,5))\nsns.set(style='dark')\nsns.histplot(data=data,x='imdb_score',color='indigo',binwidth=1)","98363b0e":"print(\"Movie with minimum budget:\")\nmin_bud=data[data['budget']==data['budget'].min()][['movie_title','budget']]\nmin_bud","2b3b3465":"print(\"Movie with maximum budget:\")\nmax_bud=data[data['budget']==data['budget'].max()][['movie_title','budget']]\nmax_bud","e6f233f2":"data[data['duration']==data['duration'].min()][['movie_title','duration','genres','language','imdb_score']]","59a2133c":"data[data['duration']==data['duration'].max()][['movie_title','duration','genres','language','imdb_score']]","651f79c7":"#filtering out movies with rating 8.5 and above\nmost_liked=data[data['imdb_score']>=8.5]\nmost_liked_per=(most_liked['genres'].value_counts())\/(data['genres'].value_counts())*100\nmost_liked_per.sort_values(ascending =False).head(10)","30be2a0a":"#defining a function to get highest and lowest values\ndef max_and_min(x):\n    min_index=data[x].idxmin\n    max_index=data[x].idxmax\n    print(\"Movie which Has Highest \"+ x + \" : \",data['movie_title'][max_index])\n    print(\"Movie which Has Lowest \"+ x + \" : \",data['movie_title'][min_index])","d81b9459":"max_and_min('num_voted_users')","c56e0e77":"#8. Which length movies most liked by the audiences according to their imdb_score?\nliked_movies=pd.DataFrame(data.groupby(['duration']).mean()['imdb_score'])","0fd4482f":"plt.figure(figsize=(16,5))\nsns.set(style='darkgrid')\nsns.lineplot(data=liked_movies,x='duration',y='imdb_score',color='orange')","20075621":"mean_duration=pd.DataFrame(data.groupby('title_year').mean()['duration'])","a1e271fb":"plt.figure(figsize=(16,5))\nsns.set(style='whitegrid')\nsns.lineplot(data=mean_duration,x='title_year',y='duration',color='maroon')","ffc95308":"#Top 3 columns with most missing values : 'gross','budget, 'aspect_ratio'","67bb41dd":"#3. Distribution of movies wrt ratings","cebe9a5c":"#4. Movies with highest and lowest budget","17424b16":"#9.Average Runtime Of Movies From Year To Year","1de4e99e":"#Less than 10 movies were rated 9.0 or above ","8b9e44b6":"#1.Year with highest release of movies","353c4ef5":"#5. Movies with smallest and longest runtime","7de942f0":"# Importing Relevant Libraries","59a1dd86":"#6. Most liked genres","c4cd8d25":"#7. Movie with Highest And Lowest Votes","ce4a98db":"#Highest number of movies were released in the year 2009 followed by 2014 and 2006.","13628d11":"#2. Movies with and IMDb rating of 9 and above"}}