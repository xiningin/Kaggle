{"cell_type":{"a481491f":"code","f4db1081":"code","96f1cd7f":"code","d5876151":"code","7dd789f3":"code","ed6e7c73":"code","399b6f87":"markdown","26492878":"markdown","280094dd":"markdown","32bd3fd1":"markdown","370784ff":"markdown"},"source":{"a481491f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport optuna\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import roc_curve, auc\nfrom catboost import CatBoostClassifier\n\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","f4db1081":"# read dataframe\ndf_train = pd.read_csv('..\/input\/tabular-playground-series-sep-2021\/train.csv')\ndf_test = pd.read_csv('..\/input\/tabular-playground-series-sep-2021\/test.csv')\n\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-sep-2021\/sample_solution.csv')","96f1cd7f":"# prepare dataframe for modeling\nX = df_train.drop(columns=['id','claim']).copy()\ny = df_train['claim'].copy()\n\ntest_data = df_test.drop(columns=['id']).copy()","d5876151":"# create trial function\nOPTUNA_OPTIMIZATION = True\n\ndef objective(trial):\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=True, random_state=1)\n    \n    params = {\n        'iterations':trial.suggest_int(\"iterations\", 1000, 20000),\n        'objective': trial.suggest_categorical('objective', ['Logloss', 'CrossEntropy']),\n        'bootstrap_type': trial.suggest_categorical('bootstrap_type', ['Bayesian', 'Bernoulli', 'MVS']),\n        'od_wait':trial.suggest_int('od_wait', 500, 2000),\n        'learning_rate' : trial.suggest_uniform('learning_rate',0.02,1),\n        'reg_lambda': trial.suggest_uniform('reg_lambda',1e-5,100),\n        'random_strength': trial.suggest_uniform('random_strength',10,50),\n        'depth': trial.suggest_int('depth',1,15),\n        'min_data_in_leaf': trial.suggest_int('min_data_in_leaf',1,30),\n        'leaf_estimation_iterations': trial.suggest_int('leaf_estimation_iterations',1,15),\n        'verbose': False,\n        'task_type' : 'GPU',\n        'devices' : '0'\n    }\n    \n    if params['bootstrap_type'] == 'Bayesian':\n        params['bagging_temperature'] = trial.suggest_float('bagging_temperature', 0, 10)\n    elif params['bootstrap_type'] == 'Bernoulli':\n        params['subsample'] = trial.suggest_float('subsample', 0.1, 1)\n    \n    model = CatBoostClassifier(**params)\n    model.fit(\n        X_train, y_train,\n        eval_set=[(X_test,y_test)],\n        early_stopping_rounds=100,\n        use_best_model=True\n    )\n    \n    # validation prediction\n    y_hat = model.predict_proba(X_test)[:,1]\n    fpr, tpr, _ = roc_curve(y_test, y_hat)\n    score = auc(fpr, tpr)\n    \n    return score","7dd789f3":"#create optuna study\nstudy = optuna.create_study(\n    direction='maximize',\n    study_name='CatbClf'\n)\n\nstudy.optimize(\n    objective, \n    n_trials=100\n)","ed6e7c73":"print(f\"Best Trial: {study.best_trial.value}\")\nprint(f\"Best Params: {study.best_trial.params}\")","399b6f87":"## <div style='background:#2b6684;color:white;padding:0.5em;border-radius:0.2em'>Best Params<\/div>","26492878":"## <div style='background:#2b6684;color:white;padding:0.5em;border-radius:0.2em'>Introduction<\/div>","280094dd":"## <div style='background:#2b6684;color:white;padding:0.5em;border-radius:0.2em'>Import Data<\/div>","32bd3fd1":"Hi,\njust a quick notebook of my optuna study with 100 trials for a CatBoostClassifier.\n\nFeel free to use those params to tune your model as well.\n\nBest Regards.","370784ff":"## <div style='background:#2b6684;color:white;padding:0.5em;border-radius:0.2em'>Optuna Study<\/div>"}}