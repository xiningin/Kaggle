{"cell_type":{"7f4a7914":"code","e8b361ab":"code","57138534":"code","e9ac7ec1":"code","a84c98ba":"code","ea7a4da1":"code","4bdd1e0b":"code","caee236e":"code","70931d19":"code","67517def":"code","a141c9a5":"code","fd8e74ef":"code","912d6685":"code","99bf5239":"code","ced54a98":"code","45ca5663":"code","ef540473":"code","6af97eef":"code","85992dc8":"code","022ec147":"code","592def7d":"code","cbb171ab":"code","86a2f8c8":"code","ae5c2772":"code","cc377b14":"code","39541fc5":"code","dfc956ca":"code","e552c0d8":"code","982a59e5":"code","b349b4a5":"code","e9f26d1e":"code","9d92928e":"code","7f9f5eb5":"code","8817eafe":"code","28feb041":"code","aef144ed":"code","f46d4b4a":"code","95281ed7":"code","e1004755":"code","599166a0":"code","15628427":"code","a07d9803":"code","6eec831c":"markdown","a79c053f":"markdown","717e330d":"markdown","43401ad1":"markdown","4d609aa2":"markdown","6cd330e9":"markdown","b64deaae":"markdown","ef68fd1c":"markdown","6761fe0a":"markdown","4e8955ad":"markdown","78299efe":"markdown","d2310eb1":"markdown","9c7c7b28":"markdown","8453b203":"markdown","2b009e80":"markdown","907f824b":"markdown","ad1abe91":"markdown","580ab33f":"markdown","3535f590":"markdown","14db939c":"markdown","f81060b6":"markdown","a5f82dab":"markdown","da590aab":"markdown","0fac4f3f":"markdown","2974bed6":"markdown","c25ac8dc":"markdown","93302c12":"markdown","10fecf2c":"markdown","d9ead53c":"markdown","cc294c97":"markdown"},"source":{"7f4a7914":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport operator\n\nfrom sklearn.metrics import r2_score, mean_squared_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.tree import DecisionTreeRegressor, plot_tree\nfrom sklearn.ensemble import RandomForestRegressor\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e8b361ab":"data_2c = pd.read_csv(\"\/kaggle\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")\ndata_3c = pd.read_csv(\"\/kaggle\/input\/biomechanical-features-of-orthopedic-patients\/column_3C_weka.csv\")\ndata = pd.concat([data_2c , data_3c] , axis=0)\ndata.head()","57138534":"data.info()","e9ac7ec1":"data.describe().T","a84c98ba":"data[\"class\"].unique()","ea7a4da1":"sns.pairplot(data , hue=\"class\");","4bdd1e0b":"sns.heatmap(data.corr(), annot = True, cmap=\"coolwarm\");","caee236e":"data.drop([\"class\" , \"pelvic_tilt\" , \"pelvic_tilt numeric\" ], axis=1, inplace=True)\ndata.head()","70931d19":"X, y = data[\"sacral_slope\"].values.reshape(-1,1), data[\"pelvic_incidence\"].values.reshape(-1,1)","67517def":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)","a141c9a5":"model_lr = LinearRegression()\nmodel_lr.fit(X_train, y_train)","fd8e74ef":"print(\"intercept : \" , model_lr.intercept_)\nprint(\"slope : \" , model_lr.coef_)","912d6685":"y_pred = model_lr.predict(X_test)\ny_pred_df = pd.DataFrame(y_pred, columns=[\"Predicted Response\" ])\ny_test_df = pd.DataFrame(y_test, columns=[\"Real Values\"])\npd.concat([y_test_df , y_pred_df] , axis=1)","99bf5239":"score = r2_score(y_test, y_pred)\nMSE = mean_squared_error(y_test, y_pred)\n\nprint(\"R2 Score : {}\".format(score))\nprint(\"MSE : {}\".format(MSE))","ced54a98":"plt.scatter(X_test, y_test , color=\"navy\")\nplt.plot(X_test , y_pred, color=\"orange\")\nplt.xlabel(\"pelvic_incidence\")\nplt.ylabel(\"sacral_slope\")\nplt.show()","45ca5663":"X, y = data.drop([\"pelvic_incidence\"] , axis=1) , data[\"pelvic_incidence\"].values.reshape(-1,1)","ef540473":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=0)","6af97eef":"model_mlr = LinearRegression()\nmodel_mlr.fit(X_train, y_train)","85992dc8":"print(\"intercept : \" , model_mlr.intercept_)\nprint(\"slope : \" , model_mlr.coef_)","022ec147":"y_pred_mlr = model_mlr.predict(X_test)\ny_pred_df = pd.DataFrame(y_pred_mlr, columns=[\"Predicted Response\" ])\ny_test_df = pd.DataFrame(y_test, columns=[\"Real Values\"])\npd.concat([y_test_df , y_pred_df] , axis=1)","592def7d":"score = r2_score(y_test, y_pred_mlr)\nMSE = mean_squared_error(y_test, y_pred_mlr)\n\nprint(\"R2 Score : {}\".format(score))\nprint(\"MSE : {}\".format(MSE))","cbb171ab":"data_2c = pd.read_csv(\"\/kaggle\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")\ndata_3c = pd.read_csv(\"\/kaggle\/input\/biomechanical-features-of-orthopedic-patients\/column_3C_weka.csv\")\ndata = pd.concat([data_2c , data_3c] , axis=0)\ndata.drop([\"class\" , \"pelvic_tilt\" , \"pelvic_tilt numeric\" ], axis=1, inplace=True)\ndata.head()","86a2f8c8":"data = data.sort_values(by=['degree_spondylolisthesis'])","ae5c2772":"X, y = data[\"degree_spondylolisthesis\"].values.reshape(-1,1), data[\"pelvic_incidence\"].values.reshape(-1,1)","cc377b14":"poly = PolynomialFeatures(degree=3)\nX_poly = poly.fit_transform(X)","39541fc5":"X_train, X_test, y_train, y_test = train_test_split(X_poly, y, test_size=0.20, random_state=0)","dfc956ca":"model_poly = LinearRegression()\nmodel_poly.fit(X_train, y_train)","e552c0d8":"print(\"intercept : \" , model_poly.intercept_)\nprint(\"slope : \" , model_poly.coef_)","982a59e5":"y_pred_poly = model_poly.predict(X_test)\ny_pred_df = pd.DataFrame(y_pred_poly, columns=[\"Predicted Response\" ])\ny_test_df = pd.DataFrame(y_test, columns=[\"Real Values\"])\npd.concat([y_test_df , y_pred_df] , axis=1)","b349b4a5":"score = r2_score(y_test, y_pred_poly)\nMSE = mean_squared_error(y_test, y_pred_poly)\n\nprint(\"R2 Score : {}\".format(score))\nprint(\"MSE : {}\".format(MSE))","e9f26d1e":"y_pred = model_poly.predict(X_poly)\nsorted_zip = sorted(zip(X,y))\nX, y = zip(*sorted_zip)\n\nplt.scatter(X, y , color=\"navy\")\nplt.plot(X , y_pred, color=\"orange\")\nplt.xlabel(\"pelvic_incidence\")\nplt.ylabel(\"sacral_slope\")\nplt.show()","9d92928e":"X, y = data.drop([\"pelvic_incidence\"] , axis=1) , data[\"pelvic_incidence\"].values.reshape(-1,1)","7f9f5eb5":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)","8817eafe":"tree = DecisionTreeRegressor()\nmodel_dtree = tree.fit(X_train, y_train)","28feb041":"y_pred = model_dtree.predict(X_test)\ny_pred_df = pd.DataFrame(y_pred, columns=[\"Predicted Response\" ])\ny_test_df = pd.DataFrame(y_test, columns=[\"Real Values\"])\npd.concat([y_test_df , y_pred_df] , axis=1)","aef144ed":"fig, axes = plt.subplots(nrows = 1,ncols = 1,figsize = (17,10) , dpi=500 )\nplot_tree(model_dtree);","f46d4b4a":"score = r2_score(y_test, y_pred)\nMSE = mean_squared_error(y_test, y_pred)\n\nprint(\"R2 Score : {}\".format(score))\nprint(\"MSE : {}\".format(MSE))","95281ed7":"X, y = data.drop([\"pelvic_incidence\"] , axis=1) , data[\"pelvic_incidence\"].values.reshape(-1,1)","e1004755":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)","599166a0":"model_rf = RandomForestRegressor(n_estimators=100)\nmodel_rf.fit(X_train, y_train)","15628427":"y_pred = model_rf.predict(X_test)\ny_pred_df = pd.DataFrame(y_pred, columns=[\"Predicted Response\" ])\ny_test_df = pd.DataFrame(y_test, columns=[\"Real Values\"])\npd.concat([y_test_df , y_pred_df] , axis=1)","a07d9803":"score = r2_score(y_test, y_pred)\nMSE = mean_squared_error(y_test, y_pred)\n\nprint(\"R2 Score : {}\".format(score))\nprint(\"MSE : {}\".format(MSE))","6eec831c":"# Decision Tree\n## Preprocessing","a79c053f":"## Metrics","717e330d":"## Metrics","43401ad1":"## Visualize","4d609aa2":"## Predict","6cd330e9":"## Create Model & Fit","b64deaae":"## Get Results","ef68fd1c":"## Visualize","6761fe0a":"## Metrics","4e8955ad":"# Polynomial Regression\n## Data Preprocessing","78299efe":"## Metrics","d2310eb1":"# Linear Regression\n## Data Processing","9c7c7b28":"## Create Model & Fit","8453b203":"## Create Model & Fit","2b009e80":"## Get Results","907f824b":"## Get Results","ad1abe91":"## Visualize","580ab33f":"## Describe","3535f590":"## Preprocessing","14db939c":"# Dataset\n\n## Columns\n\nEach patient is represented in the data set by six biomechanical attributes derived from the shape and orientation of the pelvis and lumbar spine (each one is a column):\n\n* pelvic incidence\n* pelvic tilt\n* lumbar lordosis angle\n* sacral slope\n* pelvic radius\n* grade of spondylolisthesis\n","f81060b6":"# Introduction\n\n1. Linear Regression\n2. Multiple Regression\n3. Polynomial Regression\n4. Decision Tree\n5. Random Forest","a5f82dab":"## Predict","da590aab":"# Random Forest\n## Preprocessing","0fac4f3f":"## Predict","2974bed6":"## Metrics","c25ac8dc":"# Multiple Linear Regression\n# Preprocessing","93302c12":"## Visualize","10fecf2c":"## Predict","d9ead53c":"## Create Model & Fit","cc294c97":"## Create Model & Fit"}}