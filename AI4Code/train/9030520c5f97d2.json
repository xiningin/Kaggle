{"cell_type":{"20180e78":"code","dd782788":"code","3799b86e":"code","45945d8d":"code","487db467":"code","830358cc":"code","eecde1d0":"code","71726c39":"code","80785ead":"code","9f50a140":"code","2beea202":"code","be0af314":"code","3a99639a":"markdown","f8ea6e2e":"markdown"},"source":{"20180e78":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dd782788":"import matplotlib.pyplot as plt\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.ensemble import RandomForestClassifier\ntrain = pd.read_csv('..\/input\/ranzcr-clip-catheter-line-classification\/train.csv')\ntest = pd.read_csv('..\/input\/ranzcr-clip-catheter-line-classification\/sample_submission.csv')\nprint(train.shape)\nprint(test.shape)\ntrain.head(10)\n","3799b86e":"test.head(10)","45945d8d":"import ast\n\nannot = pd.read_csv('..\/input\/ranzcr-clip-catheter-line-classification\/train_annotations.csv')\nprint(annot.shape)\nannot.head()","487db467":"import tqdm\nimport os\nimport gc\nimport cv2\nimport glob\nimport numpy as np\nimport pandas as pd\nfrom numba import cuda\nfrom tqdm.notebook import tqdm\nimport matplotlib.pyplot as plt\n\nRES = np.zeros( (512,512) )\nmask = RES.copy()\nmask[mask>0.5] = 1.\nmask[mask<1] = 0\nmask = mask.astype(np.uint8)\nmask = np.stack( (mask,mask,mask), 2 )\n\ndel RES\ngc.collect()\nplt.imshow(mask)","830358cc":"!pip install -Uq fastai","eecde1d0":"from fastai.vision.all import *","71726c39":"df = pd.read_csv(\"..\/input\/ranzcr-clip-catheter-line-classification\/train_annotations.csv\")[['StudyInstanceUID', 'label']]\ndf['StudyInstanceUID'] = [i + \".jpg\" for i in df['StudyInstanceUID']]\ndf.columns = ['name', 'label']\ndls = ImageDataLoaders.from_df(df, \"..\/input\/ranzcr-clip-catheter-line-classification\/\", folder='train', valid_pct=0.2, item_tfms=Resize(224))\ndls","80785ead":"dls.show_batch()","9f50a140":"# Build the CNN model with the pretrained resnet34\n# Error rate = 1 - accuracy\nlearn = cnn_learner(dls, models.resnet34, metrics = [accuracy])\n# Train the model on 5 epochs of data at the default learning rate\nlearn.fit_one_cycle(5)","2beea202":"# Rebuild interpreter and replot confusion matrix\ninterp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix(figsize=(12,12), dpi=60)","be0af314":"submit = False\n\nif submit:\n    test_preds = []\n    for i in range(len(enet_type)):\n        if enet_type[i] == 'resnet34':\n            print('resnet34 loaded')\n            model = models.resnet34(enet_type[i], out_dim=len(target_cols))\n            model = model.to(device)\n        model.load_state_dict(torch.load(model_path[i], map_location='cuda:0'))\n        if tta:\n            test_preds += [tta_inference_func(test_loader)]\n        else:\n            test_preds += [inference_func(test_loader)]\n\n    submission = pd.read_csv('..\/input\/ranzcr-clip-catheter-line-classification\/sample_submission.csv')\n    submission[target_cols] = np.mean(test_preds, axis=0)\n    submission.to_csv('submission.csv', index=False)\nelse:\n    pd.read_csv('..\/input\/ranzcr-clip-catheter-line-classification\/sample_submission.csv').to_csv('submission.csv', index=False)","3a99639a":"# Training","f8ea6e2e":"# Chest X-Ray Visualisation"}}