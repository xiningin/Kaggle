{"cell_type":{"bb1222de":"code","beab357b":"code","90d15f29":"code","e2fec3a5":"code","59d165b7":"code","5eadbd03":"code","37c9ac71":"code","972c3812":"code","5584c113":"code","22119e26":"code","d4408541":"code","e4dd1753":"code","42292454":"code","5311897c":"code","d760a659":"code","d11625f5":"code","4dc4c6a2":"code","50fdc702":"code","d71fd2f3":"code","9b502a63":"code","56175392":"code","1c394e47":"markdown","9898471e":"markdown","bd468a6e":"markdown"},"source":{"bb1222de":"import pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")\nplt.style.use('dark_background')","beab357b":"DATA = \"..\/input\/tabular-playground-series-jun-2021\"\ndata_train = pd.read_csv(os.path.join(DATA,'train.csv'))\ndata_test = pd.read_csv(os.path.join(DATA,'test.csv'))\nsubmission = pd.read_csv(os.path.join(DATA,'sample_submission.csv'))","90d15f29":"data_train.head()","e2fec3a5":"data_test.head()\n","59d165b7":"data_train.info()","5eadbd03":"data_train.describe()","37c9ac71":"dt_i=[]\ndt_fl=[]\ndt_o=[]\n\nfor col in data_train.columns:\n    x=data_train[col].dtype\n    if x=='int64':\n        dt_i.append(col)\n    elif x=='float64':\n        dt_fl.append(col)\n    else:\n        dt_o.append(col)","972c3812":"dt_fl","5584c113":"dt_i","22119e26":"dt_o","d4408541":"plt.figure(figsize = (10,8))\nsns.barplot(x = 'feature_1',y = 'target',data = data_train)\nplt.show()","e4dd1753":"plt.figure(figsize=(18,8))\nplt.subplot(1,2,1)\ndata_train.target.value_counts().plot.pie()\nplt.subplot(1,2,2)\nsns.countplot(data_train.target)\nplt.suptitle(\"Target Distribution\", size=20)\nplt.show()","42292454":"for i in dt_i:   \n    cnt_srs = data_train[i].value_counts()\n    plt.figure(figsize=(20,8))\n    plt.bar(cnt_srs.index,cnt_srs.values,alpha=0.8)\n    plt.ylabel('Number of Occurrences', fontsize=12)\n    plt.xlabel('Values', fontsize=12)\n    plt.title(f'Distribution of {i}')\n    plt.show()","5311897c":"corr = data_train[dt_i[0:20]].corr().abs()\n\nfig, ax = plt.subplots(figsize=(20, 12))\nax.text(-1.1, -0.7, 'Correlation between the Features', fontsize=20)\nsns.heatmap(corr, annot=False, fmt=\".2f\",cmap='gray',\n            cbar_kws={\"shrink\": .8}, vmin=0, vmax=0.05)\nplt.yticks(rotation=0)\nplt.show()","d760a659":"!pip install mljar-supervised -q","d11625f5":"from supervised.automl import AutoML\nX=data_train.drop(['target','id'],axis=1)\ny=data_train['target']\nX_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.2, random_state=42 , stratify = y )","4dc4c6a2":"# train models with AutoML\nautoml = AutoML(mode=\"Compete\",ml_task = 'multiclass_classification',eval_metric='logloss')\nautoml.fit(X_train, y_train)","50fdc702":"automl.report()","d71fd2f3":"# compute the performance on test data\npredictions = automl.predict_all(X_test)\npredictions","9b502a63":"result = pd.DataFrame({\"Predicted\": np.array(predictions[\"label\"]), \"Target\": np.array(y_test)})\nresult","56175392":"data_test = data_test.drop('id',1)\npredictions_all = automl.predict_all(data_test)\nsubmission[['Class_1','Class_2', 'Class_3', 'Class_4','Class_5','Class_6','Class_7','Class_8','Class_9']] = predictions_all[['prediction_Class_1', 'prediction_Class_2', 'prediction_Class_3',\n       'prediction_Class_4','prediction_Class_5','prediction_Class_6','prediction_Class_7','prediction_Class_8','prediction_Class_9']]\nsubmission.to_csv(f'submission.csv',index=False)","1c394e47":"## mljar -- Machine Learning for Humans\n<p> The mljar-supervised is an Automated Machine Learning Python package that works with tabular data. It is designed to save time for a data scientist \ud83d\ude0e. It abstracts the common way to preprocess the data, construct the machine learning models, and perform hyper-parameters tuning to find the best model \ud83c\udfc6. It is no black-box as you can see exactly how the ML pipeline is constructed (with a detailed Markdown report for each ML model). <\/p>\n\n<p> The mljar-supervised will help you with: <\/p>\n\n* explaining and understanding your data,\n* trying many different machine learning models,\n* creating Markdown reports from analysis with details about all models,\n* saving, re-running and loading the analysis and ML models.\n\n\n* <b>Source --> https:\/\/github.com\/mljar\/mljar-supervised\/ <\/b>","9898471e":"<img src = \"https:\/\/raw.githubusercontent.com\/mljar\/mljar-examples\/master\/media\/AutoML_overview_mljar_v3.svg\">","bd468a6e":"<img src = \"https:\/\/i.imgur.com\/uHVJtv0.png\">"}}