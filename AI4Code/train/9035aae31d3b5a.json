{"cell_type":{"fcd7d0a5":"code","6fa1ca55":"code","487dabb5":"code","4d046b94":"code","4ffa2324":"code","ffbffa56":"code","07fa0bd4":"code","78ea8213":"code","827a855a":"code","3632886e":"code","9341dc28":"code","568e3ca7":"code","f9922fbe":"code","59fb8ced":"code","27dc5958":"code","5c63016e":"code","a1192e4c":"code","efaafd79":"code","c1c937e1":"code","e249aeff":"code","35ab8b73":"code","920d2d57":"code","ccdfa7ed":"code","a15641ba":"code","3ea07333":"code","0904079a":"code","7fbabc6c":"code","3c21bf35":"markdown","21dc1cba":"markdown","7f946993":"markdown"},"source":{"fcd7d0a5":"import pandas as pd\nimport numpy as np\nimport sklearn\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","6fa1ca55":"df=pd.read_csv('..\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\ndf","487dabb5":"df.isnull().sum()","4d046b94":"df['salary']=df['salary'].fillna(df['salary'].mode()[0])\ndf.isnull().sum()","4ffa2324":"sns.set_style('whitegrid')\nsns.countplot(x = 'degree_t', data = df)\nplt.title('Degree Comparison')\ndf['degree_t'].value_counts()","ffbffa56":"sns.set_style('darkgrid')\nsns.countplot(x = 'gender', hue = 'status', data = df)\nplt.title('No of students placed amongst gender')","07fa0bd4":"sns.set_style('darkgrid')\nsns.countplot(x = 'specialisation', hue = 'status', data = df)\nplt.title('No of students placed amongst gender')","78ea8213":"sns.catplot(x=\"status\", y=\"ssc_p\", data=df,kind=\"swarm\",hue='gender')\nsns.catplot(x=\"status\", y=\"hsc_p\", data=df,kind=\"swarm\",hue='gender')\nsns.catplot(x=\"status\", y=\"degree_p\", data=df,kind=\"swarm\",hue='gender')","827a855a":"sns.catplot(x=\"workex\", kind=\"count\",hue ='gender', data=df, col='status');","3632886e":"sns.jointplot(x=df['mba_p'], y=df['salary']);","9341dc28":"df['gender'].replace(to_replace='M', value=1, inplace=True)\ndf['gender'].replace(to_replace='F', value=0, inplace=True)\n\ndf['ssc_b'].replace(to_replace='Central', value=1, inplace=True)\ndf['ssc_b'].replace(to_replace='Others', value=0, inplace=True)\n\ndf['hsc_b'].replace(to_replace='Central', value=1, inplace=True)\ndf['hsc_b'].replace(to_replace='Others', value=0, inplace=True)\n\ndf['hsc_s'].replace(to_replace='Science', value=1, inplace=True)\ndf['hsc_s'].replace(to_replace='Commerce', value=2, inplace=True)\ndf['hsc_s'].replace(to_replace='Arts', value=3, inplace=True)\n\ndf['workex'].replace(to_replace='Yes', value=1, inplace=True)\ndf['workex'].replace(to_replace='No', value=0, inplace=True)\n\ndf['specialisation'].replace(to_replace='Mkt&Fin', value=1, inplace=True)\ndf['specialisation'].replace(to_replace='Mkt&HR', value=0, inplace=True)","568e3ca7":"df.degree_t.unique()","f9922fbe":"df['degree_t'].replace(to_replace='Sci&Tech', value=1, inplace=True)\ndf['degree_t'].replace(to_replace='Comm&Mgmt', value=2, inplace=True)\ndf['degree_t'].replace(to_replace='Others', value=2, inplace=True)\n\ndf['status'].replace(to_replace='Placed', value=1, inplace=True)\ndf['status'].replace(to_replace='Not Placed', value=0, inplace=True)\n\ndf.drop(['sl_no'],axis=1,inplace=True)\ndf.drop(['salary'],axis=1,inplace=True)","59fb8ced":"df.head(10)","27dc5958":"df.dtypes","5c63016e":"X = df[['gender', 'ssc_p','ssc_b', 'hsc_p','hsc_b', 'hsc_s', 'degree_p', 'degree_t', 'workex','etest_p', 'specialisation', 'mba_p',]]\ny = df['status']","a1192e4c":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","efaafd79":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score,confusion_matrix","c1c937e1":"dt=DecisionTreeClassifier()\ndt.fit(X_train,y_train)","e249aeff":"pred1=dt.predict(X_test)\naccuracy_score(pred1,y_test)","35ab8b73":"confusion_matrix(pred1,y_test)","920d2d57":"rf=RandomForestClassifier()\nrf.fit(X_train,y_train)","ccdfa7ed":"pred2=rf.predict(X_test)\naccuracy_score(pred2,y_test)","a15641ba":"confusion_matrix(pred2,y_test)","3ea07333":"import xgboost as xgb\nxgb=xgb.XGBClassifier()\nxgb.fit(X_train,y_train)","0904079a":"pred3=xgb.predict(X_test)\naccuracy_score(pred3,y_test)","7fbabc6c":"confusion_matrix(pred3,y_test)","3c21bf35":"Considering RandomforestClassifier:","21dc1cba":"Considering XGBoost:","7f946993":"# We'll Deal with this Specific Campus Placement Dataset in following Manner:\n\n# 1)Data Visualization, Dealing with various relations within features and extracting a Useful        information, in a pretty decent Manner. \n\n# 2)Preprocessing the data, Handling the missing values(NaN Values), converting Categorical features.\n\n# 3)Predicting the status(Placed or not), Considering all features, using DecisionTreeClassifier, RandomForestClassifier and XGBoost Classifier respectively.\n"}}