{"cell_type":{"2878d145":"code","e304d1ef":"code","753ec6c1":"code","8cf28f0e":"code","5811e954":"code","729a6bf9":"code","533d0aea":"code","c18b90f2":"code","8efaefb0":"code","d6a2df99":"code","5a200e55":"code","3238ebfe":"code","bcd00792":"code","064454b5":"markdown","ab400799":"markdown","79795d56":"markdown","31ce775c":"markdown","04dc1669":"markdown","bfd9b157":"markdown","b20283aa":"markdown","6b86aa09":"markdown"},"source":{"2878d145":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport folium\nimport geopandas as gdp\nimport shapefile as shp\nfrom shapely.geometry import Point, Polygon\nimport plotly.express as px\nimport json\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e304d1ef":"child = pd.read_csv(\"..\/input\/child-mortality\/child_mortality_0_5_year_olds_dying_per_1000_born.csv\")\nworld = gdp.read_file(\"..\/input\/child-mortality\/ne_10m_admin_0_countries.shp\")\nworld_js=gdp.read_file(\"..\/input\/child-mortality\/ne_10geopack.geojson\")\n","753ec6c1":"with open('..\/input\/child-mortality\/custom.geo.json') as world:\n  data = json.load(world)\n\ndata[\"features\"][0]","8cf28f0e":"print(type(world_js))\nworld_js","5811e954":"world.reset_index()\nworld.head()","729a6bf9":"#Addding 2000 Child mortality rates to world coordinates dataset with left join. \nmerged = pd.merge(world, \n                  child['2000'],\n                  left_on='ADMIN',\n                  right_on = child['country'],\n                  how='left')\n\n\nmerged.head()\n","533d0aea":"#Formatting merged data frame to geodata frame\ngdf = gdp.GeoDataFrame(merged)","c18b90f2":"# create map\nfig, ax = plt.subplots(figsize=(15,15))\ngdf.plot(ax=ax)","8efaefb0":"# set a variable that will call whatever column we want to visualise on the map\nvariable = '2000'\n# set the range for the choropleth\nvmin, vmax = 0, 50\n# create figure and axes for Matplotlib\nfig, ax = plt.subplots(1, figsize=(20, 20))\n\n# create map\nbx=gdf.plot(column=variable, cmap='Oranges', linewidth=0.8,ax=ax, edgecolor='0.8', figsize=(20, 20))\nax.axis('off')\n# add a title\nax.set_title('Child Mortality', fontdict={'fontsize': '25', 'fontweight' : '3'})\n\n# Create colorbar as a legend\nsm = plt.cm.ScalarMappable(cmap='Oranges', norm=plt.Normalize(vmin=vmin, vmax=vmax))\n# empty array for the data range\nsm._A = []\n# add the colorbar to the figure\ncbar = fig.colorbar(sm,cax=fig.add_axes([0.85, 0.50, 0.009, 0.17]))","d6a2df99":"#Spatial reference system\ngdf.crs = \"EPSG:4326\"","5a200e55":"#creating map\nmap = folium.Map(location=[36.7538, 3.0588], zoom_start=2,min_zoom = 2, max_zoom =4,  tiles='stamenwatercolor')\n\n#creating choropleth map with child mortality data\nmap.choropleth(\n    geo_data=data,\n    data=child,\n    columns=['country', '2000'],\n    key_on='feature.properties.name',\n    fill_color='Oranges', \n    fill_opacity=1, \n    line_opacity=1,\n    legend_name='Child Mortality Rate of 2000',\n    smooth_factor=0)\n\nmap","3238ebfe":"fig = px.choropleth(child, locations=\"country\", locationmode='country names',\n                    color=\"2000\", hover_name=\"country\",\n                    color_continuous_scale=\"Oranges\",\n                     labels={'Cases':'Cases'},\n                     title='Child Mortality Rates 2000')\nfig.show()\n","bcd00792":"fig = px.choropleth_mapbox(child, geojson=data, locations='country', color='1998',\n                           color_continuous_scale=\"Viridis\",\n                           mapbox_style=\"carto-positron\",\n                           featureidkey=\"properties.name\",\n                           zoom=1, center = {\"lat\": 20, \"lon\": 0},\n                           opacity=0.5,\n                           labels={'1998':'child mortalilty rate'}\n                          )\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","064454b5":"Plotting data ","ab400799":"# Preprocessing","79795d56":"**Creating Chropleth map with Geopandas, Pandas and Matplotlib**","31ce775c":"**Creating Choropleth with Plotly**","04dc1669":"**Using Mapbox Choropleth Maps**","bfd9b157":"**Creating same map with Folium chropleth map. **","b20283aa":"# Libraries","6b86aa09":"# Visualisation"}}