{"cell_type":{"977f7072":"code","eac2f573":"code","6f093159":"code","6fae8ae7":"code","cf8c2e24":"code","f2234c86":"code","c2d1f4a0":"code","5721cb7d":"code","104f7af2":"code","27562b78":"code","b27a8c13":"code","871fee3b":"code","7fbfb4cd":"code","55b43d16":"code","adb442d6":"code","ec3e3e21":"code","653b931f":"code","4299ba00":"code","1081c467":"code","0367c31b":"code","e8492c4b":"code","8d65e614":"code","a43f7283":"code","bcb30c61":"code","7daf1670":"code","816c3ca2":"markdown","06651527":"markdown","bde953d3":"markdown","d0dcdb3d":"markdown","14be2f49":"markdown","fffe7aa0":"markdown","6d030287":"markdown","8e08409e":"markdown","a3dc0623":"markdown","94c73181":"markdown","0c1b5436":"markdown"},"source":{"977f7072":"import numpy as np \nimport pandas as pd\n\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import preprocessing\nfrom sklearn import metrics\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","eac2f573":"data = pd.read_csv(\"..\/input\/drug200\/drug200.csv\")\ndata[0:5]","6f093159":"data.info()","6fae8ae7":"data.describe()","cf8c2e24":"data.describe(include=['object'])","f2234c86":"data.hist()","c2d1f4a0":"X = data[['Age', 'Sex', 'BP', 'Cholesterol', 'Na_to_K']]\nX[0:5]","5721cb7d":"from sklearn.preprocessing import LabelEncoder\n\ncat_features = X.columns[X.dtypes == object]\n# Label Encoding\nfor f in cat_features:\n    lbl = LabelEncoder()\n    lbl.fit(list(X[f].values))\n    X[f] = lbl.transform(list(X[f].values))","104f7af2":"X","27562b78":"y = data[\"Drug\"]\ny.unique()","b27a8c13":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=3)","871fee3b":"X_train","7fbfb4cd":"drugTree = DecisionTreeClassifier(criterion=\"entropy\", max_depth = 4)\ndrugTree ","55b43d16":"drugTree.fit(X_train,y_train)","adb442d6":" importances = pd.DataFrame({\"feature\": X_train.columns, \"importance\": drugTree.feature_importances_})\n importances   ","ec3e3e21":"sns.barplot(data=importances.sort_values(\"importance\", ascending=False).head(10), x=\"importance\", y=\"feature\")","653b931f":"predTree = drugTree.predict(X_test)","4299ba00":"print (predTree [0:5])\nprint (y_test [0:5])","1081c467":"print(\"DecisionTrees's Accuracy: \", metrics.accuracy_score(y_test, predTree))","0367c31b":"sns.heatmap(confusion_matrix(y_test, predTree),annot=True,fmt='2.0f')","e8492c4b":"!pip install --upgrade scikit-learn==0.20.3","8d65e614":"!pip install pydotplus","a43f7283":"from sklearn.externals.six import StringIO\nimport pydotplus\nimport matplotlib.image as mpimg\nfrom sklearn import tree\n%matplotlib inline ","bcb30c61":"from sklearn.externals.six import StringIO  \nfrom IPython.display import Image  \nfrom sklearn.tree import export_graphviz\nimport pydotplus","7daf1670":"dot_data = StringIO()\nfilename = \"drugtree.png\"\nfeatureNames = data.columns[0:5]\ntargetNames = data[\"Drug\"].unique().tolist()\nout=tree.export_graphviz(drugTree,feature_names=featureNames, out_file=dot_data, class_names= np.unique(y_train), filled=True,  special_characters=True,rotate=False)  \ngraph = pydotplus.graph_from_dot_data(dot_data.getvalue())  \ngraph.write_png(filename)\nimg = mpimg.imread(filename)\nplt.figure(figsize=(100, 200))\nplt.imshow(img,interpolation='nearest')","816c3ca2":"### \u0410\u0448\u0438\u0433\u043b\u0430\u0441\u0430\u043d \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\n* IBM Machine Learning with Python","06651527":"## Modeling","bde953d3":"# Decision Tree","d0dcdb3d":"## Feature Importance","14be2f49":"## Preprocessing","fffe7aa0":"## \u0412\u0438\u0437\u0443\u0430\u043b\u0447\u043b\u0430\u043b","6d030287":"## \u0428\u0430\u0430\u0440\u0434\u043b\u0430\u0433\u0430\u0442\u0430\u0439 \u0441\u0430\u043d\u0433\u0443\u0443\u0434","8e08409e":"## Evaluation","a3dc0623":"## Prediction","94c73181":"## EDA","0c1b5436":"## \u0414\u0430\u0442\u0430"}}