{"cell_type":{"9a6c7a7c":"code","24c2c056":"code","d1e25fb6":"code","859cb369":"code","f419c8e1":"code","1c6e79bf":"code","214d96f4":"code","fb121545":"code","b0049ed3":"code","bb86f97f":"code","55e4822c":"code","0ce58bb7":"code","ad28580a":"code","5b291fdf":"code","0f5bdd3d":"code","08ff7a0e":"code","39b356df":"code","8d1f0406":"code","51bd66d0":"code","1ca1daa0":"code","b85d6c15":"code","688957cc":"code","1b536b83":"code","440ed4a9":"code","3e01f35d":"markdown","461ba66a":"markdown","5cdfb329":"markdown","2268ac18":"markdown","16a33a7a":"markdown","e2a5d752":"markdown","e7766060":"markdown","761918f4":"markdown","e6ce6b9d":"markdown","23c16a55":"markdown","9a631aaf":"markdown","87d59ba2":"markdown","e0c5ec82":"markdown","cbec16dc":"markdown","68348dee":"markdown","78c08eb3":"markdown","db2dda13":"markdown","69ce5859":"markdown","6c5ce5b2":"markdown","1b42238a":"markdown"},"source":{"9a6c7a7c":"import matplotlib.pyplot as plt\n%matplotlib inline\nfrom matplotlib import rcParams\nrcParams['font.family'] = 'sans-serif'\nrcParams['font.sans-serif'] = ['DejaVu Sans']\nrcParams['font.size'] = 12\n\nimport seaborn as sns\nsns.set_style(\"dark\")\n\nimport numpy as np\nimport pandas as pd\n","24c2c056":"df = pd.read_csv('\/kaggle\/input\/indonesian_movies.csv')\nnRow, nCol = df.shape\nprint(f'{nRow} rows & {nCol} columns')\ndf.head()","d1e25fb6":"df.info()","859cb369":"df.describe(include=\"all\")","f419c8e1":"print(df['genre'].nunique(), 'unique genres:')\nprint(df['genre'].unique())\n\n# NaN genre\ndf['genre'].notna().value_counts()","1c6e79bf":"print(df['rating'].nunique(), 'unique ratings')\nprint(df['rating'].unique())\n\n# NaN rating\ndf['rating'].notna().value_counts()","214d96f4":"df = df.dropna(subset=['genre', 'directors'])\ndf = df.reset_index(drop=True)","fb121545":"df['rating'] = df['rating'].fillna(\"Unrated\")\ndf['rating'] = df['rating'].replace({\n    \"Not Rated\": \"Unrated\",\n    \"R\": \"13+\",\n    \"PG-13\": \"13+\",\n    \"TV-14\": \"13+\",\n    \"TV-MA\": \"17+\",\n    \"D\": \"17+\",\n    \"21+\": \"17+\"\n})","b0049ed3":"df[\"votes\"] = df[\"votes\"].apply(lambda x: x.replace(\",\", \"\"))\ndf[\"votes\"] = df[\"votes\"].astype(int)","bb86f97f":"df[\"runtime\"].value_counts()","55e4822c":"df[\"runtime\"] = df[\"runtime\"].fillna(\"90\")\ndf[\"runtime\"] = df[\"runtime\"].apply(lambda x: x.replace(\" min\", \"\"))\ndf[\"runtime\"] = df[\"runtime\"].astype(int)","0ce58bb7":"f, ax = plt.subplots(figsize=(8, 4))\nsns.countplot(x=\"year\", data=df)\n# x-tick interval\nfor label in ax.get_xticklabels():\n    if np.int(label.get_text()) % 10 == 0:  \n        label.set_visible(True)\n    else:\n        label.set_visible(False)","ad28580a":"df.sort_values(\"year\", ascending = True).head()","5b291fdf":"df[\"languages\"].value_counts().to_frame().rename(columns={\"languages\": \"total movies\"})","0f5bdd3d":"plt.figure(num = None, dpi = 75)\nvalueCounts = df[\"rating\"].value_counts()\n\nvalueCounts.plot.bar(color='crimson')\nplt.ylabel('counts')\nplt.xticks(rotation=0)\nplt.show()","08ff7a0e":"df[\"genre\"].value_counts().to_frame().rename(columns={\"genre\": \"total movies\"})","39b356df":"for genre in df[\"genre\"].unique():\n    data = df[df[\"genre\"] == genre]\n    print(\"The #1 movie in the genre\", genre, \"is =>\", data.sort_values(\"users_rating\", ascending = False).head(1)[\"title\"].values[0])","8d1f0406":"import random\nfrom wordcloud import WordCloud\ntext = (str(df[\"description\"].dropna()))\nplt.subplots(figsize=(9,6))\nwordcloud = WordCloud(background_color=\"white\").generate(text)\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.title(\"Film description wordcloud\")\nplt.axis(\"off\")\nplt.show()","51bd66d0":"ax = df[\"directors\"].value_counts()[:15].plot.barh(figsize=(6,6), color='crimson').invert_yaxis()\nplt.ylabel(None)\nplt.xlabel(\"Movies directed\")","1ca1daa0":"top_directors = df[[\"directors\", \"users_rating\"]].groupby([\"directors\"]).mean()\ntop_directors.sort_values('users_rating', ascending=False).rename(columns={\"users_rating\": \"average_rating\"})[:10]","b85d6c15":"from itertools import chain\nimport re\n\nactors = df[\"actors\"].apply(np.array)\nactorlist = pd.Series(list(chain.from_iterable(x.title().split(', ') for x in actors.str[1:-1])))\nactorlist = actorlist[actorlist.str.contains(\"'\")]\nactorlist = actorlist.str.strip(\"'\")\nactorlist.value_counts()[:10].plot.barh().invert_yaxis()\nplt.ylabel(None)\nplt.xlabel(\"Movies played\")","688957cc":"text = str(df[\"actors\"].str.replace(\"[\\[\\]']\", \"\", regex=True).replace(\",\", \"\", regex=True).replace(\"nan\", \"\", regex=True))\nplt.subplots(figsize=(9,6))\nwordcloud = WordCloud(background_color=\"white\", width=900,height=600).generate(text)\nplt.imshow(wordcloud)\nplt.title(\"Actors cloud\")\nplt.axis(\"off\")\nplt.show()","1b536b83":"df.corr()","440ed4a9":"sns.heatmap(df.corr())","3e01f35d":"## Most common actor name","461ba66a":"## Movie description word cloud","5cdfb329":"## Top oldest movies","2268ac18":"## Top actors by the number of movies played","16a33a7a":"## Top directors by the number of movies directed","e2a5d752":"## Total movies by genre","e7766060":"## Movies by year","761918f4":"## Top rated movies in each genre","e6ce6b9d":"# Getting started\n\nIn this notebook, I'm analyzing some metrics in IMDB Indonesian movies dataset. I hope to learn more about data visualization using Python. Any comments and suggestion is very welcomed!","23c16a55":"## Misc","9a631aaf":"# Cleaning Data","87d59ba2":"## Top directors by average rating of movies","e0c5ec82":"# Exploring our data","cbec16dc":"Let's see how many genres there are:","68348dee":"Simplifying rating categories:\n* 'SU' (All Ages)\n* '13+' = 'R' = 'PG-13' = 'TV-14'\n* '17+' = 'TV-MA' = 'D' = '21+'\n* 'Unrated' = 'Not Rated'\n\nWe'll also fill null values with \"Unrated\"","78c08eb3":"Almost all variables have a very low correlation with each other. It seems that only runtime and users' rating have some (weak) correlation with each other","db2dda13":"## Movies by language","69ce5859":"## Movies by TV ratings","6c5ce5b2":"# Importing Data","1b42238a":"And how many types of rating there are:"}}