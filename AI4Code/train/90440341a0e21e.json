{"cell_type":{"93502e5b":"code","97b8ad5b":"code","9eae6b54":"code","b09d7a7f":"code","1248c515":"code","41890540":"code","183a705f":"code","97b8aee0":"code","13f5da29":"code","9511dede":"code","32f20618":"code","619f6a57":"code","788bb56a":"code","92446cf5":"code","31814182":"code","50c97c45":"code","dfc6c614":"markdown","0e457763":"markdown","f9234597":"markdown","6ced20fd":"markdown","85d17f96":"markdown","8df4adee":"markdown","37bd9627":"markdown","04b4a46a":"markdown","ce42a597":"markdown","e283108f":"markdown"},"source":{"93502e5b":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split,GridSearchCV,cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom keras.utils import np_utils\nimport matplotlib.pyplot as plt\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import confusion_matrix,accuracy_score,classification_report\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D,MaxPooling2D,Activation,Dropout,Flatten,Dense","97b8ad5b":"train=pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntest=pd.read_csv('..\/input\/digit-recognizer\/test.csv')","9eae6b54":"train,val=train_test_split(train)","b09d7a7f":"y_train=train['label']\nx_train=train.drop(['label'], axis=1)","1248c515":"X_test=val.drop(['label'],axis=1)\ny_test=val['label']","41890540":"X_train=np.array(x_train)\/255 # Normalization\nY_train=np_utils.to_categorical(y_train) #One-hot encoding\n\nX_test=np.array(X_test)\/255 # Normalization\nY_test=np_utils.to_categorical(y_test) #One-hot encoding","183a705f":"img=X_train[0].reshape(28,28)\n\nplt.imshow(img)","97b8aee0":"svc_model=SVC(kernel=\"linear\").fit(X_train,y_train)\ny_pred=svc_model.predict(X_test)\nprint(accuracy_score(y_test,y_pred))","13f5da29":"X_train=X_train.reshape(X_train.shape[0],28,28,1) # Change input shape for the CNN\nX_test=X_test.reshape(X_test.shape[0],28,28,1) # Change input shape for the CNN","9511dede":"model=Sequential()\nmodel.add(Conv2D(32,(3,3),input_shape=X_train[0].shape))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D())\n\nmodel.add(Flatten())\nmodel.add(Dense(1024))\nmodel.add(Activation(\"relu\"))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(10))#output layer\nmodel.add(Activation(\"softmax\"))\n\nmodel.compile(loss=\"categorical_crossentropy\",\n              optimizer=\"adam\",\n              metrics=[\"accuracy\"])","32f20618":"hist=model.fit(X_train,Y_train, epochs=10, batch_size=64, validation_data=(X_test,Y_test))","619f6a57":"loss=hist.history['loss']\nacc=hist.history['accuracy']\nval_loss=hist.history['val_loss']\nval_acc=hist.history['val_accuracy']\n\nplt.figure()\nplt.plot(loss,label=\"Train loss\")\nplt.plot(val_loss,label=\"validat\u0131on loss\")\nplt.legend()\nplt.figure()\nplt.plot(acc,label=\"Train acc\")\nplt.plot(val_acc,label=\"validat\u0131on acc\")\nplt.legend()\nplt.show()\nplt.show()","788bb56a":"test=np.array(test)\ntest=test.reshape(test.shape[0],28,28,1)\/255","92446cf5":"preds=model.predict(test)\ny_preds=np.argmax(preds,axis=1)","31814182":"y_preds[:10]","50c97c45":"# Generate Submission File \nsubmission = pd.DataFrame({'ImageId':pd.Series(list(range(1, len(y_preds)+1))),\n                                   'Label':pd.Series(y_preds)})\n# save the df\nsubmission.to_csv(\"Submission.csv\", index=False)","dfc6c614":"**Fitting**","0e457763":"**Split Data as train and test**","f9234597":"**Testing**","6ced20fd":"**Crate CNN model with keras**","85d17f96":"**Create Support Vector Classifier and fit the model**","8df4adee":"**The accuracy is 93% with SVM,\n  Now try to train CNN**","37bd9627":"**Show data as an image**","04b4a46a":"**The accuracy with CNN is 98.94%**","ce42a597":"**Get Data From Kaggle**","e283108f":"**Show Loss and Acc graph**"}}