{"cell_type":{"c763bdca":"code","adac67b8":"code","671eb621":"code","02a6d4fe":"code","fadc67a5":"code","81566467":"code","6a0b4d23":"code","5ece4c64":"code","eba0d2c1":"code","80653336":"code","5a971998":"code","2306136e":"code","3343c904":"code","5c2feba8":"code","0ef46ad0":"code","89b665d3":"code","28880600":"code","e5859864":"code","eda89799":"code","7a9c745d":"code","de2659ee":"code","09437931":"code","f19b9213":"code","48d372df":"code","5c829c34":"code","c5c94162":"code","45acc7a5":"code","9b1afbe0":"code","156936a7":"code","873757df":"code","0c5e6f94":"code","f3dd77d3":"code","a60c5906":"code","f5623c1e":"code","5ab4c27e":"code","005c028e":"code","b5c852f7":"code","a86501e1":"code","c72425d9":"code","680eb6cd":"code","f01c7930":"code","b09ab0eb":"code","297ccabf":"code","c4aec1f6":"markdown","fdee154d":"markdown","129fb3fc":"markdown","63e33699":"markdown","9d154aae":"markdown","8bf19ef6":"markdown","382bc553":"markdown","c585eb25":"markdown","68256b7a":"markdown","43a0ce2c":"markdown","65602c7f":"markdown","f2e9957f":"markdown","887a2697":"markdown","dc01b93b":"markdown","9d052dc9":"markdown","09a51943":"markdown","ce9c2a13":"markdown","33115243":"markdown","daec121c":"markdown","c35c877e":"markdown","c19fc83d":"markdown","868e81fc":"markdown","fde8ffa5":"markdown","2a8b9821":"markdown","c36222c6":"markdown","bfc5a2c5":"markdown","48a12e92":"markdown","79723b67":"markdown","4e0ff500":"markdown","5bdc7315":"markdown","0f0f53aa":"markdown","fed691c5":"markdown","7f3e76b2":"markdown","436f4175":"markdown","a9167611":"markdown","efa80c6a":"markdown","54ff82a0":"markdown","e06d8de4":"markdown","c59419e7":"markdown","0eb66ffc":"markdown","516264bf":"markdown"},"source":{"c763bdca":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings(\"ignore\")","adac67b8":"df = pd.read_csv(\"..\/input\/iris-flower-dataset\/IRIS.csv\")","671eb621":"df","02a6d4fe":"df[\"species\"].unique()","fadc67a5":"df[\"species\"].nunique()","81566467":"df[\"species\"] = df[\"species\"].apply(lambda x: 'Setosa' if x == 'Iris-setosa' else x)  \ndf[\"species\"] = df[\"species\"].apply(lambda x: \"Virginica\" if  x == \"Iris-virginica\" else x)\ndf[\"species\"] = df[\"species\"].apply(lambda x: 'Versicolor' if x == 'Iris-versicolor' else x)","6a0b4d23":"df[\"species\"].unique()","5ece4c64":"df.head()","eba0d2c1":"df.shape","80653336":"df.info()","5a971998":"df.describe().T","2306136e":"sns.set(style=\"ticks\") \nplt.figure(figsize=(12,10))\nplt.subplot(2,2,1)\nsns.boxplot(x='species',y='sepal_length',data=df)\nplt.subplot(2,2,2)\nsns.boxplot(x='species',y='sepal_width',data=df)\nplt.subplot(2,2,3)\nsns.boxplot(x='species',y='petal_length',data=df)\nplt.subplot(2,2,4)\nsns.boxplot(x='species',y='petal_width',data=df)\nplt.show()","3343c904":"df.groupby('species').agg(['mean', 'median'])","5c2feba8":"df.isna().sum() ","0ef46ad0":"df.corr()","89b665d3":"plt.figure(figsize=(10,11))\nsns.heatmap(df.corr(),annot=True, cmap=\"coolwarm\")\nplt.plot()","28880600":"sns.pairplot(df)","e5859864":"sns.set(rc={'figure.figsize':(8,6)})\nsns.scatterplot(x = \"sepal_width\", y = \"sepal_length\", data = df);","eda89799":"sns.jointplot(x = \"sepal_width\", y = \"sepal_length\", data = df, color=\"purple\");","7a9c745d":"sns.pairplot(df,hue=\"species\",height=3);","de2659ee":"sns.scatterplot(x = \"sepal_length\", y = \"sepal_width\", hue = \"species\",  data = df);","09437931":"df[\"species\"].value_counts()","f19b9213":"sns.set(style='whitegrid')\nplt.figure(figsize=(12,10))\nplt.subplot(2,2,1)\nsns.violinplot(x='species',y='sepal_length',data=df)\nplt.subplot(2,2,2)\nsns.violinplot(x='species',y='sepal_width',data=df)\nplt.subplot(2,2,3)\nsns.violinplot(x='species',y='petal_length',data=df)\nplt.subplot(2,2,4)\nsns.violinplot(x='species',y='petal_width',data=df)\nplt.show()","48d372df":"sns.violinplot(y = \"sepal_width\", data = df );","5c829c34":"sns.distplot(df[\"sepal_width\"], bins=16, color=\"purple\");","c5c94162":"sns.violinplot(x = \"species\", y = \"sepal_length\", data = df);","45acc7a5":"sns.countplot(x = \"species\", data = df);","9b1afbe0":"sns.jointplot(x = \"sepal_length\", y = \"sepal_width\", data = df, color=\"purple\");","156936a7":"sns.jointplot(x=\"sepal_length\",y=\"sepal_width\",data=df, kind=\"hex\",color=\"red\");","873757df":"sns.jointplot(x = df[\"sepal_length\"], y = df[\"sepal_width\"], kind = \"kde\", color = \"darkred\");","0c5e6f94":"sns.set(rc={'figure.figsize':(8,6)})\nsns.scatterplot(x = \"petal_length\", y = \"petal_width\", data = df);\n","f3dd77d3":"sns.scatterplot(x = \"petal_length\", y = \"petal_width\", hue = \"species\",  data = df);","a60c5906":"sns.lmplot(x = \"petal_length\", y = \"petal_width\", data = df, hue = \"species\");","f5623c1e":"df.corr()[\"petal_length\"][\"petal_width\"]","5ab4c27e":"df[\"total_length\"] = df[\"petal_length\"] + df[\"sepal_length\"]\ndf[\"total_length\"]","005c028e":"df[\"total_length\"].mean()","b5c852f7":"df[\"total_length\"].std()","a86501e1":"df[\"sepal_length\"].max()","c72425d9":"df[(df[\"sepal_length\"] > 5.5) & (df[\"species\"] == \"Setosa\")]","680eb6cd":"df.iloc[:,0:2][(df[\"petal_length\"] < 5) & (df[\"species\"] == \"Virginica\")]","f01c7930":"df[(df['species']=='Virginica') & (df['petal_length']<5)][[\"sepal_length\", \"sepal_width\"]]","b09ab0eb":"df.groupby([\"species\"]).mean()","297ccabf":"df.groupby([\"species\"]).std()[\"petal_length\"]","c4aec1f6":"Draw a **violin graph** to examine the distribution of the sepal.width variable.\n\nWhat does this distribution mean for us, can we say that it is a **normal distribution**?","fdee154d":"Let's make it the shape we want.","129fb3fc":"How many observations of which flower type does our data frame contain?\n\nWe have already seen with value_counts that it is 50 x 3 and balanced, but to express this visually, give the species parameter to the sns.countplot () function.","63e33699":"Let's visualize three different violin graphs for the three flower types with a single line over the distribution of the sepal.length variable.","9d154aae":"Let's view the first 5 observations of the data frame.","8bf19ef6":"Let's visualize the variables sepal.length and sepal.width with sns.jointplot, examine the distribution and the regions where the frequency of the distribution is high.","382bc553":"Let's print out the standard deviation value of total.length.","c585eb25":"Let's draw a **distplot** on sepal.width for a better understanding.","68256b7a":"Observations:\n\n* The dataset is balanced, meaning there are equal records for all three species.\n\n* While we have columns with four numerical data, we only have one categorical column (flower types) which is the data we aim to analyze.\n\n* There is a strong correlation between petal width and petal length.\n\n* Setosa species,Due to its small size, it is the most easily distinguished type.\n\n* Versicolor and Virginica strains are often mixed and sometimes difficult to separate. Generally, however, Versicolor strain sizes are more average. In contrast, virginica species are larger in size.","43a0ce2c":"Let's print out the average value of total.length.","65602c7f":"Thank you for your time and attention.","f2e9957f":"Let's check it out.","887a2697":"Let's just print the standard deviation values of our petal.length variable by grouping according to our target variable species.","dc01b93b":"Let's do a grouping according to our target variable, species, and view the average of our variable values.","9d052dc9":"Let's visualize the same two data using a jointplot to examine their frequencies from a different angle.","09a51943":"Let's **add the parameter kind = \"kde**\" to the visualization we made in the previous cell. Thus, we will see that the distribution is transformed from dotted representation to a density-focused visualization.","ce9c2a13":"Let's print out **only the sepal.length and sepal.width** variables and values of the observations whose **petal.length is less than 5 and whose type is virginica**.","33115243":"We see that the variables sepal.width and sepal.length in the data frame are **continuous**. Let's first use scatterplot to visualize these two continuous data.","daec121c":"Let's load our dataframe from the directory we are in and turn it into a data frame and assign it to the variable df.","c35c877e":"Let's give a **3rd** dimension by adding the parameter **hue = \"species\"** to the same visualization.","c19fc83d":"Let's create a new total length attribute by adding the values \u200b\u200bof Petal Length and Sepal Length.","868e81fc":"Other statistical values","fde8ffa5":"Let's look at our df.","2a8b9821":"Let's visualize the same two data again with scatterplot, but this time break them according to the target variable with the \"species\" parameter.\n\nCan a clustering be made with sepal variables between 3 different colors? Let's think about how distinct it is.","c36222c6":"Let's observe how many **missing values** in which attribute in the data frame","bfc5a2c5":"Let's view the **basic statistics values** for numeric variables in the data frame.","48a12e92":"Let's view what type the variables are in the data frame and the memory usage.","79723b67":"Let's implement the sns.lmplot () visualization with the variables petal.length and petal.width. What kind of relationship is there between petal length and petal width, and is this relationship strong?","4e0ff500":"Let's draw the distributions of petal.length and petal.width variables with scatterplot.","5bdc7315":"Let's install the libraries we will use according to our needs below.","0f0f53aa":"Let's see how many features and observations the data frame consists of.","fed691c5":"Let's draw the correlation matrix to show whether there is a correlation between the numerical variables. Let's think about the correlation coefficients.\n\nWhich two variables have the strongest positive relationship?","7f3e76b2":"Let's print out observations with sepal.length greater than **5.5 and setosa** type.","436f4175":"To reinforce the answer to this question, let's print the correlation coefficient between the two variables.","a9167611":"Let's visualize how many unique values the target variable \"species\" of our dataframe contains.","efa80c6a":"Let's visualize the unique values of the target variable \"species\" of our dataframe.","54ff82a0":"**Exploratory data analysis (EDA)** is the process of analyzing data using simple concepts from statistics and probability theory and presenting the results in an easy-to-understand format that supports visuals.\n\nThe iris flower dataset (`iris.csv`) consists of 50 samples containing each of the three types of iris flowers: **Iris Setosa**, **Iris Virginica**, and **Iris Versicolor**. The iris flower dataset was introduced by the British statistician and biologist **Ronald Fisher** in his **1936** article \"**The use of multiple measures in taxonomic problems**\".\n\nIris data is a **multivariate data set**. The four properties measured from each sample are in centimeters - **sepal length**, **sepal width**, **petal length**, and **petal width**.\n\n![1_Hh53mOF4Xy4eORjLilKOwA.png](attachment:60fbe151-47ea-40d6-90e2-84454115b3a4.png)\n\nIris flower data are publicly available. It is one of the most widely used datasets, mostly by newcomers to **Data Scienc**e and **Machine Learning**. This dataset can be downloaded from the archives of the **University of California-Irvine**.\n\nIn machine learning terminology, observed features such as sepal length, sepal width, petal length and petal width are called **independent variables**, and the flower class label to be determined (Setosa, Virginica and Versicolor) is called the **dependent variable**.\n\n**The purpose of our use of this data set**; Considering sepal length, sepal width, petal length and petal width, the selected specimen is classified as Setosa, Virginica and Versicolor, one of the three types of iris flower.","e06d8de4":"## What is EDA (Exploratory Data Analysis)?","c59419e7":"Let's draw a heat map to read the correlation coefficients better.","0eb66ffc":"Let's print out the maximum value of sepal.length.","516264bf":"Let's question how balanced our data frame is with the value_counts () function."}}