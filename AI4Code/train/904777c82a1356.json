{"cell_type":{"99b4f522":"code","59e6e868":"code","211b98b8":"code","d70ebd92":"code","963607e9":"code","39e07c1c":"code","98e42040":"code","5248b41e":"code","ae2eb030":"code","e87b935c":"code","8f3e6ac9":"code","7a77dc0c":"code","8acc040c":"code","8ee795af":"code","34dd5617":"code","db14b889":"code","b61efe8a":"code","b8d5f6d0":"code","0b85f231":"code","3904e287":"code","01f07eff":"code","294fe468":"code","066c5fea":"code","996dd83f":"code","66164f4a":"code","ed34a7f0":"code","a0707564":"code","627a2314":"code","35ca2039":"code","9b72eb19":"code","8e3c1886":"code","4090ee17":"code","78dd2822":"code","9ccd6857":"code","8578509a":"code","b4d72c8b":"code","de0c2fd6":"code","4bf81638":"code","0fafcff7":"code","64139827":"code","9b646811":"code","7cd21adf":"markdown","0345268f":"markdown","2f7b1eb0":"markdown","f76d4053":"markdown","4a0a4f41":"markdown","26cfd58d":"markdown","e30ff34a":"markdown","c5706ee7":"markdown","df6dab44":"markdown","f9c76eaa":"markdown","50a46863":"markdown","1a9a45aa":"markdown","e882166f":"markdown","2f8ab772":"markdown","c1a9f75c":"markdown","d453fb6b":"markdown","f0fbc372":"markdown","ddb6e29f":"markdown","a8a5c8c8":"markdown","3b4ecac0":"markdown","c91f108f":"markdown","32ea36b2":"markdown","03e75c4e":"markdown","132bd17c":"markdown","ac1a3041":"markdown","4aafc7f5":"markdown","1a9b65d7":"markdown","0ae5855f":"markdown","990d903d":"markdown"},"source":{"99b4f522":"#Import librairies\nimport pandas as pd \nimport numpy as np\n#Import your libraries for plotting\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nimport seaborn as sb\n%matplotlib inline\n\n#Import data without an index column\nusda = pd.read_csv(\"..\/input\/usda-avocado-market-prices\/usda.csv\", index_col=0)","59e6e868":"#Show first 10 records and last 10 records to see what our data looks like\nprint(usda.head(10))\nprint(usda.tail(10))","211b98b8":"#Checking for duplicate records\nusda.duplicated().value_counts()","d70ebd92":"#Dropping duplicate records\nusda = usda.drop_duplicates()","963607e9":"#Checking to make sure there are no duplicates now\nusda.duplicated().value_counts()","39e07c1c":"#Some summaries\nprint(usda.shape)\nprint(usda.shape[0])\nprint(usda.shape[1])","98e42040":"#High-level summary of the dataframe\nusda.info()","5248b41e":"#Show how many of each value for specific columns, highest count to lowest\nusda.Region.value_counts(dropna=False)","ae2eb030":"usda.Class.value_counts(dropna=False)","e87b935c":"usda.Commodity.value_counts(dropna=False)","8f3e6ac9":"usda.Variety.value_counts(dropna=False)","7a77dc0c":"usda.Organic.value_counts(dropna=False)","8acc040c":"usda.Unit.value_counts(dropna=False)","8ee795af":"usda.Number_of_Stores.value_counts(dropna=False)","34dd5617":"usda.Weighted_Avg_Price.value_counts(dropna=False)","db14b889":"usda.Low_Price.value_counts(dropna=False)","b61efe8a":"usda.High_Price.value_counts(dropna=False)","b8d5f6d0":"usda.Percentage_Marked_Local.value_counts(dropna=False)","0b85f231":"usda.Last_Year_Stores.value_counts(dropna=False)","3904e287":"usda.Last_Year_Avg_Price.value_counts(dropna=False)","01f07eff":"#Quick way to show counts of blank values\nusda.isnull().sum()","294fe468":"#Show all the records that are missing information for one column\nusda[usda['Percentage_Marked_Local'].isnull()]","066c5fea":"# Some basic stats\nusda.describe(percentiles=[.01,.05,.25,.50,.75,.95,.99])","996dd83f":"#Detailed report on the dataset\nimport pandas_profiling\nprint(\"Generating detailed report\")\nusda.profile_report()","66164f4a":"#Splitting the data for analysis\nusdaeach = usda[usda.Unit == 'each']","ed34a7f0":"#High-level summary of \"each\" dataframe\nusdaeach.info()","a0707564":"usdaeach.Organic.value_counts(dropna=False)","627a2314":"# Some basic stats for the \"each\" dataframe\nusdaeach.describe(percentiles=[.01,.05,.25,.50,.75,.95,.99])","35ca2039":"#use this to show outliers\nusda_sample_slim = usdaeach[['Weighted_Avg_Price']] \n\nusda_sample_slim.boxplot(return_type='dict')\nplt.plot()","9b72eb19":"# Print a list of the outliers that are over 2.5\nusda_sample_slim[usda_sample_slim.Weighted_Avg_Price > 2.5]","8e3c1886":"# This shows the outliers split by mutiple variables\nsb.boxplot(x='Weighted_Avg_Price', y = 'Organic', data=usdaeach, palette='hls')","4090ee17":"# Dropping unecessary variables that only have one value\nusdaeach = usdaeach.drop('Class', axis='columns')\nusdaeach = usdaeach.drop('Commodity', axis='columns')","78dd2822":"#New dataset without our dropped columns\nusdaeach.head(10)","9ccd6857":"#Remove Weighted_Avg_Price Outliers\ncols = ['Weighted_Avg_Price'] \nQ1 = usdaeach[cols].quantile(0.25)\nQ3 = usdaeach[cols].quantile(0.75)\nIQR = Q3 - Q1\nusdaeach = usdaeach[~((usdaeach[cols] < (Q1 - 1.5 * IQR)) |(usdaeach[cols] > (Q3 + 1.5 * IQR))).any(axis=1)]","8578509a":"usdaeach.info()","b4d72c8b":"#Plot showing counts of Weighted Avg Price\nsb.displot(usdaeach['Weighted_Avg_Price'])","de0c2fd6":"#Looking at stats per Region\nregiongroups = usdaeach.groupby('Region')\nregiongroups.agg(['count','min','mean','max'])","4bf81638":"#Stats per Region, with another variable\nusdaeach.groupby(['Region', 'Variety', 'Organic']).agg({'Weighted_Avg_Price' :['count','min','mean','max']})","0fafcff7":"pearsoncorr = usdaeach.corr(method='pearson')\npearsoncorr","64139827":"#create a heatmap\nsb.heatmap(pearsoncorr,\n           xticklabels=pearsoncorr.columns,yticklabels=pearsoncorr.columns,cmap='RdBu_r', annot=True,linewidth=0.5)","9b646811":"usdaeach.to_csv('revisedusda.csv', index=False)","7cd21adf":"**Interesting notes from the report:**\n\n**There are 415 distinct dates.**\n\n**18.7% of the records are missing \"Low_Price\" and \"High Price\"**\n**97.4% of the records are missing \"Percentage_Marked_Local\"**\n**19.8% of the records are missing \"Last_Year_Stores\" and \"Last_Year_Avg_Price\"**\n\n**\"Weighted_Avg_Price\" has the highest correlation with \"Low_Price\" and \"Percentage_Marked_Local\"**\n\n**\"Class\" and \"Commodity\" have only one value.**","0345268f":"**Some notes:\nAlaska and Hawaii have the highest mean \"Weighted_Avg_Price\" and the \"South Central US\" has the lowest.\nThe max Weighted_Avg_Price is 2.41 and 2.4 in every Region except for \"Midwest US\" which is 2.27.**","2f7b1eb0":"**Quick visual analyis shows that the most common prices are around 1.0 and 1.5**","f76d4053":"**Only one value for this variable. Variable not helpful for our analysis.**","4a0a4f41":"**62% of the \"each\" records are non-organic, 38% are organic. Not much difference from entire dataframe which was 63% for non-organic, 37% for organic**","26cfd58d":"**Based on the boxplots above we can see the outliers for Non Organic are approx <0.5 and >2.0, for Organic the outliers are approx >2.7.**","e30ff34a":"**Some stats: mean Weighted_Avg_Price is 1.386, range from .14 to 3.99. Range is the same for entire dataframe and \"each\" records, mean is slightly lower for \"each\" dataframe (1.395 vs 1.386)**","c5706ee7":"**There are 113 Weighted_Avg_Price outliers over 2.5 for the \"each\" records.**","df6dab44":"**Two varieties of avocados**","f9c76eaa":"**Only one value for this variable. Variable not helpful for our analysis.**","50a46863":"# **More Descriptive Analytics**","1a9a45aa":"#  **Finding Outliers**","e882166f":"\n# **Cleaning the data**\n","2f8ab772":"**The records that use \"per pound\" and \"each\" should probably be separated for analysis. Not enough records for \"per pound\", will use \"each\" only.**","c1a9f75c":"**7854 unique records, 392 duplicates**","d453fb6b":"\n**First print is amount of records and columns, second print shows just records, third print shows just columns.**","f0fbc372":"**No duplicates in dataframe now.**","ddb6e29f":"**This shows we are missing some values because the numbers in each section are not the same.**","a8a5c8c8":"# **Save cleaned dataset**","3b4ecac0":"**This breaks it up even more, with Weighted_Avg_Price per Variety and Type (Organic or not)**","c91f108f":"**63% of records are for non-organic, 37% are organic**","32ea36b2":"**Mean for Weighted_Avg_Price is 1.395, range is from .14 to 3.99**","03e75c4e":"**Based on the boxplot above we can see there are several observations where the value for Weighted Avg Price is > 2.5, these would be considered outliers.**","132bd17c":"# **Descriptive Analytics**","ac1a3041":"**Once Weighted_Avg_Price outliers are removed, there are 7093 records instead of 7390.**","4aafc7f5":"**Low_Price, High_Price, Last_Year_Stores and Last_Year_Avg_Price might not be necessary for our analysis so we might be able to ignore these columns.\nPercentage Marked Local might be important but most of these records are missing information.**","1a9b65d7":"# **Correlations**","0ae5855f":"**Only 7390 records in the \"each\" dataframe.**","990d903d":"**Keeping the records that use \"each\"**"}}