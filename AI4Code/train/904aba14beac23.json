{"cell_type":{"dc11255a":"code","aeb99f14":"code","dfe6e187":"code","bc8182af":"code","68360f2c":"code","59ee4d11":"code","e98e0cdc":"code","f39b0536":"code","2a7b5d31":"code","6043609d":"code","1aee2856":"code","29d1888f":"code","1b5a67e4":"code","4b312b6a":"code","b44cefab":"code","fd01e092":"code","47df6952":"code","6cd08e38":"code","0f1d35bc":"code","6806a1a6":"code","1a634ff0":"code","1a1d4252":"code","3fe9cc18":"code","5c74a854":"code","dd26f7b3":"code","e7a72ba9":"code","61a5642d":"code","2b78a231":"code","ffc38916":"code","d9d2c4d7":"code","6d7ca24d":"code","9f925476":"code","b7ac546b":"code","4dbfce0b":"code","08329b95":"code","9759b2b1":"code","aa942c0c":"code","c1a45530":"code","3b1e631c":"code","b337c601":"code","a2e29a5a":"code","4df152fd":"code","02fb9fe2":"code","5b23d161":"code","40bd417c":"code","d2d4bcae":"code","88355128":"code","2cdca76c":"code","e466a72d":"code","42a39a46":"code","b6b6d2d6":"code","b493bbdb":"code","d8e5f8e1":"code","72c780df":"code","9d8a8df3":"code","74e52675":"code","7629c73d":"markdown","e53acf24":"markdown","199e8c64":"markdown","a53a86e4":"markdown","bf25c532":"markdown","abc61ea4":"markdown","77bc33a5":"markdown","cd986def":"markdown","0d914042":"markdown","4c9f4b77":"markdown","96baba01":"markdown","e4b9396f":"markdown","a179f195":"markdown","05ef5054":"markdown","bc2f099a":"markdown","da58e6dd":"markdown","6a00a1e8":"markdown","4b7b8915":"markdown","d74a5481":"markdown","0ecf5600":"markdown","493fa827":"markdown","ed0c4f86":"markdown","81f7fe8c":"markdown","0d04916d":"markdown","d8665483":"markdown","27c1938c":"markdown","4112f7dc":"markdown","85138060":"markdown","77b0bc96":"markdown","756d622e":"markdown","a649ae37":"markdown","eaaeea02":"markdown","5a143722":"markdown","5e471031":"markdown","6846cc05":"markdown","b48862cb":"markdown","e55ef8d2":"markdown","b0a1f303":"markdown","ee7725cb":"markdown","3495d28b":"markdown","d0a25c97":"markdown","fb7c5779":"markdown","50ee5151":"markdown","75a8a351":"markdown","2c3ca7cf":"markdown","bead5302":"markdown","50f8d5c1":"markdown","de604a9b":"markdown","28de351f":"markdown","4587b2dd":"markdown","618d72cd":"markdown","1dab53c3":"markdown","8252e389":"markdown","d0a25482":"markdown","e4ab0eeb":"markdown","db6adb64":"markdown","6fe37145":"markdown","040bb193":"markdown","d511c873":"markdown","e7494b20":"markdown","1cae2046":"markdown","7a098062":"markdown","6b5fdcb5":"markdown","44346957":"markdown","dbccf38c":"markdown","e6afde9e":"markdown","b658b6c6":"markdown","a2f86633":"markdown","bd71be2b":"markdown","b234cfb0":"markdown","2094b760":"markdown","b2c6b245":"markdown","87df4006":"markdown","fb200ee8":"markdown","b705ec4e":"markdown","455df805":"markdown","dc5f38ae":"markdown","8d796a1d":"markdown","a5a30f0e":"markdown","e04627f8":"markdown","145dac8e":"markdown","905854fa":"markdown"},"source":{"dc11255a":"import warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","aeb99f14":"# install pywaffle for waffle charts\n!pip install pywaffle","dfe6e187":"import pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pywaffle import Waffle\nimport random\n\n%matplotlib inline","bc8182af":"# setting plot style for all the plots\nplt.style.use('fivethirtyeight')\n\n#accessing all the colors from matplotlib\ncolors=list(matplotlib.colors.CSS4_COLORS.keys())\n","68360f2c":"df = pd.read_csv('\/kaggle\/input\/top50spotify2019\/top50.csv', encoding=\"ISO-8859-1\")\ndf.head()","59ee4d11":"#Drop the Unnamed: 0 column\n\ndf.drop('Unnamed: 0', inplace=True, axis=1)","e98e0cdc":"# Renaming the columns\n\ndf.rename(columns={'Track.Name':'Track Name',\n                   'Artist.Name':'Artist Name',\n                   'Genre':'Genre',\n                   'Beats.Per.Minute':'Beats per Minute',\n                   'Energy':'Energy',\n                   'Danceability':'Danceability',\n                   'Loudness..dB..':'Loudness(dB)',\n                   'Liveness':'Liveness',\n                   'Valence.':'Valence',\n                   'Length.':'Length',\n                   'Acousticness..':'Acousticness',\n                   'Speechiness.':'Speechiness',\n                   'Popularity':'Popularity'}, inplace=True)","f39b0536":"# let's see the dataset again\ndf.head()","2a7b5d31":"df.info()","6043609d":"print('Number of rows in the dataset: ',df.shape[0])\nprint('Number of columns in the dataset: ',df.shape[1])","1aee2856":"df.describe().round(decimals=3)","29d1888f":"df['Artist Name'].nunique()","1b5a67e4":"df['Genre'].nunique()","4b312b6a":"plt.figure(figsize=(8,4))\nsns.distplot(df['Beats per Minute'], kde=False, bins=18,color='#3ff073', hist_kws=dict(edgecolor=\"black\", linewidth=1))\nplt.show()","b44cefab":"minimum_beats_per_min = df[df['Beats per Minute'] == df['Beats per Minute'].min()]\nminimum_beats_per_min[['Track Name', 'Artist Name', 'Genre', 'Beats per Minute']].reset_index().drop('index', axis=1)","fd01e092":"maximum_beats_per_min = df[df['Beats per Minute'] == df['Beats per Minute'].max()]\nmaximum_beats_per_min[['Track Name', 'Artist Name', 'Genre', 'Beats per Minute']].reset_index().drop('index', axis=1)","47df6952":"plt.figure(figsize=(8,4))\nsns.distplot(df['Energy'], kde=False, bins=15,color='red', hist_kws=dict(edgecolor=\"k\", linewidth=1))\nplt.show()","6cd08e38":"minimum_energy = df[df['Energy'] == df['Energy'].min()]\nminimum_energy[['Track Name', 'Artist Name', 'Genre', 'Energy']].reset_index().drop('index', axis=1)","0f1d35bc":"maximum_energy = df[df['Energy'] == df['Energy'].max()]\nmaximum_energy[['Track Name', 'Artist Name', 'Genre', 'Energy']].reset_index().drop('index', axis=1)","6806a1a6":"plt.figure(figsize=(8,4))\nsns.distplot(df['Danceability'], kde=False, bins=15,color='violet', hist_kws=dict(edgecolor=\"black\", linewidth=1))\nplt.show()","1a634ff0":"maximum_danceability = df[df['Danceability'] == df['Danceability'].max()]\nmaximum_danceability[['Track Name', 'Artist Name', 'Genre', 'Danceability']].reset_index().drop('index', axis=1)","1a1d4252":"minimum_danceability = df[df['Danceability'] == df['Danceability'].min()]\nminimum_danceability[['Track Name', 'Artist Name', 'Genre', 'Danceability']].reset_index().drop('index', axis=1)","3fe9cc18":"plt.figure(figsize=(8,4))\nsns.distplot(df['Loudness(dB)'], kde=False, bins=15,color='aqua', hist_kws=dict(edgecolor=\"black\", linewidth=1))\nplt.show()","5c74a854":"minimum_loudness = df[df['Loudness(dB)'] == df['Loudness(dB)'].min()]\nminimum_loudness[['Track Name', 'Artist Name', 'Genre', 'Loudness(dB)']].reset_index().drop('index', axis=1)","dd26f7b3":"maximum_loudness = df[df['Loudness(dB)'] == df['Loudness(dB)'].max()]\nmaximum_loudness[['Track Name', 'Artist Name', 'Genre', 'Loudness(dB)']].reset_index().drop('index', axis=1)","e7a72ba9":"plt.figure(figsize=(8,4))\nsns.distplot(df['Liveness'], kde=False, bins=15,color='darkorchid', hist_kws=dict(edgecolor=\"black\", linewidth=1))\nplt.show()","61a5642d":"minimum_Liveness = df[df['Liveness'] == df['Liveness'].min()]\nminimum_Liveness[['Track Name', 'Artist Name', 'Genre', 'Liveness']].reset_index().drop('index', axis=1)","2b78a231":"maximum_Liveness = df[df['Liveness'] == df['Liveness'].max()]\nmaximum_Liveness[['Track Name', 'Artist Name', 'Genre', 'Liveness']].reset_index().drop('index', axis=1)","ffc38916":"plt.figure(figsize=(8,4))\nsns.distplot(df['Valence'], kde=False, bins=15,color='darkgreen', hist_kws=dict(edgecolor=\"black\", linewidth=1))\nplt.show()","d9d2c4d7":"minimum_Valence = df[df['Valence'] == df['Valence'].min()]\nminimum_Valence[['Track Name', 'Artist Name', 'Genre', 'Valence']].reset_index().drop('index', axis=1)","6d7ca24d":"maximum_Valence = df[df['Valence'] == df['Valence'].max()]\nmaximum_Valence[['Track Name', 'Artist Name', 'Genre', 'Valence']].reset_index().drop('index', axis=1)","9f925476":"plt.figure(figsize=(8,4))\nsns.distplot(df['Length'], kde=False, bins=15,color='m', hist_kws=dict(edgecolor=\"black\", linewidth=1))\nplt.show()","b7ac546b":"minimum_Length = df[df['Length'] == df['Length'].min()]\nminimum_Length[['Track Name', 'Artist Name', 'Genre', 'Length']].reset_index().drop('index', axis=1)","4dbfce0b":"maximum_Length = df[df['Length'] == df['Length'].max()]\nmaximum_Length[['Track Name', 'Artist Name', 'Genre', 'Length']].reset_index().drop('index', axis=1)","08329b95":"plt.figure(figsize=(8,4))\nsns.distplot(df['Acousticness'], kde=False, bins=15,color='darkblue', hist_kws=dict(edgecolor=\"black\", linewidth=1))\nplt.show()","9759b2b1":"minimum_Acousticness = df[df['Acousticness'] == df['Acousticness'].min()]\nminimum_Acousticness[['Track Name', 'Artist Name', 'Genre', 'Acousticness']].reset_index().drop('index', axis=1)","aa942c0c":"maximum_Acousticness = df[df['Acousticness'] == df['Acousticness'].max()]\nmaximum_Acousticness[['Track Name', 'Artist Name', 'Genre', 'Acousticness']].reset_index().drop('index', axis=1)","c1a45530":"plt.figure(figsize=(8,4))\nsns.distplot(df['Popularity'], kde=False, bins=15,color='orange', hist_kws=dict(edgecolor=\"black\", linewidth=1))\nplt.show()","3b1e631c":"minimum_Popularity = df[df['Popularity'] == df['Popularity'].min()]\nminimum_Popularity[['Track Name', 'Artist Name', 'Genre', 'Popularity']].reset_index().drop('index', axis=1)","b337c601":"maximum_Popularity = df[df['Popularity'] == df['Popularity'].max()]\nmaximum_Popularity[['Track Name', 'Artist Name', 'Genre', 'Popularity']].reset_index().drop('index', axis=1)","a2e29a5a":"plt.style.use('fivethirtyeight')\nplt.figure(figsize=(16,8))\nsns.countplot(x='Genre', data = df, linewidth=2, edgecolor='black')\nplt.xticks(rotation=90)\nplt.show()","4df152fd":"calculated = df.Genre.value_counts()\nsns.set_style('darkgrid')\nfig = plt.figure(figsize=(13,8),\n    FigureClass=Waffle, \n    rows=5, \n    values=list(calculated.values),\n    labels=list(calculated.index),\n                 legend={'loc': 'upper left', 'bbox_to_anchor': (1.1, 1)},\n                 edgecolor='black',\n                 colors= random.sample(colors,21),\n)","02fb9fe2":"plt.figure(figsize=(12,8))\ncorr = df.corr()\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\nsns.heatmap(corr,mask=mask, annot=True, linewidths=1, cmap='YlGnBu')\nplt.show()","5b23d161":"sns.set_style('whitegrid')\nsns.pairplot(df)\nplt.show()","40bd417c":"plt.figure(figsize=(20,8))\nplt.style.use('fivethirtyeight')\nsns.countplot(x=df['Artist Name'],data=df, linewidth=2, edgecolor='black')\nplt.title('Number of times an artist appears in the top 50 songs list')\nplt.xticks(rotation=90)\nplt.show()","d2d4bcae":"plt.figure(figsize=(20,6))\nsns.boxplot(x='Genre', y='Energy', data = df, linewidth=2)\nplt.xticks(rotation=90)\nplt.show()","88355128":"plt.figure(figsize=(20,6))\nsns.boxplot(x='Genre', y='Beats per Minute', data = df, linewidth=2)\nplt.xticks(rotation=90)\nplt.show()","2cdca76c":"plt.figure(figsize=(20,6))\nsns.boxplot(x='Genre', y='Danceability', data = df, linewidth=2)\nplt.xticks(rotation=90)\nplt.show()","e466a72d":"plt.figure(figsize=(20,6))\nsns.boxplot(x='Genre', y='Loudness(dB)', data = df, linewidth=2)\nplt.xticks(rotation=90)\nplt.show()","42a39a46":"plt.figure(figsize=(20,6))\nsns.boxplot(x='Genre', y='Liveness', data = df, linewidth=2)\nplt.xticks(rotation=90)\nplt.show()","b6b6d2d6":"plt.figure(figsize=(20,6))\nsns.boxplot(x='Genre', y='Valence', data = df, linewidth=2)\nplt.xticks(rotation=90)\nplt.show()","b493bbdb":"plt.figure(figsize=(20,5))\nsns.boxplot(x='Genre', y='Length', data = df, linewidth=2)\nplt.xticks(rotation=90)\nplt.show()","d8e5f8e1":"plt.figure(figsize=(20,6))\nsns.boxplot(x='Genre', y='Acousticness', data = df, linewidth=2)\nplt.xticks(rotation=90)\nplt.show()","72c780df":"plt.figure(figsize=(20,6))\nsns.boxplot(x='Genre', y='Speechiness', data = df, linewidth=2)\nplt.xticks(rotation=90)\nplt.show()","9d8a8df3":"plt.figure(figsize=(20,6))\nsns.boxplot(x='Genre', y='Popularity', data = df, linewidth=2)\nplt.xticks(rotation=90)\nplt.show()","74e52675":"colors=list(matplotlib.colors.CSS4_COLORS.keys())\nfig, axes = plt.subplots(nrows=3, ncols=3, figsize=(18,10))\naxes = axes.flatten()\n\nnumeric_cols = list(df.select_dtypes([np.number]).columns[:-1])         #selecting all the numeric columns except Popularity\nplt.tight_layout(pad=2)\nfor i, j in enumerate(numeric_cols):\n    axes[i].scatter(x=df[j], y=df['Popularity'], color= random.choice(colors), edgecolor='black')\n    axes[i].set_xlabel(j)\n    axes[i].set_ylabel('Popularity')","7629c73d":"Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable","e53acf24":"#### Maximum Acousticness\n","199e8c64":"### What's next?\n\n1. Plotting and exploring relations between Popularity and other numerical features\n\n2. Finding the characterstics of songs with the most popularity values.\n\n**Suggestions are welcome**\n<font color='red'>UPVOTE<\/font> if you found the notebook useful.","a53a86e4":"### Dimensions of the dataset\n","bf25c532":"#### Minimum Length","abc61ea4":"**Dance Pop** has the most variability in their acousticness values. However Australian Pop has the highest median value(probably because there's just one song present in that category). An outlier is also present in the Pop genre with an unusually high value.","77bc33a5":"### Number of unique artists in the dataset","cd986def":"### 6. Valence\n","0d914042":"### 5. Liveness","4c9f4b77":"#### Minimum Loudness","96baba01":"Dance Pop has the most variability in Energy levels ranging from the lowest 32 to the highest value 88. However Reggaton Flow as the highest median value among all the genres.\n\nSongs with more energy level are energetic tracks feel fast, loud, and noisy. ","e4b9396f":"A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic. ","a179f195":"### 1. Beates per Minute (Tempo)","05ef5054":"**Ed Sheeran has the most(4) number of songs in the top 50 category**","bc2f099a":"### 3. Danceability\n","da58e6dd":"#### Maximum Energy","6a00a1e8":"#### Maximum Danceability","4b7b8915":"In this kernel I have performed Exploratory Data Analysis on the **Top 50 Spotify Songs** and tried to identify relationship between thier popularity and various other features.I will use various other algorithms for predictions in future and add them in this kernel.","d74a5481":"### 8. Acousticness","0ecf5600":"#### Minimum Acousticness","493fa827":"#### 2. Beats per minute vs. Genre","ed0c4f86":"#### 8. Acousticness vs. Genre\n","81f7fe8c":"The distribution of beats per minute is positively skewed and most of the values lie between 85 and 100","0d04916d":"### Features of the data set","d8665483":"#### 1. Energy vs. Genre\n","27c1938c":"A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).","4112f7dc":"### Number of times an artist's name appears in the Top 50 songs list","85138060":"### Number of unique genre in the dataset","77b0bc96":"**Dance Pop** and **Latin** display the most variability in their speechiness values. **Electropop** however represents the highest median value for speechiness.\n\nSpeechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words","756d622e":"Canadian Hip Hop has the highest median value of danceability. Edm and Pop however have the most variability in their danceability values.\n\nDanceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity.","a649ae37":"#### Maximum Valence","eaaeea02":"Pop and Canadian Hip Hop have the most variability in their Loudness values. Brostep however have the highest median value for Loudness.","5a143722":"### Boxplot of various numerical features vs. Genre","5e471031":"Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy.","6846cc05":"#### Maximum Loudness","b48862cb":"#### Minimum Liveness\n","e55ef8d2":"#### 9. Speechiness vs. Genre","b0a1f303":"#### Minimum Valence","ee7725cb":"#### 10. Popularity vs. Genre","3495d28b":"## Exploratory Data Analysis(EDA)","d0a25c97":"### Relationsip between Popularity and other Numerical features","fb7c5779":"**The features described in the above data set are:**\n\n**1. Count** tells us the number of NoN-empty rows in a feature.\n\n**2. Mean** tells us the mean value of that feature.\n\n**3. Std** tells us the Standard Deviation Value of that feature.\n\n**4. Min** tells us the minimum value of that feature.\n\n**5. 25%, 50%, and 75%** are the percentile\/quartile of each features.\n\n**6. Max** tells us the maximum value of that feature.","50ee5151":"Here Latin has the most variability in values ranging from as low as 92 to as high as 176. Country Rap however has the highest median value i.e. 145","75a8a351":"#### 3. Danceability vs. Genre","2c3ca7cf":"Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typical range between -60 and 0 db.","bead5302":"### Wafflte Chart of all the Genres","50f8d5c1":"#### Maximum Length","de604a9b":"#### Minimum beats per minute","28de351f":"Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live. ","4587b2dd":"### 9. Popularity\n","618d72cd":"### 2. Energy\n","1dab53c3":"#### Maximum Liveness","8252e389":"#### Minimum Energy","d0a25482":"#### 5. Liveness vs. Genre","e4ab0eeb":"#### Maximum Popularity","db6adb64":"### Loading the data","6fe37145":"#### Maximum beats per minute\n","040bb193":"### Number of songs in each genre\n","d511c873":"#### Minimum Popularity\n","e7494b20":"Describes the duration of the song in seconds.","1cae2046":"The **Unnamed:0** column is the same as index of the dataset, so will drop it. Also I will format the column names in order to make them easily accessable. ","7a098062":"#### 7. Length vs. Genre","6b5fdcb5":"**dfw rap** has the highest maximum, minimum as well as median popularity values","44346957":"**Reggaeton Flow** has the highest median value for length. It also has the highest maximum and minimum values of length indicating that Reggaton Flow songs usually last more than 5 minutes.","dbccf38c":"Beats per minute is the unit of measurement for measuring tempo. A \"beat\" is the standard measurement for a length of a piece of music. \n\nIn musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration","e6afde9e":"#### 6. Valence vs. Genre","b658b6c6":"The higher the popularity value the more popular a given song is.","a2f86633":"### 7. Length","bd71be2b":"**Latin** has the highest variability in their Liveness values. **Brostep** however has the highest median value for liveness. \n\nLiveness detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8(80%) provides strong likelihood that the track is live.","b234cfb0":"There are **NO Null values** in the dataset. Also there are **3 categorical features** and **10 numerical features** in the dataset.","2094b760":"### Basic statistical details about the dataset","b2c6b245":"First let's analyze each of the numerical features one by one.","87df4006":"**Dance pop** has the most number of songs (8) in the top 50 category followed by pop (7) and Latin (5)","fb200ee8":"#### Minimum Danceability\n","b705ec4e":"**Dance Pop**, **Pop** and **Dfw rap** have the most variability in their values. **Boy Band** has the highest median value for valence.\n\nTracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).","455df805":"### Heatmap of correlation between various features","dc5f38ae":"I hope you find this kernel helpful and some **<font color='red'>UPVOTES<\/font>** would be very much appreciated","8d796a1d":"### 4. Loudness(dB)","a5a30f0e":"### Importing required libraries","e04627f8":"#### 4. Loudness vs. Genre","145dac8e":"### Pairplot of all the features","905854fa":"Only two pairs of features 1. Beats per Minute & Speechiness and 2. Energy & Loudness(dB) have a correlation value of more than 0.5"}}