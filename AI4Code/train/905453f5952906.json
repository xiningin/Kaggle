{"cell_type":{"14882540":"code","fe3b567e":"code","bdd04259":"code","8621fdc4":"code","83e33129":"code","b4cb54e9":"code","978d3d0a":"code","af5b5e6c":"code","5f15146c":"code","4a0f0d0f":"code","c82369f1":"code","63a97189":"code","3ebb3a5d":"code","41b34a6f":"code","37cfd387":"code","11e2fd77":"code","73e103ff":"code","ffa52ce4":"code","53076903":"code","27cebb50":"code","f851ce58":"code","6c128cf4":"code","ed03074a":"code","55861489":"code","4cd02b82":"code","ce34b90d":"markdown","da657316":"markdown","1816f78b":"markdown","2828aaa4":"markdown","a7fa03f8":"markdown","8d5440c7":"markdown","72238348":"markdown","f06f26c7":"markdown","fa1eb308":"markdown","b4c028d6":"markdown","5019db18":"markdown"},"source":{"14882540":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport cv2\nfrom skimage.morphology import skeletonize","fe3b567e":"Karo = ['A','Ba','Ca','Da','Ga','I','Ja','Ka','La','Ma','Na','Nga','Pa','Ra','Sa','Ta','U','Wa','Ya']\nMandailing = ['A','Ba','Ca','Da','Ga','Ha','I','Ja','Ka','La','Ma','Na','Nga','Nya','Pa','Ra','Sa','Ta','U','Wa','Ya']\nPakpak = ['A','Ba','Da','Ga','I','Ja','Ka','La','Ma','Na','Nga','Pa','Ra','Sa','Ta','U','Wa','Ya']\nSimalungun = ['A','Ba','Da','Ga','Ha','I','Ja','La','Ma','Mba','Na','Nda','Nga','Nya','Pa','Ra','Sa','Ta','U','Wa','Ya']\nToba = ['A','Ba','Da','Ga','Ha','I','Ja','Ka','La','Ma','Na','Nga','Nya','Pa','Ra','Sa','Ta','U','Wa','Ya']\nprint(\"Total Huruf\")\nprint(\"Huruf Karo : \"+str(str(Karo).count(\",\")+1))\nprint(\"Huruf Mandailing : \"+str(str(Mandailing).count(\",\")+1))\nprint(\"Huruf Pakpak : \"+str(str(Pakpak).count(\",\")+1))\nprint(\"Huruf Simalungun : \"+str(str(Simalungun).count(\",\")+1))\nprint(\"Huruf Toba : \"+str(str(Toba).count(\",\")+1))","bdd04259":"#FUNGSI UNTUK MELAKUKAN PREPROCESSING\ndef preprocessing(image):\n    image = np.uint8(image) #Convert to unsigned integer 8\n    image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY) #Grayscalling\n    ret,image = cv2.threshold(image,150,255,cv2.THRESH_BINARY) #To Binary\n    P = image.shape[0]\n    Q = image.shape[1]\n    for p in range(0,P):\n        for q in range(0,Q):\n            if image[p,q] == 255:\n                image[p,q] = 0\n            elif image[p,q] == 0:\n                image[p,q] = 1\n    skeleton = skeletonize(image)\n    return 1*skeleton","8621fdc4":"hurufkaro = {'A':{},'Ba':{},'Ca':{} ,'Da':{} ,'Ga':{} ,'I':{} ,'Ja':{} ,'Ka':{} ,'La':{} ,'Ma':{} ,'Na':{} ,'Nga':{} ,'Pa':{} ,'Ra':{} ,'Sa':{} ,'Ta':{} ,'U':{} ,'Wa':{} ,'Ya':{} }\nhurufmandailing = {'A':{},'Ba':{} ,'Ca':{} ,'Da':{} ,'Ga':{} ,'Ha':{} ,'I':{} ,'Ja':{} ,'Ka':{},'La':{},'Ma':{},'Na':{},'Nga':{},'Nya':{},'Pa':{},'Ra':{},'Sa':{},'Ta':{},'U':{} ,'Wa':{} ,'Ya':{}} \nhurufpakpak = {'A':{},'Ba':{} ,'Da':{} ,'Ga':{} ,'I':{} ,'Ja':{} ,'Ka':{} ,'La':{} ,'Ma':{} ,'Na':{} ,'Nga':{} ,'Pa':{} ,'Ra':{} ,'Sa':{} ,'Ta':{},'U':{},'Wa':{},'Ya':{}}\nhurufsimalungun = {'A': {}, 'Ba': {}, 'Da': {}, 'Ga': {}, 'Ha': {}, 'I': {}, 'Ja': {}, 'La': {}, 'Ma': {}, 'Mba': {}, 'Na': {}, 'Nda':{}, 'Nga': {}, 'Nya': {} , 'Pa': {}, 'Ra': {}, 'Sa':{}, 'Ta': {}, 'U': {}, 'Wa': {}, 'Ya': {} }\nhuruftoba = {'A':{},'Ba':{},'Da':{},'Ga':{},'Ha':{},'I':{},'Ja':{},'Ka':{},'La':{},'Ma':{},'Na':{},'Nga':{},'Nya':{},'Pa':{},'Ra':{},'Sa':{},'Ta':{},'U':{},'Wa':{},'Ya':{} }\nsurat_batak = [\n    'Karo',\n    'Mandailing',\n    'Pakpak',\n    'Simalungun',\n    'Toba'\n]\n\nfor surat in surat_batak:\n    list_surat = locals()[surat]\n    for i in list_surat:\n        for a in range(1,11):\n            alamat = '..\/input\/suratbatak\/surat batak\/'+str(surat)+' Final\/'+str(i)+'\/'+str(a)+'.png'\n            img = cv2.imread(alamat)\n            if surat == 'Karo':\n                hurufkaro[i][str(a)] = preprocessing(img)\n            elif surat == 'Mandailing':\n                hurufmandailing[i][str(a)] = preprocessing(img)\n            elif surat == 'Pakpak':\n                hurufpakpak[i][str(a)] = preprocessing(img)\n            elif surat == 'Simalungun':\n                hurufsimalungun[i][str(a)] = preprocessing(img)\n            elif surat == 'Toba':\n                huruftoba[i][str(a)] = preprocessing(img)","83e33129":"f, axarr = plt.subplots(4, 5)\nno = 0\nfor baris in range(0,4):\n    for kolom in range(0,5):\n        axarr[baris, kolom].imshow(huruftoba[Toba[no]]['1'],cmap='gray')\n        axarr[baris, kolom].set_title(Toba[no])\n        no = no+1\nf.subplots_adjust(hspace=0.9)","b4cb54e9":"print('Total Karakter Pada Dataset : '+str(99*10))\nprint('Masing-masing karakter memiliki 10 sample 7 untuk ditraining dan 2 untuk testing');\n\njml_karo = str(Karo).count(\",\")+1\njml_mand = str(Mandailing).count(\",\")+1\njml_pak  = str(Pakpak).count(\",\")+1\njml_sim  = str(Simalungun).count(\",\")+1\njml_toba = str(Toba).count(\",\")+1\ntotal = jml_karo + jml_mand + jml_pak + jml_sim + jml_toba;\nprint(\"Jumlalh yang digunakan : \"+str(total))\n","978d3d0a":"def make_a(image):\n    P = image.shape[0]\n    Q = image.shape[1]\n    inp_new = 0*image\n    for p in range(1,P-1):\n        for q in range(1, Q-1):\n            if image[p,q] == 1:\n                if (image[p-1,q-1] != 0 or image[p+1,q+1] != 0):\n                    image[p,q] = 5\n                if (image[p-1, q] != 0 or image[p+1, q] != 0):\n                    image[p,q] = 2\n                if (image[p-1,q+1] != 0 or image[p+1,q-1] != 0):\n                    image[p,q] = 3\n                if (image[p, q-1] != 0 or image[p,q+1] != 0):\n                    image[p,q] = 4\n    return image","af5b5e6c":"karo_arah = {'A':{},'Ba':{},'Ca':{} ,'Da':{} ,'Ga':{} ,'I':{} ,'Ja':{} ,'Ka':{} ,'La':{} ,'Ma':{} ,'Na':{} ,'Nga':{} ,'Pa':{} ,'Ra':{} ,'Sa':{} ,'Ta':{} ,'U':{} ,'Wa':{} ,'Ya':{} }\nmandailing_arah = {'A':{},'Ba':{} ,'Ca':{} ,'Da':{} ,'Ga':{} ,'Ha':{} ,'I':{} ,'Ja':{} ,'Ka':{},'La':{},'Ma':{},'Na':{},'Nga':{},'Nya':{},'Pa':{},'Ra':{},'Sa':{},'Ta':{},'U':{} ,'Wa':{} ,'Ya':{}} \npakpak_arah = {'A':{},'Ba':{} ,'Da':{} ,'Ga':{} ,'I':{} ,'Ja':{} ,'Ka':{} ,'La':{} ,'Ma':{} ,'Na':{} ,'Nga':{} ,'Pa':{} ,'Ra':{} ,'Sa':{} ,'Ta':{},'U':{},'Wa':{},'Ya':{}}\nsimalungun_arah = {'A': {}, 'Ba': {}, 'Da': {}, 'Ga': {}, 'Ha': {}, 'I': {}, 'Ja': {}, 'Ka': {}, 'La': {}, 'Ma': {}, 'Mba': {}, 'Na': {}, 'Nda':{}, 'Nga': {}, 'Nya': {} , 'Pa': {}, 'Ra': {}, 'Sa':{}, 'Ta': {}, 'U': {}, 'Wa': {}, 'Ya': {} }\ntoba_arah = {'A':{},'Ba':{},'Da':{},'Ga':{},'Ha':{},'I':{},'Ja':{},'Ka':{},'La':{},'Ma':{},'Na':{},'Nga':{},'Nya':{},'Pa':{},'Ra':{},'Sa':{},'Ta':{},'U':{},'Wa':{},'Ya':{} }\n\ndef dfeprocess(arah):\n    tot = 11\n    if arah == 'Karo':\n        for i in Karo:\n            for a in range(1,tot):\n                karo_arah[i][str(a)] = make_a(hurufkaro[i][str(a)])\n    elif arah == 'Mandailing':\n        for i in Mandailing:\n            for a in range(1,tot):\n                mandailing_arah[i][str(a)] = make_a(hurufmandailing[i][str(a)])\n    elif arah == 'Pakpak':\n        for i in Pakpak:\n            for a in range(1,tot):\n                pakpak_arah[i][str(a)] = make_a(hurufpakpak[i][str(a)])\n    elif arah == 'Simalungun':\n        for i in Simalungun:\n            for a in range(1,tot):\n                simalungun_arah[i][str(a)] = make_a(hurufsimalungun[i][str(a)])\n    elif arah == 'Toba':\n        for i in Toba:\n            for a in range(1,tot):\n                toba_arah[i][str(a)] = make_a(huruftoba[i][str(a)])\n\nfor x in surat_batak:\n    dfeprocess(x)","5f15146c":"print(toba_arah['A']['10'])","4a0f0d0f":"dtset_karo = []\ndtset_mandailing = []\ndtset_pakpak = []\ndtset_simalungun = []\ndtset_toba = []\ntot = 8\nfor i in Karo:\n    for a in range(1,tot):\n        dtset_karo.append(i)\nfor i in Mandailing:\n    for a in range(1,tot):\n        dtset_mandailing.append(i)\nfor i in Pakpak:\n    for a in range(1,tot):\n        dtset_pakpak.append(i)\nfor i in Simalungun:\n    for a in range(1,tot):\n        dtset_simalungun.append(i)\nfor i in Toba:\n    for a in range(1,tot):\n        dtset_toba.append(i)","c82369f1":"def count_kode_arah(image_label):\n    P = image_label.shape[0]\n    Q = image_label.shape[1]\n    inp_new = 0*image_label\n    K = [0,0,0,0,0,0,0,0]\n    for p in range(1,P-1):\n        for q in range(1, Q-1):\n            if image_label[p,q] == 2:\n                K[0] = K[0] + 1\n                K[4] = K[4] + image_label[p,q]\n            if image_label[p,q] == 3:\n                K[1] = K[1] + 1\n                K[5] = K[5] + image_label[p,q]\n            if image_label[p,q] == 4:\n                K[2] = K[2] + 1\n                K[6] = K[6] + image_label[p,q]\n            if image_label[p,q] == 5:\n                K[3] = K[3] + 1\n                K[7] = K[7] + image_label[p,q]\n    K[0] = K[0]\/P\n    K[1] = K[1]\/P\n    K[2] = K[2]\/P\n    K[3] = K[3]\/P\n    K[4] = K[4]\/P\n    K[5] = K[5]\/P\n    K[6] = K[6]\/P\n    K[7] = K[7]\/P\n    return K","63a97189":"c_kode_arah_karo = []\nc_kode_arah_mandailing = []\nc_kode_arah_pakpak = []\nc_kode_arah_simalungun = []\nc_kode_arah_toba = []\nfor i in Karo:\n    for a in range(1,tot):\n        c_kode_arah_karo.append(count_kode_arah(karo_arah[i][str(a)]))\nfor i in Mandailing:\n    for a in range(1,tot):\n        c_kode_arah_mandailing.append(count_kode_arah(mandailing_arah[i][str(a)]))\nfor i in Pakpak:\n    for a in range(1,tot):\n        c_kode_arah_pakpak.append(count_kode_arah(pakpak_arah[i][str(a)]))\nfor i in Simalungun:\n    for a in range(1,tot):\n        c_kode_arah_simalungun.append(count_kode_arah(simalungun_arah[i][str(a)]))\nfor i in Toba:\n    for a in range(1,tot):\n        c_kode_arah_toba.append(count_kode_arah(toba_arah[i][str(a)]))\n","3ebb3a5d":"import pandas as pd\nlihat_karo = np.column_stack((c_kode_arah_karo, dtset_karo))\ndf2 = pd.DataFrame(lihat_karo,columns=['K[0]', 'K[1]', 'K[2]','K[3]','K[4]','K[5]','K[6]','K[7]','Label'])\ndf2","41b34a6f":"from sklearn.neural_network import MLPClassifier\nclf_karo = MLPClassifier(alpha=0.000000001,hidden_layer_sizes=(100,100,100), max_iter=10000,random_state=0) \nclf_mandailing = MLPClassifier(alpha=0.000000001,hidden_layer_sizes=(100,100,100), max_iter=10000,random_state=0)\nclf_pakpak = MLPClassifier(alpha=0.0000000001,hidden_layer_sizes=(100,100,100), max_iter=10000,random_state=0)\nclf_simalungun = MLPClassifier(alpha=0.00000001,hidden_layer_sizes=(100,100,100), max_iter=10000,random_state=13423)\nclf_toba = MLPClassifier(alpha=0.000000001,hidden_layer_sizes=(100,100,100), max_iter=10000,random_state=0)\n","37cfd387":"clf_karo.fit(c_kode_arah_karo,dtset_karo)","11e2fd77":"clf_mandailing.fit(c_kode_arah_mandailing,dtset_mandailing)","73e103ff":"clf_pakpak.fit(c_kode_arah_pakpak,dtset_pakpak)","ffa52ce4":"clf_simalungun.fit(c_kode_arah_simalungun,dtset_simalungun)","53076903":"clf_toba.fit(c_kode_arah_toba,dtset_toba)","27cebb50":"dtest_karo = []\ndtest_mandailing = []\ndtest_pakpak = []\ndtest_simalungun = []\ndtest_toba = []\ntot = 11\nfor i in Karo:\n    for a in range(8,tot):\n        dtest_karo.append(i)\nfor i in Mandailing:\n    for a in range(8,tot):\n        dtest_mandailing.append(i)\nfor i in Pakpak:\n    for a in range(8,tot):\n        dtest_pakpak.append(i)\nfor i in Simalungun:\n    for a in range(8,tot):\n        dtest_simalungun.append(i)\nfor i in Toba:\n    for a in range(8,tot):\n        dtest_toba.append(i)","f851ce58":"c_kode_arah_karo_t = []\nc_kode_arah_mandailing_t = []\nc_kode_arah_pakpak_t = []\nc_kode_arah_simalungun_t = []\nc_kode_arah_toba_t = []\nfor i in Karo:\n    for a in range(8,tot):\n        c_kode_arah_karo_t.append(count_kode_arah(karo_arah[i][str(a)]))\nfor i in Mandailing:\n    for a in range(8,tot):\n        c_kode_arah_mandailing_t.append(count_kode_arah(mandailing_arah[i][str(a)]))\nfor i in Pakpak:\n    for a in range(8,tot):\n        c_kode_arah_pakpak_t.append(count_kode_arah(pakpak_arah[i][str(a)]))\nfor i in Simalungun:\n    for a in range(8,tot):\n        c_kode_arah_simalungun_t.append(count_kode_arah(simalungun_arah[i][str(a)]))\nfor i in Toba:\n    for a in range(8,tot):\n        c_kode_arah_toba_t.append(count_kode_arah(toba_arah[i][str(a)]))","6c128cf4":"print('Akurasi untuk huruf Karo')\nprint('ACCURACY USING DATA TRAINING : ' + str(clf_karo.score(c_kode_arah_karo,dtset_karo))) # ACCURACY USING DATA TRAINING\nprint('ACCURACY USING DATA TESTING  : ' + str(clf_karo.score(c_kode_arah_karo_t,dtest_karo))) #ACCURACY USING DATA TESTING\nprint()\nprint('Akurasi untuk huruf Mandailing')\nprint('ACCURACY USING DATA TRAINING : ' + str(clf_mandailing.score(c_kode_arah_mandailing,dtset_mandailing))) # ACCURACY USING DATA TRAINING\nprint('ACCURACY USING DATA TESTING  : ' + str(clf_mandailing.score(c_kode_arah_mandailing_t,dtest_mandailing))) #ACCURACY USING DATA TESTING\nprint()\nprint('Akurasi untuk huruf Pakpak')\nprint('ACCURACY USING DATA TRAINING : ' + str(clf_pakpak.score(c_kode_arah_pakpak,dtset_pakpak))) # ACCURACY USING DATA TRAINING\nprint('ACCURACY USING DATA TESTING  : ' + str(clf_pakpak.score(c_kode_arah_pakpak_t,dtest_pakpak))) #ACCURACY USING DATA TESTING\nprint()\nprint('Akurasi untuk huruf Simalungun')\nprint('ACCURACY USING DATA TRAINING : ' + str(clf_simalungun.score(c_kode_arah_simalungun,dtset_simalungun))) # ACCURACY USING DATA TRAINING\nprint('ACCURACY USING DATA TESTING  : ' + str(clf_simalungun.score(c_kode_arah_simalungun_t,dtest_simalungun))) #ACCURACY USING DATA TESTING\nprint()\nprint('Akurasi untuk huruf Toba')\nprint('ACCURACY USING DATA TRAINING : ' + str(clf_toba.score(c_kode_arah_toba,dtset_toba))) # ACCURACY USING DATA TRAINING\nprint('ACCURACY USING DATA TESTING  : ' + str(clf_toba.score(c_kode_arah_toba_t,dtest_toba))) #ACCURACY USING DATA TESTING","ed03074a":"clf_karo.predict([[0.166666666666666,0.16666666666666666,1.1333333333333333,0.16666666666666666,0.166666666666666,0.16666666666666666,1.1333333333333333,0.16666666666666666]])","55861489":"import os\nprint(os.listdir(\"..\/input\/suratbatakwiki\/surat batak\/Karo\"))","4cd02b82":"alamat = '..\/input\/suratbatak\/surat batak\/Karo Final\/A\/7.png'\nimg = cv2.imread(alamat)\ngambar = preprocessing(img)\ndfe = make_a(gambar)\nkode_arah = count_kode_arah(dfe)\nclf_karo.predict([kode_arah])","ce34b90d":"### 3. Baca Gambar dan Preprocessing\nFungsi binary adalah fungsi preprocessing yang terdiri dari beberapa tahapan yaitu :\n1. Mengubah nilai gambar menjadi **uint8**\n2. Kemudian dilakukan **grayscaling**\n3. Mengubah Ke **binary**\n4. Melakukan **skeletonize**\/perampingan lebar piksel","da657316":"### 6. Melakukan Training\nData training yang sudah disiapkan beserta label kemudian akan dtraining dengan menggunakan algoritma *Backpropagation* menggunakan library dari sklearn yang bernama MLPClassifier. Dari situs resminya mereka mengatakan bahwa \n> Class MLPClassifier implements a multi-layer perceptron (MLP) algorithm that trains using Backpropagation. - [Scikit Learn MLPClassifier](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neural_network.MLPClassifier.html)\n","1816f78b":"### 5. Menghitung Feature dan Mempersiapkan data untuk training\nDari hasil citra yang sudah diubah menggunakan metode DFE, kemudian dilakukan penghitungan nilai total arah dibagi dengan total piksel sehingga akan tercipta empat nilai [K[0],K[1], K[2], K[3], K[4], K[5], K[6], K[7]]. Lalu kemudian dilakukan pelabelan.","2828aaa4":"### 1. Import semua library yang dibutuhkan\n1. Matplotlib : Untuk menampilkan gambar\n2. Numpy : Untuk membantu olah array\/matriks\n3. cv2 : Untuk membantu pengolahan gambar\n4. skimage : membantu proses skeletonize","a7fa03f8":"### 7. Menyiapkan Data testing untuk mengetahui akurasi\nPada penelitian ini digunakan skema 70-30. 80% data training dan 30% data testing.","8d5440c7":"### 2. Data Daftar Karakter dalam surat Batak","72238348":"\n### 3. Menampilkan beberapa karakter hasil Preprocessing dan Detail Dataset","f06f26c7":"### 4. Melakukan Proses DFE pada Dataset\nProses DFE dilakukan dengan cara memeriksa masing-masing piksel, jika piksel merupakan piksel background, maka akan dilewati. Jika ditemukan piksel foreground baru dilakukan proses pengecekan arah menggunakan metode matriks ketetanggaan. Pada matriks ketetanggan dikenal 4 dan 8 tetangga. Pada penelitian ini digunakan 8 tetangga untuk meningkatkan akurasi seperti yang sudah dilakukan penelitian sebelumnya. P0 di cek kemudian jika piksel bernilai 1 maka tetangganya akan di cek berdasarkan kode arah.\n\n![Matriks Ketetanggaan](https:\/\/i.ibb.co\/8PyCc0g\/image.png)\n\nBerikut dibawah adalah kode nilai arah jika ditemui piksel foreground.\n\n![Feature Arah](https:\/\/i.ibb.co\/dMGcFCT\/image.png)","fa1eb308":"### 9. Percobaan\n","b4c028d6":"### 8. Melihat hasil presisi menggunakan data training dan data testing","5019db18":"# BATAK CHARACTER RECOGNITION USING BACPROPAGATION AND DFE METHOD\nKernel ini merupakan hasil analisis pengenalan karakter menggunakan metode *Direction Feature Extraction*. Ada 5 Karakter dalam surat batak yaitu karo, mandailing, pakpak, simalungun dan toba. Kelimanya memiliki kesamaan yang hampir sama. Penelitian ini adalah untuk menguji penggunaan **DFE** dan **Backpropagation** dan melihat hasil presisi masing-masing karakter dalam surat batak.\n![Daftar Karakter Batak](https:\/\/i.ibb.co\/m6ZFwG5\/List-Karakter-Batak.jpg)"}}