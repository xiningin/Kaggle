{"cell_type":{"5271c14b":"code","2f390b1d":"code","a16393f6":"code","c55fb270":"code","b9060550":"code","55451430":"code","be39c7c9":"code","5767f53f":"code","3a3a6de1":"code","9cc65ef2":"markdown","b0c8b799":"markdown","93a4fe80":"markdown","6f844442":"markdown","c1fc0890":"markdown"},"source":{"5271c14b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","2f390b1d":"df = pd.read_csv('..\/input\/medical-examination-data\/medical_examination_data.csv')\ndf","a16393f6":"#Body-Mass-Index(BMI) = weight\/(height*height)\n#In our dataset we have been given weight in Kg and Height in cm. So we will divide the Height by 100 while calculating the BMI\ndf['overweight'] = (df['weight']\/(df['height']\/100)**2).apply(lambda BMI : 1 if BMI > 25 else 0)\ndf","c55fb270":"df['gluc'].value_counts(), df['cholesterol'].value_counts()","b9060550":"df['gluc'] = df['gluc'].apply(lambda gluc_value : 0 if gluc_value == 1 else 1)\ndf['cholesterol'] = df['cholesterol'].apply(lambda cholesterol_value : 0 if cholesterol_value == 1 else 1)\ndf","55451430":"def draw_cat_plot():\n    df_cat = pd.melt(df,id_vars = ['cardio'],value_vars = ['cholesterol','gluc','smoke','alco','active','overweight'])\n    df_cat['total'] = 1\n    df_cat = df_cat.groupby(['cardio','variable','value'], as_index = False).count()\n    fig = sns.catplot(x = \"variable\", y = \"total\", data = df_cat, hue = \"value\", kind = \"bar\", col = \"cardio\").fig\n    fig.savefig('catplot.png')\n    return fig\n","be39c7c9":"df_cat = pd.melt(df,id_vars = ['cardio'],value_vars = ['cholesterol','gluc','smoke','alco','active','overweight'])\ndf_cat['total'] = 1\ndf_cat = df_cat.groupby(['cardio','variable','value'], as_index = False).count()\nfig = sns.catplot(x = \"variable\", y = \"total\", data = df_cat, hue = \"value\", kind = \"bar\", col = \"cardio\").fig","5767f53f":"def draw_heat_map():\n    df_heat = df[\n       (df['ap_lo'] <= df['ap_hi']) &\n       (df['height'] >= df['height'].quantile(0.025)) &\n       (df['height'] <= df['height'].quantile(0.975)) &\n       (df['weight'] >= df['weight'].quantile(0.025)) &\n       (df['weight'] <= df['weight'].quantile(0.975))]\n    corr = df_heat.corr(method = \"pearson\")\n    mask = np.triu(corr)\n    fig, ax = plt.subplots(figsize=(12,12))\n    sns.heatmap(corr, linewidths=1, annot = True, square = True, mask = mask, fmt = \".1f\", center=0.08, cbar_kws = {\"shrink\":0.5})\n    fig.savefig('heatmap.png')\n    return fig","3a3a6de1":"df_heat = df[\n       (df['ap_lo'] <= df['ap_hi']) &\n       (df['height'] >= df['height'].quantile(0.025)) &\n       (df['height'] <= df['height'].quantile(0.975)) &\n       (df['weight'] >= df['weight'].quantile(0.025)) &\n       (df['weight'] <= df['weight'].quantile(0.975))]\ncorr = df_heat.corr(method = \"pearson\")\nmask = np.triu(corr)\nfig, ax = plt.subplots(figsize=(12,12))\nsns.heatmap(corr, linewidths=1, annot = True, square = True, mask = mask, fmt = \".1f\", center=0.08, cbar_kws = {\"shrink\":0.5})\n   ","9cc65ef2":"<h2> Normalize data by making 0 always good and 1 always bad. If the value of 'cholesterol' or 'gluc' is 1, make the value 0. If the value is more than 1, make the value 1.<\/h2>","b0c8b799":".<h2> Draw Categorical Plot <\/h2>\n<h2> Create DataFrame for cat plot using `pd.melt` using just the values from 'cholesterol', 'gluc', 'smoke', 'alco', 'active', and 'overweight'. <\/h2>\n<h2> Group and reformat the data to split it by 'cardio'. Show the counts of each feature. You will have to rename one of the columns for the catplot to work correctly.<\/h2>\n<h2> Draw the catplot with 'sns.catplot()' <\/h2>","93a4fe80":"<h2> Adding a new column named 'overweight' <\/h2>","6f844442":"<h2> Visualizing the given dataset <\/h2>","c1fc0890":"<h2> Draw Heat Map <\/h2>\n<h2> Clean the data <\/h2>\n<h2> Calculate the correlation matrix <\/h2>\n<h2> Generate a mask for the upper triangle <\/h2>\n<h2> Set up the matplotlib figure <\/h2>\n<h2> Draw the Heatmap <\/h2>"}}