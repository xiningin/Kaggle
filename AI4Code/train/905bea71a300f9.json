{"cell_type":{"04ca763c":"code","8ef88321":"code","cdf0c92c":"code","33374f1d":"code","7629eb55":"code","90fa5687":"code","debaba82":"code","0b08023e":"code","955379b5":"code","12cfe759":"code","2bfe5aad":"code","c3aaaff2":"code","0143c86f":"code","22fc7220":"code","361e4339":"code","82bf77b5":"code","615df34d":"code","4f53da20":"code","8da8a78a":"code","d22bea0a":"code","1b4fe303":"code","f0342578":"markdown","e8d386c4":"markdown","24f7af27":"markdown"},"source":{"04ca763c":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n","8ef88321":"Tormenta=pd.DataFrame()\nTormenta['tiempo']=['06:33','06:33','06:40','06:40','06:55','06:55','07:08','07:08','07:16','07:20','07:20']\nTormenta['HP']=[0,7.5,7.5,11.3,11.3,9.2,9.2,5.6,5.6,5.6,0]\nTormenta['tiempo']=pd.to_datetime(Tormenta['tiempo'],format= '%H:%M')\n\nplt.plot(Tormenta['tiempo'],Tormenta['HP'])\nplt.scatter(Tormenta['tiempo'],Tormenta['HP'])\n\nplt.show()\n","cdf0c92c":"Tormenta","33374f1d":"tiempos = pd.DataFrame()\ntiempos['tiempo']=Tormenta['tiempo'].unique()\n\nstorm_data = pd.DataFrame()\nstorm_data = pd.DataFrame(np.zeros((len(tiempos)-1, 4)))\nstorm_data.columns=['tiempo','t_min','HP','t_acum']\n\n\nfor i in range(1,len(storm_data)+1):\n    storm_data.loc[i-1,'tiempo']=tiempos.loc[i,'tiempo']-tiempos.loc[i-1,'tiempo']\n\n    \nstorm_data['tiempo']=pd.to_datetime(storm_data['tiempo'],format= '0 days %H:%M:%S') #transforma a formato de tiempo\nstorm_data['t_min']=storm_data['tiempo'].dt.minute    \nstorm_data['HP']=Tormenta['HP'].unique()\n","7629eb55":"storm_data","90fa5687":"#Penque\u00f1a modificacion para mover datos\nfor i in range(0,len(storm_data)):\n    if i==(len(storm_data)-1):\n        storm_data.loc[i,'HP']=storm_data.loc[i,'HP']\n    else:\n        storm_data.loc[i,'HP']=storm_data.loc[i+1,'HP']\n        \n    if  i==0:\n        storm_data.loc[i,'t_acum']=storm_data.loc[i,'t_min']\n    else:\n        storm_data.loc[i,'t_acum']=storm_data.loc[i,'t_min']+storm_data.loc[i-1,'t_acum']\n","debaba82":"storm_data","0b08023e":"#aqui\nstorm_data['HP']=[21.1571094,31.8767115,25.9527208,15.7973083,15.7973083]","955379b5":"storm_data","12cfe759":"#d = pd.DataFrame         (np.zeros((N_rows, N_cols)))\nsubcuencas = pd.DataFrame(np.zeros((4, 21)))\n\nsubcuencas.columns=['sector','CN','S','Sc_%','Sl_%','Lc','Ll','A','Sc_grad','Sc_rad','TC_c','Th_grad','Th_rad','B','m1','m2','m','Llm','Sl','TC_l','TC']\n\n'''\nsector  - Sector referido\nCN      - Numero de curva\nS       - no tengo puta idea\nSc_%    - pendiente del cauce en porcentaje\nSl_%    - pendiente de ladera en porcentaje\nLc      - longitud de cauce\nLl      - longitud de ladera\nA       - Area\nSc_grad - pendiente de cauce en grados\nSc_rad  - pendiente de cauce en radianes\nTC_c    - tiempo de concentracion en cauce\nTh_grad - theta en grados\nth_rad  - theta en radianes\nB       - beta\nm       - m en grados, creo que es la pendiente\nLlm     - longitud en ladera calculada en metros\nSl      - pendiente en ladera\nTC_l    - tiempo de concentracion en ladera\nTC      - tiempo de concentracino total\nA_total - area total de la cuenca\n'''\n\n#datos basicos\nsubcuencas['sector']=['A','B','C','D']\nsubcuencas['CN']=[52,78,94,79]\nsubcuencas['Sc_%']=[23.5,12.3,7,3.5]\nsubcuencas['Sl_%']=[38,21,12,6]\nsubcuencas['Lc']=[2587,15783,8657,3854]\nsubcuencas['Ll']=[26515.5,37124,38309,13258.25]\nsubcuencas['A']=[625000000,781265000,843750000,437500000]\nA_total=subcuencas['A'].sum()\n\n#calculo de resto de columnas \n\nsubcuencas['S']=254*((100\/subcuencas['CN'])-1)\nsubcuencas['Sc_grad']=(subcuencas['Sc_%']*45)\/100\nsubcuencas['Sc_rad']=np.radians(subcuencas['Sc_grad'])\nsubcuencas['TC_c']=0.02*(np.power(subcuencas['Lc'],0.77)\/(np.power(subcuencas['Sc_rad'],0.385)))\nsubcuencas['Th_grad']=(subcuencas['Sl_%']*45)\/100\nsubcuencas['Th_rad']=np.radians(subcuencas['Th_grad'])\nsubcuencas['B']= (np.sin(subcuencas['Th_rad'])\/0.00896)\nsubcuencas['m1']=3*(np.power(np.radians(subcuencas['B']),0.8))\nsubcuencas['m2']=np.power(0.56+subcuencas['B']+subcuencas['m1'],0.5)\nsubcuencas['m']=subcuencas['m2']\/(1+subcuencas['m2'])\nsubcuencas['Llm']=np.power((subcuencas['Ll']\/22.1),subcuencas['m'])\nsubcuencas['Sl']=0.065+(65.4*np.power(np.sin(subcuencas['Th_rad']),2))+(4.65*np.sin(subcuencas['Th_rad']))\nsubcuencas['TC_l']=0.066*((np.power(subcuencas['Llm'],0.77))\/(np.power(np.radians(subcuencas['Sl']),0.385)))\nsubcuencas['TC']=subcuencas['TC_l']+subcuencas['TC_c']\n\n","2bfe5aad":"subcuencas","c3aaaff2":"\nstorm_cal=[] #aqui se van a agregar un dataframe por cada fila en en el storm_data , cada presipitacion\nfor i in range(0,len(storm_data)): #aqui se crean las tablas con datos de la tormenta\n    \n    storm_cal.append( pd.DataFrame(0, index=range(len(subcuencas)), columns=range(4)))\n    storm_cal[i].columns=['qs','F','qi','fi']\n    \n    for j in range(0,len(storm_cal[i])): #aqui se agregan los datos de cada tabla\n        storm_cal[i]['qs']=np.power(storm_data.loc[i,'HP']-(0.2*subcuencas['S']),2)\/(storm_data.loc[i,'HP']+(0.8*subcuencas['S']))\n        storm_cal[i]['F']=storm_data.loc[i,'HP']-storm_cal[i]['qs']\n        storm_cal[i]['qi']= (storm_cal[i]['qs']\/1000)* subcuencas['A'] \n        storm_cal[i]['fi']= (storm_cal[i]['F']\/1000) * subcuencas['A']  \n       # ejemplo: storm_cal[i]['qs']=subcuencas['S'] * storm_data.loc[i,'HP']   \n'''\nindices de storm_cal\n1 - qs\n2 - F\n3 - hp=HP\/1000*area de cuenca\n4 - qi\n5 - fi\n6 - qi en %\n7 - fi en %\n'''\nfor i in range(0,len(storm_data)): #valores negativos se transforman en ceros\n    storm_cal[i][storm_cal[i]<=0]=0  \n    #print(storm_cal[i])\n    \nfor i in range(0,len(storm_data)): #valores negativos se transforman en ceros\n    storm_cal[i]['qs'][storm_cal[i]['F']==0]=0\n    print(storm_cal[i])\n","0143c86f":"\nddlt=[] #dataframe del resto de datos de la tormenta ddlt=datos de la tormenta\nfor i in range(0,len(storm_data)): \n    ddlt.append( pd.DataFrame(0, index=range(1), columns=range(3)))\n    ddlt[i].columns=['hp','qi_%','fi_%']\n    for j in range(0,len(ddlt[i])):\n        ddlt[i]['hp']=storm_data.loc[i,'HP']\/1000*A_total\n        ddlt[i]['qi_%']= storm_cal[i]['qi'].sum()\/ddlt[i]['hp']\n        ddlt[i]['fi_%']= storm_cal[i]['fi'].sum()\/ddlt[i]['hp']\n        print(ddlt[i])\n        print('-----------------------')\n","22fc7220":"VdHG=[]\n\nfor i in range(0,5):\n    VdH=[]\n    for j in range(0,4):\n        VdH.append(pd.DataFrame(float(0), index=range(3), columns=range(2)))\n        VdH[j].columns=['tc','qi']\n        \n        for k in range(0,3):\n            VdH[j]['tc'][0]=0\n            VdH[j]['tc'][1]=subcuencas.loc[j,'TC'] #np.random.randint(10, 50)\n            VdH[j]['tc'][2]=VdH[j]['tc'][1]*2\n            VdH[j]['qi'][0]=0\n            VdH[j]['qi'][1]= storm_cal[i].loc[j,'qs'] #np.random.randint(10, 50)\n            VdH[j]['qi'][2]=0\n            \n        \n    VdHG.append(VdH)\n\nfor i in range(0,5):\n    \n    for j in range(0,4):\n        print(VdHG[i][j])\n        print('______________')\n\n\nfig,ax=plt.subplots(5,1)\nfig.set_size_inches(20,20)\n        \nfor i in range(0,5):\n    \n    for j in range(0,4):\n        ax[i].scatter(VdHG[i][j]['tc'],VdHG[i][j]['qi'])\n        ax[i].plot(VdHG[i][j]['tc'],VdHG[i][j]['qi'])\n        ax[i].set_title(storm_data.loc[i,'HP'])\nplt.show()","361e4339":"# en este caso x=t, VdHG[i][j]['tc'][1] , k=VdHG[i][j]['qi'][1]\n\ndef val_abs(x,h,k): #funcion valor absoluto\n    y=[]\n    a=-k\/h\n    for i in range(0,len(x)):\n        y.append(a*abs(x[i]-h)+k)\n    return(y)\n","82bf77b5":"\nt=np.linspace(0,subcuencas['TC'].max()*2,15)\nenvolvente=[]\nt_sec=(subcuencas['TC'].max())\/15\nfor i in range(0,len(storm_data)):\n    envolvente.append(pd.DataFrame(np.zeros((len(t), 10 +len(subcuencas)))))\n    envolvente[i].columns=['t','t_desp','q_mm1','q_mm2','q_mm3','q_mm4','q_mmT','f_mm','Q_m3','F_m3','t_sec','Q','F','Qgraf']\n    envolvente[i]['t']=t\n     \n#t=np.linspace(0,subcuencas['TC'].max()*2,8)\n\nfor j in range(0,len(subcuencas)):\n    for i in range(0,len(storm_data)):\n        colu='q_mm'+str(j+1)\n        envolvente[i][colu]=val_abs(t,VdHG[i][j]['tc'][1],VdHG[i][j]['qi'][1])\n        envolvente[i][colu][envolvente[i][colu]<0]=0   \n\nfor i in range(0,len(storm_data)):\n        \n    envolvente[i]['t_sec']=t_sec*60\n    envolvente[i]['t_desp']=envolvente[i]['t']+storm_data.loc[i,'t_acum']\n    envolvente[i]['q_mmT']=envolvente[i]['q_mm1']+envolvente[i]['q_mm2']+envolvente[i]['q_mm3']+envolvente[i]['q_mm4']\n    envolvente[i]['f_mm']=envolvente[i]['q_mmT']*ddlt[i]['fi_%'][0]\n    envolvente[i]['Q_m3']=(envolvente[i]['q_mmT']*0.001)*A_total\n    envolvente[i]['F_m3']=(envolvente[i]['f_mm']*0.001)*A_total    \n    envolvente[i]['Q']=envolvente[i]['Q_m3']\/envolvente[i]['t_sec']\n    envolvente[i]['F']=envolvente[i]['F_m3']\/envolvente[i]['t_sec']\n    envolvente[i]['Qgraf']=envolvente[i]['Q']+envolvente[i]['F']\n    \n\n","615df34d":"envolvente[1]","4f53da20":"\nfig,ax=plt.subplots(7,1)\nfig.set_size_inches(20,20)\n\nfor i in range(0,len(envolvente)):\n\n    ax[i].plot(envolvente[0]['t'],envolvente[i]['Qgraf'])\n    ax[i].scatter(envolvente[0]['t'],envolvente[i]['Qgraf'])\n    \nfor i in range(0,len(envolvente)):\n\n    ax[5].plot(envolvente[0]['t_desp'],envolvente[i]['Qgraf'])\n    ax[5].scatter(envolvente[0]['t_desp'],envolvente[i]['Qgraf'])\n    \nax[5].plot(envolvente[0]['t_desp'],envolvente[i]['Qgraf'])\nplt.show()\n\n\n","8da8a78a":"\nenvolG = pd.DataFrame(np.zeros((len(t), len(storm_data)*2+1)))\nenvolG.columns=['t1','Q1','t2','Q2','t3','Q3','t4','Q4','t5','Q5','QT']\n\nenvolG['Q1']=envolvente[0]['Qgraf']\nenvolG['Q2']=envolvente[1]['Qgraf']\nenvolG['Q3']=envolvente[2]['Qgraf']\nenvolG['Q4']=envolvente[3]['Qgraf']\nenvolG['Q5']=envolvente[4]['Qgraf']\nenvolG['t1']=envolvente[0]['t_desp']\nenvolG['t2']=envolvente[1]['t_desp']\nenvolG['t3']=envolvente[2]['t_desp']\nenvolG['t4']=envolvente[3]['t_desp']\nenvolG['t5']=envolvente[4]['t_desp']\nenvolG['QT']=envolvente[0]['Qgraf']+envolvente[1]['Qgraf']+envolvente[2]['Qgraf']+envolvente[3]['Qgraf']+envolvente[4]['Qgraf']","d22bea0a":"envolG","1b4fe303":"\nfig,ax=plt.subplots(2,1)\nfig.set_size_inches(20,15)\nax[1].plot(t,envolG['QT'])\nax[1].scatter(t,envolG['QT'])\n\nax[0].plot(envolG['t1'],envolG['Q1'])\nax[0].plot(envolG['t2'],envolG['Q2'])\nax[0].plot(envolG['t3'],envolG['Q3'])\nax[0].plot(envolG['t4'],envolG['Q4'])\nax[0].plot(envolG['t5'],envolG['Q5'])\n\nax[1].grid()\nax[1].set_title('Hidrograma de respuesta')\nax[0].grid()\nplt.show()","f0342578":"Generamos un data frame con la tormenta y la graficamos","e8d386c4":"## **Aaqui cambias datos de tormenta**\n","24f7af27":"# Calculo de escurrimiento"}}