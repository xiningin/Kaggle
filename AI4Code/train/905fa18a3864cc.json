{"cell_type":{"4dce237c":"code","9d14ea26":"code","aa8789bf":"code","1487ec29":"code","98683175":"code","f190cf3f":"code","fc124646":"code","b512beb6":"code","0682a6a5":"code","669ac84d":"code","7f1e5cc1":"code","1c027e1f":"code","ab5a3e1a":"code","bc7971f8":"code","5f0ab9e2":"code","b3edc1cb":"code","09ae0836":"code","d79bc301":"code","ebdeb382":"code","c4e30a65":"code","4ce636da":"code","dfd5ff97":"code","3c142d92":"code","f058fa67":"code","8555aa50":"code","a823d080":"code","645edef2":"code","7e551d1b":"markdown","e2591c07":"markdown","b9974c65":"markdown","160974f7":"markdown"},"source":{"4dce237c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9d14ea26":"!pip install geopandas","aa8789bf":"!pip install contextily","1487ec29":"from shapely.geometry import Point\nimport pandas as pd\nimport geopandas as gpd\nimport seaborn as sns\nimport os\nimport numpy as np\nimport contextily\nimport matplotlib.pyplot as plt\nimport warnings\nfrom scipy import stats \nimport math\n\n%matplotlib inline\nwarnings.filterwarnings('ignore')","98683175":"df = pd.read_csv('..\/input\/covid-datathon\/time_series_covid_19_deaths_US.csv')\ndf.head()","f190cf3f":"df.isnull().sum()","fc124646":"# Lets first handle numerical features with nan value\nnumerical_nan = [feature for feature in df.columns if df[feature].isna().sum()>1 and df[feature].dtypes!='O']\nnumerical_nan","b512beb6":"df[numerical_nan].isna().sum()","0682a6a5":"## Replacing the numerical Missing Values\n\nfor feature in numerical_nan:\n    ## We will replace by using median since there are outliers\n    median_value=df[feature].median()\n    \n    df[feature].fillna(median_value,inplace=True)\n    \ndf[numerical_nan].isnull().sum()","669ac84d":"# categorical features with missing values\ncategorical_nan = [feature for feature in df.columns if df[feature].isna().sum()>0 and df[feature].dtypes=='O']\nprint(categorical_nan)","7f1e5cc1":"# replacing missing values in categorical features\nfor feature in categorical_nan:\n    df[feature] = df[feature].fillna('None')","1c027e1f":"df[categorical_nan].isna().sum()","ab5a3e1a":"geometry = [Point(xy) for xy in zip(df['Long_'], df['Lat'])]","bc7971f8":"covid_us = gpd.GeoDataFrame(df, crs='EPSG:4326', geometry=geometry)","5f0ab9e2":"covid_us.head(3)","b3edc1cb":"covid_us = covid_us.to_crs(crs='EPSG:3857')","09ae0836":"covid_us_ny = covid_us.loc[(covid_us['Province_State']=='New York')]\ncovid_us_ny.head(3)","d79bc301":"ax = covid_us.plot(figsize=(15,10), markersize=1, color='red')\ncontextily.add_basemap(ax)\nax.set_axis_off()\n\nplt.title('Covid Deaths US - 2020')\nplt.show()","ebdeb382":"ax = covid_us_ny.plot(figsize=(15,10), markersize=1, color='red')\ncontextily.add_basemap(ax)\nax.set_axis_off()\n\nplt.title('Covid Deaths New York - 2020')\nplt.show()","c4e30a65":"covid_us_ma = covid_us.loc[(covid_us['Province_State']=='Massachusetts')]\ncovid_us_ma.head(2)","4ce636da":"ax = covid_us_ma.plot(figsize=(15,10), markersize=1, color='red')\ncontextily.add_basemap(ax)\nax.set_axis_off()\n\nplt.title('Covid Deaths Massachusetts - 2020')\nplt.show()","dfd5ff97":"covid_us_ca = covid_us.loc[(covid_us['Province_State']=='California')]\ncovid_us_ca.head(2)","3c142d92":"ax = covid_us_ca.plot(figsize=(15,10), markersize=1, color='purple')\ncontextily.add_basemap(ax)\nax.set_axis_off()\nplt.title('Covid Deaths California - 2020')\nplt.show()","f058fa67":"ax1 = covid_us_ca.plot(figsize=(12, 7), column='4\/13\/20', markersize=1, legend=True)\nax2 = covid_us_ca.plot(figsize=(12, 7), column='4\/21\/20', markersize=1, legend=True)\ncontextily.add_basemap(ax1)\ncontextily.add_basemap(ax2)\nax1.set_axis_off()\nax2.set_axis_off()\n\nplt.title('Covid Deaths California April 2020')\nplt.show()","8555aa50":"#remove zero values\nmask1 = covid_us_ca['Long_'] != 0\nmask2 = covid_us_ca['Lat'] != 0\n\nx = covid_us_ca[mask1&mask2]['Long_']\ny = covid_us_ca[mask1&mask2]['Lat']\nz = covid_us_ca[mask1&mask2]['FIPS']#original was frp ( fire radiative power) \n\n#use the scatter function\nplt.figure(figsize=(10,10))\nplt.title('Covid Deaths in California')\nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\nax = plt.scatter(x, y, s=z\/10, alpha=1)\n\nplt.show;","a823d080":"ax = covid_us.plot(figsize=(15, 10), column='Province_State', markersize=1, legend=True)\ncontextily.add_basemap(ax)\nax.set_axis_off()\n\nplt.title('Covid Deaths US')\nplt.show()","645edef2":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Thank you Rafael Herrero, @rafaelherrero for the code.' )","7e551d1b":"#Transforming the dataset into Coordinate Reference System (CRS) of the GeoDataFrame","e2591c07":"#Creating a CRS point through the \"latitude\" and \"longitude\" columns\n\nFor reference, a few very common projections and their EPSG codes:\n\nWGS84 Latitude\/Longitude: \"EPSG:4326\"\n\nUTM Zones (North): \"EPSG:32633\"\n\nUTM Zones (South): \"EPSG:32733\"\n\n","b9974c65":"![](https:\/\/opengraph.githubassets.com\/321391cde181b01bfc3eb36c897991386dd92c18c611c1fe588501ed2ef6f214\/geopandas\/contextily)https:\/\/github.com\/geopandas\/contextily","160974f7":"#Code by Rafael Herrero  https:\/\/www.kaggle.com\/rafaelherrero\/2020-brazil-s-wildfire-analysis\/notebook"}}