{"cell_type":{"6851dcbd":"code","ca372236":"code","3ee049f5":"code","58ea8939":"code","2451e37a":"code","c1cf503f":"code","0d2a4817":"code","55a6223e":"code","79673826":"markdown","fd83bef5":"markdown","8be6dc72":"markdown","49058d25":"markdown"},"source":{"6851dcbd":"import numpy as np \nimport pandas as pd \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nimport random","ca372236":"dfs = list()\nfor N in ['060288', '060389', '063384', '064127', '084855', '084901', '084918', '085051', '085405', '085632', '085758']:\n    dfs.append(pd.read_csv(f\"..\/input\/m5-forecasting-ensemble-data\/submission_{N}.csv\"))","3ee049f5":"dfs[0].head()","58ea8939":"# sort each submission by id\nfor i in range(len(dfs)):\n    dfs[i].sort_values('id',inplace=True)\nids = dfs[0]['id']","2451e37a":"# flatten the submissions for easier combination\nfor i in range(len(dfs)):\n    dfs[i] = np.concatenate(dfs[i].drop('id',axis=1).values.reshape([30490*28*2,1]))","c1cf503f":"# probabilities for the ensemble should be derived from the LB scores but we don't have these in this case\nLBs = np.asarray([1 for i in range(len(dfs))])\nprobs = LBs \/ sum(LBs)\nprobs = np.cumsum(probs)","0d2a4817":"# select a submission at random for each prediction based on the probs\nrs = [random.random() for i in range(30490*28*2)]\ndef f(rs): \n    return np.argmax(rs<probs)\nrcols = np.vectorize(f)(rs)\n\ny_pred = np.select([rcols==0, rcols==1, rcols==2, rcols==3, rcols==4, rcols==5, rcols==6, rcols==7, rcols==8, rcols==9, rcols==10], dfs)\ny_pred[np.isnan(y_pred)] = 0","55a6223e":"test = pd.DataFrame.from_dict({'id': np.repeat(ids,28), \n                               'date': np.tile(np.arange(np.datetime64(\"2016-04-25\"),np.datetime64(\"2016-05-23\")),30490*2),\n                               'demand': y_pred})\n\npredictions = test.pivot(index = 'id', columns = 'date', values = 'demand').reset_index()\npredictions.columns = ['id'] + ['F' + str(i + 1) for i in range(28)]\n\npredictions.to_csv('submission.csv', index = False)","79673826":"# Overview\n\n- Based on [Ensemble Starter](https:\/\/www.kaggle.com\/khoongweihao\/ensemble-starter)\n- Implements a stochastic ensemble\n- Starter kernel for ensembling submission files\n- As reinforced by @arashnic, ensembling should come in later into the competition, if you have several good models to test diversity on performance!\n- Data for ensemble can be found at: https:\/\/www.kaggle.com\/khoongweihao\/m5-forecasting-ensemble-data\n- The submissions used here for ensembling are from the following kernels:\n    - https:\/\/www.kaggle.com\/ragnar123\/very-fst-model\n    - https:\/\/www.kaggle.com\/zmnako\/lgbm-update-0-85632\n    - https:\/\/www.kaggle.com\/siavrez\/simple-eda-simpleexpsmoothing\n    - https:\/\/www.kaggle.com\/tnmasui\/m5-forecasting-lstm-w-custom-data-generator\n    \nHappy Kaggling! :)","fd83bef5":"# The Ensemble","8be6dc72":"# Data Import","49058d25":"# Make Submission"}}