{"cell_type":{"b92d6a9d":"code","2a87558c":"code","4601b028":"code","d8d1bd69":"code","fa297df7":"code","36afbba9":"code","95173fea":"code","b4972beb":"code","bdf879ec":"code","e810e794":"code","e14716d4":"code","15715ec6":"code","7bf523f7":"code","f6c195a9":"code","054d6ec9":"code","7b5c94e0":"code","d4883486":"markdown"},"source":{"b92d6a9d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2a87558c":"!pip install chart_studio\n!pip install plotly-geo","4601b028":"# Import Libraries\nimport numpy as np \nimport pandas as pd \n#Import plotly libraries\nimport chart_studio.plotly as py\nimport plotly.tools as tls\nimport plotly.graph_objs as go\nimport plotly\nimport plotly.figure_factory as ff\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nplotly.offline.init_notebook_mode(connected=True)","d8d1bd69":"majordir='\/kaggle\/input\/covid19-us-county-trend\/'\ndatadir=majordir+'csse_covid_19_daily_reports\/'\ndate_today=27","fa297df7":"covid_data_world_daily_0322=pd.read_csv(datadir+'03-22-2020.csv')\ncovid_data_world_daily_0322.rename(columns={'Confirmed':'Confirmed_0322'},inplace=True)\ncovid_data_world_daily_0322.head()\ncovid_data_us_daily_0322=covid_data_world_daily_0322[covid_data_world_daily_0322['Country_Region']=='US'].copy()\ncovid_data_us_daily_0322.shape","36afbba9":"for i in range(23,date_today):\n    dataset=datadir+'03-'+str(i)+'-2020.csv'\n    col='Confirmed_03'+str(i)\n    covid_data_world_daily=pd.read_csv(dataset)\n    covid_data_world_daily.rename(columns={'Confirmed':col},inplace=True)\n    covid_data_us_daily=covid_data_world_daily[covid_data_world_daily['Country_Region']=='US'].copy()\n\n    if i==23:        \n        covid_data_us_dailytrend=covid_data_us_daily_0322[['FIPS','Confirmed_0322']].merge(covid_data_us_daily[['FIPS',col]],on='FIPS').dropna()\n    else:\n        print(i)\n        covid_data_us_dailytrend=covid_data_us_dailytrend.merge(covid_data_us_daily[['FIPS',col]],on='FIPS').dropna()\ncovid_data_us_dailytrend.shape","95173fea":"covid_data_us_dailytrend_nonan=covid_data_us_dailytrend[covid_data_us_dailytrend['FIPS'].notna()].copy()\ncovid_data_us_dailytrend_nonan.FIPS=covid_data_us_dailytrend_nonan.FIPS.astype(str).str.split('.',expand=True)[0]","b4972beb":"census_df_fips = pd.read_excel(majordir+'PopulationEstimates_us_county_level_2018.xlsx',skiprows=1)\ncensus_df_fips.head()","bdf879ec":"fips = covid_data_us_dailytrend_nonan.FIPS.tolist()\nvalues =covid_data_us_dailytrend_nonan.Confirmed_0322.tolist()\n\nfig = ff.create_choropleth(fips=fips, values=values)\nfig.layout.template = None\nfig.show()","e810e794":"col='Confirmed_03'+str(date_today-1)\nfips = covid_data_us_dailytrend_nonan.FIPS.tolist()\nvalues =covid_data_us_dailytrend_nonan[col].tolist()\n\nfig = ff.create_choropleth(fips=fips, values=values)\nfig.layout.template = None\nfig.show()","e14716d4":"census_df_fips_covid=census_df_fips.merge(covid_data_us_dailytrend,on='FIPS') \ncensus_df_fips_covid.shape","15715ec6":"census_df_fips_covid.head()","7bf523f7":"for i in range(22,date_today):\n    col='Confirmed_03'+str(i)\n    col_10000='Confirmed_per10000_03'+str(i)\n    census_df_fips_covid[col_10000]=10000*(census_df_fips_covid[col]\/census_df_fips_covid['POP_ESTIMATE_2018'])","f6c195a9":"census_df_fips_covid.head()","054d6ec9":"fips = census_df_fips_covid.FIPS.tolist()\nvalues =census_df_fips_covid.Confirmed_per10000_0322.tolist()\n\nfig = ff.create_choropleth(fips=fips, values=values)\nfig.layout.template = None\nfig.show()","7b5c94e0":"col='Confirmed_per10000_03'+str(date_today-1)\nfips = census_df_fips_covid.FIPS.tolist()\nvalues =census_df_fips_covid[col].tolist()\n\nfig = ff.create_choropleth(fips=fips, values=values)\nfig.layout.template = None\nfig.show()","d4883486":"## Infection relative to the size of the population\n### Infection in each county normalized to its population count and presented as per 10000 people unit"}}