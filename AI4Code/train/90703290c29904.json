{"cell_type":{"6b3141dc":"code","d64f9c81":"code","e3f7a797":"code","ff014e55":"code","86d19d64":"code","0196d9a2":"code","53e21cc2":"code","1f7bb7b1":"code","7f3d61ba":"code","6a4a51b9":"code","60bd0ec2":"code","cb11d9f2":"code","333f40b8":"code","2c9ea493":"code","cd7fa7bd":"code","f670aeb9":"code","c0ecf4bf":"code","3b9cbf6d":"code","3983e184":"code","59e2cb22":"code","79ecabc5":"code","b999a190":"markdown","801f14f2":"markdown","2f879158":"markdown","832633b6":"markdown","cadfe67e":"markdown","85b8561c":"markdown","3d2a9706":"markdown","1e1ff43b":"markdown","17e51ff6":"markdown","93af3d5d":"markdown","52c4125c":"markdown","07db4976":"markdown","f4f03e20":"markdown","847c90ad":"markdown","9308bdc9":"markdown","44bc3b8b":"markdown","0b68631e":"markdown","88afb1e4":"markdown","600a3e6e":"markdown","fdfea241":"markdown","8c740193":"markdown"},"source":{"6b3141dc":"import os\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport numpy as np\nimport plotly.express as px\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d64f9c81":"data = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndata.head()","e3f7a797":"# Checking the data types\ndata.info()","ff014e55":"# Distribution of the Gender\ngender_counts = data['gender'].value_counts()\nfig = go.Figure(data=[go.Pie(labels=gender_counts.index, values=gender_counts, opacity=0.9)])\nfig.update_traces(textinfo='percent+label', marker=dict(line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='Distribution of the Gender', title_x=0.5, title_font=dict(size=20))\nfig.show()","86d19d64":"# Distribution of the Race\/Ethnicity\nrace_counts = data['race\/ethnicity'].value_counts()\nfig = go.Figure(data=[go.Pie(labels=race_counts.index, values=race_counts, opacity=0.9)])\nfig.update_traces(textinfo='percent+label', marker=dict(line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='Distribution of the Race\/Ethnicity', title_x=0.5, title_font=dict(size=20))\nfig.show()\n","0196d9a2":"# Distribution of the Parental Level of Education\nparental_counts = data['parental level of education'].value_counts()\nfig = go.Figure(data=[go.Pie(labels=parental_counts.index, values=parental_counts, opacity=0.9)])\nfig.update_traces(textinfo='percent+label', marker=dict(line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='Distribution of the Parental Level of Education', title_x=0.5, title_font=dict(size=20))\nfig.show()","53e21cc2":"# Distribution of the Lunch\nlunch_counts = data['lunch'].value_counts()\nfig = go.Figure(data=[go.Pie(labels=lunch_counts.index, values=lunch_counts, opacity=0.9)])\nfig.update_traces(textinfo='percent+label', marker=dict(line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='Distribution of the Lunch', title_x=0.5, title_font=dict(size=20))\nfig.show()","1f7bb7b1":"# Distribution of the Test Preparation Course\npreparation_counts = data['test preparation course'].value_counts()\nfig = go.Figure(data=[go.Pie(labels=preparation_counts.index, values=preparation_counts, opacity=0.9)])\nfig.update_traces(textinfo='percent+label', marker=dict(line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='Distribution of the Test Preparation Course', title_x=0.5, title_font=dict(size=20))\nfig.show()","7f3d61ba":"scores_gender = data[['math score', 'reading score', 'writing score']].groupby(data['gender']).mean()\nfig = go.Figure(data=[\n    go.Bar(name='Average Math Scores', x=scores_gender.index, y=scores_gender['math score'],\n           marker=dict(line=dict(width=5)), textposition='outside'),\n\n    go.Bar(name='Average Reading Scores', x=scores_gender.index, y=scores_gender['reading score'],\n           marker=dict(line=dict(width=5)), textposition='outside'),\n\n    go.Bar(name='Average Writing Scores', x=scores_gender.index, y=scores_gender['writing score'],\n           marker=dict(line=dict(width=5)), textposition='outside')\n])\n\nfig.update_layout(barmode='group', xaxis={'categoryorder': 'total descending'})\n\nfig.update_yaxes(title_text=\"Average Scores\", title_font={\"size\": 14})\nfig.update_xaxes(title_text=\"Gender\", title_font={\"size\": 14})\n\nfig.update_layout(title_text='Average Exam Scores for each Gender',\n                  title_x=0.5, title_font=dict(size=20))\nfig.update_traces(marker=dict(line=dict(color='#000000', width=2)))\nfig.show()","6a4a51b9":"scores_race = data[['math score', 'reading score', 'writing score']].groupby(data['race\/ethnicity']).mean()\nfig = go.Figure(data=[\n    go.Bar(name='Average Math Scores', x=scores_race.index, y=scores_race['math score'],\n           marker=dict(line=dict(width=5)), textposition='outside'),\n\n    go.Bar(name='Average Reading Scores', x=scores_race.index, y=scores_race['reading score'],\n           marker=dict(line=dict(width=5)), textposition='outside'),\n\n    go.Bar(name='Average Writing Scores', x=scores_race.index, y=scores_race['writing score'],\n           marker=dict(line=dict(width=5)),textposition='outside')\n])\n\nfig.update_layout(barmode='group', xaxis={'categoryorder': 'total descending'})\n\nfig.update_yaxes(title_text=\"Average Scores\", title_font={\"size\": 14})\nfig.update_xaxes(title_text=\"Race\/Ethnicity\", title_font={\"size\": 14})\n\nfig.update_layout(title_text='Average Exam Scores for each Race\/Ethnicity',\n                  title_x=0.5, title_font=dict(size=20))\nfig.update_traces(marker=dict(line=dict(color='#000000', width=2)))\nfig.show()","60bd0ec2":"scores_parental = data[['math score', 'reading score', 'writing score']].groupby(\n    data['parental level of education']).mean()\nfig = go.Figure(data=[\n    go.Bar(name='Average Math Scores', x=scores_parental.index, y=scores_parental['math score'],\n           marker=dict(line=dict(width=5)), textposition='outside'),\n\n    go.Bar(name='Average Reading Scores', x=scores_parental.index, y=scores_parental['reading score'],\n           marker=dict(line=dict(width=5)), textposition='outside'),\n\n    go.Bar(name='Average Writing Scores', x=scores_parental.index, y=scores_parental['writing score'],\n           marker=dict(line=dict(width=5)), textposition='outside')\n])\n\nfig.update_layout(barmode='group', xaxis={'categoryorder': 'total descending'})\n\nfig.update_yaxes(title_text=\"Average Scores\", title_font={\"size\": 14})\nfig.update_xaxes(title_text=\"Parental Level of Education\", title_font={\"size\": 14})\n\nfig.update_layout(title_text='Average Exam Scores for each Parental Level of Education',\n                  title_x=0.5, title_font=dict(size=20))\nfig.update_traces(marker=dict(line=dict(color='#000000', width=2)))\nfig.show()","cb11d9f2":"# Lunch vs Exam Results\nscores_lunch = data[['math score', 'reading score', 'writing score']].groupby(data['lunch']).mean()\n\nfig = go.Figure(data=[\n    go.Bar(name='Average Math Scores', x=scores_lunch.index, y=scores_lunch['math score'],\n           marker=dict(line=dict(width=5)), textposition='outside'),\n\n    go.Bar(name='Average Reading Scores', x=scores_lunch.index, y=scores_lunch['reading score'],\n           marker=dict(line=dict(width=5)), textposition='outside'),\n\n    go.Bar(name='Average Writing Scores', x=scores_lunch.index, y=scores_lunch['writing score'],\n           marker=dict(line=dict(width=5)), textposition='outside')\n])\n\nfig.update_layout(barmode='group', xaxis={'categoryorder': 'total descending'})\n\nfig.update_yaxes(title_text=\"Average Scores\", title_font={\"size\": 14})\nfig.update_xaxes(title_text=\"Lunch\", title_font={\"size\": 14})\n\nfig.update_layout(title_text='Average Exam Scores for Lunch',\n                  title_x=0.5, title_font=dict(size=20))\nfig.update_traces(marker=dict(line=dict(color='#000000', width=2)))\nfig.show()","333f40b8":"# Test Preparation Course vs Exam Results\nscores_preparation = data[['math score', 'reading score', 'writing score']].groupby(\n    data['test preparation course']).mean()\n\nfig = go.Figure(data=[\n    go.Bar(name='Average Math Scores', x=scores_preparation.index, y=scores_preparation['math score'],\n           marker=dict(line=dict(width=5)), textposition='outside'),\n\n    go.Bar(name='Average Reading Scores', x=scores_preparation.index, y=scores_preparation['reading score'],\n           marker=dict(line=dict(width=5)), textposition='outside'),\n\n    go.Bar(name='Average Writing Scores', x=scores_preparation.index, y=scores_preparation['writing score'],\n           marker=dict(line=dict(width=5)), textposition='outside')\n])\n\nfig.update_layout(barmode='group', xaxis={'categoryorder': 'total descending'})\n\nfig.update_yaxes(title_text=\"Average Scores\", title_font={\"size\": 14})\nfig.update_xaxes(title_text=\"Test Preparation Course\", title_font={\"size\": 14})\n\nfig.update_layout(title_text='Average Exam Scores for each Test Preparation Options',\n                  title_x=0.5, title_font=dict(size=20))\nfig.update_traces(marker=dict(line=dict(color='#000000', width=2)))\nfig.show()","2c9ea493":"fig = px.scatter(data, x=\"math score\", y=\"reading score\", trendline=\"ols\",\n                 labels={\"math score\": \"Math Score\",\n                         \"reading score\": \"Reading Score\"})\nfig.update_layout(title_text='Relationship between Math and Reading Scores',\n                  title_x=0.5, title_font=dict(size=20))\nfig.data[1].line.color = 'red'\nfig.show()","cd7fa7bd":"fig = px.scatter(data, x=\"math score\", y=\"writing score\", trendline=\"ols\",\n                 labels={\"math score\": \"Math Score\",\n                         \"writing score\": \"Writing Score\"})\nfig.update_layout(title_text='Relationship between Math and Writing Scores',\n                  title_x=0.5, title_font=dict(size=20))\nfig.data[1].line.color = 'red'\nfig.show()","f670aeb9":"fig = px.scatter(data, x=\"reading score\", y=\"writing score\", trendline=\"ols\",\n                 labels={\"reading score\": \"Reading Score\",\n                         \"writing score\": \"Writing Score\"})\nfig.update_layout(title_text='Relationship between Reading and Writing Scores',\n                  title_x=0.5, title_font=dict(size=20))\nfig.data[1].line.color = 'red'\nfig.show()","c0ecf4bf":"fig = px.histogram(data, x=\"math score\", color='gender', opacity=0.7)\nfig.update_layout(barmode='overlay', xaxis={'categoryorder': 'total descending'})\nfig.update_traces(marker=dict(line=dict(color='#000000', width=1)))\nfig.update_layout(title_text='Distribution of Math Scores by Gender',\n                  title_x=0.5, title_font=dict(size=20)) \nfig.show()","3b9cbf6d":"fig = px.histogram(data, x=\"reading score\", color='gender', opacity=0.7)\nfig.update_layout(barmode='overlay', xaxis={'categoryorder': 'total descending'})\nfig.update_traces(marker=dict(line=dict(color='#000000', width=1)))\nfig.update_layout(title_text='Distribution of Reading Scores by Gender',\n                  title_x=0.5, title_font=dict(size=20))\nfig.show()","3983e184":"fig = px.histogram(data, x=\"writing score\", color='gender', opacity=0.7)\nfig.update_layout(barmode='overlay', xaxis={'categoryorder': 'total descending'})\nfig.update_traces(marker=dict(line=dict(color='#000000', width=1)))\nfig.update_layout(title_text='Distribution of Writing Scores by Gender',\n                  title_x=0.5, title_font=dict(size=20))\nfig.show()","59e2cb22":"fig = go.Figure(data=[go.Scatter3d(\n    x=data['math score'],\n    y=data['reading score'],\n    z=data['writing score'],\n    mode='markers+text',\n    marker=dict(\n        size=5,\n        opacity=0.8\n    ),\n    hovertemplate=\n    \"Math Score: %{x:}<br>\" +\n    \"Reading Score: %{y:}<br>\" +\n    \"Writing Score: %{z:}\"\n)])\nfig.update_layout(scene=dict(\n    xaxis_title='Math Score',\n    yaxis_title='Reading Score',\n    zaxis_title='Writing Score')\n)\n\nfig.show()","79ecabc5":"fig = px.box(data, y=['math score', 'reading score', 'writing score'])\nfig.update_traces(marker=dict(line=dict(color='#000000', width=1)))\nfig.update_layout(title_text='Outliers of the Scores',\n                  title_x=0.5, title_font=dict(size=20))\nfig.show()","b999a190":"# Relationship between Reading and Writing Scores\n","801f14f2":"# Average Exam Scores vs. Parental Level of Education\n","2f879158":"# Distribution of Math Scores by Gender\n","832633b6":"**According to visualization above, students that had standard lunch is more successful than the students that had free\/reduced lunch. Due to this EDA, we would say that lunch affects the exam results.**","cadfe67e":"# Count Distributions","85b8561c":"# Outliers of the Scores\n","3d2a9706":"# Distribution of Reading Scores by Gender\n","1e1ff43b":"**Due to the graph above, students with a master's degree parental level of education are more successful than others. Bachelor's degree and associate's degree follow. Students with high school level parental education are the least successful on the exams.**","17e51ff6":"# <center> Student Performance in Exams EDA","93af3d5d":"# Relationship between Math and Reading Scores\n","52c4125c":"# Distribution of the All Scores\n","07db4976":"# Relationship between Math and Writing Scores\n","f4f03e20":"# Average Exam Scores vs. Genders\n","847c90ad":"**According to data info, all the data types are looking correct.**","9308bdc9":"**According to scatter plots above, each score has a strong relationship with the other. The strongest relation is between reading and writing scores. It has the highest R2 scores among them.**","44bc3b8b":"# Distribution of Writing Scores by Gender\n","0b68631e":"**According to the graph above, male students are more successful at math. In contrast, female students are more successful at reading and writing.**","88afb1e4":"**According to the Average Exam Scores vs. Race\/Ethnicity graph above, group E students are more successful at math on average. In addition, group E students are good at reading and writing as well. Group A students have the least average scores in every exam.** ","600a3e6e":"**Students that completed the test preparation course are more successful for each exam.**","fdfea241":"# Average Exam Scores vs. Race\/Ethnicity\n","8c740193":"# Average Exam Scores vs. Lunch\n"}}