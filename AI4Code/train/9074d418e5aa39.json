{"cell_type":{"b684cd4e":"code","ca3e65de":"code","1b8d1358":"code","09975938":"code","606b6911":"code","4615c4d3":"code","651dc764":"code","3c85b3f6":"code","670e214d":"code","a5a48b0f":"code","8dba3f95":"code","f3f45eaa":"code","9107bcb5":"code","e24f8ad1":"code","7f3c7bf9":"code","3a0112bb":"code","cc318eea":"code","7bfaca2f":"code","e1f6d11d":"code","75ca7c37":"code","df33690f":"code","554998b3":"code","29c9a34d":"code","2ce57e5b":"code","c6bbc715":"code","b0f85512":"code","691bc7d2":"code","10afe8ee":"code","a492f0bc":"code","ee81ba55":"code","feebd7ec":"code","1ccc21e5":"code","f7f7b18d":"code","8368027f":"code","04ac4fff":"code","b95c3174":"code","ab4c7f76":"code","419d8f91":"code","dec59a9f":"code","831c4516":"code","467ba1cd":"code","1bb8575d":"code","28065d1a":"code","489321ec":"code","42f9f5dd":"code","0e677ead":"code","efa93316":"code","543cb03c":"code","5ba5c213":"code","2b276adb":"code","3905829a":"code","dbddf410":"code","78a11ae4":"code","5da574ad":"code","1a106561":"code","97437893":"code","d984a62a":"code","f326b383":"markdown"},"source":{"b684cd4e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, accuracy_score\nfrom sklearn.svm import SVC\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom collections import Counter\nimport plotly.express as px \n","ca3e65de":"data = pd.read_csv(\"..\/input\/customer-analytics\/Train.csv\")","1b8d1358":"data.head()","09975938":"Counter(data['Reached.on.Time_Y.N'])","606b6911":"data['Reached.on.Time_Y.N'] = data['Reached.on.Time_Y.N'].map({0:'Yes',1:'No'})","4615c4d3":"data.head()","651dc764":"Counter(data['Reached.on.Time_Y.N'])","3c85b3f6":"data.info()","670e214d":"data.isnull().sum()","a5a48b0f":"data.groupby(['Reached.on.Time_Y.N'])['Reached.on.Time_Y.N'].count().plot.bar()","8dba3f95":"data.head()","f3f45eaa":"sns.catplot(x='Mode_of_Shipment',y='Cost_of_the_Product',hue='Gender',col='Reached.on.Time_Y.N',data=data,kind='bar')","9107bcb5":"sns.catplot(x='Mode_of_Shipment',hue='Gender',col='Reached.on.Time_Y.N',data=data,kind='count')","e24f8ad1":"data.head()","7f3c7bf9":"sns.catplot(x='Warehouse_block',hue='Gender',col='Reached.on.Time_Y.N',data=data,kind='count')","3a0112bb":"sns.catplot(x='Mode_of_Shipment',col='Reached.on.Time_Y.N',data=data,kind='count')","cc318eea":"reached = data['Reached.on.Time_Y.N'].value_counts().reset_index()\nreached.columns = ['Time','Values']\npx.pie(reached,names='Time',values='Values',color_discrete_sequence=px.colors.sequential.Darkmint_r)","7bfaca2f":"sns.distplot(data['Cost_of_the_Product'],kde=True)","e1f6d11d":"xs=list(data['Mode_of_Shipment'].unique())\nprint(xs)","75ca7c37":"data.groupby(['Mode_of_Shipment'])['Weight_in_gms'].count().plot.bar()","df33690f":"data.head()","554998b3":"plt.figure(figsize=(40,20))\nsns.pairplot(data=data,hue='Reached.on.Time_Y.N')\nplt.show()","29c9a34d":"plt.figure(figsize=(20,15))\nsns.heatmap(data.corr(),annot=True,vmin=0,vmax=1,linewidths=3,linecolor='blue')","2ce57e5b":"feat = set()\ncorr_data = data.corr()\nfor i in range(len(corr_data.columns)):\n    for j in range(i):\n        if corr_data.iloc[i,j] >= 0.05:\n            colname = corr_data.columns[i]\n            feat.add(colname)\nprint(feat)","c6bbc715":"data.head()","b0f85512":"data['Reached.on.Time_Y.N'] = data['Reached.on.Time_Y.N'].map({'Yes':0,'No':1})","691bc7d2":"X = data.iloc[:,:-1]\ny = data.iloc[:,-1]","10afe8ee":"X = pd.get_dummies(X,drop_first=True)","a492f0bc":"X.head()","ee81ba55":"LE = StandardScaler()\n","feebd7ec":"X = pd.DataFrame(LE.fit_transform(X),columns=X.columns)","1ccc21e5":"X.head()","f7f7b18d":"from sklearn.feature_selection import mutual_info_classif\nmutual_info = mutual_info_classif(X,y)\nmutal_data = pd.Series(mutual_info, index = X.columns)\nmutal_data.sort_values(ascending=True)","8368027f":"from sklearn.ensemble import ExtraTreesClassifier\nimport matplotlib.pyplot as plt\nmodel = ExtraTreesClassifier()\nmodel.fit(X,y)\nranked_feat = pd.Series(model.feature_importances_,index=X.columns)\nranked_feat.nlargest(10).plot(kind='barh')\nplt.show()","04ac4fff":"X.drop(columns=['ID'],axis=1,inplace=True)","b95c3174":"XX_train,X_test,yy_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)\nX_train,X_cv,y_train,y_cv = train_test_split(XX_train,yy_train,test_size=0.2,random_state=42)","ab4c7f76":"from sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.ensemble import RandomForestClassifier","419d8f91":"RF = RandomForestClassifier()\nRF_param = {'n_estimators':range(1,500,10), 'max_depth':range(1,50)}\nRF_search = RandomizedSearchCV(RF,RF_param,scoring='neg_mean_squared_error',cv=6,n_jobs=-1)\nRF_search.fit(X_cv,y_cv)","dec59a9f":"print(RF_search.best_params_)\nprint(RF_search.best_score_)\nprint(RF_search.best_estimator_)\n","831c4516":"RF_result = RandomForestClassifier(n_estimators=11,max_depth=15)\nRF_result.fit(X_train,y_train)\npred1 = RF_result.predict(X_test)","467ba1cd":"Acc1 = accuracy_score(y_test,pred1)","1bb8575d":"print(Acc1)","28065d1a":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import GridSearchCV\nKN = KNeighborsClassifier()\nparam_grid = {'n_neighbors':range(1,20)}\ngrid = GridSearchCV(KN,param_grid,cv=10,scoring='neg_mean_squared_error')","489321ec":"grid.fit(X_cv,y_cv)","42f9f5dd":"print(grid.best_params_)\nprint(grid.best_score_)\nprint(grid.best_estimator_)","0e677ead":"KNN = KNeighborsClassifier(n_neighbors=13)\nKNN.fit(X_train,y_train)","efa93316":"pred2 = KNN.predict(X_test)\nAcc2 = accuracy_score(y_test,pred2)\nprint(accuracy_score(y_test,pred2))","543cb03c":"param_deci = {'criterion':['gini','entropy'],\n             'max_depth':range(1,10),\n             }","5ba5c213":"from sklearn.tree import DecisionTreeClassifier\nDT = DecisionTreeClassifier()\ngrid_s = GridSearchCV(DT,param_deci,cv=10,n_jobs=-1)\ngrid_s.fit(X_cv,y_cv)","2b276adb":"print(grid_s.best_params_)\nprint(grid_s.best_score_)\nprint(grid_s.best_estimator_)","3905829a":"DTT = DecisionTreeClassifier(max_depth=3,criterion='gini')","dbddf410":"DTT.fit(X_train,y_train)","78a11ae4":"pred3=DTT.predict(X_test)","5da574ad":"Acc3=accuracy_score(y_test,pred3)\nprint(accuracy_score(y_test,pred3))","1a106561":"Result = pd.DataFrame({'Algo':['RandomForest','KNN','DecisionTree'],\n                      'Accuracy':[Acc1,Acc2,Acc3]})","97437893":"Result","d984a62a":"sns.catplot(x='Algo',y='Accuracy',data=Result,kind='bar')","f326b383":"#### Checking for Balanced Data set"}}