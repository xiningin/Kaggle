{"cell_type":{"3c132499":"code","2cb09492":"code","3ea9054f":"code","956b87fa":"code","f5131063":"code","f3193d00":"code","7d6a4e8f":"code","c2247049":"code","87a02eaa":"code","f63333e6":"code","88ee21f6":"code","ee2700b2":"code","8b91eb0c":"code","50532fc2":"code","02e00e68":"code","b86f90a2":"code","c14cc306":"code","d3ea48e1":"code","b0cba7aa":"code","c07a8c18":"code","33964c6d":"code","0bf17959":"code","efff19c8":"code","64d96fe1":"code","099ae106":"markdown"},"source":{"3c132499":"import tensorflow as tf\nfrom tensorflow.keras import datasets, layers, models, Sequential, optimizers\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np","2cb09492":"(x_train, y_train), (x_test, y_test) = datasets.cifar10.load_data()\nx_train.shape","3ea9054f":"x_test.shape","956b87fa":"#reshaping\nx_train= x_train.reshape(len(x_train), 32,32,3)\nx_test= x_test.reshape(len(x_test), 32,32,3)\ny_train= y_train.reshape(-1,)\ny_test= y_test.reshape(-1,)","f5131063":"#scaling\nx_train= x_train\/255.0\nx_test= x_test\/255.0","f3193d00":"classes= ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship','truck']","7d6a4e8f":"def show_img(x, y, index):\n    plt.imshow(x[index])\n    plt.xlabel(classes[y[index]])","c2247049":"show_img(x_test, y_test, 58)","87a02eaa":"model= Sequential([\n        \n        layers.Conv2D(filters= 28, kernel_size=(3,3), activation= 'relu', input_shape=(x_train.shape[1:]), name='conv1'),\n        layers.MaxPool2D(pool_size=(2,2), padding='valid', name='max1'), \n    \n        layers.Conv2D(filters= 48, kernel_size=(3,3), activation= 'relu', input_shape=(x_train.shape[1:]), name='conv2'),\n        layers.MaxPool2D(pool_size=(2,2), padding='same', name='max2'),\n        layers.Dropout(0.5),   # avoiding overfitting\n        \n        layers.Flatten(),\n        layers.Dense(units=2000, activation='relu', name='dense1'),\n        \n        layers.Dense(units=10, activation='softmax', name='dense2')\n])\n        \n    ","f63333e6":"model.summary()","88ee21f6":"model.compile(optimizer= optimizers.Adam(1e-3),\n             loss='sparse_categorical_crossentropy',\n                    metrics=['accuracy'])","ee2700b2":"# simple early stopping\nfrom tensorflow.keras.callbacks import EarlyStopping\n\nes = EarlyStopping(monitor='val_loss', mode='auto', verbose=1)\n                   ","8b91eb0c":"history3= model.fit(x_train, y_train, \n                   epochs=12, \n                   batch_size=32, \n                   validation_split=0.1,\n                   verbose = 1,\n                   shuffle=True,callbacks=[es])","50532fc2":"model.evaluate(x_test, y_test)","02e00e68":"y_test[:5]","b86f90a2":"y_pred= model.predict(x_test)","c14cc306":"y_pred_classes = [np.argmax(x) for x in y_pred]\ny_pred_classes[:5]","d3ea48e1":"from sklearn.metrics import classification_report\nprint('Classification report: \\n', classification_report(y_test, y_pred_classes))","b0cba7aa":"hist_frame = pd.DataFrame(history3.history)","c07a8c18":"hist_frame ","33964c6d":"plt.plot(hist_frame['loss'], label='train2')\nplt.plot(hist_frame ['val_loss'], label='test2')\nplt.xlabel('No. of epochs')\nplt.ylabel('loss')\nplt.legend()\nplt.show()","0bf17959":"show_img(x_test, y_test, 67)","efff19c8":"classes[y_pred_classes[67]]","64d96fe1":"# saving the model\n#model.save('cifar_model.h5')","099ae106":"The training stopped early because the TEST_LOSS(validation loss) was becoming a plateau i.e. wasn't changing much."}}