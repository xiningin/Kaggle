{"cell_type":{"aa56ac79":"code","dfeff39a":"code","859e2981":"code","a6e4fd07":"code","ee2ca8f9":"code","96d2467f":"code","41bbd1a4":"code","0f3c8bba":"markdown","86f36b0b":"markdown","8b7575c2":"markdown","2565eb39":"markdown","93ec4d55":"markdown","58923041":"markdown"},"source":{"aa56ac79":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","dfeff39a":"from sklearn.model_selection import train_test_split\nimport pandas as pd\nimport numpy as np\nfrom sklearn import metrics, linear_model, model_selection","859e2981":"df = pd.read_csv(\"\/kaggle\/input\/used-cars-database\/autos.csv\", encoding = \"Latin1\")\ndf.head()","a6e4fd07":"df = df.drop('nrOfPictures',1)\ndf = df.drop('postalCode',1)\ndf = df.drop('dateCrawled',1)\ndf = df.drop('lastSeen',1)\ndf = df.drop('seller',1)\ndf = df.drop('offerType',1)\ndf = df.drop('name',1)\ndf = df.drop('abtest',1)\ndf = df[df.price < 500000]\ndf = df[df.price != 0]\ndf = df[(df.powerPS > 0) & (df.powerPS < 1000)]\ndf = df.dropna()","ee2ca8f9":"#Umwandeln der Jahre in Alter des Autos\ndf[\"age\"] = df[\"dateCreated\"].str[:4].astype(int) - df[\"yearOfRegistration\"] + (df[\"dateCreated\"].str[5:7].astype(int)-df[\"monthOfRegistration\"])\/12\ndf = df.drop([\"dateCreated\",\"yearOfRegistration\",\"monthOfRegistration\"], 1)\n\n#Umwandeln in numerische Werte\ndf = pd.get_dummies(df, columns = [\"gearbox\", \"vehicleType\"])\ndf = df.drop(\"gearbox_manuell\", 1)\ndf = df.drop(\"vehicleType_andere\",1)\ndf = df.replace(value=0, to_replace=\"nein\")\ndf = df.replace(value = 1, to_replace = \"ja\")\n\n#Umwandeln von Modell und Marke in einen Wert\ndf[\"Markenmodell\"] = df[\"brand\"] + \" \" + df[\"model\"]\ndf = df.drop([\"brand\", \"model\"],1)\ndf = pd.get_dummies(df, columns = ['Markenmodell'])\ndf = df.drop(\"Markenmodell_volvo xc_reihe\",1)\n\n#Nur Benzin und Dieselautos\ndf = df[(df.fuelType == 'benzin') | (df.fuelType == 'diesel')]\ndf = pd.get_dummies(df, columns = [\"fuelType\"])\ndf = df.drop(\"fuelType_benzin\", 1)","96d2467f":"df.head()","41bbd1a4":"x_train, x_test, y_train, y_test = model_selection.train_test_split(df.drop(\"price\",1), df[[\"price\"]], random_state = 0)\nmodel = linear_model.LinearRegression()\nmodel.fit(x_train, y_train)\ny_predicted = model.predict(x_test)\nmodel.score(x_test,y_test)","0f3c8bba":"# Lineare Regression","86f36b0b":"# Import der Daten","8b7575c2":"# Daten\u00fcbersicht nach Bereinigung","2565eb39":"# Laden der n\u00f6tigen Frameworks","93ec4d55":"# Bereinigen der Daten","58923041":"# Werte umwandeln"}}