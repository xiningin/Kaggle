{"cell_type":{"211235ad":"code","e743c92e":"code","37cb375a":"code","aa7157f2":"code","7ce55c8c":"code","f3864234":"code","b342b42c":"code","13f86028":"code","b242a40e":"code","ed66283a":"code","a6a75238":"code","213d31cb":"code","f78d5c86":"code","2643fd6e":"code","0a0ef107":"code","e2697f58":"code","287f8fab":"code","2a88fa3f":"code","25f9c27d":"code","7c6967c9":"code","0f91e0ad":"code","5500653a":"code","711ae4f4":"code","e3c547cb":"code","23791353":"code","d498a718":"code","fbf1dc99":"code","67b4c576":"code","97412d7b":"code","3081e541":"code","1c1f417b":"code","b46642ce":"code","2a62d4f1":"code","512e0914":"code","b5ede4ee":"code","0527b7be":"code","0db37e4c":"code","96209da9":"code","6bce048c":"code","116ef59e":"code","a4c4a153":"code","bd1738ca":"code","dac36cdf":"code","73800bfe":"code","7f3f234e":"code","f395fcc5":"code","420dad58":"code","199a3083":"code","6484edf6":"code","04323ddf":"code","efbc43c2":"code","e406faab":"code","18d18763":"code","dab4ced6":"code","e2693994":"code","0e8308a0":"code","0e07e280":"code","9a56d010":"code","63cd86a6":"code","70de6b22":"code","5ee6828d":"code","03cac870":"code","b3a824ac":"code","7abf8a86":"code","75c9ed90":"code","cb74ba34":"code","1c1256d2":"code","5184e848":"code","5542bad4":"code","25c6b44e":"code","cfcc66be":"code","20414efd":"markdown"},"source":{"211235ad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e743c92e":"data=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndata","37cb375a":"data.drop(columns = ['PassengerId','Ticket','Cabin','Name'],inplace = True)\ndata\n","aa7157f2":"import seaborn as sns\nsns.heatmap(data.isnull())","7ce55c8c":"data.Age = data.Age.fillna(0)\n","f3864234":"data.Embarked = data.Embarked.fillna(0)\ndata.isnull().sum()","b342b42c":"data.head()","13f86028":"data['Sex'] = data['Sex'].map({'female':1,'male':0}).astype(int)\ndata['Embarked_S'] = data['Embarked'].replace('Q',0).replace('C',0).replace('S',1)\ndata['Embarked_Q'] = data['Embarked'].replace('C',0).replace('S',0).replace('Q',1)\ndata['Embarked_C'] = data['Embarked'].replace('S',0).replace('Q',0).replace('C',1)","b242a40e":"data.head()\n","ed66283a":"import seaborn as sns\nsns.heatmap(data.isnull())","a6a75238":"data.drop(columns = ['Embarked'],inplace = True)\n","213d31cb":"data[(data.Survived ==1)].groupby('Sex').count().iloc[:1,0]\n","f78d5c86":"x = data.iloc[:,0:8]\ny = data['Survived']","2643fd6e":"x = data.drop(columns = ['Survived'])\nx\n","0a0ef107":"y","e2697f58":"x.dtypes\n","287f8fab":"nominal_col = [1]\nordinal_col = []\nnumeric_col = [0,3,4,6,7,8]\nKBin_col = [5]\nBina_col = [2]\n#null_col = []\n","2a88fa3f":"from sklearn.preprocessing import OneHotEncoder,OrdinalEncoder\nfrom sklearn.preprocessing import KBinsDiscretizer,Binarizer\n#from sklearn.impute import SimpleImputer\nfrom sklearn.compose import make_column_transformer\nfrom sklearn import set_config\ntrans  = make_column_transformer((OneHotEncoder(sparse = False),nominal_col),\n                                  (OrdinalEncoder(),ordinal_col),\n                                 (KBinsDiscretizer(),KBin_col),\n                                 (Binarizer(threshold = 55),Bina_col),\n                                 #(SimpleImputer(strategy = 'mean'),null_col),\n                                 remainder = 'passthrough')\nset_config(display = 'diagram')\ntrans","25f9c27d":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.34)  ","7c6967c9":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.pipeline import make_pipeline\nmodel = KNeighborsClassifier(9)\npipe = make_pipeline(trans,model)","0f91e0ad":"model\n","5500653a":"pipe","711ae4f4":"pipe.fit(x_train,y_train)\n","e3c547cb":"pred = pipe.predict(x_test)\n","23791353":"from sklearn.metrics import accuracy_score\naccuracy_score(pred,y_test)*100","d498a718":"from sklearn.metrics import plot_confusion_matrix\nplot_confusion_matrix(pipe,x_test,y_test)","fbf1dc99":"# from sklearn.svm import SVC\n# from sklearn.pipeline import make_pipeline\n# model_n =SVC(kernel='linear')\n# pipe_n = make_pipeline(trans,model_n)\n# pipe_n.fit(x_train,y_train)\n# pred_n = pipe_n.predict(x_test)\n# accuracy_score(pred_n,y_test)*100","67b4c576":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.pipeline import make_pipeline\nmodel_2 = LogisticRegression(solver = 'liblinear')\npipe_2 = make_pipeline(trans,model_2)","97412d7b":"model_2\n","3081e541":"pipe_2","1c1f417b":"pipe_2.fit(x_train,y_train)\n","b46642ce":"test_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest_data","2a62d4f1":"test_data = test_data.drop(columns = ['PassengerId','Name','Ticket','Cabin'])","512e0914":"test_data.isnull().sum()\n","b5ede4ee":"test_data.dtypes\n","0527b7be":"test_data['Sex'] = test_data['Sex'].map({'female':1,'male':0}).astype(int)\ntest_data['Embarked_S'] = test_data['Embarked'].replace('Q',0).replace('C',0).replace('S',1)\ntest_data['Embarked_Q'] = test_data['Embarked'].replace('C',0).replace('S',0).replace('Q',1)\ntest_data['Embarked_C'] = test_data['Embarked'].replace('S',0).replace('Q',0).replace('C',1)","0db37e4c":"test_data.Age = test_data.Age.fillna(0)\ntest_data.Fare = test_data.Fare.fillna(0)","96209da9":"test_data\n","6bce048c":"test_data.drop(columns = ['Embarked'],inplace = True)\n","116ef59e":"test_data.dtypes\n","a4c4a153":"submission_data = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')","bd1738ca":"submission_data.drop(columns = ['PassengerId'],inplace = True)\nsubmission_data","dac36cdf":"#Here model_2 is LogesticRegression\nmodel_2.fit(x_train,y_train)","73800bfe":"from sklearn.metrics import accuracy_score\nmodel_2.score(x_train,y_train)*100","7f3f234e":"predict_model_2 = model_2.predict(test_data)\n","f395fcc5":"accuracy_score(predict_model_2,submission_data)*100\n","420dad58":"print(\"Train Accuracy: {:.5f}%\".format(model_2.score(x_train,y_train)*100))\nprint('Test Accuracy: {:.5f}%'.format(accuracy_score(predict_model_2,submission_data)*100))","199a3083":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.pipeline import make_pipeline\nmodel_3 = DecisionTreeClassifier()\npipe_3 = make_pipeline(trans,model_3)","6484edf6":"model_3","04323ddf":"pipe_3","efbc43c2":"pipe_3.fit(x_train,y_train)","e406faab":"from sklearn.metrics import accuracy_score\npipe_3.score(x_train,y_train)*100","18d18763":"predict_model_3 = pipe_3.predict(test_data)","dab4ced6":"predict_model_3","e2693994":"accuracy_score(predict_model_3,submission_data)*100","0e8308a0":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression \nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import VotingClassifier\n\nl1 = KNeighborsClassifier(9)\nl2 = LogisticRegression()\nl3= DecisionTreeClassifier()\nmodel_4 = VotingClassifier(estimators=[('x1',model),('x2',model_2),('x3',model_3)],voting='soft',verbose=True)\nmodel_4\n","0e07e280":"from sklearn.pipeline import make_pipeline\npipe_4 = make_pipeline(trans,model_4)                          \npipe_4.fit(x_train,y_train)\n#print(pipe_4.predict(test_data))","9a56d010":"pipe_4.predict(test_data)","63cd86a6":"from sklearn.metrics import accuracy_score\npipe_4.score(x_train,y_train)*100","70de6b22":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression \nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import BaggingClassifier\n\nl1 = KNeighborsClassifier(9)\nl2 = LogisticRegression()\nl3= DecisionTreeClassifier()\nmodel_5 = BaggingClassifier(verbose=True)\nmodel_5","5ee6828d":"from sklearn.pipeline import make_pipeline\npipe_5 = make_pipeline(trans,model_5)                          \npipe_5.fit(x_train,y_train)","03cac870":"pipe_5.predict(test_data)","b3a824ac":"from sklearn.metrics import accuracy_score\npipe_5.score(x_train,y_train)*100","7abf8a86":"from sklearn.ensemble import VotingClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\n\nmodel1 = LogisticRegression()\nmodel2 = SVC()\nmodel3 = DecisionTreeClassifier()\n\nmodel0 = VotingClassifier(estimators=[('x1',model1),('x2',model2),('x3',model3)], voting='soft', verbose=True)\nmodel0","75c9ed90":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.tree import DecisionTreeClassifier\n\nparams = {'criterion':['gini','entropy'],\n         'max_depth':[None,2,5,10],\n         'min_samples_split':[2,10,100]}\n#g = GridSearchCV(DecisionTreeClassifier(),params, verbose=3)\n#g\nfrom sklearn.pipeline import make_pipeline\nq_pipe = make_pipeline(trans,GridSearchCV(model3 ,params, verbose=3, refit=True))\nq_pipe","cb74ba34":"\nq_pipe.fit(x_train,y_train)","1c1256d2":"q_pipe.predict(test_data)","5184e848":"q_pipe.score(x_train, y_train)*100","5542bad4":"from sklearn.ensemble import RandomForestClassifier\nRf = RandomForestClassifier()\nmodel_Rf=RandomForestClassifier()","25c6b44e":"from sklearn.pipeline import make_pipeline\npipe_Rf = make_pipeline(trans,model_Rf)                          \npipe_Rf.fit(x_train,y_train)","cfcc66be":"pipe_Rf.predict(test_data)","20414efd":"1.which gender survived more malae or female?\n\n"}}