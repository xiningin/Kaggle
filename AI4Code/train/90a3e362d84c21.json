{"cell_type":{"68e29603":"code","92e6577f":"code","9739c5e6":"code","0bc1c279":"code","0ba331de":"code","03d88667":"code","97309c87":"code","58e6e04d":"code","68339dd9":"code","efd0c2c7":"code","d7b2473c":"code","881d5cc8":"code","1d68ec8b":"code","4e6c97c5":"code","bdac802f":"code","5eb36844":"code","eccd2735":"code","9d2784d4":"code","305fd30e":"code","e9d80e79":"markdown","37a88de7":"markdown","99020199":"markdown","0c173414":"markdown","e6f55f72":"markdown"},"source":{"68e29603":"!pip install yfinance","92e6577f":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport yfinance as yf\n%matplotlib inline\nplt.style.use(\"fivethirtyeight\")","9739c5e6":"path = '\/kaggle\/input\/ntt-data-global-ai-challenge-06-2020\/'\ntime_series=pd.read_csv(path+\"Crude_oil_trend_From1986-10-16_To2020-03-31.csv\")\nsample_submission=pd.read_csv(path+\"sampleSubmission.csv\")","0bc1c279":"print('Number of data points : ', time_series.shape[0])\nprint('Number of features : ', time_series.shape[1])\ntime_series.head() # to print first 5 rows","0ba331de":"Yahoo_indeces=[\"^GSPC\",\"^DJI\",\"NQ=F\",\"^FTSE\",\"^GDAXI\",\"^ISEQ\",\"^N225\",\"^XU100\",\n               \"^FCHI\",\"IMOEX.ME\",\"^OMX\",\"^OSEAX\",\"XIU.TO\",\"^BVSP\",\"^MXX\",\"^BSESN\",\"^SSE50\",\n               \"^KS11\",\"^NZ50\",\"^AXJO\",\"^BFX\",\"^ATX\",\"^PSI20\",\"BTCUSD=X\",\"EURUSD=X\",\n              \"MSFT\",\"AAPL\",\"AMZN\",\"FB\",\n        \"BLK\",\"JNJ\",\"V\",\"PG\",\"UNH\",\n        \"JPM\",\"INTC\",\"HD\",\"MA\",\"VZ\",\n        \"PFE\",\"T\",\"MRK\",\"NVDA\",\"NFLX\",\"DIS\",\n        \"CSCO\",\"PEP\",\"XOM\",\"BAC\",\"WMT\",\"ADBE\",\"CVX\",\"BA\",\"KO\",\"CMCSA\",\"ABT\",\"WFC\",\n         \"BMY\",\"CRM\",\"AMGN\",\"TMO\",\"LLY\",\"COST\",\"MCD\",\"MDT\",\"ORCL\",\"ACN\",\"NEE\",\"NKE\",\"UNP\",\"AVGO\",\"PM\",\"IBM\",\"LMT\",\"QCOM\",\"DAL\"]\n\n\nStock_indeces=[\"S&P500\",\"DowJones\",\"NASDAQ100\",\"FTSE100\",\"DAX\",\"ISEQ\",\"NIKKEI225\",\"BIST100\",\n               \"CAC40\",\"MOEX\",\"OMXS30\",\"Oslo BorsAll-Share\",\"TSX\",\"IBOVESPA\",\"IPCMexico\",\"SHANGHAI50\",\n               \"SENSEX\",\"KOSPI\",\"NZX50\",\"ASX200\",\"BEL20\",\"ATX\",\"PSI20\",\"BTC\/USD\",\"EUR\/USD\",\n              \"Microsoft Corporation\",\"Apple Inc.\",\"Amazon\",\"Facebook\",\"BlackRock Inc.\",\"Johnson & Johnson\",\n             \"Visa Inc.\",\"Procter & Gamble\",\"UnitedHealth Group\",\"JPMorgan\",\n            \"Intel Corporation\",\"Home Depot Inc.\",\"Mastercard\",\"Verizon Communications Inc.\",\"Pfizer\",\"AT&T Inc.\",\"Merck & Co. Inc\",\n             \"NVIDIA Corporation\",\"Netflix Inc.\",\"Walt Disney Company\",\"Cisco Systems Inc.\",\n            \"PepsiCo Inc.\",\"Exxon Mobil Corporation\",\"Bank of America Corp\",\"Walmart Inc.\",\"Adobe Inc.\",\"Chevron Corporation\",\n             \"Boeing Company\",\"Coca-Cola Company\",\"Comcast Corporation Class A\",\"Abbott Laboratories\",\"Wells Fargo & Company\",\n            \"Bristol-Myers Squibb Company\",\"Salesforce\",\"Amgen Inc.\",\"Thermo Fisher Scientific Inc.\",\"Eli Lilly and Company\",\n             \"Costco Wholesale Corporation\",\"McDonald's Corporation\",\"Medtronic Plc\",\"Oracle Corporation\",\"Accenture Plc Class A\"\n             ,\"NextEra Energy Inc.\",\n            \"NIKE Inc. Class B\",\"Union Pacific Corporation\",\"Broadcom Inc.\",\"Philip Morris International\",\"International Business Machines Corporation\"\n             ,\"Lockheed Martin Corporation\",\"QUALCOMM Incorporated\",\"Delta Air\"]\n\nfor i in range(len(Stock_indeces)):\n    data = yf.download(Yahoo_indeces[i], start=\"2019-01-02\", end=\"2020-05-23\")\n    stock_hist=pd.DataFrame(data[['Close','Volume']])\n    stock_hist['Stock_indeces']=Stock_indeces[i]\n    if i == 0:\n        stock_history=stock_hist\n    else:\n        stock_history=pd.concat([stock_history,stock_hist])","03d88667":"oil=time_series[time_series['Date']>='2019-01-02']\noil=oil.reset_index(drop=True, inplace=False)\noil=pd.concat([oil,sample_submission])\noil=oil.reset_index(drop=True, inplace=False)\noil.head()","97309c87":"stock_history.head()","58e6e04d":"stock_history['Stock_indeces'].unique()","68339dd9":"stock_history['date']=stock_history.index\ncountry_indeces=stock_history.pivot_table(index='date', columns='Stock_indeces', values='Close',fill_value=0)\ncountry_indeces['Date']=country_indeces.index\ncountry_indeces=country_indeces.reset_index(drop=True, inplace=False)\ncountry_indeces['Date']=country_indeces['Date'].dt.strftime('%Y-%m-%d') #date column in downloaded data is not in wanted type.So I changed its type in here\ncountry_indeces.head()","efd0c2c7":"all_stocks=pd.merge(oil,country_indeces, on='Date')\n#all_stocks.astype(bool).sum(axis=0)\nall_stocks.astype(bool).sum(axis=0).unique()","d7b2473c":"all_stocks=all_stocks.reset_index(drop=True, inplace=False)\nall_stocks.head()","881d5cc8":"def equal_up_value(df,my_len):\n    \n    for i in range(len(df.columns)):\n        if df[df.columns[i]][2]==0:\n            df[df.columns[i]][2]=df[df.columns[i]][3]\n        if df[df.columns[i]][1]==0:\n            df[df.columns[i]][1]=df[df.columns[i]][2]\n        if df[df.columns[i]][0]==0:\n            df[df.columns[i]][0]=df[df.columns[i]][1]\n            \n    for i in range(len(df.columns)):\n        for j in range(my_len-1):\n            if df[df.columns[i]][j+1]==0:\n                df[df.columns[i]][j+1]=df[df.columns[i]][j]\n\nequal_up_value(all_stocks,len(all_stocks))    ","1d68ec8b":"all_stocks.astype(bool).sum(axis=0).unique()","4e6c97c5":"dates=all_stocks['Date']\nall_stocks=all_stocks.drop(['Date'], axis=1)","bdac802f":"def normalize(dataset):\n    dataNorm=((dataset-dataset.min())\/(dataset.max()-dataset.min()))\n    #dataNorm[\"Price\"]=dataset[\"Price\"]\n    return dataNorm\n\nnew_data=normalize(all_stocks[0:len(all_stocks)-37])\nnew_data.head()","5eb36844":"pd.concat([new_data.T[0:1],new_data.T[1:10]]).T.plot(figsize=(16,8)).legend(bbox_to_anchor=(1, 0.8))","eccd2735":"pd.concat([new_data.T[0:1],new_data.T[10:20]]).T.plot(figsize=(16,8)).legend(bbox_to_anchor=(1, 0.8))","9d2784d4":"correlations=pd.DataFrame(new_data[200:].corr()['Price'])\ncorrelations[(correlations['Price']>0.92)]","305fd30e":"pd.concat([pd.DataFrame(new_data.T.loc['Price']).T,\n           pd.DataFrame(new_data.T.loc['ATX']).T,\n          pd.DataFrame(new_data.T.loc['Chevron Corporation']).T,\n          pd.DataFrame(new_data.T.loc['Delta Air']).T,\n          pd.DataFrame(new_data.T.loc['Exxon Mobil Corporation']).T,\n          pd.DataFrame(new_data.T.loc['FTSE100']).T,\n          pd.DataFrame(new_data.T.loc['JPMorgan']).T,\n          pd.DataFrame(new_data.T.loc['Oslo BorsAll-Share']).T,\n          pd.DataFrame(new_data.T.loc['Pfizer']).T,\n          pd.DataFrame(new_data.T.loc['SHANGHAI50']).T,\n          pd.DataFrame(new_data.T.loc['Walt Disney Company']).T,\n          ]).T.plot(figsize=(16,8)).legend(bbox_to_anchor=(1, 0.8))","e9d80e79":"My aim in this notebook is to show only the changes in stock prices versus oil prices.I do not claim any relationship between these two data.\nSinan Demirhan","37a88de7":"# Download Stock Prices by Yahoo Finance","99020199":"# Preprocessing of raw data","0c173414":"# Aim of this Notebook","e6f55f72":"# Visualizations"}}