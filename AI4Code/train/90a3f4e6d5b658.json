{"cell_type":{"6b9e81fb":"code","1f3d06bf":"code","e31d4fa9":"code","237a24a9":"code","982b2541":"code","9f60e90b":"code","b99e9ec2":"code","9e45f3c5":"code","95af9487":"code","098b7022":"code","0ce543ea":"code","5a646701":"code","b985af24":"code","5944f7cc":"code","54c0b62e":"markdown","56a5d00e":"markdown","e5778193":"markdown","b28b7bd0":"markdown","ffc11c4c":"markdown","e6b59ebf":"markdown","d8abeabe":"markdown","606daec8":"markdown"},"source":{"6b9e81fb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pathlib\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nimport gc\nprint(os.listdir(\"..\/input\"))\n\nfrom sklearn.metrics import confusion_matrix\nfrom fastai import *\nfrom fastai.vision import *\n\n# Any results you write to the current directory are saved as output.","1f3d06bf":"DATA_DIR='..\/input\/shapes\/shapes'","e31d4fa9":"os.listdir(f'{DATA_DIR}')","237a24a9":"torch.cuda.is_available()","982b2541":"data = ImageDataBunch.from_folder(DATA_DIR, train=\".\", \n                                  valid_pct=0.2,\n                                  ds_tfms=get_transforms(flip_vert=True, max_warp=0),\n                                  size=224,bs=10, \n                                  num_workers=0).normalize(imagenet_stats)","9f60e90b":"print(f'Classes: \\n {data.classes}')","b99e9ec2":"data.show_batch(rows=3, figsize=(7,6))","9e45f3c5":"learn = create_cnn(data, models.vgg16_bn, metrics=accuracy, model_dir=\"\/tmp\/model\/\")","95af9487":"learn.lr_find()\nlearn.recorder.plot()","098b7022":"learn.fit_one_cycle(6,1e-2)","0ce543ea":"learn.save('stage-1')","5a646701":"interp = ClassificationInterpretation.from_learner(learn)","b985af24":"interp.plot_top_losses(9, figsize=(15,11))","5944f7cc":"interp.plot_confusion_matrix(figsize=(8,8), dpi=60)","54c0b62e":"# Train","56a5d00e":"## Please upvote if you like it ;)","e5778193":"# Model Build","b28b7bd0":"# Search LR","ffc11c4c":"# Check Result","e6b59ebf":"# Make Data","d8abeabe":"## Import Modules","606daec8":"## Please upvote if you like it ;)"}}