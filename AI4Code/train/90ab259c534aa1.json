{"cell_type":{"785ea771":"code","e212a8f9":"code","6c217272":"code","b907fda8":"code","6d475dbd":"code","aa4ef46a":"code","6c13216b":"code","3b7ed536":"code","e1d9ce3d":"code","617a2618":"code","866dd61e":"code","e3590f40":"code","3bce5060":"code","77f0be24":"code","8ab53873":"code","6c4d2509":"code","0fa45bf6":"code","48dcb82f":"code","0930314b":"code","ccf868fb":"code","8a56dc49":"code","32f81a44":"code","da160f3c":"markdown","1dfe6110":"markdown","b5c15a93":"markdown","1d0590d7":"markdown","7d5be68e":"markdown","1261f7a0":"markdown","9332d4c3":"markdown"},"source":{"785ea771":"%matplotlib inline\nimport gc, os, re, sys, time\nimport calendar\nimport pandas as pd, numpy as np\nfrom pathlib import Path\nfrom IPython.display import display, HTML\n\nMK = Path(f'..\/input\/meta-kaggle')\nDS = Path(f'..\/input\/user-achievements-snapshots')\nID = 'Id'\nATYPES = ['Competitions', 'Scripts', 'Discussion']\n\npd.options.display.max_rows = 200\n\nTIERNAMES = [\n    \"novice\", \"contributor\", \"expert\", \"master\", \"grandmaster\", \"overlord\"\n]\n\nDTYPE = {\n    'UserId': ('int32'),\n    'AchievementType': ('O'),\n    'Tier': ('int8'),\n    'Points': ('int32'),\n    'CurrentRanking': ('float32'),\n    'HighestRanking': ('float32'),\n    'TotalGold': ('int32'),\n    'TotalSilver': ('int32'),\n    'TotalBronze': ('int32'),\n}","e212a8f9":"def read_all():\n    dfs = []\n    for f in sorted(os.listdir(DS)):\n        m = re.match(r'UserAchievements_(\\d\\d)(\\d\\d)(\\d\\d).csv', f)\n        if m:\n            ds = '\/'.join(m.groups())\n            date = pd.to_datetime(ds, yearfirst=True)\n            df = pd.read_csv(DS \/ f,\n                             index_col=0,\n                             dtype=DTYPE,\n                             parse_dates=['TierAchievementDate'])\n            dfs.append(df.assign(date=date))\n    return pd.concat(dfs)","6c217272":"df = read_all()\ndf.shape","b907fda8":"users = pd.read_csv(MK \/ 'Users.csv', index_col=0)\nusers.shape","6d475dbd":"# Add 1 to the codes - the number now refers to the number of dots in the UI\ndf['TierName'] = df.Tier.apply(lambda x: f't{x+1}_{TIERNAMES[x]}')","aa4ef46a":"df.head()","6c13216b":"df.loc[df.AchievementType==\"Competitions\"].groupby(['date', 'TierName']).size().unstack().style.background_gradient(axis=1)","3b7ed536":"df.loc[df.AchievementType==\"Scripts\"].groupby(['date', 'TierName']).size().unstack().style.background_gradient(axis=1)","e1d9ce3d":"df.loc[df.AchievementType==\"Discussion\"].groupby(['date', 'TierName']).size().unstack().style.background_gradient(axis=1)","617a2618":"TCOLS = [\n    't1_novice', 't2_contributor', 't3_expert', 't4_master', 't5_grandmaster'\n]","866dd61e":"import matplotlib as mpl\nimport matplotlib.pyplot as plt\n\nFIGSIZE = (15, 9)\nplt.style.use('ggplot')\nplt.rc('figure', figsize=FIGSIZE)  # works locally, not on Kaggle\nplt.rc('font', size=14)","e3590f40":"for t in ATYPES:\n    display(HTML(f\"<h2>{t} Tier Counts Over Time<\/h2>\"))\n    tmp = pd.get_dummies(df.loc[df.AchievementType==t], columns=['TierName'], prefix='', prefix_sep='')\n    tmp.groupby('date')[TCOLS].sum().plot(figsize=FIGSIZE)\n    plt.show()","3bce5060":"MIN_TIER = 2\nfor t in ATYPES:\n    display(HTML(f\"<h2>{t} Tier Counts Over Time<\/h2>\"))\n    tmp = df.loc[(df.AchievementType==t) & (df.Tier>=MIN_TIER)]\n    tmp = pd.get_dummies(tmp, columns=['TierName'], prefix='', prefix_sep='')\n    tmp.groupby('date')[TCOLS[MIN_TIER:]].sum().plot(figsize=FIGSIZE)\n    plt.show()","77f0be24":"MIN_TIER = 3\nfor t in ATYPES:\n    display(HTML(f\"<h2>{t} Tier Counts Over Time<\/h2>\"))\n    tmp = df.loc[(df.AchievementType==t) & (df.Tier>=MIN_TIER)]\n    tmp = pd.get_dummies(tmp, columns=['TierName'], prefix='', prefix_sep='')\n    tmp.groupby('date')[TCOLS[MIN_TIER:]].sum().plot(figsize=FIGSIZE)\n    plt.show()","8ab53873":"MIN_TIER = 4\nfor t in ATYPES:\n    display(HTML(f\"<h2>{t} Tier Counts Over Time<\/h2>\"))\n    tmp = df.loc[(df.AchievementType==t) & (df.Tier>=MIN_TIER)]\n    tmp = pd.get_dummies(tmp, columns=['TierName'], prefix='', prefix_sep='')\n    tmp.groupby('date')[TCOLS[MIN_TIER:]].sum().plot(figsize=FIGSIZE)\n    plt.show()","6c4d2509":"def show_top(ranks):\n    for t in ATYPES:\n        title = f\"{t} Points at Top {ranks} Ranks\"\n        display(HTML(f\"<h2>{t}<\/h2>\"))\n        for r in ranks:\n            tmp = df.loc[(df.AchievementType == t) & (df.CurrentRanking == r)].set_index('date')\n            tmp.Points.plot(figsize=FIGSIZE, label=f'Top {r}', legend=True)\n        plt.ylim(0)\n        plt.title(title)\n        plt.show()\n\ndef show_top_sum(fields, func):\n    for t in ATYPES:\n        title = f\"{t} {func} {fields}\"\n        display(HTML(f\"<h2>{t}<\/h2>\"))\n        tmp = df.loc[(df.AchievementType == t)]\n        res = tmp.groupby('date')[fields].agg(func)\n        res.plot(figsize=FIGSIZE, label=f'{func} {fields}', legend=True)\n        plt.ylim(0)\n        plt.title(title)\n        plt.show()","0fa45bf6":"show_top([100])","48dcb82f":"show_top([1, 5, 10])","0930314b":"show_top([200, 400])","ccf868fb":"show_top_sum(['TotalGold', 'TotalSilver', 'TotalBronze'], 'sum')","8a56dc49":"show_top_sum(['TotalGold', 'TotalSilver'], 'sum')","32f81a44":"show_top_sum('TotalGold', 'sum')","da160f3c":"It seems discussion gold (& silver) medals hit a new rate around March 2019 - the date of the [largest competition to date][1] which has 865 topics!!!\n\n[1]: https:\/\/www.kaggle.com\/c\/santander-customer-transaction-prediction","1dfe6110":"However, scripts and discussions require **contribution of content** for users to make it into the rankings.\n\nI did not realise discussion master (or master & GM) is actually the rarest of the upper tiers.","b5c15a93":"Time lag: new users start at novice, takes time to move up tiers, there should be more novices in the *recent* past.","1d0590d7":"# Points at Top Spots\n\nPoints required to be #1 are any quantity over the points of #2 :)\n\nBut approximately, points of #100 are the points required to be top 100.\n\nNote how competitions points requirement is fairly constant over time. The mixture of competitions has moved towards image processing competitions and larger datasets, meaning computer vision experts move in to the top ranks and others are unable to compete and drop out.\n\nScripts and discussions are a rising tide-line: content is added in ever greater quantities and the requirements for top ranks increase monotonically.","7d5be68e":"# Tier Counts Over Time","1261f7a0":"# Medal Counts\n\nCompetition Silver and Bronze are so close because they're based on top 5% and 10%, whilst gold is traditionally top 10, or up to top ~30 depending on # of teams.\n\nDiscussion bronze medals are *way* higher than silver and bronze - because they include many 1:1 \"*saw this - thanks!*\" type votes?\n\n","9332d4c3":"# Kaggle Rankings History\n\nUsing snapshots of UserAchievements table from [Meta Kaggle][1], collected in the [User Achievements Snapshots](https:\/\/www.kaggle.com\/jtrotman\/user-achievements-snapshots) dataset. Note: only users with Points>=0 are stored...\n\nThis is really here as a demo of reading and querying the data.\n\n## Questions\n\n - How does the points requirement to make the top N in each tier change over time?\n\n## TODO\n\n- Tier colors\n- join with Users.csv from Meta Kaggle to inspect individual rises \/ falls\n\n## N.B.\n\nKaggle's own dataset is a bit misleading as [some users are missing from UserAchievements.csv](https:\/\/www.kaggle.com\/kaggle\/meta-kaggle\/discussion\/181048).\nThe Tier count plots will be *under-estimates* from late 2019 onwards.\nThe *Points for top 1, 10, 100* etc rankings plots should still be valid though - and show that points to be top in discussions\/scripts are still surging upwards, but points required for a top competitions ranking are fairly static.\n\n[1]: https:\/\/www.kaggle.com\/kaggle\/meta-kaggle \"Meta Kaggle\""}}