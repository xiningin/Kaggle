{"cell_type":{"624172d4":"code","fe70276d":"code","7cff6b63":"code","7ee5741b":"code","2d075ad7":"code","7f936ad7":"code","9434566d":"code","ff93eacf":"code","a4efe8af":"code","d89b6260":"code","05baff12":"code","4ba89f05":"code","d733be3e":"code","08b17f1a":"markdown","ad35e4ca":"markdown","eb46bd59":"markdown"},"source":{"624172d4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fe70276d":"data= pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')","7cff6b63":"data.head(3)\n# data.shape","7ee5741b":"data['target'].unique() # check the number of classes","2d075ad7":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(12,10))\ncor = data.corr()\nmatrix = np.triu(cor)\nsns.heatmap(cor, vmin=0 , vmax=1 , mask=matrix)\nplt.show()","7f936ad7":"print(len(data[data['target']==1]), len(data[data['target']==0]) ) # checking the class ratios ","9434566d":"data.isnull().sum() # checking the null values ","ff93eacf":"X= data.drop('target', axis=1)\ny= data['target']","a4efe8af":"from sklearn.model_selection import train_test_split,cross_val_score\n","d89b6260":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3, random_state=42)","05baff12":"from xgboost import XGBClassifier\nfrom sklearn.metrics import f1_score, recall_score, accuracy_score\nimport xgboost as xgb\nfrom lightgbm import LGBMClassifier\nfrom numpy import mean\nfrom numpy import std\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import RepeatedStratifiedKFold\n\n","4ba89f05":"model = xgb.XGBClassifier(n_estimators= 50,objective= 'binary:logistic', seed=42)\ncv = RepeatedStratifiedKFold(n_splits=10, n_repeats=2, random_state=1)\nn_scores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\nprint('Accuracy: %.3f (%.3f)' % (mean(n_scores), std(n_scores)))","d733be3e":"model2 = LGBMClassifier()\ncv = RepeatedStratifiedKFold(n_splits=10, n_repeats=2, random_state=1)\nn_scores = cross_val_score(model2, X, y, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\nprint('Accuracy: %.3f (%.3f)' % (mean(n_scores), std(n_scores)))","08b17f1a":"**XGB model implementation using 10 fold cross validation** ","ad35e4ca":"**LGBM model implementation using 10 fold cross validation** ","eb46bd59":"**Modeling note book:**\n\nIn this note book, I have employed LGBM and XGB models to predict the targets of the heart disease data set.  "}}