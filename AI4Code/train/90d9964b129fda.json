{"cell_type":{"c0b21a95":"code","72c6f0d0":"code","d897321d":"code","9e3bd3e0":"code","b29af939":"code","88eb96fd":"code","44f66ca1":"code","ad218566":"code","b81662a4":"code","0814335f":"code","ae01e3b5":"code","fdd9e1ca":"code","5d6f6ca2":"code","df8b7526":"code","9a6305ae":"code","8e43a46b":"code","29f817a8":"code","1118fc2e":"code","cc5adbb8":"code","9784bc3d":"code","62d5536b":"code","47e91e23":"code","30c9535c":"code","b043444f":"code","ea9e9428":"code","3c0088eb":"markdown","de826b2a":"markdown","07e1398c":"markdown","b756f7fe":"markdown","8096a8dd":"markdown","e59d4d8d":"markdown","0aa0cbe5":"markdown","ec896e54":"markdown","dd0a6910":"markdown","cd66b04e":"markdown","63ceff12":"markdown","a33d4820":"markdown","94dddc45":"markdown","40e35930":"markdown","cf0ef697":"markdown","931143ee":"markdown","91720573":"markdown","93bb8d59":"markdown","ff9156b6":"markdown","5b707a60":"markdown"},"source":{"c0b21a95":"import pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.ensemble import IsolationForest\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import confusion_matrix\nfrom mlxtend.plotting import plot_confusion_matrix\nimport eli5\nfrom eli5.sklearn import PermutationImportance\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","72c6f0d0":"path = '\/kaggle\/input\/tabular-playground-series-mar-2021\/'\nos.listdir(path)","d897321d":"train_data = pd.read_csv(path+'train.csv')\ntest_data = pd.read_csv(path+'test.csv')\nsamp_subm = pd.read_csv(path+'sample_submission.csv')","9e3bd3e0":"print('Number train samples:', len(train_data.index))\nprint('Number test samples:', len(test_data.index))\nprint('Number features:', len(train_data.columns))","b29af939":"print('Missing values on the train data:', train_data.isnull().sum().sum())\nprint('Missing values on the test data:', test_data.isnull().sum().sum())","88eb96fd":"features_cat = ['cat'+str(i) for i in range(19)]\nfeatures_num = ['cont'+str(i) for i in range(11)]\nno_features = ['id', 'target']","44f66ca1":"print('number of categorical features:', len(features_cat))\nprint('number of numerical features:', len(features_num))","ad218566":"col = features_cat[10]","b81662a4":"le = LabelEncoder()\nfor col in features_cat:\n    le.fit(train_data[col].append(test_data[col]))\n    train_data[col] = le.transform(train_data[col])\n    test_data[col] = le.transform(test_data[col])","0814335f":"train_data['mean'] = train_data[features_num].mean(axis=1)\ntrain_data['std'] = train_data[features_num].std(axis=1)\ntrain_data['max'] = train_data[features_num].max(axis=1)\ntrain_data['min'] = train_data[features_num].min(axis=1)\ntrain_data['sum'] = train_data[features_num].sum(axis=1)\n\ntest_data['mean'] = test_data[features_num].mean(axis=1)\ntest_data['std'] = test_data[features_num].std(axis=1)\ntest_data['max'] = test_data[features_num].max(axis=1)\ntest_data['min'] = test_data[features_num].min(axis=1)\ntest_data['sum'] = test_data[features_num].sum(axis=1)","ae01e3b5":"train_data.boxplot(column=features_num, figsize=(10,4))\nplt.show()","fdd9e1ca":"train_data.boxplot(column=features_cat, figsize=(10,4))\nplt.show()","5d6f6ca2":"temp = train_data\ncorr = temp.corr()\n#corr.style.background_gradient(cmap='coolwarm', axis=None).set_precision(2)","df8b7526":"X_train = train_data[train_data.columns.difference(no_features)]\ny_train = train_data['target']\nX_test = test_data[test_data.columns.difference(no_features)]","9a6305ae":"mean = X_train.mean()\nX_train = X_train-mean\nstd = X_train.std()\nX_train = X_train\/std\nX_test = (X_test-mean)\/std","8e43a46b":"X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size = 0.1, random_state=2021)","29f817a8":"print('Train shape:', X_train.shape)\nprint('Val shape:', X_val.shape)\nprint('Test shape:', X_test.shape)","1118fc2e":"model = RandomForestClassifier(n_estimators=300,\n                               max_depth=7,\n                               random_state=2021)","cc5adbb8":"model.fit(X_train, y_train)\ny_val_pred = model.predict_proba(X_val)\nprint('Score validation data:', roc_auc_score(y_val, y_val_pred[:, 1]))","9784bc3d":"importance = model.feature_importances_\nfig = plt.figure(figsize=(10, 6))\nx = list(train_data[train_data.columns.difference(no_features)])\nplt.barh(x, 100*importance, color='orange')\nplt.title('Feature Importance', loc='left')\nplt.xlabel('Percentage')\nplt.grid()\nplt.show()","62d5536b":"perm = PermutationImportance(model, random_state=2021).fit(X_val, y_val)\neli5.show_weights(perm, feature_names = X_val.columns.tolist())","47e91e23":"y_test = model.predict_proba(X_test)","30c9535c":"output = samp_subm.copy()\noutput['target'] = y_test[:, 1]","b043444f":"output.to_csv('submission.csv', index=False)","ea9e9428":"output.head()","3c0088eb":"# Predict Test Data","de826b2a":"Feature Importance:","07e1398c":"Correlation matrix:","b756f7fe":"# Analyse Training","8096a8dd":"We create statistical features like mean, max and min for every sample on the train and test data.","e59d4d8d":"# Libraries","0aa0cbe5":"Permutation importance:","ec896e54":"# Write Output","dd0a6910":"# Model","cd66b04e":"Scale Date:","63ceff12":"# Overview","a33d4820":"# Feature Engineering","94dddc45":"# Intro\nWelcome to the monthly Kaggle experiment in 2021. This is [march](https:\/\/www.kaggle.com\/c\/tabular-playground-series-mar-2021\/overview). \n![](https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/25225\/logos\/header.png)\n\nThis notebook is a simple tutorial of the second experimental competition. For feature encoding techniques we recommend [this notebook](https:\/\/www.kaggle.com\/drcapa\/categorical-feature-engineering-2-xgb).\n\n<span style=\"color: royalblue;\">Please vote the notebook up if it helps you. Feel free to leave a comment above the notebook. Thank you. <\/span>","40e35930":"Encoding of categorical features:","cf0ef697":"Distribution of the categorcial data:","931143ee":"Distribution of the numerical values:","91720573":"# Train, Validation And Test Data","93bb8d59":"# Load Data","ff9156b6":"# EDA","5b707a60":"# Path"}}