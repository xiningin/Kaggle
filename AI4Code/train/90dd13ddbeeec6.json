{"cell_type":{"2702082c":"code","e139c825":"code","4483018e":"code","6f1159f3":"code","6dbd3203":"code","f172d86b":"code","7488c50e":"code","f1c3db1a":"code","981daf1a":"code","14853b63":"code","ebb222af":"code","02d30fdb":"code","b3167324":"code","fc51d059":"code","f1610191":"code","0bf3c539":"code","8b1736f4":"code","28a809cf":"code","08b24ca4":"code","9559baf2":"code","4f2d8034":"code","02de0903":"code","00da54f6":"code","30ee68d4":"code","4d08b13b":"code","b86aa6ca":"code","da3fcc54":"code","fb81ff17":"code","db9b275a":"code","14099660":"code","f95b5c2c":"code","b87c519d":"code","4825e53a":"code","e35fd379":"code","3cfad25c":"code","49ebbfa4":"code","1d01f32c":"code","02cbdc07":"code","7e0cad4b":"code","12735487":"code","f0b0470d":"code","2d96507e":"code","a4a7ece6":"code","befd160d":"markdown","23100ee5":"markdown","3e62422c":"markdown","945dbfe6":"markdown","30022155":"markdown","59fd0976":"markdown","9631d6ee":"markdown","b124e148":"markdown","5ef32879":"markdown","1c517cad":"markdown","df7f502d":"markdown","e83c71c6":"markdown","dc61a040":"markdown","df2452cb":"markdown","477b6223":"markdown","661c815d":"markdown","ff68aa8e":"markdown","09afdd87":"markdown"},"source":{"2702082c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport seaborn as sns\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e139c825":"#url='https:\/\/covid.ourworldindata.org\/data\/owid-covid-data.csv'\n#df = pd.read_csv(url)\n\ndf=pd.read_csv(\"..\/input\/owidcovidonline\/owid-covid-data.csv\")\n\ndf.head()\n","4483018e":"df[df['location']=='Turkey']","6f1159f3":"NAN= [(c,df[c].isna().mean()*100) for c in df]\n\n# We name the columns appropriately \n\nNAN=pd.DataFrame(NAN,columns=[\"column_name\",\"percentage\"])\nNAN","6dbd3203":"print(df[\"location\"].unique())\nprint(len(df[\"location\"].unique()))\nprint(len(df[\"iso_code\"].unique()))","f172d86b":"# Delete world summary figures\ndf.drop(df[df.location==\"World\"].index,inplace=True)\n\n# Delete continents summary figures\n\ndf=df[~df.iso_code.str.contains(\"OWID\")]\n\nprint(len(df[\"location\"].unique()))\nprint(len(df[\"iso_code\"].unique()))","7488c50e":"# Getting the most recent date\ndf_most_recent=df[df[\"date\"]==max(df[\"date\"])].reset_index()\ndf_most_recent.head()","f1c3db1a":"df_most_recent.tail()","981daf1a":"df_world = df_most_recent.groupby([\"date\"])[[\"total_cases\",\"new_cases\",\"new_deaths\",\"total_deaths\"]].sum().reset_index()\n\n# Create Column headers\/labels\nlabels = [\"Last Update\", \"Total Confirmed\",\"New Cases\",\"New Deaths\",\"Total Deaths\"]\n\nfig = go.Figure(data=[go.Table(header = dict(values=labels),\n                 cells=dict(values=df_world.loc[0,[\"date\",\"total_cases\",\"new_cases\",\"new_deaths\",\"total_deaths\"]]))\n                     ])\nfig.update_layout(title='Covid-19 World Summary: ',)\nfig.show()","14853b63":"df_over_time= df.groupby([\"date\"])[[\"total_cases\",\"new_cases\",\"total_deaths\",\"new_deaths\"]].sum().reset_index().sort_values(\"date\",ascending=True).reset_index(drop=True)\ndf_over_time","ebb222af":"fig=go.Figure()\nfig.add_trace(go.Scatter(x=df_over_time.index, y=df_over_time[\"total_cases\"],\n                        mode=\"lines\",name=\"Confirmed cases\"))\n\nfig.update_layout(title=\"Evolution of Confirmed Covid-19 Cases\", template=\"plotly_white\", \n                  yaxis_title=\"Confirmed Cases\", xaxis_title=\"Days\")\nfig.show()","02d30fdb":"# Using Date Axis instead\n\nfig=go.Figure(go.Bar(x=df_over_time[\"date\"], y=df_over_time[\"total_cases\"]))\nfig.update_layout(title=\"Confirmed Cases in Each Day\", template=\"plotly_white\",\n                 yaxis_title=\"Confirmed Cases\", xaxis_title=\"Days\")\nfig.show()","b3167324":"fig=go.Figure()\nfig.add_trace(go.Scatter(x=df_over_time.index, y=df_over_time[\"total_deaths\"], \n                        mode=\"lines\", marker_color=\"red\", name=\"Total Deaths\", line=dict(dash=\"dot\")))\nfig.update_layout(title=\"Evolution of Covid=19 Death Cases Over Time\", template=\"plotly_dark\", \n                        yaxis_title=\"Number of Deaths\", xaxis_title=\"Days\")\nfig.show()","fc51d059":"fig=go.Figure()\n\nfig.add_trace(go.Scatter(x=df_over_time.date, y=df_over_time[\"new_cases\"],\n                        mode=\"lines\", marker_color=\"green\", name=\"New Case Daily\", \n                         line=dict(dash=\"dot\")))\nfig.update_layout(title=\"Evolution of Covid-19 New Cases Over Time\", template=\"plotly_dark\", \n                 yaxis_title=\"New Cases\", xaxis_title=\"Days\")\nfig.show()","f1610191":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=df_over_time.date, y=df_over_time['new_deaths'],\n                    mode='lines',marker_color='red',\n                    name='New Case Daily',line=dict( dash='dot')))\n\nfig.update_layout(\n    title='Evolution of Covid-19 Death Cases Over Time in the World',\n        template='plotly_dark',\n      yaxis_title=\"New Cases\",\n    xaxis_title=\"Days\",\n\n)\n\nfig.show()","0bf3c539":"df_per_country= df.groupby([\"location\"])[\"new_cases\", \"new_deaths\"].sum().reset_index().sort_values(\"new_cases\",ascending=False).reset_index(drop=True)\ndf_per_country.head(10)","8b1736f4":"df_per_country.columns=[\"Country\", \"Total Cases\", \"Total Deaths\"]\ndf_per_country=df_per_country.astype({\"Country\":str, \"Total Cases\":int, \"Total Deaths\":int})\ndf_per_country.head(10)","28a809cf":"fig=go.Figure(go.Bar(x=df_per_country[\"Total Cases\"], y=df_per_country[\"Country\"], orientation=\"h\"))\n\nfig.update_layout(title=\"Confirmed Cases in Each Country\", template=\"plotly\", \n                  xaxis_title=\"Confirmed Cases\", yaxis_title=\"Countries\")\nfig.show()","08b24ca4":"fig=go.Figure(go.Bar(x=df_per_country[\"Total Deaths\"], y=df_per_country[\"Country\"],\n                    orientation=\"h\", marker_color=\"white\"))\nfig.update_layout(title=\"Deaths in Each Country\", template=\"plotly_dark\",\n                 xaxis_title=\"Deaths\", yaxis_title=\"Countries\")\nfig.show()","9559baf2":"fig=px.choropleth(df_per_country, locations=df_per_country[\"Country\"], color=df_per_country[\"Total Cases\"], \n              locationmode=\"country names\", hover_name=df_per_country[\"Country\"], \n               color_continuous_scale=px.colors.sequential.OrRd, template=\"plotly\")\nfig.update_layout(title=\"Confirmed Cases in Each Country\")\nfig.show()","4f2d8034":"df.head()","02de0903":"# First, let's group by the countries:\n\ndf_per_country_pm=df.groupby([\"location\"])[\"new_cases_per_million\",\"new_deaths_per_million\"].sum().reset_index().sort_values(\"new_cases_per_million\",ascending=False).reset_index(drop=True)\n\ndf_per_country_pm.columns=[\"Country\",\"Total Cases PM\",\"Total Deaths PM\"]\ndf_per_country_pm=df_per_country_pm.astype({\"Country\":str, \"Total Cases PM\":int, \"Total Deaths PM\":int})\ndf_per_country_pm.head()    ","00da54f6":"# Confirmed Cases PM in Each Country\n\nfig=px.choropleth(df_per_country_pm, locations=df_per_country_pm[\"Country\"],\n              color=df_per_country_pm[\"Total Cases PM\"], locationmode=\"country names\",\n              hover_name=df_per_country_pm[\"Country\"], color_continuous_scale=px.colors.sequential.Viridis,\n              template=\"plotly_dark\")\nfig.update_layout(title=\"Confirmed Cases PM in Each Country\")\nfig.show()","30ee68d4":"# Top 10 countries per million on a Scatter Plot\n\nfig= go.Figure(data=[go.Scatter(x=df_per_country_pm[\"Country\"][0:10],\n                                y=df_per_country_pm[\"Total Cases PM\"][0:10],\n                                mode=\"markers\", marker=dict(color=100+np.random.randn(500),\n                                                            size=(df_per_country_pm[\"Total Cases PM\"][0:10]\/500), # Change 500 to larger as data evolves\n                                                            showscale=True))])\nfig.update_layout(title=\"Most Infected Countries PM\", xaxis_title=\"Countries\", \n                  yaxis_title=\"Total Cases PM\", template=\"plotly_white\")\n\nfig.show()","4d08b13b":"# Sort in decending order\n\ndf_per_country_pm=df_per_country_pm.sort_values(by=\"Total Deaths PM\",ascending=False)\n\nfig=go.Figure(data=[go.Scatter(x=df_per_country_pm[\"Country\"][0:10],\n                               y=df_per_country_pm[\"Total Deaths PM\"][0:10],\n                               mode=\"markers\", marker=dict(color=df_per_country_pm[\"Total Cases PM\"],\n                                                           size=(df_per_country_pm[\"Total Deaths PM\"][0:10]\/10), # Change 10 to larger size as data evolves\n                                                           showscale=True) )])\nfig.update_layout(title=\"Most Affected Countries by Deaths PM\", xaxis_title=\"Countries\",\n                                                                yaxis_title=\"Total Deaths PM\",\n                                                                template=\"plotly_white\")\nfig.show()","b86aa6ca":"df.tail()","da3fcc54":"# Evolution of Confirmed Cases\nfig= px.choropleth(df, locations=df[\"location\"], color=df[\"total_cases\"], locationmode=\"country names\", \n                   hover_name=df[\"location\"], color_continuous_scale=px.colors.sequential.algae, \n                   animation_frame=\"date\")\nfig.update_layout(title=\"Evolution of Confirmed Cases in each Country\", template=\"plotly\")\nfig.show()","fb81ff17":"fig=px.choropleth(df, locations=df[\"location\"], color=df[\"total_cases_per_million\"], \n                 locationmode=\"country names\", hover_name=df[\"location\"], \n                 color_continuous_scale=px.colors.sequential.Peach, animation_frame=\"date\")\n\nfig.update_layout(title=\"Evolution of Total Cases PM in each Country\", template=\"plotly_white\")\nfig.show()","db9b275a":"df_per_country_pm=df.groupby([\"continent\"])[\"new_cases_per_million\",\"new_deaths_per_million\"].sum().reset_index().sort_values(\"new_cases_per_million\",ascending=False).reset_index(drop=True)\ndf_per_country_pm.columns=[\"Country\",\"Total Cases PM\",\"Total Deaths PM\"]\ndf_per_country_pm=df_per_country_pm.astype({\"Country\":str, \"Total Cases PM\":int, \"Total Deaths PM\":int})\ndf_per_country_pm.head()","14099660":"df_usa=df[df[\"location\"]==\"United States\"]\ndf_usa.head()","f95b5c2c":"#url='https:\/\/covid.ourworldindata.org\/data\/owid-covid-data.csv'\n#df = pd.read_csv(url)\n\ndf = pd.read_csv(\"..\/input\/owidcovidonline\/owid-covid-data.csv\")\ndf_world=df[df[\"location\"]==\"World\"]\ndf_world.head()","b87c519d":"df_turkey=df[df[\"location\"]==\"Turkey\"]\ndf_turkey.head()","4825e53a":"fig=go.Figure()\n\nfig.add_trace(go.Scatter(x=df_usa[\"date\"], y=df_usa[\"total_cases\"],\n                        mode=\"lines\", name=\"Confirmed Cases in USA\"))\n\nfig.add_trace(go.Scatter(x=df_turkey[\"date\"], y=df_turkey[\"total_cases\"],\n                        mode=\"lines\", name=\"Confirmed Cases in Turkey\"))\n\nfig.add_trace(go.Scatter(x=df_world[\"date\"], y=df_world[\"total_cases\"],\n                        mode=\"lines\", name=\"Confirmed Cases in the Rest of the World\"))\n\nfig.update_layout(title=\"Evolution of Confirmed Cases over time in US and the Rest of the World\",\n                 template=\"plotly_dark\")\n\nfig.show()","e35fd379":"fig=go.Figure()\n\nfig.add_trace(go.Scatter(x=df_usa[\"date\"], y=df_usa[\"total_deaths\"],\n                        mode=\"lines\", name=\"Confirmed Deaths in US\"))\n\nfig.add_trace(go.Scatter(x=df_turkey[\"date\"], y=df_turkey[\"total_deaths\"],\n                        mode=\"lines\", name=\"Confirmed Deaths in Turkey\"))\n\nfig.add_trace(go.Scatter(x=df_world[\"date\"], y=df_world[\"total_deaths\"],\n                        mode=\"lines\", name=\"Confirmed Deaths in the Rest of the World\"))\n\nfig.update_layout(title=\"Evolution of Confirmed Deaths over time in USA and the Rest of the World\", \n                 template=\"plotly_white\")\nfig.show()","3cfad25c":"import IPython\nfrom IPython.display import display\nfrom PIL import Image\nimg = Image.open(\"..\/input\/flourishimage\/World Covid-19 Confirmed Cases(2).png\")\nimg","49ebbfa4":"import pandas as pd\n\n#url='https:\/\/covid.ourworldindata.org\/data\/owid-covid-data.csv'\n\ndf = pd.read_csv(\"..\/input\/owidcovidonline\/owid-covid-data.csv\")\ndf.head()","1d01f32c":"df.info()","02cbdc07":"# Time Format\n\ndf[\"date\"]=pd.to_datetime(df.date)\n\ndf[\"date\"]=df[\"date\"].dt.strftime('%Y-%m-%d')\n\n#df=df.sort_values(by=\"date\")\n\ndf.head()","7e0cad4b":"df=df.set_index(\"date\")\ndf=df.sort_values(by=\"date\")\ndf.head()","12735487":"# We need to change the data format to use in Flourish chart\n\ndf_flourish=pd.pivot_table(df, values=\"total_cases\", index=[\"location\"], \n                           columns=[\"date\"]).reset_index()\ndf_flourish=df_flourish.fillna(0)\n#df_flourish = df_flourish.reindex(sorted(df.columns), axis=1)\ndf_flourish.head()","f0b0470d":"flags = pd.read_csv(\"..\/input\/countryflags\/flags_world.csv\")\nflags","2d96507e":"df_flourish=pd.merge(df_flourish, flags, left_on=\"location\", right_on=\"country\")\ndf_flourish.head()","a4a7ece6":"# Generating our final file for the Flourish Chart\n\nfrom datetime import datetime\n\n# use current date for timestamped filename\ndateTimeObj=datetime.now()\ntimestampStr=dateTimeObj.strftime(\"%d_%b_%Y\")\n\n\n# delete unnecessary columns\ndel df_flourish[\"country\"]\n#del df_flourish[\"2019-12-31\"]\n\n# create a series to hold the image urls\nmid=df_flourish[\"Image URL\"]\n\n# delete the existing image urls\ndf_flourish.drop(labels=[\"Image URL\"],axis=1,inplace=True)\n\n# insert mid into the second position in df\ndf_flourish.insert(1,\"Image URL\",mid)\n\n# give the CSV a name with the current timestamp\ncsv_name=\"World_Covid_Cases\"+ timestampStr+ \".csv\"\n\ndf_flourish.to_csv(csv_name)\ndf_flourish.head()","befd160d":"## Confirmed Cases in USA vs Rest of the World","23100ee5":"<a id=6><\/a><br>\n# Evolution of Confirmed Cases PM\n","3e62422c":"<a id=8><\/a><br> \n# Preparing Dataset for Flourish Bar Chart Race","945dbfe6":"## Confirmed Cases Starting from Day Zero","30022155":"<a id=4><\/a><br>\n# Confirmed Cases in Each Country","59fd0976":"<a id=2><\/a><br>\n# Covid 19 World Analysis - Most Recent Info","9631d6ee":"\n<a id=1><\/a><br>\n# Understanding Our Data\n","b124e148":"## Creating a Summary Table","5ef32879":"# Covid-19 Data Analysis\n\nWe'll be exploring the dataset from https:\/\/covid.ourworldindata.org  \n\n\n\nContent:\n   \n<font color='blue'>\n    \n1. [Understanding Our Data](#1)\n\n1. [Covid 19 World Analysis - Most Recent Info](#2)\n\n1. [World Covid-19 Growth Over Time](#3)\n\n1. [Confirmed Cases in Each Country](#4)\n\n1. [Mapping Covid Around the World](#5)\n\n1. [Evolution of Confirmed Cases PM](#6)\n\n1. [Comparing Continents & Countries](#7)\n\n1. [Preparing Dataset for Flourish Bar Chart Race](#8)\n\n1. [Flourish - Making a Covid Bar Chart Race](#9)\n\n","1c517cad":"<a id=3><\/a><br>\n# World Covid-19 Growth Over Time ","df7f502d":"## Deaths in Each Country","e83c71c6":"<a id=5><\/a><br>\n# Mapping Covid-19 Across the World","dc61a040":"## Deaths in USA vs Rest of the World","df2452cb":"## How location names look","477b6223":"## Missing Data","661c815d":"## Confirmed Cases in Each Country\n","ff68aa8e":"<a id=6><\/a><br>\n# Comparing Continents and Countries\n","09afdd87":"# Completed Flourish Link\n\nhttps:\/\/public.flourish.studio\/visualisation\/6179759\/\n\n\n\n"}}