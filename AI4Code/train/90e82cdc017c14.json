{"cell_type":{"6717c824":"code","1b1c559a":"code","516db1a3":"code","eba83aca":"code","b357324e":"code","035126d3":"code","1c1e6229":"code","9528e55e":"code","9ffac3fc":"code","bb2a9832":"code","6c6f31b1":"code","466eacea":"code","ca2298aa":"code","5987bfd9":"code","cfdccab8":"code","e32d30a8":"code","efed9ef2":"code","64954d35":"markdown","d7d65445":"markdown","d1aed3ef":"markdown","0d64d23a":"markdown","dcfbf10b":"markdown","24998963":"markdown","68331eee":"markdown","b1a96765":"markdown","a20dd68d":"markdown","6631b867":"markdown","bbeb9ae9":"markdown","83d2bc63":"markdown","c033f2ad":"markdown","a042bd00":"markdown","e11fc302":"markdown","b56251d5":"markdown","a8bba453":"markdown","ac8b47b5":"markdown","3f3482b2":"markdown","c13a8aba":"markdown","4bb80329":"markdown"},"source":{"6717c824":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1b1c559a":"# linear algebra\nimport numpy as np \nimport math\n\n# data processing\nimport pandas as pd\n\n# data visualization(for EDA)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nplt.style.use('ggplot')\nsns.set(color_codes=True)\nimport plotly.express as px\nimport cufflinks as cf\ncf.go_offline()\ncf.set_config_file(offline=False, world_readable=True)\n\n#ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport calendar ","516db1a3":"df=pd.read_csv('..\/input\/rainfall-in-pakistan\/Rainfall_1901_2016_PAK.csv')\ndf.head()\n","eba83aca":"#creating index column\ndf['Date']=pd.to_datetime(df[' Year'].astype(str)  + df['Month'], format='%Y%B').dt.to_period('m')\ndf = df.set_index('Date')\ndf = df.rename(columns = {'Rainfall - (MM)':'Rainfall',' Year':'Year'})\ndf.head()","b357324e":"df.info","035126d3":"df.isnull().sum()","1c1e6229":"ax=df.groupby([df.Year]).mean()['Rainfall']\nfig = px.line(ax, x=ax.index, y='Rainfall', title='Annual rainfall in Pakistan from 1901 to 2016')\nfig.update_traces(mode='lines+markers',line=dict(color='Purple'))\nfig.update(layout=dict(title=dict(x=0.5)))\nfig.show()","9528e55e":"ax=df.groupby('Year').mean()['Rainfall'].rolling(10).mean()\nfig = px.line(ax, x=ax.index, y='Rainfall', title='Rolling average of 10 years of Rainfall')\nfig.update_traces(mode='lines+markers',line=dict(color='Grey'))\nfig.update(layout=dict(title=dict(x=0.5)))\nfig.show()","9ffac3fc":"f,ax=plt.subplots(1,1,figsize=(30,10))\ntitle = plt.title('Rainfall by Month', fontsize=20)\ntitle.set_position([0.5, 1.05])\n\ng = sns.boxplot(df[\"Month\"], df[\"Rainfall\"],ax=ax)","bb2a9832":"df['Month_Num'] = df['Month'].apply(lambda x: {month: index for index, month in enumerate(calendar.month_name) if month}[x])\ndata_pivot = df.pivot(\"Year\", \"Month_Num\", \"Rainfall\")\ndata_pivot","6c6f31b1":"f,ax=plt.subplots(1,1,figsize=(30,10))\ntitle = plt.title('Rainfall Heat Map', fontsize=20)\ntitle.set_position([0.5, 1.05])\nchart = sns.heatmap(data_pivot)\nchart.set_xticklabels((\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"), rotation=45, horizontalalignment='right')","466eacea":"df['Month_Num'] = df['Month'].apply(lambda x: {month: index for index, month in enumerate(calendar.month_name) if month}[x])\ndata_pivot_2 = df.pivot(\"Month_Num\", \"Year\", \"Rainfall\")\ndata_pivot_2","ca2298aa":"f,ax=plt.subplots(1,1,figsize=(30,10))\ntitle = plt.title('Rainfall Heat Map 2', fontsize=20)\ntitle.set_position([0.5, 1.05])\nchart = sns.heatmap(data_pivot_2)\nl = chart.set_yticklabels((\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"), rotation=45, horizontalalignment='right')","5987bfd9":"f,ax=plt.subplots(1,2,figsize=(30,5))\nf.suptitle('Distribution by Months', fontsize=14)\n\nax[0].set_title(calendar.month_name[1], fontsize=12)\ndf_month = df[df[\"Month_Num\"] == 1]\ng = sns.histplot(data=df_month, x=\"Rainfall\", binwidth=10, ax=ax[0])\n\nax[1].set_title(calendar.month_name[2], fontsize=12)\ndf_month = df[df[\"Month_Num\"] == 2]\ng = sns.histplot(data=df_month, x=\"Rainfall\", binwidth=10, ax=ax[1])\n\nf,ax=plt.subplots(1,2,figsize=(30,5))\n\nax[0].set_title(calendar.month_name[3], fontsize=12)\ndf_month = df[df[\"Month_Num\"] == 3]\ng = sns.histplot(data=df_month, x=\"Rainfall\", binwidth=10, ax=ax[0])\n\nax[1].set_title(calendar.month_name[4], fontsize=12)\ndf_month = df[df[\"Month_Num\"] == 4]\ng = sns.histplot(data=df_month, x=\"Rainfall\", binwidth=10, ax=ax[1])\n\nf,ax=plt.subplots(1,2,figsize=(30,5))\n\nax[0].set_title(calendar.month_name[5], fontsize=12)\ndf_month = df[df[\"Month_Num\"] == 5]\ng = sns.histplot(data=df_month, x=\"Rainfall\", binwidth=10, ax=ax[0])\n\nax[1].set_title(calendar.month_name[6], fontsize=12)\ndf_month = df[df[\"Month_Num\"] == 6]\ng = sns.histplot(data=df_month, x=\"Rainfall\", binwidth=10, ax=ax[1])\n\nf,ax=plt.subplots(1,2,figsize=(30,5))\n\nax[0].set_title(calendar.month_name[7], fontsize=12)\ndf_month = df[df[\"Month_Num\"] == 7]\ng = sns.histplot(data=df_month, x=\"Rainfall\", binwidth=10, ax=ax[0])\n\nax[1].set_title(calendar.month_name[8], fontsize=12)\ndf_month = df[df[\"Month_Num\"] == 8]\ng = sns.histplot(data=df_month, x=\"Rainfall\", binwidth=10, ax=ax[1])\n\nf,ax=plt.subplots(1,2,figsize=(30,5))\n\nax[0].set_title(calendar.month_name[9], fontsize=12)\ndf_month = df[df[\"Month_Num\"] == 9]\ng = sns.histplot(data=df_month, x=\"Rainfall\", binwidth=10, ax=ax[0])\n\nax[1].set_title(calendar.month_name[10], fontsize=12)\ndf_month = df[df[\"Month_Num\"] == 10]\ng = sns.histplot(data=df_month, x=\"Rainfall\", binwidth=10, ax=ax[1])\n\nf,ax=plt.subplots(1,2,figsize=(30,5))\n\nax[0].set_title(calendar.month_name[11], fontsize=12)\ndf_month = df[df[\"Month_Num\"] == 11]\ng = sns.histplot(data=df_month, x=\"Rainfall\", binwidth=10, ax=ax[0])\n\nax[1].set_title(calendar.month_name[12], fontsize=12)\ndf_month = df[df[\"Month_Num\"] == 12]\ng = sns.histplot(data=df_month, x=\"Rainfall\", binwidth=10, ax=ax[1])    ","cfdccab8":"winter=df.query('Month==\"December\" or Month==\"January\" or Month==\"February\"').groupby([df.Year]).mean()['Rainfall']\nspring=df.query('Month==\"March\"or Month==\"April\"').groupby([df.Year]).mean()['Rainfall']\nsummer=df.query('Month==\"May\" or Month==\"June\" or Month==\"July\" or Month==\"August\"or Month==\"September\"').groupby([df.Year]).mean()['Rainfall']\nAutumn=df.query('Month==\"October\" or Month==\"November\"').groupby([df.Year]).mean()['Rainfall']\ndata=pd.DataFrame({ 'Winter': winter, 'Spring': spring,'Summer': summer, 'Autumn': Autumn })\ndata.plot(figsize=(17,8));\nplt.title('Seasonal Rainfall in Pakistan from 1901 to 2016',fontsize=20);","e32d30a8":"y=data.mean()\nx=data.columns\nfig = px.bar(x=x,y=y,color=x,title='Season wise Rainfall in Pakistan')\nfig.update(layout=dict(title=dict(x=0.5)))\nfig.show()","efed9ef2":"ax=df.groupby([df.index.year]).agg({'Rainfall':sum})\nprint('The largest amount of rain was recorded in the following years')\nax['Rainfall'].nlargest(5)","64954d35":"**Month wise box-plot distribution**","d7d65445":" From the graph, it is clear that Pakistan received more rainfall in the summer and spring seasons.","d1aed3ef":"**Year wise distribution**","0d64d23a":"**Loading the rainfall dataset**","dcfbf10b":"**Importing the libraries to be used in the EDA processing**","24998963":"There are no null null values in the dataset so there is no need for data cleaning and handling any missing values","68331eee":"**Per-year monthly Rainfall statistics and heatmap**","b1a96765":"> Here we can visualize that Pakistan receives the large amount of rains in Summer season and least in the Autumn season","a20dd68d":"From the above line graph, we can see that the highest average rainfall in Pakistan was recorded in the year 1944.","6631b867":"**Monthly Rainfall Distribution using Bar Graphs**","bbeb9ae9":"1. creating a Date column using the year and months column provided and setting it as the index column of our dataframe\n2. re-naming the Rainfall - (MM) column and Year column","83d2bc63":"To analysis the progression level of rainfall, I took the rolling average of 10 years.","c033f2ad":"**Season Wise Rainfall Distribution**","a042bd00":"From the above heatmap we can see that in all years, the most amount of rain was recorded in the months of July and August","e11fc302":"**checking null values in the dataframe**","b56251d5":"Pakistan has four seasons: winter from December through February; spring from March through May; the summer rainy season, or southwest monsoon period, from June through September; and the Autumn period is in October and November","a8bba453":"**Per-month yearly Rainfall statistics and heatmap**","ac8b47b5":"**printing the information of our dataframe**","3f3482b2":"> In this notebook we will se the exploratory data analysis of the rainfall in Pakistan in last 115 years.","c13a8aba":"From the figure we can see that the majority of the rainfall is received in the months of July and August which is the monsoon season while in October and November the least Rainfall is recorded.","4bb80329":"# **Exploratory Data Analysis**"}}