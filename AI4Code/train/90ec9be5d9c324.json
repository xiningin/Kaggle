{"cell_type":{"dcefd2a7":"code","e2ea3e28":"code","8b5d47e5":"code","bba2dfed":"code","8a1883b8":"code","3ef4ddb6":"code","d3ec8e46":"code","75cdd16b":"code","ef206c08":"code","52246287":"code","10ca461b":"code","a35dba7d":"code","aaeac09a":"code","00ac2e7d":"code","59a7ae4f":"code","614af297":"code","eece735c":"code","f5e2ed86":"code","c4f9bc53":"code","458caeff":"code","531ae0e2":"code","f6ec0e5d":"code","1ef573e6":"code","c97b8594":"code","58e1ced5":"code","e6c6b50c":"code","23c149ac":"code","1aea086a":"code","c319b4d6":"code","f4e003e0":"code","cf5a1855":"code","b7b2d851":"code","3808f84d":"code","c3a1db7d":"code","7c8a3fa6":"markdown","16bf22b9":"markdown","e6794e72":"markdown","3f8dc2cb":"markdown","5b20cada":"markdown","848f1fbf":"markdown","201334f4":"markdown","c22e1458":"markdown","7612fa2c":"markdown","cd8a3fa4":"markdown","2b685c8d":"markdown","f677e863":"markdown","f4915879":"markdown","9ea049b7":"markdown","67a157b7":"markdown","06c3eef8":"markdown","c5ea9df5":"markdown","db79ccba":"markdown","c4cda0b3":"markdown","687aae25":"markdown","6671883d":"markdown","5b03ba2c":"markdown","7d9a0172":"markdown"},"source":{"dcefd2a7":"import pandas as pd\nimport re\nfrom datetime import datetime\nimport numpy as np\npd.options.mode.chained_assignment = None  # |default='warn'","e2ea3e28":"df_sla = pd.read_excel(\"..\/input\/open-shopee-code-league-logistic\/SLA_matrix.xlsx\")","8b5d47e5":"## SLA Matrix\ndf_sla","bba2dfed":"## Delivery data\ndf_delivery = pd.read_csv(\"..\/input\/open-shopee-code-league-logistic\/delivery_orders_march.csv\")","8a1883b8":"df_delivery.shape","3ef4ddb6":"df_delivery.head()","d3ec8e46":"## SLA matrix\nmatrix = df_sla.iloc[1:5, 2:].values\ncity_order = [\"metro manila\", \"luzon\", \"visayas\", \"mindanao\"]","75cdd16b":"matrix","ef206c08":"## SLA 2nd attempt\nprint(df_sla.iloc[8:,:1].values[0][0])","52246287":"## Sample orders\ndf_sample = df_delivery.sample(n=1000)\ndf_sample.head()","10ca461b":"def find_city(x):\n    for city in city_order:\n        if city.lower() in x:\n            return city.lower()","a35dba7d":"## Get Origin\ndef get_origin(df):\n    origin = find_city(df['selleraddress'].lower())\n    return origin","aaeac09a":"## Get Destination\ndef get_destination(df):\n    destination = find_city(df['buyeraddress'].lower())\n    return destination","00ac2e7d":"df_sample['origin'] = df_sample.apply(get_origin, axis=1)\ndf_sample['destination'] = df_sample.apply(get_destination, axis=1)","59a7ae4f":"df_sample.head()","614af297":"def get_sla(df):\n    sla = matrix[city_order.index(df['origin']), city_order.index(df['destination'])]\n    days = int(re.search(r'\\d', sla).group(0))\n    return days","eece735c":"df_sample['sla'] = df_sample.apply(get_sla, axis=1)","f5e2ed86":"df_sample.head()","c4f9bc53":"## Convert all date column to date\npick = pd.to_datetime(df_sample['pick'], unit='s').dt.date\nfirst_deliver = pd.to_datetime(df_sample['1st_deliver_attempt'], unit='s').dt.date\nsecond_deliver = pd.to_datetime(df_sample['2nd_deliver_attempt'], unit='s').dt.date","458caeff":"df_sample['pick'] = pick\ndf_sample['1st_deliver_attempt'] = first_deliver\ndf_sample['2nd_deliver_attempt'] = second_deliver","531ae0e2":"df_sample.head()","f6ec0e5d":"## Initiate public holidays\npublic_holidays = [\"2020-03-08\", \"2020-03-25\", \"2020-03-30\", \"2020-03-31\"]","1ef573e6":"def get_busday_first(df):\n    create_date = str(df['pick'])\n    resolve_date = str(df['1st_deliver_attempt'])\n\n    create_datetime = datetime.strptime(create_date, '%Y-%m-%d')\n    resolve_datetime = datetime.strptime(resolve_date, '%Y-%m-%d')\n\n    busday = np.busday_count(create_date, resolve_date, holidays=public_holidays, weekmask=[1,1,1,1,1,1,0])\n\n    return busday    ","c97b8594":"df_sample['1st_deliver_days'] = df_sample.apply(get_busday_first, axis=1)","58e1ced5":"df_sample.head()","e6c6b50c":"## Saving checkpoint\n# import pickle\n# pickle.dump(df_sample, open(\"1st_fullfilment.pickle\", \"wb\"))","23c149ac":"def get_busday_second(df):\n    create_date = str(df['1st_deliver_attempt'])\n    resolve_date = str(df['2nd_deliver_attempt'])\n    \n    if resolve_date == 'NaT':\n        resolve_date = create_date\n\n    create_datetime = datetime.strptime(create_date, '%Y-%m-%d')\n    resolve_datetime = datetime.strptime(resolve_date, '%Y-%m-%d')\n\n    busday = np.busday_count(create_date, resolve_date, holidays=public_holidays, weekmask=[1,1,1,1,1,1,0])\n\n    return busday   ","1aea086a":"df_sample['2nd_deliver_days'] = df_sample.apply(get_busday_second, axis=1)","c319b4d6":"df_sample.head()","f4e003e0":"## Saving checkpoint\n# import pickle\n# pickle.dump(df_sample, open(\"2nd_fullfilment.pickle\", \"wb\"))","cf5a1855":"not_late_df = df_sample[(df_sample['1st_deliver_days'] <= df_sample['sla']) & (df_sample['2nd_deliver_days'] <= 3)][['orderid']]\nnot_late_df['is_late'] = 0\nnot_late_df.head()","b7b2d851":"late_df = df_sample[~df_sample['orderid'].isin(not_late_df['orderid'])][['orderid']]\nlate_df['is_late'] = 1\nlate_df.head()","3808f84d":"not_late_df.orderid.nunique() + late_df.orderid.nunique()","c3a1db7d":"res_df = pd.concat([late_df, not_late_df], axis=0)\nres_df.head()","7c8a3fa6":"#### Export solution\nres_df.to_csv(\"solution_logistics_bahy_sample.csv\", index=False)","16bf22b9":"df_delivery['1st_deliver_days'] = df_delivery.apply(get_busday_first, axis=1)","e6794e72":"res_df = pd.concat([late_df, not_late_df], axis=0)","3f8dc2cb":"df_delivery['pick'] = pick\ndf_delivery['1st_deliver_attempt'] = first_deliver\ndf_delivery['2nd_deliver_attempt'] = second_deliver","5b20cada":"This algorithm scores **0.99441** on Shopee Code League - Logistics competition.","848f1fbf":"#### Export solution\nres_df.to_csv(\"solution_logistics_bahy.csv\", index=False)","201334f4":"df_delivery['origin'] = df_delivery.apply(get_origin, axis=1)\ndf_delivery['destination'] = df_delivery.apply(get_destination, axis=1)","c22e1458":"#### Check for first SLA fullfilment","7612fa2c":"test = pd.read_csv(\"solution_logistics_bahy_sample.csv\")\ntest.head()","cd8a3fa4":"public_holidays = [\"2020-03-08\", \"2020-03-25\", \"2020-03-30\", \"2020-03-31\"]","2b685c8d":"#### Decide late\/not late","f677e863":"pick = pd.to_datetime(df_delivery['pick'], unit='s').dt.date\nfirst_deliver = pd.to_datetime(df_delivery['1st_deliver_attempt'], unit='s').dt.date\nsecond_deliver = pd.to_datetime(df_delivery['2nd_deliver_attempt'], unit='s').dt.date","f4915879":"not_late_df = df_sample[(df_sample['1st_deliver_days'] <= df_sample['sla']) & (df_sample['2nd_deliver_days'] <= 3)][['orderid']]\nnot_late_df['is_late'] = 0","9ea049b7":"df_delivery.head()","67a157b7":"late_df = df_sample[~df_sample['orderid'].isin(not_late_df['orderid'])][['orderid']]\nlate_df['is_late'] = 1","06c3eef8":"### Run all below cells as \"Code\" to export the solution for sample\/all data","c5ea9df5":"#### Check for 2nd SLA fullfilment","db79ccba":"test.shape","c4cda0b3":"#### Create sample df","687aae25":"df_delivery['2nd_deliver_days'] = df_delivery.apply(get_busday_second, axis=1)","6671883d":"df_delivery['sla'] = df_delivery.apply(get_sla, axis=1)","5b03ba2c":"#### Find origin, destination, SLA","7d9a0172":"#### Test to all data\nJust replace all the cells below to a Code cell to run it on all data"}}