{"cell_type":{"8b038c3f":"code","76b5dde0":"code","2a3e6e06":"markdown","d7ace93f":"markdown"},"source":{"8b038c3f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","76b5dde0":"import numpy as np\nimport pandas as pd\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import Imputer\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import classification_report,confusion_matrix\nimport matplotlib.pyplot as plt\n%matplotlib inline\ndataset =\"..\/input\/data.csv\"\ndf =pd.read_csv(dataset)\n#getting all the feature colums in x\nx =df.drop([\"id\",\"diagnosis\"],axis=1)\n#replacing missing values with mean\n\n#col = x.columns\nimputer = Imputer(missing_values = 'NaN',strategy= 'mean' , axis = 0)\nimputer = imputer.fit(x)\nx = imputer.transform(x)\n\n#gettng the result column in y\ny =df[\"diagnosis\"]\n#converting categorical data into indicator\/dummy variable\ny = pd.get_dummies(df[\"diagnosis\"],drop_first=True)\n#print(df.head())\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3)\nmodel = KNeighborsClassifier(n_neighbors=2)\nmodel.fit(x_train,y_train)\npre = model.predict(x_test)\nprint (model.score(x_test,y_test))\nprint (classification_report(y_test,pre))\nprint (confusion_matrix(y_test,pre))","2a3e6e06":"## Please upvote  ","d7ace93f":"##  learning with help of my new kaggle friend Shabbir khan\n"}}