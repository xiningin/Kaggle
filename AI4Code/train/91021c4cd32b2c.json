{"cell_type":{"a6c40c46":"code","f949d780":"code","fd6dc3af":"code","24de2228":"code","d61bc5a8":"code","b83bbe26":"code","8df68899":"code","4fa45e33":"code","89cbe425":"code","0f891478":"code","02e1afcd":"code","451b3cbb":"code","78ad3b32":"code","9ac6136f":"code","e860a116":"code","54226570":"code","64916f9c":"code","e666fa7d":"markdown","fcca440f":"markdown","f1042e2f":"markdown","58235e5e":"markdown","db517a95":"markdown","9800d953":"markdown","c6210cc0":"markdown","d717e688":"markdown","f9d27a75":"markdown","c8529e1a":"markdown","075d8744":"markdown","9930fa1c":"markdown","fe751dcd":"markdown","4d266f25":"markdown","bf36bcdd":"markdown","ef6d69b1":"markdown","50488237":"markdown","ae2fe79d":"markdown","3f986e68":"markdown","01dac1e9":"markdown"},"source":{"a6c40c46":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f949d780":"df = pd.read_csv('..\/input\/boardgamegeek2020\/bgg_db.csv')","fd6dc3af":"df.head()","24de2228":"df.shape","d61bc5a8":"for col in df.columns:\n    print(col)","b83bbe26":"df.dtypes","8df68899":"df.sort_values(by='rank', ascending=True, axis=0, inplace=True)\ndf.drop(['bgg_url', 'thumb_url', 'expands', 'reimplements', 'image_url'], axis=1, inplace=True)","4fa45e33":"df_year = df[(df.year >= 1980) & (df.year <= 2020)].groupby('year')\nyear_counts = df_year.year.count()\nplt.figure(figsize=(14, 6))\nplt.xticks(fontsize=14, rotation=90)\nplt.yticks(fontsize=14)\nsns.barplot(x=year_counts.index, y=year_counts)\nplt.title('Games Published each Year', fontsize=18)\nplt.xlabel('Year', fontsize=14)\nplt.ylabel('Games Published', fontsize=14)\nplt.show()","89cbe425":"# Cutting extreme cases out, because games without any rating are listed as 0 instead of NaN, and I wanted to exclude games with one 10.0 rating\ndf_year = df[(df.avg_rating >= 0.1) & (df.avg_rating <= 4.9) & (df.geek_rating >= 0.1) & (df.geek_rating <= 4.9) & (df.year >= 1980) & (df.year <= 2020)] \nline1 = df_year.groupby('year').avg_rating.mean()\nline2 = df_year.groupby('year').geek_rating.mean()\nplt.figure(figsize=(14, 6))\nplt.title('Average Ratings by Year', fontsize=18)\nplt.xlabel('Year')\nplt.ylabel('Ratings')\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nsns.lineplot(data=(line1, line2), markers=True, linewidth=3)\nsns.set_style('darkgrid')\nplt.show()","0f891478":"df_top300 = df[(df.year >= 1980) & (df.year <= 2020)][:300]\nplt.figure(figsize=(14, 6))\nsns.distplot(df_top300['year'], bins=40, color='darkblue')\nplt.title('Top 300 Games by Year', fontsize=16)\nplt.xlabel('Year', fontsize=14)\nplt.ylabel('Percentage of Rank 300 Games', fontsize=14)\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nplt.show()","02e1afcd":"weight_year_narrowed = df[(df.weight >= 0.1) & (df.weight <= 4.9) & (df.year >= 1980) & (df.year <= 2020)] # Once again, cutting out extremes to get a more realistic picture\nweight_year = weight_year_narrowed.groupby('year').weight.mean()\nplt.figure(figsize=(14,6))\nplt.title('Average Weight of Games by Year (0.1 - 4.9)', fontsize=18)\nplt.xlabel('Year')\nplt.ylabel('Average Weight')\nsns.lineplot(data=weight_year, color='darkgreen', linewidth=3)\nsns.set(style='darkgrid')\nplt.show()","451b3cbb":"weight_year_narrowed = df[(df.weight >= 0.1) & (df.weight <= 4.9)]\nbins = [-1, 1, 2, 3, 4, 5]\ndf['weight_cat'] = pd.cut(weight_year_narrowed['weight'], bins=bins, labels=bins[1:])\nweight = [df[df['weight_cat'] == i]['avg_rating'] for i in range(1,6)]\nplt.figure(figsize=(16, 8))\nplt.title('Average Rating of Game Weight Groupings', fontsize=18)\nplt.xlabel('Game Weight', fontsize=14)\nplt.ylabel('Average Rating', fontsize=14)\nax = sns.boxplot(data=weight, palette='deep')\nax.set(xticklabels=['0-1', '1-2', '2-3', '3-4', '4-5'])\nsns.set_style('whitegrid')\nplt.show()","78ad3b32":"#Creating a new dataframe in order to count mechanics in the lists provided in df.mechanic\n\nmechanics_lang = df.mechanic.str.split(',', expand=True) \nmechanics_lang = mechanics_lang.dropna(how='all')\nmechanics_lang_num = mechanics_lang.fillna(0).apply(pd.Series.value_counts)\nmechanics_lang_num = mechanics_lang_num[0].sort_values(ascending=False)\n\nplt.figure(figsize=(14,6))\nplt.title('Top 10 Most Mechanics in Games', fontsize=18)\nplt.xlabel('Number of Games with Mechanic')\nplt.ylabel('')\nplt.yticks(fontsize=14)\nmechanics_lang_num[:10].plot(kind='barh')\nplt.gca().invert_yaxis()\nplt.show()","9ac6136f":"# Creating a new dataframe in order to count Game Designers in lists provided in df.designer:\n\ngame_designer_lang = df.designer.str.split(',', expand=True)\ngame_designer_lang = game_designer_lang.dropna(how='all')\ngame_designer_lang_num = game_designer_lang.fillna(0).apply(pd.Series.value_counts)\ngame_designer_lang_num = game_designer_lang_num[0].sort_values(ascending=False).drop('(Uncredited)')\n\nplt.figure(figsize=(10, 7))\nplt.title('Most publishing Game Designer', fontsize=18)\nplt.xlabel('Games Published', fontsize=14)\nplt.yticks(fontsize=13)\ngame_designer_lang_num[:10].plot(kind='barh')\nplt.gca().invert_yaxis()\nplt.show()","e860a116":"concatenated = pd.concat([df, game_designer_lang], axis=1)\nconcatenated_grouped = concatenated[concatenated['num_votes'] > 2000].groupby(0).filter(lambda x: x[0].count() > 2)\ngame_designer_avg_rating = concatenated_grouped.groupby(0).avg_rating.mean().sort_values(ascending=False)\ngame_designer_geek_rating = concatenated_grouped.groupby(0).geek_rating.mean().sort_values(ascending=False)\ngame_designer_avg_rating = game_designer_avg_rating[:20]\ngame_designer_geek_rating = game_designer_geek_rating[:20]\n\nplt.figure(figsize=(10, 10))\nsns.barplot(x=game_designer_avg_rating, y=game_designer_avg_rating.index)\nplt.title('Top 20 Best Game Designers by Average Rating', fontsize=18)\nplt.xlabel('Average Ratings', fontsize=14)\nplt.ylabel('Rating')\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nplt.show()","54226570":"plt.figure(figsize=(10, 10))\nsns.barplot(x=game_designer_geek_rating, y=game_designer_geek_rating.index)\nplt.title('Top 20 Best Game Designers by Geek Rating', fontsize=18)\nplt.xlabel('Geek Ratings', fontsize=14)\nplt.ylabel('Rating')\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nplt.show()","64916f9c":"game_designer_lang_top300 = game_designer_lang[:300].fillna(0).apply(pd.Series.value_counts)\ngame_designer_lang_top300 = game_designer_lang_top300[0].sort_values(ascending=False).drop('(Uncredited)')\nplt.figure(figsize=(14,10))\nplt.title('Game Designers most often in Top 300 Ranked Games', fontsize=18)\nplt.xlabel('Games in Top 300 Ranked Games')\nplt.ylabel('')\nplt.yticks(fontsize=14)\ngame_designer_lang_top300[:20].plot(kind='barh')\nplt.gca().invert_yaxis()\nplt.show()","e666fa7d":"- First, it can be observed that the mean of all average ratings is lower than the mean of the average geek ratings. This can simply be explained by the different ways of calculating both (geek rating includes other factors as simply the given ratings on boardgamegeek).\n- Interestingly, both lines seem to behave synchroncically: If one goes up, the other goes down, and vice versa. \n- Also note that the average ratings significantly increased up to this day since 2002. We can conclude that people are more satiesfied with more recent games, despite the slight decrease in geek rating.","fcca440f":"# Top 10 Most Publishing Game Designers\n\nThe last topic I was interested in are game designers. Which ones publish the most? Which one are deemed the 'best'? In order to answer the last question, we must discern what 'best' in an objective sense can mean in this context. There are lots of possible ways to calculate this, so I wanted to display which ones\n- in general have the best average ratings in their games\n- in general have the best average geek ratings in their games\n- have most of their games in the top 300 rankings\n\nhoping to find similar names in all three rankings. \n\nNote that I only included games with at least 2000 votes and only game designers that at least have published two games. I did this to exclude games with not enough data, and game designers which may had only one publication.","f1042e2f":"# Year Distribution of Average Weight\n\nThe feature 'weight' on Boardgamegeek represents game complexity & length and is a number between 0 and 5. What is the trend of that over the years? Let's see:","58235e5e":"# Year Distribution of Average Rating & Average Geek Rating\n\nNext, I wanted to know how the mean of the average ratings and the mean of the average geek ratings for each game behaved across the years:","db517a95":"# Number of Games Published each Year\n\nFirst, I wanted to have a general idea how many board games are published each year:","9800d953":"- We see a continuous rise of games published each year, with the current year as the exception. However, this behavior is normal in the industry, because many games are set to be announced in late summer, due to the fact that large fairs like the _Spiel_ in Essen happens around that time.\n- Note that the dataset contains games listed on Boardgamegeek, the actual numbers will vary slightly (because someone may listed a game that actually never was published).","c6210cc0":"Lloyd Krassner and Reiner Knizia are really getting ahead of the pack in terms of numbers, with Krassner being #1 with nearly 900 games published. Impressive!","d717e688":"# Top 20 Best Average Ratings Game Designers","f9d27a75":"- Quite unsurprisingly, dice rolling is the #1 most used game mechanic in games on Boardgamegeek.\n- Surprisingly to me though, Roll \/ Spin and Move is #2, which involves chucking dice and move accordingly on the board. Quote Boardgamegeek: \"This term is often used derogatorily to imply that there is no thought involved.\"","c8529e1a":"Thank you for reading! I'm always looking for ways to improve, so if you have feedback, please let me know :-)","075d8744":"# Year Distribution of Top 300 Ranked Games\n\nSince we concluded that people are in general more satiesfied with recent games, I wanted to know if this trend is reflected in the Top 300 Ranked Games:","9930fa1c":"# Quick Overview of Data","fe751dcd":"# Game Designers most often in Top 300 Ranked Games","4d266f25":"# Top 10 Most often used Game Mechanics\n\nNext, I questioned which game mechanics are used most often in games:","bf36bcdd":"- We can see that the higher the weight, the higher the average ratings of games.\n- My explanation for this is the fact that people who are really into more complex board games rate games more often on Boardgamegeek, since they are more involved in their hobby. Casual players who prefer lighter games may fall under the radar here.","ef6d69b1":"- Our hunch was right: The majority of games in the Top 300 were published in the last decade, with a center aroung 2017.","50488237":"# Weight and Average Rating Correlation\n\nSince games are getting more complex, how do gamers rate more complex games?","ae2fe79d":"# Data Preparation","3f986e68":"- It can be stated that the average weight significantly increased in the last 3-4 years. Maybe gamers are getting more and more used to board games these days, willing to invest more time & energy into their hobby.","01dac1e9":"What can we conclude from this data? Some names stand out remarkably often:\n- Jacob Fryxelius, who is #1 in average geek ratings and #2 in average ratings, does not show up in the top 300 very often. This can be explained by the fact that his bestselling game _Terraforming Mars_ has many expansions, which are not in the Top 300 but are listed as games in the data, all of which have high ratings.\n- The same can be said about Jens Dr\u00f6gem\u00fcller, who published only three games (with _Terra Mystica_ and _Gaia Project_ as his best) and some expansions.\n- The rating statistics reveal that numbers are really close, whereas the top 300 ranked Game graphic show some individuals at the top that stand out: Uwe Rosenberg, Vlaada Chv\u00e1til, Stefan Feld, Reiner Knizia and Vital Lacerda. Since Stefan Feld and Reiner Knizia are in neither ratings Top 20, and Uwe Rosenberg missing in the average rating top 20, I would name Vlaada Chv\u00e1til and Vital Lacerda the most successful game designers on Boardgamegeek. However, I admit that my outcome is highly debatable, since the way I came to my conclusion included a high portion of subjectivity."}}