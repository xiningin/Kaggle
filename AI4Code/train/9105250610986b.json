{"cell_type":{"0a7be373":"code","a3dce2dd":"code","0a8977e6":"code","430baf52":"code","d8439715":"code","d78ec716":"code","f58d83b6":"code","f89a2ec8":"code","c5cf6bdd":"code","4b9d18b3":"code","9898f594":"code","33e0e3f7":"code","9aee6950":"code","cf7be896":"code","eb83781d":"code","ab5c52ad":"code","3b433f37":"code","89ca2b25":"code","76b6d3a2":"code","ebeeadea":"code","5aa50d20":"code","ee0cc187":"code","cb2edbea":"code","be3f9f38":"code","8de4e503":"code","dd5e525b":"code","d6e1db46":"code","30d554c8":"code","b992d3cc":"code","2de692bf":"code","c9a314bc":"code","dc662550":"code","5638ec05":"code","131e1173":"code","eb5bcba7":"code","697627ac":"markdown","1be381d8":"markdown","a0f6ffaf":"markdown"},"source":{"0a7be373":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn import linear_model #scikit\n\ndata= pd.read_csv('..\/input\/dummy-advertising-and-sales-data\/Dummy Data HSS.csv')","a3dce2dd":"data.shape","0a8977e6":"data.info()","430baf52":"#Replace the space in column names with an underscore\ndata.columns = [c.replace(' ', '_') for c in data.columns]","d8439715":"data.info()","d78ec716":"#check if there is a null value in our dataset\ndata.isnull().values.any()","f58d83b6":"#display the number of null values and its corresponding columns\ndata.isnull().sum()","f89a2ec8":"#Clean the data by deleting rows with null values, since their number\n#is small compared to the total number of rows in the dataset, \n#so deleting them will not have a significant effect.\n\ndata.dropna(subset = ['TV'], inplace=True)\ndata.dropna(subset = ['Radio'], inplace=True)\ndata.dropna(subset = ['Social_Media'], inplace=True)\ndata.dropna(subset = ['Sales'], inplace=True)","c5cf6bdd":"data.info()","4b9d18b3":"plt.scatter(data[\"TV\"] + data[\"Radio\"] + data[\"Social_Media\"],data[\"Sales\"], color=\"blue\")\nplt.xlabel(\"Advertisement\")\nplt.ylabel(\"Sales\")\nplt.show()","9898f594":"from sklearn.model_selection import train_test_split\n\n#Create column \"Advertisement\" that combine the other three columns \ndata['Advertisement'] = data[\"TV\"] + data[\"Radio\"] + data[\"Social_Media\"]\n\n#Save input as 2d array in variable x\nx = data[['Advertisement']]\n\n#Save output as 2d array in variable y \ny=data[['Sales']]\n\n#Split input and output to training and testing data\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2,random_state=42)","33e0e3f7":"from numpy import mean\nfrom numpy import std\n# print the mean and standard deviation for input x (Advertisement) and output y (Sales) columns\nprint('Advertisement: mean=%.3f stdv=%.3f' % (mean(x), std(x)))\nprint('Sales: mean=%.3f stdv=%.3f' % (mean(y), std(y)))","9aee6950":"#Compute the correlation between input\/ output variables\ndata.corr(method ='pearson')","cf7be896":"from sklearn import linear_model\n\n#Create our first linear regression model\nmodel_1=linear_model.LinearRegression()#Select linear regression model\nmodel_1.fit(x_train,y_train)\n\n#The coefficients:\nprint(\"coefficients: \", model_1.coef_)#Slope\nprint(\"Intercept: \", model_1.intercept_)#Intercept","eb83781d":"#Plotting the regression line:\nplt.scatter(data[\"Advertisement\"], data[\"Sales\"], color='blue')\nplt.plot(x_train, model_1.coef_*x_train+model_1.intercept_,'-r')\nplt.xlabel(\"Advertisement\")\nplt.ylabel(\"Sales\")","ab5c52ad":"#Predicting Sales for myAD using our model:\nmyAD=np.array(70000000).reshape(1,-1)\nprediction=model_1.predict(myAD)\nestimatd_Sales='{:.6f}'.format(prediction.item()\/1000000)\nprint(\"Estimated Sales is: {} million\".format(estimatd_Sales))","3b433f37":"y_pred = model_1.predict(x_test)","89ca2b25":"from sklearn import metrics\n\n# Calculate the evaluation metrics \n\n#1- Mean Absolute Error (MAE)\nprint('The mean absolute error is: ',metrics.mean_absolute_error(y_test, y_pred))\n\n#2- Mean Squared Error (MSE)\nprint('The mean squared error is: ',metrics.mean_squared_error(y_test, y_pred))\n\n#3- Root Mean Squared Error (RMSE)\nprint('The root mean squared error is: ',np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","76b6d3a2":"data.info()","ebeeadea":"data.drop('Influencer',axis='columns', inplace=True)\ndata.drop('Advertisement',axis='columns', inplace=True)","5aa50d20":"data.info()","ee0cc187":"#Sum budget of each channel\ntype = data[[\"TV\", \"Radio\", \"Social_Media\"]]\ntype.sum()","cb2edbea":"#Plot the correlation between each channel and \"Sales\"\nx = [i for i, _ in enumerate(type)]\ny = type.sum()\nplt.bar(x, y)\nplt.xticks(x, type)","be3f9f38":"data.isnull().values.any()","8de4e503":"plt.scatter(data[\"Social_Media\"],data[\"Sales\"], label = \"Social_Media\",  color=\"orange\")\nplt.scatter(data[\"Radio\"],data[\"Sales\"], label = \"Radio\",  color=\"blue\")\nplt.scatter(data[\"TV\"],data[\"Sales\"], label = \"TV\", color=\"purple\")\nplt.legend()\nplt.show()","dd5e525b":"plt.figure(figsize=(8,5))\nplt.hist(np.log1p(data.TV), bins=30)\nplt.title('Distribution of TV', fontsize=16)\nplt.xlabel('TV')\nplt.ylabel('Frequency')\nplt.show()","d6e1db46":"plt.figure(figsize=(8,5))\nplt.hist(np.log1p(data.Sales), bins=30)\nplt.title('Distribution of Sales', fontsize=16)\nplt.xlabel('Sales')\nplt.ylabel('Frequency')\nplt.show()","30d554c8":"#Save input as 2d array in variable x\nx=data[['TV']]\n#Save output as 2d array in variable y \ny=data[['Sales']]\n\n#Split input and output to training and testing data\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2,random_state=42)","b992d3cc":"# print the mean and standard deviation for input x (TV) and output y (Sales) columns\nprint('TV: mean=%.3f stdv=%.3f' % (mean(x), std(x)))\nprint('Sales: mean=%.3f stdv=%.3f' % (mean(y), std(y)))","2de692bf":"#Compute the correlation between input\/ output variables\ndata.corr(method ='pearson')","c9a314bc":"#Create our second linear regression model\nmodel_2=linear_model.LinearRegression()#Select linear regression model\nmodel_2.fit(x_train,y_train)\n\n#The coefficients:\nprint(\"coefficients: \", model_2.coef_)#Slope\nprint(\"Intercept: \", model_2.intercept_)#Intercept","dc662550":"#Plotting the regression line:\nplt.scatter(data[\"TV\"], data[\"Sales\"], color='blue')\nplt.plot(x_train, model_2.coef_*x_train+model_2.intercept_,'-r')\nplt.xlabel(\"TV\")\nplt.ylabel(\"Sales\")","5638ec05":"#Predicting Sales for myTV using our second model:\nmyTV=np.array(70000000).reshape(1,-1)\nprediction=model_2.predict(myTV)\nestimatd_Sales='{:.6f}'.format(prediction.item()\/1000000)\nprint(\"Estimated Sales is: {} million\".format(estimatd_Sales))","131e1173":"y_pred = model_2.predict(x_test)","eb5bcba7":"# Calculate the evaluation metrics \n\n#1- Mean Absolute Error (MAE)\nprint('The mean absolute error is: ',metrics.mean_absolute_error(y_test, y_pred))\n\n#2- Mean Squared Error (MSE)\nprint('The mean squared error is: ',metrics.mean_squared_error(y_test, y_pred))\n\n#3- Root Mean Squared Error (RMSE)\nprint('The root mean squared error is: ',np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","697627ac":"Submitted by: Section I2\n \n\nAqeelah Jaffar Makki\n\nID No.: 1915289 \n\n\nZainab Abdulghani Melaibari\n\nID No.: 1911643 \n","1be381d8":"Choosing TV column as it is the most influential column for sales","a0f6ffaf":"Now try to apply feature selection to improve our model\u2019s performance."}}