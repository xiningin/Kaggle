{"cell_type":{"740bc3b1":"code","9bf8fcaf":"code","fdecb303":"code","b0413da8":"code","0ccf89ab":"code","d9539767":"code","49f5961c":"code","4a0e98d1":"code","931542a8":"code","7097e43e":"code","f90570d0":"code","615e6bce":"code","3c432c64":"code","f2cfb7bb":"code","5e2c3260":"code","e87f0e5c":"code","2db82867":"code","250a2f8a":"code","05c97fcb":"code","ded4e810":"code","31ac9b57":"code","19a4ef09":"code","ff6b14bd":"code","ca1d739e":"code","744defac":"code","ea0bd96c":"code","151dd349":"code","9d1fbc36":"code","2a7cf428":"code","b2b40629":"code","c270d79e":"code","c71ff999":"code","ca5ceaaa":"code","13ba84b5":"code","1622f9f4":"code","e4595769":"code","a44ec340":"code","e7916a73":"markdown","79f0643b":"markdown","b7c52fd1":"markdown","57a3d2e0":"markdown","08aff0b4":"markdown","ea702e14":"markdown"},"source":{"740bc3b1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9bf8fcaf":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import roc_auc_score, make_scorer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import RandomizedSearchCV\n\n\n\n%matplotlib inline","fdecb303":"df=pd.read_csv(\"\/kaggle\/input\/mushroom-classification\/mushrooms.csv\")","b0413da8":"df","0ccf89ab":"df.info()","d9539767":"plt.figure(figsize=(5,5))\nsns.countplot(df['class'])\nplt.title(\"Distribution of edible and poisonous mushrooms\\n p=poisonous, e=edible\")\nplt.show()","49f5961c":"df['class'].value_counts()","4a0e98d1":"df.columns","931542a8":"# Exploratory Data Analysis","7097e43e":"cat_feature=['cap-shape', 'cap-surface', 'cap-color', 'bruises', 'odor']","f90570d0":"fig, ax=plt.subplots(3, 2, figsize=(25,15))\nfor i in range(5):\n    sns.countplot(cat_feature[i], hue='class', data=df, ax=ax[i\/\/2][i%2])\n    ax[i\/\/2][i%2].set_title(cat_feature[i], fontsize=14)\n    \nfig.suptitle(\"Disribution of Cap-Features in non-poisnous and poisnous mushrooms\", fontsize=20)\nplt.show()","615e6bce":"fig,ax=plt.subplots(1,4,figsize=(20,5))\nsns.countplot('gill-attachment', hue='class', data=df, ax=ax[0])\nax[0].set_title('gill-attachment')\n\nsns.countplot('gill-spacing', hue='class', data=df, ax=ax[1])\nax[1].set_title('gill-spacing')\n\nsns.countplot('gill-size',hue='class', data=df, ax=ax[2])\nax[2].set_title('gill-size')\n\nsns.countplot('gill-color',hue='class', data=df, ax=ax[3])\nax[3].set_title('gill-color')\nfig.suptitle(\"Distribution of gill features in poisnous and non-poisnous mushrooms\", fontsize=20)\n\nplt.show()","3c432c64":"features=['stalk-shape', 'stalk-root', 'stalk-surface-above-ring',\n       'stalk-surface-below-ring', 'stalk-color-above-ring',\n       'stalk-color-below-ring', 'veil-type', 'veil-color', 'ring-number',\n       'ring-type', 'spore-print-color']","f2cfb7bb":"fig, ax=plt.subplots(4,3, figsize=(20,25))\nfor i in range(11):\n    sns.countplot(features[i], hue='class',data=df, ax=ax[i\/\/3][i%3])\n    ax[i\/\/3][i%3].set_title(features[i], fontsize=14)\nplt.suptitle(\"Distribution of features in poisnous and non-poisnous features\", fontsize=14)\nplt.show()","5e2c3260":"fig, ax=plt.subplots(1,2, figsize=(20,8))\n\nsns.countplot('population', hue='class',data=df, ax=ax[0])\nax[0].set_title('population')\n\nsns.countplot('habitat', hue='class', data=df, ax=ax[1])\nax[1].set_title('habitat')\n\nplt.suptitle(\"Role of population and habitat in mushrooms\", fontsize=14)\nplt.show()","e87f0e5c":"columns=df.columns.values\nfor column in columns:\n    le=LabelEncoder()\n    df[column]=le.fit_transform(df[column])\ndf.head()","2db82867":"X=df.drop(['class'], axis=1)\ny=df['class']","250a2f8a":"parameters={'min_samples_leaf':[20,25]}\nforest=RandomForestClassifier(max_depth=15, n_estimators=15)\ngrid=GridSearchCV(forest, parameters, cv=3, n_jobs=-1, verbose=2, scoring=make_scorer(roc_auc_score))","05c97fcb":"grid.fit(X,y)","ded4e810":"grid.best_estimator_\n","31ac9b57":"grid.best_score_","19a4ef09":"grid.best_params_","ff6b14bd":"top_features=10","ca1d739e":"imp_feature=grid.best_estimator_.feature_importances_\nidx=np.argsort(imp_feature)[::-1][0:top_features]\nfeature_name=df.drop('class', axis=1).columns.values","744defac":"plt.figure(figsize=(25,5))\nsns.barplot(x=feature_name[idx], y=imp_feature[idx])\nplt.title(\"Top ten important features that diffrentiate between poisnous and non-poisnous mushrooms\")\nplt.show()","ea0bd96c":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test=train_test_split(X,y,test_size=0.2, random_state=0)","151dd349":"rf=RandomForestClassifier()\nrf_param={\"n_estimators\": list(range(100,500)),\n         \"criterion\":['gini','entropy'],\n         \"max_depth\": list(range(1,10)),\n         \"max_samples\":list(range(1,10))}\nrandom_search=RandomizedSearchCV(rf, rf_param, n_jobs=-1, n_iter=10, scoring='accuracy', verbose=2)","9d1fbc36":"random_search.fit(X,y)","2a7cf428":"print(\"Random Forest Classifier Best estimator is :\", random_search.best_estimator_)\nprint(\"Random Forest Classifier Best parameter is :\", random_search.best_params_)\nprint(\"Random Forest Classifier Best score is :\", random_search.best_score_)\nprint(\"Random Forest Classifier Best index is :\", random_search.best_index_)","b2b40629":"rf=RandomForestClassifier(n_estimators=195, max_samples= 3, max_depth= 7, criterion='gini')\nrf.fit(X_train,y_train)  ","c270d79e":"from sklearn.metrics import confusion_matrix, accuracy_score, classification_report","c71ff999":"print(\"Accuracy score for Random Forest Classifier is:\",round(accuracy_score(rf.predict(X_test), y_test)*100,2),'%')","ca5ceaaa":"xgb_param={\"n_estimators\":list(range(100, 500)),\n          \"max_depth\":list(range(1,10)) ,\n          \"learning_rate\":[0.001, 0.002, 0.003, 0.004, 0.005, 0.006, 0.007, 0.008,0.009, 0.05, 0.09] ,\n          \"min_child_weight\":list(range(1,10))}","13ba84b5":"xgb=XGBClassifier()\nrandom_search=RandomizedSearchCV(xgb, xgb_param, n_iter=10, n_jobs=-1, cv=5, verbose=2)\nrandom_search.fit(X,y)","1622f9f4":"print(\"XGBClassifier best estimator is :\", random_search.best_estimator_)\nprint(\"XGBClassifier best parameters is :\", random_search.best_params_)\nprint(\"XGBClassifier best score is :\", random_search.best_score_)\nprint(\"XGBClassifer best index is\", random_search.best_index_)","e4595769":"xgb=XGBClassifier(n_estimators=147, min_child_weight= 4, max_depth=1, learning_rate=0.05)\nxgb.fit(X_train,y_train)","a44ec340":"print(\"Accuracy score for XGB Classifier is:\", round(accuracy_score(xgb.predict(X_test), y_test)*100,2),\"%\")","e7916a73":"# Edible and Poisonous Mushrooms Dataset\n\n* In mushroom dataset total 22 features are available and all of them are categorical.\n\n### Independent Features are:\n* 1. Cap-Shape- bell=b,conical=c,convex=x,flat=f, knobbed=k,sunken=s\n* 2. Cap-surface- fibrous=f,grooves=g,scaly=y,smooth=s\n* 3. Cap-color: brown=n,buff=b,cinnamon=c,gray=g,green=r,pink=p,purple=u,red=e,white=w,yellow=y\n* 4. Bruises: bruises=t,no=f\n* 5. Odor: almond=a,anise=l,creosote=c,fishy=y,foul=f,musty=m,none=n,pungent=p,spicy=s\n* 6. Gill-attachment: attached=a,descending=d,free=f,notched=n\n* 7. Gill-spacing:close=c,crowded=w,distant=d\n* 8. Gill-size:broad=b,narrow=n\n* 9. Gill-color: broad=b,narrow=n\n* 10. Stalk-shape: enlarging=e,tapering=t\n* 11.Stalk-root: bulbous=b,club=c,cup=u,equal=e,rhizomorphs=z,rooted=r,missing=?\n* 12.Stalk-surface-above-ring: fibrous=f,scaly=y,silky=k,smooth=s\n\n\n* 13.Stalk-surface-below-ring: fibrous=f,scaly=y,silky=k,smooth=s\n* 14.Stalk-color-above-ring: brown=n,buff=b,cinnamon=c,gray=g,orange=o,pink=p,red=e,white=w,yellow=y\n* 15.Stalk-color-below-ring: brown=n,buff=b,cinnamon=c,gray=g,orange=o,pink=p,red=e,white=w,yellow=y\n* 16.Veil-type: partial=p,universal=u\n* 17. Veil-color:brown=n,orange=o,white=w,yellow=y\n* 18.Ring-number: none=n,one=o,two=t\n* 19.Ring-type: cobwebby=c,evanescent=e,flaring=f,large=l,none=n,pendant=p,sheathing=s,zone=z\n* 20.Spore-print-color: black=k,brown=n,buff=b,chocolate=h,green=r,orange=o,purple=u,white=w,yellow=y\n* 21.Population: abundant=a,clustered=c,numerous=n,scattered=s,several=v,solitary=y\n* 22.Habitat: grasses=g,leaves=l,meadows=m,paths=p,urban=u,waste=w,woods=d\n\n### Dependent Features is:\n* 1. class:poisonous=p, edible=e\n\n# Things to do\n* 1. Uploading dataset\n* 2. Exploratory Data Analysis\n* 3. Hyperparameter optimization\n*  a. RandomForestClassifier\n*  b. XGBClassifier\n* 3. Model deployment using:\n*  a. RandomForestClassifier\n*  b. XGBClassifier      ","79f0643b":"# Uploading Dataset","b7c52fd1":"## No Missing value found\n## No imbalanced dataset","57a3d2e0":"# Hyperparameter optimization\n\n* RandomForestClassifier\n* XGBClassifier","08aff0b4":"# 1. RandomForestClassifier\n","ea702e14":"# 2.XGBClassifier"}}