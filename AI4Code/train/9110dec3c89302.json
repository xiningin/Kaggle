{"cell_type":{"f93b2cef":"code","57de6915":"code","288f0660":"code","8d5999f6":"code","8afde395":"code","ab066a80":"code","ac5318e9":"code","ea59631e":"code","cc2758c4":"code","efb8a3f0":"code","d23d95f9":"code","3b597d49":"code","8a0e3f23":"code","1feb64a4":"code","391bc2ff":"code","5adee091":"code","62daaac6":"code","1609d62c":"code","22285666":"markdown"},"source":{"f93b2cef":"# Importando as bibliotecas que ser\u00e3o utilizadas:\n\nimport os\nimport shapefile\nfrom json import dumps\nimport numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport descartes as dc\nimport shapefile as shp\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom branca.colormap import linear\nfrom geopandas import GeoSeries\nimport shapely\nimport json\nimport plotly.express as px","57de6915":"# Inicializando o Visualization Set:\n\nsns.set(style='whitegrid', palette='pastel', color_codes=True)\nsns.mpl.rc('figure', figsize=(10,6))","288f0660":"# Elencando todos os arquivos dispon\u00edveis no diret\u00f3rio:\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8d5999f6":"# Lendo os arquivos necess\u00e1rios e abrindo o mapa vetor:\n\ngdf1 = gpd.read_file('\/kaggle\/input\/classificao-municpios-enem-2018\/BR_Municipios_2019.shp')\n\nsf = gpd.GeoDataFrame(gdf1)","8afde395":"# Verificando o tamanho do Geodataframe gerado:\n\nsf.shape","ab066a80":"# Visualizando o shapefile:\n\nsf.head(5)","ac5318e9":"# Gerando um mapa limpo:\n\nsf.plot(figsize=(20,20), linewidth=0.3)","ea59631e":"# Lendo o arquivo em formato Geopandas:\n\ndf = gpd.read_file('\/kaggle\/input\/classificao-municpios-enem-2018\/ENEM_2018_Classificacao_Municipios.csv')","cc2758c4":"# Verificando uma amostra do dataset lido:\n\ndf.sample(5)","efb8a3f0":"# Verificando o tamanho do Geodataframe gerado:\n\ndf.shape","d23d95f9":"# Retirar as colunas com informa\u00e7\u00f5es que n\u00e3o ser\u00e3o relevantes para a an\u00e1lise:\n\ndf = df.drop(['SG_UF_RESIDENCIA', 'NO_MUNICIPIO_RESIDENCIA', 'NOME_MUNICIPIO', 'NU_NOTA_CN_Mean', 'NU_NOTA_CH_Mean', 'NU_NOTA_LC_Mean', \n              'NU_NOTA_MT_Mean', 'NU_NOTA_REDACAO_Mean', 'NU_NOTA_CN_StdDev', 'NU_NOTA_CH_StdDev', 'NU_NOTA_LC_StdDev', 'NU_NOTA_MT_StdDev', \n              'NU_NOTA_REDACAO_StdDev', 'NU_NOTA_CN_Var','NU_NOTA_CH_Var', 'NU_NOTA_LC_Var', 'NU_NOTA_MT_Var', 'NU_NOTA_REDACAO_Var', 'NU_NOTA_CN_N', \n              'NU_NOTA_CH_N', 'NU_NOTA_LC_N', 'NU_NOTA_MT_N', 'NU_NOTA_REDACAO_N', 'NU_NOTA_CN_Median', 'NU_NOTA_CH_Median', 'NU_NOTA_LC_Median', \n              'NU_NOTA_MT_Median', 'NU_NOTA_REDACAO_Median', 'NU_NOTA_CN_Q3', 'NU_NOTA_CH_Q3', 'NU_NOTA_LC_Q3', 'NU_NOTA_MT_Q3', 'NU_NOTA_REDACAO_Q3', \n              'NU_NOTA_CN_P90', 'NU_NOTA_CH_P90', 'NU_NOTA_LC_P90', 'NU_NOTA_MT_P90', 'NU_NOTA_REDACAO_P90', 'Distance', 'geometry', 'LATITUDE', 'LONGITUDE'], axis=1)\ndf.head()","3b597d49":"# Verificando os tipos de dados que comp\u00f5em o dataframe:\n\ndf.dtypes","8a0e3f23":"# Convertendo os valores da coluna 'Segment Id' de object para int:\n\ndf['Segment Id'] = df['Segment Id'].astype(object).astype(int)","1feb64a4":"# Confirmando a convers\u00e3o:\ndf.dtypes","391bc2ff":"# Concatenando os datasets:\n\nmerged = sf.set_index('CD_MUN').join(df.set_index('CO_MUNICIPIO_RESIDENCIA'))\nmerged.head()","5adee091":"# Verificando os tipos de dados que comp\u00f5em o novo dataframe:\n\nmerged.dtypes","62daaac6":"# plotando o mapa do Brasil, com todos os seus munic\u00edpios e com a identifica\u00e7\u00e3o, via mapa de calor, de acordo com a id de cada munic\u00edpio segundo o arquivo .csv:\n\n# plota estimativas de popula\u00e7\u00e3o \/ dados com uma legenda mais acurada\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\nfig, ax = plt.subplots(1, figsize=(20, 20), linewidth=0.3)\n\ndivider = make_axes_locatable(ax)\n\ncax = divider.append_axes(\"right\", size=\"3%\", pad=0.1)\n\n# Adicionando um t\u00edtulo\nax.set_title('Classifica\u00e7\u00e3o Enem - Brasil', color='#555555', fontdict={'fontsize': '30', 'fontweight' : '3'})\n\n# Criando uma nota de rodap\u00e9\nax.annotate('Fontes: Microdados do Enem (INEP) e Malha Municipal (IBGE)', xy=(0.1, .09), xycoords='figure fraction', horizontalalignment='left', verticalalignment='top', fontsize=15, color='#555555')\n\nmerged.plot(column='Segment Id', ax=ax, cmap='YlOrRd', linewidth=0.2, legend=True, cax=cax)\n\nplt.rcParams['axes.facecolor'] = 'lightgray'","1609d62c":"# Salvando o mapa\nfig.savefig('Brasil_enem.png', dpi=600)   ","22285666":"# Organizando os Dados"}}