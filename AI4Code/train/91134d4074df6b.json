{"cell_type":{"f844eac8":"code","e3805d14":"code","2ef3d8d0":"code","e423585d":"code","0d166f4a":"code","f06cd234":"code","22ec81aa":"code","449fb539":"code","503bacb5":"code","fc386b99":"code","542f6616":"code","3047310f":"code","041040f0":"code","e1cdefd0":"code","65a93374":"code","05b1b8ba":"code","219c5965":"code","a6a3a9bd":"code","cf9e9bfd":"code","399282ae":"code","a7c7be8f":"code","5d6f825d":"code","1497e0c4":"code","ea9bd783":"code","8c034c1b":"code","ab7c947e":"code","de080e4c":"code","40c44290":"code","b9e11438":"code","46f7cdf1":"code","8d86ecc5":"code","7b4c023f":"code","12280fb5":"code","faf39332":"code","c65d1f84":"code","f0d4cdbc":"code","39a46c09":"code","04142f1a":"markdown","5d6927b8":"markdown","6908212c":"markdown","9bc4fd81":"markdown","21c39688":"markdown","b7df36ee":"markdown"},"source":{"f844eac8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","e3805d14":"current_dir = %pwd\ntrain_dataset = pd.read_csv('..\/input\/titanic\/train.csv')[['PassengerId','Sex' ,'Pclass','Age','SibSp','Fare','Embarked','Parch', 'Survived']]\ntest_dataset = pd.read_csv('..\/input\/titanic\/test.csv')[['PassengerId','Sex' ,'Pclass','Age','SibSp','Fare','Embarked','Parch']]\ntrain_dataset.head()","2ef3d8d0":"train_dataset['Sex'].replace('male',1,inplace=True) # male -> 1\ntest_dataset['Sex'].replace('male',1,inplace=True) # male -> 1\n\ntrain_dataset['Sex'].replace('female',0,inplace=True) # female -> 0\ntest_dataset['Sex'].replace('female',0,inplace=True) # female -> 0","e423585d":"train_dataset['Embarked'].replace(np.nan,'S',inplace=True)\ntest_dataset['Embarked'].replace(np.nan,'S',inplace=True)","0d166f4a":"def change_to_number(x):\n    if x == 'C':\n        return 0\n    elif x == 'Q':\n        return 1\n    elif x == 'S':\n        return 2","f06cd234":"train_dataset.loc[:,'Embarked'] = train_dataset['Embarked'].apply(change_to_number)\ntest_dataset.loc[:,'Embarked'] = test_dataset['Embarked'].apply(change_to_number)","22ec81aa":"train_dataset.fillna(train_dataset['Age'].mean(), inplace=True)\ntest_dataset.fillna(test_dataset['Age'].mean(), inplace=True)","449fb539":"x_train = np.array(train_dataset[['Sex','Pclass','Age','SibSp','Fare','Embarked','Parch']])\ny_train = np.array(train_dataset['Survived'])\nx_test = np.array(test_dataset[['Sex','Pclass','Age','SibSp','Fare','Embarked','Parch']])","503bacb5":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression(max_iter = 500)","fc386b99":"model.fit(x_train,y_train)","542f6616":"y_pred = model.predict(x_train)","3047310f":"accuracy = model.score(x_train, y_train)","041040f0":"accuracy","e1cdefd0":"test_predicted = model.predict(x_test)","65a93374":"predicted_data = pd.Series(test_predicted)\ndf = pd.DataFrame({'PassengerId' : test_dataset.PassengerId ,\"Survived\" : predicted_data})\ndf.head()","05b1b8ba":"df.set_index('PassengerId', inplace=True)\ndf.head()","219c5965":"df.to_csv(current_dir+r'\/out.csv')","a6a3a9bd":"bias = np.array([[1 for i in range(891)]]).T\nx_train = np.concatenate((bias,x_train),axis=1)","cf9e9bfd":"y_train = y_train.reshape((891,1))","399282ae":"x_train.shape","a7c7be8f":"y_train.shape","5d6f825d":"thetas = np.random.randn(x_train.shape[1],1)\nthetas","1497e0c4":"def h(x,thetas):\n    return 1 \/ (1 + np.exp(-(x @ thetas)))","ea9bd783":"def loss(h,y):\n    epsilon = 1e-5  \n    m = h.shape[0]\n    return (-1\/m) *(y.T @ np.log(np.abs(h) + epsilon) + (1-y).T @ np.log(np.abs(1-h) + epsilon))","8c034c1b":"prediction = h(x_train,thetas)\nloss(prediction,y_train)","ab7c947e":"losses = []\nlr = 1e-3\nepoch = 200\nfor i in range(epoch):\n    my_h = h(x_train,thetas)\n    gradient = x_train.T @ (my_h - y_train)\n    thetas-= lr * ( gradient \/ y_train.shape[0])\n    epoch_loss = loss(my_h,y_train)\n    losses.append(epoch_loss)","de080e4c":"plt.scatter([i for i in range(epoch)],losses)","40c44290":"test_data.head()","b9e11438":"predicted_train = np.where(h(x_train,thetas)>0.5,1,0)","46f7cdf1":"correct_count = np.isclose(predicted_train,y_train).sum()\ncorrect_count","8d86ecc5":"train_accuracy = (correct_count\/x_train.shape[0])*100\ntrain_accuracy","7b4c023f":"bias_b = np.array([[1 for i in range(x_test.shape[0])]]).T\nx_test = np.concatenate((bias_b,x_test),axis=1)","12280fb5":"predicted = h(x_test,thetas)\npredicted = np.where(predicted>0.5,1,0)","faf39332":"predicted_data = pd.Series(predicted.reshape(predicted.shape[0]))","c65d1f84":"df = pd.DataFrame({'PassengerId' : test_dataset.PassengerId ,\"Survived\" : predicted_data})\ndf.head()","f0d4cdbc":"df.set_index('PassengerId', inplace=True)\ndf.head()","39a46c09":"df.to_csv(current_dir+r'\/out.csv')","04142f1a":"# Training","5d6927b8":"# Validating on Train Dataset","6908212c":"# Results on TestDataSet","9bc4fd81":"# PreProcessing","21c39688":"# Self-implemented","b7df36ee":"# Sklearn"}}