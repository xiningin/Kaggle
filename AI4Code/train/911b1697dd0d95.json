{"cell_type":{"2cfc7414":"code","6e3ff19e":"code","c7f4f796":"code","3e96dd82":"code","b37b0cd6":"code","18970b73":"code","20187bb6":"code","9b65d953":"code","f40bc851":"code","bb36119c":"code","315b303f":"code","f724b05c":"code","eb5950ce":"code","b910c701":"code","fbbab679":"code","20090dce":"code","7040394a":"code","4047f657":"code","ca0996f9":"code","e189ac8d":"code","ca185712":"markdown","bf944586":"markdown","877756c0":"markdown","0a9d1cd2":"markdown","a8edb762":"markdown","d1f2201d":"markdown","19d992b2":"markdown","cd447091":"markdown","389d6fb9":"markdown","b3d10350":"markdown","0738cefe":"markdown","e872d30a":"markdown","5381a001":"markdown","922fffed":"markdown","55ffafbb":"markdown","19df39f4":"markdown","bb24c4a4":"markdown","683e6926":"markdown"},"source":{"2cfc7414":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6e3ff19e":"import pandas as pd\niris_dataset = pd.read_csv('\/kaggle\/input\/iris-flower-dataset\/IRIS.csv')\niris = iris_dataset.copy()\niris.tail()","c7f4f796":"def basic_details(data):\n    print(f\"shape of dataset:{data.shape}\\n Number of rows:{iris.shape[0]} \\n Number of Coulmns:{iris.shape[1]}\")\n    print(f\"Coolumn names:{iris.columns}\")\n    print(f\"Data types:{iris.dtypes}\")\n    \nbasic_details(iris)","3e96dd82":"iris['species'].value_counts()","b37b0cd6":"# Tabular method\ndef UniVariate_tabular(data):\n    print(\"Central tendency:\\n\",iris.describe())\nUniVariate_tabular(iris)","18970b73":"#Graphical Method\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\ndef UniVariate_graphical(dataset):\n    data_types = dataset.select_dtypes([np.int, np.float])\n    for i, col in enumerate(data_types.columns):\n        plt.figure(i)\n        sns.boxplot(x = col,orient='v',width=0.4,data = data_types)\nUniVariate_graphical(iris)  ","20187bb6":"sns.set_style('darkgrid')\nsns.scatterplot(x=\"sepal_length\", y=\"sepal_width\", data=iris)","9b65d953":"sns.set_style('darkgrid')\nsns.scatterplot(x=\"sepal_length\", y=\"sepal_width\",hue='species',data=iris)","f40bc851":"sns.set_style('darkgrid')\nsns.pairplot(iris, hue='species',height=3,corner= True)","bb36119c":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score","315b303f":"def change_label(col):\n    if col == 'Iris-virginica':\n        return 1\n    elif col == 'Iris-setosa':\n        return 2\n    elif col == 'Iris-versicolor':\n        return 3","f724b05c":"iris['species'] = iris['species'].apply(lambda x : change_label(x))","eb5950ce":"x = iris.iloc[:,:-1] # features\ny = iris.iloc[:,-1:] # labels\n#print(type(y))\n#print(y.head())","b910c701":"train_x,test_x,train_y,test_y = train_test_split(x,y,test_size=0.3,random_state = 42)\n\n#print(train_x.head())\n#print(train_y.head())\n#print(test_x.head())\n#print(test_y.head())","fbbab679":"def model_used(train_x,train_y,test_x,test_y):\n    model_knn = KNeighborsClassifier(n_neighbors=3)\n    model_knn.fit(train_x,train_y.values.ravel())\n    prediction_knn = model_knn.predict(test_x)\n    print(\"prediction_knn\",prediction_knn)\n    print('The accuracy of the KNN is',accuracy_score(prediction_knn,test_y))\n    print(\"*******Logistic Regression**********\")\n    model_lr = LogisticRegression()\n    model_lr.fit(train_x,train_y.values.ravel())\n    prediction_lr = model_lr.predict(test_x)\n    print(\"prediction Logistic Regression\",prediction_lr)\n    print('The accuracy of the Logistic Regression is',accuracy_score(prediction_lr,test_y))\n    \nmodel_used(train_x,train_y,test_x,test_y)\n    \n    \n    ","20090dce":"sns.set_style('darkgrid')\nsns.scatterplot(x=\"petal_length\", y=\"petal_width\",hue='species',data=iris_dataset)","7040394a":"iris_dataset.species.value_counts()","4047f657":"x_p = iris.iloc[:,[2,3]]\nprint(x_p.head())\ny_p = iris.iloc[:,-1:]\nprint(y_p.head())","ca0996f9":"xp_train,xp_test,yp_train,yp_test = train_test_split(x_p,y_p,test_size=0.3)\n","e189ac8d":"def model_used_only_petal(xp_train,yp_train,xp_test,yp_test):\n    model_knn = KNeighborsClassifier(n_neighbors=3)\n    model_knn.fit(xp_train,yp_train.values.ravel())\n    prediction_knn = model_knn.predict(xp_test)\n    print(\"prediction_knn\",prediction_knn)\n    print('The accuracy of the KNN is',accuracy_score(prediction_knn,yp_test))\n    print(\"*******Logistic Regression**********\")\n    model_lr = LogisticRegression()\n    model_lr.fit(xp_train,yp_train.values.ravel())\n    prediction_lr = model_lr.predict(xp_test)\n    print(\"prediction Logistic Regression\",prediction_lr)\n    print('The accuracy of the Logistic Regression is',accuracy_score(prediction_lr,yp_test))\n    \nmodel_used_only_petal(xp_train,yp_train,xp_test,yp_test)\n    \n    ","ca185712":"### Observations\n1. petal_length and petal_width is good to seperate setosa( if petal_length <=2 than setos)\n2. 'virginica' and 'vercicolor' is also lineraly seperable with some error.","bf944586":"* we have 3 labels but by above plot we are unable to figureout class crossponding to datapoint.\n* define hue in scatterplot","877756c0":"* We can draw plair plot to see the relationship among other variables\n* pairplor:'pair wise scatter plot'","0a9d1cd2":"* 'species' is target\/lable column \n### Observation\n1. Our objective is to make a classification model \n2. it has 3 classes\n3. balanced dataset all classes have equal number of datapoints","a8edb762":"* we will make ou model based on these two features","d1f2201d":"### Apply Algorithm\n1. Logistic Regression\n2. KNN\n","19d992b2":"![iris flowers](https:\/\/s3.amazonaws.com\/assets.datacamp.com\/blog_assets\/Machine+Learning+R\/iris-machinelearning.png)","cd447091":"* accuracy will vary if you wont set random_state = \n* **random_state**:Controls the shuffling applied to the data before applying the split\n","389d6fb9":"* here we are geeting 100% accuracy\n### will verify our one observation\n1. petal_length and petal_width is good to seperate setosa( if petal_length <=2 than setos)\n2. 'virginica' and 'vercicolor' is also lineraly seperable with some error.\n","b3d10350":"# Common details of dataset","0738cefe":"* Univariate analysis help us to detect outliers too but we could see that only sepal_width has few outliers","e872d30a":"The Iris flower data set or Fisher's Iris data set is a multivariate data set introduced by the British statistician and biologist Ronald Fisher in his 1936 paper The use of multiple measurements in taxonomic problems as an example of linear discriminant analysis. It is sometimes called Anderson's Iris data set because Edgar Anderson collected the data to quantify the morphologic variation of Iris flowers of three related species. Two of the three species were collected in the Gasp\u00e9 Peninsula \"all from the same pasture, and picked on the same day and measured at the same time by the same person with the same apparatus\".","5381a001":"# Uni-variate analysis\n1. look for only one variable at time\n2. more helpful for 'Regression problems\"\n","922fffed":"### scatter plot for \"petal_length and petal_width\"","55ffafbb":"### observations\n1. mean of sepal_length is higher than other variable(see the imge)","19df39f4":"# Bivariate Analysis\n* two variables are studied together for empirical relationship\n* for this will draw scatterplot","bb24c4a4":"* setosa is represented by blue points , we can easily distinguish 'setosa' from other two labels.\n### Observation \n1. sepal_width and sepal_length can be important feature to classify labels","683e6926":"### Observations\n1. 5 variables (4 independent , 1 dependent)\n2. 'species' is dependent variable \n3. it has only continuous variable ('float')"}}