{"cell_type":{"b87e82b7":"code","2acb99d1":"code","7f86c81f":"code","dbb07cce":"code","5ecf68d1":"code","71988020":"code","f9bad20e":"code","de0907d4":"code","48b67d9b":"code","536e6eff":"code","f69e2e21":"code","48800afc":"code","f45c38b8":"code","6dd7d0ea":"code","f3f6ae67":"markdown","e412578e":"markdown","e0ca25e8":"markdown","fdbc4b11":"markdown","a1a7b601":"markdown","805a5d43":"markdown","b2f48132":"markdown","e3d8248d":"markdown","a5ef36a4":"markdown","30977566":"markdown","2c1c6d54":"markdown","4f3a48f7":"markdown","e1d4ebfa":"markdown"},"source":{"b87e82b7":"import numpy as np \nimport pandas as pd\nfrom sklearn.tree import DecisionTreeClassifier","2acb99d1":"df = pd.read_csv(\"..\/input\/drug200.csv\")\ndf.head()","7f86c81f":"np.size(df)","dbb07cce":"X = df[['Age', 'Sex', 'BP', 'Cholesterol', 'Na_to_K']].values\nX[0:5]","5ecf68d1":"from sklearn import preprocessing\nle_sex = preprocessing.LabelEncoder()\nle_sex.fit(['F','M'])\nX[:,1] = le_sex.transform(X[:,1]) \n\n\nle_BP = preprocessing.LabelEncoder()\nle_BP.fit([ 'LOW', 'NORMAL', 'HIGH'])\nX[:,2] = le_BP.transform(X[:,2])\n\n\nle_Chol = preprocessing.LabelEncoder()\nle_Chol.fit([ 'NORMAL', 'HIGH'])\nX[:,3] = le_Chol.transform(X[:,3]) \n\nX[0:5]\n","71988020":"#target value\ny = df[\"Drug\"]\ny","f9bad20e":"from sklearn.model_selection import train_test_split","de0907d4":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=3)","48b67d9b":"Tree = DecisionTreeClassifier(criterion=\"entropy\", max_depth = 4)\nTree # it shows the default parameters","536e6eff":"Tree.fit(X_train,y_train)","f69e2e21":"pred =Tree.predict(X_test)\npred","48800afc":"print (pred [0:5])\nprint (y_test [0:5])","f45c38b8":"from sklearn import metrics\nimport matplotlib.pyplot as plt\nprint(\"DecisionTrees's Accuracy: \", metrics.accuracy_score(y_test,pred))","6dd7d0ea":"from sklearn import tree\nplt.figure(figsize=(25,10))\ntree.plot_tree(Tree,filled=True, \n              rounded=True, \n              fontsize=14);","f3f6ae67":"Let's predict it","e412578e":"Preparing the data","e0ca25e8":"We will be using train\/test split on our decision tree. Let's import train_test_split from sklearn.cross_validation.","fdbc4b11":"We will first create an instance of the DecisionTreeClassifier called Tree.\n","a1a7b601":"We wil create test and train data","805a5d43":"In the above array some values in the dataset are not numeric such as Sex or BP. Unfortunately, Sklearn Decision Trees cannot handle these  variables. Hence we need to convert the same into numeric. pandas.get_dummies() Convert non-numeric variable into dummy\/indicator variables.","b2f48132":"We will take some of the coloumns that are needed for the analaysis ","e3d8248d":"Create the Decision Tree and Visualize it!","a5ef36a4":"We will use Decision tree classification to predict the result from our modal.","30977566":"Lets import the libarary needed.","2c1c6d54":"About the data: The data is about a list of pateint having a list of disease. Through the model we will predict which drug should be provided to the patient.","4f3a48f7":"Lets Calculate the size of the data","e1d4ebfa":"Above we have changed the values into 0,1,2 as numeric."}}