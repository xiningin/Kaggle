{"cell_type":{"e68c2f90":"code","8f035f43":"code","b62ed208":"code","5314efcf":"code","677ae13b":"code","0c8f653b":"markdown","5b705072":"markdown","41b05921":"markdown"},"source":{"e68c2f90":"import datetime\nimport numpy as np\nimport pandas as pd\n\nimport plotly.graph_objects as go\nfrom ipywidgets import widgets\nfrom ipywidgets import interact","8f035f43":"df = pd.read_csv('..\/input\/nyc-flights-2013\/nyc_flights.csv')\ndf = df.drop(df.columns[[0]], axis=1)","b62ed208":"#Do we filter data for a particular month?\nuse_month_widget = widgets.Checkbox(\n    description='Focus on particular month: ',\n    value=True,\n)\n\n#If so, which one?\nmonth_widget = widgets.IntSlider(\n    value=1.0,\n    min=1.0,\n    max=12.0,\n    step=1.0,\n    description='Month:',\n    continuous_update=False\n)\n\n#Name of the carrier\ncarrier_widget = widgets.Dropdown(\n    description='Airline:   ',\n    value='DL',\n    options=df['carrier'].unique().tolist()\n)\n\n#Origin airport\norigin_widget = widgets.Dropdown(\n    options=list(df['origin'].unique()),\n    value='LGA',\n    description='Origin Airport:',\n)\n\n\n# Create a figure which we will update\ntrace1 = go.Histogram(x=df['arr_delay'], opacity=0.75, name='Arrival Delays')\ntrace2 = go.Histogram(x=df['dep_delay'], opacity=0.75, name='Departure Delays')\ng = go.Figure(\n            data=[trace1, trace2],\n            layout=go.Layout(\n                        title=dict(text='NYC FlightDatabase'),\n                        barmode='overlay'\n                        )\n            )","5314efcf":"#Make sure the selected choices are sensible\ndef validate(origin, carrier):\n    if origin in df['origin'].unique() and carrier in df['carrier'].unique():\n        return True\n    else:\n        return False","677ae13b":"#Allows us to interactively change the selection parameters\n@interact(\n    month     = month_widget, \n    carrier   = carrier_widget, \n    origin    = origin_widget, \n    use_month = use_month_widget\n)\n#We must provide default values, otherwise the widgets do not show up\ndef interactive_plot(use_month = 'True', month = 1, carrier = 'DL', origin = 'LGA'):\n    \n    #Assert good choices were selected\n    if validate(origin, carrier):\n        \n        #Filter by month?\n        if use_month:\n            filter_list = [\n                            m and c and o\n                            for \n                            m, c, o\n                            in\n                            zip(df['month'] == month, df['carrier'] == carrier,\n                               df['origin'] == origin)\n                          ]\n        else:\n            filter_list = [\n                            c and o \n                            for \n                            c, o\n                            in\n                            zip(df['carrier'] == 'DL', df['origin'] == origin)\n                          ]\n            \n        #Select data according to our choices\n        temp_df = df[filter_list]\n            \n        #Results to plot\n        x1 = temp_df['arr_delay']\n        x2 = temp_df['dep_delay']\n        \n        with g.batch_update():\n            g.data[0].x = x1\n            g.data[1].x = x2\n            g.layout.barmode = 'overlay'\n            g.layout.xaxis.title = 'Delay in Minutes'\n            g.layout.yaxis.title = 'Number of Delays'\n        g.show()","0c8f653b":"This notebook allows user to study departure and arrival delays of flights from NYC airports in an interactive manner.\n\nFrom https:\/\/plotly.com\/python\/figurewidget-app\/\n\nUnfortunately, it was not possible to use the tutorial code \"as is\" due to what appears an issue with FigureWidget. However, it is still possible to create an interactive plot using ipywidgets.interact.\n\n# Load libraries, data","5b705072":"# Interactive plot","41b05921":"# Define widgets that will allow us to interact with the plot"}}