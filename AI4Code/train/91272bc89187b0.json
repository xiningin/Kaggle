{"cell_type":{"9e8277f8":"code","2cae3366":"code","56a43920":"code","0ba13c54":"code","30bfcf6b":"code","0f0e058b":"code","81d06f51":"code","b9f54177":"code","f3ee17ca":"code","7490f89d":"code","54246dba":"code","6e01dbeb":"code","4b78de6c":"code","86e168df":"code","faae0865":"code","4c2a6b2f":"markdown","d915398c":"markdown","e6888322":"markdown","c1885461":"markdown","0f043ab1":"markdown","90bbd971":"markdown","bd3aa136":"markdown","c7ea59d1":"markdown","c0212db8":"markdown","febdb037":"markdown","308e8476":"markdown"},"source":{"9e8277f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        pass\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2cae3366":"dataset = pd.read_csv(\"..\/input\/flipkart-headphones-dataset\/flipkart_headphones.csv\")\ndf = dataset.copy()\ndf.head(10)","56a43920":"df.describe()","0ba13c54":"df[\"company\"] = df[\"title\"].apply(lambda x: x.split()[0])\ndf[\"company\"].nunique()","30bfcf6b":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","0f0e058b":"rating = df[df[\"avg_rating\"] == 5]\nprint(rating[\"company\"].unique())","81d06f51":"plt.figure(figsize=(10, 7))\nsns.barplot(x=df[\"selling_price\"], y=df[\"type\"])\nplt.show()","b9f54177":"max_prices = df[df[\"selling_price\"]>3500]\nsns.histplot(x=max_prices[\"company\"])\nplt.show()","f3ee17ca":"min_prices = df[(df[\"selling_price\"]<3500) & (df[\"avg_rating\"] > 4)]\nmin_prices[\"company\"].mode()","7490f89d":"df[df[\"selling_price\"] == df[\"selling_price\"].max()]","54246dba":"df[df[\"selling_price\"] == df[\"selling_price\"].min()]","6e01dbeb":"company_sold = df.groupby(\"company\")[\"selling_price\"].sum().sort_values(ascending=False).head(30)","4b78de6c":"plt.figure(figsize=(11, 11))\nplt.pie(company_sold.values, labels=company_sold.index, autopct='%0.1f%%')\nplt.title('Selling prices per company')\nplt.show()","86e168df":"types = df.groupby([\"type\"]).agg({\"type\":\"count\"})[\"type\"].sort_values(ascending=False).head(8)\nplt.figure(figsize=(11, 11))\nplt.pie(types.values, labels=types.index, autopct='%0.1f%%')\nplt.title('Selling by types')\nplt.show()","faae0865":"plt.figure(figsize=(7, 7))\nsns.kdeplot(x=df[\"avg_rating\"], hue=df[\"type\"])\nplt.show()","4c2a6b2f":"***These are the companies which have 5\/5 rating***","d915398c":"**So that's it from my side.\nIf you like it do upvote**","e6888322":"**Any doubts and suggestions comment it**","c1885461":"***On the ear type and true wireless has good selling price***","0f043ab1":"***We could understand that sony company produces commodities more than 3500***","90bbd971":"# Gaining insights","bd3aa136":"**Now lets see which companies has best selling price**","c7ea59d1":"So this is the most expensive headset in this dataset and it's selling price is 7999","c0212db8":"***So boAt company produces good quality and min price headphones***","febdb037":"So this is the most cheap headset in this dataset and it's selling price is 88 and it has good \nrating of 4.0","308e8476":"***We'll now see the most expensive and most cheap headset***"}}