{"cell_type":{"ef969b06":"code","91752b0b":"code","ff1c75a0":"code","083bfac4":"code","a84bde57":"code","90b4f3e3":"code","e29fdf53":"code","6c1b7b98":"markdown","f59cb249":"markdown","2a9108a6":"markdown","0baf71ad":"markdown","2ccb7801":"markdown","0785a6f5":"markdown","792343cb":"markdown","44a439e6":"markdown","a1366893":"markdown"},"source":{"ef969b06":"# Set up feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.sql.ex3 import *\nprint(\"Setup Complete\")","91752b0b":"from google.cloud import bigquery\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"hacker_news\" dataset\ndataset_ref = client.dataset(\"hacker_news\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)\n\n# Construct a reference to the \"comments\" table\ntable_ref = dataset_ref.table(\"comments\")\n\n# API request - fetch the table\ntable = client.get_table(table_ref)\n\n# Preview the first five lines of the \"comments\" table\nclient.list_rows(table, max_results=5).to_dataframe()","ff1c75a0":"# Query to select prolific commenters and post counts\nprolific_commenters_query = \"\"\"\n        SELECT author, COUNT(1) AS NumPosts \n        FROM `bigquery-public-data.hacker_news.comments`\n        GROUP BY author\n        HAVING COUNT(1) > 10000\n        \"\"\" # Your code goes here\n\n# Set up the query (cancel the query if it would use too much of \n# your quota, with the limit set to 1 GB)\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\nquery_job = client.query(prolific_commenters_query, job_config=safe_config)\n\n# API request - run the query, and return a pandas DataFrame\nprolific_commenters = query_job.to_dataframe()\n\n# View top few rows of results\nprint(prolific_commenters.head())\n\n# Check your answer\nq_1.check()","083bfac4":"q_1.solution()","a84bde57":"# Write your query here and figure out the answer\n# Query to select prolific commenters and post counts\nprolific_commenters_query = \"\"\"\n        SELECT  COUNT(1) AS Del \n        FROM `bigquery-public-data.hacker_news.comments`\n        where deleted=True\n        \"\"\" # Your code goes here\n\n# Set up the query (cancel the query if it would use too much of \n# your quota, with the limit set to 1 GB)\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\nquery_job = client.query(prolific_commenters_query, job_config=safe_config)\n\n# API request - run the query, and return a pandas DataFrame\nprolific_commenters = query_job.to_dataframe()\n\n# View top few rows of results\nprint(prolific_commenters.head())","90b4f3e3":"num_deleted_posts = 227736 # Put your answer here\n\n# Check your answer\nq_2.check()","e29fdf53":"q_2.solution()","6c1b7b98":"For the solution, uncomment the line below.","f59cb249":"# Introduction\n\nQueries with **GROUP BY** can be powerful. There are many small things that can trip you up (like the order of the clauses), but it will start to feel natural once you've done it a few times. Here, you'll write queries using **GROUP BY** to answer questions from the Hacker News dataset.\n\nBefore you get started, run the following cell to set everything up:","2a9108a6":"### 2) Deleted comments\n\nHow many comments have been deleted? (If a comment was deleted, the `deleted` column in the comments table will have the value `True`.)","0baf71ad":"# Keep Going\n**[Click here](https:\/\/www.kaggle.com\/dansbecker\/order-by)** to move on and learn about the **ORDER BY** clause.","2ccb7801":"---\n**[SQL Home Page](https:\/\/www.kaggle.com\/learn\/intro-to-sql)**\n\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/161314) to chat with other Learners.*","0785a6f5":"# Exercises\n\n### 1) Prolific commenters\n\nHacker News would like to send awards to everyone who has written more than 10,000 posts. Write a query that returns all authors with more than 10,000 posts as well as their post counts. Call the column with post counts `NumPosts`.\n\nIn case sample query is helpful, here is a query you saw in the tutorial to answer a similar question:\n```\nquery = \"\"\"\n        SELECT parent, COUNT(1) AS NumPosts\n        FROM `bigquery-public-data.hacker_news.comments`\n        GROUP BY parent\n        HAVING COUNT(1) > 10\n        \"\"\"\n```","792343cb":"**[SQL Home Page](https:\/\/www.kaggle.com\/learn\/intro-to-sql)**\n\n---\n","44a439e6":"The code cell below fetches the `comments` table from the `hacker_news` dataset.  We also preview the first five rows of the table.","a1366893":"For the solution, uncomment the line below."}}