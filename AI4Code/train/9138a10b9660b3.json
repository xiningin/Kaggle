{"cell_type":{"1e2352a6":"code","bce39d43":"code","b4ac6148":"code","8d08da72":"code","d319a116":"code","aece1c55":"code","537893b4":"code","93055032":"code","1b383de0":"code","524fc20e":"code","6f7db4b1":"code","cc404869":"code","63f63934":"code","4e1838fe":"code","77d2f957":"code","3dac95bf":"code","6cc2132c":"code","0f30b87c":"code","ab5f893a":"code","61892b9b":"code","9e76cd3d":"code","11e9adf5":"code","0263045b":"code","5c873af5":"code","92a83038":"code","8d53fd53":"code","fce37009":"code","338a282c":"code","d298d1d8":"code","40bc05e5":"code","8140be9d":"code","5ce377fb":"code","d0186b8c":"code","6d77f59c":"code","ad689f0a":"code","3c653023":"code","9ff844cf":"code","9b6b513f":"code","4e8cc777":"code","841622eb":"code","29dd68da":"code","216f1f85":"code","949a4fb6":"code","0a1b2db6":"code","b0c3a245":"code","8288ccc7":"code","960f9fb3":"code","0bc5346d":"code","912907a1":"code","42745991":"code","ef8b1077":"code","9800e280":"code","d7b20b73":"code","4d1f913a":"code","bed786b6":"code","6b2f98a9":"code","b9d4e9a1":"code","a1c0bcb7":"code","68e00b0f":"code","440f4fa8":"code","3829eb02":"code","449dee18":"code","d5cbafea":"markdown","3a428fcf":"markdown","d773db1d":"markdown","8faa7117":"markdown","6f4089eb":"markdown","6d55cbe1":"markdown","f6737c7d":"markdown","33e51942":"markdown","af204244":"markdown","7c4f4672":"markdown","c01ae2a4":"markdown","832026db":"markdown"},"source":{"1e2352a6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom plotly import __version__\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.graph_objs as go","bce39d43":"df = pd.read_csv('..\/input\/housesalesprediction\/kc_house_data.csv')","b4ac6148":"df.head()","8d08da72":"df.isnull().sum()","d319a116":"df.describe().transpose()","aece1c55":"plt.figure(figsize = (12,8))\nsns.distplot(df['price'])","537893b4":"plt.figure(figsize = (10,6))\nsns.countplot(df['bedrooms'])","93055032":"hist2 = [go.Histogram(x=df.yr_built,xbins=dict(start=np.min(df.yr_built),size=1,end=np.max(df.yr_built)),marker=dict(color='rgb(0,102,0)'))]\n\nhistlayout2 = go.Layout(title=\"Built Year Counts\",xaxis=dict(title=\"Years\"),yaxis=dict(title=\"Built Counts\"))\n\nhistfig2 = go.Figure(data=hist2,layout=histlayout2)\n\niplot(histfig2)","1b383de0":"sns.countplot(x='floors',data=df, palette='Set2')","524fc20e":"plt.figure(figsize = (12,8))\nsns.scatterplot(x='price',y='sqft_living',data=df)","6f7db4b1":"plt.figure(figsize = (12,8))\nsns.boxplot(x='bedrooms',y='price',data=df)","cc404869":"sns.boxplot(x='waterfront',y='price',data=df)","63f63934":"plt.figure(figsize = (12,8))\nsns.scatterplot(x='price',y='long',data=df)","4e1838fe":"plt.figure(figsize = (12,8))\nsns.scatterplot(x='price',y='lat',data=df)","77d2f957":"plt.figure(figsize = (12,8))\nsns.scatterplot(x='long',y='lat',data=df,hue='price')","3dac95bf":"df.sort_values('price',ascending=False).head(20)","6cc2132c":"len(df)*0.01","0f30b87c":"non_top_1_perc = df.sort_values('price',ascending=False).iloc[216:]","ab5f893a":"plt.figure(figsize = (12,8))\nsns.scatterplot(x='long',y='lat',data=non_top_1_perc,hue='price',palette='RdYlGn',edgecolor=None,alpha=0.2)","61892b9b":"df.head()","9e76cd3d":"df.info()","11e9adf5":"df = df.drop('id',axis=1)","0263045b":"df.head()","5c873af5":"df['date'] = pd.to_datetime(df['date'])","92a83038":"df['month'] = df['date'].apply(lambda date:date.month)","8d53fd53":"df['year'] = df['date'].apply(lambda date:date.year)","fce37009":"df.head(2)","338a282c":"plt.figure(figsize=(10,6))\nsns.boxplot(x='year',y='price',data=df)","d298d1d8":"plt.figure(figsize=(10,6))\nsns.boxplot(x='month',y='price',data=df)","40bc05e5":"df.groupby('month').mean()['price'].plot()","8140be9d":"df = df.drop('date',axis=1)","5ce377fb":"df = df.drop('zipcode',axis=1)","d0186b8c":"df.head()","6d77f59c":"X = df.drop('price',axis=1)\ny = df['price']","ad689f0a":"from sklearn.model_selection import train_test_split","3c653023":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","9ff844cf":"from sklearn.preprocessing import MinMaxScaler","9b6b513f":"scaler = MinMaxScaler()","4e8cc777":"X_train = scaler.fit_transform(X_train)","841622eb":"X_test = scaler.transform(X_test)","29dd68da":"X_train.shape","216f1f85":"from tensorflow.keras.models import Sequential","949a4fb6":"from tensorflow.keras.layers import Dense","0a1b2db6":"model = Sequential()\n\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(19,activation='relu'))\n\nmodel.add(Dense(1))\n\nmodel.compile(optimizer='adam',loss='mse')","b0c3a245":"model.fit(x=X_train,y=y_train.values,\n          validation_data=(X_test,y_test.values),\n          batch_size=128,epochs=400)","8288ccc7":"losses = pd.DataFrame(model.history.history)","960f9fb3":"losses.plot()","0bc5346d":"from sklearn.metrics import mean_squared_error,mean_absolute_error,explained_variance_score","912907a1":"predictions = model.predict(X_test)","42745991":"mean_absolute_error(y_test,predictions)","ef8b1077":"mean_squared_error(y_test,predictions)","9800e280":"mean_squared_error(y_test,predictions)**0.5","d7b20b73":"explained_variance_score(y_test,predictions)","4d1f913a":"# Our predictions\nplt.figure(figsize=(10,6))\nplt.scatter(y_test,predictions)\n\n# Perfect predictions\nplt.plot(y_test,y_test,'r')","bed786b6":"from sklearn.linear_model import LinearRegression","6b2f98a9":"lr = LinearRegression()","b9d4e9a1":"lr.fit(X_train,y_train)","a1c0bcb7":"predictionslr = lr.predict(X_test)","68e00b0f":"mean_absolute_error(y_test,predictionslr)","440f4fa8":"mean_squared_error(y_test,predictionslr)","3829eb02":"mean_squared_error(y_test,predictionslr)**0.5","449dee18":"explained_variance_score(y_test,predictionslr)","d5cbafea":"## Working with feature data","3a428fcf":"## Scaling the data","d773db1d":"## Geographical Plotting","8faa7117":"## Checking the data","6f4089eb":"## Comparing with linear regression","6d55cbe1":"## Importing the libraries","f6737c7d":"## Feature engineering from date","33e51942":"## Creating a model","af204244":"## Train-test Split ","7c4f4672":"## Training the  model","c01ae2a4":"## Evaluation on test data ","832026db":"## Exploratory Data Analysis"}}