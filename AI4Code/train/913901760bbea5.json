{"cell_type":{"069b5718":"code","88e577f8":"code","75c6ad98":"code","bd39ec18":"code","a3e228f9":"code","6b6d6403":"markdown","831ff986":"markdown","e4fa55cb":"markdown","44d7fa89":"markdown"},"source":{"069b5718":"from typing import Any, Dict\nimport numpy as np\nimport itertools as it\nimport gc\nfrom tqdm import tqdm\nfrom numba import jit\nimport pandas as pd","88e577f8":"def read_data(n_rows: int) -> pd.DataFrame:\n    data = pd.read_pickle(\"..\/input\/walmartbasedata\/data2.pickle\").loc[:n_rows]\n    data = data[data[\"part\"] != \"evaluation\"]\n    return data\ndata = read_data(1_000)\nDAYS_PRED = 28","75c6ad98":"data","bd39ec18":"%%time\ndf = data.copy()\nmemo = df.groupby([\"id\"])[\"demand\"]\nfor diff in [0, 1, 2]:\n    shift = DAYS_PRED + diff\n    df[f\"shift_t{shift}\"] = memo.transform(\n        lambda x: x.shift(shift)\n    )\n\nfor size in [7, 30, 60, 90, 180]:\n    df[f\"rolling_std_t{size}\"] = memo.transform(\n        lambda x: x.shift(DAYS_PRED).rolling(size).std()\n    )\n\nfor size in [7, 30, 60, 90, 180]:\n    df[f\"rolling_mean_t{size}\"] = memo.transform(\n        lambda x: x.shift(DAYS_PRED).rolling(size).mean()\n    )\n\ndf[\"rolling_skew_t30\"] = memo.transform(\n    lambda x: x.shift(DAYS_PRED).rolling(30).skew()\n)\ndf[\"rolling_kurt_t30\"] = memo.transform(\n    lambda x: x.shift(DAYS_PRED).rolling(30).kurt()\n)\ndel memo\ndf","a3e228f9":"%%time\nmaster_id = []\nmemo = data.groupby(\"id\")[\"demand\"]\n# id_list = sorted(data[\"id\"].unique().tolist())\nflag = False\nDAYS_PRED = 28\nfor id in tqdm(memo):\n    x = id[1]\n    id = pd.DataFrame(id[1])\n    for diff in [0, 1, 2]:\n        shift = DAYS_PRED + diff\n        id[f\"shift_t{shift}\"] = x.shift(shift)\n    for size in [7, 30, 60, 90, 180]:\n        id[f\"rolling_std_t{size}\"] = id[\"shift_t28\"].rolling(size).std()\n        id[f\"rolling_mean_t{size}\"] = id[\"shift_t28\"].rolling(size).mean()\n    id[\"rolling_skew_t30\"] = id[\"shift_t28\"].rolling(30).skew()\n    id[\"rolling_kurt_t30\"] = id[\"shift_t28\"].rolling(30).kurt()\n    master_id.append(id)\npd.concat(master_id)","6b6d6403":"## My code(25.9s)","831ff986":"## Normal code(15.9s)\n\nThe two codes do the same thing.","e4fa55cb":"[I read this kernel.](https:\/\/www.kaggle.com\/harupy\/m5-baseline)\n\nMy code isn't as good as normal code. But I'm trying to make faster code because even the Normal code spend a lot of time:)\n\n### __We require very fast code because it handles very large data.__\n\n### If you have any idea after looking at my code, please tell me on comment.\n\nI share my thought.(But it's so not good.)","44d7fa89":"## Please share how to make better code.\n\nThank you for reading my kernel.(I'm not at English.)"}}