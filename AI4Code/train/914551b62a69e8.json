{"cell_type":{"3ecb7567":"code","f75c189b":"code","bcb162b4":"code","50215106":"code","28814142":"code","e90ecdc3":"code","85703e79":"code","bc9b0bb2":"code","822d9216":"code","641a8bda":"markdown","4311f6c0":"markdown","0afb5e08":"markdown"},"source":{"3ecb7567":"import os, gc, pickle, copy, datetime, warnings\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport lightgbm as lgb\nfrom sklearn import metrics\npd.set_option('display.max_columns', 100)\nwarnings.filterwarnings('ignore')","f75c189b":"df_test = pd.read_csv(\"..\/input\/my-covid-pred\/test_week2.csv\")\ndf_test.head()","bcb162b4":"df_week4 = pd.read_csv(\"..\/input\/covid19-global-forecasting-week-4\/train.csv\")\ndf_week4.head()","50215106":"df_test2 = pd.merge(df_test, df_week4, on=['Province_State', 'Country_Region', 'Date'], how='left')\ndf_test2.head()","28814142":"df_test2['Date'] = pd.to_datetime(df_test2['Date'])\ndf_test2['day'] = df_test2['Date'].apply(lambda x: x.dayofyear).astype(np.int16)\ndf_test2.head()","e90ecdc3":"# check the last day of existing true data\ntmp = df_test2[pd.isna(df_test2['ConfirmedCases'])==False]['Date'].max()\nprint(\"last day of existing true data: {}\".format(tmp))","85703e79":"df_sub_osciiart_bug = pd.read_csv(\"..\/input\/my-covid-pred\/submission1.csv\") # my final submission with bug\ndf_sub_osciiart_fixed = pd.read_csv(\"..\/input\/my-covid-pred\/submission_osciiart_fixed.csv\") # my fixed submission\ndf_sub_kaz = pd.read_csv(\"..\/input\/my-covid-pred\/submission_Kaz.csv\") # 1st place solution\ndf_sub_osciiart_bug.head()","bc9b0bb2":"def calc_score(y_true, y_pred):\n    y_true[y_true<0] = 0\n    score = metrics.mean_squared_error(np.log(y_true.clip(0, 1e10)+1), np.log(y_pred[:]+1))**0.5\n    return score\n\ndef calc_private_score(df_sub):\n    day_before_private = 92\n    period = (pd.isna(df_test2['ConfirmedCases'])==False) & (df_test2['day']>day_before_private)\n\n    y_true = df_test2['ConfirmedCases'][period].values\n    y_pred = df_sub['ConfirmedCases'][period].values\n    score1 = calc_score(y_true, y_pred)\n    y_true = df_test2['Fatalities'][period].values\n    y_pred = df_sub['Fatalities'][period].values\n    score2 = calc_score(y_true, y_pred)\n    score = (score1+score2)\/2\n    return score","822d9216":"print(\"df_sub_osciiart_bug: {:.5f}\".format(calc_private_score(df_sub_osciiart_bug)))\nprint(\"df_sub_osciiart_fixed: {:.5f}\".format(calc_private_score(df_sub_osciiart_fixed)))\nprint(\"df_sub_kaz: {:.5f}\".format(calc_private_score(df_sub_kaz)))","641a8bda":"\ud83d\ude2d","4311f6c0":"In week 2 competition, I found I submitted a prediction of a model trained with data only before public LB periods.\nThen, here I tried to simulated late submission and checked how good my fixed submission is.  ","0afb5e08":"- df_sub_osciiart_bug: [My final submission with bug](https:\/\/www.kaggle.com\/osciiart\/covid-19-lightgbm-no-leak?scriptVersionId=31248128)\n- df_sub_osciiart_fixed: [My fixed submission](https:\/\/www.kaggle.com\/osciiart\/covid-19-lightgbm-no-leak\/output?scriptVersionId=31694015)\n- df_sub_kaz: [1st place solution](https:\/\/www.kaggle.com\/kazanova\/gr1621-v2)"}}