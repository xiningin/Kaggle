{"cell_type":{"591176a7":"code","413461a3":"code","9b17a909":"code","6d7548b7":"code","7e17a3bf":"code","5e72285c":"code","7cf2b8bb":"code","b1fe9738":"code","c659f858":"code","c7124fb6":"code","f861377f":"code","e01dab1c":"code","5628d49d":"code","71683bbf":"code","ffa5c0ef":"code","87140931":"code","fc1e4cd7":"code","c4f26d2d":"code","0cd12d95":"code","627ea11b":"code","978be0e8":"code","6dc52296":"code","917db03d":"markdown","bbc048a2":"markdown","4a12b019":"markdown","108b1d50":"markdown","a590386f":"markdown","a5b04296":"markdown"},"source":{"591176a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","413461a3":"from sklearn.feature_selection import mutual_info_regression\n\n# Set Matplotlib defaults\nplt.style.use(\"seaborn-whitegrid\")\nplt.rc(\"figure\", autolayout=True)\nplt.rc(\n    \"axes\",\n    labelweight=\"bold\",\n    labelsize=\"large\",\n    titleweight=\"bold\",\n    titlesize=14,\n    titlepad=10,\n)","9b17a909":"df = pd.read_csv('..\/input\/weather-data\/Weather Data.csv', encoding='utf8')\npd.set_option('display.max_columns', None)\ndf.head()","6d7548b7":"df.isnull().sum()","7e17a3bf":"df[\"Weather\"].value_counts().plot.bar(color=['blue', '#f5005a'], title='Weather')","5e72285c":"!pip install pywaffle","7cf2b8bb":"from pywaffle import Waffle\nimport random\n\nweather = df[\"Weather\"].value_counts()","b1fe9738":"#Code from PyWaffle  https:\/\/pywaffle.readthedocs.io\/en\/latest\/examples\/plot_with_characters_or_icons.html\n\nfig = plt.figure(\n    FigureClass=Waffle,\n    rows=5,\n    values=[30, 16, 4],\n    colors=[\"#FFA500\", \"#4384FF\", \"#C0C0C0\"],\n    icons=['sun', 'cloud-showers-heavy', 'snowflake'],\n    font_size=20,\n    icon_style='solid',\n    icon_legend=True,\n    legend={\n        'labels': ['Sun', 'Shower', 'Snow'], \n        'loc': 'upper left', \n        'bbox_to_anchor': (1, 1)\n    }\n)","c659f858":"from sklearn.preprocessing import LabelEncoder\n\n#fill in mean for floats\nfor c in df.columns:\n    if df[c].dtype=='float16' or  df[c].dtype=='float32' or  df[c].dtype=='float64':\n        df[c].fillna(df[c].mean())\n\n#fill in -999 for categoricals\ndf = df.fillna(-999)\n# Label Encoding\nfor f in df.columns:\n    if df[f].dtype=='object': \n        lbl = LabelEncoder()\n        lbl.fit(list(df[f].values))\n        df[f] = lbl.transform(list(df[f].values))\n        \nprint('Labelling done.')","c7124fb6":"df = pd.get_dummies(df)","f861377f":"# Utility functions from Tutorial\ndef make_mi_scores(X, y):\n    X = X.copy()\n    for colname in X.select_dtypes([\"object\", \"category\"]):\n        X[colname], _ = X[colname].factorize()\n    # All discrete features should now have integer dtypes\n    discrete_features = [pd.api.types.is_integer_dtype(t) for t in X.dtypes]\n    mi_scores = mutual_info_regression(X, y, discrete_features=discrete_features, random_state=0)\n    mi_scores = pd.Series(mi_scores, name=\"MI Scores\", index=X.columns)\n    mi_scores = mi_scores.sort_values(ascending=False)\n    return mi_scores\n\n\ndef plot_mi_scores(scores):\n    scores = scores.sort_values(ascending=True)\n    width = np.arange(len(scores))\n    ticks = list(scores.index)\n    color = np.array([\"C0\"] * scores.shape[0])\n    # Color red for probes\n    idx = [i for i, col in enumerate(scores.index)\n           if col.startswith(\"PROBE\")]\n    color[idx] = \"C3\"\n    # Create plot\n    plt.barh(width, scores, color=color)\n    plt.yticks(width, ticks)\n    plt.title(\"Mutual Information Scores\")","e01dab1c":"features = [\"Temp_C\", \"Dew Point Temp_C\", \"Rel Hum_%\"]\nsns.relplot(\n    x=\"value\", y=\"Weather\", col=\"variable\", data=df.melt(id_vars=\"Weather\", value_vars=features), facet_kws=dict(sharex=False),\n);","5628d49d":"X = df.copy()\ny = X.pop('Date\/Time')\n\nmi_scores = make_mi_scores(X, y)","71683bbf":"print(mi_scores.head(20))\n# print(mi_scores.tail(20))  # uncomment to see bottom 20","ffa5c0ef":"plt.figure(dpi=100, figsize=(8, 5))\nplot_mi_scores(mi_scores.head(20))\n# plot_mi_scores(mi_scores.tail(20))  # uncomment to see bottom 20","87140931":"sns.catplot(x=\"Weather\", y=\"Wind Speed_km\/h\", data=df, kind=\"boxen\");\n#plt.xticks(rotation=45) It didn't make better\nplt.title(\"Weather & Wind Speed\")","fc1e4cd7":"sns.catplot(x=\"Weather\", y=\"Temp_C\", data=df, kind=\"boxen\");\nplt.title(\"Weather & Temperature\")","c4f26d2d":"sns.catplot(x=\"Rel Hum_%\", y=\"Press_kPa\", data=df, kind=\"boxen\");\nplt.title(\" Relative Humidity & Pressure kPa\")\n#kPa The kilopascal is a unit of pressure","0cd12d95":"\nfeature = \"Dew Point Temp_C\"\n\nsns.lmplot(\n    x=feature, y=\"Weather\", hue=\"Rel Hum_%\", col=\"Rel Hum_%\",\n    data=df, scatter_kws={\"edgecolor\": 'w'}, col_wrap=3, height=4,\n);","627ea11b":"\nfeature = \"Date\/Time\"\n\nsns.lmplot(\n    x=feature, y=\"Press_kPa\", hue=\"Rel Hum_%\", col=\"Rel Hum_%\",\n    data=df, scatter_kws={\"edgecolor\": 'w'}, col_wrap=3, height=4,\n);","978be0e8":"mi_scores.head(10)","6dc52296":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. That is all kagglers, @mpwolke was Here.' )","917db03d":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQtKWG-wW_SR_TSMtlVs9PIkiTO6Cn1xkFI_w&usqp=CAU)slideplayer.com","bbc048a2":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTyAh_K9Q5sg2QJWHe07dHF6M6mYXCRj3R4XA&usqp=CAU)medium.com","4a12b019":"<a id=\"1.1\"><\/a>\n<h3 style=\"background-color:skyblue;font-family:newtimeroman;font-size:200%;text-align:center\">Mutual Information by Ryan Holbrook<\/h3>\n\nAll script by Ryan Holbrook   https:\/\/www.kaggle.com\/mpwolke\/exercise-mutual-information\/edit\n\nFeature Engineering Kaggle Micro-course by Ryan Holbrook.\n\nhttps:\/\/www.kaggle.com\/learn\/feature-engineering","108b1d50":"#X=Value and col= Variable are Not columns of the Dataset. Therefore, Do Not change them!\n\nAfter pd.`get_dummies` Even those charts below are better.","a590386f":"#The chart above is so clumsy that seems a Cumulonimbus (dense, towering vertical cloud)","a5b04296":"![](https:\/\/www.nbsfitness.net\/wp-content\/uploads\/2016\/05\/2013-hot-weather-meme.jpg)nbsfitness.net"}}