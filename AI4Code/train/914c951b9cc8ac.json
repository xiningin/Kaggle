{"cell_type":{"1af7985f":"code","54f9241d":"code","c3c88bbe":"code","7afa9ea6":"code","dc026ee2":"code","86a21767":"code","1099f002":"code","d5266ad9":"code","55cfa820":"code","4c2104f9":"code","c628f8ba":"code","1e9ca348":"code","16aeb9bc":"code","14b31d8c":"code","0d03f687":"code","ca4bd967":"code","6f055058":"code","18e04cdc":"code","04546674":"code","1d4652cf":"code","0c96d1ba":"code","ab030c82":"code","876d0c5b":"code","aa4eb367":"code","c3cc8146":"code","ca022577":"code","c5382c54":"code","f307d3e4":"code","96f5bc43":"code","3d7bc926":"code","39a971e8":"code","c3f7ae45":"code","5e9c0e0f":"markdown","161228c9":"markdown","c2029c6b":"markdown","69d99a1c":"markdown","d86bca7e":"markdown","c01c49b0":"markdown","6745c421":"markdown","d07e4137":"markdown"},"source":{"1af7985f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud\nfrom urllib.request import urlopen\nfrom PIL import Image\nimport os","54f9241d":"print(os.listdir(\"..\/input\"))","c3c88bbe":"whr2019 = pd.read_csv('..\/input\/world-happiness-report-2019.csv')","7afa9ea6":"whr2019.head()","dc026ee2":"whr2019.isnull().sum()","86a21767":"whr2019.dtypes","1099f002":"plt.figure(figsize = (10,8))\nsns.heatmap(whr2019.corr(), annot=True, linewidths=.2, cmap = 'OrRd',linecolor= 'crimson')","d5266ad9":"whr2019 = whr2019.rename({'Country (region)' : 'Country'},axis = 1)","55cfa820":"whr2019.columns","4c2104f9":"whr2019 = whr2019.rename({'Positive affect':'Positive_affect'},axis = 1)\nplt.figure(figsize = (15,8))\n\nplt.subplot2grid((1,2),(0,0))\nwhr2019.groupby(['Country']).Positive_affect.sum().nlargest(30).plot(kind = 'barh')\nplt.xlabel(\"Positive affect\")\n\nplt.subplot2grid((1,2),(0,1))\nwhr2019.groupby(['Country']).Positive_affect.sum().nsmallest(30).plot(kind = 'barh')\nplt.xlabel(\"Positive affect\")\n\nplt.tight_layout()\nplt.show()","c628f8ba":"whr2019 = whr2019.rename({'Negative affect':'Negative_affect'},axis = 1)\nplt.figure(figsize = (15,8))\n\nplt.subplot2grid((1,2),(0,0))\nwhr2019.groupby(['Country']).Negative_affect.sum().nlargest(30).plot(kind = 'barh')\nplt.xlabel(\"Negative affect\")\n\nplt.subplot2grid((1,2),(0,1))\nwhr2019.groupby(['Country']).Negative_affect.sum().nsmallest(30).plot(kind = 'barh')\nplt.xlabel(\"Negative affect\")\n\nplt.tight_layout()\nplt.show()","1e9ca348":"whr2019 = whr2019.rename({'Social support' : 'Social_support'},axis = 1)\nfig = plt.figure(figsize = (15,8))\nplt.subplots_adjust(hspace = 0.5)\n\nplt.subplot2grid((1,2),(0,0))\nwhr2019.groupby(['Country']).Social_support.sum().nlargest(30).plot(kind = 'barh')\nplt.xlabel(\"Social_support\")\n\nplt.subplot2grid((1,2),(0,1))\nwhr2019.groupby(['Country']).Social_support.sum().nsmallest(30).plot(kind = 'barh')\nplt.xlabel(\"Social_support\")\n\nplt.tight_layout()\nplt.show()","16aeb9bc":"fig = plt.figure(figsize = (15,8))\nplt.subplots_adjust(hspace = 0.5)\n\nplt.subplot2grid((1,2),(0,0))\nwhr2019.groupby(['Country']).Freedom.sum().nlargest(30).plot(kind = 'barh')\nplt.xlabel(\"Freedom\")\n\nplt.subplot2grid((1,2),(0,1))\nwhr2019.groupby(['Country']).Freedom.sum().nsmallest(30).plot(kind = 'barh')\nplt.xlabel(\"Freedom\")\n\nplt.tight_layout()\nplt.show()","14b31d8c":"plt.figure(figsize = (15,8))\n\nplt.subplot2grid((1,2),(0,0))\nwhr2019.groupby(['Country']).Corruption.sum().nlargest(30).plot(kind='barh')\nplt.xlabel(\"Corruption\")\n\nplt.subplot2grid((1,2),(0,1))\nwhr2019.groupby(['Country']).Corruption.sum().nsmallest(30).plot(kind='barh')\nplt.xlabel(\"Corruption\")\n\nplt.tight_layout()\nplt.show()","0d03f687":"fig = plt.figure(figsize = (15,8))\nplt.subplots_adjust(hspace = 0.5)\n\nplt.subplot2grid((1,2),(0,0))\nwhr2019.groupby(['Country']).Generosity.sum().nlargest(30).plot(kind = 'barh')\nplt.xlabel(\"Generosity\")\n\nplt.subplot2grid((1,2),(0,1))\nwhr2019.groupby(['Country']).Generosity.sum().nsmallest(30).plot(kind = 'barh')\nplt.xlabel(\"Generosity\")\n\nplt.tight_layout()\nplt.show()","ca4bd967":"whr2019 = whr2019.rename({'Log of GDP\\nper capita' : 'Log_of_GDP_per_capita'},axis = 1)\nfig = plt.figure(figsize = (15,8))\nplt.subplots_adjust(hspace = 0.5)\n\nplt.subplot2grid((1,2),(0,0))\nwhr2019.groupby(['Country']).Log_of_GDP_per_capita.sum().nlargest(30).plot(kind = 'barh')\nplt.xlabel(\"Log of GDP per capita\")\n\nplt.subplot2grid((1,2),(0,1))\nwhr2019.groupby(['Country']).Log_of_GDP_per_capita.sum().nsmallest(30).plot(kind = 'barh')\nplt.xlabel(\"Log of GDP per capita\")\n\nplt.tight_layout()\nplt.show()","6f055058":"whr2019 = whr2019.rename({'Healthy life\\nexpectancy':'Healthy_life_expectancy'},axis = 1)\nfig = plt.figure(figsize = (15,8))\nplt.subplots_adjust(hspace = 0.5)\n\nplt.subplot2grid((1,2),(0,0))\nwhr2019.groupby(['Country']).Healthy_life_expectancy.sum().nlargest(30).plot(kind = 'barh')\nplt.xlabel(\"Healthy life expectancy\")\n\nplt.subplot2grid((1,2),(0,1))\nwhr2019.groupby(['Country']).Healthy_life_expectancy.sum().nsmallest(30).plot(kind = 'barh')\nplt.xlabel(\"Healthy life expectancy\")\n\nplt.tight_layout()\nplt.show()","18e04cdc":"x = whr2019['Ladder']\ny = whr2019['Social_support']\nplt.figure(figsize = (15,5))\nplt.scatter(x,y)\nplt.xlabel(\"Country\")\nplt.ylabel(\"Social_support\")\nplt.show()","04546674":"x = whr2019['Ladder']\ny = whr2019['Log_of_GDP_per_capita']\nplt.figure(figsize = (15,5))\nplt.scatter(x,y)\nplt.xlabel(\"Country\")\nplt.ylabel(\"Log_of_GDP_per_capita\")\nplt.show()","1d4652cf":"x = whr2019['Ladder']\ny = whr2019['Healthy_life_expectancy']\nplt.figure(figsize = (15,5))\nplt.scatter(x,y)\nplt.xlabel(\"Country\")\nplt.ylabel(\"Healthy_life_expectancy\")\nplt.show()","0c96d1ba":"for col in whr2019.columns:\n    if whr2019[col].isnull().sum() != 0:\n        whr2019[col] = whr2019[col].fillna(0.0)\n","ab030c82":"whr2019.isnull().sum()","876d0c5b":"x = whr2019.drop(['Country'],axis = 1)","aa4eb367":"# find n_clusters value\n\nfrom sklearn.cluster import KMeans\n\na = []\nfor k in range (1,12):\n    kmeans = KMeans(n_clusters = k)\n    kmeans.fit(x)\n    a.append(kmeans.inertia_)\n\nplt.plot(range(1,12),a)\nplt.xlabel('k values')\nplt.ylabel('a')\nplt.show()","c3cc8146":"#n_clusters= 3\n\nkmeans = KMeans(n_clusters= 3)\nkmeans.fit(x)","ca022577":"clusters_knn = kmeans.fit_predict(x)","c5382c54":"plt.scatter(x[clusters_knn == 0]['Ladder'],x[clusters_knn == 0]['Positive_affect'], color = 'Red')\nplt.scatter(x[clusters_knn == 1]['Ladder'],x[clusters_knn == 1]['Positive_affect'], color = 'Blue')\nplt.scatter(x[clusters_knn == 2]['Ladder'],x[clusters_knn == 2]['Positive_affect'], color = 'Green')\n\n\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 2], s = 300, c = 'yellow', label = 'Centroids')\nplt.title('Effect of Positive_affect in Happiness index')\nplt.xlabel('Ladder')\nplt.ylabel('Positive_affect')\n\nplt.show()","f307d3e4":"plt.scatter(x[clusters_knn == 0]['Ladder'],x[clusters_knn == 0]['Negative_affect'], color = 'Red')\nplt.scatter(x[clusters_knn == 1]['Ladder'],x[clusters_knn == 1]['Negative_affect'], color = 'Blue')\nplt.scatter(x[clusters_knn == 2]['Ladder'],x[clusters_knn == 2]['Negative_affect'], color = 'Green')\n\n\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 3], s = 300, c = 'yellow', label = 'Centroids')\nplt.title('Effect of Negative_affect in Happiness index')\nplt.xlabel('Ladder')\nplt.ylabel('Negative_affect')\n\nplt.show()","96f5bc43":"plt.scatter(x[clusters_knn == 0]['Ladder'],x[clusters_knn == 0]['Social_support'], color = 'Red')\nplt.scatter(x[clusters_knn == 1]['Ladder'],x[clusters_knn == 1]['Social_support'], color = 'Blue')\nplt.scatter(x[clusters_knn == 2]['Ladder'],x[clusters_knn == 2]['Social_support'], color = 'Green')\n#plt.scatter(x[clusters_knn == 3]['Ladder'],x[clusters_knn == 3]['Social_support'], color = 'lightcoral')\n\n\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 4], s = 300, c = 'yellow', label = 'Centroids')\nplt.title('Effect of Social_support in Happiness index')\nplt.xlabel('Ladder')\nplt.ylabel('Social_support')\n\nplt.show()","3d7bc926":"plt.scatter(x[clusters_knn == 0]['Ladder'],x[clusters_knn == 0]['Log_of_GDP_per_capita'], color = 'Red')\nplt.scatter(x[clusters_knn == 1]['Ladder'],x[clusters_knn == 1]['Log_of_GDP_per_capita'], color = 'Blue')\nplt.scatter(x[clusters_knn == 2]['Ladder'],x[clusters_knn == 2]['Log_of_GDP_per_capita'], color = 'Green')\n\n\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 8], s = 300, c = 'yellow', label = 'Centroids')\nplt.title('Effect of Log_of_GDP_per_capita in Happiness index')\nplt.xlabel('Ladder')\nplt.ylabel('Log_of_GDP_per_capita')\n\nplt.show()","39a971e8":"plt.scatter(x[clusters_knn == 0]['Ladder'],x[clusters_knn == 0]['Healthy_life_expectancy'], color = 'Red')\nplt.scatter(x[clusters_knn == 1]['Ladder'],x[clusters_knn == 1]['Healthy_life_expectancy'], color = 'Blue')\nplt.scatter(x[clusters_knn == 2]['Ladder'],x[clusters_knn == 2]['Healthy_life_expectancy'], color = 'Green')\n\n\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 9], s = 300, c = 'yellow', label = 'Centroids')\nplt.title('Effect of Healthy_life_expectancy in Happiness index')\nplt.xlabel('Ladder')\nplt.ylabel('Healthy_life_expectancy')\n\nplt.show()","c3f7ae45":"plt.scatter(x[clusters_knn == 0]['Ladder'],x[clusters_knn == 0]['Corruption'], color = 'Red')\nplt.scatter(x[clusters_knn == 1]['Ladder'],x[clusters_knn == 1]['Corruption'], color = 'Blue')\nplt.scatter(x[clusters_knn == 2]['Ladder'],x[clusters_knn == 2]['Corruption'], color = 'Green')\n\n\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 6], s = 300, c = 'yellow', label = 'Centroids')\nplt.title('Effect of Corruption in Happiness index')\nplt.xlabel('Ladder')\nplt.ylabel('Corruption')\n\nplt.show()","5e9c0e0f":"**Scatter plot of parameters having high correlation**\n\n* Social support\n* Log of GDP per capita\n* Healthy life expectancy","161228c9":"**Import libraries**","c2029c6b":"**Check for the details**","69d99a1c":"select the elbow pooint as the value of k (ie the number of clusters), here 3","d86bca7e":"**K-Means Clustering**","c01c49b0":"**Load Data**","6745c421":"**Visualize the details** \n\nOrder of Countries with respect to each parameters","d07e4137":"**Fill missing values**"}}