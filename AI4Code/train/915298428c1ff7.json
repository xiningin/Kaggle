{"cell_type":{"8e1f376f":"code","b8b4892e":"code","5a2fd70d":"code","84402a72":"code","914760b5":"code","90938cd5":"code","88ba4263":"code","e68bec6c":"code","6f039d13":"code","6c47d5a6":"code","9c34bbac":"code","03d5ec51":"code","a462d2f2":"code","0658af66":"code","4330ac81":"code","b349869e":"code","742395b2":"code","28619a62":"code","c19035cb":"code","4f342014":"code","b27db2b1":"code","7f3f0fc8":"code","fef10c5b":"code","7d70b164":"code","14d907d0":"code","8d586a32":"code","cf88ce4d":"code","23def2e8":"code","3fe8204c":"code","91f7ac33":"markdown","20b3470b":"markdown","2564a749":"markdown","50497cce":"markdown","13df9b3e":"markdown","a160d3dc":"markdown"},"source":{"8e1f376f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b8b4892e":"data = pd.read_csv('\/kaggle\/input\/superbowl-history-1967-2020\/superbowl.csv')","5a2fd70d":"data","84402a72":"data.Winner.mode()","914760b5":"pd.DataFrame(data.Winner.value_counts()).reset_index().rename(columns = {'index' : 'Team'})","90938cd5":"import matplotlib.pyplot as plt\nimport seaborn as sns","88ba4263":"pd.DataFrame(data.Loser.value_counts()).reset_index().rename(columns = {'index' : 'Team'})","e68bec6c":"pd.DataFrame(data.MVP.value_counts()).reset_index().rename(columns = {'index' : 'Player'})","6f039d13":"data.info()","6c47d5a6":"print('The maximum winning points scored in a game is' + str(' ') + str(data['Winner Pts'].max()))\nprint('The maximum losing points scored in a game is' + str(' ') + str(data['Loser Pts'].max()))","9c34bbac":"data['Score Difference'] = data['Winner Pts'] - data['Loser Pts']","03d5ec51":"data['Score Difference']","a462d2f2":"plt.figure(figsize=(40,18))\n#subgrade_order = data['Score Difference']\nsns.countplot(x='Score Difference',data=data,palette='coolwarm')","0658af66":"\nplt.figure(figsize=(50,18))\nsns.countplot(x = 'Stadium', data = data)","4330ac81":"\nplt.figure(figsize=(50,18))\nsns.countplot(x = 'City', data = data)","b349869e":"\nplt.figure(figsize=(50,18))\nsns.countplot(x = 'State', data = data)","742395b2":"finals = list(set(list(data.Winner) + list(data.Loser)))\nprint('The teams that have made it to the SuperBowl are: \\n' + str(finals) + str('\\n\\n\\n') + str('Total count: ') + str(len(finals)))","28619a62":"finals_ap = list(data.Winner) + list(data.Loser)","c19035cb":"max(set(finals_ap), key=finals_ap.count)","4f342014":"data['Times'] = 1","b27db2b1":"data.groupby('Winner')['Times'].sum().reset_index(drop = False).sort_values(by = 'Times',ascending = False)","7f3f0fc8":"data.groupby('Loser')['Times'].sum().reset_index(drop = False).sort_values(by = 'Times',ascending = False)","fef10c5b":"losers = data.groupby('Loser')['Times'].sum().reset_index(drop = False).sort_values(by = 'Times',ascending = False)\nwinners = data.groupby('Winner')['Times'].sum().reset_index(drop = False).sort_values(by = 'Times',ascending = False)\nlosers = losers.rename(columns = {'Loser' : 'Team'})\nwinners = winners.rename(columns = {'Winner' : 'Team'})","7d70b164":"most_finals = losers.merge(winners, on = 'Team', how = 'left')","14d907d0":"most_finals['Times_y'].fillna(0, inplace = True)","8d586a32":"most_finals['most appeareances'] = (most_finals['Times_x'] + most_finals['Times_y']).astype(int)","cf88ce4d":"most_finals.drop(['Times_x', 'Times_y'], axis = 1, inplace = True)","23def2e8":"most_finals.sort_values(by = 'most appeareances', ascending = False)","3fe8204c":"plt.figure(figsize=(40,20))\n#subgrade_order = sorted(df['sub_grade'].unique())\nsns.countplot(x='most appeareances',data=most_finals.sort_values(by = 'most appeareances', ascending = False),palette='coolwarm')","91f7ac33":"## Most Finals Appeareances ","20b3470b":"**City**","2564a749":"**Most Final Appereances**","50497cce":"**State**","13df9b3e":"Loading the data","a160d3dc":"**Stadium**"}}