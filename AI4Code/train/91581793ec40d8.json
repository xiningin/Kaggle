{"cell_type":{"4e4b072f":"code","3a1a62a7":"code","226df678":"code","792570e3":"code","f1af329b":"code","ddb3e7d2":"code","e3d564b5":"code","8d8ce176":"code","b7cef9a0":"code","381c2ee2":"code","69ee054e":"code","1f74ce6e":"code","770efbb0":"code","e79191ea":"code","81a1b6f0":"code","f705c4b4":"code","4ff6fc86":"code","3bb6cedc":"code","ddb5e90b":"code","010352a3":"code","24115c72":"code","b4180d15":"code","b6cfd505":"code","a4380d4d":"code","548c7a34":"code","2685bd23":"code","185296f7":"code","766d2722":"code","0c352dd6":"code","4833eec8":"code","6d17d37d":"code","1c49a85a":"code","507f1f2f":"code","fc04d8c8":"markdown","d6f5f272":"markdown","dbf06770":"markdown","20d0ab71":"markdown","97629867":"markdown","5da5fe93":"markdown","0877f2c6":"markdown","c6b6eb01":"markdown","5ba37ba0":"markdown","bbd31dd2":"markdown","8b1a83e0":"markdown","5791f580":"markdown","36626ddd":"markdown","f5fac5c5":"markdown","6f8d275a":"markdown","7058aeca":"markdown","f5367259":"markdown","558b883e":"markdown","b0860377":"markdown","b920e30c":"markdown","dfef8926":"markdown","c4a00f45":"markdown"},"source":{"4e4b072f":"# General imports\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os, sys, gc, warnings, random, datetime, math\n\nwarnings.filterwarnings('ignore')\n\nfrom kaggle.competitions import nflrush","3a1a62a7":"# You can only call make_env() once, so don't lose it!\nenv = nflrush.make_env()","226df678":"# Configuration\npd.set_option('display.max_columns', 500)\npd.set_option('display.max_rows', 100)","792570e3":"SEED = 42\nTARGET = 'Yards'","f1af329b":"train_df = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2020\/train.csv', low_memory=False)","ddb3e7d2":"# You can only iterate through a result from `env.iter_test()` once\n# so be careful not to lose it once you start iterating.\niter_test = env.iter_test()","e3d564b5":"(test_df, sample_prediction_df) = next(iter_test)","8d8ce176":"train_df.head()","b7cef9a0":"train_df[train_df[\"PlayId\"] == 20170907000118]","381c2ee2":"train_df.groupby(\"PlayId\").first().head()","69ee054e":"train_df_groupby = train_df.groupby(\"PlayId\").first()","1f74ce6e":"print(train_df.shape)\nprint(train_df_groupby.shape)","770efbb0":"train_df.dtypes","e79191ea":"#Missing Value Count\ntrain_df.isnull().sum()","81a1b6f0":"test_df.head()","f705c4b4":"test_df.shape","4ff6fc86":"sample_prediction_df","3bb6cedc":"sample_prediction_df.shape","ddb5e90b":"train_df.columns.tolist()","010352a3":"def make_histogram(col):\n    plt.figure(figsize=(15,5))\n    plt.subplot(121);\n    plt.title(col+\"_histogram\"+\"_Original\")\n    sns.distplot(train_df[col].dropna(),kde=False);\n    plt.subplot(122);\n    plt.title(col+\"_histogram\"+\"_groupby\")\n    sns.distplot(train_df_groupby[col].dropna(),kde=False);","24115c72":"def make_describe(col):\n    print(f\"###############{col} : describe###############\")\n    print(\"\\n\")\n    print(f\"######Original Data#######\")\n    print(train_df[col].describe())\n    print(\"\\n\")\n    print(f\"######groupby Data#######\")\n    print(train_df_groupby[col].describe())","b4180d15":"make_histogram(\"Yards\")","b6cfd505":"make_describe(\"Yards\")","a4380d4d":"train_df_num = train_df.select_dtypes(exclude=\"object\")\n\nnot_num_value = [\"GameId\",\"PlayId\",\"Season\",\"Week\",\"Quarter\",\"Down\",\"NflId\",\"NflIdRusher\"] \n#I deal with \"Season\",\"Week\",\"Quarter\",\"Down\",\"NflId\",\"NflIdRusher\" as categorical value. \ntrain_df_num = train_df_num.drop(not_num_value,axis=1)\n\nnot_num_value.remove(\"PlayId\")\ntrain_df_groupby_num = train_df_groupby.drop(not_num_value,axis=1)","548c7a34":"train_df_num.describe()","2685bd23":"train_df_groupby_num.describe()","185296f7":"train_df_num_list = train_df_num.columns.tolist()\n\nfor i in train_df_num_list:\n    make_histogram(i)","766d2722":"train_df_cat_list = train_df.select_dtypes(\"object\").columns.tolist()\ntrain_df_cat_list += not_num_value","0c352dd6":"for i in train_df_cat_list:\n    print(f\"###############{i} : Value Counts###############\")\n    print(train_df[i].value_counts())\n    print(\"\\n\")","4833eec8":"for i in train_df_cat_list:\n    print(f\"###############{i} : Value Counts###############\")\n    print(train_df_groupby[i].value_counts())\n    print(\"\\n\")","6d17d37d":"train_df_cat_list_selected = ['OffenseFormation','PlayDirection','Season','Week','Quarter','Down']","1c49a85a":"def make_histogram_cat(col):\n    plt.figure(figsize=(15,5))\n    plt.subplot(121);\n    plt.title(col+\"_histogram\"+\"_Original\")\n    sns.countplot(x=col, data=train_df);\n    plt.subplot(122);\n    plt.title(col+\"_histogram\"+\"_groupby\")\n    sns.countplot(x=col, data=train_df_groupby);","507f1f2f":"for i in train_df_cat_list_selected:\n    make_histogram_cat(i)","fc04d8c8":"I'm very happy to challenge new TableData Competition!<br>\nSo I make very simple EDA.<br>\n<br>\nThis competion has unique rule.\nWe should check following notebook carefully.<br>\nhttps:\/\/www.kaggle.com\/dster\/nfl-big-data-bowl-official-starter-notebook","d6f5f272":"### test_df","dbf06770":"Make histogram for Numeric Varaiable","20d0ab71":"Make histogram for categorical variable which has a few values.","97629867":"From Official<br>\n> Each row in the file corresponds to a single player's involvement in a single play. <br>\n> The dataset was intentionally joined (i.e. denormalized) to make the API simple. <br>\n> All the columns are contained in one large dataframe which is grouped and provided by PlayId.","5da5fe93":"### train_df","0877f2c6":"NFL Basic rule(English site)<br>\nhttps:\/\/operations.nfl.com\/the-rules\/2019-nfl-rulebook\/\n\nNFL Basic rule(Japanese site)<br>\nhttps:\/\/nfljapan.com\/guide\/rule","c6b6eb01":"We must do \"groupby\" by PlayId.","5ba37ba0":"For example,following dataframe is 1 play data at same time.","bbd31dd2":"### Categorical Variable","8b1a83e0":"### sample_prediction_df","5791f580":"### Numeric Varaiable","36626ddd":"To be continued\u30fb\u30fb\u30fb","f5fac5c5":"# OverView","6f8d275a":"> Yards - the yardage gained on the play (you are predicting this)[](http:\/\/)","7058aeca":"> # train_df, train_df_groupby","f5367259":"# Read Data","558b883e":"# Import","b0860377":"We will predict \"Yards\".<br>\nLet's check.","b920e30c":"### Predict Value:Yards","dfef8926":"# Setting","c4a00f45":"In the following, I check both original data and grupoby_PlayId data."}}