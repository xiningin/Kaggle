{"cell_type":{"6a9473f3":"code","f3f15e1d":"code","7e927c0f":"code","935e9a86":"code","8d1b896c":"code","80758a52":"code","c24733c1":"code","1da0ee9d":"code","b8724387":"code","2e539457":"code","b2ea6a2e":"code","68346273":"code","3e7a5d88":"code","49bbe267":"code","7fddf6a4":"code","040e19f0":"code","6b3f0334":"code","0a8d0c3a":"code","dbaf828f":"code","98dee5ce":"markdown","a5e4abb3":"markdown","21dd51f7":"markdown","d998ee11":"markdown","552fb292":"markdown","9142b9c6":"markdown","0d26fa21":"markdown","87f9d0e8":"markdown","e50a7eb3":"markdown","648b1ed3":"markdown","ca767705":"markdown","a5d1b813":"markdown","6a067fc5":"markdown","29345f52":"markdown","86907a72":"markdown","4c3f025d":"markdown","46e67bd4":"markdown","ca97f548":"markdown","47b00409":"markdown","e7cbb7df":"markdown","5201a60b":"markdown"},"source":{"6a9473f3":"from IPython.display import Image","f3f15e1d":"Image(\"..\/input\/github-repository\/download.png\")","7e927c0f":"#uncomment if the geopandas package needs to be installed in your environment\n\n#!pip install geopandas","935e9a86":"import geopandas\nimport pandas as pd\nimport numpy as np\nimport json\nfrom shapely.geometry import Polygon\nfrom shapely.geometry import MultiPolygon\nfrom datetime import datetime\nimport folium","8d1b896c":"# Data Source: https:\/\/www.kaggle.com\/gpreda\/covid-world-vaccination-progress\n\n#load csv data\nvaccinations = pd.read_csv(\"..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv\")\n\n\n\n#drop rows that have no vaccination data for that day\nvaccinations.dropna(subset=['total_vaccinations',\n       'people_vaccinated', 'people_fully_vaccinated',\n       'daily_vaccinations_raw', 'daily_vaccinations',\n       'total_vaccinations_per_hundred', 'people_vaccinated_per_hundred',\n       'people_fully_vaccinated_per_hundred', 'daily_vaccinations_per_million',\n       'vaccines'], how=\"all\", inplace=True)","80758a52":"vaccinations.head(3)","c24733c1":"# filter on most recent date for each country\nvaccinations = vaccinations.join(vaccinations.groupby('country').date.max().rename('MaxDate'), on=\"country\")\nvaccinations_recent = vaccinations[vaccinations[\"date\"]==vaccinations[\"MaxDate\"]]","1da0ee9d":"# remove the ISO code prefix from a few columns\nvaccinations_recent[\"iso_code\"] = vaccinations_recent[\"iso_code\"].str.replace(\"OWID_\", \"\")\nvaccinations_recent = vaccinations_recent.set_index(\"iso_code\") # set index to ISO code","b8724387":"vaccinations_recent.head(3)","2e539457":"vaccinations_recent.isnull().sum()","b2ea6a2e":"# Data Source: https:\/\/github.com\/python-visualization\/folium\/blob\/master\/examples\/data\/world-countries.json\n\nworld2 = geopandas.read_file(\"..\/input\/github-repository\/world_countries.json\") #read dataset\nworld2 = world2.set_index('id') #set index to ISO code to match vaccinations_recent","68346273":"world2.head(3)","3e7a5d88":"# merge the two datasets together so that they only include countries where we have vaccination data\nworld2 = world2.merge(vaccinations_recent, how = \"inner\", left_index=True, right_index=True)\nvaccinations_recent = vaccinations_recent.reset_index()","49bbe267":"m = folium.Map(location=[0, 0], zoom_start=2)","7fddf6a4":"# https:\/\/stackoverflow.com\/questions\/61928013\/adding-a-title-or-text-to-a-folium-map\nloc = 'Global COVID-19 Vaccination Data -- Total Vaccinations per 100 People (as of March 21, 2021)'\ntitle_html = '''\n             <h3 align=\"center\" style=\"font-size:16px\"><b>{}<\/b><\/h3>\n             '''.format(loc)   \n\nm.get_root().html.add_child(folium.Element(title_html));","040e19f0":"m","6b3f0334":"choropleth = folium.Choropleth(\n    geo_data=world2, #geographic data\n    name=\"choropleth\",\n    data=vaccinations_recent, # vaccination data\n    columns=[\"iso_code\", \"total_vaccinations_per_hundred\"],\n    key_on=\"feature.id\",\n    fill_color = \"RdYlGn\", #specify red, yellow, green color scheme\n    fill_opacity=0.8,\n    line_opacity=.1,\n    legend_name=\"Total Vaccinations per 100 People\",# legend title (below legend)\n    bins = [0, 5, 15, 30, 60, vaccinations_recent[\"total_vaccinations_per_hundred\"].max()] # bin color scale\n).add_to(m)\n","0a8d0c3a":"# https:\/\/github.com\/python-visualization\/folium\/issues\/1074\n\n#add tooltip\nchoropleth.geojson.add_child(\n    folium.features.GeoJsonTooltip(['country','total_vaccinations_per_hundred', 'vaccines'], \n                                   aliases = [\"Country\", \"Vaccinations per 100 people\", \"Available Vaccines\"])\n);","dbaf828f":"#Uncomment the following line to save to HTML\n\n# m.save('index.html')\n\n#show plot\nm","98dee5ce":"<b>Data Source #2 -- Geographic Data (Country Polygons)\n    \nThe second data source comes from a [Folium GitHub repository](https:\/\/github.com\/python-visualization\/folium\/blob\/master\/examples\/data\/world-countries.json). This dataset contains country names along with Shapely Polygon\/MultiPolygon objects to aid in plotting the country shapes.","a5e4abb3":"<b> Raw Sample of COVID-19 Vaccination Dataset","21dd51f7":"\n\nThe vaccination dataset has a row for each date in which the dataset was updated. We are only interested in the most recent data for each country.","d998ee11":"We don't want to plot shapes on countries where we have no vaccination data. To eliminate these countries, we do an inner merge with the COVID-19 vaccination dataset.","552fb292":"Raw geographic data source sample","9142b9c6":"#### Data Pre-Processing","0d26fa21":"___\n### Creating my own Choropleth Map [Demonstration]","87f9d0e8":"<b> Preview\n\nInitialized Map in Folium (no annotation yet)","e50a7eb3":"I used geospatial data visualization, specifically a choropleth map to explore global COVID-19 vaccination progress. A choropleth map is a map that represents patterns using coloration based on certain geographic boundaries. In my example, I am going to use country boundaries to explore how many total vaccinations have been given in each country. Green countries have the most vaccinations per 100 people and red countries have the least.\n\nA choropleth map can be used to show univariate data over a geographic region. In order to show higher dimensional data, some amount of interactivity needs to be added to the choropleth map. Additional information can be added via tooltip, interactive elements that allow the user to change which variables is represented, etc.\n\nThis is not the most effective visualization for showing change over time. Other visualizations such as bar charts, line charts, etc. are better at showing change over time. However, if you want to show a snapshot in time, a choropleth map is great because the viewer can see patterns in which regions have more or less vaccinations.\n\n\n##### Example Choropleth Map","648b1ed3":"#### Final Plot: View or Save HTML","ca767705":"<b> Tooltip\n\nAdd tooltip with country name, total vaccination count per 100 people, and available vaccines.","a5d1b813":"<b>Data Source #1 -- COVID-19 Vaccination Data\n\nI used a [Kaggle dataset](https:\/\/www.kaggle.com\/gpreda\/covid-world-vaccination-progress) to gather Covid-19 immunization data from many countries. This dataset is created and manged by a Romanian data scientist named [Gabriel Preda](https:\/\/www.kaggle.com\/gpreda). It gets updated about once a day and gathers each country's data from various goverment websites.","6a067fc5":"#### Choropleth Map with Folim","29345f52":"First step is initializing a Folium map. We want to center it on the global map (location=[0,0]) and initialize the zoom so that we see the whole map.\n\n\n<b> Add plot Title\n    \n    \nAdd a title to map using an HTML object.","86907a72":"___\n### Folium [Visualization Package]\n\n[Folium Documentation](https:\/\/python-visualization.github.io\/folium\/)\n\nFolium is an open source Python library that specializes in geospatial data visualization. It is easy to install using either pip install or conda install in your Python environment.\n\nIn general, it is a declarative programming package. Folium has many built in classes (eg. Choropleth() used below) that help the user explain what features should be included on the map without having to tell Folium exactly how to plot the Polygon objects. This being said, Folium itself is somewhat limited in how much a map can be customized. However, it integrates with other packages like brewer (for color map creation) and Vega\/VegaLite (for additional annotations on the plot). This allows for more customization, outside of Folium's limitations.\n\nFolium has a built-in class specifically for Choropleth maps. This class makes it very easy to specify which values should be included on the map without having to do too much overhead data manipulation. I also considered, Matplotlib, Bokeh, and Plotly. I decided on Folium because it seemed to have the most straight-forward process for creating choropleth maps. Further, I have used Matplotlib, Bokeh and Plotly in the past so I wanted to branch my learning into a new area.","4c3f025d":"<b> Adding Choropleth Map\n\nUse the Folium Choropleth() class to plot Choropleth shapes over each country with vaccination data.\n\n<b> Total Vaccinations per 100 People\n    \nI chose to plot total vaccinations per 100 people because it puts all countries on a more consistent scale. (Countries with bigger populations won't be heavily weighted vs smaller countries.)\n    \n    \n<b> Binning Color Scale\n    \nIt's required to bin the color scale because the distribution of vaccinations per 100 people is very heavily right skewed. There are many more low values than high values. The default scaling method would result in mostly red on the map. Chaning how the color scale is binned, allows the viewer to see more granularity in the many countries with lower vaccination counts, to date.","46e67bd4":"Geopandas allows for geospatial data structures. It makes data manipulation seamless with other pandas dataframes. We need to install it to injest the country boundary objects (Polygons and MultiPolygons).\n\n[GeoPandas Documentation](https:\/\/geopandas.org\/)","ca97f548":"# Global Covid-19 Vaccination Data Exploration\n#### Kendall Dyke\n___\n## Geospatial Data Visualization\n\n### Choropleth Maps [Visualization Technique]","47b00409":"A few of the ISO codes have a prefix \"OWID_\". We need to remove that prefix in order to properly match up each country with the geographic dataset.","e7cbb7df":"### Results & Conclusions\n\n#### Results\nThe countries that are not included in the vaccination dataset are gray. It appears that most \"gray\" countries are in under-developed countries. The downfall with this dataset is that we don't know whether these countries don't have vaccines or have not published the number of vaccines available in publically available online form.\n\nIt's also important to note why some countries (like Israel) have over 100 vaccines per 100 people. On the surface, this may seem like a data issue, however this is because many of the vaccines require two doses. In this case, they need 200 vaccines\/100 people to be complete.\n\n\n#### Conclusions\nFolium is great for building Choropleth maps. It makes it very easy to overlay the shapes onto an existing map. However, if you want to customize further, it's going to require expertise on different Python packages like Altair or even some HTML.","5201a60b":"Some of the columns have many null values. It's best if we focus on columns with little to no null values."}}