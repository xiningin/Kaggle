{"cell_type":{"de705665":"code","e73f9d6b":"code","6cf6013d":"code","f0fd950f":"code","36f88b2d":"code","0491b29e":"code","c5402b8f":"code","ac1185ca":"code","b6050c3f":"code","ffa9ac61":"code","167aaea9":"code","eb802f34":"code","268b1ead":"code","aad61476":"code","b89b1a0e":"code","f370320f":"code","bfa89cec":"code","54ccb911":"code","da7c1f01":"code","89f60d36":"code","23cb4674":"code","ed4478cb":"code","d6300867":"markdown","be4f8b9f":"markdown","e8608112":"markdown","d2a33f72":"markdown","f448edd4":"markdown","b901b82b":"markdown","c80b5c36":"markdown","b2c254c0":"markdown","73929b58":"markdown","c4afbae0":"markdown","06ea3a45":"markdown","7ac58850":"markdown","de5b12c8":"markdown","c063e44f":"markdown","dfc89dde":"markdown","641865e9":"markdown","fa894a3c":"markdown","756a40b4":"markdown","aa1d1824":"markdown","ae55e7c4":"markdown"},"source":{"de705665":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\nfrom statsmodels.graphics.gofplots import qqplot\nfrom pandas.plotting import register_matplotlib_converters\n\nregister_matplotlib_converters()","e73f9d6b":"def moving_average(dados, p):\n    '''\n    This function calculate\n    a simple average mean and has 2 parameters:\n    \n    1 - dados: The column with numerical prices or asset returns\n    \n    2 - p: the number of periods to create the average mean\n    '''\n    media = dados.rolling(p).mean()\n    media = media.fillna(0)\n    return media","6cf6013d":"def remove_outliers(data):\n    '''\n    This function removes outliers from \n    a pandas.core.series.Series object using\n    boxplot IQR method:\n    \n    Parameters:\n        data: a pandas.core.series.Series object with\n        outliers to be removed\n    '''\n    Q1 = data.quantile(0.25)\n    Q3 = data.quantile(0.75)\n    IQR = Q3 - Q1\n    data = np.where(data>(Q3+1.5*IQR),(Q3+1.5*IQR),data)\n    data = np.where(data<(Q1-1.5*IQR),(Q1-1.5*IQR),data)\n    return data","f0fd950f":"# loading dataset and seeing first rows\nibov = pd.read_csv('..\/input\/ibovespaibov-historical-data-from-1992-to-2019\/ibov_data.csv')\nibov.head()","36f88b2d":"# converting date column to date format\nibov['date'] = ibov['date'].apply(lambda x: datetime.strptime(x, '%d\/%m\/%Y'))","0491b29e":"# defyning the plotsize\nplt.figure(figsize=(30,15))\n\n# creating the mainplot with prices and dates\nsns.lineplot(x=ibov['date']\n             , y=np.log(ibov['close'])\n             , color='blue')\n\n# defyning title, labels and ticks parameters\nplt.title('How Bovespa index reacted to important moments on the economy and politics?', size=40)\nplt.xlabel('Years', size=25)\nplt.ylabel('Close Price', size=25)\nplt.xticks(size=20)\nplt.yticks(size=20)\n\n# adding vertical lines on plot\nplt.axvline(\"1992-05-20\", color='black'\n            , linestyle=\"-\"\n            , linewidth=1\n            , label='Black Wednesday')\n\nplt.axvline(\"1994-08-25\", color='darkgreen'\n            , linestyle=\"-\"\n            , linewidth=1\n            , label='The Mexican peso crisis')\n\nplt.axvline(\"1997-07-01\", color='darkred'\n            , linestyle=\"-\"\n            , linewidth=1\n            , label='Asian and russian financial crisis')\n\nplt.axvline(\"2000-03-10\", color='lightblue'\n            , linestyle=\"-\"\n            , linewidth=1\n            , label='dot-com bubble')\n\nplt.axvline(\"2004-01-01\", color='yellow'\n            , linestyle=\"-\"\n            , linewidth=1\n            , label='Commodities boom')\n\nplt.axvline(\"2008-04-24\", color='purple'\n            , linestyle=\"-\"\n            , linewidth=1\n            , label='2008 Great depression')\n\nplt.axvline(\"2008-11-01\", color='green'\n            , linestyle=\"-\"\n            , linewidth=1\n            , label='End of the Crisis')\n\nplt.axvline(\"2010-01-01\", color='red'\n            , linestyle=\"-\"\n            , linewidth=1\n            , label='Beginning of the Dilma era')\n\nplt.axvline(\"2016-08-31\", color='orange'\n            , linestyle=\"-\"\n            , linewidth=1\n            , label='Impeachment')\n\n# setting parameters to events text\nsetup = dict(size = 20, color = \"black\")\n\n# setting text with events\nplt.text(\"1990-02-01\", np.log(4000)\n         , \"Black Wednesday\"\n         , **setup)\n\nplt.text(\"1992-07-01\", np.log(7000)\n         , \"The Mexican peso crisis\"\n         , **setup)\n\nplt.text(\"1994-07-01\", np.log(16000)\n         , \"Asian and russian financial crisis\"\n         , **setup)\n\nplt.text(\"2000-03-10\", np.log(20000)\n         , \"dot-com bubble\"\n         , **setup)\n\nplt.text(\"2004-01-01\", np.log(16000)\n         , \"Commodities boom\"\n         , **setup)\n\nplt.text(\"2004-03-16\", np.log(80000)\n         , \"2008 Great depression\"\n         , **setup)\n\nplt.text(\"2008-11-01\", np.log(27000)\n         , \"End of the Crisis\"\n         , **setup)\n\nplt.text(\"2008-11-01\", np.log(27000)\n         , \"End of the Crisis\"\n         , **setup)\n\nplt.text(\"2010-01-01\", np.log(75000)\n         , \"Beginning of the Dilma era\"\n         , **setup)\n\nplt.text(\"2016-08-31\", np.log(35000)\n         , \"Impeachment\"\n         , **setup)\n\nplt.text(\"2016-08-31\", np.log(35000)\n         , \"Impeachment\"\n         , **setup)\n\n# setting legend parameters\nplt.legend(loc = \"upper left\"\n           , frameon = True\n           , fontsize = 18\n           , ncol = 2 \n           , fancybox = True\n           , framealpha = 0.95\n           , shadow = True\n           , borderpad = 1);","c5402b8f":"# creating a new column with returns\nibov['returns'] = ibov['close']\/ibov['open']-1\n\n# creating a new column with monthly average returns\nibov['monthly_average_returns'] = moving_average(ibov['returns'],30)\n\nibov.head()","ac1185ca":"# defyning the plotsize\nplt.figure(figsize=(20,10))\n\n# creating the plot to returns\nsns.lineplot(x='date'\n             ,y='returns'\n             ,data=ibov\n             ,label='daily returns'\n            ,color='blue')\n\n# creating the plot to average returns\nsns.lineplot(x='date'\n             ,y='monthly_average_returns'\n             ,data=ibov\n             ,label='monthly average returns'\n            ,color='orange')\n\n# setting title, labels and ticks parameters\nplt.title('Bovespa index returns over the years', size=30)\nplt.xlabel('Years', size=20)\nplt.ylabel('Returns', size=20)\nplt.xticks(size=15)\nplt.yticks(size=15)\n\n# setting legend parameters\nplt.legend(loc = \"upper right\"\n           , frameon = True\n           , fontsize = 18\n           , ncol = 2 \n           , fancybox = True\n           , framealpha = 0.95\n           , shadow = True\n           , borderpad = 1);","b6050c3f":"plt.figure(figsize=(16,10))\nsns.distplot(ibov['returns']\n             , label = 'Distribution'\n             , bins=200)\n\nplt.title('Bovespa index returns distribution', size=30)\nplt.xlabel('Frequency', size=20)\nplt.ylabel('Returns', size=20)\nplt.xticks(size=15)\nplt.yticks(size=15)\n\nplt.legend(loc = \"upper right\"\n           , frameon = True\n           , fontsize = 18\n           , ncol = 2 \n           , fancybox = True\n           , framealpha = 0.95\n           , shadow = True\n           , borderpad = 1);","ffa9ac61":"# creating a qqplot\nqqplot(ibov['returns'],line='s')\n\nplt.title('Probability distribution',size=15)\nplt.xlabel('Theoretical Quantiles',size=12)\nplt.ylabel('Sample Quantiles',size=12)\nplt.xticks(size=10)\nplt.yticks(size=10);","167aaea9":"plt.figure(figsize=(20,10))\nsns.boxplot(ibov['returns'], color='orange')\n\nplt.title('Bovespa returns distribution and outliers', size=30)\nplt.xlabel('Returns', size=20)\nplt.xticks(np.arange(-0.2,0.4,step=0.05), size=15);","eb802f34":"#removing outliers\nno_out_returns = remove_outliers(ibov['returns'])\n\n# defyning the plotsize\nplt.figure(figsize=(10,10))\n\n# creating the plot\nsns.boxplot(no_out_returns, color='green',orient='v')\n\nplt.title('Bovespa returns distribution without outliers', size=25)\nplt.ylabel('Returns', size=20)\nplt.yticks(np.arange(-0.05,0.06,step=0.025), size=15);","268b1ead":"# creating a qqplot\nqqplot(no_out_returns,line='s')\n\nplt.title('Probability distribution',size=15)\nplt.xlabel('Theoretical Quantiles',size=12)\nplt.ylabel('Sample Quantiles',size=12)\nplt.xticks(size=10)\nplt.yticks(size=10);","aad61476":"print(\"Average annual returns:\",round(ibov['returns'].groupby(ibov['year']).sum().mean()*100,2),\"%\")","b89b1a0e":"returns_by_year = pd.DataFrame(round(ibov['returns'].groupby(ibov['year']).sum()*100,2))\nreturns_by_year['pos_neg'] = returns_by_year>0\n\nplt.figure(figsize=(20,10))\nreturns_by_year.returns.plot(kind='bar'\n                      , color=returns_by_year.pos_neg.map({True: 'forestgreen', False: 'red'})\n                      , label='returns')\n\naverage_returns = np.mean(returns_by_year['returns'])\n\nplt.axhline(y=average_returns, color='blue', linestyle='-', label='Average returns')\n\nplt.title('Acumulated returns by year vs average returns',size=30)\nplt.xlabel('Years',size=20)\nplt.ylabel('Acumulated in %',size=20)\nplt.yticks(np.arange(-40,170,step=10), size=15)\nplt.xticks(rotation=45, size=15)\n\nplt.legend(loc = \"upper right\"\n           , frameon = True\n           , fontsize = 18\n           , ncol = 2 \n           , fancybox = True\n           , framealpha = 0.95\n           , shadow = True\n           , borderpad = 1);","f370320f":"data = returns_by_year['pos_neg'].value_counts().values.tolist()\npos_neg = pd.DataFrame(data=data,columns=['counts'],index=['positive','negative'])\n\n# difyning plot size\nplt.figure(figsize=(10,10))\n\n # here i use .value_counts() to count the frequency that each category occurs of dataset\npos_neg['counts'].plot(kind='pie'\n                       , colors=['lightgreen','red']\n                       , autopct='%1.1f%%' # adding percentagens\n                       , shadow=True\n                       , startangle=140)\n\n# defyning title and legend parameters\nplt.title(\"What's the proportion of positive annual returns?\",size=20)\nplt.legend(loc = \"upper right\"\n           , frameon = True\n           , fontsize = 10\n           , ncol = 2 \n           , fancybox = True\n           , framealpha = 0.95\n           , shadow = True\n           , borderpad = 1);","bfa89cec":"returns_by_month = pd.DataFrame(round(ibov['returns'].groupby(ibov['month']).sum()*100,2))\nreturns_by_month['pos_neg'] = returns_by_month>0\n\nplt.figure(figsize=(20,10))\nreturns_by_month.returns.plot(kind='bar'\n                      , color=returns_by_month.pos_neg.map({True: 'forestgreen', False: 'red'}))\n\nplt.title('Best months by acumulated returns in %',size=30)\nplt.xlabel('Months',size=20)\nplt.ylabel('Acumulated in %',size=20)\nplt.yticks(np.arange(-20,170,step=10), size=15)\nplt.xticks(rotation=45, size=15);","54ccb911":"# joining month and year columns in a new variables month_year\nibov[\"month_year\"] = ibov[\"month\"].map(str) + ibov[\"year\"].map(str)\n\n# calculating returns by month\nreturns_by_month = pd.DataFrame(round(ibov['returns'].groupby(ibov['month_year']).sum()*100,2))\nreturns_by_month['pos_neg'] = returns_by_month>0","da7c1f01":"plt.figure(figsize=(30,10))\nreturns_by_month.returns.plot(kind='bar'\n                      , color=returns_by_month.pos_neg.map({True: 'forestgreen', False: 'red'})\n                      , label='returns')\n\naverage_returns = np.mean(returns_by_month['returns'])\n\nplt.axhline(y=average_returns, color='blue', linestyle='-', label='Average returns')\n\nplt.title('Returns by month vs average monthly returns',size=30)\nplt.xlabel('Months',size=20)\nplt.ylabel('Acumulated in %',size=20)\nplt.yticks(np.arange(-60,80,step=10), size=15)\nplt.xticks(rotation=45, size=0)\n\nplt.legend(loc = \"upper right\"\n           , frameon = True\n           , fontsize = 18\n           , ncol = 2 \n           , fancybox = True\n           , framealpha = 0.95\n           , shadow = True\n           , borderpad = 1);","89f60d36":"data2 = returns_by_month['pos_neg'].value_counts().values.tolist()\npos_neg2 = pd.DataFrame(data=data2,columns=['counts'],index=['positive','negative'])\n\n# difyning plot size\nplt.figure(figsize=(10,10))\n\n # here i use .value_counts() to count the frequency that each category occurs of dataset\npos_neg2['counts'].plot(kind='pie'\n                       , colors=['lightgreen','red']\n                       , autopct='%1.1f%%' # adding percentagens\n                       , shadow=True\n                       , startangle=140)\n\n# defyning title and legend parameters\nplt.title(\"What's the proportion of positive monthly returns?\",size=20)\nplt.legend(loc = \"upper right\"\n           , frameon = True\n           , fontsize = 10\n           , ncol = 2 \n           , fancybox = True\n           , framealpha = 0.95\n           , shadow = True\n           , borderpad = 1);","23cb4674":"returns_by_week_day = pd.DataFrame(round(ibov['returns'].groupby(ibov['day_of_week']).sum()*100,2))\nreturns_by_week_day['pos_neg'] = returns_by_week_day>0\n\nplt.figure(figsize=(20,10))\nreturns_by_week_day.returns.plot(kind='bar'\n                      , color=returns_by_week_day.pos_neg.map({True: 'forestgreen', False: 'red'}))\n\nplt.title('Best days of week by acumulated returns %',size=30)\nplt.xlabel('Days',size=20)\nplt.ylabel('Acumulated in %',size=20)\nplt.yticks(np.arange(-70,350,step=20), size=15)\nplt.xticks(rotation=45, size=15);","ed4478cb":"# calculating positive and negatie daily returns\ndaily_returns = pd.DataFrame(round(ibov['returns'].groupby(ibov['date']).sum()*100,2))\ndaily_returns['pos_neg'] = daily_returns>0\n\ndata3 = daily_returns['pos_neg'].value_counts().values.tolist()\npos_neg3 = pd.DataFrame(data=data3,columns=['counts'],index=['positive','negative'])\n\n# difyning plot size\nplt.figure(figsize=(10,10))\n\n # here i use .value_counts() to count the frequency that each category occurs of dataset\npos_neg3['counts'].plot(kind='pie'\n                       , colors=['lightgreen','red']\n                       , autopct='%1.1f%%' # adding percentagens\n                       , shadow=True\n                       , startangle=140)\n\n# defyning title and legend parameters\nplt.title(\"What's the proportion of positive daily returns?\",size=20)\nplt.legend(loc = \"upper right\"\n           , frameon = True\n           , fontsize = 10\n           , ncol = 2 \n           , fancybox = True\n           , framealpha = 0.95\n           , shadow = True\n           , borderpad = 1);","d6300867":"### Acumulated returns by month\n\nJanuary has accumulated the main gains over the years, while June and May are the only ones that have accumulated negative returns, October and August have not had good gains either","be4f8b9f":"We have a column with dates, to better plot interpretation let's convert then into a datetime object","e8608112":"### Approach\n\nMy focus here will be on visualizations to understand better this incridible index and answer the following questions:\n\n - How ibovespa grow over the years?\n - How the prices behave in important events in the local and international?\n - The retorns are normally distributed?\n - What is the anually average retorn?\n - What years IBOV perform better and worse?\n - What months IBOV perform better and worse?\n - What day of week IBOV perform better and worse?","d2a33f72":"#### Daily returns proportion","f448edd4":"#### ***Please let me know what you think about this kernel and if it is useful and you can leave an upvote I would be very grateful! :)***\n","b901b82b":"### Loading Required Libraries, Functions and Datasets","c80b5c36":"#### Better days of the week","b2c254c0":"### Conclusions\n\nThe Bovespa index has passed for many complicated periods with national and international economic crises, the most large period of ressession was in \"Dilma Era\" from 2010 to 2016;\n\nThe daily returns are not normaly distributed and dealing with skewness is desirable before going to modeling, one good approach is use boxplot IQR method to replace outliers;\n\nThe better year to bovespa index in terms of performance was in 1993 and to worse in 2008, the largest period in recession start in 2010 and ends in 2016 with the end of \"Dilma Era\";\n\nJanuary is the best month to Bovespa index with more than 150% of acumulated positive returns and the worse is June with something like -8% of acumulated negative returns;\n\nFriday is the better day to Bovespa index and Monday the worse;\n\nWhen we look at the long term, we tend to have more positive returns, with 67.9% looking at annual returns, 62.1% looking at monthly returns and only 51.6% looking at daily returns, trading daily returns without an incredible strategy can be like being in a casino in Las Vegas.","73929b58":"#### Acumulated returns and Average returns\n\nWith a average annual performance of 24.63% and acumulated returns great than 100% a year in some years and more than -30% in anothers, let's see how Bovespa index perform over the year with acumulated returns vs the average annual returns.","c4afbae0":"### Thank you very much for read this kernel, let me know what you think about this kernel, leave a comment and if you think that this kernel was useful please give a upvote, i really appriciate that :)\n<img src='https:\/\/i.imgur.com\/2Ft7VUy.gif' style='width:350px;height:300px'\/>\n\n**Figure 2**: HOLD\/SELL roulette. Source: Google","06ea3a45":"Let's take a look into qqplot now... BAM! much interesting! Now we restringe the returns range and this can be extremely useful to predictions","7ac58850":"#### Daily returns vs Average monthly returns\n\nLet's take a look into daily returns and compare then with the average monthly returns to understand how great falls or ups are mitigated when we compare with averages. Looking into this just seems to tell us the mensage: ***Focus on long term, forget daily variations!***","de5b12c8":"#### Are returns normally distributed?\n\n**NO** If we take a quick look into histogram plot we can be confused with this pretty curve, but some returns are above 0.2 and this problably are causing a \"Right Skewed or Postive Skewed\" problem, let's use a qqplot to confirm our suspicions.","c063e44f":"### Introduction\n\nThe Bovespa Index (Portuguese: \u00cdndice Bovespa), best known as Ibovespa is the benchmark index of about 73 stocks that are traded on the B3. The Ibovespa is the most important indicator of the Brazilian stock market. It is designed to summarize in a single number the general behavior of the main shares traded, facilitating the monitoring and disclosure of the average profitability of these shares.\n\nFor this purpose, a theoretical stock portfolio is defined, composed of the companies that represented the majority of the financial volume traded at B3 (merger of Cetip with BM & FBovespa) during a certain period.\n\nThe Ibovespa simulates the performance of an investment of funds in this theoretical portfolio, in a scenario in which there are no additional contributions or redemptions, and in which all dividends are reinvested.","dfc89dde":"# Exploring Bovespa index(IBOV)\n## An analysis of the prices and returns of the largest Brazilian stock index","641865e9":"To understand better this outliers we can take a look into a boxplot where we can see that the majority outliers are located below -0.1 and above 0.1, to let more simple to modeling and predict returns we can replace outliers using IQR boxplot method","fa894a3c":"As we suspect above we have a \"Right Skewed\" problem with our returns and to modeling and predict it is advisable to process this data","756a40b4":"### Exploratory Data Analysis\n\n#### How Bovespa index reacted to important moments?\n\nSince 1992 the world had sofer many devastly crises, all crises left their mark on Bovespa, with falls great then 50% like \"2008 Great depression\" and \"dot-com bubble\", but always recovering relativily quickly if we compared with the most long bear market that Bovespa index has passed: **\"The Dilma era\"**.\n\nWas almost 6 years in bear market then starts grow again with rumors and finaly impeachment in 2016.","aa1d1824":"#### Treating outliers\nLet's see how our returns seems like without outliers...","ae55e7c4":"<img src='https:\/\/i.imgur.com\/Li58FWq.png' style='width:1600px;height:350px'\/>\n\n**Figure 1**: Ibovespa Index. Source: Google"}}