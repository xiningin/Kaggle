{"cell_type":{"e454ed05":"code","9ffe6eff":"code","090aacbb":"code","12dffe89":"code","dd6aaf54":"code","d911cfa9":"code","4e799475":"code","8640d065":"code","45c3e21f":"code","c0b5d2a9":"code","2e28a5ec":"code","49221e77":"code","edee6f9f":"code","673d21ee":"code","785d2f6b":"code","66f69406":"code","b1cfd034":"code","af8432be":"code","18dbed0f":"code","99cb959b":"code","fbcc1ed6":"code","73562c79":"code","a788ce1d":"markdown"},"source":{"e454ed05":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9ffe6eff":"pd.set_option('display.max_columns', None)","090aacbb":"data=pd.read_csv('..\/input\/train.csv')\ndata.columns","12dffe89":"data.head()","dd6aaf54":"data.isnull().sum()","d911cfa9":"data['SalePrice'].describe()","4e799475":"sns.distplot(data['SalePrice'],vertical=True)","8640d065":"var='GrLivArea'\ndf=pd.concat([data['SalePrice'],data[var]],axis=1)\ndf.plot.scatter(x=var,y='SalePrice',ylim=(0,800000))","45c3e21f":"var='TotalBsmtSF'\nplt.scatter(var,'SalePrice',data=data)\nplt.ylim(0,800000)\nplt.show()","c0b5d2a9":"data['OverallQual'].describe()","2e28a5ec":"data['OverallQual'].describe()\nfig=sns.boxplot(x='OverallQual',y='SalePrice',data=data)\nfig.axis(ymin=0,ymax=800000)","49221e77":"corrmat=data.corr()\nsns.heatmap(corrmat,vmax=0.8,square=True)\nk=10\ncols=corrmat.nlargest(k,'SalePrice')['SalePrice'].index\ncm=np.corrcoef(data[cols].values.T)\nsns.set(font_scale=1.25)\nhm=sns.heatmap(cm,cbar=True,annot=True,square=True,fmt='.2f',annot_kws={'size':10},yticklabels=cols.values,xticklabels=cols.values)\nplt.show()\n","edee6f9f":"sns.set()\nsns.pairplot(data[cols],size=2.5)\nplt.show()","673d21ee":"total=data.isnull().sum().sort_values(ascending=False)\npercentage=(data.isnull().sum()\/data.isnull().count()).sort_values(ascending=False)\nmissing_data=pd.concat([total,percentage],axis=1,keys=['total','percentage'])\nmissing_data.head(20)","785d2f6b":"data = data.drop((missing_data[missing_data['total'] > 1]).index,1)\ndata = data.drop(data.loc[data['Electrical'].isnull()].index)\ndata.isnull().sum().max()","66f69406":"data.dtypes\n","b1cfd034":"main_cols = data.columns","af8432be":"main_cols","18dbed0f":"data1 = data.drop(columns = ['SalePrice']).columns","99cb959b":"from sklearn.ensemble import RandomForestRegressor\n\n\ntrain = pd.read_csv('..\/input\/train.csv')\ntrain_y = train.SalePrice\ntrain_x = train[data1].select_dtypes(exclude=['object'])\nmodel = RandomForestRegressor()\nmodel.fit(train_x,train_y)","fbcc1ed6":"from sklearn.preprocessing import Imputer\n\ntest = pd.read_csv('..\/input\/test.csv')\ntest_x = test[data1].select_dtypes(exclude = ['object'])\nmy_imputer = Imputer()\ntest_x = my_imputer.fit_transform(test_x)\npredicted_prices = model.predict(test_x)\npredicted_prices\n","73562c79":"my_submission = pd.DataFrame({'Id': test.Id, 'SalePrice': predicted_prices})\n# you could use any filename. We choose submission here\nmy_submission.to_csv('submission.csv', index=False)\n","a788ce1d":"Sale Price Column is Our Target Column"}}