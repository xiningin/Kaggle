{"cell_type":{"c34d68e7":"code","415dd921":"code","e66a7c61":"code","03b12f24":"code","e903d4f4":"code","f689ebca":"code","d64764c8":"code","c59710f2":"code","39c96d5d":"code","b2df01fa":"code","3ac2142c":"code","2cd332c2":"code","4ca66c98":"code","be13e19c":"code","cee7b64d":"code","bdf812b3":"code","565d2ecb":"code","2a59e7d3":"code","16b2ce4e":"code","6ca3252b":"code","342f3945":"code","2791ca7e":"code","2b5813d5":"code","69806797":"code","21af6ee4":"code","368a8dbf":"code","69de7d6b":"code","272d05f1":"code","a51d0911":"code","bf3d22c8":"code","2f787703":"code","2341c465":"code","306c1ca9":"code","249b901f":"code","d4a8b09e":"code","cf95376f":"code","595bb466":"markdown","df44a355":"markdown","3c075944":"markdown","60f4cda9":"markdown","0a70831d":"markdown","6b9fc662":"markdown","15fda102":"markdown","c683c6bf":"markdown"},"source":{"c34d68e7":"import numpy as np \nimport pandas as pd \nimport seaborn as sns # Beautiful Graphs\nsns.set_style('dark') # Set graph styles to 'dark'\n\nimport matplotlib.pyplot as plt # Normal ploating graphs\n# show graphs in this notebook only \n%matplotlib inline\n\nimport plotly.express as px # For interactive plots\n\n# ignore  the warning\nimport warnings  \nwarnings.filterwarnings('ignore') \n\n","415dd921":"traindf = pd.read_csv('.\/..\/input\/titanic\/train.csv')\ntraindf.head()","e66a7c61":"testdf = pd.read_csv('.\/..\/input\/titanic\/test.csv')\ntestdf.head()","03b12f24":"traindf.shape\n","e903d4f4":"testdf.shape","f689ebca":"traindf.info()","d64764c8":"testdf.info()","c59710f2":"remove = ['Name','Ticket','Cabin']\ntraindf = traindf.drop(remove,axis = 1)\n","39c96d5d":"testdf = testdf.drop(remove,axis = 1)","b2df01fa":"traindf['Age'] = traindf['Age'].fillna(traindf['Age'].mean())\ntestdf['Age'] = testdf['Age'].fillna(testdf['Age'].mean())","3ac2142c":"traindf.info()\ntestdf.info()","2cd332c2":"traindf['Embarked'].value_counts()","4ca66c98":"traindf['Embarked'] = traindf['Embarked'].fillna('S')","be13e19c":"testdf['Fare'] = testdf['Fare'].fillna(testdf['Fare'].mean())","cee7b64d":"traindf['Sex'].value_counts()","bdf812b3":"traindf['Sex'] = traindf['Sex'].replace({'male': 0, 'female': 1})\ntestdf['Sex'] = testdf['Sex'].replace({'male': 0, 'female': 1})","565d2ecb":"traindf['Embarked'].value_counts()","2a59e7d3":"traindf['Embarked'] = traindf['Embarked'].replace ({ 'C' : 1, 'S' : 2, 'Q': 3})\ntestdf['Embarked'] = testdf['Embarked'].replace ({ 'C' : 1, 'S' : 2, 'Q': 3})","16b2ce4e":"traindf.info()\ntestdf.info()","6ca3252b":"plt.figure(figsize=(10,15))\nsns.heatmap(traindf.corr(),cmap = 'Blues', annot = True, linewidths = 1, fmt = '.1f')\nfig = plt.gcf()\nplt.show()","342f3945":"fig = px.bar(traindf.Survived.value_counts())\nfig.show()","2791ca7e":"fig = px.bar(traindf.groupby(['Survived']).count())\nfig.show()","2b5813d5":"fig = px.histogram(traindf,x = 'Survived', y = 'Pclass', color = 'Pclass')\nfig.show()","69806797":"fig = px.bar(traindf, x = 'Sex', y = 'Survived', color = 'Sex')\nfig.show()","21af6ee4":"plt.figure(figsize=(10, 7))\n\nsns.barplot(x = 'Parch', y= 'Survived', data= traindf)\nplt.title(\"Parch and Survived Graph\")\n\nplt.show()","368a8dbf":"xtrain = traindf.drop(['PassengerId', 'Survived'], axis = 1)\nytrain = traindf['Survived']\nxtest = testdf.drop(['PassengerId'], axis = 1)","69de7d6b":"from sklearn.linear_model import LogisticRegression","272d05f1":"model = LogisticRegression()\nmodel.fit(xtrain, ytrain)","a51d0911":"pred = model.predict(xtest)\npred.shape","bf3d22c8":"accu = model.score(xtrain,ytrain)\nprint( \"Model Prediction Score:\", (accu * 100).round(2))","2f787703":"from sklearn.tree import DecisionTreeClassifier","2341c465":"model1 = DecisionTreeClassifier()\nmodel1.fit(xtrain,ytrain)","306c1ca9":"pred1 = model1.predict(xtest)\npred1.shape","249b901f":"accu1 = model1.score(xtrain,ytrain)\nprint( \"Model Prediction Score:\", (accu1 * 100).round(2))\n","d4a8b09e":"dict = { 'PassengerId' : testdf['PassengerId'], 'Survived' : pred1}\nnew = pd.DataFrame(dict, )\nnew.shape","cf95376f":"y = new.to_csv('.\/my_new_submission.csv', index=False)\nprint(\"successful\")","595bb466":"# Decision Tree Classifier","df44a355":"# Model Submission","3c075944":"# **Feature Engineering**","60f4cda9":"# Data Visualization","0a70831d":"# Data Processing","6b9fc662":"# 1. Logistic Regression ","15fda102":"# Model Prediction","c683c6bf":"# Titanic Notebook"}}