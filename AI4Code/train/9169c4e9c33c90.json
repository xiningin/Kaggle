{"cell_type":{"becca300":"code","5226464f":"code","19c8919e":"code","b5622211":"code","99b27761":"code","56e4c00a":"code","37a6c975":"code","6cc91f60":"code","b515c096":"code","b9ff0fb6":"code","4a65968e":"code","537237a4":"code","aa5eab24":"code","4bfd8861":"code","08fff5ef":"code","5e2272de":"code","bfbe9980":"code","d6119d77":"code","427a637f":"code","b207101d":"code","ae23625b":"code","ae56772b":"code","30f0c543":"code","83b92181":"code","41bd620f":"code","31b160b7":"code","eb63e913":"code","d4503810":"code","a829b1ff":"code","8f7d105e":"code","157cea0a":"code","4034285a":"code","da9ca245":"code","dd8c587f":"code","e314afe0":"code","bd341c18":"code","38895ea7":"code","e72bfbc8":"code","7ac191a7":"code","a80365b3":"code","a7bdf0e5":"code","c47389ff":"code","9daf1eb3":"code","54a7cfff":"code","712b36e7":"code","51324bf8":"code","bfc151e6":"code","2c14165c":"code","5f19049f":"code","f4fa50a6":"code","f2ac82c9":"code","2bbe7139":"code","513a72b5":"code","b7e66053":"code","58c8b927":"code","822c32ff":"code","b4c33962":"code","a2217fb7":"code","2ee99a9f":"code","05af0393":"code","a6dd6408":"code","e358241d":"code","e7cb54e6":"code","d5eecddf":"markdown","ce9dfe6a":"markdown","d2e7fd09":"markdown","9dab212a":"markdown","6da06b10":"markdown","8b64b714":"markdown","15f9c823":"markdown","30a33fb5":"markdown","fc070678":"markdown","e34e49fc":"markdown","08577bf4":"markdown","f3490470":"markdown","cebf2b4a":"markdown","394e179e":"markdown","f7c2108e":"markdown","79153f15":"markdown","e8c6fff6":"markdown","644ebaaf":"markdown","0545c1a6":"markdown","5aea70ae":"markdown","e7673a82":"markdown","0cec8a51":"markdown","4b6486c9":"markdown","3bc8d8da":"markdown","fe4ffe8d":"markdown","e406b4ca":"markdown","54bb80db":"markdown","baff2a70":"markdown","98c05696":"markdown","6f8f08be":"markdown","66919b7e":"markdown","88e69a35":"markdown","6b648cf8":"markdown","3d9af0a4":"markdown","4c8d11e0":"markdown","c2d8a22c":"markdown","6955c83c":"markdown","13124dbe":"markdown","a247b39c":"markdown","14307573":"markdown","2136e5b3":"markdown","2ac3d6d7":"markdown","6325dd4c":"markdown","3ed75857":"markdown","4ea9ab95":"markdown","18f3abd7":"markdown","49c83e76":"markdown","ff2e4f52":"markdown","31297cca":"markdown","7f26da4c":"markdown","45a962f6":"markdown","facd0e3c":"markdown","dde1bd28":"markdown","40a79417":"markdown","ed01f323":"markdown"},"source":{"becca300":"numerical = list(set(df.columns) -\n                 set(['Name','Author']))\ncorr_matrix = df[numerical].corr()\n\nsns.heatmap(corr_matrix);\nplt.xticks(rotation=45);","5226464f":"plt.figure(figsize=(10,6))\n\nax = sns.countplot(data=df, x=df.Title.value_counts(), palette=\"Set2\");\n\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), 'd'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\n\nax.set(xlabel=\"Appearances\", ylabel=\"Count\");\nax.set_title(\"Times a Title Shows up on Top 50 Charts (2009-2019)\");\nplt.show();","19c8919e":"plt.figure(figsize=(10,6))\n\nax = sns.countplot(data=df_repeat, x=\"Top 50 Appearances\", palette=\"Set2\");\n\nfor p in ax.patches:\n    ax.annotate('{:.1%}'.format(p.get_height()\/len(df_repeat)), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\n\nax.set(xlabel=\"Appearances\", ylabel=\"Count\");\nax.set_title(\"Repeat Top 50 Appearances\");\nplt.show();","b5622211":"plt.figure(figsize=(10,6))\nbin_width=.05\nticks = list(df['User Rating'].unique());\nax = sns.histplot(df, x=\"User Rating\", color='royalblue', kde=True, binwidth=bin_width);\nax.set(xlabel=\"User Rating\", ylabel=\"Count\");\nax.set_title(\"User Rating Distribution\");\nplt.xticks(ticks);\nplt.show();","99b27761":"plt.figure(figsize=(10,6))\nax = sns.histplot(df, x=\"Reviews\", color='royalblue', kde=True);\nax.set(xlabel=\"Reviews\", ylabel=\"Count\");\nax.set_title(\"Reviews Distribution\");\nplt.show();","56e4c00a":"plt.figure(figsize=(12,10));\nax = df_rev.plot(kind='scatter', x='Reviews', y='Title');\nplt.title('Books with Most Reviews');\nplt.tick_params(axis='y', which='major', labelsize=5);\nax.set_ylabel('');\nplt.show();","37a6c975":"sns.jointplot('User Rating','Reviews', data=df_rev,\n              kind=\"kde\", fill=True, color='deepskyblue');","6cc91f60":"plt.figure(figsize=(12,10))\nax = df_price.plot(kind='scatter', x='Price', y='Title');\nplt.title('Most Expensive Books');\nplt.tick_params(axis='y', which='major', labelsize=7);\nax.set_ylabel('');\nplt.show();","b515c096":"sns.jointplot('User Rating','Price', data=df_price,\n              kind=\"kde\", fill=True, color='deepskyblue');","b9ff0fb6":"_, axes = plt.subplots(nrows=4, ncols=3, figsize=(20, 20))\n\ndat_19.plot(kind='bar', x='Author', title=\"2019 Repeat Appearances\", rot=0, ax=axes[0][0], color='royalblue');\ndat_18.plot(kind='bar', x='Author', title=\"2018 Repeat Appearances\", rot=0, ax=axes[0][1], color='royalblue');\ndat_17.plot(kind='bar', x='Author', title=\"2017 Repeat Appearances\", rot=0, ax=axes[0][2], color='royalblue');\ndat_16.plot(kind='bar', x='Author', title=\"2016 Repeat Appearances\", rot=0, ax=axes[1][0], color='royalblue');\ndat_15.plot(kind='bar', x='Author', title=\"2015 Repeat Appearances\", rot=90, ax=axes[1][1], color='royalblue');\ndat_14.plot(kind='bar', x='Author', title=\"2014 Repeat Appearances\", rot=0, ax=axes[1][2], color='royalblue');\ndat_13.plot(kind='bar', x='Author', title=\"2013 Repeat Appearances\", rot=0, ax=axes[2][0], color='royalblue');\ndat_12.plot(kind='bar', x='Author', title=\"2012 Repeat Appearances\", rot=0, ax=axes[2][1], color='royalblue');\ndat_11.plot(kind='bar', x='Author', title=\"2011 Repeat Appearances\", rot=0, ax=axes[2][2], color='royalblue');\ndat_10.plot(kind='bar', x='Author', title=\"2010 Repeat Appearances\", rot=0, ax=axes[3][0], color='royalblue');\ndat_09.plot(kind='bar', x='Author', title=\"2009 Repeat Appearances\", rot=90, ax=axes[3][1], color='royalblue');\naxes[3,2].set_axis_off();\nplt.tight_layout();","4a65968e":"ax = sns.countplot(data=df, x='Genre', palette='Set2');\nfor p in ax.patches:\n    ax.annotate('{:.1%}'.format(p.get_height()\/len(df['Genre'])), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 5), \n                   textcoords = 'offset points')\nax.set(ylabel=\"Count\");","537237a4":"_, axes = plt.subplots(1, 2, sharey=False, figsize=(10, 4))\n\nsns.violinplot(x='Genre', y='User Rating', data=df, ax=axes[0], palette='Set2');\nsns.violinplot(x='Genre', y='Price', data=df, ax=axes[1], palette='Set2');","aa5eab24":"!python -m pip install seaborn==0.11.1","4bfd8861":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\n\nwarnings.filterwarnings('ignore')\n%config InlineBackend.figure_format = 'retina'","08fff5ef":"df = pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')","5e2272de":"df.rename(columns={'Name': 'Title'}, inplace=True)\ndf['Freq']=df.groupby(by='Title')['Title'].transform('count')\ndf.head()","bfbe9980":"df.columns","d6119d77":"df.describe()","427a637f":"df.info()","b207101d":"df.Title.value_counts()","ae23625b":"plt.figure(figsize=(10,6))\n\nax = sns.countplot(data=df, x=df.Title.value_counts(), palette=\"Set2\")\n\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), 'd'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\n\nax.set(xlabel=\"Appearances\", ylabel=\"Count\")\nax.set_title(\"Times a Title Shows up on Top 50 Charts (2009-2019)\")\nplt.show()","ae56772b":"print(\"Title | Appearances\")\nfor title, count in df.Title.value_counts().items():\n    if (count == 10) or (count == 9) or (count == 8):\n        print(f\"{title} | {count}\")","30f0c543":"df.loc[df['Title'] == 'Publication Manual of the American Psychological Association, 6th Edition']","83b92181":"df.Author.value_counts()","41bd620f":"plt.figure(figsize=(10,6))\n\nax = sns.countplot(data=df, x=df.Author.value_counts(), palette=\"Set2\")\n\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), 'd'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\n\nax.set(xlabel=\"Appearances\", ylabel=\"Number of Authors\")\nax.set_title(\"Total Appearances in the Top 50 Charts\")\nplt.show()","31b160b7":"for x, y in df.Author.value_counts().items():\n     if y>5: print(x, y)","eb63e913":"df.loc[df['Author'] == 'Dr. Seuss']","d4503810":"df_repeat = pd.DataFrame(\n            [x, y] for x, y in df.Author.value_counts().iteritems() if (y > 1)\n)","a829b1ff":"df_repeat.columns = ['Author','Top 50 Appearances']\ndf_repeat","8f7d105e":"plt.figure(figsize=(10,6))\n\nax = sns.countplot(data=df_repeat, x=\"Top 50 Appearances\", palette=\"Set2\")\n\nfor p in ax.patches:\n    ax.annotate('{:.1%}'.format(p.get_height()\/len(df_repeat)), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\n\nax.set(xlabel=\"Appearances\", ylabel=\"Count\")\nax.set_title(\"Repeat Top 50 Appearances\")\nplt.show()","157cea0a":"df['User Rating'].value_counts()","4034285a":"plt.figure(figsize=(10,6))\nbin_width=.05\nticks = list(df['User Rating'].unique())\nax = sns.histplot(df, x=\"User Rating\", color='royalblue', kde=True, binwidth=bin_width)\nax.set(xlabel=\"User Rating\", ylabel=\"Count\")\nax.set_title(\"User Rating Distribution\")\nplt.xticks(ticks)\nplt.show()","da9ca245":"df.loc[df['User Rating'] < 4.0].drop_duplicates('Title')","dd8c587f":"df.loc[df['User Rating'] == df['User Rating'].min()]","e314afe0":"df.Reviews.value_counts()","bd341c18":"plt.figure(figsize=(10,6))\nax = sns.histplot(df, x=\"Reviews\", color='royalblue', kde=True)\nax.set(xlabel=\"Reviews\", ylabel=\"Count\")\nax.set_title(\"Reviews Distribution\")\nplt.show()","38895ea7":"df_rev = df.loc[df['Reviews'] > 2.5*df.Reviews.median()].drop_duplicates('Title')","e72bfbc8":"plt.figure(figsize=(20,20))\nax = df_rev.plot(kind='scatter', x='Reviews', y='Title')\nplt.title('Books with Most Reviews')\nplt.tick_params(axis='y', which='major', labelsize=5)\nax.set_ylabel('')\nplt.show()","7ac191a7":"sns.jointplot('User Rating','Reviews', data=df_rev,\n              kind=\"kde\", fill=True, color='deepskyblue');","a80365b3":"df.loc[df['Reviews'] == df['Reviews'].max()]","a7bdf0e5":"df.Price.value_counts(ascending=False)","c47389ff":"df_price = df.loc[df['Price'] > 2.0*df.Price.median()].drop_duplicates('Title')","9daf1eb3":"plt.figure(figsize=(12,10))\nax = df_price.plot(kind='scatter', x='Price', y='Title')\nplt.title('Most Expensive Books')\nplt.tick_params(axis='y', which='major', labelsize=7)\nax.set_ylabel('')\nplt.show()","54a7cfff":"sns.jointplot('User Rating','Price', data=df_price,\n              kind=\"kde\", fill=True, color='deepskyblue');","712b36e7":"df.loc[df['Price'] == df['Price'].max()]","51324bf8":"df.Year.value_counts()","bfc151e6":"df_2019 = df.loc[df['Year'] == 2019]\ndf_2018 = df.loc[df['Year'] == 2018]\ndf_2017 = df.loc[df['Year'] == 2017]\ndf_2016 = df.loc[df['Year'] == 2016]\ndf_2015 = df.loc[df['Year'] == 2015]\ndf_2014 = df.loc[df['Year'] == 2014]\ndf_2013 = df.loc[df['Year'] == 2013]\ndf_2012 = df.loc[df['Year'] == 2012]\ndf_2011 = df.loc[df['Year'] == 2011]\ndf_2010 = df.loc[df['Year'] == 2010]\ndf_2009 = df.loc[df['Year'] == 2009]","2c14165c":"cols = ['Author', 'Count']\ndat_19 = pd.DataFrame(columns = cols)\nfor name, count in df_2019.Author.value_counts().items():\n    if count > 1:\n        dat_19 = dat_19.append({'Author': str(name), 'Count':count},ignore_index=True)","5f19049f":"cols = ['Author', 'Count']\ndat_18 = pd.DataFrame(columns = cols)\nfor name, count in df_2018.Author.value_counts().items():\n    if count > 1:\n        dat_18 = dat_18.append({'Author': str(name), 'Count':count},ignore_index=True)","f4fa50a6":"cols = ['Author', 'Count']\ndat_17 = pd.DataFrame(columns = cols)\nfor name, count in df_2017.Author.value_counts().items():\n    if count > 1:\n        dat_17 = dat_17.append({'Author': str(name), 'Count':count},ignore_index=True)","f2ac82c9":"cols = ['Author', 'Count']\ndat_16 = pd.DataFrame(columns = cols)\nfor name, count in df_2016.Author.value_counts().items():\n    if count > 1:\n        dat_16 = dat_16.append({'Author': str(name), 'Count':count},ignore_index=True)","2bbe7139":"cols = ['Author', 'Count']\ndat_15 = pd.DataFrame(columns = cols)\nfor name, count in df_2015.Author.value_counts().items():\n    if count > 1:\n        dat_15 = dat_15.append({'Author': str(name), 'Count':count},ignore_index=True)","513a72b5":"cols = ['Author', 'Count']\ndat_14 = pd.DataFrame(columns = cols)\nfor name, count in df_2014.Author.value_counts().items():\n    if count > 1:\n        dat_14 = dat_14.append({'Author': str(name), 'Count':count},ignore_index=True)","b7e66053":"cols = ['Author', 'Count']\ndat_13 = pd.DataFrame(columns = cols)\nfor name, count in df_2013.Author.value_counts().items():\n    if count > 1:\n        dat_13 = dat_13.append({'Author': str(name), 'Count':count},ignore_index=True)","58c8b927":"cols = ['Author', 'Count']\ndat_12 = pd.DataFrame(columns = cols)\nfor name, count in df_2012.Author.value_counts().items():\n    if count > 1:\n        dat_12 = dat_12.append({'Author': str(name), 'Count':count},ignore_index=True)","822c32ff":"cols = ['Author', 'Count']\ndat_11 = pd.DataFrame(columns = cols)\nfor name, count in df_2011.Author.value_counts().items():\n    if count > 1:\n        dat_11 = dat_11.append({'Author': str(name), 'Count':count},ignore_index=True)","b4c33962":"cols = ['Author', 'Count']\ndat_10 = pd.DataFrame(columns = cols)\nfor name, count in df_2010.Author.value_counts().items():\n    if count > 1:\n        dat_10 = dat_10.append({'Author': str(name), 'Count':count},ignore_index=True)","a2217fb7":"cols = ['Author', 'Count']\ndat_09 = pd.DataFrame(columns = cols)\nfor name, count in df_2009.Author.value_counts().items():\n    if count > 1:\n        dat_09 = dat_09.append({'Author': str(name), 'Count':count},ignore_index=True)","2ee99a9f":"_, axes = plt.subplots(nrows=4, ncols=3, figsize=(20, 20))\n\ndat_19.plot(kind='bar', x='Author', title=\"2019 Repeat Appearances\", rot=0, ax=axes[0][0], color='royalblue');\ndat_18.plot(kind='bar', x='Author', title=\"2018 Repeat Appearances\", rot=0, ax=axes[0][1], color='royalblue');\ndat_17.plot(kind='bar', x='Author', title=\"2017 Repeat Appearances\", rot=0, ax=axes[0][2], color='royalblue');\ndat_16.plot(kind='bar', x='Author', title=\"2016 Repeat Appearances\", rot=0, ax=axes[1][0], color='royalblue');\ndat_15.plot(kind='bar', x='Author', title=\"2015 Repeat Appearances\", rot=90, ax=axes[1][1], color='royalblue');\ndat_14.plot(kind='bar', x='Author', title=\"2014 Repeat Appearances\", rot=0, ax=axes[1][2], color='royalblue');\ndat_13.plot(kind='bar', x='Author', title=\"2013 Repeat Appearances\", rot=0, ax=axes[2][0], color='royalblue');\ndat_12.plot(kind='bar', x='Author', title=\"2012 Repeat Appearances\", rot=0, ax=axes[2][1], color='royalblue');\ndat_11.plot(kind='bar', x='Author', title=\"2011 Repeat Appearances\", rot=0, ax=axes[2][2], color='royalblue');\ndat_10.plot(kind='bar', x='Author', title=\"2010 Repeat Appearances\", rot=0, ax=axes[3][0], color='royalblue');\ndat_09.plot(kind='bar', x='Author', title=\"2009 Repeat Appearances\", rot=90, ax=axes[3][1], color='royalblue');\naxes[3,2].set_axis_off()\n\nplt.tight_layout()","05af0393":"df.Genre.value_counts()","a6dd6408":"ax = sns.countplot(data=df, x='Genre', palette='Set2');\nfor p in ax.patches:\n    ax.annotate('{:.1%}'.format(p.get_height()\/len(df['Genre'])), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 5), \n                   textcoords = 'offset points')\nax.set(ylabel=\"Count\");","e358241d":"_, axes = plt.subplots(1, 2, sharey=False, figsize=(10, 4))\n\nsns.violinplot(x='Genre', y='User Rating', data=df, ax=axes[0], palette='Set2');\nsns.violinplot(x='Genre', y='Price', data=df, ax=axes[1], palette='Set2');","e7cb54e6":"sns.lmplot('Price', 'Reviews', data=df, hue='Genre', fit_reg=False, palette='Set2');","d5eecddf":"<a id=\"Reviews\"><\/a>","ce9dfe6a":"Dr. Seuss only had two books across the top 50 bestsellers,\nbut \"Oh, the Places You'll Go!\" reached top 50 a total of 8 times.","d2e7fd09":"<a id=\"Genre\"><\/a>","9dab212a":"Unsurprisingly, the User Rating distribution is skewed left, as most books in the top 50 have high ratings.","6da06b10":"# Reviews\n\n[Back to top](#Top)","8b64b714":"<a id=\"Dataset_Overview\"><\/a>","15f9c823":"### Authors with Repeat Top 50 Appearances\n\nOf the authors that made repeat appearances, how many total times did they appear?","30a33fb5":"### Which authors appeared a total of 6 or more times?","fc070678":"[Summary](#Summary)\n\n[Dataset Overview](#Dataset_Overview)\n\n[Title](#Title)\n\n[Author](#Author)\n\n[User Rating](#User_Rating)\n\n[Reviews](#Reviews)\n\n[Price](#Price)\n\n[Year](#Year)\n\n[Genre](#Genre)","e34e49fc":"<a id=\"Author\"><\/a>","08577bf4":"# User Rating\n\n[Back to top](#Top)","f3490470":"Let's look at how many times each author made the Top 50:","cebf2b4a":"Of those who made the Top 50 more than once, a majority (50.8%) only reached it twice.","394e179e":"### Look at the authors that made multiple appearances in a single year","f7c2108e":"Dr. Seuss appears a total of 9 times. Which books of his made the Top 50 over the years?","79153f15":"Violin plots for User Rating and Price between Genres","e8c6fff6":"<a id=\"Summary\"><\/a>","644ebaaf":"# Price\n\n[Back to top](#Top)","0545c1a6":"In general, books with the most reviews have lower prices, and are non fiction.","5aea70ae":"The *Diagnostic and Statistical Manual of Mental Disorders, 5th Edition: DSM-5* is the most expensive book that made the Top 50.","e7673a82":"The non fiction genre accounts for 56.4% of the accumulated Top 50 charts.","0cec8a51":"Bivariate distribution for User Rating and Price","4b6486c9":"<a id=\"Top\"><\/a>","3bc8d8da":"It looks like the the *APA Publication Manual* made 10 total appearances over the years, making Top 50 every year except in 2019.","fe4ffe8d":"Let's look at which books received less than a 4.0-star rating:","e406b4ca":"<a id=\"User_Rating\"><\/a>","54bb80db":"# Genre\n\n[Back to top](#Top)","baff2a70":"Which genre has been more popular in the Top 50 over the years?","98c05696":"# Author\n\n[Back to top](#Top)","6f8f08be":"<a id=\"Price\"><\/a>","66919b7e":"### Create a dataframe for each year","88e69a35":"Clearly, most of the authors appear only once in the top 50 charts.","6b648cf8":"Authors that made repeat appearances per year","3d9af0a4":"<a id=\"Year\"><\/a>","4c8d11e0":"# Table of Contents","c2d8a22c":"This notebook is a brief EDA on the Top 50 Amazon best-selling books dataset (https:\/\/www.kaggle.com\/sootersaalu\/amazon-top-50-bestselling-books-2009-2019).\n\nThis can be considered a work in progress, so any feedback or criticism is welcome; I'd like to improve for future notebooks!","6955c83c":"One or more authors made multiple Top 50 appearances in every year.","13124dbe":"# Summary","a247b39c":"# Year\n\n[Back to top](#Top)","14307573":"Genre distribution for Top 50","2136e5b3":"<a id=\"Title\"><\/a>","2ac3d6d7":"*Where the Crawdads Sing*, by Delia Owens, received the most amount of reviews.","6325dd4c":"Because this dataset is a compilation over 11 years, some books may appear more than once. I'll make a frequency column ('Freq') to show a cumulative count for each title.\n\nI also renamed the 'Name' column to 'Title' to better distinguish between book title and author name.","3ed75857":"# Dataset Overview\n\n[Back to top](#Top)","4ea9ab95":"Thanks for reading! Again, feedback and criticism are appreciated. Feel free to leave a thought in the comments.","18f3abd7":"Of all the titles that made it over the years, which was the most expensive?","49c83e76":"A vast majority of the books are unique to a single year's Top 50.\n\nLet's see which titles made the top 3 appearance count:","ff2e4f52":"# Title\n\n[Back to top](#Top)","31297cca":"5 books received less than a 4-star rating, two of which made a repeat appearance in the Top 50.\n\nJ.K. Rowling's *The Casual Vacancy* received the lowest rating of all the books.\n\nInterestingly, all these books are of the fiction genre.","7f26da4c":"# Amazon Top 50 EDA\n\nFor a quick synopsis, check out the [Summary](#Summary) section which includes all the main insights.","45a962f6":"Which titles got people talking the most?","facd0e3c":"Check for any immediate correlations between variables","dde1bd28":"[Back to top](#Top)","40a79417":"None of the books are included in all of the Top 50 charts across the years.\n\nThe closest is the *APA Publication Manual*, which appears in 10 of the 11 years.","ed01f323":"Bivariate distribution for User Rating and Reviews"}}