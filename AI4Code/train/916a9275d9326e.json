{"cell_type":{"a5666ad9":"code","adeba462":"code","fa993668":"code","d0078a42":"code","9b6655ed":"code","4234d251":"code","c894e666":"code","567a8024":"code","4ed0107a":"code","0a8e4a5e":"code","8c990614":"code","185f1dbc":"code","1bdbb662":"code","f38b9ffd":"code","fd45e011":"code","1aa3b6a8":"code","8c66c11b":"code","dbb042f4":"code","8d66d40c":"code","ade2e4ff":"code","34dae688":"code","4fd88b67":"markdown","cb58531b":"markdown","d2573d20":"markdown","d7804b75":"markdown"},"source":{"a5666ad9":"import pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport datetime\nimport seaborn as sns","adeba462":"print(os.listdir('..\/input\/seoul-bike-sharing-demand-data-set-for-kagglerza\/'))","fa993668":"# \u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\ninput_dir = '..\/input\/seoul-bike-sharing-demand-data-set-for-kagglerza\/'\n\ntrain = pd.read_csv(f'{input_dir}\/train.csv', parse_dates=['Date'])\ntest = pd.read_csv(f'{input_dir}\/test.csv', parse_dates=['Date'])","d0078a42":"train.head()","9b6655ed":"test.head()","4234d251":"# \u30ab\u30e9\u30e0\u3092\u78ba\u8a8d\n# nan\u306f\u5b58\u5728\u3057\u306a\u3044\n\nprint(train.info())","c894e666":"print(test.info())","567a8024":"# \u5e74\u6708\u65e5\u3092\u8868\u3059\u30ab\u30e9\u30e0\u3092\u4ed8\u4e0e\u3059\u308b\n\ntrain['Year'] = train['Date'].dt.year\ntrain['Month'] = train['Date'].dt.month\ntrain['Day'] = train['Date'].dt.day\n\ntest['Year'] = test['Date'].dt.year\ntest['Month'] = test['Date'].dt.month\ntest['Day'] = test['Date'].dt.day\n\ntrain.head()","4ed0107a":"# \u81ea\u8ee2\u8eca\u306e\u8cb8\u3057\u51fa\u3057\u6570\u306e\u63a8\u79fb(\u65e5\u3054\u3068)\n# \u51ac\u3088\u308a\u3082\u590f\u306e\u65b9\u304c\u8cb8\u3057\u51fa\u3057\u6570\u304c\u591a\u3044\uff1f\n# \u8cb8\u3057\u51fa\u3057\u6570\u304c\u6975\u7aef\u306b\u5c11\u306a\u304f\u306a\u308b\u65e5\u304c\u3044\u304f\u3064\u304b\u3042\u308b\n# 2017\u5e74\u306f\u307e\u3060\u8cb8\u3057\u51fa\u3057\u30b5\u30fc\u30d3\u30b9\u304c\u8ecc\u9053\u306b\u4e57\u3063\u3066\u3044\u306a\u3044\u305f\u3081\u5c11\u306a\u3044\uff1f\n\ntrain.groupby('Date')['Rented Bike Count'].sum().plot()","0a8e4a5e":"# \u5404\u6642\u9593\u3054\u3068\u306e\u8cb8\u3057\u51fa\u3057\u6570\n# \u6df1\u591c\u304b\u3089\u65e9\u671d\u304c\u4e00\u756a\u5c11\u306a\u304f\u3001\u5915\u65b9\u304b\u3089\u591c\u304c\u591a\u3044\n# \u307e\u305f8\u6642\u306818\u6642\u304c\u591a\u304f\u306a\u3063\u3066\u3044\u308b(\u51fa\u52e4\u6642\u9593\u3084\u9000\u52e4\u6642\u9593\u3068\u88ab\u308b\u304b\u3089\uff1f)\n\ntmp = train.groupby('Hour')['Rented Bike Count'].sum().reset_index()\nsns.barplot(tmp['Hour'], tmp['Rented Bike Count'])","8c990614":"# \u66dc\u65e5\u3092\u4ed8\u4e0e\n# 0\u304c\u6708\u66dc\u65e5\u30011\u304c\u706b\u66dc\u65e5\u20266\u304c\u65e5\u66dc\u65e5\n\ntrain['Weekday'] = train['Date'].dt.weekday\ntest['Weekday'] = test['Date'].dt.weekday","185f1dbc":"# \u66dc\u65e5\u3054\u3068\u306e\u8cb8\u3057\u51fa\u3057\u6570\n# \u5927\u304d\u306a\u5dee\u306f\u307f\u3089\u308c\u306a\u3044\n\ntmp = train.groupby('Weekday')['Rented Bike Count'].sum().reset_index()\nsns.barplot(tmp['Weekday'], tmp['Rented Bike Count'])","1bdbb662":"# \u5b63\u7bc0\u3054\u3068\u306e\u30ec\u30b3\u30fc\u30c9\u6570\u3001\u795d\u65e5\u304b\u3069\u3046\u304b\u306e\u30ec\u30b3\u30fc\u30c9\u6570\n\nsns.countplot(x=\"Seasons\", data=train)\nplt.show()\nsns.countplot(x=\"Holiday\", data=train)\nplt.show()","f38b9ffd":"# \u8cb8\u3057\u51fa\u3057\u30b7\u30b9\u30c6\u30e0\u304c\u55b6\u696d\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306e\u30ec\u30b3\u30fc\u30c9\u6570\nsns.countplot(x=\"Functioning Day\", data=train)","fd45e011":"# \u55b6\u696d\u3057\u3066\u3044\u306a\u3044\u65e5\u306f\u5f53\u7136\u8cb8\u3057\u51fa\u3057\u65700\n# \u8cb8\u3057\u51fa\u3057\u65700\u306f\u30e2\u30c7\u30eb\u306e\u8a13\u7df4\u6642\u306b\u30ce\u30a4\u30ba\u306b\u306a\u308b\u306e\u3067\u3001\u53d6\u308a\u9664\u304f\u306a\u3069\u6271\u3044\u3092\u8003\u3048\u3088\u3046\n\ntrain[train['Functioning Day'] == 'No'].head()","1aa3b6a8":"# \u6c17\u8c61\u95a2\u9023\u306e\u30ab\u30e9\u30e0\u306e\u5206\u5e03(\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0)\n\nweather_cols = ['Temperature(\uff70C)', 'Humidity(%)',\n       'Wind speed (m\/s)', 'Visibility (10m)', 'Dew point temperature(\uff70C)',\n       'Solar Radiation (MJ\/m2)', 'Rainfall(mm)', 'Snowfall (cm)']\n\nfor col in weather_cols:\n    print(col)\n    plt.hist(train[col], bins=30)\n    plt.show()","8c66c11b":"# \u8cb8\u3057\u51fa\u3057\u6570\u3068\u5404\u30ab\u30e9\u30e0\u3068\u306e\u76f8\u95a2\n# train.corr()\u3067\u5404\u30ab\u30e9\u30e0\u306e\u76f8\u95a2\u4fc2\u6570\u3092\u51fa\u305b\u308b(\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306f\u9664\u304f)\n# \u6c17\u6e29\u304c\u9ad8\u3044\u3068\u8cb8\u3057\u51fa\u3057\u6570\u304c\u5897\u3048\u308b\u3001\u6e7f\u5ea6\u304c\u9ad8\u3044\u3068\u8cb8\u3057\u51fa\u3057\u6570\u306f\u6e1b\u308b\u306a\u3069\n\nsns.heatmap(train.corr()[[\"Rented Bike Count\"]].sort_values\n            (by=\"Rented Bike Count\", ascending=False)[1:],annot=True)","dbb042f4":"# 1. \u3092\u691c\u8a3c\n# \u4f11\u65e5\u3068\u305d\u308c\u4ee5\u5916\u3067\u3069\u3046\u5909\u308f\u3063\u3066\u3044\u308b\u304b\u78ba\u304b\u3081\u308b\n\nprint('\u5e73\u65e5')\ntmp = train[(train['Weekday'] <= 4) & (train['Holiday'] == 'No Holiday')].groupby('Hour')['Rented Bike Count'].sum().reset_index()\nsns.barplot(tmp['Hour'], tmp['Rented Bike Count'])\nplt.show()\n\nprint('\u571f\u65e5')\ntmp = train[(train['Weekday'] >= 5) & (train['Holiday'] == 'No Holiday')].groupby('Hour')['Rented Bike Count'].sum().reset_index()\nsns.barplot(tmp['Hour'], tmp['Rented Bike Count'])\nplt.show()\n\nprint('\u795d\u65e5')\ntmp = train[train['Holiday'] == 'Holiday'].groupby('Hour')['Rented Bike Count'].sum().reset_index()\nsns.barplot(tmp['Hour'], tmp['Rented Bike Count'])\nplt.show()","8d66d40c":"# 2. \u3092\u6df1\u5800\n\n# \u65e5\u3054\u3068\u306e\u8cb8\u3057\u51fa\u3057\u6570\u3092\u30ab\u30a6\u30f3\u30c8\ntrain['Daily Count'] = train['Date'].map(train.groupby('Date')['Rented Bike Count'].sum().to_dict())","ade2e4ff":"# \u8cb8\u3057\u51fa\u3057\u6570\u304c0\u3067\u306f\u306a\u3044\u304c\u3001\u524d\u65e5\u306e4\u5272\u4ee5\u4e0b\u306e\u65e5\u4ed8\u3092\u53d6\u308a\u51fa\u3057\u3066\u304f\u308b\ntmp = train[(train['Daily Count'] > 0) & (train['Daily Count'] \/ train['Daily Count'].shift(1) < 0.4)]\ntmp","34dae688":"# \u4e0a\u8a18\u306e\u65e5\u4ed8\u306e\u30ec\u30b3\u30fc\u30c9\u3068train\u5168\u4f53\u306e\u5e73\u5747\u3092\u6bd4\u8f03\n# \u8996\u7a0b\u304c\u60aa\u304f\u3001\u6e7f\u5ea6\u3068\u964d\u96e8\u91cf\u304c\u591a\u304f\u306a\u3063\u3066\u3044\u308b\n# \u96e8\u306e\u65e5(\u66c7\u308a\u3082\uff1f)\u306f\u8cb8\u3057\u51fa\u3057\u6570\u304c\u6e1b\u308b\u3068\u3044\u3046\u5f53\u305f\u308a\u524d\u306e\u7d50\u679c\n\ntmp2 = train[train['Date'].isin(tmp['Date'].unique())]\nprint(tmp2[weather_cols].mean())\nprint('')\nprint(train[weather_cols].mean())","4fd88b67":"# \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u78ba\u8a8d","cb58531b":"# \u30c7\u30fc\u30bf\u306e\u53ef\u8996\u5316\n\n### \u307e\u305a\u306f\u57fa\u790e\u7684\u306a\u53ef\u8996\u5316\u304b\u3089","d2573d20":"\u571f\u65e5\u795d\u65e5\u306f8\u6642\u306818\u6642\u306b\u6975\u7aef\u306b\u591a\u3044\u308f\u3051\u3067\u306f\u306a\u3044  \n\u307e\u305f\u300117,18\u6642\u3092\u9802\u70b9\u3068\u3057\u306613~21\u6642\u307e\u3067\u304c\u591a\u3044\u50be\u5411\u306b\u3042\u308b  \n0\u6642\u4ed8\u8fd1\u304c\u5e73\u65e5\u3068\u6bd4\u3079\u3066\u591a\u3044\u306e\u306f\u3001\u7fcc\u65e5\u4ed5\u4e8b\u304c\u306a\u3044\u304b\u3089\u304b\u3082\u3057\u308c\u306a\u3044(\u6df1\u5800\u306e\u4f59\u5730\u3042\u308a\u3002\u3053\u3053\u3067\u306f\u89e6\u308c\u306a\u3044\u304c)","d7804b75":"### \u53ef\u8996\u5316\u3092\u6df1\u5800\u3057\u3066\u307f\u3088\u3046\n\n\u3053\u3053\u307e\u3067\u306e\u53ef\u8996\u5316\u3067\u5f97\u305f\u793a\u5506\u3092\u3082\u3068\u306b\u3082\u3063\u3068\u6df1\u5800\u3057\u305f\u5206\u6790\u3092\u3059\u308b\n\n1. 8\u6642\u306818\u6642\u306e\u8cb8\u3057\u51fa\u3057\u6570\u304c\u6975\u7aef\u306b\u591a\u3044\u306e\u306f\u51fa\u52e4\u30fb\u9000\u52e4\u3068\u88ab\u308b\u304b\u3089\u2192\u4f11\u65e5\u306f\u305d\u3046\u3067\u3082\u306a\u3044\u306e\u3067\u306f\uff1f\n2. \u6975\u7aef\u306b\u8cb8\u3057\u51fa\u3057\u6570\u304c\u5c11\u306a\u3044\u65e5\u304c\u3044\u304f\u3064\u304b\u3042\u308b\u304c\u3001\u4f55\u304c\u8d77\u3053\u3063\u3066\u3044\u308b\u306e\u304b\uff1f"}}