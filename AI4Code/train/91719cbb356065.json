{"cell_type":{"2c397e0b":"code","1be932bc":"code","6ce3254e":"code","2e008b56":"code","0bbe8f95":"code","2b51d072":"code","1e1b5cd2":"code","e73823fc":"code","6e77577d":"markdown","42ef1c87":"markdown","8a1b8631":"markdown","3b1055ee":"markdown","9333a0bb":"markdown","de31f4e3":"markdown"},"source":{"2c397e0b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1be932bc":"import matplotlib.pyplot as plt\nfrom matplotlib import style\nstyle.use('ggplot')","6ce3254e":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","2e008b56":"train.head()","0bbe8f95":"df0 = train[train.Survived == 0]\ndf1 = train[train.Survived == 1]","2b51d072":"def EvalCdf(sample, x):\n    count = 0\n    for i in sample:\n        if i <= x:\n            count += 1\n    prob = count \/ len(sample)\n    return prob","1e1b5cd2":"sample0 = sorted(df0.Fare.values)\ncdf0 = [EvalCdf(sample0, x) for x in sample0]\n\nsample1 = sorted(df1.Fare.values)\ncdf1 = [EvalCdf(sample1, x) for x in sample1]\n\nsample = sorted(train.Fare.values)\ncdf = [EvalCdf(sample, x) for x in sample]","e73823fc":"plt.figure(figsize = (15, 8))\n\nplt.plot(sample0, cdf0, label = 'not survived')\nplt.plot(sample1, cdf1, label = 'survived')\nplt.plot(sample, cdf, label = 'all passengers')\n\nplt.legend()","6e77577d":"***I'll use Cumulative distribution function to examine if more people who died paid less than 100 Pounds as compared to their surviving counterparts.***","42ef1c87":"# What does the graph tell us?","8a1b8631":"***1. 80% of the people who died paid a fair of less than 50 British Pounds (for it departed from Southampton, England).***\n\n***2. 80% of the people who survived paid more than 80 Pounds.***","3b1055ee":"***Looks like it's a \"Pareto distribution\"***\n\n[What is a Pareto distribution?](https:\/\/en.wikipedia.org\/wiki\/Pareto_distribution)","9333a0bb":"***I'll not explain what a CDF is, I have already have done that in more than a couple of notebooks, however, if my generous audience want to know about CDF and its rather profound applications, please check my notebook:***\n\n[Introduction: Analytic distribution w\/ Volkswagen](https:\/\/www.kaggle.com\/ritikpnayak\/introduction-analytic-distribution-w-volkswagen#4.-Brief-introduction-to-CDF)","de31f4e3":"# What kind of distribution is it?"}}