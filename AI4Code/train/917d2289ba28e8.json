{"cell_type":{"eb8e7e4a":"code","bdfaee3a":"code","e005d972":"code","a10f518b":"code","8aee83a0":"code","dfd9994b":"code","78874e2d":"code","2be34ef6":"code","4e6a9cd8":"code","052e06ab":"code","c901ecc5":"code","e0ebbd2e":"code","24f12cdb":"code","7520689e":"code","95551594":"code","dcb08ce9":"code","699e3181":"code","abca879b":"markdown","f458ca76":"markdown","601e35a2":"markdown","e3a22660":"markdown","05d28d3f":"markdown","07efd360":"markdown","73af3baf":"markdown","1bea9fbf":"markdown","7567ea2e":"markdown","95dc8c70":"markdown","1e57b08c":"markdown","08117149":"markdown","a0c7616e":"markdown","a5d8b4c2":"markdown","af55670f":"markdown","6c3aed39":"markdown","8d7d3204":"markdown","30f2a157":"markdown"},"source":{"eb8e7e4a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas_profiling as pdp\nfrom sklearn.linear_model import LogisticRegression  #Logistic Regression\nfrom sklearn.model_selection import train_test_split #to split the dataset for training and testing\nfrom sklearn.neighbors import KNeighborsClassifier  #K nearest neighbours\nfrom sklearn import svm  #Support Vector Machine\nfrom sklearn import metrics #for checking the model accuracy\nfrom sklearn.tree import DecisionTreeClassifier #Decision Tree\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nIris=pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bdfaee3a":"Iris.columns","e005d972":"y=Iris['Species']\ny.head(10)","a10f518b":"Flower_feature=['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']\nX=Iris[Flower_feature]\nX.head(10)","8aee83a0":"train_X, val_X, train_y, val_y = train_test_split(X, y, train_size=.8, random_state = 0)\nprint(train_X.shape)\nprint(val_X.shape)\nprint(train_y.shape)\nprint(val_y.shape)","dfd9994b":"train_X.head(10)","78874e2d":"train_y.head(10)","2be34ef6":"for i in train_X.columns:\n    plt.hist(train_X[i])\n    plt.title(i)\n    plt.show()","4e6a9cd8":"print(train_X.corr());\nsns.heatmap(train_X.corr());","052e06ab":"print(train_y.value_counts())\nspecies_count = train_y.value_counts()\nsns.set(style=\"darkgrid\")\nsns.barplot(species_count.index, species_count.values, alpha=0.9,palette=\"PuOr\")\nplt.title('Frequency of Species')\nplt.ylabel('Number of Occurrences', fontsize=12)\nplt.xlabel('Species', fontsize=12)\nplt.show()","c901ecc5":"labels = train_y.astype('category').cat.categories.tolist()\ncounts = train_y.value_counts()\nsizes = [counts[var_cat] for var_cat in labels]\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, labels=labels, autopct='%1.1f%%', shadow=True) #autopct is show the % on plot\nax1.axis('equal')\nplt.show()","e0ebbd2e":"from sklearn import preprocessing\nX_train_scaled = preprocessing.scale(train_X)\nX_val_scaled = preprocessing.scale(val_X)\nmodel = LogisticRegression()\nmodel.fit(X_train_scaled,train_y)\nprediction=model.predict(X_val_scaled)\nprint(\"The model accuracy for Logisitc Regression is\",metrics.accuracy_score(prediction,val_y))","24f12cdb":"model=DecisionTreeClassifier()\nmodel.fit(X_train_scaled,train_y)\nprediction=model.predict(X_val_scaled)\nprint(\"The model accuracy of the Decision Tree is\",metrics.accuracy_score(prediction,val_y))","7520689e":"model=KNeighborsClassifier(n_neighbors=3) #this examines 3 neighbours for putting the new data into a class\nmodel.fit(X_train_scaled,train_y)\nprediction=model.predict(X_val_scaled)\nprint('The model accuracy of the KNN is',metrics.accuracy_score(prediction,val_y))","95551594":"a_index=list(range(1,11))\na=pd.Series()\nx=[1,2,3,4,5,6,7,8,9,10]\nfor i in list(range(1,11)):\n    model=KNeighborsClassifier(n_neighbors=i) \n    model.fit(X_train_scaled,train_y)\n    prediction=model.predict(X_val_scaled)\n    a=a.append(pd.Series(metrics.accuracy_score(prediction,val_y)))\nplt.plot(a_index, a)\nplt.xticks(x)","dcb08ce9":"model=svm.SVC(kernel='linear')\nmodel.fit(X_train_scaled,train_y)\nprediction=model.predict(X_val_scaled)\nprint('The model accuracy of linear SVM is:',metrics.accuracy_score(prediction,val_y))","699e3181":"model=svm.SVC(kernel='poly',\n             degree=3)\nmodel.fit(X_train_scaled,train_y)\nprediction=model.predict(X_val_scaled)\nprint('The model accuracy of linear SVM is:',metrics.accuracy_score(prediction,val_y))","abca879b":"# Histograms","f458ca76":"* There is a 87% accuracy with this model","601e35a2":"* Since our dataset is sparse, we will need to scale the data. Luckily there is a package for that.","e3a22660":"# Iris Classification","05d28d3f":"* This shows that there is only 77% accuracy with our data using Logistic regression.\n* This would not be the best method to classify the species.","07efd360":"* The purpose of this notebook is to make a correct classification \n* For help with some code and the process, I used this kaggle work book as reference\nhttps:\/\/www.kaggle.com\/kenjee\/titanic-project-example\/data?select=train.csv","73af3baf":"Logisitc Regression","1bea9fbf":"## For catagorical\n* Bar charts to visulize the number of species","7567ea2e":"Support Vector Machine (SVM) polynomial Kernel","95dc8c70":"# Data Exploration","1e57b08c":"* As shown in the graph, the algorithm flucuates depending on the number n is. \n* There is a range of accuracy of ~.83 to .9\n* The best number for n shown would be either 4, 6, or 8","08117149":"Support Vector Machine (SVM) Linear Kernel ","a0c7616e":"Petal width and petal length are both not normally distributed.\nWe can do some feature engineering later on","a5d8b4c2":"## For Numerical Data\n* Analyze distribution\n* Compare values across all species","af55670f":"Decision Tree","6c3aed39":"K Nearest Neighbor","8d7d3204":"Before going forward, the number of values for n can be checked for accuracy","30f2a157":"# Predictive Analytics\n* Support Vector Machine\n* KNN\n* Logistic Regression\n* Decision Tree\n"}}