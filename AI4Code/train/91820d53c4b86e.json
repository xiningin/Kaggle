{"cell_type":{"fd774c6a":"code","5df7b492":"code","f6c578c9":"code","56c4f9c6":"code","81f1334a":"code","3fa25c2b":"code","58424391":"code","a143f628":"code","d1197f06":"code","c4ec3ca5":"code","bde75d24":"code","673176bd":"code","ee3c2908":"code","22b1c8c4":"code","078b5e75":"code","2940f2bb":"code","2c8682eb":"code","b197c435":"code","2aac53e4":"code","dba285a2":"code","edcabafe":"code","20cc9ea9":"code","16bf8af0":"code","c92e6e5b":"code","7d57c644":"code","1966c6c4":"code","ec8880e5":"code","1b8548f4":"code","9fe85aef":"code","0a38d7e0":"code","3dae120a":"code","7c3d360c":"code","1e4730df":"code","e99c2604":"code","ac81ff4c":"code","fe8b643c":"code","43290533":"code","76562a1f":"code","657cadcc":"code","16fea67d":"code","0984566b":"code","0d0dc9fb":"code","0b635cb7":"code","f8de5ced":"markdown","2773624d":"markdown","338ac9e9":"markdown","62d8334e":"markdown"},"source":{"fd774c6a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5df7b492":"# importing data set\nhouse_data=pd.read_csv('..\/input\/house-rent-prediction-for-hyderabad\/hyd_v2.csv')","f6c578c9":"house_data.head()","56c4f9c6":"new_data=house_data.drop(['amenities','locality','balconies','lift','active','loanAvailable','location','ownerName','parkingDesc','propertyTitle','propertyType','combineDescription','completeStreetName','facing','facingDesc','furnishingDesc','gym','id','isMaintenance','weight','waterSupply','swimmingPool','shortUrl','sharedAccomodation','reactivationSource'],axis=1)","81f1334a":"print(new_data.parking.value_counts())\nprint(new_data.bathroom.value_counts())\nprint(new_data.floor.value_counts())\nprint(new_data.type_bhk.value_counts())\nprint(new_data.maintenanceAmount.value_counts())\n\n","3fa25c2b":"new_data.replace({'parking':{'BOTH':0,'TWO_WHEELER':1,'FOUR_WHEELER':2,'NONE':3}},inplace=True)\nnew_data.replace({'type_bhk':{'RK1':0.5,'BHK1':1,'BHK2':2,'BHK3':3,'BHK4':4,'BHK4PLUS':5}},inplace=True)\nnew_data.replace({'maintenanceAmount':{'None':int(0)}},inplace=True)","58424391":"new_data.head()","a143f628":"new_data.info()","d1197f06":"new_data.isnull().sum()","c4ec3ca5":"hd=new_data.copy()","bde75d24":"hd['localityId'].value_counts()","673176bd":"hd['maintenance']=hd['maintenanceAmount'].apply(lambda x:int(x))","ee3c2908":"hd.head()","22b1c8c4":"hd1=hd.drop(['maintenanceAmount','deposit','property_age','totalFloor'],axis=1)","078b5e75":"hd1.head()","2940f2bb":"hd1.info()","2c8682eb":"hd2=hd1.copy()\nhd2['rent_per_sqft']=hd2['rent_amount']\/hd2['property_size']\nhd2.head()","b197c435":"location_stats=hd2.groupby('localityId')['localityId'].agg('count').sort_values(ascending=False)\nlocation_stats","2aac53e4":"len(location_stats[location_stats<=10])","dba285a2":"location_less_than_10=location_stats[location_stats<=10]\nlocation_less_than_10","edcabafe":"hd2.localityId=hd2.localityId.apply(lambda x:'NOT_FOUND' if x  in location_less_than_10 else x)\nhd2['localityId'].value_counts()","20cc9ea9":"hd2[hd2.property_size\/hd2.type_bhk<300]","16bf8af0":"hd2.shape","c92e6e5b":"hd3=hd2[~(hd2.property_size\/hd2.type_bhk<300)]\nhd3.shape","7d57c644":"hd3.rent_per_sqft.describe()","1966c6c4":"def remove_pps_outliers (df):\n    df_out = pd.DataFrame()\n    for key,subdf in df.groupby('localityId'):\n        m=np.mean(subdf.rent_per_sqft)\n        st=np.std(subdf.rent_per_sqft) \n        reduced_df=subdf[(subdf.rent_per_sqft>(m-st))&(subdf.rent_per_sqft<=(m+st))]\n        df_out=pd.concat([df_out,reduced_df],ignore_index=True)\n    return df_out\nhd4=remove_pps_outliers(hd3)\nhd4.shape","ec8880e5":"import matplotlib as mpl\nfrom matplotlib import pyplot as plt\n%matplotlib inline\n","1b8548f4":"mpl.rcParams['figure.figsize']=(20,10)\nplt.hist(hd4.rent_per_sqft,rwidth=0.8)\nplt.xlabel('price per sqft')\nplt.ylabel('count')\nplt.title('distribution of data')","9fe85aef":"hd4.bathroom.unique()","0a38d7e0":"hd4[hd4.bathroom>hd4.type_bhk+1]","3dae120a":"hd5=hd4[hd4.bathroom<=hd4.type_bhk+1]","7c3d360c":"hd5.shape","1e4730df":"hd6=hd5.drop('rent_per_sqft',axis=1)\nhd6.head()","e99c2604":"dummies=pd.get_dummies(hd6.localityId)\ndummies.head()","ac81ff4c":"hd7=pd.concat([hd6.drop('localityId',axis='columns'),dummies.drop('NOT_FOUND',axis='columns')],axis='columns')\nhd7.head()","fe8b643c":"X=hd7.drop('rent_amount',axis='columns')\nY=hd7['rent_amount']","43290533":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test= train_test_split(X,Y,test_size=0.2,random_state=10)","76562a1f":"from sklearn.linear_model import LinearRegression\nlr=LinearRegression()\nlr.fit(X_train,Y_train)\nlr.score(X_test,Y_test)","657cadcc":"from sklearn.model_selection import ShuffleSplit\n\nfrom sklearn.model_selection import cross_val_score \ncv = ShuffleSplit (n_splits=5, test_size=0.2, random_state=0)\n\ncross_val_score(LinearRegression (),X,Y,cv=cv)","16fea67d":"X.columns","0984566b":"def predict_price(localityId,bathroom,floor,parking,property_size,type_bhk,maintenance):\n\n    loc_index = np.where(X.columns==localityId)[0][0] \n    x= np.zeros(len(X.columns))\n    x[0]=bathroom\n    x[1]=floor\n    x[2]=parking\n    x[3]=property_size\n    x[4]=type_bhk\n    x[5]=maintenance\n    \n    if loc_index>=0:\n        x[loc_index]=1 \n\n    return lr.predict([x])[0]\n\n","0d0dc9fb":"predict_price('yella_reddy_guda_hyderabad',2,3,0,800,2,1000)","0b635cb7":"predict_price('yella_reddy_guda_hyderabad',2,3,0,800,3,1000)","f8de5ced":"## encoding data","2773624d":"# Feature Engineering","338ac9e9":"## one hot encoding","62d8334e":"## outliner detection"}}