{"cell_type":{"33eb8aa6":"code","af62fbec":"code","93874e42":"code","0e3a6930":"code","871c81c6":"code","2032ff59":"code","8de6e081":"code","4d40d84c":"code","a4b0372b":"code","2849efc5":"code","24e05a19":"code","b5f48f4e":"code","528a1a7a":"code","ffcdbb82":"code","779b2aa9":"code","5c421d7f":"code","66dcf151":"code","784e4554":"code","96e513e6":"code","bd158d7b":"code","0e1a3ff5":"code","b8a1b4a5":"code","2b463a29":"code","d886c6f5":"code","51db4bdb":"code","ce3f9df1":"code","8f7b0039":"code","bb6a82e1":"code","eaf9c85c":"markdown","a8907ae0":"markdown","024bc8a1":"markdown","574b2c78":"markdown","7818e421":"markdown","201455ea":"markdown","06d493a9":"markdown","0a914eda":"markdown","925e4801":"markdown","a9820fc6":"markdown","f522be83":"markdown","e27dae58":"markdown","0a588ec4":"markdown","b9f63a19":"markdown","26f1c6f4":"markdown"},"source":{"33eb8aa6":"!pip install seaborn==0.11.0\n","af62fbec":"\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nprint(sns.__version__)\nimport plotly.offline as pyo\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nimport plotly.subplots as subplots\nimport cufflinks as cf\ncf.go_offline(connected=True)\n\npd.options.display.max_columns = None\npyo.init_notebook_mode(connected=True)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n        ","93874e42":"matches = pd.read_csv('\/kaggle\/input\/ipl-complete-dataset-20082020\/IPL Matches 2008-2020.csv')\nballs = pd.read_csv('\/kaggle\/input\/ipl-complete-dataset-20082020\/IPL Ball-by-Ball 2008-2020.csv')","0e3a6930":"balls.head()","871c81c6":"matches.head()","2032ff59":"data = pd.merge(left=matches, right=balls, on='id', how='right')\ndata.head()","8de6e081":"print(matches.shape)\nprint(balls.shape)\nprint(data.shape)","4d40d84c":"data.info()","a4b0372b":"data['date'] = pd.to_datetime(data['date'])\ndata['year'] = pd.DatetimeIndex(data['date']).year","2849efc5":"data.head()","24e05a19":"runs_by_years = data.groupby(by='year').sum()['total_runs']\nruns_by_years = pd.DataFrame(runs_by_years)\nruns_by_years.reset_index(inplace=True)","b5f48f4e":"plt.figure(figsize=(15,9))\nsns.lineplot(data=runs_by_years, x='year', y='total_runs')\nplt.title('Runs scored over the years')\nplt.show()","528a1a7a":"plt.figure(figsize=(15,9))\nsns.countplot(data=matches, x='toss_decision')\nplt.title('Preferred toss decision')\nplt.show()","ffcdbb82":"runs_and_wickets_by_over = balls.groupby(by='over').sum()\nruns_and_wickets_by_over = pd.DataFrame(runs_and_wickets_by_over[['total_runs', 'is_wicket']])\nruns_and_wickets_by_over.reset_index(inplace=True)","779b2aa9":"plt.figure(figsize=(15,9))\nsns.scatterplot(data=runs_and_wickets_by_over, x='over', y='total_runs', size='is_wicket')\nplt.title('Totals runs and wickets by over')\nplt.show()","5c421d7f":"balls = pd.read_csv('\/kaggle\/input\/ipl-complete-dataset-20082020\/IPL Ball-by-Ball 2008-2020.csv')\nruns_overs = balls[['total_runs', 'over']]\nruns_overs","66dcf151":"plt.figure(figsize=(15,9))\nsns.boxplot(data=balls, x='over', y='total_runs')\nplt.title('Runs distribution over wise')\nplt.show()","784e4554":"runs_by_match = balls.groupby(by='id').sum()\nruns_by_match = pd.DataFrame(runs_by_match['total_runs'])\nruns_by_match.reset_index(inplace=True)\nruns_by_match","96e513e6":"print(sns.__version__)","bd158d7b":"plt.figure(figsize=(15,9))\nsns.histplot(runs_by_match['total_runs'])\nplt.title('Runs distribution match wise')\nplt.show()","0e1a3ff5":"data = pd.merge(left=matches, right=balls, on='id', how='right')\ndata['date'] = pd.to_datetime(data['date'])\ndata['year'] = pd.DatetimeIndex(data['date']).year\n\nruns_by_match_and_year = data.groupby(by=['id','year']).sum()\nruns_by_match_and_year = pd.DataFrame(runs_by_match_and_year[['total_runs']])\nruns_by_match_and_year.reset_index(inplace=True)\nruns_by_match_and_year","b8a1b4a5":"f, axes = plt.subplots(13, 1, sharex='all', sharey='all',figsize=(15,117))\nf.suptitle(\"Runs distribution match wise\")\nsns.histplot(x=runs_by_match_and_year[runs_by_match_and_year['year']==2008]['total_runs'], ax=axes[0]).set_title('Year 2008')\nsns.histplot(x=runs_by_match_and_year[runs_by_match_and_year['year']==2009]['total_runs'], ax=axes[1]).set_title('Year 2009')\nsns.histplot(x=runs_by_match_and_year[runs_by_match_and_year['year']==2010]['total_runs'], ax=axes[2]).set_title('Year 2010')\nsns.histplot(x=runs_by_match_and_year[runs_by_match_and_year['year']==2011]['total_runs'], ax=axes[3]).set_title('Year 2011')\nsns.histplot(x=runs_by_match_and_year[runs_by_match_and_year['year']==2012]['total_runs'], ax=axes[4]).set_title('Year 2012')\nsns.histplot(x=runs_by_match_and_year[runs_by_match_and_year['year']==2013]['total_runs'], ax=axes[5]).set_title('Year 2013')\nsns.histplot(x=runs_by_match_and_year[runs_by_match_and_year['year']==2014]['total_runs'], ax=axes[6]).set_title('Year 2014')\nsns.histplot(x=runs_by_match_and_year[runs_by_match_and_year['year']==2015]['total_runs'], ax=axes[7]).set_title('Year 2015')\nsns.histplot(x=runs_by_match_and_year[runs_by_match_and_year['year']==2016]['total_runs'], ax=axes[8]).set_title('Year 2016')\nsns.histplot(x=runs_by_match_and_year[runs_by_match_and_year['year']==2017]['total_runs'], ax=axes[9]).set_title('Year 2017')\nsns.histplot(x=runs_by_match_and_year[runs_by_match_and_year['year']==2018]['total_runs'], ax=axes[10]).set_title('Year 2018')\nsns.histplot(x=runs_by_match_and_year[runs_by_match_and_year['year']==2019]['total_runs'], ax=axes[11]).set_title('Year 2019')\nsns.histplot(x=runs_by_match_and_year[runs_by_match_and_year['year']==2020]['total_runs'], ax=axes[12]).set_title('Year 2020')\nplt.show()","2b463a29":"plt.figure(figsize=(15,9))\nsns.countplot(data=balls, x='total_runs')\nplt.title('Runs balls wise distributions')\nplt.show()","d886c6f5":"runs_by_ball_of_overs = balls.groupby(by=['ball', 'over']).sum()\nruns_by_ball_of_overs = pd.DataFrame(runs_by_ball_of_overs[['total_runs']])\nruns_by_ball_of_overs.reset_index(inplace=True)\nruns_by_ball_of_overs","51db4bdb":"runs_by_ball_of_overs = runs_by_ball_of_overs.pivot(index='ball', columns='over', values='total_runs')","ce3f9df1":"plt.figure(figsize=(15,9))\nsns.heatmap(runs_by_ball_of_overs)\nplt.title('Runs by ball of the over')\nplt.show()","8f7b0039":"plt.figure(figsize=(15,9))\nsns.countplot(data=balls, x='dismissal_kind')\nplt.title('How are the players being dismissed?')\nplt.show()","bb6a82e1":"balls['dismissal_kind'].fillna('Not a wicket', inplace=True)\nplt.figure(figsize=(15,112))\nsns.countplot(y=balls[balls['dismissal_kind'] != 'Not a wicket']['bowler'],\n              order=balls[balls['dismissal_kind'] != 'Not a wicket']['bowler'].value_counts().index)\nplt.title('Which bowler led to most dismissals?')\nplt.show()","eaf9c85c":"# First look at the matches data","a8907ae0":"# Merging the two datasets","024bc8a1":"# Runs balls wise distributions","574b2c78":"# Totals runs and wickets by over","7818e421":"# Preferred toss decision","201455ea":"# Runs distribution over wise","06d493a9":"# First look at the ball by ball data","0a914eda":"# Extracting year from the date","925e4801":"# Runs distribution match wise","a9820fc6":"# Which bowler led to most dismissals?","f522be83":"# Runs by ball of the over","e27dae58":"# How are the players being dismissed?","0a588ec4":"# Data visualisation\n\nI am not that much of a writing person as I believe the visualisation should be enough to tell the story, so don't expect a lot of notes here.\n\nEnough of talk, let's go straight to action! \n\n# Importing the libraries","b9f63a19":"# Loading the datasets","26f1c6f4":"# Runs scored over the years"}}