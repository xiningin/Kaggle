{"cell_type":{"f37ce213":"code","98e87860":"code","7e23c91c":"code","13ee3376":"code","f3129064":"code","762777af":"code","44fee9a5":"code","1873686b":"code","0bdec880":"markdown","48af9cf9":"markdown","af721c1c":"markdown","9fc2b694":"markdown","4fe3d177":"markdown","650a8a61":"markdown","aa63ba05":"markdown","887b8d77":"markdown","0e3b525c":"markdown","183ac8f8":"markdown"},"source":{"f37ce213":"import pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as mcolors\nimport seaborn as sns\n\niowa_file_path = '..\/input\/home-data-for-ml-course\/train.csv'\nhome_data = pd.read_csv(iowa_file_path)\n","98e87860":"Decade_Built = []\nfor i in range(1460):\n    class_value = (home_data.at[i, 'YearBuilt'] - 1871) \/\/ 10 + 1\n    Decade_Built.append(class_value)","7e23c91c":"home_data_copy = pd.concat([home_data['OverallQual'], home_data['SalePrice']], axis=1)","13ee3376":"YrSold_copy = home_data['YrSold'].copy()\n\nfor i in range(1460):\n    if home_data.at[i, 'YearBuilt'] <= 2005:\n        YrSold_copy.at[i] = home_data.at[i, 'YrSold'] - 2005\n    else:\n        YrSold_copy.at[i] = home_data.at[i, 'YrSold'] - home_data.at[i, 'YearBuilt']\n\n# I am now adding to the DF home_data_copy the new column 'YearsToSell' and the class column 'DecadeBuilt'\nhome_data_copy.insert(2, 'YearsToSell', YrSold_copy)\nhome_data_copy.insert(3, 'DecadeBuilt', Decade_Built)","f3129064":"home_data_copy","762777af":"Decade_Count = [0] * 14 \nQuality_Total = [0] * 14\nPrice_Total = [0] * 14\nYears_Total = [0] * 14\n\nfor i in range(1460):\n    Decade_Count[home_data_copy.at[i, 'DecadeBuilt']-1] += 1\n    Quality_Total[home_data_copy.at[i, 'DecadeBuilt']-1] += home_data_copy.at[i, 'OverallQual']\n    Price_Total[home_data_copy.at[i, 'DecadeBuilt']-1] += home_data_copy.at[i, 'SalePrice']\n    Years_Total[home_data_copy.at[i, 'DecadeBuilt']-1] += home_data_copy.at[i, 'YearsToSell']\n\nAverage_1 = []\nAverage_2 = []\nAverage_3 = []\n\nfor i in range(14):\n    Average_1.append(Quality_Total[i] \/ Decade_Count[i])\n    Average_2.append(Price_Total[i] \/ Decade_Count[i])\n    Average_3.append(Years_Total[i] \/ Decade_Count[i])\n\ndecade_list = []\nfor i in range(14):\n    decade_list.append(\"{} - {}\".format(1871 + i*10, 1880 + i*10))\n\nhouse_average = pd.DataFrame(list(zip(Decade_Count, Average_1, Average_2, Average_3, decade_list)))\nhouse_average.columns = ['SalesPerDecade','OverallQual', 'SalePrice', 'YearsToSell', 'Decade']","44fee9a5":"house_average","1873686b":"sns.set(rc={'figure.figsize':(10,7.5)})\nsns.set_style('darkgrid')\nsns.set_theme()\nsns.set_context('paper')\n\nfig, axs = plt.subplots(2, 2, figsize=(15,13))\nsns.barplot(ax=axs[0, 0], x=\"Decade\", y=\"SalesPerDecade\", data=house_average, palette=\"Purples_d\", edgecolor=\"0.1\", lw=1)\naxs[0, 0].set_xticklabels(\n    axs[0, 0].get_xticklabels(), \n    rotation=90, \n    horizontalalignment='right',\n    fontweight='light'\n)\naxs[0, 0].set_title('Number Of Houses Sold Every Decade')\n\nsns.barplot(ax=axs[0, 1], x=\"Decade\", y=\"OverallQual\", data=house_average, palette=\"Purples_d\", edgecolor=\"0.1\", lw=1)\naxs[0, 1].set_xticklabels(\n    axs[0, 1].get_xticklabels(), \n    rotation=90, \n    horizontalalignment='right',\n    fontweight='light'\n)\naxs[0, 1].set_title('Average Quality')\n\nsns.barplot(ax=axs[1, 0], x=\"Decade\", y=\"SalePrice\", data=house_average, palette=\"Purples_d\", edgecolor=\"0.1\", lw=1)\naxs[1, 0].set_xticklabels(\n    axs[1, 0].get_xticklabels(), \n    rotation=90, \n    horizontalalignment='right',\n    fontweight='light'\n)\naxs[1, 0].set_title('Average Sale Price')\n\nsns.barplot(ax=axs[1, 1], x=\"Decade\", y=\"YearsToSell\", data=house_average, palette=\"Purples_d\", edgecolor=\"0.1\", lw=1)\naxs[1, 1].set_xticklabels(\n    axs[1, 1].get_xticklabels(), \n    rotation=90, \n    horizontalalignment='right',\n    fontweight='light'\n)\naxs[1, 1].set_title('Average Years Needed To Sell')\n\nplt.tight_layout(pad=0.5, w_pad=0.7, h_pad=5.0)\n\nNone #It used to not print the label-object as a list","0bdec880":"## 0. IMPORTING LIBRARIES AND DATA\nThe dataset is the [**home-data-for-ml-course**](http:\/\/www.kaggle.com\/dansbecker\/home-data-for-ml-course)\na dataset used for exercise and similar to the one of **Housing Price Getting Started Competition**","48af9cf9":"### THE AUXILIARY DF home_data_copy\nBefore doing the **final DF** I am creating an auxiliary dataframe called **home_data_copy**.\n\nIn this dataframe, I will put the columns, of the dataset home_data, that I need to use for the final DF","af721c1c":"# **WHERE ARE THE NEW HOMES?**\nIn this **analysis** I will try to answer the questions of the paragraph **Think About Your Data** of the notebook **Exercise: Explore Your Data** from the **second lesson of the KAGGLE course: Intro to Machine Learning**.\n\nThe problem is the following:\n\n### Think About Your Data\n\nThe newest house in your data isn't that new.  A few potential explanations for this:\n1. They haven't built new houses where this data was collected.\n1. The data was collected a long time ago. Houses built after the data publication wouldn't show up.\n\nIf the reason is explanation #1 above, does that affect your trust in the model you build with this data? What about if it is reason #2?\n\nHow could you dig into the data to see which explanation is more plausible?\n","9fc2b694":"![imageedit_1_5442918327.jpg](attachment:5b75c052-7a91-4061-b086-c75bd23b5270.jpg)","4fe3d177":"## 1. THE ANALYSIS\nFor an **understandable analysis**, I will separate the houses in classes based on the feature **YearBuilt**. Starting from 1871-1880, every 10 years will be a new class. (I will start from 1871 because the oldest house was built in 1872)\n\nFor this reason, I will create a list where each row will be a number from 1 to 14. \nEvery number represents a decade, where 1 is for 1871-1880 and 14 is for 2001-2010.","650a8a61":"The goal is to create a **final DF** (called **house_average**) made of 14 rows (one for each decade) and 5 columns with:\n * **Number of houses sold** every decade\n * The **quality** of the houses\n * The **price** which **they were sold**\n * How many **years** were **needed to sell**\n * A string showing the **decade** when the houses were built\n\nIn the DF I will put the **average** of these values for the houses built in the relative decades.","aa63ba05":"### THE YearsToSell COLUMN\nThe **YearsToSell** column of the DF home_data_copy is **special**.\n\nIf we look to the **YrSold** column of the DF home_data in the describe function we can see that the first sale was made in 2006 and the last in 2010\n\nThis means that the dataset is a list of sales made in those years. But it contains houses built before this period. For this reason, it will be unfair to just do: **YearsToSell = YrSold - YearBuilt**\n\nFor this reason i decided to use 2006 as starting parameters, so for houses built:\n* **Before 2006**: I will do **YearsToSell = YrSold - 2005**\n* **In 2006 and after**: I will do **YearsToSell = YrSold - YearBuilt**\n\nDoing this way I will be able to see if the **customers** of the period 2006-2010 would have **preferred older or newer houses**.","887b8d77":"### THE house_average DATAFRAME \nIt's time to calculate the **Average** of the values in the dataframe home_data_copy and create the **final DF**.\n\nWith some **for loops** I will go through the dataframe home_data_copy and calculate for each decade, at the same time the number of houses sold and for each column the total value of the relative feature.\n\nI will then just divide the total values for the number of houses sold and I will have the average values.","0e3b525c":"## 3. CONCLUSION\nAs can be seen in the four graphs newer houses have a better **Average Quality** this is probably the reason why even their price is higher. This doesn't affect the sales tho. As can be seen, there are many sales of new houses and they were affected in even a smaller time.\n\nDue to this analysis is reasonable to reach an important conclusion:\n* There is absolute **NO REASON to not build new houses after 2010**\n\nA smaller sale number or a higher sell time in the decade 2001-2010 would have maybe justified to stop the construction but this is not the case.\n\nSo it's more likely that the data was collected in 2010, maybe it is a report of the performance of Melbourn real estate in the period 2006-2010. This means that the **second reason** from the **\"Think About Your Data\" paragraph** should be the correct one.\n\n**If we want to use this dataset in 2021** to decide if it would be a good idea to build new houses, and we don't have the data from the sales done in the decade 2011-2020, **we might still use this dataset** to make marketing predictions, but it is **important to be careful**.\n\nIn the last paragraph, it is shown how even a decade can make a **huge difference** both in sales numbers and in the time needed to sell. In the last two decades, there was a **good trend** so it is reasonable to be optimistic but we cannot be 100% sure.","183ac8f8":"## 2. PLOTTING THE RESULTS"}}