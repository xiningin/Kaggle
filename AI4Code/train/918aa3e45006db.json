{"cell_type":{"b7860b3b":"code","ea463bbd":"code","4d784ded":"code","ebf7ba59":"code","e95aaa9e":"code","5bb1ea71":"code","7f7ff234":"code","0d0fc6c2":"code","9ddb64df":"code","9d7159b3":"code","d713cf0a":"code","f2c0330e":"code","db2df1f7":"code","02d93999":"code","d5dad904":"code","f223a862":"code","e203e41b":"code","3ef9f4f6":"markdown","e094a513":"markdown"},"source":{"b7860b3b":"!pip install -U tensorflow==1.15.0","ea463bbd":"!conda install tensorflow-gpu==1.14.0 -y","4d784ded":"!nvidia-smi","ebf7ba59":"import tensorflow as tf\ntf.__version__","e95aaa9e":"tf.test.is_gpu_available()","5bb1ea71":"!pip3 install gpt-2-simple","7f7ff234":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport gpt_2_simple as gpt2 # For GPT2\nimport os # For file\nimport re # For text cleanup","0d0fc6c2":"model_name = \"124M\"\n\n# Download model\nif not os.path.isdir(os.path.join(\"models\", model_name)):\n    print(f\"Downloading {model_name} model...\")\n    gpt2.download_gpt2(model_name=model_name)   # model is saved into current directory under \/models\/124M\/","9ddb64df":"# This is to prevent lines from being truncated when saving to a file\npd.set_option(\"display.max_colwidth\", 10000000)","9d7159b3":"df = pd.read_csv('..\/input\/the-office-us-complete-dialoguetranscript\/The-Office-Lines-V2.csv')\n\ndf.head(10)","d713cf0a":"data = [\"--Scene Start--\"]\nscene = 1\n\nfor index, row in df.iterrows():\n    if scene != row['scene']:\n        data.append(\"--Scene End--\")\n        data.append(\"\")\n        data.append(\"--Scene Start--\")\n        data.append(row['speaker'].strip() + \": \" + row['line'].strip())\n        scene += 1\n    else:\n        data.append(row['speaker'].strip() + \": \" + row['line'].strip())\n\ndata.append(\"--Scene End--\")\ndata.append(\"\")\ndata.append(\"--Scene Start--\")","f2c0330e":"data[0:8]","db2df1f7":"len(data)","02d93999":"# Saving all of the lines to a text file\nwith open('lines.txt', 'w') as filehandle:\n    for listitem in data:\n        filehandle.write('%s\\n' % listitem)","d5dad904":"office_sess = gpt2.start_tf_sess()","f223a862":"gpt2.finetune(office_sess,\n              '.\/lines.txt',\n              model_name=model_name,\n              steps=1000,\n              print_every=100,\n              sample_every=1000,\n              save_every=500)   # steps is max number of training steps","e203e41b":"# Generating a script based on an initial line\n\ngpt2.generate(office_sess, length=250, temperature=0.8, prefix='Andy: This corona virus stuff is getting out of hand.')","3ef9f4f6":"Before proceeding do a 'kernel restart' once both installations are done\n\n> CMD-Shift-P > 'Confirm Kernal Restart'","e094a513":"# Using GPT-2 to generate The Office Scenes\n\nTo use GPT-2 the quickest way is through the [gpt-2-simple](https:\/\/github.com\/minimaxir\/gpt-2-simple) library\n\nHowever, this requrires a lower version of tensorflow which is installed first and then a lower version of tensorflow GPU to get the Kaggle notebook to recognize the GPU.\n\nWe start by downgrading tensorflow and tensorflow-gpu"}}