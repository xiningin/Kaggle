{"cell_type":{"8210658f":"code","110add63":"code","1773f31e":"code","12bec484":"code","5e2c1fe4":"code","e44c89bc":"code","face5ec2":"code","b4d08ec0":"code","9c425695":"code","42a1a142":"code","b625e40b":"code","5f1e7574":"code","c5608624":"code","4836ed83":"code","26419b65":"code","0a7c2e53":"code","7051fb56":"code","b414fc60":"code","bdb558a5":"code","f7e0d4ff":"code","b415cc36":"code","fca332f4":"code","74b15ab6":"code","60354792":"code","5446ad44":"code","23728e27":"code","b4bf6e3a":"code","57170e60":"code","a4c12c62":"markdown","a2df3299":"markdown","76ec354a":"markdown"},"source":{"8210658f":"import pandas as pd\nwater=pd.read_csv('..\/input\/water-potability\/water_potability.csv')\nwater.head()","110add63":"water.info()","1773f31e":"water.describe()","12bec484":"Potability_0=water[water.Potability==0]\nPotability_0.head()","5e2c1fe4":"round(Potability_0.isnull().sum()*100\/len(Potability_0),2).sort_values(ascending=False)","e44c89bc":"Potability_0.describe()","face5ec2":"Potability_0.fillna(Potability_0.median(), inplace=True)\nPotability_0.describe()","b4d08ec0":"Potability_1=water[water.Potability==1]\nPotability_1.head()","9c425695":"round(Potability_1.isnull().sum()*100\/len(Potability_1),2).sort_values(ascending=False)","42a1a142":"Potability_1.fillna(Potability_1.median(), inplace=True)\nPotability_1.describe()","b625e40b":"import numpy as np\nwater=pd.concat([Potability_1, Potability_0], axis=0)\nwater = water.iloc[np.random.permutation(len(water))]\nwater=water.reset_index(drop=True)\nwater.head()","5f1e7574":"water.nunique()","c5608624":"round(water.Potability.value_counts()*100\/len(water),2)","4836ed83":"!pip install --upgrade git+https:\/\/github.com\/tusharsarkar3\/XBNet.git","26419b65":"import torch\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom XBNet.training_utils import training,predict\nfrom XBNet.models import XBNETClassifier\nfrom XBNet.run import run_XBNET ","0a7c2e53":"y=water[['Potability']]\ny.head()","7051fb56":"x=water.loc[:,:'Turbidity']\nx.head()","b414fc60":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size= 0.20, random_state= True,stratify=y) \nx_train.shape,x_test.shape,y_train.shape,y_test.shape","bdb558a5":"from imblearn.over_sampling import SMOTE\n\nsm = SMOTE(random_state=42)\nx_train_smote, y_train_smote = sm.fit_resample(x_train, y_train)","f7e0d4ff":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nx_train_smote=scaler.fit_transform(x_train_smote)\nx_test=scaler.transform(x_test)","b415cc36":"y_test= y_test.to_numpy()\ny_test[:5]","fca332f4":"y_train_smote= y_train_smote.to_numpy()\ny_train_smote[:5]","74b15ab6":"y_train_smote=y_train_smote.reshape((-1))\ny_train_smote.shape","60354792":"y_test=y_test.reshape((-1))\ny_test.shape","5446ad44":"model = XBNETClassifier(x_train_smote,y_train_smote,num_layers=2)","23728e27":"criterion = torch.nn.CrossEntropyLoss()\noptimizer = torch.optim.Adam(model.parameters(), lr=0.04) ","b4bf6e3a":"m,acc, lo, val_ac, val_lo = run_XBNET(x_train_smote,x_test,y_train_smote,y_test,model,criterion,\n                                      optimizer,epochs=100,batch_size=256)","57170e60":"import matplotlib.pyplot as plt\nplt.figure(figsize=(20,5))\nplt.subplot(1,2,1)\nplt.plot(acc,label='training accuracy')\nplt.plot(val_ac,label = 'validation accuracy')\nplt.xlabel('epochs')\nplt.ylabel('accuracy')\nplt.legend()\nplt.grid()\nplt.subplot(1,2,2)\nplt.plot(lo,label='training loss')\nplt.plot(val_lo,label = 'validation loss')\nplt.xlabel('epochs')\nplt.ylabel('loss')\nplt.legend() \nplt.grid()","a4c12c62":"This is based on paper named \"XBNet : An Extremely Boosted Neural Network\"\n\nLink : https:\/\/arxiv.org\/abs\/2106.05239","a2df3299":"#### Treating Missing value for Potability_1 records","76ec354a":"#### Treating Missing value for Potability_0 records"}}