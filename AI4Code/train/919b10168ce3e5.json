{"cell_type":{"e0a0ad38":"code","e03a72c7":"code","bde74990":"code","9c02daf0":"code","8dffcf94":"code","ec78ba13":"code","455872fb":"code","1d35226a":"code","1692de6f":"code","eec9cad9":"code","fe9556eb":"code","1cbddc7e":"code","6312ba1b":"code","b840e3e6":"code","71e05196":"code","9110fd5f":"code","e7167b67":"code","4c8a6023":"code","3456bbf8":"code","9b6515f9":"code","9607c72b":"code","f8c39201":"code","35da08c1":"code","8cb7a07c":"code","1da1f850":"code","54590942":"code","8c096989":"code","aeab183f":"code","d7660b2f":"code","3adab21c":"code","f36d0098":"code","3e9a91a5":"code","422063af":"code","cce8c2c2":"code","e0ad7700":"code","6db4fc1e":"code","919e652b":"code","ac7a3d0b":"code","ceb32ed9":"code","d1e0efd5":"code","fee29f07":"code","910d4842":"code","c0008bfe":"code","55ec68e5":"code","5cfbb1a6":"code","fa64662b":"code","003bb562":"code","7cb0f31c":"code","c176004c":"code","1b5152b0":"code","e2358d09":"code","4b00b885":"code","b837632e":"code","78110e66":"code","ed0e753d":"code","0815f618":"code","facd1c7f":"code","8fdb5bcb":"code","d54b8fc5":"code","8a114bb9":"code","f686f176":"code","1852e880":"code","2f1b9736":"code","471dbd23":"code","a15a6cff":"code","312167a6":"code","d854ca38":"code","1ab02ac4":"code","288ecfbc":"code","a7e86d40":"code","4ebd54c3":"code","0188f569":"code","c14e335c":"code","a4b22198":"code","c1d0f41a":"code","2a132bcc":"code","f305bb58":"code","3e5c5f92":"code","1c1d045b":"code","28536992":"code","cf8d7000":"code","450d065b":"code","93266421":"code","290aa67c":"code","9ec0a1c7":"code","76643b77":"code","86a30bab":"code","f0fce4a8":"code","b10dd80d":"code","def24115":"code","190286af":"code","dadbb2d3":"code","e5520e90":"code","e7d326f2":"code","ba72d5a0":"code","1a6e583c":"code","0068530b":"code","422f8125":"code","3cd4817b":"code","ee439776":"code","2a76ae01":"code","c9aeac1e":"code","bc64c625":"code","dd60b911":"code","0553ddf9":"code","2ae7a33e":"code","67f55de7":"code","4effe036":"code","2bb39201":"code","178bba49":"code","87ef5329":"code","22035698":"code","b5247779":"code","293e0bce":"code","4ed500c7":"code","62ce791b":"code","2bf23917":"code","f38ae91f":"code","f4568d78":"code","79dd5f69":"code","55cc0f7e":"code","eac85015":"code","bf666fea":"code","7ddd460b":"code","490e793e":"code","1056f1a1":"code","ab5afabb":"code","d13e6f95":"code","f7a53d6b":"code","dd950a9f":"code","7de3b9aa":"code","51cf0566":"code","7524c635":"code","c64d9750":"code","09092d53":"code","bdad7905":"code","917917a6":"markdown","b07a4779":"markdown","6c172f26":"markdown","534ab5c0":"markdown","2e8e7fe4":"markdown","8112c572":"markdown","91f6ea44":"markdown","561bed46":"markdown","b9115091":"markdown","f1a3be5f":"markdown","0d5c4d8f":"markdown","200640e0":"markdown","19fe3aa7":"markdown","19fd169f":"markdown","1234afc5":"markdown","f6b0d465":"markdown","709b5cb1":"markdown","5efdb0d9":"markdown","08b354d3":"markdown","23af3d2b":"markdown","ec1a8f14":"markdown","f7209351":"markdown","9fa36de6":"markdown","c5b4f717":"markdown","f289a752":"markdown","3de44226":"markdown","6fdc953f":"markdown","e588166c":"markdown","cb88f688":"markdown","2cd817bc":"markdown","e20496af":"markdown","fc34d8a0":"markdown","c7319cd6":"markdown","1efb696d":"markdown","68db4a0f":"markdown","1e1ba731":"markdown","ca46936d":"markdown","60f4dd94":"markdown","2e1a1229":"markdown","1d725c22":"markdown","d8269b2d":"markdown","875f8e79":"markdown","276f74bd":"markdown","5f808266":"markdown","aef6a56b":"markdown","4c9a4293":"markdown","8453bd2b":"markdown","a83cde38":"markdown","c007f94b":"markdown","d072f677":"markdown","b59ae02c":"markdown"},"source":{"e0a0ad38":"import time\nimport warnings\nimport numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nwarnings.filterwarnings('ignore')","e03a72c7":"df_train = pd.read_csv('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv', nrows = None)","bde74990":"df_train.loc[0:1,:]","9c02daf0":"for col in df_train.columns[0:5]:\n    print(df_train.loc[0,col], df_train.loc[1,col])","8dffcf94":"Q = df_train.iloc[0,:]\ntrain = df_train.iloc[1:,:]","ec78ba13":"sns.set(font_scale = 1.3) \nfig, ax = plt.subplots(figsize = (12,6))\nc_map = sns.cubehelix_palette(light = 1, as_cmap = True)\nsns.countplot(data = train, x = 'Q1', palette = 'mako',\n              order = ['18-21','22-24','25-29','30-34','35-39','40-44','45-49','50-54','55-59','60-69','70+'])\n\nax.tick_params(axis = 'x', rotation = 40)\n_ = ax.set_title('Age', fontsize = 18, fontweight = 'bold')\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)\n","455872fb":"fig, ax = plt.subplots(figsize = (14,4))\nsns.countplot(data = train, x = 'Q2', palette = ['#4682B2',\"#FE7D6A\"])\n_ = ax.set_title('Gender', fontsize = 18, fontweight = 'bold')\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","1d35226a":"train['Q3'].unique(), train['Q3'].nunique()","1692de6f":"fig, ax = plt.subplots(figsize = (16,30))\nsns.countplot(data = train, y = 'Q3', order = train['Q3'].value_counts().index)\nax.set_title('Country of Residence', fontsize = 18, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","eec9cad9":"for col in df_train.columns[[4]]:\n    print(df_train.loc[0,col], df_train.loc[1,col])\ntrain['Q4'].unique(), train['Q4'].nunique()","fe9556eb":"fig, ax = plt.subplots(figsize = (14,8))\nsns.countplot(data = train, y = 'Q4', order = train['Q4'].value_counts().index, palette = 'pastel')\n_ = ax.set_title('Education', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)\n#ax.tick_params(axis = 'x', rotation = 90)\n#_ = ax.set_xticklabels(labels = ax.get_xticklabels(), verticalalignment = 'center_baseline')","1cbddc7e":"for col in df_train.columns[[5]]:\n    print(df_train.loc[0,col], df_train.loc[1,col])\ntrain['Q5'].unique(), train['Q5'].nunique()","6312ba1b":"fig, ax = plt.subplots(figsize = (16,5))\nsns.countplot(data = train, x = 'Q5', palette = 'pastel', order = train['Q5'].value_counts().index)\nax.set_title('Current Role at Work', fontsize = 18, fontweight = 'bold')\nax.tick_params(axis = 'x', rotation = 75)\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)\n_ = ax.set_xticklabels(labels = ax.get_xticklabels(), verticalalignment = 'center_baseline')","b840e3e6":"for col in df_train.columns[[6]]:\n    print(df_train.loc[0,col], df_train.loc[1,col])\ntrain['Q6'].unique(), train['Q6'].nunique()","71e05196":"fig, ax = plt.subplots(figsize = (16,5))\nsns.countplot(data = train, x = 'Q6', palette = 'pastel', order = train['Q6'].value_counts().index)\nax.set_title('Coding Experience', fontsize = 18, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)\n#ax.tick_params(axis = 'x', rotation = 45)\n#ax.set_xticklabels(labels = ax.get_xticklabels(), verticalalignment = 'center')","9110fd5f":"for col in df_train.columns[7:20]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","e7167b67":"pl_counts = np.zeros((13,2))\npl_counts = pd.DataFrame(pl_counts)\npl_counts.columns = ['Programming Language','Counts']\ni = 0\nfor col in df_train.columns[7:20]:\n    pl_counts['Programming Language'][i] = df_train.loc[0,col][102:]\n    pl_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\npl_counts = pl_counts.sort_values(['Counts'], ascending = False).reset_index(drop = True)\npl_counts","4c8a6023":"fig, ax = plt.subplots(figsize = (16,5))\nsns.barplot(x = 'Programming Language',y = 'Counts', data = pl_counts)\nax.set_title('Programming Language', fontsize = 18, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","3456bbf8":"for col in df_train.columns[21:34]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","9b6515f9":"de_counts = np.zeros((13,2))\nde_counts = pd.DataFrame(de_counts)\nde_counts.columns = ['Development Environment','Counts']\ni = 0\nfor col in df_train.columns[21:34]:\n    de_counts['Development Environment'][i] = df_train.loc[0,col][142:]\n    de_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nde_counts = de_counts.sort_values(['Counts'], ascending = False).reset_index(drop = True)\nde_counts","9607c72b":"fig, ax = plt.subplots(figsize = (16,14))\nsns.barplot(y = 'Development Environment',x = 'Counts', data = de_counts)\nax.set_title('Development Environment', fontsize = 24, fontweight = 'bold')\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)\n#ax.tick_params(axis = 'x', rotation = 65)\n_ = ax.bar_label(ax.containers[0])\n#_ = ax.set_xticklabels(labels = ax.get_xticklabels(), verticalalignment = 'center_baseline')","f8c39201":"for col in df_train.columns[34:51]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","35da08c1":"hn_counts = np.zeros((17,2))\nhn_counts = pd.DataFrame(hn_counts)\nhn_counts.columns = ['Hosted Notebook','Counts']\ni = 0\nfor col in df_train.columns[34:51]:\n    hn_counts['Hosted Notebook'][i] = df_train.loc[0,col][124:]\n    hn_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nhn_counts = hn_counts.sort_values(['Counts'], ascending = False).reset_index(drop = True)\nhn_counts","8cb7a07c":"fig, ax = plt.subplots(figsize = (16,14))\nsns.barplot(y = 'Hosted Notebook', x= 'Counts', data = hn_counts)\n_ = ax.set_title('Hosted Notebook', fontsize = 24, fontweight = 'bold')\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","1da1f850":"for col in df_train.columns[[51]]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","54590942":"fig, ax = plt.subplots(figsize = (16,8))\nsns.countplot(data = train, y = train['Q11'], order = train['Q11'].value_counts().index, palette = 'Set2')\nax.set_title('Cloud Computing Platform', fontsize = 24, fontweight = 'bold')\n#ax.set_yticklabels(ax.get_yticks(), size = 15)\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","8c096989":"for col in df_train.columns[52:58]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","aeab183f":"hw_counts = np.zeros((6,2))\nhw_counts = pd.DataFrame(hw_counts)\nhw_counts.columns = ['Hardware', 'Counts']\ni = 0\nfor col in df_train.columns[52:58]:\n    hw_counts['Hardware'][i] = df_train.loc[0,col][112:]\n    hw_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nhw_counts = hw_counts.sort_values(['Counts'], ascending = False).reset_index(drop = True)\nhw_counts","d7660b2f":"fig, ax = plt.subplots(figsize = (16,8))\nsns.barplot(data = hw_counts, y = 'Hardware', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('HW in use', fontsize = 24, fontweight = 'bold')\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","3adab21c":"for col in df_train.columns[[58]]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","f36d0098":"fig, ax = plt.subplots(figsize = (16,8))\nsns.countplot(data = train, y = train['Q13'], order = train['Q13'].value_counts().index, palette = 'Set2')\nax.set_title('TPU usage', fontsize = 24, fontweight = 'bold')\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)\n#ax.tick_params(axis = 'x', rotation = 45)\n#_ = ax.set_xticklabels(labels = ax.get_xticklabels(), verticalalignment = 'center')\n_ = ax.bar_label(ax.containers[0])","3e9a91a5":"for col in df_train.columns[59:71]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","422063af":"vt_counts = np.zeros((12,2))\nvt_counts = pd.DataFrame(vt_counts)\nvt_counts.columns = ['Visualisation Tool', 'Counts']\ni = 0\nfor col in df_train.columns[59:71]:\n    vt_counts['Visualisation Tool'][i] = df_train.loc[0,col][120:]\n    vt_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nvt_counts = vt_counts.sort_values(['Counts'], ascending = False).reset_index(drop = True)\nvt_counts","cce8c2c2":"fig, ax = plt.subplots(figsize = (16,12))\nsns.barplot(data = vt_counts, y = 'Visualisation Tool', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Visualization Tool', fontsize = 24, fontweight = 'bold')\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","e0ad7700":"for col in df_train.columns[[71]]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","6db4fc1e":"fig, ax = plt.subplots(figsize = (16,10))\nsns.countplot(data = train, y = train['Q15'], order = train['Q15'].value_counts().index, palette = 'Set2')\nax.set_title('Experience in ML', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","919e652b":"for col in df_train.columns[72:90]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","ac7a3d0b":"vt_counts = np.zeros((18,2))\nvt_counts = pd.DataFrame(vt_counts)\nvt_counts.columns = ['ML Frameworks', 'Counts']\ni = 0\nfor col in df_train.columns[72:90]:\n    vt_counts['ML Frameworks'][i] = df_train.loc[0,col][125:]\n    vt_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\n\nvt_counts = vt_counts.sort_values(['Counts'], ascending = False).reset_index(drop = True)\nvt_counts","ceb32ed9":"fig, ax = plt.subplots(figsize = (16,14))\nsns.barplot(data = vt_counts, y = 'ML Frameworks', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('ML Frameworks', fontsize = 24, fontweight = 'bold')\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","d1e0efd5":"for col in df_train.columns[90:102]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","fee29f07":"alg_counts = np.zeros((12,2))\nalg_counts = pd.DataFrame(alg_counts)\nalg_counts.columns = ['Algorithms', 'Counts']\ni = 0\nfor col in df_train.columns[90:102]:\n    alg_counts['Algorithms'][i] = df_train.loc[0,col][113:]\n    alg_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nalg_counts['Counts'] = alg_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nalg_counts","910d4842":"sns.set(font_scale = 2)\nfig, ax = plt.subplots(figsize = (16,10))\nsns.barplot(data = alg_counts, y = 'Algorithms', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Algorithms in use', fontsize = 22, fontweight = 'bold')\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","c0008bfe":"for col in df_train.columns[102:109]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","55ec68e5":"cv_counts = np.zeros((7,2))\ncv_counts = pd.DataFrame(cv_counts)\ncv_counts.columns = ['Computer Vision', 'Counts']\ni = 0\nfor col in df_train.columns[102:109]:\n    cv_counts['Computer Vision'][i] = df_train.loc[0,col][120:]\n    cv_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\ncv_counts['Counts'] = cv_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\ncv_counts","5cfbb1a6":"fig, ax = plt.subplots(figsize = (16,10))\nsns.barplot(data = cv_counts, y = 'Computer Vision', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Computer Vision Category', fontsize = 24, fontweight = 'bold')\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","fa64662b":"for col in df_train.columns[109:115]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","003bb562":"nlp_counts = np.zeros((6,2))\nnlp_counts = pd.DataFrame(nlp_counts)\nnlp_counts.columns = ['NLP Methods', 'Counts']\ni = 0\nfor col in df_train.columns[109:115]:\n    nlp_counts['NLP Methods'][i] = df_train.loc[0,col][140:]\n    nlp_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nnlp_counts['Counts'] = nlp_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nnlp_counts","7cb0f31c":"fig, ax = plt.subplots(figsize = (16,5))\nsns.barplot(data = nlp_counts, y = 'NLP Methods', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('NLP Methods', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","c176004c":"for col in df_train.columns[[115]]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","1b5152b0":"fig, ax = plt.subplots(figsize = (16,14))\nsns.countplot(data = train, y = train['Q20'], order = train['Q20'].value_counts().index, palette = 'Set2')\nax.set_title('Current Working Industry', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","e2358d09":"for col in df_train.columns[[116]]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","4b00b885":"fig, ax = plt.subplots(figsize = (16,4))\nsns.countplot(data = train, y = train['Q21'], order = train['Q21'].value_counts().index, palette = 'Set2')\nax.set_title('Current Working Company Size', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","b837632e":"for col in df_train.columns[[117]]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","78110e66":"fig, ax = plt.subplots(figsize = (16,6))\nsns.countplot(data = train, y = train['Q22'], order = train['Q22'].value_counts().index, palette = 'Set2')\nax.set_title('Data Science Team Size', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","ed0e753d":"for col in df_train.columns[[118]]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","0815f618":"fig, ax = plt.subplots(figsize = (16,6))\nsns.countplot(data = train, y = train['Q23'], order = train['Q23'].value_counts().index, palette = 'Set2')\nax.set_title('ML Usage at Work', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","facd1c7f":"for col in df_train.columns[119:127]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","8fdb5bcb":"mwa_counts = np.zeros((8,2))\nmwa_counts = pd.DataFrame(mwa_counts)\nmwa_counts.columns = ['Major Working Activity', 'Counts']\ni = 0\nfor col in df_train.columns[119:127]:\n    mwa_counts['Major Working Activity'][i] = df_train.loc[0,col][118:]\n    mwa_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nmwa_counts['Counts'] = mwa_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nmwa_counts","d54b8fc5":"fig, ax = plt.subplots(figsize = (16,10))\nsns.barplot(data = mwa_counts, y = 'Major Working Activity', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Major Working Activity', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","8a114bb9":"for col in df_train.columns[[127]]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","f686f176":"lst = train['Q25'].unique()\nres = lst[4]\nlst = np.delete(lst, 4)\nlst = [l.replace('$', '') for l in lst]\nlst = [l.replace('>', '') for l in lst]\nlst = sorted(lst, key = lambda x: int(x.split('-')[0].replace(',','')))\nlst[0] = '$'+lst[0]\nlst[-1] = '>$'+lst[-1]\nlst[-2] = '$'+lst[-2]\nlst.append(res)\nprint(lst) ","1852e880":"fig, ax = plt.subplots(figsize = (16,14))\nsns.countplot(data = train, y = train['Q25'], palette = 'Set2', order = lst)\nax.set_title('Yearly Salary ($USD)', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","2f1b9736":"for col in df_train.columns[[128]]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","471dbd23":"lst_2 = ['$0 ($USD)', '$1-$99', '$100-$999', '$1000-$9,999', '$10,000-$99,999', '$100,000 or more ($USD)', 'nan']","a15a6cff":"fig, ax = plt.subplots(figsize = (16,5))\nsns.countplot(data = train, y = train['Q26'], palette = 'Set2', order = lst_2)\nax.set_title('ML\/Cloud Computing Cost at Work\/Home in 5 Years ($USD)', fontsize = 16, fontweight = 'bold')\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)\n_ = ax.bar_label(ax.containers[0])","312167a6":"for col in df_train.columns[129:141]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","d854ca38":"cc_counts = np.zeros((12,2))\ncc_counts = pd.DataFrame(cc_counts)\ncc_counts.columns = ['Cloud Computing Platform', 'Counts']\ni = 0\nfor col in df_train.columns[129:141]:\n    cc_counts['Cloud Computing Platform'][i] = df_train.loc[0,col][124:]\n    cc_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\ncc_counts['Counts'] = cc_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\ncc_counts","1ab02ac4":"fig, ax = plt.subplots(figsize = (16,5))\nsns.barplot(data = cc_counts, y = 'Cloud Computing Platform', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Cloud Computing Platform In Use', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","288ecfbc":"for col in df_train.columns[268:280]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","a7e86d40":"wcc_counts = np.zeros((12,2))\nwcc_counts = pd.DataFrame(wcc_counts)\nwcc_counts.columns = ['Willing to Learn Cloud Computing Platform', 'Counts']\ni = 0\nfor col in df_train.columns[268:280]:\n    wcc_counts['Willing to Learn Cloud Computing Platform'][i] = df_train.loc[0,col][130:]\n    wcc_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nwcc_counts['Counts'] = wcc_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nwcc_counts","4ebd54c3":"fig, ax = plt.subplots(figsize = (16,5))\nsns.barplot(data = wcc_counts, y = 'Willing to Learn Cloud Computing Platform', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Willing to Learn Cloud Computing Platform', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","0188f569":"for col in df_train.columns[[141]]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","c14e335c":"fig, ax = plt.subplots(figsize = (16,8))\nsns.countplot(data = train, y = train['Q28'], order = train['Q28'].value_counts().index, palette = 'Set2')\nax.set_title(' Best Developer Experience', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","a4b22198":"for col in df_train.columns[142:147]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","c1d0f41a":"ccpr_counts = np.zeros((5,2))\nccpr_counts = pd.DataFrame(ccpr_counts)\nccpr_counts.columns = ['Cloud Computing Product', 'Counts']\ni = 0\nfor col in df_train.columns[142:147]:\n    ccpr_counts['Cloud Computing Product'][i] = df_train.loc[0,col][120:]\n    ccpr_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nccpr_counts['Counts'] = ccpr_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nccpr_counts","2a132bcc":"fig, ax = plt.subplots(figsize = (16,4))\nsns.barplot(data = ccpr_counts, y = 'Cloud Computing Product', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Cloud Computing Product In Use', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","f305bb58":"for col in df_train.columns[280:285]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","3e5c5f92":"wccpr_counts = np.zeros((5,2))\nwccpr_counts = pd.DataFrame(ccpr_counts)\nwccpr_counts.columns = ['Cloud Computing Product', 'Counts']\ni = 0\nfor col in df_train.columns[280:285]:\n    wccpr_counts['Cloud Computing Product'][i] = df_train.loc[0,col][153:]\n    wccpr_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nwccpr_counts['Counts'] = wccpr_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nwccpr_counts","1c1d045b":"fig, ax = plt.subplots(figsize = (16,4))\nsns.barplot(data = ccpr_counts, y = 'Cloud Computing Product', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Willing to Learn Cloud Computing Product in The Next Two Years', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","28536992":"for col in df_train.columns[147:155]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","cf8d7000":"spr_counts = np.zeros((8,2))\nspr_counts = pd.DataFrame(spr_counts)\nspr_counts.columns = ['Storage Product', 'Counts']\ni = 0\nfor col in df_train.columns[147:155]:\n    spr_counts['Storage Product'][i] = df_train.loc[0,col][118:]\n    spr_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nspr_counts['Counts'] = spr_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nspr_counts","450d065b":"fig, ax = plt.subplots(figsize = (16,6))\nsns.barplot(data = spr_counts, y = 'Storage Product', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Storage Product In Use', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","93266421":"for col in df_train.columns[285:293]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","290aa67c":"wspr_counts = np.zeros((8,2))\nwspr_counts = pd.DataFrame(wspr_counts)\nwspr_counts.columns = ['Storage Product', 'Counts']\ni = 0\nfor col in df_train.columns[285:293]:\n    wspr_counts['Storage Product'][i] = df_train.loc[0,col][150:]\n    wspr_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nwspr_counts['Counts'] = wspr_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nwspr_counts","9ec0a1c7":"fig, ax = plt.subplots(figsize = (16,6))\nsns.barplot(data = spr_counts, y = 'Storage Product', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Willing to Learn About Storage Product In The Next 2 Years', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","76643b77":"for col in df_train.columns[155:165]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","86a30bab":"mmlpr_counts = np.zeros((8,2))\nmmlpr_counts = pd.DataFrame(mmlpr_counts)\nmmlpr_counts.columns = ['Managed ML Product', 'Counts']\ni = 0\nfor col in df_train.columns[147:155]:\n    mmlpr_counts['Managed ML Product'][i] = df_train.loc[0,col][118:]\n    mmlpr_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nmmlpr_counts['Counts'] = mmlpr_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nmmlpr_counts","f0fce4a8":"fig, ax = plt.subplots(figsize = (16,6))\nsns.barplot(data = mmlpr_counts, y = 'Managed ML Product', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Managed ML Product In Use', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","b10dd80d":"for col in df_train.columns[293:303]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","def24115":"wmmlpr_counts = np.zeros((10,2))\nwmmlpr_counts = pd.DataFrame(wmmlpr_counts)\nwmmlpr_counts.columns = ['Managed ML Product', 'Counts']\ni = 0\nfor col in df_train.columns[293:303]:\n    wmmlpr_counts['Managed ML Product'][i] = df_train.loc[0,col][154:]\n    wmmlpr_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nwmmlpr_counts['Counts'] = wmmlpr_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nwmmlpr_counts","190286af":"fig, ax = plt.subplots(figsize = (16,8))\nsns.barplot(data = wmmlpr_counts, y = 'Managed ML Product', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Willing to Learn Managed ML Products in The Next 2 Years', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","dadbb2d3":"for col in df_train.columns[165:186]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","e5520e90":"bdpr_counts = np.zeros((21,2))\nbdpr_counts = pd.DataFrame(bdpr_counts)\nbdpr_counts.columns = ['Big Data Product', 'Counts']\ni = 0\nfor col in df_train.columns[165:186]:\n    bdpr_counts['Big Data Product'][i] = df_train.loc[0,col][180:]\n    bdpr_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nbdpr_counts['Counts'] = bdpr_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nbdpr_counts","e7d326f2":"fig, ax = plt.subplots(figsize = (16,14))\nsns.barplot(data = bdpr_counts, y = 'Big Data Product', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Big Data Product In Use', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","ba72d5a0":"for col in df_train.columns[303:324]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","1a6e583c":"wbdpr_counts = np.zeros((21,2))\nwbdpr_counts = pd.DataFrame(wbdpr_counts)\nwbdpr_counts.columns = ['Big Data Product', 'Counts']\ni = 0\nfor col in df_train.columns[165:186]:\n    wbdpr_counts['Big Data Product'][i] = df_train.loc[0,col][180:]\n    wbdpr_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nwbdpr_counts['Counts'] = wbdpr_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nwbdpr_counts","0068530b":"fig, ax = plt.subplots(figsize = (16,14))\nsns.barplot(data = wbdpr_counts, y = 'Big Data Product', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Willing to Learn Big Data Products in The Next 2 Years', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","422f8125":"for col in df_train.columns[[186]]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique(), train[col].nunique())","3cd4817b":"fig, ax = plt.subplots(figsize = (16,10))\nsns.countplot(data = train, y = train['Q33'], order = train['Q33'].value_counts().index, palette = 'Set2')\nax.set_title('Big Data Product', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","ee439776":"for col in df_train.columns[187:204]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique(), train[col].nunique())","2a76ae01":"bi_counts = np.zeros((17,2))\nbi_counts = pd.DataFrame(bi_counts)\nbi_counts.columns = ['Buisness Intellingence', 'Counts']\ni = 0\nfor col in df_train.columns[187:204]:\n    bi_counts['Buisness Intellingence'][i] = df_train.loc[0,col][125:]\n    bi_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nbi_counts['Counts'] = bi_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nbi_counts","c9aeac1e":"fig, ax = plt.subplots(figsize = (16,10))\nsns.barplot(data = bi_counts, y = 'Buisness Intellingence', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Business Intelligence Tool', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","bc64c625":"for col in df_train.columns[324:341]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique(), train[col].nunique())","dd60b911":"wbi_counts = np.zeros((17,2))\nwbi_counts = pd.DataFrame(bi_counts)\nwbi_counts.columns = ['Buisness Intellingence', 'Counts']\ni = 0\nfor col in df_train.columns[324:341]:\n    wbi_counts['Buisness Intellingence'][i] = df_train.loc[0,col][157:]\n    wbi_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nwbi_counts['Counts'] = wbi_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nwbi_counts","0553ddf9":"fig, ax = plt.subplots(figsize = (16,10))\nsns.barplot(data = bi_counts, y = 'Buisness Intellingence', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Willing to Learn Business Intelligence Tool in The Next 2 Years', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","2ae7a33e":"for col in df_train.columns[[204]]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique(), train[col].nunique())","67f55de7":"fig, ax = plt.subplots(figsize = (16,10))\nsns.countplot(data = train, y = train['Q35'], order = train['Q35'].value_counts().index, palette = 'Set2')\nax.set_title('Mostly Used Business Intelligence Tool', fontsize = 16, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","4effe036":" for col in df_train.columns[205:213]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","2bb39201":"aml_counts = np.zeros((8,2))\naml_counts = pd.DataFrame(aml_counts)\naml_counts.columns = ['Automated ML Processes', 'Counts']\ni = 0\nfor col in df_train.columns[205:213]:\n    aml_counts['Automated ML Processes'][i] = df_train.loc[0,col][138:]\n    aml_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\naml_counts['Counts'] = aml_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\naml_counts","178bba49":"sns.set(font_scale = 2)\nfig, ax = plt.subplots(figsize = (16,8))\nsns.barplot(data = aml_counts, y = 'Automated ML Processes', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Automated ML Processes', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","87ef5329":" for col in df_train.columns[341:349]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","22035698":"waml_counts = np.zeros((8,2))\nwaml_counts = pd.DataFrame(waml_counts)\nwaml_counts.columns = ['Automated ML Processes', 'Counts']\ni = 0\nfor col in df_train.columns[341:349]:\n    waml_counts['Automated ML Processes'][i] = df_train.loc[0,col][186:]\n    waml_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nwaml_counts['Counts'] = waml_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nwaml_counts","b5247779":"fig, ax = plt.subplots(figsize = (16,10))\nsns.barplot(data = waml_counts, y = 'Automated ML Processes', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Willing to Learn Automated ML Tools in The Next 2 Years', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","293e0bce":" for col in df_train.columns[213:221]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","4ed500c7":"amlt_counts = np.zeros((8,2))\namlt_counts = pd.DataFrame(amlt_counts)\namlt_counts.columns = ['Automated ML Tools', 'Counts']\ni = 0\nfor col in df_train.columns[213:221]:\n    amlt_counts['Automated ML Tools'][i] = df_train.loc[0,col][158:]\n    amlt_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\namlt_counts['Counts'] = amlt_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\namlt_counts","62ce791b":"fig, ax = plt.subplots(figsize = (16,10))\nsns.barplot(data = amlt_counts, y = 'Automated ML Tools', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Automated ML Tools', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","2bf23917":" for col in df_train.columns[349:357]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","f38ae91f":"wamlt_counts = np.zeros((8,2))\nwamlt_counts = pd.DataFrame(wamlt_counts)\nwamlt_counts.columns = ['Automated ML Tools', 'Counts']\ni = 0\nfor col in df_train.columns[349:357]:\n    wamlt_counts['Automated ML Tools'][i] = df_train.loc[0,col][180:]\n    wamlt_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nwamlt_counts['Counts'] = wamlt_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nwamlt_counts","f4568d78":"fig, ax = plt.subplots(figsize = (16,10))\nsns.barplot(data = wamlt_counts, y = 'Automated ML Tools', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Willing to Learn Automated ML Tools in The Next 2 Years', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","79dd5f69":" for col in df_train.columns[221:233]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","55cc0f7e":"mlet_counts = np.zeros((12,2))\nmlet_counts = pd.DataFrame(mlet_counts)\nmlet_counts.columns = ['ML Experimental Tools', 'Counts']\ni = 0\nfor col in df_train.columns[221:233]:\n    mlet_counts['ML Experimental Tools'][i] = df_train.loc[0,col][110:]\n    mlet_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nmlet_counts['Counts'] = mlet_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nmlet_counts","eac85015":"fig, ax = plt.subplots(figsize = (16,12))\nsns.barplot(data = mlet_counts, y = 'ML Experimental Tools', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('ML Experimental Tools', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","bf666fea":" for col in df_train.columns[357:]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","7ddd460b":"wmlet_counts = np.zeros((12,2))\nwmlet_counts = pd.DataFrame(wmlet_counts)\nwmlet_counts.columns = ['ML Experimental Tools', 'Counts']\ni = 0\nfor col in df_train.columns[357:]:\n    wmlet_counts['ML Experimental Tools'][i] = df_train.loc[0,col][154:]\n    wmlet_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nwmlet_counts['Counts'] = wmlet_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nwmlet_counts","490e793e":"fig, ax = plt.subplots(figsize = (16,12))\nsns.barplot(data = wmlet_counts, y = 'ML Experimental Tools', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Willing to Learn ML Experimental Tools in The Next 2 Years', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","1056f1a1":" for col in df_train.columns[233:243]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","ab5afabb":"sp_counts = np.zeros((10,2))\nsp_counts = pd.DataFrame(sp_counts)\nsp_counts.columns = ['ML Sharing Platform', 'Counts']\ni = 0\nfor col in df_train.columns[233:243]:\n    sp_counts['ML Sharing Platform'][i] = df_train.loc[0,col][125:]\n    sp_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\nsp_counts['Counts'] = sp_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\nsp_counts","d13e6f95":"fig, ax = plt.subplots(figsize = (16,10))\nsns.barplot(data = sp_counts, y = 'ML Sharing Platform', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('ML Sharing Platform', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","f7a53d6b":" for col in df_train.columns[243:255]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","dd950a9f":"dsc_counts = np.zeros((12,2))\ndsc_counts = pd.DataFrame(dsc_counts)\ndsc_counts.columns = ['Data Science Courses', 'Counts']\ni = 0\nfor col in df_train.columns[243:255]:\n    dsc_counts['Data Science Courses'][i] = df_train.loc[0,col][112:]\n    dsc_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\ndsc_counts['Counts'] = dsc_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\ndsc_counts","7de3b9aa":"fig, ax = plt.subplots(figsize = (16,10))\nsns.barplot(data = dsc_counts, y = 'Data Science Courses', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Data Science Courses', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","51cf0566":" for col in df_train.columns[[255]]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","7524c635":"fig, ax = plt.subplots(figsize = (16,10))\nsns.countplot(data = train, y = train['Q41'], order = train['Q41'].value_counts().index, palette = 'Set2')\nax.set_title('Primary Tool Used for Data Analysis at Work\/School', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","c64d9750":" for col in df_train.columns[256:268]:\n    print(col)\n    print(df_train.loc[0,col])\n    print('Possible answers: ', train[col].unique())","09092d53":"dsms_counts = np.zeros((12,2))\ndsms_counts = pd.DataFrame(dsms_counts)\ndsms_counts.columns = ['Favorite Data Science Media Sources', 'Counts']\ni = 0\nfor col in df_train.columns[256:268]:\n    dsms_counts['Favorite Data Science Media Sources'][i] = df_train.loc[0,col][120:]\n    dsms_counts['Counts'][i] = train[col].notnull().sum()\n    i += 1\ndsms_counts['Counts'] = dsms_counts['Counts'].sort_values(ascending = False).reset_index(drop = True)\ndsms_counts","bdad7905":"fig, ax = plt.subplots(figsize = (16,14))\nsns.barplot(data = dsms_counts, y = 'Favorite Data Science Media Sources', x = 'Counts', palette = 'Set2')\n_ = ax.set_title('Favorite Data Science Media Sources', fontsize = 24, fontweight = 'bold')\n_ = ax.bar_label(ax.containers[0])\n_ = ax.set(xlabel = None)\n_ = ax.set(ylabel = None)","917917a6":"## 39. ML Project Sharing Platform","b07a4779":"## 9. Frequently Used Development Environment","6c172f26":"## 30.A. Frequently Used Storage Products","534ab5c0":"## 19. Regularly Used NLP Methods","2e8e7fe4":"## 27.B. Willing to Learn Cloud Computing Platform In Future","8112c572":"## 32.A. Frequently Used Big Data Product","91f6ea44":"## 26. ML\/Cloud Computing Cost at Work\/Home in 5 years","561bed46":"## 22. Data Science Team Size","b9115091":"## 12. Frequently Used HW","f1a3be5f":"## 36.B. Willing to Learn Automated ML Tools in The Next 2 Years","0d5c4d8f":"## 30.B. Willing to Learn About Storage Data Products in The Next 2 Years","200640e0":"## 29.A. Frequently Used Cloud Computing Product","19fe3aa7":"## 3. Country","19fd169f":"## 31.B. Willing to Learn Managed ML Products in The Next 2 Years","1234afc5":"## 40. Data Science Courses Platforms","f6b0d465":"## 34.B. Willing to Learn Business Intelligence Tool in The Next 2 Years","709b5cb1":"## 42. Favorite Data Science Media Sources","5efdb0d9":"## 18. Regularly Used Computer Vision Methods","08b354d3":"## 13. TPU Usage","23af3d2b":"## 24. Major Working Activity","ec1a8f14":"## 27.A. Frequetnly Used Cloud Computing Platform","f7209351":"## 1. Age","9fa36de6":"## 38.A. ML Experimental Tools ","c5b4f717":"## 20. Current Working Industry","f289a752":"## 2. Gender","3de44226":"## 29.B. Willing to Learn Cloud Computing Product in The Next 2 Years","6fdc953f":"## 36.A. Frequtenly Used Automated ML Processes","e588166c":"## 11. Mostly Used Cloud Computing Platform","cb88f688":"## 28. Best Developer Experience for Cloud Computing","2cd817bc":"## 5. Current role at work","e20496af":"## 31.A. Frequently Used Managed ML products","fc34d8a0":"## 38.B. Willing to Learn ML Experimental Tools in The Next 2 Years","c7319cd6":"## 6. Coding Experience","1efb696d":"## 16. Regularly Used ML Frameworks","68db4a0f":"## 25. Yearly Salary ($USD)","1e1ba731":"## 14. Regularly Used Visualization Tools","ca46936d":"## 41. Primary Tool Used for Data Analysis at Work\/School","60f4dd94":"## 17. Regularly Used Algoirithms","2e1a1229":"## 32.B. Willing to Learn Big Data Products in The Next 2 Years","1d725c22":"## 23. ML Usage at Work","d8269b2d":"## 10. Frequently Used Hosted Notebook","875f8e79":"## 15. Experience in ML","276f74bd":"## 35. Mostly Used Business Intelligence Tool","5f808266":"## 21. Current Working Comapany Size","aef6a56b":"## 33. Mostly Used Big Data Product ","4c9a4293":"## 37.B. Willing to Learn Automated ML Tools in The Next 2 Years","8453bd2b":"## 37.A. Frequently Used Automated ML Tools","a83cde38":"## Introduction\nThis Notebook contains a plain visualization for showing the general scope of the data presented in the kaggle survey. It shows what questions were presented in the survay and creates a general understanding about the responses. All the plots show the counts of the corresponding parameters. This notebook can be helpful for having a base and inspiring to come up with your own version of story of the kaggle survey.","c007f94b":"## 7. Frequently Used Programming Language","d072f677":"## 34.A. Frequently Used BI Tool","b59ae02c":"## 4. Education"}}