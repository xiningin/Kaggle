{"cell_type":{"6fd06354":"code","e0e522c4":"code","4c5ac036":"code","e37eab26":"code","98dab68e":"code","bb8ef0b2":"code","5e13a3ac":"code","3bf0cc8b":"code","42bdd5d5":"code","dc5c9829":"code","efa858d9":"code","04a2eee6":"code","2faa6502":"code","be803f0b":"code","81d5303b":"code","d6708f0a":"code","76736168":"markdown","36715005":"markdown"},"source":{"6fd06354":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","e0e522c4":"df=pd.read_csv(\"..\/input\/fish-prediction\/Fish.csv\")\ndf.head(5)","4c5ac036":"df.describe()","e37eab26":"df.info()","98dab68e":"y = df['Species']\nX = df.drop('Species', axis=1)\n","bb8ef0b2":"df.info()","5e13a3ac":" df.nunique( )","3bf0cc8b":"from sklearn.preprocessing import LabelEncoder","42bdd5d5":"label_encoder = LabelEncoder()\ndf['Species'] =label_encoder.fit_transform(df[\"Species\"])\ndf['Species']","dc5c9829":"df.head()","efa858d9":"df.tail()","04a2eee6":"import seaborn as sns\nsns.pairplot(df,hue='Species')","2faa6502":"fig, ax = plt.subplots(figsize=(12,8))\nmask = np.triu(np.ones_like(df.corr(), dtype=np.bool))\nsns.heatmap(df.corr(), annot=True, cmap=\"Reds\", mask=mask, linewidth=0.5)\n","be803f0b":"from sklearn.model_selection import train_test_split\n\nX = df.drop(['Species'], axis = 1)\ny = df['Species']\n\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3,random_state=27)","81d5303b":"# Initiatlize the model\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nlogreg = LogisticRegression(solver='liblinear', random_state = 0)\n\n# Fit the model\nlogreg.fit(X_train, y_train)\n\n# Predict data points \ny_pred_test = logreg.predict(X_test)\n\n# Print accuracy scores\nprint(f'Model accuracy score: {round(accuracy_score(y_test, y_pred_test) * 100, 2)}%')","d6708f0a":"# Additional Metrics\n\nprint(f'Training set score: {round(logreg.score(X_train, y_train) * 100, 2)}%')\nprint(f'Test set score: {round(logreg.score(X_test, y_test) * 100, 2)}%')\n\n# Calculating null accuracy\nnull_accuracy = (y_test.value_counts()[0]\/(y_test.value_counts()[0]+y_test.value_counts()[1]))\nprint(f'Null Accuracy score: {round(null_accuracy * 100, 2)}%')","76736168":"#labelencoading","36715005":"# multicollinearity"}}