{"cell_type":{"81555c40":"code","bf7ed470":"code","1e2400c1":"code","6c721ade":"code","21e24807":"code","a6efca2a":"code","b8c2d0a0":"code","977ed612":"code","3ee98739":"markdown"},"source":{"81555c40":"# Importing all the modules\n\n","bf7ed470":"import numpy as np\nimport pandas as pd\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import normalize\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import precision_score\nfrom sklearn.metrics import recall_score\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import classification_report\nfrom sklearn.preprocessing import MinMaxScaler,StandardScaler,RobustScaler\n\nimport scikitplot as skplt\nimport matplotlib.pyplot as plt\n\nfrom imblearn.over_sampling import SMOTE\nimport time\n\nimport os\n\n\n\nPATH=\"..\/input\/credit-card-dataset\"\n# print(os.listdir(PATH))\n\n\nfull_data=pd.read_csv(PATH+'\/creditcard.csv')\nfull_data=full_data.sample(frac=1)#randomize the whole dataset\n\n# full_data.isnull().sum()","1e2400c1":"\n#Get the features and labels \nfull_features=full_data.drop([\"Time\",\"Class\"],axis=1)\nfull_labels=pd.DataFrame(full_data[[\"Class\"]])\n\nfull_features_array=full_features.values\nfull_labels_array=full_labels.values\n# print(full_features_array)\n\nscaler=MinMaxScaler()\n# transform data\nfull_features_array=scaler.fit_transform(full_features_array)\n# print(full_features_array)","6c721ade":"# Split the data and normalize\ntrain_features,test_features,train_labels,test_labels=train_test_split(full_features_array,full_labels_array,train_size=0.80)\ntrain_features=normalize(train_features)\ntest_features=normalize(test_features)","21e24807":"#use SMOTE for class imbalance\nsmote = SMOTE()\n\ntrain_features, train_labels = smote.fit_sample(train_features.astype('float'), train_labels)","a6efca2a":"time_start_knn=time.time()\nknn=KNeighborsClassifier(n_neighbors=10,algorithm=\"kd_tree\",n_jobs=-1)\nknn.fit(train_features,train_labels.ravel())\nknn_predicted_labels=knn.predict(test_features)\nknn_roc_auc_score=roc_auc_score(test_labels,knn_predicted_labels)\nconfusion_matr=confusion_matrix(test_labels,knn_predicted_labels)","b8c2d0a0":"fpr,tpr,thresh=roc_curve(test_labels,knn_predicted_labels)\nplt.title('Receiver Operating Characteristic')\nplt.plot(fpr, tpr, 'b')\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')\nplt.show()\n\nprint(\"Confusion Matrix\" )\nprint(confusion_matr)\nprint(\"ROC AUC  -->\",knn_roc_auc_score)\n\nprint('Testing time ', np.round(time.time()-time_start_knn, 1), ' seconds')\n# print(\"Classification report\")\n# print(classification_report(test_labels, knn_predicted_labels))","977ed612":"print(classification_report(test_labels, knn_predicted_labels))\n","3ee98739":"**Loading the dataset**\nThe dataset is loaded from the file and then randomized. Randomization of the dataset is important to decrease the variance and ensure that models remain general. "}}