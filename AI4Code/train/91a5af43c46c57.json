{"cell_type":{"01360dc7":"code","c9d4a8fd":"code","84885709":"code","a9b6882c":"code","3856cd14":"code","e2046b35":"code","4f7ff944":"code","71165b75":"code","223920b4":"code","c0e83239":"code","b6859ae7":"code","492f1151":"code","0f22ee72":"code","8d056f94":"code","a0dee3f9":"code","d6e966b2":"code","e0697028":"code","00e23339":"code","fb26893d":"code","c151630c":"code","86f6edb7":"code","720a5f26":"code","e7fd8b9d":"code","ede98339":"code","2ba20b17":"code","edc24b92":"code","c02aec3a":"code","923330b3":"code","9b3abde5":"code","293d5980":"code","1aff1603":"code","11c00725":"code","54f56c4a":"code","b082d2ca":"code","46809a04":"code","6751bdb8":"code","a2647190":"code","be068c25":"code","44e291f6":"code","7348f014":"code","2c5f51a2":"code","398285f0":"code","8ce298b4":"code","c1b4ab00":"code","3237e9a5":"code","97f32812":"code","fa39ed31":"code","1bbd7b52":"code","8ed78367":"code","54c0b624":"code","9680ffbf":"code","b2e848d1":"code","108fa7c5":"code","472c814e":"code","e4f02123":"code","33ca8717":"code","933132bd":"code","834869f4":"code","701afbca":"code","fda28406":"code","62482ca7":"code","cec0f0e9":"code","6667461f":"markdown","078790f9":"markdown"},"source":{"01360dc7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c9d4a8fd":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","84885709":"data=pd.read_csv(\"..\/input\/breast-cancer-prediction-dataset\/Breast_cancer_data.csv\")","a9b6882c":"data.describe()","3856cd14":"data.head()","e2046b35":"data.tail()","4f7ff944":"data.info()","71165b75":"type(data)","223920b4":"data.keys()","c0e83239":"data[\"mean_radius\"]","b6859ae7":"data[\"diagnosis\"]","492f1151":"#print(data[\"filename\"])","0f22ee72":"data.isnull()","8d056f94":"data.isnull().sum()","a0dee3f9":"#sns.pairplot(data,hue=\"diagnosis\")","d6e966b2":"sns.countplot(data[\"diagnosis\"])","e0697028":"plt.figure(figsize=(20,8))","00e23339":"sns.countplot(data[\"mean_radius\"])","fb26893d":"sns.countplot(data[\"mean_radius\"])","c151630c":"sns.countplot(data[\"mean_perimeter\"])","86f6edb7":"sns.countplot(data[\"mean_texture\"])","720a5f26":"plt.figure(figsize=(15,6))\nsns.heatmap(data)","e7fd8b9d":"data.corr()","ede98339":"plt.figure(figsize=(15,15))\nsns.heatmap(data.corr(),annot=True,cmap=\"coolwarm\",linewidths=2)","2ba20b17":"data2=data.drop([\"diagnosis\"],axis=1)\nprint(\"The shape of f{data2} is: \",data2.shape)","edc24b92":"plt.figure(figsize=(16,5))\nax=sns.barplot(data2.corrwith(data.diagnosis).index,data2.corrwith(data.diagnosis))\nax.tick_params(labelrotation=90)","c02aec3a":"data2.corrwith(data.diagnosis).index","923330b3":"x=data.drop([\"diagnosis\"],axis=1)","9b3abde5":"x.head(5)","293d5980":"y=data[\"diagnosis\"]","1aff1603":"y.head(5)","11c00725":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=5)","54f56c4a":"x_train","b082d2ca":"x_test","46809a04":"y_train","6751bdb8":"y_test","a2647190":"from sklearn.preprocessing import StandardScaler","be068c25":"sc=StandardScaler()","44e291f6":"x_train_sc=sc.fit_transform(x_train)","7348f014":"x_test_sc=sc.transform(x_test)","2c5f51a2":"from sklearn.metrics import confusion_matrix,classification_report,accuracy_score","398285f0":"#from sklearn.linear_model import LogisticRegression","8ce298b4":"#classifier_lr=LogisticRegression()","c1b4ab00":"#classifier_lr.fit(x_train,y_train)","3237e9a5":"#y_pred_lr=lr_classifier.predict(x_test)","97f32812":"from sklearn.tree import DecisionTreeClassifier","fa39ed31":"tree=DecisionTreeClassifier()\ntree=tree.fit(x_train,y_train)\nprediction_dt=tree.predict(x_test)","1bbd7b52":"prediction_dt","8ed78367":"print(classification_report(y_test,prediction_dt))","54c0b624":"accuracy_score(y_test,prediction_dt)","9680ffbf":"from sklearn.metrics import confusion_matrix","b2e848d1":"import xgboost\n\n","108fa7c5":"xgb=xgboost.XGBClassifier(earing_rate=0.009,n_estimators=350,subsample=0.8,max_depth=7)","472c814e":"xgb.fit(x_train,y_train)\nprediction_xgb=xgb.predict(x_test)","e4f02123":"prediction_report=xgb.predict(x_test)\nprint(classification_report(y_test,prediction_xgb))","33ca8717":"accuracy_score(prediction_xgb,y_test)","933132bd":"from sklearn.ensemble import RandomForestClassifier\nforest=RandomForestClassifier()\nforest.fit(x_train,y_train)\nprediction_rf=forest.predict(x_test)","834869f4":"accuracy_score(prediction_rf,y_test)","701afbca":"confusion_matrix(y_test,prediction_rf)","fda28406":"from sklearn.naive_bayes import GaussianNB\nclassifier=GaussianNB()\nclassifier.fit(x_train,y_train)","62482ca7":"y_pred=classifier.predict(x_test)","cec0f0e9":"accuracy_score(y_pred,y_test)","6667461f":"from sklearn.naive_bayes import GaussianNB\nclassifier=GaussianNB()\nclassifier.fit(x","078790f9":"sns.pairplot(data,hue=\"diagnosis\")"}}