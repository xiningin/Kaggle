{"cell_type":{"47853802":"code","59cb7352":"code","3aa7cb73":"code","d2043672":"code","35e13b35":"code","34b373b5":"code","87015b1b":"code","8d73f638":"code","8b341ebf":"code","a159d71d":"code","19aa7e69":"code","fbdce5b7":"code","2dbcdb0b":"code","47574480":"code","bfafdba8":"code","01a0dfa5":"code","1dac4a80":"code","ad01d7b9":"code","7c3384d7":"code","ce2602ee":"code","eb2d43f7":"code","f8cdb2c2":"code","6ac6b888":"code","d1f04250":"code","169bf0a2":"code","20ce18ac":"code","3f18e193":"code","7025a9c7":"code","ca6e64d7":"code","0617c73a":"code","13ba0faa":"code","9f82788e":"code","a20a2b18":"code","ccc102cd":"code","01640e54":"code","bf2c6976":"code","9d578e26":"code","ab724e08":"code","25d3a629":"code","ae3a55f5":"code","0f806545":"code","e821c333":"code","c33f44bd":"code","f5e5c2f5":"code","80d2b3bd":"code","948dfbc4":"code","6ead6b35":"code","96aef624":"code","b243867b":"code","9b1657db":"code","6cbbcdce":"code","24bed443":"code","acd8116a":"code","1e334405":"code","ac05de1f":"code","4923b01c":"code","aab77381":"code","97ee0fc8":"code","3981c789":"code","e2f59f31":"code","05661945":"markdown","448f4ae9":"markdown","619e907a":"markdown","f01b53b6":"markdown","b1f8153e":"markdown","8c8e0a67":"markdown","4ef1f1a6":"markdown","9f881328":"markdown","46c32cb4":"markdown","2913a28d":"markdown","9d72f0d4":"markdown","dce42a4c":"markdown","12225d7a":"markdown","6f8d57ec":"markdown","0f206d2f":"markdown","9ca80b27":"markdown","588582b0":"markdown","2419aa87":"markdown","47e67849":"markdown","880109cb":"markdown","633ecbea":"markdown","1b093ad0":"markdown","277c54e9":"markdown","107c5d57":"markdown","24b63ce3":"markdown","623e930c":"markdown","31602551":"markdown","77d01e99":"markdown","374fcfe8":"markdown","d7bcbddb":"markdown","9f038747":"markdown","4768c9b5":"markdown","ecc26cc5":"markdown","c8f2464d":"markdown","6f053937":"markdown","d4fb5e20":"markdown","f0325876":"markdown","19181f47":"markdown","037dbf96":"markdown","221187e5":"markdown","94bbd3c2":"markdown"},"source":{"47853802":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nsb.set_style('whitegrid')\nsb.set_palette('dark')\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","59cb7352":"train_data = pd.read_csv('\/kaggle\/input\/health-insurance-cross-sell-prediction\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/health-insurance-cross-sell-prediction\/test.csv')","3aa7cb73":"train_data","d2043672":"test_data","35e13b35":"id=test_data.id","34b373b5":"print('Training Data:\\n')\nprint(train_data.isnull().sum())\nprint('')\n","87015b1b":"print('test data:\\n')\nprint(test_data.isnull().sum())","8d73f638":"train_data['Region_Code'].unique()\n","8b341ebf":"train_data.dtypes","a159d71d":"from sklearn.preprocessing import LabelBinarizer,LabelEncoder\nlb = LabelBinarizer()\nle = LabelEncoder()\ntrain_data['Gender'] = lb.fit_transform(train_data['Gender'])\ntest_data['Gender'] = lb.fit_transform(test_data['Gender'])\ntrain_data['Vehicle_Damage'] = lb.fit_transform(train_data['Vehicle_Damage'])\ntest_data['Vehicle_Damage'] = lb.fit_transform(test_data['Vehicle_Damage'])\n\n","19aa7e69":"train_data.drop(['id'],1,inplace=True)","fbdce5b7":"test_data.drop(['id','Vehicle_Age'],1,inplace=True)","2dbcdb0b":"test_data","47574480":"plt.figure(figsize = (25,8))\nsb.heatmap(train_data.corr(),annot=True)","bfafdba8":"plt.figure(figsize = (25,8))\nsb.countplot(y = train_data['Response'])","01a0dfa5":"plt.figure(figsize = (25,9))\nplt.hist(train_data['Gender'],color='steelblue',edgecolor='black')\nplt.xticks([0,1],labels = ['Female','Male'])\nplt.xlabel('Gender')\nplt.ylabel('Number of People')\nplt.title('Age Distribution')","1dac4a80":"plt.figure(figsize = (25,8))\nplt.hist(x = [train_data[train_data['Response']==1]['Gender'],train_data[train_data['Response']==0]['Gender']],color=['skyblue','slategrey'],stacked=True,edgecolor='black',label = ['yes','no'])\nplt.xticks(ticks = [0,1],labels = ['Female','Male'])\nplt.xlabel('Gender')\nplt.ylabel('Count')\nplt.title('Gender Distribution of People having a positive and a Negetive Response')\nplt.legend()","ad01d7b9":"plt.figure(figsize = (25,8))\nsb.regplot(train_data['Gender'],train_data['Response'],color='red')","7c3384d7":"plt.figure(figsize = (25,9))\nplt.hist(train_data['Age'],color='darkmagenta',edgecolor='violet')\nplt.xticks([20,25,30,35,40,45,50,55,60,65,70,75,80,85,90])\nplt.xlabel('Age')\nplt.ylabel('Number of Peoplw')\nplt.title('Age Distribution')","ce2602ee":"plt.figure(figsize = (25,10))\nplt.hist(x = [train_data[train_data['Response']==1]['Age'],train_data[train_data['Response']==0]['Age']],color=['orange','orangered'],stacked=True,edgecolor='black',label = ['yes','no'])\nplt.xticks([20,27,33,40,46,53,55,60,65,73,79,80,85])\nplt.yticks([4500,8000,20000,40000,50000,60000,80000,100000,120000,130000])\nplt.xlabel('Age')\nplt.ylabel('Count')\nplt.title('Age Distribution of People having a positive and a Negetive Response')\nplt.legend()","eb2d43f7":"plt.figure(figsize = (28,9))\nsb.regplot(train_data['Response'],train_data['Age'],color= 'indigo')","f8cdb2c2":"plt.figure(figsize = (25,9))\nplt.hist(train_data['Driving_License'],color='forestgreen',edgecolor='black')\nplt.xticks([0,1],labels = ['No','Yes'])\nplt.xlabel('License')\nplt.ylabel('Number of People')\nplt.title('Driving License Distribution')","6ac6b888":"plt.figure(figsize = (25,8))\nplt.hist(x = [train_data[train_data['Response']==1]['Driving_License'],train_data[train_data['Response']==0]['Driving_License']],color=['crimson','gold'],stacked=True,edgecolor='black',label = ['yes','no'])\nplt.xticks(ticks = [0,1],labels = ['No','Yes'])\nplt.xlabel('License')\nplt.ylabel('Count')\nplt.legend()\nplt.title('License Distribution of People having a positive and a Negetive Response')","d1f04250":"plt.figure(figsize = (25,9))\nplt.hist(train_data['Previously_Insured'],color='deeppink',edgecolor='black')\nplt.xticks([0,1],labels = ['No','Yes'])\nplt.xlabel('Previously insured')\nplt.ylabel('Number of People')\nplt.title('Previously Insurance Distribution')","169bf0a2":"plt.figure(figsize = (25,8))\nplt.hist(x = [train_data[train_data['Response']==1]['Previously_Insured'],train_data[train_data['Response']==0]['Previously_Insured']],color=['blueviolet','navy'],stacked=True,edgecolor='black',label = ['yes','no'])\nplt.xticks(ticks = [0,1],labels = ['No','Yes'])\nplt.xlabel('Previously Insured')\nplt.ylabel('Count')\nplt.yticks([0,25000,46710,75000,100000,125000,175000,20000])\nplt.title('Distribution of people who had and had not previously insured')\nplt.legend()","20ce18ac":"plt.figure(figsize = (25,8))\nsb.regplot(train_data['Response'],train_data['Previously_Insured'],color = 'lightcoral')","3f18e193":"plt.figure(figsize = (25,9))\nplt.hist(train_data['Vehicle_Damage'],color='lavenderblush',edgecolor='orchid')\nplt.xticks([0,1],labels = ['No','Yes'])\nplt.xlabel('Vehicle Damage')\nplt.ylabel('Number of People')\nplt.title('Vehicle Damage Distribution')\nplt.tight_layout()","7025a9c7":"plt.figure(figsize = (25,8))\nplt.hist(x = [train_data[train_data['Response']==1]['Vehicle_Damage'],train_data[train_data['Response']==0]['Vehicle_Damage']],color=['aliceblue','azure'],stacked=True,edgecolor='royalblue',label = ['yes','no'])\nplt.xticks(ticks = [0,1],labels = ['No','Yes'])\nplt.xlabel('Vehicle Damage')\nplt.ylabel('Count')\nplt.title('Distribution of people with vehicle damage')\nplt.legend()","ca6e64d7":"plt.figure(figsize = (25,8))\nsb.regplot(train_data['Response'],train_data['Vehicle_Damage'],color = 'greenyellow')","0617c73a":"plt.figure(figsize = (25,8))\nsb.regplot(train_data['Vehicle_Damage'],train_data['Previously_Insured'],color='skyblue')","13ba0faa":"plt.figure(figsize = (25,9))\nplt.hist(train_data['Annual_Premium'],color='whitesmoke',edgecolor='gold')\nplt.xticks([2630. , 56383.5, 110137. , 163890.5, 217644. , 271397.5,325151. , 378904.5, 432658. , 486411.5, 540165.])\nplt.yticks([20300,50000,100000,200000,300000,360000])\nplt.xlabel('Premium')\nplt.ylabel('count')\nplt.title('Premium Distribution')","9f82788e":"plt.figure(figsize = (25,10))\nplt.hist(x = [train_data[train_data['Response']==1]['Annual_Premium'],train_data[train_data['Response']==0]['Annual_Premium']],color=['lightblue','slategrey'],stacked=True,edgecolor='black',label = ['yes','no'])\nplt.xlabel('Annual Premium')\nplt.ylabel('Count')\nplt.xticks([2630. , 56383.5, 110137. , 163890.5, 217644. , 271397.5,325151. , 378904.5, 432658. , 486411.5, 540165.])\nplt.yticks([20300,50000,100000,200000,300000,360000])\nplt.title('Distribution of People having a positive and a Negetive Response wrt to Annual Premium')\nplt.legend()","a20a2b18":"plt.figure(figsize = (25,9))\nplt.hist(train_data['Vehicle_Age'],color='palegreen',edgecolor='black')\nplt.xlabel('Vehicle Age')\nplt.ylabel('Count')\nplt.title('Vehicle Age Distribution')","ccc102cd":"plt.figure(figsize = (25,10))\nplt.hist(x = [train_data[train_data['Response']==1]['Vehicle_Age'],train_data[train_data['Response']==0]['Vehicle_Age']],color=['violet','indigo'],stacked=True,edgecolor='black',label = ['yes','no'])\nplt.xlabel('Vehicle Age')\nplt.ylabel('Count')\nplt.title('Distribution of People having a positive and a Negetive Response wrt Vehicle Age')\nplt.legend()","01640e54":"plt.figure(figsize = (25,9))\nplt.hist(train_data['Policy_Sales_Channel'],color='orange',edgecolor='black')\nplt.xlabel('Policy Sales Channel')\nplt.ylabel('Count')\nplt.xticks([ 1. ,  17.2,  33.4,  49.6,  65.8,  82. ,  98.2, 114.4, 130.6,\n        146.8, 163. ])\nplt.title('Policy Sales Channel Distribution')","bf2c6976":"plt.figure(figsize = (25,10))\nplt.hist(x = [train_data[train_data['Response']==1]['Policy_Sales_Channel'],train_data[train_data['Response']==0]['Policy_Sales_Channel']],color=['lightcyan','skyblue'],stacked=True,edgecolor='black')\nplt.xlabel('Vehicle Age')\nplt.ylabel('Count')\nplt.title('Distribution of People having a positive and a Negetive Response wrt Vehicle Age')\nplt.legend()","9d578e26":"plt.figure(figsize = (25,8))\nsb.regplot(train_data['Policy_Sales_Channel'],train_data['Response'],color = 'darkcyan')","ab724e08":"plt.figure(figsize = (25,9))\nplt.hist(train_data['Vintage'],color='mediumpurple',edgecolor='black')\nplt.xlabel('Vintage')\nplt.ylabel('Count')\nplt.title('Vintage Distribution')","25d3a629":"plt.figure(figsize = (25,10))\nplt.hist(x = [train_data[train_data['Response']==1]['Vintage'],train_data[train_data['Response']==0]['Vintage']],color=['lightcyan','mediumpurple'],stacked=True,edgecolor='black')\nplt.xlabel('Vintage')\nplt.ylabel('Count')\nplt.title('Distribution of People having a positive and a Negetive Response wrt Vintage')\nplt.legend()","ae3a55f5":"plt.figure(figsize = (25,8))\nsb.regplot(train_data['Response'],train_data['Vintage'],color = 'deeppink')","0f806545":"from sklearn.model_selection import train_test_split,GridSearchCV,cross_val_score,cross_val_predict\nfrom sklearn.metrics import confusion_matrix,precision_score,recall_score,f1_score,accuracy_score\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import BaggingClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB","e821c333":"X = train_data[['Gender', 'Age', 'Driving_License', 'Region_Code', 'Previously_Insured', 'Vehicle_Damage', 'Annual_Premium','Policy_Sales_Channel', 'Vintage', ]]\ny = train_data['Response']\n","c33f44bd":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25)","f5e5c2f5":"clf1 = LogisticRegression(C=0.01,max_iter = 1000)\nclf1.fit(X_train,y_train)","80d2b3bd":"y_train_pred = cross_val_predict(clf1,X_train,y_train,cv=4)\nprint(\"Confusion Matrix: \\n\",confusion_matrix(y_train,y_train_pred))\nprint('Precision Score:',precision_score(y_train,y_train_pred))\nprint(\"Recall Score:\",recall_score(y_train,y_train_pred))\nprint(\"Accuracy Score:\",accuracy_score(y_train,y_train_pred))\nprint(\"Cross Val Score Insample\",cross_val_score(clf1,X_train,y_train,cv=4,scoring='accuracy').mean())\nprint(\"Cross Val Score Outsample\",cross_val_score(clf1,X_test,y_test,cv=4,scoring='accuracy').mean())","948dfbc4":"clf2 = GaussianNB()\nclf2.fit(X_train,y_train)","6ead6b35":"y_train_pred = cross_val_predict(clf2,X_train,y_train,cv=4)\nprint(\"Confusion Matrix: \\n\",confusion_matrix(y_train,y_train_pred))\nprint('Precision Score:',precision_score(y_train,y_train_pred))\nprint(\"Recall Score:\",recall_score(y_train,y_train_pred))\nprint(\"Accuracy Score:\",accuracy_score(y_train,y_train_pred))\nprint(\"Cross Val Score Insample\",cross_val_score(clf2,X_train,y_train,cv=4,scoring='accuracy').mean())\nprint(\"Cross Val Score Outsample\",cross_val_score(clf2,X_test,y_test,cv=4,scoring='accuracy').mean())","96aef624":"param_grid = {'max_depth':np.arange(1,10),'min_samples_leaf':np.arange(1,8)}\ngrid = GridSearchCV(DecisionTreeClassifier(),param_grid,cv=5)\ngrid.fit(X,y)","b243867b":"grid.best_params_","9b1657db":"clf3 = grid.best_estimator_","6cbbcdce":"clf3.fit(X_train,y_train)","24bed443":"y_train_pred = cross_val_predict(clf3,X_train,y_train,cv=4)\nprint(\"Confusion Matrix: \\n\",confusion_matrix(y_train,y_train_pred))\nprint('Precision Score:',precision_score(y_train,y_train_pred))\nprint(\"Recall Score:\",recall_score(y_train,y_train_pred))\nprint(\"Accuracy Score:\",accuracy_score(y_train,y_train_pred))\nprint(\"Cross Val Score Insample\",cross_val_score(clf3,X_train,y_train,cv=4,scoring='accuracy').mean())\nprint(\"Cross Val Score Outsample\",cross_val_score(clf3,X_test,y_test,cv=4,scoring='accuracy').mean())","acd8116a":"clf5 = RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n                       criterion='gini', max_depth=3, max_features='auto',\n                       max_leaf_nodes=2, max_samples=None,\n                       min_impurity_decrease=0.0, min_impurity_split=None,\n                       min_samples_leaf=2, min_samples_split=15,\n                       min_weight_fraction_leaf=0.0, n_estimators=10,\n                       n_jobs=-1, random_state=1, verbose=0,\n                       warm_start=False)\nclf5.fit(X_train,y_train)","1e334405":"y_train_pred = cross_val_predict(clf5,X_train,y_train,cv=4)\nprint(\"Confusion Matrix: \\n\",confusion_matrix(y_train,y_train_pred))\nprint('Precision Score:',precision_score(y_train,y_train_pred))\nprint(\"Recall Score:\",recall_score(y_train,y_train_pred))\nprint(\"Accuracy Score:\",accuracy_score(y_train,y_train_pred))\nprint(\"Cross Val Score Insample\",cross_val_score(clf5,X_train,y_train,cv=4,scoring='accuracy').mean())\nprint(\"Cross Val Score Outsample\",cross_val_score(clf5,X_test,y_test,cv=4,scoring='accuracy').mean())","ac05de1f":"clf6 = BaggingClassifier(DecisionTreeClassifier(max_depth=1,min_samples_leaf=1),bootstrap=True)\nclf6.fit(X_train,y_train)","4923b01c":"y_train_pred = cross_val_predict(clf6,X_train,y_train,cv=4)\nprint(\"Confusion Matrix: \\n\",confusion_matrix(y_train,y_train_pred))\nprint('Precision Score:',precision_score(y_train,y_train_pred))\nprint(\"Recall Score:\",recall_score(y_train,y_train_pred))\nprint(\"Accuracy Score:\",accuracy_score(y_train,y_train_pred))\nprint(\"Cross Val Score Insample\",cross_val_score(clf6,X_train,y_train,cv=4,scoring='accuracy').mean())\nprint(\"Cross Val Score Outsample\",cross_val_score(clf6,X_test,y_test,cv=4,scoring='accuracy').mean())","aab77381":"clf7 = AdaBoostClassifier(DecisionTreeClassifier(max_depth=1,min_samples_leaf=1))\nclf7.fit(X_train,y_train)","97ee0fc8":"y_train_pred = cross_val_predict(clf7,X_train,y_train,cv=4)\nprint(\"Confusion Matrix: \\n\",confusion_matrix(y_train,y_train_pred))\nprint('Precision Score:',precision_score(y_train,y_train_pred))\nprint(\"Recall Score:\",recall_score(y_train,y_train_pred))\nprint(\"Accuracy Score:\",accuracy_score(y_train,y_train_pred))\nprint(\"Cross Val Score Insample\",cross_val_score(clf7,X_train,y_train,cv=4,scoring='accuracy').mean())\nprint(\"Cross Val Score Outsample\",cross_val_score(clf7,X_test,y_test,cv=4,scoring='accuracy').mean())","3981c789":"classifier = AdaBoostClassifier(DecisionTreeClassifier(max_depth=1,min_samples_leaf=1))\nclassifier.fit(X,y)","e2f59f31":"classifier.predict(test_data)","05661945":"* 13% people paying annual premium between 2630 and 56384 have a response 1\n* 10% people paying annual premium between 56384 and 110137 have a response 1\n","448f4ae9":"**Bagging Classifier**","619e907a":"* 94% Annual Premium is between 2630 and 56384\n* 5.3% Annual Premium is between 56384 and 110147\n* 1 % pay higher annual p","f01b53b6":"**Chances of response 1 is higher when vehicle is relatively new and gets lower as age approaches 1st year but increases as vehicle age increases**","b1f8153e":"**DecisionTreeClassifier**","8c8e0a67":"**Does having a lesser or more premium anually have an effect on positive response for insurance?**","4ef1f1a6":"**only 1.3% people that hold a license had a response 1 thus it can be said that holding a license doesnt affect a persons response to insurance**","9f881328":"**The number of people with a positve response are equal across the vintage distribution**","46c32cb4":"# **Looking For Null Values**","2913a28d":"* Less than 1% people who do not have vehicle damage have a response 1\n* 23% people approximately from the sample with response 1 had vehicle damage","9d72f0d4":"**Do the people with Vehicle damage tend to have a positive response?**","dce42a4c":"* 13% Females had a response 1\n* 12% Males had a response 1","12225d7a":"# **Model Deployement**","6f8d57ec":"**Naive Bayes**","0f206d2f":"**Gender Distribution**","9ca80b27":"* All the people who have responded 1 are those who have not been previously insured","588582b0":"**RandomForest**","2419aa87":"The Regression Plot shows that the regression line is slightly titled that is because the count of male's is significantly higher than that of females thus **having a positive response is not gender dependent**","47e67849":"**As Policy Sales Channel has increases response has decreased**","880109cb":"# **Exploratory Data Analysis**","633ecbea":"**Does a person holding a driving license have a positive response?**","1b093ad0":"**how vintage affects the customers response?**\n\n**vintage:- Number of Days, Customer has been associated with the company**","277c54e9":"**How does vehicles age affect response?**","107c5d57":"**Does having been previously insured have an effect on response?**","24b63ce3":"**Respone tends to be 1 when vehicle damage is present**","623e930c":"**How does Policy Sales Channel affect response?**\n\n\n**Policy Sales Channel:-Anonymized Code for the channel of outreaching to the customer ie. Different Agents, Over Mail, Over Phone, In Person, etc**.","31602551":"* Approx 325000 people's response was 0\n* approx 49000 people's response was 1","77d01e99":"overfitting","374fcfe8":"**This shows that the people who have been previously insured have had a 0 response where as the people who had response 1 were those who were not previously insured**","d7bcbddb":"# **Model Selection**","9f038747":"**Age Distribution of people and distribution of people of age whether they say yes or no!**","4768c9b5":"**No NaN Values**","ecc26cc5":"**Age has a average corelation co-efficient with response and response tends to increase with age**","c8f2464d":"**Clear Case of overfitting**","6f053937":"* Age and Previously Damaged have a positive corelation with with type of response\n* Previously insured and Policy Sales Channel have a negetive corelation with type of response\n","d4fb5e20":"* 45% people have been previously insured\n* 55% people have not been insured previously insured ","f0325876":"**Vintage does not affect one's response this is clear from the regression plot**","19181f47":"**Logistic Regression**","037dbf96":"almost 99% people hold a driving license","221187e5":"* 3% people between age 20 and 27 had a response 1\n* 8% people between age 27 and 33 had a response 1\n* 26% people between age 33 and 40 had a response 1\n* 25% people between age 40 and 46 had a response 1\n* 24% people between age 46 and 53 had a response 1\n* 18% people between age 53 and 60 had a response 1\n* 20% people between age 60 and 65 had a response 1\n* 15% people between age 65 and 73 had a repsonse 1\n* 5% people between age 73 and 79 had a  repsonse 1\n* 1% people between age 79 and 85 had a repsonse  1\n\n\n","94bbd3c2":"# **Data PreProcessing**"}}