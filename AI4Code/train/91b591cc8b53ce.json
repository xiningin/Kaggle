{"cell_type":{"1b99cf25":"code","10f02394":"code","1d7dc856":"code","fff5d84c":"code","893f4794":"code","df39c801":"code","4b1d82a0":"code","ec796755":"code","025d543f":"code","fd81daae":"code","b67e89c9":"code","6a846f28":"code","23f2398d":"code","786e38f9":"code","85b9e2ac":"code","3c7eab67":"code","135e29c6":"code","060e93cf":"code","0cb7e985":"code","4317a16c":"code","ab9160ac":"code","6e00cd36":"code","8a511aa7":"code","2275cb2f":"code","18e2c985":"code","2e9716ab":"code","e0386db8":"code","a3ab9c6d":"code","1187896a":"code","7a1cd564":"code","235afdd0":"code","72cace13":"code","1b57fe49":"code","e86cb3eb":"code","9b2dcbea":"code","1f975800":"code","1626dc47":"code","f1fcbb35":"code","46af6465":"code","3d1b71c0":"code","26e49a3b":"code","f1d277eb":"code","ff893ce4":"code","f2ac82d6":"code","9cb254d1":"code","c9fc66de":"code","74b2c95d":"code","abddd976":"code","01a01d89":"code","48a644a4":"code","eda02477":"code","d0dc5ddf":"code","fbd196bf":"code","7083dbf4":"code","492ce1b7":"markdown","d75c89fb":"markdown","17198db3":"markdown","9ef29d62":"markdown","dc1799e8":"markdown","e219cd3e":"markdown","4727c642":"markdown","ede77122":"markdown","8c578eb1":"markdown","01b16f9d":"markdown","9658e999":"markdown","ff961ff5":"markdown","d308e677":"markdown","477e4876":"markdown","94892c50":"markdown","0bf67c44":"markdown","906f2596":"markdown","35fa9898":"markdown","372d66f4":"markdown","eac1b2df":"markdown","a4b0b585":"markdown","ce570103":"markdown","e9f0884e":"markdown","7eb7c24e":"markdown","0720505f":"markdown","66c14dfa":"markdown","c625a0a7":"markdown","2b7a91b4":"markdown","ba9ce4ff":"markdown","fd60b774":"markdown"},"source":{"1b99cf25":"print(\"Hello World\")","10f02394":"x = 1","1d7dc856":"x = 17\ntype(x)","fff5d84c":"pi = 3.14\ntype(pi)","893f4794":"s = 'Bonjour'\ntype(s)","df39c801":"s[0] # Acc\u00e8s au caract\u00e8re d'indice 0.","4b1d82a0":"s[0:3] # Recup\u00e9ration des caract\u00e8res de position entre les indices 0 et 3 (3 exclu)","ec796755":"s[:4] # Recup\u00e9ration des quatre premiers caract\u00e8res","025d543f":"s[-1] # Dernier caract\u00e8re de la cha\u00eene s","fd81daae":"s[::-1] # Inverser une cha\u00eene","b67e89c9":"print('La taille de s est : ', len(s))","6a846f28":"t = 'Le cours sur Python'\nt.title()","23f2398d":"s = 'Python est un langage de programmation.'\ns.replace('Python', 'Java')","786e38f9":"s.split()","85b9e2ac":"b = True\ntype(b)","3c7eab67":"a = True\nnot(a)","135e29c6":"s = None\nprint(s)","060e93cf":"jours = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi']","0cb7e985":"jours.append('Dimanche') # Ajouter un \u00e9l\u00e9ment \u00e0 la fin de la liste\njours","4317a16c":"a = [1, 2, 10]\na.insert(2, 5) # Ins\u00e9rer 5 \u00e0 la position 2\na","ab9160ac":"a = [1, 2, 'Python', 3, 4]\ndel a[2] # Supprimer l'\u00e9l\u00e9ment d'indice 2\nprint(a)","6e00cd36":"a = [1, 2, 'Python', 3, 4]\na.remove(2) # Supprimer l'\u00e9l\u00e9ment d'indice 2\nprint(a)","8a511aa7":"a = [1, 2, 45, 10, 5]\na.sort() # Trier une liste\nprint(a)","2275cb2f":"a = [1, 2, 3]\na.reverse() # Inverser une liste\nprint(a)","18e2c985":"a = [1, 2, 3, 2, 2]\na.count(2) # Compter le nombre d'\u00e9l\u00e9ments dans une liste","2e9716ab":"t = (15, 2, 20)\ntype(t)","e0386db8":"a, b = 1, 10","a3ab9c6d":"a = (2, 5)\nu, v = a","1187896a":"etudiants = {'P30112': 'Amadou Ba', 'P30400':'Fallou Ka'}\netudiants['P30112']","7a1cd564":"etudiants.items()","235afdd0":"for cle, valeur in etudiants.items():\n    print(cle, ' : ', valeur)","72cace13":"s = {1, 2, 2, 3}\nprint(s)","1b57fe49":"l = [1, 2, 2, 4, 5, 14, 21, 1]\n\nb = []\nfor x in l:\n    if x > 5:\n        b.append(x)\nprint(b)","e86cb3eb":"l = [1, 2, 2, 4, 5, 14, 21, 1]\nb = [x for x in l if x > 5] # Avec les compr\u00e9hensions de list\nprint(b)","9b2dcbea":"for x in range(10):\n    print(x**2)","1f975800":"i = 0\nimpairs = []\nwhile i < 20:\n    if i%2 == 1:\n        impairs.append(i)\n    i = i + 1\nprint(impairs)","1626dc47":"age = 14\n\nif age > 16:\n    print(\"Vous avez plus de 16 ans.\")\nelif age < 0:\n    print(\"Tu te moque de moi?\")\nelse:\n    print(\"Tu es encore jeune.\")","f1fcbb35":"# code hors fonction\ndef nom_fonction():\n    pass\n    # code de la fonction\n# code hors fonction","46af6465":"def est_premier(n):\n    for d in range(2, n\/\/2+1):\n        if n%d==0:\n            return False\n    return True","3d1b71c0":"x = 25\ny = 23\nprint(x, \"est un nombre premier? \", est_premier(x))\nprint(y, \"est un nombre premier? \", est_premier(y))","26e49a3b":"g = lambda x, y: x + y","f1d277eb":"g(15, 5)","ff893ce4":"def div(a, b):\n    return a\/b\n\nprint(div(5,2))\n#print(div(5,0))","f2ac82d6":"def div(a, b):\n    try:\n        return a\/b\n    except ZeroDivisionError:\n        print(\"Attention, division par 0\")\n\nprint(div(5,2))\nprint(div(5,0))\n#print(div(5,'0'))","9cb254d1":"def div(a, b):\n    try:\n        return a\/b\n    except ZeroDivisionError:\n        print(\"Attention, division par 0\")\n    except TypeError:\n        print(\"Il faut des int!\")\n\nprint(div(5,2))\nprint(div(5,0))\nprint(div(5,'0'))","c9fc66de":"class MaClass:\n    pass","74b2c95d":"c = MaClass()\nprint(type(c))","abddd976":"c = MaClass()\nprint(type(c))\nprint(isinstance(c, MaClass))","01a01d89":"class Etudiant:\n    \n    def __init__(self, prenom, nom):\n        self.prenom = prenom\n        self.nom = nom\n        \n    def setAge(self, age):\n        self.age = age\n    \n    def getAge(self):\n        return self.age","48a644a4":"e1 = Etudiant(\"Moussa\", \"Gueye\")\nprint(e1.prenom, ' ', e1.nom)\ne1.setAge(19)\nprint(e1.age)\nprint(e1.getAge())","eda02477":"\"\"\"\nexemple de module\n\"\"\"\n\nvariable_1 = 125\nvariable_2 = [12, 15, 0]\n\ndef somme(a, b):\n    return a + b\n\nclass Produit:\n    \"\"\"Class Produit\"\"\"\n    \n    def __str__(self):\n        return \"Class Produit\"","d0dc5ddf":"!pip install graphviz","fbd196bf":"from graphviz import Digraph\n\ng = Digraph('G', filename='hello.gv')\n\ng.edge('Hello', 'World')\n\ng","7083dbf4":"from graphviz import Digraph, nohtml\n\ng = Digraph('g', filename='btree.gv',\n            node_attr={'shape': 'record', 'height': '.1'})\n\ng.node('node0', nohtml('<f0> |<f1> G|<f2>'))\ng.node('node1', nohtml('<f0> |<f1> E|<f2>'))\ng.node('node2', nohtml('<f0> |<f1> B|<f2>'))\ng.node('node3', nohtml('<f0> |<f1> F|<f2>'))\ng.node('node4', nohtml('<f0> |<f1> R|<f2>'))\ng.node('node5', nohtml('<f0> |<f1> H|<f2>'))\ng.node('node6', nohtml('<f0> |<f1> Y|<f2>'))\ng.node('node7', nohtml('<f0> |<f1> A|<f2>'))\ng.node('node8', nohtml('<f0> |<f1> C|<f2>'))\n\ng.edge('node0:f2', 'node4:f1')\ng.edge('node0:f0', 'node1:f1')\ng.edge('node1:f0', 'node2:f1')\ng.edge('node1:f2', 'node3:f1')\ng.edge('node2:f2', 'node8:f1')\ng.edge('node2:f0', 'node7:f1')\ng.edge('node4:f2', 'node6:f1')\ng.edge('node4:f0', 'node5:f1')\n\ng","492ce1b7":"### **3.2.6 Le type list (liste)**\n \nUne liste est une structure de donn\u00e9es qui contient une suite de valeurs. Les valeurs peuvent avoir de types diff\u00e9rents.","d75c89fb":"## **4.2 Boucle while**","17198db3":"# **3. Les variables et les types**\n\n## **3.1 Les variables**\n\nEn Python, la d\u00e9claration d'une variable et son initialisation se font en m\u00eame temps :","9ef29d62":"\n| Op\u00e9rateur     | Signification           | Exemple                                            |\n|--------------|----------------|--------------------------------------------------------|\n| ``<< >>``    | D\u00e9calage \u00e0 gauche, \u00e0 droite       | ``8 << 1``                                |\n| ``\\|``    | Op\u00e9rateur logique ou bit \u00e0 bit    | ``8 \\| 1``                          |\n| ``&``    | Op\u00e9rateur logique et bit \u00e0 bit | ``11 & 2``                            |\n| ``+ -``    | Addition, soustraction  | ``5 + 3``                            |\n| ``+= -=``   | Addition ou soustraction puis affectation | ``a += 3`` |\n| ``* \/``    | Multiplication, division        | ``3 * 4``    |\n| ``\/\/``    | Division enti\u00e8re        | ``5 \/\/ 2``     |\n| ``%``   | Reste d\u2019une division enti\u00e8re (modulo) | ``5 % 2``                     |\n| ``*= \/=``       | Multiplication ou division puis affectation   | ``a *= 3``    |\n| ``**``       | Puissance       | ``2 ** 3``                                  |\n\n<span style=\"display:none\"><\/span>","dc1799e8":"### **3.2.8 Le type dict (dictionnaire)**\n \nLes dictionnaires sont des collections de donn\u00e9es sous forme de cl\u00e9\/valeur.","e219cd3e":"# **7. Les classes**\n\nUne classe est un ensemble de variables et de fonctions qui d\u00e9finissent un objet.","4727c642":"### **3.2.10 Les compr\u00e9hension de listes, de dictionnaires et de sets**\n","ede77122":"### **3.2.7 Le type tuple**\n \nLes tuples sont des collections ordonn\u00e9es de plusieurs \u00e9l\u00e9ments. Les tuples ressemblent aux listes mais\non ne peut pas les modifier une fois qu\u2019ils ont \u00e9t\u00e9 cr\u00e9\u00e9s.","8c578eb1":"# **8. Les modules**\n\nEn Python, un module est un fichier contenant un ensemble de **variables**, de **fonctions** et de **classes** qui peuvent \u00eatre utilis\u00e9es par un autre programme.","01b16f9d":"On affecte \u00e0 la variable x la valeur 1. Une variable est caract\u00e9ris\u00e9e par :\n* **un identificateur** : il peut contenir des lettres, des chiffres, des blancs soulign\u00e9s mais il ne peut commencer par un chiffre. Python est sensible \u00e0 la casse.\n* **un type** : c'est la nature des donn\u00e9es. \n\nLe type d\u2019une variable peut donc changer si on change sa valeur.","9658e999":"### **3.2.9 Le type set (les ensembles)**\n \nLes ensembles repr\u00e9sentent un autre type d\u2019objet s\u00e9quentiel. Ils ne sont pas modifiables et ne peuvent\ncontenir qu\u2019une copie maximum de chaque \u00e9l\u00e9ment.","ff961ff5":"## **3.2 Les types**\n\nLa fonction *type()* permet de conna\u00eetre le type de la valeur d'une variable. \n\n","d308e677":"**Python** permet la cr\u00e9ation de fonctions anonymes appel\u00e9es fonctions lambda.","477e4876":"# **2. Hello World**\n\nNous allons commencer par le c\u00e9l\u00e9bre **Hello World**.","94892c50":"# **10. Exercices**\n\n## **10.1 Exercice 1**\n\n*  \u00c9crire  un  programme  en  langage  Python  qui  demande  \u00e0  l\u2019utilisateur  de  saisir  son  nom  et  de  lui afficher son nom avec un message de bienvenue !\n*  \u00c9crire un programme qui permet d\u2019afficher le carr\u00e9 d\u2019un entier donn\u00e9 par l\u2019utilisateur\n\nNB. La fonction input() est une fonction de la biblioth\u00e8que standard qui permet de r\u00e9cup\u00e9rer ce que tape l'utilisateur.\n\n\n## **10.2 Exercice 2**\n\n*  \u00c9crire un programme qui permet d\u2019afficher le maximum entre deux entiers donn\u00e9s par l\u2019utilisateur\n*  \u00c9crire un programme qui affiche les diviseurs d\u2019un entier donn\u00e9 par l\u2019utilisateur\n*  \u00c9crire un programme qui affiche les nombres paires inf\u00e9rieurs \u00e0 n(donn\u00e9 par l\u2019utilisateur)\n*  \u00c9crire un programme en Python qui demande \u00e0 l\u2019utilisateur de saisir un nombre entier n et de lui afficher la table de multiplication de ce nombre.\n\n## **10.3 Exercice 3**\n\n\u00c9crire  un  programme  qui  permet  de  trouver  les  nombres  qui  sont  divisibles  par  7,  multiple  de  3  et multiple de 5, entre deux bornes choisit par l\u2019utilisateur (tous deux inclus). L\u2019utilisateur doit saisir deux nombres positifs et le deuxi\u00e8me nombre doit \u00eatre sup\u00e9rieur au premier. Dans le m\u00eame programme :\n   *  Afficher le nombre des nombres trouv\u00e9s\n   *  Afficher la somme des nombres trouv\u00e9s\n   *  Afficher la liste des nombres trouv\u00e9s\n\n## **10.4 Exercice 4**\n\nUn nombre parfait est un nombre naturel n non nul qui est \u00e9gal \u00e0 la somme de ses diviseurs stricts (n exclus).\nExemple : 6 = 1 + 2 + 3\n*  \u00c9crire une fonction bool\u00e9enne qui retourne vrai si un entier n pass\u00e9 en param\u00e8tre est un nombre parfait, faux sinon.\n*  \u00c9crire le programme principal permettant d\u2019afficher la liste des nombres parfaits compris en 1 et 10000. On utilisera le r\u00e9sultat renvoy\u00e9 par la fonction pr\u00e9c\u00e9dente.\n\n## **10.5 Excercie 5**\n\n* \u00c9crire une fonction qui calcule la somme des \u00e9l\u00e9ments d\u2019une liste de nombres (entiers ou flottants).\n* \u00c9crire une fonction qui calcule la moyenne des \u00e9l\u00e9ments d\u2019une liste de nombres.\n* \u00c9crire une fonction qui calcule le maximum des \u00e9l\u00e9ments d\u2019une liste (non vide).\n* Modifier votre fonction pour qu\u2019elle renvoie l\u2019indice du maximum.\n* \u00c9crire une fonction qui teste si tous les \u00e9l\u00e9ments d\u2019une liste sont positifs (ou nuls).\n* \u00c9crire une fonction qui teste si une liste est rang\u00e9e en ordre croissant (au sens large)\n\n## **10.6 Exercice 6**\n\nD\u00e9finir les listes suivantes par compr\u00e9hension :\n* les carr\u00e9s de tous les entiers compris entre 1 et 100 (inclus) ;\n* les couples (x, y) d\u2019entiers positifs tels que x + y = 100 ;\n* les couples d\u2019entiers de la forme (x, y) tels que x \u2264 y et les deux entiers x et y sont tous deux\ninf\u00e9rieurs \u00e0 10 (indication : il est plus facile de les ranger par y croissants) ;\n* les m\u00eames qu\u2019\u00e0 la question pr\u00e9c\u00e9dente, mais rang\u00e9s par x croissants ;\n* les entiers compris entre 1 et 1000 qui ne sont multiples ni de 3 ni de 5\n\n## **10.7 Exercice 7**\n\nOn repr\u00e9sente un brin d\u2019ADN par une cha\u00eene de caract\u00e8res qui peut contenir quatre caract\u00e8res diff\u00e9rents :\n\u2019A\u2019 (Ad\u00e9nine), \u2019C\u2019 (Cytosine), \u2019G\u2019 (Guanine) et \u2019T\u2019 (Thymine).\n* \u00c9crire une fonction estADN qui prend en argument une cha\u00eene de caract\u00e8res et renvoie True si cette\ncha\u00eene correspond \u00e0 un brin d\u2019ADN et qui renvoie False sinon.\nPar exemple, estADN(\"TTGAC\") et estADN(\"GCAATAG\") renvoient True\nmais estADN(\"AMOG\") et estADN(\"CaTg\") renvoient False.\n* Ecrire une fonction masseMolaire qui calcule la masse molaire d\u2019une s\u00e9quence ADN pass\u00e9e en argument. Chaque lettre a une masse donn\u00e9e : \u2019A\u2019 (135 g\/mol) ; \u2019T\u2019 (126 g\/mol) ; \u2019G\u2019 (151 g\/mol) ;\n\u2019C\u2019 ( 111 g\/mol). La masse totale est la somme des masses des lettres de la s\u00e9quence.\nPar exemple, masseMolaire(\"AGATC\") renvoie (135 + 151 + 135 + 126 + 111) g\/mol,\nc\u2019est-\u00e0-dire 658 g\/mol.\n* Chaque base poss\u00e8de une base compl\u00e9mentaire avec laquelle elle peut s\u2019associer : \"A\" et \"T\" sont\ncompl\u00e9mentaires, et \"C\" et \"G\" sont compl\u00e9mentaires. \u00c9crire une fonction brinComp qui \u00e9tant donn\u00e9\nun brin d\u2019ADN b calcule et renvoie son brin compl\u00e9mentaire, c\u2019est \u00e0 dire le brin constitu\u00e9 des bases\ncompl\u00e9mentaires de b.\nPar exemple, brinComp(\"A\") renvoie \"T\" et brinComp(\"AAGT\") renvoie \"TTCA\".\n\n* \u00c9crire une fonction sous_sequence qui prend en argument deux cha\u00eenes de caract\u00e8res repr\u00e9sentant\ndes brins d\u2019ADN et renvoie True si le premier brin est une sous-s\u00e9quence du deuxi\u00e8me, et qui renvoie\nFalse sinon.\nPar exemple, sous_sequence(\"ATC\", \"GGTATCG\") renvoie True\net sous_sequence(\"GC\", \"AAT\") renvoie False.\n\n## **10.8 Exercice 8**\n\nD\u00e9finissez une classe CompteBancaire(), qui permette d\u2019instancier des objets tels que compte1, compte2, etc.  Le constructeur de cette classe initialisera deux attributs nomet solde, avec les valeurs par d\u00e9faut \u2019Salim\u2019et 1000. \n* Trois autres m\u00e9thodes seront d\u00e9finies : \n  * depot(self,somme) permettra d\u2019ajouter une certaine somme au solde ; \n  * retrait(self,somme) permettra de retirer une certaine somme du solde ; \n  * `__repr__`(self) permettra d\u2019afficher le nom du titulaire et le solde de son compte. \n  \nExemples d\u2019utilisation de cette classe :\n```python\n>>> compte1 = CompteBancaire('Sami', 800) \n>>> compte1.depot(350)\n>>> compte1.retrait(200)\n>>> compte1 \nLe solde du compte bancaire de Sami est de 950 Dinars.\n>>> compte2 = CompteBancaire()\n>>> compte2.depot(25) \n>>> compte2 \nLe solde du compte bancaire de Salim est de 1025 Dinars\n```","0bf67c44":"### **3.2.1 Le type int (entier)**\nIl est utilis\u00e9 pour stocker les nombres entiers positifs ou n\u00e9gatifs comme 3, 5, ...","906f2596":"### **3.2.4 Le type bool (bool\u00e9en)**\n \nLe type **bool** est utilis\u00e9 pour les bool\u00e9ens (True ou False). En Python, pour avoir l'oppos\u00e9 d'une valeur bool\u00e9enne on l'utilise ","35fa9898":"## **4.3 Condition if\/else**","372d66f4":"La m\u00e9thode *isinstance* permet de savoir si une objet est une instance d'une classe donn\u00e9e.","eac1b2df":"La liste des fonctions existantes est disponible en ligne \u00e0 l'adresse\nhttps:\/\/docs.python.org\/3\/library\/functions.html","a4b0b585":"### **3.2.5 Le type None (rien)**\n \nLe type **None** est utilis\u00e9 pour dire que la variable ne contient rien.","ce570103":"### **3.2.2 Le type float (flotant)**\nIl est utilis\u00e9 pour stocker des nombres \u00e0 virgule flottante comme 2.5, 6.733.","e9f0884e":"# **1. C'est quoi Python?**\n\nPython est un langage de programmation objet d\u00e9velopp\u00e9 par Guido van Rossum. La premi\u00e8re version\ndu langage a \u00e9t\u00e9 publi\u00e9e en 1991. Python a deux versions 2 et 3. La version 2 est actuellement obsol\u00e8te et n\u2019est plus maintenue depuis le 1er janvier 2020. Python Software Foundation est l\u2019association qui est charg\u00e9e de promouvoir et prot\u00e9ger le langage.\n    Python pr\u00e9sente de nombreux traits marquants : \n*      Langage open source \n*      Langage interpr\u00e9t\u00e9 rapide \n*      Simplicit\u00e9 du langage \n    *     Syntaxe claire et coh\u00e9rente \n    *     Indentation significative \n    *     Gestion automatique de la m\u00e9moire (garbage collector) \n    *     Typage dynamique fort : pas de d\u00e9claration\n*     Tr\u00e8s utilis\u00e9 pour les t\u00e2ches li\u00e9es \u00e0 la science des donn\u00e9es","7eb7c24e":"### **3.2.3 Le type str (cha\u00eene de caract\u00e8res)**\n\nLe type **str** est une suite de carct\u00e8res d\u00e9limit\u00e9e par des guillements simples, doubles ou triples.","0720505f":"# **TP N\u00b01 - Introduction \u00e0 Python et \u00e0 la science des donn\u00e9es**\n\nBienvenue dans cette petite s\u00e9rie de travaux pratiques pour l'initiation au Machine Learning avec Python !\n\nUn petit rappel du programme des travaux pratiques :\n- TP N\u00b01 : Introduction \u00e0 **Python**\n- TP N\u00b02 : Les librairies insdispensables : **Numpy**, **Pandas** et **Matplotlib**\n- TP N\u00b03 : Introduction \u00e0 **Scikit-learn**\n\n## Sommaire\n\n1. C'est quoi Python?\n2. Hello World\n3. Les variables et les types\n4. Boucles et conditions\n5. Les fonctions en Python\n6. Les exceptions\n7. Les classes\n8. Les modules\n9. Le module Graphviz","66c14dfa":"[Documentation sur graphviz](https:\/\/graphviz.readthedocs.io\/en\/stable\/manual.html)","c625a0a7":"# **5. Les fonctions en Python**\n","2b7a91b4":"# **9. Le module graphviz**","ba9ce4ff":"# **6. Les exceptions**\n\nUne exception est une erreur qui se produit lors de l'ex\u00e9cution du programme.","fd60b774":"# **4. Boucles et conditions**\n\n## **4.1 Boucle for**"}}