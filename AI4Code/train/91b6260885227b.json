{"cell_type":{"e89d938d":"code","130b809d":"code","e57c9348":"code","abc631f6":"code","39ef8788":"code","4afd8ee6":"code","4f879a46":"code","181f4082":"code","7693b68f":"code","4236c376":"code","f568c4ad":"code","cc320406":"code","1d6477e9":"code","a9ad5244":"code","d7df46e8":"code","ffe13fb4":"code","cb561ecb":"code","e0475677":"code","486f3b7f":"code","5a38bb6b":"code","7d211f25":"code","269ab8a7":"code","c32546b3":"markdown","1b1beef7":"markdown","210a6316":"markdown","ce246355":"markdown","ba1620e2":"markdown","33885cf4":"markdown"},"source":{"e89d938d":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport string\nstring.punctuation\nfrom nltk.corpus import stopwords\n\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import LinearSVC\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score","130b809d":"train_df = pd.read_csv('..\/input\/imdb-dataset-sentiment-analysis-in-csv-format\/Train.csv')","e57c9348":"train_df.head()","abc631f6":"train_df.isnull().sum()","39ef8788":"counts = train_df.label.value_counts()\nsns.barplot(x=counts.index, y=counts)\nplt.xlabel('Label')\nplt.ylabel('Count')","4afd8ee6":"def text_cleaning(message):\n    punc_removed = [char for char in message if char not in string.punctuation]\n    punc_removed_join = ''.join(punc_removed)\n    punc_removed_join_clean = [ word for word in punc_removed_join.split() if word.lower() not in stopwords.words('english')]\n    punc_removed_join_clean = str(punc_removed_join_clean).lower()\n    return punc_removed_join_clean ","4f879a46":"X_train_df = train_df['text'].apply(text_cleaning)\ny_train_df = train_df['label'].values","181f4082":"vectorizer = CountVectorizer()\ndata_vectorizer = vectorizer.fit_transform(X_train_df)","7693b68f":"X_train, X_test, y_train, y_test = train_test_split(data_vectorizer, y_train_df, test_size=0.2)","4236c376":"MNB = MultinomialNB()\nMNB.fit(X_train, y_train)","f568c4ad":"y_pred_MNB = MNB.predict(X_test)","cc320406":"Acc_MNB = MNB.score(X_train, y_train)\nacc_MNB = MNB.score(X_test, y_test)\nprint ('Train Accuracy : {:.2f}%'.format(Acc_MNB*100))\nprint ('Test Accuracy : {:.2f}%'.format(acc_MNB*100))","1d6477e9":"print(classification_report(y_test,y_pred_MNB))","a9ad5244":"rfc = RandomForestClassifier()\nrfc.fit(X_train, y_train)","d7df46e8":"y_pred_rfc = rfc.predict(X_test)","ffe13fb4":"Acc_rfc = rfc.score(X_train, y_train)\nacc_rfc = rfc.score(X_test, y_test)\nprint ('Train Accuracy : {:.2f}%'.format(Acc_rfc*100))\nprint ('Test Accuracy : {:.2f}%'.format(acc_rfc*100))","cb561ecb":"print(classification_report(y_test,y_pred_rfc))","e0475677":"Lsvc =LinearSVC()\nLsvc.fit(X_train, y_train)","486f3b7f":"Acc_Lsvc = Lsvc.score(X_train, y_train)\nacc_Lsvc = Lsvc.score(X_test, y_test)\nprint ('Train Accuracy : {:.2f}%'.format(Acc_Lsvc*100))\nprint ('Test Accuracy : {:.2f}%'.format(acc_Lsvc*100))","5a38bb6b":"y_pred_Lsvc = Lsvc.predict(X_test)\nprint(classification_report(y_test, y_pred_Lsvc))","7d211f25":"output = pd.DataFrame({\"Model\":['MultinomialNB','Random Forest Classifier','Linear SVC'],\n                      \"Accuracy\":[acc_MNB, acc_rfc, acc_Lsvc]})\noutput","269ab8a7":"sns.barplot(x='Accuracy', y='Model', data=output)","c32546b3":"# Import Dataset","1b1beef7":"# Import Libraries ","210a6316":"# Random Forest Classifier","ce246355":"# MultinomialNB","ba1620e2":"# Final Report","33885cf4":"# Linear SVC"}}