{"cell_type":{"045a0043":"code","55a8cbad":"code","d1b0f1f2":"code","fd6fcc97":"code","794929fc":"code","27871ecf":"code","c62147d6":"code","46fb406b":"code","0b2086ce":"code","62986383":"code","88a62177":"markdown","53549dbe":"markdown","fd4e0a88":"markdown","1774f566":"markdown","91208716":"markdown","1c5304be":"markdown","773b9d1b":"markdown","1e2c7206":"markdown","f73b6181":"markdown","6630f522":"markdown","1086fe10":"markdown","b8ac0fba":"markdown"},"source":{"045a0043":"import os\nimport glob\nimport matplotlib.pyplot as plt\nimport cv2","55a8cbad":"data_dir = '..\/input\/victorian400\/'\n\norigin_dir = data_dir + 'original\/'\nresized_dir = data_dir + 'resized\/'\ngray_dir = data_dir + 'gray\/'\n\nprint(len(os.listdir(origin_dir)))\nprint(len(os.listdir(resized_dir)))\nprint(len(os.listdir(gray_dir)))","d1b0f1f2":"origin_files = sorted(glob.glob(origin_dir + '*'))\nresized_files = sorted(glob.glob(resized_dir + '*'))\ngray_files = sorted(glob.glob(gray_dir + '*'))","fd6fcc97":"print(origin_files[:2])\n\nprint(resized_files[:2])\n\nprint(gray_files[:2])","794929fc":"#cv2.imread to read as an array and plt.imshow to show the array as an image\n\nimg_arr = cv2.imread(origin_files[0])\n\nprint(origin_files[0])\n\nprint(img_arr.shape)\n\nplt.imshow(img_arr)","27871ecf":"img_arr = cv2.imread(resized_files[0])\n\nprint(resized_files[0])\n\nprint(img_arr.shape)\n\nplt.imshow(img_arr)","c62147d6":"img_arr = cv2.imread(gray_files[0])\n\nprint(gray_files[0])\n\nprint(img_arr.shape)\n\nplt.imshow(img_arr)","46fb406b":"img_arrs = []\n\nimg_num = 5\n\nfor idx in range(img_num):\n    \n    img_arrs.append(cv2.imread(origin_files[idx]))\n    img_arrs.append(cv2.imread(resized_files[idx]))\n    img_arrs.append(cv2.imread(gray_files[idx]))","0b2086ce":"len(img_arrs)","62986383":"rows = img_num\ncolumns = 3\n\nfig, axes = plt.subplots(nrows=rows, ncols=columns, figsize=(columns*3, rows*3))\n\nfor num in range(1, rows*columns+1):\n    \n    fig.add_subplot(rows, columns, num)\n    \n    idx = num - 1\n    \n    plt.imshow(img_arrs[idx], aspect='auto')\n    plt.xlabel(f'{img_arrs[idx].shape}', fontsize=12)\n    \n    if num % 3 == 1 : #if remainder is 1\n        file_idx = num \/\/ 3 # get quotient\n        plt.ylabel(f'{sorted(os.listdir(origin_dir))[file_idx]}', \n                  rotation=0,\n                  fontsize=12,\n                  labelpad=50) #add space between ylabel and yaxis\n    \n    \nfig.tight_layout() # used to adjust padding between subplots \n\ncols = ['origin', 'resized', 'gray']\n\nfor ax, col in zip(axes[0], cols):\n    ax.set_title(col)\n\nfor idx, ax in enumerate(axes.flat):\n    ax.set_xticks([])\n    ax.set_yticks([])\n    \n\n","88a62177":"Let's check if the paths have been saved correctly. ","53549dbe":"We have read 5 images from each of the 3 folders, so there are 15 images saved in `img_arrs` variable.\n\nNow we will use `subplots` to display 15 images in one output cell. We will configure 3 parameters in `plt.subplots()`.\n\n- `nrows`: number of rows to display\n- `ncols`: number of columns to display\n- `figsize`: figure size of each image\n\nSince we have 15 images in `img_arrs`, we will create a subplot with 5 rows and 3 columns. Each row will correspond to a certain image. (ex. `Victorian1.png`), Each column will correspond to each folder from `original` to `gray`. Let's execute the code below and see the result. ","fd4e0a88":"### References","1774f566":"All files have been saved to the corresponding variable. Next, we will read and plot one image from each `files` variable to see what the image looks like. ","91208716":"There are 400 images in each directory. `original` folder contains original images, `resized` folder contains images that have been resized to 256 x 256, `gray` folder contains black and white version of `resized` images. \n\nIn the next cell, we will save the file path of each image to the corresponding variables. Files in `origin` folder will be saved to `origin_files`, files in `resized` folder will be saved to `resized_files`, and files in `gray` folder will be saved to `gray_files`. ","1c5304be":"`Victorian1.png` in `original` folder is a colored image in 714 x 750 shape.","773b9d1b":"https:\/\/stackoverflow.com\/questions\/47282918\/clearing-a-subplot-in-matplotlib\n\nhttps:\/\/stackoverflow.com\/questions\/25812255\/row-and-column-headers-in-matplotlibs-subplots\n\nhttps:\/\/stackoverflow.com\/questions\/25124143\/matplotlib-subplots-get-rid-of-tick-labels-altogether\n\nhttps:\/\/stackoverflow.com\/questions\/12806481\/matplotlib-imshow-stretch-to-fit-width","1e2c7206":"Next, we will check number of files in each directory. ","f73b6181":"Lastly, `Victorian1.png` in `gray` folder is a black and white image in 256 x 256 shape.\n\nWe have compared each image from each directories. However, since we have plotted one image on each output cell, it's difficult to look at all images at once. This is when `subplots` come in handy. By using `subplots`, we can plot multiple images on one output cell so it is much easier to look at compare multiple images. \n\nWe will first read 5 images from each `files` folder consecutively and save them to `img_arrs`.","6630f522":"`Victorian1.png` in `resized` folder is a colored image in 256 x 256 shape.","1086fe10":"`plt.subplots()` creates a grid that is shaped as `nrows` x `ncols`. We have created a grid with 5 rows and 3 columns. Each grid cell has it's own number. The numbers range from 1 to 15 and they are given from left to right. First row's cells are numbered as 1, 2, 3 from left to right and second row's cells are numbered as 4, 5, 6 and so on. \n\nIn order to plot an image on each cells in the grid, use `add_subplot()` to select the cell you want to plot on. Then use `plt.imshow()` to plot an image on the selected cell. I have additionally added labels on x-axis to show the shape of the drawn image. Also added y-axis label to the images on the first column to show the file name of the image. \n\nFirst column has all the images from `origin` folder, second column has all the images from `resized` folder, and third colum has all the images from `gray` folder. Each image has it's shape printed on the bottom. We can observe that images from `origin` folder have different shapes. However, all images from `resized` folder have equal shape in 256 x 256. Also, all images in `gray` folder are black and white. ","b8ac0fba":"In this tutorial we will learn how to use `subplots`. When you want to display several images on one output cell, you can use `subplots` method provided in `matplotlib.pyplot` module. We will first import several libraries that we will need in this tutorial. "}}