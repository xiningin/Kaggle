{"cell_type":{"2e21127f":"code","5605171c":"code","00619357":"code","791231f9":"code","76b8eca1":"markdown","045d191d":"markdown","766464a9":"markdown"},"source":{"2e21127f":"import numpy as np\nimport pandas as pd \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import MinMaxScaler\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import roc_auc_score\nimport os\nprint(os.listdir(\"..\/input\"))\n","5605171c":"class housePrice:\n    def readData(self):\n        data = pd.read_csv('..\/input\/kc_house_data.csv')\n        return data\n    def ranking(self,ranks, names, order=1):\n        minmax = MinMaxScaler()\n        ranks = minmax.fit_transform(order * np.array([ranks]).T).T[0]\n        ranks = map(lambda x: round(x, 2), ranks)\n        return dict(zip(names, ranks))\n    def linerRegression(self):\n        data = self.readData()\n        dataset = data.drop(['id', 'date'], axis=1)\n        X = dataset.iloc[:, 1:].values\n        y = dataset.iloc[:, 0].values\n        colnames = dataset.columns\n        model = LinearRegression()\n        model.fit(X, y)\n        accuracy = model.score(X, y)\n        y_pred = model.predict(X)\n        return model,y_pred,y,accuracy\n\nif __name__ == '__main__':\n    housePrice = housePrice()\n    model,y_pred,y,accuracy= housePrice.linerRegression()\n    print('features weight of liner regression')\n    colnames = ['price', 'bedrooms', 'bathrooms', 'sqft_living', 'sqft_lot', 'floors', 'waterfront', 'view', 'condition', 'grade', 'sqft_above', 'sqft_basement', 'yr_built', 'yr_renovated', 'zipcode', 'lat', 'long', 'sqft_living15', 'sqft_lot15']\n    feature_weight = housePrice.ranking(np.abs(model.coef_), colnames)\n    meanplot = pd.DataFrame(list(feature_weight.items()), columns=['Feature', 'Mean Ranking'])\n    print(meanplot)","00619357":"sns.factorplot(x=\"Mean Ranking\", y=\"Feature\", data=meanplot, kind=\"bar\",size=14, aspect=1.9, palette='coolwarm')\nplt.show()","791231f9":"# compare pred values with true values\naccuracy = int(accuracy*100)\nprint('the model accuracy is %s%%'%accuracy)\nplt.figure()\nplt.plot(range(len(y_pred[0:50])), y_pred[0:50], 'r', label=\"predict\")\nplt.plot(range(len(y_pred[0:50])), y[0:50], 'b', label=\"true value\")\nplt.legend(loc=\"upper right\")\nplt.xlabel(\"the number of sales\")\nplt.ylabel('value of sales')\nplt.show()","76b8eca1":"for liner regresion, some features seems not so important.   \n**zipcode** and  **floors** are the greatest influeced features.","045d191d":"Obviously, simple liner regression pred in house price seems not too well","766464a9":"this model explore line regression accuracy in house price prediction"}}