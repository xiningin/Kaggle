{"cell_type":{"3ac17455":"code","b13dca63":"code","41f85227":"code","d38eeba2":"code","33a21460":"code","9408af6b":"code","ddc952ff":"code","e9877a13":"code","ae8b1e6c":"code","f0883c38":"code","02bed33c":"code","81351ede":"code","f67e5620":"code","26820c2d":"code","f55f94c8":"code","ebf03225":"code","ba7eb822":"code","d1ab6cdf":"code","b10b08fd":"code","ff458f17":"code","625323c9":"code","4fe89d83":"markdown","dde1441f":"markdown","0f8cb64a":"markdown","0174dafa":"markdown","0ec44122":"markdown","58590d21":"markdown","07cc5d47":"markdown","2b3ef1d8":"markdown","9eaceb9e":"markdown","d5bf8624":"markdown","1ea2f790":"markdown","7f4c403e":"markdown","f4fa0436":"markdown","468d8ae5":"markdown","a2e0f5b1":"markdown","3e6d0ef6":"markdown","563e2297":"markdown","e48f6b84":"markdown","bd87f5c4":"markdown","1cfdc9ea":"markdown","993e8e2b":"markdown","365a530c":"markdown","09c0e7c8":"markdown","fcb9b7d8":"markdown"},"source":{"3ac17455":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf","b13dca63":"tf.__version__","41f85227":"import os\nprint(os.listdir(\"..\/input\"))","d38eeba2":"dataset = pd.read_csv('..\/input\/churn-modelling\/Churn_Modelling.csv')\nX = dataset.iloc[:, 3:-1].values\ny = dataset.iloc[:, -1].values","33a21460":"print(X)","9408af6b":"print(y)","ddc952ff":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nX[:, 2] = le.fit_transform(X[:, 2])","e9877a13":"print(X)","ae8b1e6c":"from sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [1])], remainder='passthrough')\nX = np.array(ct.fit_transform(X))","f0883c38":"print(X)","02bed33c":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","81351ede":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","f67e5620":"ann = tf.keras.models.Sequential()","26820c2d":"ann.add(tf.keras.layers.Dense(units=6, activation='relu'))","f55f94c8":"ann.add(tf.keras.layers.Dense(units=6, activation='relu'))","ebf03225":"ann.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))","ba7eb822":"ann.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","d1ab6cdf":"ann.fit(X_train, y_train, batch_size = 32, epochs = 100)","b10b08fd":"print(ann.predict(sc.transform([[1, 0, 0, 600, 1, 40, 3, 60000, 2, 1, 1, 50000]])) > 0.5)","ff458f17":"y_pred = ann.predict(X_test)\ny_pred = (y_pred > 0.5)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","625323c9":"from sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\naccuracy_score(y_test, y_pred)","4fe89d83":"### Predicting the Test set results","dde1441f":"Label Encoding the \"Gender\" column","0f8cb64a":"### Adding the output layer","0174dafa":"### Predicting the result of a single observation","0ec44122":"### Encoding categorical data","58590d21":"# Artificial Neural Network","07cc5d47":"## Part 1 - Data Preprocessing","2b3ef1d8":"### Compiling the ANN","9eaceb9e":"### Initializing the ANN","d5bf8624":"### Adding the second hidden layer","1ea2f790":"### Adding the input layer and the first hidden layer","7f4c403e":"## Part 3 - Training the ANN","f4fa0436":"### Feature Scaling","468d8ae5":"One Hot Encoding the \"Geography\" column","a2e0f5b1":"### Importing the dataset","3e6d0ef6":"**Solution**","563e2297":"### Importing the libraries","e48f6b84":"## Part 2 - Building the ANN","bd87f5c4":"Therefore, our ANN model predicts that this customer stays in the bank!\n\n**Important note 1:** Notice that the values of the features were all input in a double pair of square brackets. That's because the \"predict\" method always expects a 2D array as the format of its inputs. And putting our values into a double pair of square brackets makes the input exactly a 2D array.\n\n**Important note 2:** Notice also that the \"France\" country was not input as a string in the last column but as \"1, 0, 0\" in the first three columns. That's because of course the predict method expects the one-hot-encoded values of the state, and as we see in the first row of the matrix of features X, \"France\" was encoded as \"1, 0, 0\". And be careful to include these values in the first three columns, because the dummy variables are always created in the first columns.","1cfdc9ea":"## Part 4 - Making the predictions and evaluating the model","993e8e2b":"### Making the Confusion Matrix","365a530c":"**Homework**\n\nUse our ANN model to predict if the customer with the following informations will leave the bank: \n\nGeography: France\n\nCredit Score: 600\n\nGender: Male\n\nAge: 40 years old\n\nTenure: 3 years\n\nBalance: \\$ 60000\n\nNumber of Products: 2\n\nDoes this customer have a credit card ? Yes\n\nIs this customer an Active Member: Yes\n\nEstimated Salary: \\$ 50000\n\nSo, should we say goodbye to that customer ?","09c0e7c8":"### Training the ANN on the Training set","fcb9b7d8":"### Splitting the dataset into the Training set and Test set"}}