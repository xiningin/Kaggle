{"cell_type":{"59cd99e3":"code","a1615d48":"code","aec01e32":"code","26345e41":"code","f0534fc9":"code","ce680f4a":"code","d618525a":"code","8351d9c5":"code","8d361a7c":"code","320104b6":"code","0aa15205":"code","e6626e67":"code","ef3c55f3":"code","8cb41f3f":"code","856170b4":"code","bd6dd6ea":"code","0b99dab7":"code","cee33657":"code","e47d747f":"code","227981cd":"code","ea5fc6dd":"code","13ee8cef":"code","f930e350":"markdown","168eca6b":"markdown","af5154ad":"markdown","1b8f28a3":"markdown","39d914b9":"markdown","3e6c5bd3":"markdown","cd2dbd57":"markdown","a5155595":"markdown","72a4e170":"markdown","bd6b0f8b":"markdown","0aea6aad":"markdown","4ab7f9a9":"markdown","9139fc18":"markdown","8a56d16a":"markdown","4b2cb7f6":"markdown","f787f4e9":"markdown","8ca6c56d":"markdown","1e5e27ba":"markdown","5fb0d95c":"markdown","b8a26b47":"markdown","cee9b548":"markdown","09402cfd":"markdown","e7fb801c":"markdown","208cbbcd":"markdown","18f61597":"markdown","440e9a6f":"markdown","260f7705":"markdown","78b004f4":"markdown","5c57ddcf":"markdown","6c27593a":"markdown","4f0815ef":"markdown","08e69f9e":"markdown","02ac7561":"markdown","3142f23c":"markdown","27039abb":"markdown"},"source":{"59cd99e3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a1615d48":"Github_data = pd.read_csv(\"..\/input\/github-repositories-analysis\/Github_data.csv\")","aec01e32":"Github_data.head()","26345e41":"Github_data = Github_data.rename(columns={'Unnamed: 0': 'index', 'Unnamed: 0.1': 'sub_index'})\nGithub_data.drop('index', axis=1, inplace=True)\nGithub_data.reset_index(drop=True, inplace=True)","f0534fc9":"Github_data.info()","ce680f4a":"Github_data.at[700, 'issue'] = str(5000)","d618525a":"Numerical_columns = [\"star\",\"fork\",\"watch\",\"issue\",\"pull_requests\",\"projects\",\"commits\",\"branches\",\"packages\",\"releases\",\"contributers\"]\n# Github_data[Numerical_columns] = Github_data[Numerical_columns].apply(lambda x: x.replace(',','').astype(float) if ',' in str(x) else x)\nGithub_data[Numerical_columns] = Github_data[Numerical_columns].fillna(0)\nGithub_data[\"issue\"] = Github_data[\"issue\"].apply(lambda x: x.replace(',', '') if ',' in x else x).astype(float)\nGithub_data[\"pull_requests\"] = Github_data[\"pull_requests\"].apply(lambda x: x.replace(',', '') if ',' in x else x).astype(float)\nGithub_data[\"commits\"] = Github_data[\"commits\"].apply(lambda x: x.replace(',', '') if ',' in x else x).astype(float)\nGithub_data[\"branches\"] = Github_data[\"branches\"].apply(lambda x: x.replace(',', '') if ',' in x else x).astype(float)\nGithub_data[\"contributers\"] = Github_data[\"contributers\"].apply(lambda x: x.replace(',', '') if ',' in x else x).astype(float)","8351d9c5":"Github_data['star'] = Github_data['star'].apply(lambda x: float(x.replace('k',''))*1000 if 'k' in x else x)\nGithub_data['fork'] = Github_data['fork'].apply(lambda x: float(x.replace('k',''))*1000 if 'k' in x else x)\nGithub_data['watch'] = Github_data['watch'].apply(lambda x: float(x.replace('k',''))*1000 if 'k' in x else x)","8d361a7c":"import ast\nunique_tags = []\nGithub_data['topic_tag'].apply(lambda x: unique_tags.append(ast.literal_eval(x)))\n# unique_tags = list(set([item for sublist in unique_tags for item in sublist]))\nall_tag = np.array([item for sublist in unique_tags for item in sublist])\nunique, counts = np.unique(all_tag, return_counts=True)\nprint(\"Total number of tags in 1500 repository : \",len(all_tag))\nprint(\"Total number of unique tags in 1500 repository : \",len(unique))\ntag_dataframe = pd.DataFrame({\"unique\":unique,\"counts\":counts})\ntag_dataframe = tag_dataframe.sort_values(['counts'],ascending=[False])","320104b6":"fig = px.bar(tag_dataframe[:20],x=\"unique\",y=\"counts\",color='counts')\nfig.show()","0aa15205":"Github_data['star'] = Github_data['star'].astype(float)\nstar_topicwise = Github_data.groupby('topic').sum()['star']\nfig = px.bar(star_topicwise,x=star_topicwise.index,y=\"star\",color=star_topicwise.index)\nfig.show()","e6626e67":"Github_data['fork'] = Github_data['fork'].astype(float)\nfork_topicwise = Github_data.groupby('topic').sum()['fork']\nfig = px.bar(fork_topicwise,x=fork_topicwise.index,y=\"fork\",color=fork_topicwise.index)\nfig.show()","ef3c55f3":"Github_data['watch'] = Github_data['watch'].astype(float)\nwatch_topicwise = Github_data.groupby('topic').sum()['watch']\nfig = px.bar(watch_topicwise,x=watch_topicwise.index,y=\"watch\",color=watch_topicwise.index)\nfig.show()","8cb41f3f":"colormap = plt.cm.magma\nplt.figure(figsize=(5,5))\nplt.title('correlation between star and fork', y=1.05, size=15)\nsns.heatmap(Github_data[['star','fork','watch']].corr(),linewidths=0.1,vmax=1.0, square=True, \n            cmap=colormap, linecolor='white', annot=True)","856170b4":"plt.figure(figsize=(10,10))\nplt.title('correlation between star and fork', y=1.05, size=15)\nsns.heatmap(Github_data[Numerical_columns].corr(),linewidths=0.1,vmax=1.0, square=True, \n            cmap=colormap, linecolor='white', annot=True)","bd6dd6ea":"commit_topicwise = Github_data.groupby('topic').sum()['commits']\nfig = px.pie(commit_topicwise, values='commits', names=commit_topicwise.index, title='Commit Distribution topic wise')\nfig.show()","0b99dab7":"issue_topicwise = Github_data.groupby('topic').sum()['issue']\nfig = px.bar(issue_topicwise,x=issue_topicwise.index,y=\"issue\",color=issue_topicwise.index)\nfig.show()","cee33657":"contributers_topicwise = Github_data.groupby('topic').sum()['contributers']\nfig = go.Figure(data=[go.Pie(labels=contributers_topicwise.index, values=contributers_topicwise.values, hole=.3)])\nfig.show()","e47d747f":"License_distribution = Github_data[\"License\"].apply(lambda x: x if'\\n' not in x else None).value_counts()\nfig = px.bar(y=License_distribution.values, x=License_distribution.index)\nfig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.show()","227981cd":"github_group = Github_data.groupby('topic')\nnum_of_top_repository = 10\nfig = go.Figure()\nfor name, group in github_group:\n    \n    fig.add_trace(go.Bar(\n    x=list(range(1,num_of_top_repository+1)),\n    y=group[\"star\"].values[:num_of_top_repository+1],\n    name=name,\n    ))\nfig.update_layout(barmode='group', xaxis_tickangle=-45)\nfig.show()","ea5fc6dd":"github_group = Github_data.groupby('topic')\nnum_of_top_repository = 10\nfig = go.Figure()\nfor name, group in github_group:\n    \n    fig.add_trace(go.Bar(\n    x=list(range(1,num_of_top_repository+1)),\n    y=group[\"fork\"].values[:num_of_top_repository+1],\n    name=name,\n    ))\nfig.update_layout(barmode='group', xaxis_tickangle=-45)\nfig.show()","13ee8cef":"github_group = Github_data.groupby('topic')\nnum_of_top_repository = 10\nfig = go.Figure()\nfor name, group in github_group:\n    \n    fig.add_trace(go.Bar(\n    x=list(range(1,num_of_top_repository+1)),\n    y=group[\"contributers\"].values[:num_of_top_repository+1],\n    name=name,\n    ))\nfig.update_layout(barmode='group', xaxis_tickangle=-45)\nfig.show()","f930e350":"### Processing on column **topic_tag**","168eca6b":"* we can see above machine-learning and deeplearning tags are used more then 200 times ","af5154ad":"# stay tuned for upcoming more analysis...","1b8f28a3":"### 1) Star","39d914b9":"* Java-Script again win the game \n* Data-Science and c++ topics are came forward. they are not at 2nd and 3rd place in star and fork repository ","3e6c5bd3":"### Commit Distribution topic wise","cd2dbd57":"* same as like stars and forks","a5155595":"* here we can see some different senerio \n* more stared repositories have less contributers","72a4e170":"* there are many columns are un correlated","bd6b0f8b":"* we can see here similarity between repository star and forks\n* java-script's repository are most stared and forked also","0aea6aad":"### 2) Fork","4ab7f9a9":"* In Dataset,\nColumn **'Unnamed: 0'** is Index **and** Column **'Unnamed: 0.1'** is stand for sub_index **(Topic wise indexing)**","9139fc18":"* star and watch are more correlatd (0.9)\n* star and fork is less correlated compare to other two\n\n**(Star & watch) > (Fork & watch) > (star > fork)**","8a56d16a":"# Top 10 repository analysis topic wise","4b2cb7f6":"# Github Repository analysis 2020","f787f4e9":"### Top Repository tags used by users","8ca6c56d":"### Import Data","1e5e27ba":"### Repository star distribution topic wise****","5fb0d95c":"## Please!!! Upvote this kernel if you find it useful.","b8a26b47":"### **Imp**\n* I have found that at row 700 issue column have value \"5000+\" unwanted + there so can't chage it to numerical befor removeing it \n","cee9b548":"### Issue Distribution ","09402cfd":"* java-script repository havs more stars then other repository","e7fb801c":"### Column **Star, Fork, Watch** conatains number **(1.2K)** format, we need to convert into **(1200)** format","208cbbcd":"### Repository Fork distribution","18f61597":"### Repository watch distribution","440e9a6f":"### All numeric columns correlation","260f7705":"* we can see same similarity in topic-wise here like star and fork.","78b004f4":"### converting number with comma numerical **1,234 **to **1234**","5c57ddcf":"* we can see here javascript topic has most stared repository (total 4M+)\n* also we know that machie-learning is most usable tags rather then machine-learning repository are not stared as much as java-script\n* Android-studio, opencv, sensor,variational-encoder are thos topic which accumulated sum are very low\n* Data-science,computer-vision is most hot topic these days but data-science repositerys are not as much stared compared to oter topics","6c27593a":"## Please!!! Upvote this kernel if you find it useful.","4f0815ef":"* Defenetly Raspberry-pi topic have less star and forks but it wins in commits ","08e69f9e":"### License Distribution","02ac7561":"GitHub is a web-based version-control and collaboration platform for software developers. ... GitHub facilitates social coding by providing a web interface to the Git code repository and management tools for collaboration. GitHub can be thought of as a serious social networking site for software developers.\n\nI have Scraped top stared repositories from GitHub with different topics. I hvae used Python BeautifulSoup to scrape the data . Main motivation behind this data is to analyze top github stared repositories.\n\nI have selcted some topics like Data-Science, Machine-Learning, Computer-Vision, etc. Then I have fatched most stared 100 repository details including repository commits,issue,fork, etc.","3142f23c":"* machine-learning repositories are more forked then java-scriped repositories rether then java-script repositories are more stared","27039abb":"<img src=\"https:\/\/camo.githubusercontent.com\/5806488e6563b58f90ece7330731dc4bac7b8060\/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646576706f73742f696d6167652f66657463682f732d2d51484743706e574b2d2d2f68747470733a2f2f6769746875622e636f6d2f6e70656e7472656c2f6f63746f636c697070792f626c6f622f6d61737465722f676966732f656172732e67696625334672617725334474727565\" width=\"200\">"}}