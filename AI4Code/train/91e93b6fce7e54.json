{"cell_type":{"bd20a7df":"code","466e0d14":"code","cef9c7d2":"code","89efa70f":"code","e992f490":"code","cf51684c":"code","a9c9b17e":"code","543efde5":"code","c5f5d4bb":"code","c4b63e57":"code","0685021c":"code","925a80e4":"code","56f4126f":"code","e5714bce":"code","f33cd28d":"code","eb4e77d7":"markdown","cd4422a7":"markdown","8041a788":"markdown","fabcbfe1":"markdown","2677b0b5":"markdown","8081d449":"markdown","1f7a8d29":"markdown","5326da4c":"markdown","f2d21a09":"markdown","383337f2":"markdown"},"source":{"bd20a7df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","466e0d14":"''''score_df'''\nd_df = pd.read_csv(\"..\/input\/deliveries.csv\")\n# OR - pd.read_csv(data_path+\"deliveries.csv\"), where data_path = \"..\/input\/\"\n# reading deliveries dataset  \n'''match_df'''\nm_df = pd.read_csv(\"..\/input\/matches.csv\")\n# OR - pd.read_csv(data_path+\"matches.csv\"), where data_path = \"..\/input\/\"\n# reading matches dataset\n# csv- Comma seperated values","cef9c7d2":"d_df.head(5)\n# Printing the first five rows of the dataset to just look how the dataset is !","89efa70f":"m_df.head(5)","e992f490":"print(\"Number of matches played: \",m_df.shape[0])\n# https:\/\/pandas.pydata.org\/pandas-docs\/version\/0.17.0\/generated\/pandas.DataFrame.shape.html\nprint(\"Number of seasons: \",len(m_df.season.unique()))\n# unique season values from dataset is printed.","cf51684c":"sns.countplot(x='season',data=m_df)\n# counts the number of each season's value, i.e, counting the number of matches played per season\nplt.plot()\n# Plotting graph","a9c9b17e":"plt.figure(figsize=(12,6))\n# Sets the figure(plot) size.\nsns.countplot(x='venue', data=m_df)\n# same as above\nplt.xticks(rotation='vertical')\n# x-axis names vertically is shown\nplt.plot()","543efde5":"temp_df = pd.melt(m_df, id_vars=['id','season'], value_vars=['team1', 'team2'])\n# https:\/\/pandas.pydata.org\/pandas-docs\/version\/0.23.4\/generated\/pandas.melt.html\n# https:\/\/youtu.be\/qOkj5zOHwRE -> Video URL\nplt.figure(figsize=(12,6))\nsns.countplot(x='value', data=temp_df)\nplt.xticks(rotation='vertical')\nplt.show()","c5f5d4bb":"plt.figure(figsize=(12,6))\nsns.countplot(x='winner',data=m_df)\nplt.xticks(rotation='vertical')\nplt.show()","c4b63e57":"temp_df = m_df.drop_duplicates(subset=['season'],keep='last')[['season','winner']].reset_index(drop=True)\n# https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.DataFrame.drop_duplicates.html\n# https:\/\/stackoverflow.com\/questions\/44620465\/python-reset-indexdrop-true-function-erroneously-removed-column\n# https:\/\/stackoverflow.com\/questions\/33417991\/pandas-why-are-double-brackets-needed-to-select-column-after-boolean-indexing\ntemp_df","0685021c":"temp_series = m_df.toss_decision.value_counts()\n# https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.Series.value_counts.html\nlabels = (np.array(temp_series.index))\n# contains \"bat\" and \"field\"\n# https:\/\/docs.scipy.org\/doc\/numpy-1.15.0\/user\/basics.creation.html\n# https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.Series.index.html\nsizes = (np.array((temp_series\/temp_series.sum())*100))\n# calculating %ages\ncolors = ['Pink','SkyBlue']\nplt.pie(sizes,labels = labels,colors=colors,autopct='%1.1f%%',shadow=True,startangle=90)\n# https:\/\/www.commonlounge.com\/discussion\/9d6aac569e274dacbf90ed61534c076b#pie-chart\n# https:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.pyplot.pie.html\nplt.title(\"Toss decision Percentage\")\nplt.show()","925a80e4":"plt.figure(figsize=(12,6))\nsns.countplot(x='season',hue='toss_decision',data=m_df)\n# https:\/\/seaborn.pydata.org\/generated\/seaborn.countplot.html\nplt.xticks(rotation='vertical')\nplt.show()","56f4126f":"no_of_wins = (m_df.win_by_wickets>0).sum()\nno_of_loss = (m_df.win_by_wickets==0).sum()\nlabels = [\"Wins\", \"Loss\"]\ntotal = float(no_of_wins + no_of_loss)\nsizes = [(no_of_wins\/total)*100, (no_of_loss\/total)*100]\ncolors = ['gold', 'lightskyblue']\nplt.pie(sizes, labels=labels, colors=colors,\n        autopct='%1.1f%%', shadow=True, startangle=90)\nplt.title(\"Win percentage batting second\")\nplt.show()\n# Similar to last pie chart","e5714bce":"m_df[\"field_win\"] = \"win\"\n# made another column for win and loss only\nm_df[\"field_win\"].ix[m_df['win_by_wickets']==0] = \"loss\"\n# 'ix' will select the location where 'win_by_wickets ==0' and stores \"loss\" in \"field_win\" column at that position, and rest will be stored with \"win\"\nplt.figure(figsize=(12,6))\nsns.countplot(x='season', hue='field_win', data=m_df)\nplt.xticks(rotation='vertical')\nplt.show()","f33cd28d":"temp_series = m_df.player_of_match.value_counts()[:10]\nprint(temp_series)\n# value_counts() arrange in descending order, [:10] picks the first ten(top 10).\nlabels = np.array(temp_series.index)\n# https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.Series.index.html\nind = np.arange(len(labels))\nwidth = 0.9\nfig, ax = plt.subplots()\nrects = ax.bar(ind, np.array(temp_series), width=width, color='y')\nax.set_xticks(ind+((width)\/2.))\nax.set_xticklabels(labels, rotation='vertical')\nax.set_ylabel(\"Count\")\nax.set_title(\"Top player of the match awardees\")\nplt.show()","eb4e77d7":"**Number of matches played by each team**","cd4422a7":"**Win by Year, batting second**","8041a788":"**Win %age of team BATTING second**","fabcbfe1":"**Champions each season**","2677b0b5":"**Venue-wise Matches**","8081d449":"**Top players of the match**","1f7a8d29":"**Matches per Season**","5326da4c":"**Number of wins\/team******","f2d21a09":"**Toss Decision**","383337f2":"**Toss decision Per Season**"}}