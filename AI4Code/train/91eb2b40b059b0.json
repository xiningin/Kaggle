{"cell_type":{"e3c2ff40":"code","caa86eed":"code","a8acfffc":"code","daceed51":"code","f0d18ef7":"code","f6ecb679":"code","ae255789":"code","ee668162":"code","85542455":"code","5c20d30a":"code","34ddd0bf":"code","f1666c84":"code","de1c7642":"code","3d1f7881":"code","d5d94de8":"code","7344bf99":"code","82b46366":"code","41ebb582":"code","79c2d54c":"code","b345de13":"code","0c9a23cf":"code","4a629a90":"code","32d954ee":"code","e76ca9d1":"code","403a7961":"code","897b4202":"code","72fe9cd7":"code","cb132779":"code","42d5f7e7":"code","68a87386":"code","8dbc6a40":"code","385afef1":"code","22744448":"code","1e8a2797":"code","89e37957":"code","1a737dea":"code","e1b6ce9e":"code","1736984a":"code","37ab15af":"code","467a68cb":"code","e8b9d5b0":"code","6e3e065d":"code","ff9eb6ac":"code","9f597630":"code","d283b4e6":"markdown","ebe6b7c6":"markdown","138afd49":"markdown","40020e7a":"markdown","6ba20670":"markdown","aedeaf11":"markdown","f883996b":"markdown","ce480804":"markdown","52ed8239":"markdown","ec5b1c8e":"markdown","21df5344":"markdown","8de97ff9":"markdown","a53393b0":"markdown","d65f84f1":"markdown","c775591d":"markdown","9825afd3":"markdown","762b6725":"markdown","1adb4562":"markdown","42f384d5":"markdown","f68be02a":"markdown","628e5ef5":"markdown","9f0cf83b":"markdown","678dbe8c":"markdown","e032adfa":"markdown","e486a4ec":"markdown","4231fefc":"markdown","d363b518":"markdown","0e1e07d6":"markdown"},"source":{"e3c2ff40":"# import required modules\nimport os\nimport pandas as pd\nfrom datetime import date, datetime, timedelta\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nsns.set()","caa86eed":"csv_list = []\nfor f in os.listdir(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\"):\n    if f.endswith('.csv'):\n        csv_list.append(f)\ncsv_list","a8acfffc":"# read csv files into a dictionary of data frames.\ndf_dict = dict()\nfor f in csv_list:\n    df_dict[f[:-4]] = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/\" + f)","daceed51":"# show basic information of each data frame\nfor k, v in df_dict.items():\n    print(k,'\\n')\n    v.info()\n    print('\\n'*2+\"=\"*80)","f0d18ef7":"daily_act = df_dict['dailyActivity_merged']\ndaily_act.info()\ndaily_act.head()","f6ecb679":"#Convert \u2018ActivityDate\u2019 from object to datetime.\ndaily_act['ActivityDate'] = pd.to_datetime(daily_act.ActivityDate)\ndaily_act.info()","ae255789":"sleep_day = df_dict['sleepDay_merged']\nsleep_day.info()\nsleep_day.head()","ee668162":"sleep_day['SleepDay'] = pd.to_datetime(sleep_day.SleepDay)\nsleep_day.info()","85542455":"pd.set_option('precision',2)\ndaily_act.describe(datetime_is_numeric=True)","5c20d30a":"sleep_day.describe(datetime_is_numeric=True)","34ddd0bf":"daily_act.duplicated().sum()","f1666c84":"sleep_day.duplicated().sum()","de1c7642":"sleep_day.loc[sleep_day.duplicated(keep=False)]","3d1f7881":"sleep_day = sleep_day.drop_duplicates()\nsleep_day.info()","d5d94de8":"daily_act.duplicated(subset=['Id', 'ActivityDate']).sum()","7344bf99":"sleep_day.duplicated(subset=['Id', 'SleepDay']).sum()","82b46366":"act_sleep = daily_act.merge(sleep_day, left_on=['Id','ActivityDate'], right_on=['Id', 'SleepDay'])\nact_sleep.info()","41ebb582":"set(sleep_day.Id.unique()) ^ set(daily_act.Id.unique())","79c2d54c":"act_sleep.columns","b345de13":"act_sleep.groupby(['Id'])['ActivityDate'].count()","0c9a23cf":"# a dictionary for the activity categories, each category corresponds to a list of variables. \nactivity_dict = dict()\nactivity_dict['steps'] = ['TotalSteps']\nactivity_dict['distances'] = ['TotalDistance', \n                         #'TrackerDistance',   # exclude the tracker metadata\n                         #'LoggedActivitiesDistance', # exclude the tracker metadata\n                         'VeryActiveDistance', \n                         'ModeratelyActiveDistance', \n                         'LightActiveDistance', \n                         'SedentaryActiveDistance']\nactivity_dict['active_minutes'] = ['VeryActiveMinutes', \n                              'FairlyActiveMinutes', \n                              'LightlyActiveMinutes', \n                              'SedentaryMinutes']\nactivity_dict['calories'] = ['Calories']\n\n\ncat_sleep = ['TotalSleepRecords', 'TotalMinutesAsleep', 'TotalTimeInBed']\n\nactivity_dict","4a629a90":"act_sleep.to_csv('activity_sleep.csv')","32d954ee":"sleep_summary = act_sleep[cat_sleep].describe()\nsleep_summary","e76ca9d1":"sleep_summary.to_csv('sleep_summary.csv')    ","403a7961":"ax = sns.barplot(data=act_sleep, \n                 x='TotalSleepRecords', \n                 y='TotalSleepRecords', \n                 estimator=len) # show the counts of values\n# label the values\nax.set_ylabel('count')\nax.set_title('Total Sleep Records'.upper())\nax.set_ylim([0, 420])\nfor x, y in zip(plt.xticks()[0], act_sleep.TotalSleepRecords.value_counts().values):\n    label = 'counts: {:,.0f}'.format(y)\n    ax.text(x, y+5, label, horizontalalignment='center')\n    \n\nplt.show()","897b4202":"act_sleep[cat_sleep].agg(['mean', 'median'])","72fe9cd7":"fig, axes = plt.subplots(1, len(cat_sleep[1:]), figsize=(16, 12), sharey=True)\nfor i, s in enumerate(cat_sleep[1:]):\n    sns.boxplot(data=act_sleep, y=s, showmeans=True ,ax=axes[i])\n    axes[i].set_title(s)\n    axes[i].set_ylabel('minute')\n    \n    \n# label the mean and median for each subplot\n    for c, pos in zip(['mean', 'median'],[-0.2, 0.2]):\n        x = 0\n        y = act_sleep[s].agg(c)\n        label = '{}: {:,.0f}'.format(c, y)\n        axes[i].text(x+pos,\n                     y,\n                     label,\n                     horizontalalignment='center',\n                     bbox={'facecolor':'w','alpha':0.5})\nplt.show()","cb132779":"pd.set_option('precision',2)\ndistance_summary = act_sleep[activity_dict['distances']].describe()\ndistance_summary","42d5f7e7":"distance_summary.to_csv('distance_summary.csv')","68a87386":"varls = activity_dict['distances']\nfig, axes = plt.subplots(1, len(varls), figsize=(20, 6), sharey=True)\nfor i, s in enumerate(varls):\n    sns.boxplot(data=act_sleep, y=s, showmeans=True, ax=axes[i])\n    axes[i].set_title(s)\n    axes[i].set_ylabel('kilometer')\n\n    \n# label the mean and median for each subplot\n    for c, pos in zip(['mean', 'median'],[-0.25,0.25]):\n        x = 0\n        y = act_sleep[s].agg(c)\n        label = '{}: {:,.2f}'.format(c, y)\n        axes[i].text(x+pos,\n                     y,\n                     label,\n                     horizontalalignment='center',\n                     bbox={'facecolor':'w','alpha':0.5})\n\nplt.show()","8dbc6a40":"actmin_summary = act_sleep[activity_dict['active_minutes']].describe()\nactmin_summary","385afef1":"actmin_summary.to_csv('active_minutes_summary.csv')","22744448":"varls = activity_dict['active_minutes']\nfig, axes = plt.subplots(1, len(varls), figsize=(15, 6), sharey=True)\nfor i, s in enumerate(varls):\n    sns.boxplot(data=act_sleep, y=s, showmeans=True, ax=axes[i])\n    axes[i].set_title(s)\n    axes[i].set_ylabel('')\n    # label the mean and median for each subplot\n    for c, pos in zip(['mean', 'median'],[-0.25,0.25]):\n        x = 0\n        y = act_sleep[s].agg(c)\n        label = '{}: {:,.0f}'.format(c, y)\n        axes[i].text(x+pos,\n                     y,\n                     label,\n                     horizontalalignment='center',\n                     bbox={'facecolor':'w','alpha':0.5})\naxes[0].set_ylabel('minute')\nplt.show()","1e8a2797":"cal_summary = act_sleep.Calories.describe()\ncal_summary","89e37957":"cal_summary.to_csv('calories_summary.csv')","1a737dea":"ax = sns.boxplot(data=act_sleep, y='Calories', showmeans=True)\nax.set_title('Calories')\nax.set_ylabel('kcal')\nfor c, pos in zip(['mean', 'median'],[-0.25,0.25]):\n    x = 0\n    y = act_sleep['Calories'].agg(c)\n    \n    label = '{}: {:,.0f}'.format(c, y)\n    ax.text(x+pos,\n             y,\n             label,\n             horizontalalignment='center',\n             bbox={'facecolor':'w','alpha':0.5})","e1b6ce9e":"#s = 'TotalMinutesAsleep'\nfor k, varls in activity_dict.items():\n\n    fig, axes = plt.subplots(1, len(varls), figsize=(5*len(varls), 4))\n    print(len(varls), varls)\n    for i, var in enumerate(varls):\n        if len(varls) == 1:\n            sns.regplot(data=act_sleep, x=var, y= 'TotalMinutesAsleep', ax=axes)\n            \n        else: \n            sns.regplot(data=act_sleep, x=var, y= 'TotalMinutesAsleep', ax=axes[i])\n    \n    plt.suptitle(k.upper())\n    plt.show()","1736984a":"from itertools import combinations\ncomb = combinations(cat_sleep,2)\nfig, axes = plt.subplots(1,3, figsize=(15,5))\nfor i, c in enumerate(comb):\n    \n    sns.regplot(data=act_sleep, x=c[0], y=c[1], ax=axes[i])\nplt.suptitle('SLEEP VARIABLES')","37ab15af":"# calculate 'TotalMinutesAsleep'\/'TotalTimeInBed' and assign to the new column 'sleep_act'\nact_sleep['sleep_pct'] = act_sleep.TotalMinutesAsleep\/act_sleep.TotalTimeInBed\nact_sleep.head()","467a68cb":"xls = ['TotalMinutesAsleep','TotalTimeInBed','TotalSleepRecords']\nfor x in xls:\n    g = sns.lmplot(data=act_sleep, x=x, y='sleep_pct' )\n    g.set(title = x)","e8b9d5b0":"act_sleep['sleep_status'] = pd.cut(act_sleep.sleep_pct, \n                                   bins=[0,0.8,1.0], \n                                   labels=['<=80%', '>80%'])\nact_sleep.info()","6e3e065d":"act_sleep.sleep_status.value_counts(normalize=True)","ff9eb6ac":"act_sleep.groupby(['Id','sleep_status'])['Id'].count().unstack()","9f597630":"act_sleep.Id.nunique()","d283b4e6":"## Organizing data\n\n**Section Summary**\n\nTasks: \n1. Merging daily_act and sleep_day on Id and date for further investigation.\n2. Exploring the merged data frame act_sleep\n\n---\nResults: \n1. Done.\n2. Exploration findings:\n- Number of records by user: Not all users (represented by \u2018ID\u2019) have 30-day records in the merged data frame act_sleep.Some users have only less than 5 records.\n- Variable categories:\n\t- user id: \u2018Id\u2019 \n\t- date: 'ActivityDate', 'SleepDay', the same.\n\t- steps: 'TotalSteps' Total number of steps taken\n\t- distance: 'TotalDistance', 'TrackerDistance',  'LoggedActivitiesDistance', 'VeryActiveDistance',  'ModeratelyActiveDistance', 'LightActiveDistance', 'SedentaryActiveDistance'\n\t- active minutes: 'VeryActiveMinutes', 'FairlyActiveMinutes',\n       'LightlyActiveMinutes', 'SedentaryMinutes'\n\t- calories:'Calories'\n- sleep:  'TotalSleepRecords', 'TotalMinutesAsleep', 'TotalTimeInBed'\n\n---\nConclusion:\n\nFor future analysis, I made a list of variables for 'sleep' category, and made a dictionary of the activity category.\n\nNext, I will take a look at each variable.","ebe6b7c6":"### data range and missing values\n\nTask: \n\n1. Check the data range, see if anything is wrong.\n2. Find out if there exist missing values.\n\n\n---\nResult: \n1. No obvious errors or anomalies.\n2. No missing values\n","138afd49":"# Insights\n\n1. Sleep category:\n    - TotalSleepRecords: The bar chart shows most of the records are 1, and the largest number is 3.\n    - TotalMinutesAsleep: The mean (419 min) and median (432 min) are around 7 hours.\n    - TotalTimeInBed: The mean (458 min) and median (463 min) are around 7.5 hours.\n\n2. Daily activities categories:\n    - active minutes: The max, mean and median of the sedentary minutes are obviously longer than all 3 other variables.\n    - calories: The mean is 2389 kcal, and the median is 2207 kcal.\n\n3. Total minutes asleep are obviously negatively related to the sedentary minutes. Other trends are not so clear.\n4. Total time in bed is strongly positively related to total minutes asleep.\n\n5. Though the ratio 'TotalMinutesAsleep'\/'TotalTimeInBed' seems to slit to 2 groups, the sample size is not enough to represent the difference.","40020e7a":"# Conclusions\n1. Sleep characteristics:\n    - Users mostly sleep once in a day, 3 times at the most.\n    - On average, a user sleeps 7 hours, and spends 7.5 hours in bed.\n\n2. Sleep and bed: The longer a  user stays in bed, the longer the user sleeps.\n\n3. Sedentary at most of time: Users mostly stay sedentary in a day,nearly 12 hours on average. \n\n4. Sedentary and sleep: The longer a  user stays motionless, the shorter the user sleeps.\n","6ba20670":"### \\[Task\\] Exploring  act_sleep","aedeaf11":"## About data\n- This data is public data [FitBit Fitness Tracker Data](https:\/\/www.kaggle.com\/arashnic\/fitbit) with CC0 license made available through [Mobius](https:\/\/www.kaggle.com\/arashnic)\n- Data source: [FitBit Fitness Tracker Data](https:\/\/www.kaggle.com\/arashnic\/fitbit)\n- Data range: 2016-04-12 ~ 2016-05-12\n- Data content description: This Kaggle data set\ncontains personal fitness tracker from thirty fitbit users. Thirty eligible Fitbit users consented to the submission of personal tracker data, including minute-level output for physical activity, heart rate, and sleep monitoring. It includes\ninformation about daily activity, steps, and heart rate that can be used to explore users\u2019 habits.\n- Data dictionary: The definitions of the variables(column names) can be found in [Fitabase data dictionary (PDF)](https:\/\/www.fitabase.com\/media\/1930\/fitabasedatadictionary102320.pdf)","f883996b":"###   \\[Task\\] 'TotalMinutesAsleep' and activitiy variables","ce480804":"# Recommandation\nFor this analysis:\n- Include reliable research to learn how these characteristics  relate to health. For example: \n    - Being sedentary for 12 hours, how healthy or unhealthy is it  for a user?\n    - How do we evaluate sleep quality, how does it relate to the variables in this dataset. \n\n- Find more similar open datasets for more revelations and insights.\n    - For example, we could possiblly explore more about the sleep ratio (the 5th insight)\n\n\nRegarding to the next 2 business objectives:\n\n**2 - How could these trends apply to Bellabeat customers?** \n\nWe recommend to compare the insights to the data gathered from Bellabeat app, see if they are consistent.\n- If Consistent: Inspect the relation between these data and wellness, and help our customers to improve their wellness by delivering the information. \n- If Not Consistent: Investigate further to find out if there are more insights in between.\n\n\n**3 - How could these trends help influence Bellabeat marketing strategy?**\n\n- These trends along with the insights from Bellabeat app could provide the marketing team a profile of our users and other users.\n- The market team could make data-driven decisions with solid data in hands. We will be more confident to know when and how our customers need us, and include the knowledge into the marketing strategy.\n","52ed8239":"# Analysing data","ec5b1c8e":"## Reading CSV files \nTasks:\nReading the data (csv files).\n\n---\nResult: \n- 18 files read into data frames . \n- Showing basic information of each data frame. ","21df5344":"## Exploring Daily Activities And Sleep\n\n**Section Summary**\n\nTasks:\n1. A quick look at the linear regression plot for total minutes asleep versus 4 categories of activity variables. \n2. A quick look at the linear regression plot for the sleep variables.\n\n---\nResults:\n1. Total minutes asleep are obviously negatively related to the sedentary minutes. Other trends are not so clear.\n2. Total time in bed is strongly positively related to total minutes asleep.\n\n--- \nConclusions:\nMaybe it is not the total minutes asleep that matters, I would like to see how the sleep ratio (of total minutes asleep\/total time in bed) relate to the daily activities.\nThis will be my next subject to be explored.\n\n","8de97ff9":"### \\[Task\\] The variables: distances","a53393b0":"# Objectives: What are some trends in smart device usage\n","d65f84f1":"## 'TotalMinutesAsleep'\/'TotalTimeInBed' invesitigation","c775591d":"###  \\[Task\\] Merging data frames","9825afd3":"# Case Study: How Can a Wellness Technology Company Play It Smart?\nThis is a case study for Google Data Analytics Capstone Project. For the material of presentation, please see [Google Slides](https:\/\/docs.google.com\/presentation\/d\/1H2jWFzw3apevTj94W6wOKGiggiTQRSfI4n7SlEwK2QA\/edit?usp=sharing).\n\nScenario: \n\nMy fictional role is the junior data analyst on the marketing analyst team at Bellabeat, high-tech manufacturer of health-focused products for women. Bellabeats wants to expand their business share of the global smart device market. To achieve the goal, Chief Creative Officer of Bellabeat wants to know:\n1. What are some trends in smart device usage?\n2. How could these trends apply to Bellabeat customers?\n3. How could these trends help influence Bellabeat marketing strategy?\n\nI am asked to **analyze smart device usage data** in order to gain insight into how consumers use non-Bellabeat smart devices. And then **select one Bellabeat product to deliver these insights.**\n\nSince all Bellabeat smart devices connect to **Bellabeat app**, this will be the Bellabeat product for delivering analysis insight.\n\n---\nBellabeats products:\n1. App\n\n- Bellabeat app: The Bellabeat app provides users with health data related to their activity, sleep, stress, menstrual cycle, and mindfulness habits. \n\n2. Devices (all connecting to Bellabeat App)\n\n- Ivy: Designed as an elegant bracelet that monitoring heart rate, respiratory rate, and cardiac coherence, and physical and mental activityLeaf: Bellabeat\u2019s classic wellness tracker can be worn as a bracelet, necklace, or clip, tracking activity, sleep, and stress.\n- Time: This wellness watch to track user activity, sleep, and stress. \n- Spring: This is a water bottle that tracks daily water intake throughout the day. \n","762b6725":"### \\[Task\\] Sleep variables","1adb4562":"### Data types\nTask: \nCheck data types for each column. Change data type if needed.\n\n---\nResult: \n1. Data frame daily_act: Convert \u2018ActivityDate\u2019 from object to datetime.\n2. Data frame sleep_day: Convert \u2018SleepDay\u2019 from object to datetime.","42f384d5":"### Explore the sleep ratio 'TotalMinutesAsleep'\/'TotalTimeInBed'  with other variales\n\n**Section Summary**\n\nTask:\n1. Find the ratio 'TotalMinutesAsleep'\/'TotalTimeInBed' and assign it to new column 'sleep_pct'\n2. Plot the sleep_pct versus other sleep variables.\n\n---\nResults:\n1. Done\n2. Regression plots.\n\n---\nConclusions:\n\nFrom the plots, it seems the data points split to 2 groups: over 80% and lower than 80%. The next step is to split the data into 2 groups and see if there are differences in between.\n","f68be02a":"## Exploring the variables\n\n**Section Summary**\n\nTasks: \nInspect each variable.\n\n---\nResults: \n- Sleep category:\n    - TotalSleepRecords: Number of recorded sleep periods for that day. Includes naps > 60min. The bar chart shows most of the records are 1, and the largest number is 3. \n    - TotalMinutesAsleep: This variable is the total number of minutes classified as being \u201casleep\u201d. The mean (419 min) and median (432 min) are around 7 hours.\n    - TotalTimeInBed: Total minutes spent in bed, including asleep, restless, and awake, that occurred during a defined sleep record. The mean (458 min) and median (463 min) are around 7.5 hours.\n\n\n- Daily activities categories:\n\t- distance: the variables are kilometers traveled in total or during very, fairly , lightly, sedentary activity respectively. The results are displayed by box plots.\n\t- active minutes: the variables are minutes in total or during very, fairly , lightly, sedentary activity respectively. The results are displayed by box plots. The max, mean and median of the sedentary minutes are obviously longer than all 3 other variables.\n\n\t- calories: the variable is total estimated energy expenditure (in kilocalories). The mean is 2389 kcal, and the median is 2207 kcal. \n\n\n\n---\nConclusions:\n\nAmong these variables, I\u2019ll go further to explore the sleep catgories and 4 categories of variables (steps, distance , active minutes, and calories), see how these variables relate to one another.","628e5ef5":"# Processing Data\nBellabeat app collect several kinds of information (variables), such as activities (steps, calories, distance, and duration of activity), sleep, stress, ...etc. It would be useful to find out the variables tracked by both FitBit and Bellabeat and  choose the FitBit data subset with the common variables for analysis.\n\nAfter reading the data frames' information and data dictionary from FitBit. I find that ' daily activities' and 'sleep' are both tracked by Bellabeat and FitBit. In the following process, I will focus on analyzing daily activity and daily sleep.\n\n\nThe FitBit data for analysis:\n- dailyActivity_merged.csv\n- SleepDay.csv","9f0cf83b":"### \\[Task\\] The variables: Sleep","678dbe8c":"###  \\[Task\\] The variables: activie minutes","e032adfa":"# Preparing data","e486a4ec":"### \\[Task\\] The variable: Calories","4231fefc":"### Explore the 2 groups of sleep ratio\n\n**Section Summary**\n\nTasks:\n\n1. Add a new column 'sleep_status' with the 2 kinds of values corresponding to 'sleep_pct': '<=80%' and '>80%'.\n2. check the information of 'sleep_status'.\n\n---\nResults:\n\n1. Done\n2. Counted the number by value, and grouped by 'Id' and 'sleep_status'. Found that\n    1. The records of '<=80%' are few (31 records). Only 8% in total.\n    2. The 31 records of '<=80%' belong to 2 users, mostly belong to one id (contributed 28 records).\n    \n\n---\nConclusion:\n\nIt seems the current sample size splitting to 2 groups is not enough to be representative. So I will not investigate further on this subject.\n","d363b518":"## Data integrety","0e1e07d6":"### duplicates\nTask: \nCheck if there exist duplicated records. Drop them if needed. \n\n---\nResult: \nFound 3 duplicate records in sleep_day  and dropped them.\n"}}