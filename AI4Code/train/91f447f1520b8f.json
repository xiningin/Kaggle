{"cell_type":{"79bbd2fc":"code","36db9cf8":"code","791cdef3":"code","cc424aff":"code","7cf3c39d":"code","1667f2a5":"code","e3439f03":"code","cefa84b5":"code","b8aac3e4":"code","3d92c0f1":"code","269b6dc2":"code","ea76081a":"code","7c688c3d":"code","ac6bbed7":"code","e7381b7c":"code","a33437ea":"code","ccdb9565":"code","474a0e0a":"code","547cbd44":"code","9d55f54e":"markdown","79566a45":"markdown"},"source":{"79bbd2fc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","36db9cf8":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","791cdef3":"train_data.head()","cc424aff":"test_data.head()","7cf3c39d":"train_data.shape","1667f2a5":"#CHECK THE NUMBER OF PEOPLE SURVIVED\ntrain_data[\"Survived\"].value_counts()","e3439f03":"plt.figure(figsize=(10,6))\nsns.heatmap(train_data.isna(),\n            cmap=\"viridis\",\n            cbar_kws={'label': 'Missing Data'})","cefa84b5":"plt.figure(figsize = (5,5))\nplt.bar(list(train_data['Survived'].value_counts().keys()),list(train_data['Survived'].value_counts()),color = ['r','g'])\nplt.show()","b8aac3e4":"sns.set_style('whitegrid')\nsns.countplot(x = \"Survived\", hue = \"Sex\", data = train_data, palette = 'RdBu_r')","3d92c0f1":"sns.set_style('whitegrid')\nsns.countplot(x = \"Survived\", hue = \"Pclass\", data = train_data, palette = 'rainbow')","269b6dc2":"train_data[\"Sex\"].value_counts()","ea76081a":"plt.figure(figsize = (5,5))\nplt.bar(list(train_data['Sex'].value_counts().keys()),list(train_data['Sex'].value_counts()),color = ['tab:blue','tab:pink'])\nplt.show()","7c688c3d":"plt.figure(figsize = (5,5))\nplt.bar(list(train_data[\"Pclass\"].value_counts().keys()),list(train_data[\"Pclass\"].value_counts()), color = ['r','g','b'])\nplt.show()","ac6bbed7":"plt.figure(figsize = (7,8))\nplt.title('Distribution of age')\nplt.hist(train_data[\"Age\"])\nplt.xlabel(\"age\"),plt.ylabel('Number of people')\nplt.show()","e7381b7c":"train_data[\"Pclass\"].value_counts()","a33437ea":"plt.figure(figsize = (12,7))\nsns.boxplot(x = 'Pclass', y = 'Age', data = train_data, palette = 'winter')","ccdb9565":"testing_data = train_data[train_data[\"Age\"].isnull()]","474a0e0a":"testing_data","547cbd44":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","9d55f54e":"hmm","79566a45":"testing"}}