{"cell_type":{"a850cbae":"code","4301afc2":"code","b711717a":"code","2cf9ec52":"code","54b12b1f":"code","5e4faf07":"code","a4bd51dd":"code","72db7e43":"code","85c6752e":"code","06602247":"code","61f88ad2":"code","9eb146b4":"code","e78c573f":"code","12ecbc47":"code","792075fd":"code","daec96d0":"code","576c03fb":"code","73c24ef9":"code","f7ff32a0":"code","c175443e":"code","cd2830b5":"markdown","c0519746":"markdown","3cd04783":"markdown","82b285a4":"markdown","306e408c":"markdown","104d778d":"markdown","2565fc50":"markdown","8688e040":"markdown","b3218f3c":"markdown","fcd453c7":"markdown","27adaaf4":"markdown","caf0a30d":"markdown","c42aac55":"markdown","f36f0915":"markdown"},"source":{"a850cbae":"import torch\nimport numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split","4301afc2":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")","b711717a":"drop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Parch']\ntrain = train.drop(drop_elements, axis = 1)\ntest = test.drop(drop_elements, axis = 1)","2cf9ec52":"def checkNull_fillData(df):\n    for col in df.columns:\n        if len(df.loc[df[col].isnull() == True]) != 0:\n            if df[col].dtype == \"float64\" or df[col].dtype == \"int64\":\n                df.loc[df[col].isnull() == True,col] = df[col].mean()\n            else:\n                df.loc[df[col].isnull() == True,col] = df[col].mode()[0]\n                \ncheckNull_fillData(train)\ncheckNull_fillData(test)","54b12b1f":"str_list = [] \nnum_list = []\nfor colname, colvalue in train.iteritems():\n    if type(colvalue[1]) == str:\n        str_list.append(colname)\n    else:\n        num_list.append(colname)","5e4faf07":"train = pd.get_dummies(train, columns=str_list)\ntest = pd.get_dummies(test, columns=str_list)","a4bd51dd":"train.columns","72db7e43":"test.columns","85c6752e":"X_train = train.drop('Survived', axis=1).values\ntarget_label = train['Survived'].values\nX_test = test.values","06602247":"X_train, X_valid, y_train, y_valid = train_test_split(X_train, target_label, test_size=0.25, random_state=2021)","61f88ad2":"tX_train, tX_valid, ty_train, ty_valid  = map(torch.tensor, (X_train, X_valid, y_train, y_valid))","9eb146b4":"tX_train","e78c573f":"ty_train","12ecbc47":"class Model(torch.nn.Module):\n    def __init__(self, n_neurons):\n        super(Model, self).__init__()\n        self.fc1 = torch.nn.Linear(8, n_neurons)\n        self.ac1 = torch.nn.Sigmoid()\n        self.fc2 = torch.nn.Linear(n_neurons, 2) \n    \n    def forward(self, x):\n        x = self.fc1(x)\n        x = self.ac1(x)\n        x = self.fc2(x)\n        return x\n    \nmodel = Model(50)","792075fd":"loss = torch.nn.CrossEntropyLoss()\noptimizer = torch.optim.Adam(model.parameters(), lr=1.0e-3)","daec96d0":"tX_train = tX_train.float()\ntX_valid = tX_valid.float()","576c03fb":"for epoch in range(500):\n    optimizer.zero_grad()\n    \n    preds = model(tX_train)\n    loss_value = loss(preds, ty_train)\n    loss_value.backward()        \n    optimizer.step()\n\n    test_preds = model.forward(tX_valid)        \n    accuracy = (test_preds.argmax(dim=1) == ty_valid).float().mean()    \n    \n    print(accuracy)","73c24ef9":"pred = torch.from_numpy(test.values)","f7ff32a0":"type(pred)","c175443e":"result = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nresult['Survived'] = model(pred.float()).argmax(dim=1)\nresult.to_csv(\"submission.csv\", index=False)","cd2830b5":"# make pytorch model","c0519746":"# set input and target","3cd04783":"# to tensor ","82b285a4":"# str columns -> onehot encoding","306e408c":"# convert type","104d778d":"# delete columns","2565fc50":"# devide columns","8688e040":"# import basic ","b3218f3c":"# check null data and fill data","fcd453c7":"# loss and optimizer function ","27adaaf4":"# Load Data","caf0a30d":"# Model fitting","c42aac55":"# convert Tensor Type","f36f0915":"# predict test data and submit csv"}}