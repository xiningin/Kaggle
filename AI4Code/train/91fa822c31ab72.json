{"cell_type":{"94e32676":"code","ea0f802c":"code","5f87f3a4":"code","bc4b6b6a":"code","7486210c":"code","c74fe3cc":"code","ddf9efaf":"code","f3d07293":"code","0bc1a283":"code","d790adfb":"code","6bf95f54":"code","ff5d66dc":"code","050d558c":"code","f56f7e69":"code","bcaf7d2a":"code","a2895d27":"code","dec5bc70":"code","69ba1155":"code","e2b5ee48":"code","f6b72000":"code","e6cdc65b":"code","23dddf89":"code","6c6d7192":"code","d43f5d98":"code","cd52e83d":"code","40b4f6bb":"code","55b7e0ad":"code","b70972d2":"code","e927a080":"code","f92334f8":"code","ab3e77c7":"code","3327df50":"code","9343e97e":"code","08697fd2":"code","feccbb0e":"code","cdc909b2":"code","c0fa0f1a":"code","feb530a8":"code","cba28bab":"code","2d1a03d2":"code","71e77a0d":"code","1614b2bf":"code","9c104739":"code","9419264d":"code","cdb5e315":"code","df692806":"code","9a992299":"code","2a7c7d20":"code","6b989b9c":"code","369c0e44":"code","1a010065":"code","5a0b20d4":"markdown","81a0d54f":"markdown","d3a149ce":"markdown"},"source":{"94e32676":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ea0f802c":"df = pd.read_csv(\"..\/input\/online-retail-ii-uci\/online_retail_II.csv\")","5f87f3a4":"df.head()","bc4b6b6a":"df.isna().sum()","7486210c":"df.info()","c74fe3cc":"df.shape","ddf9efaf":"df.dropna(inplace = True)","f3d07293":"#fatura basina ortalama kac para kazanilmistir? (iki de\u011fi\u015fkeni \u00e7arparak yeni bir de\u011fi\u015fken olu\u015fturmak gerekmektedir)\ndf[\"TotalPrice\"] = df[\"Quantity\"]*df[\"Price\"]","0bc1a283":"df.describe([0.01,0.05,0.10,0.25,0.50,0.75,0.90,0.95, 0.99]).T","d790adfb":"for feature in [\"Quantity\",\"Price\",\"TotalPrice\"]:\n\n    Q1 = df[feature].quantile(0.01)\n    Q3 = df[feature].quantile(0.99)\n    IQR = Q3-Q1\n    upper = Q3 + 1.5*IQR\n    lower = Q1 - 1.5*IQR\n\n    if df[(df[feature] > upper) | (df[feature] < lower)].any(axis=None):\n        print(feature,\"yes\")\n        print(df[(df[feature] > upper) | (df[feature] < lower)].shape[0])\n    else:\n        print(feature, \"no\")","6bf95f54":"df.head()","ff5d66dc":"df[[\"InvoiceDate\"]] = df[[\"InvoiceDate\"]].apply(pd.to_datetime)","050d558c":"df.info()","f56f7e69":"df[\"InvoiceDate\"].min()","bcaf7d2a":"df[\"InvoiceDate\"].max()","a2895d27":"import datetime as dt\ntoday_date = dt.datetime(2010,12,9)","dec5bc70":"df[\"Customer ID\"] = df[\"Customer ID\"].astype(int)","69ba1155":"#Evet \u015fimdi ne yapmam\u0131z laz\u0131m? \n\n#Her bir m\u00fc\u015fteri i\u00e7in bug\u00fcn\u00fcn tarihinden m\u00fc\u015fterilerin son sat\u0131n alma tarihini \u00e7\u0131karmam\u0131z laz\u0131m.\n\n#Tekille\u015fmi\u015f m\u00fc\u015fteri son tarihleri elimizde \u00f6yleyse ","e2b5ee48":"(today_date - df.groupby(\"Customer ID\").agg({\"InvoiceDate\":\"max\"})).head()","f6b72000":"temp_df = (today_date - df.groupby(\"Customer ID\").agg({\"InvoiceDate\":\"max\"}))","e6cdc65b":"temp_df.rename(columns={\"InvoiceDate\": \"Recency\"}, inplace = True)","23dddf89":"temp_df","6c6d7192":"recency_df = temp_df[\"Recency\"].apply(lambda x: x.days)","d43f5d98":"recency_df.head()","cd52e83d":"temp_df = df.groupby([\"Customer ID\",\"Invoice\"]).agg({\"Invoice\":\"count\"})","40b4f6bb":"temp_df.head()","55b7e0ad":"temp_df.groupby(\"Customer ID\").agg({\"Invoice\":\"count\"})","b70972d2":"freq_df = temp_df.groupby(\"Customer ID\").agg({\"Invoice\":\"count\"})\nfreq_df.rename(columns={\"Invoice\": \"Frequency\"}, inplace = True)\nfreq_df.head()","e927a080":"monetary_df = df.groupby(\"Customer ID\").agg({\"TotalPrice\":\"sum\"})","f92334f8":"monetary_df.head()","ab3e77c7":"monetary_df.rename(columns={\"TotalPrice\": \"Monetary\"}, inplace = True)","3327df50":"print(recency_df.shape,freq_df.shape,monetary_df.shape)","9343e97e":"rfm = pd.concat([recency_df, freq_df, monetary_df],  axis=1)","08697fd2":"rfm.head()","feccbb0e":"pd.qcut(rfm['Frequency'], 6,labels = [1, 2, 3, 4,5],duplicates='drop').value_counts()","cdc909b2":"rfm[\"RecencyScore\"] = pd.qcut(rfm['Recency'], 5, labels = [5, 4, 3, 2, 1])\nrfm[\"FrequencyScore\"] = pd.qcut(rfm['Frequency'], 6,labels = [1, 2, 3, 4,5],duplicates='drop')\n#rfm[\"FrequencyScore\"] = pd.qcut(rfm['Frequency'], 5, labels = [1, 2, 3, 4, 5])\nrfm[\"MonetaryScore\"] = pd.qcut(rfm['Monetary'], 5, labels = [1, 2, 3, 4, 5])","c0fa0f1a":"rfm.head()","feb530a8":"(rfm['RecencyScore'].astype(str) + \n rfm['FrequencyScore'].astype(str) + \n rfm['MonetaryScore'].astype(str)).head()","cba28bab":"rfm[\"RFM_SCORE\"] = rfm['RecencyScore'].astype(str) + rfm['FrequencyScore'].astype(str) + rfm['MonetaryScore'].astype(str)","2d1a03d2":"rfm.head()","71e77a0d":"rfm.describe().T","1614b2bf":"rfm[rfm[\"RFM_SCORE\"] == \"555\"].head()","9c104739":"rfm[rfm[\"RFM_SCORE\"] == \"111\"].head()","9419264d":"seg_map = {\n    r'[1-2][1-2]': 'Hibernating',\n    r'[1-2][3-4]': 'At Risk',\n    r'[1-2]5': 'Can\\'t Loose',\n    r'3[1-2]': 'About to Sleep',\n    r'33': 'Need Attention',\n    r'[3-4][4-5]': 'Loyal Customers',\n    r'41': 'Promising',\n    r'51': 'New Customers',\n    r'[4-5][2-3]': 'Potential Loyalists',\n    r'5[4-5]': 'Champions'\n}","cdb5e315":"rfm['Segment'] = rfm['RecencyScore'].astype(str) + rfm['FrequencyScore'].astype(str)\nrfm['Segment'] = rfm['Segment'].replace(seg_map, regex=True)\nrfm.head()","df692806":"rfm[[\"Segment\", \"Recency\",\"Frequency\",\"Monetary\"]].groupby(\"Segment\").agg([\"mean\",\"count\"])","9a992299":"rfm[rfm[\"Segment\"] == \"Need Attention\"].head()","2a7c7d20":"rfm[rfm[\"Segment\"] == \"New Customers\"].index","6b989b9c":"new_df = pd.DataFrame()\nnew_df[\"NewCustomerID\"] = rfm[rfm[\"Segment\"] == \"New Customers\"].index","369c0e44":"new_df.head()","1a010065":"new_df.to_csv(\"new_customers.csv\")","5a0b20d4":"# Monetary","81a0d54f":"# Frequency","d3a149ce":"![image.png](attachment:image.png)\n"}}