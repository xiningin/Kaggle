{"cell_type":{"ffc5bba2":"code","388aeea3":"code","0af6de13":"code","676b0132":"code","d9fb9742":"code","edec69c5":"code","35b141f5":"code","8e2a918d":"code","75fe5b1c":"code","ad373b08":"code","ffa3f042":"code","6898f97d":"code","782ef5e1":"code","415c7744":"code","2f542aa1":"code","9aa6b76a":"code","37e077e5":"code","636d7aa3":"code","bdb59cd5":"code","8c7173fe":"code","f25e1215":"code","51716364":"code","aa2c7816":"code","0e19e86a":"code","dec127de":"code","6dfafcaf":"code","da6151b2":"code","2fbd0975":"code","73c6e1b3":"code","1c8973a6":"code","282ced91":"code","2cbbae58":"code","fdc7d70e":"code","658c8520":"markdown","a4198718":"markdown","c829e2a7":"markdown","d3e4808a":"markdown","b67157b3":"markdown","6eb56d1b":"markdown","aebd9355":"markdown","3a2a4d1b":"markdown","7434ac72":"markdown","52c6139f":"markdown","42153c06":"markdown","c7cae66d":"markdown","5938acc4":"markdown","0d72102c":"markdown","dbf39573":"markdown","669922d9":"markdown","ef51bad1":"markdown","da3fcdc4":"markdown"},"source":{"ffc5bba2":"import numpy as np\nimport pandas as pd\nimport os\nimport re\nimport seaborn as sns\nimport keras\n\nfrom matplotlib import pyplot as plt\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\nfrom nltk.stem import WordNetLemmatizer\nfrom nltk import word_tokenize\nfrom sklearn.metrics import f1_score, precision_score, recall_score, accuracy_score\n\nfrom wordcloud import WordCloud, STOPWORDS ","388aeea3":"data = pd.read_csv('\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv')\nreviews = pd.read_csv('\/kaggle\/input\/google-play-store-apps\/googleplaystore_user_reviews.csv')","0af6de13":"reviews","676b0132":"reviews['Sentiment'].notna().count()","d9fb9742":"reviews['Sentiment'].value_counts()","edec69c5":"reviews['Sentiment'].dropna(axis='rows');","35b141f5":"reviews['Sentiment'].isna().count()","8e2a918d":"reviews","75fe5b1c":"reviews = reviews[reviews['Translated_Review'].notna()]","ad373b08":"lemmatizer = WordNetLemmatizer()\nmax_words = 0\nuniq_words = set()\n\ndef clean_text(value):\n    global max_words, uniq_words\n    val = re.sub('[^a-zA-Z0-9]', ' ', value)\n    \n    vals = [lemmatizer.lemmatize(w) for w in word_tokenize(val.lower())]\n    \n    if len(vals) > max_words:\n        max_words = len(vals)\n\n    uniq_words = uniq_words.union(vals)\n    return ' '.join(vals)","ffa3f042":"reviews['Translated_Review_tokens'] = reviews['Translated_Review'].map(clean_text)\nnum_uniq_words = len(uniq_words)","6898f97d":"def show_word_cloud(text):\n    stopwords = set(STOPWORDS) \n\n    wordcloud = WordCloud(\n        width = 800,\n        height = 800,\n        background_color ='white',\n        stopwords = stopwords,\n        min_font_size = 10\n    ).generate(text)\n       \n    plt.figure(figsize = (8, 8), facecolor = None)\n    plt.imshow(wordcloud)\n    plt.axis(\"off\")\n    plt.tight_layout(pad = 0)\n    plt.show()","782ef5e1":"show_word_cloud(reviews['Translated_Review_tokens'].str.cat(sep=' '))","415c7744":"tokenizer = keras.preprocessing.text.Tokenizer(num_words=num_uniq_words)\ntokenizer.fit_on_texts(reviews['Translated_Review_tokens'])","2f542aa1":"reviews['Sentiment'] = reviews['Sentiment'].astype('category')","9aa6b76a":"x_train_reviews, x_validate_reviews, y_train_reviews, y_validate_reviews = train_test_split(\n    reviews['Translated_Review_tokens'],\n    reviews['Sentiment'],\n    test_size=0.2,\n    random_state=42,\n)","37e077e5":"num_classes = 3\nbatch_size=100","636d7aa3":"x_train_reviews_bin = tokenizer.texts_to_matrix(x_train_reviews, mode='binary')\nx_validate_reviews_bin = tokenizer.texts_to_matrix(x_validate_reviews, mode='binary')","bdb59cd5":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\n\ny_train_reviews = le.fit_transform(y_train_reviews)\ny_validate_reviews = le.fit_transform(y_validate_reviews)","8c7173fe":"y_train_reviews_ohe = keras.utils.to_categorical(y_train_reviews, num_classes)\ny_validate_reviews_ohe = keras.utils.to_categorical(y_validate_reviews, num_classes)","f25e1215":"model = keras.Sequential()\nmodel.add(keras.layers.Dense(186, input_shape=(num_uniq_words,)))\nmodel.add(keras.layers.Activation('relu'))\nmodel.add(keras.layers.Dropout(0.5))\nmodel.add(keras.layers.Dense(num_classes))\nmodel.add(keras.layers.Activation('softmax'))\nmodel.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])","51716364":"early_stopping = keras.callbacks.EarlyStopping(monitor='value_loss')\n\nhistory = model.fit(\n    x_train_reviews_bin,\n    y_train_reviews_ohe,\n    epochs=10,\n    batch_size=batch_size,\n    verbose=1,\n    validation_split=0.1,\n    callbacks=[early_stopping],\n)","aa2c7816":"score = model.evaluate(x_validate_reviews_bin, y_validate_reviews_ohe, batch_size=batch_size)\nprint(score)","0e19e86a":"print(f'loss: {score[0]}, accuracy: {score[1]}')","dec127de":"y_validate_predicted = model.predict(x_validate_reviews_bin)\ny_validate_predicted = y_validate_predicted.astype('int')","6dfafcaf":"prec = precision_score(y_validate_predicted, y_validate_reviews_ohe, average=\"macro\")\nprint(f'precision: {prec}')","da6151b2":"x_train_reviews_seq = tokenizer.texts_to_sequences(x_train_reviews)\nx_validate_reviews_seq = tokenizer.texts_to_sequences(x_validate_reviews)","2fbd0975":"x_train_reviews_seq = keras.preprocessing.sequence.pad_sequences(x_train_reviews_seq, maxlen=max_words)\nx_validate_reviews_seq = keras.preprocessing.sequence.pad_sequences(x_validate_reviews_seq, maxlen=max_words)","73c6e1b3":"model = keras.Sequential()\nmodel.add(keras.layers.Embedding(num_uniq_words, 250, mask_zero=True))\nmodel.add(keras.layers.LSTM(128,dropout=0.4, recurrent_dropout=0.4, return_sequences=True))\nmodel.add(keras.layers.LSTM(64,dropout=0.5, recurrent_dropout=0.5, return_sequences=False))\nmodel.add(keras.layers.Dense(num_classes,activation='softmax'))\nmodel.compile(loss='categorical_crossentropy',optimizer=keras.optimizers.Adam(lr=0.001),metrics=['accuracy'])\nmodel.summary()","1c8973a6":"history = model.fit(\n    x_train_reviews_seq,\n    y_train_reviews_ohe,\n    validation_data=(x_validate_reviews_seq, y_validate_reviews_ohe),\n    epochs=5,\n    batch_size=batch_size,\n    verbose=1,\n    callbacks=[early_stopping],\n)","282ced91":"model.save('lstm_model.h5')","2cbbae58":"y_validate_predicted = model.predict_classes(x_validate_reviews_seq)\ny_validate_predicted = y_validate_predicted.astype('int')","fdc7d70e":"acc = accuracy_score(y_validate_predicted, y_validate_reviews.astype('int'))\nprec = precision_score(y_validate_predicted, y_validate_reviews.astype('int'), average=\"macro\")\nprint(f'accuracy: {acc}, precision: {prec}')","658c8520":"### Build the words cloud","a4198718":"### Visualize data via words cloud","c829e2a7":"## TODO\n - \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439\n - \u043f\u043e \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0443 \u043e\u0442\u0437\u044b\u0432\u043e\u0432, ...","d3e4808a":"## LSTM\nLet's build LSTM model and look at it's results","b67157b3":"Let's look how many sentiments do we have","6eb56d1b":"### Text preparation\n - lowercase texts\n - get count of uniq texts\n - lemmatize words\n - drop stopwords - I tried it, but results was worse","aebd9355":"### Validation","3a2a4d1b":"Let's look at sentiments values","7434ac72":"### Split our data to train and validate sets","52c6139f":"### Training","42153c06":"### Convert data to OHE representation","c7cae66d":"Well, let's drop rows without sentiments","5938acc4":"We see that quality of the LSTM model is better.","0d72102c":"### Drop rows without data","dbf39573":"## BOW (Bag of words) approach","669922d9":"## Google play store apps\n\nReviews sentiment classification","ef51bad1":"### Let's look at our data","da3fcdc4":"### Build the model"}}