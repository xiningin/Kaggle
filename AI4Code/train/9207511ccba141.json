{"cell_type":{"ba8150ae":"code","11d19e76":"code","a425ad40":"code","6628a0bf":"code","13a42ef0":"code","71ba4625":"code","30d73b3c":"code","8b8dcb3d":"code","b3cd2aea":"code","ec161563":"code","a096281b":"code","0f0be7f1":"code","21b4bed4":"code","06974487":"code","b245bc8a":"code","e3f3c039":"code","cc090a7e":"markdown","9579570b":"markdown","98f67dbb":"markdown","0c77353f":"markdown","7a455902":"markdown","4e67f2ad":"markdown","3a4541f9":"markdown","9e1a6581":"markdown"},"source":{"ba8150ae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","11d19e76":"#Read\ndf_pgen1 = pd.read_csv('..\/input\/solar-power-generation-data\/Plant_1_Generation_Data.csv')\ndf_pgen2 = pd.read_csv('..\/input\/solar-power-generation-data\/Plant_1_Weather_Sensor_Data.csv')\ndf_pgen3 = pd.read_csv('..\/input\/solar-power-generation-data\/Plant_2_Generation_Data.csv')\ndf_pgen4 = pd.read_csv('..\/input\/solar-power-generation-data\/Plant_2_Weather_Sensor_Data.csv')","a425ad40":"df_pgen1.head()#generator 1","6628a0bf":"df_pgen2.head()#weather sensor 1\ndf_pgen2.tail()","13a42ef0":"df_pgen3.head()#generator 2","71ba4625":"df_pgen4.head()#weather sensor 2","30d73b3c":"#df_pgen1['DATE_TIME'].head()\n#change all object into datetime dtypes\ndf_pgen1['DATE_TIME'] = pd.to_datetime(df_pgen1['DATE_TIME'],format = '%d-%m-%Y %H:%M')\ndf_pgen2['DATE_TIME'] = pd.to_datetime(df_pgen2['DATE_TIME'],format = '%Y-%m-%d %H:%M')\ndf_pgen3['DATE_TIME'] = pd.to_datetime(df_pgen3['DATE_TIME'],format = '%Y-%m-%d %H:%M')\ndf_pgen4['DATE_TIME'] = pd.to_datetime(df_pgen4['DATE_TIME'],format = '%Y-%m-%d %H:%M')\n#df_pgen1.dtypes","8b8dcb3d":"#mean value of daily yield from generator 1\nprint(\"Mean Daily Yield from generator 1 : {}\".format(df_pgen1['DAILY_YIELD'].mean()))\n#mean value of daily yield from generator 2\nprint(\"Mean Daily Yield from generator 2 : {}\".format(df_pgen3['DAILY_YIELD'].mean()))\n\n\n\n#finding the mean of both generator \n\ntotal_dailyyield = df_pgen1['DAILY_YIELD'].sum()+df_pgen3['DAILY_YIELD'].sum()\ntotal_generator = len(df_pgen3['DAILY_YIELD'])+len(df_pgen1['DAILY_YIELD'])\n\nMean_of_Both = float(total_dailyyield)\/float(total_generator)\nprint(\"Mean from both generator : {}\".format( Mean_of_Both ))","b3cd2aea":"#df_pgen2.tail()\n#df_pgen4.tail() \n\n#just taking the date \ndf_pgen2['DATE'] = pd.to_datetime(df_pgen2['DATE_TIME']).dt.date\ndf_pgen2['DATE'] = pd.to_datetime(df_pgen2['DATE'])\n\n\ndf_pgen4['DATE'] = pd.to_datetime(df_pgen4['DATE_TIME']).dt.date\ndf_pgen4['DATE'] = pd.to_datetime(df_pgen4['DATE'])\n\n#sum by day\nprint('Total Irridation per day in Generator 1:')\nIrridation1 = df_pgen2.groupby([df_pgen2['DATE'].dt.date])['IRRADIATION'].sum()\nprint(Irridation1)\n\nprint(\"\\n\\n\")\n\nprint('Total Irridation per day in Generator 2:')\nIrridation2 = df_pgen4.groupby([df_pgen4['DATE'].dt.date])['IRRADIATION'].sum()\nprint(Irridation2)","ec161563":"print(\"Generator 1\")\nprint(\"Max Ambient : {}\".format(df_pgen2['AMBIENT_TEMPERATURE'].max()))\nprint(\"Max Module Temperature : {}\\n\\n\".format(df_pgen2['MODULE_TEMPERATURE'].max()))\n\nprint(\"Generator 2\")\nprint(\"Max Ambient : {}\".format(df_pgen4['AMBIENT_TEMPERATURE'].max()))\nprint(\"Max Module Temperature : {}\".format(df_pgen4['MODULE_TEMPERATURE'].max()))","a096281b":"print(\"Generator 1 inverter  = {}\".format(df_pgen1['SOURCE_KEY'].nunique()))#the inverter only available in the solar\nprint(\"Generator 2 inverter  = {}\".format(df_pgen3['SOURCE_KEY'].nunique()))#power generator,(1 & 3 == generator)","0f0be7f1":"#copy paste from above \n#just taking the date for dataframe 1 for Generator 1\ndf_pgen1['DATE'] = pd.to_datetime(df_pgen1['DATE_TIME']).dt.date\ndf_pgen1['DATE'] = pd.to_datetime(df_pgen1['DATE'])\n\n#max & min AC Power by day\nprint('Maximum AC power in Generator 1 :')\nMax_AC_1 = df_pgen1.groupby([df_pgen1['DATE'].dt.date])['AC_POWER'].max()\nprint(Max_AC_1)\n\nprint('\\n\\n\\nMinimum AC Power in Generator 1 :')\nMin_AC_1 = df_pgen1.groupby([df_pgen1['DATE'].dt.date])['AC_POWER'].min()\nprint(Min_AC_1)\n\n#max & min DC Power by day\nprint('Maximum DC power in Generator 1 :')\nMax_DC_1 = df_pgen1.groupby([df_pgen1['DATE'].dt.date])['DC_POWER'].max()\nprint(Max_DC_1)\n\nprint('\\n\\n\\nMinimum DC Power in Generator 1 :')\nMin_DC_1 = df_pgen1.groupby([df_pgen1['DATE'].dt.date])['DC_POWER'].min()\nprint(Min_DC_1)\n","21b4bed4":"#copy paste from above \n#just taking the date for dataframe 3 for Generator 2\ndf_pgen3['DATE'] = pd.to_datetime(df_pgen3['DATE_TIME']).dt.date\ndf_pgen3['DATE'] = pd.to_datetime(df_pgen3['DATE'])\n\n#max & min AC Power by day\nprint('Maximum AC power in Generator 3 :')\nMax_AC_2 = df_pgen3.groupby([df_pgen1['DATE'].dt.date])['AC_POWER'].max()\nprint(Max_AC_2)\n\nprint('\\n\\n\\nMinimum AC Power in Generator 3 :')\nMin_AC_2 = df_pgen3.groupby([df_pgen1['DATE'].dt.date])['AC_POWER'].min()\nprint(Min_AC_2)\n\n#max & min DC Power by day\nprint('Maximum DC power in Generator 3 :')\nMax_DC_2 = df_pgen3.groupby([df_pgen1['DATE'].dt.date])['DC_POWER'].max()\nprint(Max_DC_2)\n\nprint('\\n\\n\\nMinimum DC Power in Generator 3 :')\nMin_DC_2 = df_pgen3.groupby([df_pgen1['DATE'].dt.date])['DC_POWER'].min()\nprint(Min_DC_2)","06974487":"print(\"Generator 1\")\nprint(df_pgen1[df_pgen1['DC_POWER'] == df_pgen1['DC_POWER'].max()]['SOURCE_KEY'],\"\\n\")#max DC\nprint(df_pgen1[df_pgen1['AC_POWER'] == df_pgen1['AC_POWER'].max()]['SOURCE_KEY'])#max AC\n\nprint(\"\\n\\ngenerator 2\")\nprint(df_pgen3[df_pgen3['DC_POWER'] == df_pgen3['DC_POWER'].max()]['SOURCE_KEY'],\"\\n\")#max DC\nprint(df_pgen3[df_pgen3['AC_POWER'] == df_pgen3['AC_POWER'].max()]['SOURCE_KEY'])#max AC","b245bc8a":"print(\"Inverter With The Maximum AC\/DC Power Rank in Generator 1\")\n'''\nprint(df_pgen1.sort_values(by='DC_POWER', ascending=False)['SOURCE_KEY'].unique())#the source key indicate the inverter\nprint(\"AC\")\n\nprint(df_pgen1.sort_values(by='AC_POWER', ascending=False)['SOURCE_KEY'].unique())\nprint(df_pgen1.sort_values(by='AC_POWER', ascending=False))#full information\n'''\ninverter_1 =df_pgen1.sort_values(by='DC_POWER', ascending=False)['SOURCE_KEY'].unique()#since the inverter for maximum AC and DC same\nfor i in range(len(inverter_1)):\n    print(i+1,\" \",inverter_1[i])\n\nprint(\"\\nInverter With The Maximum AC\/DC Power Rank in Generator 2\")\ninverter_2 =df_pgen3.sort_values(by='DC_POWER', ascending=False)['SOURCE_KEY'].unique()#since the inverter for maximum AC and DC same\nfor i in range(len(inverter_2)):\n    print(i+1,\" \",inverter_2[i])\n\n","e3f3c039":"print(\"The sum of missing data in dataframe 1\")\nprint(df_pgen1.isnull().sum())\n\nprint(\"\\nThe sum of missing data in dataframe 2\")\nprint(df_pgen2.isnull().sum())\n\nprint(\"\\nThe sum of missing data in dataframe 3\")\nprint(df_pgen3.isnull().sum())\n\nprint(\"\\nThe sum of missing data in dataframe 4\")\nprint(df_pgen4.isnull().sum())","cc090a7e":"**Generator 2**","9579570b":"# Task 5 : the maximum\/minimum amount of DC\/AC Power generated in a time interval\/day","98f67dbb":"# **Task 1 : mean Value of daily yield**","0c77353f":"**Generator 1**","7a455902":"# Task 4 : How many inverters are there for each plant?","4e67f2ad":"# Task 3 :the max ambient and module temperature","3a4541f9":"# Task 6 : inverter with maximum Maximum AC\/DC Power","9e1a6581":"# Task 2 : Total Irradation per day"}}