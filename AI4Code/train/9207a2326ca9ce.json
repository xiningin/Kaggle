{"cell_type":{"b9ffdaad":"code","0748cd17":"code","0dca65ad":"code","d9a5ff9c":"code","4d50befe":"code","e7466fbf":"code","27c81954":"code","faf7ae2d":"code","f040c6c0":"code","cebf19cd":"code","b46a85e7":"code","4f2debfe":"code","f884c2fb":"code","4f56e340":"code","887f805c":"code","771af521":"code","d2824422":"code","6a6c4704":"code","09327cc9":"code","7815ddba":"code","c914ae1b":"code","d5d969c5":"code","aecb40bf":"code","987def3c":"code","603913ca":"code","9db38bb4":"code","c02ae4e0":"code","a84a8993":"code","1cf12261":"markdown","fcb3d41f":"markdown","7ebd0e38":"markdown","9226460e":"markdown","6a692abf":"markdown","c24cdc14":"markdown","4304bf36":"markdown","90f4074a":"markdown"},"source":{"b9ffdaad":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport pandas as pd\nimport io\nimport seaborn as sns\nimport numpy as np\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor, RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier, KNeighborsRegressor\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.model_selection import GridSearchCV,RandomizedSearchCV,KFold,StratifiedKFold\nfrom xgboost import XGBRegressor\nfrom sklearn.metrics import mean_absolute_error\nimport sklearn.metrics as metrics\nimport warnings\nwarnings.filterwarnings('ignore')\n \nsns.set_style('ticks') #No grid with ticks\nprint(sns.__version__)","0748cd17":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0dca65ad":"df = pd.read_csv('\/kaggle\/input\/pizza-price-prediction\/pizza_v2.csv')\ndf.head()","d9a5ff9c":"df_orig = df.copy()","4d50befe":"df.isna().any()","e7466fbf":"df.info()","27c81954":"df['price_rupiah'] = df['price_rupiah'].apply(lambda x: x[2:])\ndf['price_rupiah'] = df['price_rupiah'].apply(lambda x: x.replace(',',''))\n\ndf_orig['price_rupiah'] = df_orig['price_rupiah'].apply(lambda x: x[2:])\ndf_orig['price_rupiah'] = df_orig['price_rupiah'].apply(lambda x: x.replace(',',''))","faf7ae2d":"df['price_rupiah'] = df['price_rupiah'].astype(int)\ndf_orig['price_rupiah'] = df_orig['price_rupiah'].astype(int)","f040c6c0":"cat_cols = [i for i in df.columns if df[i].dtype not in [float, int]]","cebf19cd":"cat_cols","b46a85e7":"for i in cat_cols:\n    print(df[i].unique())","4f2debfe":"size_cat = {'small':'0', 'reguler':'1', 'medium':'2', 'large':'3','jumbo':'4','XL':'5' }\n\ndf['size'] = df['size'].map(size_cat)","f884c2fb":"df['size'] = df['size'].astype(int)","4f56e340":"cat_cols.remove('size')","887f805c":"from sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\nfor i in cat_cols:\n    df[i] = label_encoder.fit_transform(df[i])","771af521":"df.info()","d2824422":"df_orig.info()","6a6c4704":"plt.figure(figsize = (50, 40))\nplotnumber = 1\n\nfor i in df_orig.columns:\n    if plotnumber <= 7:\n        ax = plt.subplot(4, 2, plotnumber)\n        sns.distplot(df[i])\n        plt.xlabel(i, fontsize = 35)\n        \n    plotnumber += 1\n    \nplt.show()","09327cc9":"def dist_box(data):\n # function plots a combined graph for univariate analysis of continous variable \n #to check spread, central tendency , dispersion and outliers  \n    Name=data.name.upper()\n    fig,(ax_box,ax_dis)  =plt.subplots(2,1,gridspec_kw = {\"height_ratios\": (.25, .75)},figsize=(8, 5))\n    mean=data.mean()\n    median=data.median()\n    mode=data.mode().tolist()[0]\n    fig.suptitle(\"SPREAD OF DATA FOR \"+ Name  , fontsize=18, fontweight='bold')\n    sns.boxplot(x=data,showmeans=True, orient='h',color=\"violet\",ax=ax_box)\n    ax_box.set(xlabel='')\n    sns.distplot(data,kde=False,color='blue',ax=ax_dis)\n    ax_dis.axvline(mean, color='r', linestyle='--',linewidth=2)\n    ax_dis.axvline(median, color='g', linestyle='-',linewidth=2)\n    ax_dis.axvline(mode, color='y', linestyle='-',linewidth=2)\n    plt.legend({'Mean':mean,'Median':median,'Mode':mode})","7815ddba":"for i in range(len(df.columns)):\n    dist_box(df[df.columns[i]])","c914ae1b":"# heatmap\nplt.figure(figsize = (16, 7))\n\ncorr = df.corr()\nmask = np.triu(np.ones_like(corr, dtype = bool))\n\nsns.heatmap(corr, mask = mask, annot = True, fmt = '0.2g', linewidths = 1)\nplt.show()","d5d969c5":"plt.figure(figsize=(16,7))\nsns.heatmap(df.corr(),annot=True ,cmap=\"coolwarm\")\nplt.show()","aecb40bf":"## SIZE VS PRICE\n\nsns.boxplot(x=df['size'],\n              y=df['price_rupiah'])","987def3c":"## DIAMETER VS PRICE\n\nsns.boxplot(x=df['diameter'],\n           y=df['price_rupiah'])","603913ca":"df.info()","9db38bb4":"cols = ['size','diameter','extra_sauce','variant']\n\ny = df['price_rupiah']\nX = df[cols]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state = 0)","c02ae4e0":"m1 = XGBRegressor()\nm1.fit(X_train, y_train)\npreds = m1.predict(X_test)\n\nmae = mean_absolute_error(y_test, preds)\nprint('Mean Absolute Error :', mae)\n\nr2 = r2_score(y_test, preds)\nprint('R-2 score :', r2)","a84a8993":"m2 = LinearRegression()\nm2.fit(X_train, y_train)\npreds = m2.predict(X_test)\n\nmae = mean_absolute_error(y_test, preds)\nprint('Mean Absolute Error :', mae)\n\nr2 = r2_score(y_test, preds)\nprint('R-2 score is ', r2)","1cf12261":"### LINEAR REGRESSION","fcb3d41f":"### UNIVARIATE AND MULTIVARIATE ANALYSIS","7ebd0e38":"### XGB","9226460e":"## EXPLORATORY DATA ANALYSIS","6a692abf":"**Diameter** and **Size** have the strongest correlation to the price of pizza.","c24cdc14":"This shows the distribution of the variable.","4304bf36":"## MODELLING","90f4074a":"## LIBRARY IMPORTS"}}