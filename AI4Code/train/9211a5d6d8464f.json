{"cell_type":{"e5c65d9f":"code","d95d63d7":"code","78ec9362":"code","11ef43af":"code","a78293cf":"code","02de33ae":"code","9a09e3c8":"code","0dc10281":"code","e3e12e0e":"code","62fc0e41":"code","d8e272c0":"code","cd7fc89a":"code","4c038749":"code","8ad7ced0":"code","468c06b6":"markdown","31847a5f":"markdown","b7074618":"markdown","5e262232":"markdown"},"source":{"e5c65d9f":"!pip install openpyxl\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d95d63d7":"athlete_events = pd.read_excel(\"..\/input\/olympics-data\/Olympics Dataset.xlsx\", sheet_name = 0)","78ec9362":"contry_def = pd.read_excel(\"..\/input\/olympics-data\/Olympics Dataset.xlsx\", sheet_name = 1)","11ef43af":"print(\"##################### Shape #####################\")\nprint(athlete_events.shape)\n\nprint(\"##################### Types #####################\")\nprint(athlete_events.dtypes)\n\nprint(\"##################### Head #####################\")\nprint(athlete_events.head())\n\nprint(\"##################### Tail #####################\")\nprint(athlete_events.tail())\n\nprint(\"##################### NA #####################\")\nprint(athlete_events.isnull().sum())\n\nprint(\"##################### Summary #####################\")\nprint(athlete_events.describe().T)","a78293cf":"categoric_columns = [col for col in athlete_events.columns if athlete_events[col].dtypes ==\"O\" ]\nprint(categoric_columns)","02de33ae":"def categoric_summary(dataframe, col_name, plot=False):\n    print(pd.DataFrame({ col_name : dataframe[col_name].value_counts()}))\n    \n    if plot:\n        sns.countplot(x=dataframe[col_name], \n                      data=dataframe,\n                      palette=\"Greens_d\")\n        plt.title(str(col_name))","9a09e3c8":"categoric_summary(athlete_events,\n                 \"Sex\",\n                 plot=True)","0dc10281":"categoric_summary(athlete_events,\n                 \"Medal\",\n                 plot=True)","e3e12e0e":"athlete_events[\"Age\"].min()\nathlete_events[\"Age\"].max()\n\nathlete_events[\"Age_Cat\"] = pd.cut(athlete_events[\"Age\"], bins = [0, 18, 25, 35, 45, 55, 65, 75, 85, 97],\n                                                          labels = [\"0-18\", \"19-25\", \"26-35\", \"36-45\", \"46-55\", \"56-65\", \"66-75\", \"76-85\", \"86-97\"])","62fc0e41":"categoric_summary(athlete_events,\n                 \"Age_Cat\",\n                 plot=True)","d8e272c0":"df = pd.DataFrame(athlete_events[\"Games\"].value_counts())\ndf.reset_index(inplace = True)\ndf.sort_values(\"index\", ascending=False, inplace=True)\ndf.head()","cd7fc89a":"df = athlete_events.groupby([\"Year\",\"Season\"]).agg({\"ID\": \"count\"}).sort_values(\"ID\", ascending=False)\ndf.reset_index(inplace = True)\ndf.head()","4c038749":"new_df = pd.DataFrame([str(row[0])+\"_\"+str(row[1].upper()) for row in df.values])\nnew_df[\"count\"] = df.ID\nnew_df = new_df.head(10)","8ad7ced0":"figure, axis = plt.subplots()\nplt.xticks(rotation=90)\nplot = axis.bar(new_df[0], new_df[\"count\"] )\n\nfor rectangle in plot:\n    height = rectangle.get_height()\n    axis.text(rectangle.get_x() + rectangle.get_width() \/2., height, '%d' % int(height), \n              ha='center', va = 'bottom')\n    \nplt.show()","468c06b6":"### Analysis of Categorical Variables","31847a5f":"Let's find the which columns are categoric;","b7074618":"## Expolority Data Analysis","5e262232":"### Dataframe Summary"}}