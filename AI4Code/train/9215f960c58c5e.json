{"cell_type":{"fcb7c8e9":"code","d07ecc5e":"code","1b0241a0":"code","63a0a81a":"code","a06e1eca":"code","9959e1a6":"code","0210c242":"code","e1125074":"code","029fa499":"code","6237f334":"code","e3eea7d6":"code","81b11c4b":"code","729d111b":"code","5b4ac2ac":"code","1883a068":"code","85dce0a2":"code","54f20233":"code","6b0d6e5a":"code","26ba77e6":"code","ee503bac":"code","d272ae1e":"code","325f487b":"code","d6411d83":"code","152acdc6":"code","8635d10e":"code","05bbe88b":"code","499151bb":"code","41a2b7c0":"code","538fe873":"code","f1d26156":"code","7b304f56":"code","35fc7148":"code","843ea23a":"code","aa190798":"markdown","c39484a4":"markdown","8753a069":"markdown","16014d24":"markdown"},"source":{"fcb7c8e9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d07ecc5e":"pd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)\npd.set_option('display.width', None)","1b0241a0":"# load data\ndef load_data(data, headers):\n    df = pd.read_csv(data, names=headers, header=0)\n    return df\n\nheaders = ['ID', 'ObservationDate', 'State', 'Country', 'LastUpdate', 'Confirmed', 'Deaths', 'Recovered']\ndf_corona = load_data(data='\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv', headers=headers)\ndf_corona.head() # First five rows in the dataset","63a0a81a":"df_corona.shape","a06e1eca":"# Summary of the data\ndf_corona.describe()","9959e1a6":"# Check for null values\ndf_corona.isnull().sum()","0210c242":"# Checking the first five rows of state column with null values\ndf_corona[df_corona['State'].isnull()].head()","e1125074":"# We could replace the states that were not there with the country\ndf_corona['State'].fillna(df_corona['Country'], inplace=True)","029fa499":"# Checking if they have been filled with Nigeria as a test\ndf_corona[df_corona['Country'] == 'Nigeria']","6237f334":"# Checking the data types of the Columns\ndf_corona.info()","e3eea7d6":"# ObservationDate and LastUpdate should be datetime, State and Country as strings, Confirmed, Deaths and Recovered as integers\n# Converting ObservationDate and LastUpdate columns to datetime\ndf_corona[['ObservationDate', 'LastUpdate']] = df_corona[['ObservationDate', 'LastUpdate']].apply(pd.to_datetime)\n# Converting State and Country to Strings\ndf_corona[['State', 'Country']] = df_corona[['State', 'Country']].astype('str')\n# Converting confirmed, deaths and recovered to Integers\ndf_corona[['Confirmed', 'Deaths', 'Recovered']] = df_corona[['Confirmed', 'Deaths', 'Recovered']].astype('int')\ndf_corona.info()","81b11c4b":"# Checking the first five rows of the dataset to see what we have\ndf_corona.head()","729d111b":"# Last five rows of the dataset\ndf_corona.tail()","5b4ac2ac":"# Sort the dataset alphabetically by Country Name, State, then the ObservationDate\ndf_corona.sort_values(by=['Country', 'State', 'ObservationDate'], inplace=True)","1883a068":"# Setting the country as the index column\ndf_corona.set_index('Country', inplace=True)\ndf_corona.head()","85dce0a2":"df_corona.head(20)","54f20233":"# Diamond Princess Cruise Ship\ndf_corona.loc['Others'].head()","6b0d6e5a":"df_corona.loc['US'].head()","26ba77e6":"# Replace Cruise Ship with Diamond Princess Cruise Ship\ndf_corona['State'] = df_corona['State'].str.replace('Cruise Ship', 'Diamond Princess cruise ship')\ndf_corona.loc['Others']","ee503bac":"# Cummulative Count of the patients by Country and State\nc = df_corona.groupby(['Country', 'State'])[['Confirmed', 'Recovered', 'Deaths', 'State', 'ObservationDate']].tail(1)\nc['Active'] = c['Confirmed'] - (c['Recovered'] + c['Deaths'])\ncorona_crd_country = c.groupby('Country')[['Confirmed', 'Recovered', 'Deaths', 'Active']].sum().sort_values(by=\"Confirmed\", ascending=False)\ncorona_crd_country.head()","d272ae1e":"corona_crd_country[['Confirmed', 'Recovered', 'Deaths']].head(5).plot(kind=\"bar\", figsize=(12, 8))\nplt.title('Top 10 total Confirmed, Recovered and Death Cases by Country')","325f487b":"corona_crd_state = c.groupby(['Country', 'State'])[['Confirmed', 'Recovered', 'Deaths', 'Active']].sum().sort_values(by=\"Confirmed\", ascending=False)\ncorona_crd_state.head()","d6411d83":"corona_crd_state[['Confirmed', 'Recovered', 'Deaths']].head().plot(kind=\"bar\", figsize=(12, 8))\nplt.title(\"Top 10 total Confirmed, Recovered and Death Cases by Country and State\")","152acdc6":"# Total count of confirmed, Recovered and Deaths\ntotal_count_crd = corona_crd_country.sum().sort_values(ascending=False)\ntotal_count_crd","8635d10e":"total_count_crd[['Confirmed', 'Recovered', 'Deaths']].plot(kind=\"barh\", figsize=(12, 8))\ntotal_count_crd.sort_values(ascending=False, inplace=True)\nplt.title(\"Total count of the number of confirmed cases, recovered patients and deaths\")","05bbe88b":"# Number of active cases\nactive_cases = total_count_crd['Active']\nclosed_cases = total_count_crd['Confirmed'] - active_cases\nprint(f\"Active Cases: {total_count_crd['Active']}, Closed Cases: {closed_cases}\")","499151bb":"perc_active_cases = (active_cases \/ total_count_crd['Confirmed']) * 100.0\nperc_closed_cases = (closed_cases \/ total_count_crd['Confirmed']) * 100.0\n\npac = round(perc_active_cases)\npcc = round(perc_closed_cases)\n\nlabels = ['Active Cases', 'Closed Cases']\nsizes = [pac, pcc]\nexplode = (0, 0.1)\n\nplt.figure(figsize=(12, 8))\nplt.pie(sizes, labels=labels, explode=explode, autopct='%1.1f%%', startangle=90)\nplt.axis('equal')","41a2b7c0":"china = df_corona.loc['Mainland China'].groupby(['ObservationDate'])[['Confirmed', 'Recovered', 'Deaths', 'ObservationDate']].sum()\nprint(china[0:5])\nrest_of_world = df_corona.loc[df_corona.index != 'Mainland China'].groupby(['ObservationDate'])[['Confirmed', 'Recovered', 'Deaths', 'ObservationDate']].sum()\nprint(rest_of_world[0:5])\nchina[['Confirmed', 'Recovered', 'Deaths']].plot(kind=\"line\",  figsize=(12, 8), label=\"China\")\nplt.title('Comparison of Confirmed, Recovered, Deaths between Mainland China and the rest of the world')\nrest_of_world[['Confirmed', 'Recovered', 'Deaths']].plot(kind=\"line\", figsize=(12, 8), label=\"Rest of the world\")\nplt.title('Rest of the world')\nplt.legend()","538fe873":"total_china_count = china['Confirmed'].tail(1)[0]\nrest_of_world_count = rest_of_world['Confirmed'].tail(1)[0]\n\nchina_perc = (total_china_count \/ total_count_crd['Confirmed']) * 100.0\nrest_of_world_perc = (rest_of_world_count \/ total_count_crd['Confirmed']) * 100.0\n\nchina_perc = round(china_perc)\nrest_of_world_perc = round(rest_of_world_perc)\n\nchina_perc, rest_of_world_perc","f1d26156":"# Pie Chart of the confirmed cases in mainland china vs the rest of the world\nlabels = ['Mainland China', 'Rest of the world']\nsizes = [china_perc, rest_of_world_perc]\nexplode = (0, 0.1)\n\nplt.figure(figsize=(12, 8))\nplt.pie(sizes, labels=labels, explode=explode, autopct='%1.1f%%', startangle=90)","7b304f56":"# There is no country called 'others'. Very curious about what information its associated with\nc.loc['Others']","35fc7148":"recent_time = df_corona['ObservationDate'].max()\nrecent_time","843ea23a":"df_corona[df_corona['ObservationDate'] == recent_time]","aa190798":"### Load Data","c39484a4":"<p>This is the Diamond Princess is a cruise ship that housed about 3700 passengers and crew. There was a 14-day vacation for adventure seekers to explore South-East Asia until a passenger carrying COVID-19 entered the ship. There are about 696 passengers confirmed to the infected now and 6 deaths. The ship only found out about the virus on its way back to Yokohama, Japan<\/p>","8753a069":"### Preprocessing","16014d24":"<p>I noticed that the cruise ship had a different naming convention for the earlier dates which affects the cummulative sum.<\/p>"}}