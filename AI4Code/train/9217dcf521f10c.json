{"cell_type":{"f48a2be2":"code","80c7b02c":"code","662e01d1":"code","ada36030":"code","897095e8":"code","3a7a96c3":"code","579bafc5":"code","6997f005":"code","b9f2a9b0":"code","fdaa58f8":"code","29ed9e1b":"code","6503f316":"code","487d7f0a":"code","078594ea":"code","a16b022f":"code","97c2fe44":"code","d9f1da80":"code","89528f54":"code","1f64aee8":"code","13fbbd0f":"code","32346190":"code","1af07939":"code","cbc9a441":"code","921369d5":"code","6b7ee51d":"code","a5005aee":"code","e496b219":"code","6ede03a8":"code","dfab9a7c":"code","e0027fcb":"code","9e2ddf33":"code","e74deef6":"code","75b50223":"code","77a7d017":"code","44bcdfd1":"code","f9018620":"code","223718fd":"code","88c84ae3":"code","3165c4fb":"code","db43c9dc":"code","30696c13":"code","d3805eab":"code","7ddd3e97":"code","c788cb13":"code","0ad5a2a1":"code","6a23aa83":"code","ca93e2e9":"code","3ae5916a":"code","c7ebeb89":"code","345d6c7b":"code","d2307e25":"code","92d51d28":"code","c224e8c3":"code","fc8f0f89":"code","e8ff00d3":"code","81cccdd5":"code","50c4ea0d":"code","11aa3ede":"code","e09ebbec":"code","da7f79e8":"code","0ab7c3dd":"code","a371fe51":"code","df5abd9f":"code","f694bbd7":"code","359cae11":"code","7db06976":"code","439980cf":"markdown","134db86e":"markdown","b5da7b71":"markdown","f3384333":"markdown","3706e941":"markdown","e822e7c4":"markdown","3a219e55":"markdown","116df38d":"markdown","91d8bc67":"markdown","cbadfeb0":"markdown","3834e41a":"markdown","2cc06ba9":"markdown","ef25b72c":"markdown"},"source":{"f48a2be2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","80c7b02c":"%matplotlib inline","662e01d1":"from matplotlib import pyplot as plt\nimport seaborn as sns","ada36030":"diabete = pd.read_csv(\"\/kaggle\/input\/pyms-diabete\/diabete.csv\")","897095e8":"diabete.head().T","3a7a96c3":"fig = sns.FacetGrid(diabete, hue=\"diabete\", aspect=3, palette=\"Set2\") # aspect=3 permet d'allonger le graphique\nfig.map(sns.kdeplot, \"glucose\", shade=True)\nfig.add_legend()","579bafc5":"fig = sns.FacetGrid(diabete, hue=\"diabete\", aspect=3, palette=\"Set2\") # aspect=3 permet d'allonger le graphique\nfig.map(sns.kdeplot, \"insulin\", shade=True)\nfig.add_legend()","6997f005":"fig = sns.FacetGrid(diabete, hue=\"diabete\", aspect=3, palette=\"Set2\") # aspect=3 permet d'allonger le graphique\nfig.map(sns.kdeplot, \"tension\", shade=True)\nfig.add_legend()","b9f2a9b0":"fig = sns.FacetGrid(diabete, hue=\"diabete\", aspect=3, palette=\"Set2\") # aspect=3 permet d'allonger le graphique\nfig.map(sns.kdeplot, \"thickness\", shade=True)\nfig.add_legend()","fdaa58f8":"fig = sns.FacetGrid(diabete, hue=\"diabete\", aspect=3, palette=\"Set2\") # aspect=3 permet d'allonger le graphique\nfig.map(sns.kdeplot, \"bmi\", shade=True)\nfig.add_legend()","29ed9e1b":"sns.jointplot(\"bmi\",\"diabete\",diabete,kind='kde')","6503f316":"diabete.columns","487d7f0a":"diabete.count()","078594ea":"sns.distplot(diabete.n_pregnant, color='blue')","a16b022f":"sns.distplot(diabete.glucose, color='blue')","97c2fe44":"sns.distplot(diabete.tension, color='blue')","d9f1da80":"sns.distplot(diabete.thickness, color='blue')","89528f54":"sns.distplot(diabete.insulin, color='blue')","1f64aee8":"sns.distplot(diabete.bmi, color='blue')","13fbbd0f":"sns.distplot(diabete.pedigree, color='blue')","32346190":"sns.distplot(diabete.age, color='blue')","1af07939":"df_diabete = diabete.replace(0,np.nan)\ndf_diabete.n_pregnant = diabete.n_pregnant\ndf_diabete.pedigree = diabete.pedigree\ndf_diabete.diabete = diabete.diabete","cbc9a441":"df_diabete.count()","921369d5":"df_diabete = df_diabete.fillna(method='pad')","6b7ee51d":"df_diabete.count()","a5005aee":"df_diabete = df_diabete.fillna(value = {'insulin':df_diabete.insulin.mean()})","e496b219":"df_diabete.count()","6ede03a8":"plt.hist(df_diabete.insulin, bins=80)","dfab9a7c":"df_diabete['log_pedigree'] = np.log(df_diabete.pedigree+1)","e0027fcb":"sns.kdeplot(df_diabete.log_pedigree, color='blue')","9e2ddf33":"df_diabete = df_diabete.drop(['pedigree'], axis=1)","e74deef6":"df_diabete.head()","75b50223":"df_diabete.diabete.value_counts() ","77a7d017":"X = df_diabete.drop(['diabete'], axis=1)\ny = df_diabete.diabete","44bcdfd1":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=1,shuffle=True)","f9018620":"print(X_train.shape)\nprint(X_test.shape)","223718fd":"print(X_train)\nprint(X_test)","88c84ae3":"from sklearn.linear_model import LogisticRegression","3165c4fb":"lr = LogisticRegression(max_iter=200)\nlr.fit(X_train,y_train)","db43c9dc":"y_lr = lr.predict(X_test)","30696c13":"from sklearn.metrics import classification_report, confusion_matrix, roc_curve, roc_auc_score,auc, accuracy_score","d3805eab":"print(confusion_matrix(y_test,y_lr))","7ddd3e97":"print(accuracy_score(y_test,y_lr))","c788cb13":"print(classification_report(y_test, y_lr))","0ad5a2a1":"probas = lr.predict_proba(X_test)","6a23aa83":"print(probas)","ca93e2e9":"dfprobas = pd.DataFrame(probas,columns=['proba_0','proba_1'])\ndfprobas['y'] = np.array(y_test)","3ae5916a":"print(dfprobas)","c7ebeb89":"plt.figure(figsize=(10,10))\nsns.distplot(1-dfprobas.proba_0[dfprobas.y==0], bins=50)\nsns.distplot(dfprobas.proba_1[dfprobas.y==1], bins=50)","345d6c7b":"false_positive_rate, true_positive_rate, thresholds = roc_curve(y_test,probas[:, 1])\nroc_auc = auc(false_positive_rate, true_positive_rate)\nprint (roc_auc)","d2307e25":"plt.figure(figsize=(12,12))\nplt.title('Receiver Operating Characteristic')\nplt.plot(false_positive_rate, true_positive_rate, 'b', label='AUC = %0.2f'% roc_auc)\nplt.legend(loc='lower right')\nplt.plot([0,1],[0,1],'r--')        # plus mauvaise courbe\nplt.plot([0,0,1],[0,1,1],'g:')     # meilleure courbe\nplt.xlim([-0.1,1.2])\nplt.ylim([-0.1,1.2])\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')","92d51d28":"from sklearn import ensemble\nrf = ensemble.RandomForestClassifier()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)","c224e8c3":"print(classification_report(y_test, y_rf))","fc8f0f89":"cm = confusion_matrix(y_test, y_rf)\nprint(cm)","e8ff00d3":"rf1 = ensemble.RandomForestClassifier(n_estimators=10, min_samples_leaf=10, max_features=3)\nrf1.fit(X_train, y_train)\ny_rf1 = rf.predict(X_test)\nprint(classification_report(y_test, y_rf1))","81cccdd5":"from sklearn.model_selection import validation_curve\nparams = np.arange(1, 300,step=30)\ntrain_score, val_score = validation_curve(rf, X, y, 'n_estimators', params, cv=7)\nplt.figure(figsize=(12,12))\nplt.plot(params, np.median(train_score, 1), color='blue', label='training score')\nplt.plot(params, np.median(val_score, 1), color='red', label='validation score')\nplt.legend(loc='best')\nplt.ylim(0, 1)\nplt.xlabel('n_estimators')\nplt.ylabel('score');","50c4ea0d":"from sklearn import model_selection","11aa3ede":"param_grid = {\n              'n_estimators': [10, 100, 500],\n              'min_samples_leaf': [1, 20, 50]\n             }\nestimator = ensemble.RandomForestClassifier()\nrf_gs = model_selection.GridSearchCV(estimator, param_grid)","e09ebbec":"rf_gs.fit(X_train, y_train)","da7f79e8":"print(rf_gs.best_params_)","0ab7c3dd":"rf2 = rf_gs.best_estimator_","a371fe51":"y_rf2 = rf2.predict(X_test)","df5abd9f":"print(classification_report(y_test, y_rf2))","f694bbd7":"importances = rf2.feature_importances_\nindices = np.argsort(importances)","359cae11":"plt.figure(figsize=(8,5))\nplt.barh(range(len(indices)), importances[indices], color='b', align='center')\nplt.yticks(range(len(indices)), X_train.columns[indices])\nplt.title('Importance des caracteristiques')","7db06976":"import xgboost as XGB\nxgb  = XGB.XGBClassifier()\nxgb.fit(X_train, y_train)\ny_xgb = xgb.predict(X_test)\ncm = confusion_matrix(y_test, y_xgb)\nprint(cm)\nprint(classification_report(y_test, y_xgb))","439980cf":"### D\u00e9s\u00e9quilibre des distributions","134db86e":"Tout est rempli\n","b5da7b71":"Quelle colonnes sont \u00e0 garder ?","f3384333":"### Ajustement des hyperparam\u00e8tres (Random Forests)","3706e941":"### Pr\u00e9paration des jeux de test","e822e7c4":"Il est \u00e9trange de retrouver des valeurs \u00e0 0 pour : BMI, Insulin, thickness, glucose","3a219e55":"Je vais passer les valeurs valant 0 \u00e0 NaN pour mieux visualiser les vides","116df38d":"### Importance des caract\u00e9ristiques","91d8bc67":"### Mise \u00e0 l'\u00e9chelle des donn\u00e9es quantitatives","cbadfeb0":"Nous allons remplir les valeurs NaN \u00e0 l'aide de la m\u00e9thode pad","3834e41a":"A priori les trois premiers cas \u00e9tait en NaN ce qui explique qu'il n'ai pas r\u00e9cup\u00e9rer de valeurs, on s'adapte :","2cc06ba9":"Regression logistique","ef25b72c":"### Performances"}}