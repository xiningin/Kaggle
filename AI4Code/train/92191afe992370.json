{"cell_type":{"6b044f12":"code","520168e7":"code","910407b0":"code","d3bfe1f3":"code","8f3d5520":"code","03611d94":"code","1480aea2":"code","db46c55c":"code","c356e957":"code","409c7419":"code","20871f5e":"code","0eb5a77f":"code","3a468e99":"code","01d0b386":"code","36d67875":"code","1915c203":"code","905b3ffc":"code","8bd8f293":"code","6c88b437":"code","7a24e135":"code","14c2a89d":"code","cd82e547":"code","d6a7ab71":"code","4cb9d19a":"code","49818e1a":"code","6d13238e":"code","a8d079a1":"code","978524e1":"code","c666b766":"code","90b56ddf":"code","a3b912ce":"code","826831ff":"code","5c95387b":"code","b52fe6c1":"code","4697ae29":"code","75d2b3b1":"code","85b9105b":"code","0fefa791":"code","aae9f1ee":"code","ce58a02b":"code","7d69de16":"code","a79db055":"code","b22f01bd":"code","ed82f6e2":"code","318822b9":"code","ea5c41ed":"code","5fb49123":"code","3206d6dd":"code","61a47154":"code","6d1c7435":"code","8dec70a6":"code","4ebffb0c":"code","9c1568eb":"code","8be0a84d":"code","0cc53724":"code","5b3373cd":"code","260db98d":"code","3c815f63":"code","9f94d6b7":"code","d770e271":"code","4aa5a9b3":"code","cd582370":"code","80c8fbd2":"code","a67c1f02":"code","245d7e32":"code","4ba5ce2c":"code","40c63b2d":"code","3a4a82cc":"code","7db75e2e":"code","3be2fa6c":"code","7fb087c6":"code","aacaf91f":"code","dfa07f4a":"code","708a5fca":"code","21eb75d3":"code","ae81d989":"code","f0f85873":"code","009488a7":"code","367bcc44":"code","af9402d5":"code","7c21f2bc":"code","11bee56f":"code","d15abe72":"code","fda44288":"markdown","6325aa22":"markdown","7b76d862":"markdown","ab7eb1bc":"markdown","8d825f93":"markdown","de04f73c":"markdown","fc8620d8":"markdown","9cc662cb":"markdown","2ea84b78":"markdown","84fe624a":"markdown","28cb6913":"markdown","f986197d":"markdown","b7091153":"markdown","26de64a6":"markdown","7b47817b":"markdown","63aa93d5":"markdown","4d7b88e6":"markdown","2f4e6414":"markdown","2fb40b50":"markdown","a7081377":"markdown","6f3d42d6":"markdown","917ac723":"markdown","486b2622":"markdown","0ee675b1":"markdown","629a6262":"markdown","cf70d4bb":"markdown","6a633d25":"markdown","09288a16":"markdown","7e6923e7":"markdown","dcd67983":"markdown","8738027c":"markdown","5348eaf7":"markdown","8cd0aa71":"markdown","53b1568d":"markdown","e7a45771":"markdown","1d426001":"markdown","58c9a321":"markdown","c657227c":"markdown","497871cf":"markdown","691cd920":"markdown","587c8cfc":"markdown","2876893e":"markdown","00784092":"markdown","de19f2ad":"markdown","f5053e8c":"markdown","63e44533":"markdown","6206d721":"markdown","645f8561":"markdown","048b7e5a":"markdown","d130042c":"markdown","8b42b038":"markdown","520e6338":"markdown","1c78ac29":"markdown","27781a64":"markdown","a0373b7f":"markdown","d22532f1":"markdown","518253b2":"markdown","07c78bae":"markdown","d6f0a135":"markdown","d27f5da0":"markdown","61d5b9e0":"markdown","7d7bf95e":"markdown","2a1bf46d":"markdown","a2fb0623":"markdown","5ad2d7a7":"markdown","ccc9645d":"markdown","8fcc3ad2":"markdown","75ba0674":"markdown","64ced540":"markdown","2787ab60":"markdown","b3c0ace7":"markdown","6714bb99":"markdown","d0d7028b":"markdown","be01e0f7":"markdown","43eb46dc":"markdown","10493f36":"markdown","752f2e9f":"markdown","f0fce41e":"markdown","05fe42da":"markdown","44c18946":"markdown","6d4f18e6":"markdown","9d58e91e":"markdown","8fbd8bbe":"markdown","0d131b58":"markdown","2d6ad350":"markdown","d43eb58b":"markdown","a28110ba":"markdown","57c67331":"markdown","62ec0324":"markdown","5bd852de":"markdown","6febe39b":"markdown","1bc89512":"markdown","b7d76f9e":"markdown","8f1933dc":"markdown","f995ba2a":"markdown","fce817bd":"markdown","bc061e05":"markdown","6f83db02":"markdown","507d405f":"markdown","4834f741":"markdown","f77dfdbb":"markdown","47bb7700":"markdown","e3775ee4":"markdown","352e605b":"markdown","ffcfe79c":"markdown","4209a1c0":"markdown","9e18d5eb":"markdown","f7a68957":"markdown","a55b6ebe":"markdown","122a4bde":"markdown","1cffd71d":"markdown","c6b0d36a":"markdown","b08084d8":"markdown","86252368":"markdown","967650b0":"markdown","3b17ad15":"markdown"},"source":{"6b044f12":"from sklearn import model_selection, preprocessing, metrics\nfrom sklearn.metrics import mean_squared_error\nfrom pandas.plotting import scatter_matrix\nfrom sklearn.preprocessing import MinMaxScaler, StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder\nimport matplotlib.pyplot as plt\nfrom pandas import get_dummies\nimport lightgbm as lgb\nimport xgboost as xgb\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\nimport matplotlib\nimport sklearn\nimport warnings","520168e7":"%matplotlib inline\n%precision 4\nplt.style.use('ggplot')\nnp.set_printoptions(suppress=True)\npd.set_option(\"display.precision\", 15)\n\n#ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Graphics in retina format are more sharp and legible\n%config InlineBackend.figure_format = 'retina'","910407b0":"print('matplotlib: {}'.format(matplotlib.__version__))\nprint('sklearn: {}'.format(sklearn.__version__))\nprint('seaborn: {}'.format(sns.__version__))\nprint('pandas: {}'.format(pd.__version__))\nprint('numpy: {}'.format(np.__version__))","d3bfe1f3":"#data file\ndata = pd.read_csv('..\/input\/2015-residential-energy-consumption-survey\/recs2015_public_v4.csv')\n\n#\"Layout file\", which contains descriptive labels and formats for each data variable.\nlayout = pd.read_excel('..\/input\/2015-residential-energy-consumption-survey\/codebook_publicv4.xlsx')","8f3d5520":"#display first 5 rows\ndata.head()","03611d94":"layout.head()","1480aea2":"data.shape, layout.shape","db46c55c":"# knowing the type of our dataframe.\nnumerical_feats = data.dtypes[data.dtypes != \"object\"].index\nprint(\"Number of Numerical features: \", len(numerical_feats))\n\ncategorical_feats = data.dtypes[data.dtypes == \"object\"].index\nprint(\"Number of Categorical features: \", len(categorical_feats))","c356e957":"data.info()","409c7419":"data.describe()","20871f5e":"data.describe(include=['object'])","0eb5a77f":"data['METROMICRO'].value_counts()","3a468e99":"data['UR'].value_counts(normalize=True)","01d0b386":"data['KWH'].describe()","36d67875":"fig, ax = plt.subplots(figsize=[8,6])\nax.set_xlim(0,80000)\nsns.distplot(data['KWH'],ax=ax, bins=100).set_title('Distribution of KWH');","1915c203":"#skewness and kurtosis\nprint(\"Skewness: %f\" % data['KWH'].skew())\nprint(\"Kurtosis: %f\" % data['KWH'].kurt())","905b3ffc":"data['log_KWH'] = data['KWH'].map(np.log1p)\n#Log plot\nfig, ax = plt.subplots(figsize=[8,6])\n#ax.set_xlim(0,80000)\nsns.distplot(data['log_KWH'],ax=ax).set_title('Distribution of log_KWH');","8bd8f293":"corr_matrix = data.corr()","6c88b437":"threshold_corr = 0.4\ncorr_significant = corr_matrix[\"KWH\"].copy(deep =True)\ncorr_significant = corr_significant.loc[(corr_significant.values > threshold_corr) | \\\n                                       (corr_significant.values < -threshold_corr)]\nprint(f\"Significant target variables are: \\n\\n {corr_significant.index[1:].values}\\n\")\nprint('*'*55)\nprint(f\"\\nAnd also their correaltions are: \\n\\n{(np.round(corr_significant[1:].values,2 ))}\")","7a24e135":"corr_significant.sort_values(ascending=False)","14c2a89d":"res = corr_significant.sort_values(ascending=False)[:15]\nres.index","cd82e547":"# plot heatmap of the corr_significant\nplt.figure(figsize = (20,10))\nheatmap = sns.heatmap(data[res.index].corr(), annot = True)","d6a7ab71":"data.isnull().sum().sum()","4cb9d19a":"# selecting X and y\ny = data.KWH \nX = data.drop('KWH', axis=1)","49818e1a":"# Label encoder\nfor c in data.columns[data.dtypes == 'object']:\n    X[c] = X[c].factorize()[0] ##using factorization the result will have 1 dimension","6d13238e":"# The isinstance() function returns True if the specified object is of the specified type, otherwise False.\nisinstance(X, np.ndarray)","a8d079a1":"import xgboost as xgb\n\nmodel = xgb.XGBRegressor()\nmodel.fit(X,y)","978524e1":"fig, ax = plt.subplots(figsize=(7, 30))\nxgb.plot_importance(model, ax=ax)\nprint(\"Features importance done\")","c666b766":"print(data.shape)\nprint('*'*35)\nn = data.select_dtypes(include=object)\nfor column in n.columns:\n    print(column, ':  ', data[column].unique())","90b56ddf":"## Let's see the distribuition of the categories: \nfor category in list(categorical_feats):\n    print('#'*35)    \n    print('Distribuition of feature:', category)\n    print(data[category].value_counts(normalize=True))\n    print('#'*35)","a3b912ce":"fig, axes = plt.subplots(ncols=2, nrows=3, figsize=(4 * 4, 4 * 4), sharey=True)\n\naxes = np.ravel(axes) #which is used to change a 2-dimensional array or a multi-dimensional array into a contiguous flattened array.\n\ncols = ['METROMICRO','UR','NOCRCASH','NKRGALNC','IECC_Climate_Pub']\n\nfor i, c in zip(np.arange(len(axes)), cols):\n    ax = sns.boxplot(x=c, y='log_KWH', data=data, ax=axes[i])\n    ax.set_title(c)\n    ax.set_xlabel(\"\")","826831ff":"plt.figure(figsize=(14,6))\n#I will explore the distribution of Roof type and roof type by log_KWH\nplt.subplot(121)\nax_roof = sns.countplot(x='ROOFTYPE', data=data)\nax_roof.set_title(\"Distribution of Roof Type\", fontsize=15)\n\n\nplt.subplot(122)\nax_roof = sns.boxplot(x =\"ROOFTYPE\",y=\"log_KWH\", data=data)\nax_roof.set_title(\"Roof type Energy Consumption\", fontsize=15)\n\n\nplt.subplots_adjust(hspace = 0.6, top = 0.8)\n\nplt.show()","5c95387b":"plt.figure(figsize=(14,6))\n#I will explore the distribution of wall type and wall type by log_KWH\nplt.subplot(121)\nax_wall = sns.countplot(x='WALLTYPE', data=data)\nax_wall.set_title(\"Distribution of Wall Type\", fontsize=15)\n\n\nplt.subplot(122)\nax_wall = sns.boxplot(x =\"WALLTYPE\",y=\"log_KWH\", data=data)\nax_wall.set_title(\"Wall Type Energy Consumption\", fontsize=15)\n\n\nplt.subplots_adjust(hspace = 0.6, top = 0.8)\n\nplt.show()","b52fe6c1":"plt.figure(figsize=(14,6))\n#I will explore the distribution of Glass type and Glass type by log_KWH\nplt.subplot(121)\nax_glass = sns.countplot(x='TYPEGLASS', data=data)\nax_glass.set_title(\"Distribution of Glass Type\", fontsize=15)\n\n\nplt.subplot(122)\nax_glass = sns.boxplot(x =\"TYPEGLASS\",y=\"log_KWH\", data=data)\nax_glass.set_title(\"Energy Consumption\", fontsize=15)\n\n\nplt.subplots_adjust(hspace = 0.6, top = 0.8)\n\nplt.show()","4697ae29":"plt.figure(figsize=(24,6))\nax_year = sns.countplot(x='YEARMADE', data=data, palette='Reds')\nax_year.set_title(\"Distribution of House Age\", fontsize=20)\nax_year.set_xticklabels(ax_year.get_xticklabels(), rotation=45);","75d2b3b1":"plt.figure(figsize=(24,6))\nax_year = sns.barplot(x =\"YEARMADE\",y=\"KWH\", data=data, palette='Reds')\nax_year.set_title(\"Energy Consumption Based on House Age\", fontsize=20);\nax_year.set_xticklabels(ax_year.get_xticklabels(), rotation=45);","85b9105b":"plt.figure(figsize=(24,6))\n#ax_HM shows the Age of Household member (HM Stands for  Household member)\nax_age = sns.countplot(x='HHAGE', data=data, palette='plasma_r')\nax_age.set_title(\"Distribution of Age of Household Member\", fontsize=20)\nax_age.set_xticklabels(ax_age.get_xticklabels(), rotation=45);","0fefa791":"plt.figure(figsize=(24,6))\nax_age = sns.barplot(x =\"HHAGE\",y=\"KWH\", data=data, palette='plasma_r')\nax_age.set_title(\"Energy Consumption Based on Age of Household Member\", fontsize=20);","aae9f1ee":"plt.figure(figsize=(24,6))\nax_num = sns.countplot(x='NHSLDMEM', data=data, palette='tab10_r')\nax_num.set_title(\"Distribution of Number of Household Member\", fontsize=20)","ce58a02b":"plt.figure(figsize=(24,6))\nax_num = sns.barplot(x =\"NHSLDMEM\",y=\"log_KWH\", data=data, palette='tab10_r')\nax_num.set_title(\"Energy Consumption Based on Number of Household Member\", fontsize=20);","7d69de16":"plt.figure(figsize=(14,6))\n#I will explore the distribution of wall type and wall type by log_KWH\nplt.subplot(121)\nax_dishwasher = sns.countplot(x='DWASHUSE', data=data)\nax_dishwasher.set_title(\"Distribution of DishWasher Use\", fontsize=15)\n\n\nplt.subplot(122)\nax_dishwasher = sns.boxplot(x =\"DWASHUSE\",y=\"log_KWH\", data=data)\nax_dishwasher.set_title(\"DishWasher Use Energy Consumption\", fontsize=15)\n\n\nplt.subplots_adjust(hspace = 0.6, top = 0.8)\n\nplt.show()","a79db055":"plt.figure(figsize=(14,6))\n#I will explore the distribution of wall type and wall type by log_KWH\nplt.subplot(121)\nax_microwave = sns.countplot(x='MICRO', data=data)\nax_microwave.set_title(\"Distribution of Microwave Use\", fontsize=15)\n\n\nplt.subplot(122)\nax_microwave = sns.boxplot(x =\"MICRO\",y=\"log_KWH\", data=data)\nax_microwave.set_title(\"Microwave Use Energy Consumption\", fontsize=15)\n\n\nplt.subplots_adjust(hspace = 0.6, top = 0.8)\n\nplt.show()","b22f01bd":"plt.figure(figsize=(14,6))\n#I will explore the distribution of wall type and wall type by log_KWH\nplt.subplot(121)\nax_oven = sns.countplot(x='OVENUSE', data=data)\nax_oven.set_title(\"Distribution of Oven Use\", fontsize=15)\n\n\nplt.subplot(122)\nax_oven = sns.boxplot(x =\"OVENUSE\",y=\"log_KWH\", data=data)\nax_oven.set_title(\"Oven Use Energy Consumption\", fontsize=15)\n\n\nplt.subplots_adjust(hspace = 0.6, top = 0.8)\n\nplt.show()","ed82f6e2":"plt.figure(figsize=(14,6))\n#I will explore the distribution of wall type and wall type by log_KWH\nplt.subplot(121)\nax_bath = sns.countplot(x='NCOMBATH', data=data)\nax_bath.set_title(\"Distribution of Number of Complete Bathrooms\", fontsize=15)\n\n\nplt.subplot(122)\nax_bath = sns.boxplot(x =\"NCOMBATH\",y=\"log_KWH\", data=data)\nax_bath.set_title(\"Number of Complete Bathrooms Energy Consumption\", fontsize=15)\n\n\nplt.subplots_adjust(hspace = 0.6, top = 0.8)\n\nplt.show()","318822b9":"plt.figure(figsize=(14,6))\n#I will explore the distribution of wall type and wall type by log_KWH\nplt.subplot(121)\nax_bedroom = sns.countplot(x='BEDROOMS', data=data)\nax_bedroom.set_title(\"Distribution of Number of Bedrooms\", fontsize=15)\n\n\nplt.subplot(122)\nax_bedroom = sns.boxplot(x =\"BEDROOMS\",y=\"log_KWH\", data=data)\nax_bedroom.set_title(\"Number of Bathrooms Energy Consumption\", fontsize=15)\n\n\nplt.subplots_adjust(hspace = 0.6, top = 0.8)\n\nplt.show()","ea5c41ed":"plt.figure(figsize=(14,6))\n#I will explore the distribution of wall type and wall type by log_KWH\nplt.subplot(121)\nax_pool = sns.countplot(x='SWIMPOOL', data=data)\nax_pool.set_title(\"Distribution of Swimming Pool\", fontsize=15)\n\n\nplt.subplot(122)\nax_pool = sns.boxplot(x =\"SWIMPOOL\",y=\"log_KWH\", data=data)\nax_pool.set_title(\"Swimming Pool Energy Consumption\", fontsize=15)\n\n\nplt.subplots_adjust(hspace = 0.6, top = 0.8)\n\nplt.show()","5fb49123":"data.shape","3206d6dd":"data.drop(['BTUEL', 'log_KWH'], axis=1, inplace=True)","61a47154":"data.shape\n","6d1c7435":"print(data.loc[data['KWH']>80000, 'KWH'])","8dec70a6":"data.drop(3551, inplace=True)","4ebffb0c":"data.shape","9c1568eb":"data['squarefootage_KWH'] =  (data['TOTROOMS'] + data['NCOMBATH']) \/ data['TOTSQFT']","8be0a84d":"data.shape","0cc53724":"data['squarefootage_KWH'].head()","5b3373cd":"plt.hist(data['squarefootage_KWH'])\nplt.title('histogram of the squarefootage_KWH')\nplt.xlabel('SuareFootage_KWH')\nplt.ylabel('Count')","260db98d":"data['DishwasherUse_OvenUse'] = (data['DWASHUSE'] + data['OVENUSE']) \/ data['KWH']","3c815f63":"data.shape","9f94d6b7":"data['DishwasherUse_OvenUse']","d770e271":"corr_matrix = data.corr()","4aa5a9b3":"threshold_corr = 0.4\ncorr_significant = corr_matrix[\"KWH\"].copy(deep =True)\ncorr_significant = corr_significant.loc[(corr_significant.values > threshold_corr) | \\\n                                       (corr_significant.values < -threshold_corr)]\nprint(f\"Significant target variables are: \\n\\n {corr_significant.index[1:].values}\\n\")\nprint('*'*55)\nprint(f\"\\nAnd also their correaltions are: \\n\\n{(np.round(corr_significant[1:].values,2 ))}\")","cd582370":"# selecting X and y\ny = data.KWH \nX = data.drop('KWH', axis=1)","80c8fbd2":"print(f'X shape is: {X.shape} and  y shape is: {y.shape}')","a67c1f02":"# Label encoder\nfor c in data.columns[data.dtypes == 'object']:\n    X[c] = X[c].factorize()[0]","245d7e32":"Scaler = StandardScaler()\nX = Scaler.fit_transform(X)","4ba5ce2c":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","40c63b2d":"print(f'X_train shape is:{X_train.shape} \\nX_test shape is:{X_test.shape}\\ny_train shape is:{y_train.shape}\\ny_test shape is:{y_test.shape}')","3a4a82cc":"from sklearn.feature_selection import SelectFromModel # Dimensionality reduction\nfrom sklearn.ensemble import GradientBoostingRegressor","7db75e2e":"thresh = 5e-4\nmodel = GradientBoostingRegressor()\nmodel.fit(X_train, y_train)\n#select features using threshold\nselection = SelectFromModel(model, threshold=thresh, prefit=True)\nselect_X_train = selection.transform(X_train)\n# eval model\nselect_X_val = selection.transform(X_test)\n# test \nselect_X_test = selection.transform(X_test)","3be2fa6c":"print(f'select_X_train shape is: {select_X_train.shape}')","7fb087c6":"########################################################\n######## IMPORTING NECESSARY MODULES AND MODELS ########\n########################################################\nfrom sklearn.model_selection import train_test_split, KFold, cross_val_score # to split the data\nfrom sklearn.metrics import explained_variance_score, median_absolute_error, r2_score, mean_squared_error #To evaluate our model\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.linear_model import SGDRegressor\nfrom sklearn.model_selection import KFold, cross_val_score, train_test_split # Model evaluation\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder, StandardScaler # Preprocessing\nfrom sklearn.linear_model import Lasso, Ridge, ElasticNet, RANSACRegressor, SGDRegressor, HuberRegressor, BayesianRidge # Linear models\nfrom sklearn.ensemble import RandomForestRegressor, BaggingRegressor, AdaBoostRegressor, GradientBoostingRegressor, ExtraTreesRegressor  # Ensemble methods\nfrom xgboost import XGBRegressor, plot_importance # XGBoost\nfrom sklearn.svm import SVR, SVC, LinearSVC  # Support Vector Regression\nfrom sklearn.tree import DecisionTreeRegressor # Decision Tree Regression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.pipeline import Pipeline # Streaming pipelines\nfrom sklearn.decomposition import KernelPCA, PCA # Dimensionality reduction\nfrom sklearn.feature_selection import SelectFromModel # Dimensionality reduction\nfrom sklearn.model_selection import learning_curve, validation_curve, GridSearchCV # Model evaluation\nfrom sklearn.base import clone # Clone estimator\nfrom sklearn.metrics import mean_squared_error as MSE","aacaf91f":"pipelines = []\nseed = 5\n\npipelines.append(\n                (\"Scaled_Ridge\", \n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"Ridge\", Ridge(random_state=seed, alpha= 0.1, tol=0.1, solver='auto' ))]\n                 )))\n\npipelines.append(\n                (\"Scaled_Lasso\", \n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"Lasso\", Lasso(random_state=seed, tol=0.1))]\n                 )))\n\npipelines.append(\n                (\"Scaled_Elastic\", \n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"Lasso\", ElasticNet(random_state=seed, tol=0.1))]\n                 )))\n\npipelines.append(\n                (\"Scaled_RF_reg\",\n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"RF\", RandomForestRegressor(random_state=seed))]\n                 )))\n\npipelines.append(\n                (\"Scaled_ET_reg\",\n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"ET\", ExtraTreesRegressor(random_state=seed))]\n                 )))\n\npipelines.append(\n                (\"Scaled_BR_reg\",\n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"BR\", BaggingRegressor(random_state=seed))]\n                 ))) \n\npipelines.append(\n                (\"Scaled_Hub-Reg\",\n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"Hub-Reg\", HuberRegressor())]\n                 ))) \n\npipelines.append(\n                (\"Scaled_BayRidge\",\n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"BR\", BayesianRidge())]\n                 ))) \n\npipelines.append(\n                (\"Scaled_XGB_reg\",\n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"XGBR\", XGBRegressor(seed=seed, n_estimators=300))]\n                 ))) \n\npipelines.append(\n                (\"Scaled_DT_reg\",\n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"DT_reg\", DecisionTreeRegressor())]\n                 ))) \n\npipelines.append(\n                (\"Scaled_KNN_reg\",\n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"KNN_reg\", KNeighborsRegressor())]\n                 )))\npipelines.append(\n                (\"Scaled_ADA-Reg\",\n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"ADA-reg\", AdaBoostRegressor())\n                 ]))) \n\npipelines.append(\n                (\"Scaled_Gboost-Reg\",\n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"GBoost-Reg\", GradientBoostingRegressor())]\n                 )))\n\npipelines.append(\n                (\"Scaled_RFR_PCA\",\n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"PCA\", PCA(n_components=3)),\n                     (\"XGB\", RandomForestRegressor())]\n                 )))\n\npipelines.append(\n                (\"Scaled_XGBR_PCA\",\n                 Pipeline([\n                     (\"Scaler\", StandardScaler()),\n                     (\"PCA\", PCA(n_components=3)),\n                     (\"XGB\", XGBRegressor())]\n                 )))\n\n#'neg_mean_absolute_error', 'neg_mean_squared_error','r2'\nscoring = 'r2'\nn_folds = 7\n\nresults, names  = [], [] \n\nfor name, model  in pipelines:\n    kfold = KFold(n_splits=n_folds, random_state=seed)\n    cv_results = cross_val_score(model, select_X_train, y_train, cv= kfold,\n                                 scoring=scoring, n_jobs=1)    \n    names.append(name)\n    results.append(cv_results)    \n    msg = \"%s: %f (+\/- %f)\" % (name, cv_results.mean(),  cv_results.std())\n    print(msg)\n    \n# boxplot algorithm comparison\nfig = plt.figure(figsize=(15,6))\nfig.suptitle('Algorithm Comparison', fontsize=22)\nax = fig.add_subplot(111)\nsns.boxplot(x=names, y=results)\nax.set_xticklabels(names)\nax.set_xlabel(\"Algorithmn Name\", fontsize=20)\nax.set_ylabel(\"R Squared Score of Models\", fontsize=18)\nax.set_xticklabels(ax.get_xticklabels(),rotation=45)\nplt.show()","dfa07f4a":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers","708a5fca":"data_dummies =  pd.get_dummies(data)\n# X and y for supervised learning\nX = data_dummies.drop(['KWH'],axis = 1)\ny = data_dummies['KWH']","21eb75d3":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","ae81d989":"My_Deep_Model = keras.Sequential()","f0f85873":"X_train.shape[1]","009488a7":"X.shape[1]","367bcc44":"My_Deep_Model = keras.Sequential()\nMy_Deep_Model.add(layers.Dense(64, activation=\"relu\", input_dim=X.shape[1]))\nMy_Deep_Model.add(layers.Dense(32, activation=\"relu\"))\nMy_Deep_Model.add(layers.Dense(1))\n","af9402d5":"My_Deep_Model.compile(loss='mse', optimizer='adam')","7c21f2bc":"My_Deep_Model.summary()","11bee56f":"history = My_Deep_Model.fit(X,y , epochs=100 , batch_size=16)","d15abe72":"history.history","fda44288":"Lets check the first two features. ","6325aa22":"<img src=\"https:\/\/www.parsgraphic.ir\/assets\/source\/images\/vector-images16\/572.jpg\" width=\"500\" height=\"250\">","7b76d862":"Here, I would like to answer the following question using visualization:<br>\n\nHow does the size of the house, the number of bedrooms and bathrooms, and a having a pool will impact energy consumption?","ab7eb1bc":"<a id=\"22\"><\/a>\n### B. Variables","8d825f93":"<a id=\"5\"><\/a>\n## 5.Exploring some of the most important variables","de04f73c":"To get a feel of the dataset, I decided to first see which numeric variables have a high correlation with the KWH.","fc8620d8":"Most houses don't have a swimming pool, but again, the pattern is very clear, that houses with swimming pools consume more electricity.","9cc662cb":"<a id='7'><\/a>\n## 7. Visualization of important variables","2ea84b78":"As you can see, there are some highly correlated features with the log_KWH.","84fe624a":"\"Layout file\", which contains descriptive labels and formats for each data variable.","28cb6913":"Below, I am reading the csv\u2019s as dataframes.","f986197d":"**Result:** <br>\n\nBy getting insight from feature importance method, I created two new features and I assumed that those new features would have an acceptable correlation with my targer variable (KWH). However, after creating the new features and comparing their correlation with KWH, we can conclude that there is no strong correlation between the newly created features and our target variable. ","b7091153":"<a id=\"92\"><\/a>\n### B. Data Normalization","26de64a6":"<a id=\"52\"><\/a>\n### B. The most important numeric predictors","7b47817b":"<a id=\"1\"><\/a>\n## 1.Introduction","63aa93d5":"<a id='75'><\/a>\n### E. House information and energy consumption","4d7b88e6":"I'm setting up essential visualisation here.","2f4e6414":"<a id='6'><\/a>\n## 6. Missing data and label encoding\n","2fb40b50":"<a id=\"41\"><\/a>\n### A. Reading the data","a7081377":"<a id=\"82\"><\/a>\n### B. Checking the outlier","6f3d42d6":"The describe method shows basic statistical characteristics of each numerical feature (int64 and float64 types): number of non-missing values, mean, standard deviation, range, median, 0.25 and 0.75 quartiles.","917ac723":"<a id=\"12\"><\/a>\n## 12. References","486b2622":"#### Oven Use ","0ee675b1":"<a id=\"42\"><\/a>\n### B. Data size and structure","629a6262":"<a id=\"10\"><\/a>\n## 10. Model developement","cf70d4bb":"Most hoseholders use Microwave in their homes and we can see that there was a higher energy consumption for users with microwave.","6a633d25":"We can see in this bar plot that the majority of users use their oven a few times per week (4). <br>\n\nOn the other hand, the most energy consumed by the user who used their oven twice a day (2) which is another pattern we came up with on the basis of this data visualization.","09288a16":"<a id=\"32\"><\/a>\n### B. Setup","7e6923e7":"Based on the barplot above, most of the householders use dishwasher 2 or 3 times per week (13). Also, bar -2 shows that the dishwasher use is not applicable most of the times.<br>\n\nOn the other side, we can see a clear pattern based on the boxplot, that the more you use your dishwasher, the more energy is consumed. Maybe because most of the dishwasher uses hot water for at least 40 minutes which consumes a lot of power. Number 30 indicates at least once per day they used their dishwasher.\n","dcd67983":"Here, I would like to answer the following question using visualization:<br>\n\nHow can kitchen appliances like dishwasher, microwave and oven make a difference on energy consumption?<br>","8738027c":"Let\u2019s have a look at dataframe dimensionality and feature types for the 'data' and 'layout'.","5348eaf7":"### Categorical Variables","8cd0aa71":"I will start by importing important libraries as follow:","53b1568d":"Now lets check our categorical features. ","e7a45771":"\nUp to this level, we've got a general understanding of our dataset and what we're dealing with. <br>\n\nNow, I 'd like to dive deeper into our target feature which is \"KWH\".","1d426001":"### Number of Complete Bathrooms ","58c9a321":"Again, looking at the number of the members of the household, we can not find a clear pattern of how number of households can impact energy consumption.","c657227c":"Objective variable: \"KWH\".","497871cf":"based on the information provided government: <br>\n\nMETRO: Housing unit in Census Metropolitan Statistical Area<br>\nMICRO: Housing unit in Census Micropolitan Statistical Area<br>\nNONE:  Housing unit in neither<br>\n\nWe can see that the number of homes located in the Metropolitan Area is around 9 times greater than other areas.","691cd920":"Based on the distribution of each material:\n\n**Roof type:** material 5,6, and -2 had been used the most in constructing the house roof which are 'Composition Shingles', 'Asphalt', and 'Not Applicable' respectively. <br>\n\n**Roof type Energy Consumption:** Based on the box plot, the most energy consumption roofs in terms of log_KWH are roof type 3, 5, and 7 respectively. ","587c8cfc":"### Glass type frequency and energy consumption","2876893e":"1. [Introduction](#1)<br>\n2. [Problem Definition](#2)<br>\n    A. [Goal](#21)<br>\n    B. [Variables](#22)<br>\n3. [Loading and Exploring Data](#3)<br>\n    A. [Loading libraries](#31)<br>\n    B. [Setup](#32)<br>\n    C. [Version](#33)<br>\n4. [Exploratory Data Analysis(EDA)](#4)<br>\n    A. [Reading the data](#41)<br>\n    B. [Data size and structure](#42)<br>\n5. [Exploring some of the most important variables](#5)<br>\n    A. [The response variable; KWH](#51)<br>\n    B. [The most important numeric predictors](#52)<br>\n    B.1 [Correlations with KWH](#53)<br>\n6. [Missing data and label encoding](#6)<br>\n    A. [Completeness of the data](#61)<br>\n    B. [Label encoding](#62)<br>\n7. [Visualization of important variables](#7)<br> \n    A. [Finding variable importance with a quick XGBRegressor](#71)<br>\n    B. [Construction material and energy consumption](#72)<br>\n    C. [Household information and energy consumption](#73)<br>\n    D. [Kitchen appliances and energy consumption](#74)<br>\n    E. [House information and energy consumption](#75)<br>\n8. [Data Preprocessing](#8)<br>\n    A.[Dropping highly correlated variables](#81)<br>\n    B.[checking the outlier](#82)<br>\n    C.[Removing the outlier](#83)<br>\n9. [Feature Engineering](#9)<br>\n    A.[Feature Extraction](#91)<br>\n    B.[Data Normalization](#92)<br>\n    C.[Feature Selection based on Feature Importance](93)<br>\n10. [Modeling](#10)<br>\n    A. [Machine Learning Pipeline](#101)<br>\n    B. [Deep Learning ](#102)<br>\n\n11. [Summary and Conclusion](#11)<br>\n    \n12. [References](#12)<br>","00784092":"To fix the skewness, I am taking the log of KWH.","de19f2ad":"**Wall type:** material 3,1, and 2 had been used the most in constructing the houses walls which are 'Siding (Aluminum, Vinyl, Steel)','Brick', and 'Wood' respectively. <br>\n\n**Roof type Energy Consumption:** Based on the box plot, the most energy consumption walls in terms of log_KWH are wall type 7, 6, and 3 respectively. ","f5053e8c":"<a id='74'><\/a>\n### C. Kitchen appliances and energy consumption","63e44533":"<a id='62'><\/a>\n### B. Label encoding","6206d721":"Here we can see how many unique values we have for the categorical features, what is the top value and its frequencies","645f8561":"In order to see statistics on non-numerical features, one has to explicitly indicate data types of interest in the include parameter.","048b7e5a":"# From: https:\/\/github.com\/foroughkarandish\/Residential-Energy-Consumption-Survey\n\n#### Table of Contents","d130042c":"#### Dishwasher Use ","8b42b038":"<a id='101'><\/a>\n### A. Machine Learning Pipeline","520e6338":"####  Number of Household Members frequency and energy consumption","1c78ac29":"<a id=\"93\"><\/a>\n### C. Feature Selection based on Feature Importance","27781a64":"### The target feature (KWH) and categorical features","a0373b7f":"<a id=\"91\"><\/a>\n### A.Feature Extraction","d22532f1":"<img src=\"https:\/\/abzarbaloot.com\/blog\/wp-content\/uploads\/2019\/07\/Building-Materials.jpg\" width=\"500\" height=\"250\">","518253b2":"The bar plot above doesn't show almost any difference in energy consumption based on the age of the house. It seems that modern and old houses use almost the same amount of energy.","07c78bae":"<a id='61'><\/a>\n### A. Completeness of the data","d6f0a135":"### Number of Bedrooms","d27f5da0":"In this section, I will visualise the count of the frequency of use of each of the above mentioned kitchen appliances, as well as their effect on energy consumption.","61d5b9e0":"float(64), int(64), and object are the data types of our features. We see that 50 feature are of type float(64), 885 features are of type int(64), and 5 features are of type object.<br>\nWith this same method, we can easily see if there are any missing values. Here, we can see that the RangeIndex is: 12083 entries, 0 to 12082. This shows the same number of rows we saw before with shape. <br>\nHowever, just to make sure, I'm going to use 'isnull()' method to check if we have any mising values.","7d7bf95e":"<img src=\"https:\/\/image.freepik.com\/free-vector\/modern-house-villa-exterior-with-swimming-pool-backyard-illustration_7081-1626.jpg\" width=\"500\" height=\"250\">\n","2a1bf46d":"<a id='73'><\/a>\n### C. Household information and energy consumption","a2fb0623":"We can see the mean from described method is 11288 KWH and the std is 7641 KWH. It also shows that the min and max are 17 KWH and and 150254 KWH respectively.<br>\n\nMoreover, the Median which is 50% quartile is 9623 KWH, the lower quartile (25%) is 5837 KWH and the higher quartile (75%) is 14765 KWH.<br>\n\n\nA high standard deviation indicates that the data points are spread out over a large range of values and have a large distance from the mean.","5ad2d7a7":"#### Age of Household Members frequency and energy consumption","ccc9645d":"<a id=\"21\"><\/a>\n### A. Goal","8fcc3ad2":"Checking the versions of my main libraries that I'm going to use in this project.","75ba0674":"#### Year Made frequency and energy consumption","64ced540":"Here, I would like to answer the following questions: \n\n1- Is there an energy consumption pattern that is based on the year the house was built?<br>\n\n2- Does the number of household members and the age of household members have an impact on energy consumption?<br>","2787ab60":"<a id=\"11\"><\/a>\n## 11. Summary and Conclusion","b3c0ace7":"<img src=\"https:\/\/blogadmin.planning.center\/content\/images\/2020\/06\/2020-new-household-form.png\" width=\"500\" height=\"250\">","6714bb99":"Based on GradientBoostingRegressor model, we will select the most important features that their importance is significant (more than threshold).","d0d7028b":"<a id=\"2\"><\/a>\n## 2.Problem Definition","be01e0f7":"We can see from the box plot that most of the features use less than 80000 KWH (12 in the plot because I transformed KWH to log_KWH) of electricity.  However, we have an unusual outlier (arount 12 log_KWH). I'm going to check this outlier and remove it later. ","43eb46dc":"<a id='71'><\/a>\n### A. Finding variable importance with a quick XGBRegressor\n","10493f36":"<a id=\"81\"><\/a>\n### A. Dropping highly correlated variables","752f2e9f":"The distribution of 'KWH' shows that the it is not normally distributed and has a long tail toward the right (positive skewness). <br>\n\nLet's look first at KWH's skewness and kurtosis.","f0fce41e":"U: Urban<br>\nR: Rural<br>\nThis indicates that in urban areas about 80% of the houses are located.","05fe42da":"Construction Materials:\n\nAs I mentioned earlier, I would like to know will using different construction materials such as roof type, wall type, and glass type have any impact on the energy consumption?","44c18946":"<a id=\"53\"><\/a>\n### B.1. Correlations with KWH","6d4f18e6":"### POOL: Yes, No, Not Applicable","9d58e91e":"Although the correlations are giving a good overview of the most important numeric variables and multicolinerity among those variables, I wanted to get an overview of the most important variables including the categorical variables before moving on to visualization.","8fbd8bbe":"In this project, we investigated the Residential Energy Consumption based on KWH. \n\nThe datset had many features (940 features) and to find the most important features to help to predict our objective variable  (KWH), I used feature importance using XGBoostRegressor to find the most informative features. \nI tried to explore the data using different visualisation techniques to identify the possible energy consumption trends.\nThen I prepared the data in the preprocessing section for further analysis of Machine Learning and Deep Learning models. \nA diverce range of Machine Learning models had been used to find the best models. We have used Keras from the TensorFlow library to compare the results with traditional Machine Learning algorithms, too.\n\nTo wrap up this project, we can conclude that by using the feature importance method, we came to the conclusion that certain features such as the frequency of use of kitchen appliances and the house's square footage (number of bathrooms and bedrooms) have a direct effect on energy consumption.\nIn addition, only using Machine Learning models was satisfying enough for this project and we used Deep Learning for further research only. To evaluate the performance of our models we used R2-score. ","0d131b58":"<a id=\"9\"><\/a>\n## 9.Feature Engineering","2d6ad350":"### Roof type frequency and energy consumption","d43eb58b":"<a id=\"4\"><\/a>\n## 4.Exploratory Data Analysis(EDA)","a28110ba":"The very first important questions we need to ask ourself is to understand the problem and how we can solve it. I would like to ask the following questions before starting any machine learning projects from my team leader. <br>\n\n\n\n**General Questions**<br>\n\n1- What is the problem?<br>\n2- Why does the problem need to be solved?<br>\n3- What exactly the business objective is? <br>\n4- How does the company expect to use and benefit from this model?<br>\n5- What are the current solution looks like (if any)?<br>\n6- How would I solve the problem?<br>\n\nAnd now I'd like to ask the following questions to better understand the problem before I start the project. <br>\n\n1- Is there a pattern in energy consumption in general?<br>\n2- Which housing characteristics have the most impact on energy consumption?<br>\n3- How does the size of the house, the number of bedrooms and bathrooms, and a having a pool will impact energy consumption? <br>\n4- Does the number of household members and the age of household members have an impact on energy consumption?<br>\n5- Will construction materials like roof, wall and type of glass have any impact on the energy consumption?<br>\n6- Is there an energy consumption pattern that is based on the year the house was built?<br>\n7- How can kitchen appliances like dishwasher, microwave and oven make a difference on energy consumption?<br>","57c67331":"<a id=\"3\"><\/a>\n## 3.Loading and Exploring Data","62ec0324":"<a id=\"33\"><\/a>\n### C. Version","5bd852de":"Once again, looking at the age of the members of the household, we can not find a clear pattern of how age can impact energy consumption.","6febe39b":"Looking at feature importances using XGBRegressor method, we can see that as expected, the plot suggests that there are some features that are very informative, while the remaining are not.<br>\n\nAlso, the first feature \"BTUEL\" is directly express the label KWH, and I will drop this feature later for the modeling. ","1bc89512":"<a id=\"83\"><\/a>\n### C. Removing the outlier","b7d76f9e":"<a id=\"72\"><\/a>\n### B. Construction material and energy consumption","8f1933dc":"From the output, we can see that the 'data' contains 12083 rows and 940 columns and the 'layout' contains 940 rows and 5 columns.","f995ba2a":"Most of the houses have two or three number of bedrooms.\n\nAgain, like previous step (number of bathrooms) we can see a very nice and clear pattern on the box plot that indicates houses with more bedrooms are consuming more electricity.","fce817bd":"$$R^2 =\\frac{SSres}{SStot} =\\frac{\\Sigma_i (y_i -  \\hat{y_i})^2 }{\\Sigma_i (y_i - \\bar{y_i})^2}$$","bc061e05":"**Glass type:** material 2 and 1 had been used the most in constructing the houses glass which are 'Double-pane glass' and 'Single-pane glass' respectively. <br>\n\n**Roof type Energy Consumption:** Based on the box plot, the most energy consumption Glass in terms of log_KWH are Glass type 2, and 1 respectively.","6f83db02":"<a id=\"8\"><\/a>\n## 8. Data Preprocessing","507d405f":"I will visualise the count of each material in this section, as well as their effect on energy consumption.<br>","4834f741":"The Residential Energy Consumption Survey (RECS) is a national area-probability sample survey that statistically identifies housing units across the United States to collect energy-related data for occupied primary residential units. <br>\n\nThis survey mainly focused on Residential Energy Consumption to  to provide information about their household characteristics, energy-using equipments, fuels used, and other information related to energy use [1].\n\nMoreover, this survey then used to estimate the total and average energy end uses at various levels of geography, by housing unit type, or other\ntabulations of interest [2].","f77dfdbb":"<a id=\"51\"><\/a>\n### A. The response variable; KWH","47bb7700":"#### Microwave Use","e3775ee4":"Great news. No missing values.","352e605b":"The goal of this project is to explore the data, Prepare the data for further processig, and build a model that predicts the energy consumption. <br>\n\nThe objective variable is \"KWH\" which stands for kilowatt-hour.","ffcfe79c":"From the comparison chart of the algorithms we can see that three of our models, namely Ridge, Hub Ridge, and Bay Ridge, had a very good results.","4209a1c0":"<img src=\"https:\/\/www.meaningfulwomen.com\/wp-content\/uploads\/Watching-Your-Energy-Usage.jpg\" width=\"500\" height=\"250\">","9e18d5eb":"[1]. [Data](https:\/\/www.eia.gov\/consumption\/residential\/data\/2009\/index.php?view=microdata)<br>\n[2]. [Residential Energy Consumption Survey (RECS) End-Use Models FAQs](https:\/\/www.eia.gov\/consumption\/residential\/methodology\/2009\/pdf\/faqs-enduse-models022013.pdf)<br>\n[3]. [Assessment of consumption and expenditure data collected from energy suppliers against bill data obtained from interviewed households: Case study with 2009 RECS](https:\/\/www.eia.gov\/consumption\/residential\/data\/2009\/pdf\/recs_ess_studypaper.pdf)<br>","f7a68957":"We measured the performace of our model using R2 square. The R-squared is calculated by dividing sum of squares of residuals from the regression model (given by SSres) by total sum of squares of errors from the average model (given by SStot) and then subtract it from 1.","a55b6ebe":"### Wall type frequency and energy consumption","122a4bde":"Most of the houses have one and two complete bathrooms.\n\nWe can see a very nice and clear pattern on the box plot that indicates houses with more bathrooms are consuming more electricity. ","1cffd71d":"<a id=\"102\"><\/a>\n### B. Deep Learning","c6b0d36a":"We can see here each categorical variable and their related instances.<br>\n\nNext, we are going to check the distribution of each instances for each categorical variable.","b08084d8":"First of all, I would like to see which variables contain missing values.","86252368":"<a id=\"31\"><\/a>\n### A. Loading libraries","967650b0":"We can also use the info() method to output some general information about the dataframe:","3b17ad15":"We would like to add three new features into our datasets based on the importance of the features we got from the feature importance method earlier.<br>\n\nThe new features are as follow:<br>\n\n1- Considering the space of the house with regards to number of rooms and number of complete bathrooms.<br>\n2- Considering the energy consumption Ovenuse and Dishwasher use.<br>"}}